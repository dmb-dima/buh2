// Обработчик события ПередЗаписью объекта.
//
Процедура ПередЗаписью(Отказ)
	// проверим наименование
	Если ПустаяСтрока(Наименование) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не заполнено наименование!", Отказ);
		Возврат;
	КонецЕсли;
	
	// Проверим, есть ли пересечения с другими элементами
	Если Не Ссылка.Пустая() И ЕстьПересечения(Отказ) Тогда
		Возврат;
	КонецЕсли;
	
	// Проверим, есть ли для не предопределенного элемента в назначении ссылки на справочники
	Если Не Предопределенный Тогда
		Для Каждого Тип Из ТипЗначения.Типы() Цикл
			Если Справочники.ТипВсеСсылки().СодержитТип(Тип) Тогда
				ОбщегоНазначения.СообщитьОбОшибке("Недопустимое назначение: '" + Тип + "'. Запись невозможна!", Отказ);
				Возврат;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры // ПередЗаписью()

// Проверить, есть ли свойства у других элементов с одинаковыми наименованиями 
// и пересечениями по назначению
//
// Параметры
//  Нет
//
// Возвращаемое значение:
//   Булево   – Истина если есть пересечения, Ложь если нет
//
Функция ЕстьПересечения(Отказ)
	// Получим ссылки на все ПВХ.НазначенияСвойствКатегорийОбъектов имеющие
	// пересечения с текущим элементом по типу значения
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НазначенияСвойствКатегорийОбъектов.Ссылка,
	|	НазначенияСвойствКатегорийОбъектов.ТипЗначения
	|ИЗ
	|	ПланВидовХарактеристик.НазначенияСвойствКатегорийОбъектов КАК НазначенияСвойствКатегорийОбъектов
	|ГДЕ
	|	НазначенияСвойствКатегорийОбъектов.ЭтоГруппа = ЛОЖЬ
	|	И НазначенияСвойствКатегорийОбъектов.Ссылка <> &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	масПересечения = Новый Массив;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Для Каждого Тип Из Выборка.ТипЗначения.Типы() Цикл
			Если ТипЗначения.СодержитТип(Тип) Тогда
				масПересечения.Добавить(Выборка.Ссылка);
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Если масПересечения.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	// Получим имена всех свойств по текущему элементу
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СвойстваОбъектов.Наименование
	|ИЗ
	|	ПланВидовХарактеристик.СвойстваОбъектов КАК СвойстваОбъектов
	|ГДЕ
	|	СвойстваОбъектов.НазначениеСвойства = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	масИмен = Новый Массив;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Не ПустаяСтрока(Выборка.Наименование) Тогда
			масИмен.Добавить(Выборка.Наименование);
		КонецЕсли;
	КонецЦикла;
	
	Если масИмен.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	// Поищем пересечения
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СвойстваОбъектов.Наименование Как Наименование,
	|	СвойстваОбъектов.Код Как Код,
	|	СвойстваОбъектов.НазначениеСвойства.Наименование Как Назначение
	|ИЗ
	|	ПланВидовХарактеристик.СвойстваОбъектов КАК СвойстваОбъектов
	|ГДЕ
	|	СвойстваОбъектов.Наименование В(&Наименования)
	|	И СвойстваОбъектов.НазначениеСвойства В(&Назначения)";
	Запрос.УстановитьПараметр("Наименования", масИмен);
	Запрос.УстановитьПараметр("Назначения",   масПересечения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Не Выборка.Следующий() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	СтрОшибки = "Уже существует свойство с наименованием " + Выборка.Наименование + " (" + Выборка.Код + ") для '" + Выборка.Назначение + "'. Свойства с одинаковыми наименованиями недопустимо задавать для одинаковых элементов!";
	ОбщегоНазначения.СообщитьОбОшибке(СтрОшибки, Отказ);
	
	Возврат Истина;
КонецФункции // ЕстьПересечения()

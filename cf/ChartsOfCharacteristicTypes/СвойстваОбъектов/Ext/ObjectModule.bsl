Перем КонтролироватьПорядок Экспорт;

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Обработчик события ПередЗаписью объекта.
//
Процедура ПередЗаписью(Отказ)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока(Наименование) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не заполнено наименование реквизита.", Отказ);
		Возврат;
	ИначеЕсли НазначениеСвойства.Пустая() Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указано назначение реквизита.", Отказ);
		Возврат;
	КонецЕсли;
	
	Если НЕ ЭтоНовый() 
	   И НазначениеСвойства <> Ссылка.НазначениеСвойства 
	   И ПолныеПрава.СвойстваОбъектов_СуществуютСсылки(Ссылка) Тогда

		Сообщить("Существуют объекты, которым назначено свойство """ + Наименование + """.
		         |Назначение свойства не может быть изменено, элемент не записан.", 
		         СтатусСообщения.Важное);

		Отказ = Истина;
	КонецЕсли;
	
	Если СуществуютПересечения() Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Отказ
		ИЛИ НЕ ПараметрыСеанса.НаличиеОбменаДаннымиПоОрганизации Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ПодлежитИзменению = ПроцедурыОбменаДаннымиПоОрганизации.ОпределитьПоЭлементуПодлежитИзменениюВТекущейИБ(ЭтотОбъект);
	
	Если НЕ ПодлежитИзменению Тогда
	
		ОбщегоНазначения.СообщитьОбОшибке("Редактирование дополнительных реквизитов запрещено. 
		|Изменять дополнительные реквизиты можно только в головной информационной базе или обладая ролью ""Полные права"". Изменения не могут быть записаны...", Отказ);
	
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события ПередУдалением объекта.
//
Процедура ПередУдалением(Отказ)

	Если Предопределенный Тогда
		Сообщить("Не допускается удаление предопределенных элементов!",СтатусСообщения.Внимание);
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТИРУЕМЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Функция проверяет, есть ли другие свойства с таким же наименованием
// и пересекающимся набором назначений свойств
//
// Параметры
//  Нет.
//
// Возвращаемое значение:
//   Истина, если есть другие свойства, Ложь, если нет.
//
Функция СуществуютПересечения()
	НазначенияОбъекта = Новый Соответствие;
	Для Каждого Назначение Из НазначениеСвойства.ТипЗначения.Типы() Цикл
		НазначенияОбъекта.Вставить(Назначение, Истина);
	КонецЦикла;
	
	Запрос = Новый Запрос();

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СвойстваОбъектов.Код,
	|	СвойстваОбъектов.НазначениеСвойства
	|ИЗ
	|	ПланВидовХарактеристик.СвойстваОбъектов КАК СвойстваОбъектов
	|ГДЕ
	|	СвойстваОбъектов.Наименование = &Наименование
	|	И СвойстваОбъектов.Ссылка <> &Ссылка";
	
	Запрос.УстановитьПараметр("Наименование", Наименование);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НазначениеСвойстваПроверяемого = Выборка.НазначениеСвойства;
		Если Не НазначениеСвойстваПроверяемого.Пустая() И ЗначениеЗаполнено(НазначениеСвойстваПроверяемого.ТипЗначения) Тогда
			Для Каждого Назначение Из НазначениеСвойстваПроверяемого.ТипЗначения.Типы() Цикл
				Если НазначенияОбъекта.Получить(Назначение) <> Неопределено Тогда
					СтрОшибки = "Уже существует свойство с наименованием " + Наименование + " (" + Выборка.Код + ") для '" + Назначение + "'. Свойства с одинаковыми наименованиями недопустимо задавать для одинаковых элементов!";
					ОбщегоНазначения.СообщитьОбОшибке(СтрОшибки);
					Возврат Истина;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
КонецФункции // СуществуютПересечения()


КонтролироватьПорядок = Истина;




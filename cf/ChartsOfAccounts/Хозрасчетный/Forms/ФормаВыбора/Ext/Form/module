Процедура ПриОткрытии()

	СписокСчетов = Новый Массив;
    
	Счет = ПараметрСчет;

	Пока Счет <> Планысчетов.Хозрасчетный.ПустаяСсылка() Цикл

		СписокСчетов.Добавить(Счет);
		Счет = Счет.Родитель;

	КонецЦикла;

	Если СписокСчетов.Количество() <> 0 Тогда

		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("СписокСчетов", СписокСчетов);

		Если ПараметрКорреспонденция = ВидДвиженияБухгалтерии.Дебет Тогда

			Запрос.Текст = "
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	СчетКт КАК Ссылка
			|ИЗ
			|	РегистрСведений.КорректныеКорреспонденцииСчетов КАК КорректныеКорреспонденцииСчетов
			|
			|ГДЕ
			|	СчетДт В (&СписокСчетов)";

		Иначе

			Запрос.Текст = "
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	СчетДт КАК Ссылка
			|ИЗ
			|	РегистрСведений.КорректныеКорреспонденцииСчетов КАК КорректныеКорреспонденцииСчетов
			|
			|ГДЕ
			|	СчетКт В (&СписокСчетов)";

		КонецЕсли;

		Выборка      = Запрос.Выполнить().Выбрать();

		СписокСчетов = Новый Массив;
		ПустойСчет   = Ложь;

		Пока Выборка.Следующий() Цикл

			Если Выборка.Ссылка = Планысчетов.Хозрасчетный.ПустаяСсылка() Тогда

				ПустойСчет = Истина;

				Прервать;

			КонецЕсли;

			СписокСчетов.Добавить(Выборка.Ссылка);

		КонецЦикла;

		Если Не ПустойСчет Тогда

			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("СписокСчетов", СписокСчетов);
			Запрос.Текст = "
			|ВЫБРАТЬ 
			|	Хозрасчетный.Ссылка
			|ИЗ
			|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
			|
			|ГДЕ
			|	Хозрасчетный.Ссылка В ИЕРАРХИИ (&СписокСчетов)";
			Выборка = Запрос.Выполнить().Выбрать();

			СписокЗначений = Новый СписокЗначений;

			Пока Выборка.Следующий() Цикл
				СписокЗначений.Добавить(Выборка.Ссылка);
			КонецЦикла;

			ЭлементОтбора = ПланСчетовСписок.Отбор.Ссылка;

			ЭлементОтбора.ВидСравнения  = ВидСравнения.ВСписке;
			ЭлементОтбора.Значение      = СписокЗначений;
			ЭлементОтбора.Использование = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "КонтрольКорреспонденцииСчетов");

		КонецЕсли;

	КонецЕсли;

	ЭлементыФормы.ДействияФормы.Кнопки.КорректныеСчета.Пометка = ПланСчетовСписок.Отбор.Ссылка.Использование;

КонецПроцедуры

Процедура ДействияФормыКорректныеСчета(Кнопка)

	ПланСчетовСписок.Отбор.Ссылка.Использование = Не ПланСчетовСписок.Отбор.Ссылка.Использование;

	Кнопка.Пометка = ПланСчетовСписок.Отбор.Ссылка.Использование;

КонецПроцедуры

Процедура СписокПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)

	Колонка = ОформлениеСтроки.Ячейки;

	Если ДанныеСтроки.ЗапретитьИспользоватьВПроводках Тогда
		ОформлениеСтроки.ЦветФона = WebЦвета.СветлоЖелтый;
	КонецЕсли;

	Вид = ДанныеСтроки.Вид;

	Если Вид = ВидСчета.Активный  Тогда
		Колонка.Вид.УстановитьТекст("А");

	ИначеЕсли Вид = ВидСчета.Пассивный  Тогда
		Колонка.Вид.УстановитьТекст("П");

	Иначе
		Колонка.Вид.УстановитьТекст("АП");

	КонецЕсли;

КонецПроцедуры

ПланСчетовСписок.Колонки.Добавить("ЗапретитьИспользоватьВПроводках");
ПланСчетовСписок.Колонки.Добавить("Вид");

Перем мЗапрещенныйСчет;

Процедура КодПриИзменении(Элемент)
	
	Если НЕ ЭтоНовый() Тогда
		Возврат;
	КонецЕсли;

	// Если задан субсчет, то в его коде должна быть точка
	Если Найти(Код, ".") > 0 Тогда

		//Найдем код родителя, для этого найдем последнюю точку в коде счета
		ПозицияТочки = СтрДлина(Код);

		Пока Сред(Код, ПозицияТочки, 1) <> "." Цикл

			ПозицияТочки = ПозицияТочки - 1;

		КонецЦикла;

		КодРодителя    = Лев(Код, ПозицияТочки - 1);
		РодительПоКоду = ПланыСчетов.Хозрасчетный.НайтиПоКоду(КодРодителя);

		Если НЕ ЗначениеЗаполнено(РодительПоКоду) Тогда

			Предупреждение("План счетов не содержит счета с кодом "+ КодРодителя);

		ИначеЕсли РодительПоКоду <> Ссылка Тогда

			Родитель       = РодительПоКоду;
			Вид            = Родитель.Вид;
			Забалансовый   = Родитель.Забалансовый;
			Количественный = Родитель.Количественный;
			Валютный       = Родитель.Валютный;

			ЭлементыФормы.ВидыСубконто.Колонки.Валютный.Видимость       = Валютный;
			ЭлементыФормы.ВидыСубконто.Колонки.Количественный.Видимость = Количественный;

		КонецЕсли;

	КонецЕсли;
	
	КодБыстрогоВыбора = СокрЛП(СтрЗаменить(Код, ".", ""));
	
	УстановитьДоступность();

КонецПроцедуры

Процедура ВалютныйПриИзменении(Элемент)

	ЭлементыФормы.ВидыСубконто.Колонки.Валютный.Видимость = Валютный;

КонецПроцедуры

Процедура КоличественныйПриИзменении(Элемент)

	ЭлементыФормы.ВидыСубконто.Колонки.Количественный.Видимость = Количественный;

КонецПроцедуры

Процедура РодительПриИзменении(Элемент)
	
	УстановитьДоступность();
	
КонецПроцедуры

Процедура ВидыСубконтоПриНачалеРедактирования(Элемент, НоваяСтрока)

	Если НоваяСтрока Тогда

		Элемент.ТекущиеДанные.Суммовой       = Истина;
		Элемент.ТекущиеДанные.Валютный       = Истина;
		Элемент.ТекущиеДанные.Количественный = Истина;

	КонецЕсли;

КонецПроцедуры // ВидыСубконтоПриНачалеРедактирования()

Функция ЭтоСчетРасчетов()

	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ссылка",           Ссылка);
	Запрос.УстановитьПараметр("СчетаРасчетов",    СчетаРасчетов);
	Запрос.УстановитьПараметр("СписокИсключений", СписокИсключений);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйВидыСубконто.Ссылка КАК Счет
	|ИЗ
	|	ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто
	|ГДЕ
	|	ХозрасчетныйВидыСубконто.Ссылка = &Ссылка
	|	И ХозрасчетныйВидыСубконто.Ссылка В ИЕРАРХИИ(&СчетаРасчетов)
	|	И (НЕ ХозрасчетныйВидыСубконто.Ссылка В ИЕРАРХИИ (&СписокИсключений))
	|	И ХозрасчетныйВидыСубконто.Ссылка <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСРазнымиДебиторамиИКредиторами)
	|	И ХозрасчетныйВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры)";
	
	ЭтоСчетРасчетов = НЕ Запрос.Выполнить().Пустой();
	Возврат ЭтоСчетРасчетов;

КонецФункции 

Процедура ПриОткрытии()

	ЭлементыФормы.ВидыСубконто.Колонки.Валютный.Видимость       = Валютный;
	ЭлементыФормы.ВидыСубконто.Колонки.Количественный.Видимость = Количественный;

	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ссылка",           Ссылка);
	Запрос.УстановитьПараметр("СписокСчетов",     ЗапрещенныеСчета);
	Запрос.УстановитьПараметр("СписокИсключений", СписокИсключений);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Ссылка
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка = &Ссылка
	|	И Хозрасчетный.Ссылка В ИЕРАРХИИ(&СписокСчетов)
	|	И (НЕ Хозрасчетный.Ссылка В ИЕРАРХИИ (&СписокИсключений))";
	мЗапрещенныйСчет = НЕ Запрос.Выполнить().Пустой();

	Если мЗапрещенныйСчет Тогда

		ЭлементыФормы.КоманднаяПанель1.Кнопки.Добавить.Доступность = Ложь;
		ЭлементыФормы.КоманднаяПанель1.Кнопки.Изменить.Доступность = Ложь;
		ЭлементыФормы.КоманднаяПанель1.Кнопки.Удалить.Доступность  = Ложь;

	КонецЕсли;
	
	ЭлементыФормы.Родитель.ТолькоПросмотр = Предопределенный;
	
	УстановитьДоступность();

КонецПроцедуры // ПриОткрытии()

Процедура ПредупреждениеОНевозможностиИзмененияСоставаВидовСубконто(Отказ)
	
	Предупреждение("Состав видов субконто на этом счете определяется настройкой параметров учета
	               |(меню ""Предприятие"" - ""Настройка параметров учета"").");
	Отказ = Истина;
	
КонецПроцедуры // ПредупреждениеОНевозможностиИзмененияСоставаВидовСубконто()

Процедура ВидыСубконтоПередНачаломИзменения(Элемент, Отказ)

	Если мЗапрещенныйСчет Тогда
		ПредупреждениеОНевозможностиИзмененияСоставаВидовСубконто(Отказ);
	КонецЕсли;

КонецПроцедуры

Процедура ВидыСубконтоПередНачаломДобавления(Элемент, Отказ, Копирование)

	Если мЗапрещенныйСчет Тогда
		ПредупреждениеОНевозможностиИзмененияСоставаВидовСубконто(Отказ);
	КонецЕсли;

КонецПроцедуры

Процедура ВидыСубконтоПередУдалением(Элемент, Отказ)

	Если мЗапрещенныйСчет Тогда
		ПредупреждениеОНевозможностиИзмененияСоставаВидовСубконто(Отказ);
	КонецЕсли;

КонецПроцедуры

Процедура УстановитьДоступность()
	
	Если Не Предопределенный Тогда
		Если ЗначениеЗаполнено(Родитель) Тогда
			ЭлементыФормы.УчетПоПодразделениям.Доступность = Родитель.УчетПоПодразделениям;
			ЭлементыФормы.НалоговыйУчет.Доступность        = Родитель.НалоговыйУчет;
			Если Модифицированность() Тогда
				УчетПоПодразделениям = ?(Родитель.УчетПоПодразделениям, УчетПоПодразделениям, Ложь);
				НалоговыйУчет        = ?(Родитель.НалоговыйУчет, НалоговыйУчет, Ложь);
			КонецЕсли;
		Иначе
			Если Не ЭтоНовый() Тогда
				Запрос = Новый Запрос;
				Запрос.Текст = 
				"ВЫБРАТЬ
				|	ЕСТЬNULL(МАКСИМУМ(Хозрасчетный.УчетПоПодразделениям), ЛОЖЬ) КАК УчетПоПодразделениям,
				|	ЕСТЬNULL(МАКСИМУМ(Хозрасчетный.НалоговыйУчет), ЛОЖЬ) КАК НалоговыйУчет
				|ИЗ
				|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
				|ГДЕ
				|	Хозрасчетный.Родитель В ИЕРАРХИИ(&Родитель)";
				Запрос.УстановитьПараметр("Родитель", Ссылка);
				
				Результат = Запрос.Выполнить();
				Если Результат.Пустой() Тогда
					ЭлементыФормы.УчетПоПодразделениям.Доступность = Истина;
					ЭлементыФормы.НалоговыйУчет.Доступность        = Истина;
				Иначе
					Выборка = Результат.Выбрать();
					Выборка.Следующий();
					ЭлементыФормы.УчетПоПодразделениям.Доступность = Не Выборка.УчетПоПодразделениям;
					ЭлементыФормы.НалоговыйУчет.Доступность        = Не Выборка.НалоговыйУчет;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ЭтоСчетРасчетов() Тогда
	
		НетРасчетовПоДокументам = ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами) = Неопределено;
		Если НетРасчетовПоДокументам Тогда
			Предупреждение("На счетах расчетов с контрагентами обязательно наличие субконто ""Документы расчетов с контрагентами""!");
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры





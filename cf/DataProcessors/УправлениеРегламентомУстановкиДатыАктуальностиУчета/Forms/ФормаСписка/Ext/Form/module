////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем МассивЗаданий;
Перем ЕстьЗаданиеДляВсехОрганизаций;


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()
	
	ОбновитьОтображение();
	УправлениеВидимостью();
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - УПРАВЛЕНИЕ ВИДОМ ЭЛЕМЕНТОВ ФОРМЫ

Процедура ОбновитьПредставлениеРасписания()
	
	ДанныеСтроки = ЭлементыФормы.ТаблицаЗапущенныхЗаданий.ТекущиеДанные;
	// если есть строки в таблице
	Если ДанныеСтроки<>Неопределено Тогда
		ЭлементыФормы.ПредставлениеРасписания.Заголовок = "Выполнять: " + Строка(МассивЗаданий[ЭлементыФормы.ТаблицаЗапущенныхЗаданий.ТекущиеДанные.ИндексМассива].Расписание);
	Иначе
		ЭлементыФормы.ПредставлениеРасписания.Заголовок = "<не выбрано задание>";
	КонецЕсли;
	
Конецпроцедуры

Процедура УправлениеВидимостью()
	
	// если есть регламентное задание для всех организаций,
	// запретим добавление нового
	Если ЕстьЗаданиеДляВсехОрганизаций Тогда
		ЭлементыФормы.КоманднаяПанельУправлениеЗаданиями.Кнопки.ДобавитьЗадание.Доступность = Ложь;
	Иначе
		ЭлементыФормы.КоманднаяПанельУправлениеЗаданиями.Кнопки.ДобавитьЗадание.Доступность = Истина;
	КонецЕсли;
	
Конецпроцедуры

Процедура ОбновитьОтображение()
	
	// запомним количество заданий до обновления
	СтароеКоличествоЗаданий = ТаблицаЗапущенныхЗаданий.Количество();
	ДанныеСтроки = ЭлементыФормы.ТаблицаЗапущенныхЗаданий.ТекущаяСтрока;
	Если ДанныеСтроки<>Неопределено Тогда
		ИндексМассива = ДанныеСтроки.ИндексМассива;
	КонецЕсли;
	
	// очистим таблицу заданий, затем заполним ее существующими на
	// данный момент заданиями
	ТаблицаЗапущенныхЗаданий.Очистить();
	// получим массив существующих регламентных заданий
	МассивЗаданий = РегламентныеЗадания.ПолучитьРегламентныеЗадания(Новый Структура("Метаданные", "УстановкаДатыАктуальностиУчета"));
	ЕстьЗаданиеДляВсехОрганизаций = Ложь;
	
	// на основании данных массива, заполним таблицу
	Для Каждого ЭлементМассива Из МассивЗаданий Цикл
		
		МассивЗаданий.Найти(ЭлементМассива);
		Организация =Справочники.Организации.ПустаяСсылка();
		Если ЗначениеЗаполнено(ЭлементМассива.Ключ) Тогда
			ВыборкаПоОрганизации = Справочники.Организации.Выбрать();
			Пока ВыборкаПоОрганизации.Следующий() Цикл
				Если Строка(ВыборкаПоОрганизации.Ссылка.УникальныйИдентификатор()) = ЭлементМассива.Ключ Тогда
					Организация = ВыборкаПоОрганизации.Ссылка;
					прервать;
				КонецЕсли;
			КонецЦикла;
		Иначе
			ЕстьЗаданиеДляВсехОрганизаций = Истина;
		КонецЕсли;
		
		НоваяСтрока = ТаблицаЗапущенныхЗаданий.Добавить();
		НоваяСтрока.Наименование = ЭлементМассива.Наименование;
		НоваяСтрока.Использование = ЭлементМассива.Использование;
		НоваяСтрока.ИндексМассива = МассивЗаданий.Найти(ЭлементМассива);
		НоваяСтрока.Организация = Организация;
		
	КонецЦикла;
	
	Если ТаблицаЗапущенныхЗаданий.Количество()<>0 Тогда
		// если количество существующих заданий после обновления отображения
		// изменилось - спозиционируемся на последней строке таблицы
		Если СтароеКоличествоЗаданий<>ТаблицаЗапущенныхЗаданий.Количество() Тогда
			ЭлементыФормы.ТаблицаЗапущенныхЗаданий.ТекущаяСтрока = ТаблицаЗапущенныхЗаданий.Получить(ТаблицаЗапущенныхЗаданий.Количество()-1);
		Иначе
			// ничего не изменилось, определим позицию в таблице
			Если ДанныеСтроки<>Неопределено Тогда
				ЭлементыФормы.ТаблицаЗапущенныхЗаданий.ТекущаяСтрока = ТаблицаЗапущенныхЗаданий.Получить(ИндексМассива);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ОбновитьПредставлениеРасписания();
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура ДобавитьЗадание()
	
	// определяем форму редактирования заданий
	// и передаем необходимые параметры
	ФормаНастройки = ПолучитьФорму("ФормаРедактированияЗадания");
	ФормаНастройки.Задание = Неопределено;
	ФормаНастройки.Организация = Справочники.Организации.ПустаяСсылка();
	ФормаНастройки.Расписание = Новый РасписаниеРегламентногоЗадания;
	// открываем форму редактирования нового задания
	ПараметрЗакрытияФормы = ФормаНастройки.ОткрытьМодально();
	// случай, когда в форме редактирования нажата кнопка ОК
	Если ПараметрЗакрытияФормы = Истина Тогда
		ОбновитьОтображение();
		УправлениеВидимостью();
	КонецЕсли;
	
КонецПроцедуры

Процедура РедактироватьЗадание()
	
	// определяем форму редактирования заданий
	// и передаем необходимые параметры
	ФормаНастройки = ПолучитьФорму("ФормаРедактированияЗадания");
	Задание = МассивЗаданий[ЭлементыФормы.ТаблицаЗапущенныхЗаданий.ТекущиеДанные.ИндексМассива];
	ФормаНастройки.Задание = Задание;
	ФормаНастройки.Организация = ЭлементыФормы.ТаблицаЗапущенныхЗаданий.ТекущиеДанные.Организация;
	ФормаНастройки.Расписание = Задание.Расписание;
	// открываем форму редактирования нового задания
	ПараметрЗакрытияФормы = ФормаНастройки.ОткрытьМодально();
	// случай, когда в форме редактирования нажата кнопка ОК
	Если ПараметрЗакрытияФормы = Истина Тогда
		ОбновитьОтображение();
		УправлениеВидимостью();
	КонецЕсли;
	
КонецПроцедуры

Процедура ТаблицаЗапущенныхЗаданийПриАктивизацииСтроки(Элемент)
	
	ДанныеСтроки = ЭлементыФормы.ТаблицаЗапущенныхЗаданий.ТекущиеДанные;
	Если ДанныеСтроки<>Неопределено Тогда
		ЭлементыФормы.ПредставлениеРасписания.Заголовок = "Выполнять: " + Строка(МассивЗаданий[ЭлементыФормы.ТаблицаЗапущенныхЗаданий.ТекущиеДанные.ИндексМассива].Расписание);
	Иначе
		ЭлементыФормы.ПредставлениеРасписания.Заголовок = "<не выбрано задание>";
	КонецЕсли;
	
	Если ДанныеСтроки = Неопределено Тогда
		ЭлементыФормы.КоманднаяПанельУправлениеЗаданиями.Кнопки.Удалить.Доступность = Ложь;
	Иначе
		Задание = МассивЗаданий[ЭлементыФормы.ТаблицаЗапущенныхЗаданий.ТекущиеДанные.ИндексМассива];
		Если Задание.Предопределенное Тогда
			ЭлементыФормы.КоманднаяПанельУправлениеЗаданиями.Кнопки.Удалить.Доступность = Ложь;
		Иначе
			ЭлементыФормы.КоманднаяПанельУправлениеЗаданиями.Кнопки.Удалить.Доступность = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ТаблицаЗапущенныхЗаданийПередУдалением(Элемент, Отказ)
	
	Задание = МассивЗаданий[ЭлементыФормы.ТаблицаЗапущенныхЗаданий.ТекущиеДанные.ИндексМассива];
	Если Задание.Предопределенное Тогда
		Отказ = Истина;
	Иначе
		Задание.Удалить();
	КонецЕсли;
	
	ОбновитьОтображение();
	УправлениеВидимостью();
		
КонецПроцедуры

Процедура ТаблицаЗапущенныхЗаданийПередНачаломИзменения(Элемент, Отказ)
	
	РедактироватьЗадание();
	Отказ = Истина;
	
КонецПроцедуры

Процедура ТаблицаЗапущенныхЗаданийПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	ДобавитьЗадание();
	Отказ =Истина;
	
КонецПроцедуры

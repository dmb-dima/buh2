
Процедура ЗаписатьДанные()
	
	// это новое регламентное задание
	Если Задание = Неопределено Тогда
		Задание = РегламентныеЗадания.СоздатьРегламентноеЗадание("УстановкаДатыАктуальностиУчета");
	КонецЕсли;
	
	// заполняем параметры задания
	Задание.Наименование = Наименование;
	Задание.Использование = Использование;
	Задание.КоличествоПовторовПриАварийномЗавершении = КоличествоПовторовПриАварийномЗавершении;
	Задание.ИнтервалПовтораПриАварийномЗавершении = ИнтервалПовтораПриАварийномЗавершении;
	Задание.Расписание = Расписание;
	Задание.ИмяПользователя = ПользователиВыбор;
	МассивПараметров = Новый Массив;
	Если ЗначениеЗаполнено(Организация) Тогда
		Задание.Ключ = Строка(Организация.УникальныйИдентификатор());
		МассивПараметров.Добавить(Организация);		
	Иначе
		Задание.Ключ = Строка(Справочники.Организации.ПустаяСсылка().УникальныйИдентификатор());;
		МассивПараметров.Добавить(Неопределено);		
	КонецЕсли;
	Задание.Параметры = МассивПараметров;
	Задание.Записать();
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура РасписаниеНажатие(Элемент)
	
	// создаем диалог редактирования расписания регламентного задания
	Диалог = Новый ДиалогРасписанияРегламентногоЗадания(Расписание);
	
	Если Диалог.ОткрытьМодально() Тогда
		Расписание = Диалог.Расписание;
	КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

Процедура ОсновныеДействияФормыЗаписать(Кнопка)
	
	// записываем задание
	ЗаписатьДанные();
	
КонецПроцедуры

Процедура ОсновныеДействияФормыОК(Кнопка)
	
	// записываем задание и закрываем форму с параметром = ИСТИНА
	ЗаписатьДанные();
	ЭтаФорма.Закрыть(Истина);
	
КонецПроцедуры

// процедура вызывается при закрытии формы
Процедура ОсновныеДействияФормыОсновныеДействияФормыЗакрыть(Кнопка)
	
	// новое задание
	Если Задание = Неопределено Тогда
		
		Ответ = Вопрос("Данные были изменены. Сохранить?", РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			ЗаписатьДанные();
			ЭтаФорма.Закрыть(Истина);
		Иначе
			ЭтаФорма.Закрыть(Ложь);
		КонецЕсли;
		
	// редактирование существующего задания
	Иначе
		
		НовыйКлюч = ?(ЗначениеЗаполнено(Организация),Строка(Организация.УникальныйИдентификатор()),"");
		// проверяем, изменились ли параметры задания
		Если (Задание.Наименование<>Наименование) ИЛИ (Задание.Ключ<>НовыйКлюч)
			 ИЛИ (Задание.Использование<>Использование) ИЛИ (Задание.Расписание<>Расписание)
			 ИЛИ (Задание.КоличествоПовторовПриАварийномЗавершении <> КоличествоПовторовПриАварийномЗавершении)
			 ИЛИ (Задание.ИнтервалПовтораПриАварийномЗавершении <> ИнтервалПовтораПриАварийномЗавершении) Тогда
			Ответ = Вопрос("Данные были изменены. Сохранить?", РежимДиалогаВопрос.ДаНет);
			Если Ответ = КодВозвратаДиалога.Да Тогда
				ЗаписатьДанные();
				ЭтаФорма.Закрыть(Истина);
			Иначе
				ЭтаФорма.Закрыть(Ложь);
			КонецЕсли;
		Иначе
			ЭтаФорма.Закрыть(Ложь);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()
	
	// вызывается редактирование существующего задания
	Если Задание<>Неопределено Тогда
		
		Наименование = Задание.Наименование;
		Использование = Задание.Использование;
		КоличествоПовторовПриАварийномЗавершении = Задание.КоличествоПовторовПриАварийномЗавершении;
		ИнтервалПовтораПриАварийномЗавершении = Задание.ИнтервалПовтораПриАварийномЗавершении;
		ПользователиВыбор = Задание.ИмяПользователя;
		
	КонецЕсли;
	
	Пользователи = ПользователиИнформационнойБазы.ПолучитьПользователей();
	
	Для Каждого Пользователь из Пользователи Цикл
		
		ЭлементыФормы.ПользователиВыбор.СписокВыбора.Добавить(Пользователь.Имя, Пользователь.ПолноеИмя);
		
	КонецЦикла;
	
	ЭлементыФормы.ПользователиВыбор.СписокВыбора.НайтиПоЗначению(ПользователиВыбор);
	
Конецпроцедуры


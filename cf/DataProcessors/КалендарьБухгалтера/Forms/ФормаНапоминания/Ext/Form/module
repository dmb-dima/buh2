Перем мВыбраннаяФормаКалендаря Экспорт;
Перем мПериодичностьКалендарь Экспорт;
Перем мДатаКонцаПериодаОтчетаКалендарь Экспорт;
Перем Организация Экспорт;
Перем ОтборКодИФНС Экспорт;
Перем ОтборПериод Экспорт;

Процедура ПриОткрытии()
	ДатаНапоминания = ОбщегоНазначения.ПолучитьРабочуюДату();
	ЭтаФорма.Заголовок = "Напоминания календаря бухгалтера: " + Формат(ДатаНапоминания, "ДФ='dd ММММ yyyy';ДЛФ=ДД") + ", " + Формат(ДатаНапоминания, "ДФ='дддд'");
	Сигнал();
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	События = ЭтаФорма.НачальноеЗначениеВыбора;
	ОтборКодИФНС = Ложь;
КонецПроцедуры

Процедура СобытияПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	ФормаЗаполняетсяНарастающимИтогом = ДанныеСтроки.НарастающийИтог;
	Периодичность = ДанныеСтроки.Периодичность;
	ТипСообщения = ДанныеСтроки.ТипСообщения;

	Если (Периодичность = "Квартальная") И (ФормаЗаполняетсяНарастающимИтогом) Тогда
		ОформлениеСтроки.Ячейки.ЗаПериод.Значение = ПредставлениеПериода(НачалоГода(ДанныеСтроки.ЗаПериодС), КонецДня(ДанныеСтроки.ЗаПериодПо), "ФП=Истина");
	ИначеЕсли (Периодичность = "Месячная") И (ФормаЗаполняетсяНарастающимИтогом) Тогда
		Если Месяц(ДанныеСтроки.ЗаПериодПо) = 1 Тогда
			СтрПериодОтчета = Формат(ДанныеСтроки.ЗаПериодПо, "ДФ='ММММ гггг'") + " г." ;
		Иначе
			СтрПериодОтчета = "Январь - " + Формат(ДанныеСтроки.ЗаПериодПо, "ДФ='ММММ гггг'") + " г." ;
		КонецЕсли;
		ОформлениеСтроки.Ячейки.ЗаПериод.Значение = СтрПериодОтчета;
	Иначе
		ОформлениеСтроки.Ячейки.ЗаПериод.Значение = ПредставлениеПериода(НачалоДня(ДанныеСтроки.ЗаПериодС), КонецДня(ДанныеСтроки.ЗаПериодПо), "ФП=Истина");
	КонецЕсли;

	ОформлениеСтроки.Ячейки.Картинка.УстановитьКартинку(БиблиотекаКартинок.НапоминаниеРО);

	// Для признака событий "Уплата" название налога хранится в реквизите "ИсточникОтчета".
	Если ТипСообщения = Перечисления.СообщенияДляРегОтчетов.УплатаНалога Тогда
		ОформлениеСтроки.Ячейки.НазваниеОтчетаИлиНалога.Значение = ДанныеСтроки.ИсточникОтчета;
	ИначеЕсли ТипСообщения = Перечисления.СообщенияДляРегОтчетов.СдачаОтчета Тогда
		ОформлениеСтроки.Ячейки.НазваниеОтчетаИлиНалога.Значение = ДанныеСтроки.Название;
	КонецЕсли;

КонецПроцедуры

// ОткрытьПоСтроке
//
Процедура ОткрытьПоСтроке(ВыбраннаяСтрока)
	
	Если ВыбраннаяСтрока.ТипСообщения = Перечисления.СообщенияДляРегОтчетов.УплатаНалога Тогда
		
		Если Метаданные.Документы.Найти("ПлатежноеПоручениеИсходящее") <> Неопределено Тогда
			ПлатИсх = Документы.ПлатежноеПоручениеИсходящее.СоздатьДокумент();
		Иначе
			ПлатИсх = Документы.ПлатежноеПоручение.СоздатьДокумент();
		КонецЕсли;
		
		ПлатИсх.Организация = ВыбраннаяСтрока.Организация;
		
		Если Метаданные.Перечисления.Найти("ВидыОперацийППИсходящее") <> Неопределено И РегламентированнаяОтчетность.СвойствоОпределено(ПлатИсх, "ВидОперации") Тогда
			ПлатИсх.ВидОперации = Перечисления.ВидыОперацийППИсходящее.ПеречислениеНалога;
		КонецЕсли;
		
		ФормаПер = ПлатИсх.ПолучитьФорму();
		ФормаПер.Открыть();
		Возврат;
		
	КонецЕсли;

	Если ВыбраннаяСтрока.Периодичность = "Месячная" Тогда
		Периодичность = Перечисления.Периодичность.Месяц;
	ИначеЕсли ВыбраннаяСтрока.Периодичность = "Квартальная" Тогда
		Периодичность = Перечисления.Периодичность.Квартал;
	Иначе
		Периодичность = Неопределено;
	КонецЕсли;

	ДатаНач = НачалоДня(ВыбраннаяСтрока.ЗаПериодС);
	ДатаКон = КонецДня(ВыбраннаяСтрока.ЗаПериодПо);
	ОрганизацияОтбор = ВыбраннаяСтрока.Организация;
	Организация = Новый СписокЗначений();
	Организация.Добавить(ОрганизацияОтбор);

	ИсточникОтчета = ВыбраннаяСтрока.ИсточникОтчета;
	ДокументыОтчета = РегламентированнаяОтчетность.ДокументыСУчетомКритериевОтбораКалендарь(ИсточникОтчета, ДатаНач, ДатаКон, ОрганизацияОтбор, "", ВыбраннаяСтрока.Периодичность);
	ОтборПериод = Истина;

	Если ДокументыОтчета <> 0 Тогда
		мВыбраннаяФормаКалендаря = ИсточникОтчета;
		мПериодичностьКалендарь = "Уникальная";
		мДатаКонцаПериодаОтчетаКалендарь = ДатаКон;
		РезультатВыбора = РегламентированнаяОтчетность.роПолучитьОбщуюФорму("ФормаВыбораОтчета", ЭтаФорма).ОткрытьМодально();
		Если РезультатВыбора = Истина Тогда // создаем новый отчет
			РегламентированнаяОтчетность.ОткрытьРегОтчетКалендарь(ИсточникОтчета, ДатаНач, ДатаКон, Периодичность, ОрганизацияОтбор);
		ИначеЕсли ЗначениеЗаполнено(РезультатВыбора) Тогда
			РезультатВыбора.ПолучитьФорму().Открыть();
		КонецЕсли;
	Иначе
		РегламентированнаяОтчетность.ОткрытьРегОтчетКалендарь(ИсточникОтчета, ДатаНач, ДатаКон, Периодичность, ОрганизацияОтбор);
	КонецЕсли;

КонецПроцедуры // ОткрытьПоСтроке

Процедура СобытияВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	ОткрытьПоСтроке(ВыбраннаяСтрока);
КонецПроцедуры

// ДобавитьУдалитьЗаписьВРегистрОповещения
//
Процедура УдалитьЗаписьВРегистрОповещения(ДанныеСтроки, РежимУплаты = Ложь)

	НовЗап = РегистрыСведений.СобытияКалендаряБухгалтера.СоздатьМенеджерЗаписи();

	НовЗап.Пользователь = глЗначениеПеременной("глТекущийПользователь");
	НовЗап.ПоследняяДатаДействия = ДанныеСтроки.ПоследняяДатаДействия;
	НовЗап.ИсточникОтчета = ДанныеСтроки.ИсточникОтчета;
	НовЗап.ЗаПериодС = ДанныеСтроки.ЗаПериодС;
	НовЗап.ЗаПериодПо = ДанныеСтроки.ЗаПериодПо;
	НовЗап.Организация = ЭлементыФормы.События.ТекущиеДанные.Организация;
	НовЗап.Состояние = Перечисления.СостоянияСобытий.Запланировано;
	НовЗап.ДатаПоказа = ЭлементыФормы.События.ТекущиеДанные.ДатаПоказа;

	НовЗап.Периодичность = ДанныеСтроки.Периодичность;
	НовЗап.Налогоплательщик = ДанныеСтроки.Налогоплательщик;
	НовЗап.НарастающийИтог = ДанныеСтроки.НарастающийИтог;

	Если РежимУплаты Тогда
		НовЗап.ТипСообщения = Перечисления.СообщенияДляРегОтчетов.УплатаНалога;
		НовЗап.ФормаОтчета = "";
		НовЗап.Название = "";
	Иначе
		НовЗап.ТипСообщения = Перечисления.СообщенияДляРегОтчетов.СдачаОтчета;
		НовЗап.ФормаОтчета = ДанныеСтроки.ФормаОтчета;
		НовЗап.Название = ДанныеСтроки.Название; // Название отчета
	КонецЕсли;
	НовЗап.Удалить();
	// Удалим из таблицы
	События.Удалить(ДанныеСтроки);
	ЭлементыФормы.События.ОбновитьСтроки();
КонецПроцедуры // УдалитьЗаписьВРегистрОповещения

Процедура ОткрытьНажатие(Элемент)
	Если ЭлементыФормы.События.ТекущиеДанные = Неопределено Тогда
		Предупреждение("Нет выбранного события");
		Возврат;
	КонецЕсли;
	ОткрытьПоСтроке(ЭлементыФормы.События.ТекущиеДанные);
КонецПроцедуры

Процедура ОтменитьНажатие(Элемент)
	Если ЭлементыФормы.События.ТекущиеДанные = Неопределено Тогда
		Предупреждение("Нет выбранного события");
		Возврат;
	КонецЕсли;

	РежимПлатежа = ЭлементыФормы.События.ТекущиеДанные.ТипСообщения = Перечисления.СообщенияДляРегОтчетов.УплатаНалога;
	УдалитьЗаписьВРегистрОповещения(ЭлементыФормы.События.ТекущиеДанные, РежимПлатежа);
	ФормаЦУО = Обработки.ОбщиеОбъектыРегламентированнойОтчетности.ПолучитьФорму("УправлениеОтчетностью");
	Если ФормаЦУО.Открыта() Тогда
		Если Обработки.КалендарьБухгалтера.ПолучитьФорму("ФормаКалендаря", ФормаЦУО).Открыта() Тогда
			Оповестить("Обновить признаки оповещения", "Обновить признаки оповещения", ЭтаФорма);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

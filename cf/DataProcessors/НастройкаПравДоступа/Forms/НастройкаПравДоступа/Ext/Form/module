
Перем ТипыОбъектовДоступа;

// Функция определяет список областей данных,
// которые соответствуют переданному типу данных
//
// Параметры
//  ТИпДанных - Тип, Анализируемый тип
//
// Возвращаемое значение:
//   СписокЗначений
//
Функция ПолучитьСписокОбластейДанных(ТипДанных)

	СписокОбластей = Новый СписокЗначений;
	Если ТипДанных = Тип("СправочникСсылка.Организации") Тогда
		СписокОбластей.Добавить(Перечисления.ВидыОбъектовДоступа.Организации);
	ИначеЕсли ТипДанных = Тип("СправочникСсылка.ВнешниеОбработки") Тогда
		СписокОбластей.Добавить(Перечисления.ВидыОбъектовДоступа.ВнешниеОбработки);
	ИначеЕсли ТипДанных = Тип("СправочникСсылка.ГруппыПользователей") Тогда
		СписокОбластей.Добавить(Перечисления.ВидыОбъектовДоступа.Организации);
		СписокОбластей.Добавить(Перечисления.ВидыОбъектовДоступа.ВнешниеОбработки);
	КонецЕсли;
	
	Возврат СписокОбластей;

КонецФункции

Процедура ОбновитьОтборПоНаследуемымЗаписям()
	
	Использование = Не ЭлементыФормы.КоманднаяПанельФормы.Кнопки.НаследуемыеЗаписи.Пометка;
	Для каждого КлючИЗначение Из ТипыОбъектовДоступа Цикл
		ЭлементыФормы["ТаблицаПравДоступа_" + КлючИЗначение.Ключ].ОтборСтрок.ВидНаследованияПравДоступаИерархическихСправочников.Использование = Использование;
	КонецЦикла;
	
КонецПроцедуры // () 

Процедура ПрочитатьТаблицыПравДоступа(ПраваДоступаПользователей)
	
	СоответствиеОбластейДанных = Новый Соответствие;
	
	Для каждого КлючИЗначение Из ТипыОбъектовДоступа Цикл
		Индекс = 1;
		Для каждого Элемент Из ПолучитьСписокОбластейДанных(КлючИЗначение.Значение) Цикл
			СоответствиеОбластейДанных.Вставить(Элемент.Значение, Индекс);
			Индекс = Индекс + 1;
		КонецЦикла; 
	КонецЦикла;
	
	ТаблицаПравДоступа.Очистить();
	Для каждого Запись Из ПраваДоступаПользователей Цикл
		Если Запись.ОбъектДоступа = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		ТипОбъектаДоступа = ТипЗНЧ(Запись.ОбъектДоступа);
		Индекс = СоответствиеОбластейДанных[Запись.ВидОбъектаДоступа];
		СтрокиТаблицыПравДоступа = ТаблицаПравДоступа.НайтиСтроки(Новый Структура("ОбъектДоступа, Пользователь, ВладелецПравДоступа", Запись.ОбъектДоступа, Запись.Пользователь, Запись.ВладелецПравДоступа));
		
		Если СтрокиТаблицыПравДоступа.Количество() Тогда
			СтрокаТаблицыПравДоступа = СтрокиТаблицыПравДоступа[0];
		Иначе
			СтрокаТаблицыПравДоступа = ТаблицаПравДоступа.Добавить();
			СтрокаТаблицыПравДоступа.ОбъектДоступа                   = Запись.ОбъектДоступа;
			СтрокаТаблицыПравДоступа.Пользователь                    = Запись.Пользователь;
			СтрокаТаблицыПравДоступа.ВладелецПравДоступа             = Запись.ВладелецПравДоступа;
			СтрокаТаблицыПравДоступа.ВидНаследованияПравДоступаИерархическихСправочников = Запись.ВидНаследованияПравДоступаИерархическихСправочников;
			СтрокаТаблицыПравДоступа.ТипОбъектаДоступа = Новый(ТипОбъектаДоступа);
		КонецЕсли;
		СтрокаТаблицыПравДоступа["Чтение_" + Индекс]             = Истина;
		СтрокаТаблицыПравДоступа["Запись_" + Индекс]             = Запись.Запись;
		ЗаполнитьЗначенияСвойств(СтрокаТаблицыПравДоступа, Запись);
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьНаборЗаписейИзТаблицПравДоступа()
	
	СоответствиеОбластейДанных = Новый Соответствие;
	
	Для каждого КлючИЗначение Из ТипыОбъектовДоступа Цикл
		СоответствиеОбластейДанных.Вставить(КлючИЗначение.Значение, ПолучитьСписокОбластейДанных(КлючИЗначение.Значение));
	КонецЦикла;
	
	ПраваДоступаПользователей = РегистрыСведений.НастройкиПравДоступаПользователей.СоздатьНаборЗаписей();
	
	Для каждого СтрокаТаблицы Из ТаблицаПравДоступа Цикл
		
		Индекс = 0;
		
		Для каждого ЭлементОбластиДанных Из СоответствиеОбластейДанных[ТипЗНЧ(СтрокаТаблицы.ОбъектДоступа)] Цикл
			
			Индекс = Индекс + 1;
			
			Если СтрокаТаблицы["Чтение_" + Индекс] Тогда
				Запись = ПраваДоступаПользователей.Добавить();
				Запись.ОбъектДоступа       = СтрокаТаблицы.ОбъектДоступа;
				Запись.ВладелецПравДоступа = СтрокаТаблицы.ВладелецПравДоступа;
				Запись.Пользователь        = СтрокаТаблицы.Пользователь;
				
				Запись.Запись              = СтрокаТаблицы["Запись_" + Индекс];
				Запись.ВидНаследованияПравДоступаИерархическихСправочников = СтрокаТаблицы.ВидНаследованияПравДоступаИерархическихСправочников;
				
			КонецЕсли; 
			
		КонецЦикла;
		
		
	КонецЦикла;
	
	Возврат ПраваДоступаПользователей;
	
КонецФункции


Процедура СформироватьКолонки(ТипЗначения)
	
КонецПроцедуры

Процедура СформироватьЗакладки()
	
	СписокНаследования = Новый СписокЗначений;
	СписокНаследования.Добавить(Перечисления.ВидыНаследованияПравДоступаИерархическихСправочников.РаспространитьНаПодчиненных);
	СписокНаследования.Добавить(Перечисления.ВидыНаследованияПравДоступаИерархическихСправочников.ТолькоДляТекущегоПрава);
	Если Не НастройкаПользователя Тогда
		СписокНаследования.Добавить(Перечисления.ВидыНаследованияПравДоступаИерархическихСправочников.НаследуетсяОтРодителя);
	КонецЕсли;
	
	Страницы = ЭлементыФормы.ПанельОбластейДанных.Страницы;
	
	Для каждого КлючИЗначение Из ТипыОбъектовДоступа Цикл
		Страница = Страницы[КлючИЗначение.Ключ];
		Страница.Значение = КлючИЗначение.Значение;
		Если Не НастройкаПользователя Тогда
			Страница.Видимость = КлючИЗначение.Значение = ТипЗНЧ(СсылкаОбъекта);
			Если Страница.Видимость Тогда
				ЭлементыФормы.ПанельОбластейДанных.ТекущаяСтраница = Страница;
			КонецЕсли;
		КонецЕсли;
		Элемент = ЭлементыФормы["ТаблицаПравДоступа_" + КлючИЗначение.Ключ];
		
		Элемент.Колонки.Пользователь.Видимость       = Не НастройкаПользователя;
		Элемент.Колонки.Пользователь.ТолькоПросмотр  = НастройкаПользователя;
		
		Элемент.Колонки.ОбъектДоступа.Видимость      = НастройкаПользователя;
		Элемент.Колонки.ОбъектДоступа.ТолькоПросмотр = Не НастройкаПользователя;
		
		Элемент.ОтборСтрок.ТипОбъектаДоступа.Установить(Новый(КлючИЗначение.Значение));
		Элемент.НастройкаОтбораСтрок.ТипОбъектаДоступа.Доступность = Ложь;
		Элемент.НастройкаОтбораСтрок.ВидНаследованияПравДоступаИерархическихСправочников.Доступность = Ложь;
		
		
		ОтборНаследования = Элемент.ОтборСтрок.ВидНаследованияПравДоступаИерархическихСправочников;
		ОтборНаследования.ВидСравнения = ВидСравнения.ВСписке;
		ОтборНаследования.Значение = СписокНаследования;
		
	КонецЦикла;
	
КонецПроцедуры

Функция НаличиеПраваНаЧтениеСсылки(Ссылка)
	
	Если НЕ ЗначениеЗаполнено(Ссылка) или Метаданные.Перечисления.Содержит(Ссылка.Метаданные()) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	_Таблица.Ссылка
	|ИЗ
	|	Справочник." + Ссылка.Метаданные().Имя + " КАК _Таблица
	|ГДЕ
	|	_Таблица.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Возврат Не Запрос.Выполнить().Пустой();
	
КонецФункции // () 

Функция Записать()
	
	Отказ = Ложь;
	
	Набор = ПолучитьНаборЗаписейИзТаблицПравДоступа();
	
	НастройкаПравДоступа.ЗаписатьПраваДоступаПользователейКОбъекту(Набор, СсылкаОбъекта, Отказ);
	
	Если Не Отказ Тогда
		ПраваДоступаПользователей = РегистрыСведений.НастройкиПравДоступаПользователей.СоздатьНаборЗаписей();
		НастройкаПравДоступа.ПрочитатьПраваДоступаКОбъекту(ПраваДоступаПользователей, СсылкаОбъекта);
		ПрочитатьТаблицыПравДоступа(ПраваДоступаПользователей);
		Оповестить("ЗаписаныПраваДоступаПользователейКОбъекту",,ЭтаФорма);
		Модифицированность = Ложь;
	КонецЕсли; 
	
	Возврат Не Отказ;
	
КонецФункции

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если НЕ ПараметрыСеанса.ИспользоватьОграниченияПравДоступаНаУровнеЗаписей Тогда
		Предупреждение("В конфигурации отключено использование ограничения прав доступа не уровне записей.");
		Отказ = Истина;
		Возврат;
	КонецЕсли; 
	
	ТипыОбъектовДоступа = Новый Структура;
	
	ТипыОбъектовДоступа.Вставить("Организации",      Тип("СправочникСсылка.Организации"));
	ТипыОбъектовДоступа.Вставить("ВнешниеОбработки", Тип("СправочникСсылка.ВнешниеОбработки"));
	
	СсылкаОбъекта = ЭтаФорма.КлючУникальности;
	МетаданныеОбъекта = СсылкаОбъекта.Метаданные();
	
	Если Не НаличиеПраваНаЧтениеСсылки(СсылкаОбъекта) Тогда
		Предупреждение("Отсутствует право на чтение объекта!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	НастройкаПользователя = ТипЗнч(СсылкаОбъекта) = Тип("СправочникСсылка.ГруппыПользователей");
	
	СформироватьЗакладки();
	ОбновитьОтборПоНаследуемымЗаписям();
	
	ПраваДоступаПользователей = РегистрыСведений.НастройкиПравДоступаПользователей.СоздатьНаборЗаписей();
	НастройкаПравДоступа.ПрочитатьПраваДоступаКОбъекту(ПраваДоступаПользователей, СсылкаОбъекта);
	ПрочитатьТаблицыПравДоступа(ПраваДоступаПользователей);
	
	Заголовок = Заголовок + ": " + ?(НЕ ЗначениеЗаполнено(МетаданныеОбъекта.Синоним), МетаданныеОбъекта.Имя, МетаданныеОбъекта.Синоним) + ": " + ?(НЕ ЗначениеЗаполнено(СсылкаОбъекта),"<Весь справочник>", Строка(СсылкаОбъекта));
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		
		ОтветНаВопрос = Вопрос("Данные были изменены. Сохранить изменения?", РежимДиалогаВопрос.ДаНетОтмена);;
		Если ОтветНаВопрос = КодВозвратаДиалога.Отмена или ОтветНаВопрос = КодВозвратаДиалога.Да и не Записать() Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	
	Если НастройкаПользователя и ТипЗНЧ(ЗначениеВыбора) = ЭлементыФормы.ПанельОбластейДанных.ТекущаяСтраница.Значение Тогда
		НоваяЗапись = ТаблицаПравДоступа.Добавить();
		НоваяЗапись.ВидНаследованияПравДоступаИерархическихСправочников = НастройкаПравДоступа.ПолучитьСписокВидовНаследованияПравДоступа(ЗначениеВыбора)[0].Значение;
		НоваяЗапись.ОбъектДоступа       = ЗначениеВыбора;
		НоваяЗапись.ВладелецПравДоступа = ЗначениеВыбора;
		НоваяЗапись.ТипОбъектаДоступа   = Новый(ТипЗНЧ(ЗначениеВыбора));
		НоваяЗапись.Чтение_1            = Истина;
		
		ЭлементыФормы["ТаблицаПравДоступа_" + ЭлементыФормы.ПанельОбластейДанных.ТекущаяСтраница.Имя].ТекущаяСтрока = НоваяЗапись;
		
		Модифицированность = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если Источник = ЭтаФорма или НастройкаПользователя Тогда
		Возврат;
	КонецЕсли;
	
	ПраваДоступаПользователей = ПолучитьНаборЗаписейИзТаблицПравДоступа();
	ЭталонныйНабор = РегистрыСведений.НастройкиПравДоступаПользователей.СоздатьНаборЗаписей();
	Для каждого Отбор Из ПраваДоступаПользователей.Отбор Цикл
		ЭталонныйНабор.Отбор[Отбор.Имя].Использование = Отбор.Использование;
		ЭталонныйНабор.Отбор[Отбор.Имя].Значение      = Отбор.Значение;
	КонецЦикла;
	ЭталонныйНабор.Загрузить(НастройкаПравДоступа.ПолучитьТаблицуПравДоступаБезУнаследуемыхЗаписей(ПраваДоступаПользователей));
	НастройкаПравДоступа.ДополнитьНаборПравДоступаУнаследованнымиЗаписями(ЭталонныйНабор, СсылкаОбъекта, СсылкаОбъекта.Родитель);
	
	Если Не НастройкаПравДоступа.СравнитьТаблицыНаборовЗаписей(ЭталонныйНабор.Выгрузить(), ПраваДоступаПользователей.Выгрузить()) Тогда
		ПрочитатьТаблицыПравДоступа(ЭталонныйНабор)
	КонецЕсли;
	
КонецПроцедуры

Процедура ПанельОбластейДанныхПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	СформироватьКолонки(Элемент.Страницы[ТекущаяСтраница])
	
КонецПроцедуры

Процедура ОсновныеДействияФормыОК(Кнопка)
	
	Если Записать() Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

Процедура ОсновныеДействияФормыЗаписать(Кнопка)
	
	Записать();
	
КонецПроцедуры

Процедура КоманднаяПанельФормыПодбор(Кнопка)
	
	ТипОбластиДанных = ЭлементыФормы.ПанельОбластейДанных.ТекущаяСтраница.Значение;
	
	Если НастройкаПользователя Тогда
		
		Если Справочники.ТипВсеСсылки().СодержитТип(ТипОбластиДанных) Тогда
			ФормаПодбора = Справочники[Метаданные.НайтиПоТипу(ТипОбластиДанных).Имя].ПолучитьФормуВыбора(,ЭтаФорма);
		ИначеЕсли Перечисления.ТипВсеСсылки().СодержитТип(ТипОбластиДанных) Тогда
			ФормаПодбора = Перечисления[Метаданные.НайтиПоТипу(ТипОбластиДанных).Имя].ПолучитьФормуВыбора(,ЭтаФорма);
		Иначе
			Возврат;
		КонецЕсли;
		
		ФормаПодбора.ЗакрыватьПриВыборе = Ложь;
		ФормаПодбора.ОткрытьМодально();
		
	Иначе
		
		МассивЗначений = ПолучитьФорму("ПодборГруппПользователей").ОткрытьМодально();
		
		Если ТипЗнч(МассивЗначений) = Тип("Массив") Тогда
			ВидНаследованияПравДоступаИерархическихСправочников = НастройкаПравДоступа.ПолучитьСписокВидовНаследованияПравДоступа(СсылкаОбъекта)[0].Значение;
			Для каждого ЭлементМассива Из МассивЗначений Цикл
				
				НоваяЗапись = ТаблицаПравДоступа.Добавить();
				НоваяЗапись.ВидНаследованияПравДоступаИерархическихСправочников = ВидНаследованияПравДоступаИерархическихСправочников;
				НоваяЗапись.ОбъектДоступа       = СсылкаОбъекта;
				НоваяЗапись.ВладелецПравДоступа = СсылкаОбъекта;
				НоваяЗапись.Пользователь        = ЭлементМассива;
				НоваяЗапись.ТипОбъектаДоступа   = Новый(ТипОбластиДанных);
				НоваяЗапись.Чтение_1 = Истина;
			КонецЦикла;
			Если МассивЗначений.Количество() Тогда
				ЭлементыФормы["ТаблицаПравДоступа_" + ЭлементыФормы.ПанельОбластейДанных.ТекущаяСтраница.Имя].ТекущаяСтрока = НоваяЗапись;
			КонецЕсли; 
			
			Модифицированность = Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельФормыУстановитьФлажки(Кнопка)
	
	Элемент = ЭлементыФормы["ТаблицаПравДоступа_" + ЭлементыФормы.ПанельОбластейДанных.ТекущаяСтраница.Имя];
	ИмяКолонки = Элемент.ТекущаяКолонка.ДанныеФлажка;
	Индекс = Сред(ИмяКолонки, Найти(ИмяКолонки, "_"));
	ЭтоЧтение = Лев(ИмяКолонки, 6) = "Чтение";
	
	Для каждого СтрокаТаблицы Из ТаблицаПравДоступа.НайтиСтроки(Новый Структура("ТипОбъектаДоступа", Новый(ЭлементыФормы.ПанельОбластейДанных.ТекущаяСтраница.Значение))) Цикл
		Если СтрокаТаблицы.ВидНаследованияПравДоступаИерархическихСправочников = Перечисления.ВидыНаследованияПравДоступаИерархическихСправочников.РаспространитьНаПодчиненных или СтрокаТаблицы.ВидНаследованияПравДоступаИерархическихСправочников = Перечисления.ВидыНаследованияПравДоступаИерархическихСправочников.ТолькоДляТекущегоПрава Тогда
			СтрокаТаблицы[ИмяКолонки] = Истина;
			Если Не ЭтоЧтение Тогда
				СтрокаТаблицы["Чтение" + Индекс] = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура КоманднаяПанельФормыСнятьФлажки(Кнопка)
	
	Элемент = ЭлементыФормы["ТаблицаПравДоступа_" + ЭлементыФормы.ПанельОбластейДанных.ТекущаяСтраница.Имя];
	ИмяКолонки = Элемент.ТекущаяКолонка.ДанныеФлажка;
	Индекс = Сред(ИмяКолонки, Найти(ИмяКолонки, "_"));
	ЭтоЧтение = Лев(ИмяКолонки, 6) = "Чтение";
	
	Для каждого СтрокаТаблицы Из ТаблицаПравДоступа.НайтиСтроки(Новый Структура("ТипОбъектаДоступа", Новый(ЭлементыФормы.ПанельОбластейДанных.ТекущаяСтраница.Значение))) Цикл
		Если СтрокаТаблицы.ВидНаследованияПравДоступаИерархическихСправочников = Перечисления.ВидыНаследованияПравДоступаИерархическихСправочников.РаспространитьНаПодчиненных или СтрокаТаблицы.ВидНаследованияПравДоступаИерархическихСправочников = Перечисления.ВидыНаследованияПравДоступаИерархическихСправочников.ТолькоДляТекущегоПрава Тогда
			СтрокаТаблицы[ИмяКолонки] = Ложь;
			Если ЭтоЧтение Тогда
				СтрокаТаблицы["Запись" + Индекс] = Ложь;;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры



Процедура ТаблицаПравДоступаВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	Если Элемент.ТекущиеДанные <> Неопределено
	   И Элемент.ТекущиеДанные.ВидНаследованияПравДоступаИерархическихСправочников = Перечисления.ВидыНаследованияПравДоступаИерархическихСправочников.НаследуетсяОтРодителя Тогда
		НастройкаПравДоступа.РедактироватьПраваДоступа(Элемент.ТекущиеДанные.ВладелецПравДоступа);
		
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

Процедура ТаблицаПравДоступаПередУдалением(Элемент, Отказ)
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		Если Элемент.ТекущиеДанные.ВидНаследованияПравДоступаИерархическихСправочников = Перечисления.ВидыНаследованияПравДоступаИерархическихСправочников.НаследуетсяОтРодителя Тогда
			Предупреждение("Запись удалить невозможно, она наследуется от родителя.");
			Отказ = Истина;
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры

Процедура ТаблицаПравДоступаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	ТипОбъектаДоступа = ТипЗНЧ(Элемент.ОтборСтрок.ТипОбъектаДоступа.Значение);
	
	МассивТипов   = Новый Массив;
	МассивТипов.Добавить(ТипОбъектаДоступа);
	ОграничениеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.Колонки.ОбъектДоступа.ЭлементУправления.ОграничениеТипа = ОграничениеТипа;
	Элемент.Колонки.ОбъектДоступа.ЭлементУправления.ВыбиратьТип = Ложь;
	
	ОбъектДоступа = ?(НастройкаПользователя, ОграничениеТипа.ПривестиЗначение(ТекущиеДанные.ОбъектДоступа), СсылкаОбъекта);
	
	Если НоваяСтрока Тогда
		
		Если НастройкаПользователя Тогда
			ТекущиеДанные.Пользователь = СсылкаОбъекта;
		КонецЕсли; 
		
		ТекущиеДанные.ТипОбъектаДоступа = Новый(ТипОбъектаДоступа);
		ТекущиеДанные.ОбъектДоступа = ОбъектДоступа;
		
		Если Элемент.Колонки.Найти("Чтение_1").ТолькоПросмотр Тогда
			ТекущиеДанные.Чтение_1 = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	СписокВидовНаследованияПравДоступа = НастройкаПравДоступа.ПолучитьСписокВидовНаследованияПравДоступа(ОбъектДоступа);
	Элемент.Колонки.ВидНаследованияПравДоступаИерархическихСправочников.ЭлементУправления.ДоступныеЗначения = СписокВидовНаследованияПравДоступа;
	
	Если НоваяСтрока или СписокВидовНаследованияПравДоступа.НайтиПоЗначению(ТекущиеДанные.ВидНаследованияПравДоступаИерархическихСправочников) = Неопределено Тогда
		ТекущиеДанные.ВидНаследованияПравДоступаИерархическихСправочников = СписокВидовНаследованияПравДоступа[0].Значение;
	КонецЕсли; 
	
КонецПроцедуры

Процедура ТаблицаПравДоступаПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ОформлениеСтроки.Ячейки.ОбъектДоступа.Видимость и НЕ ЗначениеЗаполнено(ДанныеСтроки.ОбъектДоступа) Тогда
		Если ДанныеСтроки.ВидНаследованияПравДоступаИерархическихСправочников = Перечисления.ВидыНаследованияПравДоступаИерархическихСправочников.ТолькоДляТекущегоПрава Тогда
			ОформлениеСтроки.Ячейки.ОбъектДоступа.Текст = "<Пустое значение>";
		Иначе
			ОформлениеСтроки.Ячейки.ОбъектДоступа.Текст = "<Весь справочник>";
		КонецЕсли; 
	КонецЕсли;
	
	ТолькоПросмотрФлажков = Элемент.ТолькоПросмотр или ДанныеСтроки.ВидНаследованияПравДоступаИерархическихСправочников = Перечисления.ВидыНаследованияПравДоступаИерархическихСправочников.НаследуетсяОтРодителя;
	Для каждого Ячейка Из ОформлениеСтроки.Ячейки Цикл
		Если ТолькоПросмотрФлажков и Ячейка.ОтображатьФлажок Тогда
			Ячейка.ТолькоПросмотр = Истина;
		КонецЕсли;
		Если Не Ячейка.Имя = "Картинка" и ПустаяСтрока(Элемент.Колонки[Ячейка.Имя].Данные) и ПустаяСтрока(Элемент.Колонки[Ячейка.Имя].ДанныеФлажка) Тогда
			Ячейка.Видимость = Ложь;
		КонецЕсли;
	КонецЦикла;
	ОформлениеСтроки.Ячейки.Картинка.ОтображатьКартинку = Истина;
	ОформлениеСтроки.Ячейки.Картинка.ИндексКартинки = 0;
	ЯчейкаЧтение = ОформлениеСтроки.Ячейки.Найти("Чтение");
	Если Не ЯчейкаЧтение = Неопределено Тогда
		ЯчейкаЧтение.УстановитьФлажок(Истина);
	КонецЕсли;
	
КонецПроцедуры

Процедура ТаблицаПравДоступаПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	ОбъектДоступа = ТекущиеДанные.ОбъектДоступа;
	ТекущиеДанные.ВладелецПравДоступа = ОбъектДоступа;
	
	СписокВидовНаследованияПравДоступа = НастройкаПравДоступа.ПолучитьСписокВидовНаследованияПравДоступа(ОбъектДоступа);
	Элемент.Колонки.ВидНаследованияПравДоступаИерархическихСправочников.ЭлементУправления.ДоступныеЗначения = СписокВидовНаследованияПравДоступа;
	
	Если НоваяСтрока или СписокВидовНаследованияПравДоступа.НайтиПоЗначению(ТекущиеДанные.ВидНаследованияПравДоступаИерархическихСправочников) = Неопределено Тогда
		ТекущиеДанные.ВидНаследованияПравДоступаИерархическихСправочников = СписокВидовНаследованияПравДоступа[0].Значение;
	КонецЕсли;
	
КонецПроцедуры

Процедура ТаблицаПравДоступаПриАктивизацииКолонки(Элемент)
	
	ЭтоФлажок = Не ПустаяСтрока(Элемент.ТекущаяКолонка.ДанныеФлажка) и Не Элемент.ТекущаяКолонка.ТолькоПросмотр;
	ЭлементыФормы.КоманднаяПанельФормы.Кнопки.УстановитьФлажки.Доступность = ЭтоФлажок;
	ЭлементыФормы.КоманднаяПанельФормы.Кнопки.СнятьФлажки.Доступность      = ЭтоФлажок;
	
КонецПроцедуры

Процедура КоманднаяПанельФормыОбновить(Кнопка)
	
	Если Модифицированность и Вопрос("Данные были изменены. Обновление может привести к потере введенных данных!", РежимДиалогаВопрос.ОКОтмена) = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	ПраваДоступаПользователей = РегистрыСведений.НастройкиПравДоступаПользователей.СоздатьНаборЗаписей();
	НастройкаПравДоступа.ПрочитатьПраваДоступаКОбъекту(ПраваДоступаПользователей, СсылкаОбъекта);
	ПрочитатьТаблицыПравДоступа(ПраваДоступаПользователей);
	Модифицированность = Ложь;
	
КонецПроцедуры

Процедура ОбновлениеОтображения()
	
	Для каждого СтраницаПанели Из ЭлементыФормы.ПанельОбластейДанных.Страницы Цикл
		
		Если СтраницаПанели.Видимость Тогда
			
			Если ТаблицаПравДоступа.Найти(Новый(СтраницаПанели.Значение), "ТипОбъектаДоступа") = Неопределено Тогда
				СтраницаПанели.КартинкаЗаголовка = Новый Картинка;
			Иначе
				СтраницаПанели.КартинкаЗаголовка = БиблиотекаКартинок.ЗаписиВТабличномПоле;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура КоманднаяПанельФормыНаследуемыеЗаписи(Кнопка)
	
	Кнопка.Пометка = Не Кнопка.Пометка;
	ОбновитьОтборПоНаследуемымЗаписям();
	
КонецПроцедуры

Процедура ТаблицаПравДоступаПриИзмененииФлажка(Элемент, Колонка)
	
	ИмяКолонки = Колонка.ДанныеФлажка;
	Индекс = Сред(ИмяКолонки, Найти(ИмяКолонки, "_"));
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	Если Лев(ИмяКолонки, 6) = "Чтение" Тогда
		Если Не ТекущиеДанные[ИмяКолонки] Тогда
			ТекущиеДанные["Запись" + Индекс] = Ложь;;
		КонецЕсли; 
	Иначе
		Если ТекущиеДанные[ИмяКолонки] Тогда
			ТекущиеДанные["Чтение" + Индекс] = Истина;
		КонецЕсли;
	КонецЕсли;
	
	
КонецПроцедуры
Перем мСостояниеОпераций Экспорт;
Перем мПолноеДерево Экспорт;
Перем мУпрощенныйУчетНДС Экспорт;
Перем мУчетнаяПолитикаНУ Экспорт;

Процедура ОпределениеСпискаРекомендуемыхОпераций() Экспорт
	
	ОшибкаПолученияУчетнойПолитики = Ложь;
	мУчетнаяПолитикаНУ = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(ПериодРегистрации, ОшибкаПолученияУчетнойПолитики, Организация, "Нал");
	
	Если не ОшибкаПолученияУчетнойПолитики Тогда
		// Установка флагов по умолчанию
		ОрганизацияПлательщикНДС = не мУчетнаяПолитикаНУ.УСН;
		НДСНалоговыйПериод = УчетНДС.ПолучитьУПНДСНалоговыйПериод(Организация, ПериодРегистрации, мУчетнаяПолитикаНУ);
		СложныйУчетНДС = мУчетнаяПолитикаНУ.СложныйУчетНДС;
		ВыписыватьОтдельныеСчетаФактурыНаСуммовыеРазницы = Истина;
		мУпрощенныйУчетНДС = мУчетнаяПолитикаНУ.УпрощенныйУчетНДС;
	Иначе
		ОрганизацияПлательщикНДС = Истина;
		НДСНалоговыйПериод = УчетНДС.ПолучитьУПНДСНалоговыйПериод(Организация, ПериодРегистрации);
		СложныйУчетНДС = Ложь;
		ВыписыватьОтдельныеСчетаФактурыНаСуммовыеРазницы = Истина;
		мУпрощенныйУчетНДС = Ложь;
	КонецЕсли; 
	
	Если мУпрощенныйУчетНДС Тогда
		Для каждого ТекущаяОперация Из мПолноеДерево Цикл
			ТекущаяОперация.Контроль = Ложь;
		КонецЦикла;
		Возврат;
	КонецЕсли; 
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("НачалоПериода", Новый Граница(?(НДСНалоговыйПериод = Перечисления.Периодичность.Квартал,НачалоКвартала(ПериодРегистрации),НачалоМесяца(ПериодРегистрации)), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("КонецПериода" , Новый Граница(?(НДСНалоговыйПериод = Перечисления.Периодичность.Квартал,КонецКвартала(ПериодРегистрации), КонецМесяца(ПериодРегистрации)), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("НачалоПериодаДата", ?(НДСНалоговыйПериод = Перечисления.Периодичность.Квартал,НачалоКвартала(ПериодРегистрации),НачалоМесяца(ПериодРегистрации)));
	Запрос.УстановитьПараметр("КонецПериодаДата" , ?(НДСНалоговыйПериод = Перечисления.Периодичность.Квартал,КонецКвартала(ПериодРегистрации), КонецМесяца(ПериодРегистрации)));
	Запрос.УстановитьПараметр("Организация"  , Организация);
	МассивСчетовАвансов = Новый Массив();
	МассивСчетовАвансов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученным); // 62.02
	МассивСчетовАвансов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымВал); // 62.22
	МассивСчетовАвансов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымУЕ); // 62.32
	
	ВидыСубконтоРасчеты = Новый Массив;
	ВидыСубконтоРасчеты.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	ВидыСубконтоРасчеты.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	ВидыСубконтоРасчеты.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами);
	Запрос.УстановитьПараметр("ВидыСубконтоРасчеты", ВидыСубконтоРасчеты);
	
	СчетаИсключения = Новый Массив;
	СчетаИсключения.Добавить(ПланыСчетов.Хозрасчетный.НДСНалоговогоАгента);
	
	Запрос.УстановитьПараметр("СчетаИсключения", СчетаИсключения);
	
	// Движения по курсовым разницам не должны вызывать регистрации аванса
	Запрос.УстановитьПараметр("МассивСчетовАвансов", МассивСчетовАвансов);
	
	Запрос.УстановитьПараметр("ВидыЦенностейНА", УчетНДС.ВидыЦенностейНалоговыйАгент(Ложь));
	Запрос.УстановитьПараметр("ВидыЦенностейСМР", УчетНДС.ВидыЦенностейСМРХозспособ());
	
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ОбъединенныеДанныеПоАвансам.РегламентнаяОперация
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ЗНАЧЕНИЕ(Перечисление.РегламентныеОперации.РегистрацияСчетовФактурНаАванс) КАК РегламентнаяОперация
	               |	ИЗ
	               |		РегистрБухгалтерии.Хозрасчетный.Обороты(
	               |				&НачалоПериода,
	               |				&КонецПериода,
	               |				Регистратор,
	               |				Счет В
	               |					(ВЫБРАТЬ
	               |						Хозрасчетный.Ссылка
	               |					ИЗ
	               |						ПланСчетов.Хозрасчетный КАК Хозрасчетный
	               |					ГДЕ
	               |						Хозрасчетный.Ссылка В ИЕРАРХИИ (&МассивСчетовАвансов)
	               |						И Хозрасчетный.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСконтрагентами)),
	               |				,
	               |				Организация = &Организация,
	               |				(НЕ КорСчет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВекселяПолученные)))
	               |					И (НЕ КорСчет В ИЕРАРХИИ (&МассивСчетовАвансов)),
	               |				) КАК УсловиеПоОборотам
	               |	ГДЕ
	               |		ВЫБОР
	               |				КОГДА УсловиеПоОборотам.Счет.Валютный
	               |						И (НЕ УсловиеПоОборотам.ВалютнаяСуммаОборотКт ЕСТЬ NULL )
	               |					ТОГДА УсловиеПоОборотам.ВалютнаяСуммаОборотКт
	               |				ИНАЧЕ УсловиеПоОборотам.СуммаОборотКт
	               |			КОНЕЦ > 0
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ЗНАЧЕНИЕ(Перечисление.РегламентныеОперации.РегистрацияСчетовФактурНаАванс)
	               |	ИЗ
	               |		Документ.ОтчетКомиссионераОПродажах КАК ОтчетКомиссионераОПродажах
	               |	ГДЕ
	               |		ОтчетКомиссионераОПродажах.ДенежныеСредства.ВидОтчетаПоПлатежам = ЗНАЧЕНИЕ(Перечисление.ВидыОтчетовПоПлатежамКомиссия.Аванс)
	               |		И ОтчетКомиссионераОПродажах.Дата МЕЖДУ &НачалоПериодаДата И &КонецПериодаДата) КАК ОбъединенныеДанныеПоАвансам
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ЗНАЧЕНИЕ(Перечисление.РегламентныеОперации.РегистрацияСчетовФактурНалоговогоАгента)
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	               |			&НачалоПериода,
	               |			&КонецПериода,
	               |			Период,
	               |			(НЕ СчетДт В (&СчетаИсключения)),
	               |			&ВидыСубконтоРасчеты,
	               |			,
	               |			,
	               |			Организация = &Организация
	               |				И СубконтоДт2.УчетАгентскогоНДС
	               |				И СубконтоДт2.НалоговыйАгентПоОплате
	               |				И (НЕ ЕСТЬNULL(СубконтоДт3.ДокументОснование, НЕОПРЕДЕЛЕНО) ССЫЛКА Документ.ВводНачальныхОстатков)) КАК УсловиеПоОборотам
	               |ГДЕ
	               |	УсловиеПоОборотам.СуммаОборот > 0
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ЗНАЧЕНИЕ(Перечисление.РегламентныеОперации.НачислениеНДСпоСМРхозспособом)
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Обороты(
	               |			&НачалоПериода,
	               |			&КонецПериода,
	               |			Период,
	               |			счет В ИЕРАРХИИ (&СчетСтроительство),
	               |			&СубконтоСтроительство,
	               |			Организация = &Организация
	               |				И Субконто1 = ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Хозспособ)
	               |				И ВЫБОР
	               |					КОГДА ГОД(&НачалоПериодаДата) < 2005
	               |						ТОГДА ЛОЖЬ
	               |					КОГДА ГОД(&НачалоПериодаДата) = 2005
	               |							И МЕСЯЦ(&НачалоПериодаДата) < 12
	               |						ТОГДА ЛОЖЬ
	               |					ИНАЧЕ ИСТИНА
	               |				КОНЕЦ,
	               |			,
	               |			) КАК УсловиеПоОборотам
	               |ГДЕ
	               |	УсловиеПоОборотам.СуммаОборотДт > 0
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ЗНАЧЕНИЕ(Перечисление.РегламентныеОперации.РегистрацияСчетовФактурНаСуммовыеРазницы)
	               |ИЗ
	               |	РегистрНакопления.НДСНачисленный.Обороты(
	               |			&НачалоПериода,
	               |			&КонецПериода,
	               |			Период,
	               |			&КонецПериодаДата < ДАТАВРЕМЯ(2011,10,1)
	               |				И Организация = &Организация
	               |				И ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.СуммыСвязанныеСРасчетамиПоОплате)
	               |				И ВидНачисления = ЗНАЧЕНИЕ(Перечисление.НДСВидНачисления.НДСНачисленКУплате)) КАК УсловиеПоОборотам
	               |ГДЕ
	               |	УсловиеПоОборотам.СуммаБезНДСПриход + УсловиеПоОборотам.НДСПриход > 0
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	УсловиеОперации.РегламентнаяОперация
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ВЫБОР
	               |			КОГДА УсловиеПоОборотам.Состояние = ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.ОжидаетсяПодтверждение)
	               |				ТОГДА ЗНАЧЕНИЕ(Перечисление.РегламентныеОперации.ПодтверждениеНулевойСтавкиНДС)
	               |			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РегламентныеОперации.ФормированиеЗаписейКнигиПродаж0)
	               |		КОНЕЦ КАК РегламентнаяОперация
	               |	ИЗ
	               |		РегистрНакопления.НДСРеализация0.Обороты(&НачалоПериода, &КонецПериода, Период, Организация = &Организация) КАК УсловиеПоОборотам
	               |	ГДЕ
	               |		УсловиеПоОборотам.СуммаБезНДСПриход + УсловиеПоОборотам.НДСПриход > 0
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ВЫБОР
	               |			КОГДА УсловиеПоОстаткам.Состояние = ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.ОжидаетсяПодтверждение)
	               |				ТОГДА ЗНАЧЕНИЕ(Перечисление.РегламентныеОперации.ПодтверждениеНулевойСтавкиНДС)
	               |			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РегламентныеОперации.ФормированиеЗаписейКнигиПродаж0)
	               |		КОНЕЦ
	               |	ИЗ
	               |		РегистрНакопления.НДСРеализация0.Остатки(&НачалоПериода, Организация = &Организация) КАК УсловиеПоОстаткам
	               |	ГДЕ
	               |		УсловиеПоОстаткам.СуммаБезНДСОстаток + УсловиеПоОстаткам.НДСОстаток > 0) КАК УсловиеОперации
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	УсловиеОперации.РегламентнаяОперация
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ЗНАЧЕНИЕ(Перечисление.РегламентныеОперации.ФормированиеЗаписейКнигиПокупок0) КАК РегламентнаяОперация
	               |	ИЗ
	               |		РегистрНакопления.НДСПредъявленныйРеализация0.Обороты(
	               |				&НачалоПериода,
	               |				&КонецПериода,
	               |				Период,
	               |				Организация = &Организация
	               |					И (НЕ Состояние = ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.ОжидаетсяПодтверждение))) КАК УсловиеПоОборотам
	               |	ГДЕ
	               |		УсловиеПоОборотам.СуммаБезНДСПриход + УсловиеПоОборотам.НДСПриход > 0
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ЗНАЧЕНИЕ(Перечисление.РегламентныеОперации.ФормированиеЗаписейКнигиПокупок0)
	               |	ИЗ
	               |		РегистрНакопления.НДСПредъявленныйРеализация0.Остатки(
	               |				&НачалоПериода,
	               |				Организация = &Организация
	               |					И (НЕ Состояние = ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.ОжидаетсяПодтверждение))) КАК УсловиеПоОстаткам
	               |	ГДЕ
	               |		УсловиеПоОстаткам.СуммаБезНДСОстаток + УсловиеПоОстаткам.НДСОстаток > 0) КАК УсловиеОперации
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ЗНАЧЕНИЕ(Перечисление.РегламентныеОперации.РаспределениеНДСКосвенныхРасходов)
	               |ИЗ
	               |	РегистрНакопления.НДСКосвенныеРасходы.Обороты(&НачалоПериода, &КонецПериода, Период, Организация = &Организация) КАК УсловиеПоОборотам
	               |ГДЕ
	               |	УсловиеПоОборотам.СуммаБезНДСПриход + УсловиеПоОборотам.НДСПриход > 0
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	УсловиеОперации.РегламентнаяОперация
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ЗНАЧЕНИЕ(Перечисление.РегламентныеОперации.РегистрацияОплатыНДСВБюджет) КАК РегламентнаяОперация
	               |	ИЗ
	               |		РегистрНакопления.НДСПредъявленный.Обороты(
	               |				&НачалоПериода,
	               |				&КонецПериода,
	               |				Период,
	               |				Организация = &Организация
	               |					И ВидЦенности В (&ВидыЦенностейНА)
	               |					И ДоговорКонтрагента = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	               |					И ДатаОплаты = ДАТАВРЕМЯ(1, 1, 1)) КАК УсловиеПоОборотам
	               |	ГДЕ
	               |		УсловиеПоОборотам.СуммаБезНДСПриход + УсловиеПоОборотам.НДСПриход > 0
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ЗНАЧЕНИЕ(Перечисление.РегламентныеОперации.РегистрацияОплатыНДСВБюджет)
	               |	ИЗ
	               |		РегистрНакопления.НДСПредъявленный.Остатки(
	               |				&НачалоПериода,
	               |				Организация = &Организация
	               |					И ВидЦенности В (&ВидыЦенностейНА)
	               |					И ДоговорКонтрагента = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	               |					И ДатаОплаты = ДАТАВРЕМЯ(1, 1, 1)) КАК УсловиеПоОстаткам
	               |	ГДЕ
	               |		УсловиеПоОстаткам.СуммаБезНДСОстаток + УсловиеПоОстаткам.НДСОстаток > 0
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ЗНАЧЕНИЕ(Перечисление.РегламентныеОперации.РегистрацияОплатыНДСВБюджет)
	               |	ИЗ
	               |		РегистрНакопления.НДСПредъявленный.Обороты(
	               |				&НачалоПериода,
	               |				&КонецПериода,
	               |				Период,
	               |				Организация = &Организация
	               |					И ВидЦенности В (&ВидыЦенностейСМР)
	               |					И ДатаОплаты = ДАТАВРЕМЯ(1, 1, 1)) КАК УсловиеПоОборотам
	               |	ГДЕ
	               |		УсловиеПоОборотам.СуммаБезНДСПриход + УсловиеПоОборотам.НДСПриход > 0
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ЗНАЧЕНИЕ(Перечисление.РегламентныеОперации.РегистрацияОплатыНДСВБюджет)
	               |	ИЗ
	               |		РегистрНакопления.НДСПредъявленный.Остатки(
	               |				&НачалоПериода,
	               |				Организация = &Организация
	               |					И ВидЦенности В (&ВидыЦенностейСМР)
	               |					И ДатаОплаты = ДАТАВРЕМЯ(1, 1, 1)) КАК УсловиеПоОстаткам
	               |	ГДЕ
	               |		УсловиеПоОстаткам.СуммаБезНДСОстаток + УсловиеПоОстаткам.НДСОстаток > 0) КАК УсловиеОперации
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	УсловиеОперации.РегламентнаяОперация
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ВЫБОР
	               |			КОГДА УсловиеПоОборотам.ВидНачисления = ЗНАЧЕНИЕ(Перечисление.НДСВидНачисления.Реализация0)
	               |				ТОГДА ЗНАЧЕНИЕ(Перечисление.РегламентныеОперации.ВосстановлениеНДС)
	               |			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РегламентныеОперации.ФормированиеЗаписейКнигиПродаж)
	               |		КОНЕЦ КАК РегламентнаяОперация
	               |	ИЗ
	               |		РегистрНакопления.НДСНачисленный.Обороты(&НачалоПериода, &КонецПериода, Период, Организация = &Организация) КАК УсловиеПоОборотам
	               |	ГДЕ
	               |		УсловиеПоОборотам.СуммаБезНДСПриход + УсловиеПоОборотам.НДСПриход > 0
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ВЫБОР
	               |			КОГДА УсловиеПоОстаткам.ВидНачисления = ЗНАЧЕНИЕ(Перечисление.НДСВидНачисления.Реализация0)
	               |				ТОГДА НЕОПРЕДЕЛЕНО
	               |			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РегламентныеОперации.ФормированиеЗаписейКнигиПродаж)
	               |		КОНЕЦ
	               |	ИЗ
	               |		РегистрНакопления.НДСНачисленный.Остатки(&НачалоПериода, Организация = &Организация) КАК УсловиеПоОстаткам
	               |	ГДЕ
	               |		УсловиеПоОстаткам.СуммаБезНДСОстаток + УсловиеПоОстаткам.НДСОстаток > 0) КАК УсловиеОперации
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	УсловиеОперации.РегламентнаяОперация
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ЗНАЧЕНИЕ(Перечисление.РегламентныеОперации.ФормированиеЗаписейКнигиПокупок) КАК РегламентнаяОперация
	               |	ИЗ
	               |		РегистрНакопления.НДСПредъявленный.Обороты(&НачалоПериода, &КонецПериода, Период, Организация = &Организация) КАК УсловиеПоОборотам
	               |	ГДЕ
	               |		УсловиеПоОборотам.СуммаБезНДСПриход + УсловиеПоОборотам.НДСПриход > 0
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ЗНАЧЕНИЕ(Перечисление.РегламентныеОперации.ФормированиеЗаписейКнигиПокупок)
	               |	ИЗ
	               |		РегистрНакопления.НДСПредъявленный.Остатки(&НачалоПериода, Организация = &Организация) КАК УсловиеПоОстаткам
	               |	ГДЕ
	               |		УсловиеПоОстаткам.СуммаБезНДСОстаток + УсловиеПоОстаткам.НДСОстаток > 0
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ЗНАЧЕНИЕ(Перечисление.РегламентныеОперации.ФормированиеЗаписейКнигиПокупок)
	               |	ИЗ
	               |		РегистрНакопления.НДСсАвансов.Обороты(
	               |				&НачалоПериода,
	               |				&КонецПериода,
	               |				Период,
	               |				Организация = &Организация
	               |					И (ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыПолученные)
	               |						ИЛИ ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыПолученные0))) КАК УсловиеПоОборотам
	               |	ГДЕ
	               |		УсловиеПоОборотам.СуммаБезНДСПриход + УсловиеПоОборотам.НДСПриход > 0
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ЗНАЧЕНИЕ(Перечисление.РегламентныеОперации.ФормированиеЗаписейКнигиПокупок)
	               |	ИЗ
	               |		РегистрНакопления.НДСсАвансов.Остатки(
	               |				&НачалоПериода,
	               |				Организация = &Организация
	               |					И (ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыПолученные)
	               |						ИЛИ ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыПолученные0))) КАК УсловиеПоОстаткам
	               |	ГДЕ
	               |		УсловиеПоОстаткам.СуммаБезНДСОстаток + УсловиеПоОстаткам.НДСОстаток > 0) КАК УсловиеОперации";
	   
	Запрос.УстановитьПараметр("СчетСтроительство", ПланыСчетов.Хозрасчетный.СтроительствоОбъектовОсновныхСредств);
	Запрос.УстановитьПараметр("СубконтоСтроительство", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СпособыСтроительства);
	
	ОперацииТребующиеКонтроля = Новый списокЗначений();
	ОперацииТребующиеКонтроля.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("РегламентнаяОперация"));
	
	КонтролируемыеОперации = Новый Соответствие();
	
	// Обороты по СМР хозспособом
	ЕстьСтроительствоХозспособом = (не ОперацииТребующиеКонтроля.НайтиПоЗначению(Перечисления.РегламентныеОперации.НачислениеНДСпоСМРхозспособом) = неопределено);
	КонтролируемыеОперации.Вставить(Перечисления.РегламентныеОперации.НачислениеНДСпоСМРхозспособом, ОрганизацияПлательщикНДС и ЕстьСтроительствоХозспособом);
	
	// Наличие незавершенных расчетов с бюджетом (налоговый агент, строительство)
	ЗадолженностьПоОплатеВБюджет = (не ОперацииТребующиеКонтроля.НайтиПоЗначению(Перечисления.РегламентныеОперации.РегистрацияОплатыНДСВБюджет) = неопределено);
	КонтролируемыеОперации.Вставить(Перечисления.РегламентныеОперации.РегистрацияОплатыНДСВБюджет, ЗадолженностьПоОплатеВБюджет или ЕстьСтроительствоХозспособом);
	
	// Проверка наличия авансов
	НаличиеАвансов = (не ОперацииТребующиеКонтроля.НайтиПоЗначению(Перечисления.РегламентныеОперации.РегистрацияСчетовФактурНаАванс) = неопределено);
	КонтролируемыеОперации.Вставить(Перечисления.РегламентныеОперации.РегистрацияСчетовФактурНаАванс, ОрганизацияПлательщикНДС и НаличиеАвансов);
	
	// Проверка наличия оплат при исполнении обязанностей налогового агента
	НаличиеНА = (не ОперацииТребующиеКонтроля.НайтиПоЗначению(Перечисления.РегламентныеОперации.РегистрацияСчетовФактурНалоговогоАгента) = неопределено);
	КонтролируемыеОперации.Вставить(Перечисления.РегламентныеОперации.РегистрацияСчетовФактурНалоговогоАгента, ОрганизацияПлательщикНДС и НаличиеНА);
	
	// Проверка выписки отдельных СФ на суммовую разницу (по УП НУ)
	НаличиеВыделенныхСуммовых = (не ОперацииТребующиеКонтроля.НайтиПоЗначению(Перечисления.РегламентныеОперации.РегистрацияСчетовФактурНаСуммовыеРазницы) = неопределено);
	КонтролируемыеОперации.Вставить(Перечисления.РегламентныеОперации.РегистрацияСчетовФактурНаСуммовыеРазницы, ОрганизацияПлательщикНДС и ВыписыватьОтдельныеСчетаФактурыНаСуммовыеРазницы и НаличиеВыделенныхСуммовых);
	
	// Распределения косвенных расходов для сложного учета НДС (по УП НУ)
	НаличиеКосвенныхРасходовКРаспределению = (не ОперацииТребующиеКонтроля.НайтиПоЗначению(Перечисления.РегламентныеОперации.РаспределениеНДСКосвенныхРасходов) = неопределено);
	КонтролируемыеОперации.Вставить(Перечисления.РегламентныеОперации.РаспределениеНДСКосвенныхРасходов, ОрганизацияПлательщикНДС и НаличиеКосвенныхРасходовКРаспределению);
	
	// Наличие реализации по 0%
	ЕстьРеализация0КПодтверждению = (не ОперацииТребующиеКонтроля.НайтиПоЗначению(Перечисления.РегламентныеОперации.ПодтверждениеНулевойСтавкиНДС) = неопределено);
	КонтролируемыеОперации.Вставить(Перечисления.РегламентныеОперации.ПодтверждениеНулевойСтавкиНДС, ЕстьРеализация0КПодтверждению);
	
	ЕстьРеализация0КОтражениюВКнигеПродаж = (не ОперацииТребующиеКонтроля.НайтиПоЗначению(Перечисления.РегламентныеОперации.ФормированиеЗаписейКнигиПродаж0) = неопределено);
	КонтролируемыеОперации.Вставить(Перечисления.РегламентныеОперации.ФормированиеЗаписейКнигиПродаж0, ЕстьРеализация0КОтражениюВКнигеПродаж);
	
	ЕстьРеализация0КОтражениюВКнигеПокупок = (не ОперацииТребующиеКонтроля.НайтиПоЗначению(Перечисления.РегламентныеОперации.ФормированиеЗаписейКнигиПокупок0) = неопределено);
	КонтролируемыеОперации.Вставить(Перечисления.РегламентныеОперации.ФормированиеЗаписейКнигиПокупок0, ЕстьРеализация0КОтражениюВКнигеПокупок);
	
	// Необходимость восстановления НДС
	РеализацияПод0_ТребуетсяВосстановление = (не ОперацииТребующиеКонтроля.НайтиПоЗначению(Перечисления.РегламентныеОперации.ВосстановлениеНДС) = неопределено);
	КонтролируемыеОперации.Вставить(Перечисления.РегламентныеОперации.ВосстановлениеНДС, РеализацияПод0_ТребуетсяВосстановление);
	
	ЕстьПоступленияКОтражениюВКнигеПокупок = (не ОперацииТребующиеКонтроля.НайтиПоЗначению(Перечисления.РегламентныеОперации.ФормированиеЗаписейКнигиПокупок) = неопределено);
	КонтролируемыеОперации.Вставить(Перечисления.РегламентныеОперации.ФормированиеЗаписейКнигиПокупок, ОрганизацияПлательщикНДС и ЕстьПоступленияКОтражениюВКнигеПокупок);
	
	ЕстьРеализацияКОтражениюВКнигеПродаж = (не ОперацииТребующиеКонтроля.НайтиПоЗначению(Перечисления.РегламентныеОперации.ФормированиеЗаписейКнигиПродаж) = неопределено);
	КонтролируемыеОперации.Вставить(Перечисления.РегламентныеОперации.ФормированиеЗаписейКнигиПродаж, ЕстьРеализацияКОтражениюВКнигеПродаж);
	
	// Конец года
	КонецГода_С2006 =  (Месяц(УчетНДС.ПолучитьКонецПериодаПоУчетнойПолитике(Организация, ПериодРегистрации, Ложь, Новый Структура("НДСНалоговыйПериод", НДСНалоговыйПериод))) = 12);
	КонтролируемыеОперации.Вставить(Перечисления.РегламентныеОперации.ВосстановлениеНДСПоОбъектамНедвижимости, ОрганизацияПлательщикНДС и КонецГода_С2006);
	
	Для каждого ТекущаяОперация Из мПолноеДерево Цикл
		ТекущаяОперация.Контроль = КонтролируемыеОперации[ТекущаяОперация.Узел];
	КонецЦикла; 
	
КонецПроцедуры

мСостояниеОпераций = Новый Соответствие;


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Проверяет наличие в списке отмеченных для обновления отчетов.
//
// Возвращаемое значение:
//   число   – 0,       если не выбран ни один отчет;
//             1 или 2, если имеются помеченные.
//
Функция ПроверкаВыбораОтчетов()

	мЕстьВыбранные = 0;
	ДеревоОтчетов  = ЭлементыФормы.Дерево.Значение;

	Для Каждого СтрокаУровня1 Из ДеревоОтчетов.Строки Цикл
		мЕстьВыбранные = СтрокаУровня1.МеткаВыбора;

		Если СтрокаУровня1.Строки.Количество() > 0 Тогда

			Для Каждого СтрокаУровня2 Из СтрокаУровня1.Строки Цикл
				мЕстьВыбранные = СтрокаУровня2.МеткаВыбора;

				Если мЕстьВыбранные <> 0 Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла;

		КонецЕсли;

		Если мЕстьВыбранные <> 0 Тогда
			Прервать;
		КонецЕсли;

	КонецЦикла;

	Если мЕстьВыбранные = 0 Тогда
		Сообщить("Не выбраны отчеты для обновления.", СтатусСообщения.Внимание);
	КонецЕсли;

	Возврат мЕстьВыбранные;

КонецФункции // ПроверкаВыбораОтчетов()

// Процедура устанавливает (снимает) метки у всех строк дерева.
//
// Параметры:
//  Пометка - число, состояние метки.
//
Процедура УстановитьПометкуСтрокДерева(Пометка)

	Для Каждого СтрокаУровня1 Из Дерево.Строки Цикл

		СтрокаУровня1.МеткаВыбора = Пометка;

		// для вложенных в группу элементов устанавливаем метку
		// выбора в соответствии со состоянием метки группы
		Если СтрокаУровня1.Строки.Количество() > 0 Тогда
			Для Каждого СтрокаУровня2 Из СтрокаУровня1.Строки Цикл
				СтрокаУровня2.МеткаВыбора = Пометка;
			КонецЦикла;
		КонецЕсли;

	КонецЦикла;

КонецПроцедуры // УстановитьПометкуСтрокДерева()


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии()

	ЭтаФорма.АвтоЗаголовок = Ложь;

	ДеревоОбновляемыхОтчетов = НачальноеЗначениеВыбора;

	// Если список одноуровневый, то показывать иерархию не будем
	ЭлементыФормы.Дерево.Колонки["Наименование"].ОтображатьИерархию = Ложь;

	Для Каждого Строка Из ДеревоОбновляемыхОтчетов.Строки Цикл
		Если Строка.Строки.Количество() > 0 Тогда
			ЭлементыФормы.Дерево.Колонки["Наименование"].ОтображатьИерархию = Истина;

			Прервать;
		КонецЕсли;
	КонецЦикла;

	ЭлементыФормы.Дерево.Значение = ДеревоОбновляемыхОтчетов;
	ЭлементыФормы.Дерево.Колонки.Наименование.ДанныеФлажка = "МеткаВыбора";
	ЭлементыФормы.Дерево.НачальноеОтображениеДерева        = НачальноеОтображениеДерева.НеРаскрывать;

	ЭлементыФормы.КнопкаУстановитьВсе.Видимость = Истина;
	ЭлементыФормы.КнопкаСнятьВсе.Видимость      = Истина;

КонецПроцедуры // ПриОткрытии()


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Процедура вызывается при нажатии кнопки "ОК" командной панели формы.
// Возвращает в форму - владелец дерево значений.
//
Процедура КнопкаВыполнитьНажатие(Элемент)

	Если ПроверкаВыбораОтчетов() = 0 Тогда
		Возврат;
	КонецЕсли;

	// в качестве возвращаемого значения принимает
	// дерево значений с помеченными для обновления
	// отчетами
	//
	Закрыть(ЭлементыФормы.Дерево.Значение);

КонецПроцедуры // КнопкаВыполнитьНажатие()


///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ДИАЛОГА

// Процедура вызывается по нажатию кнопки "УстановитьВсе".
//   Устанавливает пометку у всех строк дерева.
//
Процедура КнопкаУстановитьВсеНажатие(Элемент)

	УстановитьПометкуСтрокДерева(1);

КонецПроцедуры // КнопкаУстановитьВсеНажатие()

// Процедура вызывается по нажатию кнопки "СнятьВсе".
// Снимает пометку у всех строк дерева.
//
Процедура КнопкаСнятьВсеНажатие(Элемент)

	УстановитьПометкуСтрокДерева(0);

КонецПроцедуры // КнопкаСнятьВсеНажатие()

// Процедура - обработчик события "ПриИзмененииФлажка" в колонке
// табличного поля.
//   Ставит/снимает пометку у всех подчиненных строк выбранного уровня
// 
Процедура ДеревоПриИзмененииФлажка(Элемент, Колонка)

	НоваяПометка       = Элемент.ТекущаяСтрока.МеткаВыбора;
	ВерхняяГруппировка = Элемент.ТекущаяСтрока.Родитель;

	Если ВерхняяГруппировка <> Неопределено Тогда
		// Проверяем все вложенные строки на предмет
		// того, установлены или сняты ли везде метки.
		// Если нет, то устанавливаем третье состояние
		// метки строки-родителя 
		НеВсеОтмечены = 0;

		Для каждого СтрокаУровня Из ВерхняяГруппировка.Строки Цикл

			Если СтрокаУровня.МеткаВыбора <> НоваяПометка Тогда
				НеВсеОтмечены = 1;

				Прервать;
			КонецЕсли; 

		КонецЦикла; 

		Если НеВсеОтмечены = 1 Тогда
			ВерхняяГруппировка.МеткаВыбора = 2;
		Иначе
			ВерхняяГруппировка.МеткаВыбора = НоваяПометка;
		КонецЕсли;

	КонецЕсли;

	Для Каждого Строка Из Элемент.ТекущаяСтрока.Строки Цикл
		Строка.МеткаВыбора = НоваяПометка;
	КонецЦикла;

КонецПроцедуры // ДеревоПриИзмененииФлажка()

// Процедура - обработчик события "ПередНачаломДобавления" строки
// табличного поля.
//
Процедура ДеревоПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель)

	Отказ = Истина;

КонецПроцедуры // ДеревоПередНачаломДобавления()

// Процедура - обработчик события "ПередУдалением" строки табличного поля.
//
Процедура ДеревоПередУдалением(Элемент, Отказ)

	Отказ = Истина;

КонецПроцедуры // ДеревоПередУдалением()








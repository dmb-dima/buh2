Перем мОрганизация;

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ


// Процедура - обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии()	
	
	Если Организация.Пустая() Тогда
		Организация   = глЗначениеПеременной("ОсновнаяОрганизация");
	КонецЕсли;
	мОрганизация = Организация;
	
	ДатаРКО = ОбщегоНазначения.ПолучитьРабочуюДату();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Выполняет заполнение табличной части
//
Процедура КоманднаяПанельРКОЗаполнить(Кнопка)
	Автозаполнение();
КонецПроцедуры

// Устанавливает флаги в табличной части
//
Процедура КоманднаяПанельРКОУстановитьФлаги(Кнопка)
	
	Для Каждого СтрокаТаблицы Из РКО Цикл
		СтрокаТаблицы.Отметка = Истина
	КонецЦикла;
	
КонецПроцедуры

// Снимает флаги в табличной части
//
Процедура КоманднаяПанельРКОСнятьфлаги(Кнопка)
	
	Для Каждого СтрокаТаблицы Из РКО Цикл
		СтрокаТаблицы.Отметка = Ложь
	КонецЦикла;
	
КонецПроцедуры

// Инвертирует флаги в табличной части 
//
Процедура КоманднаяПанельРКОИнвертировать(Кнопка)
	
	Для Каждого СтрокаТаблицы Из РКО Цикл		
		СтрокаТаблицы.Отметка = Не СтрокаТаблицы.Отметка;
	КонецЦикла;
	
КонецПроцедуры

// Процедура - создает документы РКО по табличной части РКО
//
Процедура ОсновныеДействияФормыСоздать(Кнопка)
	
	СоздатьРКО();
	
КонецПроцедуры

// Процедура - проводит документы РКО по табличной части РКО
//
Процедура ОсновныеДействияФормыПровести(Кнопка)
	
	Если Не ПровестиРКО() Тогда
		Предупреждение("Не все РКО удалось провести!")
	КонецЕсли;
	
	Оповестить("ОбновитьФорму", ,ПлатежнаяВедомость);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

// Процедура - обработчик события "ПриИзменении" поля ввода "Организация".
//
Процедура ОрганизацияПриИзменении(Элемент)
	
	Если мОрганизация <> Организация Тогда
		ПлатежнаяВедомость = Документы.ЗарплатаКВыплатеОрганизаций.ПустаяСсылка();
		РКО.Очистить();
	КонецЕсли;
	мОрганизация = Организация;
	
КонецПроцедуры

// Процедура - обработчик события "НачалоВыбора" поля ввода "ПлатежнаяВедомость".
//
Процедура ПлатежнаяВедомостьНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	Если Не Организация.Пустая() Тогда
		
		ПроцедурыУправленияПерсоналом.ОткрытьФормуВыбораПлатежныхВедомостейОрганизации(Элемент, СтандартнаяОбработка, Организация, Перечисления.СпособыВыплатыЗарплаты.ЧерезКассу) 
		
	КонецЕсли;

КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля ввода "ПлатежнаяВедомость".
//
Процедура ПлатежнаяВедомостьПриИзменении(Элемент)
	
	Автозаполнение();		
	
КонецПроцедуры

Процедура СоздатьНажатие(Элемент)
	СоздатьРКО();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОЙ ЧАСТИ и ее РЕКВИЗИТОВ 

// Процедура - обработчик события "ПриПолученииДанных" таблицы "РКО".
//
Процедура ТабличноеПолеРКОПриПолученииДанных(Элемент, ОформленияСтрок)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА РасходныйКассовыйОрдер.ПометкаУдаления
	|			ТОГДА 1
	|		ИНАЧЕ ВЫБОР
	|				КОГДА РасходныйКассовыйОрдер.Проведен
	|					ТОГДА 0
	|				ИНАЧЕ 2
	|			КОНЕЦ
	|	КОНЕЦ КАК ИндексКартинки
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК РасходныйКассовыйОрдер
	|ГДЕ
	|	РасходныйКассовыйОрдер.Ссылка = &РКО";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	СоответствиеРКО = Новый Соответствие;
	
    // получим данные для отрисовки в ячейках; 
	// если встречается один и тот же РКО - читать данные будем только 1 раз
	Для Каждого Строка Из ОформленияСтрок Цикл
        ТекущийРКО = Строка.ДанныеСтроки.РКО;
		Если ЗначениеЗаполнено(ТекущийРКО) И СоответствиеРКО[ТекущийРКО] = Неопределено Тогда
			Запрос.УстановитьПараметр("РКО", ТекущийРКО);
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				СоответствиеРКО[ТекущийРКО] = Выборка.ИндексКартинки;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	// теперь нарисуем картинки
	Для Каждого Строка Из ОформленияСтрок Цикл
		
		Строка.Ячейки.Картинка.ОтображатьКартинку = Истина;
		
		ИндексКартинкиРКО = СоответствиеРКО[Строка.ДанныеСтроки.РКО];
		Строка.Ячейки.Картинка.ИндексКартинки = ?(ИндексКартинкиРКО = Неопределено,3,ИндексКартинкиРКО);
		
	КонецЦикла;
	
КонецПроцедуры






Процедура УстановитьФлажкиДереваРеквизитыДокументов()
	
	Для каждого СтрокаДокумента Из РеквизитыДокументов.Строки.НайтиСтроки(Новый Структура("Пометка", Истина), Истина)  Цикл
		СтрокаДокумента.Пометка = Ложь;
	КонецЦикла;
	
	Если ЭлементыФормы.СписокГраф.ТекущиеДанные = Неопределено или Не ТипЗнч(ЭлементыФормы.СписокГраф.ТекущиеДанные.Значение) = Тип("СписокЗначений") Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого Элемент Из ЭлементыФормы.СписокГраф.ТекущиеДанные.Значение Цикл
		СтрокаДокумента = РеквизитыДокументов.Строки.Найти(Элемент.Значение, "Имя", Ложь);
		Если Не СтрокаДокумента = Неопределено Тогда
			СтрокаРеквизита = СтрокаДокумента.Строки.Найти(Элемент.Представление, "Имя");
			Если Не СтрокаРеквизита = Неопределено Тогда
				СтрокаРеквизита.Пометка = Истина;
				СтрокаДокумента.Пометка = Истина;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	ЭлементыФормы.РеквизитыДокументов.ОбновитьСтроки();
КонецПроцедуры // () 

Процедура ПостроитьДеревоРеквизитыДокументов()
	ОписаниеТиповХранилищеЗначений = Новый ОписаниеТипов("ХранилищеЗначения");
	РеквизитыДокументов.Строки.Очистить();
	Для каждого ЭлементСписка Из СписокОбрабатываемыхДокументов Цикл
		СтрокаДокумента = РеквизитыДокументов.Строки.Добавить();
		СтрокаДокумента.Имя           = ЭлементСписка.Значение;
		СтрокаДокумента.Представление = ЭлементСписка.Представление;
		Для каждого Реквизит Из Метаданные.Документы[ЭлементСписка.Значение].Реквизиты Цикл
			Если Не Реквизит.Тип = ОписаниеТиповХранилищеЗначений Тогда
				СтрокаРеквизита = СтрокаДокумента.Строки.Добавить();
				СтрокаРеквизита.Имя = Реквизит.Имя;
				СтрокаРеквизита.Представление = Реквизит.Представление();
			КонецЕсли;
		КонецЦикла;
		ЭлементыФормы.РеквизитыДокументов.Развернуть(СтрокаДокумента);
	КонецЦикла;
	
КонецПроцедуры // () 


Процедура ОсновныеДействияФормыОК(Кнопка)
	
	ДоступныеДокументы.Очистить();
	Для каждого ЭлементСписка Из СписокОбрабатываемыхДокументов Цикл
		ДоступныеДокументы.Добавить().ИмяДокумента = ЭлементСписка.Значение;
	КонецЦикла;
	
	ВыводимыеГрафы.Очистить();
	
	Для каждого ЭлементСписка Из СписокГраф Цикл
		Графа = ВыводимыеГрафы.Добавить();
		Графа.ГрафаЖурнала = ЭлементСписка.Представление;
		Графа.СоставГрафы = ЗначениеВСтрокуВнутр(ЭлементСписка.Значение);
	КонецЦикла;
	Закрыть(Истина);
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	Для каждого Документ Из ДоступныеДокументы Цикл
		СписокОбрабатываемыхДокументов.Добавить(Документ.ИмяДокумента, Метаданные.Документы[Документ.ИмяДокумента].Представление());
	КонецЦикла;
	
	Для каждого Графа Из ВыводимыеГрафы Цикл
		СписокГраф.Добавить(ЗначениеИзСтрокиВнутр(Графа.СоставГрафы), Графа.ГрафаЖурнала);
	КонецЦикла; 
	
	ПостроитьДеревоРеквизитыДокументов();
	УстановитьФлажкиДереваРеквизитыДокументов();
	
КонецПроцедуры

Процедура СписокГрафПриАктивизацииСтроки(Элемент)
	ПодключитьОбработчикОжидания("ОбработчикОжиданияСписокГрафПриАктивизацииСтроки", 0.1, Истина);
КонецПроцедуры

// Процедура - обрабочик ожидания для события ПриАктивизацииСтроки
// Списка значений СписокГраф
//
Процедура ОбработчикОжиданияСписокГрафПриАктивизацииСтроки()
	УстановитьФлажкиДереваРеквизитыДокументов();
КонецПроцедуры //  ОбработчикОжиданияСписокГрафПриАктивизацииСтроки

Процедура СписокГрафПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если Не Копирование и НоваяСтрока Тогда
		Элемент.ТекущиеДанные.Значение = Новый СписокЗначений;
		Элемент.ТекущиеДанные.Представление = "Новая графа";
	КонецЕсли;
	
КонецПроцедуры

Процедура РеквизитыДокументовПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ДанныеСтроки=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Ячейка = ОформлениеСтроки.Ячейки.Представление;
	
	Если ЭлементыФормы.СписокГраф.ТекущиеДанные = Неопределено Тогда
		Ячейка.ОтображатьФлажок = Ложь;
	КонецЕсли;
	
	Если ДанныеСтроки.Родитель=Неопределено Тогда
		Ячейка.ТолькоПросмотр = Истина;
		Ячейка.Картинка = БиблиотекаКартинок.ДокументОбъект;
		ОформлениеСтроки.Шрифт = Новый Шрифт(,,Истина);
	Иначе
		Ячейка.Картинка = ЭлементыФормы.КартинкаРеквизита.Картинка;
	КонецЕсли;
	
КонецПроцедуры

Процедура РеквизитыДокументовПриИзмененииФлажка(Элемент, Колонка)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	ЗначениеСпискаГраф = ЭлементыФормы.СписокГраф.ТекущиеДанные.Значение;
	СтрокаЗначенияСпискаГраф =  ЗначениеСпискаГраф.НайтиПоЗначению(ТекущиеДанные.Родитель.Имя);
	Если СтрокаЗначенияСпискаГраф = Неопределено Тогда
		Если ТекущиеДанные.Пометка Тогда
			
			ЗначениеСпискаГраф.Добавить(ТекущиеДанные.Родитель.Имя, ТекущиеДанные.Имя);
			
			Если ЗначениеСпискаГраф.Количество() = 1 Тогда
				ЭлементыФормы.СписокГраф.ТекущиеДанные.Представление = ТекущиеДанные.Представление;
			КонецЕсли;
			
		КонецЕсли;
	Иначе
		Если ТекущиеДанные.Пометка Тогда
			
			СтрокаЗначенияСпискаГраф.Представление = ТекущиеДанные.Имя;
			
			Если ЗначениеСпискаГраф.Количество() = 1 Тогда
				ЭлементыФормы.СписокГраф.ТекущиеДанные.Представление = ТекущиеДанные.Представление;
			КонецЕсли;
			
		Иначе
			ЗначениеСпискаГраф.Удалить(СтрокаЗначенияСпискаГраф)
		КонецЕсли;
		
	КонецЕсли;
	УстановитьФлажкиДереваРеквизитыДокументов();
	
КонецПроцедуры

Процедура КоманднаяПанельРеквизитыДокументовСнятьФлажки(Кнопка)
	
	Если ЭлементыФормы.СписокГраф.ТекущиеДанные = Неопределено или Не ТипЗнч(ЭлементыФормы.СписокГраф.ТекущиеДанные.Значение) = Тип("СписокЗначений") Тогда
		Возврат;
	КонецЕсли;
	ЭлементыФормы.СписокГраф.ТекущиеДанные.Значение.Очистить();
	УстановитьФлажкиДереваРеквизитыДокументов();
	
КонецПроцедуры

Процедура КоманднаяПанельСписокГрафЗаполнитьАвтоматическиВсеОбщиеГрафы(Кнопка)
	
	Если СписокГраф.Количество() и Вопрос("Существующие графы будут очищены. Продолжить?", РежимДиалогаВопрос.ОКОтмена) = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли; 
	
	СтруктураПредставлений = Новый Структура;
	
	СписокГраф.Очистить();
	КоличествоВидовДокументов = 0;
	ВсеРеквизиты = Новый Структура;
	Для каждого ЭлементСписка Из СписокОбрабатываемыхДокументов Цикл
		
		ИмяДокумента = ЭлементСписка.Значение;
			
		МетаданныеДокумента = Метаданные.Документы[ИмяДокумента];
		Для каждого Реквизит Из МетаданныеДокумента.Реквизиты Цикл
			ИмяРеквизита = Реквизит.Имя;
			ДокументыГрафы = Неопределено;
			Если Не ВсеРеквизиты.Свойство(ИмяРеквизита, ДокументыГрафы) Тогда
				ДокументыГрафы = Новый СписокЗначений;
				ВсеРеквизиты.Вставить(ИмяРеквизита, ДокументыГрафы);
				СтруктураПредставлений.Вставить(ИмяРеквизита, Реквизит.Представление())
			КонецЕсли;
			ДокументыГрафы.Добавить(ИмяДокумента, Реквизит.Имя);
				
		КонецЦикла;
			
		КоличествоВидовДокументов = КоличествоВидовДокументов + 1;
		
	КонецЦикла;
	
	Для каждого КлючИЗначение Из ВсеРеквизиты Цикл
		
		ИмяГрафы = КлючИЗначение.Ключ;
		ДокументыГрафы = КлючИЗначение.Значение;
		Если ДокументыГрафы.Количество() = КоличествоВидовДокументов Тогда
			СписокГраф.Добавить(ДокументыГрафы, СтруктураПредставлений[ИмяГрафы]);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОтметитьВыбранныйРеквизит()
	
	ТекущиеДанные = ЭлементыФормы.РеквизитыДокументов.ТекущиеДанные;
	ТекущиеДанныеСпискаГраф = ЭлементыФормы.СписокГраф.ТекущиеДанные;
	Если ТекущиеДанныеСпискаГраф = Неопределено Тогда
		Предупреждение("Не выбрана графа!");
		Возврат;
	ИначеЕсли ТекущиеДанные = Неопределено или ТекущиеДанные.Уровень() = 0 Тогда
		Предупреждение("Не выбран реквизит!");
		Возврат;
	КонецЕсли;
	
	ЗаменятьРеквизитВГрафе = Ложь;
	ЗначениеСпискаГраф = ТекущиеДанныеСпискаГраф.Значение;
	ИмяРеквизита = ТекущиеДанные.Имя;
	Для каждого ЭлементСписка Из СписокОбрабатываемыхДокументов Цикл
		ИмяДокумента = ЭлементСписка.Значение;
			
		МетаданныеДокумента = Метаданные.Документы[ИмяДокумента];
		Если МетаданныеДокумента.Реквизиты.Найти(ИмяРеквизита) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаЗначенияСпискаГраф =  ЗначениеСпискаГраф.НайтиПоЗначению(ИмяДокумента);
		Если Не СтрокаЗначенияСпискаГраф = Неопределено и Не СтрокаЗначенияСпискаГраф.Представление = ИмяРеквизита Тогда
			РезультатВопроса = Вопрос("Существуют документы, для которых в составе графы отмечен реквизит с отличным именем.
			|Изменять для таких документов состав графы?", РежимДиалогаВопрос.ДаНетОтмена);
			Если  РезультатВопроса = КодВозвратаДиалога.Отмена  Тогда
				Возврат;
			ИначеЕсли РезультатВопроса = КодВозвратаДиалога.Да Тогда
				ЗаменятьРеквизитВГрафе = Истина;
			КонецЕсли;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	ЗначениеСпискаГраф = ЭлементыФормы.СписокГраф.ТекущиеДанные.Значение;
	ИмяРеквизита = ТекущиеДанные.Имя;
	Для каждого ЭлементСписка Из СписокОбрабатываемыхДокументов Цикл
		ИмяДокумента = ЭлементСписка.Значение;
			
		МетаданныеДокумента = Метаданные.Документы[ИмяДокумента];
		Если МетаданныеДокумента.Реквизиты.Найти(ИмяРеквизита) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
			
		СтрокаЗначенияСпискаГраф =  ЗначениеСпискаГраф.НайтиПоЗначению(ИмяДокумента);
		Если СтрокаЗначенияСпискаГраф = Неопределено Тогда
			ЗначениеСпискаГраф.Добавить(ИмяДокумента, ИмяРеквизита);
		ИначеЕсли Не СтрокаЗначенияСпискаГраф.Представление = ИмяРеквизита и ЗаменятьРеквизитВГрафе Тогда
			СтрокаЗначенияСпискаГраф.Представление = ИмяРеквизита;
		КонецЕсли;
	КонецЦикла;
	
	УстановитьФлажкиДереваРеквизитыДокументов();
	
КонецПроцедуры // () 

Процедура КонтекстноеМенюРеквизитыДокументовОтметитьВыбранныйРеквизитВоВсехДокументах(Кнопка)
	ОтметитьВыбранныйРеквизит();
КонецПроцедуры


Процедура ОчиститьГрафыОтНевыбранныхДокументов()
	
	Для каждого ЭлементСпискаГраф Из СписокГраф Цикл
		ЗначениеСпискаГраф = ЭлементСпискаГраф.Значение;
		
		Для каждого ЭлементСписка Из ЗначениеСпискаГраф Цикл
			Если СписокОбрабатываемыхДокументов.НайтиПоЗначению(ЭлементСписка.Значение) = Неопределено Тогда
				ЗначениеСпискаГраф.Удалить(ЭлементСписка);
			КонецЕсли; 
		КонецЦикла; 
	КонецЦикла;
	
	
КонецПроцедуры // () 


Процедура СписокОбрабатываемыхДокументовПослеУдаления(Элемент)
	
	ОчиститьГрафыОтНевыбранныхДокументов();
	ПостроитьДеревоРеквизитыДокументов();
	УстановитьФлажкиДереваРеквизитыДокументов();
	
КонецПроцедуры

Процедура ИзменитьСоставОбрабатываемыхДокументов()
	
	Если ПолучитьФорму("ФормаВыбораВидовДокумента", , СписокОбрабатываемыхДокументов).ОткрытьМодально() = Истина Тогда
		ОчиститьГрафыОтНевыбранныхДокументов();
		ПостроитьДеревоРеквизитыДокументов();
		УстановитьФлажкиДереваРеквизитыДокументов();
	КонецЕсли;
	
КонецПроцедуры // () 

Процедура СписокОбрабатываемыхДокументовПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	
	ИзменитьСоставОбрабатываемыхДокументов()
	
КонецПроцедуры

Процедура СписокОбрабатываемыхДокументовПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	Отказ = Истина;
	ИзменитьСоставОбрабатываемыхДокументов()
	
КонецПроцедуры

Процедура КоманднаяПанельСписокОбрабатываемыхДокументовИзменить(Кнопка)
	
	Отказ = Истина;
	ИзменитьСоставОбрабатываемыхДокументов()
	
КонецПроцедуры


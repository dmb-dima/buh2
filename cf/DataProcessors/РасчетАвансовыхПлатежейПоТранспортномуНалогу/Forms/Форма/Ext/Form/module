
Процедура КнопкаЗаполнитьНажатие(Кнопка)
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Предупреждение("Не заполнена организация!");
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Период) Тогда
		Предупреждение("Не заполнен период!");
		Возврат;
	КонецЕсли;
	
	мДатаНачалаПериодаОтчета = НачалоКвартала(Период);
	мДатаКонцаПериодаОтчета = КонецКвартала(Период);
	
	Отказ = Ложь;
	Если ТранспортныеСредства.Количество() > 0 Тогда
		Ответ = Вопрос("Перед автозаполнением произойдет очистка табличных частей. Продолжить?", РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Нет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;

	// Очистим декларацию.
	ТранспортныеСредства.Очистить();
	АвансовыеПлатежи.Очистить();

	// Получим ссылку на налоговый орган, для которого составляется отчетность.
	КодНО = Организация.КодИМНС;
	мСсылкаНО = Справочники.РегистрацияВИФНС.НайтиПоКоду(КодНО, , , Организация);
	
	// Массив для отбора по налоговому органу.
	МассивНО = Новый Массив;
	Если НЕ ЗначениеЗаполнено(мСсылкаНО) Тогда
		МассивНО.Добавить(Справочники.РегистрацияВИФНС.ПустаяСсылка());
	ИначеЕсли мСсылкаНО.Код = Организация.КодИМНС Тогда
		МассивНО.Добавить(Справочники.РегистрацияВИФНС.ПустаяСсылка());
		МассивНО.Добавить(мСсылкаНО);
	Иначе
		МассивНО.Добавить(мСсылкаНО);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация",    Организация);
	Запрос.УстановитьПараметр("НалоговыйОрган", МассивНО);
	
	ТекстОбъединяющегоЗапроса = "";
	
	РасчетныйПериод = мДатаНачалаПериодаОтчета;
	
	Пока РасчетныйПериод <= мДатаКонцаПериодаОтчета Цикл
		
		Запрос.УстановитьПараметр("Период", РасчетныйПериод);
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	1 КАК КоличествоМесяцев,
		|	СписокОсновныхСредств.ОсновноеСредство КАК ОсновноеСредство,
		|	РегистрацияТранспортныхСредствСрезПоследних.РегистрационныйЗнак КАК РегистрационныйЗнак,
		|	РегистрацияТранспортныхСредствСрезПоследних.Марка КАК Марка,
		|	РегистрацияТранспортныхСредствСрезПоследних.ИдентификационныйНомер КАК ИдентификационныйНомер,
		|	ВЫБОР КОГДА РегистрацияТранспортныхСредствСрезПоследних.НалоговыйОрган = ЗНАЧЕНИЕ(Справочник.РегистрацияВИФНС.ПустаяСсылка)
		|		ТОГДА РегистрацияТранспортныхСредствСрезПоследних.Организация.КодПоОКАТО
		|		ИНАЧЕ РегистрацияТранспортныхСредствСрезПоследних.КодПоОКАТО
		|	КОНЕЦ КодПоОКАТО,
		|	РегистрацияТранспортныхСредствСрезПоследних.КодВидаТранспортногоСредства КАК КодВидаТранспортногоСредства,
		|	РегистрацияТранспортныхСредствСрезПоследних.НалоговаяБаза КАК НалоговаяБаза,
		|	РегистрацияТранспортныхСредствСрезПоследних.ЕдиницаИзмеренияНалоговойБазы КАК ЕдиницаИзмеренияНалоговойБазы,
		|	РегистрацияТранспортныхСредствСрезПоследних.НалоговаяСтавка КАК НалоговаяСтавка,
		|	РегистрацияТранспортныхСредствСрезПоследних.НалоговаяЛьгота КАК НалоговаяЛьгота,
		|	РегистрацияТранспортныхСредствСрезПоследних.КодНалоговойЛьготы КАК КодНалоговойЛьготы,
		|	РегистрацияТранспортныхСредствСрезПоследних.ЛьготнаяСтавка КАК ЛьготнаяСтавка,
		|	РегистрацияТранспортныхСредствСрезПоследних.ПроцентУменьшения КАК ПроцентУменьшения,
		|	РегистрацияТранспортныхСредствСрезПоследних.СуммаУменьшения КАК СуммаУменьшения,
		|	РегистрацияТранспортныхСредствСрезПоследних.Период КАК ДатаРегистрации
		|ПОМЕСТИТЬ
		|	РегистрацияТранспортныхСредств" + Формат(РасчетныйПериод, "ДФ=MM") + "
		|ИЗ
		|	(ВЫБРАТЬ
		|		РегистрацияТранспортныхСредствСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|		СУММА(РегистрацияТранспортныхСредствСрезПоследних.ВключатьВНалоговуюБазу) КАК ВключатьВНалоговуюБазу
		|	ИЗ
		|		(ВЫБРАТЬ
		|			РегистрацияТранспортныхСредствСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|			ВЫБОР
		|				КОГДА РегистрацияТранспортныхСредствСрезПоследних.ВключатьВНалоговуюБазу
		|					ТОГДА 1
		|				ИНАЧЕ 0
		|			КОНЕЦ КАК ВключатьВНалоговуюБазу
		|		ИЗ
		|			РегистрСведений.РегистрацияТранспортныхСредств.СрезПоследних(КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&Период, МЕСЯЦ, -1), МЕСЯЦ), Организация = &Организация) КАК РегистрацияТранспортныхСредствСрезПоследних
		|		ГДЕ
		|			РегистрацияТранспортныхСредствСрезПоследних.НалоговыйОрган В (&НалоговыйОрган)
		|
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			РегистрацияТранспортныхСредствСрезПоследних.ОсновноеСредство,
		|			ВЫБОР
		|				КОГДА РегистрацияТранспортныхСредствСрезПоследних.ВключатьВНалоговуюБазу
		|					ТОГДА 1
		|				ИНАЧЕ 0
		|			КОНЕЦ
		|		ИЗ
		|			РегистрСведений.РегистрацияТранспортныхСредств.СрезПоследних(КОНЕЦПЕРИОДА(&Период, МЕСЯЦ), Организация = &Организация) КАК РегистрацияТранспортныхСредствСрезПоследних
		//|		ГДЕ
		//|			РегистрацияТранспортныхСредствСрезПоследних.НалоговыйОрган В (&НалоговыйОрган)
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			РегистрацияТранспортныхСредствСрезПоследних.ОсновноеСредство,
		|			ВЫБОР
		|				КОГДА РегистрацияТранспортныхСредствСрезПоследних.ВключатьВНалоговуюБазу
		|					ТОГДА 1
		|				ИНАЧЕ 0
		|			КОНЕЦ
		|		ИЗ
		|			РегистрСведений.РегистрацияТранспортныхСредств.СрезПоследних(КОНЕЦПЕРИОДА(&Период, МЕСЯЦ), Организация = &Организация 
		|                                                                                                          И ВключатьВНалоговуюБазу = ИСТИНА И Период >= НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ)) КАК РегистрацияТранспортныхСредствСрезПоследних
		//|		ГДЕ
		//|			РегистрацияТранспортныхСредствСрезПоследних.НалоговыйОрган В (&НалоговыйОрган)
		|			) КАК РегистрацияТранспортныхСредствСрезПоследних
		|		
		|	СГРУППИРОВАТЬ ПО
		|		РегистрацияТранспортныхСредствСрезПоследних.ОсновноеСредство) КАК СписокОсновныхСредств
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегистрацияТранспортныхСредств.СрезПоследних(КОНЕЦПЕРИОДА(&Период, МЕСЯЦ), ВключатьВНалоговуюБазу = ИСТИНА И Организация = &Организация) КАК РегистрацияТранспортныхСредствСрезПоследних
		|		ПО СписокОсновныхСредств.ОсновноеСредство = РегистрацияТранспортныхСредствСрезПоследних.ОсновноеСредство
		|ГДЕ
		|	СписокОсновныхСредств.ВключатьВНалоговуюБазу > 0
		//|	И РегистрацияТранспортныхСредствСрезПоследних.НалоговыйОрган В (&НалоговыйОрган)
		|";
		Запрос.Выполнить();
		
		ТекстОбъединяющегоЗапроса = ТекстОбъединяющегоЗапроса
								  + ?(ПустаяСтрока(ТекстОбъединяющегоЗапроса), 
									  "ВЫБРАТЬ РАЗРЕШЕННЫЕ *
		                              |",
									  "ОБЪЕДИНИТЬ ВСЕ
									  |ВЫБРАТЬ *
		                              |")
								  + ?(ПустаяСтрока(ТекстОбъединяющегоЗапроса), 
									  "ПОМЕСТИТЬ РегистрацияТранспортныхСредств
									  |",
									  "")
								  + "ИЗ РегистрацияТранспортныхСредств" + Формат(РасчетныйПериод, "ДФ=MM") + "
									|";
		
		РасчетныйПериод = ДобавитьМесяц(РасчетныйПериод, 1);	
		
	КонецЦикла;
	
	Запрос.Текст = ТекстОбъединяющегоЗапроса;
	РезультатЗапроса = Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(РегистрацияТранспортныхСредств.КоличествоМесяцев) КАК КоличествоМесяцев,
	|	РегистрацияТранспортныхСредств.ОсновноеСредство КАК ОсновноеСредство,
	|	РегистрацияТранспортныхСредств.РегистрационныйЗнак,
	|	РегистрацияТранспортныхСредств.Марка,
	|	РегистрацияТранспортныхСредств.ИдентификационныйНомер,
	|	РегистрацияТранспортныхСредств.КодПоОКАТО КАК КодПоОКАТО,
	|	РегистрацияТранспортныхСредств.КодВидаТранспортногоСредства,
	|	РегистрацияТранспортныхСредств.НалоговаяБаза,
	|	РегистрацияТранспортныхСредств.ЕдиницаИзмеренияНалоговойБазы,
	|	РегистрацияТранспортныхСредств.НалоговаяСтавка,
	|	РегистрацияТранспортныхСредств.НалоговаяЛьгота,
	|	РегистрацияТранспортныхСредств.КодНалоговойЛьготы,
	|	РегистрацияТранспортныхСредств.ЛьготнаяСтавка,
	|	РегистрацияТранспортныхСредств.ПроцентУменьшения,
	|	РегистрацияТранспортныхСредств.СуммаУменьшения,
	|	МАКСИМУМ(РегистрацияТранспортныхСредств.ДатаРегистрации) КАК ДатаРегистрации
	|ИЗ
	|    РегистрацияТранспортныхСредств
	|
	|СГРУППИРОВАТЬ ПО
	|	РегистрацияТранспортныхСредств.ОсновноеСредство,
	|	РегистрацияТранспортныхСредств.РегистрационныйЗнак,
	|	РегистрацияТранспортныхСредств.Марка,
	|	РегистрацияТранспортныхСредств.ИдентификационныйНомер,
	|	РегистрацияТранспортныхСредств.КодПоОКАТО,
	|	РегистрацияТранспортныхСредств.КодВидаТранспортногоСредства,
	|	РегистрацияТранспортныхСредств.НалоговаяБаза,
	|	РегистрацияТранспортныхСредств.ЕдиницаИзмеренияНалоговойБазы,
	|	РегистрацияТранспортныхСредств.НалоговаяСтавка,
	|	РегистрацияТранспортныхСредств.НалоговаяЛьгота,
	|	РегистрацияТранспортныхСредств.КодНалоговойЛьготы,
	|	РегистрацияТранспортныхСредств.ЛьготнаяСтавка,
	|	РегистрацияТранспортныхСредств.ПроцентУменьшения,
	|	РегистрацияТранспортныхСредств.СуммаУменьшения
	|ИТОГИ
	|	КОЛИЧЕСТВО(ОсновноеСредство)
	|ПО
	|	КодПоОКАТО";
	ВыборкаОКАТО = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Если ВыборкаОКАТО.Количество() = 0 Тогда
		
		НаименованиеНО = "";
		
		Если НЕ ПустаяСтрока(НаименованиеНО) 
		 ИЛИ НЕ ПустаяСтрока(КодНО) Тогда
		   
			ПредставлениеНалоговогоОргана = " по " + СокрЛП(НаименованиеНО);
			
			Если НЕ ПустаяСтрока(КодНО) Тогда
				
				ПредставлениеНалоговогоОргана = ПредставлениеНалоговогоОргана + ?(ПустаяСтрока(НаименованиеНО), "ИФНС с кодом ", " (") + СокрЛП(КодНО)  + ?(ПустаяСтрока(НаименованиеНО), "", ")");
				
			КонецЕсли;
			
		Иначе
			
			ПредставлениеНалоговогоОргана = "";
		   
		КонецЕсли;
		
		ИДКонфигурации = РегламентированнаяОтчетность.ИДКонфигурации();
		Если ИДКонфигурации = "УПП" ИЛИ ИДКонфигурации = "КА" Тогда
			
			Если ГлавныйИнтерфейс.Полный.Видимость Тогда
				ПутьКРегистру = "(меню ""Справочники"" - ""Внеоборотные активы"" - ""Регистрация транспортных средств"")";
			ИначеЕсли ГлавныйИнтерфейс.БухгалтерскийИНалоговыйУчет.Видимость Тогда
				ПутьКРегистру = "(меню ""Справочники"" - ""Основные средства и нематериальные активы"" - ""Регистрация транспортных средств"")";
			ИначеЕсли ГлавныйИнтерфейс.УправлениеОборудованием.Видимость Тогда
				ПутьКРегистру = "(меню ""Основные средства"" - ""Регистрация транспортных средств"")";
			Иначе
				ПутьКРегистру = "(меню ""Операции"" - ""Регистры сведений..."" - ""Регистрация транспортных средств"")";
			КонецЕсли;
			
		Иначе
			ПутьКРегистру = "(меню ""ОС"" - ""Регистрация транспортных средств"")";
		КонецЕсли;
		
		Сообщить("Отсутствуют данные о регистрации транспортных средств на " + ПредставлениеПериода(НачалоДня(мДатаНачалаПериодаОтчета), КонецДня(мДатаКонцаПериодаОтчета), "ФП = Истина") + " для " + Организация + ПредставлениеНалоговогоОргана + "
		         |" + ПутьКРегистру + ".");
				 
		Возврат;
		
	КонецЕсли;
	
	Пока ВыборкаОКАТО.Следующий() Цикл
	
		КодОКАТО = ВыборкаОКАТО.КодПоОКАТО;
		
		ВыборкаТранспортныхСредств = ВыборкаОКАТО.Выбрать();
		Пока ВыборкаТранспортныхСредств.Следующий() Цикл
			
			Коэффициент = Окр(ВыборкаТранспортныхСредств.КоличествоМесяцев
							  / (Месяц(мДатаКонцаПериодаОтчета) - Месяц(мДатаНачалаПериодаОтчета) + 1), 2);	
							  
			СтрокаТС = ТранспортныеСредства.Добавить();
            СтрокаТС.КодВида 				= ВыборкаТранспортныхСредств.КодВидаТранспортногоСредства;
			СтрокаТС.ИдентификационныйНомер = ВыборкаТранспортныхСредств.ИдентификационныйНомер;
			СтрокаТС.Марка 					= ВыборкаТранспортныхСредств.Марка;
			СтрокаТС.РегистрационныйЗнак 	= ВыборкаТранспортныхСредств.РегистрационныйЗнак;
			СтрокаТС.НалоговаяБаза 			= ВыборкаТранспортныхСредств.НалоговаяБаза;
			СтрокаТС.ЕдиницаИзмерения 		= ВыборкаТранспортныхСредств.ЕдиницаИзмеренияНалоговойБазы;
			СтрокаТС.Коэффициент 			= Коэффициент;
			СтрокаТС.СтавкаНалога 			= ВыборкаТранспортныхСредств.НалоговаяСтавка;
			СтрокаТС.КодОКАТО 				= КодОКАТО;
			
			Если НЕ (ВыборкаТранспортныхСредств.НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.НеПрименяется) Тогда
				
				// Код налоговой льготы
				СтрокаТС.КодНалоговйЛьготы = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				
				Если ВыборкаТранспортныхСредств.НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.ОсвобождениеОтНалогообложения Тогда
					
					СуммаЛьготы = (ВыборкаТранспортныхСредств.НалоговаяБаза * Коэффициент * ВыборкаТранспортныхСредств.НалоговаяСтавка) / 4;
					
				ИначеЕсли ВыборкаТранспортныхСредств.НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.СнижениеНалоговойСтавки Тогда
					
					СуммаЛьготы = ((ВыборкаТранспортныхСредств.НалоговаяБаза * Коэффициент * ВыборкаТранспортныхСредств.НалоговаяСтавка) / 4)
								- ((ВыборкаТранспортныхСредств.НалоговаяБаза * Коэффициент * ВыборкаТранспортныхСредств.ЛьготнаяСтавка) / 4);
					
				ИначеЕсли ВыборкаТранспортныхСредств.НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.УменьшениеСуммыНалогаВПроцентах Тогда
					
					СуммаЛьготы = ((ВыборкаТранспортныхСредств.НалоговаяБаза * Коэффициент * ВыборкаТранспортныхСредств.НалоговаяСтавка) / 4)
								* ВыборкаТранспортныхСредств.ПроцентУменьшения / 100;
					
				ИначеЕсли ВыборкаТранспортныхСредств.НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.УменьшениеСуммыНалогаНаСумму Тогда
					
					СуммаЛьготы = ВыборкаТранспортныхСредств.СуммаУменьшения;
					
				КонецЕсли;
				
				// Сумма налоговой льготы
				СтрокаТС.СуммаНалоговойЛьготы = СуммаЛьготы;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Расчет();
	
КонецПроцедуры

Процедура Расчет(Строка = Неопределено) Экспорт

	Если Строка = Неопределено Тогда
		Для Каждого Строка Из ТранспортныеСредства Цикл
			Строка.СуммаНалога 			= (Строка.НалоговаяБаза * Строка.Коэффициент * Строка.СтавкаНалога) / 4;
			Строка.СуммаНалогаКуплате 	= Строка.СуммаНалога - Строка.СуммаНалоговойЛьготы/4;
		КонецЦикла;
	Иначе
		Строка.СуммаНалога 			= (Строка.НалоговаяБаза * Строка.Коэффициент * Строка.СтавкаНалога) / 4;
		Строка.СуммаНалогаКуплате 	= Строка.СуммаНалога - Строка.СуммаНалоговойЛьготы/4;
	КонецЕсли;
	
	ПерезаполнитьАвансовыеПлатежи();
	
КонецПроцедуры // Расчет()

Процедура ПерезаполнитьАвансовыеПлатежи()
	АвансовыеПлатежи.Очистить();
	Для Каждого Строка Из ТранспортныеСредства Цикл
		СтрокаПоОКАТО = АвансовыеПлатежи.Найти(Строка.КодОКАТО, "КодОКАТО");
		Если СтрокаПоОКАТО = Неопределено Тогда
			СтрокаПоОКАТО = АвансовыеПлатежи.Добавить();
			СтрокаПоОКАТО.КодОКАТО = Строка.КодОКАТО;
		КонецЕсли;
		СтрокаПоОКАТО.Сумма = СтрокаПоОКАТО.Сумма + Строка.СуммаНалогаКуплате;		
	КонецЦикла;
КонецПроцедуры


Процедура ДействияФормыРегистрацияТранспортныхСредств(Кнопка)
	ФормаРегистра = РегистрыСведений.РегистрацияТранспортныхСредств.ПолучитьФормуСписка();
	ФормаРегистра.Открыть();
КонецПроцедуры


Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	ЗагрузитьПоказателиИзМакета("КодыЛьгот");
	ЗагрузитьПоказателиИзМакета("ВидыТранспортныхСредств");
	ЗагрузитьПоказателиИзМакета("КодыОКЕИ");
	ЗагрузитьПоказателиИзМакета("КоэфКолонка9");
	
	Если Не СохранениеНастроек.ЗаполнитьНастройкиПриОткрытииОтчета(ОбработкаОбъект) Тогда
		
		Период = КонецКвартала(ОбщегоНазначения.ПолучитьРабочуюДату());
		
		СтруктураОбщихПараметров = ВосстановитьЗначение("ОбщиеПараметрыОтчетовХозрасчетный");
		Если ТипЗнч(СтруктураОбщихПараметров) = Тип("Структура") Тогда

			СтруктураОбщихПараметров.Свойство("КонецПериода", Период);
			
			Если Период = '00010101' тогда
				Период = КонецКвартала(ОбщегоНазначения.ПолучитьРабочуюДату());
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры


Процедура ТранспортныеСредстваКодВидаНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	НачальнаяСтрока = мВидыТранспортныхСредств.Найти(Элемент.Значение, "Код");
	Если ЗначениеЗаполнено(НачальнаяСтрока) Тогда
		НоваяСтрока = мВидыТранспортныхСредств.ВыбратьСтроку("Код вида транспортного средства", НачальнаяСтрока);
	Иначе
		НоваяСтрока = мВидыТранспортныхСредств.ВыбратьСтроку("Код вида транспортного средства");
	КонецЕсли;
	Если ЗначениеЗаполнено(НоваяСтрока) Тогда
		Элемент.Значение = НоваяСтрока.Код;
	КонецЕсли;
КонецПроцедуры


Процедура ТранспортныеСредстваЕдиницаИзмеренияНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	НачальнаяСтрока = мКодыОКЕИ.Найти(Элемент.Значение, "Код");
	Если ЗначениеЗаполнено(НачальнаяСтрока) Тогда
		НоваяСтрока = мКодыОКЕИ.ВыбратьСтроку("Единица измерения", НачальнаяСтрока);
	Иначе
		НоваяСтрока = мКодыОКЕИ.ВыбратьСтроку("Единица измерения");
	КонецЕсли;
	Если ЗначениеЗаполнено(НоваяСтрока) Тогда
		Элемент.Значение = НоваяСтрока.Код;
	КонецЕсли;
КонецПроцедуры


Процедура ТранспортныеСредстваКоэффициентНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	НачальнаяСтрока = мКоэфКолонка9.Найти(Элемент.Значение, "Код");
	Если ЗначениеЗаполнено(НачальнаяСтрока) Тогда
		НоваяСтрока = мКоэфКолонка9.ВыбратьСтроку("Коэффициент", НачальнаяСтрока);
	Иначе
		НоваяСтрока = мКоэфКолонка9.ВыбратьСтроку("Коэффициент");
	КонецЕсли;
	Если ЗначениеЗаполнено(НоваяСтрока) Тогда
		Элемент.Значение = НоваяСтрока.Код;
	КонецЕсли;
	
	СтрокаТабличнойЧасти = ЭлементыФормы.ТранспортныеСредства.ТекущиеДанные;
	Расчет(СтрокаТабличнойЧасти);
КонецПроцедуры


Процедура ТранспортныеСредстваКодНалоговйЛьготыНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	НачальнаяСтрока = мКодыЛьгот.Найти(Элемент.Значение, "Код");
	Если ЗначениеЗаполнено(НачальнаяСтрока) Тогда
		НоваяСтрока = мКодыЛьгот.ВыбратьСтроку("Код налоговой льготы", НачальнаяСтрока);
	Иначе
		НоваяСтрока = мКодыЛьгот.ВыбратьСтроку("Код налоговой льготы");
	КонецЕсли;
	Если ЗначениеЗаполнено(НоваяСтрока) Тогда
		Элемент.Значение = НоваяСтрока.Код;
	КонецЕсли;
КонецПроцедуры


Процедура ПересчитатьСуммуНалогов(Элемент)
	СтрокаТабличнойЧасти = ЭлементыФормы.ТранспортныеСредства.ТекущиеДанные;
	Расчет(СтрокаТабличнойЧасти);
КонецПроцедуры


Процедура ТранспортныеСредстваСуммаНалогаПриИзменении(Элемент)
	СтрокаТабличнойЧасти = ЭлементыФормы.ТранспортныеСредства.ТекущиеДанные;
	СтрокаТабличнойЧасти.СуммаНалогаКуплате 	= СтрокаТабличнойЧасти.СуммаНалога - СтрокаТабличнойЧасти.СуммаНалоговойЛьготы/4;
	ПерезаполнитьАвансовыеПлатежи();
КонецПроцедуры


Процедура ТранспортныеСредстваСуммаНалогаКуплатеПриИзменении(Элемент)
	ПерезаполнитьАвансовыеПлатежи();
КонецПроцедуры

// Процедура вызывается по нажатию кнопки "<" формы.
//   Инициализирует изменение периода построения отчета.
//
Процедура КнопкаПредыдущийПериодНажатие(Элемент)

	ИзменитьПериод(-1);

КонецПроцедуры // КнопкаПредыдущийПериодНажатие()

// Процедура вызывается по нажатию кнопки ">" формы.
//   Инициализирует изменение периода построения отчета.
//
Процедура КнопкаСледующийПериодНажатие(Элемент)

	ИзменитьПериод(1);

КонецПроцедуры // КнопкаСледующийПериодНажатие()

// Процедура устанавливает границы периода построения отчета.
//
// Параметры:
//  Шаг          - число, количество стандартных периодов, на которое необходимо
//                 сдвигать период построения отчета;
//
Процедура ИзменитьПериод(Шаг)

	Период  = КонецМесяца(ДобавитьМесяц(Период, 3*Шаг)); 
	
	Если Формат(Период, "ДФ=к") = "4" Тогда
		ИзменитьПериод(Шаг);
	КонецЕсли;

	ПоказатьПериод();

КонецПроцедуры // ИзменитьПериод()

// Процедура управляет показом в форме периода построения отчета.
//
Процедура ПоказатьПериод()

	СтрПериодОтчета = ПредставлениеПериода(НачалоКвартала(Период), КонецКвартала(Период), "ФП = Истина" );

	// Покажем период в диалоге
	ЭлементыФормы.НадписьПериодСоставленияОтчета.Заголовок = СтрПериодОтчета;

КонецПроцедуры // ПоказатьПериод()

Процедура ПриОткрытии()
	
	ПоказатьПериод();

	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Организация = глЗначениеПеременной("ОсновнаяОрганизация");
	КонецЕсли;
		
КонецПроцедуры

Процедура ОсновныеДействияФормыПечать(Кнопка)
	СформироватьОтчет();
КонецПроцедуры

Процедура ТранспортныеСредстваКодОКАТОПриИзменении(Элемент)
	ПерезаполнитьАвансовыеПлатежи();
КонецПроцедуры

Процедура ТранспортныеСредстваПослеУдаления(Элемент)
	ПерезаполнитьАвансовыеПлатежи();
КонецПроцедуры

Процедура ТранспортныеСредстваПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если Копирование Тогда	
		ПерезаполнитьАвансовыеПлатежи();
	КонецЕсли;
КонецПроцедуры

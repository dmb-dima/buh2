Перем ЦиклыОбмена Экспорт;
Перем СоответствиеТиповСодержимогоЭлементамФормы;

Процедура ОсновныеДействияФормыОтмена(Кнопка)
	
	Закрыть();
	
КонецПроцедуры

Процедура ОсновныеДействияФормыОК(Кнопка)
	
	Результат = СформироватьРезультат();
	ВыбранХотяБыОдинТипДокумента = Ложь;
	Для Каждого Эл из Результат Цикл
		Если Эл.Значение Тогда
			ВыбранХотяБыОдинТипДокумента = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Если НЕ ВыбранХотяБыОдинТипДокумента Тогда
		Предупреждение("Выберите виды документов для печати.");
	Иначе
		Закрыть(Результат);
	КонецЕсли;
	
КонецПроцедуры

Функция СформироватьРезультат()
	
	Возврат Новый Структура("ПечататьДокумент,	ПечататьПодтверждениеОтправки,	ПечататьИзвещениеОбОтказеПФР,	ПечататьПротокол,	ПечататьУведомлениеОбУточнении,	ПечататьПротоколПриема2НДФЛ,	ПечататьРеестрСведений2НДФЛ",
							ПечататьДокумент,	ПечататьПодтверждениеОтправки,	ПечататьИзвещениеОбОтказеПФР,	ПечататьПротокол,	ПечататьУведомлениеОбУточнении,	ПечататьПротоколПриема2НДФЛ,	ПечататьРеестрСведений2НДФЛ);
	
КонецФункции

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если ТипЗнч(ЦиклыОбмена) <> Тип("Массив") ИЛИ ЦиклыОбмена.Количество() = 0 Тогда
		Предупреждение("Не выбраны циклы обмена!");
		Отказ = Истина;
		Закрыть(Ложь);
	КонецЕсли;
	
	ПечататьДокумент = (ВосстановитьЗначение("НастройкиГрупповойПечатиЦикловОбмена_ПечататьДокумент") <> Ложь);
	ПечататьПодтверждениеОтправки = (ВосстановитьЗначение("НастройкиГрупповойПечатиЦикловОбмена_ПечататьПодтверждениеОтправки") <> Ложь);
	ПечататьИзвещениеОбОтказеПФР = (ВосстановитьЗначение("НастройкиГрупповойПечатиЦикловОбмена_ПечататьИзвещениеОбОтказеПФР") <> Ложь);
	ПечататьПротокол = (ВосстановитьЗначение("НастройкиГрупповойПечатиЦикловОбмена_ПечататьПротокол") <> Ложь);
	ПечататьУведомлениеОбУточнении = (ВосстановитьЗначение("НастройкиГрупповойПечатиЦикловОбмена_ПечататьУведомлениеОбУточнении") <> Ложь);
	ПечататьПротоколПриема2НДФЛ = (ВосстановитьЗначение("НастройкиГрупповойПечатиЦикловОбмена_ПечататьПротоколПриема2НДФЛ") <> Ложь);
	ПечататьРеестрСведений2НДФЛ = (ВосстановитьЗначение("НастройкиГрупповойПечатиЦикловОбмена_ПечататьРеестрСведений2НДФЛ") <> Ложь);
	
	ЧислоЦикловОбмена = ЦиклыОбмена.Количество();
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	                      |	КОЛИЧЕСТВО(ИСТИНА) КАК ЧислоДокументовТипа,
	                      |	СодержимоеТранспортныхКонтейнеров.Тип
	                      |ИЗ
	                      |	РегистрСведений.СодержимоеТранспортныхКонтейнеров КАК СодержимоеТранспортныхКонтейнеров
	                      |ГДЕ
	                      |	СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение.ЦиклОбмена В(&ЦиклОбмена)
	                      |	И СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение.Тип В(&Тип)
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	СодержимоеТранспортныхКонтейнеров.Тип");
	ВозможныеТипыСообщений = Новый Массив;
	ВозможныеТипыСообщений.Добавить(Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетность);
	ВозможныеТипыСообщений.Добавить(Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетностьПФР);
	ВозможныеТипыСообщений.Добавить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОтправкиОтчетности);
	ВозможныеТипыСообщений.Добавить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеПолученияОтчетностиПФР);
	ВозможныеТипыСообщений.Добавить(Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляОтчетности);
	ВозможныеТипыСообщений.Добавить(Перечисления.ТипыТранспортныхСообщений.ПротоколПФР);
	ВозможныеТипыСообщений.Добавить(Перечисления.ТипыТранспортныхСообщений.УведомлениеОбУточненииНБО);
	ВозможныеТипыСообщений.Добавить(Перечисления.ТипыТранспортныхСообщений.Протокол2НДФЛ);
	Запрос.УстановитьПараметр("Тип", ВозможныеТипыСообщений);
	Запрос.УстановитьПараметр("ЦиклОбмена", ЦиклыОбмена);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ЭУ = СоответствиеТиповСодержимогоЭлементамФормы[Выборка.Тип];
		Если ЭУ = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		ЭУ.Доступность = Истина;
		ЭУ.Заголовок = ЭУ.Заголовок + " (" + Формат(Выборка.ЧислоДокументовТипа, "ЧГ=") + ")";
	КонецЦикла;
	
	Для Каждого Эл Из СоответствиеТиповСодержимогоЭлементамФормы Цикл
		Если НЕ Эл.Значение.Доступность Тогда
			Эл.Значение.Значение = Ложь;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если ЭлементыФормы.ФлажокИсходныйДокумент.Доступность Тогда
		СохранитьЗначение("НастройкиГрупповойПечатиЦикловОбмена_ПечататьДокумент", ПечататьДокумент);
	КонецЕсли;
	
	Если ЭлементыФормы.ФлажокПодтверждениеОтправки.Доступность Тогда
		СохранитьЗначение("НастройкиГрупповойПечатиЦикловОбмена_ПечататьПодтверждениеОтправки", ПечататьПодтверждениеОтправки);
	КонецЕсли;
	
	Если ЭлементыФормы.ФлажокПечататьИзвещениеОбОтказеПФР.Доступность Тогда
		СохранитьЗначение("НастройкиГрупповойПечатиЦикловОбмена_ПечататьИзвещениеОбОтказеПФР", ПечататьИзвещениеОбОтказеПФР);
	КонецЕсли;
	
	Если ЭлементыФормы.ФлажокПротокол.Доступность Тогда
		СохранитьЗначение("НастройкиГрупповойПечатиЦикловОбмена_ПечататьПротокол", ПечататьПротокол);
	КонецЕсли;
	
	Если ЭлементыФормы.ФлажокУведомлениеОбУточнении.Доступность Тогда
		СохранитьЗначение("НастройкиГрупповойПечатиЦикловОбмена_ПечататьУведомлениеОбУточнении", ПечататьУведомлениеОбУточнении);
	КонецЕсли;
	
	Если ЭлементыФормы.ФлажокПротоколПриема2НДФЛ.Доступность Тогда
		СохранитьЗначение("НастройкиГрупповойПечатиЦикловОбмена_ПечататьПротоколПриема2НДФЛ", ПечататьПротоколПриема2НДФЛ);
	КонецЕсли;
	
	Если ЭлементыФормы.ФлажокРеестрСведений2НДФЛ.Доступность Тогда
		СохранитьЗначение("НастройкиГрупповойПечатиЦикловОбмена_ПечататьРеестрСведений2НДФЛ", ПечататьРеестрСведений2НДФЛ);
	КонецЕсли;
	
КонецПроцедуры

СоответствиеТиповСодержимогоЭлементамФормы = Новый Соответствие;
СоответствиеТиповСодержимогоЭлементамФормы.Вставить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ФайлОтчетности, ЭлементыФормы.ФлажокИсходныйДокумент);
СоответствиеТиповСодержимогоЭлементамФормы.Вставить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ФайлОтчетностиПФР, ЭлементыФормы.ФлажокИсходныйДокумент);

СоответствиеТиповСодержимогоЭлементамФормы.Вставить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПодтверждениеОбОтправке, ЭлементыФормы.ФлажокПодтверждениеОтправки);

СоответствиеТиповСодержимогоЭлементамФормы.Вставить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПодтверждениеПолученияОтчетностиПФР, ЭлементыФормы.ФлажокПечататьИзвещениеОбОтказеПФР);

СоответствиеТиповСодержимогоЭлементамФормы.Вставить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПротоколВходногоКонтроля, ЭлементыФормы.ФлажокПротокол);
СоответствиеТиповСодержимогоЭлементамФормы.Вставить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПротоколПФР, ЭлементыФормы.ФлажокПротокол);

СоответствиеТиповСодержимогоЭлементамФормы.Вставить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.УведомлениеОбУточненииНБО, ЭлементыФормы.ФлажокУведомлениеОбУточнении);

СоответствиеТиповСодержимогоЭлементамФормы.Вставить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Протокол2НДФЛ, ЭлементыФормы.ФлажокПротоколПриема2НДФЛ);

СоответствиеТиповСодержимогоЭлементамФормы.Вставить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Реестр2НДФЛ, ЭлементыФормы.ФлажокРеестрСведений2НДФЛ);

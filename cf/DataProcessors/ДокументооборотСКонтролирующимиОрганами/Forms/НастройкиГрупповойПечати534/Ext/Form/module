Перем ЦиклыОбмена Экспорт;
Перем СоответствиеТиповСодержимогоЭлементамФормы;

Процедура ОсновныеДействияФормыОтмена(Кнопка)
	
	Закрыть();
	
КонецПроцедуры

Процедура ОсновныеДействияФормыОК(Кнопка)
	
	Результат = СформироватьРезультат();
	ВыбранХотяБыОдинТипДокумента = Ложь;
	Для Каждого Эл из Результат Цикл
		Если Эл.Значение Тогда
			ВыбранХотяБыОдинТипДокумента = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Если НЕ ВыбранХотяБыОдинТипДокумента Тогда
		Предупреждение("Выберите виды документов для печати.");
	Иначе
		Закрыть(Результат);
	КонецЕсли;
	
КонецПроцедуры

Функция СформироватьРезультат()
	
	Возврат Новый Структура("ПечататьДокумент,	ПечататьПодтверждениеДатыОтправки,	ПечататьРезультатПриема,	ПечататьРезультатОбработки",
							ПечататьДокумент,	ПечататьПодтверждениеДатыОтправки,	ПечататьРезультатПриема,	ПечататьРезультатОбработки);
	
КонецФункции

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если ТипЗнч(ЦиклыОбмена) <> Тип("Массив") ИЛИ ЦиклыОбмена.Количество() = 0 Тогда
		Предупреждение("Не выбраны циклы обмена!");
		Отказ = Истина;
		Закрыть(Ложь);
	КонецЕсли;
	
	ПечататьДокумент = (ВосстановитьЗначение("НастройкиГрупповойПечатиЦикловОбмена_ПечататьДокумент") <> Ложь);
	ПечататьПодтверждениеДатыОтправки = (ВосстановитьЗначение("НастройкиГрупповойПечатиЦикловОбмена_ПечататьПодтверждениеДатыОтправки") <> Ложь);
	ПечататьРезультатПриема = (ВосстановитьЗначение("НастройкиГрупповойПечатиЦикловОбмена_ПечататьРезультатПриема") <> Ложь);
	ПечататьРезультатОбработки = (ВосстановитьЗначение("НастройкиГрупповойПечатиЦикловОбмена_ПечататьРезультатОбработки") <> Ложь);
	
	ЧислоЦикловОбмена = ЦиклыОбмена.Количество();
	
	ЧислоСообщенийПоФлажкам = Новый Соответствие;
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	                      |	КОЛИЧЕСТВО(ИСТИНА) КАК ЧислоДокументовТипа,
	                      |	СодержимоеТранспортныхКонтейнеров.Тип
	                      |ИЗ
	                      |	РегистрСведений.СодержимоеТранспортныхКонтейнеров КАК СодержимоеТранспортныхКонтейнеров
	                      |ГДЕ
	                      |	СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение.ЦиклОбмена В(&ЦиклОбмена)
	                      |	И СодержимоеТранспортныхКонтейнеров.ТранспортноеСообщение.Тип В(&Тип)
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	СодержимоеТранспортныхКонтейнеров.Тип");
	
	ВозможныеТипыСообщений = Новый Массив;
	ВозможныеТипыСообщений.Добавить(Перечисления.ТипыТранспортныхСообщений.ДекларацияНП);
	ВозможныеТипыСообщений.Добавить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДекларацияНО);
	ВозможныеТипыСообщений.Добавить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаДекларацияНО);
	ВозможныеТипыСообщений.Добавить(Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиДекларацияНО);
	
	ВозможныеТипыСообщений.Добавить(Перечисления.ТипыТранспортныхСообщений.Форма2НДФЛНП);
	ВозможныеТипыСообщений.Добавить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеФорма2НДФЛНО);
	ВозможныеТипыСообщений.Добавить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаФорма2НДФЛНО);
	
	Запрос.УстановитьПараметр("Тип", ВозможныеТипыСообщений);
	Запрос.УстановитьПараметр("ЦиклОбмена", ЦиклыОбмена);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ЭУ = СоответствиеТиповСодержимогоЭлементамФормы[Выборка.Тип];
		Если ЭУ = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ЧислоСообщенийПоФлажку = ЧислоСообщенийПоФлажкам[ЭУ];
		Если НЕ ЗначениеЗаполнено(ЧислоСообщенийПоФлажку) Тогда
			ЧислоСообщенийПоФлажкам.Вставить(ЭУ, Выборка.ЧислоДокументовТипа);
		Иначе
			ЧислоСообщенийПоФлажкам.Вставить(ЭУ, ЧислоСообщенийПоФлажку + Выборка.ЧислоДокументовТипа);
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого Эл Из ЧислоСообщенийПоФлажкам Цикл
		
		ЭУ = Эл.Ключ;
		ЭУ.Доступность = Истина;
		ЭУ.Заголовок = ЭУ.Заголовок + " (" + Формат(Эл.Значение, "ЧГ=") + ")";
		
	КонецЦикла;
	
	Для Каждого Эл Из СоответствиеТиповСодержимогоЭлементамФормы Цикл
		Если НЕ Эл.Значение.Доступность Тогда
			Эл.Значение.Значение = Ложь;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если ЭлементыФормы.ФлажокИсходныйДокумент.Доступность Тогда
		СохранитьЗначение("НастройкиГрупповойПечатиЦикловОбмена_ПечататьДокумент", ПечататьДокумент);
	КонецЕсли;
	
	Если ЭлементыФормы.ФлажокПодтверждениеДатыОтправки.Доступность Тогда
		СохранитьЗначение("НастройкиГрупповойПечатиЦикловОбмена_ПечататьПодтверждениеДатыОтправки", ПечататьПодтверждениеДатыОтправки);
	КонецЕсли;
	
	Если ЭлементыФормы.ФлажокРезультатПриема.Доступность Тогда
		СохранитьЗначение("НастройкиГрупповойПечатиЦикловОбмена_ПечататьРезультатПриема", ПечататьРезультатПриема);
	КонецЕсли;
	
	Если ЭлементыФормы.ФлажокРезультатОбработки.Доступность Тогда
		СохранитьЗначение("НастройкиГрупповойПечатиЦикловОбмена_ПечататьРезультатОбработки", ПечататьРезультатОбработки);
	КонецЕсли;
	
КонецПроцедуры

СоответствиеТиповСодержимогоЭлементамФормы = Новый Соответствие;
СоответствиеТиповСодержимогоЭлементамФормы.Вставить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ФайлОтчетности, ЭлементыФормы.ФлажокИсходныйДокумент);
СоответствиеТиповСодержимогоЭлементамФормы.Вставить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Форма2НДФЛ, ЭлементыФормы.ФлажокИсходныйДокумент);

СоответствиеТиповСодержимогоЭлементамФормы.Вставить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПодтверждениеДатыОтправки, ЭлементыФормы.ФлажокПодтверждениеДатыОтправки);

СоответствиеТиповСодержимогоЭлементамФормы.Вставить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.КвитанцияОПриеме, ЭлементыФормы.ФлажокРезультатПриема);
СоответствиеТиповСодержимогоЭлементамФормы.Вставить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.УведомлениеОбОтказе, ЭлементыФормы.ФлажокРезультатПриема);
СоответствиеТиповСодержимогоЭлементамФормы.Вставить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Реестр2НДФЛ, ЭлементыФормы.ФлажокРезультатПриема);
СоответствиеТиповСодержимогоЭлементамФормы.Вставить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Протокол2НДФЛ, ЭлементыФормы.ФлажокРезультатПриема);

СоответствиеТиповСодержимогоЭлементамФормы.Вставить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ИзвещениеОВводе, ЭлементыФормы.ФлажокРезультатОбработки);
СоответствиеТиповСодержимогоЭлементамФормы.Вставить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.УведомлениеОбУточнении, ЭлементыФормы.ФлажокРезультатОбработки);

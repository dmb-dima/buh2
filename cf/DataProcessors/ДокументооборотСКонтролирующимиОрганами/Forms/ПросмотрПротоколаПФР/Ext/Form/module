
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Заголовок = "Протокол " + ИмяФайла;
	
	// считываем текст из файла уведомления
	Попытка
		ЧтениеТекста = Новый ЧтениеТекста;
		ЧтениеТекста.Открыть(Протокол);
		СтрокаXML = ЧтениеТекста.Прочитать();
		ЧтениеТекста.Закрыть();
	Исключение
		Отказ = Истина;
		Предупреждение("Ошибка чтения содержимого протокола из файла:
						|
						|" + ИнформацияОбОшибке().Описание);
		Возврат;
	КонецПопытки;
	
	// загружаем XML из строки в дерево
	ДеревоXML = КонтекстЭДО.ЗагрузитьСтрокуXMLВДеревоЗначений(СтрокаXML);
	Если ДеревоXML = Неопределено Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	// определяем дату-время получения
	УзлыДатаВремяОтправки = ДеревоXML.Строки.НайтиСтроки(Новый Структура("Имя, Тип", "датаВремяОтправки", "Э"), Истина);
	Если УзлыДатаВремяОтправки.Количество() = 0 Тогда
		ДатаВремяОтправки = "";
	Иначе
		ДатаВремяОтправки = Формат(ДатаВремяИзСтрокиXML(УзлыДатаВремяОтправки[0].Значение), "ДЛФ=DDT; ДП=-");
	КонецЕсли;
	
	// получаем признак того, что протокол положительный
	УзлыЯвляетсяПоложительным = ДеревоXML.Строки.НайтиСтроки(Новый Структура("Имя, Тип", "являетсяПоложительным", "Э"), Истина);
	Если УзлыЯвляетсяПоложительным.Количество() = 0 Тогда
		ПротоколЯвляетсяПоложительным = "";
	Иначе
		ЗначениеСтр = УзлыЯвляетсяПоложительным[0].Значение;
		ЗначениеБулево = XMLЗначение(Тип("Булево"), ЗначениеСтр);
		ПротоколЯвляетсяПоложительным = ?(ЗначениеБулево, "Да", "Нет");
		Если НЕ ЗначениеБулево Тогда
			ЭлементыФормы.НадписьПротоколЯвляетсяПоложительным.ЦветТекста = Новый Цвет(255, 0, 0);
		КонецЕсли;
	КонецЕсли;
	
	// находим узел "протокол"
	УзелПротокол = ДеревоXML.Строки.Найти("протокол", "Имя");
	Если УзелПротокол <> Неопределено Тогда
	
		// находим информацию о приложениях в XML
		УзлыОписаниеПриложений = УзелПротокол.Строки.НайтиСтроки(Новый Структура("Имя, Тип", "описаниеПриложений", "Э"));
		Если УзлыОписаниеПриложений.Количество() > 0 Тогда
			
			УзелОписаниеПриложений = УзлыОписаниеПриложений[0];
			
			// перебираем приложения
			УзлыПриложение = УзелОписаниеПриложений.Строки.НайтиСтроки(Новый Структура("Имя", "приложение"));
			Если УзлыПриложение.Количество() > 0 Тогда
				
				Для Каждого УзелПриложение Из УзлыПриложение Цикл
					
					СтрПриложение = Приложения.Строки.Добавить();
					
					// находим подчиненный узел имяФайла
					УзелИмяФайла = УзелПриложение.Строки.Найти("имяФайла");
					Если УзелИмяФайла <> Неопределено Тогда
						СтрПриложение.Имя = УзелИмяФайла.Значение;
					КонецЕсли;
					
					// находим подчиненный узел идентификаторДокумента
					УзелИдентификаторДокумента = УзелПриложение.Строки.Найти("идентификаторДокумента");
					Если УзелИдентификаторДокумента <> Неопределено Тогда
						СтрПриложение.Идентификатор = УзелИдентификаторДокумента.Значение;
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ДатаВремяИзСтрокиXML(ЗначениеСтр)
	
	Попытка
		Возврат XMLЗначение(Тип("Дата"), ЗначениеСтр);
	Исключение
		Возврат '00010101';
	КонецПопытки;
	
КонецФункции

Процедура ПриложенияВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	ИмяФайлаДокумента = ВыбраннаяСтрока.Имя;
	
	Вложения = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(СообщениеПротокол, Истина, , ИмяФайлаДокумента);
	Если Вложения.Количество() = 0 Тогда
		Предупреждение("Приложение не найдено.");
		Возврат;
	КонецЕсли;
	
	КонтекстЭДО.ПоказатьПриложениеПФР(Вложения[0]);
	
КонецПроцедуры

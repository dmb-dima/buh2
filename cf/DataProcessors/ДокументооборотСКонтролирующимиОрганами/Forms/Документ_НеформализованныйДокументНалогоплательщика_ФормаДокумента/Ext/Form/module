Перем ИмяФайла;
Перем ХранилищеФайла;
Перем СоответствиеРасширенияТипуФайла;
Перем СоответствиеИмениКнопкиКодуДействия;
Перем СоответствиеТипаВложенияКартинке;
Перем ТипВложения;

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
//

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	Перем ИмяФайлаСохр, ХранилищеФайлаСохр, ТипВложенияСохр;
	
	ЭтоНовый = ЭтоНовый();
	
	Если ЭтоНовый И НЕ ЗначениеЗаполнено(ПараметрОбъектКопирования) Тогда
		
		УчетПоВсемОрганизациям = РегламентированнаяОтчетность.ПолучитьПризнакУчетаПоВсемОрганизациям();
		ЭлементыФормы.Организация.ТолькоПросмотр = НЕ УчетПоВсемОрганизациям;
		
		ОргПоУмолчанию = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");
		Если ЗначениеЗаполнено(ОргПоУмолчанию)
		И КонтекстЭДО.СписокДопустимыхОрганизацийВОбъектахОбмена().Найти(ОргПоУмолчанию) <> Неопределено
		И ((ЗначениеЗаполнено(ОргПоУмолчанию) И НЕ УчетПоВсемОрганизациям)
		ИЛИ (НЕ ЗначениеЗаполнено(Организация) И УчетПоВсемОрганизациям И (ЗначениеЗаполнено(ОргПоУмолчанию)))) Тогда
			Организация = ОргПоУмолчанию;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЭтоНовый И НЕ ЗначениеЗаполнено(ПараметрОбъектКопирования) Тогда
		Тема = "Текстовое сообщение";
		ТипСодержимого = 0;
	Иначе
		КонтекстЭДО.ПолучитьВложениеНеформализованногоДокумента(?(НЕ ЗначениеЗаполнено(ПараметрОбъектКопирования), Ссылка, ПараметрОбъектКопирования), ИмяФайлаСохр, ХранилищеФайлаСохр, ТипВложенияСохр);
		Если ТипВложенияСохр = Перечисления.ТипыВложенийНеформализованныхДокументовНалогоплательщика.ТекстовыйДокумент Тогда
			ТипСодержимого = 0;
			Тема = Лев(ИмяФайлаСохр, СтрДлина(ИмяФайлаСохр) - 4);
			ВремФайл = ПолучитьИмяВременногоФайла("txt");
			Попытка
				ХранилищеФайлаСохр.Получить().Записать(ВремФайл);
				ОбъектЧтениеТекста = Новый ЧтениеТекста(ВремФайл);
				Содержимое = ОбъектЧтениеТекста.Прочитать();
				ОбъектЧтениеТекста.Закрыть();
				УдалитьФайлы(ВремФайл);
			Исключение
				Предупреждение("Не удалось отобразить содержимое!");
			КонецПопытки;
		Иначе
			ТипСодержимого = 1;
			ИмяФайла = ИмяФайлаСохр;
			ХранилищеФайла = ХранилищеФайлаСохр;
			ТипВложения = ТипВложенияСохр;
		КонецЕсли;
	КонецЕсли;
	
	УстановитьФокус();
	
	УправлениеЭУ();
	
КонецПроцедуры

Процедура УстановитьФокус()
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		ТекущийЭлемент = ЭлементыФормы.Организация;
	ИначеЕсли ТипСодержимого = 0 Тогда
		Если ПустаяСтрока(Тема) Тогда
			ТекущийЭлемент = ЭлементыФормы.Тема;
		ИначеЕсли ПустаяСтрока(Содержимое) Тогда
			ТекущийЭлемент = ЭлементыФормы.Содержимое;
		Иначе
			ТекущийЭлемент = ЭлементыФормы.ПереключательСодержимое;
		КонецЕсли;
	ИначеЕсли ТипСодержимого = 1 Тогда
		Если НЕ ЗначениеЗаполнено(ИмяФайла) Тогда
			ТекущийЭлемент = ЭлементыФормы.КоманднаяПанельСодержимое;
		Иначе
			ТекущийЭлемент = ЭлементыФормы.ПереключательСодержимое;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	//МеханизмНумерацииОбъектов.ДобавитьВМенюДействияКнопкуРедактированияНомера(ЭлементыФормы.ДействияФормы.Кнопки.Подменю);
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Номер);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Сообщить("Не задана организация!", СтатусСообщения.Важное);
		Отказ = Истина;
	КонецЕсли;
	
	Если ТипСодержимого = 0 Тогда // это текстовый документ
		Если ПустаяСтрока(Тема) Тогда
			Сообщить("Тема не задана!", СтатусСообщения.Важное);
			Отказ = Истина;
		КонецЕсли;
		Если ПустаяСтрока(Содержимое) Тогда
			Сообщить("Содержание документа не заполнено.", СтатусСообщения.Важное);
			Отказ = Истина;
		КонецЕсли;
	Иначе
		Если ХранилищеФайла = Неопределено Тогда
			Сообщить("Документ не выбран!", СтатусСообщения.Важное);
			Отказ = Истина;
		КонецЕсли;
		Если НЕ Отказ И НЕ ЗначениеЗаполнено(ИмяФайла) Тогда
			Сообщить("Не указано имя документа!", СтатусСообщения.Важное);
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ТипСодержимого = 0 Тогда // это текстовый документ
		ВремФайл = ПолучитьИмяВременногоФайла("txt");
		ОбъектЗаписьТекста = Новый ЗаписьТекста(ВремФайл, КодировкаТекста.ANSI);
		ОбъектЗаписьТекста.Записать(Содержимое);
		ОбъектЗаписьТекста.Закрыть();
		ХранилищеТекстовогоФайла = Новый ХранилищеЗначения(Новый ДвоичныеДанные(ВремФайл), Новый СжатиеДанных(9));
		КонтекстЭДО.ДобавитьВложениеНеформализованногоДокумента(Ссылка, СокрЛП(Тема) + ".txt", ХранилищеТекстовогоФайла, Перечисления.ТипыВложенийНеформализованныхДокументовНалогоплательщика.ТекстовыйДокумент, КонтекстЭДО.ОпределитьРазмер(ВремФайл));
		УдалитьФайлы(ВремФайл);
	Иначе
		КонтекстЭДО.ДобавитьВложениеНеформализованногоДокумента(Ссылка, ИмяФайла, ХранилищеФайла, ТипВложения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПослеЗаписи()
	
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ КОМАНДНОЙ ПАНЕЛИ ВНЕШНЕГО ДОКУМЕНТА
//

Процедура КоманднаяПанельФайлВыгрузить(Кнопка)
	
	ВыгрузитьФайл();
	
КонецПроцедуры

Процедура КоманднаяПанельФайлЗагрузить(Кнопка)
	
	ЗагрузитьФайл();
	
КонецПроцедуры

Функция ЗагрузитьФайл()
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайла.Заголовок = "Выберите документ";
	ДиалогВыбораФайла.Фильтр = "Документ Microsoft Word (*.doc)|*.doc|Документ RTF (*.rtf)|*.rtf|Таблица Microsoft Excel (*.xls)|*.xls";
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла = Истина;
	
	сохрИндексФильтраПриЗагрузкеНеформализованногоДокументаНалогоплательщика = ВосстановитьЗначение("ИндексФильтраПриЗагрузкеНеформализованногоДокументаНалогоплательщика");
	Если сохрИндексФильтраПриЗагрузкеНеформализованногоДокументаНалогоплательщика <> Неопределено Тогда
		Если сохрИндексФильтраПриЗагрузкеНеформализованногоДокументаНалогоплательщика >= 0 И сохрИндексФильтраПриЗагрузкеНеформализованногоДокументаНалогоплательщика <= 2 Тогда
			ДиалогВыбораФайла.ИндексФильтра = сохрИндексФильтраПриЗагрузкеНеформализованногоДокументаНалогоплательщика;
		КонецЕсли;
	КонецЕсли;
	
	Если ДиалогВыбораФайла.Выбрать() Тогда
		Расширение = ВРЕГ(Прав(ДиалогВыбораФайла.ПолноеИмяФайла, 4));
		Если Расширение <> ".DOC" И Расширение <> ".RTF" И Расширение <> ".XLS" Тогда
			Предупреждение("Документы выбранного типа не могут быть использованы в качестве неформализованных документов налогоплательщика!");
			Возврат Ложь;
		КонецЕсли;
		ОбъектФайл = Новый Файл(ДиалогВыбораФайла.ПолноеИмяФайла);
		Если НЕ ОбъектФайл.Существует() Тогда
			Предупреждение("Указанный файл не существует!");
			Возврат Ложь;
		КонецЕсли;
		Если ЗначениеЗаполнено(ИмяФайла) Тогда
			Ответ = Вопрос("Заменить загруженный ранее документ (""" + ИмяФайла + """)?", РежимДиалогаВопрос.ДаНет);
			Если Ответ <> КодВозвратаДиалога.Да Тогда
				Возврат Ложь;
			КонецЕсли;
		КонецЕсли;
		ИмяФайла = ОбъектФайл.Имя;
		ТипВложения = СоответствиеРасширенияТипуФайла[Прав(Расширение, 3)];
		Попытка
			ХранилищеФайла = Новый ХранилищеЗначения(Новый ДвоичныеДанные(ОбъектФайл.ПолноеИмя), Новый СжатиеДанных(9));
		Исключение
			Предупреждение("Не удалось загрузить документ!
							|
							|" + ОписаниеОшибки());
			Возврат Ложь;
		КонецПопытки;
		СохранитьЗначение("ИндексФильтраПриЗагрузкеНеформализованногоДокументаНалогоплательщика", ДиалогВыбораФайла.ИндексФильтра);
		Модифицированность = Истина;
		УправлениеЭУ();
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

Функция ВыгрузитьФайл()
	
	Если НЕ ЗначениеЗаполнено(ИмяФайла) Тогда
		Предупреждение("Не задано имя файла!");
		Возврат Ложь;
	КонецЕсли;
	
	Если ХранилищеФайла = Неопределено Тогда
		Предупреждение("Нет информации для выгрузки!");
		Возврат Ложь;
	КонецЕсли;
	
	ВыборКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ВыборКаталога.Заголовок = "Выберите каталог для сохранения документа";
	Если ВыборКаталога.Выбрать() Тогда
		ПолноеИмяФайла = ?(Прав(ВыборКаталога.Каталог, 1) = "\", ВыборКаталога.Каталог, ВыборКаталога.Каталог + "\") + СокрЛП(ИмяФайла);
		ОбъектФайл = Новый Файл(ПолноеИмяФайла);
		Если ОбъектФайл.Существует() И Вопрос("В выбранном каталоге уже существует файл с именем" + Символы.ПС + ОбъектФайл.Имя + Символы.ПС + "Переписать существующий файл?", РежимДиалогаВопрос.ДаНет) <> КодВозвратаДиалога.Да Тогда
			Возврат Ложь;
		КонецЕсли;
		Попытка
			ХранилищеФайла.Получить().Записать(ПолноеИмяФайла);
		Исключение
			Предупреждение("Не удалось сохранить документ в файл""" + Символы.ПС + ПолноеИмяФайла + Символы.ПС + Символы.ПС + ОписаниеОшибки());
			Возврат Ложь;
		КонецПопытки;
		Предупреждение("Документ успешно выгружен.");
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ КОМАНДНОЙ ПАНЕЛИ ТЕКСТОВОГО СОДЕРЖИМОГО
//

Процедура КоманднаяПанельТекстЗагрузить(Кнопка)
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайла.Заголовок = "Выберите текстовый документ";
	ДиалогВыбораФайла.Фильтр = "Текстовый документ (*.txt)|*.txt";
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла = Истина;
	
	Если ДиалогВыбораФайла.Выбрать() Тогда
		Если НЕ ПустаяСтрока(Содержимое) Тогда
			Ответ = Вопрос("Имеющийся текст будет удален. Продолжить?", РежимДиалогаВопрос.ОКОтмена);
			Если Ответ <> КодВозвратаДиалога.ОК Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
		Попытка
			ОбъектЧтениеТекста = Новый ЧтениеТекста(ДиалогВыбораФайла.ПолноеИмяФайла);
			СодержимоеИзФайла = ОбъектЧтениеТекста.Прочитать();
		Исключение
			Предупреждение("Не удалось прочитать содержимое!");
			Возврат;
		КонецПопытки;
		Если НЕ ЗначениеЗаполнено(СодержимоеИзФайла) Тогда
			Предупреждение("Выбранный файл пуст!");
			Возврат;
		КонецЕсли;
		Содержимое = СодержимоеИзФайла;
		Модифицированность = Истина;
		ОбъектФайл = Новый Файл(ДиалогВыбораФайла.ПолноеИмяФайла);
		ИмяБезРасширения = СокрЛП(ОбъектФайл.ИмяБезРасширения);
		Если НЕ ПустаяСтрока(Тема) Тогда
			Ответ = Вопрос("Изменить тему на заголовок файла (""" + ИмяБезРасширения + """)?", РежимДиалогаВопрос.ДаНет);
			Если Ответ <> КодВозвратаДиалога.Да Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
		Тема = ИмяБезРасширения;
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельТекстВыгрузить(Кнопка)
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Если НЕ ПустаяСтрока(Тема) Тогда
		ДиалогВыбораФайла.ПолноеИмяФайла = Тема;
	КонецЕсли;
	ДиалогВыбораФайла.Заголовок = "Укажите файл для сохранения";
	ДиалогВыбораФайла.Фильтр = "Текстовый документ (*.txt)|*.txt";
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла = Истина;
	
	Если ДиалогВыбораФайла.Выбрать() Тогда
		ОбъектЗаписьТекста = Новый ЗаписьТекста(ДиалогВыбораФайла.ПолноеИмяФайла, КодировкаТекста.ANSI);
		ОбъектЗаписьТекста.ЗаписатьСтроку(Содержимое);
		ОбъектЗаписьТекста.Закрыть();
		Предупреждение("Содержимое выгружено.");
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ПОДМЕНЮ "ОТПРАВКА" ВЕРХНЕЙ КОМАНДНОЙ ПАНЕЛИ ФОРМЫ
//

Процедура ДействияФормыОтправить(Кнопка)
	
	Если Модифицированность и Вопрос("Для продолжения необходимо сохранить введеную информацию." + Символы.ПС + "Продолжить?", РежимДиалогаВопрос.ДаНет) <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	Попытка
		РезультатЗаписи = ЗаписатьВФорме();
	Исключение
		РезультатЗаписи = Ложь;
	КонецПопытки;
	Если НЕ РезультатЗаписи Тогда
		Предупреждение("Во время сохранения произошли ошибки! Продолжение невозможно.");
		Возврат;
	КонецЕсли;
	КонтекстЭДО.ОтправкаНеформализованногоДокумента(Ссылка, СоответствиеИмениКнопкиКодуДействия[Кнопка.Имя]);
	
КонецПроцедуры

Процедура ДействияФормыЦиклыОбмена(Кнопка)
	
	Если ЭтоНовый() Тогда
		Предупреждение("Документ еще не сохранялся.
		|Циклы обмена могут быть связаны только с сохраненными документами.");
		Возврат;
	КонецЕсли;
	
	КонтекстЭДО.ПолучитьФорму("УправлениеОбменом").Открыть();
	Оповестить("Показать циклы обмена", Ссылка);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ПОЛЯ ВВОДА "ОРГАНИЗАЦИЯ"
//

Процедура ОрганизацияНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	РезультатВыбора = КонтекстЭДО.ВыбратьОрганизации(Элемент.Значение, Ложь);
	Если РезультатВыбора <> Неопределено Тогда
		Организация = РезультатВыбора;
		ПриИзмененииОрганизации();
		Если Не ПустаяСтрока(Номер) Тогда
			МеханизмНумерацииОбъектов.СброситьУстановленныйКодНомерОбъекта(ЭтотОбъект, "Номер", ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОрганизацияНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СписокДоступныхОрганизаций = Новый СписокЗначений;
	СписокДоступныхОрганизаций.ЗагрузитьЗначения(КонтекстЭДО.СписокДопустимыхОрганизацийВОбъектахОбмена());
	РезультатВыбора = ВыбратьИзСписка(СписокДоступныхОрганизаций, Элемент, СписокДоступныхОрганизаций.НайтиПоЗначению(Организация));
	Если РезультатВыбора <> Неопределено Тогда
		Организация = РезультатВыбора.Значение;
		ПриИзмененииОрганизации();
		Если Не ПустаяСтрока(Номер) Тогда
			МеханизмНумерацииОбъектов.СброситьУстановленныйКодНомерОбъекта(ЭтотОбъект, "Номер", ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриИзмененииОрганизации()
	
	Получатель = Неопределено;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
//

Процедура ДействияФормыРедактироватьНомер(Кнопка)
	
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
			
КонецПроцедуры

Процедура ПереключательСодержимоеПриИзменении(Элемент)
	
	УправлениеЭУ();
	
	Если ТипСодержимого = 1 И НЕ ЗначениеЗаполнено(ИмяФайла) Тогда
		ЗагрузитьФайл();
	КонецЕсли;
	
КонецПроцедуры

Процедура УправлениеЭУ()
	
	ЭтоТекстовоеСодержимое = (ТипСодержимого = 0);
	
	Если ЭтоТекстовоеСодержимое Тогда
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.Текст;
	Иначе
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.Документ;
		ЭлементыФормы.ИмяДокумента.Заголовок = ?(Не ЗначениеЗаполнено(ИмяФайла), "<не выбран>", ИмяФайла);
		ПиктограммаДокумента = СоответствиеТипаВложенияКартинке[ТипВложения];
		ЭлементыФормы.ИмяДокумента.Картинка = ?(ЗначениеЗаполнено(ПиктограммаДокумента), ПиктограммаДокумента, Новый Картинка);
	КонецЕсли;
	
КонецПроцедуры

Процедура ТемаПриИзменении(Элемент)
	
	НовоеЗначение = КонтекстЭДО.СформироватьИмяФайла(Элемент.Значение);
	Если Элемент.Значение <> НовоеЗначение Тогда
		Элемент.Значение = НовоеЗначение;
		Предупреждение("Тема не должна содержать символы /, \, :, *, ?, "", <, >, |.
						|Тема была скорректирована.");
	КонецЕсли;
	
КонецПроцедуры

Процедура ИмяДокументаНажатие(Элемент)
	
	Если НЕ ЗначениеЗаполнено(ИмяФайла) Тогда
		Предупреждение("Документ отсутствует.");
		Возврат;
	ИначеЕсли НЕ ЗначениеЗаполнено(ХранилищеФайла) Тогда
		Предупреждение("Документ пуст!");
		Возврат;
	КонецЕсли;
	
	Ответ = Вопрос("Для просмотра документ будет выгружен во временный файл с измененным именем.
					|Продолжить?", РежимДиалогаВопрос.ДаНет);
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла(ИмяФайла);
	Попытка
		ХранилищеФайла.Получить().Записать(ИмяВременногоФайла);
	Исключение
		Предупреждение("Не удалось выгрузить документ во временный файл!
						|
						|" + ОписаниеОшибки());
		Возврат;
	КонецПопытки;
	ЗапуститьПриложение(ИмяВременногоФайла);
	
КонецПроцедуры

Процедура ОрганизацияПриИзменении(Элемент)
	
	ПриИзмененииОрганизации();
	
	Если НЕ ПустаяСтрока(Номер) Тогда
		МеханизмНумерацииОбъектов.СброситьУстановленныйКодНомерОбъекта(ЭтотОбъект, "Номер", ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Опрос форм" И Параметр.Ключ = Ссылка Тогда
		Параметр.Форма = ЭтаФорма;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
//

СоответствиеРасширенияТипуФайла = Новый Соответствие;
СоответствиеРасширенияТипуФайла.Вставить("DOC", Перечисления.ТипыВложенийНеформализованныхДокументовНалогоплательщика.ДокументMicrosoftWord);
СоответствиеРасширенияТипуФайла.Вставить("RTF", Перечисления.ТипыВложенийНеформализованныхДокументовНалогоплательщика.ДокументMicrosoftWord);
СоответствиеРасширенияТипуФайла.Вставить("XLS", Перечисления.ТипыВложенийНеформализованныхДокументовНалогоплательщика.ДокументMicrosoftExcel);

СоответствиеТипаВложенияКартинке = Новый Соответствие;
СоответствиеТипаВложенияКартинке.Вставить(Перечисления.ТипыВложенийНеформализованныхДокументовНалогоплательщика.ДокументMicrosoftWord, БиблиотекаКартинок.ПиктограммаФайла_Word);
СоответствиеТипаВложенияКартинке.Вставить(Перечисления.ТипыВложенийНеформализованныхДокументовНалогоплательщика.ДокументMicrosoftExcel, БиблиотекаКартинок.ПиктограммаФайла_Excel);

СоответствиеИмениКнопкиКодуДействия = Новый Соответствие;
СоответствиеИмениКнопкиКодуДействия.Вставить("Отправить", 2);
СоответствиеИмениКнопкиКодуДействия.Вставить("ВКонвертИПодписать", 1);
СоответствиеИмениКнопкиКодуДействия.Вставить("ВКонверт", 0);

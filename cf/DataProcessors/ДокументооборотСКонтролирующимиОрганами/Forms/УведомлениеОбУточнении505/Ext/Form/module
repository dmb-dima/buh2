Перем КрасныйЦвет;

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Сообщение) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	// извлекаем файл уведомления из содержимого сообщения
	СтрУведомления = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(Сообщение, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.УведомлениеОбУточнении, ИмяФайлаУведомления);
	Если СтрУведомления.Количество() = 0 Тогда
		Предупреждение("Уведомление об уточнении не обнаружено среди содержимого сообщения.");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	СтрУведомление = СтрУведомления[0];
	
	// записываем вложение во временный файл
	ФайлУведомления = ПолучитьИмяВременногоФайла("xml");
	Попытка
		СтрУведомление.Данные.Получить().Записать(ФайлУведомления);
	Исключение
		Сообщить("Ошибка выгрузки уведомления об уточнении во временный файл:" + Символы.ПС + ИнформацияОбОшибке().Описание, СтатусСообщения.Важное);
		Отказ = Истина;
		Возврат;
	КонецПопытки;
	
	// считываем квитанцию из файла в дерево XML
	ОписаниеОшибки = "";
	ДеревоXML = КонтекстЭДО.ЗагрузитьXMLВДеревоЗначений(ФайлУведомления, , ОписаниеОшибки);
	КонтекстЭДО.УдалитьВременныйФайл(ФайлУведомления);
	Если НЕ ЗначениеЗаполнено(ДеревоXML) Тогда
		Сообщить("Ошибка чтения XML из файла уведомления об уточнении:" + Символы.ПС + ИнформацияОбОшибке().Описание, СтатусСообщения.Важное);
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	
	// анализируем XML
	УзелФайл = ДеревоXML.Строки.Найти("Файл", "Имя");
	Если НЕ ЗначениеЗаполнено(УзелФайл) Тогда
		Сообщить("Некорректная структура XML уведомления об уточнении: не обнаружен узел ""Файл"".", СтатусСообщения.Важное);
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	УзелДокумент = УзелФайл.Строки.Найти("Документ", "Имя");
	Если НЕ ЗначениеЗаполнено(УзелДокумент) Тогда
		Сообщить("Некорректная структура XML уведомления об уточнении: не обнаружен узел ""Документ"".", СтатусСообщения.Важное);
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	УзелСведУвед = УзелДокумент.Строки.Найти("СведУвед", "Имя");
	Если НЕ ЗначениеЗаполнено(УзелСведУвед) Тогда
		Сообщить("Некорректная структура XML уведомления об уточнении: не обнаружен узел ""СведУвед"".", СтатусСообщения.Важное);
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	
	// разбираем ветку с общими сведениями уведомления
	УзелОбщСвУвед = УзелСведУвед.Строки.Найти("ОбщСвУвед", "Имя");
	Если НЕ ЗначениеЗаполнено(УзелОбщСвУвед) Тогда
		Сообщить("Некорректная структура XML уведомления об уточнении: не обнаружен узел ""ОбщСвУвед"".", СтатусСообщения.Важное);
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ОбщиеСведения = Новый Структура;
	Для Каждого УзелОбщСвед Из УзелОбщСвУвед.Строки Цикл
		ОбщиеСведения.Вставить(УзелОбщСвед.Имя, СокрЛП(УзелОбщСвед.Значение));
	КонецЦикла;
	
	Если ОбщиеСведения.Свойство("ИмяОбрабФайла") Тогда
		ИмяОбрабФайла = ОбщиеСведения.ИмяОбрабФайла;
	КонецЕсли;
	
	Если ОбщиеСведения.Свойство("ИдФайл") Тогда
		ИдФайл = ОбщиеСведения.ИдФайл;
	КонецЕсли;
	
	Если ОбщиеСведения.Свойство("ИдДок") Тогда
		ИдДок = ОбщиеСведения.ИдДок;
	КонецЕсли;
	
	Если ОбщиеСведения.Свойство("ДатаПрием") Тогда
		ДатаПрием = ОбщиеСведения.ДатаПрием;
	КонецЕсли;
	
	Если ОбщиеСведения.Свойство("КНД") Тогда
		КНД = ОбщиеСведения.КНД;
	КонецЕсли;
	
	Если ОбщиеСведения.Свойство("НаимОтч") Тогда
		НаимОтч = ОбщиеСведения.НаимОтч;
	КонецЕсли;
	
	Если ОбщиеСведения.Свойство("НомКорр") Тогда
		НомКорр = ОбщиеСведения.НомКорр;
	КонецЕсли;
	
	Если ОбщиеСведения.Свойство("Период") Тогда
		ОтчетныйПериод = ОбщиеСведения.Период;
	КонецЕсли;
	
	Если ОбщиеСведения.Свойство("ПериодНаим") Тогда
		ПериодНаим = СокрЛП(ОбщиеСведения.ПериодНаим);
		Если ЗначениеЗаполнено(ОтчетныйПериод) Тогда
			ОтчетныйПериод = ОтчетныйПериод + " (" + ПериодНаим + ")";
		Иначе
			ОтчетныйПериод = ПериодНаим;
		КонецЕсли;
	КонецЕсли;
	
	Если ОбщиеСведения.Свойство("ОтчетГод") Тогда
		ОтчетГод = ОбщиеСведения.ОтчетГод;
	КонецЕсли;
	
	Если ОбщиеСведения.Свойство("ДатаФормУвед") Тогда
		ДатаФормУвед = ОбщиеСведения.ДатаФормУвед;
	КонецЕсли;
	
	Если ОбщиеСведения.Свойство("РегНом") Тогда
		РегНом = ОбщиеСведения.РегНом;
	КонецЕсли;
	
	Если ОбщиеСведения.Свойство("ПрогрКомпл") Тогда
		ПрогрКомпл = ОбщиеСведения.ПрогрКомпл;
	КонецЕсли;
	
	Если ОбщиеСведения.Свойство("ТекстОшОб") Тогда
		ТекстОшОб = ОбщиеСведения.ТекстОшОб;
	КонецЕсли;
	Если ЗначениеЗаполнено(ТекстОшОб) Тогда
		ЭлементыФормы.ПанельОбобщенныйРезультат.Свертка = РежимСверткиЭлементаУправления.Нет;
	Иначе
		ЭлементыФормы.ПанельОбобщенныйРезультат.Свертка = РежимСверткиЭлементаУправления.Низ;
	КонецЕсли;
	
	
	СоответствиеКодовОшибокТекстам = СоответствиеКодовОшибокТекстам();
	
	// заполняем результаты проверки
	УзлыРекНал = УзелСведУвед.Строки.НайтиСтроки(Новый Структура("Имя, Тип", "РекНал", "Э"));
	КоличествоРекомендаций = УзлыРекНал.Количество();
	Для Каждого УзелРекНал Из УзлыРекНал Цикл
		НовСтр = РезультатыПроверки.Добавить();
		НовСтр.ТекстСообщения = СокрЛП(УзелРекНал.Значение);
	КонецЦикла;
	
	// разбираем ветку с ошибками
	УзелВыявлОшФайл = УзелСведУвед.Строки.Найти("ВыявлОшФайл", "Имя");
	Если НЕ ЗначениеЗаполнено(УзелВыявлОшФайл) Тогда
		Сообщить("Некорректная структура XML уведомления об уточнении: не обнаружен узел ""ВыявлОшФайл"".", СтатусСообщения.Важное);
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	// (!) в формате 5.04 узел СвПоОшибке на 2 уровня ниже узла СведУвед 
	УзлыСвПоОшибке = УзелСведУвед.Строки.НайтиСтроки(Новый Структура("Имя, Тип", "СвПоОшибке", "Э"), Истина);
	КоличествоОшибок = УзлыСвПоОшибке.Количество();
	Для Каждого УзелСвПоОшибке Из УзлыСвПоОшибке Цикл
		НовСтр = РезультатыПроверки.Добавить();
		НовСтр.ЭтоОшибка = Истина;
		Для Каждого Эл Из УзелСвПоОшибке.Строки Цикл
			ИмяУзла = Эл.Имя;
			Если ИмяУзла = "ПолОшЭл" Тогда
				НовСтр.Местоположение = СокрЛП(Эл.Значение);
			ИначеЕсли ИмяУзла = "ЗнЭлем" Тогда
				НовСтр.ОшибочноеЗначение = СокрЛП(Эл.Значение);
			ИначеЕсли ИмяУзла = "КодОшибки" Тогда
				НовСтр.КодОшибки = СокрЛП(Эл.Значение);
				Если НЕ ЗначениеЗаполнено(НовСтр.ТекстСообщения) Тогда
					ТекстСообщенияПоКоду = СоответствиеКодовОшибокТекстам[НовСтр.КодОшибки];
					Если ЗначениеЗаполнено(ТекстСообщенияПоКоду) Тогда
						НовСтр.ТекстСообщения = ТекстСообщенияПоКоду;
					КонецЕсли;
				КонецЕсли;
			ИначеЕсли ИмяУзла = "ТекстОш" Тогда
				Если ЗначениеЗаполнено(Эл.Значение) Тогда
					НовСтр.ТекстСообщения = СокрЛП(Эл.Значение);
				КонецЕсли;
			ИначеЕсли ИмяУзла = "ИдОш" Тогда
				НовСтр.Местоположение = СокрЛП(Эл.Значение);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Заголовок = СокрЛП("Уведомление об уточнении " + СокрЛП(ИмяФайлаУведомления));
	
КонецПроцедуры

Функция СоответствиеКодовОшибокТекстам()
	
	МакетКодовОшибок = КонтекстЭДО.ПолучитьМакет("КодыОшибокУведомленияОбУточнении");
	Результат = Новый Соответствие;
	
	Для Инд = 1 По МакетКодовОшибок.ВысотаТаблицы Цикл
		Результат.Вставить(СокрЛП(МакетКодовОшибок.Область(Инд, 1, Инд, 1).Текст), СокрЛП(МакетКодовОшибок.Область(Инд, 2, Инд, 2).Текст));
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Процедура РезультатыПроверкиПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		ДанныеСтроки = ОформлениеСтроки.ДанныеСтроки;
		Если ДанныеСтроки <> Неопределено Тогда
			
			НомерСтроки = ДанныеСтроки.Владелец().Индекс(ДанныеСтроки);
			ОформлениеСтроки.Ячейки.НомерСтроки.УстановитьТекст(НомерСтроки + 1);
			
			Если ДанныеСтроки.ЭтоОшибка Тогда
				ОформлениеСтроки.ЦветТекста = КрасныйЦвет;
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПолеДанныхОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

КрасныйЦвет = Новый Цвет(255, 0, 0);

Перем ДатаНачалаПериода;
Перем ДатаОкончанияПериода;
Перем Периоды;

Процедура ОсновныеДействияФормыОК(Кнопка)
	
	Если Проверить() Тогда
		Закрыть(СформироватьРезультат());
	КонецЕсли;
	
КонецПроцедуры

Функция Проверить()
	
	ПризнакОшибки = Ложь;
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Сообщить("Не указана организация.", СтатусСообщения.Важное);
		ПризнакОшибки = Истина;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВидОтчета) Тогда
		Сообщить("Не указан вид отчета.", СтатусСообщения.Важное);
		ПризнакОшибки = Истина;
	КонецЕсли;
	
	Если ВидДокумента <> 0 И ВидДокумента <> 1 Тогда
		Сообщить("Не указан вид документа.", СтатусСообщения.Важное);
		ПризнакОшибки = Истина;
	ИначеЕсли ВидДокумента = 1 И НомерКорректировки = 0 Тогда
		Сообщить("Не указан номер корректировки.", СтатусСообщения.Важное);
		ПризнакОшибки = Истина;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(НалоговыйОрган) Тогда
		Сообщить("Не указан налоговый орган.", СтатусСообщения.Важное);
		ПризнакОшибки = Истина;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Периодичность) Тогда
		Сообщить("Не указана периодичность.", СтатусСообщения.Важное);
		ПризнакОшибки = Истина;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Период) Тогда
		Сообщить("Не указан период.", СтатусСообщения.Важное);
		ПризнакОшибки = Истина;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Год) Тогда
		Сообщить("Не указан год.", СтатусСообщения.Важное);
		ПризнакОшибки = Истина;
	КонецЕсли;
	
	Возврат НЕ ПризнакОшибки;
	
КонецФункции

Функция СформироватьРезультат()
	
	Если ТипЗнч(НачальноеЗначениеВыбора) = Тип("Структура") Тогда
		Результат = НачальноеЗначениеВыбора;
	Иначе
		Результат = Новый Структура;
	КонецЕсли;
	
	Результат.Вставить("Организация",			Организация);
	Результат.Вставить("ВидОтчета",				ВидОтчета);
	Результат.Вставить("ВидДокумента",			ВидДокумента);
	Результат.Вставить("НалоговыйОрган",		НалоговыйОрган);
	Результат.Вставить("Периодичность",			Периодичность);
	Результат.Вставить("ДатаНачалаПериода",		ДатаНачалаПериода);
	Результат.Вставить("ДатаОкончанияПериода",	ДатаОкончанияПериода);
	
	Возврат Результат;
	
КонецФункции

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(НачальноеЗначениеВыбора) И ТипЗнч(НачальноеЗначениеВыбора) = Тип("Структура") Тогда
		
		НачальноеЗначениеВыбора.Свойство("Организация", Организация);
		НачальноеЗначениеВыбора.Свойство("ВидОтчета", ВидОтчета);
		
		// разбираем вид документа
		ИсхВидДокумента = Неопределено;
		НачальноеЗначениеВыбора.Свойство("ВидДокумента", ИсхВидДокумента);
		Если ИсхВидДокумента = 0 Тогда
			ВидДокумента = 0;
			НомерКорректировки = 0;
		ИначеЕсли ИсхВидДокумента <> Неопределено Тогда
			ВидДокумента = 1;
			НомерКорректировки = ИсхВидДокумента;
		КонецЕсли;
		
		НачальноеЗначениеВыбора.Свойство("НалоговыйОрган", НалоговыйОрган);
		
		// устанавливаем периодичность
		НачальноеЗначениеВыбора.Свойство("Периодичность", Периодичность);
		ПриИзмененииПериодичности();
		
		// устанавливаем период
		НачальноеЗначениеВыбора.Свойство("ДатаНачалаПериода", ДатаНачалаПериода);
		Если ТипЗнч(ДатаНачалаПериода) <> Тип("Дата") Тогда
			ДатаНачалаПериода = '00010101';
		КонецЕсли;
		
		НачальноеЗначениеВыбора.Свойство("ДатаОкончанияПериода", ДатаОкончанияПериода);
		Если ТипЗнч(ДатаОкончанияПериода) <> Тип("Дата") Тогда
			ДатаОкончанияПериода = '00010101';
		КонецЕсли;
		
		НайтиПериод();
		
		Год = Год(ДатаОкончанияПериода);
		
	Иначе
		
		ПриИзмененииПериодичности();
		
	КонецЕсли;
	
	УправлениеЭУ();
	
КонецПроцедуры

Процедура НайтиПериод()
	
	Если НЕ ЗначениеЗаполнено(Периодичность) ИЛИ НЕ ЗначениеЗаполнено(ДатаНачалаПериода) ИЛИ НЕ ЗначениеЗаполнено(ДатаОкончанияПериода) Тогда
		ПериодРезультат = Неопределено;
	Иначе
		
		РезультатПоиска = Периоды.НайтиСтроки(Новый Структура("Периодичность, МесяцНачалаПериода, МесяцОкончанияПериода", Периодичность, Месяц(ДатаНачалаПериода), Месяц(ДатаОкончанияПериода)));
		Если РезультатПоиска.Количество() > 0 Тогда
			Период = РезультатПоиска[0];
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОсновныеДействияФормыОтмена(Кнопка)
	
	Закрыть();
	
КонецПроцедуры

Процедура ДобавитьОпределениеПериода(Периодичность, МесяцНачалаПериода, МесяцОкончанияПериода, Представление)
	
	НовСтр = Периоды.Добавить();
	НовСтр.Периодичность		= Периодичность;
	НовСтр.МесяцНачалаПериода	= МесяцНачалаПериода;
	НовСтр.МесяцОкончанияПериода= МесяцОкончанияПериода;
	НовСтр.Представление		= Представление;
	
КонецПроцедуры

Процедура ПриИзмененииПериодичности(НоваяПериодичность = Неопределено)
	
	Если НоваяПериодичность <> Неопределено Тогда
		Периодичность = НоваяПериодичность;
		Период = Неопределено;
	КонецЕсли;
	
	ПериодыПериодичности = Периоды.НайтиСтроки(Новый Структура("Периодичность", Периодичность));
	ЭлементыФормы.Период.СписокВыбора.Очистить();
	Для Каждого ПериодПериодичности Из ПериодыПериодичности Цикл
		ЭлементыФормы.Период.СписокВыбора.Добавить(ПериодПериодичности, ПериодПериодичности.Представление);
	КонецЦикла;
	
	РассчитатьДатуНачалаИКонцаПериода();
	
КонецПроцедуры

Процедура УправлениеЭУ()
	
	ЭлементыФормы.НомерКорректировки.Доступность = (ВидДокумента = 1);
	
	Если Периодичность = Перечисления.Периодичность.Год Тогда
		Период = ЭлементыФормы.Период.СписокВыбора.Получить(0).Значение;
		ЭлементыФормы.Период.Доступность = Ложь;
	Иначе
		ЭлементыФормы.Период.Доступность = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПолеВыбораВидДокументаОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

Процедура ПолеВыбораВидДокументаПриИзменении(Элемент)
	
	УправлениеЭУ();
	
КонецПроцедуры

Процедура ПериодичностьОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

Процедура ПериодПриИзменении(Элемент)
	
	РассчитатьДатуНачалаИКонцаПериода();
	
КонецПроцедуры

Процедура ГодПриИзменении(Элемент)
	
	РассчитатьДатуНачалаИКонцаПериода();
	
КонецПроцедуры

Процедура ПривестиПериодКПериодичности()
	
	Если Период = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	РезультатПоиска = Периоды.НайтиСтроки(Новый Структура("Периодичность, МесяцНачалаПериода, МесяцОкончанияПериода", Периодичность, Период.МесяцНачалаПериода, Период.МесяцОкончанияПериода));
	Если РезультатПоиска.Количество() = 0 Тогда
		РезультатПоиска = Периоды.НайтиСтроки(Новый Структура("Периодичность, МесяцОкончанияПериода", Периодичность, Период.МесяцОкончанияПериода));
	КонецЕсли;
	
	Если РезультатПоиска.Количество() = 0 Тогда
		Период = Неопределено;
	Иначе
		Период = РезультатПоиска[0];
	КонецЕсли;
	
КонецПроцедуры

Процедура РассчитатьДатуНачалаИКонцаПериода()
	
	Если Период = Неопределено ИЛИ Год = 0 Тогда
		ДатаНачалаПериода = '00010101';
		ДатаОкончанияПериода = '00010101';
	Иначе
		ДатаНачалаПериода = НачалоМесяца(Дата(Год, Период.МесяцНачалаПериода, 1));
		ДатаОкончанияПериода = КонецМесяца(Дата(Год, Период.МесяцОкончанияПериода, 1));
	КонецЕсли;
	
КонецПроцедуры

Процедура ПериодичностьПриИзменении(Элемент)
	
	ПриИзмененииПериодичности();
	ПривестиПериодКПериодичности();
	
	УправлениеЭУ();
	
КонецПроцедуры

Процедура ПериодОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

ПериодичностьПолугодиеДоступна = Метаданные.Перечисления.Периодичность.ЗначенияПеречисления.Найти("Полугодие") <> Неопределено;

Периоды = Новый ТаблицаЗначений;
Периоды.Колонки.Добавить("Периодичность");
Периоды.Колонки.Добавить("МесяцНачалаПериода");
Периоды.Колонки.Добавить("МесяцОкончанияПериода");
Периоды.Колонки.Добавить("Представление");

// год
ДобавитьОпределениеПериода(Перечисления.Периодичность.Год, 1, 12, "Год");

// полугодие
Если ПериодичностьПолугодиеДоступна Тогда
	ДобавитьОпределениеПериода(Перечисления.Периодичность.Полугодие, 1, 6, "I полугодие");
	ДобавитьОпределениеПериода(Перечисления.Периодичность.Полугодие, 1, 12, "I - II полугодие");
	ДобавитьОпределениеПериода(Перечисления.Периодичность.Полугодие, 7, 12, "II полугодие");
КонецЕсли;

// квартал
ДобавитьОпределениеПериода(Перечисления.Периодичность.Квартал, 1, 3, "I квартал");
ДобавитьОпределениеПериода(Перечисления.Периодичность.Квартал, 1, 6, "I - II квартал");
ДобавитьОпределениеПериода(Перечисления.Периодичность.Квартал, 1, 9, "I - III квартал");
ДобавитьОпределениеПериода(Перечисления.Периодичность.Квартал, 1, 12, "I - IV квартал");
ДобавитьОпределениеПериода(Перечисления.Периодичность.Квартал, 4, 6, "II квартал");
ДобавитьОпределениеПериода(Перечисления.Периодичность.Квартал, 7, 9, "III квартал");
ДобавитьОпределениеПериода(Перечисления.Периодичность.Квартал, 10, 12, "IV квартал");

// месяц
ДобавитьОпределениеПериода(Перечисления.Периодичность.Месяц, 1, 1, "январь");
ДобавитьОпределениеПериода(Перечисления.Периодичность.Месяц, 1, 2, "январь - февраль");
ДобавитьОпределениеПериода(Перечисления.Периодичность.Месяц, 1, 3, "январь - март");
ДобавитьОпределениеПериода(Перечисления.Периодичность.Месяц, 1, 4, "январь - апрель");
ДобавитьОпределениеПериода(Перечисления.Периодичность.Месяц, 1, 5, "январь - май");
ДобавитьОпределениеПериода(Перечисления.Периодичность.Месяц, 1, 6, "январь - июнь");
ДобавитьОпределениеПериода(Перечисления.Периодичность.Месяц, 1, 7, "январь - июль");
ДобавитьОпределениеПериода(Перечисления.Периодичность.Месяц, 1, 8, "январь - август");
ДобавитьОпределениеПериода(Перечисления.Периодичность.Месяц, 1, 9, "январь - сентябрь");
ДобавитьОпределениеПериода(Перечисления.Периодичность.Месяц, 1, 10, "январь - октябрь");
ДобавитьОпределениеПериода(Перечисления.Периодичность.Месяц, 1, 11, "январь - ноябрь");
ДобавитьОпределениеПериода(Перечисления.Периодичность.Месяц, 1, 12, "январь - декабрь");

ДобавитьОпределениеПериода(Перечисления.Периодичность.Месяц, 2, 2, "февраль");
ДобавитьОпределениеПериода(Перечисления.Периодичность.Месяц, 3, 3, "март");
ДобавитьОпределениеПериода(Перечисления.Периодичность.Месяц, 4, 4, "апрель");
ДобавитьОпределениеПериода(Перечисления.Периодичность.Месяц, 5, 5, "май");
ДобавитьОпределениеПериода(Перечисления.Периодичность.Месяц, 6, 6, "июнь");
ДобавитьОпределениеПериода(Перечисления.Периодичность.Месяц, 7, 7, "июль");
ДобавитьОпределениеПериода(Перечисления.Периодичность.Месяц, 8, 8, "август");
ДобавитьОпределениеПериода(Перечисления.Периодичность.Месяц, 9, 9, "сентябрь");
ДобавитьОпределениеПериода(Перечисления.Периодичность.Месяц, 10, 10, "октябрь");
ДобавитьОпределениеПериода(Перечисления.Периодичность.Месяц, 11, 11, "ноябрь");
ДобавитьОпределениеПериода(Перечисления.Периодичность.Месяц, 12, 12, "декабрь");

//
ЭлементыФормы.Периодичность.ДоступныеЗначения.Добавить(Перечисления.Периодичность.Месяц);
ЭлементыФормы.Периодичность.ДоступныеЗначения.Добавить(Перечисления.Периодичность.Квартал);
Если ПериодичностьПолугодиеДоступна Тогда
	ЭлементыФормы.Периодичность.ДоступныеЗначения.Добавить(Перечисления.Периодичность.Полугодие);
КонецЕсли;
ЭлементыФормы.Периодичность.ДоступныеЗначения.Добавить(Перечисления.Периодичность.Год);

//
Если НомерКорректировки < ЭлементыФормы.НомерКорректировки.МинимальноеЗначение ИЛИ НомерКорректировки > ЭлементыФормы.НомерКорректировки.МаксимальноеЗначение Тогда
	НомерКорректировки = ЭлементыФормы.НомерКорректировки.МинимальноеЗначение;
КонецЕсли;

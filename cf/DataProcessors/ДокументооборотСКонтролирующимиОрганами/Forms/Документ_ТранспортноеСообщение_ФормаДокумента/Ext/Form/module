Перем КрасныйКрест;
Перем ЗеленаяГалка;
Перем Вложения;
Перем СоответствиеТипаКартинке;
Перем СоответствиеНадписиПроверитьТипуПроверки;

Процедура ОбновитьДанные()
	
	ОтобразитьОтправителя();
	ОтобразитьПолучателя();
	
	Прочитать();
	Вложения = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(ЭтотОбъект);
	ТранспортныйКонтейнерПрисутствует = КонтекстЭДО.ТранспортныйКонтейнерПрисутствует(Ссылка);
	
	Если Тип = Перечисления.ТипыТранспортныхСообщений.КритическаяОшибка
	ИЛИ Тип = Перечисления.ТипыТранспортныхСообщений.Прочее
	ИЛИ Тип = Перечисления.ТипыТранспортныхСообщений.ПустаяСсылка() Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.Прочее;
		
		Контейнеры = КонтекстЭДО.ПолучитьТранспортныйКонтейнер(Ссылка);
		Контейнеры.Сортировать("ИмяФайла");
		
		СтрокаВложения = "";
		Для Каждого Контейнер Из Контейнеры Цикл
			СтрокаВложения = СтрокаВложения + Контейнер.ИмяФайла + "; ";
		КонецЦикла;
		
		Если НЕ ПустаяСтрока(СтрокаВложения) Тогда
			ЭлементыФормы.НадписьВложенияСтр7.Заголовок = Лев(СтрокаВложения, СтрДлина(СтрокаВложения) - 2);
			ЭлементыФормы.ПанельВложения.Свертка = РежимСверткиЭлементаУправления.Нет;
		Иначе
			ЭлементыФормы.НадписьВложенияСтр7.Заголовок = "<отсутствуют>";
			ЭлементыФормы.НадписьВложенияСтр7.Гиперссылка = Ложь;
			ЭлементыФормы.ПанельВложения.Свертка = РежимСверткиЭлементаУправления.Низ;
		КонецЕсли;
		
	ИначеЕсли Статус = Перечисления.СтатусыПисем.Полученное И НЕ КонтекстЭДО.СообщениеРасшифровано(Ссылка) Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.ЗашифрованноеСообщениеВходящее;
		
	ИначеЕсли Статус = Перечисления.СтатусыПисем.Исходящее И КонтекстЭДО.СообщениеЗашифровано(Ссылка) Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.ЗашифрованноеСообщениеИсходящее;
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.УведомлениеОбОшибкеПФР
	ИЛИ Тип = Перечисления.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.УведомлениеОбОшибке;
		
		ОписаниеОшибки = "";
		
		// ищем файл ошибки обработки пакета
		Если Тип = Перечисления.ТипыТранспортныхСообщений.УведомлениеОбОшибкеПФР Тогда
			ФайлыОшибкиОбработкиПакета = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ОписаниеОшибкиПФР));
		ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС Тогда
			ФайлыОшибкиОбработкиПакета = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ОписаниеОшибкиФНС));
		КонецЕсли;
		
		Если ФайлыОшибкиОбработкиПакета.Количество() > 0 Тогда
			
			ФайлыОшибкиОбработкиПакета = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(ЭтотОбъект, Истина, , ФайлыОшибкиОбработкиПакета[0].ИмяФайла);
			Если ФайлыОшибкиОбработкиПакета.Количество() > 0 Тогда
			
				// выгружаем данные во временный файл
				ИмяФайлаОшибки = ВыгрузитьДанныеВФайл(ФайлыОшибкиОбработкиПакета[0].Данные);
				Если ЗначениеЗаполнено(ИмяФайлаОшибки) Тогда
					
					// загружаем XML из файла в дерево
					ДеревоXML = КонтекстЭДО.ЗагрузитьXMLВДеревоЗначений(ИмяФайлаОшибки);
					КонтекстЭДО.УдалитьВременныйФайл(ИмяФайлаОшибки);
					Если ДеревоXML <> Неопределено Тогда
						
						// ищем узел "описание"
						УзелОписание = ДеревоXML.Строки.Найти("описание", "Имя", Истина);
						Если УзелОписание <> Неопределено Тогда
							ОписаниеОшибки = УзелОписание.Значение;
						КонецЕсли;
						
						УзелКодОшибки = ДеревоXML.Строки.Найти("кодОшибки", "Имя", Истина);
						Если УзелКодОшибки <> Неопределено Тогда
							ОписаниеОшибки = ОписаниеОшибки + " (код ошибки: " + УзелКодОшибки.Значение + ")";
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетность Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.ПервичноеСообщениеСодержащееОтчетность;
		
		ФайлыВыгрузки = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ФайлОтчетности));
		Если ФайлыВыгрузки.Количество() = 0 Тогда
			ЭлементыФормы.ПолеКартинки1Стр1.Картинка = КрасныйКрест;
			ЭлементыФормы.НадписьФайлВыгрузкиСтр1.Заголовок = "Файл отчетности: отсутствует";
		Иначе
			ЭлементыФормы.НадписьФайлВыгрузкиСтр1.Заголовок = "Файл отчетности (" + ФайлыВыгрузки[0].ИмяФайла + ")";
			ЭлементыФормы.ПолеКартинки1Стр1.Картинка = ЗеленаяГалка;
		КонецЕсли;
		
		ФайлыОписания = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ФайлОписанияКонтейнера));
		Если ФайлыОписания.Количество() = 0 Тогда
			ЭлементыФормы.ПолеКартинки2Стр1.Картинка = КрасныйКрест;
			ЭлементыФормы.НадписьФайлОписанияСтр1.Заголовок = "Файл информации об отправителе и получателе: отсутствует";
		Иначе
			ЭлементыФормы.НадписьФайлОписанияСтр1.Заголовок = "Файл информации об отправителе и получателе (" + ФайлыОписания[0].ИмяФайла + ")";
			ЭлементыФормы.ПолеКартинки2Стр1.Картинка = ЗеленаяГалка;
		КонецЕсли;
		
		ФайлыПодписи = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ЭлектронноЦифроваяПодпись));
		Если ФайлыПодписи.Количество() = 0 Тогда
			ЭлементыФормы.ПолеКартинки3Стр1.Картинка = КрасныйКрест;
			ЭлементыФормы.НадписьПодписиОтветственныхЛицСтр1.Заголовок = "Подписи ответственных лиц организации: отсутствуют";
		Иначе
			ЭлементыФормы.НадписьПодписиОтветственныхЛицСтр1.Заголовок = "Подписи ответственных лиц организации (" + ФайлыПодписи.Количество() + ")";
			ЭлементыФормы.ПолеКартинки3Стр1.Картинка = ЗеленаяГалка;
		КонецЕсли;
		// здесь добавить отображение ФИО подписантов
		
		//!!! на время сертификации
		//ЭлементыФормы.НадписьРедактироватьТекстВыгрузки.Видимость = (Статус = Перечисления.СтатусыПисем.Исходящее И ФайлыПодписи.Количество() = 0);
		ЭлементыФормы.НадписьРедактироватьТекстВыгрузки.Видимость = Ложь;
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОтправкиОтчетности Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.ПодтверждениеОтправки;
		
		ФайлыКвитанции = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПодтверждениеОбОтправке));
		Если ФайлыКвитанции.Количество() = 0 Тогда
			ЭлементыФормы.ПолеКартинки1Стр2.Картинка = КрасныйКрест;
			ЭлементыФормы.НадписьКвитанцияОПриемеСтр2.Заголовок = "Подтверждение об отправке файла отчетности: отсутствует";
		Иначе
			ЭлементыФормы.НадписьКвитанцияОПриемеСтр2.Заголовок = "Подтверждение об отправке файла отчетности (" + ФайлыКвитанции[0].ИмяФайла + ")";
			ЭлементыФормы.ПолеКартинки1Стр2.Картинка = ЗеленаяГалка;
		КонецЕсли;
		
		ФайлыПодписи = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ЭлектронноЦифроваяПодпись));
		Если ФайлыПодписи.Количество() = 0 Тогда
			ЭлементыФормы.ПолеКартинки2Стр2.Картинка = КрасныйКрест;
			ЭлементыФормы.НадписьПодписиСтр2.Заголовок = "Подпись под подтверждением: отсутствует";
		Иначе
			ЭлементыФормы.НадписьПодписиСтр2.Заголовок = "Подпись под подтверждением (" + ФайлыПодписи[0].ИмяФайла + ")";
			ЭлементыФормы.ПолеКартинки2Стр2.Картинка = ЗеленаяГалка;
		КонецЕсли;
		
		ЭлементыФормы.НадписьСостояниеПодтвержденияНаПодтверждениеОтправки.Заголовок = КонтекстЭДО.СформироватьСтрокуСостоянияТранспортногоСообщения(КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ПереподписанноеПодтверждениеОтправкиОтчетности, Ссылка));
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.ПереподписанноеПодтверждениеОтправкиОтчетности Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.ПодтверждениеНалогоплательщикаНаПодтверждениеОтправки;
		
		ФайлыКвитанций = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПодтверждениеОбОтправке));
		Если ФайлыКвитанций.Количество() = 0 Тогда
			ЭлементыФормы.ПолеКартинки1Стр5.Картинка = КрасныйКрест;
			ЭлементыФормы.НадписьКвитанцияОПриемеСтр5.Заголовок = "Подтверждение об отправке файла отчетности: отсутствует";
		Иначе
			ЭлементыФормы.НадписьКвитанцияОПриемеСтр5.Заголовок = "Подтверждение об отправке файла отчетности (" + ФайлыКвитанций[0].ИмяФайла + ")";
			ЭлементыФормы.ПолеКартинки1Стр5.Картинка = ЗеленаяГалка;
		КонецЕсли;
		
		ФайлыОписания = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ФайлОписанияКонтейнера));
		Если ФайлыОписания.Количество() = 0 Тогда
			ЭлементыФормы.ПолеКартинки2Стр5.Картинка = КрасныйКрест;
			ЭлементыФормы.НадписьФайлОписанияСтр5.Заголовок = "Файл информации об отправителе и получателе: отсутствует";
		Иначе
			ЭлементыФормы.НадписьФайлОписанияСтр5.Заголовок = "Файл информации об отправителе и получателе (" + ФайлыОписания[0].ИмяФайла + ")";
			ЭлементыФормы.ПолеКартинки2Стр5.Картинка = ЗеленаяГалка;
		КонецЕсли;
		
		ФайлыПодписи = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ЭлектронноЦифроваяПодпись));
		Если ФайлыПодписи.Количество() = 0 Тогда
			ЭлементыФормы.ПолеКартинки3Стр5.Картинка = ЗеленаяГалка;
			ЭлементыФормы.НадписьПодписиСтр5.Заголовок = "Подпись налогоплательщика: сгенерируется в момент отправки";
		ИначеЕсли ФайлыПодписи.Количество() = 1 Тогда
			ЭлементыФормы.НадписьПодписиСтр5.Заголовок = "Подпись налогоплательщика (" + ФайлыПодписи[0].ИмяФайла + ")";
			ЭлементыФормы.ПолеКартинки3Стр5.Картинка = ЗеленаяГалка;
		Иначе
			ЭлементыФормы.НадписьПодписиСтр5.Заголовок = "Подписи налогоплательщика (" + ФайлыПодписи.Количество() + ")";
			ЭлементыФормы.ПолеКартинки3Стр5.Картинка = ЗеленаяГалка;
		КонецЕсли;
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.КвитанцияОПриемеФайлаОтчетности Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.ПодтверждениеДоставки;
		
		ФайлыВыгрузки = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ФайлОтчетности));
		Если ФайлыВыгрузки.Количество() = 0 Тогда
			ЭлементыФормы.ПолеКартинки1Стр4.Картинка = КрасныйКрест;
			ЭлементыФормы.НадписьФайлВыгрузкиСтр4.Заголовок = "Файл отчетности: отсутствует";
		Иначе
			ЭлементыФормы.НадписьФайлВыгрузкиСтр4.Заголовок = "Файл отчетности (" + ФайлыВыгрузки[0].ИмяФайла + ")";
			ЭлементыФормы.ПолеКартинки1Стр4.Картинка = ЗеленаяГалка;
		КонецЕсли;
		
		ФайлыОписания = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ФайлОписанияКонтейнера));
		Если ФайлыОписания.Количество() = 0 Тогда
			ЭлементыФормы.ПолеКартинки2Стр4.Картинка = КрасныйКрест;
			ЭлементыФормы.НадписьФайлОписанияСтр4.Заголовок = "Файл информации об отправителе и получателе: отсутствует";
		Иначе
			ЭлементыФормы.НадписьФайлОписанияСтр4.Заголовок = "Файл информации об отправителе и получателе (" + ФайлыОписания[0].ИмяФайла + ")";
			ЭлементыФормы.ПолеКартинки2Стр4.Картинка = ЗеленаяГалка;
		КонецЕсли;
		
		ПодписиНалогоплательщика = Новый Массив;
		ПодписиНалоговогоОргана = Новый Массив;
		СуффиксПодписиНО = ".gni.sgn1";
		ФайлыПодписи = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ЭлектронноЦифроваяПодпись));
		Если ФайлыПодписи.Количество() = 0 Тогда
			ЭлементыФормы.ПолеКартинки3Стр4.Картинка = КрасныйКрест;
			ЭлементыФормы.ПолеКартинки4Стр4.Картинка = КрасныйКрест;
		Иначе
			
			Для Каждого ФайлПодписи Из ФайлыПодписи Цикл
				Если Прав(ФайлПодписи.ИмяФайла, СтрДлина(СуффиксПодписиНО)) = СуффиксПодписиНО Тогда
					ПодписиНалоговогоОргана.Добавить(ФайлПодписи);
				Иначе
					ПодписиНалогоплательщика.Добавить(ФайлПодписи);
				КонецЕсли;
			КонецЦикла;
			
			Если ПодписиНалогоплательщика.Количество() = 0 Тогда
				ЭлементыФормы.ПолеКартинки3Стр4.Картинка = КрасныйКрест;
				ЭлементыФормы.НадписьПодписиОтветственныхЛицСтр4.Заголовок = "Подписи ответственных лиц организации: отсутствуют";
			Иначе
				ЭлементыФормы.НадписьПодписиОтветственныхЛицСтр4.Заголовок = "Подписи ответственных лиц организации (" + ПодписиНалогоплательщика.Количество() + ")";
				ЭлементыФормы.ПолеКартинки3Стр4.Картинка = ЗеленаяГалка;
			КонецЕсли;
			
			Если ПодписиНалоговогоОргана.Количество() = 0 Тогда
				ЭлементыФормы.ПолеКартинки4Стр4.Картинка = КрасныйКрест;
				ЭлементыФормы.НадписьПодписьНалоговогоОрганаСтр4.Заголовок = "Подпись налогового органа: отсутствует";
			Иначе
				ЭлементыФормы.НадписьПодписьНалоговогоОрганаСтр4.Заголовок = "Подпись налогового органа (" + ПодписиНалоговогоОргана[0].ИмяФайла + ")";
				ЭлементыФормы.ПолеКартинки4Стр4.Картинка = ЗеленаяГалка;
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляОтчетности Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.ПротоколВходногоКонтроля;
		
		ФайлыПротокола = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПротоколВходногоКонтроля));
		Если ФайлыПротокола.Количество() = 0 Тогда
			ЭлементыФормы.ПолеКартинки1Стр3.Картинка = КрасныйКрест;
			ЭлементыФормы.НадписьПротоколВходногоКонтроляСтр3.Заголовок = "Протокол входного контроля файла отчетности: отсутствует";
		Иначе
			ЭлементыФормы.НадписьПротоколВходногоКонтроляСтр3.Заголовок = "Протокол входного контроля файла отчетности (" + ФайлыПротокола[0].ИмяФайла + ")";
			ЭлементыФормы.ПолеКартинки1Стр3.Картинка = ЗеленаяГалка;
		КонецЕсли;
		
		ФайлыПодписи = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ЭлектронноЦифроваяПодпись));
		Если ФайлыПодписи.Количество() = 0 Тогда
			ЭлементыФормы.ПолеКартинки2Стр3.Картинка = КрасныйКрест;
			ЭлементыФормы.НадписьПодписиСтр3.Заголовок = "Подпись налогового органа: отсутствует";
		Иначе
			Если ФайлыПодписи.Количество() = 1 Тогда
				ЭлементыФормы.НадписьПодписиСтр3.Заголовок = "Подпись налогового органа (" + ФайлыПодписи[0].ИмяФайла + ")";
				ЭлементыФормы.ПолеКартинки2Стр3.Картинка = ЗеленаяГалка;
			Иначе
				ЭлементыФормы.НадписьПодписиСтр3.Заголовок = "Подписи налогового органа (" + ФайлыПодписи.Количество() + ")";
				ЭлементыФормы.ПолеКартинки2Стр3.Картинка = ЗеленаяГалка;
			КонецЕсли;
		КонецЕсли;
		
		ЭлементыФормы.НадписьСостояниеПодтвержденияНаПротоколПроверки.Заголовок = КонтекстЭДО.СформироватьСтрокуСостоянияТранспортногоСообщения(КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ПереподписанныйПротоколВходногоКонтроляОтчетности, Ссылка));
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.ПереподписанныйПротоколВходногоКонтроляОтчетности Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.ПодтверждениеНалогоплательщикаНаПротоколПроверки;
		
		ФайлыКвитанции = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПротоколВходногоКонтроля));
		Если ФайлыКвитанции.Количество() = 0 Тогда
			ЭлементыФормы.ПолеКартинки1Стр6.Картинка = КрасныйКрест;
			ЭлементыФормы.НадписьПротоколВходногоКонтроляСтр6.Заголовок = "Протокол входного контроля файла отчетности: отсутствует";
		Иначе
			ЭлементыФормы.НадписьПротоколВходногоКонтроляСтр6.Заголовок = "Протокол входного контроля файла отчетности (" + ФайлыКвитанции[0].ИмяФайла + ")";
			ЭлементыФормы.ПолеКартинки1Стр6.Картинка = ЗеленаяГалка;
		КонецЕсли;
		
		ФайлыОписания = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ФайлОписанияКонтейнера));
		Если ФайлыОписания.Количество() = 0 Тогда
			ЭлементыФормы.ПолеКартинки2Стр6.Картинка = КрасныйКрест;
			ЭлементыФормы.НадписьФайлОписанияСтр6.Заголовок = "Файл информации об отправителе и получателе: отсутствует";
		Иначе
			ЭлементыФормы.НадписьФайлОписанияСтр6.Заголовок = "Файл информации об отправителе и получателе (" + ФайлыОписания[0].ИмяФайла + ")";
			ЭлементыФормы.ПолеКартинки2Стр6.Картинка = ЗеленаяГалка;
		КонецЕсли;
		
		ФайлыПодписи = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ЭлектронноЦифроваяПодпись));
		Если ФайлыПодписи.Количество() = 0 Тогда
			ЭлементыФормы.ПолеКартинки3Стр6.Картинка = ЗеленаяГалка;
			ЭлементыФормы.НадписьПодписиСтр6.Заголовок = "Подпись налогоплательщика: сгенерируется в момент отправки";
		ИначеЕсли ФайлыПодписи.Количество() = 1 Тогда
			ЭлементыФормы.НадписьПодписиСтр6.Заголовок = "Подпись налогоплательщика (" + ФайлыПодписи[0].ИмяФайла + ")";
			ЭлементыФормы.ПолеКартинки3Стр6.Картинка = ЗеленаяГалка;
		Иначе
			ЭлементыФормы.НадписьПодписиСтр6.Заголовок = "Подписи налогоплательщика (" + ФайлыПодписи.Количество() + ")";
			ЭлементыФормы.ПолеКартинки3Стр6.Картинка = ЗеленаяГалка;
		КонецЕсли;
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.УведомлениеОбУточненииНБО Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.УведомлениеОбУточнении;
		
		ФайлыУведомления = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.УведомлениеОбУточненииНБО));
		Если ФайлыУведомления.Количество() = 0 Тогда
			ЭлементыФормы.ПолеКартинки1Стр21.Картинка = КрасныйКрест;
			ЭлементыФормы.НадписьУведомлениеОбУточненииСтр21.Заголовок = "Уведомление об уточнении: отсутствует";
		Иначе
			ЭлементыФормы.НадписьУведомлениеОбУточненииСтр21.Заголовок = "Уведомление об уточнении (" + ФайлыУведомления[0].ИмяФайла + ")";
			ЭлементыФормы.ПолеКартинки1Стр21.Картинка = ЗеленаяГалка;
		КонецЕсли;
		
		ФайлыПодписи = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ЭлектронноЦифроваяПодпись));
		Если ФайлыПодписи.Количество() = 0 Тогда
			ЭлементыФормы.ПолеКартинки2Стр21.Картинка = КрасныйКрест;
			ЭлементыФормы.НадписьПодписиСтр21.Заголовок = "Подпись налогового органа: отсутствует";
		Иначе
			Если ФайлыПодписи.Количество() = 1 Тогда
				ЭлементыФормы.НадписьПодписиСтр21.Заголовок = "Подпись налогового органа (" + ФайлыПодписи[0].ИмяФайла + ")";
				ЭлементыФормы.ПолеКартинки2Стр21.Картинка = ЗеленаяГалка;
			Иначе
				ЭлементыФормы.НадписьПодписиСтр21.Заголовок = "Подписи налогового органа (" + ФайлыПодписи.Количество() + ")";
				ЭлементыФормы.ПолеКартинки2Стр21.Картинка = ЗеленаяГалка;
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.Протокол2НДФЛ Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.Протокол2НДФЛ;
		
		ФайлыПротоколов		= Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Протокол2НДФЛ));
		ФайлыРеестров		= Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Реестр2НДФЛ));
		ФайлыПодписи		= Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ЭлектронноЦифроваяПодпись));
		
		// прорисовываем ЭУ протокола и его подписей
		Если ФайлыПротоколов.Количество() = 0 Тогда
			
			ЭлементыФормы.ПолеКартинки1Стр22.Картинка = КрасныйКрест;
			ЭлементыФормы.НадписьПротоколПриема2НДФЛСтр22.Заголовок = "Протокол приема сведений по форме 2-НДФЛ: отсутствует";
			
			ЭлементыФормы.ПолеКартинки2Стр22.Картинка = КрасныйКрест;
			ЭлементыФормы.НадписьПодписи1Стр22.Заголовок = "Подпись налогового органа под протоколом: отсутствует";
			
		Иначе
			
			ИмяФайлаПротокола = ФайлыПротоколов[0].ИмяФайла;
			
			ЭлементыФормы.НадписьПротоколПриема2НДФЛСтр22.Заголовок = "Протокол приема сведений по форме 2-НДФЛ (" + ИмяФайлаПротокола + ")";
			ЭлементыФормы.ПолеКартинки1Стр22.Картинка = ЗеленаяГалка;
			
			ПрефиксПодписиПодПротоколом = ИмяФайлаПротокола + ".gni.sgn";
			
			ФайлыПодписиПодПротоколом = Новый Массив;
			Для Каждого ФайлПодписи Из ФайлыПодписи Цикл
				Если ВРЕГ(Лев(ФайлПодписи.ИмяФайла, СтрДлина(ПрефиксПодписиПодПротоколом))) = ВРЕГ(ПрефиксПодписиПодПротоколом) Тогда
					ФайлыПодписиПодПротоколом.Добавить(ФайлПодписи);
				КонецЕсли;
			КонецЦикла;
			
			ЧислоПодписей = ФайлыПодписиПодПротоколом.Количество();
			Если ЧислоПодписей = 0 Тогда
				ЭлементыФормы.ПолеКартинки2Стр22.Картинка = КрасныйКрест;
				ЭлементыФормы.НадписьПодписи1Стр22.Заголовок = "Подпись налогового органа под протоколом: отсутствует";
			ИначеЕсли ЧислоПодписей = 1 Тогда
				ЭлементыФормы.ПолеКартинки2Стр22.Картинка = ЗеленаяГалка;
				ЭлементыФормы.НадписьПодписи1Стр22.Заголовок = "Подпись налогового органа под протоколом (" + ФайлыПодписиПодПротоколом[0].ИмяФайла + ")";
			Иначе
				ЭлементыФормы.ПолеКартинки2Стр22.Картинка = ЗеленаяГалка;
				ЭлементыФормы.НадписьПодписи1Стр22.Заголовок = "Подпись налогового органа под протоколом (" + ФайлыПодписиПодПротоколом.Количество() + ")";
			КонецЕсли;
			
		КонецЕсли;
		
		// прорисовываем ЭУ реестра и его подписей
		Если ФайлыРеестров.Количество() = 0 Тогда
			
			ЭлементыФормы.ПолеКартинки3Стр22.Картинка = КрасныйКрест;
			ЭлементыФормы.НадписьРеестрСведений2НДФЛСтр22.Заголовок = "Реестр сведений по форме 2-НДФЛ: отсутствует";
			
			ЭлементыФормы.ПолеКартинки4Стр22.Картинка = КрасныйКрест;
			ЭлементыФормы.НадписьПодписи2Стр22.Заголовок = "Подпись налогового органа под реестром: отсутствует";
			
		Иначе
			
			ИмяФайлаРеестра = ФайлыРеестров[0].ИмяФайла;
			
			ЭлементыФормы.ПолеКартинки3Стр22.Картинка = ЗеленаяГалка;
			ЭлементыФормы.НадписьРеестрСведений2НДФЛСтр22.Заголовок = "Реестр сведений по форме 2-НДФЛ (" + ИмяФайлаРеестра + ")";
			
			ПрефиксПодписиПодРеестром = ИмяФайлаРеестра + ".gni.sgn";
			
			ФайлыПодписиПодРеестром = Новый Массив;
			Для Каждого ФайлПодписи Из ФайлыПодписи Цикл
				Если ВРЕГ(Лев(ФайлПодписи.ИмяФайла, СтрДлина(ПрефиксПодписиПодРеестром))) = ВРЕГ(ПрефиксПодписиПодРеестром) Тогда
					ФайлыПодписиПодРеестром.Добавить(ФайлПодписи);
				КонецЕсли;
			КонецЦикла;
			
			ЧислоПодписей = ФайлыПодписиПодРеестром.Количество();
			Если ЧислоПодписей = 0 Тогда
				ЭлементыФормы.ПолеКартинки4Стр22.Картинка = КрасныйКрест;
				ЭлементыФормы.НадписьПодписи2Стр22.Заголовок = "Подпись налогового органа под реестром: отсутствует";
			ИначеЕсли ЧислоПодписей = 1 Тогда
				ЭлементыФормы.ПолеКартинки4Стр22.Картинка = ЗеленаяГалка;
				ЭлементыФормы.НадписьПодписи2Стр22.Заголовок = "Подпись налогового органа под реестром (" + ФайлыПодписиПодРеестром[0].ИмяФайла + ")";
			Иначе
				ЭлементыФормы.ПолеКартинки4Стр22.Картинка = ЗеленаяГалка;
				ЭлементыФормы.НадписьПодписи2Стр22.Заголовок = "Подпись налогового органа под реестром (" + ФайлыПодписиПодРеестром.Количество() + ")";
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.НеформализованныйДокументНО Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.НеформализованноеСообщениеНО;
		ЭлементыФормы.НадписьСостояниеПодтвержденияНаНеформализованноеСообщение.Заголовок = КонтекстЭДО.СформироватьСтрокуСостоянияТранспортногоСообщения(КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеНаНеформализованныйДокументНО, Ссылка));
		
		НеформализованныеДокументы = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.НеформализованныйДокумент));
		ЧислоНеформализованныхДокументов = НеформализованныеДокументы.Количество();
		Если ЧислоНеформализованныхДокументов = 0 Тогда
			ЭлементыФормы.ПанельНеформализованныйДокументСтр7.Видимость = Ложь;
		Иначе
			ЭлементыФормы.ПанельНеформализованныйДокументСтр7.Видимость = Истина;
			Если ЧислоНеформализованныхДокументов = 1 Тогда
				ЭлементыФормы.НадписьНеформализованныйДокументСтр7.Заголовок = "Неформализованный документ (" + НеформализованныеДокументы[0].ИмяФайла + ")";
			Иначе
				ЭлементыФормы.НадписьНеформализованныйДокументСтр7.Заголовок = "Неформализованный документ (" + ЧислоНеформализованныхДокументов + ")";
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.ПодтверждениеНаНеформализованныйДокументНО Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.ПодтверждениеНалогоплательщикаНаНеформализованноеСообщениеНО;
		
		ОписанияНеформализованныхДокументов = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ОписаниеНеформализованногоДокумента));
		ЧислоОписаний = ОписанияНеформализованныхДокументов.Количество();
		Если ЧислоОписаний = 0 Тогда
			ЭлементыФормы.ПанельНеформализованныйДокументСтр8.Видимость = Ложь;
		Иначе
			ЭлементыФормы.ПанельНеформализованныйДокументСтр8.Видимость = Истина;
		КонецЕсли;
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.НеформализованныйДокументНалогоплательщика Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.НеформализованныйДокументНалогоплательщика;
		
		ФайлыДокумента = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.НеформализованныйДокумент));
		Если ФайлыДокумента.Количество() = 0 Тогда
			ЭлементыФормы.ПолеКартинки1Стр9.Картинка = КрасныйКрест;
			ЭлементыФормы.НадписьДокументСтр9.Заголовок = "Документ: отсутствует";
		Иначе
			ЭлементыФормы.НадписьДокументСтр9.Заголовок = "Документ (" + ФайлыДокумента[0].ИмяФайла + ")";
			ЭлементыФормы.ПолеКартинки1Стр9.Картинка = ЗеленаяГалка;
		КонецЕсли;
		
		ФайлыОписания = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ФайлОписанияКонтейнера));
		Если ФайлыОписания.Количество() = 0 Тогда
			ЭлементыФормы.ПолеКартинки2Стр9.Картинка = КрасныйКрест;
			ЭлементыФормы.НадписьФайлОписанияСтр9.Заголовок = "Файл информации об отправителе и получателе: отсутствует";
		Иначе
			ЭлементыФормы.НадписьФайлОписанияСтр9.Заголовок = "Файл информации об отправителе и получателе (" + ФайлыОписания[0].ИмяФайла + ")";
			ЭлементыФормы.ПолеКартинки2Стр9.Картинка = ЗеленаяГалка;
		КонецЕсли;
		
		ФайлыПодписи = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ЭлектронноЦифроваяПодпись));
		ФайлыПодписиПодДокументом = Новый Массив;
		ФайлыПодписиПодОписанием = Новый Массив;
		СуффиксПодписиПодОписанием = ".desc.sgn";
		Для Каждого ФайлПодписи Из ФайлыПодписи Цикл
			Окончание = Прав(ВРЕГ(ФайлПодписи.ИмяФайла), СтрДлина(СуффиксПодписиПодОписанием) + 1);
			Суффикс = Лев(Окончание, СтрДлина(Окончание) - 1);
			Если Суффикс = ВРЕГ(СуффиксПодписиПодОписанием) Тогда
				ФайлыПодписиПодОписанием.Добавить(ФайлПодписи);
			Иначе
				ФайлыПодписиПодДокументом.Добавить(ФайлПодписи);
			КонецЕсли;
		КонецЦикла;
		Если ФайлыПодписиПодДокументом.Количество() = 0 Тогда
			ЭлементыФормы.ПолеКартинки3Стр9.Картинка = КрасныйКрест;
			ЭлементыФормы.НадписьПодписиОтветственныхЛицСтр9.Заголовок = "Подписи ответственных лиц организации на документе: отсутствуют";
		Иначе
			ЭлементыФормы.НадписьПодписиОтветственныхЛицСтр9.Заголовок = "Подписи ответственных лиц организации на документе (" + ФайлыПодписиПодДокументом.Количество() + ")";
			ЭлементыФормы.ПолеКартинки3Стр9.Картинка = ЗеленаяГалка;
		КонецЕсли;
		Если ФайлыПодписиПодОписанием.Количество() = 0 Тогда
			ЭлементыФормы.ПолеКартинки5Стр9.Картинка = КрасныйКрест;
			ЭлементыФормы.НадписьПодписиОтветственныхЛиц2Стр9.Заголовок = "Подписи ответственных лиц организации на описании: отсутствуют";
		Иначе
			ЭлементыФормы.НадписьПодписиОтветственныхЛиц2Стр9.Заголовок = "Подписи ответственных лиц организации на описании (" + ФайлыПодписиПодОписанием.Количество() + ")";
			ЭлементыФормы.ПолеКартинки5Стр9.Картинка = ЗеленаяГалка;
		КонецЕсли;
		// здесь добавить отображение ФИО подписантов
		
		ФайлыОписанияНФДН = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ОписаниеНеформализованногоДокумента));
		Если ФайлыОписанияНФДН.Количество() = 0 Тогда
			ЭлементыФормы.ПолеКартинки4Стр9.Картинка = КрасныйКрест;
			ЭлементыФормы.НадписьФайлОписанияНеформализованногоДокументаСтр9.Заголовок = "Описание неформализованного документа: отсутствует";
		Иначе
			ЭлементыФормы.НадписьФайлОписанияНеформализованногоДокументаСтр9.Заголовок = "Описание неформализованного документа (" + ФайлыОписанияНФДН[0].ИмяФайла + ")";
			ЭлементыФормы.ПолеКартинки4Стр9.Картинка = ЗеленаяГалка;
		КонецЕсли;
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.ПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика;
		
		ФайлыКвитанции = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПодтверждениеОбОтправке));
		Если ФайлыКвитанции.Количество() = 0 Тогда
			ЭлементыФормы.ПолеКартинки1Стр10.Картинка = КрасныйКрест;
			ЭлементыФормы.НадписьКвитанцияОПриемеСтр10.Заголовок = "Подтверждение об отправке: отсутствует";
		Иначе
			ЭлементыФормы.НадписьКвитанцияОПриемеСтр10.Заголовок = "Подтверждение об отправке (" + ФайлыКвитанции[0].ИмяФайла + ")";
			ЭлементыФормы.ПолеКартинки1Стр10.Картинка = ЗеленаяГалка;
		КонецЕсли;
		
		ФайлыПодписи = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ЭлектронноЦифроваяПодпись));
		Если ФайлыПодписи.Количество() = 0 Тогда
			ЭлементыФормы.ПолеКартинки2Стр10.Картинка = КрасныйКрест;
			ЭлементыФормы.НадписьПодписиСтр10.Заголовок = "Подпись под подтверждением: отсутствует";
		Иначе
			ЭлементыФормы.НадписьПодписиСтр10.Заголовок = "Подпись под подтверждением (" + ФайлыПодписи[0].ИмяФайла + ")";
			ЭлементыФормы.ПолеКартинки2Стр10.Картинка = ЗеленаяГалка;
		КонецЕсли;
		
		ЭлементыФормы.НадписьСостояниеОтветаНаПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика.Заголовок = КонтекстЭДО.СформироватьСтрокуСостоянияТранспортногоСообщения(КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ПереподписанноеПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика, Ссылка));
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.ПереподписанноеПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.ПереподписанноеПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика;
		
		ФайлыКвитанций = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПодтверждениеОбОтправке));
		Если ФайлыКвитанций.Количество() = 0 Тогда
			ЭлементыФормы.ПолеКартинки1Стр11.Картинка = КрасныйКрест;
			ЭлементыФормы.НадписьКвитанцияОПриемеСтр11.Заголовок = "Подтверждение об отправке: отсутствует";
		Иначе
			ЭлементыФормы.НадписьКвитанцияОПриемеСтр11.Заголовок = "Подтверждение об отправке (" + ФайлыКвитанций[0].ИмяФайла + ")";
			ЭлементыФормы.ПолеКартинки1Стр11.Картинка = ЗеленаяГалка;
		КонецЕсли;
		
		//ФайлыОписания = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ФайлОписанияКонтейнера));
		//Если ФайлыОписания.Количество() = 0 Тогда
		//	ЭлементыФормы.ПолеКартинки2Стр11.Картинка = КрасныйКрест;
		//	ЭлементыФормы.НадписьФайлОписанияСтр11.Заголовок = "Файл информации об отправителе и получателе: отсутствует";
		//Иначе
		//	ЭлементыФормы.НадписьФайлОписанияСтр11.Заголовок = "Файл информации об отправителе и получателе (" + ФайлыОписания[0].ИмяФайла + ")";
		//	ЭлементыФормы.ПолеКартинки2Стр11.Картинка = ЗеленаяГалка;
		//КонецЕсли;
		
		ФайлыПодписи = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ЭлектронноЦифроваяПодпись));
		Если ФайлыПодписи.Количество() = 0 Тогда
			ЭлементыФормы.ПолеКартинки3Стр11.Картинка = ЗеленаяГалка;
			ЭлементыФормы.НадписьПодписиСтр11.Заголовок = "Подпись налогоплательщика: сгенерируется в момент отправки";
		ИначеЕсли ФайлыПодписи.Количество() = 1 Тогда
			ЭлементыФормы.НадписьПодписиСтр11.Заголовок = "Подпись налогоплательщика (" + ФайлыПодписи[0].ИмяФайла + ")";
			ЭлементыФормы.ПолеКартинки3Стр11.Картинка = ЗеленаяГалка;
		Иначе
			ЭлементыФормы.НадписьПодписиСтр11.Заголовок = "Подписи налогоплательщика (" + ФайлыПодписи.Количество() + ")";
			ЭлементыФормы.ПолеКартинки3Стр11.Картинка = ЗеленаяГалка;
		КонецЕсли;
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДоставкиНеформализованногоДокументаНалогоплательщика Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.ПодтверждениеДоставкиНеформализованногоДокументаНалогоплательщика;
		
		ФайлыДокумента = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.НеформализованныйДокумент));
		Если ФайлыДокумента.Количество() = 0 Тогда
			ЭлементыФормы.ПолеКартинки1Стр12.Картинка = КрасныйКрест;
			ЭлементыФормы.НадписьДокументСтр12.Заголовок = "Документ: отсутствует";
		Иначе
			ЭлементыФормы.НадписьДокументСтр12.Заголовок = "Документ (" + ФайлыДокумента[0].ИмяФайла + ")";
			ЭлементыФормы.ПолеКартинки1Стр12.Картинка = ЗеленаяГалка;
		КонецЕсли;
		
		ФайлыОписания = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ФайлОписанияКонтейнера));
		Если ФайлыОписания.Количество() = 0 Тогда
			ЭлементыФормы.ПолеКартинки2Стр12.Картинка = КрасныйКрест;
			ЭлементыФормы.НадписьФайлОписанияСтр12.Заголовок = "Файл информации об отправителе и получателе: отсутствует";
		Иначе
			ЭлементыФормы.НадписьФайлОписанияСтр12.Заголовок = "Файл информации об отправителе и получателе (" + ФайлыОписания[0].ИмяФайла + ")";
			ЭлементыФормы.ПолеКартинки2Стр12.Картинка = ЗеленаяГалка;
		КонецЕсли;
		
		ПодписиНалогоплательщика = Новый Массив;
		ПодписиНалоговогоОргана = Новый Массив;
		СуффиксПодписиНО = ".gni.sgn1";
		ФайлыПодписи = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ЭлектронноЦифроваяПодпись));
		Если ФайлыПодписи.Количество() = 0 Тогда
			ЭлементыФормы.ПолеКартинки3Стр12.Картинка = КрасныйКрест;
			ЭлементыФормы.ПолеКартинки4Стр12.Картинка = КрасныйКрест;
		Иначе
			
			Для Каждого ФайлПодписи Из ФайлыПодписи Цикл
				Если Прав(ФайлПодписи.ИмяФайла, СтрДлина(СуффиксПодписиНО)) = СуффиксПодписиНО Тогда
					ПодписиНалоговогоОргана.Добавить(ФайлПодписи);
				Иначе
					ПодписиНалогоплательщика.Добавить(ФайлПодписи);
				КонецЕсли;
			КонецЦикла;
			
			Если ПодписиНалогоплательщика.Количество() = 0 Тогда
				ЭлементыФормы.ПолеКартинки3Стр12.Картинка = КрасныйКрест;
				ЭлементыФормы.НадписьПодписиОтветственныхЛицСтр12.Заголовок = "Подписи ответственных лиц организации: отсутствуют";
			Иначе
				ЭлементыФормы.НадписьПодписиОтветственныхЛицСтр12.Заголовок = "Подписи ответственных лиц организации (" + ПодписиНалогоплательщика.Количество() + ")";
				ЭлементыФормы.ПолеКартинки3Стр12.Картинка = ЗеленаяГалка;
			КонецЕсли;
			
			Если ПодписиНалоговогоОргана.Количество() = 0 Тогда
				ЭлементыФормы.ПолеКартинки4Стр12.Картинка = КрасныйКрест;
				ЭлементыФормы.НадписьПодписьНалоговогоОрганаСтр12.Заголовок = "Подпись налогового органа: отсутствует";
			Иначе
				ЭлементыФормы.НадписьПодписьНалоговогоОрганаСтр12.Заголовок = "Подпись налогового органа (" + ПодписиНалоговогоОргана[0].ИмяФайла + ")";
				ЭлементыФормы.ПолеКартинки4Стр12.Картинка = ЗеленаяГалка;
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.ЗапросИОН Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.ЗапросИОН;
		
		ФайлыЗапросов = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ЗапросИОН));
		Если ФайлыЗапросов.Количество() = 0 Тогда
			ЭлементыФормы.ПолеКартинки1Стр13.Картинка = КрасныйКрест;
			ЭлементыФормы.НадписьФайлЗапросаСтр13.Заголовок = "Файл запроса: отсутствует";
		Иначе
			ЭлементыФормы.НадписьФайлЗапросаСтр13.Заголовок = "Файл запроса (" + ФайлыЗапросов[0].ИмяФайла + ")";
			ЭлементыФормы.ПолеКартинки1Стр13.Картинка = ЗеленаяГалка;
		КонецЕсли;
		
		ФайлыОписания = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ФайлОписанияКонтейнера));
		Если ФайлыОписания.Количество() = 0 Тогда
			ЭлементыФормы.ПолеКартинки2Стр13.Картинка = КрасныйКрест;
			ЭлементыФормы.НадписьФайлОписанияСтр13.Заголовок = "Файл информации об отправителе и получателе: отсутствует";
		Иначе
			ЭлементыФормы.НадписьФайлОписанияСтр13.Заголовок = "Файл информации об отправителе и получателе (" + ФайлыОписания[0].ИмяФайла + ")";
			ЭлементыФормы.ПолеКартинки2Стр13.Картинка = ЗеленаяГалка;
		КонецЕсли;
		
		ФайлыПодписи = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ЭлектронноЦифроваяПодпись));
		Если ФайлыПодписи.Количество() = 0 Тогда
			ЭлементыФормы.ПолеКартинки3Стр13.Картинка = КрасныйКрест;
			ЭлементыФормы.НадписьПодписиОтветственныхЛицСтр13.Заголовок = "Подписи ответственных лиц организации: отсутствуют";
		Иначе
			ЭлементыФормы.НадписьПодписиОтветственныхЛицСтр13.Заголовок = "Подписи ответственных лиц организации (" + ФайлыПодписи.Количество() + ")";
			ЭлементыФормы.ПолеКартинки3Стр13.Картинка = ЗеленаяГалка;
		КонецЕсли;
		// здесь добавить отображение ФИО подписантов
		
		ЭлементыФормы.НадписьРедактироватьЗапрос.Видимость = (Статус = Перечисления.СтатусыПисем.Исходящее И ФайлыПодписи.Количество() = 0);
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОтправкиЗапросаИОН Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.ПодтверждениеОтправкиЗапроса;
		
		ФайлыКвитанции = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПодтверждениеОбОтправке));
		Если ФайлыКвитанции.Количество() = 0 Тогда
			ЭлементыФормы.ПолеКартинки1Стр14.Картинка = КрасныйКрест;
			ЭлементыФормы.НадписьКвитанцияОПриемеСтр14.Заголовок = "Подтверждение об отправке: отсутствует";
		Иначе
			ЭлементыФормы.НадписьКвитанцияОПриемеСтр14.Заголовок = "Подтверждение об отправке (" + ФайлыКвитанции[0].ИмяФайла + ")";
			ЭлементыФормы.ПолеКартинки1Стр14.Картинка = ЗеленаяГалка;
		КонецЕсли;
		
		ФайлыПодписи = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ЭлектронноЦифроваяПодпись));
		Если ФайлыПодписи.Количество() = 0 Тогда
			ЭлементыФормы.ПолеКартинки2Стр14.Картинка = КрасныйКрест;
			ЭлементыФормы.НадписьПодписиСтр14.Заголовок = "Подпись сервера обмена: отсутствует";
		Иначе
			ЭлементыФормы.НадписьПодписиСтр14.Заголовок = "Подпись сервера обмена (" + ФайлыПодписи[0].ИмяФайла + ")";
			ЭлементыФормы.ПолеКартинки2Стр14.Картинка = ЗеленаяГалка;
		КонецЕсли;
		
		ЭлементыФормы.НадписьСостояниеПодтвержденияНаПодтверждениеОтправкиЗапроса.Заголовок = КонтекстЭДО.СформироватьСтрокуСостоянияТранспортногоСообщения(КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ПереподписанноеПодтверждениеОтправкиЗапросаИОН, Ссылка));
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.ПереподписанноеПодтверждениеОтправкиЗапросаИОН Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.ПодтверждениеНалогоплательщикаНаПодтверждениеОтправкиЗапроса;
		
		ФайлыКвитанций = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПодтверждениеОбОтправке));
		Если ФайлыКвитанций.Количество() = 0 Тогда
			ЭлементыФормы.ПолеКартинки1Стр17.Картинка = КрасныйКрест;
			ЭлементыФормы.НадписьКвитанцияОПриемеСтр17.Заголовок = "Подтверждение об отправке: отсутствует";
		Иначе
			ЭлементыФормы.НадписьКвитанцияОПриемеСтр17.Заголовок = "Подтверждение об отправке (" + ФайлыКвитанций[0].ИмяФайла + ")";
			ЭлементыФормы.ПолеКартинки1Стр17.Картинка = ЗеленаяГалка;
		КонецЕсли;
		
		ФайлыОписания = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ФайлОписанияКонтейнера));
		Если ФайлыОписания.Количество() = 0 Тогда
			ЭлементыФормы.ПолеКартинки2Стр17.Картинка = КрасныйКрест;
			ЭлементыФормы.НадписьФайлОписанияСтр17.Заголовок = "Файл информации об отправителе и получателе: отсутствует";
		Иначе
			ЭлементыФормы.НадписьФайлОписанияСтр17.Заголовок = "Файл информации об отправителе и получателе (" + ФайлыОписания[0].ИмяФайла + ")";
			ЭлементыФормы.ПолеКартинки2Стр17.Картинка = ЗеленаяГалка;
		КонецЕсли;
		
		ФайлыПодписи = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ЭлектронноЦифроваяПодпись));
		Если ФайлыПодписи.Количество() = 0 Тогда
			ЭлементыФормы.ПолеКартинки3Стр17.Картинка = ЗеленаяГалка;
			ЭлементыФормы.НадписьПодписиСтр17.Заголовок = "Подпись налогоплательщика: сгенерируется в момент отправки";
		ИначеЕсли ФайлыПодписи.Количество() = 1 Тогда
			ЭлементыФормы.НадписьПодписиСтр17.Заголовок = "Подпись налогоплательщика (" + ФайлыПодписи[0].ИмяФайла + ")";
			ЭлементыФормы.ПолеКартинки3Стр17.Картинка = ЗеленаяГалка;
		Иначе
			ЭлементыФормы.НадписьПодписиСтр15.Заголовок = "Подписи налогоплательщика (" + ФайлыПодписи.Количество() + ")";
			ЭлементыФормы.ПолеКартинки3Стр15.Картинка = ЗеленаяГалка;
		КонецЕсли;
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.КвитанцияОПриемеЗапросаИОН Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.ПодтверждениеДоставкиЗапроса;
		
		ФайлыЗапросов = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ЗапросИОН));
		Если ФайлыЗапросов.Количество() = 0 Тогда
			ЭлементыФормы.ПолеКартинки1Стр16.Картинка = КрасныйКрест;
			ЭлементыФормы.НадписьФайлВыгрузкиСтр16.Заголовок = "Файл запроса: отсутствует";
		Иначе
			ЭлементыФормы.НадписьФайлВыгрузкиСтр16.Заголовок = "Файл запроса (" + ФайлыЗапросов[0].ИмяФайла + ")";
			ЭлементыФормы.ПолеКартинки1Стр16.Картинка = ЗеленаяГалка;
		КонецЕсли;
		
		ФайлыОписания = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ФайлОписанияКонтейнера));
		Если ФайлыОписания.Количество() = 0 Тогда
			ЭлементыФормы.ПолеКартинки2Стр16.Картинка = КрасныйКрест;
			ЭлементыФормы.НадписьФайлОписанияСтр16.Заголовок = "Файл информации об отправителе и получателе: отсутствует";
		Иначе
			ЭлементыФормы.НадписьФайлОписанияСтр16.Заголовок = "Файл информации об отправителе и получателе (" + ФайлыОписания[0].ИмяФайла + ")";
			ЭлементыФормы.ПолеКартинки2Стр16.Картинка = ЗеленаяГалка;
		КонецЕсли;
		
		ПодписиНалогоплательщика = Новый Массив;
		ПодписиНалоговогоОргана = Новый Массив;
		СуффиксПодписиНО = ".gni.sgn1";
		ФайлыПодписи = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ЭлектронноЦифроваяПодпись));
		Если ФайлыПодписи.Количество() = 0 Тогда
			ЭлементыФормы.ПолеКартинки3Стр16.Картинка = КрасныйКрест;
			ЭлементыФормы.ПолеКартинки4Стр16.Картинка = КрасныйКрест;
		Иначе
			
			Для Каждого ФайлПодписи Из ФайлыПодписи Цикл
				Если Прав(ФайлПодписи.ИмяФайла, СтрДлина(СуффиксПодписиНО)) = СуффиксПодписиНО Тогда
					ПодписиНалоговогоОргана.Добавить(ФайлПодписи);
				Иначе
					ПодписиНалогоплательщика.Добавить(ФайлПодписи);
				КонецЕсли;
			КонецЦикла;
			
			Если ПодписиНалогоплательщика.Количество() = 0 Тогда
				ЭлементыФормы.ПолеКартинки3Стр16.Картинка = КрасныйКрест;
				ЭлементыФормы.НадписьПодписиОтветственныхЛицСтр16.Заголовок = "Подписи ответственных лиц организации: отсутствуют";
			Иначе
				ЭлементыФормы.НадписьПодписиОтветственныхЛицСтр16.Заголовок = "Подписи ответственных лиц организации (" + ПодписиНалогоплательщика.Количество() + ")";
				ЭлементыФормы.ПолеКартинки3Стр16.Картинка = ЗеленаяГалка;
			КонецЕсли;
			
			Если ПодписиНалоговогоОргана.Количество() = 0 Тогда
				ЭлементыФормы.ПолеКартинки4Стр16.Картинка = КрасныйКрест;
				ЭлементыФормы.НадписьПодписьНалоговогоОрганаСтр16.Заголовок = "Подпись налогового органа: отсутствует";
			Иначе
				ЭлементыФормы.НадписьПодписьНалоговогоОрганаСтр16.Заголовок = "Подпись налогового органа (" + ПодписиНалоговогоОргана[0].ИмяФайла + ")";
				ЭлементыФормы.ПолеКартинки4Стр16.Картинка = ЗеленаяГалка;
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляЗапросаИОН Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.ПротоколПроверкиЗапроса;
		
		ФайлыПротокола = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПротоколВходногоКонтроля));
		Если ФайлыПротокола.Количество() = 0 Тогда
			ЭлементыФормы.ПолеКартинки1Стр15.Картинка = КрасныйКрест;
			ЭлементыФормы.НадписьПротоколПроверкиСтр15.Заголовок = "Протокол входного контроля запроса: отсутствует";
		Иначе
			ЭлементыФормы.НадписьПротоколПроверкиСтр15.Заголовок = "Протокол входного контроля запроса (" + ФайлыПротокола[0].ИмяФайла + ")";
			ЭлементыФормы.ПолеКартинки1Стр15.Картинка = ЗеленаяГалка;
		КонецЕсли;
		
		ФайлыПодписи = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ЭлектронноЦифроваяПодпись));
		Если ФайлыПодписи.Количество() = 0 Тогда
			ЭлементыФормы.ПолеКартинки2Стр15.Картинка = КрасныйКрест;
			ЭлементыФормы.НадписьПодписиСтр15.Заголовок = "Подпись налогового органа: отсутствует";
		Иначе
			Если ФайлыПодписи.Количество() = 1 Тогда
				ЭлементыФормы.НадписьПодписиСтр15.Заголовок = "Подпись налогового органа (" + ФайлыПодписи[0].ИмяФайла + ")";
				ЭлементыФормы.ПолеКартинки2Стр15.Картинка = ЗеленаяГалка;
			Иначе
				ЭлементыФормы.НадписьПодписиСтр15.Заголовок = "Подписи налогового органа (" + ФайлыПодписи.Количество() + ")";
				ЭлементыФормы.ПолеКартинки2Стр15.Картинка = ЗеленаяГалка;
			КонецЕсли;
		КонецЕсли;
		
		ЭлементыФормы.НадписьСостояниеПодтвержденияНаПротоколПроверки15.Заголовок = КонтекстЭДО.СформироватьСтрокуСостоянияТранспортногоСообщения(КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ПереподписанныйПротоколВходногоКонтроляЗапросаИОН, Ссылка));
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.ПереподписанныйПротоколВходногоКонтроляЗапросаИОН Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.ПодтверждениеНалогоплательщикаНаПротоколПроверкиЗапроса;
		
		ФайлыКвитанции = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПротоколВходногоКонтроля));
		Если ФайлыКвитанции.Количество() = 0 Тогда
			ЭлементыФормы.ПолеКартинки1Стр18.Картинка = КрасныйКрест;
			ЭлементыФормы.НадписьПротоколВходногоКонтроляСтр18.Заголовок = "Протокол входного контроля запроса: отсутствует";
		Иначе
			ЭлементыФормы.НадписьПротоколВходногоКонтроляСтр18.Заголовок = "Протокол входного контроля запроса (" + ФайлыКвитанции[0].ИмяФайла + ")";
			ЭлементыФормы.ПолеКартинки1Стр18.Картинка = ЗеленаяГалка;
		КонецЕсли;
		
		ФайлыОписания = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ФайлОписанияКонтейнера));
		Если ФайлыОписания.Количество() = 0 Тогда
			ЭлементыФормы.ПолеКартинки2Стр18.Картинка = КрасныйКрест;
			ЭлементыФормы.НадписьФайлОписанияСтр18.Заголовок = "Файл информации об отправителе и получателе: отсутствует";
		Иначе
			ЭлементыФормы.НадписьФайлОписанияСтр18.Заголовок = "Файл информации об отправителе и получателе (" + ФайлыОписания[0].ИмяФайла + ")";
			ЭлементыФормы.ПолеКартинки2Стр18.Картинка = ЗеленаяГалка;
		КонецЕсли;
		
		ФайлыПодписи = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ЭлектронноЦифроваяПодпись));
		Если ФайлыПодписи.Количество() = 0 Тогда
			ЭлементыФормы.ПолеКартинки3Стр18.Картинка = ЗеленаяГалка;
			ЭлементыФормы.НадписьПодписиСтр18.Заголовок = "Подпись налогоплательщика: сгенерируется в момент отправки";
		ИначеЕсли ФайлыПодписи.Количество() = 1 Тогда
			ЭлементыФормы.НадписьПодписиСтр18.Заголовок = "Подпись налогоплательщика (" + ФайлыПодписи[0].ИмяФайла + ")";
			ЭлементыФормы.ПолеКартинки3Стр18.Картинка = ЗеленаяГалка;
		Иначе
			ЭлементыФормы.НадписьПодписиСтр18.Заголовок = "Подписи налогоплательщика (" + ФайлыПодписи.Количество() + ")";
			ЭлементыФормы.ПолеКартинки3Стр18.Картинка = ЗеленаяГалка;
		КонецЕсли;
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.ОтветНаЗапросИОН Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.ОтветНаЗапросИОН;
		
		ФайлыОтветовНаЗапросы = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ОтветНаЗапросИОН));
		Если ФайлыОтветовНаЗапросы.Количество() = 0 Тогда
			ЭлементыФормы.ПолеКартинки1Стр19.Картинка = КрасныйКрест;
			ЭлементыФормы.НадписьОтветНаЗапросСтр19.Заголовок = "Ответ на запрос: отсутствует";
		Иначе
			ЭлементыФормы.НадписьОтветНаЗапросСтр19.Заголовок = "Ответ на запрос (" + ФайлыОтветовНаЗапросы[0].ИмяФайла + ")";
			ЭлементыФормы.ПолеКартинки1Стр19.Картинка = ЗеленаяГалка;
		КонецЕсли;
		
		ФайлыОписания = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ФайлОписанияКонтейнера));
		Если ФайлыОписания.Количество() = 0 Тогда
			ЭлементыФормы.ПолеКартинки2Стр19.Картинка = КрасныйКрест;
			ЭлементыФормы.НадписьФайлОписанияСтр19.Заголовок = "Файл информации об отправителе и получателе: отсутствует";
		Иначе
			ЭлементыФормы.НадписьФайлОписанияСтр19.Заголовок = "Файл информации об отправителе и получателе (" + ФайлыОписания[0].ИмяФайла + ")";
			ЭлементыФормы.ПолеКартинки2Стр19.Картинка = ЗеленаяГалка;
		КонецЕсли;
		
		ФайлыПодписи = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ЭлектронноЦифроваяПодпись));
		Если ФайлыПодписи.Количество() = 0 Тогда
			ЭлементыФормы.ПолеКартинки3Стр19.Картинка = КрасныйКрест;
			ЭлементыФормы.НадписьПодписиСтр19.Заголовок = "Подпись налогового органа: отсутствует";
		Иначе
			Если ФайлыПодписи.Количество() = 1 Тогда
				ЭлементыФормы.НадписьПодписиСтр19.Заголовок = "Подпись налогового органа (" + ФайлыПодписи[0].ИмяФайла + ")";
				ЭлементыФормы.ПолеКартинки3Стр19.Картинка = ЗеленаяГалка;
			Иначе
				ЭлементыФормы.НадписьПодписиСтр19.Заголовок = "Подписи налогового органа (" + ФайлыПодписи.Количество() + ")";
				ЭлементыФормы.ПолеКартинки3Стр19.Картинка = ЗеленаяГалка;
			КонецЕсли;
		КонецЕсли;
		
		ЭлементыФормы.НадписьСостояниеПодтвержденияНаОтветНаЗапрос.Заголовок = КонтекстЭДО.СформироватьСтрокуСостоянияТранспортногоСообщения(КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ПереподписанныйОтветНаЗапросИОН, Ссылка));
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.ПереподписанныйОтветНаЗапросИОН Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.ПодтверждениеНаОтветНаЗапросИОН;
		
		ФайлыОтветовНаЗапросы = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ОтветНаЗапросИОН));
		Если ФайлыОтветовНаЗапросы.Количество() = 0 Тогда
			ЭлементыФормы.ПолеКартинки1Стр20.Картинка = КрасныйКрест;
			ЭлементыФормы.НадписьОтветНаЗапросСтр20.Заголовок = "Ответ на запрос: отсутствует";
		Иначе
			ЭлементыФормы.НадписьОтветНаЗапросСтр20.Заголовок = "Ответ на запрос (" + ФайлыОтветовНаЗапросы[0].ИмяФайла + ")";
			ЭлементыФормы.ПолеКартинки1Стр20.Картинка = ЗеленаяГалка;
		КонецЕсли;
		
		ФайлыОписания = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ФайлОписанияКонтейнера));
		Если ФайлыОписания.Количество() = 0 Тогда
			ЭлементыФормы.ПолеКартинки2Стр20.Картинка = КрасныйКрест;
			ЭлементыФормы.НадписьФайлОписанияСтр20.Заголовок = "Файл информации об отправителе и получателе: отсутствует";
		Иначе
			ЭлементыФормы.НадписьФайлОписанияСтр20.Заголовок = "Файл информации об отправителе и получателе (" + ФайлыОписания[0].ИмяФайла + ")";
			ЭлементыФормы.ПолеКартинки2Стр20.Картинка = ЗеленаяГалка;
		КонецЕсли;
		
		ФайлыПодписи = Вложения.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ЭлектронноЦифроваяПодпись));
		Если ФайлыПодписи.Количество() = 0 Тогда
			ЭлементыФормы.ПолеКартинки3Стр20.Картинка = ЗеленаяГалка;
			ЭлементыФормы.НадписьПодписиСтр20.Заголовок = "Подпись налогоплательщика: сгенерируется в момент отправки";
		ИначеЕсли ФайлыПодписи.Количество() = 1 Тогда
			ЭлементыФормы.НадписьПодписиСтр20.Заголовок = "Подпись налогоплательщика (" + ФайлыПодписи[0].ИмяФайла + ")";
			ЭлементыФормы.ПолеКартинки3Стр20.Картинка = ЗеленаяГалка;
		Иначе
			ЭлементыФормы.НадписьПодписиСтр20.Заголовок = "Подписи налогоплательщика (" + ФайлыПодписи.Количество() + ")";
			ЭлементыФормы.ПолеКартинки3Стр20.Картинка = ЗеленаяГалка;
		КонецЕсли;
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетностьПФР Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.ПервичноеСообщениеСодержащееОтчетностьПФР;
		ЗаполнитьДеревоСодержимого(Вложения, СодержимоеСтр23, ЭлементыФормы.СодержимоеСтр23);
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.ПодтверждениеПолученияОтчетностиПФР Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.ПодтверждениеПолученияПФР;
		ЗаполнитьДеревоСодержимого(Вложения, СодержимоеСтр24, ЭлементыФормы.СодержимоеСтр24);
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.ПротоколПФР Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.ПротоколПФР;
		ЗаполнитьДеревоСодержимого(Вложения, СодержимоеСтр25, ЭлементыФормы.СодержимоеСтр25);
		
		ЭлементыФормы.НадписьСостояниеПротоколКвитанция.Заголовок = КонтекстЭДО.СформироватьСтрокуСостоянияТранспортногоСообщения(КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ПротоколКвитанцияПФР, Ссылка));
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.ПротоколКвитанцияПФР Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.ПротоколКвитанцияПФР;
		ЗаполнитьДеревоСодержимого(Вложения, СодержимоеСтр26, ЭлементыФормы.СодержимоеСтр26);
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееПФР Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.НеформализованноеВходящееПФР;
		ЗаполнитьДеревоСодержимого(Вложения, СодержимоеСтр28, ЭлементыФормы.СодержимоеСтр28);
		
		ЭлементыФормы.НадписьСостояниеПисьмоВходящееКвитанция.Заголовок = КонтекстЭДО.СформироватьСтрокуСостоянияТранспортногоСообщения(КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееКвитанцияПФР, Ссылка));
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееКвитанцияПФР Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.НеформализованноеВходящееКвитанцияПФР;
		ЗаполнитьДеревоСодержимого(Вложения, СодержимоеСтр31, ЭлементыФормы.СодержимоеСтр31);
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееПФР Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.НеформализованноеИсходящееПФР;
		ЗаполнитьДеревоСодержимого(Вложения, СодержимоеСтр29, ЭлементыФормы.СодержимоеСтр29);
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееКвитанцияПФР Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.НеформализованноеИсходящееКвитанцияПФР;
		ЗаполнитьДеревоСодержимого(Вложения, СодержимоеСтр30, ЭлементыФормы.СодержимоеСтр30);
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.ДекларацияНП Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.ДекларацияНП;
		ЗаполнитьДеревоСодержимого(Вложения, СодержимоеДекларацияНП, ЭлементыФормы.СодержимоеДекларацияНП);
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеДекларацияНО Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.ИзвещениеДекларацияНО;
		ЗаполнитьДеревоСодержимого(Вложения, СодержимоеИзвещениеДекларацияНО, ЭлементыФормы.СодержимоеИзвещениеДекларацияНО);
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.РезультатПриемаДекларацияНО Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.РезультатПриемаДекларацияНО;
		ЗаполнитьДеревоСодержимого(Вложения, СодержимоеРезультатПриемаДекларацияНО, ЭлементыФормы.СодержимоеРезультатПриемаДекларацияНО);
		
		ЭлементыФормы.НадписьСостояниеИзвещениеРезультатПриемаНП.Заголовок = КонтекстЭДО.СформироватьСтрокуСостоянияТранспортногоСообщения(КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, Ссылка));
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.ИзвещениеРезультатПриемаНП;
		ЗаполнитьДеревоСодержимого(Вложения, СодержимоеИзвещениеРезультатПриемаНП, ЭлементыФормы.СодержимоеИзвещениеРезультатПриемаНП);
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиДекларацияНО Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.РезультатОбработкиДекларацияНО;
		ЗаполнитьДеревоСодержимого(Вложения, СодержимоеРезультатОбработкиДекларацияНО, ЭлементыФормы.СодержимоеРезультатОбработкиДекларацияНО);
		
		ЭлементыФормы.НадписьСостояниеИзвещениеРезультатОбработкиНП.Заголовок = КонтекстЭДО.СформироватьСтрокуСостоянияТранспортногоСообщения(КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП, Ссылка));
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.ИзвещениеРезультатОбработкиНП;
		ЗаполнитьДеревоСодержимого(Вложения, СодержимоеИзвещениеРезультатОбработкиНП, ЭлементыФормы.СодержимоеИзвещениеРезультатОбработкиНП);
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДекларацияНО Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.ПодтверждениеДекларацияНО;
		ЗаполнитьДеревоСодержимого(Вложения, СодержимоеПодтверждениеДекларацияНО, ЭлементыФормы.СодержимоеПодтверждениеДекларацияНО);
		
		ЭлементыФормы.НадписьСостояниеИзвещениеПодтверждениеНП.Заголовок = КонтекстЭДО.СформироватьСтрокуСостоянияТранспортногоСообщения(КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, Ссылка));
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.ИзвещениеПодтверждениеНП;
		ЗаполнитьДеревоСодержимого(Вложения, СодержимоеИзвещениеПодтверждениеНП, ЭлементыФормы.СодержимоеИзвещениеПодтверждениеНП);
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.Форма2НДФЛНП Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.Форма2НДФЛНП;
		ЗаполнитьДеревоСодержимого(Вложения, СодержимоеФорма2НДФЛНП, ЭлементыФормы.СодержимоеФорма2НДФЛНП);
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.ПодтверждениеФорма2НДФЛНО Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.ПодтверждениеФорма2НДФЛНО;
		ЗаполнитьДеревоСодержимого(Вложения, СодержимоеПодтверждениеФорма2НДФЛНО, ЭлементыФормы.СодержимоеПодтверждениеФорма2НДФЛНО);
		
		ЭлементыФормы.НадписьСостояниеИзвещениеПодтверждениеНП2НДФЛ.Заголовок = КонтекстЭДО.СформироватьСтрокуСостоянияТранспортногоСообщения(КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, Ссылка));
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеФорма2НДФЛНО Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.ИзвещениеФорма2НДФЛНО;
		ЗаполнитьДеревоСодержимого(Вложения, СодержимоеИзвещениеФорма2НДФЛНО, ЭлементыФормы.СодержимоеИзвещениеФорма2НДФЛНО);
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.РезультатПриемаФорма2НДФЛНО Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.РезультатПриемаФорма2НДФЛНО;
		ЗаполнитьДеревоСодержимого(Вложения, СодержимоеРезультатПриемаФорма2НДФЛНО, ЭлементыФормы.СодержимоеРезультатПриемаФорма2НДФЛНО);
		
		ЭлементыФормы.НадписьСостояниеИзвещениеРезультатПриемаНП2НДФЛ.Заголовок = КонтекстЭДО.СформироватьСтрокуСостоянияТранспортногоСообщения(КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, Ссылка));
		
	//
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.ОбращениеНП Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.ОбращениеНП;
		ЗаполнитьДеревоСодержимого(Вложения, СодержимоеОбращениеНП, ЭлементыФормы.СодержимоеОбращениеНП);
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеОбращениеНО Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.ИзвещениеОбращениеНО;
		ЗаполнитьДеревоСодержимого(Вложения, СодержимоеИзвещениеОбращениеНО, ЭлементыФормы.СодержимоеИзвещениеОбращениеНО);
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.РезультатПриемаОбращениеНО Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.РезультатПриемаОбращениеНО;
		ЗаполнитьДеревоСодержимого(Вложения, СодержимоеРезультатПриемаОбращениеНО, ЭлементыФормы.СодержимоеРезультатПриемаОбращениеНО);
		
		ЭлементыФормы.НадписьСостояниеИзвещениеРезультатПриемаНПОбращение.Заголовок = КонтекстЭДО.СформироватьСтрокуСостоянияТранспортногоСообщения(КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, Ссылка));
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОбращениеНО Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.ПодтверждениеОбращениеНО;
		ЗаполнитьДеревоСодержимого(Вложения, СодержимоеПодтверждениеОбращениеНО, ЭлементыФормы.СодержимоеПодтверждениеОбращениеНО);
		
		ЭлементыФормы.НадписьСостояниеИзвещениеПодтверждениеНПОбращение.Заголовок = КонтекстЭДО.СформироватьСтрокуСостоянияТранспортногоСообщения(КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, Ссылка));
		
	// 
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.ПисьмоНО Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.ПисьмоНО;
		ЗаполнитьДеревоСодержимого(Вложения, СодержимоеПисьмоНО, ЭлементыФормы.СодержимоеПисьмоНО);
		
		ЭлементыФормы.НадписьСостояниеИзвещениеПисьмоНП.Заголовок = КонтекстЭДО.СформироватьСтрокуСостоянияТранспортногоСообщения(КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоНП, Ссылка));
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоНП Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.ИзвещениеПисьмоНП;
		ЗаполнитьДеревоСодержимого(Вложения, СодержимоеИзвещениеПисьмоНП, ЭлементыФормы.СодержимоеИзвещениеПисьмоНП);
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.РассылкаНО Тогда
		
		Если ЦиклОбмена.Тип = Перечисления.ТипыЦикловОбмена.РассылкаГрупповая Тогда
			
			ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.РассылкаНО;
			ЗаполнитьДеревоСодержимого(Вложения, СодержимоеРассылкаНО, ЭлементыФормы.СодержимоеРассылкаНО);
			
			ЭлементыФормы.НадписьСостояниеИзвещениеРассылкаНП.Заголовок = КонтекстЭДО.СформироватьСтрокуСостоянияТранспортногоСообщения(КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРассылкаНП, Ссылка));
			
		Иначе
			
			ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.РассылкаНОИндивидуальная;
			ЗаполнитьДеревоСодержимого(Вложения, СодержимоеРассылкаНОИндивидуальная, ЭлементыФормы.СодержимоеРассылкаНОИндивидуальная);
			
		КонецЕсли;
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеРассылкаНП Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.ИзвещениеРассылкаНП;
		ЗаполнитьДеревоСодержимого(Вложения, СодержимоеИзвещениеРассылкаНП, ЭлементыФормы.СодержимоеИзвещениеРассылкаНП);
		
	// 535 ИОН
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.ЗапросНП Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.ЗапросНП;
		ЗаполнитьДеревоСодержимого(Вложения, СодержимоеЗапросНП, ЭлементыФормы.СодержимоеЗапросНП);
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеЗапросНО Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.ИзвещениеЗапросНО;
		ЗаполнитьДеревоСодержимого(Вложения, СодержимоеИзвещениеЗапросНО, ЭлементыФормы.СодержимоеИзвещениеЗапросНО);
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.РезультатПриемаЗапросНО Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.РезультатПриемаЗапросНО;
		ЗаполнитьДеревоСодержимого(Вложения, СодержимоеРезультатПриемаЗапросНО, ЭлементыФормы.СодержимоеРезультатПриемаЗапросНО);
		
		ЭлементыФормы.НадписьСостояниеИзвещениеРезультатПриемаНПЗапрос.Заголовок = КонтекстЭДО.СформироватьСтрокуСостоянияТранспортногоСообщения(КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, Ссылка));
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗапросНО Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.РезультатОбработкиЗапросНО;
		ЗаполнитьДеревоСодержимого(Вложения, СодержимоеРезультатОбработкиЗапросНО, ЭлементыФормы.СодержимоеРезультатОбработкиЗапросНО);
		
		ЭлементыФормы.НадписьСостояниеИзвещениеРезультатОбработкиНПЗапрос.Заголовок = КонтекстЭДО.СформироватьСтрокуСостоянияТранспортногоСообщения(КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП, Ссылка));
		
	ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.ПодтверждениеЗапросНО Тогда
		
		ЭлементыФормы.ПанельСодержимое.ТекущаяСтраница = ЭлементыФормы.ПанельСодержимое.Страницы.ПодтверждениеЗапросНО;
		ЗаполнитьДеревоСодержимого(Вложения, СодержимоеПодтверждениеЗапросНО, ЭлементыФормы.СодержимоеПодтверждениеЗапросНО);
		
		ЭлементыФормы.НадписьСостояниеИзвещениеПодтверждениеНПЗапрос.Заголовок = КонтекстЭДО.СформироватьСтрокуСостоянияТранспортногоСообщения(КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, Ссылка));
		
	КонецЕсли;
	
	ЭлементыФормы.КоманднаяПанельДействияФормы.Кнопки.Выгрузить.Кнопки.Контейнер.Доступность = ТранспортныйКонтейнерПрисутствует;
	ЭлементыФормы.КоманднаяПанельДействияФормы.Кнопки.Выгрузить.Кнопки.Вложения.Доступность = (Вложения.Количество() > 0);
	
	ЭлементыФормы.НадписьПодробнаяИнформация.Заголовок = КонтекстЭДО.СформироватьСтрокуСостоянияТранспортногоСообщения(ЭтотОбъект);
	
	Если Статус = Перечисления.СтатусыПисем.Отправленное ИЛИ Статус = Перечисления.СтатусыПисем.Полученное Тогда
		
		// удаляем кнопку отправки в командной панели действий формы, если сообщение отправлено или принято
		КнопкаОтправить = ЭлементыФормы.КоманднаяПанельДействияФормы.Кнопки.Найти("Отправить");
		РазделительОтправить = ЭлементыФормы.КоманднаяПанельДействияФормы.Кнопки.Найти("РазделительОтправить");
		Если КнопкаОтправить <> Неопределено И РазделительОтправить <> Неопределено Тогда
			ЭлементыФормы.КоманднаяПанельДействияФормы.Кнопки.Удалить(КнопкаОтправить);
			ЭлементыФормы.КоманднаяПанельДействияФормы.Кнопки.Удалить(РазделительОтправить);
		КонецЕсли;
		
		// удаляем кнопку отправки в подменю командной панели действий формы, если сообщение полученное, и меняем надпись у кнопки "Отправить", если сообщение отправленное
		КнопкаОтправить = ЭлементыФормы.КоманднаяПанельДействияФормы.Кнопки.Подменю.Кнопки.Найти("Отправить");
		РазделительОтправить = ЭлементыФормы.КоманднаяПанельДействияФормы.Кнопки.Подменю.Кнопки.Найти("РазделительОтправить");
		Если Статус = Перечисления.СтатусыПисем.Полученное Тогда
			Если КнопкаОтправить <> Неопределено Тогда
				ЭлементыФормы.КоманднаяПанельДействияФормы.Кнопки.Подменю.Кнопки.Удалить(КнопкаОтправить);
			КонецЕсли;
			Если РазделительОтправить <> Неопределено Тогда
				ЭлементыФормы.КоманднаяПанельДействияФормы.Кнопки.Подменю.Кнопки.Удалить(РазделительОтправить);
			КонецЕсли;
		Иначе
			ЭлементыФормы.КоманднаяПанельДействияФормы.Кнопки.Подменю.Кнопки.Отправить.Текст = "Отправить повторно";
		КонецЕсли;
		
	КонецЕсли;
	
	// управление видимостью кнопок шифрования
	Если Статус = Перечисления.СтатусыПисем.Исходящее Тогда
		ВидимостьКнопокПодменю = Истина;
		ВидимостьКнопокОсновнойПанели = НЕ КонтекстЭДО.СообщениеЗашифровано(Ссылка);
	ИначеЕсли Статус = Перечисления.СтатусыПисем.Отправленное Тогда
		ВидимостьКнопокПодменю = Истина;
		ВидимостьКнопокОсновнойПанели = НЕ КонтекстЭДО.СообщениеЗашифровано(Ссылка);
	ИначеЕсли Статус = Перечисления.СтатусыПисем.Полученное Тогда
		ВидимостьКнопокПодменю = Ложь;
		ВидимостьКнопокОсновнойПанели = Ложь;
	КонецЕсли;
	
	КартинкаПоТипу = СоответствиеТипаКартинке[Тип];
	Если КартинкаПоТипу <> Неопределено Тогда
		КартинкаЗаголовка = КартинкаПоТипу;
	Иначе
		КартинкаЗаголовка = БиблиотекаКартинок.СообщениеНеизвестногоТипа;
	КонецЕсли;
	Заголовок = "Транспортное сообщение от " + Дата;
	
	УправлениеВидимостьюКнопокШифрования(ЭлементыФормы.КоманднаяПанельДействияФормы, ВидимостьКнопокОсновнойПанели);
	УправлениеВидимостьюКнопокШифрования(ЭлементыФормы.КоманднаяПанельДействияФормы.Кнопки.Подменю, ВидимостьКнопокПодменю);
	
	УправлениеДоступностьюКнопкиПодписания();
	
КонецПроцедуры

Процедура УправлениеДоступностьюКнопкиПодписания()
	
	ЭлементыФормы.КоманднаяПанельКонтекстноеМенюСодержимоеДерево.Кнопки.Подписать.Доступность = (Статус = Перечисления.СтатусыПисем.Исходящее ИЛИ Статус = Перечисления.СтатусыПисем.Сохраненное);
	
КонецПроцедуры

Функция ВыгрузитьДанныеВФайл(Данные, ИмяФайла = Неопределено, ОписаниеОшибки = Неопределено)
	
	Если ИмяФайла = Неопределено Тогда
		ИмяФайла = ПолучитьИмяВременногоФайла();
	КонецЕсли;
	
	Попытка
		Данные.Получить().Записать(ИмяФайла);
		Возврат ИмяФайла;
	Исключение
		ОписаниеОшибки = ИнформацияОбОшибке().Описание;
		Возврат Неопределено;
	КонецПопытки;
	
КонецФункции

Процедура ЗаполнитьДеревоСодержимого(ВложенияТекущегоСообщения, Содержимое, ТПСодержимого)
	
	
	ТипыДИВ = Новый Массив;
	
	// отчетность ПФР
	ТипыДИВ.Добавить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ФайлОтчетностиПФР);
	ТипыДИВ.Добавить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПротоколПФР);
	ТипыДИВ.Добавить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПротоколПриложениеПФР);
	ТипыДИВ.Добавить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ФайлОписанияСведенийПФР);
	ТипыДИВ.Добавить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПодтверждениеПолученияОтчетностиПФР);
	ТипыДИВ.Добавить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.СведенияПриложениеПФР);
	
	// неформализованные ПФР
	ТипыДИВ.Добавить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Письмо);
	ТипыДИВ.Добавить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПисьмоПриложение);
	ТипыДИВ.Добавить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ОписаниеПисьма);
	ТипыДИВ.Добавить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПодтверждениеПолученияПисьма);
	ТипыДИВ.Добавить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ТранспортнаяИнформация);
	
	// ФНС
	ТипыДИВ.Добавить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ФайлОтчетности);
	ТипыДИВ.Добавить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Форма2НДФЛ);
	ТипыДИВ.Добавить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ОписаниеСведений);
	ТипыДИВ.Добавить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ОписаниеСведений2НДФЛ);
	ТипыДИВ.Добавить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Доверенность);
	ТипыДИВ.Добавить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПодтверждениеДатыОтправки);
	ТипыДИВ.Добавить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.УведомлениеОбОтказе);
	ТипыДИВ.Добавить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.КвитанцияОПриеме);
	ТипыДИВ.Добавить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ИзвещениеОВводе);
	ТипыДИВ.Добавить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.УведомлениеОбУточнении);
	ТипыДИВ.Добавить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ИзвещениеОПолучении);
	ТипыДИВ.Добавить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Протокол2НДФЛ);
	ТипыДИВ.Добавить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Реестр2НДФЛ);
	ТипыДИВ.Добавить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Обращение);
	ТипыДИВ.Добавить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Приложение);
	ТипыДИВ.Добавить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПодтверждениеДатыПолучения);
	ТипыДИВ.Добавить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ОписаниеСведенийОбращениеПисьмоРассылка);
	ТипыДИВ.Добавить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Рассылка);
	ТипыДИВ.Добавить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Запрос);
	ТипыДИВ.Добавить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Ответ);
	ТипыДИВ.Добавить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ОписаниеСведенийЗапрос);
	
	
	ПриоритетыПрорисовкиДИВ = Новый Соответствие;
	
	// отчетность ПФР
	ПриоритетыПрорисовкиДИВ.Вставить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ФайлОтчетностиПФР, 3);
	ПриоритетыПрорисовкиДИВ.Вставить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПротоколПФР, 1);
	ПриоритетыПрорисовкиДИВ.Вставить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПротоколПриложениеПФР, 2);
	ПриоритетыПрорисовкиДИВ.Вставить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ФайлОписанияСведенийПФР, 5);
	ПриоритетыПрорисовкиДИВ.Вставить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПодтверждениеПолученияОтчетностиПФР, 4);
	
	// неформализованные ПФР
	ПриоритетыПрорисовкиДИВ.Вставить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Письмо, 2);
	ПриоритетыПрорисовкиДИВ.Вставить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПисьмоПриложение, 3);
	ПриоритетыПрорисовкиДИВ.Вставить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ОписаниеПисьма, 4);
	ПриоритетыПрорисовкиДИВ.Вставить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ТранспортнаяИнформация, 5);
	ПриоритетыПрорисовкиДИВ.Вставить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПодтверждениеПолученияПисьма, 1);
	
	// отчетность ФНС
	ПриоритетыПрорисовкиДИВ.Вставить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ФайлОтчетности, 5);
	ПриоритетыПрорисовкиДИВ.Вставить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Форма2НДФЛ, 5);
	ПриоритетыПрорисовкиДИВ.Вставить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Обращение, 5);
	ПриоритетыПрорисовкиДИВ.Вставить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ОписаниеСведений, 8);
	ПриоритетыПрорисовкиДИВ.Вставить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ОписаниеСведений2НДФЛ, 8);
	ПриоритетыПрорисовкиДИВ.Вставить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ОписаниеСведенийОбращениеПисьмоРассылка, 8);
	ПриоритетыПрорисовкиДИВ.Вставить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Приложение, 6);
	ПриоритетыПрорисовкиДИВ.Вставить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Доверенность, 7);
	ПриоритетыПрорисовкиДИВ.Вставить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПодтверждениеДатыОтправки, 4);
	ПриоритетыПрорисовкиДИВ.Вставить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПодтверждениеДатыПолучения, 4);
	ПриоритетыПрорисовкиДИВ.Вставить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.УведомлениеОбОтказе, 3);
	ПриоритетыПрорисовкиДИВ.Вставить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.КвитанцияОПриеме, 3);
	ПриоритетыПрорисовкиДИВ.Вставить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Протокол2НДФЛ, 3);
	ПриоритетыПрорисовкиДИВ.Вставить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Реестр2НДФЛ, 3);
	ПриоритетыПрорисовкиДИВ.Вставить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ИзвещениеОВводе, 2);
	ПриоритетыПрорисовкиДИВ.Вставить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.УведомлениеОбУточнении, 2);
	ПриоритетыПрорисовкиДИВ.Вставить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Рассылка, 2);
	ПриоритетыПрорисовкиДИВ.Вставить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ИзвещениеОПолучении, 1);
	ПриоритетыПрорисовкиДИВ.Вставить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Запрос, 5);
	ПриоритетыПрорисовкиДИВ.Вставить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Ответ, 5);
	ПриоритетыПрорисовкиДИВ.Вставить(Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ОписаниеСведенийЗапрос, 8);
	
	
	// сохраняем свойства отображения перед перерисовкой
	ИмяФайлаАктивногоУзла = Неопределено;
	Если ТПСодержимого.ТекущиеДанные <> Неопределено Тогда
		ИмяФайлаАктивногоУзла = ТПСодержимого.ТекущиеДанные.Имя;
	КонецЕсли;
	
	ИменаФайловВНераскрытыхУзлахПервогоУровня = Новый Массив;
	Для Каждого Узел Из Содержимое.Строки Цикл
		Если ЗначениеЗаполнено(Узел.Имя) И НЕ ТПСодержимого.Развернут(Узел) Тогда
			ИменаФайловВНераскрытыхУзлахПервогоУровня.Добавить(Узел.Имя);
		КонецЕсли;
	КонецЦикла;
	
	
	Содержимое.Строки.Очистить();
	
	// во вложениях текущего сообщения ищем подписи под документами из других сообщений
	ИменаПодписанныхФайловИзДругихСообщений = Новый Массив;
	Для Каждого ВложениеТекущегоСообщения Из ВложенияТекущегоСообщения Цикл
		Если ВложениеТекущегоСообщения.Тип = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ЭлектронноЦифроваяПодпись Тогда
			ПодписанныйФайл = ВложенияТекущегоСообщения.Найти(ВложениеТекущегоСообщения.ЭЦПИмяПодписанногоФайла, "ИмяФайла");
			Если ПодписанныйФайл = Неопределено Тогда
				ИменаПодписанныхФайловИзДругихСообщений.Добавить(ВложениеТекущегоСообщения.ЭЦПИмяПодписанногоФайла);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	// если это возможно, ищем подписанные документы в сообщениях-основаниях
	Если ИменаПодписанныхФайловИзДругихСообщений.Количество() > 0 Тогда
		
		// для некоторых входящих сообщений необходимо вручную указать сообщение-основание, из которого необходимо брать ДИВ
		СообщениеВладелец = Основание;
		Если НЕ ЗначениеЗаполнено(СообщениеВладелец) Тогда
			
			Если Тип = Перечисления.ТипыТранспортныхСообщений.ПротоколПФР Тогда
				СообщениеВладелец = КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетностьПФР);
			ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.РезультатПриемаДекларацияНО Тогда
				СообщениеВладелец = КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ДекларацияНП);
			ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.РезультатПриемаФорма2НДФЛНО Тогда
				СообщениеВладелец = КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.Форма2НДФЛНП);
			ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.РезультатПриемаОбращениеНО Тогда
				СообщениеВладелец = КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ОбращениеНП);
			ИначеЕсли Тип = Перечисления.ТипыТранспортныхСообщений.РезультатПриемаЗапросНО Тогда
				СообщениеВладелец = КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ЗапросНП);
				
			// !!! добавить особые типы сообщений ФНС 534
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Вложения.Колонки.Добавить("ПриоритетТипа");
	Вложения.Колонки.Добавить("СообщениеВладелец");
	
	// добавляем к таблице вложений текущего сообщения файлы сообщения-основания
	Если ЗначениеЗаполнено(СообщениеВладелец) Тогда
		ВложенияОснования = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(СообщениеВладелец, , , ИменаПодписанныхФайловИзДругихСообщений);
		Для Каждого ВложениеОснования Из ВложенияОснования Цикл
			НовВложение = Вложения.Добавить();
			ЗаполнитьЗначенияСвойств(НовВложение, ВложениеОснования);
			НовВложение.СообщениеВладелец = СообщениеВладелец;
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого Вложение Из Вложения Цикл
		Вложение.ПриоритетТипа = ПриоритетыПрорисовкиДИВ[Вложение.Тип];
	КонецЦикла;
	Вложения.Сортировать("ПриоритетТипа, Тип, ИмяФайла");
	
	// помещаем ДИВы на первый уровень дерева
	Для Каждого Вложение Из Вложения Цикл
		Если ЗначениеЗаполнено(Вложение.ПриоритетТипа) Тогда
			ОпределитьСтрокуВДеревеСодержимого(Содержимое, Вложение.ИмяФайла, Вложение.Тип, Вложение.СообщениеВладелец, , , , Вложение.ТипФайлаОтчетностиПФР);
		КонецЕсли;
	КонецЦикла;
	
	// помещаем ЭЦП на второй уровень
	Для Каждого Вложение Из Вложения Цикл
		Если Вложение.Тип = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ЭлектронноЦифроваяПодпись Тогда
			ИмяПодписанногоФайла = Вложение.ЭЦПИмяПодписанногоФайла;
			СтрПодписанныйФайл = Содержимое.Строки.Найти(ИмяПодписанногоФайла, "Имя");
			Если СтрПодписанныйФайл <> Неопределено Тогда
				ОпределитьСтрокуВДеревеСодержимого(СтрПодписанныйФайл, Вложение.ИмяФайла, Вложение.Тип, , Вложение.ЭЦПСертификат, Вложение.ЭЦПЭтоПодписьАбонента, Вложение.ЭЦПСтатусПроверки);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	
	// применяем сохраненные ранее свойства отображения
	Для Каждого Узел Из Содержимое.Строки Цикл
		Если ЗначениеЗаполнено(Узел.Имя) И ИменаФайловВНераскрытыхУзлахПервогоУровня.Найти(Узел.Имя) <> Неопределено Тогда
			ТПСодержимого.Свернуть(Узел);
		Иначе
			ТПСодержимого.Развернуть(Узел, Истина);
		КонецЕсли;
	КонецЦикла;
	
	Если ЗначениеЗаполнено(ИмяФайлаАктивногоУзла) Тогда
		СтрАктивныйУзел = Содержимое.Строки.Найти(ИмяФайлаАктивногоУзла, "Имя", Истина);
		Если СтрАктивныйУзел <> Неопределено Тогда
			ТПСодержимого.ТекущаяСтрока = СтрАктивныйУзел;
		КонецЕсли;
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ОпределитьСтрокуВДеревеСодержимого(ДеревоСодержимого, ИмяСодержимого, ТипСодержимого, СообщениеВладелец = Неопределено, СертификатПодписи = Неопределено, ПризнакПодписиАбонента = Неопределено, СтатусПроверкиПодписи = Неопределено, ТипФайлаОтчетности = Неопределено)
	
	НовСтр = ДеревоСодержимого.Строки.Добавить();
	НовСтр.Имя = ИмяСодержимого;
	НовСтр.Тип = ТипСодержимого;
	НовСтр.СообщениеВладелец = СообщениеВладелец;
	НовСтр.ЭЦПСертификат = СертификатПодписи;
	НовСтр.ЭЦПЭтоПодписьАбонента = ПризнакПодписиАбонента;
	НовСтр.ЭЦПСтатусПроверки = СтатусПроверкиПодписи;
	НовСтр.ТипФайлаОтчетности = ТипФайлаОтчетности;
	
КонецПроцедуры

Процедура УправлениеВидимостьюКнопокШифрования(Родитель, ВидимостьКнопок)
	
	РазделительЗашифровать = Родитель.Кнопки.Найти("РазделительЗашифровать");
	КнопкаЗашифровать = Родитель.Кнопки.Найти("Зашифровать");
	Если ВидимостьКнопок Тогда
		Если РазделительЗашифровать = Неопределено Тогда
			НоваяКнопка = Родитель.Кнопки.Вставить(Родитель.Кнопки.Индекс(Родитель.Кнопки.РазделительПослеОбновить) + 1,
																					 "РазделительЗашифровать",
																					 ТипКнопкиКоманднойПанели.Разделитель);
		КонецЕсли;
		Если КнопкаЗашифровать = Неопределено Тогда
			НоваяКнопка = Родитель.Кнопки.Вставить(Родитель.Кнопки.Индекс(Родитель.Кнопки.РазделительПослеОбновить) + 1,
																					 "Зашифровать",
																					 ТипКнопкиКоманднойПанели.Действие,
																					 "Зашифровать",
																					 Новый Действие("КоманднаяПанельДействияФормыЗашифровать"));
			НоваяКнопка.Картинка = БиблиотекаКартинок.Зашифровать;
		КонецЕсли;
	Иначе
		Если РазделительЗашифровать <> Неопределено Тогда
			Родитель.Кнопки.Удалить(РазделительЗашифровать);
		КонецЕсли;
		Если КнопкаЗашифровать <> Неопределено Тогда
			Родитель.Кнопки.Удалить(КнопкаЗашифровать);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если ЭтоНовый() Тогда
		Предупреждение("Документ не предназначен для ввода вручную!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	КонтекстЭДО.ПометитьСообщениеКакПрочитанное(Ссылка);
	
	ОбновитьДанные();
	
КонецПроцедуры

Процедура ОтправительНажатие(Элемент)
	
	ОткрытьЗначение(Отправитель);
	
КонецПроцедуры

Процедура ПолучательНажатие(Элемент)
	
	Если ТипЗнч(Получатель) <> Тип("Строка") Тогда
		ОткрытьЗначение(Получатель);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОсновныеДействияФормыОсновныеДействияФормыВыгрузитьВложения(Кнопка)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	Диалог.Заголовок = "Выберите каталог для сохранения вложений транспортного сообщения";
	Если НЕ Диалог.Выбрать() Тогда
		Возврат;
	КонецЕсли;
	
	КоличествоСохраненных = 0;
	Вложения = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(ЭтотОбъект, Истина);
	Для Каждого Вложение Из Вложения Цикл
		ИмяФайлаВложения = ?(Прав(Диалог.Каталог, 1) = "\", Диалог.Каталог, Диалог.Каталог + "\") + Вложение.ИмяФайла;
		ФайлВложения = Новый Файл(ИмяФайлаВложения);
		Если ФайлВложения.Существует() Тогда
			Ответ = Вопрос("Файл """ + Вложение.ИмяФайла + """ существует. Заменить?", РежимДиалогаВопрос.ДаНетОтмена);
			Если Ответ = КодВозвратаДиалога.Нет Тогда
				Продолжить;
			ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
		Попытка
			Вложение.Данные.Получить().Записать(ИмяФайлаВложения);
			КоличествоСохраненных = КоличествоСохраненных + 1;
		Исключение
			Сообщить("Не удалось выгрузить на диск файл """ + Вложение.ИмяФайла + """!" + Символы.ПС + ОписаниеОшибки() ,СтатусСообщения.Важное);
		КонецПопытки;
	КонецЦикла;
	
	КоличествоВложений = Вложения.Количество();
	Если КоличествоВложений <> 0 Тогда
		СообщениеТекст = "Выгружено файлов: " + КоличествоСохраненных + ".";
		Если КоличествоСохраненных <> КоличествоВложений Тогда
			СообщениеТекст = СообщениеТекст + "
							 |Не удалось выгрузить: " + (КоличествоВложений - КоличествоСохраненных) + ".";
		КонецЕсли;
		Предупреждение(СообщениеТекст);
	КонецЕсли;					
	
КонецПроцедуры

Процедура ДействияФормыДополнительныеРеквизиты(Кнопка)
	
	КонтекстЭДО.ПолучитьФорму("ДополнительныеСвойстваТранспортногоСообщения", ЭтаФорма).ОткрытьМодально();
	
КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Изменение содержимого транспортного контейнера" И Параметр = Ссылка Тогда
		ОбновитьДанные();
	ИначеЕсли ИмяСобытия = "Изменение сообщения" И ТипЗнч(Параметр) = Тип("Структура") И Параметр.Сообщение = Ссылка Тогда
		ОбновитьДанные();
	ИначеЕсли ИмяСобытия = "Опрос форм" И Параметр.Ключ = Ссылка Тогда
		Параметр.Форма = ЭтаФорма;
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельДействияФормыПеречитать(Кнопка)
	
	ОбновитьДанные();
	
КонецПроцедуры

Процедура КоманднаяПанельДействияФормыОтправить(Кнопка)
	
	Если КонтекстЭДО.ОтправитьТранспортноеСообщение(Ссылка) Тогда
		ОбновитьДанные();
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

Процедура НадписьФайлВыгрузкиСтр1Нажатие(Элемент)
	
	ФайлыВыгрузки = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(ЭтотОбъект, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ФайлОтчетности);
	Для Каждого ФайлВыгрузки Из ФайлыВыгрузки Цикл
		ВременныйФайл = ПолучитьИмяВременногоФайла();
		ФайлВыгрузки.Данные.Получить().Записать(ВременныйФайл);
		Текст = Новый ТекстовыйДокумент;
		Текст.Прочитать(ВременныйФайл, ?(нрег(Прав(ФайлВыгрузки.ИмяФайла, 4)) = ".xml", КодировкаТекста.ANSI, КодировкаТекста.OEM));
		Текст.ТолькоПросмотр = Истина;
		Текст.Показать(ФайлВыгрузки.ИмяФайла, ФайлВыгрузки.ИмяФайла);
		УдалитьФайлы(ВременныйФайл);
	КонецЦикла;
	
КонецПроцедуры

Процедура НадписьФайлОписанияСтр1Нажатие(Элемент)
	
	ПоказатьФайлИнформации();
	
КонецПроцедуры

Процедура НадписьКвитанцияОПриемеСтр2Нажатие(Элемент)
	
	ПоказатьКвитанцию();
	
КонецПроцедуры

Процедура НадписьПротоколВходногоКонтроляСтр3Нажатие(Элемент)
	
	ФайлыПротоколов = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(ЭтотОбъект, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПротоколВходногоКонтроля);
	Для Каждого ФайлПротокола Из ФайлыПротоколов Цикл
		ВременныйФайл = ПолучитьИмяВременногоФайла();
		ФайлПротокола.Данные.Получить().Записать(ВременныйФайл);
		Текст = Новый ТекстовыйДокумент;
		Текст.Прочитать(ВременныйФайл);
		Текст.ТолькоПросмотр = Истина;
		Текст.Показать(ФайлПротокола.ИмяФайла, ФайлПротокола.ИмяФайла);
		УдалитьФайлы(ВременныйФайл);
	КонецЦикла;
	
КонецПроцедуры

Процедура НадписьПодписиОтветственныхЛицСтр1Нажатие(Элемент)
	
	ОткрытьПодписи(, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ФайлОтчетности, Истина);
	
КонецПроцедуры

Процедура ОткрытьПодписи(Сообщение = Неопределено, Документ, РаботаСЭЦПАбонента = Ложь, РаботаСЭЦППрочихУчастников = Ложь)
	
	ФормаПодписей = КонтекстЭДО.ПолучитьФорму("ПодписиПодДокументами", , Новый УникальныйИдентификатор);
	
	ФормаПодписей.ТранспортноеСообщение = ?(Сообщение = Неопределено, Ссылка, Сообщение);
	
	Если ТипЗнч(Документ) = Тип("Строка") Тогда
		ФормаПодписей.ИмяФайлаДокумента = Документ;
	Иначе
		ИменаДокументов = ПолучитьИменаДокумента(Сообщение, Документ);
		Если ИменаДокументов.Количество() = 1 Тогда
			ФормаПодписей.ИмяФайлаДокумента = ИменаДокументов.Получить(0).Значение;
		ИначеЕсли ИменаДокументов.Количество() > 1 Тогда
			РезультатВыбора = ИменаДокументов.ВыбратьЭлемент();
			Если РезультатВыбора <> Неопределено Тогда
				ФормаПодписей.ИмяФайлаДокумента = РезультатВыбора.Значение;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ФормаПодписей.РаботаСЭЦПАбонента = РаботаСЭЦПАбонента;
	ФормаПодписей.РаботаСЭЦППрочихУчастников = РаботаСЭЦППрочихУчастников;
	
	ФормаПодписей.ОткрытьМодально();
	
	ОбновитьДанные();
	
КонецПроцедуры

Функция ПолучитьИменаДокумента(Сообщение, ТипДокумента)
	
	Если Сообщение = Неопределено ИЛИ Сообщение = Ссылка Тогда
		МассивДокументов = Вложения.НайтиСтроки(Новый Структура("Тип", ТипДокумента));
	Иначе
		МассивДокументов = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(Сообщение, Ложь, ТипДокумента);
	КонецЕсли;
	
	Результат = Новый СписокЗначений;
	Для Каждого Стр из МассивДокументов Цикл
		Результат.Добавить(Стр.ИмяФайла);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Процедура НадписьПодписиСтр2Нажатие(Элемент)
	
	ОткрытьПодписи(, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПодтверждениеОбОтправке, , Истина);
	
КонецПроцедуры

Процедура НадписьПодписиСтр3Нажатие(Элемент)
	
	ОткрытьПодписи(, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПротоколВходногоКонтроля, , Истина);
	
КонецПроцедуры

Процедура НадписьФайлВыгрузкиСтр4Нажатие(Элемент)
	
	ФайлыВыгрузки = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(ЭтотОбъект, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ФайлОтчетности);
	Для Каждого ФайлВыгрузки Из ФайлыВыгрузки Цикл
		ВременныйФайл = ПолучитьИмяВременногоФайла();
		ФайлВыгрузки.Данные.Получить().Записать(ВременныйФайл);
		Текст = Новый ТекстовыйДокумент;
		Текст.Прочитать(ВременныйФайл, ?(нрег(Прав(ФайлВыгрузки.ИмяФайла, 4)) = ".xml", КодировкаТекста.ANSI, КодировкаТекста.OEM));
		Текст.ТолькоПросмотр = Истина;
		Текст.Показать(ФайлВыгрузки.ИмяФайла, ФайлВыгрузки.ИмяФайла);
		УдалитьФайлы(ВременныйФайл);
	КонецЦикла;
	
КонецПроцедуры

Процедура НадписьФайлОписанияСтр4Нажатие(Элемент)
	
	ПоказатьФайлИнформации();
	
КонецПроцедуры

Процедура НадписьПодписиОтветственныхЛицСтр4Нажатие(Элемент)
	
	ОткрытьПодписи(, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ФайлОтчетности, Истина);
	
КонецПроцедуры

Процедура НадписьПодписьНалоговогоОрганаСтр4Нажатие(Элемент)
	
	ОткрытьПодписи(, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ФайлОтчетности, , Истина);
	
КонецПроцедуры

Процедура КоманднаяПанельДействияФормыЦиклОбмена(Кнопка)
	
	Если НЕ ЦиклОбмена.Пустая() Тогда
		ЦиклОбмена.ПолучитьФорму().Открыть();
	КонецЕсли;
	
КонецПроцедуры

Процедура НадписьСостояниеПодтвержденияНаПодтверждениеОтправкиНажатие(Элемент)
	
	Сообщение = КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ПереподписанноеПодтверждениеОтправкиОтчетности, Ссылка);
	Если Сообщение = Документы.ТранспортноеСообщение.ПустаяСсылка() Тогда
		Подтверждение = КонтекстЭДО.ВвестиПодтверждение(ЦиклОбмена, Ссылка);
		Если Подтверждение <> Неопределено Тогда
			Подтверждение.ПолучитьФорму().Открыть();
			ОбновитьДанные();
		КонецЕсли;
	Иначе
		Сообщение.ПолучитьФорму().Открыть();
	КонецЕсли;
	
КонецПроцедуры

Процедура НадписьКвитанцияОПриемеСтр5Нажатие(Элемент)
	
	ПоказатьКвитанцию();
	
КонецПроцедуры

Процедура НадписьФайлОписанияСтр5Нажатие(Элемент)
	
	ПоказатьФайлИнформации();
	
КонецПроцедуры

Процедура НадписьПодписиСтр5Нажатие(Элемент)
	
	ОткрытьПодписи(, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПодтверждениеОбОтправке, Истина);
	
КонецПроцедуры

Процедура НадписьПротоколВходногоКонтроляСтр6Нажатие(Элемент)
	
	ФайлыПротоколов = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(ЭтотОбъект, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПротоколВходногоКонтроля);
	Для Каждого ФайлПротокола Из ФайлыПротоколов Цикл
		ВременныйФайл = ПолучитьИмяВременногоФайла();
		ФайлПротокола.Данные.Получить().Записать(ВременныйФайл);
		Текст = Новый ТекстовыйДокумент;
		Текст.Прочитать(ВременныйФайл);
		Текст.ТолькоПросмотр = Истина;
		Текст.Показать(ФайлПротокола.ИмяФайла, ФайлПротокола.ИмяФайла);
		УдалитьФайлы(ВременныйФайл);
	КонецЦикла;
	
КонецПроцедуры

Процедура НадписьСостояниеПодтвержденияНаПротоколПроверкиНажатие(Элемент)
	
	Сообщение = КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ПереподписанныйПротоколВходногоКонтроляОтчетности, Ссылка);
	Если Сообщение = Документы.ТранспортноеСообщение.ПустаяСсылка() Тогда
		Подтверждение = КонтекстЭДО.ВвестиПодтверждение(ЦиклОбмена, Ссылка);
		Если Подтверждение <> Неопределено Тогда
			Подтверждение.ПолучитьФорму().Открыть();
			ОбновитьДанные();
		КонецЕсли;
	Иначе
		Сообщение.ПолучитьФорму().Открыть();
	КонецЕсли;
	
КонецПроцедуры

Процедура НадписьСостояниеПодтвержденияНаНеформализованноеСообщениеНажатие(Элемент)
	
	Сообщение = КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеНаНеформализованныйДокументНО, Ссылка);
	Если Сообщение = Документы.ТранспортноеСообщение.ПустаяСсылка() Тогда
		Подтверждение = КонтекстЭДО.ВвестиПодтверждение(ЦиклОбмена, Ссылка);
		Если Подтверждение <> Неопределено Тогда
			Подтверждение.ПолучитьФорму().Открыть();
			ОбновитьДанные();
		КонецЕсли;
	Иначе
		Сообщение.ПолучитьФорму().Открыть();
	КонецЕсли;
	
КонецПроцедуры

Процедура НадписьПроверитьНажатие(Элемент)
	
	КонтекстЭДО.ПроверитьПодписьНалоговогоОргана(Ссылка, СоответствиеНадписиПроверитьТипуПроверки[Элемент]);
	
КонецПроцедуры

Процедура НадписьТекстовоеСообщениеСтр7Нажатие(Элемент)
	
	ТекстовыеСообщенияНФД = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(ЭтотОбъект, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ТекстовоеСообщениеНеформализованногоДокумента);
	Для Каждого ТекстовоеСообщениеНФД Из ТекстовыеСообщенияНФД Цикл
		ВременныйФайл = ПолучитьИмяВременногоФайла();
		ТекстовоеСообщениеНФД.Данные.Получить().Записать(ВременныйФайл);
		Текст = Новый ТекстовыйДокумент;
		Текст.Прочитать(ВременныйФайл);
		Текст.ТолькоПросмотр = Истина;
		Текст.Показать(ТекстовоеСообщениеНФД.ИмяФайла, ТекстовоеСообщениеНФД.ИмяФайла);
		УдалитьФайлы(ВременныйФайл);
	КонецЦикла;
	
КонецПроцедуры

Процедура НадписьОписаниеНеформализованногоДокументаСтр7Нажатие(Элемент)
	
	ОписанияНФД = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(ЭтотОбъект, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ОписаниеНеформализованногоДокумента);
	Для Каждого ОписаниеНФД Из ОписанияНФД Цикл
		ВременныйФайл = ПолучитьИмяВременногоФайла();
		ОписаниеНФД.Данные.Получить().Записать(ВременныйФайл);
		Текст = Новый ТекстовыйДокумент;
		Текст.Прочитать(ВременныйФайл);
		Текст.ТолькоПросмотр = Истина;
		Текст.Показать(ОписаниеНФД.ИмяФайла, ОписаниеНФД.ИмяФайла);
		УдалитьФайлы(ВременныйФайл);
	КонецЦикла;
	
КонецПроцедуры

Процедура НадписьНеформализованныйДокументСтр7Нажатие(Элемент)
	
	ОписанияНФД = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(ЭтотОбъект, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ОписаниеНеформализованногоДокумента);
	Если ОписанияНФД.Количество() <> 0 Тогда
		
		// получаем соответствие имен документов из файла описания
		ИменаФайловНФД = КонтекстЭДО.ИзвлечьИменаФайловНФДИзОписания(ОписанияНФД[0].Данные);
		Если НЕ ЗначениеЗаполнено(ИменаФайловНФД) Тогда
			Предупреждение("Не удалось определить имя файла неформализованного документа из файла с описанием неформализованного документа!");
			Возврат;
		КонецЕсли;
		
		Если ИменаФайловНФД.Количество() > 1 Тогда
			
			// формируем список значений из соответствия
			СписокИменФайлов = Новый СписокЗначений;
			Для Каждого ИмяФайлаНФД Из ИменаФайловНФД Цикл
				СписокИменФайлов.Добавить(ИмяФайлаНФД.Ключ, ИмяФайлаНФД.Значение);
			КонецЦикла;
			
			// предлагаем пользователю выбрать
			РезультатВыбора = СписокИменФайлов.ВыбратьЭлемент("Выберите документ");
			Если РезультатВыбора = Неопределено Тогда
				Возврат;
			КонецЕсли;
			
			ИмяФайлаНФД = РезультатВыбора.Значение;
			ПредставлениеНФД = РезультатВыбора.Представление;
			
		Иначе
			
			Для Каждого Эл Из ИменаФайловНФД Цикл
				ИмяФайлаНФД = Эл.Ключ;
				ПредставлениеНФД = Эл.Значение;
				Прервать;
			КонецЦикла;
			
		КонецЕсли;
		
		// извлекаем документ
		ВремФайлНФД = ПолучитьИмяВременногоФайла(ПредставлениеНФД);
		ФайлыНФД = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(Ссылка, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.НеформализованныйДокумент, ИмяФайлаНФД);
		Если ФайлыНФД.Количество() = 0 Тогда
			Предупреждение("Неформализованный документ не обнаружен!");
			Возврат;
		КонецЕсли;
		ФайлыНФД[0].Данные.Получить().Записать(ВремФайлНФД);
		
		// открываем документ
		Попытка
			ЗапуститьПриложение(ВремФайлНФД);
		Исключение
			Предупреждение("Ошибка открытия неформализованного документа!");
		КонецПопытки;
		
	КонецЕсли;
		
КонецПроцедуры

Процедура НадписьПодписьНалоговогоОрганаПодТекстовымСообщениемСтр7Нажатие(Элемент)
	
	ОткрытьПодписи(, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ТекстовоеСообщениеНеформализованногоДокумента, , Истина);
	
КонецПроцедуры

Процедура НадписьСюда1Стр5Нажатие(Элемент)
	
	ОткрытьПодписи(Основание, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПодтверждениеОбОтправке, , Истина);
	
КонецПроцедуры

Процедура НадписьСюда1Стр6Нажатие(Элемент)
	
	ОткрытьПодписи(Основание, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПротоколВходногоКонтроля, , Истина);
	
КонецПроцедуры

Процедура НадписьСюда2Стр5Нажатие(Элемент)
	
	//СообщениеОснование = КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОтправкиОтчетности);
	Подтверждения = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(Основание, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПодтверждениеОбОтправке);
	Если Подтверждения.Количество() = 0 Тогда
		Предупреждение("Не найдено исходное подтверждение от сервера документооборота!");
		Возврат;
	КонецЕсли;
	
	ВремФайл = ПолучитьИмяВременногоФайла();
	Подтверждения[0].Данные.Получить().Записать(ВремФайл);
	Текст = Новый ТекстовыйДокумент;
	Текст.Прочитать(ВремФайл);
	УдалитьФайлы(ВремФайл);
	ТекстКвитанции = Текст.ПолучитьТекст();
	
	ДвДанные = КонтекстЭДО.СоздатьОбъектДляРаботыСДвоичнымиДанными();
	Если ДвДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПодписиНалогоплательщика = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(Ссылка, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ЭлектронноЦифроваяПодпись);
	Если ПодписиНалогоплательщика.Количество() = 0 Тогда
		Предупреждение("Не найдена ЭЦП налогоплательщика на квитанции об отправке!");
	Иначе
		ПодписьНалогоплательщика = ПодписиНалогоплательщика[0];
		ВремФайл = ПолучитьИмяВременногоФайла();
		ПодписьНалогоплательщика.Данные.Получить().Записать(ВремФайл);
		ДвДанные.Прочитать (ВремФайл);
		Строка64 = ДвДанные.ПолучитьСтрокуBase64();
		УдалитьФайлы(ВремФайл);
		
		ТекстКвитанции = ТекстКвитанции + Символы.ПС + Символы.ПС + Символы.ПС + "Подпись налогоплательщика:" + Символы.ПС + Символы.ПС + "-----BEGIN SIGN-----" + Символы.ПС;
		Пока НЕ ПустаяСтрока(Строка64) Цикл
			ТекстКвитанции = ТекстКвитанции + Лев(Строка64, 72) + Символы.ПС;
			Строка64 = Сред(Строка64, 73);
		КонецЦикла;
		ТекстКвитанции = ТекстКвитанции + "-----END SIGN-----";
	КонецЕсли;
	
	ТаблДок = Новый ТабличныйДокумент;
	ТаблДок.Область(1, 1, 1, 1).ШиринаКолонки = 100;
	ТаблДок.Область(1, 1, 1, 1).РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Переносить;
	ТаблДок.Область(1, 1, 1, 1).Текст = ТекстКвитанции;
	ТаблДок.Область(1, 1, 1, 1).Шрифт = Новый Шрифт("Courier", 10);
	ТаблДок.Показать("Квитанция об отправке, заверенная ЭЦП сервера документооборота и налогоплательщика", "Квитанция об отправке.txt");
	
КонецПроцедуры

Процедура НадписьСюда2Стр6Нажатие(Элемент)
	
	//СообщениеОснование = КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляОтчетности);
	Протоколы = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(Основание, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПротоколВходногоКонтроля);
	Если Протоколы.Количество() = 0 Тогда
		Предупреждение("Не найден исходный протокол!");
		Возврат;
	КонецЕсли;
	
	ВремФайл = ПолучитьИмяВременногоФайла();
	Протоколы[0].Данные.Получить().Записать(ВремФайл);
	Текст = Новый ТекстовыйДокумент;
	Текст.Прочитать(ВремФайл);
	УдалитьФайлы(ВремФайл);
	ТекстПротокола = Текст.ПолучитьТекст();
	
	ДвДанные = КонтекстЭДО.СоздатьОбъектДляРаботыСДвоичнымиДанными();
	Если ДвДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПодписиНалоговогоОргана = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(Основание, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ЭлектронноЦифроваяПодпись);
	Если ПодписиНалоговогоОргана.Количество() = 0 Тогда
		Предупреждение("Не найдена ЭЦП налогового органа на протоколе входного контроля!");
	Иначе
		ПодписьНалоговогоОргана = ПодписиНалоговогоОргана[0];
		ВремФайл = ПолучитьИмяВременногоФайла();
		ПодписьНалоговогоОргана.Данные.Получить().Записать(ВремФайл);
		ДвДанные.Прочитать (ВремФайл);
		Строка64 = ДвДанные.ПолучитьСтрокуBase64();
		УдалитьФайлы(ВремФайл);
		
		ТекстПротокола = ТекстПротокола + Символы.ПС + Символы.ПС + "Подпись налогового органа:" + Символы.ПС + Символы.ПС + "-----BEGIN SIGN-----" + Символы.ПС;
		Пока НЕ ПустаяСтрока(Строка64) Цикл
			ТекстПротокола = ТекстПротокола + Лев(Строка64, 72) + Символы.ПС;
			Строка64 = Сред(Строка64, 73);
		КонецЦикла;
		ТекстПротокола = ТекстПротокола + "-----END SIGN-----";
	КонецЕсли;
	
	ПодписиНалогоплательщика = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(Ссылка, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ЭлектронноЦифроваяПодпись);
	Если ПодписиНалогоплательщика.Количество() = 0 Тогда
		Предупреждение("Не найдена ЭЦП налогоплательщика на протоколе!");
	Иначе
		ПодписьНалогоплательщика = ПодписиНалогоплательщика[0];
		ВремФайл = ПолучитьИмяВременногоФайла();
		ПодписьНалогоплательщика.Данные.Получить().Записать(ВремФайл);
		ДвДанные.Прочитать (ВремФайл);
		Строка64 = ДвДанные.ПолучитьСтрокуBase64();
		УдалитьФайлы(ВремФайл);
		
		ТекстПротокола = ТекстПротокола + Символы.ПС + Символы.ПС + Символы.ПС + "Подпись налогоплательщика:" + Символы.ПС + Символы.ПС + "-----BEGIN SIGN-----" + Символы.ПС;
		Пока НЕ ПустаяСтрока(Строка64) Цикл
			ТекстПротокола = ТекстПротокола + Лев(Строка64, 72) + Символы.ПС;
			Строка64 = Сред(Строка64, 73);
		КонецЦикла;
		ТекстПротокола = ТекстПротокола + "-----END SIGN-----";
	КонецЕсли;
	
	ТаблДок = Новый ТабличныйДокумент;
	ТаблДок.Область(1, 1, 1, 1).ШиринаКолонки = 100;
	ТаблДок.Область(1, 1, 1, 1).РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Переносить;
	ТаблДок.Область(1, 1, 1, 1).Текст = ТекстПротокола;
	ТаблДок.Область(1, 1, 1, 1).Шрифт = Новый Шрифт("Courier", 10);
	ТаблДок.Показать("Протокол входного контроля файла отчетности, заверенный ЭЦП налогового органа и налогоплательщика", "Протокол.txt");
	
КонецПроцедуры

Процедура НадписьСюда3Стр5Нажатие(Элемент)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	Если НЕ Диалог.Выбрать() Тогда
		Возврат;
	КонецЕсли;
	КаталогСохранения = ?(Прав(Диалог.Каталог, 1) = "\", Диалог.Каталог, Диалог.Каталог + "\");
	
	//СообщениеОснование = КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОтправкиОтчетности);
	Квитанции = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(Основание, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПодтверждениеОбОтправке);
	Если Квитанции.Количество() = 0 Тогда
		Предупреждение("Не найдена исходная квитанция о приеме!");
		Возврат;
	Иначе
		Квитанция = Квитанции[0];
		ИмяФайлаВложения = КаталогСохранения + Квитанция.ИмяФайла;
		ФайлВложения = Новый Файл(ИмяФайлаВложения);
		Ответ = КодВозвратаДиалога.Да;
		Если ФайлВложения.Существует() Тогда
			Ответ = Вопрос("Файл """ + Квитанция.ИмяФайла + """ существует. Заменить?", РежимДиалогаВопрос.ДаНетОтмена);
			Если Ответ = КодВозвратаДиалога.Отмена Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
		Если Ответ <> КодВозвратаДиалога.Нет Тогда
			Попытка
				Квитанция.Данные.Получить().Записать(ИмяФайлаВложения);
			Исключение
				Сообщить("Не удалось выгрузить на диск файл """ + Квитанция.ИмяФайла + """!" + Символы.ПС + ОписаниеОшибки() ,СтатусСообщения.Важное);
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
	ПодписиНалоговогоОргана = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(Основание, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ЭлектронноЦифроваяПодпись);
	Если ПодписиНалоговогоОргана.Количество() = 0 Тогда
		Предупреждение("Не найдена ЭЦП налогового органа на протоколе входного контроля!");
		Возврат;
	Иначе
		ПодписьНалоговогоОргана = ПодписиНалоговогоОргана[0];
		ИмяФайлаВложения = КаталогСохранения + ПодписьНалоговогоОргана.ИмяФайла;
		ФайлВложения = Новый Файл(ИмяФайлаВложения);
		Ответ = КодВозвратаДиалога.Да;
		Если ФайлВложения.Существует() Тогда
			Ответ = Вопрос("Файл """ + ПодписьНалоговогоОргана.ИмяФайла + """ существует. Заменить?", РежимДиалогаВопрос.ДаНетОтмена);
			Если Ответ = КодВозвратаДиалога.Отмена Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
		Если Ответ <> КодВозвратаДиалога.Нет Тогда
			Попытка
				ПодписьНалоговогоОргана.Данные.Получить().Записать(ИмяФайлаВложения);
			Исключение
				Сообщить("Не удалось выгрузить на диск файл """ + ПодписьНалоговогоОргана.ИмяФайла + """!" + Символы.ПС + ОписаниеОшибки() ,СтатусСообщения.Важное);
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
	ПодписиНалогоплательщика = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(Ссылка, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ЭлектронноЦифроваяПодпись);
	Если ПодписиНалогоплательщика.Количество() = 0 Тогда
		Предупреждение("Не найдена ЭЦП налогоплательщика на протоколе!");
		Возврат;
	Иначе
		ПодписьНалогоплательщика = ПодписиНалогоплательщика[0];
		ИмяФайлаВложения = КаталогСохранения + ПодписьНалогоплательщика.ИмяФайла;
		ФайлВложения = Новый Файл(ИмяФайлаВложения);
		Ответ = КодВозвратаДиалога.Да;
		Если ФайлВложения.Существует() Тогда
			Ответ = Вопрос("Файл """ + ПодписьНалогоплательщика.ИмяФайла + """ существует. Заменить?", РежимДиалогаВопрос.ДаНетОтмена);
			Если Ответ = КодВозвратаДиалога.Отмена Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
		Если Ответ <> КодВозвратаДиалога.Нет Тогда
			Попытка
				ПодписьНалогоплательщика.Данные.Получить().Записать(ИмяФайлаВложения);
			Исключение
				Сообщить("Не удалось выгрузить на диск файл """ + ПодписьНалогоплательщика.ИмяФайла + """!" + Символы.ПС + ОписаниеОшибки() ,СтатусСообщения.Важное);
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
	СертификатыНалогоплательщика = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(Ссылка, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Сертификат);
	Если СертификатыНалогоплательщика.Количество() = 0 Тогда
		Предупреждение("Не найден сертификат, связанный с ЭЦП налогоплательщика на протоколе!");
		Возврат;
	Иначе
		СертификатНалогоплательщика = СертификатыНалогоплательщика[0];
		ИмяФайлаВложения = КаталогСохранения + СертификатНалогоплательщика.ИмяФайла;
		ФайлВложения = Новый Файл(ИмяФайлаВложения);
		Ответ = КодВозвратаДиалога.Да;
		Если ФайлВложения.Существует() Тогда
			Ответ = Вопрос("Файл """ + СертификатНалогоплательщика.ИмяФайла + """ существует. Заменить?", РежимДиалогаВопрос.ДаНетОтмена);
			Если Ответ = КодВозвратаДиалога.Отмена Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
		Если Ответ <> КодВозвратаДиалога.Нет Тогда
			Попытка
				СертификатНалогоплательщика.Данные.Получить().Записать(ИмяФайлаВложения);
			Исключение
				Сообщить("Не удалось выгрузить на диск файл """ + СертификатНалогоплательщика.ИмяФайла + """!" + Символы.ПС + ОписаниеОшибки() ,СтатусСообщения.Важное);
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
	Предупреждение("Сохранение завершено.");
	
КонецПроцедуры

Процедура НадписьСюда3Стр6Нажатие(Элемент)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	Если НЕ Диалог.Выбрать() Тогда
		Возврат;
	КонецЕсли;
	КаталогСохранения = ?(Прав(Диалог.Каталог, 1) = "\", Диалог.Каталог, Диалог.Каталог + "\");
	
	//СообщениеОснование = КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляОтчетности);
	Протоколы = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(Основание, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПротоколВходногоКонтроля);
	Если Протоколы.Количество() = 0 Тогда
		Предупреждение("Не найден исходный протокол!");
		Возврат;
	Иначе
		Протокол = Протоколы[0];
		ИмяФайлаВложения = КаталогСохранения + Протокол.ИмяФайла;
		ФайлВложения = Новый Файл(ИмяФайлаВложения);
		Ответ = КодВозвратаДиалога.Да;
		Если ФайлВложения.Существует() Тогда
			Ответ = Вопрос("Файл """ + Протокол.ИмяФайла + """ существует. Заменить?", РежимДиалогаВопрос.ДаНетОтмена);
			Если Ответ = КодВозвратаДиалога.Отмена Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
		Если Ответ <> КодВозвратаДиалога.Нет Тогда
			Попытка
				Протокол.Данные.Получить().Записать(ИмяФайлаВложения);
			Исключение
				Сообщить("Не удалось выгрузить на диск файл """ + Протокол.ИмяФайла + """!" + Символы.ПС + ОписаниеОшибки() ,СтатусСообщения.Важное);
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
	ПодписиНалоговогоОргана = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(Основание, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ЭлектронноЦифроваяПодпись);
	Если ПодписиНалоговогоОргана.Количество() = 0 Тогда
		Предупреждение("Не найдена ЭЦП налогового органа на протоколе входного контроля!");
		Возврат;
	Иначе
		ПодписьНалоговогоОргана = ПодписиНалоговогоОргана[0];
		ИмяФайлаВложения = КаталогСохранения + ПодписьНалоговогоОргана.ИмяФайла;
		ФайлВложения = Новый Файл(ИмяФайлаВложения);
		Ответ = КодВозвратаДиалога.Да;
		Если ФайлВложения.Существует() Тогда
			Ответ = Вопрос("Файл """ + ПодписьНалоговогоОргана.ИмяФайла + """ существует. Заменить?", РежимДиалогаВопрос.ДаНетОтмена);
			Если Ответ = КодВозвратаДиалога.Отмена Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
		Если Ответ <> КодВозвратаДиалога.Нет Тогда
			Попытка
				ПодписьНалоговогоОргана.Данные.Получить().Записать(ИмяФайлаВложения);
			Исключение
				Сообщить("Не удалось выгрузить на диск файл """ + ПодписьНалоговогоОргана.ИмяФайла + """!" + Символы.ПС + ОписаниеОшибки() ,СтатусСообщения.Важное);
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
	ПодписиНалогоплательщика = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(Ссылка, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ЭлектронноЦифроваяПодпись);
	Если ПодписиНалогоплательщика.Количество() = 0 Тогда
		Предупреждение("Не найдена ЭЦП налогоплательщика на протоколе!");
		Возврат;
	Иначе
		ПодписьНалогоплательщика = ПодписиНалогоплательщика[0];
		ИмяФайлаВложения = КаталогСохранения + ПодписьНалогоплательщика.ИмяФайла;
		ФайлВложения = Новый Файл(ИмяФайлаВложения);
		Ответ = КодВозвратаДиалога.Да;
		Если ФайлВложения.Существует() Тогда
			Ответ = Вопрос("Файл """ + ПодписьНалогоплательщика.ИмяФайла + """ существует. Заменить?", РежимДиалогаВопрос.ДаНетОтмена);
			Если Ответ = КодВозвратаДиалога.Отмена Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
		Если Ответ <> КодВозвратаДиалога.Нет Тогда
			Попытка
				ПодписьНалогоплательщика.Данные.Получить().Записать(ИмяФайлаВложения);
			Исключение
				Сообщить("Не удалось выгрузить на диск файл """ + ПодписьНалогоплательщика.ИмяФайла + """!" + Символы.ПС + ОписаниеОшибки() ,СтатусСообщения.Важное);
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
	СертификатыНалогоплательщика = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(Ссылка, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Сертификат);
	Если СертификатыНалогоплательщика.Количество() = 0 Тогда
		Предупреждение("Не найден сертификат, связанный с ЭЦП налогоплательщика на протоколе!");
		Возврат;
	Иначе
		СертификатНалогоплательщика = СертификатыНалогоплательщика[0];
		ИмяФайлаВложения = КаталогСохранения + СертификатНалогоплательщика.ИмяФайла;
		ФайлВложения = Новый Файл(ИмяФайлаВложения);
		Ответ = КодВозвратаДиалога.Да;
		Если ФайлВложения.Существует() Тогда
			Ответ = Вопрос("Файл """ + СертификатНалогоплательщика.ИмяФайла + """ существует. Заменить?", РежимДиалогаВопрос.ДаНетОтмена);
			Если Ответ = КодВозвратаДиалога.Отмена Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
		Если Ответ <> КодВозвратаДиалога.Нет Тогда
			Попытка
				СертификатНалогоплательщика.Данные.Получить().Записать(ИмяФайлаВложения);
			Исключение
				Сообщить("Не удалось выгрузить на диск файл """ + СертификатНалогоплательщика.ИмяФайла + """!" + Символы.ПС + ОписаниеОшибки() ,СтатусСообщения.Важное);
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
	Предупреждение("Сохранение завершено.");
	
КонецПроцедуры

Процедура НадписьТекстовоеСообщениеСтр8Нажатие(Элемент)
	
	ТекстовыеСообщенияНФД = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(ЭтотОбъект, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ТекстовоеСообщениеНеформализованногоДокумента);
	Для Каждого ТекстовоеСообщениеНФД Из ТекстовыеСообщенияНФД Цикл
		ВременныйФайл = ПолучитьИмяВременногоФайла();
		ТекстовоеСообщениеНФД.Данные.Получить().Записать(ВременныйФайл);
		Текст = Новый ТекстовыйДокумент;
		Текст.Прочитать(ВременныйФайл);
		Текст.ТолькоПросмотр = Истина;
		Текст.Показать(ТекстовоеСообщениеНФД.ИмяФайла, ТекстовоеСообщениеНФД.ИмяФайла);
		УдалитьФайлы(ВременныйФайл);		
	КонецЦикла;
	
КонецПроцедуры

Процедура НадписьПодписьНалогоплательщикаПодТекстовымСообщениемСтр8Нажатие(Элемент)
	
	ОткрытьПодписи(, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ТекстовоеСообщениеНеформализованногоДокумента, Истина);
	
КонецПроцедуры

Процедура НадписьФайлОписанияСтр9Нажатие(Элемент)
	
	ПоказатьФайлИнформации();
	
КонецПроцедуры

Процедура НадписьПодписиОтветственныхЛицСтр9Нажатие(Элемент)
	
	ОткрытьПодписи(, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.НеформализованныйДокумент, Истина);
	
КонецПроцедуры

Процедура НадписьКвитанцияОПриемеСтр10Нажатие(Элемент)
	
	ПоказатьКвитанцию();
	
КонецПроцедуры

Процедура НадписьПодписиСтр10Нажатие(Элемент)
	
	ОткрытьПодписи(, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПодтверждениеОбОтправке, , Истина);
	
КонецПроцедуры

Процедура НадписьПроверитьСтр10Нажатие(Элемент)
	
	КонтекстЭДО.ПроверитьПодписьНалоговогоОргана(Ссылка, СоответствиеНадписиПроверитьТипуПроверки[Элемент]);
	
КонецПроцедуры

Процедура НадписьКвитанцияОПриемеСтр11Нажатие(Элемент)
	
	ПоказатьКвитанцию();
	
КонецПроцедуры

Процедура НадписьПодписиСтр11Нажатие(Элемент)
	
	ОткрытьПодписи(, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПодтверждениеОбОтправке, Истина);
	
КонецПроцедуры

Процедура НадписьДокументСтр12Нажатие(Элемент)
	
	ФайлыВыгрузки = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(ЭтотОбъект, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.НеформализованныйДокумент);
	Для Каждого ФайлВыгрузки Из ФайлыВыгрузки Цикл
		ВременныйФайл = ПолучитьИмяВременногоФайла();
		ФайлВыгрузки.Данные.Получить().Записать(ВременныйФайл);
		Если Лев(ФайлВыгрузки.ИмяФайла, 1) = "T" Тогда
			Текст = Новый ТекстовыйДокумент;
			Текст.Прочитать(ВременныйФайл, КодировкаТекста.ANSI);
			Текст.ТолькоПросмотр = Истина;
			Текст.Показать(ФайлВыгрузки.ИмяФайла, ФайлВыгрузки.ИмяФайла);
			УдалитьФайлы(ВременныйФайл);
		Иначе
			Предупреждение("Просмотр файлов нетекстового типа не предусмотрен из формы транспортного сообщения!");
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура НадписьФайлОписанияСтр12Нажатие(Элемент)
	
	ПоказатьФайлИнформации();
	
КонецПроцедуры

Процедура НадписьПодписиОтветственныхЛицСтр12Нажатие(Элемент)
	
	ОткрытьПодписи(, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.НеформализованныйДокумент, Истина);
	
КонецПроцедуры

Процедура НадписьПодписьНалоговогоОрганаСтр12Нажатие(Элемент)
	
	ОткрытьПодписи(, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.НеформализованныйДокумент, , Истина);
	
КонецПроцедуры

Процедура НадписьПроверитьСтр12Нажатие(Элемент)
	
	КонтекстЭДО.ПроверитьПодписьНалоговогоОргана(Ссылка, СоответствиеНадписиПроверитьТипуПроверки[Элемент]);
	
КонецПроцедуры

Процедура НадписьДокументСтр9Нажатие(Элемент)
	
	ФайлыВыгрузки = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(ЭтотОбъект, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.НеформализованныйДокумент);
	Для Каждого ФайлВыгрузки Из ФайлыВыгрузки Цикл
		ВременныйФайл = ПолучитьИмяВременногоФайла();
		ФайлВыгрузки.Данные.Получить().Записать(ВременныйФайл);
		Если Лев(ФайлВыгрузки.ИмяФайла, 1) = "T" Тогда
			Текст = Новый ТекстовыйДокумент;
			Текст.Прочитать(ВременныйФайл, КодировкаТекста.ANSI);
			Текст.ТолькоПросмотр = Истина;
			Текст.Показать(ФайлВыгрузки.ИмяФайла, ФайлВыгрузки.ИмяФайла);
			УдалитьФайлы(ВременныйФайл);
		Иначе
			Предупреждение("Просмотр файлов нетекстового типа не предусмотрен из формы транспортного сообщения!");
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура НадписьФайлОписанияНеформализованногоДокументаСтр9Нажатие(Элемент)
	
	ОписанияНФД = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(ЭтотОбъект, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ОписаниеНеформализованногоДокумента);
	Для Каждого ОписаниеНФД Из ОписанияНФД Цикл
		ВременныйФайл = ПолучитьИмяВременногоФайла();
		ОписаниеНФД.Данные.Получить().Записать(ВременныйФайл);
		Текст = Новый ТекстовыйДокумент;
		Текст.Прочитать(ВременныйФайл);
		Текст.ТолькоПросмотр = Истина;
		Текст.Показать(ОписаниеНФД.ИмяФайла, ОписаниеНФД.ИмяФайла);
		УдалитьФайлы(ВременныйФайл);
	КонецЦикла;
	
КонецПроцедуры

Процедура НадписьСостояниеОтветаНаПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщикаНажатие(Элемент)
	
	Сообщение = КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ПереподписанноеПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика, Ссылка);
	Если Сообщение = Документы.ТранспортноеСообщение.ПустаяСсылка() Тогда
		Подтверждение = КонтекстЭДО.ВвестиПодтверждение(ЦиклОбмена, Ссылка);
		Если Подтверждение <> Неопределено Тогда
			Подтверждение.ПолучитьФорму().Открыть();
			ОбновитьДанные();
		КонецЕсли;
	Иначе
		Сообщение.ПолучитьФорму().Открыть();
	КонецЕсли;
	
КонецПроцедуры

Процедура НадписьСюда1Стр11Нажатие(Элемент)
	
	ОткрытьПодписи(Основание, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПодтверждениеОбОтправке, , Истина);
	
КонецПроцедуры

Процедура НадписьСюда2Стр11Нажатие(Элемент)
	
	//СообщениеОснование = КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика);
	Подтверждения = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(Основание, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПодтверждениеОбОтправке);
	Если Подтверждения.Количество() = 0 Тогда
		Предупреждение("Не найдено исходное подтверждение от сервера документооборота!");
		Возврат;
	КонецЕсли;
	
	ВремФайл = ПолучитьИмяВременногоФайла();
	Подтверждения[0].Данные.Получить().Записать(ВремФайл);
	Текст = Новый ТекстовыйДокумент;
	Текст.Прочитать(ВремФайл);
	УдалитьФайлы(ВремФайл);
	ТекстКвитанции = Текст.ПолучитьТекст();
	
	ДвДанные = КонтекстЭДО.СоздатьОбъектДляРаботыСДвоичнымиДанными();
	Если ДвДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПодписиНалогоплательщика = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(Ссылка, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ЭлектронноЦифроваяПодпись);
	Если ПодписиНалогоплательщика.Количество() = 0 Тогда
		Предупреждение("Не найдена ЭЦП налогоплательщика на квитанции об отправке!");
	Иначе
		ПодписьНалогоплательщика = ПодписиНалогоплательщика[0];
		ВремФайл = ПолучитьИмяВременногоФайла();
		ПодписьНалогоплательщика.Данные.Получить().Записать(ВремФайл);
		ДвДанные.Прочитать (ВремФайл);
		Строка64 = ДвДанные.ПолучитьСтрокуBase64();
		УдалитьФайлы(ВремФайл);
		
		ТекстКвитанции = ТекстКвитанции + Символы.ПС + Символы.ПС + Символы.ПС + "Подпись налогоплательщика:" + Символы.ПС + Символы.ПС + "-----BEGIN SIGN-----" + Символы.ПС;
		Пока НЕ ПустаяСтрока(Строка64) Цикл
			ТекстКвитанции = ТекстКвитанции + Лев(Строка64, 72) + Символы.ПС;
			Строка64 = Сред(Строка64, 73);
		КонецЦикла;
		ТекстКвитанции = ТекстКвитанции + "-----END SIGN-----";
	КонецЕсли;
	
	ТаблДок = Новый ТабличныйДокумент;
	ТаблДок.Область(1, 1, 1, 1).ШиринаКолонки = 100;
	ТаблДок.Область(1, 1, 1, 1).РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Переносить;
	ТаблДок.Область(1, 1, 1, 1).Текст = ТекстКвитанции;
	ТаблДок.Область(1, 1, 1, 1).Шрифт = Новый Шрифт("Courier", 10);
	ТаблДок.Показать("Квитанция об отправке неформализованного документа, заверенная ЭЦП сервера документооборота и налогоплательщика", "Квитанция об отправке неформализованного документа.txt");
	
КонецПроцедуры

Процедура НадписьСюда3Стр11Нажатие(Элемент)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	Если НЕ Диалог.Выбрать() Тогда
		Возврат;
	КонецЕсли;
	КаталогСохранения = ?(Прав(Диалог.Каталог, 1) = "\", Диалог.Каталог, Диалог.Каталог + "\");
	
	//СообщениеОснование = КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика);
	Квитанции = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(Основание, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПодтверждениеОбОтправке);
	Если Квитанции.Количество() = 0 Тогда
		Предупреждение("Не найдена исходная квитанция о приеме!");
		Возврат;
	Иначе
		Квитанция = Квитанции[0];
		ИмяФайлаВложения = КаталогСохранения + Квитанция.ИмяФайла;
		ФайлВложения = Новый Файл(ИмяФайлаВложения);
		Ответ = КодВозвратаДиалога.Да;
		Если ФайлВложения.Существует() Тогда
			Ответ = Вопрос("Файл """ + Квитанция.ИмяФайла + """ существует. Заменить?", РежимДиалогаВопрос.ДаНетОтмена);
			Если Ответ = КодВозвратаДиалога.Отмена Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
		Если Ответ <> КодВозвратаДиалога.Нет Тогда
			Попытка
				Квитанция.Данные.Получить().Записать(ИмяФайлаВложения);
			Исключение
				Сообщить("Не удалось выгрузить на диск файл """ + Квитанция.ИмяФайла + """!" + Символы.ПС + ОписаниеОшибки() ,СтатусСообщения.Важное);
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
	ПодписиНалоговогоОргана = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(Основание, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ЭлектронноЦифроваяПодпись);
	Если ПодписиНалоговогоОргана.Количество() = 0 Тогда
		Предупреждение("Не найдена ЭЦП налогового органа на протоколе входного контроля!");
		Возврат;
	Иначе
		ПодписьНалоговогоОргана = ПодписиНалоговогоОргана[0];
		ИмяФайлаВложения = КаталогСохранения + ПодписьНалоговогоОргана.ИмяФайла;
		ФайлВложения = Новый Файл(ИмяФайлаВложения);
		Ответ = КодВозвратаДиалога.Да;
		Если ФайлВложения.Существует() Тогда
			Ответ = Вопрос("Файл """ + ПодписьНалоговогоОргана.ИмяФайла + """ существует. Заменить?", РежимДиалогаВопрос.ДаНетОтмена);
			Если Ответ = КодВозвратаДиалога.Отмена Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
		Если Ответ <> КодВозвратаДиалога.Нет Тогда
			Попытка
				ПодписьНалоговогоОргана.Данные.Получить().Записать(ИмяФайлаВложения);
			Исключение
				Сообщить("Не удалось выгрузить на диск файл """ + ПодписьНалоговогоОргана.ИмяФайла + """!" + Символы.ПС + ОписаниеОшибки() ,СтатусСообщения.Важное);
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
	ПодписиНалогоплательщика = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(Ссылка, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ЭлектронноЦифроваяПодпись);
	Если ПодписиНалогоплательщика.Количество() = 0 Тогда
		Предупреждение("Не найдена ЭЦП налогоплательщика на протоколе!");
		Возврат;
	Иначе
		ПодписьНалогоплательщика = ПодписиНалогоплательщика[0];
		ИмяФайлаВложения = КаталогСохранения + ПодписьНалогоплательщика.ИмяФайла;
		ФайлВложения = Новый Файл(ИмяФайлаВложения);
		Ответ = КодВозвратаДиалога.Да;
		Если ФайлВложения.Существует() Тогда
			Ответ = Вопрос("Файл """ + ПодписьНалогоплательщика.ИмяФайла + """ существует. Заменить?", РежимДиалогаВопрос.ДаНетОтмена);
			Если Ответ = КодВозвратаДиалога.Отмена Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
		Если Ответ <> КодВозвратаДиалога.Нет Тогда
			Попытка
				ПодписьНалогоплательщика.Данные.Получить().Записать(ИмяФайлаВложения);
			Исключение
				Сообщить("Не удалось выгрузить на диск файл """ + ПодписьНалогоплательщика.ИмяФайла + """!" + Символы.ПС + ОписаниеОшибки() ,СтатусСообщения.Важное);
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
	СертификатыНалогоплательщика = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(Ссылка, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Сертификат);
	Если СертификатыНалогоплательщика.Количество() = 0 Тогда
		Предупреждение("Не найден сертификат, связанный с ЭЦП налогоплательщика на протоколе!");
		Возврат;
	Иначе
		СертификатНалогоплательщика = СертификатыНалогоплательщика[0];
		ИмяФайлаВложения = КаталогСохранения + СертификатНалогоплательщика.ИмяФайла;
		ФайлВложения = Новый Файл(ИмяФайлаВложения);
		Ответ = КодВозвратаДиалога.Да;
		Если ФайлВложения.Существует() Тогда
			Ответ = Вопрос("Файл """ + СертификатНалогоплательщика.ИмяФайла + """ существует. Заменить?", РежимДиалогаВопрос.ДаНетОтмена);
			Если Ответ = КодВозвратаДиалога.Отмена Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
		Если Ответ <> КодВозвратаДиалога.Нет Тогда
			Попытка
				СертификатНалогоплательщика.Данные.Получить().Записать(ИмяФайлаВложения);
			Исключение
				Сообщить("Не удалось выгрузить на диск файл """ + СертификатНалогоплательщика.ИмяФайла + """!" + Символы.ПС + ОписаниеОшибки() ,СтатусСообщения.Важное);
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
	Предупреждение("Сохранение завершено.");
	
КонецПроцедуры

Процедура НадписьРедактироватьТекстВыгрузкиНажатие(Элемент)
	
	Если ЭтоНовый() Тогда
		Предупреждение("Сообщение не записано!");
		Возврат;
	КонецЕсли;
	
	Если Статус = Перечисления.СтатусыПисем.Отправленное Тогда
		Предупреждение("Редактирование возможно только для неотправленных сообщений!");
		Возврат;
	КонецЕсли;
	
	Ответ = КонтекстЭДО.ВопросПредупреждение("ИЗМЕНЯЙТЕ ФАЙЛ ОТЧЕТНОСТИ ТОЛЬКО ЕСЛИ ВЫ УВЕРЕНЫ В СВОИХ ДЕЙСТВИЯХ И РУКОВОДСТВУЕТЕСЬ ДОКУМЕНТОМ, ОПРЕДЕЛЯЮЩИМ ФОРМАТ ПРЕДСТАВЛЕНИЯ!
	|
	|НЕСООТВЕТСТВИЕ ФАЙЛА ВЫГРУЗКИ ФОРМАТУ ПРЕДСТАВЛЕНИЯ ИЛИ
	|НЕСООТВЕТСТВИЕ ДАННЫХ В ОТЧЕТЕ ДАННЫМ В ФАЙЛЕ ВЫГРУЗКИ МОГУТ ПРИВЕСТИ К НЕПРЕДСКАЗУЕМЫМ ПОСЛЕДСТВИЯМ!
	|
	|ВЫ УВЕРЕНЫ, ЧТО ХОТИТЕ ПРОДОЛЖИТЬ?", 
	"Нет, я не уверен(а) в своих действиях.",
	"Да, я уверен(а) в необходимости редактирования и руководствуюсь форматом представления.");
	
	Если НЕ Ответ Тогда
		Возврат;
	КонецЕсли;
	
	// предусмотреть тип сожержимого для случая 2-НДФЛ!!!
	ТекстыВыгрузки = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(ЭтотОбъект, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ФайлОтчетности);
	Если ТекстыВыгрузки.Количество() = 0 Тогда
		Предупреждение("В содержимом текущего сообщения отсутствует файл отчетности!");
		Возврат;
	КонецЕсли;
	ТекстВыгрузки = ТекстыВыгрузки[0];
	КодировкаТекстаВыгрузки = ?(нрег(Прав(ТекстВыгрузки.ИмяФайла, 4)) = ".xml", КодировкаТекста.ANSI, КодировкаТекста.OEM);
	ВремФайл = ПолучитьИмяВременногоФайла();
	ТекстВыгрузки.Данные.Получить().Записать(ВремФайл);
	ОбъектЧтениеТекста = Новый ЧтениеТекста(ВремФайл, КодировкаТекстаВыгрузки);
	Текст = ОбъектЧтениеТекста.Прочитать();
	ОбъектЧтениеТекста.Закрыть();
	УдалитьФайлы(ВремФайл);
	
	ФормаРедактирования = КонтекстЭДО.ПолучитьФорму("РедактированиеФайлаВыгрузки");
	ФормаРедактирования.Текст = Текст;
	ФормаРедактирования.ИмяФайла = ТекстВыгрузки.ИмяФайла;
	Если ФормаРедактирования.ОткрытьМодально() Тогда
		Ответ = Вопрос("Заменить файл отчетности?
					   |Действие невозможно будет отменить!", РежимДиалогаВопрос.ДаНет);
		Если Ответ <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;
		ВремФайл = ПолучитьИмяВременногоФайла();
		ОбъектЗаписьТекста = Новый ЗаписьТекста(ВремФайл, КодировкаТекстаВыгрузки);
		ОбъектЗаписьТекста.Записать(ФормаРедактирования.Текст);
		ОбъектЗаписьТекста.Закрыть();
		// предусмотреть тип сожержимого для случая 2-НДФЛ!!!
		КонтекстЭДО.ДобавитьСодержимоеТранспортногоКонтейнера(Ссылка, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ФайлОтчетности, ВремФайл, ФормаРедактирования.ИмяФайла);
		ОбновитьДанные();
	КонецЕсли;
	
КонецПроцедуры

Процедура НадписьФайлЗапросаСтр13Нажатие(Элемент)
	
	ФайлыВыгрузки = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(ЭтотОбъект, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ЗапросИОН);
	Для Каждого ФайлВыгрузки Из ФайлыВыгрузки Цикл
		ВременныйФайл = ПолучитьИмяВременногоФайла();
		ФайлВыгрузки.Данные.Получить().Записать(ВременныйФайл);
		Текст = Новый ТекстовыйДокумент;
		Текст.Прочитать(ВременныйФайл, КодировкаТекста.ANSI);
		Текст.ТолькоПросмотр = Истина;
		Текст.Показать(ФайлВыгрузки.ИмяФайла, ФайлВыгрузки.ИмяФайла);
		УдалитьФайлы(ВременныйФайл);
	КонецЦикла;
	
КонецПроцедуры

Процедура НадписьФайлОписанияСтр13Нажатие(Элемент)
	
	ПоказатьФайлИнформации();
	
КонецПроцедуры

Процедура НадписьПодписиОтветственныхЛицСтр13Нажатие(Элемент)
	
	ОткрытьПодписи(, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ЗапросИОН, Истина);
	
КонецПроцедуры

Процедура НадписьРедактироватьЗапросНажатие(Элемент)
	
	Если ЭтоНовый() Тогда
		Предупреждение("Сообщение не записано!");
		Возврат;
	КонецЕсли;
	
	Если Статус = Перечисления.СтатусыПисем.Отправленное Тогда
		Предупреждение("Редактирование возможно только для неотправленных сообщений!");
		Возврат;
	КонецЕсли;
	
	Ответ = КонтекстЭДО.ВопросПредупреждение("ИЗМЕНЯЙТЕ ФАЙЛ ЗАПРОСА ТОЛЬКО ЕСЛИ ВЫ УВЕРЕНЫ В СВОИХ ДЕЙСТВИЯХ И РУКОВОДСТВУЕТЕСЬ ДОКУМЕНТОМ, ОПРЕДЕЛЯЮЩИМ ФОРМАТ ПРЕДСТАВЛЕНИЯ!
	|НЕСООТВЕТСТВИЕ ФАЙЛА ЗАПРОСА ФОРМАТУ ПРЕДСТАВЛЕНИЯ МОЖЕТ ПРИВЕСТИ К НЕПРЕДСКАЗУЕМЫМ ПОСЛЕДСТВИЯМ!
	|
	|ВЫ УВЕРЕНЫ, ЧТО ХОТИТЕ ПРОДОЛЖИТЬ?",
	"Нет, я не уверен(а) в своих действиях.",
	"Да, я уверен(а) в необходимости редактирования и руководствуюсь форматом представления.");
	
	Если НЕ Ответ Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросыНаИнформационноеОбслуживание = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(ЭтотОбъект, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ЗапросИОН);
	Если ЗапросыНаИнформационноеОбслуживание.Количество() = 0 Тогда
		Предупреждение("В содержимом текущего сообщения отсутствует файл запроса на информационное обслуживание!");
		Возврат;
	КонецЕсли;
	ЗапросНаИнформационноеОбслуживание = ЗапросыНаИнформационноеОбслуживание[0];
	ВремФайл = ПолучитьИмяВременногоФайла();
	ЗапросНаИнформационноеОбслуживание.Данные.Получить().Записать(ВремФайл);
	ОбъектЧтениеТекста = Новый ЧтениеТекста(ВремФайл, КодировкаТекста.ANSI);
	Текст = ОбъектЧтениеТекста.Прочитать();
	ОбъектЧтениеТекста.Закрыть();
	УдалитьФайлы(ВремФайл);
	
	ФормаРедактирования = КонтекстЭДО.ПолучитьФорму("РедактированиеФайлаВыгрузки");
	ФормаРедактирования.Текст = Текст;
	ФормаРедактирования.ИмяФайла = ЗапросНаИнформационноеОбслуживание.ИмяФайла;
	Если ФормаРедактирования.ОткрытьМодально() Тогда
		Ответ = Вопрос("Заменить файл запроса?
					   |Действие невозможно будет отменить!", РежимДиалогаВопрос.ДаНет);
		Если Ответ <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;
		ВремФайл = ПолучитьИмяВременногоФайла();
		ОбъектЗаписьТекста = Новый ЗаписьТекста(ВремФайл, КодировкаТекста.ANSI);
		ОбъектЗаписьТекста.Записать(ФормаРедактирования.Текст);
		ОбъектЗаписьТекста.Закрыть();
		КонтекстЭДО.ДобавитьСодержимоеТранспортногоКонтейнера(Ссылка, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ЗапросИОН, ВремФайл, ФормаРедактирования.ИмяФайла);
		ОбновитьДанные();
	КонецЕсли;
	
КонецПроцедуры

Процедура НадписьКвитанцияОПриемеСтр14Нажатие(Элемент)
	
	ПоказатьКвитанцию();
	
КонецПроцедуры

Процедура НадписьПодписиСтр14Нажатие(Элемент)
	
	ОткрытьПодписи(, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПодтверждениеОбОтправке, , Истина);
	
КонецПроцедуры

Процедура НадписьПроверитьСтр14Нажатие(Элемент)
	
	КонтекстЭДО.ПроверитьПодписьНалоговогоОргана(Ссылка, СоответствиеНадписиПроверитьТипуПроверки[Элемент]);
	
КонецПроцедуры

Процедура НадписьСостояниеПодтвержденияНаПодтверждениеОтправкиЗапросаНажатие(Элемент)
	
	Сообщение = КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ПереподписанноеПодтверждениеОтправкиЗапросаИОН, Ссылка);
	Если Сообщение = Документы.ТранспортноеСообщение.ПустаяСсылка() Тогда
		Подтверждение = КонтекстЭДО.ВвестиПодтверждение(ЦиклОбмена, Ссылка);
		Если Подтверждение <> Неопределено Тогда
			Подтверждение.ПолучитьФорму().Открыть();
			ОбновитьДанные();
		КонецЕсли;
	Иначе
		Сообщение.ПолучитьФорму().Открыть();
	КонецЕсли;
	
КонецПроцедуры

Процедура НадписьПротоколПроверкиСтр15Нажатие(Элемент)
	
	ФайлыПротоколов = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(ЭтотОбъект, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПротоколВходногоКонтроля);
	Для Каждого ФайлПротокола Из ФайлыПротоколов Цикл
		ВременныйФайл = ПолучитьИмяВременногоФайла();
		ФайлПротокола.Данные.Получить().Записать(ВременныйФайл);
		Текст = Новый ТекстовыйДокумент;
		Текст.Прочитать(ВременныйФайл);
		Текст.ТолькоПросмотр = Истина;
		Текст.Показать(ФайлПротокола.ИмяФайла, ФайлПротокола.ИмяФайла);
		УдалитьФайлы(ВременныйФайл);
	КонецЦикла;
	
КонецПроцедуры

Процедура НадписьПодписиСтр15Нажатие(Элемент)
	
	ОткрытьПодписи(, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПротоколВходногоКонтроля, , Истина);
	
КонецПроцедуры

Процедура НадписьФайлВыгрузкиСтр16Нажатие(Элемент)
	
	ФайлыВыгрузки = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(ЭтотОбъект, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ЗапросИОН);
	Для Каждого ФайлВыгрузки Из ФайлыВыгрузки Цикл
		ВременныйФайл = ПолучитьИмяВременногоФайла();
		ФайлВыгрузки.Данные.Получить().Записать(ВременныйФайл);
		Текст = Новый ТекстовыйДокумент;
		Текст.Прочитать(ВременныйФайл, КодировкаТекста.ANSI);
		Текст.ТолькоПросмотр = Истина;
		Текст.Показать(ФайлВыгрузки.ИмяФайла, ФайлВыгрузки.ИмяФайла);
		УдалитьФайлы(ВременныйФайл);
	КонецЦикла;
	
КонецПроцедуры

Процедура НадписьФайлОписанияСтр16Нажатие(Элемент)
	
	ПоказатьФайлИнформации();
	
КонецПроцедуры

Процедура НадписьПодписиОтветственныхЛицСтр16Нажатие(Элемент)
	
	ОткрытьПодписи(, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ЗапросИОН, Истина);
	
КонецПроцедуры

Процедура НадписьПодписьНалоговогоОрганаСтр16Нажатие(Элемент)
	
	ОткрытьПодписи(, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ЗапросИОН, , Истина);
	
КонецПроцедуры

Процедура НадписьПроверитьСтр16Нажатие(Элемент)
	
	КонтекстЭДО.ПроверитьПодписьНалоговогоОргана(Ссылка, СоответствиеНадписиПроверитьТипуПроверки[Элемент]);
	
КонецПроцедуры

Процедура НадписьКвитанцияОПриемеСтр17Нажатие(Элемент)
	
	ПоказатьКвитанцию();
	
КонецПроцедуры

Процедура НадписьФайлОписанияСтр17Нажатие(Элемент)
	
	ПоказатьФайлИнформации();
	
КонецПроцедуры

Процедура НадписьПодписиСтр17Нажатие(Элемент)
	
	ОткрытьПодписи(, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПодтверждениеОбОтправке, Истина);
	
КонецПроцедуры

Процедура НадписьСюда1Стр17Нажатие(Элемент)
	
	ОткрытьПодписи(Основание, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПодтверждениеОбОтправке, , Истина);
	
КонецПроцедуры

Процедура НадписьСюда2Стр17Нажатие(Элемент)
	
	//СообщениеОснование = КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОтправкиЗапросаИОН);
	Подтверждения = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(Основание, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПодтверждениеОбОтправке);
	Если Подтверждения.Количество() = 0 Тогда
		Предупреждение("Не найдено исходное подтверждение от сервера документооборота!");
		Возврат;
	КонецЕсли;
	
	ВремФайл = ПолучитьИмяВременногоФайла();
	Подтверждения[0].Данные.Получить().Записать(ВремФайл);
	Текст = Новый ТекстовыйДокумент;
	Текст.Прочитать(ВремФайл);
	УдалитьФайлы(ВремФайл);
	ТекстКвитанции = Текст.ПолучитьТекст();
	
	ДвДанные = КонтекстЭДО.СоздатьОбъектДляРаботыСДвоичнымиДанными();
	Если ДвДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПодписиНалогоплательщика = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(Ссылка, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ЭлектронноЦифроваяПодпись);
	Если ПодписиНалогоплательщика.Количество() = 0 Тогда
		Предупреждение("Не найдена ЭЦП налогоплательщика на квитанции об отправке!");
	Иначе
		ПодписьНалогоплательщика = ПодписиНалогоплательщика[0];
		ВремФайл = ПолучитьИмяВременногоФайла();
		ПодписьНалогоплательщика.Данные.Получить().Записать(ВремФайл);
		ДвДанные.Прочитать (ВремФайл);
		Строка64 = ДвДанные.ПолучитьСтрокуBase64();
		УдалитьФайлы(ВремФайл);
		
		ТекстКвитанции = ТекстКвитанции + Символы.ПС + Символы.ПС + Символы.ПС + "Подпись налогоплательщика:" + Символы.ПС + Символы.ПС + "-----BEGIN SIGN-----" + Символы.ПС;
		Пока НЕ ПустаяСтрока(Строка64) Цикл
			ТекстКвитанции = ТекстКвитанции + Лев(Строка64, 72) + Символы.ПС;
			Строка64 = Сред(Строка64, 73);
		КонецЦикла;
		ТекстКвитанции = ТекстКвитанции + "-----END SIGN-----";
	КонецЕсли;
	
	ТаблДок = Новый ТабличныйДокумент;
	ТаблДок.Область(1, 1, 1, 1).ШиринаКолонки = 100;
	ТаблДок.Область(1, 1, 1, 1).РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Переносить;
	ТаблДок.Область(1, 1, 1, 1).Текст = ТекстКвитанции;
	ТаблДок.Область(1, 1, 1, 1).Шрифт = Новый Шрифт("Courier", 10);
	ТаблДок.Показать("Квитанция об отправке, заверенная ЭЦП сервера документооборота и налогоплательщика", "Квитанция об отправке.txt");
	
КонецПроцедуры

Процедура НадписьСюда3Стр17Нажатие(Элемент)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	Если НЕ Диалог.Выбрать() Тогда
		Возврат;
	КонецЕсли;
	КаталогСохранения = ?(Прав(Диалог.Каталог, 1) = "\", Диалог.Каталог, Диалог.Каталог + "\");
	
	//СообщениеОснование = КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОтправкиЗапросаИОН);
	Квитанции = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(Основание, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПодтверждениеОбОтправке);
	Если Квитанции.Количество() = 0 Тогда
		Предупреждение("Не найдена исходная квитанция о приеме!");
		Возврат;
	Иначе
		Квитанция = Квитанции[0];
		ИмяФайлаВложения = КаталогСохранения + Квитанция.ИмяФайла;
		ФайлВложения = Новый Файл(ИмяФайлаВложения);
		Ответ = КодВозвратаДиалога.Да;
		Если ФайлВложения.Существует() Тогда
			Ответ = Вопрос("Файл """ + Квитанция.ИмяФайла + """ существует. Заменить?", РежимДиалогаВопрос.ДаНетОтмена);
			Если Ответ = КодВозвратаДиалога.Отмена Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
		Если Ответ <> КодВозвратаДиалога.Нет Тогда
			Попытка
				Квитанция.Данные.Получить().Записать(ИмяФайлаВложения);
			Исключение
				Сообщить("Не удалось выгрузить на диск файл """ + Квитанция.ИмяФайла + """!" + Символы.ПС + ОписаниеОшибки() ,СтатусСообщения.Важное);
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
	ПодписиНалоговогоОргана = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(Основание, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ЭлектронноЦифроваяПодпись);
	Если ПодписиНалоговогоОргана.Количество() = 0 Тогда
		Предупреждение("Не найдена ЭЦП налогового органа на протоколе входного контроля!");
		Возврат;
	Иначе
		ПодписьНалоговогоОргана = ПодписиНалоговогоОргана[0];
		ИмяФайлаВложения = КаталогСохранения + ПодписьНалоговогоОргана.ИмяФайла;
		ФайлВложения = Новый Файл(ИмяФайлаВложения);
		Ответ = КодВозвратаДиалога.Да;
		Если ФайлВложения.Существует() Тогда
			Ответ = Вопрос("Файл """ + ПодписьНалоговогоОргана.ИмяФайла + """ существует. Заменить?", РежимДиалогаВопрос.ДаНетОтмена);
			Если Ответ = КодВозвратаДиалога.Отмена Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
		Если Ответ <> КодВозвратаДиалога.Нет Тогда
			Попытка
				ПодписьНалоговогоОргана.Данные.Получить().Записать(ИмяФайлаВложения);
			Исключение
				Сообщить("Не удалось выгрузить на диск файл """ + ПодписьНалоговогоОргана.ИмяФайла + """!" + Символы.ПС + ОписаниеОшибки() ,СтатусСообщения.Важное);
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
	ПодписиНалогоплательщика = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(Ссылка, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ЭлектронноЦифроваяПодпись);
	Если ПодписиНалогоплательщика.Количество() = 0 Тогда
		Предупреждение("Не найдена ЭЦП налогоплательщика на протоколе!");
		Возврат;
	Иначе
		ПодписьНалогоплательщика = ПодписиНалогоплательщика[0];
		ИмяФайлаВложения = КаталогСохранения + ПодписьНалогоплательщика.ИмяФайла;
		ФайлВложения = Новый Файл(ИмяФайлаВложения);
		Ответ = КодВозвратаДиалога.Да;
		Если ФайлВложения.Существует() Тогда
			Ответ = Вопрос("Файл """ + ПодписьНалогоплательщика.ИмяФайла + """ существует. Заменить?", РежимДиалогаВопрос.ДаНетОтмена);
			Если Ответ = КодВозвратаДиалога.Отмена Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
		Если Ответ <> КодВозвратаДиалога.Нет Тогда
			Попытка
				ПодписьНалогоплательщика.Данные.Получить().Записать(ИмяФайлаВложения);
			Исключение
				Сообщить("Не удалось выгрузить на диск файл """ + ПодписьНалогоплательщика.ИмяФайла + """!" + Символы.ПС + ОписаниеОшибки() ,СтатусСообщения.Важное);
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
	СертификатыНалогоплательщика = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(Ссылка, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Сертификат);
	Если СертификатыНалогоплательщика.Количество() = 0 Тогда
		Предупреждение("Не найден сертификат, связанный с ЭЦП налогоплательщика на протоколе!");
		Возврат;
	Иначе
		СертификатНалогоплательщика = СертификатыНалогоплательщика[0];
		ИмяФайлаВложения = КаталогСохранения + СертификатНалогоплательщика.ИмяФайла;
		ФайлВложения = Новый Файл(ИмяФайлаВложения);
		Ответ = КодВозвратаДиалога.Да;
		Если ФайлВложения.Существует() Тогда
			Ответ = Вопрос("Файл """ + СертификатНалогоплательщика.ИмяФайла + """ существует. Заменить?", РежимДиалогаВопрос.ДаНетОтмена);
			Если Ответ = КодВозвратаДиалога.Отмена Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
		Если Ответ <> КодВозвратаДиалога.Нет Тогда
			Попытка
				СертификатНалогоплательщика.Данные.Получить().Записать(ИмяФайлаВложения);
			Исключение
				Сообщить("Не удалось выгрузить на диск файл """ + СертификатНалогоплательщика.ИмяФайла + """!" + Символы.ПС + ОписаниеОшибки() ,СтатусСообщения.Важное);
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
	Предупреждение("Сохранение завершено.");
	
КонецПроцедуры

Процедура НадписьПротоколВходногоКонтроляСтр18Нажатие(Элемент)
	
	ФайлыПротоколов = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(ЭтотОбъект, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПротоколВходногоКонтроля);
	Для Каждого ФайлПротокола Из ФайлыПротоколов Цикл
		ВременныйФайл = ПолучитьИмяВременногоФайла();
		ФайлПротокола.Данные.Получить().Записать(ВременныйФайл);
		Текст = Новый ТекстовыйДокумент;
		Текст.Прочитать(ВременныйФайл);
		Текст.ТолькоПросмотр = Истина;
		Текст.Показать(ФайлПротокола.ИмяФайла, ФайлПротокола.ИмяФайла);
		УдалитьФайлы(ВременныйФайл);
	КонецЦикла;
	
КонецПроцедуры

Процедура НадписьФайлОписанияСтр18Нажатие(Элемент)
	
	ПоказатьФайлИнформации();
	
КонецПроцедуры

Процедура НадписьПодписиСтр18Нажатие(Элемент)
	
	ОткрытьПодписи(, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПротоколВходногоКонтроля, Истина);
	
КонецПроцедуры

Процедура НадписьСюда1Стр18Нажатие(Элемент)
	
	ОткрытьПодписи(Основание, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПротоколВходногоКонтроля, , Истина);
	
КонецПроцедуры

Процедура НадписьСюда2Стр18Нажатие(Элемент)
	
	//СообщениеОснование = КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляЗапросаИОН);
	Протоколы = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(Основание, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПротоколВходногоКонтроля);
	Если Протоколы.Количество() = 0 Тогда
		Предупреждение("Не найден исходный протокол!");
		Возврат;
	КонецЕсли;
	
	ВремФайл = ПолучитьИмяВременногоФайла();
	Протоколы[0].Данные.Получить().Записать(ВремФайл);
	Текст = Новый ТекстовыйДокумент;
	Текст.Прочитать(ВремФайл);
	УдалитьФайлы(ВремФайл);
	ТекстПротокола = Текст.ПолучитьТекст();
	
	ДвДанные = КонтекстЭДО.СоздатьОбъектДляРаботыСДвоичнымиДанными();
	Если ДвДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПодписиНалоговогоОргана = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(Основание, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ЭлектронноЦифроваяПодпись);
	Если ПодписиНалоговогоОргана.Количество() = 0 Тогда
		Предупреждение("Не найдена ЭЦП налогового органа на протоколе входного контроля!");
	Иначе
		ПодписьНалоговогоОргана = ПодписиНалоговогоОргана[0];
		ВремФайл = ПолучитьИмяВременногоФайла();
		ПодписьНалоговогоОргана.Данные.Получить().Записать(ВремФайл);
		ДвДанные.Прочитать (ВремФайл);
		Строка64 = ДвДанные.ПолучитьСтрокуBase64();
		УдалитьФайлы(ВремФайл);
		
		ТекстПротокола = ТекстПротокола + Символы.ПС + Символы.ПС + "Подпись налогового органа:" + Символы.ПС + Символы.ПС + "-----BEGIN SIGN-----" + Символы.ПС;
		Пока НЕ ПустаяСтрока(Строка64) Цикл
			ТекстПротокола = ТекстПротокола + Лев(Строка64, 72) + Символы.ПС;
			Строка64 = Сред(Строка64, 73);
		КонецЦикла;
		ТекстПротокола = ТекстПротокола + "-----END SIGN-----";
	КонецЕсли;
	
	ПодписиНалогоплательщика = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(Ссылка, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ЭлектронноЦифроваяПодпись);
	Если ПодписиНалогоплательщика.Количество() = 0 Тогда
		Предупреждение("Не найдена ЭЦП налогоплательщика на протоколе!");
	Иначе
		ПодписьНалогоплательщика = ПодписиНалогоплательщика[0];
		ВремФайл = ПолучитьИмяВременногоФайла();
		ПодписьНалогоплательщика.Данные.Получить().Записать(ВремФайл);
		ДвДанные.Прочитать (ВремФайл);
		Строка64 = ДвДанные.ПолучитьСтрокуBase64();
		УдалитьФайлы(ВремФайл);
		
		ТекстПротокола = ТекстПротокола + Символы.ПС + Символы.ПС + Символы.ПС + "Подпись налогоплательщика:" + Символы.ПС + Символы.ПС + "-----BEGIN SIGN-----" + Символы.ПС;
		Пока НЕ ПустаяСтрока(Строка64) Цикл
			ТекстПротокола = ТекстПротокола + Лев(Строка64, 72) + Символы.ПС;
			Строка64 = Сред(Строка64, 73);
		КонецЦикла;
		ТекстПротокола = ТекстПротокола + "-----END SIGN-----";
	КонецЕсли;
	
	ТаблДок = Новый ТабличныйДокумент;
	ТаблДок.Область(1, 1, 1, 1).ШиринаКолонки = 100;
	ТаблДок.Область(1, 1, 1, 1).РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Переносить;
	ТаблДок.Область(1, 1, 1, 1).Текст = ТекстПротокола;
	ТаблДок.Область(1, 1, 1, 1).Шрифт = Новый Шрифт("Courier", 10);
	ТаблДок.Показать("Протокол входного контроля запроса на информационное обслуживание, заверенный ЭЦП налогового органа и налогоплательщика", "Протокол.txt");
	
КонецПроцедуры

Процедура НадписьСюда3Стр18Нажатие(Элемент)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	Если НЕ Диалог.Выбрать() Тогда
		Возврат;
	КонецЕсли;
	КаталогСохранения = ?(Прав(Диалог.Каталог, 1) = "\", Диалог.Каталог, Диалог.Каталог + "\");
	
	//СообщениеОснование = КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляЗапросаИОН);
	Протоколы = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(Основание, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПротоколВходногоКонтроля);
	Если Протоколы.Количество() = 0 Тогда
		Предупреждение("Не найден исходный протокол!");
		Возврат;
	Иначе
		Протокол = Протоколы[0];
		ИмяФайлаВложения = КаталогСохранения + Протокол.ИмяФайла;
		ФайлВложения = Новый Файл(ИмяФайлаВложения);
		Ответ = КодВозвратаДиалога.Да;
		Если ФайлВложения.Существует() Тогда
			Ответ = Вопрос("Файл """ + Протокол.ИмяФайла + """ существует. Заменить?", РежимДиалогаВопрос.ДаНетОтмена);
			Если Ответ = КодВозвратаДиалога.Отмена Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
		Если Ответ <> КодВозвратаДиалога.Нет Тогда
			Попытка
				Протокол.Данные.Получить().Записать(ИмяФайлаВложения);
			Исключение
				Сообщить("Не удалось выгрузить на диск файл """ + Протокол.ИмяФайла + """!" + Символы.ПС + ОписаниеОшибки() ,СтатусСообщения.Важное);
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
	ПодписиНалоговогоОргана = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(Основание, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ЭлектронноЦифроваяПодпись);
	Если ПодписиНалоговогоОргана.Количество() = 0 Тогда
		Предупреждение("Не найдена ЭЦП налогового органа на протоколе входного контроля!");
		Возврат;
	Иначе
		ПодписьНалоговогоОргана = ПодписиНалоговогоОргана[0];
		ИмяФайлаВложения = КаталогСохранения + ПодписьНалоговогоОргана.ИмяФайла;
		ФайлВложения = Новый Файл(ИмяФайлаВложения);
		Ответ = КодВозвратаДиалога.Да;
		Если ФайлВложения.Существует() Тогда
			Ответ = Вопрос("Файл """ + ПодписьНалоговогоОргана.ИмяФайла + """ существует. Заменить?", РежимДиалогаВопрос.ДаНетОтмена);
			Если Ответ = КодВозвратаДиалога.Отмена Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
		Если Ответ <> КодВозвратаДиалога.Нет Тогда
			Попытка
				ПодписьНалоговогоОргана.Данные.Получить().Записать(ИмяФайлаВложения);
			Исключение
				Сообщить("Не удалось выгрузить на диск файл """ + ПодписьНалоговогоОргана.ИмяФайла + """!" + Символы.ПС + ОписаниеОшибки() ,СтатусСообщения.Важное);
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
	ПодписиНалогоплательщика = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(Ссылка, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ЭлектронноЦифроваяПодпись);
	Если ПодписиНалогоплательщика.Количество() = 0 Тогда
		Предупреждение("Не найдена ЭЦП налогоплательщика на протоколе!");
		Возврат;
	Иначе
		ПодписьНалогоплательщика = ПодписиНалогоплательщика[0];
		ИмяФайлаВложения = КаталогСохранения + ПодписьНалогоплательщика.ИмяФайла;
		ФайлВложения = Новый Файл(ИмяФайлаВложения);
		Ответ = КодВозвратаДиалога.Да;
		Если ФайлВложения.Существует() Тогда
			Ответ = Вопрос("Файл """ + ПодписьНалогоплательщика.ИмяФайла + """ существует. Заменить?", РежимДиалогаВопрос.ДаНетОтмена);
			Если Ответ = КодВозвратаДиалога.Отмена Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
		Если Ответ <> КодВозвратаДиалога.Нет Тогда
			Попытка
				ПодписьНалогоплательщика.Данные.Получить().Записать(ИмяФайлаВложения);
			Исключение
				Сообщить("Не удалось выгрузить на диск файл """ + ПодписьНалогоплательщика.ИмяФайла + """!" + Символы.ПС + ОписаниеОшибки() ,СтатусСообщения.Важное);
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
	СертификатыНалогоплательщика = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(Ссылка, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Сертификат);
	Если СертификатыНалогоплательщика.Количество() = 0 Тогда
		Предупреждение("Не найден сертификат, связанный с ЭЦП налогоплательщика на протоколе!");
		Возврат;
	Иначе
		СертификатНалогоплательщика = СертификатыНалогоплательщика[0];
		ИмяФайлаВложения = КаталогСохранения + СертификатНалогоплательщика.ИмяФайла;
		ФайлВложения = Новый Файл(ИмяФайлаВложения);
		Ответ = КодВозвратаДиалога.Да;
		Если ФайлВложения.Существует() Тогда
			Ответ = Вопрос("Файл """ + СертификатНалогоплательщика.ИмяФайла + """ существует. Заменить?", РежимДиалогаВопрос.ДаНетОтмена);
			Если Ответ = КодВозвратаДиалога.Отмена Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
		Если Ответ <> КодВозвратаДиалога.Нет Тогда
			Попытка
				СертификатНалогоплательщика.Данные.Получить().Записать(ИмяФайлаВложения);
			Исключение
				Сообщить("Не удалось выгрузить на диск файл """ + СертификатНалогоплательщика.ИмяФайла + """!" + Символы.ПС + ОписаниеОшибки() ,СтатусСообщения.Важное);
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
	Предупреждение("Сохранение завершено.");
	
КонецПроцедуры

Процедура НадписьПроверитьСтр15Нажатие(Элемент)
	
	КонтекстЭДО.ПроверитьПодписьНалоговогоОргана(Ссылка, СоответствиеНадписиПроверитьТипуПроверки[Элемент]);
	
КонецПроцедуры

Процедура НадписьСостояниеПодтвержденияНаПротоколПроверки15Нажатие(Элемент)
	
	Сообщение = КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ПереподписанныйПротоколВходногоКонтроляЗапросаИОН, Ссылка);
	Если Сообщение = Документы.ТранспортноеСообщение.ПустаяСсылка() Тогда
		Подтверждение = КонтекстЭДО.ВвестиПодтверждение(ЦиклОбмена, Ссылка);
		Если Подтверждение <> Неопределено Тогда
			Подтверждение.ПолучитьФорму().Открыть();
			ОбновитьДанные();
		КонецЕсли;
	Иначе
		Сообщение.ПолучитьФорму().Открыть();
	КонецЕсли;
	
КонецПроцедуры

Процедура КнопкаРасшифроватьНажатие(Элемент)
	
	Если Вопрос("Распаковать сообщение?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
		Если КонтекстЭДО.РасшифроватьТранспортноеСообщение(ЭтотОбъект) Тогда
			ОбновитьДанные();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура НадписьОписаниеНеформализованногоДокументаСтр8Нажатие(Элемент)
	
	ОписанияНФД = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(ЭтотОбъект, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ОписаниеНеформализованногоДокумента);
	Для Каждого ОписаниеНФД Из ОписанияНФД Цикл
		ВременныйФайл = ПолучитьИмяВременногоФайла();
		ОписаниеНФД.Данные.Получить().Записать(ВременныйФайл);
		Текст = Новый ТекстовыйДокумент;
		Текст.Прочитать(ВременныйФайл);
		Текст.ТолькоПросмотр = Истина;
		Текст.Показать(ОписаниеНФД.ИмяФайла, ОписаниеНФД.ИмяФайла);
		УдалитьФайлы(ВременныйФайл);
	КонецЦикла;
	
КонецПроцедуры

Процедура НадписьПодписьНалоговогоОрганаПодНеформализованнымДокументомСтр7Нажатие(Элемент)
	
	ОткрытьПодписи(, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.НеформализованныйДокумент, , Истина);
	
КонецПроцедуры

Процедура НадписьПодписьНалогоплательщикаПодНеформализованнымДокументомСтр8Нажатие(Элемент)
	
	// ищем документ-основание в сообщении-основании
	ДокументыИзОснования = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(Основание, Ложь, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.НеформализованныйДокумент);
	КоличествоДокументовИзОснования = ДокументыИзОснования.Количество();
	Если КоличествоДокументовИзОснования = 0 Тогда
		Предупреждение("Не удалось обнаружить документ для просмотра подписей под ним!");
		Возврат;
	ИначеЕсли КоличествоДокументовИзОснования = 1 Тогда
		ИмяДокументаОснования = ДокументыИзОснования[0].ИмяФайла;
	Иначе
		
		СписокДокументовОснований = Новый СписокЗначений;
		Для Каждого Стр Из ДокументыИзОснования Цикл
			СписокДокументовОснований.Добавить(Стр.ИмяФайла);
		КонецЦикла;
		СписокДокументовОснований.СортироватьПоПредставлению();
		
		РезультатВыбора = СписокДокументовОснований.ВыбратьЭлемент("Выберите документ для просмотра подписей под ним");
		Если РезультатВыбора = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		ИмяДокументаОснования = РезультатВыбора.Значение;
		
	КонецЕсли;
	
	ОткрытьПодписи(, ИмяДокументаОснования, Истина);
	
КонецПроцедуры

Процедура НадписьПодписьНалогоплательщикаПодФайломОписанияНеформализованногоДокументаСтр8Нажатие(Элемент)
	
	ОткрытьПодписи(, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ОписаниеНеформализованногоДокумента, Истина);
	
КонецПроцедуры

Процедура КнопкаИзменитьСодержимоеНажатие(Элемент)
	
	Если Вопрос("Изменить содержимое сообщения?
				|При этом, зашифрованное и готовое к отправке вложение будет удалено.", РежимДиалогаВопрос.ДаНет) <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	КонтекстЭДО.УдалитьТранспортныйКонтейнер(Ссылка);
	ОбновитьДанные();
	
КонецПроцедуры

Процедура КоманднаяПанельДействияФормыЗашифровать(Кнопка)
	
	Если КонтекстЭДО.СообщениеЗашифровано(Ссылка) Тогда
		Ответ = Вопрос("Сообщение уже шифровалось (имеется зашифрованный транспортный контейнер, связанный с сообщением).
						|Вы уверены, что хотите зашифровать сообщение заново?", РежимДиалогаВопрос.ДаНет);
		Если Ответ <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если КонтекстЭДО.СформироватьПакет(Ссылка) Тогда
		ОбновитьДанные();
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельДействияФормыТранспортныеКонтейнеры(Кнопка)
	
	ФормаСписка = РегистрыСведений.ТранспортныеКонтейнеры.ПолучитьФормуСписка();
	ФормаСписка.ПараметрОтборПоИзмерению = Новый Структура("ТранспортноеСообщение", Ссылка);
	ФормаСписка.Открыть();
	
КонецПроцедуры

Процедура НадписьПодписиОтветственныхЛиц2Стр9Нажатие(Элемент)
	
	ОткрытьПодписи(, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ОписаниеНеформализованногоДокумента, Истина);
	
КонецПроцедуры

Процедура ОсновныеДействияФормыКонтейнер(Кнопка)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	Диалог.Заголовок = "Выберите каталог для сохранения транспортного контейнера";
	Если НЕ Диалог.Выбрать() Тогда
		Возврат;
	КонецЕсли;
	
	КоличествоСохраненных = 0;
	Контейнеры = КонтекстЭДО.ПолучитьТранспортныйКонтейнер(Ссылка, Истина);
	Для Каждого Контейнер Из Контейнеры Цикл
		ИмяФайлаКонтейнера = ?(Прав(Диалог.Каталог, 1) = "\", Диалог.Каталог, Диалог.Каталог + "\") + Контейнер.ИмяФайла;
		ФайлКонтейнера = Новый Файл(ИмяФайлаКонтейнера);
		Если ФайлКонтейнера.Существует() Тогда
			Ответ = Вопрос("Файл """ + Контейнер.ИмяФайла + """ существует. Заменить?", РежимДиалогаВопрос.ДаНетОтмена);
			Если Ответ = КодВозвратаДиалога.Нет Тогда
				Продолжить;
			ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
		Попытка
			Контейнер.Данные.Получить().Записать(ИмяФайлаКонтейнера);
			КоличествоСохраненных = КоличествоСохраненных + 1;
		Исключение
			Сообщить("Не удалось выгрузить на диск файл """ + Контейнер.ИмяФайла + """!" + Символы.ПС + ОписаниеОшибки() ,СтатусСообщения.Важное);
		КонецПопытки;
	КонецЦикла;
	
	ЧислоКонтейнеров = Контейнеры.Количество();
	Если ЧислоКонтейнеров <> 0 Тогда
		Если ЧислоКонтейнеров = 1 Тогда
			Если КоличествоСохраненных = 1 Тогда
				СообщениеТекст = "Контейнер выгружен.";
			Иначе
				СообщениеТекст = "Не удалось выгрузить контейнер.";
			КонецЕсли;
		Иначе
			СообщениеТекст = "Выгружено файлов: " + КоличествоСохраненных + ".";
			Если КоличествоСохраненных <> ЧислоКонтейнеров Тогда
				СообщениеТекст = СообщениеТекст + "
								 |Не удалось выгрузить: " + (ЧислоКонтейнеров - КоличествоСохраненных) + ".";
			КонецЕсли;
		КонецЕсли;
		Предупреждение(СообщениеТекст);
	КонецЕсли;					
	
КонецПроцедуры

Процедура НадписьСостояниеПодтвержденияНаОтветНаЗапросНажатие(Элемент)
	
	Сообщение = КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ПереподписанныйОтветНаЗапросИОН, Ссылка);
	Если Сообщение = Документы.ТранспортноеСообщение.ПустаяСсылка() Тогда
		Подтверждение = КонтекстЭДО.ВвестиПодтверждение(ЦиклОбмена, Ссылка);
		Если Подтверждение <> Неопределено Тогда
			Подтверждение.ПолучитьФорму().Открыть();
			ОбновитьДанные();
		КонецЕсли;
	Иначе
		Сообщение.ПолучитьФорму().Открыть();
	КонецЕсли;
	
КонецПроцедуры

Процедура НадписьФайлОписанияСтр19Нажатие(Элемент)
	
	ПоказатьФайлИнформации();
	
КонецПроцедуры

Процедура НадписьПодписиСтр19Нажатие(Элемент)
	
	ОткрытьПодписи(, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ОтветНаЗапросИОН, , Истина);
	
КонецПроцедуры

Процедура НадписьПроверитьСтр19Нажатие(Элемент)
	
	КонтекстЭДО.ПроверитьПодписьНалоговогоОргана(Ссылка, СоответствиеНадписиПроверитьТипуПроверки[Элемент]);
	
КонецПроцедуры

Процедура НадписьФайлОписанияСтр20Нажатие(Элемент)
	
	ПоказатьФайлИнформации();
	
КонецПроцедуры

Процедура НадписьПодписиСтр20Нажатие(Элемент)
	
	ОткрытьПодписи(, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ОтветНаЗапросИОН, Истина);
	
КонецПроцедуры

Процедура НадписьСюда1Стр20Нажатие(Элемент)
	
	ОткрытьПодписи(Основание, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ОтветНаЗапросИОН, , Истина);
	
КонецПроцедуры

Процедура НадписьСюда3Стр20Нажатие(Элемент)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	Если НЕ Диалог.Выбрать() Тогда
		Возврат;
	КонецЕсли;
	КаталогСохранения = ?(Прав(Диалог.Каталог, 1) = "\", Диалог.Каталог, Диалог.Каталог + "\");
	
	//СообщениеОснование = КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ОтветНаЗапросИОН);
	Протоколы = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(Основание, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ОтветНаЗапросИОН);
	Если Протоколы.Количество() = 0 Тогда
		Предупреждение("Не найден ответ на запрос!");
		Возврат;
	Иначе
		Протокол = Протоколы[0];
		ИмяФайлаВложения = КаталогСохранения + Протокол.ИмяФайла;
		ФайлВложения = Новый Файл(ИмяФайлаВложения);
		Ответ = КодВозвратаДиалога.Да;
		Если ФайлВложения.Существует() Тогда
			Ответ = Вопрос("Файл """ + Протокол.ИмяФайла + """ существует. Заменить?", РежимДиалогаВопрос.ДаНетОтмена);
			Если Ответ = КодВозвратаДиалога.Отмена Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
		Если Ответ <> КодВозвратаДиалога.Нет Тогда
			Попытка
				Протокол.Данные.Получить().Записать(ИмяФайлаВложения);
			Исключение
				Сообщить("Не удалось выгрузить на диск файл """ + Протокол.ИмяФайла + """!" + Символы.ПС + ОписаниеОшибки() ,СтатусСообщения.Важное);
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
	ПодписиНалоговогоОргана = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(Основание, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ЭлектронноЦифроваяПодпись);
	Если ПодписиНалоговогоОргана.Количество() = 0 Тогда
		Предупреждение("Не найдена ЭЦП налогового органа на ответе на запрос на информационное обслуживание!");
		Возврат;
	Иначе
		ПодписьНалоговогоОргана = ПодписиНалоговогоОргана[0];
		ИмяФайлаВложения = КаталогСохранения + ПодписьНалоговогоОргана.ИмяФайла;
		ФайлВложения = Новый Файл(ИмяФайлаВложения);
		Ответ = КодВозвратаДиалога.Да;
		Если ФайлВложения.Существует() Тогда
			Ответ = Вопрос("Файл """ + ПодписьНалоговогоОргана.ИмяФайла + """ существует. Заменить?", РежимДиалогаВопрос.ДаНетОтмена);
			Если Ответ = КодВозвратаДиалога.Отмена Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
		Если Ответ <> КодВозвратаДиалога.Нет Тогда
			Попытка
				ПодписьНалоговогоОргана.Данные.Получить().Записать(ИмяФайлаВложения);
			Исключение
				Сообщить("Не удалось выгрузить на диск файл """ + ПодписьНалоговогоОргана.ИмяФайла + """!" + Символы.ПС + ОписаниеОшибки() ,СтатусСообщения.Важное);
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
	ПодписиНалогоплательщика = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(Ссылка, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ЭлектронноЦифроваяПодпись);
	Если ПодписиНалогоплательщика.Количество() = 0 Тогда
		Предупреждение("Не найдена ЭЦП налогоплательщика на протоколе!");
		Возврат;
	Иначе
		ПодписьНалогоплательщика = ПодписиНалогоплательщика[0];
		ИмяФайлаВложения = КаталогСохранения + ПодписьНалогоплательщика.ИмяФайла;
		ФайлВложения = Новый Файл(ИмяФайлаВложения);
		Ответ = КодВозвратаДиалога.Да;
		Если ФайлВложения.Существует() Тогда
			Ответ = Вопрос("Файл """ + ПодписьНалогоплательщика.ИмяФайла + """ существует. Заменить?", РежимДиалогаВопрос.ДаНетОтмена);
			Если Ответ = КодВозвратаДиалога.Отмена Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
		Если Ответ <> КодВозвратаДиалога.Нет Тогда
			Попытка
				ПодписьНалогоплательщика.Данные.Получить().Записать(ИмяФайлаВложения);
			Исключение
				Сообщить("Не удалось выгрузить на диск файл """ + ПодписьНалогоплательщика.ИмяФайла + """!" + Символы.ПС + ОписаниеОшибки() ,СтатусСообщения.Важное);
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
	СертификатыНалогоплательщика = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(Ссылка, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Сертификат);
	Если СертификатыНалогоплательщика.Количество() = 0 Тогда
		Предупреждение("Не найден сертификат, связанный с ЭЦП налогоплательщика на ответе на запрос!");
		Возврат;
	Иначе
		СертификатНалогоплательщика = СертификатыНалогоплательщика[0];
		ИмяФайлаВложения = КаталогСохранения + СертификатНалогоплательщика.ИмяФайла;
		ФайлВложения = Новый Файл(ИмяФайлаВложения);
		Ответ = КодВозвратаДиалога.Да;
		Если ФайлВложения.Существует() Тогда
			Ответ = Вопрос("Файл """ + СертификатНалогоплательщика.ИмяФайла + """ существует. Заменить?", РежимДиалогаВопрос.ДаНетОтмена);
			Если Ответ = КодВозвратаДиалога.Отмена Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
		Если Ответ <> КодВозвратаДиалога.Нет Тогда
			Попытка
				СертификатНалогоплательщика.Данные.Получить().Записать(ИмяФайлаВложения);
			Исключение
				Сообщить("Не удалось выгрузить на диск файл """ + СертификатНалогоплательщика.ИмяФайла + """!" + Символы.ПС + ОписаниеОшибки() ,СтатусСообщения.Важное);
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
	Предупреждение("Сохранение завершено.");
	
КонецПроцедуры

Процедура НадписьОтветНаЗапросСтр20Нажатие(Элемент)
	
	Если Основание.ПротоколСОшибкой Тогда
		
		ФайлыОтказов = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(ЭтотОбъект, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ОтветНаЗапросИОН);
		Для Каждого ФайлОтказа Из ФайлыОтказов Цикл
			ВременныйФайл = ПолучитьИмяВременногоФайла();
			ФайлОтказа.Данные.Получить().Записать(ВременныйФайл);
			Текст = Новый ТекстовыйДокумент;
			Текст.Прочитать(ВременныйФайл);
			ТекстОтказа = Текст.ПолучитьТекст();
			УдалитьФайлы(ВременныйФайл);
			КонтекстЭДО.ПоказатьОтказВОбслуживании(ФайлОтказа.ИмяФайла, ТекстОтказа);
		КонецЦикла;
		
	Иначе
		ПоказатьОтветНаЗапрос();
	КонецЕсли;
	
КонецПроцедуры

Процедура НадписьОтветНаЗапросСтр19Нажатие(Элемент)
	
	Если ПротоколСОшибкой Тогда
		
		ФайлыОтказов = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(ЭтотОбъект, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ОтветНаЗапросИОН);
		Для Каждого ФайлОтказа Из ФайлыОтказов Цикл
			ВременныйФайл = ПолучитьИмяВременногоФайла();
			ФайлОтказа.Данные.Получить().Записать(ВременныйФайл);
			Текст = Новый ТекстовыйДокумент;
			Текст.Прочитать(ВременныйФайл);
			ТекстОтказа = Текст.ПолучитьТекст();
			УдалитьФайлы(ВременныйФайл);
			КонтекстЭДО.ПоказатьОтказВОбслуживании(ФайлОтказа.ИмяФайла, ТекстОтказа);
		КонецЦикла;
		
	Иначе
		ПоказатьОтветНаЗапрос();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПоказатьОтветНаЗапрос()
	
	ОтветыНаЗапросы = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(ЭтотОбъект, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ОтветНаЗапросИОН);
	Если ОтветыНаЗапросы.Количество() = 0 Тогда
		Предупреждение("Ответ на запрос не обнаружен!");
		Возврат;
	КонецЕсли;
	
	ВремФайл = ПолучитьИмяВременногоФайла(ОтветыНаЗапросы[0].ИмяФайла);
	ОтветыНаЗапросы[0].Данные.Получить().Записать(ВремФайл);
	Попытка
		ЗапуститьПриложение(ВремФайл);
	Исключение
		Предупреждение("Ошибка открытия ответа на запрос!");
	КонецПопытки;
	
КонецПроцедуры

Процедура ПоказатьФайлИнформации()
	
	ФайлыОписания = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(ЭтотОбъект, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ФайлОписанияКонтейнера);
	Для Каждого ФайлОписания Из ФайлыОписания Цикл
		ВременныйФайл = ПолучитьИмяВременногоФайла();
		ФайлОписания.Данные.Получить().Записать(ВременныйФайл);
		Текст = Новый ТекстовыйДокумент;
		Текст.Прочитать(ВременныйФайл);
		Текст.ТолькоПросмотр = Истина;
		Текст.Показать(ФайлОписания.ИмяФайла, ФайлОписания.ИмяФайла);
		УдалитьФайлы(ВременныйФайл);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПоказатьКвитанцию()
	
	ФайлыКвитанции = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(ЭтотОбъект, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПодтверждениеОбОтправке);
	Для Каждого ФайлКвитанции Из ФайлыКвитанции Цикл
		ВремФайл = ПолучитьИмяВременногоФайла();
		ФайлКвитанции.Данные.Получить().Записать(ВремФайл);
		Текст = Новый ТекстовыйДокумент;
		Текст.Прочитать(ВремФайл);
		Текст.ТолькоПросмотр = Истина;
		Текст.Показать(ФайлКвитанции.ИмяФайла, ФайлКвитанции.ИмяФайла);
		УдалитьФайлы(ВремФайл);
	КонецЦикла;
	
КонецПроцедуры

Процедура КоманднаяПанельДействияФормыРаспознать(Кнопка)
	
	КонтекстЭДО.РаспознатьТранспортноеСообщение(ЭтотОбъект);
	ОбновитьДанные();
	
КонецПроцедуры

Процедура НадписьУведомлениеОбУточненииСтр21Нажатие(Элемент)
	
	ФайлыУведомлений = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(ЭтотОбъект, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.УведомлениеОбУточненииНБО);
	Для Каждого ФайлУведомления Из ФайлыУведомлений Цикл
		ВременныйФайл = ПолучитьИмяВременногоФайла();
		ФайлУведомления.Данные.Получить().Записать(ВременныйФайл);
		Текст = Новый ТекстовыйДокумент;
		Текст.Прочитать(ВременныйФайл);
		ТекстУведомления = Текст.ПолучитьТекст();
		УдалитьФайлы(ВременныйФайл);
		ПоказатьУведомлениеОбУточнении(ФайлУведомления.ИмяФайла, ТекстУведомления);
	КонецЦикла;
	
КонецПроцедуры

Процедура НадписьПодписиСтр21Нажатие(Элемент)
	
	ОткрытьПодписи(, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.УведомлениеОбУточненииНБО, , Истина);
	
КонецПроцедуры

Процедура ПоказатьУведомлениеОбУточнении(ИмяФайлаУведомления, ТекстУведомления)
	
	ФормаПросмотрУведомленияОбУточненииНБО = КонтекстЭДО.ПолучитьФорму("ПросмотрУведомленияОбУточненииНБО");
	ФормаПросмотрУведомленияОбУточненииНБО.ИмяФайлаУведомления = ИмяФайлаУведомления;
	ФормаПросмотрУведомленияОбУточненииНБО.ТекстУведомления = ТекстУведомления;
	ФормаПросмотрУведомленияОбУточненииНБО.ОткрытьМодально();
	
КонецПроцедуры

Процедура НадписьПротоколПриема2НДФЛСтр22Нажатие(Элемент)
	
	ФайлыПротоколов = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(ЭтотОбъект, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Протокол2НДФЛ);
	Для Каждого ФайлПротокола Из ФайлыПротоколов Цикл
		ВременныйФайл = ПолучитьИмяВременногоФайла();
		ФайлПротокола.Данные.Получить().Записать(ВременныйФайл);
		Текст = Новый ТекстовыйДокумент;
		Текст.Прочитать(ВременныйФайл);
		Текст.ТолькоПросмотр = Истина;
		Текст.Показать(ФайлПротокола.ИмяФайла, ФайлПротокола.ИмяФайла);
		УдалитьФайлы(ВременныйФайл);
	КонецЦикла;
	
КонецПроцедуры

Процедура НадписьПодписи1Стр22Нажатие(Элемент)
	
	ОткрытьПодписи(, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Протокол2НДФЛ, , Истина);
	
КонецПроцедуры

Процедура НадписьРеестрСведений2НДФЛСтр22Нажатие(Элемент)
	
	ФайлыРеестров = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(ЭтотОбъект, Истина, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Реестр2НДФЛ);
	Для Каждого ФайлРеестра Из ФайлыРеестров Цикл
		ВременныйФайл = ПолучитьИмяВременногоФайла();
		ФайлРеестра.Данные.Получить().Записать(ВременныйФайл);
		Текст = Новый ТекстовыйДокумент;
		Текст.Прочитать(ВременныйФайл);
		Текст.ТолькоПросмотр = Истина;
		Текст.Показать(ФайлРеестра.ИмяФайла, ФайлРеестра.ИмяФайла);
		УдалитьФайлы(ВременныйФайл);
	КонецЦикла;
	
КонецПроцедуры

Процедура НадписьПодписи2Стр22Нажатие(Элемент)
	
	ОткрытьПодписи(, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Реестр2НДФЛ, , Истина);
	
КонецПроцедуры

Процедура НадписьВложенияСтр7Нажатие(Элемент)
	
	Контейнеры = КонтекстЭДО.ПолучитьТранспортныйКонтейнер(Ссылка, Истина);
	
	СписокКонтейнеров = Новый СписокЗначений;
	Для Каждого Контейнер Из Контейнеры Цикл
		СписокКонтейнеров.Добавить(Контейнер.Данные, Контейнер.ИмяФайла);
	КонецЦикла;
	
	ЧислоКонтейнеров = СписокКонтейнеров.Количество();
	Если ЧислоКонтейнеров = 0 Тогда
		Возврат;
	ИначеЕсли ЧислоКонтейнеров = 1 Тогда
		ВложениеДляОткрытия = СписокКонтейнеров.Получить(0);
	Иначе
		ВложениеДляОткрытия = СписокКонтейнеров.ВыбратьЭлемент("Выберите вложение");
		Если ВложениеДляОткрытия = Неопределено Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ОткрытьВложение(ВложениеДляОткрытия);
	
КонецПроцедуры

Процедура ОткрытьВложение(ВложениеДляОткрытия)
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла(ВложениеДляОткрытия.Представление);
	
	Попытка
		ВложениеДляОткрытия.Значение.Получить().Записать(ИмяВременногоФайла);
	Исключение
		Сообщить("Ошибка выгрузки вложения во временный каталог:" + Символы.ПС + ИнформацияОбОшибке().Описание, СтатусСообщения.Важное);
		Возврат;
	КонецПопытки;
	
	ЗапуститьПриложение(ИмяВременногоФайла);
	
КонецПроцедуры

Функция ОтобразитьОтправителя()
	
	// формируем представление отправителя
	Если ЗначениеЗаполнено(Отправитель) Тогда
		Представление = Отправитель;
	ИначеЕсли ЗначениеЗаполнено(ОтКогоПредставление) Тогда
		Представление = СокрЛП(ОтКогоПредставление);
	ИначеЕсли ЗначениеЗаполнено(ОтКогоАдрес) Тогда
		Представление = СокрЛП(ОтКогоАдрес);
	Иначе
		Представление = "<не определен>";
	КонецЕсли;
	
	// прорисовываем
	ЭлементыФормы.Отправитель.Заголовок = Представление;
	ЭлементыФормы.Отправитель.ГиперСсылка = (ТипЗнч(Представление) <> Тип("Строка"));
	
КонецФункции

Функция ОтобразитьПолучателя()
	
	// формируем предсталение получателя
	Если ЗначениеЗаполнено(Получатель) Тогда
		Представление = Получатель;
	Иначе
		Если Кому.Количество() > 0 Тогда
			КомуАдрес = СокрЛП(Кому[0].АдресЭлектроннойПочты);
			КомуПредставление = СокрЛП(Кому[0].Представление);
			Если ЗначениеЗаполнено(КомуПредставление) Тогда
				Представление = СокрЛП(КомуПредставление);
			ИначеЕсли ЗначениеЗаполнено(КомуАдрес) Тогда
				Представление = СокрЛП(КомуАдрес);
			Иначе
				Представление = "<не определен>";
			КонецЕсли;
		Иначе
			Представление = "<не определен>";
		КонецЕсли;
	КонецЕсли;
	
	// прорисовываем
	ЭлементыФормы.Получатель.Заголовок = Представление;
	ЭлементыФормы.Получатель.ГиперСсылка = (ТипЗнч(Представление) <> Тип("Строка"));
	
КонецФункции

Процедура КоманднаяПанельДействияФормыСодержимоеТранспортныхКонтейнеров(Кнопка)
	
	ФормаСписка = РегистрыСведений.СодержимоеТранспортныхКонтейнеров.ПолучитьФормуСписка();
	ФормаСписка.ПараметрОтборПоИзмерению = Новый Структура("ТранспортноеСообщение", Ссылка);
	ФормаСписка.Открыть();
	
КонецПроцедуры

Процедура НадписьПодписиСтр6Нажатие(Элемент)
	
	ОткрытьПодписи(, Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПротоколВходногоКонтроля, Истина);
	
КонецПроцедуры

Процедура СодержимоеПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		
		ДанныеСтроки = ОформлениеСтроки.ДанныеСтроки;
		
		Если ЗначениеЗаполнено(ДанныеСтроки.СообщениеВладелец) Тогда
			
			ОформлениеСтроки.ЦветТекста = Новый Цвет(127, 127, 127);
			
			ОформлениеСтроки.Ячейки.Тип.Картинка = БиблиотекаКартинок.Ярлык;
			ОформлениеСтроки.Ячейки.Тип.ОтображатьКартинку = Истина;
			
		ИначеЕсли ДанныеСтроки.Уровень() = 0 Тогда
			ОформлениеСтроки.Шрифт = Новый Шрифт(ОформлениеСтроки.Шрифт, , , Истина);
		КонецЕсли;
		
		ТипДанных = ДанныеСтроки.Тип;
		
		// типы ПФР
		Если ТипДанных = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ФайлОтчетностиПФР Тогда
			
			ПредставлениеЯчейки = "Файл отчетности";
			Если ЗначениеЗаполнено(ДанныеСтроки.ТипФайлаОтчетности) Тогда
				ПредставлениеЯчейки = ПредставлениеЯчейки + " (" + ДанныеСтроки.ТипФайлаОтчетности + ")";
			КонецЕсли;
			
			ОформлениеСтроки.Ячейки.Тип.УстановитьТекст(ПредставлениеЯчейки);
			
		ИначеЕсли ТипДанных = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПодтверждениеПолученияОтчетностиПФР Тогда
			ОформлениеСтроки.Ячейки.Тип.УстановитьТекст("Подтверждение получения");
		ИначеЕсли ТипДанных = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПротоколПФР Тогда
			ОформлениеСтроки.Ячейки.Тип.УстановитьТекст("Протокол");
		ИначеЕсли ТипДанных = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПротоколПриложениеПФР Тогда
			ОформлениеСтроки.Ячейки.Тип.УстановитьТекст("Приложение к протоколу");
		ИначеЕсли ТипДанных = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ФайлОписанияСведенийПФР Тогда
			ОформлениеСтроки.Ячейки.Тип.УстановитьТекст("Описание сведений");
			
		// типы ФНС
		ИначеЕсли ТипДанных = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ФайлОтчетности Тогда
			ОформлениеСтроки.Ячейки.Тип.УстановитьТекст("Файл отчетности");
		ИначеЕсли ТипДанных = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ОписаниеСведений Тогда
			ОформлениеСтроки.Ячейки.Тип.УстановитьТекст("Описание сведений");
		ИначеЕсли ТипДанных = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ОписаниеСведений2НДФЛ Тогда
			ОформлениеСтроки.Ячейки.Тип.УстановитьТекст("Описание сведений");
		ИначеЕсли ТипДанных = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Доверенность Тогда
			ОформлениеСтроки.Ячейки.Тип.УстановитьТекст("Доверенность");
		ИначеЕсли ТипДанных = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПодтверждениеДатыОтправки Тогда
			ОформлениеСтроки.Ячейки.Тип.УстановитьТекст("Подтверждение даты отправки");
		ИначеЕсли ТипДанных = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.УведомлениеОбОтказе Тогда
			ОформлениеСтроки.Ячейки.Тип.УстановитьТекст("Уведомление об отказе");
		ИначеЕсли ТипДанных = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.КвитанцияОПриеме Тогда
			ОформлениеСтроки.Ячейки.Тип.УстановитьТекст("Квитанция о приеме");
		ИначеЕсли ТипДанных = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ИзвещениеОВводе Тогда
			ОформлениеСтроки.Ячейки.Тип.УстановитьТекст("Извещение о вводе");
		ИначеЕсли ТипДанных = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.УведомлениеОбУточнении Тогда
			ОформлениеСтроки.Ячейки.Тип.УстановитьТекст("Уведомление об уточнении");
		ИначеЕсли ТипДанных = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ИзвещениеОПолучении Тогда
			ОформлениеСтроки.Ячейки.Тип.УстановитьТекст("Извещение о получении");
			
		ИначеЕсли ТипДанных = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Форма2НДФЛ Тогда
			ОформлениеСтроки.Ячейки.Тип.УстановитьТекст("Сведения 2-НДФЛ");
		ИначеЕсли ТипДанных = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Протокол2НДФЛ Тогда
			ОформлениеСтроки.Ячейки.Тип.УстановитьТекст("Протокол приема 2-НДФЛ");
		ИначеЕсли ТипДанных = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Реестр2НДФЛ Тогда
			ОформлениеСтроки.Ячейки.Тип.УстановитьТекст("Реестр сведений 2-НДФЛ");
			
		ИначеЕсли ТипДанных = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Обращение Тогда
			ОформлениеСтроки.Ячейки.Тип.УстановитьТекст("Обращение");
		ИначеЕсли ТипДанных = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Приложение Тогда
			ОформлениеСтроки.Ячейки.Тип.УстановитьТекст("Приложение к обращению");
		ИначеЕсли ТипДанных = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПодтверждениеДатыПолучения Тогда
			ОформлениеСтроки.Ячейки.Тип.УстановитьТекст("Подтверждение даты получения");
			
		// общие типы
		ИначеЕсли ТипДанных = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ЭлектронноЦифроваяПодпись Тогда
			
			ОформлениеСтроки.Ячейки.Тип.Картинка = БиблиотекаКартинок.ЭлектронноЦифроваяПодпись;
			ОформлениеСтроки.Ячейки.Тип.ОтображатьКартинку = Истина;
			
			Если ОформлениеСтроки.ДанныеСтроки.ЭЦПЭтоПодписьАбонента Тогда
				ОформлениеСтроки.Ячейки.Тип.УстановитьТекст("Электронно-цифровая подпись абонента");
			ИначеЕсли ЦиклОбмена.Вид = Перечисления.ВидыЦикловОбмена.ЦиклОбменаСПФР Тогда
				ОформлениеСтроки.Ячейки.Тип.УстановитьТекст("Электронно-цифровая подпись представителя ПФР");
			Иначе
				Если (Тип = Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДекларацияНО
				ИЛИ Тип = Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОбращениеНО
				ИЛИ Тип = Перечисления.ТипыТранспортныхСообщений.ПодтверждениеФорма2НДФЛНО)
				И НЕ УчетнаяЗапись.ОбменНапрямую Тогда
					ОформлениеСтроки.Ячейки.Тип.УстановитьТекст("Электронно-цифровая подпись представителя спецоператора");
				Иначе
					ОформлениеСтроки.Ячейки.Тип.УстановитьТекст("Электронно-цифровая подпись представителя ФНС");
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СодержимоеВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТипДокумента = ВыбраннаяСтрока.Тип;
	
	// отчетность ПФР
	Если ТипДокумента = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ФайлОтчетностиПФР Тогда
		ПоказатьКакТекст(ВыбраннаяСтрока);
	ИначеЕсли ТипДокумента = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПодтверждениеПолученияОтчетностиПФР Тогда
		ПоказатьПодтверждениеПолученияПФР(ВыбраннаяСтрока);
	ИначеЕсли ТипДокумента = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.СведенияПриложениеПФР Тогда
		ПоказатьПриложениеПФР(ВыбраннаяСтрока);
	ИначеЕсли ТипДокумента = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПротоколПФР Тогда
		ПоказатьПротоколПФР(ВыбраннаяСтрока);
	ИначеЕсли ТипДокумента = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПротоколПриложениеПФР Тогда
		ПоказатьПриложениеПФР(ВыбраннаяСтрока);
	ИначеЕсли ТипДокумента = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ФайлОписанияСведенийПФР Тогда
		ПоказатьКакТекст(ВыбраннаяСтрока, КодировкаТекста.ANSI);
	ИначеЕсли ТипДокумента = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ЭлектронноЦифроваяПодпись Тогда
		ПоказатьПодписьПФР(ВыбраннаяСтрока);
		
	// неформализованные ПФР
	ИначеЕсли ТипДокумента = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Письмо Тогда
		ПоказатьКакТекст(ВыбраннаяСтрока, КодировкаТекста.ANSI);
	ИначеЕсли ТипДокумента = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПисьмоПриложение Тогда
		ПоказатьПриложениеПФР(ВыбраннаяСтрока);
	ИначеЕсли ТипДокумента = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПодтверждениеПолученияПисьма Тогда
		ПоказатьПодтверждениеПолученияПисьмаПФР(ВыбраннаяСтрока);
	ИначеЕсли ТипДокумента = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ОписаниеПисьма Тогда
		ПоказатьКакТекст(ВыбраннаяСтрока, КодировкаТекста.ANSI);
	ИначеЕсли ТипДокумента = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ТранспортнаяИнформация Тогда
		ПоказатьКакТекст(ВыбраннаяСтрока, КодировкаТекста.ANSI);
	
	// отчетность ФНС
	ИначеЕсли ТипДокумента = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ФайлОтчетности Тогда
		ПоказатьФайлОтчетности(ВыбраннаяСтрока);
	ИначеЕсли ТипДокумента = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Форма2НДФЛ Тогда
		ПоказатьФайлОтчетности(ВыбраннаяСтрока);
	ИначеЕсли ТипДокумента = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Доверенность Тогда
		ПоказатьКакXML(ВыбраннаяСтрока);
	ИначеЕсли ТипДокумента = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ОписаниеСведений Тогда
		ПоказатьКакXML(ВыбраннаяСтрока);
	ИначеЕсли ТипДокумента = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ОписаниеСведений2НДФЛ Тогда
		ПоказатьКакXML(ВыбраннаяСтрока);
	ИначеЕсли ТипДокумента = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПодтверждениеДатыОтправки Тогда
		ПоказатьПодтверждениеДатыОтправки(?(ЗначениеЗаполнено(ВыбраннаяСтрока.СообщениеВладелец), ВыбраннаяСтрока.СообщениеВладелец, Ссылка), ВыбраннаяСтрока.Имя);
	ИначеЕсли ТипДокумента = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.УведомлениеОбОтказе Тогда
		ПоказатьУведомлениеОбОтказе(?(ЗначениеЗаполнено(ВыбраннаяСтрока.СообщениеВладелец), ВыбраннаяСтрока.СообщениеВладелец, Ссылка), ВыбраннаяСтрока.Имя);
	ИначеЕсли ТипДокумента = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.КвитанцияОПриеме Тогда
		ПоказатьКвитанциюОПриеме(?(ЗначениеЗаполнено(ВыбраннаяСтрока.СообщениеВладелец), ВыбраннаяСтрока.СообщениеВладелец, Ссылка), ВыбраннаяСтрока.Имя);
	ИначеЕсли ТипДокумента = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ИзвещениеОВводе Тогда
		ПоказатьИзвещениеОВводе(?(ЗначениеЗаполнено(ВыбраннаяСтрока.СообщениеВладелец), ВыбраннаяСтрока.СообщениеВладелец, Ссылка), ВыбраннаяСтрока.Имя);
	ИначеЕсли ТипДокумента = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.УведомлениеОбУточнении Тогда
		ПоказатьУведомлениеОбУточнении504(?(ЗначениеЗаполнено(ВыбраннаяСтрока.СообщениеВладелец), ВыбраннаяСтрока.СообщениеВладелец, Ссылка), ВыбраннаяСтрока.Имя);
	ИначеЕсли ТипДокумента = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ИзвещениеОПолучении Тогда
		ПоказатьИзвещениеОПолучении(?(ЗначениеЗаполнено(ВыбраннаяСтрока.СообщениеВладелец), ВыбраннаяСтрока.СообщениеВладелец, Ссылка), ВыбраннаяСтрока.Имя);
		
	// 2-НДФЛ
	ИначеЕсли ТипДокумента = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Протокол2НДФЛ Тогда
		ПоказатьКакТекст(ВыбраннаяСтрока, КодировкаТекста.ANSI);
	ИначеЕсли ТипДокумента = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Реестр2НДФЛ Тогда
		ПоказатьКакТекст(ВыбраннаяСтрока, КодировкаТекста.ANSI);
		
	// обращение
	ИначеЕсли ТипДокумента = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Обращение Тогда
		ПоказатьКакXML(ВыбраннаяСтрока);
	ИначеЕсли ТипДокумента = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Приложение Тогда
		ПоказатьПриложениеПФР(ВыбраннаяСтрока);
	ИначеЕсли ТипДокумента = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ПодтверждениеДатыПолучения Тогда
		ПоказатьПодтверждениеДатыПолучения(?(ЗначениеЗаполнено(ВыбраннаяСтрока.СообщениеВладелец), ВыбраннаяСтрока.СообщениеВладелец, Ссылка), ВыбраннаяСтрока.Имя);
	ИначеЕсли ТипДокумента = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ОписаниеСведенийОбращениеПисьмоРассылка Тогда
		ПоказатьКакXML(ВыбраннаяСтрока);
	
	// входящие неформализованные
	ИначеЕсли ТипДокумента = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Рассылка Тогда
		ПоказатьКакТекст(ВыбраннаяСтрока, КодировкаТекста.ANSI);
		
	// запросы
	ИначеЕсли ТипДокумента = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Запрос Тогда
		ПоказатьКакXML(ВыбраннаяСтрока);
	ИначеЕсли ТипДокумента = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Ответ Тогда
		ПоказатьПриложениеПФР(ВыбраннаяСтрока);
	ИначеЕсли ТипДокумента = Перечисления.ТипыСодержимогоТранспортногоКонтейнера.ОписаниеСведенийЗапрос Тогда
		ПоказатьКакXML(ВыбраннаяСтрока);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПОКАЗА РАЗЛИЧНЫХ ВЛОЖЕНИЙ (ПФР И ФНС 534)

Процедура ПоказатьПодписьПФР(ВыбраннаяСтрока)
	
	ФормаПодписей = КонтекстЭДО.ПолучитьФорму("ПодписиПодДокументами", , Новый УникальныйИдентификатор);
	ФормаПодписей.ТранспортноеСообщение = Ссылка;
	ФормаПодписей.ИмяФайлаДокумента = ВыбраннаяСтрока.Родитель.Имя;
	
	Если Тип = Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетностьПФР
	ИЛИ Тип = Перечисления.ТипыТранспортныхСообщений.ПротоколКвитанцияПФР
	ИЛИ Тип = Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееПФР
	ИЛИ Тип = Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееКвитанцияПФР
	ИЛИ Тип = Перечисления.ТипыТранспортныхСообщений.ДекларацияНП
	ИЛИ Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП
	ИЛИ Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП
	ИЛИ Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП
	ИЛИ Тип = Перечисления.ТипыТранспортныхСообщений.Форма2НДФЛНП
	ИЛИ Тип = Перечисления.ТипыТранспортныхСообщений.ОбращениеНП
	ИЛИ Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоНП
	ИЛИ Тип = Перечисления.ТипыТранспортныхСообщений.ИзвещениеРассылкаНП
	ИЛИ Тип = Перечисления.ТипыТранспортныхСообщений.ЗапросНП Тогда
		ФормаПодписей.РаботаСЭЦПАбонента = Истина;
		ФормаПодписей.РаботаСЭЦППрочихУчастников = Ложь;
	Иначе
		ФормаПодписей.РаботаСЭЦПАбонента = Ложь;
		ФормаПодписей.РаботаСЭЦППрочихУчастников = Истина;
	КонецЕсли;
	
	ФормаПодписей.ОткрытьМодально();
	
	ОбновитьДанные();
	
КонецПроцедуры

Процедура ПоказатьОкноПодписанияДокумента(ВыбраннаяСтрока)
	
	ФормаПодписей = КонтекстЭДО.ПолучитьФорму("ПодписиПодДокументами", , Новый УникальныйИдентификатор);
	ФормаПодписей.ТранспортноеСообщение = Ссылка;
	ФормаПодписей.ИмяФайлаДокумента = ВыбраннаяСтрока.Имя;
	ФормаПодписей.РаботаСЭЦПАбонента = Истина;
	ФормаПодписей.РаботаСЭЦППрочихУчастников = Ложь;
	ФормаПодписей.ОткрытьМодально();
	
	ОбновитьДанные();
	
КонецПроцедуры

Процедура ПоказатьКакТекст(СвойстваДокумента, Кодировка = Неопределено)
	
	СообщениеВладелецФайла = ?(ЗначениеЗаполнено(СвойстваДокумента.СообщениеВладелец), СвойстваДокумента.СообщениеВладелец, Ссылка);
	ИмяФайлаДокумента = СвойстваДокумента.Имя;
	
	Вложения = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(СообщениеВладелецФайла, Истина, , ИмяФайлаДокумента);
	Если Вложения.Количество() = 0 Тогда
		Предупреждение("Документ не найден в информационной базе.");
		Возврат;
	КонецЕсли;
	
	ВременныйФайл = ПолучитьИмяВременногоФайла();
	Вложения[0].Данные.Получить().Записать(ВременныйФайл);
	
	Если Кодировка = Неопределено Тогда
		РасширениеФайла = РасширениеФайлаПоКраткомуИмени(ИмяФайлаДокумента);
		Если нрег(РасширениеФайла) = "txt" Тогда
			Кодировка = КодировкаТекста.OEM;
		КонецЕсли;
	КонецЕсли;
	
	Текст = Новый ТекстовыйДокумент;
	Текст.Прочитать(ВременныйФайл, Кодировка);
	Текст.ТолькоПросмотр = Истина;
	Текст.Показать(ИмяФайлаДокумента + " - просмотр");
	
	УдалитьФайлы(ВременныйФайл);
	
КонецПроцедуры

Процедура ПоказатьКакXML(СвойстваДокумента)
	
	// определяем сообщение-источник документа
	СообщениеВладелецФайла = ?(ЗначениеЗаполнено(СвойстваДокумента.СообщениеВладелец), СвойстваДокумента.СообщениеВладелец, Ссылка);
	
	// получаем исходное имя
	ИмяФайлаДокумента = СвойстваДокумента.Имя;
	
	// получаем вложение
	Вложения = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(СообщениеВладелецФайла, Истина, , ИмяФайлаДокумента);
	Если Вложения.Количество() = 0 Тогда
		Предупреждение("Документ не найден в информационной базе.");
		Возврат;
	КонецЕсли;
	
	// сохраняем вложение во временный файл
	ВременныйФайл = ПолучитьИмяВременногоФайла("xml");
	Вложения[0].Данные.Получить().Записать(ВременныйФайл);
	
	// показываем
	КонтекстЭДО.ПоказатьXMLИзФайла(ВременныйФайл, ИмяФайлаДокумента);
	
	// удаляем временный файл с вложением
	УдалитьФайлы(ВременныйФайл);
	
КонецПроцедуры

Процедура ПоказатьФайлОтчетности(СвойстваДокумента)
	
	// определяем тип содержимого
	РасширениеФайла = РасширениеФайлаПоКраткомуИмени(СвойстваДокумента.Имя);
	ЭтоXML = (нрег(РасширениеФайла) = "xml");
	
	// вызываем соответствующую процедуру визуализации
	Если ЭтоXML Тогда
		ПоказатьКакXML(СвойстваДокумента);
	Иначе
		ПоказатьКакТекст(СвойстваДокумента);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПоказатьПодтверждениеПолученияПФР(СвойстваДокумента)
	
	СообщениеВладелецФайла = ?(ЗначениеЗаполнено(СвойстваДокумента.СообщениеВладелец), СвойстваДокумента.СообщениеВладелец, Ссылка);
	ИмяФайлаДокумента = СвойстваДокумента.Имя;
	
	Вложения = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(СообщениеВладелецФайла, Истина, , ИмяФайлаДокумента);
	Если Вложения.Количество() = 0 Тогда
		Предупреждение("Документ не найден в информационной базе.");
		Возврат;
	КонецЕсли;
	
	ВременныйФайл = ПолучитьИмяВременногоФайла();
	Вложения[0].Данные.Получить().Записать(ВременныйФайл);
	
	ФормаПоказа = КонтекстЭДО.ПолучитьФорму("ПросмотрПодтвержденияПолученияПФР", ЭтаФорма);
	ФормаПоказа.Сообщение = СообщениеВладелецФайла;
	ФормаПоказа.ИмяФайла = СвойстваДокумента.Имя;
	ФормаПоказа.ПодтверждениеПолучения = ВременныйФайл;
	ФормаПоказа.ОткрытьМодально();
	
	УдалитьФайлы(ВременныйФайл);
	
КонецПроцедуры

Процедура ПоказатьПротоколПФР(СвойстваДокумента)
	
	СообщениеВладелецФайла = ?(ЗначениеЗаполнено(СвойстваДокумента.СообщениеВладелец), СвойстваДокумента.СообщениеВладелец, Ссылка);
	ИмяФайлаДокумента = СвойстваДокумента.Имя;
	
	Вложения = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(СообщениеВладелецФайла, Истина, , ИмяФайлаДокумента);
	Если Вложения.Количество() = 0 Тогда
		Предупреждение("Документ не найден в информационной базе.");
		Возврат;
	КонецЕсли;
	
	ВременныйФайл = ПолучитьИмяВременногоФайла();
	Вложения[0].Данные.Получить().Записать(ВременныйФайл);
	
	ФормаПоказа = КонтекстЭДО.ПолучитьФорму("ПросмотрПротоколаПФР", ЭтаФорма);
	ФормаПоказа.СообщениеПротокол = СообщениеВладелецФайла;
	ФормаПоказа.ИмяФайла = СвойстваДокумента.Имя;
	ФормаПоказа.Протокол = ВременныйФайл;
	ФормаПоказа.ОткрытьМодально();
	
	УдалитьФайлы(ВременныйФайл);
	
КонецПроцедуры

Процедура ПоказатьПриложениеПФР(СвойстваДокумента)
	
	СообщениеВладелецФайла = ?(ЗначениеЗаполнено(СвойстваДокумента.СообщениеВладелец), СвойстваДокумента.СообщениеВладелец, Ссылка);
	ИмяФайлаДокумента = СвойстваДокумента.Имя;
	
	Вложения = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(СообщениеВладелецФайла, Истина, , ИмяФайлаДокумента);
	Если Вложения.Количество() = 0 Тогда
		Предупреждение("Документ не найден в информационной базе.");
		Возврат;
	КонецЕсли;
	ВложениеПриложение = Вложения[0];
	
	КонтекстЭДО.ПоказатьПриложениеПФР(ВложениеПриложение);
	
КонецПроцедуры

Процедура ПоказатьПодтверждениеПолученияПисьмаПФР(СвойстваДокумента)
	
	СообщениеВладелецФайла = ?(ЗначениеЗаполнено(СвойстваДокумента.СообщениеВладелец), СвойстваДокумента.СообщениеВладелец, Ссылка);
	ИмяФайлаДокумента = СвойстваДокумента.Имя;
	
	Вложения = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(СообщениеВладелецФайла, Истина, , ИмяФайлаДокумента);
	Если Вложения.Количество() = 0 Тогда
		Предупреждение("Документ не найден в информационной базе.");
		Возврат;
	КонецЕсли;
	
	ВременныйФайл = ПолучитьИмяВременногоФайла();
	Вложения[0].Данные.Получить().Записать(ВременныйФайл);
	
	ФормаПоказа = КонтекстЭДО.ПолучитьФорму("ПросмотрПодтвержденияПолученияПисьмаПФР", ЭтаФорма);
	ФормаПоказа.ИмяФайла = СвойстваДокумента.Имя;
	ФормаПоказа.ПодтверждениеПолучения = ВременныйФайл;
	ФормаПоказа.ОткрытьМодально();
	
	УдалитьФайлы(ВременныйФайл);
	
КонецПроцедуры

Процедура ПоказатьПодтверждениеДатыОтправки(Сообщение, ИмяФайла)
	
	КонтекстЭДО.ПоказатьПодтверждениеДатыОтправки(Сообщение, ИмяФайла);
	
КонецПроцедуры

Процедура ПоказатьПодтверждениеДатыПолучения(Сообщение, ИмяФайла)
	
	КонтекстЭДО.ПоказатьПодтверждениеДатыПолучения(Сообщение, ИмяФайла);
	
КонецПроцедуры

Процедура ПоказатьИзвещениеОПолучении(Сообщение, ИмяФайла)
	
	КонтекстЭДО.ПоказатьИзвещениеОПолучении(Сообщение, ИмяФайла);
	
КонецПроцедуры

Процедура ПоказатьУведомлениеОбОтказе(Сообщение, ИмяФайла)
	
	Если ЦиклОбмена.Тип = Перечисления.ТипыЦикловОбмена.ОбращениеНП ИЛИ ЦиклОбмена.Тип = Перечисления.ТипыЦикловОбмена.ИОН Тогда
		КонтекстЭДО.ПоказатьУведомлениеОбОтказеОбращение(Сообщение, ИмяФайла);
	Иначе
		КонтекстЭДО.ПоказатьУведомлениеОбОтказе(Сообщение, ИмяФайла);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПоказатьКвитанциюОПриеме(Сообщение, ИмяФайла)
	
	Если ЦиклОбмена.Тип = Перечисления.ТипыЦикловОбмена.ИОН Тогда
		КонтекстЭДО.ПоказатьКвитанциюОПриемеЗапроса(Сообщение, ИмяФайла);
	Иначе
		КонтекстЭДО.ПоказатьКвитанциюОПриеме(Сообщение, ИмяФайла);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПоказатьИзвещениеОВводе(Сообщение, ИмяФайла)
	
	КонтекстЭДО.ПоказатьИзвещениеОВводе(Сообщение, ИмяФайла);
	
КонецПроцедуры

Процедура ПоказатьУведомлениеОбУточнении504(Сообщение, ИмяФайла)
	
	КонтекстЭДО.ПоказатьУведомлениеОбУточнении(Сообщение, ИмяФайла);
	
КонецПроцедуры

// ПРОЦЕДУРЫ И ФУНКЦИИ ПОКАЗА РАЗЛИЧНЫХ ВЛОЖЕНИЙ (ПФР И ФНС 534)
////////////////////////////////////////////////////////////////////////////////

Функция РасширениеФайлаПоКраткомуИмени(КраткоеИмя)
	
	ДлинаИмени = СтрДлина(КраткоеИмя);
	Для ОбратныйИнд = 1 По ДлинаИмени Цикл
		Инд = ДлинаИмени - ОбратныйИнд + 1;
		Если Сред(КраткоеИмя, Инд, 1) = "." Тогда
			Возврат СокрЛП(Сред(КраткоеИмя, Инд + 1));
		КонецЕсли;
	КонецЦикла;
	Возврат "";
	
КонецФункции

Процедура НадписьСостояниеПротоколКвитанцияНажатие(Элемент)
	
	Сообщение = КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ПротоколКвитанцияПФР, Ссылка);
	Если Сообщение = Документы.ТранспортноеСообщение.ПустаяСсылка() Тогда
		Подтверждение = КонтекстЭДО.ВвестиПодтверждение(ЦиклОбмена, Ссылка);
		Если Подтверждение <> Неопределено Тогда
			Подтверждение.ПолучитьФорму().Открыть();
			ОбновитьДанные();
		КонецЕсли;
	Иначе
		Сообщение.ПолучитьФорму().Открыть();
	КонецЕсли;
	
КонецПроцедуры

Процедура НадписьСостояниеПисьмоВходящееКвитанцияНажатие(Элемент)
	
	Сообщение = КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееКвитанцияПФР, Ссылка);
	Если Сообщение = Документы.ТранспортноеСообщение.ПустаяСсылка() Тогда
		Подтверждение = КонтекстЭДО.ВвестиПодтверждение(ЦиклОбмена, Ссылка);
		Если Подтверждение <> Неопределено Тогда
			Подтверждение.ПолучитьФорму().Открыть();
			ОбновитьДанные();
		КонецЕсли;
	Иначе
		Сообщение.ПолучитьФорму().Открыть();
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельКонтекстноеМенюСодержимоеДеревоПодписать(Кнопка)
	
	ТекТабличноеПоле = ТекущийЭлемент;
	Если ТипЗнч(ТекТабличноеПоле) <> Тип("ТабличноеПоле") Тогда
		Предупреждение("Выберите документ для подписания.");
		Возврат;
	КонецЕсли;
	
	ТекСтр = ТекТабличноеПоле.ТекущаяСтрока;
	Если ТекСтр = Неопределено Тогда
		Предупреждение("Выберите документ для подписания.");
		Возврат;
	КонецЕсли;
	
	Если ТекСтр.Уровень() = 1 Тогда
		ТекСтр = ТекСтр.Родитель;
	КонецЕсли;
	
	ПоказатьОкноПодписанияДокумента(ТекСтр);
	
КонецПроцедуры

Процедура НадписьСостояниеИзвещениеРезультатПриемаНПНажатие(Элемент)
	
	Сообщение = КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, Ссылка);
	Если Сообщение = Документы.ТранспортноеСообщение.ПустаяСсылка() Тогда
		Подтверждение = КонтекстЭДО.ВвестиПодтверждение(ЦиклОбмена, Ссылка);
		Если ЗначениеЗаполнено(Подтверждение) Тогда
			Подтверждение.ПолучитьФорму().Открыть();
			ОбновитьДанные();
		КонецЕсли;
	Иначе
		Сообщение.ПолучитьФорму().Открыть();
	КонецЕсли;
	
КонецПроцедуры

Процедура НадписьСостояниеИзвещениеРезультатОбработкиНПНажатие(Элемент)
	
	Сообщение = КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП, Ссылка);
	Если Сообщение = Документы.ТранспортноеСообщение.ПустаяСсылка() Тогда
		Подтверждение = КонтекстЭДО.ВвестиПодтверждение(ЦиклОбмена, Ссылка);
		Если Подтверждение <> Неопределено Тогда
			Подтверждение.ПолучитьФорму().Открыть();
			ОбновитьДанные();
		КонецЕсли;
	Иначе
		Сообщение.ПолучитьФорму().Открыть();
	КонецЕсли;
	
КонецПроцедуры

Процедура НадписьСостояниеИзвещениеПодтверждениеНПНажатие(Элемент)
	
	Сообщение = КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, Ссылка);
	Если Сообщение = Документы.ТранспортноеСообщение.ПустаяСсылка() Тогда
		Подтверждение = КонтекстЭДО.ВвестиПодтверждение(ЦиклОбмена, Ссылка);
		Если Подтверждение <> Неопределено Тогда
			Подтверждение.ПолучитьФорму().Открыть();
			ОбновитьДанные();
		КонецЕсли;
	Иначе
		Сообщение.ПолучитьФорму().Открыть();
	КонецЕсли;
	
КонецПроцедуры

Процедура НадписьСостояниеИзвещениеПодтверждениеНПОбращениеНажатие(Элемент)
	
	Сообщение = КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, Ссылка);
	Если Сообщение = Документы.ТранспортноеСообщение.ПустаяСсылка() Тогда
		Подтверждение = КонтекстЭДО.ВвестиПодтверждение(ЦиклОбмена, Ссылка);
		Если Подтверждение <> Неопределено Тогда
			Подтверждение.ПолучитьФорму().Открыть();
			ОбновитьДанные();
		КонецЕсли;
	Иначе
		Сообщение.ПолучитьФорму().Открыть();
	КонецЕсли;
	
КонецПроцедуры

Процедура НадписьСостояниеИзвещениеРезультатПриемаНПОбращениеНажатие(Элемент)
	
	Сообщение = КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, Ссылка);
	Если Сообщение = Документы.ТранспортноеСообщение.ПустаяСсылка() Тогда
		Подтверждение = КонтекстЭДО.ВвестиПодтверждение(ЦиклОбмена, Ссылка);
		Если Подтверждение <> Неопределено Тогда
			Подтверждение.ПолучитьФорму().Открыть();
			ОбновитьДанные();
		КонецЕсли;
	Иначе
		Сообщение.ПолучитьФорму().Открыть();
	КонецЕсли;
	
КонецПроцедуры

Процедура НадписьСостояниеИзвещениеПисьмоНПНажатие(Элемент)
	
	Сообщение = КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоНП, Ссылка);
	Если Сообщение = Документы.ТранспортноеСообщение.ПустаяСсылка() Тогда
		Подтверждение = КонтекстЭДО.ВвестиПодтверждение(ЦиклОбмена, Ссылка);
		Если Подтверждение <> Неопределено Тогда
			Подтверждение.ПолучитьФорму().Открыть();
			ОбновитьДанные();
		КонецЕсли;
	Иначе
		Сообщение.ПолучитьФорму().Открыть();
	КонецЕсли;
	
КонецПроцедуры

Процедура НадписьСостояниеИзвещениеРассылкаНПНажатие(Элемент)
	
	Сообщение = КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРассылкаНП, Ссылка);
	Если Сообщение = Документы.ТранспортноеСообщение.ПустаяСсылка() Тогда
		Подтверждение = КонтекстЭДО.ВвестиПодтверждение(ЦиклОбмена, Ссылка);
		Если Подтверждение <> Неопределено Тогда
			Подтверждение.ПолучитьФорму().Открыть();
			ОбновитьДанные();
		КонецЕсли;
	Иначе
		Сообщение.ПолучитьФорму().Открыть();
	КонецЕсли;
	
КонецПроцедуры

Процедура НадписьСостояниеИзвещениеПодтверждениеНПЗапросНажатие(Элемент)
	
	Сообщение = КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, Ссылка);
	Если Сообщение = Документы.ТранспортноеСообщение.ПустаяСсылка() Тогда
		Подтверждение = КонтекстЭДО.ВвестиПодтверждение(ЦиклОбмена, Ссылка);
		Если Подтверждение <> Неопределено Тогда
			Подтверждение.ПолучитьФорму().Открыть();
			ОбновитьДанные();
		КонецЕсли;
	Иначе
		Сообщение.ПолучитьФорму().Открыть();
	КонецЕсли;
	
КонецПроцедуры

Процедура НадписьСостояниеИзвещениеРезультатОбработкиНПЗапросНажатие(Элемент)
	
	Сообщение = КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП, Ссылка);
	Если Сообщение = Документы.ТранспортноеСообщение.ПустаяСсылка() Тогда
		Подтверждение = КонтекстЭДО.ВвестиПодтверждение(ЦиклОбмена, Ссылка);
		Если Подтверждение <> Неопределено Тогда
			Подтверждение.ПолучитьФорму().Открыть();
			ОбновитьДанные();
		КонецЕсли;
	Иначе
		Сообщение.ПолучитьФорму().Открыть();
	КонецЕсли;
	
КонецПроцедуры

Процедура НадписьСостояниеИзвещениеРезультатПриемаНПЗапросНажатие(Элемент)
	
	Сообщение = КонтекстЭДО.ПолучитьСообщениеЦиклаОбмена(ЦиклОбмена, Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, Ссылка);
	Если Сообщение = Документы.ТранспортноеСообщение.ПустаяСсылка() Тогда
		Подтверждение = КонтекстЭДО.ВвестиПодтверждение(ЦиклОбмена, Ссылка);
		Если Подтверждение <> Неопределено Тогда
			Подтверждение.ПолучитьФорму().Открыть();
			ОбновитьДанные();
		КонецЕсли;
	Иначе
		Сообщение.ПолучитьФорму().Открыть();
	КонецЕсли;
	
КонецПроцедуры


КрасныйКрест = БиблиотекаКартинок.КрасныйКрест;
ЗеленаяГалка = БиблиотекаКартинок.ЗеленаяГалка;

СоответствиеТипаКартинке = Новый Соответствие;

// ФНС 141
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетность, БиблиотекаКартинок.ПервичноеСообщение);
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОтправкиОтчетности, БиблиотекаКартинок.ПодтверждениеОтправкиОтчетности);
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПереподписанноеПодтверждениеОтправкиОтчетности, БиблиотекаКартинок.ПереподписанноеПодтверждениеОтправкиОтчетности);
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.КвитанцияОПриемеФайлаОтчетности, БиблиотекаКартинок.КвитанцияОПриемкеФайлаДокументаОтНалоговогоОргана);
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляОтчетности, БиблиотекаКартинок.ПротоколВходногоКонтроляОтНалоговогоОргана);
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПереподписанныйПротоколВходногоКонтроляОтчетности, БиблиотекаКартинок.ПереподписанныйПротоколВходногоКонтроляОтчетности);
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.УведомлениеОбУточненииНБО, БиблиотекаКартинок.ОтветНаЗапрос);
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.Протокол2НДФЛ, БиблиотекаКартинок.ОтветНаЗапрос);

СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.НеформализованныйДокументНО, БиблиотекаКартинок.ОтветНаЗапрос);
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеНаНеформализованныйДокументНО, БиблиотекаКартинок.ПодтверждениеНаОтветНаЗапрос);

СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.НеформализованныйДокументНалогоплательщика, БиблиотекаКартинок.ПервичноеСообщение);
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика, БиблиотекаКартинок.ПодтверждениеОтправкиОтчетности);
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПереподписанноеПодтверждениеОтправкиНеформализованногоДокументаНалогоплательщика, БиблиотекаКартинок.ПереподписанноеПодтверждениеОтправкиОтчетности);
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДоставкиНеформализованногоДокументаНалогоплательщика, БиблиотекаКартинок.КвитанцияОПриемкеФайлаДокументаОтНалоговогоОргана);

СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ЗапросИОН, БиблиотекаКартинок.ПервичноеСообщение);
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОтправкиЗапросаИОН, БиблиотекаКартинок.ПодтверждениеОтправкиОтчетности);
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПереподписанноеПодтверждениеОтправкиЗапросаИОН, БиблиотекаКартинок.ПереподписанноеПодтверждениеОтправкиОтчетности);
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.КвитанцияОПриемеЗапросаИОН, БиблиотекаКартинок.КвитанцияОПриемкеФайлаДокументаОтНалоговогоОргана);
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляЗапросаИОН, БиблиотекаКартинок.ПротоколВходногоКонтроляОтНалоговогоОргана);
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПереподписанныйПротоколВходногоКонтроляЗапросаИОН, БиблиотекаКартинок.ПереподписанныйПротоколВходногоКонтроляОтчетности);
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ОтветНаЗапросИОН, БиблиотекаКартинок.ОтветНаЗапрос);
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПереподписанныйОтветНаЗапросИОН, БиблиотекаКартинок.ПодтверждениеНаОтветНаЗапрос);

// ПФР
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетностьПФР, БиблиотекаКартинок.ПервичноеСообщение);
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеПолученияОтчетностиПФР, БиблиотекаКартинок.КвитанцияОПриемкеФайлаДокументаОтНалоговогоОргана);
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПротоколПФР, БиблиотекаКартинок.ПротоколВходногоКонтроляОтНалоговогоОргана);
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПротоколКвитанцияПФР, БиблиотекаКартинок.ПереподписанныйПротоколВходногоКонтроляОтчетности);

СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееПФР, БиблиотекаКартинок.ПервичноеСообщение);
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоИсходящееКвитанцияПФР, БиблиотекаКартинок.КвитанцияОПриемкеФайлаДокументаОтНалоговогоОргана);

СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееПФР, БиблиотекаКартинок.ПервичноеСообщение);
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееКвитанцияПФР, БиблиотекаКартинок.КвитанцияОПриемкеФайлаДокументаОтНалоговогоОргана);

// ФНС 534
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ДекларацияНП, БиблиотекаКартинок.ПервичноеСообщение);
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеДекларацияНО, БиблиотекаКартинок.ПодтверждениеОтправкиОтчетности);
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, БиблиотекаКартинок.ПереподписанноеПодтверждениеОтправкиОтчетности);
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеДекларацияНО, БиблиотекаКартинок.КвитанцияОПриемкеФайлаДокументаОтНалоговогоОргана);
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаДекларацияНО, БиблиотекаКартинок.ПротоколВходногоКонтроляОтНалоговогоОргана);
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, БиблиотекаКартинок.ПереподписанныйПротоколВходногоКонтроляОтчетности);
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиДекларацияНО, БиблиотекаКартинок.ОтветНаЗапрос);
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП, БиблиотекаКартинок.ПодтверждениеНаОтветНаЗапрос);

СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.Форма2НДФЛНП, БиблиотекаКартинок.ПервичноеСообщение);
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеФорма2НДФЛНО, БиблиотекаКартинок.ПодтверждениеОтправкиОтчетности);
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеФорма2НДФЛНО, БиблиотекаКартинок.КвитанцияОПриемкеФайлаДокументаОтНалоговогоОргана);
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаФорма2НДФЛНО, БиблиотекаКартинок.ПротоколВходногоКонтроляОтНалоговогоОргана);

СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ОбращениеНП, БиблиотекаКартинок.ПервичноеСообщение);
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеОбращениеНО, БиблиотекаКартинок.ПодтверждениеОтправкиОтчетности);
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, БиблиотекаКартинок.ПереподписанноеПодтверждениеОтправкиОтчетности);
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеОбращениеНО, БиблиотекаКартинок.КвитанцияОПриемкеФайлаДокументаОтНалоговогоОргана);
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаОбращениеНО, БиблиотекаКартинок.ПротоколВходногоКонтроляОтНалоговогоОргана);
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, БиблиотекаКартинок.ПереподписанныйПротоколВходногоКонтроляОтчетности);

СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоНО, БиблиотекаКартинок.ПервичноеСообщение);
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПисьмоНП, БиблиотекаКартинок.КвитанцияОПриемкеФайлаДокументаОтНалоговогоОргана);

СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.РассылкаНО, БиблиотекаКартинок.ПервичноеСообщение);
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРассылкаНП, БиблиотекаКартинок.КвитанцияОПриемкеФайлаДокументаОтНалоговогоОргана);

СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ЗапросНП, БиблиотекаКартинок.ПервичноеСообщение);
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеЗапросНО, БиблиотекаКартинок.ПодтверждениеОтправкиОтчетности);
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеПодтверждениеНП, БиблиотекаКартинок.ПереподписанноеПодтверждениеОтправкиОтчетности);
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеЗапросНО, БиблиотекаКартинок.КвитанцияОПриемкеФайлаДокументаОтНалоговогоОргана);
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаЗапросНО, БиблиотекаКартинок.ПротоколВходногоКонтроляОтНалоговогоОргана);
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатПриемаНП, БиблиотекаКартинок.ПереподписанныйПротоколВходногоКонтроляОтчетности);
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗапросНО, БиблиотекаКартинок.ОтветНаЗапрос);
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.ИзвещениеРезультатОбработкиНП, БиблиотекаКартинок.ПодтверждениеНаОтветНаЗапрос);

// прочее
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.Прочее, БиблиотекаКартинок.СообщениеНеизвестногоТипа);

СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.КритическаяОшибка, БиблиотекаКартинок.КритическаяОшибка);
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.УведомлениеОбОшибкеПФР, БиблиотекаКартинок.КритическаяОшибка);
СоответствиеТипаКартинке.Вставить(Перечисления.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС, БиблиотекаКартинок.КритическаяОшибка);

//
СоответствиеНадписиПроверитьТипуПроверки = Новый Соответствие;
СоответствиеНадписиПроверитьТипуПроверки.Вставить(ЭлементыФормы.НадписьПроверитьСтр2, 0);
СоответствиеНадписиПроверитьТипуПроверки.Вставить(ЭлементыФормы.НадписьПроверитьСтр3, 0);
СоответствиеНадписиПроверитьТипуПроверки.Вставить(ЭлементыФормы.НадписьПроверитьСтр4, 0);
СоответствиеНадписиПроверитьТипуПроверки.Вставить(ЭлементыФормы.НадписьПроверить1Стр7, 0);
СоответствиеНадписиПроверитьТипуПроверки.Вставить(ЭлементыФормы.НадписьПроверить2Стр7, 1);
СоответствиеНадписиПроверитьТипуПроверки.Вставить(ЭлементыФормы.НадписьПроверитьСтр10, 0);
СоответствиеНадписиПроверитьТипуПроверки.Вставить(ЭлементыФормы.НадписьПроверитьСтр12, 0);
СоответствиеНадписиПроверитьТипуПроверки.Вставить(ЭлементыФормы.НадписьПроверитьСтр14, 0);
СоответствиеНадписиПроверитьТипуПроверки.Вставить(ЭлементыФормы.НадписьПроверитьСтр15, 0);
СоответствиеНадписиПроверитьТипуПроверки.Вставить(ЭлементыФормы.НадписьПроверитьСтр16, 0);
СоответствиеНадписиПроверитьТипуПроверки.Вставить(ЭлементыФормы.НадписьПроверитьСтр19, 0);
СоответствиеНадписиПроверитьТипуПроверки.Вставить(ЭлементыФормы.НадписьПроверитьСтр21, 0);
СоответствиеНадписиПроверитьТипуПроверки.Вставить(ЭлементыФормы.НадписьПроверить1Стр22, 0);
СоответствиеНадписиПроверитьТипуПроверки.Вставить(ЭлементыФормы.НадписьПроверить2Стр22, 1);


Процедура УправлениеЭУ()
	
	ПризнакДоступности = (ПереключательСогласен = 3);
	
	ЭлементыФормы.КоманднаяПанельФайлыСведений.Кнопки.УстановитьФлажкиУВсех.Доступность = ПризнакДоступности;
	ЭлементыФормы.КоманднаяПанельФайлыСведений.Кнопки.СнятьФлажкиУВсех.Доступность = ПризнакДоступности;
	ЭлементыФормы.ФайлыСведений.Колонки.Пометка.ТолькоПросмотр = НЕ ПризнакДоступности;
	
КонецПроцедуры

Процедура ПереключательСогласенПриИзменении(Элемент)
	
	Если ПереключательСогласен = 1 Тогда
		ФайлыСведений.ЗаполнитьЗначения(Истина, "Пометка");
	ИначеЕсли ПереключательСогласен = 2 Тогда
		ФайлыСведений.ЗаполнитьЗначения(Ложь, "Пометка");
	ИначеЕсли ПереключательСогласен = 3 Тогда
		ФайлыСведений.ЗаполнитьЗначения(Ложь, "Пометка");
	КонецЕсли;
	
	УправлениеЭУ();
	
КонецПроцедуры

Процедура ОсновныеДействияФормыОК(Кнопка)
	
	Если _ПроверитьЗаполнение() Тогда
		Закрыть(ПолучитьНастройки());
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	//инициализируем таблицы файлов сведений
	Вложения = КонтекстЭДО.ПолучитьВложенияНеформализованногоДокумента(Основание);
	Для Каждого Стр Из Вложения Цикл
		НовСтр = ФайлыСведений.Добавить();
		НовСтр.Файл = Стр.ИмяФайла;
	КонецЦикла;
	
	УправлениеЭУ();
	
КонецПроцедуры

Функция _ПроверитьЗаполнение()
	
	Если ПереключательСогласен = 0 Тогда
		Предупреждение("Выберите один из вариантов подтверждения сведений.");
		Возврат Ложь;
	КонецЕсли;
	
	Если ПереключательСогласен = 3 Тогда
		Сведения = ВыбранныеСведения();
		Если Сведения.Количество() = 0 Тогда
			Предупреждение("При частичном подтверждении сведений должен быть выбран хотя бы один из файлов сведений.");
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	
	//Если НЕ ЗначениеЗаполнено(ВключатьВОтветПодписиПФР) Тогда
	//	Предупреждение("Укажите, необходимо ли включать в ответное сообщение подписи ПФР из исходного сообщения.");
	//	Возврат Ложь;
	//КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Функция ВыбранныеСведения()
	
	Если ПереключательСогласен = 1 Тогда
		Возврат ФайлыСведений.ВыгрузитьКолонку("Файл");
	ИначеЕсли ПереключательСогласен = 2 Тогда
		Возврат Новый Массив;
	ИначеЕсли ПереключательСогласен = 3 Тогда
		Сведения = Новый Массив;
		Для Каждого Стр Из ФайлыСведений Цикл
			Если Стр.Пометка Тогда
				Сведения.Добавить(Стр.Файл);
			КонецЕсли;
		КонецЦикла;
		Возврат Сведения;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьНастройки()
	
	Возврат Новый Структура("ФайлыСведений, ВариантПодтверждения", ВыбранныеСведения(), ПереключательСогласен);
	
КонецФункции

Процедура КоманднаяПанельФайлыСведенийУстановитьФлажкиУВсех(Кнопка)
	
	ФайлыСведений.ЗаполнитьЗначения(Истина, "Пометка");
	
КонецПроцедуры

Процедура КоманднаяПанельФайлыСведенийСнятьФлажкиУВсех(Кнопка)
	
	ФайлыСведений.ЗаполнитьЗначения(Ложь, "Пометка");
	
КонецПроцедуры

Процедура КоманднаяПанельФайлыСведенийОткрыть(Кнопка)
	
	ОткрытьФайлСведений();
	
КонецПроцедуры

Процедура КоманднаяПанельФайлыСведенийВыгрузить(Кнопка)
	
	ВыгрузитьВложения();
	
КонецПроцедуры

Функция ВыбранныеВложения()
	
	Результат = Новый Массив;
	
	Для Каждого Стр Из ФайлыСведений Цикл
		Если Стр.Пометка Тогда
			Результат.Добавить(Стр.Файл);
		КонецЕсли;
	КонецЦикла;
	
	Если Результат.Количество() = 0 Тогда
		ТекСтрока = ЭлементыФормы.ФайлыСведений.ТекущаяСтрока;
		Если ТекСтрока <> Неопределено Тогда
			Результат.Добавить(ТекСтрока.Файл);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура ВыгрузитьВложения()
	
	// получаем массив с именами выгружаемых вложений
	СтрВложения = ВыбранныеВложения();
	Если СтрВложения.Количество() = 0 Тогда
		Предупреждение("Выберите файлы сведений.");
		Возврат;
	КонецЕсли;
	
	// вводим каталог
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	Диалог.Заголовок = "Выберите каталог";
	Диалог.ПроверятьСуществованиеФайла = Истина;
	Если НЕ Диалог.Выбрать() Тогда
		Возврат;
	КонецЕсли;
	КаталогСохранения = Диалог.Каталог + ?(Прав(Диалог.Каталог, 1) = "\", "", "\");
	
	// проверяем, есть ли в выбранном каталоге файлы, которые будут перезаписаны
	Если КонтекстЭДО.ВКаталогеПрисутствуютФайлыСУказаннымиИменами(КаталогСохранения, СтрВложения) Тогда
		Ответ = Вопрос("В выбранным каталоге уже присутствуют файлы с именами выгружаемых.
						|Продолжить с заменой файлов в каталоге на новые?", РежимДиалогаВопрос.ДаНет);
		Если Ответ <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	// выгружаем вложения
	ВложенияСДанными = КонтекстЭДО.ПолучитьВложения(Основание, СтрВложения);
	Для Каждого СтрВложение Из ВложенияСДанными Цикл
		Попытка
			СтрВложение.Данные.Получить().Записать(КаталогСохранения + СтрВложение.ИмяФайла);
		Исключение
			Сообщить("Не удалось выгрузить вложение """ + СтрВложение.ИмяФайла + """:
					|" + ИнформацияОбОшибке().Описание, СтатусСообщения.Важное);
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры

Процедура ФайлыСведенийВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	ОткрытьФайлСведений();
	
КонецПроцедуры

Процедура ОткрытьФайлСведений()
	
	ТекСтрока = ЭлементыФормы.ФайлыСведений.ТекущаяСтрока;
	Если ТекСтрока = Неопределено Тогда
		Предупреждение("Выберите файл.");
		Возврат;
	КонецЕсли;
	
	// считываем из ИБ и сохраняем во временный файл
	ИмяФайлаВложения = Неопределено;
	ДанныеФайлаВложения = Неопределено;
	Если НЕ КонтекстЭДО.ПолучитьВложениеНеформализованногоДокумента(Основание, ИмяФайлаВложения, ДанныеФайлаВложения) Тогда
		Предупреждение("Файл сведений не найден.");
		Возврат;
	КонецЕсли;
	
	ВремФайл = ПолучитьИмяВременногоФайла("xml");
	ДанныеФайлаВложения.Получить().Записать(ВремФайл);
	
	// определяем тип файла выгрузки
	РасширениеФайла = КонтекстЭДО.РасширениеФайла(ИмяФайлаВложения);
	Если НРег(РасширениеФайла) = "txt" Тогда
		КонтекстЭДО.ПоказатьТекстИзФайла(ВремФайл, ИмяФайлаВложения);
	Иначе
		КонтекстЭДО.ПоказатьXMLИзФайла(ВремФайл, ИмяФайлаВложения);
	КонецЕсли;
	
	КонтекстЭДО.УдалитьВременныйФайл(ВремФайл);
	
КонецПроцедуры

Перем УзелКритическиеОшибки;
Перем УзелУведомленияОбОшибках;
Перем УзелИзвещенияОбОтказеВПриемеПФР;
Перем УзелПротоколыОтчетов;
Перем УзелПротоколыОтчетовПФР;
Перем УзелПротоколыЗапросов;
Перем УзелНеформализованныеВходящие;
Перем УзелПисьма;
Перем УзелОтветыНаЗапросы;
Перем УзелОтветыНаЗапросы535;
Перем УзелПротоколыОтЭОД;
Перем УзелПротоколы2НДФЛ;
Перем УзелРезультатыПриемаДекларации;
Перем УзелРезультатыПриемаОбращений;
Перем УзелРезультатыОбработкиДекларации;
Перем УзелРассылкаНО;
Перем УзелПисьмаНО;
Перем КрасныйЦвет;
Перем СалатовыйЦвет;
Перем ЗеленыйЦвет;
Перем ТемноЗеленыйЦвет;
Перем БелыйЦвет;
Перем ЦветПоУмолчанию;
Перем ИндексПоТипу;

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если Сообщения.Количество() = 0 Тогда
		Предупреждение("Нет сообщений для отображения!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	// учетную запись определяем из первого сообщения
	УчетнаяЗапись = Сообщения[0].Значение.УчетнаяЗапись;
	
	// оформление формы
	Заголовок = "Сообщения по учетной записи """ + УчетнаяЗапись + """, требующие рассмотрения";
	ЭлементыФормы.НадписьЗаголовок.Заголовок = "Среди полученных по учетной записи """ + УчетнаяЗапись + """ сообщений, были обнаружены сообщения, требующие рассмотрения. Список сообщений приведен ниже.";
	
	// создаем таблицу отображаемых транспортных сообщений
	ТаблицаСообщений = Новый ТаблицаЗначений;
	ТаблицаСообщений.Колонки.Добавить("Сообщение");
	ТаблицаСообщений.Колонки.Добавить("Тип");
	ТаблицаСообщений.Колонки.Добавить("Дата");
	ТаблицаСообщений.Колонки.Добавить("ЦиклОбмена");
	ТаблицаСообщений.Колонки.Добавить("ИндексТипа");
	
	Для Каждого Сообщение Из Сообщения Цикл
		НовСтр = ТаблицаСообщений.Добавить();
		НовСтр.Сообщение = Сообщение.Значение;
		НовСтр.Тип = Сообщение.Значение.Тип;
		НовСтр.Дата = Сообщение.Значение.Дата;
		НовСтр.ЦиклОбмена = Сообщение.Значение.ЦиклОбмена;
		НовСтр.ИндексТипа = ИндексПоТипу[НовСтр.Тип];
	КонецЦикла;
	
	// сортируем сообщения по приоритету и по дате
	ТаблицаСообщений.Сортировать("ИндексТипа, Дата");
	
	// заполняем дерево на форме на основе таблицы сообщений
	Для Каждого СтрокаСообщение Из ТаблицаСообщений Цикл
		Если СтрокаСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.КритическаяОшибка Тогда
			Если УзелКритическиеОшибки = Неопределено Тогда
				УзелКритическиеОшибки = Дерево.Строки.Добавить();
				УзелКритическиеОшибки.Описание = "Критические ошибки";
			КонецЕсли;
			НовСтр = УзелКритическиеОшибки.Строки.Добавить();
			НовСтр.Описание = СтрокаСообщение.ЦиклОбмена;
			НовСтр2 = НовСтр.Строки.Добавить();
			НовСтр2.Описание = СтрокаСообщение.Сообщение;
		ИначеЕсли СтрокаСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.УведомлениеОбОшибкеПФР
		ИЛИ СтрокаСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС Тогда
			Если УзелУведомленияОбОшибках = Неопределено Тогда
				УзелУведомленияОбОшибках = Дерево.Строки.Добавить();
				УзелУведомленияОбОшибках.Описание = "Уведомления об ошибках";
			КонецЕсли;
			НовСтр = УзелУведомленияОбОшибках.Строки.Добавить();
			НовСтр.Описание = СтрокаСообщение.ЦиклОбмена;
			НовСтр2 = НовСтр.Строки.Добавить();
			НовСтр2.Описание = СтрокаСообщение.Сообщение;
		ИначеЕсли СтрокаСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляОтчетности Тогда
			Если УзелПротоколыОтчетов = Неопределено Тогда
				УзелПротоколыОтчетов = Дерево.Строки.Добавить();
				УзелПротоколыОтчетов.Описание = "Отрицательные протоколы входного контроля отчетов";
			КонецЕсли;
			НовСтр = УзелПротоколыОтчетов.Строки.Добавить();
			НовСтр.Описание = СтрокаСообщение.ЦиклОбмена;
			НовСтр2 = НовСтр.Строки.Добавить();
			НовСтр2.Описание = СтрокаСообщение.Сообщение;
		ИначеЕсли СтрокаСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.РезультатПриемаДекларацияНО Тогда
			Если УзелРезультатыПриемаДекларации = Неопределено Тогда
				УзелРезультатыПриемаДекларации = Дерево.Строки.Добавить();
				УзелРезультатыПриемаДекларации.Описание = "Отрицательные результаты приема отчетов";
			КонецЕсли;
			НовСтр = УзелРезультатыПриемаДекларации.Строки.Добавить();
			НовСтр.Описание = СтрокаСообщение.ЦиклОбмена;
			НовСтр2 = НовСтр.Строки.Добавить();
			НовСтр2.Описание = СтрокаСообщение.Сообщение;
		ИначеЕсли СтрокаСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.РезультатПриемаОбращениеНО Тогда
			Если УзелРезультатыПриемаОбращений = Неопределено Тогда
				УзелРезультатыПриемаОбращений = Дерево.Строки.Добавить();
				УзелРезультатыПриемаОбращений.Описание = "Отрицательные результаты приема обращений налогоплательщика";
			КонецЕсли;
			НовСтр = УзелРезультатыПриемаОбращений.Строки.Добавить();
			НовСтр.Описание = СтрокаСообщение.ЦиклОбмена;
			НовСтр2 = НовСтр.Строки.Добавить();
			НовСтр2.Описание = СтрокаСообщение.Сообщение;
		ИначеЕсли СтрокаСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиДекларацияНО Тогда
			Если УзелРезультатыОбработкиДекларации = Неопределено Тогда
				УзелРезультатыОбработкиДекларации = Дерево.Строки.Добавить();
				УзелРезультатыОбработкиДекларации.Описание = "Отрицательные результаты обработки отчетов";
			КонецЕсли;
			НовСтр = УзелРезультатыОбработкиДекларации.Строки.Добавить();
			НовСтр.Описание = СтрокаСообщение.ЦиклОбмена;
			НовСтр2 = НовСтр.Строки.Добавить();
			НовСтр2.Описание = СтрокаСообщение.Сообщение;
		ИначеЕсли СтрокаСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПодтверждениеПолученияОтчетностиПФР Тогда
			Если УзелИзвещенияОбОтказеВПриемеПФР = Неопределено Тогда
				УзелИзвещенияОбОтказеВПриемеПФР = Дерево.Строки.Добавить();
				УзелИзвещенияОбОтказеВПриемеПФР.Описание = "Извещения об отказе в приеме документов ПФР";
			КонецЕсли;
			НовСтр = УзелИзвещенияОбОтказеВПриемеПФР.Строки.Добавить();
			НовСтр.Описание = СтрокаСообщение.ЦиклОбмена;
			НовСтр2 = НовСтр.Строки.Добавить();
			НовСтр2.Описание = СтрокаСообщение.Сообщение;
		ИначеЕсли СтрокаСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПротоколПФР Тогда
			Если УзелПротоколыОтчетовПФР = Неопределено Тогда
				УзелПротоколыОтчетовПФР = Дерево.Строки.Добавить();
				УзелПротоколыОтчетовПФР.Описание = "Отрицательные протоколы входного контроля отчетов из ПФР";
			КонецЕсли;
			НовСтр = УзелПротоколыОтчетовПФР.Строки.Добавить();
			НовСтр.Описание = СтрокаСообщение.ЦиклОбмена;
			НовСтр2 = НовСтр.Строки.Добавить();
			НовСтр2.Описание = СтрокаСообщение.Сообщение;
		ИначеЕсли СтрокаСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляЗапросаИОН Тогда
			Если УзелПротоколыЗапросов = Неопределено Тогда
				УзелПротоколыЗапросов = Дерево.Строки.Добавить();
				УзелПротоколыЗапросов.Описание = "Отрицательные протоколы входного контроля запросов";
			КонецЕсли;
			НовСтр = УзелПротоколыЗапросов.Строки.Добавить();
			НовСтр.Описание = СтрокаСообщение.ЦиклОбмена;
			НовСтр2 = НовСтр.Строки.Добавить();
			НовСтр2.Описание = СтрокаСообщение.Сообщение;
		ИначеЕсли СтрокаСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.НеформализованныйДокументНО Тогда
			Если УзелНеформализованныеВходящие = Неопределено Тогда
				УзелНеформализованныеВходящие = Дерево.Строки.Добавить();
				УзелНеформализованныеВходящие.Описание = "Неформализованные документы налоговых органов";
			КонецЕсли;
			НовСтр = УзелНеформализованныеВходящие.Строки.Добавить();
			НовСтр.Описание = СтрокаСообщение.ЦиклОбмена;
			НовСтр2 = НовСтр.Строки.Добавить();
			НовСтр2.Описание = СтрокаСообщение.Сообщение;
		ИначеЕсли СтрокаСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПисьмоНО Тогда
			Если УзелПисьмаНО = Неопределено Тогда
				УзелПисьмаНО = Дерево.Строки.Добавить();
				УзелПисьмаНО.Описание = "Письма от налоговых органов";
			КонецЕсли;
			НовСтр = УзелПисьмаНО.Строки.Добавить();
			НовСтр.Описание = СтрокаСообщение.ЦиклОбмена;
			НовСтр2 = НовСтр.Строки.Добавить();
			НовСтр2.Описание = СтрокаСообщение.Сообщение;
		ИначеЕсли СтрокаСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.РассылкаНО Тогда
			Если УзелРассылкаНО = Неопределено Тогда
				УзелРассылкаНО = Дерево.Строки.Добавить();
				УзелРассылкаНО.Описание = "Рассылка от налоговых органов";
			КонецЕсли;
			НовСтр = УзелРассылкаНО.Строки.Добавить();
			НовСтр.Описание = СтрокаСообщение.ЦиклОбмена;
			НовСтр2 = НовСтр.Строки.Добавить();
			НовСтр2.Описание = СтрокаСообщение.Сообщение;
		ИначеЕсли СтрокаСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееПФР Тогда
			Если УзелПисьма = Неопределено Тогда
				УзелПисьма = Дерево.Строки.Добавить();
				УзелПисьма.Описание = "Неформализованные сообщения от ПФР";
			КонецЕсли;
			НовСтр = УзелПисьма.Строки.Добавить();
			НовСтр.Описание = СтрокаСообщение.ЦиклОбмена;
			НовСтр2 = НовСтр.Строки.Добавить();
			НовСтр2.Описание = СтрокаСообщение.Сообщение;
		ИначеЕсли СтрокаСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.ОтветНаЗапросИОН Тогда
			Если УзелОтветыНаЗапросы = Неопределено Тогда
				УзелОтветыНаЗапросы = Дерево.Строки.Добавить();
				УзелОтветыНаЗапросы.Описание = "Ответы на запросы на информационное обслуживание";
			КонецЕсли;
			НовСтр = УзелОтветыНаЗапросы.Строки.Добавить();
			НовСтр.Описание = СтрокаСообщение.ЦиклОбмена;
			НовСтр2 = НовСтр.Строки.Добавить();
			НовСтр2.Описание = СтрокаСообщение.Сообщение;
		ИначеЕсли СтрокаСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗапросНО Тогда
			Если УзелОтветыНаЗапросы535 = Неопределено Тогда
				УзелОтветыНаЗапросы535 = Дерево.Строки.Добавить();
				УзелОтветыНаЗапросы535.Описание = "Ответы на запросы на информационное обслуживание";
			КонецЕсли;
			НовСтр = УзелОтветыНаЗапросы535.Строки.Добавить();
			НовСтр.Описание = СтрокаСообщение.ЦиклОбмена;
			НовСтр2 = НовСтр.Строки.Добавить();
			НовСтр2.Описание = СтрокаСообщение.Сообщение;
		ИначеЕсли СтрокаСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.УведомлениеОбУточненииНБО Тогда
			Если УзелПротоколыОтЭОД = Неопределено Тогда
				УзелПротоколыОтЭОД = Дерево.Строки.Добавить();
				УзелПротоколыОтЭОД.Описание = "Уведомления об уточнении отчетности";
			КонецЕсли;
			НовСтр = УзелПротоколыОтЭОД.Строки.Добавить();
			НовСтр.Описание = СтрокаСообщение.ЦиклОбмена;
			НовСтр2 = НовСтр.Строки.Добавить();
			НовСтр2.Описание = СтрокаСообщение.Сообщение;
		ИначеЕсли СтрокаСообщение.Тип = Перечисления.ТипыТранспортныхСообщений.Протокол2НДФЛ Тогда
			Если УзелПротоколы2НДФЛ = Неопределено Тогда
				УзелПротоколы2НДФЛ = Дерево.Строки.Добавить();
				УзелПротоколы2НДФЛ.Описание = "Отрицательные протоколы приема 2-НДФЛ";
			КонецЕсли;
			НовСтр = УзелПротоколы2НДФЛ.Строки.Добавить();
			НовСтр.Описание = СтрокаСообщение.ЦиклОбмена;
			НовСтр2 = НовСтр.Строки.Добавить();
			НовСтр2.Описание = СтрокаСообщение.Сообщение;
		КонецЕсли;
	КонецЦикла;
	
	// если среди исходных сообщений нет сообщений тех типов, отображение которых в форме предусмотрено,
	// то форму показывать не будем
	Если УзелКритическиеОшибки = Неопределено И УзелНеформализованныеВходящие = Неопределено
	   И УзелПротоколыЗапросов = Неопределено И УзелПротоколыОтчетов = Неопределено
	   И УзелОтветыНаЗапросы = Неопределено И УзелПротоколыОтЭОД = Неопределено
	   И УзелПротоколы2НДФЛ = Неопределено И УзелУведомленияОбОшибках = Неопределено
	   И УзелПротоколыОтчетовПФР = Неопределено И УзелПисьма = Неопределено
	   И УзелРезультатыПриемаДекларации = Неопределено И УзелРезультатыОбработкиДекларации = Неопределено
	   И УзелРезультатыПриемаОбращений = Неопределено И УзелОтветыНаЗапросы535 = Неопределено Тогда
		Предупреждение("Нет сообщений для отображения!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	// разворачиваем все строки дерева
	ПервыйЗаход = Истина;
	ЭлементыФормы.Дерево.ВыделенныеСтроки.Очистить();
	Для Каждого Стр Из Дерево.Строки Цикл
		Для Каждого Стр2 Из Стр.Строки Цикл
			Если ПервыйЗаход Тогда
				ПервыйЗаход = Ложь;
				ЭлементыФормы.Дерево.ТекущаяСтрока = Стр2;
			КонецЕсли;
			ЭлементыФормы.Дерево.Развернуть(Стр2);
		КонецЦикла;
		ЭлементыФормы.Дерево.Развернуть(Стр);
	КонецЦикла;
	
КонецПроцедуры

Процедура ДеревоВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТипОписания = ТипЗнч(ВыбраннаяСтрока.Описание);
	Если ТипОписания = Тип("СправочникСсылка.ЦиклыОбмена") ИЛИ ТипОписания = Тип("ДокументСсылка.ТранспортноеСообщение") Тогда
		ОткрытьЗначение(ВыбраннаяСтрока.Описание);
	КонецЕсли;
	
КонецПроцедуры

Процедура ДеревоПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		УровеньСтроки = ОформлениеСтроки.ДанныеСтроки.Уровень();
		Если УровеньСтроки = 0 Тогда
			ДанныеСтроки = ОформлениеСтроки.ДанныеСтроки;
			Если ДанныеСтроки = УзелКритическиеОшибки ИЛИ ДанныеСтроки = УзелУведомленияОбОшибках
			 ИЛИ ДанныеСтроки = УзелПротоколыОтчетов ИЛИ ДанныеСтроки = УзелПротоколыОтчетовПФР
			 ИЛИ ДанныеСтроки = УзелПротоколыЗапросов ИЛИ ДанныеСтроки = УзелПротоколыОтЭОД
			 ИЛИ ДанныеСтроки = УзелРезультатыПриемаДекларации ИЛИ ДанныеСтроки = УзелРезультатыОбработкиДекларации
			 ИЛИ ДанныеСтроки = УзелРезультатыПриемаОбращений ИЛИ ДанныеСтроки = УзелПисьмаНО
			 ИЛИ ДанныеСтроки = УзелРассылкаНО Тогда
				ОформлениеСтроки.ЦветФона = КрасныйЦвет;
				ОформлениеСтроки.ЦветТекста = БелыйЦвет;
			ИначеЕсли ДанныеСтроки = УзелНеформализованныеВходящие ИЛИ ДанныеСтроки = УзелПисьма
			 ИЛИ ДанныеСтроки = УзелОтветыНаЗапросы ИЛИ ДанныеСтроки = УзелОтветыНаЗапросы535 Тогда
				ОформлениеСтроки.ЦветФона = СалатовыйЦвет;
				ОформлениеСтроки.ЦветТекста = ЦветПоУмолчанию;
			КонецЕсли;
		ИначеЕсли УровеньСтроки = 1 Тогда
			ОформлениеСтроки.Ячейки.Описание.УстановитьТекст(ПредставлениеЦиклаОбмена(ОформлениеСтроки.ДанныеСтроки));
		ИначеЕсли УровеньСтроки = 2 Тогда
			ОформлениеСтроки.Ячейки.Описание.УстановитьТекст(ПредставлениеСообщения(ОформлениеСтроки.ДанныеСтроки));
			Если ОформлениеСтроки.ДанныеСтроки.Родитель.Родитель = УзелНеформализованныеВходящие
			ИЛИ ОформлениеСтроки.ДанныеСтроки.Родитель.Родитель = УзелПисьма
			ИЛИ ((ОформлениеСтроки.ДанныеСтроки.Родитель.Родитель = УзелОтветыНаЗапросы ИЛИ ОформлениеСтроки.ДанныеСтроки.Родитель.Родитель = УзелОтветыНаЗапросы535) И НЕ ОформлениеСтроки.ДанныеСтроки.Описание.ПротоколСОшибкой) Тогда
				ОформлениеСтроки.ЦветТекста = ТемноЗеленыйЦвет;
			Иначе
				Если ОформлениеСтроки.ДанныеСтроки.Родитель.Родитель = УзелКритическиеОшибки Тогда
					ОформлениеСтроки.Ячейки.Описание.Картинка = БиблиотекаКартинок.КритическаяОшибка;
				Иначе
					ОформлениеСтроки.Ячейки.Описание.Картинка = БиблиотекаКартинок.ПротоколСОшибкой;
				КонецЕсли;
				ОформлениеСтроки.Шрифт = Новый Шрифт(ОформлениеСтроки.Шрифт, , , Истина);
				ОформлениеСтроки.ЦветТекста = КрасныйЦвет;
				ОформлениеСтроки.Ячейки.Описание.ОтображатьКартинку = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция ПредставлениеЦиклаОбмена(ДанныеСтроки)

	Объект = ДанныеСтроки.Описание;
	Если НЕ ЗначениеЗаполнено(Объект) Тогда
		Возврат "Неопределенный цикл обмена";
	КонецЕсли;
	
	Если ДанныеСтроки.Родитель = УзелКритическиеОшибки Тогда
		Возврат "" + СокрЛП(Объект.Наименование) + " (создан " + Объект.ДатаСоздания + ")";
	ИначеЕсли ДанныеСтроки.Родитель = УзелПротоколыОтчетов ИЛИ ДанныеСтроки.Родитель = УзелПротоколыОтЭОД
	ИЛИ ДанныеСтроки.Родитель = УзелПротоколы2НДФЛ ИЛИ ДанныеСтроки.Родитель = УзелРезультатыПриемаДекларации
	ИЛИ ДанныеСтроки.Родитель = УзелРезультатыОбработкиДекларации Тогда
		Возврат "Отправка " + Объект.ВидОтчета + " (" + РегламентированнаяОтчетность.ПредставлениеВидаДокумента(Объект.ВидДокумента) + ") за " + ПредставлениеПериода(НачалоДня(Объект.ДатаНачалаПериода), КонецДня(Объект.ДатаОкончанияПериода), "ФП=Истина")
				+ Символы.ПС + Объект.Наименование + " (создан " + Объект.ДатаСоздания + ")";;
	ИначеЕсли ДанныеСтроки.Родитель = УзелПротоколыЗапросов Тогда
		Возврат "" + Объект.ВидУслуги
				+ " (" + Объект.ФорматОтвета + ") за " + ПредставлениеПериода(НачалоДня(Объект.ДатаНачалаПериода), КонецДня(Объект.ДатаОкончанияПериода), "ФП=Истина")
				+ Символы.ПС + Объект.Наименование + " (создан " + Объект.ДатаСоздания + ")";;
	ИначеЕсли ДанныеСтроки.Родитель = УзелНеформализованныеВходящие Тогда
		Возврат "" + СокрЛП(Объект.Наименование);
	ИначеЕсли ДанныеСтроки.Родитель = УзелПисьмаНО Тогда
		Возврат "" + СокрЛП(Объект.Наименование);
	ИначеЕсли ДанныеСтроки.Родитель = УзелРассылкаНО Тогда
		Возврат "" + СокрЛП(Объект.Наименование);
	ИначеЕсли ДанныеСтроки.Родитель = УзелПисьма Тогда
		Возврат "" + СокрЛП(Объект.Наименование);
	ИначеЕсли ДанныеСтроки.Родитель = УзелРезультатыПриемаОбращений Тогда
		Возврат "" + СокрЛП(Объект.Наименование);
	ИначеЕсли ДанныеСтроки.Родитель = УзелОтветыНаЗапросы ИЛИ ДанныеСтроки.Родитель = УзелОтветыНаЗапросы535 Тогда
		Возврат "" + Объект.ВидУслуги + " за " + ПредставлениеПериода(НачалоДня(Объект.ДатаНачалаПериода), КонецДня(Объект.ДатаОкончанияПериода), "ФП=Истина")
				+ Символы.ПС + " в формате " + Объект.ФорматОтвета + " (создан " + Объект.ДатаСоздания + ")";
	ИначеЕсли ДанныеСтроки.Родитель = УзелУведомленияОбОшибках ИЛИ ДанныеСтроки.Родитель = УзелПротоколыОтчетовПФР Тогда
		Если ТипЗнч(Объект.Предмет) = Тип("ДокументСсылка.РегламентированныйОтчет") Тогда
			Возврат "Отправка " + РегламентированнаяОтчетность.ПредставлениеДокументаРеглОтч(Объект.Предмет) + " (создана " + Объект.ДатаСоздания + ")";
		Иначе
			Возврат "Отправка " + Объект.Предмет + " (создана " + Объект.ДатаСоздания + ")";
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция ПредставлениеСообщения(ДанныеСтроки)
	
	Объект = ДанныеСтроки.Описание;
	Возврат СокрЛП(Объект.Тема) + " (от " + Формат(Объект.Дата, "ДФ='dd.MM.yyyy HH:mm:ss'") + ")";
	
КонецФункции

Процедура ДеревоПриАктивизацииСтроки(Элемент)
	
	ТекСтрока = ЭлементыФормы.Дерево.ТекущаяСтрока;
	Если ТекСтрока = Неопределено Тогда
		ЭлементыФормы.НадписьОписание.Заголовок = "";
		Возврат;
	КонецЕсли;
	
	ТекУровень = ТекСтрока.Уровень();
	Если ТекУровень = 0 Тогда
		СоответствиеГруппыПодсказке = Новый Соответствие;
		СоответствиеГруппыПодсказке.Вставить(УзелКритическиеОшибки, "сообщения о критических ошибках.");
		СоответствиеГруппыПодсказке.Вставить(УзелУведомленияОбОшибках, "уведомления об ошибках.");
		СоответствиеГруппыПодсказке.Вставить(УзелПротоколыОтчетов, "сообщения с отрицательными протоколами входного контроля отчетов.");
		СоответствиеГруппыПодсказке.Вставить(УзелПротоколыОтчетовПФР, "сообщения с отрицательными протоколами входного контроля отчетов из ПФР.");
		СоответствиеГруппыПодсказке.Вставить(УзелПротоколыОтЭОД, "уведомления об уточнении отчетности.");
		СоответствиеГруппыПодсказке.Вставить(УзелПротоколы2НДФЛ, "протоколы приема 2-НДФЛ.");
		СоответствиеГруппыПодсказке.Вставить(УзелПротоколыЗапросов, "сообщения с отрицательными протоколами входного контроля запросов.");
		СоответствиеГруппыПодсказке.Вставить(УзелНеформализованныеВходящие, "неформализованные документы от налогового органа.");
		СоответствиеГруппыПодсказке.Вставить(УзелПисьма, "неформализованные сообщения от ПФР.");
		СоответствиеГруппыПодсказке.Вставить(УзелОтветыНаЗапросы, "ответы налогового органа на запросы на информационное обслуживание.");
		СоответствиеГруппыПодсказке.Вставить(УзелОтветыНаЗапросы535, "ответы на запросы на информационное обслуживание.");
		СоответствиеГруппыПодсказке.Вставить(УзелРезультатыПриемаДекларации, "результаты приема отчетов.");
		СоответствиеГруппыПодсказке.Вставить(УзелРезультатыОбработкиДекларации, "результаты обработки отчетов.");
		ЭлементыФормы.НадписьОписание.Заголовок = "Группа содержит " + СоответствиеГруппыПодсказке[ТекСтрока];
	ИначеЕсли ТекУровень = 1 Тогда
		ЭлементыФормы.НадписьОписание.Заголовок = "Цикл обмена, которому принадлежит полученное сообщение.
												   |Само сообщение располагается на нижнем уровне.";
	ИначеЕсли ТекУровень = 2 Тогда
		СоответствиеГруппыПодсказке = Новый Соответствие;
		СоответствиеГруппыПодсказке.Вставить(УзелКритическиеОшибки, "описание критической ошибки.");
		СоответствиеГруппыПодсказке.Вставить(УзелПротоколыОтчетов, "отрицательный протокол входного контроля отчета.");
		СоответствиеГруппыПодсказке.Вставить(УзелПротоколыОтчетовПФР, "отрицательный протокол входного контроля отчета из ПФР.");
		СоответствиеГруппыПодсказке.Вставить(УзелПротоколыОтЭОД, "уведомление об уточнении отчета.");
		СоответствиеГруппыПодсказке.Вставить(УзелПротоколы2НДФЛ, "протокол приема 2-НДФЛ.");
		СоответствиеГруппыПодсказке.Вставить(УзелПротоколыЗапросов, "отрицательный протокол входного контроля запроса на информационное обслуживание.");
		СоответствиеГруппыПодсказке.Вставить(УзелНеформализованныеВходящие, "неформализованный документ налогового органа.");
		СоответствиеГруппыПодсказке.Вставить(УзелПисьма, "неформализованные сообщения от ПФР.");
		СоответствиеГруппыПодсказке.Вставить(УзелОтветыНаЗапросы, "ответ налогового органа на запрос на информационное обслуживание.");
		СоответствиеГруппыПодсказке.Вставить(УзелОтветыНаЗапросы535, "ответ на запрос на информационное обслуживание.");
		СоответствиеГруппыПодсказке.Вставить(УзелРезультатыПриемаДекларации, "результат приема отчета.");
		СоответствиеГруппыПодсказке.Вставить(УзелРезультатыОбработкиДекларации, "результат обработки отчета.");
		ЭлементыФормы.НадписьОписание.Заголовок = "Сообщение, содержащее " + СоответствиеГруппыПодсказке[ТекСтрока.Родитель.Родитель];
	КонецЕсли;
	
КонецПроцедуры

КрасныйЦвет			= Новый Цвет(255,	0,		0);
СалатовыйЦвет		= Новый Цвет(204,	255,	204);
БелыйЦвет			= Новый Цвет(255,	255,	255);
ЗеленыйЦвет			= Новый Цвет(0,		255,	0);
ТемноЗеленыйЦвет	= Новый Цвет(51,	153,	102);
ЦветПоУмолчанию		= Новый Цвет;

ИндексПоТипу = Новый Соответствие;
ИндексПоТипу.Вставить(Перечисления.ТипыТранспортныхСообщений.КритическаяОшибка,						0);
ИндексПоТипу.Вставить(Перечисления.ТипыТранспортныхСообщений.УведомлениеОбОшибкеПФР,				0);
ИндексПоТипу.Вставить(Перечисления.ТипыТранспортныхСообщений.УведомлениеОбОшибкеФНС,				0);
ИндексПоТипу.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиДекларацияНО,		1);
ИндексПоТипу.Вставить(Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляОтчетности,	2);
ИндексПоТипу.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаДекларацияНО,			2);
ИндексПоТипу.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатПриемаОбращениеНО,			3);
ИндексПоТипу.Вставить(Перечисления.ТипыТранспортныхСообщений.ПодтверждениеПолученияОтчетностиПФР,	3);
ИндексПоТипу.Вставить(Перечисления.ТипыТранспортныхСообщений.ПротоколПФР,							4);
ИндексПоТипу.Вставить(Перечисления.ТипыТранспортныхСообщений.УведомлениеОбУточненииНБО,				5);
ИндексПоТипу.Вставить(Перечисления.ТипыТранспортныхСообщений.Протокол2НДФЛ,							6);
ИндексПоТипу.Вставить(Перечисления.ТипыТранспортныхСообщений.ПротоколВходногоКонтроляЗапросаИОН,	7);
ИндексПоТипу.Вставить(Перечисления.ТипыТранспортныхСообщений.НеформализованныйДокументНО,			8);
ИндексПоТипу.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоНО,								8);
ИндексПоТипу.Вставить(Перечисления.ТипыТранспортныхСообщений.РассылкаНО,							8);
ИндексПоТипу.Вставить(Перечисления.ТипыТранспортныхСообщений.ПисьмоВходящееПФР,						9);
ИндексПоТипу.Вставить(Перечисления.ТипыТранспортныхСообщений.ОтветНаЗапросИОН,						10);
ИндексПоТипу.Вставить(Перечисления.ТипыТранспортныхСообщений.РезультатОбработкиЗапросНО,			10);

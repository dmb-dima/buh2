Перем НомерКартинкиПоСтатусу;

Процедура ОсновныеДействияФормыПродолжить(Кнопка)
	
	ВыбранныйОтчет = Неопределено;
	
	ВыбраннаяСтрока = ЭлементыФормы.ЖурналОтчетов.ТекущаяСтрока;
	Если ВыбраннаяСтрока <> Неопределено Тогда
		ВыбранныйОтчет = ВыбраннаяСтрока.Ссылка;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВыбранныйОтчет) Тогда
		Предупреждение("Не выбран документ!");
		Возврат;
	КонецЕсли;
	
	Закрыть(ВыбранныйОтчет);
	
КонецПроцедуры

Процедура ОсновныеДействияФормыОтмена(Кнопка)
	
	Закрыть();
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	// 
	Если НЕ ЗначениеЗаполнено(НачальноеЗначениеВыбора) Тогда
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Удалить(ЭлементыФормы.ОсновныеДействияФормы.Кнопки.УдалитьПривязку);
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Удалить(ЭлементыФормы.ОсновныеДействияФормы.Кнопки.РазделительУдалитьПривязку);
	Иначе
		ЭлементыФормы.ЖурналОтчетов.ТекущаяСтрока = НачальноеЗначениеВыбора;
	КонецЕсли;
	
	// 
	ЖурналОтчетов.Отбор.Организация.Установить(Организация);
	
	ЖурналОтчетов.Отбор.ДатаНачала.Использование = Истина;
	ЖурналОтчетов.Отбор.ДатаНачала.ВидСравнения = ВидСравнения.ИнтервалВключаяГраницы;
	ЖурналОтчетов.Отбор.ДатаНачала.ЗначениеС = НачалоДня(ДатаНачалаПериода);
	ЖурналОтчетов.Отбор.ДатаНачала.ЗначениеПо = КонецДня(ДатаНачалаПериода);
	
	ЖурналОтчетов.Отбор.ДатаОкончания.Использование = Истина;
	ЖурналОтчетов.Отбор.ДатаОкончания.ВидСравнения = ВидСравнения.ИнтервалВключаяГраницы;
	ЖурналОтчетов.Отбор.ДатаОкончания.ЗначениеС = НачалоДня(ДатаОкончанияПериода);
	ЖурналОтчетов.Отбор.ДатаОкончания.ЗначениеПо = КонецДня(ДатаОкончанияПериода);
	
	ЖурналОтчетов.Отбор.ИсточникОтчета.Установить("РегламентированныйОтчетРСВ1");
	
КонецПроцедуры

Процедура ЖурналОтчетовПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Ссылки = Новый Массив;
	Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		ОформлениеСтроки.Ячейки.Период.УстановитьТекст(ПредставлениеПериода(ОформлениеСтроки.ДанныеСтроки.ДатаНачала, КонецДня(ОформлениеСтроки.ДанныеСтроки.ДатаОкончания), "ФП=Истина"));
		Ссылки.Добавить(ОформлениеСтроки.ДанныеСтроки.Ссылка);
	КонецЦикла;
	
	СоответствиеОтчетовСтатусам = Новый Соответствие;
	
	Запрос = Новый Запрос;
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВложенныйЗапрос.ОтчетСсылка КАК Отчет,
	|	ОтправкиФСС.СтатусОтправки КАК Статус
	|ПОМЕСТИТЬ втОтправкиФСС
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОтправкиФСС.ОтчетСсылка КАК ОтчетСсылка,
	|		МАКСИМУМ(ОтправкиФСС.ДатаОтправки) КАК ДатаОтправки
	|	ИЗ
	|		Справочник.ОтправкиФСС КАК ОтправкиФСС
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ОтправкиФСС.ОтчетСсылка) КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОтправкиФСС КАК ОтправкиФСС
	|		ПО (ОтправкиФСС.ОтчетСсылка = ВложенныйЗапрос.ОтчетСсылка)
	|			И (ОтправкиФСС.ДатаОтправки = ВложенныйЗапрос.ДатаОтправки)";
	Запрос.Выполнить();
	
	Если ПравоДоступа("Чтение", Метаданные.РегистрыСведений.СтатусыОтправки) Тогда
	
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	РегламентированныйОтчет.Ссылка КАК Отчет,
		               |	ВЫБОР
		               |		КОГДА СтатусыРегламентированныхОтчетов.Статус = &СтатусПодготовлен
		               |			ТОГДА ВЫБОР
		               |					КОГДА ЕСТЬNULL(СтатусыОтправки.Статус, ИСТИНА) = ИСТИНА
		               |							ИЛИ СтатусыОтправки.Статус = &ПустойСтатусОтправки
		               |						ТОГДА ВЫБОР
		               |								КОГДА ЕСТЬNULL(втОтправкиФСС.Статус, ИСТИНА) = ИСТИНА
		               |									ТОГДА &СтатусПодготовлен
		               |								ИНАЧЕ втОтправкиФСС.Статус
		               |							КОНЕЦ
		               |					ИНАЧЕ СтатусыОтправки.Статус
		               |				КОНЕЦ
		               |		ИНАЧЕ СтатусыРегламентированныхОтчетов.Статус
		               |	КОНЕЦ КАК РезультирующийСтатус
		               |ИЗ
		               |	Документ.РегламентированныйОтчет КАК РегламентированныйОтчет
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыОтправки КАК СтатусыОтправки
		               |		ПО РегламентированныйОтчет.Ссылка = СтатусыОтправки.Объект
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыРегламентированныхОтчетов КАК СтатусыРегламентированныхОтчетов
		               |		ПО РегламентированныйОтчет.Ссылка = СтатусыРегламентированныхОтчетов.Отчет
		               |		ЛЕВОЕ СОЕДИНЕНИЕ втОтправкиФСС КАК втОтправкиФСС
		               |		ПО РегламентированныйОтчет.Ссылка = втОтправкиФСС.Отчет
		               |ГДЕ
		               |	РегламентированныйОтчет.Ссылка В(&Отчеты)";
		
		Запрос.УстановитьПараметр("СтатусСдан", Перечисления.СтатусыРегламентированныхОтчетов.Сдан);
		Запрос.УстановитьПараметр("СтатусПодготовлен", Перечисления.СтатусыРегламентированныхОтчетов.Подготовлен);
		Запрос.УстановитьПараметр("ПустойСтатусОтправки", Перечисления.СтатусыОтправки.ПустаяСсылка());
		Запрос.УстановитьПараметр("Отчеты", Ссылки);
		
	Иначе
		
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РегламентированныйОтчет.Ссылка КАК Отчет,
		|	ВЫБОР
		|		КОГДА СтатусыРегламентированныхОтчетов.Статус = &СтатусПодготовлен
		|			ТОГДА ВЫБОР
		|					КОГДА ЕСТЬNULL(втОтправкиФСС.Статус, ИСТИНА) = ИСТИНА
		|						ТОГДА &СтатусПодготовлен
		|					ИНАЧЕ втОтправкиФСС.Статус
		|				КОНЕЦ
		|		ИНАЧЕ СтатусыРегламентированныхОтчетов.Статус КОНЕЦ КАК РезультирующийСтатус
		|ИЗ
		|	Документ.РегламентированныйОтчет КАК РегламентированныйОтчет
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыРегламентированныхОтчетов КАК СтатусыРегламентированныхОтчетов
		|		ПО РегламентированныйОтчет.Ссылка = СтатусыРегламентированныхОтчетов.Отчет
		|		ЛЕВОЕ СОЕДИНЕНИЕ втОтправкиФСС
		|		ПО РегламентированныйОтчет.Ссылка = втОтправкиФСС.Отчет
		|ГДЕ
		|	РегламентированныйОтчет.Ссылка В(&Отчеты)";
		
		Запрос.УстановитьПараметр("СтатусСдан", Перечисления.СтатусыРегламентированныхОтчетов.Сдан);
		Запрос.УстановитьПараметр("СтатусПодготовлен", Перечисления.СтатусыРегламентированныхОтчетов.Подготовлен);
		Запрос.УстановитьПараметр("Отчеты", Ссылки);
		
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СоответствиеОтчетовСтатусам.Вставить(Выборка.Отчет, Выборка.РезультирующийСтатус);
	КонецЦикла;
	
	Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		ИндексКартинки = НомерКартинкиПоСтатусу[СоответствиеОтчетовСтатусам[ОформлениеСтроки.ДанныеСтроки.Ссылка]];
		Если ИндексКартинки = Неопределено Тогда
			ИндексКартинки = 0;
		КонецЕсли;
		ОформлениеСтроки.Ячейки.Статус.ИндексКартинки = ИндексКартинки + Число(ОформлениеСтроки.ДанныеСтроки.ПометкаУдаления = Истина) * 7;
		ОформлениеСтроки.Ячейки.Статус.ОтображатьКартинку = Истина;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЖурналОтчетовПриАктивизацииСтроки(Элемент)
	
	ЭлементыФормы.КоманднаяПанельЖурналОтчетов.Кнопки.Открыть.Доступность = (Элемент.ТекущаяСтрока <> Неопределено);
	ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Продолжить.Доступность = (Элемент.ТекущаяСтрока <> Неопределено);
	
КонецПроцедуры

Процедура КоманднаяПанельЖурналОтчетовОткрыть(Кнопка)
	
	ТекСтрока = ЭлементыФормы.ЖурналОтчетов.ТекущаяСтрока;
	Если ТекСтрока <> Неопределено Тогда
		ОткрытьЗначение(ТекСтрока);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОсновныеДействияФормыУдалитьПривязку(Кнопка)
	
	Закрыть(Документы.РегламентированныйОтчет.ПустаяСсылка());
	
КонецПроцедуры

ЖурналОтчетов.Колонки.Добавить("ДатаНачала");
ЖурналОтчетов.Колонки.Добавить("ДатаОкончания");
ЖурналОтчетов.Колонки.Добавить("ИсточникОтчета");

НомерКартинкиПоСтатусу = Новый Соответствие;
НомерКартинкиПоСтатусу.Вставить(Перечисления.СтатусыРегламентированныхОтчетов.ВРаботе, 0);
НомерКартинкиПоСтатусу.Вставить(Перечисления.СтатусыРегламентированныхОтчетов.Подготовлен, 1);
НомерКартинкиПоСтатусу.Вставить(Перечисления.СтатусыОтправки.ВКонверте, 2);
НомерКартинкиПоСтатусу.Вставить(Перечисления.СтатусыОтправки.Отправлен, 3);
НомерКартинкиПоСтатусу.Вставить(Перечисления.СтатусыОтправки.Доставлен, 4);
НомерКартинкиПоСтатусу.Вставить(Перечисления.СтатусыОтправки.НеПринят, 5);
НомерКартинкиПоСтатусу.Вставить(Перечисления.СтатусыОтправки.Сдан, 6);
НомерКартинкиПоСтатусу.Вставить(Перечисления.СтатусыРегламентированныхОтчетов.Сдан, 6);

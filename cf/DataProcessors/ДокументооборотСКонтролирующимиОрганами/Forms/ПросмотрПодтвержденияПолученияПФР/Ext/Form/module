
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Заголовок = "Подтверждение получения " + ИмяФайла;
	
	// считываем текст из файла уведомления
	Попытка
		ЧтениеТекста = Новый ЧтениеТекста;
		ЧтениеТекста.Открыть(ПодтверждениеПолучения);
		СтрокаXML = ЧтениеТекста.Прочитать();
		ЧтениеТекста.Закрыть();
	Исключение
		Отказ = Истина;
		Предупреждение("Ошибка чтения содержимого подтверждения из файла:
						|
						|" + ИнформацияОбОшибке().Описание);
		Возврат;
	КонецПопытки;
	
	// загружаем XML из строки в дерево
	ДеревоXML = КонтекстЭДО.ЗагрузитьСтрокуXMLВДеревоЗначений(СтрокаXML);
	Если ДеревоXML = Неопределено Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	// определяем дату-время получения
	УзлыДатаВремяПолучения = ДеревоXML.Строки.НайтиСтроки(Новый Структура("Имя, Тип", "датаВремяПолучения", "Э"), Истина);
	Если УзлыДатаВремяПолучения.Количество() = 0 Тогда
		ДатаВремяПолучения = "";
	Иначе
		ДатаВремяПолучения = Формат(ДатаВремяИзСтрокиXML(УзлыДатаВремяПолучения[0].Значение), "ДЛФ=DDT; ДП=-");
	КонецЕсли;
	
	// определяем регистрационный номер организации
	УзлыРегистрационныйНомерОрганизации = ДеревоXML.Строки.НайтиСтроки(Новый Структура("Имя, Тип", "регистрационныйНомерОрганизации", "Э"), Истина);
	Если УзлыРегистрационныйНомерОрганизации.Количество() = 0 Тогда
		РегистрационныйНомерОрганизации = "";
	Иначе
		РегистрационныйНомерОрганизации = УзлыРегистрационныйНомерОрганизации[0].Значение;
	КонецЕсли;
	
	// определяем, представлен ли отчет и заполняем связанные реквизиты, если не представлен
	УзлыОтчетПредставлен = ДеревоXML.Строки.НайтиСтроки(Новый Структура("Имя, Тип", "отчетПредставлен", "Э"), Истина);
	Если УзлыОтчетПредставлен.Количество() = 0 Тогда
		ОтчетПредставлен = "";
		ЭлементыФормы.ПанельОтчетПредставлен.Свертка = РежимСверткиЭлементаУправления.Верх;
		ЭлементыФормы.ПанельПричинаОтказаВПриеме.Свертка = РежимСверткиЭлементаУправления.Верх;
		ЭлементыФормы.ПанельПротоколы.Свертка = РежимСверткиЭлементаУправления.Верх;
	Иначе
		
		ЗначениеСтр = УзлыОтчетПредставлен[0].Значение;
		БулевоОтчетПредставлен = XMLЗначение(Тип("Булево"), ЗначениеСтр);
		ОтчетПредставлен = ?(БулевоОтчетПредставлен, "Да", "Нет");
		Если НЕ БулевоОтчетПредставлен Тогда
			ЭлементыФормы.НадписьОтчетПредставлен.ЦветТекста = Новый Цвет(255, 0, 0);
		КонецЕсли;
		ЭлементыФормы.ПанельОтчетПредставлен.Свертка = РежимСверткиЭлементаУправления.Нет;
		
		// если отчет не представлен, то выводим причину отказа в приеме
		Если НЕ БулевоОтчетПредставлен Тогда
			УзлыПричинаОтказа = ДеревоXML.Строки.НайтиСтроки(Новый Структура("Имя, Тип", "причинаОтказа", "Э"), Истина);
			Если УзлыПричинаОтказа.Количество() = 0 Тогда
				ЭлементыФормы.ПанельПричинаОтказаВПриеме.Свертка = РежимСверткиЭлементаУправления.Верх;
			Иначе
				СтрПричинаОтказа = УзлыПричинаОтказа[0].Значение;
				Если СтрПричинаОтказа = "несоответствиеФормату" Тогда
					ПричинаОтказаВПриеме = "Полученный документ не соответствует формату.";
				ИначеЕсли СтрПричинаОтказа = "отсутствиеПолномочий" Тогда
					ПричинаОтказаВПриеме = "У подписанта документа отсутствуют соответствующие полномочия.";
				ИначеЕсли СтрПричинаОтказа = "ошибкаЭЦП" Тогда
					ПричинаОтказаВПриеме = "Ошибка при контроле электронно-цифровой подписи.";
				Иначе
					ПричинаОтказаВПриеме = СтрПричинаОтказа;
				КонецЕсли;
				ЭлементыФормы.ПанельПричинаОтказаВПриеме.Свертка = РежимСверткиЭлементаУправления.Нет;
			КонецЕсли;
		КонецЕсли;
		
		// находим информацию о приложениях в XML
		УзлыПодтверждениеПриложения = ДеревоXML.Строки.НайтиСтроки(Новый Структура("Имя, Тип", "подтверждениеПриложения", "Э"), Истина);
		Если УзлыПодтверждениеПриложения.Количество() > 0 Тогда
			
			УзелПодтверждениеПриложения = УзлыПодтверждениеПриложения[0];
			
			// перебираем приложения
			УзлыПриложение = УзелПодтверждениеПриложения.Строки.НайтиСтроки(Новый Структура("Имя", "приложение"));
			Если УзлыПриложение.Количество() > 0 Тогда
				
				Для Каждого УзелПриложение Из УзлыПриложение Цикл
					
					// находим подчиненный узел имяФайла
					УзелИмяФайла = УзелПриложение.Строки.Найти("имяФайла");
					УзелИдентификаторДокумента = УзелПриложение.Строки.Найти("идентификаторДокумента");
					Если УзелИмяФайла = Неопределено ИЛИ УзелИдентификаторДокумента = Неопределено Тогда
						Продолжить;
					КонецЕсли;
					
					СтрПротокол = Протоколы.Добавить();
					СтрПротокол.ИмяФайла = УзелИмяФайла.Значение;
					СтрПротокол.Идентификатор = УзелИдентификаторДокумента.Значение;
					
				КонецЦикла;
				
			КонецЕсли;
			
			ЭлементыФормы.ПанельПротоколы.Свертка = РежимСверткиЭлементаУправления.Нет;
			
		Иначе
			
			ЭлементыФормы.ПанельПротоколы.Свертка = РежимСверткиЭлементаУправления.Верх;
			
		КонецЕсли;
		
	КонецЕсли;
	
	// находим информацию о пачках в XML
	УзлыОписаниеПачек = ДеревоXML.Строки.НайтиСтроки(Новый Структура("Имя, Тип", "описаниеПачек", "Э"), Истина);
	Если УзлыОписаниеПачек.Количество() > 0 Тогда
		
		УзелОписаниеПачек = УзлыОписаниеПачек[0];
		
		// перебираем пачки
		УзлыПачка = УзелОписаниеПачек.Строки.НайтиСтроки(Новый Структура("Имя", "пачка"));
		Если УзлыПачка.Количество() > 0 Тогда
			
			СтрПачки = Содержимое.Строки.Добавить();
			СтрПачки.Имя = "Пачки (" + Формат(УзлыПачка.Количество(), "ЧГ=") + "):";
			
			Для Каждого УзелПачка Из УзлыПачка Цикл
				
				СтрПачка = СтрПачки.Строки.Добавить();
				
				// находим подчиненный узел имяФайла
				УзелИмяФайла = УзелПачка.Строки.Найти("имяФайла");
				Если УзелИмяФайла <> Неопределено Тогда
					СтрПачка.Имя = УзелИмяФайла.Значение;
				КонецЕсли;
				
				// находим подчиненный узел идентификаторДокумента
				УзелИдентификаторДокумента = УзелПачка.Строки.Найти("идентификаторДокумента");
				Если УзелИдентификаторДокумента <> Неопределено Тогда
					СтрПачка.Идентификатор = УзелИдентификаторДокумента.Значение;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	// находим информацию о приложениях в XML
	УзлыОписаниеПриложений = ДеревоXML.Строки.НайтиСтроки(Новый Структура("Имя, Тип", "описаниеПриложений", "Э"), Истина);
	Если УзлыОписаниеПриложений.Количество() > 0 Тогда
		
		УзелОписаниеПриложений = УзлыОписаниеПриложений[0];
		
		// перебираем приложения
		УзлыПриложение = УзелОписаниеПриложений.Строки.НайтиСтроки(Новый Структура("Имя", "приложение"));
		Если УзлыПриложение.Количество() > 0 Тогда
			
			СтрПриложения = Содержимое.Строки.Добавить();
			СтрПриложения.Имя = "Приложения (" + Формат(УзлыПриложение.Количество(), "ЧГ=") + "):";
			
			Для Каждого УзелПриложение Из УзлыПриложение Цикл
				
				СтрПриложение = СтрПриложения.Строки.Добавить();
				
				// находим подчиненный узел имяФайла
				УзелИмяФайла = УзелПриложение.Строки.Найти("имяФайла");
				Если УзелИмяФайла <> Неопределено Тогда
					СтрПриложение.Имя = УзелИмяФайла.Значение;
				КонецЕсли;
				
				// находим подчиненный узел идентификаторДокумента
				УзелИдентификаторДокумента = УзелПриложение.Строки.Найти("идентификаторДокумента");
				Если УзелИдентификаторДокумента <> Неопределено Тогда
					СтрПриложение.Идентификатор = УзелИдентификаторДокумента.Значение;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ДатаВремяИзСтрокиXML(ЗначениеСтр)
	
	Попытка
		Возврат XMLЗначение(Тип("Дата"), ЗначениеСтр);
	Исключение
		Возврат '00010101';
	КонецПопытки;
	
КонецФункции

Процедура СодержимоеПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		
		Если ОформлениеСтроки.ДанныеСтроки.Уровень() = 0 Тогда
			ОформлениеСтроки.Шрифт = Новый Шрифт(ОформлениеСтроки.Шрифт, , , Истина);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПротоколыВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ИмяФайлаДокумента = ВыбраннаяСтрока.ИмяФайла;
	
	Вложения = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(Сообщение, Истина, , ИмяФайлаДокумента);
	Если Вложения.Количество() = 0 Тогда
		Предупреждение("Документ не найден.");
		Возврат;
	КонецЕсли;
	
	КонтекстЭДО.ПоказатьПриложениеПФР(Вложения[0]);
	
КонецПроцедуры

Процедура СодержимоеВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	УровеньСтроки = ВыбраннаяСтрока.Уровень();
	Если УровеньСтроки = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ИмяФайлаДокумента = ВыбраннаяСтрока.Имя;
	
	Вложения = КонтекстЭДО.ПолучитьВложенияТранспортногоСообщения(Сообщение, Истина, , ИмяФайлаДокумента);
	Если Вложения.Количество() = 0 Тогда
		//Предупреждение("Документ не найден.");
		Возврат;
	КонецЕсли;
	
	КонтекстЭДО.ПоказатьПриложениеПФР(Вложения[0]);
	
КонецПроцедуры

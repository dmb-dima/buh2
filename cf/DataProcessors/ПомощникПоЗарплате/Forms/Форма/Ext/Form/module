Перем мСостояниеОпераций;
Перем мПолноеДерево Экспорт;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
Функция ОпределениеСхемы(Орг)
	
	// очистка от предыдущего заполнения
	ЭлементыФормы.ПланВыполненияСхема.Очистить();
	
	Макет = ПолучитьМакет("Макет");
	ОбластьСхема = Макет.ПолучитьОбласть("Кадры");
	ЭлементыФормы.ПланВыполненияСхема.Вывести(ОбластьСхема);
	
	// учетная политика
	Отказ = Ложь;
	УчПолит = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(ТекущаяДата(), Отказ, Орг, "Нал");
	Если не ?(НЕ ЗначениеЗаполнено(УчПолит), Ложь, УчПолит.Свойство("ОрганизацияЯвляетсяПлательщикомЕНВД")) Тогда // учетная политика не заполнена
		УчетнаяПолитикаЕНВД = Истина;
		ОбластьСхема = Макет.ПолучитьОбласть("ЕНВДСхема");
		
	ИначеЕсли УчПолит.ОрганизацияЯвляетсяПлательщикомЕНВД Тогда
		УчетнаяПолитикаЕНВД = Истина;
		
		ОбластьСхема = Макет.ПолучитьОбласть("ЕНВДСхема");
	Иначе
		УчетнаяПолитикаЕНВД = Ложь;
		ОбластьСхема = Макет.ПолучитьОбласть("НеЕНВДСхема");
	КонецЕсли;
	
	ЭлементыФормы.ПланВыполненияСхема.Вывести(ОбластьСхема);
	
	//////////////////////////////////////////////////////////////////////
	// теперьвыведем таблицы
	// Определение параметров документов
	
	// Картинки
	ОбластьКартинкаПроведен		 = Макет.ПолучитьОбласть("СтрокаПрием|Картинка");
	ОбластьКартинкаЗаписан		 = Макет.ПолучитьОбласть("СтрокаПеремещение|Картинка");
	ОбластьКартинкаОтсутствует	 = Макет.ПолучитьОбласть("СтрокаУвольнение|Картинка");
	
	// шапка кадров
	ОбластьШапкаКадров = Макет.ПолучитьОбласть("ШапкаКадров");
	ЭлементыФормы.ПланВыполненияСхема.Вывести(ОбластьШапкаКадров);
	
	// прием
	
	ОбластьСтроки = Макет.ПолучитьОбласть("СтрокаПрием|ДоКартинки");
	ЭлементыФормы.ПланВыполненияСхема.Вывести(ОбластьСтроки);
	ОбластьСтроки = Макет.ПолучитьОбласть("СтрокаПрием|ПослеКартинки");

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Орг" , Орг);
		
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	Документ.Ссылка,
	|	Документ.Проведен,
	|	Документ.Представление
	|ИЗ
	|	Документ.ПриемНаРаботуВОрганизацию КАК Документ
	|ГДЕ
	|	Документ.Организация = &Орг
	|
	|УПОРЯДОЧИТЬ ПО
	|	Документ.Дата УБЫВ,
	|	Документ.Номер УБЫВ";
	Выборка = Запрос.Выполнить().Выбрать();

	Если Выборка.Следующий() Тогда
		
		Если Выборка.Проведен Тогда
			ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьКартинкаПроведен);
			ОбластьСтроки.Параметры.ПриемСтатус	 = "Действует (проведен)";
		Иначе
			ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьКартинкаЗаписан);
			ОбластьСтроки.Параметры.ПриемСтатус	 = "Не действует (записан)";
		КонецЕсли;
		ОбластьСтроки.Параметры.ПриемДокумент		 = Выборка.Представление;
		ОбластьСтроки.Параметры.ПриемРасшифровка	 = Выборка.Ссылка;
		ДокументВНаличии = Истина;
	Иначе
		ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьКартинкаОтсутствует);
		ОбластьСтроки.Параметры.ПриемДокумент		 = "";
		ОбластьСтроки.Параметры.ПриемСтатус			 = " - ";
		ДокументВНаличии = Ложь;
	КонецЕсли;
	ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьСтроки);
	
	// наличие гиперссылки зависит от наличия документа
	Если ДокументВНаличии Тогда
		ЭлементыФормы.ПланВыполненияСхема.Области.ЯчейкаПоследнихПрием.ГиперСсылка = Истина;
	Иначе
		ЭлементыФормы.ПланВыполненияСхема.Области.ЯчейкаПоследнихПрием.ГиперСсылка = Ложь;
	КонецЕсли;
		
	// перемещение
	
	ОбластьСтроки = Макет.ПолучитьОбласть("СтрокаПеремещение|ДоКартинки");
	ЭлементыФормы.ПланВыполненияСхема.Вывести(ОбластьСтроки);
	ОбластьСтроки = Макет.ПолучитьОбласть("СтрокаПеремещение|ПослеКартинки");
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	Документ.Ссылка,
	|	Документ.Проведен,
	|	Документ.Представление
	|ИЗ
	|	Документ.КадровоеПеремещениеОрганизаций КАК Документ
	|ГДЕ
	|	Документ.Организация = &Орг
	|
	|УПОРЯДОЧИТЬ ПО
	|	Документ.Дата УБЫВ,
	|	Документ.Номер УБЫВ";
	Выборка = Запрос.Выполнить().Выбрать();

	Если Выборка.Следующий() Тогда
		
		Если Выборка.Проведен Тогда
			ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьКартинкаПроведен);
			ОбластьСтроки.Параметры.ПеремещениеСтатус	 = "Действует (проведен)";
		Иначе
			ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьКартинкаЗаписан);
			ОбластьСтроки.Параметры.ПеремещениеСтатус	 = "Не действует (записан)";
		КонецЕсли;
		ОбластьСтроки.Параметры.ПеремещениеДокумент	 = Выборка.Представление;
		ОбластьСтроки.Параметры.ПеремещениеРасшифровка = Выборка.Ссылка;
		ДокументВНаличии = Истина;
	Иначе
		ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьКартинкаОтсутствует);
		ОбластьСтроки.Параметры.ПеремещениеДокумент	 = "";
		ОбластьСтроки.Параметры.ПеремещениеСтатус	 = " - ";
		ДокументВНаличии = Ложь;
	КонецЕсли;
	ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьСтроки);

	// наличие гиперссылки зависит от наличия документа
	Если ДокументВНаличии Тогда
		ЭлементыФормы.ПланВыполненияСхема.Области.ЯчейкаПоследнихПеремещение.ГиперСсылка = Истина;
	Иначе
		ЭлементыФормы.ПланВыполненияСхема.Области.ЯчейкаПоследнихПеремещение.ГиперСсылка = Ложь;
	КонецЕсли;
		
	// увольнение
	
	ОбластьСтроки = Макет.ПолучитьОбласть("СтрокаУвольнение|ДоКартинки");
	ЭлементыФормы.ПланВыполненияСхема.Вывести(ОбластьСтроки);
	ОбластьСтроки = Макет.ПолучитьОбласть("СтрокаУвольнение|ПослеКартинки");
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	Документ.Ссылка,
	|	Документ.Проведен,
	|	Документ.Представление
	|ИЗ
	|	Документ.УвольнениеИзОрганизаций КАК Документ
	|ГДЕ
	|	Документ.Организация = &Орг
	|
	|УПОРЯДОЧИТЬ ПО
	|	Документ.Дата УБЫВ,
	|	Документ.Номер УБЫВ";
	Выборка = Запрос.Выполнить().Выбрать();

	Если Выборка.Следующий() Тогда
		
		Если Выборка.Проведен Тогда
			ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьКартинкаПроведен);
			ОбластьСтроки.Параметры.УвольнениеСтатус	 = "Действует (проведен)";
		Иначе
			ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьКартинкаЗаписан);
			ОбластьСтроки.Параметры.УвольнениеСтатус	 = "Не действует (записан)";
		КонецЕсли;
		ОбластьСтроки.Параметры.УвольнениеДокумент	 = Выборка.Представление;
		ОбластьСтроки.Параметры.УвольнениеРасшифровка = Выборка.Ссылка;
		ДокументВНаличии = Истина;
	Иначе
		ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьКартинкаОтсутствует);
		ОбластьСтроки.Параметры.УвольнениеДокумент	 = "";
		ОбластьСтроки.Параметры.УвольнениеСтатус		 = " - ";
		ДокументВНаличии = Ложь;
	КонецЕсли;
	ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьСтроки);
	
	// наличие гиперссылки зависит от наличия документа
	Если ДокументВНаличии Тогда
		ЭлементыФормы.ПланВыполненияСхема.Области.ЯчейкаПоследнихУвольнение.ГиперСсылка = Истина;
	Иначе
		ЭлементыФормы.ПланВыполненияСхема.Области.ЯчейкаПоследнихУвольнение.ГиперСсылка = Ложь;
	КонецЕсли;
		
	// СтрокаВводСведений
	
	ЭлементыФормы.ПланВыполненияСхема.Вывести(Макет.ПолучитьОбласть("ШапкаВводаСведений"));
	
	ОбластьСтроки = Макет.ПолучитьОбласть("СтрокаВводСведений|ДоКартинки");
	ЭлементыФормы.ПланВыполненияСхема.Вывести(ОбластьСтроки);
	ОбластьСтроки = Макет.ПолучитьОбласть("СтрокаВводСведений|ПослеКартинки");

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Орг" , Орг);
		
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	Документ.Ссылка,
	|	Документ.Проведен,
	|	Документ.Представление
	|ИЗ
	|	Документ.ВводСведенийОПлановыхНачисленияхРаботниковОрганизаций КАК Документ
	|ГДЕ
	|	Документ.Организация = &Орг
	|
	|УПОРЯДОЧИТЬ ПО
	|	Документ.Дата УБЫВ,
	|	Документ.Номер УБЫВ";
	Выборка = Запрос.Выполнить().Выбрать();

	Если Выборка.Следующий() Тогда
		
		Если Выборка.Проведен Тогда
			ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьКартинкаПроведен);
			ОбластьСтроки.Параметры.ВводСведенийСтатус	 = "Действует (проведен)";
		Иначе
			ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьКартинкаЗаписан);
			ОбластьСтроки.Параметры.ВводСведенийСтатус	 = "Не действует (записан)";
		КонецЕсли;
		ОбластьСтроки.Параметры.ВводСведенийДокумент	 = Выборка.Представление;
		ОбластьСтроки.Параметры.ВводСведенийРасшифровка	 = Выборка.Ссылка;
		ДокументВНаличии = Истина;
	Иначе
		ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьКартинкаОтсутствует);
		ОбластьСтроки.Параметры.ВводСведенийДокумент	 = "";
		ОбластьСтроки.Параметры.ВводСведенийСтатус		 = " - ";
		ДокументВНаличии = Ложь;
	КонецЕсли;
	ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьСтроки);

	// наличие гиперссылки зависит от наличия документа
	Если ДокументВНаличии Тогда
		ЭлементыФормы.ПланВыполненияСхема.Области.ЯчейкаПоследнихСведения.ГиперСсылка = Истина;
	Иначе
		ЭлементыФормы.ПланВыполненияСхема.Области.ЯчейкаПоследнихСведения.ГиперСсылка = Ложь;
	КонецЕсли;
	
	// ШапкаНачислений
	ОбластьШапкаНачислений = Макет.ПолучитьОбласть("ШапкаНачислений");
	ЭлементыФормы.ПланВыполненияСхема.Вывести(ОбластьШапкаНачислений);
	
	// начисление
	
	ОбластьСтроки = Макет.ПолучитьОбласть("СтрокаНачисление|ДоКартинки");
	ЭлементыФормы.ПланВыполненияСхема.Вывести(ОбластьСтроки);
	ОбластьСтроки = Макет.ПолучитьОбласть("СтрокаНачисление|ПослеКартинки");

	// Начисление зарплаты
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	Документ.Ссылка,
	|	Документ.Проведен,
	|	Документ.Представление,
	|	Документ.ПериодРегистрации КАК ПериодРегистрации
	|ИЗ
	|	Документ.НачислениеЗарплатыРаботникамОрганизаций КАК Документ
	|ГДЕ
	|	Документ.Организация = &Орг
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПериодРегистрации УБЫВ,
	|	Документ.Дата УБЫВ,
	|	Документ.Номер УБЫВ";
	Выборка = Запрос.Выполнить().Выбрать();

	Если Выборка.Следующий() Тогда
		
		Если Выборка.Проведен Тогда
			ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьКартинкаПроведен);
			ОбластьСтроки.Параметры.НачислениеСтатус	 = "Действует (проведен)";
		Иначе
			ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьКартинкаЗаписан);
			ОбластьСтроки.Параметры.НачислениеСтатус	 = "Не действует (записан)";
		КонецЕсли;
		ОбластьСтроки.Параметры.НачислениеДокумент		 = Выборка.Представление;
		ОбластьСтроки.Параметры.НачислениеРасшифровка	 = Выборка.Ссылка;
		ОбластьСтроки.Параметры.НачислениеПериод		 = Формат(Выборка.ПериодРегистрации, "ДФ = 'MMMM гггг'");
		ДокументВНаличии = Истина;
	Иначе
		ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьКартинкаОтсутствует);
		ОбластьСтроки.Параметры.НачислениеДокумент		 = "";
		ОбластьСтроки.Параметры.НачислениеСтатус		 = " - ";
		ДокументВНаличии = Ложь;
	КонецЕсли;
	ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьСтроки);

	// наличие гиперссылки зависит от наличия документа
	Если ДокументВНаличии Тогда
		ЭлементыФормы.ПланВыполненияСхема.Области.ЯчейкаПоследнихНачисление.ГиперСсылка = Истина;
	Иначе
		ЭлементыФормы.ПланВыполненияСхема.Области.ЯчейкаПоследнихНачисление.ГиперСсылка = Ложь;
	КонецЕсли;
		
	// Доходы и налоги НДФЛ и ЕСН
	ОбластьСтроки = Макет.ПолучитьОбласть("СтрокаДоходов|ДоКартинки");
	ЭлементыФормы.ПланВыполненияСхема.Вывести(ОбластьСтроки);
	ОбластьСтроки = Макет.ПолучитьОбласть("СтрокаДоходов|ПослеКартинки");

	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	Документ.Ссылка,
	|	Документ.Проведен,
	|	Документ.Представление,
	|	Документ.Дата КАК ПериодРегистрации
	|ИЗ
	|	Документ.НДФЛиЕСНДоходыИНалоги КАК Документ
	|ГДЕ
	|	Документ.Организация = &Орг
	|
	|УПОРЯДОЧИТЬ ПО
	|	Документ.Дата УБЫВ,
	|	Документ.Номер УБЫВ";
	Выборка = Запрос.Выполнить().Выбрать();

	Если Выборка.Следующий() Тогда
		
		Если Выборка.Проведен Тогда
			ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьКартинкаПроведен);
			ОбластьСтроки.Параметры.ДоходыСтатус	 = "Действует (проведен)";
		Иначе
			ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьКартинкаЗаписан);
			ОбластьСтроки.Параметры.ДоходыСтатус	 = "Не действует (записан)";
		КонецЕсли;
		ОбластьСтроки.Параметры.ДоходыДокумент			 = Выборка.Представление;
		ОбластьСтроки.Параметры.ДоходыРасшифровка		 = Выборка.Ссылка;
		ОбластьСтроки.Параметры.ДоходыПериод			 = Формат(Выборка.ПериодРегистрации, "ДФ = 'MMMM гггг'");
		ДокументВНаличии = Истина;
	Иначе
		ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьКартинкаОтсутствует);
		ОбластьСтроки.Параметры.ДоходыДокумент			 = "";
		ОбластьСтроки.Параметры.ДоходыСтатус			 = " - ";
		ДокументВНаличии = Ложь;
	КонецЕсли;
	ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьСтроки);

	// наличие гиперссылки зависит от наличия документа
	Если ДокументВНаличии Тогда
		ЭлементыФормы.ПланВыполненияСхема.Области.ЯчейкаПоследнихДоходы.ГиперСсылка = Истина;
	Иначе
		ЭлементыФормы.ПланВыполненияСхема.Области.ЯчейкаПоследнихДоходы.ГиперСсылка = Ложь;
	КонецЕсли;
		
	// тут схема разветвляется в зависимости от наличия ЕНВД
	Если УчетнаяПолитикаЕНВД Тогда
		// ЕНВД
		ОбластьСтроки = Макет.ПолучитьОбласть("СтрокаЕНВД|ДоКартинки");
		ЭлементыФормы.ПланВыполненияСхема.Вывести(ОбластьСтроки);
		ОбластьСтроки = Макет.ПолучитьОбласть("СтрокаЕНВД|ПослеКартинки");

		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Орг" , Орг);
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	Документ.Ссылка,
		|	Документ.Проведен,
		|	Документ.Представление,
		|	Документ.Период КАК ПериодРегистрации
		|ИЗ
		|	Документ.ВводПроцентаДеятельностиЕНВД КАК Документ
		|ГДЕ
		|	Документ.Организация = &Орг
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПериодРегистрации УБЫВ,
		|	Документ.Дата УБЫВ,
		|	Документ.Номер УБЫВ";
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			
			Если Выборка.Проведен Тогда
				ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьКартинкаПроведен);
				ОбластьСтроки.Параметры.ЕНВДСтатус			 = "Действует (проведен)";
			Иначе
				ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьКартинкаЗаписан);
				ОбластьСтроки.Параметры.ЕНВДСтатус			 = "Не действует (записан)";
			КонецЕсли;
			ОбластьСтроки.Параметры.ЕНВДДокумент		 = Выборка.Представление;
			ОбластьСтроки.Параметры.ЕНВДРасшифровка		 = Выборка.Ссылка;
			ОбластьСтроки.Параметры.ЕНВДПериод			 = Формат(Выборка.ПериодРегистрации, "ДФ = 'MMMM гггг'");
			ДокументВНаличии = Истина;
		Иначе
			ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьКартинкаОтсутствует);
			ОбластьСтроки.Параметры.ЕНВДДокумент		 = "";
			ОбластьСтроки.Параметры.ЕНВДСтатус			 = " - ";
			ДокументВНаличии = Ложь;
		КонецЕсли;
		ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьСтроки);
		
		// наличие гиперссылки зависит от наличия документа
		Если ДокументВНаличии Тогда
			ЭлементыФормы.ПланВыполненияСхема.Области.ЯчейкаПоследнихЕНВД.ГиперСсылка = Истина;
		Иначе
			ЭлементыФормы.ПланВыполненияСхема.Области.ЯчейкаПоследнихЕНВД.ГиперСсылка = Ложь;
		КонецЕсли;

		// РасчетЕСН
		ОбластьСтроки = Макет.ПолучитьОбласть("СтрокаЕСН|ДоКартинки");
		ЭлементыФормы.ПланВыполненияСхема.Вывести(ОбластьСтроки);
		ОбластьСтроки = Макет.ПолучитьОбласть("СтрокаЕСН|ПослеКартинки");
	Иначе	
		// номер строки другой
		ОбластьСтроки = Макет.ПолучитьОбласть("СтрокаЕНВД|ЯчейкаНомерСтроки");
		ЭлементыФормы.ПланВыполненияСхема.Вывести(ОбластьСтроки);
		// РасчетЕСН
		ОбластьСтроки = Макет.ПолучитьОбласть("СтрокаЕСН|ЯчейкаВидДокумента");
		ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьСтроки);
		ОбластьСтроки = Макет.ПолучитьОбласть("СтрокаЕСН|ПослеКартинки");
	КонецЕсли;
		
	// РасчетЕСН
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	Документ.Ссылка,
	|	Документ.Проведен,
	|	Документ.Представление,
	|	Документ.ПериодРегистрации КАК ПериодРегистрации
	|ИЗ
	|	Документ.РасчетЕСН КАК Документ
	|ГДЕ
	|	Документ.Организация = &Орг
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПериодРегистрации УБЫВ,
	|	Документ.Дата УБЫВ,
	|	Документ.Номер УБЫВ";
	Выборка = Запрос.Выполнить().Выбрать();

	Если Выборка.Следующий() Тогда
		
		Если Выборка.Проведен Тогда
			ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьКартинкаПроведен);
			ОбластьСтроки.Параметры.РасчетЕСНСтатус		 = "Действует (проведен)";
		Иначе
			ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьКартинкаЗаписан);
			ОбластьСтроки.Параметры.РасчетЕСНСтатус		 = "Не действует (записан)";
		КонецЕсли;
		ОбластьСтроки.Параметры.РасчетЕСНДокумент		 = Выборка.Представление;
		ОбластьСтроки.Параметры.РасчетЕСНРасшифровка	 = Выборка.Ссылка;
		ОбластьСтроки.Параметры.РасчетЕСНПериод			 = Формат(Выборка.ПериодРегистрации, "ДФ = 'MMMM гггг'");
		ДокументВНаличии = Истина;
	Иначе
		ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьКартинкаОтсутствует);
		ОбластьСтроки.Параметры.РасчетЕСНДокумент		 = "";
		ОбластьСтроки.Параметры.РасчетЕСНСтатус			 = " - ";
		ДокументВНаличии = Ложь;
	КонецЕсли;
	ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьСтроки);
		
	// наличие гиперссылки зависит от наличия документа
	Если ДокументВНаличии Тогда
		ЭлементыФормы.ПланВыполненияСхема.Области.ЯчейкаПоследнихЕСН.ГиперСсылка = Истина;
	Иначе
		ЭлементыФормы.ПланВыполненияСхема.Области.ЯчейкаПоследнихЕСН.ГиперСсылка = Ложь;
	КонецЕсли;
	
	// ЗарплатаКВыплатеОрганизаций
	Если УчетнаяПолитикаЕНВД Тогда
		ОбластьСтроки = Макет.ПолучитьОбласть("СтрокаКВыплате|ДоКартинки");
		ЭлементыФормы.ПланВыполненияСхема.Вывести(ОбластьСтроки);
		ОбластьСтроки = Макет.ПолучитьОбласть("СтрокаКВыплате|ПослеКартинки");
	Иначе	
		// номер строки другой
		ОбластьСтроки = Макет.ПолучитьОбласть("СтрокаЕСН|ЯчейкаНомерСтроки");
		ЭлементыФормы.ПланВыполненияСхема.Вывести(ОбластьСтроки);
		// ЗарплатаКВыплатеОрганизаций
		ОбластьСтроки = Макет.ПолучитьОбласть("СтрокаКВыплате|ЯчейкаВидДокумента");
		ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьСтроки);
		ОбластьСтроки = Макет.ПолучитьОбласть("СтрокаКВыплате|ПослеКартинки");
	КонецЕсли;

	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	Документ.Ссылка,
	|	Документ.Представление,
	|	Документ.ПериодРегистрации КАК ПериодРегистрации
	|ИЗ
	|	Документ.ЗарплатаКВыплатеОрганизаций КАК Документ
	|ГДЕ
	|	Документ.Организация = &Орг
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПериодРегистрации УБЫВ,
	|	Документ.Дата УБЫВ,
	|	Документ.Номер УБЫВ";
	Выборка = Запрос.Выполнить().Выбрать();

	Если Выборка.Следующий() Тогда
		
		ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьКартинкаПроведен);
		ОбластьСтроки.Параметры.КВыплатеСтатус	 = "Действует (записан)";
		ОбластьСтроки.Параметры.КВыплатеДокумент	 = Выборка.Представление;
		ОбластьСтроки.Параметры.КВыплатеРасшифровка	 = Выборка.Ссылка;
		ОбластьСтроки.Параметры.КВыплатеПериод		 = Формат(Выборка.ПериодРегистрации, "ДФ = 'MMMM гггг'");
		ДокументВНаличии = Истина;
	Иначе
		ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьКартинкаОтсутствует);
		ОбластьСтроки.Параметры.КВыплатеДокумент			 = "";
		ОбластьСтроки.Параметры.КВыплатеСтатус			 = " - ";
		ДокументВНаличии = Ложь;
	КонецЕсли;
	ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьСтроки);

	// наличие гиперссылки зависит от наличия документа
	Если ДокументВНаличии Тогда
		ЭлементыФормы.ПланВыполненияСхема.Области.ЯчейкаПоследнихКВыплате.ГиперСсылка = Истина;
	Иначе
		ЭлементыФормы.ПланВыполненияСхема.Области.ЯчейкаПоследнихКВыплате.ГиперСсылка = Ложь;
	КонецЕсли;
	
	// РКО
	Если УчетнаяПолитикаЕНВД Тогда
		ОбластьСтроки = Макет.ПолучитьОбласть("СторокаРКО|ДоКартинки");
		ЭлементыФормы.ПланВыполненияСхема.Вывести(ОбластьСтроки);
		ОбластьСтроки = Макет.ПолучитьОбласть("СторокаРКО|ПослеКартинки");
	Иначе	
		// номер строки другой
		ОбластьСтроки = Макет.ПолучитьОбласть("СтрокаКВыплате|ЯчейкаНомерСтроки");
		ЭлементыФормы.ПланВыполненияСхема.Вывести(ОбластьСтроки);
		// граница под ячейкой с номером строки должна отсутствовать
		ЭлементыФормы.ПланВыполненияСхема.Области.ЯчейкаНомераРКОНеЕНВД.ГраницаСнизу = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии);
		// РКО
		ОбластьСтроки = Макет.ПолучитьОбласть("СторокаРКО|ЯчейкаВидДокумента");
		ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьСтроки);
		ОбластьСтроки = Макет.ПолучитьОбласть("СторокаРКО|ПослеКартинки");
	КонецЕсли;

	Запрос.УстановитьПараметр("ВидОперации" , Перечисления.ВидыОперацийРКО.ВыплатаЗаработнойПлатыПоВедомостям);
	Запрос.УстановитьПараметр("ВидОперации1" , Перечисления.ВидыОперацийРКО.ВыплатаЗаработнойПлатыРаботнику);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	Документ.Ссылка,
	|	Документ.Проведен,
	|	Документ.Представление,
	|	Документ.Дата КАК ПериодРегистрации
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК Документ
	|ГДЕ
	|	Документ.Организация = &Орг
	|	И (Документ.ВидОперации = &ВидОперации
	|			ИЛИ Документ.ВидОперации = &ВидОперации1)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Документ.Дата УБЫВ,
	|	Документ.Номер УБЫВ";
	Выборка = Запрос.Выполнить().Выбрать();

	Если Выборка.Следующий() Тогда
		
		Если Выборка.Проведен Тогда
			ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьКартинкаПроведен);
			ОбластьСтроки.Параметры.РКОСтатус	 = "Действует (проведен)";
		Иначе
			ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьКартинкаЗаписан);
			ОбластьСтроки.Параметры.РКОСтатус	 = "Не действует (записан)";
		КонецЕсли;
		ОбластьСтроки.Параметры.РКОДокумент		 = Выборка.Представление;
		ОбластьСтроки.Параметры.РКОРасшифровка	 = Выборка.Ссылка;
		ОбластьСтроки.Параметры.РКОПериод		 = Формат(Выборка.ПериодРегистрации, "ДФ = 'MMMM гггг'");
		ДокументВНаличии = Истина;
	Иначе
		ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьКартинкаОтсутствует);
		ОбластьСтроки.Параметры.РКОДокумент			 = "";
		ОбластьСтроки.Параметры.РКОСтатус			 = " - ";
		ДокументВНаличии = Ложь;
	КонецЕсли;
	ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьСтроки);
		
	// наличие гиперссылки зависит от наличия документа
	Если ДокументВНаличии Тогда
		ЭлементыФормы.ПланВыполненияСхема.Области.ЯчейкаПоследнихРКО.ГиперСсылка = Истина;
	Иначе
		ЭлементыФормы.ПланВыполненияСхема.Области.ЯчейкаПоследнихРКО.ГиперСсылка = Ложь;
	КонецЕсли;

	// ПлПорИсх
	ОбластьСтроки = Макет.ПолучитьОбласть("СтрокаПлПорИсх|ДоКартинки");
	ЭлементыФормы.ПланВыполненияСхема.Вывести(ОбластьСтроки);
	ОбластьСтроки = Макет.ПолучитьОбласть("СтрокаПлПорИсх|ПослеКартинки");
	
	Запрос.УстановитьПараметр("ВидОперации" , Перечисления.ВидыОперацийСписаниеДенежныхСредств.ПеречислениеЗП);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	Документ.Ссылка,
	|	Документ.Проведен,
	|	Документ.Представление,
	|	Документ.Дата КАК ПериодРегистрации
	|ИЗ
	|	Документ.СписаниеСРасчетногоСчета КАК Документ
	|ГДЕ
	|	Документ.Организация = &Орг
	|	И Документ.ВидОперации = &ВидОперации
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПериодРегистрации УБЫВ,
	|	Документ.Номер УБЫВ";
	Выборка = Запрос.Выполнить().Выбрать();

	Если Выборка.Следующий() Тогда
		
		Если Выборка.Проведен Тогда
			ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьКартинкаПроведен);
			ОбластьСтроки.Параметры.ПлПорСтатус	 = "Действует (проведен)";
		Иначе
			ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьКартинкаЗаписан);
			ОбластьСтроки.Параметры.ПлПорСтатус	 = "Не действует (записан)";
		КонецЕсли;
		ОбластьСтроки.Параметры.ПлПорДокумент			 = Выборка.Представление;
		ОбластьСтроки.Параметры.ПлПорРасшифровка		 = Выборка.Ссылка;
		ОбластьСтроки.Параметры.ПлПорПериод				 = Формат(Выборка.ПериодРегистрации, "ДФ = 'MMMM гггг'");
		ДокументВНаличии = Истина;
	Иначе
		ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьКартинкаОтсутствует);
		ОбластьСтроки.Параметры.ПлПорДокумент			 = "";
		ОбластьСтроки.Параметры.ПлПорСтатус			 = " - ";
		ДокументВНаличии = Ложь;
	КонецЕсли;
	ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьСтроки);
		
	// наличие гиперссылки зависит от наличия документа
	Если ДокументВНаличии Тогда
		ЭлементыФормы.ПланВыполненияСхема.Области.ЯчейкаПоследнихПлПор.ГиперСсылка = Истина;
	Иначе
		ЭлементыФормы.ПланВыполненияСхема.Области.ЯчейкаПоследнихПлПор.ГиперСсылка = Ложь;
	КонецЕсли;

	// Депонирование
	ОбластьСтроки = Макет.ПолучитьОбласть("СтрокаДепонирование|ДоКартинки");
	ЭлементыФормы.ПланВыполненияСхема.Вывести(ОбластьСтроки);
	ОбластьСтроки = Макет.ПолучитьОбласть("СтрокаДепонирование|ПослеКартинки");
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	Документ.Ссылка,
	|	Документ.Проведен,
	|	Документ.Представление,
	|	Документ.Дата КАК ПериодРегистрации
	|ИЗ
	|	Документ.ДепонированиеОрганизаций КАК Документ
	|ГДЕ
	|	Документ.Организация = &Орг
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПериодРегистрации УБЫВ,
	|	Документ.Номер УБЫВ";
	Выборка = Запрос.Выполнить().Выбрать();

	Если Выборка.Следующий() Тогда
		
		Если Выборка.Проведен Тогда
			ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьКартинкаПроведен);
			ОбластьСтроки.Параметры.ДепонированиеСтатус		 = "Действует (проведен)";
		Иначе
			ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьКартинкаЗаписан);
			ОбластьСтроки.Параметры.ДепонированиеСтатус		 = "Не действует (записан)";
		КонецЕсли;
		ОбластьСтроки.Параметры.ДепонированиеДокумент		 = Выборка.Представление;
		ОбластьСтроки.Параметры.ДепонированиеРасшифровка	 = Выборка.Ссылка;
		ОбластьСтроки.Параметры.ДепонированиеПериод			 = Формат(Выборка.ПериодРегистрации, "ДФ = 'MMMM гггг'");
		ДокументВНаличии = Истина;
	Иначе
		ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьКартинкаОтсутствует);
		ОбластьСтроки.Параметры.ДепонированиеДокумент		 = "";
		ОбластьСтроки.Параметры.ДепонированиеСтатус			 = " - ";
		ДокументВНаличии = Ложь;
	КонецЕсли;
	ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьСтроки);
		
	// наличие гиперссылки зависит от наличия документа
	Если ДокументВНаличии Тогда
		ЭлементыФормы.ПланВыполненияСхема.Области.ЯчейкаПоследнихДеп.ГиперСсылка = Истина;
	Иначе
		ЭлементыФормы.ПланВыполненияСхема.Области.ЯчейкаПоследнихДеп.ГиперСсылка = Ложь;
	КонецЕсли;

	// РКОВыплДеп
	Если УчетнаяПолитикаЕНВД Тогда
		ОбластьСтроки = Макет.ПолучитьОбласть("СтрокаВыплатаДеп|ДоКартинки");
		ЭлементыФормы.ПланВыполненияСхема.Вывести(ОбластьСтроки);
		ОбластьСтроки = Макет.ПолучитьОбласть("СтрокаВыплатаДеп|ПослеКартинки");
	Иначе	
		// номер строки другой
		ОбластьСтроки = Макет.ПолучитьОбласть("СторокаРКО|ЯчейкаНомерСтроки");
		ЭлементыФормы.ПланВыполненияСхема.Вывести(ОбластьСтроки);
		// РКОВыплДеп
		ОбластьСтроки = Макет.ПолучитьОбласть("СтрокаВыплатаДеп|ЯчейкаВидДокумента");
		ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьСтроки);
		ОбластьСтроки = Макет.ПолучитьОбласть("СтрокаВыплатаДеп|ПослеКартинки");
	КонецЕсли;

	Запрос.УстановитьПараметр("ВидОперации" , Перечисления.ВидыОперацийРКО.ВыплатаДепонентов);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	Документ.Ссылка,
	|	Документ.Проведен,
	|	Документ.Представление,
	|	Документ.Дата КАК ПериодРегистрации
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК Документ
	|ГДЕ
	|	Документ.Организация = &Орг
	|	И Документ.ВидОперации = &ВидОперации
	|
	|УПОРЯДОЧИТЬ ПО
	|	Документ.Дата УБЫВ,
	|	Документ.Номер УБЫВ";
	Выборка = Запрос.Выполнить().Выбрать();

	Если Выборка.Следующий() Тогда
		
		Если Выборка.Проведен Тогда
			ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьКартинкаПроведен);
			ОбластьСтроки.Параметры.ВыплДепСтатус		 = "Действует (проведен)";
		Иначе
			ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьКартинкаЗаписан);
			ОбластьСтроки.Параметры.ВыплДепСтатус		 = "Не действует (записан)";
		КонецЕсли;
		ОбластьСтроки.Параметры.ВыплДепДокумент			 = Выборка.Представление;
		ОбластьСтроки.Параметры.ВыплДепРасшифровка		 = Выборка.Ссылка;
		ОбластьСтроки.Параметры.ВыплДепПериод			 = Формат(Выборка.ПериодРегистрации, "ДФ = 'MMMM гггг'");
		ДокументВНаличии = Истина;
	Иначе
		ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьКартинкаОтсутствует);
		ОбластьСтроки.Параметры.ВыплДепДокумент			 = "";
		ОбластьСтроки.Параметры.ВыплДепСтатус			 = " - ";
		ДокументВНаличии = Ложь;
	КонецЕсли;
	ЭлементыФормы.ПланВыполненияСхема.Присоединить(ОбластьСтроки);
		
	// наличие гиперссылки зависит от наличия документа
	Если ДокументВНаличии Тогда
		ЭлементыФормы.ПланВыполненияСхема.Области.ЯчейкаПоследнихВыплДеп.ГиперСсылка = Истина;
	Иначе
		ЭлементыФормы.ПланВыполненияСхема.Области.ЯчейкаПоследнихВыплДеп.ГиперСсылка = Ложь;
	КонецЕсли;
	
	Если НЕ УчетнаяПолитикаЕНВД Тогда
		// граница под ячейкой с номером строки должна присутствовать
		ЭлементыФормы.ПланВыполненияСхема.Области.ЯчейкаНомераРКОЕНВД.ГраницаСнизу = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная, 1);
	КонецЕсли;

////////////////////////////////////////////////////////////////////////////
	
	//ЭлементыФормы.ПланВыполненияСхема.Вывести(ОбластьСхема);

КонецФункции

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Организация = глЗначениеПеременной("ОсновнаяОрганизация");
	ОпределениеСхемы(Организация);

	//ЭлементыФормы.КоманднаяПанель.Кнопки.ПоказатьЛегенду.Пометка = Ложь;
	УниверсальныеМеханизмы.ЗаполнитьЗначенияДереваОпераций(мПолноеДерево);
	мПолноеДерево.Колонки.Добавить("Контроль",Новый ОписаниеТипов("Булево"));
	
	
КонецПроцедуры


Процедура КоманднаяПанельОбновить(Кнопка)
	
	ОпределениеСхемы(Организация);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ ФОРМЫ

Процедура ОрганизацияПриИзменении(Элемент)
	
	ЭлементыФормы.ПланВыполненияСхема.ТекущаяОбласть = ЭлементыФормы.ПланВыполненияСхема.Область(Неопределено);
	ОпределениеСхемы(Элемент.Значение);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ДОКУМЕНТА


Процедура ПланВыполненияСхемаПриАктивизацииОбласти(Элемент)
	
	Если ЭлементыФормы.ПланВыполненияСхема.Области.Найти(ЭлементыФормы.ПланВыполненияСхема.ТекущаяОбласть.Имя) = Неопределено Тогда
		//ЭлементыФормы.КоманднаяПанельКонтекстноеМеню.Кнопки.Очистить();
		Возврат;		
	//Иначе
	//	ОбновитьКонтекстноеМенюТекущейЯчейки();
	КонецЕсли;
	ОткрытьЖурнал = Ложь;
	
	Если ЭлементыФормы.ПланВыполненияСхема.ТекущаяОбласть.Имя = "Прием" ИЛИ ЭлементыФормы.ПланВыполненияСхема.ТекущаяОбласть.Имя = "Прием1" Тогда
		ФормаСписка = Документы.ПриемНаРаботуВОрганизацию.ПолучитьФормуСписка();
		ОткрытьЖурнал = Истина;
	ИначеЕсли ЭлементыФормы.ПланВыполненияСхема.ТекущаяОбласть.Имя = "Перемещение" ИЛИ ЭлементыФормы.ПланВыполненияСхема.ТекущаяОбласть.Имя = "Перемещение1" Тогда
		ФормаСписка = Документы.КадровоеПеремещениеОрганизаций.ПолучитьФормуСписка();
		ОткрытьЖурнал = Истина;
	ИначеЕсли ЭлементыФормы.ПланВыполненияСхема.ТекущаяОбласть.Имя = "Увольнение" ИЛИ ЭлементыФормы.ПланВыполненияСхема.ТекущаяОбласть.Имя = "Увольнение1" Тогда
		ФормаСписка = Документы.УвольнениеИзОрганизаций.ПолучитьФормуСписка();
		ОткрытьЖурнал = Истина;
	ИначеЕсли ЭлементыФормы.ПланВыполненияСхема.ТекущаяОбласть.Имя = "ВводСведений" Тогда
		ФормаСписка = Документы.ВводСведенийОПлановыхНачисленияхРаботниковОрганизаций.ПолучитьФормуСписка();
		ОткрытьЖурнал = Истина;
	ИначеЕсли ЭлементыФормы.ПланВыполненияСхема.ТекущаяОбласть.Имя = "НачислениеЗарплаты" ИЛИ ЭлементыФормы.ПланВыполненияСхема.ТекущаяОбласть.Имя = "НачислениеЗарплаты1" Тогда
		ФормаСписка = Документы.НачислениеЗарплатыРаботникамОрганизаций.ПолучитьФормуСписка();
		ОткрытьЖурнал = Истина;
	ИначеЕсли ЭлементыФормы.ПланВыполненияСхема.ТекущаяОбласть.Имя = "ВводДоходов" ИЛИ ЭлементыФормы.ПланВыполненияСхема.ТекущаяОбласть.Имя = "ВводДоходов1" Тогда
		ФормаСписка = Документы.НДФЛиЕСНДоходыИНалоги.ПолучитьФормуСписка();
		ОткрытьЖурнал = Истина;
	ИначеЕсли ЭлементыФормы.ПланВыполненияСхема.ТекущаяОбласть.Имя = "КВыплате" ИЛИ ЭлементыФормы.ПланВыполненияСхема.ТекущаяОбласть.Имя = "КВыплате1" Тогда
		ФормаСписка = Документы.ЗарплатаКВыплатеОрганизаций.ПолучитьФормуСписка();
		ОткрытьЖурнал = Истина;
	ИначеЕсли ЭлементыФормы.ПланВыполненияСхема.ТекущаяОбласть.Имя = "РКО" ИЛИ ЭлементыФормы.ПланВыполненияСхема.ТекущаяОбласть.Имя = "РКО1" Тогда
		ФормаСписка = Документы.РасходныйКассовыйОрдер.ПолучитьФормуСписка();
		ОткрытьЖурнал = Истина;
		// установим отбор
		СписокОпераций = Новый СписокЗначений;
		СписокОпераций.Добавить(Перечисления.ВидыОперацийРКО.ВыплатаЗаработнойПлатыПоВедомостям);
		СписокОпераций.Добавить(Перечисления.ВидыОперацийРКО.ВыплатаЗаработнойПлатыРаботнику);

		ФормаСписка.Отбор.ВидОперации.ВидСравнения  = ВидСравнения.ВСписке;
		ФормаСписка.Отбор.ВидОперации.Значение      = СписокОпераций;
		ФормаСписка.Отбор.ВидОперации.Использование = Истина;
		//ФормаСписка.Отбор.ВидОперации.Установить(Перечисления.ВидыОперацийРКО.ВыплатаЗаработнойПлатыПоВедомостям, истина);
		
	ИначеЕсли ЭлементыФормы.ПланВыполненияСхема.ТекущаяОбласть.Имя = "ПлПоручениеИсх" ИЛИ ЭлементыФормы.ПланВыполненияСхема.ТекущаяОбласть.Имя = "ПлПоручениеИсх1" Тогда
		ФормаСписка = ЖурналыДокументов.БанковскиеВыписки.ПолучитьФорму();
		ОткрытьЖурнал = Истина;
		ФормаСписка.Отбор.ВидОперации.Установить(Перечисления.ВидыОперацийСписаниеДенежныхСредств.ПеречислениеЗП, истина);
	ИначеЕсли ЭлементыФормы.ПланВыполненияСхема.ТекущаяОбласть.Имя = "Депонирование" ИЛИ ЭлементыФормы.ПланВыполненияСхема.ТекущаяОбласть.Имя = "Депонирование1" Тогда
		ФормаСписка = ЖурналыДокументов.ДокументыПоДепонированию.ПолучитьФорму();
		ОткрытьЖурнал = Истина;
	ИначеЕсли ЭлементыФормы.ПланВыполненияСхема.ТекущаяОбласть.Имя = "РасчетЕСН" ИЛИ ЭлементыФормы.ПланВыполненияСхема.ТекущаяОбласть.Имя = "РасчетЕСН1" Тогда
		ФормаСписка = Документы.РасчетЕСН.ПолучитьФормуСписка();
		ОткрытьЖурнал = Истина;
	ИначеЕсли ЭлементыФормы.ПланВыполненияСхема.ТекущаяОбласть.Имя = "РКОДепонир" ИЛИ ЭлементыФормы.ПланВыполненияСхема.ТекущаяОбласть.Имя = "РКОДепонир1" Тогда
		ФормаСписка = Документы.РасходныйКассовыйОрдер.ПолучитьФормуСписка();
		ОткрытьЖурнал = Истина;
		// установим отбор
		ФормаСписка.Отбор.ВидОперации.Установить(Перечисления.ВидыОперацийРКО.ВыплатаДепонентов, истина);
	ИначеЕсли ЭлементыФормы.ПланВыполненияСхема.ТекущаяОбласть.Имя = "ПроцентЕНВД" Тогда
		ФормаСписка = Документы.ВводПроцентаДеятельностиЕНВД.ПолучитьФормуСписка();
		ОткрытьЖурнал = Истина;
	Иначе
		//	ОбновитьКонтекстноеМенюТекущейЯчейки();
		ОткрытьЖурнал = Ложь;
	КонецЕсли;
	Если ОткрытьЖурнал Тогда
		ФормаСписка.Открыть();		
		ФормаСписка.Отбор.Организация.Установить(Организация, Истина);		
	КонецЕсли;
	
КонецПроцедуры

мСостояниеОпераций = Новый Соответствие;
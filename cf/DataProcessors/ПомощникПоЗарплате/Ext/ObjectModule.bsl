////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ НАСТРОЙКИ ПЕРИОДА РЕГИСТРАЦИИ ДОКУМЕНТА

// Функция преобразовывает представление периода в дату
//
// Параметры:
//   ПредставлениеПериода - Строка, представление периода
//
// Возвращаемое значение:
//  Дата
//
Функция ПолучитьДатуИзПредставленияПериода(ПредставлениеПериода) Экспорт

	Если не ЗначениеЗаполнено(ПредставлениеПериода) Тогда
		Возврат '00010101';
	КонецЕсли; 
	
	СоответствиеИменМесяцев = Новый Соответствие;
	СоответствиеИменМесяцев.Вставить("Январь"  , "01");
	СоответствиеИменМесяцев.Вставить("Февраль" , "02");
	СоответствиеИменМесяцев.Вставить("Март"    , "03");
	СоответствиеИменМесяцев.Вставить("Апрель"  , "04");
	СоответствиеИменМесяцев.Вставить("Май"     , "05");
	СоответствиеИменМесяцев.Вставить("Июнь"    , "06");
	СоответствиеИменМесяцев.Вставить("Июль"    , "07");
	СоответствиеИменМесяцев.Вставить("Август"  , "08");
	СоответствиеИменМесяцев.Вставить("Сентябрь", "09");
	СоответствиеИменМесяцев.Вставить("Октябрь" , "10");
	СоответствиеИменМесяцев.Вставить("Ноябрь"  , "11");
	СоответствиеИменМесяцев.Вставить("Декабрь" , "12");

	ПозицияПробела = Найти(ПредставлениеПериода, " ");
	Если ПозицияПробела = 0 Тогда
		Возврат '00010101';
	КонецЕсли; 
	
	ИмяМесяца = Сред(ПредставлениеПериода, 1, (ПозицияПробела - 1));
	ЭлементСоответствия = СоответствиеИменМесяцев.Получить(ИмяМесяца);
	Если ЭлементСоответствия = Неопределено Тогда
		Возврат '00010101';
	КонецЕсли;
	
	СтрокаГода = Сред(ПредставлениеПериода, (ПозицияПробела + 1));
	
	Возврат Дата(СтрокаГода + ИмяМесяца + "01000000");

КонецФункции

// Функция преобразовывает дату в представление периода
//
// Параметры:
//   ПериодРегистрации - Дата периода
//
// Возвращаемое значение:
//  Строка
//
Функция ПолучитьПредставлениеПериодаРегистрации(ПериодРегистрации) Экспорт

	Возврат Формат(ПериодРегистрации, "ДФ='MMMM yyyy'");

КонецФункции

// Процедура обрабатывает событие регулирования в поле периода регистрации
//
Процедура РегулированиеПредставленияПериодаРегистрации(Направление, СтандартнаяОбработка, ПериодРегистрации, ПредставлениеПериодаРегистрации) Экспорт

	СтандартнаяОбработка = Ложь;
	
	Если Направление = 1 Тогда
		ПериодРегистрации = КонецМесяца(ПериодРегистрации) + 1;
	ИначеЕсли Направление = -1 Тогда
		ПериодРегистрации = НачалоМесяца(ПериодРегистрации - 1);
	КонецЕсли;

	ПредставлениеПериодаРегистрации = ПолучитьПредставлениеПериодаРегистрации(ПериодРегистрации);

КонецПроцедуры

// Процедура обрабатывает событие начала выбора из списка в поле периода регистрации
//
Процедура НачалоВыбораИзСпискаПредставленияПериодаРегистрации(Элемент, СтандартнаяОбработка, ПериодРегистрации, ЭтаФорма, НачальноеЗначение = Неопределено) Экспорт

	СтандартнаяОбработка = Ложь;
	
	Если НачальноеЗначение = Неопределено Тогда
		НачальноеЗначение = ПериодРегистрации;
	КонецЕсли; 
	
	СписокВыбора = Новый СписокЗначений;
	НачалоТекущегоГода = НачалоГода(НачальноеЗначение);
	НачалоПрошлогоГода = НачалоГода(НачалоТекущегоГода - 1);
	СписокВыбора.Добавить(НачалоПрошлогоГода, (Формат(НачалоПрошлогоГода, "ДФ='yyyy'") + "..."));
	НачалоМесяцаЗаполнения = НачалоТекущегоГода;
	ЭлементПоУмолчанию = Неопределено;
	Для а = 1 По 12 Цикл
		ДобавленныйЭлемент = СписокВыбора.Добавить(НачалоМесяцаЗаполнения, ПолучитьПредставлениеПериодаРегистрации(НачалоМесяцаЗаполнения));
		Если НачальноеЗначение = НачалоМесяцаЗаполнения Тогда
			ЭлементПоУмолчанию = ДобавленныйЭлемент;
		КонецЕсли; 
		НачалоМесяцаЗаполнения = ДобавитьМесяц(НачалоМесяцаЗаполнения, 1);
	КонецЦикла;
	НачалоСледующегоГода = КонецГода(НачалоТекущегоГода) + 1;
	СписокВыбора.Добавить(НачалоСледующегоГода, (Формат(НачалоСледующегоГода, "ДФ='yyyy'") + "..."));
	
	ВыбранныйЭлемент = ЭтаФорма.ВыбратьИзСписка(СписокВыбора, Элемент, ЭлементПоУмолчанию);
	
	Если ВыбранныйЭлемент = Неопределено Тогда
		Возврат;
	ИначеЕсли Год(ВыбранныйЭлемент.Значение) <> Год(НачальноеЗначение) Тогда
		НачалоВыбораИзСпискаПредставленияПериодаРегистрации(Элемент, СтандартнаяОбработка, ПериодРегистрации, ЭтаФорма, ВыбранныйЭлемент.Значение);
		Возврат;
	КонецЕсли;
	
	ПериодРегистрации = ВыбранныйЭлемент.Значение;
	Элемент.Значение  = ПолучитьПредставлениеПериодаРегистрации(ПериодРегистрации);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем ТекущаяОрганизация;
Перем ТекущийОтчетныйПериод;
Перем ПредыдущееЗначениеОтчетныйПериод;
Перем ПредыдущееЗначениеОтчетныйГод;
Перем ТекущийТипСведений;

Перем СерыйЦвет;

Перем ПоказыватьСуммыВзносов;
Перем СтажДоступенДляРедактирования;

// список информационных сообщений, для вывода
Перем МассивСообщений;

Перем ФлагВыполнятьСохранениеФизЛица;

Перем КнопкаАДВ11;

Перем мТекущийСотрудник;

Перем ФлагВыполнятьСохранениеСведенийПринятыхВПФР;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура записывает новый документ объект поверх удаленного документа
//
Процедура ЗаписатьНовыйДокументПоверхСтарого(ЭлементСоответствия, ТаблицаУдаленныхАДВ11, ТаблицаУдаленныхСЗВ = Неопределено)
	
	ЗаменяемаяСсылка = ЭлементСоответствия.Ключ;
	НовыйДокОбъект = ЭлементСоответствия.Значение;
	
	Если ТипЗнч(ЗаменяемаяСсылка) = Тип("ДокументСсылка.СведенияОТрудовомСтажеИЗаработкеСЗВ4")Тогда
		Если ТаблицаУдаленныхСЗВ.Количество() > 0  Тогда
			УдаленныйДокОбъект = ТаблицаУдаленныхСЗВ[0].Ссылка.ПолучитьОбъект();
			ТаблицаУдаленныхСЗВ.Удалить(0);
			ЗаполнитьЗначенияСвойств(УдаленныйДокОбъект, НовыйДокОбъект, , "Проведен");
			УдаленныйДокОбъект.РаботникиОрганизации.Очистить();
			Для Каждого СтрокаТЧ Из НовыйДокОбъект.РаботникиОрганизации Цикл
				ЗаполнитьЗначенияСвойств(УдаленныйДокОбъект.РаботникиОрганизации.Добавить(),СтрокаТЧ);
			КонецЦикла;
			УдаленныйДокОбъект.Записать();
			НоваяСсылка = УдаленныйДокОбъект.Ссылка;
			Если ДокументОбъектДляПоказаФизлиц.ЭтоНовый() Тогда
				Если ДокументОбъектДляПоказаФизлиц.ПолучитьСсылкуНового() = ЗаменяемаяСсылка Тогда
					ДокументОбъектДляПоказаФизлиц = УдаленныйДокОбъект
				КонецЕсли;
			Иначе
				Если ДокументОбъектДляПоказаФизлиц.Ссылка = ЗаменяемаяСсылка Тогда
					ДокументОбъектДляПоказаФизлиц = УдаленныйДокОбъект
				КонецЕсли;
			КонецЕсли;
			СтрокаПачки = ПачкиДокументов.Найти(ЗаменяемаяСсылка, "Пачка");
			Если СтрокаПачки <> Неопределено Тогда
				СтрокаПачки.Пачка = НоваяСсылка
			Иначе
				Для каждого ЭлементСоответствия Из СоответствиеСсылокИОбъектов Цикл
					Если ТипЗнч(ЭлементСоответствия.Ключ) = Тип("ДокументСсылка.ПередачаСЗВ4ВПФР") Тогда
						СтрокаТабличнойЧастиДокументаПередачи =  ЭлементСоответствия.Значение.ПачкиДокументов.Найти(ЗаменяемаяСсылка, "ДокументПачка");
						Если СтрокаТабличнойЧастиДокументаПередачи <> Неопределено Тогда
							СтрокаТабличнойЧастиДокументаПередачи.ДокументПачка = НоваяСсылка;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла; 
				Если ЭлементыФормы.ПачкиДокументов.ТекущиеДанные <> Неопределено Тогда
					ДокументОбъектАДВ11 = СоответствиеСсылокИОбъектов[ЭлементыФормы.ПачкиДокументов.ТекущиеДанные.Пачка]
				КонецЕсли;
			КонецЕсли;
			СоответствиеСсылокИОбъектов.Удалить(ЗаменяемаяСсылка);
			СоответствиеСсылокИОбъектов.Вставить(НоваяСсылка, УдаленныйДокОбъект);
		Иначе
			НовыйДокОбъект.Записать();
		КонецЕсли;
	ИначеЕсли ТипЗнч(ЗаменяемаяСсылка) = Тип("ДокументСсылка.ПередачаСЗВ4ВПФР") Тогда
		Если ТаблицаУдаленныхАДВ11.Количество() > 0  Тогда
			УдаленныйДокОбъект = ТаблицаУдаленныхАДВ11[0].Ссылка.ПолучитьОбъект();
			ТаблицаУдаленныхАДВ11.Удалить(0);
			ЗаполнитьЗначенияСвойств(УдаленныйДокОбъект, НовыйДокОбъект, , "Проведен");
			УдаленныйДокОбъект.ПачкиДокументов.Очистить();
			Для Каждого СтрокаТЧ Из НовыйДокОбъект.ПачкиДокументов Цикл
				ДобавляемаяСтрока = УдаленныйДокОбъект.ПачкиДокументов.Добавить();
				ДобавляемаяСтрока.ДокументПачка = СтрокаТЧ.ДокументПачка;
			КонецЦикла;
			УдаленныйДокОбъект.СведенияОЗадолженности.Очистить();
			Для Каждого СтрокаТЧ Из НовыйДокОбъект.СведенияОЗадолженности Цикл
				ЗаполнитьЗначенияСвойств(УдаленныйДокОбъект.СведенияОЗадолженности.Добавить(), СтрокаТЧ);
			КонецЦикла;
			УдаленныйДокОбъект.Записать();
			НоваяСсылка = УдаленныйДокОбъект.Ссылка;
			Если ДокументОбъектАДВ11.ЭтоНовый() Тогда
				Если ДокументОбъектАДВ11.ПолучитьСсылкуНового() = ЗаменяемаяСсылка Тогда
					ДокументОбъектАДВ11 = УдаленныйДокОбъект
				КонецЕсли;
			Иначе
				Если ДокументОбъектАДВ11.Ссылка = ЗаменяемаяСсылка Тогда
					ДокументОбъектАДВ11 = УдаленныйДокОбъект
				КонецЕсли;
			КонецЕсли;
			СтрокаПачки = ПачкиДокументов.Найти(ЗаменяемаяСсылка, "Пачка");
			Если СтрокаПачки <> Неопределено Тогда
				СтрокаПачки.Пачка = НоваяСсылка
			КонецЕсли;
			СоответствиеСсылокИОбъектов.Удалить(ЗаменяемаяСсылка);
			СоответствиеСсылокИОбъектов.Вставить(НоваяСсылка, УдаленныйДокОбъект);
		Иначе
			НовыйДокОбъект.Записать();
		КонецЕсли;
	ИначеЕсли ТипЗНч(ЗаменяемаяСсылка) = Тип("ДокументСсылка.СведенияОВзносахИСтраховомСтажеСПВ1") Тогда
		Если ТаблицаУдаленныхАДВ11.Количество() > 0  Тогда
			УдаленныйДокОбъект = ТаблицаУдаленныхАДВ11[0].Ссылка.ПолучитьОбъект();
			ТаблицаУдаленныхАДВ11.Удалить(0);
			ЗаполнитьЗначенияСвойств(УдаленныйДокОбъект, НовыйДокОбъект, , "Проведен");
			УдаленныйДокОбъект.РаботникиОрганизации.Очистить();
			Для Каждого СтрокаТЧ Из НовыйДокОбъект.РаботникиОрганизации Цикл
				ЗаполнитьЗначенияСвойств(УдаленныйДокОбъект.РаботникиОрганизации.Добавить(),СтрокаТЧ);
			КонецЦикла;
			УдаленныйДокОбъект.Записать();
			НоваяСсылка = УдаленныйДокОбъект.Ссылка;
			Если ДокументОбъектСПВ.ЭтоНовый() Тогда
				Если ДокументОбъектСПВ.ПолучитьСсылкуНового() = ЗаменяемаяСсылка Тогда
					ДокументОбъектСПВ = УдаленныйДокОбъект
				КонецЕсли;
			Иначе
				Если ДокументОбъектСПВ.Ссылка = ЗаменяемаяСсылка Тогда
					ДокументОбъектСПВ = УдаленныйДокОбъект
				КонецЕсли;
			КонецЕсли;
			СтрокаПачки = ПачкиСПВ.Найти(ЗаменяемаяСсылка, "Пачка");
			Если СтрокаПачки <> Неопределено Тогда
				СтрокаПачки.Пачка = НоваяСсылка
			КонецЕсли;
			СоответствиеСсылокИОбъектов.Удалить(ЗаменяемаяСсылка);
			СоответствиеСсылокИОбъектов.Вставить(НоваяСсылка, УдаленныйДокОбъект);
		Иначе
			НовыйДокОбъект.Записать();
		КонецЕсли;
	ИначеЕсли ТипЗНч(ЗаменяемаяСсылка) = Тип("ДокументСсылка.СведенияОНачисленномЗаработкеСЗВ63") Тогда
		Если ТаблицаУдаленныхАДВ11.Количество() > 0  Тогда
			УдаленныйДокОбъект = ТаблицаУдаленныхАДВ11[0].Ссылка.ПолучитьОбъект();
			ТаблицаУдаленныхАДВ11.Удалить(0);
			ЗаполнитьЗначенияСвойств(УдаленныйДокОбъект, НовыйДокОбъект, , "Проведен");
			УдаленныйДокОбъект.СотрудникиОрганизации.Очистить();
			Для Каждого СтрокаТЧ Из НовыйДокОбъект.СотрудникиОрганизации Цикл
				ЗаполнитьЗначенияСвойств(УдаленныйДокОбъект.СотрудникиОрганизации.Добавить(),СтрокаТЧ);
			КонецЦикла;
			УдаленныйДокОбъект.СведенияОЗаработке.Очистить();
			Для Каждого СтрокаТЧ Из НовыйДокОбъект.СведенияОЗаработке Цикл
				ЗаполнитьЗначенияСвойств(УдаленныйДокОбъект.СведенияОЗаработке.Добавить(),СтрокаТЧ);
			КонецЦикла;
			УдаленныйДокОбъект.Записать();
			НоваяСсылка = УдаленныйДокОбъект.Ссылка;
			Если ДокументОбъектСЗВ63.ЭтоНовый() Тогда
				Если ДокументОбъектСЗВ63.ПолучитьСсылкуНового() = ЗаменяемаяСсылка Тогда
					ДокументОбъектСЗВ63 = УдаленныйДокОбъект
				КонецЕсли;
			Иначе
				Если ДокументОбъектСЗВ63.Ссылка = ЗаменяемаяСсылка Тогда
					ДокументОбъектСЗВ63 = УдаленныйДокОбъект
				КонецЕсли;
			КонецЕсли;
			СтрокаПачки = ПачкиСЗВ63.Найти(ЗаменяемаяСсылка, "Пачка");
			Если СтрокаПачки <> Неопределено Тогда
				СтрокаПачки.Пачка = НоваяСсылка
			КонецЕсли;
			СоответствиеСсылокИОбъектов.Удалить(ЗаменяемаяСсылка);
			СоответствиеСсылокИОбъектов.Вставить(НоваяСсылка, УдаленныйДокОбъект);
		Иначе
			НовыйДокОбъект.Записать();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ЗаписатьНовыйДокументПоверхСтарого()

// Процедура формирует текст надписи о текущем состоянии подготовки документов
//
Процедура ОбновитьНадписьСостоянияПодготовкиДокументов()
	
	Если ТипСведений = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
		
		Если ПачкиДокументов.НайтиСтроки(Новый Структура("ОтчетныйПериод", ОтчетныйПериод)).Количество() = 0 Тогда
			РаботаСДиалогамиЗК.ПоказатьИнформациюОДокументе(ЭлементыФормы.НадписьСостояниеПодготовкиДокументов,
			ЭлементыФормы.ПолеКартинкиПредупреждение, 
			"Данные для передачи еще не готовы. Необходимо создать хотя бы одну пачку документов.", "СообщениеОПроблемах");
		Иначе
			КоличествоДокументовСЗВ = 0;
			КоличествоДокументовАДВ = 0;
			ЕстьПустыеПачки = Ложь;
			ЕстьДокументАДВ = Ложь;
			ЕстьДокументСЗВ = Ложь;
			ЕстьГотовыеОписи = Ложь; ОписаниеПачек = "";
			КоличествоПринятыхКомплектов = 0;
			Для каждого ЭлементСоответствия Из СоответствиеСсылокИОбъектов Цикл
				ТекущаяПачка = ЭлементСоответствия.Ключ;
				ДокументОбъект = ЭлементСоответствия.Значение;
				Если ДокументОбъект = Неопределено Тогда
					Продолжить;
				КонецЕсли;
				Если ТипЗнч(ТекущаяПачка) = Тип("ДокументСсылка.СведенияОТрудовомСтажеИЗаработкеСЗВ4") Тогда
					Если ДокументОбъект.ОтчетныйПериод <> ОтчетныйПериод Тогда
						Продолжить;
					КонецЕсли;
					КоличествоДокументовСЗВ = КоличествоДокументовСЗВ + 1;
					ЕстьПустыеПачки = ЕстьПустыеПачки Или ДокументОбъект.РаботникиОрганизации.Количество()=0;
					ЕстьДокументСЗВ = Истина;
				ИначеЕсли ТипЗнч(ТекущаяПачка) = Тип("ДокументСсылка.ПередачаСЗВ4ВПФР") Тогда
					Если ДокументОбъект.ОтчетныйПериод <> ОтчетныйПериод Тогда
						Продолжить;
					КонецЕсли;
					Если ДокументОбъект.НеСодержитСЗВ Тогда
						ЕстьПустыеПачки = ЕстьПустыеПачки Или ДокументОбъект.СведенияОЗадолженности.Количество()=0;
					Иначе
						ЕстьДокументАДВ = Истина;
						КоличествоДокументовАДВ = КоличествоДокументовАДВ + 1;
						ЕстьПустыеПачки = ЕстьПустыеПачки Или ДокументОбъект.ПачкиДокументов.Количество()=0;
						ПринятыСЗВ6 = Истина;
						Для каждого СтрокаДокумента Из ДокументОбъект.ПачкиДокументов Цикл
							ДокСЗВ6 = СоответствиеСсылокИОбъектов[СтрокаДокумента.ДокументПачка];
							Если ДокСЗВ6 = Неопределено Тогда
								Продолжить;
							КонецЕсли;
							ПринятыСЗВ6 = ПринятыСЗВ6 И ДокСЗВ6.ПринятоВПФР;
						КонецЦикла;
						Если ДокументОбъект.ПринятоВПФР И ПринятыСЗВ6 Тогда
							КоличествоПринятыхКомплектов = КоличествоПринятыхКомплектов + 1
						ИначеЕсли ДокументОбъект.Проведен Тогда
							ЕстьГотовыеОписи = Истина;
							ОписаниеПачек = ОписаниеПачек + ?(ЗначениеЗаполнено(ОписаниеПачек),", ","") + ДокументОбъект.НомерПачки
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			ВсеКомплектыСданы = КоличествоДокументовАДВ = КоличествоПринятыхКомплектов И КоличествоДокументовАДВ > 0;
			Если ЕстьГотовыеОписи Или ВсеКомплектыСданы Тогда
			    Если ВсеКомплектыСданы Тогда
					РаботаСДиалогамиЗК.ПоказатьИнформациюОДокументе(ЭлементыФормы.НадписьСостояниеПодготовкиДокументов,
					ЭлементыФормы.ПолеКартинкиПредупреждение, 
					"Все комплекты текущего периода приняты ПФР.", "");
				Иначе
					РаботаСДиалогамиЗК.ПоказатьИнформациюОДокументе(ЭлементыФормы.НадписьСостояниеПодготовкиДокументов,
					ЭлементыФормы.ПолеКартинкиПредупреждение, 
					"Данные " + ?(Найти(ОписаниеПачек,",") = 0,"пачки АДВ-6-2 № ","пачек АДВ-6-2 №№ ") + ОписаниеПачек + " готовы для передачи в ПФР. После приема сведений отметьте комплект как ""принятый"".", "ВажнаяИнформация");
				КонецЕсли;
			ИначеЕсли ЕстьПустыеПачки Тогда
				РаботаСДиалогамиЗК.ПоказатьИнформациюОДокументе(ЭлементыФормы.НадписьСостояниеПодготовкиДокументов,
				ЭлементыФормы.ПолеКартинкиПредупреждение, 
				"Не все пачки документов заполнены.", "СообщениеОПроблемах");
			ИначеЕсли ЕстьДокументСЗВ И НЕ ЕстьДокументАДВ Тогда
				РаботаСДиалогамиЗК.ПоказатьИнформациюОДокументе(ЭлементыФормы.НадписьСостояниеПодготовкиДокументов,
				ЭлементыФормы.ПолеКартинкиПредупреждение, 
				"Пачки документов СЗВ-6 подготовлены, но не создан документ АДВ-6-2.", "СообщениеОПроблемах");
			ИначеЕсли КоличествоДокументовСЗВ > 0 И КоличествоДокументовАДВ > 0 Тогда
				РаботаСДиалогамиЗК.ПоказатьИнформациюОДокументе(ЭлементыФормы.НадписьСостояниеПодготовкиДокументов,
				ЭлементыФормы.ПолеКартинкиПредупреждение, 
				"Данные для передачи в ПФР подготовлены и готовы к проверке.", "ВажнаяИнформация");
			Иначе
				РаботаСДиалогамиЗК.ПоказатьИнформациюОДокументе(ЭлементыФормы.НадписьСостояниеПодготовкиДокументов,
				ЭлементыФормы.ПолеКартинкиПредупреждение, 
				"Документы еще не готовы к отправке", "ВажнаяИнформация");
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ТипСведений = Перечисления.ТипыСведенийСЗВ.ПЕНСИОННАЯ Тогда
		
		Если ПачкиСПВ.Количество() = 0 Тогда
			РаботаСДиалогамиЗК.ПоказатьИнформациюОДокументе(ЭлементыФормы.НадписьСостояниеПодготовкиДокументов1,
			ЭлементыФормы.ПолеКартинкиПредупреждение1, 
			"Данные для передачи еще не готовы. Необходимо создать хотя бы одну пачку документов.", "СообщениеОПроблемах");
		Иначе
			ЕстьПустыеПачки = Ложь;
			Для каждого ЭлементСоответствия Из СоответствиеСсылокИОбъектов Цикл
				ТекущаяПачка = ЭлементСоответствия.Ключ;
				ДокументОбъект = ЭлементСоответствия.Значение;
				Если ТипЗнч(ТекущаяПачка) = Тип("ДокументСсылка.СведенияОВзносахИСтраховомСтажеСПВ1") Тогда
					ЕстьПустыеПачки = ЕстьПустыеПачки Или ДокументОбъект.РаботникиОрганизации.Количество()=0;
				КонецЕсли;
			КонецЦикла;
			Если ЕстьПустыеПачки Тогда
				РаботаСДиалогамиЗК.ПоказатьИнформациюОДокументе(ЭлементыФормы.НадписьСостояниеПодготовкиДокументов1,
				ЭлементыФормы.ПолеКартинкиПредупреждение1, 
				"Не все пачки документов заполнены.", "СообщениеОПроблемах");
			Иначе
				РаботаСДиалогамиЗК.ПоказатьИнформациюОДокументе(ЭлементыФормы.НадписьСостояниеПодготовкиДокументов1,
				ЭлементыФормы.ПолеКартинкиПредупреждение1, 
				"Данные для передачи в ПФР подготовлены и готовы к проверке.", "");
			КонецЕсли;
		КонецЕсли;
		
	Иначе
		
		Если ПачкиСЗВ63.Количество() = 0 Тогда
			РаботаСДиалогамиЗК.ПоказатьИнформациюОДокументе(ЭлементыФормы.НадписьСостояниеПодготовкиДокументов2,
			ЭлементыФормы.ПолеКартинкиПредупреждение2, 
			"Данные для передачи еще не готовы. Необходимо создать хотя бы одну пачку документов.", "СообщениеОПроблемах");
		Иначе
			ЕстьПустыеПачки = Ложь;
			Для каждого ЭлементСоответствия Из СоответствиеСсылокИОбъектов Цикл
				ТекущаяПачка = ЭлементСоответствия.Ключ;
				ДокументОбъект = ЭлементСоответствия.Значение;
				Если ТипЗнч(ТекущаяПачка) = Тип("ДокументСсылка.СведенияОНачисленномЗаработкеСЗВ63") Тогда
					ЕстьПустыеПачки = ЕстьПустыеПачки Или ДокументОбъект.СотрудникиОрганизации.Количество()=0;
				КонецЕсли;
			КонецЦикла;
			Если ЕстьПустыеПачки Тогда
				РаботаСДиалогамиЗК.ПоказатьИнформациюОДокументе(ЭлементыФормы.НадписьСостояниеПодготовкиДокументов2,
				ЭлементыФормы.ПолеКартинкиПредупреждение2, 
				"Не все пачки документов заполнены.", "СообщениеОПроблемах");
			Иначе
				РаботаСДиалогамиЗК.ПоказатьИнформациюОДокументе(ЭлементыФормы.НадписьСостояниеПодготовкиДокументов2,
				ЭлементыФормы.ПолеКартинкиПредупреждение2, 
				"Данные для передачи в ПФР подготовлены и готовы к проверке.", "");
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ОбновитьНадписьСостоянияПодготовкиДокументов()

Функция КоличествоПринятыхПФРДокументов()

	Возврат ПачкиДокументов.Количество() - ПачкиДокументов.НайтиСтроки(Новый Структура("ОтчетныйПериод", ОтчетныйПериод)).Количество();

КонецФункции // КоличествоПринятыхПФРДокументов()

Функция ПодобранПолныйКомплектПринятыхПФРДокументов()

	КоличествоДоковПрошлогоПериода = КоличествоПринятыхПФРДокументов();
	Возврат МассивПрошлыхПериодов.Количество() = 0 Или КоличествоДоковПрошлогоПериода = МассивПрошлыхПериодов.Количество()

КонецФункции // ПодобранПолныйКомплектПринятыхПФРДокументов()

Процедура ОбновитьНадписьСостоянияПачекДокументов()
	
	КоличествоДоковПрошлогоПериода = КоличествоПринятыхПФРДокументов();
	МожноСчитатьВзносы = МассивПрошлыхПериодов.Количество() = 0 Или КоличествоДоковПрошлогоПериода = МассивПрошлыхПериодов.Количество();
	ЭлементыФормы.КнопкаСформировать.Доступность = МожноСчитатьВзносы;
	
	ИменаПрошлыхПачек = "";
	Если КоличествоДоковПрошлогоПериода > 0 И МожноСчитатьВзносы Тогда
		Для Каждого СтрокаПачки Из ПачкиДокументов Цикл
			Если СтрокаПачки.ОтчетныйПериод = ОтчетныйПериод Тогда
				Продолжить;
			КонецЕсли;
			
			Если Не ПустаяСтрока(ИменаПрошлыхПачек) Тогда
				ИменаПрошлыхПачек = ИменаПрошлыхПачек + ", ";
			КонецЕсли;
			
			ДокументОбъект = СоответствиеСсылокИОбъектов[СтрокаПачки.Пачка];
			ИменаПрошлыхПачек = ИменаПрошлыхПачек + "№ " + СокрЛП(ДокументОбъект.НомерПачки) + " за " + ПредставлениеПериода(НачалоГода(ДокументОбъект.ОтчетныйПериод), ПроцедурыПерсонифицированногоУчета.ОкончаниеОтчетногоПериодаПерсучета(ДокументОбъект.ОтчетныйПериод), "ФП = Истина");;
		КонецЦикла;
	КонецЕсли;
	ПроцедурыПерсонифицированногоУчета.ОписаниеСостоянияПринятыхПФРДанных(КоличествоДоковПрошлогоПериода, ПачкиДокументов, МассивПрошлыхПериодов, ИменаПрошлыхПачек, ЭлементыФормы);
	ЭлементыФормы.НадписьСостояниеПачекДокументов1.Заголовок = ЭлементыФормы.НадписьСостояниеПачекДокументов.Заголовок;
	ЭлементыФормы.НадписьСостояниеПачекДокументов1.ЦветТекста = ЭлементыФормы.НадписьСостояниеПачекДокументов.ЦветТекста;
	ЭлементыФормы.ПолеКартинкиСостояниеПачекДокументов1.Картинка = ЭлементыФормы.ПолеКартинкиСостояниеПачекДокументов.Картинка;
	
КонецПроцедуры

// Процедура считывает данные из базы и отображает их в форме 
//
Процедура ОбновитьПачкиДокументов()
	
	Если ТипСведений = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
		
		ДокументОбъектАДВ11 = Неопределено;
		ДокументОбъектДляПоказаФизЛиц = Неопределено;
		
		ЗаполнитьТаблицуДокументовАДВ();
		
		Если ПачкиДокументов.Количество() = 0 Тогда
			ОформитьПустыеСтраницы();
		Иначе	
			ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока = ПачкиДокументов[0];
		КонецЕсли;
		
	ИначеЕсли ТипСведений = Перечисления.ТипыСведенийСЗВ.ПЕНСИОННАЯ Тогда
		
		ДокументОбъектСПВ = Неопределено;
		
		ЗаполнитьТаблицуДокументовСПВ();
		
		Если ПачкиСПВ.Количество() = 0 Тогда
			ОформитьПустыеСтраницы();
		Иначе	
			ЭлементыФормы.ПанельДанныеСПВ.ТекущаяСтраница = ЭлементыФормы.ПанельДанныеСПВ.Страницы.СтраницаДанных;
			ЭлементыФормы.ПанельСоставСПВ.ТекущаяСтраница = ЭлементыФормы.ПанельСоставСПВ.Страницы.ДанныеФизлица;
			ЭлементыФормы.ПачкиСПВ.ТекущаяСтрока = ПачкиСПВ[0];
		КонецЕсли;
		
	Иначе
		ДокументОбъектСЗВ63 = Неопределено;
		
		ЗаполнитьТаблицуДокументовСЗВ63();
		
		Если ПачкиСЗВ63.Количество() = 0 Тогда
			ОформитьПустыеСтраницы();
		Иначе	
			ЭлементыФормы.ПанельДанныеСЗВ63.ТекущаяСтраница = ЭлементыФормы.ПанельДанныеСЗВ63.Страницы.СтраницаДанных;
			ЭлементыФормы.ПанельСоставСЗВ63.ТекущаяСтраница = ЭлементыФормы.ПанельСоставСЗВ63.Страницы.ДанныеФизлица;
			ЭлементыФормы.ПачкиСЗВ63.ТекущаяСтрока = ПачкиСЗВ63[0];
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ОбновитьПачкиДокументов()

Процедура ОформитьПустыеСтраницы()
	
	ЭлементыФормы.НадписьНазваниеПачки.Заголовок = "  Документы, пачки документов";
	ЭлементыФормы.ПанельКомплектов.ТекущаяСтраница = ЭлементыФормы.ПанельКомплектов.Страницы.ПустаяСтраница;
	ЭлементыФормы.ПанельДокумент.ТекущаяСтраница = ЭлементыФормы.ПанельДокумент.Страницы.ПустаяСтраница;
	ЭлементыФормы.ДанныеСЗВ6.ТекущаяСтраница = ЭлементыФормы.ДанныеСЗВ6.Страницы.ПустаяСтраница;
	ЭлементыФормы.НадписьДанныеОСтажеФизлица.Заголовок = "  Пачки СЗВ-6 отсутствуют";
	ЭлементыФормы.НадписьСоставОписи.Заголовок = "  Описи АДВ-6-2 отсутствуют";
	ЭлементыФормы.ПанельДанныеСПВ.ТекущаяСтраница = ЭлементыФормы.ПанельДанныеСПВ.Страницы.ПустаяСтраница;
	ЭлементыФормы.ПанельСоставСПВ.ТекущаяСтраница = ЭлементыФормы.ПанельСоставСПВ.Страницы.ПустаяСтраница;
	ЭлементыФормы.НадписьДанныеОФизлицахСПВ.Заголовок = "  Пачки СПВ отсутствуют";
	ЭлементыФормы.НадписьПачкиСПВ.Заголовок = "  Пачки документов";
	ЭлементыФормы.ПанельДанныеСЗВ63.ТекущаяСтраница = ЭлементыФормы.ПанельДанныеСЗВ63.Страницы.ПустаяСтраница;
	ЭлементыФормы.ПанельСоставСЗВ63.ТекущаяСтраница = ЭлементыФормы.ПанельСоставСЗВ63.Страницы.ПустаяСтраница;
	ЭлементыФормы.НадписьДанныеОФизлицахСЗВ63.Заголовок = "  Пачки СЗВ-6-3 отсутствуют";
	ЭлементыФормы.НадписьПачкиСЗВ63.Заголовок = "  Пачки документов";
	
КонецПроцедуры

Процедура ОформитьТабличноеПолеСтажа(ДоступныВсеКолонки)

	Колонки = ЭлементыФормы.ЗаписиОСтаже.Колонки;
	Колонки.ВторойПараметрВыслугиЛет.Доступность = ДоступныВсеКолонки;
	Колонки.ВторойПараметрИсчисляемогоСтажа.Доступность = ДоступныВсеКолонки;
	Колонки.КодПозицииСписка.Доступность = ДоступныВсеКолонки;
	Колонки.ОснованиеВыслугиЛет.Доступность = ДоступныВсеКолонки;
	Колонки.ОснованиеИсчисляемогоСтажа.Доступность = ДоступныВсеКолонки;
	Колонки.ОсобыеУсловияТруда.Доступность = ДоступныВсеКолонки;
	Колонки.ПараметрТерриториальныхУсловий.Доступность = ДоступныВсеКолонки;
	Колонки.ПервыйПараметрВыслугиЛет.Доступность = ДоступныВсеКолонки;
	Колонки.ПервыйПараметрИсчисляемогоСтажа.Доступность = ДоступныВсеКолонки;
	Колонки.ТерриториальныеУсловия.Доступность = ДоступныВсеКолонки;
	Колонки.ТретийПараметрВыслугиЛет.Доступность = ДоступныВсеКолонки;
	Колонки.ТретийПараметрИсчисляемогоСтажа.Доступность = ДоступныВсеКолонки;
	Колонки.ВторойПараметрВыслугиЛет.ЦветТекстаШапки = ?(ДоступныВсеКолонки, Новый Цвет(), СерыйЦвет);
	Колонки.ВторойПараметрИсчисляемогоСтажа.ЦветТекстаШапки = ?(ДоступныВсеКолонки, Новый Цвет(), СерыйЦвет);
	Колонки.КодПозицииСписка.ЦветТекстаШапки = ?(ДоступныВсеКолонки, Новый Цвет(), СерыйЦвет);
	Колонки.ОснованиеВыслугиЛет.ЦветТекстаШапки = ?(ДоступныВсеКолонки, Новый Цвет(), СерыйЦвет);
	Колонки.ОснованиеИсчисляемогоСтажа.ЦветТекстаШапки = ?(ДоступныВсеКолонки, Новый Цвет(), СерыйЦвет);
	Колонки.ОсобыеУсловияТруда.ЦветТекстаШапки = ?(ДоступныВсеКолонки, Новый Цвет(), СерыйЦвет);
	Колонки.ПараметрТерриториальныхУсловий.ЦветТекстаШапки = ?(ДоступныВсеКолонки, Новый Цвет(), СерыйЦвет);
	Колонки.ПервыйПараметрВыслугиЛет.ЦветТекстаШапки = ?(ДоступныВсеКолонки, Новый Цвет(), СерыйЦвет);
	Колонки.ПервыйПараметрИсчисляемогоСтажа.ЦветТекстаШапки = ?(ДоступныВсеКолонки, Новый Цвет(), СерыйЦвет);
	Колонки.ТерриториальныеУсловия.ЦветТекстаШапки = ?(ДоступныВсеКолонки, Новый Цвет(), СерыйЦвет);
	Колонки.ТретийПараметрВыслугиЛет.ЦветТекстаШапки = ?(ДоступныВсеКолонки, Новый Цвет(), СерыйЦвет);
	Колонки.ТретийПараметрИсчисляемогоСтажа.ЦветТекстаШапки = ?(ДоступныВсеКолонки, Новый Цвет(), СерыйЦвет);
	Колонки.НевидимаяКолонка2.ЦветТекстаШапки = ?(ДоступныВсеКолонки, Новый Цвет(), СерыйЦвет);
	Колонки.НевидимаяКолонка3.ЦветТекстаШапки = ?(ДоступныВсеКолонки, Новый Цвет(), СерыйЦвет);
	Колонки.НевидимаяКолонка4.ЦветТекстаШапки = ?(ДоступныВсеКолонки, Новый Цвет(), СерыйЦвет);
	Колонки.НевидимаяКолонка5.ЦветТекстаШапки = ?(ДоступныВсеКолонки, Новый Цвет(), СерыйЦвет);
	Колонки.НевидимаяКолонка6.ЦветТекстаШапки = ?(ДоступныВсеКолонки, Новый Цвет(), СерыйЦвет);

КонецПроцедуры

Процедура ОформитьЭУПоСтрокеИзПачкиДокументов()
	ТекущиеДанные = ЭлементыФормы.ПачкиДокументов.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		
		ТекущийДокумент = СоответствиеСсылокИОбъектов[ТекущиеДанные.Пачка];
		
		ЭлементыФормы.ПанельКомплектов.ТекущаяСтраница = ЭлементыФормы.ПанельКомплектов.Страницы.ПустаяСтраница;
		ЭлементыФормы.ПанельСоставАДВ62.Свертка = РежимСверткиЭлементаУправления.Нет;
		
		МожноСчитатьВзносы = ПодобранПолныйКомплектПринятыхПФРДокументов() И Не ТекущийДокумент.ЗаполненПринятымиСведениями;
		
		ДокументЗащищен = ТекущийДокумент.ПринятоВПФР Или ТекущийДокумент.ЗаполненПринятымиСведениями Или(Не ПоказыватьСуммыВзносов И ТекущийДокумент.Проведен) Или ТекущиеДанные.ОтчетныйПериод <> ОтчетныйПериод;
		Если ТипЗнч(ТекущиеДанные.Пачка) = Тип("ДокументСсылка.СведенияОТрудовомСтажеИЗаработкеСЗВ4") Тогда
			
			ЭлементыФормы.НадписьНазваниеПачки.Заголовок = "  Документы, пачки документов    (" + ТекущийДокумент.ТипФормДокументов + " № " + ТекущийДокумент.НомерПачки + ")";
			ЭлементыФормы.НадписьСоставОписи.Заголовок = "  Данные пачки " + ТекущийДокумент.ТипФормДокументов + " № " + ТекущийДокумент.НомерПачки;
			
			ЭлементыФормы.ПанельДоначисленоВзносов.Свертка = ?(ДокументОбъектДляПоказаФизлиц.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ, РежимСверткиЭлементаУправления.Лево, РежимСверткиЭлементаУправления.Нет);
			УстановитьДоступностьДанныхПачкиСЗВ(Истина);		
			
			Кнопки = ЭлементыФормы.КоманднаяПанельФизлицаПачек.Кнопки;
			Кнопки.Перенести.Доступность = Не ДокументЗащищен;
			Если Кнопки.Найти("ПрокомментироватьРаспределениеВзносов") <> Неопределено Тогда
				Кнопки.ПрокомментироватьРаспределениеВзносов.Доступность = МожноСчитатьВзносы;
			КонецЕсли;
			
			ЭлементыФормы.ФизлицаПачек.ТолькоПросмотр = ДокументЗащищен;
			ЭлементыФормы.АдресДляИнформирования.ТолькоПросмотр = ДокументЗащищен;
			ЭлементыФормы.СтраховойНомерПФР.ТолькоПросмотр = ДокументЗащищен;
			ЭлементыФормы.НачисленоСтраховая.ТолькоПросмотр = ДокументЗащищен;
			ЭлементыФормы.НачисленоНакопительная.ТолькоПросмотр = ДокументЗащищен;
			ЭлементыФормы.УплаченоСтраховая.ТолькоПросмотр = ДокументЗащищен;
			ЭлементыФормы.УплаченоНакопительная.ТолькоПросмотр = ДокументЗащищен;
			ЭлементыФормы.ДоначисленоСтраховая.ТолькоПросмотр = ДокументЗащищен;
			ЭлементыФормы.ДоначисленоНакопительная.ТолькоПросмотр = ДокументЗащищен;
			ЭлементыФормы.ДоУплаченоНакопительная.ТолькоПросмотр = ДокументЗащищен;
			ЭлементыФормы.ДоУплаченоСтраховая.ТолькоПросмотр = ДокументЗащищен;
			ЭлементыФормы.ЗаписиОСтаже.ТолькоПросмотр = ДокументЗащищен Или Не СтажДоступенДляРедактирования;
			ЭлементыФормы.КоманднаяПанельСтажа.Кнопки.Перезаполнить.Доступность = Не ЭлементыФормы.ЗаписиОСтаже.ТолькоПросмотр;
			ОформитьТабличноеПолеСтажа(ДокументОбъектДляПоказаФизлиц.ТипФормДокументов = "СЗВ-6-1");
			
			ЭлементыФормы.ПереключательТипФормДокументов.Доступность = Не ДокументЗащищен;
			ЭлементыФормы.ПереключательВидКорректировки.Доступность = Не ДокументЗащищен;
			ЭлементыФормы.ПереключательКорректирующие.Доступность = Не ДокументЗащищен;
			ЭлементыФормы.ПереключательОтменяющие.Доступность = Не ДокументЗащищен;
			ЭлементыФормы.СЗВ_6_2.Доступность = Не ДокументЗащищен;
			ЭлементыФормы.Исполнитель1.ТолькоПросмотр = ДокументЗащищен;
			ЭлементыФормы.ДатаСоставления1.ТолькоПросмотр = ДокументЗащищен;
			ЭлементыФормы.НомерПачки1.ТолькоПросмотр = ДокументЗащищен;
			ЭлементыФормы.Руководитель1.ТолькоПросмотр = ДокументЗащищен;
			ЭлементыФормы.ДолжностьРуководителя1.ТолькоПросмотр = ДокументЗащищен;
			ЭлементыФормы.КатегорияЗастрахованныхЛиц.ТолькоПросмотр = ДокументЗащищен;
			ЭлементыФормы.КорректируемыйПериод.ТолькоПросмотр = ДокументЗащищен;
			ЭлементыФормы.Комментарий.ТолькоПросмотр = ДокументЗащищен И Не ТекущийДокумент.ЗаполненПринятымиСведениями;
			
			ЭлементыФормы.РаспределитьВзносы.Доступность = Не ДокументЗащищен И МожноСчитатьВзносы;
			ЭлементыФормы.РаспределитьВзносыСКомментарием.Доступность = Не ДокументЗащищен И МожноСчитатьВзносы;
			
			ЭлементыФормы.ПанельКомплектов.ТекущаяСтраница = ЭлементыФормы.ПанельКомплектов.Страницы.ПустаяСтраница;
			ЭлементыФормы.ПанельДокумент.ТекущаяСтраница = ЭлементыФормы.ПанельДокумент.Страницы.СЗВ6;
			ЭлементыФормы.ДанныеСЗВ6.ТекущаяСтраница = ЭлементыФормы.ДанныеСЗВ6.Страницы.СЗВ6;
			ЭлементыФормы.ПанельСоставАДВ62.Свертка = РежимСверткиЭлементаУправления.Лево;
			
			ЭлементыФормы.КоманднаяПанельПачки.Кнопки.Перенести.Доступность = ПоказыватьСуммыВзносов;
			
			Если ДокументОбъектДляПоказаФизлиц.РаботникиОрганизации.Количество() = 0 Тогда
				УстановитьНедоступностьДанныхФизлица()	
			КонецЕсли;
			
		ИначеЕсли ТипЗнч(ТекущиеДанные.Пачка) = Тип("ДокументСсылка.ПередачаСЗВ4ВПФР") Тогда
			ЭлементыФормы.ПанельКомплектов.ТекущаяСтраница = ЭлементыФормы.ПанельКомплектов.Страницы.СтраницаАДВ;
			ЭлементыФормы.КоманднаяПанельПачки.Кнопки.Перенести.Доступность = Ложь;
			ЭлементыФормы.ПанельПерераспределениеВсехВзносов.Свертка = ?(НЕ ПоказыватьСуммыВзносов Или ДокументОбъектАДВ11.НеСодержитСЗВ,РежимСверткиЭлементаУправления.Лево, РежимСверткиЭлементаУправления.Нет);
			Если ДокументОбъектАДВ11.НеСодержитСЗВ Тогда
				ЭлементыФормы.НадписьНазваниеПачки.Заголовок = "  Документы, пачки документов    (АДВ-11 № " + ТекущийДокумент.НомерПачки + ")";
				ЭлементыФормы.НадписьСоставОписи.Заголовок = "  Данные пачки АДВ-11 № " + ТекущийДокумент.НомерПачки;
				ЭлементыФормы.ПанельДокумент.ТекущаяСтраница = ЭлементыФормы.ПанельДокумент.Страницы.АДВ11;
				ЭлементыФормы.ПанельУплатаСтраховыхВзносов.ТекущаяСтраница = ?(ПоказыватьСуммыВзносов, ЭлементыФормы.ПанельУплатаСтраховыхВзносов.Страницы.ТаблицаВзносов, ЭлементыФормы.ПанельУплатаСтраховыхВзносов.Страницы.ПустаяСтраница);
				ЭлементыФормы.ДанныеСЗВ6.ТекущаяСтраница = ЭлементыФормы.ДанныеСЗВ6.Страницы.ПустаяСтраница;
			Иначе
				ЭлементыФормы.НадписьНазваниеПачки.Заголовок = "  Документы, пачки документов    (АДВ-6-2 № " + ТекущийДокумент.НомерПачки + ")";
				ЭлементыФормы.НадписьСоставОписи.Заголовок = "  Состав Описи АДВ-6-2 №" + ТекущийДокумент.НомерПачки;
				ЭлементыФормы.ПанельДокумент.ТекущаяСтраница = ЭлементыФормы.ПанельДокумент.Страницы.СЗВ6;
				ЭлементыФормы.ДанныеСЗВ6.ТекущаяСтраница = ЭлементыФормы.ДанныеСЗВ6.Страницы.СЗВ6;
				ЭлементыФормы.ФизлицаПачек.ТолькоПросмотр = Истина;
				
				Кнопки = ЭлементыФормы.КоманднаяПанельФизлицаПачек.Кнопки;
				Кнопки.Перенести.Доступность = Ложь;
				Если Кнопки.Найти("ПрокомментироватьРаспределениеВзносов") <> Неопределено Тогда
					Кнопки.ПрокомментироватьРаспределениеВзносов.Доступность = МожноСчитатьВзносы;
				КонецЕсли;
			КонецЕсли;
			ЭлементыФормы.СведенияОЗадолженности.ТолькоПросмотр = ДокументЗащищен;
			ЭлементыФормы.КоманднаяПанельРасчеты.Кнопки.ЗадолженностьПередПФР.Доступность = Не ДокументЗащищен;
			ЭлементыФормы.ПачкиСЗВ6.ТолькоПросмотр = ДокументЗащищен;
			ЭлементыФормы.КоманднаяПанельПачкиСЗВ6.Кнопки.Добавить.Доступность = Не ДокументЗащищен;
			ЭлементыФормы.КоманднаяПанельПачкиСЗВ6.Кнопки.Удалить.Доступность = Не ДокументЗащищен;
			ЭлементыФормы.КоманднаяПанельПачкиСЗВ6.Кнопки.Перенести.Доступность = Не ДокументЗащищен;
			ЭлементыФормы.Исполнитель.ТолькоПросмотр = ДокументЗащищен;
			ЭлементыФормы.ДатаСоставления.ТолькоПросмотр = ДокументЗащищен;
			ЭлементыФормы.НомерПачки.ТолькоПросмотр = ДокументЗащищен;
			ЭлементыФормы.Руководитель.ТолькоПросмотр = ДокументЗащищен;
			ЭлементыФормы.ДолжностьРуководителя.ТолькоПросмотр = ДокументЗащищен;
			ЭлементыФормы.РаспределитьВзносыВоВсехПачках.Доступность = Не ДокументЗащищен И МожноСчитатьВзносы;
			ЭлементыФормы.КнопкаПринятоВПФР.Доступность = Не ДокументЗащищен;
			Если ДокументОбъектАДВ11.ПачкиДокументов.Количество() = 0 Тогда
				УстановитьДоступностьДанныхПачкиСЗВ();		
				УстановитьНедоступностьДанныхФизлица();
				ОформитьТабличноеПолеСтажа(Истина);
			КонецЕсли;
		КонецЕсли;
		
	Иначе
		
		ОформитьПустыеСтраницы();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОформитьЭУПоСтрокеИзПачкиСЗВ6()
	
	ТекущиеДанные = ЭлементыФормы.ПачкиСЗВ6.ТекущиеДанные;
	УстановитьДоступностьДанныхПачкиСЗВ(ТекущиеДанные <> Неопределено);
	
	Если ТекущиеДанные <> Неопределено Тогда
		
		ЭлементыФормы.ПанельДоначисленоВзносов.Свертка = ?(ДокументОбъектДляПоказаФизлиц.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ, РежимСверткиЭлементаУправления.Лево, РежимСверткиЭлементаУправления.Нет);
		
		ЭлементыФормы.НадписьСоставОписи.Заголовок = "  Состав Описи АДВ-6-2 №" + ДокументОбъектАДВ11.НомерПачки + "    (пачка " + ДокументОбъектДляПоказаФизлиц.ТипФормДокументов + " № " + ДокументОбъектДляПоказаФизлиц.НомерПачки + ")";
		
		ДокументЗащищен = ДокументОбъектДляПоказаФизЛиц.ПринятоВПФР Или ДокументОбъектДляПоказаФизЛиц.ЗаполненПринятымиСведениями Или (Не ПоказыватьСуммыВзносов И ДокументОбъектДляПоказаФизЛиц.Проведен) Или ДокументОбъектДляПоказаФизЛиц.ОтчетныйПериод <> ОтчетныйПериод;
		
		МожноСчитатьВзносы = ПодобранПолныйКомплектПринятыхПФРДокументов() И Не ДокументОбъектДляПоказаФизЛиц.ЗаполненПринятымиСведениями;
		
		Кнопки = ЭлементыФормы.КоманднаяПанельФизлицаПачек.Кнопки;
		Кнопки.Перенести.Доступность = Не ДокументЗащищен;
		Если Кнопки.Найти("ПрокомментироватьРаспределениеВзносов") <> Неопределено Тогда
			Кнопки.ПрокомментироватьРаспределениеВзносов.Доступность = МожноСчитатьВзносы;
		КонецЕсли;
		
		ЭлементыФормы.ФизлицаПачек.ТолькоПросмотр = ДокументЗащищен;
		ЭлементыФормы.АдресДляИнформирования.ТолькоПросмотр = ДокументЗащищен;
		ЭлементыФормы.СтраховойНомерПФР.ТолькоПросмотр = ДокументЗащищен;
		ЭлементыФормы.НачисленоСтраховая.ТолькоПросмотр = ДокументЗащищен;
		ЭлементыФормы.НачисленоНакопительная.ТолькоПросмотр = ДокументЗащищен;
		ЭлементыФормы.УплаченоСтраховая.ТолькоПросмотр = ДокументЗащищен;
		ЭлементыФормы.УплаченоНакопительная.ТолькоПросмотр = ДокументЗащищен;
		ЭлементыФормы.ДоначисленоСтраховая.ТолькоПросмотр = ДокументЗащищен;
		ЭлементыФормы.ДоначисленоНакопительная.ТолькоПросмотр = ДокументЗащищен;
		ЭлементыФормы.ДоУплаченоНакопительная.ТолькоПросмотр = ДокументЗащищен;
		ЭлементыФормы.ДоУплаченоСтраховая.ТолькоПросмотр = ДокументЗащищен;
		ЭлементыФормы.ЗаписиОСтаже.ТолькоПросмотр = ДокументЗащищен Или Не СтажДоступенДляРедактирования;
		ЭлементыФормы.КоманднаяПанельСтажа.Кнопки.Перезаполнить.Доступность = Не ЭлементыФормы.ЗаписиОСтаже.ТолькоПросмотр;
		ОформитьТабличноеПолеСтажа(ДокументОбъектДляПоказаФизлиц.ТипФормДокументов = "СЗВ-6-1");
		
		ЭлементыФормы.ПереключательТипФормДокументов.Доступность = Не ДокументЗащищен;
		ЭлементыФормы.ПереключательВидКорректировки.Доступность = Не ДокументЗащищен;
		ЭлементыФормы.ПереключательКорректирующие.Доступность = Не ДокументЗащищен;
		ЭлементыФормы.ПереключательОтменяющие.Доступность = Не ДокументЗащищен;
		ЭлементыФормы.СЗВ_6_2.Доступность = Не ДокументЗащищен;
		ЭлементыФормы.Исполнитель1.ТолькоПросмотр = ДокументЗащищен;
		ЭлементыФормы.ДатаСоставления1.ТолькоПросмотр = ДокументЗащищен;
		ЭлементыФормы.НомерПачки1.ТолькоПросмотр = ДокументЗащищен;
		ЭлементыФормы.Руководитель1.ТолькоПросмотр = ДокументЗащищен;
		ЭлементыФормы.ДолжностьРуководителя1.ТолькоПросмотр = ДокументЗащищен;
		ЭлементыФормы.КатегорияЗастрахованныхЛиц.ТолькоПросмотр = ДокументЗащищен;
		ЭлементыФормы.КорректируемыйПериод.ТолькоПросмотр = ДокументЗащищен;
		ЭлементыФормы.Комментарий.ТолькоПросмотр = ДокументЗащищен И Не ДокументОбъектДляПоказаФизЛиц.ЗаполненПринятымиСведениями;
		
		ЭлементыФормы.РаспределитьВзносы.Доступность = Не ДокументЗащищен И МожноСчитатьВзносы;
		ЭлементыФормы.РаспределитьВзносыСКомментарием.Доступность = Не ДокументЗащищен И МожноСчитатьВзносы;
		
		Если ДокументОбъектДляПоказаФизлиц.РаботникиОрганизации.Количество() = 0 Тогда
			УстановитьНедоступностьДанныхФизлица();
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

Процедура ОформитьЭУПоСтрокеИзПачкиСПВ()
	
	ТекущиеДанные = ЭлементыФормы.ПачкиСПВ.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		
		ЭлементыФормы.НадписьПачкиСПВ.Заголовок = "  Пачки документов    (пачка № " + ДокументОбъектСПВ.НомерПачки + ")";
		ЭлементыФормы.НадписьДанныеОФизлицахСПВ.Заголовок = "  Состав пачки СПВ № " + ДокументОбъектСПВ.НомерПачки;
				
		ДокументЗащищен = ДокументОбъектСПВ.ПринятоВПФР Или (Не ПоказыватьСуммыВзносов И ДокументОбъектСПВ.Проведен);
		ЭлементыФормы.ФизлицаПачекСПВ.ТолькоПросмотр = ДокументЗащищен;
		ЭлементыФормы.КоманднаяПанельФизлицаСПВ.Кнопки.Перенести.Доступность = Не ДокументЗащищен;
		ЭлементыФормы.СтраховойНомерПФР1.ТолькоПросмотр = ДокументЗащищен;
		ЭлементыФормы.ДатаСоставленияФЛ.ТолькоПросмотр = ДокументЗащищен;
		ЭлементыФормы.НачисленоСтраховая1.ТолькоПросмотр = ДокументЗащищен;
		ЭлементыФормы.НачисленоНакопительная1.ТолькоПросмотр = ДокументЗащищен;
		ЭлементыФормы.УплаченоСтраховая1.ТолькоПросмотр = ДокументЗащищен;
		ЭлементыФормы.УплаченоНакопительная1.ТолькоПросмотр = ДокументЗащищен;
		ЭлементыФормы.ЗаписиОСтажеСПВ.ТолькоПросмотр = ДокументЗащищен Или Не СтажДоступенДляРедактирования;
		ЭлементыФормы.КоманднаяПанельСтажаСПВ.Кнопки.Перезаполнить.Доступность = Не ЭлементыФормы.ЗаписиОСтажеСПВ.ТолькоПросмотр;
		
		ЭлементыФормы.ПереключательВидКорректировки1.Доступность = Не ДокументЗащищен;
		ЭлементыФормы.ПереключательКорректирующие1.Доступность = Не ДокументЗащищен;
		ЭлементыФормы.ПереключательОтменяющие1.Доступность = Не ДокументЗащищен;
		ЭлементыФормы.Исполнитель2.ТолькоПросмотр = ДокументЗащищен;
		ЭлементыФормы.ДатаСоставления2.ТолькоПросмотр = ДокументЗащищен;
		ЭлементыФормы.НомерПачки2.ТолькоПросмотр = ДокументЗащищен;
		ЭлементыФормы.Руководитель2.ТолькоПросмотр = ДокументЗащищен;
		ЭлементыФормы.ДолжностьРуководителя2.ТолькоПросмотр = ДокументЗащищен;
		ЭлементыФормы.КатегорияЗастрахованныхЛиц1.ТолькоПросмотр = ДокументЗащищен;
		ЭлементыФормы.Комментарий1.ТолькоПросмотр = ДокументЗащищен;
		
		ЭлементыФормы.РаспределитьВзносы1.Доступность = Не ДокументЗащищен;
		
		Если ДокументОбъектСПВ.РаботникиОрганизации.Количество() = 0 Тогда
			УстановитьНедоступностьДанныхФизлица()	
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОформитьЭУПоСтрокеИзПачкиСЗВ63()
	
	ТекущиеДанные = ЭлементыФормы.ПачкиСЗВ63.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		
		ЭлементыФормы.НадписьПачкиСЗВ63.Заголовок = "  Пачки документов    (пачка № " + ДокументОбъектСЗВ63.НомерПачки + ")";
		ЭлементыФормы.НадписьДанныеОФизлицахСЗВ63.Заголовок = "  Состав пачки СЗВ-6-3 № " + ДокументОбъектСЗВ63.НомерПачки;
				
		ДокументЗащищен = ДокументОбъектСЗВ63.ПринятоВПФР Или (Не ПоказыватьСуммыВзносов И ДокументОбъектСЗВ63.Проведен);
		ЭлементыФормы.ФизлицаПачекСЗВ63.ТолькоПросмотр = ДокументЗащищен;
		ЭлементыФормы.КоманднаяПанельФизлицаСЗВ63.Кнопки.Перенести.Доступность = Не ДокументЗащищен;
		ЭлементыФормы.СтраховойНомерПФР3.ТолькоПросмотр = ДокументЗащищен;
		ЭлементыФормы.Фамилия.ТолькоПросмотр = ДокументЗащищен;
		ЭлементыФормы.Имя.ТолькоПросмотр = ДокументЗащищен;
		ЭлементыФормы.Отчество.ТолькоПросмотр = ДокументЗащищен;
		ЭлементыФормы.СведенияОЗаработке.ТолькоПросмотр = ДокументЗащищен;
		
		ЭлементыФормы.ПереключательВидКорректировки2.Доступность = Не ДокументЗащищен;
		ЭлементыФормы.ПереключательКорректирующие2.Доступность = Не ДокументЗащищен;
		ЭлементыФормы.ПереключательОтменяющие2.Доступность = Не ДокументЗащищен;
		ЭлементыФормы.Исполнитель3.ТолькоПросмотр = ДокументЗащищен;
		ЭлементыФормы.ДатаСоставления3.ТолькоПросмотр = ДокументЗащищен;
		ЭлементыФормы.НомерПачки3.ТолькоПросмотр = ДокументЗащищен;
		ЭлементыФормы.Руководитель3.ТолькоПросмотр = ДокументЗащищен;
		ЭлементыФормы.ДолжностьРуководителя3.ТолькоПросмотр = ДокументЗащищен;
		ЭлементыФормы.КатегорияЗастрахованныхЛиц2.ТолькоПросмотр = ДокументЗащищен;
		ЭлементыФормы.ТипДоговора.ТолькоПросмотр = ДокументЗащищен;
		ЭлементыФормы.Комментарий2.ТолькоПросмотр = ДокументЗащищен;
		
		ЭлементыФормы.РассчитатьЗаработок.Доступность = Не ДокументЗащищен;
		ЭлементыФормы.КнопкаОбновитьДанныеОДоходах.Доступность = Не ДокументЗащищен;
		
		Если ДокументОбъектСЗВ63.СотрудникиОрганизации.Количество() = 0 Тогда
			УстановитьНедоступностьДанныхФизлица()	
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОформитьЭУПоСтрокеИзПачкиФизлиц()
	
	Если ТипСведений = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
		ТекущаяСтрока = ЭлементыФормы.ФизлицаПачек.ТекущаяСтрока
	ИначеЕсли ТипСведений = Перечисления.ТипыСведенийСЗВ.ПЕНСИОННАЯ Тогда
		ТекущаяСтрока = ЭлементыФормы.ФизлицаПачекСПВ.ТекущаяСтрока
	Иначе
		ТекущаяСтрока = ЭлементыФормы.ФизлицаПачекСЗВ63.ТекущаяСтрока
	КонецЕсли;
	
	Если ТекущаяСтрока <> Неопределено И ЗначениеЗаполнено(ТекущаяСтрока.Физлицо) Тогда
		
		Физлицо = ТекущаяСтрока.Физлицо;
		
		Если ТипСведений = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
			// Установим отбор для записей о стаже
			ЗаписиОСтаже.Отбор.Физлицо.Значение	= ФизЛицо;
			ЭлементыФормы.НадписьДанныеОСтажеФизлица.Заголовок = "  Состав пачки СЗВ-6 № " + ДокументОбъектДляПоказаФизЛиц.НомерПачки + "        (" + ОбщегоНазначения.ПолучитьЗначениеРеквизита(ФизЛицо,"Наименование") + ")";
			Если Не ДокументОбъектДляПоказаФизЛиц.ПринятоВПФР Тогда
				ДокументЗащищен = ДокументОбъектДляПоказаФизЛиц.ЗаполненПринятымиСведениями Или (Не ПоказыватьСуммыВзносов И ДокументОбъектДляПоказаФизЛиц.Проведен) Или ДокументОбъектДляПоказаФизЛиц.ОтчетныйПериод <> ОтчетныйПериод;
				ЭлементыФормы.НачисленоСтраховая.ТолькоПросмотр = ДокументЗащищен;
				ЭлементыФормы.НачисленоНакопительная.ТолькоПросмотр = ДокументЗащищен;
				ЭлементыФормы.ДоначисленоСтраховая.ТолькоПросмотр = ДокументЗащищен;
				ЭлементыФормы.ДоначисленоНакопительная.ТолькоПросмотр = ДокументЗащищен;
				ЭлементыФормы.УплаченоСтраховая.ТолькоПросмотр = ДокументЗащищен;
				ЭлементыФормы.УплаченоНакопительная.ТолькоПросмотр = ДокументЗащищен;
				ЭлементыФормы.ДоУплаченоНакопительная.ТолькоПросмотр = ДокументЗащищен;
				ЭлементыФормы.ДоУплаченоСтраховая.ТолькоПросмотр = ДокументЗащищен;
				ЭлементыФормы.АдресДляИнформирования.ТолькоПросмотр = ДокументЗащищен;
				ЭлементыФормы.СтраховойНомерПФР.ТолькоПросмотр = ДокументЗащищен;
				ЭлементыФормы.ЗаписиОСтаже.ТолькоПросмотр = ДокументЗащищен Или Не СтажДоступенДляРедактирования;
				ЭлементыФормы.КоманднаяПанельСтажа.Кнопки.Перезаполнить.Доступность = Не ЭлементыФормы.ЗаписиОСтаже.ТолькоПросмотр;
			КонецЕсли;
		ИначеЕсли ТипСведений = Перечисления.ТипыСведенийСЗВ.ПЕНСИОННАЯ Тогда
			// Установим отбор для записей о стаже
			ЗаписиОСтаже.Отбор.Физлицо.Значение	= ФизЛицо;
			ЭлементыФормы.НадписьДанныеОФизлицахСПВ.Заголовок = "  Состав пачки СПВ № " + ДокументОбъектСПВ.НомерПачки + "        (" + ОбщегоНазначения.ПолучитьЗначениеРеквизита(ФизЛицо,"Наименование") + ")";
			Если Не ДокументОбъектСПВ.ПринятоВПФР Тогда
				ДокументЗащищен = (Не ПоказыватьСуммыВзносов И ДокументОбъектСПВ.Проведен);
				ЭлементыФормы.НачисленоСтраховая1.ТолькоПросмотр = ДокументЗащищен;
				ЭлементыФормы.НачисленоНакопительная1.ТолькоПросмотр = ДокументЗащищен;
				ЭлементыФормы.УплаченоСтраховая1.ТолькоПросмотр = ДокументЗащищен;
				ЭлементыФормы.УплаченоНакопительная1.ТолькоПросмотр = ДокументЗащищен;
				ЭлементыФормы.ДатаСоставленияФЛ.ТолькоПросмотр = ДокументЗащищен;
				ЭлементыФормы.СтраховойНомерПФР1.ТолькоПросмотр = ДокументЗащищен;
				ЭлементыФормы.ЗаписиОСтажеСПВ.ТолькоПросмотр = ДокументЗащищен Или Не СтажДоступенДляРедактирования;
				ЭлементыФормы.КоманднаяПанельСтажаСПВ.Кнопки.Перезаполнить.Доступность = Истина;
			КонецЕсли;
		Иначе
			ЭлементыФормы.НадписьДанныеОФизлицахСЗВ63.Заголовок = "  Состав пачки СЗВ № " + ДокументОбъектСЗВ63.НомерПачки + "        (" + ОбщегоНазначения.ПолучитьЗначениеРеквизита(ФизЛицо,"Наименование") + ")";
			ЭлементыФормы.СведенияОЗаработке.ОтборСтрок.ФизЛицо.Установить(Физлицо);
			Если Не ДокументОбъектСЗВ63.ПринятоВПФР Тогда
				ДокументЗащищен = (Не ПоказыватьСуммыВзносов И ДокументОбъектСЗВ63.Проведен);
				ЭлементыФормы.Отчество.ТолькоПросмотр = ДокументЗащищен;
				ЭлементыФормы.Имя.ТолькоПросмотр = ДокументЗащищен;
				ЭлементыФормы.Фамилия.ТолькоПросмотр = ДокументЗащищен;
				ЭлементыФормы.СтраховойНомерПФР3.ТолькоПросмотр = ДокументЗащищен;
				ЭлементыФормы.СведенияОЗаработке.ТолькоПросмотр = ДокументЗащищен;
				ЭлементыФормы.КнопкаОбновитьДанныеОДоходах.Доступность = Не ДокументЗащищен;
			КонецЕсли;
		КонецЕсли;
		
	Иначе
		
		УстановитьНедоступностьДанныхФизлица()
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПечатьДокумента(ОбъектПечати, СохранятьДанные = Истина)
	
	Если СохранятьДанные Тогда
		Отказ = Ложь;
		СохранитьДокументы(Отказ, РежимДиалогаВопрос.ОКОтмена);
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		СохранениеТекущихДанных();
	КонецЕсли;
	Пачка = ОбъектПечати.Ссылка;
	Если НЕ Пачка.Пустая() Тогда
		Если ТипЗнч(Пачка) = Тип("ДокументСсылка.СведенияОТрудовомСтажеИЗаработкеСЗВ4") Тогда
			ИмяМакета = СтрЗаменить("Форма"+ОбъектПечати.ТипФормДокументов, "-", "_");
		ИначеЕсли ТипЗнч(Пачка) = Тип("ДокументСсылка.СведенияОВзносахИСтраховомСтажеСПВ1") Тогда
			ИмяМакета = "ФормаСПВ1";
		ИначеЕсли ТипЗнч(Пачка) = Тип("ДокументСсылка.СведенияОНачисленномЗаработкеСЗВ63") Тогда
			ИмяМакета = "ФормаСЗВ";
		Иначе
			ИмяМакета = "АДВ11";
		КонецЕсли;
		ОбъектПечати.Печать(ИмяМакета);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПоказатьФайлДокумента(Пачка, СохранятьДанные = Истина)
	
	Если СохранятьДанные Тогда
		Отказ = Ложь;
		СохранитьДокументы(Отказ, РежимДиалогаВопрос.ОКОтмена);
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		СохранениеТекущихДанных();
	КонецЕсли;
	
	Если НЕ Пачка.Пустая() Тогда
		ОбъектПечати = СоответствиеСсылокИОбъектов[Пачка];
		ЗаголовокФайла = "";
		Если ТипЗнч(Пачка) = Тип("ДокументСсылка.СведенияОТрудовомСтажеИЗаработкеСЗВ4") Тогда
			ЗаголовокФайла = "Файл-пачка документов СЗВ-6";
		ИначеЕсли ТипЗнч(Пачка) = Тип("ДокументСсылка.ПередачаСЗВ4ВПФР") Тогда
			ЗаголовокФайла = ?(ОбъектПечати.НеСодержитСЗВ, "Файл ведомости уплаты страховых взносов АДВ-11", "Файл описи сведений АДВ-6-2");
		ИначеЕсли ТипЗнч(Пачка) = Тип("ДокументСсылка.СведенияОВзносахИСтраховомСтажеСПВ1") Тогда
			ЗаголовокФайла = "Файл-пачка документов СПВ-1";
		ИначеЕсли ТипЗнч(Пачка) = Тип("ДокументСсылка.СведенияОНачисленномЗаработкеСЗВ63") Тогда
			ЗаголовокФайла = "Файл-пачка документов СЗВ-6-3";
		КонецЕсли;
		ПроцедурыПерсонифицированногоУчета.ПоказатьФайлДокумента(ОбъектПечати, ЗаголовокФайла);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПометитьНаУдалениеДокументОсновногоСписка(Элемент)
	
	Если ТипСведений = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Или ТипСведений = Перечисления.ТипыСведенийСЗВ.ПЕНСИОННАЯ Тогда
		ВыполнитьСохранениеДанныхФизлица();
	КонецЕсли;
	
	ТекущаяСтрока = Элемент.ТекущаяСтрока;
	
	Если ТекущаяСтрока <> Неопределено Тогда
		Если ТипСведений = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ И ТекущаяСтрока.ОтчетныйПериод <> ОтчетныйПериод Тогда
			Ответ = Вопрос("Вы действительно хотите удалить документ из списка учитываемых при распределении взносов?", РежимДиалогаВопрос.ДаНет, 0);
			Если Ответ = КодВозвратаДиалога.Да Тогда
				СоответствиеСсылокИОбъектов.Удалить(ТекущаяСтрока.Пачка);
				ПачкиДокументов.Удалить(ТекущаяСтрока);	
				ФлагВыполнятьСохранениеСведенийПринятыхВПФР = Истина;
			КонецЕсли;
		Иначе
			ДокументОбъект = СоответствиеСсылокИОбъектов[ТекущаяСтрока.Пачка];
			Если ДокументОбъект.ПринятоВПФР Тогда
				Предупреждение("Текущая пачка уже принята в ПФР!");
				Возврат;
			КонецЕсли;
			Ответ = Вопрос("Вы действительно хотите пометить пачку на удаление?", РежимДиалогаВопрос.ДаНет, 0);
			Если Ответ = КодВозвратаДиалога.Да Тогда
				СоответствиеСсылокИОбъектов.Удалить(ТекущаяСтрока.Пачка);
				Если ТипСведений = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
					Если ТипЗнч(ТекущаяСтрока.Пачка) = Тип("ДокументСсылка.ПередачаСЗВ4ВПФР") Тогда
						Для Каждого СтрокаДокумента Из ДокументОбъект.ПачкиДокументов Цикл
							СоответствиеСсылокИОбъектов.Удалить(СтрокаДокумента.ДокументПачка);
						КонецЦикла;
					КонецЕсли;
					ПачкиДокументов.Удалить(ТекущаяСтрока);	
				ИначеЕсли ТипСведений = Перечисления.ТипыСведенийСЗВ.ПЕНСИОННАЯ Тогда
					ПачкиСПВ.Удалить(ТекущаяСтрока);	
				Иначе
					ПачкиСЗВ63.Удалить(ТекущаяСтрока);	
				КонецЕсли;
			КонецЕсли;
			КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриИзмененииДокументаСЗВДляПоказаФизлиц()

	КатегорияЗастрахованныхЛиц = ДокументОбъектДляПоказаФизлиц.КатегорияЗастрахованныхЛиц;
	ЗаписиОСтаже.Отбор.КатегорияЗастрахованныхЛиц.Значение	= КатегорияЗастрахованныхЛиц;
	БылПериод = ТекущийОтчетныйПериод;
	Если ТекущийТипСведений = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ И ДокументОбъектДляПоказаФизлиц.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ Тогда
		ТекущийОтчетныйПериод = ДокументОбъектДляПоказаФизлиц.КорректируемыйПериод
	Иначе 
		ТекущийОтчетныйПериод = ОтчетныйПериод;
	КонецЕсли;
	ЗаписиОСтаже.Отбор.ОтчетныйПериод.Значение = ТекущийОтчетныйПериод;
	Если БылПериод <> ТекущийОтчетныйПериод Тогда
		ЭлементыФормы.КатегорияЗастрахованныхЛиц.ДоступныеЗначения = ПроцедурыПерсонифицированногоУчета.КатегорииЗастрахованныхЛицОрганизации(Организация, ОбщегоНазначения.ГоловнаяОрганизация(Организация), ТекущийОтчетныйПериод);
	КонецЕсли;
	КорректируемыйМесяцСтрока = ПредставлениеПериода(НачалоГода(ДокументОбъектДляПоказаФизлиц.КорректируемыйПериод), ПроцедурыПерсонифицированногоУчета.ОкончаниеОтчетногоПериодаПерсучета(ДокументОбъектДляПоказаФизлиц.КорректируемыйПериод), "ФП = Истина" );

КонецПроцедуры

Процедура ПриИзмененииДокументаАДВ11ДляПоказа()
	
	Если ДокументОбъектАДВ11.ПачкиДокументов.Количество() = 0 Тогда
		ДокументОбъектДляПоказаФизлиц = Неопределено;
		КатегорияЗастрахованныхЛиц = Перечисления.КатегорииЗастрахованныхЛицПФР.ПустаяСсылка();
		ЗаписиОСтаже.Отбор.КатегорияЗастрахованныхЛиц.Значение	= КатегорияЗастрахованныхЛиц;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриИзмененииДокументаСПВДляПоказа()
	
	КатегорияЗастрахованныхЛиц = ДокументОбъектСПВ.КатегорияЗастрахованныхЛиц;
	ЗаписиОСтаже.Отбор.КатегорияЗастрахованныхЛиц.Значение	= КатегорияЗастрахованныхЛиц;
	
КонецПроцедуры

Процедура ПроверитьДокументВCheckXML(Пачка)
	Отказ = Ложь;
	СохранитьДокументы(Отказ, РежимДиалогаВопрос.ОКОтмена);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	СохранениеТекущихДанных();
	
	Если НЕ Пачка.Пустая() Тогда
		ПроцедурыПерсонифицированногоУчета.ПроверитьФайлВCheckXML(СоответствиеСсылокИОбъектов[Пачка], ЭтаФорма);
	КонецЕсли;
КонецПроцедуры

Процедура ПроверитьДокументВCheckUFA(Пачка)
	
	Отказ = Ложь;
	СохранитьДокументы(Отказ, РежимДиалогаВопрос.ОКОтмена);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	СохранениеТекущихДанных();
	
	Если НЕ Пачка.Пустая() Тогда
		ПроцедурыПерсонифицированногоУчета.ПроверитьФайлВCheckUFA(СоответствиеСсылокИОбъектов[Пачка], ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьДокументВстроеннойПроверкой(Пачка)
	
	//ОбработкаСообщений = глЗначениеПеременной("глОбработкаСообщений");
	//ОбработкаСообщений.УдалитьСообщения();
	
	Отказ = Ложь;
	СохранитьДокументы(Отказ, РежимДиалогаВопрос.ОКОтмена);
	Если Отказ Тогда
		//ОбработкаСообщений.ПоказатьСообщения();
		Возврат;
	КонецЕсли;
	СохранениеТекущихДанных();	
	
	Если НЕ Пачка.Пустая() Тогда
		ДокументОбъект = СоответствиеСсылокИОбъектов[Пачка];
		ЕстьОшибки = Ложь;
		ДокументОбъект.ПроверитьПравильностьЗаполненияДокумента(ЕстьОшибки);
		Если ЕстьОшибки тогда
			РаботаСДиалогамиЗК.ПоказатьИнформациюОДокументе(ЭлементыФормы.НадписьСостояниеПодготовкиДокументов,
			ЭлементыФормы.ПолеКартинкиПредупреждение, 
			"Данные для передачи еще не готовы. Обнаружены ошибки при проверке.", "Ошибка");
		Иначе
			РаботаСДиалогамиЗК.ПоказатьИнформациюОДокументе(ЭлементыФормы.НадписьСостояниеПодготовкиДокументов,
			ЭлементыФормы.ПолеКартинкиПредупреждение, 
			"Данные для передачи в ПФР успешно прошли проверку.", "Информация");
		КонецЕсли;
		//ОбработкаСообщений.ПоказатьСообщения();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроставитьПринятоВПФРВПачке(Пачка)
	
	Если Не ЗначениеЗаполнено(Пачка) Тогда
		Возврат
	КонецЕсли;
	
	ДокументОбъект = СоответствиеСсылокИОбъектов[Пачка];
	Попытка
		
		Если ТипЗнч(Пачка) = Тип("ДокументСсылка.ПередачаСЗВ4ВПФР") Тогда
			
			Для Каждого СтрокаДокумента Из ДокументОбъект.ПачкиДокументов Цикл
				ДокументСЗВ = СоответствиеСсылокИОбъектов[СтрокаДокумента.ДокументПачка];
				ДокументСЗВ.Записать(РежимЗаписиДокумента.Проведение);
				ДокументСЗВ.ПринятоВПФР = Истина;
				ДокументСЗВ.Записать(РежимЗаписиДокумента.Запись);
			КонецЦикла;
			
		КонецЕсли;
		
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
		ДокументОбъект.ПринятоВПФР = Истина;
		ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
		
	Исключение
		ПоказатьИнформациюОбОшибке(ОбщегоНазначения.ПолучитьПричинуОшибки(ИнформацияОбОшибке()));
		ДокументОбъект.ПринятоВПФР = Ложь;
		
	КонецПопытки;
		
	Если ТипСведений = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
		Если ДокументОбъект.ПринятоВПФР И ТипЗнч(Пачка) = Тип("ДокументСсылка.ПередачаСЗВ4ВПФР") И Не ДокументОбъект.НеСодержитСЗВ Тогда
			 НаборЗаписей = РегистрыСведений.СведенияПринятыеПФР.СоздатьНаборЗаписей();
			 НаборЗаписей.Отбор.Организация.Установить(Организация);
			 НаборЗаписей.Отбор.ОтчетныйПериодПерсучетаПФР.Установить(ОтчетныйПериод);
			 СтрокаНабора = НаборЗаписей.Добавить();
			 СтрокаНабора.Организация = Организация;
			 СтрокаНабора.ОтчетныйПериодПерсучетаПФР = ОтчетныйПериод;
			 СтрокаНабора.КомплектДокументов = Пачка;
			 НаборЗаписей.Записать();
		КонецЕсли;
		ОформитьЭУПоСтрокеИзПачкиДокументов();
		ОформитьЭУПоСтрокеИзПачкиСЗВ6();
	ИначеЕсли ТипСведений = Перечисления.ТипыСведенийСЗВ.ПЕНСИОННАЯ Тогда
		ОформитьЭУПоСтрокеИзПачкиСПВ();
	Иначе
		ОформитьЭУПоСтрокеИзПачкиСЗВ63();
	КонецЕсли;
	ОформитьЭУПоСтрокеИзПачкиФизлиц();
	
КонецПроцедуры

Процедура СохранениеТекущихДанных()
	
	Если ТипСведений = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
		ВыполнитьСохранениеДанныхФизлица();
		Если ЗначениеЗаполнено(ДокументОбъектДляПоказаФизлиц.Ссылка) И ДокументОбъектДляПоказаФизлиц.Модифицированность() Тогда
			ДокументОбъектДляПоказаФизлиц.Записать(?(ДокументОбъектДляПоказаФизлиц.Проведен, РежимЗаписиДокумента.ОтменаПроведения, РежимЗаписиДокумента.Запись));
		КонецЕсли;
		Если ЗначениеЗаполнено(ДокументОбъектАДВ11.Ссылка) И ДокументОбъектАДВ11.Модифицированность() Тогда
			ДокументОбъектАДВ11.Записать(?(ДокументОбъектАДВ11.Проведен, РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));
		КонецЕсли;
	ИначеЕсли ТипСведений = Перечисления.ТипыСведенийСЗВ.ПЕНСИОННАЯ Тогда
		ВыполнитьСохранениеДанныхФизлица();
		Если ЗначениеЗаполнено(ДокументОбъектСПВ.Ссылка) И ДокументОбъектСПВ.Модифицированность() Тогда
			ДокументОбъектСПВ.Записать(?(ДокументОбъектСПВ.Проведен, РежимЗаписиДокумента.ОтменаПроведения, РежимЗаписиДокумента.Запись));
		КонецЕсли;
	Иначе	
		Если ЗначениеЗаполнено(ДокументОбъектСЗВ63.Ссылка) И ДокументОбъектСЗВ63.Модифицированность() Тогда
			ДокументОбъектСЗВ63.Записать(?(ДокументОбъектСЗВ63.Проведен, РежимЗаписиДокумента.ОтменаПроведения, РежимЗаписиДокумента.Запись));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // СохранениеТекущихДанных()

// Процедура сохраняет документы в базу: существующие документы просто сохряняются, 
// удаленные документы помечаются на удаление, а новые документы записываются поверх удаленных или,
// если нет удаленных документов, создаются новые
Процедура СохранитьДокументы(Отказ = Ложь, РежимДиалога = Неопределено, ВыводитьВопрос = Истина)
	
	Если РежимДиалога = Неопределено Тогда
		РежимДиалога = РежимДиалогаВопрос.ДаНетОтмена;
	КонецЕсли;
	
	// Определяем модифицированность документов.
	ДокументыМодифицированы = Ложь;
	
	СписокДокументовДерева = Новый Массив;
	Для каждого ЭлементСоответствия Из СоответствиеСсылокИОбъектов Цикл
		СписокДокументовДерева.Добавить(ЭлементСоответствия.Ключ);
		Если ЭлементСоответствия.Значение.Модифицированность() Тогда
			ДокументыМодифицированы = Истина;
		КонецЕсли;
	КонецЦикла;
	
	// получаем список удаляемых документов
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СписокДокументовДерева", СписокДокументовДерева);
	Запрос.УстановитьПараметр("Организация", ТекущаяОрганизация);
	Запрос.УстановитьПараметр("ОтчетныйПериод", ПредыдущееЗначениеОтчетныйПериод);
	Если ТекущийТипСведений = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Ссылка
		|ИЗ
		|	Документ.СведенияОТрудовомСтажеИЗаработкеСЗВ4 КАК СведенияОТрудовомСтажеИЗаработкеСЗВ4
		|ГДЕ
		|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Организация = &Организация
		|	И СведенияОТрудовомСтажеИЗаработкеСЗВ4.ОтчетныйПериод = &ОтчетныйПериод
		|	И (НЕ СведенияОТрудовомСтажеИЗаработкеСЗВ4.ПометкаУдаления)
		|	И (НЕ СведенияОТрудовомСтажеИЗаработкеСЗВ4.Ссылка В (&СписокДокументовДерева))
		|	И (НЕ СведенияОТрудовомСтажеИЗаработкеСЗВ4.СпециальныйДокумент2010года)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПередачаСЗВ4вПФР.Ссылка
		|ИЗ
		|	Документ.ПередачаСЗВ4вПФР КАК ПередачаСЗВ4вПФР
		|ГДЕ
		|	ПередачаСЗВ4вПФР.Организация = &Организация
		|	И ПередачаСЗВ4вПФР.ОтчетныйПериод = &ОтчетныйПериод
		|	И (НЕ ПередачаСЗВ4вПФР.ПометкаУдаления)
		|	И (НЕ ПередачаСЗВ4вПФР.СпециальныйДокумент2010года)
		|	И (НЕ ПередачаСЗВ4вПФР.Ссылка В (&СписокДокументовДерева))
		|	И (НЕ ПередачаСЗВ4вПФР.НеСодержитСЗВ)";
	
	ИначеЕсли ТекущийТипСведений = Перечисления.ТипыСведенийСЗВ.ПЕНСИОННАЯ Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СведенияОВзносахИСтраховомСтажеСПВ1.Ссылка
		|ИЗ
		|	Документ.СведенияОВзносахИСтраховомСтажеСПВ1 КАК СведенияОВзносахИСтраховомСтажеСПВ1
		|ГДЕ
		|	СведенияОВзносахИСтраховомСтажеСПВ1.Организация = &Организация
		|	И СведенияОВзносахИСтраховомСтажеСПВ1.ОтчетныйПериод = &ОтчетныйПериод
		|	И (НЕ СведенияОВзносахИСтраховомСтажеСПВ1.ПометкаУдаления)
		|	И (НЕ СведенияОВзносахИСтраховомСтажеСПВ1.Ссылка В (&СписокДокументовДерева))";
		
	Иначе
		Запрос.УстановитьПараметр("ОтчетныйПериод", ПредыдущееЗначениеОтчетныйГод);
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СведенияОНачисленномЗаработкеСЗВ63.Ссылка
		|ИЗ
		|	Документ.СведенияОНачисленномЗаработкеСЗВ63 КАК СведенияОНачисленномЗаработкеСЗВ63
		|ГДЕ
		|	СведенияОНачисленномЗаработкеСЗВ63.Организация = &Организация
		|	И СведенияОНачисленномЗаработкеСЗВ63.ОтчетныйПериод = &ОтчетныйПериод
		|	И (НЕ СведенияОНачисленномЗаработкеСЗВ63.ПометкаУдаления)
		|	И (НЕ СведенияОНачисленномЗаработкеСЗВ63.Ссылка В (&СписокДокументовДерева))";
		
	КонецЕсли;
	ВыборкаУдаляемыхДокументов = Запрос.Выполнить().Выбрать();
	ДокументыМодифицированы = ДокументыМодифицированы Или ВыборкаУдаляемыхДокументов.Количество() > 0 Или ((ТекущийТипСведений = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Или ТекущийТипСведений = Перечисления.ТипыСведенийСЗВ.ПЕНСИОННАЯ) И Не ЗаписиОСтажеЗаполненыПолностью()) Или ФлагВыполнятьСохранениеСведенийПринятыхВПФР;
	
	Если Не ДокументыМодифицированы Тогда
		Возврат
	КонецЕсли;
	
	Если ВыводитьВопрос Тогда
		РезультатОтвет = Вопрос("Сохранить текущие изменения?", РежимДиалога,,,"Сохранение данных");
	Иначе
		РезультатОтвет = КодВозвратаДиалога.Да;
	КонецЕсли;
	Если РезультатОтвет = КодВозвратаДиалога.Да Или РезультатОтвет = КодВозвратаДиалога.ОК Тогда
		НачатьТранзакцию();
		// Сохраняем измененные документы
		Для каждого ЭлементСоответствия Из СоответствиеСсылокИОбъектов Цикл
			Если НЕ ЭлементСоответствия.Значение.ЭтоНовый() И ЭлементСоответствия.Значение.Модифицированность() Тогда
				ЭлементСоответствия.Значение.Записать(?(ЭлементСоответствия.Значение.Проведен,РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));
			КонецЕсли;
		КонецЦикла;
		
		// Помечаем на удаление удаляемые объекты
		Пока ВыборкаУдаляемыхДокументов.Следующий() Цикл
			ДокОбъект = ВыборкаУдаляемыхДокументов.Ссылка.ПолучитьОбъект();
			ДокОбъект.УстановитьПометкуУдаления(Истина);
		КонецЦикла;
		
		// Записываем в базу новые, только созданные документы на место удаленных документов
		Если ТекущийТипСведений = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
			
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ПередачаСЗВ4вПФР.Ссылка
			|ИЗ
			|	Документ.ПередачаСЗВ4вПФР КАК ПередачаСЗВ4вПФР
			|ГДЕ
			|	ПередачаСЗВ4вПФР.ПометкаУдаления";
			ТаблицаУдаленныхАДВ11 = Запрос.Выполнить().Выгрузить();
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Ссылка
			|ИЗ
			|	Документ.СведенияОТрудовомСтажеИЗаработкеСЗВ4 КАК СведенияОТрудовомСтажеИЗаработкеСЗВ4
			|ГДЕ
			|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.ПометкаУдаления";
			ТаблицаУдаленныхСЗВ = Запрос.Выполнить().Выгрузить();
			
			Для каждого ЭлементСоответствия Из СоответствиеСсылокИОбъектов Цикл
				Если ЭлементСоответствия.Значение.ЭтоНовый() Тогда
					ЗаписатьНовыйДокументПоверхСтарого(ЭлементСоответствия, ТаблицаУдаленныхАДВ11, ТаблицаУдаленныхСЗВ);
				КонецЕсли;
			КонецЦикла;
			Для каждого ЭлементСоответствия Из СоответствиеСсылокИОбъектов Цикл
				Если НЕ ЭлементСоответствия.Значение.ЭтоНовый() И ЭлементСоответствия.Значение.Модифицированность() Тогда
					ЭлементСоответствия.Значение.Записать(?(ЭлементСоответствия.Значение.Проведен,РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));
				КонецЕсли;
			КонецЦикла;
		ИначеЕсли ТекущийТипСведений = Перечисления.ТипыСведенийСЗВ.ПЕНСИОННАЯ Тогда
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	СведенияОВзносахИСтраховомСтажеСПВ1.Ссылка
			|ИЗ
			|	Документ.СведенияОВзносахИСтраховомСтажеСПВ1 КАК СведенияОВзносахИСтраховомСтажеСПВ1
			|ГДЕ
			|	СведенияОВзносахИСтраховомСтажеСПВ1.ПометкаУдаления";
			ТаблицаУдаленныхСПВ = Запрос.Выполнить().Выгрузить();
			Для каждого ЭлементСоответствия Из СоответствиеСсылокИОбъектов Цикл
				
				Если ЭлементСоответствия.Значение.ЭтоНовый() Тогда
					ЗаписатьНовыйДокументПоверхСтарого(ЭлементСоответствия, ТаблицаУдаленныхСПВ);
				КонецЕсли;
				
			КонецЦикла;
		Иначе
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	СведенияОНачисленномЗаработкеСЗВ63.Ссылка
			|ИЗ
			|	Документ.СведенияОНачисленномЗаработкеСЗВ63 КАК СведенияОНачисленномЗаработкеСЗВ63
			|ГДЕ
			|	СведенияОНачисленномЗаработкеСЗВ63.ПометкаУдаления";
			ТаблицаУдаленныхСЗВ = Запрос.Выполнить().Выгрузить();
			Для каждого ЭлементСоответствия Из СоответствиеСсылокИОбъектов Цикл
				
				Если ЭлементСоответствия.Значение.ЭтоНовый() Тогда
					ЗаписатьНовыйДокументПоверхСтарого(ЭлементСоответствия, ТаблицаУдаленныхСЗВ);
				КонецЕсли;
				
			КонецЦикла;
		КонецЕсли;
		
		// Запишем сведения о документах, принятых в ПФР
		Если ФлагВыполнятьСохранениеСведенийПринятыхВПФР Тогда
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("Организация",	Организация);
			Запрос.УстановитьПараметр("СписокПериодов",	МассивПрошлыхПериодов);
			Запрос.Текст =
			"ВЫБРАТЬ
			|	СведенияПринятыеПФР.Организация,
			|	СведенияПринятыеПФР.ОтчетныйПериодПерсучетаПФР,
			|	СведенияПринятыеПФР.КомплектДокументов
			|ИЗ
			|	РегистрСведений.СведенияПринятыеПФР КАК СведенияПринятыеПФР
			|ГДЕ
			|	СведенияПринятыеПФР.Организация = &Организация
			|	И (НЕ СведенияПринятыеПФР.ОтчетныйПериодПерсучетаПФР В (&СписокПериодов))";
			
			НаборЗаписей = РегистрыСведений.СведенияПринятыеПФР.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Организация.Установить(Организация);
			НаборЗаписей.Загрузить(Запрос.Выполнить().Выгрузить());
			
			Для Каждого ПрошлыйПериод из МассивПрошлыхПериодов Цикл
				СтрокаПачки = ПачкиДокументов.Найти(ПрошлыйПериод, "ОтчетныйПериод");
				Если СтрокаПачки <> Неопределено Тогда
					Запись = НаборЗаписей.Добавить();
					Запись.Организация					= Организация;
					Запись.ОтчетныйПериодПерсучетаПФР	= ПрошлыйПериод;
					Запись.КомплектДокументов			= СтрокаПачки.Пачка;
				КонецЕсли;
			КонецЦикла;
			
			НаборЗаписей.Записать();
			
			ФлагВыполнятьСохранениеСведенийПринятыхВПФР = Ложь;
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
	ИначеЕсли РезультатОтвет = КодВозвратаДиалога.Отмена Тогда
		Отказ = Истина;
	ИначеЕсли РезультатОтвет = КодВозвратаДиалога.Нет Тогда
		ДокументОбъектАДВ11 = Неопределено;
		ДокументОбъектДляПоказаФизЛиц = Неопределено;
		ДокументОбъектСПВ = Неопределено;
		ДокументОбъектСЗВ63 = Неопределено;
		ФлагВыполнятьСохранениеСведенийПринятыхВПФР = Ложь;
	КонецЕсли;
	
КонецПроцедуры // СохранитьДокументы()

Процедура СохранитьДокументСПерезаписью(Ссылка, Объект)
	Если Объект.ЭтоНовый() Тогда
		
		СписокДокументовДерева = Новый Массив;
		Для каждого ЭлементСоответствия Из СоответствиеСсылокИОбъектов Цикл
			СписокДокументовДерева.Добавить(ЭлементСоответствия.Ключ);
		КонецЦикла; 
		
		// получаем список удаляемых документов
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("СписокДокументовДерева", СписокДокументовДерева);
		Запрос.УстановитьПараметр("Организация", ТекущаяОрганизация);
		Запрос.УстановитьПараметр("ОтчетныйПериод", ПредыдущееЗначениеОтчетныйПериод);
		Если ТекущийТипСведений = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
			
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
			|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Ссылка
			|ИЗ
			|	Документ.СведенияОТрудовомСтажеИЗаработкеСЗВ4 КАК СведенияОТрудовомСтажеИЗаработкеСЗВ4
			|ГДЕ
			|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Организация = &Организация
			|	И СведенияОТрудовомСтажеИЗаработкеСЗВ4.ОтчетныйПериод = &ОтчетныйПериод
			|	И (НЕ СведенияОТрудовомСтажеИЗаработкеСЗВ4.ПометкаУдаления)
			|	И (НЕ СведенияОТрудовомСтажеИЗаработкеСЗВ4.Ссылка В (&СписокДокументовДерева))
			|	И (НЕ СведенияОТрудовомСтажеИЗаработкеСЗВ4.СпециальныйДокумент2010года)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ ПЕРВЫЕ 1
			|	ПередачаСЗВ4вПФР.Ссылка
			|ИЗ
			|	Документ.ПередачаСЗВ4вПФР КАК ПередачаСЗВ4вПФР
			|ГДЕ
			|	ПередачаСЗВ4вПФР.Организация = &Организация
			|	И ПередачаСЗВ4вПФР.ОтчетныйПериод = &ОтчетныйПериод
			|	И (НЕ ПередачаСЗВ4вПФР.ПометкаУдаления)
			|	И (НЕ ПередачаСЗВ4вПФР.СпециальныйДокумент2010года)
			|	И (НЕ ПередачаСЗВ4вПФР.Ссылка В (&СписокДокументовДерева))
			|	И (НЕ ПередачаСЗВ4вПФР.НеСодержитСЗВ)";
			
		ИначеЕсли ТекущийТипСведений = Перечисления.ТипыСведенийСЗВ.ПЕНСИОННАЯ Тогда
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
			|	СведенияОВзносахИСтраховомСтажеСПВ1.Ссылка
			|ИЗ
			|	Документ.СведенияОВзносахИСтраховомСтажеСПВ1 КАК СведенияОВзносахИСтраховомСтажеСПВ1
			|ГДЕ
			|	СведенияОВзносахИСтраховомСтажеСПВ1.Организация = &Организация
			|	И СведенияОВзносахИСтраховомСтажеСПВ1.ОтчетныйПериод = &ОтчетныйПериод
			|	И (НЕ СведенияОВзносахИСтраховомСтажеСПВ1.ПометкаУдаления)
			|	И (НЕ СведенияОВзносахИСтраховомСтажеСПВ1.Ссылка В (&СписокДокументовДерева))";
			
		Иначе
			Запрос.УстановитьПараметр("ОтчетныйПериод", ПредыдущееЗначениеОтчетныйГод);
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
			|	СведенияОНачисленномЗаработкеСЗВ63.Ссылка
			|ИЗ
			|	Документ.СведенияОНачисленномЗаработкеСЗВ63 КАК СведенияОНачисленномЗаработкеСЗВ63
			|ГДЕ
			|	СведенияОНачисленномЗаработкеСЗВ63.Организация = &Организация
			|	И СведенияОНачисленномЗаработкеСЗВ63.ОтчетныйПериод = &ОтчетныйПериод
			|	И (НЕ СведенияОНачисленномЗаработкеСЗВ63.ПометкаУдаления)
			|	И (НЕ СведенияОНачисленномЗаработкеСЗВ63.Ссылка В (&СписокДокументовДерева))";
			
		КонецЕсли;
		ВыборкаУдаляемыхДокументов = Запрос.Выполнить().Выбрать();
		
		НачатьТранзакцию();
		
		// Помечаем на удаление удаляемые объекты
		Пока ВыборкаУдаляемыхДокументов.Следующий() Цикл
			ДокОбъект = ВыборкаУдаляемыхДокументов.Ссылка.ПолучитьОбъект();
			ДокОбъект.УстановитьПометкуУдаления(Истина);
		КонецЦикла;
		
		// Записываем в базу новые, только созданные документы на место удаленных документов
		Если ТипЗнч(Ссылка) = Тип("ДокументСсылка.ПередачаСЗВ4ВПФР") Тогда
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
			|	ПередачаСЗВ4вПФР.Ссылка
			|ИЗ
			|	Документ.ПередачаСЗВ4вПФР КАК ПередачаСЗВ4вПФР
			|ГДЕ
			|	ПередачаСЗВ4вПФР.ПометкаУдаления";
		ИначеЕсли ТипЗнч(Ссылка) = Тип("ДокументСсылка.СведенияОТрудовомСтажеИЗаработкеСЗВ4") Тогда
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
			|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Ссылка
			|ИЗ
			|	Документ.СведенияОТрудовомСтажеИЗаработкеСЗВ4 КАК СведенияОТрудовомСтажеИЗаработкеСЗВ4
			|ГДЕ
			|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.ПометкаУдаления";
		ИначеЕсли ТипЗнч(Ссылка) = Тип("ДокументСсылка.СведенияОВзносахИСтраховомСтажеСПВ1") Тогда
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1 
			|	СведенияОВзносахИСтраховомСтажеСПВ1.Ссылка
			|ИЗ
			|	Документ.СведенияОВзносахИСтраховомСтажеСПВ1 КАК СведенияОВзносахИСтраховомСтажеСПВ1
			|ГДЕ
			|	СведенияОВзносахИСтраховомСтажеСПВ1.ПометкаУдаления";
		Иначе
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
			|	СведенияОНачисленномЗаработкеСЗВ63.Ссылка
			|ИЗ
			|	Документ.СведенияОНачисленномЗаработкеСЗВ63 КАК СведенияОНачисленномЗаработкеСЗВ63
			|ГДЕ
			|	СведенияОНачисленномЗаработкеСЗВ63.ПометкаУдаления";
		КонецЕсли;
		
		ТаблицаУдаленныхДокументов = Запрос.Выполнить().Выгрузить();
		
		Для каждого ЭлементСоответствия Из СоответствиеСсылокИОбъектов Цикл
			Если ЭлементСоответствия.Ключ = Ссылка Тогда
				Если ТипЗнч(Ссылка) = Тип("ДокументСсылка.СведенияОТрудовомСтажеИЗаработкеСЗВ4") Тогда
					ЗаписатьНовыйДокументПоверхСтарого(ЭлементСоответствия, Неопределено, ТаблицаУдаленныхДокументов);
				Иначе
					ЗаписатьНовыйДокументПоверхСтарого(ЭлементСоответствия, ТаблицаУдаленныхДокументов);
				КонецЕсли;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		ЗафиксироватьТранзакцию();
		
	Иначе	
		Объект.Записать(?(Объект.Проведен,РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));
	КонецЕсли;
КонецПроцедуры // СохранитьДокументы()

Процедура УстановитьЗаголовкиОрганизацийВФорме()
	
	ЭлементыФормы.НадписьОрганизация.Заголовок = ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Организация:");
	
КонецПроцедуры // УстановитьЗаголовкиОрганизацийВФорме()

// Процедура обнуляет все сведения о стаже сотрудников, указанного документа,
// оставляя только первую запись с периодом работы
//
Процедура УдалитьОсобенностиИзСтажаФизлиц(ДокументСЗВ)
	
	ЗаписиОСтаже.Записать();
	
	ЗаписиСЗВ = РегистрыСведений.ЗаписиОСтажеДляСЗВ4.СоздатьНаборЗаписей();
	РедактируемыйОтчетныйПериод = ?(ДокументСЗВ.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ, ДокументСЗВ.ОтчетныйПериод, ДокументСЗВ.КорректируемыйПериод);
	РедактируемаяОрганизация = ДокументСЗВ.Организация;
	РедактируемаяКатегория = ДокументСЗВ.КатегорияЗастрахованныхЛиц;
	Для Каждого СтрокаДокумента ИЗ ДокументСЗВ.РаботникиОрганизации Цикл
		
		ЗаписиСЗВ.Отбор.ОбособленноеПодразделение.Установить(РедактируемаяОрганизация);
		ЗаписиСЗВ.Отбор.ОтчетныйПериод.Установить(РедактируемыйОтчетныйПериод);
		ЗаписиСЗВ.Отбор.КатегорияЗастрахованныхЛиц.Установить(РедактируемаяКатегория);
		ЗаписиСЗВ.Отбор.ФизЛицо.Установить(СтрокаДокумента.ФизЛицо);
		ЗаписиСЗВ.Прочитать();
		
		Для каждого Запись Из ЗаписиСЗВ Цикл
			Если ЗначениеЗаполнено(Запись.НомерДополнительнойЗаписи) Тогда
				ЗаписиСЗВ.Удалить(Запись)
			Иначе
				Запись.ТерриториальныеУсловия = "";
				Запись.ПараметрТерриториальныхУсловий = "";
				Запись.ОсобыеУсловияТруда = "";
				Запись.ОснованиеИсчисляемогоСтажа = "";
				Запись.ПервыйПараметрИсчисляемогоСтажа = "";
				Запись.ВторойПараметрИсчисляемогоСтажа = "";
				Запись.ТретийПараметрИсчисляемогоСтажа = "";
				Запись.ОснованиеВыслугиЛет = "";
				Запись.ПервыйПараметрВыслугиЛет = "";
				Запись.ВторойПараметрВыслугиЛет = "";
				Запись.ТретийПараметрВыслугиЛет = "";
			КонецЕсли;
		КонецЦикла;
		
		Если ЗаписиСЗВ.Модифицированность() Тогда
			ЗаписиСЗВ.Записать();
		КонецЕсли;
		
	КонецЦикла;
	
	ЗаписиОСтаже.Прочитать();
	
КонецПроцедуры // УдалитьОсобенностиИзСтажаФизлиц()

Процедура УдалитьСЗВ6ИзОписи()
	
	ВыполнитьСохранениеДанныхФизлица();
	
	ТекущаяСтрока = ЭлементыФормы.ПачкиСЗВ6.ТекущаяСтрока;
	
	Если ТекущаяСтрока <> Неопределено Тогда
		
		Если ДокументОбъектАДВ11.ЗаполненПринятымиСведениями Тогда
			Предупреждение("Текущая Опись была загружена по принятым в ПФР данным!");
			Возврат;
		КонецЕсли;
		
		Если ДокументОбъектАДВ11.ПринятоВПФР Тогда
			Предупреждение("Текущая Опись уже принята в ПФР!");
			Возврат;
		КонецЕсли;
		
		СтрокаПачки = ПачкиДокументов.Добавить();
		СтрокаПачки.Пачка = ТекущаяСтрока.ДокументПачка;
		СтрокаПачки.ОтчетныйПериод = ОтчетныйПериод;
		ДокументОбъектАДВ11.ПачкиДокументов.Удалить(ТекущаяСтрока);	

	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьНедоступностьДанныхФизлица()
	
	Если ТипСведений = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
		
		ЭлементыФормы.НадписьДанныеОСтажеФизлица.Заголовок = "  Состав пачки СЗВ-6" + ?(ДокументОбъектАДВ11.ПачкиДокументов.Количество() > 0 Или ПачкиДокументов.Количество() > 0 И ЭлементыФормы.ПачкиДокументов.ТекущиеДанные <> Неопределено И ТипЗнч(ЭлементыФормы.ПачкиДокументов.ТекущиеДанные.Пачка) = Тип("ДокументСсылка.СведенияОТрудовомСтажеИЗаработкеСЗВ4"), " № " + ДокументОбъектДляПоказаФизЛиц.НомерПачки, " (не выбрана)");
		ЭлементыФормы.НачисленоСтраховая.ТолькоПросмотр = Истина;
		ЭлементыФормы.НачисленоНакопительная.ТолькоПросмотр = Истина;
		ЭлементыФормы.ДоначисленоСтраховая.ТолькоПросмотр = Истина;
		ЭлементыФормы.ДоначисленоНакопительная.ТолькоПросмотр = Истина;
		ЭлементыФормы.УплаченоСтраховая.ТолькоПросмотр = Истина;
		ЭлементыФормы.УплаченоНакопительная.ТолькоПросмотр = Истина;
		ЭлементыФормы.ДоУплаченоНакопительная.ТолькоПросмотр = Истина;
		ЭлементыФормы.ДоУплаченоСтраховая.ТолькоПросмотр = Истина;
		ЭлементыФормы.АдресДляИнформирования.ТолькоПросмотр = Истина;
		ЭлементыФормы.СтраховойНомерПФР.ТолькоПросмотр = Истина;
		ЭлементыФормы.НачисленоСтраховая.Значение = 0;
		ЭлементыФормы.НачисленоНакопительная.Значение = 0;
		ЭлементыФормы.ДоначисленоСтраховая.Значение = 0;
		ЭлементыФормы.ДоначисленоНакопительная.Значение = 0;
		ЭлементыФормы.УплаченоСтраховая.Значение = 0;
		ЭлементыФормы.УплаченоНакопительная.Значение = 0;
		ЭлементыФормы.ДоУплаченоСтраховая.Значение = 0;
		ЭлементыФормы.ДоУплаченоНакопительная.Значение = 0;
		ЭлементыФормы.АдресДляИнформирования.Значение = "";
		ЭлементыФормы.СтраховойНомерПФР.Значение = "";
		ЭлементыФормы.ЗаписиОСтаже.ТолькоПросмотр = Истина;
		ЭлементыФормы.КоманднаяПанельСтажа.Кнопки.Перезаполнить.Доступность = Ложь;
		
		ЭлементыФормы.ПанельДоначисленоВзносов.Свертка = РежимСверткиЭлементаУправления.Лево;
	
		// Установим отбор для записей о стаже
		ЗаписиОСтаже.Отбор.Физлицо.Значение	= Справочники.ФизическиеЛица.ПустаяСсылка();
		
	ИначеЕсли ТипСведений = Перечисления.ТипыСведенийСЗВ.ПЕНСИОННАЯ Тогда
		
		ЭлементыФормы.НадписьДанныеОФизлицахСПВ.Заголовок = "  Состав пачки СПВ" + ?(ПачкиСПВ.Количество() > 0, " № " + ДокументОбъектСПВ.НомерПачки, " (не выбрана)");
		ЭлементыФормы.ДатаСоставленияФЛ.ТолькоПросмотр = Истина;
		ЭлементыФормы.НачисленоСтраховая1.ТолькоПросмотр = Истина;
		ЭлементыФормы.НачисленоНакопительная1.ТолькоПросмотр = Истина;
		ЭлементыФормы.УплаченоСтраховая1.ТолькоПросмотр = Истина;
		ЭлементыФормы.УплаченоНакопительная1.ТолькоПросмотр = Истина;
		ЭлементыФормы.СтраховойНомерПФР1.ТолькоПросмотр = Истина;
		ЭлементыФормы.ДатаСоставленияФЛ.Значение = "";
		ЭлементыФормы.НачисленоСтраховая1.Значение = 0;
		ЭлементыФормы.НачисленоНакопительная1.Значение = 0;
		ЭлементыФормы.УплаченоСтраховая1.Значение = 0;
		ЭлементыФормы.УплаченоНакопительная1.Значение = 0;
		ЭлементыФормы.СтраховойНомерПФР1.Значение = "";
		ЭлементыФормы.ЗаписиОСтажеСПВ.ТолькоПросмотр = Истина;
		
		// Установим отбор для записей о стаже
		ЗаписиОСтаже.Отбор.Физлицо.Значение	= Справочники.ФизическиеЛица.ПустаяСсылка();
		
	Иначе
		
		ЭлементыФормы.НадписьДанныеОФизлицахСЗВ63.Заголовок = "  Состав пачки СЗВ-6-3" + ?(ПачкиСЗВ63.Количество() > 0, " № " + ДокументОбъектСЗВ63.НомерПачки, " (не выбрана)");
		ЭлементыФормы.Фамилия.ТолькоПросмотр = Истина;
		ЭлементыФормы.Имя.ТолькоПросмотр = Истина;
		ЭлементыФормы.Отчество.ТолькоПросмотр = Истина;
		ЭлементыФормы.СтраховойНомерПФР3.ТолькоПросмотр = Истина;
		ЭлементыФормы.Фамилия.Значение = "";
		ЭлементыФормы.Имя.Значение = "";
		ЭлементыФормы.Отчество.Значение = "";
		ЭлементыФормы.СтраховойНомерПФР3.Значение = "";
		ЭлементыФормы.СведенияОЗаработке.ТолькоПросмотр = Истина;
		ЭлементыФормы.КнопкаОбновитьДанныеОДоходах.Доступность = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьДоступностьДанныхПачкиСЗВ(Доступность = Ложь)
	
	ЭлементыФормы.ПереключательТипФормДокументов.Доступность = Доступность;
	ЭлементыФормы.ПереключательВидКорректировки.Доступность = Доступность;
	ЭлементыФормы.ПереключательКорректирующие.Доступность = Доступность;
	ЭлементыФормы.ПереключательОтменяющие.Доступность = Доступность;
	ЭлементыФормы.СЗВ_6_2.Доступность = Доступность;
	ЭлементыФормы.Исполнитель1.ТолькоПросмотр = Не Доступность;
	ЭлементыФормы.ДатаСоставления1.ТолькоПросмотр = Не Доступность;
	ЭлементыФормы.НомерПачки1.ТолькоПросмотр = Не Доступность;
	ЭлементыФормы.Руководитель1.ТолькоПросмотр = Не Доступность;
	ЭлементыФормы.ДолжностьРуководителя1.ТолькоПросмотр = Не Доступность;
	ЭлементыФормы.КатегорияЗастрахованныхЛиц.ТолькоПросмотр = Не Доступность;
	ЭлементыФормы.КорректируемыйПериод.ТолькоПросмотр = Не Доступность;
	ЭлементыФормы.Комментарий.ТолькоПросмотр = Не Доступность;
	
	ЭлементыФормы.РаспределитьВзносы.Доступность = Доступность;
	ЭлементыФормы.РаспределитьВзносыСКомментарием.Доступность = Доступность;
	ЭлементыФормы.Проверить2.Доступность = Доступность;
	ЭлементыФормы.Печать2.Доступность = Доступность;
	ЭлементыФормы.ПоказатьФайл2.Доступность = Доступность;
	ЭлементыФормы.НаДиск2.Доступность = Доступность;
	
КонецПроцедуры

Процедура ФайлДокументаНаДиск(Пачка)
	
	Отказ = Ложь;
	СохранитьДокументы(Отказ, РежимДиалогаВопрос.ОКОтмена);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	СохранениеТекущихДанных();
	
	Если НЕ Пачка.Пустая() Тогда
		ОбработкаСообщений = глЗначениеПеременной("глОбработкаСообщений");
		ОбработкаСообщений.УдалитьСообщения();
		ОбъектДействия = СоответствиеСсылокИОбъектов[Пачка];
		ПроцедурыПерсонифицированногоУчета.ЗаписатьФайлДокументаНаДискету(ОбъектДействия, глЗначениеПеременной("глТекущийПользователь"), ПроцедурыПерсонифицированногоУчета.ПолучитьИмяФайлаПФ(ОбъектДействия.Ссылка, Год(ОтчетныйПериод)), КодировкаТекста.ANSI);	
	КонецЕсли;
	
КонецПроцедуры

//Выполняет нумерацию записей о стаже 
//(устанавливает значения измерений: НомерПериодаТрудовойДеятельности,НомерОсновнойЗаписи,НомерДополнительнойЗаписи)
Функция ВыполнитьНумерациюЗаписейОСтаже()
	
	//Нумерация записей стажа перед записью
	НомерОсновнойЗаписи =1; 
	НомерДополнительнойЗаписи =0; 
	НомерСтроки =0;
	Для Каждого СтрокаСтажа Из ЗаписиОСтаже цикл
		НомерСтроки = НомерСтроки +1;
		
		//Контролируем смену основной записи
		Если ЗначениеЗаполнено(СтрокаСтажа.ДатаНачалаПериода) И ЗначениеЗаполнено(СтрокаСтажа.ДатаОкончанияПериода) тогда
			//Встретили основную запись
			
			НомерДополнительнойЗаписи =0; 
		ИначеЕсли НомерОсновнойЗаписи <> 0 И ЗаписиОСтаже.Количество() > 1 тогда
				НомерДополнительнойЗаписи =НомерДополнительнойЗаписи + 1; 

		КонецЕсли;	
		
		СтрокаСтажа.НомерОсновнойЗаписи = НомерОсновнойЗаписи;
		СтрокаСтажа.НомерДополнительнойЗаписи = НомерДополнительнойЗаписи;
		
		НомерОсновнойЗаписи = НомерОсновнойЗаписи + 1; 
	КонецЦикла;	
	
	Возврат Истина;
КонецФункции	 

// Процедура сохряняет данные о стажефизического лица в регистры сведений
//
Функция ВыполнитьСохранениеДанныхФизлица(Знач НеобходимаяОрганизация = Неопределено, Знач НеобходимыйОтчетныйПериод = Неопределено)
	
	// Сохранение данных о стаже
	Если СтажДоступенДляРедактирования И ЗаписиОСтаже.Модифицированность() Тогда
		
		Если НеобходимыйОтчетныйПериод = Неопределено Тогда
			Если ТекущийТипСведений = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ И ДокументОбъектДляПоказаФизлиц.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ Тогда
				НеобходимыйОтчетныйПериод = ДокументОбъектДляПоказаФизлиц.КорректируемыйПериод;
			Иначе	
				НеобходимыйОтчетныйПериод = ОтчетныйПериод;
			КонецЕсли;
		КонецЕсли;
		
		Если НеобходимаяОрганизация = Неопределено Тогда
			НеобходимаяОрганизация = Организация;
		КонецЕсли;
		
		// Проверим заполнение организации 
		Если Не ЗначениеЗаполнено(НеобходимаяОрганизация) Тогда
			РаботаСДиалогами.ВывестиПредупреждение(ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Не указана организация!") + " Записи о стаже не могут быть сохранены!");
			Возврат Ложь;
		КонецЕсли; 
		
		Если Не ЗначениеЗаполнено(ФизЛицо) Тогда
			РаботаСДиалогами.ВывестиПредупреждение("Не указано застрахованное лицо. Записи о стаже не могут быть сохранены!");
			Возврат Ложь;
		КонецЕсли; 
		
		Если Не ЗначениеЗаполнено(КатегорияЗастрахованныхЛиц) Тогда
			РаботаСДиалогами.ВывестиПредупреждение("Не указана категория застрахованного лица в пачке " + ?(ТекущийТипСведений = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ,"СЗВ-6","СПВ-1") + ". Записи о стаже не могут быть сохранены!");
			Возврат Ложь;
		КонецЕсли; 
		
		//перед записью строк стажа пронумеруем записи
		ВыполнитьНумерациюЗаписейОСтаже();	 
		
		НачатьТранзакцию();
		
		Если ЗаписиОСтаже.Отбор.ФизЛицо.Использование И ЗаписиОСтаже.Отбор.ФизЛицо.Значение = ФизЛицо
			И ЗаписиОСтаже.Отбор.ОбособленноеПодразделение.Использование И ЗаписиОСтаже.Отбор.ОбособленноеПодразделение.Значение = НеобходимаяОрганизация
			И ЗаписиОСтаже.Отбор.ОтчетныйПериод.Использование И ЗаписиОСтаже.Отбор.ОтчетныйПериод.Значение = НеобходимыйОтчетныйПериод
			И ЗаписиОСтаже.Отбор.КатегорияЗастрахованныхЛиц.Использование И ЗаписиОСтаже.Отбор.КатегорияЗастрахованныхЛиц.Значение = КатегорияЗастрахованныхЛиц
			Тогда
			ЗаписиОСтаже.Записать();
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
		
		ЗаписиОСтаже.Записать();
		
	КонецЕсли;
	
	ФизЛицо = Неопределено;
	
	Возврат Истина;
	
КонецФункции // ВыполнитьСохранениеДанныхФизлица()

Функция ЗаписиОСтажеЗаполненыПолностью()
	Для Каждого СтрокаСтажа Из ЗаписиОСтаже цикл
		Если НЕ (ЗначениеЗаполнено(СтрокаСтажа.ДатаНачалаПериода) И ЗначениеЗаполнено(СтрокаСтажа.ДатаОкончанияПериода)) тогда
			Возврат Ложь;
		КонецЕсли;	 
	КонецЦикла;
	Возврат Истина;
КонецФункции //ЗаписиОСтажеЗаполненыПолностью()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ



////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНОЙ ПАНЕЛИ т.п. ПачкиДокументов

Процедура КоманднаяПанельПачкиАДВ62(Кнопка)
	
	ВыполнитьСохранениеДанныхФизлица();
	СоздатьАДВ(Ложь, , Истина, ЭлементыФормы.ПачкиДокументов);
	
КонецПроцедуры

Процедура КоманднаяПанельПачкиАДВ11(Кнопка)
	
	ВыполнитьСохранениеДанныхФизлица();
	СоздатьАДВ(Истина, , Истина, ЭлементыФормы.ПачкиДокументов);
	
КонецПроцедуры

Процедура КоманднаяПанельПачкиПринятыеВПФРКомплекты(Кнопка)
	
	ВыполнитьСохранениеДанныхФизлица();
	
	ФормаПодбора = ПолучитьФорму("ФормаПодбораДокументов");
	
	ФормаПодбора.СоответствиеСсылокИОбъектов = СоответствиеСсылокИОбъектов;
	ФормаПодбора.Организация = Организация;
	
	ФормаПодбора.ПачкиДокументов.Очистить();
	Для Каждого РасчетныйПериод Из МассивПрошлыхПериодов Цикл
		СтрокаПодобраннойПачки = ФормаПодбора.ПачкиДокументов.Добавить();
		СтрокаПодобраннойПачки.ОтчетныйПериод	= РасчетныйПериод;
		
		СтрокаПачки = ПачкиДокументов.Найти(СтрокаПодобраннойПачки.ОтчетныйПериод, "ОтчетныйПериод");
		Если СтрокаПачки <> Неопределено Тогда
			СтрокаПодобраннойПачки.Пачка		= СтрокаПачки.Пачка;
		КонецЕсли;
	КонецЦикла;
	ФормаПодбора.ПачкиДокументов.Сортировать("ОтчетныйПериод УБЫВ");
	
	Если ФормаПодбора.ОткрытьМодально() <> Неопределено Тогда
		
		МассивПачек = Новый Массив;
		Для Каждого СтрокаПодобраннойПачки Из ФормаПодбора.ПачкиДокументов Цикл
			СтрокаПачки = ПачкиДокументов.Найти(СтрокаПодобраннойПачки.ОтчетныйПериод, "ОтчетныйПериод");
			
			Если СтрокаПодобраннойПачки.Пачка.Пустая() Тогда
				Если СтрокаПачки <> Неопределено Тогда
					ПачкиДокументов.Удалить(СтрокаПачки);
				КонецЕсли;
				
			Иначе
				Если СтрокаПачки = Неопределено Тогда
					СтрокаПачки = ПачкиДокументов.Добавить();
					СтрокаПачки.ОтчетныйПериод	= СтрокаПодобраннойПачки.ОтчетныйПериод;
				КонецЕсли;
				СтрокаПачки.Пачка = СтрокаПодобраннойПачки.Пачка;
				СоответствиеСсылокИОбъектов.Вставить(СтрокаПачки.Пачка, ФормаПодбора.СоответствиеСсылокИОбъектов.Получить(СтрокаПачки.Пачка));
				МассивПачек.Добавить(СтрокаПачки.Пачка);
				
			КонецЕсли;
			
		КонецЦикла;
		
		Если МассивПачек.Количество() > 0 Тогда
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("ПачкиАДВ", МассивПачек);
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ПередачаСЗВ4вПФРПачкиДокументов.ДокументПачка КАК Ссылка
			|ИЗ
			|	Документ.ПередачаСЗВ4вПФР.ПачкиДокументов КАК ПередачаСЗВ4вПФРПачкиДокументов
			|ГДЕ
			|	ПередачаСЗВ4вПФРПачкиДокументов.Ссылка В(&ПачкиАДВ)
			|	И ПередачаСЗВ4вПФРПачкиДокументов.ДокументПачка <> ЗНАЧЕНИЕ(Документ.СведенияОТрудовомСтажеИЗаработкеСЗВ4.ПустаяСсылка)";
			Выборка = Запрос.Выполнить().Выбрать();
			Пока Выборка.Следующий() Цикл
				СоответствиеСсылокИОбъектов.Вставить(Выборка.Ссылка,Выборка.Ссылка.ПолучитьОбъект()) 
			КонецЦикла;
		КонецЕсли;
		
		ОформитьЭУПоСтрокеИзПачкиДокументов();
		ОформитьЭУПоСтрокеИзПачкиСЗВ6();
		
	КонецЕсли;
	
	ФлагВыполнятьСохранениеСведенийПринятыхВПФР = Истина;
	
КонецПроцедуры

Процедура КоманднаяПанельПачкиПометитьНаУдаление(Кнопка)
	
	ПометитьНаУдалениеДокументОсновногоСписка(?(ТипСведений = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ, ЭлементыФормы.ПачкиДокументов, ?(ТипСведений = Перечисления.ТипыСведенийСЗВ.ПЕНСИОННАЯ, ЭлементыФормы.ПачкиСПВ,ЭлементыФормы.ПачкиСЗВ63)));
	
	Если ТипСведений = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
		Если ПачкиДокументов.Количество() = 0 Тогда
			ОформитьПустыеСтраницы();
		КонецЕсли;
	ИначеЕсли ТипСведений = Перечисления.ТипыСведенийСЗВ.ПЕНСИОННАЯ Тогда
		Если ПачкиСПВ.Количество() = 0 Тогда
			ОформитьПустыеСтраницы();
		КонецЕсли;
	Иначе
		Если ПачкиСЗВ63.Количество() = 0 Тогда
			ОформитьПустыеСтраницы();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельПачкиПринятоВПФР(Кнопка)
	
	ТекущаяСтрока = ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока;
	
	Если ТекущаяСтрока <> Неопределено И ТекущаяСтрока.ОтчетныйПериод = ОтчетныйПериод Тогда
		СохранениеТекущихДанных();	
		ПроставитьПринятоВПФРВПачке(ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока.Пачка)
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельПачкиПеренести(Кнопка)
	ТекущаяСтрока = ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока;
	Если ТекущаяСтрока <> Неопределено Тогда
		ТекущийДок = ТекущаяСтрока.Пачка;
		Если ТипЗнч(ТекущийДок) = Тип("ДокументСсылка.СведенияОТрудовомСтажеИЗаработкеСЗВ4") Тогда
			СпПачек = Новый СписокЗначений;
			Для Каждого СтрокаТЧ Из ПачкиДокументов Цикл
				Если Не СтрокаТЧ.Пачка.Пустая() И ТипЗнч(СтрокаТЧ.Пачка) = Тип("ДокументСсылка.ПередачаСЗВ4ВПФР") Тогда
					ДокументОбъект = СоответствиеСсылокИОбъектов[СтрокаТЧ.Пачка];
					Если Не ДокументОбъект.ПринятоВПФР И Не ДокументОбъект.НеСодержитСЗВ И Не ДокументОбъект.ЗаполненПринятымиСведениями Тогда
						СпПачек.Добавить(ДокументОбъект, "АДВ-6-2 № " + ДокументОбъект.НомерПачки);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			НоваяПачка = Неопределено;
			Если СпПачек.Количество() = 0 Тогда
				Предупреждение("В списке пачек отсутствуют не переданные в ПФР Описи сведений АДВ-6-2. Перенос пачки СЗВ-6 невозможен!")
			ИначеЕсли СпПачек.Количество() = 1 Тогда
				НоваяПачка = СпПачек[0].Значение
			ИначеЕсли СпПачек.Количество() > 1 Тогда
				ЭлементНоваяПачка = ВыбратьИзМеню(СпПачек,ЭлементыФормы.КоманднаяПанельПачки);
				Если ЭлементНоваяПачка = Неопределено Тогда
					Возврат;
				КонецЕсли;
				НоваяПачка = ЭлементНоваяПачка.Значение;
			КонецЕсли;
			Если НоваяПачка <> Неопределено Тогда
				НоваяПачка.ПачкиДокументов.Добавить().ДокументПачка = ТекущийДок;
				ПачкиДокументов.Удалить(ТекущаяСтрока);
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры

Процедура КоманднаяПанельПачкиДействиеОбновить(Кнопка)
	
	СохранениеТекущихДанных();
	Отказ = Ложь;
	СохранитьДокументы(Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	ОбновитьПачкиДокументов();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНОЙ ПАНЕЛИ т.п ПачкиСЗВ6

Процедура КоманднаяПанельПачкиСЗВ6Добавить(Кнопка)
	ВыполнитьСохранениеДанныхФизлица();
	СоздатьСЗВ6(Истина, ДокументОбъектАДВ11, , ЭлементыФормы.КатегорияЗастрахованныхЛиц.ДоступныеЗначения[0].Значение, Истина, ЭлементыФормы.ПачкиСЗВ6);
КонецПроцедуры

Процедура КоманднаяПанельПачкиСЗВ6Удалить(Кнопка)
	УдалитьСЗВ6ИзОписи();
КонецПроцедуры

Процедура КоманднаяПанельПачкиСЗВ6Перенести(Кнопка)
	ТекущаяСтрока = ЭлементыФормы.ПачкиСЗВ6.ТекущаяСтрока;
	Если ТекущаяСтрока <> Неопределено Тогда
		ТекущийДок = ТекущаяСтрока.ДокументПачка;
		СпПачек = Новый СписокЗначений;
		Для Каждого СтрокаТЧ Из ПачкиДокументов Цикл
			Если Не СтрокаТЧ.Пачка.Пустая() И ТипЗнч(СтрокаТЧ.Пачка) = Тип("ДокументСсылка.ПередачаСЗВ4ВПФР") Тогда
				ДокументОбъект = СоответствиеСсылокИОбъектов[СтрокаТЧ.Пачка];
				Если ДокументОбъект <> ДокументОбъектАДВ11 И Не ДокументОбъект.ПринятоВПФР И Не ДокументОбъект.НеСодержитСЗВ И Не ДокументОбъект.ЗаполненПринятымиСведениями Тогда
					СпПачек.Добавить(ДокументОбъект, "АДВ-6-2 № " + ДокументОбъект.НомерПачки);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		НоваяПачка = Неопределено;
		Если СпПачек.Количество() = 0 Тогда
			Предупреждение("В списке пачек отсутствуют другие не переданные в ПФР Описи сведений АДВ-6-2. Перенос пачки СЗВ-6 невозможен!")
		ИначеЕсли СпПачек.Количество() = 1 Тогда
			НоваяПачка = СпПачек[0].Значение
		ИначеЕсли СпПачек.Количество() > 1 Тогда
			ЭлементНоваяПачка = ВыбратьИзМеню(СпПачек,ЭлементыФормы.КоманднаяПанельПачки);
			Если ЭлементНоваяПачка = Неопределено Тогда
				Возврат;
			КонецЕсли;
			НоваяПачка = ЭлементНоваяПачка.Значение;
		КонецЕсли;
		Если НоваяПачка <> Неопределено Тогда
			НоваяПачка.ПачкиДокументов.Добавить().ДокументПачка = ТекущийДок;
			ДокументОбъектАДВ11.ПачкиДокументов.Удалить(ТекущаяСтрока);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНОЙ ПАНЕЛИ т.п ПачкиСПВ

Процедура КоманднаяПанельПачкиСПВПринятоВПФР(Кнопка)
	Если ЭлементыФормы.ПачкиСПВ.ТекущаяСтрока <> Неопределено Тогда
		СохранениеТекущихДанных();	
		ПроставитьПринятоВПФРВПачке(ЭлементыФормы.ПачкиСПВ.ТекущаяСтрока.Пачка)
	КонецЕсли;
КонецПроцедуры

Процедура КоманднаяПанельПачкиСПВДобавить(Кнопка)
	Если ПачкиСПВ.Количество() = 0 Тогда
		ЭлементыФормы.ПанельДанныеСПВ.ТекущаяСтраница = ЭлементыФормы.ПанельДанныеСПВ.Страницы.СтраницаДанных;
		ЭлементыФормы.ПанельСоставСПВ.ТекущаяСтраница = ЭлементыФормы.ПанельСоставСПВ.Страницы.ДанныеФизлица;
	КонецЕсли;
	ВыполнитьСохранениеДанныхФизлица();
	СоздатьСПВ(, ЭлементыФормы.КатегорияЗастрахованныхЛиц1.ДоступныеЗначения[0].Значение, Истина, ЭлементыФормы.ПачкиСПВ);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНОЙ ПАНЕЛИ т.п. ПачкиСЗВ63

Процедура КоманднаяПанельПачкиСЗВ63Добавить(Кнопка)
	Если ПачкиСЗВ63.Количество() = 0 Тогда
		ЭлементыФормы.ПанельДанныеСЗВ63.ТекущаяСтраница = ЭлементыФормы.ПанельДанныеСЗВ63.Страницы.СтраницаДанных;
		ЭлементыФормы.ПанельСоставСЗВ63.ТекущаяСтраница = ЭлементыФормы.ПанельСоставСЗВ63.Страницы.ДанныеФизлица;
	КонецЕсли;
	СоздатьСЗВ63(,ЭлементыФормы.КатегорияЗастрахованныхЛиц2.ДоступныеЗначения[0].Значение, Истина, ЭлементыФормы.ПачкиСЗВ63);
КонецПроцедуры

Процедура КоманднаяПанельПачкиСЗВ63ПринятоВПФР(Кнопка)
	Если ЭлементыФормы.ПачкиСЗВ63.ТекущаяСтрока <> Неопределено Тогда
		СохранениеТекущихДанных();	
		ПроставитьПринятоВПФРВПачке(ЭлементыФормы.ПачкиСЗВ63.ТекущаяСтрока.Пачка)
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНОЙ ПАНЕЛИ т.п. ФизЛицаПачек

Процедура КоманднаяПанельФизлицаПачекПеренести(Кнопка)
	
	ТекущаяСтрока = ЭлементыФормы.ФизлицаПачек.ТекущаяСтрока;
	Если ТекущаяСтрока <> Неопределено Тогда
		
		СпПачек = Новый СписокЗначений;
		
		Для каждого ЭлементСоответствия Из СоответствиеСсылокИОбъектов Цикл
			Если ЭлементСоответствия.Значение <> ДокументОбъектДляПоказаФизлиц и Не ЭлементСоответствия.Ключ.Пустая()
				И ТипЗнч(ЭлементСоответствия.Ключ) = Тип("ДокументСсылка.СведенияОТрудовомСтажеИЗаработкеСЗВ4") Тогда
				
				ДокументСЗВ = ЭлементСоответствия.Значение;
				СпПачек.Добавить(ДокументСЗВ, ДокументСЗВ.ТипФормДокументов + " № " + ДокументСЗВ.НомерПачки);
				
			КонецЕсли;
		КонецЦикла;
		
		НоваяПачка = Неопределено;
		Если СпПачек.Количество() = 0 Тогда
			Предупреждение("В списке пачек присутствует единственная пачка. Перенос сотрудника невозможен!")
		ИначеЕсли СпПачек.Количество() = 1 Тогда
			НоваяПачка = СпПачек[0].Значение
		ИначеЕсли СпПачек.Количество() > 1 Тогда
			ЭлементНоваяПачка = ВыбратьИзМеню(СпПачек,ЭлементыФормы.КоманднаяПанельФизлицаПачек);
			Если ЭлементНоваяПачка = Неопределено Тогда
				Возврат;
			КонецЕсли;
			НоваяПачка = ЭлементНоваяПачка.Значение;
		КонецЕсли;
		Если НоваяПачка <> Неопределено Тогда
			НоваяСтрока = НоваяПачка.РаботникиОрганизации.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,ТекущаяСтрока);
			ДокументОбъектДляПоказаФизЛиц.РаботникиОрганизации.Удалить(ТекущаяСтрока.НомерСтроки - 1);
			Обновить();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельФизлицаСПВПеренести(Кнопка)
	
	ТекущаяСтрока = ЭлементыФормы.ФизлицаПачекСПВ.ТекущаяСтрока;
	Если ТекущаяСтрока <> Неопределено Тогда
		
		СпПачек = Новый СписокЗначений;
		
		Для каждого ЭлементСоответствия Из СоответствиеСсылокИОбъектов Цикл
			Если ЭлементСоответствия.Значение <> ДокументОбъектСПВ и Не ЭлементСоответствия.Ключ.Пустая() Тогда
				ДокументСПВ = ЭлементСоответствия.Значение;
				СпПачек.Добавить(ДокументСПВ, " № " + ДокументСПВ.НомерПачки);
			КонецЕсли;
		КонецЦикла;
		
		НоваяПачка = Неопределено;
		Если СпПачек.Количество() = 0 Тогда
			Предупреждение("В списке пачек присутствует единственная пачка. Перенос сотрудника невозможен!")
		ИначеЕсли СпПачек.Количество() = 1 Тогда
			НоваяПачка = СпПачек[0].Значение
		ИначеЕсли СпПачек.Количество() > 1 Тогда
			ЭлементНоваяПачка = ВыбратьИзМеню(СпПачек,ЭлементыФормы.КоманднаяПанельФизлицаСПВ);
			Если ЭлементНоваяПачка = Неопределено Тогда
				Возврат;
			КонецЕсли;
			НоваяПачка = ЭлементНоваяПачка.Значение;
		КонецЕсли;
		Если НоваяПачка <> Неопределено Тогда
			НоваяСтрока = НоваяПачка.РаботникиОрганизации.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,ТекущаяСтрока);
			ДокументОбъектСПВ.РаботникиОрганизации.Удалить(ТекущаяСтрока.НомерСтроки - 1);
			Обновить();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельФизлицаСЗВ63Перенести(Кнопка)
	ТекущаяСтрока = ЭлементыФормы.ФизлицаПачекСЗВ63.ТекущаяСтрока;
	Если ТекущаяСтрока <> Неопределено Тогда
		
		СпПачек = Новый СписокЗначений;
		
		Для каждого ЭлементСоответствия Из СоответствиеСсылокИОбъектов Цикл
			Если ЭлементСоответствия.Значение <> ДокументОбъектСЗВ63 и Не ЭлементСоответствия.Ключ.Пустая() Тогда
				ДокументСЗВ = ЭлементСоответствия.Значение;
				СпПачек.Добавить(ДокументСЗВ, " № " + ДокументСЗВ.НомерПачки);
			КонецЕсли;
		КонецЦикла;
		
		НоваяПачка = Неопределено;
		Если СпПачек.Количество() = 0 Тогда
			Предупреждение("В списке пачек присутствует единственная пачка. Перенос сотрудника невозможен!")
		ИначеЕсли СпПачек.Количество() = 1 Тогда
			НоваяПачка = СпПачек[0].Значение
		ИначеЕсли СпПачек.Количество() > 1 Тогда
			ЭлементНоваяПачка = ВыбратьИзМеню(СпПачек,ЭлементыФормы.КоманднаяПанельФизлицаСЗВ63);
			Если ЭлементНоваяПачка = Неопределено Тогда
				Возврат;
			КонецЕсли;
			НоваяПачка = ЭлементНоваяПачка.Значение;
		КонецЕсли;
		Если НоваяПачка <> Неопределено Тогда
			ЗаполнитьЗначенияСвойств(НоваяПачка.СотрудникиОрганизации.Добавить(),ТекущаяСтрока);
			Для каждого СтрокаТЧ Из ДокументОбъектСЗВ63.СведенияОЗаработке.НайтиСтроки(Новый Структура("ФизЛицо", ТекущаяСтрока.ФизЛицо)) Цикл
				ЗаполнитьЗначенияСвойств(НоваяПачка.СведенияОЗаработке.Добавить(),СтрокаТЧ);
				ДокументОбъектСЗВ63.СведенияОЗаработке.Удалить(СтрокаТЧ)
			КонецЦикла;
			ДокументОбъектСЗВ63.СотрудникиОрганизации.Удалить(ТекущаяСтрока.НомерСтроки - 1);
			Обновить();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура КоманднаяПанельФизлицаПачекПрокомментироватьРаспределениеВзносов(Кнопка)
	ТекущаяСтрока = ЭлементыФормы.ФизлицаПачек.ТекущаяСтрока;
	Если ТекущаяСтрока <> Неопределено Тогда
		
		ДокументРасчета = ДокументОбъектДляПоказаФизлиц;
		
		Если ДокументРасчета.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ Тогда
			Возврат;
		КонецЕсли;
		
		Если ДокументРасчета.КатегорияЗастрахованныхЛиц.Пустая() Тогда
			РаботаСДиалогами.ВывестиПредупреждение("Не указана категория застрахованных лиц!");
			Возврат;
		КонецЕсли;
	
  		ДокументРасчета.РассчитатьВзносы(Истина, ТекущаяСтрока.ФизЛицо, Ложь)

	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

Процедура ОрганизацияПриИзменении(Элемент)
	Отказ = Ложь;
	Если ТекущаяОрганизация = Организация Тогда
		Возврат;
	КонецЕсли;
	СохранитьДокументы(Отказ);
	Если Отказ Тогда
		Организация = ТекущаяОрганизация;
		Возврат;
	КонецЕсли;
	
	ВыполнитьСохранениеДанныхФизлица(ТекущаяОрганизация);
	ФизЛицо = Неопределено;
	
	ОбновитьПачкиДокументов();
	
	ЭлементыФормы.КатегорияЗастрахованныхЛиц.ДоступныеЗначения = ПроцедурыПерсонифицированногоУчета.КатегорииЗастрахованныхЛицОрганизации(Организация, ОбщегоНазначения.ГоловнаяОрганизация(Организация), ОтчетныйПериод);
	ЭлементыФормы.КатегорияЗастрахованныхЛиц1.ДоступныеЗначения = ЭлементыФормы.КатегорияЗастрахованныхЛиц.ДоступныеЗначения;
	ЭлементыФормы.КатегорияЗастрахованныхЛиц2.ДоступныеЗначения = ПроцедурыПерсонифицированногоУчета.КатегорииЗастрахованныхЛицОрганизации(Организация, ОбщегоНазначения.ГоловнаяОрганизация(Организация), Дата(ОтчетныйГод,1,1), КонецГода(Дата(ОтчетныйГод,1,1)));
	
	ТекущаяОрганизация = Организация;
	
	ЗаписиОСтаже.Отбор.ОбособленноеПодразделение.Значение = Организация;
	
КонецПроцедуры

Процедура РуководительПриИзменении(Элемент)
	Если ЗначениеЗаполнено(ДокументОбъектАДВ11.Руководитель) Тогда
		Для Каждого СтрокаТЧ Из ДокументОбъектАДВ11.ПачкиДокументов Цикл
			ДокументОбъект = СоответствиеСсылокИОбъектов[СтрокаТЧ.ДокументПачка];
			Если НЕ ЗначениеЗаполнено(ДокументОбъект.Руководитель) Тогда
				ДокументОбъект.Руководитель = ДокументОбъектАДВ11.Руководитель;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура ДолжностьРуководителяПриИзменении(Элемент)
	Если ЗначениеЗаполнено(ДокументОбъектАДВ11.ДолжностьРуководителя) Тогда
		Для Каждого СтрокаТЧ Из ДокументОбъектАДВ11.ПачкиДокументов Цикл
			ДокументОбъект = СоответствиеСсылокИОбъектов[СтрокаТЧ.ДокументПачка];
			Если НЕ ЗначениеЗаполнено(ДокументОбъект.ДолжностьРуководителя) Тогда
				ДокументОбъект.ДолжностьРуководителя = ДокументОбъектАДВ11.ДолжностьРуководителя;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура ИсполнительПриИзменении(Элемент)
	УстанавливаемыйОтветственный = ДокументОбъектАДВ11.Ответственный;
	Если ЗначениеЗаполнено(УстанавливаемыйОтветственный) Тогда
		Для Каждого СтрокаТЧ Из ДокументОбъектАДВ11.ПачкиДокументов Цикл
			ДокументОбъект = СоответствиеСсылокИОбъектов[СтрокаТЧ.ДокументПачка];
			Если НЕ ЗначениеЗаполнено(ДокументОбъект.Ответственный) Тогда
				ДокументОбъект.Ответственный = УстанавливаемыйОтветственный;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

// Процедура - обработчик события "Регулирование" поля ввода периода регистрации.
//
Процедура ОтчетныйПериодРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	Если ОтчетныйПериод = '20100101' Тогда
		Если Направление = 1 Тогда
			ОтчетныйПериод = '20100701'
		Иначе 	
			Возврат
		КонецЕсли;
	ИначеЕсли ОтчетныйПериод = '20100701' Тогда
		ОтчетныйПериод = ДобавитьМесяц(ОтчетныйПериод, Направление * 6);
	ИначеЕсли ОтчетныйПериод = '20110101' И Направление = -1 Тогда
		ОтчетныйПериод = '20100701'
	Иначе
		ОтчетныйПериод = ДобавитьМесяц(ОтчетныйПериод, Направление * 3);
	КонецЕсли;
	Элемент.Значение = ПредставлениеПериода(НачалоГода(ОтчетныйПериод), ПроцедурыПерсонифицированногоУчета.ОкончаниеОтчетногоПериодаПерсучета(ОтчетныйПериод), "ФП = Истина" );
	
	Если ПредыдущееЗначениеОтчетныйПериод = ОтчетныйПериод Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Ложь;
	СохранитьДокументы(Отказ);
	Если Отказ Тогда
		ОтчетныйПериод = ПредыдущееЗначениеОтчетныйПериод;
		Элемент.Значение = ПредставлениеПериода(НачалоГода(ОтчетныйПериод), ПроцедурыПерсонифицированногоУчета.ОкончаниеОтчетногоПериодаПерсучета(ОтчетныйПериод), "ФП = Истина" );
		Возврат;
	КонецЕсли;
	
	ВыполнитьСохранениеДанныхФизлица(, ТекущийОтчетныйПериод);
	ФизЛицо = Неопределено;
	
	ОбновитьПачкиДокументов();
	
	ЭлементыФормы.КатегорияЗастрахованныхЛиц.ДоступныеЗначения = ПроцедурыПерсонифицированногоУчета.КатегорииЗастрахованныхЛицОрганизации(Организация, ОбщегоНазначения.ГоловнаяОрганизация(Организация), ОтчетныйПериод);
	ЭлементыФормы.КатегорияЗастрахованныхЛиц1.ДоступныеЗначения = ЭлементыФормы.КатегорияЗастрахованныхЛиц.ДоступныеЗначения;
	
	Если ТекущийТипСведений = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ И ДокументОбъектДляПоказаФизлиц.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ Тогда
		ТекущийОтчетныйПериод = ДокументОбъектДляПоказаФизлиц.КорректируемыйПериод
	Иначе 
		ТекущийОтчетныйПериод = ОтчетныйПериод;
	КонецЕсли;
	ЗаписиОСтаже.Отбор.ОтчетныйПериод.Значение = ТекущийОтчетныйПериод;
	ЭлементыФормы.КатегорияЗастрахованныхЛиц.ДоступныеЗначения = ПроцедурыПерсонифицированногоУчета.КатегорииЗастрахованныхЛицОрганизации(Организация, ОбщегоНазначения.ГоловнаяОрганизация(Организация), ТекущийОтчетныйПериод);
	ЭлементыФормы.КатегорияЗастрахованныхЛиц1.ДоступныеЗначения = ПроцедурыПерсонифицированногоУчета.КатегорииЗастрахованныхЛицОрганизации(Организация, ОбщегоНазначения.ГоловнаяОрганизация(Организация), ТекущийОтчетныйПериод);
	
	ПредыдущееЗначениеОтчетныйПериод = ОтчетныйПериод;
	
	Если ПоказыватьСуммыВзносов Тогда
		Если ПроцедурыПерсонифицированногоУчета.ОкончаниеОтчетногоПериодаПерсучета(ОтчетныйПериод) <> КонецГода(ОтчетныйПериод) Тогда
			Кнопки = ЭлементыФормы.КоманднаяПанельПачки.Кнопки.Действие.Кнопки;
			Если Кнопки.Найти("АДВ11") <> Неопределено Тогда
				Кнопки.Удалить(Кнопки.АДВ11);
			КонецЕсли;
		Иначе
			НоваяКнопка = ЭлементыФормы.КоманднаяПанельПачки.Кнопки.Действие.Кнопки.Вставить(2, "АДВ11", ТипКнопкиКоманднойПанели.Действие);
			ЗаполнитьЗначенияСвойств(НоваяКнопка, КнопкаАДВ11);
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры // ПериодРегистрацииРегулирование()

Процедура ОтчетныйГодПриИзменении(Элемент)
	
	Если ПредыдущееЗначениеОтчетныйГод = ОтчетныйГод Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Ложь;
	СохранитьДокументы(Отказ);
	Если Отказ Тогда
		ОтчетныйГод = ПредыдущееЗначениеОтчетныйГод;
		Возврат;
	КонецЕсли;
	
	мТекущийСотрудник = Справочники.ФизическиеЛица.ПустаяСсылка();
	
	ОбновитьПачкиДокументов();
	
	ЭлементыФормы.КатегорияЗастрахованныхЛиц2.ДоступныеЗначения = ПроцедурыПерсонифицированногоУчета.КатегорииЗастрахованныхЛицОрганизации(Организация, ОбщегоНазначения.ГоловнаяОрганизация(Организация), Дата(ОтчетныйГод,1,1), КонецГода(Дата(ОтчетныйГод,1,1)));
	
	ПредыдущееЗначениеОтчетныйГод = ОтчетныйГод;
	
КонецПроцедуры

Процедура ПереключательТипСведенийПриИзменении(Элемент)
	Отказ = Ложь;
	
	СохранитьДокументы(Отказ);
	Если Отказ Тогда
		ТипСведений = ТекущийТипСведений;
		Возврат;
	КонецЕсли;
	ВыполнитьСохранениеДанныхФизлица();

	ФизЛицо = Неопределено;
	
	Если ТекущийТипСведений <> ТипСведений Тогда
		ПачкиСЗВ63.Очистить();
		ПачкиДокументов.Очистить();
		ПачкиСПВ.Очистить();
		СоответствиеСсылокИОбъектов = Новый Соответствие;
		Если ТипСведений = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
			ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.КвартальнаяОтчетность
		ИначеЕсли ТипСведений = Перечисления.ТипыСведенийСЗВ.ПЕНСИОННАЯ Тогда
			ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.ОформлениеПенсии;
		Иначе
			ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.СведенияОНачисленномЗаработке
		КонецЕсли;
		Если ТипСведений = Перечисления.ТипыСведенийСЗВ.ПЕНСИОННАЯ Тогда
			ЭлементыФормы.ПанельКнопкаСформировать.Свертка = РежимСверткиЭлементаУправления.Лево;
		Иначе
			ЭлементыФормы.ПанельКнопкаСформировать.Свертка = РежимСверткиЭлементаУправления.Нет;
		КонецЕсли;
		Если ТипСведений = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Или ТипСведений = Перечисления.ТипыСведенийСЗВ.ПЕНСИОННАЯ Тогда
			ЭлементыФормы.ПанельОтчетныйПериод.ТекущаяСтраница = ЭлементыФормы.ПанельОтчетныйПериод.Страницы.СтраницаПериодПерсучета;
		Иначе
			ЭлементыФормы.ПанельОтчетныйПериод.ТекущаяСтраница = ЭлементыФормы.ПанельОтчетныйПериод.Страницы.СтраницаОтчетныйГод;
		КонецЕсли;
		
		ОбновитьПачкиДокументов();
	КонецЕсли;
	
	ТекущийТипСведений = ТипСведений;
	
КонецПроцедуры

Процедура АдресДляИнформированияНачалоВыбора(Элемент, СтандартнаяОбработка)
	УправлениеКонтактнойИнформацией.РедактироватьМодальноЭлементАдреса(Элемент, ЭтаФорма, "ФормаРедактированияАдресаРегистрацииПоСтроке"+ЭлементыФормы.ФизЛицаПачек.ТекущаяСтрока.НомерСтроки);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура КнопкаСформироватьНажатие(Элемент)
	
	МассивСообщений.Очистить();
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		МассивСообщений.Добавить(СоздатьСообщениеСтруктуру(ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Не указана организация!"), Перечисления.ВидыСообщений.Ошибка));
	КонецЕсли;
	
	Если ТипСведений = Перечисления.ТипыСведенийСЗВ.ПЕНСИОННАЯ Тогда
		Если Пенсионеры.Количество() = 0 Тогда
			МассивСообщений.Добавить(СоздатьСообщениеСтруктуру("Не указаны сотрудники, выходящие на пенсию!", Перечисления.ВидыСообщений.Ошибка));
		Иначе
			Для каждого СтрокаПенсионера Из Пенсионеры Цикл
				НачалоСообщения = "В строке № " + СтрокаПенсионера.НомерСтроки + " списка пенсионеров: ";
				Если Не ЗначениеЗаполнено(СтрокаПенсионера.ФизЛицо) Тогда
					МассивСообщений.Добавить(СоздатьСообщениеСтруктуру(НачалоСообщения + "не указан сотрудник!", Перечисления.ВидыСообщений.Ошибка));
				КонецЕсли;
				Если Не ЗначениеЗаполнено(СтрокаПенсионера.ДатаСоставления) Тогда
					МассивСообщений.Добавить(СоздатьСообщениеСтруктуру(НачалоСообщения + "не указана дата выхода на пенсию!", Перечисления.ВидыСообщений.Ошибка));
				ИначеЕсли СтрокаПенсионера.ДатаСоставления < ОтчетныйПериод Или СтрокаПенсионера.ДатаСоставления > ПроцедурыПерсонифицированногоУчета.ОкончаниеОтчетногоПериодаПерсучета(ОтчетныйПериод) Тогда
					МассивСообщений.Добавить(СоздатьСообщениеСтруктуру(НачалоСообщения + "дата выхода на пенсию выходит за пределы отчетного периода!", Перечисления.ВидыСообщений.Ошибка));
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Если МассивСообщений.Количество() > 0 Тогда
		ВывестиСообщенияОбОшибках(МассивСообщений);
		Возврат;
	КонецЕсли;
	
	СтрокиКУдалению = Новый Массив;
	Если ТипСведений = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
		ВсегоДокументов = ПачкиДокументов.Количество();
		Для Сч = 1 По ВсегоДокументов Цикл
			СтрокаТЧ = ПачкиДокументов[ВсегоДокументов - Сч];
			ДокОбъект = СоответствиеСсылокИОбъектов[СтрокаТЧ.Пачка];
			Если ТипЗнч(СтрокаТЧ.Пачка) = Тип("ДокументСсылка.ПередачаСЗВ4вПФР") Тогда
				Если ДокОбъект.ЭтоНовый() И Не ДокОбъект.НеСодержитСЗВ Тогда
					СтрокиКУдалению.Добавить(СтрокаТЧ)
				КонецЕсли;
			ИначеЕсли ТипЗнч(СтрокаТЧ.Пачка) = Тип("ДокументСсылка.СведенияОТрудовомСтажеИЗаработкеСЗВ4") Тогда
				Если ДокОбъект.ЭтоНовый() Тогда
					СтрокиКУдалению.Добавить(СтрокаТЧ)
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли ТипСведений = Перечисления.ТипыСведенийСЗВ.ПЕНСИОННАЯ Тогда
		ВсегоДокументов = ПачкиСПВ.Количество();
		Для Сч = 1 По ВсегоДокументов Цикл
			СтрокаТЧ = ПачкиСПВ[ВсегоДокументов - Сч];
			ДокОбъект = СоответствиеСсылокИОбъектов[СтрокаТЧ.Пачка];
			Если ДокОбъект.ЭтоНовый() Тогда
				СтрокиКУдалению.Добавить(СтрокаТЧ)
			КонецЕсли;
		КонецЦикла;
	Иначе
		ВсегоДокументов = ПачкиСЗВ63.Количество();
		Для Сч = 1 По ВсегоДокументов Цикл
			СтрокаТЧ = ПачкиСЗВ63[ВсегоДокументов - Сч];
			ДокОбъект = СоответствиеСсылокИОбъектов[СтрокаТЧ.Пачка];
			Если ДокОбъект.ЭтоНовый() Тогда
				СтрокиКУдалению.Добавить(СтрокаТЧ)
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если СтрокиКУдалению.Количество() > 0 Тогда
		Вопрос = "Текущие непроведенные документы будут потеряны. Продолжить?";
		Ответ  = Вопрос(Вопрос, РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ТипСведений = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
		Для каждого СтрокаУдаления Из СтрокиКУдалению Цикл
			Если ТипЗнч(СтрокаУдаления.Пачка) = Тип("ДокументСсылка.ПередачаСЗВ4ВПФР") Тогда
				ДокументОбъект = СоответствиеСсылокИОбъектов[СтрокаУдаления.Пачка];
				Для Каждого СтрокаДокумента Из ДокументОбъект.ПачкиДокументов Цикл
					СоответствиеСсылокИОбъектов.Удалить(СтрокаДокумента.ДокументПачка);
				КонецЦикла;
			КонецЕсли;
			СоответствиеСсылокИОбъектов.Удалить(СтрокаУдаления.Пачка);
			ПачкиДокументов.Удалить(СтрокаУдаления);
		КонецЦикла;
	ИначеЕсли ТипСведений = Перечисления.ТипыСведенийСЗВ.ПЕНСИОННАЯ Тогда
		Для каждого СтрокаУдаления Из СтрокиКУдалению Цикл
			СоответствиеСсылокИОбъектов.Удалить(СтрокаУдаления.Пачка);
			ПачкиСПВ.Удалить(СтрокаУдаления);
		КонецЦикла;
	Иначе
		Для каждого СтрокаУдаления Из СтрокиКУдалению Цикл
			СоответствиеСсылокИОбъектов.Удалить(СтрокаУдаления.Пачка);
			ПачкиСЗВ63.Удалить(СтрокаУдаления);
		КонецЦикла;
	КонецЕсли;
	
	Состояние("Происходит формирование сведений о страховом стаже" + ?(ПоказыватьСуммыВзносов, " и страховых взносах", "") + ", это может занять продолжительное время...");
	
	Если ТипСведений = Перечисления.ТипыСведенийСЗВ.ПЕНСИОННАЯ Тогда
		СписокФизЛиц = Новый Массив(1);
		Для каждого СтрокаПенсионера Из Пенсионеры Цикл
			СписокФизЛиц[0] = СтрокаПенсионера.ФизЛицо;
			ПроцедурыПерсонифицированногоУчета.ФормированиеСведенийОСтажеC2010(ОтчетныйПериод, Организация, СписокФизЛиц, СтрокаПенсионера.ДатаСоставления);
		КонецЦикла;
	ИначеЕсли ТипСведений = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
		ПроцедурыПерсонифицированногоУчета.ФормированиеСведенийОСтажеC2010(ОтчетныйПериод, Организация);
	КонецЕсли;
	
	ФлагВыполнятьСохранениеФизЛица = Истина;
	ДокументОбъектАДВ11 = Неопределено;
	ДокументОбъектДляПоказаФизлиц = Неопределено;
	ДокументОбъектСПВ = Неопределено;
	ДокументОбъектСЗВ63 = Неопределено;
	ТекущаяСтрока = АвтозаполнениеПачек(ТипСведений);
	Если ТекущаяСтрока = Неопределено Тогда
		Если ТипСведений = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
			Если ПачкиДокументов.Количество() = 0 Тогда
				ОформитьПустыеСтраницы();
			КонецЕсли;
		ИначеЕсли ТипСведений = Перечисления.ТипыСведенийСЗВ.ПЕНСИОННАЯ Тогда
			Если ПачкиСПВ.Количество() = 0 Тогда
				ОформитьПустыеСтраницы();
			КонецЕсли;
		Иначе
			Если ПачкиСЗВ63.Количество() = 0 Тогда
				ОформитьПустыеСтраницы();
			КонецЕсли;
		КонецЕсли;
	Иначе
		Если ТипСведений = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
			ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока = ТекущаяСтрока;
			ДокументОбъектАДВ11 = СоответствиеСсылокИОбъектов[ТекущаяСтрока.Пачка];
		ИначеЕсли ТипСведений = Перечисления.ТипыСведенийСЗВ.ПЕНСИОННАЯ Тогда
			ЭлементыФормы.ПанельДанныеСПВ.ТекущаяСтраница = ЭлементыФормы.ПанельДанныеСПВ.Страницы.СтраницаДанных;
			ЭлементыФормы.ПанельСоставСПВ.ТекущаяСтраница = ЭлементыФормы.ПанельСоставСПВ.Страницы.ДанныеФизлица;
			ЭлементыФормы.ПачкиСПВ.ТекущаяСтрока = ТекущаяСтрока;
		Иначе
			ЭлементыФормы.ПанельДанныеСЗВ63.ТекущаяСтраница = ЭлементыФормы.ПанельДанныеСЗВ63.Страницы.СтраницаДанных;
			ЭлементыФормы.ПанельСоставСЗВ63.ТекущаяСтраница = ЭлементыФормы.ПанельСоставСЗВ63.Страницы.ДанныеФизлица;
			ЭлементыФормы.ПачкиСЗВ63.ТекущаяСтрока = ТекущаяСтрока;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура РаспределитьВзносыВоВсехПачкахНажатие(Элемент)
	
	Вопрос = "Имеющиеся данные о суммах начисленных и уплаченных взносов по всем пачкам Описи АДВ-6-2 №" + ДокументОбъектАДВ11.НомерПачки + " будут обновлены. Продолжить?";
	Ответ  = Вопрос(Вопрос, РежимДиалогаВопрос.ДаНет);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Ложь;
	СохранитьДокументы(Отказ, РежимДиалогаВопрос.ОКОтмена);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	СохранениеТекущихДанных();
	//ОбработкаСообщений = глЗначениеПеременной("глОбработкаСообщений");
	//ОбработкаСообщений.УдалитьСообщения();
	
	Для каждого ПачкаСЗВ6 Из ДокументОбъектАДВ11.ПачкиДокументов Цикл
	    ДокументРасчета = СоответствиеСсылокИОбъектов[ПачкаСЗВ6.ДокументПачка];
		
		Если ДокументРасчета.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ Тогда
			Продолжить;
		КонецЕсли;
		
		Если ДокументРасчета.ПринятоВПФР Тогда
			Продолжить;
		КонецЕсли;
		
		Если ДокументРасчета.ЗаполненПринятымиСведениями Тогда
			Продолжить;
		КонецЕсли;
		
		Если ДокументРасчета.РаботникиОрганизации.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Если ДокументРасчета.КатегорияЗастрахованныхЛиц.Пустая() Тогда
			Сообщить("В пачке СЗВ-6 №" + ДокументРасчета.НомерПачки + " не указана категория застрахованных лиц!", СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;
	
		ДокументРасчета.РассчитатьВзносы();
	КонецЦикла;
	
	//ОбработкаСообщений.ПоказатьСообщения();
	
КонецПроцедуры

Процедура КнопкаПринятоВПФРНажатие(Элемент)
	
	ТекущаяСтрока = ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока;
	
	Если ТекущаяСтрока <> Неопределено И ТекущаяСтрока.ОтчетныйПериод = ОтчетныйПериод Тогда
		СохранениеТекущихДанных();	
		ПроставитьПринятоВПФРВПачке(ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока.Пачка)
	КонецЕсли;
	
КонецПроцедуры

Процедура РаспределитьВзносыНажатие(Элемент)
	
	Если ТипСведений = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
		ДокументРасчета = ДокументОбъектДляПоказаФизлиц
	ИначеЕсли ТипСведений = Перечисления.ТипыСведенийСЗВ.ПЕНСИОННАЯ Тогда
		ДокументРасчета = ДокументОбъектСПВ
	Иначе 
		Возврат
	КонецЕсли;
		
	Если ДокументРасчета.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ Тогда
		Возврат;
	КонецЕсли;
	
	Если ДокументРасчета.РаботникиОрганизации.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ДокументРасчета.КатегорияЗастрахованныхЛиц.Пустая() Тогда
		РаботаСДиалогами.ВывестиПредупреждение("Не указана категория застрахованных лиц!");
		Возврат;
	КонецЕсли;
	
	Вопрос = "Имеющиеся данные о суммах начисленных, уплаченных взносов по застрахованным лицам будут обновлены. Продолжить?";
	Ответ  = Вопрос(Вопрос, РежимДиалогаВопрос.ДаНет);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	Если Найти(ВРег(Элемент.Имя), ВРег("СКомментарием")) = 0 Тогда
		ДокументРасчета.РассчитатьВзносы()
	Иначе
		ДокументРасчета.РассчитатьВзносы(Истина)
	КонецЕсли;
	
КонецПроцедуры

Процедура РассчитатьЗаработокНажатие(Элемент)
	
	Если ДокументОбъектСЗВ63.СотрудникиОрганизации.Количество() = 0 Тогда
		ДокументОбъектСЗВ63.СведенияОЗаработке.Очистить();
		Возврат;
	КонецЕсли;
	
	Если ДокументОбъектСЗВ63.КатегорияЗастрахованныхЛиц.Пустая() Тогда
		РаботаСДиалогами.ВывестиПредупреждение("Не указана категория застрахованных лиц!");
		Возврат;
	КонецЕсли;
	
	Если ДокументОбъектСЗВ63.ТипДоговора.Пустая() Тогда
		РаботаСДиалогами.ВывестиПредупреждение("Не указан тип договора!");
		Возврат;
	КонецЕсли;
	
	Вопрос = "Имеющиеся данные о заработке по застрахованным лицам будут обновлены. Продолжить?";
	Ответ  = Вопрос(Вопрос, РежимДиалогаВопрос.ДаНет);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	ДокументОбъектСЗВ63.РассчитатьЗаработок()
	
КонецПроцедуры

Процедура Печать1Нажатие(Элемент)
	Если ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока <> Неопределено Тогда
		ОбработкаСообщений = глЗначениеПеременной("глОбработкаСообщений");
		ОбработкаСообщений.УдалитьСообщения();
		ПечатьДокумента(ДокументОбъектАДВ11);	
	КонецЕсли;
КонецПроцедуры

Процедура Печать2Нажатие(Элемент)
	Если ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока <> Неопределено Тогда
		ОбработкаСообщений = глЗначениеПеременной("глОбработкаСообщений");
		ОбработкаСообщений.УдалитьСообщения();
		Если ТипЗнч(ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока.Пачка) = Тип("ДокументСсылка.СведенияОТрудовомСтажеИЗаработкеСЗВ4") Тогда
			ПечатьДокумента(ДокументОбъектДляПоказаФизлиц);
		ИначеЕсли ЭлементыФормы.ПачкиСЗВ6.ТекущаяСтрока <> Неопределено Тогда
			ПечатьДокумента(ДокументОбъектДляПоказаФизлиц);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура Печать3Нажатие(Элемент)
	Если ЭлементыФормы.ПачкиСПВ.ТекущаяСтрока <> Неопределено Тогда
		ОбработкаСообщений = глЗначениеПеременной("глОбработкаСообщений");
		ОбработкаСообщений.УдалитьСообщения();
		ПечатьДокумента(ДокументОбъектСПВ);	
	КонецЕсли;
КонецПроцедуры

Процедура Печать4Нажатие(Элемент)
	Если ЭлементыФормы.ПачкиСЗВ63.ТекущаяСтрока <> Неопределено Тогда
		ОбработкаСообщений = глЗначениеПеременной("глОбработкаСообщений");
		ОбработкаСообщений.УдалитьСообщения();
		ПечатьДокумента(ДокументОбъектСЗВ63);	
	КонецЕсли;
КонецПроцедуры

Процедура Проверить1ПроверитьВCheckXML(Кнопка)
	Если ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока <> Неопределено Тогда
		ПроверитьДокументВCheckXML(ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока.Пачка); 
	КонецЕсли;
КонецПроцедуры

Процедура Проверить1ПроверитьВCheckUFA(Кнопка)
	Если ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока <> Неопределено Тогда
		ПроверитьДокументВCheckUFA(ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока.Пачка); 
	КонецЕсли;
КонецПроцедуры

Процедура Проверить2ПроверитьВCheckXML(Кнопка)
	Если ЭлементыФормы.ПачкиСЗВ6.ТекущаяСтрока <> Неопределено Тогда
		ПроверитьДокументВCheckXML(ЭлементыФормы.ПачкиСЗВ6.ТекущаяСтрока.ДокументПачка); 
	КонецЕсли;
КонецПроцедуры

Процедура Проверить3ПроверитьВCheckXML(Кнопка)
	Если ЭлементыФормы.ПачкиСПВ.ТекущаяСтрока <> Неопределено Тогда
		ПроверитьДокументВCheckXML(ЭлементыФормы.ПачкиСПВ.ТекущаяСтрока.Пачка); 
	КонецЕсли;
КонецПроцедуры

Процедура Проверить4ПроверитьВCheckXML(Кнопка)
	Если ЭлементыФормы.ПачкиСЗВ63.ТекущаяСтрока <> Неопределено Тогда
		ПроверитьДокументВCheckXML(ЭлементыФормы.ПачкиСЗВ63.ТекущаяСтрока.Пачка); 
	КонецЕсли;
КонецПроцедуры

Процедура Проверить4ПроверитьВCheckUFA(Кнопка)
	Если ЭлементыФормы.ПачкиСЗВ63.ТекущаяСтрока <> Неопределено Тогда
		ПроверитьДокументВCheckUFA(ЭлементыФормы.ПачкиСЗВ63.ТекущаяСтрока.Пачка); 
	КонецЕсли;
КонецПроцедуры

Процедура Проверить1ВстроеннойПроверкой(Кнопка)
	Если ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока <> Неопределено Тогда
		ПроверитьДокументВстроеннойПроверкой(ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока.Пачка); 
	КонецЕсли;
КонецПроцедуры

Процедура Проверить2ВстроеннойПроверкой(Кнопка)
	Если ЭлементыФормы.ПачкиСЗВ6.ТекущаяСтрока <> Неопределено Тогда
		ПроверитьДокументВстроеннойПроверкой(ЭлементыФормы.ПачкиСЗВ6.ТекущаяСтрока.ДокументПачка); 
	КонецЕсли;
КонецПроцедуры

Процедура Проверить3ВстроеннойПроверкой(Кнопка)
	Если ЭлементыФормы.ПачкиСПВ.ТекущаяСтрока <> Неопределено Тогда
		ПроверитьДокументВстроеннойПроверкой(ЭлементыФормы.ПачкиСПВ.ТекущаяСтрока.Пачка); 
	КонецЕсли;
КонецПроцедуры

Процедура Проверить4ВстроеннойПроверкой(Кнопка)
	Если ЭлементыФормы.ПачкиСЗВ63.ТекущаяСтрока <> Неопределено Тогда
		ПроверитьДокументВстроеннойПроверкой(ЭлементыФормы.ПачкиСЗВ63.ТекущаяСтрока.Пачка); 
	КонецЕсли;
КонецПроцедуры

Процедура ПоказатьФайл1Нажатие(Элемент)
	Если ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока <> Неопределено Тогда
		ОбработкаСообщений = глЗначениеПеременной("глОбработкаСообщений");
		ОбработкаСообщений.УдалитьСообщения();
		ПоказатьФайлДокумента(ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока.Пачка); 
	КонецЕсли;
КонецПроцедуры

Процедура ПоказатьФайл2Нажатие(Элемент)
	Если ЭлементыФормы.ПачкиСЗВ6.ТекущаяСтрока <> Неопределено Тогда
		ОбработкаСообщений = глЗначениеПеременной("глОбработкаСообщений");
		ОбработкаСообщений.УдалитьСообщения();
		ПоказатьФайлДокумента(ЭлементыФормы.ПачкиСЗВ6.ТекущаяСтрока.ДокументПачка); 
	КонецЕсли;
КонецПроцедуры

Процедура ПоказатьФайл3Нажатие(Элемент)
	Если ЭлементыФормы.ПачкиСПВ.ТекущаяСтрока <> Неопределено Тогда
		ОбработкаСообщений = глЗначениеПеременной("глОбработкаСообщений");
		ОбработкаСообщений.УдалитьСообщения();
		ПоказатьФайлДокумента(ЭлементыФормы.ПачкиСПВ.ТекущаяСтрока.Пачка); 
	КонецЕсли;
КонецПроцедуры

Процедура ПоказатьФайл4Нажатие(Элемент)
	Если ЭлементыФормы.ПачкиСЗВ63.ТекущаяСтрока <> Неопределено Тогда
		ОбработкаСообщений = глЗначениеПеременной("глОбработкаСообщений");
		ОбработкаСообщений.УдалитьСообщения();
		ПоказатьФайлДокумента(ЭлементыФормы.ПачкиСЗВ63.ТекущаяСтрока.Пачка); 
	КонецЕсли;
КонецПроцедуры

Процедура НаДиск1Нажатие(Элемент)
	Если ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока <> Неопределено Тогда
		ФайлДокументаНаДиск(ЭлементыФормы.ПачкиДокументов.ТекущаяСтрока.Пачка); 
	КонецЕсли;
КонецПроцедуры

Процедура НаДиск2Нажатие(Элемент)
	Если ЭлементыФормы.ПачкиСЗВ6.ТекущаяСтрока <> Неопределено Тогда
		ФайлДокументаНаДиск(ЭлементыФормы.ПачкиСЗВ6.ТекущаяСтрока.ДокументПачка); 
	КонецЕсли;
КонецПроцедуры

Процедура НаДиск3Нажатие(Элемент)
	Если ЭлементыФормы.ПачкиСПВ.ТекущаяСтрока <> Неопределено Тогда
		ФайлДокументаНаДиск(ЭлементыФормы.ПачкиСПВ.ТекущаяСтрока.Пачка); 
	КонецЕсли;
КонецПроцедуры

Процедура НаДиск4Нажатие(Элемент)
	Если ЭлементыФормы.ПачкиСЗВ63.ТекущаяСтрока <> Неопределено Тогда
		ФайлДокументаНаДиск(ЭлементыФормы.ПачкиСЗВ63.ТекущаяСтрока.Пачка); 
	КонецЕсли;
КонецПроцедуры

Процедура ПечатьНажатие(Элемент)
	
	Отказ = Ложь;
	СохранитьДокументы(Отказ, РежимДиалогаВопрос.ОКОтмена);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	СохранениеТекущихДанных();
	ОбработкаСообщений = глЗначениеПеременной("глОбработкаСообщений");
	ОбработкаСообщений.УдалитьСообщения();
	Для каждого ЭлементСоответствия Из СоответствиеСсылокИОбъектов Цикл
		Если ЭлементСоответствия.Значение.ОтчетныйПериод <> ОтчетныйПериод Тогда
			Продолжить;
		КонецЕсли;
		ПечатьДокумента(ЭлементСоответствия.Значение, Ложь);
	КонецЦикла;

КонецПроцедуры

Процедура ПоказатьФайлНажатие(Элемент)

	Отказ = Ложь;
	СохранитьДокументы(Отказ, РежимДиалогаВопрос.ОКОтмена);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	СохранениеТекущихДанных();	
	ОбработкаСообщений = глЗначениеПеременной("глОбработкаСообщений");
	ОбработкаСообщений.УдалитьСообщения();
	Для каждого ЭлементСоответствия Из СоответствиеСсылокИОбъектов Цикл
		Если ЭлементСоответствия.Значение.ОтчетныйПериод <> ОтчетныйПериод Тогда
			Продолжить;
		КонецЕсли;
		ПоказатьФайлДокумента(ЭлементСоответствия.Ключ, Ложь); 
	КонецЦикла;
	
КонецПроцедуры

Процедура НаДискНажатие(Элемент)
	
	Отказ = Ложь;
	СохранитьДокументы(Отказ, РежимДиалогаВопрос.ОКОтмена);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	СохранениеТекущихДанных();	
	
	Длг = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	Длг.Каталог = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"),"ОсновнойКаталогФайлов");
	Длг.Заголовок = "Укажите каталог";
	
	Если Длг.Выбрать() Тогда
		ОбработкаСообщений = глЗначениеПеременной("глОбработкаСообщений");
		ОбработкаСообщений.УдалитьСообщения();
		КаталогСохранения = Длг.Каталог;
		СтрокаСообщений = "";
		Для каждого ЭлементСоответствия Из СоответствиеСсылокИОбъектов Цикл
			Если ЭлементСоответствия.Значение.ОтчетныйПериод <> ОтчетныйПериод Тогда
				Продолжить;
			КонецЕсли;
			Пачка = ЭлементСоответствия.Ключ; 
			Если НЕ Пачка.Пустая() Тогда
				ОбъектДействия = ЭлементСоответствия.Значение;
				
				ИмяФайла = ПроцедурыПерсонифицированногоУчета.ПолучитьИмяФайлаПФ(ОбъектДействия.Ссылка, Год(ОтчетныйПериод));
				
				ЕстьОшибки = Ложь;
				ТекстФайла = РегламентированнаяОтчетность.ПолучитьТекстФайла(ОбъектДействия, ЕстьОшибки);
				Если ЕстьОшибки Тогда
					Возврат;
				КонецЕсли;
				
				ИмяФайла = КаталогСохранения + "\" + ИмяФайла;
				ТекстовыйДокумент = Новый ТекстовыйДокумент;
				ТекстовыйДокумент.УстановитьТекст(ТекстФайла); 
				ТекстовыйДокумент.Записать(ИмяФайла,КодировкаТекста.ANSI);
				СтрокаСообщений = СтрокаСообщений + " по документу " + СокрЛП(ОбъектДействия) + " сформирован файл " + ИмяФайла + Символы.ПС;
				
				
			КонецЕсли;	
		КонецЦикла;
		Предупреждение(СтрокаСообщений);
	КонецЕсли;

КонецПроцедуры

Процедура КнопкаОКНажатие(Элемент)
	Закрыть();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ ПачкиДокументов

Процедура ПачкиДокументовВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДокументОбъект = СоответствиеСсылокИОбъектов[ВыбраннаяСтрока.Пачка];
	ДокументыНеЗаписаны = ДокументОбъект.Модифицированность();
	
	// Документ перед показом придется сохранить
	Если ТипЗнч(ВыбраннаяСтрока.Пачка) = Тип("ДокументСсылка.ПередачаСЗВ4ВПФР") И Не ДокументОбъект.НеСодержитСЗВ Тогда
		
		МассивПачекСЗВ = ДокументОбъект.ПачкиДокументов.ВыгрузитьКолонку("ДокументПачка");
		
		Если Не ДокументыНеЗаписаны Тогда
			Для Каждого СтрокаДокумента Из ДокументОбъект.ПачкиДокументов Цикл
				ДокументыНеЗаписаны = ДокументыНеЗаписаны Или СоответствиеСсылокИОбъектов[СтрокаДокумента.ДокументПачка].Модифицированность()
			КонецЦикла;
		КонецЕсли;
		
		Если ДокументыНеЗаписаны Тогда
			Если Вопрос("Опись АДВ-6-2 и входящие в неё пачки СЗВ-6 должны быть записаны перед показом. Сохранить документы?", 
				РежимДиалогаВопрос.ОКОтмена,,КодВозвратаДиалога.ОК, "Документы не записаны") = КодВозвратаДиалога.ОК Тогда
				Отказ = Ложь;
				СохранитьДокументы(Отказ,,Ложь);
				Если Отказ Тогда
					Возврат;
				КонецЕсли;
				ДокументОбъект = СоответствиеСсылокИОбъектов[ВыбраннаяСтрока.Пачка];
			Иначе
				Возврат
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ДокументыНеЗаписаны Тогда
		Если Вопрос("Документ должен быть записан перед показом. Сохранить документ?", 
			РежимДиалогаВопрос.ОКОтмена,,КодВозвратаДиалога.ОК, "Документ не записан") = КодВозвратаДиалога.ОК Тогда
			СохранитьДокументСПерезаписью(ВыбраннаяСтрока.Пачка, ДокументОбъект);
			ДокументОбъект = СоответствиеСсылокИОбъектов[ВыбраннаяСтрока.Пачка];
		Иначе
			Возврат
		КонецЕсли;
	КонецЕсли;
	
	ДокументОбъект.ПолучитьФорму().ОткрытьМодально();
	
	Если ДокументОбъект.Модифицированность() Тогда // форму закрыли, не сохраняя изменения, - перечитаем документ
		ДокументОбъект = ВыбраннаяСтрока.Пачка.ПолучитьОбъект();
		СоответствиеСсылокИОбъектов.Вставить(ВыбраннаяСтрока.Пачка, ДокументОбъект);
		Если ТипЗнч(ВыбраннаяСтрока.Пачка) = Тип("ДокументСсылка.ПередачаСЗВ4ВПФР") Тогда
			ДокументОбъектАДВ11 = ДокументОбъект;
			ПриИзмененииДокументаАДВ11ДляПоказа();
		ИначеЕсли ТипЗнч(ВыбраннаяСтрока.Пачка) = Тип("ДокументСсылка.СведенияОТрудовомСтажеИЗаработкеСЗВ4") Тогда
			ДокументОбъектДляПоказаФизлиц = ДокументОбъект;
			ПриИзмененииДокументаСЗВДляПоказаФизлиц();
		ИначеЕсли ТипЗнч(ВыбраннаяСтрока.Пачка) = Тип("ДокументСсылка.СведенияОВзносахИСтраховомСтажеСПВ1") Тогда
			ДокументОбъектСПВ = ДокументОбъект;
			ПриИзмененииДокументаСПВДляПоказа();
		Иначе
			ДокументОбъектСЗВ63 = ДокументОбъект;
		КонецЕсли;
	КонецЕсли;
	
	// после показа Опись надо обработать - мог измениться состав пачек
	Если ТипЗнч(ВыбраннаяСтрока.Пачка) = Тип("ДокументСсылка.ПередачаСЗВ4ВПФР") И Не ДокументОбъект.НеСодержитСЗВ Тогда
		// пустые строки удалим
		ПустыеСтроки = ДокументОбъект.ПачкиДокументов.НайтиСтроки(Новый Структура("ДокументПачка", Документы.СведенияОТрудовомСтажеИЗаработкеСЗВ4.ПустаяСсылка()));
		Если ПустыеСтроки.Количество() > 0 Тогда
			Сообщить("Из документа Опись АДВ-6-2 удалены пустые строки!", СтатусСообщения.Информация);
			Для каждого СтрокаДокумента Из ПустыеСтроки Цикл
				ДокументОбъект.ПачкиДокументов.Удалить(СтрокаДокумента);
			КонецЦикла; 
		КонецЕсли;
		// заново перечитаем данные пачек
		Для Каждого СтрокаДокумента Из ДокументОбъект.ПачкиДокументов Цикл
			НоваяСсылка = СтрокаДокумента.ДокументПачка;
			СтрокаПачки = ПачкиДокументов.Найти(НоваяСсылка,"Пачка");
			Если СтрокаПачки <> Неопределено Тогда
				ПачкиДокументов.Удалить(СтрокаПачки)
			КонецЕсли;
			СоответствиеСсылокИОбъектов.Вставить(НоваяСсылка, НоваяСсылка.ПолучитьОбъект());
		КонецЦикла;
		// удаленные пачки покажем как невключенные в описи
		Для каждого ЭлементМассива Из МассивПачекСЗВ Цикл
		    Если СоответствиеСсылокИОбъектов[ЭлементМассива] <> Неопределено И ДокументОбъект.ПачкиДокументов.Найти(ЭлементМассива,"ДокументПачка") = Неопределено Тогда
				СтрокаПачки = ПачкиДокументов.Добавить();
				СтрокаПачки.Пачка = ЭлементМассива;
				СтрокаПачки.ОтчетныйПериод = ОтчетныйПериод;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ТекущийТипСведений = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
		ОформитьЭУПоСтрокеИзПачкиДокументов();
	ИначеЕсли ТекущийТипСведений = Перечисления.ТипыСведенийСЗВ.ПЕНСИОННАЯ Тогда	
		ОформитьЭУПоСтрокеИзПачкиСПВ();
	Иначе	
		ОформитьЭУПоСтрокеИзПачкиСЗВ63();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПачкиДокументовПриАктивизацииСтроки(Элемент)
	
	Если ФлагВыполнятьСохранениеФизЛица Тогда
		ВыполнитьСохранениеДанныхФизлица();
	КонецЕсли;
	ФлагВыполнятьСохранениеФизЛица = Истина;
	
	ТекущиеДанные = ЭлементыФормы.ПачкиДокументов.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		
		ТекущийДокумент = СоответствиеСсылокИОбъектов[ТекущиеДанные.Пачка];
		
		Если ТипЗнч(ТекущиеДанные.Пачка) = Тип("ДокументСсылка.СведенияОТрудовомСтажеИЗаработкеСЗВ4") Тогда
			
			ДокументОбъектАДВ11 = Неопределено;
			ДокументОбъектДляПоказаФизлиц = ТекущийДокумент;
			
			ПриИзмененииДокументаСЗВДляПоказаФизлиц();
			
			ЭлементыФормы.Проверить1.Кнопки.ПроверитьВCheckUFA.Доступность = Ложь;
		ИначеЕсли ТипЗнч(ТекущиеДанные.Пачка) = Тип("ДокументСсылка.ПередачаСЗВ4ВПФР") Тогда
			ДокументОбъектАДВ11 = ТекущийДокумент;
			ПриИзмененииДокументаАДВ11ДляПоказа();
			ЭлементыФормы.Проверить1.Кнопки.ПроверитьВCheckUFA.Доступность = Истина;
		КонецЕсли;
		
	Иначе
		
		ДокументОбъектДляПоказаФизлиц = Неопределено;
		
	КонецЕсли;
	
	
	ОформитьЭУПоСтрокеИзПачкиДокументов();
	
КонецПроцедуры

Процедура ПачкиДокументовПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель)
	
	Отказ = Истина;
	ВыполнитьСохранениеДанныхФизлица();
	СоздатьАДВ(Ложь, , Истина, ЭлементыФормы.ПачкиДокументов);
	
КонецПроцедуры

Процедура ПачкиДокументовПередУдалением(Элемент, Отказ)
	Отказ = Истина;
	ПометитьНаУдалениеДокументОсновногоСписка(Элемент);
КонецПроцедуры

Процедура ПачкиДокументовПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		ДанныеСтроки = ОформлениеСтроки.ДанныеСтроки;
		ОформлениеЯчеек = ОформлениеСтроки.Ячейки;
		
		Пачка = ДанныеСтроки.Пачка;
		Если Пачка <> Неопределено Тогда
			ДокументОбъект = СоответствиеСсылокИОбъектов[Пачка];
			Если ТипЗнч(ДанныеСтроки.Пачка) = Тип("ДокументСсылка.СведенияОТрудовомСтажеИЗаработкеСЗВ4") Тогда
				ОформлениеЯчеек.Пачка.Текст = ДокументОбъект.ТипФормДокументов + " № " + ДокументОбъект.НомерПачки + ?(ДокументОбъект.ЗаполненПринятымиСведениями," ( загружен по принятым в ПФР данным, "," (") + ДокументОбъект.РаботникиОрганизации.Количество() + ")";
				Если ДокументОбъект.ПринятоВПФР Или ДокументОбъект.ЗаполненПринятымиСведениями Тогда
					ОформлениеЯчеек.Пачка.ЦветТекста = СерыйЦвет;
				КонецЕсли;
			ИначеЕсли ТипЗнч(ДанныеСтроки.Пачка) = Тип("ДокументСсылка.ПередачаСЗВ4ВПФР") Тогда
				Если ДокументОбъект.НеСодержитСЗВ Тогда
					ОформлениеЯчеек.Пачка.Текст = "АДВ-11 № " + ДокументОбъект.НомерПачки;
				Иначе
					ОформлениеЯчеек.Пачка.Текст = "АДВ-6-2 № " + ДокументОбъект.НомерПачки + ?(ДокументОбъект.ЗаполненПринятымиСведениями," (загружен по принятым в ПФР данным)","");
				КонецЕсли;
				Если ДокументОбъект.ПринятоВПФР Или ДокументОбъект.ЗаполненПринятымиСведениями Тогда
					ОформлениеЯчеек.Пачка.ЦветТекста = СерыйЦвет;
					Если ПоказыватьСуммыВзносов Тогда
						ОформлениеЯчеек.ОтчетныйПериод.ЦветТекста = СерыйЦвет;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДанныеСтроки.ОтчетныйПериод) И Элемент.Колонки.Найти("ОтчетныйПериод") <> Неопределено Тогда
			Если ДанныеСтроки.ОтчетныйПериод = ОтчетныйПериод Тогда
				ОформлениеЯчеек.ОтчетныйПериод.Текст = "Текущий";
				
			Иначе
				ОформлениеЯчеек.ОтчетныйПериод.Текст = ПредставлениеПериода(НачалоГода(ДанныеСтроки.ОтчетныйПериод), ПроцедурыПерсонифицированногоУчета.ОкончаниеОтчетногоПериодаПерсучета(ДанныеСтроки.ОтчетныйПериод), "ФП = Истина");
				
				ОформлениеЯчеек.Пачка.ЦветТекста			= СерыйЦвет;
				ОформлениеЯчеек.ОтчетныйПериод.ЦветТекста	= СерыйЦвет;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ ПачкиСЗВ6

Процедура ПачкиСЗВ6Выбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Ссылка = ВыбраннаяСтрока.ДокументПачка;
	ДокументОбъект = СоответствиеСсылокИОбъектов[Ссылка];
	Если ДокументОбъект.Модифицированность() Тогда
		Если Вопрос("Документ должен быть записан перед показом. Сохранить документ?", 
			РежимДиалогаВопрос.ОКОтмена,,КодВозвратаДиалога.ОК, "Документ не записан") = КодВозвратаДиалога.ОК Тогда
			СохранитьДокументСПерезаписью(ВыбраннаяСтрока.ДокументПачка, ДокументОбъект);
			ДокументОбъект = СоответствиеСсылокИОбъектов[ВыбраннаяСтрока.ДокументПачка];
		Иначе
			Возврат
		КонецЕсли;
	КонецЕсли;
	ДокументОбъект.ПолучитьФорму().ОткрытьМодально();
	Если ДокументОбъект.Модифицированность() Тогда // форму закрыли, не сохраняя изменения, - перечитаем документ
		ДокументОбъект = Ссылка.ПолучитьОбъект();
		СоответствиеСсылокИОбъектов.Вставить(Ссылка, ДокументОбъект);
		ДокументОбъектДляПоказаФизлиц = ДокументОбъект;
		ПриИзмененииДокументаСЗВДляПоказаФизлиц();
	Иначе	
		СоответствиеСсылокИОбъектов.Вставить(Ссылка, ДокументОбъект);
		ДокументОбъектДляПоказаФизлиц = ДокументОбъект;
	КонецЕсли;
	ОформитьЭУПоСтрокеИзПачкиСЗВ6();
	
КонецПроцедуры

Процедура ПачкиСЗВ6ПриАктивизацииСтроки(Элемент)
	
	ВыполнитьСохранениеДанныхФизлица();
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ДокументОбъектДляПоказаФизлиц = СоответствиеСсылокИОбъектов[ТекущиеДанные.ДокументПачка];
		ПриИзмененииДокументаСЗВДляПоказаФизлиц();
	КонецЕсли;
	
	ОформитьЭУПоСтрокеИзПачкиСЗВ6();
	
КонецПроцедуры

Процедура ПачкиСЗВ6ПередНачаломДобавления(Элемент, Отказ, Копирование)
	Отказ = Истина;
	ВыполнитьСохранениеДанныхФизлица();
	СоздатьСЗВ6(Истина, ДокументОбъектАДВ11, , ЭлементыФормы.КатегорияЗастрахованныхЛиц.ДоступныеЗначения[0].Значение, Истина, ЭлементыФормы.ПачкиСЗВ6);
КонецПроцедуры

Процедура ПачкиСЗВ6ПередУдалением(Элемент, Отказ)
	Отказ = Истина;
	УдалитьСЗВ6ИзОписи();
КонецПроцедуры

Процедура ПачкиСЗВ6ПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Для каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		
		ДокументОбъект = СоответствиеСсылокИОбъектов[ОформлениеСтроки.ДанныеСтроки.ДокументПачка];
		Если ДокументОбъект = Неопределено Тогда
			Возврат			
		КонецЕсли;
		
		ОформлениеЯчеек = ОформлениеСтроки.Ячейки;
		ОформлениеЯчеек.ДокументПачка.Текст = " № " + ДокументОбъект.НомерПачки +" (" + ДокументОбъект.РаботникиОрганизации.Количество() + ")";
		
		Если ПоказыватьСуммыВзносов Тогда
			
			// не показываем первую "подстрочку"
			ОформлениеЯчеек.КолонкаСтраховая.Видимость = Ложь;
			ОформлениеЯчеек.КолонкаНакопительная.Видимость = Ложь;
			ОформлениеЯчеек.НачисленоСтраховая.УстановитьТекст(Формат(ДокументОбъект.РаботникиОрганизации.Итог("НачисленоСтраховая"),"ЧЦ=15; ЧДЦ=2"));
			ОформлениеЯчеек.УплаченоСтраховая.УстановитьТекст(Формат(ДокументОбъект.РаботникиОрганизации.Итог("УплаченоСтраховая"),"ЧЦ=15; ЧДЦ=2"));
			ОформлениеЯчеек.НачисленоНакопительная.УстановитьТекст(Формат(ДокументОбъект.РаботникиОрганизации.Итог("НачисленоНакопительная"),"ЧЦ=15; ЧДЦ=2"));
			ОформлениеЯчеек.УплаченоНакопительная.УстановитьТекст(Формат(ДокументОбъект.РаботникиОрганизации.Итог("УплаченоНакопительная"),"ЧЦ=15; ЧДЦ=2"));
			
		КонецЕсли;
		
		Если ДокументОбъект.ПринятоВПФР Или ДокументОбъект.ЗаполненПринятымиСведениями Тогда
			ОформлениеСтроки.ЦветТекста = СерыйЦвет;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ ФизлицаПачек

Процедура ФизлицаПачекПриАктивизацииСтроки(Элемент)
	
	Если ТипСведений = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Или ТипСведений = Перечисления.ТипыСведенийСЗВ.ПЕНСИОННАЯ Тогда
		// Сохраняем данные предыдущего сотрудника
		Если ЗначениеЗаполнено(ФизЛицо) Тогда
			Если ФлагВыполнятьСохранениеФизЛица И НЕ ВыполнитьСохранениеДанныхФизлица() Тогда
				// Не удалось сохранить данные физлица, не даем переходить на другое физлицо
				Если ТипСведений = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
					СтрокаРаботника = ДокументОбъектДляПоказаФизлиц.РаботникиОрганизации.Найти(ФизЛицо, "ФизЛицо");
				ИначеЕсли ТипСведений = Перечисления.ТипыСведенийСЗВ.ПЕНСИОННАЯ Тогда
					СтрокаРаботника = ДокументОбъектСПВ.РаботникиОрганизации.Найти(ФизЛицо, "ФизЛицо");
				КонецЕсли;
				Если СтрокаРаботника <> Неопределено Тогда
					ФлагВыполнятьСохранениеФизЛица = Ложь;
					Элемент.ТекущаяСтрока = СтрокаРаботника;
				КонецЕсли;
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
		ФлагВыполнятьСохранениеФизЛица = Истина;
	КонецЕсли;
	
	НетОтображаемыхСтрок = Элемент.ТекущаяСтрока = Неопределено;
	Если НетОтображаемыхСтрок Тогда
		мТекущийСотрудник = Справочники.ФизическиеЛица.ПустаяСсылка();
	Иначе 
		мТекущийСотрудник = Элемент.ТекущаяСтрока.ФизЛицо;
	КонецЕсли;
	
	ОформитьЭУПоСтрокеИзПачкиФизлиц();
	
КонецПроцедуры

Процедура ФизлицаПачекФизЛицоНачалоВыбора(Элемент, СтандартнаяОбработка)
	ПроцедурыУправленияПерсоналом.ОткрытьФормуВыбораСотрудникаОрганизации(Элемент, ЭтаФорма, Истина, ДокументОбъектДляПоказаФизлиц.Дата, ОбщегоНазначения.ГоловнаяОрганизация(ДокументОбъектДляПоказаФизлиц.Организация), 1, СтандартнаяОбработка, Элемент.Значение,, Истина);
КонецПроцедуры

Процедура ФизлицаПачекФизЛицоОткрытие(Элемент, СтандартнаяОбработка)
	
	ПроцедурыУправленияПерсоналом.ОбработкаОткрытияФизлица(Элемент, "ПФР2010", Элемент.Значение, Организация, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ФизлицаПачекФизЛицоПриИзменении(Элемент)
	СтрокаТабличнойЧасти = ЭлементыФормы.ФизлицаПачек.ТекущиеДанные;
	НовыеДанные = ПроцедурыПерсонифицированногоУчета.ДанныеФизЛицаДляДокументаПерсучета(СтрокаТабличнойЧасти.Физлицо, ОбщегоНазначения.ПолучитьРабочуюДату(), Организация, КатегорияЗастрахованныхЛиц, ТекущийОтчетныйПериод, Истина);
	ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, НовыеДанные);
КонецПроцедуры

Процедура ФизлицаПачекФизЛицоАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	ТекстАвтоПодбора = ПроцедурыУправленияПерсоналом.ПодобратьФИОСотрудника(СтандартнаяОбработка, 1, Текст, ДокументОбъектДляПоказаФизлиц.Организация, Истина);
КонецПроцедуры

Процедура ФизлицаПачекФизЛицоОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	Значение = ПроцедурыУправленияПерсоналом.ПодобратьСписокСотрудников(СтандартнаяОбработка, 1, Текст, ДокументОбъектДляПоказаФизлиц.Организация, Истина);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ПАНЕЛИ ПачкиСПВ

Процедура ПачкиСПВПриАктивизацииСтроки(Элемент)
	
	ВыполнитьСохранениеДанныхФизлица();
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		
		ДокументОбъектСПВ = СоответствиеСсылокИОбъектов[ТекущиеДанные.Пачка];
		ПриИзмененииДокументаСПВДляПоказа();
		
		ОформитьЭУПоСтрокеИзПачкиСПВ();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПачкиСПВПередНачаломДобавления(Элемент, Отказ, Копирование)
	Отказ = Истина;
	Если ПачкиСПВ.Количество() = 0 Тогда
		ЭлементыФормы.ПанельДанныеСПВ.ТекущаяСтраница = ЭлементыФормы.ПанельДанныеСПВ.Страницы.СтраницаДанных;
		ЭлементыФормы.ПанельСоставСПВ.ТекущаяСтраница = ЭлементыФормы.ПанельСоставСПВ.Страницы.ДанныеФизлица;
	КонецЕсли;
	ВыполнитьСохранениеДанныхФизлица();
	СоздатьСПВ(, ЭлементыФормы.КатегорияЗастрахованныхЛиц1.ДоступныеЗначения[0].Значение, Истина, ЭлементыФормы.ПачкиСПВ);
КонецПроцедуры

Процедура ПачкиСПВПослеУдаления(Элемент)
	Если ПачкиСПВ.Количество() = 0 Тогда
		ОформитьПустыеСтраницы();
	КонецЕсли;
КонецПроцедуры

Процедура ПачкиСПВПриПолученииДанных(Элемент, ОформленияСтрок)
	Для каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		
		ОформлениеЯчеек = ОформлениеСтроки.Ячейки;
		Пачка = ОформлениеСтроки.ДанныеСтроки.Пачка;
		
		ДокументОбъект = СоответствиеСсылокИОбъектов[Пачка];
		ОформлениеЯчеек.Пачка.Текст = " № " + ДокументОбъект.НомерПачки +" (" + ДокументОбъект.РаботникиОрганизации.Количество() + ")";
		
		Если ПоказыватьСуммыВзносов Тогда
			
			// не показываем первую "подстрочку"
			ОформлениеЯчеек.КолонкаСтраховая.Видимость = Ложь;
			ОформлениеЯчеек.КолонкаНакопительная.Видимость = Ложь;
			ОформлениеЯчеек.НачисленоСтраховая.УстановитьТекст(Формат(ДокументОбъект.РаботникиОрганизации.Итог("НачисленоСтраховая"),"ЧЦ=15; ЧДЦ=2"));
			ОформлениеЯчеек.УплаченоСтраховая.УстановитьТекст(Формат(ДокументОбъект.РаботникиОрганизации.Итог("УплаченоСтраховая"),"ЧЦ=15; ЧДЦ=2"));
			ОформлениеЯчеек.НачисленоНакопительная.УстановитьТекст(Формат(ДокументОбъект.РаботникиОрганизации.Итог("НачисленоНакопительная"),"ЧЦ=15; ЧДЦ=2"));
			ОформлениеЯчеек.УплаченоНакопительная.УстановитьТекст(Формат(ДокументОбъект.РаботникиОрганизации.Итог("УплаченоНакопительная"),"ЧЦ=15; ЧДЦ=2"));
			
		КонецЕсли;
		
		Если ДокументОбъект.ПринятоВПФР Тогда
			ОформлениеСтроки.ЦветТекста = СерыйЦвет;
		КонецЕсли;
		
	КонецЦикла;
КонецПроцедуры

Процедура КатегорияЗастрахованныхЛиц1ПриИзменении(Элемент)
	ВыполнитьСохранениеДанныхФизлица();
	КатегорияЗастрахованныхЛиц = ДокументОбъектСПВ.КатегорияЗастрахованныхЛиц;
	ЗаписиОСтаже.Отбор.КатегорияЗастрахованныхЛиц.Значение	= КатегорияЗастрахованныхЛиц;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ Пенсионеры

Процедура ПенсионерыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.ДатаСоставления = ОбщегоНазначения.ПолучитьРабочуюДату()
	КонецЕсли;	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ ФизлицаПачекСПВ

Процедура ФизлицаПачекСПВФизЛицоПриИзменении(Элемент)
	СтрокаТабличнойЧасти = ЭлементыФормы.ФизлицаПачекСПВ.ТекущиеДанные;
	НовыеДанные = ПроцедурыПерсонифицированногоУчета.ДанныеФизЛицаДляДокументаПерсучета(СтрокаТабличнойЧасти.Физлицо, СтрокаТабличнойЧасти.ДатаСоставления, Организация, КатегорияЗастрахованныхЛиц, ОтчетныйПериод);
	ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, НовыеДанные);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ПАНЕЛИ ПачкиСЗВ63

Процедура ПачкиСЗВ63ПриПолученииДанных(Элемент, ОформленияСтрок)
	Для каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		
		ОформлениеЯчеек = ОформлениеСтроки.Ячейки;
		Пачка = ОформлениеСтроки.ДанныеСтроки.Пачка;
		
		ДокументОбъект = СоответствиеСсылокИОбъектов[Пачка];
		ОформлениеЯчеек.Пачка.Текст = " № " + ДокументОбъект.НомерПачки +" (" + ДокументОбъект.СотрудникиОрганизации.Количество() + ")";
		
		ОформлениеЯчеек.Заработок.УстановитьТекст(Формат(ДокументОбъект.СведенияОЗаработке.Итог("Заработок"),"ЧЦ=15; ЧДЦ=0"));
		ОформлениеЯчеек.ОблагаетсяВзносами.УстановитьТекст(Формат(ДокументОбъект.СведенияОЗаработке.Итог("ОблагаетсяВзносами"),"ЧЦ=15; ЧДЦ=0"));
		
		Если ДокументОбъект.ПринятоВПФР Тогда
			ОформлениеСтроки.ЦветТекста = СерыйЦвет;
		КонецЕсли;
		
	КонецЦикла;
КонецПроцедуры

Процедура ПачкиСЗВ63ПередНачаломДобавления(Элемент, Отказ, Копирование)
	Отказ = Истина;
	Если ПачкиСЗВ63.Количество() = 0 Тогда
		ЭлементыФормы.ПанельДанныеСЗВ63.ТекущаяСтраница = ЭлементыФормы.ПанельДанныеСЗВ63.Страницы.СтраницаДанных;
		ЭлементыФормы.ПанельСоставСЗВ63.ТекущаяСтраница = ЭлементыФормы.ПанельСоставСЗВ63.Страницы.ДанныеФизлица;
	КонецЕсли;
	СоздатьСЗВ63(,ЭлементыФормы.КатегорияЗастрахованныхЛиц2.ДоступныеЗначения[0].Значение, Истина, ЭлементыФормы.ПачкиСЗВ63);
КонецПроцедуры

Процедура ПачкиСЗВ63ПриАктивизацииСтроки(Элемент)
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ДокументОбъектСЗВ63 = СоответствиеСсылокИОбъектов[ТекущиеДанные.Пачка];
		ОформитьЭУПоСтрокеИзПачкиСЗВ63();
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ ФизлицаПачекСЗВ63

Процедура ПриИзмененииФизлицаСЗВ63(СтрокаТабличнойЧасти)
	Если СтрокаТабличнойЧасти = Неопределено Тогда
		Возврат
	КонецЕсли;
	НовыеДанные = ПроцедурыПерсонифицированногоУчета.ДанныеФизЛицаДляДокументаПерсучета(СтрокаТабличнойЧасти.Физлицо, ОбщегоНазначения.ПолучитьРабочуюДату(), Неопределено, Неопределено, Неопределено);
	ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, НовыеДанные);
	Для каждого СтрокаТЧ Из ДокументОбъектСЗВ63.СведенияОЗаработке.НайтиСтроки(Новый Структура("ФизЛицо",мТекущийСотрудник)) Цикл
		ДокументОбъектСЗВ63.СведенияОЗаработке.Удалить(СтрокаТЧ)
	КонецЦикла;
	ДокументОбъектСЗВ63.РассчитатьЗаработок(СтрокаТабличнойЧасти);
	ЭлементыФормы.СведенияОЗаработке.ОтборСтрок.ФизЛицо.Установить(СтрокаТабличнойЧасти.ФизЛицо);
КонецПроцедуры

Процедура ФизлицаПачекСЗВ63ПередУдалением(Элемент, Отказ)
	Для каждого СтрокаТЧ Из ДокументОбъектСЗВ63.СведенияОЗаработке.НайтиСтроки(Новый Структура("ФизЛицо",Элемент.ТекущаяСтрока.ФизЛицо)) Цикл
		ДокументОбъектСЗВ63.СведенияОЗаработке.Удалить(СтрокаТЧ)
	КонецЦикла;
КонецПроцедуры

Процедура ФизлицаПачекСЗВ63ФизЛицоПриИзменении(Элемент)
	ПриИзмененииФизлицаСЗВ63(ЭлементыФормы.ФизлицаПачекСЗВ63.ТекущиеДанные);
КонецПроцедуры

Процедура СведенияОЗаработкеПередНачаломИзменения(Элемент, Отказ)
	Отказ = ЭлементыФормы.ФизлицаПачекСЗВ63.ТекущаяСтрока = Неопределено
КонецПроцедуры

Процедура СведенияОЗаработкеПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	ТекущаяСтрока = Элемент.ТекущаяСтрока;
	Если НоваяСтрока И Не Копирование Тогда
        ТекущаяСтрока.Месяц = 1;
		ТекущаяСтрока.Физлицо = ЭлементыФормы.ФизлицаПачекСЗВ63.ТекущаяСтрока.Физлицо
	КонецЕсли;
КонецПроцедуры

Процедура КнопкаОбновитьДанныеОДоходахНажатие(Элемент)
	
	Если ДокументОбъектСЗВ63.КатегорияЗастрахованныхЛиц.Пустая() Тогда
		РаботаСДиалогами.ВывестиПредупреждение("Не указана категория застрахованных лиц!");
		Возврат;
	КонецЕсли;
	
	Если ДокументОбъектСЗВ63.ТипДоговора.Пустая() Тогда
		РаботаСДиалогами.ВывестиПредупреждение("Не указан тип договора!");
		Возврат;
	КонецЕсли;
	
	ПриИзмененииФизлицаСЗВ63(ЭлементыФормы.ФизлицаПачекСЗВ63.ТекущиеДанные);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ПАНЕЛИ ПанельСтажФизлица

Процедура КоманднаяПанельСтажаПерезаполнить(Кнопка)

	Если ТипСведений = Перечисления.ТипыСведенийСЗВ.ПЕНСИОННАЯ И Не ЗначениеЗаполнено(ЭлементыФормы.ДатаСоставленияФЛ.Значение) Тогда
		РаботаСДиалогами.ВывестиПредупреждение("Не указана дата составления сведений!");
		Возврат;
	КонецЕсли;
	
	Если ЗаписиОСтаже.Количество()>0 Тогда
		
		Вопрос = "Текущие данные будут очищены. Продолжить?";
		Ответ  = Вопрос(Вопрос, РежимДиалогаВопрос.ДаНет);
		
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли; 	
	
	СписокФизЛиц = Новый СписокЗначений;
	СписокФизЛиц.Добавить(ФизЛицо);
	
	// Получим данные о стаже и загрузим их в набор записей 
	ТаблицаСтажа = ПроцедурыПерсонифицированногоУчета.СЗВ6_ПолучитьДанныеДляЗаполненияСтажа(Организация, ТекущийОтчетныйПериод, ?(ТекущийТипСведений = Перечисления.ТипыСведенийСЗВ.ПЕНСИОННАЯ, ЭлементыФормы.ДатаСоставленияФЛ.Значение, ПроцедурыПерсонифицированногоУчета.ОкончаниеОтчетногоПериодаПерсучета(ТекущийОтчетныйПериод)), СписокФизЛиц);
	ЗаписиОСтаже.Загрузить(ТаблицаСтажа.Скопировать(ТаблицаСтажа.НайтиСтроки(Новый Структура("КатегорияЗастрахованныхЛиц",КатегорияЗастрахованныхЛиц))));
	
КонецПроцедуры

Процедура ЗаписиОСтажеПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	ОформлениеЯчеек = ОформлениеСтроки.Ячейки;
	// не показываем первую "подстрочку"
	ОформлениеЯчеек.НевидимаяКолонка1.Видимость = Ложь;
	ОформлениеЯчеек.НевидимаяКолонка2.Видимость = Ложь;
	ОформлениеЯчеек.НевидимаяКолонка3.Видимость = Ложь;
	ОформлениеЯчеек.НевидимаяКолонка4.Видимость = Ложь;
	ОформлениеЯчеек.НевидимаяКолонка5.Видимость = Ложь;
	ОформлениеЯчеек.НевидимаяКолонка6.Видимость = Ложь;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ПАНЕЛИ ПанельДокумент

Процедура ПереключательТипФормДокументовПриИзменении(Элемент)
	Если Элемент.Значение = "СЗВ-6-2" И СтажДоступенДляРедактирования Тогда
		УдалитьОсобенностиИзСтажаФизлиц(ДокументОбъектДляПоказаФизлиц);
	КонецЕсли;
	ЭлементыФормы.НадписьСоставОписи.Заголовок = "  Состав Описи АДВ-6-2 №" + ДокументОбъектАДВ11.НомерПачки + "    (пачка " + Элемент.Значение + " № " + ДокументОбъектДляПоказаФизлиц.НомерПачки + ")";
	ОформитьТабличноеПолеСтажа(Элемент.Значение = "СЗВ-6-1");
КонецПроцедуры

Процедура ПереключательВидКорректировкиПриИзменении(Элемент)
	
	Если Элемент.Значение = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
		ДокументОбъектДляПоказаФизлиц.КорректируемыйПериод = "";
		КорректируемыйМесяцСтрока = "";
		ЭлементыФормы.ПанельДоначисленоВзносов.Свертка = РежимСверткиЭлементаУправления.Лево;
		ТекущийОтчетныйПериод = ОтчетныйПериод;
	Иначе
		ДокументОбъектДляПоказаФизлиц.КорректируемыйПериод = ПроцедурыПерсонифицированногоУчета.ПредшествующийОтчетныйПериодПерсучета(ОтчетныйПериод);
		ДокументОбъектДляПоказаФизлиц.КорректируемыйПериод = ?(ДокументОбъектДляПоказаФизлиц.КорректируемыйПериод < ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами(), ОтчетныйПериод, ДокументОбъектДляПоказаФизлиц.КорректируемыйПериод);
		КорректируемыйМесяцСтрока = ПредставлениеПериода(НачалоГода(ДокументОбъектДляПоказаФизлиц.КорректируемыйПериод), ПроцедурыПерсонифицированногоУчета.ОкончаниеОтчетногоПериодаПерсучета(ДокументОбъектДляПоказаФизлиц.КорректируемыйПериод), "ФП = Истина" );
		ЭлементыФормы.ПанельДоначисленоВзносов.Свертка = РежимСверткиЭлементаУправления.Нет;
		ТекущийОтчетныйПериод = ДокументОбъектДляПоказаФизлиц.КорректируемыйПериод;
	КонецЕсли;
	ЗаписиОСтаже.Отбор.ОтчетныйПериод.Значение = ТекущийОтчетныйПериод;
	ЭлементыФормы.КатегорияЗастрахованныхЛиц.ДоступныеЗначения = ПроцедурыПерсонифицированногоУчета.КатегорииЗастрахованныхЛицОрганизации(Организация, ОбщегоНазначения.ГоловнаяОрганизация(Организация), ТекущийОтчетныйПериод);
	
КонецПроцедуры

// Процедура - обработчик события "Регулирование" поля ввода периода регистрации.
//
Процедура КорректируемыйПериодРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(ДокументОбъектДляПоказаФизлиц.ТипСведенийСЗВ) Или ДокументОбъектДляПоказаФизлиц.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
		Возврат
	КонецЕсли;
	
	Если ДокументОбъектДляПоказаФизлиц.КорректируемыйПериод = '20100101' Тогда
		Если Направление = 1 Тогда
			ДокументОбъектДляПоказаФизлиц.КорректируемыйПериод = '20100701'
		Иначе
			Возврат
		КонецЕсли;
	ИначеЕсли ДокументОбъектДляПоказаФизлиц.КорректируемыйПериод = '20100701' Тогда
		ДокументОбъектДляПоказаФизлиц.КорректируемыйПериод = ДобавитьМесяц(ДокументОбъектДляПоказаФизлиц.КорректируемыйПериод, Направление * 6);
	ИначеЕсли ДокументОбъектДляПоказаФизлиц.КорректируемыйПериод = '20110101' И Направление = -1 Тогда
		ДокументОбъектДляПоказаФизлиц.КорректируемыйПериод = '20100701'
	Иначе
		ДокументОбъектДляПоказаФизлиц.КорректируемыйПериод = ДобавитьМесяц(ДокументОбъектДляПоказаФизлиц.КорректируемыйПериод, Направление * 3);
	КонецЕсли;
	Элемент.Значение = ПредставлениеПериода(НачалоГода(ДокументОбъектДляПоказаФизлиц.КорректируемыйПериод), ПроцедурыПерсонифицированногоУчета.ОкончаниеОтчетногоПериодаПерсучета(ДокументОбъектДляПоказаФизлиц.КорректируемыйПериод), "ФП = Истина" );
	
	ТекущийОтчетныйПериод = ДокументОбъектДляПоказаФизлиц.КорректируемыйПериод;
	ЗаписиОСтаже.Отбор.ОтчетныйПериод.Значение = ТекущийОтчетныйПериод;
	
	ЭлементыФормы.КатегорияЗастрахованныхЛиц.ДоступныеЗначения = ПроцедурыПерсонифицированногоУчета.КатегорииЗастрахованныхЛицОрганизации(Организация, ОбщегоНазначения.ГоловнаяОрганизация(Организация), ТекущийОтчетныйПериод);

КонецПроцедуры // ПериодРегистрацииРегулирование()

Процедура КатегорияЗастрахованныхЛицПриИзменении(Элемент)
	ВыполнитьСохранениеДанныхФизлица();
	КатегорияЗастрахованныхЛиц = ДокументОбъектДляПоказаФизлиц.КатегорияЗастрахованныхЛиц;
	ЗаписиОСтаже.Отбор.КатегорияЗастрахованныхЛиц.Значение	= КатегорияЗастрахованныхЛиц;
КонецПроцедуры

Процедура СведенияОЗадолженностиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока И НЕ Копирование Тогда
		Элемент.ТекущаяСтрока.Год = 2009;
	КонецЕсли;
КонецПроцедуры

Процедура КоманднаяПанельРасчетыЗадолженностьПередПФР(Кнопка)
	
	Если ЭлементыФормы.СведенияОЗадолженности.Значение.Количество() > 0 Тогда
		Вопрос = "Таблица расчетов с ПФР будет очищена. Продолжить?";
		Ответ = Вопрос(Вопрос, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ДокументОбъектАДВ11.АвтозаполнениеСтрокЗадолженности();

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()
	
	Организация = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");
	
	БылоСохранено = ВосстановитьЗначение("ТипСведений");
	Если Не ЗначениеЗаполнено(БылоСохранено) Тогда
		ТипСведений = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ;
	ИначеЕсли ТипЗнч(БылоСохранено) = Тип("Строка") Тогда 
		ТипСведений = ?(БылоСохранено = "ПЕНС",Перечисления.ТипыСведенийСЗВ.ПЕНСИОННАЯ,Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ);
	ИначеЕсли ТипЗнч(БылоСохранено) = Тип("ПеречислениеСсылка.ТипыСведенийСЗВ") Тогда 
		ТипСведений = БылоСохранено
	Иначе 
		ТипСведений = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ОтчетныйПериод) Тогда
		ОтчетныйПериод = ПроцедурыПерсонифицированногоУчета.ПредшествующийОтчетныйПериодПерсучета(ОбщегоНазначения.ПолучитьРабочуюДату());
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ОтчетныйГод) Тогда
		ОтчетныйГод = Макс(Год(ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами()),Год(ОбщегоНазначения.ПолучитьРабочуюДату()) - 1);
	КонецЕсли;

	// Заполним реквизит формы МесяцСтрока.
	ОтчетныйПериодСтрока = ПредставлениеПериода(НачалоГода(ОтчетныйПериод), ПроцедурыПерсонифицированногоУчета.ОкончаниеОтчетногоПериодаПерсучета(ОтчетныйПериод), "ФП = Истина" );
	КнопкаАДВ11 = ЭлементыФормы.КоманднаяПанельПачки.Кнопки.Действие.Кнопки.АДВ11;
	
	ПоказыватьСуммыВзносов = Истина;
	СтажДоступенДляРедактирования = Истина;
	
	Если Не ПоказыватьСуммыВзносов Или ПроцедурыПерсонифицированногоУчета.ОкончаниеОтчетногоПериодаПерсучета(ОтчетныйПериод) <> КонецГода(ОтчетныйПериод) Тогда
		Кнопки = ЭлементыФормы.КоманднаяПанельПачки.Кнопки.Действие.Кнопки;
		Если Кнопки.Найти("АДВ11") <> Неопределено Тогда
			Кнопки.Удалить(Кнопки.АДВ11);
		КонецЕсли;
	КонецЕсли;
	
	Если Не ПоказыватьСуммыВзносов И ТипСведений <> Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ И ТипСведений <> Перечисления.ТипыСведенийСЗВ.ПЕНСИОННАЯ Тогда
		ТипСведений = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ
	КонецЕсли;
	
	Если ТипСведений = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
		ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.КвартальнаяОтчетность
	ИначеЕсли ТипСведений = Перечисления.ТипыСведенийСЗВ.ПЕНСИОННАЯ Тогда
		ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.ОформлениеПенсии;
	Иначе
		ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.СведенияОНачисленномЗаработке
	КонецЕсли;
	Если ТипСведений = Перечисления.ТипыСведенийСЗВ.ПЕНСИОННАЯ Тогда
		ЭлементыФормы.ПанельКнопкаСформировать.Свертка = РежимСверткиЭлементаУправления.Лево;
	Иначе
		ЭлементыФормы.ПанельКнопкаСформировать.Свертка = РежимСверткиЭлементаУправления.Нет;
	КонецЕсли;
	Если ТипСведений = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Или ТипСведений = Перечисления.ТипыСведенийСЗВ.ПЕНСИОННАЯ Тогда
		ЭлементыФормы.ПанельОтчетныйПериод.ТекущаяСтраница = ЭлементыФормы.ПанельОтчетныйПериод.Страницы.СтраницаПериодПерсучета;
	Иначе
		ЭлементыФормы.ПанельОтчетныйПериод.ТекущаяСтраница = ЭлементыФормы.ПанельОтчетныйПериод.Страницы.СтраницаОтчетныйГод;
	КонецЕсли;
	
	ОбновитьПачкиДокументов();
	
	// установим использование отборов и признаки автообновления данных
	ЗаписиОСтаже.Отбор.Физлицо.Использование = Истина;
	ЗаписиОСтаже.Отбор.ОтчетныйПериод.Использование = Истина;
	ЗаписиОСтаже.Отбор.ОбособленноеПодразделение.Использование = Истина;
	ЗаписиОСтаже.Отбор.КатегорияЗастрахованныхЛиц.Использование = Истина;
	
	ЭлементыФормы.ЗаписиОСтаже.ОбновлятьПриИзмененииОтбора = Истина;
	
	Если НЕ ПоказыватьСуммыВзносов Тогда
		ЭлементыФормы.КоманднаяПанельПачки.Кнопки.Удалить(ЭлементыФормы.КоманднаяПанельПачки.Кнопки.ПометитьНаУдаление);
		ЭлементыФормы.ПачкиСЗВ6.Колонки.Удалить(ЭлементыФормы.ПачкиСЗВ6.Колонки.КолонкаНакопительная);
		ЭлементыФормы.ПачкиСЗВ6.Колонки.Удалить(ЭлементыФормы.ПачкиСЗВ6.Колонки.КолонкаСтраховая);
		ЭлементыФормы.ПачкиСЗВ6.Колонки.Удалить(ЭлементыФормы.ПачкиСЗВ6.Колонки.НачисленоНакопительная);
		ЭлементыФормы.ПачкиСЗВ6.Колонки.Удалить(ЭлементыФормы.ПачкиСЗВ6.Колонки.НачисленоСтраховая);
		ЭлементыФормы.ПачкиСЗВ6.Колонки.Удалить(ЭлементыФормы.ПачкиСЗВ6.Колонки.УплаченоНакопительная);
		ЭлементыФормы.ПачкиСЗВ6.Колонки.Удалить(ЭлементыФормы.ПачкиСЗВ6.Колонки.УплаченоСтраховая);
		ЭлементыФормы.КоманднаяПанельПачки.Кнопки.Действие.Кнопки.Удалить(ЭлементыФормы.КоманднаяПанельПачки.Кнопки.Действие.Кнопки.ПринятыеВПФРКомплекты);
		ЭлементыФормы.ПачкиДокументов.Колонки.Удалить(ЭлементыФормы.ПачкиДокументов.Колонки.ОтчетныйПериод);
		ЭлементыФормы.ПанельКнопкиРаспределить.Свертка = РежимСверткиЭлементаУправления.Лево;
		ЭлементыФормы.КоманднаяПанельФизлицаПачек.Кнопки.Удалить(ЭлементыФормы.КоманднаяПанельФизлицаПачек.Кнопки.ПрокомментироватьРаспределениеВзносов);
		ЭлементыФормы.КоманднаяПанельПачкиСПВ.Кнопки.Удалить(ЭлементыФормы.КоманднаяПанельПачкиСПВ.Кнопки.ПринятоВПФР);
		ЭлементыФормы.КоманднаяПанельПачкиСПВ.Кнопки.Удалить(ЭлементыФормы.КоманднаяПанельПачкиСПВ.Кнопки.ПометитьНаУдаление);
		ЭлементыФормы.ПачкиСПВ.Колонки.Удалить(ЭлементыФормы.ПачкиСПВ.Колонки.КолонкаНакопительная);
		ЭлементыФормы.ПачкиСПВ.Колонки.Удалить(ЭлементыФормы.ПачкиСПВ.Колонки.КолонкаСтраховая);
		ЭлементыФормы.ПачкиСПВ.Колонки.Удалить(ЭлементыФормы.ПачкиСПВ.Колонки.НачисленоНакопительная);
		ЭлементыФормы.ПачкиСПВ.Колонки.Удалить(ЭлементыФормы.ПачкиСПВ.Колонки.НачисленоСтраховая);
		ЭлементыФормы.ПачкиСПВ.Колонки.Удалить(ЭлементыФормы.ПачкиСПВ.Колонки.УплаченоНакопительная);
		ЭлементыФормы.ПачкиСПВ.Колонки.Удалить(ЭлементыФормы.ПачкиСПВ.Колонки.УплаченоСтраховая);
		ЭлементыФормы.ПанельКнопкиРаспределить1.Свертка = РежимСверткиЭлементаУправления.Лево;
		ЭлементыФормы.ТипСведенийСЗВ6.Видимость = Ложь;
	КонецЕсли;
	
	ЭлементыФормы.НадписьСостояниеПачекДокументов1.Видимость = ПоказыватьСуммыВзносов;
	ЭлементыФормы.ПолеКартинкиСостояниеПачекДокументов1.Видимость = ПоказыватьСуммыВзносов;
	ЭлементыФормы.Печать.Видимость = ПоказыватьСуммыВзносов;
	ЭлементыФормы.ПоказатьФайл.Видимость = ПоказыватьСуммыВзносов;
	ЭлементыФормы.НаДиск.Видимость = ПоказыватьСуммыВзносов;
	ЭлементыФормы.Проверить1.Видимость = ПоказыватьСуммыВзносов;
	ЭлементыФормы.Проверить2.Видимость = ПоказыватьСуммыВзносов;
	ЭлементыФормы.Проверить3.Видимость = ПоказыватьСуммыВзносов;
	ЭлементыФормы.Печать1.Видимость = ПоказыватьСуммыВзносов;
	ЭлементыФормы.Печать2.Видимость = ПоказыватьСуммыВзносов;
	ЭлементыФормы.Печать3.Видимость = ПоказыватьСуммыВзносов;
	ЭлементыФормы.ПоказатьФайл1.Видимость = ПоказыватьСуммыВзносов;
	ЭлементыФормы.ПоказатьФайл2.Видимость = ПоказыватьСуммыВзносов;
	ЭлементыФормы.ПоказатьФайл3.Видимость = ПоказыватьСуммыВзносов;
	ЭлементыФормы.НаДиск1.Видимость = ПоказыватьСуммыВзносов;
	ЭлементыФормы.НаДиск2.Видимость = ПоказыватьСуммыВзносов;
	ЭлементыФормы.НаДиск3.Видимость = ПоказыватьСуммыВзносов;
	
	ЭлементыФормы.ПанельВзносыПоСотруднику.Свертка = ?(ПоказыватьСуммыВзносов, РежимСверткиЭлементаУправления.Нет, РежимСверткиЭлементаУправления.Верх); 
	ЭлементыФормы.ПанельВзносыПоСотруднику1.Свертка = ?(ПоказыватьСуммыВзносов, РежимСверткиЭлементаУправления.Нет, РежимСверткиЭлементаУправления.Верх); 
			
	ТекущаяОрганизация = Организация;
	ТекущийОтчетныйПериод = ОтчетныйПериод;
	ПредыдущееЗначениеОтчетныйПериод = ОтчетныйПериод;
	ПредыдущееЗначениеОтчетныйГод = ОтчетныйГод;
	ТекущийТипСведений = ТипСведений;
	
	ПоказыватьЛетчиков = Истина;
	ЭлементыФормы.СведенияОЗадолженности.Колонки.ДополнительныйТариф.Видимость = ПоказыватьЛетчиков;
	
	ЗаписиОСтаже.Отбор.ОтчетныйПериод.Значение				= ОтчетныйПериод;
	ЗаписиОСтаже.Отбор.ОбособленноеПодразделение.Значение	= Организация;
	ЗаписиОСтаже.Отбор.КатегорияЗастрахованныхЛиц.Значение	= КатегорияЗастрахованныхЛиц;
	ЭлементыФормы.КатегорияЗастрахованныхЛиц.ДоступныеЗначения = ПроцедурыПерсонифицированногоУчета.КатегорииЗастрахованныхЛицОрганизации(Организация, ОбщегоНазначения.ГоловнаяОрганизация(Организация), ОтчетныйПериод);
	ЭлементыФормы.КатегорияЗастрахованныхЛиц1.ДоступныеЗначения = ЭлементыФормы.КатегорияЗастрахованныхЛиц.ДоступныеЗначения;
	ЭлементыФормы.КатегорияЗастрахованныхЛиц2.ДоступныеЗначения = ПроцедурыПерсонифицированногоУчета.КатегорииЗастрахованныхЛицОрганизации(Организация, ОбщегоНазначения.ГоловнаяОрганизация(Организация), Дата(ОтчетныйГод,1,1), КонецГода(Дата(ОтчетныйГод,1,1)));
	
	УстановитьЗаголовкиОрганизацийВФорме();
	
КонецПроцедуры

Процедура ОбновлениеОтображения()
	
	ОбновитьНадписьСостоянияПодготовкиДокументов();
	
	Если ТипСведений <> Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
		ЭлементыФормы.КнопкаСформировать.Доступность = Истина;
		Возврат;
	КонецЕсли;
	
	Если ПоказыватьСуммыВзносов Тогда
		ОбновитьНадписьСостоянияПачекДокументов();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	ВыполнитьСохранениеДанныхФизлица();
	
	Отказ = Ложь;
	СохранитьДокументы(Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	СохранитьЗначение("Организация", Организация);
	СохранитьЗначение("ТипСведений", ТипСведений);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

СерыйЦвет = Новый Цвет(180, 180, 180);

МассивСообщений = Новый Массив;
ФлагВыполнятьСохранениеФизЛица = Истина;
ФлагВыполнятьСохранениеСведенийПринятыхВПФР = Ложь;

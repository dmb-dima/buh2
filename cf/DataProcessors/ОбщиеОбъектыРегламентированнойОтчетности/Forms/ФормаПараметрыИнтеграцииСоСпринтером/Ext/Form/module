
Процедура ОсновныеДействияФормыКнопкаОК(Кнопка)
	
	ОшибкаПроверки = Ложь;
	СообщениеОбОшибке = "";
	
	Если СтрДлина(СокрЛП(КодАбонента)) <> 7 Тогда
		СообщениеОбОшибке = СообщениеОбОшибке + "Недопустимый логин!" + Символы.ПС;
		ОшибкаПроверки = Истина;
	КонецЕсли;
	
	Если СтрДлина(КаталогОтправкиДанныхОтчетности) = 0 Тогда
		СообщениеОбОшибке = СообщениеОбОшибке + "Указан несуществующий каталог для отправки данных отчетности!" + Символы.ПС;
		ОшибкаПроверки = Истина;
	Иначе
		ОбъектКаталогОтправкиДанныхОтчетности = Новый Файл(КаталогОтправкиДанныхОтчетности);
		Если НЕ ОбъектКаталогОтправкиДанныхОтчетности.Существует() Тогда
			СообщениеОбОшибке = СообщениеОбОшибке + "Указан несуществующий каталог для отправки данных отчетности!" + Символы.ПС;
			ОшибкаПроверки = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если СтрДлина(КаталогПрограммыЭлектроннойПочты) = 0 Тогда
		СообщениеОбОшибке = СообщениеОбОшибке + "Указан несуществующий каталог программы электронной почты!" + Символы.ПС;
		ОшибкаПроверки = Истина;
	Иначе
		ОбъектКаталогПрограммыЭлектроннойПочты = Новый Файл(КаталогПрограммыЭлектроннойПочты);
		Если НЕ ОбъектКаталогПрограммыЭлектроннойПочты.Существует() Тогда
			СообщениеОбОшибке = СообщениеОбОшибке + "Указан несуществующий каталог программы электронной почты!" + Символы.ПС;
			ОшибкаПроверки = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если ОшибкаПроверки Тогда
		Предупреждение(СообщениеОбОшибке);
		Возврат;
	КонецЕсли;
	
	ВладелецФормы.ОбменКодАбонента = КодАбонента;
	ВладелецФормы.ОбменКаталогПрограммыЭлектроннойПочты = КаталогПрограммыЭлектроннойПочты;
	ВладелецФормы.ОбменКаталогОтправкиДанныхОтчетности = КаталогОтправкиДанныхОтчетности;
	ВладелецФормы.Модифицированность = Истина;
	Закрыть();
	
КонецПроцедуры

Процедура КаталогНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	Диалог.Каталог = Элемент.Значение;
	Диалог.Заголовок = "Выберите каталог";
	Если Диалог.Выбрать() Тогда
		Элемент.Значение = Диалог.Каталог + ?(Прав(Диалог.Каталог, 1) = "\", "", "\");
		Если Элемент.Имя = "КаталогПрограммыЭлектроннойПочты" Тогда
			Если СтрДлина(СокрЛП(КодАбонента)) = 7 И ЗначениеЗаполнено(КаталогПрограммыЭлектроннойПочты) Тогда
				ПредполагаемыйКаталогОтправкиДанныхОтчетности = КаталогПрограммыЭлектроннойПочты + "EXPT" + Лев(КодАбонента, 4) + "." + Прав(КодАбонента, 3) + "\";
				ОбъектПредполагаемыйКаталогОтправкиДанныхОтчетности = Новый Файл(ПредполагаемыйКаталогОтправкиДанныхОтчетности);
				Если ОбъектПредполагаемыйКаталогОтправкиДанныхОтчетности.Существует() Тогда
					КаталогОтправкиДанныхОтчетности = ПредполагаемыйКаталогОтправкиДанныхОтчетности;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура КаталогОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ЗначениеЗаполнено(Элемент.Значение) Тогда
		ЗапуститьПриложение("explorer " + Элемент.Значение);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОсновныеДействияФормыКнопкаПрочитатьСКлючевойДискеты(Кнопка)
	
	СтатусОшибки = Ложь;
	
	Текст = Новый ТекстовыйДокумент;
	Попытка
		Текст.Прочитать("A:\sprinter.ini");
	Исключение
		Попытка
			Текст.Прочитать("B:\sprinter.ini");
		Исключение
			Предупреждение("Не удалось прочитать информацию с настроечной дискеты. Проверьте наличие дискеты в дисководе!");
			Возврат;
		КонецПопытки;
	КонецПопытки;
	
	ТаблицаПараметров = Новый Массив;
	Параметры = Новый Структура("INN, IMNSCode, Name, FullName, AbonentCode");
	Для Сч = 1 По Текст.КоличествоСтрок() Цикл
		ТекСтр = Текст.ПолучитьСтроку(Сч);
		Для Каждого Парам Из Параметры Цикл
			Если Парам.Ключ = Лев(ТекСтр, СтрДлина(Парам.Ключ)) Тогда
				Если Парам.Ключ = "INN" Тогда
					ТекСтруктура = РегламентированнаяОтчетность.СкопированнаяСтруктура(Параметры);
					ТаблицаПараметров.Добавить(ТекСтруктура);
				КонецЕсли;
				ТекСтруктура.Вставить(Парам.Ключ, Сред(ТекСтр, Найти(ТекСтр, "=") + 1));
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Параметры = Неопределено;
	ИННВладельцаФормы = СокрЛП(ВладелецФормы.ИНН);
	Для Каждого Парам Из ТаблицаПараметров Цикл
		Если Лев(СокрЛП(Парам.INN), СтрДлина(ИННВладельцаФормы)) = ИННВладельцаФормы Тогда
			Параметры = Парам;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если Параметры = Неопределено Тогда
		Предупреждение("На дискете не обнаружена информация о фирме с ИНН " + ВладелецФормы.ИНН + "!");
		Возврат;
	КонецЕсли;
	
	ИННСДискеты = Параметры.INN;
	КодИМНССДискеты = Параметры.IMNSCode;
	НаименованиеСДискеты = Параметры.Name;
	НаименованиеПолноеСДискеты = Параметры.FullName;
	КодАбонентаСДискеты = Параметры.AbonentCode;
	
	НЕСовпадаетИНН = Ложь;
	НеСовпадаетКодИМНС = Ложь;
	НеСовпадаетНаименование = Ложь;
	НеСовпадаетНаименованиеПолное = Ложь;
	
	Если Лев(СокрЛП(ИННСДискеты), СтрДлина(ИННВладельцаФормы)) <> ИННВладельцаФормы Тогда
		НЕСовпадаетИНН = Истина;
	КонецЕсли;
		
	Если КодИМНССДискеты <> ВладелецФормы.КодИМНС Тогда
		НеСовпадаетКодИМНС = Истина;
	КонецЕсли;
			
	Если СокрЛП(НаименованиеСДискеты) <> СокрЛП(ВладелецФормы.Наименование) Тогда
		НеСовпадаетНаименование	= Истина;
	КонецЕсли;
	
	Если СокрЛП(НаименованиеПолноеСДискеты) <> СокрЛП(ВладелецФормы.НаименованиеПолное) Тогда
		НеСовпадаетНаименованиеПолное = Истина;
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(ВладелецФормы.КодИМНС) И НеСовпадаетКодИМНС Тогда
		Если Вопрос("Не совпадают коды ИФНС: в справочнике - " + ВладелецФормы.КодИМНС + ", на дискете - " + КодИМНССДискеты + ".
					|Возможно, вставлена неверная настроечная дискета!
					|Продолжить?", РежимДиалогаВопрос.ДаНет) <> КодВозвратаДиалога.Да Тогда
			
			СтатусОшибки = Истина;
			
		КонецЕсли;
	КонецЕсли;
	
	Если СтатусОшибки Тогда
		Возврат;		
	КонецЕсли;
	
	КодАбонента = Формат(Число(КодИМНССДискеты), "ЧЦ=4; ЧВН=; ЧГ=") + КодАбонентаСДискеты;
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	КодАбонента = ВладелецФормы.ОбменКодАбонента;
	КаталогОтправкиДанныхОтчетности = ВладелецФормы.ОбменКаталогОтправкиДанныхОтчетности;
	КаталогПрограммыЭлектроннойПочты = ВладелецФормы.ОбменКаталогПрограммыЭлектроннойПочты;
	
КонецПроцедуры

Процедура КаталогОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

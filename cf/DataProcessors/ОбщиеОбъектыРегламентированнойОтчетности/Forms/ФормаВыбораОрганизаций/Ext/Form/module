Перем ВыбранныеОрганизации;

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

	ВыбранныеОрганизации = Новый СписокЗначений;
	Если ТипЗнч(ЭтаФорма.НачальноеЗначениеВыбора) <> Тип("Структура") Тогда
		ВыбранныеОрганизации.ЗагрузитьЗначения(ВладелецФормы.Организация.ВыгрузитьЗначения());
		// Удалим кнопку "Подчиненные".
		Кн = ЭлементыФормы.КоманднаяПанельОрганизации.Кнопки.Найти("Подчиненные");
		Если Кн <> Неопределено Тогда
			ЭлементыФормы.КоманднаяПанельОрганизации.Кнопки.Удалить(Кн);
		КонецЕсли;
	Иначе
		// Удалим кнопку "Отбор по значению в текущей колонке".
		Кн = ЭлементыФормы.КоманднаяПанельОрганизации.Кнопки.Найти("Действие2");
		Если Кн <> Неопределено Тогда
			ЭлементыФормы.КоманднаяПанельОрганизации.Кнопки.Удалить(Кн);
		КонецЕсли;

		// Установим отбор, что не попадала основная организация.
		ВыбранныеОрганизации.ЗагрузитьЗначения(ВладелецФормы.мГруппаОрганизаций.ВыгрузитьЗначения());

		Если ЗначениеЗаполнено(НачальноеЗначениеВыбора.ОрганизацияОсн.ГоловнаяОрганизация) Тогда
			// Переданная организация является обособленным подразделением.
			// ЭлементыФормы.КоманднаяПанельОрганизации.Кнопки.Подчиненные.Доступность = Ложь;
			// Удалим кнопку, т.к. организация является обособленным подразделением.
			Кн = ЭлементыФормы.КоманднаяПанельОрганизации.Кнопки.Найти("Подчиненные");
			Если Кн <> Неопределено Тогда
				ЭлементыФормы.КоманднаяПанельОрганизации.Кнопки.Удалить(Кн);
			КонецЕсли;

		КонецЕсли;

		// Если реквизит "ГоловнаяОрганизация" в справочнике Организаций не заполнен, значит отображаем все записи справочника
		// и кнопку фильтра делаем не доступной для нажатия.
		ТолькоОбособленныеОрганизации = Ложь;
		// В случае, если старый флаг ФильтрОбособ не был возведен или если форма отчета не скопирована по F9, тогда анализируем
		// наличие обособленных подразделений у организации.
		Если ВладелецФормы.мФильтрОбособ = Неопределено Тогда
			// Если в списке выбранных организаций ничего нет, тогда анализируем наличие обособленных подразделений.
			Если (ВладелецФормы.мГруппаОрганизаций.Количество() = 0) Тогда
				Если НЕ ЗначениеЗаполнено(НачальноеЗначениеВыбора.ОрганизацияОсн.ГоловнаяОрганизация) Тогда
					СписокОбособленныхПодразделений = ОбщегоНазначения.ПолучитьСписокОбособленныхПодразделенийОрганизации(НачальноеЗначениеВыбора.ОрганизацияОсн);
					Если СписокОбособленныхПодразделений.Количество() = 0 Тогда
						// У организации нет обособленных подразделений. Кнопка фильтра делаем не доступной.
						ТолькоОбособленныеОрганизации = Ложь;
					Иначе
						ТолькоОбособленныеОрганизации = Истина;
					КонецЕсли;
					ЭлементыФормы.КоманднаяПанельОрганизации.Кнопки.Подчиненные.Пометка = ТолькоОбособленныеОрганизации;
					ВладелецФормы.мФильтрОбособ = ТолькоОбособленныеОрганизации;
				КонецЕсли;
			КонецЕсли;
		Иначе
			ТолькоОбособленныеОрганизации = ВладелецФормы.мФильтрОбособ;
			ЭлементыФормы.КоманднаяПанельОрганизации.Кнопки.Подчиненные.Пометка = ТолькоОбособленныеОрганизации;
		КонецЕсли;

		Организации.Отбор.Ссылка.ВидСравнения = ВидСравнения.ВСписке;
		Организации.Отбор.Ссылка.Значение = СписокДоступныхОрганизаций(ТолькоОбособленныеОрганизации);
		Организации.Отбор.Ссылка.Использование = Истина;

	КонецЕсли;

	ИДКонфигурации = РегламентированнаяОтчетность.ИДКонфигурации(); 
	Если ИДКонфигурации = "БП" ИЛИ ИДКонфигурации = "БАУ" Тогда
		// Удалим кнопку "Подчиненные".
		Кн = ЭлементыФормы.КоманднаяПанельОрганизации.Кнопки.Найти("Подчиненные");
		Если Кн <> Неопределено Тогда
			ЭлементыФормы.КоманднаяПанельОрганизации.Кнопки.Удалить(Кн);
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

Процедура ОсновныеДействияФормыОК(Кнопка)
	
	ВыбранныеОрганизации.СортироватьПоЗначению();
	Если ТипЗнч(ЭтаФорма.НачальноеЗначениеВыбора) <> Тип("Структура") Тогда
		ВладелецФормы.Организация = ВыбранныеОрганизации;
		ВладелецФормы.УстановитьОтборы();
	Иначе
		ВладелецФормы.мГруппаОрганизаций = ВыбранныеОрганизации;
	КонецЕсли;
	Закрыть();

КонецПроцедуры

Процедура ОрганизацииПриИзмененииФлажка(Элемент, Колонка)
	
	Если Колонка.Имя = "Пометка" Тогда
		Если Элемент.ТекущаяСтрока = Неопределено Тогда
			Возврат;
		КонецЕсли;
		Если ВыбранныеОрганизации.НайтиПоЗначению(Элемент.ТекущиеДанные.Ссылка) = Неопределено Тогда
			ВыбранныеОрганизации.Добавить(Элемент.ТекущиеДанные.Ссылка);
		Иначе
			ВыбранныеОрганизации.Удалить(ВыбранныеОрганизации.НайтиПоЗначению(Элемент.ТекущиеДанные.Ссылка));
		КонецЕсли;
		Элемент.ОбновитьСтроки(Элемент.ТекущаяСтрока);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОрганизацииПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = (Элемент.ТекущаяКолонка.Имя = "Пометка");
	
КонецПроцедуры

Процедура ОрганизацииПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		ОформлениеСтроки.Ячейки.Пометка.ОтображатьФлажок = Истина;
		ОформлениеСтроки.Ячейки.Пометка.Флажок = (ВыбранныеОрганизации.НайтиПоЗначению(ОформлениеСтроки.ДанныеСтроки.Ссылка) <> Неопределено);
	КонецЦикла;
	
КонецПроцедуры

Процедура КоманднаяПанельОрганизацииУстановитьФлажки(Кнопка)
	
	ВидимыеОрганизации = ВидимыйНаборОрганизаций();
	Для Каждого Отч Из ВидимыеОрганизации Цикл
		Если ВыбранныеОрганизации.НайтиПоЗначению(Отч.Значение) = Неопределено Тогда
			ВыбранныеОрганизации.Добавить(Отч.Значение);
		КонецЕсли;
	КонецЦикла;
	ЭлементыФормы.Организации.ОбновитьСтроки();
	
КонецПроцедуры

Процедура КоманднаяПанельОрганизацииСнятьФлажки(Кнопка)
	
	ВидимыеОрганизации = ВидимыйНаборОрганизаций();
	КоличествоВыбранныхОтчетов = ВыбранныеОрганизации.Количество();
	Для Инд = 1 По КоличествоВыбранныхОтчетов Цикл
		ТекОтч = ВидимыеОрганизации.Получить(КоличествоВыбранныхОтчетов - Инд).Значение;
		Если ВидимыеОрганизации.НайтиПоЗначению(ТекОтч) <> Неопределено Тогда
			ВыбранныеОрганизации.Удалить(КоличествоВыбранныхОтчетов - Инд);
		КонецЕсли;
	КонецЦикла;
	ЭлементыФормы.Организации.ОбновитьСтроки();
	
КонецПроцедуры

Функция ВидимыйНаборОрганизаций()

	Если ТипЗнч(ЭтаФорма.НачальноеЗначениеВыбора) <> Тип("Структура") Тогда

		ОтборСтрок = Организации.Отбор; 
		ПостроительЗапроса = Новый ПостроительЗапроса; 
		ПостроительЗапроса.ИсточникДанных = Новый ОписаниеИсточникаДанных(Организации); 

		Для Каждого ЭлементОтбора Из ОтборСтрок Цикл 
			Если ЭлементОтбора.Использование Тогда 
				НовыйОтбор = ПостроительЗапроса.Отбор.Добавить(ЭлементОтбора.Имя); 
				НовыйОтбор.Использование = Ложь; 
				НовыйОтбор.ВидСравнения = ЭлементОтбора.ВидСравнения;
				НовыйОтбор.Значение = ЭлементОтбора.Значение; 
				НовыйОтбор.Значение = ЭлементОтбора.ЗначениеС; 
				НовыйОтбор.Значение = ЭлементОтбора.ЗначениеПо; 
				НовыйОтбор.Использование = Истина; 
			КонецЕсли; 
		КонецЦикла; 

		
		СписокОрганизаций = Новый СписокЗначений;
		СписокОрганизаций.ЗагрузитьЗначения(ПостроительЗапроса.Результат.Выгрузить(ОбходРезультатаЗапроса.Прямой).ВыгрузитьКолонку("Ссылка"));
	Иначе
		Кн = ЭлементыФормы.КоманднаяПанельОрганизации.Кнопки.Найти("Подчиненные");
		Если Кн <> Неопределено Тогда
			СписокОрганизаций = СписокДоступныхОрганизаций(ЭлементыФормы.КоманднаяПанельОрганизации.Кнопки.Подчиненные.Пометка);
		Иначе
			СписокОрганизаций = СписокДоступныхОрганизаций();
		КонецЕсли;
	КонецЕсли;

	Возврат СписокОрганизаций;

КонецФункции

Процедура ОрганизацииВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;

	Если ТипЗнч(ЭтаФорма.НачальноеЗначениеВыбора) <> Тип("Структура") Тогда
		ВладелецФормы.Организация.Очистить();
		ВладелецФормы.Организация.Добавить(ВыбраннаяСтрока.Ссылка);
		ВладелецФормы.УстановитьОтборы();
	Иначе
		ВладелецФормы.мГруппаОрганизаций.Очистить();
		ВладелецФормы.мГруппаОрганизаций.Добавить(ВыбраннаяСтрока.Ссылка);
	КонецЕсли;

	Закрыть();

КонецПроцедуры

Процедура КоманднаяПанельОрганизацииПодчиненные(Кнопка)
	ТолькоОбособленныеОрганизации = НЕ ЭлементыФормы.КоманднаяПанельОрганизации.Кнопки.Подчиненные.Пометка;
	ВладелецФормы.мФильтрОбособ = ТолькоОбособленныеОрганизации;
	ЭлементыФормы.КоманднаяПанельОрганизации.Кнопки.Подчиненные.Пометка = ТолькоОбособленныеОрганизации;
	Организации.Отбор.Ссылка.Значение = СписокДоступныхОрганизаций(ТолькоОбособленныеОрганизации); // НачальноеЗначениеВыбора.ОрганизацияОсн;
	Организации.Отбор.Ссылка.Использование = Истина;
	Организации.Отбор.Ссылка.ВидСравнения = ВидСравнения.ВСписке;
	ВидимыеОрганизации = ВидимыйНаборОрганизаций();
	ВыбОргСтар = ВыбранныеОрганизации.Скопировать();
	ВыбранныеОрганизации.Очистить();
	Для каждого Орг Из ВидимыеОрганизации Цикл
		Если ВыбОргСтар.НайтиПоЗначению(Орг.Значение) <> Неопределено Тогда
			ВыбранныеОрганизации.Добавить(Орг.Значение);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

// СписокДоступныхОрганизаций
//
Функция СписокДоступныхОрганизаций(ВыбратьПодразделения = Ложь)

	Если ВыбратьПодразделения Тогда
		Подразделение = " И Организации.ГоловнаяОрганизация = &ГоловнаяОрг";
	КонецЕсли;

	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                      |	Организации.Ссылка
	                      |ИЗ
	                      |	Справочник.Организации КАК Организации
	                      |Где
	                      |	Организации.ЮрФизЛицо = &ЮрЛицо
	                      |	И Организации.Ссылка <> &Орг" + ?(ВыбратьПодразделения, Подразделение, "") + "
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Организации.Наименование");

	Запрос.УстановитьПараметр("Орг", НачальноеЗначениеВыбора.ОрганизацияОсн);
	Запрос.УстановитьПараметр("ГоловнаяОрг", НачальноеЗначениеВыбора.ОрганизацияОсн);
	Запрос.УстановитьПараметр("ЮрЛицо", Перечисления.ЮрФизЛицо.ЮрЛицо);

	СписокОрганизаций = Новый СписокЗначений;
	СписокОрганизаций.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.Прямой).ВыгрузитьКолонку("Ссылка"));
	Возврат СписокОрганизаций;

КонецФункции // СписокДоступныхОрганизаций


Перем мЗадаватьВопросПриЗакрытии;

Функция СохранитьНастройки()
	
	ВладелецФормы.мОтображатьПустые = ПоказыватьПустыеДокументыВыгрузки;
	ВладелецФормы.мФильтроватьВидыОтчетовПоПериоду = ФильтроватьВидыОтчетовПоПериоду;
	ВладелецФормы.мПроверятьСоотношенияПриПечатиИВыгрузки = ПроверятьСоотношенияПриПечатиИВыгрузки;
	СохранитьЗначение("ИнтервалАвтосохраненияРегламентированнойОтчетности", ?(ФлажокАвтосохранение, ИнтервалАвтосохранения, 0));
	СохранитьЗначение("ИнтервалНапоминанийРегламентированнойОтчетности", ИнтервалНапоминаний);
	ВладелецФормы.мНеОтображатьНапоминания = НеОтображатьНапоминания;
	ВладелецФормы.мЗапоминатьВыбранныйПериод = ЗапоминатьВыбранныйПериод;
	
	Возврат Истина;
	
КонецФункции

Процедура ОсновныеДействияФормыОК(Кнопка)
	
	Если НЕ СохранитьНастройки() Тогда
		Возврат;
	КонецЕсли;
	
	мЗадаватьВопросПриЗакрытии = Ложь;
	Закрыть(Истина);
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ИнтервалАвтосохранения = РегламентированнаяОтчетность.ЗначениеИнтервалаАвтосохраненияРегламентированнойОтчетности();
	Если ИнтервалАвтосохранения = 0 Тогда
		ФлажокАвтосохранение = Ложь;
		ЭлементыФормы.ИнтервалАвтосохранения.Доступность = Ложь;
	КонецЕсли;
	ФлажокАвтосохранение = (ИнтервалАвтосохранения <> 0);
	Если ИнтервалАвтосохранения = 0 Тогда
		ИнтервалАвтосохранения = 10;
	КонецЕсли;
	
	ПоказыватьПустыеДокументыВыгрузки = ВладелецФормы.мОтображатьПустые;
	ФильтроватьВидыОтчетовПоПериоду = ВладелецФормы.мФильтроватьВидыОтчетовПоПериоду;
	ПроверятьСоотношенияПриПечатиИВыгрузки = ВладелецФормы.мПроверятьСоотношенияПриПечатиИВыгрузки;
	НеОтображатьНапоминания = ВладелецФормы.мНеОтображатьНапоминания;
	ЗапоминатьВыбранныйПериод = ВладелецФормы.мЗапоминатьВыбранныйПериод;
	
	ИнтервалНапоминаний = РегламентированнаяОтчетность.ЗначениеИнтервалаНапоминанийРегламентированнойОтчетности();
	Если ИнтервалНапоминаний = 0 Тогда
		ФлажокНапоминатьЗа = Ложь;
		ЭлементыФормы.ИнтервалНапоминаний.Доступность = Ложь;
	КонецЕсли;
	ФлажокНапоминатьЗа = (ИнтервалНапоминаний <> 0);
	Если ИнтервалНапоминаний = 0 Тогда
		ИнтервалНапоминаний = 5;
	КонецЕсли;
	
	УправлениеЭУПанельУстановкаКомпонентыПечати();
	УправлениеЭУ();
	
КонецПроцедуры

Процедура УправлениеЭУПанельУстановкаКомпонентыПечати()
	
	Если РегламентированнаяОтчетность.КомпонентаПечатиМашиночитаемыхФормДоступна() Тогда
		ЭлементыФормы.ПанельУстановкаКомпонентыПечати.ТекущаяСтраница = ЭлементыФормы.ПанельУстановкаКомпонентыПечати.Страницы.Переустановить;
	Иначе
		ЭлементыФормы.ПанельУстановкаКомпонентыПечати.ТекущаяСтраница = ЭлементыФормы.ПанельУстановкаКомпонентыПечати.Страницы.Установить;
	КонецЕсли;
	
КонецПроцедуры

// Процедура регулирует доступность элементов формы в зависимости от
// значения флажка ФлажокАвтосохранение.
//
// Параметры:
//	Нет.
//
Процедура УправлениеЭУ()
	
	// прорисовка ЭУ настроек автосохранения
	ЭлементыФормы.ИнтервалАвтосохранения.Доступность = ФлажокАвтосохранение;
	ЭлементыФормы.НадписьМинут.Доступность = ФлажокАвтосохранение;
	
	ЭлементыФормы.ПанельФункциональностьДокументооборотаСФНСВнешняя.Видимость = (КонтекстЭДО <> Неопределено);
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Модифицированность И мЗадаватьВопросПриЗакрытии Тогда
		Ответ = Вопрос("Сохранить настройки?", РежимДиалогаВопрос.ДаНетОтмена);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			Если НЕ СохранитьНастройки() Тогда
				Отказ = Истина;
				Возврат;
			КонецЕсли;
			мЗадаватьВопросПриЗакрытии = Ложь;
			Закрыть(Истина);
		ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		Иначе
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обарботчик события ПриИзменении флажка ФлажокАвтосохранение.
//
Процедура ФлажокАвтосохранениеПриИзменении(Элемент)
	
	УправлениеЭУ();
	
КонецПроцедуры

Процедура НадписьЗдесьНажатие(Элемент)
	
	РегистрыСведений.ШаблоныПечатиМашиночитаемыхФорм.ПолучитьФормуСписка().Открыть();
	
КонецПроцедуры

Процедура НадписьЗдесьУстановкаКомпонентыНажатие(Элемент)
	
	РегламентированнаяОтчетность.УстановитьКомпонентуПечатиМашиночитаемыхФорм(Ложь);
	УправлениеЭУПанельУстановкаКомпонентыПечати();
	
КонецПроцедуры

Процедура НадписьЗдесьНастройкиМеханизмаОнлайнСервисовРОНажатие(Элемент)
	
	РегламентированнаяОтчетность.ПоказатьФормуНастроекМеханизмаОнлайнСервисовРО();
	
КонецПроцедуры

Процедура НадписьЗдесьНастройкиДокументооборотаСФНСНажатие(Элемент)
	
	РегламентированнаяОтчетность.ПоказатьФормуНастроекМеханизмаДокументооборотаСФНС();
	
КонецПроцедуры

мЗадаватьВопросПриЗакрытии = Истина;

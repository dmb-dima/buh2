Перем ИзменениеОбщихНастроекРазрешено;
Перем мПрограммноеЗакрытие;

Процедура УправлениеЭУ()
	
	ЭлементыФормы.ФлажокМеханизмВключен.Доступность					= ИзменениеОбщихНастроекРазрешено;
	ЭлементыФормы.ФлажокУведомлятьОбОшибках.Доступность				= ИзменениеОбщихНастроекРазрешено И МеханизмВключен;
	
	ЭлементыФормы.ФлажокИспользоватьАвторизациюПрокси.Доступность	= РазрешитьОбновлениеИнформацииИзИнтернет;
	ЭлементыФормы.ПанельПараметрыАвторизации.Доступность			= РазрешитьОбновлениеИнформацииИзИнтернет И ИспользоватьАвторизациюПрокси;
	ЭлементыФормы.КнопкаПроверитьИнтернет.Доступность				= РазрешитьОбновлениеИнформацииИзИнтернет;
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ВосстановитьНастройки();
	
	ИзменениеОбщихНастроекРазрешено =	(Метаданные.Роли.Найти("ПолныеПрава") <> Неопределено И РольДоступна("ПолныеПрава"))
									ИЛИ (Метаданные.Роли.Найти("ПравоГлавногоБухгалтера") <> Неопределено И РольДоступна("ПравоГлавногоБухгалтера"));
	
	УправлениеЭУ();
	
КонецПроцедуры

Процедура ВосстановитьНастройки()
	
	НастройкиМеханизма = ПолучитьНастройкиМеханизмаОнлайнСервисовРО();
	
	МеханизмВключен = НастройкиМеханизма.Использовать;
	УведомлятьОбОшибках = НастройкиМеханизма.УведомлятьОбОшибках;
	
	РазрешитьОбновлениеИнформацииИзИнтернет = (НастройкиМеханизма.РазрешитьДоступВИнтернет = Истина);
	ИспользоватьАвторизациюПрокси = (НастройкиМеханизма.ИспользоватьПрокси = Истина);
	ИмяПользователяПрокси = НастройкиМеханизма.ИмяПользователяПрокси;
	ПарольПользователяПрокси = НастройкиМеханизма.ПарольПрокси;
	
КонецПроцедуры

Процедура ФлажокМеханизмВключенПриИзменении(Элемент)
	
	УправлениеЭУ();
	
КонецПроцедуры

Процедура ФлажокОбновлятьИзИнтернетПриИзменении(Элемент)
	
	УправлениеЭУ();
	
КонецПроцедуры

Процедура ИспользоватьАвторизациюПроксиПриИзменении(Элемент)
	
	УправлениеЭУ();
	
КонецПроцедуры

Процедура ОсновныеДействияФормыОК(Кнопка)
	
	мПрограммноеЗакрытие = Истина;
	Закрыть();
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если мПрограммноеЗакрытие Тогда
		СохранитьНастройки();
	ИначеЕсли Модифицированность Тогда
		Ответ = Вопрос("Настройки были изменены. Сохранить изменения?", РежимДиалогаВопрос.ДаНетОтмена);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			СохранитьНастройки();
		ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура СохранитьНастройки()
	
	// сохраняем общие настройки
	Если ИзменениеОбщихНастроекРазрешено Тогда
		СохранитьОбщиеНастройкиМеханизмаОнлайнСервисовРО(МеханизмВключен, УведомлятьОбОшибках);
	КонецЕсли;
	
	// сохраняем индивидуальные настройки
	СохранитьИндивидуальныеНастройкиМеханизмаОнлайнСервисовРО(РазрешитьОбновлениеИнформацииИзИнтернет, ИспользоватьАвторизациюПрокси, ИмяПользователяПрокси, ПарольПользователяПрокси);
	
КонецПроцедуры

Процедура КнопкаПроверитьИнтернетНажатие(Элемент)
	
	ПараметрыИнтернет = Новый Структура("ИспользоватьПрокси, ИмяПользователя, Пароль", ИспользоватьАвторизациюПрокси, ИмяПользователяПрокси, ПарольПользователяПрокси);
	СообщениеОбОшибке = Неопределено;
	
	Соединение = УстановитьСоединениеССерверомМеханизмаОнлайнСервисовРО(ПараметрыИнтернет, СообщениеОбОшибке);
	Если Соединение = Неопределено Тогда
		Предупреждение("Проверка параметров доступа в Интернет прошла неудачно:
						|
						|" + СообщениеОбОшибке);
		Возврат;
	КонецЕсли;
	
	РезультатПолученияФайла = ПолучитьРесурсССервера(Соединение, "infomap.dat", СообщениеОбОшибке);
	Если РезультатПолученияФайла = Неопределено Тогда
		Предупреждение("Проверка параметров доступа в Интернет прошла неудачно:
						|
						|" + СообщениеОбОшибке);
		Возврат;
	КонецЕсли;
	
	Предупреждение("Проверка параметров доступа в Интернет успешно пройдена!");
	
КонецПроцедуры

мПрограммноеЗакрытие = Ложь;

Перем мПрограммноеЗакрытие;

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если ЗапретНаПродолжение Тогда
		ЭлементыФормы.ПанельПродолжить.Свертка = РежимСверткиЭлементаУправления.Низ;
		ЭлементыФормы.ПанельКнопки.ТекущаяСтраница = ЭлементыФормы.ПанельКнопки.Страницы.ЖесткаяБлокировка;
		ЭлементыФормы.КнопкаПроверитьОбновленияЖесткая.КнопкаПоУмолчанию = Истина;
	Иначе
		ЭлементыФормы.КнопкаПродолжить.Доступность = ПродолжитьДействие;
		ЭлементыФормы.ПанельКнопки.ТекущаяСтраница = ЭлементыФормы.ПанельКнопки.Страницы.МягкаяБлокировка;
		ЭлементыФормы.КнопкаПроверитьОбновления.КнопкаПоУмолчанию = Истина;
	КонецЕсли;
	
	ЗаполнитьHTML();
	
КонецПроцедуры

Процедура ПродолжитьДействиеПриИзменении(Элемент)
	
	ЭлементыФормы.КнопкаПродолжить.Доступность = ПродолжитьДействие;
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если НЕ мПрограммноеЗакрытие Тогда
		мПрограммноеЗакрытие = Истина;
		Отказ = Истина;
		Закрыть(Ложь);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьHTML()
	
	// сохраняем картинку во временный файл
	ИмяФайлаКартинки = ПолучитьИмяВременногоФайла(".bmp");
	Если ЗапретНаПродолжение Тогда
		БиблиотекаКартинок.Стоп48.Записать(ИмяФайлаКартинки);
	Иначе
		БиблиотекаКартинок.Внимание48.Записать(ИмяФайлаКартинки);
	КонецЕсли;
	
	// устанавливаем в HTML тексты и ссылку на картинку
	ТекстHTML = ПолучитьМакет("УведомлениеОБлокировкеФормыИЛИФормата").ПолучитьТекст();
	ТекстHTML = СтрЗаменить(ТекстHTML, "ПутьККартинке",		ИмяФайлаКартинки);
	ТекстHTML = СтрЗаменить(ТекстHTML, "ТекстЗаголовок",	СтрЗаменить(ТекстЗаголовок, Символы.ПС, "<BR>"));
	
	ТекстИспользуйте = СформироватьТекстИспользуйте();
	Если ЗначениеЗаполнено(ТекстИспользуйте) Тогда
		ЗаголовокИспользуйте = ?(БлокировкаФормы, "Используйте форму в редакции:", "Используйте формат:");
		ТекстHTML = СтрЗаменить(ТекстHTML, "ЗаголовокИспользуйте",	ЗаголовокИспользуйте);
		ТекстHTML = СтрЗаменить(ТекстHTML, "ТекстИспользуйте",	СтрЗаменить(ТекстИспользуйте, Символы.ПС, "<BR>"));
	Иначе
		ТекстHTML = СтрЗаменить(ТекстHTML, "<STRONG>ЗаголовокИспользуйте</STRONG><BR>",	"");
		ТекстHTML = СтрЗаменить(ТекстHTML, "ТекстИспользуйте<BR>",	"");
		// обход особенностей платформы 8.2
		ТекстHTML = СтрЗаменить(ТекстHTML, "<strong>ЗаголовокИспользуйте</strong><br>",	"");
		ТекстHTML = СтрЗаменить(ТекстHTML, "ТекстИспользуйте<br>",	"");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекстПодробнее) Тогда
		ТекстHTML = СтрЗаменить(ТекстHTML, "ЗаголовокПодробнее", "Дополнительная информация:");
		ТекстHTML = СтрЗаменить(ТекстHTML, "ТекстПодробнее", СтрЗаменить(ТекстПодробнее, Символы.ПС, "<BR>"));
	Иначе
		ТекстHTML = СтрЗаменить(ТекстHTML, "<STRONG>ЗаголовокПодробнее</STRONG><BR>",	"");
		ТекстHTML = СтрЗаменить(ТекстHTML, "ТекстПодробнее<BR>",	"");
		// обход особенностей платформы 8.2
		ТекстHTML = СтрЗаменить(ТекстHTML, "<strong>ЗаголовокПодробнее</strong><br>",	"");
		ТекстHTML = СтрЗаменить(ТекстHTML, "ТекстПодробнее<br>",	"");
	КонецЕсли;
	
	// заменяем
	ЭлементыФормы.ПолеHTMLДокументаСообщение.УстановитьТекст(ТекстHTML);
	
КонецПроцедуры

Функция СформироватьТекстИспользуйте()
	
	Если НЕ ЗначениеЗаполнено(ЗаменяющийДокумент) Тогда
		Возврат "";
	Иначе
		Если ТипЗнч(ЗаменяющийДокумент) <> Тип("Массив") Тогда
			МассивЗаменяющихДокументов = Новый Массив;
			МассивЗаменяющихДокументов.Добавить(ЗаменяющийДокумент);
		Иначе
			МассивЗаменяющихДокументов = ЗаменяющийДокумент;
		КонецЕсли;
		КоличествоЭлементовМассива = МассивЗаменяющихДокументов.Количество();
		Если КоличествоЭлементовМассива = 0 Тогда
			Возврат "";
		ИначеЕсли КоличествоЭлементовМассива = 1 Тогда
			Возврат СокрЛП(МассивЗаменяющихДокументов[0]) + ".<BR>";
		Иначе
			СтрРезультат = "";
			Для Каждого Стр Из ЗаменяющийДокумент Цикл
				СтрРезультат = СтрРезультат + "- " + СокрЛП(Стр) + ";<BR>";
			КонецЦикла;
			СтрРезультат = Лев(СтрРезультат, СтрДлина(СтрРезультат) - 1);
			СтрРезультат = СтрРезультат + ".";
			Возврат СтрРезультат;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Процедура КнопкаЗакрытьНажатие(Элемент)
	
	Закрыть();
	
КонецПроцедуры

Процедура КнопкаСправкаНажатие(Элемент)
	
	ОткрытьСправку(Метаданные());
	
КонецПроцедуры

Процедура КнопкаПродолжитьНажатие(Элемент)
	
	мПрограммноеЗакрытие = Истина;
	Закрыть(Истина);
	
КонецПроцедуры

Процедура КнопкаПроверитьОбновленияНажатие(Элемент)
	
	ОткрытьФормуДоступныхОбновленийРО();
	
КонецПроцедуры

мПрограммноеЗакрытие = Ложь;

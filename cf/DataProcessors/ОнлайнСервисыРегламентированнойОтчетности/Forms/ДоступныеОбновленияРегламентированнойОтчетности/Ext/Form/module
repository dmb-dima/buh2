Перем URLТекущейПрограммы;
Перем URLОбновленияПрограммы;
Перем ДополнительнаяИнформацияОбОбновленииПрограммы;
Перем мОткрытьФормуОбновленияКонфигурацииКонфигурации;
Перем ЦветГиперссылки;

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьДанные(Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьДанные(Отказ)
	
	ИнформацияОбОбновлениях = ПолучитьИнформациюОбОбновленияхТекущегоРелиза();
	Если ИнформацияОбОбновлениях = Неопределено Тогда
		ПредупреждениеОбОтсутствииИнформации(Отказ);
		Возврат;
	КонецЕсли;
	
	ИнформацияОТекущемРелизе = ИнформацияОбОбновлениях.ТекущийРелиз;
	ИнформацияОВнешнихОтчетах = ИнформацияОбОбновлениях.Отчеты;
	ИнформацияОКонфигурациях = ИнформацияОбОбновлениях.Конфигурации;
	
	// заполняем свойства текущего релиза
	ВерсияТекущейПрограммы = СокрЛП(Метаданные.Версия);
	URLТекущейПрограммы = ?(ИнформацияОТекущемРелизе.Свойство("URL"), ИнформацияОТекущемРелизе.URL, Неопределено);
	Если ТипЗнч(URLТекущейПрограммы) = Тип("Строка") Тогда
		URLТекущейПрограммы = СокрЛП(URLТекущейПрограммы);
	КонецЕсли;
	//ЭлементыФормы.НадписьОткрытьWebСтраницу.Видимость = ЗначениеЗаполнено(URLТекущейПрограммы);
	
	// заполняем свойства обновления конфигурации
	Если ИнформацияОКонфигурациях.Количество() > 0 Тогда
		ИнформацияОКонфигурации = ИнформацияОКонфигурациях[0];
		ВерсияОбновленияКонфигурации = СокрЛП(ИнформацияОКонфигурации.Версия);
		ДоступноОбновлениеДо = ВерсияОбновленияКонфигурации;
		ДополнительнаяИнформацияОбОбновленииПрограммы = СокрЛП(ИнформацияОКонфигурации.ДополнительнаяИнформация);
		Если ЗначениеЗаполнено(ИнформацияОКонфигурации.URL) Тогда
			URLОбновленияПрограммы = СокрЛП(ИнформацияОКонфигурации.URL);
		КонецЕсли;
		ЭлементыФормы.ПанельДоступноОбновление.ТекущаяСтраница = ЭлементыФормы.ПанельДоступноОбновление.Страницы.ОбновлениеТребуется;
	Иначе
		ЭлементыФормы.КнопкаПерейтиКФормеОбновленияКонфигурации.Доступность = Ложь;
		URLОбновленияПрограммы = "";
		ДополнительнаяИнформацияОбОбновленииПрограммы = "";
		ЭлементыФормы.ПанельДоступноОбновление.ТекущаяСтраница = ЭлементыФормы.ПанельДоступноОбновление.Страницы.ОбновлениеНеТребуется;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(URLОбновленияПрограммы) Тогда
		ЭлементыФормы.НадписьПоследняяВерсия.Гиперссылка = Ложь;
		ЭлементыФормы.НадписьПоследняяВерсия.Подсказка = "";
	КонецЕсли;
	
	// отсеиваем неактуальные версии и преобразовываем дерево выпусков внешних отчетов к плоскому списку
	СписокОтчетов = Новый ТаблицаЗначений;
	СписокОтчетов.Колонки.Добавить("ИД");
	СписокОтчетов.Колонки.Добавить("Версия");
	СписокОтчетов.Колонки.Добавить("ДатаВыпуска");
	СписокОтчетов.Колонки.Добавить("ДополнительнаяИнформация");
	СписокОтчетов.Колонки.Добавить("URL");
	СписокОтчетов.Колонки.Добавить("Состав");
	
	URLПоИД = Новый Соответствие;
	Для Каждого Стр1 Из ИнформацияОВнешнихОтчетах.Строки Цикл
		Для Каждого Стр2 Из Стр1.Строки Цикл
			Если НЕ ЗначениеЗаполнено(Стр2.АктуальнаяВерсия) Тогда
				НовСтр = СписокОтчетов.Добавить();
				ЗаполнитьЗначенияСвойств(НовСтр, Стр2);
				Если ЗначениеЗаполнено(Стр2.ИД) Тогда
					URLПоИД.Вставить(Стр2.ИД, Стр1.URL);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	ВозможныеИсточникиОтчета = СписокОтчетов.ВыгрузитьКолонку("ИД");
	
	// делаем запрос к справочнику РегламентированныеОтчеты
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                      |	РегламентированныеОтчеты.Наименование КАК Отчет,
	                      |	РегламентированныеОтчеты.ЭтоГруппа,
	                      |	РегламентированныеОтчеты.ВнешнийОтчетВерсия,
	                      |	РегламентированныеОтчеты.ИсточникОтчета
	                      |ИЗ
	                      |	Справочник.РегламентированныеОтчеты КАК РегламентированныеОтчеты
	                      |ГДЕ
	                      |	(РегламентированныеОтчеты.ЭтоГруппа
	                      |			ИЛИ РегламентированныеОтчеты.ИсточникОтчета В (&ИсточникОтчета)
	                      |				И РегламентированныеОтчеты.НеПоказыватьВСписке = &НеПоказыватьВСписке)
	                      |	И РегламентированныеОтчеты.ПометкаУдаления = &ПометкаУдаления
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	РегламентированныеОтчеты.Код ИЕРАРХИЯ");
	
	Запрос.УстановитьПараметр("ИсточникОтчета", ВозможныеИсточникиОтчета);
	Запрос.УстановитьПараметр("НеПоказыватьВСписке", Ложь);
	Запрос.УстановитьПараметр("ПометкаУдаления", Ложь);
	
	// выгружаем дерево-результат
	ДеревоОтчетов = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	ДеревоОтчетов.Колонки.Добавить("URL");
	
	// добавляем к дереву отчеты с теми ИД, по которым были выпуски, но их нет в справочнике
	Для Каждого СтрСписокОтчетов Из СписокОтчетов Цикл
		Если ДеревоОтчетов.Строки.Найти(СокрЛП(СтрСписокОтчетов.ИД), "ИсточникОтчета", Истина) = Неопределено Тогда
			НовСтр = ДеревоОтчетов.Строки.Добавить();
			НовСтр.ИсточникОтчета = СокрЛП(СтрСписокОтчетов.ИД);
			НовСтр.ЭтоГруппа = Ложь;
			НовСтр.Отчет = СтрСписокОтчетов.Состав;
		КонецЕсли;
	КонецЦикла;
	
	// очищаем дерево от уже установленных внешних отчетов
	Для Каждого Стр Из СписокОтчетов Цикл
		РезультатПоиска = ДеревоОтчетов.Строки.НайтиСтроки(Новый Структура("ИсточникОтчета, ВнешнийОтчетВерсия", Стр.ИД, Стр.Версия), Истина);
		Для Каждого Рез Из РезультатПоиска Цикл
			РодительРез = ?(Рез.Родитель = Неопределено, Рез.Владелец(), Рез.Родитель);
			РодительРез.Строки.Удалить(Рез);
		КонецЦикла;
	КонецЦикла;
	
	// очищаем от пустых групп
	ОбщееКоличество = ДеревоОтчетов.Строки.Количество();
	Для ОбрИнд = 1 По ОбщееКоличество Цикл
		Инд = ОбщееКоличество - ОбрИнд;
		ТекСтр = ДеревоОтчетов.Строки[Инд];
		Если ТекСтр.ЭтоГруппа И ТекСтр.Строки.Количество() = 0 Тогда
			ДеревоОтчетов.Строки.Удалить(ТекСтр);
		КонецЕсли;
	КонецЦикла;
	
	// инициализируем URLы
	Для Каждого Стр1 Из ДеревоОтчетов.Строки Цикл
		Если НЕ Стр1.ЭтоГруппа Тогда
			URL = URLПоИД[Стр1.ИсточникОтчета];
			Если ЗначениеЗаполнено(URL) Тогда
				Стр1.URL = URL;
			КонецЕсли;
		Иначе
			Для Каждого Стр2 Из Стр1.Строки Цикл
				URL = URLПоИД[Стр2.ИсточникОтчета];
				Если ЗначениеЗаполнено(URL) Тогда
					Стр2.URL = URL;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	// регулируем показ списка отчетов
	Если ДеревоОтчетов.Строки.Количество() = 0 Тогда
		ЭлементыФормы.ПанельСписокОтчетов.ТекущаяСтраница = ЭлементыФормы.ПанельСписокОтчетов.Страницы.СписокВнешнихОтчетовПуст;
	Иначе
		ЭлементыФормы.ПанельСписокОтчетов.ТекущаяСтраница = ЭлементыФормы.ПанельСписокОтчетов.Страницы.СписокВнешнихОтчетов;
	КонецЕсли;
	
	// регулируем показ ссылок
	
	Если ЗначениеЗаполнено(URLТекущейПрограммы) Тогда
		ЭлементыФормы.ПанельОткрытьСтраницуТекущейКонфигурации.Свертка = РежимСверткиЭлементаУправления.Нет;
	Иначе
		ЭлементыФормы.ПанельОткрытьСтраницуТекущейКонфигурации.Свертка = РежимСверткиЭлементаУправления.Верх;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДополнительнаяИнформацияОбОбновленииПрограммы) Тогда
		ЭлементыФормы.ПанельПоказатьОтличияОтТекущейВерсии.Свертка = РежимСверткиЭлементаУправления.Нет;
	Иначе
		ЭлементыФормы.ПанельПоказатьОтличияОтТекущейВерсии.Свертка = РежимСверткиЭлементаУправления.Верх;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПредупреждениеОбОтсутствииИнформации(Отказ)
	
	Предупреждение("Информация об обновлениях отсутствует!");
	Отказ = Истина;
	
КонецПроцедуры

Процедура ВнешниеОтчетыПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		ДанныеСтроки = ОформлениеСтроки.ДанныеСтроки;
		Если ДанныеСтроки <> Неопределено Тогда
			Если ДанныеСтроки.ЭтоГруппа Тогда
				ОформлениеСтроки.Шрифт = Новый Шрифт( , , Истина);
			ИначеЕсли ЗначениеЗаполнено(ДанныеСтроки.URL) Тогда
				ОформлениеСтроки.Ячейки.Отчет.Гиперссылка = Истина;
				ОформлениеСтроки.Ячейки.Отчет.ЦветТекста = ЦветГиперссылки;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура НадписьОткрытьДополнительнуюИнформациюНажатие(Элемент)
	
	ФормаИнформацииОВыпуске = ПолучитьФорму("ДополнительнаяИнформацияОВыпуске");
	ФормаИнформацииОВыпуске.ДополнительнаяИнформация = ДополнительнаяИнформацияОбОбновленииПрограммы;
	ФормаИнформацииОВыпуске.ОткрытьМодально();
	
КонецПроцедуры

Процедура ОткрытьОбработкуОбновленияКонфигурации()
	
	Если Вопрос("Текущая форма будет закрыта. Продолжить?", РежимДиалогаВопрос.ДаНет) <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	мОткрытьФормуОбновленияКонфигурацииКонфигурации = Истина;
	Закрыть();
	
КонецПроцедуры

Процедура НадписьПоследняяВерсияНажатие(Элемент)
	
	Если ЗначениеЗаполнено(URLОбновленияПрограммы) Тогда
		ЗапуститьПриложение(URLОбновленияПрограммы);
	КонецЕсли;
	
КонецПроцедуры

Процедура КнопкаПерейтиКФормеОбновленияКонфигурацииНажатие(Элемент)
	
	ОткрытьОбработкуОбновленияКонфигурации();
	
КонецПроцедуры

Процедура НадписьОткрытьWebСтраницуНажатие(Элемент)
	
	Если ЗначениеЗаполнено(URLТекущейПрограммы) Тогда
		ЗапуститьПриложение(URLТекущейПрограммы);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗакрытии()
	
	Если мОткрытьФормуОбновленияКонфигурацииКонфигурации Тогда
		ОбработкаОбновленияКонфигурации = Обработки.ОбновлениеКонфигурации.Создать();
		ОбработкаОбновленияКонфигурации.ПолучитьФорму().Открыть();
	КонецЕсли;
	
КонецПроцедуры

Процедура ДеревоОтчетовВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ЗначениеЗаполнено(ВыбраннаяСтрока.URL) Тогда
		ЗапуститьПриложение(ВыбраннаяСтрока.URL);
	КонецЕсли;
	
КонецПроцедуры

мОткрытьФормуОбновленияКонфигурацииКонфигурации = Ложь;
ЦветГиперссылки = Новый Цвет(0, 0, 128);
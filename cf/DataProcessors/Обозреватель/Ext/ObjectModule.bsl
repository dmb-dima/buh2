#Если Клиент Тогда
	
Перем РесурсVerId Экспорт;
Перем СерверИсточник Экспорт;
Перем СерверИсточникДляПроверкиНаличияОбновления Экспорт;
Перем АдресРесурсовДляПроверкиНаличияОбновления Экспорт;
Перем КаталогОбновлений Экспорт;

// Чтение данных по обновлению из файла UpdInfo.txt
// Вычисляются: 
//		номер версии обновления на сервере, 
//		номера версий, с которых производится обновление (раздляются символом ";")
//		дата публикации обновления
//
// Параметры:
//  ИмяФайла - полное имя файла UpdInfo.txt
// 
// Возвращаемое значение:
//  Структура: 
//		Version - версия обновления
//		FromVersions - с каких версий обновляет
//		UpdateDate - дата опубликования
//  Неопределено - если файл не найден или не содержит нужных значений
//
Функция ПараметрыДистрибутива(ИмяФайла)
	Файл = Новый Файл(ИмяФайла);
	Если Файл.Существует() Тогда
		ТД = Новый ТекстовыйДокумент(); 
		ТД.Прочитать(Файл.ПолноеИмя);
		ПарКомпл = Новый Структура();
		Для Н=1 По ТД.КоличествоСтрок() Цикл
			СтрТмп = НРег(СокрЛП(ТД.ПолучитьСтроку(Н)));
			Если Найти(СтрТмп,"fromversions=")>0 Тогда
				СтрТМП = СокрЛП(Сред(СтрТмп,Найти(СтрТмп,"fromversions=")+СтрДлина("fromversions=")));
				СтрТМП = ?(Лев(СтрТМП,1)=";","",";") + СтрТмп + ?(Прав(СтрТМП,1)=";","",";");
				ПарКомпл.Вставить("FromVersions",СтрТМП);
			ИначеЕсли Найти(СтрТмп,"version=")>0 Тогда
				ПарКомпл.Вставить("Version",Сред(СтрТмп,Найти(СтрТмп,"version=")+СтрДлина("version=")));
			ИначеЕсли Найти(СтрТмп,"updatedate=")>0 Тогда
				// формат даты = Дата, 
				СтрТмп = Сред(СтрТмп,Найти(СтрТмп,"updatedate=")+СтрДлина("updatedate="));
				Если СтрДлина(СтрТмп)>8 Тогда
					Если Найти(СтрТмп,".")=5 Тогда
						// дата в формате  ГГГГ.ММ.ДД
						СтрТмп = СтрЗаменить(СтрТмп,".","");
					ИначеЕсли Найти(СтрТмп,".")=3 Тогда
						// дата в формате ДД.ММ.ГГГГ
						СтрТмп = Прав(СтрТмп,4)+Сред(СтрТмп,4,2)+Лев(СтрТмп,2);
					Иначе 
						// дата в формате ГГГГММДД
					КонецЕсли;
				КонецЕсли;
				ПарКомпл.Вставить("UpdateDate",Дата(СтрТмп));
			Иначе
				Возврат "Неверный формат сведений о наличии обновлений";
			КонецЕсли;
		КонецЦикла;
		Возврат ПарКомпл;
	Иначе
		Возврат "Файл описания обновлений не получен";
	КонецЕсли;
КонецФункции

// Получение заданного ресурса
//
// Параметры:
//  Сервер - сервер ресурсов
//  АдресРесурсов - адрес ресурсов
//  Ресурс - имя файл-ресурса (возможные значения: UpdInfo.txt; News.hml)
// Возвращаемое значение:
//  Имя файла полученного ресурса. Тип - Строка. Если не получен - пустая строка
//
Функция Получить(Сервер, АдресРесурсов, Ресурс)
	Перем HTTP;
	СоздатьКаталог(КаталогОбновлений);
	Попытка
		УдалитьФайлы(КаталогОбновлений,"*.*");
	Исключение
		Сообщить("Неудачная попытка очистить временный каталог "+КаталогОбновлений);
		Возврат "";
	КонецПопытки;
	ОбработкаПолученияФайлов = Обработки.ПолучениеФайловИзИнтернета.Создать();
	Если НЕ ОбработкаПолученияФайлов.ЗапроситьФайлыССервера(Сервер, АдресРесурсов+Ресурс, КаталогОбновлений + "\" + Ресурс, HTTP) Тогда
		Возврат "";
	КонецЕсли; 
	Файл = Новый Файл(КаталогОбновлений + "\" + Ресурс);
	Если Файл.ПолучитьТолькоЧтение() Тогда
		Файл.УстановитьТолькоЧтение(Ложь);
	КонецЕсли;
	Возврат КаталогОбновлений + "\" + Ресурс;
КонецФункции

// Получает файл UpdInfo.txt и по номерам версий проверяет наличие обновлений
//
//  ЭлементыФормы - элементы формы проверки
//  
Функция Проверить(ЭлементыФормы) Экспорт
	Перем ПараметрВозврата;

	ИмяФайла = Получить(СерверИсточникДляПроверкиНаличияОбновления, АдресРесурсовДляПроверкиНаличияОбновления, РесурсVerId);

	ПараметрВозврата = Истина;

	Если НЕ ПустаяСтрока(ИмяФайла) Тогда

		стПараметры = ПараметрыДистрибутива(ИмяФайла);

		Если ТипЗнч(стПараметры)=Тип("Строка") Тогда
			//Сообщить(стПараметры);
			ПараметрВозврата = Ложь;
		Иначе

			Если стПараметры.Version<>Метаданные.Версия Тогда

				Если Найти(стПараметры.FromVersions,СокрП(Метаданные.Версия)+";")=0 Тогда
					ЭлементыФормы.РезультатПроверки.Значение = "Комплект поставки на вэб-сервере не может быть использован для обновления текущей конфигурации."+Символы.ПС+ 
					                                           "Используйте диск ИТС!";

				Иначе
					ЭлементыФормы.РезультатПроверки.Значение = "На вэб-сервере обнаружен комплект поставки для обновления конфигурации!";

				КонецЕсли;

			Иначе
				ЭлементыФормы.РезультатПроверки.Значение = "Обновление конфигурации не требуется!";
				ПараметрВозврата = Ложь;

			КонецЕсли;

			ЭлементыФормы.ВерсияДистрибутива.Значение = стПараметры.Version;
			ЭлементыФормы.СВерсий.Значение            = СокрЛП(СтрЗаменить(стПараметры.FromVersions,";","  "));
			ЭлементыФормы.ДатаВерсии.Значение         = Формат(стПараметры.UpdateDate,"ДФ=dd.MM.yyyy");
			ЭлементыФормы.ТекущаяВерсия.Значение      = Метаданные.Версия;

		КонецЕсли;

	Иначе

		// Инфо о дистрибутиве не получена (нет соединения / нет обновления / другая причина)
		ПараметрВозврата = Ложь;

	КонецЕсли;

	Возврат ПараметрВозврата;

КонецФункции

#КонецЕсли

Функция АдресРесурсовОбозревателя() Экспорт
	
	#Если Клиент Тогда
	
		Возврат АдресРесурсовОбозревателя;
		
	#Иначе
		
		Возврат "";
		
	#КонецЕсли
	
КонецФункции // АдресРесурсовОбозревателя()

#Если Клиент Тогда

РесурсVerId = "UpdInfo.txt";
КаталогОбновлений = КаталогВременныхФайлов() + "tempIPP8";
СоздатьКаталог(КаталогОбновлений);
СерверИсточник = "http://users.v8.1c.ru";
СерверИсточникДляПроверкиНаличияОбновления = "www.1c.ru";
АдресРесурсовДляПроверкиНаличияОбновления = "/buhplace/ITSRepV/V8Update/Configs/"+АдресРесурсовОбозревателя+"/";

#КонецЕсли



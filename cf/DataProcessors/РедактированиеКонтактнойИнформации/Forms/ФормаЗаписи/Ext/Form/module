
Перем мОбработкаТайпинга;
Перем мТекстТайпинга;
Перем мПоследнееЗначениеЭлементаТайпинга;

Перем мСтруктураИзмерений Экспорт;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ
// 

// Функция возвращает текстовое имя формы регистра 
// контактной информации по типу - перечислению.
//
// Параметры:
//  Тип - тип контактной информации.
// Возвращаемое значение:
//  Наименование формы.
Функция ПолучитьИмяФормыПоТипу(Тип) Экспорт

	Если Тип = Перечисления.ТипыКонтактнойИнформации.Адрес Тогда
		Возврат "ФормаЗаписиАдреса";
	ИначеЕсли Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты Тогда
		Возврат "ФормаЗаписиАдресаЭП";
	ИначеЕсли Тип = Перечисления.ТипыКонтактнойИнформации.ВебСтраница Тогда
		Возврат "ФормаЗаписиВебСтраницы";
	ИначеЕсли Тип = Перечисления.ТипыКонтактнойИнформации.Телефон Тогда
		Возврат "ФормаЗаписиТелефона";
	Иначе
		Возврат "ФормаЗаписи";
	КонецЕсли;

КонецФункции

// Процедура устанавливает подписи на форме в зависимости от вида КИ
//
Процедура УстановитьВидПодписиКИ()

	ЗаголовокЭУ = Строка(Вид);

	Если ПустаяСтрока(ЗаголовокЭУ) Тогда
		ЭлементыФормы.РамкаГруппыЗначения.Заголовок = "Значение";
	Иначе
		ЭлементыФормы.РамкаГруппыЗначения.Заголовок = Строка(Вид);
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
//

// Процедура вызывается при ОбновлениеОтображения формы.
//
Процедура ОбновлениеОтображения()
	
	ЭтаФорма.ЭлементыФормы.Вид.ТолькоПросмотр = (Объект = Неопределено);

	ПроцедурыПоискаПоСтроке.ОбновлениеОтображенияВФормеПриТайпинге(ЭтаФорма, ЭтаФорма.ЭлементыФормы.Вид, мОбработкаТайпинга, мТекстТайпинга);
	
КонецПроцедуры

// Процедура вызывается перед открытием формы, перехватывая это событие.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

	Если НЕ ЗначениеЗаполнено(Тип) Тогда
		Меню = Новый СписокЗначений();

		Для а = 0 По (Перечисления.ТипыКонтактнойИнформации.Количество()-1) Цикл
			Меню.Добавить(Перечисления.ТипыКонтактнойИнформации[а], Перечисления.ТипыКонтактнойИнформации[а]);
		КонецЦикла; 

		ВыбранныйПункт = Меню.ВыбратьЭлемент("Выберите тип контактной информации");

		Если ВыбранныйПункт = Неопределено Тогда
			Отказ = Истина;
			Возврат;
		КонецЕсли;

		Тип = ВыбранныйПункт.Значение;

	КонецЕсли;

	Если ПолучитьИмяФормыПоТипу(Тип) <> "ФормаЗаписи" Тогда
		Если ЭтаФорма.МодальныйРежим Тогда
			ФормаЗаписи = ПолучитьФорму(ПолучитьИмяФормыПоТипу(Тип), ВладелецФормы, );
			ФормаЗаписи.ЗакрыватьПриВыборе = Ложь;
			ФормаЗаписи.ОткрытьМодально();
		Иначе
			ФормаЗаписи = ПолучитьФорму(ПолучитьИмяФормыПоТипу(Тип), ВладелецФормы, );
			ФормаЗаписи.ЗакрыватьПриВыборе = Ложь;
			ФормаЗаписи.Открыть();
		КонецЕсли; 
		Отказ = Истина;
	КонецЕсли;

	ЭтаФорма.ЗакрыватьПриВыборе = Ложь;
	
КонецПроцедуры

// Процедура вызывается при открытии формы.
//
Процедура ПриОткрытии()

	ЭлементыФормы.Объект.ТолькоПросмотр     = НЕ ДоступностьОбъекта;
	
	Если Вид = Неопределено Тогда
		Вид = Справочники.ВидыКонтактнойИнформации.ПустаяСсылка();
	КонецЕсли;

	УстановитьВидПодписиКИ();

	Если НЕ ЗначениеЗаполнено(Объект) И ДоступностьОбъекта Тогда
		ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.Объект;
	ИначеЕсли НЕ ЗначениеЗаполнено(Вид) Тогда
		ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.Вид;
	Иначе
		ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.Представление;
	КонецЕсли; 
	
	ЭтаФорма.ЗакрыватьПриВыборе = Ложь;
	
	СвернутьПанельПриНеобходимости(ЭтаФорма, ЭлементыФормы.ПанельОбъектаИВида);
	
	мПоследнееЗначениеЭлементаТайпинга = Вид;
	
КонецПроцедуры

Процедура ОсновныеДействияФормыЗаписать(Кнопка)
	
	Если Записать() Тогда
		Модифицированность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОсновныеДействияФормыОК(Кнопка)
	
	Если Записать() Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		Отказ = ЗакрыватьФормуРедактирования();
	КонецЕсли; 
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
//

// Процедура вызывается при очистке значения элемента формы Объект.
//
Процедура ОбъектОчистка(Элемент, СтандартнаяОбработка)
	
	Если ТипЗнч(Вид) = Тип("СправочникСсылка.ВидыКонтактнойИнформации") Тогда
	
		Вид = Справочники.ВидыКонтактнойИнформации.ПустаяСсылка();
	
	КонецЕсли; 
	
КонецПроцедуры

// Процедура перехватывает момент начала выбора вида контактной информации.
//
// Параметры
//  Элемент - элемент формы, выбор значения которого должен произойти
//  СтандартнаяОбработка - булево, флаг стандартной обработки выбора.
Процедура ВидНачалоВыбора(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

	Если Объект = Неопределено ИЛИ Объект.Ссылка.Пустая() Тогда
		Сообщить("Выберите объект.");
		Возврат;
	КонецЕсли;

	УправлениеКонтактнойИнформацией.ОткрытьФормуВыбораВидаКИ(Истина, Элемент, Тип, УправлениеКонтактнойИнформацией.ВидОбъектаКИ(Объект));

КонецПроцедуры

// Процедура вызывается при изменении реквизита вид КИ
Процедура ВидПриИзменении(Элемент)
	
	УстановитьВидПодписиКИ();
	
	мПоследнееЗначениеЭлементаТайпинга = Элемент.Значение;
	
КонецПроцедуры

// Процедура перехватывает момент начала выбора Объекта.
//
// Параметры
//  Элемент - элемент формы, выбор значения которого должен произойти
//  СтандартнаяОбработка - булево, флаг стандартной обработки выбора.
Процедура ОбъектНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = УправлениеКонтактнойИнформацией.НачалоВыбораОбъектаКИ(ЭтаФорма, Элемент, глЗначениеПеременной("глТекущийПользователь"));

КонецПроцедуры

// Процедура обработчик события АвтоПодборТекста элемента формы Вид.
//
Процедура ВидАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	
	ПроцедурыПоискаПоСтроке.АвтоПодборТекстаВЭлементеУправления(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка, Новый Структура("Тип, ВидОбъектаКонтактнойИнформации", Тип, УправлениеКонтактнойИнформацией.ВидОбъектаКИ(Объект)), Тип("СправочникСсылка.ВидыКонтактнойИнформации"));
	
КонецПроцедуры

// Процедура обработчик события ОкончаниеВводаТекста элемента формы Вид.
//
Процедура ВидОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	ПроцедурыПоискаПоСтроке.ОкончаниеВводаТекстаВЭлементеУправления(Элемент, Текст, Значение, СтандартнаяОбработка, Новый Структура("Тип, ВидОбъектаКонтактнойИнформации", Тип, УправлениеКонтактнойИнформацией.ВидОбъектаКИ(Объект)), ЭтаФорма, Тип("СправочникСсылка.ВидыКонтактнойИнформации"), мОбработкаТайпинга, мТекстТайпинга, мПоследнееЗначениеЭлементаТайпинга);
	
КонецПроцедуры

мОбработкаТайпинга                 = Ложь;
мТекстТайпинга                     = "";
мПоследнееЗначениеЭлементаТайпинга = Неопределено;
мСтруктураИзмерений                = Неопределено;

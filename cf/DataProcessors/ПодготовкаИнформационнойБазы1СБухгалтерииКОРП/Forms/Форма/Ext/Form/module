Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если Константы.ГотовностьИнформационнойБазыКРаботе.Получить() Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если РольДоступна(Метаданные.Роли.ПолныеПрава) Тогда
		ЭлементыФормы.ПанельПредупреждение.ТекущаяСтраница = ЭлементыФормы.ПанельПредупреждение.Страницы.СтраницаПолныеПрава;		
	Иначе
		ЭлементыФормы.ПанельПредупреждение.ТекущаяСтраница = ЭлементыФормы.ПанельПредупреждение.Страницы.СтраницаОграниченныеПрава;		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗакрытьПрограмму(Элемент)
	
 	ЗавершитьРаботуСистемы(Ложь);
	
КонецПроцедуры

Процедура ПодготовитьИнформационнуюБазу(Элемент)
	
	ЕстьОшибки = Ложь;	
	
	////////////////////////////////////////////////////
	// Обновление проводок по ОС
	
	СписокСчетов = Новый Массив;
	
	СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.ОСвОрганизации);
	СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.ОСБезГосРегистрации);
	СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.ВыбытиеОС);
	СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.АмортизацияОС_01);
	СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.АмортизацияОС_03);
	СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.ИзносОсновныхСредств);
	СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.ПереданныеОбъектыНедвижимости);
	
	Запрос = Новый Запрос;		
	
	Запрос.УстановитьПараметр("СписокСчетов", СписокСчетов);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Рег1.Период КАК ДатаНачала,
	|	ВЫБОР
	|		КОГДА МИНИМУМ(Рег2.Период) ЕСТЬ NULL 
	|			ТОГДА ДАТАВРЕМЯ(3999, 12, 31)
	|		ИНАЧЕ ДОБАВИТЬКДАТЕ(МИНИМУМ(Рег2.Период), СЕКУНДА, -1)
	|	КОНЕЦ КАК ДатаОкончания,
	|	Рег1.ОсновноеСредство КАК ОсновноеСредство,
	|	Рег1.Организация КАК Организация,
	|	Рег1.Местонахождение КАК Местонахождение
	|ПОМЕСТИТЬ ВТ_МестонахождениеОСБухгалтерскийУчет
	|ИЗ
	|	РегистрСведений.МестонахождениеОСБухгалтерскийУчет КАК Рег1
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОСБухгалтерскийУчет КАК Рег2
	|		ПО Рег1.ОсновноеСредство = Рег2.ОсновноеСредство
	|			И Рег1.Период < Рег2.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	Рег1.Период,
	|	Рег1.ОсновноеСредство,
	|	Рег1.Организация,
	|	Рег1.Местонахождение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Рег1.Период,
	|	Рег1.ОсновноеСредство,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Регистратор КАК Регистратор,
	|	Хозрасчетный.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА Хозрасчетный.СчетДт В (&СписокСчетов)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Дт,
	|	ВЫБОР
	|		КОГДА Хозрасчетный.СчетКт В (&СписокСчетов)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Кт,
	|	ХозрасчетныйСубконто.Значение КАК ОС,
	|	ХозрасчетныйСубконто.ВидДвижения КАК СубконтоДтКт,
	|	Хозрасчетный.Организация,
	|	Хозрасчетный.Период
	|ПОМЕСТИТЬ ВТ_ПроводкиПоОС
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ПО Хозрасчетный.Регистратор = ХозрасчетныйСубконто.Регистратор
	|			И Хозрасчетный.НомерСтроки = ХозрасчетныйСубконто.НомерСтроки
	|			И (ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства))
	|			И (ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Дебет))
	|ГДЕ
	|	(Хозрасчетный.СчетДт В (&СписокСчетов)
	|			ИЛИ Хозрасчетный.СчетКт В (&СписокСчетов))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПроводкиПоОС.Регистратор,
	|	ВТ_ПроводкиПоОС.НомерСтроки,
	|	ВТ_МестонахождениеОСБухгалтерскийУчет.Местонахождение,
	|	ВТ_ПроводкиПоОС.Дт,
	|	ВТ_ПроводкиПоОС.Кт
	|ИЗ
	|	ВТ_ПроводкиПоОС КАК ВТ_ПроводкиПоОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестонахождениеОСБухгалтерскийУчет КАК ВТ_МестонахождениеОСБухгалтерскийУчет
	|		ПО ВТ_ПроводкиПоОС.Организация = ВТ_МестонахождениеОСБухгалтерскийУчет.Организация
	|			И ВТ_ПроводкиПоОС.ОС = ВТ_МестонахождениеОСБухгалтерскийУчет.ОсновноеСредство
	|			И (ВТ_ПроводкиПоОС.Период МЕЖДУ ВТ_МестонахождениеОСБухгалтерскийУчет.ДатаНачала И ВТ_МестонахождениеОСБухгалтерскийУчет.ДатаОкончания)";
	
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		
		Попытка
			ТекущийРегистратор = Неопределено;
			НаборЗаписей = Неопределено;
			
			Выборка = Результат.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				
				Если Выборка.Регистратор <> ТекущийРегистратор Тогда
					Если НаборЗаписей <> Неопределено Тогда
						НаборЗаписей.Записать();
					КонецЕсли;
					
					ТекущийРегистратор = Выборка.Регистратор;
					НаборЗаписей = РегистрыБухгалтерии.Хозрасчетный.СоздатьНаборЗаписей();
					НаборЗаписей.Отбор.Регистратор.Установить(ТекущийРегистратор);
					НаборЗаписей.Прочитать();
				КонецЕсли;
				
				Запись = НаборЗаписей[Выборка.НомерСтроки - 1];
				Если Выборка.Дт Тогда
					Запись["ПодразделениеДт"] = Выборка.Местонахождение;
				КонецЕсли;
				Если Выборка.Кт Тогда
					Запись["ПодразделениеКт"] = Выборка.Местонахождение;
				КонецЕсли;
				
			КонецЦикла;
			
			Если НаборЗаписей <> Неопределено Тогда
				НаборЗаписей.Записать();
			КонецЕсли;
			
		Исключение
			ОбщегоНазначения.СообщитьОбОшибке(ОписаниеОшибки());			
			ЕстьОшибки = Истина;
		КонецПопытки;
		
	КонецЕсли;
	
	////////////////////////////////////////////////////
	// Обновление проводок по налогам и сборам
	
	СписокСчетов = Новый Массив;
	
	СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.НДФЛ);
	СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.Акцизы);
	СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСБюджетом);
	СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.НалогНаИмущество);
	СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.ЕНВД);
		
	Запрос.УстановитьПараметр("СписокСчетов", СписокСчетов);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Организации.РегистрацияВИФНС КАК РегистрацияВИФНС,
	|	Организации.Ссылка КАК Организация
	|ПОМЕСТИТЬ ВТ_регистрацииВИФНС
	|ИЗ
	|	Справочник.Организации КАК Организации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Регистратор КАК Регистратор,
	|	Хозрасчетный.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА Хозрасчетный.СчетДт В (&СписокСчетов)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Дт,
	|	ВЫБОР
	|		КОГДА Хозрасчетный.СчетКт В (&СписокСчетов)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Кт,
	|	ХозрасчетныйСубконто.ВидДвижения КАК СубконтоДтКт,
	|	Хозрасчетный.Организация
	|ПОМЕСТИТЬ ВТ_Проводки
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ПО Хозрасчетный.Регистратор = ХозрасчетныйСубконто.Регистратор
	|			И Хозрасчетный.НомерСтроки = ХозрасчетныйСубконто.НомерСтроки
	|			И (ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РегистрацияВИФНС))
	|			И (ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Дебет))
	|ГДЕ
	|	(Хозрасчетный.СчетДт В (&СписокСчетов)
	|			ИЛИ Хозрасчетный.СчетКт В (&СписокСчетов))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Проводки.Регистратор,
	|	ВТ_Проводки.НомерСтроки,
	|	ВТ_Проводки.Дт,
	|	ВТ_Проводки.Кт,
	|	ВТ_регистрацииВИФНС.РегистрацияВИФНС
	|ИЗ
	|	ВТ_Проводки КАК ВТ_Проводки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_регистрацииВИФНС КАК ВТ_регистрацииВИФНС
	|		ПО ВТ_Проводки.Организация = ВТ_регистрацииВИФНС.Организация";
	
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		
		Попытка
			ТекущийРегистратор = Неопределено;
			НаборЗаписей = Неопределено;
			
			Выборка = Результат.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				
				Если Выборка.Регистратор <> ТекущийРегистратор Тогда
					Если НаборЗаписей <> Неопределено Тогда
						НаборЗаписей.Записать();
					КонецЕсли;
					
					ТекущийРегистратор = Выборка.Регистратор;
					НаборЗаписей = РегистрыБухгалтерии.Хозрасчетный.СоздатьНаборЗаписей();
					НаборЗаписей.Отбор.Регистратор.Установить(ТекущийРегистратор);
					НаборЗаписей.Прочитать();
				КонецЕсли;
				
				Запись = НаборЗаписей[Выборка.НомерСтроки - 1];
				
				Если Выборка.Дт Тогда
					Запись["СубконтоДт"].РегистрацияВИФНС = Выборка.РегистрацияВИФНС;
				КонецЕсли;
				Если Выборка.Кт Тогда
					Запись["СубконтоКт"].РегистрацияВИФНС = Выборка.РегистрацияВИФНС;
				КонецЕсли;
				
			КонецЦикла;
			
			Если НаборЗаписей <> Неопределено Тогда
				НаборЗаписей.Записать();
			КонецЕсли;
			
		Исключение
			ОбщегоНазначения.СообщитьОбОшибке(ОписаниеОшибки());			
			ЕстьОшибки = Истина;
		КонецПопытки;
		
	КонецЕсли;
	
	////////////////////////////////////////////////////
	// Обновление документов по налогам и сборам
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Организации.РегистрацияВИФНС КАК РегистрацияВИФНС,
	|	Организации.Ссылка КАК Организация
	|ПОМЕСТИТЬ ВТ_регистрацииВИФНС
	|ИЗ
	|	Справочник.Организации КАК Организации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_регистрацииВИФНС.РегистрацияВИФНС КАК РегистрацияВИФНС,
	|	СписаниеСРасчетногоСчета.Ссылка КАК Регистратор,
	|	""СубконтоДт"" КАК ИмяРеквизита,
	|	NULL КАК НомерСтроки,
	|	СписаниеСРасчетногоСчета.СчетУчетаРасчетовСКонтрагентом КАК СчетУчета,
	|	NULL КАК ИмяТЧ
	|ИЗ
	|	Документ.СписаниеСРасчетногоСчета КАК СписаниеСРасчетногоСчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_регистрацииВИФНС КАК ВТ_регистрацииВИФНС
	|		ПО СписаниеСРасчетногоСчета.Организация = ВТ_регистрацииВИФНС.Организация
	|ГДЕ
	|	СписаниеСРасчетногоСчета.СчетУчетаРасчетовСКонтрагентом В(&СписокСчетов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_регистрацииВИФНС.РегистрацияВИФНС,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Ссылка,
	|	""СубконтоДт"",
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.НомерСтроки,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт,
	|	""ОтражениеВУчете""
	|ИЗ
	|	Документ.ОтражениеЗарплатыВРеглУчете.ОтражениеВУчете КАК ОтражениеЗарплатыВРеглУчетеОтражениеВУчете
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_регистрацииВИФНС КАК ВТ_регистрацииВИФНС
	|		ПО ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Ссылка.Организация = ВТ_регистрацииВИФНС.Организация
	|ГДЕ
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт В(&СписокСчетов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_регистрацииВИФНС.РегистрацияВИФНС,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Ссылка,
	|	""СубконтоКт"",
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.НомерСтроки,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт,
	|	""ОтражениеВУчете""
	|ИЗ
	|	Документ.ОтражениеЗарплатыВРеглУчете.ОтражениеВУчете КАК ОтражениеЗарплатыВРеглУчетеОтражениеВУчете
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_регистрацииВИФНС КАК ВТ_регистрацииВИФНС
	|		ПО ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Ссылка.Организация = ВТ_регистрацииВИФНС.Организация
	|ГДЕ
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт В(&СписокСчетов)";
	
	Результат = Запрос.Выполнить();
	
	РасчетыСБюджетом = ПланыСчетов.Хозрасчетный.РасчетыСБюджетом;
	
	Если Не Результат.Пустой() Тогда
		
		Попытка
			ТекущийРегистратор = Неопределено;
			РегистраторОбъект = Неопределено;
			
			Выборка = Результат.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				
				Если Выборка.Регистратор <> ТекущийРегистратор Тогда

					ТекущийРегистратор = Выборка.Регистратор;
					РегистраторОбъект = ТекущийРегистратор.ПолучитьОбъект();
					
					Если Выборка.СчетУчета = РасчетыСБюджетом Тогда
						НомерСубконто = 3;
					Иначе
						НомерСубконто = 2;
					КонецЕсли;
					
					Если Выборка.ИмяТЧ = Null Тогда // документ без ТЧ
						
						РегистраторОбъект[Выборка.ИмяРеквизита + НомерСубконто] = Выборка.РегистрацияВИФНС;												
						
					Иначе // документ с ТЧ
						
						РегистраторОбъект[Выборка.ИмяТЧ][Выборка.НомерСтроки-1][Выборка.ИмяРеквизита + НомерСубконто] = Выборка.РегистрацияВИФНС;
						
					КонецЕсли;					

				КонецЕсли;
				
				РегистраторОбъект.Записать();
				
			КонецЦикла;
						
			
			Если РегистраторОбъект <> Неопределено Тогда
				РегистраторОбъект.Записать();
			КонецЕсли;
			
		Исключение
			ОбщегоНазначения.СообщитьОбОшибке(ОписаниеОшибки());			
			ЕстьОшибки = Истина;
		КонецПопытки;
		
	КонецЕсли;
	
	////////////////////////////////////////////////////
	// Обновление записей регистра
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Организации.РегистрацияВИФНС КАК РегистрацияВИФНС,
	|	Организации.Ссылка КАК Организация
	|ИЗ
	|	Справочник.Организации КАК Организации";
		
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		
		Попытка
			Выборка = Результат.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				
				Отбор = Новый Структура("Организация", Выборка.Организация);
				РегистрацияВИФНС = Выборка.РегистрацияВИФНС;
				
				ВыборкаСтавокНалога = РегистрыСведений.СтавкиНалогаНаПрибыльВБюджетСубъектовРФ.Выбрать(,,Отбор);
				
				Пока ВыборкаСтавокНалога.Следующий() Цикл
					
					Элемент = ВыборкаСтавокНалога.ПолучитьМенеджерЗаписи();
					Элемент.Прочитать();
					Элемент.РегистрацияВИФНС = РегистрацияВИФНС;
					Элемент.Записать();
					
				КонецЦикла;
				
			КонецЦикла;
			
		Исключение
			ОбщегоНазначения.СообщитьОбОшибке(ОписаниеОшибки());			
			ЕстьОшибки = Истина;
		КонецПопытки;
		
	КонецЕсли;
	
	Константы.ГотовностьИнформационнойБазыКРаботе.Установить(Истина);
	
	Закрыть();
	
	#Если Клиент Тогда
		Если ЕстьОшибки Тогда
			Предупреждение("В процессе подготовки информационной базы произошли ошибки!
			|Данные информационной базы потребуется скорректировать вручную.");
		Иначе
			Предупреждение("Подготовка информационной базы завершена!");
		КонецЕсли;
	#КонецЕсли	
	
КонецПроцедуры


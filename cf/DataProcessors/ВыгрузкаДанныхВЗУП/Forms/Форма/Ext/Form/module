Перем мУниверсальнаяВыгрузкаДанных;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура выполняет выбор файла
//
Процедура ВыборФайла(Элемент, ПроверятьСуществование=Ложь)

	ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);

	ДиалогВыбора.Фильтр                  = "Файл данных (*.xml)|*.xml";
	ДиалогВыбора.Заголовок               = "Выберите файл";
	ДиалогВыбора.ПредварительныйПросмотр = Ложь;
	ДиалогВыбора.Расширение              ="xml";
	ДиалогВыбора.ИндексФильтра           = 0;
	ДиалогВыбора.ПолноеИмяФайла          = Элемент.Значение;
	ДиалогВыбора.ПроверятьСуществованиеФайла = ПроверятьСуществование;

	Если ДиалогВыбора.Выбрать() Тогда
		Элемент.Значение = ДиалогВыбора.ПолноеИмяФайла;
	КонецЕсли;

КонецПроцедуры

// Устанавливает состояние пометки у подчиненных строк строки дерева значений
// в зависимости от пометки текущей строки
//
// Параметры:
//  ТекСтрока      - Строка дерева значений
// 
Процедура УстановитьПометкиПодчиненных(ТекСтрока)

	Включить    = ТекСтрока.Включить;
	Подчиненные = ТекСтрока.Строки;

	Если Подчиненные.Количество() > 0 Тогда

		Для каждого Строка из Подчиненные Цикл
			Строка.Включить = Включить;
			УстановитьПометкиПодчиненных(Строка);
		КонецЦикла;

	КонецЕсли;

КонецПроцедуры // УстановитьПометкиПодчиненных()

// Устанавливает состояние пометки у родительских строк строки дерева значений
// в зависимости от пометки текущей строки
//
// Параметры:
//  ТекСтрока      - Строка дерева значений
// 
Процедура УстановитьПометкиРодителей(ТекСтрока)

	Родитель = ТекСтрока.Родитель;
	Если Родитель = Неопределено Тогда
		Возврат;
	КонецЕсли; 

	ТекСостояние		= Родитель.Включить;

	НайденыВключенные	= Ложь;
	НайденыВыключенные	= Ложь;

	Для каждого Строка из Родитель.Строки Цикл
		
		Если Строка.Включить = 0 Тогда
			НайденыВыключенные	= Истина;
		ИначеЕсли Строка.Включить = 1 Тогда
			НайденыВключенные	= Истина;
		КонецЕсли; 
		
		Если НайденыВключенные И НайденыВыключенные Тогда
			Прервать;
		КонецЕсли;
		
	КонецЦикла;

	
	Если НайденыВключенные И НайденыВыключенные Тогда
		Включить = 2;
	ИначеЕсли НайденыВключенные И (Не НайденыВыключенные) Тогда
		Включить = 1;
	ИначеЕсли (Не НайденыВключенные) И НайденыВыключенные Тогда
		Включить = 0;
	ИначеЕсли (Не НайденыВключенные) И (Не НайденыВыключенные) Тогда
		Включить = 2;
	КонецЕсли;

	Если Включить = ТекСостояние Тогда
		Возврат;
	Иначе
		Родитель.Включить = Включить;
		УстановитьПометкиРодителей(Родитель);
	КонецЕсли; 
	
КонецПроцедуры // УстановитьПометкиРодителей()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()

	ФормаИндикатора = ПолучитьОбщуюФорму("ХодВыполненияОбработкиДанных");
	ФормаИндикатора.НаименованиеОбработкиДанных = "Выгрузка данных в конфигурацию ""Зарплата и управление персоналом"", ред. 2.5";
	ФормаИндикатора.КомментарийОбработкиДанных  = "Загружаются правила обмена";
	ФормаИндикатора.КомментарийЗначения         = "Загружено:";
	ФормаИндикатора.Открыть();
	
	ФормаИндикатора.МаксимальноеЗначение        = 3;
	ФормаИндикатора.Значение					= 1;

	мУниверсальнаяВыгрузкаДанных   = Обработки.УниверсальныйОбменДаннымиXML.Создать();

	// Получим из макета правила обмена данными
	УникальныйИдентификатор        = Новый УникальныйИдентификатор();
	ИмяВременногоФайлаПравилОбмена = КаталогВременныхФайлов() + УникальныйИдентификатор + ".xml";

	МакетПравилОбмена = ПолучитьМакет("ПравилаОбмена");
	МакетПравилОбмена.Записать(ИмяВременногоФайлаПравилОбмена);
	
	ФормаИндикатора.Значение = 2;

	// Загрузка в универсальную обработку XML правил обмена
	мУниверсальнаяВыгрузкаДанных.ИмяФайлаПравилОбмена = ИмяВременногоФайлаПравилОбмена;
	мУниверсальнаяВыгрузкаДанных.ЗагрузитьПравилаОбмена();

	ФормаИндикатора.Значение = 3;

	// Удаляем временный файл правил и внешней обработки
	Попытка
		УдалитьФайлы(ИмяВременногоФайлаПравилОбмена);
	Исключение
	КонецПопытки;

	ТаблицаПравилВыгрузки = мУниверсальнаяВыгрузкаДанных.ТаблицаПравилВыгрузки.Скопировать();

	//Для каждого Колонка из мУниверсальнаяВыгрузкаДанных.ТаблицаПравилВыгрузки.Колонки Цикл
	//	НоваяКолонка = ТаблицаПравилВыгрузки.Колонки.Добавить(Колонка.Имя, Колонка.ТипЗначения, Колонка.Заголовок, Колонка.Ширина);
	//КонецЦикла;

	//Для каждого Строка из мУниверсальнаяВыгрузкаДанных.ТаблицаПравилВыгрузки.Строки Цикл
	//	НоваяСтрока = ТаблицаПравилВыгрузки.Строки.Добавить();
	//	Для каждого Колонка из мУниверсальнаяВыгрузкаДанных.ТаблицаПравилВыгрузки.Колонки Цикл
	//		НоваяСтрока[Колонка.Имя] = Строка[Колонка.Имя];
	//	КонецЦикла;
	//КонецЦикла;

	ФормаИндикатора.Закрыть();

КонецПроцедуры

Процедура КнопкаУстановитьФлажкиНажатие(Элемент)

	Для Каждого СтрокаУровня1 Из ТаблицаПравилВыгрузки.Строки Цикл
		
		СтрокаУровня1.Включить = Истина;
		
		Если СтрокаУровня1.Строки.Количество() = 0 Тогда 
			
			Продолжить;
			
		КонецЕсли;
		
		Для Каждого СтрокаУровня2 Из СтрокаУровня1.Строки Цикл
			
			СтрокаУровня2.Включить = Истина;
			
		КонецЦикла;
		
	КонецЦикла;

КонецПроцедуры

Процедура КнопкаСнятьФлажкиНажатие(Элемент)
	
	Для Каждого СтрокаУровня1 Из ТаблицаПравилВыгрузки.Строки Цикл

		СтрокаУровня1.Включить = Ложь;
		
		Если СтрокаУровня1.Строки.Количество() = 0 Тогда 
			Продолжить;
		КонецЕсли;
		
		Для Каждого СтрокаУровня2 Из СтрокаУровня1.Строки Цикл
			
			СтрокаУровня2.Включить = Ложь;
			
		КонецЦикла;
		
	КонецЦикла;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ ТаблицаПравилВыгрузки

Процедура КнопкаВыполнитьНажатие(Элемент)

	Если ПустаяСтрока(ИмяФайлаДанных) Тогда
		Сообщить("Не указан файл выгрузки данных!");
		Возврат;
	КонецЕсли;

	мУниверсальнаяВыгрузкаДанных.ИмяФайлаОбмена        = ИмяФайлаДанных;
	мУниверсальнаяВыгрузкаДанных.ТаблицаПравилВыгрузки = ТаблицаПравилВыгрузки.Скопировать();
	мУниверсальнаяВыгрузкаДанных.ВыполнитьОбменДаннымиВОптимизированномФормате = Истина;
	мУниверсальнаяВыгрузкаДанных.ВыполнитьВыгрузку();

КонецПроцедуры // КнопкаВыполнитьНажатие()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ ФОРМЫ

Процедура ИмяФайлаДанныхОткрытие(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	
	ЗапуститьПриложение("explorer " + Элемент.Значение);

КонецПроцедуры

Процедура ИмяФайлаДанныхНачалоВыбора(Элемент, СтандартнаяОбработка)

	ВыборФайла(Элемент);

КонецПроцедуры

Процедура ТабличноеПоле1ПриИзмененииФлажка(Элемент, Колонка)

	Если Колонка.Имя = "Колонка1" Тогда

		ТекСтрока = ЭлементыФормы.ТабличноеПоле1.ТекущаяСтрока;

		Если ТекСтрока.Включить = 2 Тогда
			ТекСтрока.Включить = 0;
		КонецЕсли;

		УстановитьПометкиПодчиненных(ТекСтрока);
		УстановитьПометкиРодителей(ТекСтрока);

	КонецЕсли;

КонецПроцедуры



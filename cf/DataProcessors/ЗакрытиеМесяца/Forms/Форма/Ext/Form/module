Перем ВидыСостояний;
Перем мУчетнаяПолитика;
Перем НачисляетсяНДС, НачисляетсяФОТ;
Перем Цвета;
Перем Картинки;
Перем ТаблицаОрганизаций Экспорт;
Перем Отказ;
Перем НазваниеРегОперацииФОТ;
Перем ЭтоОтмена;
Перем КонтролироватьПоследовательностьПроведения;

Перем ОбработчикПодключен;

Перем СвойстваОрганизации;
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ НАЖАТИЯ КНОПОК КОМАНДНОЙ ПАНЕЛИ


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ


// Процедура - обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии()

	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Организация = глЗначениеПеременной("ОсновнаяОрганизация");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ПериодРегистрации) Тогда
		ПериодРегистрации = НачалоМесяца(ТекущаяДата());
	КонецЕсли;
	
	ЭлементыФормы.РегламентнаяОперация1.Видимость = КонтролироватьПоследовательностьПроведения;	
	ЭлементыФормы.ПолеГалки1.Видимость = КонтролироватьПоследовательностьПроведения;	
	
	ПредставлениеПериодаРегистрации = РаботаСДиалогами.ПолучитьПредставлениеПериодаРегистрации(ПериодРегистрации);
	СтандартныеОтчеты.ЗаполнитьТаблицуОрганизаций(ЭтаФорма);
	ПодключитьОбработчикИзмененияДанных("ПериодРегистрации", "ПериодРегистрацииПриИзменении");
	
	Если Не Константы.УчетЗарплатыИКадровВоВнешнейПрограмме.Получить() Тогда
		НазваниеРегОперацииФОТ = "Начисление налогов (взносов) с ФОТ";
	Иначе
		НазваниеРегОперацииФОТ = "Начисление зарплаты, налогов(взносов) с ФОТ";
	КонецЕсли;
	
	ТаблицаОпераций.Колонки.Добавить("ВидОперации", Новый ОписаниеТипов("Строка, ПеречислениеСсылка.ВидыРегламентныхОпераций",, Новый КвалификаторыСтроки(100)));
	ТаблицаОпераций.Колонки.Добавить("Состояние"  , Новый ОписаниеТипов("Число"));
	ТаблицаОпераций.Колонки.Добавить("Требуется");
	ТаблицаОпераций.Колонки.Добавить("РучнаяКорректировка");
	ТаблицаОпераций.Колонки.Добавить("Цвет");
	ТаблицаОпераций.Колонки.Добавить("Группа"     , Новый ОписаниеТипов("Число"));
	ТаблицаОпераций.Колонки.Добавить("ПорядокСледования", Новый ОписаниеТипов("Число"));
	ТаблицаОпераций.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	
	Отказ = Ложь;
	ЭтоОтмена = Ложь;
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		ЭлементыФормы.ТекстВыполненияЗакрытияМесяца.Заголовок  = "Укажите организацию";
		ЗаполнитьСписокОпераций();
		ОбновитьНадписиПустойФормы();
		Возврат;
	КонецЕсли;
	
	ПолучитьУчетнуюПолитику();
	
	Если Отказ Тогда
		ЗаполнитьСписокОпераций();
		ОбновитьНадписиПустойФормы();
		Возврат;
	КонецЕсли;
	
    УправлениеОрганизациями();
	УправлениеОперациями(, Истина);
	УстановитьПропущенныеОперации();
    УправлениеЭлементамиФормы();
	
	ЗакрытиеМесяца.УстановитьДоступность(Организация, ПериодРегистрации, ЭтаФорма);  
	
КонецПроцедуры

Процедура ПериодРегистрацииПриИзменении(Параметр)
	
	Если Не ОбработчикПодключен Тогда
		ПодключитьОбработчикОжидания("ОбработкаИзмененияПериодаРегистрации", 1, Истина);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаИзмененияПериодаРегистрации()
	
	ОбработчикПодключен = Ложь;
	
	УправлениеОрганизациями();
	УправлениеОперациями();
	УстановитьПропущенныеОперации();
	УправлениеЭлементамиФормы();
	Если НЕ Отказ Тогда
		ОбновитьНадписиФормы(Истина, Истина)
	КонецЕсли;
КонецПроцедуры

Процедура ПриЗакрытии()
	
	СтруктураОбщихПараметров = ПоместитьПараметрыОтчетаВСтруктуру();

КонецПроцедуры

//Функция сохраняет параметры отчета в структуру
Функция ПоместитьПараметрыОтчетаВСтруктуру()

	СтруктураОбщихПараметров = Новый Структура;
	СтруктураОбщихПараметров.Вставить("Организация", Организация);
	СтруктураОбщихПараметров.Вставить("ПериодРегистрации", ПериодРегистрации);
	
	Возврат СтруктураОбщихПараметров;
    КонецФункции


Процедура ОбновлениеОтображения()
	
	ДатаНач = НачалоМесяца(ПериодРегистрации);
	ДатаКон  = КонецМесяца(ПериодРегистрации);
	
	ПредставлениеПериодаРегистрации = РаботаСДиалогами.ПолучитьПредставлениеПериодаРегистрации(ПериодРегистрации);
	ЗакрытиеМесяца.УстановитьДоступность(Организация, ПериодРегистрации, ЭтаФорма, (ЗначениеЗаполнено(Организация) И НЕ Отказ)); 
	Элементыформы.ПредставлениеПериодаРегистрации.Доступность = ЗначениеЗаполнено(Организация);
	
КонецПроцедуры

Процедура ОрганизацияПриИзменении(Элемент)
	
	Если Элемент.Значение = Неопределено Тогда
		СтрокаОрганизации = ТаблицаОрганизаций.Найти(Организация);
		ЭлементыФормы.Организация.Значение = ?(СтрокаОрганизации = Неопределено, 0, ТаблицаОрганизаций.Индекс(СтрокаОрганизации));
	КонецЕсли;
	
	УправлениеОрганизациями();
	УправлениеОперациями();
	УстановитьПропущенныеОперации();
	УправлениеЭлементамиФормы();
	ЗакрытиеМесяца.УстановитьДоступность(Организация, ПериодРегистрации, ЭтаФорма);  
	ОбновитьНадписиФормы(Истина, Истина)
	
КонецПроцедуры


Функция ПроверкаПовторовВидовОпераций(Заголовок) 
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("КонецМесяца",  КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("Организация",  Организация);
	Запрос.УстановитьПараметр("Комментарий",  "#Движения документа");
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ОперацияБух.Ссылка КАК ОперацияБух
	|ИЗ
	|	Документ.ОперацияБух КАК ОперацияБух
	|ГДЕ
	|	ОперацияБух.Дата МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И ОперацияБух.Организация = &Организация
	|	И ПОДСТРОКА(ОперацияБух.Комментарий, 1, 19) = &Комментарий";
	
	Если НЕ Запрос.Выполнить().Пустой() Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Повтор регламентной операции
		|Обнаружен документ <Операция (бухгалтерский и налоговый учет)> с комментарием ""#Движения документа..."". Вероятно, закрытие месяца за этот период уже было выполнено.
		|Рекомендуется пометить на удаление эту операцию и выполнить удаление помеченных объектов. После этого можно повторить процедуру закрытия месяца", Отказ, Заголовок);
		Возврат Ложь;
	Иначе 
		Возврат Истина;
	КонецЕсли;	
	
Конецфункции

Процедура ОткрытьДокумент(Элемент, ИнтерактивноеОткрытие = Истина, РегОперация = "", ГО = "", СтрокаТаблицы, Пропустить = Ложь)
	
	Если СтрокаТаблицы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВидРегОперации = СтрокаТаблицы.ВидОперации;
	
	УчетЗарплатыИКадровВоВнешнейПрограмме = Константы.УчетЗарплатыИКадровВоВнешнейПрограмме.Получить();
	
	Запрос = Новый Запрос;
	
		Запрос.Текст = 
		
		"ВЫБРАТЬ
		|	РегламентнаяОперация.Ссылка КАК РегОперация
		|ИЗ
		|	Документ.РегламентнаяОперация КАК РегламентнаяОперация
		|ГДЕ
		|	РегламентнаяОперация.Дата МЕЖДУ &ДатаЗакрытияНачало И &ДатаЗакрытияКонец
		|	И РегламентнаяОперация.Организация = &Организация
		|	И РегламентнаяОперация.ВидОперации = &ВидОперации
		|	И (НЕ РегламентнаяОперация.ПометкаУдаления)";
		
		Запрос.УстановитьПараметр("Организация", ?(ГО = "", СвойстваОрганизации.Организация, ГО));
		Запрос.УстановитьПараметр("ВидОперации", ВидРегОперации);
		Запрос.УстановитьПараметр("ДатаЗакрытияНачало",НачалоМесяца(ПериодРегистрации));
		Запрос.УстановитьПараметр("ДатаЗакрытияКонец",КонецМесяца(ПериодРегистрации));
		
		Если Элемент = НазваниеРегОперацииФОТ Тогда 
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И РегламентнаяОперация.ВидОперации = &ВидОперации", "");
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "РегламентнаяОперация", ?(УчетЗарплатыИКадровВоВнешнейПрограмме,"ОтражениеЗарплатыВРеглУчете","РасчетЕСН"));
		КонецЕсли;
		
		Результат = Запрос.Выполнить();
		
		Если Результат.Пустой() Тогда
			
			Если ИнтерактивноеОткрытие И Элемент.Имя = "РегламентнаяОперация2" Тогда
				Если УчетЗарплатыИКадровВоВнешнейПрограмме Тогда
					РегОперация = Документы.ОтражениеЗарплатыВРеглУчете.СоздатьДокумент();
				Иначе
					РегОперация = Документы.РасчетЕСН.СоздатьДокумент();
				КонецЕсли;
				
				РегОперация.ПериодРегистрации = ПериодРегистрации;
			Иначе
				РегОперация = Документы.РегламентнаяОперация.СоздатьДокумент();
				РегОперация.ВидОперации = ВидРегОперации;
				
			КонецЕсли;
			ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(РегОперация, глЗначениеПеременной("глТекущийПользователь"));
			
			РегОперация.Дата = КонецМесяца(ПериодРегистрации);
			РегОперация.Организация = ?(ГО = "",СвойстваОрганизации.Организация, ГО);
			
			Если Пропустить Тогда
				РегОперация.Состояние = Перечисления.ВидыСостоянийРегламентныхОпераций.Пропущено;
			КонецЕсли;
			
			Если ИнтерактивноеОткрытие Тогда
				Форма = РегОперация.ПолучитьФорму("ФормаДокумента");
				Форма.Открыть();
			Иначе
				Попытка
					РегОперация.Записать(РежимЗаписиДокумента.Запись);
				Исключение
				КонецПопытки;
			КонецЕсли;
		Иначе
			
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			
			РегОперация = Выборка.РегОперация.ПолучитьОбъект();
			
			
			Если ИнтерактивноеОткрытие Тогда
				Форма = Выборка.РегОперация.ПолучитьФорму("ФормаДокумента");
				Форма.Открыть();
			КонецЕсли;
		КонецЕсли;	
	
КонецПроцедуры

Процедура РегОперацияНажатие(Элемент)
	
	Индекс = СтрЗаменить(Элемент.Имя, "РегламентнаяОперация", "");
	СтрокаТаблицы = ТаблицаОпераций.Получить(Индекс - 1);
	
	Если  СтрокаТаблицы.ВидОперации = "Контроль последовательности проведения документов" Тогда
			ОбработкаУправленияПоследовательностью = Обработки.УправлениеПоследовательностями.Создать();				
			ОбработкаУправленияПоследовательностью.ПериодНач = НачалоМесяца(ПериодРегистрации);
			ОбработкаУправленияПоследовательностью.ПериодКон = КонецМесяца(ПериодРегистрации);
			ОбработкаУправленияПоследовательностью.Организация = Организация;
			Форма = ОбработкаУправленияПоследовательностью.ПолучитьФорму("Форма");
			Форма.ОткрытьМодально();
		Возврат; 
	КонецЕсли;
	
	СписокКоманд = СоздатьСписокКоманд(СтрокаТаблицы);
	
	Команда = ВыбратьИзМеню(СписокКоманд,Элемент);
	
	Если НЕ Команда = Неопределено Тогда
		ОбработкаНажатияКнопкиМеню(Команда.Значение,Элемент,СтрокаТаблицы);
	КонецЕсли;
	
КонецПроцедуры
		
Функция СоздатьСписокКоманд(СтрокаТаблицы)
	
	СписокКоманд = Новый СписокЗначений;
	
	ОткрытьДокументГО = (СтрокаТаблицы.Группа = 2 Или СтрокаТаблицы.Группа = 4);
	МожноВыполнять = (Не ОткрытьДокументГО Или Не СвойстваОрганизации.ЕстьОП Или (ОткрытьДокументГО И ВключатьОбособленныеПодразделения));
	
	Если ВключатьОбособленныеПодразделения И Не ОткрытьДокументГО Тогда
		СписокКоманд.Добавить("Отчет",     "Открыть отчет о невыполненных операциях");
		Возврат СписокКоманд;
	КонецЕсли;

	Если СтрокаТаблицы.ВидОперации = "Формирование книги покупок и продаж" Тогда
		СписокКоманд.Добавить("Открыть",     "Открыть помощник НДС");
	ИначеЕсли СтрокаТаблицы.ВидОперации = НазваниеРегОперацииФОТ Тогда
		Если СтрокаТаблицы.Состояние = 0 Или СтрокаТаблицы.Состояние = 1 Или СтрокаТаблицы.Состояние = 4 Тогда
			СписокКоманд.Добавить("Проводки", "Показать проводки",,Картинки.Получить(7));
		КонецЕсли;
		Возврат СписокКоманд;
		МожноВыполнять = (НЕ Константы.УчетЗарплатыИКадровВоВнешнейПрограмме.Получить());
	Иначе	
		Если СтрокаТаблицы.Состояние = 0 Или СтрокаТаблицы.Состояние = 1 Или СтрокаТаблицы.Состояние = 4 Тогда
			СписокКоманд.Добавить("Проводки", "Показать проводки",,Картинки.Получить(7));
				Если ЗакрытиеМесяца.СуществуетСправкаРасчет(СтрокаТаблицы.ВидОперации) Тогда
				СписокКоманд.Добавить("Справка",   "Сформировать справку-расчет");
				КонецЕсли;
		ИначеЕсли СтрокаТаблицы.Состояние = 2 Тогда
			СписокКоманд.Добавить("Ошибки", "Показать ошибки",, Картинки.Получить(2));
		КонецЕсли;
	КонецЕсли;
	
	Если МожноВыполнять Тогда
		СписокКоманд.Добавить("Выполнить",   "Выполнить операцию",, Картинки.Получить(51));
	КонецЕсли;
	
	Если СтрокаТаблицы.ВидОперации = "Формирование книги покупок и продаж"  Тогда
		Возврат СписокКоманд;
	КонецЕсли;
	
	Если МожноВыполнять И НЕ СтрокаТаблицы.Состояние = 3 Тогда
		СписокКоманд.Добавить("Отменить",   "Отменить операцию",, Картинки.Получить(52));
	КонецЕсли;
	
	Если МожноВыполнять И НЕ СтрокаТаблицы.Состояние = 6 Тогда
		СписокКоманд.Добавить("Пропустить",   "Пропустить операцию",, Картинки.Получить(6));
	КонецЕсли;
	
	Если МожноВыполнять Тогда
		Если НЕ СтрокаТаблицы.Состояние = 1 И НЕ СтрокаТаблицы.Состояние = 0 И НЕ СтрокаТаблицы.Состояние = 6 Тогда
			СписокКоманд.Добавить("ВыполнитьДо", "Выполнить операции до выбранной");
		КонецЕсли;
		Если НЕ СтрокаТаблицы.Состояние = 3 И НЕ СтрокаТаблицы.Состояние = 6 Тогда
			СписокКоманд.Добавить("ОтменитьПосле", "Отменить операции после выбранной");
		КонецЕсли;
		Если СтрокаТаблицы.Состояние = 4 Тогда
			СписокКоманд.Добавить("Актуальность",   "Пометить как выполненные все операции до выбранной");
		КонецЕсли;
	КонецЕсли;
	Возврат СписокКоманд;
	
КонецФункции


Процедура ОбработкаНажатияКнопкиМеню(Команда, Элемент, СтрокаТаблицы)
	
	ВидТекущейРегламентнойОперации = СтрокаТаблицы.ВидОперации;
	
	Если  ВидТекущейРегламентнойОперации = НазваниеРегОперацииФОТ Тогда
		
		Если Команда = "Проводки" Тогда
			РегОперация = "";	 
			ОткрытьДокумент(ВидТекущейРегламентнойОперации, Ложь, РегОперация,, СтрокаТаблицы);
			ОбщегоНазначения.РучнаяКорректировкаОсновнаяФорма(Ложь,РегОперация.Ссылка,РегОперация);
		КонецЕсли;
		
		Если Команда = "Выполнить" Тогда
			ВыполнитьРасчетЕСН();
			УправлениеОперациями();
		КонецЕсли;
		
	ИначеЕсли  ВидТекущейРегламентнойОперации = "Формирование книги покупок и продаж" Тогда
		
		Если Команда = "Выполнить" Тогда
			ВыполнитьРасчетНДС();
			УправлениеОперациями();
		КонецЕсли;
		
		Если Команда = "Открыть" Тогда
			Форма = Обработки.ПомощникПоУчетуНДС.ПолучитьФорму("Форма");
			Форма.ПериодРегистрации = ПериодРегистрации;
			Форма.Организация = Организация;
			Форма.Открыть();
			УправлениеОперациями();
		КонецЕсли;
		
	Иначе
		
		Если Команда = "Открыть" Тогда
			
			ОткрытьДокументГО = (СтрокаТаблицы.Группа = 2 Или СтрокаТаблицы.Группа = 4);
			
			Если НЕ ВключатьОбособленныеПодразделения И ОткрытьДокументГО И СвойстваОрганизации.ЕстьОП Тогда
				ОткрытьДокумент(Элемент, Истина, , СвойстваОрганизации.ГоловнаяОрганизация, СтрокаТаблицы);
			Иначе
				ОткрытьДокумент(Элемент, Истина,,, СтрокаТаблицы);
			КонецЕсли;
			
		ИначеЕсли Команда = "Отчет" Тогда
			
			ПечатьОтчетаВыполненныхОперациях(ВидТекущейРегламентнойОперации);
		ИначеЕсли Команда = "Проводки" Тогда
			РегОперация = "";	 
			ОткрытьДокумент(ВидТекущейРегламентнойОперации, Ложь, РегОперация,, СтрокаТаблицы);
			ОбщегоНазначения.РучнаяКорректировкаОсновнаяФорма(Ложь,РегОперация.Ссылка,РегОперация);
		ИначеЕсли Команда = "Ошибки" Тогда
			ОткрытьДокумент(ВидТекущейРегламентнойОперации, Ложь, РегОперация,, СтрокаТаблицы);
			ФормаОшибок = РегОперация.ПолучитьФорму("ФормаОшибок");
			ФормаОшибок.Открыть();
		ИначеЕсли Команда = "Выполнить" Тогда
			Если ПроверкаПовторовВидовОпераций("Регламентная операция(" + ВидТекущейРегламентнойОперации+ ")") Тогда
				РегОперация = "";	 
				ОткрытьДокумент(ВидТекущейРегламентнойОперации, Ложь, РегОперация,, СтрокаТаблицы);
				РегОперация.ВыполнитьОперацию();
				УправлениеОперациями();
				Возврат;
			КонецЕсли;
		ИначеЕсли Команда = "ВыполнитьДо" Тогда
			ВыполнитьЗакрытиеМесяца(ВидТекущейРегламентнойОперации);
		ИначеЕсли Команда = "Отменить" Тогда
			РегОперация = "";	 
			ОткрытьДокумент(ВидТекущейРегламентнойОперации, Ложь, РегОперация,, СтрокаТаблицы);
			РегОперация.ОтменитьОперацию();
			УправлениеОперациями();
		ИначеЕсли Команда = "Пропустить" Тогда
			РегОперация = "";	 
			ОткрытьДокумент(ВидТекущейРегламентнойОперации, Ложь, РегОперация,, СтрокаТаблицы);
			РегОперация.ПропуститьОперацию();
			УправлениеОперациями();
		ИначеЕсли Команда = "ОтменитьПосле" Тогда
			ОтменитьЗакрытиеМесяца(ВидТекущейРегламентнойОперации);
		ИначеЕсли Команда = "Справка" Тогда
			ЗакрытиеМесяца.СформироватьСправкиРасчеты(Организация, ПериодРегистрации, ВидТекущейРегламентнойОперации);
		ИначеЕсли Команда = "Актуальность" Тогда
			УстановитьГраницуПроведенияЗакрытияМесяц(ВидТекущейРегламентнойОперации);
			УправлениеОперациями();
		КонецЕсли;
	КонецЕсли;
ОбновитьНадписиФормы(Истина, Истина);	
	
	
КонецПроцедуры

Процедура ЗаполнитьСписокОпераций()
	
	    ТаблицаОпераций.Очистить();
				
		СтрокаТаблицы = ТаблицаОпераций.Добавить();
		СтрокаТаблицы.ВидОперации = "Контроль последовательности проведения документов";
		СтрокаТаблицы.Требуется = Истина;
		СтрокаТаблицы.РучнаяКорректировка = Ложь;
		СтрокаТаблицы.Состояние = 0;
		СтрокаТаблицы.Организация = Организация;
		СтрокаТаблицы.Группа = 1;
		СтрокаТаблицы.ПорядокСледования = 1;
		
		СтрокаТаблицы = ТаблицаОпераций.Добавить();
		СтрокаТаблицы.ВидОперации = НазваниеРегОперацииФОТ;
		СтрокаТаблицы.Состояние = 0;
		СтрокаТаблицы.Требуется = Истина;
		СтрокаТаблицы.РучнаяКорректировка = Ложь;
		СтрокаТаблицы.Организация = Организация;
		СтрокаТаблицы.Группа = 1;
		СтрокаТаблицы.ПорядокСледования = 2;
		
		
		НачисляетсяНДС = ?(мУчетнаяПолитика = Неопределено Или мУчетнаяПолитика.Количество() = 0, Ложь, мУчетнаяПолитика.СистемаНалогообложения = Перечисления.СистемыНалогообложения.Общая)
		И (Месяц(ПериодРегистрации) = 3 Или Месяц(ПериодРегистрации) = 6 Или Месяц(ПериодРегистрации) = 9 Или Месяц(ПериодРегистрации) = 12);
		
		СтрокаТаблицы = ТаблицаОпераций.Добавить();
		СтрокаТаблицы.ВидОперации = "Формирование книги покупок и продаж";
		СтрокаТаблицы.Состояние = 0;
		СтрокаТаблицы.Требуется = НачисляетсяНДС;
		СтрокаТаблицы.РучнаяКорректировка = Ложь;
		СтрокаТаблицы.Организация = Организация;
		СтрокаТаблицы.Группа = 1;
		СтрокаТаблицы.ПорядокСледования = 3;
		
		Для Счетчик = 3 По Перечисления.ВидыРегламентныхОпераций.Количество() + 2 Цикл
		
		СтрокаТаблицы = ТаблицаОпераций.Добавить();
		СтрокаТаблицы.ВидОперации = Перечисления.ВидыРегламентныхОпераций.Получить(Счетчик - 3);
		СтрокаТаблицы.Организация = Организация;
		СтрокаТаблицы.ПорядокСледования = Счетчик + 1;
		СтрокаТаблицы.Состояние = 3;
		СтрокаТаблицы.Требуется = Истина;
		СтрокаТаблицы.РучнаяКорректировка = Ложь;
		
	КонецЦикла;
	
Конецпроцедуры

Процедура ЗаполнитьТаблицуОпераций(РегОперация = Неопределено)
	
	
	// заполнение состояний по учетной политике
	
	Для Каждого СтрокаТаблицы Из ТаблицаОпераций Цикл 
		
		Если СтрокаТаблицы.ПорядокСледования < 4 Тогда
			 Продолжить;
		 КонецЕсли;
		
		ВидОперацииСиноним = СтрокаТаблицы.ВидОперации;
		Если мУчетнаяПолитика.СистемаНалогообложения = Перечисления.СистемыНалогообложения.Общая И Найти(ВидОперацииСиноним, "УСН") > 0 Тогда
			СтрокаТаблицы.Состояние = 5;
			СтрокаТаблицы.Требуется = Ложь;
		КонецЕсли;
		
		Если Найти(ВидОперацииСиноним, "УСН") > 0 И НЕ СтрокаТаблицы.ВидОперации = Перечисления.ВидыРегламентныхОпераций.ИсключениеНЗПИзСоставаМатериальныхРасходовДляУСН Тогда
			Если НЕ (Месяц(ПериодРегистрации) = 3 Или Месяц(ПериодРегистрации) = 6 Или Месяц(ПериодРегистрации) = 9 Или Месяц(ПериодРегистрации) = 12) Тогда
				СтрокаТаблицы.Состояние = 5;
				СтрокаТаблицы.Требуется = Ложь;
				
			КонецЕсли;
			
		КонецЕсли;
		
		
		Если Найти(ВидОперацииСиноним, "Реформация баланса") > 0 И Не Месяц(ПериодРегистрации) = 12 Тогда
			СтрокаТаблицы.Состояние = 5;
			СтрокаТаблицы.Требуется = Ложь;
		КонецЕсли;
		
		
		Если Найти(ВидОперацииСиноним, "Реформация баланса") > 0 
			Или Найти(ВидОперацииСиноним, "Закрытие счетов 90, 91") > 0 
			Или Найти(ВидОперацииСиноним, "Списание убытков прошлых лет") > 0
			Или Найти(ВидОперацииСиноним, "Расчет налога на прибыль") > 0 Тогда 
			Если ВключатьОбособленныеПодразделения Или НЕ СвойстваОрганизации.ЕстьОП Тогда
				СтрокаТаблицы.Состояние = 0;
				СтрокаТаблицы.Требуется = Истина;
			Иначе	
				СтрокаТаблицы.Состояние = 5;
				СтрокаТаблицы.Требуется = Ложь;
			КонецЕсли;
		КонецЕсли;
		
		
	КонецЦикла;
	
	
КонецПроцедуры

Функция ПолучитьУчетнуюПолитику()
	
	мУчетнаяПолитика = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(ПериодРегистрации, , Организация);
	
	Если мУчетнаяПолитика = Неопределено Или мУчетнаяПолитика.Количество() = 0 Тогда
		Отказ = Истина;
		ЭлементыФормы.ТекстВыполненияЗакрытияМесяца.Заголовок  = "Укажите учетную политику";
		ЭлементыФормы.ТекстВыполненияЗакрытияМесяца2.Заголовок  = "";
		ОбновитьНадписиПустойФормы();
		ЭтаФорма.Обновить();
	Конецесли;
		
	Возврат Отказ;
КонецФункции

Процедура УправлениеОперациями(ПоследееОбновлениеФормы = Истина, ОбновитьОписание = Ложь) 
	
	Отказ = Ложь;
	ПолучитьУчетнуюПолитику();
	ЗаполнитьСписокОпераций();
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	ЗаполнитьТаблицуОпераций();
	
	Если Не ВключатьОбособленныеПодразделения Тогда
		СписокОП = "";
		ДляОП = Ложь;
	Иначе
		СписокОП = СвойстваОрганизации.СписокОП;
		ДляОП = Истина;
	КонецЕсли;
	 
	ТаблицаВыполненныхОпераций = ЗакрытиеМесяца.СоставГруппыРегОпераций(1,Организация,ПериодРегистрации,,СписокОП,ДляОП);
	ПроставитьОсобыеСостояния(ТаблицаВыполненныхОпераций, 1);
	ПроставитьСостояния(3,13, ТаблицаВыполненныхОпераций, 1);
	
	ТаблицаВыполненныхОпераций = ЗакрытиеМесяца.СоставГруппыРегОпераций(2,Организация,ПериодРегистрации,,СписокОП,ДляОП);
	ПроставитьСостояния(14, 14, ТаблицаВыполненныхОпераций, 2);
	
	ТаблицаВыполненныхОпераций = ЗакрытиеМесяца.СоставГруппыРегОпераций(3,Организация,ПериодРегистрации,,СписокОП,ДляОП);
	ПроставитьСостояния(15, 18, ТаблицаВыполненныхОпераций, 3);
	
	ТаблицаВыполненныхОпераций = ЗакрытиеМесяца.СоставГруппыРегОпераций(4,Организация,ПериодРегистрации,,СписокОП,ДляОП);
	ПроставитьСостояния(19, 22, ТаблицаВыполненныхОпераций, 4);
	
	// не требующиеся сдвигаются вниз
	ТаблицаОпераций.Сортировать("Группа,Требуется Убыв,ПорядокСледования");
	
	ОбновитьНадписиФормы(ПоследееОбновлениеФормы, ОбновитьОписание);
	  
КонецПроцедуры

Процедура УстановитьПропущенныеОперации()
	
	Если НЕ (ТаблицаОпераций.НайтиСтроки(Новый Структура("Состояние",1)).Количество() = 0 
		   И ТаблицаОпераций.НайтиСтроки(Новый Структура("Состояние",6)).Количество() = 0) Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаПропущенных = ЗакрытиеМесяца.ПропущеноРанее(Организация, ПериодРегистрации, "Все");
	
	Для Каждого ПропущеннаяОперация Из ТаблицаПропущенных Цикл
		
		Если НЕ ЗначениеЗаполнено(ПропущеннаяОперация.ВидОперации) Тогда
			Продолжить;
		КонецЕсли;
		СтрокаТаблицы = ТаблицаОпераций.Найти(ПропущеннаяОперация.ВидОперации);
		
		Если СтрокаТаблицы = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		Если Не СтрокаТаблицы.Требуется Тогда
			Продолжить;
		КонецЕсли;
		
		Если НЕ СтрокаТаблицы.Состояние = 3 Тогда
			Продолжить;
		КонецЕсли;
		
		ОткрытьДокумент(ПропущеннаяОперация.ВидОперации, Ложь, , СвойстваОрганизации.ГоловнаяОрганизация, СтрокаТаблицы, Истина);

	КонецЦикла;
	
КонецПроцедуры


Процедура ОбновитьНадписиФормы(ПоследееОбновлениеФормы = Истина, ОбновитьОписание = Ложь)
	
	ПроверитьАктуальность(ТаблицаОпераций);
	
	Если Отказ Тогда 
		Возврат;
	КонецЕсли;
	
	Для Счетчик = 1 ПО ТаблицаОпераций.Количество() Цикл  
		
		СтрокаТаблицы = ТаблицаОпераций.Получить(Счетчик - 1);
		
		ТекущийЭлементНадписи=  ЭлементыФормы.Найти("РегламентнаяОперация" + Счетчик);
		ТекущийЭлементГалки  =  ЭлементыФормы.Найти("ПолеГалки" + Счетчик);
		
		ТекущийЭлементНадписи.Заголовок   = СтрокаТаблицы.ВидОперации;
		ТекущийЭлементНадписи.Видимость   = НЕ (СтрокаТаблицы.Состояние = 5);
		ТекущийЭлементНадписи.ЦветТекста  = Цвета.Получить(СтрокаТаблицы.Состояние);
		ТекущийЭлементГалки.Картинка      = Картинки.Получить(СтрокаТаблицы.Состояние);
	КонецЦикла;
	
	Выполнено            = ТаблицаОпераций.НайтиСтроки(Новый Структура("Состояние",1)).Количество()
	+ ТаблицаОпераций.НайтиСтроки(Новый Структура("Состояние",0)).Количество();
	ВыполненоСОшибками   = ТаблицаОпераций.НайтиСтроки(Новый Структура("Состояние",2)).Количество();
	НеВыполнено          = ТаблицаОпераций.НайтиСтроки(Новый Структура("Состояние",3)).Количество();
	НеАктуально          = ТаблицаОпераций.НайтиСтроки(Новый Структура("Состояние",4)).Количество();
	Пропущено            = ТаблицаОпераций.НайтиСтроки(Новый Структура("Состояние",6)).Количество();
	
	ВсегоНеВыполнено = ВыполненоСОшибками + НеВыполнено + НеАктуально;
	
	ЭлементыФормы.ТекстВыполнено.Заголовок            = " Выполнено операций:";
	ЭлементыФормы.ТекстНеАктуально.Заголовок          = " Рекомендуется выполнить повторно:";
	ЭлементыФормы.ТекстВыполненоСОшибками.Заголовок   = " Выполнено операций с ошибками:";
	ЭлементыФормы.ТекстНеВыполнено.Заголовок          = "Не выполнено операций:";
	ЭлементыФормы.ТекстПропущено.Заголовок            = " Пропущено операций:";
	
	ЭлементыФормы.ТекстВыполнено.Картинка            = Картинки.Получить(1);
	ЭлементыФормы.ТекстНеАктуально.Картинка          = Картинки.Получить(1);
	ЭлементыФормы.ТекстВыполненоСОшибками.Картинка   = Картинки.Получить(2);
	ЭлементыФормы.ТекстПропущено.Картинка            = Картинки.Получить(6);
	
	ЭлементыФормы.ТекстВыполнено1.Заголовок            = Выполнено;
	ЭлементыФормы.ТекстНеАктуально1.Заголовок          = НеАктуально;
	ЭлементыФормы.ТекстВыполненоСОшибками1.Заголовок   = ВыполненоСОшибками;
	ЭлементыФормы.ТекстНеВыполнено1.Заголовок          = НеВыполнено;
	ЭлементыФормы.ТекстПропущено1.Заголовок            = Пропущено;
	
	ТекстДополнения = "";
	Если  ВсегоНеВыполнено = 0 Тогда
		ЭлементыФормы.ТекстВыполненияЗакрытияМесяца.Заголовок = "Закрытие месяца выполнено успешно";
		ЭлементыФормы.ТекстВыполненияЗакрытияМесяца.ЦветТекста = WebЦвета.Зеленый;
		
	Иначе
		Если ВключатьОбособленныеПодразделения Тогда
			СтрокаТаблицы = ТаблицаОпераций.Получить(14);
			Если Не СтрокаТаблицы.Состояние = 1 Тогда
				КоличествоГруппы = 0;
				ПолучитьКоличествоОжидаемыхОпераций(1,КоличествоГруппы);
				КоличествоГруппы3 = 0;
				ПолучитьКоличествоОжидаемыхОпераций(3,КоличествоГруппы3);
				Если  КоличествоГруппы = 0 Тогда
					ТекстДополнения = "Осталось выполнить операций: " + (КоличествоГруппы3 + 1);
				Иначе	
					ТекстДополнения = "Ожидается выполнение в обособленных подразделениях операций 1 группы: " + КоличествоГруппы;
				КонецЕсли;
			Иначе
				
				КоличествоГруппы = 0;
				ПолучитьКоличествоОжидаемыхОпераций(3,КоличествоГруппы);
				Если  КоличествоГруппы = 0 Тогда
					ТекстДополнения = "Осталось выполнить операций: " + ВсегоНеВыполнено;
				Иначе	
					ТекстДополнения = "Ожидается выполнение в обособленных подразделениях операций 3 группы: " + КоличествоГруппы;
				КонецЕсли;
				
			КонецЕсли;
		Иначе
			
			Если СвойстваОрганизации.ЕстьОП Тогда
				СтрокаТаблицы = ТаблицаОпераций.Получить(14);
				Если Не СтрокаТаблицы.Состояние = 1 Тогда
					
					КоличествоГруппы = 0;
					ПолучитьКоличествоОжидаемыхОпераций(1,КоличествоГруппы);
					Если  КоличествоГруппы = 0 Тогда
						ТекстДополнения = "Ожидается выполнение операции:
						|Расчет долей списания косвенных расходов";
					Иначе	
						ТекстДополнения = "Осталось выполнить операций: " + ВсегоНеВыполнено;
					КонецЕсли;
					
				Иначе
					
					ТекстДополнения = "Осталось выполнить операций: " + ВсегоНеВыполнено;
					
				КонецЕсли;
			Иначе
				
				ТекстДополнения = "Осталось выполнить операций: " + ВсегоНеВыполнено;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если  (ПоследееОбновлениеФормы И ОбновитьОписание) Или ЭтоОтмена Тогда
			ЭлементыФормы.ТекстВыполненияЗакрытияМесяца.Заголовок = "Закрытие месяца не выполнено";
			
		ИначеЕсли НЕ ПоследееОбновлениеФормы И ОбновитьОписание Тогда	
			ЭлементыФормы.ТекстВыполненияЗакрытияМесяца.Заголовок = "";
		КонецЕсли;
		
		
		ЭлементыФормы.ТекстВыполненияЗакрытияМесяца.ЦветТекста = WebЦвета.Черный;
		
	КонецЕсли;	
	Если ЭтоОтмена Тогда
		ЭлементыФормы.ТекстВыполненияЗакрытияМесяца2.Заголовок  = "";
	Иначе
		ЭлементыФормы.ТекстВыполненияЗакрытияМесяца2.Заголовок  = ТекстДополнения;
	КонецЕсли;
	
	ЭлементыФормы.ТекстВыполненияЗакрытияМесяца2.ЦветТекста = ?(ВсегоНеВыполнено = 0,WebЦвета.Зеленый,WebЦвета.Черный);
	
	ЭтаФорма.Обновить();
КонецПроцедуры

Процедура ОбновитьНадписиПустойФормы()
	
	Для Счетчик = 1 ПО ТаблицаОпераций.Количество() Цикл  
		
		СтрокаТаблицы = ТаблицаОпераций.Получить(Счетчик - 1);
		
		ТекущийЭлементНадписи=  ЭлементыФормы.Найти("РегламентнаяОперация" + Счетчик);
		ТекущийЭлементГалки  =  ЭлементыФормы.Найти("ПолеГалки" + Счетчик);
		
		ТекущийЭлементНадписи.Заголовок   = СтрокаТаблицы.ВидОперации;
		ТекущийЭлементНадписи.Видимость   = Истина;
		ТекущийЭлементНадписи.ЦветТекста  = Цвета.Получить(3);
		ТекущийЭлементГалки.Картинка      = Новый Картинка;
	КонецЦикла;
	
	ЭлементыФормы.ТекстВыполненияЗакрытияМесяца.ЦветТекста = WebЦвета.СветлоКоралловый;
	ЭлементыФормы.ТекстВыполненияЗакрытияМесяца2.Заголовок = "";
	ЭтаФорма.Обновить();
КонецПроцедуры

Процедура ПроверитьАктуальность(ТекущаяТаблицаОпераций)
	ТаблицаНеактуальных = Неопределено;
	ЗакрытиеМесяца.ПолучитьНеАктуальныеРегОперации(СвойстваОрганизации.СписокОП, НачалоМесяца(ПериодРегистрации), КонецМесяца(ПериодРегистрации), , , ТаблицаНеактуальных);
	
	Для Каждого СтрокаТаблицы Из ТекущаяТаблицаОпераций Цикл
		Если СтрокаТаблицы.ВидОперации = "Контроль последовательности проведения документов"
			Или СтрокаТаблицы.ВидОперации =НазваниеРегОперацииФОТ
			Или СтрокаТаблицы.ВидОперации = "Формирование книги покупок и продаж" Тогда
			Продолжить;
		КонецЕсли;
		НеАктуально = Ложь;
		Если СтрокаТаблицы.Состояние = 1 Тогда
			Если СвойстваОрганизации.ЕстьОП И (СтрокаТаблицы.Группа = 1 Или СтрокаТаблицы.Группа = 3) Тогда
				СписокОП = СвойстваОрганизации.СписокОП;
				
				Для Каждого ОП Из СписокОП Цикл
					НеАктуальнаяОперация = ТаблицаНеАктуальных.НайтиСтроки(Новый Структура("Организация, Группа, ВидОперации", ОП.Значение, СтрокаТаблицы.Группа, СтрокаТаблицы.ВидОперации));
					Если  Не НеАктуальнаяОперация = Неопределено И Не НеАктуальнаяОперация.Количество() = 0 Тогда
						НеАктуально = Истина;
						Прервать;
					КонецЕсли;
					
				КонецЦикла;
			Иначе
				НеАктуальнаяОперация = ТаблицаНеАктуальных.НайтиСтроки(Новый Структура("Группа, ВидОперации", СтрокаТаблицы.Группа, СтрокаТаблицы.ВидОперации));
				Если  Не НеАктуальнаяОперация = Неопределено И Не НеАктуальнаяОперация.Количество() = 0 Тогда
					НеАктуально = Истина;
				КонецЕсли;
				
			КонецЕсли;
			Если  НеАктуально Тогда
				СтрокаТаблицы.Состояние = 4;
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПолучитьКоличествоОжидаемыхОпераций(НомерГруппы,КоличествоГруппы)
	
	СписокОП = СвойстваОрганизации.СписокОП;
	ТаблицаДляПечати = ЗакрытиеМесяца.СоставГруппыРегОпераций(НомерГруппы,Организация,ПериодРегистрации,, СписокОП);
	ПроставитьСостоянияДляТаблицыСОрганизациями(ТаблицаДляПечати);
	
	ВыполненоСОшибками   = ТаблицаДляПечати.НайтиСтроки(Новый Структура("Состояние",2)).Количество();
	НеВыполнено          = ТаблицаДляПечати.НайтиСтроки(Новый Структура("Состояние",3)).Количество();
	НеАктуально          = ТаблицаДляПечати.НайтиСтроки(Новый Структура("Состояние",4)).Количество();
	
	КоличествоГруппы = ВыполненоСОшибками + НеВыполнено + НеАктуально;
	
КонецПроцедуры

Процедура УправлениеЭлементамиФормы()
	
	Если СвойстваОрганизации = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЭлементыФормы.Панель4.Видимость   = ВключатьОбособленныеПодразделения Или НЕ СвойстваОрганизации.ЕстьОП;
	ЭлементыФормы.Панель4.Доступность = ВключатьОбособленныеПодразделения Или НЕ СвойстваОрганизации.ЕстьОП;
	ЭлементыФормы.Стрелка3.Видимость  = ВключатьОбособленныеПодразделения Или НЕ СвойстваОрганизации.ЕстьОП;
	
	ЭлементыФормы.КнопкаВыполнить.Видимость = Не ВключатьОбособленныеПодразделения;
	ЭлементыФормы.КнопкаОтменить.Видимость = Не ВключатьОбособленныеПодразделения;
	
	ЦветАктивнойПанели   = Новый Цвет(234, 229, 216);
	ЦветНеАктивнойПанели = Новый Цвет(255, 251, 240);
	
	ЦветАктивнойРамки   = Новый Рамка(ТипРамкиЭлементаУправления.БезРамки);
	ЦветНеАктивнойРамки = Новый Рамка(ТипРамкиЭлементаУправления.Одинарная);
	
	Этап1АктивнойПанели = Картинки.Получить(11);
	Этап2АктивнойПанели = Картинки.Получить(21);
	Этап3АктивнойПанели = Картинки.Получить(31);
	Этап4АктивнойПанели = Картинки.Получить(41);
	
	Этап1НеАктивнойПанели = Картинки.Получить(12);
	Этап2НеАктивнойПанели = Картинки.Получить(22);
	Этап3НеАктивнойПанели = Картинки.Получить(32);
	Этап4НеАктивнойПанели = Картинки.Получить(42);	
	
	Если  ВключатьОбособленныеПодразделения Тогда
		ЭлементыФормы.Панель1.ЦветФона = ЦветНеАктивнойПанели;
		ЭлементыФормы.Панель1.Рамка = ЦветНеАктивнойРамки;
		ЭлементыФормы.КартинкаЭтапа1.Картинка = Этап1НеАктивнойПанели;
		
		ЭлементыФормы.Панель2.Рамка = ЦветАктивнойРамки;
		ЭлементыФормы.Панель2.ЦветФона = ЦветАктивнойПанели;
		ЭлементыФормы.КартинкаЭтапа2.Картинка = Этап2АктивнойПанели;
		
		ЭлементыФормы.Панель3.ЦветФона = ЦветНЕАктивнойПанели;
		ЭлементыФормы.Панель3.Рамка = ЦветНЕАктивнойРамки;
		ЭлементыФормы.КартинкаЭтапа3.Картинка = Этап3НЕАктивнойПанели;
		
		ЭлементыФормы.Панель4.ЦветФона = ЦветАктивнойПанели;
		ЭлементыФормы.Панель4.Рамка = ЦветАктивнойРамки;
		ЭлементыФормы.КартинкаЭтапа4.Картинка = Этап4АктивнойПанели;
		
	ИначеЕсли  СвойстваОрганизации.ЕстьОП  Тогда
		ЭлементыФормы.Панель1.ЦветФона = ЦветАктивнойПанели;
		ЭлементыФормы.Панель1.Рамка = ЦветАктивнойРамки;
		ЭлементыФормы.КартинкаЭтапа1.Картинка = Этап1АктивнойПанели;
		
		ЭлементыФормы.Панель2.ЦветФона = ЦветНеАктивнойПанели;
		ЭлементыФормы.Панель2.Рамка = ЦветНеАктивнойРамки;
		ЭлементыФормы.КартинкаЭтапа2.Картинка = Этап2НЕАктивнойПанели;
		
		ЭлементыФормы.Панель3.ЦветФона = ЦветАктивнойПанели;
		ЭлементыФормы.Панель3.Рамка = ЦветАктивнойРамки;
		ЭлементыФормы.КартинкаЭтапа3.Картинка = Этап3АктивнойПанели;
		
		ЭлементыФормы.Панель4.ЦветФона = ЦветНЕАктивнойПанели;
		ЭлементыФормы.Панель4.Рамка = ЦветНЕАктивнойРамки;
		ЭлементыФормы.КартинкаЭтапа4.Картинка = Этап4НЕАктивнойПанели;
		
	Иначе
		ЭлементыФормы.Панель1.ЦветФона = ЦветАктивнойПанели;
		ЭлементыФормы.Панель1.Рамка = ЦветАктивнойРамки;
		ЭлементыФормы.КартинкаЭтапа1.Картинка = Этап1АктивнойПанели;
		
		ЭлементыФормы.Панель2.ЦветФона = ЦветАктивнойПанели;
		ЭлементыФормы.Панель2.Рамка = ЦветАктивнойРамки;
		ЭлементыФормы.КартинкаЭтапа2.Картинка = Этап2АктивнойПанели;
		
		ЭлементыФормы.Панель3.ЦветФона = ЦветАктивнойПанели;
		ЭлементыФормы.Панель3.Рамка = ЦветАктивнойРамки;
		ЭлементыФормы.КартинкаЭтапа3.Картинка = Этап3АктивнойПанели;
		
		ЭлементыФормы.Панель4.ЦветФона = ЦветАктивнойПанели;
		ЭлементыФормы.Панель4.Рамка = ЦветАктивнойРамки;
		ЭлементыФормы.КартинкаЭтапа4.Картинка = Этап4АктивнойПанели;
	КонецЕсли;
	
КонецПроцедуры

Процедура УправлениеОрганизациями()
	
	Если ПолеОрганизация = Неопределено Тогда
		Организация                       = ПолеОрганизация;
		ВключатьОбособленныеПодразделения = Ложь;
	Иначе
		Организация                       = ТаблицаОрганизаций[ПолеОрганизация].Организация;
		ВключатьОбособленныеПодразделения = ТаблицаОрганизаций[ПолеОрганизация].ВключатьОбособленныеПодразделения;
	КонецЕсли;
	
	СписокОП = ОбщегоНазначения.ПолучитьСписокОбособленныхПодразделенийОрганизации(Организация);
	СписокОП.Добавить(Организация.Ссылка);
	
	Если ЗначениеЗаполнено(Организация.ГоловнаяОрганизация) Тогда
		СвойстваОрганизации = Новый Структура("Организация,ЕстьОП,ГоловнаяОрганизация,СписокОП", Организация, Истина, Организация.ГоловнаяОрганизация,СписокОП);
		
	Иначе
		
		СвойстваОрганизации = Новый Структура("Организация,ЕстьОП,ГоловнаяОрганизация,СписокОП", Организация, НЕ СписокОП.Количество() = 1, Организация, СписокОП);
	КонецЕсли;
	
КонецПроцедуры


Функция ПроставитьСостояния(Начало, Конец, ТаблицаВыполненныхОпераций, НомерГруппы)
	
	Для Счетчик = Начало ПО Конец Цикл  
		
		СтрокаТаблицы = ТаблицаОпераций.Получить(Счетчик);
		ПроставитьСостояние(СтрокаТаблицы, ТаблицаВыполненныхОпераций);
		СтрокаТаблицы.Группа = НомерГруппы;
	КонецЦикла;
	
КонецФункции

Процедура ПроставитьСостояние(СтрокаТаблицы, ТаблицаВыполненныхОпераций)
	
	Если ТаблицаВыполненныхОпераций = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если СтрокаТаблицы.Состояние = 5 Тогда
		Возврат;
	КонецЕсли;
	СтрокаВыполненныхОпераций = ТаблицаВыполненныхОпераций.Найти(СтрокаТаблицы.ВидОперации, "ВидОперации");
	
	Если СтрокаВыполненныхОпераций = Неопределено Тогда
		СтрокаТаблицы.Состояние = 5;
		СтрокаТаблицы.Требуется = Ложь;
		Возврат;
		
	КонецЕсли;
	
	Если СтрокаВыполненныхОпераций.Требуется = Неопределено Тогда
		СтрокаТаблицы.Состояние = 5;
		
		
	ИначеЕсли Не СтрокаВыполненныхОпераций.Требуется И СтрокаВыполненныхОпераций.Состояние = Перечисления.ВидыСостоянийРегламентныхОпераций.НЕВыполнено Тогда
		СтрокаТаблицы.Состояние = 5;
		
	Иначе
		Если СтрокаВыполненныхОпераций.Состояние = Перечисления.ВидыСостоянийРегламентныхОпераций.Выполнено Тогда
			СтрокаТаблицы.Состояние = ?(СтрокаВыполненныхОпераций.РучнаяКорректировка,0,1);
			
		ИначеЕсли СтрокаВыполненныхОпераций.Состояние = Перечисления.ВидыСостоянийРегламентныхОпераций.ВыполненоСОшибками Тогда
			СтрокаТаблицы.Состояние = 2;
			
		ИначеЕсли СтрокаВыполненныхОпераций.Состояние = Перечисления.ВидыСостоянийРегламентныхОпераций.НеВыполнено Тогда
			СтрокаТаблицы.Состояние = 3;
			
		ИначеЕсли СтрокаВыполненныхОпераций.Состояние = Перечисления.ВидыСостоянийРегламентныхОпераций.Пропущено Тогда
			СтрокаТаблицы.Состояние = 6;
			
		Иначе 
			СтрокаТаблицы.Состояние = 5;
			
		КонецЕсли;
		
	КонецЕсли;
	
	СтрокаТаблицы.Требуется = СтрокаВыполненныхОпераций.Требуется;
	СтрокаТаблицы.РучнаяКорректировка = СтрокаВыполненныхОпераций.РучнаяКорректировка;
	
КонецПроцедуры


Функция ПроставитьОсобыеСостояния(ТаблицаВыполненныхОпераций, НомерГруппы)
	
	Если ТаблицаВыполненныхОпераций = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	СтрокаТаблицы = ТаблицаОпераций.Получить(0);
	Если КонтролироватьПоследовательностьПроведения Тогда
		Результат = Обработки.УправлениеПоследовательностями.Создать().ПроверитьПоследовательность(Организация, КонецМесяца(ПериодРегистрации), Неопределено);
		СтрокаТаблицы.Состояние = ?(Результат, 0, 2);
	Иначе
		СтрокаТаблицы.Состояние = 5;
	КонецЕсли;
	
	
	СтрокаТаблицы = ТаблицаОпераций.Получить(1);
	СтрокаВыполненнойТаблицы = ТаблицаВыполненныхОпераций.Найти(НазваниеРегОперацииФОТ, "ВидОперации");    
	                                                                                                       
	Если СтрокаВыполненнойТаблицы = Неопределено Или Не СтрокаВыполненнойТаблицы.Требуется Тогда
		СтрокаТаблицы.Состояние = 5;
		СтрокаТаблицы.ПорядокСледования = 24;
		НачисляетсяФОТ = Ложь;
	Иначе
		 Если СтрокаВыполненнойТаблицы.Состояние = Перечисления.ВидыСостоянийРегламентныхОпераций.НеВыполнено Тогда
		     СтрокаТаблицы.Состояние = 3;
		 ИначеЕсли СтрокаВыполненнойТаблицы.Состояние = Перечисления.ВидыСостоянийРегламентныхОпераций.Пропущено Тогда
		     СтрокаТаблицы.Состояние = 6;
		 Иначе
			 СтрокаТаблицы.Состояние = 0;
		 КонецЕсли;
		 
		НачисляетсяФОТ = Истина;
	КонецЕсли;

	
	СтрокаТаблицы = ТаблицаОпераций.Получить(2);
	СтрокаВыполненнойТаблицы = ТаблицаВыполненныхОпераций.Найти("НДС", "ВидДокумента");
	СтрокаТаблицы.Состояние = ?(СтрокаВыполненнойТаблицы = Неопределено И НачисляетсяНДС, 3, ?(НачисляетсяНДС, ?(СтрокаВыполненнойТаблицы.Состояние = Перечисления.ВидыСостоянийРегламентныхОпераций.Выполнено,0,3), 5));
	СтрокаТаблицы.Требуется = НачисляетсяНДС;
		
	
КонецФункции

Процедура ПроставитьСостоянияДляТаблицыСОрганизациями(ТаблицаВыполненныхОпераций)
	
	ТаблицаВыполненныхОпераций.Колонки.Состояние.Имя = "Состояние2";
	ТаблицаВыполненныхОпераций.Колонки.Добавить("Состояние"  , Новый ОписаниеТипов("Число"));
	ТаблицаВыполненныхОпераций.Колонки.Добавить("Группа"  , Новый ОписаниеТипов("Число"));
	 
	Для Каждого СтрокаВыполненныхОпераций Из ТаблицаВыполненныхОпераций Цикл
		
		СтрокаВыполненныхОпераций.Группа = ЗакрытиеМесяца.ГруппаПоВидуОперации(СтрокаВыполненныхОпераций.ВидОперации);
		Если СтрокаВыполненныхОпераций.Требуется = Неопределено Тогда
			СтрокаВыполненныхОпераций.Состояние = 5;
		
		ИначеЕсли Не СтрокаВыполненныхОпераций.Требуется И Не СтрокаВыполненныхОпераций.Состояние2 = Перечисления.ВидыСостоянийРегламентныхОпераций.Выполнено Тогда
			СтрокаВыполненныхОпераций.Состояние = 5;
			
		Иначе
			Если СтрокаВыполненныхОпераций.Состояние2 = Перечисления.ВидыСостоянийРегламентныхОпераций.Выполнено Тогда
				СтрокаВыполненныхОпераций.Состояние = ?(СтрокаВыполненныхОпераций.РучнаяКорректировка,0,1);
				
			ИначеЕсли СтрокаВыполненныхОпераций.Состояние2 = Перечисления.ВидыСостоянийРегламентныхОпераций.ВыполненоСОшибками Тогда
				СтрокаВыполненныхОпераций.Состояние = 2;
				
			ИначеЕсли СтрокаВыполненныхОпераций.Состояние2 = Перечисления.ВидыСостоянийРегламентныхОпераций.НеВыполнено Тогда
				СтрокаВыполненныхОпераций.Состояние = 3;
				
			Иначе 
				СтрокаВыполненныхОпераций.Состояние = 5;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
ПроверитьАктуальность(ТаблицаВыполненныхОпераций);	
	
КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "РегОперация" Тогда
		УправлениеОперациями();
	КонецЕсли;
		
		
КонецПроцедуры

Процедура КнопкаВыполнитьНажатие(Элемент)
	
	ВыполнитьЗакрытиеМесяца();
	УправлениеОперациями()
	
КонецПроцедуры

Процедура КнопкаОтменитьНажатие(Элемент)
	
	ОтменитьЗакрытиеМесяца();
	УправлениеОперациями();
	
КонецПроцедуры

Процедура КнопкаСформироватьНажатие(Элемент)
	
	НайденаСправка = Ложь;
	Флаг1 = Ложь;
	Флаг2 = Ложь;
	Для Каждого Строка Из ТаблицаОпераций Цикл
		ВидОперации = Строка.ВидОперации;
		Если ВидОперации = Перечисления.ВидыРегламентныхОпераций.ЗакрытиеСчета44
			Или ВидОперации = Перечисления.ВидыРегламентныхОпераций.ЗакрытиеСчета97
			Или ВидОперации = Перечисления.ВидыРегламентныхОпераций.ЗакрытиеСчетов20_23_25_26
			Или ВидОперации = Перечисления.ВидыРегламентныхОпераций.ЗакрытиеСчетов90_91
			Или ВидОперации = Перечисления.ВидыРегламентныхОпераций.ПереоценкаВалютныхСредств
			Или ВидОперации = Перечисления.ВидыРегламентныхОпераций.РасчетДолейСписанияКосвенныхРасходов
			Или ВидОперации = Перечисления.ВидыРегламентныхОпераций.РасчетНалогаНаПрибыль
			Или ВидОперации = Перечисления.ВидыРегламентныхОпераций.РеформацияБаланса Тогда
			Если Строка.Состояние = 1 Тогда
				Если Флаг1 И ВидОперации = Перечисления.ВидыРегламентныхОпераций.ЗакрытиеСчета44 Тогда
					Продолжить;
				КонецЕсли;
				Если Флаг2 И ВидОперации = Перечисления.ВидыРегламентныхОпераций.РасчетНалогаНаПрибыль Тогда
					Продолжить;
				КонецЕсли;
				ЗакрытиеМесяца.СформироватьСправкиРасчеты(Организация, ПериодРегистрации, ВидОперации);
				НайденаСправка = Истина;
				Флаг1 = (Не Флаг1 И ВидОперации = Перечисления.ВидыРегламентныхОпераций.ЗакрытиеСчетов20_23_25_26);
				Флаг2 = (НЕ Флаг2 И ВидОперации = Перечисления.ВидыРегламентныхОпераций.ЗакрытиеСчетов90_91);
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	Если Не НайденаСправка Тогда
		ОбщегоНазначения.СообщитьИнформациюПользователю("Отсутствуют выполненные операции, по которым формируются справки-расчеты");
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьЗакрытиеМесяца (Знач НачалоВыполнения = "Все")
	
	НайденоНачало = Ложь;
	ГруппаОтказа = 100;
	Отказ = Ложь;
	БылОтказ = Ложь;
	
	Для Счетчик = 1 ПО ТаблицаОпераций.Количество() - 2 Цикл 
		
		СтрокаТаблицы = ТаблицаОпераций.Получить(Счетчик);
		
		Если НЕ СтрокаТаблицы.Требуется И СтрокаТаблицы.Состояние = 5 Тогда
			Продолжить;
		КонецЕсли;
		
		Если СтрокаТаблицы.Состояние = 6 Тогда  // пропущенные
			Продолжить;
		КонецЕсли;
		
		Если Не НайденоНачало Или (НачалоВыполнения = "Все") Тогда
			
			Если СтрокаТаблицы.Состояние = 0 Или    // выполнено вручную
				СтрокаТаблицы.Состояние = 1 Или    // выполнено 
				СтрокаТаблицы.Состояние = 5 Тогда  // не видно
				Продолжить;
			КонецЕсли;
			
		Если СвойстваОрганизации.ЕстьОП Тогда
			
			Если СтрокаТаблицы.Группа = 2 Или СтрокаТаблицы.Группа = 4 Тогда
				УправлениеОперациями(НЕ НачалоВыполнения="Все");
				Прервать;
			КонецЕсли;
		КонецЕсли;
			
			ЭлементыФормы.ТекстВыполненияЗакрытияМесяца.Заголовок  = "Выполняется:
			|" + СтрокаТаблицы.ВидОперации;
			ЭлементыФормы.ТекстВыполненияЗакрытияМесяца.ЦветТекста = WebЦвета.Черный;
			
			Если БылОтказ И ГруппаОтказа < СтрокаТаблицы.Группа Тогда
				Прервать;
			КонецЕсли;
			
			РегОперация = "";
			ВидОперацииТек = СтрокаТаблицы.ВидОперации;
			ГруппаТек      = СтрокаТаблицы.Группа;
			Если СтрокаТаблицы.ВидОперации = НазваниеРегОперацииФОТ И СтрокаТаблицы.Требуется Тогда
				Отказ = ВыполнитьРасчетЕСН();
				СтрокаТаблицы = ТаблицаОпераций.Получить(Счетчик);
			ИначеЕсли СтрокаТаблицы.ВидОперации = "Формирование книги покупок и продаж" И НачисляетсяНДС Тогда
				Отказ = ВыполнитьРасчетНДС();
			Иначе
				Если ПроверкаПовторовВидовОпераций("Регламентная операция(" + ВидОперацииТек+ ")") Тогда
					ОткрытьДокумент(ВидОперацииТек, Ложь, РегОперация,, СтрокаТаблицы);
					Отказ = РегОперация.ВыполнитьОперацию();
				Иначе 
					Возврат;
				КонецЕсли;
			КонецЕсли;
			
			Если Не БылОтказ Тогда
				БылОтказ = Отказ
			КонецЕсли;
			Если БылОтказ Тогда
				ГруппаОтказа = ГруппаТек;
			КонецЕсли;
			
			
		КонецЕсли;
		
		Если Не НайденоНачало Тогда
			НайденоНачало = (ВидОперацииТек = НачалоВыполнения);
			
		КонецЕсли;
		
		УправлениеОперациями(Ложь);
		
	КонецЦикла;
	УправлениеОперациями();
	ОбновитьНадписиФормы(Истина, Истина)
КонецПроцедуры

Процедура ОтменитьЗакрытиеМесяца (Знач Окончание = "Все") 
	
	НайденоОкончание = (Окончание = "Все");
	ЭтоОтмена = Истина;
	
	Для Счетчик = 1 ПО ТаблицаОпераций.Количество() - 1 - ?(НачисляетсяНДС, 1, 0) - ?(НачисляетсяФОТ, 1, 0) Цикл /// Отмена выполнения не распространяется на расчет ЕСН, последовательность и НДС 
		
		СтрокаТаблицы = ТаблицаОпераций.Получить(ТаблицаОпераций.Количество() - Счетчик);
		
		Если СтрокаТаблицы.Состояние = 6 Тогда  // пропущенные
			Продолжить;
		КонецЕсли;
		
		Если НЕ СтрокаТаблицы.Требуется Тогда
			Продолжить;
		КонецЕсли;
		
		Если СтрокаТаблицы.Состояние = 3 Или    // не выполнено 
			СтрокаТаблицы.Состояние = 5 Или  // не видно
			(Окончание = "Все" И СтрокаТаблицы.Состояние = 6) Тогда  // пропущено
			Продолжить;
		КонецЕсли;
		
		Если СвойстваОрганизации.ЕстьОП Тогда
			
			Если СтрокаТаблицы.Группа = 2 Или СтрокаТаблицы.Группа = 4 Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		РегОперация = "";
		ВидОперацииТек = СтрокаТаблицы.ВидОперации;
		ОткрытьДокумент(ВидОперацииТек, Ложь, РегОперация,, СтрокаТаблицы);
		РегОперация.ОтменитьОперацию();
		Если ВидОперацииТек = Окончание Тогда
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	УправлениеОперациями(, Истина);
	ЭтоОтмена = Ложь;

КонецПроцедуры

Функция ВыполнитьРасчетЕСН()
	
Возврат СоздатьОсобыйДокумент("РасчетЕСН") ;
	
КонецФункции

Функция ВыполнитьРасчетНДС()
	
КнигаПокупок = СоздатьОсобыйДокумент("ФормированиеЗаписейКнигиПокупок");
КнигаПродаж  = СоздатьОсобыйДокумент("ФормированиеЗаписейКнигиПродаж");

    Возврат КнигаПокупок И КнигаПокупок; 
	
КонецФункции

Функция СоздатьОсобыйДокумент(ВидДокумента)
	
	Запрос = Новый Запрос;
	
	УчетЗарплатыИКадровВоВнешнейПрограмме = Константы.УчетЗарплатыИКадровВоВнешнейПрограмме.Получить();
	
	Запрос.Текст = 
	
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетЕСН.Ссылка КАК РегОперация
	|ИЗ
	|	Документ.РасчетЕСН КАК РасчетЕСН
	|ГДЕ
	|	РасчетЕСН.Дата МЕЖДУ &ДатаЗакрытияНачало И &ДатаЗакрытияКонец
	|	И РасчетЕСН.Организация = &Организация
	|	И (НЕ РасчетЕСН.ПометкаУдаления)";
		
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ДатаЗакрытияНачало",НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("ДатаЗакрытияКонец",КонецМесяца(ПериодРегистрации));
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "РасчетЕСН", ВидДокумента);
	
	Если УчетЗарплатыИКадровВоВнешнейПрограмме Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "РасчетЕСН", "ОтражениеЗарплатыВРеглУчете");
	КонецЕсли;
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		
		Если ВидДокумента = "РасчетЕСН" Тогда
			Если УчетЗарплатыИКадровВоВнешнейПрограмме Тогда
			Возврат Ложь;
				Иначе
			РегОперация = Документы.РасчетЕСН.СоздатьДокумент();
		КонецЕсли;
			РегОперация.ПериодРегистрации = ПериодРегистрации;
		ИначеЕсли ВидДокумента = "ФормированиеЗаписейКнигиПокупок" Тогда
			РегОперация = Документы.ФормированиеЗаписейКнигиПокупок.СоздатьДокумент();
		Иначе
			РегОперация = Документы.ФормированиеЗаписейКнигиПродаж.СоздатьДокумент();
		КонецЕсли;
		РегОперация.Дата = КонецМесяца(ПериодРегистрации);
		РегОперация.Организация = Организация;
	Иначе
		
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		РегОперация = Выборка.РегОперация.ПолучитьОбъект();
		Если РегОперация.Проведен Тогда
			Возврат Ложь; // документ уже создан и проведен
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ ВидДокумента = "РасчетЕСН" Тогда
		РегОперация.ЗаполнитьДокумент(,Ложь);
	КонецЕсли;
	
	Попытка
		РегОперация.Записать(РежимЗаписиДокумента.Проведение);
		Возврат  Ложь;
	Исключение
		Возврат Истина
	КонецПопытки;

КонецФункции

Процедура УстановитьГраницуПроведенияЗакрытияМесяц(ВидОперации)
	
	Для Каждого Строка Из ТаблицаОпераций Цикл
		
		Если Не Строка.Состояние = 4 Тогда
			Продолжить;
		КонецЕсли;
		МенеджерЗаписиРегистра = РегистрыСведений.НеАктуальныеРегламентныеОперации.СоздатьМенеджерЗаписи();
		МенеджерЗаписиРегистра.Организация = Строка.Организация;
		МенеджерЗаписиРегистра.Дата = КонецМесяца(ПериодРегистрации);
		МенеджерЗаписиРегистра.Группа = Строка.Группа;
		МенеджерЗаписиРегистра.ВидОперации = Строка.ВидОперации;
		МенеджерЗаписиРегистра.Прочитать();
		МенеджерЗаписиРегистра.Удалить();
		Если Строка.ВидОперации = ВидОперации Тогда
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
		
	
КонецПроцедуры

Процедура ПечатьОтчетаВыполненныхОперациях(ВидОперации) 
	
	ТаблицаДанных = Новый ТаблицаЗначений;
	ТаблицаДанных.Колонки.Добавить("ВидОперации", Новый ОписаниеТипов("Строка, ПеречислениеСсылка.ВидыРегламентныхОпераций",, Новый КвалификаторыСтроки(100)));
	ТаблицаДанных.Колонки.Добавить("Состояние"  , Новый ОписаниеТипов("Число"));
	ТаблицаДанных.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	
	СтрокаТаблицыОпераций = ТаблицаОпераций.Получить(0);
	

	Если Не ВключатьОбособленныеПодразделения Тогда
		ТаблицаДляПечати =  ТаблицаОпераций.Скопировать();
	Иначе
		СписокОП = СвойстваОрганизации.СписокОП;
		ТаблицаДляПечати = ЗакрытиеМесяца.СоставГруппыРегОпераций("Все",Организация,ПериодРегистрации,, СписокОП);
		ПроставитьСостоянияДляТаблицыСОрганизациями(ТаблицаДляПечати);
		НоваяСтрока = ТаблицаДанных.Вставить(0);
		НоваяСтрока.ВидОперации = СтрокаТаблицыОпераций.ВидОперации;
		НоваяСтрока.Состояние = СтрокаТаблицыОпераций.Состояние;
		НоваяСтрока.Организация = СтрокаТаблицыОпераций.Организация;
		
	КонецЕсли;

	Для Каждого СтрокаТаблицы Из ТаблицаДляПечати Цикл
		НоваяСтрока = ТаблицаДанных.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
	КонецЦикла;
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Отчет_о_выполнении_операций";
	
	Макет = ПолучитьМакет("ВыполненныеОперации");
	ОбластьМакета       = Макет.ПолучитьОбласть("Заголовок");
	ОбластьСостояние    = Макет.ПолучитьОбласть("Состояние");
	ОбластьМакетаОперация                  = Макет.ПолучитьОбласть("Операция");
	ОбластьМакетаОбособленноеПодразделение = Макет.ПолучитьОбласть("ОбособленноеПодразделение");
	
	ОбластьМакета.Параметры.Организация    = СтандартныеОтчеты.ПолучитьТекстОрганизация(ЭтотОбъект);
	ОбластьМакета.Параметры.Период         = Формат(ПериодРегистрации, "ДФ='MMММ yyyy ""г.""'");
	ОбластьМакета.Параметры.ТекстСостояние = " на " + Формат(ТекущаяДата(), "ДФ=dd.MM.yyyy");
	ТабДокумент.Вывести(ОбластьМакета);
	
	ВсеСостояния = Ложь;
	ТекстСостояние = "";
	Если ВидОперации = "Все" Тогда
		Начало = 1;
		Конец = ?(ВключатьОбособленныеПодразделения, 4, 6);
	Иначе
		Начало = 2;
		Конец = 4;
		ВсеСостояния = Истина;
	КонецЕсли;
		
	Запрос = Новый Запрос;
	Состояние = Начало;
	Пока Состояние <= Конец Цикл
		Если Состояние = 5 Тогда
			Состояние = 6;
		КонецЕсли;
		
		Состояния = Состояние;
		Если Состояние = 1 Тогда 
			ТекстСостояние = "Список выполненных операций";
			Состояния = Новый Массив;
			Состояния.Добавить(0);
			Состояния.Добавить(1);
		ИначеЕсли Состояние = 2 Тогда
			ТекстСостояние = "Список операций, выполненных с ошибками";
		ИначеЕсли Состояние = 3 Тогда
			ТекстСостояние = "Список невыполненных операций";
		ИначеЕсли Состояние = 4 Тогда
			ТекстСостояние = "Список операций, рекомендуемых выполнить повторно";
		ИначеЕсли Состояние = 6 Тогда
			ТекстСостояние = "Список пропущенных операций";
		Иначе
			ТекстСостояние = "Состояние выполнения операции """ + ВидОперации + """";
		КонецЕсли;
		
		КоличествоОпераций   = ТаблицаОпераций.НайтиСтроки(Новый Структура("Состояние",Состояние)).Количество();

		ОбластьСостояние.Параметры.Состояние = ТекстСостояние;
		ТабДокумент.Вывести(ОбластьСостояние);
		
		Если КоличествоОпераций = 0 Тогда
			ОбластьМакетаОперация.Параметры.Операция = "Операций нет";
			ТабДокумент.Вывести(ОбластьМакетаОперация);
			Состояние = Состояние + 1;
			Продолжить;
		КонецЕсли;
		
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаОпераций.Состояние,
		|	ТаблицаОпераций.ВидОперации,
		|	ТаблицаОпераций.Организация
		|ПОМЕСТИТЬ ТаблицаОпераций
		|ИЗ
		|	&ТаблицаОпераций КАК ТаблицаОпераций
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаОпераций.Организация КАК Поле1,
		|	ТаблицаОпераций.ВидОперации КАК Поле2,
		|	ВЫБОР
		|		КОГДА ТаблицаОпераций.Состояние = 3
		|			ТОГДА ""Операция не выполнена""
		|	КОНЕЦ КАК Поле3
		|ИЗ
		|	ТаблицаОпераций КАК ТаблицаОпераций
		|ГДЕ
		|	ТаблицаОпераций.Состояние В(&Состояние)";
		
		Если Не ВсеСостояния Тогда
			Если Не ВключатьОбособленныеПодразделения Тогда
				Запрос.Текст = СтрЗаменить(Запрос.Текст, "КАК Поле2", "КАК Поле1");
				Запрос.Текст = СтрЗаменить(Запрос.Текст, "Организация КАК Поле1", "Организация КАК Поле2");
			КонецЕсли;
		Иначе
			Запрос.Текст = Запрос.Текст + "	И ТаблицаОпераций.ВидОперации = &ВидОперации";
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "КАК Поле3", "КАК Поле1");
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "Организация КАК Поле1", "Организация КАК Поле2");
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВидОперации КАК Поле2", "ВидОперации КАК Поле3");
		КонецЕсли;
		
		Запрос.Текст = Запрос.Текст + "
		|ИТОГИ ПО
		|	Поле1,
		|	Поле2,
		|	Поле3";
		
		Запрос.УстановитьПараметр("ТаблицаОпераций", ТаблицаДанных);
		Запрос.УстановитьПараметр("Состояние"      , Состояния); 
		Запрос.УстановитьПараметр("ВидОперации"    , ВидОперации);
		
		ВыборкаГруппировка0 = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		НомерОперации = 1;
		
		Пока ВыборкаГруппировка0.Следующий() Цикл
			Если Не ВключатьОбособленныеПодразделения Тогда
				ОбластьМакетаОперация.Параметры.Операция = "" + НомерОперации + ". " + ВыборкаГруппировка0.Поле1;
				ТабДокумент.Вывести(ОбластьМакетаОперация);	
				НомерОперации = НомерОперации + 1;
			Иначе
				Если ТипЗнч(ВыборкаГруппировка0.Поле1) = Тип("СправочникСсылка.Организации") Тогда
					ОбластьМакетаОбособленноеПодразделение.Параметры.ОбособленноеПодразделение = СтандартныеОтчеты.ПолучитьТекстОрганизация(,ВыборкаГруппировка0.Поле1);
				Иначе
					ОбластьМакетаОбособленноеПодразделение.Параметры.ОбособленноеПодразделение = ВыборкаГруппировка0.Поле1;
				КонецЕсли;
				ТабДокумент.Вывести(ОбластьМакетаОбособленноеПодразделение);
				
				ВыборкаГруппировка1 = ВыборкаГруппировка0.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				НомерОперации = 1;
				Пока ВыборкаГруппировка1.Следующий() Цикл
					ОбластьМакетаОперация.Параметры.Операция = "" + НомерОперации + ". " + ВыборкаГруппировка1.Поле2;
					ТабДокумент.Вывести(ОбластьМакетаОперация);	
					НомерОперации = НомерОперации + 1;
				КонецЦикла;
			КонецЕсли;	
		КонецЦикла;
		
		Состояние = Состояние + 1;
	КонецЦикла;
	
	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент,,, "Отчет о выполнении операций");
	
КонецПроцедуры

// Процедура - обработчик события "Регулирование" элемента управления ПредставлениеПериодаРегистрации.
//
Процедура ПредставлениеПериодаРегистрацииРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	РаботаСДиалогами.РегулированиеПредставленияПериодаРегистрации(Направление, СтандартнаяОбработка, ПериодРегистрации, ПредставлениеПериодаРегистрации);

КонецПроцедуры

// Процедура - обработчик события "НачалоВыбораИзСписка" элемента управления ПредставлениеПериодаРегистрации.
//
Процедура ПредставлениеПериодаРегистрацииНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	РаботаСДиалогами.НачалоВыбораИзСпискаПредставленияПериодаРегистрации(Элемент, СтандартнаяОбработка, ПериодРегистрации, ЭтаФорма);

	
КонецПроцедуры

Процедура ПредставлениеПериодаРегистрацииОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	УправлениеОперациями();
	ЗакрытиеМесяца.УстановитьДоступность(Организация, ПериодРегистрации, ЭтаФорма);  
	
КонецПроцедуры

Процедура КнопкаОтчетПоМесяцуНажатие(Элемент)
	
	ПечатьОтчетаВыполненныхОперациях("Все");

КонецПроцедуры



ВидыСостояний = Новый Соответствие;
ВидыСостояний.Вставить(1, "Выполнено");
ВидыСостояний.Вставить(0, "Выполнено вручную");
ВидыСостояний.Вставить(2, "Выполнено с ошибками");
ВидыСостояний.Вставить(3, "Не выполнено");
ВидыСостояний.Вставить(4, "Рекомендуется выполнить повторно");
ВидыСостояний.Вставить(5, "Не показывать");
ВидыСостояний.Вставить(6, "Пропущено");

Цвета = Новый Соответствие;
Цвета.Вставить(1, WebЦвета.Зеленый);
Цвета.Вставить(0, WebЦвета.Зеленый);
Цвета.Вставить(2, WebЦвета.СветлоКоралловый);
Цвета.Вставить(3, WebЦвета.Черный);
Цвета.Вставить(4, WebЦвета.СероСиний);
Цвета.Вставить(5, WebЦвета.Белый);
Цвета.Вставить(6, WebЦвета.Черный);

Картинки = Новый Соответствие;
Картинки.Вставить(1, БиблиотекаКартинок.ОперацияВыполненаУспешно);
Картинки.Вставить(0, БиблиотекаКартинок.ОперацияИсправлена);
Картинки.Вставить(2, БиблиотекаКартинок.ОперацияВыполненаСОшибками);
Картинки.Вставить(3, Новый Картинка);
Картинки.Вставить(4, БиблиотекаКартинок.ОперацияВыполненаУспешно);
Картинки.Вставить(5, Новый Картинка);
Картинки.Вставить(11, БиблиотекаКартинок.Этап1ТемныйФон);
Картинки.Вставить(12, БиблиотекаКартинок.Этап1СветлыйФон);
Картинки.Вставить(21, БиблиотекаКартинок.Этап2ТемныйФон);
Картинки.Вставить(22, БиблиотекаКартинок.Этап2СветлыйФон);
Картинки.Вставить(31, БиблиотекаКартинок.Этап3ТемныйФон);
Картинки.Вставить(32, БиблиотекаКартинок.Этап3СветлыйФон);
Картинки.Вставить(41, БиблиотекаКартинок.Этап4ТемныйФон);
Картинки.Вставить(42, БиблиотекаКартинок.Этап4СветлыйФон);
Картинки.Вставить(7,  БиблиотекаКартинок.ЖурналПроводок);
Картинки.Вставить(51, БиблиотекаКартинок.Провести);
Картинки.Вставить(52, БиблиотекаКартинок.ОтменаПроведения);
Картинки.Вставить(6,  БиблиотекаКартинок.ОперацияПропущена);

ОбработчикПодключен = Ложь;

КонтролироватьПоследовательностьПроведения = Константы.КонтролироватьПоследовательностьПроведения.Получить();
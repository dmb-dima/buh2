#Если Клиент Тогда

// Процедура по заданным значениям реквизитов перезаполняет
// данными табличную часть
//
// Параметры
//  НЕТ
// Возвращаемые значения
//  НЕТ
Процедура ОбновитьТаблицу() Экспорт

	КонтактнаяИнформация.Очистить();
	Если ОбъектКонтактнойИнформации = Неопределено ИЛИ ОбъектКонтактнойИнформации.Пустая() Тогда
		Возврат;
	КонецЕсли; 
	
	Запрос = Новый Запрос();

	Запрос.УстановитьПараметр("Объект"                        , ОбъектКонтактнойИнформации);
	Запрос.УстановитьПараметр("ВидОбъектаКонтактнойИнформации", ВидОбъектаКонтактнойИнформации);
	Запрос.УстановитьПараметр("ПустаяСтрока"                  , "");
	Запрос.УстановитьПараметр("ТекущаяДата"                   , ТекущаяДата());

	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|
	|	КонтактнаяИнформация.Объект КАК Объект,
	|
	|	ВЫБОР КОГДА
	|		КонтактнаяИнформация.ЗначениеПоУмолчанию ЕСТЬ NULL
	|	ТОГДА
	|		ЛОЖЬ
	|	ИНАЧЕ
	|		КонтактнаяИнформация.ЗначениеПоУмолчанию
	|	КОНЕЦ КАК ЗначениеПоУмолчанию,
	|
	|	ВидыКонтактнойИнформации.Тип    КАК Тип,
	|	ВидыКонтактнойИнформации.Ссылка КАК Вид,
	|
	|	ВЫБОР КОГДА
	|		НЕ КонтактнаяИнформация.Объект ЕСТЬ NULL
	|	ТОГДА
	|		КонтактнаяИнформация.Представление
	|	ИНАЧЕ
	|		&ПустаяСтрока
	|	КОНЕЦ КАК Представление,
	|
	|	ВЫБОР КОГДА
	|		НЕ КонтактнаяИнформация.Объект ЕСТЬ NULL
	|	ТОГДА
	|		КонтактнаяИнформация.Комментарий
	|	ИНАЧЕ
	|		&ПустаяСтрока
	|	КОНЕЦ  КАК Комментарий
	|	
	|ИЗ
	|
	|	Справочник.ВидыКонтактнойИнформации КАК ВидыКонтактнойИнформации
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|	ПО
	|		ВидыКонтактнойИнформации.Ссылка = КонтактнаяИнформация.Вид
	|		И
	|		КонтактнаяИнформация.Объект = &Объект
	|ГДЕ
	|	ВидыКонтактнойИнформации.ВидОбъектаКонтактнойИнформации = &ВидОбъектаКонтактнойИнформации
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|
	|	КонтактнаяИнформация.Объект,
	|	КонтактнаяИнформация.ЗначениеПоУмолчанию,
	|	КонтактнаяИнформация.Тип,
	|	КонтактнаяИнформация.Вид,
	|	КонтактнаяИнформация.Представление,
	|	КонтактнаяИнформация.Комментарий
	|	
	|ИЗ
	|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|	
	|ГДЕ
	|	КонтактнаяИнформация.Объект = &Объект
	|	И
	|	НЕ КонтактнаяИнформация.Вид ССЫЛКА Справочник.ВидыКонтактнойИнформации
	|";

	КонтактнаяИнформация.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

// Процедура обрабатывает действие начала редактирования или ввода новой
// записи контактной информации
//
// Параметры
//  ВыбОбъект - объект уже существующей записи в регистре контактной информации
//  ВыбТип - тип уже существующей или новой записи в регистре контактной информации
//  ВыбВид - вид уже существующей или новой записи в регистре контактной информации
//  ТекущийОбъект - Объект новой записи в регистре контактной информации
//  ФормаВладелец - форма из которой произошел вызов процедуры
// Возвращаемые значения
//  НЕТ
Процедура РедактироватьЗапись(ВыбОбъект, ВыбТип, ВыбВид, ТекущийОбъект, ФормаВладелец, Копирование = Ложь) Экспорт
	
	МенеджерЗаписи = РегистрыСведений.КонтактнаяИнформация.СоздатьМенеджерЗаписи();

	Если НЕ ЗначениеЗаполнено(ВыбОбъект) Тогда
		// Выбрали запись, которой еще нет в регистре

		МенеджерЗаписи.Объект = ТекущийОбъект;
		МенеджерЗаписи.Тип    = ВыбТип;
		МенеджерЗаписи.Вид    = ВыбВид;
		
		Если Копирование Тогда

			НаборЗаписей = РегистрыСведений.КонтактнаяИнформация.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Объект.Значение      = ТекущийОбъект;
			НаборЗаписей.Отбор.Объект.Использование = Истина;
			НаборЗаписей.Отбор.Тип.Значение         = ВыбТип;
			НаборЗаписей.Отбор.Тип.Использование    = Истина;
			НаборЗаписей.Отбор.Вид.Значение         = ВыбВид;
			НаборЗаписей.Отбор.Вид.Использование    = Истина;
			
			НаборЗаписей.Прочитать();
			
			ТаблицаНабораЗаписей = НаборЗаписей.Выгрузить();

			Если ТаблицаНабораЗаписей.Количество() > 0 Тогда
				Для каждого Колонка Из ТаблицаНабораЗаписей.Колонки Цикл
					МенеджерЗаписи[Колонка.Имя] = ТаблицаНабораЗаписей[0][Колонка.Имя];
				КонецЦикла; 
			КонецЕсли; 
			
		КонецЕсли;
		
		МенеджерЗаписи.ЗначениеПоУмолчанию = Ложь;
		
	Иначе
		
		МенеджерЗаписи.Объект = ВыбОбъект;
		МенеджерЗаписи.Тип    = ВыбТип;
		МенеджерЗаписи.Вид    = ВыбВид;
		МенеджерЗаписи.Прочитать();
		
		Если НЕ МенеджерЗаписи.Выбран() Тогда
			МенеджерЗаписи.Объект = ВыбОбъект;
			МенеджерЗаписи.Тип    = ВыбТип;
			МенеджерЗаписи.Вид    = ВыбВид;
		КонецЕсли;
		
	КонецЕсли; 

	ФормаЗаписи = МенеджерЗаписи.ПолучитьФорму();
	ФормаЗаписи.ВладелецФормы = ФормаВладелец;
	ФормаЗаписи.ЗакрыватьПриВыборе = Ложь;
	ФормаЗаписи.Открыть();

КонецПроцедуры

// Процедура обрабатывает действие удаления
// записи контактной информации
//
// Параметры
//  ВыбОбъект - объект уже существующей записи в регистре контактной информации
//  ВыбТип - тип уже существующей или новой записи в регистре контактной информации
//  ВыбВид - вид уже существующей или новой записи в регистре контактной информации
// Возвращаемые значения
//  НЕТ
Процедура УдалитьЗапись(ВыбОбъект, ВыбТип, ВыбВид) Экспорт
	
	МенеджерЗаписи = РегистрыСведений.КонтактнаяИнформация.СоздатьМенеджерЗаписи();
	
	Если НЕ ЗначениеЗаполнено(ВыбОбъект) Тогда
		// Выбрали запись, которой еще нет в регистре
		Возврат;
	Иначе
		МенеджерЗаписи.Объект = ВыбОбъект;
		МенеджерЗаписи.Тип    = ВыбТип;
		МенеджерЗаписи.Вид    = ВыбВид;
		МенеджерЗаписи.Прочитать();
	КонецЕсли; 

	Если МенеджерЗаписи.Выбран() Тогда
		ОтветНаВопрос = Вопрос("Удалить запись?", РежимДиалогаВопрос.ДаНет);
		Если ОтветНаВопрос  = КодВозвратаДиалога.Да Тогда
			МенеджерЗаписи.Удалить();
		КонецЕсли; 
	КонецЕсли;

КонецПроцедуры

#КонецЕсли

Процедура КнопкаЗаполнитьНажатие(Кнопка)
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Предупреждение("Не заполнена организация!");
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Период) Тогда
		Предупреждение("Не заполнен период!");
		Возврат;
	КонецЕсли;
	
	мДатаНачалаПериодаОтчета = НачалоКвартала(Период);
	мДатаКонцаПериодаОтчета = КонецКвартала(Период);
		
	Отказ = Ложь;
	Если ЗемельныеУчастки.Количество() > 0 Тогда
		Ответ = Вопрос("Перед автозаполнением произойдет очистка табличных частей. Продолжить?", РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Нет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;

	// Очистим декларацию.
	ЗемельныеУчастки.Очистить();
	АвансовыеПлатежи.Очистить();
	
	
	// Выборка земельных участков и числа полных месяцев владения ими.
	// При этом если возникновение (прекращение) у налогоплательщика в течение налогового периода 
	// права собственности (постоянного (бессрочного) пользования, пожизненного наследуемого владения) 
	// на земельный участок (его долю) произошло до 15-го числа соответствующего месяца включительно, 
	// за полный месяц принимается месяц возникновения указанных прав. Если возникновение (прекращение)
	// указанных прав произошло после 15-го числа соответствующего месяца, за полный месяц принимается 
	// месяц прекращения указанных прав.
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация",    Организация);
	
	ПериодОтчета = НачалоКвартала(мДатаКонцаПериодаОтчета);
	
	ТекстОбъединяющегоЗапроса = "";
	
	Пока ПериодОтчета <= мДатаКонцаПериодаОтчета Цикл
		
		Запрос.УстановитьПараметр("Период", ПериодОтчета);
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВЫРАЗИТЬ(" + Формат(ПериодОтчета, "ДФ=MM") + " КАК ЧИСЛО) КАК НомерМесяца,
		|	РегистрацияЗемельныхУчастковСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|	NULL КАК НалоговаяЛьготаПоНалоговойБазе,
		|	1 КАК КоличествоМесяцев,
		|	0 КАК КоличествоМесяцевПримененияЛьготы
		|ПОМЕСТИТЬ
		|	ВладениеЗемельнымиУчастками" + Формат(ПериодОтчета, "ДФ=MM") + "
		|ИЗ
		|	(ВЫБРАТЬ
		|		РегистрацияЗемельныхУчастковСрезПоследних.ОсновноеСредство КАК ОсновноеСредство
		|	ИЗ
		|		РегистрСведений.РегистрацияЗемельныхУчастков.СрезПоследних(
		|				ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ), ДЕНЬ, 14),
		|				Организация = &Организация) КАК РегистрацияЗемельныхУчастковСрезПоследних
		|	ГДЕ
		|		РегистрацияЗемельныхУчастковСрезПоследних.ВключатьВНалоговуюБазу = ИСТИНА
		|
		|	ОБЪЕДИНИТЬ
		|	
		|	ВЫБРАТЬ
		|		РегистрацияЗемельныхУчастков.ОсновноеСредство
		|	ИЗ
		|		РегистрСведений.РегистрацияЗемельныхУчастков КАК РегистрацияЗемельныхУчастков
		|	ГДЕ
		|		РегистрацияЗемельныхУчастков.Организация = &Организация
		|		И РегистрацияЗемельныхУчастков.Период МЕЖДУ НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ) И ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ), ДЕНЬ, 14)
		|		И РегистрацияЗемельныхУчастков.ВключатьВНалоговуюБазу = ИСТИНА
		|	) КАК РегистрацияЗемельныхУчастковСрезПоследних
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(" + Формат(ПериодОтчета, "ДФ=MM") + " КАК ЧИСЛО) КАК НомерМесяца,
		|	РегистрацияЗемельныхУчастковСрезПоследнихПоЛьготам.ОсновноеСредство КАК ОсновноеСредство,
		|	РегистрацияЗемельныхУчастковСрезПоследнихПоЛьготам.НалоговаяЛьготаПоНалоговойБазе,
		|	0 КАК КоличествоМесяцев,
		|	1 КАК КоличествоМесяцевПримененияЛьготы
		|	ИЗ
		|		(ВЫБРАТЬ
		|			РегистрацияЗемельныхУчастковСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|			РегистрацияЗемельныхУчастковСрезПоследних.НалоговаяЛьготаПоНалоговойБазе
		|		ИЗ
		|			РегистрСведений.РегистрацияЗемельныхУчастков.СрезПоследних(КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&Период, МЕСЯЦ, -1), МЕСЯЦ),
		|					Организация = &Организация) КАК РегистрацияЗемельныхУчастковСрезПоследних
		|		ГДЕ
		|			РегистрацияЗемельныхУчастковСрезПоследних.ВключатьВНалоговуюБазу = ИСТИНА
		|			И РегистрацияЗемельныхУчастковСрезПоследних.НалоговаяЛьготаПоНалоговойБазе <> ЗНАЧЕНИЕ(Перечисление.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.НеПрименяется)
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			РегистрацияЗемельныхУчастков.ОсновноеСредство,
		|			РегистрацияЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе
		|		ИЗ
		|			РегистрСведений.РегистрацияЗемельныхУчастков КАК РегистрацияЗемельныхУчастков
		|		ГДЕ
		|			РегистрацияЗемельныхУчастков.Организация = &Организация
		|			И РегистрацияЗемельныхУчастков.Период МЕЖДУ НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ) И КОНЕЦПЕРИОДА(&Период, МЕСЯЦ)
		|			И РегистрацияЗемельныхУчастков.ВключатьВНалоговуюБазу = ИСТИНА
		|			И РегистрацияЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе <> ЗНАЧЕНИЕ(Перечисление.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.НеПрименяется)
		|		) КАК РегистрацияЗемельныхУчастковСрезПоследнихПоЛьготам
		|";
		Запрос.Выполнить();
		
		ТекстОбъединяющегоЗапроса = ТекстОбъединяющегоЗапроса
								  + ?(ПустаяСтрока(ТекстОбъединяющегоЗапроса), 
									  "ВЫБРАТЬ РАЗРЕШЕННЫЕ *
		                              |",
									  "ОБЪЕДИНИТЬ ВСЕ
									  |ВЫБРАТЬ *
		                              |")
								  + ?(ПустаяСтрока(ТекстОбъединяющегоЗапроса), 
									  "ПОМЕСТИТЬ ВладениеЗемельнымиУчастками
									  |",
									  "")
								  + "ИЗ ВладениеЗемельнымиУчастками" + Формат(ПериодОтчета, "ДФ=MM") + "
									|";
		
		ПериодОтчета = ДобавитьМесяц(ПериодОтчета, 1);	
		
	КонецЦикла;
	
	Запрос.Текст = ТекстОбъединяющегоЗапроса;
	Запрос.Выполнить();
	
	Запрос.УстановитьПараметр("Период", КонецГода(мДатаНачалаПериодаОтчета));
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВладениеУчастками.ОсновноеСредство,
	|	ЕСТЬNULL(ВладениеУчастками.КоличествоМесяцевВладения, 0) КАК КоличествоМесяцевВладения,
	|	РегистрацияЗемельныхУчастковСрезПоследних.КодКатегорииЗемель,
	|	РегистрацияЗемельныхУчастковСрезПоследних.КадастровыйНомер,
	|	РегистрацияЗемельныхУчастковСрезПоследних.КБК КАК КБК,
	|	ЕСТЬNULL(РегистрацияЗемельныхУчастковСрезПоследних.КадастроваяСтоимость, 0) КАК КадастроваяСтоимость,
	|	ВЫБОР
	|		КОГДА РегистрацияЗемельныхУчастковСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
	|		  ИЛИ РегистрацияЗемельныхУчастковСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.СДругимКодомПоОКАТО)
	|			ТОГДА РегистрацияЗемельныхУчастковСрезПоследних.КодПоОКАТО
	|		ИНАЧЕ РегистрацияЗемельныхУчастковСрезПоследних.Организация.КодПоОКАТО
	|	КОНЕЦ КАК КодПоОКАТО,
	|	ЕСТЬNULL(РегистрацияЗемельныхУчастковСрезПоследних.ОбщаяСобственность, ЛОЖЬ) КАК ОбщаяСобственность,
	|	ЕСТЬNULL(РегистрацияЗемельныхУчастковСрезПоследних.ДоляВПравеОбщейСобственностиЧислитель, 0) КАК ДоляВПравеОбщейСобственностиЧислитель,
	|	ЕСТЬNULL(РегистрацияЗемельныхУчастковСрезПоследних.ДоляВПравеОбщейСобственностиЗнаменатель, 0) КАК ДоляВПравеОбщейСобственностиЗнаменатель,
	|	ЕСТЬNULL(РегистрацияЗемельныхУчастковСрезПоследних.ЖилищноеСтроительство, ЛОЖЬ) КАК ЖилищноеСтроительство,
	|	ЕСТЬNULL(РегистрацияЗемельныхУчастковСрезПоследних.ДатаНачалаПроектирования, ДАТАВРЕМЯ(1,1,1)) КАК ДатаНачалаПроектирования,
	|	ЕСТЬNULL(РегистрацияЗемельныхУчастковСрезПоследних.ДатаРегистрацииПравНаОбъектНедвижимости, ДАТАВРЕМЯ(1,1,1)) КАК ДатаРегистрацииПравНаОбъектНедвижимости,
	|	ЕСТЬNULL(РегистрацияЗемельныхУчастковСрезПоследних.НалоговаяСтавка, 0) КАК НалоговаяСтавка,
	|	РегистрацияЗемельныхУчастковСрезПоследнихПоЛьготам.НалоговаяЛьготаПоНалоговойБазе,
	|	ЕСТЬNULL(Льготы.КоличествоМесяцевПримененияЛьготы, 0) КАК КоличествоМесяцевПримененияЛьготы,
	|	РегистрацияЗемельныхУчастковСрезПоследнихПоЛьготам.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395,
	|	ЕСТЬNULL(РегистрацияЗемельныхУчастковСрезПоследнихПоЛьготам.ДоляНеОблагаемойНалогомПлощадиЧислитель, 0) КАК ДоляНеОблагаемойНалогомПлощадиЧислитель,
	|	ЕСТЬNULL(РегистрацияЗемельныхУчастковСрезПоследнихПоЛьготам.ДоляНеОблагаемойНалогомПлощадиЗнаменатель, 0) КАК ДоляНеОблагаемойНалогомПлощадиЗнаменатель,
	|	РегистрацияЗемельныхУчастковСрезПоследних.КодНалоговойЛьготыУменьшениеНалоговойБазыПоСтатье391,
	|	ЕСТЬNULL(РегистрацияЗемельныхУчастковСрезПоследних.УменьшениеНалоговойБазыПоСтатье391, ЛОЖЬ) КАК УменьшениеНалоговойБазыПоСтатье391,
	|	ЕСТЬNULL(РегистрацияЗемельныхУчастковСрезПоследних.УменьшениеНалоговойБазыНаСумму, ЛОЖЬ) КАК УменьшениеНалоговойБазыНаСумму,
	|	ЕСТЬNULL(РегистрацияЗемельныхУчастковСрезПоследних.НеОблагаемаяНалогомСумма, 0) КАК НеОблагаемаяНалогомСумма,
	|	ЕСТЬNULL(РегистрацияЗемельныхУчастковСрезПоследних.СниженнаяНалоговаяСтавка, 0) КАК СниженнаяНалоговаяСтавка,
	|	ЕСТЬNULL(РегистрацияЗемельныхУчастковСрезПоследних.ПроцентУменьшенияСуммыНалога, 0) КАК ПроцентУменьшенияСуммыНалога,
	|	ЕСТЬNULL(РегистрацияЗемельныхУчастковСрезПоследних.СуммаУменьшенияСуммыНалога, 0) КАК СуммаУменьшенияСуммыНалога
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВладениеЗемельнымиУчастками.ОсновноеСредство КАК ОсновноеСредство,
	|		СУММА(ВладениеЗемельнымиУчастками.КоличествоМесяцев) КАК КоличествоМесяцевВладения
	|	ИЗ
	|		ВладениеЗемельнымиУчастками
	|	СГРУППИРОВАТЬ ПО
	|		ВладениеЗемельнымиУчастками.ОсновноеСредство
	|	) КАК ВладениеУчастками
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		(ВЫБРАТЬ
	|			ПрименениеЛьготы.ОсновноеСредство,
	|			ПрименениеЛьготы.КоличествоМесяцевПримененияЛьготы
	|		ИЗ
	|			(ВЫБРАТЬ 
	|				МАКСИМУМ(НомерМесяца) КАК НомерМесяца, 
	|				ОсновноеСредство
	|			ИЗ 
	|				ВладениеЗемельнымиУчастками 
	|			ГДЕ 
	|				НЕ (НалоговаяЛьготаПоНалоговойБазе ЕСТЬ NULL) 
	|			СГРУППИРОВАТЬ ПО 
	|				ОсновноеСредство
	|			) КАК НомераПоследнихМесяцев
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				ОсновноеСредство,
	|				НомерМесяца,
	|				НалоговаяЛьготаПоНалоговойБазе
	|			ИЗ 
	|				ВладениеЗемельнымиУчастками 
	|			ГДЕ 
	|				НЕ (НалоговаяЛьготаПоНалоговойБазе ЕСТЬ NULL)
	|			) КАК ВидыЛьгот
	|		ПО НомераПоследнихМесяцев.ОсновноеСредство = ВидыЛьгот.ОсновноеСредство
	|		 И НомераПоследнихМесяцев.НомерМесяца = ВидыЛьгот.НомерМесяца
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ВладениеЗемельнымиУчастками.ОсновноеСредство КАК ОсновноеСредство,
	|			СУММА(ВладениеЗемельнымиУчастками.КоличествоМесяцевПримененияЛьготы) КАК КоличествоМесяцевПримененияЛьготы
	|			ИЗ
	|				ВладениеЗемельнымиУчастками
	|			ГДЕ 
	|				НЕ (НалоговаяЛьготаПоНалоговойБазе ЕСТЬ NULL)
	|			СГРУППИРОВАТЬ ПО
	|				ВладениеЗемельнымиУчастками.ОсновноеСредство,
	|				ВладениеЗемельнымиУчастками.НалоговаяЛьготаПоНалоговойБазе
	|			) КАК ПрименениеЛьготы
	|		ПО ВидыЛьгот.ОсновноеСредство = ПрименениеЛьготы.ОсновноеСредство
	|		) КАК Льготы
	|	ПО ВладениеУчастками.ОсновноеСредство = Льготы.ОсновноеСредство
	|   ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегистрацияЗемельныхУчастков.СрезПоследних(&Период, Организация = &Организация И ВключатьВНалоговуюБазу = ИСТИНА) КАК РегистрацияЗемельныхУчастковСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегистрацияЗемельныхУчастков.СрезПоследних(&Период, Организация = &Организация И ВключатьВНалоговуюБазу = ИСТИНА И НалоговаяЛьготаПоНалоговойБазе <> ЗНАЧЕНИЕ(Перечисление.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.НеПрименяется)) КАК РегистрацияЗемельныхУчастковСрезПоследнихПоЛьготам
	|		ПО РегистрацияЗемельныхУчастковСрезПоследнихПоЛьготам.ОсновноеСредство = РегистрацияЗемельныхУчастковСрезПоследних.ОсновноеСредство
	|	ПО РегистрацияЗемельныхУчастковСрезПоследних.ОсновноеСредство = ВладениеУчастками.ОсновноеСредство
	|";
	ВыборкаЗемельныхУчастков = Запрос.Выполнить().Выбрать();
	
	Если ВыборкаЗемельныхУчастков.Количество() = 0 Тогда
		
		ИДКонфигурации = РегламентированнаяОтчетность.ИДКонфигурации();
		Если ИДКонфигурации = "УПП" ИЛИ ИДКонфигурации = "КА" Тогда
			
			Если ГлавныйИнтерфейс.Полный.Видимость Тогда
				ПутьКРегистру = "(меню ""Справочники"" - ""Внеоборотные активы"" - ""Регистрация земельных участков"")";
			ИначеЕсли ГлавныйИнтерфейс.БухгалтерскийИНалоговыйУчет.Видимость Тогда
				ПутьКРегистру = "(меню ""Справочники"" - ""Основные средства и нематериальные активы"" - ""Регистрация земельных участков"")";
			ИначеЕсли ГлавныйИнтерфейс.УправлениеОборудованием.Видимость Тогда
				ПутьКРегистру = "(меню ""Основные средства"" - ""Регистрация земельных участков"")";
			Иначе
				ПутьКРегистру = "(меню ""Операции"" - ""Регистры сведений..."" - ""Регистрация земельных участков"")";
			КонецЕсли;
			
		Иначе
			ПутьКРегистру = "(меню ""ОС"" - ""Регистрация земельных участков"")";
		КонецЕсли;
		
		Сообщить("Отсутствуют данные о регистрации земельных участков на " + ПредставлениеПериода(НачалоДня(мДатаНачалаПериодаОтчета), КонецДня(мДатаКонцаПериодаОтчета), "ФП = Истина") + " для " + Организация + "
		         |" + ПутьКРегистру + ".");
 		Возврат;
		
	КонецЕсли;
	
	ПериодОтчета = НачалоГода(мДатаНачалаПериодаОтчета);
	
	Пока ВыборкаЗемельныхУчастков.Следующий() Цикл
		
		Если НЕ (ВыборкаЗемельныхУчастков.ТипЗаписи() = ТипЗаписиЗапроса.ДетальнаяЗапись) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаТЧ = ЗемельныеУчастки.Добавить();
		
	    ЗаполнитьЗначенияСвойств(СтрокаТЧ, ВыборкаЗемельныхУчастков);
		
		// Доля в праве на земельный участок.
		Если НЕ ВыборкаЗемельныхУчастков.ОбщаяСобственность Тогда
			СтрокаТЧ.ДоляВПравеОбщейСобственностиЧислитель = 1;
			СтрокаТЧ.ДоляВПравеОбщейСобственностиЗнаменатель = 1;		
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе) Тогда
			СтрокаТЧ.НалоговаяЛьготаПоНалоговойБазе = Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.НеПрименяется;
		КонецЕсли;
		
		Если ВыборкаЗемельныхУчастков.ЖилищноеСтроительство 
		   И НЕ (ВыборкаЗемельныхУчастков.ДатаНачалаПроектирования = Дата(1,1,1)) Тогда
			
			Если ВыборкаЗемельныхУчастков.ДатаРегистрацииПравНаОбъектНедвижимости = Дата(1,1,1)
			   ИЛИ (НЕ (ВыборкаЗемельныхУчастков.ДатаРегистрацииПравНаОбъектНедвижимости = Дата(1,1,1))
			        И НЕ (ВыборкаЗемельныхУчастков.ДатаРегистрацииПравНаОбъектНедвижимости < ПериодОтчета)) Тогда
				
				ПериодПроектированияИСтроительства = УправлениеВнеоборотнымиАктивами.ОпределитьФактическийСрокИспользования(ВыборкаЗемельныхУчастков.ДатаНачалаПроектирования, ПериодОтчета) / 12;
				
				Если ПериодПроектированияИСтроительства > 3 Тогда
					СтрокаТЧ.ПериодСтроительства = 2;
				Иначе
					СтрокаТЧ.ПериодСтроительства = 1;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
	
	КонецЦикла;
	
	Расчет();
	
КонецПроцедуры

Процедура Расчет(Строка = Неопределено, ПересчитатьАП = Истина) Экспорт

	Если Строка = Неопределено Тогда
		Для Каждого Строка Из ЗемельныеУчастки Цикл
			Расчет(Строка, Ложь);
		КонецЦикла;
	Иначе
		
		ЧислоМесяцев = 3;
		
		Если Строка.КоличествоМесяцевПримененияЛьготы = 0 Тогда
			К1 = 1;
		Иначе			
			К1 = Макс((Строка.КоличествоМесяцевВладения - Строка.КоличествоМесяцевПримененияЛьготы) / ЧислоМесяцев, 0);
		КонецЕсли;
				
		Доля = Строка.ДоляВПравеОбщейСобственностиЧислитель / ?(Строка.ДоляВПравеОбщейСобственностиЗнаменатель = 0, 1, Строка.ДоляВПравеОбщейСобственностиЗнаменатель);
		Если Доля > 1 Тогда
			Доля = 1;
		КонецЕсли;
		
		Если Доля = 0 Тогда
			Значение = Строка.КадастроваяСтоимость;
		Иначе
			Значение = Строка.КадастроваяСтоимость * Доля;
		КонецЕсли;

		Сумма080и100 = 
		?(Строка.НалоговаяЛьготаПоНалоговойБазе = Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.УменьшениеНалоговойБазы и Строка.УменьшениеНалоговойБазыНаСумму, Строка.НеОблагаемаяНалогомСумма, 0) + 
		?(Строка.НалоговаяЛьготаПоНалоговойБазе = Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.УменьшениеНалоговойБазы и Строка.УменьшениеНалоговойБазыПоСтатье391, 10000, 0);

		Сумма140 = ?(Строка.НалоговаяЛьготаПоНалоговойБазе = Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.ОсвобождениеОтНалогообложенияМестное, Строка.КадастроваяСтоимость * (1 - К1),0);
		Сумма160 = ?(Строка.НалоговаяЛьготаПоНалоговойБазе = Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.ОсвобождениеОтНалогообложенияПоСтатье395, Строка.КадастроваяСтоимость * (1 - К1),0);
		Сумма140и160 = Сумма140 + Сумма160;

		// Доля
		ДоляНеоблагаемая = Строка.ДоляНеОблагаемойНалогомПлощадиЧислитель / ?(Строка.ДоляНеОблагаемойНалогомПлощадиЗнаменатель = 0, 1, Строка.ДоляНеОблагаемойНалогомПлощадиЗнаменатель);
		Если ДоляНеоблагаемая > 1 Тогда
			ДоляНеоблагаемая = 1;
		КонецЕсли;

		// Если владеем целиком всем участком земли.
		Если Сумма080и100 > 0 Тогда
			Строка.НалоговаяБаза = Макс(Значение - Сумма080и100, 0);
		ИначеЕсли Сумма140и160 > 0 Тогда
			Если Сумма140 > 0 Тогда
				Строка.НалоговаяБаза = Макс(Значение - Сумма140, 0);
			ИначеЕсли Сумма160 > 0 Тогда
				Строка.НалоговаяБаза = Макс(Значение - Сумма160, 0);
			КонецЕсли;
		ИначеЕсли ДоляНеоблагаемая > 0 Тогда
			Строка.НалоговаяБаза = Макс((Значение - (Значение * ДоляНеоблагаемая * (1 -  К1))), 0);
		Иначе
			// Льгот по данному объекту нет.
			Строка.НалоговаяБаза = Макс(Значение - Сумма080и100, 0);
		КонецЕсли;

		// Коэффициент определяется как отношение числа полных месяцев, в течение
		// которых данный земельный участок находился в собственности (постоянном
		// (бессрочном) пользовании, пожизненном наследуемом владении)
		// налогоплательщика, указанных по строке с кодом 210, к числу календарных
		// месяцев в отчетном периоде.
		//
		
		К2 = Строка.КоличествоМесяцевВладения / ЧислоМесяцев;

		Если (Не ЗначениеЗаполнено(Строка.ПериодСтроительства)) ИЛИ (Строка.ПериодСтроительства = 0) Тогда

			// Сумма исчисленного авансового платежа за отчетный период рассчитанная
			// как одна четвертая от произведения налоговой базы, указанной по строке
			// с кодом 190, налоговой ставки, указанной по строке с кодом 200,
			// и коэффициента К2, указанного по строке с кодом 220, деленного на сто.
			Строка.СуммаНалога = Строка.НалоговаяБаза * Строка.НалоговаяСтавка * К2 / 100 / 4;

		ИначеЕсли Строка.ПериодСтроительства = 1  Тогда

			// Сумма авансового платежа, которая определяется как одна четвертая
			// от произведения значений строк с кодами 190, 200 и 220 деленного
			// на сто и коэффициента 2, если значение по строке с кодом 040 равно "1"
			// ("3 года").
			Строка.СуммаНалога = Строка.НалоговаяБаза * Строка.НалоговаяСтавка * К2 / 100 * 2 / 4;

		Иначе//Если Строка.ПериодСтроительства = 2 Тогда

			// Сумма авансового платежа, которая определяется как одна четвертая
			// от произведения значений строк с кодами 190, 200 и 220 деленного
			// на сто и коэффициента 4, если значение по строке с кодом 040 равно "2"
			// ("свыше 3 лет").
			Строка.СуммаНалога = Строка.НалоговаяБаза * Строка.НалоговаяСтавка * К2 / 100 * 4 / 4;

		КонецЕсли;

		Строка.СуммаНалога = Макс(Строка.СуммаНалога, 0);
		
		Сумма250 = ?(ЗначениеЗаполнено(Строка.ПроцентУменьшенияСуммыНалога) 
		 			ИЛИ ЗначениеЗаполнено(Строка.СуммаУменьшенияСуммыНалога), 
					Строка.СуммаНалога * Строка.ПроцентУменьшенияСуммыНалога / 100 + Строка.СуммаУменьшенияСуммыНалога/4,0);
		Сумма270 = ?(ЗначениеЗаполнено(Строка.СниженнаяНалоговаяСтавка), 
					Строка.СуммаНалога - Строка.НалоговаяБаза * К2 / 4 * (Строка.СниженнаяНалоговаяСтавка / 100),0);
		Строка.СуммаНалогаКуплате = Макс(Строка.СуммаНалога - Сумма250 - Сумма270, 0);
		
	КонецЕсли;
	
	Если ПересчитатьАП Тогда
		ПерезаполнитьАвансовыеПлатежи();
	КонецЕсли;
	
КонецПроцедуры // Расчет()

Процедура ПерезаполнитьАвансовыеПлатежи()
	АвансовыеПлатежи.Очистить();
	Для Каждого Строка Из ЗемельныеУчастки Цикл
		СтрокаПоОКАТО = АвансовыеПлатежи.Найти(Строка.КодПоОКАТО, "КодПоОКАТО");
		Если СтрокаПоОКАТО = Неопределено Тогда
			СтрокаПоОКАТО = АвансовыеПлатежи.Добавить();
			СтрокаПоОКАТО.КодПоОКАТО = Строка.КодПоОКАТО;
		КонецЕсли;
		СтрокаПоОКАТО.Сумма = СтрокаПоОКАТО.Сумма + Строка.СуммаНалогаКуплате;		
	КонецЦикла;
КонецПроцедуры


Процедура ДействияФормыРегистрацияЗемельныхУчастков(Кнопка)
	ФормаРегистра = РегистрыСведений.РегистрацияЗемельныхУчастков.ПолучитьФормуСписка();
	ФормаРегистра.Открыть();
КонецПроцедуры


Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если Не СохранениеНастроек.ЗаполнитьНастройкиПриОткрытииОтчета(ОбработкаОбъект) Тогда
		
		Период = КонецКвартала(ОбщегоНазначения.ПолучитьРабочуюДату());
		
		СтруктураОбщихПараметров = ВосстановитьЗначение("ОбщиеПараметрыОтчетовХозрасчетный");
		Если ТипЗнч(СтруктураОбщихПараметров) = Тип("Структура") Тогда
			
			СтруктураОбщихПараметров.Свойство("КонецПериода", Период);
			
			Если Период = '00010101' тогда
				Период = КонецКвартала(ОбщегоНазначения.ПолучитьРабочуюДату());
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры


Процедура ПересчитатьСуммуНалогов(Элемент)
	СтрокаТабличнойЧасти = ЭлементыФормы.ЗемельныеУчастки.ТекущиеДанные;
	Расчет(СтрокаТабличнойЧасти);
КонецПроцедуры


Процедура СуммаНалогаПриИзменении(Элемент)
	Строка	 = ЭлементыФормы.ЗемельныеУчастки.ТекущиеДанные;
	К2 = Строка.КоличествоМесяцевВладения / 3;
	Сумма250 = ?(ЗначениеЗаполнено(Строка.ПроцентУменьшенияСуммыНалога) 
		 			ИЛИ ЗначениеЗаполнено(Строка.СуммаУменьшенияСуммыНалога), 
					Строка.СуммаНалога * Строка.ПроцентУменьшенияСуммыНалога / 100 + Строка.СуммаУменьшенияСуммыНалога,0);
	Сумма270 = ?(ЗначениеЗаполнено(Строка.СниженнаяНалоговаяСтавка), 
					Строка.СуммаНалога - Строка.НалоговаяБаза * К2 / 4 * (Строка.СниженнаяНалоговаяСтавка / 100),0);
	Строка.СуммаНалогаКуплате = Макс(Строка.СуммаНалога - Сумма250 - Сумма270, 0);
	ПерезаполнитьАвансовыеПлатежи();
КонецПроцедуры


Процедура СуммаНалогаКуплатеПриИзменении(Элемент)
	ПерезаполнитьАвансовыеПлатежи();
КонецПроцедуры

// Процедура вызывается по нажатию кнопки "<" формы.
//   Инициализирует изменение периода построения отчета.
//
Процедура КнопкаПредыдущийПериодНажатие(Элемент)

	ИзменитьПериод(-1);

КонецПроцедуры // КнопкаПредыдущийПериодНажатие()

// Процедура вызывается по нажатию кнопки ">" формы.
//   Инициализирует изменение периода построения отчета.
//
Процедура КнопкаСледующийПериодНажатие(Элемент)

	ИзменитьПериод(1);

КонецПроцедуры // КнопкаСледующийПериодНажатие()

// Процедура устанавливает границы периода построения отчета.
//
// Параметры:
//  Шаг          - число, количество стандартных периодов, на которое необходимо
//                 сдвигать период построения отчета;
//
Процедура ИзменитьПериод(Шаг)

	Период  = КонецМесяца(ДобавитьМесяц(Период, 3*Шаг)); 
	
	Если Формат(Период, "ДФ=к") = "4" Тогда
		ИзменитьПериод(Шаг);
	КонецЕсли;

	ПоказатьПериод();

КонецПроцедуры // ИзменитьПериод()

// Процедура управляет показом в форме периода построения отчета.
//
Процедура ПоказатьПериод()

	СтрПериодОтчета = ПредставлениеПериода(НачалоКвартала(Период), КонецКвартала(Период), "ФП = Истина" );

	// Покажем период в диалоге
	ЭлементыФормы.НадписьПериодСоставленияОтчета.Заголовок = СтрПериодОтчета;

КонецПроцедуры // ПоказатьПериод()

Процедура ПриОткрытии()
	
	ПоказатьПериод();

	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Организация = глЗначениеПеременной("ОсновнаяОрганизация");
	КонецЕсли;
		
КонецПроцедуры

Процедура ОсновныеДействияФормыПечать(Кнопка)
	СформироватьОтчет();
КонецПроцедуры

Процедура ЗемельныеУчасткиПриПолученииДанных(Элемент, ОформленияСтрок)
	Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		    		    		
		//ОформлениеСтроки.Ячейки.НалоговаяЛьгота.ОтображатьТекст = Истина;
		//ОформлениеСтроки.Ячейки.НалоговаяЛьгота.Текст           = УправлениеВнеоборотнымиАктивами.ПредставлениеНалоговойЛьготыПоЗемельномуНалогу(ОформлениеСтроки.ДанныеСтроки);
		ОформлениеСтроки.ДанныеСтроки.ТекстНалоговойЛьготы = УправлениеВнеоборотнымиАктивами.ПредставлениеНалоговойЛьготыПоЗемельномуНалогу(ОформлениеСтроки.ДанныеСтроки);
		
    КонецЦикла;
КонецПроцедуры

Процедура ЗемельныеУчасткиНалоговаяЛьготаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СтрокаТабличнойЧасти = ЭлементыФормы.ЗемельныеУчастки.ТекущиеДанные;
		
	Форма = ОбработкаОбъект.ПолучитьФорму("ФормаНастройкиЛьготы");
	Форма.СписокПараметров = СтрокаТабличнойЧасти;
	Форма.ОткрытьМодально();
	СтрокаТабличнойЧасти.ТекстНалоговойЛьготы = УправлениеВнеоборотнымиАктивами.ПредставлениеНалоговойЛьготыПоЗемельномуНалогу(СтрокаТабличнойЧасти);
	
	ПересчитатьСуммуНалогов(Элемент);
	
КонецПроцедуры

Процедура ЗемельныеУчасткиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если Копирование Тогда	
		ПерезаполнитьАвансовыеПлатежи();
	ИначеЕсли НоваяСтрока Тогда
		СтрокаТабличнойЧасти = ЭлементыФормы.ЗемельныеУчастки.ТекущиеДанные;
		СтрокаТабличнойЧасти.ДоляВПравеОбщейСобственностиЧислитель = 1;
		СтрокаТабличнойЧасти.ДоляВПравеОбщейСобственностиЗнаменатель = 1;
		СтрокаТабличнойЧасти.НалоговаяЛьготаПоНалоговойБазе = Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.НеПрименяется;
	КонецЕслИ;
	
КонецПроцедуры

Процедура ЗемельныеУчасткиКодКатегорииЗемельНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	КодЛьготы = УправлениеВнеоборотнымиАктивами.ПолучитьФормуВыбораКодаКатегорииЗемель(Элемент.Значение).ОткрытьМодально();
	
	Если НЕ (КодЛьготы = Неопределено) Тогда
		Элемент.Значение = КодЛьготы;
	КонецЕсли;
КонецПроцедуры

Процедура ЗемельныеУчасткиКодПоОКАТОПриИзменении(Элемент)
	ПерезаполнитьАвансовыеПлатежи();
КонецПроцедуры

Процедура ЗемельныеУчасткиПослеУдаления(Элемент)
	ПерезаполнитьАвансовыеПлатежи();
КонецПроцедуры


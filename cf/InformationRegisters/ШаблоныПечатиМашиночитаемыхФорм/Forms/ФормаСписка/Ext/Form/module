
Процедура РегистрСведенийСписокПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	Отказ = Истина;
	ДобавитьШаблоны();
	
КонецПроцедуры

Процедура РегистрСведенийСписокПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	УдалитьШаблоны();
	
КонецПроцедуры

Процедура РегистрСведенийСписокВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	Ответ = Вопрос("Шаблон будет выгружен на диск и открыт. Продолжить?", РежимДиалогаВопрос.ДаНет);
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                      |	ШаблоныПечатиМашиночитаемыхФорм.Шаблон,
	                      |	ШаблоныПечатиМашиночитаемыхФорм.ИмяФайлаШаблона
	                      |ИЗ
	                      |	РегистрСведений.ШаблоныПечатиМашиночитаемыхФорм КАК ШаблоныПечатиМашиночитаемыхФорм
	                      |ГДЕ
	                      |	ШаблоныПечатиМашиночитаемыхФорм.ИмяФайлаШаблона = &ИмяФайлаШаблона");
	Запрос.УстановитьПараметр("ИмяФайлаШаблона", ВыбраннаяСтрока.ИмяФайлаШаблона);
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		ВремФайл = ПолучитьИмяВременногоФайла("." + Выборка.ИмяФайлаШаблона);
		Попытка
			Выборка.Шаблон.Получить().Записать(ВремФайл);
		Исключение
			Сообщить("Не удалось выгрузить шаблон во временный файл на диске:" + Символы.ПС + ОписаниеОшибки(), СтатусСообщения.Важное);
			Возврат;
		КонецПопытки;
		ЗапуститьПриложение(ВремФайл);
	КонецЕсли;
	
КонецПроцедуры

Процедура Удалить(Кнопка)
	
	УдалитьШаблоны();
	
КонецПроцедуры

Процедура Добавить(Кнопка)
	
	ДобавитьШаблоны();
	
КонецПроцедуры

Процедура ВыгрузитьВФайл(Кнопка)
	
	ТекСтроки = ЭлементыФормы.РегистрСведенийСписок.ВыделенныеСтроки;
	Если ТекСтроки.Количество() <> 0 Тогда
		
		Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
		Диалог.Заголовок = "Выберите каталог для сохранения";
		Если Диалог.Выбрать() Тогда
			
			ИменаФайловШаблонов = Новый Массив;
			Для Каждого ТекСтрока Из ТекСтроки Цикл
				ИменаФайловШаблонов.Добавить(ТекСтрока.ИмяФайлаШаблона);
			КонецЦикла;
			
			КоличествоОшибок = 0;
			КаталогСохранения = ?(Прав(Диалог.Каталог, 1) = "\", Диалог.Каталог, Диалог.Каталог + "\");
			Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
			                      |	ШаблоныПечатиМашиночитаемыхФорм.ИмяФайлаШаблона КАК ИмяФайлаШаблона,
			                      |	ШаблоныПечатиМашиночитаемыхФорм.Шаблон
			                      |ИЗ
			                      |	РегистрСведений.ШаблоныПечатиМашиночитаемыхФорм КАК ШаблоныПечатиМашиночитаемыхФорм
			                      |ГДЕ
			                      |	ШаблоныПечатиМашиночитаемыхФорм.ИмяФайлаШаблона В(&ИменаФайловШаблона)
			                      |
			                      |УПОРЯДОЧИТЬ ПО
			                      |	ИмяФайлаШаблона");
			Запрос.УстановитьПараметр("ИменаФайловШаблона", ИменаФайловШаблонов);
			Выборка = Запрос.Выполнить().Выбрать();
			Пока Выборка.Следующий() Цикл
				КороткоеИмяФайла = Выборка.ИмяФайлаШаблона;
				ПолноеИмяСохраняемогоФайла = КаталогСохранения + КороткоеИмяФайла;
				ОбъектСохраняемыйФайл = Новый Файл(ПолноеИмяСохраняемогоФайла);
				Если ОбъектСохраняемыйФайл.Существует() Тогда
					Ответ = Вопрос("В выбранном каталоге уже существует файл " + КороткоеИмяФайла + ".
									|Заменить указанный файл?", РежимДиалогаВопрос.ДаНетОтмена);
					Если Ответ = КодВозвратаДиалога.Нет Тогда
						Продолжить;					
					ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
						Возврат;
					КонецЕсли;
				КонецЕсли;
				Попытка
					Выборка.Шаблон.Получить().Записать(ПолноеИмяСохраняемогоФайла);
				Исключение
					Сообщить("Во время сохранения файла " + КороткоеИмяФайла + " возникла ошибка:" + Символы.ПС + ОписаниеОшибки(), СтатусСообщения.Важное);
					КоличествоОшибок = КоличествоОшибок + 1;
				КонецПопытки;
			КонецЦикла;
			Если ТекСтроки.Количество() = 1 Тогда
				Если КоличествоОшибок = 0 Тогда
					Предупреждение("Шаблон успешно выгружен.");
				КонецЕсли;
			Иначе
				Если КоличествоОшибок = 0 Тогда
					Предупреждение("Шаблоны успешно выгружены.");
				Иначе
					Предупреждение("Во время сохранения произошли ошибки. Не удалось сохранить шаблонов: " + КоличествоОшибок + ".");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	Иначе
		
		Предупреждение("Выберите шаблоны, которые следует сохранить на диск, и повторите попытку.
		|Для множественного выбора используйте клавишу Ctrl.");
		
	КонецЕсли;
	
КонецПроцедуры

Процедура УдалитьШаблоны()
	
	ТекСтроки = ЭлементыФормы.РегистрСведенийСписок.ВыделенныеСтроки;
	КоличествоСтрок = ТекСтроки.Количество();
	Если КоличествоСтрок <> 0 Тогда
		
		ТекстВопроса = ?(КоличествоСтрок = 1, "Удалить шаблон?", "Удалить выбранные шаблоны?");
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Если Ответ <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;
		
		ИменаФайловШаблонов = Новый Массив;
		Для Каждого ТекСтрока Из ТекСтроки Цикл
			ИменаФайловШаблонов.Добавить(ТекСтрока.ИмяФайлаШаблона);
		КонецЦикла;
		
		МенеджерЗаписи = РегистрыСведений.ШаблоныПечатиМашиночитаемыхФорм.СоздатьМенеджерЗаписи();
		Для Каждого ИмяФайлаШаблона Из ИменаФайловШаблонов Цикл
			МенеджерЗаписи.ИмяФайлаШаблона = ИмяФайлаШаблона;
			МенеджерЗаписи.Удалить();
		КонецЦикла;
		
	Иначе
		
		Предупреждение("Выберите шаблоны, которые следует удалить, и повторите попытку.
		|Для множественного выбора используйте клавишу Ctrl.");
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьШаблоны()
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайла.Заголовок = "Выберите шаблоны";
	ДиалогВыбораФайла.МножественныйВыбор =  Истина;
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла = Истина;
	ДиалогВыбораФайла.Расширение = "tif";
	ДиалогВыбораФайла.Фильтр = "Файлы шаблонов печати машиночитаемых форм (*.tif)|*.tif";
	Если НЕ ДиалогВыбораФайла.Выбрать() Тогда
		Возврат;
	КонецЕсли;
	
	КоличествоФайлов = ДиалогВыбораФайла.ВыбранныеФайлы.Количество();
	РежимОдногоФайла = (КоличествоФайлов = 1);
	
	ОбъектыФайл = Новый Массив;
	КороткиеИменаФайлов = Новый Массив;
	Для Каждого ВыбранныйФайл Из ДиалогВыбораФайла.ВыбранныеФайлы Цикл
		ОбъектФайл = Новый Файл(ВыбранныйФайл);
		ОбъектыФайл.Добавить(ОбъектФайл);
		КороткиеИменаФайлов.Добавить(ОбъектФайл.Имя);
	КонецЦикла;
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                      |	ШаблоныПечатиМашиночитаемыхФорм.ИмяФайлаШаблона
	                      |ИЗ
	                      |	РегистрСведений.ШаблоныПечатиМашиночитаемыхФорм КАК ШаблоныПечатиМашиночитаемыхФорм
	                      |ГДЕ
	                      |	ШаблоныПечатиМашиночитаемыхФорм.ИмяФайлаШаблона В(&ВыбранныеФайлы)
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	ШаблоныПечатиМашиночитаемыхФорм.ИмяФайлаШаблона");
	Запрос.УстановитьПараметр("ВыбранныеФайлы", КороткиеИменаФайлов);
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Если РежимОдногоФайла Тогда
			ТекстВопроса = "Шаблон с аналогичным именем уже загружен в информационную базу.
							|Заменить существующий шаблон?";
		Иначе
			ТекстВопроса = "Некоторые из выбранных шаблонов уже присутствуют в информационной базе.
							|Продолжить загрузку с заменой шаблонов в информационной базе на шаблоны с диска?";
		КонецЕсли;
			
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Если Ответ <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	КоличествоНезагруженныхШаблонов = 0;
	Для Каждого ОбъектФайл Из ОбъектыФайл Цикл
		Если ОбъектФайл.Существует() Тогда
			Состояние("Загрузка шаблона """ + ОбъектФайл.Имя + """...");
			МенеджерЗаписи = РегистрыСведений.ШаблоныПечатиМашиночитаемыхФорм.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.ИмяФайлаШаблона = нрег(ОбъектФайл.Имя);
			МенеджерЗаписи.Размер = ОбъектФайл.Размер();
			МенеджерЗаписи.ДатаДобавления = НачалоДня(РабочаяДата) + (ТекущаяДата() - НачалоДня(ТекущаяДата()));
			Попытка
				МенеджерЗаписи.Шаблон = Новый ХранилищеЗначения(Новый ДвоичныеДанные(ОбъектФайл.ПолноеИмя), Новый СжатиеДанных(9));
				МенеджерЗаписи.Записать(Истина);
			Исключение
				Если РежимОдногоФайла тогда
					Предупреждение("Не удалось загрузить шаблон """ + ОбъектФайл.Имя + """:
									|
									|" + ОписаниеОшибки());
					Возврат;
				Иначе
					Ответ = Вопрос("Не удалось загрузить шаблон """ + ОбъектФайл.Имя + """:
									|
									|" + ОписаниеОшибки() + "
									|
									|Продолжить загрузку?", РежимДиалогаВопрос.ДаНет);
				КонецЕсли;
				Если Ответ <> КодВозвратаДиалога.Да Тогда
					Возврат;
				КонецЕсли;
				КоличествоНезагруженныхШаблонов = КоличествоНезагруженныхШаблонов + 1;
			КонецПопытки;
		КонецЕсли;
	КонецЦикла;
	Если КоличествоНезагруженныхШаблонов = КоличествоФайлов Тогда
		Предупреждение("Не удалось загрузить ни один из указанных шаблонов!");
	Иначе
		Если РежимОдногоФайла Тогда
			ТекстПредупреждения = "Шаблон успешно загружен.";
		ИначеЕсли КоличествоНезагруженныхШаблонов = 0 Тогда
			ТекстПредупреждения = "Все шаблоны успешно загружены.";
		Иначе
			ТекстПредупреждения = "Загружены " + (КоличествоФайлов - КоличествоНезагруженныхШаблонов) + " из " + КоличествоФайлов + " шаблонов.
								  |Остальные шаблоны загрузить на удалось!";
		КонецЕсли;
		Предупреждение(ТекстПредупреждения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ДействияФормыУстановитьКомпоненту(Кнопка)
	
	РегламентированнаяОтчетность.УстановитьКомпонентуПечатиМашиночитаемыхФорм(Ложь);
	УправлениеКнопкойУстановкиКомпоненты();
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	УправлениеДоступностьюЭУ();
	УправлениеКнопкойУстановкиКомпоненты();
	
КонецПроцедуры

Процедура УправлениеКнопкойУстановкиКомпоненты()
	
	КомпонентаУстановлена = РегламентированнаяОтчетность.КомпонентаПечатиМашиночитаемыхФормДоступна();
	КнопкаКомпоненты = ЭлементыФормы.ДействияФормы.Кнопки.УстановитьКомпоненту;
	Если КомпонентаУстановлена Тогда
		КнопкаКомпоненты.Текст = "Переустановить компоненту";
		КнопкаКомпоненты.Подсказка = "Переустановить компоненту формирования машиночитаемых форм регламентированных отчетов";
	Иначе
		КнопкаКомпоненты.Текст = "Установить компоненту";
		КнопкаКомпоненты.Подсказка = "Установить компоненту формирования машиночитаемых форм регламентированных отчетов";
	КонецЕсли;
	
КонецПроцедуры

Процедура УправлениеДоступностьюЭУ()
	
	ЕстьДоступНаЗапись = ПравоДоступа("Изменение", Метаданные.РегистрыСведений.ШаблоныПечатиМашиночитаемыхФорм);
	Если НЕ ЕстьДоступНаЗапись Тогда
		ЭлементыФормы.РегистрСведенийСписок.ТолькоПросмотр = Истина;
		Для Каждого Кнопка Из ЭлементыФормы.ДействияФормы.Кнопки Цикл
			Если Кнопка.Имя = "Добавить" ИЛИ Кнопка.Имя = "Удалить" Тогда
				Кнопка.Доступность = Ложь;
			КонецЕсли;
		КонецЦикла;
		Для Каждого Кнопка Из ЭлементыФормы.ДействияФормы.Кнопки.Подменю.Кнопки Цикл
			Если Кнопка.Имя = "Добавить" ИЛИ Кнопка.Имя = "Удалить" Тогда
				Кнопка.Доступность = Ложь;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры
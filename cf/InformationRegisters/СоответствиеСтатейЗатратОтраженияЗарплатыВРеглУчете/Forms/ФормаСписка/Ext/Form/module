////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
Перем ВидыСтатьиЗатрат;
////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ

// Процедура обработчик события "ПриАктивизацииСтроки" табличного поля РегистрСведенийСписок
Процедура РегистрСведенийСписокПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;	
	ИначеЕсли Элемент.ТекущиеДанные.ВидСтатьиЗатрат = Неопределено Тогда
		Элемент.ТекущиеДанные.ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.ПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ПереключательГод2010 = 0;
	УправлениеОтбором();
	
КонецПроцедуры

Процедура ПереключательЛетПриИзменении(Элемент)
	
	УправлениеОтбором();
	
КонецПроцедуры

Процедура УправлениеОтбором()
	
	ВидыСтатьиЗатрат = Новый СписокЗначений;
	ВидыСтатьиЗатрат.Добавить(Перечисления.ВидыДополнительныхСтатейЗатрат.ФСС_НС);	
	Если ПереключательГод2010 = 0 Тогда
		ВидыСтатьиЗатрат.Добавить(Перечисления.ВидыДополнительныхСтатейЗатрат.СтраховыеВзносы);				
	Иначе
		ВидыСтатьиЗатрат.Добавить(Перечисления.ВидыДополнительныхСтатейЗатрат.ЕСН);
		ВидыСтатьиЗатрат.Добавить(Перечисления.ВидыДополнительныхСтатейЗатрат.ПФР);
		ВидыСтатьиЗатрат.Добавить(Перечисления.ВидыДополнительныхСтатейЗатрат.ФСС_БЛ);
	КонецЕсли;
	РегистрСведенийСписок.Отбор.ВидСтатьиЗатрат.Использование = Истина;
	РегистрСведенийСписок.Отбор.ВидСтатьиЗатрат.ВидСравнения = ВидСравнения.ВСписке;
	РегистрСведенийСписок.Отбор.ВидСтатьиЗатрат.Значение = ВидыСтатьиЗатрат;
	ЭлементыФормы.РегистрСведенийСписок.НастройкаОтбора.ВидСтатьиЗатрат.Доступность = Ложь;	
		
КонецПроцедуры

Процедура РегистрСведенийСписокВидСтатьиЗатратНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

Процедура РегистрСведенийСписокВидСтатьиЗатратАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

Процедура РегистрСведенийСписокВидСтатьиЗатратОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

Процедура РегистрСведенийСписокВидСтатьиЗатратНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
		
	Элемент.СписокВыбора = ВидыСтатьиЗатрат;	
	
КонецПроцедуры

Процедура РегистрСведенийСписокПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если НЕ ОтменаРедактирования Тогда
		
		ТекущаяЗапись = Элемент.ТекущиеДанные;
		
		Если НЕ ЗначениеЗаполнено(ТекущаяЗапись.СтатьяЗатрат) Тогда
			
			ТекстПредупреждения = "Укажите статью затрат по налогам с ФОТ";
			
			Предупреждение(ТекстПредупреждения);
			
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
		Если ТекущаяЗапись.СтатьяЗатратНачисления = Неопределено Тогда
			
			ЗначениеПоУмолчанию = Неопределено;
			Если ТипЗнч(ТекущаяЗапись.СтатьяЗатрат) = Тип("СправочникСсылка.ПрочиеДоходыИРасходы") Тогда
				ЗначениеПоУмолчанию = Справочники.ПрочиеДоходыИРасходы.ПустаяСсылка();
			ИначеЕсли ТипЗнч(ТекущаяЗапись.СтатьяЗатрат) = Тип("СправочникСсылка.СтатьиЗатрат") Тогда
				ЗначениеПоУмолчанию = Справочники.СтатьиЗатрат.ПустаяСсылка();
			КонецЕсли;
			
			ТекущаяЗапись.СтатьяЗатратНачисления = ЗначениеПоУмолчанию;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура РегистрСведенийСписокСтатьяЗатратНачисленияПриИзменении(Элемент)
	
	ТекущаяЗапись = ЭлементыФормы.РегистрСведенийСписок.ТекущиеДанные;
	
	ЗначениеПоУмолчанию = Неопределено;
	
	Если ТипЗнч(ТекущаяЗапись.СтатьяЗатратНачисления) = Тип("Неопределено") 
		ИЛИ ТипЗнч(ТекущаяЗапись.СтатьяЗатрат) = ТипЗнч(ТекущаяЗапись.СтатьяЗатратНачисления) Тогда
		Возврат;
	ИначеЕсли ТипЗнч(ТекущаяЗапись.СтатьяЗатратНачисления) = Тип("СправочникСсылка.ПрочиеДоходыИРасходы") 
		И ТипЗнч(ТекущаяЗапись.СтатьяЗатрат) <> ТипЗнч(ТекущаяЗапись.СтатьяЗатратНачисления) Тогда
		ЗначениеПоУмолчанию = Справочники.ПрочиеДоходыИРасходы.ПустаяСсылка();
	ИначеЕсли ТипЗнч(ТекущаяЗапись.СтатьяЗатратНачисления) = Тип("СправочникСсылка.СтатьиЗатрат") 
		И ТипЗнч(ТекущаяЗапись.СтатьяЗатрат) <> ТипЗнч(ТекущаяЗапись.СтатьяЗатратНачисления) Тогда
		ЗначениеПоУмолчанию = Справочники.СтатьиЗатрат.ПустаяСсылка();
	КонецЕсли;
	
	ТекущаяЗапись.СтатьяЗатрат = ЗначениеПоУмолчанию;
		
КонецПроцедуры

Процедура РегистрСведенийСписокСтатьяЗатратПриИзменении(Элемент)
	
	ТекущаяЗапись = ЭлементыФормы.РегистрСведенийСписок.ТекущиеДанные;
	
	ЗначениеПоУмолчанию = Неопределено;
	
	Если ТипЗнч(ТекущаяЗапись.СтатьяЗатрат) = Тип("Неопределено") 
		ИЛИ ТипЗнч(ТекущаяЗапись.СтатьяЗатрат) = ТипЗнч(ТекущаяЗапись.СтатьяЗатратНачисления) Тогда
		Возврат;
	ИначеЕсли ТипЗнч(ТекущаяЗапись.СтатьяЗатрат) = Тип("СправочникСсылка.ПрочиеДоходыИРасходы") 
		И ТипЗнч(ТекущаяЗапись.СтатьяЗатрат) <> ТипЗнч(ТекущаяЗапись.СтатьяЗатратНачисления) Тогда
		ЗначениеПоУмолчанию = Справочники.ПрочиеДоходыИРасходы.ПустаяСсылка();
	ИначеЕсли ТипЗнч(ТекущаяЗапись.СтатьяЗатрат) = Тип("СправочникСсылка.СтатьиЗатрат") 
		И ТипЗнч(ТекущаяЗапись.СтатьяЗатрат) <> ТипЗнч(ТекущаяЗапись.СтатьяЗатратНачисления) Тогда
		ЗначениеПоУмолчанию = Справочники.СтатьиЗатрат.ПустаяСсылка();
	КонецЕсли;
	
	ТекущаяЗапись.СтатьяЗатратНачисления = ЗначениеПоУмолчанию;
		
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

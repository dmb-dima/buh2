////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
//

// Процедура - обработчик события "ОбработкаВыбора" полей счетов
//
Процедура СчетУчетаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	СтандартнаяОбработка = БухгалтерскийУчет.СчетМожноИспользоватьВПроводках(ВыбранноеЗначение);

КонецПроцедуры

// Процедура - обработчик события "НачалоВыбора" поля Договор
//
Процедура ДоговорНачалоВыбора(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

	ФормаВыбора = Справочники.ДоговорыКонтрагентов.ПолучитьФормуВыбора(, Элемент, );

	Если ЗначениеЗаполнено(Контрагент) Тогда

		ФормаВыбора.ПараметрОтборПоВладельцу = Контрагент;
		ФормаВыбора.ЭлементыФормы.СправочникСписок.НастройкаОтбора.Владелец.Доступность = Ложь;

	КонецЕсли;

	// Еще надо фильтровать по организации, если она заполнена
	Если ЗначениеЗаполнено(Организация) Тогда

		ФормаВыбора.СправочникСписок.Отбор.Организация.Значение      = Организация;
		ФормаВыбора.СправочникСписок.Отбор.Организация.Использование = Истина;
		ФормаВыбора.СправочникСписок.Отбор.Организация.ВидСравнения  = ВидСравнения.Равно;

		ФормаВыбора.ЭлементыФормы.СправочникСписок.НастройкаОтбора.Организация.Доступность = Ложь;

	КонецЕсли;

	ФормаВыбора.Открыть();

КонецПроцедуры // ДоговорНачалоВыбора()

// Процедура - обработчик события "ОбработкаВыбора" поля Договор
//
Процедура ДоговорОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	Если ВыбранноеЗначение = Неопределено тогда
		Возврат;
	КонецЕсли;

	ВидРасчетовПоДоговору = БухгалтерскийУчетРасчетовСКонтрагентами.ОпределениеВидаРасчетовПоПараметрамДоговора(ВыбранноеЗначение, Константы.ВалютаРегламентированногоУчета.Получить());

	Если НЕ ЗначениеЗаполнено(Контрагент) тогда
		Контрагент = ВыбранноеЗначение.Владелец;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(Организация) тогда
		Организация = ВыбранноеЗначение.Организация;
	КонецЕсли;

КонецПроцедуры // ДоговорОбработкаВыбора()

Процедура ОрганизацияПриИзменении(Элемент)

	Договор = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();

КонецПроцедуры

Процедура КонтрагентПриИзменении(Элемент)

	Договор = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();

КонецПроцедуры

Процедура ВидРасчетовПоДоговоруПриИзменении(Элемент)

	Договор = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();

КонецПроцедуры

Процедура ПриОткрытии()
	
	// Проверка ведения однофирменности
	Если НЕ Выбран() Тогда
		
		Если НЕ ЗначениеЗаполнено(Организация) Тогда // если заполнена - значит это был переход по кнопке перейти.
			Если ЗначениеЗаполнено(Договор) Тогда
				Организация = Договор.Организация;
			Иначе
				Организация = глЗначениеПеременной("ОсновнаяОрганизация");
			КонецЕсли;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Контрагент)И ЗначениеЗаполнено(Договор) Тогда // если заполнена - значит это был переход по кнопке перейти.
			
			Контрагент = Договор.Владелец;
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Договор) Тогда
			
			ВидРасчетовПоДоговору = БухгалтерскийУчетРасчетовСКонтрагентами.ОпределениеВидаРасчетовПоПараметрамДоговора(Договор, Константы.ВалютаРегламентированногоУчета.Получить());
			
		КонецЕсли;
		
			

	КонецЕсли;

КонецПроцедуры









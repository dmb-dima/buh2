
// Процедура очищает договор в текущей строке
//
Процедура ОчиститьДоговор()

	СтрокаТЧ = ЭлементыФормы.РегистрСведенийСписок.ТекущиеДанные;
	Если СтрокаТЧ = Неопределено Тогда
		Возврат;
	КонецЕсли;

	СтрокаТЧ.Договор = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();

КонецПроцедуры // ОчиститьДоговор()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
//

// Процедура обработчик события "ПриНачалеРедактирования" элемента РегистрСведенийСписок
//
Процедура РегистрСведенийСписокПриНачалеРедактирования(Элемент, НоваяСтрока)

	Если НоваяСтрока Тогда

		СтрокаТЧ = ЭлементыФормы.РегистрСведенийСписок.ТекущиеДанные;
		СтрокаТЧ.Организация = глЗначениеПеременной("ОсновнаяОрганизация");

	КонецЕсли;

КонецПроцедуры

// Процедура обработчик события "НачалоВыбора" поля Договор
//
Процедура РегистрСведенийСписокДоговорНачалоВыбора(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

	ТекСтрока   = ЭлементыФормы.РегистрСведенийСписок.ТекущиеДанные;
	ФормаВыбора = Справочники.ДоговорыКонтрагентов.ПолучитьФормуВыбора(,Элемент,);

	Если ЗначениеЗаполнено(ТекСтрока.Контрагент) Тогда

		// В качестве владельца формы выбора устанавливаем данный элемент формы, чтобы выбранное
		// значение было присвоено стандартно.
		ФормаВыбора.ПараметрОтборПоВладельцу = ТекСтрока.Контрагент;
		ФормаВыбора.ЭлементыФормы.СправочникСписок.НастройкаОтбора.Владелец.Доступность = Ложь;

	КонецЕсли;

	// Еще надо фильтровать по организации, если она заполнена
	Если ЗначениеЗаполнено(ТекСтрока.Организация) Тогда

		ФормаВыбора.СправочникСписок.Отбор.Организация.Значение      = ТекСтрока.Организация;
		ФормаВыбора.СправочникСписок.Отбор.Организация.Использование = Истина;
		ФормаВыбора.СправочникСписок.Отбор.Организация.ВидСравнения  = ВидСравнения.Равно;

		ФормаВыбора.ЭлементыФормы.СправочникСписок.НастройкаОтбора.Организация.Доступность = Ложь;

	КонецЕсли;

	ФормаВыбора.Открыть();

КонецПроцедуры // РегистрСведенийСписокДоговорНачалоВыбора()

// Процедура обработчик события "ОбработкаВыбора" поля Договор
//
Процедура РегистрСведенийСписокДоговорОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	Если ВыбранноеЗначение = Неопределено тогда
		Возврат;
	КонецЕсли;

	ТекСтрока = ЭлементыФормы.РегистрСведенийСписок.ТекущиеДанные;

	ТекСтрока.ВидРасчетовПоДоговору = БухгалтерскийУчетРасчетовСКонтрагентами.ОпределениеВидаРасчетовПоПараметрамДоговора(ВыбранноеЗначение, Константы.ВалютаРегламентированногоУчета.Получить());

	Если НЕ ЗначениеЗаполнено(ТекСтрока.Контрагент) тогда
		ТекСтрока.Контрагент = ВыбранноеЗначение.Владелец;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(ТекСтрока.Организация) тогда
		ТекСтрока.Организация = ВыбранноеЗначение.Организация;
	КонецЕсли;

КонецПроцедуры

// Процедура обработчик события "ОбработкаВыбора" полей счетов
//
Процедура СчетаУчетаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	СтандартнаяОбработка = БухгалтерскийУчет.СчетМожноИспользоватьВПроводках(ВыбранноеЗначение);

КонецПроцедуры

// Процедура обработчик события "ПриИзменении" поля Организация
//
Процедура РегистрСведенийСписокОрганизацияПриИзменении(Элемент)

	ОчиститьДоговор();

КонецПроцедуры // РегистрСведенийСписокОрганизацияПриИзменении()

// Процедура обработчик события "ПриИзменении" поля Контрагент
//
Процедура РегистрСведенийСписокКонтрагентПриИзменении(Элемент)

	ОчиститьДоговор();

КонецПроцедуры // РегистрСведенийСписокКонтрагентПриИзменении()

// Процедура обработчик события "ПриИзменении" поля ВидРасчетовПоДоговору
//
Процедура РегистрСведенийСписокВидРасчетовПоДоговоруПриИзменении(Элемент)

	ОчиститьДоговор();

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПриОткрытии"
//
Процедура ПриОткрытии()

	СписокОрганизаций = Новый СписокЗначений;
	
	Если ЗначениеЗаполнено(глЗначениеПеременной("ОсновнаяОрганизация")) Тогда
		СписокОрганизаций.Добавить(глЗначениеПеременной("ОсновнаяОрганизация"));
		СписокОрганизаций.Добавить(Справочники.Организации.ПустаяСсылка());
	КонецЕсли;
	
	РаботаСДиалогами.УстановитьОтборПоОрганизации(ЭтаФорма,, СписокОрганизаций, "РегистрСведенийСписок");

КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзменениеТекущейОрганизации" Тогда
		СписокОрганизаций = Новый СписокЗначений;
		
		Если ЗначениеЗаполнено(глЗначениеПеременной("ОсновнаяОрганизация")) Тогда
			СписокОрганизаций.Добавить(глЗначениеПеременной("ОсновнаяОрганизация"));
			СписокОрганизаций.Добавить(Справочники.Организации.ПустаяСсылка());
		КонецЕсли;
		
		РаботаСДиалогами.УстановитьОтборПоОрганизации(ЭтаФорма,, СписокОрганизаций, "РегистрСведенийСписок", Истина);
	КонецЕсли;
	
КонецПроцедуры





////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

// Хранит структуру реквизитов, сохраняемых в течение сеанса работы с формой.
Перем СтруктураСохраняемыхРеквизитов;

// Хранит исходный код по ОКАТО.
Перем ИсходныйКодПоОКАТО;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Функция возвращает установленный в форме код по ОКАТО.
//
Функция ПолучитьКодПоОКАТО()
	
	Если ПостановкаНаУчетВНалоговомОргане = Перечисления.ПостановкаНаУчетВНалоговомОргане.СДругимКодомПоОКАТО Тогда
		Возврат КодПоОКАТОПоМестуНахожденияОрганизации;
	ИначеЕсли ПостановкаНаУчетВНалоговомОргане = Перечисления.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане Тогда
		Возврат КодПоОКАТОВДругомНалоговомОргане;
	Иначе
		Возврат "";
	КонецЕсли;
	
КонецФункции // ПолучитьКодПоОКАТО()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ УПРАВЛЕНИЯ ВНЕШНИМ ВИДОМ ФОРМЫ

// Управление видимостью и доступностью элементов формы.
//
Процедура УстановитьВидимость()
	
	ПостановкаНаУчетСДругимКодомПоОКАТО = (ПостановкаНаУчетВНалоговомОргане = Перечисления.ПостановкаНаУчетВНалоговомОргане.СДругимКодомПоОКАТО);
	
	ЭлементыФормы.КодПоОКАТОПоМестуНахожденияОрганизации.Доступность               = ПостановкаНаУчетСДругимКодомПоОКАТО;
	ЭлементыФормы.КодПоОКАТОПоМестуНахожденияОрганизации.АвтоОтметкаНезаполненного = ПостановкаНаУчетСДругимКодомПоОКАТО;
	ЭлементыФормы.КодПоОКАТОПоМестуНахожденияОрганизации.ОтметкаНезаполненного     = ПостановкаНаУчетСДругимКодомПоОКАТО И ПустаяСтрока(КодПоОКАТОПоМестуНахожденияОрганизации);
	
	ПостановкаНаУчетВДругомНалоговомОргане = (ПостановкаНаУчетВНалоговомОргане = Перечисления.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане);
	
	ЭлементыФормы.НалоговыйОрган.Доступность               = ПостановкаНаУчетВДругомНалоговомОргане;
	ЭлементыФормы.НалоговыйОрган.АвтоОтметкаНезаполненного = ПостановкаНаУчетВДругомНалоговомОргане;
	ЭлементыФормы.НалоговыйОрган.ОтметкаНезаполненного     = ПостановкаНаУчетВДругомНалоговомОргане И НалоговыйОрган.Пустая();
	
	ЭлементыФормы.НадписьКодПоОКАТО.Доступность = ПостановкаНаУчетВДругомНалоговомОргане;
	
	ЭлементыФормы.КодПоОКАТОВДругомНалоговомОргане.Доступность               = ПостановкаНаУчетВДругомНалоговомОргане;
	ЭлементыФормы.КодПоОКАТОВДругомНалоговомОргане.АвтоОтметкаНезаполненного = ПостановкаНаУчетВДругомНалоговомОргане;
	ЭлементыФормы.КодПоОКАТОВДругомНалоговомОргане.ОтметкаНезаполненного     = ПостановкаНаУчетВДругомНалоговомОргане И ПустаяСтрока(КодПоОКАТОВДругомНалоговомОргане);
	
	Если ПостановкаНаУчетВДругомНалоговомОргане Тогда
		ЭлементыФормы.НалогНаИмущество.Свертка = РежимСверткиЭлементаУправления.Нет;
	Иначе
		ЭлементыФормы.НалогНаИмущество.Свертка = РежимСверткиЭлементаУправления.Верх;
	КонецЕсли;
	
	ОсвобождениеОтНалогообложения = (ПорядокНалогообложения = Перечисления.ПорядокНалогообложенияИмущества.ОсвобождаетсяОтНалогообложения);
	
	ЭлементыФормы.КодНалоговойЛьготыОсвобождениеОтНалогообложения.Доступность               = ОсвобождениеОтНалогообложения;
	ЭлементыФормы.КодНалоговойЛьготыОсвобождениеОтНалогообложения.АвтоОтметкаНезаполненного = ОсвобождениеОтНалогообложения;
	ЭлементыФормы.КодНалоговойЛьготыОсвобождениеОтНалогообложения.ОтметкаНезаполненного     = ОсвобождениеОтНалогообложения И ПустаяСтрока(КодНалоговойЛьготыОсвобождениеОтНалогообложения);
	
	ОблагаетсяПоСниженнойСтавке = (ПорядокНалогообложения = Перечисления.ПорядокНалогообложенияИмущества.ОблагаетсяПоСниженнойСтавке);
	
	ЭлементыФормы.СниженнаяНалоговаяСтавка.Доступность               = ОблагаетсяПоСниженнойСтавке;
	ЭлементыФормы.СниженнаяНалоговаяСтавка.АвтоОтметкаНезаполненного = ОблагаетсяПоСниженнойСтавке;
	ЭлементыФормы.СниженнаяНалоговаяСтавка.ОтметкаНезаполненного     = ОблагаетсяПоСниженнойСтавке И СниженнаяНалоговаяСтавка = 0;
	ЭлементыФормы.НадписьПроцентСниженнойНалоговойСтавки.Доступность = ОблагаетсяПоСниженнойСтавке;
	
	ЭлементыФормы.ДоляСтоимостиЧислитель.Доступность               = РасположенВРазныхСубъектахФедерации;
	ЭлементыФормы.ДоляСтоимостиЧислитель.АвтоОтметкаНезаполненного = РасположенВРазныхСубъектахФедерации;
	ЭлементыФормы.ДоляСтоимостиЧислитель.ОтметкаНезаполненного     = РасположенВРазныхСубъектахФедерации И ДоляСтоимостиЧислитель = 0;
	
	ЭлементыФормы.ДоляСтоимостиЗнаменатель.Доступность               = РасположенВРазныхСубъектахФедерации;
	ЭлементыФормы.ДоляСтоимостиЗнаменатель.АвтоОтметкаНезаполненного = РасположенВРазныхСубъектахФедерации;
	ЭлементыФормы.ДоляСтоимостиЗнаменатель.ОтметкаНезаполненного     = РасположенВРазныхСубъектахФедерации И ДоляСтоимостиЗнаменатель = 0;
	
КонецПроцедуры // УстановитьВидимость()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием()
	
	ОрганизацияПоУмолчанию = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");	
	
	Если НЕ Выбран() Тогда
		
		Период = НачалоГода(ОбщегоНазначения.ПолучитьРабочуюДату());
		
		Если ПараметрОбъектКопирования = Неопределено Тогда 
		
			Если Организация.Пустая() Тогда
				Организация = ОрганизацияПоУмолчанию;
			КонецЕсли;
			
			ОсобыйПорядокНалогообложения     = Истина;
			ПостановкаНаУчетВНалоговомОргане = Перечисления.ПостановкаНаУчетВНалоговомОргане.ПоМестуНахожденияОрганизации;
			ПорядокНалогообложения           = Перечисления.ПорядокНалогообложенияИмущества.ОсобыеЛьготыНеУстановлены;
			
		КонецЕсли;
		
	КонецЕсли;
	
	// Код по ОКАТО.
	Если ПостановкаНаУчетВНалоговомОргане = Перечисления.ПостановкаНаУчетВНалоговомОргане.СДругимКодомПоОКАТО Тогда
		КодПоОКАТОПоМестуНахожденияОрганизации = КодПоОКАТО;
	ИначеЕсли ПостановкаНаУчетВНалоговомОргане = Перечисления.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане Тогда
		КодПоОКАТОВДругомНалоговомОргане = КодПоОКАТО;
	КонецЕсли;
	
	ИсходныйКодПоОКАТО = КодПоОКАТО;
	
	// Установка видимости и доступности реквизитов.
	УстановитьВидимость();
	
	Если Организация.Пустая() Тогда
		ТекущийЭлемент = ЭлементыФормы.Организация;
	Иначе
		ТекущийЭлемент = ЭлементыФормы.ОсновноеСредство;
	КонецЕсли;
	
КонецПроцедуры // ПередОткрытием()

// Обработчик события "ПередЗаписью" формы.
//
Процедура ПередЗаписью(Отказ)
	
	Если Организация.Пустая() Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указана организация!", Отказ);
	КонецЕсли;
	
	Если Период = Дата(1,1,1) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указана дата установки!", Отказ);
	КонецЕсли;
	
	Если ОсновноеСредство.Пустая() Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указано основное средство!", Отказ);
	КонецЕсли;
	
	Если ПостановкаНаУчетВНалоговомОргане = Перечисления.ПостановкаНаУчетВНалоговомОргане.СДругимКодомПоОКАТО Тогда
		
		Если ПустаяСтрока(КодПоОКАТОПоМестуНахожденияОрганизации) Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Не указан код по ОКАТО!", Отказ);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПостановкаНаУчетВНалоговомОргане = Перечисления.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане Тогда
		
		Если НалоговыйОрган.Пустая() Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Не указан налоговый орган!", Отказ);
		КонецЕсли;
		
		Если ПустаяСтрока(КодПоОКАТОВДругомНалоговомОргане) Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Не указан код по ОКАТО!", Отказ);
		КонецЕсли;
		
		Если НалоговаяСтавка = 0 Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Не указана налоговая ставка в субъекте Российской Федерации!", Отказ);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПорядокНалогообложения = Перечисления.ПорядокНалогообложенияИмущества.ОсвобождаетсяОтНалогообложения Тогда
		
		Если ПустаяСтрока(КодНалоговойЛьготыОсвобождениеОтНалогообложения) Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Не указан код налоговой льготы!", Отказ);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПорядокНалогообложения = Перечисления.ПорядокНалогообложенияИмущества.ОблагаетсяПоСниженнойСтавке Тогда
		
		Если СниженнаяНалоговаяСтавка = 0 Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Не указана сниженная ставка!", Отказ);
		КонецЕсли;
		
	КонецЕсли;
	
	Если РасположенВРазныхСубъектахФедерации Тогда
		
		Если ДоляСтоимостиЧислитель = 0 Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Не указан числитель дроби - доли стоимости на территории субъекта Российской Федерации!", Отказ);
		КонецЕсли;
		
		Если ДоляСтоимостиЗнаменатель = 0 Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Не указан знаменатель дроби - доли стоимости на территории субъекта Российской Федерации!", Отказ);
		КонецЕсли;
		
		Если НЕ ДоляСтоимостиЧислитель = 0
		   И НЕ ДоляСтоимостиЗнаменатель = 0
		   И ДоляСтоимостиЧислитель > ДоляСтоимостиЗнаменатель Тогда
		   
			ОбщегоНазначения.СообщитьОбОшибке("Доля стоимости на территории субъекта Российской Федерации: числитель дроби больше знаменателя!", Отказ);
		   
		КонецЕсли;
		
	КонецЕсли;
	
	ТекущийКодПоОКАТО = ПолучитьКодПоОКАТО();
	
	Если НЕ Отказ И (НЕ Выбран() ИЛИ ТекущийКодПоОКАТО <> ИсходныйКодПоОКАТО) Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Период",           Период);
		Запрос.УстановитьПараметр("Организация",      Организация);
		Запрос.УстановитьПараметр("ОсновноеСредство", ОсновноеСредство);
		Запрос.УстановитьПараметр("КодПоОКАТО",       ТекущийКодПоОКАТО);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ОсновноеСредство КАК ОсновноеСредство
		|ИЗ
		|	РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам
		|ГДЕ
		|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Период = &Период
		|	И СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Организация = &Организация
		|	И СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ОсновноеСредство = &ОсновноеСредство
		|	И СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.КодПоОКАТО = &КодПоОКАТО";
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Количество() > 0 Тогда
			
			Выборка.Следующий();
			
			ОбщегоНазначения.СообщитьОбОшибке(Формат(Период, "ДФ=dd.MM.yyyy") + " по основному средству <" + СокрЛП(ОсновноеСредство) + "> 
			                                         |уже есть запись" + ?(ЗначениеЗаполнено(ТекущийКодПоОКАТО), " с кодом по ОКАТО " + СокрЛП(ТекущийКодПоОКАТО), "") +
													 " в организации <" + СокрЛП(Организация) + ">!", Отказ);
			
		КонецЕсли;
		      		
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		
		// Код по ОКАТО.
		КодПоОКАТО = ПолучитьКодПоОКАТО();
		
	КонецЕсли;
	
	Если Отказ Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Информация не записана.",,, СтатусСообщения.Обычное);
	КонецЕсли;
	
КонецПроцедуры // ПередЗаписью()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

// Обработчик события "ПриИзменении" поля ввода "ОсновноеСредство"
//
Процедура ОсновноеСредствоПриИзменении(Элемент)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период",           Период);
	Запрос.УстановитьПараметр("Организация",      Организация);
	Запрос.УстановитьПараметр("ОсновноеСредство", ОсновноеСредство);
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговыйОрган,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодПоОКАТО,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговаяСтавка,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.СниженнаяНалоговаяСтавка,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ВходитВСоставЕСГС,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.РасположенВРазныхСубъектахФедерации,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляСтоимостиЧислитель,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляСтоимостиЗнаменатель
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И ОсновноеСредство = &ОсновноеСредство) КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних";	
	ВыборкаСтавок = Запрос.Выполнить().Выбрать();
	
	Если ВыборкаСтавок.Количество() > 0 Тогда
		
		ВыборкаСтавок.Следующий();
		  
		ЗаполнитьЗначенияСвойств(ЭтаФорма, ВыборкаСтавок);
		  
		// Код по ОКАТО.
		Если ПостановкаНаУчетВНалоговомОргане = Перечисления.ПостановкаНаУчетВНалоговомОргане.СДругимКодомПоОКАТО Тогда
			
			КодПоОКАТОПоМестуНахожденияОрганизации = КодПоОКАТО;
			КодПоОКАТОВДругомНалоговомОргане       = "";
			
		ИначеЕсли ПостановкаНаУчетВНалоговомОргане = Перечисления.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане Тогда
			
			КодПоОКАТОПоМестуНахожденияОрганизации = "";
			КодПоОКАТОВДругомНалоговомОргане       = КодПоОКАТО;
			
		Иначе
			
			КодПоОКАТОВДругомНалоговомОргане       = "";
			КодПоОКАТОПоМестуНахожденияОрганизации = "";
			
		КонецЕсли;
		  
	КонецЕсли;
	
	УстановитьВидимость();
	
КонецПроцедуры // ОсновноеСредствоПриИзменении()

// Обработчик изменения радиокнопок в группе "Постановка на учет в налоговом
// органе".
// 
Процедура ПостановкаНаУчетВНалоговомОрганеПриИзменении(Элемент)
	
	Если ПостановкаНаУчетВНалоговомОргане = Перечисления.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане Тогда
		
		РаботаСДиалогами.СохранитьЗначениеРеквизитаФормы("КодПоОКАТОПоМестуНахожденияОрганизации", ЭтаФорма, СтруктураСохраняемыхРеквизитов);
		
		РаботаСДиалогами.ВосстановитьЗначениеРеквизитаФормы("НалоговыйОрган",                   ЭтаФорма, СтруктураСохраняемыхРеквизитов);
		РаботаСДиалогами.ВосстановитьЗначениеРеквизитаФормы("КодПоОКАТОВДругомНалоговомОргане", ЭтаФорма, СтруктураСохраняемыхРеквизитов);
		
	ИначеЕсли ПостановкаНаУчетВНалоговомОргане = Перечисления.ПостановкаНаУчетВНалоговомОргане.СДругимКодомПоОКАТО Тогда
		
		РаботаСДиалогами.СохранитьЗначениеРеквизитаФормы("НалоговыйОрган",                   ЭтаФорма, СтруктураСохраняемыхРеквизитов);
		РаботаСДиалогами.СохранитьЗначениеРеквизитаФормы("КодПоОКАТОВДругомНалоговомОргане", ЭтаФорма, СтруктураСохраняемыхРеквизитов);
		
		РаботаСДиалогами.ВосстановитьЗначениеРеквизитаФормы("КодПоОКАТОПоМестуНахожденияОрганизации", ЭтаФорма, СтруктураСохраняемыхРеквизитов);
		
	Иначе
		
		РаботаСДиалогами.СохранитьЗначениеРеквизитаФормы("КодПоОКАТОПоМестуНахожденияОрганизации", ЭтаФорма, СтруктураСохраняемыхРеквизитов);
		РаботаСДиалогами.СохранитьЗначениеРеквизитаФормы("НалоговыйОрган",                         ЭтаФорма, СтруктураСохраняемыхРеквизитов);
		РаботаСДиалогами.СохранитьЗначениеРеквизитаФормы("КодПоОКАТОВДругомНалоговомОргане",       ЭтаФорма, СтруктураСохраняемыхРеквизитов);
		
	КонецЕсли;
	
	УстановитьВидимость();
	
КонецПроцедуры // ПостановкаНаУчетВНалоговомОрганеПриИзменении()

// Обработчик события "НачалоВыбора" поля ввода "Налоговый орган".
// Устанавливает отбор по организации в списке выбора налогового органа.
//
Процедура НалоговыйОрганНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Форма = Справочники.РегистрацияВИФНС.ПолучитьФормуВыбора(, Элемент);
	Форма.СправочникСписок.Отбор.Владелец.Установить(Организация);
	Форма.Открыть();
	
КонецПроцедуры // НалоговыйОрганНачалоВыбора()

// Обработчик изменения радиокнопок в группе "Налог на имущество".
//
Процедура ПорядокНалогообложенияПриИзменении(Элемент)
	
	Если Элемент.Значение = Перечисления.ПорядокНалогообложенияИмущества.ОсобыеЛьготыНеУстановлены
	 ИЛИ Элемент.Значение = Перечисления.ПорядокНалогообложенияИмущества.НеПодлежитНалогообложению Тогда
		
		РаботаСДиалогами.СохранитьЗначениеРеквизитаФормы("КодНалоговойЛьготыОсвобождениеОтНалогообложения", ЭтаФорма, СтруктураСохраняемыхРеквизитов);
		РаботаСДиалогами.СохранитьЗначениеРеквизитаФормы("СниженнаяНалоговаяСтавка", ЭтаФорма, СтруктураСохраняемыхРеквизитов);
		
	ИначеЕсли Элемент.Значение = Перечисления.ПорядокНалогообложенияИмущества.ОсвобождаетсяОтНалогообложения Тогда
		
		РаботаСДиалогами.СохранитьЗначениеРеквизитаФормы("СниженнаяНалоговаяСтавка", ЭтаФорма, СтруктураСохраняемыхРеквизитов);
		
		РаботаСДиалогами.ВосстановитьЗначениеРеквизитаФормы("КодНалоговойЛьготыОсвобождениеОтНалогообложения", ЭтаФорма, СтруктураСохраняемыхРеквизитов);
		
	ИначеЕсли Элемент.Значение = Перечисления.ПорядокНалогообложенияИмущества.ОблагаетсяПоСниженнойСтавке Тогда
		
		РаботаСДиалогами.СохранитьЗначениеРеквизитаФормы("КодНалоговойЛьготыОсвобождениеОтНалогообложения", ЭтаФорма, СтруктураСохраняемыхРеквизитов);
		
		РаботаСДиалогами.ВосстановитьЗначениеРеквизитаФормы("СниженнаяНалоговаяСтавка", ЭтаФорма, СтруктураСохраняемыхРеквизитов);
		
	КонецЕсли;
	
	УстановитьВидимость();
	
КонецПроцедуры // ПорядокНалогообложенияПриИзменении()

// Обработчик события "НачалоВыбора" полей ввода "Код льготы".
//
Процедура КодНалоговойЛьготыНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	КодЛьготы = УправлениеВнеоборотнымиАктивами.ПолучитьФормуВыбораЛьготыПоНалогуНаИмущество(Элемент.Значение).ОткрытьМодально();
	
	Если НЕ (КодЛьготы = Неопределено) Тогда
		Элемент.Значение = КодЛьготы;
	КонецЕсли;
	
КонецПроцедуры // КодНалоговойЛьготыНачалоВыбора()

// Обработчик события "ПриИзменении" флага "Доля стоимости..."
//
Процедура РасположенВРазныхСубъектахФедерацииПриИзменении(Элемент)
	
	Если Элемент.Значение Тогда
		
		РаботаСДиалогами.ВосстановитьЗначениеРеквизитаФормы("ДоляСтоимостиЧислитель",   ЭтаФорма, СтруктураСохраняемыхРеквизитов);
		РаботаСДиалогами.ВосстановитьЗначениеРеквизитаФормы("ДоляСтоимостиЗнаменатель", ЭтаФорма, СтруктураСохраняемыхРеквизитов);
		
	Иначе
		
		РаботаСДиалогами.СохранитьЗначениеРеквизитаФормы("ДоляСтоимостиЧислитель",   ЭтаФорма, СтруктураСохраняемыхРеквизитов);
		РаботаСДиалогами.СохранитьЗначениеРеквизитаФормы("ДоляСтоимостиЗнаменатель", ЭтаФорма, СтруктураСохраняемыхРеквизитов);
		
	КонецЕсли;
	
	УстановитьВидимость();
	
КонецПроцедуры // РасположенВРазныхСубъектахФедерацииПриИзменении()

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

СтруктураСохраняемыхРеквизитов = Новый Структура;

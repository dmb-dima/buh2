////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

//Перем мЗаголовокФормы;

////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
//

// Открывает форму нового приказа о приеме на работу
//
// Параметры
//  нет
//
Процедура ОткрытьНовыйПриказОПриеме()

	Организация = Отбор.ОбособленноеПодразделение.Значение;
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Организация = глЗначениеПеременной("ОсновнаяОрганизация");
	КонецЕсли;
	
	НовыйДокумент = Документы.ПриемНаРаботуВОрганизацию.СоздатьДокумент();
	ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(НовыйДокумент, глЗначениеПеременной("глТекущийПользователь"), Константы.ВалютаРегламентированногоУчета.Получить());
	НовыйДокумент.Организация = Организация;
	НовыйДокумент.УстановитьНовыйНомер();
	
	НовыйДокумент.ПолучитьФорму().Открыть();

КонецПроцедуры // ОткрытьНовыйПриказОПриеме()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	// настройка порядка
	ЭлементыФормы.РаботникиОрганизации.НастройкаПорядка.Сотрудник.Доступность = Истина;
КонецПроцедуры

// Процедура - обработчик события "ПриОткрытии" формы
//
Процедура ПриОткрытии()
	
	РаботаСДиалогами.ЗаполнениеОтбораПоОрганизацииПоУмолчанию(ЭтаФорма, Отбор.ОбособленноеПодразделение, ЭлементыФормы.Организация, ПараметрОтборПоРегистратору, Ложь, глЗначениеПеременной("глТекущийПользователь"), "Работники организации ");

	СтруктураКолонок = Новый Структура();

	// Установить колонки, видимостью которых пользователь управлять не может.
	СтруктураКолонок.Вставить("ФизЛицо");
	СтруктураКолонок.Вставить("ТабельныйНомер");

	// Установить ограничение - изменять видимость колонок для табличной части 
	ОбработкаТабличныхЧастей.УстановитьИзменятьВидимостьКолонокТабЧасти(ЭлементыФормы.РаботникиОрганизации.Колонки, СтруктураКолонок);

КонецПроцедуры

// Процедура - обработчик события "ПриПовторномОткрытии" формы
//
Процедура ПриПовторномОткрытии(СтандартнаяОбработка)
	
	РаботаСДиалогами.ЗаполнениеОтбораПоОрганизацииПоУмолчанию(ЭтаФорма, Отбор.ОбособленноеПодразделение, ЭлементыФормы.Организация, ПараметрОтборПоРегистратору, Ложь, глЗначениеПеременной("глТекущийПользователь"), "Работники организации ");
	
	ЭлементыФормы.Организация.ТолькоПросмотр = Ложь;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНДНОЙ ПАНЕЛИ ФОРМЫ

// Процедура формирует документ "Прием на работу".
Процедура ДействияФормыПриемНаРаботу(Кнопка)
	ОткрытьНовыйПриказОПриеме()
КонецПроцедуры

// Процедура формирует документ "Приказ об увольнении".
Процедура ДействияФормыПриказОбУвольнении(Кнопка)
	
	ТекущиеДанные = ЭлементыФормы.РаботникиОрганизации.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Организация = Отбор.ОбособленноеПодразделение.Значение;
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Организация = глЗначениеПеременной("ОсновнаяОрганизация");
	КонецЕсли;
	
	НовыйДокумент = Документы.УвольнениеИзОрганизаций.СоздатьДокумент();
	ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(НовыйДокумент, глЗначениеПеременной("глТекущийПользователь"), Константы.ВалютаРегламентированногоУчета.Получить());
	НовыйДокумент.Организация = Организация;
	НовыйДокумент.УстановитьНовыйНомер();
	
	НоваяСтрока	= НовыйДокумент.РаботникиОрганизации.Добавить();
	НоваяСтрока.Сотрудник		= ТекущиеДанные.Сотрудник;
	НоваяСтрока.ДатаУвольнения	= ОбщегоНазначения.ПолучитьРабочуюДату();
	
	НовыйДокумент.ПолучитьФорму().Открыть();
	
КонецПроцедуры

// Процедуда формирует документ "Кадровое перемещение".
Процедура ДействияФормыКадровоеПеремещение(Кнопка)
	
	ТекущиеДанные = ЭлементыФормы.РаботникиОрганизации.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	Организация = Отбор.ОбособленноеПодразделение.Значение;
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Организация = глЗначениеПеременной("ОсновнаяОрганизация");
	КонецЕсли;
	
	НовыйДокумент = Документы.КадровоеПеремещениеОрганизаций.СоздатьДокумент();
	ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(НовыйДокумент, глЗначениеПеременной("глТекущийПользователь"), Константы.ВалютаРегламентированногоУчета.Получить());
	НовыйДокумент.Организация = Организация;
	НовыйДокумент.УстановитьНовыйНомер();
	
	НоваяСтрока = НовыйДокумент.РаботникиОрганизации.Добавить();
	НоваяСтрока.Сотрудник			= ТекущиеДанные.Сотрудник;
	НовыйДокумент.ПолучитьФорму().Открыть();
	
КонецПроцедуры

// Процедура открывает форму списка регистра. 
Процедура ДействияФормыИстория(Кнопка)
	
	ПоказыватьВсеЗаписиРегистра = Не Кнопка.Пометка;
	
	ЭлементыФормы.РаботникиОрганизации.ВыбиратьСрез = ?(ПоказыватьВсеЗаписиРегистра,ИспользованиеСреза.НеИспользовать,ИспользованиеСреза.Последние);
	ЭлементыФормы.ДействияФормы.Кнопки.История.Пометка					= ПоказыватьВсеЗаписиРегистра;
	ЭлементыФормы.ДействияФормы.Кнопки.Подменю.Кнопки.История.Пометка	= ПоказыватьВсеЗаписиРегистра;
	ЭлементыФормы.РаботникиОрганизации.Колонки.Картинка.ОтображатьСтандартнуюКартинку = ПоказыватьВсеЗаписиРегистра;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Процедура - обработчик события "ПриИзменении" поля ввода "Организация".
Процедура ОрганизацияПриИзменении(Элемент)

	Заголовок = "Работники организации " + Элемент.Значение.Наименование;
    Отбор.ОбособленноеПодразделение.Использование = Не Элемент.Значение.Пустая();
	
	РаботаСДиалогами.УстановитьВидимостьЭУПоУчетнойПолитикеПоПерсоналу(ЭлементыФормы, глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации")[ЭлементыФормы.Организация.Значение]);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ РаботникиОрганизации

// Процедура - обработчик события "ПередНачаломДобавления" табличного поля.
Процедура РаботникиОрганизацииПередНачаломДобавления(Элемент, Отказ, Копирование)
	ОткрытьНовыйПриказОПриеме();
КонецПроцедуры

// Процедура обеспечивает управление картинкой строки. 
//
Процедура РаботникиОрганизацииПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)

	Если Элемент.Колонки.Картинка.Видимость Тогда
		ОформлениеСтроки.Ячейки.Картинка.ОтображатьКартинку = Истина;
		ОформлениеСтроки.Ячейки.Картинка.ИндексКартинки     = Число(НЕ ЗначениеЗаполнено(ДанныеСтроки.Сотрудник.Код));
	КонецЕсли;

КонецПроцедуры




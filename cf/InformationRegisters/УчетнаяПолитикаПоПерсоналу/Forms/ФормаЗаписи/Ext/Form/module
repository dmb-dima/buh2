////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем мБылаОрганизация;
Перем мНеобходимоПереключениеВнСовместительства;
Перем мУстановленМонопольныйРежим;

Перем мБазоваяВерсия;

// переменные, обеспечивающие ограничение на список организаций
Перем мОбработкаТайпинга;
Перем мТекстТайпинга;
Перем мПоследнееЗначениеЭлементаТайпинга;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Функция формирует структуру параметров для для ввода головной организации по подстроке
//
// Параметры
//  НЕТ
//
// Возвращаемое значение:
//   Структура имен и значений параметров
//
Функция ПолучитьСтруктуруПараметровТайпинга()

	СтруктураПараметров = Новый Структура("ГоловнаяОрганизация", Справочники.Организации.ПустаяСсылка());
	
	Возврат СтруктураПараметров;

КонецФункции // ПолучитьСтруктуруПараметровТайпинга()()

// проверка необходимости переключения режима вн. совмест.
// возвращает Истина, если переключение необходимо
Функция НеобходимоПереключениеВнутреннегоСовместительства()
	Если (мБылаОрганизация <> Организация И мБылаОрганизация <> Справочники.Организации.ПустаяСсылка()) Тогда
		мНеобходимоПереключениеВнСовместительства = Истина;
		Возврат мНеобходимоПереключениеВнСовместительства;
	КонецЕсли;
	// проверим прежнее значение по выбранной организации
	Отбор = Новый Структура("Организация", Организация);
	ПрежнееЗначение = РегистрыСведений.УчетнаяПолитикаПоПерсоналу.Получить(Отбор).ПоддержкаВнутреннегоСовместительства;
	
	Если ПрежнееЗначение <> ПоддержкаВнутреннегоСовместительства и ПрежнееЗначение <> Null Тогда
		мНеобходимоПереключениеВнСовместительства = Истина;
	Иначе
		мНеобходимоПереключениеВнСовместительства = Ложь;
	КонецЕсли;
	
	Возврат мНеобходимоПереключениеВнСовместительства;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Обработчик события "ПередОткрытием"
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
		
	мБылаОрганизация = Организация;
	
КонецПроцедуры

// Процедура - обработчик события "ПриОткрытии" формы
//
Процедура ПриОткрытии()

	Если Организация.Пустая() Тогда // проверить объект на то, что он еще не внесен в ИБ

		// Заполнить реквизиты значениями по умолчанию.
		Организация = глЗначениеПеременной("ОсновнаяОрганизация");

	КонецЕсли;

КонецПроцедуры // ПриОткрытии()

// Обработчик события "ПередЗаписью"
Процедура ПередЗаписью(Отказ)
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Предупреждение("Заполните реквизит ""Организация""!");
		Отказ = Истина;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Организация.ГоловнаяОрганизация) Тогда
		Предупреждение("Учетная политика может быть определена только для головной организации!");
		Отказ = Истина;
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат
	КонецЕсли;
	
	Если мБазоваяВерсия = Неопределено Тогда
		мБазоваяВерсия = (Найти(ВРег(Метаданные.Имя), "БАЗОВАЯ") > 0);
	КонецЕсли; 
	
	// Установка монопольного режима если придется менять режим внутреннего совместительства
	мНеобходимоПереключениеВнСовместительства = НеобходимоПереключениеВнутреннегоСовместительства();
	Если НЕ мБазоваяВерсия И мНеобходимоПереключениеВнСовместительства Тогда
		Попытка
			мУстановленМонопольныйРежим = Истина;
			УстановитьМонопольныйРежим(Истина);
		Исключение
			мУстановленМонопольныйРежим = Ложь;
			Предупреждение("Не удалось установить монопольный режим для изменения учетной политики по персоналу!");
			Отказ = Истина;
		КонецПопытки;
		
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события "ПриЗаписи"
Процедура ПриЗаписи(Отказ)
	
	Если (мБылаОрганизация <> Организация И мБылаОрганизация <> Справочники.Организации.ПустаяСсылка()) Тогда
		// если сменили организацию - для прежней организации выключаем поддержку вн. совм.
		Отказ = Не ПроцедурыУправленияПерсоналом.ВыключениеПоддержкиСовместителей(мБылаОрганизация);
		
	КонецЕсли;

	// проверим прежнее значение по выбранной организации
	Отбор = Новый Структура("Организация", Организация);
	ПрежнееЗначение = РегистрыСведений.УчетнаяПолитикаПоПерсоналу.Получить(Отбор).ПоддержкаВнутреннегоСовместительства;
	
	Если мНеобходимоПереключениеВнСовместительства Тогда
		Если ПоддержкаВнутреннегоСовместительства Тогда
			Отказ = Не ПроцедурыУправленияПерсоналом.ВключениеПоддержкиСовместителей(Организация);
		Иначе
			Отказ = Не ПроцедурыУправленияПерсоналом.ВыключениеПоддержкиСовместителей(Организация);
		КонецЕсли;
	КонецЕсли;
	
	мБылаОрганизация = Организация;
	
		Если Не Отказ Тогда
			глЗначениеПеременнойУстановить("глУчетнаяПолитикаПоПерсоналуОрганизации", ЗаполнениеУчетнойПолитикиПоПерсоналуОрганизации(), ИСТИНА);
        КонецЕсли;


 
КонецПроцедуры

// Обработчик события "ПослеЗаписи"
Процедура ПослеЗаписи()
	
	Если НЕ мБазоваяВерсия Тогда
		Если мУстановленМонопольныйРежим = Истина Тогда
			УстановитьМонопольныйРежим(Ложь);
			мУстановленМонопольныйРежим = Ложь;
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// ограничиваем выбор только головными организациями
Процедура ОрганизацияНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СписокВыбора = ПроцедурыУправленияПерсоналом.ПолучитьСписокГоловныхОрганизаций();
	ЭлементСписка = ВыбратьИзСписка(СписокВыбора,Элемент,СписокВыбора.НайтиПоЗначению(Элемент.Значение));
	Если ЭлементСписка <> Неопределено Тогда
		Элемент.Значение = ЭлементСписка.Значение
	КонецЕсли;
КонецПроцедуры

Процедура ОрганизацияАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	
	ПроцедурыПоискаПоСтроке.АвтоПодборТекстаВЭлементеУправления(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка, ПолучитьСтруктуруПараметровТайпинга(), Тип("СправочникСсылка.Организации"));
	
КонецПроцедуры

Процедура ОрганизацияОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	ПроцедурыПоискаПоСтроке.ОкончаниеВводаТекстаВЭлементеУправления(Элемент, Текст, Значение, СтандартнаяОбработка, ПолучитьСтруктуруПараметровТайпинга(), ЭтаФорма, Тип("СправочникСсылка.Организации"), мОбработкаТайпинга, мТекстТайпинга, мПоследнееЗначениеЭлементаТайпинга, Ложь);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
// 

мОбработкаТайпинга                 = Ложь;
мТекстТайпинга                     = "";
мПоследнееЗначениеЭлементаТайпинга = Неопределено;

мБазоваяВерсия = Неопределено;

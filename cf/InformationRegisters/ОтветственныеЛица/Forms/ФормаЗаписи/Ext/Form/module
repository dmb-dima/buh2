Перем мСтруктурнаяЕдиница; // сохраняем структурную единицу, данные которого начинали редактировать

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()

	мСтруктурнаяЕдиница = СтруктурнаяЕдиница;
	Заголовок = "Ответственное лицо для: " + СокрЛП(СтруктурнаяЕдиница);

КонецПроцедуры //ПриОткрытии()

Процедура ПослеЗаписи()

	Оповестить("ОбновитьФорму", Новый Структура("ИмяЭлемента","ОтветственноеЛицо"), СтруктурнаяЕдиница);
	Если мСтруктурнаяЕдиница <> СтруктурнаяЕдиница Тогда

		// оповестим также форму того физлица, данные которого начинали редактировать
		Оповестить("ОбновитьФорму", Новый Структура("ИмяЭлемента","ОтветственноеЛицо"), мСтруктурнаяЕдиница);
		мСтруктурнаяЕдиница = СтруктурнаяЕдиница;
	КонецЕсли;

КонецПроцедуры // ПослеЗаписи()


// Обработчик события "Открытие" ответственного лица.
//
Процедура КнопкаИсторияНажатие(Элемент)
	
	ФормаРегистра = РегистрыСведений.ОтветственныеЛица.ПолучитьФормуСписка();
	ФормаРегистра.РегистрСведенийСписок.Отбор.СтруктурнаяЕдиница.Значение = СтруктурнаяЕдиница;
	ФормаРегистра.РегистрСведенийСписок.Отбор.СтруктурнаяЕдиница.ВидСравнения = ВидСравнения.Равно;
	ФормаРегистра.РегистрСведенийСписок.Отбор.СтруктурнаяЕдиница.Использование = Истина;
	ФормаРегистра.ЭлементыФормы.РегистрСведенийСписок.НачальноеОтображениеСписка = НачальноеОтображениеСписка.Конец;
	
	ФормаРегистра.Открыть();
	
КонецПроцедуры

// Обработчик события "ПриИзменении" ответственного лица.
//
Процедура СтруктурнаяЕдиницаПриИзменении(Элемент)

	Заголовок = "Ответственное лицо для: " + СокрЛП(СтруктурнаяЕдиница);

КонецПроцедуры // СтруктурнаяЕдиницаПриИзменении()



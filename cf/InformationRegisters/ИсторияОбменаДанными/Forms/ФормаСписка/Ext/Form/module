
Процедура РегистрСведенийСписокПриПолученииДанных(Элемент, ОформленияСтрок)
	
	// отображаем дату загрузки и выгрузки данных
	Для Каждого Оформление Из ОформленияСтрок Цикл
					
		ОтображатьКартинку = Ложь;
					
		Если ЗначениеЗаполнено(Оформление.ДанныеСтроки.ДатаПоследнейЗагрузки) Тогда 
				
			ОтображатьКартинку = Истина;
			Если Оформление.ДанныеСтроки.РезультатПоследнейЗагрузки = Истина Тогда
				Оформление.Ячейки.ДатаПоследнейЗагрузки.УстановитьКартинку(БиблиотекаКартинок.Утвердить);
			Иначе	
				Оформление.Ячейки.ДатаПоследнейЗагрузки.УстановитьКартинку(БиблиотекаКартинок.Остановить);
			КонецЕсли;
			
			Если Оформление.ДанныеСтроки.РезультатОтложенныхДвиженийДокументов = Неопределено Тогда
				
				Оформление.Ячейки.РезультатОтложенныхДвиженийДокументов.ОтображатьКартинку = Ложь;
				Оформление.Ячейки.РезультатОтложенныхДвиженийДокументов.УстановитьТекст("");
				
			ИначеЕсли Оформление.ДанныеСтроки.РезультатОтложенныхДвиженийДокументов = Истина Тогда
				Оформление.Ячейки.РезультатОтложенныхДвиженийДокументов.УстановитьКартинку(БиблиотекаКартинок.Утвердить);
				Оформление.Ячейки.РезультатОтложенныхДвиженийДокументов.УстановитьТекст("Успешно");
				Оформление.Ячейки.РезультатОтложенныхДвиженийДокументов.ОтображатьКартинку = Истина;
			Иначе	
				Оформление.Ячейки.РезультатОтложенныхДвиженийДокументов.УстановитьКартинку(БиблиотекаКартинок.Остановить);
				Оформление.Ячейки.РезультатОтложенныхДвиженийДокументов.УстановитьТекст("С ошибками");
				Оформление.Ячейки.РезультатОтложенныхДвиженийДокументов.ОтображатьКартинку = Истина;
			КонецЕсли;
			
			Если Оформление.ДанныеСтроки.НаличиеДанныхФоновойЗагрузки = Истина Тогда
				Оформление.Ячейки.НаличиеДанныхФоновойЗагрузки.УстановитьКартинку(БиблиотекаКартинок.ВыполнитьЗадачу);
				Оформление.Ячейки.НаличиеДанныхФоновойЗагрузки.УстановитьТекст("Фоновый обмен");
			Иначе	
				Оформление.Ячейки.НаличиеДанныхФоновойЗагрузки.УстановитьКартинку(БиблиотекаКартинок.Утвердить);
				Оформление.Ячейки.НаличиеДанныхФоновойЗагрузки.УстановитьТекст("Завершена");
			КонецЕсли;
			
			Оформление.Ячейки.НаличиеДанныхФоновойЗагрузки.ОтображатьКартинку = Истина;
			
			ДатаНачалаПоследнейЗагрузки = Оформление.ДанныеСтроки.ДатаНачалаПоследнейЗагрузки; 
			
			Если ЗначениеЗаполнено(ДатаНачалаПоследнейЗагрузки) Тогда
				
				ВремяПоследнейЗагрузки = Оформление.ДанныеСтроки.ДатаПоследнейЗагрузки - ДатаНачалаПоследнейЗагрузки;
				СтрокаДляПользователя = Строка(Оформление.ДанныеСтроки.ДатаПоследнейЗагрузки) + "  (" + 
					ПроцедурыОбменаДаннымиКлиент.ПолучитьПоРазностиВремениПредставлениеДляПользователя(ВремяПоследнейЗагрузки) + ")";
				
				Оформление.Ячейки.ДатаПоследнейЗагрузки.УстановитьТекст(СтрокаДляПользователя);
    				
			КонецЕсли;
										
		Иначе
			Оформление.Ячейки.ДатаПоследнейЗагрузки.УстановитьТекст("Не производилась");
			Оформление.Ячейки.РезультатОтложенныхДвиженийДокументов.УстановитьТекст("");
			Оформление.Ячейки.НаличиеДанныхФоновойЗагрузки.УстановитьТекст("");
			
		КонецЕсли;
							
		Оформление.Ячейки.ДатаПоследнейЗагрузки.ОтображатьКартинку = ОтображатьКартинку;
		
			
			
		ОтображатьКартинку = Ложь;
			
		Если ЗначениеЗаполнено(Оформление.ДанныеСтроки.ДатаПоследнейВыгрузки) Тогда 
				
			ОтображатьКартинку = Истина;
			Если Оформление.ДанныеСтроки.РезультатПоследнейВыгрузки = Истина Тогда
				Оформление.Ячейки.ДатаПоследнейВыгрузки.УстановитьКартинку(БиблиотекаКартинок.Утвердить);
			Иначе	
				Оформление.Ячейки.ДатаПоследнейВыгрузки.УстановитьКартинку(БиблиотекаКартинок.Остановить);
			КонецЕсли;	
			
			ДатаНачалаПоследнейВыгрузки = Оформление.ДанныеСтроки.ДатаНачалаПоследнейВыгрузки; 
			
			Если ЗначениеЗаполнено(ДатаНачалаПоследнейВыгрузки) Тогда
				
				ВремяПоследнейВыгрузки = Оформление.ДанныеСтроки.ДатаПоследнейВыгрузки - ДатаНачалаПоследнейВыгрузки;
				СтрокаДляПользователя = Строка(Оформление.ДанныеСтроки.ДатаПоследнейВыгрузки) + "  (" + 
					ПроцедурыОбменаДаннымиКлиент.ПолучитьПоРазностиВремениПредставлениеДляПользователя(ВремяПоследнейВыгрузки) + ")";
				
				Оформление.Ячейки.ДатаПоследнейВыгрузки.УстановитьТекст(СтрокаДляПользователя);
    				
			КонецЕсли;
				
		Иначе	
				
			ОтображатьФлаг = Истина;
			Оформление.Ячейки.ДатаПоследнейВыгрузки.УстановитьТекст("Не производилась");
				
		КонецЕсли;
								
		Оформление.Ячейки.ДатаПоследнейВыгрузки.ОтображатьКартинку = ОтображатьКартинку;			
				
    КонецЦикла;
	
КонецПроцедуры

Процедура РегистрСведенийСписокКомментарийКЗагрузкеДанныхОткрытие(Элемент, СтандартнаяОбработка)
	
	ФормаРедактированияТекста = ПолучитьОбщуюФорму("ФормаРедактированияТекста", ЭтаФорма, Строка(Новый УникальныйИдентификатор));
	ФормаРедактированияТекста.УстановитьРедактируемыйТекст(Элемент.Значение);
	ФормаРедактированияТекста.Открыть();
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

Процедура РегистрСведенийСписокВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	Если Колонка.Имя = "КомментарийКЗагрузкеДанных"
		ИЛИ Колонка.Имя = "КомментарийКОтложенномуДвижениюДокументов"
		ИЛИ Колонка.Имя = "КомментарийКВыгрузкеДанных" Тогда
		
		ФормаРедактированияТекста = ПолучитьОбщуюФорму("ФормаРедактированияТекста", ЭтаФорма, Строка(Новый УникальныйИдентификатор));
		ФормаРедактированияТекста.УстановитьРедактируемыйТекст(Элемент.ТекущиеДанные[Колонка.Имя]);
		ФормаРедактированияТекста.Открыть();
		
		СтандартнаяОбработка = Ложь;	
		
	КонецЕсли;
	
КонецПроцедуры

РегистрСведенийСписок.Колонки.Добавить("Период");
РегистрСведенийСписок.Колонки.Добавить("УзелИнформационнойБазы");
РегистрСведенийСписок.Колонки.Добавить("ДатаПоследнейЗагрузки");
РегистрСведенийСписок.Колонки.Добавить("ДатаПоследнейВыгрузки");
РегистрСведенийСписок.Колонки.Добавить("РезультатПоследнейВыгрузки");
РегистрСведенийСписок.Колонки.Добавить("РезультатПоследнейЗагрузки");
РегистрСведенийСписок.Колонки.Добавить("РезультатОтложенныхДвиженийДокументов");
РегистрСведенийСписок.Колонки.Добавить("НаличиеДанныхФоновойЗагрузки");
РегистрСведенийСписок.Колонки.Добавить("ДатаНачалаПоследнейЗагрузки");
РегистрСведенийСписок.Колонки.Добавить("ДатаНачалаПоследнейВыгрузки");

РегистрСведенийСписок.Порядок.Установить("Период Убыв");



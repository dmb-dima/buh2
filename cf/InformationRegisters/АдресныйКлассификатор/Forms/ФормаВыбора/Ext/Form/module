
Перем мНазваниеЭлемента;

Перем КодРодительскогоЭлемента;
Перем КодРегионаРодительскогоЭлемента;
Перем КодРайонаРодительскогоЭлемента;
Перем КодГородаРодительскогоЭлемента;
Перем КодНасПунктаРодительскогоЭлемента;

//в переменной хранится ключ записи куда нужно спозиционироваться при открытии
Перем мКлючЗаписи;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБРАБОТКИ АДРЕСНОЙ ИНФОРМАЦИИ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ СПИСКА

// Функция возвращает структуру всех измерений регистра Адресный Классификатор по текущему наименованию региона и отбору
Функция СформироватьСтруктуруЗаписиПоОтбору(ИмяНаименования)
	ОтборРегистра = РегистрСведенийСписок.Отбор;
	
	Запрос = Новый Запрос();
	
	АдресноеСокращение = "";
	ИмяОбъекта = УправлениеКонтактнойИнформацией.ПолучитьИмяИАдресноеСокращение(ИмяНаименования, АдресноеСокращение);
	
	Ограничения = "(АдресныйКлассификатор.Наименование = &Наименование)";
    Запрос.УстановитьПараметр("Наименование", ИмяОбъекта); 
	
	Если Не ПустаяСтрока(АдресноеСокращение) Тогда
		ТекущееОграничение = "И (АдресныйКлассификатор.Сокращение = &АдресноеСокращение)";
		Ограничения = Ограничения + Символы.ПС + ТекущееОграничение;
		Запрос.УстановитьПараметр("АдресноеСокращение", АдресноеСокращение);
	КонецЕсли;
	
	Для Каждого СтрокаОтбора Из ОтборРегистра Цикл
		
		Если НЕ СтрокаОтбора.Использование Тогда
			Продолжить;
		КонецЕсли;
		
		ТекущееОграничение = "И (АдресныйКлассификатор." + СтрокаОтбора.Имя + " = &" + СтрокаОтбора.Имя + ")";
		
		Ограничения = Ограничения + Символы.ПС + ТекущееОграничение;
		Запрос.УстановитьПараметр(СтрокаОтбора.Имя, СтрокаОтбора.Значение);
		
	КонецЦикла;
	
	Запрос.Текст = "ВЫБРАТЬ
	                |	АдресныйКлассификатор.ТипАдресногоЭлемента,
	                |	АдресныйКлассификатор.КодРегионаВКоде,
	                |	АдресныйКлассификатор.КодРайонаВКоде,
	                |	АдресныйКлассификатор.КодГородаВКоде,
	                |	АдресныйКлассификатор.КодНаселенногоПунктаВКоде,
	                |	АдресныйКлассификатор.КодУлицыВКоде,
	                |	АдресныйКлассификатор.Код
	                |ИЗ
	                |	РегистрСведений.АдресныйКлассификатор КАК АдресныйКлассификатор
					| ГДЕ 
					|" + Ограничения;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	РезультирующаяСтруктура = Новый Структура();

	// выбран хотя бы один элемент - его и подставляем
	Выборка.Следующий();
	Для Каждого Колонка Из РезультатЗапроса.Колонки Цикл
		
		РезультирующаяСтруктура.Вставить(Колонка.Имя, Выборка[Колонка.Имя]);
			
	КонецЦикла; 
	
	Возврат РезультирующаяСтруктура;
	
КонецФункции

//	Функция возвращает ключ куда нужно спозиционироваться при открытии
Функция ВернутьКлючДляПозиционирования(ИмяНаименования)
	ИмяОбъекта = ?((НазваниеЭлемента = Неопределено) ИЛИ (ПустаяСтрока(НазваниеЭлемента)), ИмяНаименования, НазваниеЭлемента);
	Если НЕ ЗначениеЗаполнено(ИмяОбъекта) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	СтруктураОграничений = СформироватьСтруктуруЗаписиПоОтбору(ИмяОбъекта);
	Если СтруктураОграничений = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Рег = РегистрыСведений.АдресныйКлассификатор;
	мКлючЗаписи = Рег.СоздатьКлючЗаписи(СтруктураОграничений);

	Возврат мКлючЗаписи;
КонецФункции

// Процедура устанавливает отбор параметра по определенному коду
Процедура УстановитьОтборПоКоду(ИмяЭлементаОтбора, КодОтбора)
	ОтборРегистра = РегистрСведенийСписок.Отбор;
	
	ЭлементОтбора = ОтборРегистра[ИмяЭлементаОтбора];
	Если (КодОтбора <> -1) Тогда
		ЭлементОтбора.ВидСравнения  = ВидСравнения.Равно;
		ЭлементОтбора.Значение      = КодОтбора;
		ЭлементОтбора.Использование = Истина;
	Иначе
		ЭлементОтбора.Использование = Ложь;
    КонецЕсли;
	
КонецПроцедуры

// Процедура устанавливает условия отбора для демонстрации в списке для 
// выбора только регионов
//
// Параметры: 
//  нет
//
Процедура ОтобратьТолькоРегионы(ТекущийРегион = Неопределено) Экспорт
	
    мКлючЗаписи = Неопределено;
	
	УстановитьОтборПоКоду("КодРегионаВКоде",           -1);
	УстановитьОтборПоКоду("КодРайонаВКоде",            -1);
	УстановитьОтборПоКоду("КодГородаВКоде",            -1);
	УстановитьОтборПоКоду("КодНаселенногоПунктаВКоде", -1);
	УстановитьОтборПоКоду("ТипАдресногоЭлемента",       1);
	
	мНазваниеЭлемента = "регионов";
	
	мКлючЗаписи = ВернутьКлючДляПозиционирования(ТекущийРегион);
	
КонецПроцедуры

// Процедура устанавливает условия отбора для демонстрации в списке для 
// выбора только регионов
//
// Параметры: 
//  нет
//
Процедура ОтобратьТолькоРайоны(ТекущийРайон = Неопределено) Экспорт
	
	мКлючЗаписи = Неопределено;
	УстановитьОтборПоКоду("КодРегионаВКоде",           КодРегионаРодительскогоЭлемента);
	УстановитьОтборПоКоду("КодРайонаВКоде",            -1);
	УстановитьОтборПоКоду("КодГородаВКоде",            -1);
	УстановитьОтборПоКоду("КодНаселенногоПунктаВКоде", -1);
	УстановитьОтборПоКоду("ТипАдресногоЭлемента",       2);
	
	мНазваниеЭлемента = "районов";
	мКлючЗаписи = ВернутьКлючДляПозиционирования(ТекущийРайон);
	
КонецПроцедуры

// Процедура устанавливает условия отбора для демонстрации в списке для 
// выбора только районов
//
// Параметры: 
//  нет
//
Процедура ОтобратьТолькоГорода(ТекущийГород = Неопределено) Экспорт

	мКлючЗаписи = Неопределено;
	УстановитьОтборПоКоду("КодРегионаВКоде",           КодРегионаРодительскогоЭлемента);
	УстановитьОтборПоКоду("КодРайонаВКоде",            КодРайонаРодительскогоЭлемента);
	УстановитьОтборПоКоду("КодГородаВКоде",            -1);
	УстановитьОтборПоКоду("КодНаселенногоПунктаВКоде", -1);
	УстановитьОтборПоКоду("ТипАдресногоЭлемента",       3);
	
	мНазваниеЭлемента = "городов";
	мКлючЗаписи = ВернутьКлючДляПозиционирования(ТекущийГород);

КонецПроцедуры

// Процедура устанавливает условия отбора для демонстрации в списке для 
// выбора только населенных пунктов
//
// Параметры: 
//  нет
//
Процедура ОтобратьТолькоНаселенныеПункты(ТекущийНаселенныйПункт = Неопределено) Экспорт

	мКлючЗаписи = Неопределено;
	УстановитьОтборПоКоду("КодРегионаВКоде",           КодРегионаРодительскогоЭлемента);
	УстановитьОтборПоКоду("КодРайонаВКоде",            КодРайонаРодительскогоЭлемента);
	УстановитьОтборПоКоду("КодГородаВКоде",            КодГородаРодительскогоЭлемента);
	УстановитьОтборПоКоду("КодНаселенногоПунктаВКоде", -1);
	УстановитьОтборПоКоду("ТипАдресногоЭлемента",       4);

	мНазваниеЭлемента = "населенных пунктов";
	мКлючЗаписи = ВернутьКлючДляПозиционирования(ТекущийНаселенныйПункт);

КонецПроцедуры

// Процедура устанавливает условия отбора для демонстрации в списке для 
// выбора только улиц
//
// Параметры: 
//  нет
//
Процедура ОтобратьТолькоУлицы(ТекущаяУлица = Неопределено) Экспорт

	мКлючЗаписи = Неопределено;
	УстановитьОтборПоКоду("КодРегионаВКоде",           КодРегионаРодительскогоЭлемента);
	УстановитьОтборПоКоду("КодРайонаВКоде",            КодРайонаРодительскогоЭлемента);
	УстановитьОтборПоКоду("КодГородаВКоде",            КодГородаРодительскогоЭлемента);
	УстановитьОтборПоКоду("КодНаселенногоПунктаВКоде", КодНасПунктаРодительскогоЭлемента);
	УстановитьОтборПоКоду("ТипАдресногоЭлемента",      5);

	мНазваниеЭлемента = "улиц";
	мКлючЗаписи = ВернутьКлючДляПозиционирования(ТекущаяУлица);

КонецПроцедуры

// Процедура устанавливает "родителя" для построения условий отбора по переданным
// уже заполненным адресным полям
//
// Параметры: 
// Параметры: 
//  НазваниеРегиона - название региона( с сокращением)
//  НазваниеРайона - название района( с сокращением)
//  НазваниеГорода - название города( с сокращением)
//  НазваниеНаселенногоПункта - название населенного пункта( с сокращением)
//
Процедура УстановитьРодителя(Знач НазваниеРегиона, Знач НазваниеРайона, Знач НазваниеГорода, Знач НазваниеНаселенногоПункта) Экспорт

	Ограничения = УправлениеКонтактнойИнформацией.ВернутьСтруктуруОграниченийПоРодителю(НазваниеРегиона, НазваниеРайона, НазваниеГорода, НазваниеНаселенногоПункта, "", КодРодительскогоЭлемента);
	УстановитьОграничения(Ограничения);
	
КонецПроцедуры

// Процедура устанавливает коды родительских: региона, района, города, населенного пункта
// 
Процедура УстановитьОграничения(Ограничения) Экспорт
	
	Если НЕ Ограничения.Свойство("КодРегионаВКоде", КодРегионаРодительскогоЭлемента) Тогда
		КодРегионаРодительскогоЭлемента = -1;
	КонецЕсли;
	
	Если НЕ Ограничения.Свойство("КодРайонаВКоде", КодРайонаРодительскогоЭлемента) Тогда
		КодРайонаРодительскогоЭлемента = -1;
	КонецЕсли;

	Если НЕ Ограничения.Свойство("КодГородаВКоде", КодГородаРодительскогоЭлемента) Тогда
		КодГородаРодительскогоЭлемента = -1;
	КонецЕсли;

	Если НЕ Ограничения.Свойство("КодНаселенногоПунктаВКоде", КодНасПунктаРодительскогоЭлемента) Тогда
		КодНасПунктаРодительскогоЭлемента = -1;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ И ЭЛЕМЕНТОВ ФОРМЫ

// Процедура - обработчик события "ПриАктивизацииСтроки" элемента РегистрСведенийСписок.
//
Процедура РегистрСведенийСписокПриАктивизацииСтроки(Элемент)
	
	Если (Элемент.ТекущиеДанные <> Неопределено) И (Элемент.ТекущиеДанные.Код > 0) Тогда
		ЭлементыФормы.НадписьРодителей.Заголовок = УправлениеКонтактнойИнформацией.ПолучитьПолноеНазвание(Элемент.ТекущиеДанные.Код);
		Индекс = Элемент.ТекущиеДанные.Индекс;
		
	Иначе
		ЭлементыФормы.НадписьРодителей.Заголовок = "Не выбран элемент для детализации сведений!";
		Индекс = "";
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик события "ПередОткрытием" формы.
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ЭтаФорма.Заголовок = "Выбор " + мНазваниеЭлемента;
	
	СписокЭлементов = ЭлементыФормы.РегистрСведенийСписок;
	
	СписокЭлементов.НастройкаПорядка.Наименование.Доступность = Истина;
	СписокЭлементов.Значение.Порядок.Установить("Наименование Возр");
	
	СписокЭлементов.Колонки.Код.ИзменятьВидимость                       = Ложь;
	СписокЭлементов.Колонки.ТипАдресногоЭлемента.ИзменятьВидимость      = Ложь;
	СписокЭлементов.Колонки.КодРегионаВКоде.ИзменятьВидимость           = Ложь;
	СписокЭлементов.Колонки.КодРайонаВКоде.ИзменятьВидимость            = Ложь;
	СписокЭлементов.Колонки.КодГородаВКоде.ИзменятьВидимость            = Ложь;
	СписокЭлементов.Колонки.КодНаселенногоПунктаВКоде.ИзменятьВидимость = Ложь;
	СписокЭлементов.Колонки.КодУлицыВКоде.ИзменятьВидимость             = Ложь;
	
	СписокЭлементов.Колонки.Код.Видимость                       = Ложь;
	СписокЭлементов.Колонки.ТипАдресногоЭлемента.Видимость      = Ложь;
	СписокЭлементов.Колонки.КодРегионаВКоде.Видимость           = Ложь;
	СписокЭлементов.Колонки.КодРайонаВКоде.Видимость            = Ложь;
	СписокЭлементов.Колонки.КодГородаВКоде.Видимость            = Ложь;
	СписокЭлементов.Колонки.КодНаселенногоПунктаВКоде.Видимость = Ложь;
	СписокЭлементов.Колонки.КодУлицыВКоде.Видимость             = Ложь;
	
	РегистрСведенийСписок.Колонки.Добавить("Код", Ложь);
	
	РежимВыбора = Истина;
	СписокЭлементов.РежимВыбора = Истина;
	
	Если мКлючЗаписи <> Неопределено Тогда
		
		ЭтаФорма.ПараметрТекущаяСтрока = мКлючЗаписи;
		
	КонецЕсли;
	
	Если НЕ ПолныеПрава.ЕстьЗаписиВРегистреСведений("АдресныйКлассификатор") Тогда
		ОтветНаВопрос = Вопрос("Адресный классификатор пуст. Хотите произвести загрузку адресного классификатора?", РежимДиалогаВопрос.ДаНет);
		Если ОтветНаВопрос = КодВозвратаДиалога.Да Тогда
			РегистрыСведений.АдресныйКлассификатор.ПолучитьФорму("ФормаЗагрузкиАдресногоКлассификатора").ОткрытьМодально();
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

мНазваниеЭлемента = "адресных элементов";

КодРодительскогоЭлемента          =  0;
КодРегионаРодительскогоЭлемента   = -1;
КодРайонаРодительскогоЭлемента    = -1;
КодГородаРодительскогоЭлемента    = -1;
КодНасПунктаРодительскогоЭлемента = -1;


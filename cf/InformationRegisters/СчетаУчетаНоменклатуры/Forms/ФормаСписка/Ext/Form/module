
// Процедура - обработчик события "ОбработкаВыбора"
//
Процедура СчетОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	СтандартнаяОбработка = БухгалтерскийУчет.СчетМожноИспользоватьВПроводках(ВыбранноеЗначение);

КонецПроцедуры

// Процедура - обработчик события "Начало выбора" с фильтром по забалансовым 
// счетам
//
Процедура СчетаНачалоВыбораЗабалансовые(Элемент, СтандартнаяОбработка)

	РаботаСДиалогами.ВыборСчета(Элемент, СтандартнаяОбработка, Истина);

КонецПроцедуры

// Процедура - обработчик события "Начало выбора" с фильтром по балансовым 
// счетам
//
Процедура СчетаНачалоВыбораБалансовые(Элемент, СтандартнаяОбработка)

	РаботаСДиалогами.ВыборСчета(Элемент, СтандартнаяОбработка, Ложь);

КонецПроцедуры

// Процедура - обработчик события "ОбработкаВыбора"
//
Процедура РегистрСведенийСписокСчетБухгалтерскогоУчетаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	СтандартнаяОбработка = БухгалтерскийУчет.СчетМожноИспользоватьВПроводках(ВыбранноеЗначение);

КонецПроцедуры

// Процедура - обработчик события "ПриАктивизацииСтроки"
//
Процедура РегистрСведенийСписокПриАктивизацииСтроки(Элемент)

	СтрокаТЧ = ЭлементыФормы.РегистрСведенийСписок.ТекущиеДанные;
	
	Если (НЕ СтрокаТЧ = Неопределено) 
		И (ЭлементыФормы.РегистрСведенийСписок.СпособРедактирования = СпособРедактированияСписка.ВСписке)
		И (ЭлементыФормы.РегистрСведенийСписок.Колонки.ТипСклада.Видимость) 
		И (ЭлементыФормы.РегистрСведенийСписок.Колонки.Склад.Видимость) Тогда
	
		Если НЕ ЗначениеЗаполнено(СтрокаТЧ.Склад) Тогда
			
			ЭлементыФормы.РегистрСведенийСписок.Колонки.ТипСклада.ТолькоПросмотр = Ложь;
			
		Иначе
			
			ЭлементыФормы.РегистрСведенийСписок.Колонки.ТипСклада.ТолькоПросмотр = Истина;
			
		КонецЕсли;
		
	Конецесли;

КонецПроцедуры // РегистрСведенийСписокПриАктивизацииСтроки()

// Процедура - обработчик события "ПриНачалеРедактирования"
//
Процедура РегистрСведенийСписокПриНачалеРедактирования(Элемент, НоваяСтрока)

	Если НоваяСтрока Тогда

		СтрокаТЧ = ЭлементыФормы.РегистрСведенийСписок.ТекущиеДанные;
		
		Если ТипЗнч(ПараметрОтборПоИзмерению) = Тип("Структура") Тогда
			Если НЕ ЗначениеЗаполнено(ПараметрОтборПоИзмерению) Тогда
				СтрокаТЧ.Организация = глЗначениеПеременной("ОсновнаяОрганизация");
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" колонки "Склад"
//
Процедура РегистрСведенийСписокСкладПриИзменении(Элемент)
	ТекущаяСтрока = ЭлементыФормы.РегистрСведенийСписок.ТекущиеДанные;
	Если НЕ ЗначениеЗаполнено(ТекущаяСтрока.Склад) Тогда
		ЭлементыФормы.РегистрСведенийСписок.Колонки.ТипСклада.ТолькоПросмотр = Ложь;
	Иначе
		ЭлементыФормы.РегистрСведенийСписок.Колонки.ТипСклада.ТолькоПросмотр = Истина;
		ТекущаяСтрока.ТипСклада = ?(ТекущаяСтрока.Склад.ВидСклада = Перечисления.ВидыСкладов.Оптовый, Перечисления.ТипыСкладов.Оптовый, Перечисления.ТипыСкладов.Розничный);
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПриОткрытии"
//
Процедура ПриОткрытии()

	СписокОрганизаций = Новый СписокЗначений;
	
	Если ЗначениеЗаполнено(глЗначениеПеременной("ОсновнаяОрганизация")) Тогда
		СписокОрганизаций.Добавить(глЗначениеПеременной("ОсновнаяОрганизация"));
		СписокОрганизаций.Добавить(Справочники.Организации.ПустаяСсылка());
	КонецЕсли;
	
	РаботаСДиалогами.УстановитьОтборПоОрганизации(ЭтаФорма,, СписокОрганизаций, "РегистрСведенийСписок");

КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзменениеТекущейОрганизации" Тогда
		СписокОрганизаций = Новый СписокЗначений;
		
		Если ЗначениеЗаполнено(глЗначениеПеременной("ОсновнаяОрганизация")) Тогда
			СписокОрганизаций.Добавить(глЗначениеПеременной("ОсновнаяОрганизация"));
			СписокОрганизаций.Добавить(Справочники.Организации.ПустаяСсылка());
		КонецЕсли;
		
		РаботаСДиалогами.УстановитьОтборПоОрганизации(ЭтаФорма,, СписокОрганизаций, "РегистрСведенийСписок", Истина);
	КонецЕсли;
	
КонецПроцедуры













Процедура УстановитьВидимостьСубконто()

	Для Ном = 1 по 3 Цикл

		Если (Ном <= СчетУчета.ВидыСубконто.Количество()) и (ЗначениеЗаполнено(СчетУчета)) Тогда
			ЭлементыФормы["НадписьСубконтоБУ"+Ном].Заголовок = Строка(СчетУчета.ВидыСубконто[Ном-1].ВидСубконто);
			ЭлементыФормы["НадписьСубконтоБУ"+Ном].Видимость = Истина;
			ЭлементыФормы["Субконто"+Ном].Видимость        = Истина;
		Иначе
			ЭлементыФормы["НадписьСубконтоБУ"+Ном].Видимость = Ложь;
			ЭлементыФормы["Субконто"+Ном].Видимость        = Ложь;
		КонецЕсли;

	КонецЦикла;

КонецПроцедуры

// Процедура - обработчик события "ПриИзменении"
//
Процедура СчетУчетаБУПриИзменении(Элемент)

	УстановитьВидимостьПанелиСчетов();
	РаботаСДиалогами.ПриВыбореСчетаВТабличномПоле(Элемент.Значение,
		Субконто1, ЭлементыФормы.Субконто1,
		Субконто2, ЭлементыФормы.Субконто2,
		Субконто3, ЭлементыФормы.Субконто3);
								 
КонецПроцедуры

Процедура СчетБухгалтерскогоУчетаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	СтандартнаяОбработка = БухгалтерскийУчет.СчетМожноИспользоватьВПроводках(ВыбранноеЗначение);

КонецПроцедуры

// Процедура - обработчик события "Начало выбора" с фильтром по забалансовым 
// счетам
//
Процедура СчетаНачалоВыбораЗабалансовые(Элемент, СтандартнаяОбработка)

	РаботаСДиалогами.ВыборСчета(Элемент, СтандартнаяОбработка, Истина);

КонецПроцедуры

// Процедура - обработчик события "Начало выбора" с фильтром по балансовым 
// счетам
//
Процедура СчетаНачалоВыбораБалансовые(Элемент, СтандартнаяОбработка)

	РаботаСДиалогами.ВыборСчета(Элемент, СтандартнаяОбработка, Ложь);

КонецПроцедуры

Процедура ПриОткрытии()

	// Проверка ведения однофирменности
	Если НЕ Выбран() Тогда

		Если ЗначениеЗаполнено(Склад) Тогда
			ТипСклада = ?(Склад.ВидСклада = Перечисления.ВидыСкладов.Оптовый, Перечисления.ТипыСкладов.Оптовый, Перечисления.ТипыСкладов.Розничный);
		КонецЕсли;

	КонецЕсли;
	
    УстановитьДоступность();
	УстановитьВидимостьПанелиСчетов();

КонецПроцедуры

Процедура СкладПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Склад) Тогда
		ТипСклада = ?(Склад.ВидСклада = Перечисления.ВидыСкладов.Оптовый, Перечисления.ТипыСкладов.Оптовый, Перечисления.ТипыСкладов.Розничный);
	КонецЕсли;
	УстановитьДоступность();
	ПроверитьДоступностьИЗаполнениеСчетовПередачи();
КонецПроцедуры

Процедура ПроверитьДоступностьИЗаполнениеСчетовПередачи()
	Если ТипСклада = Перечисления.ТипыСкладов.Розничный Тогда
		Если НЕ ЗначениеЗаполнено(СчетУчетаПередачи) Тогда
						
		Иначе
			Ответ = Вопрос("При установке розничного типа склада счета учета переданных товаров будут очищены!
							|Установить розничный тип склада?",РежимДиалогаВопрос.ДаНет, , , "Изменения счетов учета");
			
			Если Ответ = КодВозвратаДиалога.Да Тогда
				СчетУчетаПередачиБУ 			= ПланыСчетов.Хозрасчетный.ПустаяСсылка();
								
			Иначе
				Склад = Справочники.Склады.ПустаяСсылка();
				ТипСклада = Перечисления.ТипыСкладов.ПустаяСсылка();
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли;
	
	УстановитьДоступность();
КонецПроцедуры

Процедура УстановитьДоступность()
	
	//Доступность по параметрам
	Если ЗапретРедактированияНоменклатуры Тогда
		ЭлементыФормы.Номенклатура.Доступность = Ложь;
	КонецЕсли;
	Если ЗапретРедактирования Тогда
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Действие.Доступность = Ложь;
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Действие1.Доступность = Ложь;
		ЭтаФорма.Заголовок = "Общие правила можно редактировать только из регистра ""Счета учета номенклатуры""";
	КонецЕсли;
	
	//Доступность типа склада
	Если НЕ ЗначениеЗаполнено(Склад) Тогда
		ЭлементыФормы.ТипСклада.Доступность = Истина;
	Иначе
		ЭлементыФормы.ТипСклада.Доступность = Ложь;
	КонецЕсли;
	
	//Доступность счетов передачи
	Если ТипСклада = Перечисления.ТипыСкладов.Розничный Тогда
		ЭлементыФормы.СчетУчетаПередачи.Доступность = Ложь;
	Иначе
		ЭлементыФормы.СчетУчетаПередачи.Доступность = Истина;
	КонецЕсли;
КонецПроцедуры

Процедура ТипСкладаПриИзменении(Элемент)
	ПроверитьДоступностьИЗаполнениеСчетовПередачи();
КонецПроцедуры

Процедура УстановитьВидимостьПанелиСчетов()
	
	ИмяПанелиБУ = "ТМЦ";
	Если ЗначениеЗаполнено(СчетУчета) Тогда
		Если СчетУчета.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура) = Неопределено Тогда
			ИмяПанелиБУ = "Услуги";
			УстановитьВидимостьСубконто();					
		КонецЕсли;	
	КонецЕсли;
	
	ЭлементыФормы.ПанельСчетовБУ.ТекущаяСтраница = ЭлементыФормы.ПанельСчетовБУ.Страницы[ИмяПанелиБУ];
	
КонецПроцедуры

Процедура СубконтоДт1НачалоВыбора(Элемент, СтандартнаяОбработка)

	СписокПараметров = Новый Структура();
	БухгалтерскийУчет.ОбработатьВыборСубконто(Элемент, СтандартнаяОбработка, Организация, СписокПараметров);
	
КонецПроцедуры


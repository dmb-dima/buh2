Перем СписокКБ;
Перем СписокКодировок;
Перем мВалютаРегламентированногоУчета;

Процедура РегистрСведенийСписокФайлВыгрузкиНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	ДиалогВыбораФайла.Фильтр                      = "Текстовый файл (*.txt)|*.txt";
	ДиалогВыбораФайла.Заголовок                   = "Выберите файл для выгрузки данных из клиента банка";
	ДиалогВыбораФайла.ПредварительныйПросмотр     = Ложь;
	ДиалогВыбораФайла.Расширение                  = "txt";
	ДиалогВыбораФайла.ИндексФильтра               = 0;
	ДиалогВыбораФайла.ПолноеИмяФайла              = Элемент.Значение;
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла = ложь;
	
	Если ДиалогВыбораФайла.Выбрать() Тогда
		Элемент.Значение = ДиалогВыбораФайла.ПолноеИмяФайла;
	КонецЕсли;

КонецПроцедуры

Процедура РегистрСведенийСписокФайлЗагрузкиНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	ДиалогВыбораФайла.Фильтр                      = "Текстовый файл (*.txt)|*.txt";
	ДиалогВыбораФайла.Заголовок                   = "Выберите файл для загрузки данных из клиента банка";
	ДиалогВыбораФайла.ПредварительныйПросмотр     = Ложь;
	ДиалогВыбораФайла.Расширение                  = "txt";
	ДиалогВыбораФайла.ИндексФильтра               = 0;
	ДиалогВыбораФайла.ПолноеИмяФайла              = Элемент.Значение;
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла = Ложь;
	
	Если ДиалогВыбораФайла.Выбрать() Тогда
		Элемент.Значение = ДиалогВыбораФайла.ПолноеИмяФайла;
	КонецЕсли;

КонецПроцедуры

Процедура РегистрСведенийСписокПрограммаНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	Элемент.СписокВыбора = СписокКБ;

КонецПроцедуры

Процедура РегистрСведенийСписокКодировкаНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	Элемент.СписокВыбора = СписокКодировок;

КонецПроцедуры

Процедура РегистрСведенийСписокФайлЗагрузкиОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ФайлНаДиске = Новый Файл(Элемент.Значение);
	Если Не ФайлНаДиске.Существует() Тогда
		Предупреждение("Не найден файл!");
		Возврат;
	КонецЕсли;
	
	Текст = Новый ТекстовыйДокумент();
	Если ЭлементыФормы.РегистрСведенийСписок.ТекущиеДанные.Кодировка = "DOS" Тогда
		Кодир = КодировкаТекста.OEM;
	Иначе
		Кодир = КодировкаТекста.ANSI;
	КонецЕсли;
	Текст.Прочитать(Элемент.Значение, Кодир);
	Текст.Показать(Элемент.Имя,Элемент.Значение);

	
КонецПроцедуры

Процедура РегистрСведенийСписокБанковскийСчетПриИзменении(Элемент)
	
	ТекущиеДанные = ЭлементыФормы.РегистрСведенийСписок.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекущиеДанные.БанковскийСчет) Тогда
		ТекущиеДанные.Организация = ТекущиеДанные.БанковскийСчет.Владелец;
	КонецЕсли;
	
КонецПроцедуры

Процедура РегистрСведенийСписокОрганизацияПриИзменении(Элемент)
	
	ТекущиеДанные = ЭлементыФормы.РегистрСведенийСписок.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекущиеДанные.Организация) Тогда
		УправлениеДенежнымиСредствами.УстановитьБанковскийСчет(ТекущиеДанные.БанковскийСчет,ТекущиеДанные.Организация, мВалютаРегламентированногоУчета); 
	КонецЕсли;

КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	                   
	Если ЭтаФорма.ПараметрОтборПоИзмерению<>неопределено И ЭтаФорма.ПараметрОтборПоИзмерению.Свойство("БанковскийСчет") Тогда
		ОтборПоБанковскомуСчету = ЭтаФорма.ПараметрОтборПоИзмерению.БанковскийСчет;
		Если ТипЗнч(ОтборПоБанковскомуСчету.Владелец) = Тип("СправочникСсылка.Контрагенты") Тогда
			Предупреждение("Настройка обмена данными производится только для счетов организаций.");
			Отказ=Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

СписокКБ = УправлениеДенежнымиСредствами.СписокСовместимыхПрограммКлиентовБанка();
	
СписокКодировок = Новый СписокЗначений;
СписокКодировок.Добавить("DOS");
СписокКодировок.Добавить("Windows");

мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();

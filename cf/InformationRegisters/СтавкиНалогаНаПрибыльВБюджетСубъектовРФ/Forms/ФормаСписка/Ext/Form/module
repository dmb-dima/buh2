
Процедура РегистрСведенийСписокОрганизацияПриИзменении(Элемент)
	
	Если ОбщегоНазначения.ЭтоОбособленноеПодразделение(Элемент.Значение) Тогда
		
		Предупреждение("Для обособленного подразделения используются ставки налога на прибыль головной организации");
		Элемент.Значение = ОбщегоНазначения.ГоловнаяОрганизация(Элемент.Значение);
		
	КонецЕсли;
	
	// {ОбособленныеПодразделения
	
	Если Не ТекущийЭлемент.ТекущаяСтрока = Неопределено И Не ТекущийЭлемент.ТекущаяСтрока.РегистрацияВИФНС.Владелец  = Элемент.Значение Тогда
		ТекущийЭлемент.ТекущиеДанные.РегистрацияВИФНС = "";
	КонецЕсли;
	// }ОбособленныеПодразделения    
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если НЕ Константы.ПрименяютсяРазныеСтавкиНалогаНаПрибыль.Получить() Тогда
		ОбщегоНазначения.СообщитьИнформациюПользователю("Ставка налога на прибыль в бюджет субъектов РФ не может быть указана в этом регистре,
		|т.к. в настройках программы установлено применение одинаковых ставок налога на прибыль для всех организаций
		|информационной базы.
		|Для указания ставки налога на прибыль в бюджет субъектов РФ рекомендуется открыть регистр сведений
		|""Ставки налога на прибыль"".");
		Отказ = Истина;
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ОрганизацияОтбора = ЭтаФорма.Отбор["Организация"].Значение;
	
	ОрганизацияОтбора = ?(ЗначениеЗаполнено(ОрганизацияОтбора), ОрганизацияОтбора, глЗначениеПеременной("ОсновнаяОрганизация"));
	
	// {ОбособленныеПодразделения
	Если ЗначениеЗаполнено(ОрганизацияОтбора) Тогда
		ОрганизацияОтбора = ?(ЗначениеЗаполнено(ОрганизацияОтбора.ГоловнаяОрганизация),ОрганизацияОтбора.ГоловнаяОрганизация, ОрганизацияОтбора);
	КонецЕсли;
	// }ОбособленныеПодразделения 
	
	Если ЗначениеЗаполнено(ОрганизацияОтбора) Тогда
		ЭтаФорма.Отбор["Организация"].ВидСравнения  =  ВидСравнения.Равно;
		ЭтаФорма.Отбор["Организация"].Использование = Истина;
		ЭтаФорма.Отбор["Организация"].Значение      = ОрганизацияОтбора;
	КонецЕсли;
	
	ЭлементыФормы.РегистрСведенийСписок.Колонки.Организация.ЭлементУправления.СписокВыбора  = ПроцедурыУправленияПерсоналом.ПолучитьСписокГоловныхОрганизаций();
	
КонецПроцедуры

Процедура РегистрСведенийСписокПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если ОтменаРедактирования Тогда
		Возврат
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Элемент.ТекущиеДанные.Организация) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не заполнена организация", Отказ);
	КонецЕсли;
	
	// {ОбособленныеПодразделения
	Если  НЕ ЗначениеЗаполнено(Элемент.ТекущиеДанные.РегистрацияВИФНС) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указаны сведения об ИФНС", Отказ);
	КонецЕсли;
	// }ОбособленныеПодразделения
	
	Если Не ЗначениеЗаполнено(Элемент.ТекущиеДанные.Период) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указан период", Отказ);
	КонецЕсли;
    
    Если НоваяСтрока Тогда
        ТекДата = Элемент.ТекущиеДанные.Период;
        Если Не РегистрыСведений.СтавкиНалогаНаПрибыльВБюджетСубъектовРФ.ПолучитьПоследнее(ТекДата - 1).СтавкаСубъектРФ = Элемент.ТекущиеДанные.СтавкаСубъектРФ Тогда
            НалоговыйУчет.СообщитьОбИзмененииСтавки(Элемент.ТекущиеДанные, Истина);
        КонецЕсли;
    КонецЕсли;
    
КонецПроцедуры

Процедура РегистрСведенийСписокОрганизацияНачалоВыбора(Элемент, СтандартнаяОбработка)
	
		РаботаСДиалогами.ВыбратьЗначениеПоляВводаИзСписка(
		ЭтаФорма, Элемент, СтандартнаяОбработка, ЭлементыФормы.РегистрСведенийСписок.Колонки.Организация.ЭлементУправления.СписокВыбора, Элемент.Значение);

КонецПроцедуры

Процедура РегистрСведенийСписокОрганизацияАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
		РаботаСДиалогами.ОбработатьАвтоПодборТекста(
		Текст, ТекстАвтоПодбора, СтандартнаяОбработка, ЭлементыФормы.РегистрСведенийСписок.Колонки.Организация.ЭлементУправления.СписокВыбора);

КонецПроцедуры

Процедура РегистрСведенийСписокПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
    
    Если Не НоваяСтрока Тогда
        Возврат;
    КонецЕсли;  
    
	Элемент.ТекущиеДанные.СтавкаСубъектРФ = 18;
	
КонецПроцедуры

Процедура РегистрСведенийСписокСтавкаСубъектРФПриИзменении(Элемент)
     НалоговыйУчет.СообщитьОбИзмененииСтавки(ЭлементыФормы.РегистрСведенийСписок.ТекущиеДанные, Истина);
КонецПроцедуры




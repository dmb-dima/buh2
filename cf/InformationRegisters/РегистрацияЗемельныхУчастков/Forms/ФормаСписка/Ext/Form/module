
Процедура РегистрСведенийСписокПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	Если НЕ Копирование Тогда
	
		Отказ = Истина;
		
		СписокВидов = Новый СписокЗначений();
		СписокВидов.Добавить("Регистрация",                  "Регистрация земельного участка");
		СписокВидов.Добавить("СнятиеСРегистрационногоУчета", "Снятие с регистрационного учета");
		
		Вид = СписокВидов.ВыбратьЭлемент("Выбор вида записи");
		
		Если НЕ Вид = Неопределено Тогда
			Форма = РегистрыСведений.РегистрацияЗемельныхУчастков.ПолучитьФормуРедактированияЗаписи(Вид.Значение);
			Форма.ВидЗаписи              = Перечисления.ВидЗаписиОРегистрации[Вид.Значение];
			Форма.ВключатьВНалоговуюБазу = (Форма.ВидЗаписи = Перечисления.ВидЗаписиОРегистрации.Регистрация);
			Форма.Организация            = Организация;
			Форма.ОсновноеСредство       = ОсновноеСредство;
			Форма.Открыть();
		Конецесли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура РегистрСведенийСписокПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		
		Если ОформлениеСтроки.ДанныеСтроки.ВидЗаписи = Перечисления.ВидЗаписиОРегистрации.СнятиеСРегистрационногоУчета Тогда
			
			ОформлениеСтроки.Ячейки.ВидЗаписи.Текст = "Снятие с учета";
			
		ИначеЕсли ОформлениеСтроки.ДанныеСтроки.ВидЗаписи = Перечисления.ВидЗаписиОРегистрации.Регистрация Тогда
		
			Если ОформлениеСтроки.ДанныеСтроки.ПостановкаНаУчетВНалоговомОргане = Перечисления.ПостановкаНаУчетВНалоговомОргане.СДругимКодомПоОКАТО Тогда
				
				ОформлениеСтроки.Ячейки.ПостановкаНаУчетВНалоговомОргане.Текст = СокрЛП(Перечисления.ПостановкаНаУчетВНалоговомОргане.ПоМестуНахожденияОрганизации) + " (код по ОКАТО " + ОформлениеСтроки.ДанныеСтроки.КодПоОКАТО +")";
				
			ИначеЕсли ОформлениеСтроки.ДанныеСтроки.ПостановкаНаУчетВНалоговомОргане = Перечисления.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане Тогда
				
				ОформлениеСтроки.Ячейки.ПостановкаНаУчетВНалоговомОргане.Текст = СокрЛП(ОформлениеСтроки.ДанныеСтроки.НалоговыйОрган) + " (код по ОКАТО " + ОформлениеСтроки.ДанныеСтроки.КодПоОКАТО +")";
				
			КонецЕсли;
			
			ОформлениеСтроки.Ячейки.НалоговаяЛьгота.ОтображатьТекст = Истина;
			ОформлениеСтроки.Ячейки.НалоговаяЛьгота.Текст           = УправлениеВнеоборотнымиАктивами.ПредставлениеНалоговойЛьготыПоЗемельномуНалогу(ОформлениеСтроки.ДанныеСтроки);
			
		КонецЕсли;

	КонецЦикла;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	Если РегистрСведенийСписок.Отбор.Организация.Использование = Истина
	   И РегистрСведенийСписок.Отбор.Организация.ВидСравнения  = ВидСравнения.Равно
	   И ЗначениеЗаполнено(РегистрСведенийСписок.Отбор.Организация.Значение) Тогда
	   
	   Организация = РегистрСведенийСписок.Отбор.Организация.Значение;
	   
	Иначе   
	
		Организация = глЗначениеПеременной("ОсновнаяОрганизация");
		
		// Проверка ведения однофирменности
		РаботаСДиалогами.УстановитьОтборПоОрганизации(ЭтаФорма,, глЗначениеПеременной("ОсновнаяОрганизация"), "РегистрСведенийСписок");
		
	КонецЕсли;
	
	Если РегистрСведенийСписок.Отбор.ОсновноеСредство.Использование = Истина
	   И РегистрСведенийСписок.Отбор.ОсновноеСредство.ВидСравнения  = ВидСравнения.Равно
	   И ЗначениеЗаполнено(РегистрСведенийСписок.Отбор.ОсновноеСредство.Значение) Тогда
	   
	   ОсновноеСредство = РегистрСведенийСписок.Отбор.ОсновноеСредство.Значение;
	   
	КонецЕсли;
	
	РегистрСведенийСписок.Колонки.Добавить("НалоговыйОрган");
	РегистрСведенийСписок.Колонки.Добавить("КодПоОКАТО");
	РегистрСведенийСписок.Колонки.Добавить("НалоговаяЛьготаПоНалоговойБазе");
	РегистрСведенийСписок.Колонки.Добавить("КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395");
	РегистрСведенийСписок.Колонки.Добавить("КодНалоговойЛьготыУменьшениеНалоговойБазыПоСтатье391");
	РегистрСведенийСписок.Колонки.Добавить("УменьшениеНалоговойБазыПоСтатье391");
	РегистрСведенийСписок.Колонки.Добавить("УменьшениеНалоговойБазыНаСумму");
	РегистрСведенийСписок.Колонки.Добавить("ДоляНеОблагаемойНалогомПлощадиЧислитель");
	РегистрСведенийСписок.Колонки.Добавить("ДоляНеОблагаемойНалогомПлощадиЗнаменатель");
	РегистрСведенийСписок.Колонки.Добавить("НеОблагаемаяНалогомСумма");
	РегистрСведенийСписок.Колонки.Добавить("СниженнаяНалоговаяСтавка");
	РегистрСведенийСписок.Колонки.Добавить("ПроцентУменьшенияСуммыНалога");
	РегистрСведенийСписок.Колонки.Добавить("СуммаУменьшенияСуммыНалога");
	РегистрСведенийСписок.Колонки.Добавить("ЖилищноеСтроительство");
	РегистрСведенийСписок.Колонки.Добавить("ДатаНачалаПроектирования");
	РегистрСведенийСписок.Колонки.Добавить("ДатаРегистрацииПравНаОбъектНедвижимости");
	
КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзменениеТекущейОрганизации" Тогда
		РаботаСДиалогами.УстановитьОтборПоОрганизации(ЭтаФорма,, глЗначениеПеременной("ОсновнаяОрганизация"), "РегистрСведенийСписок", Истина);
	КонецЕсли;
	
КонецПроцедуры


Процедура ОрганизацияПриИзменении(Элемент)
	
	Если Элемент.Значение.Пустая() Тогда
		
		РегистрСведенийСписок.Отбор.Организация.Использование = Ложь;
		
	Иначе
		
		РегистрСведенийСписок.Отбор.Организация.ВидСравнения  = ВидСравнения.Равно;
		РегистрСведенийСписок.Отбор.Организация.Значение      = Элемент.Значение;
		РегистрСведенийСписок.Отбор.Организация.Использование = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОсновноеСредствоПриИзменении(Элемент)
	
	Если Элемент.Значение.Пустая() Тогда
		
		РегистрСведенийСписок.Отбор.ОсновноеСредство.Использование = Ложь;
		
	Иначе
		
		РегистрСведенийСписок.Отбор.ОсновноеСредство.ВидСравнения  = ВидСравнения.Равно;
		РегистрСведенийСписок.Отбор.ОсновноеСредство.Значение      = Элемент.Значение;
		РегистрСведенийСписок.Отбор.ОсновноеСредство.Использование = Истина;
		
	КонецЕсли;
	
КонецПроцедуры
	
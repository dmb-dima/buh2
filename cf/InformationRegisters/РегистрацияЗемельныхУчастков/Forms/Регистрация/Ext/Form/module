////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

// Хранит сохраняемые в течение сеанса работы с формой реквизиты формы.
Перем СтруктураСохраняемыхРеквизитов;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ УПРАВЛЕНИЯ ВНЕШНИМ ВИДОМ ФОРМЫ

// Управление видимостью и доступностью элементов формы.
//
Процедура УстановитьВидимость()
	
	ЭлементыФормы.ДоляВПравеОбщейСобственностиЧислитель.Доступность               = ОбщаяСобственность;
	ЭлементыФормы.ДоляВПравеОбщейСобственностиЧислитель.АвтоОтметкаНезаполненного = ОбщаяСобственность;
	ЭлементыФормы.ДоляВПравеОбщейСобственностиЧислитель.ОтметкаНезаполненного     = ОбщаяСобственность И ДоляВПравеОбщейСобственностиЧислитель = 0;
	
	ЭлементыФормы.ДоляВПравеОбщейСобственностиЗнаменатель.Доступность               = ОбщаяСобственность;
	ЭлементыФормы.ДоляВПравеОбщейСобственностиЗнаменатель.АвтоОтметкаНезаполненного = ОбщаяСобственность;
	ЭлементыФормы.ДоляВПравеОбщейСобственностиЗнаменатель.ОтметкаНезаполненного     = ОбщаяСобственность И ДоляВПравеОбщейСобственностиЗнаменатель = 0;
	
	ЭлементыФормы.ДатаНачалаПроектирования.Доступность                = ЖилищноеСтроительство;
	ЭлементыФормы.ДатаРегистрацииПравНаОбъектНедвижимости.Доступность = ЖилищноеСтроительство;
	
	ПостановкаНаУчетСДругимКодомПоОКАТО = (ПостановкаНаУчетВНалоговомОргане = Перечисления.ПостановкаНаУчетВНалоговомОргане.СДругимКодомПоОКАТО);
	
	ЭлементыФормы.КодПоОКАТОПоМестуНахожденияОрганизации.Доступность               = ПостановкаНаУчетСДругимКодомПоОКАТО;
	ЭлементыФормы.КодПоОКАТОПоМестуНахожденияОрганизации.АвтоОтметкаНезаполненного = ПостановкаНаУчетСДругимКодомПоОКАТО;
	ЭлементыФормы.КодПоОКАТОПоМестуНахожденияОрганизации.ОтметкаНезаполненного     = ПостановкаНаУчетСДругимКодомПоОКАТО И ПустаяСтрока(КодПоОКАТОПоМестуНахожденияОрганизации);
	
	ПостановкаНаУчетВДругомНалоговомОргане = (ПостановкаНаУчетВНалоговомОргане = Перечисления.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане);
	
	ЭлементыФормы.НалоговыйОрган.Доступность               = ПостановкаНаУчетВДругомНалоговомОргане;
	ЭлементыФормы.НалоговыйОрган.АвтоОтметкаНезаполненного = ПостановкаНаУчетВДругомНалоговомОргане;
	ЭлементыФормы.НалоговыйОрган.ОтметкаНезаполненного     = ПостановкаНаУчетВДругомНалоговомОргане И НалоговыйОрган.Пустая();
	
	ЭлементыФормы.НадписьКодПоОКАТО.Доступность = ПостановкаНаУчетВДругомНалоговомОргане;
	
	ЭлементыФормы.КодПоОКАТОВДругомНалоговомОргане.Доступность               = ПостановкаНаУчетВДругомНалоговомОргане;
	ЭлементыФормы.КодПоОКАТОВДругомНалоговомОргане.АвтоОтметкаНезаполненного = ПостановкаНаУчетВДругомНалоговомОргане;
	ЭлементыФормы.КодПоОКАТОВДругомНалоговомОргане.ОтметкаНезаполненного     = ПостановкаНаУчетВДругомНалоговомОргане И ПустаяСтрока(КодПоОКАТОВДругомНалоговомОргане);
	
	ЭлементыФормы.НалоговаяЛьгота.Заголовок = УправлениеВнеоборотнымиАктивами.ПредставлениеНалоговойЛьготыПоЗемельномуНалогу(РегистрСведенийМенеджерЗаписи);
																	   
КонецПроцедуры // УстановитьВидимость()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием()
	
	ОрганизацияПоУмолчанию = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");	
	
	Если НЕ Выбран() Тогда
		
		Период = Дата(1,1,1);
		
		Если ПараметрОбъектКопирования = Неопределено Тогда 
	
			Если Организация.Пустая() Тогда
				Организация = ОрганизацияПоУмолчанию;
			КонецЕсли;
			
			ПостановкаНаУчетВНалоговомОргане = Перечисления.ПостановкаНаУчетВНалоговомОргане.ПоМестуНахожденияОрганизации;
			НалоговаяЛьготаПоНалоговойБазе   = Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.НеПрименяется;
			НалоговаяЛьготаПоСуммеНалога     = Перечисления.ВидНалоговойЛьготыПоСуммеНалогаПоЗемельномуНалогу.НеПрименяется;
			
		КонецЕсли;
		
	КонецЕсли;
	
	// Код по ОКАТО.
	Если ПостановкаНаУчетВНалоговомОргане = Перечисления.ПостановкаНаУчетВНалоговомОргане.СДругимКодомПоОКАТО Тогда
		КодПоОКАТОПоМестуНахожденияОрганизации = КодПоОКАТО;
	ИначеЕсли ПостановкаНаУчетВНалоговомОргане = Перечисления.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане Тогда
		КодПоОКАТОВДругомНалоговомОргане = КодПоОКАТО;
	КонецЕсли;
	
	УстановитьВидимость();
		
КонецПроцедуры // ПередОткрытием()

// Обработчик события "ПередЗаписью" формы.
//
Процедура ПередЗаписью(Отказ)
	
	Если Период = Дата(1,1,1) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указана дата регистрации!", Отказ);
	КонецЕсли;
	
	Если Организация.Пустая() Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указана организация!", Отказ);
	КонецЕсли;
	
	Если ОсновноеСредство.Пустая() Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указано основное средство!", Отказ);
	КонецЕсли;
	
	Если ПустаяСтрока(КодКатегорииЗемель) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указан код категории земель!", Отказ);
	КонецЕсли;
	
	Если КадастроваяСтоимость = 0 Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указана кадастровая стоимость!", Отказ);
	КонецЕсли;
	
	Если ОбщаяСобственность Тогда
		
		Если ДоляВПравеОбщейСобственностиЧислитель = 0 Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Не указан числитель дроби - доли в праве на участок!", Отказ);
		КонецЕсли;
		
		Если ДоляВПравеОбщейСобственностиЗнаменатель = 0 Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Не указан знаменатель дроби - доли в праве на участок!", Отказ);
		КонецЕсли;
		
		Если НЕ ДоляВПравеОбщейСобственностиЧислитель = 0
		   И НЕ ДоляВПравеОбщейСобственностиЗнаменатель = 0
		   И ДоляВПравеОбщейСобственностиЧислитель > ДоляВПравеОбщейСобственностиЗнаменатель Тогда
		   
			ОбщегоНазначения.СообщитьОбОшибке("Доля в праве на участок: числитель дроби больше знаменателя!", Отказ);
		   
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПостановкаНаУчетВНалоговомОргане = Перечисления.ПостановкаНаУчетВНалоговомОргане.СДругимКодомПоОКАТО Тогда
		
		Если ПустаяСтрока(КодПоОКАТОПоМестуНахожденияОрганизации) Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Не указан код по ОКАТО!", Отказ);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПостановкаНаУчетВНалоговомОргане = Перечисления.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане Тогда
		
		Если НалоговыйОрган.Пустая() Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Не указан налоговый орган!", Отказ);
		КонецЕсли;
		
		Если ПустаяСтрока(КодПоОКАТОВДругомНалоговомОргане) Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Не указан код по ОКАТО!", Отказ);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПустаяСтрока(КБК) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указан КБК!", Отказ);
	КонецЕсли;
	
	Если НалоговаяСтавка = 0 Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указана налоговая ставка!", Отказ);
	КонецЕсли;
	
	Если НЕ Отказ И НЕ Выбран() Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Период",           Период);
		Запрос.УстановитьПараметр("Организация",      Организация);
		Запрос.УстановитьПараметр("ОсновноеСредство", ОсновноеСредство);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПРЕДСТАВЛЕНИЕ(РегистрацияЗемельныхУчастков.ВидЗаписи) КАК ВидЗаписи
		|ИЗ
		|	РегистрСведений.РегистрацияЗемельныхУчастков КАК РегистрацияЗемельныхУчастков
		|ГДЕ
		|	РегистрацияЗемельныхУчастков.Период = &Период
		|	И РегистрацияЗемельныхУчастков.Организация = &Организация
		|	И РегистрацияЗемельныхУчастков.ОсновноеСредство = &ОсновноеСредство";
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Количество() > 0 Тогда
			
			Выборка.Следующий();
			
			ОбщегоНазначения.СообщитьОбОшибке(Формат(Период, "ДФ=dd.MM.yyyy") + " по основному средству <" + СокрЛП(ОсновноеСредство) + "> 
			                                         |уже есть запись <" + Выборка.ВидЗаписи + "> в организации <" + СокрЛП(Организация) + ">!", Отказ);
			
		КонецЕсли;
		      		
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		
		// Код по ОКАТО.
		Если ПостановкаНаУчетВНалоговомОргане = Перечисления.ПостановкаНаУчетВНалоговомОргане.СДругимКодомПоОКАТО Тогда
			КодПоОКАТО = КодПоОКАТОПоМестуНахожденияОрганизации;
		ИначеЕсли ПостановкаНаУчетВНалоговомОргане = Перечисления.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане Тогда
			КодПоОКАТО = КодПоОКАТОВДругомНалоговомОргане;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Отказ Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Информация не записана.",,, СтатусСообщения.Обычное);
	КонецЕсли;
	
КонецПроцедуры // ПередЗаписью()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Обработчик события "ПриИзменении" поля ввода "Основное средство".
//
Процедура ОсновноеСредствоПриИзменении(Элемент)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ОсновноеСредство", ОсновноеСредство);
	Запрос.УстановитьПараметр("Организация",      Организация);
	Запрос.УстановитьПараметр("Период",           Период);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РегистрацияЗемельныхУчастковСрезПоследних.КодКатегорииЗемель,
	|	РегистрацияЗемельныхУчастковСрезПоследних.КадастровыйНомер,
	|	РегистрацияЗемельныхУчастковСрезПоследних.КадастроваяСтоимость,
	|	РегистрацияЗемельныхУчастковСрезПоследних.ОбщаяСобственность,
	|	РегистрацияЗемельныхУчастковСрезПоследних.ДоляВПравеОбщейСобственностиЧислитель,
	|	РегистрацияЗемельныхУчастковСрезПоследних.ДоляВПравеОбщейСобственностиЗнаменатель,
	|	РегистрацияЗемельныхУчастковСрезПоследних.ЖилищноеСтроительство,
	|	РегистрацияЗемельныхУчастковСрезПоследних.ДатаНачалаПроектирования,
	|	РегистрацияЗемельныхУчастковСрезПоследних.ДатаРегистрацииПравНаОбъектНедвижимости,
	|	РегистрацияЗемельныхУчастковСрезПоследних.ПостановкаНаУчетВНалоговомОргане,
	|	РегистрацияЗемельныхУчастковСрезПоследних.НалоговыйОрган,
	|	РегистрацияЗемельныхУчастковСрезПоследних.КодПоОКАТО,
	|	РегистрацияЗемельныхУчастковСрезПоследних.НалоговаяСтавка,
	|	РегистрацияЗемельныхУчастковСрезПоследних.НалоговаяЛьготаПоНалоговойБазе,
	|	РегистрацияЗемельныхУчастковСрезПоследних.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395,
	|	РегистрацияЗемельныхУчастковСрезПоследних.КодНалоговойЛьготыУменьшениеНалоговойБазыПоСтатье391,
	|	РегистрацияЗемельныхУчастковСрезПоследних.УменьшениеНалоговойБазыПоСтатье391,
	|	РегистрацияЗемельныхУчастковСрезПоследних.УменьшениеНалоговойБазыНаСумму,
	|	РегистрацияЗемельныхУчастковСрезПоследних.ДоляНеОблагаемойНалогомПлощадиЧислитель,
	|	РегистрацияЗемельныхУчастковСрезПоследних.ДоляНеОблагаемойНалогомПлощадиЗнаменатель,
	|	РегистрацияЗемельныхУчастковСрезПоследних.НеОблагаемаяНалогомСумма,
	|	РегистрацияЗемельныхУчастковСрезПоследних.СниженнаяНалоговаяСтавка,
	|	РегистрацияЗемельныхУчастковСрезПоследних.ПроцентУменьшенияСуммыНалога,
	|	РегистрацияЗемельныхУчастковСрезПоследних.СуммаУменьшенияСуммыНалога
	|ИЗ
	|	РегистрСведений.РегистрацияЗемельныхУчастков.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И ОсновноеСредство = &ОсновноеСредство) КАК РегистрацияЗемельныхУчастковСрезПоследних";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Количество() > 0 Тогда
		
		Выборка.Следующий();
		
		ЗаполнитьЗначенияСвойств(РегистрСведенийМенеджерЗаписи, Выборка);
		
		// Код по ОКАТО.
		Если ПостановкаНаУчетВНалоговомОргане = Перечисления.ПостановкаНаУчетВНалоговомОргане.СДругимКодомПоОКАТО Тогда
			КодПоОКАТОПоМестуНахожденияОрганизации = КодПоОКАТО;
		ИначеЕсли ПостановкаНаУчетВНалоговомОргане = Перечисления.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане Тогда
			КодПоОКАТОВДругомНалоговомОргане = КодПоОКАТО;
		КонецЕсли;
		
	КонецЕсли;
		
	УстановитьВидимость();
	
КонецПроцедуры // ОсновноеСредствоПриИзменении()

// Обработчик события "НачалоВыбора" поля ввода "Код категории земель".
//
Процедура КодКатегорииЗемельНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	КодЛьготы = УправлениеВнеоборотнымиАктивами.ПолучитьФормуВыбораКодаКатегорииЗемель(Элемент.Значение).ОткрытьМодально();
	
	Если НЕ (КодЛьготы = Неопределено) Тогда
		Элемент.Значение = КодЛьготы;
	КонецЕсли;
	
КонецПроцедуры // КодКатегорииЗемельНачалоВыбора()

// Обработчик события "ПриИзменении" флага "Земельный участок в общей долевой 
// (совместной) собственности".
//
Процедура ОбщаяСобственностьПриИзменении(Элемент)
	
	Если Элемент.Значение Тогда
	
		РаботаСДиалогами.ВосстановитьЗначениеРеквизитаФормы("ДоляВПравеОбщейСобственностиЧислитель", ЭтаФорма, СтруктураСохраняемыхРеквизитов);
		РаботаСДиалогами.ВосстановитьЗначениеРеквизитаФормы("ДоляВПравеОбщейСобственностиЗнаменатель", ЭтаФорма, СтруктураСохраняемыхРеквизитов);
		
	Иначе
		
		РаботаСДиалогами.СохранитьЗначениеРеквизитаФормы("ДоляВПравеОбщейСобственностиЧислитель", ЭтаФорма, СтруктураСохраняемыхРеквизитов);
		РаботаСДиалогами.СохранитьЗначениеРеквизитаФормы("ДоляВПравеОбщейСобственностиЗнаменатель", ЭтаФорма, СтруктураСохраняемыхРеквизитов);
		
	КонецЕсли;
	
	УстановитьВидимость();
	
КонецПроцедуры // ОбщаяСобственностьПриИзменении()

// Обработчик события "ПриИзменении" флага "Земельный участок приобретен 
// на условиях осуществления жилищного строительства.
//
Процедура ЖилищноеСтроительствоПриИзменении(Элемент)
	
	Если Элемент.Значение Тогда
	
		РаботаСДиалогами.ВосстановитьЗначениеРеквизитаФормы("ДатаНачалаПроектирования", ЭтаФорма, СтруктураСохраняемыхРеквизитов);
		РаботаСДиалогами.ВосстановитьЗначениеРеквизитаФормы("ДатаРегистрацииПравНаОбъектНедвижимости", ЭтаФорма, СтруктураСохраняемыхРеквизитов);
		
	Иначе
		
		РаботаСДиалогами.СохранитьЗначениеРеквизитаФормы("ДатаНачалаПроектирования", ЭтаФорма, СтруктураСохраняемыхРеквизитов);
		РаботаСДиалогами.СохранитьЗначениеРеквизитаФормы("ДатаРегистрацииПравНаОбъектНедвижимости", ЭтаФорма, СтруктураСохраняемыхРеквизитов);
		
	КонецЕсли;
	
	УстановитьВидимость();
	
КонецПроцедуры // ЖилищноеСтроительствоПриИзменении()

// Обработчик изменения радиокнопок в группе "Постановка на учет в налоговом
// органе".
// 
Процедура ПостановкаНаУчетВНалоговомОрганеПриИзменении(Элемент)
	
	Если ПостановкаНаУчетВНалоговомОргане = Перечисления.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане Тогда
		
		РаботаСДиалогами.СохранитьЗначениеРеквизитаФормы("КодПоОКАТОПоМестуНахожденияОрганизации", ЭтаФорма, СтруктураСохраняемыхРеквизитов);
		
		РаботаСДиалогами.ВосстановитьЗначениеРеквизитаФормы("НалоговыйОрган",                   ЭтаФорма, СтруктураСохраняемыхРеквизитов);
		РаботаСДиалогами.ВосстановитьЗначениеРеквизитаФормы("КодПоОКАТОВДругомНалоговомОргане", ЭтаФорма, СтруктураСохраняемыхРеквизитов);
		
	ИначеЕсли ПостановкаНаУчетВНалоговомОргане = Перечисления.ПостановкаНаУчетВНалоговомОргане.СДругимКодомПоОКАТО Тогда
		
		РаботаСДиалогами.СохранитьЗначениеРеквизитаФормы("НалоговыйОрган",                   ЭтаФорма, СтруктураСохраняемыхРеквизитов);
		РаботаСДиалогами.СохранитьЗначениеРеквизитаФормы("КодПоОКАТОВДругомНалоговомОргане", ЭтаФорма, СтруктураСохраняемыхРеквизитов);
		
		РаботаСДиалогами.ВосстановитьЗначениеРеквизитаФормы("КодПоОКАТОПоМестуНахожденияОрганизации", ЭтаФорма, СтруктураСохраняемыхРеквизитов);
		
	Иначе
		
		РаботаСДиалогами.СохранитьЗначениеРеквизитаФормы("КодПоОКАТОПоМестуНахожденияОрганизации", ЭтаФорма, СтруктураСохраняемыхРеквизитов);
		РаботаСДиалогами.СохранитьЗначениеРеквизитаФормы("НалоговыйОрган",                         ЭтаФорма, СтруктураСохраняемыхРеквизитов);
		РаботаСДиалогами.СохранитьЗначениеРеквизитаФормы("КодПоОКАТОВДругомНалоговомОргане",       ЭтаФорма, СтруктураСохраняемыхРеквизитов);
		
	КонецЕсли;
	
	УстановитьВидимость();
	
КонецПроцедуры // ПостановкаНаУчетВНалоговомОрганеПриИзменении()

// Обработчик события "НачалоВыбора" поля ввода "Налоговый орган".
// Устанавливает отбор по организации в списке выбора налогового органа.
//
Процедура НалоговыйОрганНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Форма = Справочники.РегистрацияВИФНС.ПолучитьФормуВыбора(, Элемент);
	Форма.СправочникСписок.Отбор.Владелец.Установить(Организация);
	Форма.Открыть();
	
КонецПроцедуры // НалоговыйОрганНачалоВыбора()

// Обработчик события "НачалоВыбора" поля ввода "КБК".
//
Процедура КБКНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	КодБК = УправлениеВнеоборотнымиАктивами.ПолучитьФормуВыбораКБК(Элемент.Значение).ОткрытьМодально();
	
	Если НЕ (КодБК = Неопределено) Тогда
		Элемент.Значение = КодБК;
	КонецЕсли;
	
КонецПроцедуры // КБКНачалоВыбора()

// Обработчик события "Нажатие" ссылки "Налоговая льгота".
//
Процедура НалоговаяЛьготаНажатие(Элемент)
	
	Форма = ПолучитьФорму("ФормаНастройкиЛьготы", ЭтаФорма);
	Форма.РегистрСведенийМенеджерЗаписи = РегистрСведенийМенеджерЗаписи;
	Форма.Открыть();
	
КонецПроцедуры // НалоговаяЛьготаНажатие()

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

СтруктураСохраняемыхРеквизитов = Новый Структура;
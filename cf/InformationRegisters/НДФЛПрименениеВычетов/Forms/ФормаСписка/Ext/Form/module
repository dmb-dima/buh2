Перем мСписокГоловныхОрганизаций; // Хранит список головных организаций предприятия

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - вызывается при открытии формы
Процедура ПриОткрытии()

	// Инициализация списка головных организаций
	мСписокГоловныхОрганизаций = ПроцедурыУправленияПерсоналом.ПолучитьСписокГоловныхОрганизаций();

	// Проверка однофирменности
	РаботаСДиалогами.УстановитьОтборПоОрганизации(ЭтаФорма,, глЗначениеПеременной("ОсновнаяОрганизация"), "РегистрСведенийСписок");

КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзменениеТекущейОрганизации" Тогда
		РаботаСДиалогами.УстановитьОтборПоОрганизации(ЭтаФорма,, глЗначениеПеременной("ОсновнаяОрганизация"), "РегистрСведенийСписок", Истина);
	КонецЕсли;
	
КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Процедура - обработчик события окончания редактирования строки списка
Процедура РегистрСведенийСписокПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если ЭлементыФормы.РегистрСведенийСписок.ТекущиеДанные <> Неопределено Тогда
		Оповестить("ОбновитьФорму", Новый Структура("ИмяЭлемента","НДФЛПрименениеВычетов"), ЭлементыФормы.РегистрСведенийСписок.ТекущиеДанные.ФизЛицо);
	КонецЕсли;

КонецПроцедуры

// Процедура - обработчик события удаления строки списка
Процедура РегистрСведенийСписокПослеУдаления(Элемент)

	Если Отбор.ФизЛицо.Использование Тогда
		Оповестить("ОбновитьФорму", Новый Структура("ИмяЭлемента","НДФЛПрименениеВычетов"), Отбор.ФизЛицо.Значение);
	КонецЕсли;
	

КонецПроцедуры

// Процедура - обработчик события начала выбора организации из списка значений
Процедура РегистрСведенийСписокОрганизацияНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)

	// в качестве списка значений предложим организации, в которых работал когда-либо работник (выбор только головных организаций)

	Запрос = Новый Запрос;
    Запрос.УстановитьПараметр("ПустаяОрганизация", Справочники.Организации.ПустаяСсылка());
	
	Если (РегистрСведенийСписок.Отбор.ФизЛицо.Использование) Тогда

		// Выберем организации, в которых работал работник 
		Запрос.УстановитьПараметр("ФизЛицо", РегистрСведенийСписок.Отбор.ФизЛицо.Значение);
		

		Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |	ВЫБОР КОГДА РаботникиОрганизации.Организация.ГоловнаяОрганизация = &ПустаяОрганизация ТОГДА РаботникиОрганизации.Организация ИНАЧЕ РаботникиОрганизации.Организация.ГоловнаяОрганизация КОНЕЦ КАК Организация
		               |ИЗ
		               |	РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
		               |
		               |ГДЕ
		               |	РаботникиОрганизации.Физлицо = &Физлицо И
		               |	(РаботникиОрганизации.ЗанимаемыхСтавок > 0)";

	Иначе

		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	Организации.Ссылка КАК Организация
		               |ИЗ
		               |	Справочник.Организации КАК Организации
		               |ГДЕ
		               |	Организации.ГоловнаяОрганизация = &ПустаяОрганизация";

	КонецЕсли; 

	Элемент.СписокВыбора.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Организация"));
	
КонецПроцедуры

Процедура РегистрСведенийСписокПриНачалеРедактирования(Элемент, НоваяСтрока)

	Если НоваяСтрока Тогда

		СтрокаТЧ = ЭлементыФормы.РегистрСведенийСписок.ТекущиеДанные;
		СтрокаТЧ.Организация = глЗначениеПеременной("ОсновнаяОрганизация");
		
	КонецЕсли;

КонецПроцедуры






////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()

	РегистрСведенийСписок.Отбор.Объект.Использование = Истина;

	ПредставлениеОбъекта = "";

	Если ТипЗнч(РегистрСведенийСписок.Отбор.Объект.Значение) = Тип("СписокЗначений") Тогда

		Если РегистрСведенийСписок.Отбор.Объект.ВидСравнения = ВидСравнения.ВСписке ИЛИ РегистрСведенийСписок.Отбор.Объект.ВидСравнения = ВидСравнения.ВСпискеПоИерархии Тогда
			ПредставлениеОбъекта = "в списке ";
		ИначеЕсли РегистрСведенийСписок.Отбор.Объект.ВидСравнения = ВидСравнения.НеВСписке ИЛИ РегистрСведенийСписок.Отбор.Объект.ВидСравнения = ВидСравнения.НеВСпискеПоИерархии Тогда
			ПредставлениеОбъекта = "не в списке ";
		КонецЕсли;

		ПредставлениеСписка = "";

		Для каждого ЭлементСписка Из РегистрСведенийСписок.Отбор.Объект.Значение Цикл
			
			Если Не ПустаяСтрока(ПредставлениеСписка) Тогда
				ПредставлениеСписка = ПредставлениеСписка + ", ";
			КонецЕсли;

			ПредставлениеСписка = ПредставлениеСписка + ?(НЕ ЗначениеЗаполнено(ЭлементСписка.Значение), "<...>", Строка(ЭлементСписка.Значение));

		КонецЦикла;

		ПредставлениеОбъекта = ПредставлениеОбъекта + ПредставлениеСписка;

	ИначеЕсли Справочники.ТипВсеСсылки().СодержитТип(ТипЗнч(РегистрСведенийСписок.Отбор.Объект.Значение)) Тогда

		Если НЕ ЗначениеЗаполнено(РегистрСведенийСписок.Отбор.Объект.Значение) Тогда
			ПредставлениеОбъекта = "не определен";
		Иначе

			Если РегистрСведенийСписок.Отбор.Объект.ВидСравнения = ВидСравнения.Равно Тогда
				ПредставлениеОбъекта = "";
				
				Если ТипЗнч(РегистрСведенийСписок.Отбор.Объект.Значение) = Тип("СправочникСсылка.Организации") Тогда
					ПроверитьОбъектОтбора();
				КонецЕсли;
				
			ИначеЕсли РегистрСведенийСписок.Отбор.Объект.ВидСравнения = ВидСравнения.НеРавно Тогда
				ПредставлениеОбъекта = "не равно ";
			КонецЕсли;

			ПредставлениеОбъекта = ПредставлениеОбъекта + Строка(РегистрСведенийСписок.Отбор.Объект.Значение);

		КонецЕсли;

	КонецЕсли;

	ЭтаФорма.Заголовок = "Контактная информация. Объект: " + ПредставлениеОбъекта;

КонецПроцедуры // ПриОткрытии()

// Если при открытии установлен отбор по организации, то если организация
// является физлицом и в этом случае нужно установить отбор по этому физлицу.
Процедура ПроверитьОбъектОтбора()

	Попытка
		// если форму списка открыли формы элемента справочника Организации, то возьмем данные из формы
		Если ТипЗнч(ЭтаФорма.ВладелецФормы) = Тип("Форма") Тогда
			Если ЭтаФорма.ВладелецФормы.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо Тогда
				РегистрСведенийСписок.Отбор.Объект.Значение = ЭтаФорма.ВладелецФормы.ИндивидуальныйПредприниматель;
			КонецЕсли;
			
			Возврат;
		КонецЕсли;
	Исключение
	
	КонецПопытки;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Организации.ИндивидуальныйПредприниматель
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.Ссылка = &Ссылка
	|	И Организации.ЮрФизЛицо = &ЮрФизЛицо";
	
	Запрос.УстановитьПараметр("Ссылка", РегистрСведенийСписок.Отбор.Объект.Значение);
	Запрос.УстановитьПараметр("ЮрФизЛицо", Перечисления.ЮрФизЛицо.ФизЛицо);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		РегистрСведенийСписок.Отбор.Объект.Значение = Выборка.ИндивидуальныйПредприниматель;
	КонецЕсли;

КонецПроцедуры // ПроверитьОбъектОтбора()


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ФОРМЫ

// Процедура обработчик события "ПередНачаломИзменения" списка регистра сведений
//
Процедура РегистрСведенийСписокПередНачаломИзменения(Элемент, Отказ)

	Отказ = Истина;

	МенеджерЗаписи = РегистрыСведений.КонтактнаяИнформация.СоздатьМенеджерЗаписи();

	Для каждого Измерение Из Метаданные.РегистрыСведений.КонтактнаяИнформация.Измерения Цикл
		МенеджерЗаписи[Измерение.Имя] = Элемент.ТекущиеДанные[Измерение.Имя];
	КонецЦикла;

	МенеджерЗаписи.Прочитать();

	Обработки.РедактированиеКонтактнойИнформации.Создать().РедактироватьЗапись(МенеджерЗаписи, Истина);

КонецПроцедуры // РегистрСведенийСписокПередНачаломИзменения()

// Процедура обработчик события "ПередНачаломДобавления" списка регистра сведений
//
Процедура РегистрСведенийСписокПередНачаломДобавления(Элемент, Отказ, Копирование)

	Отказ = Истина;

	МенеджерЗаписи = РегистрыСведений.КонтактнаяИнформация.СоздатьМенеджерЗаписи();

	Если Копирование Тогда

		Для каждого Измерение Из Метаданные.РегистрыСведений.КонтактнаяИнформация.Измерения Цикл
			МенеджерЗаписи[Измерение.Имя] = Элемент.ТекущиеДанные[Измерение.Имя];
		КонецЦикла;

		Для каждого Ресурс Из Метаданные.РегистрыСведений.КонтактнаяИнформация.Ресурсы Цикл
			МенеджерЗаписи[Ресурс.Имя] = Элемент.ТекущиеДанные[Ресурс.Имя];
		КонецЦикла;

		Для каждого Реквизит Из Метаданные.РегистрыСведений.КонтактнаяИнформация.Реквизиты Цикл
			МенеджерЗаписи[Ресурс.Имя] = Элемент.ТекущиеДанные[Ресурс.Имя];
		КонецЦикла;

	КонецЕсли;

	Если Отбор.Объект.Использование = Истина
	   И ТипЗнч(Отбор.Объект.Значение) <> Тип("СписокЗначений")
	   И ЗначениеЗаполнено(Отбор.Объект.Значение) Тогда
		МенеджерЗаписи.Объект = Отбор.Объект.Значение;
	КонецЕсли;

	Если Отбор.Тип.Использование = Истина
	   И ТипЗнч(Отбор.Тип.Значение) <> Тип("СписокЗначений")
	   И ЗначениеЗаполнено(Отбор.Тип.Значение) Тогда
		МенеджерЗаписи.Тип = Отбор.Тип.Значение;
	КонецЕсли;

	Если Отбор.Вид.Использование = Истина
	   И ТипЗнч(Отбор.Вид.Значение) = Тип("СправочникСсылка.ВидыКонтактнойИнформации")
	   И ЗначениеЗаполнено(Отбор.Вид.Значение) Тогда
		МенеджерЗаписи.Объект = УправлениеКонтактнойИнформацией.ПолучитьПустоеЗначениеОбъектаКонтактнойИнформации(Отбор.Вид.Значение.ВидОбъектаКонтактнойИнформации);
		МенеджерЗаписи.Тип    = Отбор.Вид.Значение.Тип;
		МенеджерЗаписи.Вид    = Отбор.Вид.Значение;
	КонецЕсли;

	Обработки.РедактированиеКонтактнойИнформации.Создать().РедактироватьЗапись(МенеджерЗаписи, Истина);

КонецПроцедуры // РегистрСведенийСписокПередНачаломДобавления()

// Процедура обработчик события "Выбор" списка регистра сведений
//
Процедура РегистрСведенийСписокВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)

	Если ЭтаФорма.РежимВыбора Тогда

		СтандартнаяОбработка = Ложь;

		ЭтаФорма.Закрыть(Элемент.ТекущиеДанные.Представление);

	КонецЕсли;

КонецПроцедуры // РегистрСведенийСписокВыбор()


////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

// Добавим колонки в список для всех измерений, ресурсов и реквизитов

Для каждого Измерение Из Метаданные.РегистрыСведений.КонтактнаяИнформация.Измерения Цикл
	РегистрСведенийСписок.Колонки.Добавить(Измерение.Имя);
КонецЦикла;

Для каждого Ресурс Из Метаданные.РегистрыСведений.КонтактнаяИнформация.Ресурсы Цикл
	РегистрСведенийСписок.Колонки.Добавить(Ресурс.Имя);
КонецЦикла;

Для каждого Реквизит Из Метаданные.РегистрыСведений.КонтактнаяИнформация.Реквизиты Цикл
	РегистрСведенийСписок.Колонки.Добавить(Реквизит.Имя);
КонецЦикла;

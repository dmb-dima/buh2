////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

// Хранит сохраняемые в течение сеанса работы с формой реквизиты формы.
Перем СтруктураСохраняемыхРеквизитов;

// Хранит текстовое представление единицы измерения налоговой ставки.
Перем ЕдиницаИзмеренияНалоговойСтавки;

// Хранит таблицу соответствия кодов видов транспортных средств и единиц измерения.
Перем КодыВидовТС;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ УПРАВЛЕНИЯ ВНЕШНИМ ВИДОМ ФОРМЫ

// Управление видимостью и доступностью элементов формы.
//
Процедура УстановитьВидимость()
	
	ПостановкаНаУчетВДругомНалоговомОргане = (ПостановкаНаУчетВНалоговомОргане = Перечисления.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане);
	
	ЭлементыФормы.НалоговыйОрган.Доступность               = ПостановкаНаУчетВДругомНалоговомОргане;
	ЭлементыФормы.НалоговыйОрган.АвтоОтметкаНезаполненного = ПостановкаНаУчетВДругомНалоговомОргане;
	ЭлементыФормы.НалоговыйОрган.ОтметкаНезаполненного     = ПостановкаНаУчетВДругомНалоговомОргане И НалоговыйОрган.Пустая();
	
	ЭлементыФормы.КодПоОКАТО.Доступность               = ПостановкаНаУчетВДругомНалоговомОргане;
	ЭлементыФормы.КодПоОКАТО.АвтоОтметкаНезаполненного = ПостановкаНаУчетВДругомНалоговомОргане;
	ЭлементыФормы.КодПоОКАТО.ОтметкаНезаполненного     = ПостановкаНаУчетВДругомНалоговомОргане И ПустаяСтрока(КодПоОКАТО);
	
	Если ПустаяСтрока(КодВидаТранспортногоСредства) Тогда
		ЭлементыФормы.НаименованиеВидаТС.Заголовок = "";
	Иначе
		СтрокаКодов = КодыВидовТС.Найти(КодВидаТранспортногоСредства, "Код");
		ЭлементыФормы.НаименованиеВидаТС.Заголовок = ?(СтрокаКодов = Неопределено, "", СтрокаКодов.Наименование);
	КонецЕсли;
	
	Если ПустаяСтрока(ЕдиницаИзмеренияНалоговойБазы) Тогда
		ЭлементыФормы.НадписьНалоговаяБаза.Заголовок = "Налоговая база:";
	ИначеЕсли ЕдиницаИзмеренияНалоговойБазы = "251" Тогда
		ЭлементыФормы.НадписьНалоговаяБаза.Заголовок = "Мощность двигателя:";
	ИначеЕсли ЕдиницаИзмеренияНалоговойБазы = "999" Тогда
		ЭлементыФормы.НадписьНалоговаяБаза.Заголовок = "Сила тяги:";
	ИначеЕсли ЕдиницаИзмеренияНалоговойБазы = "181" Тогда
		ЭлементыФормы.НадписьНалоговаяБаза.Заголовок = "Валовая вместимость:";
	ИначеЕсли ЕдиницаИзмеренияНалоговойБазы = "796" Тогда
		ЭлементыФормы.НадписьНалоговаяБаза.Заголовок = "Налоговая база:";
	Иначе
		ЭлементыФормы.НадписьНалоговаяБаза.Заголовок = "Налоговая база:";
	КонецЕсли;		
	
	ЭлементыФормы.НалоговаяЛьгота.Заголовок = УправлениеВнеоборотнымиАктивами.ПредставлениеНалоговойЛьготыПоТранспортномуНалогу(РегистрСведенийМенеджерЗаписи);
	
	ЭлементыФормы.НадписьЕдиницаИзмеренияНалоговойСтавки.Заголовок = ЕдиницаИзмеренияНалоговойСтавки
	                                                               + ?(ПустаяСтрока(ЕдиницаИзмеренияНалоговойБазы),
	                                                                   "",
	                                                                   " за 1 " + ЭлементыФормы.ЕдиницаИзмеренияНалоговойБазы.СписокВыбора.НайтиПоЗначению(ЕдиницаИзмеренияНалоговойБазы).Представление);
																	   
КонецПроцедуры // УстановитьВидимость()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием()
	
	ОрганизацияПоУмолчанию = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");	
	
	Если НЕ Выбран() Тогда
		
		Период = Дата(1,1,1);
		
		Если ПараметрОбъектКопирования = Неопределено Тогда 
	
			Если Организация.Пустая() Тогда
				Организация = ОрганизацияПоУмолчанию;
			КонецЕсли;
			
			ПостановкаНаУчетВНалоговомОргане = Перечисления.ПостановкаНаУчетВНалоговомОргане.ПоМестуНахожденияОрганизации;
			НалоговаяЛьгота                  = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.НеПрименяется;
			
		КонецЕсли;
		
	КонецЕсли;
	
	// Построение списка единиц измерения.
	СписокКодовЕдиницИзмеренияТС = УправлениеВнеоборотнымиАктивами.ПолучитьСписокКодовЕдиницИзмеренияТС();
	Для Каждого ЕдиницаИзмеренияТС Из СписокКодовЕдиницИзмеренияТС Цикл
		ЭлементыФормы.ЕдиницаИзмеренияНалоговойБазы.СписокВыбора.Добавить(ЕдиницаИзмеренияТС.Значение, ЕдиницаИзмеренияТС.Представление);
	КонецЦикла;
		
	УстановитьВидимость();
		
КонецПроцедуры // ПередОткрытием()

// Обработчик события "ПередЗаписью" формы.
//
Процедура ПередЗаписью(Отказ)
	
	Если Период = Дата(1,1,1) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указана дата регистрации!", Отказ);
	КонецЕсли;
	
	Если Организация.Пустая() Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указана организация!", Отказ);
	КонецЕсли;
	
	Если ОсновноеСредство.Пустая() Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указано основное средство!", Отказ);
	КонецЕсли;
	
	Если ПустаяСтрока(РегистрационныйЗнак) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указан регистрационный знак!", Отказ);
	КонецЕсли;
	
	Если ПустаяСтрока(ИдентификационныйНомер) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не идентификационный номер!", Отказ);
	КонецЕсли;
	
	Если ПустаяСтрока(Марка) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указана марка!", Отказ);
	КонецЕсли;
	
	Если ПостановкаНаУчетВНалоговомОргане = Перечисления.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане Тогда
		
		Если НалоговыйОрган.Пустая() Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Не указан налоговый орган!", Отказ);
		КонецЕсли;
		
		Если ПустаяСтрока(КодПоОКАТО) Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Не указан код по ОКАТО!", Отказ);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПустаяСтрока(КодВидаТранспортногоСредства) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указан код вида ТС!", Отказ);
	КонецЕсли;
	
	Если НалоговаяБаза = 0 Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указана " + Лев(Нрег(ЭлементыФормы.НадписьНалоговаяБаза.Заголовок), СтрДлина(ЭлементыФормы.НадписьНалоговаяБаза.Заголовок) - 1)+ "!", Отказ);
	КонецЕсли;
	
	Если ПустаяСтрока(ЕдиницаИзмеренияНалоговойБазы) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указана единица измерения налоговой базы!", Отказ);
	КонецЕсли;
	
	Если НалоговаяСтавка = 0 Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указана налоговая ставка!", Отказ);
	КонецЕсли;
	
	Если НЕ Отказ И НЕ Выбран() Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Период",           Период);
		Запрос.УстановитьПараметр("Организация",      Организация);
		Запрос.УстановитьПараметр("ОсновноеСредство", ОсновноеСредство);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПРЕДСТАВЛЕНИЕ(РегистрацияТранспортныхСредств.ВидЗаписи) КАК ВидЗаписи
		|ИЗ
		|	РегистрСведений.РегистрацияТранспортныхСредств КАК РегистрацияТранспортныхСредств
		|ГДЕ
		|	РегистрацияТранспортныхСредств.Период = &Период
		|	И РегистрацияТранспортныхСредств.Организация = &Организация
		|	И РегистрацияТранспортныхСредств.ОсновноеСредство = &ОсновноеСредство";
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Количество() > 0 Тогда
			
			Выборка.Следующий();
			
			ОбщегоНазначения.СообщитьОбОшибке(Формат(Период, "ДФ=dd.MM.yyyy") + " по основному средству <" + СокрЛП(ОсновноеСредство) + "> 
			                                         |уже есть запись <" + Выборка.ВидЗаписи + "> в организации <" + СокрЛП(Организация) + ">!", Отказ);
			
		КонецЕсли;
		
		      		
	КонецЕсли;
	
 	Если Отказ Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Информация не записана.",,, СтатусСообщения.Обычное);
	КонецЕсли;
	
КонецПроцедуры // ПередЗаписью()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Обработчик события "ПриИзменении" поля ввода "Основное средство".
//
Процедура ОсновноеСредствоПриИзменении(Элемент)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ОсновноеСредство", ОсновноеСредство);
	Запрос.УстановитьПараметр("Организация",      Организация);
	Запрос.УстановитьПараметр("Период",           Период);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РегистрацияТранспортныхСредств.РегистрационныйЗнак,
	|	РегистрацияТранспортныхСредств.Марка,
	|	РегистрацияТранспортныхСредств.ИдентификационныйНомер,
	|	РегистрацияТранспортныхСредств.ПостановкаНаУчетВНалоговомОргане,
	|	РегистрацияТранспортныхСредств.НалоговыйОрган,
	|	РегистрацияТранспортныхСредств.КодПоОКАТО,
	|	РегистрацияТранспортныхСредств.КодВидаТранспортногоСредства,
	|	РегистрацияТранспортныхСредств.НалоговаяБаза,
	|	РегистрацияТранспортныхСредств.ЕдиницаИзмеренияНалоговойБазы,
	|	РегистрацияТранспортныхСредств.НалоговаяСтавка,
	|	РегистрацияТранспортныхСредств.НалоговаяЛьгота,
	|	РегистрацияТранспортныхСредств.КодНалоговойЛьготы,
	|	РегистрацияТранспортныхСредств.ЛьготнаяСтавка,
	|	РегистрацияТранспортныхСредств.ПроцентУменьшения,
	|	РегистрацияТранспортныхСредств.СуммаУменьшения
	|ИЗ
	|	РегистрСведений.РегистрацияТранспортныхСредств.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И ОсновноеСредство = &ОсновноеСредство) КАК РегистрацияТранспортныхСредств";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Количество() > 0 Тогда
		
		Выборка.Следующий();
		
		ЗаполнитьЗначенияСвойств(РегистрСведенийМенеджерЗаписи, Выборка);
		
	КонецЕсли;
		
	УстановитьВидимость();
	
КонецПроцедуры // ОсновноеСредствоПриИзменении()

// Обработчик изменения радиокнопок в группе "Постановка на учет в налоговом
// органе".
// 
Процедура ПостановкаНаУчетВНалоговомОрганеПриИзменении(Элемент)
	
	Если ПостановкаНаУчетВНалоговомОргане = Перечисления.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане Тогда
		
		РаботаСДиалогами.ВосстановитьЗначениеРеквизитаФормы("НалоговыйОрган", ЭтаФорма, СтруктураСохраняемыхРеквизитов);
		РаботаСДиалогами.ВосстановитьЗначениеРеквизитаФормы("КодПоОКАТО",     ЭтаФорма, СтруктураСохраняемыхРеквизитов);
		
		Если НалоговыйОрган.Пустая() Тогда
			НалоговыйОрган = УправлениеВнеоборотнымиАктивами.ПолучитьРегистрациюВИФНСПоОрганизации(Организация);
		КонецЕсли;
		
		Если ПустаяСтрока(КодПоОКАТО)
		   И НЕ Организация.Пустая() Тогда
			КодПоОКАТО = Организация.КодПоОКАТО;
		КонецЕсли;
		
	Иначе
		
		РаботаСДиалогами.СохранитьЗначениеРеквизитаФормы("НалоговыйОрган", ЭтаФорма, СтруктураСохраняемыхРеквизитов);
		РаботаСДиалогами.СохранитьЗначениеРеквизитаФормы("КодПоОКАТО",     ЭтаФорма, СтруктураСохраняемыхРеквизитов);
		
	КонецЕсли;
	
	УстановитьВидимость();
	
КонецПроцедуры // ПостановкаНаУчетВНалоговомОрганеПриИзменении()

// Обработчик события "НачалоВыбора" поля ввода "Налоговый орган".
// Устанавливает отбор по организации в списке выбора налогового органа.
//
Процедура НалоговыйОрганНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Форма = Справочники.РегистрацияВИФНС.ПолучитьФормуВыбора(, Элемент);
	Форма.СправочникСписок.Отбор.Владелец.Установить(Организация);
	Форма.Открыть();
	
КонецПроцедуры // НалоговыйОрганНачалоВыбора()

// Обработчик события "НачалоВыбора" поля ввода "Код вида ТС".
//
Процедура КодВидаТранспортногоСредстваТранспортныйНалогНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СписокВыбора = ВосстановитьЗначение("СписокВыбора_РегистрацияТранспортныСредств_КодВидаТС");
	
	Если СписокВыбора = Неопределено
	 ИЛИ (ТипЗнч(СписокВыбора) <> Тип("СписокЗначений"))
	 ИЛИ (ТипЗнч(СписокВыбора) = Тип("СписокЗначений") И СписокВыбора.Количество() = 0) Тогда
	
		СписокВыбора = Новый СписокЗначений;
		СписокВыбора.Добавить("51000","51000 Автомобили легковые");
		СписокВыбора.Добавить("51004","51004 - прочие автомобили легковые (кроме включенных по кодам 56600, 56700)");
		СписокВыбора.Добавить("52000","52000 Автомобили грузовые");
		СписокВыбора.Добавить("52001","52001 - автомобили грузовые (кроме включенных по коду 57000)");
		
	КонецЕсли;
	
	СписокВыбора.Добавить("ФормаВыбораКодаТС", "Другие коды видов ТС...");
	
	РезультатВыбора = ВыбратьИзСписка(СписокВыбора, Элемент);
	
	Если НЕ РезультатВыбора = Неопределено Тогда
		
		Если НЕ РезультатВыбора.Значение = "ФормаВыбораКодаТС" Тогда
			
			Элемент.Значение = РезультатВыбора.Значение;
			
			СтрокаКодов = КодыВидовТС.Найти(КодВидаТранспортногоСредства, "Код");
			
			Если НЕ СтрокаКодов = Неопределено Тогда
				ЕдиницаИзмеренияНалоговойБазы = ЭлементыФормы.ЕдиницаИзмеренияНалоговойБазы.СписокВыбора.НайтиПоЗначению(СтрокаКодов.КодЕдиницыИзмерения).Значение;
			КонецЕсли;
			
		Иначе
			
			ВыбранноеЗначение = УправлениеВнеоборотнымиАктивами.ПолучитьФормуВыбораКодаТранспортногоСредства(Элемент.Значение).ОткрытьМодально();
			
			Если НЕ (ВыбранноеЗначение = Неопределено) Тогда
				
				Элемент.Значение = ВыбранноеЗначение.КодВидаТС;
				
				Если СписокВыбора.НайтиПоЗначению(ВыбранноеЗначение.КодВидаТС) = Неопределено Тогда
					
					СписокВыбора.Вставить(0, ВыбранноеЗначение.КодВидаТС, ВыбранноеЗначение.КодВидаТС + " " + ВыбранноеЗначение.Наименование); 
					
					ЗначениеДляОткрытияФормыВыбора = СписокВыбора.НайтиПоЗначению("ФормаВыбораКодаТС");
					Если НЕ ЗначениеДляОткрытияФормыВыбора = Неопределено Тогда
						СписокВыбора.Удалить(ЗначениеДляОткрытияФормыВыбора);
					КонецЕсли;
					
					МаксимальноеКоличество = 6;
					КоличествоЗначений     = СписокВыбора.Количество();
					
					Если КоличествоЗначений > МаксимальноеКоличество Тогда
						Для ОбратныйИндекс = 1 По КоличествоЗначений Цикл
						     ЗначениеСписка = СписокВыбора[КоличествоЗначений - ОбратныйИндекс];
						     Если СписокВыбора.Индекс(ЗначениеСписка) > (МаксимальноеКоличество - 1) Тогда
						          СписокВыбора.Удалить(ЗначениеСписка);
						     КонецЕсли;
						 КонецЦикла;				
					КонецЕсли;
					
					СохранитьЗначение("СписокВыбора_РегистрацияТранспортныСредств_КодВидаТС", СписокВыбора);
					
				КонецЕсли;
				
				ЕдиницаИзмеренияНалоговойБазы = ЭлементыФормы.ЕдиницаИзмеренияНалоговойБазы.СписокВыбора.НайтиПоЗначению(ВыбранноеЗначение.КодЕдиницыИзмерения).Значение;
				
			КонецЕсли;
			
		КонецЕсли;
	
		УстановитьВидимость();
		
	КонецЕсли;
	
КонецПроцедуры // КодВидаТранспортногоСредстваТранспортныйНалогНачалоВыбора()

// Обработчик события "ПриИзменении" поля ввода "Код вида ТС".
//
Процедура КодВидаТранспортногоСредстваПриИзменении(Элемент)
	
	СтрокаКодов = КодыВидовТС.Найти(КодВидаТранспортногоСредства, "Код");
			
	Если НЕ СтрокаКодов = Неопределено Тогда
		ЕдиницаИзмеренияНалоговойБазы = ЭлементыФормы.ЕдиницаИзмеренияНалоговойБазы.СписокВыбора.НайтиПоЗначению(СтрокаКодов.КодЕдиницыИзмерения).Значение;
	КонецЕсли;
	
	УстановитьВидимость();
	
КонецПроцедуры // КодВидаТранспортногоСредстваПриИзменении()

// Обработчик события "ПриИзменении" поля ввода "Единица измерения налоговой
// базы".
//
Процедура ЕдиницаИзмеренияНалоговойБазыТранспортныйНалогПриИзменении(Элемент)
	
	УстановитьВидимость();
	
КонецПроцедуры // ЕдиницаИзмеренияНалоговойБазыТранспортныйНалогПриИзменении()

// Обработчик события "Нажатие" ссылки "Налоговая льгота".
//
Процедура НалоговаяЛьготаНажатие(Элемент)
	
	Форма = ПолучитьФорму("ФормаНастройкиЛьготы", ЭтаФорма);
	Форма.РегистрСведенийМенеджерЗаписи = РегистрСведенийМенеджерЗаписи;
	Форма.Открыть();
	
КонецПроцедуры // НалоговаяЛьготаНажатие()


////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

ЕдиницаИзмеренияНалоговойСтавки = ЭлементыФормы.НадписьЕдиницаИзмеренияНалоговойСтавки.Заголовок;

СтруктураСохраняемыхРеквизитов = Новый Структура;

КодыВидовТС = УправлениеВнеоборотнымиАктивами.ПолучитьКодыВидовТС();

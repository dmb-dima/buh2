
// Процедура добавляет запись в регистр по переданным значениям структуры
Процедура ДобавитьЗапись(СтруктураЗаписи) Экспорт
	
	ОбменДаннымиСервер.ДобавитьЗаписьВРегистрСведений(СтруктураЗаписи, "НастройкиТранспортаОбмена");
	
КонецПроцедуры

// Процедура обновляет запись в регистре по переданным значениям структуры
Процедура ОбновитьЗапись(СтруктураЗаписи) Экспорт
	
	ОбменДаннымиСервер.ОбновитьЗаписьВРегистрСведений(СтруктураЗаписи, "НастройкиТранспортаОбмена");
	
КонецПроцедуры

//////////////////////////////////////////////////////////////
// Функции получения значений настроек для узла плана обмена

// Получает значения настроек транспорта определенного вида.
// Если вид транспорта не указан (ВидТранспортаОбмена = Неопределено),
// то получает настройки всех видов транспорта, заведенных в системе
//
// Параметры:
//  Нет.
// 
// Возвращаемое значение:
//  
//
Функция ПолучитьНастройкиТранспортаДляУзла(Узел, ВидТранспортаОбмена = Неопределено) Экспорт
	
	СтруктураНастроек = Новый Структура;
	
	// общие настройки для всех видов транспорта
	СтруктураНастроек.Вставить("ВидТранспортаСообщенийОбменаПоУмолчанию");
	СтруктураНастроек.Вставить("ПарольАрхиваСообщенияОбмена");
	СтруктураНастроек.Вставить("ИмяФайлаПротоколаОбмена");
	СтруктураНастроек.Вставить("ВыполнятьОбменВРежимеОтладки");
	
	Если ВидТранспортаОбмена = Неопределено Тогда
		
		Для Каждого ВидТранспорта ИЗ Перечисления.ВидыТранспортаСообщенийОбмена Цикл
			
			СтруктураНастроекТранспорта = ПолучитьСтруктуруНастроек(ОбщегоНазначения.ИмяЗначенияПеречисления(ВидТранспорта));
			
			СтруктураНастроек = ОбъединитьКоллекции(СтруктураНастроек, СтруктураНастроекТранспорта);
			
		КонецЦикла;
		
	Иначе
		
		СтруктураНастроекТранспорта = ПолучитьСтруктуруНастроек(ОбщегоНазначения.ИмяЗначенияПеречисления(ВидТранспортаОбмена));
		
		СтруктураНастроек = ОбъединитьКоллекции(СтруктураНастроек, СтруктураНастроекТранспорта);
		
	КонецЕсли;
	
	Возврат ПолучитьДанныеРегистраПоСтруктуре(Узел, СтруктураНастроек);
	
КонецФункции

Функция ВидТранспортаСообщенийОбменаПоУмолчанию(УзелИнформационнойБазы) Экспорт
	
	// возвращаемое значение функции
	ВидТранспортаСообщений = Неопределено;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	НастройкиТранспортаОбмена.ВидТранспортаСообщенийОбменаПоУмолчанию КАК ВидТранспортаСообщенийОбменаПоУмолчанию
	|ИЗ
	|	РегистрСведений.НастройкиТранспортаОбмена КАК НастройкиТранспортаОбмена
	|ГДЕ
	|	НастройкиТранспортаОбмена.Узел = &УзелИнформационнойБазы
	|";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("УзелИнформационнойБазы", УзелИнформационнойБазы);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		ВидТранспортаСообщений = Выборка.ВидТранспортаСообщенийОбменаПоУмолчанию;
		
	КонецЕсли;
	
	Возврат ВидТранспортаСообщений;
КонецФункции

Функция ИмяКаталогаОбменаИнформацией(ВидТранспортаСообщенийОбмена, УзелИнформационнойБазы) Экспорт
	
	// возвращаемое значение функции
	Результат = "";
	
	Если ВидТранспортаСообщенийОбмена = Перечисления.ВидыТранспортаСообщенийОбмена.FILE Тогда
		
		НастройкиТранспорта = РегистрыСведений.НастройкиТранспортаОбмена.ПолучитьНастройкиТранспортаДляУзла(УзелИнформационнойБазы);
		
		Результат = НастройкиТранспорта["FILEКаталогОбменаИнформацией"];
		
	ИначеЕсли ВидТранспортаСообщенийОбмена = Перечисления.ВидыТранспортаСообщенийОбмена.FTP Тогда
		
		НастройкиТранспорта = РегистрыСведений.НастройкиТранспортаОбмена.ПолучитьНастройкиТранспортаДляУзла(УзелИнформационнойБазы);
		
		Результат = НастройкиТранспорта["FTPСоединениеПуть"];
		
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

Функция НастройкиТранспортаДляУзлаЗаданы(Узел) Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ 1 ИЗ РегистрСведений.НастройкиТранспортаОбмена КАК НастройкиТранспортаОбмена
	|ГДЕ
	|	НастройкиТранспортаОбмена.Узел = &Узел
	|";
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Узел", Узел);
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Не Запрос.Выполнить().Пустой();
КонецФункции

//////////////////////////////////////////////////////////////
// Вспомогательные процедуры и функции

Функция ПолучитьДанныеРегистраПоСтруктуре(Узел, СтруктураНастроек)
	
	Если Не ЗначениеЗаполнено(Узел) Тогда
		Возврат СтруктураНастроек;
	КонецЕсли;
	
	Если СтруктураНастроек.Количество() = 0 Тогда
		Возврат СтруктураНастроек;
	КонецЕсли;
	
	// Формируем текст запроса только по необходимым полям -
	// параметрам для указанного вида транспорта
	ТекстЗапроса = "ВЫБРАТЬ ";
	
	Для Каждого ЭлементНастройки ИЗ СтруктураНастроек Цикл
		
		ТекстЗапроса = ТекстЗапроса + ЭлементНастройки.Ключ + ", ";
		
	КонецЦикла;
	
	// убираем последний символ ", "
	СтроковыеФункцииКлиентСервер.УдалитьПоследнийСимволВСтроке(ТекстЗапроса, 2);
	
	ТекстЗапроса = ТекстЗапроса + "
	|ИЗ
	|	РегистрСведений.НастройкиТранспортаОбмена КАК НастройкиТранспортаОбмена
	|ГДЕ
	|	НастройкиТранспортаОбмена.Узел = &Узел
	|";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Узел", Узел);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	// Если есть данные для узла, то заполняем структуру
	Если Выборка.Следующий() Тогда
		
		Для Каждого ЭлементНастройки ИЗ СтруктураНастроек Цикл
			
			СтруктураНастроек[ЭлементНастройки.Ключ] = Выборка[ЭлементНастройки.Ключ];
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат СтруктураНастроек;
	
КонецФункции

Функция ПолучитьСтруктуруНастроек(ПодстрокаПоиска)
	
	СтруктураНастроекТранспорта = Новый Структура();
	
	МетаданныеРегистра = Метаданные.РегистрыСведений.НастройкиТранспортаОбмена;
	
	Для Каждого Ресурс ИЗ МетаданныеРегистра.Ресурсы Цикл
		
		Если Найти(Ресурс.Имя, ПодстрокаПоиска) <> 0 Тогда
			
			СтруктураНастроекТранспорта.Вставить(Ресурс.Имя, Ресурс.Синоним);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СтруктураНастроекТранспорта;
КонецФункции

Функция ОбъединитьКоллекции(Структура1, Структура2)
	
	СтруктураРезультат = Новый Структура;
	
	ДополнитьКоллекцию(Структура1, СтруктураРезультат);
	ДополнитьКоллекцию(Структура2, СтруктураРезультат);
	
	Возврат СтруктураРезультат;
КонецФункции

Процедура ДополнитьКоллекцию(Источник, Приемник)
	
	Для Каждого Элемент ИЗ Источник Цикл
		
		Приемник.Вставить(Элемент.Ключ, Элемент.Значение);
		
	КонецЦикла;
	
КонецПроцедуры




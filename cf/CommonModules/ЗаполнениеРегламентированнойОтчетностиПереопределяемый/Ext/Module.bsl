
////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ


////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТИРУЕМЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Возвращает текст запроса для вычисления УСН
//
// Параметры
//  нет
//
// Возвращаемое значение:
//   строка
//
Функция ТекстЗапросаУСН() Экспорт
	
    // УчетнаяПолитикаНалоговыйУчет
	// Таблица ВТУчетнаяПолитикаНалоговыйУчет - это список периодов, когда организация переходила на УСН
	// поля:
	//		УСН, 
	//		Месяц - месяц налогового периода
	// Описание:	
	//	Выбираем Из Периоды (таблица - список периодов с начала года по текущий период)
	//	Внутреннее соединение с "псевдосрезом" последних регистра УчетнаяПолитикаНалоговыйУчет
	//	по равенству периодов
	//  условие: что организация использует УСН
	
	Возврат 
	"ВЫБРАТЬ
	|	МЕСЯЦ(Периоды.Период) КАК Месяц,
	|	ВЫБОР
	|		КОГДА УчетнаяПолитикаОрганизаций.СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.СистемыНалогообложения.Упрощенная)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УСН
	|ПОМЕСТИТЬ ВТУчетнаяПолитикаНалоговыйУчет
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период КАК Период,
	|		МАКСИМУМ(УчетнаяПолитикаОрганизаций.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВТПериоды КАК Периоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|			ПО Периоды.Период >= УчетнаяПолитикаОрганизаций.Период
	|				И (УчетнаяПолитикаОрганизаций.Организация = &парамГоловнаяОрганизация)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период) КАК Периоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|		ПО Периоды.ПериодРегистра = УчетнаяПолитикаОрганизаций.Период
	|			И (УчетнаяПолитикаОрганизаций.Организация = &парамГоловнаяОрганизация)
	|			И (УчетнаяПолитикаОрганизаций.СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.СистемыНалогообложения.Упрощенная))";	
	
КонецФункции // ТекстПоляУСН()

Функция ТекстЗапросаУСНдляРасшифровки() Экспорт
	
	Возврат 
	"ВЫБРАТЬ
	|	УчетнаяПолитикаОрганизаций.Организация
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|ГДЕ
	|	УчетнаяПолитикаОрганизаций.Организация = &Организация
	|	И (УчетнаяПолитикаОрганизаций.СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.СистемыНалогообложения.Упрощенная))
	|	И УчетнаяПолитикаОрганизаций.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	УчетнаяПолитикаОрганизацийСрезПоследних.Организация
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(&НачалоПериода, ) КАК УчетнаяПолитикаОрганизацийСрезПоследних
	|ГДЕ
	|	УчетнаяПолитикаОрганизацийСрезПоследних.Организация = &Организация
	|	И УчетнаяПолитикаОрганизацийСрезПоследних.СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.СистемыНалогообложения.Упрощенная)";
	
КонецФункции // ТекстПоляУСН()

Функция ИмяУчетнойПолитики() Экспорт

	Возврат "РегистрСведений.УчетнаяПолитикаОрганизаций"	

КонецФункции // ИмяУчетнойПолитики()

////////////////////////////////////////////////////////////////////////////////
// ФУНКЦИИ ФОРМЫ 4-ФСС

// Возвращает текст запроса расчетов с фондом
//
// Параметры
//  нет
//
// Возвращаемое значение:
//   строка
//
Функция ТекстРасчетовСФСС() Экспорт
	
	Возврат
	"ВЫБРАТЬ
	|	МЕСЯЦ(Периоды.Период) КАК Месяц,
	|	(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ФСС)
	|					ТОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Сумма
	|				ИНАЧЕ 0
	|			КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 1))) * &Делитель КАК НачисленоЗаМесяц,
	|	(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ФСС)
	|					ТОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Сумма
	|				ИНАЧЕ 0
	|			КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 1))) * &Делитель КАК РасходовЗаМесяц,
	|	(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ФСС_НСиПЗ)
	|					ТОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Сумма
	|				ИНАЧЕ 0
	|			КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 1))) * &Делитель КАК РасходовНСиПЗ_ЗаМесяц,
	|	(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ФСС_НСиПЗ)
	|					ТОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Сумма
	|				ИНАЧЕ 0
	|			КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 1))) * &Делитель КАК НачисленоНСиПЗ_ЗаМесяц
	|ПОМЕСТИТЬ ВТОтражениеЗарплатыВРеглУчетеНарастающимИтогом
	|ИЗ
	|	ВТПериоды КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтражениеЗарплатыВРеглУчете.ОтражениеВУчете КАК ОтражениеЗарплатыВРеглУчетеОтражениеВУчете
	|		ПО (ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Ссылка.ПериодРегистрации МЕЖДУ &парамНачалоГода И КОНЕЦПЕРИОДА(Периоды.Период, МЕСЯЦ))
	|ГДЕ
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Ссылка.Организация = &парамОрганизация
	|	И ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Ссылка.Проведен
	|	И (ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт В (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ФСС), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ФСС_НСиПЗ))
	|			ИЛИ ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт В (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ФСС), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ФСС_НСиПЗ)))
	|
	|СГРУППИРОВАТЬ ПО
	|	МЕСЯЦ(Периоды.Период)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Месяц";
	
КонецФункции // ТекстРасчетовСФСС()


// Возвращает текст запроса с изменением имени регистра учетной политики
//
Функция УстановитьНазваниеРегистраУчетнойПолитикиСтраховыхВзносов(ТекстЗапроса) Экспорт
	Возврат СтрЗаменить(ТекстЗапроса, "УчетнаяПолитикаНалоговыйУчет", "УчетнаяПолитикаОрганизаций");	
	
КонецФункции // УстановитьНазваниеРегистраУчетнойПолитикиСтраховыхВзносов()
////////////////////////////////////////////////////////////////////////////////
// ФУНКЦИИ ФОРМЫ 4а-ФСС

// Возвращает текст поля запроса для вычисления УСН
//
// Параметры
//  нет
//
// Возвращаемое значение:
//   строка
//
Функция ТекстПоляУСН4аФСС() Экспорт

	Возврат "ЕСТЬNULL(ВЫБОР КОГДА УчетнаяПолитикаНалоговыйУчет.СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.СистемыНалогообложения.Упрощенная) ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ, ЛОЖЬ)"	

КонецФункции // ТекстПоляУСН()

// Возвращает текст дополнительных условий для отбора проводок
//
// Параметры
//  нет
//
// Возвращаемое значение:
//   строка
//
Функция ТекстПроводок4аФСС() Экспорт

	Возврат 
	"ВЫБРАТЬ
	|	СУММА(ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Сумма) КАК П000020002003,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ МЕСЯЦ(ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Ссылка.ПериодРегистрации) В (&Месяц1, &Месяц2, &Месяц3))
	|				ТОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020002101,
	|	СУММА(ВЫБОР
	|			КОГДА МЕСЯЦ(ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Ссылка.ПериодРегистрации) = &Месяц1
	|				ТОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020002301,
	|	СУММА(ВЫБОР
	|			КОГДА МЕСЯЦ(ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Ссылка.ПериодРегистрации) = &Месяц2
	|				ТОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020002401,
	|	СУММА(ВЫБОР
	|			КОГДА МЕСЯЦ(ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Ссылка.ПериодРегистрации) = &Месяц3
	|				ТОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020002501
	|ИЗ
	|	Документ.ОтражениеЗарплатыВРеглУчете.ОтражениеВУчете КАК ОтражениеЗарплатыВРеглУчетеОтражениеВУчете
	|ГДЕ
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Ссылка.ПериодРегистрации МЕЖДУ &парамНачалоГода И &парамКонецОтчетногоПериода
	|	И ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Ссылка.Организация = &парамОрганизация
	|	И ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ФСС_ДобровольныеВзносы)
	|	И ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Ссылка.Проведен";

КонецФункции // ТекстОтбораПроводок4аФСС()



////////////////////////////////////////////////////////////////////////////////
// РАСШИФРОВКА ОТЧЕТОВ

#Если Клиент тогда
	
// Открывает отчет расшифровку для отчета "Отчет по ПФР"
// 
// Параметры
//    Форма - ссылка на форму отчета
//    Отчет - отчет объект, который расшифровывается
//
Процедура РасшифроватьОтчетПФР(Отчет, Форма, Расшифровка, СтандартнаяОбработка) Экспорт
	
	ОтчетРасшифровки = Отчеты.АнализНачисленногоЕСН.Создать();
	ОтчетРасшифровкиФорма = ОтчетРасшифровки.ПолучитьФорму("ФормаОтчета", Форма);	
	
	ОтчетРасшифровкиФорма.ЭтоОтработкаРасшифровки = истина;
	
	Поле         = "";
	ИмяЯчейки    = "";
	НомерРаздела = "";
	НомерСтроки  = "";
	НомерКолонки = "";
	Заголовок = "";
	Если Форма.ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Раздел2" Тогда
		ТекущаяОбласть = Форма.ЭлементыФормы.ПолеТабличногоДокументаРаздел2.ТекущаяОбласть;
		ИмяЯчейки	   = ТекущаяОбласть.Имя;
		НомерРаздела   = "2";
		НомерТаблицы   = Сред(ИмяЯчейки, 8, 2);
		НомерСтроки    = Сред(ИмяЯчейки, 10, 2);
		НомерКолонки   = Прав(ИмяЯчейки, 2);

		Если НомерКолонки = "03" и НомерТаблицы = "04" тогда
			Возврат;
		КонецЕсли;
		
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "Организация",    Отчет.Организация);
		
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "НеГражданин", истина,  ВидСравненияКомпоновкиДанных.НеРавно);
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ИмеетПравоНаПенсию", истина,  ВидСравненияКомпоновкиДанных.Равно);
		ГруппаИЛИ = ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
		ГруппаИЛИ.Использование = Истина;
		ГруппаИЛИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
		ТиповыеОтчеты.ДобавитьОтбор(ГруппаИЛИ, "ЕСН.НомерСтрокиСтавокФБ", 1);
		ТиповыеОтчеты.ДобавитьОтбор(ГруппаИЛИ, "ЕСН.НомерСтрокиСтавокФБ", 2);
		ТиповыеОтчеты.ДобавитьОтбор(ГруппаИЛИ, "ЕСН.НомерСтрокиСтавокФБ", 3);
	
		ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Структура.Очистить();
		ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
		
		// установим период формирования отчета
		Если НомерСтроки = "00" тогда
			ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "КонецПериода",  Отчет.мДатаКонцаПериодаОтчета);
		ИначеЕсли НомерСтроки = "10" тогда
			ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "НачалоПериода", НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "КонецПериода",  Отчет.мДатаКонцаПериодаОтчета);
		ИначеЕсли НомерСтроки = "20" тогда
			ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "НачалоПериода", НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "КонецПериода",  КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета)));
		ИначеЕсли НомерСтроки = "30" тогда
			ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "НачалоПериода", КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета))+1);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "КонецПериода",  НачалоМесяца(Отчет.мДатаКонцаПериодаОтчета)-1);
		ИначеЕсли НомерСтроки = "40" тогда
			ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "НачалоПериода", НачалоМесяца(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "КонецПериода",  Отчет.мДатаКонцаПериодаОтчета);
		КонецЕсли;
		
		Если НомерТаблицы = "01" тогда
			Поле = Поле + "ПФР.БазаПФР";
		ИначеЕсли НомерТаблицы = "02" тогда
			Поле = Поле + "ПФР.НачисленоПФР";
		ИначеЕсли НомерТаблицы = "03" тогда
			Поле = Поле + "ПФР.НачисленоПФРСтраховая";
		ИначеЕсли НомерТаблицы = "04" тогда
			Поле = Поле + "ПФР.НачисленоПФРНакопительная";
		КонецЕсли;
		
		Если НомерКолонки = "03" тогда
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ВозрастнаяГруппа", "до1967");
		ИначеЕсли НомерКолонки = "04" тогда
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ВозрастнаяГруппа", "от1967");
		ИначеЕсли НомерКолонки = "06" тогда
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "НалоговыйРежим", "ЕНВД", ВидСравненияКомпоновкиДанных.НеРавно);
		КонецЕсли;
		
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "Пояснение", "По данным в учете");
		ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "ПериодРегистрации");
		ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "Сотрудник");
		Если НомерТаблицы = "01" тогда
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "ВидРасчета");
		КонецЕсли;
		Если Поле = "" тогда
			Предупреждение("Расшифровка данного раздела не поддерживается");
			Возврат;		
		КонецЕсли;
		ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетРасшифровки.КомпоновщикНастроек, Поле);
	ИначеЕсли Форма.ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Раздел22" Тогда
		ТекущаяОбласть = Форма.ЭлементыФормы.ПолеТабличногоДокументаРаздел22.ТекущаяОбласть;
		ИмяЯчейки	   = ТекущаяОбласть.Имя;		
		НомерРаздела   = "22";
		НомерТаблицы   = Сред(ИмяЯчейки, 8, 2);
		НомерСтроки    = Сред(ИмяЯчейки, 10, 2);
		НомерКолонки   = Прав(ИмяЯчейки, 2);
		
		Если НомерТаблицы = "02" и (НомерСтроки = "10" или НомерСтроки = "11" или НомерСтроки = "12") тогда
			Возврат;
		КонецЕсли;
		
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "Организация",    Отчет.Организация);
		
		ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
		ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "КонецПериода",  Отчет.мДатаКонцаПериодаОтчета);
		
		ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Структура.Очистить();
		ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
		Если НомерКолонки = "04" или НомерКолонки = "05" тогда
			Поле = "ЕСН.ФБ.БазаСУчетомСкидкиФБ";
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "Сотрудник");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "ВидРасчета");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетРасшифровки.КомпоновщикНастроек, Поле, "База для начисления страховых взносов за  отчетный период");
			Если НомерКолонки = "05" тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "НалоговыйРежим", "ОСН");
			КонецЕсли;
			Заголовок = "База для начисления страховых взносов за  отчетный период.";
		ИначеЕсли НомерКолонки = "07" или НомерКолонки = "06"  тогда
			Группировка                 = ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "Сотрудник.ФизЛицо");
			ВыбранноеПоле               = Группировка.Выбор.Элементы.Вставить(0, Тип("ВыбранноеПолеКомпоновкиДанных"));
			ВыбранноеПоле.Поле          = Новый ПолеКомпоновкиДанных("SystemFields.GroupSerialNumber");
			ВыбранноеПоле.Использование = истина;
			Если НомерКолонки = "07" тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "НалоговыйРежим", "ОСН");
			КонецЕсли;
			Поле = "ЕСН.ФБ.БазаСУчетомСкидкиФБ";
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетРасшифровки.КомпоновщикНастроек, Поле, "База для начисления страховых взносов за  отчетный период");
		КонецЕсли;
		
		Если НомерТаблицы = "01" тогда
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ЕСН.НомерСтрокиСтавокФБ", 1);
			Если НомерКолонки = "04" или НомерКолонки = "05" тогда
				Заголовок =  Заголовок + " До 280 000 руб.";
			КонецЕсли;
		ИначеЕсли НомерТаблицы = "02" тогда
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ЕСН.НомерСтрокиСтавокФБ", 2);
			Если НомерКолонки = "04" или НомерКолонки = "05" тогда
				Заголовок =  Заголовок + " Свыше 280 000 до 600 000 руб.";
			КонецЕсли;
		ИначеЕсли НомерТаблицы = "03" тогда
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ЕСН.НомерСтрокиСтавокФБ", 3);
			Если НомерКолонки = "04" или НомерКолонки = "05" тогда
				Заголовок =  Заголовок + " свыше 600 000 руб.";
			КонецЕсли;
		ИначеЕсли НомерТаблицы = "04" тогда
			ГруппаИЛИ = ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
			ГруппаИЛИ.Использование = Истина;
			ГруппаИЛИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
			ТиповыеОтчеты.ДобавитьОтбор(ГруппаИЛИ, "ЕСН.НомерСтрокиСтавокФБ", 1);
			ТиповыеОтчеты.ДобавитьОтбор(ГруппаИЛИ, "ЕСН.НомерСтрокиСтавокФБ", 2);
			ТиповыеОтчеты.ДобавитьОтбор(ГруппаИЛИ, "ЕСН.НомерСтрокиСтавокФБ", 3);
	    КонецЕсли;
	
		Если НомерСтроки = "00" тогда
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ВозрастнаяГруппа", "до1967");
			Если НомерКолонки = "04" или НомерКолонки = "05" тогда
				Заголовок =  Заголовок + " Для лиц 1966 года  рождения и старше."
			КонецЕсли;
		ИначеЕсли НомерСтроки = "01" тогда
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ВозрастнаяГруппа", "от1967");
			Если НомерКолонки = "04" или НомерКолонки = "05" тогда
				Заголовок =  Заголовок + " для лиц 1967 года  рождения и младше."
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли Форма.ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Раздел23" Тогда
		ТекущаяОбласть = Форма.ЭлементыФормы.ПолеТабличногоДокументаРаздел23.ТекущаяОбласть;
		ИмяЯчейки	   = ТекущаяОбласть.Имя;		
		НомерРаздела   = "23";
		НомерТаблицы   = Сред(ИмяЯчейки, 8, 2);
		НомерСтроки    = Сред(ИмяЯчейки, 10, 2);
		НомерКолонки   = Прав(ИмяЯчейки, 2);
		
		Если НомерСтроки = "10" или НомерСтроки = "20" или НомерСтроки = "30" или НомерСтроки = "40" тогда
			ГоловнаяОрганизация = ОбщегоНазначения.ГоловнаяОрганизация(Отчет.Организация);
			СписокОбособленныхПодразделенийОрганизации = ОбщегоНазначения.ПолучитьСписокОбособленныхПодразделенийОрганизации(ГоловнаяОрганизация);
			СписокОбособленныхПодразделенийОрганизации.Добавить(ГоловнаяОрганизация);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "Организация", СписокОбособленныхПодразделенийОрганизации, ВидСравненияКомпоновкиДанных.ВСписке);
		Иначе
			ГоловнаяОрганизация = ОбщегоНазначения.ГоловнаяОрганизация(Отчет.Организация);
			СписокОбособленныхПодразделенийОрганизации = ОбщегоНазначения.ПолучитьСписокОбособленныхПодразделенийОрганизации(ГоловнаяОрганизация);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "Организация", СписокОбособленныхПодразделенийОрганизации, ВидСравненияКомпоновкиДанных.ВСписке);
		КонецЕсли;
		           
		ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
		ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "КонецПериода",  Отчет.мДатаКонцаПериодаОтчета);
		
		ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Структура.Очистить();
		ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
		
		Поле = "";
		Если НомерСтроки = "11" или НомерСтроки = "10" тогда
			Поле = "ЕСН.ФБ.БазаФБ";
			//ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "НеГражданин", истина, ВидСравненияКомпоновкиДанных.НеРавно);
		ИначеЕсли НомерСтроки = "21" или НомерСтроки = "20" тогда
			Поле = "ПФР.НачисленоПФР";
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "НалоговыйРежим", "ЕНВД");
		ИначеЕсли НомерСтроки = "31" или НомерСтроки = "30" тогда
			Поле = "ПФР.НачисленоПФРСтраховая";
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "НалоговыйРежим", "ЕНВД");
		ИначеЕсли НомерСтроки = "41" или НомерСтроки = "40" тогда
			Поле = "ПФР.НачисленоПФРНакопительная";
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "НалоговыйРежим", "ЕНВД");
		КонецЕсли;
		ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетРасшифровки.КомпоновщикНастроек, Поле);
		
		Если НомерСтроки = "11" или НомерСтроки = "10" тогда
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "Пояснение");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "Организация");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "Сотрудник");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "ВидРасчета");
		Иначе
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "Пояснение", "По данным в учете");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "Сотрудник");
		КОнецЕсли;
	
		Если НомерКолонки = "04" тогда
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "НалоговыйРежим", "ОСН");
		КонецЕсли;
		
	Иначе
		Предупреждение("Расшифровка данного раздела не поддерживается");
		Возврат;		
	КонецЕсли;
		
	Если Найти(ИмяЯчейки,"R") > 0 Тогда
		Предупреждение("Расшифровка данной ячейки не поддерживается");
		Возврат;
	КонецЕсли;

	// установи отбор, что бы не показывались пустые строки в отчете
	МассивГруппировокОтчета = ТиповыеОтчеты.ПолучитьПоляГруппировок(ОтчетРасшифровки.КомпоновщикНастроек);
	Для каждого ПолеГруппировки из МассивГруппировокОтчета Цикл
		Группировка = ТиповыеОтчеты.ПолучитьЭлементСтруктурыПоПолюГруппировки(Новый ПолеКомпоновкиДанных(ПолеГруппировки.Значение), ОтчетРасшифровки.КомпоновщикНастроек);
		ТиповыеОтчеты.ДобавитьОтбор(Группировка.Отбор, Поле, 0, ВидСравненияКомпоновкиДанных.НеРавно);
		ПараметрВывода = Группировка.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("FilterOutput"));
		ПараметрВывода.Значение = ТипВыводаТекстаКомпоновкиДанных.НеВыводить;
		ПараметрВывода.Использование = истина;
	КонецЦикла;
	Заголовок = ?(Заголовок = "", "Расшифровка отчета ПФР , колонка: " + НомерКолонки + ", номер строки " + НомерТаблицы + НомерСтроки, Заголовок);

	ТиповыеОтчеты.ОткрытьФормуРасшифровки(ОтчетРасшифровки, Заголовок);
КонецПроцедуры

// Открывает отчет расшифровку для отчета "Сводная карточка по ОПС"
// 
// Параметры
//    Форма - ссылка на форму отчета
//    Отчет - отчет объект, который расшифровывается
//
Процедура РасшифроватьАвансыПФР(Отчет, Форма, Расшифровка, СтандартнаяОбработка) Экспорт
	
	ОтчетРасшифровки = Отчеты.АнализНачисленногоЕСН.Создать();
	
	Поле         = "";
	ИмяЯчейки    = "";
	НомерРаздела = "";
	НомерСтроки  = "";
	НомерКолонки = "";
	Если Форма.ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Раздел2" Тогда
		ТекущаяОбласть = Форма.ЭлементыФормы.ПолеТабличногоДокументаРаздел2.ТекущаяОбласть;
		ИмяЯчейки	   = ТекущаяОбласть.Имя;
		НомерРаздела   = "2";
		НомерТаблицы   = Сред(ИмяЯчейки, 8, 2);
		НомерСтроки    = Сред(ИмяЯчейки, 10, 2);
		НомерКолонки   = Прав(ИмяЯчейки, 2);

		Если НомерКолонки = "03" и НомерТаблицы = "04" тогда
			Возврат;
		КонецЕсли;
		
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "Организация",    Отчет.Организация);
		
		//ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "НеГражданин", истина,  ВидСравненияКомпоновкиДанных.НеРавно);
		//ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ИмеетПравоНаПенсию", истина,  ВидСравненияКомпоновкиДанных.Равно);
		ГруппаИЛИ = ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
		ГруппаИЛИ.Использование = Истина;
		ГруппаИЛИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
		ТиповыеОтчеты.ДобавитьОтбор(ГруппаИЛИ, "ЕСН.НомерСтрокиСтавокФБ", 1);
		ТиповыеОтчеты.ДобавитьОтбор(ГруппаИЛИ, "ЕСН.НомерСтрокиСтавокФБ", 2);
		ТиповыеОтчеты.ДобавитьОтбор(ГруппаИЛИ, "ЕСН.НомерСтрокиСтавокФБ", 3);
		
		ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Структура.Очистить();
		ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
		
		// установим период формирования отчета
		Если НомерСтроки = "00" тогда
			ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "КонецПериода",  Отчет.мДатаКонцаПериодаОтчета);
		ИначеЕсли НомерСтроки = "10" тогда
			ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "НачалоПериода", НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "КонецПериода",  Отчет.мДатаКонцаПериодаОтчета);
		ИначеЕсли НомерСтроки = "20" тогда
			ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "НачалоПериода", НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "КонецПериода",  КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета)));
		ИначеЕсли НомерСтроки = "30" тогда
			ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "НачалоПериода", КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета))+1);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "КонецПериода",  НачалоМесяца(Отчет.мДатаКонцаПериодаОтчета)-1);
		ИначеЕсли НомерСтроки = "40" тогда
			ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "НачалоПериода", НачалоМесяца(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "КонецПериода",  Отчет.мДатаКонцаПериодаОтчета);
		КонецЕсли;
		
		Если НомерТаблицы = "01" тогда
			Поле = Поле + "ПФР.БазаПФР";
		ИначеЕсли НомерТаблицы = "02" тогда
			Поле = Поле + "ПФР.НачисленоПФР";
		ИначеЕсли НомерТаблицы = "03" тогда
			Поле = Поле + "ПФР.НачисленоПФРСтраховая";
		ИначеЕсли НомерТаблицы = "04" тогда
			Поле = Поле + "ПФР.НачисленоПФРНакопительная";
		КонецЕсли;
		
		Если НомерКолонки = "03" тогда
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ВозрастнаяГруппа", "до1967");
		ИначеЕсли НомерКолонки = "04" тогда
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ВозрастнаяГруппа", "от1967");
		КонецЕсли;
		
		ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "ПериодРегистрации");
		ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "Сотрудник");
		Если НомерТаблицы = "01" тогда
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "ВидРасчета");
		КонецЕсли;
		Если Поле = "" тогда
			Предупреждение("Расшифровка данного раздела не поддерживается");
			Возврат;		
		КонецЕсли;
		ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетРасшифровки.КомпоновщикНастроек, Поле);
	ИначеЕсли Форма.ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Раздел22" Тогда
		ТекущаяОбласть = Форма.ЭлементыФормы.ПолеТабличногоДокументаРаздел22.ТекущаяОбласть;
		ИмяЯчейки	   = ТекущаяОбласть.Имя;		
		НомерРаздела   = "22";
		НомерТаблицы   = Сред(ИмяЯчейки, 8, 2);
		НомерСтроки    = Сред(ИмяЯчейки, 10, 2);
		НомерКолонки   = Прав(ИмяЯчейки, 2);
		
		Если НомерТаблицы = "02" и (НомерСтроки = "10" или НомерСтроки = "11" 
			или НомерСтроки = "12" или НомерСтроки = "20"
			или НомерСтроки = "21" или НомерСтроки = "22") тогда
			Предупреждение("Расшифровка данной ячейки раздела не поддерживается");
			Возврат;
		КонецЕсли;
		
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "Организация",    Отчет.Организация);
		
		ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
		ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "КонецПериода",  Отчет.мДатаКонцаПериодаОтчета);
		
		ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Структура.Очистить();
		ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
		Если НомерКолонки = "04" или НомерКолонки = "05" тогда
			Поле = "ПФР.БазаПФР";
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "Сотрудник");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "ВидРасчета");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетРасшифровки.КомпоновщикНастроек, Поле);
			Если НомерКолонки = "05" тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "НалоговыйРежим", "ОСН");
			КонецЕсли;
		ИначеЕсли НомерКолонки = "07" или НомерКолонки = "09" тогда
			Группировка                 = ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "Сотрудник.ФизЛицо");
			ВыбранноеПоле               = Группировка.Выбор.Элементы.Вставить(0, Тип("ВыбранноеПолеКомпоновкиДанных"));
			ВыбранноеПоле.Поле          = Новый ПолеКомпоновкиДанных("SystemFields.GroupSerialNumber");
			ВыбранноеПоле.Использование = истина;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "НалоговыйРежим", "ОСН");
			Если НомерКолонки = "07" тогда
				Поле = "ПФР.НачисленоПФРСтраховая";
			Иначе
				Поле = "ПФР.НачисленоПФРНакопительная";
			КонецЕсли;
			//ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетРасшифровки.КомпоновщикНастроек, Поле, "База для начисления страховых взносов за  отчетный период");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетРасшифровки.КомпоновщикНастроек, Поле);
		ИначеЕсли НомерКолонки = "10" тогда
			Группировка                 = ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "Сотрудник.ФизЛицо");
			ВыбранноеПоле               = Группировка.Выбор.Элементы.Вставить(0, Тип("ВыбранноеПолеКомпоновкиДанных"));
			ВыбранноеПоле.Поле          = Новый ПолеКомпоновкиДанных("SystemFields.GroupSerialNumber");
			ВыбранноеПоле.Использование = истина;
		КонецЕсли;
		
		Если НомерТаблицы = "01" тогда
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ЕСН.НомерСтрокиСтавокПФР", 1);
		ИначеЕсли НомерТаблицы = "02" тогда
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ЕСН.НомерСтрокиСтавокПФР", 2);
		ИначеЕсли НомерТаблицы = "03" тогда                                    
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ЕСН.НомерСтрокиСтавокПФР", 3);
		ИначеЕсли НомерТаблицы = "04" тогда
			ГруппаИЛИ = ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
			ГруппаИЛИ.Использование = Истина;
			ГруппаИЛИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
			ТиповыеОтчеты.ДобавитьОтбор(ГруппаИЛИ, "ЕСН.НомерСтрокиСтавокПФР", 1);
			ТиповыеОтчеты.ДобавитьОтбор(ГруппаИЛИ, "ЕСН.НомерСтрокиСтавокПФР", 2);
			ТиповыеОтчеты.ДобавитьОтбор(ГруппаИЛИ, "ЕСН.НомерСтрокиСтавокПФР", 3);
	    КонецЕсли;
	
		Если НомерСтроки = "00" тогда
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ВозрастнаяГруппа", "до1967");
		ИначеЕсли НомерСтроки = "01" тогда
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ВозрастнаяГруппа", "от1967");
		КонецЕсли;
		
	ИначеЕсли Форма.ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Раздел23" Тогда
		ТекущаяОбласть = Форма.ЭлементыФормы.ПолеТабличногоДокументаРаздел23.ТекущаяОбласть;
		ИмяЯчейки	   = ТекущаяОбласть.Имя;		
		НомерРаздела   = "23";
		НомерТаблицы   = Сред(ИмяЯчейки, 8, 2);
		НомерСтроки    = Сред(ИмяЯчейки, 10, 2);
		НомерКолонки   = Прав(ИмяЯчейки, 2);
		
		Если НомерСтроки = "10" или НомерСтроки = "20" или НомерСтроки = "30" или НомерСтроки = "40" тогда
			ГоловнаяОрганизация = ОбщегоНазначения.ГоловнаяОрганизация(Отчет.Организация);
			СписокОбособленныхПодразделенийОрганизации = ОбщегоНазначения.ПолучитьСписокОбособленныхПодразделенийОрганизации(ГоловнаяОрганизация);
			СписокОбособленныхПодразделенийОрганизации.Добавить(ГоловнаяОрганизация);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "Организация", СписокОбособленныхПодразделенийОрганизации, ВидСравненияКомпоновкиДанных.ВСписке);
		Иначе
			ГоловнаяОрганизация = ОбщегоНазначения.ГоловнаяОрганизация(Отчет.Организация);
			СписокОбособленныхПодразделенийОрганизации = ОбщегоНазначения.ПолучитьСписокОбособленныхПодразделенийОрганизации(ГоловнаяОрганизация);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "Организация", СписокОбособленныхПодразделенийОрганизации, ВидСравненияКомпоновкиДанных.ВСписке);
		КонецЕсли;
		
		           
		ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
		ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "КонецПериода",  Отчет.мДатаКонцаПериодаОтчета);
		
		ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Структура.Очистить();
		ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
		
		Поле = "";
		Если НомерСтроки = "11" или НомерСтроки = "10" тогда
			Поле = Поле + "ЕСН.ФБ.БазаФБ";
			//ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "НеГражданин", истина, ВидСравненияКомпоновкиДанных.НеРавно);
		ИначеЕсли НомерСтроки = "21" или НомерСтроки = "20" тогда
			Поле = Поле + "ПФР.НачисленоПФРСЕНВД";
		ИначеЕсли НомерСтроки = "31" или НомерСтроки = "30" тогда
			Поле = Поле + "ПФР.НачисленоПФРСтраховаяСЕНВД";
		ИначеЕсли НомерСтроки = "41" или НомерСтроки = "40" тогда
			Поле = Поле + "ПФР.НачисленоПФРНакопительнаяСЕНВД";
		КонецЕсли;
		ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетРасшифровки.КомпоновщикНастроек, Поле);
		
		Если НомерСтроки = "11" или НомерСтроки = "10" тогда
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "Пояснение");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "Организация");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "Сотрудник");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "ВидРасчета");
		Иначе
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "Пояснение", "По данным в учете");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "Сотрудник");
		КОнецЕсли;
	
		Если НомерКолонки = "04" тогда
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "НалоговыйРежим", "ОСН");
		КонецЕсли;
		
	Иначе
		Предупреждение("Расшифровка данного раздела не поддерживается");
		Возврат;		
	КонецЕсли;
		
	Если Найти(ИмяЯчейки,"R") > 0 Тогда
		Предупреждение("Расшифровка данной ячейки не поддерживается");
		Возврат;
	КонецЕсли;

	ТиповыеОтчеты.ОткрытьФормуРасшифровки(ОтчетРасшифровки, "Расшифровка отчета Авансы ПФР , колонка: " + НомерКолонки + ", номер строки " + НомерТаблицы + НомерСтроки);
КонецПроцедуры

// Открывает отчет расшифровку для отчета "Сводная карточка по ОПС"
// 
// Параметры
//    Форма - ссылка на форму отчета
//    Отчет - отчет объект, который расшифровывается
//
Процедура РасшифроватьАвансыЕСН(Отчет, Форма, Расшифровка, СтандартнаяОбработка) Экспорт
	
	ОтчетРасшифровки = Отчеты.АнализНачисленногоЕСН.Создать();
	
	ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "Организация", Отчет.Организация);
	
	Поле         = "";
	ИмяЯчейки    = "";
	НомерРаздела = "";
	НомерСтроки  = "";
	НомерКолонки = "";
	Если Форма.ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Раздел2" Тогда
		ТекущаяОбласть = Форма.ЭлементыФормы.ПолеТабличногоДокументаРаздел2.ТекущаяОбласть;
		ИмяЯчейки	   = ТекущаяОбласть.Имя;
		НомерРаздела   = "2";
		НомерТаблицы   = Сред(ИмяЯчейки, 8, 2);
		НомерСтроки    = Сред(ИмяЯчейки, 10, 2);
		НомерКолонки   = Прав(ИмяЯчейки, 2);
		
		ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Структура.Очистить();
		ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
		
		// установим период формирования отчета
		Если НомерСтроки = "00" тогда
			ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "КонецПериода",  Отчет.мДатаКонцаПериодаОтчета);
		ИначеЕсли НомерСтроки = "10" тогда
			ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "НачалоПериода", НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "КонецПериода",  Отчет.мДатаКонцаПериодаОтчета);
		ИначеЕсли НомерСтроки = "20" тогда
			ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "НачалоПериода", НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "КонецПериода",  КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета)));
		ИначеЕсли НомерСтроки = "30" тогда
			ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "НачалоПериода", КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета))+1);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "КонецПериода",  НачалоМесяца(Отчет.мДатаКонцаПериодаОтчета)-1);
		ИначеЕсли НомерСтроки = "40" тогда
			ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "НачалоПериода", НачалоМесяца(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "КонецПериода",  Отчет.мДатаКонцаПериодаОтчета);
		КонецЕсли;
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "НалоговыйРежим", "ОСН");
		
		Если НомерТаблицы = "01" тогда
			Поле = "База";
			Если НомерКолонки = "03" тогда
				Поле = "ЕСН.ФБ." + Поле + "ФБ";
			ИначеЕсли НомерКолонки = "04" тогда
				Поле = "ЕСН.ФСС." + Поле + "ФСС";
			ИначеЕсли НомерКолонки = "05" тогда
				Поле = "ЕСН.ФОМС." + Поле + "ФОМС";
			КонецЕсли;
		ИначеЕсли НомерТаблицы = "02" тогда
			Поле = Поле + "Исчислено";			
			Если НомерКолонки = "03" тогда
				Поле = "ЕСН.ФБ." + Поле + "ФБ";
			ИначеЕсли НомерКолонки = "04" тогда
				Поле = "ЕСН.ФСС." + Поле + "ФСС";
			ИначеЕсли НомерКолонки = "05" тогда
				Поле = "ЕСН.ФОМС." + Поле + "ФФОМС";
			ИначеЕсли НомерКолонки = "06" тогда
				Поле = "ЕСН.ФОМС." + Поле + "ТФОМС";
			КонецЕсли;
		ИначеЕсли НомерТаблицы = "03" тогда
			Поле = "ЕСН.ФБ.НалоговыйВычетФБ";
		ИначеЕсли НомерТаблицы = "04" тогда
			Поле = "ПримененнаяЛьгота";
			Если НомерКолонки = "03" тогда
				Поле = "ЕСН.ФБ." + Поле + "ФБ";
			ИначеЕсли НомерКолонки = "04" тогда
				Поле = "ЕСН.ФСС." + Поле + "ФСС";
			КонецЕсли;
		ИначеЕсли НомерТаблицы = "05" тогда
			Поле = "НеОблагается";
			Если НомерКолонки = "03" тогда
				Поле = "ЕСН.ФБ." + Поле + "ФБ";
			ИначеЕсли НомерКолонки = "04" тогда
				Поле = "ЕСН.ФСС." + Поле + "ФСС";
			ИначеЕсли НомерКолонки = "05" тогда
				Поле = "ЕСН.ФОМС." + Поле + "ФФОМС";
			ИначеЕсли НомерКолонки = "06" тогда
				Поле = "ЕСН.ФОМС." + Поле + "ТФОМС";
			КонецЕсли;
		ИначеЕсли НомерТаблицы = "06" тогда
			Поле = Поле + "Начислено";
			Если НомерКолонки = "03" тогда
				Поле = "ЕСН.ФБ." + Поле + "ФБ";
			ИначеЕсли НомерКолонки = "04" тогда
				Поле = "ЕСН.ФСС." + Поле + "ФСС";
			ИначеЕсли НомерКолонки = "05" тогда
				Поле = "ЕСН.ФОМС." + Поле + "ФФОМС";
			ИначеЕсли НомерКолонки = "06" тогда
				Поле = "ЕСН.ФОМС." + Поле + "ТФОМС";
			КонецЕсли;
		ИначеЕсли НомерТаблицы = "07" тогда
			Поле =  "ЕСН." + Поле + "Начислено";
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "КодДохода", Справочники.ДоходыЕСН.ПособияЗаСчетФСС);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "НалоговыйРежим", "ЕНВД", ВидСравненияКомпоновкиДанных.НеРавно);
		ИначеЕсли НомерТаблицы = "10" тогда
			Поле =  "ЕСН." + Поле + "Начислено";
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "КодДохода", Справочники.ДоходыЕСН.ВыплатыЗаСчетПрибыли);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "НалоговыйРежим", "ЕНВД", ВидСравненияКомпоновкиДанных.НеРавно);
		ИначеЕсли НомерТаблицы = "11" тогда
			Если НомерКолонки = "03" тогда
				Поле = "ЕСН.НеоблПоСт238ФБ";
				//СписокЗначений =  Новый СписокЗначений;
				//СписокЗначений.Добавить(Справочники.ДоходыЕСН.НеЯвляетсяОбъектом);
				//СписокЗначений.Добавить(Справочники.ДоходыЕСН.ПособияЗаСчетФСС);
				//ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "КодДохода", СписокЗначений, ВидСравненияКомпоновкиДанных.ВСписке);
				//ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "НалоговыйРежим", "ОСН");
			ИначеЕсли НомерКолонки = "04" тогда
				Поле = "ЕСН.НеоблПоСт238ФСС";
				//СписокЗначений =  Новый СписокЗначений;
				//СписокЗначений.Добавить(Справочники.ДоходыЕСН.ДоговораГПХ);
				//СписокЗначений.Добавить(Справочники.ДоходыЕСН.ДоговораАвторские);
				//СписокЗначений.Добавить(Справочники.ДоходыЕСН.ПособияЗаСчетФСС);
				//СписокЗначений.Добавить(Справочники.ДоходыЕСН.НеОблагаетсяЦеликом);
				//ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "КодДохода", СписокЗначений, ВидСравненияКомпоновкиДанных.ВСписке);
				//ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "НалоговыйРежим", "ОСН");
			КонецЕсли;
		КонецЕсли;
		ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "ПериодРегистрации");
		ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "Сотрудник");
		Если НомерТаблицы = "01" тогда
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "ВидРасчета");
		КонецЕсли;
		Если Поле = "" тогда
			Предупреждение("Расшифровка данного раздела не поддерживается");
			Возврат;		
		КонецЕсли;
		ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетРасшифровки.КомпоновщикНастроек, Поле);
	ИначеЕсли Форма.ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Раздел21" Тогда
		ТекущаяОбласть = Форма.ЭлементыФормы.ПолеТабличногоДокументаРаздел21.ТекущаяОбласть;
		ИмяЯчейки	   = ТекущаяОбласть.Имя;		
		НомерРаздела   = "21";
		НомерТаблицы   = Сред(ИмяЯчейки, 8, 2);
		НомерСтроки    = Сред(ИмяЯчейки, 10, 2);
		НомерКолонки   = Прав(ИмяЯчейки, 2);
		
		ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
		ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "КонецПериода",  Отчет.мДатаКонцаПериодаОтчета);
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "НалоговыйРежим", "ОСН");
		
		ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Структура.Очистить();
		ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
		Если НомерКолонки = "03" или НомерКолонки = "04"  или НомерКолонки = "05" тогда
			Если НомерКолонки = "03"тогда
				Поле = "ЕСН.ФБ.БазаСУчетомСкидкиФБ";
			ИначеЕсли НомерКолонки = "04" тогда
				Поле = "ЕСН.ФСС.БазаСУчетомСкидкиФСС";
			ИначеЕсли НомерКолонки = "05" тогда
				Поле = "ЕСН.ФОМС.БазаСУчетомСкидкиФОМС";
			КонецЕсли;
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "Сотрудник");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "ВидРасчета");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетРасшифровки.КомпоновщикНастроек, Поле);
		Иначе
			Группировка                 = ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "Сотрудник.ФизЛицо");
			ВыбранноеПоле               = Группировка.Выбор.Элементы.Вставить(0, Тип("ВыбранноеПолеКомпоновкиДанных"));
			ВыбранноеПоле.Поле          = Новый ПолеКомпоновкиДанных("SystemFields.GroupSerialNumber");
			ВыбранноеПоле.Использование = истина;
			Если НомерКолонки = "06" тогда
				Поле = "ЕСН.ФБ.БазаСУчетомСкидкиФБ";
			ИначеЕсли НомерКолонки = "07" тогда
				Поле = "ЕСН.ФСС.БазаСУчетомСкидкиФСС";
			ИначеЕсли НомерКолонки = "08" тогда
				Поле = "ЕСН.ФОМС.БазаСУчетомСкидкиФОМС";
			КонецЕсли;
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетРасшифровки.КомпоновщикНастроек, Поле);
		КонецЕсли;
		
		ПолеДляОтбора = "";
		Если НомерКолонки = "03" или НомерКолонки = "06" тогда
			ПолеДляОтбора = "ЕСН.НомерСтрокиСтавокФБ";
		ИначеЕсли НомерКолонки = "04" или НомерКолонки = "07" тогда
			ПолеДляОтбора = "ЕСН.НомерСтрокиСтавокФСС";
		ИначеЕсли НомерКолонки = "05"  или НомерКолонки = "08" тогда
			ПолеДляОтбора = "ЕСН.НомерСтрокиСтавокФОМС";
		КонецЕсли;
	
		Если НомерСтроки = "10" тогда
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, ПолеДляОтбора, 1);
		ИначеЕсли НомерСтроки = "20" тогда
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, ПолеДляОтбора, 2);
		ИначеЕсли НомерСтроки = "30" тогда
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, ПолеДляОтбора, 3);
		ИначеЕсли НомерСтроки = "40" тогда
			ГруппаИЛИ = ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
			ГруппаИЛИ.Использование = Истина;
			ГруппаИЛИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
			ТиповыеОтчеты.ДобавитьОтбор(ГруппаИЛИ, ПолеДляОтбора, 1);
			ТиповыеОтчеты.ДобавитьОтбор(ГруппаИЛИ, ПолеДляОтбора, 2);
			ТиповыеОтчеты.ДобавитьОтбор(ГруппаИЛИ, ПолеДляОтбора, 3);
		Иначе
			Предупреждение("Расшифровка данного раздела не поддерживается");
			Возврат;
		КонецЕсли;
	Иначе
		Предупреждение("Расшифровка данного раздела не поддерживается");
		Возврат;		
	КонецЕсли;
		
	Если Найти(ИмяЯчейки,"R") > 0 Тогда
		Предупреждение("Расшифровка данной ячейки не поддерживается");
		Возврат;
	КонецЕсли;

	ТиповыеОтчеты.ОткрытьФормуРасшифровки(ОтчетРасшифровки, "Расшифровка отчета Авансы ЕСН , колонка: " + НомерКолонки + ", номер строки " + НомерТаблицы + НомерСтроки);
КонецПроцедуры

// Открывает отчет расшифровку для отчета "Сводная карточка по ОПС"
// 
// Параметры
//    Форма - ссылка на форму отчета
//    Отчет - отчет объект, который расшифровывается
//
Процедура РасшифроватьСводнуюКарточкуПоОПС(Отчет, Форма, Расшифровка, СтандартнаяОбработка) Экспорт 
	
	СтандартнаяОбработка = Ложь;
	
	Колонка = Прав(Расшифровка.Имя, 2);
	
	Если Найти(Расшифровка.Имя, "ОСН") <> 0 тогда
		Режим = "ОСН";
	ИначеЕсли Найти(Расшифровка.Имя, "ЕНВД") <> 0 тогда
		Режим = "Спец";
	Иначе
		Режим = "Общ";
	КонецЕсли;
	
	ОтчетРасшифровки = Отчеты.АнализНачисленногоЕСН.Создать();
	ДатаКон = КонецМесяца(Дата(Формат(Отчет.НалоговыйПериод, "ЧГ=0"),Формат(Расшифровка.Месяц, "ЧМ=0"), Формат(Расшифровка.Месяц, "ЧЧ=0")));	
    ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "КонецПериода", ДатаКон);
	
	Если Найти(Расшифровка.Имя,"СНГ") > 0 Тогда
		// с начала года
		ДатаНач = НачалоГода(ДатаКон);
	    ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "НачалоПериода", ДатаНач);
	Иначе
		//за месяц
		ДатаНач = НачалоМесяца(ДатаКон);
	    ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "НачалоПериода", ДатаНач);
	КонецЕсли;
		
	ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "Организация", Отчет.Организация);
	
	ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Структура.Очистить();
	
	ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
	
	ПоследняяГруппировка = ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "Сотрудник");
	
	Поле = "";
	Если Колонка = "02" или Колонка = "03" или Колонка = "04" или Колонка = "05" тогда
		Поле = Поле + "База";
		ПоследняяГруппировка = ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "ВидРасчета");
	КонецЕсли;
	
	Если Режим = "Спец" тогда
		ГруппаИли = ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
		ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
		ТиповыеОтчеты.ДобавитьОтбор(ГруппаИли, "ЕСН.УСН", истина);
		ТиповыеОтчеты.ДобавитьОтбор(ГруппаИли, "ЕСН.ОблагаетсяЕНВД", истина);
	ИначеЕсли Режим = "ОСН" тогда
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ЕСН.УСН", ложь);
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ЕСН.ОблагаетсяЕНВД", ложь);
	КонецЕсли;
	
	Если Колонка = "02" тогда
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "КодДохода", Справочники.ДоходыЕСН.ВыплатыЗаСчетПрибыли, ВидСравненияКомпоновкиДанных.НеРавно);
		Поле = "ЕСН.Начислено";
	ИначеЕсли Колонка = "03" тогда 
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "КодДохода", Справочники.ДоходыЕСН.ВыплатыЗаСчетПрибыли);
		Поле = "ЕСН.Начислено";
	ИначеЕсли Колонка = "04" тогда 
		ГруппаИли = ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
		ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
		ТиповыеОтчеты.ДобавитьОтбор(ГруппаИли, "КодДохода", Справочники.ДоходыЕСН.НеОблагаетсяЦеликом);
		ТиповыеОтчеты.ДобавитьОтбор(ГруппаИли, "КодДохода", Справочники.ДоходыЕСН.ПособияЗаСчетФСС);
		Поле = "ЕСН.Начислено";
	ИначеЕсли Колонка = "05" тогда 
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "Налог", "Федеральный бюджет");
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "КодДохода", Справочники.ДоходыЕСН.ВыплатыЗаСчетПрибыли, ВидСравненияКомпоновкиДанных.НеРавно);
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "КодДохода", Справочники.ДоходыЕСН.НеОблагаетсяЦеликом, ВидСравненияКомпоновкиДанных.НеРавно);
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "КодДохода", Справочники.ДоходыЕСН.ПособияЗаСчетФСС, ВидСравненияКомпоновкиДанных.НеРавно);
		Поле = "ЕСН.Начислено";
	ИначеЕсли Колонка = "06" тогда 
		//ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ВидПоказателя", "Взносов в ПФР");  
		//ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ИсчисленоНачислено", "Начислено", ВидСравненияКомпоновкиДанных.Равно);
		Поле = "ПФР.НачисленоПФР";
	ИначеЕсли Колонка = "07" Тогда		
		Поле = "ПФР.НачисленоПФРСтраховая"
	ИначеЕсли Колонка = "08" тогда		
		Поле = "ПФР.НачисленоПФРНакопительная";
	КонецЕсли;
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетРасшифровки.КомпоновщикНастроек, Поле);
	
	// установи отбор, что бы не показывались пустые строки в отчете
	МассивГруппировокОтчета = ТиповыеОтчеты.ПолучитьПоляГруппировок(ОтчетРасшифровки.КомпоновщикНастроек);
	Для каждого ПолеГруппировки из МассивГруппировокОтчета Цикл
		Группировка = ТиповыеОтчеты.ПолучитьЭлементСтруктурыПоПолюГруппировки(Новый ПолеКомпоновкиДанных(ПолеГруппировки.Значение), ОтчетРасшифровки.КомпоновщикНастроек);
		ТиповыеОтчеты.ДобавитьОтбор(Группировка.Отбор, Поле, 0, ВидСравненияКомпоновкиДанных.НеРавно);
		ПараметрВывода = Группировка.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("FilterOutput"));
		ПараметрВывода.Значение = ТипВыводаТекстаКомпоновкиДанных.НеВыводить;
		ПараметрВывода.Использование = истина;
	КонецЦикла;
	ТиповыеОтчеты.ОткрытьФормуРасшифровки(ОтчетРасшифровки, "Расшифровка сводной карточки по ОПС, колонка: " + Колонка);
КонецПроцедуры

// Открывает отчет расшифровку для отчета "Сводная карточка по ЕСН"
// 
// Параметры
//    Форма - ссылка на форму отчета
//    Отчет - отчет объект, который расшифровывается
//
Процедура РасшифроватьСводнуюКарточкуПоЕСН(Отчет, Форма, Расшифровка, СтандартнаяОбработка) Экспорт 
	
	СтандартнаяОбработка = Ложь;
	
	СписокРасшифрованныхКолонок = Новый СписокЗначений;
	СписокРасшифрованныхКолонок.Добавить("02");
	СписокРасшифрованныхКолонок.Добавить("03");
	СписокРасшифрованныхКолонок.Добавить("04");
	СписокРасшифрованныхКолонок.Добавить("05");
	СписокРасшифрованныхКолонок.Добавить("07");
	СписокРасшифрованныхКолонок.Добавить("08");
	СписокРасшифрованныхКолонок.Добавить("09");
	СписокРасшифрованныхКолонок.Добавить("10");
	СписокРасшифрованныхКолонок.Добавить("11");
	СписокРасшифрованныхКолонок.Добавить("12");
	СписокРасшифрованныхКолонок.Добавить("13");
	СписокРасшифрованныхКолонок.Добавить("14");
	СписокРасшифрованныхКолонок.Добавить("15");
	СписокРасшифрованныхКолонок.Добавить("16");
	СписокРасшифрованныхКолонок.Добавить("17");
	СписокРасшифрованныхКолонок.Добавить("18");
	СписокРасшифрованныхКолонок.Добавить("19");
	СписокРасшифрованныхКолонок.Добавить("20");
	СписокРасшифрованныхКолонок.Добавить("21");
	СписокРасшифрованныхКолонок.Добавить("22");
	СписокРасшифрованныхКолонок.Добавить("23");
	СписокРасшифрованныхКолонок.Добавить("24");
	СписокРасшифрованныхКолонок.Добавить("25");
	СписокРасшифрованныхКолонок.Добавить("26");
	СписокРасшифрованныхКолонок.Добавить("27");
	СписокРасшифрованныхКолонок.Добавить("28");
	СписокРасшифрованныхКолонок.Добавить("29");
	СписокРасшифрованныхКолонок.Добавить("30");
	СписокРасшифрованныхКолонок.Добавить("31");
	СписокРасшифрованныхКолонок.Добавить("32");
	
	Колонка = Прав(Расшифровка.Имя,2);

	Если СписокРасшифрованныхКолонок.НайтиПоЗначению(Колонка) = Неопределено тогда 
		Возврат;
	КонецЕсли;
	
	ОтчетРасшифровки = Отчеты.АнализНачисленногоЕСН.Создать();
	
	ДатаКон = КонецМесяца(Дата(Формат(Отчет.НалоговыйПериод, "ЧГ=0"),Формат(Расшифровка.Месяц, "ЧМ=0"), Формат(Расшифровка.Месяц, "ЧЧ=0")));	
    ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "КонецПериода", ДатаКон);
	
	Если Лев(Расшифровка.Имя,3) = "СНГ" Тогда
		// с начала года
		ДатаНач = НачалоГода(ДатаКон);
	    ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "НачалоПериода", ДатаНач);
	Иначе
		//за месяц
		ДатаНач = НачалоМесяца(ДатаКон);
	    ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "НачалоПериода", ДатаНач);
	КонецЕсли;
		
	ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "Организация", Отчет.Организация);
	
	ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Структура.Очистить();
	
	ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
	
	ПоследняяГруппировка = ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "Сотрудник");
	
	Поле = "";
	Если Колонка = "02" Или Колонка = "03" Или Колонка = "04" Или Колонка = "07" Или Колонка = "08" Или Колонка = "09" Или Колонка = "14" Или Колонка = "32" тогда
		ПоследняяГруппировка = ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "ВидРасчета");
		Поле = Поле + "База";
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ЕСН.ОблагаетсяЕНВД", ложь);
	ИначеЕсли Колонка = "18" тогда
		Поле = Поле + "ПримененнаяЛьгота";
	ИначеЕсли Колонка = "19" или Колонка = "20" или Колонка = "21" или Колонка = "22" тогда
		Поле = Поле + "НеОблагается";
	ИначеЕсли Колонка = "27" тогда
		Поле = Поле + "ВсегоСуммаПособий";
	Иначе
		Поле = Поле + "";
	КонецЕсли;
	
	
	Если Колонка = "10" или Колонка = "11" или Колонка = "12" или Колонка = "13" тогда
		Поле = Поле + "Исчислено";
	ИначеЕсли Колонка = "23" или Колонка = "24" или Колонка = "25" или Колонка = "26" или Колонка = "15" или Колонка = "16" или Колонка = "17" тогда
		Поле = Поле + "Начислено";
	КонецЕсли;
		
	Если Колонка = "02" Тогда
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "КодДохода", Справочники.ДоходыЕСН.НеЯвляетсяОбъектом, ВидСравненияКомпоновкиДанных.НеРавно);
		Поле = "ЕСН.Начислено";
	ИначеЕсли Колонка = "03" Тогда 
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "КодДохода", Справочники.ДоходыЕСН.ВыплатыЗаСчетПрибыли);
		Поле = "ЕСН.Начислено";
	ИначеЕсли Колонка = "04" Тогда
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "НАлоговыйРежим", "ЕНВД", ВидСравненияКомпоновкиДанных.НеРавно);
		Поле = "ЕСН.НачисленоСкидка";
	ИначеЕсли Колонка = "05" Тогда
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "НалоговыйРежим", "ЕНВД", ВидСравненияКомпоновкиДанных.НеРавно);
		Поле = "ЕСН.ОплатаПоДоговорам";
	ИначеЕсли Колонка = "07" Или Колонка = "09" Или Колонка = "10" или Колонка = "23" тогда
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ЕСН.УСН",   ложь);
		Поле = "ЕСН.ФБ." + Поле + "ФБ";
		Если Колонка = "07" тогда
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "КодДохода", Справочники.ДоходыЕСН.ВыплатыЗаСчетПрибыли, ВидСравненияКомпоновкиДанных.НеРавно);
		КонецЕсли;
	ИначеЕсли Колонка = "08" Или Колонка = "11" или Колонка = "24" тогда
		Поле = "ЕСН.ФСС." + Поле + "ФСС";
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ЕСН.УСН",   ложь);
	ИначеЕсли Колонка = "12" или Колонка = "25" тогда
		Поле = "ЕСН.ФОМС." + Поле + "ФФОМС";
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ЕСН.УСН",   ложь);
	ИначеЕсли Колонка = "13" или Колонка = "26" тогда
		Поле = "ЕСН.ФОМС." + Поле + "ТФОМС";
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ЕСН.УСН",   ложь);
	ИначеЕсли Колонка = "14" или Колонка = "15" Тогда		
		Поле = "ПФР." + Поле + "ПФР";
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ЕСН.УСН",   ложь);
	ИначеЕсли Колонка = "16" Тогда		
		Поле = "ПФР." + Поле + "ПФРСтраховая";
		//ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ВидПоказателя", "Взносов в ПФР (страховая)");  
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ЕСН.УСН",   ложь);
	ИначеЕсли Колонка = "17" Тогда		
		Поле = "ПФР." + Поле + "ПФРНакопительная";
		//ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ВидПоказателя", "Взносов в ПФР (накопительная)");  
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ЕСН.УСН",   ложь);
	ИначеЕсли Колонка = "18" Тогда		
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ВидПоказателя", "Льгота в ФБ");
		Поле = "ЕСН.ФБ." + Поле + "ФБ";
	ИначеЕсли Колонка = "19" Тогда		
		Поле = "ЕСН.ФБ." + Поле + "ФБ";
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ВидПоказателя", "Не подлежит уплате в ФБ");  
	ИначеЕсли Колонка = "20" Тогда			
		Поле = "ЕСН.ФСС." + Поле + "ФСС";
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ВидПоказателя", "Не подлежит уплате в ФСС");  
	ИначеЕсли Колонка = "21" Тогда		
		Поле = "ЕСН.ФОМС." + Поле + "ФФОМС";
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ВидПоказателя", "Не подлежит уплате в ФФОМС");  
	ИначеЕсли Колонка = "22" Тогда		
		Поле = "ЕСН.ФОМС." + Поле + "ТФОМС";
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ВидПоказателя", "Не подлежит уплате в ТФОМС");  
	ИначеЕсли Колонка = "27" Тогда		
		//ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ВидПоказателя", "Начислено");
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "КодДохода", Справочники.ДоходыЕСН.ПособияЗаСчетФСС);		
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ЕСН.ОблагаетсяЕНВД", ложь);
		Поле = "ЕСН.Начислено";
	КонецЕсли;	
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетРасшифровки.КомпоновщикНастроек, Поле);
	
	// установи отбор, что бы не показывались пустые строки в отчете
	МассивГруппировокОтчета = ТиповыеОтчеты.ПолучитьПоляГруппировок(ОтчетРасшифровки.КомпоновщикНастроек);
	Для каждого ПолеГруппировки из МассивГруппировокОтчета Цикл
		Группировка = ТиповыеОтчеты.ПолучитьЭлементСтруктурыПоПолюГруппировки(Новый ПолеКомпоновкиДанных(ПолеГруппировки.Значение), ОтчетРасшифровки.КомпоновщикНастроек);
		ТиповыеОтчеты.ДобавитьОтбор(Группировка.Отбор, Поле, 0, ВидСравненияКомпоновкиДанных.НеРавно);
		ПараметрВывода = Группировка.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("FilterOutput"));
		ПараметрВывода.Значение = ТипВыводаТекстаКомпоновкиДанных.НеВыводить;
		ПараметрВывода.Использование = истина;
	КонецЦикла;
	ТиповыеОтчеты.ОткрытьФормуРасшифровки(ОтчетРасшифровки, "Расшифровка сводной карточник по ЕСН колонка: " + Колонка);
КонецПроцедуры

// Открывает отчет расшифровку для отчета "Карточка по ОПС"
// 
// Параметры
//    Форма - ссылка на форму отчета
//    Отчет - отчет объект, который расшифровывается
//
Процедура РасшифроватьКарточкаПоОПС(Отчет, Форма, Расшифровка, СтандартнаяОбработка) Экспорт 
	
	СтандартнаяОбработка = Ложь;
	
	СписокРасшифрованныхКолонок = Новый СписокЗначений;
	СписокРасшифрованныхКолонок.Добавить("П0102");
	СписокРасшифрованныхКолонок.Добавить("П309");
	СписокРасшифрованныхКолонок.Добавить("П311");
	СписокРасшифрованныхКолонок.Добавить("П0103");
	СписокРасшифрованныхКолонок.Добавить("П310");
	СписокРасшифрованныхКолонок.Добавить("П312");
	СписокРасшифрованныхКолонок.Добавить("ВСЕГО4");
	СписокРасшифрованныхКолонок.Добавить("ВСЕГО7");
	СписокРасшифрованныхКолонок.Добавить("ВСЕГО10");
	СписокРасшифрованныхКолонок.Добавить("П0105");
	СписокРасшифрованныхКолонок.Добавить("П510");
	СписокРасшифрованныхКолонок.Добавить("П512");
	СписокРасшифрованныхКолонок.Добавить("П8Общ");
	СписокРасшифрованныхКолонок.Добавить("П8Общ");
	СписокРасшифрованныхКолонок.Добавить("П8СР");
	СписокРасшифрованныхКолонок.Добавить("П8");
	СписокРасшифрованныхКолонок.Добавить("П9Общ");
	СписокРасшифрованныхКолонок.Добавить("П9СР");
	СписокРасшифрованныхКолонок.Добавить("П9");
	СписокРасшифрованныхКолонок.Добавить("П10Общ");
	СписокРасшифрованныхКолонок.Добавить("П10СР");
	СписокРасшифрованныхКолонок.Добавить("П10");
	СписокРасшифрованныхКолонок.Добавить("СНГ0102");
	СписокРасшифрованныхКолонок.Добавить("СНГ309");
	СписокРасшифрованныхКолонок.Добавить("СНГ311");
	СписокРасшифрованныхКолонок.Добавить("СНГ0103");
	СписокРасшифрованныхКолонок.Добавить("СНГ310");
	СписокРасшифрованныхКолонок.Добавить("СНГ312");
	СписокРасшифрованныхКолонок.Добавить("ВСЕГО_СНГ4");
	СписокРасшифрованныхКолонок.Добавить("ВСЕГО_СНГ7");
	СписокРасшифрованныхКолонок.Добавить("ВСЕГО_СНГ10");
	СписокРасшифрованныхКолонок.Добавить("СНГ0105");
	СписокРасшифрованныхКолонок.Добавить("СНГ510");
	СписокРасшифрованныхКолонок.Добавить("СНГ512");
	СписокРасшифрованныхКолонок.Добавить("СНГ8Общ");
	СписокРасшифрованныхКолонок.Добавить("СНГ8Общ");
	СписокРасшифрованныхКолонок.Добавить("СНГ8СР");
	СписокРасшифрованныхКолонок.Добавить("СНГ8");
	СписокРасшифрованныхКолонок.Добавить("СНГ9Общ");
	СписокРасшифрованныхКолонок.Добавить("СНГП9СР");
	СписокРасшифрованныхКолонок.Добавить("СНГ9");
	СписокРасшифрованныхКолонок.Добавить("СНГ10Общ");
	СписокРасшифрованныхКолонок.Добавить("СНГ10СР");
	СписокРасшифрованныхКолонок.Добавить("СНГ10");
	
	Если СписокРасшифрованныхКолонок.НайтиПоЗначению(Расшифровка.Имя) = Неопределено тогда 
		Возврат;
	КонецЕсли;
	
	Область = Расшифровка.Имя;
	Колонка = "";
	Если Область = "П0102" или Область = "П309" или Область = "П311" или Область = "СНГ0102" или Область = "СНГ309" или Область = "СНГ311" тогда
		Колонка = "02";
	ИначеЕсли Область = "П0103" или Область = "П310" или Область = "П312" или Область = "СНГ0103" или Область = "СНГ310" 
		  или Область = "СНГ312" тогда
		Колонка = "03";
	ИначеЕсли Область = "ВСЕГО4" или Область = "ВСЕГО7" или Область = "ВСЕГО10" или Область = "ВСЕГО_СНГ4" или Область = "ВСЕГО_СНГ7" 
		  или Область = "ВСЕГО_СНГ10"  тогда
		Колонка = "04";
	ИначеЕсли Область = "П0105" или Область = "П510" или Область = "П512" или Область = "СНГ0105" или Область = "СНГ510" 
		  или Область = "СНГ512" тогда
		Колонка = "05";
	ИначеЕсли Область = "П8Общ" или Область = "П8" или Область = "П8СР" или Область = "СНГ8Общ" или Область = "СНГ8" или Область = "СНГ8СР" тогда
		Колонка = "08";
	ИначеЕсли Область = "П9Общ" или Область = "П9" или Область = "П9СР" или Область = "СНГ9Общ" или Область = "СНГ9" или Область = "СНГ9СР" тогда
		Колонка = "09";
	ИначеЕсли Область = "П10Общ" или Область = "П10" или Область = "П10СР" или Область = "СНГ10Общ" или Область = "СНГ10" 
		  или Область = "СНГ10СР" тогда
		Колонка = "10";
	КонецЕсли;
	
	Режим = "";
	
	Если Область = "П0102" или Область = "СНГ0102" или Область = "П0103" или Область = "СНГ0103" или Область = "ВСЕГО4" 
	 или Область = "ВСЕГО_СНГ4" или Область = "П0105" или Область = "СНГ0105" или Область = "П8Общ" или Область = "СНГ8Общ" 
	 или Область = "П9Общ" или Область = "СНГ9Общ" или Область = "П10Общ" или Область = "СНГ10Общ" тогда
		Режим = "Общ";
	ИначеЕсли Область = "П309" или Область = "СНГ309" или Область = "П310" или Область = "СНГ310" или Область = "ВСЕГО7" 
		  или Область = "ВСЕГО_СНГ7" или Область = "П510" или Область = "СНГ510" или Область = "П8СР" или Область = "СНГ8СР" 
		  или Область = "П9СР" или Область = "СНГ9СР" или Область = "П10СР" или Область = "СНГ10СР" тогда
		Режим = "Спец";
	ИначеЕсли Область = "П311" или Область = "П312" или Область = "ВСЕГО10" или Область = "П512" или Область = "П8" или Область = "П9"
		  или Область = "П10" или Область = "СНГ311" или Область = "СНГ312" или Область = "ВСЕГО_СНГ10" или Область = "СНГ512" 
		  или Область = "СНГ8" или Область = "СНГ9" или Область = "СНГ10" тогда
		Режим = "ОСН";
	КонецЕсли;
	
	ОтчетРасшифровки = Отчеты.АнализНачисленногоЕСН.Создать();
	
	ДатаКон = КонецМесяца(Дата(Формат(Отчет.НалоговыйПериод, "ЧГ=0"),Формат(Расшифровка.Месяц, "ЧМ=0"), Формат(Расшифровка.Месяц, "ЧЧ=0")));	
    ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "КонецПериода", ДатаКон);
	
	Если Найти(Расшифровка.Имя,"СНГ") > 0 Тогда
		// с начала года
		ДатаНач = НачалоГода(ДатаКон);
	    ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "НачалоПериода", ДатаНач);
	Иначе
		//за месяц
		ДатаНач = НачалоМесяца(ДатаКон);
	    ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "НачалоПериода", ДатаНач);
	КонецЕсли;
		
	ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ГоловнаяОрганизация", Отчет.Организация);
	ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ФизЛицо", Отчет.ФизЛицо);
	
	ОтчетРасшифровкиФорма = ОтчетРасшифровки.ПолучитьФорму("ФормаОтчета", Форма);	
	ОтчетРасшифровкиФорма.ЭтоОтработкаРасшифровки = истина;
	ДокументРезультат	  = ОтчетРасшифровкиФорма.ЭлементыФормы.Результат;	
	
	ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Структура.Очистить();
	
	ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
	
	ПоследняяГруппировка = ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "Сотрудник");
	
	Поле = "";
	Если Колонка = "02" или Колонка = "03" или Колонка = "04" или Колонка = "05" тогда
		Поле = Поле + "База";
		ПоследняяГруппировка = ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "ВидРасчета");
	КонецЕсли;
	
	Если Режим = "Спец" тогда
		ГруппаИли = ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
		ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
		ТиповыеОтчеты.ДобавитьОтбор(ГруппаИли, "УСН", истина);
		ТиповыеОтчеты.ДобавитьОтбор(ГруппаИли, "ОблагаоетсяЕНВД", истина);
	ИначеЕсли Режим = "ОСН" тогда
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "УСН", ложь);
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ОблагаоетсяЕНВД", ложь);
	КонецЕсли;
	
	Если Колонка = "02" тогда
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "КодДохода", Справочники.ДоходыЕСН.ВыплатыЗаСчетПрибыли, ВидСравненияКомпоновкиДанных.НеРавно);
		Поле = "ЕСН.Начислено";
	ИначеЕсли Колонка = "03" тогда 
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "КодДохода", Справочники.ДоходыЕСН.ВыплатыЗаСчетПрибыли);
		Поле = "ЕСН.Начислено";
	ИначеЕсли Колонка = "04" тогда 
		ГруппаИли = ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
		ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
		ТиповыеОтчеты.ДобавитьОтбор(ГруппаИли, "КодДохода", Справочники.ДоходыЕСН.НеОблагаетсяЦеликом);
		ТиповыеОтчеты.ДобавитьОтбор(ГруппаИли, "КодДохода", Справочники.ДоходыЕСН.ПособияЗаСчетФСС);
		Поле = "ЕСН.Начислено";
	ИначеЕсли Колонка = "05" тогда 
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "Налог", "Федеральный бюджет");
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "КодДохода", Справочники.ДоходыЕСН.ВыплатыЗаСчетПрибыли, ВидСравненияКомпоновкиДанных.НеРавно);
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "КодДохода", Справочники.ДоходыЕСН.НеОблагаетсяЦеликом, ВидСравненияКомпоновкиДанных.НеРавно);
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "КодДохода", Справочники.ДоходыЕСН.ПособияЗаСчетФСС, ВидСравненияКомпоновкиДанных.НеРавно);
		Поле = "ЕСН.Начислено";
	ИначеЕсли Колонка = "08" тогда 
		//ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ВидПоказателя", "Взносов в ПФР");  
		//ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ИсчисленоНачислено", "Начислено", ВидСравненияКомпоновкиДанных.Равно);
		Поле = "ПФР.НачисленоПФР";
	ИначеЕсли Колонка = "09" Тогда		
		Поле = "ПФР.НачисленоПФРСтраховая";
	ИначеЕсли Колонка = "10" Тогда		
		Поле = "ПФР.НачисленоПФРНакопительная";
	КонецЕсли;
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетРасшифровки.КомпоновщикНастроек, Поле);
	ТиповыеОтчеты.ОткрытьФормуРасшифровки(ОтчетРасшифровки, "Расшифровка карточки ОПС, колонка: " + Колонка);
КонецПроцедуры

// Открывает отчет расшифровку для отчета "Карточка по ЕСН"
// 
// Параметры
//    ФормаОтчета - ссылка на форму отчета
//    Отчет - отчет объект, который расшифровывается
//
Процедура РасшифроватьКарточкаПоЕСН(Отчет, Форма, Расшифровка, СтандартнаяОбработка) Экспорт 
	
	СтандартнаяОбработка = Ложь;
	
	// Определим требуется ли расшифровывать данную колонку
	
	СписокРасшифрованныхКолонок = Новый СписокЗначений;
	СписокРасшифрованныхКолонок.Добавить("02");
	СписокРасшифрованныхКолонок.Добавить("03");
	СписокРасшифрованныхКолонок.Добавить("04");
	СписокРасшифрованныхКолонок.Добавить("05");
	СписокРасшифрованныхКолонок.Добавить("07");
	СписокРасшифрованныхКолонок.Добавить("09");
	СписокРасшифрованныхКолонок.Добавить("11");
	СписокРасшифрованныхКолонок.Добавить("13");
	СписокРасшифрованныхКолонок.Добавить("14");
	СписокРасшифрованныхКолонок.Добавить("15");
	СписокРасшифрованныхКолонок.Добавить("16");
	СписокРасшифрованныхКолонок.Добавить("17");
	СписокРасшифрованныхКолонок.Добавить("20");
	СписокРасшифрованныхКолонок.Добавить("21");
	СписокРасшифрованныхКолонок.Добавить("22");
	СписокРасшифрованныхКолонок.Добавить("23");
	СписокРасшифрованныхКолонок.Добавить("24");
	СписокРасшифрованныхКолонок.Добавить("25");
	СписокРасшифрованныхКолонок.Добавить("26");
	СписокРасшифрованныхКолонок.Добавить("27");
	СписокРасшифрованныхКолонок.Добавить("28");
	СписокРасшифрованныхКолонок.Добавить("29");
	СписокРасшифрованныхКолонок.Добавить("30");
	СписокРасшифрованныхКолонок.Добавить("31");
	СписокРасшифрованныхКолонок.Добавить("32");
	
	Колонка = Прав(Расшифровка.Имя,2);

	Если СписокРасшифрованныхКолонок.НайтиПоЗначению(Колонка) = Неопределено тогда 
		Возврат;
	КонецЕсли;
	
	//Настроим отчете расшифровку
	
	ОтчетРасшифровки = Отчеты.АнализНачисленногоЕСН.Создать();
	ДатаКон = КонецМесяца(Дата(Формат(Отчет.НалоговыйПериод, "ЧГ=0"),Формат(Расшифровка.Месяц, "ЧМ=0"), Формат(Расшифровка.Месяц, "ЧЧ=0")));	
	ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "КонецПериода", ДатаКон);
	
	// установим период, за который строится отчет расшифровка
	Если Лев(Расшифровка.Имя,3) = "СНГ" Тогда
		// с начала года
		ДатаНач = НачалоГода(ДатаКон);
	    ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "НачалоПериода", ДатаНач);
	Иначе
		//за месяц
		ДатаНач = НачалоМесяца(ДатаКон);
		ТиповыеОтчеты.УстановитьПараметр(ОтчетРасшифровки.КомпоновщикНастроек, "НачалоПериода", ДатаНач);
	КонецЕсли;
		
	ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ГоловнаяОрганизация", Отчет.Организация);
	ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ФизЛицо", Отчет.ФизЛицо);
	
	// добавим структуру отчета для расшифровки
	ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Структура.Очистить();
	ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
	ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "Сотрудник");

	//ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "ПериодРегистрации");

	
	// добавим в отчет ресурс, которые требуется  выводить для расшифровываемой колонки
	Поле = "";
	Если Колонка = "02" Или Колонка = "03" Или Колонка = "04" Или Колонка = "07" Или Колонка = "09" Или Колонка = "11" Или Колонка = "17" Или Колонка = "32" тогда
		Поле = Поле + "База";
		ТиповыеОтчеты.ДобавитьГруппировку(ОтчетРасшифровки.КомпоновщикНастроек, "ВидРасчета");
	ИначеЕсли Колонка = "23" тогда
		Поле = Поле + "ПримененнаяЛьгота";
	ИначеЕсли Колонка = "05" Тогда
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "НалоговыйРежим", "ЕНВД", ВидСравненияКомпоновкиДанных.НеРавно);
		Поле = "ЕСН.ОплатаПоДоговорам";
	ИначеЕсли Колонка = "24" или Колонка = "25" или Колонка = "26" или Колонка = "27" тогда
		Поле = Поле + "НеОблагается";
	ИначеЕсли Колонка = "32" тогда
		Поле = Поле + "Пособие";
	Иначе
		Поле = Поле + "";
	КонецЕсли;
	
	Если Колонка = "13" или Колонка = "14" или Колонка = "15" или Колонка = "16" тогда
		Поле = Поле + "Исчислено";
	ИначеЕсли Колонка = "28" или Колонка = "29" или Колонка = "30" или Колонка = "31" или Колонка = "20" или Колонка = "21" или Колонка = "22" тогда
		Поле = Поле + "Начислено";
	КонецЕсли;
		
	Если Колонка = "02" Тогда
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "КодДохода", Справочники.ДоходыЕСН.ВыплатыЗаСчетПрибыли, ВидСравненияКомпоновкиДанных.НеРавно);
		Поле = "ЕСН.Начислено";
	ИначеЕсли Колонка = "03" Тогда 
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "КодДохода", Справочники.ДоходыЕСН.ВыплатыЗаСчетПрибыли);
		Поле = "ЕСН.Начислено";
	ИначеЕсли Колонка = "04" Тогда
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "КодДохода", Справочники.ДоходыЕСН.ВыплатыЗаСчетПрибыли);
		ГруппаИли = ОтчетРасшифровки.КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
		ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
		ТиповыеОтчеты.ДобавитьОтбор(ГруппаИли, "КодДохода", Справочники.ДоходыЕСН.ПособияЗаСчетФСС);
		ТиповыеОтчеты.ДобавитьОтбор(ГруппаИли, "КодДохода", Справочники.ДоходыЕСН.НеОблагаетсяЦеликом);
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь);
	ИначеЕсли Колонка = "07" Или Колонка = "13" или Колонка = "28" тогда
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "УСН",   ложь);
		Поле = "ЕСН.ФБ." + Поле + "ФБ";
	ИначеЕсли Колонка = "09" Или Колонка = "14" или Колонка = "29" тогда
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "УСН",   ложь);
		Поле = "ЕСН.ФСС." + Поле + "ФСС";
	ИначеЕсли Колонка = "11" Или Колонка = "14" или Колонка = "29" тогда
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "УСН",   ложь);
		Поле = "ЕСН.ФОМС." + Поле + "ФОМС";
	ИначеЕсли Колонка = "11" Или Колонка = "15" или Колонка = "30" тогда
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "УСН",   ложь);
		Поле = "ЕСН.ФОМС." + Поле + "ФФОМС";
	ИначеЕсли Колонка = "16" или Колонка = "31" тогда
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "УСН",   ложь);
		Поле = "ЕСН.ФОМС." + Поле + "ТФОМС";
	ИначеЕсли Колонка = "17" Тогда		
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "УСН",   ложь);
		Поле = "ПФР." + Поле + "ПФР";
	ИначеЕсли Колонка = "20" Тогда		
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "УСН",   ложь);
		Поле = "ПФР." + Поле + "ПФР";
	ИначеЕсли Колонка = "21" Тогда		
		Поле = "ПФР." + Поле + "ПФРСтраховая";
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "УСН",   ложь);
	ИначеЕсли Колонка = "22" Тогда		
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "УСН",   ложь);
		Поле = "ПФР." + Поле + "ПФРНакопительная";
	ИначеЕсли Колонка = "23" Тогда		
		Поле = "ЕСН.ФБ." + Поле + "ФБ";
	ИначеЕсли Колонка = "24" Тогда		
		Поле = Поле + "ФБ";
	ИначеЕсли Колонка = "25" Тогда		
		Поле = "ЕСН.ФСС." + Поле + "ФСС";
	ИначеЕсли Колонка = "26" Тогда		
		Поле = "ЕСН.ФОМС." + Поле + "ФФОМС";
	ИначеЕсли Колонка = "27" Тогда		
		Поле = "ЕСН.ФОМС." + Поле + "ТФОМС";
	ИначеЕсли Колонка = "32" Тогда		
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь);
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасшифровки.КомпоновщикНастроек, "УСН", истина);
		Поле = "Пособия.ВсегоСуммаПособий";
	КонецЕсли;	
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетРасшифровки.КомпоновщикНастроек, Поле);
	
	// установи отбор, что бы не показывались пустые строки в отчете
	МассивГруппировокОтчета = ТиповыеОтчеты.ПолучитьПоляГруппировок(ОтчетРасшифровки.КомпоновщикНастроек);
	Для каждого ПолеГруппировки из МассивГруппировокОтчета Цикл
		Группировка = ТиповыеОтчеты.ПолучитьЭлементСтруктурыПоПолюГруппировки(Новый ПолеКомпоновкиДанных(ПолеГруппировки.Значение), ОтчетРасшифровки.КомпоновщикНастроек);
		ТиповыеОтчеты.ДобавитьОтбор(Группировка.Отбор, Поле, 0, ВидСравненияКомпоновкиДанных.НеРавно);
		ПараметрВывода = Группировка.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("FilterOutput"));
		ПараметрВывода.Значение = ТипВыводаТекстаКомпоновкиДанных.НеВыводить;
		ПараметрВывода.Использование = истина;
	КонецЦикла;
	
	ТиповыеОтчеты.ОткрытьФормуРасшифровки(ОтчетРасшифровки, "Расшифровка карточки по ЕСН, колонка: " + Колонка);
	
КонецПроцедуры 

#КонецЕсли

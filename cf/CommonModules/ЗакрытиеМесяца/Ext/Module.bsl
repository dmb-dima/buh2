
Процедура СообщитьОбОшибкеРегОперации(Знач ТекстСообщения, ДокументСообщения = Неопределено, Отказ = Ложь, РегОперация) Экспорт

	Отказ = Истина;
		
		Если ТипЗнч(РегОперация)=Тип("ДокументОбъект.РегламентнаяОперация") И ЗначениеЗаполнено(РегОперация.Ссылка) Тогда
			ОшибкиСтрока = РегОперация.Ошибки.Добавить();
			ОшибкиСтрока.Описание = ТекстСообщения;
		Иначе
			Заголовок = ?(РегОперация = Неопределено, "", ОбщегоНазначения.ПредставлениеДокументаПриПроведении(РегОперация.Ссылка));
			ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения, Отказ, Заголовок);
		КонецЕсли;
	
КонецПроцедуры // СообщитьОбОшибке()

Процедура ПоказатьОшибкиРегОперации(РегОперация) Экспорт
	
	#Если Клиент Тогда
		ФормаОшибок = РегОперация.ПолучитьФорму("ФормаОшибок", "ОсновнаяФорма", "ФормаОшибок");
		ФормаОшибок.Открыть();
	#КонецЕсли
	
КонецПроцедуры

Функция НомерГруппыВпоследовательности(ДокументСсылка) Экспорт
	
	Если Не ЗначениеЗаполнено(ДокументСсылка) Тогда
		Группа = 1;
		ТочкаПериода = 0;
	Иначе
		ТочкаПериода = Год(ДокументСсылка.Дата)*12 + Месяц(ДокументСсылка.Дата);
		Максимум = 4;
		
		Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.РегламентнаяОперация") Тогда
			
			Группа = ГруппаПоВидуОперации(ДокументСсылка.ВидОперации);
		Иначе
			Группа = 1;
		КонецЕсли;
		
		
	КонецЕсли;
		
	Возврат  Новый Структура("Группа,Месяц,Максимум",Группа,ТочкаПериода,Максимум)
	
КонецФункции

Функция ГруппаПоВидуОперации(ВидОперации) Экспорт
	
	Если ВидОперации = Перечисления.ВидыРегламентныхОпераций.РасчетДолейСписанияКосвенныхРасходов Тогда 
		Группа = 2;
	ИначеЕсли ВидОперации = Перечисления.ВидыРегламентныхОпераций.ЗакрытиеСчетов20_23_25_26 Тогда 
		Группа = 3;
	ИначеЕсли ВидОперации = Перечисления.ВидыРегламентныхОпераций.ЗакрытиеСчета44 Тогда 
		Группа = 3;
	ИначеЕсли ВидОперации = Перечисления.ВидыРегламентныхОпераций.РаспределениеРасходовПоВидамДеятельностиДляУСН Тогда 
		Группа = 3;
	// {УчетДоходовИРасходовИП
	ИначеЕсли ВидОперации = Перечисления.ВидыРегламентныхОпераций.РаспределениеРасходовПоВидамДеятельностиДляИП Тогда 
		Группа = 3;
	// }УчетДоходовИРасходовИП
	ИначеЕсли ВидОперации = Перечисления.ВидыРегламентныхОпераций.ЗакрытиеСчетов90_91 Тогда 
		Группа = 4;
	ИначеЕсли ВидОперации = Перечисления.ВидыРегламентныхОпераций.СписаниеУбытковПрошлыхЛет Тогда 
		Группа = 4;
	ИначеЕсли ВидОперации = Перечисления.ВидыРегламентныхОпераций.РасчетНалогаНаПрибыль Тогда 
		Группа = 4;
	ИначеЕсли ВидОперации = Перечисления.ВидыРегламентныхОпераций.РеформацияБаланса Тогда 
		Группа = 4;
	Иначе
		Группа = 1;
	КонецЕсли;
	
	Возврат Группа;
	
КонецФункции

// Формирует список регламентных состояний, которые требуется выполнить
// и которые выполнены успешно и с ошибками

Функция СоставГруппыРегОпераций(Группа, Организация, Период, ВидОперации = Неопределено, СписокОрганизаций = "", ДляОП = Ложь) Экспорт
	
	УчетнаяПолитика = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(Период, , Организация);
	Если УчетнаяПолитика = Неопределено Или УчетнаяПолитика.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	КонецКвартала = (Месяц(Период) = 3 Или Месяц(Период) = 6 Или Месяц(Период) = 9 Или Месяц(Период) = 12);
	НачисляетсяНДС = (УчетнаяПолитика.СистемаНалогообложения = Перечисления.СистемыНалогообложения.Общая
	И КонецКвартала);
	
	Если СписокОрганизаций = "" Тогда
		СписокОрганизаций = Новый Массив;
		СписокОрганизаций.Добавить(Организация);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(Период));
	Запрос.УстановитьПараметр("ДатаКон", КонецМесяца(Период));
	Запрос.УстановитьПараметр("ПустоеСостояние",     Перечисления.ВидыСостоянийРегламентныхОпераций.ПустаяСсылка());
	Запрос.УстановитьПараметр("ВостребованностьНДС", НачисляетсяНДС);
	Запрос.УстановитьПараметр("НеВыполнено",       Перечисления.ВидыСостоянийРегламентныхОпераций.НеВыполнено);
	Запрос.УстановитьПараметр("Выполнено",         Перечисления.ВидыСостоянийРегламентныхОпераций.Выполнено);
	Запрос.УстановитьПараметр("Пропущено",         Перечисления.ВидыСостоянийРегламентныхОпераций.Пропущено);
	
	Запрос.УстановитьПараметр("КонецГода", (Месяц(Период) = 12));
	Запрос.УстановитьПараметр("СубконтоРБП", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов);
	Запрос.УстановитьПараметр("ВидРБП", Перечисления.ВидыРБП.УбыткиПрошлыхЛет);
	
	Массив = Новый Массив;
	Массив.Добавить(ПланыСчетов.Хозрасчетный.РасходыБудущихПериодов);
	Массив.Добавить(ПланыСчетов.Хозрасчетный.ПлатежиПоДобровольномуСтрахованиюРаботников);
	Запрос.УстановитьПараметр("Счет97",  Массив);
	
	Если ЗначениеЗаполнено(Организация.ГоловнаяОрганизация) И (Группа = 4 Или Группа = 2) Тогда
		Запрос.УстановитьПараметр("Организация", Организация.ГоловнаяОрганизация);
	Иначе
		Запрос.УстановитьПараметр("Организация", Организация);
	КонецЕсли;
	Запрос.УстановитьПараметр("СписокОрганизаций", СписокОрганизаций);
	Если ДляОП Тогда
		ДляОП = ДляОП И (Не Группа = 4 И Не Группа = 2);
	КонецЕсли;
	
	
	Если ДляОП Тогда // для организации с обособленными подразделениями сворачиваем по организациям
		Запрос.Текст =  "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВложенныйЗапрос2.ВидОперации КАК ВидОперации,
		|	ВложенныйЗапрос2.ВидДокумента КАК ВидДокумента,
		|	ВложенныйЗапрос2.РучнаяКорректировка КАК РучнаяКорректировка,
		|	ВЫБОР
		|		КОГДА ВложенныйЗапрос2.Требуется = 1
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК Требуется,
		|	ВЫБОР
		|		КОГДА ВложенныйЗапрос2.Состояние = 1
		|			ТОГДА &Выполнено
		|		ИНАЧЕ &НЕВыполнено
		|	КОНЕЦ КАК Состояние
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВложенныйЗапрос.ВидОперации КАК ВидОперации,
		|		ВложенныйЗапрос.ВидДокумента КАК ВидДокумента,
		|		ВложенныйЗапрос.РучнаяКорректировка КАК РучнаяКорректировка,
		|		МАКСИМУМ(ВЫБОР
		|				КОГДА ВложенныйЗапрос.Требуется
		|					ТОГДА 1
		|				ИНАЧЕ 0
		|			КОНЕЦ) КАК Требуется,
		|		МИНИМУМ(ВЫБОР
		|				КОГДА ВложенныйЗапрос.Состояние = &Выполнено Или ВложенныйЗапрос.Состояние = &Пропущено Или НЕ ВложенныйЗапрос.Требуется
		|					ТОГДА 1
		|				ИНАЧЕ 0
		|			КОНЕЦ) КАК Состояние
		|ИЗ
		|	(";
	Иначе	// используется для одной организации и для организации с ОП для печати отчетов о выполненных операциях
		Запрос.Текст =  "		
		
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВложенныйЗапрос.Организация КАК Организация,
		|	ВложенныйЗапрос.ВидОперации КАК ВидОперации,
		|	ВложенныйЗапрос.ВидДокумента КАК ВидДокумента,
		|	ВложенныйЗапрос.Требуется КАК Требуется,
		|	ВложенныйЗапрос.РучнаяКорректировка КАК РучнаяКорректировка,
	    |	ВЫБОР КОГДА ВложенныйЗапрос.Состояние = &ПустоеСостояние ТОГДА &НеВыполнено ИНАЧЕ ВложенныйЗапрос.Состояние КОНЕЦ КАК Состояние
		|ИЗ
		|	(";
	КонецЕсли;	
	
	Если Группа = 1 Или Группа = "Все" Тогда
		
		Массив = Новый Массив;
		Массив.Добавить(ПланыСчетов.Хозрасчетный.ОсновныеСредства);
		Массив.Добавить(ПланыСчетов.Хозрасчетный.ДоходныеВложенияВ_МЦ);
		Запрос.УстановитьПараметр("Счет0103", Массив);
		
		Массив = Новый Массив;
		Массив.Добавить(ПланыСчетов.Хозрасчетный.НематериальныеАктивы);
		Массив.Добавить(ПланыСчетов.Хозрасчетный.АмортизацияНематериальныхАктивов);
		Запрос.УстановитьПараметр("Счет0405", Массив);
		
		Массив = Новый Массив;
		Массив.Добавить(ПланыСчетов.Хозрасчетный.СпецоснасткаИСпецодеждаНаСкладе);
		Массив.Добавить(ПланыСчетов.Хозрасчетный.СпецоснасткаИСпецодеждаВЭксплуатации);
		Запрос.УстановитьПараметр("Счет10_1112", Массив);
		
		Массив = Новый Массив;
		Массив.Добавить(ПланыСчетов.Хозрасчетный.ТоварыВРозничнойТорговлеВПродажныхЦенахАТТ);
		Массив.Добавить(ПланыСчетов.Хозрасчетный.ТоварыВРозничнойТорговлеВПродажныхЦенахНТТ);
		Запрос.УстановитьПараметр("Счет41_1112", Массив);
		
		Запрос.УстановитьПараметр("АмортизацияОС",    Перечисления.ВидыРегламентныхОпераций.АмортизацияИИзносОС);
		Запрос.УстановитьПараметр("АмортизацияНМА",   Перечисления.ВидыРегламентныхОпераций.АмортизацияНМАИсписаниеРасходовПоНИОКР);
		Запрос.УстановитьПараметр("СпецОдежда",       Перечисления.ВидыРегламентныхОпераций.ПогашениеСтоимостиСпецодеждыИспецоснасткиВэксплуатации);
		Запрос.УстановитьПараметр("ПереоценкаВалюты", Перечисления.ВидыРегламентныхОпераций.ПереоценкаВалютныхСредств);
		Запрос.УстановитьПараметр("Розница",          Перечисления.ВидыРегламентныхОпераций.РасчетТорговойНаценкиПоПроданнымТоварам);
		Запрос.УстановитьПараметр("КорректировкаСтоимости", Перечисления.ВидыРегламентныхОпераций.КорректировкаСтоимостиНоменклатуры);
		Запрос.УстановитьПараметр("РБП",              Перечисления.ВидыРегламентныхОпераций.ЗакрытиеСчета97);
		
		Запрос.УстановитьПараметр("ОСУСН",            Перечисления.ВидыРегламентныхОпераций.ПризнаниеРасходовНаПриобретениеОСДляУСН);
		Запрос.УстановитьПараметр("НЗПУСН",           Перечисления.ВидыРегламентныхОпераций.ИсключениеНЗПИзСоставаМатериальныхРасходовДляУСН);
		Запрос.УстановитьПараметр("НМАУСН",           Перечисления.ВидыРегламентныхОпераций.ПризнаниеРасходовНаПриобретениеНМАДляУСН);
		Запрос.УстановитьПараметр("ДопРасходыУСН",    Перечисления.ВидыРегламентныхОпераций.СписаниеДопРасходовДляУСН);
		Запрос.УстановитьПараметр("ВидРасхода",       Перечисления.ВидыРасходовУСН.ДопРасходы);
		Запрос.УстановитьПараметр("ПорядокПризнанияМатериальныхРасходов",Перечисления.ПорядокПризнанияМатериальныхРасходов.УменьшатьРасходыНаОстатокНЗП);
		
		Запрос.УстановитьПараметр("УчетЗарплатыИКадровВоВнешнейПрограмме",       Константы.УчетЗарплатыИКадровВоВнешнейПрограмме.Получить());
		
	Запрос.Текст = Запрос.Текст + "ВЫБРАТЬ
	                              |	АмортизацияОС.Организация КАК Организация,
	                              |	АмортизацияОС.ВидОперации КАК ВидОперации,
	                              |	""РегламентнаяОперация"" КАК ВидДокумента,
	                              |	ЕСТЬNULL(ОстаткиИОбороты.Требуется, ЛОЖЬ) КАК Требуется,
	                              |	ЕСТЬNULL(РегламентнаяОперация.РучнаяКорректировка, ЛОЖЬ) КАК РучнаяКорректировка,
	                              |	ЕСТЬNULL(РегламентнаяОперация.Состояние, &НеВыполнено) КАК Состояние
	                              |ИЗ
	                              |	(ВЫБРАТЬ
	                              |		ВидыРегламентныхОпераций.Ссылка КАК ВидОперации,
	                              |		Организации.Ссылка КАК Организация
	                              |	ИЗ
	                              |		Перечисление.ВидыРегламентныхОпераций КАК ВидыРегламентныхОпераций,
	                              |		Справочник.Организации КАК Организации
	                              |	ГДЕ
	                              |		ВидыРегламентныхОпераций.Ссылка = &АмортизацияОС
	                              |		И Организации.Ссылка В(&СписокОрганизаций)) КАК АмортизацияОС
	                              |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                              |			РегламентнаяОперация.РучнаяКорректировка КАК РучнаяКорректировка,
	                              |			РегламентнаяОперация.Состояние КАК Состояние,
	                              |			РегламентнаяОперация.ВидОперации КАК ВидОперации,
	                              |			РегламентнаяОперация.Организация КАК Организация
	                              |		ИЗ
	                              |			Документ.РегламентнаяОперация КАК РегламентнаяОперация
	                              |		ГДЕ
	                              |			РегламентнаяОперация.Организация В(&СписокОрганизаций)
	                              |			И РегламентнаяОперация.Дата МЕЖДУ &ДатаНач И &ДатаКон
	                              |			И РегламентнаяОперация.ВидОперации = &АмортизацияОС
	                              |			И (НЕ РегламентнаяОперация.ПометкаУдаления)) КАК РегламентнаяОперация
	                              |		ПО АмортизацияОС.Организация = РегламентнаяОперация.Организация
	                              |			И АмортизацияОС.ВидОперации = РегламентнаяОперация.ВидОперации
	                              |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                              |			ВЫБОР
	                              |				КОГДА (НЕ ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток = 0)
	                              |					ТОГДА ИСТИНА
	                              |				ИНАЧЕ ЛОЖЬ
	                              |			КОНЕЦ КАК Требуется,
	                              |			&АмортизацияОС КАК ВидОперации,
	                              |			ХозрасчетныйОстаткиИОбороты.Организация КАК Организация
	                              |		ИЗ
	                              |			РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&ДатаНач, &ДатаКон, , , Счет В ИЕРАРХИИ (&Счет0103), , Организация В (&СписокОрганизаций)) КАК ХозрасчетныйОстаткиИОбороты) КАК ОстаткиИОбороты
	                              |		ПО АмортизацияОС.Организация = ОстаткиИОбороты.Организация
	                              |			И АмортизацияОС.ВидОперации = ОстаткиИОбороты.ВидОперации
	                              |
	                              |ОБЪЕДИНИТЬ ВСЕ
	                              |
	                              |ВЫБРАТЬ
	                              |	АмортизацияНМА.Организация,
	                              |	АмортизацияНМА.ВидОперации,
	                              |	""РегламентнаяОперация"",
	                              |	ЕСТЬNULL(ОстаткиИОбороты.Требуется, ЛОЖЬ),
	                              |	ЕСТЬNULL(РегламентнаяОперация.РучнаяКорректировка, ЛОЖЬ),
	                              |	ЕСТЬNULL(РегламентнаяОперация.Состояние, &НеВыполнено)
	                              |ИЗ
	                              |	(ВЫБРАТЬ
	                              |		ВидыРегламентныхОпераций.Ссылка КАК ВидОперации,
	                              |		Организации.Ссылка КАК Организация
	                              |	ИЗ
	                              |		Перечисление.ВидыРегламентныхОпераций КАК ВидыРегламентныхОпераций,
	                              |		Справочник.Организации КАК Организации
	                              |	ГДЕ
	                              |		ВидыРегламентныхОпераций.Ссылка = &АмортизацияНМА
	                              |		И Организации.Ссылка В(&СписокОрганизаций)) КАК АмортизацияНМА
	                              |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                              |			РегламентнаяОперация.РучнаяКорректировка КАК РучнаяКорректировка,
	                              |			РегламентнаяОперация.Состояние КАК Состояние,
	                              |			РегламентнаяОперация.ВидОперации КАК ВидОперации,
	                              |			РегламентнаяОперация.Организация КАК Организация
	                              |		ИЗ
	                              |			Документ.РегламентнаяОперация КАК РегламентнаяОперация
	                              |		ГДЕ
	                              |			РегламентнаяОперация.Организация В(&СписокОрганизаций)
	                              |			И РегламентнаяОперация.Дата МЕЖДУ &ДатаНач И &ДатаКон
	                              |			И РегламентнаяОперация.ВидОперации = &АмортизацияНМА
	                              |			И (НЕ РегламентнаяОперация.ПометкаУдаления)) КАК РегламентнаяОперация
	                              |		ПО АмортизацияНМА.Организация = РегламентнаяОперация.Организация
	                              |			И АмортизацияНМА.ВидОперации = РегламентнаяОперация.ВидОперации
	                              |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                              |			ВЫБОР
	                              |				КОГДА (НЕ ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток = 0)
	                              |					ТОГДА ИСТИНА
	                              |				ИНАЧЕ ЛОЖЬ
	                              |			КОНЕЦ КАК Требуется,
	                              |			&АмортизацияНМА КАК ВидОперации,
	                              |			ХозрасчетныйОстаткиИОбороты.Организация КАК Организация
	                              |		ИЗ
	                              |			РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&ДатаНач, &ДатаКон, , , Счет В ИЕРАРХИИ (&Счет0405), , Организация В (&СписокОрганизаций)) КАК ХозрасчетныйОстаткиИОбороты) КАК ОстаткиИОбороты
	                              |		ПО АмортизацияНМА.Организация = ОстаткиИОбороты.Организация
	                              |			И АмортизацияНМА.ВидОперации = ОстаткиИОбороты.ВидОперации
	                              |
	                              |ОБЪЕДИНИТЬ ВСЕ
	                              |
	                              |ВЫБРАТЬ
	                              |	СпецОдежда.Организация,
	                              |	СпецОдежда.ВидОперации,
	                              |	""РегламентнаяОперация"",
	                              |	ЕСТЬNULL(ОстаткиИОбороты.Требуется, ЛОЖЬ),
	                              |	ЕСТЬNULL(РегламентнаяОперация.РучнаяКорректировка, ЛОЖЬ),
	                              |	ЕСТЬNULL(РегламентнаяОперация.Состояние, &НеВыполнено)
	                              |ИЗ
	                              |	(ВЫБРАТЬ
	                              |		ВидыРегламентныхОпераций.Ссылка КАК ВидОперации,
	                              |		Организации.Ссылка КАК Организация
	                              |	ИЗ
	                              |		Перечисление.ВидыРегламентныхОпераций КАК ВидыРегламентныхОпераций,
	                              |		Справочник.Организации КАК Организации
	                              |	ГДЕ
	                              |		ВидыРегламентныхОпераций.Ссылка = &СпецОдежда
	                              |		И Организации.Ссылка В(&СписокОрганизаций)) КАК СпецОдежда
	                              |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                              |			РегламентнаяОперация.РучнаяКорректировка КАК РучнаяКорректировка,
	                              |			РегламентнаяОперация.Состояние КАК Состояние,
	                              |			РегламентнаяОперация.ВидОперации КАК ВидОперации,
	                              |			РегламентнаяОперация.Организация КАК Организация
	                              |		ИЗ
	                              |			Документ.РегламентнаяОперация КАК РегламентнаяОперация
	                              |		ГДЕ
	                              |			РегламентнаяОперация.Организация В(&СписокОрганизаций)
	                              |			И РегламентнаяОперация.Дата МЕЖДУ &ДатаНач И &ДатаКон
	                              |			И РегламентнаяОперация.ВидОперации = &СпецОдежда
	                              |			И (НЕ РегламентнаяОперация.ПометкаУдаления)) КАК РегламентнаяОперация
	                              |		ПО СпецОдежда.Организация = РегламентнаяОперация.Организация
	                              |			И СпецОдежда.ВидОперации = РегламентнаяОперация.ВидОперации
	                              |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                              |			ВЫБОР
	                              |				КОГДА (НЕ ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток = 0)
	                              |					ТОГДА ИСТИНА
	                              |				ИНАЧЕ ЛОЖЬ
	                              |			КОНЕЦ КАК Требуется,
	                              |			&СпецОдежда КАК ВидОперации,
	                              |			ХозрасчетныйОстаткиИОбороты.Организация КАК Организация
	                              |		ИЗ
	                              |			РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&ДатаНач, &ДатаКон, , , Счет В ИЕРАРХИИ (&Счет10_1112), , Организация В (&СписокОрганизаций)) КАК ХозрасчетныйОстаткиИОбороты) КАК ОстаткиИОбороты
	                              |		ПО СпецОдежда.Организация = ОстаткиИОбороты.Организация
	                              |			И СпецОдежда.ВидОперации = ОстаткиИОбороты.ВидОперации
	                              |
	                              |ОБЪЕДИНИТЬ ВСЕ
	                              |
	                              |ВЫБРАТЬ
	                              |	ПереоценкаВалюты.Организация,
	                              |	ПереоценкаВалюты.ВидОперации,
	                              |	""РегламентнаяОперация"",
	                              |	ЕСТЬNULL(ОстаткиИОбороты.Требуется, ЛОЖЬ),
	                              |	ЕСТЬNULL(РегламентнаяОперация.РучнаяКорректировка, ЛОЖЬ),
	                              |	ЕСТЬNULL(РегламентнаяОперация.Состояние, &НеВыполнено)
	                              |ИЗ
	                              |	(ВЫБРАТЬ
	                              |		ВидыРегламентныхОпераций.Ссылка КАК ВидОперации,
	                              |		Организации.Ссылка КАК Организация
	                              |	ИЗ
	                              |		Перечисление.ВидыРегламентныхОпераций КАК ВидыРегламентныхОпераций,
	                              |		Справочник.Организации КАК Организации
	                              |	ГДЕ
	                              |		ВидыРегламентныхОпераций.Ссылка = &ПереоценкаВалюты
	                              |		И Организации.Ссылка В(&СписокОрганизаций)) КАК ПереоценкаВалюты
	                              |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                              |			РегламентнаяОперация.РучнаяКорректировка КАК РучнаяКорректировка,
	                              |			РегламентнаяОперация.Состояние КАК Состояние,
	                              |			РегламентнаяОперация.ВидОперации КАК ВидОперации,
	                              |			РегламентнаяОперация.Организация КАК Организация
	                              |		ИЗ
	                              |			Документ.РегламентнаяОперация КАК РегламентнаяОперация
	                              |		ГДЕ
	                              |			РегламентнаяОперация.Организация В(&СписокОрганизаций)
	                              |			И РегламентнаяОперация.Дата МЕЖДУ &ДатаНач И &ДатаКон
	                              |			И РегламентнаяОперация.ВидОперации = &ПереоценкаВалюты
	                              |			И (НЕ РегламентнаяОперация.ПометкаУдаления)) КАК РегламентнаяОперация
	                              |		ПО ПереоценкаВалюты.Организация = РегламентнаяОперация.Организация
	                              |			И ПереоценкаВалюты.ВидОперации = РегламентнаяОперация.ВидОперации
	                              |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                              |			ВЫБОР
	                              |				КОГДА (НЕ ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток = 0)
	                              |						ИЛИ (НЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотДт = 0)
	                              |						ИЛИ (НЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотКт = 0)
	                              |					ТОГДА ИСТИНА
	                              |				ИНАЧЕ ЛОЖЬ
	                              |			КОНЕЦ КАК Требуется,
	                              |			&ПереоценкаВалюты КАК ВидОперации,
	                              |			ХозрасчетныйОстаткиИОбороты.Организация КАК Организация
	                              |		ИЗ
	                              |			РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&ДатаНач, &ДатаКон, , , Счет.Валютный, , Организация В (&СписокОрганизаций)) КАК ХозрасчетныйОстаткиИОбороты) КАК ОстаткиИОбороты
	                              |		ПО ПереоценкаВалюты.Организация = ОстаткиИОбороты.Организация
	                              |			И ПереоценкаВалюты.ВидОперации = ОстаткиИОбороты.ВидОперации
	                              |
	                              |ОБЪЕДИНИТЬ ВСЕ
	                              |
	                              |ВЫБРАТЬ
	                              |	Розница.Организация,
	                              |	Розница.ВидОперации,
	                              |	""РегламентнаяОперация"",
	                              |	ЕСТЬNULL(ОстаткиИОбороты.Требуется, ЛОЖЬ),
	                              |	ЕСТЬNULL(РегламентнаяОперация.РучнаяКорректировка, ЛОЖЬ),
	                              |	ЕСТЬNULL(РегламентнаяОперация.Состояние, &НеВыполнено)
	                              |ИЗ
	                              |	(ВЫБРАТЬ
	                              |		ВидыРегламентныхОпераций.Ссылка КАК ВидОперации,
	                              |		Организации.Ссылка КАК Организация
	                              |	ИЗ
	                              |		Перечисление.ВидыРегламентныхОпераций КАК ВидыРегламентныхОпераций,
	                              |		Справочник.Организации КАК Организации
	                              |	ГДЕ
	                              |		ВидыРегламентныхОпераций.Ссылка = &Розница
	                              |		И Организации.Ссылка В(&СписокОрганизаций)) КАК Розница
	                              |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                              |			РегламентнаяОперация.РучнаяКорректировка КАК РучнаяКорректировка,
	                              |			РегламентнаяОперация.Состояние КАК Состояние,
	                              |			РегламентнаяОперация.ВидОперации КАК ВидОперации,
	                              |			РегламентнаяОперация.Организация КАК Организация
	                              |		ИЗ
	                              |			Документ.РегламентнаяОперация КАК РегламентнаяОперация
	                              |		ГДЕ
	                              |			РегламентнаяОперация.Организация В(&СписокОрганизаций)
	                              |			И РегламентнаяОперация.Дата МЕЖДУ &ДатаНач И &ДатаКон
	                              |			И РегламентнаяОперация.ВидОперации = &Розница
	                              |			И (НЕ РегламентнаяОперация.ПометкаУдаления)) КАК РегламентнаяОперация
	                              |		ПО Розница.Организация = РегламентнаяОперация.Организация
	                              |			И Розница.ВидОперации = РегламентнаяОперация.ВидОперации
	                              |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                              |			ВЫБОР
	                              |				КОГДА (НЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотКт = 0)
	                              |					ТОГДА ИСТИНА
	                              |				ИНАЧЕ ЛОЖЬ
	                              |			КОНЕЦ КАК Требуется,
	                              |			&Розница КАК ВидОперации,
	                              |			ХозрасчетныйОстаткиИОбороты.Организация КАК Организация
	                              |		ИЗ
	                              |			РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&ДатаНач, &ДатаКон, , , Счет В ИЕРАРХИИ (&Счет41_1112), , Организация В (&СписокОрганизаций)) КАК ХозрасчетныйОстаткиИОбороты) КАК ОстаткиИОбороты
	                              |		ПО Розница.Организация = ОстаткиИОбороты.Организация
	                              |			И Розница.ВидОперации = ОстаткиИОбороты.ВидОперации
	                              |
	                              |ОБЪЕДИНИТЬ ВСЕ
	                              |
	                              |ВЫБРАТЬ
	                              |	КорректировкаСтоимости.Организация,
	                              |	КорректировкаСтоимости.ВидОперации,
	                              |	""РегламентнаяОперация"",
	                              |	ИСТИНА,
	                              |	ЕСТЬNULL(РегламентнаяОперация.РучнаяКорректировка, ЛОЖЬ),
	                              |	ЕСТЬNULL(РегламентнаяОперация.Состояние, &НеВыполнено)
	                              |ИЗ
	                              |	(ВЫБРАТЬ
	                              |		ВидыРегламентныхОпераций.Ссылка КАК ВидОперации,
	                              |		Организации.Ссылка КАК Организация
	                              |	ИЗ
	                              |		Перечисление.ВидыРегламентныхОпераций КАК ВидыРегламентныхОпераций,
	                              |		Справочник.Организации КАК Организации
	                              |	ГДЕ
	                              |		ВидыРегламентныхОпераций.Ссылка = &КорректировкаСтоимости
	                              |		И Организации.Ссылка В(&СписокОрганизаций)) КАК КорректировкаСтоимости
	                              |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                              |			РегламентнаяОперация.РучнаяКорректировка КАК РучнаяКорректировка,
	                              |			РегламентнаяОперация.Состояние КАК Состояние,
	                              |			РегламентнаяОперация.ВидОперации КАК ВидОперации,
	                              |			РегламентнаяОперация.Организация КАК Организация
	                              |		ИЗ
	                              |			Документ.РегламентнаяОперация КАК РегламентнаяОперация
	                              |		ГДЕ
	                              |			РегламентнаяОперация.Организация В(&СписокОрганизаций)
	                              |			И РегламентнаяОперация.Дата МЕЖДУ &ДатаНач И &ДатаКон
	                              |			И РегламентнаяОперация.ВидОперации = &КорректировкаСтоимости
	                              |			И (НЕ РегламентнаяОперация.ПометкаУдаления)) КАК РегламентнаяОперация
	                              |		ПО КорректировкаСтоимости.Организация = РегламентнаяОперация.Организация
	                              |			И КорректировкаСтоимости.ВидОперации = РегламентнаяОперация.ВидОперации
	                              |
	                              |ОБЪЕДИНИТЬ ВСЕ
	                              |
	                              |ВЫБРАТЬ
	                              |	РБП.Организация,
	                              |	РБП.ВидОперации,
	                              |	""РегламентнаяОперация"",
	                              |	ЕСТЬNULL(ОстаткиИОбороты.Требуется, ЛОЖЬ),
	                              |	ЕСТЬNULL(РегламентнаяОперация.РучнаяКорректировка, ЛОЖЬ),
	                              |	ЕСТЬNULL(РегламентнаяОперация.Состояние, &НеВыполнено)
	                              |ИЗ
	                              |	(ВЫБРАТЬ
	                              |		ВидыРегламентныхОпераций.Ссылка КАК ВидОперации,
	                              |		Организации.Ссылка КАК Организация
	                              |	ИЗ
	                              |		Перечисление.ВидыРегламентныхОпераций КАК ВидыРегламентныхОпераций,
	                              |		Справочник.Организации КАК Организации
	                              |	ГДЕ
	                              |		ВидыРегламентныхОпераций.Ссылка = &РБП
	                              |		И Организации.Ссылка В(&СписокОрганизаций)) КАК РБП
	                              |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                              |			РегламентнаяОперация.РучнаяКорректировка КАК РучнаяКорректировка,
	                              |			РегламентнаяОперация.Состояние КАК Состояние,
	                              |			РегламентнаяОперация.ВидОперации КАК ВидОперации,
	                              |			РегламентнаяОперация.Организация КАК Организация
	                              |		ИЗ
	                              |			Документ.РегламентнаяОперация КАК РегламентнаяОперация
	                              |		ГДЕ
	                              |			РегламентнаяОперация.Организация В(&СписокОрганизаций)
	                              |			И РегламентнаяОперация.Дата МЕЖДУ &ДатаНач И &ДатаКон
	                              |			И РегламентнаяОперация.ВидОперации = &РБП
	                              |			И (НЕ РегламентнаяОперация.ПометкаУдаления)) КАК РегламентнаяОперация
	                              |		ПО РБП.Организация = РегламентнаяОперация.Организация
	                              |			И РБП.ВидОперации = РегламентнаяОперация.ВидОперации
	                              |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                              |			ВЫБОР
	                              |				КОГДА (НЕ ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт = 0)
	                              |						ИЛИ (НЕ ХозрасчетныйОстаткиИОбороты.СуммаНУКонечныйОстатокДт = 0)
	                              |						ИЛИ (НЕ ХозрасчетныйОстаткиИОбороты.СуммаПРКонечныйОстатокДт = 0)
	                              |						ИЛИ (НЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотКт = 0)
	                              |						ИЛИ (НЕ ХозрасчетныйОстаткиИОбороты.СуммаНУОборотКт = 0)
	                              |						ИЛИ (НЕ ХозрасчетныйОстаткиИОбороты.СуммаПРОборотКт = 0)
	                              |					ТОГДА ИСТИНА
	                              |				ИНАЧЕ ЛОЖЬ
	                              |			КОНЕЦ КАК Требуется,
	                              |			&РБП КАК ВидОперации,
	                              |			ХозрасчетныйОстаткиИОбороты.Организация КАК Организация
	                              |		ИЗ
	                              |			РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
	                              |					&ДатаНач,
	                              |					&ДатаКон,
	                              |					,
	                              |					,
	                              |					Счет В ИЕРАРХИИ (&Счет97),
	                              |					&СубконтоРБП,
	                              |					Организация В (&СписокОрганизаций)
	                              |						И (НЕ Субконто1.ВидРБП = &ВидРБП)) КАК ХозрасчетныйОстаткиИОбороты) КАК ОстаткиИОбороты
	                              |		ПО РБП.Организация = ОстаткиИОбороты.Организация
	                              |			И РБП.ВидОперации = ОстаткиИОбороты.ВидОперации
	                              |
	                              |ОБЪЕДИНИТЬ ВСЕ
	                              |
	                              |ВЫБРАТЬ
	                              |	НалогиСФОТ.Организация,
	                              |	НалогиСФОТ.ВидОперации,
	                              |	""РасчетЕСН"",
	                              |	ВЫБОР
	                              |		КОГДА &УчетЗарплатыИКадровВоВнешнейПрограмме
	                              |			ТОГДА ИСТИНА
	                              |		ИНАЧЕ ВЫБОР
	                              |				КОГДА ЕСТЬNULL(КОЛИЧЕСТВО(ЗапросПоСотрудникам.Сотрудник), 0) = 0
	                              |					ТОГДА ЛОЖЬ
	                              |				ИНАЧЕ ИСТИНА
	                              |			КОНЕЦ
	                              |	КОНЕЦ,
	                              |	ИСТИНА,
	                              |	ЕСТЬNULL(ДокументНалоговСФОТ.Состояние, &НеВыполнено)
	                              |ИЗ
	                              |	(ВЫБРАТЬ
	                              |		Организации.Ссылка КАК Организация,
	                              |		""Начисление налогов (взносов) с ФОТ"" КАК ВидОперации
	                              |	ИЗ
	                              |		Справочник.Организации КАК Организации
	                              |	ГДЕ
	                              |		Организации.Ссылка В(&СписокОрганизаций)) КАК НалогиСФОТ
	                              |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                              |			ИСТИНА КАК РучнаяКорректировка,
	                              |			""Начисление налогов (взносов) с ФОТ"" КАК ВидОперации,
	                              |			ВЫБОР
	                              |				КОГДА РасчетЕСН.Проведен
	                              |					ТОГДА &Выполнено
	                              |				ИНАЧЕ &НеВыполнено
	                              |			КОНЕЦ КАК Состояние,
	                              |			РасчетЕСН.Организация КАК Организация
	                              |		ИЗ
	                              |			Документ.РасчетЕСН КАК РасчетЕСН
	                              |		ГДЕ
	                              |			РасчетЕСН.Организация В(&СписокОрганизаций)
	                              |			И РасчетЕСН.Дата МЕЖДУ &ДатаНач И &ДатаКон
	                              |			И (НЕ РасчетЕСН.ПометкаУдаления)) КАК ДокументНалоговСФОТ
	                              |		ПО НалогиСФОТ.Организация = ДокументНалоговСФОТ.Организация
	                              |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                              |			РаботникиОрганизацийСрезПоследнихНаКонецПериода.Сотрудник КАК Сотрудник,
	                              |			РаботникиОрганизацийСрезПоследнихНаКонецПериода.Организация КАК Организация
	                              |		ИЗ
	                              |			РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаКон, Организация В (&СписокОрганизаций)) КАК РаботникиОрганизацийСрезПоследнихНаКонецПериода
	                              |		ГДЕ
	                              |			РаботникиОрганизацийСрезПоследнихНаКонецПериода.ЗанимаемыхСтавок <> 0
	                              |		
	                              |		ОБЪЕДИНИТЬ ВСЕ
	                              |		
	                              |		ВЫБРАТЬ
	                              |			РаботникиОрганизацийСрезПоследнихНаНачалоПериода.Сотрудник,
	                              |			РаботникиОрганизацийСрезПоследнихНаНачалоПериода.Организация
	                              |		ИЗ
	                              |			РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаНач, Организация В (&СписокОрганизаций)) КАК РаботникиОрганизацийСрезПоследнихНаНачалоПериода
	                              |		ГДЕ
	                              |			РаботникиОрганизацийСрезПоследнихНаНачалоПериода.ЗанимаемыхСтавок <> 0
	                              |		
	                              |		ОБЪЕДИНИТЬ ВСЕ
	                              |		
	                              |		ВЫБРАТЬ
	                              |			РаботникиОрганизаций.Сотрудник,
	                              |			РаботникиОрганизаций.Организация
	                              |		ИЗ
	                              |			РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	                              |		ГДЕ
	                              |			РаботникиОрганизаций.Период МЕЖДУ &ДатаНач И &ДатаКон
	                              |			И РаботникиОрганизаций.ЗанимаемыхСтавок <> 0) КАК ЗапросПоСотрудникам
	                              |		ПО НалогиСФОТ.Организация = ЗапросПоСотрудникам.Организация
	                              |
	                              |СГРУППИРОВАТЬ ПО
	                              |	НалогиСФОТ.Организация,
	                              |	НалогиСФОТ.ВидОперации,
	                              |	ЕСТЬNULL(ДокументНалоговСФОТ.Состояние, &НеВыполнено)";
								  
								  Если 	Константы.УчетЗарплатыИКадровВоВнешнейПрограмме.Получить() Тогда
									  Запрос.Текст = СтрЗаменить(Запрос.Текст, "РасчетЕСН", "ОтражениеЗарплатыВРеглУчете");
									  Запрос.Текст = СтрЗаменить(Запрос.Текст, "Начисление налогов (взносов) с ФОТ", "Начисление зарплаты, налогов(взносов) с ФОТ");
								  КонецЕсли;

		
		ТекстУСН2 =  "
		            |ОБЪЕДИНИТЬ ВСЕ
		            |
		            | ВЫБРАТЬ
		            |	ОСУСН.Организация,
		            |	ОСУСН.ВидОперации,
		            |	""РегламентнаяОперация"" КАК ВидДокумента,
		            |	ЕСТЬNULL(ОстаткиИОбороты.Требуется, ЛОЖЬ) КАК Требуется,
		            |	ЕСТЬNULL(РегламентнаяОперация.РучнаяКорректировка, ЛОЖЬ) КАК РучнаяКорректировка,
		            |	ЕСТЬNULL(РегламентнаяОперация.Состояние, &НеВыполнено) КАК Состояние
		            |ИЗ
		            |	(ВЫБРАТЬ
		            |		ВидыРегламентныхОпераций.Ссылка КАК ВидОперации,
		            |		Организации.Ссылка КАК Организация
		            |	ИЗ
		            |		Перечисление.ВидыРегламентныхОпераций КАК ВидыРегламентныхОпераций,
		            |		Справочник.Организации КАК Организации
		            |	ГДЕ
		            |		ВидыРегламентныхОпераций.Ссылка = &ОСУСН
		            |		И Организации.Ссылка В(&СписокОрганизаций)) КАК ОСУСН
		            |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		            |			РегламентнаяОперация.РучнаяКорректировка КАК РучнаяКорректировка,
		            |			РегламентнаяОперация.Состояние КАК Состояние,
		            |			РегламентнаяОперация.ВидОперации КАК ВидОперации,
		            |			РегламентнаяОперация.Организация КАК Организация
		            |		ИЗ
		            |			Документ.РегламентнаяОперация КАК РегламентнаяОперация
		            |		ГДЕ
		            |			РегламентнаяОперация.Организация В(&СписокОрганизаций)
		            |			И РегламентнаяОперация.Дата МЕЖДУ &ДатаНач И &ДатаКон
		            |			И РегламентнаяОперация.ВидОперации = &ОСУСН
		            |			И (НЕ РегламентнаяОперация.ПометкаУдаления)) КАК РегламентнаяОперация
		            |		ПО ОСУСН.Организация = РегламентнаяОперация.Организация
		            |			И ОСУСН.ВидОперации = РегламентнаяОперация.ВидОперации
		            |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		            |			ПервоначальныеСведенияОСНалоговыйУчетУСНСрезПоследних.Активность КАК Требуется,
		            |			&ОСУСН КАК ВидОперации,
		            |			ПервоначальныеСведенияОСНалоговыйУчетУСНСрезПоследних.Организация КАК Организация
		            |		ИЗ
		            |			РегистрСведений.ПервоначальныеСведенияОСНалоговыйУчетУСН.СрезПоследних(&ДатаКон, Организация В (&СписокОрганизаций)) КАК ПервоначальныеСведенияОСНалоговыйУчетУСНСрезПоследних) КАК ОстаткиИОбороты
		            |		ПО ОСУСН.Организация = ОстаткиИОбороты.Организация
		            |			И ОСУСН.ВидОперации = ОстаткиИОбороты.ВидОперации
		            |
		            |ОБЪЕДИНИТЬ ВСЕ
		            |
		            |ВЫБРАТЬ
		            |	НМАУСН.Организация,
		            |	НМАУСН.ВидОперации,
		            |	""РегламентнаяОперация"",
		            |	ЕСТЬNULL(ОстаткиИОбороты.Требуется, ЛОЖЬ),
		            |	ЕСТЬNULL(РегламентнаяОперация.РучнаяКорректировка, ЛОЖЬ),
		            |	ЕСТЬNULL(РегламентнаяОперация.Состояние, &НеВыполнено)
		            |ИЗ
		            |	(ВЫБРАТЬ
		            |		ВидыРегламентныхОпераций.Ссылка КАК ВидОперации,
		            |		Организации.Ссылка КАК Организация
		            |	ИЗ
		            |		Перечисление.ВидыРегламентныхОпераций КАК ВидыРегламентныхОпераций,
		            |		Справочник.Организации КАК Организации
		            |	ГДЕ
		            |		ВидыРегламентныхОпераций.Ссылка = &НМАУСН
		            |		И Организации.Ссылка В(&СписокОрганизаций)) КАК НМАУСН
		            |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		            |			РегламентнаяОперация.РучнаяКорректировка КАК РучнаяКорректировка,
		            |			РегламентнаяОперация.Состояние КАК Состояние,
		            |			РегламентнаяОперация.ВидОперации КАК ВидОперации,
		            |			РегламентнаяОперация.Организация КАК Организация
		            |		ИЗ
		            |			Документ.РегламентнаяОперация КАК РегламентнаяОперация
		            |		ГДЕ
		            |			РегламентнаяОперация.Организация В(&СписокОрганизаций)
		            |			И РегламентнаяОперация.Дата МЕЖДУ &ДатаНач И &ДатаКон
		            |			И РегламентнаяОперация.ВидОперации = &НМАУСН
		            |			И (НЕ РегламентнаяОперация.ПометкаУдаления)) КАК РегламентнаяОперация
		            |		ПО НМАУСН.Организация = РегламентнаяОперация.Организация
		            |			И НМАУСН.ВидОперации = РегламентнаяОперация.ВидОперации
		            |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		            |			ПервоначальныеСведенияНМАНалоговыйУчетУСНСрезПоследних.Активность КАК Требуется,
		            |			&НМАУСН КАК ВидОперации,
		            |			ПервоначальныеСведенияНМАНалоговыйУчетУСНСрезПоследних.Организация КАК Организация
		            |		ИЗ
		            |			РегистрСведений.ПервоначальныеСведенияНМАНалоговыйУчетУСН.СрезПоследних(&ДатаКон, Организация В (&СписокОрганизаций)) КАК ПервоначальныеСведенияНМАНалоговыйУчетУСНСрезПоследних) КАК ОстаткиИОбороты
		            |		ПО НМАУСН.Организация = ОстаткиИОбороты.Организация
		            |			И НМАУСН.ВидОперации = ОстаткиИОбороты.ВидОперации
		            |
		            |
		            |ОБЪЕДИНИТЬ ВСЕ
		            |
		            |ВЫБРАТЬ
		            |	ДопРасходыУСН.Организация,
		            |	ДопРасходыУСН.ВидОперации,
		            |	""РегламентнаяОперация"",
		            |	ЕСТЬNULL(ОстаткиИОбороты.Требуется, ЛОЖЬ),
		            |	ЕСТЬNULL(РегламентнаяОперация.РучнаяКорректировка, ЛОЖЬ),
		            |	ЕСТЬNULL(РегламентнаяОперация.Состояние, &НеВыполнено)
		            |ИЗ
		            |	(ВЫБРАТЬ
		            |		ВидыРегламентныхОпераций.Ссылка КАК ВидОперации,
		            |		Организации.Ссылка КАК Организация
		            |	ИЗ
		            |		Перечисление.ВидыРегламентныхОпераций КАК ВидыРегламентныхОпераций,
		            |		Справочник.Организации КАК Организации
		            |	ГДЕ
		            |		ВидыРегламентныхОпераций.Ссылка = &ДопРасходыУСН
		            |		И Организации.Ссылка В(&СписокОрганизаций)) КАК ДопРасходыУСН
		            |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		            |			РегламентнаяОперация.РучнаяКорректировка КАК РучнаяКорректировка,
		            |			РегламентнаяОперация.Состояние КАК Состояние,
		            |			РегламентнаяОперация.ВидОперации КАК ВидОперации,
		            |			РегламентнаяОперация.Организация КАК Организация
		            |		ИЗ
		            |			Документ.РегламентнаяОперация КАК РегламентнаяОперация
		            |		ГДЕ
		            |			РегламентнаяОперация.Организация В(&СписокОрганизаций)
		            |			И РегламентнаяОперация.Дата МЕЖДУ &ДатаНач И &ДатаКон
		            |			И РегламентнаяОперация.ВидОперации = &ДопРасходыУСН
		            |			И (НЕ РегламентнаяОперация.ПометкаУдаления)) КАК РегламентнаяОперация
		            |		ПО ДопРасходыУСН.Организация = РегламентнаяОперация.Организация
		            |			И ДопРасходыУСН.ВидОперации = РегламентнаяОперация.ВидОперации
		            |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		            |			ВЫБОР
		            |				КОГДА (НЕ РасходыПриУСНОстатки.СуммаОстаток = 0)
		            |					ТОГДА ИСТИНА
		            |				ИНАЧЕ ЛОЖЬ
		            |			КОНЕЦ КАК Требуется,
		            |			&ДопРасходыУСН КАК ВидОперации,
		            |			РасходыПриУСНОстатки.Организация КАК Организация
		            |		ИЗ
		            |			РегистрНакопления.РасходыПриУСН.Остатки(&ДатаКон, Организация В (&СписокОрганизаций) И ВидРасхода = &ВидРасхода) КАК РасходыПриУСНОстатки) КАК ОстаткиИОбороты
		            |		ПО ДопРасходыУСН.Организация = ОстаткиИОбороты.Организация
		            |			И ДопРасходыУСН.ВидОперации = ОстаткиИОбороты.ВидОперации";
					
					
					ТЕКСТУСН = "ВЫБРАТЬ
					           |	НЗПУСН.Организация,
					           |	НЗПУСН.ВидОперации,
					           |	""РегламентнаяОперация"" КАК Поле1,
					           |	ВЫБОР
					           |		КОГДА УчетнаяПолитикаОрганизацийСрезПоследних.ПорядокПризнанияМатериальныхРасходов = &ПорядокПризнанияМатериальныхРасходов
					           |			ТОГДА ИСТИНА
					           |		ИНАЧЕ ЛОЖЬ
					           |	КОНЕЦ КАК Поле2,
					           |	ЕСТЬNULL(РегламентнаяОперация.РучнаяКорректировка, ЛОЖЬ) КАК Поле3,
					           |	ЕСТЬNULL(РегламентнаяОперация.Состояние, &НеВыполнено) КАК Поле4
					           |ИЗ
					           |	(ВЫБРАТЬ
					           |		ВидыРегламентныхОпераций.Ссылка КАК ВидОперации,
					           |		Организации.Ссылка КАК Организация
					           |	ИЗ
					           |		Перечисление.ВидыРегламентныхОпераций КАК ВидыРегламентныхОпераций,
					           |		Справочник.Организации КАК Организации
					           |	ГДЕ
					           |		ВидыРегламентныхОпераций.Ссылка = &НЗПУСН
					           |		И Организации.Ссылка В(&СписокОрганизаций)) КАК НЗПУСН
					           |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
					           |			РегламентнаяОперация.РучнаяКорректировка КАК РучнаяКорректировка,
					           |			РегламентнаяОперация.Состояние КАК Состояние,
					           |			РегламентнаяОперация.ВидОперации КАК ВидОперации,
					           |			РегламентнаяОперация.Организация КАК Организация
					           |		ИЗ
					           |			Документ.РегламентнаяОперация КАК РегламентнаяОперация
					           |		ГДЕ
					           |			РегламентнаяОперация.Организация В(&СписокОрганизаций)
					           |			И РегламентнаяОперация.Дата МЕЖДУ &ДатаНач И &ДатаКон
					           |			И РегламентнаяОперация.ВидОперации = &НЗПУСН
					           |			И (НЕ РегламентнаяОперация.ПометкаУдаления)) КАК РегламентнаяОперация
					           |		ПО НЗПУСН.Организация = РегламентнаяОперация.Организация
					           |			И НЗПУСН.ВидОперации = РегламентнаяОперация.ВидОперации,
					           |	РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(&ДатаКон, Организация = &Организация) КАК УчетнаяПолитикаОрганизацийСрезПоследних";
					
		
		
					ТекстНДС = "ВЫБРАТЬ
					           |	НачислениеНДС.Организация КАК Организация,
					           |	НачислениеНДС.ВидОперации КАК ВидОперации,
					           |	""НДС"" КАК ВидДокумента,
					           |	&ВостребованностьНДС КАК Требуется,
					           |	Истина КАК Поле1,
					           |	ВЫБОР
					           |		КОГДА ЕСТЬNULL(Покупок.Книга, 0) = 0
					           |				Или ЕСТЬNULL(Продаж.Книга, 0) = 0
					           |			ТОГДА &НеВыполнено
					           |		ИНАЧЕ &Выполнено
					           |	КОНЕЦ КАК Состояние
					           |ИЗ
					           |	(ВЫБРАТЬ
					           |		""Формирование книги покупок и продаж"" КАК ВидОперации,
					           |		Организации.Ссылка КАК Организация
					           |	ИЗ
					           |		Справочник.Организации КАК Организации
					           |	ГДЕ
					           |		Организации.Ссылка В(&СписокОрганизаций)) КАК НачислениеНДС
					           |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
					           |			ФормированиеЗаписейКнигиПродаж.Ссылка КАК Книга,
					           |			Организации.Ссылка КАК Ссылка
					           |		ИЗ
					           |			Документ.ФормированиеЗаписейКнигиПродаж КАК ФормированиеЗаписейКнигиПродаж
					           |				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
					           |				ПО ФормированиеЗаписейКнигиПродаж.Организация = Организации.Ссылка
					           |		ГДЕ
					           |			(НЕ ФормированиеЗаписейКнигиПродаж.ПометкаУдаления)
					           |			И ФормированиеЗаписейКнигиПродаж.Организация В(&СписокОрганизаций)
					           |			И ФормированиеЗаписейКнигиПродаж.Дата МЕЖДУ &ДатаНач И &ДатаКон
					           |			И ФормированиеЗаписейКнигиПродаж.Проведен
					           |			И Организации.Ссылка В(&СписокОрганизаций)) КАК Продаж
					           |		ПО НачислениеНДС.Организация.Ссылка = Продаж.Ссылка
					           |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
					           |			ФормированиеЗаписейКнигиПокупок.Ссылка КАК Книга,
					           |			Организации.Ссылка КАК Ссылка
					           |		ИЗ
					           |			Документ.ФормированиеЗаписейКнигиПокупок КАК ФормированиеЗаписейКнигиПокупок
					           |				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
					           |				ПО ФормированиеЗаписейКнигиПокупок.Организация = Организации.Ссылка
					           |		ГДЕ
					           |			(НЕ ФормированиеЗаписейКнигиПокупок.ПометкаУдаления)
					           |			И ФормированиеЗаписейКнигиПокупок.Организация В(&СписокОрганизаций)
					           |			И ФормированиеЗаписейКнигиПокупок.Дата МЕЖДУ &ДатаНач И &ДатаКон
					           |			И ФормированиеЗаписейКнигиПокупок.Проведен
					           |			И Организации.Ссылка В(&СписокОрганизаций)) КАК Покупок
					           |		ПО НачислениеНДС.Организация.Ссылка = Покупок.Ссылка
					           |ГДЕ
					           |	НачислениеНДС.Организация В(&СписокОрганизаций)";
		
		Если УчетнаяПолитика.СистемаНалогообложения = Перечисления.СистемыНалогообложения.Общая Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"И РБП.ВидОперации = ОстаткиИОбороты.ВидОперации","И РБП.ВидОперации = ОстаткиИОбороты.ВидОперации
			|ОБЪЕДИНИТЬ ВСЕ " + ТекстНДС); 
		ИначеЕсли УчетнаяПолитика.ОбъектНалогообложенияУСН = Перечисления.ОбъектыНалогообложенияПоУСН.ДоходыМинусРасходы Тогда
			
			Если КонецКвартала Тогда
			ТекстУСН = ТекстУСН + ТекстУСН2;
			КонецЕсли;

			Запрос.Текст = СтрЗаменить(Запрос.Текст,"И РБП.ВидОперации = ОстаткиИОбороты.ВидОперации", "И РБП.ВидОперации = ОстаткиИОбороты.ВидОперации
			|ОБЪЕДИНИТЬ ВСЕ " + ТекстУСН);
		
		КонецЕсли;
	КонецЕсли;
	
	Если Группа = 2 Или Группа = "Все"  Тогда
		
		
		Запрос.УстановитьПараметр("Доли", Перечисления.ВидыРегламентныхОпераций.РасчетДолейСписанияКосвенныхРасходов);
		
		Если Группа = "Все"  Тогда
			Запрос.Текст = Запрос.Текст + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|";
		КонецЕсли;
		
		Запрос.Текст = Запрос.Текст +  "ВЫБРАТЬ
		                               |	ОрганизацииИВидыОпераций.Организация,
		                               |	ОрганизацииИВидыОпераций.ВидОперации,
		                               |	""РегламентнаяОперация"" КАК ВидДокумента,
		                               |	ИСТИНА КАК Требуется,
		                               |	ЕСТЬNULL(РегламентнаяОперация.РучнаяКорректировка, ЛОЖЬ) КАК РучнаяКорректировка,
		                               |	ЕСТЬNULL(РегламентнаяОперация.Состояние, &НеВыполнено) КАК Состояние
		                               |ИЗ
		                               |	(ВЫБРАТЬ
		                               |		ВидыРегламентныхОпераций.Ссылка КАК ВидОперации,
		                               |		Организации.Ссылка КАК Организация
		                               |	ИЗ
		                               |		Перечисление.ВидыРегламентныхОпераций КАК ВидыРегламентныхОпераций,
		                               |		Справочник.Организации КАК Организации
		                               |	ГДЕ
		                               |		ВидыРегламентныхОпераций.Ссылка = &Доли
		                               |		И Организации.Ссылка = &Организация) КАК ОрганизацииИВидыОпераций
		                               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		                               |			РегламентнаяОперация.РучнаяКорректировка КАК РучнаяКорректировка,
		                               |			РегламентнаяОперация.Состояние КАК Состояние,
		                               |			РегламентнаяОперация.ВидОперации КАК ВидОперации,
		                               |			РегламентнаяОперация.Организация КАК Организация
		                               |		ИЗ
		                               |			Документ.РегламентнаяОперация КАК РегламентнаяОперация
		                               |		ГДЕ
		                               |			РегламентнаяОперация.Организация = &Организация
		                               |			И РегламентнаяОперация.Дата МЕЖДУ &ДатаНач И &ДатаКон
		                               |			И РегламентнаяОперация.ВидОперации = &Доли
		                               |			И (НЕ РегламентнаяОперация.ПометкаУдаления)) КАК РегламентнаяОперация
		                               |		ПО ОрганизацииИВидыОпераций.Организация = РегламентнаяОперация.Организация
		                               |			И ОрганизацииИВидыОпераций.ВидОперации = РегламентнаяОперация.ВидОперации";
		
	КонецЕсли;
	
	Если Группа = 3 Или Группа = "Все" Тогда
		
		Массив = Новый Массив;
		Массив.Добавить(ПланыСчетов.Хозрасчетный.ОсновноеПроизводство_);
		Массив.Добавить(ПланыСчетов.Хозрасчетный.ВспомогательныеПроизводства);
		Массив.Добавить(ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы);
		Массив.Добавить(ПланыСчетов.Хозрасчетный.ОбщехозяйственныеРасходы);
		Запрос.УстановитьПараметр("Счет20", Массив);
		
		Массив = Новый Массив;
		Массив.Добавить(ПланыСчетов.Хозрасчетный.РасходыНаПродажу);
		Запрос.УстановитьПараметр("Счет44", Массив);
		
		Запрос.УстановитьПараметр("Закрытие20", Перечисления.ВидыРегламентныхОпераций.ЗакрытиеСчетов20_23_25_26);
		Запрос.УстановитьПараметр("Закрытие44", Перечисления.ВидыРегламентныхОпераций.ЗакрытиеСчета44);
		Запрос.УстановитьПараметр("ЕстьПроизводство", УчетнаяПолитика.ОрганизацияВедетПроизводственнуюДеятельность);
		Запрос.УстановитьПараметр("РаспределениеУСН", Перечисления.ВидыРегламентныхОпераций.РаспределениеРасходовПоВидамДеятельностиДляУСН);
		// {УчетДоходовИРасходовИП
		Запрос.УстановитьПараметр("РаспределениеИП", Перечисления.ВидыРегламентныхОпераций.РаспределениеРасходовПоВидамДеятельностиДляИП);
		// }УчетДоходовИРасходовИП
		Запрос.УстановитьПараметр("СтатусыОплатыРасходовУСН", Перечисления.СтатусыРасходовУСН.НеРаспределено);
		
		
		Если Группа = "Все"  Тогда
			Запрос.Текст = Запрос.Текст + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|";
		КонецЕсли;
		
		Запрос.Текст = Запрос.Текст + 
		"ВЫБРАТЬ
		|	ОрганизацииИВидыОпераций.Организация,
		|	ОрганизацииИВидыОпераций.ВидОперации КАК ВидОперации,
		|	""РегламентнаяОперация"" КАК ВидДокумента,
		|	&ЕстьПроизводство КАК Требуется,
		|	ЕСТЬNULL(РегламентнаяОперация.РучнаяКорректировка, ЛОЖЬ) КАК РучнаяКорректировка,
		|	ЕСТЬNULL(РегламентнаяОперация.Состояние, &НеВыполнено) КАК Состояние
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВидыРегламентныхОпераций.Ссылка КАК ВидОперации,
		|		Организации.Ссылка КАК Организация
		|	ИЗ
		|		Перечисление.ВидыРегламентныхОпераций КАК ВидыРегламентныхОпераций,
		|		Справочник.Организации КАК Организации
		|	ГДЕ
		|		ВидыРегламентныхОпераций.Ссылка = &Закрытие20
		|		И Организации.Ссылка В(&СписокОрганизаций)) КАК ОрганизацииИВидыОпераций
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			РегламентнаяОперация.РучнаяКорректировка КАК РучнаяКорректировка,
		|			РегламентнаяОперация.Состояние КАК Состояние,
		|			РегламентнаяОперация.ВидОперации КАК ВидОперации,
		|			РегламентнаяОперация.Организация КАК Организация
		|		ИЗ
		|			Документ.РегламентнаяОперация КАК РегламентнаяОперация
		|		ГДЕ
		|			РегламентнаяОперация.Организация В(&СписокОрганизаций)
		|			И РегламентнаяОперация.Дата МЕЖДУ &ДатаНач И &ДатаКон
		|			И РегламентнаяОперация.ВидОперации = &Закрытие20
		|			И (НЕ РегламентнаяОперация.ПометкаУдаления)) КАК РегламентнаяОперация
		|		ПО ОрганизацииИВидыОпераций.Организация = РегламентнаяОперация.Организация
		|			И ОрганизацииИВидыОпераций.ВидОперации = РегламентнаяОперация.ВидОперации
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОрганизацииИВидыОпераций.Организация,
		|	ОрганизацииИВидыОпераций.ВидОперации,
		|	""РегламентнаяОперация"",
		|	ИСТИНА,
		|	ЕСТЬNULL(РегламентнаяОперация.РучнаяКорректировка, ЛОЖЬ),
		|	ЕСТЬNULL(РегламентнаяОперация.Состояние, &НеВыполнено)
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВидыРегламентныхОпераций.Ссылка КАК ВидОперации,
		|		Организации.Ссылка КАК Организация
		|	ИЗ
		|		Перечисление.ВидыРегламентныхОпераций КАК ВидыРегламентныхОпераций,
		|		Справочник.Организации КАК Организации
		|	ГДЕ
		|		ВидыРегламентныхОпераций.Ссылка = &Закрытие44
		|		И Организации.Ссылка В(&СписокОрганизаций)) КАК ОрганизацииИВидыОпераций
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			РегламентнаяОперация.РучнаяКорректировка КАК РучнаяКорректировка,
		|			РегламентнаяОперация.Состояние КАК Состояние,
		|			РегламентнаяОперация.ВидОперации КАК ВидОперации,
		|			РегламентнаяОперация.Организация КАК Организация
		|		ИЗ
		|			Документ.РегламентнаяОперация КАК РегламентнаяОперация
		|		ГДЕ
		|			РегламентнаяОперация.Организация В(&СписокОрганизаций)
		|			И РегламентнаяОперация.Дата МЕЖДУ &ДатаНач И &ДатаКон
		|			И (НЕ РегламентнаяОперация.ПометкаУдаления)) КАК РегламентнаяОперация
		|		ПО ОрганизацииИВидыОпераций.Организация = РегламентнаяОперация.Организация
		|			И ОрганизацииИВидыОпераций.ВидОперации = РегламентнаяОперация.ВидОперации
		|			И РегламентнаяОперация.ВидОперации = &Закрытие44";

		
		
		ТекстУСН = "ВЫБРАТЬ
		           |	РаспределениеУСН.Организация,
		           |	РаспределениеУСН.ВидОперации,
		           |	""РегламентнаяОперация"" КАК ВидДокумента,
		           |	ЕСТЬNULL(ОстаткиИОбороты.Требуется, ЛОЖЬ) КАК Требуется,
		           |	ЕСТЬNULL(РегламентнаяОперация.РучнаяКорректировка, ЛОЖЬ) КАК РучнаяКорректировка,
		           |	ЕСТЬNULL(РегламентнаяОперация.Состояние, &НеВыполнено) КАК Состояние
		           |ИЗ
		           |	(ВЫБРАТЬ
		           |		ВидыРегламентныхОпераций.Ссылка КАК ВидОперации,
		           |		Организации.Ссылка КАК Организация
		           |	ИЗ
		           |		Перечисление.ВидыРегламентныхОпераций КАК ВидыРегламентныхОпераций,
		           |		Справочник.Организации КАК Организации
		           |	ГДЕ
		           |		ВидыРегламентныхОпераций.Ссылка = &РаспределениеУСН
		           |		И Организации.Ссылка В(&СписокОрганизаций)) КАК РаспределениеУСН
		           |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		           |			РегламентнаяОперация.РучнаяКорректировка КАК РучнаяКорректировка,
		           |			РегламентнаяОперация.Состояние КАК Состояние,
		           |			РегламентнаяОперация.ВидОперации КАК ВидОперации,
		           |			РегламентнаяОперация.Организация КАК Организация
		           |		ИЗ
		           |			Документ.РегламентнаяОперация КАК РегламентнаяОперация
		           |		ГДЕ
		           |			РегламентнаяОперация.Организация В(&СписокОрганизаций)
		           |			И РегламентнаяОперация.Дата МЕЖДУ &ДатаНач И &ДатаКон
		           |			И РегламентнаяОперация.ВидОперации = &РаспределениеУСН
		           |			И (НЕ РегламентнаяОперация.ПометкаУдаления)) КАК РегламентнаяОперация
		           |		ПО РаспределениеУСН.Организация = РегламентнаяОперация.Организация
		           |			И РаспределениеУСН.ВидОперации = РегламентнаяОперация.ВидОперации
		           |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		           |			ВЫБОР
		           |				КОГДА (НЕ РасходыПриУСНОстатки.СуммаОстаток = 0)
		           |					ТОГДА ИСТИНА
		           |				ИНАЧЕ ЛОЖЬ
		           |			КОНЕЦ КАК Требуется,
		           |			&РаспределениеУСН КАК ВидОперации,
		           |			РасходыПриУСНОстатки.Организация КАК Организация
		           |		ИЗ
		           |			РегистрНакопления.РасходыПриУСН.Остатки(
		           |					&ДатаКон,
		           |					Организация В (&СписокОрганизаций)
		           |						И СтатусыОплатыРасходовУСН = &СтатусыОплатыРасходовУСН) КАК РасходыПриУСНОстатки) КАК ОстаткиИОбороты
		           |		ПО РаспределениеУСН.Организация = ОстаткиИОбороты.Организация
		           |			И РаспределениеУСН.ВидОперации = ОстаткиИОбороты.ВидОперации";
		
		
		// {УчетДоходовИРасходовИП
		ТекстИП =  "ВЫБРАТЬ
		           |	РаспределениеИП.Организация,
		           |	РаспределениеИП.ВидОперации,
		           |	""РегламентнаяОперация"",
		           |	ИСТИНА КАК Поле4,
		           |	ЕСТЬNULL(РегламентнаяОперация.РучнаяКорректировка, ЛОЖЬ) КАК Поле2,
		           |	ЕСТЬNULL(РегламентнаяОперация.Состояние, &НеВыполнено) КАК Поле3
		           |ИЗ
		           |	(ВЫБРАТЬ
		           |		ВидыРегламентныхОпераций.Ссылка КАК ВидОперации,
		           |		Организации.Ссылка КАК Организация
		           |	ИЗ
		           |		Перечисление.ВидыРегламентныхОпераций КАК ВидыРегламентныхОпераций,
		           |		Справочник.Организации КАК Организации
		           |	ГДЕ
		           |		ВидыРегламентныхОпераций.Ссылка = &РаспределениеИП
		           |		И Организации.Ссылка В(&СписокОрганизаций)) КАК РаспределениеИП
		           |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		           |			РегламентнаяОперация.РучнаяКорректировка КАК РучнаяКорректировка,
		           |			РегламентнаяОперация.Состояние КАК Состояние,
		           |			РегламентнаяОперация.ВидОперации КАК ВидОперации,
		           |			РегламентнаяОперация.Организация КАК Организация
		           |		ИЗ
		           |			Документ.РегламентнаяОперация КАК РегламентнаяОперация
		           |		ГДЕ
		           |			РегламентнаяОперация.Организация В(&СписокОрганизаций)
		           |			И РегламентнаяОперация.Дата МЕЖДУ &ДатаНач И &ДатаКон
		           |			И РегламентнаяОперация.ВидОперации = &РаспределениеИП
		           |			И (НЕ РегламентнаяОперация.ПометкаУдаления)) КАК РегламентнаяОперация
		           |		ПО РаспределениеИП.Организация = РегламентнаяОперация.Организация
		           |			И РаспределениеИП.ВидОперации = РегламентнаяОперация.ВидОперации";
		// }УчетДоходовИРасходовИП
		
		Если УчетнаяПолитика.СистемаНалогообложения = Перечисления.СистемыНалогообложения.Упрощенная И КонецКвартала И УчетнаяПолитика.ОбъектНалогообложенияУСН = Перечисления.ОбъектыНалогообложенияПоУСН.ДоходыМинусРасходы Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"И РегламентнаяОперация.ВидОперации = &Закрытие44","И РегламентнаяОперация.ВидОперации = &Закрытие44
			|ОБЪЕДИНИТЬ ВСЕ 
			|" + ТекстУСН); 
		КонецЕсли;
		// {УчетДоходовИРасходовИП
		Если УчетнаяПолитика.СистемаНалогообложения = Перечисления.СистемыНалогообложения.Общая И Организация.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"И РегламентнаяОперация.ВидОперации = &Закрытие44","И РегламентнаяОперация.ВидОперации = &Закрытие44
			|ОБЪЕДИНИТЬ ВСЕ 
			|" + ТекстИП); 
		КонецЕсли;
		// }УчетДоходовИРасходовИП
		
	КонецЕсли;
	
	Если Группа = 4 Или Группа = "Все" Тогда
		
		Массив = Новый Массив;
		Массив.Добавить(ПланыСчетов.Хозрасчетный.Продажи);
		Массив.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеДоходыИРасходы);
		Запрос.УстановитьПараметр("Закрытие90", Перечисления.ВидыРегламентныхОпераций.ЗакрытиеСчетов90_91);
		
		Если Группа = "Все"  Тогда
			Запрос.Текст = Запрос.Текст + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|";
		КонецЕсли;
		
		Запрос.Текст =  Запрос.Текст + "ВЫБРАТЬ
		                               |	Закрытие90.Организация КАК Организация,
		                               |	Закрытие90.ВидОперации КАК ВидОперации,
		                               |	""РегламентнаяОперация"" КАК ВидДокумента,
		                               |	ИСТИНА КАК Требуется,
		                               |	ЕСТЬNULL(РегламентнаяОперация.РучнаяКорректировка, ЛОЖЬ) КАК РучнаяКорректировка,
		                               |	ЕСТЬNULL(РегламентнаяОперация.Состояние, &НеВыполнено) КАК Состояние
		                               |ИЗ
		                               |	(ВЫБРАТЬ
		                               |		ВидыРегламентныхОпераций.Ссылка КАК ВидОперации,
		                               |		Организации.Ссылка КАК Организация
		                               |	ИЗ
		                               |		Перечисление.ВидыРегламентныхОпераций КАК ВидыРегламентныхОпераций,
		                               |		Справочник.Организации КАК Организации
		                               |	ГДЕ
		                               |		ВидыРегламентныхОпераций.Ссылка = &Закрытие90
		                               |		И Организации.Ссылка = &Организация) КАК Закрытие90
		                               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		                               |			РегламентнаяОперация.РучнаяКорректировка КАК РучнаяКорректировка,
		                               |			РегламентнаяОперация.Состояние КАК Состояние,
		                               |			РегламентнаяОперация.ВидОперации КАК ВидОперации,
		                               |			РегламентнаяОперация.Организация КАК Организация
		                               |		ИЗ
		                               |			Документ.РегламентнаяОперация КАК РегламентнаяОперация
		                               |		ГДЕ
		                               |			РегламентнаяОперация.Организация = &Организация
		                               |			И РегламентнаяОперация.Дата МЕЖДУ &ДатаНач И &ДатаКон
		                               |			И РегламентнаяОперация.ВидОперации = &Закрытие90
		                               |			И (НЕ РегламентнаяОперация.ПометкаУдаления)) КАК РегламентнаяОперация
		                               |		ПО Закрытие90.Организация = РегламентнаяОперация.Организация
		                               |			И Закрытие90.ВидОперации = РегламентнаяОперация.ВидОперации";
		
		
	КонецЕсли;
	
	Если Группа = 4 Или Группа = "Все" Тогда
		
		Если УчетнаяПолитика.СистемаНалогообложения = Перечисления.СистемыНалогообложения.Общая И Организация.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо Тогда
			
			Запрос.УстановитьПараметр("ЗакрытиеУбытков", Перечисления.ВидыРегламентныхОпераций.СписаниеУбытковПрошлыхЛет);
			Запрос.УстановитьПараметр("Налог", Перечисления.ВидыРегламентныхОпераций.РасчетНалогаНаПрибыль);
			
			Запрос.Текст = Запрос.Текст +  "
			|ОБЪЕДИНИТЬ ВСЕ
			|";
			
			Запрос.Текст = Запрос.Текст +  "ВЫБРАТЬ
			                               |	ЗакрытиеУбытков.Организация КАК Организация,
			                               |	ЗакрытиеУбытков.ВидОперации КАК ВидОперации,
			                               |	""РегламентнаяОперация"" КАК ВидДокумента,
			                               |	ЕСТЬNULL(ОстаткиИОбороты.Требуется, ЛОЖЬ) КАК Требуется,
			                               |	ЕСТЬNULL(РегламентнаяОперация.РучнаяКорректировка, ЛОЖЬ) КАК РучнаяКорректировка,
			                               |	ЕСТЬNULL(РегламентнаяОперация.Состояние, &НеВыполнено) КАК Состояние
			                               |ИЗ
			                               |	(ВЫБРАТЬ
			                               |		ВидыРегламентныхОпераций.Ссылка КАК ВидОперации,
			                               |		Организации.Ссылка КАК Организация
			                               |	ИЗ
			                               |		Перечисление.ВидыРегламентныхОпераций КАК ВидыРегламентныхОпераций,
			                               |		Справочник.Организации КАК Организации
			                               |	ГДЕ
			                               |		ВидыРегламентныхОпераций.Ссылка = &ЗакрытиеУбытков
			                               |		И Организации.Ссылка = &Организация) КАК ЗакрытиеУбытков
			                               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			                               |			РегламентнаяОперация.РучнаяКорректировка КАК РучнаяКорректировка,
			                               |			РегламентнаяОперация.Состояние КАК Состояние,
			                               |			РегламентнаяОперация.ВидОперации КАК ВидОперации,
			                               |			РегламентнаяОперация.Организация КАК Организация
			                               |		ИЗ
			                               |			Документ.РегламентнаяОперация КАК РегламентнаяОперация
			                               |		ГДЕ
			                               |			РегламентнаяОперация.Организация = &Организация
			                               |			И РегламентнаяОперация.Дата МЕЖДУ &ДатаНач И &ДатаКон
			                               |			И РегламентнаяОперация.ВидОперации = &ЗакрытиеУбытков
			                               |			И (НЕ РегламентнаяОперация.ПометкаУдаления)) КАК РегламентнаяОперация
			                               |		ПО ЗакрытиеУбытков.Организация = РегламентнаяОперация.Организация
			                               |			И ЗакрытиеУбытков.ВидОперации = РегламентнаяОперация.ВидОперации
			                               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			                               |			ВЫБОР
			                               |				КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНУНачальныйОстатокДт > 0
			                               |					ТОГДА ИСТИНА
			                               |				ИНАЧЕ ЛОЖЬ
			                               |			КОНЕЦ КАК Требуется,
			                               |			&ЗакрытиеУбытков КАК ВидОперации,
			                               |			ХозрасчетныйОстаткиИОбороты.Организация КАК Организация
			                               |		ИЗ
			                               |			РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
			                               |					&ДатаНач,
			                               |					&ДатаКон,
			                               |					,
			                               |					,
			                               |					Счет В ИЕРАРХИИ (&Счет97),
			                               |					&СубконтоРБП,
			                               |					Организация = &Организация
			                               |						И Субконто1.ВидРБП = &ВидРБП) КАК ХозрасчетныйОстаткиИОбороты) КАК ОстаткиИОбороты
			                               |		ПО ЗакрытиеУбытков.Организация = ОстаткиИОбороты.Организация
			                               |			И ЗакрытиеУбытков.ВидОперации = ОстаткиИОбороты.ВидОперации
			                               |
			                               |ОБЪЕДИНИТЬ ВСЕ
			                               |
			                               |ВЫБРАТЬ
			                               |	Налог.Организация,
			                               |	Налог.ВидОперации,
			                               |	""РегламентнаяОперация"",
			                               |	ИСТИНА,
			                               |	ЕСТЬNULL(РегламентнаяОперация.РучнаяКорректировка, ЛОЖЬ),
			                               |	ЕСТЬNULL(РегламентнаяОперация.Состояние, &НеВыполнено)
			                               |ИЗ
			                               |	(ВЫБРАТЬ
			                               |		ВидыРегламентныхОпераций.Ссылка КАК ВидОперации,
			                               |		Организации.Ссылка КАК Организация
			                               |	ИЗ
			                               |		Перечисление.ВидыРегламентныхОпераций КАК ВидыРегламентныхОпераций,
			                               |		Справочник.Организации КАК Организации
			                               |	ГДЕ
			                               |		ВидыРегламентныхОпераций.Ссылка = &Налог
			                               |		И Организации.Ссылка = &Организация) КАК Налог
			                               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			                               |			РегламентнаяОперация.РучнаяКорректировка КАК РучнаяКорректировка,
			                               |			РегламентнаяОперация.Состояние КАК Состояние,
			                               |			РегламентнаяОперация.ВидОперации КАК ВидОперации,
			                               |			РегламентнаяОперация.Организация КАК Организация
			                               |		ИЗ
			                               |			Документ.РегламентнаяОперация КАК РегламентнаяОперация
			                               |		ГДЕ
			                               |			РегламентнаяОперация.Организация = &Организация
			                               |			И РегламентнаяОперация.Дата МЕЖДУ &ДатаНач И &ДатаКон
			                               |			И РегламентнаяОперация.ВидОперации = &Налог
			                               |			И (НЕ РегламентнаяОперация.ПометкаУдаления)) КАК РегламентнаяОперация
			                               |		ПО Налог.Организация = РегламентнаяОперация.Организация
			                               |			И Налог.ВидОперации = РегламентнаяОперация.ВидОперации";
			
			
		КонецЕсли;
		
		Массив = Новый Массив;
		Массив.Добавить(ПланыСчетов.Хозрасчетный.РасходыБудущихПериодов);
		Запрос.УстановитьПараметр("ЗакрытиеГода", Перечисления.ВидыРегламентныхОпераций.РеформацияБаланса);
		
		Запрос.Текст = Запрос.Текст +  "
		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ
		                               |	ЗакрытиеГода.Организация КАК Организация,
		                               |	ЗакрытиеГода.ВидОперации КАК ВидОперации,
		                               |	""РегламентнаяОперация"" КАК ВидДокумента,
		                               |	&КонецГода КАК Требуется,
		                               |	ЕСТЬNULL(РегламентнаяОперация.РучнаяКорректировка, ЛОЖЬ) КАК РучнаяКорректировка,
		                               |	ЕСТЬNULL(РегламентнаяОперация.Состояние, &НеВыполнено) КАК Состояние
		                               |ИЗ
		                               |	(ВЫБРАТЬ
		                               |		ВидыРегламентныхОпераций.Ссылка КАК ВидОперации,
		                               |		Организации.Ссылка КАК Организация
		                               |	ИЗ
		                               |		Перечисление.ВидыРегламентныхОпераций КАК ВидыРегламентныхОпераций,
		                               |		Справочник.Организации КАК Организации
		                               |	ГДЕ
		                               |		ВидыРегламентныхОпераций.Ссылка = &ЗакрытиеГода
		                               |		И Организации.Ссылка В(&СписокОрганизаций)) КАК ЗакрытиеГода
		                               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		                               |			РегламентнаяОперация.РучнаяКорректировка КАК РучнаяКорректировка,
		                               |			РегламентнаяОперация.Состояние КАК Состояние,
		                               |			РегламентнаяОперация.ВидОперации КАК ВидОперации,
		                               |			РегламентнаяОперация.Организация КАК Организация
		                               |		ИЗ
		                               |			Документ.РегламентнаяОперация КАК РегламентнаяОперация
		                               |		ГДЕ
		                               |			РегламентнаяОперация.Организация В(&СписокОрганизаций)
		                               |			И РегламентнаяОперация.Дата МЕЖДУ &ДатаНач И &ДатаКон
		                               |			И РегламентнаяОперация.ВидОперации = &ЗакрытиеГода
		                               |			И (НЕ РегламентнаяОперация.ПометкаУдаления)) КАК РегламентнаяОперация
		                               |		ПО ЗакрытиеГода.Организация = РегламентнаяОперация.Организация
		                               |			И ЗакрытиеГода.ВидОперации = РегламентнаяОперация.ВидОперации";
		
		
		
	КонецЕсли;
	
	
	Запрос.Текст = Запрос.Текст + ") КАК ВложенныйЗапрос";
	
	Если Не ВидОперации = Неопределено Тогда
		Запрос.УстановитьПараметр("ВидОперации", ВидОперации);
		Запрос.Текст = Запрос.Текст + " ГДЕ ВложенныйЗапрос.ВидОперации = &ВидОперации";
	КонецЕсли;
	
	Если Не ДляОП ТОгда 
		Запрос.Текст = Запрос.Текст +	"
		|СГРУППИРОВАТЬ ПО
		|ВложенныйЗапрос.Организация,
		|	ВложенныйЗапрос.ВидДокумента,
		|	ВложенныйЗапрос.ВидОперации,
		|	ВложенныйЗапрос.Требуется,
		|	ВложенныйЗапрос.Состояние,
		|	ВложенныйЗапрос.РучнаяКорректировка";
	
	Иначе
		Запрос.Текст = Запрос.Текст +	"
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.ВидДокумента,
		|	ВложенныйЗапрос.ВидОперации,
		|	ВложенныйЗапрос.РучнаяКорректировка) КАК ВложенныйЗапрос2";
  КонецЕсли;
  
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция УправлениеОрганизациями(Организация)

	СписокОП = ОбщегоНазначения.ПолучитьСписокОбособленныхПодразделенийОрганизации(Организация);
	СписокОП.Добавить(Организация.Ссылка);
	
	СписокГО = Новый СписокЗначений;
	СписокГО.Добавить(Организация.ГоловнаяОрганизация);
	
	Если СписокОП.Количество() = 1 И Не ЗначениеЗаполнено(Организация.ГоловнаяОрганизация) Тогда
		ТипОрганизации = "Простая";
	ИначеЕсли СписокОП.Количество() = 1 И ЗначениеЗаполнено(Организация.ГоловнаяОрганизация) Тогда
		ТипОрганизации = "ОП";	
	Иначе
		ТипОрганизации = "ГО";
	КонецЕсли;	
		
		СвойстваОрганизации = Новый Структура("Тип,Организация,ГоловнаяОрганизация", ТипОрганизации, СписокОП, СписокГО);
	
	Возврат СвойстваОрганизации;
	
КонецФункции

Процедура ПолучитьНеАктуальныеРегОперации(Организация, ДатаНачала, ДатаОкончания, Группа = Неопределено, ВидОперации = Неопределено, ТаблицаРезультатов) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Организация", Организация);
	Запрос.Параметры.Вставить("ДатаНачала", ДатаНачала);
	Запрос.Параметры.Вставить("ДатаОкончания", ДатаОкончания);
	Запрос.Параметры.Вставить("Группа", Группа);
	Запрос.Параметры.Вставить("ВидОперации", ВидОперации);
	
	Запрос.Текст = "ВЫБРАТЬ
	|	НеАктуальныеРегламентныеОперации.Организация,
	|	НеАктуальныеРегламентныеОперации.Группа,
	|	НеАктуальныеРегламентныеОперации.Дата,
	|	НеАктуальныеРегламентныеОперации.ВидОперации
	|ИЗ
	|	РегистрСведений.НеАктуальныеРегламентныеОперации КАК НеАктуальныеРегламентныеОперации
	|ГДЕ
	|	НеАктуальныеРегламентныеОперации.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И НеАктуальныеРегламентныеОперации.Организация В(&Организация)
	|	И НеАктуальныеРегламентныеОперации.Группа = &Группа
	|	И НеАктуальныеРегламентныеОперации.ВидОперации = &ВидОперации";
	

	Если ТипЗнч(Организация) = Тип("СписокЗначений") И Не Организация.Количество() = 0 Тогда
		ГоловнаяОрганизация = Организация[0].Значение.ГоловнаяОрганизация;
	Иначе
		ГоловнаяОрганизация = Неопределено;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ГоловнаяОрганизация) Тогда
		Запрос.Текст = Запрос.Текст  + "	              
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НеАктуальныеРегламентныеОперации.Организация,
		|	НеАктуальныеРегламентныеОперации.Группа,
		|	НеАктуальныеРегламентныеОперации.Дата,
		|	НеАктуальныеРегламентныеОперации.ВидОперации
		|ИЗ
		|	РегистрСведений.НеактуальныеРегламентныеОперации КАК НеАктуальныеРегламентныеОперации
		|ГДЕ
		|	НеАктуальныеРегламентныеОперации.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И НеАктуальныеРегламентныеОперации.Организация = &ГоловнаяОрганизация
		|	И НеАктуальныеРегламентныеОперации.Группа = &Группа
		|	И НеАктуальныеРегламентныеОперации.Группа = 2";	
		
		Запрос.Параметры.Вставить("ГоловнаяОрганизация", ГоловнаяОрганизация);
	КонецЕсли;
	
	Если Группа = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И НеАктуальныеРегламентныеОперации.Группа = &Группа", "");
	КонецЕсли;
	Если ВидОперации = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И НеАктуальныеРегламентныеОперации.ВидОперации = &ВидОперации", "");
	КонецЕсли;

	Результат = Запрос.Выполнить().Выгрузить();
	
	Если ТаблицаРезультатов = Неопределено Тогда
		ТаблицаРезультатов = Результат;	   
	Иначе
		Для Каждого Строка Из Результат Цикл
			Ошибка = ТаблицаРезультатов.Добавить();                                                           
			Ошибка.Описание = "Нарушена последовательность регламентных операций.
			|Ожидается изменение результатов выполнения операции """ + Строка.ВидОперации + """ за " + Формат(ДатаОкончания, "ДФ='MMММ yyyy ""г.""'") + ".
			|Необходимо выполнить повторно эту операцию (меню ""Операции"" - ""Закрытие месяца"").";
			Если ТипЗнч(Организация) = Тип("СписокЗначений") И Организация.Количество() > 1 Тогда
				Ошибка.Описание = СтрЗаменить(Ошибка.Описание,"
				|Необходимо выполнить повторно эту операцию (меню ""Операции"" - ""Закрытие месяца"").", " 
				|Необходимо выполнить повторно эту операцию для обособленных подразделений, указанных в отчете о невыполненных операциях.
				|Отчет формируется при нажатии на строку """ + Строка.ВидОперации + """ (меню ""Операции"" - ""Закрытие месяца"").");
				
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Функция ПроверитьНачалоРегОпераций(ТекДата, Организация)
	
	Если  ТекДата < Дата('20090101') Тогда
		Возврат Истина;
	КонецЕсли;
	
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Организация", Организация);
	Запрос.Параметры.Вставить("ДатаНачала", Дата('20090101'));
	Запрос.Параметры.Вставить("ДатаОкончания", ТекДата);
	Запрос.Параметры.Вставить("Состояние", Перечисления.ВидыСостоянийРегламентныхОпераций.Выполнено);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	РегламентнаяОперация.Ссылка
	               |ИЗ
	               |	Документ.РегламентнаяОперация КАК РегламентнаяОперация
	               |ГДЕ
	               |	РегламентнаяОперация.Организация В(&Организация)
	               |	И (НЕ РегламентнаяОперация.ПометкаУдаления)
	               |	И РегламентнаяОперация.Состояние = &Состояние
	               |	И РегламентнаяОперация.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания";
	
	
	Возврат Запрос.Выполнить().Пустой();
	
КонецФункции

Функция ПравильноеСоблюденияПоследовательности(ДокументСсылка) Экспорт
	
	СвойстваОрганизации = УправлениеОрганизациями(ДокументСсылка.Организация);
	НомерГруппы = ГруппаПоВидуОперации(ДокументСсылка.ВидОперации);
	НачалоТекущегоМесяца = НачалоМесяца(ДокументСсылка.Дата);
	КонецТекущегоМесяца  = КонецМесяца(ДокументСсылка.Дата);
	НачалоПредыдущегоМесяца = НачалоМесяца(НачалоТекущегоМесяца - 1);
	КонецПредыдущегоМесяца  = КонецМесяца(НачалоТекущегоМесяца - 1);
	
	ТаблицаОшибок = Новый ТаблицаЗначений;
	ТаблицаОшибок.Колонки.Добавить("Описание");
	
	Если НомерГруппы = 1 Тогда
		
		ПолучитьНеАктуальныеРегОперации(СвойстваОрганизации.Организация,НачалоПредыдущегоМесяца,КонецПредыдущегоМесяца,1,ДокументСсылка.ВидОперации, ТаблицаОшибок);
	Иначе
		ПолучитьНеАктуальныеРегОперации(СвойстваОрганизации.Организация,НачалоПредыдущегоМесяца,КонецПредыдущегоМесяца,НомерГруппы,ДокументСсылка.ВидОперации, ТаблицаОшибок);
		Если НомерГруппы >= 2 Тогда
			ПолучитьНеАктуальныеРегОперации(СвойстваОрганизации.Организация,НачалоТекущегоМесяца,КонецТекущегоМесяца,1,, ТаблицаОшибок);
		КонецЕсли;
		Если НомерГруппы >= 3 Тогда
			ПолучитьНеАктуальныеРегОперации(СвойстваОрганизации.Организация,НачалоТекущегоМесяца,КонецТекущегоМесяца,2,, ТаблицаОшибок);
		КонецЕсли;
		Если НомерГруппы >= 4 Тогда
			ПолучитьНеАктуальныеРегОперации(СвойстваОрганизации.Организация,НачалоТекущегоМесяца,КонецТекущегоМесяца,3,, ТаблицаОшибок);
		КонецЕсли;
	КонецЕсли;
	
	Если ТаблицаОшибок.Количество() > 0 Тогда
		ДокументСсылка = ТаблицаОшибок;
		Возврат Ложь;
	КонецЕсли;
	
	ЭтоНачало = ПроверитьНачалоРегОпераций(КонецПредыдущегоМесяца, СвойстваОрганизации.Организация);
	
	Если НомерГруппы = 1 Тогда
		Если ЭтоНачало Тогда
			Возврат Истина;
		КонецЕсли;
		
		ПроверитьВыполненностьГруппы(НомерГруппы, ДокументСсылка.ВидОперации, КонецПредыдущегоМесяца, СвойстваОрганизации.Организация, ДокументСсылка.Организация, ТаблицаОшибок);
		
	Иначе
		
		Если НЕ ЭтоНачало Тогда
			ПроверитьВыполненностьГруппы(НомерГруппы, ДокументСсылка.ВидОперации, КонецПредыдущегоМесяца, СвойстваОрганизации.Организация, ДокументСсылка.Организация, ТаблицаОшибок);
			
		КонецЕсли;
		Если НомерГруппы >= 2 Тогда
			ПроверитьВыполненностьГруппы(1, , КонецТекущегоМесяца, СвойстваОрганизации.Организация, ДокументСсылка.Организация, ТаблицаОшибок);
		КонецЕсли;
		Если НомерГруппы >= 3 Тогда
			ПроверитьВыполненностьГруппы(2, , КонецТекущегоМесяца, СвойстваОрганизации.Организация, ДокументСсылка.Организация, ТаблицаОшибок);
		КонецЕсли;
		Если НомерГруппы >= 4 Тогда
			ПроверитьВыполненностьГруппы(3, , КонецТекущегоМесяца, СвойстваОрганизации.Организация, ДокументСсылка.Организация, ТаблицаОшибок);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ТаблицаОшибок.Количество() > 0 Тогда
		ДокументСсылка = ТаблицаОшибок;
		Возврат Ложь;
	Иначе
		Возврат Истина
	КонецЕсли;
	
КонецФункции

Процедура ПроверитьВыполненностьГруппы(Группа, ВидОперации = Неопределено, ТекущаяДата, СписокОрганизаций, Организация, ТаблицаОшибок)
	
			ВсяГруппа = СоставГруппыРегОпераций(Группа,Организация,ТекущаяДата,ВидОперации, СписокОрганизаций);
			
			Если ВсяГруппа = Неопределено Тогда
				Возврат;
			КонецЕсли;
			
			
			ГруппаНеСделанных = ВсяГруппа.НайтиСтроки(Новый Структура("Состояние",Перечисления.ВидыСостоянийРегламентныхОпераций.НеВыполнено));
			Для Каждого НеСделанный Из ГруппаНеСделанных Цикл
				Если НЕ НеСделанный.Требуется Тогда
					Продолжить;
				КонецЕсли;
				
				Ошибка = ТаблицаОшибок.Добавить();                                                           
				Ошибка.Описание = "Нарушена последовательность регламентных операций.";
				Если НеСделанный.ВидОперации = "Начисление зарплаты, налогов(взносов) с ФОТ" Тогда
					Ошибка.Описание = Ошибка.Описание + "
					|Нет начисления зарплаты и налогов (взносов) с ФОТ за " + Формат(ТекущаяДата, "ДФ='MMММ yyyy ""г.""'") + ".
					|Необходимо загрузить начисление зарплаты (меню ""Зарплата"" - ""Данные учета зарплаты во внешней программе"" - ""Отражение зарплаты в регламентированном учете"").";
				Иначе
					Ошибка.Описание = Ошибка.Описание + "
					|Не выполнена операция """ + НеСделанный.ВидОперации + """ за " + Формат(ТекущаяДата, "ДФ='MMММ yyyy ""г.""'") + ".
					|Необходимо выполнить указанную операцию (меню ""Операции"" - ""Закрытие месяца"").";
				КонецЕсли;
				Если ТипЗнч(СписокОрганизаций) = Тип("СписокЗначений") И СписокОрганизаций.Количество() > 1 Тогда
					Ошибка.Описание = СтрЗаменить(Ошибка.Описание,"
					|Необходимо выполнить указанную операцию (меню ""Операции"" - ""Закрытие месяца"").", " 
					|Необходимо выполнить указанную операцию для обособленных подразделений, перечисленных в отчете о невыполненных операциях.
					|Отчет формируется при нажатии на строку """ + НеСделанный.ВидОперации + """ (меню ""Операции"" - ""Закрытие месяца"").");
					
				КонецЕсли;
			КонецЦикла;
			ГруппаСделанныхСОшибками = ВсяГруппа.НайтиСтроки(Новый Структура("Состояние",Перечисления.ВидыСостоянийРегламентныхОпераций.ВыполненоСошибками));
			Для Каждого НеСделанный Из ГруппаСделанныхСОшибками Цикл
				Если НЕ НеСделанный.Требуется Тогда
					Продолжить;
				КонецЕсли;
				
				Ошибка = ТаблицаОшибок.Добавить();
				Ошибка.Описание = "Нарушена последовательность регламентных операций.
				|Не выполнена операция """ + НеСделанный.ВидОперации + """ за " + Формат(ТекущаяДата, "ДФ='MMММ yyyy ""г.""'") + ".При выполнении операции обнаружены ошибки.
				|Исправьте ошибки и выполните указанную операцию (меню ""Операции"" - ""Закрытие месяца"").";
				Если ТипЗнч(СписокОрганизаций) = Тип("СписокЗначений") И СписокОрганизаций.Количество() > 1 Тогда
					Ошибка.Описание = СтрЗаменить(Ошибка.Описание,"
					|Исправьте ошибки и выполните указанную операцию (меню ""Операции"" - ""Закрытие месяца"").", " 
					|Исправьте ошибки и выполните указанную операцию для обособленных подразделений, перечисленных в отчете о невыполненных операциях.
					|Отчет формируется при нажатии на строку """ + НеСделанный.ВидОперации + """ (меню ""Операции"" - ""Закрытие месяца"").");
					
				КонецЕсли;
			КонецЦикла;
			
	
КонецПроцедуры

Процедура 	ПолучитьВыполненныеРегОперации(Организация, ДатаНачала, ДатаОкончания, МассивГрупп, ВидОперации, СписокВыполненных)
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Организация", Организация);
	Запрос.Параметры.Вставить("ДатаНачала", ДатаНачала);
	Запрос.Параметры.Вставить("ДатаОкончания", ДатаОкончания);
	Запрос.Параметры.Вставить("ВидОперации", ВидОперации);
	Запрос.Параметры.Вставить("Состояние", Перечисления.ВидыСостоянийРегламентныхОпераций.Выполнено);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	РегламентнаяОперация.ВидОперации,
	               |	РегламентнаяОперация.Организация,
	               |	РегламентнаяОперация.Дата
	               |ИЗ
	               |	Документ.РегламентнаяОперация КАК РегламентнаяОперация
	               |ГДЕ
	               |	РегламентнаяОперация.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	               |	И РегламентнаяОперация.Организация В(&Организация)
	               |	И РегламентнаяОперация.Состояние = &Состояние";
	
	Если ВидОперации = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И РегламентнаяОперация.ВидОперации = &ВидОперации", "");
	КонецЕсли;
	Результат = Запрос.Выполнить().Выгрузить();
	Для Каждого Строка ИЗ Результат Цикл
		НомерГруппы = ГруппаПоВидуОперации(Строка.ВидОперации);
		Если Не НомерГруппы = Неопределено Тогда
			Если МассивГрупп.Найти(НомерГруппы) = Неопределено Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
	СтрокаВыполненных = СписокВыполненных.Добавить();	
	СтрокаВыполненных.Организация = Строка.Организация;
	СтрокаВыполненных.ВидОперации = Строка.ВидОперации;
	СтрокаВыполненных.Группа = НомерГруппы;
	СтрокаВыполненных.Период = Строка.Дата;
КонецЦикла;

КонецПроцедуры

Процедура ЗаписатьСписокНеАктуальныхРегОпераций(Организация, Период, ВидОперации) Экспорт
	
	СвойстваОрганизации = УправлениеОрганизациями(Организация);
	НомерГруппы = ГруппаПоВидуОперации(ВидОперации);
	НачалоТекущегоМесяца = НачалоМесяца(Период);
	КонецТекущегоМесяца  = КонецМесяца(Период);
	НачалоПредыдущегоМесяца = НачалоГода(НачалоТекущегоМесяца - 1);
	КонецПредыдущегоМесяца  = КонецМесяца(НачалоТекущегоМесяца - 1);
	НачалоСледующегоМесяца = НачалоМесяца(КонецТекущегоМесяца + 1);
	КонецСледующегоМесяца  = КонецГода(КонецТекущегоМесяца + 1);
	
	СписокНеАктуальных = Неопределено;
	ПолучитьНеАктуальныеРегОперации(СвойстваОрганизации.Организация, НачалоТекущегоМесяца, КонецТекущегоМесяца, НомерГруппы, ВидОперации, СписокНеАктуальных);
	ДобавитьЗаписьРегистра = (СписокНеАктуальных.Количество() = 0);
	УдалитьЗаписьРегистра = НЕ (СписокНеАктуальных.Количество() = 0);
	
	Если ДобавитьЗаписьРегистра Тогда
		СписокВыполненных = Новый ТаблицаЗначений;
		СписокВыполненных.Колонки.Добавить("Организация");
		СписокВыполненных.Колонки.Добавить("Период");
		СписокВыполненных.Колонки.Добавить("Группа");
		СписокВыполненных.Колонки.Добавить("ВидОперации");
		
		Если НомерГруппы = 1 Тогда	
			Если СвойстваОрганизации.Тип = "Простая" Тогда
				МассивГрупп = Новый Массив;
				МассивГрупп.Добавить(2);
			Иначе
				МассивГрупп = Новый Массив;
				МассивГрупп.Добавить(2);
				ПолучитьВыполненныеРегОперации(СвойстваОрганизации.ГоловнаяОрганизация, НачалоТекущегоМесяца, КонецТекущегоМесяца, МассивГрупп, , СписокВыполненных);
				МассивГрупп = Новый Массив;
			КонецЕсли;
			МассивГрупп.Добавить(3);
			МассивГрупп.Добавить(4);
			ПолучитьВыполненныеРегОперации(СвойстваОрганизации.Организация, НачалоТекущегоМесяца, КонецТекущегоМесяца, МассивГрупп, , СписокВыполненных);
			
			МассивГрупп = Новый Массив;
			МассивГрупп.Добавить(1);
			ПолучитьВыполненныеРегОперации(СвойстваОрганизации.Организация, НачалоСледующегоМесяца, КонецСледующегоМесяца, МассивГрупп, ВидОперации, СписокВыполненных);
		Иначе
			
			Если НомерГруппы = 3 Тогда
				МассивГрупп = Новый Массив;
				МассивГрупп.Добавить(4);
				ПолучитьВыполненныеРегОперации(СвойстваОрганизации.Организация, НачалоТекущегоМесяца, КонецТекущегоМесяца, МассивГрупп, , СписокВыполненных);
			ИначеЕсли НомерГруппы = 2 Тогда
				МассивГрупп = Новый Массив;
				МассивГрупп.Добавить(4);
				МассивГрупп.Добавить(3);
				ПолучитьВыполненныеРегОперации(СвойстваОрганизации.Организация, НачалоТекущегоМесяца, КонецТекущегоМесяца, МассивГрупп, , СписокВыполненных);
			КонецЕсли;
			МассивГрупп = Новый Массив;
			МассивГрупп.Добавить(2);
			МассивГрупп.Добавить(3);
			МассивГрупп.Добавить(4);
			ПолучитьВыполненныеРегОперации(СвойстваОрганизации.Организация, НачалоСледующегоМесяца, КонецСледующегоМесяца, МассивГрупп, , СписокВыполненных);
		КонецЕсли;
		Если НЕ СписокВыполненных.Количество() = 0 Тогда
			Для Каждого Строка Из СписокВыполненных Цикл
				
				МенеджерЗаписиРегистра = РегистрыСведений.НеАктуальныеРегламентныеОперации.СоздатьМенеджерЗаписи();
				МенеджерЗаписиРегистра.Прочитать();
				МенеджерЗаписиРегистра.Организация = Строка.Организация;
				МенеджерЗаписиРегистра.Дата = Строка.Период;
				МенеджерЗаписиРегистра.Группа = Строка.Группа;
				МенеджерЗаписиРегистра.ВидОперации = Строка.ВидОперации;
				МенеджерЗаписиРегистра.Записать();
			КонецЦикла;
			
		КонецЕсли;
	КонецЕсли;
	
	Если УдалитьЗаписьРегистра Тогда
		НадоУдалить = Ложь;
		ТаблицаРезультатов = Неопределено;
		ПолучитьНеАктуальныеРегОперации(Организация, НачалоПредыдущегоМесяца, КонецПредыдущегоМесяца, НомерГруппы, ВидОперации, ТаблицаРезультатов);
		НадоУдалить = (ТаблицаРезультатов.Количество() = 0);
		Если Не НадоУдалить И Не НомерГруппы = 1 Тогда
			ТаблицаРезультатов = Неопределено;
			ПолучитьНеАктуальныеРегОперации(Организация, НачалоТекущегоМесяца, КонецТекущегоМесяца, НомерГруппы -1 , , ТаблицаРезультатов);
			НадоУдалить = (ТаблицаРезультатов.Количество() = 0);
		КонецЕсли;
		
		Если НадоУдалить Тогда
			МенеджерЗаписиРегистра = РегистрыСведений.НеАктуальныеРегламентныеОперации.СоздатьМенеджерЗаписи();
			МенеджерЗаписиРегистра.Организация = Организация;
			МенеджерЗаписиРегистра.Дата = Период;
			МенеджерЗаписиРегистра.Группа = НомерГруппы;
			МенеджерЗаписиРегистра.ВидОперации = ВидОперации;
			МенеджерЗаписиРегистра.Прочитать();
			МенеджерЗаписиРегистра.Удалить();
			
		КонецЕсли;
	КонецЕсли;
		
	
КонецПроцедуры

Процедура ОпределитьСостояниеПоГраницеПроведенияЗакрытияМесяца(Организация, ПериодРегистрации, СтрокаТаблицы) Экспорт
    
    Группа = ГруппаПоВидуОперации(СтрокаТаблицы.ВидОперации);
    
    Состояние = 1;
    
    МенеджерЗаписиРегистра = РегистрыСведений.ГраницаПроведенияЗакрытияМесяца.СоздатьМенеджерЗаписи();
    МенеджерЗаписиРегистра.Организация = Организация;
    МенеджерЗаписиРегистра.Прочитать();
    
    Если МенеджерЗаписиРегистра.Выбран() Тогда
        ДатаГраницы = МенеджерЗаписиРегистра.Дата;
        ГруппаГраницы = МенеджерЗаписиРегистра.Группа;
        
        Если ГруппаГраницы < Группа Тогда
            Если Год(ДатаГраницы) < Год(ПериодРегистрации) Тогда
                Состояние = 4;
            ИначеЕсли Месяц(ДатаГраницы) <= Месяц(ПериодРегистрации) Тогда 
                Состояние = 4;
            КонецЕсли;
        КонецЕсли;        
    КонецЕсли;
    
    СтрокаТаблицы.Состояние = Состояние;
    
КонецПроцедуры

Процедура УстановитьДоступность(Организация, Период, Форма, ИныеУсловия = Истина) Экспорт
	
	СоответствиеГраницЗапрета = ПараметрыСеанса.ГраницыЗапретаИзмененияДанных.Получить();
	
	// Для пользователя с полными правами проверок выполнять не нужно
	Если СоответствиеГраницЗапрета = Неопределено Тогда
		УсловиеГраницы = Истина;
	Иначе
		ДатаЗапретаРедактирования = СоответствиеГраницЗапрета.Получить(Организация);
		УсловиеГраницы = (ДатаЗапретаРедактирования < Период);

	КонецЕсли;
	
	Доступность = (УсловиеГраницы и ИныеУсловия);
    ЭлементыФормы = Форма.ЭлементыФормы;	
	
	Для Счетчик = 1 По ЭлементыФормы.Количество() - 1 Цикл
		ЭлементФормы = ЭлементыФормы.Получить(Счетчик);
		
		Если Найти(ЭлементФормы.Имя, "ОсновныеДействияФормы") > 0 Тогда
			
			ЭлементФормы.Кнопки.Выполнить.Доступность = Доступность;
		Иначе	
			
			ЭлементФормы.Доступность = Доступность;
			
		КонецЕсли;
		
		
	КонецЦикла;
	
	ЭлементыФормы.Организация.Доступность = Истина;
	ЭлементыФормы.ПредставлениеПериодаРегистрации.Доступность = Истина;
	
КонецПроцедуры	// УстановитьДоступностьФормыДляРедактирования

Процедура  ПечатьСправкиРасчета(Объект, Организация, ПериодРегистрации) Экспорт
		
	СправкаРасчет = Объект.Создать();
	ФормаОбъекта = СправкаРасчет.ПолучитьФорму();
	СправкаРасчет.ИспользоватьИнуюНастройку = Истина;
	СправкаРасчет.Организация = Организация;
	Если Объект = Отчеты.СправкаРасчетКалькуляцияСебестоимости Тогда
		СправкаРасчет.ПериодРегистрацииНач = НачалоМесяца(ПериодРегистрации);
		СправкаРасчет.ПериодРегистрацииКон = КонецМесяца(ПериодРегистрации);
	Иначе
		СправкаРасчет.ПериодРегистрации = КонецМесяца(ПериодРегистрации);
		
	КонецЕсли;
	СправкаРасчет.ВариантОтчета = 1;
	ФормаОбъекта.Открыть();
	
КонецПроцедуры

Процедура СформироватьСправкиРасчеты(Организация, ПериодРегистрации, ВидОперации = "Все") Экспорт 
	
	ПрименяетсяУСН =  НалоговыйУчетУСН.ПрименениеУСН(Организация, ПериодРегистрации);
	Предприниматель = (Организация.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо) И НЕ ПрименяетсяУСН;
	ПоддержкаПБУ18 = НалоговыйУчет.ПрименениеПБУ18(Организация, ПериодРегистрации) И НЕ Предприниматель;
	
	Если ВидОперации = "Все" Тогда
		ПечатьСправкиРасчета(Отчеты.СправкаРасчетПереоценкаВалютныхСредств, Организация, ПериодРегистрации);
		ПечатьСправкиРасчета(Отчеты.СправкаРасчетСписаниеРБП, Организация, ПериодРегистрации);
		ПечатьСправкиРасчета(Отчеты.СправкаРасчетСебестоимостиПродукцииИУслуг, Организация, ПериодРегистрации);
		ПечатьСправкиРасчета(Отчеты.СправкаРасчетКалькуляцияСебестоимости, Организация, ПериодРегистрации);
		ПечатьСправкиРасчета(Отчеты.СправкаРасчетРаспределенияКосвенныхРасходов, Организация, ПериодРегистрации);
		ПечатьСправкиРасчета(Отчеты.СправкаРасчетСписанияКосвенныхРасходов, Организация, ПериодРегистрации);
		
		Если НЕ ПрименяетсяУСН И НЕ Предприниматель Тогда
			// {ОбособленныеПодразделения
			ПечатьСправкиРасчета(Отчеты.СправкаРасчетДолиНалоговойБазы, Организация, ПериодРегистрации);
			// }ОбособленныеПодразделения 
			Если ПоддержкаПБУ18 Тогда
				ПечатьСправкиРасчета(Отчеты.СправкаРасчетПостоянныхИВременныхРазниц, Организация, ПериодРегистрации);
			КонецЕсли;
		КонецЕсли;
		ПечатьСправкиРасчета(Отчеты.СправкаРасчетНалогаНаПрибыль, Организация, ПериодРегистрации);
		
		Если Месяц(ПериодРегистрации) = 12 Или Константы.ПрименяютсяРазныеСтавкиНалогаНаПрибыль.Получить() Тогда
			ПечатьСправкиРасчета(Отчеты.СправкаРасчетПересчетСтоимостиОтложенныхНалоговыхАктивовИОбязательств, Организация, ПериодРегистрации);
		КонецЕсли;
		
	ИначеЕсли ВидОперации = Перечисления.ВидыРегламентныхОпераций.ПереоценкаВалютныхСредств Тогда
		ПечатьСправкиРасчета(Отчеты.СправкаРасчетПереоценкаВалютныхСредств, Организация, ПериодРегистрации);
	ИначеЕсли ВидОперации = Перечисления.ВидыРегламентныхОпераций.ЗакрытиеСчета97 Тогда
		ПечатьСправкиРасчета(Отчеты.СправкаРасчетСписаниеРБП, Организация, ПериодРегистрации);
	ИначеЕсли ВидОперации = Перечисления.ВидыРегламентныхОпераций.ЗакрытиеСчетов20_23_25_26 Тогда
		ПечатьСправкиРасчета(Отчеты.СправкаРасчетСебестоимостиПродукцииИУслуг, Организация, ПериодРегистрации);
		ПечатьСправкиРасчета(Отчеты.СправкаРасчетРаспределенияКосвенныхРасходов, Организация, ПериодРегистрации);
		ПечатьСправкиРасчета(Отчеты.СправкаРасчетСписанияКосвенныхРасходов, Организация, ПериодРегистрации);
		ПечатьСправкиРасчета(Отчеты.СправкаРасчетКалькуляцияСебестоимости, Организация, ПериодРегистрации);
	ИначеЕсли ВидОперации = Перечисления.ВидыРегламентныхОпераций.ЗакрытиеСчета44 Тогда
		ПечатьСправкиРасчета(Отчеты.СправкаРасчетСписанияКосвенныхРасходов, Организация, ПериодРегистрации);
	ИначеЕсли ВидОперации = Перечисления.ВидыРегламентныхОпераций.ЗакрытиеСчетов90_91 Тогда
		ПечатьСправкиРасчета(Отчеты.СправкаРасчетНалогаНаПрибыль, Организация, ПериодРегистрации);
	ИначеЕсли ВидОперации = Перечисления.ВидыРегламентныхОпераций.РасчетДолейСписанияКосвенныхРасходов Тогда
		// {ОбособленныеПодразделения
		ПечатьСправкиРасчета(Отчеты.СправкаРасчетДолиНалоговойБазы, Организация, ПериодРегистрации);
		// }ОбособленныеПодразделения 
		ПечатьСправкиРасчета(Отчеты.СправкаРасчетНормированияРасходов, Организация, ПериодРегистрации);
	ИначеЕсли ВидОперации = Перечисления.ВидыРегламентныхОпераций.РасчетНалогаНаПрибыль Тогда
		Если НЕ ПрименяетсяУСН И НЕ Предприниматель Тогда
			// {ОбособленныеПодразделения
			ПечатьСправкиРасчета(Отчеты.СправкаРасчетДолиНалоговойБазы, Организация, ПериодРегистрации);
			// }ОбособленныеПодразделения 
			Если ПоддержкаПБУ18 Тогда
				ПечатьСправкиРасчета(Отчеты.СправкаРасчетПостоянныхИВременныхРазниц, Организация, ПериодРегистрации);
			КонецЕсли;
		КонецЕсли;
		ПечатьСправкиРасчета(Отчеты.СправкаРасчетНалогаНаПрибыль, Организация, ПериодРегистрации);
		Если Константы.ПрименяютсяРазныеСтавкиНалогаНаПрибыль.Получить() Тогда
			ПечатьСправкиРасчета(Отчеты.СправкаРасчетПересчетСтоимостиОтложенныхНалоговыхАктивовИОбязательств, Организация, ПериодРегистрации);
		КонецЕсли;
	ИначеЕсли ВидОперации = Перечисления.ВидыРегламентныхОпераций.РеформацияБаланса  Тогда
		ПечатьСправкиРасчета(Отчеты.СправкаРасчетПересчетСтоимостиОтложенныхНалоговыхАктивовИОбязательств, Организация, ПериодРегистрации);
	КонецЕсли;
	
КонецПроцедуры

Функция СуществуетСправкаРасчет (ВидОперации) Экспорт
	Если ВидОперации = Перечисления.ВидыРегламентныхОпераций.СписаниеУбытковПрошлыхЛет 
	Или  ВидОперации = Перечисления.ВидыРегламентныхОпераций.АмортизацияИИзносОС
	Или  ВидОперации = Перечисления.ВидыРегламентныхОпераций.АмортизацияНМАИсписаниеРасходовПоНИОКР
	Или  ВидОперации = Перечисления.ВидыРегламентныхОпераций.ИсключениеНЗПИзСоставаМатериальныхРасходовДляУСН
	Или  ВидОперации = Перечисления.ВидыРегламентныхОпераций.КорректировкаСтоимостиНоменклатуры
	Или  ВидОперации = Перечисления.ВидыРегламентныхОпераций.ПогашениеСтоимостиСпецодеждыИспецоснасткиВэксплуатации
	Или  ВидОперации = Перечисления.ВидыРегламентныхОпераций.ПризнаниеРасходовНаПриобретениеНМАДляУСН
	Или  ВидОперации = Перечисления.ВидыРегламентныхОпераций.ПризнаниеРасходовНаПриобретениеОСДляУСН
	// {УчетДоходовИРасходовИП
	Или  ВидОперации = Перечисления.ВидыРегламентныхОпераций.РаспределениеРасходовПоВидамДеятельностиДляИП
	// }УчетДоходовИРасходовИП
	Или  ВидОперации = Перечисления.ВидыРегламентныхОпераций.РаспределениеРасходовПоВидамДеятельностиДляУСН
	Или  ВидОперации = Перечисления.ВидыРегламентныхОпераций.РасчетТорговойНаценкиПоПроданнымТоварам
	Или  ВидОперации = Перечисления.ВидыРегламентныхОпераций.СписаниеДопРасходовДляУСН Тогда
	Возврат Ложь
Иначе
	Возврат Истина;
КонецЕсли;

КонецФункции

// Функция возвращает список пропущенных в прошлом месяце рег.операций
// Если параметр "ВидОперации" имеет значение "Все"
// Функция возвращает подтверждение пропуска в прошлом месяце рег.операции
// Если параметр "ВидОперации" содержит вид операции
//
// Параметры:
// 		Организация - счет проводки
//      ПериодРегистрации - текущий месяц
//      ВидОперации - вид регламентной операции
//		
// Возврат:
//		подтвреждение пропуска рег.операций
//
Функция ПропущеноРанее(Организация, ПериодРегистрации, ВидОперации) Экспорт
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		 Возврат Ложь;
	 КонецЕсли;
	 
	 Если Не ЗначениеЗаполнено(ПериодРегистрации) Тогда
		 Возврат Ложь;
	 КонецЕсли;
	 
	 Если Не ЗначениеЗаполнено(ВидОперации) Тогда
		 Возврат Ложь;
	 КонецЕсли;
	 
	 КонтрольнаяДата =  НачалоМесяца(ПериодРегистрации)-1;
	 
	 Запрос = Новый Запрос;
	 Запрос.Параметры.Вставить("Организация", Организация);
	 Запрос.Параметры.Вставить("ДатаНач",     НачалоМесяца(КонтрольнаяДата));
	 Запрос.Параметры.Вставить("ДатаКон",     КонецМесяца(КонтрольнаяДата));
	 Запрос.Параметры.Вставить("ВидОперации", ВидОперации);
	 Запрос.Параметры.Вставить("Состояние",   Перечисления.ВидыСостоянийРегламентныхОпераций.Пропущено);
	 
	 Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	                |	РегламентнаяОперация.ВидОперации КАК ВидОперации
	                |ИЗ
	                |	Документ.РегламентнаяОперация КАК РегламентнаяОперация
	                |ГДЕ
	                |	РегламентнаяОперация.Организация = &Организация
	                |	И РегламентнаяОперация.Состояние = &Состояние
	                |	И РегламентнаяОперация.ВидОперации = &ВидОперации
	                |	И РегламентнаяОперация.Дата МЕЖДУ &ДатаНач И &ДатаКон
	                |	И (НЕ РегламентнаяОперация.ПометкаУдаления)";
	 
	 Если ВидОперации = "Все" Тогда
		 Запрос.Текст = СтрЗаменить(Запрос.Текст,"И РегламентнаяОперация.ВидОперации = &ВидОперации", "");
		 Запрос.Текст = СтрЗаменить(Запрос.Текст,"ПЕРВЫЕ 1", "");
		 ТаблицаПропущенных = Запрос.Выполнить().Выгрузить();
		 Возврат ТаблицаПропущенных;
	 Иначе
		 Возврат Не Запрос.Выполнить().Пустой();
		 
	 КонецЕсли;
	 
КонецФункции

Процедура ОткрытьРегОперацию(ИмяРегОперации) 
	
	ВидРегОперации = Перечисления.ВидыРегламентныхОпераций[ИмяРегОперации];
	
    Форма = Документы.РегламентнаяОперация.ПолучитьФормуСписка();
	Форма.Отбор["ВидОперации"].ВидСравнения  = ВидСравнения.Равно;
	Форма.Отбор["ВидОперации"].Использование = Истина;
	Форма.Отбор["ВидОперации"].Значение      = ВидРегОперации;
	Форма.ВидТекущейОперации      = ВидРегОперации;
	Форма.Открыть();

КонецПроцедуры

Функция  ОткрытьРегОперациюАмортизацияОС() Экспорт
	    ОткрытьРегОперацию("АмортизацияИИзносОС");
КонецФункции

Функция  ОткрытьРегОперациюАмортизацияНМА() Экспорт
	    ОткрытьРегОперацию("АмортизацияНМАИсписаниеРасходовПоНИОКР");
КонецФункции

Функция  ОткрытьРегОперациюСпецодежда() Экспорт
	    ОткрытьРегОперацию("ПогашениеСтоимостиСпецодеждыИспецоснасткиВэксплуатации");
КонецФункции

Функция  ОткрытьРегОперациюКорректировка() Экспорт
	    ОткрытьРегОперацию("КорректировкаСтоимостиНоменклатуры");
КонецФункции

Функция  ОткрытьРегОперациюРасчетДолей() Экспорт
	    ОткрытьРегОперацию("РасчетДолейСписанияКосвенныхРасходов");
КонецФункции

Функция  ОткрытьРегОперациюЗакрытие20() Экспорт
	    ОткрытьРегОперацию("ЗакрытиеСчетов20_23_25_26");
КонецФункции

Функция  ОткрытьРегОперациюЗакрытие44() Экспорт
	    ОткрытьРегОперацию("ЗакрытиеСчета44");
КонецФункции

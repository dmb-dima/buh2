
////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТИРУЕМЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Возвращает информацию о реализованной в конфигурации функциональности 
// по автозаполнению регламентированных отчетов
//
// Параметры:
// 	Отчет - строка - имя отчета
//  Форма - строка - имя формы
//
// Возвращаемое значение:
// Таблица значений, описывающая автозаполняемые отчеты
//
Функция ВозможностиМодуля(Отчет = Неопределено, Форма = Неопределено) Экспорт
	
	ТаблицаОписаний = Новый ТаблицаЗначений;
	ТаблицаОписаний.Колонки.Добавить("Отчет");
	ТаблицаОписаний.Колонки.Добавить("Форма");
	ТаблицаОписаний.Колонки.Добавить("ДоступностьРасшифровки");
	ТаблицаОписаний.Колонки.Добавить("ЗаполняемыеПоказатели");
	
	
	
	
	
	Если СуществуетАлгоритмАвтозаполнения("РегламентированныйОтчетРСВ1", "ФормаОтчета2010Кв1", Отчет, Форма) Тогда 
		ДобавитьСтрокуОписанияОтчета(ТаблицаОписаний, "РегламентированныйОтчетРСВ1", "ФормаОтчета2010Кв1", Истина,
		ОписаниеПоказателей_РСВ1_2010Кв1());
	ИначеЕсли СуществуетАлгоритмАвтозаполнения("РегламентированныйОтчетРСВ1", "ФормаОтчета2010Кв4", Отчет, Форма) Тогда 
		ДобавитьСтрокуОписанияОтчета(ТаблицаОписаний, "РегламентированныйОтчетРСВ1", "ФормаОтчета2010Кв4", Истина,
		ОписаниеПоказателей_РСВ1_2010Кв1());			
	ИначеЕсли СуществуетАлгоритмАвтозаполнения("РегламентированныйОтчетРСВ1", "ФормаОтчета2011Кв1", Отчет, Форма) Тогда 
		ДобавитьСтрокуОписанияОтчета(ТаблицаОписаний, "РегламентированныйОтчетРСВ1", "ФормаОтчета2011Кв1", Истина,
									ОписаниеПоказателей_РСВ1_2010Кв1());	
	ИначеЕсли СуществуетАлгоритмАвтозаполнения("РегламентированныйОтчет4ФСС", "ФормаОтчета2011Кв1", Отчет, Форма) Тогда 
		ДобавитьСтрокуОписанияОтчета(ТаблицаОписаний, "РегламентированныйОтчет4ФСС", "ФормаОтчета2011Кв1", Истина,
									ОписаниеПоказателей_4ФСС_2011());	
	ИначеЕсли СуществуетАлгоритмАвтозаполнения("РегламентированныйОтчет4ФСС", "ФормаОтчета2010Кв1", Отчет, Форма) Тогда 
		ДобавитьСтрокуОписанияОтчета(ТаблицаОписаний, "РегламентированныйОтчет4ФСС", "ФормаОтчета2010Кв1", Истина,
		ОписаниеПоказателей_4ФСС_2010());
	ИначеЕсли СуществуетАлгоритмАвтозаполнения("РегламентированныйОтчет4ФСС", "ФормаОтчета2010Кв4", Отчет, Форма) Тогда 
		ДобавитьСтрокуОписанияОтчета(ТаблицаОписаний, "РегламентированныйОтчет4ФСС", "ФормаОтчета2010Кв4", Истина,
		ОписаниеПоказателей_4ФСС_2010());
	ИначеЕсли СуществуетАлгоритмАвтозаполнения("РегламентированныйОтчетРВ3", "ФормаОтчета2010Кв1", Отчет, Форма) Тогда 
		ДобавитьСтрокуОписанияОтчета(ТаблицаОписаний, "РегламентированныйОтчетРВ3", "ФормаОтчета2010Кв1", Истина,
		ОписаниеПоказателей_РВ3_2010Кв1());
	ИначеЕсли СуществуетАлгоритмАвтозаполнения("", "", Отчет, Форма) Тогда 
		//ДобавитьСтрокуОписанияОтчета(ТаблицаОписаний, "", "", Истина,
		//							ОписаниеПоказателей_???_200?Кв?());
	КонецЕсли;
	
	Возврат ТаблицаОписаний;
	
КонецФункции

// Возвращает значения показателей отчета, вычисленные по данным ИБ
//
// Параметры:
// 	Отчет - строка - идентификатор отчета, заполнение которого необходимо произвести
//  Форма - строка - имя формы
//  ПараметрыОтчета - структура, содержащая значения ключевых реквизитов заполняемого отчета. 
//		Структура содержит, как минимум, следующее:
//			Организация, тип СправочникСсылка.Организации
//			ДатаНачалаПериода, тип Дата
//			ДатаОкончанияПериода, тип Дата
//			ДатаПодписи, тип Дата
//			Периодичность, тип ПеречислениеСсылка.Периодичность
//
// Возвращаемое значение:
//	ДеревоЗначений с колонками «Имя" и «Значение"
//
Функция ВернутьДанныеДляЗаполнения(Отчет, Форма, ПараметрыОтчета) Экспорт
	
	Если Отчет = "РегламентированныйОтчетАвансыПоЕСН" И Форма = "ФормаОтчета2007Кв1" Тогда
		Возврат ЗначенияПоказателей_АвансыЕСН_2007Кв1(ПараметрыОтчета);
	ИначеЕсли Отчет = "РегламентированныйОтчетЕСН" И Форма = "ФормаОтчета2007Кв1" Тогда
		Возврат  (ЗначенияПоказателей_АвансыЕСН_2007Кв1(ПараметрыОтчета));
	ИначеЕсли Отчет = "РегламентированныйОтчетАвансыПФР" И Форма = "ФормаОтчета2005Кв1" Тогда
		Возврат ЗначенияПоказателей_АвансыПФР_2005Кв1(ПараметрыОтчета);
	ИначеЕсли Отчет = "РегламентированныйОтчетПФР" И Форма = "ФормаОтчета2006Кв1" Тогда
		Возврат ЗначенияПоказателей_ДекларацияПФР_2006(ПараметрыОтчета);
	ИначеЕсли Отчет = "РегламентированныйОтчетРСВ1" И Форма = "ФормаОтчета2011Кв1" Тогда
		Возврат ЗначенияПоказателей_РСВ1_2010Кв1(ПараметрыОтчета);
	ИначеЕсли Отчет = "РегламентированныйОтчетРСВ1" И Форма = "ФормаОтчета2010Кв1" Тогда
		Возврат ЗначенияПоказателей_РСВ1_2010Кв1(ПараметрыОтчета);
	ИначеЕсли Отчет = "РегламентированныйОтчетРСВ1" И Форма = "ФормаОтчета2010Кв4" Тогда
		Возврат ЗначенияПоказателей_РСВ1_2010Кв1(ПараметрыОтчета);
	ИначеЕсли Отчет = "РегламентированныйОтчетРВ3" И Форма = "ФормаОтчета2010Кв1" Тогда
		Возврат ЗначенияПоказателей_РВ3_2010Кв1(ПараметрыОтчета);
	ИначеЕсли Отчет = "РегламентированныйОтчет4ФСС" И Форма = "ФормаОтчета2010Кв1" Тогда
		Возврат ЗначенияПоказателей_4ФСС_2010(ПараметрыОтчета);
	ИначеЕсли Отчет = "РегламентированныйОтчет4ФСС" И Форма = "ФормаОтчета2011Кв1" Тогда
		Возврат ЗначенияПоказателей_4ФСС_2011(ПараметрыОтчета);
	ИначеЕсли Отчет = "РегламентированныйОтчет4ФСС" И Форма = "ФормаОтчета2010Кв4" Тогда
		Возврат ЗначенияПоказателей_4ФСС_2010(ПараметрыОтчета);
	ИначеЕсли Отчет = "РегламентированныйОтчет4ФСС" И Форма = "ФормаОтчета2009Кв2" Тогда
		Возврат Получить4ФСС_2009из4ФСС_2007(ЗначенияПоказателей_4ФСС_2007Кв3(ПараметрыОтчета, 18000));
	ИначеЕсли Отчет = "РегламентированныйОтчет4ФСС" И Форма = "ФормаОтчета2007Кв3" Тогда
		Возврат ЗначенияПоказателей_4ФСС_2007Кв3(ПараметрыОтчета);
	ИначеЕсли Отчет = "РегламентированныйОтчет4аФСС" И Форма = "ФормаОтчета2007Кв1" Тогда
		Возврат ЗначенияПоказателей_4аФСС_2007Кв1(ПараметрыОтчета);
	ИначеЕсли Отчет = "РегламентированныйОтчет4аФСС" И Форма = "ФормаОтчета2009Кв2" Тогда
		Возврат ЗначенияПоказателей_4аФСС_2007Кв1(ПараметрыОтчета);
	КонецЕсли;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ВывестиЗначениеВГруппуЯчеек(СтрокаЗначения, УзелРазделаОтчета, ИмяГруппыЯчеек, КоличествоЗнакомест, Разделитель = "")

	ВсегоЗнаков = СтрДлина(СтрокаЗначения);
	Для СчСимволов = 1 По ВсегоЗнаков Цикл
		ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРазделаОтчета, ИмяГруппыЯчеек + Разделитель + Строка(КоличествоЗнакомест + 1 - СчСимволов), Сред(СтрокаЗначения, ВсегоЗнаков - СчСимволов + 1,1));
	КонецЦикла;
	Если ВсегоЗнаков < КоличествоЗнакомест Тогда
		Для СчСимволов = ВсегоЗнаков + 1 По КоличествоЗнакомест Цикл
			ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРазделаОтчета, ИмяГруппыЯчеек + Разделитель + Строка(КоличествоЗнакомест + 1 - СчСимволов), "");
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

Функция СуществуетАлгоритмАвтозаполнения(Отчет, Форма, ОтборОтчет, ОтборФорма)
	
	Возврат ?(ЗначениеЗаполнено(ОтборОтчет), ОтборОтчет = Отчет, Истина) И ?(ЗначениеЗаполнено(ОтборФорма), ОтборФорма = Форма, Истина);
	
КонецФункции

Функция ДобавитьСтрокуОписанияОтчета(ТаблицаОписаний, Отчет, Форма, ДоступностьРасшифровки, ЗаполняемыеПоказатели)
	
	// определяем строку в таблице возможностей модуля только в случае, когда строка удовлетворяет отбору по имени отчета и имени формы
	НовСтр = ТаблицаОписаний.Добавить();
	НовСтр.Отчет = Отчет;
	НовСтр.Форма = Форма;
	НовСтр.ДоступностьРасшифровки = ДоступностьРасшифровки;
	НовСтр.ЗаполняемыеПоказатели = ЗаполняемыеПоказатели;
	Возврат НовСтр;
	
КонецФункции

Функция ОпределитьСтрокуДереваЗаполняемыхПоказателей(Узел, Имя, ЗаполняетсяСКорректировкой = Неопределено)
	
	НовСтр = Узел.Строки.Добавить();
	НовСтр.Имя = Имя;
	Если ЗначениеЗаполнено(ЗаполняетсяСКорректировкой) Тогда
		НовСтр.ЗаполняетсяСКорректировкой = ЗаполняетсяСКорректировкой;
	КонецЕсли;
	Возврат НовСтр;
	
КонецФункции

Функция ОпределитьСтрокуВДеревеДанныхДляЗаполнения(Узел, Имя, Значение = Неопределено) 
	
	НовСтр = Узел.Строки.Добавить();
	НовСтр.Имя = Имя;
	НовСтр.Значение = Значение;
	Возврат НовСтр;
	
КонецФункции

// Преобразует выбранную пользователем единицу измерения - рубли, тыс.руб и т.д.
// в число для использования в запросах
//
// Параметры
//  ЕдиницаИзмерения - тип ПеречислениеСсылка.ПорядкиОкругленияОтчетности -
//                 выбранная пользователем единица измерения
//
// Возвращаемое значение:
//   число - соответствующее единице измерения
//
Функция ПреобразоватьЕдиницуИзмеренияВЧисло(ЕдиницаИзмерения)
	
	Если ЕдиницаИзмерения = Перечисления.ПорядкиОкругленияОтчетности.Окр1000 Тогда
		Делитель = 1000;
	ИначеЕсли ЕдиницаИзмерения = Перечисления.ПорядкиОкругленияОтчетности.Окр1000000 Тогда
		Делитель = 1000000;
	Иначе
		Делитель = 1;
	КонецЕсли;
	
	Возврат Делитель
	
КонецФункции // ПолучитьДелитель()

// Выводит в дерево показателей отчета строки из выполненного запроса.
// Важно! Имена полей запроса должны совпадать с именами показателей отчета.
//
// Параметры:
//  УзелРаздела - строка дерева показателей, описывающая раздел или таблицу раздела
//  РезультатЗапроса - результат исполненного запроса.
//
Процедура ВывестиРезультатЗапросаВДеревоПоказателей(УзелРаздела, РезультатЗапроса, ЭтоМногострочнаяЧасть = Ложь, ИмяМногострочнойЧасти = "")
	
	КолонкиРезультата = РезультатЗапроса.Колонки;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл 
		Если ЭтоМногострочнаяЧасть И ЗначениеЗаполнено(ИмяМногострочнойЧасти) Тогда
			УзелТаблицы = ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздела, ИмяМногострочнойЧасти);
		Иначе 
			УзелТаблицы = УзелРаздела
		КонецЕсли;
		Для Каждого Колонка из КолонкиРезультата Цикл
			Если Лев(Колонка.Имя,3) = "П00" Тогда
				ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелТаблицы, Колонка.Имя, ?(Не ЗначениеЗаполнено(Выборка[Колонка.Имя]),0,Выборка[Колонка.Имя]));
			КонецЕсли;
		КонецЦикла; 
	КонецЦикла; 
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ЗАПОЛНЕНИЯ

// Возвращает описание показателей отчета Расчет по взносам 
// для формы образца 2010 года
//
// Параметры:
//  нет
//
// Возвращаемое значение:
//	ДеревоЗначений с колонкой «Имя"
//
Функция ОписаниеПоказателей_РВ3_2010Кв1()
	
	ДеревоПоказателей = Новый ДеревоЗначений;
	ДеревоПоказателей.Колонки.Добавить("Имя");
	
	УзелРаздел = ОпределитьСтрокуДереваЗаполняемыхПоказателей(ДеревоПоказателей, "Раздел12");
	
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000100010003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000100011003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000100011103");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000100011203");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000100011303");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000100012003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000100014003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000100014103");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000100014203");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000100014303");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000100015003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200020003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200020004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200020005");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200020006");
	
	УзелРаздел = ОпределитьСтрокуДереваЗаполняемыхПоказателей(ДеревоПоказателей, "Раздел30");
	
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300051003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300052003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300053003");
	
	Возврат ДеревоПоказателей;
	
КонецФункции // ОписаниеПоказателей_РВ3_2010Кв1()

// Возвращает значения показателей отчета Расчет по взносам 
// для формы образца 2010 года, вычисленные по данным ИБ
//
// Параметры:
//  ПараметрыОтчета - структура, содержащая значения ключевых реквизитов заполняемого отчета. 
//		Структура содержит, как минимум, следующее:
//			Организация, тип СправочникСсылка.Организации
//			ДатаНачалаПериода, тип Дата
//			ДатаОкончанияПериода, тип Дата
//			ДатаПодписи, тип Дата
//			Периодичность, тип ПеречислениеСсылка.Периодичность
//
// Возвращаемое значение:
//	ДеревоЗначений с колонками «Имя" и «Значение"
//
Функция ЗначенияПоказателей_РВ3_2010Кв1(ПараметрыОтчета)
	
	ДеревоПоказателей = Новый ДеревоЗначений;
	ДеревоПоказателей.Колонки.Добавить("Имя");
	ДеревоПоказателей.Колонки.Добавить("Значение");
	
	ПустоеДерево = ДеревоПоказателей.Скопировать();
	
	ДатаКонцаПериодаОтчета = ПараметрыОтчета.ДатаОкончанияПериода;
	Организация = ПараметрыОтчета.Организация;
	
	МассивЗапросов = Новый Массив;
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("парамНачалоГода", НачалоГода(ДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("парамКонецОтчетногоПериода", КонецДня(ДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("парамГод", Год(ДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("Месяц1", Месяц(ДатаКонцаПериодаОтчета) - 2);
	Запрос.УстановитьПараметр("Месяц2", Месяц(ДатаКонцаПериодаОтчета) - 1);
	Запрос.УстановитьПараметр("Месяц3", Месяц(ДатаКонцаПериодаОтчета));
	// Все данные отчета берутся по обособленному подразделению (указанной организации)
	Запрос.УстановитьПараметр("парамОбособленноеПодразделение", Организация);
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация", ОбщегоНазначения.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("парамДатаПереходаНаВзносы", ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами());
	
	// ----------------------------------------------------------------------------------
	// ТЕКСТЫ ЗАПРОСОВ
	
	// конец месяца налогового периода
	КонецМесяца = КонецМесяца(НачалоГода(ДатаКонцаПериодаОтчета));
	// первый месяц
	ПериодыТекст = "ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ") КАК Период ПОМЕСТИТЬ ВТПериоды";
	// прибавим остальные месяцы
	Для Сч = 2 По Месяц(ДатаКонцаПериодаОтчета) Цикл
		КонецМесяца = КонецМесяца(КонецМесяца+1);
		ПериодыТекст = ПериодыТекст +" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ")";
	КонецЦикла;
	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить();
	
	ОсновнойТекст =
	"ВЫБРАТЬ
	|	СтраховыеВзносыСведенияОДоходахОбороты.Период,
	|	СтраховыеВзносыСведенияОДоходахОбороты.ФизЛицо КАК ФизЛицо,
	|	СтраховыеВзносыСведенияОДоходахОбороты.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	|	СтраховыеВзносыСведенияОДоходахОбороты.РезультатОборот,
	|	СтраховыеВзносыСведенияОДоходахОбороты.СкидкаОборот,
	|	СтраховыеВзносыСведенияОДоходахОбороты.ВидДохода.ВходитВБазуПФР КАК ВходитВБазуПФР
	|ПОМЕСТИТЬ ВТСведенияОДоходах
	|ИЗ
	|	РегистрНакопления.СтраховыеВзносыСведенияОДоходах.Обороты(&парамНачалоГода, &парамКонецОтчетногоПериода, МЕСЯЦ, Организация = &парамГоловнаяОрганизация) КАК СтраховыеВзносыСведенияОДоходахОбороты
	|ГДЕ
	|	СтраховыеВзносыСведенияОДоходахОбороты.ОблагаетсяПоДополнительномуТарифу
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	ОбособленноеПодразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОДоходах.ФизЛицо КАК ФизЛицо
	|ПОМЕСТИТЬ ВТФизлицаБезОблагаемойБазы
	|ИЗ
	|	ВТСведенияОДоходах КАК СведенияОДоходах
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходах.ФизЛицо
	|
	|ИМЕЮЩИЕ
	|	СУММА(СведенияОДоходах.РезультатОборот - СведенияОДоходах.СкидкаОборот) < 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтраховыеВзносыСведенияОДоходах.ФизЛицо КАК ФизЛицо
	|ПОМЕСТИТЬ ВТФизЛицаОрганизаций
	|ИЗ
	|	ВТСведенияОДоходах КАК СтраховыеВзносыСведенияОДоходах
	|ГДЕ
	|	СтраховыеВзносыСведенияОДоходах.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|	И (НЕ СтраховыеВзносыСведенияОДоходах.ФизЛицо В
	|				(ВЫБРАТЬ
	|					Организации.ФизЛицо
	|				ИЗ
	|					ВТФизлицаБезОблагаемойБазы КАК Организации))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СрезПоследнихДат.ПериодРегистрации КАК Период,
	|	СрезПоследнихДат.Физлицо КАК Физлицо,
	|	ГражданствоФизЛиц.НеИмеетПравоНаМедицинскоеСтрахование,
	|	ГражданствоФизЛиц.НеИмеетПравоНаПенсию
	|ПОМЕСТИТЬ ВТГражданство
	|ИЗ
	|	(ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ) КАК ПериодРегистрации,
	|		ГражданствоФизЛиц.ФизЛицо КАК Физлицо,
	|		МАКСИМУМ(ГражданствоФизЛиц.Период) КАК Период
	|	ИЗ
	|		ВТПериоды КАК Периоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|			ПО Периоды.Период >= ГражданствоФизЛиц.Период
	|	ГДЕ
	|		ГражданствоФизЛиц.ФизЛицо В
	|				(ВЫБРАТЬ
	|					Организации.ФизЛицо
	|				ИЗ
	|					ВТФизЛицаОрганизаций КАК Организации)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ГражданствоФизЛиц.ФизЛицо,
	|		Периоды.Период) КАК СрезПоследнихДат
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|		ПО СрезПоследнихДат.Период = ГражданствоФизЛиц.Период
	|			И СрезПоследнихДат.Физлицо = ГражданствоФизЛиц.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОДоходах.ФизЛицо КАК ФизЛицо,
	|	Периоды.Период КАК Период,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(Гражданство.НеИмеетПравоНаПенсию, ЛОЖЬ)
	|				ТОГДА 0
	|			КОГДА (НЕ СведенияОДоходах.ВходитВБазуПФР)
	|				ТОГДА 0
	|			ИНАЧЕ СведенияОДоходах.РезультатОборот - СведенияОДоходах.СкидкаОборот
	|		КОНЕЦ) КАК ЗаМесяц
	|ПОМЕСТИТЬ ВТДоходыВзносов
	|ИЗ
	|	ВТПериоды КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОДоходах КАК СведенияОДоходах
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТГражданство КАК Гражданство
	|			ПО СведенияОДоходах.Период = Гражданство.Период
	|				И СведенияОДоходах.ФизЛицо = Гражданство.Физлицо
	|		ПО (СведенияОДоходах.Период МЕЖДУ НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ) И Периоды.Период)
	|ГДЕ
	|	СведенияОДоходах.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|	И СведенияОДоходах.ФизЛицо В
	|			(ВЫБРАТЬ
	|				Организации.ФизЛицо
	|			ИЗ
	|				ВТФизЛицаОрганизаций КАК Организации)
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходах.ФизЛицо,
	|	Периоды.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(Доходы.ЗаМесяц) КАК П000200020003,
	|	СУММА(ВЫБОР
	|			КОГДА МЕСЯЦ(Доходы.Период) = &Месяц1
	|				ТОГДА Доходы.ЗаМесяц
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000200020004,
	|	СУММА(ВЫБОР
	|			КОГДА МЕСЯЦ(Доходы.Период) = &Месяц2
	|				ТОГДА Доходы.ЗаМесяц
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000200020005,
	|	СУММА(ВЫБОР
	|			КОГДА МЕСЯЦ(Доходы.Период) = &Месяц3
	|				ТОГДА Доходы.ЗаМесяц
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000200020006
	|ИЗ
	|	ВТДоходыВзносов КАК Доходы";
	
	РасчетыСФондамиТекст = 
	"ВЫБРАТЬ
	|	РасчетыПоСтраховымВзносамОбороты.ВидПлатежа КАК ВидПлатежа,
	|	РасчетыПоСтраховымВзносамОбороты.Период КАК Период,
	|	РасчетыПоСтраховымВзносамОбороты.ПФРПоДополнительномуТарифуРасход,
	|	РасчетыПоСтраховымВзносамОбороты.ПФРПоДополнительномуТарифуПриход
	|ПОМЕСТИТЬ ВТРасчетыСФондом
	|ИЗ
	|	РегистрНакопления.РасчетыПоСтраховымВзносам.Обороты(
	|			&парамНачалоГода,
	|			&парамКонецОтчетногоПериода,
	|			Месяц,
	|			Организация = &парамОбособленноеПодразделение
	|				И МесяцРасчетногоПериода >= &парамДатаПереходаНаВзносы
	|				И ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогАкт))) КАК РасчетыПоСтраховымВзносамОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог)
	|				ТОГДА РасчетыСФондом.ПФРПоДополнительномуТарифуПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000100011003,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц1
	|				ТОГДА РасчетыСФондом.ПФРПоДополнительномуТарифуПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000100011103,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц2
	|				ТОГДА РасчетыСФондом.ПФРПоДополнительномуТарифуПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000100011203,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц3
	|				ТОГДА РасчетыСФондом.ПФРПоДополнительномуТарифуПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000100011303,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогАкт)
	|				ТОГДА РасчетыСФондом.ПФРПоДополнительномуТарифуПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000100012003,
	|	СУММА(РасчетыСФондом.ПФРПоДополнительномуТарифуРасход) КАК П000100014003,
	|	СУММА(ВЫБОР
	|			КОГДА МЕСЯЦ(РасчетыСФондом.Период) = &Месяц1
	|				ТОГДА РасчетыСФондом.ПФРПоДополнительномуТарифуРасход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000100014103,
	|	СУММА(ВЫБОР
	|			КОГДА МЕСЯЦ(РасчетыСФондом.Период) = &Месяц2
	|				ТОГДА РасчетыСФондом.ПФРПоДополнительномуТарифуРасход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000100014203,
	|	СУММА(ВЫБОР
	|			КОГДА МЕСЯЦ(РасчетыСФондом.Период) = &Месяц3
	|				ТОГДА РасчетыСФондом.ПФРПоДополнительномуТарифуРасход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000100014303
	|ИЗ
	|	ВТРасчетыСФондом КАК РасчетыСФондом";
	
	ОстаткиПрошлыхЛетТекст = 
	"ВЫБРАТЬ
	|	РасчетыПоСтраховымВзносамОстаткиИОбороты.ПФРПоДополнительномуТарифуРасход КАК П000300052003,
	|	РасчетыПоСтраховымВзносамОстаткиИОбороты.ПФРПоДополнительномуТарифуНачальныйОстаток КАК П000300051003
	|ИЗ
	|	РегистрНакопления.РасчетыПоСтраховымВзносам.ОстаткиИОбороты(
	|			&парамНачалоГода,
	|			&парамКонецОтчетногоПериода,
	|			,
	|			,
	|			Организация = &парамОбособленноеПодразделение
	|				И МесяцРасчетногоПериода < &парамДатаПереходаНаВзносы
	|				И ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогАкт))) КАК РасчетыПоСтраховымВзносамОстаткиИОбороты";
	
	// -------------------------------------------------------------------------------
	// Вывод данных в отчет
	
	УзелРаздел12 = ОпределитьСтрокуВДеревеДанныхДляЗаполнения(ДеревоПоказателей, "Раздел12");
	
	// Раздел 1 
	
	Запрос.Текст = РасчетыСФондамиТекст;
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Результат = Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	ВывестиРезультатЗапросаВДеревоПоказателей(УзелРаздел12,Результат); 
	
	// Раздел 2
	
	Запрос.Текст = ОсновнойТекст;
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Результат = Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	ВывестиРезультатЗапросаВДеревоПоказателей(УзелРаздел12,Результат); 
	
	// Раздел 5 
	
	УзелРаздел5 = ОпределитьСтрокуВДеревеДанныхДляЗаполнения(ДеревоПоказателей, "Раздел30");
	
	Запрос.Текст = ОстаткиПрошлыхЛетТекст;
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Результат = Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	ВывестиРезультатЗапросаВДеревоПоказателей(УзелРаздел5,Результат); 
	
	Возврат ДеревоПоказателей;
	
КонецФункции // ЗначенияПоказателей_РВ3_2010Кв1()

// Возвращает описание показателей отчета Расчет по страховым взносам 
// для формы образца 2010 года
//
// Параметры:
//  нет
//
// Возвращаемое значение:
//	ДеревоЗначений с колонкой «Имя"
//
Функция ОписаниеПоказателей_РСВ1_2010Кв1()
	
	ДеревоПоказателей = Новый ДеревоЗначений;
	ДеревоПоказателей.Колонки.Добавить("Имя");
	
	УзелРаздел = ОпределитьСтрокуДереваЗаполняемыхПоказателей(ДеревоПоказателей, "Раздел12");
	
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000100010003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000100012003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000100014003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000100014103");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000100014203");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000100014303");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000100010004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000100012004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000100014004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000100014104");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000100014204");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000100014304");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000100010005");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000100012005");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000100014005");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000100014105");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000100014205");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000100014305");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000100010006");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000100012006");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000100014006");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000100014106");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000100014206");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000100014306");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200001001_1");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200001002_1");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200020103");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200020203");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200021103");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200021203");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200021403");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200021503");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200021703");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200021803");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200023003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200024103");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200024203");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200024303");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200024403");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200020104");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200020204");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200021104");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200021204");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200021404");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200021504");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200021704");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200021804");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200023004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200024104");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200024204");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200024304");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200024404");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200020105");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200020205");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200021105");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200021205");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200021405");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200021505");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200021705");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200021805");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200023005");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200024105");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200024205");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200024305");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200024405");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200020106");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200020206");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200021106");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200021206");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200021406");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200021506");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200021706");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200021806");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200023006");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200024106");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200024206");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200024306");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000200024406");	
	
	УзелРаздел = ОпределитьСтрокуДереваЗаполняемыхПоказателей(ДеревоПоказателей, "Раздел30");
	
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300030103");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300030203");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300031103");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300031203");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300031403");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300031503");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300031703");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300031803");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300033003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300034103");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300034203");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300034303");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300034403");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300035103");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300035203");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300036103");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300036203");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300036403");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300036503");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300039103");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300039203");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300039303");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300039403");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300030104");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300030204");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300031104");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300031204");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300031404");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300031504");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300031704");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300031804");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300033004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300034104");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300034204");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300034304");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300034404");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300035104");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300035204");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300036104");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300036204");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300036404");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300036504");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300039104");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300039204");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300039304");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300039404");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300030105");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300030205");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300031105");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300031205");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300031405");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300031505");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300031705");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300031805");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300033005");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300034105");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300034205");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300034305");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300034405");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300035105");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300035205");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300036105");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300036205");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300036405");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300036505");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300039105");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300039205");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300039305");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300039405");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300030106");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300030206");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300031106");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300031206");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300031406");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300031506");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300031706");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300031806");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300033006");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300034106");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300034206");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300034306");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300034406");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300035106");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300035206");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300036106");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300036206");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300036406");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300036506");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300039106");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300039206");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300039306");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000300039406");
	
	УзелРаздел = ОпределитьСтрокуДереваЗаполняемыхПоказателей(ДеревоПоказателей, "Раздел41");
	
	//ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000410001001");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000410001002");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000410001003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000410001004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000410001005");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000410001006");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000410001007");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000410001008");
	
	УзелРаздел = ОпределитьСтрокуДереваЗаполняемыхПоказателей(ДеревоПоказателей, "Раздел50");
	
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000500051003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000500052003");
	//ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000500053003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000500051004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000500052004");
	//ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел, "П000500053004");	
	
	Возврат ДеревоПоказателей;
	
КонецФункции // ОписаниеПоказателей_РСВ1_2010Кв1()




// Выводит в дерево показателей отчета строки из переданной таблицы значений.
// Важно! Имена колонок должны совпадать с именами показателей отчета.
//
// Параметры:
//  УзелРаздела - строка дерева показателей, описывающая раздел или таблицу раздела
//  ТаблицаДанных - таблица значений.
//
Процедура ВывестиТаблицуДанныхВДеревоПоказателей(УзелРаздела, ТаблицаДанных, ЭтоМногострочнаяЧасть = Ложь, ИмяМногострочнойЧасти = "")
	
	КолонкиРезультата = ТаблицаДанных.Колонки;
	
	Если ЭтоМногострочнаяЧасть И ЗначениеЗаполнено(ИмяМногострочнойЧасти) Тогда
		Для каждого СтрокаДанных Из ТаблицаДанных Цикл
			УзелТаблицы = ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздела, ИмяМногострочнойЧасти);
			Для Каждого Колонка из КолонкиРезультата Цикл
				Если Лев(Колонка.Имя,3) = "П00" Тогда
					ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелТаблицы, Колонка.Имя, ?(Не ЗначениеЗаполнено(СтрокаДанных[Колонка.Имя]),0,СтрокаДанных[Колонка.Имя]));
				КонецЕсли;
			КонецЦикла; 
		КонецЦикла;
	Иначе 
		СтрокаДанных = ТаблицаДанных[0];
		Для Каждого Колонка из КолонкиРезультата Цикл
			Если Лев(Колонка.Имя,3) = "П00" Тогда
				ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздела, Колонка.Имя, ?(Не ЗначениеЗаполнено(СтрокаДанных[Колонка.Имя]),0,СтрокаДанных[Колонка.Имя]));
			КонецЕсли;
		КонецЦикла; 
	КонецЕсли;
	
КонецПроцедуры

Процедура ОкруглитьДваСлагаемыхПоСумме(ПервоеСлагаемое, ВтороеСлагаемое, Сумма, Точность = 0)
	
	Если Окр(ПервоеСлагаемое,Точность) + Окр(ВтороеСлагаемое,Точность) = Сумма Тогда
		ПервоеСлагаемое = Окр(ПервоеСлагаемое,Точность);
		ВтороеСлагаемое = Окр(ВтороеСлагаемое,Точность);
	Иначе
		РасхождениеСуммы = Сумма - Окр(ПервоеСлагаемое,Точность) - Окр(ВтороеСлагаемое,Точность);
		ПервоеРасхождение = ?(Окр(ПервоеСлагаемое,Точность) < ПервоеСлагаемое, ПервоеСлагаемое - Окр(ПервоеСлагаемое,Точность), Окр(ПервоеСлагаемое,Точность) - ПервоеСлагаемое);
		ВтороеРасхождение = ?(Окр(ВтороеСлагаемое,Точность) < ВтороеСлагаемое, ВтороеСлагаемое - Окр(ВтороеСлагаемое,Точность), Окр(ВтороеСлагаемое,Точность) - ВтороеСлагаемое);
		ПервоеСлагаемое = Окр(ПервоеСлагаемое,Точность);
		ВтороеСлагаемое = Окр(ВтороеСлагаемое,Точность);
		Если ПервоеРасхождение <= ВтороеРасхождение Тогда
			ВтороеСлагаемое = ВтороеСлагаемое + РасхождениеСуммы; 
		Иначе
			ПервоеСлагаемое = ПервоеСлагаемое + РасхождениеСуммы; 
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОкруглитьСлагаемыеПоСумме(Данные, ИмяКолонки, Сумма, Точность = 0, ИмяКлюча = "ФизЛицо")
	
	ВременнаяТаблица = Данные.Скопировать(, ИмяКлюча + "," + ИмяКолонки);
	ВременнаяТаблица.Колонки.Добавить(ИмяКолонки + "Окр");
	Для каждого СтрокаТЗ Из ВременнаяТаблица Цикл
		СтрокаТЗ[ИмяКолонки + "Окр"] = Окр(СтрокаТЗ[ИмяКолонки],Точность)
	КонецЦикла;
	
	СуммаСлагаемых = ВременнаяТаблица.Итог(ИмяКолонки + "Окр");
	Если СуммаСлагаемых = Сумма Тогда
		Данные.ЗагрузитьКолонку(ВременнаяТаблица.ВыгрузитьКолонку(ИмяКолонки + "Окр"),ИмяКолонки);
	Иначе
		Шаг = Pow(10, -Точность);
		РасхождениеСуммы = Сумма - СуммаСлагаемых;
		Приращение = ?(РасхождениеСуммы > 0, Шаг, -Шаг);
		ВсегоПриращений = РасхождениеСуммы / Приращение;
		ВременнаяТаблица.Колонки.Добавить(ИмяКолонки + "Расхождение");
		ВременнаяТаблица.Колонки.Добавить(ИмяКолонки + "Изменение");
		Для каждого СтрокаТЗ Из ВременнаяТаблица Цикл
			СтрокаТЗ[ИмяКолонки + "Расхождение"] = ?(СтрокаТЗ[ИмяКолонки + "Окр"] < СтрокаТЗ[ИмяКолонки], СтрокаТЗ[ИмяКолонки] - СтрокаТЗ[ИмяКолонки + "Окр"], СтрокаТЗ[ИмяКолонки + "Окр"] - СтрокаТЗ[ИмяКолонки]);
			СтрокаТЗ[ИмяКолонки + "Изменение"] = ?(СтрокаТЗ[ИмяКолонки + "Окр"] < СтрокаТЗ[ИмяКолонки], - Шаг, Шаг);
		КонецЦикла;
		ВременнаяТаблица.Сортировать(ИмяКолонки + "Расхождение Убыв");
		Для Сч = 1 По ВсегоПриращений Цикл
			Если ВременнаяТаблица[Сч-1][ИмяКолонки + "Изменение"] <> Приращение Тогда
				СтрокаДанных = Данные.Найти(ВременнаяТаблица[Сч-1][ИмяКлюча],ИмяКлюча);
				СтрокаДанных[ИмяКолонки] = ВременнаяТаблица[Сч-1][ИмяКолонки + "Окр"] + Приращение;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры



// Возвращает значения показателей отчета Расчет по страховым взносам 
// для формы образца 2010 года, вычисленные по данным ИБ
//
// Параметры:
//  ПараметрыОтчета - структура, содержащая значения ключевых реквизитов заполняемого отчета. 
//		Структура содержит, как минимум, следующее:
//			Организация, тип СправочникСсылка.Организации
//			ДатаНачалаПериода, тип Дата
//			ДатаОкончанияПериода, тип Дата
//			ДатаПодписи, тип Дата
//			Периодичность, тип ПеречислениеСсылка.Периодичность
//
// Возвращаемое значение:
//	ДеревоЗначений с колонками «Имя" и «Значение"
//
Функция ЗначенияПоказателей_РСВ1_2010Кв1(ПараметрыОтчета)
	
	ДеревоПоказателей = Новый ДеревоЗначений;
	ДеревоПоказателей.Колонки.Добавить("Имя");
	ДеревоПоказателей.Колонки.Добавить("Значение");
	
	ПустоеДерево = ДеревоПоказателей.Скопировать();
		
	ДатаКонцаПериодаОтчета = ПараметрыОтчета.ДатаОкончанияПериода;
	Организация = ПараметрыОтчета.Организация;
	
	СоответствиеКодовТарифа = Новый Соответствие;
	СоответствиеКодовТарифа.Вставить(Перечисления.ТарифыСтраховыхВзносов.ОбщийНалоговыйРежим, "01");
	СоответствиеКодовТарифа.Вставить(Перечисления.ТарифыСтраховыхВзносов.СельХозПроизводители, "02");
	СоответствиеКодовТарифа.Вставить(Перечисления.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов, "03");
	СоответствиеКодовТарифа.Вставить(Перечисления.ТарифыСтраховыхВзносов.ЕСХН, "04");
	Если ДатаКонцаПериодаОтчета < ПроведениеРасчетов.ДатаРасширенияПеречняЛьготныхТарифовСтраховыхВзносов() Тогда
		СоответствиеКодовТарифа.Вставить(Перечисления.ТарифыСтраховыхВзносов.ЕНВД, "05");
		СоответствиеКодовТарифа.Вставить(Перечисления.ТарифыСтраховыхВзносов.УпрощенныйНалоговыйРежим, "05");
		СоответствиеКодовТарифа.Вставить(Перечисления.ТарифыСтраховыхВзносов.РезидентТехникоВнедренческойЗоны, "03");
		СоответствиеКодовТарифа.Вставить(Перечисления.ТарифыСтраховыхВзносов.ITОрганизации, "06");
	Иначе
		СоответствиеКодовТарифа.Вставить(Перечисления.ТарифыСтраховыхВзносов.ЕНВД, "51");
		СоответствиеКодовТарифа.Вставить(Перечисления.ТарифыСтраховыхВзносов.УпрощенныйНалоговыйРежим, "51");
		СоответствиеКодовТарифа.Вставить(Перечисления.ТарифыСтраховыхВзносов.НародныеХудожественныеПромыслы, "02");
		СоответствиеКодовТарифа.Вставить(Перечисления.ТарифыСтраховыхВзносов.РезидентТехникоВнедренческойЗоны, "36");
		СоответствиеКодовТарифа.Вставить(Перечисления.ТарифыСтраховыхВзносов.ITОрганизации, "06");
		СоответствиеКодовТарифа.Вставить(Перечисления.ТарифыСтраховыхВзносов.УпрощенныйНалоговыйРежимПроизводство, "07");
		СоответствиеКодовТарифа.Вставить(Перечисления.ТарифыСтраховыхВзносов.ХозОбществаБюджетныхВУЗов, "08");
		СоответствиеКодовТарифа.Вставить(Перечисления.ТарифыСтраховыхВзносов.СМИ, "09");
		СоответствиеКодовТарифа.Вставить(Перечисления.ТарифыСтраховыхВзносов.УчастникПроектаИнновационныйЦентрСколково, "10");
	КонецЕсли;

	
	МассивЗапросов = Новый Массив;
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("парамНачалоГода", НачалоГода(ДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("парамКонецОтчетногоПериода", КонецДня(ДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("парамГод", Год(ДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("Месяц1", Месяц(ДатаКонцаПериодаОтчета) - 2);
	Запрос.УстановитьПараметр("Месяц2", Месяц(ДатаКонцаПериодаОтчета) - 1);
	Запрос.УстановитьПараметр("Месяц3", Месяц(ДатаКонцаПериодаОтчета));
	// Все данные отчета берутся по обособленному подразделению (указанной организации)
	Запрос.УстановитьПараметр("парамОбособленноеПодразделение", Организация);
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация", ОбщегоНазначения.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("парамДатаПереходаНаВзносы", ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами());
	Запрос.УстановитьПараметр("ДатаНовойРедакцииЗакона212", ПроведениеРасчетов.ДатаРасширенияПеречняЛьготныхТарифовСтраховыхВзносов());
	
	// ----------------------------------------------------------------------------------
	// ТЕКСТЫ ЗАПРОСОВ
	
	// конец месяца налогового периода
	КонецМесяца = КонецМесяца(НачалоГода(ДатаКонцаПериодаОтчета));
	// первый месяц
	ПериодыТекст = "ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ") КАК Период ПОМЕСТИТЬ ВТПериоды";
	// прибавим остальные месяцы
	Для Сч = 2 По Месяц(ДатаКонцаПериодаОтчета) Цикл
		КонецМесяца = КонецМесяца(КонецМесяца+1);
    	ПериодыТекст = ПериодыТекст +" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ")";
	КонецЦикла;
	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить();
	
	ОсновнойТекст =
	"ВЫБРАТЬ
	|	СтраховыеВзносыСведенияОДоходахОбороты.Период,
	|	СтраховыеВзносыСведенияОДоходахОбороты.ФизЛицо КАК ФизЛицо,
	|	СтраховыеВзносыСведенияОДоходахОбороты.ВидДохода,
	|	СтраховыеВзносыСведенияОДоходахОбороты.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	|	СУММА(СтраховыеВзносыСведенияОДоходахОбороты.РезультатОборот) КАК РезультатОборот,
	|	СУММА(СтраховыеВзносыСведенияОДоходахОбороты.СкидкаОборот) КАК СкидкаОборот,
	|	СтраховыеВзносыСведенияОДоходахОбороты.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД
	|ПОМЕСТИТЬ ВТСведенияОДоходах
	|ИЗ
	|	РегистрНакопления.СтраховыеВзносыСведенияОДоходах.Обороты(&парамНачалоГода, &парамКонецОтчетногоПериода, МЕСЯЦ, Организация = &парамГоловнаяОрганизация) КАК СтраховыеВзносыСведенияОДоходахОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	СтраховыеВзносыСведенияОДоходахОбороты.Период,
	|	СтраховыеВзносыСведенияОДоходахОбороты.ФизЛицо,
	|	СтраховыеВзносыСведенияОДоходахОбороты.ВидДохода,
	|	СтраховыеВзносыСведенияОДоходахОбороты.ОбособленноеПодразделение,
	|	СтраховыеВзносыСведенияОДоходахОбороты.ОблагаетсяЕНВД
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	ОбособленноеПодразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтраховыеВзносыИсчисленные.Период,
	|	СтраховыеВзносыИсчисленные.ФизЛицо КАК ФизЛицо,
	|	СтраховыеВзносыИсчисленные.ПФРСтраховаяОборот КАК ПФРСтраховаяОборот,
	|	СтраховыеВзносыИсчисленные.ПФРНакопительнаяОборот КАК ПФРНакопительнаяОборот,
	|	СтраховыеВзносыИсчисленные.ПФРСтраховаяЕНВДОборот КАК ПФРСтраховаяЕНВДОборот,
	|	СтраховыеВзносыИсчисленные.ПФРНакопительнаяЕНВДОборот КАК ПФРНакопительнаяЕНВДОборот,
	|	СтраховыеВзносыИсчисленные.ФФОМСОборот,
	|	СтраховыеВзносыИсчисленные.ТФОМСОборот,
	|	СтраховыеВзносыИсчисленные.ФФОМСЕНВДОборот,
	|	СтраховыеВзносыИсчисленные.ТФОМСЕНВДОборот
	|ПОМЕСТИТЬ ВТВзносыИсчисленные
	|ИЗ
	|	РегистрНакопления.СтраховыеВзносыИсчисленные.Обороты(
	|			&парамНачалоГода,
	|			&парамКонецОтчетногоПериода,
	|			МЕСЯЦ,
	|			Организация = &парамГоловнаяОрганизация
	|				И ОбособленноеПодразделение = &парамОбособленноеПодразделение) КАК СтраховыеВзносыИсчисленные
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОДоходах.ФизЛицо КАК ФизЛицо
	|ПОМЕСТИТЬ ВТФизлицаБезОблагаемойБазы
	|ИЗ
	|	ВТСведенияОДоходах КАК СведенияОДоходах
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходах.ФизЛицо
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВЫБОР
	|			КОГДА СведенияОДоходах.ВидДохода.ВходитВБазуПФР
	|					ИЛИ СведенияОДоходах.ВидДохода.ВходитВБазуФОМС
	|				ТОГДА СведенияОДоходах.РезультатОборот - СведенияОДоходах.СкидкаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) < 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтраховыеВзносыСведенияОДоходах.ФизЛицо КАК ФизЛицо
	|ПОМЕСТИТЬ ВТФизЛицаОрганизаций
	|ИЗ
	|	ВТСведенияОДоходах КАК СтраховыеВзносыСведенияОДоходах
	|ГДЕ
	|	СтраховыеВзносыСведенияОДоходах.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|	И (НЕ СтраховыеВзносыСведенияОДоходах.ФизЛицо В
	|				(ВЫБРАТЬ
	|					Организации.ФизЛицо
	|				ИЗ
	|					ВТФизлицаБезОблагаемойБазы КАК Организации))
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	СтраховыеВзносыИсчисленные.ФизЛицо
	|ИЗ
	|	ВТВзносыИсчисленные КАК СтраховыеВзносыИсчисленные
	|ГДЕ
	|	(НЕ СтраховыеВзносыИсчисленные.ФизЛицо В
	|				(ВЫБРАТЬ
	|					Организации.ФизЛицо
	|				ИЗ
	|					ВТФизлицаБезОблагаемойБазы КАК Организации))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФИОФизЛицСрезПоследних.ФизЛицо КАК ФизЛицо,
	|	ФИОФизЛицСрезПоследних.Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя,
	|	ФИОФизЛицСрезПоследних.Отчество
	|ПОМЕСТИТЬ ВТФИОФизлиц
	|ИЗ
	|	РегистрСведений.ФИОФизЛиц.СрезПоследних(
	|			&парамКонецОтчетногоПериода,
	|			ФизЛицо В
	|				(ВЫБРАТЬ
	|					Организации.ФизЛицо
	|				ИЗ
	|					ВТФизЛицаОрганизаций КАК Организации)) КАК ФИОФизЛицСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СрезПоследнихДат.ПериодРегистрации КАК Период,
	|	СрезПоследнихДат.Физлицо КАК Физлицо,
	|	СведенияОбИнвалидностиФизлиц.Инвалидность,
	|	СведенияОбИнвалидностиФизлиц.ДатаВыдачи,
	|	СведенияОбИнвалидностиФизлиц.СрокДействияСправки
	|ПОМЕСТИТЬ ВТИнвалиды
	|ИЗ
	|	(ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ) КАК ПериодРегистрации,
	|		СведенияОбИнвалидностиФизлиц.Физлицо КАК Физлицо,
	|		МАКСИМУМ(СведенияОбИнвалидностиФизлиц.Период) КАК Период
	|	ИЗ
	|		ВТПериоды КАК Периоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК СведенияОбИнвалидностиФизлиц
	|			ПО Периоды.Период >= СведенияОбИнвалидностиФизлиц.Период
	|	ГДЕ
	|		СведенияОбИнвалидностиФизлиц.Физлицо В
	|				(ВЫБРАТЬ
	|					Организации.ФизЛицо
	|				ИЗ
	|					ВТФизЛицаОрганизаций КАК Организации)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СведенияОбИнвалидностиФизлиц.Физлицо,
	|		Периоды.Период) КАК СрезПоследнихДат
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК СведенияОбИнвалидностиФизлиц
	|		ПО СрезПоследнихДат.Период = СведенияОбИнвалидностиФизлиц.Период
	|			И СрезПоследнихДат.Физлицо = СведенияОбИнвалидностиФизлиц.Физлицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Инвалиды.Физлицо КАК Физлицо,
	|	МАКСИМУМ(Инвалиды.ДатаВыдачи) КАК ДатаВыдачи,
	|	МАКСИМУМ(Инвалиды.СрокДействияСправки) КАК СрокДействияСправки
	|ПОМЕСТИТЬ ВТСправкиОбИнвалидности
	|ИЗ
	|	ВТИнвалиды КАК Инвалиды
	|ГДЕ
	|	Инвалиды.Инвалидность
	|
	|СГРУППИРОВАТЬ ПО
	|	Инвалиды.Физлицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СрезПоследнихДат.ПериодРегистрации КАК Период,
	|	СрезПоследнихДат.Физлицо КАК Физлицо,
	|	ГражданствоФизЛиц.НеИмеетПравоНаМедицинскоеСтрахование,
	|	ГражданствоФизЛиц.НеИмеетПравоНаПенсию
	|ПОМЕСТИТЬ ВТГражданство
	|ИЗ
	|	(ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ) КАК ПериодРегистрации,
	|		ГражданствоФизЛиц.ФизЛицо КАК Физлицо,
	|		МАКСИМУМ(ГражданствоФизЛиц.Период) КАК Период
	|	ИЗ
	|		ВТПериоды КАК Периоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|			ПО Периоды.Период >= ГражданствоФизЛиц.Период
	|	ГДЕ
	|		ГражданствоФизЛиц.ФизЛицо В
	|				(ВЫБРАТЬ
	|					Организации.ФизЛицо
	|				ИЗ
	|					ВТФизЛицаОрганизаций КАК Организации)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ГражданствоФизЛиц.ФизЛицо,
	|		Периоды.Период) КАК СрезПоследнихДат
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|		ПО СрезПоследнихДат.Период = ГражданствоФизЛиц.Период
	|			И СрезПоследнихДат.Физлицо = ГражданствоФизЛиц.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА СУММА(ВЫБОР
	|						КОГДА СведенияОДоходах.ОблагаетсяЕНВД
	|							ТОГДА СведенияОДоходах.РезультатОборот
	|						ИНАЧЕ 0
	|					КОНЕЦ) > 0
	|				И СУММА(ВЫБОР
	|						КОГДА (НЕ СведенияОДоходах.ОблагаетсяЕНВД)
	|							ТОГДА СведенияОДоходах.РезультатОборот
	|						ИНАЧЕ 0
	|					КОНЕЦ) = 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ТолькоЕНВД
	|ПОМЕСТИТЬ ВТВидыДеятельности
	|ИЗ
	|	ВТСведенияОДоходах КАК СведенияОДоходах
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ) КАК Период,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(УчетнаяПолитикаНалоговыйУчет.ВидТарифаСтраховыхВзносов, ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОбщийНалоговыйРежим)) = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОбщийНалоговыйРежим)
	|				И ВидыДеятельности.ТолькоЕНВД
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|		ИНАЧЕ ЕСТЬNULL(УчетнаяПолитикаНалоговыйУчет.ВидТарифаСтраховыхВзносов, ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОбщийНалоговыйРежим))
	|	КОНЕЦ КАК ВидТарифаСтраховыхВзносов
	|ПОМЕСТИТЬ ВТВидыТарифныхСтавокОрганизаций
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период КАК Период,
	|		УчетнаяПолитикаНалоговыйУчет.Организация КАК Организация,
	|		МАКСИМУМ(УчетнаяПолитикаНалоговыйУчет.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВТПериоды КАК Периоды
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаНалоговыйУчет
	|			ПО Периоды.Период >= УчетнаяПолитикаНалоговыйУчет.Период
	|				И (УчетнаяПолитикаНалоговыйУчет.Организация = &парамГоловнаяОрганизация)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период,
	|		УчетнаяПолитикаНалоговыйУчет.Организация) КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаНалоговыйУчет
	|		ПО Периоды.ПериодРегистра = УчетнаяПолитикаНалоговыйУчет.Период
	|			И Периоды.Организация = УчетнаяПолитикаНалоговыйУчет.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВидыДеятельности КАК ВидыДеятельности
	|		ПО (ИСТИНА)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОбщийНалоговыйРежим) КАК ВидТарифаСтраховыхВзносов,
	|	ИСТИНА КАК ВыделятьДоходыИнвалидов,
	|	ИСТИНА КАК ВыделятьДоходыПоЕНВД,
	|	2010 КАК ГодС,
	|	2100 КАК ГодПо
	|ПОМЕСТИТЬ ВТСоответствиеПониженныхТарифов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.УпрощенныйНалоговыйРежим),
	|	ИСТИНА,
	|	ЛОЖЬ,
	|	2011,
	|	2100
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД),
	|	ИСТИНА,
	|	ЛОЖЬ,
	|	2011,
	|	2100
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.РезидентТехникоВнедренческойЗоны),
	|	ИСТИНА,
	|	ЛОЖЬ,
	|	2011,
	|	2100
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ITОрганизации),
	|	ИСТИНА,
	|	ЛОЖЬ,
	|	2011,
	|	2100
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ХозОбществаБюджетныхВУЗов),
	|	ИСТИНА,
	|	ЛОЖЬ,
	|	2011,
	|	2100
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.СМИ),
	|	ИСТИНА,
	|	ЛОЖЬ,
	|	2011,
	|	2100
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.УпрощенныйНалоговыйРежимПроизводство),
	|	ИСТИНА,
	|	ЛОЖЬ,
	|	2011,
	|	2100
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.УчастникПроектаИнновационныйЦентрСколково),
	|	ИСТИНА,
	|	ЛОЖЬ,
	|	2010,
	|	2100
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.СельХозПроизводители),
	|	ИСТИНА,
	|	ИСТИНА,
	|	2010,
	|	2010
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕСХН),
	|	ИСТИНА,
	|	ИСТИНА,
	|	2010,
	|	2010
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтраховыеВзносыСведенияОДоходах.Период КАК Период,
	|	СтраховыеВзносыСведенияОДоходах.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	|	СтраховыеВзносыСведенияОДоходах.ФизЛицо КАК ФизЛицо,
	|	СтраховыеВзносыСведенияОДоходах.ВидДохода,
	|	ВЫБОР
	|		КОГДА ВЫБОР
	|				КОГДА ЕСТЬNULL(Инвалиды.Инвалидность, ЛОЖЬ)
	|						И ЕСТЬNULL(СоответствиеПониженныхТарифов.ВыделятьДоходыИнвалидов, ЛОЖЬ)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|				КОГДА СтраховыеВзносыСведенияОДоходах.ОблагаетсяЕНВД
	|						И ЕСТЬNULL(СоответствиеПониженныхТарифов.ВыделятьДоходыПоЕНВД, ЛОЖЬ)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|				ИНАЧЕ ВидыТарифныхСтавок.ВидТарифаСтраховыхВзносов
	|			КОНЕЦ = ВидыТарифныхСтавок.ВидТарифаСтраховыхВзносов
	|			ТОГДА ЛОЖЬ
	|		КОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(Инвалиды.Инвалидность, ЛОЖЬ)
	|							И ЕСТЬNULL(СоответствиеПониженныхТарифов.ВыделятьДоходыИнвалидов, ЛОЖЬ)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|					КОГДА СтраховыеВзносыСведенияОДоходах.ОблагаетсяЕНВД
	|							И ЕСТЬNULL(СоответствиеПониженныхТарифов.ВыделятьДоходыПоЕНВД, ЛОЖЬ)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|					ИНАЧЕ ВидыТарифныхСтавок.ВидТарифаСтраховыхВзносов
	|				КОНЕЦ = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|				И СтраховыеВзносыСведенияОДоходах.Период >= &ДатаНовойРедакцииЗакона212
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ПониженныйТариф,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Инвалиды.Инвалидность, ЛОЖЬ)
	|				И ЕСТЬNULL(СоответствиеПониженныхТарифов.ВыделятьДоходыИнвалидов, ЛОЖЬ)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|		КОГДА СтраховыеВзносыСведенияОДоходах.ОблагаетсяЕНВД
	|				И ЕСТЬNULL(СоответствиеПониженныхТарифов.ВыделятьДоходыПоЕНВД, ЛОЖЬ)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|		ИНАЧЕ ВидыТарифныхСтавок.ВидТарифаСтраховыхВзносов
	|	КОНЕЦ КАК ВидТарифаСтраховыхВзносов,
	|	СтраховыеВзносыСведенияОДоходах.РезультатОборот,
	|	СтраховыеВзносыСведенияОДоходах.СкидкаОборот
	|ПОМЕСТИТЬ ВТСведенияОДоходахПоВидамТарифа
	|ИЗ
	|	ВТСведенияОДоходах КАК СтраховыеВзносыСведенияОДоходах
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИнвалиды КАК Инвалиды
	|		ПО СтраховыеВзносыСведенияОДоходах.Период = Инвалиды.Период
	|			И СтраховыеВзносыСведенияОДоходах.ФизЛицо = Инвалиды.Физлицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВидыТарифныхСтавокОрганизаций КАК ВидыТарифныхСтавок
	|		ПО СтраховыеВзносыСведенияОДоходах.Период = ВидыТарифныхСтавок.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСоответствиеПониженныхТарифов КАК СоответствиеПониженныхТарифов
	|		ПО (ГОД(СтраховыеВзносыСведенияОДоходах.Период) МЕЖДУ СоответствиеПониженныхТарифов.ГодС И СоответствиеПониженныхТарифов.ГодПо)
	|			И (ВидыТарифныхСтавок.ВидТарифаСтраховыхВзносов = СоответствиеПониженныхТарифов.ВидТарифаСтраховыхВзносов)
	|ГДЕ
	|	СтраховыеВзносыСведенияОДоходах.ФизЛицо В
	|			(ВЫБРАТЬ
	|				Организации.ФизЛицо
	|			ИЗ
	|				ВТФизЛицаОрганизаций КАК Организации)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	Период,
	|	ОбособленноеПодразделение,
	|	ВидТарифаСтраховыхВзносов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ПредельнаяВеличинаБазыСтраховыхВзносов.Размер, 0) КАК Размер,
	|	ДатыПоследнихДвижений.ПериодРегистрации КАК Период
	|ПОМЕСТИТЬ ВТПредельнаяВеличина
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(ПредельнаяВеличинаБазыСтраховыхВзносов.Период) КАК Период,
	|		НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ) КАК ПериодРегистрации
	|	ИЗ
	|		ВТПериоды КАК Периоды
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПредельнаяВеличинаБазыСтраховыхВзносов КАК ПредельнаяВеличинаБазыСтраховыхВзносов
	|			ПО Периоды.Период >= ПредельнаяВеличинаБазыСтраховыхВзносов.Период
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период) КАК ДатыПоследнихДвижений
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПредельнаяВеличинаБазыСтраховыхВзносов КАК ПредельнаяВеличинаБазыСтраховыхВзносов
	|		ПО ДатыПоследнихДвижений.Период = ПредельнаяВеличинаБазыСтраховыхВзносов.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОДоходах.ФизЛицо КАК ФизЛицо,
	|	НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ) КАК Период,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(Гражданство.НеИмеетПравоНаПенсию, ЛОЖЬ)
	|				ТОГДА 0
	|			КОГДА СведенияОДоходах.ВидДохода.ВходитВБазуПФР
	|				ТОГДА СведенияОДоходах.РезультатОборот - СведенияОДоходах.СкидкаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЗаГод,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(Гражданство.НеИмеетПравоНаПенсию, ЛОЖЬ)
	|				ТОГДА 0
	|			КОГДА НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ) = СведенияОДоходах.Период
	|					И СведенияОДоходах.ВидДохода.ВходитВБазуПФР
	|				ТОГДА СведенияОДоходах.РезультатОборот - СведенияОДоходах.СкидкаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЗаМесяц,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(Гражданство.НеИмеетПравоНаПенсию, ЛОЖЬ)
	|				ТОГДА 0
	|			КОГДА СведенияОДоходах.ВидДохода.ВходитВБазуФОМС
	|				ТОГДА СведенияОДоходах.РезультатОборот - СведенияОДоходах.СкидкаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЗаГодФОМС,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(Гражданство.НеИмеетПравоНаПенсию, ЛОЖЬ)
	|				ТОГДА 0
	|			КОГДА НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ) = СведенияОДоходах.Период
	|					И СведенияОДоходах.ВидДохода.ВходитВБазуФОМС
	|				ТОГДА СведенияОДоходах.РезультатОборот - СведенияОДоходах.СкидкаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЗаМесяцФОМС
	|ПОМЕСТИТЬ ВТБазаНарастающимИтогом
	|ИЗ
	|	ВТПериоды КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОДоходах КАК СведенияОДоходах
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТГражданство КАК Гражданство
	|			ПО СведенияОДоходах.Период = Гражданство.Период
	|				И СведенияОДоходах.ФизЛицо = Гражданство.Физлицо
	|		ПО (СведенияОДоходах.Период МЕЖДУ НАЧАЛОПЕРИОДА(Периоды.Период, ГОД) И Периоды.Период)
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходах.ФизЛицо,
	|	Периоды.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОблагаемаяБаза.ФизЛицо КАК ФизЛицо,
	|	ОблагаемаяБаза.Период КАК Период,
	|	ВЫБОР
	|		КОГДА ОблагаемаяБаза.ЗаГод - Предел.Размер >= 0
	|			ТОГДА ОблагаемаяБаза.ЗаГод - Предел.Размер
	|		ИНАЧЕ 0
	|	КОНЕЦ - ВЫБОР
	|		КОГДА ЕСТЬNULL(ОблагаемаяБазаПрошлогоМесяца.ЗаГод, 0) - Предел.Размер >= 0
	|			ТОГДА ЕСТЬNULL(ОблагаемаяБазаПрошлогоМесяца.ЗаГод, 0) - Предел.Размер
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаПревысившаяПредел,
	|	ВЫБОР
	|		КОГДА ОблагаемаяБаза.ЗаГодФОМС - Предел.Размер >= 0
	|			ТОГДА ОблагаемаяБаза.ЗаГодФОМС - Предел.Размер
	|		ИНАЧЕ 0
	|	КОНЕЦ - ВЫБОР
	|		КОГДА ЕСТЬNULL(ОблагаемаяБазаПрошлогоМесяца.ЗаГодФОМС, 0) - Предел.Размер >= 0
	|			ТОГДА ЕСТЬNULL(ОблагаемаяБазаПрошлогоМесяца.ЗаГодФОМС, 0) - Предел.Размер
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаПревысившаяПределФОМС
	|ПОМЕСТИТЬ ВТБазаПревышенияДохода
	|ИЗ
	|	ВТБазаНарастающимИтогом КАК ОблагаемаяБаза
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПредельнаяВеличина КАК Предел
	|		ПО ОблагаемаяБаза.Период = Предел.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБазаНарастающимИтогом КАК ОблагаемаяБазаПрошлогоМесяца
	|		ПО ОблагаемаяБаза.ФизЛицо = ОблагаемаяБазаПрошлогоМесяца.ФизЛицо
	|			И (ОблагаемаяБаза.Период = ДОБАВИТЬКДАТЕ(ОблагаемаяБазаПрошлогоМесяца.Период, МЕСЯЦ, 1))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОДоходах.ФизЛицо КАК ФизЛицо,
	|	СведенияОДоходах.Период КАК Период,
	|	СведенияОДоходах.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	|	СведенияОДоходах.ВидТарифаСтраховыхВзносов,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(Гражданство.НеИмеетПравоНаПенсию, ЛОЖЬ)
	|				ТОГДА 0
	|			КОГДА СведенияОДоходах.ВидДохода.ВходитВБазуПФР
	|				ТОГДА СведенияОДоходах.РезультатОборот - СведенияОДоходах.СкидкаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЗаМесяц,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(Гражданство.НеИмеетПравоНаПенсию, ЛОЖЬ)
	|				ТОГДА 0
	|			КОГДА СведенияОДоходах.ВидДохода.ВходитВБазуФОМС
	|				ТОГДА СведенияОДоходах.РезультатОборот - СведенияОДоходах.СкидкаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЗаМесяцФОМС
	|ПОМЕСТИТЬ ВТБазаЗаМесяцПоОбособленноеПодразделение
	|ИЗ
	|	ВТСведенияОДоходахПоВидамТарифа КАК СведенияОДоходах
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИнвалиды КАК Инвалиды
	|		ПО СведенияОДоходах.Период = Инвалиды.Период
	|			И СведенияОДоходах.ФизЛицо = Инвалиды.Физлицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТГражданство КАК Гражданство
	|		ПО СведенияОДоходах.Период = Гражданство.Период
	|			И СведенияОДоходах.ФизЛицо = Гражданство.Физлицо
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходах.ФизЛицо,
	|	СведенияОДоходах.ОбособленноеПодразделение,
	|	СведенияОДоходах.Период,
	|	СведенияОДоходах.ВидТарифаСтраховыхВзносов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОДоходах.ФизЛицо КАК ФизЛицо,
	|	СведенияОДоходах.Период КАК Период,
	|	МАКСИМУМ(СведенияОДоходах.ЗаМесяц) КАК ЗаМесяц,
	|	МАКСИМУМ(СведенияОДоходах.ЗаМесяцФОМС) КАК ЗаМесяцФОМС
	|ПОМЕСТИТЬ ВТМаксБазаЗаМесяц
	|ИЗ
	|	ВТБазаЗаМесяцПоОбособленноеПодразделение КАК СведенияОДоходах
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходах.ФизЛицо,
	|	СведенияОДоходах.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	Период,
	|	ЗаМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОДоходах.ФизЛицо КАК ФизЛицо,
	|	СведенияОДоходах.Период КАК Период,
	|	СведенияОДоходах.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	|	МАКСИМУМ(БазаЗаМесяцПоОбособленным.ВидТарифаСтраховыхВзносов) КАК ВидТарифаСтраховыхВзносов
	|ПОМЕСТИТЬ ВТОбособленноеПодразделениеМаксБазы
	|ИЗ
	|	(ВЫБРАТЬ
	|		СведенияОДоходах.ФизЛицо КАК ФизЛицо,
	|		СведенияОДоходах.Период КАК Период,
	|		СведенияОДоходах.ЗаМесяц КАК ЗаМесяц,
	|		МАКСИМУМ(БазаЗаМесяцПоОбособленным.ОбособленноеПодразделение) КАК ОбособленноеПодразделение
	|	ИЗ
	|		ВТМаксБазаЗаМесяц КАК СведенияОДоходах
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТБазаЗаМесяцПоОбособленноеПодразделение КАК БазаЗаМесяцПоОбособленным
	|			ПО СведенияОДоходах.ФизЛицо = БазаЗаМесяцПоОбособленным.ФизЛицо
	|				И СведенияОДоходах.Период = БазаЗаМесяцПоОбособленным.Период
	|				И СведенияОДоходах.ЗаМесяц = БазаЗаМесяцПоОбособленным.ЗаМесяц
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СведенияОДоходах.ФизЛицо,
	|		СведенияОДоходах.Период,
	|		СведенияОДоходах.ЗаМесяц) КАК СведенияОДоходах
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБазаЗаМесяцПоОбособленноеПодразделение КАК БазаЗаМесяцПоОбособленным
	|		ПО СведенияОДоходах.ФизЛицо = БазаЗаМесяцПоОбособленным.ФизЛицо
	|			И СведенияОДоходах.Период = БазаЗаМесяцПоОбособленным.Период
	|			И СведенияОДоходах.ЗаМесяц = БазаЗаМесяцПоОбособленным.ЗаМесяц
	|			И СведенияОДоходах.ОбособленноеПодразделение = БазаЗаМесяцПоОбособленным.ОбособленноеПодразделение
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходах.ФизЛицо,
	|	СведенияОДоходах.Период,
	|	СведенияОДоходах.ОбособленноеПодразделение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	Период,
	|	ОбособленноеПодразделение,
	|	ВидТарифаСтраховыхВзносов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОблагаемаяБаза.ФизЛицо КАК ФизЛицо,
	|	ОблагаемаяБаза.Период КАК Период,
	|	ВЫБОР
	|		КОГДА ПревышениеДоходаПоВсемОП.СуммаПревысившаяПредел = 0
	|				ИЛИ ОблагаемаяБаза.ЗаМесяц = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(ПревышениеДоходаПоВсемОП.СуммаПревысившаяПредел * БазаЗаМесяцПоОбособленным.ЗаМесяц / ОблагаемаяБаза.ЗаМесяц КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаПревысившаяПредел,
	|	БазаЗаМесяцПоОбособленным.ОбособленноеПодразделение,
	|	БазаЗаМесяцПоОбособленным.ВидТарифаСтраховыхВзносов
	|ПОМЕСТИТЬ ВТПревышениеДоходаПоОбособленноеПодразделение
	|ИЗ
	|	ВТБазаНарастающимИтогом КАК ОблагаемаяБаза
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБазаПревышенияДохода КАК ПревышениеДоходаПоВсемОП
	|		ПО ОблагаемаяБаза.ФизЛицо = ПревышениеДоходаПоВсемОП.ФизЛицо
	|			И ОблагаемаяБаза.Период = ПревышениеДоходаПоВсемОП.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБазаЗаМесяцПоОбособленноеПодразделение КАК БазаЗаМесяцПоОбособленным
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТОбособленноеПодразделениеМаксБазы КАК ОбособленноеПодразделениеДляОкругления
	|			ПО БазаЗаМесяцПоОбособленным.ФизЛицо = ОбособленноеПодразделениеДляОкругления.ФизЛицо
	|				И БазаЗаМесяцПоОбособленным.Период = ОбособленноеПодразделениеДляОкругления.Период
	|				И БазаЗаМесяцПоОбособленным.ОбособленноеПодразделение = ОбособленноеПодразделениеДляОкругления.ОбособленноеПодразделение
	|				И БазаЗаМесяцПоОбособленным.ВидТарифаСтраховыхВзносов = ОбособленноеПодразделениеДляОкругления.ВидТарифаСтраховыхВзносов
	|		ПО ОблагаемаяБаза.Период = БазаЗаМесяцПоОбособленным.Период
	|			И ОблагаемаяБаза.ФизЛицо = БазаЗаМесяцПоОбособленным.ФизЛицо
	|ГДЕ
	|	ОбособленноеПодразделениеДляОкругления.ОбособленноеПодразделение ЕСТЬ NULL 
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Превышение.ФизЛицо КАК ФизЛицо,
	|	Превышение.Период КАК Период,
	|	Превышение.СуммаПревысившаяПредел,
	|	Превышение.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов
	|ПОМЕСТИТЬ ВТПревышениеДохода
	|ИЗ
	|	ВТПревышениеДоходаПоОбособленноеПодразделение КАК Превышение
	|ГДЕ
	|	Превышение.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Превышение.ФизЛицо,
	|	Превышение.Период,
	|	СУММА(Превышение.СуммаПревысившаяПредел),
	|	ОбособленноеПодразделениеДляОкругления.ВидТарифаСтраховыхВзносов
	|ИЗ
	|	(ВЫБРАТЬ
	|		Превышение.ФизЛицо КАК ФизЛицо,
	|		Превышение.Период КАК Период,
	|		-Превышение.СуммаПревысившаяПредел КАК СуммаПревысившаяПредел
	|	ИЗ
	|		ВТПревышениеДоходаПоОбособленноеПодразделение КАК Превышение
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Превышение.ФизЛицо,
	|		Превышение.Период,
	|		Превышение.СуммаПревысившаяПредел
	|	ИЗ
	|		ВТБазаПревышенияДохода КАК Превышение) КАК Превышение
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОбособленноеПодразделениеМаксБазы КАК ОбособленноеПодразделениеДляОкругления
	|		ПО Превышение.ФизЛицо = ОбособленноеПодразделениеДляОкругления.ФизЛицо
	|			И Превышение.Период = ОбособленноеПодразделениеДляОкругления.Период
	|ГДЕ
	|	ОбособленноеПодразделениеДляОкругления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|
	|СГРУППИРОВАТЬ ПО
	|	Превышение.ФизЛицо,
	|	Превышение.Период,
	|	ОбособленноеПодразделениеДляОкругления.ВидТарифаСтраховыхВзносов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	Период,
	|	ВидТарифаСтраховыхВзносов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОДоходах.ФизЛицо КАК ФизЛицо,
	|	СведенияОДоходах.Период КАК Период,
	|	СведенияОДоходах.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	|	МАКСИМУМ(БазаЗаМесяцПоОбособленным.ВидТарифаСтраховыхВзносов) КАК ВидТарифаСтраховыхВзносов
	|ПОМЕСТИТЬ ВТОбособленноеПодразделениеМаксБазыФОМС
	|ИЗ
	|	(ВЫБРАТЬ
	|		СведенияОДоходах.ФизЛицо КАК ФизЛицо,
	|		СведенияОДоходах.Период КАК Период,
	|		СведенияОДоходах.ЗаМесяцФОМС КАК ЗаМесяцФОМС,
	|		МАКСИМУМ(БазаЗаМесяцПоОбособленным.ОбособленноеПодразделение) КАК ОбособленноеПодразделение
	|	ИЗ
	|		ВТМаксБазаЗаМесяц КАК СведенияОДоходах
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТБазаЗаМесяцПоОбособленноеПодразделение КАК БазаЗаМесяцПоОбособленным
	|			ПО СведенияОДоходах.ФизЛицо = БазаЗаМесяцПоОбособленным.ФизЛицо
	|				И СведенияОДоходах.Период = БазаЗаМесяцПоОбособленным.Период
	|				И СведенияОДоходах.ЗаМесяцФОМС = БазаЗаМесяцПоОбособленным.ЗаМесяцФОМС
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СведенияОДоходах.ФизЛицо,
	|		СведенияОДоходах.Период,
	|		СведенияОДоходах.ЗаМесяцФОМС) КАК СведенияОДоходах
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБазаЗаМесяцПоОбособленноеПодразделение КАК БазаЗаМесяцПоОбособленным
	|		ПО СведенияОДоходах.ФизЛицо = БазаЗаМесяцПоОбособленным.ФизЛицо
	|			И СведенияОДоходах.Период = БазаЗаМесяцПоОбособленным.Период
	|			И СведенияОДоходах.ЗаМесяцФОМС = БазаЗаМесяцПоОбособленным.ЗаМесяцФОМС
	|			И СведенияОДоходах.ОбособленноеПодразделение = БазаЗаМесяцПоОбособленным.ОбособленноеПодразделение
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходах.ФизЛицо,
	|	СведенияОДоходах.Период,
	|	СведенияОДоходах.ОбособленноеПодразделение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	Период,
	|	ОбособленноеПодразделение,
	|	ВидТарифаСтраховыхВзносов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОблагаемаяБаза.ФизЛицо КАК ФизЛицо,
	|	ОблагаемаяБаза.Период КАК Период,
	|	ВЫБОР
	|		КОГДА ПревышениеДоходаПоВсемОП.СуммаПревысившаяПределФОМС = 0
	|				ИЛИ ОблагаемаяБаза.ЗаМесяцФОМС = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(ПревышениеДоходаПоВсемОП.СуммаПревысившаяПределФОМС * БазаЗаМесяцПоОбособленным.ЗаМесяцФОМС / ОблагаемаяБаза.ЗаМесяцФОМС КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаПревысившаяПредел,
	|	БазаЗаМесяцПоОбособленным.ОбособленноеПодразделение,
	|	БазаЗаМесяцПоОбособленным.ВидТарифаСтраховыхВзносов
	|ПОМЕСТИТЬ ВТПревышениеДоходаПоОбособленноеПодразделениеФОМС
	|ИЗ
	|	ВТБазаНарастающимИтогом КАК ОблагаемаяБаза
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБазаПревышенияДохода КАК ПревышениеДоходаПоВсемОП
	|		ПО ОблагаемаяБаза.ФизЛицо = ПревышениеДоходаПоВсемОП.ФизЛицо
	|			И ОблагаемаяБаза.Период = ПревышениеДоходаПоВсемОП.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБазаЗаМесяцПоОбособленноеПодразделение КАК БазаЗаМесяцПоОбособленным
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТОбособленноеПодразделениеМаксБазыФОМС КАК ОбособленноеПодразделениеДляОкругления
	|			ПО БазаЗаМесяцПоОбособленным.ФизЛицо = ОбособленноеПодразделениеДляОкругления.ФизЛицо
	|				И БазаЗаМесяцПоОбособленным.Период = ОбособленноеПодразделениеДляОкругления.Период
	|				И БазаЗаМесяцПоОбособленным.ОбособленноеПодразделение = ОбособленноеПодразделениеДляОкругления.ОбособленноеПодразделение
	|				И БазаЗаМесяцПоОбособленным.ВидТарифаСтраховыхВзносов = ОбособленноеПодразделениеДляОкругления.ВидТарифаСтраховыхВзносов
	|		ПО ОблагаемаяБаза.Период = БазаЗаМесяцПоОбособленным.Период
	|			И ОблагаемаяБаза.ФизЛицо = БазаЗаМесяцПоОбособленным.ФизЛицо
	|ГДЕ
	|	ОбособленноеПодразделениеДляОкругления.ОбособленноеПодразделение ЕСТЬ NULL 
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Превышение.ФизЛицо КАК ФизЛицо,
	|	Превышение.Период КАК Период,
	|	Превышение.СуммаПревысившаяПредел,
	|	Превышение.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов
	|ПОМЕСТИТЬ ВТПревышениеДоходаФОМС
	|ИЗ
	|	ВТПревышениеДоходаПоОбособленноеПодразделениеФОМС КАК Превышение
	|ГДЕ
	|	Превышение.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Превышение.ФизЛицо,
	|	Превышение.Период,
	|	СУММА(Превышение.СуммаПревысившаяПредел),
	|	ОбособленноеПодразделениеДляОкругления.ВидТарифаСтраховыхВзносов
	|ИЗ
	|	(ВЫБРАТЬ
	|		Превышение.ФизЛицо КАК ФизЛицо,
	|		Превышение.Период КАК Период,
	|		-Превышение.СуммаПревысившаяПредел КАК СуммаПревысившаяПредел
	|	ИЗ
	|		ВТПревышениеДоходаПоОбособленноеПодразделениеФОМС КАК Превышение
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Превышение.ФизЛицо,
	|		Превышение.Период,
	|		Превышение.СуммаПревысившаяПределФОМС
	|	ИЗ
	|		ВТБазаПревышенияДохода КАК Превышение) КАК Превышение
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОбособленноеПодразделениеМаксБазыФОМС КАК ОбособленноеПодразделениеДляОкругления
	|		ПО Превышение.ФизЛицо = ОбособленноеПодразделениеДляОкругления.ФизЛицо
	|			И Превышение.Период = ОбособленноеПодразделениеДляОкругления.Период
	|ГДЕ
	|	ОбособленноеПодразделениеДляОкругления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|
	|СГРУППИРОВАТЬ ПО
	|	Превышение.ФизЛицо,
	|	Превышение.Период,
	|	ОбособленноеПодразделениеДляОкругления.ВидТарифаСтраховыхВзносов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	Период,
	|	ВидТарифаСтраховыхВзносов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтраховыеВзносыСведенияОДоходах.Период КАК Период,
	|	СтраховыеВзносыСведенияОДоходах.ФизЛицо,
	|	ГОД(СтраховыеВзносыСведенияОДоходах.ФизЛицо.ДатаРождения) КАК ГодРождения,
	|	СтраховыеВзносыСведенияОДоходах.ПониженныйТариф,
	|	СтраховыеВзносыСведенияОДоходах.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов,
	|	СУММА(ВЫБОР
	|			КОГДА СтраховыеВзносыСведенияОДоходах.ВидДохода = ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.АвторскиеОткрытия)
	|					ИЛИ СтраховыеВзносыСведенияОДоходах.ВидДохода = ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.АвторскиеАудиовизуальныеПроизведения)
	|					ИЛИ СтраховыеВзносыСведенияОДоходах.ВидДохода = ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.АвторскиеДругиеМузыкальныеПроизведения)
	|					ИЛИ СтраховыеВзносыСведенияОДоходах.ВидДохода = ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.АвторскиеЛитературныеПроизведения)
	|					ИЛИ СтраховыеВзносыСведенияОДоходах.ВидДохода = ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.АвторскиеМузыкальноСценическиеПроизведение)
	|					ИЛИ СтраховыеВзносыСведенияОДоходах.ВидДохода = ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.АвторскиеНаучныеТруды)
	|					ИЛИ СтраховыеВзносыСведенияОДоходах.ВидДохода = ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.АвторскиеСкульптуры)
	|					ИЛИ СтраховыеВзносыСведенияОДоходах.ВидДохода = ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.АвторскиеГрафическиеПроизведения)
	|					ИЛИ СтраховыеВзносыСведенияОДоходах.ВидДохода = ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.АвторскиеИсполнениеПроизведений)
	|				ТОГДА СтраховыеВзносыСведенияОДоходах.РезультатОборот - СтраховыеВзносыСведенияОДоходах.СкидкаОборот
	|			КОГДА (НЕ СтраховыеВзносыСведенияОДоходах.ВидДохода В (ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.ПустаяСсылка), ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.РаспределятьПоБазовымНачислениям), ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.НеЯвляетсяОбъектом)))
	|				ТОГДА СтраховыеВзносыСведенияОДоходах.РезультатОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НачисленоВсего,
	|	СУММА(ВЫБОР
	|			КОГДА СтраховыеВзносыСведенияОДоходах.ВидДохода В (ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.ПустаяСсылка), ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.РаспределятьПоБазовымНачислениям), ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.НеЯвляетсяОбъектом))
	|				ТОГДА 0
	|			КОГДА ЕСТЬNULL(Гражданство.НеИмеетПравоНаПенсию, ЛОЖЬ)
	|				ТОГДА СтраховыеВзносыСведенияОДоходах.РезультатОборот
	|			КОГДА СтраховыеВзносыСведенияОДоходах.ВидДохода = ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.НеОблагаетсяЦеликом)
	|					ИЛИ СтраховыеВзносыСведенияОДоходах.ВидДохода = ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.ПособияЗаСчетФСС)
	|					ИЛИ СтраховыеВзносыСведенияОДоходах.ВидДохода = ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.ДенежноеДовольствиеВоеннослужащих)
	|				ТОГДА СтраховыеВзносыСведенияОДоходах.РезультатОборот
	|			КОГДА СтраховыеВзносыСведенияОДоходах.ВидДохода = ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.МатпомощьПриРожденииРебенка)
	|					ИЛИ СтраховыеВзносыСведенияОДоходах.ВидДохода = ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.Матпомощь)
	|				ТОГДА СтраховыеВзносыСведенияОДоходах.СкидкаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НеОблагается,
	|	СУММА(ВЫБОР
	|			КОГДА СтраховыеВзносыСведенияОДоходах.ВидДохода В (ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.ПустаяСсылка), ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.РаспределятьПоБазовымНачислениям), ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.НеЯвляетсяОбъектом))
	|				ТОГДА 0
	|			КОГДА ЕСТЬNULL(Гражданство.НеИмеетПравоНаПенсию, ЛОЖЬ)
	|				ТОГДА 0
	|			КОГДА СтраховыеВзносыСведенияОДоходах.ВидДохода = ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.ДенежноеСодержаниеПрокуроров)
	|					ИЛИ СтраховыеВзносыСведенияОДоходах.ВидДохода = ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.ДоходыСтудентовЗаРаботуВСтудотрядеПоТрудовомуДоговору)
	|				ТОГДА СтраховыеВзносыСведенияОДоходах.РезультатОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВыплатыПрокуроров,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(Гражданство.НеИмеетПравоНаПенсию, ЛОЖЬ)
	|				ТОГДА 0
	|			КОГДА СтраховыеВзносыСведенияОДоходах.ВидДохода.ВходитВБазуФОМС
	|				ТОГДА СтраховыеВзносыСведенияОДоходах.РезультатОборот - СтраховыеВзносыСведенияОДоходах.СкидкаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) - МАКСИМУМ(ПревышениеДоходаФОМС.СуммаПревысившаяПредел) КАК ОблагаемаяБазаФОМС,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(Гражданство.НеИмеетПравоНаПенсию, ЛОЖЬ)
	|				ТОГДА 0
	|			КОГДА СтраховыеВзносыСведенияОДоходах.ВидДохода.ВходитВБазуПФР
	|				ТОГДА СтраховыеВзносыСведенияОДоходах.РезультатОборот - СтраховыеВзносыСведенияОДоходах.СкидкаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) - МАКСИМУМ(ПревышениеДоходаПФР.СуммаПревысившаяПредел) КАК ОблагаемаяБазаПФР,
	|	МАКСИМУМ(ПревышениеДоходаПФР.СуммаПревысившаяПредел) КАК СуммаПревысившаяПредел
	|ПОМЕСТИТЬ ВТДоходыВзносов
	|ИЗ
	|	ВТСведенияОДоходахПоВидамТарифа КАК СтраховыеВзносыСведенияОДоходах
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТГражданство КАК Гражданство
	|		ПО СтраховыеВзносыСведенияОДоходах.Период = Гражданство.Период
	|			И СтраховыеВзносыСведенияОДоходах.ФизЛицо = Гражданство.Физлицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПревышениеДохода КАК ПревышениеДоходаПФР
	|		ПО СтраховыеВзносыСведенияОДоходах.Период = ПревышениеДоходаПФР.Период
	|			И СтраховыеВзносыСведенияОДоходах.ФизЛицо = ПревышениеДоходаПФР.ФизЛицо
	|			И СтраховыеВзносыСведенияОДоходах.ВидТарифаСтраховыхВзносов = ПревышениеДоходаПФР.ВидТарифаСтраховыхВзносов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПревышениеДоходаФОМС КАК ПревышениеДоходаФОМС
	|		ПО СтраховыеВзносыСведенияОДоходах.Период = ПревышениеДоходаФОМС.Период
	|			И СтраховыеВзносыСведенияОДоходах.ФизЛицо = ПревышениеДоходаФОМС.ФизЛицо
	|			И СтраховыеВзносыСведенияОДоходах.ВидТарифаСтраховыхВзносов = ПревышениеДоходаФОМС.ВидТарифаСтраховыхВзносов
	|ГДЕ
	|	СтраховыеВзносыСведенияОДоходах.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|	И СтраховыеВзносыСведенияОДоходах.ФизЛицо В
	|			(ВЫБРАТЬ
	|				Организации.ФизЛицо
	|			ИЗ
	|				ВТФизЛицаОрганизаций КАК Организации)
	|
	|СГРУППИРОВАТЬ ПО
	|	СтраховыеВзносыСведенияОДоходах.Период,
	|	СтраховыеВзносыСведенияОДоходах.ФизЛицо,
	|	СтраховыеВзносыСведенияОДоходах.ВидТарифаСтраховыхВзносов,
	|	СтраховыеВзносыСведенияОДоходах.ПониженныйТариф,
	|	ГОД(СтраховыеВзносыСведенияОДоходах.ФизЛицо.ДатаРождения)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период,
	|	ВидТарифаСтраховыхВзносов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Взносы.Период КАК Период,
	|	Взносы.ВидТарифаСтраховыхВзносов,
	|	СУММА(Взносы.ПФРСтраховая) КАК ПФРСтраховая,
	|	СУММА(Взносы.ПФРНакопительная) КАК ПФРНакопительная,
	|	СУММА(Взносы.ФФОМС) КАК ФФОМС,
	|	СУММА(Взносы.ТФОМС) КАК ТФОМС,
	|	ВЫБОР
	|		КОГДА Взносы.ВидТарифаСтраховыхВзносов = ВидыТарифныхСтавокОрганизаций.ВидТарифаСтраховыхВзносов
	|			ТОГДА ЛОЖЬ
	|		КОГДА Взносы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|				И Взносы.Период >= &ДатаНовойРедакцииЗакона212
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ПониженныйТариф
	|ПОМЕСТИТЬ ВТВзносы
	|ИЗ
	|	(ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(СтраховыеВзносыИсчисленные.Период, МЕСЯЦ) КАК Период,
	|		СтраховыеВзносыИсчисленные.ФизЛицо КАК ФизЛицо,
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(Инвалиды.Инвалидность, ЛОЖЬ)
	|					И ЕСТЬNULL(СоответствиеПониженныхТарифов.ВыделятьДоходыИнвалидов, ЛОЖЬ)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|			ИНАЧЕ ВидыТарифныхСтавокОрганизаций.ВидТарифаСтраховыхВзносов
	|		КОНЕЦ КАК ВидТарифаСтраховыхВзносов,
	|		СтраховыеВзносыИсчисленные.ПФРСтраховаяОборот КАК ПФРСтраховая,
	|		СтраховыеВзносыИсчисленные.ПФРНакопительнаяОборот КАК ПФРНакопительная,
	|		СтраховыеВзносыИсчисленные.ФФОМСОборот КАК ФФОМС,
	|		СтраховыеВзносыИсчисленные.ТФОМСОборот КАК ТФОМС
	|	ИЗ
	|		ВТВзносыИсчисленные КАК СтраховыеВзносыИсчисленные
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТИнвалиды КАК Инвалиды
	|			ПО СтраховыеВзносыИсчисленные.Период = Инвалиды.Период
	|				И СтраховыеВзносыИсчисленные.ФизЛицо = Инвалиды.Физлицо
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТВидыТарифныхСтавокОрганизаций КАК ВидыТарифныхСтавокОрганизаций
	|			ПО СтраховыеВзносыИсчисленные.Период = ВидыТарифныхСтавокОрганизаций.Период
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТСоответствиеПониженныхТарифов КАК СоответствиеПониженныхТарифов
	|			ПО (ГОД(СтраховыеВзносыИсчисленные.Период) МЕЖДУ СоответствиеПониженныхТарифов.ГодС И СоответствиеПониженныхТарифов.ГодПо)
	|				И (ВидыТарифныхСтавокОрганизаций.ВидТарифаСтраховыхВзносов = СоответствиеПониженныхТарифов.ВидТарифаСтраховыхВзносов)
	|	ГДЕ
	|		СтраховыеВзносыИсчисленные.ФизЛицо В
	|				(ВЫБРАТЬ
	|					Организации.ФизЛицо
	|				ИЗ
	|					ВТФизЛицаОрганизаций КАК Организации)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(СтраховыеВзносыИсчисленные.Период, МЕСЯЦ),
	|		СтраховыеВзносыИсчисленные.ФизЛицо,
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(Инвалиды.Инвалидность, ЛОЖЬ)
	|					И ЕСТЬNULL(СоответствиеПониженныхТарифов.ВыделятьДоходыИнвалидов, ЛОЖЬ)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|			КОГДА ЕСТЬNULL(СоответствиеПониженныхТарифов.ВыделятьДоходыПоЕНВД, ЛОЖЬ)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|			ИНАЧЕ ВидыТарифныхСтавокОрганизаций.ВидТарифаСтраховыхВзносов
	|		КОНЕЦ,
	|		СтраховыеВзносыИсчисленные.ПФРСтраховаяЕНВДОборот,
	|		СтраховыеВзносыИсчисленные.ПФРНакопительнаяЕНВДОборот,
	|		СтраховыеВзносыИсчисленные.ФФОМСЕНВДОборот,
	|		СтраховыеВзносыИсчисленные.ТФОМСЕНВДОборот
	|	ИЗ
	|		ВТВзносыИсчисленные КАК СтраховыеВзносыИсчисленные
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТИнвалиды КАК Инвалиды
	|			ПО СтраховыеВзносыИсчисленные.Период = Инвалиды.Период
	|				И СтраховыеВзносыИсчисленные.ФизЛицо = Инвалиды.Физлицо
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТВидыТарифныхСтавокОрганизаций КАК ВидыТарифныхСтавокОрганизаций
	|			ПО СтраховыеВзносыИсчисленные.Период = ВидыТарифныхСтавокОрганизаций.Период
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТСоответствиеПониженныхТарифов КАК СоответствиеПониженныхТарифов
	|			ПО (ГОД(СтраховыеВзносыИсчисленные.Период) МЕЖДУ СоответствиеПониженныхТарифов.ГодС И СоответствиеПониженныхТарифов.ГодПо)
	|				И (ВидыТарифныхСтавокОрганизаций.ВидТарифаСтраховыхВзносов = СоответствиеПониженныхТарифов.ВидТарифаСтраховыхВзносов)
	|	ГДЕ
	|		СтраховыеВзносыИсчисленные.ФизЛицо В
	|				(ВЫБРАТЬ
	|					Организации.ФизЛицо
	|				ИЗ
	|					ВТФизЛицаОрганизаций КАК Организации)) КАК Взносы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВидыТарифныхСтавокОрганизаций КАК ВидыТарифныхСтавокОрганизаций
	|		ПО Взносы.Период = ВидыТарифныхСтавокОрганизаций.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	Взносы.Период,
	|	Взносы.ВидТарифаСтраховыхВзносов,
	|	ВЫБОР
	|		КОГДА Взносы.ВидТарифаСтраховыхВзносов = ВидыТарифныхСтавокОрганизаций.ВидТарифаСтраховыхВзносов
	|			ТОГДА ЛОЖЬ
	|		КОГДА Взносы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|				И Взносы.Период >= &ДатаНовойРедакцииЗакона212
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПониженныйТариф,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВЫРАЗИТЬ(СУММА(ВзносыФизлиц.ПФРСтраховая) КАК ЧИСЛО(15, 0)), 0) КАК П000200024103,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц1
	|						ТОГДА ВзносыФизлиц.ПФРСтраховая
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) < &Месяц1
	|						ТОГДА ВзносыФизлиц.ПФРСтраховая
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000200024104,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц2
	|						ТОГДА ВзносыФизлиц.ПФРСтраховая
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц1
	|						ТОГДА ВзносыФизлиц.ПФРСтраховая
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000200024105,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц3
	|						ТОГДА ВзносыФизлиц.ПФРСтраховая
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц2
	|						ТОГДА ВзносыФизлиц.ПФРСтраховая
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000200024106,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(СУММА(ВзносыФизлиц.ПФРНакопительная) КАК ЧИСЛО(15, 0)), 0) КАК П000200024203,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц1
	|						ТОГДА ВзносыФизлиц.ПФРНакопительная
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) < &Месяц1
	|						ТОГДА ВзносыФизлиц.ПФРНакопительная
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000200024204,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц2
	|						ТОГДА ВзносыФизлиц.ПФРНакопительная
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц1
	|						ТОГДА ВзносыФизлиц.ПФРНакопительная
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000200024205,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц3
	|						ТОГДА ВзносыФизлиц.ПФРНакопительная
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц2
	|						ТОГДА ВзносыФизлиц.ПФРНакопительная
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000200024206,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(СУММА(ВзносыФизлиц.ФФОМС) КАК ЧИСЛО(15, 0)), 0) КАК П000200024303,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц1
	|						ТОГДА ВзносыФизлиц.ФФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) < &Месяц1
	|						ТОГДА ВзносыФизлиц.ФФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000200024304,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц2
	|						ТОГДА ВзносыФизлиц.ФФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц1
	|						ТОГДА ВзносыФизлиц.ФФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000200024305,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц3
	|						ТОГДА ВзносыФизлиц.ФФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц2
	|						ТОГДА ВзносыФизлиц.ФФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000200024306,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(СУММА(ВзносыФизлиц.ТФОМС) КАК ЧИСЛО(15, 0)), 0) КАК П000200024403,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц1
	|						ТОГДА ВзносыФизлиц.ТФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) < &Месяц1
	|						ТОГДА ВзносыФизлиц.ТФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000200024404,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц2
	|						ТОГДА ВзносыФизлиц.ТФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц1
	|						ТОГДА ВзносыФизлиц.ТФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000200024405,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц3
	|						ТОГДА ВзносыФизлиц.ТФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц2
	|						ТОГДА ВзносыФизлиц.ТФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000200024406
	|ИЗ
	|	ВТВзносы КАК ВзносыФизлиц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Доходы.ФизЛицо,
	|	ВЫБОР
	|		КОГДА ФИОФизлиц.ФизЛицо ЕСТЬ NULL 
	|			ТОГДА Доходы.ФизЛицо.Наименование
	|		ИНАЧЕ ФИОФизлиц.Фамилия + "" "" + ФИОФизлиц.Имя + "" "" + ФИОФизлиц.Отчество
	|	КОНЕЦ КАК П000410001002,
	|	СправкиОбИнвалидности.ДатаВыдачи КАК П000410001003,
	|	СправкиОбИнвалидности.СрокДействияСправки КАК П000410001004,
	|	ЕСТЬNULL(СУММА(Доходы.НачисленоВсего), 0) КАК П000410001005,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(Доходы.Период) < &Месяц1
	|					ТОГДА Доходы.НачисленоВсего
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000410001006,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(Доходы.Период) < &Месяц2
	|					ТОГДА Доходы.НачисленоВсего
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000410001007,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(Доходы.Период) < &Месяц3
	|					ТОГДА Доходы.НачисленоВсего
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000410001008
	|ИЗ
	|	ВТДоходыВзносов КАК Доходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСправкиОбИнвалидности КАК СправкиОбИнвалидности
	|		ПО Доходы.ФизЛицо = СправкиОбИнвалидности.Физлицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИОФизлиц КАК ФИОФизлиц
	|		ПО Доходы.ФизЛицо = ФИОФизлиц.ФизЛицо
	|ГДЕ
	|	Доходы.ПониженныйТариф
	|	И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|
	|СГРУППИРОВАТЬ ПО
	|	Доходы.ФизЛицо,
	|	СправкиОбИнвалидности.ДатаВыдачи,
	|	СправкиОбИнвалидности.СрокДействияСправки,
	|	ВЫБОР
	|		КОГДА ФИОФизлиц.ФизЛицо ЕСТЬ NULL 
	|			ТОГДА Доходы.ФизЛицо.Наименование
	|		ИНАЧЕ ФИОФизлиц.Фамилия + "" "" + ФИОФизлиц.Имя + "" "" + ФИОФизлиц.Отчество
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	П000410001002
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения < 1967
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|					ТОГДА Доходы.НачисленоВсего
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300030103,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения > 1966
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|					ТОГДА Доходы.НачисленоВсего
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300030203,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения < 1967
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						И МЕСЯЦ(Доходы.Период) < &Месяц1
	|					ТОГДА Доходы.НачисленоВсего
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300030104,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения > 1966
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						И МЕСЯЦ(Доходы.Период) < &Месяц1
	|					ТОГДА Доходы.НачисленоВсего
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300030204,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения < 1967
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						И МЕСЯЦ(Доходы.Период) < &Месяц2
	|					ТОГДА Доходы.НачисленоВсего
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300030105,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения > 1966
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						И МЕСЯЦ(Доходы.Период) < &Месяц2
	|					ТОГДА Доходы.НачисленоВсего
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300030205,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения < 1967
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						И МЕСЯЦ(Доходы.Период) < &Месяц3
	|					ТОГДА Доходы.НачисленоВсего
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300030106,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения > 1966
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						И МЕСЯЦ(Доходы.Период) < &Месяц3
	|					ТОГДА Доходы.НачисленоВсего
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300030206,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения < 1967
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|					ТОГДА Доходы.НеОблагается
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300031103,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения > 1966
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|					ТОГДА Доходы.НеОблагается
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300031203,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения < 1967
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						И МЕСЯЦ(Доходы.Период) < &Месяц1
	|					ТОГДА Доходы.НеОблагается
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300031104,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения > 1966
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						И МЕСЯЦ(Доходы.Период) < &Месяц1
	|					ТОГДА Доходы.НеОблагается
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300031204,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения < 1967
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						И МЕСЯЦ(Доходы.Период) < &Месяц2
	|					ТОГДА Доходы.НеОблагается
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300031105,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения > 1966
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						И МЕСЯЦ(Доходы.Период) < &Месяц2
	|					ТОГДА Доходы.НеОблагается
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300031205,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения < 1967
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						И МЕСЯЦ(Доходы.Период) < &Месяц3
	|					ТОГДА Доходы.НеОблагается
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300031106,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения > 1966
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						И МЕСЯЦ(Доходы.Период) < &Месяц3
	|					ТОГДА Доходы.НеОблагается
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300031206,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения < 1967
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|					ТОГДА Доходы.ВыплатыПрокуроров
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300031403,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения > 1966
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|					ТОГДА Доходы.ВыплатыПрокуроров
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300031503,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения < 1967
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						И МЕСЯЦ(Доходы.Период) < &Месяц1
	|					ТОГДА Доходы.ВыплатыПрокуроров
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300031404,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения > 1966
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						И МЕСЯЦ(Доходы.Период) < &Месяц1
	|					ТОГДА Доходы.ВыплатыПрокуроров
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300031504,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения < 1967
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						И МЕСЯЦ(Доходы.Период) < &Месяц2
	|					ТОГДА Доходы.ВыплатыПрокуроров
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300031405,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения > 1966
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						И МЕСЯЦ(Доходы.Период) < &Месяц2
	|					ТОГДА Доходы.ВыплатыПрокуроров
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300031505,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения < 1967
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						И МЕСЯЦ(Доходы.Период) < &Месяц3
	|					ТОГДА Доходы.ВыплатыПрокуроров
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300031406,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения > 1966
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						И МЕСЯЦ(Доходы.Период) < &Месяц3
	|					ТОГДА Доходы.ВыплатыПрокуроров
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300031506,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения < 1967
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|					ТОГДА Доходы.СуммаПревысившаяПредел
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300031703,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения > 1966
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|					ТОГДА Доходы.СуммаПревысившаяПредел
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300031803,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения < 1967
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						И МЕСЯЦ(Доходы.Период) < &Месяц1
	|					ТОГДА Доходы.СуммаПревысившаяПредел
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300031704,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения > 1966
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						И МЕСЯЦ(Доходы.Период) < &Месяц1
	|					ТОГДА Доходы.СуммаПревысившаяПредел
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300031804,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения < 1967
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						И МЕСЯЦ(Доходы.Период) < &Месяц2
	|					ТОГДА Доходы.СуммаПревысившаяПредел
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300031705,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения > 1966
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						И МЕСЯЦ(Доходы.Период) < &Месяц2
	|					ТОГДА Доходы.СуммаПревысившаяПредел
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300031805,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения < 1967
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						И МЕСЯЦ(Доходы.Период) < &Месяц3
	|					ТОГДА Доходы.СуммаПревысившаяПредел
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300031706,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения > 1966
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						И МЕСЯЦ(Доходы.Период) < &Месяц3
	|					ТОГДА Доходы.СуммаПревысившаяПредел
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300031806,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						ТОГДА Доходы.ОблагаемаяБазаФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0)), 0) КАК П000300033003,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(Доходы.Период) <= &Месяц1
	|							И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						ТОГДА Доходы.ОблагаемаяБазаФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(Доходы.Период) < &Месяц1
	|							И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						ТОГДА Доходы.ОблагаемаяБазаФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000300033004,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(Доходы.Период) <= &Месяц2
	|							И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						ТОГДА Доходы.ОблагаемаяБазаФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(Доходы.Период) <= &Месяц1
	|							И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						ТОГДА Доходы.ОблагаемаяБазаФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000300033005,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(Доходы.Период) <= &Месяц3
	|							И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						ТОГДА Доходы.ОблагаемаяБазаФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(Доходы.Период) <= &Месяц2
	|							И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						ТОГДА Доходы.ОблагаемаяБазаФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000300033006,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Доходы.ГодРождения < 1967
	|							И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						ТОГДА Доходы.ОблагаемаяБазаПФР
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0)), 0) КАК _П000300032003,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Доходы.ГодРождения < 1967
	|							И МЕСЯЦ(Доходы.Период) <= &Месяц1
	|							И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						ТОГДА Доходы.ОблагаемаяБазаПФР
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Доходы.ГодРождения < 1967
	|							И МЕСЯЦ(Доходы.Период) < &Месяц1
	|							И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						ТОГДА Доходы.ОблагаемаяБазаПФР
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК _П000300032004,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Доходы.ГодРождения < 1967
	|							И МЕСЯЦ(Доходы.Период) <= &Месяц2
	|							И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						ТОГДА Доходы.ОблагаемаяБазаПФР
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Доходы.ГодРождения < 1967
	|							И МЕСЯЦ(Доходы.Период) <= &Месяц1
	|							И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						ТОГДА Доходы.ОблагаемаяБазаПФР
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК _П000300032005,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Доходы.ГодРождения < 1967
	|							И МЕСЯЦ(Доходы.Период) <= &Месяц3
	|							И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						ТОГДА Доходы.ОблагаемаяБазаПФР
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Доходы.ГодРождения < 1967
	|							И МЕСЯЦ(Доходы.Период) <= &Месяц2
	|							И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						ТОГДА Доходы.ОблагаемаяБазаПФР
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК _П000300032006,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Доходы.ГодРождения > 1966
	|							И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						ТОГДА Доходы.ОблагаемаяБазаПФР
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0)), 0) КАК _П000300032103,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Доходы.ГодРождения > 1966
	|							И МЕСЯЦ(Доходы.Период) <= &Месяц1
	|							И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						ТОГДА Доходы.ОблагаемаяБазаПФР
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Доходы.ГодРождения > 1966
	|							И МЕСЯЦ(Доходы.Период) < &Месяц1
	|							И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						ТОГДА Доходы.ОблагаемаяБазаПФР
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК _П000300032104,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Доходы.ГодРождения > 1966
	|							И МЕСЯЦ(Доходы.Период) <= &Месяц2
	|							И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						ТОГДА Доходы.ОблагаемаяБазаПФР
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Доходы.ГодРождения > 1966
	|							И МЕСЯЦ(Доходы.Период) <= &Месяц1
	|							И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						ТОГДА Доходы.ОблагаемаяБазаПФР
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК _П000300032105,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Доходы.ГодРождения > 1966
	|							И МЕСЯЦ(Доходы.Период) <= &Месяц3
	|							И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						ТОГДА Доходы.ОблагаемаяБазаПФР
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Доходы.ГодРождения > 1966
	|							И МЕСЯЦ(Доходы.Период) <= &Месяц2
	|							И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						ТОГДА Доходы.ОблагаемаяБазаПФР
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК _П000300032106,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения < 1967
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|					ТОГДА Доходы.НачисленоВсего
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300035103,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения > 1966
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|					ТОГДА Доходы.НачисленоВсего
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300035203,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения < 1967
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						И МЕСЯЦ(Доходы.Период) < &Месяц1
	|					ТОГДА Доходы.НачисленоВсего
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300035104,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения > 1966
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						И МЕСЯЦ(Доходы.Период) < &Месяц1
	|					ТОГДА Доходы.НачисленоВсего
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300035204,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения < 1967
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						И МЕСЯЦ(Доходы.Период) < &Месяц2
	|					ТОГДА Доходы.НачисленоВсего
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300035105,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения > 1966
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						И МЕСЯЦ(Доходы.Период) < &Месяц2
	|					ТОГДА Доходы.НачисленоВсего
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300035205,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения < 1967
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						И МЕСЯЦ(Доходы.Период) < &Месяц3
	|					ТОГДА Доходы.НачисленоВсего
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300035106,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения > 1966
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						И МЕСЯЦ(Доходы.Период) < &Месяц3
	|					ТОГДА Доходы.НачисленоВсего
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300035206,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения < 1967
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|					ТОГДА Доходы.НеОблагается
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300036103,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения > 1966
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|					ТОГДА Доходы.НеОблагается
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300036203,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения < 1967
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						И МЕСЯЦ(Доходы.Период) < &Месяц1
	|					ТОГДА Доходы.НеОблагается
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300036104,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения > 1966
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						И МЕСЯЦ(Доходы.Период) < &Месяц1
	|					ТОГДА Доходы.НеОблагается
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300036204,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения < 1967
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						И МЕСЯЦ(Доходы.Период) < &Месяц2
	|					ТОГДА Доходы.НеОблагается
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300036105,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения > 1966
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						И МЕСЯЦ(Доходы.Период) < &Месяц2
	|					ТОГДА Доходы.НеОблагается
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300036205,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения < 1967
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						И МЕСЯЦ(Доходы.Период) < &Месяц3
	|					ТОГДА Доходы.НеОблагается
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300036106,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения > 1966
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						И МЕСЯЦ(Доходы.Период) < &Месяц3
	|					ТОГДА Доходы.НеОблагается
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300036206,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения < 1967
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|					ТОГДА Доходы.СуммаПревысившаяПредел
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300036403,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения > 1966
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|					ТОГДА Доходы.СуммаПревысившаяПредел
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300036503,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения < 1967
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						И МЕСЯЦ(Доходы.Период) < &Месяц1
	|					ТОГДА Доходы.СуммаПревысившаяПредел
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300036404,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения > 1966
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						И МЕСЯЦ(Доходы.Период) < &Месяц1
	|					ТОГДА Доходы.СуммаПревысившаяПредел
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300036504,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения < 1967
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						И МЕСЯЦ(Доходы.Период) < &Месяц2
	|					ТОГДА Доходы.СуммаПревысившаяПредел
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300036405,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения > 1966
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						И МЕСЯЦ(Доходы.Период) < &Месяц2
	|					ТОГДА Доходы.СуммаПревысившаяПредел
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300036505,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения < 1967
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						И МЕСЯЦ(Доходы.Период) < &Месяц3
	|					ТОГДА Доходы.СуммаПревысившаяПредел
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300036406,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения > 1966
	|						И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						И МЕСЯЦ(Доходы.Период) < &Месяц3
	|					ТОГДА Доходы.СуммаПревысившаяПредел
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000300036506,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						ТОГДА Доходы.ОблагаемаяБазаФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0)), 0) КАК _П000300038003,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(Доходы.Период) <= &Месяц1
	|							И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						ТОГДА Доходы.ОблагаемаяБазаФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(Доходы.Период) < &Месяц1
	|							И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						ТОГДА Доходы.ОблагаемаяБазаФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК _П000300038004,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(Доходы.Период) <= &Месяц2
	|							И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						ТОГДА Доходы.ОблагаемаяБазаФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(Доходы.Период) <= &Месяц1
	|							И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						ТОГДА Доходы.ОблагаемаяБазаФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК _П000300038005,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(Доходы.Период) <= &Месяц3
	|							И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						ТОГДА Доходы.ОблагаемаяБазаФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(Доходы.Период) <= &Месяц2
	|							И Доходы.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						ТОГДА Доходы.ОблагаемаяБазаФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК _П000300038006
	|ИЗ
	|	ВТДоходыВзносов КАК Доходы
	|ГДЕ
	|	Доходы.ПониженныйТариф
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						ТОГДА ВзносыФизлиц.ПФРСтраховая
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0)), 0) КАК П000300034103,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц1
	|							И ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						ТОГДА ВзносыФизлиц.ПФРСтраховая
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) < &Месяц1
	|							И ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						ТОГДА ВзносыФизлиц.ПФРСтраховая
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000300034104,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц2
	|							И ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						ТОГДА ВзносыФизлиц.ПФРСтраховая
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц1
	|							И ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						ТОГДА ВзносыФизлиц.ПФРСтраховая
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000300034105,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц3
	|							И ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						ТОГДА ВзносыФизлиц.ПФРСтраховая
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц2
	|							И ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						ТОГДА ВзносыФизлиц.ПФРСтраховая
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000300034106,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						ТОГДА ВзносыФизлиц.ПФРНакопительная
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0)), 0) КАК П000300034203,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц1
	|							И ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						ТОГДА ВзносыФизлиц.ПФРНакопительная
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) < &Месяц1
	|							И ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						ТОГДА ВзносыФизлиц.ПФРНакопительная
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000300034204,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц2
	|							И ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						ТОГДА ВзносыФизлиц.ПФРНакопительная
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц1
	|							И ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						ТОГДА ВзносыФизлиц.ПФРНакопительная
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000300034205,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц3
	|							И ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						ТОГДА ВзносыФизлиц.ПФРНакопительная
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц2
	|							И ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						ТОГДА ВзносыФизлиц.ПФРНакопительная
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000300034206,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						ТОГДА ВзносыФизлиц.ФФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0)), 0) КАК П000300034303,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц1
	|							И ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						ТОГДА ВзносыФизлиц.ФФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) < &Месяц1
	|							И ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						ТОГДА ВзносыФизлиц.ФФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000300034304,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц2
	|							И ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						ТОГДА ВзносыФизлиц.ФФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц1
	|							И ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						ТОГДА ВзносыФизлиц.ФФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000300034305,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц3
	|							И ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						ТОГДА ВзносыФизлиц.ФФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц2
	|							И ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						ТОГДА ВзносыФизлиц.ФФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000300034306,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						ТОГДА ВзносыФизлиц.ТФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0)), 0) КАК П000300034403,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц1
	|							И ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						ТОГДА ВзносыФизлиц.ТФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) < &Месяц1
	|							И ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						ТОГДА ВзносыФизлиц.ТФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000300034404,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц2
	|							И ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						ТОГДА ВзносыФизлиц.ТФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц1
	|							И ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						ТОГДА ВзносыФизлиц.ТФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000300034405,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц3
	|							И ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						ТОГДА ВзносыФизлиц.ТФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц2
	|							И ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|						ТОГДА ВзносыФизлиц.ТФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000300034406,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						ТОГДА ВзносыФизлиц.ПФРСтраховая
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0)), 0) КАК П000300039103,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц1
	|							И ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						ТОГДА ВзносыФизлиц.ПФРСтраховая
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) < &Месяц1
	|							И ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						ТОГДА ВзносыФизлиц.ПФРСтраховая
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000300039104,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц2
	|							И ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						ТОГДА ВзносыФизлиц.ПФРСтраховая
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц1
	|							И ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						ТОГДА ВзносыФизлиц.ПФРСтраховая
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000300039105,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц3
	|							И ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						ТОГДА ВзносыФизлиц.ПФРСтраховая
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц2
	|							И ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						ТОГДА ВзносыФизлиц.ПФРСтраховая
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000300039106,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						ТОГДА ВзносыФизлиц.ПФРНакопительная
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0)), 0) КАК П000300039203,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц1
	|							И ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						ТОГДА ВзносыФизлиц.ПФРНакопительная
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) < &Месяц1
	|							И ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						ТОГДА ВзносыФизлиц.ПФРНакопительная
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000300039204,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц2
	|							И ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						ТОГДА ВзносыФизлиц.ПФРНакопительная
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц1
	|							И ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						ТОГДА ВзносыФизлиц.ПФРНакопительная
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000300039205,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц3
	|							И ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						ТОГДА ВзносыФизлиц.ПФРНакопительная
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц2
	|							И ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						ТОГДА ВзносыФизлиц.ПФРНакопительная
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000300039206,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						ТОГДА ВзносыФизлиц.ФФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0)), 0) КАК П000300039303,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц1
	|							И ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						ТОГДА ВзносыФизлиц.ФФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) < &Месяц1
	|							И ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						ТОГДА ВзносыФизлиц.ФФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000300039304,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц2
	|							И ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						ТОГДА ВзносыФизлиц.ФФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц1
	|							И ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						ТОГДА ВзносыФизлиц.ФФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000300039305,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц3
	|							И ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						ТОГДА ВзносыФизлиц.ФФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц2
	|							И ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						ТОГДА ВзносыФизлиц.ФФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000300039306,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						ТОГДА ВзносыФизлиц.ТФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0)), 0) КАК П000300039403,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц1
	|							И ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						ТОГДА ВзносыФизлиц.ТФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) < &Месяц1
	|							И ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						ТОГДА ВзносыФизлиц.ТФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000300039404,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц2
	|							И ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						ТОГДА ВзносыФизлиц.ТФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц1
	|							И ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						ТОГДА ВзносыФизлиц.ТФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000300039405,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц3
	|							И ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						ТОГДА ВзносыФизлиц.ТФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц2
	|							И ВзносыФизлиц.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|						ТОГДА ВзносыФизлиц.ТФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000300039406
	|ИЗ
	|	ВТВзносы КАК ВзносыФизлиц
	|ГДЕ
	|	ВзносыФизлиц.ПониженныйТариф
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Доходы.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов
	|ИЗ
	|	ВТДоходыВзносов КАК Доходы
	|ГДЕ
	|	(НЕ Доходы.ПониженныйТариф)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Доходы.ВидТарифаСтраховыхВзносов.Порядок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Доходы.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения < 1967
	|					ТОГДА Доходы.НачисленоВсего
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000200020103,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения > 1966
	|					ТОГДА Доходы.НачисленоВсего
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000200020203,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения < 1967
	|						И МЕСЯЦ(Доходы.Период) < &Месяц1
	|					ТОГДА Доходы.НачисленоВсего
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000200020104,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения > 1966
	|						И МЕСЯЦ(Доходы.Период) < &Месяц1
	|					ТОГДА Доходы.НачисленоВсего
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000200020204,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения < 1967
	|						И МЕСЯЦ(Доходы.Период) < &Месяц2
	|					ТОГДА Доходы.НачисленоВсего
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000200020105,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения > 1966
	|						И МЕСЯЦ(Доходы.Период) < &Месяц2
	|					ТОГДА Доходы.НачисленоВсего
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000200020205,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения < 1967
	|						И МЕСЯЦ(Доходы.Период) < &Месяц3
	|					ТОГДА Доходы.НачисленоВсего
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000200020106,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения > 1966
	|						И МЕСЯЦ(Доходы.Период) < &Месяц3
	|					ТОГДА Доходы.НачисленоВсего
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000200020206,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения < 1967
	|					ТОГДА Доходы.НеОблагается
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000200021103,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения > 1966
	|					ТОГДА Доходы.НеОблагается
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000200021203,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения < 1967
	|						И МЕСЯЦ(Доходы.Период) < &Месяц1
	|					ТОГДА Доходы.НеОблагается
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000200021104,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения > 1966
	|						И МЕСЯЦ(Доходы.Период) < &Месяц1
	|					ТОГДА Доходы.НеОблагается
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000200021204,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения < 1967
	|						И МЕСЯЦ(Доходы.Период) < &Месяц2
	|					ТОГДА Доходы.НеОблагается
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000200021105,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения > 1966
	|						И МЕСЯЦ(Доходы.Период) < &Месяц2
	|					ТОГДА Доходы.НеОблагается
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000200021205,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения < 1967
	|						И МЕСЯЦ(Доходы.Период) < &Месяц3
	|					ТОГДА Доходы.НеОблагается
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000200021106,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения > 1966
	|						И МЕСЯЦ(Доходы.Период) < &Месяц3
	|					ТОГДА Доходы.НеОблагается
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000200021206,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения < 1967
	|					ТОГДА Доходы.ВыплатыПрокуроров
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000200021403,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения > 1966
	|					ТОГДА Доходы.ВыплатыПрокуроров
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000200021503,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения < 1967
	|						И МЕСЯЦ(Доходы.Период) < &Месяц1
	|					ТОГДА Доходы.ВыплатыПрокуроров
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000200021404,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения > 1966
	|						И МЕСЯЦ(Доходы.Период) < &Месяц1
	|					ТОГДА Доходы.ВыплатыПрокуроров
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000200021504,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения < 1967
	|						И МЕСЯЦ(Доходы.Период) < &Месяц2
	|					ТОГДА Доходы.ВыплатыПрокуроров
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000200021405,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения > 1966
	|						И МЕСЯЦ(Доходы.Период) < &Месяц2
	|					ТОГДА Доходы.ВыплатыПрокуроров
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000200021505,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения < 1967
	|						И МЕСЯЦ(Доходы.Период) < &Месяц3
	|					ТОГДА Доходы.ВыплатыПрокуроров
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000200021406,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения > 1966
	|						И МЕСЯЦ(Доходы.Период) < &Месяц3
	|					ТОГДА Доходы.ВыплатыПрокуроров
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000200021506,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения < 1967
	|					ТОГДА Доходы.СуммаПревысившаяПредел
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000200021703,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения > 1966
	|					ТОГДА Доходы.СуммаПревысившаяПредел
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000200021803,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения < 1967
	|						И МЕСЯЦ(Доходы.Период) < &Месяц1
	|					ТОГДА Доходы.СуммаПревысившаяПредел
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000200021704,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения > 1966
	|						И МЕСЯЦ(Доходы.Период) < &Месяц1
	|					ТОГДА Доходы.СуммаПревысившаяПредел
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000200021804,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения < 1967
	|						И МЕСЯЦ(Доходы.Период) < &Месяц2
	|					ТОГДА Доходы.СуммаПревысившаяПредел
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000200021705,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения > 1966
	|						И МЕСЯЦ(Доходы.Период) < &Месяц2
	|					ТОГДА Доходы.СуммаПревысившаяПредел
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000200021805,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения < 1967
	|						И МЕСЯЦ(Доходы.Период) < &Месяц3
	|					ТОГДА Доходы.СуммаПревысившаяПредел
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000200021706,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ГодРождения > 1966
	|						И МЕСЯЦ(Доходы.Период) < &Месяц3
	|					ТОГДА Доходы.СуммаПревысившаяПредел
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000200021806,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Доходы.ГодРождения < 1967
	|						ТОГДА Доходы.ОблагаемаяБазаПФР
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0)), 0) КАК _П000200022003,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Доходы.ГодРождения < 1967
	|							И МЕСЯЦ(Доходы.Период) <= &Месяц1
	|						ТОГДА Доходы.ОблагаемаяБазаПФР
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Доходы.ГодРождения < 1967
	|							И МЕСЯЦ(Доходы.Период) < &Месяц1
	|						ТОГДА Доходы.ОблагаемаяБазаПФР
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК _П000200022004,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Доходы.ГодРождения < 1967
	|							И МЕСЯЦ(Доходы.Период) <= &Месяц2
	|						ТОГДА Доходы.ОблагаемаяБазаПФР
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Доходы.ГодРождения < 1967
	|							И МЕСЯЦ(Доходы.Период) <= &Месяц1
	|						ТОГДА Доходы.ОблагаемаяБазаПФР
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК _П000200022005,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Доходы.ГодРождения < 1967
	|							И МЕСЯЦ(Доходы.Период) <= &Месяц3
	|						ТОГДА Доходы.ОблагаемаяБазаПФР
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Доходы.ГодРождения < 1967
	|							И МЕСЯЦ(Доходы.Период) <= &Месяц2
	|						ТОГДА Доходы.ОблагаемаяБазаПФР
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК _П000200022006,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Доходы.ГодРождения > 1966
	|						ТОГДА Доходы.ОблагаемаяБазаПФР
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0)), 0) КАК _П000200022103,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Доходы.ГодРождения > 1966
	|							И МЕСЯЦ(Доходы.Период) <= &Месяц1
	|						ТОГДА Доходы.ОблагаемаяБазаПФР
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Доходы.ГодРождения > 1966
	|							И МЕСЯЦ(Доходы.Период) < &Месяц1
	|						ТОГДА Доходы.ОблагаемаяБазаПФР
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК _П000200022104,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Доходы.ГодРождения > 1966
	|							И МЕСЯЦ(Доходы.Период) <= &Месяц2
	|						ТОГДА Доходы.ОблагаемаяБазаПФР
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Доходы.ГодРождения > 1966
	|							И МЕСЯЦ(Доходы.Период) <= &Месяц1
	|						ТОГДА Доходы.ОблагаемаяБазаПФР
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК _П000200022105,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Доходы.ГодРождения > 1966
	|							И МЕСЯЦ(Доходы.Период) <= &Месяц3
	|						ТОГДА Доходы.ОблагаемаяБазаПФР
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Доходы.ГодРождения > 1966
	|							И МЕСЯЦ(Доходы.Период) <= &Месяц2
	|						ТОГДА Доходы.ОблагаемаяБазаПФР
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК _П000200022106,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(СУММА(Доходы.ОблагаемаяБазаФОМС) КАК ЧИСЛО(15, 0)), 0) КАК П000200023003,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(Доходы.Период) <= &Месяц1
	|						ТОГДА Доходы.ОблагаемаяБазаФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(Доходы.Период) < &Месяц1
	|						ТОГДА Доходы.ОблагаемаяБазаФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000200023004,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(Доходы.Период) <= &Месяц2
	|						ТОГДА Доходы.ОблагаемаяБазаФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(Доходы.Период) <= &Месяц1
	|						ТОГДА Доходы.ОблагаемаяБазаФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000200023005,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(Доходы.Период) <= &Месяц3
	|						ТОГДА Доходы.ОблагаемаяБазаФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(Доходы.Период) <= &Месяц2
	|						ТОГДА Доходы.ОблагаемаяБазаФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000200023006
	|ИЗ
	|	ВТДоходыВзносов КАК Доходы
	|ГДЕ
	|	(НЕ Доходы.ПониженныйТариф)
	|
	|СГРУППИРОВАТЬ ПО
	|	Доходы.ВидТарифаСтраховыхВзносов
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВидТарифаСтраховыхВзносов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВЫРАЗИТЬ(СУММА(ВзносыФизлиц.ПФРСтраховая) КАК ЧИСЛО(15, 0)), 0) КАК П000200024103,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц1
	|						ТОГДА ВзносыФизлиц.ПФРСтраховая
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) < &Месяц1
	|						ТОГДА ВзносыФизлиц.ПФРСтраховая
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000200024104,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц2
	|						ТОГДА ВзносыФизлиц.ПФРСтраховая
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц1
	|						ТОГДА ВзносыФизлиц.ПФРСтраховая
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000200024105,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц3
	|						ТОГДА ВзносыФизлиц.ПФРСтраховая
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц2
	|						ТОГДА ВзносыФизлиц.ПФРСтраховая
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000200024106,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(СУММА(ВзносыФизлиц.ПФРНакопительная) КАК ЧИСЛО(15, 0)), 0) КАК П000200024203,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц1
	|						ТОГДА ВзносыФизлиц.ПФРНакопительная
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) < &Месяц1
	|						ТОГДА ВзносыФизлиц.ПФРНакопительная
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000200024204,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц2
	|						ТОГДА ВзносыФизлиц.ПФРНакопительная
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц1
	|						ТОГДА ВзносыФизлиц.ПФРНакопительная
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000200024205,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц3
	|						ТОГДА ВзносыФизлиц.ПФРНакопительная
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц2
	|						ТОГДА ВзносыФизлиц.ПФРНакопительная
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000200024206,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(СУММА(ВзносыФизлиц.ФФОМС) КАК ЧИСЛО(15, 0)), 0) КАК П000200024303,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц1
	|						ТОГДА ВзносыФизлиц.ФФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) < &Месяц1
	|						ТОГДА ВзносыФизлиц.ФФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000200024304,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц2
	|						ТОГДА ВзносыФизлиц.ФФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц1
	|						ТОГДА ВзносыФизлиц.ФФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000200024305,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц3
	|						ТОГДА ВзносыФизлиц.ФФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц2
	|						ТОГДА ВзносыФизлиц.ФФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000200024306,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(СУММА(ВзносыФизлиц.ТФОМС) КАК ЧИСЛО(15, 0)), 0) КАК П000200024403,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц1
	|						ТОГДА ВзносыФизлиц.ТФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) < &Месяц1
	|						ТОГДА ВзносыФизлиц.ТФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000200024404,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц2
	|						ТОГДА ВзносыФизлиц.ТФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц1
	|						ТОГДА ВзносыФизлиц.ТФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000200024405,
	|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц3
	|						ТОГДА ВзносыФизлиц.ТФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(ВзносыФизлиц.Период) <= &Месяц2
	|						ТОГДА ВзносыФизлиц.ТФОМС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК ЧИСЛО(15, 0))), 0) КАК П000200024406,
	|	ВзносыФизлиц.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов
	|ИЗ
	|	ВТВзносы КАК ВзносыФизлиц
	|ГДЕ
	|	(НЕ ВзносыФизлиц.ПониженныйТариф)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВзносыФизлиц.ВидТарифаСтраховыхВзносов
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВидТарифаСтраховыхВзносов";
	
	ОсновнойТекст = СтрЗаменить(ОсновнойТекст,"РегистрСведений.УчетнаяПолитикаНалоговыйУчет", ЗаполнениеРегламентированнойОтчетностиПереопределяемый.ИмяУчетнойПолитики()); 	

	РасчетыСФондамиТекст = 
	"ВЫБРАТЬ
	|	РасчетыПоСтраховымВзносамОбороты.ВидПлатежа КАК ВидПлатежа,
	|	РасчетыПоСтраховымВзносамОбороты.Период КАК Период,
	|	РасчетыПоСтраховымВзносамОбороты.ПФРСтраховаяРасход,
	|	РасчетыПоСтраховымВзносамОбороты.ПФРНакопительнаяРасход,
	|	РасчетыПоСтраховымВзносамОбороты.ПФРСтраховаяПриход,
	|	РасчетыПоСтраховымВзносамОбороты.ПФРНакопительнаяПриход,
	|	РасчетыПоСтраховымВзносамОбороты.ФФОМСПриход,
	|	РасчетыПоСтраховымВзносамОбороты.ФФОМСРасход,
	|	РасчетыПоСтраховымВзносамОбороты.ТФОМСПриход,
	|	РасчетыПоСтраховымВзносамОбороты.ТФОМСРасход
	|ПОМЕСТИТЬ ВТРасчетыСФондом
	|ИЗ
	|	РегистрНакопления.РасчетыПоСтраховымВзносам.Обороты(
	|			&парамНачалоГода,
	|			&парамКонецОтчетногоПериода,
	|			Месяц,
	|			Организация = &парамОбособленноеПодразделение
	|				И МесяцРасчетногоПериода >= &парамДатаПереходаНаВзносы
	|				И ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогАкт))) КАК РасчетыПоСтраховымВзносамОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогАкт)
	|					ТОГДА РасчетыСФондом.ПФРСтраховаяПриход
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК ЧИСЛО(15, 0)) КАК П000100012003,
	|	ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогАкт)
	|					ТОГДА РасчетыСФондом.ПФРНакопительнаяПриход
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК ЧИСЛО(15, 0)) КАК П000100012004,
	|	ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогАкт)
	|					ТОГДА РасчетыСФондом.ФФОМСПриход
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК ЧИСЛО(15, 0)) КАК П000100012005,
	|	ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогАкт)
	|					ТОГДА РасчетыСФондом.ТФОМСПриход
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК ЧИСЛО(15, 0)) КАК П000100012006,
	|	ВЫРАЗИТЬ(СУММА(РасчетыСФондом.ПФРСтраховаяРасход) КАК ЧИСЛО(15, 0)) КАК П000100014003,
	|	(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(РасчетыСФондом.Период) <= &Месяц1
	|					ТОГДА РасчетыСФондом.ПФРСтраховаяРасход
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(РасчетыСФондом.Период) < &Месяц1
	|					ТОГДА РасчетыСФондом.ПФРСтраховаяРасход
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК ЧИСЛО(15, 0))) КАК П000100014103,
	|	(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(РасчетыСФондом.Период) <= &Месяц2
	|					ТОГДА РасчетыСФондом.ПФРСтраховаяРасход
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(РасчетыСФондом.Период) <= &Месяц1
	|					ТОГДА РасчетыСФондом.ПФРСтраховаяРасход
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК ЧИСЛО(15, 0))) КАК П000100014203,
	|	(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(РасчетыСФондом.Период) <= &Месяц3
	|					ТОГДА РасчетыСФондом.ПФРСтраховаяРасход
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(РасчетыСФондом.Период) <= &Месяц2
	|					ТОГДА РасчетыСФондом.ПФРСтраховаяРасход
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК ЧИСЛО(15, 0))) КАК П000100014303,
	|	ВЫРАЗИТЬ(СУММА(РасчетыСФондом.ПФРНакопительнаяРасход) КАК ЧИСЛО(15, 0)) КАК П000100014004,
	|	(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(РасчетыСФондом.Период) <= &Месяц1
	|					ТОГДА РасчетыСФондом.ПФРНакопительнаяРасход
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(РасчетыСФондом.Период) < &Месяц1
	|					ТОГДА РасчетыСФондом.ПФРНакопительнаяРасход
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК ЧИСЛО(15, 0))) КАК П000100014104,
	|	(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(РасчетыСФондом.Период) <= &Месяц2
	|					ТОГДА РасчетыСФондом.ПФРНакопительнаяРасход
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(РасчетыСФондом.Период) <= &Месяц1
	|					ТОГДА РасчетыСФондом.ПФРНакопительнаяРасход
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК ЧИСЛО(15, 0))) КАК П000100014204,
	|	(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(РасчетыСФондом.Период) <= &Месяц3
	|					ТОГДА РасчетыСФондом.ПФРНакопительнаяРасход
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(РасчетыСФондом.Период) <= &Месяц2
	|					ТОГДА РасчетыСФондом.ПФРНакопительнаяРасход
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК ЧИСЛО(15, 0))) КАК П000100014304,
	|	ВЫРАЗИТЬ(СУММА(РасчетыСФондом.ФФОМСРасход) КАК ЧИСЛО(15, 0)) КАК П000100014005,
	|	(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(РасчетыСФондом.Период) <= &Месяц1
	|					ТОГДА РасчетыСФондом.ФФОМСРасход
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(РасчетыСФондом.Период) < &Месяц1
	|					ТОГДА РасчетыСФондом.ФФОМСРасход
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК ЧИСЛО(15, 0))) КАК П000100014105,
	|	(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(РасчетыСФондом.Период) <= &Месяц2
	|					ТОГДА РасчетыСФондом.ФФОМСРасход
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(РасчетыСФондом.Период) <= &Месяц1
	|					ТОГДА РасчетыСФондом.ФФОМСРасход
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК ЧИСЛО(15, 0))) КАК П000100014205,
	|	(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(РасчетыСФондом.Период) <= &Месяц3
	|					ТОГДА РасчетыСФондом.ФФОМСРасход
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(РасчетыСФондом.Период) <= &Месяц2
	|					ТОГДА РасчетыСФондом.ФФОМСРасход
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК ЧИСЛО(15, 0))) КАК П000100014305,
	|	ВЫРАЗИТЬ(СУММА(РасчетыСФондом.ТФОМСРасход) КАК ЧИСЛО(15, 0)) КАК П000100014006,
	|	(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(РасчетыСФондом.Период) <= &Месяц1
	|					ТОГДА РасчетыСФондом.ТФОМСРасход
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(РасчетыСФондом.Период) < &Месяц1
	|					ТОГДА РасчетыСФондом.ТФОМСРасход
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК ЧИСЛО(15, 0))) КАК П000100014106,
	|	(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(РасчетыСФондом.Период) <= &Месяц2
	|					ТОГДА РасчетыСФондом.ТФОМСРасход
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(РасчетыСФондом.Период) <= &Месяц1
	|					ТОГДА РасчетыСФондом.ТФОМСРасход
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК ЧИСЛО(15, 0))) КАК П000100014206,
	|	(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(РасчетыСФондом.Период) <= &Месяц3
	|					ТОГДА РасчетыСФондом.ТФОМСРасход
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(РасчетыСФондом.Период) <= &Месяц2
	|					ТОГДА РасчетыСФондом.ТФОМСРасход
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК ЧИСЛО(15, 0))) КАК П000100014306
	|ИЗ
	|	ВТРасчетыСФондом КАК РасчетыСФондом";
	
	ОстаткиПрошлыхЛетТекст = 
	"ВЫБРАТЬ
	|	РасчетыПоСтраховымВзносамОстаткиИОбороты.ПФРСтраховаяРасход КАК П000500052003,
	|	РасчетыПоСтраховымВзносамОстаткиИОбороты.ПФРНакопительнаяРасход КАК П000500052004,
	|	РасчетыПоСтраховымВзносамОстаткиИОбороты.ПФРСтраховаяНачальныйОстаток КАК П000500051003,
	|	РасчетыПоСтраховымВзносамОстаткиИОбороты.ПФРНакопительнаяНачальныйОстаток КАК П000500051004
	|ИЗ
	|	РегистрНакопления.РасчетыПоСтраховымВзносам.ОстаткиИОбороты(
	|			&парамНачалоГода,
	|			&парамКонецОтчетногоПериода,
	|			,
	|			,
	|			Организация = &парамОбособленноеПодразделение
	|				И МесяцРасчетногоПериода < &парамДатаПереходаНаВзносы
	|				И ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогАкт))) КАК РасчетыПоСтраховымВзносамОстаткиИОбороты";
	
	ОстаткиНаНачалоПериодаТекст = 
	"ВЫБРАТЬ
	|	Остатки.ПФРСтраховаяОстаток КАК П000100010003,
	|	Остатки.ПФРНакопительнаяОстаток КАК П000100010004,
	|	Остатки.ФФОМСОстаток КАК П000100010005,
	|	Остатки.ТФОМСОстаток КАК П000100010006
	|ИЗ
	|	РегистрНакопления.РасчетыПоСтраховымВзносам.Остатки(
	|			&парамНачалоГода,
	|			Организация = &парамОбособленноеПодразделение
	|				И МесяцРасчетногоПериода >= &парамДатаПереходаНаВзносы
	|				И ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогАкт))) КАК Остатки";
	
	ЗастрахованныеЛицаТекст = 
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗастрахованныеЛица.Физлицо) КАК КоличествоФизлиц
	|ИЗ
	|	(ВЫБРАТЬ
	|		РаботникиОрганизацииСрезПоследних.Сотрудник.Физлицо КАК Физлицо
	|	ИЗ
	|		РегистрСведений.РаботникиОрганизаций.СрезПоследних(&парамНачалоГода, Организация = &парамГоловнаяОрганизация) КАК РаботникиОрганизацииСрезПоследних
	|	ГДЕ
	|		РаботникиОрганизацииСрезПоследних.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|		И РаботникиОрганизацииСрезПоследних.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РаботникиОрганизации.Сотрудник.Физлицо
	|	ИЗ
	|		РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
	|	ГДЕ
	|		РаботникиОрганизации.Период МЕЖДУ &парамНачалоГода И &парамКонецОтчетногоПериода
	|		И РаботникиОрганизации.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|		И РаботникиОрганизации.Организация = &парамГоловнаяОрганизация
	|		И РаботникиОрганизации.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СтраховыеВзносыСведенияОДоходахОбороты.ФизЛицо
	|	ИЗ
	|		РегистрНакопления.СтраховыеВзносыСведенияОДоходах.Обороты(
	|				&парамНачалоГода,
	|				&парамКонецОтчетногоПериода,
	|				,
	|				Организация = &парамГоловнаяОрганизация
	|					И ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|					И ВидДохода.ВходитВБазуПФР) КАК СтраховыеВзносыСведенияОДоходахОбороты) КАК ЗастрахованныеЛица
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ЗастрахованныеЛица.Физлицо.СтраховойНомерПФР = """"
	|				ТОГДА ЛОЖЬ
	|			КОГДА ЗастрахованныеЛица.Физлицо.СтраховойНомерПФР = ""   -   -      ""
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ";
	
	// -------------------------------------------------------------------------------
	// Вывод данных в отчет
	
	УзелТитульногоЛиста = ОпределитьСтрокуВДеревеДанныхДляЗаполнения(ДеревоПоказателей, "Титульный");
	УзелРаздел12 = ОпределитьСтрокуВДеревеДанныхДляЗаполнения(ДеревоПоказателей, "Раздел12");
	
	Запрос.Текст = ЗастрахованныеЛицаТекст;
	#Если Клиент тогда
	ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Выборка = Запрос.Выполнить().Выбрать();
	Исключение
		#Если Клиент тогда
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	
	// Титульный лист
		
	
	Если Выборка.Следующий() Тогда
		ЧисленностьЗастрахованныхЛиц = Формат(Выборка.КоличествоФизлиц,"ЧЦ=6; ЧДЦ=0; ЧГ=0");
		
		ВсегоЗнаков = СтрДлина(ЧисленностьЗастрахованныхЛиц);
		Для СчСимволов = 1 По ВсегоЗнаков Цикл
			ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелТитульногоЛиста, "СрСписЧисл" + Строка(6 - СчСимволов), Сред(ЧисленностьЗастрахованныхЛиц, ВсегоЗнаков - СчСимволов + 1,1));
			ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелТитульногоЛиста, "КолЗастрахованных" + Строка(7 - СчСимволов), Сред(ЧисленностьЗастрахованныхЛиц, ВсегоЗнаков - СчСимволов + 1,1));
		КонецЦикла;
		Если ВсегоЗнаков < 6 Тогда
			Для СчСимволов = ВсегоЗнаков + 1 По 6 Цикл
				ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелТитульногоЛиста, "КолЗастрахованных" + Строка(7 - СчСимволов), "");
			КонецЦикла;
		КонецЕсли;
		
		Если ВсегоЗнаков < 5 Тогда
			Для СчСимволов = ВсегоЗнаков + 1 По 5 Цикл
				ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелТитульногоЛиста, "СрСписЧисл" + Строка(6 - СчСимволов), "");
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	// Раздел 1 
	
	Запрос.Текст = РасчетыСФондамиТекст;
	#Если Клиент тогда
	ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Результат = Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	ВывестиРезультатЗапросаВДеревоПоказателей(УзелРаздел12,Результат); 
	
	Если Год(ДатаКонцаПериодаОтчета) > Год(ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами()) Тогда
		
		Запрос.Текст = ОстаткиНаНачалоПериодаТекст;
		#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
		#КонецЕсли
		Попытка
			Результат = Запрос.Выполнить();
		Исключение
			#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
			#КонецЕсли
			Возврат ПустоеДерево;
		КонецПопытки;
		ВывестиРезультатЗапросаВДеревоПоказателей(УзелРаздел12,Результат); 
		
	КонецЕсли;
	
	// Разделы 2,3 и 4
	
	Запрос.Текст = ОсновнойТекст;
	#Если Клиент тогда
	ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		МассивРезультатов = Запрос.ВыполнитьПакет();
	Исключение
		#Если Клиент тогда
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	
	ВсегоЗапросов = МассивРезультатов.Количество();
	
	// Раздел 3
	
	УзелРаздел3 = ОпределитьСтрокуВДеревеДанныхДляЗаполнения(ДеревоПоказателей, "Раздел30");
	
	// дополнительная обработка в целях округления
	ВременнаяТаблица = МассивРезультатов[ВсегоЗапросов-5].Выгрузить();
	СтрокаРаздела3 = ВременнаяТаблица[0];
	
	СтрокаРаздела3.П000300031103 = Окр(СтрокаРаздела3.П000300031103,0); // за весь отчетный период
	СтрокаРаздела3.П000300031104 = Окр(СтрокаРаздела3.П000300031104,0); // за предыдущий отчетный период
	СтрокаРаздела3.П000300031105 = Окр(СтрокаРаздела3.П000300031105,0); // по первый месяц отчетного периода
	СтрокаРаздела3.П000300031106 = Окр(СтрокаРаздела3.П000300031106,0); // по второй месяц отчетного периода
	СтрокаРаздела3.П000300031203 = Окр(СтрокаРаздела3.П000300031203,0); // за весь отчетный период
	СтрокаРаздела3.П000300031204 = Окр(СтрокаРаздела3.П000300031204,0); // за предыдущий отчетный период
	СтрокаРаздела3.П000300031205 = Окр(СтрокаРаздела3.П000300031205,0); // по первый месяц отчетного периода
	СтрокаРаздела3.П000300031206 = Окр(СтрокаРаздела3.П000300031206,0); // по второй месяц отчетного периода
	СтрокаРаздела3.П000300031104 = СтрокаРаздела3.П000300031105 - СтрокаРаздела3.П000300031104;
	СтрокаРаздела3.П000300031204 = СтрокаРаздела3.П000300031205 - СтрокаРаздела3.П000300031204;
	СтрокаРаздела3.П000300031105 = СтрокаРаздела3.П000300031106 - СтрокаРаздела3.П000300031105;
	СтрокаРаздела3.П000300031205 = СтрокаРаздела3.П000300031206 - СтрокаРаздела3.П000300031205;
	СтрокаРаздела3.П000300031106 = СтрокаРаздела3.П000300031103 - СтрокаРаздела3.П000300031106;
	СтрокаРаздела3.П000300031206 = СтрокаРаздела3.П000300031203 - СтрокаРаздела3.П000300031206;
	СтрокаРаздела3.П000300031703 = Окр(СтрокаРаздела3.П000300031703,0); // за весь отчетный период
	СтрокаРаздела3.П000300031704 = Окр(СтрокаРаздела3.П000300031704,0); // за предыдущий отчетный период
	СтрокаРаздела3.П000300031705 = Окр(СтрокаРаздела3.П000300031705,0); // по первый месяц отчетного периода
	СтрокаРаздела3.П000300031706 = Окр(СтрокаРаздела3.П000300031706,0); // по второй месяц отчетного периода
	СтрокаРаздела3.П000300031803 = Окр(СтрокаРаздела3.П000300031803,0); // за весь отчетный период
	СтрокаРаздела3.П000300031804 = Окр(СтрокаРаздела3.П000300031804,0); // за предыдущий отчетный период
	СтрокаРаздела3.П000300031805 = Окр(СтрокаРаздела3.П000300031805,0); // по первый месяц отчетного периода
	СтрокаРаздела3.П000300031806 = Окр(СтрокаРаздела3.П000300031806,0); // по второй месяц отчетного периода
	СтрокаРаздела3.П000300031704 = СтрокаРаздела3.П000300031705 - СтрокаРаздела3.П000300031704;
	СтрокаРаздела3.П000300031804 = СтрокаРаздела3.П000300031805 - СтрокаРаздела3.П000300031804;
	СтрокаРаздела3.П000300031705 = СтрокаРаздела3.П000300031706 - СтрокаРаздела3.П000300031705;
	СтрокаРаздела3.П000300031805 = СтрокаРаздела3.П000300031806 - СтрокаРаздела3.П000300031805;
	СтрокаРаздела3.П000300031706 = СтрокаРаздела3.П000300031703 - СтрокаРаздела3.П000300031706;
	СтрокаРаздела3.П000300031806 = СтрокаРаздела3.П000300031803 - СтрокаРаздела3.П000300031806;
	ОкруглитьДваСлагаемыхПоСумме(СтрокаРаздела3.П000300030103, СтрокаРаздела3.П000300030203, СтрокаРаздела3.П000300033003 + СтрокаРаздела3.П000300031103 + СтрокаРаздела3.П000300031203 + СтрокаРаздела3.П000300031703 + СтрокаРаздела3.П000300031803); // за весь отчетный период
	ТочнаяСумма = СтрокаРаздела3.П000300033003 + СтрокаРаздела3.П000300031103 + СтрокаРаздела3.П000300031203 + СтрокаРаздела3.П000300031703 + СтрокаРаздела3.П000300031803
				- (СтрокаРаздела3.П000300033004 + СтрокаРаздела3.П000300031104 + СтрокаРаздела3.П000300031204 + СтрокаРаздела3.П000300031704 + СтрокаРаздела3.П000300031804)
				- (СтрокаРаздела3.П000300033005 + СтрокаРаздела3.П000300031105 + СтрокаРаздела3.П000300031205 + СтрокаРаздела3.П000300031705 + СтрокаРаздела3.П000300031805)
				- (СтрокаРаздела3.П000300033006 + СтрокаРаздела3.П000300031106 + СтрокаРаздела3.П000300031206 + СтрокаРаздела3.П000300031706 + СтрокаРаздела3.П000300031806);
	ОкруглитьДваСлагаемыхПоСумме(СтрокаРаздела3.П000300030104, СтрокаРаздела3.П000300030204, ТочнаяСумма); // за предыдущий отчетный период
	ТочнаяСумма = СтрокаРаздела3.П000300033003 + СтрокаРаздела3.П000300031103 + СтрокаРаздела3.П000300031203 + СтрокаРаздела3.П000300031703 + СтрокаРаздела3.П000300031803
				- (СтрокаРаздела3.П000300033005 + СтрокаРаздела3.П000300031105 + СтрокаРаздела3.П000300031205 + СтрокаРаздела3.П000300031705 + СтрокаРаздела3.П000300031805)
				- (СтрокаРаздела3.П000300033006 + СтрокаРаздела3.П000300031106 + СтрокаРаздела3.П000300031206 + СтрокаРаздела3.П000300031706 + СтрокаРаздела3.П000300031806);
	ОкруглитьДваСлагаемыхПоСумме(СтрокаРаздела3.П000300030105, СтрокаРаздела3.П000300030205, ТочнаяСумма); // по первый месяц отчетного периода
	ТочнаяСумма = СтрокаРаздела3.П000300033003 + СтрокаРаздела3.П000300031103 + СтрокаРаздела3.П000300031203 + СтрокаРаздела3.П000300031703 + СтрокаРаздела3.П000300031803
				- (СтрокаРаздела3.П000300033006 + СтрокаРаздела3.П000300031106 + СтрокаРаздела3.П000300031206 + СтрокаРаздела3.П000300031706 + СтрокаРаздела3.П000300031806);
	ОкруглитьДваСлагаемыхПоСумме(СтрокаРаздела3.П000300030106, СтрокаРаздела3.П000300030206, ТочнаяСумма); // по второй месяц отчетного периода
	СтрокаРаздела3.П000300030104 = СтрокаРаздела3.П000300030105 - СтрокаРаздела3.П000300030104;
	СтрокаРаздела3.П000300030204 = СтрокаРаздела3.П000300030205 - СтрокаРаздела3.П000300030204;
	СтрокаРаздела3.П000300030105 = СтрокаРаздела3.П000300030106 - СтрокаРаздела3.П000300030105;
	СтрокаРаздела3.П000300030205 = СтрокаРаздела3.П000300030206 - СтрокаРаздела3.П000300030205;
	СтрокаРаздела3.П000300030106 = СтрокаРаздела3.П000300030103 - СтрокаРаздела3.П000300030106;
	СтрокаРаздела3.П000300030206 = СтрокаРаздела3.П000300030203 - СтрокаРаздела3.П000300030206;
	
	Если СтрокаРаздела3._П000300032003 + СтрокаРаздела3._П000300032103 <> СтрокаРаздела3.П000300033003 Тогда
		СтрокаРаздела3.П000300031403 = СтрокаРаздела3.П000300030103 - СтрокаРаздела3.П000300031103 - СтрокаРаздела3.П000300031703 - СтрокаРаздела3._П000300032003;
		СтрокаРаздела3.П000300031503 = СтрокаРаздела3.П000300030203 - СтрокаРаздела3.П000300031203 - СтрокаРаздела3.П000300031803 - СтрокаРаздела3._П000300032103;
		СтрокаРаздела3.П000300031404 = СтрокаРаздела3.П000300030104 - СтрокаРаздела3.П000300031104 - СтрокаРаздела3.П000300031704 - СтрокаРаздела3._П000300032004;
		СтрокаРаздела3.П000300031504 = СтрокаРаздела3.П000300030204 - СтрокаРаздела3.П000300031204 - СтрокаРаздела3.П000300031804 - СтрокаРаздела3._П000300032104;
		СтрокаРаздела3.П000300031405 = СтрокаРаздела3.П000300030105 - СтрокаРаздела3.П000300031105 - СтрокаРаздела3.П000300031705 - СтрокаРаздела3._П000300032005;
		СтрокаРаздела3.П000300031505 = СтрокаРаздела3.П000300030205 - СтрокаРаздела3.П000300031205 - СтрокаРаздела3.П000300031805 - СтрокаРаздела3._П000300032105;
		СтрокаРаздела3.П000300031406 = СтрокаРаздела3.П000300030106 - СтрокаРаздела3.П000300031106 - СтрокаРаздела3.П000300031706 - СтрокаРаздела3._П000300032006;
		СтрокаРаздела3.П000300031506 = СтрокаРаздела3.П000300030206 - СтрокаРаздела3.П000300031206 - СтрокаРаздела3.П000300031806 - СтрокаРаздела3._П000300032106;
	КонецЕсли;
	
	СтрокаРаздела3.П000300036103 = Окр(СтрокаРаздела3.П000300036103,0); // за весь отчетный период
	СтрокаРаздела3.П000300036104 = Окр(СтрокаРаздела3.П000300036104,0); // за предыдущий отчетный период
	СтрокаРаздела3.П000300036105 = Окр(СтрокаРаздела3.П000300036105,0); // по первый месяц отчетного периода
	СтрокаРаздела3.П000300036106 = Окр(СтрокаРаздела3.П000300036106,0); // по второй месяц отчетного периода
	СтрокаРаздела3.П000300036203 = Окр(СтрокаРаздела3.П000300036203,0); // за весь отчетный период
	СтрокаРаздела3.П000300036204 = Окр(СтрокаРаздела3.П000300036204,0); // за предыдущий отчетный период
	СтрокаРаздела3.П000300036205 = Окр(СтрокаРаздела3.П000300036205,0); // по первый месяц отчетного периода
	СтрокаРаздела3.П000300036206 = Окр(СтрокаРаздела3.П000300036206,0); // по второй месяц отчетного периода
	СтрокаРаздела3.П000300036104 = СтрокаРаздела3.П000300036105 - СтрокаРаздела3.П000300036104;
	СтрокаРаздела3.П000300036204 = СтрокаРаздела3.П000300036205 - СтрокаРаздела3.П000300036204;
	СтрокаРаздела3.П000300036105 = СтрокаРаздела3.П000300036106 - СтрокаРаздела3.П000300036105;
	СтрокаРаздела3.П000300036205 = СтрокаРаздела3.П000300036206 - СтрокаРаздела3.П000300036205;
	СтрокаРаздела3.П000300036106 = СтрокаРаздела3.П000300036103 - СтрокаРаздела3.П000300036106;
	СтрокаРаздела3.П000300036206 = СтрокаРаздела3.П000300036203 - СтрокаРаздела3.П000300036206;
	СтрокаРаздела3.П000300036403 = Окр(СтрокаРаздела3.П000300036403,0); // за весь отчетный период
	СтрокаРаздела3.П000300036404 = Окр(СтрокаРаздела3.П000300036404,0); // за предыдущий отчетный период
	СтрокаРаздела3.П000300036405 = Окр(СтрокаРаздела3.П000300036405,0); // по первый месяц отчетного периода
	СтрокаРаздела3.П000300036406 = Окр(СтрокаРаздела3.П000300036406,0); // по второй месяц отчетного периода
	СтрокаРаздела3.П000300036503 = Окр(СтрокаРаздела3.П000300036503,0); // за весь отчетный период
	СтрокаРаздела3.П000300036504 = Окр(СтрокаРаздела3.П000300036504,0); // за предыдущий отчетный период
	СтрокаРаздела3.П000300036505 = Окр(СтрокаРаздела3.П000300036505,0); // по первый месяц отчетного периода
	СтрокаРаздела3.П000300036506 = Окр(СтрокаРаздела3.П000300036506,0); // по второй месяц отчетного периода
	СтрокаРаздела3.П000300036404 = СтрокаРаздела3.П000300036405 - СтрокаРаздела3.П000300036404;
	СтрокаРаздела3.П000300036504 = СтрокаРаздела3.П000300036505 - СтрокаРаздела3.П000300036504;
	СтрокаРаздела3.П000300036405 = СтрокаРаздела3.П000300036406 - СтрокаРаздела3.П000300036405;
	СтрокаРаздела3.П000300036505 = СтрокаРаздела3.П000300036506 - СтрокаРаздела3.П000300036505;
	СтрокаРаздела3.П000300036406 = СтрокаРаздела3.П000300036403 - СтрокаРаздела3.П000300036406;
	СтрокаРаздела3.П000300036506 = СтрокаРаздела3.П000300036503 - СтрокаРаздела3.П000300036506;
	ОкруглитьДваСлагаемыхПоСумме(СтрокаРаздела3.П000300035103, СтрокаРаздела3.П000300035203, СтрокаРаздела3._П000300038003 + СтрокаРаздела3.П000300036103 + СтрокаРаздела3.П000300036203 + СтрокаРаздела3.П000300036403 + СтрокаРаздела3.П000300036503); // за весь отчетный период
	ТочнаяСумма = СтрокаРаздела3._П000300038003 + СтрокаРаздела3.П000300036103 + СтрокаРаздела3.П000300036203 + СтрокаРаздела3.П000300036403 + СтрокаРаздела3.П000300036503
				- (СтрокаРаздела3._П000300038004 + СтрокаРаздела3.П000300036104 + СтрокаРаздела3.П000300036204 + СтрокаРаздела3.П000300036404 + СтрокаРаздела3.П000300036504)
				- (СтрокаРаздела3._П000300038005 + СтрокаРаздела3.П000300036105 + СтрокаРаздела3.П000300036205 + СтрокаРаздела3.П000300036405 + СтрокаРаздела3.П000300036505)
				- (СтрокаРаздела3._П000300038006 + СтрокаРаздела3.П000300036106 + СтрокаРаздела3.П000300036206 + СтрокаРаздела3.П000300036406 + СтрокаРаздела3.П000300036506);
	ОкруглитьДваСлагаемыхПоСумме(СтрокаРаздела3.П000300035104, СтрокаРаздела3.П000300035204, ТочнаяСумма); // за предыдущий отчетный период
	ТочнаяСумма = СтрокаРаздела3._П000300038003 + СтрокаРаздела3.П000300036103 + СтрокаРаздела3.П000300036203 + СтрокаРаздела3.П000300036403 + СтрокаРаздела3.П000300036503
				- (СтрокаРаздела3._П000300038005 + СтрокаРаздела3.П000300036105 + СтрокаРаздела3.П000300036205 + СтрокаРаздела3.П000300036405 + СтрокаРаздела3.П000300036505)
				- (СтрокаРаздела3._П000300038006 + СтрокаРаздела3.П000300036106 + СтрокаРаздела3.П000300036206 + СтрокаРаздела3.П000300036406 + СтрокаРаздела3.П000300036506);
	ОкруглитьДваСлагаемыхПоСумме(СтрокаРаздела3.П000300035105, СтрокаРаздела3.П000300035205, ТочнаяСумма); // по первый месяц отчетного периода
	ТочнаяСумма = СтрокаРаздела3._П000300038003 + СтрокаРаздела3.П000300036103 + СтрокаРаздела3.П000300036203 + СтрокаРаздела3.П000300036403 + СтрокаРаздела3.П000300036503
				- (СтрокаРаздела3._П000300038006 + СтрокаРаздела3.П000300036106 + СтрокаРаздела3.П000300036206 + СтрокаРаздела3.П000300036406 + СтрокаРаздела3.П000300036506);
	ОкруглитьДваСлагаемыхПоСумме(СтрокаРаздела3.П000300035106, СтрокаРаздела3.П000300035206, ТочнаяСумма); // по второй месяц отчетного периода
	СтрокаРаздела3.П000300035104 = СтрокаРаздела3.П000300035105 - СтрокаРаздела3.П000300035104;
	СтрокаРаздела3.П000300035204 = СтрокаРаздела3.П000300035205 - СтрокаРаздела3.П000300035204;
	СтрокаРаздела3.П000300035105 = СтрокаРаздела3.П000300035106 - СтрокаРаздела3.П000300035105;
	СтрокаРаздела3.П000300035205 = СтрокаРаздела3.П000300035206 - СтрокаРаздела3.П000300035205;
	СтрокаРаздела3.П000300035106 = СтрокаРаздела3.П000300035103 - СтрокаРаздела3.П000300035106;
	СтрокаРаздела3.П000300035206 = СтрокаРаздела3.П000300035203 - СтрокаРаздела3.П000300035206;
	
	ВывестиТаблицуДанныхВДеревоПоказателей(УзелРаздел3,ВременнаяТаблица); // доходы
	ВременнаяТаблица = МассивРезультатов[ВсегоЗапросов-4].Выгрузить();
	СтрокаВзносовРаздела3 = ВременнаяТаблица[0];
	ВывестиТаблицуДанныхВДеревоПоказателей(УзелРаздел3,ВременнаяТаблица); // взносы
	
	// Раздел 2 
	
	ВсеТарифы = МассивРезультатов[ВсегоЗапросов-3].Выгрузить();
	ТаблицаДоходов = МассивРезультатов[ВсегоЗапросов-2].Выгрузить();
	ТаблицаВзносов = МассивРезультатов[ВсегоЗапросов-1].Выгрузить();
	СтрокаИтоговПоВзносам = МассивРезультатов[ВсегоЗапросов-7].Выгрузить()[0];
	КоличествоТарифов = ВсеТарифы.Количество();
	ИндексПоследнейСтроки = КоличествоТарифов - 1;
	КодНаТитулеНеПроставлен = Истина;
	СуммыВзносовНеСкорректированы = Истина;
	
	Для каждого СтрокаРезультата Из ВсеТарифы Цикл
		
		СтрокаДоходов = ТаблицаДоходов.Найти(СтрокаРезультата.ВидТарифаСтраховыхВзносов,"ВидТарифаСтраховыхВзносов");
		СтрокаВзносов = ТаблицаВзносов.Найти(СтрокаРезультата.ВидТарифаСтраховыхВзносов,"ВидТарифаСтраховыхВзносов");
		
		КодТарифа = СоответствиеКодовТарифа[СтрокаРезультата.ВидТарифаСтраховыхВзносов];
		ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел12, "П000200001001_1", Лев(КодТарифа,1));
		ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел12, "П000200001001_2", Прав(КодТарифа,1));
		
		Если КоличествоТарифов = 1 Тогда
			ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелТитульногоЛиста, "Тариф1", Лев(КодТарифа,1));
			ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелТитульногоЛиста, "Тариф2", Прав(КодТарифа,1));
		ИначеЕсли КодНаТитулеНеПроставлен Тогда
			КодНаТитулеНеПроставлен = Ложь;
			ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелТитульногоЛиста, "Тариф1", "0");
			ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелТитульногоЛиста, "Тариф2", "0");
		КонецЕсли;
		
		Если СтрокаДоходов = Неопределено и СтрокаВзносов = Неопределено Тогда // по текущему тарифу нет данных
			Если КоличествоТарифов > 1 И ВсеТарифы.Индекс(СтрокаРезультата) = ИндексПоследнейСтроки Тогда
				ДеревоПоказателей.Строки.Удалить(УзелРаздел12)
			КонецЕсли;
			Продолжить;
		КонецЕсли;
		
		Если СтрокаДоходов <> Неопределено Тогда
			
			СтрокаДоходов.П000200021103 = Окр(СтрокаДоходов.П000200021103,0); // за весь отчетный период
			СтрокаДоходов.П000200021104 = Окр(СтрокаДоходов.П000200021104,0); // за предыдущий отчетный период
			СтрокаДоходов.П000200021105 = Окр(СтрокаДоходов.П000200021105,0); // по первый месяц отчетного периода
			СтрокаДоходов.П000200021106 = Окр(СтрокаДоходов.П000200021106,0); // по второй месяц отчетного периода
			СтрокаДоходов.П000200021203 = Окр(СтрокаДоходов.П000200021203,0); // за весь отчетный период
			СтрокаДоходов.П000200021204 = Окр(СтрокаДоходов.П000200021204,0); // за предыдущий отчетный период
			СтрокаДоходов.П000200021205 = Окр(СтрокаДоходов.П000200021205,0); // по первый месяц отчетного периода
			СтрокаДоходов.П000200021206 = Окр(СтрокаДоходов.П000200021206,0); // по второй месяц отчетного периода
			СтрокаДоходов.П000200021104 = СтрокаДоходов.П000200021105 - СтрокаДоходов.П000200021104;
			СтрокаДоходов.П000200021204 = СтрокаДоходов.П000200021205 - СтрокаДоходов.П000200021204;
			СтрокаДоходов.П000200021105 = СтрокаДоходов.П000200021106 - СтрокаДоходов.П000200021105;
			СтрокаДоходов.П000200021205 = СтрокаДоходов.П000200021206 - СтрокаДоходов.П000200021205;
			СтрокаДоходов.П000200021106 = СтрокаДоходов.П000200021103 - СтрокаДоходов.П000200021106;
			СтрокаДоходов.П000200021206 = СтрокаДоходов.П000200021203 - СтрокаДоходов.П000200021206;
			СтрокаДоходов.П000200021703 = Окр(СтрокаДоходов.П000200021703,0); // за весь отчетный период
			СтрокаДоходов.П000200021704 = Окр(СтрокаДоходов.П000200021704,0); // за предыдущий отчетный период
			СтрокаДоходов.П000200021705 = Окр(СтрокаДоходов.П000200021705,0); // по первый месяц отчетного периода
			СтрокаДоходов.П000200021706 = Окр(СтрокаДоходов.П000200021706,0); // по второй месяц отчетного периода
			СтрокаДоходов.П000200021803 = Окр(СтрокаДоходов.П000200021803,0); // за весь отчетный период
			СтрокаДоходов.П000200021804 = Окр(СтрокаДоходов.П000200021804,0); // за предыдущий отчетный период
			СтрокаДоходов.П000200021805 = Окр(СтрокаДоходов.П000200021805,0); // по первый месяц отчетного периода
			СтрокаДоходов.П000200021806 = Окр(СтрокаДоходов.П000200021806,0); // по второй месяц отчетного периода
			СтрокаДоходов.П000200021704 = СтрокаДоходов.П000200021705 - СтрокаДоходов.П000200021704;
			СтрокаДоходов.П000200021804 = СтрокаДоходов.П000200021805 - СтрокаДоходов.П000200021804;
			СтрокаДоходов.П000200021705 = СтрокаДоходов.П000200021706 - СтрокаДоходов.П000200021705;
			СтрокаДоходов.П000200021805 = СтрокаДоходов.П000200021806 - СтрокаДоходов.П000200021805;
			СтрокаДоходов.П000200021706 = СтрокаДоходов.П000200021703 - СтрокаДоходов.П000200021706;
			СтрокаДоходов.П000200021806 = СтрокаДоходов.П000200021803 - СтрокаДоходов.П000200021806;
			ОкруглитьДваСлагаемыхПоСумме(СтрокаДоходов.П000200020103, СтрокаДоходов.П000200020203, СтрокаДоходов.П000200023003 + СтрокаДоходов.П000200021103 + СтрокаДоходов.П000200021203 + СтрокаДоходов.П000200021703 + СтрокаДоходов.П000200021803); // за весь отчетный период
			ТочнаяСумма = СтрокаДоходов.П000200023003 + СтрокаДоходов.П000200021103 + СтрокаДоходов.П000200021203 + СтрокаДоходов.П000200021703 + СтрокаДоходов.П000200021803
			- (СтрокаДоходов.П000200023004 + СтрокаДоходов.П000200021104 + СтрокаДоходов.П000200021204 + СтрокаДоходов.П000200021704 + СтрокаДоходов.П000200021804)
			- (СтрокаДоходов.П000200023005 + СтрокаДоходов.П000200021105 + СтрокаДоходов.П000200021205 + СтрокаДоходов.П000200021705 + СтрокаДоходов.П000200021805)
			- (СтрокаДоходов.П000200023006 + СтрокаДоходов.П000200021106 + СтрокаДоходов.П000200021206 + СтрокаДоходов.П000200021706 + СтрокаДоходов.П000200021806);
			ОкруглитьДваСлагаемыхПоСумме(СтрокаДоходов.П000200020104, СтрокаДоходов.П000200020204, ТочнаяСумма); // за предыдущий отчетный период
			ТочнаяСумма = СтрокаДоходов.П000200023003 + СтрокаДоходов.П000200021103 + СтрокаДоходов.П000200021203 + СтрокаДоходов.П000200021703 + СтрокаДоходов.П000200021803
			- (СтрокаДоходов.П000200023005 + СтрокаДоходов.П000200021105 + СтрокаДоходов.П000200021205 + СтрокаДоходов.П000200021705 + СтрокаДоходов.П000200021805)
			- (СтрокаДоходов.П000200023006 + СтрокаДоходов.П000200021106 + СтрокаДоходов.П000200021206 + СтрокаДоходов.П000200021706 + СтрокаДоходов.П000200021806);
			ОкруглитьДваСлагаемыхПоСумме(СтрокаДоходов.П000200020105, СтрокаДоходов.П000200020205, ТочнаяСумма); // по первый месяц отчетного периода
			ТочнаяСумма = СтрокаДоходов.П000200023003 + СтрокаДоходов.П000200021103 + СтрокаДоходов.П000200021203 + СтрокаДоходов.П000200021703 + СтрокаДоходов.П000200021803
			- (СтрокаДоходов.П000200023006 + СтрокаДоходов.П000200021106 + СтрокаДоходов.П000200021206 + СтрокаДоходов.П000200021706 + СтрокаДоходов.П000200021806);
			ОкруглитьДваСлагаемыхПоСумме(СтрокаДоходов.П000200020106, СтрокаДоходов.П000200020206, ТочнаяСумма); // по второй месяц отчетного периода
			СтрокаДоходов.П000200020104 = СтрокаДоходов.П000200020105 - СтрокаДоходов.П000200020104;
			СтрокаДоходов.П000200020204 = СтрокаДоходов.П000200020205 - СтрокаДоходов.П000200020204;
			СтрокаДоходов.П000200020105 = СтрокаДоходов.П000200020106 - СтрокаДоходов.П000200020105;
			СтрокаДоходов.П000200020205 = СтрокаДоходов.П000200020206 - СтрокаДоходов.П000200020205;
			СтрокаДоходов.П000200020106 = СтрокаДоходов.П000200020103 - СтрокаДоходов.П000200020106;
			СтрокаДоходов.П000200020206 = СтрокаДоходов.П000200020203 - СтрокаДоходов.П000200020206;
			
			Если СтрокаДоходов._П000200022003 + СтрокаДоходов._П000200022103 <> СтрокаДоходов.П000200023003 Тогда
				СтрокаДоходов.П000200021403 = СтрокаДоходов.П000200020103 - СтрокаДоходов.П000200021103 - СтрокаДоходов.П000200021703 - СтрокаДоходов._П000200022003;
				СтрокаДоходов.П000200021503 = СтрокаДоходов.П000200020203 - СтрокаДоходов.П000200021203 - СтрокаДоходов.П000200021803 - СтрокаДоходов._П000200022103;
				СтрокаДоходов.П000200021404 = СтрокаДоходов.П000200020104 - СтрокаДоходов.П000200021104 - СтрокаДоходов.П000200021704 - СтрокаДоходов._П000200022004;
				СтрокаДоходов.П000200021504 = СтрокаДоходов.П000200020204 - СтрокаДоходов.П000200021204 - СтрокаДоходов.П000200021804 - СтрокаДоходов._П000200022104;
				СтрокаДоходов.П000200021405 = СтрокаДоходов.П000200020105 - СтрокаДоходов.П000200021105 - СтрокаДоходов.П000200021705 - СтрокаДоходов._П000200022005;
				СтрокаДоходов.П000200021505 = СтрокаДоходов.П000200020205 - СтрокаДоходов.П000200021205 - СтрокаДоходов.П000200021805 - СтрокаДоходов._П000200022105;
				СтрокаДоходов.П000200021406 = СтрокаДоходов.П000200020106 - СтрокаДоходов.П000200021106 - СтрокаДоходов.П000200021706 - СтрокаДоходов._П000200022006;
				СтрокаДоходов.П000200021506 = СтрокаДоходов.П000200020206 - СтрокаДоходов.П000200021206 - СтрокаДоходов.П000200021806 - СтрокаДоходов._П000200022106;
			КонецЕсли;
	
			Для каждого Колонка Из ТаблицаДоходов.Колонки Цикл
				Если Лев(Колонка.Имя,3) = "П00" Тогда
					ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел12, Колонка.Имя, СтрокаДоходов[Колонка.Имя]);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		Если СтрокаВзносов <> Неопределено Тогда
			Если СуммыВзносовНеСкорректированы Тогда
				СуммыВзносовНеСкорректированы = Ложь;
				СтрокаВзносов.П000200024103 = СтрокаВзносов.П000200024103 + СтрокаИтоговПоВзносам.П000200024103 - СтрокаВзносовРаздела3.П000300034103 - СтрокаВзносовРаздела3.П000300039103 - ТаблицаВзносов.Итог("П000200024103");
				СтрокаВзносов.П000200024203 = СтрокаВзносов.П000200024203 + СтрокаИтоговПоВзносам.П000200024203 - СтрокаВзносовРаздела3.П000300034203 - СтрокаВзносовРаздела3.П000300039203 - ТаблицаВзносов.Итог("П000200024203");
				СтрокаВзносов.П000200024303 = СтрокаВзносов.П000200024303 + СтрокаИтоговПоВзносам.П000200024303 - СтрокаВзносовРаздела3.П000300034303 - СтрокаВзносовРаздела3.П000300039303 - ТаблицаВзносов.Итог("П000200024303");
				СтрокаВзносов.П000200024403 = СтрокаВзносов.П000200024403 + СтрокаИтоговПоВзносам.П000200024403 - СтрокаВзносовРаздела3.П000300034403 - СтрокаВзносовРаздела3.П000300039403 - ТаблицаВзносов.Итог("П000200024403");
				СтрокаВзносов.П000200024104 = СтрокаВзносов.П000200024104 + СтрокаИтоговПоВзносам.П000200024104 - СтрокаВзносовРаздела3.П000300034104 - СтрокаВзносовРаздела3.П000300039104 - ТаблицаВзносов.Итог("П000200024104");
				СтрокаВзносов.П000200024204 = СтрокаВзносов.П000200024204 + СтрокаИтоговПоВзносам.П000200024204 - СтрокаВзносовРаздела3.П000300034204 - СтрокаВзносовРаздела3.П000300039204 - ТаблицаВзносов.Итог("П000200024204");
				СтрокаВзносов.П000200024304 = СтрокаВзносов.П000200024304 + СтрокаИтоговПоВзносам.П000200024304 - СтрокаВзносовРаздела3.П000300034304 - СтрокаВзносовРаздела3.П000300039304 - ТаблицаВзносов.Итог("П000200024304");
				СтрокаВзносов.П000200024404 = СтрокаВзносов.П000200024404 + СтрокаИтоговПоВзносам.П000200024404 - СтрокаВзносовРаздела3.П000300034404 - СтрокаВзносовРаздела3.П000300039404 - ТаблицаВзносов.Итог("П000200024404");
				СтрокаВзносов.П000200024105 = СтрокаВзносов.П000200024105 + СтрокаИтоговПоВзносам.П000200024105 - СтрокаВзносовРаздела3.П000300034105 - СтрокаВзносовРаздела3.П000300039105 - ТаблицаВзносов.Итог("П000200024105");
				СтрокаВзносов.П000200024205 = СтрокаВзносов.П000200024205 + СтрокаИтоговПоВзносам.П000200024205 - СтрокаВзносовРаздела3.П000300034205 - СтрокаВзносовРаздела3.П000300039205 - ТаблицаВзносов.Итог("П000200024205");
				СтрокаВзносов.П000200024305 = СтрокаВзносов.П000200024305 + СтрокаИтоговПоВзносам.П000200024305 - СтрокаВзносовРаздела3.П000300034305 - СтрокаВзносовРаздела3.П000300039305 - ТаблицаВзносов.Итог("П000200024305");
				СтрокаВзносов.П000200024405 = СтрокаВзносов.П000200024405 + СтрокаИтоговПоВзносам.П000200024405 - СтрокаВзносовРаздела3.П000300034405 - СтрокаВзносовРаздела3.П000300039405 - ТаблицаВзносов.Итог("П000200024405");
				СтрокаВзносов.П000200024106 = СтрокаВзносов.П000200024106 + СтрокаИтоговПоВзносам.П000200024106 - СтрокаВзносовРаздела3.П000300034106 - СтрокаВзносовРаздела3.П000300039106 - ТаблицаВзносов.Итог("П000200024106");
				СтрокаВзносов.П000200024206 = СтрокаВзносов.П000200024206 + СтрокаИтоговПоВзносам.П000200024206 - СтрокаВзносовРаздела3.П000300034206 - СтрокаВзносовРаздела3.П000300039206 - ТаблицаВзносов.Итог("П000200024206");
				СтрокаВзносов.П000200024306 = СтрокаВзносов.П000200024306 + СтрокаИтоговПоВзносам.П000200024306 - СтрокаВзносовРаздела3.П000300034306 - СтрокаВзносовРаздела3.П000300039306 - ТаблицаВзносов.Итог("П000200024306");
				СтрокаВзносов.П000200024406 = СтрокаВзносов.П000200024406 + СтрокаИтоговПоВзносам.П000200024406 - СтрокаВзносовРаздела3.П000300034406 - СтрокаВзносовРаздела3.П000300039406 - ТаблицаВзносов.Итог("П000200024406");
			КонецЕсли;
			Для каждого Колонка Из ТаблицаВзносов.Колонки Цикл
				Если Лев(Колонка.Имя,3) = "П00" Тогда
					ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел12, Колонка.Имя, СтрокаВзносов[Колонка.Имя]);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		// если применяемых в орг. тарифов больше 1, тогда создадим еще одну ветку для раздела 2
		Если ВсеТарифы.Индекс(СтрокаРезультата) < ИндексПоследнейСтроки Тогда  
			УзелРаздел12 = ОпределитьСтрокуВДеревеДанныхДляЗаполнения(ДеревоПоказателей, "Раздел12");
		КонецЕсли;
		
	КонецЦикла;
	
	// Раздел 4 

	УзелРаздел4 = ОпределитьСтрокуВДеревеДанныхДляЗаполнения(ДеревоПоказателей, "Раздел41");
	
	// дополнительная обработка в целях округления
	ВременнаяТаблица = МассивРезультатов[ВсегоЗапросов-6].Выгрузить();
	ВременнаяТаблица.Индексы.Добавить("ФизЛицо");
	ОкруглитьСлагаемыеПоСумме(ВременнаяТаблица,"П000410001005",СтрокаРаздела3.П000300030103 + СтрокаРаздела3.П000300030203);
	ТочнаяСумма = СтрокаРаздела3.П000300030103 + СтрокаРаздела3.П000300030203
				- (СтрокаРаздела3.П000300030104 + СтрокаРаздела3.П000300030105 + СтрокаРаздела3.П000300030106 + СтрокаРаздела3.П000300030204 + СтрокаРаздела3.П000300030205 + СтрокаРаздела3.П000300030206);
	ОкруглитьСлагаемыеПоСумме(ВременнаяТаблица,"П000410001006",ТочнаяСумма); // за предыдущий отчетный период
	ТочнаяСумма = СтрокаРаздела3.П000300030103 + СтрокаРаздела3.П000300030203
				- (СтрокаРаздела3.П000300030105 + СтрокаРаздела3.П000300030106 + СтрокаРаздела3.П000300030205 + СтрокаРаздела3.П000300030206);
	ОкруглитьСлагаемыеПоСумме(ВременнаяТаблица,"П000410001007",ТочнаяСумма); // по первый месяц отчетного периода
	ТочнаяСумма = СтрокаРаздела3.П000300030103 + СтрокаРаздела3.П000300030203
				- (СтрокаРаздела3.П000300030106 + СтрокаРаздела3.П000300030206);
	ОкруглитьСлагаемыеПоСумме(ВременнаяТаблица,"П000410001008",ТочнаяСумма); // по второй месяц отчетного периода
	Для каждого СтрокаТЗ Из ВременнаяТаблица Цикл
		СтрокаТЗ.П000410001006 = СтрокаТЗ.П000410001007 - СтрокаТЗ.П000410001006;
		СтрокаТЗ.П000410001007 = СтрокаТЗ.П000410001008 - СтрокаТЗ.П000410001007;
		СтрокаТЗ.П000410001008 = СтрокаТЗ.П000410001005 - СтрокаТЗ.П000410001008;
	КонецЦикла;
	
	ВывестиТаблицуДанныхВДеревоПоказателей(УзелРаздел3,ВременнаяТаблица, Истина, "П0004100010");
	
	// Раздел 5 

	УзелРаздел5 = ОпределитьСтрокуВДеревеДанныхДляЗаполнения(ДеревоПоказателей, "Раздел50");
	
	Запрос.Текст = ОстаткиПрошлыхЛетТекст;
	#Если Клиент тогда
	ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Результат = Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	ВывестиРезультатЗапросаВДеревоПоказателей(УзелРаздел5,Результат); 
	
	Возврат ДеревоПоказателей;
	
КонецФункции // ЗначенияПоказателей_РСВ1_2010Кв1()



// Возвращает значения показателей отчета Расчет по авансовым платежам по ЕСН 
// для формы образца 2007 года, вычисленные по данным ИБ
//
// Параметры:
//  ПараметрыОтчета - структура, содержащая значения ключевых реквизитов заполняемого отчета. 
//		Структура содержит, как минимум, следующее:
//			Организация, тип СправочникСсылка.Организации
//			ДатаНачалаПериода, тип Дата
//			ДатаОкончанияПериода, тип Дата
//			ДатаПодписи, тип Дата
//			Периодичность, тип ПеречислениеСсылка.Периодичность
//
// Возвращаемое значение:
//	ДеревоЗначений с колонками «Имя" и «Значение"
//
Функция ЗначенияПоказателей_АвансыЕСН_2007Кв1(ПараметрыОтчета)
	
	ДеревоПоказателей = Новый ДеревоЗначений;
	ДеревоПоказателей.Колонки.Добавить("Имя");
	ДеревоПоказателей.Колонки.Добавить("Значение");
	
	ПустоеДерево = ДеревоПоказателей.Скопировать();
	
	ДатаКонцаПериодаОтчета = ПараметрыОтчета.ДатаОкончанияПериода;
	Организация = ПараметрыОтчета.Организация;
	ТочностьЕдиницыИзмерения = 0;
	Если ПараметрыОтчета.Свойство("ТочностьЕдиницыИзмерения",ТочностьЕдиницыИзмерения) = Неопределено Тогда
		ТочностьЕдиницыИзмерения = 0;
	КонецЕсли;
	ЕдиницаИзмерения = Перечисления.ПорядкиОкругленияОтчетности.ПустаяСсылка();
	Если ПараметрыОтчета.Свойство("ЕдиницаИзмерения",ЕдиницаИзмерения) = Неопределено Тогда
		ЕдиницаИзмерения = Перечисления.ПорядкиОкругленияОтчетности.ПустаяСсылка();
	КонецЕсли;
	Делитель = ПреобразоватьЕдиницуИзмеренияВЧисло(ЕдиницаИзмерения);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("парамНачалоГода", НачалоГода(ДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("парамКонецОтчетногоПериода", КонецДня(ДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("парамГод", Год(ДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("Месяц1", Месяц(ДатаКонцаПериодаОтчета) - 2);
	Запрос.УстановитьПараметр("Месяц2", Месяц(ДатаКонцаПериодаОтчета) - 1);
	Запрос.УстановитьПараметр("Месяц3", Месяц(ДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("Делитель", Делитель);
	// Все данные отчета берутся по обособленному подразделению (указанной организации)
	Запрос.УстановитьПараметр("СписокОбособленныхПодразделений", Организация);
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация", ОбщегоНазначения.ГоловнаяОрганизация(Организация));
	
	// ----------------------------------------------------------------------------------
	// ТЕКСТЫ ЗАПРОСОВ
	
	// конец месяца налогового периода
	КонецМесяца = КонецМесяца(НачалоГода(ДатаКонцаПериодаОтчета));
	// первый месяц
	ПериодыТекст = "ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ") КАК Период ПОМЕСТИТЬ ВТПериоды";
	// прибавим остальные месяцы
	Для Сч = 2 По Месяц(ДатаКонцаПериодаОтчета) Цикл
		КонецМесяца = КонецМесяца(КонецМесяца+1);
		ПериодыТекст = ПериодыТекст +" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ")";
	КонецЦикла;
	Запрос.Текст = ПериодыТекст;
	МассивЗапросов = Новый Массив;
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Запрос.Выполнить();
	
	// Сформируем текст запроса выборки месяцев налогового периода
	МесяцыНПТекст = "ВЫБРАТЬ 1 КАК МЕСЯЦ ПОМЕСТИТЬ ВТМесяцыНП";
	Для Сч = 2 По 12 Цикл
		МесяцыНПТекст = МесяцыНПТекст +" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ " + Сч;
	КонецЦикла;
	
	Запрос.Текст = МесяцыНПТекст;
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	
	// УчетнаяПолитикаНалоговыйУчет
	// Таблица ВТУчетнаяПолитикаНалоговыйУчет - это список периодов, когда организация переходила на УСН
	
	Запрос.Текст = ЗаполнениеРегламентированнойОтчетностиПереопределяемый.ТекстЗапросаУСН();
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	
	// ДоходыЕСН
	// Описание: выбирает зарегистрированные доходы ЕСН по физлицам, месяцам и кодам дохода
	//	         относящиеся к видам деятельности, облагаемым налогом на прибыль за те месяцы,
	//	         когда организация НЕ применяет УСН
	//	 
	// Таблица УчетнаяПолитикаНалоговыйУчет - это список периодов, когда организация переходила на УСН
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСНСведенияОДоходах.ФизЛицо КАК ФизЛицо
	|ПОМЕСТИТЬ ВТФизлицаБезНалоговойБазы
	|ИЗ
	|	РегистрНакопления.ЕСНСведенияОДоходах КАК ЕСНСведенияОДоходах
	|ГДЕ
	|	ЕСНСведенияОДоходах.Период МЕЖДУ &парамНачалоГода И &парамКонецОтчетногоПериода
	|	И ЕСНСведенияОДоходах.Организация = &парамГоловнаяОрганизация
	|	И (НЕ ЕСНСведенияОДоходах.ОблагаетсяЕНВД)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСНСведенияОДоходах.ФизЛицо
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВЫБОР
	|			КОГДА ЕСНСведенияОДоходах.КодДоходаЕСН.ВходитВБазуФОМС
	|				ТОГДА ЕСНСведенияОДоходах.Результат - ЕСНСведенияОДоходах.Скидка
	|			ИНАЧЕ 0
	|		КОНЕЦ) < 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МесяцыНП.Месяц КАК Месяц,
	|	ЕСНСведенияОДоходах.ФизЛицо КАК ФизЛицо,
	|	ЕСНСведенияОДоходах.Организация.ВидСтавокЕСНиПФР КАК ВидСтавокЕСНиПФР,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА ЕСНСведенияОДоходах.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ВыплатыЗаСчетПрибыли)
	|					ТОГДА ЕСНСведенияОДоходах.Результат
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК ВыплатыЗаСчетПрибыли,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА ЕСНСведенияОДоходах.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ПособияЗаСчетФСС)
	|					ТОГДА ЕСНСведенияОДоходах.Результат
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК ПособияЗаСчетФСС,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА ЕСНСведенияОДоходах.КодДоходаЕСН В (ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ПособияЗаСчетФСС), ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.НеОблагаетсяЦеликом))
	|					ТОГДА ЕСНСведенияОДоходах.Результат
	|				КОГДА ЕСНСведенияОДоходах.КодДоходаЕСН В (ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ДоговораАвторские), ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ДоговораГПХ))
	|					ТОГДА 0
	|				КОГДА ЕСНСведенияОДоходах.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ВыплатыЗаСчетПрибыли)
	|					ТОГДА 0
	|				ИНАЧЕ ЕСНСведенияОДоходах.Скидка
	|			КОНЕЦ), 0) КАК НеОблагаетсяПоСт238ФедеральныйБюджет,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА ЕСНСведенияОДоходах.КодДоходаЕСН В (ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ДоговораГПХ), ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ПособияЗаСчетФСС), ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.НеОблагаетсяЦеликом))
	|					ТОГДА ЕСНСведенияОДоходах.Результат
	|				КОГДА ЕСНСведенияОДоходах.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ДоговораАвторские)
	|					ТОГДА ЕСНСведенияОДоходах.Результат - ЕСНСведенияОДоходах.Скидка
	|				КОГДА ЕСНСведенияОДоходах.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ВыплатыЗаСчетПрибыли)
	|					ТОГДА 0
	|				ИНАЧЕ ЕСНСведенияОДоходах.Скидка
	|			КОНЕЦ), 0) КАК НеОблагаетсяПоСт238ФСС,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА ЕСНСведенияОДоходах.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ДенежноеДовольствиеВоеннослужащих)
	|					ТОГДА ЕСНСведенияОДоходах.Результат
	|				ИНАЧЕ ЕСНСведенияОДоходах.Скидка
	|			КОНЕЦ), 0) КАК НеОблагаетсяПоП2Ст245,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА ЕСНСведенияОДоходах.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ДенежноеСодержаниеПрокуроров)
	|					ТОГДА ЕСНСведенияОДоходах.Результат
	|				ИНАЧЕ ЕСНСведенияОДоходах.Скидка
	|			КОНЕЦ), 0) КАК НеОблагаетсяПоП3Ст245,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА ЕСНСведенияОДоходах.КодДоходаЕСН.ВходитВБазуФедеральныйБюджет
	|						И ФизлицаБезНалоговойБазы.ФизЛицо ЕСТЬ NULL 
	|					ТОГДА ЕСНСведенияОДоходах.Результат - ЕСНСведенияОДоходах.Скидка
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК БазаФедеральныйБюджет,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА ЕСНСведенияОДоходах.КодДоходаЕСН.ВходитВБазуФСС
	|						И ФизлицаБезНалоговойБазы.ФизЛицо ЕСТЬ NULL 
	|					ТОГДА ЕСНСведенияОДоходах.Результат - ЕСНСведенияОДоходах.Скидка
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК БазаФСС,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА ЕСНСведенияОДоходах.КодДоходаЕСН.ВходитВБазуФОМС
	|						И ФизлицаБезНалоговойБазы.ФизЛицо ЕСТЬ NULL 
	|					ТОГДА ЕСНСведенияОДоходах.Результат - ЕСНСведенияОДоходах.Скидка
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК БазаФОМС
	|ПОМЕСТИТЬ ВТДоходыЕСНПоФизлицам
	|ИЗ
	|	ВТМесяцыНП КАК МесяцыНП
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЕСНСведенияОДоходах КАК ЕСНСведенияОДоходах
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТУчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНалоговыйУчетУСН
	|			ПО (МЕСЯЦ(ЕСНСведенияОДоходах.Период) = УчетнаяПолитикаНалоговыйУчетУСН.Месяц)
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлицаБезНалоговойБазы КАК ФизлицаБезНалоговойБазы
	|			ПО ЕСНСведенияОДоходах.ФизЛицо = ФизлицаБезНалоговойБазы.ФизЛицо
	|		ПО (МесяцыНП.Месяц >= МЕСЯЦ(ЕСНСведенияОДоходах.Период))
	|ГДЕ
	|	ЕСНСведенияОДоходах.Период МЕЖДУ &парамНачалоГода И &парамКонецОтчетногоПериода
	|	И ЕСНСведенияОДоходах.Организация = &парамГоловнаяОрганизация
	|	И ЕСНСведенияОДоходах.ОбособленноеПодразделение В(&СписокОбособленныхПодразделений)
	|	И (НЕ ЕСНСведенияОДоходах.ОблагаетсяЕНВД)
	|	И УчетнаяПолитикаНалоговыйУчетУСН.Месяц ЕСТЬ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	МесяцыНП.Месяц,
	|	ЕСНСведенияОДоходах.Организация.ВидСтавокЕСНиПФР,
	|	ЕСНСведенияОДоходах.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Месяц,
	|	ФизЛицо";
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	
	ДоходыНарастающимИтогомТекст = 
	"ВЫБРАТЬ
	|	ДоходыЕСН.Месяц КАК Месяц,
	|	(ВЫРАЗИТЬ(СУММА(ДоходыЕСН.ПособияЗаСчетФСС) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК ПособияЗаСчетФСС,
	|	(ВЫРАЗИТЬ(СУММА(ДоходыЕСН.НеОблагаетсяПоСт238ФСС) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК НеОблагаетсяПоСт238ФСС,
	|	(ВЫРАЗИТЬ(СУММА(ДоходыЕСН.НеОблагаетсяПоСт238ФедеральныйБюджет) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК НеОблагаетсяПоСт238ФедеральныйБюджет,
	|	(ВЫРАЗИТЬ(СУММА(ДоходыЕСН.НеОблагаетсяПоП2Ст245) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК НеОблагаетсяПоП2Ст245,
	|	(ВЫРАЗИТЬ(СУММА(ДоходыЕСН.НеОблагаетсяПоП3Ст245) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК НеОблагаетсяПоП3Ст245,
	|	(ВЫРАЗИТЬ(СУММА(ДоходыЕСН.ВыплатыЗаСчетПрибыли) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК ВыплатыЗаСчетПрибыли,
	|	(ВЫРАЗИТЬ(СУММА(ДоходыЕСН.БазаФедеральныйБюджет) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК БазаФедеральныйБюджет,
	|	(ВЫРАЗИТЬ(СУММА(ДоходыЕСН.БазаФСС) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК БазаФСС,
	|	(ВЫРАЗИТЬ(СУММА(ДоходыЕСН.БазаФОМС) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК БазаФОМС
	|ПОМЕСТИТЬ ВТДоходыЕСН
	|ИЗ
	|	ВТДоходыЕСНПоФизлицам КАК ДоходыЕСН
	|
	|СГРУППИРОВАТЬ ПО
	|	ДоходыЕСН.Месяц
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Месяц";
	Запрос.Текст  = СтрЗаменить(ДоходыНарастающимИтогомТекст,"ЧИСЛО(15, 3)","ЧИСЛО(15, " + ТочностьЕдиницыИзмерения + ")");
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	
	//НалоговыеБазыРаздела2Текст
	// Описание:
	//  Выбираются данные из таблицы ВТДоходыЕСН, необходимые для заполнения показетелей раздела 2.
	
	НалоговыеБазыРаздела2Текст = 
	"ВЫБРАТЬ
	// строка 0100 - за отчетный период  
	|	СУММА(ВЫБОР
	|			КОГДА Доходы.Месяц = &Месяц3
	|				ТОГДА Доходы.БазаФедеральныйБюджет
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020010003,
	|	СУММА(ВЫБОР
	|			КОГДА Доходы.Месяц = &Месяц3
	|				ТОГДА Доходы.БазаФСС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020010004,
	|	СУММА(ВЫБОР
	|			КОГДА Доходы.Месяц = &Месяц3
	|				ТОГДА Доходы.БазаФОМС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020010005,
	// Строка 0120 - налоговая база за 1 месяц
	|	СУММА(ВЫБОР
	|			КОГДА Доходы.Месяц = &Месяц1
	|				ТОГДА Доходы.БазаФедеральныйБюджет - ЕСТЬNULL(ДоходыПредМесяца.БазаФедеральныйБюджет, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020012003,
	|	СУММА(ВЫБОР
	|			КОГДА Доходы.Месяц = &Месяц1
	|				ТОГДА Доходы.БазаФСС - ЕСТЬNULL(ДоходыПредМесяца.БазаФСС, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020012004,
	|	СУММА(ВЫБОР
	|			КОГДА Доходы.Месяц = &Месяц1
	|				ТОГДА Доходы.БазаФОМС - ЕСТЬNULL(ДоходыПредМесяца.БазаФОМС, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020012005,
	// Строка 0130 - налоговая база за 2 месяц
	|	СУММА(ВЫБОР
	|			КОГДА Доходы.Месяц = &Месяц2
	|				ТОГДА Доходы.БазаФедеральныйБюджет - ЕСТЬNULL(ДоходыПредМесяца.БазаФедеральныйБюджет, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020013003,
	|	СУММА(ВЫБОР
	|			КОГДА Доходы.Месяц = &Месяц2
	|				ТОГДА Доходы.БазаФСС - ЕСТЬNULL(ДоходыПредМесяца.БазаФСС, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020013004,
	|	СУММА(ВЫБОР
	|			КОГДА Доходы.Месяц = &Месяц2
	|				ТОГДА Доходы.БазаФОМС - ЕСТЬNULL(ДоходыПредМесяца.БазаФОМС, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020013005,
	// Строка 0140 - налоговая база за 3 месяц
	|	СУММА(ВЫБОР
	|			КОГДА Доходы.Месяц = &Месяц3
	|				ТОГДА Доходы.БазаФедеральныйБюджет - ЕСТЬNULL(ДоходыПредМесяца.БазаФедеральныйБюджет, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020014003,
	|	СУММА(ВЫБОР
	|			КОГДА Доходы.Месяц = &Месяц3
	|				ТОГДА Доходы.БазаФСС - ЕСТЬNULL(ДоходыПредМесяца.БазаФСС, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020014004,
	|	СУММА(ВЫБОР
	|			КОГДА Доходы.Месяц = &Месяц3
	|				ТОГДА Доходы.БазаФОМС - ЕСТЬNULL(ДоходыПредМесяца.БазаФОМС, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020014005,
	// Строки 0700, 0720, 0730, 0740 - расходы на цели социального страхования за год и по месяцам отчетного периода 
	|	СУММА(ВЫБОР
	|			КОГДА Доходы.Месяц = &Месяц3
	|				ТОГДА Доходы.ПособияЗаСчетФСС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020070003,
	|	СУММА(ВЫБОР
	|			КОГДА Доходы.Месяц = &Месяц1
	|				ТОГДА Доходы.ПособияЗаСчетФСС - ЕСТЬNULL(ДоходыПредМесяца.ПособияЗаСчетФСС, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020072003,
	|	СУММА(ВЫБОР
	|			КОГДА Доходы.Месяц = &Месяц2
	|				ТОГДА Доходы.ПособияЗаСчетФСС - ЕСТЬNULL(ДоходыПредМесяца.ПособияЗаСчетФСС, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020073003,
	|	СУММА(ВЫБОР
	|			КОГДА Доходы.Месяц = &Месяц3
	|				ТОГДА Доходы.ПособияЗаСчетФСС - ЕСТЬNULL(ДоходыПредМесяца.ПособияЗаСчетФСС, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020074003,
	// Строка 1000 - справочно выплаты за счет прибыли за год
	|	СУММА(ВЫБОР
	|			КОГДА Доходы.Месяц = &Месяц3
	|				ТОГДА Доходы.ВыплатыЗаСчетПрибыли
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020100003,
	|	СУММА(ВЫБОР
	|			КОГДА Доходы.Месяц = &Месяц3
	|				ТОГДА Доходы.ВыплатыЗаСчетПрибыли
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020100004,
	// Строка 1100 - справочно суммы не подлежащие налогообложению по ст. 238 НК РФ
	|	СУММА(ВЫБОР
	|			КОГДА Доходы.Месяц = &Месяц3
	|				ТОГДА Доходы.НеОблагаетсяПоСт238ФедеральныйБюджет
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020110003,
	|	СУММА(ВЫБОР
	|			КОГДА Доходы.Месяц = &Месяц3
	|				ТОГДА Доходы.НеОблагаетсяПоСт238ФСС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020110004,
	// Строка 1200 - справочно суммы не подлежащие налогообложению по ст. 245 НК РФ
	|	СУММА(ВЫБОР
	|			КОГДА Доходы.Месяц = &Месяц3
	|				ТОГДА Доходы.НеОблагаетсяПоП2Ст245
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020120003,
	|	СУММА(ВЫБОР
	|			КОГДА Доходы.Месяц = &Месяц3
	|				ТОГДА Доходы.НеОблагаетсяПоП2Ст245
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020120004,
	// Строка 1300 - справочно суммы не подлежащие налогообложению по ст. 245 НК РФ
	|	СУММА(ВЫБОР
	|			КОГДА Доходы.Месяц = &Месяц3
	|				ТОГДА Доходы.НеОблагаетсяПоП3Ст245
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020130003
	|ИЗ
	|	ВТМесяцыНП КАК МесяцыНП
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыЕСН КАК Доходы
	|		ПО МесяцыНП.Месяц = Доходы.Месяц
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыЕСН КАК ДоходыПредМесяца
	|		ПО МесяцыНП.Месяц - 1 = ДоходыПредМесяца.Месяц";
	
	// НалоговаяБазаПоФизлицамПределам
	// Описание:
	//  Выбираются налоговые базы из таблицы ВТДоходыЕСНПоФизлицам. Данные нужны для раздела 2.1.
	
	НалоговаяБазаПоФизлицамПределам = 
	"ВЫБРАТЬ
	|	ДоходыЕСНВсего.БазаФедеральныйБюджет - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА СтавкиФедеральныйБюджет.НомерСтрокиСтавок = 3
	|					ТОГДА ДоходыПоФЛ.БазаФедеральныйБюджет - СтавкиФедеральныйБюджет.СуммаДоходаС
	|				ИНАЧЕ 0
	|			КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель - СУММА(ВЫБОР
	|			КОГДА СтавкиФедеральныйБюджет.НомерСтрокиСтавок = 3
	|				ТОГДА СтавкиФедеральныйБюджет.СуммаДоходаС
	|			ИНАЧЕ 0
	|		КОНЕЦ) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА СтавкиФедеральныйБюджет.НомерСтрокиСтавок = 2
	|					ТОГДА ДоходыПоФЛ.БазаФедеральныйБюджет - СтавкиФедеральныйБюджет.СуммаДоходаС
	|				ИНАЧЕ 0
	|			КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель - СУММА(ВЫБОР
	|			КОГДА СтавкиФедеральныйБюджет.НомерСтрокиСтавок = 2
	|				ТОГДА СтавкиФедеральныйБюджет.СуммаДоходаС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000210001003,
	|	ДоходыЕСНВсего.БазаФСС - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА СтавкиФСС.НомерСтрокиСтавок = 3
	|					ТОГДА ДоходыПоФЛ.БазаФСС - СтавкиФСС.СуммаДоходаС
	|				ИНАЧЕ 0
	|			КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель - СУММА(ВЫБОР
	|			КОГДА СтавкиФСС.НомерСтрокиСтавок = 3
	|				ТОГДА СтавкиФСС.СуммаДоходаС
	|			ИНАЧЕ 0
	|		КОНЕЦ) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА СтавкиФСС.НомерСтрокиСтавок = 2
	|					ТОГДА ДоходыПоФЛ.БазаФСС - СтавкиФСС.СуммаДоходаС
	|				ИНАЧЕ 0
	|			КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель - СУММА(ВЫБОР
	|			КОГДА СтавкиФСС.НомерСтрокиСтавок = 2
	|				ТОГДА СтавкиФСС.СуммаДоходаС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000210001004,
	|	ДоходыЕСНВсего.БазаФОМС - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА СтавкиФОМС.НомерСтрокиСтавок = 3
	|					ТОГДА ДоходыПоФЛ.БазаФОМС - СтавкиФОМС.СуммаДоходаС
	|				ИНАЧЕ 0
	|			КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель - СУММА(ВЫБОР
	|			КОГДА СтавкиФОМС.НомерСтрокиСтавок = 3
	|				ТОГДА СтавкиФОМС.СуммаДоходаС
	|			ИНАЧЕ 0
	|		КОНЕЦ) - (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА СтавкиФОМС.НомерСтрокиСтавок = 2
	|					ТОГДА ДоходыПоФЛ.БазаФОМС - СтавкиФОМС.СуммаДоходаС
	|				ИНАЧЕ 0
	|			КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель - СУММА(ВЫБОР
	|			КОГДА СтавкиФОМС.НомерСтрокиСтавок = 2
	|				ТОГДА СтавкиФОМС.СуммаДоходаС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000210001005,
	|	СУММА(ВЫБОР
	|			КОГДА СтавкиФедеральныйБюджет.НомерСтрокиСтавок = 1
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000210001006,
	|	СУММА(ВЫБОР
	|			КОГДА СтавкиФСС.НомерСтрокиСтавок = 1
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000210001007,
	|	СУММА(ВЫБОР
	|			КОГДА СтавкиФОМС.НомерСтрокиСтавок = 1
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000210001008,
	|	СУММА(ВЫБОР
	|			КОГДА СтавкиФедеральныйБюджет.НомерСтрокиСтавок = 2
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000210002106,
	|	СУММА(ВЫБОР
	|			КОГДА СтавкиФСС.НомерСтрокиСтавок = 2
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000210002107,
	|	СУММА(ВЫБОР
	|			КОГДА СтавкиФОМС.НомерСтрокиСтавок = 2
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000210002108,
	|	(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА СтавкиФедеральныйБюджет.НомерСтрокиСтавок = 2
	|					ТОГДА ДоходыПоФЛ.БазаФедеральныйБюджет - СтавкиФедеральныйБюджет.СуммаДоходаС
	|				ИНАЧЕ 0
	|			КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК П000210002203,
	|	(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА СтавкиФСС.НомерСтрокиСтавок = 2
	|					ТОГДА ДоходыПоФЛ.БазаФСС - СтавкиФСС.СуммаДоходаС
	|				ИНАЧЕ 0
	|			КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК П000210002204,
	|	(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА СтавкиФОМС.НомерСтрокиСтавок = 2
	|					ТОГДА ДоходыПоФЛ.БазаФОМС - СтавкиФОМС.СуммаДоходаС
	|				ИНАЧЕ 0
	|			КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК П000210002205,
	|	СУММА(ВЫБОР
	|			КОГДА СтавкиФедеральныйБюджет.НомерСтрокиСтавок = 3
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000210003106,
	|	СУММА(ВЫБОР
	|			КОГДА СтавкиФСС.НомерСтрокиСтавок = 3
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000210003107,
	|	СУММА(ВЫБОР
	|			КОГДА СтавкиФОМС.НомерСтрокиСтавок = 3
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000210003108,
	|	(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА СтавкиФедеральныйБюджет.НомерСтрокиСтавок = 3
	|					ТОГДА ДоходыПоФЛ.БазаФедеральныйБюджет - СтавкиФедеральныйБюджет.СуммаДоходаС
	|				ИНАЧЕ 0
	|			КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК П000210003203,
	|	(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА СтавкиФСС.НомерСтрокиСтавок = 3
	|					ТОГДА ДоходыПоФЛ.БазаФСС - СтавкиФСС.СуммаДоходаС
	|				ИНАЧЕ 0
	|			КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК П000210003204,
	|	(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА СтавкиФОМС.НомерСтрокиСтавок = 3
	|					ТОГДА ДоходыПоФЛ.БазаФОМС - СтавкиФОМС.СуммаДоходаС
	|				ИНАЧЕ 0
	|			КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК П000210003205
	|ИЗ
	|	ВТДоходыЕСНПоФизлицам КАК ДоходыПоФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыЕСН КАК ДоходыЕСНВсего
	|		ПО ДоходыПоФЛ.Месяц = ДоходыЕСНВсего.Месяц
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОСтавкахЕСНиПФР КАК СтавкиФедеральныйБюджет
	|		ПО ДоходыПоФЛ.ВидСтавокЕСНиПФР = СтавкиФедеральныйБюджет.ВидСтавокЕСНиПФР
	|			И (СтавкиФедеральныйБюджет.Год = &парамГод)
	|			И ДоходыПоФЛ.БазаФедеральныйБюджет > СтавкиФедеральныйБюджет.СуммаДоходаС
	|			И ДоходыПоФЛ.БазаФедеральныйБюджет <= СтавкиФедеральныйБюджет.СуммаДоходаПо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОСтавкахЕСНиПФР КАК СтавкиФСС
	|		ПО ДоходыПоФЛ.ВидСтавокЕСНиПФР = СтавкиФСС.ВидСтавокЕСНиПФР
	|			И (СтавкиФСС.Год = &парамГод)
	|			И ДоходыПоФЛ.БазаФСС > СтавкиФСС.СуммаДоходаС
	|			И ДоходыПоФЛ.БазаФСС <= СтавкиФСС.СуммаДоходаПо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОСтавкахЕСНиПФР КАК СтавкиФОМС
	|		ПО ДоходыПоФЛ.ВидСтавокЕСНиПФР = СтавкиФОМС.ВидСтавокЕСНиПФР
	|			И (СтавкиФОМС.Год = &парамГод)
	|			И ДоходыПоФЛ.БазаФОМС > СтавкиФОМС.СуммаДоходаС
	|			И ДоходыПоФЛ.БазаФОМС <= СтавкиФОМС.СуммаДоходаПо
	|ГДЕ
	|	ДоходыПоФЛ.Месяц = &Месяц3
	|	И ДоходыПоФЛ.ФизЛицо ЕСТЬ НЕ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	ДоходыЕСНВсего.БазаФедеральныйБюджет,
	|	ДоходыЕСНВсего.БазаФСС,
	|	ДоходыЕСНВсего.БазаФОМС";
	НалоговаяБазаПоФизлицамПределам  = СтрЗаменить(НалоговаяБазаПоФизлицамПределам,"ЧИСЛО(15, 3)","ЧИСЛО(15, " + ТочностьЕдиницыИзмерения + ")");
	
	// ИсчисленныйНалогПоМесяцам
	// Описание:
	//	Суммирует исчисленные налоги по месяцам налогового периода и физлицам
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕСНИсчисленный.Организация.ВидСтавокЕСНиПФР КАК ВидСтавокЕСНиПФР,
	|	ЕСНИсчисленный.ФизЛицо КАК ФизЛицо,
	|	МЕСЯЦ(ЕСНИсчисленный.Период) КАК Месяц,
	|	СУММА(ЕСНИсчисленный.ФедеральныйБюджет) КАК ФБ,
	|	СУММА(ЕСНИсчисленный.ФСС) КАК ФСС,
	|	СУММА(ЕСНИсчисленный.ФФОМС) КАК ФФОМС,
	|	СУММА(ЕСНИсчисленный.ТФОМС) КАК ТФОМС,
	|	СУММА(ЕСНИсчисленный.ПФРНакопительная + ЕСНИсчисленный.ПФРСтраховая - ЕСНИсчисленный.ПФРНакопительнаяЕНВД - ЕСНИсчисленный.ПФРСтраховаяЕНВД) КАК ЛьготаПоВзносамВПФР,
	|	СУММА(ЕСНИсчисленный.ПримененнаяЛьготаФБ) КАК ПримененнаяЛьготаФБ,
	|	СУММА(ЕСНИсчисленный.ПримененнаяЛьготаФСС) КАК ПримененнаяЛьготаФСС,
	|	СУММА(ЕСНИсчисленный.ПримененнаяЛьготаФОМС) КАК ПримененнаяЛьготаФОМС
	|ПОМЕСТИТЬ ВТИсчисленныйНалогПоМесяцам
	|ИЗ
	|	РегистрНакопления.ЕСНИсчисленный КАК ЕСНИсчисленный
	|ГДЕ
	|	ЕСНИсчисленный.Период МЕЖДУ &парамНачалоГода И &парамКонецОтчетногоПериода
	|	И ЕСНИсчисленный.Организация = &парамГоловнаяОрганизация
	|	И ЕСНИсчисленный.ОбособленноеПодразделение В(&СписокОбособленныхПодразделений)
	|
	|СГРУППИРОВАТЬ ПО
	|	МЕСЯЦ(ЕСНИсчисленный.Период),
	|	ЕСНИсчисленный.ФизЛицо,
	|	ЕСНИсчисленный.Организация.ВидСтавокЕСНиПФР
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Месяц,
	|	ФизЛицо";
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	
	НалогНарастающимИтогомТекст =
	"ВЫБРАТЬ
	|	СуммыПоМесяцам.Месяц КАК Месяц,
	|	(ВЫРАЗИТЬ(СУММА(СуммыПоМесяцам.ФБ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК ФБ,
	|	(ВЫРАЗИТЬ(СУММА(СуммыПоМесяцам.ФСС) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК ФСС,
	|	(ВЫРАЗИТЬ(СУММА(СуммыПоМесяцам.ФФОМС) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК ФФОМС,
	|	(ВЫРАЗИТЬ(СУММА(СуммыПоМесяцам.ТФОМС) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК ТФОМС,
	|	(ВЫРАЗИТЬ(СУММА(СуммыПоМесяцам.ЛьготаПоВзносамВПФР) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК ЛьготаПоВзносамВПФР,
	|	(ВЫРАЗИТЬ(СУММА(СуммыПоМесяцам.ПримененнаяЛьготаФБ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК ПримененнаяЛьготаФБ,
	|	(ВЫРАЗИТЬ(СУММА(СуммыПоМесяцам.ПримененнаяЛьготаФСС) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК ПримененнаяЛьготаФСС,
	|	(ВЫРАЗИТЬ(СУММА(СуммыПоМесяцам.ПримененнаяЛьготаФОМС) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК ПримененнаяЛьготаФОМС,
	|	(ВЫРАЗИТЬ(СУММА(СуммыПоМесяцам.ЛьготаФБ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК ЛьготаФБ,
	|	(ВЫРАЗИТЬ(СУММА(СуммыПоМесяцам.ЛьготаФСС) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК ЛьготаФСС,
	|	(ВЫРАЗИТЬ(СУММА(СуммыПоМесяцам.ЛьготаФФОМС) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК ЛьготаФФОМС,
	|	(ВЫРАЗИТЬ(СУММА(СуммыПоМесяцам.ЛьготаТФОМС) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК ЛьготаТФОМС
	|ПОМЕСТИТЬ ВТИсчисленныйНалогНарастающимИтогом
	|ИЗ
	|	(ВЫБРАТЬ
	|		МЕСЯЦ(Периоды.Период) КАК Месяц,
	|		ЕСНИсчисленный.ФизЛицо КАК ФизЛицо,
	|		СУММА(ЕСНИсчисленный.ФБ) КАК ФБ,
	|		СУММА(ЕСНИсчисленный.ФСС) КАК ФСС,
	|		СУММА(ЕСНИсчисленный.ФФОМС) КАК ФФОМС,
	|		СУММА(ЕСНИсчисленный.ТФОМС) КАК ТФОМС,
	|		СУММА(ЕСНИсчисленный.ЛьготаПоВзносамВПФР) КАК ЛьготаПоВзносамВПФР,
	|		СУММА(ЕСНИсчисленный.ПримененнаяЛьготаФБ) КАК ПримененнаяЛьготаФБ,
	|		СУММА(ЕСНИсчисленный.ПримененнаяЛьготаФСС) КАК ПримененнаяЛьготаФСС,
	|		СУММА(ЕСНИсчисленный.ПримененнаяЛьготаФОМС) КАК ПримененнаяЛьготаФОМС,
	|		ВЫРАЗИТЬ(СУММА(ЕСНИсчисленный.ПримененнаяЛьготаФБ) * (МаксСтавкиЕСН.ФедеральныйБюджетВПроцентах - МаксСтавкиЕСН.ПФРСтраховая1вПроцентах - МаксСтавкиЕСН.ПФРНакопительная1вПроцентах) / 100 КАК ЧИСЛО(15, 1)) КАК ЛьготаФБ,
	|		ВЫРАЗИТЬ(СУММА(ЕСНИсчисленный.ПримененнаяЛьготаФСС) * МаксСтавкиЕСН.ФССвПроцентах / 100 КАК ЧИСЛО(15, 1)) КАК ЛьготаФСС,
	|		ВЫРАЗИТЬ(СУММА(ЕСНИсчисленный.ПримененнаяЛьготаФОМС) * МаксСтавкиЕСН.ФФОМСвПроцентах / 100 КАК ЧИСЛО(15, 1)) КАК ЛьготаФФОМС,
	|		ВЫРАЗИТЬ(СУММА(ЕСНИсчисленный.ПримененнаяЛьготаФОМС) * МаксСтавкиЕСН.ТФОМСвПроцентах / 100 КАК ЧИСЛО(15, 1)) КАК ЛьготаТФОМС
	|	ИЗ
	|		ВТПериоды КАК Периоды
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТИсчисленныйНалогПоМесяцам КАК ЕСНИсчисленный
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОСтавкахЕСНиПФР КАК МаксСтавкиЕСН
	|				ПО ЕСНИсчисленный.ВидСтавокЕСНиПФР = МаксСтавкиЕСН.ВидСтавокЕСНиПФР
	|					И (МаксСтавкиЕСН.Год = &парамГод)
	|					И (МаксСтавкиЕСН.НомерСтрокиСтавок = 1)
	|			ПО (МЕСЯЦ(Периоды.Период) >= ЕСНИсчисленный.Месяц)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ЕСНИсчисленный.ФизЛицо,
	|		МЕСЯЦ(Периоды.Период),
	|		МаксСтавкиЕСН.ФедеральныйБюджетВПроцентах,
	|		МаксСтавкиЕСН.ПФРСтраховая1вПроцентах,
	|		МаксСтавкиЕСН.ПФРНакопительная1вПроцентах,
	|		МаксСтавкиЕСН.ФССвПроцентах,
	|		МаксСтавкиЕСН.ФФОМСвПроцентах,
	|		МаксСтавкиЕСН.ТФОМСвПроцентах) КАК СуммыПоМесяцам
	|
	|СГРУППИРОВАТЬ ПО
	|	СуммыПоМесяцам.Месяц
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Месяц";
	
	НалоговыйУчет.ОбновитьДанныеУчетнойПолитикиПоНалоговомуУчету(глЗначениеПеременной("УчетнаяПолитикаОтраженияЗарплатыВУчете"), НачалоГода(ДатаКонцаПериодаОтчета), Организация);
	УчетнаяПолитика = глЗначениеПеременной("УчетнаяПолитикаОтраженияЗарплатыВУчете")[КонецМесяца(НачалоГода(ДатаКонцаПериодаОтчета))][Организация];
	Если УчетнаяПолитика.ТочностьИсчисленияЕСН = Перечисления.ПорядкиОкругленияЕСН.ВРубляхИКопейках Тогда
		НалогНарастающимИтогомТекст = СтрЗаменить(НалогНарастающимИтогомТекст,"ЧИСЛО(15, 1)","ЧИСЛО(15, 2)");
	ИначеЕсли УчетнаяПолитика.ТочностьИсчисленияЕСН = Перечисления.ПорядкиОкругленияЕСН.ВРублях Тогда
		НалогНарастающимИтогомТекст = СтрЗаменить(НалогНарастающимИтогомТекст,"ЧИСЛО(15, 1)","ЧИСЛО(15, 0)");
	Иначе 	
		НалогНарастающимИтогомТекст = СтрЗаменить(НалогНарастающимИтогомТекст,"ЧИСЛО(15, 1)","ЧИСЛО(15, 5)");
	КонецЕсли;
	
	Запрос.Текст  = СтрЗаменить(НалогНарастающимИтогомТекст,"ЧИСЛО(15, 3)","ЧИСЛО(15, " + ТочностьЕдиницыИзмерения + ")");
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	
	//ИсчисленныеНалогиРаздела2Текст								
	// Описание:
	//  Выбираются данные из таблицы ВТИсчисленныйНалогПоМесяцам, необходимые для заполнения показетелей раздела 2.
	//
	ИсчисленныеНалогиРаздела2Текст = 
	"ВЫБРАТЬ
	//  Исчисленные налоги за год - строка 0200
	|	СУММА(ВЫБОР
	|			КОГДА Налоги.Месяц = &Месяц3
	|				ТОГДА Налоги.ФБ
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020020003,
	|	СУММА(ВЫБОР
	|			КОГДА Налоги.Месяц = &Месяц3
	|				ТОГДА Налоги.ФСС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020020004,
	|	СУММА(ВЫБОР
	|			КОГДА Налоги.Месяц = &Месяц3
	|				ТОГДА Налоги.ФФОМС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020020005,
	|	СУММА(ВЫБОР
	|			КОГДА Налоги.Месяц = &Месяц3
	|				ТОГДА Налоги.ТФОМС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020020006,
	//  Исчисленные налоги за 1 месяц отчетного периода - строка 0220
	|	СУММА(ВЫБОР
	|			КОГДА Налоги.Месяц = &Месяц1
	|				ТОГДА Налоги.ФБ - ЕСТЬNULL(НалогиПредМесяца.ФБ, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020022003,
	|	СУММА(ВЫБОР
	|			КОГДА Налоги.Месяц = &Месяц1
	|				ТОГДА Налоги.ФСС - ЕСТЬNULL(НалогиПредМесяца.ФСС, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020022004,
	|	СУММА(ВЫБОР
	|			КОГДА Налоги.Месяц = &Месяц1
	|				ТОГДА Налоги.ФФОМС - ЕСТЬNULL(НалогиПредМесяца.ФФОМС, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020022005,
	|	СУММА(ВЫБОР
	|			КОГДА Налоги.Месяц = &Месяц1
	|				ТОГДА Налоги.ТФОМС - ЕСТЬNULL(НалогиПредМесяца.ТФОМС, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020022006,
	//  Исчисленные налоги за 2 месяц отчетного периода - строка 0230
	|	СУММА(ВЫБОР
	|			КОГДА Налоги.Месяц = &Месяц2
	|				ТОГДА Налоги.ФБ - ЕСТЬNULL(НалогиПредМесяца.ФБ, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020023003,
	|	СУММА(ВЫБОР
	|			КОГДА Налоги.Месяц = &Месяц2
	|				ТОГДА Налоги.ФСС - ЕСТЬNULL(НалогиПредМесяца.ФСС, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020023004,
	|	СУММА(ВЫБОР
	|			КОГДА Налоги.Месяц = &Месяц2
	|				ТОГДА Налоги.ФФОМС - ЕСТЬNULL(НалогиПредМесяца.ФФОМС, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020023005,
	|	СУММА(ВЫБОР
	|			КОГДА Налоги.Месяц = &Месяц2
	|				ТОГДА Налоги.ТФОМС - ЕСТЬNULL(НалогиПредМесяца.ТФОМС, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020023006,
	//  Исчисленные налоги за 3 месяц отчетного периода - строка 0240
	|	СУММА(ВЫБОР
	|			КОГДА Налоги.Месяц = &Месяц3
	|				ТОГДА Налоги.ФБ - ЕСТЬNULL(НалогиПредМесяца.ФБ, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020024003,
	|	СУММА(ВЫБОР
	|			КОГДА Налоги.Месяц = &Месяц3
	|				ТОГДА Налоги.ФСС - ЕСТЬNULL(НалогиПредМесяца.ФСС, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020024004,
	|	СУММА(ВЫБОР
	|			КОГДА Налоги.Месяц = &Месяц3
	|				ТОГДА Налоги.ФФОМС - ЕСТЬNULL(НалогиПредМесяца.ФФОМС, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020024005,
	|	СУММА(ВЫБОР
	|			КОГДА Налоги.Месяц = &Месяц3
	|				ТОГДА Налоги.ТФОМС - ЕСТЬNULL(НалогиПредМесяца.ТФОМС, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020024006,
	//  Налоговый вычет за год и по месяцам - строки 0300, 0320, 0330, 0340
	|	СУММА(ВЫБОР
	|			КОГДА Налоги.Месяц = &Месяц3
	|				ТОГДА Налоги.ЛьготаПоВзносамВПФР
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020030003,
	|	СУММА(ВЫБОР
	|			КОГДА Налоги.Месяц = &Месяц1
	|				ТОГДА Налоги.ЛьготаПоВзносамВПФР - ЕСТЬNULL(НалогиПредМесяца.ЛьготаПоВзносамВПФР, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020032003,
	|	СУММА(ВЫБОР
	|			КОГДА Налоги.Месяц = &Месяц2
	|				ТОГДА Налоги.ЛьготаПоВзносамВПФР - ЕСТЬNULL(НалогиПредМесяца.ЛьготаПоВзносамВПФР, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020033003,
	|	СУММА(ВЫБОР
	|			КОГДА Налоги.Месяц = &Месяц3
	|				ТОГДА Налоги.ЛьготаПоВзносамВПФР - ЕСТЬNULL(НалогиПредМесяца.ЛьготаПоВзносамВПФР, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020034003,
	//  Налоговая льгота инвалидам за год  - строка 0400
	|	СУММА(ВЫБОР
	|			КОГДА Налоги.Месяц = &Месяц3
	|				ТОГДА Налоги.ПримененнаяЛьготаФБ
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020040003,
	|	СУММА(ВЫБОР
	|			КОГДА Налоги.Месяц = &Месяц3
	|				ТОГДА Налоги.ПримененнаяЛьготаФСС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020040004,
	//  Налоговая льгота инвалидам за 1 месяц отчетного периода  - строка 0420
	|	СУММА(ВЫБОР
	|			КОГДА Налоги.Месяц = &Месяц1
	|				ТОГДА Налоги.ПримененнаяЛьготаФБ - ЕСТЬNULL(НалогиПредМесяца.ПримененнаяЛьготаФБ, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020042003,
	|	СУММА(ВЫБОР
	|			КОГДА Налоги.Месяц = &Месяц1
	|				ТОГДА Налоги.ПримененнаяЛьготаФСС - ЕСТЬNULL(НалогиПредМесяца.ПримененнаяЛьготаФСС, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020042004,
	//  Налоговая льгота инвалидам за 2 месяц отчетного периода  - строка 0430
	|	СУММА(ВЫБОР
	|			КОГДА Налоги.Месяц = &Месяц2
	|				ТОГДА Налоги.ПримененнаяЛьготаФБ - ЕСТЬNULL(НалогиПредМесяца.ПримененнаяЛьготаФБ, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020043003,
	|	СУММА(ВЫБОР
	|			КОГДА Налоги.Месяц = &Месяц2
	|				ТОГДА Налоги.ПримененнаяЛьготаФСС - ЕСТЬNULL(НалогиПредМесяца.ПримененнаяЛьготаФСС, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020043004,
	//  Налоговая льгота инвалидам за 3 месяц отчетного периода  - строка 0440
	|	СУММА(ВЫБОР
	|			КОГДА Налоги.Месяц = &Месяц3
	|				ТОГДА Налоги.ПримененнаяЛьготаФБ - ЕСТЬNULL(НалогиПредМесяца.ПримененнаяЛьготаФБ, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020044003,
	|	СУММА(ВЫБОР
	|			КОГДА Налоги.Месяц = &Месяц3
	|				ТОГДА Налоги.ПримененнаяЛьготаФСС - ЕСТЬNULL(НалогиПредМесяца.ПримененнаяЛьготаФСС, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020044004,
	//  Сумма налога с налоговой льготы инвалидам за год  - строка 0500
	|	СУММА(ВЫБОР
	|			КОГДА Налоги.Месяц = &Месяц3
	|				ТОГДА Налоги.ЛьготаФБ
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020050003,
	|	СУММА(ВЫБОР
	|			КОГДА Налоги.Месяц = &Месяц3
	|				ТОГДА Налоги.ЛьготаФСС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020050004,
	|	СУММА(ВЫБОР
	|			КОГДА Налоги.Месяц = &Месяц3
	|				ТОГДА Налоги.ЛьготаФФОМС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020050005,
	|	СУММА(ВЫБОР
	|			КОГДА Налоги.Месяц = &Месяц3
	|				ТОГДА Налоги.ЛьготаТФОМС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020050006,
	//  Сумма налога с налоговой льготы инвалидам за 1 месяц отчетного периода  - строка 0520
	|	СУММА(ВЫБОР
	|			КОГДА Налоги.Месяц = &Месяц1
	|				ТОГДА Налоги.ЛьготаФБ - ЕСТЬNULL(НалогиПредМесяца.ЛьготаФБ, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020052003,
	|	СУММА(ВЫБОР
	|			КОГДА Налоги.Месяц = &Месяц1
	|				ТОГДА Налоги.ЛьготаФСС - ЕСТЬNULL(НалогиПредМесяца.ЛьготаФСС, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020052004,
	|	СУММА(ВЫБОР
	|			КОГДА Налоги.Месяц = &Месяц1
	|				ТОГДА Налоги.ЛьготаФФОМС - ЕСТЬNULL(НалогиПредМесяца.ЛьготаФФОМС, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020052005,
	|	СУММА(ВЫБОР
	|			КОГДА Налоги.Месяц = &Месяц1
	|				ТОГДА Налоги.ЛьготаТФОМС - ЕСТЬNULL(НалогиПредМесяца.ЛьготаТФОМС, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020052006,
	//  Сумма налога с налоговой льготы инвалидам за 2 месяц отчетного периода  - строка 0530
	|	СУММА(ВЫБОР
	|			КОГДА Налоги.Месяц = &Месяц2
	|				ТОГДА Налоги.ЛьготаФБ - ЕСТЬNULL(НалогиПредМесяца.ЛьготаФБ, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020053003,
	|	СУММА(ВЫБОР
	|			КОГДА Налоги.Месяц = &Месяц2
	|				ТОГДА Налоги.ЛьготаФСС - ЕСТЬNULL(НалогиПредМесяца.ЛьготаФСС, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020053004,
	|	СУММА(ВЫБОР
	|			КОГДА Налоги.Месяц = &Месяц2
	|				ТОГДА Налоги.ЛьготаФФОМС - ЕСТЬNULL(НалогиПредМесяца.ЛьготаФФОМС, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020053005,
	|	СУММА(ВЫБОР
	|			КОГДА Налоги.Месяц = &Месяц2
	|				ТОГДА Налоги.ЛьготаТФОМС - ЕСТЬNULL(НалогиПредМесяца.ЛьготаТФОМС, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020053006,
	//  Сумма налога с налоговой льготы инвалидам за 3 месяц отчетного периода  - строка 0540
	|	СУММА(ВЫБОР
	|			КОГДА Налоги.Месяц = &Месяц3
	|				ТОГДА Налоги.ЛьготаФБ - ЕСТЬNULL(НалогиПредМесяца.ЛьготаФБ, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020054003,
	|	СУММА(ВЫБОР
	|			КОГДА Налоги.Месяц = &Месяц3
	|				ТОГДА Налоги.ЛьготаФСС - ЕСТЬNULL(НалогиПредМесяца.ЛьготаФСС, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020054004,
	|	СУММА(ВЫБОР
	|			КОГДА Налоги.Месяц = &Месяц3
	|				ТОГДА Налоги.ЛьготаФФОМС - ЕСТЬNULL(НалогиПредМесяца.ЛьготаФФОМС, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020054005,
	|	СУММА(ВЫБОР
	|			КОГДА Налоги.Месяц = &Месяц3
	|				ТОГДА Налоги.ЛьготаТФОМС - ЕСТЬNULL(НалогиПредМесяца.ЛьготаТФОМС, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020054006
	|ИЗ
	|	ВТПериоды КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсчисленныйНалогНарастающимИтогом КАК Налоги
	|		ПО (МЕСЯЦ(Периоды.Период) = Налоги.Месяц)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсчисленныйНалогНарастающимИтогом КАК НалогиПредМесяца
	|		ПО (МЕСЯЦ(Периоды.Период) - 1 = НалогиПредМесяца.Месяц)";
	
	// СуммыЛьготИнвалидов_Раздела3Текст
	//
	// ДанныеОбИнвалидности
	// Таблица Данных об инвалидности: - это список инвалидов и периодов инвалидности
	// поля:
	//		Физлицо, 
	//		Месяц - месяц налогового периода
	// Описание:	
	//  Строим псевдосрез последних для месяцев текущего налогового периода (таблица ВТПериоды)
	//		и физлиц с зарегистрированными льготами по ЕСН (таблица ВТИсчисленныйНалогПоМесяцам)
	//  условие: что физлицо - Инвалид
	//
	// ЛьготыНарастающимИтогом
	// Описание:
	//	Суммирует инвалидные доходы по месяцам налогового периода и физлицам
	// 	В качестве льготы покажем суммы предоставленные льготы по федеральному бюджету
	//
	
	СуммыЛьготИнвалидов_Раздела3Текст = 
	"ВЫБРАТЬ
	|	МЕСЯЦ(Периоды.Период) КАК Месяц,
	|	СведенияОбИнвалидностиФизлиц.Физлицо КАК Физлицо
	|ПОМЕСТИТЬ ВТДанныеОбИнвалидности
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период КАК Период,
	|		СведенияОбИнвалидностиФизлиц.Физлицо КАК Физлицо,
	|		МАКСИМУМ(СведенияОбИнвалидностиФизлиц.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВТПериоды КАК Периоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК СведенияОбИнвалидностиФизлиц
	|			ПО Периоды.Период >= СведенияОбИнвалидностиФизлиц.Период
	|	ГДЕ
	|		СведенияОбИнвалидностиФизлиц.Физлицо В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					СписокФизлиц.Физлицо
	|				ИЗ
	|					ВТИсчисленныйНалогПоМесяцам КАК СписокФизлиц)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СведенияОбИнвалидностиФизлиц.Физлицо,
	|		Периоды.Период) КАК Периоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК СведенияОбИнвалидностиФизлиц
	|		ПО Периоды.ПериодРегистра = СведенияОбИнвалидностиФизлиц.Период
	|			И Периоды.Физлицо = СведенияОбИнвалидностиФизлиц.Физлицо
	|			И (СведенияОбИнвалидностиФизлиц.Инвалидность)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	Месяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСНИсчисленный.ФизЛицо КАК ФизЛицо,
	|	ЕСНИсчисленный.ФизЛицо.Наименование КАК ФизЛицоНаименование,
	|	МесяцыНП.Месяц КАК Месяц,
	|	(ВЫРАЗИТЬ(СУММА(ЕСНИсчисленный.ПримененнаяЛьготаФБ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК ПримененнаяЛьготаФБ
	|ПОМЕСТИТЬ ВТЛьготыНарастающимИтогом
	|ИЗ
	|	ВТМесяцыНП КАК МесяцыНП
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсчисленныйНалогПоМесяцам КАК ЕСНИсчисленный
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОбИнвалидности КАК СведенияОбИнвалидности
	|			ПО ЕСНИсчисленный.ФизЛицо = СведенияОбИнвалидности.Физлицо
	|				И ЕСНИсчисленный.Месяц = СведенияОбИнвалидности.Месяц
	|		ПО МесяцыНП.Месяц >= ЕСНИсчисленный.Месяц
	|ГДЕ
	|	СведенияОбИнвалидности.Физлицо ЕСТЬ НЕ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	МесяцыНП.Месяц,
	|	ЕСНИсчисленный.ФизЛицо.Наименование,
	|	ЕСНИсчисленный.ФизЛицо
	|
	|ИМЕЮЩИЕ
	|	СУММА(ЕСНИсчисленный.ПримененнаяЛьготаФБ) > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	Месяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСНИсчисленный.ФизЛицо КАК ФизЛицо,
	|	ВЫБОР
	|		КОГДА ФИОФизЛиц.ФизЛицо ЕСТЬ NULL 
	|			ТОГДА ЕСНИсчисленный.ФизЛицоНаименование
	|		ИНАЧЕ ФИОФизЛиц.Фамилия + "" "" + ФИОФизЛиц.Имя + "" "" + ФИОФизЛиц.Отчество
	|	КОНЕЦ КАК П000030001002,
	|	ВЫБОР
	|		КОГДА ФИОФизЛиц.ФизЛицо ЕСТЬ NULL 
	|			ТОГДА ЕСНИсчисленный.ФизЛицоНаименование
	|		ИНАЧЕ ФИОФизЛиц.Фамилия + "", "" + ФИОФизЛиц.Имя + "", "" + ФИОФизЛиц.Отчество
	|	КОНЕЦ КАК П000030001011,
	|	"""" + СведенияОбИнвалидности.СерияСправки + "" "" + СведенияОбИнвалидности.НомерСправки КАК СерияНомерСправки,
	|	ВЫБОР
	|		КОГДА СведенияОбИнвалидности.СрокДействияСправки = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|		ИНАЧЕ СведенияОбИнвалидности.Период
	|	КОНЕЦ КАК П000030001004,
	|	СведенияОбИнвалидности.ДатаВыдачи КАК П000030001003,
	|	СведенияОбИнвалидности.ГруппаИнвалидности КАК ГруппаИнвалидности,
	|	СведенияОбИнвалидности.СрокДействияСправки КАК П000030001010,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСНИсчисленный.Месяц = &Месяц3
	|				ТОГДА ЕСНИсчисленный.ПримененнаяЛьготаФБ
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030001005,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСНИсчисленный.Месяц = &Месяц1
	|				ТОГДА ЕСНИсчисленный.ПримененнаяЛьготаФБ - ЕСТЬNULL(ЕСНИсчисленныйПредМесяца.ПримененнаяЛьготаФБ, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030001007,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСНИсчисленный.Месяц = &Месяц2
	|				ТОГДА ЕСНИсчисленный.ПримененнаяЛьготаФБ - ЕСТЬNULL(ЕСНИсчисленныйПредМесяца.ПримененнаяЛьготаФБ, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030001008,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСНИсчисленный.Месяц = &Месяц3
	|				ТОГДА ЕСНИсчисленный.ПримененнаяЛьготаФБ - ЕСТЬNULL(ЕСНИсчисленныйПредМесяца.ПримененнаяЛьготаФБ, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030001009
	|ИЗ
	|	ВТМесяцыНП КАК МесяцыНП
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЛьготыНарастающимИтогом КАК ЕСНИсчисленный
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(
	|					&парамКонецОтчетногоПериода,
	|					Физлицо В
	|						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|							СписокФизлиц.Физлицо
	|						ИЗ
	|							ВТДанныеОбИнвалидности КАК СписокФизлиц)) КАК ФИОФизЛиц
	|			ПО ЕСНИсчисленный.ФизЛицо = ФИОФизЛиц.ФизЛицо
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц.СрезПоследних(
	|					&парамКонецОтчетногоПериода,
	|					Физлицо В
	|							(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|								СписокФизлиц.Физлицо
	|							ИЗ
	|								ВТДанныеОбИнвалидности КАК СписокФизлиц)
	|						И Инвалидность) КАК СведенияОбИнвалидности
	|			ПО ЕСНИсчисленный.ФизЛицо = СведенияОбИнвалидности.Физлицо
	|		ПО МесяцыНП.Месяц = ЕСНИсчисленный.Месяц
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЛьготыНарастающимИтогом КАК ЕСНИсчисленныйПредМесяца
	|		ПО (МесяцыНП.Месяц - 1 = ЕСНИсчисленныйПредМесяца.Месяц)
	|			И (ЕСНИсчисленный.ФизЛицо = ЕСНИсчисленныйПредМесяца.ФизЛицо)
	|ГДЕ
	|	ЕСНИсчисленный.ФизЛицо ЕСТЬ НЕ NULL 
	|	И СведенияОбИнвалидности.Физлицо ЕСТЬ НЕ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОбИнвалидности.Период,
	|	СведенияОбИнвалидности.ДатаВыдачи,
	|	СведенияОбИнвалидности.ГруппаИнвалидности,
	|	СведенияОбИнвалидности.СрокДействияСправки,
	|	ВЫБОР
	|		КОГДА ФИОФизЛиц.ФизЛицо ЕСТЬ NULL 
	|			ТОГДА ЕСНИсчисленный.ФизЛицоНаименование
	|		ИНАЧЕ ФИОФизЛиц.Фамилия + "" "" + ФИОФизЛиц.Имя + "" "" + ФИОФизЛиц.Отчество
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ФИОФизЛиц.ФизЛицо ЕСТЬ NULL 
	|			ТОГДА ЕСНИсчисленный.ФизЛицоНаименование
	|		ИНАЧЕ ФИОФизЛиц.Фамилия + "", "" + ФИОФизЛиц.Имя + "", "" + ФИОФизЛиц.Отчество
	|	КОНЕЦ,
	|	ЕСНИсчисленный.ФизЛицо,
	|	"""" + СведенияОбИнвалидности.СерияСправки + "" "" + СведенияОбИнвалидности.НомерСправки,
	|	ВЫБОР
	|		КОГДА СведенияОбИнвалидности.СрокДействияСправки = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|		ИНАЧЕ СведенияОбИнвалидности.Период
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	П000030001002";
	
	СуммыЛьготИнвалидов_Раздела3Текст = СтрЗаменить(СуммыЛьготИнвалидов_Раздела3Текст,"ЧИСЛО(15, 3)","ЧИСЛО(15, " + ТочностьЕдиницыИзмерения + ")");
	
	// -------------------------------------------------------------------------------
	// Вывод данных в отчет
	
	
	// Раздел 2
	
	УзелРаздел2 = ОпределитьСтрокуВДеревеДанныхДляЗаполнения(ДеревоПоказателей, "Раздел2");
	
	Запрос.Текст = НалоговыеБазыРаздела2Текст;
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Результат = Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	ВывестиРезультатЗапросаВДеревоПоказателей(УзелРаздел2, Результат);
	
	Запрос.Текст = ИсчисленныеНалогиРаздела2Текст;
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Результат = Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	ВывестиРезультатЗапросаВДеревоПоказателей(УзелРаздел2, Результат);
	
	// Раздел 2.1
	
	УзелРаздел21 = ОпределитьСтрокуВДеревеДанныхДляЗаполнения(ДеревоПоказателей, "Раздел21");
	
	Запрос.Текст = НалоговаяБазаПоФизлицамПределам;
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Результат = Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	ВывестиРезультатЗапросаВДеревоПоказателей(УзелРаздел21,Результат);
	
	// Раздел 3 
	
	УзелРаздел3 = ОпределитьСтрокуВДеревеДанныхДляЗаполнения(ДеревоПоказателей, "Раздел3");
	
	Запрос.Текст = СуммыЛьготИнвалидов_Раздела3Текст;
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Результат = Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	ВывестиРезультатЗапросаВДеревоПоказателей(УзелРаздел3,Результат, Истина, "П0000300010");
	
	Возврат ДеревоПоказателей;
	
КонецФункции // ЗначенияПоказателей_АвансыЕСН_2007Кв1()



// Возвращает значения показателей отчета Расчет по авансовым платежам по взносам в ПФР 
// для формы образца 2005 года, вычисленные по данным ИБ
//
// Параметры:
//  ПараметрыОтчета - структура, содержащая значения ключевых реквизитов заполняемого отчета. 
//		Структура содержит, как минимум, следующее:
//			Организация, тип СправочникСсылка.Организации
//			ДатаНачалаПериода, тип Дата
//			ДатаОкончанияПериода, тип Дата
//			ДатаПодписи, тип Дата
//			Периодичность, тип ПеречислениеСсылка.Периодичность
//
// Возвращаемое значение:
//	ДеревоЗначений с колонками «Имя" и «Значение"
//
Функция ЗначенияПоказателей_АвансыПФР_2005Кв1(ПараметрыОтчета)
	
	ДеревоПоказателей = Новый ДеревоЗначений;
	ДеревоПоказателей.Колонки.Добавить("Имя");
	ДеревоПоказателей.Колонки.Добавить("Значение");
	
	ПустоеДерево = ДеревоПоказателей.Скопировать();
	
	ДатаКонцаПериодаОтчета = ПараметрыОтчета.ДатаОкончанияПериода;
	Организация = ПараметрыОтчета.Организация;
	ТочностьЕдиницыИзмерения = 2;
	Если ПараметрыОтчета.Свойство("ТочностьЕдиницыИзмерения",ТочностьЕдиницыИзмерения) = Неопределено Тогда
		ТочностьЕдиницыИзмерения = 2;
	КонецЕсли;
	ЕдиницаИзмерения = Перечисления.ПорядкиОкругленияОтчетности.ПустаяСсылка();
	Если ПараметрыОтчета.Свойство("ЕдиницаИзмерения",ЕдиницаИзмерения) = Неопределено Тогда
		ЕдиницаИзмерения = Перечисления.ПорядкиОкругленияОтчетности.ПустаяСсылка();
	КонецЕсли;
	Делитель = ПреобразоватьЕдиницуИзмеренияВЧисло(ЕдиницаИзмерения);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("парамОрганизация", Организация);
	Запрос.УстановитьПараметр("парамВидСтавокЕСНиПФР", Организация.ВидСтавокЕСНиПФР);
	Запрос.УстановитьПараметр("парамНачалоГода", НачалоГода(ДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("парамГод", Год(ДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("парамКонецОтчетногоПериода", КонецДня(ДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("Месяц1", Месяц(ДатаКонцаПериодаОтчета) - 2);
	Запрос.УстановитьПараметр("Месяц2", Месяц(ДатаКонцаПериодаОтчета) - 1);
	Запрос.УстановитьПараметр("Месяц3", Месяц(ДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("Делитель", Делитель);
	// Все данные отчета берутся по обособленному подразделению (указанной организации)
	Запрос.УстановитьПараметр("СписокОбособленныхПодразделений", Организация);
	ГоловнаяОрганизация = ОбщегоНазначения.ГоловнаяОрганизация(Организация);
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация", ГоловнаяОрганизация);
	
	
	// ----------------------------------------------------------------------------------
	// ТЕКСТЫ ЗАПРОСОВ
	
	// Сформируем текст запроса выборки месяцев налогового периода
	// конец месяца налогового периода
	КонецМесяца = КонецМесяца(НачалоГода(ДатаКонцаПериодаОтчета));
	// первый месяц
	ПериодыТекст = "ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ") КАК Период ПОМЕСТИТЬ ВТПериоды";
	// прибавим остальные месяцы
	Для Сч = 2 По Месяц(ДатаКонцаПериодаОтчета) Цикл
		КонецМесяца = КонецМесяца(КонецМесяца+1);
		ПериодыТекст = ПериодыТекст +" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ")";
	КонецЦикла;
	Запрос.Текст = ПериодыТекст;
	МассивЗапросов = Новый Массив;
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Запрос.Выполнить();
	
	// Сформируем текст запроса выборки месяцев налогового периода
	МесяцыНПТекст = "ВЫБРАТЬ 1 КАК МЕСЯЦ ПОМЕСТИТЬ ВТМесяцыНП";
	Для Сч = 2 По 12 Цикл
		МесяцыНПТекст = МесяцыНПТекст +" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ " + Сч;
	КонецЦикла;
	
	Запрос.Текст = МесяцыНПТекст;
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Запрос.Выполнить();
	
	
	// ДанныеОПравеНаПенсию
	// Таблица Данные о праве на пенсию: - список иностранцев и периодов
	// Поля:
	//		Физлицо, 
	//		Месяц - месяц налогового периода
	// 
	// Описание:
	//	Выбираем из списка периодов (Периоды)
	//	Внутреннее соединение с "псевдо" ГражданствоФизЛиц.СрезПоследних
	//  по равенству периодов
	//  условие: что физлицо - не имеет права на пенсию
	//
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЕСНСведенияОДоходах.ФизЛицо КАК ФизЛицо
	|ПОМЕСТИТЬ ЕСНФизлицаОрганизации
	|ИЗ
	|	РегистрНакопления.ЕСНСведенияОДоходах КАК ЕСНСведенияОДоходах
	|ГДЕ
	|	ЕСНСведенияОДоходах.Период МЕЖДУ &парамНачалоГода И &парамКонецОтчетногоПериода
	|	И ЕСНСведенияОДоходах.Организация = &парамОрганизация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МЕСЯЦ(Периоды.Период) КАК Месяц,
	|	ГражданствоФизЛиц.ФизЛицо КАК Физлицо
	|ПОМЕСТИТЬ ВТДанныеОПравеНаПенсию
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период КАК Период,
	|		ГражданствоФизЛиц.ФизЛицо КАК Физлицо,
	|		МАКСИМУМ(ГражданствоФизЛиц.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВТПериоды КАК Периоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|			ПО Периоды.Период >= ГражданствоФизЛиц.Период
	|	ГДЕ
	|		ГражданствоФизЛиц.ФизЛицо В
	|				(ВЫБРАТЬ
	|					ЕСНФизлицаОрганизации.ФизЛицо
	|				ИЗ
	|					ЕСНФизлицаОрганизации КАК ЕСНФизлицаОрганизации)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ГражданствоФизЛиц.ФизЛицо,
	|		Периоды.Период) КАК Периоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|		ПО Периоды.ПериодРегистра = ГражданствоФизЛиц.Период
	|			И Периоды.Физлицо = ГражданствоФизЛиц.ФизЛицо
	|			И (ГражданствоФизЛиц.НеИмеетПравоНаПенсию)
	|ГДЕ
	|	ГражданствоФизЛиц.ФизЛицо В
	|			(ВЫБРАТЬ
	|				ЕСНФизлицаОрганизации.ФизЛицо
	|			ИЗ
	|				ЕСНФизлицаОрганизации КАК ЕСНФизлицаОрганизации)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Месяц,
	|	Физлицо";
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	
	// УчетнаяПолитикаНалоговыйУчет
	// Таблица ВТУчетнаяПолитикаНалоговыйУчет - это список периодов, когда организация переходила на УСН
	
	Запрос.Текст = ЗаполнениеРегламентированнойОтчетностиПереопределяемый.ТекстЗапросаУСН();
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСНСведенияОДоходах.ФизЛицо КАК ФизЛицо
	|ПОМЕСТИТЬ ВТФизлицаБезНалоговойБазы
	|ИЗ
	|	РегистрНакопления.ЕСНСведенияОДоходах КАК ЕСНСведенияОДоходах
	|ГДЕ
	|	ЕСНСведенияОДоходах.Период МЕЖДУ &парамНачалоГода И &парамКонецОтчетногоПериода
	|	И ЕСНСведенияОДоходах.Организация = &парамГоловнаяОрганизация
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСНСведенияОДоходах.ФизЛицо
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВЫБОР
	|			КОГДА ЕСНСведенияОДоходах.КодДоходаЕСН.ВходитВБазуФедеральныйБюджет
	|				ТОГДА ЕСНСведенияОДоходах.Результат - ЕСНСведенияОДоходах.Скидка
	|			ИНАЧЕ 0
	|		КОНЕЦ) < 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	
	// НалоговаяБазаПоФизлицамПоМесяцам
	//	ФизЛицо	- физическое лицо 
	//	Месяц	- месяц налогового периода 
	//	База - налоговая база
	//	БазаОбщСН - налоговая база в части видов деятельности, не облагаемых ЕНВД
	//  НомерВозрастнойГруппы - номер возрастной группы: 
	//		1 - лица по 1966 г.р.
	//		2 - лица моложе 1966 г.р.
	// Описание:
	//  Выбирает базу взновов ПФР 
	// данные собираются нарастающим итогом для каждого месяца налогового периода в разрезе физлиц	 
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСНСведенияОДоходах.ФизЛицо КАК ФизЛицо,
	|	ВЫБОР
	|		КОГДА ГОД(ЕСНСведенияОДоходах.ФизЛицо.ДатаРождения) < 1967
	|			ТОГДА 1
	|		ИНАЧЕ 2
	|	КОНЕЦ КАК НомерВозрастнойГруппы,
	|	МесяцыНП.Месяц КАК Месяц,
	|	ЕСТЬNULL(СУММА(ЕСНСведенияОДоходах.Результат - ЕСНСведенияОДоходах.Скидка), 0) КАК База,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА ЕСНСведенияОДоходах.ОблагаетсяЕНВД
	|					ТОГДА 0
	|				КОГДА УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ НЕ NULL 
	|					ТОГДА 0
	|				ИНАЧЕ ЕСНСведенияОДоходах.Результат - ЕСНСведенияОДоходах.Скидка
	|			КОНЕЦ), 0) КАК БазаОбщСН
	|ПОМЕСТИТЬ ВТНалоговаяБазаПоФизлицамПоМесяцамНарастающимИтогом
	|ИЗ
	|	ВТМесяцыНП КАК МесяцыНП
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЕСНСведенияОДоходах КАК ЕСНСведенияОДоходах
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлицаБезНалоговойБазы КАК ФизлицаБезНалоговойБазы
	|			ПО ЕСНСведенияОДоходах.ФизЛицо = ФизлицаБезНалоговойБазы.Физлицо
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОПравеНаПенсию КАК Иностранцы
	|			ПО ЕСНСведенияОДоходах.ФизЛицо = Иностранцы.Физлицо
	|				И (МЕСЯЦ(ЕСНСведенияОДоходах.Период) = Иностранцы.Месяц)
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТУчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНалоговыйУчетУСН
	|			ПО (МЕСЯЦ(ЕСНСведенияОДоходах.Период) = УчетнаяПолитикаНалоговыйУчетУСН.Месяц)
	|		ПО (МесяцыНП.Месяц >= МЕСЯЦ(ЕСНСведенияОДоходах.Период))
	|ГДЕ
	|	ЕСНСведенияОДоходах.Период МЕЖДУ &парамНачалоГода И &парамКонецОтчетногоПериода
	|	И ЕСНСведенияОДоходах.КодДоходаЕСН.ВходитВБазуФедеральныйБюджет
	|	И ЕСНСведенияОДоходах.Организация = &парамГоловнаяОрганизация
	|	И ЕСНСведенияОДоходах.ОбособленноеПодразделение В(&СписокОбособленныхПодразделений)
	|	И ФизлицаБезНалоговойБазы.Физлицо ЕСТЬ NULL 
	|	И Иностранцы.Физлицо ЕСТЬ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСНСведенияОДоходах.ФизЛицо,
	|	МесяцыНП.Месяц,
	|	ВЫБОР
	|		КОГДА ГОД(ЕСНСведенияОДоходах.ФизЛицо.ДатаРождения) < 1967
	|			ТОГДА 1
	|		ИНАЧЕ 2
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Месяц,
	|	ФизЛицо";
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	
	ДоходыНарастающимИтогомТекст = 
	"ВЫБРАТЬ
	|	МесяцыНП.Месяц КАК Месяц,
	|	ЕСТЬNULL(ДоходыЕСН.База, 0) КАК База,
	|	ЕСТЬNULL(ДоходыЕСН.БазаОбщСН, 0) КАК БазаОбщСН,
	|	ЕСТЬNULL(ДоходыПФР.База, 0) КАК База1,
	|	ЕСТЬNULL(ДоходыПФР.БазаОбщСН, 0) КАК БазаОбщСН1,
	|	ЕСТЬNULL(ДоходыЕСН.База, 0) - ЕСТЬNULL(ДоходыПФР.База, 0) КАК База2,
	|	ЕСТЬNULL(ДоходыЕСН.БазаОбщСН, 0) - ЕСТЬNULL(ДоходыПФР.БазаОбщСН, 0) КАК БазаОбщСН2
	|ПОМЕСТИТЬ ВТДоходыПФР
	|ИЗ
	|	ВТМесяцыНП КАК МесяцыНП
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ДоходыПФР.Месяц КАК Месяц,
	|			(ВЫРАЗИТЬ(СУММА(ДоходыПФР.База) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК База,
	|			(ВЫРАЗИТЬ(СУММА(ДоходыПФР.БазаОбщСН) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК БазаОбщСН
	|		ИЗ
	|			ВТНалоговаяБазаПоФизлицамПоМесяцамНарастающимИтогом КАК ДоходыПФР
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ДоходыПФР.Месяц) КАК ДоходыЕСН
	|		ПО МесяцыНП.Месяц = ДоходыЕСН.Месяц
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ДоходыПФР.Месяц КАК Месяц,
	|			(ВЫРАЗИТЬ(СУММА(ДоходыПФР.База) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК База,
	|			(ВЫРАЗИТЬ(СУММА(ДоходыПФР.БазаОбщСН) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК БазаОбщСН
	|		ИЗ
	|			ВТНалоговаяБазаПоФизлицамПоМесяцамНарастающимИтогом КАК ДоходыПФР
	|		ГДЕ
	|			ДоходыПФР.НомерВозрастнойГруппы = 1
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ДоходыПФР.Месяц) КАК ДоходыПФР
	|		ПО МесяцыНП.Месяц = ДоходыПФР.Месяц
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Месяц";
	Запрос.Текст  = СтрЗаменить(ДоходыНарастающимИтогомТекст,"ЧИСЛО(15, 3)","ЧИСЛО(15, " + ТочностьЕдиницыИзмерения + ")");
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	
	// РАСЧЕТ ПОКАЗАТЕЛЕЙ РАЗДЕЛА 2										  
	
	//НалоговаяБазаПоМесяцамОтчетногоПериода
	// поля запроса соответствуют номерам ячеек отчета
	// Описание:
	//  Выполняет расчет налоговой базы по месяцам отчетного периода для раздела 2 
	
	НалоговаяБазаПоМесяцамКварталаТекст = 
	"ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА БазаПФР.Месяц = &Месяц1
	|				ТОГДА БазаПФР.База1 - ЕСТЬNULL(БазаПФРПредМесяца.База1, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020012003,
	|	СУММА(ВЫБОР
	|			КОГДА БазаПФР.Месяц = &Месяц1
	|				ТОГДА БазаПФР.База2 - ЕСТЬNULL(БазаПФРПредМесяца.База2, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020012004,
	|	СУММА(ВЫБОР
	|			КОГДА БазаПФР.Месяц = &Месяц1
	|				ТОГДА БазаПФР.БазаОбщСН - ЕСТЬNULL(БазаПФРПредМесяца.БазаОбщСН, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020012006,
	|	СУММА(ВЫБОР
	|			КОГДА БазаПФР.Месяц = &Месяц2
	|				ТОГДА БазаПФР.База1 - ЕСТЬNULL(БазаПФРПредМесяца.База1, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020013003,
	|	СУММА(ВЫБОР
	|			КОГДА БазаПФР.Месяц = &Месяц2
	|				ТОГДА БазаПФР.База2 - ЕСТЬNULL(БазаПФРПредМесяца.База2, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020013004,
	|	СУММА(ВЫБОР
	|			КОГДА БазаПФР.Месяц = &Месяц2
	|				ТОГДА БазаПФР.БазаОбщСН - ЕСТЬNULL(БазаПФРПредМесяца.БазаОбщСН, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020013006,
	|	СУММА(ВЫБОР
	|			КОГДА БазаПФР.Месяц = &Месяц3
	|				ТОГДА БазаПФР.База1 - ЕСТЬNULL(БазаПФРПредМесяца.База1, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020014003,
	|	СУММА(ВЫБОР
	|			КОГДА БазаПФР.Месяц = &Месяц3
	|				ТОГДА БазаПФР.База2 - ЕСТЬNULL(БазаПФРПредМесяца.База2, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020014004,
	|	СУММА(ВЫБОР
	|			КОГДА БазаПФР.Месяц = &Месяц3
	|				ТОГДА БазаПФР.БазаОбщСН - ЕСТЬNULL(БазаПФРПредМесяца.БазаОбщСН, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020014006
	|ИЗ
	|	ВТМесяцыНП КАК МесяцыНП
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыПФР КАК БазаПФР
	|		ПО МесяцыНП.Месяц = БазаПФР.Месяц
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыПФР КАК БазаПФРПредМесяца
	|		ПО (МесяцыНП.Месяц - 1 = БазаПФРПредМесяца.Месяц)";
	
	
	// ИсчисленныйНалогПоФизЛицамПоМесяцам
	//	ФизЛицо	- физическое лицо 
	//	Месяц	- месяц налогового периода 
	//  НомерВозрастнойГруппы - номер возрастной группы физлица
	//		1 - лица по 1966 г.р.
	//		2 - лица моложе 1966 г.р.
	//	Накопительная - начислено на накопительную часть
	//	Страховая - начислено на страховую часть
	//	НакопительнаяОбщСН - начислено на накопительную часть по видам деятельности, не облагаемым ЕНВД
	//	СтраховаяОбщСН - начислено на страховую часть с доходов не облагаемых ЕНВД
	// данные собираются нарастающим итогом для каждого месяца налогового периода в разрезе физлиц	 
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСНИсчисленный.ФизЛицо КАК ФизЛицо,
	|	МесяцыНП.Месяц КАК Месяц,
	|	ВЫБОР
	|		КОГДА ГОД(ЕСНИсчисленный.ФизЛицо.ДатаРождения) < 1967
	|			ТОГДА 1
	|		ИНАЧЕ 2
	|	КОНЕЦ КАК НомерВозрастнойГруппы,
	|	СУММА(ЕСНИсчисленный.ПФРНакопительная) КАК Накопительная,
	|	СУММА(ЕСНИсчисленный.ПФРСтраховая) КАК Страховая,
	|	СУММА(ВЫБОР
	|			КОГДА УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ NULL 
	|				ТОГДА ЕСНИсчисленный.ПФРНакопительная - ЕСНИсчисленный.ПФРНакопительнаяЕНВД
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НакопительнаяОбщСН,
	|	СУММА(ВЫБОР
	|			КОГДА УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ NULL 
	|				ТОГДА ЕСНИсчисленный.ПФРСтраховая - ЕСНИсчисленный.ПФРСтраховаяЕНВД
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СтраховаяОбщСН
	|ПОМЕСТИТЬ ВТИсчисленныйНалогПоФизЛицамПоМесяцамНарастающимИтогом
	|ИЗ
	|	ВТМесяцыНП КАК МесяцыНП
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЕСНИсчисленный КАК ЕСНИсчисленный
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТУчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНалоговыйУчетУСН
	|			ПО (МЕСЯЦ(ЕСНИсчисленный.Период) = УчетнаяПолитикаНалоговыйУчетУСН.Месяц)
	|		ПО (МесяцыНП.Месяц >= МЕСЯЦ(ЕСНИсчисленный.Период))
	|ГДЕ
	|	ЕСНИсчисленный.Период МЕЖДУ &парамНачалоГода И &парамКонецОтчетногоПериода
	|	И ЕСНИсчисленный.Организация = &парамГоловнаяОрганизация
	|	И ЕСНИсчисленный.ОбособленноеПодразделение В(&СписокОбособленныхПодразделений)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСНИсчисленный.ФизЛицо,
	|	МесяцыНП.Месяц,
	|	ВЫБОР
	|		КОГДА ГОД(ЕСНИсчисленный.ФизЛицо.ДатаРождения) < 1967
	|			ТОГДА 1
	|		ИНАЧЕ 2
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Месяц,
	|	ФизЛицо";
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	
	НалогиНарастающимИтогомТекст = 
	"ВЫБРАТЬ
	|	ИсчисленныйНалог.Месяц КАК Месяц,
	|	ИсчисленныйНалог.НомерВозрастнойГруппы КАК НомерВозрастнойГруппы,
	|	(ВЫРАЗИТЬ(СУММА(ИсчисленныйНалог.Накопительная) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК Накопительная,
	|	(ВЫРАЗИТЬ(СУММА(ИсчисленныйНалог.Страховая) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК Страховая,
	|	(ВЫРАЗИТЬ(СУММА(ИсчисленныйНалог.НакопительнаяОбщСН) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК НакопительнаяОбщСН,
	|	(ВЫРАЗИТЬ(СУММА(ИсчисленныйНалог.СтраховаяОбщСН) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК СтраховаяОбщСН
	|ПОМЕСТИТЬ ВТИсчисленныйНалог
	|ИЗ
	|	ВТИсчисленныйНалогПоФизЛицамПоМесяцамНарастающимИтогом КАК ИсчисленныйНалог
	|
	|СГРУППИРОВАТЬ ПО
	|	ИсчисленныйНалог.Месяц,
	|	ИсчисленныйНалог.НомерВозрастнойГруппы
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Месяц,
	|	НомерВозрастнойГруппы";
	Запрос.Текст  = СтрЗаменить(НалогиНарастающимИтогомТекст,"ЧИСЛО(15, 3)","ЧИСЛО(15, " + ТочностьЕдиницыИзмерения + ")");
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	
	//ИсчисленныеНалогиРаздела2
	// поля запроса соответствуют номерам ячеек отчета
	// Описание:
	//  Выполняет расчет показателей раздела 2, содержащих информацию об исчисленных налогах 
	// используемые таблицы содержат уже округленные суммы
	
	ИсчисленныеНалогиРаздела2Текст = 
	"ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц3
	|				ТОГДА ИсчисленныйЕСН.СтраховаяОбщСН
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СтраховаяОбщСН,
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц3
	|				ТОГДА ИсчисленныйЕСН.Страховая
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Страховая,
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц3
	|				ТОГДА ИсчисленныйЕСН.НакопительнаяОбщСН
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НакопительнаяОбщСН,
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц3
	|				ТОГДА ИсчисленныйЕСН.Накопительная
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Накопительная,
	// Страховая часть 
	// строка 0300 - исчисленный налог с начала года
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц3
	|				ТОГДА ИсчисленныйЕСН.СтраховаяОбщСН
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020030006,
	// строка 0320 - исчисленный налог за первый месяц
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц1
	|					И ИсчисленныйЕСН.НомерВозрастнойГруппы = 1
	|				ТОГДА ИсчисленныйЕСН.Страховая - ЕСТЬNULL(ИсчисленныйЕСНПредМесяца.Страховая, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020032003,
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц1
	|					И ИсчисленныйЕСН.НомерВозрастнойГруппы = 2
	|				ТОГДА ИсчисленныйЕСН.Страховая - ЕСТЬNULL(ИсчисленныйЕСНПредМесяца.Страховая, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020032004,
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц1
	|				ТОГДА ИсчисленныйЕСН.СтраховаяОбщСН - ЕСТЬNULL(ИсчисленныйЕСНПредМесяца.СтраховаяОбщСН, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020032006,
	// строка 0330 - исчисленный налог за второй месяц
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц2
	|					И ИсчисленныйЕСН.НомерВозрастнойГруппы = 1
	|				ТОГДА ИсчисленныйЕСН.Страховая - ЕСТЬNULL(ИсчисленныйЕСНПредМесяца.Страховая, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020033003,
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц2
	|					И ИсчисленныйЕСН.НомерВозрастнойГруппы = 2
	|				ТОГДА ИсчисленныйЕСН.Страховая - ЕСТЬNULL(ИсчисленныйЕСНПредМесяца.Страховая, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020033004,
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц2
	|				ТОГДА ИсчисленныйЕСН.СтраховаяОбщСН - ЕСТЬNULL(ИсчисленныйЕСНПредМесяца.СтраховаяОбщСН, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020033006,
	// строка 0340 - исчисленный налог за третий месяц
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц3
	|					И ИсчисленныйЕСН.НомерВозрастнойГруппы = 1
	|				ТОГДА ИсчисленныйЕСН.Страховая - ЕСТЬNULL(ИсчисленныйЕСНПредМесяца.Страховая, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020034003,
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц3
	|					И ИсчисленныйЕСН.НомерВозрастнойГруппы = 2
	|				ТОГДА ИсчисленныйЕСН.Страховая - ЕСТЬNULL(ИсчисленныйЕСНПредМесяца.Страховая, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020034004,
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц3
	|				ТОГДА ИсчисленныйЕСН.СтраховаяОбщСН - ЕСТЬNULL(ИсчисленныйЕСНПредМесяца.СтраховаяОбщСН, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020034006,
	// Накопительная часть 
	// строка 0400 - исчисленный налог с начала года
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц3
	|				ТОГДА ИсчисленныйЕСН.НакопительнаяОбщСН
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020040006,
	// строка 0420 - исчисленный налог за первый месяц
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц1
	|				ТОГДА ИсчисленныйЕСН.Накопительная - ЕСТЬNULL(ИсчисленныйЕСНПредМесяца.Накопительная, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020042004,
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц1
	|				ТОГДА ИсчисленныйЕСН.НакопительнаяОбщСН - ЕСТЬNULL(ИсчисленныйЕСНПредМесяца.НакопительнаяОбщСН, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020042006,
	// строка 0430 - исчисленный налог за второй месяц
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц2
	|				ТОГДА ИсчисленныйЕСН.Накопительная - ЕСТЬNULL(ИсчисленныйЕСНПредМесяца.Накопительная, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020043004,
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц2
	|				ТОГДА ИсчисленныйЕСН.НакопительнаяОбщСН - ЕСТЬNULL(ИсчисленныйЕСНПредМесяца.НакопительнаяОбщСН, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020043006,
	// строка 0440 - исчисленный налог за третий месяц
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц3
	|				ТОГДА ИсчисленныйЕСН.Накопительная - ЕСТЬNULL(ИсчисленныйЕСНПредМесяца.Накопительная, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020044004,
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц3
	|				ТОГДА ИсчисленныйЕСН.НакопительнаяОбщСН - ЕСТЬNULL(ИсчисленныйЕСНПредМесяца.НакопительнаяОбщСН, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020044006
	|ИЗ
	|	ВТМесяцыНП КАК МесяцыНП
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсчисленныйНалог КАК ИсчисленныйЕСН
	|		ПО МесяцыНП.Месяц = ИсчисленныйЕСН.Месяц
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсчисленныйНалог КАК ИсчисленныйЕСНПредМесяца
	|		ПО (МесяцыНП.Месяц - 1 = ИсчисленныйЕСНПредМесяца.Месяц)
	|			И ИсчисленныйЕСН.НомерВозрастнойГруппы = ИсчисленныйЕСНПредМесяца.НомерВозрастнойГруппы";
	
	// РАСЧЕТ ПОКАЗАТЕЛЕЙ РАЗДЕЛА 2.2
	
	// НалоговаяБазаПоСтаршимФизлицамИПределам и НалоговаяБазаПоМладшимФизлицамИПределам
	// Описание:
	//  Выполняют расчет показателей раздела 2.2
	// В выборке ДоходыНалоги распределяем данные физлиц по строкам раздела, суммируем и округляем  
	// затем во избежание ошибок округления вычисляем показатели первой строки как разность
	// итоговой строки и всех остальных строк раздела
	
	НалоговаяБазаПоСтаршимФизлицамИПределамТекст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ДоходыПФРВсего.База, 0) КАК База,
	|	ЕСТЬNULL(ДоходыПФРВсего.БазаОбщСН, 0) КАК БазаОбщСН,
	|	ЕСТЬNULL(ДоходыПФРВсего.База1, 0) - ДоходыНалоги.П000220010004ОстальныеСтроки КАК П000220010004,
	|	ЕСТЬNULL(ДоходыПФРВсего.БазаОбщСН1, 0) - ДоходыНалоги.П000220010005ОстальныеСтроки КАК П000220010005,
	|	ПФРИсчисленныйВсего.Страховая - ДоходыНалоги.П000220010007ОстальныеСтроки КАК П000220010007,
	|	ДоходыНалоги.П000220010010,
	|	ДоходыНалоги.П000220021005,
	|	ДоходыНалоги.П000220021010,
	|	ДоходыНалоги.П000220022004,
	|	ДоходыНалоги.П000220022005,
	|	ДоходыНалоги.П000220022007,
	|	ДоходыНалоги.П000220030004,
	|	ДоходыНалоги.П000220030005,
	|	ДоходыНалоги.П000220030007,
	|	ДоходыНалоги.П000220030010
	|ИЗ
	|	(ВЫБРАТЬ
	|		(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Ставки.НомерСтрокиСтавок = 2
	|						ТОГДА Доходы.База - Ставки.СуммаДоходаС
	|					ИНАЧЕ 0
	|				КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель + (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Ставки.НомерСтрокиСтавок = 2
	|						ТОГДА Ставки.СуммаДоходаС
	|					ИНАЧЕ 0
	|				КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель + (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Ставки.НомерСтрокиСтавок = 3
	|						ТОГДА Доходы.База
	|					ИНАЧЕ 0
	|				КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК П000220010004ОстальныеСтроки,
	|		(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Ставки.НомерСтрокиСтавок = 2
	|						ТОГДА Доходы.БазаОбщСН * Ставки.СуммаДоходаС / Доходы.База
	|					ИНАЧЕ 0
	|				КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель + (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Ставки.НомерСтрокиСтавок = 2
	|						ТОГДА Доходы.БазаОбщСН * (Доходы.База - Ставки.СуммаДоходаС) / Доходы.База
	|					ИНАЧЕ 0
	|				КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель + (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Ставки.НомерСтрокиСтавок = 3
	|						ТОГДА Доходы.БазаОбщСН
	|					ИНАЧЕ 0
	|				КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК П000220010005ОстальныеСтроки,
	|		(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Ставки.НомерСтрокиСтавок = 2
	|						ТОГДА Ставки.ПФРСтраховая1вРублях
	|					ИНАЧЕ 0
	|				КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель + (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Ставки.НомерСтрокиСтавок = 2
	|						ТОГДА ПФРИсчисленный.Страховая - Ставки.ПФРСтраховая1вРублях
	|					ИНАЧЕ 0
	|				КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель + (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Ставки.НомерСтрокиСтавок = 3
	|						ТОГДА ПФРИсчисленный.Страховая
	|					ИНАЧЕ 0
	|				КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК П000220010007ОстальныеСтроки,
	|		СУММА(ВЫБОР
	|				КОГДА Ставки.НомерСтрокиСтавок = 1
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК П000220010010,
	|		(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Ставки.НомерСтрокиСтавок = 2
	|						ТОГДА Доходы.БазаОбщСН * Ставки.СуммаДоходаС / Доходы.База
	|					ИНАЧЕ 0
	|				КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК П000220021005,
	|		СУММА(ВЫБОР
	|				КОГДА Ставки.НомерСтрокиСтавок = 2
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК П000220021010,
	|		(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Ставки.НомерСтрокиСтавок = 2
	|						ТОГДА Доходы.База - Ставки.СуммаДоходаС
	|					ИНАЧЕ 0
	|				КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК П000220022004,
	|		(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Ставки.НомерСтрокиСтавок = 2
	|						ТОГДА Доходы.БазаОбщСН * (Доходы.База - Ставки.СуммаДоходаС) / Доходы.База
	|					ИНАЧЕ 0
	|				КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК П000220022005,
	|		(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Ставки.НомерСтрокиСтавок = 2
	|						ТОГДА ПФРИсчисленный.Страховая - Ставки.ПФРСтраховая1вРублях
	|					ИНАЧЕ 0
	|				КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК П000220022007,
	|		(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Ставки.НомерСтрокиСтавок = 3
	|						ТОГДА Доходы.База
	|					ИНАЧЕ 0
	|				КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК П000220030004,
	|		(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Ставки.НомерСтрокиСтавок = 3
	|						ТОГДА Доходы.БазаОбщСН
	|					ИНАЧЕ 0
	|				КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК П000220030005,
	|		(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Ставки.НомерСтрокиСтавок = 3
	|						ТОГДА ПФРИсчисленный.Страховая
	|					ИНАЧЕ 0
	|				КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК П000220030007,
	|		СУММА(ВЫБОР
	|				КОГДА Ставки.НомерСтрокиСтавок = 3
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК П000220030010
	|	ИЗ
	|		ВТНалоговаяБазаПоФизлицамПоМесяцамНарастающимИтогом КАК Доходы
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТИсчисленныйНалогПоФизЛицамПоМесяцамНарастающимИтогом КАК ПФРИсчисленный
	|			ПО Доходы.ФизЛицо = ПФРИсчисленный.ФизЛицо
	|				И Доходы.Месяц = ПФРИсчисленный.Месяц
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОСтавкахЕСНиПФР КАК Ставки
	|			ПО (Ставки.ВидСтавокЕСНиПФР = &парамВидСтавокЕСНиПФР)
	|				И (Ставки.Год = &парамГод)
	|				И Доходы.База > Ставки.СуммаДоходаС
	|				И Доходы.База <= Ставки.СуммаДоходаПо
	|	ГДЕ
	|		Доходы.Месяц = &Месяц3
	|		И Доходы.НомерВозрастнойГруппы = 1) КАК ДоходыНалоги
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсчисленныйНалог КАК ПФРИсчисленныйВсего
	|		ПО (ПФРИсчисленныйВсего.Месяц = &Месяц3)
	|			И (ПФРИсчисленныйВсего.НомерВозрастнойГруппы = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыПФР КАК ДоходыПФРВсего
	|		ПО (ДоходыПФРВсего.Месяц = &Месяц3)";
	НалоговаяБазаПоСтаршимФизлицамИПределамТекст = СтрЗаменить(НалоговаяБазаПоСтаршимФизлицамИПределамТекст,"ЧИСЛО(15, 3)","ЧИСЛО(15, " + ТочностьЕдиницыИзмерения + ")");
	
	НалоговаяБазаПоМладшимФизлицамИПределамТекст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ДоходыПФРВсего.База, 0) КАК База,
	|	ЕСТЬNULL(ДоходыПФРВсего.БазаОбщСН, 0) КАК БазаОбщСН,
	|	ЕСТЬNULL(ДоходыПФРВсего.База2, 0) - ДоходыНалоги.П000220010104ОстальныеСтроки КАК П000220010104,
	|	ЕСТЬNULL(ДоходыПФРВсего.БазаОбщСН2, 0) - ДоходыНалоги.П000220010105ОстальныеСтроки КАК П000220010105,
	|	ПФРИсчисленныйВсего.Страховая - ДоходыНалоги.П000220010107ОстальныеСтроки КАК П000220010107,
	|	ПФРИсчисленныйВсего.Накопительная - ДоходыНалоги.П000220010109ОстальныеСтроки КАК П000220010109,
	|	ДоходыНалоги.П000220010110,
	|	ДоходыНалоги.П000220021105,
	|	ДоходыНалоги.П000220021110,
	|	ДоходыНалоги.П000220022104,
	|	ДоходыНалоги.П000220022105,
	|	ДоходыНалоги.П000220022107,
	|	ДоходыНалоги.П000220022109,
	|	ДоходыНалоги.П000220030104,
	|	ДоходыНалоги.П000220030105,
	|	ДоходыНалоги.П000220030107,
	|	ДоходыНалоги.П000220030109,
	|	ДоходыНалоги.П000220030110
	|ИЗ
	|	(ВЫБРАТЬ
	|		Доходы.Месяц КАК Месяц,
	|		(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Доходы.НомерВозрастнойГруппы = 1
	|						ТОГДА 0
	|					КОГДА Ставки.НомерСтрокиСтавок = 2
	|						ТОГДА Ставки.СуммаДоходаС
	|					ИНАЧЕ 0
	|				КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель + (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Доходы.НомерВозрастнойГруппы = 1
	|						ТОГДА 0
	|					КОГДА Ставки.НомерСтрокиСтавок = 2
	|						ТОГДА Доходы.База - Ставки.СуммаДоходаС
	|					ИНАЧЕ 0
	|				КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель + (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Доходы.НомерВозрастнойГруппы = 1
	|						ТОГДА 0
	|					КОГДА Ставки.НомерСтрокиСтавок = 3
	|						ТОГДА Доходы.База
	|					ИНАЧЕ 0
	|				КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК П000220010104ОстальныеСтроки,
	|		(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Доходы.НомерВозрастнойГруппы = 1
	|						ТОГДА 0
	|					КОГДА Ставки.НомерСтрокиСтавок = 2
	|						ТОГДА Доходы.БазаОбщСН * Ставки.СуммаДоходаС / Доходы.База
	|					ИНАЧЕ 0
	|				КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель + (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Доходы.НомерВозрастнойГруппы = 1
	|						ТОГДА 0
	|					КОГДА Ставки.НомерСтрокиСтавок = 2
	|						ТОГДА Доходы.БазаОбщСН * (Доходы.База - Ставки.СуммаДоходаС) / Доходы.База
	|					ИНАЧЕ 0
	|				КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель + (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Доходы.НомерВозрастнойГруппы = 1
	|						ТОГДА 0
	|					КОГДА Ставки.НомерСтрокиСтавок = 3
	|						ТОГДА Доходы.БазаОбщСН
	|					ИНАЧЕ 0
	|				КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК П000220010105ОстальныеСтроки,
	|		(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Доходы.НомерВозрастнойГруппы = 1
	|						ТОГДА 0
	|					КОГДА Ставки.НомерСтрокиСтавок = 2
	|						ТОГДА Ставки.ПФРСтраховая2вРублях
	|					ИНАЧЕ 0
	|				КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель + (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Доходы.НомерВозрастнойГруппы = 1
	|						ТОГДА 0
	|					КОГДА Ставки.НомерСтрокиСтавок = 2
	|						ТОГДА ПФРИсчисленный.Страховая - Ставки.ПФРСтраховая2вРублях
	|					ИНАЧЕ 0
	|				КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель + (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Доходы.НомерВозрастнойГруппы = 1
	|						ТОГДА 0
	|					КОГДА Ставки.НомерСтрокиСтавок = 3
	|						ТОГДА ПФРИсчисленный.Страховая
	|					ИНАЧЕ 0
	|				КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК П000220010107ОстальныеСтроки,
	|		(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Ставки.НомерСтрокиСтавок = 2
	|							И ПФРИсчисленный.Накопительная > 0
	|						ТОГДА Ставки.ПФРНакопительная2вРублях
	|					ИНАЧЕ 0
	|				КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель + (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Ставки.НомерСтрокиСтавок = 2
	|							И ПФРИсчисленный.Накопительная > 0
	|						ТОГДА ПФРИсчисленный.Накопительная - Ставки.ПФРНакопительная2вРублях
	|					ИНАЧЕ 0
	|				КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель + (ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Ставки.НомерСтрокиСтавок = 3
	|						ТОГДА ПФРИсчисленный.Накопительная
	|					ИНАЧЕ 0
	|				КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК П000220010109ОстальныеСтроки,
	|		СУММА(ВЫБОР
	|				КОГДА Доходы.НомерВозрастнойГруппы = 1
	|					ТОГДА 0
	|				КОГДА Ставки.НомерСтрокиСтавок = 1
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК П000220010110,
	|		(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Доходы.НомерВозрастнойГруппы = 1
	|						ТОГДА 0
	|					КОГДА Ставки.НомерСтрокиСтавок = 2
	|						ТОГДА Доходы.БазаОбщСН * Ставки.СуммаДоходаС / Доходы.База
	|					ИНАЧЕ 0
	|				КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК П000220021105,
	|		СУММА(ВЫБОР
	|				КОГДА Доходы.НомерВозрастнойГруппы = 1
	|					ТОГДА 0
	|				КОГДА Ставки.НомерСтрокиСтавок = 2
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК П000220021110,
	|		(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Доходы.НомерВозрастнойГруппы = 1
	|						ТОГДА 0
	|					КОГДА Ставки.НомерСтрокиСтавок = 2
	|						ТОГДА Доходы.База - Ставки.СуммаДоходаС
	|					ИНАЧЕ 0
	|				КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК П000220022104,
	|		(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Доходы.НомерВозрастнойГруппы = 1
	|						ТОГДА 0
	|					КОГДА Ставки.НомерСтрокиСтавок = 2
	|						ТОГДА Доходы.БазаОбщСН * (Доходы.База - Ставки.СуммаДоходаС) / Доходы.База
	|					ИНАЧЕ 0
	|				КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК П000220022105,
	|		(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Доходы.НомерВозрастнойГруппы = 1
	|						ТОГДА 0
	|					КОГДА Ставки.НомерСтрокиСтавок = 2
	|						ТОГДА ПФРИсчисленный.Страховая - Ставки.ПФРСтраховая2вРублях
	|					ИНАЧЕ 0
	|				КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК П000220022107,
	|		(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Ставки.НомерСтрокиСтавок = 2
	|							И ПФРИсчисленный.Накопительная > 0
	|						ТОГДА ПФРИсчисленный.Накопительная - Ставки.ПФРНакопительная2вРублях
	|					ИНАЧЕ 0
	|				КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК П000220022109,
	|		(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Доходы.НомерВозрастнойГруппы = 1
	|						ТОГДА 0
	|					КОГДА Ставки.НомерСтрокиСтавок = 3
	|						ТОГДА Доходы.База
	|					ИНАЧЕ 0
	|				КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК П000220030104,
	|		(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Доходы.НомерВозрастнойГруппы = 1
	|						ТОГДА 0
	|					КОГДА Ставки.НомерСтрокиСтавок = 3
	|						ТОГДА Доходы.БазаОбщСН
	|					ИНАЧЕ 0
	|				КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК П000220030105,
	|		(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Доходы.НомерВозрастнойГруппы = 1
	|						ТОГДА 0
	|					КОГДА Ставки.НомерСтрокиСтавок = 3
	|						ТОГДА ПФРИсчисленный.Страховая
	|					ИНАЧЕ 0
	|				КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК П000220030107,
	|		(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Ставки.НомерСтрокиСтавок = 3
	|						ТОГДА ПФРИсчисленный.Накопительная
	|					ИНАЧЕ 0
	|				КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК П000220030109,
	|		СУММА(ВЫБОР
	|				КОГДА Доходы.НомерВозрастнойГруппы = 1
	|					ТОГДА 0
	|				КОГДА Ставки.НомерСтрокиСтавок = 3
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК П000220030110
	|	ИЗ
	|		ВТНалоговаяБазаПоФизлицамПоМесяцамНарастающимИтогом КАК Доходы
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТИсчисленныйНалогПоФизЛицамПоМесяцамНарастающимИтогом КАК ПФРИсчисленный
	|			ПО Доходы.ФизЛицо = ПФРИсчисленный.ФизЛицо
	|				И Доходы.Месяц = ПФРИсчисленный.Месяц
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОСтавкахЕСНиПФР КАК Ставки
	|			ПО (Ставки.ВидСтавокЕСНиПФР = &парамВидСтавокЕСНиПФР)
	|				И (Ставки.Год = &парамГод)
	|				И Доходы.База > Ставки.СуммаДоходаС
	|				И Доходы.База <= Ставки.СуммаДоходаПо
	|	ГДЕ
	|		Доходы.Месяц = &Месяц3
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Доходы.Месяц) КАК ДоходыНалоги
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыПФР КАК ДоходыПФРВсего
	|		ПО ДоходыНалоги.Месяц = ДоходыПФРВсего.Месяц
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			СУММА(ИсчисленныйНалог.Накопительная) КАК Накопительная,
	|			СУММА(ВЫБОР
	|					КОГДА ИсчисленныйНалог.НомерВозрастнойГруппы = 1
	|						ТОГДА 0
	|					ИНАЧЕ ИсчисленныйНалог.Страховая
	|				КОНЕЦ) КАК Страховая
	|		ИЗ
	|			ВТИсчисленныйНалог КАК ИсчисленныйНалог
	|		ГДЕ
	|			ИсчисленныйНалог.Месяц = &Месяц3) КАК ПФРИсчисленныйВсего
	|		ПО (ИСТИНА)";
	
	НалоговаяБазаПоМладшимФизлицамИПределамТекст = СтрЗаменить(НалоговаяБазаПоМладшимФизлицамИПределамТекст,"ЧИСЛО(15, 3)","ЧИСЛО(15, " + ТочностьЕдиницыИзмерения + ")");
	
	// -------------------------------------------------------------------------------
	// ВЫВОД ДАННЫХ В ОТЧЕТ
	
	СтруктураИтоговыхДанных = Новый Структура("База,БазаОбщСН,Страховая,Накопительная,СтраховаяОбщСН,НакопительнаяОбщСН",0,0,0,0,0,0);
	
	// Раздел 2
	
	// Данные берутся по обособленному подразделению (указанной организации)
	
	УзелРаздел2 = ОпределитьСтрокуВДеревеДанныхДляЗаполнения(ДеревоПоказателей, "Раздел2");
	
	Запрос.Текст = НалоговаяБазаПоМесяцамКварталаТекст;
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Результат = Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	ВывестиРезультатЗапросаВДеревоПоказателей(УзелРаздел2, Результат);
	
	Запрос.Текст = ИсчисленныеНалогиРаздела2Текст;
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Результат = Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	ВывестиРезультатЗапросаВДеревоПоказателей(УзелРаздел2, Результат);
	Если Не Результат.Пустой() Тогда
		ЗаполнитьЗначенияСвойств(СтруктураИтоговыхДанных,Результат.Выгрузить()[0]);
	КонецЕсли;
	
	// Раздел 2.2
	
	УзелРаздел22 = ОпределитьСтрокуВДеревеДанныхДляЗаполнения(ДеревоПоказателей, "Раздел22");
	
	// Данные берутся по обособленному подразделению (указанной организации)
	Запрос.Текст = НалоговаяБазаПоСтаршимФизлицамИПределамТекст;
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Результат = Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	ВывестиРезультатЗапросаВДеревоПоказателей(УзелРаздел22, Результат);
	Если Не Результат.Пустой() Тогда
		ЗаполнитьЗначенияСвойств(СтруктураИтоговыхДанных,Результат.Выгрузить()[0]);
	КонецЕсли;
	
	Запрос.Текст = НалоговаяБазаПоМладшимФизлицамИПределамТекст;
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Результат = Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	ВывестиРезультатЗапросаВДеревоПоказателей(УзелРаздел22, Результат);
	
	// Раздел 2.3
	
	// Заполняется только для головной организации, имеющей обособленные подразделения.
	Если Организация = ГоловнаяОрганизация Тогда
		СписокОбособленныхПодразделенийОрганизации = ОбщегоНазначения.ПолучитьСписокОбособленныхПодразделенийОрганизации(ГоловнаяОрганизация);
		Если СписокОбособленныхПодразделенийОрганизации.Количество() <> 0 Тогда
			
			// РАСЧЕТ ПОКАЗАТЕЛЕЙ РАЗДЕЛА 2.3										  
			
			УзелРаздела = ОпределитьСтрокуВДеревеДанныхДляЗаполнения(ДеревоПоказателей, "Раздел23");
			
			Запрос.УстановитьПараметр("СписокОбособленныхПодразделений", СписокОбособленныхПодразделенийОрганизации);
			
			// База ПФР по обособленным подразделениям организации 
			// НалоговаяБазаПоСпискуОбособленныхПодразделений
			//	База - налоговая база
			//	БазаОбщСН - налоговая база в части доходов не облагаемых ЕНВД  для месяцев на ОСН
			// Описание:
			//  Выбирает базу взновов ПФР 
			
			НалоговаяБазаПоСпискуОбособленныхПодразделений = 
			"ВЫБРАТЬ
			|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ЕСНСведенияОДоходах.Результат - ЕСНСведенияОДоходах.Скидка) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель, 0) КАК База,
			|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
			|					КОГДА ЕСНСведенияОДоходах.ОблагаетсяЕНВД
			|						ТОГДА 0
			|					КОГДА УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ НЕ NULL 
			|						ТОГДА 0
			|					ИНАЧЕ ЕСНСведенияОДоходах.Результат - ЕСНСведенияОДоходах.Скидка
			|				КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель, 0) КАК БазаОбщСН
			|ИЗ
			|	РегистрНакопления.ЕСНСведенияОДоходах КАК ЕСНСведенияОДоходах
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлицаБезНалоговойБазы КАК ФизлицаБезНалоговойБазы
			|		ПО ЕСНСведенияОДоходах.ФизЛицо = ФизлицаБезНалоговойБазы.Физлицо
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОПравеНаПенсию КАК Иностранцы
			|		ПО ЕСНСведенияОДоходах.ФизЛицо = Иностранцы.Физлицо
			|			И (МЕСЯЦ(ЕСНСведенияОДоходах.Период) = Иностранцы.Месяц)
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНалоговыйУчетУСН
			|		ПО (МЕСЯЦ(ЕСНСведенияОДоходах.Период) = УчетнаяПолитикаНалоговыйУчетУСН.Месяц)
			|ГДЕ
			|	ЕСНСведенияОДоходах.Период МЕЖДУ &парамНачалоГода И &парамКонецОтчетногоПериода
			|	И ЕСНСведенияОДоходах.КодДоходаЕСН.ВходитВБазуФедеральныйБюджет
			|	И ЕСНСведенияОДоходах.Организация = &парамГоловнаяОрганизация
			|	И ЕСНСведенияОДоходах.ОбособленноеПодразделение В(&СписокОбособленныхПодразделений)
			|	И ФизлицаБезНалоговойБазы.Физлицо ЕСТЬ NULL 
			|	И Иностранцы.Физлицо ЕСТЬ NULL ";
			Запрос.Текст = СтрЗаменить(НалоговаяБазаПоСпискуОбособленныхПодразделений,"ЧИСЛО(15, 3)","ЧИСЛО(15, " + ТочностьЕдиницыИзмерения + ")");
			#Если Клиент тогда
				ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
			#КонецЕсли
			Попытка
				Выборка = Запрос.Выполнить().Выбрать();
				
			Исключение
				#Если Клиент тогда
					ИнформацияОбОшибке = ИнформацияОбОшибке();
					ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
				#КонецЕсли
				Возврат ПустоеДерево;
			КонецПопытки;
			Если Выборка.Следующий() Тогда
				ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздела, "П000230001003", СтруктураИтоговыхДанных.База + Выборка.База);
				ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздела, "П000230001004", СтруктураИтоговыхДанных.БазаОбщСН + Выборка.БазаОбщСН);
				ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздела, "П000230001103", Выборка.База);
				ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздела, "П000230001104", Выборка.БазаОбщСН);
			КонецЕсли; 
			
			// Исчисленные налоги по обособленным подразделениям организации
			//	Накопительная - начислено на накопительную часть
			//	Страховая - начислено на страховую часть
			//	НакопительнаяОбщСН - начислено на накопительную часть с доходов не облагаемых ЕНВД
			//	СтраховаяОбщСН - начислено на страховую часть с доходов не облагаемых ЕНВД
			
			ЕСНИсчисленныйТекст = 
			"ВЫБРАТЬ
			|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ЕСНИсчисленный.ПФРНакопительная) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель, 0) КАК Накопительная,
			|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ЕСНИсчисленный.ПФРСтраховая) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель, 0) КАК Страховая,
			|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
			|				КОГДА УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ NULL 
			|					ТОГДА ЕСНИсчисленный.ПФРНакопительная - ЕСНИсчисленный.ПФРНакопительнаяЕНВД
			|				ИНАЧЕ 0
			|			КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель, 0) КАК НакопительнаяОбщСН,
			|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
			|				КОГДА УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ NULL 
			|					ТОГДА ЕСНИсчисленный.ПФРСтраховая - ЕСНИсчисленный.ПФРСтраховаяЕНВД
			|				ИНАЧЕ 0
			|			КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель, 0) КАК СтраховаяОбщСН
			|ИЗ
			|	РегистрНакопления.ЕСНИсчисленный КАК ЕСНИсчисленный
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНалоговыйУчетУСН
			|		ПО (МЕСЯЦ(ЕСНИсчисленный.Период) = УчетнаяПолитикаНалоговыйУчетУСН.Месяц)
			|ГДЕ
			|	ЕСНИсчисленный.ОбособленноеПодразделение В(&СписокОбособленныхПодразделений)
			|	И ЕСНИсчисленный.Организация = &парамГоловнаяОрганизация
			|	И ЕСНИсчисленный.Период МЕЖДУ &парамНачалоГода И &парамКонецОтчетногоПериода";
			Запрос.Текст = СтрЗаменить(ЕСНИсчисленныйТекст,"ЧИСЛО(15, 3)","ЧИСЛО(15, " + ТочностьЕдиницыИзмерения + ")");
			
			#Если Клиент тогда
				ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
			#КонецЕсли
			Попытка
				Выборка = Запрос.Выполнить().Выбрать();
			Исключение
				#Если Клиент тогда
					ИнформацияОбОшибке = ИнформацияОбОшибке();
					ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
				#КонецЕсли
				Возврат ПустоеДерево;
			КонецПопытки;
			Если Выборка.Следующий() Тогда
				ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздела, "П000230003003", СтруктураИтоговыхДанных.Страховая + Выборка.Страховая);
				ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздела, "П000230004003", СтруктураИтоговыхДанных.Накопительная + Выборка.Накопительная);
				ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздела, "П000230003004", СтруктураИтоговыхДанных.СтраховаяОбщСН + Выборка.СтраховаяОбщСН);
				ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздела, "П000230004004", СтруктураИтоговыхДанных.НакопительнаяОбщСН + Выборка.НакопительнаяОбщСН);
				ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздела, "П000230003103", Выборка.Страховая);
				ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздела, "П000230004103", Выборка.Накопительная);
				ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздела, "П000230003104", Выборка.СтраховаяОбщСН);
				ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздела, "П000230004104", Выборка.НакопительнаяОбщСН);
			КонецЕсли;
		КонецЕсли; 
	КонецЕсли;
	
	Возврат ДеревоПоказателей;
	
КонецФункции // ЗначенияПоказателей_АвансыПФР_2005Кв1()


// Возвращает значения показателей отчета Декларация по взносам в ПФР 
// для формы образца 2006 года, вычисленные по данным ИБ
//
// Параметры:
//  ПараметрыОтчета - структура, содержащая значения ключевых реквизитов заполняемого отчета. 
//		Структура содержит, как минимум, следующее:
//			Организация, тип СправочникСсылка.Организации
//			ДатаНачалаПериода, тип Дата
//			ДатаОкончанияПериода, тип Дата
//			ДатаПодписи, тип Дата
//			Периодичность, тип ПеречислениеСсылка.Периодичность
//
// Возвращаемое значение:
//	ДеревоЗначений с колонками «Имя" и «Значение"
//
Функция ЗначенияПоказателей_ДекларацияПФР_2006(ПараметрыОтчета)
	
	ДеревоПоказателей = Новый ДеревоЗначений;
	ДеревоПоказателей.Колонки.Добавить("Имя");
	ДеревоПоказателей.Колонки.Добавить("Значение");
	
	ПустоеДерево = ДеревоПоказателей.Скопировать();
	
	ДатаКонцаПериодаОтчета = ПараметрыОтчета.ДатаОкончанияПериода;
	Организация = ПараметрыОтчета.Организация;
	ТочностьЕдиницыИзмерения = 2;
	Если ПараметрыОтчета.Свойство("ТочностьЕдиницыИзмерения",ТочностьЕдиницыИзмерения) = Неопределено Тогда
		ТочностьЕдиницыИзмерения = 2;
	КонецЕсли;
	ЕдиницаИзмерения = Перечисления.ПорядкиОкругленияОтчетности.ПустаяСсылка();
	Если ПараметрыОтчета.Свойство("ЕдиницаИзмерения",ЕдиницаИзмерения) = Неопределено Тогда
		ЕдиницаИзмерения = Перечисления.ПорядкиОкругленияОтчетности.ПустаяСсылка();
	КонецЕсли;
	Делитель = ПреобразоватьЕдиницуИзмеренияВЧисло(ЕдиницаИзмерения);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("парамОрганизация", Организация);
	Запрос.УстановитьПараметр("парамВидСтавокЕСНиПФР", Организация.ВидСтавокЕСНиПФР);
	Запрос.УстановитьПараметр("парамНачалоГода", НачалоГода(ДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("парамГод", Год(ДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("парамКонецОтчетногоПериода", КонецДня(ДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("Месяц1", Месяц(ДатаКонцаПериодаОтчета) - 2);
	Запрос.УстановитьПараметр("Месяц2", Месяц(ДатаКонцаПериодаОтчета) - 1);
	Запрос.УстановитьПараметр("Месяц3", Месяц(ДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("Делитель", Делитель);
	Запрос.УстановитьПараметр("СписокОбособленныхПодразделений", Организация);
	ГоловнаяОрганизация = ОбщегоНазначения.ГоловнаяОрганизация(Организация);
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация", ГоловнаяОрганизация);
	
	
	// ----------------------------------------------------------------------------------
	// ТЕКСТЫ ЗАПРОСОВ
	
	// Сформируем текст запроса выборки месяцев налогового периода
	// конец месяца налогового периода
	КонецМесяца = КонецМесяца(НачалоГода(ДатаКонцаПериодаОтчета));
	// первый месяц
	ПериодыТекст = "ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ") КАК Период ПОМЕСТИТЬ ВТПериоды";
	// прибавим остальные месяцы
	Для Сч = 2 По Месяц(ДатаКонцаПериодаОтчета) Цикл
		КонецМесяца = КонецМесяца(КонецМесяца+1);
		ПериодыТекст = ПериодыТекст +" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ")";
	КонецЦикла;
	Запрос.Текст = ПериодыТекст;
	МассивЗапросов = Новый Массив;
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Запрос.Выполнить();
	
	// Сформируем текст запроса выборки месяцев налогового периода
	МесяцыНПТекст = "ВЫБРАТЬ 1 КАК МЕСЯЦ ПОМЕСТИТЬ ВТМесяцыНП";
	Для Сч = 2 По 12 Цикл
		МесяцыНПТекст = МесяцыНПТекст +" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ " + Сч;
	КонецЦикла;
	
	Запрос.Текст = МесяцыНПТекст;
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Запрос.Выполнить();
	
	
	// ДанныеОПравеНаПенсию
	// Таблица Данные о праве на пенсию: - список иностранцев и периодов
	// Поля:
	//		Физлицо, 
	//		Месяц - месяц налогового периода
	// 
	// Описание:
	//	Выбираем из списка периодов (Периоды)
	//	Внутреннее соединение с "псевдо" ГражданствоФизЛиц.СрезПоследних
	//  по равенству периодов
	//  условие: что физлицо - не имеет права на пенсию
	//
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЕСНСведенияОДоходах.ФизЛицо КАК ФизЛицо
	|ПОМЕСТИТЬ ЕСНФизлицаОрганизации
	|ИЗ
	|	РегистрНакопления.ЕСНСведенияОДоходах КАК ЕСНСведенияОДоходах
	|ГДЕ
	|	ЕСНСведенияОДоходах.Период МЕЖДУ &парамНачалоГода И &парамКонецОтчетногоПериода
	|	И ЕСНСведенияОДоходах.Организация = &парамГоловнаяОрганизация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МЕСЯЦ(Периоды.Период) КАК Месяц,
	|	ГражданствоФизЛиц.ФизЛицо КАК Физлицо
	|ПОМЕСТИТЬ ВТДанныеОПравеНаПенсию
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период КАК Период,
	|		ГражданствоФизЛиц.ФизЛицо КАК Физлицо,
	|		МАКСИМУМ(ГражданствоФизЛиц.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВТПериоды КАК Периоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|			ПО Периоды.Период >= ГражданствоФизЛиц.Период
	|	ГДЕ
	|		ГражданствоФизЛиц.ФизЛицо В
	|				(ВЫБРАТЬ
	|					ЕСНФизлицаОрганизации.ФизЛицо
	|				ИЗ
	|					ЕСНФизлицаОрганизации КАК ЕСНФизлицаОрганизации)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ГражданствоФизЛиц.ФизЛицо,
	|		Периоды.Период) КАК Периоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|		ПО Периоды.ПериодРегистра = ГражданствоФизЛиц.Период
	|			И Периоды.Физлицо = ГражданствоФизЛиц.ФизЛицо
	|			И (ГражданствоФизЛиц.НеИмеетПравоНаПенсию)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Месяц,
	|	Физлицо";
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	
	// УчетнаяПолитикаНалоговыйУчет
	// Таблица ВТУчетнаяПолитикаНалоговыйУчет - это список периодов, когда организация переходила на УСН
	
	Запрос.Текст = ЗаполнениеРегламентированнойОтчетностиПереопределяемый.ТекстЗапросаУСН();
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСНСведенияОДоходах.ФизЛицо КАК ФизЛицо
	|ПОМЕСТИТЬ ВТФизлицаБезНалоговойБазы
	|ИЗ
	|	РегистрНакопления.ЕСНСведенияОДоходах КАК ЕСНСведенияОДоходах
	|ГДЕ
	|	ЕСНСведенияОДоходах.Период МЕЖДУ &парамНачалоГода И &парамКонецОтчетногоПериода
	|	И ЕСНСведенияОДоходах.Организация = &парамГоловнаяОрганизация
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСНСведенияОДоходах.ФизЛицо
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВЫБОР
	|			КОГДА ЕСНСведенияОДоходах.КодДоходаЕСН.ВходитВБазуФедеральныйБюджет
	|				ТОГДА ЕСНСведенияОДоходах.Результат - ЕСНСведенияОДоходах.Скидка
	|			ИНАЧЕ 0
	|		КОНЕЦ) < 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	
	// НалоговаяБазаПоФизлицамПоМесяцам
	//	ФизЛицо	- физическое лицо 
	//	Месяц	- месяц налогового периода 
	//	База - налоговая база
	//	БазаОбщСН - налоговая база в части видов деятельности, не облагаемых ЕНВД
	//  НомерВозрастнойГруппы - номер возрастной группы: 
	//		1 - лица по 1966 г.р.
	//		2 - лица моложе 1966 г.р.
	// Описание:
	//  Выбирает базу взновов ПФР 
	// данные собираются нарастающим итогом для каждого месяца налогового периода в разрезе физлиц	 
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСНСведенияОДоходах.ФизЛицо КАК ФизЛицо,
	|	ВЫБОР
	|		КОГДА ГОД(ЕСНСведенияОДоходах.ФизЛицо.ДатаРождения) < 1967
	|			ТОГДА 1
	|		ИНАЧЕ 2
	|	КОНЕЦ КАК НомерВозрастнойГруппы,
	|	МесяцыНП.Месяц КАК Месяц,
	|	ЕСТЬNULL(СУММА(ЕСНСведенияОДоходах.Результат - ЕСНСведенияОДоходах.Скидка), 0) КАК База,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА ЕСНСведенияОДоходах.ОблагаетсяЕНВД
	|					ТОГДА 0
	|				КОГДА УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ НЕ NULL 
	|					ТОГДА 0
	|				ИНАЧЕ ЕСНСведенияОДоходах.Результат - ЕСНСведенияОДоходах.Скидка
	|			КОНЕЦ), 0) КАК БазаОбщСН
	|ПОМЕСТИТЬ ВТНалоговаяБазаПоФизлицамПоМесяцамНарастающимИтогом
	|ИЗ
	|	ВТМесяцыНП КАК МесяцыНП
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЕСНСведенияОДоходах КАК ЕСНСведенияОДоходах
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлицаБезНалоговойБазы КАК ФизлицаБезНалоговойБазы
	|			ПО ЕСНСведенияОДоходах.ФизЛицо = ФизлицаБезНалоговойБазы.Физлицо
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОПравеНаПенсию КАК Иностранцы
	|			ПО ЕСНСведенияОДоходах.ФизЛицо = Иностранцы.Физлицо
	|				И (МЕСЯЦ(ЕСНСведенияОДоходах.Период) = Иностранцы.Месяц)
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТУчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНалоговыйУчетУСН
	|			ПО (МЕСЯЦ(ЕСНСведенияОДоходах.Период) = УчетнаяПолитикаНалоговыйУчетУСН.Месяц)
	|		ПО (МесяцыНП.Месяц >= МЕСЯЦ(ЕСНСведенияОДоходах.Период))
	|ГДЕ
	|	ЕСНСведенияОДоходах.Период МЕЖДУ &парамНачалоГода И &парамКонецОтчетногоПериода
	|	И ЕСНСведенияОДоходах.КодДоходаЕСН.ВходитВБазуФедеральныйБюджет
	|	И ЕСНСведенияОДоходах.Организация = &парамГоловнаяОрганизация
	|	И ЕСНСведенияОДоходах.ОбособленноеПодразделение В(&СписокОбособленныхПодразделений)
	|	И ФизлицаБезНалоговойБазы.Физлицо ЕСТЬ NULL 
	|	И Иностранцы.Физлицо ЕСТЬ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСНСведенияОДоходах.ФизЛицо,
	|	МесяцыНП.Месяц,
	|	ВЫБОР
	|		КОГДА ГОД(ЕСНСведенияОДоходах.ФизЛицо.ДатаРождения) < 1967
	|			ТОГДА 1
	|		ИНАЧЕ 2
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Месяц,
	|	ФизЛицо";
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	
	ДоходыНарастающимИтогомТекст = 
	"ВЫБРАТЬ
	|	МесяцыНП.Месяц КАК Месяц,
	|	ЕСТЬNULL(ДоходыЕСН.База, 0) КАК База,
	|	ЕСТЬNULL(ДоходыЕСН.БазаОбщСН, 0) КАК БазаОбщСН,
	|	ЕСТЬNULL(ДоходыПФР.База, 0) КАК База1,
	|	ЕСТЬNULL(ДоходыПФР.БазаОбщСН, 0) КАК БазаОбщСН1,
	|	ЕСТЬNULL(ДоходыЕСН.База, 0) - ЕСТЬNULL(ДоходыПФР.База, 0) КАК База2,
	|	ЕСТЬNULL(ДоходыЕСН.БазаОбщСН, 0) - ЕСТЬNULL(ДоходыПФР.БазаОбщСН, 0) КАК БазаОбщСН2
	|ПОМЕСТИТЬ ВТДоходыПФР
	|ИЗ
	|	ВТМесяцыНП КАК МесяцыНП
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ДоходыПФР.Месяц КАК Месяц,
	|			(ВЫРАЗИТЬ(СУММА(ДоходыПФР.База) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК База,
	|			(ВЫРАЗИТЬ(СУММА(ДоходыПФР.БазаОбщСН) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК БазаОбщСН
	|		ИЗ
	|			ВТНалоговаяБазаПоФизлицамПоМесяцамНарастающимИтогом КАК ДоходыПФР
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ДоходыПФР.Месяц) КАК ДоходыЕСН
	|		ПО МесяцыНП.Месяц = ДоходыЕСН.Месяц
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ДоходыПФР.Месяц КАК Месяц,
	|			(ВЫРАЗИТЬ(СУММА(ДоходыПФР.База) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК База,
	|			(ВЫРАЗИТЬ(СУММА(ДоходыПФР.БазаОбщСН) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК БазаОбщСН
	|		ИЗ
	|			ВТНалоговаяБазаПоФизлицамПоМесяцамНарастающимИтогом КАК ДоходыПФР
	|		ГДЕ
	|			ДоходыПФР.НомерВозрастнойГруппы = 1
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ДоходыПФР.Месяц) КАК ДоходыПФР
	|		ПО МесяцыНП.Месяц = ДоходыПФР.Месяц
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Месяц";
	Запрос.Текст  = СтрЗаменить(ДоходыНарастающимИтогомТекст,"ЧИСЛО(15, 3)","ЧИСЛО(15, " + ТочностьЕдиницыИзмерения + ")");
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	
	
	// РАСЧЕТ ПОКАЗАТЕЛЕЙ РАЗДЕЛА 2										  
	
	//НалоговаяБазаПоМесяцамОтчетногоПериода
	// поля запроса соответствуют номерам ячеек отчета
	// Описание:
	//  Выполняет расчет налоговой базы по месяцам отчетного периода для раздела 2 
	
	НалоговаяБазаПоМесяцамКварталаТекст = 
	"ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА БазаПФР.Месяц = &Месяц1
	|				ТОГДА БазаПФР.База1 - ЕСТЬNULL(БазаПФРПредМесяца.База1, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020012003,
	|	СУММА(ВЫБОР
	|			КОГДА БазаПФР.Месяц = &Месяц1
	|				ТОГДА БазаПФР.База2 - ЕСТЬNULL(БазаПФРПредМесяца.База2, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020012004,
	|	СУММА(ВЫБОР
	|			КОГДА БазаПФР.Месяц = &Месяц1
	|				ТОГДА БазаПФР.БазаОбщСН - ЕСТЬNULL(БазаПФРПредМесяца.БазаОбщСН, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020012006,
	|	СУММА(ВЫБОР
	|			КОГДА БазаПФР.Месяц = &Месяц2
	|				ТОГДА БазаПФР.База1 - ЕСТЬNULL(БазаПФРПредМесяца.База1, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020013003,
	|	СУММА(ВЫБОР
	|			КОГДА БазаПФР.Месяц = &Месяц2
	|				ТОГДА БазаПФР.База2 - ЕСТЬNULL(БазаПФРПредМесяца.База2, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020013004,
	|	СУММА(ВЫБОР
	|			КОГДА БазаПФР.Месяц = &Месяц2
	|				ТОГДА БазаПФР.БазаОбщСН - ЕСТЬNULL(БазаПФРПредМесяца.БазаОбщСН, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020013006,
	|	СУММА(ВЫБОР
	|			КОГДА БазаПФР.Месяц = &Месяц3
	|				ТОГДА БазаПФР.База1 - ЕСТЬNULL(БазаПФРПредМесяца.База1, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020014003,
	|	СУММА(ВЫБОР
	|			КОГДА БазаПФР.Месяц = &Месяц3
	|				ТОГДА БазаПФР.База2 - ЕСТЬNULL(БазаПФРПредМесяца.База2, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020014004,
	|	СУММА(ВЫБОР
	|			КОГДА БазаПФР.Месяц = &Месяц3
	|				ТОГДА БазаПФР.БазаОбщСН - ЕСТЬNULL(БазаПФРПредМесяца.БазаОбщСН, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020014006
	|ИЗ
	|	ВТМесяцыНП КАК МесяцыНП
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыПФР КАК БазаПФР
	|		ПО МесяцыНП.Месяц = БазаПФР.Месяц
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыПФР КАК БазаПФРПредМесяца
	|		ПО (МесяцыНП.Месяц - 1 = БазаПФРПредМесяца.Месяц)";
	
	// ИсчисленныйНалог
	//	Месяц	- месяц налогового периода 
	//  НомерВозрастнойГруппы - номер возрастной группы физлица
	//		1 - лица по 1966 г.р.
	//		2 - лица моложе 1966 г.р.
	//	Накопительная - начислено на накопительную часть
	//	Страховая - начислено на страховую часть
	//	НакопительнаяОбщСН - начислено на накопительную часть по видам деятельности, не облагаемым ЕНВД
	//	СтраховаяОбщСН - начислено на страховую часть с доходов не облагаемых ЕНВД
	// данные собираются нарастающим итогом для каждого месяца налогового периода сводно	 
	
	НалогиНарастающимИтогомТекст = 
	"ВЫБРАТЬ
	|	МесяцыНП.Месяц КАК Месяц,
	|	ВЫБОР
	|		КОГДА ГОД(ИсчисленныйНалог.ФизЛицо.ДатаРождения) < 1967
	|			ТОГДА 1
	|		ИНАЧЕ 2
	|	КОНЕЦ КАК НомерВозрастнойГруппы,
	|	(ВЫРАЗИТЬ(СУММА(ИсчисленныйНалог.ПФРНакопительная) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК Накопительная,
	|	(ВЫРАЗИТЬ(СУММА(ИсчисленныйНалог.ПФРСтраховая) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК Страховая,
	|	(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ NULL 
	|					ТОГДА ИсчисленныйНалог.ПФРНакопительная - ИсчисленныйНалог.ПФРНакопительнаяЕНВД
	|				ИНАЧЕ 0
	|			КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК НакопительнаяОбщСН,
	|	(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ NULL 
	|					ТОГДА ИсчисленныйНалог.ПФРСтраховая - ИсчисленныйНалог.ПФРСтраховаяЕНВД
	|				ИНАЧЕ 0
	|			КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК СтраховаяОбщСН
	|ПОМЕСТИТЬ ВТИсчисленныйНалог
	|ИЗ
	|	ВТМесяцыНП КАК МесяцыНП
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЕСНИсчисленный КАК ИсчисленныйНалог
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТУчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНалоговыйУчетУСН
	|			ПО (МЕСЯЦ(ИсчисленныйНалог.Период) = УчетнаяПолитикаНалоговыйУчетУСН.Месяц)
	|		ПО (МесяцыНП.Месяц >= МЕСЯЦ(ИсчисленныйНалог.Период))
	|ГДЕ
	|	ИсчисленныйНалог.Период МЕЖДУ &парамНачалоГода И &парамКонецОтчетногоПериода
	|	И ИсчисленныйНалог.Организация = &парамГоловнаяОрганизация
	|	И ИсчисленныйНалог.ОбособленноеПодразделение В(&СписокОбособленныхПодразделений)
	|
	|СГРУППИРОВАТЬ ПО
	|	МесяцыНП.Месяц,
	|	ВЫБОР
	|		КОГДА ГОД(ИсчисленныйНалог.ФизЛицо.ДатаРождения) < 1967
	|			ТОГДА 1
	|		ИНАЧЕ 2
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Месяц,
	|	НомерВозрастнойГруппы";
	Запрос.Текст  = СтрЗаменить(НалогиНарастающимИтогомТекст,"ЧИСЛО(15, 3)","ЧИСЛО(15, " + ТочностьЕдиницыИзмерения + ")");
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	
	//ИсчисленныеНалогиРаздела2
	// поля запроса соответствуют номерам ячеек отчета
	// Описание:
	//  Выполняет расчет показателей раздела 2, содержащих информацию об исчисленных налогах 
	// используемые таблицы содержат уже округленные суммы
	
	ИсчисленныеНалогиРаздела2Текст = 
	"ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц3
	|				ТОГДА ИсчисленныйЕСН.СтраховаяОбщСН
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СтраховаяОбщСН,
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц3
	|				ТОГДА ИсчисленныйЕСН.Страховая
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Страховая,
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц3
	|				ТОГДА ИсчисленныйЕСН.НакопительнаяОбщСН
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НакопительнаяОбщСН,
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц3
	|				ТОГДА ИсчисленныйЕСН.Накопительная
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Накопительная,
	// Страховая часть 
	// строка 0300 - исчисленный налог с начала года
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц3
	|					И ИсчисленныйЕСН.НомерВозрастнойГруппы = 1
	|				ТОГДА ИсчисленныйЕСН.Страховая
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020030003,
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц3
	|					И ИсчисленныйЕСН.НомерВозрастнойГруппы = 2
	|				ТОГДА ИсчисленныйЕСН.Страховая
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020030004,
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц3
	|				ТОГДА ИсчисленныйЕСН.Страховая
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020030005,
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц3
	|				ТОГДА ИсчисленныйЕСН.СтраховаяОбщСН
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020030006,
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц1
	|					И ИсчисленныйЕСН.НомерВозрастнойГруппы = 1
	|				ТОГДА ИсчисленныйЕСН.Страховая - ЕСТЬNULL(ИсчисленныйЕСНПредМесяца.Страховая, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020032003,
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц1
	|					И ИсчисленныйЕСН.НомерВозрастнойГруппы = 2
	|				ТОГДА ИсчисленныйЕСН.Страховая - ЕСТЬNULL(ИсчисленныйЕСНПредМесяца.Страховая, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020032004,
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц1
	|				ТОГДА ИсчисленныйЕСН.Страховая - ЕСТЬNULL(ИсчисленныйЕСНПредМесяца.Страховая, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020032005,
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц1
	|				ТОГДА ИсчисленныйЕСН.СтраховаяОбщСН - ЕСТЬNULL(ИсчисленныйЕСНПредМесяца.СтраховаяОбщСН, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020032006,
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц2
	|					И ИсчисленныйЕСН.НомерВозрастнойГруппы = 1
	|				ТОГДА ИсчисленныйЕСН.Страховая - ЕСТЬNULL(ИсчисленныйЕСНПредМесяца.Страховая, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020033003,
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц2
	|					И ИсчисленныйЕСН.НомерВозрастнойГруппы = 2
	|				ТОГДА ИсчисленныйЕСН.Страховая - ЕСТЬNULL(ИсчисленныйЕСНПредМесяца.Страховая, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020033004,
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц2
	|				ТОГДА ИсчисленныйЕСН.Страховая - ЕСТЬNULL(ИсчисленныйЕСНПредМесяца.Страховая, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020033005,
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц2
	|				ТОГДА ИсчисленныйЕСН.СтраховаяОбщСН - ЕСТЬNULL(ИсчисленныйЕСНПредМесяца.СтраховаяОбщСН, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020033006,
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц3
	|					И ИсчисленныйЕСН.НомерВозрастнойГруппы = 1
	|				ТОГДА ИсчисленныйЕСН.Страховая - ЕСТЬNULL(ИсчисленныйЕСНПредМесяца.Страховая, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020034003,
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц3
	|					И ИсчисленныйЕСН.НомерВозрастнойГруппы = 2
	|				ТОГДА ИсчисленныйЕСН.Страховая - ЕСТЬNULL(ИсчисленныйЕСНПредМесяца.Страховая, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020034004,
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц3
	|				ТОГДА ИсчисленныйЕСН.Страховая - ЕСТЬNULL(ИсчисленныйЕСНПредМесяца.Страховая, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020034005,
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц3
	|				ТОГДА ИсчисленныйЕСН.СтраховаяОбщСН - ЕСТЬNULL(ИсчисленныйЕСНПредМесяца.СтраховаяОбщСН, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020034006,
	// Накопительная часть 
	// строка 0400 - исчисленный налог с начала года
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц3
	|				ТОГДА ИсчисленныйЕСН.Накопительная
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020040004,
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц3
	|				ТОГДА ИсчисленныйЕСН.Накопительная
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020040005,
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц3
	|				ТОГДА ИсчисленныйЕСН.НакопительнаяОбщСН
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020040006,
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц1
	|				ТОГДА ИсчисленныйЕСН.Накопительная - ЕСТЬNULL(ИсчисленныйЕСНПредМесяца.Накопительная, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020042004,
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц1
	|				ТОГДА ИсчисленныйЕСН.Накопительная - ЕСТЬNULL(ИсчисленныйЕСНПредМесяца.Накопительная, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020042005,
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц1
	|				ТОГДА ИсчисленныйЕСН.НакопительнаяОбщСН - ЕСТЬNULL(ИсчисленныйЕСНПредМесяца.НакопительнаяОбщСН, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020042006,
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц2
	|				ТОГДА ИсчисленныйЕСН.Накопительная - ЕСТЬNULL(ИсчисленныйЕСНПредМесяца.Накопительная, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020043004,
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц2
	|				ТОГДА ИсчисленныйЕСН.Накопительная - ЕСТЬNULL(ИсчисленныйЕСНПредМесяца.Накопительная, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020043005,
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц2
	|				ТОГДА ИсчисленныйЕСН.НакопительнаяОбщСН - ЕСТЬNULL(ИсчисленныйЕСНПредМесяца.НакопительнаяОбщСН, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020043006,
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц3
	|				ТОГДА ИсчисленныйЕСН.Накопительная - ЕСТЬNULL(ИсчисленныйЕСНПредМесяца.Накопительная, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020044004,
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц3
	|				ТОГДА ИсчисленныйЕСН.Накопительная - ЕСТЬNULL(ИсчисленныйЕСНПредМесяца.Накопительная, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020044005,
	|	СУММА(ВЫБОР
	|			КОГДА ИсчисленныйЕСН.Месяц = &Месяц3
	|				ТОГДА ИсчисленныйЕСН.НакопительнаяОбщСН - ЕСТЬNULL(ИсчисленныйЕСНПредМесяца.НакопительнаяОбщСН, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020044006
	|ИЗ
	|	ВТМесяцыНП КАК МесяцыНП
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсчисленныйНалог КАК ИсчисленныйЕСН
	|		ПО МесяцыНП.Месяц = ИсчисленныйЕСН.Месяц
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсчисленныйНалог КАК ИсчисленныйЕСНПредМесяца
	|		ПО (МесяцыНП.Месяц - 1 = ИсчисленныйЕСНПредМесяца.Месяц)
	|			И (ИсчисленныйЕСН.НомерВозрастнойГруппы = ИсчисленныйЕСНПредМесяца.НомерВозрастнойГруппы)";
	
	// РАСЧЕТ ПОКАЗАТЕЛЕЙ РАЗДЕЛА 2.2
	
	// НалоговаяБазаПоСтаршимФизлицамИПределам и НалоговаяБазаПоМладшимФизлицамИПределам
	// Описание:
	//  Выполняют расчет показателей раздела 2.2
	// В выборке ДоходыНалоги распределяем данные физлиц по строкам раздела, суммируем и округляем  
	// затем во избежание ошибок округления вычисляем показатели первой строки как разность
	// итоговой строки и всех остальных строк раздела
	
	НалоговаяБазаПоСтаршимФизлицамИПределамТекст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ДоходыПФРВсего.База, 0) КАК База,
	|	ЕСТЬNULL(ДоходыПФРВсего.БазаОбщСН, 0) КАК БазаОбщСН,
	|	ЕСТЬNULL(ДоходыПФРВсего.База1, 0) - ДоходыНалоги.П000220021004 - ДоходыНалоги.П000220022004 - ДоходыНалоги.П000220030004 КАК П000220010004,
	|	ЕСТЬNULL(ДоходыПФРВсего.БазаОбщСН1, 0) - ДоходыНалоги.П000220021005 - ДоходыНалоги.П000220022005 - ДоходыНалоги.П000220030005 КАК П000220010005,
	|	ДоходыНалоги.П000220010006,
	|	ДоходыНалоги.П000220010007,
	|	ДоходыНалоги.П000220021004,
	|	ДоходыНалоги.П000220021005,
	|	ДоходыНалоги.П000220021006,
	|	ДоходыНалоги.П000220021007,
	|	ДоходыНалоги.П000220022004,
	|	ДоходыНалоги.П000220022005,
	|	ДоходыНалоги.П000220030004,
	|	ДоходыНалоги.П000220030005,
	|	ДоходыНалоги.П000220030006,
	|	ДоходыНалоги.П000220030007
	|ИЗ
	|	(ВЫБРАТЬ
	|		СУММА(ВЫБОР
	|				КОГДА Ставки.НомерСтрокиСтавок = 1
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК П000220010006,
	|		СУММА(ВЫБОР
	|				КОГДА Ставки.НомерСтрокиСтавок = 1
	|						И Доходы.БазаОбщСН <> 0
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК П000220010007,
	|		(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Ставки.НомерСтрокиСтавок = 2
	|						ТОГДА Ставки.СуммаДоходаС
	|					ИНАЧЕ 0
	|				КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК П000220021004,
	|		(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Ставки.НомерСтрокиСтавок = 2
	|						ТОГДА Доходы.БазаОбщСН * Ставки.СуммаДоходаС / Доходы.База
	|					ИНАЧЕ 0
	|				КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК П000220021005,
	|		СУММА(ВЫБОР
	|				КОГДА Ставки.НомерСтрокиСтавок = 2
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК П000220021006,
	|		СУММА(ВЫБОР
	|				КОГДА Ставки.НомерСтрокиСтавок = 2
	|						И Доходы.БазаОбщСН <> 0
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК П000220021007,
	|		(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Ставки.НомерСтрокиСтавок = 2
	|						ТОГДА Доходы.База - Ставки.СуммаДоходаС
	|					ИНАЧЕ 0
	|				КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК П000220022004,
	|		(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Ставки.НомерСтрокиСтавок = 2
	|						ТОГДА Доходы.БазаОбщСН * (Доходы.База - Ставки.СуммаДоходаС) / Доходы.База
	|					ИНАЧЕ 0
	|				КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК П000220022005,
	|		(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Ставки.НомерСтрокиСтавок = 3
	|						ТОГДА Доходы.База
	|					ИНАЧЕ 0
	|				КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК П000220030004,
	|		(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Ставки.НомерСтрокиСтавок = 3
	|						ТОГДА Доходы.БазаОбщСН
	|					ИНАЧЕ 0
	|				КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК П000220030005,
	|		СУММА(ВЫБОР
	|				КОГДА Ставки.НомерСтрокиСтавок = 3
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК П000220030006,
	|		СУММА(ВЫБОР
	|				КОГДА Ставки.НомерСтрокиСтавок = 3
	|						И Доходы.БазаОбщСН <> 0
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК П000220030007
	|	ИЗ
	|		ВТНалоговаяБазаПоФизлицамПоМесяцамНарастающимИтогом КАК Доходы
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОСтавкахЕСНиПФР КАК Ставки
	|			ПО (Ставки.ВидСтавокЕСНиПФР = &парамВидСтавокЕСНиПФР)
	|				И (Ставки.Год = &парамГод)
	|				И Доходы.База > Ставки.СуммаДоходаС
	|				И Доходы.База <= Ставки.СуммаДоходаПо
	|	ГДЕ
	|		Доходы.Месяц = &Месяц3
	|		И Доходы.НомерВозрастнойГруппы = 1) КАК ДоходыНалоги
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыПФР КАК ДоходыПФРВсего
	|		ПО (ДоходыПФРВсего.Месяц = &Месяц3)";
	НалоговаяБазаПоСтаршимФизлицамИПределамТекст = СтрЗаменить(НалоговаяБазаПоСтаршимФизлицамИПределамТекст,"ЧИСЛО(15, 3)","ЧИСЛО(15, " + ТочностьЕдиницыИзмерения + ")");
	
	НалоговаяБазаПоМладшимФизлицамИПределамТекст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ДоходыПФРВсего.База, 0) КАК База,
	|	ЕСТЬNULL(ДоходыПФРВсего.БазаОбщСН, 0) КАК БазаОбщСН,
	|	ЕСТЬNULL(ДоходыПФРВсего.База2, 0) - ДоходыНалоги.П000220021104 - ДоходыНалоги.П000220022104 - ДоходыНалоги.П000220030104 КАК П000220010104,
	|	ЕСТЬNULL(ДоходыПФРВсего.БазаОбщСН2, 0) - ДоходыНалоги.П000220021105 - ДоходыНалоги.П000220022105 - ДоходыНалоги.П000220030105 КАК П000220010105,
	|	ДоходыНалоги.П000220010106,
	|	ДоходыНалоги.П000220010107,
	|	ДоходыНалоги.П000220021104,
	|	ДоходыНалоги.П000220021105,
	|	ДоходыНалоги.П000220021106,
	|	ДоходыНалоги.П000220021107,
	|	ДоходыНалоги.П000220022104,
	|	ДоходыНалоги.П000220022105,
	|	ДоходыНалоги.П000220030104,
	|	ДоходыНалоги.П000220030105,
	|	ДоходыНалоги.П000220030106,
	|	ДоходыНалоги.П000220030107
	|ИЗ
	|	(ВЫБРАТЬ
	|		СУММА(ВЫБОР
	|				КОГДА Ставки.НомерСтрокиСтавок = 1
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК П000220010106,
	|		СУММА(ВЫБОР
	|				КОГДА Ставки.НомерСтрокиСтавок = 1
	|						И Доходы.БазаОбщСН <> 0
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК П000220010107,
	|		(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Ставки.НомерСтрокиСтавок = 2
	|						ТОГДА Ставки.СуммаДоходаС
	|					ИНАЧЕ 0
	|				КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК П000220021104,
	|		(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Ставки.НомерСтрокиСтавок = 2
	|						ТОГДА Доходы.БазаОбщСН * Ставки.СуммаДоходаС / Доходы.База
	|					ИНАЧЕ 0
	|				КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК П000220021105,
	|		СУММА(ВЫБОР
	|				КОГДА Ставки.НомерСтрокиСтавок = 2
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК П000220021106,
	|		СУММА(ВЫБОР
	|				КОГДА Ставки.НомерСтрокиСтавок = 2
	|						И Доходы.БазаОбщСН <> 0
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК П000220021107,
	|		(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Ставки.НомерСтрокиСтавок = 2
	|						ТОГДА Доходы.База - Ставки.СуммаДоходаС
	|					ИНАЧЕ 0
	|				КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК П000220022104,
	|		(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Ставки.НомерСтрокиСтавок = 2
	|						ТОГДА Доходы.БазаОбщСН * (Доходы.База - Ставки.СуммаДоходаС) / Доходы.База
	|					ИНАЧЕ 0
	|				КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК П000220022105,
	|		(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Ставки.НомерСтрокиСтавок = 3
	|						ТОГДА Доходы.База
	|					ИНАЧЕ 0
	|				КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК П000220030104,
	|		(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|					КОГДА Ставки.НомерСтрокиСтавок = 3
	|						ТОГДА Доходы.БазаОбщСН
	|					ИНАЧЕ 0
	|				КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель КАК П000220030105,
	|		СУММА(ВЫБОР
	|				КОГДА Ставки.НомерСтрокиСтавок = 3
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК П000220030106,
	|		СУММА(ВЫБОР
	|				КОГДА Ставки.НомерСтрокиСтавок = 3
	|						И Доходы.БазаОбщСН <> 0
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК П000220030107
	|	ИЗ
	|		ВТНалоговаяБазаПоФизлицамПоМесяцамНарастающимИтогом КАК Доходы
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОСтавкахЕСНиПФР КАК Ставки
	|			ПО (Ставки.ВидСтавокЕСНиПФР = &парамВидСтавокЕСНиПФР)
	|				И (Ставки.Год = &парамГод)
	|				И Доходы.База > Ставки.СуммаДоходаС
	|				И Доходы.База <= Ставки.СуммаДоходаПо
	|	ГДЕ
	|		Доходы.Месяц = &Месяц3
	|		И Доходы.НомерВозрастнойГруппы = 2) КАК ДоходыНалоги
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыПФР КАК ДоходыПФРВсего
	|		ПО (ДоходыПФРВсего.Месяц = &Месяц3)";
	
	НалоговаяБазаПоМладшимФизлицамИПределамТекст = СтрЗаменить(НалоговаяБазаПоМладшимФизлицамИПределамТекст,"ЧИСЛО(15, 3)","ЧИСЛО(15, " + ТочностьЕдиницыИзмерения + ")");
	
	// -------------------------------------------------------------------------------
	// ВЫВОД ДАННЫХ В ОТЧЕТ
	
	СтруктураИтоговыхДанных = Новый Структура("База,БазаОбщСН,Страховая,Накопительная,СтраховаяОбщСН,НакопительнаяОбщСН",0,0,0,0,0,0);
	
	// Раздел 2
	
	// Данные берутся по обособленному подразделению (указанной организации)
	
	УзелРаздел2 = ОпределитьСтрокуВДеревеДанныхДляЗаполнения(ДеревоПоказателей, "Раздел2");
	
	Запрос.Текст = НалоговаяБазаПоМесяцамКварталаТекст;
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Результат = Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	
	ВывестиРезультатЗапросаВДеревоПоказателей(УзелРаздел2, Результат);
	
	Запрос.Текст = ИсчисленныеНалогиРаздела2Текст;
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Результат = Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	ВывестиРезультатЗапросаВДеревоПоказателей(УзелРаздел2, Результат);
	Если Не Результат.Пустой() Тогда
		ЗаполнитьЗначенияСвойств(СтруктураИтоговыхДанных,Результат.Выгрузить()[0]);
	КонецЕсли;
	
	// Раздел 2.2
	
	УзелРаздел22 = ОпределитьСтрокуВДеревеДанныхДляЗаполнения(ДеревоПоказателей, "Раздел22");
	
	// Данные берутся по обособленному подразделению (указанной организации)
	Запрос.Текст = НалоговаяБазаПоСтаршимФизлицамИПределамТекст;
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Результат = Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	ВывестиРезультатЗапросаВДеревоПоказателей(УзелРаздел22, Результат);
	Если Не Результат.Пустой() Тогда
		ЗаполнитьЗначенияСвойств(СтруктураИтоговыхДанных,Результат.Выгрузить()[0]);
	КонецЕсли;
	
	Запрос.Текст = НалоговаяБазаПоМладшимФизлицамИПределамТекст;
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Результат = Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	ВывестиРезультатЗапросаВДеревоПоказателей(УзелРаздел22, Результат);
	
	// Раздел 2.3
	
	// Заполняется только для головной организации, имеющей обособленные подразделения.
	Если Организация = ГоловнаяОрганизация Тогда
		СписокОбособленныхПодразделенийОрганизации = ОбщегоНазначения.ПолучитьСписокОбособленныхПодразделенийОрганизации(ГоловнаяОрганизация);
		Если СписокОбособленныхПодразделенийОрганизации.Количество() <> 0 Тогда
			
			// РАСЧЕТ ПОКАЗАТЕЛЕЙ РАЗДЕЛА 2.3										  
			
			УзелРаздела = ОпределитьСтрокуВДеревеДанныхДляЗаполнения(ДеревоПоказателей, "Раздел23");
			
			Запрос.УстановитьПараметр("СписокОбособленныхПодразделений", СписокОбособленныхПодразделенийОрганизации);
			
			// База ПФР по обособленным подразделениям организации 
			// НалоговаяБазаПоСпискуОбособленныхПодразделений
			//	База - налоговая база
			//	БазаОбщСН - налоговая база в части доходов не облагаемых ЕНВД  для месяцев на ОСН
			// Описание:
			//  Выбирает базу взновов ПФР 
			
			НалоговаяБазаПоСпискуОбособленныхПодразделений = 
			"ВЫБРАТЬ
			|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ЕСНСведенияОДоходах.Результат - ЕСНСведенияОДоходах.Скидка) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель, 0) КАК База,
			|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
			|					КОГДА ЕСНСведенияОДоходах.ОблагаетсяЕНВД
			|						ТОГДА 0
			|					КОГДА УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ НЕ NULL 
			|						ТОГДА 0
			|					ИНАЧЕ ЕСНСведенияОДоходах.Результат - ЕСНСведенияОДоходах.Скидка
			|				КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель, 0) КАК БазаОбщСН
			|ИЗ
			|	РегистрНакопления.ЕСНСведенияОДоходах КАК ЕСНСведенияОДоходах
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлицаБезНалоговойБазы КАК ФизлицаБезНалоговойБазы
			|		ПО ЕСНСведенияОДоходах.ФизЛицо = ФизлицаБезНалоговойБазы.Физлицо
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОПравеНаПенсию КАК Иностранцы
			|		ПО ЕСНСведенияОДоходах.ФизЛицо = Иностранцы.Физлицо
			|			И (МЕСЯЦ(ЕСНСведенияОДоходах.Период) = Иностранцы.Месяц)
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНалоговыйУчетУСН
			|		ПО (МЕСЯЦ(ЕСНСведенияОДоходах.Период) = УчетнаяПолитикаНалоговыйУчетУСН.Месяц)
			|ГДЕ
			|	ЕСНСведенияОДоходах.Период МЕЖДУ &парамНачалоГода И &парамКонецОтчетногоПериода
			|	И ЕСНСведенияОДоходах.КодДоходаЕСН.ВходитВБазуФедеральныйБюджет
			|	И ЕСНСведенияОДоходах.Организация = &парамГоловнаяОрганизация
			|	И ЕСНСведенияОДоходах.ОбособленноеПодразделение В(&СписокОбособленныхПодразделений)
			|	И ФизлицаБезНалоговойБазы.Физлицо ЕСТЬ NULL 
			|	И Иностранцы.Физлицо ЕСТЬ NULL ";
			Запрос.Текст = СтрЗаменить(НалоговаяБазаПоСпискуОбособленныхПодразделений,"ЧИСЛО(15, 3)","ЧИСЛО(15, " + ТочностьЕдиницыИзмерения + ")");
			
			#Если Клиент тогда
				ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
			#КонецЕсли
			Попытка
				Выборка = Запрос.Выполнить().Выбрать();
			Исключение
				#Если Клиент тогда
					ИнформацияОбОшибке = ИнформацияОбОшибке();
					ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
				#КонецЕсли
				Возврат ПустоеДерево;
			КонецПопытки;
			Если Выборка.Следующий() Тогда
				ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздела, "П000230001003", СтруктураИтоговыхДанных.База + Выборка.База);
				ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздела, "П000230001004", СтруктураИтоговыхДанных.БазаОбщСН + Выборка.БазаОбщСН);
				ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздела, "П000230001103", Выборка.База);
				ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздела, "П000230001104", Выборка.БазаОбщСН);
			КонецЕсли; 
			
			// Исчисленные налоги по обособленным подразделениям организации
			//	Накопительная - начислено на накопительную часть
			//	Страховая - начислено на страховую часть
			//	НакопительнаяОбщСН - начислено на накопительную часть с доходов не облагаемых ЕНВД
			//	СтраховаяОбщСН - начислено на страховую часть с доходов не облагаемых ЕНВД
			
			ЕСНИсчисленныйТекст = 
			"ВЫБРАТЬ
			|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ЕСНИсчисленный.ПФРНакопительная) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель, 0) КАК Накопительная,
			|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ЕСНИсчисленный.ПФРСтраховая) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель, 0) КАК Страховая,
			|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
			|				КОГДА УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ NULL 
			|					ТОГДА ЕСНИсчисленный.ПФРНакопительная - ЕСНИсчисленный.ПФРНакопительнаяЕНВД
			|				ИНАЧЕ 0
			|			КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель, 0) КАК НакопительнаяОбщСН,
			|	ЕСТЬNULL((ВЫРАЗИТЬ(СУММА(ВЫБОР
			|				КОГДА УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ NULL 
			|					ТОГДА ЕСНИсчисленный.ПФРСтраховая - ЕСНИсчисленный.ПФРСтраховаяЕНВД
			|				ИНАЧЕ 0
			|			КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 3))) * &Делитель, 0) КАК СтраховаяОбщСН
			|ИЗ
			|	РегистрНакопления.ЕСНИсчисленный КАК ЕСНИсчисленный
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНалоговыйУчетУСН
			|		ПО (МЕСЯЦ(ЕСНИсчисленный.Период) = УчетнаяПолитикаНалоговыйУчетУСН.Месяц)
			|ГДЕ
			|	ЕСНИсчисленный.ОбособленноеПодразделение В(&СписокОбособленныхПодразделений)
			|	И ЕСНИсчисленный.Организация = &парамГоловнаяОрганизация
			|	И ЕСНИсчисленный.Период МЕЖДУ &парамНачалоГода И &парамКонецОтчетногоПериода";
			Запрос.Текст = СтрЗаменить(ЕСНИсчисленныйТекст,"ЧИСЛО(15, 3)","ЧИСЛО(15, " + ТочностьЕдиницыИзмерения + ")");
			
			#Если Клиент тогда
				ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
			#КонецЕсли
			Попытка
				Выборка = Запрос.Выполнить().Выбрать();
			Исключение
				#Если Клиент тогда
					ИнформацияОбОшибке = ИнформацияОбОшибке();
					ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
				#КонецЕсли
				Возврат ПустоеДерево;
			КонецПопытки;
			Если Выборка.Следующий() Тогда
				ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздела, "П000230003003", СтруктураИтоговыхДанных.Страховая + Выборка.Страховая);
				ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздела, "П000230004003", СтруктураИтоговыхДанных.Накопительная + Выборка.Накопительная);
				ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздела, "П000230003004", СтруктураИтоговыхДанных.СтраховаяОбщСН + Выборка.СтраховаяОбщСН);
				ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздела, "П000230004004", СтруктураИтоговыхДанных.НакопительнаяОбщСН + Выборка.НакопительнаяОбщСН);
				ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздела, "П000230003103", Выборка.Страховая);
				ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздела, "П000230004103", Выборка.Накопительная);
				ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздела, "П000230003104", Выборка.СтраховаяОбщСН);
				ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздела, "П000230004104", Выборка.НакопительнаяОбщСН);
			КонецЕсли;
		КонецЕсли; 
	КонецЕсли;
	
	Возврат ДеревоПоказателей;
	
КонецФункции // ЗначенияПоказателей_ДекларацияПФР_2006()

// Возвращает описание показателей отчета Расчетная ведомость 4-ФСС 
// для формы образца 2010 года
//
// Параметры:
//  нет
//
// Возвращаемое значение:
//	ДеревоЗначений с колонкой «Имя"
//
Функция ОписаниеПоказателей_4ФСС_2010()
	
	ДеревоПоказателей = Новый ДеревоЗначений;
	ДеревоПоказателей.Колонки.Добавить("Имя");
	
	УзелРаздел1_1 = ОпределитьСтрокуДереваЗаполняемыхПоказателей(ДеревоПоказателей, "Раздел1_1");
	
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "ШифрРаздел1_1");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "ШифрРаздел1_2");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "ШифрРаздел1_3");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000000001000");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000000002000");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000000003000");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010001003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010002101");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010002301");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010002401");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010002501");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010003101");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010003301");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010003401");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010003501");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010004003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010005101"); 
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010005301"); 
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010005401"); 
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010005501"); 
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010006101");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010006301");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010006401");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010006501");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010011003"); 
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010013003"); 
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010014003"); 
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010015101");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010015301");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010015401");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010015501");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010016101"); 
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010016301"); 
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010016311"); 
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010016321"); 
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010016401"); 
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010016411"); 
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010016421"); 
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010016501"); 
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010016511"); 
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010016521"); 
	
	УзелРаздел1_2 = ОпределитьСтрокуДереваЗаполняемыхПоказателей(ДеревоПоказателей, "Раздел1_2");
	
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020001001");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020001003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020001004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020001005");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020002001");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020002003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020002004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020002005");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020003003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020003004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020003005");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020004001");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020004003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020004004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020004005");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020005003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020005004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020006003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020006004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020008001");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020009001");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020009003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020009004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020009005");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020010001");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020010003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020010004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020010005");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020011001");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020012001");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020012003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020012004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020012005");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020013001");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020013003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020013004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020013005");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020014003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020014004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020015003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020015004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020015005");
	
	УзелРаздел1_3 = ОпределитьСтрокуДереваЗаполняемыхПоказателей(ДеревоПоказателей, "Раздел1_3");
	
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_3, "П000030001003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_3, "П000030001004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_3, "П000030001005");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_3, "П000030001006");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_3, "П000030003003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_3, "П000030003004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_3, "П000030003005");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_3, "П000030003006");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_3, "П000030004003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_3, "П000030004004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_3, "П000030004005");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_3, "П000030004006");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_3, "П000030005003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_3, "П000030005004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_3, "П000030005005");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_3, "П000030005006");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_3, "П000040001003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_3, "П000040001004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_3, "П000040002003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_3, "П000040002004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_3, "П000040004003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_3, "П000040004004");
	
	УзелРаздел2_1 = ОпределитьСтрокуДереваЗаполняемыхПоказателей(ДеревоПоказателей, "Раздел2_1");
	
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_1, "ШифрРаздел2_1");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_1, "ШифрРаздел2_2");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_1, "ШифрРаздел2_3");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_1, "П000050001003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_1, "П000050002003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_1, "П000050003003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_1, "П000060001003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_1, "П000060002003"); 
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_1, "П000060003003"); 
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_1, "П000060004003");
	
	УзелРаздел2_2 = ОпределитьСтрокуДереваЗаполняемыхПоказателей(ДеревоПоказателей, "Раздел2_2");
	
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_2, "П000070001001");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_2, "П000070001003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_2, "П000070001004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_2, "П000070001005");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_2, "П000070002001");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_2, "П000070002003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_2, "П000070002004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_2, "П000070002005");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_2, "П000070003003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_2, "П000070003004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_2, "П000070003005");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_2, "П000070004001");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_2, "П000070004003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_2, "П000070004004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_2, "П000070004005");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_2, "П000070005003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_2, "П000070005004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_2, "П000070006003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_2, "П000070006004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_2, "П000070008001");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_2, "П000070009001");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_2, "П000070009003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_2, "П000070009004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_2, "П000070009005");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_2, "П000070010001");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_2, "П000070010003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_2, "П000070010004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_2, "П000070010005");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_2, "П000070011001");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_2, "П000070012001");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_2, "П000070012003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_2, "П000070012004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_2, "П000070012005");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_2, "П000070013001");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_2, "П000070013003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_2, "П000070013004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_2, "П000070013005");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_2, "П000070014003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_2, "П000070014004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_2, "П000070015003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_2, "П000070015004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_2, "П000070015005");
	
	УзелРаздел2_4 = ОпределитьСтрокуДереваЗаполняемыхПоказателей(ДеревоПоказателей, "Раздел2_4");
	
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080001006");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080001007");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080001008");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080001009");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080001010");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080001011");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080001012");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080001013");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080001014");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080001015");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080001016");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080001017");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080001018");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080001019");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080001020");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080002006");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080002007");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080002008");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080002009");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080002010");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080002011");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080002015");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080002016");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080002017");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080002018");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080002019");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080002020");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080003006");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080003009");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080003015");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080004006");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080004007");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080004008");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080004009");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080004010");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080004011");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080004015");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080004016");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080004017");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080005006");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080005007");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080005008");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080005009");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080005010");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080005011");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080005015");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080005016");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080005017");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080006006");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080006007");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080006008");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080006009");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080006010");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080006011");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080006015");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080006016");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_4, "П000080006017");
	
	УзелРаздел3_1 = ОпределитьСтрокуДереваЗаполняемыхПоказателей(ДеревоПоказателей, "Раздел3_1");
	
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел3_1, "П000090001001");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел3_1, "П000090001002");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел3_1, "П000090001004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел3_1, "П000090001104");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел3_1, "П000090001204");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел3_1, "П000090001304");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел3_1, "П000090001005");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел3_1, "П000090001105");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел3_1, "П000090001205");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел3_1, "П000090001305");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел3_1, "П000090001006");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел3_1, "П000100001003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел3_1, "П000100002001");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел3_1, "П000100002101");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел3_1, "П000100002201");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел3_1, "П000100002301");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел3_1, "П000100003003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел3_1, "П000100004003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел3_1, "П000100005003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел3_1, "П000100006003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел3_1, "П000100009003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел3_1, "П000100010001");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел3_1, "П000100010101");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел3_1, "П000100010201");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел3_1, "П000100010301");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел3_1, "П000100011001");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел3_1, "П000100011101");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел3_1, "П000100011201");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел3_1, "П000100011301");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел3_1, "П000100011104"); 
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел3_1, "П000100011204"); 
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел3_1, "П000100011304"); 
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел3_1, "П000100011105"); 
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел3_1, "П000100011205"); 
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел3_1, "П000100011305"); 
	
	УзелРаздел3_2 = ОпределитьСтрокуДереваЗаполняемыхПоказателей(ДеревоПоказателей, "Раздел3_2");
	
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел3_2, "П000110001003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел3_2, "П000110001004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел3_2, "П000110002003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел3_2, "П000110002004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел3_2, "П000110004003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел3_2, "П000110004004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел3_2, "П000110005003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел3_2, "П000110005004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел3_2, "П000110007003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел3_2, "П000110007004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел3_2, "П000120001003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел3_2, "П000120001004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел3_2, "П000120002003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел3_2, "П000120002004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел3_2, "П000120004003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел3_2, "П000120004004");
	
	Возврат ДеревоПоказателей;
	
КонецФункции // ОписаниеПоказателей_4ФСС_2007Кв3()


// Возвращает описание показателей отчета Расчетная ведомость 4-ФСС 
// для формы образца 2011 года
//
// Параметры:
//  нет
//
// Возвращаемое значение:
//	ДеревоЗначений с колонкой «Имя"
//
Функция ОписаниеПоказателей_4ФСС_2011()
	
	ДеревоПоказателей = Новый ДеревоЗначений;
	ДеревоПоказателей.Колонки.Добавить("Имя");
	
	УзелРаздел1_1 = ОпределитьСтрокуДереваЗаполняемыхПоказателей(ДеревоПоказателей, "Раздел1_1");
	
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010001003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010002101");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010002301");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010002401");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010002501");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010003101");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010003301");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010003401");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010003501");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010004003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010005101"); 
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010005301"); 
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010005401"); 
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010005501"); 
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010006101");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010006301");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010006401");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010006501");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010011003"); 
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010013003"); 
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010014003"); 
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010015101");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010015301");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010015401");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010015501");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010016101"); 
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010016301"); 
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010016311"); 
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010016321"); 
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010016401"); 
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010016411"); 
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010016421"); 
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010016501"); 
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010016511"); 
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_1, "П000010016521"); 
	
	УзелРаздел1_2 = ОпределитьСтрокуДереваЗаполняемыхПоказателей(ДеревоПоказателей, "Раздел1_2");

	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020001001");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020001003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020001004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020001005");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020002001");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020002003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020002004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020002005");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020003003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020003004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020003005");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020004001");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020004003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020004004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020004005");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020005003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020005004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020006003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020006004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020007001");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020008001");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020008003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020008004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020008005");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020009001");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020009003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020009004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020009005");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020010003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020010004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020011003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020011004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_2, "П000020011005");
	
	УзелРаздел1_3 = ОпределитьСтрокуДереваЗаполняемыхПоказателей(ДеревоПоказателей, "Раздел1_3");

	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_3, "П000030001003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_3, "П000030001004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_3, "П000030001005");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_3, "П000030001006");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_3, "П000030002003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_3, "П000030002004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_3, "П000030002005");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_3, "П000030002006");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_3, "П000030003003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_3, "П000030003004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_3, "П000030003005");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_3, "П000030003006");
	//ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_3, "П000030005003");
	//ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_3, "П000030005004");
	//ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_3, "П000030005005");
	//ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_3, "П000030005006");
	
	УзелРаздел1_4 = ОпределитьСтрокуДереваЗаполняемыхПоказателей(ДеревоПоказателей, "Раздел1_4");
	
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_4, "П000310001002");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_4, "П000310001003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_4, "П000310001004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_4, "П000310001005");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_4, "П000310001006");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_4, "П000310001007");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_4, "П000310001008");

	УзелРаздел1_5 = ОпределитьСтрокуДереваЗаполняемыхПоказателей(ДеревоПоказателей, "Раздел1_7");
	
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050001006");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050001007");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050001008");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050001009");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050001010");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050001011");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050001012");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050001013");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050001014");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050001015");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050001016");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050001017");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050001018");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050001019");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050001020");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050002006");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050002007");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050002008");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050002009");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050002010");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050002011");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050002015");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050002016");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050002017");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050002018");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050002019");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050002020");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050003006");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050003009");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050003015");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050004006");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050004007");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050004008");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050004009");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050004010");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050004011");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050004015");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050004016");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050004017");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050005006");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050005007");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050005008");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050005009");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050005010");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050005011");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050005015");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050005016");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050005017");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050006006");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050006007");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050006008");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050006009");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050006010");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050006011");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050006015");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050006016");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел1_5, "П000050006017");
	
	УзелРаздел2_1 = ОпределитьСтрокуДереваЗаполняемыхПоказателей(ДеревоПоказателей, "Раздел2_1");
	
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_1, "П000060001103");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_1, "П000060001104");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_1, "П000060001105");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_1, "П000060001303");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_1, "П000060001304");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_1, "П000060001305");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_1, "П000060001403");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_1, "П000060001404");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_1, "П000060001405");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_1, "П000060001503");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_1, "П000060001504");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_1, "П000060001505");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_1, "П000070001003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_1, "П000070002001");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_1, "П000070002101");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_1, "П000070002201");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_1, "П000070002301");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_1, "П000070003003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_1, "П000070004003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_1, "П000070005003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_1, "П000070006003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_1, "П000070010003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_1, "П000070011001");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_1, "П000070011101");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_1, "П000070011201");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_1, "П000070011301");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_1, "П000070012001");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_1, "П000070012101");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_1, "П000070012201");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_1, "П000070012301");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_1, "П000070012104"); 
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_1, "П000070012204"); 
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_1, "П000070012304"); 
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_1, "П000070012105"); 
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_1, "П000070012205"); 
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_1, "П000070012305"); 
	
	УзелРаздел2_2 = ОпределитьСтрокуДереваЗаполняемыхПоказателей(ДеревоПоказателей, "Раздел2_2");
	
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_2, "П000080001003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_2, "П000080001004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_2, "П000080002003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_2, "П000080002004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_2, "П000080004003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_2, "П000080004004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_2, "П000080005003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_2, "П000080005004");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_2, "П000080007003");
	ОпределитьСтрокуДереваЗаполняемыхПоказателей(УзелРаздел2_2, "П000080007004");

	Возврат ДеревоПоказателей;
	
КонецФункции // ОписаниеПоказателей_4ФСС_2011()

// Возвращает значения показателей отчета Расчетная ведомость 4-ФСС 
// для формы образца 2011 года, вычисленные по данным ИБ
//
// Параметры:
//  ПараметрыОтчета - структура, содержащая значения ключевых реквизитов заполняемого отчета. 
//		Структура содержит, как минимум, следующее:
//			Организация, тип СправочникСсылка.Организации
//			ДатаНачалаПериода, тип Дата
//			ДатаОкончанияПериода, тип Дата
//			ДатаПодписи, тип Дата
//			Периодичность, тип ПеречислениеСсылка.Периодичность
//
// Возвращаемое значение:
//	ДеревоЗначений с колонками «Имя" и «Значение"
//
Функция ЗначенияПоказателей_4ФСС_2011(ПараметрыОтчета)
	
	ДеревоПоказателей = Новый ДеревоЗначений;
	ДеревоПоказателей.Колонки.Добавить("Имя");
	ДеревоПоказателей.Колонки.Добавить("Значение");
	
	ПустоеДерево = Неопределено;
	
	ДатаКонцаПериодаОтчета = ПараметрыОтчета.ДатаОкончанияПериода;
	Организация = ПараметрыОтчета.Организация;
	ТочностьЕдиницыИзмерения = 2;
	Если ПараметрыОтчета.Свойство("ТочностьЕдиницыИзмерения",ТочностьЕдиницыИзмерения) = Неопределено Тогда
		ТочностьЕдиницыИзмерения = 2;
	КонецЕсли;
	ЕдиницаИзмерения = Перечисления.ПорядкиОкругленияОтчетности.ПустаяСсылка();
	Если ПараметрыОтчета.Свойство("ЕдиницаИзмерения",ЕдиницаИзмерения) = Неопределено Тогда
		ЕдиницаИзмерения = Перечисления.ПорядкиОкругленияОтчетности.ПустаяСсылка();
	КонецЕсли;
	Делитель = ПреобразоватьЕдиницуИзмеренияВЧисло(ЕдиницаИзмерения);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("парамОрганизация",			Организация);
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация",	ОбщегоНазначения.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("парамНачалоГода",			НачалоГода(ДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("парамКонецОтчетногоПериода",	КонецДня(ДатаКонцаПериодаОтчета));
	НачалоТекущегоКвартала = НачалоКвартала(ДатаКонцаПериодаОтчета);
	Запрос.УстановитьПараметр("парамНачалоКвартала",		НачалоТекущегоКвартала);
	Запрос.УстановитьПараметр("Месяц1",						Месяц(НачалоТекущегоКвартала));
	Запрос.УстановитьПараметр("Месяц2",						Месяц(НачалоТекущегоКвартала) + 1);
	Запрос.УстановитьПараметр("Месяц3",						Месяц(НачалоТекущегоКвартала) + 2);
	Запрос.УстановитьПараметр("ПоследнийМесяц",				Месяц(ДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("Делитель",					Делитель);
	Запрос.УстановитьПараметр("ЭтоЮрЛицо",					ОбщегоНазначенияПереопределяемый.ЭтоЮрЛицо(Организация));
	
	// ----------------------------------------------------------------------------------
	// ФОРМИРОВАНИЕ ВРЕМЕННЫХ ТАБЛИЦ
	
	// конец месяца налогового периода
	КонецМесяца = КонецМесяца(НачалоГода(ДатаКонцаПериодаОтчета));
	// первый месяц
	ПериодыТекст = "ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ")КАК Период ПОМЕСТИТЬ ВТПериоды";
	// прибавим остальные месяцы
	Для Сч = 2 По Месяц(ДатаКонцаПериодаОтчета) Цикл
		КонецМесяца = КонецМесяца(КонецМесяца+1);
		ПериодыТекст = ПериодыТекст +" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ")";
	КонецЦикла;
	Запрос.Текст = ПериодыТекст;
	МассивЗапросов = Новый Массив;
	#Если Клиент тогда
	ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(СтраховыеВзносыСведенияОДоходахОбороты.Период, МЕСЯЦ) КАК Период,
	|	СтраховыеВзносыСведенияОДоходахОбороты.ФизЛицо КАК ФизЛицо,
	|	СтраховыеВзносыСведенияОДоходахОбороты.ВидДохода КАК ВидДохода,
	|	СтраховыеВзносыСведенияОДоходахОбороты.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	|	СтраховыеВзносыСведенияОДоходахОбороты.РезультатОборот,
	|	СтраховыеВзносыСведенияОДоходахОбороты.СкидкаОборот
	|ПОМЕСТИТЬ ВТСведенияОДоходах
	|ИЗ
	|	РегистрНакопления.СтраховыеВзносыСведенияОДоходах.Обороты(&парамНачалоГода, &парамКонецОтчетногоПериода, МЕСЯЦ, Организация = &парамГоловнаяОрганизация) КАК СтраховыеВзносыСведенияОДоходахОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	ОбособленноеПодразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОДоходах.ФизЛицо КАК ФизЛицо
	|ПОМЕСТИТЬ ВТФизлицаБезОблагаемойБазы
	|ИЗ
	|	ВТСведенияОДоходах КАК СведенияОДоходах
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходах.ФизЛицо
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВЫБОР
	|			КОГДА СведенияОДоходах.ВидДохода.ВходитВБазуФСС
	|				ТОГДА СведенияОДоходах.РезультатОборот - СведенияОДоходах.СкидкаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) < 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтраховыеВзносыСведенияОДоходах.ФизЛицо КАК ФизЛицо
	|ПОМЕСТИТЬ ВТФизЛицаОрганизаций
	|ИЗ
	|	ВТСведенияОДоходах КАК СтраховыеВзносыСведенияОДоходах
	|ГДЕ
	|	СтраховыеВзносыСведенияОДоходах.ОбособленноеПодразделение = &парамОрганизация
	|	И (НЕ СтраховыеВзносыСведенияОДоходах.ФизЛицо В
	|				(ВЫБРАТЬ
	|					Организации.ФизЛицо
	|				ИЗ
	|					ВТФизлицаБезОблагаемойБазы КАК Организации))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФИОФизЛицСрезПоследних.ФизЛицо КАК ФизЛицо,
	|	ФИОФизЛицСрезПоследних.Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя,
	|	ФИОФизЛицСрезПоследних.Отчество
	|ПОМЕСТИТЬ ВТФИОФизлиц
	|ИЗ
	|	РегистрСведений.ФИОФизЛиц.СрезПоследних(
	|			&парамКонецОтчетногоПериода,
	|			ФизЛицо В
	|				(ВЫБРАТЬ
	|					Организации.ФизЛицо
	|				ИЗ
	|					ВТФизЛицаОрганизаций КАК Организации)) КАК ФИОФизЛицСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СрезПоследнихДат.ПериодРегистрации КАК Период,
	|	СрезПоследнихДат.Физлицо КАК Физлицо,
	|	СведенияОбИнвалидностиФизлиц.Инвалидность,
	|	СведенияОбИнвалидностиФизлиц.ДатаВыдачи,
	|	СведенияОбИнвалидностиФизлиц.СрокДействияСправки
	|ПОМЕСТИТЬ ВТИнвалиды
	|ИЗ
	|	(ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ) КАК ПериодРегистрации,
	|		СведенияОбИнвалидностиФизлиц.Физлицо КАК Физлицо,
	|		МАКСИМУМ(СведенияОбИнвалидностиФизлиц.Период) КАК Период
	|	ИЗ
	|		ВТПериоды КАК Периоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК СведенияОбИнвалидностиФизлиц
	|			ПО Периоды.Период >= СведенияОбИнвалидностиФизлиц.Период
	|	ГДЕ
	|		СведенияОбИнвалидностиФизлиц.Физлицо В
	|				(ВЫБРАТЬ
	|					Организации.ФизЛицо
	|				ИЗ
	|					ВТФизЛицаОрганизаций КАК Организации)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СведенияОбИнвалидностиФизлиц.Физлицо,
	|		Периоды.Период) КАК СрезПоследнихДат
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК СведенияОбИнвалидностиФизлиц
	|		ПО СрезПоследнихДат.Период = СведенияОбИнвалидностиФизлиц.Период
	|			И СрезПоследнихДат.Физлицо = СведенияОбИнвалидностиФизлиц.Физлицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Инвалиды.Физлицо КАК Физлицо,
	|	МАКСИМУМ(Инвалиды.ДатаВыдачи) КАК ДатаВыдачи,
	|	МАКСИМУМ(Инвалиды.СрокДействияСправки) КАК СрокДействияСправки
	|ПОМЕСТИТЬ ВТСправкиОбИнвалидности
	|ИЗ
	|	ВТИнвалиды КАК Инвалиды
	|ГДЕ
	|	Инвалиды.Инвалидность
	|
	|СГРУППИРОВАТЬ ПО
	|	Инвалиды.Физлицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СрезПоследнихДат.ПериодРегистрации КАК Период,
	|	СрезПоследнихДат.Физлицо КАК Физлицо,
	|	ГражданствоФизЛиц.НеИмеетПравоНаПенсию
	|ПОМЕСТИТЬ ВТГражданство
	|ИЗ
	|	(ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ) КАК ПериодРегистрации,
	|		ГражданствоФизЛиц.ФизЛицо КАК Физлицо,
	|		МАКСИМУМ(ГражданствоФизЛиц.Период) КАК Период
	|	ИЗ
	|		ВТПериоды КАК Периоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|			ПО Периоды.Период >= ГражданствоФизЛиц.Период
	|	ГДЕ
	|		ГражданствоФизЛиц.ФизЛицо В
	|				(ВЫБРАТЬ
	|					Организации.ФизЛицо
	|				ИЗ
	|					ВТФизЛицаОрганизаций КАК Организации)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ГражданствоФизЛиц.ФизЛицо,
	|		Периоды.Период) КАК СрезПоследнихДат
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|		ПО СрезПоследнихДат.Период = ГражданствоФизЛиц.Период
	|			И СрезПоследнихДат.Физлицо = ГражданствоФизЛиц.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ПредельнаяВеличинаБазыСтраховыхВзносов.Размер, 0) КАК Размер,
	|	НАЧАЛОПЕРИОДА(ДатыПоследнихДвижений.ПериодРегистрации, МЕСЯЦ) КАК Период
	|ПОМЕСТИТЬ ВТПредельнаяВеличина
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(ПредельнаяВеличинаБазыСтраховыхВзносов.Период) КАК Период,
	|		Периоды.Период КАК ПериодРегистрации
	|	ИЗ
	|		ВТПериоды КАК Периоды
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПредельнаяВеличинаБазыСтраховыхВзносов КАК ПредельнаяВеличинаБазыСтраховыхВзносов
	|			ПО Периоды.Период >= ПредельнаяВеличинаБазыСтраховыхВзносов.Период
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период) КАК ДатыПоследнихДвижений
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПредельнаяВеличинаБазыСтраховыхВзносов КАК ПредельнаяВеличинаБазыСтраховыхВзносов
	|		ПО ДатыПоследнихДвижений.Период = ПредельнаяВеличинаБазыСтраховыхВзносов.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ) КАК Период,
	|	ЕСТЬNULL(УчетнаяПолитикаНалоговыйУчет.ВидТарифаСтраховыхВзносов, ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОбщийНалоговыйРежим)) КАК ВидТарифаСтраховыхВзносов
	|ПОМЕСТИТЬ ВТВидыТарифныхСтавокОрганизаций
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период КАК Период,
	|		УчетнаяПолитикаНалоговыйУчет.Организация КАК Организация,
	|		МАКСИМУМ(УчетнаяПолитикаНалоговыйУчет.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВТПериоды КАК Периоды
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНалоговыйУчет
	|			ПО Периоды.Период >= УчетнаяПолитикаНалоговыйУчет.Период
	|				И (УчетнаяПолитикаНалоговыйУчет.Организация = &парамГоловнаяОрганизация)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период,
	|		УчетнаяПолитикаНалоговыйУчет.Организация) КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНалоговыйУчет
	|		ПО Периоды.ПериодРегистра = УчетнаяПолитикаНалоговыйУчет.Период
	|			И Периоды.Организация = УчетнаяПолитикаНалоговыйУчет.Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОбщийНалоговыйРежим) КАК ВидТарифаСтраховыхВзносов,
	|	ИСТИНА КАК ВыделятьДоходыИнвалидов,
	|	2010 КАК ГодС,
	|	2014 КАК ГодПо
	|ПОМЕСТИТЬ ВТСоответствиеПониженныхТарифов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.УпрощенныйНалоговыйРежим),
	|	ИСТИНА,
	|	2011,
	|	2014
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД),
	|	ИСТИНА,
	|	2011,
	|	2014
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.РезидентТехникоВнедренческойЗоны),
	|	ИСТИНА,
	|	2011,
	|	2017
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ITОрганизации),
	|	ИСТИНА,
	|	2011,
	|	2017
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ХозОбществаБюджетныхВУЗов),
	|	ИСТИНА,
	|	2011,
	|	2017
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.СМИ),
	|	ИСТИНА,
	|	2011,
	|	2014
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.УпрощенныйНалоговыйРежимПроизводство),
	|	ИСТИНА,
	|	2011,
	|	2014
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.УчастникПроектаИнновационныйЦентрСколково),
	|	ИСТИНА,
	|	2010,
	|	2100
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.СельХозПроизводители),
	|	ИСТИНА,
	|	2010,
	|	2010
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтраховыеВзносыСведенияОДоходах.Период КАК Период,
	|	СтраховыеВзносыСведенияОДоходах.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	|	СтраховыеВзносыСведенияОДоходах.ФизЛицо КАК ФизЛицо,
	|	СтраховыеВзносыСведенияОДоходах.ВидДохода,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Инвалиды.Инвалидность, ЛОЖЬ)
	|				И (&ЭтоЮрЛицо
	|					ИЛИ ЕСТЬNULL(СоответствиеПониженныхТарифов.ВыделятьДоходыИнвалидов, ЛОЖЬ))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ПустаяСсылка)
	|	КОНЕЦ КАК ВидТарифаСтраховыхВзносов,
	|	ВЫБОР
	|		КОГДА (ЕСТЬNULL(Инвалиды.Инвалидность, ЛОЖЬ)
	|				ИЛИ ВидыТарифныхСтавок.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов))
	|				И &ЭтоЮрЛицо
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ИнвалидностьДляНС_ПЗ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Гражданство.НеИмеетПравоНаПенсию, ЛОЖЬ)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Иностранец,
	|	СтраховыеВзносыСведенияОДоходах.РезультатОборот,
	|	СтраховыеВзносыСведенияОДоходах.СкидкаОборот
	|ПОМЕСТИТЬ ВТСведенияОДоходахПоВидамТарифа
	|ИЗ
	|	ВТСведенияОДоходах КАК СтраховыеВзносыСведенияОДоходах
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИнвалиды КАК Инвалиды
	|		ПО СтраховыеВзносыСведенияОДоходах.Период = Инвалиды.Период
	|			И СтраховыеВзносыСведенияОДоходах.ФизЛицо = Инвалиды.Физлицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТГражданство КАК Гражданство
	|		ПО СтраховыеВзносыСведенияОДоходах.Период = Гражданство.Период
	|			И СтраховыеВзносыСведенияОДоходах.ФизЛицо = Гражданство.Физлицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВидыТарифныхСтавокОрганизаций КАК ВидыТарифныхСтавок
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТСоответствиеПониженныхТарифов КАК СоответствиеПониженныхТарифов
	|			ПО (ГОД(ВидыТарифныхСтавок.Период) МЕЖДУ СоответствиеПониженныхТарифов.ГодС И СоответствиеПониженныхТарифов.ГодПо)
	|				И ВидыТарифныхСтавок.ВидТарифаСтраховыхВзносов = СоответствиеПониженныхТарифов.ВидТарифаСтраховыхВзносов
	|		ПО СтраховыеВзносыСведенияОДоходах.Период = ВидыТарифныхСтавок.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	Период,
	|	ОбособленноеПодразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОДоходах.ФизЛицо КАК ФизЛицо,
	|	НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ) КАК Период,
	|	СУММА(ВЫБОР
	|			КОГДА СведенияОДоходах.Иностранец
	|				ТОГДА 0
	|			КОГДА СведенияОДоходах.ВидДохода.ВходитВБазуФСС
	|				ТОГДА СведенияОДоходах.РезультатОборот - СведенияОДоходах.СкидкаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЗаГод,
	|	СУММА(ВЫБОР
	|			КОГДА СведенияОДоходах.Иностранец
	|				ТОГДА 0
	|			КОГДА НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ) = СведенияОДоходах.Период
	|					И СведенияОДоходах.ВидДохода.ВходитВБазуФСС
	|				ТОГДА СведенияОДоходах.РезультатОборот - СведенияОДоходах.СкидкаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЗаМесяц
	|ПОМЕСТИТЬ ВТБазаНарастающимИтогом
	|ИЗ
	|	ВТПериоды КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОДоходахПоВидамТарифа КАК СведенияОДоходах
	|		ПО (СведенияОДоходах.Период МЕЖДУ НАЧАЛОПЕРИОДА(Периоды.Период, ГОД) И Периоды.Период)
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходах.ФизЛицо,
	|	Периоды.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОДоходах.ФизЛицо КАК ФизЛицо,
	|	СведенияОДоходах.Период,
	|	СведенияОДоходах.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	|	СведенияОДоходах.ВидТарифаСтраховыхВзносов,
	|	СУММА(ВЫБОР
	|			КОГДА СведенияОДоходах.Иностранец
	|				ТОГДА 0
	|			КОГДА СведенияОДоходах.ВидДохода.ВходитВБазуФСС
	|				ТОГДА СведенияОДоходах.РезультатОборот - СведенияОДоходах.СкидкаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЗаМесяц
	|ПОМЕСТИТЬ ВТБазаЗаМесяцПоОбособленноеПодразделение
	|ИЗ
	|	ВТСведенияОДоходахПоВидамТарифа КАК СведенияОДоходах
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходах.ФизЛицо,
	|	СведенияОДоходах.ОбособленноеПодразделение,
	|	СведенияОДоходах.ВидТарифаСтраховыхВзносов,
	|	СведенияОДоходах.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОДоходах.ФизЛицо КАК ФизЛицо,
	|	СведенияОДоходах.Период,
	|	МАКСИМУМ(СведенияОДоходах.ЗаМесяц) КАК ЗаМесяц
	|ПОМЕСТИТЬ ВТМаксБазаЗаМесяц
	|ИЗ
	|	ВТБазаЗаМесяцПоОбособленноеПодразделение КАК СведенияОДоходах
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходах.ФизЛицо,
	|	СведенияОДоходах.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОДоходах.ФизЛицо КАК ФизЛицо,
	|	СведенияОДоходах.Период КАК Период,
	|	СведенияОДоходах.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	|	МАКСИМУМ(БазаЗаМесяцПоОбособленным.ВидТарифаСтраховыхВзносов) КАК ВидТарифаСтраховыхВзносов
	|ПОМЕСТИТЬ ВТОбособленноеПодразделениеМаксБазы
	|ИЗ
	|	(ВЫБРАТЬ
	|		СведенияОДоходах.ФизЛицо КАК ФизЛицо,
	|		СведенияОДоходах.Период КАК Период,
	|		СведенияОДоходах.ЗаМесяц КАК ЗаМесяц,
	|		МАКСИМУМ(БазаЗаМесяцПоОбособленным.ОбособленноеПодразделение) КАК ОбособленноеПодразделение
	|	ИЗ
	|		ВТМаксБазаЗаМесяц КАК СведенияОДоходах
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТБазаЗаМесяцПоОбособленноеПодразделение КАК БазаЗаМесяцПоОбособленным
	|			ПО СведенияОДоходах.ФизЛицо = БазаЗаМесяцПоОбособленным.ФизЛицо
	|				И СведенияОДоходах.Период = БазаЗаМесяцПоОбособленным.Период
	|				И СведенияОДоходах.ЗаМесяц = БазаЗаМесяцПоОбособленным.ЗаМесяц
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СведенияОДоходах.ФизЛицо,
	|		СведенияОДоходах.Период,
	|		СведенияОДоходах.ЗаМесяц) КАК СведенияОДоходах
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБазаЗаМесяцПоОбособленноеПодразделение КАК БазаЗаМесяцПоОбособленным
	|		ПО СведенияОДоходах.ФизЛицо = БазаЗаМесяцПоОбособленным.ФизЛицо
	|			И СведенияОДоходах.Период = БазаЗаМесяцПоОбособленным.Период
	|			И СведенияОДоходах.ЗаМесяц = БазаЗаМесяцПоОбособленным.ЗаМесяц
	|			И СведенияОДоходах.ОбособленноеПодразделение = БазаЗаМесяцПоОбособленным.ОбособленноеПодразделение
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходах.ФизЛицо,
	|	СведенияОДоходах.Период,
	|	СведенияОДоходах.ОбособленноеПодразделение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	Период,
	|	ОбособленноеПодразделение,
	|	ВидТарифаСтраховыхВзносов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОблагаемаяБазаФСС.ФизЛицо КАК ФизЛицо,
	|	ОблагаемаяБазаФСС.Период КАК Период,
	|	ВЫБОР
	|		КОГДА ОблагаемаяБазаФСС.ЗаГод - Предел.Размер >= 0
	|			ТОГДА ОблагаемаяБазаФСС.ЗаГод - Предел.Размер
	|		ИНАЧЕ 0
	|	КОНЕЦ - ВЫБОР
	|		КОГДА ЕСТЬNULL(ОблагаемаяБазаПрошлогоМесяца.ЗаГод, 0) - Предел.Размер >= 0
	|			ТОГДА ЕСТЬNULL(ОблагаемаяБазаПрошлогоМесяца.ЗаГод, 0) - Предел.Размер
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаПревысившаяПредел
	|ПОМЕСТИТЬ ВТБазаПревышенияДохода
	|ИЗ
	|	ВТБазаНарастающимИтогом КАК ОблагаемаяБазаФСС
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПредельнаяВеличина КАК Предел
	|		ПО ОблагаемаяБазаФСС.Период = Предел.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБазаНарастающимИтогом КАК ОблагаемаяБазаПрошлогоМесяца
	|		ПО ОблагаемаяБазаФСС.ФизЛицо = ОблагаемаяБазаПрошлогоМесяца.ФизЛицо
	|			И (ОблагаемаяБазаФСС.Период = ДОБАВИТЬКДАТЕ(ОблагаемаяБазаПрошлогоМесяца.Период, МЕСЯЦ, 1))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОблагаемаяБаза.ФизЛицо КАК ФизЛицо,
	|	ОблагаемаяБаза.Период КАК Период,
	|	ВЫБОР
	|		КОГДА ПревышениеДоходаПоВсемОП.СуммаПревысившаяПредел = 0
	|				ИЛИ ОблагаемаяБаза.ЗаМесяц = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(ПревышениеДоходаПоВсемОП.СуммаПревысившаяПредел * БазаЗаМесяцПоОбособленным.ЗаМесяц / ОблагаемаяБаза.ЗаМесяц КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаПревысившаяПредел,
	|	БазаЗаМесяцПоОбособленным.ОбособленноеПодразделение,
	|	БазаЗаМесяцПоОбособленным.ВидТарифаСтраховыхВзносов
	|ПОМЕСТИТЬ ВТПревышениеДоходаПоОбособленноеПодразделение
	|ИЗ
	|	ВТБазаНарастающимИтогом КАК ОблагаемаяБаза
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБазаПревышенияДохода КАК ПревышениеДоходаПоВсемОП
	|		ПО ОблагаемаяБаза.ФизЛицо = ПревышениеДоходаПоВсемОП.ФизЛицо
	|			И ОблагаемаяБаза.Период = ПревышениеДоходаПоВсемОП.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБазаЗаМесяцПоОбособленноеПодразделение КАК БазаЗаМесяцПоОбособленным
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТОбособленноеПодразделениеМаксБазы КАК ОбособленноеПодразделениеДляОкругления
	|			ПО БазаЗаМесяцПоОбособленным.ФизЛицо = ОбособленноеПодразделениеДляОкругления.ФизЛицо
	|				И БазаЗаМесяцПоОбособленным.Период = ОбособленноеПодразделениеДляОкругления.Период
	|				И БазаЗаМесяцПоОбособленным.ОбособленноеПодразделение = ОбособленноеПодразделениеДляОкругления.ОбособленноеПодразделение
	|				И БазаЗаМесяцПоОбособленным.ВидТарифаСтраховыхВзносов = ОбособленноеПодразделениеДляОкругления.ВидТарифаСтраховыхВзносов
	|		ПО ОблагаемаяБаза.Период = БазаЗаМесяцПоОбособленным.Период
	|			И ОблагаемаяБаза.ФизЛицо = БазаЗаМесяцПоОбособленным.ФизЛицо
	|ГДЕ
	|	ОбособленноеПодразделениеДляОкругления.ОбособленноеПодразделение ЕСТЬ NULL 
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Превышение.ФизЛицо КАК ФизЛицо,
	|	Превышение.Период КАК Период,
	|	Превышение.СуммаПревысившаяПредел,
	|	Превышение.ОбособленноеПодразделение,
	|	Превышение.ВидТарифаСтраховыхВзносов
	|ПОМЕСТИТЬ ВТПревышениеДохода
	|ИЗ
	|	ВТПревышениеДоходаПоОбособленноеПодразделение КАК Превышение
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Превышение.ФизЛицо,
	|	Превышение.Период,
	|	СУММА(Превышение.СуммаПревысившаяПредел),
	|	ОбособленноеПодразделениеДляОкругления.ОбособленноеПодразделение,
	|	ОбособленноеПодразделениеДляОкругления.ВидТарифаСтраховыхВзносов
	|ИЗ
	|	(ВЫБРАТЬ
	|		Превышение.ФизЛицо КАК ФизЛицо,
	|		Превышение.Период КАК Период,
	|		-Превышение.СуммаПревысившаяПредел КАК СуммаПревысившаяПредел
	|	ИЗ
	|		ВТПревышениеДоходаПоОбособленноеПодразделение КАК Превышение
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Превышение.ФизЛицо,
	|		Превышение.Период,
	|		Превышение.СуммаПревысившаяПредел
	|	ИЗ
	|		ВТБазаПревышенияДохода КАК Превышение) КАК Превышение
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОбособленноеПодразделениеМаксБазы КАК ОбособленноеПодразделениеДляОкругления
	|		ПО Превышение.ФизЛицо = ОбособленноеПодразделениеДляОкругления.ФизЛицо
	|			И Превышение.Период = ОбособленноеПодразделениеДляОкругления.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	Превышение.ФизЛицо,
	|	Превышение.Период,
	|	ОбособленноеПодразделениеДляОкругления.ОбособленноеПодразделение,
	|	ОбособленноеПодразделениеДляОкругления.ВидТарифаСтраховыхВзносов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОДоходах.Период,
	|	СведенияОДоходах.ФизЛицо,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ СведенияОДоходах.ВидДохода В (ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.ПустаяСсылка), ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.РаспределятьПоБазовымНачислениям), ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.НеЯвляетсяОбъектом)))
	|				ТОГДА СведенияОДоходах.РезультатОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Начислено,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ СведенияОДоходах.ВидДохода В (ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.ПустаяСсылка), ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.РаспределятьПоБазовымНачислениям), ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.НеЯвляетсяОбъектом)))
	|				ТОГДА ВЫБОР
	|						КОГДА СведенияОДоходах.Иностранец
	|							ТОГДА СведенияОДоходах.РезультатОборот
	|						КОГДА СведенияОДоходах.ВидДохода.ВходитВБазуФСС
	|							ТОГДА СведенияОДоходах.СкидкаОборот
	|						ИНАЧЕ СведенияОДоходах.РезультатОборот
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НеОблагается,
	|	СУММА(ВЫБОР
	|			КОГДА СведенияОДоходах.ВидДохода.ВходитВБазуФСС
	|					И (НЕ СведенияОДоходах.Иностранец)
	|					И СведенияОДоходах.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|				ТОГДА СведенияОДоходах.РезультатОборот - СведенияОДоходах.СкидкаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК БазаИнвалида,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА СведенияОДоходах.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|				ТОГДА ПревышениеДоходаИнвалидов.СуммаПревысившаяПредел
	|			ИНАЧЕ ПревышениеДохода.СуммаПревысившаяПредел
	|		КОНЕЦ) КАК СуммаПревысившаяПредел,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА СведенияОДоходах.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|				ТОГДА ПревышениеДоходаИнвалидов.СуммаПревысившаяПредел
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаПревысившаяПределИнвалида,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ СведенияОДоходах.ВидДохода В (ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.ПустаяСсылка), ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.РаспределятьПоБазовымНачислениям), ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.НеЯвляетсяОбъектом)))
	|				ТОГДА ВЫБОР
	|						КОГДА СведенияОДоходах.ВидДохода.ВходитВБазуФСС
	|							ТОГДА СведенияОДоходах.СкидкаОборот
	|						ИНАЧЕ СведенияОДоходах.РезультатОборот
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НеОблагаетсяНС_ПЗ,
	|	СУММА(ВЫБОР
	|			КОГДА СведенияОДоходах.ВидДохода.ВходитВБазуФСС
	|				ТОГДА СведенияОДоходах.РезультатОборот - СведенияОДоходах.СкидкаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК БазаНС_ПЗ,
	|	СУММА(ВЫБОР
	|			КОГДА СведенияОДоходах.ВидДохода.ВходитВБазуФСС
	|					И СведенияОДоходах.ИнвалидностьДляНС_ПЗ
	|				ТОГДА СведенияОДоходах.РезультатОборот - СведенияОДоходах.СкидкаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК БазаИнвалидаНС_ПЗ
	|ПОМЕСТИТЬ ВТОблагаемыеБазыПоМесяцам
	|ИЗ
	|	ВТСведенияОДоходахПоВидамТарифа КАК СведенияОДоходах
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПревышениеДохода КАК ПревышениеДохода
	|		ПО СведенияОДоходах.ФизЛицо = ПревышениеДохода.ФизЛицо
	|			И СведенияОДоходах.Период = ПревышениеДохода.Период
	|			И СведенияОДоходах.ОбособленноеПодразделение = ПревышениеДохода.ОбособленноеПодразделение
	|			И (ПревышениеДохода.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ПустаяСсылка))
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПревышениеДохода КАК ПревышениеДоходаИнвалидов
	|		ПО СведенияОДоходах.ФизЛицо = ПревышениеДоходаИнвалидов.ФизЛицо
	|			И СведенияОДоходах.Период = ПревышениеДоходаИнвалидов.Период
	|			И СведенияОДоходах.ОбособленноеПодразделение = ПревышениеДоходаИнвалидов.ОбособленноеПодразделение
	|			И (ПревышениеДоходаИнвалидов.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов))
	|ГДЕ
	|	СведенияОДоходах.ОбособленноеПодразделение = &парамОрганизация
	|	И (НЕ СведенияОДоходах.ФизЛицо В
	|				(ВЫБРАТЬ
	|					ФизлицаБезБазы.ФизЛицо
	|				ИЗ
	|					ВТФизлицаБезОблагаемойБазы КАК ФизлицаБезБазы))
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходах.Период,
	|	СведенияОДоходах.ФизЛицо";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст,"РегистрСведений.УчетнаяПолитикаНалоговыйУчет", ЗаполнениеРегламентированнойОтчетностиПереопределяемый.ИмяУчетнойПолитики()); 	
	
	#Если Клиент тогда
	ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	
	// Пособия
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПособияСоциальномуСтрахованию.Сотрудник.Физлицо КАК Физлицо,
	|	СУММА(ПособияСоциальномуСтрахованию.СтраховыеСлучаи) КАК СтраховыеСлучаи,
	|	СУММА(ПособияСоциальномуСтрахованию.СуммаСверхНорм) КАК СуммаСверхНорм,
	|	СУММА(ПособияСоциальномуСтрахованию.ОплаченныеДни) КАК ОплаченныеДни,
	|	ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета КАК ВыплатаЗаСчетФедеральногоБюджета,
	|	ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования КАК ВидПособияСоциальногоСтрахования
	|ПОМЕСТИТЬ ВТПособияСверхНорм
	|ИЗ
	|	РегистрНакопления.ПособияСоциальномуСтрахованию КАК ПособияСоциальномуСтрахованию
	|ГДЕ
	|	ПособияСоциальномуСтрахованию.Организация = &парамОрганизация
	|	И ПособияСоциальномуСтрахованию.Период МЕЖДУ &парамНачалоГода И &парамКонецОтчетногоПериода
	|	И ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования В (ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью))
	|	И ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета <> ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ПустаяСсылка)
	|	И ПособияСоциальномуСтрахованию.СуммаСверхНорм <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ПособияСоциальномуСтрахованию.Сотрудник.Физлицо,
	|	ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета,
	|	ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВыплатаЗаСчетФедеральногоБюджета,
	|	ВидПособияСоциальногоСтрахования
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПособияСоциальномуСтрахованиюОбороты.ФизЛицо КАК ФизЛицо,
	|	ПособияСоциальномуСтрахованиюОбороты.УходЗаПервымРебенком КАК УходЗаПервымРебенком,
	|	ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости КАК ВидЗанятости,
	|	СУММА(ПособияСоциальномуСтрахованиюОбороты.СтраховыеСлучаиОборот) КАК СтраховыеСлучаиОборот,
	|	СУММА(ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот) КАК СуммаВсегоОборот,
	|	СУММА(ПособияСоциальномуСтрахованиюОбороты.СуммаСверхНормОборот) КАК СуммаСверхНормОборот
	|ПОМЕСТИТЬ ВТПособияПоУходу
	|ИЗ
	|	РегистрНакопления.ПособияПоУходуЗаРебенкомДоПолутораЛет.Обороты(&парамНачалоГода, &парамКонецОтчетногоПериода, Месяц, Организация = &парамОрганизация) КАК ПособияСоциальномуСтрахованиюОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ПособияСоциальномуСтрахованиюОбороты.ФизЛицо,
	|	ПособияСоциальномуСтрахованиюОбороты.УходЗаПервымРебенком,
	|	ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	ВидЗанятости
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПособияСоциальномуСтрахованию.ФизЛицо КАК Физлицо,
	|	СУММА(ПособияСоциальномуСтрахованию.СтраховыеСлучаи) КАК СтраховыеСлучаи,
	|	СУММА(ПособияСоциальномуСтрахованию.СуммаСверхНорм) КАК СуммаСверхНорм,
	|	ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета КАК ВыплатаЗаСчетФедеральногоБюджета,
	|	ПособияСоциальномуСтрахованию.УходЗаПервымРебенком КАК УходЗаПервымРебенком
	|ПОМЕСТИТЬ ВТПособияПоУходуСверхНорм
	|ИЗ
	|	РегистрНакопления.ПособияПоУходуЗаРебенкомДоПолутораЛет КАК ПособияСоциальномуСтрахованию
	|ГДЕ
	|	ПособияСоциальномуСтрахованию.Организация = &парамОрганизация
	|	И ПособияСоциальномуСтрахованию.Период МЕЖДУ &парамНачалоГода И &парамКонецОтчетногоПериода
	|	И ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета <> ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ПустаяСсылка)
	|	И ПособияСоциальномуСтрахованию.СуммаСверхНорм <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ПособияСоциальномуСтрахованию.ФизЛицо,
	|	ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета,
	|	ПособияСоциальномуСтрахованию.УходЗаПервымРебенком
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВыплатаЗаСчетФедеральногоБюджета,
	|	УходЗаПервымРебенком";
	
	#Если Клиент тогда
	ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	
	// ----------------------------------------------------------------------------------
	// ТЕКСТЫ ЗАПРОСОВ
	
	// БазаДляНачисленияВзносов
	// Это показатели Раздела I, Таблица 3
	// Поля:
	//		П000030001003,
	//		П000030001004 
	// Описание:	
	//	Выбираем из ВТОблагаемыеБазыПоМесяцам (таблица с данными о доходах ) 
	//	данные за соответствующий месяц
	
	БазаДляНачисленияВзносовТекст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(ДоходыПоФЛ.Начислено), 0) КАК П000030001003,
	|	ЕСТЬNULL(СУММА(ДоходыПоФЛ.НеОблагается), 0) КАК П000030002003,
	|	ЕСТЬNULL(СУММА(ДоходыПоФЛ.СуммаПревысившаяПредел), 0) КАК П000030003003,
	|	ЕСТЬNULL(СУММА(ДоходыПоФЛ.БазаНС_ПЗ), 0) КАК П000060001103,
	|	ЕСТЬNULL(СУММА(ДоходыПоФЛ.БазаИнвалидаНС_ПЗ), 0) КАК П000060001104,
	|	ЕСТЬNULL(СУММА(ДоходыПоФЛ.НеОблагаетсяНС_ПЗ), 0) КАК П000060001105,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(ДоходыПоФЛ.Период) < &Месяц1
	|					ТОГДА ДоходыПоФЛ.Начислено
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000030001004,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(ДоходыПоФЛ.Период) < &Месяц2
	|					ТОГДА ДоходыПоФЛ.Начислено
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000030001005,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(ДоходыПоФЛ.Период) < &Месяц3
	|					ТОГДА ДоходыПоФЛ.Начислено
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000030001006,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(ДоходыПоФЛ.Период) < &Месяц1
	|					ТОГДА ДоходыПоФЛ.НеОблагается
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000030002004,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(ДоходыПоФЛ.Период) < &Месяц2
	|					ТОГДА ДоходыПоФЛ.НеОблагается
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000030002005,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(ДоходыПоФЛ.Период) < &Месяц3
	|					ТОГДА ДоходыПоФЛ.НеОблагается
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000030002006,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(ДоходыПоФЛ.Период) < &Месяц1
	|					ТОГДА ДоходыПоФЛ.СуммаПревысившаяПредел
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000030003004,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(ДоходыПоФЛ.Период) < &Месяц2
	|					ТОГДА ДоходыПоФЛ.СуммаПревысившаяПредел
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000030003005,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(ДоходыПоФЛ.Период) < &Месяц3
	|					ТОГДА ДоходыПоФЛ.СуммаПревысившаяПредел
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000030003006,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(ДоходыПоФЛ.Период) < &Месяц1
	|					ТОГДА ДоходыПоФЛ.БазаНС_ПЗ
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000060001303,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(ДоходыПоФЛ.Период) < &Месяц2
	|					ТОГДА ДоходыПоФЛ.БазаНС_ПЗ
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000060001403,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(ДоходыПоФЛ.Период) < &Месяц3
	|					ТОГДА ДоходыПоФЛ.БазаНС_ПЗ
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000060001503,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(ДоходыПоФЛ.Период) < &Месяц1
	|					ТОГДА ДоходыПоФЛ.БазаИнвалидаНС_ПЗ
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000060001304,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(ДоходыПоФЛ.Период) < &Месяц2
	|					ТОГДА ДоходыПоФЛ.БазаИнвалидаНС_ПЗ
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000060001404,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(ДоходыПоФЛ.Период) < &Месяц3
	|					ТОГДА ДоходыПоФЛ.БазаИнвалидаНС_ПЗ
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000060001504,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(ДоходыПоФЛ.Период) < &Месяц1
	|					ТОГДА ДоходыПоФЛ.НеОблагаетсяНС_ПЗ
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000060001305,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(ДоходыПоФЛ.Период) < &Месяц2
	|					ТОГДА ДоходыПоФЛ.НеОблагаетсяНС_ПЗ
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000060001405,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(ДоходыПоФЛ.Период) < &Месяц3
	|					ТОГДА ДоходыПоФЛ.НеОблагаетсяНС_ПЗ
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000060001505,
	|	ЕСТЬNULL(СУММА(ЕСТЬNULL(ДоходыПоФЛ.БазаИнвалида, 0) - ЕСТЬNULL(ДоходыПоФЛ.СуммаПревысившаяПределИнвалида, 0)), 0) КАК _П000030005003,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(ДоходыПоФЛ.Период) < &Месяц1
	|					ТОГДА ЕСТЬNULL(ДоходыПоФЛ.БазаИнвалида, 0) - ЕСТЬNULL(ДоходыПоФЛ.СуммаПревысившаяПределИнвалида, 0)
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК _П000030005004,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(ДоходыПоФЛ.Период) < &Месяц2
	|					ТОГДА ЕСТЬNULL(ДоходыПоФЛ.БазаИнвалида, 0) - ЕСТЬNULL(ДоходыПоФЛ.СуммаПревысившаяПределИнвалида, 0)
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК _П000030005005,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА МЕСЯЦ(ДоходыПоФЛ.Период) < &Месяц3
	|					ТОГДА ЕСТЬNULL(ДоходыПоФЛ.БазаИнвалида, 0) - ЕСТЬNULL(ДоходыПоФЛ.СуммаПревысившаяПределИнвалида, 0)
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК _П000030005006
	|ИЗ
	|	ВТОблагаемыеБазыПоМесяцам КАК ДоходыПоФЛ";
	
	// РасходыНаЦелиОбязательногоСС
	// Это итоговые суммы расходов за исключением пособия по уходу за ребенком для Таблиц 3, 6 и 11 Разделов I, II и III
	// Поля:
	//		П000020001001, ..., П000030015005  Таблицы 2   
	//		П000080001003, ..., П000080007004  Таблицы 11   
	// Описание:	
	//	Суммируются соответствующие данные из таблицы оборотов регистра накопления.ПособияСоциальномуСтрахованию 
	// 
	
	РасходыНаЦелиОбязательногоССТекст =
	"ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020001001,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.ОплаченныеДниОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020001003,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020001004,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020001005,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020002001,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.ОплаченныеДниОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020002003,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020002004,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020002005,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.ОплаченныеДниОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020003003,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020003004,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020003005,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020004001,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.ОплаченныеДниОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020004003,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020004004,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020004005,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриПостановкеНаУчетВРанниеСрокиБеременности)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020005003,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриПостановкеНаУчетВРанниеСрокиБеременности)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020005004,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриРожденииРебенка)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020006003,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриРожденииРебенка)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020006004,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ДополнительныеВыходныеДниПоУходуЗаДетьмиИнвалидами)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.ОплаченныеДниОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020010003,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ДополнительныеВыходныеДниПоУходуЗаДетьмиИнвалидами)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020010004,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020011003,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020011004,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020011005,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.ОплаченныеДниОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080001003,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080001004,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.ОплаченныеДниОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080002003,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080002004,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.ОплаченныеДниОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080004003,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080004004,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.ОплаченныеДниОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080005003,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080005004,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ДополнительныйОтпускПослеНесчастныхСлучаев)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.ОплаченныеДниОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080007003,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ДополнительныйОтпускПослеНесчастныхСлучаев)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080007004
	|ИЗ
	|	РегистрНакопления.ПособияСоциальномуСтрахованию.Обороты(&парамНачалоГода, &парамКонецОтчетногоПериода, Месяц, Организация = &парамОрганизация) КАК ПособияСоциальномуСтрахованиюОбороты";
	
	РасходыЗаСчетФедБюджетаТекст = 
	"ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Чернобыль)
	|					И ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ПособияСоциальномуСтрахованию.ОплаченныеДни
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050001007,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Чернобыль)
	|					И ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ПособияСоциальномуСтрахованию.СуммаСверхНорм
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050001008,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Чернобыль)
	|					И ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|				ТОГДА ПособияСоциальномуСтрахованию.ОплаченныеДни
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050002007,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Чернобыль)
	|					И ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|				ТОГДА ПособияСоциальномуСтрахованию.СуммаСверхНорм
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050002008,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Чернобыль)
	|					И ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью)
	|				ТОГДА ПособияСоциальномуСтрахованию.СтраховыеСлучаи
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050006007,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Чернобыль)
	|					И ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью)
	|				ТОГДА ПособияСоциальномуСтрахованию.СуммаСверхНорм
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050006008,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Маяк)
	|					И ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ПособияСоциальномуСтрахованию.ОплаченныеДни
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050001010,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Маяк)
	|					И ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ПособияСоциальномуСтрахованию.СуммаСверхНорм
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050001011,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Маяк)
	|					И ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|				ТОГДА ПособияСоциальномуСтрахованию.ОплаченныеДни
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050002010,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Маяк)
	|					И ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|				ТОГДА ПособияСоциальномуСтрахованию.СуммаСверхНорм
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050002011,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Маяк)
	|					И ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью)
	|				ТОГДА ПособияСоциальномуСтрахованию.СтраховыеСлучаи
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050006010,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Маяк)
	|					И ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью)
	|				ТОГДА ПособияСоциальномуСтрахованию.СуммаСверхНорм
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050006011,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Семипалатинск)
	|					И ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ПособияСоциальномуСтрахованию.ОплаченныеДни
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050001013,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Семипалатинск)
	|					И ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ПособияСоциальномуСтрахованию.СуммаСверхНорм
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050001014,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ПодразделенияОсобогоРиска)
	|					И ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ПособияСоциальномуСтрахованию.ОплаченныеДни
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050001016,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ПодразделенияОсобогоРиска)
	|					И ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ПособияСоциальномуСтрахованию.СуммаСверхНорм
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050001017,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ПодразделенияОсобогоРиска)
	|					И ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|				ТОГДА ПособияСоциальномуСтрахованию.ОплаченныеДни
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050002016,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ПодразделенияОсобогоРиска)
	|					И ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|				ТОГДА ПособияСоциальномуСтрахованию.СуммаСверхНорм
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050002017,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ПодразделенияОсобогоРиска)
	|					И ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью)
	|				ТОГДА ПособияСоциальномуСтрахованию.СтраховыеСлучаи
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050006016,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ПодразделенияОсобогоРиска)
	|					И ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью)
	|				ТОГДА ПособияСоциальномуСтрахованию.СуммаСверхНорм
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050006017,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ЗачетНестраховыхПериодов)
	|					И ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ПособияСоциальномуСтрахованию.ОплаченныеДни
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050001019,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ЗачетНестраховыхПериодов)
	|					И ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ПособияСоциальномуСтрахованию.СуммаСверхНорм
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050001020,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ЗачетНестраховыхПериодов)
	|					И ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|				ТОГДА ПособияСоциальномуСтрахованию.ОплаченныеДни
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050002019,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ЗачетНестраховыхПериодов)
	|					И ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|				ТОГДА ПособияСоциальномуСтрахованию.СуммаСверхНорм
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050002020
	|ИЗ
	|	ВТПособияСверхНорм КАК ПособияСоциальномуСтрахованию";
	
	ПолучателиЗаСчетФедБюджетаТекст = 
	"ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА ВсеПолучатели.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Чернобыль)
	|					И ВсеПолучатели.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ВсеПолучатели.КоличествоФизлиц
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050001006,
	|	СУММА(ВЫБОР
	|			КОГДА ВсеПолучатели.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Чернобыль)
	|					И ВсеПолучатели.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|				ТОГДА ВсеПолучатели.КоличествоФизлиц
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050002006,
	|	СУММА(ВЫБОР
	|			КОГДА ВсеПолучатели.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Чернобыль)
	|					И ВсеПолучатели.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью)
	|				ТОГДА ВсеПолучатели.КоличествоФизлиц
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050006006,
	|	СУММА(ВЫБОР
	|			КОГДА ВсеПолучатели.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Маяк)
	|					И ВсеПолучатели.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ВсеПолучатели.КоличествоФизлиц
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050001009,
	|	СУММА(ВЫБОР
	|			КОГДА ВсеПолучатели.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Маяк)
	|					И ВсеПолучатели.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|				ТОГДА ВсеПолучатели.КоличествоФизлиц
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050002009,
	|	СУММА(ВЫБОР
	|			КОГДА ВсеПолучатели.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Маяк)
	|					И ВсеПолучатели.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью)
	|				ТОГДА ВсеПолучатели.КоличествоФизлиц
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050006009,
	|	СУММА(ВЫБОР
	|			КОГДА ВсеПолучатели.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Семипалатинск)
	|					И ВсеПолучатели.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ВсеПолучатели.КоличествоФизлиц
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050001012,
	|	СУММА(ВЫБОР
	|			КОГДА ВсеПолучатели.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ПодразделенияОсобогоРиска)
	|					И ВсеПолучатели.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ВсеПолучатели.КоличествоФизлиц
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050001015,
	|	СУММА(ВЫБОР
	|			КОГДА ВсеПолучатели.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ПодразделенияОсобогоРиска)
	|					И ВсеПолучатели.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|				ТОГДА ВсеПолучатели.КоличествоФизлиц
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050002015,
	|	СУММА(ВЫБОР
	|			КОГДА ВсеПолучатели.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ПодразделенияОсобогоРиска)
	|					И ВсеПолучатели.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью)
	|				ТОГДА ВсеПолучатели.КоличествоФизлиц
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050006015,
	|	СУММА(ВЫБОР
	|			КОГДА ВсеПолучатели.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ЗачетНестраховыхПериодов)
	|					И ВсеПолучатели.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ВсеПолучатели.КоличествоФизлиц
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050001018,
	|	СУММА(ВЫБОР
	|			КОГДА ВсеПолучатели.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ЗачетНестраховыхПериодов)
	|					И ВсеПолучатели.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|				ТОГДА ВсеПолучатели.КоличествоФизлиц
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050002018
	|ИЗ
	|	(ВЫБРАТЬ
	|		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПособияСоциальномуСтрахованию.Физлицо) КАК КоличествоФизлиц,
	|		ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета КАК ВыплатаЗаСчетФедеральногоБюджета,
	|		ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования КАК ВидПособияСоциальногоСтрахования
	|	ИЗ
	|		ВТПособияСверхНорм КАК ПособияСоциальномуСтрахованию
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета,
	|		ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования) КАК ВсеПолучатели";
	
	// РасходыНаПособияПоУходу
	// Это итоговые суммы расходов на пособия по уходу за ребенком для Таблиц 2 и 7 Разделов I и II
	// Поля:
	//		П000020009001, ..., П000020013005  Таблицы 2   
	// Описание:	
	//	Выбираем данные о суммах пособий и о количестве выплат из вспомогательной таблицы ВТПособияПоУходу 
	// 
	
	РасходыНаПособияПоУходуТекст = 
	"ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеУчетаПособий.УходЗаПервымРебенком
	|					И ДанныеУчетаПособий.СуммаВсегоОборот <> 0
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020008001,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеУчетаПособий.УходЗаПервымРебенком
	|					И ДанныеУчетаПособий.СуммаВсегоОборот <> 0
	|				ТОГДА ДанныеУчетаПособий.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020008003,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеУчетаПособий.УходЗаПервымРебенком
	|				ТОГДА ДанныеУчетаПособий.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020008004,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеУчетаПособий.УходЗаПервымРебенком
	|				ТОГДА ДанныеУчетаПособий.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020008005,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.УходЗаПервымРебенком)
	|					И ДанныеУчетаПособий.СуммаВсегоОборот <> 0
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020009001,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.УходЗаПервымРебенком)
	|					И ДанныеУчетаПособий.СуммаВсегоОборот <> 0
	|				ТОГДА ДанныеУчетаПособий.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020009003,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.УходЗаПервымРебенком)
	|				ТОГДА ДанныеУчетаПособий.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020009004,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.УходЗаПервымРебенком)
	|				ТОГДА ДанныеУчетаПособий.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020009005
	|ИЗ
	|	ВТПособияПоУходу КАК ДанныеУчетаПособий";
	
	РасходыНаПособияПоУходуДополнительноТекст = 
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДанныеУчетаПособий.ФизЛицо) КАК П000020007001
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПособияСоциальномуСтрахованиюОбороты.ФизЛицо КАК ФизЛицо,
	|		СУММА(ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот) КАК СуммаВсегоОборот
	|	ИЗ
	|		ВТПособияПоУходу КАК ПособияСоциальномуСтрахованиюОбороты
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПособияСоциальномуСтрахованиюОбороты.ФизЛицо
	|	
	|	ИМЕЮЩИЕ
	|		СУММА(ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот) <> 0) КАК ДанныеУчетаПособий";
	
	РасходыПоУходуЗаСчетФедБюджетаТекст = 
	"ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА ПособияПоУходу.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Чернобыль)
	|					И ПособияПоУходу.УходЗаПервымРебенком
	|				ТОГДА ПособияПоУходу.СтраховыеСлучаи
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050004007,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияПоУходу.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Чернобыль)
	|					И ПособияПоУходу.УходЗаПервымРебенком
	|				ТОГДА ПособияПоУходу.СуммаСверхНорм
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050004008,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияПоУходу.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Чернобыль)
	|					И (НЕ ПособияПоУходу.УходЗаПервымРебенком)
	|				ТОГДА ПособияПоУходу.СтраховыеСлучаи
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050005007,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияПоУходу.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Чернобыль)
	|					И (НЕ ПособияПоУходу.УходЗаПервымРебенком)
	|				ТОГДА ПособияПоУходу.СуммаСверхНорм
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050005008,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияПоУходу.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Маяк)
	|					И ПособияПоУходу.УходЗаПервымРебенком
	|				ТОГДА ПособияПоУходу.СтраховыеСлучаи
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050004010,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияПоУходу.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Маяк)
	|					И ПособияПоУходу.УходЗаПервымРебенком
	|				ТОГДА ПособияПоУходу.СуммаСверхНорм
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050004011,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияПоУходу.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Маяк)
	|					И (НЕ ПособияПоУходу.УходЗаПервымРебенком)
	|				ТОГДА ПособияПоУходу.СтраховыеСлучаи
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050005010,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияПоУходу.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Маяк)
	|					И (НЕ ПособияПоУходу.УходЗаПервымРебенком)
	|				ТОГДА ПособияПоУходу.СуммаСверхНорм
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050005011,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияПоУходу.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ПодразделенияОсобогоРиска)
	|					И ПособияПоУходу.УходЗаПервымРебенком
	|				ТОГДА ПособияПоУходу.СтраховыеСлучаи
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050004016,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияПоУходу.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ПодразделенияОсобогоРиска)
	|					И ПособияПоУходу.УходЗаПервымРебенком
	|				ТОГДА ПособияПоУходу.СуммаСверхНорм
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050004017,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияПоУходу.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ПодразделенияОсобогоРиска)
	|					И (НЕ ПособияПоУходу.УходЗаПервымРебенком)
	|				ТОГДА ПособияПоУходу.СтраховыеСлучаи
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050005016,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияПоУходу.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ПодразделенияОсобогоРиска)
	|					И (НЕ ПособияПоУходу.УходЗаПервымРебенком)
	|				ТОГДА ПособияПоУходу.СуммаСверхНорм
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050005017
	|ИЗ
	|	ВТПособияПоУходуСверхНорм КАК ПособияПоУходу";
	
	ПолучателиПоУходуЗаСчетФедБюджетаТекст = 
	"ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА ВсеПолучатели.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Чернобыль)
	|					И ВсеПолучатели.УходЗаПервымРебенком
	|				ТОГДА ВсеПолучатели.КоличествоФизлиц
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050004006,
	|	СУММА(ВЫБОР
	|			КОГДА ВсеПолучатели.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Чернобыль)
	|					И (НЕ ВсеПолучатели.УходЗаПервымРебенком)
	|				ТОГДА ВсеПолучатели.КоличествоФизлиц
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050005006,
	|	СУММА(ВЫБОР
	|			КОГДА ВсеПолучатели.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Маяк)
	|					И ВсеПолучатели.УходЗаПервымРебенком
	|				ТОГДА ВсеПолучатели.КоличествоФизлиц
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050004009,
	|	СУММА(ВЫБОР
	|			КОГДА ВсеПолучатели.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Маяк)
	|					И (НЕ ВсеПолучатели.УходЗаПервымРебенком)
	|				ТОГДА ВсеПолучатели.КоличествоФизлиц
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050005009,
	|	СУММА(ВЫБОР
	|			КОГДА ВсеПолучатели.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ПодразделенияОсобогоРиска)
	|					И ВсеПолучатели.УходЗаПервымРебенком
	|				ТОГДА ВсеПолучатели.КоличествоФизлиц
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050004015,
	|	СУММА(ВЫБОР
	|			КОГДА ВсеПолучатели.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ПодразделенияОсобогоРиска)
	|					И (НЕ ВсеПолучатели.УходЗаПервымРебенком)
	|				ТОГДА ВсеПолучатели.КоличествоФизлиц
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050005015
	|ИЗ
	|	(ВЫБРАТЬ
	|		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПособияПоУходу.Физлицо) КАК КоличествоФизлиц,
	|		ПособияПоУходу.ВыплатаЗаСчетФедеральногоБюджета КАК ВыплатаЗаСчетФедеральногоБюджета,
	|		ПособияПоУходу.УходЗаПервымРебенком КАК УходЗаПервымРебенком
	|	ИЗ
	|		ВТПособияПоУходуСверхНорм КАК ПособияПоУходу
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПособияПоУходу.ВыплатаЗаСчетФедеральногоБюджета,
	|		ПособияПоУходу.УходЗаПервымРебенком) КАК ВсеПолучатели";
	
	ПолучателиПоУходуЗаСчетФедБюджетаДополнительноТекст = 
	"ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА ВсеПолучатели.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Чернобыль)
	|				ТОГДА ВсеПолучатели.КоличествоФизлиц
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050003006,
	|	СУММА(ВЫБОР
	|			КОГДА ВсеПолучатели.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Маяк)
	|				ТОГДА ВсеПолучатели.КоличествоФизлиц
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050003009,
	|	СУММА(ВЫБОР
	|			КОГДА ВсеПолучатели.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ПодразделенияОсобогоРиска)
	|				ТОГДА ВсеПолучатели.КоличествоФизлиц
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000050003015
	|ИЗ
	|	(ВЫБРАТЬ
	|		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПособияПоУходу.Физлицо) КАК КоличествоФизлиц,
	|		ПособияПоУходу.ВыплатаЗаСчетФедеральногоБюджета КАК ВыплатаЗаСчетФедеральногоБюджета
	|	ИЗ
	|		ВТПособияПоУходуСверхНорм КАК ПособияПоУходу
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПособияПоУходу.ВыплатаЗаСчетФедеральногоБюджета) КАК ВсеПолучатели";
	
	РасчетыСФондомТекст = 
	"ВЫБРАТЬ
	|	РасчетыПоСтраховымВзносамОстаткиИОбороты.ВидПлатежа КАК ВидПлатежа,
	|	РасчетыПоСтраховымВзносамОстаткиИОбороты.Период КАК Период,
	|	РасчетыПоСтраховымВзносамОстаткиИОбороты.ФССНачальныйОстаток,
	|	РасчетыПоСтраховымВзносамОстаткиИОбороты.ФССКонечныйОстаток,
	|	РасчетыПоСтраховымВзносамОстаткиИОбороты.ФССНесчастныеСлучаиНачальныйОстаток,
	|	РасчетыПоСтраховымВзносамОстаткиИОбороты.ФССНесчастныеСлучаиКонечныйОстаток,
	|	РасчетыПоСтраховымВзносамОстаткиИОбороты.ФССОборот,
	|	РасчетыПоСтраховымВзносамОстаткиИОбороты.ФССПриход,
	|	РасчетыПоСтраховымВзносамОстаткиИОбороты.ФССРасход,
	|	РасчетыПоСтраховымВзносамОстаткиИОбороты.ФССНесчастныеСлучаиОборот,
	|	РасчетыПоСтраховымВзносамОстаткиИОбороты.ФССНесчастныеСлучаиПриход,
	|	РасчетыПоСтраховымВзносамОстаткиИОбороты.ФССНесчастныеСлучаиРасход
	|ПОМЕСТИТЬ ВТРасчетыСФондом
	|ИЗ
	|	РегистрНакопления.РасчетыПоСтраховымВзносам.ОстаткиИОбороты(
	|			&парамНачалоГода,
	|			&парамКонецОтчетногоПериода,
	|			Месяц,
	|			,
	|			Организация = &парамОрганизация
	|				И (НЕ ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Штраф), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.ПениСам), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.ПениАкт)))) КАК РасчетыПоСтраховымВзносамОстаткиИОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(РасчетыСФондом.Период) = 1
	|						ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиНачальныйОстаток
	|					ИНАЧЕ 0
	|				КОНЕЦ) > 0
	|			ТОГДА СУММА(ВЫБОР
	|						КОГДА МЕСЯЦ(РасчетыСФондом.Период) = 1
	|							ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиНачальныйОстаток
	|						ИНАЧЕ 0
	|					КОНЕЦ)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П000070001003,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог)
	|					И МЕСЯЦ(РасчетыСФондом.Период) < &Месяц1
	|				ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070002001,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц1
	|				ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070002101,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц2
	|				ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070002201,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц3
	|				ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070002301,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогАкт)
	|				ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070003003,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НеПринято)
	|				ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070004003,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогСам)
	|				ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070005003,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.ПолученоИзФонда)
	|				ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070006003,
	|	ВЫБОР
	|		КОГДА СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(РасчетыСФондом.Период) = 1
	|						ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиНачальныйОстаток
	|					ИНАЧЕ 0
	|				КОНЕЦ) < 0
	|			ТОГДА -СУММА(ВЫБОР
	|						КОГДА МЕСЯЦ(РасчетыСФондом.Период) = 1
	|							ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиНачальныйОстаток
	|						ИНАЧЕ 0
	|					КОНЕЦ)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П000070010003,
	|	-СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию)
	|					И МЕСЯЦ(РасчетыСФондом.Период) < &Месяц1
	|				ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070011001,
	|	-СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц1
	|				ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070011101,
	|	-СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц2
	|				ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070011201,
	|	-СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц3
	|				ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070011301,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа <> ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию)
	|					И МЕСЯЦ(РасчетыСФондом.Период) < &Месяц1
	|				ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиРасход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070012001,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа <> ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц1
	|				ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиРасход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070012101,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа <> ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц2
	|				ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиРасход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070012201,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа <> ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц3
	|				ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиРасход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070012301,
	|	ВЫБОР
	|		КОГДА СУММА(ВЫБОР
	|					КОГДА РасчетыСФондом.ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогСам), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогСам))
	|							И МЕСЯЦ(РасчетыСФондом.Период) = 1
	|						ТОГДА РасчетыСФондом.ФССНачальныйОстаток
	|					КОГДА РасчетыСФондом.ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.ПолученоИзФонда), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НеПринято))
	|							И МЕСЯЦ(РасчетыСФондом.Период) = 1
	|						ТОГДА РасчетыСФондом.ФССНачальныйОстаток
	|					ИНАЧЕ 0
	|				КОНЕЦ) > 0
	|			ТОГДА СУММА(ВЫБОР
	|						КОГДА РасчетыСФондом.ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогСам), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогСам))
	|								И МЕСЯЦ(РасчетыСФондом.Период) = 1
	|							ТОГДА РасчетыСФондом.ФССНачальныйОстаток
	|						КОГДА РасчетыСФондом.ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.ПолученоИзФонда), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НеПринято))
	|								И МЕСЯЦ(РасчетыСФондом.Период) = 1
	|							ТОГДА РасчетыСФондом.ФССНачальныйОстаток
	|						ИНАЧЕ 0
	|					КОНЕЦ)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П000010001003,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог)
	|					И МЕСЯЦ(РасчетыСФондом.Период) < &Месяц1
	|				ТОГДА РасчетыСФондом.ФССПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010002101,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц1
	|				ТОГДА РасчетыСФондом.ФССПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010002301,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц2
	|				ТОГДА РасчетыСФондом.ФССПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010002401,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц3
	|				ТОГДА РасчетыСФондом.ФССПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010002501,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогАкт)
	|					И МЕСЯЦ(РасчетыСФондом.Период) < &Месяц1
	|				ТОГДА РасчетыСФондом.ФССПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010003101,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогАкт)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц1
	|				ТОГДА РасчетыСФондом.ФССПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010003301,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогАкт)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц2
	|				ТОГДА РасчетыСФондом.ФССПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010003401,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогАкт)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц3
	|				ТОГДА РасчетыСФондом.ФССПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010003501,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогСам)
	|				ТОГДА РасчетыСФондом.ФССПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010004003,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НеПринято)
	|					И МЕСЯЦ(РасчетыСФондом.Период) < &Месяц1
	|				ТОГДА РасчетыСФондом.ФССПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010005101,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НеПринято)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц1
	|				ТОГДА РасчетыСФондом.ФССПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010005301,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НеПринято)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц2
	|				ТОГДА РасчетыСФондом.ФССПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010005401,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НеПринято)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц3
	|				ТОГДА РасчетыСФондом.ФССПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010005501,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.ПолученоИзФонда)
	|					И МЕСЯЦ(РасчетыСФондом.Период) < &Месяц1
	|				ТОГДА РасчетыСФондом.ФССПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010006101,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.ПолученоИзФонда)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц1
	|				ТОГДА РасчетыСФондом.ФССПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010006301,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.ПолученоИзФонда)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц2
	|				ТОГДА РасчетыСФондом.ФССПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010006401,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.ПолученоИзФонда)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц3
	|				ТОГДА РасчетыСФондом.ФССПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010006501,
	|	ВЫБОР
	|		КОГДА СУММА(ВЫБОР
	|					КОГДА РасчетыСФондом.ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогСам), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогСам))
	|							И МЕСЯЦ(РасчетыСФондом.Период) = &ПоследнийМесяц
	|						ТОГДА РасчетыСФондом.ФССКонечныйОстаток
	|					ИНАЧЕ 0
	|				КОНЕЦ) < 0
	|			ТОГДА -СУММА(ВЫБОР
	|						КОГДА РасчетыСФондом.ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогСам), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогСам))
	|								И МЕСЯЦ(РасчетыСФондом.Период) = &ПоследнийМесяц
	|							ТОГДА РасчетыСФондом.ФССКонечныйОстаток
	|						ИНАЧЕ 0
	|					КОНЕЦ)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П000010011003,
	|	ВЫБОР
	|		КОГДА СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(РасчетыСФондом.Период) = 1
	|						ТОГДА РасчетыСФондом.ФССНачальныйОстаток
	|					ИНАЧЕ 0
	|				КОНЕЦ) < 0
	|			ТОГДА -СУММА(ВЫБОР
	|						КОГДА МЕСЯЦ(РасчетыСФондом.Период) = 1
	|							ТОГДА РасчетыСФондом.ФССНачальныйОстаток
	|						ИНАЧЕ 0
	|					КОНЕЦ)
	|		ИНАЧЕ 0
	|	КОНЕЦ - ВЫБОР
	|		КОГДА СУММА(ВЫБОР
	|					КОГДА РасчетыСФондом.ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогСам), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогСам))
	|							И МЕСЯЦ(РасчетыСФондом.Период) = 1
	|						ТОГДА РасчетыСФондом.ФССНачальныйОстаток
	|					ИНАЧЕ 0
	|				КОНЕЦ) < 0
	|			ТОГДА -СУММА(ВЫБОР
	|						КОГДА РасчетыСФондом.ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогСам), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогСам))
	|								И МЕСЯЦ(РасчетыСФондом.Период) = 1
	|							ТОГДА РасчетыСФондом.ФССНачальныйОстаток
	|						ИНАЧЕ 0
	|					КОНЕЦ)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П000010013003,
	|	ВЫБОР
	|		КОГДА СУММА(ВЫБОР
	|					КОГДА РасчетыСФондом.ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогСам), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогСам))
	|							И МЕСЯЦ(РасчетыСФондом.Период) = 1
	|						ТОГДА РасчетыСФондом.ФССНачальныйОстаток
	|					ИНАЧЕ 0
	|				КОНЕЦ) < 0
	|			ТОГДА -СУММА(ВЫБОР
	|						КОГДА РасчетыСФондом.ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогСам), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогСам))
	|								И МЕСЯЦ(РасчетыСФондом.Период) = 1
	|							ТОГДА РасчетыСФондом.ФССНачальныйОстаток
	|						ИНАЧЕ 0
	|					КОНЕЦ)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П000010014003,
	|	-СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию)
	|					И МЕСЯЦ(РасчетыСФондом.Период) < &Месяц1
	|				ТОГДА РасчетыСФондом.ФССОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010015101,
	|	-СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц1
	|				ТОГДА РасчетыСФондом.ФССОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010015301,
	|	-СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц2
	|				ТОГДА РасчетыСФондом.ФССОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010015401,
	|	-СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц3
	|				ТОГДА РасчетыСФондом.ФССОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010015501,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа <> ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию)
	|					И МЕСЯЦ(РасчетыСФондом.Период) < &Месяц1
	|				ТОГДА РасчетыСФондом.ФССРасход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010016101,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа <> ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц1
	|				ТОГДА РасчетыСФондом.ФССРасход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010016301,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа <> ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц2
	|				ТОГДА РасчетыСФондом.ФССРасход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010016401,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа <> ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц3
	|				ТОГДА РасчетыСФондом.ФССРасход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010016501
	|ИЗ
	|	ВТРасчетыСФондом КАК РасчетыСФондом";
	
	ПлатежныеПорученияТекст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	РасчетыПоСтраховымВзносам.ПлатежноеПоручениеФССНомер,
	|	РасчетыПоСтраховымВзносам.ПлатежноеПоручениеФССДата,
	|	РасчетыПоСтраховымВзносам.ДатаПлатежа КАК ДатаПлатежа
	|ИЗ
	|	Документ.РасчетыПоСтраховымВзносам КАК РасчетыПоСтраховымВзносам
	|ГДЕ
	|	РасчетыПоСтраховымВзносам.Организация = &парамОрганизация
	|	И РасчетыПоСтраховымВзносам.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог)
	|	И (НЕ РасчетыПоСтраховымВзносам.ВидОперации В (ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасчетыПоСтраховымВзносам.Начисление), ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасчетыПоСтраховымВзносам.ПособияПоСтрахованию)))
	|	И РасчетыПоСтраховымВзносам.ДатаПлатежа МЕЖДУ &парамНачалоКвартала И &парамКонецОтчетногоПериода
	|	И МЕСЯЦ(РасчетыПоСтраховымВзносам.ДатаПлатежа) = &Месяц
	|	И РасчетыПоСтраховымВзносам.ПлатежноеПоручениеФССНомер <> """"
	|	И РасчетыПоСтраховымВзносам.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаПлатежа";

	ПлатежныеПорученияНСПЗТекст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	РасчетыПоСтраховымВзносам.ДатаПлатежа КАК ДатаПлатежа,
	|	РасчетыПоСтраховымВзносам.ПлатежноеПоручениеФСС_НС_ПЗНомер,
	|	РасчетыПоСтраховымВзносам.ПлатежноеПоручениеФСС_НС_ПЗДата
	|ИЗ
	|	Документ.РасчетыПоСтраховымВзносам КАК РасчетыПоСтраховымВзносам
	|ГДЕ
	|	РасчетыПоСтраховымВзносам.Организация = &парамОрганизация
	|	И РасчетыПоСтраховымВзносам.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог)
	|	И (НЕ РасчетыПоСтраховымВзносам.ВидОперации В (ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасчетыПоСтраховымВзносам.Начисление), ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасчетыПоСтраховымВзносам.ПособияПоСтрахованию)))
	|	И РасчетыПоСтраховымВзносам.ДатаПлатежа МЕЖДУ &парамНачалоКвартала И &парамКонецОтчетногоПериода
	|	И МЕСЯЦ(РасчетыПоСтраховымВзносам.ДатаПлатежа) = &Месяц
	|	И РасчетыПоСтраховымВзносам.ПлатежноеПоручениеФСС_НС_ПЗНомер <> """"
	|	И РасчетыПоСтраховымВзносам.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаПлатежа";

	
	ЧисленностьРаботающихТекст =
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(ФизЛица.Физлицо) КАК ЧисленностьРаботников,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА ФизЛица.Физлицо.Пол = ЗНАЧЕНИЕ(Перечисление.ПолФизическихЛиц.Женский)
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК ЧисленностьЖенщин
	|ИЗ
	|	ВТФизЛицаОрганизаций КАК ФизЛица";

	ДоходыИнвалидовТекст =
	"ВЫБРАТЬ
	|	Доходы.ФизЛицо,
	|	ВЫБОР
	|		КОГДА ФИОФизлиц.ФизЛицо ЕСТЬ NULL 
	|			ТОГДА Доходы.ФизЛицо.Наименование
	|		ИНАЧЕ ФИОФизлиц.Фамилия + "" "" + ФИОФизлиц.Имя + "" "" + ФИОФизлиц.Отчество
	|	КОНЕЦ КАК П000310001002,
	|	СправкиОбИнвалидности.ДатаВыдачи КАК П000310001003,
	|	СправкиОбИнвалидности.СрокДействияСправки КАК П000310001004,
	|	СУММА(Доходы.БазаИнвалида - Доходы.СуммаПревысившаяПределИнвалида) КАК П000310001005,
	|	СУММА(ВЫБОР
	|			КОГДА МЕСЯЦ(Доходы.Период) < &Месяц1
	|				ТОГДА Доходы.БазаИнвалида - Доходы.СуммаПревысившаяПределИнвалида
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000310001006,
	|	СУММА(ВЫБОР
	|			КОГДА МЕСЯЦ(Доходы.Период) < &Месяц2
	|				ТОГДА Доходы.БазаИнвалида - Доходы.СуммаПревысившаяПределИнвалида
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000310001007,
	|	СУММА(ВЫБОР
	|			КОГДА МЕСЯЦ(Доходы.Период) < &Месяц3
	|				ТОГДА Доходы.БазаИнвалида - Доходы.СуммаПревысившаяПределИнвалида
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000310001008
	|ИЗ
	|	ВТОблагаемыеБазыПоМесяцам КАК Доходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСправкиОбИнвалидности КАК СправкиОбИнвалидности
	|		ПО Доходы.ФизЛицо = СправкиОбИнвалидности.Физлицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИОФизлиц КАК ФИОФизлиц
	|		ПО Доходы.ФизЛицо = ФИОФизлиц.ФизЛицо
	|
	|СГРУППИРОВАТЬ ПО
	|	Доходы.ФизЛицо,
	|	СправкиОбИнвалидности.ДатаВыдачи,
	|	СправкиОбИнвалидности.СрокДействияСправки,
	|	ВЫБОР
	|		КОГДА ФИОФизлиц.ФизЛицо ЕСТЬ NULL 
	|			ТОГДА Доходы.ФизЛицо.Наименование
	|		ИНАЧЕ ФИОФизлиц.Фамилия + "" "" + ФИОФизлиц.Имя + "" "" + ФИОФизлиц.Отчество
	|	КОНЕЦ
	|
	|ИМЕЮЩИЕ
	|	СУММА(Доходы.БазаИнвалида) <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	П000310001002";

	ПроверкаТекст = 
	"ВЫБРАТЬ
	|	МАКСИМУМ(ЕСТЬNULL(СоответствиеПониженныхТарифов.ВыделятьДоходыИнвалидов, ЛОЖЬ)) КАК ВыводитьРаздел3_1
	|ИЗ
	|	ВТВидыТарифныхСтавокОрганизаций КАК ВидыТарифныхСтавок
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСоответствиеПониженныхТарифов КАК СоответствиеПониженныхТарифов
	|		ПО (ГОД(ВидыТарифныхСтавок.Период) МЕЖДУ СоответствиеПониженныхТарифов.ГодС И СоответствиеПониженныхТарифов.ГодПо)
	|			И ВидыТарифныхСтавок.ВидТарифаСтраховыхВзносов = СоответствиеПониженныхТарифов.ВидТарифаСтраховыхВзносов";

	// -------------------------------------------------------------------------------
	// Вывод данных в отчет
	
	УзелТитульногоЛиста = ОпределитьСтрокуВДеревеДанныхДляЗаполнения(ДеревоПоказателей, "Титульный");
	УзелРаздел1_1 = ОпределитьСтрокуВДеревеДанныхДляЗаполнения(ДеревоПоказателей, "Раздел1_1");
	УзелРаздел1_2 = ОпределитьСтрокуВДеревеДанныхДляЗаполнения(ДеревоПоказателей, "Раздел1_2");
	УзелРаздел1_3 = ОпределитьСтрокуВДеревеДанныхДляЗаполнения(ДеревоПоказателей, "Раздел1_3");
	УзелРаздел1_4 = ОпределитьСтрокуВДеревеДанныхДляЗаполнения(ДеревоПоказателей, "Раздел1_4");
	УзелРаздел1_5 = ОпределитьСтрокуВДеревеДанныхДляЗаполнения(ДеревоПоказателей, "Раздел1_7");
	УзелРаздел2_1 = ОпределитьСтрокуВДеревеДанныхДляЗаполнения(ДеревоПоказателей, "Раздел2_1");
	УзелРаздел2_2 = ОпределитьСтрокуВДеревеДанныхДляЗаполнения(ДеревоПоказателей, "Раздел2_2");

	// расчет численности (титульный лист)
		
	ЧисленностьЖенщин = 0;
	ЧисленностьРаботников = 0;
	ЧисленностьИнвалидов = 0;
	
	Запрос.Текст = ЧисленностьРаботающихТекст;
	// этот запрос проверять на выполнимость при ограничении доступа не требуется,
	// так как проверены используемые им временные таблицы
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ЧисленностьРаботников = Выборка.ЧисленностьРаботников;
		ЧисленностьЖенщин = Выборка.ЧисленностьЖенщин;
	КонецЕсли;
	
	// Раздел I (табл. 3), Раздел II (табл. 6)
	
	Запрос.Текст = БазаДляНачисленияВзносовТекст;
	// этот запрос проверять на выполнимость при ограничении доступа не требуется,
	// так как проверены используемые им временные таблицы
	ТаблицаДоходов = Запрос.Выполнить().Выгрузить();
	СтрокаДоходов = ТаблицаДоходов[0];
	СтрокаДоходов.П000030001003 = Окр(СтрокаДоходов.П000030001003,0); // за весь отчетный период
	СтрокаДоходов.П000030001004 = Окр(СтрокаДоходов.П000030001004,0); // за предыдущий отчетный период
	СтрокаДоходов.П000030001005 = Окр(СтрокаДоходов.П000030001005,0); // по первый месяц отчетного периода
	СтрокаДоходов.П000030001006 = Окр(СтрокаДоходов.П000030001006,0); // по второй месяц отчетного периода
	СтрокаДоходов.П000030001004 = СтрокаДоходов.П000030001005 - СтрокаДоходов.П000030001004;
	СтрокаДоходов.П000030001005 = СтрокаДоходов.П000030001006 - СтрокаДоходов.П000030001005;
	СтрокаДоходов.П000030001006 = СтрокаДоходов.П000030001003 - СтрокаДоходов.П000030001006;
	СтрокаДоходов.П000030002003 = Окр(СтрокаДоходов.П000030002003,0); // за весь отчетный период
	СтрокаДоходов.П000030002004 = Окр(СтрокаДоходов.П000030002004,0); // за предыдущий отчетный период
	СтрокаДоходов.П000030002005 = Окр(СтрокаДоходов.П000030002005,0); // по первый месяц отчетного периода
	СтрокаДоходов.П000030002006 = Окр(СтрокаДоходов.П000030002006,0); // по второй месяц отчетного периода
	СтрокаДоходов.П000030002004 = СтрокаДоходов.П000030002005 - СтрокаДоходов.П000030002004;
	СтрокаДоходов.П000030002005 = СтрокаДоходов.П000030002006 - СтрокаДоходов.П000030002005;
	СтрокаДоходов.П000030002006 = СтрокаДоходов.П000030002003 - СтрокаДоходов.П000030002006;
	СтрокаДоходов.П000030003003 = Окр(СтрокаДоходов.П000030003003,0); // за весь отчетный период
	СтрокаДоходов.П000030003004 = Окр(СтрокаДоходов.П000030003004,0); // за предыдущий отчетный период
	СтрокаДоходов.П000030003005 = Окр(СтрокаДоходов.П000030003005,0); // по первый месяц отчетного периода
	СтрокаДоходов.П000030003006 = Окр(СтрокаДоходов.П000030003006,0); // по второй месяц отчетного периода
	СтрокаДоходов.П000030003004 = СтрокаДоходов.П000030003005 - СтрокаДоходов.П000030003004;
	СтрокаДоходов.П000030003005 = СтрокаДоходов.П000030003006 - СтрокаДоходов.П000030003005;
	СтрокаДоходов.П000030003006 = СтрокаДоходов.П000030003003 - СтрокаДоходов.П000030003006;
	
	СтрокаДоходов.П000060001103 = Окр(СтрокаДоходов.П000060001103,0); // за весь отчетный период
	СтрокаДоходов.П000060001303 = Окр(СтрокаДоходов.П000060001303,0); // за предыдущий отчетный период
	СтрокаДоходов.П000060001403 = Окр(СтрокаДоходов.П000060001403,0); // по первый месяц отчетного периода
	СтрокаДоходов.П000060001503 = Окр(СтрокаДоходов.П000060001503,0); // по второй месяц отчетного периода
	СтрокаДоходов.П000060001303 = СтрокаДоходов.П000060001403 - СтрокаДоходов.П000060001303;
	СтрокаДоходов.П000060001403 = СтрокаДоходов.П000060001503 - СтрокаДоходов.П000060001403;
	СтрокаДоходов.П000060001503 = СтрокаДоходов.П000060001103 - СтрокаДоходов.П000060001503;
	СтрокаДоходов.П000060001104 = Окр(СтрокаДоходов.П000060001104,0); // за весь отчетный период
	СтрокаДоходов.П000060001304 = Окр(СтрокаДоходов.П000060001304,0); // за предыдущий отчетный период
	СтрокаДоходов.П000060001404 = Окр(СтрокаДоходов.П000060001404,0); // по первый месяц отчетного периода
	СтрокаДоходов.П000060001504 = Окр(СтрокаДоходов.П000060001504,0); // по второй месяц отчетного периода
	СтрокаДоходов.П000060001304 = СтрокаДоходов.П000060001404 - СтрокаДоходов.П000060001304;
	СтрокаДоходов.П000060001404 = СтрокаДоходов.П000060001504 - СтрокаДоходов.П000060001404;
	СтрокаДоходов.П000060001504 = СтрокаДоходов.П000060001104 - СтрокаДоходов.П000060001504;
	СтрокаДоходов.П000060001105 = Окр(СтрокаДоходов.П000060001105,0); // за весь отчетный период
	СтрокаДоходов.П000060001305 = Окр(СтрокаДоходов.П000060001305,0); // за предыдущий отчетный период
	СтрокаДоходов.П000060001405 = Окр(СтрокаДоходов.П000060001405,0); // по первый месяц отчетного периода
	СтрокаДоходов.П000060001505 = Окр(СтрокаДоходов.П000060001505,0); // по второй месяц отчетного периода
	СтрокаДоходов.П000060001305 = СтрокаДоходов.П000060001405 - СтрокаДоходов.П000060001305;
	СтрокаДоходов.П000060001405 = СтрокаДоходов.П000060001505 - СтрокаДоходов.П000060001405;
	СтрокаДоходов.П000060001505 = СтрокаДоходов.П000060001105 - СтрокаДоходов.П000060001505;
	
	Для каждого Колонка Из ТаблицаДоходов.Колонки Цикл
		Если Лев(Колонка.Имя,3) = "П00" Тогда
			ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел1_3, Колонка.Имя, СтрокаДоходов[Колонка.Имя]);
		КонецЕсли;
	КонецЦикла;
	
	// Раздел I (табл 3.1)
	
	Запрос.Текст = ДоходыИнвалидовТекст;
	// этот запрос проверять на выполнимость при ограничении доступа не требуется,
	// так как проверены используемые им временные таблицы
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда // не было инвалидов совсем
		
		Запрос.Текст = ПроверкаТекст;
		// этот запрос проверять на выполнимость при ограничении доступа не требуется,
		// так как проверены используемые им временные таблицы
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() И Не Выборка.ВыводитьРаздел3_1 Тогда // раздел 3.1 НЕ выводим для льготных тарифов, контрольное соотношение №6 по разделу "Таблица 3.1 «Сведения, необходимые для применения плательщиками страховых взносов пониженного тарифа страховых взносов, установленного частью 2 статьи 58 Федерального закона от 24 июля 2009 г. № 212-ФЗ»" 
			ЧисленностьИнвалидов = Результат.Выбрать().Количество();  // контрольное соотношение №7 по разделу "Информационные показатели титульного листа" 
		Иначе 	
			ВременнаяТаблица = Результат.Выгрузить();
			ВременнаяТаблица.Индексы.Добавить("ФизЛицо");
			ЧисленностьИнвалидов = ВременнаяТаблица.Количество();  // контрольное соотношение №5 по разделу "Таблица 3.1 «Сведения, необходимые для применения плательщиками страховых взносов пониженного тарифа страховых взносов, установленного частью 2 статьи 58 Федерального закона от 24 июля 2009 г. № 212-ФЗ»"
			// дополнительная обработка в целях округления
			ОкруглитьСлагаемыеПоСумме(ВременнаяТаблица,"П000310001005", Окр(СтрокаДоходов._П000030005003,0)); // за весь отчетный период
			ОкруглитьСлагаемыеПоСумме(ВременнаяТаблица,"П000310001006", Окр(СтрокаДоходов._П000030005004,0)); // за предыдущий отчетный период
			ОкруглитьСлагаемыеПоСумме(ВременнаяТаблица,"П000310001007", Окр(СтрокаДоходов._П000030005005,0)); // по первый месяц отчетного периода
			ОкруглитьСлагаемыеПоСумме(ВременнаяТаблица,"П000310001008", Окр(СтрокаДоходов._П000030005006,0)); // по второй месяц отчетного периода
			Для каждого СтрокаТЗ Из ВременнаяТаблица Цикл
				СтрокаТЗ.П000310001006 = СтрокаТЗ.П000310001007 - СтрокаТЗ.П000310001006;
				СтрокаТЗ.П000310001007 = СтрокаТЗ.П000310001008 - СтрокаТЗ.П000310001007;
				СтрокаТЗ.П000310001008 = СтрокаТЗ.П000310001005 - СтрокаТЗ.П000310001008;
			КонецЦикла;
			ВывестиТаблицуДанныхВДеревоПоказателей(УзелРаздел1_4,ВременнаяТаблица, Истина, "П0003100010");
		КонецЕсли;
		
	КонецЕсли;	
	
	ЧисленностьРаботников = Макс(ЧисленностьРаботников,ЧисленностьЖенщин);		// контрольное соотношение №1 по разделу "Информационные показатели титульного листа"
	ЧисленностьРаботников = Макс(ЧисленностьРаботников,ЧисленностьИнвалидов);	// контрольное соотношение №2 по разделу "Информационные показатели титульного листа"
	ВывестиЗначениеВГруппуЯчеек(Формат(ЧисленностьРаботников,"ЧЦ=6; ЧДЦ=0; ЧГ=0"), УзелТитульногоЛиста, "ЧислРаботников", 6, "_");
	ВывестиЗначениеВГруппуЯчеек(Формат(ЧисленностьЖенщин,"ЧЦ=6; ЧДЦ=0; ЧГ=0"), УзелТитульногоЛиста, "ЧислЖенщин", 6, "_");
	ВывестиЗначениеВГруппуЯчеек(Формат(ЧисленностьИнвалидов,"ЧЦ=6; ЧДЦ=0; ЧГ=0"), УзелТитульногоЛиста, "ЧислИнвалидов", 6, "_");
	
	// РАСХОДЫ НА ЦЕЛИ ОБЯЗАТЕЛЬНОГО СОЦИАЛЬНОГО СТРАХОВАНИЯ С НАЧАЛА ГОДА
	
	// Раздел I (табл 2) и Раздел II (табл 8)
	
	ДанныеОРасходах = Новый Структура;
	
	Запрос.Текст = РасходыНаЦелиОбязательногоССТекст;
	#Если Клиент тогда
	ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		ТаблицаРезультатовБЛ = Запрос.Выполнить().Выгрузить();
	Исключение
		#Если Клиент тогда
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;

	Если ТаблицаРезультатовБЛ.Количество() > 0 Тогда
		Для каждого Колонка Из ТаблицаРезультатовБЛ.Колонки Цикл
			ИмяКолонки = Колонка.Имя;
			ДанныеОРасходах.Вставить(ИмяКолонки,ТаблицаРезультатовБЛ[0][ИмяКолонки])
		КонецЦикла;
	КонецЕсли;
	
	Запрос.Текст = РасходыНаПособияПоУходуТекст;
	// этот запрос проверять на выполнимость при ограничении доступа не требуется,
	// так как проверены используемые им временные таблицы
	ТаблицаРезультатовБЛ = Запрос.Выполнить().Выгрузить();
	
	Если ТаблицаРезультатовБЛ.Количество() > 0 Тогда
		Для каждого Колонка Из ТаблицаРезультатовБЛ.Колонки Цикл
			ИмяКолонки = Колонка.Имя;
			ДанныеОРасходах.Вставить(ИмяКолонки,ТаблицаРезультатовБЛ[0][ИмяКолонки])
		КонецЦикла;
	КонецЕсли;
	
	Запрос.Текст = РасходыНаПособияПоУходуДополнительноТекст;
	// этот запрос проверять на выполнимость при ограничении доступа не требуется,
	// так как проверены используемые им временные таблицы
	ТаблицаРезультатовБЛ = Запрос.Выполнить().Выгрузить();
	
	Если ТаблицаРезультатовБЛ.Количество() > 0 Тогда
		Для каждого Колонка Из ТаблицаРезультатовБЛ.Колонки Цикл
			ИмяКолонки = Колонка.Имя;
			ДанныеОРасходах.Вставить(ИмяКолонки,ТаблицаРезультатовБЛ[0][ИмяКолонки])
		КонецЦикла;
	КонецЕсли;
	
	Для каждого КлючИЗначение Из ДанныеОРасходах Цикл
		ИмяКолонки = КлючИЗначение.Ключ;
		Если Найти(ИмяКолонки,"_") = 0 Тогда
			Если Найти(Колонка.Имя,"П00002") = 0 Тогда
				УзелРаздела = УзелРаздел2_2
			Иначе
				УзелРаздела = УзелРаздел1_2
			КонецЕсли;
			ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздела, ИмяКолонки, КлючИЗначение.Значение);
		КонецЕсли;
	КонецЦикла;
	
	// Раздел I (табл 5)
	
	// данные по всем налоговым режимам
	
	// эти запросы проверять на выполнимость при ограничении доступа не требуется,
	// так как проверены используемые ими временные таблицы
	
	Запрос.Текст = РасходыЗаСчетФедБюджетаТекст;
	ВывестиРезультатЗапросаВДеревоПоказателей(УзелРаздел1_5, Запрос.Выполнить());

	Запрос.Текст = ПолучателиЗаСчетФедБюджетаТекст;
	ВывестиРезультатЗапросаВДеревоПоказателей(УзелРаздел1_5, Запрос.Выполнить());

	Запрос.Текст = РасходыПоУходуЗаСчетФедБюджетаТекст;
	ВывестиРезультатЗапросаВДеревоПоказателей(УзелРаздел1_5, Запрос.Выполнить());

	Запрос.Текст = ПолучателиПоУходуЗаСчетФедБюджетаТекст;
	ВывестиРезультатЗапросаВДеревоПоказателей(УзелРаздел1_5, Запрос.Выполнить());

	Запрос.Текст = ПолучателиПоУходуЗаСчетФедБюджетаДополнительноТекст;
	ВывестиРезультатЗапросаВДеревоПоказателей(УзелРаздел1_5, Запрос.Выполнить());

	// РАСЧЕТЫ ПО СРЕДСТВАМ ОБЯЗАТЕЛЬНОГО СОЦИАЛЬНОГО СТРАХОВАНИЯ 
	
	// Раздел I (табл. 1) и Раздел II (табл 7)
	
	// Заполняем по данным учета расчетов с фондом
	
	Запрос.Текст = РасчетыСФондомТекст;
	#Если Клиент тогда
	ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		ТаблицаРезультатов = Запрос.Выполнить().Выгрузить();
	Исключение
		#Если Клиент тогда
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	ДанныеОРасчетах = Новый Структура;
	Если ТаблицаРезультатов.Количество() > 0 Тогда
		Для каждого Колонка Из ТаблицаРезультатов.Колонки Цикл
			ИмяКолонки = Колонка.Имя;
			ДанныеОРасчетах.Вставить(ИмяКолонки,ТаблицаРезультатов[0][ИмяКолонки])
		КонецЦикла;
	КонецЕсли;
	Для каждого КлючИЗначение Из ДанныеОРасчетах Цикл
		ИмяКолонки = КлючИЗначение.Ключ;
		Если Найти(ИмяКолонки,"_") = 0 Тогда
			Если Найти(Колонка.Имя,"П00001") = 0 Тогда
				УзелРаздела = УзелРаздел2_2
			Иначе
				УзелРаздела = УзелРаздел1_2
			КонецЕсли;
			ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздела, ИмяКолонки, КлючИЗначение.Значение);
		КонецЕсли;
	КонецЦикла;
	
	Запрос.Текст = ПлатежныеПорученияТекст;
	Для Сч = 1 По 3 Цикл
		Запрос.УстановитьПараметр("Месяц", Месяц(НачалоТекущегоКвартала) + Сч - 1);
		Если Сч = 1 Тогда
			#Если Клиент тогда
				ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
			#КонецЕсли
			Попытка
				Результат = Запрос.Выполнить();
			Исключение
				#Если Клиент тогда
					ИнформацияОбОшибке = ИнформацияОбОшибке();
					ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
				#КонецЕсли
				Возврат ПустоеДерево;
			КонецПопытки;
		Иначе	
			Результат = Запрос.Выполнить();
		КонецЕсли;
		
		Если Результат.Пустой() Тогда
			Продолжить;
		КонецЕсли;
		СтрокаРезультата = Результат.Выгрузить()[0];
		ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел1_2,"П000010016" + строка(Сч + 2) +"21", СтрокаРезультата.ПлатежноеПоручениеФССНомер);
		ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел1_2,"П000010016" + строка(Сч + 2) +"11", СтрокаРезультата.ПлатежноеПоручениеФССДата);
	КонецЦикла;
	
	Запрос.Текст = ПлатежныеПорученияНСПЗТекст;
	Для Сч = 1 По 3 Цикл
		Запрос.УстановитьПараметр("Месяц", Месяц(НачалоТекущегоКвартала) + Сч - 1);
		Если Сч = 1 Тогда
			#Если Клиент тогда
			ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
			#КонецЕсли
			Попытка
				Результат = Запрос.Выполнить();
			Исключение
				#Если Клиент тогда
				ИнформацияОбОшибке = ИнформацияОбОшибке();
				ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
				#КонецЕсли
				Возврат ПустоеДерево;
			КонецПопытки;
		Иначе	
			Результат = Запрос.Выполнить();
		КонецЕсли;
		
		Если Результат.Пустой() Тогда
			Продолжить;
		КонецЕсли;
		СтрокаРезультата = Результат.Выгрузить()[0];
		ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел1_2,"П000070012" + строка(Сч) +"05", СтрокаРезультата.ПлатежноеПоручениеФСС_НС_ПЗНомер);
		ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел1_2,"П000070012" + строка(Сч) +"04", СтрокаРезультата.ПлатежноеПоручениеФСС_НС_ПЗДата);
	КонецЦикла;
	
	Возврат ДеревоПоказателей;
	
КонецФункции // ЗначенияПоказателей_4ФСС_2011()

// Возвращает значения показателей отчета Расчетная ведомость 4-ФСС
// для формы образца 2010 года, вычисленные по данным ИБ
//
// Параметры:
//  ПараметрыОтчета - структура, содержащая значения ключевых реквизитов заполняемого отчета. 
//		Структура содержит, как минимум, следующее:
//			Организация, тип СправочникСсылка.Организации
//			ДатаНачалаПериода, тип Дата
//			ДатаОкончанияПериода, тип Дата
//			ДатаПодписи, тип Дата
//			Периодичность, тип ПеречислениеСсылка.Периодичность
//
// Возвращаемое значение:
//	ДеревоЗначений с колонками «Имя" и «Значение"
//
Функция ЗначенияПоказателей_4ФСС_2010(ПараметрыОтчета)
	
	
	ДеревоПоказателей = Новый ДеревоЗначений;
	ДеревоПоказателей.Колонки.Добавить("Имя");
	ДеревоПоказателей.Колонки.Добавить("Значение");
	
	ПустоеДерево = Неопределено;
	
	ДатаКонцаПериодаОтчета = ПараметрыОтчета.ДатаОкончанияПериода;
	Организация = ПараметрыОтчета.Организация;
	ТочностьЕдиницыИзмерения = 2;
	Если ПараметрыОтчета.Свойство("ТочностьЕдиницыИзмерения",ТочностьЕдиницыИзмерения) = Неопределено Тогда
		ТочностьЕдиницыИзмерения = 2;
	КонецЕсли;
	ЕдиницаИзмерения = Перечисления.ПорядкиОкругленияОтчетности.ПустаяСсылка();
	Если ПараметрыОтчета.Свойство("ЕдиницаИзмерения",ЕдиницаИзмерения) = Неопределено Тогда
		ЕдиницаИзмерения = Перечисления.ПорядкиОкругленияОтчетности.ПустаяСсылка();
	КонецЕсли;
	Делитель = ПреобразоватьЕдиницуИзмеренияВЧисло(ЕдиницаИзмерения);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("парамОрганизация",			Организация);
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация",	ОбщегоНазначения.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("парамНачалоГода",			НачалоГода(ДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("парамКонецОтчетногоПериода",	КонецДня(ДатаКонцаПериодаОтчета));
	НачалоТекущегоКвартала = НачалоКвартала(ДатаКонцаПериодаОтчета);
	Запрос.УстановитьПараметр("парамНачалоКвартала",		НачалоТекущегоКвартала);
	Запрос.УстановитьПараметр("Месяц1",						Месяц(НачалоТекущегоКвартала));
	Запрос.УстановитьПараметр("Месяц2",						Месяц(НачалоТекущегоКвартала) + 1);
	Запрос.УстановитьПараметр("Месяц3",						Месяц(НачалоТекущегоКвартала) + 2);
	Запрос.УстановитьПараметр("ПоследнийМесяц",				Месяц(ДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("Делитель",					Делитель);
	
	// ----------------------------------------------------------------------------------
	// ФОРМИРОВАНИЕ ВРЕМЕННЫХ ТАБЛИЦ
	
	// конец месяца налогового периода
	КонецМесяца = КонецМесяца(НачалоГода(ДатаКонцаПериодаОтчета));
	// первый месяц
	ПериодыТекст = "ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ")КАК Период ПОМЕСТИТЬ ВТПериоды";
	// прибавим остальные месяцы
	Для Сч = 2 По Месяц(ДатаКонцаПериодаОтчета) Цикл
		КонецМесяца = КонецМесяца(КонецМесяца+1);
		ПериодыТекст = ПериодыТекст +" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ")";
	КонецЦикла;
	Запрос.Текст = ПериодыТекст;
	МассивЗапросов = Новый Массив;
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Запрос.Выполнить();
	
	// Таблица ВТУчетнаяПолитикаНалоговыйУчет - это список месяцев, с параметрами уч.политики:
	// Поля:
	//		Месяц - номер месяца налогового периода,
	//		УСН, 
	//		УплачиватьДобровольныеВзносыВФСС 
	// Описание:	
	//	Выбираем даты из ВТПериоды (таблица - список периодов с начала года по текущий период)
	//	Соединение с "псевдосрезом" последних регистра УчетнаяПолитикаНалоговыйУчет
	//	по равенству периодов
	
	УчетнаяПолитикаНалоговыйУчетТекст = 
	"ВЫБРАТЬ
	|	МЕСЯЦ(Периоды.Период) КАК Месяц,
	|	""поле УСН"" КАК УСН
	|ПОМЕСТИТЬ ВТУчетнаяПолитикаНалоговыйУчет
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период КАК Период,
	|		МАКСИМУМ(УчетнаяПолитикаНалоговыйУчет.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВТПериоды КАК Периоды
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаНалоговыйУчет
	|			ПО Периоды.Период >= УчетнаяПолитикаНалоговыйУчет.Период
	|				И (УчетнаяПолитикаНалоговыйУчет.Организация = &парамГоловнаяОрганизация)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период) КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаНалоговыйУчет
	|		ПО Периоды.ПериодРегистра = УчетнаяПолитикаНалоговыйУчет.Период
	|			И (УчетнаяПолитикаНалоговыйУчет.Организация = &парамГоловнаяОрганизация)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Месяц";	
	Запрос.Текст = ЗаполнениеРегламентированнойОтчетностиПереопределяемый.УстановитьНазваниеРегистраУчетнойПолитикиСтраховыхВзносов(СтрЗаменить(УчетнаяПолитикаНалоговыйУчетТекст, """поле УСН""", ЗаполнениеРегламентированнойОтчетностиПереопределяемый.ТекстПоляУСН4аФСС()));
	Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(СтраховыеВзносыСведенияОДоходахОбороты.Период, МЕСЯЦ) КАК Период,
	|	СтраховыеВзносыСведенияОДоходахОбороты.ФизЛицо КАК ФизЛицо,
	|	СтраховыеВзносыСведенияОДоходахОбороты.ВидДохода КАК ВидДохода,
	|	СтраховыеВзносыСведенияОДоходахОбороты.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	|	СтраховыеВзносыСведенияОДоходахОбороты.РезультатОборот,
	|	СтраховыеВзносыСведенияОДоходахОбороты.СкидкаОборот,
	|	СтраховыеВзносыСведенияОДоходахОбороты.ОблагаетсяЕНВД
	|ПОМЕСТИТЬ ВТСведенияОДоходах
	|ИЗ
	|	РегистрНакопления.СтраховыеВзносыСведенияОДоходах.Обороты(&парамНачалоГода, &парамКонецОтчетногоПериода, МЕСЯЦ, Организация = &парамГоловнаяОрганизация) КАК СтраховыеВзносыСведенияОДоходахОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	ОбособленноеПодразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОДоходах.ФизЛицо КАК ФизЛицо
	|ПОМЕСТИТЬ ВТФизлицаБезОблагаемойБазы
	|ИЗ
	|	ВТСведенияОДоходах КАК СведенияОДоходах
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходах.ФизЛицо
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВЫБОР
	|			КОГДА СведенияОДоходах.ВидДохода.ВходитВБазуФСС
	|				ТОГДА СведенияОДоходах.РезультатОборот - СведенияОДоходах.СкидкаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) < 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ) КАК Период,
	|	СведенияОбИнвалидностиФизлиц.Физлицо КАК Физлицо
	|ПОМЕСТИТЬ ВТИнвалидностьФизлиц
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период КАК Период,
	|		СведенияОбИнвалидностиФизлиц.Физлицо КАК Физлицо,
	|		МАКСИМУМ(СведенияОбИнвалидностиФизлиц.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВТПериоды КАК Периоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК СведенияОбИнвалидностиФизлиц
	|			ПО Периоды.Период >= СведенияОбИнвалидностиФизлиц.Период
	|	ГДЕ
	|		СведенияОбИнвалидностиФизлиц.Физлицо В
	|				(ВЫБРАТЬ
	|					НачисленныеСуммы.ФизЛицо
	|				ИЗ
	|					ВТСведенияОДоходах КАК НачисленныеСуммы)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СведенияОбИнвалидностиФизлиц.Физлицо,
	|		Периоды.Период) КАК Периоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК СведенияОбИнвалидностиФизлиц
	|		ПО (СведенияОбИнвалидностиФизлиц.Период = Периоды.ПериодРегистра)
	|			И (СведенияОбИнвалидностиФизлиц.Физлицо = Периоды.Физлицо)
	|ГДЕ
	|	СведенияОбИнвалидностиФизлиц.Инвалидность
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СрезПоследнихДат.ПериодРегистрации КАК Период,
	|	СрезПоследнихДат.Физлицо КАК Физлицо,
	|	ГражданствоФизЛиц.НеИмеетПравоНаМедицинскоеСтрахование,
	|	ГражданствоФизЛиц.НеИмеетПравоНаПенсию
	|ПОМЕСТИТЬ ВТГражданство
	|ИЗ
	|	(ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ) КАК ПериодРегистрации,
	|		ГражданствоФизЛиц.ФизЛицо КАК Физлицо,
	|		МАКСИМУМ(ГражданствоФизЛиц.Период) КАК Период
	|	ИЗ
	|		ВТПериоды КАК Периоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|			ПО Периоды.Период >= ГражданствоФизЛиц.Период
	|	ГДЕ
	|		ГражданствоФизЛиц.ФизЛицо В
	|				(ВЫБРАТЬ
	|					Организации.ФизЛицо
	|				ИЗ
	|					ВТСведенияОДоходах КАК Организации)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ГражданствоФизЛиц.ФизЛицо,
	|		Периоды.Период) КАК СрезПоследнихДат
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|		ПО СрезПоследнихДат.Период = ГражданствоФизЛиц.Период
	|			И СрезПоследнихДат.Физлицо = ГражданствоФизЛиц.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ПредельнаяВеличинаБазыСтраховыхВзносов.Размер, 0) КАК Размер,
	|	НАЧАЛОПЕРИОДА(ДатыПоследнихДвижений.ПериодРегистрации, МЕСЯЦ) КАК Период
	|ПОМЕСТИТЬ ВТПредельнаяВеличина
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(ПредельнаяВеличинаБазыСтраховыхВзносов.Период) КАК Период,
	|		Периоды.Период КАК ПериодРегистрации
	|	ИЗ
	|		ВТПериоды КАК Периоды
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПредельнаяВеличинаБазыСтраховыхВзносов КАК ПредельнаяВеличинаБазыСтраховыхВзносов
	|			ПО Периоды.Период >= ПредельнаяВеличинаБазыСтраховыхВзносов.Период
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период) КАК ДатыПоследнихДвижений
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПредельнаяВеличинаБазыСтраховыхВзносов КАК ПредельнаяВеличинаБазыСтраховыхВзносов
	|		ПО ДатыПоследнихДвижений.Период = ПредельнаяВеличинаБазыСтраховыхВзносов.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА СУММА(ВЫБОР
	|						КОГДА СведенияОДоходах.ОблагаетсяЕНВД
	|							ТОГДА СведенияОДоходах.РезультатОборот
	|						ИНАЧЕ 0
	|					КОНЕЦ) > 0
	|				И СУММА(ВЫБОР
	|						КОГДА (НЕ СведенияОДоходах.ОблагаетсяЕНВД)
	|							ТОГДА СведенияОДоходах.РезультатОборот
	|						ИНАЧЕ 0
	|					КОНЕЦ) = 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ТолькоЕНВД
	|ПОМЕСТИТЬ ВТВидыДеятельности
	|ИЗ
	|	ВТСведенияОДоходах КАК СведенияОДоходах
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ) КАК Период,
	|	ВЫБОР
	|		КОГДА ВидыДеятельности.ТолькоЕНВД
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|		КОГДА УчетнаяПолитикаНалоговыйУчет.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.УпрощенныйНалоговыйРежим)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|		ИНАЧЕ ЕСТЬNULL(УчетнаяПолитикаНалоговыйУчет.ВидТарифаСтраховыхВзносов, ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОбщийНалоговыйРежим))
	|	КОНЕЦ КАК ВидТарифаСтраховыхВзносов
	|ПОМЕСТИТЬ ВТВидыТарифныхСтавокОрганизаций
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период КАК Период,
	|		УчетнаяПолитикаНалоговыйУчет.Организация КАК Организация,
	|		МАКСИМУМ(УчетнаяПолитикаНалоговыйУчет.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВТПериоды КАК Периоды
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаНалоговыйУчет
	|			ПО Периоды.Период >= УчетнаяПолитикаНалоговыйУчет.Период
	|				И (УчетнаяПолитикаНалоговыйУчет.Организация = &парамГоловнаяОрганизация)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период,
	|		УчетнаяПолитикаНалоговыйУчет.Организация) КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаНалоговыйУчет
	|		ПО Периоды.ПериодРегистра = УчетнаяПолитикаНалоговыйУчет.Период
	|			И Периоды.Организация = УчетнаяПолитикаНалоговыйУчет.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВидыДеятельности КАК ВидыДеятельности
	|		ПО (ИСТИНА)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтраховыеВзносыСведенияОДоходах.Период КАК Период,
	|	СтраховыеВзносыСведенияОДоходах.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	|	СтраховыеВзносыСведенияОДоходах.ФизЛицо КАК ФизЛицо,
	|	СтраховыеВзносыСведенияОДоходах.ВидДохода,
	|	ВЫБОР
	|		КОГДА Инвалиды.Физлицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ВидыТарифныхСтавок.ВидТарифаСтраховыхВзносов В (ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД), ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.УпрощенныйНалоговыйРежим))
	|						ТОГДА ВидыТарифныхСтавок.ВидТарифаСтраховыхВзносов
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|				КОНЕЦ
	|		КОГДА СтраховыеВзносыСведенияОДоходах.ОблагаетсяЕНВД
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|		ИНАЧЕ ВидыТарифныхСтавок.ВидТарифаСтраховыхВзносов
	|	КОНЕЦ КАК ВидТарифаСтраховыхВзносов,
	|	СтраховыеВзносыСведенияОДоходах.РезультатОборот,
	|	СтраховыеВзносыСведенияОДоходах.СкидкаОборот
	|ПОМЕСТИТЬ ВТСведенияОДоходахПоВидамТарифа
	|ИЗ
	|	ВТСведенияОДоходах КАК СтраховыеВзносыСведенияОДоходах
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИнвалидностьФизлиц КАК Инвалиды
	|		ПО СтраховыеВзносыСведенияОДоходах.Период = Инвалиды.Период
	|			И СтраховыеВзносыСведенияОДоходах.ФизЛицо = Инвалиды.Физлицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВидыТарифныхСтавокОрганизаций КАК ВидыТарифныхСтавок
	|		ПО СтраховыеВзносыСведенияОДоходах.Период = ВидыТарифныхСтавок.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	Период,
	|	ОбособленноеПодразделение,
	|	ВидТарифаСтраховыхВзносов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОДоходах.ФизЛицо КАК ФизЛицо,
	|	НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ) КАК Период,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(Гражданство.НеИмеетПравоНаПенсию, ЛОЖЬ)
	|				ТОГДА 0
	|			КОГДА СведенияОДоходах.ВидДохода.ВходитВБазуФСС
	|				ТОГДА СведенияОДоходах.РезультатОборот - СведенияОДоходах.СкидкаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЗаГод,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(Гражданство.НеИмеетПравоНаПенсию, ЛОЖЬ)
	|				ТОГДА 0
	|			КОГДА НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ) = СведенияОДоходах.Период
	|					И СведенияОДоходах.ВидДохода.ВходитВБазуФСС
	|				ТОГДА СведенияОДоходах.РезультатОборот - СведенияОДоходах.СкидкаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЗаМесяц
	|ПОМЕСТИТЬ ВТБазаНарастающимИтогом
	|ИЗ
	|	ВТПериоды КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОДоходах КАК СведенияОДоходах
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТГражданство КАК Гражданство
	|			ПО СведенияОДоходах.Период = Гражданство.Период
	|				И СведенияОДоходах.ФизЛицо = Гражданство.Физлицо
	|		ПО (СведенияОДоходах.Период МЕЖДУ НАЧАЛОПЕРИОДА(Периоды.Период, ГОД) И Периоды.Период)
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходах.ФизЛицо,
	|	Периоды.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОДоходах.ФизЛицо КАК ФизЛицо,
	|	СведенияОДоходах.Период,
	|	СведенияОДоходах.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(Гражданство.НеИмеетПравоНаПенсию, ЛОЖЬ)
	|				ТОГДА 0
	|			КОГДА СведенияОДоходах.ВидДохода.ВходитВБазуФСС
	|				ТОГДА СведенияОДоходах.РезультатОборот - СведенияОДоходах.СкидкаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЗаМесяц,
	|	СведенияОДоходах.ВидТарифаСтраховыхВзносов
	|ПОМЕСТИТЬ ВТБазаЗаМесяцПоОбособленноеПодразделение
	|ИЗ
	|	ВТСведенияОДоходахПоВидамТарифа КАК СведенияОДоходах
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТГражданство КАК Гражданство
	|		ПО СведенияОДоходах.Период = Гражданство.Период
	|			И СведенияОДоходах.ФизЛицо = Гражданство.Физлицо
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходах.ФизЛицо,
	|	СведенияОДоходах.ОбособленноеПодразделение,
	|	СведенияОДоходах.Период,
	|	СведенияОДоходах.ВидТарифаСтраховыхВзносов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОДоходах.ФизЛицо КАК ФизЛицо,
	|	СведенияОДоходах.Период,
	|	МАКСИМУМ(СведенияОДоходах.ЗаМесяц) КАК ЗаМесяц
	|ПОМЕСТИТЬ ВТМаксБазаЗаМесяц
	|ИЗ
	|	ВТБазаЗаМесяцПоОбособленноеПодразделение КАК СведенияОДоходах
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходах.ФизЛицо,
	|	СведенияОДоходах.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОДоходах.ФизЛицо КАК ФизЛицо,
	|	СведенияОДоходах.Период КАК Период,
	|	СведенияОДоходах.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	|	МАКСИМУМ(БазаЗаМесяцПоОбособленным.ВидТарифаСтраховыхВзносов) КАК ВидТарифаСтраховыхВзносов
	|ПОМЕСТИТЬ ВТОбособленноеПодразделениеМаксБазы
	|ИЗ
	|	(ВЫБРАТЬ
	|		СведенияОДоходах.ФизЛицо КАК ФизЛицо,
	|		СведенияОДоходах.Период КАК Период,
	|		СведенияОДоходах.ЗаМесяц КАК ЗаМесяц,
	|		МАКСИМУМ(БазаЗаМесяцПоОбособленным.ОбособленноеПодразделение) КАК ОбособленноеПодразделение
	|	ИЗ
	|		ВТМаксБазаЗаМесяц КАК СведенияОДоходах
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТБазаЗаМесяцПоОбособленноеПодразделение КАК БазаЗаМесяцПоОбособленным
	|			ПО СведенияОДоходах.ФизЛицо = БазаЗаМесяцПоОбособленным.ФизЛицо
	|				И СведенияОДоходах.Период = БазаЗаМесяцПоОбособленным.Период
	|				И СведенияОДоходах.ЗаМесяц = БазаЗаМесяцПоОбособленным.ЗаМесяц
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СведенияОДоходах.ФизЛицо,
	|		СведенияОДоходах.Период,
	|		СведенияОДоходах.ЗаМесяц) КАК СведенияОДоходах
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБазаЗаМесяцПоОбособленноеПодразделение КАК БазаЗаМесяцПоОбособленным
	|		ПО СведенияОДоходах.ФизЛицо = БазаЗаМесяцПоОбособленным.ФизЛицо
	|			И СведенияОДоходах.Период = БазаЗаМесяцПоОбособленным.Период
	|			И СведенияОДоходах.ЗаМесяц = БазаЗаМесяцПоОбособленным.ЗаМесяц
	|			И СведенияОДоходах.ОбособленноеПодразделение = БазаЗаМесяцПоОбособленным.ОбособленноеПодразделение
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходах.ФизЛицо,
	|	СведенияОДоходах.Период,
	|	СведенияОДоходах.ОбособленноеПодразделение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	Период,
	|	ОбособленноеПодразделение,
	|	ВидТарифаСтраховыхВзносов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОблагаемаяБазаФСС.ФизЛицо КАК ФизЛицо,
	|	ОблагаемаяБазаФСС.Период КАК Период,
	|	ВЫБОР
	|		КОГДА ОблагаемаяБазаФСС.ЗаГод - Предел.Размер >= 0
	|			ТОГДА ОблагаемаяБазаФСС.ЗаГод - Предел.Размер
	|		ИНАЧЕ 0
	|	КОНЕЦ - ВЫБОР
	|		КОГДА ЕСТЬNULL(ОблагаемаяБазаПрошлогоМесяца.ЗаГод, 0) - Предел.Размер >= 0
	|			ТОГДА ЕСТЬNULL(ОблагаемаяБазаПрошлогоМесяца.ЗаГод, 0) - Предел.Размер
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаПревысившаяПредел
	|ПОМЕСТИТЬ ВТБазаПревышенияДохода
	|ИЗ
	|	ВТБазаНарастающимИтогом КАК ОблагаемаяБазаФСС
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПредельнаяВеличина КАК Предел
	|		ПО ОблагаемаяБазаФСС.Период = Предел.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБазаНарастающимИтогом КАК ОблагаемаяБазаПрошлогоМесяца
	|		ПО ОблагаемаяБазаФСС.ФизЛицо = ОблагаемаяБазаПрошлогоМесяца.ФизЛицо
	|			И (ОблагаемаяБазаФСС.Период = ДОБАВИТЬКДАТЕ(ОблагаемаяБазаПрошлогоМесяца.Период, МЕСЯЦ, 1))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОблагаемаяБаза.ФизЛицо КАК ФизЛицо,
	|	ОблагаемаяБаза.Период КАК Период,
	|	ВЫБОР
	|		КОГДА ПревышениеДоходаПоВсемОП.СуммаПревысившаяПредел = 0
	|				ИЛИ ОблагаемаяБаза.ЗаМесяц = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(ПревышениеДоходаПоВсемОП.СуммаПревысившаяПредел * БазаЗаМесяцПоОбособленным.ЗаМесяц / ОблагаемаяБаза.ЗаМесяц КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаПревысившаяПредел,
	|	БазаЗаМесяцПоОбособленным.ОбособленноеПодразделение,
	|	БазаЗаМесяцПоОбособленным.ВидТарифаСтраховыхВзносов
	|ПОМЕСТИТЬ ВТПревышениеДоходаПоОбособленноеПодразделение
	|ИЗ
	|	ВТБазаНарастающимИтогом КАК ОблагаемаяБаза
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБазаПревышенияДохода КАК ПревышениеДоходаПоВсемОП
	|		ПО ОблагаемаяБаза.ФизЛицо = ПревышениеДоходаПоВсемОП.ФизЛицо
	|			И ОблагаемаяБаза.Период = ПревышениеДоходаПоВсемОП.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБазаЗаМесяцПоОбособленноеПодразделение КАК БазаЗаМесяцПоОбособленным
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТОбособленноеПодразделениеМаксБазы КАК ОбособленноеПодразделениеДляОкругления
	|			ПО БазаЗаМесяцПоОбособленным.ФизЛицо = ОбособленноеПодразделениеДляОкругления.ФизЛицо
	|				И БазаЗаМесяцПоОбособленным.Период = ОбособленноеПодразделениеДляОкругления.Период
	|				И БазаЗаМесяцПоОбособленным.ОбособленноеПодразделение = ОбособленноеПодразделениеДляОкругления.ОбособленноеПодразделение
	|				И БазаЗаМесяцПоОбособленным.ВидТарифаСтраховыхВзносов = ОбособленноеПодразделениеДляОкругления.ВидТарифаСтраховыхВзносов
	|		ПО ОблагаемаяБаза.Период = БазаЗаМесяцПоОбособленным.Период
	|			И ОблагаемаяБаза.ФизЛицо = БазаЗаМесяцПоОбособленным.ФизЛицо
	|ГДЕ
	|	ОбособленноеПодразделениеДляОкругления.ОбособленноеПодразделение ЕСТЬ NULL 
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Превышение.ФизЛицо КАК ФизЛицо,
	|	Превышение.Период КАК Период,
	|	Превышение.СуммаПревысившаяПредел,
	|	Превышение.ОбособленноеПодразделение,
	|	Превышение.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов
	|ПОМЕСТИТЬ ВТПревышениеДохода
	|ИЗ
	|	ВТПревышениеДоходаПоОбособленноеПодразделение КАК Превышение
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Превышение.ФизЛицо,
	|	Превышение.Период,
	|	СУММА(Превышение.СуммаПревысившаяПредел),
	|	ОбособленноеПодразделениеДляОкругления.ОбособленноеПодразделение,
	|	ОбособленноеПодразделениеДляОкругления.ВидТарифаСтраховыхВзносов
	|ИЗ
	|	(ВЫБРАТЬ
	|		Превышение.ФизЛицо КАК ФизЛицо,
	|		Превышение.Период КАК Период,
	|		-Превышение.СуммаПревысившаяПредел КАК СуммаПревысившаяПредел
	|	ИЗ
	|		ВТПревышениеДоходаПоОбособленноеПодразделение КАК Превышение
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Превышение.ФизЛицо,
	|		Превышение.Период,
	|		Превышение.СуммаПревысившаяПредел
	|	ИЗ
	|		ВТБазаПревышенияДохода КАК Превышение) КАК Превышение
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОбособленноеПодразделениеМаксБазы КАК ОбособленноеПодразделениеДляОкругления
	|		ПО Превышение.ФизЛицо = ОбособленноеПодразделениеДляОкругления.ФизЛицо
	|			И Превышение.Период = ОбособленноеПодразделениеДляОкругления.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	Превышение.ФизЛицо,
	|	Превышение.Период,
	|	ОбособленноеПодразделениеДляОкругления.ОбособленноеПодразделение,
	|	ОбособленноеПодразделениеДляОкругления.ВидТарифаСтраховыхВзносов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	Период,
	|	ВидТарифаСтраховыхВзносов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОДоходах.Период,
	|	СведенияОДоходах.ФизЛицо,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И (НЕ СведенияОДоходах.ОблагаетсяЕНВД)
	|					И (НЕ СведенияОДоходах.ВидДохода В (ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.ПустаяСсылка), ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.РаспределятьПоБазовымНачислениям), ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.НеЯвляетсяОбъектом)))
	|				ТОГДА СведенияОДоходах.РезультатОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Начислено,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И (НЕ СведенияОДоходах.ОблагаетсяЕНВД)
	|					И (НЕ СведенияОДоходах.ВидДохода В (ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.ПустаяСсылка), ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.РаспределятьПоБазовымНачислениям), ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.НеЯвляетсяОбъектом)))
	|				ТОГДА ВЫБОР
	|						КОГДА ЕСТЬNULL(Гражданство.НеИмеетПравоНаПенсию, ЛОЖЬ)
	|							ТОГДА СведенияОДоходах.РезультатОборот
	|						КОГДА СведенияОДоходах.ВидДохода.ВходитВБазуФСС
	|							ТОГДА СведенияОДоходах.СкидкаОборот
	|						ИНАЧЕ СведенияОДоходах.РезультатОборот
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НеОблагается,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И (НЕ СведенияОДоходах.ОблагаетсяЕНВД)
	|					И СведенияОДоходах.ВидДохода.ВходитВБазуФСС
	|					И (НЕ ЕСТЬNULL(Гражданство.НеИмеетПравоНаПенсию, ЛОЖЬ))
	|					И СведенияИнвалидность.Физлицо ЕСТЬ НЕ NULL 
	|				ТОГДА СведенияОДоходах.РезультатОборот - СведенияОДоходах.СкидкаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НачисленоИнвалидам,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И СведенияИнвалидность.Физлицо ЕСТЬ NULL 
	|				ТОГДА ПревышениеДохода.СуммаПревысившаяПредел
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаПревысившаяПредел,
	|	СУММА(ВЫБОР
	|			КОГДА СведенияОДоходах.ОблагаетсяЕНВД
	|				ТОГДА СведенияОДоходах.РезультатОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК БазаФССЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА УчетнаяПолитикаНалоговыйУчет.УСН
	|					И (НЕ СведенияОДоходах.ОблагаетсяЕНВД)
	|				ТОГДА СведенияОДоходах.РезультатОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК БазаФССУСН
	|ПОМЕСТИТЬ ВТОблагаемыеБазыПоМесяцам
	|ИЗ
	|	ВТСведенияОДоходах КАК СведенияОДоходах
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТГражданство КАК Гражданство
	|		ПО СведенияОДоходах.Период = Гражданство.Период
	|			И СведенияОДоходах.ФизЛицо = Гражданство.Физлицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНалоговыйУчет
	|		ПО (МЕСЯЦ(СведенияОДоходах.Период) = УчетнаяПолитикаНалоговыйУчет.Месяц)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИнвалидностьФизлиц КАК СведенияИнвалидность
	|		ПО СведенияОДоходах.ФизЛицо = СведенияИнвалидность.Физлицо
	|			И СведенияОДоходах.Период = СведенияИнвалидность.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПревышениеДохода КАК ПревышениеДохода
	|		ПО СведенияОДоходах.ФизЛицо = ПревышениеДохода.ФизЛицо
	|			И СведенияОДоходах.Период = ПревышениеДохода.Период
	|			И СведенияОДоходах.ОбособленноеПодразделение = ПревышениеДохода.ОбособленноеПодразделение
	|			И ((НЕ ПревышениеДохода.ВидТарифаСтраховыхВзносов В (ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.УпрощенныйНалоговыйРежим), ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕСХН), ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД))))
	|ГДЕ
	|	СведенияОДоходах.ОбособленноеПодразделение = &парамОрганизация
	|	И (НЕ СведенияОДоходах.ФизЛицо В
	|				(ВЫБРАТЬ
	|					ФизлицаБезБазы.ФизЛицо
	|				ИЗ
	|					ВТФизлицаБезОблагаемойБазы КАК ФизлицаБезБазы))
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходах.Период,
	|	СведенияОДоходах.ФизЛицо";
	
	Запрос.Текст = ЗаполнениеРегламентированнойОтчетностиПереопределяемый.УстановитьНазваниеРегистраУчетнойПолитикиСтраховыхВзносов(Запрос.Текст);
	
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПособияСоциальномуСтрахованию.Сотрудник.Физлицо КАК Физлицо,
	|	СУММА(ПособияСоциальномуСтрахованию.СтраховыеСлучаи) КАК СтраховыеСлучаи,
	|	СУММА(ПособияСоциальномуСтрахованию.СуммаСверхНорм) КАК СуммаСверхНорм,
	|	СУММА(ПособияСоциальномуСтрахованию.ОплаченныеДни) КАК ОплаченныеДни,
	|	ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета КАК ВыплатаЗаСчетФедеральногоБюджета,
	|	ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования КАК ВидПособияСоциальногоСтрахования
	|ПОМЕСТИТЬ ВТПособияСверхНорм
	|ИЗ
	|	РегистрНакопления.ПособияСоциальномуСтрахованию КАК ПособияСоциальномуСтрахованию
	|ГДЕ
	|	ПособияСоциальномуСтрахованию.Организация = &парамОрганизация
	|	И ПособияСоциальномуСтрахованию.Период МЕЖДУ &парамНачалоГода И &парамКонецОтчетногоПериода
	|	И ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования В (ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью))
	|	И ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета <> ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ПустаяСсылка)
	|	И ПособияСоциальномуСтрахованию.СуммаСверхНорм <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ПособияСоциальномуСтрахованию.Сотрудник.Физлицо,
	|	ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета,
	|	ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВыплатаЗаСчетФедеральногоБюджета,
	|	ВидПособияСоциальногоСтрахования";
	
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	
	// ПособияПоУходу
	// Это вспомогательная временная таблица для расчета показателей Таблиц 2 и 7 по пособиям по уходу
	// Поля:
	//		ФизЛицо, ВидЗанятости - сведения о получателе пособия
	//		ОблагаетсяЕНВД, УСН - сведения о налоговом режиме 
	//		УходЗаПервымРебенком, СтраховыеСлучаиОборот, СуммаВсегоОборот, СуммаСверхНормОборот - сведения о пособии 
	// Описание:	
	//	Выбираем данные о суммах пособий и о количестве выплат из таблицы оборотов 
	//  регистра накопления ПособияПоУходуЗаРебенкомДоПолутораЛет
	//	Соединение с таблицей ВТУчетнаяПолитикаНалоговыйУчет для учета УСН
	//	по равенству месяцев
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПособияСоциальномуСтрахованиюОбороты.ФизЛицо КАК ФизЛицо,
	|	ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	УчетнаяПолитикаНалоговыйУчет.УСН КАК УСН,
	|	ПособияСоциальномуСтрахованиюОбороты.УходЗаПервымРебенком КАК УходЗаПервымРебенком,
	|	ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости КАК ВидЗанятости,
	|	СУММА(ПособияСоциальномуСтрахованиюОбороты.СтраховыеСлучаиОборот) КАК СтраховыеСлучаиОборот,
	|	СУММА(ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот) КАК СуммаВсегоОборот,
	|	СУММА(ПособияСоциальномуСтрахованиюОбороты.СуммаСверхНормОборот) КАК СуммаСверхНормОборот
	|ПОМЕСТИТЬ ВТПособияПоУходу
	|ИЗ
	|	РегистрНакопления.ПособияПоУходуЗаРебенкомДоПолутораЛет.Обороты(&парамНачалоГода, &парамКонецОтчетногоПериода, Месяц, Организация = &парамОрганизация) КАК ПособияСоциальномуСтрахованиюОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНалоговыйУчет
	|		ПО (МЕСЯЦ(ПособияСоциальномуСтрахованиюОбороты.Период) = УчетнаяПолитикаНалоговыйУчет.Месяц)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПособияСоциальномуСтрахованиюОбороты.ФизЛицо,
	|	ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД,
	|	ПособияСоциальномуСтрахованиюОбороты.УходЗаПервымРебенком,
	|	УчетнаяПолитикаНалоговыйУчет.УСН,
	|	ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	УСН,
	|	ВидЗанятости,
	|	ОблагаетсяЕНВД";
	
	Запрос.Текст = ЗаполнениеРегламентированнойОтчетностиПереопределяемый.УстановитьНазваниеРегистраУчетнойПолитикиСтраховыхВзносов(Запрос.Текст);
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПособияСоциальномуСтрахованию.ФизЛицо КАК Физлицо,
	|	СУММА(ПособияСоциальномуСтрахованию.СтраховыеСлучаи) КАК СтраховыеСлучаи,
	|	СУММА(ПособияСоциальномуСтрахованию.СуммаСверхНорм) КАК СуммаСверхНорм,
	|	ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета КАК ВыплатаЗаСчетФедеральногоБюджета,
	|	ПособияСоциальномуСтрахованию.УходЗаПервымРебенком КАК УходЗаПервымРебенком
	|ПОМЕСТИТЬ ВТПособияПоУходуСверхНорм
	|ИЗ
	|	РегистрНакопления.ПособияПоУходуЗаРебенкомДоПолутораЛет КАК ПособияСоциальномуСтрахованию
	|ГДЕ
	|	ПособияСоциальномуСтрахованию.Организация = &парамОрганизация
	|	И ПособияСоциальномуСтрахованию.Период МЕЖДУ &парамНачалоГода И &парамКонецОтчетногоПериода
	|	И ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета <> ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ПустаяСсылка)
	|	И ПособияСоциальномуСтрахованию.СуммаСверхНорм <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ПособияСоциальномуСтрахованию.ФизЛицо,
	|	ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета,
	|	ПособияСоциальномуСтрахованию.УходЗаПервымРебенком
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВыплатаЗаСчетФедеральногоБюджета,
	|	УходЗаПервымРебенком";
	
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	
	// ----------------------------------------------------------------------------------
	// ТЕКСТЫ ЗАПРОСОВ
	
	// БазаДляНачисленияВзносов
	// Это показатели Разделу I, Таблица 3
	// Поля:
	//		П000030001003,
	//		П000030001004 
	// Описание:	
	//	Выбираем из ВТОблагаемыеБазыПоМесяцам (таблица с данными о доходах ) 
	//	данные за соответствующий месяц
	
	БазаДляНачисленияВзносовТекст = 
	"ВЫБРАТЬ
	|	СУММА(ДоходыПоФЛ.Начислено) КАК П000030001003,
	|	СУММА(ДоходыПоФЛ.НеОблагается) КАК П000030001004,
	|	СУММА(ДоходыПоФЛ.НачисленоИнвалидам) КАК П000030001005,
	|	СУММА(ДоходыПоФЛ.СуммаПревысившаяПредел) КАК П000030001006,
	|	СУММА(ВЫБОР
	|			КОГДА МЕСЯЦ(ДоходыПоФЛ.Период) = &Месяц1
	|				ТОГДА ДоходыПоФЛ.Начислено
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030003003,
	|	СУММА(ВЫБОР
	|			КОГДА МЕСЯЦ(ДоходыПоФЛ.Период) = &Месяц2
	|				ТОГДА ДоходыПоФЛ.Начислено
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030004003,
	|	СУММА(ВЫБОР
	|			КОГДА МЕСЯЦ(ДоходыПоФЛ.Период) = &Месяц3
	|				ТОГДА ДоходыПоФЛ.Начислено
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030005003,
	|	СУММА(ВЫБОР
	|			КОГДА МЕСЯЦ(ДоходыПоФЛ.Период) = &Месяц1
	|				ТОГДА ДоходыПоФЛ.НеОблагается
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030003004,
	|	СУММА(ВЫБОР
	|			КОГДА МЕСЯЦ(ДоходыПоФЛ.Период) = &Месяц2
	|				ТОГДА ДоходыПоФЛ.НеОблагается
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030004004,
	|	СУММА(ВЫБОР
	|			КОГДА МЕСЯЦ(ДоходыПоФЛ.Период) = &Месяц3
	|				ТОГДА ДоходыПоФЛ.НеОблагается
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030005004,
	|	СУММА(ВЫБОР
	|			КОГДА МЕСЯЦ(ДоходыПоФЛ.Период) = &Месяц1
	|				ТОГДА ДоходыПоФЛ.НачисленоИнвалидам
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030003005,
	|	СУММА(ВЫБОР
	|			КОГДА МЕСЯЦ(ДоходыПоФЛ.Период) = &Месяц2
	|				ТОГДА ДоходыПоФЛ.НачисленоИнвалидам
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030004005,
	|	СУММА(ВЫБОР
	|			КОГДА МЕСЯЦ(ДоходыПоФЛ.Период) = &Месяц3
	|				ТОГДА ДоходыПоФЛ.НачисленоИнвалидам
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030005005,
	|	СУММА(ВЫБОР
	|			КОГДА МЕСЯЦ(ДоходыПоФЛ.Период) = &Месяц1
	|				ТОГДА ДоходыПоФЛ.СуммаПревысившаяПредел
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030003006,
	|	СУММА(ВЫБОР
	|			КОГДА МЕСЯЦ(ДоходыПоФЛ.Период) = &Месяц2
	|				ТОГДА ДоходыПоФЛ.СуммаПревысившаяПредел
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030004006,
	|	СУММА(ВЫБОР
	|			КОГДА МЕСЯЦ(ДоходыПоФЛ.Период) = &Месяц3
	|				ТОГДА ДоходыПоФЛ.СуммаПревысившаяПредел
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030005006
	|ИЗ
	|	ВТОблагаемыеБазыПоМесяцам КАК ДоходыПоФЛ";
	
	// ВыплатыРаботникамНаСпецРежимах
	// Это итоговые суммы доходов, относящихся к спецрежимам
	// Поля:
	//		ВыплатыРаботникам_УСН,
	//		ВыплатыРаботникам_ЕНВД 
	// Описание:	
	//	Суммируются соответствующие данные из ВТОблагаемыеБазыПоМесяцам (таблица с данными о доходах физлиц) 
	
	ВыплатыРаботникамНаСпецРежимахТекст =
	"ВЫБРАТЬ
	|	СУММА(ДоходыПоФЛ.БазаФССУСН) КАК ВыплатыРаботникам_УСН,
	|	СУММА(ДоходыПоФЛ.БазаФССЕНВД) КАК ВыплатыРаботникам_ЕНВД
	|ИЗ
	|	ВТОблагаемыеБазыПоМесяцам КАК ДоходыПоФЛ";
	
	// РасходыНаЦелиОбязательногоСС
	// Это итоговые суммы расходов за исключением пособия по уходу за ребенком для Таблиц 3, 6 и 11 Разделов I, II и III
	// Поля:
	//		П000020001001, ..., П000030015005  Таблицы 2   
	//		для показателей П000070001001, ..., П000070015004  Таблицы 7 
	//			создаем двойной набор полей: с постфиксами _ЕНВД и _УСН
	//		П000110001003, ..., П000110007004  Таблицы 11   
	// Описание:	
	//	Суммируются соответствующие данные из таблицы оборотов регистра накопления.ПособияСоциальномуСтрахованию 
	//  с учетом режима налогообложения из таблицы ВТУчетнаяПолитикаНалоговыйУчет
	// 
	
	РасходыНаЦелиОбязательногоССТекст =
	"ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020001001,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.ОплаченныеДниОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020001003,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020001004,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020001005,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020002001,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.ОплаченныеДниОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020002003,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020002004,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020002005,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.ОплаченныеДниОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020003003,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020003004,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020003005,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020004001,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.ОплаченныеДниОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020004003,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020004004,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020004005,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриПостановкеНаУчетВРанниеСрокиБеременности)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020005003,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриПостановкеНаУчетВРанниеСрокиБеременности)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020005004,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриРожденииРебенка)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020006003,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриРожденииРебенка)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020006004,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ДополнительныеВыходныеДниПоУходуЗаДетьмиИнвалидами)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.ОплаченныеДниОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020014003,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ДополнительныеВыходныеДниПоУходуЗаДетьмиИнвалидами)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020014004,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020015003,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020015004,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020015005,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070001001_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.ОплаченныеДниОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070001003_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070001004_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070001005_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070002001_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.ОплаченныеДниОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070002003_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070002004_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070002005_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.ОплаченныеДниОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070003003_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070003004_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070003005_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070004001_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.ОплаченныеДниОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070004003_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070004004_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070004005_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриПостановкеНаУчетВРанниеСрокиБеременности)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070005003_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриПостановкеНаУчетВРанниеСрокиБеременности)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070005004_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриРожденииРебенка)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070006003_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриРожденииРебенка)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070006004_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ДополнительныеВыходныеДниПоУходуЗаДетьмиИнвалидами)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.ОплаченныеДниОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070014003_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ДополнительныеВыходныеДниПоУходуЗаДетьмиИнвалидами)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070014004_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070015003_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070015004_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070015005_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчет.УСН
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070001001_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчет.УСН
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.ОплаченныеДниОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070001003_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчет.УСН
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070001004_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчет.УСН
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070001005_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчет.УСН
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070002001_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчет.УСН
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.ОплаченныеДниОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070002003_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчет.УСН
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070002004_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчет.УСН
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070002005_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчет.УСН
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.ОплаченныеДниОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070003003_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчет.УСН
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070003004_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчет.УСН
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070003005_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчет.УСН
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070004001_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчет.УСН
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.ОплаченныеДниОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070004003_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчет.УСН
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070004004_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчет.УСН
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070004005_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчет.УСН
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриРожденииРебенка)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070006003_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчет.УСН
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриРожденииРебенка)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070006004_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчет.УСН
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриПостановкеНаУчетВРанниеСрокиБеременности)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070005003_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчет.УСН
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриПостановкеНаУчетВРанниеСрокиБеременности)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070005004_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчет.УСН
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ДополнительныеВыходныеДниПоУходуЗаДетьмиИнвалидами)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.ОплаченныеДниОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070014003_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчет.УСН
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ДополнительныеВыходныеДниПоУходуЗаДетьмиИнвалидами)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070014004_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчет.УСН
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070015003_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчет.УСН
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070015004_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчет.УСН
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070015005_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.ОплаченныеДниОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000110001003,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000110001004,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.ОплаченныеДниОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000110002003,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000110002004,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.ОплаченныеДниОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000110004003,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000110004004,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.ОплаченныеДниОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000110005003,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000110005004,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ДополнительныйОтпускПослеНесчастныхСлучаев)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.ОплаченныеДниОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000110007003,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ДополнительныйОтпускПослеНесчастныхСлучаев)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000110007004
	|ИЗ
	|	РегистрНакопления.ПособияСоциальномуСтрахованию.Обороты(&парамНачалоГода, &парамКонецОтчетногоПериода, Месяц, Организация = &парамОрганизация) КАК ПособияСоциальномуСтрахованиюОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНалоговыйУчет
	|		ПО (МЕСЯЦ(ПособияСоциальномуСтрахованиюОбороты.Период) = УчетнаяПолитикаНалоговыйУчет.Месяц)";
	ВыплатыРаботникамНаСпецРежимахТекст = ЗаполнениеРегламентированнойОтчетностиПереопределяемый.УстановитьНазваниеРегистраУчетнойПолитикиСтраховыхВзносов(ВыплатыРаботникамНаСпецРежимахТекст);
	РасходыНаЦелиОбязательногоССТекст = ЗаполнениеРегламентированнойОтчетностиПереопределяемый.УстановитьНазваниеРегистраУчетнойПолитикиСтраховыхВзносов(РасходыНаЦелиОбязательногоССТекст);
	
	РасходыЗаСчетФедБюджетаТекст = 
	"ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Чернобыль)
	|					И ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ПособияСоциальномуСтрахованию.ОплаченныеДни
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080001007,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Чернобыль)
	|					И ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ПособияСоциальномуСтрахованию.СуммаСверхНорм
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080001008,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Чернобыль)
	|					И ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|				ТОГДА ПособияСоциальномуСтрахованию.ОплаченныеДни
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080002007,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Чернобыль)
	|					И ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|				ТОГДА ПособияСоциальномуСтрахованию.СуммаСверхНорм
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080002008,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Чернобыль)
	|					И ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью)
	|				ТОГДА ПособияСоциальномуСтрахованию.СтраховыеСлучаи
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080006007,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Чернобыль)
	|					И ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью)
	|				ТОГДА ПособияСоциальномуСтрахованию.СуммаСверхНорм
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080006008,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Маяк)
	|					И ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ПособияСоциальномуСтрахованию.ОплаченныеДни
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080001010,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Маяк)
	|					И ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ПособияСоциальномуСтрахованию.СуммаСверхНорм
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080001011,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Маяк)
	|					И ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|				ТОГДА ПособияСоциальномуСтрахованию.ОплаченныеДни
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080002010,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Маяк)
	|					И ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|				ТОГДА ПособияСоциальномуСтрахованию.СуммаСверхНорм
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080002011,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Маяк)
	|					И ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью)
	|				ТОГДА ПособияСоциальномуСтрахованию.СтраховыеСлучаи
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080006010,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Маяк)
	|					И ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью)
	|				ТОГДА ПособияСоциальномуСтрахованию.СуммаСверхНорм
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080006011,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Семипалатинск)
	|					И ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ПособияСоциальномуСтрахованию.ОплаченныеДни
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080001013,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Семипалатинск)
	|					И ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ПособияСоциальномуСтрахованию.СуммаСверхНорм
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080001014,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ПодразделенияОсобогоРиска)
	|					И ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ПособияСоциальномуСтрахованию.ОплаченныеДни
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080001016,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ПодразделенияОсобогоРиска)
	|					И ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ПособияСоциальномуСтрахованию.СуммаСверхНорм
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080001017,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ПодразделенияОсобогоРиска)
	|					И ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|				ТОГДА ПособияСоциальномуСтрахованию.ОплаченныеДни
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080002016,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ПодразделенияОсобогоРиска)
	|					И ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|				ТОГДА ПособияСоциальномуСтрахованию.СуммаСверхНорм
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080002017,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ПодразделенияОсобогоРиска)
	|					И ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью)
	|				ТОГДА ПособияСоциальномуСтрахованию.СтраховыеСлучаи
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080006016,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ПодразделенияОсобогоРиска)
	|					И ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью)
	|				ТОГДА ПособияСоциальномуСтрахованию.СуммаСверхНорм
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080006017,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ЗачетНестраховыхПериодов)
	|					И ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ПособияСоциальномуСтрахованию.ОплаченныеДни
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080001019,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ЗачетНестраховыхПериодов)
	|					И ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ПособияСоциальномуСтрахованию.СуммаСверхНорм
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080001020,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ЗачетНестраховыхПериодов)
	|					И ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|				ТОГДА ПособияСоциальномуСтрахованию.ОплаченныеДни
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080002019,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ЗачетНестраховыхПериодов)
	|					И ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|				ТОГДА ПособияСоциальномуСтрахованию.СуммаСверхНорм
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080002020
	|ИЗ
	|	ВТПособияСверхНорм КАК ПособияСоциальномуСтрахованию";
	
	ПолучателиЗаСчетФедБюджетаТекст = 
	"ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА ВсеПолучатели.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Чернобыль)
	|					И ВсеПолучатели.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ВсеПолучатели.КоличествоФизлиц
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080001006,
	|	СУММА(ВЫБОР
	|			КОГДА ВсеПолучатели.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Чернобыль)
	|					И ВсеПолучатели.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|				ТОГДА ВсеПолучатели.КоличествоФизлиц
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080002006,
	|	СУММА(ВЫБОР
	|			КОГДА ВсеПолучатели.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Чернобыль)
	|					И ВсеПолучатели.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью)
	|				ТОГДА ВсеПолучатели.КоличествоФизлиц
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080006006,
	|	СУММА(ВЫБОР
	|			КОГДА ВсеПолучатели.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Маяк)
	|					И ВсеПолучатели.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ВсеПолучатели.КоличествоФизлиц
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080001009,
	|	СУММА(ВЫБОР
	|			КОГДА ВсеПолучатели.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Маяк)
	|					И ВсеПолучатели.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|				ТОГДА ВсеПолучатели.КоличествоФизлиц
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080002009,
	|	СУММА(ВЫБОР
	|			КОГДА ВсеПолучатели.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Маяк)
	|					И ВсеПолучатели.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью)
	|				ТОГДА ВсеПолучатели.КоличествоФизлиц
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080006009,
	|	СУММА(ВЫБОР
	|			КОГДА ВсеПолучатели.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Семипалатинск)
	|					И ВсеПолучатели.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ВсеПолучатели.КоличествоФизлиц
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080001012,
	|	СУММА(ВЫБОР
	|			КОГДА ВсеПолучатели.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ПодразделенияОсобогоРиска)
	|					И ВсеПолучатели.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ВсеПолучатели.КоличествоФизлиц
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080001015,
	|	СУММА(ВЫБОР
	|			КОГДА ВсеПолучатели.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ПодразделенияОсобогоРиска)
	|					И ВсеПолучатели.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|				ТОГДА ВсеПолучатели.КоличествоФизлиц
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080002015,
	|	СУММА(ВЫБОР
	|			КОГДА ВсеПолучатели.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ПодразделенияОсобогоРиска)
	|					И ВсеПолучатели.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью)
	|				ТОГДА ВсеПолучатели.КоличествоФизлиц
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080006015,
	|	СУММА(ВЫБОР
	|			КОГДА ВсеПолучатели.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ЗачетНестраховыхПериодов)
	|					И ВсеПолучатели.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ВсеПолучатели.КоличествоФизлиц
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080001018,
	|	СУММА(ВЫБОР
	|			КОГДА ВсеПолучатели.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ЗачетНестраховыхПериодов)
	|					И ВсеПолучатели.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|				ТОГДА ВсеПолучатели.КоличествоФизлиц
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080002018
	|ИЗ
	|	(ВЫБРАТЬ
	|		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПособияСоциальномуСтрахованию.Физлицо) КАК КоличествоФизлиц,
	|		ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета КАК ВыплатаЗаСчетФедеральногоБюджета,
	|		ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования КАК ВидПособияСоциальногоСтрахования
	|	ИЗ
	|		ВТПособияСверхНорм КАК ПособияСоциальномуСтрахованию
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета,
	|		ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования) КАК ВсеПолучатели";
	
	// РасходыНаПособияПоУходу
	// Это итоговые суммы расходов на пособия по уходу за ребенком для Таблиц 2 и 7 Разделов I и II
	// Поля:
	//		П000020009001, ..., П000020013005  Таблицы 2   
	//		для показателей П000070009001, ..., П000070013005  Таблицы 7 
	//			создаем двойной набор полей: с постфиксами _ЕНВД и _УСН
	// Описание:	
	//	Выбираем данные о суммах пособий и о количестве выплат из вспомогательной таблицы ВТПособияПоУходу 
	// 
	
	РасходыНаПособияПоУходуТекст = 
	"ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.ОблагаетсяЕНВД)
	|					И (НЕ ДанныеУчетаПособий.УСН)
	|					И ДанныеУчетаПособий.УходЗаПервымРебенком
	|					И ДанныеУчетаПособий.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|					И ДанныеУчетаПособий.СуммаВсегоОборот <> 0
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020009001,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.ОблагаетсяЕНВД)
	|					И (НЕ ДанныеУчетаПособий.УСН)
	|					И ДанныеУчетаПособий.УходЗаПервымРебенком
	|					И ДанныеУчетаПособий.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|					И ДанныеУчетаПособий.СуммаВсегоОборот <> 0
	|				ТОГДА ДанныеУчетаПособий.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020009003,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.ОблагаетсяЕНВД)
	|					И (НЕ ДанныеУчетаПособий.УСН)
	|					И ДанныеУчетаПособий.УходЗаПервымРебенком
	|					И ДанныеУчетаПособий.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ДанныеУчетаПособий.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020009004,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.ОблагаетсяЕНВД)
	|					И (НЕ ДанныеУчетаПособий.УСН)
	|					И ДанныеУчетаПособий.УходЗаПервымРебенком
	|					И ДанныеУчетаПособий.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ДанныеУчетаПособий.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020009005,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.ОблагаетсяЕНВД)
	|					И (НЕ ДанныеУчетаПособий.УСН)
	|					И (НЕ ДанныеУчетаПособий.УходЗаПервымРебенком)
	|					И ДанныеУчетаПособий.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|					И ДанныеУчетаПособий.СуммаВсегоОборот <> 0
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020010001,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.ОблагаетсяЕНВД)
	|					И (НЕ ДанныеУчетаПособий.УСН)
	|					И (НЕ ДанныеУчетаПособий.УходЗаПервымРебенком)
	|					И ДанныеУчетаПособий.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|					И ДанныеУчетаПособий.СуммаВсегоОборот <> 0
	|				ТОГДА ДанныеУчетаПособий.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020010003,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.ОблагаетсяЕНВД)
	|					И (НЕ ДанныеУчетаПособий.УСН)
	|					И (НЕ ДанныеУчетаПособий.УходЗаПервымРебенком)
	|					И ДанныеУчетаПособий.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ДанныеУчетаПособий.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020010004,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.ОблагаетсяЕНВД)
	|					И (НЕ ДанныеУчетаПособий.УСН)
	|					И (НЕ ДанныеУчетаПособий.УходЗаПервымРебенком)
	|					И ДанныеУчетаПособий.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ДанныеУчетаПособий.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020010005,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.ОблагаетсяЕНВД)
	|					И (НЕ ДанныеУчетаПособий.УСН)
	|					И ДанныеУчетаПособий.УходЗаПервымРебенком
	|					И ДанныеУчетаПособий.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|					И ДанныеУчетаПособий.СуммаВсегоОборот <> 0
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020012001,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.ОблагаетсяЕНВД)
	|					И (НЕ ДанныеУчетаПособий.УСН)
	|					И ДанныеУчетаПособий.УходЗаПервымРебенком
	|					И ДанныеУчетаПособий.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|					И ДанныеУчетаПособий.СуммаВсегоОборот <> 0
	|				ТОГДА ДанныеУчетаПособий.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020012003,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.ОблагаетсяЕНВД)
	|					И (НЕ ДанныеУчетаПособий.УСН)
	|					И ДанныеУчетаПособий.УходЗаПервымРебенком
	|					И ДанныеУчетаПособий.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ДанныеУчетаПособий.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020012004,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.ОблагаетсяЕНВД)
	|					И (НЕ ДанныеУчетаПособий.УСН)
	|					И ДанныеУчетаПособий.УходЗаПервымРебенком
	|					И ДанныеУчетаПособий.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ДанныеУчетаПособий.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020012005,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.ОблагаетсяЕНВД)
	|					И (НЕ ДанныеУчетаПособий.УСН)
	|					И (НЕ ДанныеУчетаПособий.УходЗаПервымРебенком)
	|					И ДанныеУчетаПособий.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|					И ДанныеУчетаПособий.СуммаВсегоОборот <> 0
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020013001,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.ОблагаетсяЕНВД)
	|					И (НЕ ДанныеУчетаПособий.УСН)
	|					И (НЕ ДанныеУчетаПособий.УходЗаПервымРебенком)
	|					И ДанныеУчетаПособий.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|					И ДанныеУчетаПособий.СуммаВсегоОборот <> 0
	|				ТОГДА ДанныеУчетаПособий.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020013003,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.ОблагаетсяЕНВД)
	|					И (НЕ ДанныеУчетаПособий.УСН)
	|					И (НЕ ДанныеУчетаПособий.УходЗаПервымРебенком)
	|					И ДанныеУчетаПособий.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ДанныеУчетаПособий.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020013004,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.ОблагаетсяЕНВД)
	|					И (НЕ ДанныеУчетаПособий.УСН)
	|					И (НЕ ДанныеУчетаПособий.УходЗаПервымРебенком)
	|					И ДанныеУчетаПособий.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ДанныеУчетаПособий.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020013005,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеУчетаПособий.ОблагаетсяЕНВД
	|					И ДанныеУчетаПособий.УходЗаПервымРебенком
	|					И ДанныеУчетаПособий.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|					И ДанныеУчетаПособий.СуммаВсегоОборот <> 0
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070009001_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеУчетаПособий.ОблагаетсяЕНВД
	|					И ДанныеУчетаПособий.УходЗаПервымРебенком
	|					И ДанныеУчетаПособий.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|					И ДанныеУчетаПособий.СуммаВсегоОборот <> 0
	|				ТОГДА ДанныеУчетаПособий.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070009003_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеУчетаПособий.ОблагаетсяЕНВД
	|					И ДанныеУчетаПособий.УходЗаПервымРебенком
	|					И ДанныеУчетаПособий.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ДанныеУчетаПособий.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070009004_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеУчетаПособий.ОблагаетсяЕНВД
	|					И ДанныеУчетаПособий.УходЗаПервымРебенком
	|					И ДанныеУчетаПособий.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ДанныеУчетаПособий.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070009005_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеУчетаПособий.ОблагаетсяЕНВД
	|					И (НЕ ДанныеУчетаПособий.УходЗаПервымРебенком)
	|					И ДанныеУчетаПособий.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|					И ДанныеУчетаПособий.СуммаВсегоОборот <> 0
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070010001_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеУчетаПособий.ОблагаетсяЕНВД
	|					И (НЕ ДанныеУчетаПособий.УходЗаПервымРебенком)
	|					И ДанныеУчетаПособий.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|					И ДанныеУчетаПособий.СуммаВсегоОборот <> 0
	|				ТОГДА ДанныеУчетаПособий.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070010003_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеУчетаПособий.ОблагаетсяЕНВД
	|					И (НЕ ДанныеУчетаПособий.УходЗаПервымРебенком)
	|					И ДанныеУчетаПособий.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ДанныеУчетаПособий.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070010004_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеУчетаПособий.ОблагаетсяЕНВД
	|					И (НЕ ДанныеУчетаПособий.УходЗаПервымРебенком)
	|					И ДанныеУчетаПособий.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ДанныеУчетаПособий.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070010005_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеУчетаПособий.ОблагаетсяЕНВД
	|					И ДанныеУчетаПособий.УходЗаПервымРебенком
	|					И ДанныеУчетаПособий.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|					И ДанныеУчетаПособий.СуммаВсегоОборот <> 0
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070012001_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеУчетаПособий.ОблагаетсяЕНВД
	|					И ДанныеУчетаПособий.УходЗаПервымРебенком
	|					И ДанныеУчетаПособий.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|					И ДанныеУчетаПособий.СуммаВсегоОборот <> 0
	|				ТОГДА ДанныеУчетаПособий.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070012003_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеУчетаПособий.ОблагаетсяЕНВД
	|					И ДанныеУчетаПособий.УходЗаПервымРебенком
	|					И ДанныеУчетаПособий.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ДанныеУчетаПособий.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070012004_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеУчетаПособий.ОблагаетсяЕНВД
	|					И ДанныеУчетаПособий.УходЗаПервымРебенком
	|					И ДанныеУчетаПособий.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ДанныеУчетаПособий.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070012005_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеУчетаПособий.ОблагаетсяЕНВД
	|					И (НЕ ДанныеУчетаПособий.УходЗаПервымРебенком)
	|					И ДанныеУчетаПособий.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|					И ДанныеУчетаПособий.СуммаВсегоОборот <> 0
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070013001_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеУчетаПособий.ОблагаетсяЕНВД
	|					И (НЕ ДанныеУчетаПособий.УходЗаПервымРебенком)
	|					И ДанныеУчетаПособий.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|					И ДанныеУчетаПособий.СуммаВсегоОборот <> 0
	|				ТОГДА ДанныеУчетаПособий.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070013003_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеУчетаПособий.ОблагаетсяЕНВД
	|					И (НЕ ДанныеУчетаПособий.УходЗаПервымРебенком)
	|					И ДанныеУчетаПособий.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ДанныеУчетаПособий.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070013004_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеУчетаПособий.ОблагаетсяЕНВД
	|					И (НЕ ДанныеУчетаПособий.УходЗаПервымРебенком)
	|					И ДанныеУчетаПособий.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ДанныеУчетаПособий.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070013005_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.ОблагаетсяЕНВД)
	|					И ДанныеУчетаПособий.УСН
	|					И ДанныеУчетаПособий.УходЗаПервымРебенком
	|					И ДанныеУчетаПособий.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|					И ДанныеУчетаПособий.СуммаВсегоОборот <> 0
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070009001_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.ОблагаетсяЕНВД)
	|					И ДанныеУчетаПособий.УСН
	|					И ДанныеУчетаПособий.УходЗаПервымРебенком
	|					И ДанныеУчетаПособий.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|					И ДанныеУчетаПособий.СуммаВсегоОборот <> 0
	|				ТОГДА ДанныеУчетаПособий.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070009003_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.ОблагаетсяЕНВД)
	|					И ДанныеУчетаПособий.УСН
	|					И ДанныеУчетаПособий.УходЗаПервымРебенком
	|					И ДанныеУчетаПособий.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ДанныеУчетаПособий.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070009004_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.ОблагаетсяЕНВД)
	|					И ДанныеУчетаПособий.УСН
	|					И ДанныеУчетаПособий.УходЗаПервымРебенком
	|					И ДанныеУчетаПособий.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ДанныеУчетаПособий.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070009005_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.ОблагаетсяЕНВД)
	|					И ДанныеУчетаПособий.УСН
	|					И (НЕ ДанныеУчетаПособий.УходЗаПервымРебенком)
	|					И ДанныеУчетаПособий.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|					И ДанныеУчетаПособий.СуммаВсегоОборот <> 0
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070010001_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.ОблагаетсяЕНВД)
	|					И ДанныеУчетаПособий.УСН
	|					И (НЕ ДанныеУчетаПособий.УходЗаПервымРебенком)
	|					И ДанныеУчетаПособий.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|					И ДанныеУчетаПособий.СуммаВсегоОборот <> 0
	|				ТОГДА ДанныеУчетаПособий.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070010003_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.ОблагаетсяЕНВД)
	|					И ДанныеУчетаПособий.УСН
	|					И (НЕ ДанныеУчетаПособий.УходЗаПервымРебенком)
	|					И ДанныеУчетаПособий.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ДанныеУчетаПособий.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070010004_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.ОблагаетсяЕНВД)
	|					И ДанныеУчетаПособий.УСН
	|					И (НЕ ДанныеУчетаПособий.УходЗаПервымРебенком)
	|					И ДанныеУчетаПособий.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ДанныеУчетаПособий.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070010005_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.ОблагаетсяЕНВД)
	|					И ДанныеУчетаПособий.УСН
	|					И ДанныеУчетаПособий.УходЗаПервымРебенком
	|					И ДанныеУчетаПособий.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|					И ДанныеУчетаПособий.СуммаВсегоОборот <> 0
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070012001_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.ОблагаетсяЕНВД)
	|					И ДанныеУчетаПособий.УСН
	|					И ДанныеУчетаПособий.УходЗаПервымРебенком
	|					И ДанныеУчетаПособий.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|					И ДанныеУчетаПособий.СуммаВсегоОборот <> 0
	|				ТОГДА ДанныеУчетаПособий.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070012003_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.ОблагаетсяЕНВД)
	|					И ДанныеУчетаПособий.УСН
	|					И ДанныеУчетаПособий.УходЗаПервымРебенком
	|					И ДанныеУчетаПособий.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ДанныеУчетаПособий.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070012004_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.ОблагаетсяЕНВД)
	|					И ДанныеУчетаПособий.УСН
	|					И ДанныеУчетаПособий.УходЗаПервымРебенком
	|					И ДанныеУчетаПособий.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ДанныеУчетаПособий.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070012005_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.ОблагаетсяЕНВД)
	|					И ДанныеУчетаПособий.УСН
	|					И (НЕ ДанныеУчетаПособий.УходЗаПервымРебенком)
	|					И ДанныеУчетаПособий.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|					И ДанныеУчетаПособий.СуммаВсегоОборот <> 0
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070013001_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.ОблагаетсяЕНВД)
	|					И ДанныеУчетаПособий.УСН
	|					И (НЕ ДанныеУчетаПособий.УходЗаПервымРебенком)
	|					И ДанныеУчетаПособий.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|					И ДанныеУчетаПособий.СуммаВсегоОборот <> 0
	|				ТОГДА ДанныеУчетаПособий.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070013003_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.ОблагаетсяЕНВД)
	|					И ДанныеУчетаПособий.УСН
	|					И (НЕ ДанныеУчетаПособий.УходЗаПервымРебенком)
	|					И ДанныеУчетаПособий.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ДанныеУчетаПособий.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070013004_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.ОблагаетсяЕНВД)
	|					И ДанныеУчетаПособий.УСН
	|					И (НЕ ДанныеУчетаПособий.УходЗаПервымРебенком)
	|					И ДанныеУчетаПособий.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ДанныеУчетаПособий.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070013005_УСН
	|ИЗ
	|	ВТПособияПоУходу КАК ДанныеУчетаПособий";
	
	РасходыНаПособияПоУходуДополнительноТекст = 
	"ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.ОблагаетсяЕНВД)
	|					И (НЕ ДанныеУчетаПособий.УСН)
	|					И ДанныеУчетаПособий.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020008001,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.ОблагаетсяЕНВД)
	|					И (НЕ ДанныеУчетаПособий.УСН)
	|					И ДанныеУчетаПособий.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020011001,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеУчетаПособий.ОблагаетсяЕНВД
	|					И ДанныеУчетаПособий.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070008001_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеУчетаПособий.ОблагаетсяЕНВД
	|					И ДанныеУчетаПособий.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070011001_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.ОблагаетсяЕНВД)
	|					И ДанныеУчетаПособий.УСН
	|					И ДанныеУчетаПособий.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070008001_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.ОблагаетсяЕНВД)
	|					И ДанныеУчетаПособий.УСН
	|					И ДанныеУчетаПособий.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000070011001_УСН
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПособияСоциальномуСтрахованиюОбороты.ФизЛицо КАК ФизЛицо,
	|		ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|		ПособияСоциальномуСтрахованиюОбороты.УСН КАК УСН,
	|		ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости КАК ВидЗанятости,
	|		СУММА(ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот) КАК СуммаВсегоОборот
	|	ИЗ
	|		ВТПособияПоУходу КАК ПособияСоциальномуСтрахованиюОбороты
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПособияСоциальномуСтрахованиюОбороты.ФизЛицо,
	|		ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД,
	|		ПособияСоциальномуСтрахованиюОбороты.УСН,
	|		ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости
	|	
	|	ИМЕЮЩИЕ
	|		СУММА(ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот) <> 0) КАК ДанныеУчетаПособий";
	
	РасходыПоУходуЗаСчетФедБюджетаТекст = 
	"ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА ПособияПоУходу.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Чернобыль)
	|					И ПособияПоУходу.УходЗаПервымРебенком
	|				ТОГДА ПособияПоУходу.СтраховыеСлучаи
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080004007,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияПоУходу.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Чернобыль)
	|					И ПособияПоУходу.УходЗаПервымРебенком
	|				ТОГДА ПособияПоУходу.СуммаСверхНорм
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080004008,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияПоУходу.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Чернобыль)
	|					И (НЕ ПособияПоУходу.УходЗаПервымРебенком)
	|				ТОГДА ПособияПоУходу.СтраховыеСлучаи
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080005007,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияПоУходу.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Чернобыль)
	|					И (НЕ ПособияПоУходу.УходЗаПервымРебенком)
	|				ТОГДА ПособияПоУходу.СуммаСверхНорм
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080005008,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияПоУходу.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Маяк)
	|					И ПособияПоУходу.УходЗаПервымРебенком
	|				ТОГДА ПособияПоУходу.СтраховыеСлучаи
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080004010,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияПоУходу.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Маяк)
	|					И ПособияПоУходу.УходЗаПервымРебенком
	|				ТОГДА ПособияПоУходу.СуммаСверхНорм
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080004011,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияПоУходу.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Маяк)
	|					И (НЕ ПособияПоУходу.УходЗаПервымРебенком)
	|				ТОГДА ПособияПоУходу.СтраховыеСлучаи
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080005010,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияПоУходу.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Маяк)
	|					И (НЕ ПособияПоУходу.УходЗаПервымРебенком)
	|				ТОГДА ПособияПоУходу.СуммаСверхНорм
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080005011,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияПоУходу.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ПодразделенияОсобогоРиска)
	|					И ПособияПоУходу.УходЗаПервымРебенком
	|				ТОГДА ПособияПоУходу.СтраховыеСлучаи
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080004016,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияПоУходу.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ПодразделенияОсобогоРиска)
	|					И ПособияПоУходу.УходЗаПервымРебенком
	|				ТОГДА ПособияПоУходу.СуммаСверхНорм
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080004017,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияПоУходу.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ПодразделенияОсобогоРиска)
	|					И (НЕ ПособияПоУходу.УходЗаПервымРебенком)
	|				ТОГДА ПособияПоУходу.СтраховыеСлучаи
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080005016,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияПоУходу.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ПодразделенияОсобогоРиска)
	|					И (НЕ ПособияПоУходу.УходЗаПервымРебенком)
	|				ТОГДА ПособияПоУходу.СуммаСверхНорм
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080005017
	|ИЗ
	|	ВТПособияПоУходуСверхНорм КАК ПособияПоУходу";
	
	ПолучателиПоУходуЗаСчетФедБюджетаТекст = 
	"ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА ВсеПолучатели.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Чернобыль)
	|					И ВсеПолучатели.УходЗаПервымРебенком
	|				ТОГДА ВсеПолучатели.КоличествоФизлиц
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080004006,
	|	СУММА(ВЫБОР
	|			КОГДА ВсеПолучатели.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Чернобыль)
	|					И (НЕ ВсеПолучатели.УходЗаПервымРебенком)
	|				ТОГДА ВсеПолучатели.КоличествоФизлиц
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080005006,
	|	СУММА(ВЫБОР
	|			КОГДА ВсеПолучатели.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Маяк)
	|					И ВсеПолучатели.УходЗаПервымРебенком
	|				ТОГДА ВсеПолучатели.КоличествоФизлиц
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080004009,
	|	СУММА(ВЫБОР
	|			КОГДА ВсеПолучатели.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Маяк)
	|					И (НЕ ВсеПолучатели.УходЗаПервымРебенком)
	|				ТОГДА ВсеПолучатели.КоличествоФизлиц
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080005009,
	|	СУММА(ВЫБОР
	|			КОГДА ВсеПолучатели.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ПодразделенияОсобогоРиска)
	|					И ВсеПолучатели.УходЗаПервымРебенком
	|				ТОГДА ВсеПолучатели.КоличествоФизлиц
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080004015,
	|	СУММА(ВЫБОР
	|			КОГДА ВсеПолучатели.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ПодразделенияОсобогоРиска)
	|					И (НЕ ВсеПолучатели.УходЗаПервымРебенком)
	|				ТОГДА ВсеПолучатели.КоличествоФизлиц
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080005015
	|ИЗ
	|	(ВЫБРАТЬ
	|		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПособияПоУходу.Физлицо) КАК КоличествоФизлиц,
	|		ПособияПоУходу.ВыплатаЗаСчетФедеральногоБюджета КАК ВыплатаЗаСчетФедеральногоБюджета,
	|		ПособияПоУходу.УходЗаПервымРебенком КАК УходЗаПервымРебенком
	|	ИЗ
	|		ВТПособияПоУходуСверхНорм КАК ПособияПоУходу
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПособияПоУходу.ВыплатаЗаСчетФедеральногоБюджета,
	|		ПособияПоУходу.УходЗаПервымРебенком) КАК ВсеПолучатели";
	
	ПолучателиПоУходуЗаСчетФедБюджетаДополнительноТекст = 
	"ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА ВсеПолучатели.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Чернобыль)
	|				ТОГДА ВсеПолучатели.КоличествоФизлиц
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080003006,
	|	СУММА(ВЫБОР
	|			КОГДА ВсеПолучатели.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Маяк)
	|				ТОГДА ВсеПолучатели.КоличествоФизлиц
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080003009,
	|	СУММА(ВЫБОР
	|			КОГДА ВсеПолучатели.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ПодразделенияОсобогоРиска)
	|				ТОГДА ВсеПолучатели.КоличествоФизлиц
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000080003015
	|ИЗ
	|	(ВЫБРАТЬ
	|		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПособияПоУходу.Физлицо) КАК КоличествоФизлиц,
	|		ПособияПоУходу.ВыплатаЗаСчетФедеральногоБюджета КАК ВыплатаЗаСчетФедеральногоБюджета
	|	ИЗ
	|		ВТПособияПоУходуСверхНорм КАК ПособияПоУходу
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПособияПоУходу.ВыплатаЗаСчетФедеральногоБюджета) КАК ВсеПолучатели";
	
	
	// ДоходыДляФСС_НС
	// Это итоговые суммы доходов, облагаемых взносами на страхование от несчастных случаев - Раздел III
	// Поля:
	//		П000090001004, ..., П000090001305  Таблицы 9
	// Описание:	
	//	Выбираются соответствующие данные из ВТДоходыФСС_НС (таблица с данными о доходах нарастающим итогом) 
	//  Показатели за месяц рассчитываются по данным нарастающим итогом
	// 
	// ДоходыФСС_НС
	// Таблица ВТДоходыФСС_НС содержит данные учета доходов с точки зрения обложения страховыми взносами
	// Поля:
	//		ФизЛицо,
	//		КодДоходаФСС_НС, 
	//		Результат, 
	//		МесяцДохода, 
	//		ПериодРегистрации 
	// Описание:	
	//	Выбираем из начисленные суммы либо непосредственно из документа НачислениеЗарплатыРаботникамОрганизаций
	//  (в конфигурации БП) либо из рег-ров расчета
	//  Рассчитываем облагаемеые суммы в целом по организации нарастающим итогом по месяцам отчетного периода
	//  с учетом инвалидности физлиц из таблицы ВТДанныеОбИнвалидности
	// 
	// ДанныеОбИнвалидности
	//	Поля:
	//		Период
	//		Физлицо
	//
	//	Описание:
	// 	список периодов-физлиц, которые являются инвалидами
	//
	
	ДоходыДляФСС_НСТекст = 
	"ВЫБРАТЬ
	|	ОсновныеНачисленияРаботниковОрганизаций.Физлицо КАК ФизЛицо,
	|	ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета.КодДоходаФСС_НС КАК КодДоходаФСС_НС,
	|	ОсновныеНачисленияРаботниковОрганизаций.Результат КАК Результат,
	|	ОсновныеНачисленияРаботниковОрганизаций.Ссылка.ПериодРегистрации КАК ПериодРегистрации
	|ПОМЕСТИТЬ ВТНачисленныеСуммы
	|ИЗ
	|	Документ.НачислениеЗарплатыРаботникамОрганизаций.Начисления КАК ОсновныеНачисленияРаботниковОрганизаций
	|ГДЕ
	|	ОсновныеНачисленияРаботниковОрганизаций.Ссылка.ПериодРегистрации МЕЖДУ &парамНачалоГода И &парамКонецОтчетногоПериода
	|	И ОсновныеНачисленияРаботниковОрганизаций.Ссылка.Организация = &парамОрганизация
	|	И ОсновныеНачисленияРаботниковОрганизаций.Ссылка.Проведен
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодРегистрации,
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ) КАК Период,
	|	СведенияОбИнвалидностиФизлиц.Физлицо КАК Физлицо
	|ПОМЕСТИТЬ ВТДанныеОбИнвалидности
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период КАК Период,
	|		СведенияОбИнвалидностиФизлиц.Физлицо КАК Физлицо,
	|		МАКСИМУМ(СведенияОбИнвалидностиФизлиц.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВТПериоды КАК Периоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК СведенияОбИнвалидностиФизлиц
	|			ПО Периоды.Период >= СведенияОбИнвалидностиФизлиц.Период
	|	ГДЕ
	|		СведенияОбИнвалидностиФизлиц.Физлицо В
	|				(ВЫБРАТЬ
	|					НачисленныеСуммы.ФизЛицо
	|				ИЗ
	|					ВТНачисленныеСуммы КАК НачисленныеСуммы)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СведенияОбИнвалидностиФизлиц.Физлицо,
	|		Периоды.Период) КАК Периоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК СведенияОбИнвалидностиФизлиц
	|		ПО (СведенияОбИнвалидностиФизлиц.Период = Периоды.ПериодРегистра)
	|			И (СведенияОбИнвалидностиФизлиц.Физлицо = Периоды.Физлицо)
	|ГДЕ
	|	СведенияОбИнвалидностиФизлиц.Инвалидность
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МЕСЯЦ(Периоды.Период) КАК МесяцДохода,
	|	(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА Доходы.КодДоходаФСС_НС = ЗНАЧЕНИЕ(Перечисление.ДоходыФСС_НС.Облагается)
	|						И СведенияИнвалидность.Физлицо ЕСТЬ НЕ NULL 
	|					ТОГДА Доходы.Результат
	|				ИНАЧЕ 0
	|			КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 1))) * &Делитель КАК РезультатИнвалида,
	|	(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА Доходы.КодДоходаФСС_НС = ЗНАЧЕНИЕ(Перечисление.ДоходыФСС_НС.Облагается)
	|					ТОГДА Доходы.Результат
	|				ИНАЧЕ 0
	|			КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 1))) * &Делитель КАК РезультатОблагается,
	|	(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА Доходы.КодДоходаФСС_НС <> ЗНАЧЕНИЕ(Перечисление.ДоходыФСС_НС.Облагается)
	|					ТОГДА Доходы.Результат
	|				ИНАЧЕ 0
	|			КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 1))) * &Делитель КАК РезультатНеОблагается
	|ПОМЕСТИТЬ ВТДоходыФСС_НС
	|ИЗ
	|	ВТПериоды КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачисленныеСуммы КАК Доходы
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОбИнвалидности КАК СведенияИнвалидность
	|			ПО Доходы.ФизЛицо = СведенияИнвалидность.Физлицо
	|				И Доходы.ПериодРегистрации = СведенияИнвалидность.Период
	|		ПО (Доходы.ПериодРегистрации МЕЖДУ &парамНачалоГода И КОНЕЦПЕРИОДА(Периоды.Период, МЕСЯЦ))
	|
	|СГРУППИРОВАТЬ ПО
	|	МЕСЯЦ(Периоды.Период)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	МесяцДохода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА МЕСЯЦ(Периоды.Период) = &ПоследнийМесяц
	|				ТОГДА Доходы.РезультатОблагается
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000090001004,
	|	СУММА(ВЫБОР
	|			КОГДА МЕСЯЦ(Периоды.Период) = &Месяц1
	|				ТОГДА Доходы.РезультатОблагается - ЕСТЬNULL(ДоходыПредМесяца.РезультатОблагается, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000090001104,
	|	СУММА(ВЫБОР
	|			КОГДА МЕСЯЦ(Периоды.Период) = &Месяц2
	|				ТОГДА Доходы.РезультатОблагается - ЕСТЬNULL(ДоходыПредМесяца.РезультатОблагается, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000090001204,
	|	СУММА(ВЫБОР
	|			КОГДА МЕСЯЦ(Периоды.Период) = &Месяц3
	|				ТОГДА Доходы.РезультатОблагается - ЕСТЬNULL(ДоходыПредМесяца.РезультатОблагается, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000090001304,
	|	СУММА(ВЫБОР
	|			КОГДА МЕСЯЦ(Периоды.Период) = &ПоследнийМесяц
	|				ТОГДА Доходы.РезультатИнвалида
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000090001005,
	|	СУММА(ВЫБОР
	|			КОГДА МЕСЯЦ(Периоды.Период) = &Месяц1
	|				ТОГДА Доходы.РезультатИнвалида - ЕСТЬNULL(ДоходыПредМесяца.РезультатИнвалида, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000090001105,
	|	СУММА(ВЫБОР
	|			КОГДА МЕСЯЦ(Периоды.Период) = &Месяц2
	|				ТОГДА Доходы.РезультатИнвалида - ЕСТЬNULL(ДоходыПредМесяца.РезультатИнвалида, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000090001205,
	|	СУММА(ВЫБОР
	|			КОГДА МЕСЯЦ(Периоды.Период) = &Месяц3
	|				ТОГДА Доходы.РезультатИнвалида - ЕСТЬNULL(ДоходыПредМесяца.РезультатИнвалида, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000090001305,
	|	СУММА(ВЫБОР
	|			КОГДА МЕСЯЦ(Периоды.Период) = &ПоследнийМесяц
	|				ТОГДА Доходы.РезультатНеОблагается
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000090001006
	|ИЗ
	|	ВТПериоды КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыФСС_НС КАК Доходы
	|		ПО (МЕСЯЦ(Периоды.Период) = Доходы.МесяцДохода)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыФСС_НС КАК ДоходыПредМесяца
	|		ПО (МЕСЯЦ(Периоды.Период) - 1 = ДоходыПредМесяца.МесяцДохода)";
	
	// корректируем округление в соответствии с указаниями пользователя
	ДоходыДляФСС_НСТекст = СтрЗаменить(ДоходыДляФСС_НСТекст,"ЧИСЛО(15, 1)","ЧИСЛО(15, " + ТочностьЕдиницыИзмерения + ")");
	
	РасчетПенейШтрафовТекст = 
	"ВЫБРАТЬ
	|	РасчетыПоСтраховымВзносамОстаткиИОбороты.ВидПлатежа КАК ВидПлатежа,
	|	РасчетыПоСтраховымВзносамОстаткиИОбороты.ФССНачальныйОстаток,
	|	РасчетыПоСтраховымВзносамОстаткиИОбороты.ФССКонечныйОстаток,
	|	РасчетыПоСтраховымВзносамОстаткиИОбороты.ФССНесчастныеСлучаиНачальныйОстаток,
	|	РасчетыПоСтраховымВзносамОстаткиИОбороты.ФССНесчастныеСлучаиКонечныйОстаток,
	|	РасчетыПоСтраховымВзносамОстаткиИОбороты.ФССПриход,
	|	РасчетыПоСтраховымВзносамОстаткиИОбороты.ФССРасход,
	|	РасчетыПоСтраховымВзносамОстаткиИОбороты.ФССНесчастныеСлучаиПриход,
	|	РасчетыПоСтраховымВзносамОстаткиИОбороты.ФССНесчастныеСлучаиРасход
	|ПОМЕСТИТЬ ВТРасчетПеней
	|ИЗ
	|	РегистрНакопления.РасчетыПоСтраховымВзносам.ОстаткиИОбороты(
	|			&парамНачалоГода,
	|			&парамКонецОтчетногоПериода,
	|			,
	|			,
	|			Организация = &парамОрганизация
	|				И ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Штраф), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.ПениСам), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.ПениАкт))) КАК РасчетыПоСтраховымВзносамОстаткиИОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидПлатежа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА РасчетПеней.ВидПлатежа <> ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Штраф)
	|				ТОГДА РасчетПеней.ФССНачальныйОстаток
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000040001003,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетПеней.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Штраф)
	|				ТОГДА РасчетПеней.ФССНачальныйОстаток
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000040001004,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетПеней.ВидПлатежа <> ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Штраф)
	|				ТОГДА РасчетПеней.ФССПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000040002003,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетПеней.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Штраф)
	|				ТОГДА РасчетПеней.ФССПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000040002004,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетПеней.ВидПлатежа <> ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Штраф)
	|				ТОГДА РасчетПеней.ФССРасход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000040004003,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетПеней.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Штраф)
	|				ТОГДА РасчетПеней.ФССРасход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000040004004,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетПеней.ВидПлатежа <> ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Штраф)
	|				ТОГДА РасчетПеней.ФССНесчастныеСлучаиНачальныйОстаток
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000120001003,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетПеней.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Штраф)
	|				ТОГДА РасчетПеней.ФССНесчастныеСлучаиНачальныйОстаток
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000120001004,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетПеней.ВидПлатежа <> ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Штраф)
	|				ТОГДА РасчетПеней.ФССНесчастныеСлучаиПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000120002003,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетПеней.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Штраф)
	|				ТОГДА РасчетПеней.ФССНесчастныеСлучаиПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000120002004,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетПеней.ВидПлатежа <> ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Штраф)
	|				ТОГДА РасчетПеней.ФССНесчастныеСлучаиРасход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000120004003,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетПеней.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Штраф)
	|				ТОГДА РасчетПеней.ФССНесчастныеСлучаиРасход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000120004004
	|ИЗ
	|	ВТРасчетПеней КАК РасчетПеней";
	
	РасчетыСФондомТекст = 
	"ВЫБРАТЬ
	|	РасчетыПоСтраховымВзносамОстаткиИОбороты.ВидПлатежа КАК ВидПлатежа,
	|	РасчетыПоСтраховымВзносамОстаткиИОбороты.Период КАК Период,
	|	РасчетыПоСтраховымВзносамОстаткиИОбороты.ОблагаетсяЕНВД,
	|	РасчетыПоСтраховымВзносамОстаткиИОбороты.ФССНачальныйОстаток,
	|	РасчетыПоСтраховымВзносамОстаткиИОбороты.ФССКонечныйОстаток,
	|	РасчетыПоСтраховымВзносамОстаткиИОбороты.ФССНесчастныеСлучаиНачальныйОстаток,
	|	РасчетыПоСтраховымВзносамОстаткиИОбороты.ФССНесчастныеСлучаиКонечныйОстаток,
	|	РасчетыПоСтраховымВзносамОстаткиИОбороты.ФССОборот,
	|	РасчетыПоСтраховымВзносамОстаткиИОбороты.ФССПриход,
	|	РасчетыПоСтраховымВзносамОстаткиИОбороты.ФССРасход,
	|	РасчетыПоСтраховымВзносамОстаткиИОбороты.ФССНесчастныеСлучаиОборот,
	|	РасчетыПоСтраховымВзносамОстаткиИОбороты.ФССНесчастныеСлучаиПриход,
	|	РасчетыПоСтраховымВзносамОстаткиИОбороты.ФССНесчастныеСлучаиРасход
	|ПОМЕСТИТЬ ВТРасчетыСФондом
	|ИЗ
	|	РегистрНакопления.РасчетыПоСтраховымВзносам.ОстаткиИОбороты(
	|			&парамНачалоГода,
	|			&парамКонецОтчетногоПериода,
	|			Месяц,
	|			,
	|			Организация = &парамОрганизация
	|				И (НЕ ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Штраф), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.ПениСам), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.ПениАкт)))) КАК РасчетыПоСтраховымВзносамОстаткиИОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(РасчетыСФондом.Период) = 1
	|						ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиНачальныйОстаток
	|					ИНАЧЕ 0
	|				КОНЕЦ) > 0
	|			ТОГДА СУММА(ВЫБОР
	|						КОГДА МЕСЯЦ(РасчетыСФондом.Период) = 1
	|							ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиНачальныйОстаток
	|						ИНАЧЕ 0
	|					КОНЕЦ)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П000100001003,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог)
	|					И МЕСЯЦ(РасчетыСФондом.Период) < &Месяц1
	|				ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000100002001,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц1
	|				ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000100002101,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц2
	|				ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000100002201,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц3
	|				ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000100002301,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогАкт)
	|				ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000100003003,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НеПринято)
	|				ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000100004003,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогСам)
	|				ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000100005003,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.ПолученоИзФонда)
	|				ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000100006003,
	|	ВЫБОР
	|		КОГДА СУММА(ВЫБОР
	|					КОГДА МЕСЯЦ(РасчетыСФондом.Период) = 1
	|						ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиНачальныйОстаток
	|					ИНАЧЕ 0
	|				КОНЕЦ) < 0
	|			ТОГДА -СУММА(ВЫБОР
	|						КОГДА МЕСЯЦ(РасчетыСФондом.Период) = 1
	|							ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиНачальныйОстаток
	|						ИНАЧЕ 0
	|					КОНЕЦ)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П000100009003,
	|	-СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию)
	|					И МЕСЯЦ(РасчетыСФондом.Период) < &Месяц1
	|				ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000100010001,
	|	-СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц1
	|				ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000100010101,
	|	-СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц2
	|				ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000100010201,
	|	-СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц3
	|				ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000100010301,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа <> ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию)
	|					И МЕСЯЦ(РасчетыСФондом.Период) < &Месяц1
	|				ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиРасход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000100011001,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа <> ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц1
	|				ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиРасход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000100011101,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа <> ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц2
	|				ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиРасход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000100011201,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа <> ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц3
	|				ТОГДА РасчетыСФондом.ФССНесчастныеСлучаиРасход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000100011301,
	|	ВЫБОР
	|		КОГДА СУММА(ВЫБОР
	|					КОГДА РасчетыСФондом.ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогСам), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогСам))
	|							И МЕСЯЦ(РасчетыСФондом.Период) = 1
	|						ТОГДА РасчетыСФондом.ФССНачальныйОстаток
	|					КОГДА РасчетыСФондом.ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.ПолученоИзФонда), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НеПринято))
	|							И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|							И (НЕ РасчетыСФондом.ОблагаетсяЕНВД)
	|							И МЕСЯЦ(РасчетыСФондом.Период) = 1
	|						ТОГДА РасчетыСФондом.ФССНачальныйОстаток
	|					ИНАЧЕ 0
	|				КОНЕЦ) > 0
	|			ТОГДА СУММА(ВЫБОР
	|						КОГДА РасчетыСФондом.ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогСам), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогСам))
	|								И МЕСЯЦ(РасчетыСФондом.Период) = 1
	|							ТОГДА РасчетыСФондом.ФССНачальныйОстаток
	|						КОГДА РасчетыСФондом.ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.ПолученоИзФонда), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НеПринято))
	|								И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|								И (НЕ РасчетыСФондом.ОблагаетсяЕНВД)
	|								И МЕСЯЦ(РасчетыСФондом.Период) = 1
	|							ТОГДА РасчетыСФондом.ФССНачальныйОстаток
	|						ИНАЧЕ 0
	|					КОНЕЦ)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П000010001003,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог)
	|					И МЕСЯЦ(РасчетыСФондом.Период) < &Месяц1
	|				ТОГДА РасчетыСФондом.ФССПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010002101,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц1
	|				ТОГДА РасчетыСФондом.ФССПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010002301,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц2
	|				ТОГДА РасчетыСФондом.ФССПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010002401,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц3
	|				ТОГДА РасчетыСФондом.ФССПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010002501,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогАкт)
	|					И МЕСЯЦ(РасчетыСФондом.Период) < &Месяц1
	|				ТОГДА РасчетыСФондом.ФССПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010003101,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогАкт)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц1
	|				ТОГДА РасчетыСФондом.ФССПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010003301,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогАкт)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц2
	|				ТОГДА РасчетыСФондом.ФССПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010003401,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогАкт)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц3
	|				ТОГДА РасчетыСФондом.ФССПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010003501,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогСам)
	|				ТОГДА РасчетыСФондом.ФССПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010004003,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НеПринято)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И (НЕ РасчетыСФондом.ОблагаетсяЕНВД)
	|					И МЕСЯЦ(РасчетыСФондом.Период) < &Месяц1
	|				ТОГДА РасчетыСФондом.ФССПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010005101,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НеПринято)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И (НЕ РасчетыСФондом.ОблагаетсяЕНВД)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц1
	|				ТОГДА РасчетыСФондом.ФССПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010005301,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НеПринято)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И (НЕ РасчетыСФондом.ОблагаетсяЕНВД)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц2
	|				ТОГДА РасчетыСФондом.ФССПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010005401,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НеПринято)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И (НЕ РасчетыСФондом.ОблагаетсяЕНВД)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц3
	|				ТОГДА РасчетыСФондом.ФССПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010005501,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.ПолученоИзФонда)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И (НЕ РасчетыСФондом.ОблагаетсяЕНВД)
	|					И МЕСЯЦ(РасчетыСФондом.Период) < &Месяц1
	|				ТОГДА РасчетыСФондом.ФССПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010006101,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.ПолученоИзФонда)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И (НЕ РасчетыСФондом.ОблагаетсяЕНВД)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц1
	|				ТОГДА РасчетыСФондом.ФССПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010006301,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.ПолученоИзФонда)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И (НЕ РасчетыСФондом.ОблагаетсяЕНВД)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц2
	|				ТОГДА РасчетыСФондом.ФССПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010006401,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.ПолученоИзФонда)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И (НЕ РасчетыСФондом.ОблагаетсяЕНВД)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц3
	|				ТОГДА РасчетыСФондом.ФССПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010006501,
	|	ВЫБОР
	|		КОГДА СУММА(ВЫБОР
	|					КОГДА РасчетыСФондом.ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогСам), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогСам))
	|							И МЕСЯЦ(РасчетыСФондом.Период) = &ПоследнийМесяц
	|						ТОГДА РасчетыСФондом.ФССКонечныйОстаток
	|					ИНАЧЕ 0
	|				КОНЕЦ) < 0
	|			ТОГДА -СУММА(ВЫБОР
	|						КОГДА РасчетыСФондом.ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогСам), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогСам))
	|								И МЕСЯЦ(РасчетыСФондом.Период) = &ПоследнийМесяц
	|							ТОГДА РасчетыСФондом.ФССКонечныйОстаток
	|						ИНАЧЕ 0
	|					КОНЕЦ)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П000010011003,
	|	ВЫБОР
	|		КОГДА СУММА(ВЫБОР
	|					КОГДА РасчетыСФондом.ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.ПолученоИзФонда), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НеПринято))
	|							И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|							И (НЕ РасчетыСФондом.ОблагаетсяЕНВД)
	|							И МЕСЯЦ(РасчетыСФондом.Период) = 1
	|						ТОГДА РасчетыСФондом.ФССНачальныйОстаток
	|					ИНАЧЕ 0
	|				КОНЕЦ) < 0
	|			ТОГДА -СУММА(ВЫБОР
	|						КОГДА РасчетыСФондом.ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.ПолученоИзФонда), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НеПринято))
	|								И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|								И (НЕ РасчетыСФондом.ОблагаетсяЕНВД)
	|								И МЕСЯЦ(РасчетыСФондом.Период) = 1
	|							ТОГДА РасчетыСФондом.ФССНачальныйОстаток
	|						ИНАЧЕ 0
	|					КОНЕЦ)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П000010013003,
	|	ВЫБОР
	|		КОГДА СУММА(ВЫБОР
	|					КОГДА РасчетыСФондом.ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогСам), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогСам))
	|							И МЕСЯЦ(РасчетыСФондом.Период) = 1
	|						ТОГДА РасчетыСФондом.ФССНачальныйОстаток
	|					ИНАЧЕ 0
	|				КОНЕЦ) < 0
	|			ТОГДА -СУММА(ВЫБОР
	|						КОГДА РасчетыСФондом.ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогСам), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогСам))
	|								И МЕСЯЦ(РасчетыСФондом.Период) = 1
	|							ТОГДА РасчетыСФондом.ФССНачальныйОстаток
	|						ИНАЧЕ 0
	|					КОНЕЦ)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П000010014003,
	|	-СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И (НЕ РасчетыСФондом.ОблагаетсяЕНВД)
	|					И МЕСЯЦ(РасчетыСФондом.Период) < &Месяц1
	|				ТОГДА РасчетыСФондом.ФССОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010015101,
	|	-СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И (НЕ РасчетыСФондом.ОблагаетсяЕНВД)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц1
	|				ТОГДА РасчетыСФондом.ФССОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010015301,
	|	-СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И (НЕ РасчетыСФондом.ОблагаетсяЕНВД)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц2
	|				ТОГДА РасчетыСФондом.ФССОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010015401,
	|	-СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И (НЕ РасчетыСФондом.ОблагаетсяЕНВД)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц3
	|				ТОГДА РасчетыСФондом.ФССОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010015501,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа <> ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И (НЕ РасчетыСФондом.ОблагаетсяЕНВД)
	|					И МЕСЯЦ(РасчетыСФондом.Период) < &Месяц1
	|				ТОГДА РасчетыСФондом.ФССРасход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010016101,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа <> ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И (НЕ РасчетыСФондом.ОблагаетсяЕНВД)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц1
	|				ТОГДА РасчетыСФондом.ФССРасход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010016301,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа <> ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И (НЕ РасчетыСФондом.ОблагаетсяЕНВД)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц2
	|				ТОГДА РасчетыСФондом.ФССРасход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010016401,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа <> ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И (НЕ РасчетыСФондом.ОблагаетсяЕНВД)
	|					И МЕСЯЦ(РасчетыСФондом.Период) = &Месяц3
	|				ТОГДА РасчетыСФондом.ФССРасход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010016501,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.ПолученоИзФонда)
	|					И РасчетыСФондом.ОблагаетсяЕНВД
	|				ТОГДА РасчетыСФондом.ФССПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060001003_ЕНВД,
	|	ВЫБОР
	|		КОГДА СУММА(ВЫБОР
	|					КОГДА РасчетыСФондом.ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.ПолученоИзФонда))
	|							И РасчетыСФондом.ОблагаетсяЕНВД
	|							И МЕСЯЦ(РасчетыСФондом.Период) = 1
	|						ТОГДА РасчетыСФондом.ФССНачальныйОстаток
	|					ИНАЧЕ 0
	|				КОНЕЦ) < 0
	|			ТОГДА -СУММА(ВЫБОР
	|						КОГДА РасчетыСФондом.ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.ПолученоИзФонда))
	|								И РасчетыСФондом.ОблагаетсяЕНВД
	|								И МЕСЯЦ(РасчетыСФондом.Период) = 1
	|							ТОГДА РасчетыСФондом.ФССНачальныйОстаток
	|						ИНАЧЕ 0
	|					КОНЕЦ)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П000060002003_ЕНВД,
	|	ВЫБОР
	|		КОГДА СУММА(ВЫБОР
	|					КОГДА РасчетыСФондом.ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.ПолученоИзФонда))
	|							И РасчетыСФондом.ОблагаетсяЕНВД
	|							И МЕСЯЦ(РасчетыСФондом.Период) = &ПоследнийМесяц
	|						ТОГДА РасчетыСФондом.ФССКонечныйОстаток
	|					ИНАЧЕ 0
	|				КОНЕЦ) < 0
	|			ТОГДА -СУММА(ВЫБОР
	|						КОГДА РасчетыСФондом.ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.ПолученоИзФонда))
	|								И РасчетыСФондом.ОблагаетсяЕНВД
	|								И МЕСЯЦ(РасчетыСФондом.Период) = &ПоследнийМесяц
	|							ТОГДА РасчетыСФондом.ФССКонечныйОстаток
	|						ИНАЧЕ 0
	|					КОНЕЦ)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П000060003003_ЕНВД,
	|	-СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию)
	|					И РасчетыСФондом.ОблагаетсяЕНВД
	|				ТОГДА РасчетыСФондом.ФССОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060004003_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.ПолученоИзФонда)
	|					И УчетнаяПолитикаНалоговыйУчет.УСН
	|					И (НЕ РасчетыСФондом.ОблагаетсяЕНВД)
	|				ТОГДА РасчетыСФондом.ФССПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060001003_УСН,
	|	ВЫБОР
	|		КОГДА СУММА(ВЫБОР
	|					КОГДА РасчетыСФондом.ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.ПолученоИзФонда))
	|							И УчетнаяПолитикаНалоговыйУчет.УСН
	|							И (НЕ РасчетыСФондом.ОблагаетсяЕНВД)
	|							И МЕСЯЦ(РасчетыСФондом.Период) = 1
	|						ТОГДА РасчетыСФондом.ФССНачальныйОстаток
	|					ИНАЧЕ 0
	|				КОНЕЦ) < 0
	|			ТОГДА -СУММА(ВЫБОР
	|						КОГДА РасчетыСФондом.ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.ПолученоИзФонда))
	|								И УчетнаяПолитикаНалоговыйУчет.УСН
	|								И (НЕ РасчетыСФондом.ОблагаетсяЕНВД)
	|								И МЕСЯЦ(РасчетыСФондом.Период) = 1
	|							ТОГДА РасчетыСФондом.ФССНачальныйОстаток
	|						ИНАЧЕ 0
	|					КОНЕЦ)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П000060002003_УСН,
	|	ВЫБОР
	|		КОГДА СУММА(ВЫБОР
	|					КОГДА РасчетыСФондом.ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.ПолученоИзФонда))
	|							И УчетнаяПолитикаНалоговыйУчет.УСН
	|							И (НЕ РасчетыСФондом.ОблагаетсяЕНВД)
	|							И МЕСЯЦ(РасчетыСФондом.Период) = &ПоследнийМесяц
	|						ТОГДА РасчетыСФондом.ФССКонечныйОстаток
	|					ИНАЧЕ 0
	|				КОНЕЦ) < 0
	|			ТОГДА -СУММА(ВЫБОР
	|						КОГДА РасчетыСФондом.ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.ПолученоИзФонда))
	|								И УчетнаяПолитикаНалоговыйУчет.УСН
	|								И (НЕ РасчетыСФондом.ОблагаетсяЕНВД)
	|								И МЕСЯЦ(РасчетыСФондом.Период) = &ПоследнийМесяц
	|							ТОГДА РасчетыСФондом.ФССКонечныйОстаток
	|						ИНАЧЕ 0
	|					КОНЕЦ)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П000060003003_УСН,
	|	-СУММА(ВЫБОР
	|			КОГДА РасчетыСФондом.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию)
	|					И УчетнаяПолитикаНалоговыйУчет.УСН
	|					И (НЕ РасчетыСФондом.ОблагаетсяЕНВД)
	|				ТОГДА РасчетыСФондом.ФССОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060004003_УСН
	|ИЗ
	|	ВТРасчетыСФондом КАК РасчетыСФондом
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНалоговыйУчет
	|		ПО (МЕСЯЦ(РасчетыСФондом.Период) = УчетнаяПолитикаНалоговыйУчет.Месяц)";
	РасчетыСФондомТекст =  ЗаполнениеРегламентированнойОтчетностиПереопределяемый.УстановитьНазваниеРегистраУчетнойПолитикиСтраховыхВзносов(РасчетыСФондомТекст);
	
	ПлатежныеПорученияТекст = 
	"ВЫБРАТЬ ПЕРВЫЕ 3
	|	РасчетыПоСтраховымВзносам.ПлатежноеПоручениеФССНомер,
	|	РасчетыПоСтраховымВзносам.ПлатежноеПоручениеФССДата,
	|	РасчетыПоСтраховымВзносам.ДатаПлатежа КАК ДатаПлатежа
	|ИЗ
	|	Документ.РасчетыПоСтраховымВзносам КАК РасчетыПоСтраховымВзносам
	|ГДЕ
	|	РасчетыПоСтраховымВзносам.Организация = &парамОрганизация
	|	И РасчетыПоСтраховымВзносам.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог)
	|	И (НЕ РасчетыПоСтраховымВзносам.ВидОперации В (ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасчетыПоСтраховымВзносам.Начисление), ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасчетыПоСтраховымВзносам.ПособияПоСтрахованию)))
	|	И РасчетыПоСтраховымВзносам.ДатаПлатежа МЕЖДУ &парамНачалоКвартала И &парамКонецОтчетногоПериода
	|	И РасчетыПоСтраховымВзносам.ПлатежноеПоручениеФССНомер <> """"
	|	И РасчетыПоСтраховымВзносам.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаПлатежа";
	
	ПлатежныеПорученияНСПЗТекст = 
	"ВЫБРАТЬ ПЕРВЫЕ 3
	|	РасчетыПоСтраховымВзносам.ДатаПлатежа КАК ДатаПлатежа,
	|	РасчетыПоСтраховымВзносам.ПлатежноеПоручениеФСС_НС_ПЗНомер,
	|	РасчетыПоСтраховымВзносам.ПлатежноеПоручениеФСС_НС_ПЗДата
	|ИЗ
	|	Документ.РасчетыПоСтраховымВзносам КАК РасчетыПоСтраховымВзносам
	|ГДЕ
	|	РасчетыПоСтраховымВзносам.Организация = &парамОрганизация
	|	И РасчетыПоСтраховымВзносам.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог)
	|	И (НЕ РасчетыПоСтраховымВзносам.ВидОперации В (ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасчетыПоСтраховымВзносам.Начисление), ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасчетыПоСтраховымВзносам.ПособияПоСтрахованию)))
	|	И РасчетыПоСтраховымВзносам.ДатаПлатежа МЕЖДУ &парамНачалоКвартала И &парамКонецОтчетногоПериода
	|	И РасчетыПоСтраховымВзносам.ПлатежноеПоручениеФСС_НС_ПЗНомер <> """"
	|	И РасчетыПоСтраховымВзносам.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаПлатежа";

	
	// -------------------------------------------------------------------------------
	// Вывод данных в отчет
	
	УзелРаздел1_1 = ОпределитьСтрокуВДеревеДанныхДляЗаполнения(ДеревоПоказателей, "Раздел1_1");
	УзелРаздел1_2 = ОпределитьСтрокуВДеревеДанныхДляЗаполнения(ДеревоПоказателей, "Раздел1_2");
	УзелРаздел1_3 = ОпределитьСтрокуВДеревеДанныхДляЗаполнения(ДеревоПоказателей, "Раздел1_3");
	УзелРаздел2_4 = ОпределитьСтрокуВДеревеДанныхДляЗаполнения(ДеревоПоказателей, "Раздел2_4");
	УзелРаздел3_1 = ОпределитьСтрокуВДеревеДанныхДляЗаполнения(ДеревоПоказателей, "Раздел3_1");
	УзелРаздел3_2 = ОпределитьСтрокуВДеревеДанныхДляЗаполнения(ДеревоПоказателей, "Раздел3_2");
	
	// расчет численности
	ИДКонфигурации = РегламентированнаяОтчетность.ИДКонфигурации(); 
	Если ИДКонфигурации = "БП" ИЛИ ИДКонфигурации = "БПКОРП" ИЛИ ИДКонфигурации = "БАУКОРП" ИЛИ ИДКонфигурации = "БАУ" Тогда
		
		ЧисленностьРаботниковНаОбщемрежиме = 0;
		ЧисленностьЖенщинНаОбщемрежиме = 0;
		ЧисленностьИнвалидовНаОбщемрежиме = 0;
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Доходы.ФизЛицо) КАК П000090001001,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СведенияИнвалидность.Физлицо) КАК П000090001002
		|ИЗ
		|	(ВЫБРАТЬ
		|		НачисленияРаботниковОрганизаций.ФизЛицо КАК ФизЛицо,
		|		НачисленияРаботниковОрганизаций.ВидРасчета.КодДоходаФСС_НС КАК КодДоходаФСС_НС,
		|		НачисленияРаботниковОрганизаций.Результат КАК Результат,
		|		МЕСЯЦ(НачисленияРаботниковОрганизаций.Ссылка.ПериодРегистрации) КАК МесяцДохода,
		|		НачисленияРаботниковОрганизаций.Ссылка.ПериодРегистрации КАК ПериодРегистрации
		|	ИЗ
		|		Документ.НачислениеЗарплатыРаботникамОрганизаций.Начисления КАК НачисленияРаботниковОрганизаций
		|	ГДЕ
		|		НачисленияРаботниковОрганизаций.Ссылка.ПериодРегистрации МЕЖДУ &парамНачалоГода И &парамКонецОтчетногоПериода
		|		И НачисленияРаботниковОрганизаций.Ссылка.Проведен
		|		И НачисленияРаботниковОрганизаций.Ссылка.Организация = &парамОрганизация) КАК Доходы
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|		НАЧАЛОПЕРИОДА(Периоды.Период,МЕСЯЦ) КАК Период,
		|		СведенияОбИнвалидностиФизлиц.Физлицо КАК Физлицо
		|	ИЗ
		|		(ВЫБРАТЬ
		|			Периоды.Период КАК Период,
		|			СведенияОбИнвалидностиФизлиц.Физлицо КАК Физлицо,
		|			МАКСИМУМ(СведенияОбИнвалидностиФизлиц.Период) КАК ПериодРегистра
		|		ИЗ
		|			ВТПериоды КАК Периоды
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК СведенияОбИнвалидностиФизлиц
		|				ПО Периоды.Период >= СведенияОбИнвалидностиФизлиц.Период
		|		
		|		СГРУППИРОВАТЬ ПО
		|			СведенияОбИнвалидностиФизлиц.Физлицо,
		|			Периоды.Период) КАК Периоды
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК СведенияОбИнвалидностиФизлиц
		|			ПО СведенияОбИнвалидностиФизлиц.Период = Периоды.ПериодРегистра И СведенияОбИнвалидностиФизлиц.Физлицо = Периоды.Физлицо
		|
		|	ГДЕ
		|		(СведенияОбИнвалидностиФизлиц.Инвалидность)) КАК СведенияИнвалидность
		|		ПО Доходы.ФизЛицо = СведенияИнвалидность.Физлицо И  Доходы.ПериодРегистрации = СведенияИнвалидность.Период";
		РезультатЗапроса = Запрос.Выполнить();
		ВывестиРезультатЗапросаВДеревоПоказателей(УзелРаздел3_1, РезультатЗапроса); 
		Выборка = РезультатЗапроса.Выбрать();
		Если Выборка.Следующий() Тогда
			ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел1_1,"П000000003000", Выборка.П000090001002); // в т.ч. инвалидов
		КонецЕсли;
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	МЕСЯЦ(Периоды.Период) КАК Месяц,
		|	ЕСТЬNULL(ВЫБОР
		|			КОГДА УчетнаяПолитикаНалоговыйУчет.СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.СистемыНалогообложения.Упрощенная)
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ, ЛОЖЬ) КАК УСН,
		|	ЕСТЬNULL(УчетнаяПолитикаНалоговыйУчет.УплачиватьДобровольныеВзносыВФСС, ЛОЖЬ) КАК УплачиватьДобровольныеВзносыВФСС
		|ПОМЕСТИТЬ ВТУчетнаяПолитикаНалоговыйУчет
		|ИЗ
		|	(ВЫБРАТЬ
		|		Периоды.Период КАК Период,
		|		МАКСИМУМ(УчетнаяПолитикаНалоговыйУчет.Период) КАК ПериодРегистра
		|	ИЗ
		|		ВТПериоды КАК Периоды
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаНалоговыйУчет
		|			ПО Периоды.Период >= УчетнаяПолитикаНалоговыйУчет.Период
		|				И (УчетнаяПолитикаНалоговыйУчет.Организация = &парамГоловнаяОрганизация)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Периоды.Период) КАК Периоды
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаНалоговыйУчет
		|		ПО Периоды.ПериодРегистра = УчетнаяПолитикаНалоговыйУчет.Период
		|			И (УчетнаяПолитикаНалоговыйУчет.Организация = &парамГоловнаяОрганизация)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Месяц
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСНСведенияОДоходах.ФизЛицо КАК ФизЛицо
		|ПОМЕСТИТЬ ВТФизлицаБезНалоговойБазы
		|ИЗ
		|	РегистрНакопления.СтраховыеВзносыСведенияОДоходах КАК ЕСНСведенияОДоходах
		|ГДЕ
		|	ЕСНСведенияОДоходах.Период МЕЖДУ &парамНачалоГода И &парамКонецОтчетногоПериода
		|	И ЕСНСведенияОДоходах.Организация = &парамГоловнаяОрганизация
		|
		|СГРУППИРОВАТЬ ПО
		|	ЕСНСведенияОДоходах.ФизЛицо
		|
		|ИМЕЮЩИЕ
		|	СУММА(ВЫБОР
		|			КОГДА ЕСНСведенияОДоходах.ВидДохода.ВходитВБазуФСС
		|				ТОГДА ЕСНСведенияОДоходах.Результат - ЕСНСведенияОДоходах.Скидка
		|			ИНАЧЕ 0
		|		КОНЕЦ) < 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСННачисления.ФизЛицо КАК ФизЛицо,
		|	ВЫБОР
		|		КОГДА ЕСННачисления.ФизЛицо.Пол = ЗНАЧЕНИЕ(Перечисление.ПолФизическихЛиц.Женский)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоЖенщина,
		|	СУММА(ВЫБОР
		|			КОГДА (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
		|					И (НЕ ЕСННачисления.ОблагаетсяЕНВД)
		|					И ЕСННачисления.ВидДохода.ВходитВБазуФСС
		|				ТОГДА ЕСННачисления.Результат - ЕСННачисления.Скидка
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК НалоговаяБазаФСС,
		|	СУММА(ВЫБОР
		|			КОГДА (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
		|					И (НЕ ЕСННачисления.ОблагаетсяЕНВД)
		|					И ЕСННачисления.ВидДохода.ВходитВБазуФСС
		|				ТОГДА ЕСННачисления.Результат
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК БазаФСС,
		|	СУММА(ВЫБОР
		|			КОГДА ЕСННачисления.ОблагаетсяЕНВД
		|				ТОГДА ЕСННачисления.Результат
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК БазаФССЕНВД,
		|	СУММА(ВЫБОР
		|			КОГДА УчетнаяПолитикаНалоговыйУчет.УСН
		|					И (НЕ ЕСННачисления.ОблагаетсяЕНВД)
		|				ТОГДА ЕСННачисления.Результат
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК БазаФССУСН
		|ПОМЕСТИТЬ ВТНалоговыеБазыПоФизлицам
		|ИЗ
		|	РегистрНакопления.СтраховыеВзносыСведенияОДоходах КАК ЕСННачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлицаБезНалоговойБазы КАК ФизлицаБезНалоговойБазы
		|		ПО ЕСННачисления.ФизЛицо = ФизлицаБезНалоговойБазы.ФизЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНалоговыйУчет
		|		ПО (МЕСЯЦ(ЕСННачисления.Период) = УчетнаяПолитикаНалоговыйУчет.Месяц)
		|ГДЕ
		|	ЕСННачисления.Период МЕЖДУ &парамНачалоГода И &парамКонецОтчетногоПериода
		|	И ЕСННачисления.ОбособленноеПодразделение = &парамОрганизация
		|	И ФизлицаБезНалоговойБазы.ФизЛицо ЕСТЬ NULL 
		|
		|СГРУППИРОВАТЬ ПО
		|	ЕСННачисления.ФизЛицо,
		|	ВЫБОР
		|		КОГДА ЕСННачисления.ФизЛицо.Пол = ЗНАЧЕНИЕ(Перечисление.ПолФизическихЛиц.Женский)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА ДоходыПоФЛ.БазаФССЕНВД <> 0
		|					ТОГДА 1
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК ЧисленностьРаботниковНаЕНВД,
		|	ЕСТЬNULL(СУММА(1), 0) КАК ЧисленностьРаботников,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА ДоходыПоФЛ.БазаФССЕНВД <> 0
		|						И ДоходыПоФЛ.ЭтоЖенщина
		|					ТОГДА 1
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК ЧисленностьЖенщинНаЕНВД,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА ДоходыПоФЛ.ЭтоЖенщина
		|					ТОГДА 1
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК ЧисленностьЖенщин,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА ДоходыПоФЛ.БазаФССУСН <> 0
		|					ТОГДА 1
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК ЧисленностьРаботниковНаУСН,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА ДоходыПоФЛ.БазаФССУСН <> 0
		|						И ДоходыПоФЛ.ЭтоЖенщина
		|					ТОГДА 1
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК ЧисленностьЖенщинНаУСН
		|ИЗ
		|	ВТНалоговыеБазыПоФизлицам КАК ДоходыПоФЛ";
		
		КоличествоМесяцевРаботы = 1;
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ЧисленностьРаботниковНаУСН = Выборка.ЧисленностьРаботниковНаУСН;
			ЧисленностьРаботниковНаЕНВД = Выборка.ЧисленностьРаботниковНаЕНВД;
			ЧисленностьЖенщинНаУСН = Выборка.ЧисленностьЖенщинНаУСН;
			ЧисленностьЖенщинНаЕНВД = Выборка.ЧисленностьЖенщинНаЕНВД;
			ЧисленностьРаботниковНаОбщемрежиме = Выборка.ЧисленностьРаботников;
			ЧисленностьЖенщинНаОбщемРежиме = Выборка.ЧисленностьЖенщин;
		КонецЕсли;
		
		ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел1_1,"П000000001000", Окр(ЧисленностьРаботниковНаОбщемрежиме ));
		ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел1_1,"П000000002000", Окр(ЧисленностьЖенщинНаОбщемрежиме )); // в т.ч. женщин
		ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел3_1,"П000090001001", Окр(ЧисленностьРаботниковНаОбщемРежиме  ));
		
		
	Иначе
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	УчетнаяПолитикаНалоговыйУчет.Месяц
		|ИЗ
		|	ВТУчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНалоговыйУчет
		|ГДЕ
		|	УчетнаяПолитикаНалоговыйУчет.УСН";	
		Запрос.Текст = ЗаполнениеРегламентированнойОтчетностиПереопределяемый.УстановитьНазваниеРегистраУчетнойПолитикиСтраховыхВзносов(Запрос.Текст);
		СписокМесяцевУСН = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Месяц");
		
		ЧисленностьРаботниковНаУСН = 0;
		ЧисленностьРаботниковНаЕНВД = 0;
		ЧисленностьЖенщинНаУСН = 0;
		ЧисленностьЖенщинНаЕНВД = 0;
		ЧисленностьРаботниковНаОбщемрежиме = 0;
		ЧисленностьЖенщинНаОбщемрежиме = 0;
		ЧисленностьРаботников = 0;
		ЧисленностьИнвалидов = 0;
		ЧисленностьИнвалидовНаОбщемрежиме = 0;
		КоличествоМесяцевРаботы = 0;
		Отчет = Отчеты.СредняяЧисленностьРаботниковОрганизаций.Создать();
		ТаблицаСреднихЧисленостей = Отчет.ПолучитьТаблицуЧисленностей(Организация, НачалоГода(ДатаКонцаПериодаОтчета), ДатаКонцаПериодаОтчета);
		Если ТаблицаСреднихЧисленостей.Количество() > 0 Тогда
			КоличествоМесяцевРаботы = ТаблицаСреднихЧисленостей.Количество();
			Для каждого СтрокаМесяца из ТаблицаСреднихЧисленостей Цикл
				ЭтоМесяцУСН = СписокМесяцевУСН.Найти(Месяц(СтрокаМесяца.МесяцОтчета)) <> Неопределено;
				ЧисленностьРаботниковНаУСН = ЧисленностьРаботниковНаУСН + ?(ЭтоМесяцУСН,Окр(СтрокаМесяца.СредняяЧисленностьНеЕНВД),0);
				ЧисленностьЖенщинНаУСН = ЧисленностьЖенщинНаУСН + ?(ЭтоМесяцУСН,Окр(СтрокаМесяца.СредняяЧисленностьЖенщинНеЕНВД),0);
				ЧисленностьРаботниковНаЕНВД = ЧисленностьРаботниковНаЕНВД + Окр(СтрокаМесяца.СредняяЧисленностьЕНВД);
				ЧисленностьЖенщинНаЕНВД = ЧисленностьЖенщинНаЕНВД + Окр(СтрокаМесяца.СредняяЧисленностьЖенщинЕНВД);
				ЧисленностьРаботниковНаОбщемрежиме = ЧисленностьРаботниковНаОбщемрежиме + ?(ЭтоМесяцУСН, 0, Окр(СтрокаМесяца.СредняяЧисленностьНеЕНВД));
				ЧисленностьЖенщинНаОбщемрежиме = ЧисленностьЖенщинНаОбщемрежиме + ?(ЭтоМесяцУСН, 0, Окр(СтрокаМесяца.СредняяЧисленностьЖенщинНеЕНВД));
				ЧисленностьИнвалидовНаОбщемрежиме = ЧисленностьИнвалидовНаОбщемрежиме + ?(ЭтоМесяцУСН, 0, Окр(СтрокаМесяца.СредняяЧисленностьИнвалидовНеЕНВД));
				ЧисленностьРаботников = ЧисленностьРаботников + Окр(СтрокаМесяца.СредняяЧисленность);
				ЧисленностьИнвалидов = ЧисленностьИнвалидов + Окр(СтрокаМесяца.СредняяЧисленностьИнвалидов);
			КонецЦикла;
			ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел1_1,"П000000001000", Окр(ЧисленностьРаботниковНаОбщемрежиме / КоличествоМесяцевРаботы));
			ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел1_1,"П000000002000", Окр(ЧисленностьЖенщинНаОбщемрежиме / КоличествоМесяцевРаботы)); // в т.ч. женщин
			ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел1_1,"П000000003000", Окр(ЧисленностьИнвалидовНаОбщемрежиме / КоличествоМесяцевРаботы)); // в т.ч. женщин
			ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел3_1,"П000090001001", Окр(ЧисленностьРаботников / КоличествоМесяцевРаботы));
			ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел3_1,"П000090001002", Окр(ЧисленностьИнвалидов / КоличествоМесяцевРаботы)); // в т.ч. инвалидов
		КонецЕсли;
	КонецЕсли;
	// Раздел I (табл. 3)
	
	Запрос.Текст = БазаДляНачисленияВзносовТекст;
	// этот запрос проверять на выполнимость при ограничении доступа не требуется,
	// так как проверены используемые им временные таблицы
	ВывестиРезультатЗапросаВДеревоПоказателей(УзелРаздел1_3, Запрос.Выполнить()); 
	
	// Раздел III (табл. 9)
	
	Запрос.Текст = ДоходыДляФСС_НСТекст;
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Результат = Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	ВывестиРезультатЗапросаВДеревоПоказателей(УзелРаздел3_1, Результат);
	
	// Раздел I (табл. 4), Раздел III (табл. 12)
	
	Запрос.Текст = РасчетПенейШтрафовТекст;
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		РезультатЗапроса = Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		КолонкиРезультата = РезультатЗапроса.Колонки;
		Для Каждого Колонка из КолонкиРезультата Цикл
			Если Найти(Колонка.Имя,"П00004") = 0 Тогда
				УзелРаздела = УзелРаздел3_2
			Иначе
				УзелРаздела = УзелРаздел1_3
			КонецЕсли;
			ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздела, Колонка.Имя, Выборка[Колонка.Имя]);
		КонецЦикла; 
	КонецЕсли; 
	
	// РАСХОДЫ НА ЦЕЛИ ОБЯЗАТЕЛЬНОГО СОЦИАЛЬНОГО СТРАХОВАНИЯ С НАЧАЛА ГОДА
	
	// Раздел I (табл 2 - данные только по общему налоговому режиму) и Раздел III (табл 11)
	
	ДанныеОРасходах = Новый Структура;
	
	Запрос.Текст = РасходыНаЦелиОбязательногоССТекст;
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		ТаблицаРезультатовБЛ = Запрос.Выполнить().Выгрузить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	
	Если ТаблицаРезультатовБЛ.Количество() > 0 Тогда
		Для каждого Колонка Из ТаблицаРезультатовБЛ.Колонки Цикл
			ИмяКолонки = Колонка.Имя;
			ДанныеОРасходах.Вставить(ИмяКолонки,ТаблицаРезультатовБЛ[0][ИмяКолонки])
		КонецЦикла;
	КонецЕсли;
	
	Запрос.Текст = РасходыНаПособияПоУходуТекст;
	// этот запрос проверять на выполнимость при ограничении доступа не требуется,
	// так как проверены используемые им временные таблицы
	ТаблицаРезультатовБЛ = Запрос.Выполнить().Выгрузить();
	
	Если ТаблицаРезультатовБЛ.Количество() > 0 Тогда
		Для каждого Колонка Из ТаблицаРезультатовБЛ.Колонки Цикл
			ИмяКолонки = Колонка.Имя;
			ДанныеОРасходах.Вставить(ИмяКолонки,ТаблицаРезультатовБЛ[0][ИмяКолонки])
		КонецЦикла;
	КонецЕсли;
	
	Запрос.Текст = РасходыНаПособияПоУходуДополнительноТекст;
	// этот запрос проверять на выполнимость при ограничении доступа не требуется,
	// так как проверены используемые им временные таблицы
	ТаблицаРезультатовБЛ = Запрос.Выполнить().Выгрузить();
	
	Если ТаблицаРезультатовБЛ.Количество() > 0 Тогда
		Для каждого Колонка Из ТаблицаРезультатовБЛ.Колонки Цикл
			ИмяКолонки = Колонка.Имя;
			ДанныеОРасходах.Вставить(ИмяКолонки,ТаблицаРезультатовБЛ[0][ИмяКолонки])
		КонецЦикла;
	КонецЕсли;
	
	Для каждого КлючИЗначение Из ДанныеОРасходах Цикл
		ИмяКолонки = КлючИЗначение.Ключ;
		Если Найти(ИмяКолонки,"_") = 0 Тогда
			Если Найти(Колонка.Имя,"П00002") = 0 Тогда
				УзелРаздела = УзелРаздел3_2
			Иначе
				УзелРаздела = УзелРаздел1_2
			КонецЕсли;
			ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздела, ИмяКолонки, КлючИЗначение.Значение);
		КонецЕсли;
	КонецЦикла;
	
	// Раздел II (табл 8)
	
	// данные по всем налоговым режимам
	
	// эти запросы проверять на выполнимость при ограничении доступа не требуется,
	// так как проверены используемые ими временные таблицы
	
	Запрос.Текст = РасходыЗаСчетФедБюджетаТекст;
	ВывестиРезультатЗапросаВДеревоПоказателей(УзелРаздел2_4, Запрос.Выполнить());
	
	Запрос.Текст = ПолучателиЗаСчетФедБюджетаТекст;
	ВывестиРезультатЗапросаВДеревоПоказателей(УзелРаздел2_4, Запрос.Выполнить());
	
	Запрос.Текст = РасходыПоУходуЗаСчетФедБюджетаТекст;
	ВывестиРезультатЗапросаВДеревоПоказателей(УзелРаздел2_4, Запрос.Выполнить());
	
	Запрос.Текст = ПолучателиПоУходуЗаСчетФедБюджетаТекст;
	ВывестиРезультатЗапросаВДеревоПоказателей(УзелРаздел2_4, Запрос.Выполнить());
	
	Запрос.Текст = ПолучателиПоУходуЗаСчетФедБюджетаДополнительноТекст;
	ВывестиРезультатЗапросаВДеревоПоказателей(УзелРаздел2_4, Запрос.Выполнить());
	
	// РАСЧЕТЫ ПО СРЕДСТВАМ ОБЯЗАТЕЛЬНОГО СОЦИАЛЬНОГО СТРАХОВАНИЯ 
	
	// Раздел I (табл. 1) и Раздел III (табл 10)
	
	// Заполняем по данным учета расчетов с фондом
	
	Запрос.Текст = РасчетыСФондомТекст;
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		ТаблицаРезультатов = Запрос.Выполнить().Выгрузить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	ДанныеОРасчетах = Новый Структура;
	Если ТаблицаРезультатов.Количество() > 0 Тогда
		Для каждого Колонка Из ТаблицаРезультатов.Колонки Цикл
			ИмяКолонки = Колонка.Имя;
			ДанныеОРасчетах.Вставить(ИмяКолонки,ТаблицаРезультатов[0][ИмяКолонки])
		КонецЦикла;
	КонецЕсли;
	Для каждого КлючИЗначение Из ДанныеОРасчетах Цикл
		ИмяКолонки = КлючИЗначение.Ключ;
		Если Найти(ИмяКолонки,"_") = 0 Тогда
			Если Найти(Колонка.Имя,"П00001") = 0 Тогда
				УзелРаздела = УзелРаздел3_2
			Иначе
				УзелРаздела = УзелРаздел1_2
			КонецЕсли;
			ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздела, ИмяКолонки, КлючИЗначение.Значение);
		КонецЕсли;
	КонецЦикла;
	
	Запрос.Текст = ПлатежныеПорученияТекст;
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		ТаблицаРезультатов = Запрос.Выполнить().Выгрузить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	КоличествоПП = ТаблицаРезультатов.Количество();
	Для Сч = 1 По 3 Цикл
		Если Сч > КоличествоПП Тогда
			Прервать;
		КонецЕсли;
		ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел1_2,"П000010016" + строка(Сч + 2) +"21", ТаблицаРезультатов[Сч - 1].ПлатежноеПоручениеФССНомер);
		ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел1_2,"П000010016" + строка(Сч + 2) +"11", ТаблицаРезультатов[Сч - 1].ПлатежноеПоручениеФССДата);
	КонецЦикла;
	
	Запрос.Текст = ПлатежныеПорученияНСПЗТекст;
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		ТаблицаРезультатов = Запрос.Выполнить().Выгрузить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	КоличествоПП = ТаблицаРезультатов.Количество();
	Для Сч = 1 По 3 Цикл
		Если Сч > КоличествоПП Тогда
			Прервать;
		КонецЕсли;
		ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел1_2,"П000100011" + строка(Сч) +"05", ТаблицаРезультатов[Сч - 1].ПлатежноеПоручениеФСС_НС_ПЗНомер);
		ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел1_2,"П000100011" + строка(Сч) +"04", ТаблицаРезультатов[Сч - 1].ПлатежноеПоручениеФСС_НС_ПЗДата);
	КонецЦикла;
	
	// данные по специальным налоговым режимам - Раздел II 
	
	Если ЗначениеЗаполнено(ЧисленностьРаботниковНаЕНВД) Или ЗначениеЗаполнено(ЧисленностьРаботниковНаУСН) Тогда // ведется деятельность, облагаемая ЕНВД
		
		ВыплатыРаботникам_УСН = 0;
		ВыплатыРаботникам_ЕНВД = 0;
		Запрос.Текст = ВыплатыРаботникамНаСпецРежимахТекст;
		#Если Клиент тогда
			ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
		#КонецЕсли
		Попытка
			Выборка = Запрос.Выполнить().Выбрать();
		Исключение
			#Если Клиент тогда
				ИнформацияОбОшибке = ИнформацияОбОшибке();
				ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
			#КонецЕсли
			Возврат ПустоеДерево;
		КонецПопытки;
		
		Если Выборка.Следующий() Тогда
			ВыплатыРаботникам_УСН = Выборка.ВыплатыРаботникам_УСН;
			ВыплатыРаботникам_ЕНВД = Выборка.ВыплатыРаботникам_ЕНВД;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ЧисленностьРаботниковНаЕНВД) Тогда 
			
			УзелРаздел2_1 = ОпределитьСтрокуВДеревеДанныхДляЗаполнения(ДеревоПоказателей, "Раздел2_1");
			УзелРаздел2_2 = ОпределитьСтрокуВДеревеДанныхДляЗаполнения(ДеревоПоказателей, "Раздел2_2");
			
			ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел2_1, "ШифрРаздел2_1", "0");
			ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел2_1, "ШифрРаздел2_2", "2");
			ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел2_1, "ШифрРаздел2_3", "1");
			
			// Раздел II (табл 5)
			
			ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел2_1,"П000050001003", Окр(ЧисленностьРаботниковНаЕНВД / КоличествоМесяцевРаботы));
			ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел2_1,"П000050002003", Окр(ЧисленностьЖенщинНаЕНВД / КоличествоМесяцевРаботы)); // в т.ч. женщин
			ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел2_1,"П000050003003", ВыплатыРаботникам_ЕНВД);
			
			// Раздел II (табл 6)
			
			Для каждого КлючИЗначение Из ДанныеОРасчетах Цикл
				ИмяКолонки = КлючИЗначение.Ключ;
				ПозицияРазделителя = Найти(ИмяКолонки,"_");
				Если ПозицияРазделителя > 0 Тогда
					СпецРежим = Сред(ИмяКолонки,ПозицияРазделителя + 1);
					ИмяПоказателя = Лев(ИмяКолонки,13);
					Если СпецРежим = "ЕНВД" Тогда
						ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел2_1, ИмяПоказателя, КлючИЗначение.Значение);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
			// Раздел II (табл 7)
			
			Для каждого КлючИЗначение Из ДанныеОРасходах Цикл
				ИмяКолонки = КлючИЗначение.Ключ;
				ПозицияРазделителя = Найти(ИмяКолонки,"_");
				Если ПозицияРазделителя > 0 Тогда
					СпецРежим = Сред(ИмяКолонки,ПозицияРазделителя + 1);
					ИмяПоказателя = Лев(ИмяКолонки,13);
					Если СпецРежим = "ЕНВД" Тогда
						ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел2_2, ИмяПоказателя, КлючИЗначение.Значение);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ЧисленностьРаботниковНаУСН) Тогда 
			
			УзелРаздел2_1 = ОпределитьСтрокуВДеревеДанныхДляЗаполнения(ДеревоПоказателей, "Раздел2_1");
			УзелРаздел2_2 = ОпределитьСтрокуВДеревеДанныхДляЗаполнения(ДеревоПоказателей, "Раздел2_2");
			
			ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел2_1, "ШифрРаздел2_1", "0");
			ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел2_1, "ШифрРаздел2_2", "1");
			ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел2_1, "ШифрРаздел2_3", "1");
			
			// Раздел II (табл 5)
			
			ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел2_1,"П000050001003", Окр(ЧисленностьРаботниковНаУСН / КоличествоМесяцевРаботы));
			ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел2_1,"П000050002003", Окр(ЧисленностьЖенщинНаУСН / КоличествоМесяцевРаботы)); // в т.ч. женщин
			ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел2_1,"П000050003003", ВыплатыРаботникам_УСН);
			
			// Раздел II (табл 6)
			
			Для каждого КлючИЗначение Из ДанныеОРасчетах Цикл
				ИмяКолонки = КлючИЗначение.Ключ;
				ПозицияРазделителя = Найти(ИмяКолонки,"_");
				Если ПозицияРазделителя > 0 Тогда
					СпецРежим = Сред(ИмяКолонки,ПозицияРазделителя + 1);
					ИмяПоказателя = Лев(ИмяКолонки,13);
					Если СпецРежим = "УСН" Тогда
						ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел2_1, ИмяПоказателя, КлючИЗначение.Значение);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
			// Раздел II (табл 7)
			
			Для каждого КлючИЗначение Из ДанныеОРасходах Цикл
				ИмяКолонки = КлючИЗначение.Ключ;
				ПозицияРазделителя = Найти(ИмяКолонки,"_");
				Если ПозицияРазделителя > 0 Тогда
					СпецРежим = Сред(ИмяКолонки,ПозицияРазделителя + 1);
					ИмяПоказателя = Лев(ИмяКолонки,13);
					Если СпецРежим = "УСН" Тогда
						ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел2_2, ИмяПоказателя, КлючИЗначение.Значение);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ДеревоПоказателей;
	
КонецФункции // ЗначенияПоказателей_4ФСС_2010()

// Возвращает описание показателей отчета 4-ФСС 
// для формы образца 2009 года
//
// Параметры:
//   ДеревоПоказателей - дерево, описание показателей родственного отчета - 
//                       Расчета по авансовым платежам по ЕСН
//
// Возвращаемое значение:
//	ДеревоЗначений с колонкой "Имя"
//
Функция Получить4ФСС_2009из4ФСС_2007(ДеревоПоказателей)
	
	Если ТипЗнч(ДеревоПоказателей) <> Тип("ДеревоЗначений") тогда
		Возврат ДеревоПоказателей;
	КонецЕсли;
	
	ЛишниеСтроки = ДеревоПоказателей.Строки.НайтиСтроки(Новый Структура("Имя","П000030016003"),Истина);
	Для каждого СтрокаДерева Из ЛишниеСтроки Цикл
		СтрокаДерева.Родитель.Строки.Удалить(СтрокаДерева);
	КонецЦикла; 
	
	ЛишниеСтроки = ДеревоПоказателей.Строки.НайтиСтроки(Новый Структура("Имя","П000030016004"),Истина);
	Для каждого СтрокаДерева Из ЛишниеСтроки Цикл
		СтрокаДерева.Родитель.Строки.Удалить(СтрокаДерева);
	КонецЦикла; 
	
	ЛишниеСтроки = ДеревоПоказателей.Строки.НайтиСтроки(Новый Структура("Имя","П000060012003"),Истина);
	Для каждого СтрокаДерева Из ЛишниеСтроки Цикл
		СтрокаДерева.Родитель.Строки.Удалить(СтрокаДерева);
	КонецЦикла; 
	
	ЛишниеСтроки = ДеревоПоказателей.Строки.НайтиСтроки(Новый Структура("Имя","П000060012004"),Истина);
	Для каждого СтрокаДерева Из ЛишниеСтроки Цикл
		СтрокаДерева.Родитель.Строки.Удалить(СтрокаДерева);
	КонецЦикла; 
	
	Возврат ДеревоПоказателей;
	
КонецФункции // Получить4ФСС_2009из4ФСС_2007()


// Возвращает значения показателей отчета Расчет по авансовым платежам по взносам в ПФР 
// для формы образца 2005 года, вычисленные по данным ИБ
//
// Параметры:
//  ПараметрыОтчета - структура, содержащая значения ключевых реквизитов заполняемого отчета. 
//		Структура содержит, как минимум, следующее:
//			Организация, тип СправочникСсылка.Организации
//			ДатаНачалаПериода, тип Дата
//			ДатаОкончанияПериода, тип Дата
//			ДатаПодписи, тип Дата
//			Периодичность, тип ПеречислениеСсылка.Периодичность
//
// Возвращаемое значение:
//	ДеревоЗначений с колонками «Имя" и «Значение"
//
Функция ЗначенияПоказателей_4ФСС_2007Кв3(ПараметрыОтчета, МаксимумЗарплаты = 15000)
	
	ДеревоПоказателей = Новый ДеревоЗначений;
	ДеревоПоказателей.Колонки.Добавить("Имя");
	ДеревоПоказателей.Колонки.Добавить("Значение");
	
	ПустоеДерево = Неопределено;
	
	ДатаКонцаПериодаОтчета = ПараметрыОтчета.ДатаОкончанияПериода;
	Организация = ПараметрыОтчета.Организация;
	ТочностьЕдиницыИзмерения = 2;
	Если ПараметрыОтчета.Свойство("ТочностьЕдиницыИзмерения",ТочностьЕдиницыИзмерения) = Неопределено Тогда
		ТочностьЕдиницыИзмерения = 2;
	КонецЕсли;
	ЕдиницаИзмерения = Перечисления.ПорядкиОкругленияОтчетности.ПустаяСсылка();
	Если ПараметрыОтчета.Свойство("ЕдиницаИзмерения",ЕдиницаИзмерения) = Неопределено Тогда
		ЕдиницаИзмерения = Перечисления.ПорядкиОкругленияОтчетности.ПустаяСсылка();
	КонецЕсли;
	Делитель = ПреобразоватьЕдиницуИзмеренияВЧисло(ЕдиницаИзмерения);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("парамОрганизация",			Организация);
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация",	ОбщегоНазначения.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("парамНачалоГода",			НачалоГода(ДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("парамКонецОтчетногоПериода",	КонецДня(ДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("Месяц1",						Месяц(ДатаКонцаПериодаОтчета) - 2);
	Запрос.УстановитьПараметр("Месяц2",						Месяц(ДатаКонцаПериодаОтчета) - 1);
	Запрос.УстановитьПараметр("Месяц3",						Месяц(ДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("Делитель",					Делитель);
	Запрос.УстановитьПараметр("МаксимумЗарплаты",			МаксимумЗарплаты + 1);
	
	// ----------------------------------------------------------------------------------
	// ФОРМИРОВАНИЕ ВРЕМЕННЫХ ТАБЛИЦ
	
	// конец месяца налогового периода
	КонецМесяца = КонецМесяца(НачалоГода(ДатаКонцаПериодаОтчета));
	// первый месяц
	ПериодыТекст = "ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ")КАК Период ПОМЕСТИТЬ ВТПериоды";
	// прибавим остальные месяцы
	Для Сч = 2 По Месяц(ДатаКонцаПериодаОтчета) Цикл
		КонецМесяца = КонецМесяца(КонецМесяца+1);
		ПериодыТекст = ПериодыТекст +" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ")";
	КонецЦикла;
	Запрос.Текст = ПериодыТекст;
	МассивЗапросов = Новый Массив;
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Запрос.Выполнить();
	
	// Таблица ВТУчетнаяПолитикаНалоговыйУчет - это список месяцев, с параметрами уч.политики:
	// Поля:
	//		Месяц - номер месяца налогового периода,
	//		УСН, 
	//		УплачиватьДобровольныеВзносыВФСС 
	// Описание:	
	//	Выбираем даты из ВТПериоды (таблица - список периодов с начала года по текущий период)
	//	Соединение с "псевдосрезом" последних регистра УчетнаяПолитикаНалоговыйУчет
	//	по равенству периодов
	
	УчетнаяПолитикаНалоговыйУчетТекст = 
	"ВЫБРАТЬ
	|	МЕСЯЦ(Периоды.Период) КАК Месяц,
	|	""поле УСН"" КАК УСН,
	|	ЕСТЬNULL(УчетнаяПолитикаНалоговыйУчет.УплачиватьДобровольныеВзносыВФСС, ЛОЖЬ) КАК УплачиватьДобровольныеВзносыВФСС
	|ПОМЕСТИТЬ ВТУчетнаяПолитикаНалоговыйУчет
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период КАК Период,
	|		МАКСИМУМ(УчетнаяПолитикаНалоговыйУчет.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВТПериоды КАК Периоды
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаНалоговыйУчет
	|			ПО Периоды.Период >= УчетнаяПолитикаНалоговыйУчет.Период
	|				И (УчетнаяПолитикаНалоговыйУчет.Организация = &парамГоловнаяОрганизация)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период) КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаНалоговыйУчет
	|		ПО Периоды.ПериодРегистра = УчетнаяПолитикаНалоговыйУчет.Период
	|			И (УчетнаяПолитикаНалоговыйУчет.Организация = &парамГоловнаяОрганизация)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Месяц";	
	Запрос.Текст = СтрЗаменить(УчетнаяПолитикаНалоговыйУчетТекст, """поле УСН""", ЗаполнениеРегламентированнойОтчетностиПереопределяемый.ТекстПоляУСН4аФСС());
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	
	// НалоговыеБазыПоФизлицам
	// Таблица ВТНалоговыеБазыПоФизлицам - это физлица с накопленными базами по ФСС с учетом налоговых режимов
	// Поля:
	//		ФизЛицо,
	//		НалоговаяБазаФСС, 
	//		БазаФСС, 
	//		БазаФССУСН, 
	//		БазаФССЕНВД 
	// Описание:	
	//	Выбираем из ЕСНСведенияОДоходах (рег-р накопления с данными обо всех доходах физлиц) суммы, облагаемые ФСС
	//	Соединение с таблицей ВТУчетнаяПолитикаНалоговыйУчет для учета УСН
	//	по равенству месяцев
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕСНСведенияОДоходах.ФизЛицо КАК ФизЛицо
	|ПОМЕСТИТЬ ВТФизлицаБезНалоговойБазы
	|ИЗ
	|	РегистрНакопления.ЕСНСведенияОДоходах КАК ЕСНСведенияОДоходах
	|ГДЕ
	|	ЕСНСведенияОДоходах.Период МЕЖДУ &парамНачалоГода И &парамКонецОтчетногоПериода
	|	И ЕСНСведенияОДоходах.Организация = &парамГоловнаяОрганизация
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСНСведенияОДоходах.ФизЛицо
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВЫБОР
	|			КОГДА ЕСНСведенияОДоходах.КодДоходаЕСН.ВходитВБазуФСС
	|				ТОГДА ЕСНСведенияОДоходах.Результат - ЕСНСведенияОДоходах.Скидка
	|			ИНАЧЕ 0
	|		КОНЕЦ) < 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСННачисления.ФизЛицо КАК ФизЛицо,
	|	ВЫБОР
	|		КОГДА ЕСННачисления.ФизЛицо.Пол = ЗНАЧЕНИЕ(Перечисление.ПолФизическихЛиц.Женский)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоЖенщина,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И (НЕ ЕСННачисления.ОблагаетсяЕНВД)
	|					И ЕСННачисления.КодДоходаЕСН.ВходитВБазуФСС
	|				ТОГДА ЕСННачисления.Результат - ЕСННачисления.Скидка
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НалоговаяБазаФСС,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И (НЕ ЕСННачисления.ОблагаетсяЕНВД)
	|					И ЕСННачисления.КодДоходаЕСН.ВходитВБазуФСС
	|				ТОГДА ЕСННачисления.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК БазаФСС,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСННачисления.ОблагаетсяЕНВД
	|				ТОГДА ЕСННачисления.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК БазаФССЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА УчетнаяПолитикаНалоговыйУчет.УСН
	|					И (НЕ ЕСННачисления.ОблагаетсяЕНВД)
	|				ТОГДА ЕСННачисления.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК БазаФССУСН
	|ПОМЕСТИТЬ ВТНалоговыеБазыПоФизлицам
	|ИЗ
	|	РегистрНакопления.ЕСНСведенияОДоходах КАК ЕСННачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлицаБезНалоговойБазы КАК ФизлицаБезНалоговойБазы
	|		ПО ЕСННачисления.ФизЛицо = ФизлицаБезНалоговойБазы.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНалоговыйУчет
	|		ПО (МЕСЯЦ(ЕСННачисления.Период) = УчетнаяПолитикаНалоговыйУчет.Месяц)
	|ГДЕ
	|	ЕСННачисления.Период МЕЖДУ &парамНачалоГода И &парамКонецОтчетногоПериода
	|	И ЕСННачисления.ОбособленноеПодразделение = &парамОрганизация
	|	И ФизлицаБезНалоговойБазы.ФизЛицо ЕСТЬ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСННачисления.ФизЛицо,
	|	ВЫБОР
	|		КОГДА ЕСННачисления.ФизЛицо.Пол = ЗНАЧЕНИЕ(Перечисление.ПолФизическихЛиц.Женский)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	
	// ----------------------------------------------------------------------------------
	// ТЕКСТЫ ЗАПРОСОВ
	
	// НалоговаяБазаТекст
	// Это итоговые показатели отчета по Разделу I
	// Поля:
	//		П000010003003,
	//		П000010004003 
	// Описание:	
	//	Выбираем из ВТНалоговыеБазыПоФизлицам (таблица с данными о доходах физлиц) 
	//	Соединение с итогами по ПримененнаяЛьготаФСС из рег-ра ЕСНИсчисленный в разрезе физлиц
	//	по равенству физлица
	
	НалоговаяБазаТекст = 
	"ВЫБРАТЬ
	|	СУММА(ДоходыПоФЛ.НалоговаяБазаФСС) КАК П000010003003,
	|	СУММА(ЕСНИсчисленныйОбороты.ПримененнаяЛьготаФССОборот) КАК П000010004003
	|ИЗ
	|	ВТНалоговыеБазыПоФизлицам КАК ДоходыПоФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			СУММА(ЕСНИсчисленный.ПримененнаяЛьготаФСС) КАК ПримененнаяЛьготаФССОборот,
	|			ЕСНИсчисленный.ФизЛицо КАК ФизЛицо
	|		ИЗ
	|			РегистрНакопления.ЕСНИсчисленный КАК ЕСНИсчисленный
	|		ГДЕ
	|			ЕСНИсчисленный.Период МЕЖДУ &парамНачалоГода И &парамКонецОтчетногоПериода
	|			И ЕСНИсчисленный.ОбособленноеПодразделение = &парамОрганизация
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ЕСНИсчисленный.ФизЛицо) КАК ЕСНИсчисленныйОбороты
	|		ПО ДоходыПоФЛ.ФизЛицо = ЕСНИсчисленныйОбороты.ФизЛицо";
	
	// ВыплатыРаботникамНаСпецРежимах
	// Это итоговые суммы доходов, относящихся к спецрежимам
	// Поля:
	//		ВыплатыРаботникам_УСН,
	//		ВыплатыРаботникам_ЕНВД 
	// Описание:	
	//	Суммируются соответствующие данные из ВТНалоговыеБазыПоФизлицам (таблица с данными о доходах физлиц) 
	
	ВыплатыРаботникамНаСпецРежимахТекст =
	"ВЫБРАТЬ
	|	СУММА(ДоходыПоФЛ.БазаФССУСН) КАК ВыплатыРаботникам_УСН,
	|	СУММА(ДоходыПоФЛ.БазаФССЕНВД) КАК ВыплатыРаботникам_ЕНВД
	|ИЗ
	|	ВТНалоговыеБазыПоФизлицам КАК ДоходыПоФЛ";
	
	// РасходыНаЦелиОбязательногоСС
	// Это итоговые суммы расходов за исключением пособия по уходу за ребенком для Таблиц 3, 6 и 11 Разделов I, II и III
	// Поля:
	//		П000030001001, ..., П000030016004  Таблицы 3   
	//		для показателей П000060001001, ..., П000060012004  Таблицы 6 
	//			создаем двойной набор полей: с постфиксами _ЕНВД и _УСН
	//		П000110001003, ..., П000110007004  Таблицы 11   
	// Описание:	
	//	Суммируются соответствующие данные из таблицы оборотов регистра накопления.ПособияСоциальномуСтрахованию 
	//  с учетом режима налогообложения из таблицы ВТУчетнаяПолитикаНалоговыйУчет
	// 
	
	РасходыНаЦелиОбязательногоССТекст =
	"ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030001001,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.ОплаченныеДниОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030001003,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030001004,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030001005,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030002001,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.ОплаченныеДниОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030002003,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030002004,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030002005,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.ОплаченныеДниОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030003003,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030003004,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030003005,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.ОплаченныеДниОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030004003,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030004004,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030004005,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриРожденииРебенка)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030012003,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриРожденииРебенка)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030012004,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030013003,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030013004,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030013005,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ДополнительныеВыходныеДниПоУходуЗаДетьмиИнвалидами)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.ОплаченныеДниОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030014003,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ДополнительныеВыходныеДниПоУходуЗаДетьмиИнвалидами)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030014004,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриПостановкеНаУчетВРанниеСрокиБеременности)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030015003,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриПостановкеНаУчетВРанниеСрокиБеременности)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030015004,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриУсыновленииРебенка)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030016003,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УСН)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриУсыновленииРебенка)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030016004,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УплачиватьДобровольныеВзносыВФСС)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060001001_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УплачиватьДобровольныеВзносыВФСС)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.ОплаченныеДниОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060001003_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УплачиватьДобровольныеВзносыВФСС)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060001004_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УплачиватьДобровольныеВзносыВФСС)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060001005_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УплачиватьДобровольныеВзносыВФСС)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060002001_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УплачиватьДобровольныеВзносыВФСС)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.ОплаченныеДниОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060002003_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УплачиватьДобровольныеВзносыВФСС)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060002004_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УплачиватьДобровольныеВзносыВФСС)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060002005_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.ОплаченныеДниОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060003003_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060003004_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060003005_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.ОплаченныеДниОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060004003_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060004004_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060004005_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриРожденииРебенка)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060008003_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриРожденииРебенка)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060008004_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060009003_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060009004_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060009005_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ДополнительныеВыходныеДниПоУходуЗаДетьмиИнвалидами)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.ОплаченныеДниОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060010003_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ДополнительныеВыходныеДниПоУходуЗаДетьмиИнвалидами)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060010004_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриПостановкеНаУчетВРанниеСрокиБеременности)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060011003_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриПостановкеНаУчетВРанниеСрокиБеременности)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060011004_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриУсыновленииРебенка)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060012003_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриУсыновленииРебенка)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060012004_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчет.УСН
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УплачиватьДобровольныеВзносыВФСС)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060001001_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчет.УСН
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УплачиватьДобровольныеВзносыВФСС)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.ОплаченныеДниОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060001003_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчет.УСН
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УплачиватьДобровольныеВзносыВФСС)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060001004_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчет.УСН
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УплачиватьДобровольныеВзносыВФСС)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060001005_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчет.УСН
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УплачиватьДобровольныеВзносыВФСС)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060002001_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчет.УСН
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УплачиватьДобровольныеВзносыВФСС)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.ОплаченныеДниОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060002003_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчет.УСН
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УплачиватьДобровольныеВзносыВФСС)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060002004_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчет.УСН
	|					И (НЕ УчетнаяПолитикаНалоговыйУчет.УплачиватьДобровольныеВзносыВФСС)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060002005_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчет.УСН
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.ОплаченныеДниОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060003003_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчет.УСН
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060003004_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчет.УСН
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060003005_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчет.УСН
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.ОплаченныеДниОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060004003_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчет.УСН
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060004004_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчет.УСН
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060004005_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчет.УСН
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриРожденииРебенка)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060008003_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчет.УСН
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриРожденииРебенка)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060008004_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчет.УСН
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060009003_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчет.УСН
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060009004_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчет.УСН
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060009005_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчет.УСН
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ДополнительныеВыходныеДниПоУходуЗаДетьмиИнвалидами)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.ОплаченныеДниОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060010003_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчет.УСН
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ДополнительныеВыходныеДниПоУходуЗаДетьмиИнвалидами)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060010004_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчет.УСН
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриПостановкеНаУчетВРанниеСрокиБеременности)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060011003_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчет.УСН
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриПостановкеНаУчетВРанниеСрокиБеременности)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060011004_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчет.УСН
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриУсыновленииРебенка)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060012003_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчет.УСН
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриУсыновленииРебенка)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060012004_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.ОплаченныеДниОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000110001003,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000110001004,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.ОплаченныеДниОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000110002003,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000110002004,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.ОплаченныеДниОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000110004003,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000110004004,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.ОплаченныеДниОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000110005003,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание)
	|					И ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000110005004,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ДополнительныйОтпускПослеНесчастныхСлучаев)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.ОплаченныеДниОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000110007003,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ДополнительныйОтпускПослеНесчастныхСлучаев)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000110007004
	|ИЗ
	|	РегистрНакопления.ПособияСоциальномуСтрахованию.Обороты(&парамНачалоГода, &парамКонецОтчетногоПериода, Месяц, Организация = &парамОрганизация) КАК ПособияСоциальномуСтрахованиюОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНалоговыйУчет
	|		ПО (МЕСЯЦ(ПособияСоциальномуСтрахованиюОбороты.Период) = УчетнаяПолитикаНалоговыйУчет.Месяц)";
	
	// РасходыНаПособияПоУходу
	// Это итоговые суммы расходов на пособия по уходу за ребенком для Таблиц 3 и 6 Разделов I и II
	// Поля:
	//		П000030007001, ..., П000030008005  Таблицы 3   
	//		для показателей П000060006001, ..., П000060007005  Таблицы 6 
	//			создаем двойной набор полей: с постфиксами _ЕНВД и _УСН
	// Описание:	
	//	Выбираем данные о суммах пособий и о количестве выплат из таблицы оборотов 
	//  регистра накопления ПособияПоУходуЗаРебенкомДоПолутораЛет
	//	Соединение с таблицей ВТУчетнаяПолитикаНалоговыйУчет для учета УСН
	//	по равенству месяцев
	// 
	
	РасходыНаПособияПоУходуТекст = 
	"ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.ОблагаетсяЕНВД)
	|					И (НЕ ДанныеУчетаПособий.УСН)
	|					И ДанныеУчетаПособий.УходЗаПервымРебенком
	|					И ДанныеУчетаПособий.СуммаВсегоОборот <> 0
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030007001,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.ОблагаетсяЕНВД)
	|					И (НЕ ДанныеУчетаПособий.УСН)
	|					И ДанныеУчетаПособий.УходЗаПервымРебенком
	|					И ДанныеУчетаПособий.СуммаВсегоОборот <> 0
	|				ТОГДА ДанныеУчетаПособий.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030007003,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.ОблагаетсяЕНВД)
	|					И (НЕ ДанныеУчетаПособий.УСН)
	|					И ДанныеУчетаПособий.УходЗаПервымРебенком
	|				ТОГДА ДанныеУчетаПособий.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030007004,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.ОблагаетсяЕНВД)
	|					И (НЕ ДанныеУчетаПособий.УСН)
	|					И ДанныеУчетаПособий.УходЗаПервымРебенком
	|				ТОГДА ДанныеУчетаПособий.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030007005,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.ОблагаетсяЕНВД)
	|					И (НЕ ДанныеУчетаПособий.УСН)
	|					И (НЕ ДанныеУчетаПособий.УходЗаПервымРебенком)
	|					И ДанныеУчетаПособий.СуммаВсегоОборот <> 0
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030008001,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.ОблагаетсяЕНВД)
	|					И (НЕ ДанныеУчетаПособий.УСН)
	|					И (НЕ ДанныеУчетаПособий.УходЗаПервымРебенком)
	|					И ДанныеУчетаПособий.СуммаВсегоОборот <> 0
	|				ТОГДА ДанныеУчетаПособий.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030008003,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.ОблагаетсяЕНВД)
	|					И (НЕ ДанныеУчетаПособий.УСН)
	|					И (НЕ ДанныеУчетаПособий.УходЗаПервымРебенком)
	|				ТОГДА ДанныеУчетаПособий.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030008004,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.ОблагаетсяЕНВД)
	|					И (НЕ ДанныеУчетаПособий.УСН)
	|					И (НЕ ДанныеУчетаПособий.УходЗаПервымРебенком)
	|				ТОГДА ДанныеУчетаПособий.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030008005,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеУчетаПособий.ОблагаетсяЕНВД
	|					И ДанныеУчетаПособий.УходЗаПервымРебенком
	|					И ДанныеУчетаПособий.СуммаВсегоОборот <> 0
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060006001_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеУчетаПособий.ОблагаетсяЕНВД
	|					И ДанныеУчетаПособий.УходЗаПервымРебенком
	|					И ДанныеУчетаПособий.СуммаВсегоОборот <> 0
	|				ТОГДА ДанныеУчетаПособий.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060006003_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеУчетаПособий.ОблагаетсяЕНВД
	|					И ДанныеУчетаПособий.УходЗаПервымРебенком
	|				ТОГДА ДанныеУчетаПособий.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060006004_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеУчетаПособий.ОблагаетсяЕНВД
	|					И ДанныеУчетаПособий.УходЗаПервымРебенком
	|				ТОГДА ДанныеУчетаПособий.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060006005_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеУчетаПособий.ОблагаетсяЕНВД
	|					И (НЕ ДанныеУчетаПособий.УходЗаПервымРебенком)
	|					И ДанныеУчетаПособий.СуммаВсегоОборот <> 0
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060007001_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеУчетаПособий.ОблагаетсяЕНВД
	|					И (НЕ ДанныеУчетаПособий.УходЗаПервымРебенком)
	|					И ДанныеУчетаПособий.СуммаВсегоОборот <> 0
	|				ТОГДА ДанныеУчетаПособий.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060007003_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеУчетаПособий.ОблагаетсяЕНВД
	|					И (НЕ ДанныеУчетаПособий.УходЗаПервымРебенком)
	|				ТОГДА ДанныеУчетаПособий.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060007004_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеУчетаПособий.ОблагаетсяЕНВД
	|					И (НЕ ДанныеУчетаПособий.УходЗаПервымРебенком)
	|				ТОГДА ДанныеУчетаПособий.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060007005_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.ОблагаетсяЕНВД)
	|					И ДанныеУчетаПособий.УСН
	|					И ДанныеУчетаПособий.УходЗаПервымРебенком
	|					И ДанныеУчетаПособий.СуммаВсегоОборот <> 0
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060006001_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.ОблагаетсяЕНВД)
	|					И ДанныеУчетаПособий.УСН
	|					И ДанныеУчетаПособий.УходЗаПервымРебенком
	|					И ДанныеУчетаПособий.СуммаВсегоОборот <> 0
	|				ТОГДА ДанныеУчетаПособий.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060006003_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.ОблагаетсяЕНВД)
	|					И ДанныеУчетаПособий.УСН
	|					И ДанныеУчетаПособий.УходЗаПервымРебенком
	|				ТОГДА ДанныеУчетаПособий.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060006004_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.ОблагаетсяЕНВД)
	|					И ДанныеУчетаПособий.УСН
	|					И ДанныеУчетаПособий.УходЗаПервымРебенком
	|				ТОГДА ДанныеУчетаПособий.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060006005_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.ОблагаетсяЕНВД)
	|					И ДанныеУчетаПособий.УСН
	|					И (НЕ ДанныеУчетаПособий.УходЗаПервымРебенком)
	|					И ДанныеУчетаПособий.СуммаВсегоОборот <> 0
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060007001_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.ОблагаетсяЕНВД)
	|					И ДанныеУчетаПособий.УСН
	|					И (НЕ ДанныеУчетаПособий.УходЗаПервымРебенком)
	|					И ДанныеУчетаПособий.СуммаВсегоОборот <> 0
	|				ТОГДА ДанныеУчетаПособий.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060007003_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.ОблагаетсяЕНВД)
	|					И ДанныеУчетаПособий.УСН
	|					И (НЕ ДанныеУчетаПособий.УходЗаПервымРебенком)
	|				ТОГДА ДанныеУчетаПособий.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060007004_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ДанныеУчетаПособий.ОблагаетсяЕНВД)
	|					И ДанныеУчетаПособий.УСН
	|					И (НЕ ДанныеУчетаПособий.УходЗаПервымРебенком)
	|				ТОГДА ДанныеУчетаПособий.СуммаСверхНормОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060007005_УСН
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПособияСоциальномуСтрахованиюОбороты.ФизЛицо КАК ФизЛицо,
	|		ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|		УчетнаяПолитикаНалоговыйУчет.УСН КАК УСН,
	|		ПособияСоциальномуСтрахованиюОбороты.УходЗаПервымРебенком КАК УходЗаПервымРебенком,
	|		СУММА(ПособияСоциальномуСтрахованиюОбороты.СтраховыеСлучаиОборот) КАК СтраховыеСлучаиОборот,
	|		СУММА(ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот) КАК СуммаВсегоОборот,
	|		СУММА(ПособияСоциальномуСтрахованиюОбороты.СуммаСверхНормОборот) КАК СуммаСверхНормОборот
	|	ИЗ
	|		РегистрНакопления.ПособияПоУходуЗаРебенкомДоПолутораЛет.Обороты(&парамНачалоГода, &парамКонецОтчетногоПериода, Месяц, Организация = &парамОрганизация) КАК ПособияСоциальномуСтрахованиюОбороты
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТУчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНалоговыйУчет
	|			ПО (МЕСЯЦ(ПособияСоциальномуСтрахованиюОбороты.Период) = УчетнаяПолитикаНалоговыйУчет.Месяц)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПособияСоциальномуСтрахованиюОбороты.ФизЛицо,
	|		ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД,
	|		ПособияСоциальномуСтрахованиюОбороты.УходЗаПервымРебенком,
	|		УчетнаяПолитикаНалоговыйУчет.УСН) КАК ДанныеУчетаПособий";
	
	// РаспределениеЗаработкаПолучателейПособий
	// Это данные о количестве получателей пособий по уходу и для дополнительной таблички Таблиц 3 и 6 Разделов I и II
	// Поля:
	//		П000030005001, П000030006001, П000030000103..., П000030000503  Таблицы 3   
	//		для показателей П000060005001, П000060000103 ..., П000060000503  Таблицы 6 
	//			создаем двойной набор полей: с постфиксами _ЕНВД и _УСН
	// Описание:	
	//	Суммируются соответствующие данные из регистра сведений ЗаработкиПолучателейПособияПоУходуЗаРебенкомДоПолутораЛет 
	//  с учетом режима налогообложения из таблицы ВТУчетнаяПолитикаНалоговыйУчет
	// 
	
	РаспределениеЗаработкаПолучателейПособийТекст =
	"ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ЗаработокФизлиц.ОблагаетсяЕНВД)
	|					И (НЕ ЗаработокФизлиц.УСН)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030005001,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ЗаработокФизлиц.ОблагаетсяЕНВД)
	|					И (НЕ ЗаработокФизлиц.УСН)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030006001,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ЗаработокФизлиц.ОблагаетсяЕНВД)
	|					И (НЕ ЗаработокФизлиц.УСН)
	|					И ЗаработокФизлиц.Заработок < 3751
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030000103,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ЗаработокФизлиц.ОблагаетсяЕНВД)
	|					И (НЕ ЗаработокФизлиц.УСН)
	|					И ЗаработокФизлиц.Заработок >= 3751
	|					И ЗаработокФизлиц.Заработок < 7501
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030000203,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ЗаработокФизлиц.ОблагаетсяЕНВД)
	|					И (НЕ ЗаработокФизлиц.УСН)
	|					И ЗаработокФизлиц.Заработок >= 7501
	|					И ЗаработокФизлиц.Заработок < 11251
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030000303,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ЗаработокФизлиц.ОблагаетсяЕНВД)
	|					И (НЕ ЗаработокФизлиц.УСН)
	|					И ЗаработокФизлиц.Заработок >= 11251
	|					И ЗаработокФизлиц.Заработок < &МаксимумЗарплаты
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030000403,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ЗаработокФизлиц.ОблагаетсяЕНВД)
	|					И (НЕ ЗаработокФизлиц.УСН)
	|					И ЗаработокФизлиц.Заработок >= &МаксимумЗарплаты
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000030000503,
	|	СУММА(ВЫБОР
	|			КОГДА ЗаработокФизлиц.ОблагаетсяЕНВД
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060005001_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ЗаработокФизлиц.ОблагаетсяЕНВД
	|					И ЗаработокФизлиц.Заработок < 3751
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060000103_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ЗаработокФизлиц.ОблагаетсяЕНВД
	|					И ЗаработокФизлиц.Заработок >= 3751
	|					И ЗаработокФизлиц.Заработок < 7501
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060000203_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ЗаработокФизлиц.ОблагаетсяЕНВД
	|					И ЗаработокФизлиц.Заработок >= 7501
	|					И ЗаработокФизлиц.Заработок < 11251
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060000303_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ЗаработокФизлиц.ОблагаетсяЕНВД
	|					И ЗаработокФизлиц.Заработок >= 11251
	|					И ЗаработокФизлиц.Заработок < &МаксимумЗарплаты
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060000403_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ЗаработокФизлиц.ОблагаетсяЕНВД
	|					И ЗаработокФизлиц.Заработок >= &МаксимумЗарплаты
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060000503_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ЗаработокФизлиц.ОблагаетсяЕНВД)
	|					И ЗаработокФизлиц.УСН
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060005001_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ЗаработокФизлиц.ОблагаетсяЕНВД)
	|					И ЗаработокФизлиц.УСН
	|					И ЗаработокФизлиц.Заработок < 3751
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060000103_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ЗаработокФизлиц.ОблагаетсяЕНВД)
	|					И ЗаработокФизлиц.УСН
	|					И ЗаработокФизлиц.Заработок >= 3751
	|					И ЗаработокФизлиц.Заработок < 7501
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060000203_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ЗаработокФизлиц.ОблагаетсяЕНВД)
	|					И ЗаработокФизлиц.УСН
	|					И ЗаработокФизлиц.Заработок >= 7501
	|					И ЗаработокФизлиц.Заработок < 11251
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060000303_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ЗаработокФизлиц.ОблагаетсяЕНВД)
	|					И ЗаработокФизлиц.УСН
	|					И ЗаработокФизлиц.Заработок >= 11251
	|					И ЗаработокФизлиц.Заработок < &МаксимумЗарплаты
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060000403_УСН,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ЗаработокФизлиц.ОблагаетсяЕНВД)
	|					И ЗаработокФизлиц.УСН
	|					И ЗаработокФизлиц.Заработок >= &МаксимумЗарплаты
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000060000503_УСН
	|ИЗ
	|	(ВЫБРАТЬ
	|		Заработки.ФизЛицо КАК ФизЛицо,
	|		Заработки.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|		МАКСИМУМ(Заработки.РазмерСреднегоЗаработка) * 365 / 12 КАК Заработок,
	|		УчетнаяПолитикаНалоговыйУчет.УСН КАК УСН
	|	ИЗ
	|		РегистрСведений.ЗаработкиПолучателейПособияПоУходуЗаРебенкомДоПолутораЛет КАК Заработки
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТУчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНалоговыйУчет
	|			ПО (МЕСЯЦ(Заработки.Период) = УчетнаяПолитикаНалоговыйУчет.Месяц)
	|	ГДЕ
	|		Заработки.Период МЕЖДУ &парамНачалоГода И &парамКонецОтчетногоПериода
	|		И Заработки.Организация = &парамОрганизация
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Заработки.ФизЛицо,
	|		Заработки.ОблагаетсяЕНВД,
	|		УчетнаяПолитикаНалоговыйУчет.УСН) КАК ЗаработокФизлиц";
	
	// ДоходыДляФСС_НС
	// Это итоговые суммы доходов, облагаемых взносами на страхование от несчастных случаев - Раздел III
	// Поля:
	//		П000090001004, ..., П000090001305  Таблицы 9
	// Описание:	
	//	Выбираются соответствующие данные из ВТДоходыФСС_НС (таблица с данными о доходах нарастающим итогом) 
	//  Показатели за месяц рассчитываются по данным нарастающим итогом
	// 
	// ДоходыФСС_НС
	// Таблица ВТДоходыФСС_НС содержит данные учета доходов с точки зрения обложения страховыми взносами
	// Поля:
	//		ФизЛицо,
	//		КодДоходаФСС_НС, 
	//		Результат, 
	//		МесяцДохода, 
	//		ПериодРегистрации 
	// Описание:	
	//	Выбираем из начисленные суммы либо непосредственно из документа НачислениеЗарплатыРаботникамОрганизаций
	//  (в конфигурации БП) либо из рег-ров расчета
	//  Рассчитываем облагаемеые суммы в целом по организации нарастающим итогом по месяцам отчетного периода
	//  с учетом инвалидности физлиц из таблицы ВТДанныеОбИнвалидности
	// 
	// ДанныеОбИнвалидности
	//	Поля:
	//		Период
	//		Физлицо
	//
	//	Описание:
	// 	список периодов-физлиц, которые являются инвалидами
	//
	
	ДоходыДляФСС_НСТекст = 
	"ВЫБРАТЬ
	|	ОсновныеНачисленияРаботниковОрганизаций.Физлицо КАК ФизЛицо,
	|	ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета.КодДоходаФСС_НС КАК КодДоходаФСС_НС,
	|	ОсновныеНачисленияРаботниковОрганизаций.Результат КАК Результат,
	|	ОсновныеНачисленияРаботниковОрганизаций.Ссылка.ПериодРегистрации КАК ПериодРегистрации
	|ПОМЕСТИТЬ ВТНачисленныеСуммы
	|ИЗ
	|	Документ.НачислениеЗарплатыРаботникамОрганизаций.Начисления КАК ОсновныеНачисленияРаботниковОрганизаций
	|ГДЕ
	|	ОсновныеНачисленияРаботниковОрганизаций.Ссылка.ПериодРегистрации МЕЖДУ &парамНачалоГода И &парамКонецОтчетногоПериода
	|	И ОсновныеНачисленияРаботниковОрганизаций.Ссылка.Организация = &парамОрганизация
	|	И ОсновныеНачисленияРаботниковОрганизаций.Ссылка.Проведен
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодРегистрации,
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ) КАК Период,
	|	СведенияОбИнвалидностиФизлиц.Физлицо КАК Физлицо
	|ПОМЕСТИТЬ ВТДанныеОбИнвалидности
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период КАК Период,
	|		СведенияОбИнвалидностиФизлиц.Физлицо КАК Физлицо,
	|		МАКСИМУМ(СведенияОбИнвалидностиФизлиц.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВТПериоды КАК Периоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК СведенияОбИнвалидностиФизлиц
	|			ПО Периоды.Период >= СведенияОбИнвалидностиФизлиц.Период
	|	ГДЕ
	|		СведенияОбИнвалидностиФизлиц.Физлицо В
	|				(ВЫБРАТЬ
	|					НачисленныеСуммы.ФизЛицо
	|				ИЗ
	|					ВТНачисленныеСуммы КАК НачисленныеСуммы)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СведенияОбИнвалидностиФизлиц.Физлицо,
	|		Периоды.Период) КАК Периоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК СведенияОбИнвалидностиФизлиц
	|		ПО (СведенияОбИнвалидностиФизлиц.Период = Периоды.ПериодРегистра)
	|			И (СведенияОбИнвалидностиФизлиц.Физлицо = Периоды.Физлицо)
	|ГДЕ
	|	СведенияОбИнвалидностиФизлиц.Инвалидность
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МЕСЯЦ(Периоды.Период) КАК МесяцДохода,
	|	(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА Доходы.КодДоходаФСС_НС = ЗНАЧЕНИЕ(Перечисление.ДоходыФСС_НС.Облагается)
	|						И СведенияИнвалидность.Физлицо ЕСТЬ НЕ NULL 
	|					ТОГДА Доходы.Результат
	|				ИНАЧЕ 0
	|			КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 1))) * &Делитель КАК РезультатИнвалида,
	|	(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА Доходы.КодДоходаФСС_НС = ЗНАЧЕНИЕ(Перечисление.ДоходыФСС_НС.Облагается)
	|					ТОГДА Доходы.Результат
	|				ИНАЧЕ 0
	|			КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 1))) * &Делитель КАК РезультатОблагается,
	|	(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА Доходы.КодДоходаФСС_НС <> ЗНАЧЕНИЕ(Перечисление.ДоходыФСС_НС.Облагается)
	|					ТОГДА Доходы.Результат
	|				ИНАЧЕ 0
	|			КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 1))) * &Делитель КАК РезультатНеОблагается
	|ПОМЕСТИТЬ ВТДоходыФСС_НС
	|ИЗ
	|	ВТПериоды КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачисленныеСуммы КАК Доходы
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОбИнвалидности КАК СведенияИнвалидность
	|			ПО Доходы.ФизЛицо = СведенияИнвалидность.Физлицо
	|				И Доходы.ПериодРегистрации = СведенияИнвалидность.Период
	|		ПО (Доходы.ПериодРегистрации МЕЖДУ &парамНачалоГода И КОНЕЦПЕРИОДА(Периоды.Период, МЕСЯЦ))
	|
	|СГРУППИРОВАТЬ ПО
	|	МЕСЯЦ(Периоды.Период)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	МесяцДохода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА МЕСЯЦ(Периоды.Период) = &Месяц3
	|				ТОГДА Доходы.РезультатОблагается
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000090001004,
	|	СУММА(ВЫБОР
	|			КОГДА МЕСЯЦ(Периоды.Период) = &Месяц1
	|				ТОГДА Доходы.РезультатОблагается - ЕСТЬNULL(ДоходыПредМесяца.РезультатОблагается, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000090001104,
	|	СУММА(ВЫБОР
	|			КОГДА МЕСЯЦ(Периоды.Период) = &Месяц2
	|				ТОГДА Доходы.РезультатОблагается - ЕСТЬNULL(ДоходыПредМесяца.РезультатОблагается, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000090001204,
	|	СУММА(ВЫБОР
	|			КОГДА МЕСЯЦ(Периоды.Период) = &Месяц3
	|				ТОГДА Доходы.РезультатОблагается - ЕСТЬNULL(ДоходыПредМесяца.РезультатОблагается, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000090001304,
	|	СУММА(ВЫБОР
	|			КОГДА МЕСЯЦ(Периоды.Период) = &Месяц3
	|				ТОГДА Доходы.РезультатИнвалида
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000090001005,
	|	СУММА(ВЫБОР
	|			КОГДА МЕСЯЦ(Периоды.Период) = &Месяц1
	|				ТОГДА Доходы.РезультатИнвалида - ЕСТЬNULL(ДоходыПредМесяца.РезультатИнвалида, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000090001105,
	|	СУММА(ВЫБОР
	|			КОГДА МЕСЯЦ(Периоды.Период) = &Месяц2
	|				ТОГДА Доходы.РезультатИнвалида - ЕСТЬNULL(ДоходыПредМесяца.РезультатИнвалида, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000090001205,
	|	СУММА(ВЫБОР
	|			КОГДА МЕСЯЦ(Периоды.Период) = &Месяц3
	|				ТОГДА Доходы.РезультатИнвалида - ЕСТЬNULL(ДоходыПредМесяца.РезультатИнвалида, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000090001305,
	|	СУММА(ВЫБОР
	|			КОГДА МЕСЯЦ(Периоды.Период) = &Месяц3
	|				ТОГДА Доходы.РезультатНеОблагается
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000090001006
	|ИЗ
	|	ВТПериоды КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыФСС_НС КАК Доходы
	|		ПО (МЕСЯЦ(Периоды.Период) = Доходы.МесяцДохода)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыФСС_НС КАК ДоходыПредМесяца
	|		ПО (МЕСЯЦ(Периоды.Период) - 1 = ДоходыПредМесяца.МесяцДохода)";
	
	// корректируем округление в соответствии с указаниями пользователя
	ДоходыДляФСС_НСТекст = СтрЗаменить(ДоходыДляФСС_НСТекст,"ЧИСЛО(15, 1)","ЧИСЛО(15, " + ТочностьЕдиницыИзмерения + ")");
	
	// первый месяц
	ПериодыТекст = "ВЫБРАТЬ 1 КАК Месяц ПОМЕСТИТЬ ВТМесяцы";
	// прибавим остальные месяцы
	Для Сч = 2 По Месяц(ДатаКонцаПериодаОтчета) Цикл
		ПериодыТекст = ПериодыТекст +" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ " + Сч;
	КонецЦикла;
	Запрос.Текст = ПериодыТекст;
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	
	ОтражениеЗарплатыВРеглУчетеНарастающимИтогомТекст = ЗаполнениеРегламентированнойОтчетностиПереопределяемый.ТекстРасчетовСФСС();
	Запрос.Текст = СтрЗаменить(ОтражениеЗарплатыВРеглУчетеНарастающимИтогомТекст,"ЧИСЛО(15, 1)","ЧИСЛО(15, " + ТочностьЕдиницыИзмерения + ")");
	Запрос.Выполнить();
	
	РасчетыСФондомТекст =
	"ВЫБРАТЬ
	|	МЕСЯЦ(Периоды.Период) КАК Месяц,
	|	(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА Расходы.ВидПособияСоциальногоСтрахования В (ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ДополнительныйОтпускПослеНесчастныхСлучаев))
	|					ТОГДА Расходы.СуммаВсегоОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 1))) * &Делитель КАК РасходовНСиПЗ_ЗаМесяц,
	|	(ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА УчетнаяПолитикаНалоговыйУчет.УСН
	|						ИЛИ Расходы.ВидПособияСоциальногоСтрахования В (ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ДополнительныйОтпускПослеНесчастныхСлучаев), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПустаяСсылка))
	|					ТОГДА 0
	|				ИНАЧЕ Расходы.СуммаВсегоОборот
	|			КОНЕЦ) / &Делитель КАК ЧИСЛО(15, 1))) * &Делитель КАК РасходовЗаМесяц
	|ПОМЕСТИТЬ ВТРасходыНарастающимИтогом
	|ИЗ
	|	ВТПериоды КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ПособияСоциальномуСтрахованиюОбороты.Период КАК Период,
	|			ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот КАК СуммаВсегоОборот,
	|			ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования КАК ВидПособияСоциальногоСтрахования
	|		ИЗ
	|			РегистрНакопления.ПособияСоциальномуСтрахованию.Обороты(
	|					&парамНачалоГода,
	|					&парамКонецОтчетногоПериода,
	|					Месяц,
	|					Организация = &парамОрганизация
	|						И (НЕ ОблагаетсяЕНВД)) КАК ПособияСоциальномуСтрахованиюОбороты
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ПособияПоУходуЗаРебенкомДоПолутораЛетОбороты.Период,
	|			ПособияПоУходуЗаРебенкомДоПолутораЛетОбороты.СуммаВсегоОборот,
	|			ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПоУходуЗаРебенкомДоПолутораЛет)
	|		ИЗ
	|			РегистрНакопления.ПособияПоУходуЗаРебенкомДоПолутораЛет.Обороты(
	|					&парамНачалоГода,
	|					&парамКонецОтчетногоПериода,
	|					Месяц,
	|					Организация = &парамОрганизация
	|						И (НЕ ОблагаетсяЕНВД)) КАК ПособияПоУходуЗаРебенкомДоПолутораЛетОбороты) КАК Расходы
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТУчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНалоговыйУчет
	|			ПО (МЕСЯЦ(Расходы.Период) = УчетнаяПолитикаНалоговыйУчет.Месяц)
	|		ПО (Расходы.Период МЕЖДУ &парамНачалоГода И КОНЕЦПЕРИОДА(Периоды.Период, МЕСЯЦ))
	|
	|СГРУППИРОВАТЬ ПО
	|	МЕСЯЦ(Периоды.Период)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Месяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НалогПоФизлицам.Месяц КАК Месяц,
	|	(ВЫРАЗИТЬ(СУММА(НалогПоФизлицам.ФСС) / &Делитель КАК ЧИСЛО(15, 1))) * &Делитель КАК НачисленоЗаМесяц
	|ПОМЕСТИТЬ ВТНалогНарастающимИтогом
	|ИЗ
	|	(ВЫБРАТЬ
	|		МЕСЯЦ(Периоды.Период) КАК Месяц,
	|		ЕСНИсчисленный.ФизЛицо КАК ФизЛицо,
	|		СУММА(ЕСНИсчисленный.ФСС) - (ВЫРАЗИТЬ(СУММА(ЕСНИсчисленный.ПримененнаяЛьготаФСС) * МаксСтавкиЕСН.ФССвПроцентах / 100 КАК ЧИСЛО(15, 3))) КАК ФСС
	|	ИЗ
	|		ВТПериоды КАК Периоды
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЕСНИсчисленный КАК ЕСНИсчисленный
	|			ПО (ЕСНИсчисленный.Период МЕЖДУ &парамНачалоГода И КОНЕЦПЕРИОДА(Периоды.Период, МЕСЯЦ))
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОСтавкахЕСНиПФР КАК МаксСтавкиЕСН
	|			ПО (МаксСтавкиЕСН.НомерСтрокиСтавок = 1)
	|				И (ЕСНИсчисленный.Организация.ВидСтавокЕСНиПФР = МаксСтавкиЕСН.ВидСтавокЕСНиПФР)
	|				И (МаксСтавкиЕСН.Год = ГОД(ЕСНИсчисленный.Период))
	|	ГДЕ
	|		ЕСНИсчисленный.ОбособленноеПодразделение = &парамОрганизация
	|	
	|	СГРУППИРОВАТЬ ПО
	|		МЕСЯЦ(Периоды.Период),
	|		МаксСтавкиЕСН.ФССвПроцентах,
	|		ЕСНИсчисленный.ФизЛицо) КАК НалогПоФизлицам
	|ГДЕ
	|	НалогПоФизлицам.ФизЛицо ЕСТЬ НЕ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	НалогПоФизлицам.Месяц
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Месяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА Периоды.Месяц = &Месяц1 - 1
	|				ТОГДА ВЫБОР
	|						КОГДА ЕСТЬNULL(ОтражениеЗарплатыВРеглУчетеПоМесяцам.НачисленоЗаМесяц, 0) = 0
	|							ТОГДА ЕСТЬNULL(НалогПоМесяцам.НачисленоЗаМесяц, 0)
	|						ИНАЧЕ ЕСТЬNULL(ОтражениеЗарплатыВРеглУчетеПоМесяцам.НачисленоЗаМесяц, 0)
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020003201,
	|	СУММА(ВЫБОР
	|			КОГДА Периоды.Месяц = &Месяц1
	|				ТОГДА ВЫБОР
	|						КОГДА ЕСТЬNULL(ОтражениеЗарплатыВРеглУчетеПоМесяцам.НачисленоЗаМесяц, 0) = 0
	|							ТОГДА ЕСТЬNULL(НалогПоМесяцам.НачисленоЗаМесяц, 0)
	|						ИНАЧЕ ЕСТЬNULL(ОтражениеЗарплатыВРеглУчетеПоМесяцам.НачисленоЗаМесяц, 0)
	|					КОНЕЦ - ВЫБОР
	|						КОГДА ЕСТЬNULL(ОтражениеЗарплатыВРеглУчетеПредМесяца.НачисленоЗаМесяц, 0) = 0
	|							ТОГДА ЕСТЬNULL(НалогПредМесяца.НачисленоЗаМесяц, 0)
	|						ИНАЧЕ ЕСТЬNULL(ОтражениеЗарплатыВРеглУчетеПредМесяца.НачисленоЗаМесяц, 0)
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020003401,
	|	СУММА(ВЫБОР
	|			КОГДА Периоды.Месяц = &Месяц2
	|				ТОГДА ВЫБОР
	|						КОГДА ЕСТЬNULL(ОтражениеЗарплатыВРеглУчетеПоМесяцам.НачисленоЗаМесяц, 0) = 0
	|							ТОГДА ЕСТЬNULL(НалогПоМесяцам.НачисленоЗаМесяц, 0)
	|						ИНАЧЕ ЕСТЬNULL(ОтражениеЗарплатыВРеглУчетеПоМесяцам.НачисленоЗаМесяц, 0)
	|					КОНЕЦ - ВЫБОР
	|						КОГДА ЕСТЬNULL(ОтражениеЗарплатыВРеглУчетеПредМесяца.НачисленоЗаМесяц, 0) = 0
	|							ТОГДА ЕСТЬNULL(НалогПредМесяца.НачисленоЗаМесяц, 0)
	|						ИНАЧЕ ЕСТЬNULL(ОтражениеЗарплатыВРеглУчетеПредМесяца.НачисленоЗаМесяц, 0)
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020003501,
	|	СУММА(ВЫБОР
	|			КОГДА Периоды.Месяц = &Месяц3
	|				ТОГДА ВЫБОР
	|						КОГДА ЕСТЬNULL(ОтражениеЗарплатыВРеглУчетеПоМесяцам.НачисленоЗаМесяц, 0) = 0
	|							ТОГДА ЕСТЬNULL(НалогПоМесяцам.НачисленоЗаМесяц, 0)
	|						ИНАЧЕ ЕСТЬNULL(ОтражениеЗарплатыВРеглУчетеПоМесяцам.НачисленоЗаМесяц, 0)
	|					КОНЕЦ - ВЫБОР
	|						КОГДА ЕСТЬNULL(ОтражениеЗарплатыВРеглУчетеПредМесяца.НачисленоЗаМесяц, 0) = 0
	|							ТОГДА ЕСТЬNULL(НалогПредМесяца.НачисленоЗаМесяц, 0)
	|						ИНАЧЕ ЕСТЬNULL(ОтражениеЗарплатыВРеглУчетеПредМесяца.НачисленоЗаМесяц, 0)
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020003601,
	|	СУММА(ВЫБОР
	|			КОГДА Периоды.Месяц = &Месяц1 - 1
	|				ТОГДА ВЫБОР
	|						КОГДА ЕСТЬNULL(ОтражениеЗарплатыВРеглУчетеПоМесяцам.РасходовЗаМесяц, 0) = 0
	|							ТОГДА ЕСТЬNULL(РасходыПоМесяцам.РасходовЗаМесяц, 0)
	|						ИНАЧЕ ЕСТЬNULL(ОтражениеЗарплатыВРеглУчетеПоМесяцам.РасходовЗаМесяц, 0)
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020015201,
	|	СУММА(ВЫБОР
	|			КОГДА Периоды.Месяц = &Месяц1
	|				ТОГДА ВЫБОР
	|						КОГДА ЕСТЬNULL(ОтражениеЗарплатыВРеглУчетеПоМесяцам.РасходовЗаМесяц, 0) = 0
	|							ТОГДА ЕСТЬNULL(РасходыПоМесяцам.РасходовЗаМесяц, 0)
	|						ИНАЧЕ ЕСТЬNULL(ОтражениеЗарплатыВРеглУчетеПоМесяцам.РасходовЗаМесяц, 0)
	|					КОНЕЦ - ВЫБОР
	|						КОГДА ЕСТЬNULL(ОтражениеЗарплатыВРеглУчетеПредМесяца.РасходовЗаМесяц, 0) = 0
	|							ТОГДА ЕСТЬNULL(РасходыПредМесяца.РасходовЗаМесяц, 0)
	|						ИНАЧЕ ЕСТЬNULL(ОтражениеЗарплатыВРеглУчетеПредМесяца.РасходовЗаМесяц, 0)
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020015401,
	|	СУММА(ВЫБОР
	|			КОГДА Периоды.Месяц = &Месяц2
	|				ТОГДА ВЫБОР
	|						КОГДА ЕСТЬNULL(ОтражениеЗарплатыВРеглУчетеПоМесяцам.РасходовЗаМесяц, 0) = 0
	|							ТОГДА ЕСТЬNULL(РасходыПоМесяцам.РасходовЗаМесяц, 0)
	|						ИНАЧЕ ЕСТЬNULL(ОтражениеЗарплатыВРеглУчетеПоМесяцам.РасходовЗаМесяц, 0)
	|					КОНЕЦ - ВЫБОР
	|						КОГДА ЕСТЬNULL(ОтражениеЗарплатыВРеглУчетеПредМесяца.РасходовЗаМесяц, 0) = 0
	|							ТОГДА ЕСТЬNULL(РасходыПредМесяца.РасходовЗаМесяц, 0)
	|						ИНАЧЕ ЕСТЬNULL(ОтражениеЗарплатыВРеглУчетеПредМесяца.РасходовЗаМесяц, 0)
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020015501,
	|	СУММА(ВЫБОР
	|			КОГДА Периоды.Месяц = &Месяц3
	|				ТОГДА ВЫБОР
	|						КОГДА ЕСТЬNULL(ОтражениеЗарплатыВРеглУчетеПоМесяцам.РасходовЗаМесяц, 0) = 0
	|							ТОГДА ЕСТЬNULL(РасходыПоМесяцам.РасходовЗаМесяц, 0)
	|						ИНАЧЕ ЕСТЬNULL(ОтражениеЗарплатыВРеглУчетеПоМесяцам.РасходовЗаМесяц, 0)
	|					КОНЕЦ - ВЫБОР
	|						КОГДА ЕСТЬNULL(ОтражениеЗарплатыВРеглУчетеПредМесяца.РасходовЗаМесяц, 0) = 0
	|							ТОГДА ЕСТЬNULL(РасходыПредМесяца.РасходовЗаМесяц, 0)
	|						ИНАЧЕ ЕСТЬNULL(ОтражениеЗарплатыВРеглУчетеПредМесяца.РасходовЗаМесяц, 0)
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020015601,
	|	СУММА(ВЫБОР
	|			КОГДА Периоды.Месяц = &Месяц1 - 1
	|				ТОГДА ЕСТЬNULL(ОтражениеЗарплатыВРеглУчетеПоМесяцам.НачисленоНСиПЗ_ЗаМесяц, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000100002101,
	|	СУММА(ВЫБОР
	|			КОГДА Периоды.Месяц = &Месяц1
	|				ТОГДА ЕСТЬNULL(ОтражениеЗарплатыВРеглУчетеПоМесяцам.НачисленоНСиПЗ_ЗаМесяц, 0) - ЕСТЬNULL(ОтражениеЗарплатыВРеглУчетеПредМесяца.НачисленоНСиПЗ_ЗаМесяц, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000100002401,
	|	СУММА(ВЫБОР
	|			КОГДА Периоды.Месяц = &Месяц2
	|				ТОГДА ЕСТЬNULL(ОтражениеЗарплатыВРеглУчетеПоМесяцам.НачисленоНСиПЗ_ЗаМесяц, 0) - ЕСТЬNULL(ОтражениеЗарплатыВРеглУчетеПредМесяца.НачисленоНСиПЗ_ЗаМесяц, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000100002501,
	|	СУММА(ВЫБОР
	|			КОГДА Периоды.Месяц = &Месяц3
	|				ТОГДА ЕСТЬNULL(ОтражениеЗарплатыВРеглУчетеПоМесяцам.НачисленоНСиПЗ_ЗаМесяц, 0) - ЕСТЬNULL(ОтражениеЗарплатыВРеглУчетеПредМесяца.НачисленоНСиПЗ_ЗаМесяц, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000100002601,
	|	СУММА(ВЫБОР
	|			КОГДА Периоды.Месяц = &Месяц1 - 1
	|				ТОГДА ВЫБОР
	|						КОГДА ЕСТЬNULL(ОтражениеЗарплатыВРеглУчетеПоМесяцам.РасходовНСиПЗ_ЗаМесяц, 0) = 0
	|							ТОГДА ЕСТЬNULL(РасходыПоМесяцам.РасходовНСиПЗ_ЗаМесяц, 0)
	|						ИНАЧЕ ЕСТЬNULL(ОтражениеЗарплатыВРеглУчетеПоМесяцам.РасходовНСиПЗ_ЗаМесяц, 0)
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000100010101,
	|	СУММА(ВЫБОР
	|			КОГДА Периоды.Месяц = &Месяц1
	|				ТОГДА ВЫБОР
	|						КОГДА ЕСТЬNULL(ОтражениеЗарплатыВРеглУчетеПоМесяцам.РасходовНСиПЗ_ЗаМесяц, 0) = 0
	|							ТОГДА ЕСТЬNULL(РасходыПоМесяцам.РасходовНСиПЗ_ЗаМесяц, 0)
	|						ИНАЧЕ ЕСТЬNULL(ОтражениеЗарплатыВРеглУчетеПоМесяцам.РасходовНСиПЗ_ЗаМесяц, 0)
	|					КОНЕЦ - ВЫБОР
	|						КОГДА ЕСТЬNULL(ОтражениеЗарплатыВРеглУчетеПредМесяца.РасходовНСиПЗ_ЗаМесяц, 0) = 0
	|							ТОГДА ЕСТЬNULL(РасходыПредМесяца.РасходовНСиПЗ_ЗаМесяц, 0)
	|						ИНАЧЕ ЕСТЬNULL(ОтражениеЗарплатыВРеглУчетеПредМесяца.РасходовНСиПЗ_ЗаМесяц, 0)
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000100010401,
	|	СУММА(ВЫБОР
	|			КОГДА Периоды.Месяц = &Месяц2
	|				ТОГДА ВЫБОР
	|						КОГДА ЕСТЬNULL(ОтражениеЗарплатыВРеглУчетеПоМесяцам.РасходовНСиПЗ_ЗаМесяц, 0) = 0
	|							ТОГДА ЕСТЬNULL(РасходыПоМесяцам.РасходовНСиПЗ_ЗаМесяц, 0)
	|						ИНАЧЕ ЕСТЬNULL(ОтражениеЗарплатыВРеглУчетеПоМесяцам.РасходовНСиПЗ_ЗаМесяц, 0)
	|					КОНЕЦ - ВЫБОР
	|						КОГДА ЕСТЬNULL(ОтражениеЗарплатыВРеглУчетеПредМесяца.РасходовНСиПЗ_ЗаМесяц, 0) = 0
	|							ТОГДА ЕСТЬNULL(РасходыПредМесяца.РасходовНСиПЗ_ЗаМесяц, 0)
	|						ИНАЧЕ ЕСТЬNULL(ОтражениеЗарплатыВРеглУчетеПредМесяца.РасходовНСиПЗ_ЗаМесяц, 0)
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000100010501,
	|	СУММА(ВЫБОР
	|			КОГДА Периоды.Месяц = &Месяц3
	|				ТОГДА ВЫБОР
	|						КОГДА ЕСТЬNULL(ОтражениеЗарплатыВРеглУчетеПоМесяцам.РасходовНСиПЗ_ЗаМесяц, 0) = 0
	|							ТОГДА ЕСТЬNULL(РасходыПоМесяцам.РасходовНСиПЗ_ЗаМесяц, 0)
	|						ИНАЧЕ ЕСТЬNULL(ОтражениеЗарплатыВРеглУчетеПоМесяцам.РасходовНСиПЗ_ЗаМесяц, 0)
	|					КОНЕЦ - ВЫБОР
	|						КОГДА ЕСТЬNULL(ОтражениеЗарплатыВРеглУчетеПредМесяца.РасходовНСиПЗ_ЗаМесяц, 0) = 0
	|							ТОГДА ЕСТЬNULL(РасходыПредМесяца.РасходовНСиПЗ_ЗаМесяц, 0)
	|						ИНАЧЕ ЕСТЬNULL(ОтражениеЗарплатыВРеглУчетеПредМесяца.РасходовНСиПЗ_ЗаМесяц, 0)
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000100010601
	|ИЗ
	|	ВТМесяцы КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОтражениеЗарплатыВРеглУчетеНарастающимИтогом КАК ОтражениеЗарплатыВРеглУчетеПоМесяцам
	|		ПО Периоды.Месяц = ОтражениеЗарплатыВРеглУчетеПоМесяцам.Месяц
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОтражениеЗарплатыВРеглУчетеНарастающимИтогом КАК ОтражениеЗарплатыВРеглУчетеПредМесяца
	|		ПО (Периоды.Месяц - 1 = ОтражениеЗарплатыВРеглУчетеПредМесяца.Месяц)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРасходыНарастающимИтогом КАК РасходыПоМесяцам
	|		ПО Периоды.Месяц = РасходыПоМесяцам.Месяц
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРасходыНарастающимИтогом КАК РасходыПредМесяца
	|		ПО (Периоды.Месяц - 1 = РасходыПредМесяца.Месяц)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНалогНарастающимИтогом КАК НалогПоМесяцам
	|		ПО Периоды.Месяц = НалогПоМесяцам.Месяц
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНалогНарастающимИтогом КАК НалогПредМесяца
	|		ПО (Периоды.Месяц - 1 = НалогПредМесяца.Месяц)";
	
	РасходыНаЦелиОбязательногоССНаСпецРежимахТекст = 
	"ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД
	|					И (НЕ(УчетнаяПолитикаНалоговыйУчет.УплачиватьДобровольныеВзносыВФСС
	|							И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)))
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК РасходыПоСтрахованию_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчет.УСН
	|					И (НЕ(УчетнаяПолитикаНалоговыйУчет.УплачиватьДобровольныеВзносыВФСС
	|							И ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)))
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК РасходыПоСтрахованию_УСН
	|ИЗ
	|	(ВЫБРАТЬ
	|		МЕСЯЦ(ПособияСоциальномуСтрахованиюОбороты.Период) КАК Месяц,
	|		ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот КАК СуммаВсегоОборот,
	|		ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|		ПособияСоциальномуСтрахованиюОбороты.ВидПособияСоциальногоСтрахования КАК ВидПособияСоциальногоСтрахования
	|	ИЗ
	|		РегистрНакопления.ПособияСоциальномуСтрахованию.Обороты(
	|				&парамНачалоГода,
	|				&парамКонецОтчетногоПериода,
	|				Месяц,
	|				Организация = &парамОрганизация
	|					И (НЕ ВидПособияСоциальногоСтрахования В (ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПустаяСсылка), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ДополнительныйОтпускПослеНесчастныхСлучаев)))) КАК ПособияСоциальномуСтрахованиюОбороты
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		МЕСЯЦ(ПособияПоУходуЗаРебенкомДоПолутораЛетОбороты.Период),
	|		ПособияПоУходуЗаРебенкомДоПолутораЛетОбороты.СуммаВсегоОборот,
	|		ПособияПоУходуЗаРебенкомДоПолутораЛетОбороты.ОблагаетсяЕНВД,
	|		ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПоУходуЗаРебенкомДоПолутораЛет)
	|	ИЗ
	|		РегистрНакопления.ПособияПоУходуЗаРебенкомДоПолутораЛет.Обороты(&парамНачалоГода, &парамКонецОтчетногоПериода, Месяц, Организация = &парамОрганизация) КАК ПособияПоУходуЗаРебенкомДоПолутораЛетОбороты) КАК ПособияСоциальномуСтрахованиюОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНалоговыйУчет
	|		ПО ПособияСоциальномуСтрахованиюОбороты.Месяц = УчетнаяПолитикаНалоговыйУчет.Месяц";
	
	// округлим результаты, как указал пользователь в учетной политике
	НалоговыйУчет.ОбновитьДанныеУчетнойПолитикиПоНалоговомуУчету(глЗначениеПеременной("УчетнаяПолитикаОтраженияЗарплатыВУчете"), НачалоГода(ДатаКонцаПериодаОтчета), Организация);
	УчетнаяПолитика = глЗначениеПеременной("УчетнаяПолитикаОтраженияЗарплатыВУчете")[КонецМесяца(НачалоГода(ДатаКонцаПериодаОтчета))][Организация];
	
	Если УчетнаяПолитика.ТочностьИсчисленияЕСН = Перечисления.ПорядкиОкругленияЕСН.ВРубляхИКопейках Тогда
		РасчетыСФондомТекст = СтрЗаменить(РасчетыСФондомТекст,"ЧИСЛО(15, 3)","ЧИСЛО(15, 2)");
	ИначеЕсли УчетнаяПолитика.ТочностьИсчисленияЕСН = Перечисления.ПорядкиОкругленияЕСН.ВРублях Тогда
		РасчетыСФондомТекст = СтрЗаменить(РасчетыСФондомТекст,"ЧИСЛО(15, 3)","ЧИСЛО(15, 0)");
	Иначе 	
		РасчетыСФондомТекст = СтрЗаменить(РасчетыСФондомТекст,"ЧИСЛО(15, 3)","ЧИСЛО(15, 5)");
	КонецЕсли;
	
	РасчетыСФондомТекст  = СтрЗаменить(РасчетыСФондомТекст,"ЧИСЛО(15, 1)","ЧИСЛО(15, " + ТочностьЕдиницыИзмерения + ")");
	
	// -------------------------------------------------------------------------------
	// Вывод данных в отчет
	
	УзелРаздел1_1 = ОпределитьСтрокуВДеревеДанныхДляЗаполнения(ДеревоПоказателей, "Раздел1_1");
	УзелРаздел1_2 = ОпределитьСтрокуВДеревеДанныхДляЗаполнения(ДеревоПоказателей, "Раздел1_2");
	УзелРаздел3_1 = ОпределитьСтрокуВДеревеДанныхДляЗаполнения(ДеревоПоказателей, "Раздел3_1");
	УзелРаздел3_2 = ОпределитьСтрокуВДеревеДанныхДляЗаполнения(ДеревоПоказателей, "Раздел3_2");
	
	// Раздел I (табл. 1)
	
	Запрос.Текст = НалоговаяБазаТекст;
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Результат = Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	ВывестиРезультатЗапросаВДеревоПоказателей(УзелРаздел1_1, Результат);
	
	// Раздел III (табл. 9)
	
	Запрос.Текст = ДоходыДляФСС_НСТекст;
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Результат = Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	
	ВывестиРезультатЗапросаВДеревоПоказателей(УзелРаздел3_1, Результат);
	
	// расчет численности
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УчетнаяПолитикаНалоговыйУчет.Месяц
	|ИЗ
	|	ВТУчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНалоговыйУчет
	|ГДЕ
	|	УчетнаяПолитикаНалоговыйУчет.УСН";	
	
	СписокМесяцевУСН = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Месяц");
	
	ЧисленностьРаботниковНаУСН = 0;
	ЧисленностьРаботниковНаЕНВД = 0;
	ЧисленностьЖенщинНаУСН = 0;
	ЧисленностьЖенщинНаЕНВД = 0;
	ЧисленностьРаботниковНаОбщемрежиме = 0;
	ЧисленностьЖенщинНаОбщемрежиме = 0;
	ЧисленностьРаботников = 0;
	ЧисленностьИнвалидов = 0;
	КоличествоМесяцевРаботы = 0;
	Отчет = Отчеты.СредняяЧисленностьРаботниковОрганизаций.Создать();
	ТаблицаСреднихЧисленостей = Отчет.ПолучитьТаблицуЧисленностей(Организация, НачалоГода(ДатаКонцаПериодаОтчета), ДатаКонцаПериодаОтчета);
	Если ТаблицаСреднихЧисленостей.Количество() > 0 Тогда
		КоличествоМесяцевРаботы = ТаблицаСреднихЧисленостей.Количество();
		Для каждого СтрокаМесяца из ТаблицаСреднихЧисленостей Цикл
			ЭтоМесяцУСН = СписокМесяцевУСН.Найти(Месяц(СтрокаМесяца.МесяцОтчета)) <> Неопределено;
			ЧисленностьРаботниковНаУСН = ЧисленностьРаботниковНаУСН + ?(ЭтоМесяцУСН,Окр(СтрокаМесяца.СредняяЧисленностьНеЕНВД),0);
			ЧисленностьЖенщинНаУСН = ЧисленностьЖенщинНаУСН + ?(ЭтоМесяцУСН,Окр(СтрокаМесяца.СредняяЧисленностьЖенщинНеЕНВД),0);
			ЧисленностьРаботниковНаЕНВД = ЧисленностьРаботниковНаЕНВД + Окр(СтрокаМесяца.СредняяЧисленностьЕНВД);
			ЧисленностьЖенщинНаЕНВД = ЧисленностьЖенщинНаЕНВД + Окр(СтрокаМесяца.СредняяЧисленностьЖенщинЕНВД);
			ЧисленностьРаботниковНаОбщемрежиме = ЧисленностьРаботниковНаОбщемрежиме + ?(ЭтоМесяцУСН, 0, Окр(СтрокаМесяца.СредняяЧисленностьНеЕНВД));
			ЧисленностьЖенщинНаОбщемрежиме = ЧисленностьЖенщинНаОбщемрежиме + ?(ЭтоМесяцУСН, 0, Окр(СтрокаМесяца.СредняяЧисленностьЖенщинНеЕНВД));
			ЧисленностьРаботников = ЧисленностьРаботников + Окр(СтрокаМесяца.СредняяЧисленность);
			ЧисленностьИнвалидов = ЧисленностьИнвалидов + Окр(СтрокаМесяца.СредняяЧисленностьИнвалидов);
		КонецЦикла;
		ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел1_1,"П000010001003", Окр(ЧисленностьРаботниковНаОбщемрежиме / КоличествоМесяцевРаботы));
		ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел1_1,"П000010002003", Окр(ЧисленностьЖенщинНаОбщемрежиме / КоличествоМесяцевРаботы)); // в т.ч. женщин
		ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел3_1,"П000090001001", Окр(ЧисленностьРаботников / КоличествоМесяцевРаботы));
		ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел3_1,"П000090001002", Окр(ЧисленностьИнвалидов / КоличествоМесяцевРаботы)); // в т.ч. инвалидов
	КонецЕсли;
	
	// РАСХОДЫ НА ЦЕЛИ ОБЯЗАТЕЛЬНОГО СОЦИАЛЬНОГО СТРАХОВАНИЯ С НАЧАЛА ГОДА
	
	// Раздел I (табл 3) и Раздел III (табл 11)
	
	ДанныеОРасходах = Новый Структура;
	
	Запрос.Текст = РасходыНаЦелиОбязательногоССТекст;
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		ТаблицаРезультатовБЛ = Запрос.Выполнить().Выгрузить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	
	Если ТаблицаРезультатовБЛ.Количество() > 0 Тогда
		Для каждого Колонка Из ТаблицаРезультатовБЛ.Колонки Цикл
			ИмяКолонки = Колонка.Имя;
			ДанныеОРасходах.Вставить(ИмяКолонки,ТаблицаРезультатовБЛ[0][ИмяКолонки])
		КонецЦикла;
	КонецЕсли;
	
	Запрос.Текст = РасходыНаПособияПоУходуТекст;
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		ТаблицаРезультатовБЛ = Запрос.Выполнить().Выгрузить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	
	Если ТаблицаРезультатовБЛ.Количество() > 0 Тогда
		Для каждого Колонка Из ТаблицаРезультатовБЛ.Колонки Цикл
			ИмяКолонки = Колонка.Имя;
			ДанныеОРасходах.Вставить(ИмяКолонки,ТаблицаРезультатовБЛ[0][ИмяКолонки])
		КонецЦикла;
	КонецЕсли;
	
	Запрос.Текст = РаспределениеЗаработкаПолучателейПособийТекст;
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		ТаблицаРезультатовБЛ = Запрос.Выполнить().Выгрузить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	
	Если ТаблицаРезультатовБЛ.Количество() > 0 Тогда
		Для каждого Колонка Из ТаблицаРезультатовБЛ.Колонки Цикл
			ИмяКолонки = Колонка.Имя;
			ДанныеОРасходах.Вставить(ИмяКолонки,ТаблицаРезультатовБЛ[0][ИмяКолонки])
		КонецЦикла;
	КонецЕсли;
	
	// данные по общему налоговому режиму
	
	Для каждого КлючИЗначение Из ДанныеОРасходах Цикл
		ИмяКолонки = КлючИЗначение.Ключ;
		Если Найти(ИмяКолонки,"_") = 0 Тогда
			Если Найти(Колонка.Имя,"П00003") = 0 Тогда
				УзелРаздела = УзелРаздел3_2
			Иначе
				УзелРаздела = УзелРаздел1_2
			КонецЕсли;
			ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздела, ИмяКолонки, КлючИЗначение.Значение);
		КонецЕсли;
	КонецЦикла;
	
	// РАСЧЕТЫ ПО СРЕДСТВАМ ОБЯЗАТЕЛЬНОГО СОЦИАЛЬНОГО СТРАХОВАНИЯ 
	
	// Раздел I (табл. 2) и Раздел III (табл 10)
	// Заполняем по данным бухгалтерского учета из документа ОтражениеЗарплатыВРеглУчете
	
	Запрос.Текст = РасчетыСФондомТекст;
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		РезультатЗапроса = Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		КолонкиРезультата = РезультатЗапроса.Колонки;
		Для Каждого Колонка из КолонкиРезультата Цикл
			Если Найти(Колонка.Имя,"П00002") = 0 Тогда
				УзелРаздела = УзелРаздел3_1
			Иначе
				УзелРаздела = УзелРаздел1_1
			КонецЕсли;
			ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздела, Колонка.Имя, Выборка[Колонка.Имя]);
		КонецЦикла; 
	КонецЕсли; 
	
	// данные по специальным налоговым режимам - Раздел II 
	
	Если ЗначениеЗаполнено(ЧисленностьРаботниковНаЕНВД) Или ЗначениеЗаполнено(ЧисленностьРаботниковНаУСН) Тогда // ведется деятельность, облагаемая ЕНВД
		
		ВыплатыРаботникам_УСН = 0;
		ВыплатыРаботникам_ЕНВД = 0;
		Запрос.Текст = ВыплатыРаботникамНаСпецРежимахТекст;
		#Если Клиент тогда
			ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
		#КонецЕсли
		Попытка
			Выборка = Запрос.Выполнить().Выбрать();
		Исключение
			#Если Клиент тогда
				ИнформацияОбОшибке = ИнформацияОбОшибке();
				ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
			#КонецЕсли
			Возврат ПустоеДерево;
		КонецПопытки;
		
		Если Выборка.Следующий() Тогда
			ВыплатыРаботникам_УСН = Выборка.ВыплатыРаботникам_УСН;
			ВыплатыРаботникам_ЕНВД = Выборка.ВыплатыРаботникам_ЕНВД;
		КонецЕсли;
		
		РасходыПоСтрахованию_УСН = 0;
		РасходыПоСтрахованию_ЕНВД = 0;
		Запрос.Текст = ЗаполнениеРегламентированнойОтчетностиПереопределяемый.УстановитьНазваниеРегистраУчетнойПолитикиСтраховыхВзносов(РасходыНаЦелиОбязательногоССНаСпецРежимахТекст);
		#Если Клиент тогда
			ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
		#КонецЕсли
		Попытка
			Выборка = Запрос.Выполнить().Выбрать();
		Исключение
			#Если Клиент тогда
				ИнформацияОбОшибке = ИнформацияОбОшибке();
				ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
			#КонецЕсли
			Возврат ПустоеДерево;
		КонецПопытки;
		Если Выборка.Следующий() Тогда
			РасходыПоСтрахованию_УСН = Выборка.РасходыПоСтрахованию_УСН;
			РасходыПоСтрахованию_ЕНВД = Выборка.РасходыПоСтрахованию_ЕНВД;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ЧисленностьРаботниковНаЕНВД) Тогда 
			
			УзелРаздел2_1 = ОпределитьСтрокуВДеревеДанныхДляЗаполнения(ДеревоПоказателей, "Раздел2_1");
			УзелРаздел2_2 = ОпределитьСтрокуВДеревеДанныхДляЗаполнения(ДеревоПоказателей, "Раздел2_2");
			
			ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел2_1, "Шифр1", "0");
			ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел2_1, "Шифр2", "2");
			ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел2_1, "Шифр3", "1");
			
			// Раздел II (табл 4, 5)
			
			ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел2_1,"П000040001003", Окр(ЧисленностьРаботниковНаЕНВД / КоличествоМесяцевРаботы));
			ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел2_1,"П000040002003", Окр(ЧисленностьЖенщинНаЕНВД / КоличествоМесяцевРаботы)); // в т.ч. женщин
			ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел2_1,"П000040003003", ВыплатыРаботникам_ЕНВД);
			ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел2_1,"П000050006003", РасходыПоСтрахованию_ЕНВД);
			
			// Раздел II (табл 6)
			
			Для каждого КлючИЗначение Из ДанныеОРасходах Цикл
				ИмяКолонки = КлючИЗначение.Ключ;
				ПозицияРазделителя = Найти(ИмяКолонки,"_");
				Если ПозицияРазделителя > 0 Тогда
					СпецРежим = Сред(ИмяКолонки,ПозицияРазделителя + 1);
					ИмяПоказателя = Лев(ИмяКолонки,13);
					Если СпецРежим = "ЕНВД" Тогда
						ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел2_2, ИмяПоказателя, КлючИЗначение.Значение);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ЧисленностьРаботниковНаУСН) Тогда 
			
			УзелРаздел2_1 = ОпределитьСтрокуВДеревеДанныхДляЗаполнения(ДеревоПоказателей, "Раздел2_1");
			УзелРаздел2_2 = ОпределитьСтрокуВДеревеДанныхДляЗаполнения(ДеревоПоказателей, "Раздел2_2");
			
			ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел2_1, "Шифр1", "0");
			ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел2_1, "Шифр2", "1");
			ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел2_1, "Шифр3", "1");
			
			// Раздел II (табл 4, 5)
			
			ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел2_1,"П000040001003", Окр(ЧисленностьРаботниковНаУСН / КоличествоМесяцевРаботы));
			ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел2_1,"П000040002003", Окр(ЧисленностьЖенщинНаУСН / КоличествоМесяцевРаботы)); // в т.ч. женщин
			ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел2_1,"П000040003003", ВыплатыРаботникам_УСН);
			ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел2_1,"П000050006003", РасходыПоСтрахованию_УСН);
			
			// Раздел II (табл 6)
			
			Для каждого КлючИЗначение Из ДанныеОРасходах Цикл
				ИмяКолонки = КлючИЗначение.Ключ;
				ПозицияРазделителя = Найти(ИмяКолонки,"_");
				Если ПозицияРазделителя > 0 Тогда
					СпецРежим = Сред(ИмяКолонки,ПозицияРазделителя + 1);
					ИмяПоказателя = Лев(ИмяКолонки,13);
					Если СпецРежим = "УСН" Тогда
						ОпределитьСтрокуВДеревеДанныхДляЗаполнения(УзелРаздел2_2, ИмяПоказателя, КлючИЗначение.Значение);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ДеревоПоказателей;
	
КонецФункции // ЗначенияПоказателей_4ФСС_2007Кв3()


// Возвращает значения показателей отчета Расчет по авансовым платежам по взносам в ПФР 
// для формы образца 2005 года, вычисленные по данным ИБ
//
// Параметры:
//  ПараметрыОтчета - структура, содержащая значения ключевых реквизитов заполняемого отчета. 
//		Структура содержит, как минимум, следующее:
//			Организация, тип СправочникСсылка.Организации
//			ДатаНачалаПериода, тип Дата
//			ДатаОкончанияПериода, тип Дата
//			ДатаПодписи, тип Дата
//			Периодичность, тип ПеречислениеСсылка.Периодичность
//
// Возвращаемое значение:
//	ДеревоЗначений с колонками «Имя" и «Значение"
//
Функция ЗначенияПоказателей_4аФСС_2007Кв1(ПараметрыОтчета)
	
	ДеревоПоказателей = Новый ДеревоЗначений;
	ДеревоПоказателей.Колонки.Добавить("Имя");
	ДеревоПоказателей.Колонки.Добавить("Значение");
	
	//ПустоеДерево = ДеревоПоказателей.Скопировать();
	ПустоеДерево = Неопределено;
	
	ДатаКонцаПериодаОтчета = ПараметрыОтчета.ДатаОкончанияПериода;
	Организация = ПараметрыОтчета.Организация;
	ТочностьЕдиницыИзмерения = 2;
	Если ПараметрыОтчета.Свойство("ТочностьЕдиницыИзмерения",ТочностьЕдиницыИзмерения) = Неопределено Тогда
		ТочностьЕдиницыИзмерения = 2;
	КонецЕсли;
	ЕдиницаИзмерения = Перечисления.ПорядкиОкругленияОтчетности.ПустаяСсылка();
	Если ПараметрыОтчета.Свойство("ЕдиницаИзмерения",ЕдиницаИзмерения) = Неопределено Тогда
		ЕдиницаИзмерения = Перечисления.ПорядкиОкругленияОтчетности.ПустаяСсылка();
	КонецЕсли;
	Делитель = ПреобразоватьЕдиницуИзмеренияВЧисло(ЕдиницаИзмерения);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("парамОрганизация",              Организация);
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация",      ОбщегоНазначения.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("парамКонецОтчетногоПериода",    КонецДня(ДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("парамНачалоГода",               НачалоГода(ДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("Месяц1",                        Месяц(ДатаКонцаПериодаОтчета) - 2);
	Запрос.УстановитьПараметр("Месяц2",                        Месяц(ДатаКонцаПериодаОтчета) - 1);
	Запрос.УстановитьПараметр("Месяц3",                        Месяц(ДатаКонцаПериодаОтчета));
	
	// ----------------------------------------------------------------------------------
	// ТЕКСТЫ ЗАПРОСОВ
	
	// конец месяца налогового периода
	КонецМесяца = КонецМесяца(НачалоГода(ДатаКонцаПериодаОтчета));
	
	// первый месяц
	ПериодыТекст = "ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ")КАК Период ПОМЕСТИТЬ ВТПериоды";
	// прибавим остальные месяцы
	Для Сч = 2 По Месяц(ДатаКонцаПериодаОтчета) Цикл
		КонецМесяца = КонецМесяца(КонецМесяца+1);
		ПериодыТекст = ПериодыТекст +" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ")";
	КонецЦикла;
	Запрос.Текст = ПериодыТекст;
	
	МассивЗапросов = Новый Массив;
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Запрос.Выполнить();
	
	
	// УчетнаяПолитикаНалоговыйУчет
	// Таблица УчетнаяПолитикаНалоговыйУчет - это список периодов, когда организация переходила на УСН
	УчетнаяПолитикаНалоговыйУчетТекст = 
	"ВЫБРАТЬ
	|	МЕСЯЦ(Периоды.Период) КАК Месяц,
	|	""поле УСН"" КАК УСН,
	|	ЕСТЬNULL(УчетнаяПолитикаНалоговыйУчет.УплачиватьДобровольныеВзносыВФСС, ЛОЖЬ) КАК УплачиватьДобровольныеВзносыВФСС
	|ПОМЕСТИТЬ ВТУчетнаяПолитикаНалоговыйУчет
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период КАК Период,
	|		МАКСИМУМ(УчетнаяПолитикаНалоговыйУчет.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВТПериоды КАК Периоды
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаНалоговыйУчет
	|			ПО Периоды.Период >= УчетнаяПолитикаНалоговыйУчет.Период
	|				И (УчетнаяПолитикаНалоговыйУчет.Организация = &парамГоловнаяОрганизация)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период) КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаНалоговыйУчет
	|		ПО Периоды.ПериодРегистра = УчетнаяПолитикаНалоговыйУчет.Период
	|			И (УчетнаяПолитикаНалоговыйУчет.Организация = &парамГоловнаяОрганизация)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Месяц";	
	Запрос.Текст = ЗаполнениеРегламентированнойОтчетностиПереопределяемый.УстановитьНазваниеРегистраУчетнойПолитикиСтраховыхВзносов(СтрЗаменить(УчетнаяПолитикаНалоговыйУчетТекст, """поле УСН""", ЗаполнениеРегламентированнойОтчетностиПереопределяемый.ТекстПоляУСН4аФСС()));
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	
	// НалоговыеБазыПоМесяцам 
	
	НалоговыеБазыПоМесяцам = 
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСННачисления.ФизЛицо) КАК П000010001003,
	|	СУММА(ВЫБОР
	|			КОГДА УчетнаяПолитикаНалоговыйУчет.УСН
	|					ИЛИ ЕСННачисления.ОблагаетсяЕНВД
	|				ТОГДА ЕСННачисления.Доход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010002003,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСННачисления.Месяц = &Месяц1
	|					И (УчетнаяПолитикаНалоговыйУчет.УСН
	|						ИЛИ ЕСННачисления.ОблагаетсяЕНВД)
	|				ТОГДА ЕСННачисления.Доход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010004003,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСННачисления.Месяц = &Месяц2
	|					И (УчетнаяПолитикаНалоговыйУчет.УСН
	|						ИЛИ ЕСННачисления.ОблагаетсяЕНВД)
	|				ТОГДА ЕСННачисления.Доход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010005003,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСННачисления.Месяц = &Месяц3
	|					И (УчетнаяПолитикаНалоговыйУчет.УСН
	|						ИЛИ ЕСННачисления.ОблагаетсяЕНВД)
	|				ТОГДА ЕСННачисления.Доход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010006003
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЕСНСведенияОДоходах.ФизЛицо КАК ФизЛицо,
	|		МЕСЯЦ(ЕСНСведенияОДоходах.Период) КАК Месяц,
	|		ЕСНСведенияОДоходах.Результат - ЕСНСведенияОДоходах.Скидка КАК Доход,
	|		ЕСНСведенияОДоходах.ОблагаетсяЕНВД
	|	ИЗ
	|		РегистрНакопления.ЕСНСведенияОДоходах КАК ЕСНСведенияОДоходах
	|	ГДЕ
	|		ЕСНСведенияОДоходах.Период МЕЖДУ &парамНачалоГода И &парамКонецОтчетногоПериода
	|		И ЕСНСведенияОДоходах.Организация = &парамГоловнаяОрганизация
	|		И ЕСНСведенияОДоходах.ОбособленноеПодразделение = &парамОрганизация
	|		И ЕСНСведенияОДоходах.КодДоходаЕСН.ВходитВБазуФСС) КАК ЕСННачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНалоговыйУчет
	|		ПО ЕСННачисления.Месяц = УчетнаяПолитикаНалоговыйУчет.Месяц
	|ГДЕ
	|	УчетнаяПолитикаНалоговыйУчет.УплачиватьДобровольныеВзносыВФСС";
	
	Раздел1 = ОпределитьСтрокуВДеревеДанныхДляЗаполнения(ДеревоПоказателей, "Раздел1");
	
	// Таблица 1
	
	
	НалоговыеБазыПоМесяцам = ЗаполнениеРегламентированнойОтчетностиПереопределяемый.УстановитьНазваниеРегистраУчетнойПолитикиСтраховыхВзносов(НалоговыеБазыПоМесяцам);
	Запрос.Текст = НалоговыеБазыПоМесяцам;
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Результат = Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	
	ВывестиРезультатЗапросаВДеревоПоказателей(Раздел1, Результат);
	
	// Таблица 2
	
	РасходыПоПособиям = 
	"ВЫБРАТЬ
	|	СУММА(ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот) КАК П000020009003,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ МЕСЯЦ(ПособияСоциальномуСтрахованиюОбороты.Период) В (&Месяц1, &Месяц2, &Месяц3))
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020009101,
	|	СУММА(ВЫБОР
	|			КОГДА МЕСЯЦ(ПособияСоциальномуСтрахованиюОбороты.Период) = &Месяц1
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020009301,
	|	СУММА(ВЫБОР
	|			КОГДА МЕСЯЦ(ПособияСоциальномуСтрахованиюОбороты.Период) = &Месяц2
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020009401,
	|	СУММА(ВЫБОР
	|			КОГДА МЕСЯЦ(ПособияСоциальномуСтрахованиюОбороты.Период) = &Месяц3
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020009501,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СуммаВсегоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020010003,
	|	СУММА(ПособияСоциальномуСтрахованиюОбороты.СуммаСверхНормОборот) КАК П000020011003,
	|	СУММА(ПособияСоциальномуСтрахованиюОбороты.СтраховыеСлучаиОборот) КАК П000020014000,
	|	СУММА(ПособияСоциальномуСтрахованиюОбороты.ОплаченныеДниОборот) КАК П000020015000,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.СтраховыеСлучаиОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020016000,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованиюОбороты.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				ТОГДА ПособияСоциальномуСтрахованиюОбороты.ОплаченныеДниОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000020017000
	|ИЗ
	|	РегистрНакопления.ПособияСоциальномуСтрахованию.Обороты(
	|			&парамНачалоГода,
	|			&парамКонецОтчетногоПериода,
	|			Месяц,
	|			Организация = &парамОрганизация
	|				И ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)) КАК ПособияСоциальномуСтрахованиюОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНалоговыйУчет
	|		ПО (МЕСЯЦ(ПособияСоциальномуСтрахованиюОбороты.Период) = УчетнаяПолитикаНалоговыйУчет.Месяц)
	|ГДЕ
	|	(ПособияСоциальномуСтрахованиюОбороты.ОблагаетсяЕНВД
	|			ИЛИ УчетнаяПолитикаНалоговыйУчет.УСН)
	|	И УчетнаяПолитикаНалоговыйУчет.УплачиватьДобровольныеВзносыВФСС";
	
	Запрос.Текст = ЗаполнениеРегламентированнойОтчетностиПереопределяемый.УстановитьНазваниеРегистраУчетнойПолитикиСтраховыхВзносов(РасходыПоПособиям);
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Результат = Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	
	ВывестиРезультатЗапросаВДеревоПоказателей(Раздел1, Результат);
	
	// расчеты с Фондом
	
	Запрос.Текст = ЗаполнениеРегламентированнойОтчетностиПереопределяемый.ТекстПроводок4аФСС();
	#Если Клиент тогда
		ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Результат = Запрос.Выполнить();
	Исключение
		#Если Клиент тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	
	ВывестиРезультатЗапросаВДеревоПоказателей(Раздел1, Результат);
	ИДКонфигурации = РегламентированнаяОтчетность.ИДКонфигурации();
	Если ИДКонфигурации = "БП" ИЛИ ИДКонфигурации = "БПКОРП" ИЛИ ИДКонфигурации = "БАУКОРП" ИЛИ ИДКонфигурации = "БАУ" Тогда
		//НалоговыеБазыПоМесяцам = 
		//"ВЫБРАТЬ
		//|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСННачисления.ФизЛицо) КАК П000010001003," + НалоговыеБазыПоМесяцам;
		
		Запрос.Текст = НалоговыеБазыПоМесяцам;
		Результат = Запрос.Выполнить();
		ВывестиРезультатЗапросаВДеревоПоказателей(Раздел1, Результат);
	Иначе 
		Запрос.Текст = ЗаполнениеРегламентированнойОтчетностиПереопределяемый.УстановитьНазваниеРегистраУчетнойПолитикиСтраховыхВзносов(
		"ВЫБРАТЬ
		|	УчетнаяПолитикаНалоговыйУчет.Месяц
		|ИЗ
		|	ВТУчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНалоговыйУчет
		|ГДЕ
		|	УчетнаяПолитикаНалоговыйУчет.УСН");	
		
		СписокМесяцевУСН = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Месяц");
		// расчет среднесписочной численности
		ЧисленностьРаботниковНаСпецрежимах = 0;
		Отчет = Отчеты.СредняяЧисленностьРаботниковОрганизаций.Создать();
		ТаблицаСреднесписочныхЧисленостей = Отчет.ПолучитьТаблицуЧисленностей(Организация, НачалоГода(ДатаКонцаПериодаОтчета), ДатаКонцаПериодаОтчета);
		Если ТаблицаСреднесписочныхЧисленостей.Количество() > 0 Тогда
			КоличествоМесяцевРаботы = ТаблицаСреднесписочныхЧисленостей.Количество();
			Для каждого СтрокаМесяца из ТаблицаСреднесписочныхЧисленостей Цикл
				ЭтоМесяцУСН = СписокМесяцевУСН.Найти(Месяц(СтрокаМесяца.МесяцОтчета)) <> Неопределено;
				ЧисленностьРаботниковНаСпецрежимах = ЧисленностьРаботниковНаСпецрежимах + ?(ЭтоМесяцУСН,Окр(СтрокаМесяца.СредняяЧисленность),Окр(СтрокаМесяца.СредняяЧисленностьЕНВД));
			КонецЦикла;
			ОпределитьСтрокуВДеревеДанныхДляЗаполнения(Раздел1,"П000010001003", Окр(ЧисленностьРаботниковНаСпецрежимах / КоличествоМесяцевРаботы));
		КонецЕсли;
	КонецЕсли;
	Возврат ДеревоПоказателей;
	
КонецФункции // ЗначенияПоказателей_4аФСС_2007Кв1()

#Если Клиент тогда
	
	////////////////////////////////////////////////////////////////////////////////
	// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ РАСШИФРОВКИ
	
	// Открывает отчет расшифровку для формы отчета за 2007 год
	// 
	// Параметры
	//    ФормаОтчета - ссылка на форму отчета
	//    Отчет - отчет объект, который расшифровывается
	//
	Процедура Расшифровать4аФССза2007(Отчет, Форма)
		
		Если Форма.ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Раздел1" тогда
			ТекущаяОбласть = Форма.ЭлементыФормы.ПолеТабличногоДокументаРаздел1.ТекущаяОбласть;
		ИначеЕсли Форма.ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Раздел2" тогда
			ТекущаяОбласть = Форма.ЭлементыФормы.ПолеТабличногоДокументаРаздел2.ТекущаяОбласть;
		ИначеЕсли Форма.ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Раздел21" тогда
			ТекущаяОбласть = Форма.ЭлементыФормы.ПолеТабличногоДокументаРаздел21.ТекущаяОбласть;
		КонецЕсли;
		Если ТекущаяОбласть <> Неопределено тогда
			ИмяЯчейки = ТекущаяОбласть.Имя;
		Иначе
			Предупреждение("Не выбрана ячейка для расшифровки!");
			Возврат;
		КонецЕсли;
		
		Если ИмяЯчейки = "П000010001003" тогда // Расшифровка средней числености
			ОтчетОбъект = Отчеты.СредняяЧисленностьРаботниковОрганизаций.Создать();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода", КонецДня(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "МесяцОтчета");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Дата");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "СредняяЧисленностьНеЕНВД");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "МесяцОтчета");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Физлицо");
			ЗнПараметрЗаголовок = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗнПараметрЗаголовок.Значение = "Расшифровка отчета 4а-ФСС";
			
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000010002003" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", "База ФСС", ВидСравненияКомпоновкиДанных.Равно);
			ГруппаИли = ОтчетОбъект.КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
			ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
			ТиповыеОтчеты.ДобавитьОтбор(ГруппаИли, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ГруппаИли, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ДобровольныеВзносыВФСС", истина, ВидСравненияКомпоновкиДанных.Равно);
			
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода",        НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",         КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Пояснение");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Физлицо");
			ЗнПараметрЗаголовок = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗнПараметрЗаголовок.Значение = "Расшифровка отчета 4а-ФСС";
			
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000010003003" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", "База ФСС", ВидСравненияКомпоновкиДанных.Равно);
			ГруппаИли = ОтчетОбъект.КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
			ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
			ТиповыеОтчеты.ДобавитьОтбор(ГруппаИли, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ГруппаИли, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ДобровольныеВзносыВФСС", истина, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода",        НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",         КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Пояснение");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Физлицо");
			ЗнПараметрЗаголовок = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗнПараметрЗаголовок.Значение = "Расшифровка отчета 4а-ФСС";
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000010004003" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", "База ФСС", ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ДобровольныеВзносыВФСС", истина, ВидСравненияКомпоновкиДанных.Равно);
			ГруппаИли = ОтчетОбъект.КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
			ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
			ТиповыеОтчеты.ДобавитьОтбор(ГруппаИли, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ГруппаИли, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода",        НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",         КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета)));
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Пояснение");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Физлицо");
			ЗнПараметрЗаголовок = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗнПараметрЗаголовок.Значение = "Расшифровка отчета 4а-ФСС";
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000010005003" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", "База ФСС", ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ДобровольныеВзносыВФСС", истина, ВидСравненияКомпоновкиДанных.Равно);
			ГруппаИли = ОтчетОбъект.КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
			ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
			ТиповыеОтчеты.ДобавитьОтбор(ГруппаИли, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ГруппаИли, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода",        КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета))+1);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",         НачалоМесяца(Отчет.мДатаКонцаПериодаОтчета)-1);
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Пояснение");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Физлицо");
			ЗнПараметрЗаголовок = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗнПараметрЗаголовок.Значение = "Расшифровка отчета 4а-ФСС";
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000010006003" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", "База ФСС", ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ДобровольныеВзносыВФСС", истина, ВидСравненияКомпоновкиДанных.Равно);
			ГруппаИли = ОтчетОбъект.КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
			ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
			ТиповыеОтчеты.ДобавитьОтбор(ГруппаИли, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ГруппаИли, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода",        НачалоМесяца(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",         КонецМесяца(Отчет.мДатаКонцаПериодаОтчета));
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Пояснение");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Физлицо");
			ЗнПараметрЗаголовок = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗнПараметрЗаголовок.Значение = "Расшифровка отчета 4а-ФСС";
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000020009101" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();                   
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия", ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "БЛ", истина, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ДобровольныеВзносыВФСС", истина, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета)-1);
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Пояснение");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Физлицо");
			ЗнПараметрЗаголовок = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗнПараметрЗаголовок.Значение = "Расшифровка отчета 4а-ФСС";
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000020009201" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();                   
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия", ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ДобровольныеВзносыВФСС", истина, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "БЛ", истина, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Пояснение");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Физлицо");
			ЗнПараметрЗаголовок = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗнПараметрЗаголовок.Значение = "Расшифровка отчета 4а-ФСС";
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000020009301" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();                   
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия", ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ДобровольныеВзносыВФСС", истина, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "БЛ", истина, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета)));
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Пояснение");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Физлицо");
			ЗнПараметрЗаголовок = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗнПараметрЗаголовок.Значение = "Расшифровка отчета 4а-ФСС";
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000020009401" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();                   
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия", ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ДобровольныеВзносыВФСС", истина, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "БЛ", истина, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета))+1);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  НачалоМесяца(Отчет.мДатаКонцаПериодаОтчета)-1);
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Пояснение");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Физлицо");
			ЗнПараметрЗаголовок = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗнПараметрЗаголовок.Значение = "Расшифровка отчета 4а-ФСС";
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000020009501" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();                   
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия", ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ДобровольныеВзносыВФСС", истина, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "БЛ", истина, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоМесяца(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  Отчет.мДатаКонцаПериодаОтчета);
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Пояснение");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Физлицо");
			ЗнПараметрЗаголовок = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗнПараметрЗаголовок.Значение = "Расшифровка отчета 4а-ФСС";
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000020009003" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();                   
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия", ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ДобровольныеВзносыВФСС", истина, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "БЛ", истина, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  Отчет.мДатаКонцаПериодаОтчета);
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Пояснение");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Физлицо");
			ЗнПараметрЗаголовок = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗнПараметрЗаголовок.Значение = "Расшифровка отчета 4а-ФСС";
			ФормаОтчета.ОбновитьОтчет();
		Иначе
			Предупреждение("Расшифровка данной ячейки не поддерживается.");
		КонецЕсли;
	КонецПроцедуры
	
	// Открывает отчет расшифровку для формы отчета за 2007 год
	// 
	// Параметры
	//    ФормаОтчета - ссылка на форму отчета
	//    Отчет - отчет объект, который расшифровывается
	//
	Процедура Расшифровать4ФССза2007_2009(Отчет, Форма)
		
		НомерАктивнойСтраницы = -1;
		
		СтраницыРаздела = Неопределено;
		Если Форма.ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Раздел1_1" тогда
			ТекущаяОбласть = Форма.ЭлементыФормы.ПолеТабличногоДокументаРаздел1_1.ТекущаяОбласть;
		ИначеЕсли Форма.ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Раздел1_2" тогда
			ТекущаяОбласть = Форма.ЭлементыФормы.ПолеТабличногоДокументаРаздел1_2.ТекущаяОбласть;
		ИначеЕсли Форма.ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Раздел2_1" тогда
			ТекущаяОбласть = Форма.ЭлементыФормы.ПолеТабличногоДокументаРаздел2_1.ТекущаяОбласть;
			Если Форма.мСтруктураМногостраничныхРазделов.Свойство("Раздел2_1", СтраницыРаздела) тогда
				СтрокаАктивнойСтраницы = СтраницыРаздела.Найти(истина, "АктивнаяСтраница");
				Если СтрокаАктивнойСтраницы <> Неопределено тогда
					НомерАктивнойСтраницы = СтраницыРаздела.Индекс(СтрокаАктивнойСтраницы);
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли Форма.ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Раздел2_2" тогда
			ТекущаяОбласть = Форма.ЭлементыФормы.ПолеТабличногоДокументаРаздел2_2.ТекущаяОбласть;
			Если Форма.мСтруктураМногостраничныхРазделов.Свойство("Раздел2_2", СтраницыРаздела) тогда
				СтрокаАктивнойСтраницы = СтраницыРаздела.Найти(истина, "АктивнаяСтраница");
				Если СтрокаАктивнойСтраницы <> Неопределено тогда
					НомерАктивнойСтраницы = СтраницыРаздела.Индекс(СтрокаАктивнойСтраницы);
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли Форма.ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Раздел2_3" тогда
			ТекущаяОбласть = Форма.ЭлементыФормы.ПолеТабличногоДокументаРаздел2_3.ТекущаяОбласть;
		ИначеЕсли Форма.ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Раздел2_4" тогда
			ТекущаяОбласть = Форма.ЭлементыФормы.ПолеТабличногоДокументаРаздел2_4.ТекущаяОбласть;
		ИначеЕсли Форма.ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Раздел3_1" тогда
			ТекущаяОбласть = Форма.ЭлементыФормы.ПолеТабличногоДокументаРаздел3_1.ТекущаяОбласть;
		ИначеЕсли Форма.ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Раздел3_2" тогда
			ТекущаяОбласть = Форма.ЭлементыФормы.ПолеТабличногоДокументаРаздел3_2.ТекущаяОбласть;
		КонецЕсли;
		Если ТекущаяОбласть <> Неопределено тогда
			ИмяЯчейки = ТекущаяОбласть.Имя;
		Иначе
			Предупреждение("Не выбрана ячейка для расшифровки!");
			Возврат;
		КонецЕсли;
		
		// Проверим какой режим налогового учета установлен
		
		ТЗ = ЗаполнениеРегламентированнойОтчетностиПереопределяемый.ТекстЗапросаУСНдляРасшифровки();
		
		Запрос = Новый Запрос(ТЗ);
		Запрос.УстановитьПараметр("Организация", Отчет.Организация);
		Запрос.УстановитьПараметр("НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
		Запрос.УстановитьПараметр("КонецПериода", Отчет.мДатаКонцаПериодаОтчета);
		РежимУСН = НЕ Запрос.Выполнить().Пустой();
		
		ТЗ = "ВЫБРАТЬ
		|	ЕСНОсновныеНачисления.ОбособленноеПодразделение
		|ИЗ
		|	РегистрНакопления.ЕСНСведенияОДоходах КАК ЕСНОсновныеНачисления
		|ГДЕ
		|	ЕСНОсновныеНачисления.ОбособленноеПодразделение = &Организация
		|	И ЕСНОсновныеНачисления.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|	И ЕСНОсновныеНачисления.ОблагаетсяЕНВД";
		
		Запрос = Новый Запрос(ТЗ);
		Запрос.УстановитьПараметр("Организация", Отчет.Организация);
		Запрос.УстановитьПараметр("НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
		Запрос.УстановитьПараметр("КонецПериода", Отчет.мДатаКонцаПериодаОтчета);
		РежимЕНВД = НЕ Запрос.Выполнить().Пустой();	
		
		
		// расшифровка таблицы 1
		Если Найти(ИмяЯчейки, "П0") = 0 тогда
			Предупреждение("Расшифровка данной ячейки не поддерживается.");
			Возврат;
		КонецЕсли;
		
		НомерТаблицы        = Число(Сред(ИмяЯчейки,2,5));
		НомерСтроки         = Число(Сред(ИмяЯчейки,7,4));
		НомерКолонки        = Число(Сред(ИмяЯчейки,12,2));
		НомерСтрокиВКолонке = Число(Сред(ИмяЯчейки,11,1));
		
		Если ИмяЯчейки = "П000010001003"  тогда // Расшифровка средней числености
			ОтчетОбъект = Отчеты.СредняяЧисленностьРаботниковОрганизаций.Создать();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация, ВидСравненияКомпоновкиДанных.Равно);
			//ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", ложь, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода", КонецДня(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "МесяцОтчета");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Дата");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "СредняяЧисленностьНеЕНВД");
			ТиповыеОтчеты.ОткрытьФормуРасшифровки(ОтчетОбъект, ЗаголовокОтчета);
			
		ИначеЕсли ИмяЯчейки = "П000010002003"  тогда
			ОтчетОбъект = Отчеты.СредняяЧисленностьРаботниковОрганизаций.Создать();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация, ВидСравненияКомпоновкиДанных.Равно);
			//ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", ложь, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода", КонецДня(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "МесяцОтчета");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Дата");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "СредняяЧисленностьЖенщинНеЕНВД");
			ТиповыеОтчеты.ОткрытьФормуРасшифровки(ОтчетОбъект, ЗаголовокОтчета);
			
		ИначеЕсли ИмяЯчейки = "П000010003003" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", "База ФСС", ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", ложь, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода",        НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",         КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ФормаОтчета.ОбновитьОтчет();
		ИначеЕсли ИмяЯчейки = "П000010004003" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", "Льгота ФСС", ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода",        НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",         КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ФормаОтчета.ОбновитьОтчет();
			
			// расшифровка таблицы 2
		ИначеЕсли ИмяЯчейки = "П000020003201" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", "Налог ФСС", ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", ложь, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
			
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета)-1);
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Пояснение");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Физлицо");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000020003301"тогда
			ДатаМесяца  = ДобавитьМесяц(Отчет.мДатаКонцаПериодаОтчета,-2);
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,   ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", "Налог ФСС", ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", ложь, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода",         НачалоКвартала(ДатаМесяца));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",          КонецКвартала(ДатаМесяца));
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Пояснение");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Физлицо");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000020003501" тогда
			ДатаМесяца  = ДобавитьМесяц(Отчет.мДатаКонцаПериодаОтчета,-1);
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,   ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", "Налог ФСС", ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", ложь, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода",         НачалоМесяца(ДатаМесяца));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",          КонецМесяца(ДатаМесяца));
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Пояснение");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Физлицо");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000020003601" тогда
			ДатаМесяца  = Отчет.мДатаКонцаПериодаОтчета;
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,   ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", "Налог ФСС", ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", ложь, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода",         НачалоМесяца(ДатаМесяца));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",          КонецМесяца(ДатаМесяца));
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Пояснение");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Физлицо");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000020003401" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,   ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", "Налог ФСС", ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", ложь, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода",         НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",          КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета)));
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Пояснение");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Физлицо");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000020003003" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", "Налог ФСС", ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", ложь, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
			//ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ДобровольныеВзносыВФСС", ложь, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Пояснение");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Физлицо");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000020015201" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			СписокЗначение = Новый СписокЗначений;
			СписокЗначение.Добавить("Всего сумма пособия (раздел 1)");
			СписокЗначение.Добавить("Всего сумма пособия");
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", СписокЗначение, ВидСравненияКомпоновкиДанных.ВСписке);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", ложь, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ДобровольныеВзносыВФСС", ложь, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета)-1);
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Пояснение");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Физлицо");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000020015301" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			СписокЗначение = Новый СписокЗначений;
			СписокЗначение.Добавить("Всего сумма пособия (раздел 1)");
			СписокЗначение.Добавить("Всего сумма пособия");
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", СписокЗначение, ВидСравненияКомпоновкиДанных.ВСписке);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", ложь, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ДобровольныеВзносыВФСС", ложь, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Пояснение");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Физлицо");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000020015401" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			СписокЗначение = Новый СписокЗначений;
			СписокЗначение.Добавить("Всего сумма пособия (раздел 1)");
			СписокЗначение.Добавить("Всего сумма пособия");
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", СписокЗначение, ВидСравненияКомпоновкиДанных.ВСписке);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", ложь, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ДобровольныеВзносыВФСС", ложь, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета)));
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Пояснение");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Физлицо");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000020015501" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			СписокЗначение = Новый СписокЗначений;
			СписокЗначение.Добавить("Всего сумма пособия (раздел 1)");
			СписокЗначение.Добавить("Всего сумма пособия");
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", СписокЗначение, ВидСравненияКомпоновкиДанных.ВСписке);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", ложь, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ДобровольныеВзносыВФСС", ложь, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета))+1);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  НачалоМесяца(Отчет.мДатаКонцаПериодаОтчета)-1);
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Пояснение");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Физлицо");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000020015601" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			СписокЗначение = Новый СписокЗначений;
			СписокЗначение.Добавить("Всего сумма пособия (раздел 1)");
			СписокЗначение.Добавить("Всего сумма пособия");
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", СписокЗначение, ВидСравненияКомпоновкиДанных.ВСписке);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", ложь, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ДобровольныеВзносыВФСС", ложь, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоМесяца(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецМесяца(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Пояснение");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Физлицо");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000020015003" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			СписокЗначение = Новый СписокЗначений;
			СписокЗначение.Добавить("Всего сумма пособия (раздел 1)");
			СписокЗначение.Добавить("Всего сумма пособия");
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", СписокЗначение, ВидСравненияКомпоновкиДанных.ВСписке);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", ложь, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ДобровольныеВзносыВФСС", ложь, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Пояснение");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Физлицо");
			ФормаОтчета.ОбновитьОтчет();
			
			//расшифровка таблицы 3
			
			// Пособия по социальному страхованию раздел 1 таблица 3,6
			// Расшифровка колонки: Количество страховых случаев 1
			
		ИначеЕсли ИмяЯчейки = "П000030001001" или ИмяЯчейки = "П000060001001" тогда
			
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", Перечисления.ВидыПособийСоциальногоСтрахования.Нетрудоспособность, ВидСравненияКомпоновкиДанных.Равно);
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ДобровольныеВзносыВФСС", ложь, ВидСравненияКомпоновкиДанных.Равно);
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего страховых случаев", ВидСравненияКомпоновкиДанных.Равно);
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего страховых случаев (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Страховых случаев");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ДокументОснование");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000030002001" или ИмяЯчейки = "П000060002001" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", Перечисления.ВидыПособийСоциальногоСтрахования.Нетрудоспособность, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидЗанятости", Перечисления.ВидыЗанятостиВОрганизации.Совместительство, ВидСравненияКомпоновкиДанных.Равно);
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего страховых случаев", ВидСравненияКомпоновкиДанных.Равно);
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ДобровольныеВзносыВФСС", ложь, ВидСравненияКомпоновкиДанных.Равно);
				
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего страховых случаев (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Страховых случаев");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ДокументОснование");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000030003001" или ИмяЯчейки = "П000060003001" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", Перечисления.ВидыПособийСоциальногоСтрахования.БеременностьРоды, ВидСравненияКомпоновкиДанных.Равно);
			//ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидЗанятости", Перечисления.ВидыЗанятостиВОрганизации.Совместительство, ВидСравненияКомпоновкиДанных.Равно);
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего страховых случаев", ВидСравненияКомпоновкиДанных.Равно);
				
				
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего страховых случаев (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Страховых случаев");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ДокументОснование");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000030004001" или ИмяЯчейки = "П000060004001" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", Перечисления.ВидыПособийСоциальногоСтрахования.БеременностьРоды, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидЗанятости", Перечисления.ВидыЗанятостиВОрганизации.Совместительство, ВидСравненияКомпоновкиДанных.Равно);
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего страховых случаев", ВидСравненияКомпоновкиДанных.Равно);
				
				
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего страховых случаев (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Страховых случаев");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ДокументОснование");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000030005001" или ИмяЯчейки = "П000060005001" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", Перечисления.ВидыПособийСоциальногоСтрахования.ПоУходуЗаРебенкомДоПолутораЛет, ВидСравненияКомпоновкиДанных.Равно);
			//		ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидЗанятости", Перечисления.ВидыЗанятостиВОрганизации.Совместительство, ВидСравненияКомпоновкиДанных.Равно);
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Количество получателей", ВидСравненияКомпоновкиДанных.Равно);
				
				
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Количество получателей (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			//ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Количество получателей");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000030006001" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", Перечисления.ВидыПособийСоциальногоСтрахования.ПоУходуЗаРебенкомДоПолутораЛет, ВидСравненияКомпоновкиДанных.Равно);
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Количество получателей", ВидСравненияКомпоновкиДанных.Равно);
				
				
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Количество получателей (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			//ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Количество получателей");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000030007001" или ИмяЯчейки = "П000060006001" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", Перечисления.ВидыПособийСоциальногоСтрахования.ПоУходуЗаРебенкомДоПолутораЛет, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УходЗаПервымРебенком", истина, ВидСравненияКомпоновкиДанных.Равно);
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Количество получателей", ВидСравненияКомпоновкиДанных.Равно);
				
				
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Количество получателей (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			//ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Количество получателей");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000030008001" или ИмяЯчейки = "П000060007001" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", Перечисления.ВидыПособийСоциальногоСтрахования.ПоУходуЗаРебенкомДоПолутораЛет, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УходЗаПервымРебенком", ложь, ВидСравненияКомпоновкиДанных.Равно);
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Количество получателей", ВидСравненияКомпоновкиДанных.Равно);
				
				
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Количество получателей (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			//ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Количество получателей");
			ФормаОтчета.ОбновитьОтчет();
			
			// Расшифровка колонки: "Количество дней, выплат пособий, путевок" (3)
			//	
		ИначеЕсли ИмяЯчейки = "П000030001003" или ИмяЯчейки = "П000060001003" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", Перечисления.ВидыПособийСоциальногоСтрахования.Нетрудоспособность, ВидСравненияКомпоновкиДанных.Равно);
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Оплачено дней пособия", ВидСравненияКомпоновкиДанных.Равно);
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ДобровольныеВзносыВФСС", ложь, ВидСравненияКомпоновкиДанных.Равно);
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Оплачено дней пособия (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Кол-во дней");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ДокументОснование");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000030002003" или ИмяЯчейки = "П000060002003" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", Перечисления.ВидыПособийСоциальногоСтрахования.Нетрудоспособность, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидЗанятости", Перечисления.ВидыЗанятостиВОрганизации.Совместительство, ВидСравненияКомпоновкиДанных.Равно);
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Оплачено дней пособия", ВидСравненияКомпоновкиДанных.Равно);
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ДобровольныеВзносыВФСС", ложь, ВидСравненияКомпоновкиДанных.Равно);
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Оплачено дней пособия (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Кол-во дней");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ДокументОснование");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000030003003" или ИмяЯчейки = "П000060003003" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", Перечисления.ВидыПособийСоциальногоСтрахования.БеременностьРоды, ВидСравненияКомпоновкиДанных.Равно);
			//ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидЗанятости", Перечисления.ВидыЗанятостиВОрганизации.Совместительство, ВидСравненияКомпоновкиДанных.Равно);
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Оплачено дней пособия", ВидСравненияКомпоновкиДанных.Равно);
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Оплачено дней пособия (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Кол-во дней");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ДокументОснование");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000030004003" или ИмяЯчейки = "П000060004003" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", Перечисления.ВидыПособийСоциальногоСтрахования.БеременностьРоды, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидЗанятости", Перечисления.ВидыЗанятостиВОрганизации.Совместительство, ВидСравненияКомпоновкиДанных.Равно);
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Оплачено дней пособия", ВидСравненияКомпоновкиДанных.Равно);
				
				
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Оплачено дней пособия (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Кол-во дней");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ДокументОснование");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000030005003" или ИмяЯчейки = "П000060005003" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", Перечисления.ВидыПособийСоциальногоСтрахования.ПоУходуЗаРебенкомДоПолутораЛет, ВидСравненияКомпоновкиДанных.Равно);
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Количество выплат пособий", ВидСравненияКомпоновкиДанных.Равно);
				
				
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Количество выплат пособий (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Кол-во дней");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ДокументОснование");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000030006003" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", Перечисления.ВидыПособийСоциальногоСтрахования.ПоУходуЗаРебенкомДоПолутораЛет, ВидСравненияКомпоновкиДанных.Равно);
			//ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УходЗаПервымРебенком", истина, ВидСравненияКомпоновкиДанных.Равно);
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Количество выплат пособий", ВидСравненияКомпоновкиДанных.Равно);
				
				
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Количество выплат пособий (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Кол-во дней");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ДокументОснование");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000030007003" или ИмяЯчейки = "П000060006003" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", Перечисления.ВидыПособийСоциальногоСтрахования.ПоУходуЗаРебенкомДоПолутораЛет, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УходЗаПервымРебенком", истина, ВидСравненияКомпоновкиДанных.Равно);
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Количество выплат пособий", ВидСравненияКомпоновкиДанных.Равно);
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Количество выплат пособий (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Кол-во дней");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ДокументОснование");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000030008003" или ИмяЯчейки = "П000060007003" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", Перечисления.ВидыПособийСоциальногоСтрахования.ПоУходуЗаРебенкомДоПолутораЛет, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УходЗаПервымРебенком", ложь, ВидСравненияКомпоновкиДанных.Равно);
			
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Количество выплат пособий", ВидСравненияКомпоновкиДанных.Равно);
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Количество выплат пособий (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			
			
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Кол-во дней");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ДокументОснование");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000060009003" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", Перечисления.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью, ВидСравненияКомпоновкиДанных.Равно);
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Количество выплат пособий", ВидСравненияКомпоновкиДанных.Равно);
				
				
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Оплачено дней пособия (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Кол-во дней");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ДокументОснование");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000060010003" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", Перечисления.ВидыПособийСоциальногоСтрахования.ДополнительныеВыходныеДниПоУходуЗаДетьмиИнвалидами, ВидСравненияКомпоновкиДанных.Равно);
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Оплачено дней пособия", ВидСравненияКомпоновкиДанных.Равно);
				
				
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Оплачено дней пособия (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Кол-во дней");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ДокументОснование");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000060011003" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", Перечисления.ВидыПособийСоциальногоСтрахования.ПриПостановкеНаУчетВРанниеСрокиБеременности, ВидСравненияКомпоновкиДанных.Равно);
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Количество выплат пособий", ВидСравненияКомпоновкиДанных.Равно);
				
				
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Количество выплат пособий (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Кол-во дней");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ДокументОснование");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000060012003" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", Перечисления.ВидыПособийСоциальногоСтрахования.ПриУсыновленииРебенка, ВидСравненияКомпоновкиДанных.Равно);
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Количество выплат пособий", ВидСравненияКомпоновкиДанных.Равно);
				
				
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Количество выплат пособий (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Кол-во дней");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ДокументОснование");
			ФормаОтчета.ОбновитьОтчет();
		ИначеЕсли ИмяЯчейки = "П000030012003" или  ИмяЯчейки = "П000060008003" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", Перечисления.ВидыПособийСоциальногоСтрахования.ПриРожденииРебенка, ВидСравненияКомпоновкиДанных.Равно);
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Количество выплат пособий", ВидСравненияКомпоновкиДанных.Равно);
				
				
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Количество выплат пособий (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Кол-во дней");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ДокументОснование");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000030013003" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", Перечисления.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью, ВидСравненияКомпоновкиДанных.Равно);
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Количество выплат пособий", ВидСравненияКомпоновкиДанных.Равно);
				
				
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Количество выплат пособий (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Кол-во дней");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ДокументОснование");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000030014003" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", Перечисления.ВидыПособийСоциальногоСтрахования.ДополнительныеВыходныеДниПоУходуЗаДетьмиИнвалидами, ВидСравненияКомпоновкиДанных.Равно);
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Оплачено дней пособия", ВидСравненияКомпоновкиДанных.Равно);
				
				
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Оплачено дней пособия (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Кол-во дней");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ДокументОснование");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000030015003" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", Перечисления.ВидыПособийСоциальногоСтрахования.ПриПостановкеНаУчетВРанниеСрокиБеременности, ВидСравненияКомпоновкиДанных.Равно);
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Количество выплат пособий", ВидСравненияКомпоновкиДанных.Равно);
				
				
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Количество выплат пособий (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Кол-во дней");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ДокументОснование");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000030016003"тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", Перечисления.ВидыПособийСоциальногоСтрахования.ПриУсыновленииРебенка, ВидСравненияКомпоновкиДанных.Равно);
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Количество выплат пособий", ВидСравненияКомпоновкиДанных.Равно);
				
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Количество выплат пособий (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Кол-во дней");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ДокументОснование");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000030001004" или ИмяЯчейки = "П000060001004" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();                   
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", Перечисления.ВидыПособийСоциальногоСтрахования.Нетрудоспособность, ВидСравненияКомпоновкиДанных.Равно);
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия", ВидСравненияКомпоновкиДанных.Равно);
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ДобровольныеВзносыВФСС", ложь, ВидСравненияКомпоновкиДанных.Равно);
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ДокументОснование");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Сумма");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000030002004" или  ИмяЯчейки = "П000060002004" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", Перечисления.ВидыПособийСоциальногоСтрахования.Нетрудоспособность, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидЗанятости", Перечисления.ВидыЗанятостиВОрганизации.Совместительство, ВидСравненияКомпоновкиДанных.Равно);
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия", ВидСравненияКомпоновкиДанных.Равно);
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ДобровольныеВзносыВФСС", ложь, ВидСравненияКомпоновкиДанных.Равно);
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ДокументОснование");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Сумма");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000030003004" или ИмяЯчейки = "П000060003004" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", Перечисления.ВидыПособийСоциальногоСтрахования.БеременностьРоды, ВидСравненияКомпоновкиДанных.Равно);
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия", ВидСравненияКомпоновкиДанных.Равно);
				
				
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ДокументОснование");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Сумма");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000030004004" или ИмяЯчейки = "П000060004004" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", Перечисления.ВидыПособийСоциальногоСтрахования.БеременностьРоды, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидЗанятости", Перечисления.ВидыЗанятостиВОрганизации.Совместительство, ВидСравненияКомпоновкиДанных.Равно);
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия", ВидСравненияКомпоновкиДанных.Равно);
				Если РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				Иначе
					Если РежимУСН тогда
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ДокументОснование");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Сумма");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000030005004" или ИмяЯчейки = "П000060005004" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", Перечисления.ВидыПособийСоциальногоСтрахования.ПоУходуЗаРебенкомДоПолутораЛет, ВидСравненияКомпоновкиДанных.Равно);
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия", ВидСравненияКомпоновкиДанных.Равно);
				
				
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ДокументОснование");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Сумма");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000030006004" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", Перечисления.ВидыПособийСоциальногоСтрахования.ПоУходуЗаРебенкомДоПолутораЛет, ВидСравненияКомпоновкиДанных.Равно);
			//ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УходЗаПервымРебенком", истина, ВидСравненияКомпоновкиДанных.Равно);
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия", ВидСравненияКомпоновкиДанных.Равно);
				
				
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ДокументОснование");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Сумма");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000030007004" или ИмяЯчейки = "П000060006004" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация",          Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя",        Перечисления.ВидыПособийСоциальногоСтрахования.ПоУходуЗаРебенкомДоПолутораЛет, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УходЗаПервымРебенком", истина, ВидСравненияКомпоновкиДанных.Равно);
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия", ВидСравненияКомпоновкиДанных.Равно);
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ДокументОснование");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Сумма");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000030008004" или ИмяЯчейки = "П000060007004" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация",          Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УходЗаПервымРебенком", ложь, ВидСравненияКомпоновкиДанных.Равно);
			
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия", ВидСравненияКомпоновкиДанных.Равно);
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек,      "ВидПоказателя", Перечисления.ВидыПособийСоциальногоСтрахования.ПоУходуЗаРебенкомДоПолутораЛет, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ДокументОснование");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Сумма");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000060009004" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация",          Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя",        Перечисления.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью, ВидСравненияКомпоновкиДанных.Равно);
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия", ВидСравненияКомпоновкиДанных.Равно);
				
				
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ДокументОснование");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Сумма");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000060010004" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация",          Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя",        Перечисления.ВидыПособийСоциальногоСтрахования.ДополнительныеВыходныеДниПоУходуЗаДетьмиИнвалидами, ВидСравненияКомпоновкиДанных.Равно);
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия", ВидСравненияКомпоновкиДанных.Равно);
				
				
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ДокументОснование");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Сумма");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000060011004" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация",          Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя",        Перечисления.ВидыПособийСоциальногоСтрахования.ПриПостановкеНаУчетВРанниеСрокиБеременности, ВидСравненияКомпоновкиДанных.Равно);
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия", ВидСравненияКомпоновкиДанных.Равно);
				
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ДокументОснование");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Сумма");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000060012004" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация",          Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя",        Перечисления.ВидыПособийСоциальногоСтрахования.ПриУсыновленииРебенка, ВидСравненияКомпоновкиДанных.Равно);
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия", ВидСравненияКомпоновкиДанных.Равно);
				
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ДокументОснование");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Сумма");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000030012004" или ИмяЯчейки = "П000060008004" тогда 
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация",          Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя",        Перечисления.ВидыПособийСоциальногоСтрахования.ПриРожденииРебенка, ВидСравненияКомпоновкиДанных.Равно);
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия", ВидСравненияКомпоновкиДанных.Равно);
				
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ДокументОснование");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Сумма");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000030013004" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация",          Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя",        Перечисления.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью, ВидСравненияКомпоновкиДанных.Равно);
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия", ВидСравненияКомпоновкиДанных.Равно);
				
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ДокументОснование");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Сумма");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000030014004" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация",          Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя",        Перечисления.ВидыПособийСоциальногоСтрахования.ДополнительныеВыходныеДниПоУходуЗаДетьмиИнвалидами, ВидСравненияКомпоновкиДанных.Равно);
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия", ВидСравненияКомпоновкиДанных.Равно);
				
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ДокументОснование");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Сумма");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000030015004" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация",          Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя",        Перечисления.ВидыПособийСоциальногоСтрахования.ПриПостановкеНаУчетВРанниеСрокиБеременности, ВидСравненияКомпоновкиДанных.Равно);
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия", ВидСравненияКомпоновкиДанных.Равно);
				
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ДокументОснование");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Сумма");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000030016004" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация",   Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", Перечисления.ВидыПособийСоциальногоСтрахования.ПриУсыновленииРебенка, ВидСравненияКомпоновкиДанных.Равно);
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия", ВидСравненияКомпоновкиДанных.Равно);
				
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ДокументОснование");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Сумма");
			ФормаОтчета.ОбновитьОтчет();
			
			//Расшифровка колонки: "в т.ч. выплаты сверх установленных норм лицам, пострадавшим от радиационных воздействий в случаях, установленных законодательством"	
			//
		ИначеЕсли ИмяЯчейки = "П000030001005" или ИмяЯчейки = "П000060001005" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация",   Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", Перечисления.ВидыПособийСоциальногоСтрахования.Нетрудоспособность, ВидСравненияКомпоновкиДанных.Равно);
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "в т.ч. сумма сверх нормы", ВидСравненияКомпоновкиДанных.Равно);
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ДобровольныеВзносыВФСС", ложь, ВидСравненияКомпоновкиДанных.Равно);
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "в т.ч. сумма сверх нормы (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек,   "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ДокументОснование");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Сумма");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000030002005" или ИмяЯчейки = "П000060002005" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация",   Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", Перечисления.ВидыПособийСоциальногоСтрахования.Нетрудоспособность, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидЗанятости",  Перечисления.ВидыЗанятостиВОрганизации.Совместительство, ВидСравненияКомпоновкиДанных.Равно);
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "в т.ч. сумма сверх нормы", ВидСравненияКомпоновкиДанных.Равно);
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ДобровольныеВзносыВФСС", ложь, ВидСравненияКомпоновкиДанных.Равно);
				
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "в т.ч. сумма сверх нормы (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек,   "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ДокументОснование");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Сумма");
			ФормаОтчета.ОбновитьОтчет();
			
			
		ИначеЕсли ИмяЯчейки = "П000030003005" или ИмяЯчейки = "П000060003005" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация",            Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя",          Перечисления.ВидыПособийСоциальногоСтрахования.БеременностьРоды, ВидСравненияКомпоновкиДанных.Равно);
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "в т.ч. сумма сверх нормы", ВидСравненияКомпоновкиДанных.Равно);
				
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "в т.ч. сумма сверх нормы (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек,   "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ДокументОснование");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Сумма");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000030004005" или ИмяЯчейки = "П000060004005" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация",            Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя",          Перечисления.ВидыПособийСоциальногоСтрахования.БеременностьРоды, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидЗанятости", Перечисления.ВидыЗанятостиВОрганизации.Совместительство, ВидСравненияКомпоновкиДанных.Равно);
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "в т.ч. сумма сверх нормы", ВидСравненияКомпоновкиДанных.Равно);
				
				
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "в т.ч. сумма сверх нормы (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек,   "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ДокументОснование");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Сумма");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000030005005" или ИмяЯчейки = "П000060005005" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация",            Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя",          Перечисления.ВидыПособийСоциальногоСтрахования.ПоУходуЗаРебенкомДоПолутораЛет, ВидСравненияКомпоновкиДанных.Равно);
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "в т.ч. сумма сверх нормы", ВидСравненияКомпоновкиДанных.Равно);
				
				
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "в т.ч. сумма сверх нормы (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек,   "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек,   "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ДокументОснование");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Сумма");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000030006005" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация",          Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя",        Перечисления.ВидыПособийСоциальногоСтрахования.ПоУходуЗаРебенкомДоПолутораЛет, ВидСравненияКомпоновкиДанных.Равно);
			//ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УходЗаПервымРебенком", истина, ВидСравненияКомпоновкиДанных.Равно);
			
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "в т.ч. сумма сверх нормы", ВидСравненияКомпоновкиДанных.Равно);
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "в т.ч. сумма сверх нормы (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек,   "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек,   "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ДокументОснование");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Сумма");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000030007005" или ИмяЯчейки = "П000060006005" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация",          Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя",        Перечисления.ВидыПособийСоциальногоСтрахования.ПоУходуЗаРебенкомДоПолутораЛет, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УходЗаПервымРебенком", истина, ВидСравненияКомпоновкиДанных.Равно);
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "в т.ч. сумма сверх нормы", ВидСравненияКомпоновкиДанных.Равно);
				
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "в т.ч. сумма сверх нормы (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек,   "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек,   "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ДокументОснование");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Сумма");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000060009005" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация",          Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя",        Перечисления.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "в т.ч. сумма сверх нормы", ВидСравненияКомпоновкиДанных.Равно);
			Если РежимЕНВД И РежимУСН тогда
				Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				Иначе
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			ИначеЕсли РежимУСН тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
			ИначеЕсли РежимЕНВД тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек,   "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек,   "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ДокументОснование");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Сумма");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000030008005" или ИмяЯчейки = "П000060007005" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация",          Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя",        Перечисления.ВидыПособийСоциальногоСтрахования.ПоУходуЗаРебенкомДоПолутораЛет, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УходЗаПервымРебенком", ложь, ВидСравненияКомпоновкиДанных.Равно);
			
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "в т.ч. сумма сверх нормы", ВидСравненияКомпоновкиДанных.Равно);
				
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "в т.ч. сумма сверх нормы (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек,   "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек,   "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ДокументОснование");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Сумма");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000060009003" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация",          Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя",        Перечисления.ВидыПособийСоциальногоСтрахования.ПоУходуЗаРебенкомДоПолутораЛет, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УходЗаПервымРебенком", ложь, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "в т.ч. сумма сверх нормы", ВидСравненияКомпоновкиДанных.Равно);
			
			Если РежимЕНВД И РежимУСН тогда
				Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				Иначе
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			ИначеЕсли РежимУСН тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
			ИначеЕсли РежимЕНВД тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек,   "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек,   "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ДокументОснование");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Сумма");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000030013005" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация",          Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя",        Перечисления.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью, ВидСравненияКомпоновкиДанных.Равно);
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "в т.ч. сумма сверх нормы", ВидСравненияКомпоновкиДанных.Равно);
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "в т.ч. сумма сверх нормы (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек,   "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек,   "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ДокументОснование");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Сумма");
			ФормаОтчета.ОбновитьОтчет();
			
			//Расшифровка числености средней заработной палаты работников
			//
			
		ИначеЕсли ИмяЯчейки = "П000030000103" или  ИмяЯчейки = "П000060000103" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация",             Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, ?(Форма.мВыбраннаяФорма = "ФормаОтчета2009Кв2","ГруппаСреднегоЗаработка2009","ГруппаСреднегоЗаработка2007"), "до 3750", ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", Перечисления.ВидыПособийСоциальногоСтрахования.ПоУходуЗаРебенкомДоПолутораЛет, ВидСравненияКомпоновкиДанных.Равно);
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия", ВидСравненияКомпоновкиДанных.Равно);
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				Иначе
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", "Нет", ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН",            ложь, ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек,   "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ЧисленостьРаботников", "Численость работников");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "РазмерСреднегоЗаработка", );
			
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000030000203" или  ИмяЯчейки = "П000060000203" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация",             Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, ?(Форма.мВыбраннаяФорма = "ФормаОтчета2009Кв2","ГруппаСреднегоЗаработка2009","ГруппаСреднегоЗаработка2007"), "3751 - 7500", ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", Перечисления.ВидыПособийСоциальногоСтрахования.ПоУходуЗаРебенкомДоПолутораЛет, ВидСравненияКомпоновкиДанных.Равно);
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия", ВидСравненияКомпоновкиДанных.Равно);
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				Иначе
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", "Нет", ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН",            ложь, ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек,   "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ЧисленостьРаботников", "Численость работников");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "РазмерСреднегоЗаработка", );
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000030000303" или  ИмяЯчейки = "П000060000303" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация",             Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, ?(Форма.мВыбраннаяФорма = "ФормаОтчета2009Кв2","ГруппаСреднегоЗаработка2009","ГруппаСреднегоЗаработка2007"), "7501 - 11250", ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", Перечисления.ВидыПособийСоциальногоСтрахования.ПоУходуЗаРебенкомДоПолутораЛет, ВидСравненияКомпоновкиДанных.Равно);
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия", ВидСравненияКомпоновкиДанных.Равно);
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				Иначе
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", "Нет", ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН",            ложь, ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек,   "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ЧисленостьРаботников", "Численость работников");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "РазмерСреднегоЗаработка", );
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000030000403" или ИмяЯчейки = "П000060000403" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация",             Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			Если Форма.мВыбраннаяФорма = "ФормаОтчета2009Кв2" Тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ГруппаСреднегоЗаработка2009", "11251 - 18000", ВидСравненияКомпоновкиДанных.Равно);
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ГруппаСреднегоЗаработка2007", "11251 - 15000", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", Перечисления.ВидыПособийСоциальногоСтрахования.ПоУходуЗаРебенкомДоПолутораЛет, ВидСравненияКомпоновкиДанных.Равно);
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия", ВидСравненияКомпоновкиДанных.Равно);
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				Иначе
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", "Нет", ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН",            ложь, ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек,   "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ЧисленостьРаботников", "Численость работников");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "РазмерСреднегоЗаработка", );
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000030000503" или ИмяЯчейки = "П000060000503" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация",             Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			Если Форма.мВыбраннаяФорма = "ФормаОтчета2009Кв2" Тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ГруппаСреднегоЗаработка2009", "свыше 18000", ВидСравненияКомпоновкиДанных.Равно);
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ГруппаСреднегоЗаработка2007", "свыше 15000", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", Перечисления.ВидыПособийСоциальногоСтрахования.ПоУходуЗаРебенкомДоПолутораЛет, ВидСравненияКомпоновкиДанных.Равно);
			Если Найти(ИмяЯчейки, "П00003") = 0 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия", ВидСравненияКомпоновкиДанных.Равно);
				Если РежимЕНВД И РежимУСН тогда
					Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
					Иначе
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
				ИначеЕсли РежимУСН тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ИначеЕсли РежимЕНВД тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				Иначе
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", "Нет", ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия (раздел 1)", ВидСравненияКомпоновкиДанных.Равно);
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН",            ложь, ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек,   "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ЧисленостьРаботников", "Численость работников");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "РазмерСреднегоЗаработка", );
			ФормаОтчета.ОбновитьОтчет();
			
			// расшифровка таблицы 4
			
		ИначеЕсли ИмяЯчейки = "П000040002003" тогда
			ОтчетОбъект = Отчеты.СредняяЧисленностьРаботниковОрганизаций.Создать();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецДня(Отчет.мДатаКонцаПериодаОтчета));
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "МесяцОтчета");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Дата");
			Если РежимЕНВД И РежимУСН тогда
				Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
					ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "СредняяЧисленностьЖенщинЕНВД");
				Иначе
					ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "СредняяЧисленностьЖенщинНеЕНВД");
				КонецЕсли;
			ИначеЕсли РежимУСН тогда
				ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "СредняяЧисленностьЖенщинНеЕНВД");
			ИначеЕсли РежимЕНВД тогда
				ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "СредняяЧисленностьЖенщинЕНВД");
			КонецЕсли;
			ТиповыеОтчеты.ОткрытьФормуРасшифровки(ОтчетОбъект, ЗаголовокОтчета);
			
		ИначеЕсли ИмяЯчейки = "П000040001003" тогда
			ОтчетОбъект = Отчеты.СредняяЧисленностьРаботниковОрганизаций.Создать();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецДня(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "МесяцОтчета");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Дата");
			Если РежимЕНВД И РежимУСН тогда
				Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
					ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "СредняяЧисленностьЕНВД");
				Иначе
					ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "СредняяЧисленностьНеЕНВД");
				КонецЕсли;
			ИначеЕсли РежимУСН тогда
				ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "СредняяЧисленностьНеЕНВД");
			ИначеЕсли РежимЕНВД тогда
				ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "СредняяЧисленностьЕНВД");
			КонецЕсли;
			ТиповыеОтчеты.ОткрытьФормуРасшифровки(ОтчетОбъект, ЗаголовокОтчета);
			
			
			// расшифровка таблицы 9
			
		ИначеЕсли ИмяЯчейки = "П000090001001" тогда
			ОтчетОбъект = Отчеты.СредняяЧисленностьРаботниковОрганизаций.Создать();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецДня(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "МесяцОтчета");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Дата");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "СредняяЧисленность");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000090001002"  тогда
			ОтчетОбъект = Отчеты.СредняяЧисленностьРаботниковОрганизаций.Создать();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецДня(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "МесяцОтчета");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Дата");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "СредняяЧисленностьИнвалидов");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000090001004" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", "База ФСС НС", ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "КодДоходаФСС_НС", Перечисления.ДоходыФСС_НС.Облагается, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000090001104" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", "База ФСС НС", ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "КодДоходаФСС_НС", Перечисления.ДоходыФСС_НС.Облагается, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоМесяца(ДобавитьМесяц(Отчет.мДатаКонцаПериодаОтчета,-2)));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецМесяца(ДобавитьМесяц(Отчет.мДатаКонцаПериодаОтчета,-2)));
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000090001204" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", "База ФСС НС", ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "КодДоходаФСС_НС", Перечисления.ДоходыФСС_НС.Облагается, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоМесяца(ДобавитьМесяц(Отчет.мДатаКонцаПериодаОтчета,-1)));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецМесяца(ДобавитьМесяц(Отчет.мДатаКонцаПериодаОтчета,-1)));
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000090001304" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", "База ФСС НС", ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "КодДоходаФСС_НС", Перечисления.ДоходыФСС_НС.Облагается, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоМесяца(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецМесяца(Отчет.мДатаКонцаПериодаОтчета));
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000090001005" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", "База ФСС НС", ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "КодДоходаФСС_НС", Перечисления.ДоходыФСС_НС.Облагается, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Инвалидность", истина, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000090001105" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", "База ФСС НС", ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Инвалидность", истина, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоМесяца(ДобавитьМесяц(Отчет.мДатаКонцаПериодаОтчета,-2)));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецМесяца(ДобавитьМесяц(Отчет.мДатаКонцаПериодаОтчета,-2)));
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000090001205" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", "База ФСС НС", ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Инвалидность", истина, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоМесяца(ДобавитьМесяц(Отчет.мДатаКонцаПериодаОтчета,-1)));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецМесяца(ДобавитьМесяц(Отчет.мДатаКонцаПериодаОтчета,-1)));
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000090001305" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", "База ФСС НС", ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Инвалидность", истина, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоМесяца(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецМесяца(Отчет.мДатаКонцаПериодаОтчета));
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000090001006" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", "База ФСС НС", ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "КодДоходаФСС_НС", Перечисления.ДоходыФСС_НС.Облагается, ВидСравненияКомпоновкиДанных.НеРавно);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ФормаОтчета.ОбновитьОтчет();
			
			// расшифровка таблицы 10
			
		ИначеЕсли ИмяЯчейки = "П000100002101" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,   ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", "Налог ФСС НС", ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода",         НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",          НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета)-1);
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Пояснение");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Физлицо");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000100002401" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,   ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", "Налог ФСС НС", ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета)));
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Пояснение");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Физлицо");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000100002501" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,   ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", "Налог ФСС НС", ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета)+1));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  НачалоМесяца(Отчет.мДатаКонцаПериодаОтчета)-1);
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Пояснение");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Физлицо");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000100002601" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,   ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", "Налог ФСС НС", ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоМесяца(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Пояснение");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Физлицо");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000100002003" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,   ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", "Налог ФСС НС", ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ФормаОтчета.ОбновитьОтчет();
			
			// расшифровка таблицы 11
			
		ИначеЕсли ИмяЯчейки = "П000110001003" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", Перечисления.ВидыПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Оплачено дней пособия (ФСС НС)", ВидСравненияКомпоновкиДанных.Равно);
			
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Кол-во дней");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000110002003" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидЗанятости", Перечисления.ВидыЗанятостиВОрганизации.Совместительство, ВидСравненияКомпоновкиДанных.Равно);
			
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", Перечисления.ВидыПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Оплачено дней пособия (ФСС НС)", ВидСравненияКомпоновкиДанных.Равно);
			
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Кол-во дней");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000110004003" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", Перечисления.ВидыПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Оплачено дней пособия (ФСС НС)", ВидСравненияКомпоновкиДанных.Равно);
			
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Кол-во дней");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000110005003" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация",             Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидЗанятости", Перечисления.ВидыЗанятостиВОрганизации.Совместительство, ВидСравненияКомпоновкиДанных.Равно);
			
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", Перечисления.ВидыПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Оплачено дней пособия (ФСС НС)", ВидСравненияКомпоновкиДанных.Равно);
			
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Кол-во дней");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000110007003" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация",  Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			//ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидЗанятости", Перечисления.ВидыЗанятостиВОрганизации.Совместительство, ВидСравненияКомпоновкиДанных.Равно);
			
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", Перечисления.ВидыПособийСоциальногоСтрахования.ДополнительныйОтпускПослеНесчастныхСлучаев, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Оплачено дней пособия (ФСС НС)", ВидСравненияКомпоновкиДанных.Равно);
			
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Кол-во дней");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000110001004" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация",             Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", Перечисления.ВидыПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия (ФСС НС)", ВидСравненияКомпоновкиДанных.Равно);
			
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Сумма");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000110002004" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация",             Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидЗанятости", Перечисления.ВидыЗанятостиВОрганизации.Совместительство, ВидСравненияКомпоновкиДанных.Равно);
			
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", Перечисления.ВидыПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия (ФСС НС)", ВидСравненияКомпоновкиДанных.Равно);
			
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Сумма");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000110004004" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация",             Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", Перечисления.ВидыПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия (ФСС НС)", ВидСравненияКомпоновкиДанных.Равно);
			
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Сумма");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000110005004" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация",  Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидЗанятости", Перечисления.ВидыЗанятостиВОрганизации.Совместительство, ВидСравненияКомпоновкиДанных.Равно);
			
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", Перечисления.ВидыПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия (ФСС НС)", ВидСравненияКомпоновкиДанных.Равно);
			
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Сумма");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000110007004" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация",  Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			//	ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидЗанятости", Перечисления.ВидыЗанятостиВОрганизации.Совместительство, ВидСравненияКомпоновкиДанных.Равно);
			
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", Перечисления.ВидыПособийСоциальногоСтрахования.ДополнительныйОтпускПослеНесчастныхСлучаев, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия (ФСС НС)", ВидСравненияКомпоновкиДанных.Равно);
			
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "ПериодРегистрации");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "ФизЛицо");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Результат", "Сумма");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000100010101" тогда 
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия (ФСС НС)", ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета)-1);
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Пояснение");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Физлицо");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000100010401" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия (ФСС НС)", ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета)));
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Пояснение");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Физлицо");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000100010501" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия (ФСС НС)", ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета)+1));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  НачалоМесяца(Отчет.мДатаКонцаПериодаОтчета)-1);
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Пояснение");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Физлицо");
			ФормаОтчета.ОбновитьОтчет();
		ИначеЕсли ИмяЯчейки = "П000100010601" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,   ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия (ФСС НС)", ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоМесяца(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Пояснение");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Физлицо");
			ФормаОтчета.ОбновитьОтчет();
		ИначеЕсли ИмяЯчейки = "П000100010003" тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,   ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", "Всего сумма пособия (ФСС НС)", ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Пояснение");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Физлицо");
			ФормаОтчета.ОбновитьОтчет();
			
		ИначеЕсли ИмяЯчейки = "П000050006003"тогда
			ОтчетОбъект = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
			ФормаОтчета = ОтчетОбъект.ПолучитьФорму("ФормаОтчета");
			ФормаОтчета.ЭтоОтработкаРасшифровки = истина;
			ФормаОтчета.Открыть();
			ПараметрВывода = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
			ЗаголовокОтчета = ПараметрВывода.Значение;
			ЗаголовокОтчета = ЗаголовокОтчета + " таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			ПараметрВывода.Значение = ЗаголовокОтчета;
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ВидыПособийЗаСчетСобственныхСредств = Новый СписокЗначений;
			ВидыПособийЗаСчетСобственныхСредств.Добавить(Перечисления.ВидыПособийСоциальногоСтрахования.ПустаяСсылка());
			ВидыПособийЗаСчетСобственныхСредств.Добавить(Перечисления.ВидыПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай);
			ВидыПособийЗаСчетСобственныхСредств.Добавить(Перечисления.ВидыПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание);
			ВидыПособийЗаСчетСобственныхСредств.Добавить(Перечисления.ВидыПособийСоциальногоСтрахования.ДополнительныйОтпускПослеНесчастныхСлучаев);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидПоказателя", ВидыПособийЗаСчетСобственныхСредств,  ВидСравненияКомпоновкиДанных.НеВСписке);
			СписокЗначение = Новый СписокЗначений;
			СписокЗначение.Добавить("Всего сумма пособия (раздел 1)");
			СписокЗначение.Добавить("Всего сумма пособия");
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Группа", СписокЗначение, ВидСравненияКомпоновкиДанных.ВСписке);
			Если РежимЕНВД И РежимУСН тогда
				Если НомерАктивнойСтраницы = 1 тогда // если расшифровывают вторую страницу , то это страница ЕНВД.
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				Иначе
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
			ИначеЕсли РежимУСН тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", ложь, ВидСравненияКомпоновкиДанных.Равно);
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина, ВидСравненияКомпоновкиДанных.Равно);
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "БЛ", ЛОЖЬ, ВидСравненияКомпоновкиДанных.Равно);
			ИначеЕсли РежимЕНВД тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяЕНВД", истина, ВидСравненияКомпоновкиДанных.Равно);
				//ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ДобровольныеВзносыВФСС", ложь, ВидСравненияКомпоновкиДанных.Равно);
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "БЛ", ЛОЖЬ, ВидСравненияКомпоновкиДанных.Равно);
			Иначе
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", "Нет", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Пояснение");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Физлицо");
			ФормаОтчета.ОбновитьОтчет();
		Иначе
			Предупреждение("Расшифровка данной ячейки не поддерживается.");
		КонецЕсли;
		
	КонецПроцедуры
	
	
	// Открывает отчет расшифровку для формы отчета РСВ1 за 2010 год
	// 
	// Параметры
	//    ФормаОтчета - ссылка на форму отчета
	//    Отчет - отчет объект, который расшифровывается
	//
	Процедура РасшифроватьРСВ1за2010(Отчет, Форма)
		
		СтрокаАктивнойСтраницы = Неопределено;
		СтраницыРаздела        = Неопределено;
		КодРаздела2            = Неопределено;
		ТекущаяОбласть         = Неопределено;
		
		Если Форма.ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Раздел12" тогда
			ТекущаяОбласть = Форма.ЭлементыФормы.ПолеТабличногоДокументаРаздел12.ТекущаяОбласть;
			Если Форма.мСтруктураМногостраничныхРазделов.Свойство("Раздел12", СтраницыРаздела) тогда
				СтрокаАктивнойСтраницы = СтраницыРаздела.Найти(истина, "АктивнаяСтраница");
				КодРаздела2 = СтрокаАктивнойСтраницы.Данные.П000200001001_1 + СтрокаАктивнойСтраницы.Данные.П000200001001_2;
			КонецЕсли;
		ИначеЕсли Форма.ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Раздел30" тогда
			ТекущаяОбласть = Форма.ЭлементыФормы.ПолеТабличногоДокументаРаздел30.ТекущаяОбласть;
		ИначеЕсли Форма.ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Раздел41" тогда
			ТекущаяОбласть = Форма.ЭлементыФормы.ПолеТабличногоДокументаРаздел41.ТекущаяОбласть;
		ИначеЕсли Форма.ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Раздел42" тогда
			ТекущаяОбласть = Форма.ЭлементыФормы.ПолеТабличногоДокументаРаздел42.ТекущаяОбласть;
		ИначеЕсли Форма.ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Раздел50" тогда
			ТекущаяОбласть = Форма.ЭлементыФормы.ПолеТабличногоДокументаРаздел50.ТекущаяОбласть;
		КонецЕсли;
		
		
		Если ТекущаяОбласть = Неопределено Тогда
			Предупреждение("Расшифровка данной ячейки не поддерживается.");
			Возврат;
		ИначеЕсли Найти(ТекущаяОбласть.Имя, "П") <> 0 или Найти(ТекущаяОбласть.Имя, "R") <> 0  тогда
			ИмяЯчейки = ТекущаяОбласть.Имя;
		Иначе
			Предупреждение("Не выбрана ячейка для расшифровки!");
			Возврат;
		КонецЕсли;
		
		НомерТаблицы        = Число(Сред(ИмяЯчейки,2,5));
		НомерСтроки         = Число(Сред(ИмяЯчейки,7,4));
		НомерКолонки        = Число(Сред(ИмяЯчейки,12,2));
		НомерСтрокиВКолонке = Число(Сред(ИмяЯчейки,11,1));
		
		
		Если НомерТаблицы = 10 и НомерСтроки = 11 тогда
			
			ОтчетОбъект = Отчеты.АнализНачисленныхНалоговИВзносов.Создать();
			ЗаголовокОтчета = "Раздел 1 строка " + НомерСтроки + НомерСтрокиВКолонке + " колонка " + НомерКолонки;
			
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Организация");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Сотрудник");
			Если НомерСтрокиВКолонке = 0 тогда
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ИначеЕсли НомерСтрокиВКолонке = 1 тогда
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета));
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета)));
			ИначеЕсли НомерСтрокиВКолонке = 2 тогда
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета))+1);
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  НачалоМесяца(Отчет.мДатаКонцаПериодаОтчета)-1);
			ИначеЕсли НомерСтрокиВКолонке = 3 тогда
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоМесяца(Отчет.мДатаКонцаПериодаОтчета));
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецМесяца(Отчет.мДатаКонцаПериодаОтчета));
			ИначеЕсли НомерСтрокиВКолонке = 4 тогда
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета));
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			КонецЕсли;	
			
			// ресурсы
			Если НомерКолонки = 3 тогда
				ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Взносы.ПФРСтраховая"); 
			ИначеЕсли НомерКолонки = 4 тогда
				ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Взносы.ПФРНакопительная"); 
			ИначеЕсли НомерКолонки = 5 тогда
				ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Взносы.ФФОМС"); 
			ИначеЕсли НомерКолонки = 6 тогда
				ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Взносы.ТФОМС"); 
			КонецЕсли;
			ТиповыеОтчеты.ОткрытьФормуРасшифровки(ОтчетОбъект, ЗаголовокОтчета);
			
			
		ИначеЕсли (НомерТаблицы = 20 и НомерСтроки <> 21) или (НомерТаблицы = 30 и НомерСтроки < 35) тогда		
			
			ОтчетОбъект = Отчеты.АнализНачисленныхНалоговИВзносов.Создать();
			ЗаголовокОтчета = "Раздел 2 строка " + НомерСтроки + НомерСтрокиВКолонке + " колонка " + НомерКолонки;
			
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Организация");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Сотрудник");
			
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "НеИмеетПравоНаПенсию", Ложь);
			
			Если НомерТаблицы = 30 и НомерСтроки < 35 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Взносы.Инвалид", Истина);
			Иначе
				Если КодРаздела2 = "01" тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидТарифаСтраховыхВзносов", Перечисления.ТарифыСтраховыхВзносов.ОбщийНалоговыйРежим);
				ИначеЕсли КодРаздела2 = "02" тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидТарифаСтраховыхВзносов", Перечисления.ТарифыСтраховыхВзносов.СельХозПроизводители);
				ИначеЕсли КодРаздела2 = "03" тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидТарифаСтраховыхВзносов", Перечисления.ТарифыСтраховыхВзносов.РезидентТехникоВнедренческойЗоны);
				ИначеЕсли КодРаздела2 = "04" тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидТарифаСтраховыхВзносов", Перечисления.ТарифыСтраховыхВзносов.ЕСХН);
				ИначеЕсли КодРаздела2 = "05" тогда
					СписокЗначений = Новый СписокЗначений;
					СписокЗначений.Добавить(Перечисления.ТарифыСтраховыхВзносов.ЕНВД);
					СписокЗначений.Добавить(Перечисления.ТарифыСтраховыхВзносов.УпрощенныйНалоговыйРежим);
					СписокЗначений.Добавить(Перечисления.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидТарифаСтраховыхВзносов", СписокЗначений, ВидСравненияКомпоновкиДанных.ВСписке);
				КонецЕсли;
			КонецЕсли;
			
			Если НомерКолонки = 3 тогда
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ИначеЕсли НомерКолонки = 4 тогда
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета));
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета)));
			ИначеЕсли НомерКолонки = 5 тогда
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета))+1);
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  НачалоМесяца(Отчет.мДатаКонцаПериодаОтчета)-1);
			ИначеЕсли НомерКолонки = 6 тогда
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоМесяца(Отчет.мДатаКонцаПериодаОтчета));
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецМесяца(Отчет.мДатаКонцаПериодаОтчета));
			КонецЕсли;	
			
			Если НомерСтроки = 20 или НомерСтроки = 30 тогда
				ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Взносы.Начислено"); 
				Если НомерСтрокиВКолонке = 1 тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "РодилсяДо1967", Истина);
				ИначеЕсли НомерСтрокиВКолонке = 2 тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "РодилсяДо1967", Ложь);
				КонецЕсли;
			ИначеЕсли НомерСтроки = 21 или НомерСтроки = 31 тогда
				
				ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Взносы.НеОблагаемыеСуммыВзносов");
				Если НомерСтрокиВКолонке = 4 или НомерСтрокиВКолонке = 5 тогда
					СписокДоходов = Новый СписокЗначений;
					СписокДоходов.Добавить(Справочники.ДоходыПоСтраховымВзносам.ДенежноеСодержаниеПрокуроров);
					СписокДоходов.Добавить(Справочники.ДоходыПоСтраховымВзносам.ДоходыСтудентовЗаРаботуВСтудотрядеПоТрудовомуДоговору);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидДохода", СписокДоходов, ВидСравненияКомпоновкиДанных.ВСписке);
				ИначеЕсли НомерСтрокиВКолонке = 1 или НомерСтрокиВКолонке = 2 тогда
					СписокДоходов = Новый СписокЗначений;
					СписокДоходов.Добавить(Справочники.ДоходыПоСтраховымВзносам.АвторскиеОткрытия);
					СписокДоходов.Добавить(Справочники.ДоходыПоСтраховымВзносам.АвторскиеАудиовизуальныеПроизведения);
					СписокДоходов.Добавить(Справочники.ДоходыПоСтраховымВзносам.АвторскиеДругиеМузыкальныеПроизведения);
					СписокДоходов.Добавить(Справочники.ДоходыПоСтраховымВзносам.АвторскиеЛитературныеПроизведения);
					СписокДоходов.Добавить(Справочники.ДоходыПоСтраховымВзносам.АвторскиеМузыкальноСценическиеПроизведение);
					СписокДоходов.Добавить(Справочники.ДоходыПоСтраховымВзносам.АвторскиеНаучныеТруды);
					СписокДоходов.Добавить(Справочники.ДоходыПоСтраховымВзносам.АвторскиеСкульптуры);
					СписокДоходов.Добавить(Справочники.ДоходыПоСтраховымВзносам.АвторскиеГрафическиеПроизведения);
					СписокДоходов.Добавить(Справочники.ДоходыПоСтраховымВзносам.АвторскиеИсполнениеПроизведений);
					СписокДоходов.Добавить(Справочники.ДоходыПоСтраховымВзносам.РаспределятьПоБазовымНачислениям);
					СписокДоходов.Добавить(Справочники.ДоходыПоСтраховымВзносам.НеЯвляетсяОбъектом);
					СписокДоходов.Добавить(Справочники.ДоходыПоСтраховымВзносам.НеОблагаетсяЦеликом);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидДохода", СписокДоходов, ВидСравненияКомпоновкиДанных.ВСписке);
				ИначеЕсли НомерСтрокиВКолонке = 0 тогда
					СписокДоходов = Новый СписокЗначений;
					СписокДоходов.Добавить(Справочники.ДоходыПоСтраховымВзносам.АвторскиеАудиовизуальныеПроизведения);
					СписокДоходов.Добавить(Справочники.ДоходыПоСтраховымВзносам.АвторскиеГрафическиеПроизведения);
					СписокДоходов.Добавить(Справочники.ДоходыПоСтраховымВзносам.АвторскиеДругиеМузыкальныеПроизведения);
					СписокДоходов.Добавить(Справочники.ДоходыПоСтраховымВзносам.АвторскиеЛитературныеПроизведения);
					СписокДоходов.Добавить(Справочники.ДоходыПоСтраховымВзносам.АвторскиеЛитературныеПроизведения);
					СписокДоходов.Добавить(Справочники.ДоходыПоСтраховымВзносам.АвторскиеМузыкальноСценическиеПроизведение);
					СписокДоходов.Добавить(Справочники.ДоходыПоСтраховымВзносам.АвторскиеНаучныеТруды);
					СписокДоходов.Добавить(Справочники.ДоходыПоСтраховымВзносам.АвторскиеОткрытия);
					СписокДоходов.Добавить(Справочники.ДоходыПоСтраховымВзносам.АвторскиеСкульптуры);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидДохода", СписокДоходов, ВидСравненияКомпоновкиДанных.НеВСписке);
				КонецЕсли;	
				
				Если НомерСтрокиВКолонке = 1 или НомерСтрокиВКолонке = 4 тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "РодилсяДо1967", Истина);
				ИначеЕсли НомерСтрокиВКолонке = 2 или НомерСтрокиВКолонке = 5 тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "РодилсяДо1967", Ложь);
				КонецЕсли;
			ИначеЕсли НомерСтроки = 22 или НомерСтроки = 32 тогда
				ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Взносы.ОблагаемаяБазаПФР");
				Если НомерСтрокиВКолонке = 0 тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "РодилсяДо1967", Истина);
				ИначеЕсли НомерСтрокиВКолонке = 1 тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "РодилсяДо1967", Ложь);
				КонецЕсли;	
			ИначеЕсли НомерСтроки = 23 или НомерСтроки = 33 тогда
				ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Взносы.ОблагаемаяБазаФОМС");
			ИначеЕсли НомерСтроки = 24 или НомерСтроки = 34 тогда
				Если НомерСтрокиВКолонке = 1 тогда
					ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Взносы.ПФРСтраховая");
				ИначеЕсли НомерСтрокиВКолонке = 2 тогда
					ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Взносы.ПФРНакопительная");
				ИначеЕсли НомерСтрокиВКолонке = 3 тогда
					ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Взносы.ФФОМС");
				ИначеЕсли НомерСтрокиВКолонке = 4 тогда
					ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Взносы.ТФОМС");
				КонецЕсли;
			КонецЕсли;	
			ТиповыеОтчеты.ОткрытьФормуРасшифровки(ОтчетОбъект, ЗаголовокОтчета);
			
		ИначеЕсли НомерТаблицы = 30 и НомерСтроки >= 35 и НомерСтроки <> 36 тогда
			
			ОтчетОбъект = Отчеты.АнализНачисленныхНалоговИВзносов.Создать();
			ЗаголовокОтчета = "Раздел 3 строка " + НомерСтроки + НомерСтрокиВКолонке + " колонка " + НомерКолонки;
			
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Организация");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Сотрудник");
			
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидТарифаСтраховыхВзносов", Перечисления.ТарифыСтраховыхВзносов.ЕНВД);
			
			Если НомерКолонки = 3 тогда
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ИначеЕсли НомерКолонки = 4 тогда
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета));
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета)));
			ИначеЕсли НомерКолонки = 5 тогда
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета))+1);
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  НачалоМесяца(Отчет.мДатаКонцаПериодаОтчета)-1);
			ИначеЕсли НомерКолонки = 6 тогда
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоМесяца(Отчет.мДатаКонцаПериодаОтчета));
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецМесяца(Отчет.мДатаКонцаПериодаОтчета));
			КонецЕсли;	
			Если НомерСтроки = 35 тогда
				ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Взносы.Начислено"); 
				Если НомерСтрокиВКолонке = 1 тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "РодилсяДо1967", Истина);
				ИначеЕсли НомерСтрокиВКолонке = 2 тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "РодилсяДо1967", Ложь);
				КонецЕсли;
			ИначеЕсли НомерСтроки = 36 тогда
				ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Взносы.НеОблагаемыеСуммыВзносов");
				Если НомерСтрокиВКолонке = 4 или НомерСтрокиВКолонке = 5 тогда
					СписокДоходов = Новый СписокЗначений;
					СписокДоходов.Добавить(Справочники.ДоходыПоСтраховымВзносам.ДенежноеСодержаниеПрокуроров);
					СписокДоходов.Добавить(Справочники.ДоходыПоСтраховымВзносам.ДоходыСтудентовЗаРаботуВСтудотрядеПоТрудовомуДоговору);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидДохода", СписокДоходов, ВидСравненияКомпоновкиДанных.ВСписке);
				ИначеЕсли НомерСтрокиВКолонке = 1 или НомерСтрокиВКолонке = 2 тогда
					СписокДоходов = Новый СписокЗначений;
					СписокДоходов.Добавить(Справочники.ДоходыПоСтраховымВзносам.АвторскиеОткрытия);
					СписокДоходов.Добавить(Справочники.ДоходыПоСтраховымВзносам.АвторскиеАудиовизуальныеПроизведения);
					СписокДоходов.Добавить(Справочники.ДоходыПоСтраховымВзносам.АвторскиеДругиеМузыкальныеПроизведения);
					СписокДоходов.Добавить(Справочники.ДоходыПоСтраховымВзносам.АвторскиеЛитературныеПроизведения);
					СписокДоходов.Добавить(Справочники.ДоходыПоСтраховымВзносам.АвторскиеМузыкальноСценическиеПроизведение);
					СписокДоходов.Добавить(Справочники.ДоходыПоСтраховымВзносам.АвторскиеНаучныеТруды);
					СписокДоходов.Добавить(Справочники.ДоходыПоСтраховымВзносам.АвторскиеСкульптуры);
					СписокДоходов.Добавить(Справочники.ДоходыПоСтраховымВзносам.АвторскиеГрафическиеПроизведения);
					СписокДоходов.Добавить(Справочники.ДоходыПоСтраховымВзносам.АвторскиеИсполнениеПроизведений);
					СписокДоходов.Добавить(Справочники.ДоходыПоСтраховымВзносам.РаспределятьПоБазовымНачислениям);
					СписокДоходов.Добавить(Справочники.ДоходыПоСтраховымВзносам.НеЯвляетсяОбъектом);
					СписокДоходов.Добавить(Справочники.ДоходыПоСтраховымВзносам.НеОблагаетсяЦеликом);
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидДохода", СписокДоходов, ВидСравненияКомпоновкиДанных.ВСписке);
				ИначеЕсли НомерСтрокиВКолонке = 0 тогда
					//СписокДоходов = Новый СписокЗначений;
					//СписокДоходов.Добавить(Справочники.ДоходыПоСтраховымВзносам.ДенежноеСодержаниеПрокуроров);
					//СписокДоходов.Добавить(Справочники.ДоходыПоСтраховымВзносам.ДоходыСтудентовЗаРаботуВСтудотрядеПоТрудовомуДоговору);
					//СписокДоходов.Добавить(Справочники.ДоходыПоСтраховымВзносам.АвторскиеОткрытия);
					//СписокДоходов.Добавить(Справочники.ДоходыПоСтраховымВзносам.АвторскиеАудиовизуальныеПроизведения);
					//СписокДоходов.Добавить(Справочники.ДоходыПоСтраховымВзносам.АвторскиеДругиеМузыкальныеПроизведения);
					//СписокДоходов.Добавить(Справочники.ДоходыПоСтраховымВзносам.АвторскиеЛитературныеПроизведения);
					//СписокДоходов.Добавить(Справочники.ДоходыПоСтраховымВзносам.АвторскиеМузыкальноСценическиеПроизведение);
					//СписокДоходов.Добавить(Справочники.ДоходыПоСтраховымВзносам.АвторскиеНаучныеТруды);
					//СписокДоходов.Добавить(Справочники.ДоходыПоСтраховымВзносам.АвторскиеСкульптуры);
					//СписокДоходов.Добавить(Справочники.ДоходыПоСтраховымВзносам.АвторскиеГрафическиеПроизведения);
					//СписокДоходов.Добавить(Справочники.ДоходыПоСтраховымВзносам.АвторскиеИсполнениеПроизведений);
					//СписокДоходов.Добавить(Справочники.ДоходыПоСтраховымВзносам.РаспределятьПоБазовымНачислениям);
					//СписокДоходов.Добавить(Справочники.ДоходыПоСтраховымВзносам.НеЯвляетсяОбъектом);
					//СписокДоходов.Добавить(Справочники.ДоходыПоСтраховымВзносам.НеОблагаетсяЦеликом);
					//ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидДохода", СписокДоходов, ВидСравненияКомпоновкиДанных.ВСписке);
				КонецЕсли;	
				Если НомерСтрокиВКолонке = 1 или НомерСтрокиВКолонке = 4 тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "РодилсяДо1967", Истина);
				ИначеЕсли НомерСтрокиВКолонке = 2 или НомерСтрокиВКолонке = 5 тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "РодилсяДо1967", Ложь);
				КонецЕсли;
			ИначеЕсли НомерСтроки = 37 тогда
				ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Взносы.ОблагаемаяБазаПФР");
				Если НомерСтрокиВКолонке = 0 тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "РодилсяДо1967", Истина);
				ИначеЕсли НомерСтрокиВКолонке = 1 тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "РодилсяДо1967", Ложь);
				КонецЕсли;	
			ИначеЕсли НомерСтроки = 38 тогда
				ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Взносы.ОблагаемаяБазаФОМС");
			ИначеЕсли НомерСтроки = 39 тогда
				Если НомерСтрокиВКолонке = 1 тогда
					ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Взносы.ПФРСтраховая");
				ИначеЕсли НомерСтрокиВКолонке = 2 тогда
					ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Взносы.ПФРНакопительная");
				ИначеЕсли НомерСтрокиВКолонке = 3 тогда
					ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Взносы.ФФОМС");
				ИначеЕсли НомерСтрокиВКолонке = 4 тогда
					ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Взносы.ТФОМС");
				КонецЕсли;
			КонецЕсли;	
			ТиповыеОтчеты.ОткрытьФормуРасшифровки(ОтчетОбъект, ЗаголовокОтчета);
		Иначе
			Предупреждение("Расшифровка данной ячейки не поддерживается.");
		КонецЕсли;
		
	КонецПроцедуры
	
	// Открывает отчет расшифровку для формы отчета РСВ1 за 2010 год
	// 
	// Параметры
	//    ФормаОтчета - ссылка на форму отчета
	//    Отчет - отчет объект, который расшифровывается
	//
	Процедура РасшифроватьРСВ3за2010(Отчет, Форма)
		
		СтрокаАктивнойСтраницы = Неопределено;
		СтраницыРаздела        = Неопределено;
		КодРаздела2            = Неопределено;
		
		Если Форма.ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Раздел12" тогда
			ТекущаяОбласть = Форма.ЭлементыФормы.ПолеТабличногоДокументаРаздел12.ТекущаяОбласть;
		КонецЕсли;
		
		Если ТекущаяОбласть <> Неопределено и Найти(ТекущаяОбласть.Имя, "R") = 0 тогда
			ИмяЯчейки = ТекущаяОбласть.Имя;
		Иначе
			Предупреждение("Не выбрана ячейка для расшифровки!");
			Возврат;
		КонецЕсли;
		
		НомерТаблицы        = Число(Сред(ИмяЯчейки,2,5));
		НомерСтроки         = Число(Сред(ИмяЯчейки,7,4));
		НомерКолонки        = Число(Сред(ИмяЯчейки,12,2));
		НомерСтрокиВКолонке = Число(Сред(ИмяЯчейки,11,1));
		
		
		Если НомерТаблицы = 10 и НомерСтроки = 11  тогда
			
			ОтчетОбъект = Отчеты.АнализНачисленныхНалоговИВзносов.Создать();
			ЗаголовокОтчета = ("Раздел 1 строка " + НомерСтроки) + НомерСтрокиВКолонке;
			
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			//ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяПоДополнительномуТарифу", истина);
			
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Организация");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Сотрудник");
			Если НомерСтрокиВКолонке = 0 тогда
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета)-1);
			ИначеЕсли НомерСтрокиВКолонке = 1 тогда
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета));
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета)));
			ИначеЕсли НомерСтрокиВКолонке = 2 тогда
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета))+1);
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  НачалоМесяца(Отчет.мДатаКонцаПериодаОтчета)-1);
			ИначеЕсли НомерСтрокиВКолонке = 3 тогда
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоМесяца(Отчет.мДатаКонцаПериодаОтчета));
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецМесяца(Отчет.мДатаКонцаПериодаОтчета));
			ИначеЕсли НомерСтрокиВКолонке = 4 тогда
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета));
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			КонецЕсли;	
			
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Взносы.ПФРПоДополнительномуТарифу"); 
			ТиповыеОтчеты.ОткрытьФормуРасшифровки(ОтчетОбъект, ЗаголовокОтчета);
			
		ИначеЕсли НомерТаблицы = 20 и НомерСтроки = 20 тогда
			
			ОтчетОбъект = Отчеты.АнализНачисленныхНалоговИВзносов.Создать();
			ЗаголовокОтчета = "Раздел 2 колонка " + НомерКолонки;
			
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОблагаетсяПоДополнительномуТарифу", истина);
			
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Организация");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Сотрудник");
			Если НомерКолонки = 3 тогда
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ИначеЕсли НомерКолонки = 4 тогда
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета));
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета)));
			ИначеЕсли НомерКолонки = 5 тогда
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета))+1);
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  НачалоМесяца(Отчет.мДатаКонцаПериодаОтчета)-1);
			ИначеЕсли НомерКолонки = 6 тогда
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоМесяца(Отчет.мДатаКонцаПериодаОтчета));
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецМесяца(Отчет.мДатаКонцаПериодаОтчета));
			КонецЕсли;	
			
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Взносы.ОблагаемаяБазаПФР"); 
			ТиповыеОтчеты.ОткрытьФормуРасшифровки(ОтчетОбъект, ЗаголовокОтчета);
			
		Иначе
			Предупреждение("Расшифровка данной ячейки не поддерживается.");
		КонецЕсли;
		
	КонецПроцедуры
	
	
	
	// Открывает отчет расшифровку для формы отчета за 2010 год
	// 
	// Параметры
	//    ФормаОтчета - ссылка на форму отчета
	//    Отчет - отчет объект, который расшифровывается
	//
	Процедура Расшифровать4ФССза2010(Отчет, Форма)
		
		НомерАктивнойСтраницы = -1;
		
		УСН_ЕНВД = "";
		КоличествоСтраницРаздела2 = 0;
		
		СтраницыРаздела = Неопределено;
		Если Форма.ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Раздел1_1" тогда
			ТекущаяОбласть = Форма.ЭлементыФормы.ПолеТабличногоДокументаРаздел1_1.ТекущаяОбласть;
		ИначеЕсли Форма.ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Раздел1_2" тогда
			ТекущаяОбласть = Форма.ЭлементыФормы.ПолеТабличногоДокументаРаздел1_2.ТекущаяОбласть;
		ИначеЕсли Форма.ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Раздел1_3" тогда
			ТекущаяОбласть = Форма.ЭлементыФормы.ПолеТабличногоДокументаРаздел1_3.ТекущаяОбласть;
		ИначеЕсли Форма.ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Раздел2_1" тогда
			ТекущаяОбласть = Форма.ЭлементыФормы.ПолеТабличногоДокументаРаздел2_1.ТекущаяОбласть;
			Если Форма.мСтруктураМногостраничныхРазделов.Свойство("Раздел2_1", СтраницыРаздела) тогда
				КоличествоСтраницРаздела2 = СтраницыРаздела.Количество();
				СтрокаАктивнойСтраницы = СтраницыРаздела.Найти(истина, "АктивнаяСтраница");
				Если СтрокаАктивнойСтраницы <> Неопределено тогда
					НомерАктивнойСтраницы = СтраницыРаздела.Индекс(СтрокаАктивнойСтраницы);
					Если Форма.ЭлементыФормы.ПолеТабличногоДокументаРаздел2_1.Области.ШифрРаздел2_3.Текст = "1" 
						и Форма.ЭлементыФормы.ПолеТабличногоДокументаРаздел2_1.Области.ШифрРаздел2_2.Текст = "1" тогда
						УСН_ЕНВД = "УСН";
					ИначеЕсли Форма.ЭлементыФормы.ПолеТабличногоДокументаРаздел2_1.Области.ШифрРаздел2_3.Текст = "1" 
						и Форма.ЭлементыФормы.ПолеТабличногоДокументаРаздел2_1.Области.ШифрРаздел2_2.Текст = "2" тогда
						УСН_ЕНВД = "ЕНВД";
					ИначеЕсли Форма.ЭлементыФормы.ПолеТабличногоДокументаРаздел2_1.Области.ШифрРаздел2_3.Текст = "2" 
						и Форма.ЭлементыФормы.ПолеТабличногоДокументаРаздел2_1.Области.ШифрРаздел2_2.Текст = "3" тогда
						УСН_ЕНВД = "ЕСХН";
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли Форма.ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Раздел2_2" тогда
			ТекущаяОбласть = Форма.ЭлементыФормы.ПолеТабличногоДокументаРаздел2_2.ТекущаяОбласть;
			Если Форма.мСтруктураМногостраничныхРазделов.Свойство("Раздел2_2", СтраницыРаздела) тогда
				СтрокаАктивнойСтраницы = СтраницыРаздела.Найти(истина, "АктивнаяСтраница");
				Если СтрокаАктивнойСтраницы <> Неопределено тогда
					НомерАктивнойСтраницы = СтраницыРаздела.Индекс(СтрокаАктивнойСтраницы);
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли Форма.ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Раздел2_3" тогда
			ТекущаяОбласть = Форма.ЭлементыФормы.ПолеТабличногоДокументаРаздел2_3.ТекущаяОбласть;
		ИначеЕсли Форма.ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Раздел2_4" тогда
			ТекущаяОбласть = Форма.ЭлементыФормы.ПолеТабличногоДокументаРаздел2_4.ТекущаяОбласть;
		ИначеЕсли Форма.ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Раздел3_1" тогда
			ТекущаяОбласть = Форма.ЭлементыФормы.ПолеТабличногоДокументаРаздел3_1.ТекущаяОбласть;
		ИначеЕсли Форма.ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Раздел3_2" тогда
			ТекущаяОбласть = Форма.ЭлементыФормы.ПолеТабличногоДокументаРаздел3_2.ТекущаяОбласть;
		КонецЕсли;
		Если ТекущаяОбласть <> Неопределено тогда
			ИмяЯчейки = ТекущаяОбласть.Имя;
		Иначе
			Предупреждение("Не выбрана ячейка для расшифровки!");
			Возврат;
		КонецЕсли;
		
		// Проверим какой режим налогового учета установлен
		УСН  = ложь;
		ЕНВД = ложь;
		ЕСХН = ложь;
		
		Если Форма.мСтруктураМногостраничныхРазделов.Раздел2_1.Количество() = 2 тогда
			УСН  = истина;
			ЕНВД = истина;
		Иначе
			Для каждого СтрокаСтраницы из Форма.мСтруктураМногостраничныхРазделов.Раздел2_1 Цикл
				
				Если СтрокаСтраницы.Данные = Неопределено тогда
					Продолжить;
				КонецЕсли;
				Если СтрокаСтраницы.Данные.ШифрРаздел2_3 = "1" 
					и СтрокаСтраницы.Данные.ШифрРаздел2_2 = "1" тогда
					УСН = истина;
				ИначеЕсли СтрокаСтраницы.Данные.ШифрРаздел2_3 = "1" 
					и СтрокаСтраницы.Данные.ШифрРаздел2_2 = "2" тогда
					ЕНВД = истина;
				ИначеЕсли СтрокаСтраницы.Данные.ШифрРаздел2_3 = "2" 
					и СтрокаСтраницы.Данные.ШифрРаздел2_2 = "3" тогда
					ЕСХН = истина;
				КонецЕсли;
			КонецЦикла;	
		КонецЕсли;
		
		// расшифровка таблицы 1
		Если Найти(ИмяЯчейки, "П0") = 0 тогда
			Предупреждение("Расшифровка данной ячейки не поддерживается.");
			Возврат;
		КонецЕсли;
		
		НомерТаблицы        = Число(Сред(ИмяЯчейки,2,5));
		НомерСтроки         = Число(Сред(ИмяЯчейки,7,4));
		НомерКолонки        = Число(Сред(ИмяЯчейки,12,2));
		НомерСтрокиВКолонке = Число(Сред(ИмяЯчейки,11,1));
		
		ИДКонфигурации = РегламентированнаяОтчетность.ИДКонфигурации();
		///////////////////////////////////////////////////////////////////////////////////////////////////////////////
		// РАЗДЕЛ 1 Таб. 1
		
		// СРЕДНЕСПИСОЧНАЯ ЧИСЛЕННОСТЬ
		Если ИмяЯчейки = "П000000001000" или ИмяЯчейки = "П000000002000" или ИмяЯчейки = "П000000003000" тогда 
			
			Если ИДКонфигурации = "БП" ИЛИ ИДКонфигурации = "БПКОРП" ИЛИ ИДКонфигурации = "БАУКОРП" ИЛИ ИДКонфигурации = "БАУ" Тогда
				Предупреждение("Расшифровка данной ячейки не поддерживается.");
			Иначе
				ОтчетОбъект = Отчеты.СредняяЧисленностьРаботниковОрганизаций.Создать();
				ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
				ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация, ВидСравненияКомпоновкиДанных.Равно);
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода", КонецДня(Отчет.мДатаКонцаПериодаОтчета));
				ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "МесяцОтчета");
				ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Дата");
				ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
				ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "МесяцОтчета");
				ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Физлицо");
				ЗаголовокОтчета = "";
				Если ИмяЯчейки = "П000000001000" тогда //Среднесписочная численность работающих, чел.
					ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "СреднеСписочнаяЧисленность"); //СредняяЧисленностьНеЕНВД
					ЗаголовокОтчета = "Среднесписочная численность работающих сотрудников";
				ИначеЕсли ИмяЯчейки = "П000000002000" тогда  //Среднесписочная численность работающих женщин
					ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "СреднеСписочнаяЧисленностьЖенщин");
					ЗаголовокОтчета = "Среднесписочная численность работающих женщин";
				ИначеЕсли ИмяЯчейки = "П000000003000" тогда //Среднесписочная численность работающих инвалидов
					ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "СредняяЧисленностьИнвалидов");
					ЗаголовокОтчета = "Среднесписочная численность работающих инвалидов";
				КонецЕсли;
				ТиповыеОтчеты.ОткрытьФормуРасшифровки(ОтчетОбъект, ЗаголовокОтчета);
			КонецЕсли;
			//Начислено страховых взносов 
		ИначеЕсли ИмяЯчейки = "П000010002003" или ИмяЯчейки = "П000010002101" 
			или ИмяЯчейки = "П000010002201" или ИмяЯчейки = "П000010002301" 
			или ИмяЯчейки = "П000010002401" или ИмяЯчейки = "П000010002501" тогда
			
			ОтчетОбъект = Отчеты.АнализНачисленныхНалоговИВзносов.Создать();
			ЗаголовокОтчета = "Таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Взносы.ФСС");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Организация");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Сотрудник");
			
			Если ИмяЯчейки = "П000010002003" тогда
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецДня(Отчет.мДатаКонцаПериодаОтчета));
			ИначеЕсли ИмяЯчейки = "П000010002101" тогда
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета)-1);
				
			ИначеЕсли ИмяЯчейки = "П000010002201" тогда
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета));
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецДня(Отчет.мДатаКонцаПериодаОтчета));
				
			ИначеЕсли ИмяЯчейки = "П000010002301" и КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета)) < Отчет.мДатаКонцаПериодаОтчета тогда
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета));
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета)));
				
			ИначеЕсли ИмяЯчейки = "П000010002401" и (НачалоМесяца(Отчет.мДатаКонцаПериодаОтчета)-1) < Отчет.мДатаКонцаПериодаОтчета тогда
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета))+1);
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  НачалоМесяца(КонецКвартала(Отчет.мДатаКонцаПериодаОтчета))-1);
				
			ИначеЕсли ИмяЯчейки = "П000010002501" и  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета) < Отчет.мДатаКонцаПериодаОтчета тогда
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоМесяца(КонецКвартала(Отчет.мДатаКонцаПериодаОтчета)));
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
				
			Иначе 
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", '10000102');
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  '10000101');
			КонецЕсли;	
			ТиповыеОтчеты.ОткрытьФормуРасшифровки(ОтчетОбъект, ЗаголовокОтчета);
			
			
			//РАСХОДЫ НА ЦЕЛИ ОБЯЗАТЕЛЬНОГО СОЦИАЛЬНОГО СТРАХОВАНИЯ
			
		ИначеЕсли ИмяЯчейки = "П000010015003" или ИмяЯчейки = "П000010015101" 
			или ИмяЯчейки = "П000010015201" или ИмяЯчейки = "П000010015301" 
			или ИмяЯчейки = "П000010015401" или ИмяЯчейки = "П000010015501" тогда
			
			ОтчетОбъект = Отчеты.АнализНачисленныхНалоговИВзносов.Создать();
			ЗаголовокОтчета = "Таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидПособия", "По временной нетрудоспособности за счет работодателя",  ВидСравненияКомпоновкиДанных.НеРавно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Пособия.СуммаПособия");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Организация");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Сотрудник");
			
			Если ИмяЯчейки = "П000010015003" тогда
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецДня(Отчет.мДатаКонцаПериодаОтчета));
				
			ИначеЕсли ИмяЯчейки = "П000010015101" тогда
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета)-1);
				
			ИначеЕсли ИмяЯчейки = "П000010015201" тогда
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета));
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
				
			ИначеЕсли ИмяЯчейки = "П000010015301" и КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета)) <= КонецДня(Отчет.мДатаКонцаПериодаОтчета) тогда
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета));
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета)));
				
			ИначеЕсли ИмяЯчейки = "П000010015401" и (НачалоМесяца(Отчет.мДатаКонцаПериодаОтчета)-1) <= КонецДня(Отчет.мДатаКонцаПериодаОтчета) тогда
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета))+1);
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  НачалоМесяца(КонецКвартала(Отчет.мДатаКонцаПериодаОтчета))-1);
				
			ИначеЕсли ИмяЯчейки = "П000010015501" и КонецКвартала(Отчет.мДатаКонцаПериодаОтчета) <= КонецДня(Отчет.мДатаКонцаПериодаОтчета) тогда
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоМесяца(Отчет.мДатаКонцаПериодаОтчета));
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецМесяца(Отчет.мДатаКонцаПериодаОтчета));
				
			Иначе
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", '10000102');
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  '10000101');
			КонецЕсли;	
			ТиповыеОтчеты.ОткрытьФормуРасшифровки(ОтчетОбъект, ЗаголовокОтчета);
			
			//ПОСОБИЯ РАЗДЕЛ I	
		ИначеЕсли НомерТаблицы = 2   тогда
			
			ОтчетОбъект = Отчеты.АнализНачисленныхНалоговИВзносов.Создать();
			ЗаголовокОтчета = "Таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Организация");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Сотрудник");
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецДня(Отчет.мДатаКонцаПериодаОтчета));
			
			
			// добавляем нужный ресурс для вывода в отчете
			Если НомерКолонки = 1 тогда // число случаев / кол-во получателй пособий
				ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Пособия.КолВоСлучаевПолучателейПособий");
			ИначеЕсли НомерКолонки = 3 тогда // кол-во дней и впалт пособий
				ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ОплаченныеДниКолВоВыплатПособий");
			ИначеЕсли НомерКолонки = 4 тогда // сумма пособия
				ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Пособия.СуммаПособия");
			ИначеЕсли НомерКолонки = 5 тогда //в т.ч. выплаты за счет средств федерального бюджета
				Если ИмяЯчейки = "П000020014005" тогда
					ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Пособия.СуммаПособия");
				Иначе
					ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Пособия.СуммаСверхНормПособия");
				КонецЕсли;
			КонецЕсли;
			
			Если НомерСтроки = 1 или НомерСтроки = 2 тогда 
				
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидПособия", Перечисления.ВидыПособийСоциальногоСтрахования.Нетрудоспособность);
				Если НомерСтроки = 2 тогда 
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидЗанятости", Перечисления.ВидыЗанятостиВОрганизации.Совместительство);
				КонецЕсли;
				
			ИначеЕсли НомерСтроки = 3 или НомерСтроки = 4 тогда
				
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидПособия", Перечисления.ВидыПособийСоциальногоСтрахования.БеременностьРоды);
				Если НомерСтроки = 4 тогда 
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидЗанятости", Перечисления.ВидыЗанятостиВОрганизации.Совместительство);
				КонецЕсли;
				
			ИначеЕсли НомерСтроки = 5 тогда
				
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидПособия", Перечисления.ВидыПособийСоциальногоСтрахования.ПриПостановкеНаУчетВРанниеСрокиБеременности);
				
			ИначеЕсли НомерСтроки = 6 тогда
				
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидПособия", Перечисления.ВидыПособийСоциальногоСтрахования.ПриРожденииРебенка);
				
			ИначеЕсли НомерСтроки >= 7 и НомерСтроки <= 13 тогда
				
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидПособия", Перечисления.ВидыПособийСоциальногоСтрахования.ПоУходуЗаРебенкомДоПолутораЛет);
				Если НомерСтроки >= 8 и НомерСтроки <= 10 тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидЗанятости", Перечисления.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы);
					Если НомерСтроки = 9 тогда
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.Ребенок", "Первый");
					ИначеЕсли НомерСтроки = 10 тогда
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.Ребенок", "Второй и т.д.");
					КонецЕсли;	
				ИначеЕсли НомерСтроки >= 11 и НомерСтроки <= 13 тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидЗанятости", Перечисления.ВидыЗанятостиВОрганизации.Совместительство);
					Если НомерСтроки = 12 тогда
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.Ребенок", "Первый");
					ИначеЕсли НомерСтроки = 13 тогда
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.Ребенок", "Второй и т.д.");
					КонецЕсли;	
				КонецЕсли;
				
			ИначеЕсли НомерСтроки = 14 тогда
				
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидПособия", Перечисления.ВидыПособийСоциальногоСтрахования.ДополнительныеВыходныеДниПоУходуЗаДетьмиИнвалидами);
				
			ИначеЕсли НомерСтроки = 15 тогда
				
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидПособия", Перечисления.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью);
				
			ИначеЕсли НомерСтроки = 16 тогда
				
				Список = Новый СписокЗначений;
				Список.Добавить(Перечисления.ВидыПособийСоциальногоСтрахования.ДополнительныеВыходныеДниПоУходуЗаДетьмиИнвалидами);
				Список.Добавить(Перечисления.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью);
				Список.Добавить(Перечисления.ВидыПособийСоциальногоСтрахования.ДополнительныеВыходныеДниПоУходуЗаДетьмиИнвалидами);
				Список.Добавить(Перечисления.ВидыПособийСоциальногоСтрахования.ПоУходуЗаРебенкомДоПолутораЛет);
				Список.Добавить(Перечисления.ВидыПособийСоциальногоСтрахования.ПриПостановкеНаУчетВРанниеСрокиБеременности);
				Список.Добавить(Перечисления.ВидыПособийСоциальногоСтрахования.Нетрудоспособность);
				Список.Добавить(Перечисления.ВидыПособийСоциальногоСтрахования.ПриРожденииРебенка);
				Список.Добавить(Перечисления.ВидыПособийСоциальногоСтрахования.БеременностьРоды);
				
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидПособия", Список, ВидСравненияКомпоновкиДанных.ВСписке);
				
			КонецЕсли;
			
			ТиповыеОтчеты.ОткрытьФормуРасшифровки(ОтчетОбъект, ЗаголовокОтчета);
			
			//РАСЧЕТ БАЗЫ ДЛЯ НАЧИСЛЕНИЯ СТРАХОВЫХ ВЗНОСОВ	
		ИначеЕсли НомерТаблицы = 3 и НомерКолонки <> 6 и НомерКолонки <> 7 тогда
			
			ОтчетОбъект = Отчеты.АнализНачисленныхНалоговИВзносов.Создать();
			ЗаголовокОтчета = "Таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидТарифаСтраховыхВзносов", Перечисления.ТарифыСтраховыхВзносов.ЕНВД,  ВидСравненияКомпоновкиДанных.НеРавно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидДохода", Справочники.ДоходыПоСтраховымВзносам.ПустаяСсылка(), ВидСравненияКомпоновкиДанных.НеРавно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидДохода", Справочники.ДоходыПоСтраховымВзносам.НеЯвляетсяОбъектом, ВидСравненияКомпоновкиДанных.НеРавно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидДохода", Справочники.ДоходыПоСтраховымВзносам.НеЯвляетсяОбъектом, ВидСравненияКомпоновкиДанных.НеРавно);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидДохода", Справочники.ДоходыПоСтраховымВзносам.РаспределятьПоБазовымНачислениям, ВидСравненияКомпоновкиДанных.НеРавно);
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Организация");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Сотрудник");
			
			Если НомерКолонки = 3 тогда 
				ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Взносы.Начислено");
			ИначеЕсли НомерКолонки = 4 тогда 
				ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Взносы.НеОблагаемыеСуммыВзносов");
			ИначеЕсли НомерКолонки = 5 тогда 
				ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Взносы.ОблагаемаяБазаФСС", "Сумма выплат инвалидам I, II, III групп");
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Взносы.Инвалид", истина);
			КонецЕсли;
			
			Если НомерСтроки = 1 тогда
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецДня(Отчет.мДатаКонцаПериодаОтчета));
				
			ИначеЕсли НомерСтроки = 2 тогда
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета));
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  Отчет.мДатаКонцаПериодаОтчета);
				
			ИначеЕсли НомерСтроки = 3 и КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета)) <= Отчет.мДатаКонцаПериодаОтчета тогда
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета));
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета)));
				
			ИначеЕсли НомерСтроки = 4 и НачалоМесяца(КонецКвартала(Отчет.мДатаКонцаПериодаОтчета))-1 <= Отчет.мДатаКонцаПериодаОтчета тогда
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета)) + 1);
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  НачалоМесяца(КонецКвартала(Отчет.мДатаКонцаПериодаОтчета))-1);
				
			ИначеЕсли НомерСтроки = 5 и КонецКвартала(Отчет.мДатаКонцаПериодаОтчета) <= Отчет.мДатаКонцаПериодаОтчета тогда
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоМесяца(КонецКвартала(Отчет.мДатаКонцаПериодаОтчета)));
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			Иначе
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", '10000102');
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  '10000101');
			КонецЕсли;
			
			ТиповыеОтчеты.ОткрытьФормуРасшифровки(ОтчетОбъект, ЗаголовокОтчета);
			
			//СРЕДНЯЯ ЧИСЛИНОСТЬ ЕНВД и УСН	
		ИначеЕсли ИмяЯчейки = "П000050001003" или ИмяЯчейки = "П000050002003" тогда 
			
			ОтчетОбъект = Отчеты.СредняяЧисленностьРаботниковОрганизаций.Создать();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация, ВидСравненияКомпоновкиДанных.Равно);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода", КонецДня(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "МесяцОтчета");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Дата");
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "МесяцОтчета");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Физлицо");
			ЗаголовокОтчета = "";
			Если УСН_ЕНВД = "УСН" тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "УСН", истина); 
			ИначеЕсли УСН_ЕНВД = "ЕНВД" или УСН_ЕНВД = "ЕСХН" тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ЕНВД", истина); 
			КонецЕсли;
			
			Если ИмяЯчейки = "П000050001003" тогда //Среднесписочная численность работающих, чел.
				ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "СреднеСписочнаяЧисленность"); //СредняяЧисленностьНеЕНВД
				ЗаголовокОтчета = "Среднесписочная численность работающих сотрудников";
			ИначеЕсли ИмяЯчейки = "П000050002003" тогда  //Среднесписочная численность работающих женщин
				ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "СреднеСписочнаяЧисленностьЖенщин");
				ЗаголовокОтчета = "Среднесписочная численность работающих женщин";
			КонецЕсли;
			ТиповыеОтчеты.ОткрытьФормуРасшифровки(ОтчетОбъект, ЗаголовокОтчета);
			
			// ВЫПЛАТЫ В ПОЛЬЗУ РАБОТНИКА 
		ИначеЕсли ИмяЯчейки = "П000050003003" тогда 
			
			ОтчетОбъект = Отчеты.АнализНачисленныхНалоговИВзносов.Создать();
			ЗаголовокОтчета = "Таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецДня(Отчет.мДатаКонцаПериодаОтчета));
			
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Организация");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Сотрудник");
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Взносы.Начислено");
			Если УСН_ЕНВД = "УСН" или (УСН_ЕНВД = "" и НомерАктивнойСтраницы = 1) тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидТарифаСтраховыхВзносов", Перечисления.ТарифыСтраховыхВзносов.УпрощенныйНалоговыйРежим);
			ИначеЕсли УСН_ЕНВД = "ЕНВД" или (УСН_ЕНВД = "" и НомерАктивнойСтраницы = 0 и КоличествоСтраницРаздела2 = 2) тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидТарифаСтраховыхВзносов", Перечисления.ТарифыСтраховыхВзносов.ЕНВД);
			ИначеЕсли УСН_ЕНВД = "ЕСХН" тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидТарифаСтраховыхВзносов", Перечисления.ТарифыСтраховыхВзносов.ЕСХН);
			КонецЕсли;
			ТиповыеОтчеты.ОткрытьФормуРасшифровки(ОтчетОбъект, ЗаголовокОтчета);
			
		ИначеЕсли НомерТаблицы = 7 тогда
			
			ОтчетОбъект = Отчеты.АнализНачисленныхНалоговИВзносов.Создать();
			ЗаголовокОтчета = "Таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Организация");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Сотрудник");
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецДня(Отчет.мДатаКонцаПериодаОтчета));
			
			// добавляем нужный ресурс для вывода в отчете
			Если НомерКолонки = 1 тогда // число случаев / кол-во получателй пособий
				ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Пособия.КолВоСлучаевПолучателейПособий");
			ИначеЕсли НомерКолонки = 3 тогда // кол-во дней и впалт пособий
				ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ОплаченныеДниКолВоВыплатПособий");
			ИначеЕсли НомерКолонки = 4 тогда // сумма пособия
				ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Пособия.СуммаПособия");
			ИначеЕсли НомерКолонки = 5 тогда //в т.ч. выплаты за счет средств федерального бюджета
				Если ИмяЯчейки = "П000070014005" тогда
					ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Пособия.СуммаПособия");
				Иначе
					ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Пособия.СуммаСверхНормПособия");
				КонецЕсли;
			КонецЕсли;
			
			Если УСН и НЕ ЕНВД и НЕ ЕСХН тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидТарифаСтраховыхВзносов",  Перечисления.ТарифыСтраховыхВзносов.УпрощенныйНалоговыйРежим);
			ИначеЕсли НЕ УСН и ЕНВД и НЕ ЕСХН тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидТарифаСтраховыхВзносов",  Перечисления.ТарифыСтраховыхВзносов.ЕНВД);
			ИначеЕсли НЕ УСН и НЕ ЕНВД и ЕСХН тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидТарифаСтраховыхВзносов",  Перечисления.ТарифыСтраховыхВзносов.ЕСХН);
			ИначеЕсли УСН и ЕНВД и НЕ ЕСХН тогда
				
				Если НомерАктивнойСтраницы = 1 тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидТарифаСтраховыхВзносов",  Перечисления.ТарифыСтраховыхВзносов.УпрощенныйНалоговыйРежим);
				Иначе 
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидТарифаСтраховыхВзносов",  Перечисления.ТарифыСтраховыхВзносов.ЕНВД);
				КонецЕсли;
				
			ИначеЕсли УСН и НЕ ЕНВД и ЕСХН тогда
				
				Если НомерАктивнойСтраницы = 1 тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидТарифаСтраховыхВзносов",  Перечисления.ТарифыСтраховыхВзносов.УпрощенныйНалоговыйРежим);
				Иначе 
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидТарифаСтраховыхВзносов",  Перечисления.ТарифыСтраховыхВзносов.ЕСХН);
				КонецЕсли;
				
			КонецЕсли;
			
			Если НомерСтроки = 1 или НомерСтроки = 2 тогда 
				
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидПособия", Перечисления.ВидыПособийСоциальногоСтрахования.Нетрудоспособность);
				Если НомерСтроки = 2 тогда 
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидЗанятости", Перечисления.ВидыЗанятостиВОрганизации.Совместительство);
				КонецЕсли;
				
			ИначеЕсли НомерСтроки = 3 или НомерСтроки = 4 тогда
				
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидПособия", Перечисления.ВидыПособийСоциальногоСтрахования.БеременностьРоды);
				Если НомерСтроки = 4 тогда 
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидЗанятости", Перечисления.ВидыЗанятостиВОрганизации.Совместительство);
				КонецЕсли;
				
			ИначеЕсли НомерСтроки = 5 тогда
				
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидПособия", Перечисления.ВидыПособийСоциальногоСтрахования.ПриПостановкеНаУчетВРанниеСрокиБеременности);
				
			ИначеЕсли НомерСтроки = 6 тогда
				
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидПособия", Перечисления.ВидыПособийСоциальногоСтрахования.ПриРожденииРебенка);
				
			ИначеЕсли НомерСтроки >= 7 и НомерСтроки <= 13 тогда
				
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидПособия", Перечисления.ВидыПособийСоциальногоСтрахования.ПоУходуЗаРебенкомДоПолутораЛет);
				Если НомерСтроки >= 8 и НомерСтроки <= 10 тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидЗанятости", Перечисления.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы);
					Если НомерСтроки = 9 тогда
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.Ребенок", "Первый");
					ИначеЕсли НомерСтроки = 10 тогда
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.Ребенок", "Второй и т.д.");
					КонецЕсли;	
				ИначеЕсли НомерСтроки >= 11 и НомерСтроки <= 13 тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидЗанятости", Перечисления.ВидыЗанятостиВОрганизации.Совместительство);
					Если НомерСтроки = 12 тогда
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.Ребенок", "Первый");
					ИначеЕсли НомерСтроки = 13 тогда
						ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.Ребенок", "Второй и т.д.");
					КонецЕсли;	
				КонецЕсли;
				
			ИначеЕсли НомерСтроки = 14 тогда
				
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидПособия", Перечисления.ВидыПособийСоциальногоСтрахования.ДополнительныеВыходныеДниПоУходуЗаДетьмиИнвалидами);
				
			ИначеЕсли НомерСтроки = 15 тогда
				
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидПособия", Перечисления.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью);
				
			ИначеЕсли НомерСтроки = 16 тогда
				
				Список = Новый СписокЗначений;
				Список.Добавить(Перечисления.ВидыПособийСоциальногоСтрахования.ДополнительныеВыходныеДниПоУходуЗаДетьмиИнвалидами);
				Список.Добавить(Перечисления.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью);
				Список.Добавить(Перечисления.ВидыПособийСоциальногоСтрахования.ДополнительныеВыходныеДниПоУходуЗаДетьмиИнвалидами);
				Список.Добавить(Перечисления.ВидыПособийСоциальногоСтрахования.ПоУходуЗаРебенкомДоПолутораЛет);
				Список.Добавить(Перечисления.ВидыПособийСоциальногоСтрахования.ПриПостановкеНаУчетВРанниеСрокиБеременности);
				Список.Добавить(Перечисления.ВидыПособийСоциальногоСтрахования.Нетрудоспособность);
				Список.Добавить(Перечисления.ВидыПособийСоциальногоСтрахования.ПриРожденииРебенка);
				
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидПособия", Список, ВидСравненияКомпоновкиДанных.ВСписке);
			КонецЕсли;
			
			ТиповыеОтчеты.ОткрытьФормуРасшифровки(ОтчетОбъект, ЗаголовокОтчета);
			
		ИначеЕсли НомерТаблицы = 8 тогда
			
			ОтчетОбъект = Отчеты.АнализНачисленныхНалоговИВзносов.Создать();
			ЗаголовокОтчета = "Таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Организация");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Сотрудник");
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецДня(Отчет.мДатаКонцаПериодаОтчета));
			
			
			Если НомерСтроки = 1 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидПособия", Перечисления.ВидыПособийСоциальногоСтрахования.Нетрудоспособность);
			ИначеЕсли НомерСтроки = 2 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидПособия", Перечисления.ВидыПособийСоциальногоСтрахования.БеременностьРоды);
			ИначеЕсли НомерСтроки = 3 или НомерСтроки = 4 или НомерСтроки = 5 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидПособия", Перечисления.ВидыПособийСоциальногоСтрахования.ПоУходуЗаРебенкомДоПолутораЛет);
				Если НомерСтроки = 4 тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.Ребенок", "Первый");
				ИначеЕсли НомерСтроки = 5 тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.Ребенок", "Второй и т.д.");
				КонецЕсли;	
			ИначеЕсли НомерСтроки = 6 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидПособия", Перечисления.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью);
			КонецЕсли;
			
			Если НомерКолонки >= 3 и НомерКолонки <= 5  тогда 
				
				Список = Новый СписокЗначений;
				Список.Добавить(Перечисления.ВыплатыПособийЗаСчетФедеральногоБюджета.Чернобыль);
				Список.Добавить(Перечисления.ВыплатыПособийЗаСчетФедеральногоБюджета.Маяк);
				Список.Добавить(Перечисления.ВыплатыПособийЗаСчетФедеральногоБюджета.Семипалатинск);
				Список.Добавить(Перечисления.ВыплатыПособийЗаСчетФедеральногоБюджета.ПодразделенияОсобогоРиска);
				Список.Добавить(Перечисления.ВыплатыПособийЗаСчетФедеральногоБюджета.ЗачетНестраховыхПериодов);
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВыплатаЗаСчетФедеральногоБюджета", Список, ВидСравненияКомпоновкиДанных.ВСписке);
				
			ИначеЕсли НомерКолонки >= 6 и НомерКолонки <= 8  тогда 
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВыплатаЗаСчетФедеральногоБюджета", Перечисления.ВыплатыПособийЗаСчетФедеральногоБюджета.Чернобыль);
			ИначеЕсли НомерКолонки >= 9 и НомерКолонки <= 11  тогда 
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВыплатаЗаСчетФедеральногоБюджета", Перечисления.ВыплатыПособийЗаСчетФедеральногоБюджета.Маяк);
			ИначеЕсли НомерКолонки >= 12 и НомерКолонки <= 14  тогда 
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВыплатаЗаСчетФедеральногоБюджета", Перечисления.ВыплатыПособийЗаСчетФедеральногоБюджета.Семипалатинск);
			ИначеЕсли НомерКолонки >= 15 и НомерКолонки <= 17  тогда 
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВыплатаЗаСчетФедеральногоБюджета", Перечисления.ВыплатыПособийЗаСчетФедеральногоБюджета.ПодразделенияОсобогоРиска);
			ИначеЕсли НомерКолонки >= 18 и НомерКолонки <= 20  тогда 
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВыплатаЗаСчетФедеральногоБюджета", Перечисления.ВыплатыПособийЗаСчетФедеральногоБюджета.ЗачетНестраховыхПериодов);
			КонецЕсли;
			
			ОстатокОтДеления = НомерКолонки - Цел(НомерКолонки / 3)*3;
			Если ОстатокОтДеления = 0 тогда 
				ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Пособия.КолВоСлучаевПолучателейПособий");
			ИначеЕсли ОстатокОтДеления = 1 тогда
				ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ОплаченныеДниКолВоВыплатПособий");
			ИначеЕсли ОстатокОтДеления = 2 тогда
				ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Пособия.СуммаСверхНормПособия");
			КонецЕсли;
			
			ТиповыеОтчеты.ОткрытьФормуРасшифровки(ОтчетОбъект, ЗаголовокОтчета);
			
			
			// ТАБЛИЦА 9 раздела 3 
		ИначеЕсли НомерТаблицы = 9 и (НомерКолонки = 1 или НомерКолонки = 2) тогда
			Если ИДКонфигурации = "БП" ИЛИ ИДКонфигурации = "БПКОРП" ИЛИ ИДКонфигурации = "БАУКОРП" ИЛИ ИДКонфигурации = "БАУ" Тогда
				Предупреждение("Расшифровка данной ячейки не поддерживается.");
			ИначеЕсли НомерКолонки = 1 или НомерКолонки = 2 тогда  // среднесписочная численность
				ОтчетОбъект = Отчеты.СредняяЧисленностьРаботниковОрганизаций.Создать();
				ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
				ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация, ВидСравненияКомпоновкиДанных.Равно);
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода", КонецДня(Отчет.мДатаКонцаПериодаОтчета));
				ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "МесяцОтчета");
				ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Дата");
				ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
				ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "МесяцОтчета");
				ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Физлицо");
				ЗаголовокОтчета = "";
				
				Если ИмяЯчейки = "П000090001001" тогда //Среднесписочная численность работающих, чел.
					ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "СреднеСписочнаяЧисленность"); //СредняяЧисленностьНеЕНВД
					ЗаголовокОтчета = "Среднесписочная численность работающих сотрудников";
				ИначеЕсли ИмяЯчейки = "П000090001002" тогда //Среднесписочная численность работающих инвалидов
					ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "СредняяЧисленностьИнвалидов");
					ЗаголовокОтчета = "Среднесписочная численность работающих инвалидов";
				КонецЕсли;
				ТиповыеОтчеты.ОткрытьФормуРасшифровки(ОтчетОбъект, ЗаголовокОтчета);
			КонецЕсли;	
			
		ИначеЕсли НомерТаблицы = 10 и (НомерКолонки = 3 или НомерКолонки = 1) и (НомерСтроки = 2 или НомерСтроки = 10) тогда
			
			ОтчетОбъект = Отчеты.АнализНачисленныхНалоговИВзносов.Создать();
			ЗаголовокОтчета = "Таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Организация");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Сотрудник");
			
			Если (НомерКолонки = 3 или НомерКолонки = 1) и НомерСтроки = 2 тогда // если страховый взносы от ФСС_НС
				ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Взносы.ФССНесчастныеСлучаи");
			ИначеЕсли (НомерКолонки = 3 или НомерКолонки = 1) и НомерСтроки = 10 тогда // если страховый взносы от ФСС_НС
				ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Пособия.СуммаПособия");
				
				Список = Новый СписокЗначений;
				Список.Добавить(Перечисления.ВидыПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай);
				Список.Добавить(Перечисления.ВидыПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание);
				Список.Добавить(Перечисления.ВидыПособийСоциальногоСтрахования.ДополнительныйОтпускПослеНесчастныхСлучаев);
				
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидПособия", Список, ВидСравненияКомпоновкиДанных.ВСписке);
				
			КонецЕсли;
			
			Если НомерКолонки = 1 тогда
				Если НомерСтрокиВКолонке = 0 тогда
					ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
					ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета)-1);
					
				ИначеЕсли НомерСтрокиВКолонке = 1 и КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета)) <= КонецДня(Отчет.мДатаКонцаПериодаОтчета) тогда
					ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета));
					ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета)));
					
				ИначеЕсли НомерСтрокиВКолонке = 2 и (НачалоМесяца(КонецКвартала(Отчет.мДатаКонцаПериодаОтчета))-1) <= КонецДня(Отчет.мДатаКонцаПериодаОтчета) тогда
					ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета)) + 1);
					ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  НачалоМесяца(КонецКвартала(Отчет.мДатаКонцаПериодаОтчета))-1);
					
				ИначеЕсли НомерСтрокиВКолонке = 3 и (НачалоМесяца(КонецКвартала(Отчет.мДатаКонцаПериодаОтчета))-1) <= КонецДня(Отчет.мДатаКонцаПериодаОтчета) тогда
					ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоМесяца( КонецКвартала(Отчет.мДатаКонцаПериодаОтчета)));
					ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
					
				Иначе 
					ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", '10000102');
					ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  '10000101');
				КонецЕсли;
			ИначеЕсли НомерКолонки = 3 тогда
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецДня(Отчет.мДатаКонцаПериодаОтчета));
			КонецЕсли;
			
			ТиповыеОтчеты.ОткрытьФормуРасшифровки(ОтчетОбъект, ЗаголовокОтчета);
			
		ИначеЕсли НомерТаблицы = 11 и (НомерКолонки = 3 или НомерКолонки = 4) и (НомерСтроки <> 3 и НомерСтроки <> 6 и НомерСтроки <> 9 и НомерСтроки <> 8 и НомерСтроки <> 10) тогда
			
			ОтчетОбъект = Отчеты.АнализНачисленныхНалоговИВзносов.Создать();
			ЗаголовокОтчета = "Таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
			+ ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
			
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
			ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Организация");
			ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Сотрудник");
			
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецДня(Отчет.мДатаКонцаПериодаОтчета));
			
			Если НомерКолонки = 3 тогда
				ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ОплаченныеДниКолВоВыплатПособий");
			Иначе
				ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Пособия.СуммаПособия");
			КонецЕсли;
			
			Если НомерСтроки = 1 или НомерСтроки = 2 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидПособия", Перечисления.ВидыПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай);
				Если НомерСтроки = 2 тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидЗанятости", Перечисления.ВидыЗанятостиВОрганизации.Совместительство);
				КонецЕсли;
			ИначеЕсли НомерСтроки = 4 или НомерСтроки = 5 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидПособия", Перечисления.ВидыПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание);
				Если НомерСтроки = 5 тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидЗанятости", Перечисления.ВидыЗанятостиВОрганизации.Совместительство);
				КонецЕсли;
			ИначеЕсли НомерСтроки = 7 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидПособия", Перечисления.ВидыПособийСоциальногоСтрахования.ДополнительныйОтпускПослеНесчастныхСлучаев);
			КонецЕсли;
			ТиповыеОтчеты.ОткрытьФормуРасшифровки(ОтчетОбъект, ЗаголовокОтчета);
			
		Иначе
			Предупреждение("Расшифровка данной ячейки не поддерживается.");
		КонецЕсли;
		
	КонецПроцедуры
	
	
// Открывает отчет расшифровку для формы отчета за 2011 год
// 
// Параметры
//    ФормаОтчета - ссылка на форму отчета
//    Отчет - отчет объект, который расшифровывается
//
Процедура Расшифровать4ФССза2011(Отчет, Форма)
	
	СтраницыРаздела = Неопределено;
	Если Форма.ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Раздел1_1" тогда
		ТекущаяОбласть = Форма.ЭлементыФормы.ПолеТабличногоДокументаРаздел1_1.ТекущаяОбласть;
	ИначеЕсли Форма.ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Раздел1_2" тогда
		ТекущаяОбласть = Форма.ЭлементыФормы.ПолеТабличногоДокументаРаздел1_2.ТекущаяОбласть;
	ИначеЕсли Форма.ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Раздел1_3" тогда
		ТекущаяОбласть = Форма.ЭлементыФормы.ПолеТабличногоДокументаРаздел1_3.ТекущаяОбласть;
	//ИначеЕсли Форма.ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Раздел1_4" тогда
	//	ТекущаяОбласть = Форма.ЭлементыФормы.ПолеТабличногоДокументаРаздел1_4.ТекущаяОбласть;
	ИначеЕсли Форма.ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Раздел1_7" тогда
		ТекущаяОбласть = Форма.ЭлементыФормы.ПолеТабличногоДокументаРаздел1_7.ТекущаяОбласть;
	ИначеЕсли Форма.ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Раздел2_1" тогда
		ТекущаяОбласть = Форма.ЭлементыФормы.ПолеТабличногоДокументаРаздел2_1.ТекущаяОбласть;
	ИначеЕсли Форма.ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Раздел2_2" тогда
		ТекущаяОбласть = Форма.ЭлементыФормы.ПолеТабличногоДокументаРаздел2_2.ТекущаяОбласть;
	КонецЕсли;

	Если ТекущаяОбласть = Неопределено Или Найти(ТекущаяОбласть.Имя, "П0") = 0 Тогда
		Предупреждение("Расшифровка данной ячейки не поддерживается.");
		Возврат;
	Иначе
		ИмяЯчейки = ТекущаяОбласть.Имя;
	КонецЕсли;
	
	НомерТаблицы        = Число(Сред(ИмяЯчейки,2,5));
	НомерСтроки         = Число(Сред(ИмяЯчейки,7,4));
	НомерКолонки        = Число(Сред(ИмяЯчейки,12,2));
	НомерСтрокиВКолонке = Число(Сред(ИмяЯчейки,11,1));
	
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// РАЗДЕЛ 1 Таб. 1
	
	//Начислено страховых взносов 
	Если ИмяЯчейки = "П000010002003" или ИмяЯчейки = "П000010002101" 
		  или ИмяЯчейки = "П000010002201" или ИмяЯчейки = "П000010002301" 
		  или ИмяЯчейки = "П000010002401" или ИмяЯчейки = "П000010002501" тогда
		
		ОтчетОбъект = Отчеты.АнализНачисленныхНалоговИВзносов.Создать();
 		ЗаголовокОтчета = "Таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
		                        + ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
								
		ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
		ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
		
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
		ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Взносы.ФСС");
		ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
		ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Организация");
		ГруппировкаСотрудник = ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Сотрудник");
		
		ПолеВыбора      = ГруппировкаСотрудник.Выбор.Элементы.Вставить(0, Тип("ВыбранноеПолеКомпоновкиДанных"));
		ПолеВыбора.Поле = Новый ПолеКомпоновкиДанных("SystemFields.SerialNumber");
		ПолеВыбора.Использование = истина;
		
		Если ИмяЯчейки = "П000010002003" тогда
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецДня(Отчет.мДатаКонцаПериодаОтчета));
		ИначеЕсли ИмяЯчейки = "П000010002101" тогда
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета)-1);
			
		ИначеЕсли ИмяЯчейки = "П000010002201" тогда
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецДня(Отчет.мДатаКонцаПериодаОтчета));
			
		ИначеЕсли ИмяЯчейки = "П000010002301" и КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета)) <= Отчет.мДатаКонцаПериодаОтчета тогда
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета)));
			
		ИначеЕсли ИмяЯчейки = "П000010002401" и (НачалоМесяца(КонецКвартала(Отчет.мДатаКонцаПериодаОтчета))-1) <= Отчет.мДатаКонцаПериодаОтчета тогда
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета))+1);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  НачалоМесяца(КонецКвартала(Отчет.мДатаКонцаПериодаОтчета))-1);
			
		ИначеЕсли ИмяЯчейки = "П000010002501" и  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета) <= Отчет.мДатаКонцаПериодаОтчета тогда
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоМесяца(КонецКвартала(Отчет.мДатаКонцаПериодаОтчета)));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			
		Иначе 
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", '10000102');
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  '10000101');
		КонецЕсли;	
		ТиповыеОтчеты.ОткрытьФормуРасшифровки(ОтчетОбъект, ЗаголовокОтчета);
		
		
	//РАСХОДЫ НА ЦЕЛИ ОБЯЗАТЕЛЬНОГО СОЦИАЛЬНОГО СТРАХОВАНИЯ
		
	ИначеЕсли ИмяЯчейки = "П000010015003" или ИмяЯчейки = "П000010015101" 
		  или ИмяЯчейки = "П000010015201" или ИмяЯчейки = "П000010015301" 
		  или ИмяЯчейки = "П000010015401" или ИмяЯчейки = "П000010015501" тогда
		
		ОтчетОбъект = Отчеты.АнализНачисленныхНалоговИВзносов.Создать();
 		ЗаголовокОтчета = "Таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
		                        + ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
								
		ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
		ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
		
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидПособия", "По временной нетрудоспособности за счет работодателя",  ВидСравненияКомпоновкиДанных.НеРавно);
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидПособия", Перечисления.ВидыПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай,         ВидСравненияКомпоновкиДанных.НеРавно);
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидПособия", Перечисления.ВидыПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание,          ВидСравненияКомпоновкиДанных.НеРавно);
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидПособия", Перечисления.ВидыПособийСоциальногоСтрахования.ДополнительныйОтпускПослеНесчастныхСлучаев, ВидСравненияКомпоновкиДанных.НеРавно);
		
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
		ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Пособия.СуммаПособия");
		ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
		ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Организация");
		ГруппировкаСотрудник = ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Сотрудник");
		
		ПолеВыбора      = ГруппировкаСотрудник.Выбор.Элементы.Вставить(0, Тип("ВыбранноеПолеКомпоновкиДанных"));
		ПолеВыбора.Поле = Новый ПолеКомпоновкиДанных("SystemFields.SerialNumber");
		ПолеВыбора.Использование = истина;
		
		Если ИмяЯчейки = "П000010015003" тогда
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецДня(Отчет.мДатаКонцаПериодаОтчета));
			
		ИначеЕсли ИмяЯчейки = "П000010015101" тогда
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета)-1);
			
		ИначеЕсли ИмяЯчейки = "П000010015201" тогда
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
			
		ИначеЕсли ИмяЯчейки = "П000010015301" и КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета)) <= КонецДня(Отчет.мДатаКонцаПериодаОтчета) тогда
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета)));
			
		ИначеЕсли ИмяЯчейки = "П000010015401" и (НачалоМесяца(КонецКвартала(Отчет.мДатаКонцаПериодаОтчета))-1) <= КонецДня(Отчет.мДатаКонцаПериодаОтчета) тогда
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета))+1);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  НачалоМесяца(КонецКвартала(Отчет.мДатаКонцаПериодаОтчета))-1);
			
		ИначеЕсли ИмяЯчейки = "П000010015501" и КонецКвартала(Отчет.мДатаКонцаПериодаОтчета) <= КонецДня(Отчет.мДатаКонцаПериодаОтчета) тогда
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоМесяца(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецМесяца(Отчет.мДатаКонцаПериодаОтчета));
			
		Иначе
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", '10000102');
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  '10000101');
		КонецЕсли;	
		ТиповыеОтчеты.ОткрытьФормуРасшифровки(ОтчетОбъект, ЗаголовокОтчета);
		
	//ПОСОБИЯ РАЗДЕЛ I	
	ИначеЕсли НомерТаблицы = 2 И НомерСтроки < 13 тогда
	
		ОтчетОбъект = Отчеты.АнализНачисленныхНалоговИВзносов.Создать();
 		ЗаголовокОтчета = "Таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
		                        + ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
								
		ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
		ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
		ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
		ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Организация");
		ГруппировкаСотрудник = ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Сотрудник");
		
		ПолеВыбора      = ГруппировкаСотрудник.Выбор.Элементы.Вставить(0, Тип("ВыбранноеПолеКомпоновкиДанных"));
		ПолеВыбора.Поле = Новый ПолеКомпоновкиДанных("SystemFields.SerialNumber");
		ПолеВыбора.Использование = истина;
		
		ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
		ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецДня(Отчет.мДатаКонцаПериодаОтчета));

	
	    // добавляем нужный ресурс для вывода в отчете
		Если НомерКолонки = 1 тогда // число случаев / кол-во получателй пособий
 			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Пособия.КолВоСлучаевПолучателейПособий");
		ИначеЕсли НомерКолонки = 3 тогда // кол-во дней и впалт пособий
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ОплаченныеДниКолВоВыплатПособий");
		ИначеЕсли НомерКолонки = 4 тогда // сумма пособия
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Пособия.СуммаПособия");
		ИначеЕсли НомерКолонки = 5 тогда //в т.ч. выплаты за счет средств федерального бюджета
			Если ИмяЯчейки = "П000020010005" тогда
				ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Пособия.СуммаПособия");
			Иначе
				ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Пособия.СуммаСверхНормПособия");
			КонецЕсли;
		КонецЕсли;
		
		Если НомерСтроки = 1 или НомерСтроки = 2 тогда 
			
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидПособия", Перечисления.ВидыПособийСоциальногоСтрахования.Нетрудоспособность);
			Если НомерСтроки = 2 тогда 
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидЗанятости", Перечисления.ВидыЗанятостиВОрганизации.Совместительство);
			КонецЕсли;
			
		ИначеЕсли НомерСтроки = 3 или НомерСтроки = 4 тогда
			
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидПособия", Перечисления.ВидыПособийСоциальногоСтрахования.БеременностьРоды);
			Если НомерСтроки = 4 тогда 
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидЗанятости", Перечисления.ВидыЗанятостиВОрганизации.Совместительство);
			КонецЕсли;
			
		ИначеЕсли НомерСтроки = 5 тогда
			
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидПособия", Перечисления.ВидыПособийСоциальногоСтрахования.ПриПостановкеНаУчетВРанниеСрокиБеременности);
			
		ИначеЕсли НомерСтроки = 6 тогда
			
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидПособия", Перечисления.ВидыПособийСоциальногоСтрахования.ПриРожденииРебенка);
			
		ИначеЕсли НомерСтроки >= 7 и НомерСтроки <= 9 тогда
			
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидПособия", Перечисления.ВидыПособийСоциальногоСтрахования.ПоУходуЗаРебенкомДоПолутораЛет);
				Если НомерСтроки = 8 тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.Ребенок", "Первый");
				ИначеЕсли НомерСтроки = 9 тогда
					ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.Ребенок", "Второй и т.д.");
				КонецЕсли;	
		
		ИначеЕсли НомерСтроки = 10 тогда
			
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидПособия", Перечисления.ВидыПособийСоциальногоСтрахования.ДополнительныеВыходныеДниПоУходуЗаДетьмиИнвалидами);
			
		ИначеЕсли НомерСтроки = 11 тогда
			
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидПособия", Перечисления.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью);
			
		ИначеЕсли НомерСтроки = 12 тогда
			
			Список = Новый СписокЗначений;
			Список.Добавить(Перечисления.ВидыПособийСоциальногоСтрахования.ДополнительныеВыходныеДниПоУходуЗаДетьмиИнвалидами);
			Список.Добавить(Перечисления.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью);
			Список.Добавить(Перечисления.ВидыПособийСоциальногоСтрахования.ДополнительныеВыходныеДниПоУходуЗаДетьмиИнвалидами);
			Список.Добавить(Перечисления.ВидыПособийСоциальногоСтрахования.ПоУходуЗаРебенкомДоПолутораЛет);
			Список.Добавить(Перечисления.ВидыПособийСоциальногоСтрахования.ПриПостановкеНаУчетВРанниеСрокиБеременности);
			Список.Добавить(Перечисления.ВидыПособийСоциальногоСтрахования.Нетрудоспособность);
			Список.Добавить(Перечисления.ВидыПособийСоциальногоСтрахования.ПриРожденииРебенка);
			Список.Добавить(Перечисления.ВидыПособийСоциальногоСтрахования.БеременностьРоды);
			
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидПособия", Список, ВидСравненияКомпоновкиДанных.ВСписке);
			
		КонецЕсли;
		
		ТиповыеОтчеты.ОткрытьФормуРасшифровки(ОтчетОбъект, ЗаголовокОтчета);
		
	//РАСЧЕТ БАЗЫ ДЛЯ НАЧИСЛЕНИЯ СТРАХОВЫХ ВЗНОСОВ	
	ИначеЕсли НомерТаблицы = 3 и НомерСтроки <> 3 тогда

		ОтчетОбъект = Отчеты.АнализНачисленныхНалоговИВзносов.Создать();
 		ЗаголовокОтчета = "Таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
		                        + ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
								
		ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
		ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОтрицательнаяБазаЗаГодПоВзносам", Ложь,  ВидСравненияКомпоновкиДанных.Равно);
		
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидДохода", Справочники.ДоходыПоСтраховымВзносам.ПустаяСсылка(), ВидСравненияКомпоновкиДанных.НеРавно);
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидДохода", Справочники.ДоходыПоСтраховымВзносам.НеЯвляетсяОбъектом, ВидСравненияКомпоновкиДанных.НеРавно);
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидДохода", Справочники.ДоходыПоСтраховымВзносам.РаспределятьПоБазовымНачислениям, ВидСравненияКомпоновкиДанных.НеРавно);
		ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
		ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Организация");
		ГруппировкаСотрудник = ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Сотрудник");
		
		ПолеВыбора      = ГруппировкаСотрудник.Выбор.Элементы.Вставить(0, Тип("ВыбранноеПолеКомпоновкиДанных"));
		ПолеВыбора.Поле = Новый ПолеКомпоновкиДанных("SystemFields.SerialNumber");
		ПолеВыбора.Использование = истина;
		
		Если НомерСтроки = 1 тогда 
 			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Взносы.Начислено");
        ИначеЕсли НомерСтроки = 2 тогда 
 			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Взносы.НеОблагаемыеСуммыВзносов");
        ИначеЕсли НомерСтроки = 4 тогда 
 			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Взносы.ОблагаемаяБазаФСС");
        ИначеЕсли НомерСтроки = 5 тогда 
 			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Взносы.ОблагаемаяБазаФСС", "Сумма выплат инвалидам I, II, III групп");
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Взносы.Инвалид", истина);
		КонецЕсли;
		
		Если НомерКолонки = 3 тогда
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецДня(Отчет.мДатаКонцаПериодаОтчета));
			
		ИначеЕсли НомерКолонки = 4 и КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета)) <= Отчет.мДатаКонцаПериодаОтчета тогда
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета)));
			
		ИначеЕсли НомерКолонки = 5 и НачалоМесяца(КонецКвартала(Отчет.мДатаКонцаПериодаОтчета))-1 <= Отчет.мДатаКонцаПериодаОтчета тогда
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета)) + 1);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  НачалоМесяца(КонецКвартала(Отчет.мДатаКонцаПериодаОтчета))-1);
			
		ИначеЕсли НомерКолонки = 6 и КонецКвартала(Отчет.мДатаКонцаПериодаОтчета) <= Отчет.мДатаКонцаПериодаОтчета тогда
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоМесяца(КонецКвартала(Отчет.мДатаКонцаПериодаОтчета)));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
		Иначе
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", '10000102');
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  '10000101');
		КонецЕсли;
		
		ТиповыеОтчеты.ОткрытьФормуРасшифровки(ОтчетОбъект, ЗаголовокОтчета);
		
	ИначеЕсли НомерТаблицы = 5 тогда
		
		ОтчетОбъект = Отчеты.АнализНачисленныхНалоговИВзносов.Создать();
 		ЗаголовокОтчета = "Таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
		                        + ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
								
		ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
		ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
		ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
		ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Организация");
		ГруппировкаСотрудник = ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Сотрудник");
		
		ПолеВыбора      = ГруппировкаСотрудник.Выбор.Элементы.Вставить(0, Тип("ВыбранноеПолеКомпоновкиДанных"));
		ПолеВыбора.Поле = Новый ПолеКомпоновкиДанных("SystemFields.SerialNumber");
		ПолеВыбора.Использование = истина;
		
 		ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
		ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецДня(Отчет.мДатаКонцаПериодаОтчета));


		Если НомерСтроки = 1 тогда
   			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидПособия", Перечисления.ВидыПособийСоциальногоСтрахования.Нетрудоспособность);
		ИначеЕсли НомерСтроки = 2 тогда
   			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидПособия", Перечисления.ВидыПособийСоциальногоСтрахования.БеременностьРоды);
		ИначеЕсли НомерСтроки = 3 или НомерСтроки = 4 или НомерСтроки = 5 тогда
   			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидПособия", Перечисления.ВидыПособийСоциальногоСтрахования.ПоУходуЗаРебенкомДоПолутораЛет);
			Если НомерСтроки = 4 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.Ребенок", "Первый");
			ИначеЕсли НомерСтроки = 5 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.Ребенок", "Второй и т.д.");
			КонецЕсли;	
		ИначеЕсли НомерСтроки = 6 тогда
   			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидПособия", Перечисления.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью);
		КонецЕсли;
		
		Если НомерКолонки >= 3 и НомерКолонки <= 5  тогда 
			
			Список = Новый СписокЗначений;
			Список.Добавить(Перечисления.ВыплатыПособийЗаСчетФедеральногоБюджета.Чернобыль);
			Список.Добавить(Перечисления.ВыплатыПособийЗаСчетФедеральногоБюджета.Маяк);
			Список.Добавить(Перечисления.ВыплатыПособийЗаСчетФедеральногоБюджета.Семипалатинск);
			Список.Добавить(Перечисления.ВыплатыПособийЗаСчетФедеральногоБюджета.ПодразделенияОсобогоРиска);
			Список.Добавить(Перечисления.ВыплатыПособийЗаСчетФедеральногоБюджета.ЗачетНестраховыхПериодов);
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВыплатаЗаСчетФедеральногоБюджета", Список, ВидСравненияКомпоновкиДанных.ВСписке);
			
		ИначеЕсли НомерКолонки >= 6 и НомерКолонки <= 8  тогда 
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВыплатаЗаСчетФедеральногоБюджета", Перечисления.ВыплатыПособийЗаСчетФедеральногоБюджета.Чернобыль);
		ИначеЕсли НомерКолонки >= 9 и НомерКолонки <= 11  тогда 
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВыплатаЗаСчетФедеральногоБюджета", Перечисления.ВыплатыПособийЗаСчетФедеральногоБюджета.Маяк);
		ИначеЕсли НомерКолонки >= 12 и НомерКолонки <= 14  тогда 
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВыплатаЗаСчетФедеральногоБюджета", Перечисления.ВыплатыПособийЗаСчетФедеральногоБюджета.Семипалатинск);
		ИначеЕсли НомерКолонки >= 15 и НомерКолонки <= 17  тогда 
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВыплатаЗаСчетФедеральногоБюджета", Перечисления.ВыплатыПособийЗаСчетФедеральногоБюджета.ПодразделенияОсобогоРиска);
		ИначеЕсли НомерКолонки >= 18 и НомерКолонки <= 20  тогда 
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВыплатаЗаСчетФедеральногоБюджета", Перечисления.ВыплатыПособийЗаСчетФедеральногоБюджета.ЗачетНестраховыхПериодов);
		КонецЕсли;
	
		ОстатокОтДеления = НомерКолонки - Цел(НомерКолонки / 3)*3;
		Если ОстатокОтДеления = 0 тогда 
 			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Пособия.КолВоСлучаевПолучателейПособий");
		ИначеЕсли ОстатокОтДеления = 1 тогда
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ОплаченныеДниКолВоВыплатПособий");
		ИначеЕсли ОстатокОтДеления = 2 тогда
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Пособия.СуммаСверхНормПособия");
		КонецЕсли;
		
		ТиповыеОтчеты.ОткрытьФормуРасшифровки(ОтчетОбъект, ЗаголовокОтчета);
		
		
	// ТАБЛИЦА 6 раздела 2 
	ИначеЕсли НомерТаблицы = 6 и (НомерКолонки = 3 или НомерКолонки = 4) тогда
		
		НомерСтроки = НомерСтрокиВКолонке;
		НомерСтрокиВКолонке = 0;
		
		ОтчетОбъект = Отчеты.АнализНачисленныхНалоговИВзносов.Создать();
 		ЗаголовокОтчета = "Таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
		                        + ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
								
		ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
		ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ОтрицательнаяБазаЗаГодПоВзносам", Ложь,  ВидСравненияКомпоновкиДанных.Равно);
		
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидДохода", Справочники.ДоходыПоСтраховымВзносам.ПустаяСсылка(), ВидСравненияКомпоновкиДанных.НеРавно);
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидДохода", Справочники.ДоходыПоСтраховымВзносам.НеЯвляетсяОбъектом, ВидСравненияКомпоновкиДанных.НеРавно);
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "ВидДохода", Справочники.ДоходыПоСтраховымВзносам.РаспределятьПоБазовымНачислениям, ВидСравненияКомпоновкиДанных.НеРавно);
		ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
		ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Организация");
		ГруппировкаСотрудник = ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Сотрудник");
		
		ПолеВыбора      = ГруппировкаСотрудник.Выбор.Элементы.Вставить(0, Тип("ВыбранноеПолеКомпоновкиДанных"));
		ПолеВыбора.Поле = Новый ПолеКомпоновкиДанных("SystemFields.SerialNumber");
		ПолеВыбора.Использование = истина;
		
		Если НомерКолонки = 3 тогда 
 			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Взносы.ОблагаемаяБазаФСС_НС");
        ИначеЕсли НомерКолонки = 4 тогда 
 			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Взносы.ОблагаемаяБазаФСС_НС", "Сумма выплат инвалидам I, II, III групп");
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Взносы.Инвалид", истина);
		КонецЕсли;
		
		Если НомерСтроки = 1 тогда
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецДня(Отчет.мДатаКонцаПериодаОтчета));
			
		ИначеЕсли НомерСтроки = 2 тогда
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  Отчет.мДатаКонцаПериодаОтчета);
			
		ИначеЕсли НомерСтроки = 3 и КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета)) <= Отчет.мДатаКонцаПериодаОтчета тогда
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета)));
			
		ИначеЕсли НомерСтроки = 4 и НачалоМесяца(КонецКвартала(Отчет.мДатаКонцаПериодаОтчета))-1 <= Отчет.мДатаКонцаПериодаОтчета тогда
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета)) + 1);
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  НачалоМесяца(КонецКвартала(Отчет.мДатаКонцаПериодаОтчета))-1);
			
		ИначеЕсли НомерСтроки = 5 и КонецКвартала(Отчет.мДатаКонцаПериодаОтчета) <= Отчет.мДатаКонцаПериодаОтчета тогда
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоМесяца(КонецКвартала(Отчет.мДатаКонцаПериодаОтчета)));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
		Иначе
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", '10000102');
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  '10000101');
		КонецЕсли;
		
		ТиповыеОтчеты.ОткрытьФормуРасшифровки(ОтчетОбъект, ЗаголовокОтчета);
		
	ИначеЕсли НомерТаблицы = 7 и (НомерКолонки = 3 или НомерКолонки = 1) и (НомерСтроки = 2 или НомерСтроки = 11) тогда
		
		ОтчетОбъект = Отчеты.АнализНачисленныхНалоговИВзносов.Создать();
 		ЗаголовокОтчета = "Таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
		                        + ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
								
		ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
		ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
		ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
		ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Организация");
		ГруппировкаСотрудник = ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Сотрудник");
		
		ПолеВыбора      = ГруппировкаСотрудник.Выбор.Элементы.Вставить(0, Тип("ВыбранноеПолеКомпоновкиДанных"));
		ПолеВыбора.Поле = Новый ПолеКомпоновкиДанных("SystemFields.SerialNumber");
		ПолеВыбора.Использование = истина;

		Если (НомерКолонки = 3 или НомерКолонки = 1) и НомерСтроки = 2 тогда // если страховый взносы от ФСС_НС
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Взносы.ФССНесчастныеСлучаи");
		ИначеЕсли (НомерКолонки = 3 или НомерКолонки = 1) и НомерСтроки = 11 тогда
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Пособия.СуммаПособия");
			
			Список = Новый СписокЗначений;
			Список.Добавить(Перечисления.ВидыПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай);
			Список.Добавить(Перечисления.ВидыПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание);
			Список.Добавить(Перечисления.ВидыПособийСоциальногоСтрахования.ДополнительныйОтпускПослеНесчастныхСлучаев);
			
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидПособия", Список, ВидСравненияКомпоновкиДанных.ВСписке);
			
		КонецЕсли;
		
		Если НомерКолонки = 1 тогда
			Если НомерСтрокиВКолонке = 0 тогда
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета)-1);
				
			ИначеЕсли НомерСтрокиВКолонке = 1 и КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета)) <= Отчет.мДатаКонцаПериодаОтчета тогда
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета));
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета)));
				
			ИначеЕсли НомерСтрокиВКолонке = 2 и НачалоМесяца(КонецКвартала(Отчет.мДатаКонцаПериодаОтчета))-1 <= Отчет.мДатаКонцаПериодаОтчета тогда
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", КонецМесяца(НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета)) + 1);
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  НачалоМесяца(КонецКвартала(Отчет.мДатаКонцаПериодаОтчета))-1);
				
			ИначеЕсли НомерСтрокиВКолонке = 3 и КонецКвартала(Отчет.мДатаКонцаПериодаОтчета) <= Отчет.мДатаКонцаПериодаОтчета тогда
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоМесяца( КонецКвартала(Отчет.мДатаКонцаПериодаОтчета)));
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецКвартала(Отчет.мДатаКонцаПериодаОтчета));
				
			ИначеЕсли НомерСтрокиВКолонке = 4 тогда
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоКвартала(Отчет.мДатаКонцаПериодаОтчета));
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  Отчет.мДатаКонцаПериодаОтчета);
				
			Иначе 
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", '10000102');
				ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  '10000101');
			КонецЕсли;
		ИначеЕсли НомерКолонки = 3 тогда
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
			ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецДня(Отчет.мДатаКонцаПериодаОтчета));
		КонецЕсли;
		
		ТиповыеОтчеты.ОткрытьФормуРасшифровки(ОтчетОбъект, ЗаголовокОтчета);
		
	ИначеЕсли НомерТаблицы = 8 и (НомерКолонки = 3 или НомерКолонки = 4) и (НомерСтроки <> 3 и НомерСтроки <> 6 и НомерСтроки <> 9 и НомерСтроки <> 8 и НомерСтроки <> 10) тогда
		
		ОтчетОбъект = Отчеты.АнализНачисленныхНалоговИВзносов.Создать();
 		ЗаголовокОтчета = "Таблица " + НомерТаблицы + " строка " + НомерСтроки + " колонка " + НомерКолонки 
		                        + ?(НомерСтрокиВКолонке <> 0, " (строка в колонке " + НомерСтрокиВКолонке + ")", "");
								
		ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
		ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
		ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Организация", Отчет.Организация,  ВидСравненияКомпоновкиДанных.Равно);
		ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
		ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Организация");
		ГруппировкаСотрудник = ТиповыеОтчеты.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, "Сотрудник");
		
		ПолеВыбора      = ГруппировкаСотрудник.Выбор.Элементы.Вставить(0, Тип("ВыбранноеПолеКомпоновкиДанных"));
		ПолеВыбора.Поле = Новый ПолеКомпоновкиДанных("SystemFields.SerialNumber");
		ПолеВыбора.Использование = истина;
		
		ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "НачалоПериода", НачалоГода(Отчет.мДатаКонцаПериодаОтчета));
		ТиповыеОтчеты.УстановитьПараметр(ОтчетОбъект.КомпоновщикНастроек, "КонецПериода",  КонецДня(Отчет.мДатаКонцаПериодаОтчета));
		
		Если НомерКолонки = 3 тогда
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ОплаченныеДниКолВоВыплатПособий");
		Иначе
			ТиповыеОтчеты.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, "Пособия.СуммаПособия");
		КонецЕсли;
		
		Если НомерСтроки = 1 или НомерСтроки = 2 тогда
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидПособия", Перечисления.ВидыПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай);
			Если НомерСтроки = 2 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидЗанятости", Перечисления.ВидыЗанятостиВОрганизации.Совместительство);
			КонецЕсли;
		ИначеЕсли НомерСтроки = 4 или НомерСтроки = 5 тогда
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидПособия", Перечисления.ВидыПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание);
			Если НомерСтроки = 5 тогда
				ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидЗанятости", Перечисления.ВидыЗанятостиВОрганизации.Совместительство);
			КонецЕсли;
		ИначеЕсли НомерСтроки = 7 тогда
			ТиповыеОтчеты.ДобавитьОтбор(ОтчетОбъект.КомпоновщикНастроек, "Пособия.ВидПособия", Перечисления.ВидыПособийСоциальногоСтрахования.ДополнительныйОтпускПослеНесчастныхСлучаев);
		КонецЕсли;
		ТиповыеОтчеты.ОткрытьФормуРасшифровки(ОтчетОбъект, ЗаголовокОтчета);
		
	Иначе
		Предупреждение("Расшифровка данной ячейки не поддерживается.");
	КонецЕсли;
	
КонецПроцедуры

	////////////////////////////////////////////////////////////////////////////////
	// РАСШИФРОВКА ОТЧЕТОВ
	
	// Открывает отчет расшифровку для регламентированной формы 4-ФСС
	// 
	// Параметры
	//    ФормаОтчета - ссылка на форму отчета
	//    Отчет - отчет объект, который расшифровывается
	//
	Процедура ВывестиОтчетРасшифровку(ВидРасшифровки, ОтчетОбъект, ФормаОтчета, Расшифровка = Неопределено, СтандартнаяОбработка = ложь) Экспорт
		
		Если ВидРасшифровки = "РегламентированныйОтчет4ФСС_2007_2009" тогда
			Расшифровать4ФССза2007_2009(ОтчетОбъект, ФормаОтчета);
		ИначеЕсли ВидРасшифровки = "РегламентированныйОтчет4аФСС_2007_2009" тогда
			Расшифровать4аФССза2007(ОтчетОбъект, ФормаОтчета);
		ИначеЕсли ВидРасшифровки = "РегламентированныйОтчет4ФСС_2010" тогда
			Расшифровать4ФССза2010(ОтчетОбъект, ФормаОтчета);
		ИначеЕсли ВидРасшифровки = "РегламентированныйОтчет4ФСС_2011" тогда
			Расшифровать4ФССза2011(ОтчетОбъект, ФормаОтчета);	
		ИначеЕсли ВидРасшифровки = "РегламентированныйОтчетРВ3_2010" тогда
			РасшифроватьРСВ3за2010(ОтчетОбъект, ФормаОтчета);
		ИначеЕсли ВидРасшифровки = "РегламентированныйОтчетРСВ1_2010" тогда		
			РасшифроватьРСВ1за2010(ОтчетОбъект, ФормаОтчета);
		ИначеЕсли ВидРасшифровки = "РегламентированнаяФормаКарточкаПоЕСН" тогда
			Если Расшифровка <> Неопределено тогда
				ЗаполнениеРегламентированнойОтчетностиПереопределяемый.РасшифроватьКарточкаПоЕСН(ОтчетОбъект, ФормаОтчета, Расшифровка, СтандартнаяОбработка);
			КонецЕсли
		ИначеЕсли ВидРасшифровки = "РегламентированнаяФормаКарточкаПоОПС" тогда
			Если Расшифровка <> Неопределено тогда
				ЗаполнениеРегламентированнойОтчетностиПереопределяемый.РасшифроватьКарточкаПоОПС(ОтчетОбъект, ФормаОтчета, Расшифровка, СтандартнаяОбработка);
			КонецЕсли
		ИначеЕсли ВидРасшифровки = "РегламентированнаяФормаСводнаяКарточкаПоЕСН" тогда
			Если Расшифровка <> Неопределено тогда
				ЗаполнениеРегламентированнойОтчетностиПереопределяемый.РасшифроватьСводнуюКарточкуПоЕСН(ОтчетОбъект, ФормаОтчета, Расшифровка, СтандартнаяОбработка);
			КонецЕсли
		ИначеЕсли ВидРасшифровки = "РегламентированнаяФормаСводнаяКарточкаПоОПС" тогда
			Если Расшифровка <> Неопределено тогда
				ЗаполнениеРегламентированнойОтчетностиПереопределяемый.РасшифроватьСводнуюКарточкуПоОПС(ОтчетОбъект, ФормаОтчета, Расшифровка, СтандартнаяОбработка);
			КонецЕсли
		ИначеЕсли ВидРасшифровки = "РегламентированныйОтчетАвансыПоЕСН" тогда
			ЗаполнениеРегламентированнойОтчетностиПереопределяемый.РасшифроватьАвансыЕСН(ОтчетОбъект, ФормаОтчета, Расшифровка, СтандартнаяОбработка);
		ИначеЕсли ВидРасшифровки = "РегламентированныйОтчетАвансыПФР" тогда
			ЗаполнениеРегламентированнойОтчетностиПереопределяемый.РасшифроватьАвансыПФР(ОтчетОбъект, ФормаОтчета, Расшифровка, СтандартнаяОбработка);
		ИначеЕсли ВидРасшифровки = "РегламентированныйОтчетЕСН" тогда
			ЗаполнениеРегламентированнойОтчетностиПереопределяемый.РасшифроватьАвансыЕСН(ОтчетОбъект, ФормаОтчета, Расшифровка, СтандартнаяОбработка);
		ИначеЕсли ВидРасшифровки = "РегламентированныйОтчетПФР" тогда
			ЗаполнениеРегламентированнойОтчетностиПереопределяемый.РасшифроватьОтчетПФР(ОтчетОбъект, ФормаОтчета, Расшифровка, СтандартнаяОбработка);
		КонецЕсли;
		
	КонецПроцедуры
	
	Процедура ВывестиВедомостьПоПособиям(ОтчетОбъект, ФормаОтчета) Экспорт
		Отчет = Отчеты.РасшифровкаОтчетов4ФСС.Создать();
		Отчет.КомпоновщикНастроек.Настройки.Структура.Очистить();
		ЭлементСтруктуры = Отчет.КомпоновщикНастроек.Настройки.Структура.Добавить(Тип("ТаблицаКомпоновкиДанных"));
		ГруппировкаСКД = ТиповыеОтчеты.ДобавитьГруппировку(Отчет.КомпоновщикНастроек, "ФизЛицо");
		СтрокаГруппировки = ГруппировкаСКД.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
		СтрокаГруппировки.Поле = Новый ПолеКомпоновкиДанных("ВидПоказателя");
		СтрокаГруппировки = ГруппировкаСКД.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
		СтрокаГруппировки.Поле = Новый ПолеКомпоновкиДанных("ДокументОснование");
		ГруппКолонок = ТиповыеОтчеты.ДобавитьГруппировку(Отчет.КомпоновщикНастроек, "Группа", ложь);
		ТиповыеОтчеты.ДобавитьОтбор(ГруппКолонок.Отбор, "Результат", 0, ВидСравненияКомпоновкиДанных.НеРавно);
		
		ТиповыеОтчеты.УстановитьПараметр(Отчет.КомпоновщикНастроек, "НачалоПериода", ФормаОтчета.мДатаНачалаПериодаОтчета);
		ТиповыеОтчеты.УстановитьПараметр(Отчет.КомпоновщикНастроек, "КонецПериода",  ФормаОтчета.мДатаКонцаПериодаОтчета);
		ТиповыеОтчеты.ДобавитьОтбор(Отчет.КомпоновщикНастроек,      "ВидПоказателя", "Скорректирована общая сумма", ВидСравненияКомпоновкиДанных.НеРавно);
		ТиповыеОтчеты.ДобавитьОтбор(Отчет.КомпоновщикНастроек,      "ВидПоказателя", Перечисления.ВидыПособийСоциальногоСтрахования.ПустаяСсылка(), ВидСравненияКомпоновкиДанных.НеРавно);
		ТиповыеОтчеты.ДобавитьОтбор(Отчет.КомпоновщикНастроек,      "Организация",   ФормаОтчета.Организация, ВидСравненияКомпоновкиДанных.Равно);
		СписокЗначенийГрупп = Новый СписокЗначений;
		СписокЗначенийГрупп.Добавить("Всего сумма пособия (раздел 1)");
		СписокЗначенийГрупп.Добавить("Оплачено дней пособия (раздел 1)");
		СписокЗначенийГрупп.Добавить("Всего страховых случаев (раздел 1)");
		СписокЗначенийГрупп.Добавить("в т.ч. сумма сверх нормы (раздел 1)");
		СписокЗначенийГрупп.Добавить("Всего сумма пособия");
		СписокЗначенийГрупп.Добавить("Оплачено дней пособия");
		СписокЗначенийГрупп.Добавить("Всего страховых случаев");
		СписокЗначенийГрупп.Добавить("в т.ч. сумма сверх нормы");
		ТиповыеОтчеты.ДобавитьОтбор(Отчет.КомпоновщикНастроек, "Группа",   СписокЗначенийГрупп, ВидСравненияКомпоновкиДанных.ВСписке);
		
		ЗнПараметрЗаголовок = Отчет.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Title"));
		ЗнПараметрЗаголовок.Значение = "Реестр пособий ФСС";
		Форма = Отчет.ПолучитьФорму("ФормаОтчета");
		Форма.ОбновитьОтчет();
		Форма.Открыть();
	КонецПроцедуры
	
#КонецЕсли



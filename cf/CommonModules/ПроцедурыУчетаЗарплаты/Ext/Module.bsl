Процедура ПодборНачислений(Запрос, Ссылка, УчетнаяПолитика, ПериодРегистрации, ОтражениеВУчете, ПромежуточнаяТаблица, ОтборПоДокументу = Ложь) Экспорт
	
	Если ПромежуточнаяТаблица.Колонки.Найти("Ссылка") = Неопределено Тогда
		ПромежуточнаяТаблица.Колонки.Добавить("Ссылка");		
		ПромежуточнаяТаблица.ЗаполнитьЗначения(Ссылка, "Ссылка");		
	КонецЕсли;
	
	Организация = Ссылка.Организация;
	ГоловнаяОрганизация = ОбщегоНазначения.ГоловнаяОрганизация(Организация);	
	
	ПрименениеУСН = НалоговыйУчетУСН.ПрименениеУСН(Организация, КонецМесяца(ПериодРегистрации));
	ОСН_ФизЛицо = (Организация.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо И НЕ ПрименениеУСН);
	НеВедетсяНУ = ПрименениеУСН ИЛИ ОСН_ФизЛицо;
	мПоддержкаПБУ18 = НалоговыйУчет.ПрименениеПБУ18(Организация, Ссылка.Дата);	
	мОбъектНалогообложенияУСН 							= УчетнаяПолитика.ОбъектНалогообложенияУСН;
	мУСН 												= УчетнаяПолитика.УСН;
	мВариантУчетаРасходовПоНалогамСФОТВНалоговомУчете	= УчетнаяПолитика.ВариантУчетаРасходовПоНалогамСФОТВНалоговомУчете;
	ОСН_ФизЛицо = (Организация.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо И НЕ мУСН);
	
	//////////////////////////////////////////////////////////////////////////////////////////////////
	// отражение начислений
	
	// БУНачисления
	//	Поля:
	//		СчетДт
	//		СубконтоДт1
	//		СубконтоДт2
	//		СубконтоДт3
	//		СчетКт
	//		СубконтоКт1
	//		СубконтоКт2
	//		СубконтоКт3
	//		СчетДтНУ,
	//		Субконто255НК,
	//		Результат
	// Объединение:
	// 
	
	БУНачисленияТекст = 
	"ВЫБРАТЬ
	|	Доходы.ВидРасчета.СпособОтраженияВБухучете.СчетДт КАК СчетДт,
	|	ВЫБОР
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт1 ССЫЛКА Справочник.ФизическиеЛица
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт1 = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|			ТОГДА Доходы.Сотрудник.Физлицо
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт1 ССЫЛКА Справочник.ПодразделенияОрганизаций
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт1 = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ТОГДА Доходы.ПодразделениеОрганизации
	|		ИНАЧЕ Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт1
	|	КОНЕЦ КАК СубконтоДт1,
	|	ВЫБОР
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт2 ССЫЛКА Справочник.ФизическиеЛица
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт2 = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|			ТОГДА Доходы.Сотрудник.Физлицо
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт2 ССЫЛКА Справочник.ПодразделенияОрганизаций
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт2 = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ТОГДА Доходы.ПодразделениеОрганизации
	|		ИНАЧЕ Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт2
	|	КОНЕЦ КАК СубконтоДт2,
	|	ВЫБОР
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт3 ССЫЛКА Справочник.ФизическиеЛица
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт3 = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|			ТОГДА Доходы.Сотрудник.Физлицо
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт3 ССЫЛКА Справочник.ПодразделенияОрганизаций
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт3 = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ТОГДА Доходы.ПодразделениеОрганизации
	|		ИНАЧЕ Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт3
	|	КОНЕЦ КАК СубконтоДт3,
	|	Доходы.ВидРасчета.СпособОтраженияВБухучете.СчетДтНУ КАК СчетДтНУ,
	|	ВЫБОР
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ1 ССЫЛКА Справочник.ФизическиеЛица
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ1 = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|			ТОГДА Доходы.Сотрудник.Физлицо
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ1 ССЫЛКА Справочник.ПодразделенияОрганизаций
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ1 = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ТОГДА Доходы.ПодразделениеОрганизации
	|		ИНАЧЕ Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ1
	|	КОНЕЦ КАК СубконтоДтНУ1,
	|	ВЫБОР
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ2 ССЫЛКА Справочник.ФизическиеЛица
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ2 = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|			ТОГДА Доходы.Сотрудник.Физлицо
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ2 ССЫЛКА Справочник.ПодразделенияОрганизаций
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ2 = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ТОГДА Доходы.ПодразделениеОрганизации
	|		ИНАЧЕ Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ2
	|	КОНЕЦ КАК СубконтоДтНУ2,
	|	ВЫБОР
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ3 ССЫЛКА Справочник.ФизическиеЛица
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ3 = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|			ТОГДА Доходы.Сотрудник.Физлицо
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ3 ССЫЛКА Справочник.ПодразделенияОрганизаций
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ3 = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ТОГДА Доходы.ПодразделениеОрганизации
	|		ИНАЧЕ Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ3
	|	КОНЕЦ КАК СубконтоДтНУ3,
	|	Доходы.ВидРасчета.СпособОтраженияВБухучете.СчетКт КАК СчетКт,
	|	ВЫБОР
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт1 ССЫЛКА Перечисление.ВидыНачисленийОплатыТрудаПоСт255НК
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт1 = ЗНАЧЕНИЕ(Перечисление.ВидыНачисленийОплатыТрудаПоСт255НК.ПустаяСсылка)
	|			ТОГДА Доходы.ВидРасчета.ВидНачисленияПоСт255НК
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт1 ССЫЛКА Справочник.ФизическиеЛица
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт1 = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|			ТОГДА Доходы.Сотрудник.Физлицо
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт1 ССЫЛКА Справочник.ПодразделенияОрганизаций
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт1 = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ТОГДА Доходы.ПодразделениеОрганизации
	|		ИНАЧЕ Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт1
	|	КОНЕЦ КАК СубконтоКт1,
	|	ВЫБОР
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт2 ССЫЛКА Перечисление.ВидыНачисленийОплатыТрудаПоСт255НК
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт2 = ЗНАЧЕНИЕ(Перечисление.ВидыНачисленийОплатыТрудаПоСт255НК.ПустаяСсылка)
	|			ТОГДА Доходы.ВидРасчета.ВидНачисленияПоСт255НК
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт2 ССЫЛКА Справочник.ФизическиеЛица
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт2 = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|			ТОГДА Доходы.Сотрудник.Физлицо
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт2 ССЫЛКА Справочник.ПодразделенияОрганизаций
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт2 = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ТОГДА Доходы.ПодразделениеОрганизации
	|		ИНАЧЕ Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт2
	|	КОНЕЦ КАК СубконтоКт2,
	|	ВЫБОР
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт3 ССЫЛКА Перечисление.ВидыНачисленийОплатыТрудаПоСт255НК
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт3 = ЗНАЧЕНИЕ(Перечисление.ВидыНачисленийОплатыТрудаПоСт255НК.ПустаяСсылка)
	|			ТОГДА Доходы.ВидРасчета.ВидНачисленияПоСт255НК
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт3 ССЫЛКА Справочник.ФизическиеЛица
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт3 = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|			ТОГДА Доходы.Сотрудник.Физлицо
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт3 ССЫЛКА Справочник.ПодразделенияОрганизаций
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт3 = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ТОГДА Доходы.ПодразделениеОрганизации
	|		ИНАЧЕ Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт3
	|	КОНЕЦ КАК СубконтоКт3,
	|	Доходы.ВидРасчета.СпособОтраженияВБухучете.ОтражениеВУСН КАК ОтражениеВУСН,
	|	ВЫБОР
	|		КОГДА Доходы.ВидРасчета.ЧастичноПодпадаетПодЕНВД
	|			ТОГДА ЕНВДПроцент.ПодпадаетПодЕНВД
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК ПроцентЕНВД,
	|	ВЫБОР
	|		КОГДА Доходы.ВидРасчета.ЧастичноПодпадаетПодЕНВД
	|			ТОГДА ЕНВДПроцент.СтатьяЗатратЕНВД
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК СтатьяЗатратЕНВД,
	|	ВЫБОР
	|		КОГДА Доходы.ВидРасчета.ЧастичноПодпадаетПодЕНВД
	|			ТОГДА ЕНВДПроцент.СтатьяЗатратНеЕНВД
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК СтатьяЗатратНеЕНВД,
	|	Доходы.ВидРасчета КАК ВидРасчета,
	|	ВЫБОР
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт1 ССЫЛКА Справочник.СтатьиЗатрат
	|			ТОГДА 1
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт2 ССЫЛКА Справочник.СтатьиЗатрат
	|			ТОГДА 2
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт3 ССЫЛКА Справочник.СтатьиЗатрат
	|			ТОГДА 3
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НомерСубконтоСтатьиЗатратДт,
	|	СУММА(Доходы.Результат) КАК Сумма,
	|	СУММА(Доходы.Результат) КАК СуммаНУ,
	|	Доходы.Сотрудник.Физлицо КАК Физлицо,
	|	Доходы.ВидРасчета.ВидНачисленияПоСт255НК КАК ВидНачисленияПоСт255НК,
	|	ВЫБОР
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СчетДт В (&СчетаРасчетов)
	|			ТОГДА ВТ_Физлица.ПодразделениеФизлица
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт1 ССЫЛКА Справочник.ПодразделенияОрганизаций
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт1 <> ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ТОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт1
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт2 ССЫЛКА Справочник.ПодразделенияОрганизаций
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт2 <> ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ТОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт2
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт3 ССЫЛКА Справочник.ПодразделенияОрганизаций
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт3 <> ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ТОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт3
	|		ИНАЧЕ Доходы.ПодразделениеОрганизации
	|	КОНЕЦ КАК ПодразделениеДт,
	|	ВЫБОР
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СчетКт В (&СчетаРасчетов)
	|			ТОГДА ВТ_Физлица.ПодразделениеФизлица
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт1 ССЫЛКА Справочник.ПодразделенияОрганизаций
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт1 <> ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ТОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт1
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт2 ССЫЛКА Справочник.ПодразделенияОрганизаций
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт2 <> ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ТОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт2
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт3 ССЫЛКА Справочник.ПодразделенияОрганизаций
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт3 <> ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ТОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт3
	|		ИНАЧЕ Доходы.ПодразделениеОрганизации
	|	КОНЕЦ КАК ПодразделениеКт,
	|	Доходы.Ссылка
	|ИЗ
	|	Документ.НачислениеЗарплатыРаботникамОрганизаций.Начисления КАК Доходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПроцентДеятельностиЕНВД.СрезПоследних(&парамПериод, Организация = &парамОбособленноеПодразделение) КАК ЕНВДПроцент
	|		ПО (ЕНВДПроцент.Сотрудник = Доходы.Сотрудник)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Физлица КАК ВТ_Физлица
	|		ПО Доходы.Физлицо = ВТ_Физлица.Физлицо И Доходы.Ссылка.Организация = ВТ_Физлица.ОрганизацияФизЛица
	|ГДЕ
	|	Доходы.Ссылка.ПериодРегистрации = &парамПериод
	|	И Доходы.Ссылка.Проведен
	|	И Доходы.Ссылка.Организация = &парамОбособленноеПодразделение
	|	И Доходы.ВидРасчета.СпособОтраженияВБухучете <> &парамСпособНеОтражать";
	Если ОтборПоДокументу Тогда
		БУНачисленияТекст = БУНачисленияТекст + " 
		|	И Доходы.Ссылка = &парамСсылка";
		Запрос.УстановитьПараметр("парамСсылка", Ссылка);
	КонецЕсли;
	БУНачисленияТекст = БУНачисленияТекст + "
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт1 ССЫЛКА Справочник.ФизическиеЛица
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт1 = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|			ТОГДА Доходы.Сотрудник.Физлицо
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт1 ССЫЛКА Справочник.ПодразделенияОрганизаций
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт1 = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ТОГДА Доходы.ПодразделениеОрганизации
	|		ИНАЧЕ Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт1
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт2 ССЫЛКА Справочник.ФизическиеЛица
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт2 = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|			ТОГДА Доходы.Сотрудник.Физлицо
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт2 ССЫЛКА Справочник.ПодразделенияОрганизаций
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт2 = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ТОГДА Доходы.ПодразделениеОрганизации
	|		ИНАЧЕ Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт2
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт3 ССЫЛКА Справочник.ФизическиеЛица
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт3 = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|			ТОГДА Доходы.Сотрудник.Физлицо
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт3 ССЫЛКА Справочник.ПодразделенияОрганизаций
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт3 = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ТОГДА Доходы.ПодразделениеОрганизации
	|		ИНАЧЕ Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт3
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ1 ССЫЛКА Справочник.ФизическиеЛица
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ1 = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|			ТОГДА Доходы.Сотрудник.Физлицо
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ1 ССЫЛКА Справочник.ПодразделенияОрганизаций
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ1 = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ТОГДА Доходы.ПодразделениеОрганизации
	|		ИНАЧЕ Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ1
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ2 ССЫЛКА Справочник.ФизическиеЛица
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ2 = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|			ТОГДА Доходы.Сотрудник.Физлицо
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ2 ССЫЛКА Справочник.ПодразделенияОрганизаций
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ2 = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ТОГДА Доходы.ПодразделениеОрганизации
	|		ИНАЧЕ Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ2
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ3 ССЫЛКА Справочник.ФизическиеЛица
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ3 = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|			ТОГДА Доходы.Сотрудник.Физлицо
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ3 ССЫЛКА Справочник.ПодразделенияОрганизаций
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ3 = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ТОГДА Доходы.ПодразделениеОрганизации
	|		ИНАЧЕ Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ3
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт1 ССЫЛКА Перечисление.ВидыНачисленийОплатыТрудаПоСт255НК
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт1 = ЗНАЧЕНИЕ(Перечисление.ВидыНачисленийОплатыТрудаПоСт255НК.ПустаяСсылка)
	|			ТОГДА Доходы.ВидРасчета.ВидНачисленияПоСт255НК
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт1 ССЫЛКА Справочник.ФизическиеЛица
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт1 = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|			ТОГДА Доходы.Сотрудник.Физлицо
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт1 ССЫЛКА Справочник.ПодразделенияОрганизаций
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт1 = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ТОГДА Доходы.ПодразделениеОрганизации
	|		ИНАЧЕ Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт1
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт2 ССЫЛКА Перечисление.ВидыНачисленийОплатыТрудаПоСт255НК
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт2 = ЗНАЧЕНИЕ(Перечисление.ВидыНачисленийОплатыТрудаПоСт255НК.ПустаяСсылка)
	|			ТОГДА Доходы.ВидРасчета.ВидНачисленияПоСт255НК
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт2 ССЫЛКА Справочник.ФизическиеЛица
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт2 = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|			ТОГДА Доходы.Сотрудник.Физлицо
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт2 ССЫЛКА Справочник.ПодразделенияОрганизаций
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт2 = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ТОГДА Доходы.ПодразделениеОрганизации
	|		ИНАЧЕ Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт2
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт3 ССЫЛКА Перечисление.ВидыНачисленийОплатыТрудаПоСт255НК
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт3 = ЗНАЧЕНИЕ(Перечисление.ВидыНачисленийОплатыТрудаПоСт255НК.ПустаяСсылка)
	|			ТОГДА Доходы.ВидРасчета.ВидНачисленияПоСт255НК
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт3 ССЫЛКА Справочник.ФизическиеЛица
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт3 = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|			ТОГДА Доходы.Сотрудник.Физлицо
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт3 ССЫЛКА Справочник.ПодразделенияОрганизаций
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт3 = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ТОГДА Доходы.ПодразделениеОрганизации
	|		ИНАЧЕ Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт3
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Доходы.ВидРасчета.ЧастичноПодпадаетПодЕНВД
	|			ТОГДА ЕНВДПроцент.ПодпадаетПодЕНВД
	|		ИНАЧЕ NULL
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Доходы.ВидРасчета.ЧастичноПодпадаетПодЕНВД
	|			ТОГДА ЕНВДПроцент.СтатьяЗатратЕНВД
	|		ИНАЧЕ NULL
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Доходы.ВидРасчета.ЧастичноПодпадаетПодЕНВД
	|			ТОГДА ЕНВДПроцент.СтатьяЗатратНеЕНВД
	|		ИНАЧЕ NULL
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт1 ССЫЛКА Справочник.СтатьиЗатрат
	|			ТОГДА 1
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт2 ССЫЛКА Справочник.СтатьиЗатрат
	|			ТОГДА 2
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт3 ССЫЛКА Справочник.СтатьиЗатрат
	|			ТОГДА 3
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	Доходы.ВидРасчета,
	|	Доходы.Сотрудник.Физлицо,
	|	Доходы.ВидРасчета.СпособОтраженияВБухучете.СчетДт,
	|	Доходы.ВидРасчета.СпособОтраженияВБухучете.СчетДтНУ,
	|	Доходы.ВидРасчета.СпособОтраженияВБухучете.СчетКт,
	|	Доходы.ВидРасчета.СпособОтраженияВБухучете.ОтражениеВУСН,
	|	Доходы.ВидРасчета.ВидНачисленияПоСт255НК,
	|	ВЫБОР
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СчетДт В (&СчетаРасчетов)
	|			ТОГДА ВТ_Физлица.ПодразделениеФизлица
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт1 ССЫЛКА Справочник.ПодразделенияОрганизаций
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт1 <> ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ТОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт1
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт2 ССЫЛКА Справочник.ПодразделенияОрганизаций
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт2 <> ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ТОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт2
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт3 ССЫЛКА Справочник.ПодразделенияОрганизаций
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт3 <> ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ТОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт3
	|		ИНАЧЕ Доходы.ПодразделениеОрганизации
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СчетКт В (&СчетаРасчетов)
	|			ТОГДА ВТ_Физлица.ПодразделениеФизлица
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт1 ССЫЛКА Справочник.ПодразделенияОрганизаций
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт1 <> ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ТОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт1
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт2 ССЫЛКА Справочник.ПодразделенияОрганизаций
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт2 <> ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ТОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт2
	|		КОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт3 ССЫЛКА Справочник.ПодразделенияОрганизаций
	|				И Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт3 <> ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ТОГДА Доходы.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт3
	|		ИНАЧЕ Доходы.ПодразделениеОрганизации
	|	КОНЕЦ,
	|	Доходы.Ссылка";
	
	Запрос.Текст = БУНачисленияТекст;
	
	СчетаИсключения = Новый Массив();
	СчетаИсключения.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоСоциальномуСтрахованию);
	СчетаИсключения.Добавить(ПланыСчетов.Хозрасчетный.НематериальныеАктивы);
	СчетаИсключения.Добавить(ПланыСчетов.Хозрасчетный.ВложенияВоВнеоборотныеАктивы);
	СчетаИсключения.Добавить(ПланыСчетов.Хозрасчетный.РезервыПредстоящихРасходов);
	
	Запрос.УстановитьПараметр("ПустойВидНачислений", Перечисления.ВидыНачисленийОплатыТрудаПоСт255НК.ПустаяСсылка());
	Запрос.УстановитьПараметр("парамПериод", НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамОбособленноеПодразделение", Организация);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("СчетаИсключения", СчетаИсключения);
	Запрос.УстановитьПараметр("парамУСН", мУСН);
	Запрос.УстановитьПараметр("парамСпособНеОтражать", Справочники.СпособыОтраженияЗарплатыВРеглУчете.НеОтражатьВБухучете);
	
	Выборка = Запрос.Выполнить().Выбрать();
	ПустойСчет = ПланыСчетов.Хозрасчетный.ПустаяСсылка();
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Сумма <> 0 Тогда
			СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТЧ,Выборка);
			Если ОСН_ФизЛицо Тогда
				СтрокаТЧ.ВидНачисленияУдержания = Перечисления.ИПВидыНачисленийУдержаний.НачисленоПовременно;
			КонецЕсли;
			
			// обработаем записи с точки зрения ЕНВД
			// если задана конкретная проводка и задан процент ЕНВД
			Если Выборка.СчетДт <> ПустойСчет И Выборка.СчетКт <> ПустойСчет И Выборка.ПроцентЕНВД <> NULL И Выборка.ПроцентЕНВД <> 0 Тогда
				Если Выборка.ПроцентЕНВД = 100 Тогда
					
					СтрокаТЧ.СубконтоДт1 	 = ?(Выборка.НомерСубконтоСтатьиЗатратДт = 1, Выборка.СтатьяЗатратЕНВД, СтрокаТЧ.СубконтоДт1);
					СтрокаТЧ.СубконтоДт2 	 = ?(Выборка.НомерСубконтоСтатьиЗатратДт = 2, Выборка.СтатьяЗатратЕНВД, СтрокаТЧ.СубконтоДт2);
					СтрокаТЧ.СубконтоДт3 	 = ?(Выборка.НомерСубконтоСтатьиЗатратДт = 3, Выборка.СтатьяЗатратЕНВД, СтрокаТЧ.СубконтоДт3);
					СтрокаТЧ.ОтражениеВУСН	 = Перечисления.ОтражениеВУСН.НеПринимаются;
					
				Иначе
					// заводим новую строку данных - для ввода доли дохода под ЕНВД
					НоваяСтрока = ПромежуточнаяТаблица.Добавить();
					
					// вычислим результат для дохода под ЕНВД
					РезультатПодЕНВД = Окр(Выборка.Сумма * Выборка.ПроцентЕНВД / 100,2);
					
					НоваяСтрока.Ссылка	   = Выборка.Ссылка;
					НоваяСтрока.СчетДт	   = Выборка.СчетДт;
					НоваяСтрока.СубконтоДт1  = ?(Выборка.НомерСубконтоСтатьиЗатратДт = 1, Выборка.СтатьяЗатратЕНВД, СтрокаТЧ.СубконтоДт1);
					НоваяСтрока.СубконтоДт2  = ?(Выборка.НомерСубконтоСтатьиЗатратДт = 2, Выборка.СтатьяЗатратЕНВД, СтрокаТЧ.СубконтоДт2);
					НоваяСтрока.СубконтоДт3  = ?(Выборка.НомерСубконтоСтатьиЗатратДт = 3, Выборка.СтатьяЗатратЕНВД, СтрокаТЧ.СубконтоДт3);
					НоваяСтрока.СчетКт 		 = Выборка.СчетКт;
					НоваяСтрока.СубконтоКт1  = Выборка.СубконтоКт1;
					НоваяСтрока.СубконтоКт2  = Выборка.СубконтоКт2;
					НоваяСтрока.СубконтоКт3	 = Выборка.СубконтоКт3;
					НоваяСтрока.ОтражениеВУСН = Перечисления.ОтражениеВУСН.НеПринимаются;
					НоваяСтрока.ВидРасчета   = Выборка.ВидРасчета;
					НоваяСтрока.Сумма		 = РезультатПодЕНВД;
					НоваяСтрока.Физлицо		 = Выборка.Физлицо;
					НоваяСтрока.ПодразделениеДт = Выборка.ПодразделениеДт;  
					НоваяСтрока.ПодразделениеКт = Выборка.ПодразделениеКт;
					Если ОСН_ФизЛицо Тогда
						НоваяСтрока.ВидНачисленияУдержания = Перечисления.ИПВидыНачисленийУдержаний.НачисленоПовременно;
					КонецЕсли;
					
					// основной строке данных уменьшаем результат
					СтрокаТЧ.СубконтоДт1 	= ?(Выборка.НомерСубконтоСтатьиЗатратДт = 1, Выборка.СтатьяЗатратНеЕНВД, СтрокаТЧ.СубконтоДт1);
					СтрокаТЧ.СубконтоДт2 	= ?(Выборка.НомерСубконтоСтатьиЗатратДт = 2, Выборка.СтатьяЗатратНеЕНВД, СтрокаТЧ.СубконтоДт2);
					СтрокаТЧ.СубконтоДт3 	= ?(Выборка.НомерСубконтоСтатьиЗатратДт = 3, Выборка.СтатьяЗатратНеЕНВД, СтрокаТЧ.СубконтоДт3);
					СтрокаТЧ.Сумма		 	= Выборка.Сумма - РезультатПодЕНВД;
					СтрокаТЧ.СуммаНУ	 	= СтрокаТЧ.Сумма;
					
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	// просуммируем результат, объединив полностью совпадающие строки (от исходной таблицы отрезаем только реквизит Номер строки как уникальный)
	ПромежуточнаяТаблица.Свернуть("Ссылка,ВидНачисленияПоСт255НК,ВидРасчета,ОтражениеВУСН,СубконтоДт1,СубконтоДт2,СубконтоДт3,СубконтоДтНУ1,СубконтоДтНУ2,СубконтоДтНУ3,СубконтоКт1,СубконтоКт2,СубконтоКт3,СчетДт,СчетДтНУ,СчетКт,ФизЛицо,ВидНачисленияУдержания,ПодразделениеДт,ПодразделениеКт", "Сумма,СуммаНУ");
	
	Для Каждого СтрокаТаблицы Из ПромежуточнаяТаблица Цикл
		ЗаполнитьЗначенияСвойств(ОтражениеВУчете.Добавить(),СтрокаТаблицы); // заполняем вновь созданную строку табличной части этого документа по образцу строки таблицы из промежуточной таблицы
	КонецЦикла;
	
КонецПроцедуры

Процедура СоздатьВТОтражениеВУчете(Запрос, ТЧОтражениеВУчете, Ссылка = Неопределено) Экспорт
	
	Если ТипЗнч(ТЧОтражениеВУчете) = Тип("ТаблицаЗначений") Тогда
		Для НомСтр = 1 По ТЧОтражениеВУчете.Количество() Цикл
			ТЧОтражениеВУчете[НомСтр-1].НомерСтроки = НомСтр;
		КонецЦикла;
		ОтражениеВУчете = ТЧОтражениеВУчете;
	Иначе
		ОтражениеВУчете = ТЧОтражениеВУчете.Выгрузить();
		Массив = Новый Массив;
		Массив.Добавить(ТипЗнч(Ссылка));
		ОписаниеТиповСсылка =  Новый ОписаниеТипов(Массив, , );
		ОтражениеВУчете.Колонки.Добавить("Ссылка", ОписаниеТиповСсылка);		
	КонецЕсли;
	
	ОтражениеВУчете.ЗаполнитьЗначения(Ссылка, "Ссылка");
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ИсхТаб.НомерСтроки,
	|	ИсхТаб.Ссылка,
	|	ИсхТаб.СчетДт,
	|	ИсхТаб.СубконтоДт1,
	|	ИсхТаб.СубконтоДт2,
	|	ИсхТаб.СубконтоДт3,
	|	ИсхТаб.СчетДтНУ,
	|	ИсхТаб.СубконтоДтНУ1,
	|	ИсхТаб.СубконтоДтНУ2,
	|	ИсхТаб.СубконтоДтНУ3,
	|	ИсхТаб.СчетКт,
	|	ИсхТаб.СубконтоКт1,
	|	ИсхТаб.СубконтоКт2,
	|	ИсхТаб.СубконтоКт3,
	|	ИсхТаб.Сумма,
	|	ИсхТаб.ОтражениеВУСН,
	|	ИсхТаб.ВидРасчета,
	|	ИсхТаб.Физлицо,
	|	ИсхТаб.ВидНачисленияПоСт255НК,
	|	ИсхТаб.ВидНачисленияУдержания,
	|	ИсхТаб.ПодразделениеДт,
	|	ИсхТаб.ПодразделениеКт,
	|	ИсхТаб.СуммаПР,
	|	ИсхТаб.СуммаВР,
	|	ИсхТаб.СуммаНУ
	|ПОМЕСТИТЬ ОтражениеВУчете
	|ИЗ
	|	&ИсхТаб КАК ИсхТаб";
	Запрос.УстановитьПараметр("ИсхТаб", ОтражениеВУчете);
	Запрос.Выполнить();    
	
КонецПроцедуры

Процедура ПодготовитьТаблицуЗначений(ОтражениеВУчете) Экспорт
	
	////////////////////////////////
	// Описания типов для менеджеров временных таблиц
	//**********************************************
	Массив = Новый Массив;		
	Выборка = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Выбрать();
	Пока Выборка.Следующий() Цикл		
		КоличествоЗначений = Выборка.ТипЗначения.Типы().Количество();
		Если КоличествоЗначений <> 0 Тогда
			Для НомерЗначения = 0 По КоличествоЗначений-1 Цикл
				ЗначениеТипаСубконто = Выборка.ТипЗначения.Типы().Получить(НомерЗначения);
				Если Массив.Найти(ЗначениеТипаСубконто) = Неопределено Тогда
					Массив.Добавить(ЗначениеТипаСубконто);
				КонецЕсли;
				НомерЗначения = НомерЗначения + 1;				
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;	
	ОписаниеТиповСубконто =  Новый ОписаниеТипов(Массив, , );
	
	ОписаниеТиповЧисло10_0 = ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(10, 0);
	ОписаниеТиповЧисло15_2 = ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2);
	
	Массив = Новый Массив;
	Массив.Добавить(Тип("ДокументСсылка.НачислениеЗарплатыРаботникамОрганизаций"));
	Массив.Добавить(Тип("ДокументСсылка.РасчетЕСН"));
	Массив.Добавить(Тип("ДокументСсылка.ОтражениеЗарплатыВРеглУчете"));
	ОписаниеТиповСсылка =  Новый ОписаниеТипов(Массив, , );
	
	Массив = Новый Массив;
	Массив.Добавить(Тип("ПланСчетовСсылка.Хозрасчетный"));
	ОписаниеТиповПланСчетов =  Новый ОписаниеТипов(Массив, , );
	
	Массив = Новый Массив;
	Массив.Добавить(Тип("ПеречислениеСсылка.ОтражениеВУСН"));
	ОписаниеТиповОтражениеВУСН =  Новый ОписаниеТипов(Массив, , );
	
	Массив = Новый Массив; 
	Массив.Добавить(Тип("ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций"));	
	ОписаниеТиповВидРасчета =  Новый ОписаниеТипов(Массив, , );
	
	Массив = Новый Массив; 
	Массив.Добавить(Тип("СправочникСсылка.ФизическиеЛица"));	
	ОписаниеТиповФизЛицо =  Новый ОписаниеТипов(Массив, , );
	
	
	Массив = Новый Массив;
	Массив.Добавить(Тип("ПеречислениеСсылка.ВидыНачисленийОплатыТрудаПоСт255НК"));
	ОписаниеТиповВидВидНачисленияПоСт255НК =  Новый ОписаниеТипов(Массив, , );
	
	Массив = Новый Массив;
	Массив.Добавить(Тип("ПеречислениеСсылка.ИПВидыНачисленийУдержаний"));
	ОписаниеТиповВидНачисленияУдержания =  Новый ОписаниеТипов(Массив, , );
	
	Массив = Новый Массив;
	Массив.Добавить(Тип("СправочникСсылка.ПодразделенияОрганизаций"));
	ОписаниеТиповПодразделение =  Новый ОписаниеТипов(Массив, , );
	//**********************************************
	
	
	ОтражениеВУчете  = Новый ТаблицаЗначений;
	ОтражениеВУчете.Колонки.Добавить("НомерСтроки", ОписаниеТиповЧисло10_0);
	ОтражениеВУчете.Колонки.Добавить("Ссылка", ОписаниеТиповСсылка);
	ОтражениеВУчете.Колонки.Добавить("СчетДт", ОписаниеТиповПланСчетов);
	ОтражениеВУчете.Колонки.Добавить("СубконтоДт1", ОписаниеТиповСубконто);
	ОтражениеВУчете.Колонки.Добавить("СубконтоДт2", ОписаниеТиповСубконто);
	ОтражениеВУчете.Колонки.Добавить("СубконтоДт3", ОписаниеТиповСубконто);
	ОтражениеВУчете.Колонки.Добавить("СчетДтНУ", ОписаниеТиповПланСчетов);
	ОтражениеВУчете.Колонки.Добавить("СубконтоДтНУ1", ОписаниеТиповСубконто);
	ОтражениеВУчете.Колонки.Добавить("СубконтоДтНУ2", ОписаниеТиповСубконто);
	ОтражениеВУчете.Колонки.Добавить("СубконтоДтНУ3", ОписаниеТиповСубконто);
	ОтражениеВУчете.Колонки.Добавить("СчетКт", ОписаниеТиповПланСчетов);
	ОтражениеВУчете.Колонки.Добавить("СубконтоКт1", ОписаниеТиповСубконто);
	ОтражениеВУчете.Колонки.Добавить("СубконтоКт2", ОписаниеТиповСубконто);
	ОтражениеВУчете.Колонки.Добавить("СубконтоКт3", ОписаниеТиповСубконто);
	ОтражениеВУчете.Колонки.Добавить("Сумма", ОписаниеТиповЧисло15_2);
	ОтражениеВУчете.Колонки.Добавить("ОтражениеВУСН", ОписаниеТиповОтражениеВУСН);
	ОтражениеВУчете.Колонки.Добавить("ВидРасчета", ОписаниеТиповВидРасчета);
	ОтражениеВУчете.Колонки.Добавить("Физлицо", ОписаниеТиповФизЛицо);
	ОтражениеВУчете.Колонки.Добавить("ВидНачисленияПоСт255НК", ОписаниеТиповВидВидНачисленияПоСт255НК);
	ОтражениеВУчете.Колонки.Добавить("ВидНачисленияУдержания", ОписаниеТиповВидНачисленияУдержания);
	ОтражениеВУчете.Колонки.Добавить("ПодразделениеДт", ОписаниеТиповПодразделение);
	ОтражениеВУчете.Колонки.Добавить("ПодразделениеКт", ОписаниеТиповПодразделение);
	ОтражениеВУчете.Колонки.Добавить("СуммаПР", ОписаниеТиповЧисло15_2);
	ОтражениеВУчете.Колонки.Добавить("СуммаВР", ОписаниеТиповЧисло15_2);
	ОтражениеВУчете.Колонки.Добавить("СуммаНУ", ОписаниеТиповЧисло15_2);
	
КонецПроцедуры

Функция СформироватьЗапросПоОтражениюВУчете(Ссылка = Неопределено) Экспорт
	
	Текст = 
	"ВЫБРАТЬ
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт КАК СчетДт,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт1 КАК СубконтоДт1,
	|	ДтВидСубконто1.ВидСубконто КАК ДтВидСубконто1,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт2 КАК СубконтоДт2,
	|	ДтВидСубконто2.ВидСубконто КАК ДтВидСубконто2,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт3 КАК СубконтоДт3,
	|	ДтВидСубконто3.ВидСубконто КАК ДтВидСубконто3,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДтНУ КАК СчетДтНУ,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДтНУ1 КАК СубконтоДтНУ1,
	|	ДтВидСубконтоНУ1.ВидСубконто КАК ДтВидСубконтоНУ1,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДтНУ2 КАК СубконтоДтНУ2,
	|	ДтВидСубконтоНУ2.ВидСубконто КАК ДтВидСубконтоНУ2,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДтНУ3 КАК СубконтоДтНУ3,
	|	ДтВидСубконтоНУ3.ВидСубконто КАК ДтВидСубконтоНУ3,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт КАК СчетКт,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт.Наименование,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКт1 КАК СубконтоКт1,
	|	КтВидСубконто1.ВидСубконто КАК КтВидСубконто1,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКт2 КАК СубконтоКт2,
	|	КтВидСубконто2.ВидСубконто КАК КтВидСубконто2,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКт3 КАК СубконтоКт3,
	|	КтВидСубконто3.ВидСубконто КАК КтВидСубконто3,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.ОтражениеВУСН КАК ОтражениеВУСН,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.ВидНачисленияУдержания,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.ПодразделениеДт,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.ПодразделениеКт,
	|	СУММА(ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Сумма) КАК Сумма,
	|	СУММА(ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СуммаПР) КАК СуммаПР,
	|	СУММА(ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СуммаВР) КАК СуммаВР,
	|	СУММА(ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СуммаНУ) КАК СуммаНУ
	|ИЗ
	|	ОтражениеВУчете КАК ОтражениеЗарплатыВРеглУчетеОтражениеВУчете
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ДтВидСубконто1
	|		ПО (ДтВидСубконто1.Ссылка = ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт)
	|			И (ДтВидСубконто1.НомерСтроки = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ДтВидСубконто2
	|		ПО (ДтВидСубконто2.Ссылка = ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт)
	|			И (ДтВидСубконто2.НомерСтроки = 2)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ДтВидСубконто3
	|		ПО (ДтВидСубконто3.Ссылка = ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт)
	|			И (ДтВидСубконто3.НомерСтроки = 3)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ДтВидСубконтоНУ1
	|		ПО (ДтВидСубконтоНУ1.Ссылка = ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДтНУ)
	|			И (ДтВидСубконтоНУ1.НомерСтроки = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ДтВидСубконтоНУ2
	|		ПО (ДтВидСубконтоНУ2.Ссылка = ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДтНУ)
	|			И (ДтВидСубконтоНУ2.НомерСтроки = 2)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ДтВидСубконтоНУ3
	|		ПО (ДтВидСубконтоНУ3.Ссылка = ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДтНУ)
	|			И (ДтВидСубконтоНУ3.НомерСтроки = 3)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК КтВидСубконто1
	|		ПО (КтВидСубконто1.Ссылка = ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт)
	|			И (КтВидСубконто1.НомерСтроки = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК КтВидСубконто2
	|		ПО (КтВидСубконто2.Ссылка = ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт)
	|			И (КтВидСубконто2.НомерСтроки = 2)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК КтВидСубконто3
	|		ПО (КтВидСубконто3.Ссылка = ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт)
	|			И (КтВидСубконто3.НомерСтроки = 3)";
	
	Если Ссылка <> Неопределено Тогда
		Текст = Текст + "
		|ГДЕ
		|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Ссылка = &парамРегистратор";
	КонецЕсли;
	
	Текст = Текст + "
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт1,
	|	ДтВидСубконто1.ВидСубконто,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт2,
	|	ДтВидСубконто2.ВидСубконто,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт3,
	|	ДтВидСубконто3.ВидСубконто,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДтНУ,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДтНУ1,
	|	ДтВидСубконтоНУ1.ВидСубконто,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДтНУ2,
	|	ДтВидСубконтоНУ2.ВидСубконто,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДтНУ3,
	|	ДтВидСубконтоНУ3.ВидСубконто,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКт1,
	|	КтВидСубконто1.ВидСубконто,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКт2,
	|	КтВидСубконто2.ВидСубконто,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКт3,
	|	КтВидСубконто3.ВидСубконто,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.ОтражениеВУСН,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.ПодразделениеДт,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.ПодразделениеКт,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.ВидНачисленияУдержания,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт.Наименование";
	
	Возврат Текст;
	
КонецФункции

Процедура ДобавитьСтрокуВДвиженияПоОтражениюВУчете(Ссылка, Движения, ВыборкаПоДоходам, ПрименениеУСН, ОСН_ФизЛицо, мПоддержкаПБУ18, Организация, ПериодРегистрации) Экспорт
	
	Если ВыборкаПоДоходам.Сумма = 0 И ВыборкаПоДоходам.СуммаНУ = 0 Тогда
		Возврат;
	КонецЕсли;
	
	// проводка по бухгалтерскому регистру
	Строка = Движения.Хозрасчетный.Добавить();
	
	// Свойства
	Строка.Период = КонецМесяца(ПериодРегистрации);
	
	// Измерения
	Строка.Организация  = Организация;
	
	// бухучет
	Строка.СчетДт       = ВыборкаПоДоходам.СчетДт;
	Строка.СчетКт       = ВыборкаПоДоходам.СчетКт;
	Строка.СубконтоДт[ВыборкаПоДоходам.ДтВидСубконто1] = ВыборкаПоДоходам.СубконтоДт1;
	Строка.СубконтоДт[ВыборкаПоДоходам.ДтВидСубконто2] = ВыборкаПоДоходам.СубконтоДт2;
	Строка.СубконтоДт[ВыборкаПоДоходам.ДтВидСубконто3] = ВыборкаПоДоходам.СубконтоДт3;
	Строка.СубконтоКт[ВыборкаПоДоходам.КтВидСубконто1] = ВыборкаПоДоходам.СубконтоКт1;
	Строка.СубконтоКт[ВыборкаПоДоходам.КтВидСубконто2] = ВыборкаПоДоходам.СубконтоКт2;
	Строка.СубконтоКт[ВыборкаПоДоходам.КтВидСубконто3] = ВыборкаПоДоходам.СубконтоКт3;
	
	БухгалтерскийУчет.УстановитьПодразделенияПроводки(
	Строка, ВыборкаПоДоходам.ПодразделениеДт, ВыборкаПоДоходам.ПодразделениеКт);
	
	// ресурсы
	Строка.Сумма = ВыборкаПоДоходам.Сумма;
	
	Если ВыборкаПоДоходам.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда Тогда
		СуммаНУКт = ВыборкаПоДоходам.Сумма;
		СуммаПРКт = 0;
		СуммаВРКт = 0;
	Иначе		
		СуммаНУКт = ВыборкаПоДоходам.СуммаНУ;
		СуммаПРКт = ВыборкаПоДоходам.СуммаПР;
		СуммаВРКт = ВыборкаПоДоходам.СуммаВР;
	КонецЕсли;
	
	НалоговыйУчет.ЗаполнитьНалоговыеСуммыПроводки(ВыборкаПоДоходам.СуммаНУ, СуммаНУКт,
		ВыборкаПоДоходам.СуммаПР, СуммаПРКт, 
		ВыборкаПоДоходам.СуммаВР, СуммаВРКт,
		Строка, 
		мПоддержкаПБУ18); 
	
	// Содержание проводок
	// Содержание проводок
	Если ПериодРегистрации < '20100101' Тогда
		Если ВыборкаПоДоходам.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда Тогда
			Содержание = "Оплата труда";
		ИначеЕсли ВыборкаПоДоходам.СчетКт = ПланыСчетов.Хозрасчетный.ПФР_страх Тогда
			Содержание = "Взносы в ПФР на страховую часть пенсии";
		ИначеЕсли ВыборкаПоДоходам.СчетКт = ПланыСчетов.Хозрасчетный.ПФР_нак Тогда
			Содержание = "Взносы в ПФР на накопительную часть пенсии";
		ИначеЕсли ВыборкаПоДоходам.СчетКт = ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ Тогда
			Содержание = "Взносы в ФСС РФ (НС и ПЗ)";
		ИначеЕсли ВыборкаПоДоходам.СчетКт = ПланыСчетов.Хозрасчетный.ТФОМС Тогда
			Содержание = "ЕСН в части ТФОМС";
		ИначеЕсли ВыборкаПоДоходам.СчетКт = ПланыСчетов.Хозрасчетный.ФФОМС Тогда
			Содержание = "ЕСН в части ФФОМС";
		ИначеЕсли ВыборкаПоДоходам.СчетКт = ПланыСчетов.Хозрасчетный.ФСС Тогда
			Содержание = "Взносы по социальному страхованию (ЕСН в части, перечисляемой в ФСС)";
		ИначеЕсли ВыборкаПоДоходам.СчетКт = ПланыСчетов.Хозрасчетный.ЕСН_ФБ Тогда
			Содержание = "ЕСН в части, зачисляемой в Федеральный бюджет";
		ИначеЕсли ВыборкаПоДоходам.СчетКт = ПланыСчетов.Хозрасчетный.ФСС_ДобровольныеВзносы Тогда
			Содержание = "Взносы в ФСС на страхование работников на случай временной нетрудоспособности";
		ИначеЕсли ВыборкаПоДоходам.СчетКт = ПланыСчетов.Хозрасчетный.ФСС_СПЕЦ_ЕНВД Тогда
			Содержание = "Взносы в ФСС для страхователей, уплачивающих ЕНВД";
		ИначеЕсли ВыборкаПоДоходам.СчетКт = ПланыСчетов.Хозрасчетный.ФСС_СПЕЦ_УСН Тогда
			Содержание = "Взносы в ФСС для страхователей, применяющих УСН";
		Иначе
			Содержание = ВыборкаПоДоходам.СчетКтНаименование;
		КонецЕсли;
	Иначе
		Если ВыборкаПоДоходам.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда Тогда
			Содержание = "Оплата труда";
		Иначе
			Содержание = ВыборкаПоДоходам.СчетКтНаименование;
		КонецЕсли;
	КонецЕсли;
	
	Строка.Содержание = Содержание;
		
КонецПроцедуры

Процедура СписокФИзЛицИСчетовУчета(Запрос, Организация, ГоловнаяОрганизация, ПериодРегистрации) Экспорт
	
	// получим список физлиц и подразделения в которых они работают на конец месяца
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СотрудникиОрганизаций.Физлицо КАК Физлицо,
	|	МАКСИМУМ(ЕСТЬNULL(РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации, ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))) КАК ПодразделениеФизлица,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации = НЕОПРЕДЕЛЕНО
	|			ТОГДА РаботникиОрганизацийСрезПоследних.Организация
	|		ИНАЧЕ РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации.Владелец
	|	КОНЕЦ КАК ОрганизацияФизлица
	|ПОМЕСТИТЬ ВТ_Физлица
	|ИЗ
	|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(&парамКонецМесяца, Организация = &парамОбособленноеПодразделение) КАК РаботникиОрганизацийСрезПоследних
	|		ПО СотрудникиОрганизаций.Ссылка = РаботникиОрганизацийСрезПоследних.Сотрудник
	|ГДЕ
	|	СотрудникиОрганизаций.Организация = &ГоловнаяОрганизация
	|	И СотрудникиОрганизаций.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
	|
	|СГРУППИРОВАТЬ ПО
	|	СотрудникиОрганизаций.Физлицо,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации = НЕОПРЕДЕЛЕНО
	|			ТОГДА РаботникиОрганизацийСрезПоследних.Организация
	|		ИНАЧЕ РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации.Владелец
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо";
	
	Запрос.Текст = ТекстЗапроса;  
	Запрос.УстановитьПараметр("парамКонецМесяца", КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамПериод", НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамОбособленноеПодразделение", Организация);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ГоловнаяОрганизация);
	Запрос.Выполнить();
	
	// готовим списки счетов расчетов
	СчетаРасчетов = Новый Массив();
	СчетаРасчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоСоциальномуСтрахованию);
	СчетаРасчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоНалогам);
	СчетаРасчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоПредоставленнымЗаймам);
	СчетаРасчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда);
	СчетаРасчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСРазнымиДебиторамиИКредиторами);
	
	ТекстСчетаРасчетов =
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&СчетаРасчетов)";
	
	Запрос.Текст = ТекстСчетаРасчетов;
	Запрос.УстановитьПараметр("СчетаРасчетов", СчетаРасчетов);
	СчетаРасчетов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	Запрос.УстановитьПараметр("СчетаРасчетов", СчетаРасчетов);
	
	
КонецПроцедуры

Процедура ОтразитьНДФЛ(Запрос, Ссылка, Организация, ПериодРегистрации, ОтражениеВУчете, ОСН_ФизЛицо, ОтборПоДокументу = Ложь) Экспорт
	
	//////////////////////////////////////////////////////////////////////////////////////////////////
	// начало отражения НДФЛ
	//
	
	// НДФЛИсчисленный
	// Поля:
	//		Физлицо
	//		Налог
	// Описание:
	// Содержит НДФЛ исчисленный для заданной организации в заданном периоде регистрации
	
	НДФЛИсчисленныйТекст = 
	"ВЫБРАТЬ
	|	НДФЛИсчисленный.ФизЛицо,
	|	НДФЛИсчисленный.Налог,
	// {ОбособленныеПодразделения
	|	ЕСТЬNULL(РегистрацияВИФНС.Ссылка, ЗНАЧЕНИЕ(Справочник.РегистрацияВИФНС.ПустаяСсылка)) КАК РегистрацияВИФНС,
	// }ОбособленныеПодразделения 
	|	НДФЛИсчисленный.ПодразделениеФизлица
	|ИЗ
	|	(ВЫБРАТЬ
	|		НДФЛРасчетыСБюджетом.ФизЛицо КАК ФизЛицо,
	|		СУММА(ВЫБОР
	|				КОГДА НДФЛРасчетыСБюджетом.ВидСтроки = &парамНачисление
	|					ТОГДА НДФЛРасчетыСБюджетом.Налог
	|				ИНАЧЕ -НДФЛРасчетыСБюджетом.Налог
	|			КОНЕЦ) КАК Налог,
	|		ВТ_Физлица.ПодразделениеФизлица КАК ПодразделениеФизлица,
	|		ВЫБОР
	|			КОГДА НДФЛРасчетыСБюджетом.КодПоОКАТО <> &ПустойКодПоОКАТО
	|				ТОГДА НДФЛРасчетыСБюджетом.КодПоОКАТО
	|			КОГДА ЕСТЬNULL(НДФЛРасчетыСБюджетом.ПодразделениеОрганизации.КодПоОКАТО, &ПустойКодПоОКАТО) <> &ПустойКодПоОКАТО
	|				ТОГДА НДФЛРасчетыСБюджетом.ПодразделениеОрганизации.КодПоОКАТО
	|			ИНАЧЕ ЕСТЬNULL(НДФЛРасчетыСБюджетом.ОбособленноеПодразделение.КодПоОКАТО, &ПустойКодПоОКАТО)
	|		КОНЕЦ КАК КодПоОКАТО,
	|		ВЫБОР
	|			КОГДА НДФЛРасчетыСБюджетом.КПП <> &ПустойКПП
	|				ТОГДА НДФЛРасчетыСБюджетом.КПП
	|			КОГДА ЕСТЬNULL(НДФЛРасчетыСБюджетом.ПодразделениеОрганизации.КПП, &ПустойКПП) <> &ПустойКПП
	|				ТОГДА НДФЛРасчетыСБюджетом.ПодразделениеОрганизации.КПП
	|			ИНАЧЕ ЕСТЬNULL(НДФЛРасчетыСБюджетом.ОбособленноеПодразделение.КПП, &ПустойКПП)
	|		КОНЕЦ КАК КПП,
	|		ВТ_Физлица.ОрганизацияФизлица КАК ОрганизацияФизлица
	|	ИЗ
	|		РегистрНакопления.НДФЛРасчетыСБюджетом КАК НДФЛРасчетыСБюджетом
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Физлица КАК ВТ_Физлица
	|			ПО НДФЛРасчетыСБюджетом.ФизЛицо = ВТ_Физлица.Физлицо
	|			И НДФЛРасчетыСБюджетом.Организация = ВТ_Физлица.ОрганизацияФизлица
	|	ГДЕ
	|		НДФЛРасчетыСБюджетом.Период МЕЖДУ &парамНачалоМесяца И &парамКонецМесяца
	|		И НДФЛРасчетыСБюджетом.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|		И (НДФЛРасчетыСБюджетом.ВидСтроки = &парамНачисление
	|				ИЛИ НДФЛРасчетыСБюджетом.ВидСтроки = &парамПереданоНаВзыскание)";
	Если ОтборПоДокументу Тогда
		НДФЛИсчисленныйТекст = НДФЛИсчисленныйТекст + "
		|		И НДФЛРасчетыСБюджетом.Регистратор = &парамСсылка";
	КонецЕсли;
	НДФЛИсчисленныйТекст = НДФЛИсчисленныйТекст + "
	|	
	|	СГРУППИРОВАТЬ ПО
	|		НДФЛРасчетыСБюджетом.ФизЛицо,
	|		ВТ_Физлица.ПодразделениеФизлица,
	|		ВЫБОР
	|			КОГДА НДФЛРасчетыСБюджетом.КодПоОКАТО <> &ПустойКодПоОКАТО
	|				ТОГДА НДФЛРасчетыСБюджетом.КодПоОКАТО
	|			КОГДА ЕСТЬNULL(НДФЛРасчетыСБюджетом.ПодразделениеОрганизации.КодПоОКАТО, &ПустойКодПоОКАТО) <> &ПустойКодПоОКАТО
	|				ТОГДА НДФЛРасчетыСБюджетом.ПодразделениеОрганизации.КодПоОКАТО
	|			ИНАЧЕ ЕСТЬNULL(НДФЛРасчетыСБюджетом.ОбособленноеПодразделение.КодПоОКАТО, &ПустойКодПоОКАТО)
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА НДФЛРасчетыСБюджетом.КПП <> &ПустойКПП
	|				ТОГДА НДФЛРасчетыСБюджетом.КПП
	|			КОГДА ЕСТЬNULL(НДФЛРасчетыСБюджетом.ПодразделениеОрганизации.КПП, &ПустойКПП) <> &ПустойКПП
	|				ТОГДА НДФЛРасчетыСБюджетом.ПодразделениеОрганизации.КПП
	|			ИНАЧЕ ЕСТЬNULL(НДФЛРасчетыСБюджетом.ОбособленноеПодразделение.КПП, &ПустойКПП)
	|		КОНЕЦ,
	|		ВТ_Физлица.ОрганизацияФизлица) КАК НДФЛИсчисленный
	// {ОбособленныеПодразделения
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РегистрацияВИФНС КАК РегистрацияВИФНС
	|		ПО НДФЛИсчисленный.КодПоОКАТО = РегистрацияВИФНС.КодПоОКАТО
	|			И НДФЛИсчисленный.КПП = РегистрацияВИФНС.КПП
	|			И НДФЛИсчисленный.ОрганизацияФизлица = РегистрацияВИФНС.Владелец
	// }ОбособленныеПодразделения 
	|";
	
	Запрос.Текст = НДФЛИсчисленныйТекст;
	
	Запрос.УстановитьПараметр("парамНачалоМесяца", НачалоМесяца(ПериодРегистрации));
	
	Запрос.УстановитьПараметр("парамКонецМесяца", КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамОбособленноеПодразделение", Организация);
	Запрос.УстановитьПараметр("парамСсылка", Ссылка);
	Запрос.УстановитьПараметр("парамНачисление", Перечисления.НДФЛРасчетыСБюджетомВидСтроки.Начисление);
	Запрос.УстановитьПараметр("парамПереданоНаВзыскание", Перечисления.НДФЛРасчетыСБюджетомВидСтроки.ПереданоНаВзыскание);
	Запрос.УстановитьПараметр("ПустойКодПоОКАТО","");
	Запрос.УстановитьПараметр("ПустойКПП","");
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	СчетДебета = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда;
	СчетКредита = ПланыСчетов.Хозрасчетный.НДФЛ;
	СубконтоКредита = Перечисления.ВидыПлатежейВГосБюджет.Налог;
	
	Пока Выборка.Следующий() Цикл
		СтрокаТЧ = ОтражениеВУчете.Добавить();
		СтрокаТЧ.СчетДт 	= СчетДебета;
		мСведенияОСчетах = Новый Соответствие;
		СведенияОСчете = БухгалтерскийУчет.ПолучитьСведенияОСчете(мСведенияОСчетах, СчетДебета);
		СтрокаТЧ.СубконтоДт1 = СведенияОСчете.ТипСубконто1.ПривестиЗначение(СтрокаТЧ.СубконтоДт1);
		СтрокаТЧ.СубконтоДт1= Выборка.Физлицо;
		СтрокаТЧ.СчетКт 	= СчетКредита;
		СтрокаТЧ.СубконтоКт1= СубконтоКредита;
		// {ОбособленныеПодразделения
		СтрокаТЧ.СубконтоКт2= Выборка.РегистрацияВИФНС;
		// }ОбособленныеПодразделения 
		СтрокаТЧ.Сумма		= Выборка.Налог;
		СтрокаТЧ.СуммаНУ 	= СтрокаТЧ.Сумма;
		СтрокаТЧ.Физлицо	= Выборка.Физлицо;
		СтрокаТЧ.ПодразделениеДт	= Выборка.ПодразделениеФизлица;
		СтрокаТЧ.ПодразделениеКт	= Выборка.ПодразделениеФизлица;
		// {УчетДоходовИРасходовИП
		Если ОСН_ФизЛицо Тогда
			СтрокаТЧ.ВидНачисленияУдержания = Перечисления.ИПВидыНачисленийУдержаний.УдержаноНДФЛ;
		КонецЕсли;
		// }УчетДоходовИРасходовИП
	КонецЦикла;
	
КонецПроцедуры

/////////////////////////////////////////////////////
// Страховые взносы - с 2010 г.
Процедура ОтражениеИсчисленныхСтраховыхВзносов2011(Запрос, Ссылка, Организация, ГоловнаяОрганизация, УчетнаяПолитика, ПериодРегистрации, НачалоПериодаОтраженияВУчете, ОтражениеВУчете, ПромежуточнаяТаблица, ОтборПоДокументу = Ложь) Экспорт

	Если ПромежуточнаяТаблица.Колонки.Найти("Ссылка") = Неопределено Тогда
		ПромежуточнаяТаблица.Колонки.Добавить("Ссылка");				
	КонецЕсли;
	ПромежуточнаяТаблица.ЗаполнитьЗначения(Ссылка, "Ссылка");		
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	СоздатьВТОтражениеВУчете(Запрос, ОтражениеВУчете, Ссылка);
	
	мУСН 												= УчетнаяПолитика.УСН;
	ПредпринимательНаОСН = Не мУСН и ОбщегоНазначения.ПолучитьЗначениеРеквизита(Организация, "ЮрФизЛицо") = Перечисления.ЮрФизЛицо.ФизЛицо;
	мЗаполнятьДанныеНУ = Не (мУСН или ПредпринимательНаОСН );
	мЕНВД = УчетнаяПолитика.ОрганизацияЯвляетсяПлательщикомЕНВД;
	мФСС_БЛ = УчетнаяПолитика.УплачиватьДобровольныеВзносыВФСС;
	мУчетПоПодразделениямНаСчетах = Истина;
	мЗаполнятьСчетаНУ  = Истина;
	
	мПериодГод2011 = Год(ПериодРегистрации) >= 2011;
	
	Запрос.УстановитьПараметр("парамОбособленноеПодразделение", Организация);
	Запрос.УстановитьПараметр("парамПериодРегистрации", ПериодРегистрации);

	//////////////////////////////////////////////////////////////////////////////////////////////////
	// отражение исчисленных страховых взносов в текущем месяце
	
	// Получение коэффициентов отражения страховых взносов  
	МассивПериодовРегистрации = Новый Массив;
	МассивПериодовРегистрации.Добавить(ПериодРегистрации);
	
	ТаблицаКоэффициентов = ПолучитьДанныеУчетаСтраховыхВзносов2011(ОтражениеВУчете, Ссылка, МассивПериодовРегистрации, ГоловнаяОрганизация);
	ТаблицаКоэффициентов.Индексы.Добавить("ФизЛицо");
	
	// запрос по соответствиям статей затрат начислений 
	// для подстановки статей затрат при формировании проводок страховым взносам
    // (перечисление ВидыДополнительныхСтатейЗатрат)
    Запрос.Текст = 
    "ВЫБРАТЬ
    |   СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете.ВидСтатьиЗатрат,
    |   СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете.СтатьяЗатратНачисления,
    |   СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете.СтатьяЗатрат
    |ИЗ
    |   РегистрСведений.СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете КАК СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете
    |ГДЕ
    |   СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете.ВидСтатьиЗатрат ССЫЛКА Перечисление.ВидыДополнительныхСтатейЗатрат";
    
    ДополнительныеСтатьиЗатрат = Запрос.Выполнить().Выгрузить();
	
	ПараметрыПолученияСубконто = Новый Соответствие;
    ТипСтатьиЗатрат = Тип("СправочникСсылка.СтатьиЗатрат");
    ПараметрыПолученияСубконто[ТипСтатьиЗатрат] = Новый Структура("ВидСтатьиЗатрат, ДополнительныеСтатьиЗатрат", , ДополнительныеСтатьиЗатрат);
	
	ТипСтатьиЗатрат = Тип("СправочникСсылка.ПрочиеДоходыИРасходы");
    ПараметрыПолученияСубконто[ТипСтатьиЗатрат] = Новый Структура("ВидСтатьиЗатрат, ДополнительныеСтатьиЗатрат", , ДополнительныеСтатьиЗатрат);
	
    // Исчисленные страховые взносы в текущем месяце
	//	Поля:
	//		ФизЛицо
	//		ФСС_НеЕНВД - в части видов деятельности, не облагаемых ЕНВД	
	//		ФФОМС_НеЕНВД
	//		ТФОМС_НеЕНВД
	//		ФСС_ЕНВД - в части видов деятельности, облагаемых ЕНВД     
	//		ПФРНакопительная_НеЕНВД	 
	//
	//		ФСС_НеЕНВД - в части видов деятельности, облагаемых ЕНВД     
	//		ТФОМС_ЕНВД
	//		ФФОМС_ЕНВД	 
	//		ПФРНакопительная_ЕНВД
	//		ПФРСтраховая_ЕНВД
	//
	//		ФССНесчастныеСлучаи
	//		ПФРПоДополнительномуТарифу
	// Описание:
	// просуммированный исчисленные страховые взносы в разрезе физлиц
	//
	Запрос.Текст =  
	"ВЫБРАТЬ
	|	СтраховыеВзносыИсчисленные.ФизЛицо КАК ФизЛицо,
	|	СУММА(СтраховыеВзносыИсчисленные.ПФРСтраховая) КАК ПФРСтраховая_НеЕНВД,
	|	СУММА(СтраховыеВзносыИсчисленные.ПФРСтраховаяЕНВД) КАК ПФРСтраховая_ЕНВД,
	|	СУММА(СтраховыеВзносыИсчисленные.ПФРНакопительная) КАК ПФРНакопительная_НеЕНВД,	
	|	СУММА(СтраховыеВзносыИсчисленные.ПФРНакопительнаяЕНВД) КАК ПФРНакопительная_ЕНВД,
	|	СУММА(СтраховыеВзносыИсчисленные.ФСС) КАК ФСС_НеЕНВД,
	|	СУММА(СтраховыеВзносыИсчисленные.ФССЕНВД) КАК ФСС_ЕНВД,
	|	СУММА(СтраховыеВзносыИсчисленные.ФФОМС) КАК ФФОМС_НеЕНВД,
	|	СУММА(СтраховыеВзносыИсчисленные.ФФОМСЕНВД) КАК ФФОМС_ЕНВД,
	|	СУММА(СтраховыеВзносыИсчисленные.ТФОМС) КАК ТФОМС_НеЕНВД,
	|	СУММА(СтраховыеВзносыИсчисленные.ТФОМСЕНВД) КАК ТФОМС_ЕНВД,
	|	СУММА(СтраховыеВзносыИсчисленные.ФССНесчастныеСлучаи) КАК ФССНесчастныеСлучаи,
	|	СУММА(СтраховыеВзносыИсчисленные.ПФРПоДополнительномуТарифу) КАК ПФРПоДополнительномуТарифу,
	|	СУММА(СтраховыеВзносыИсчисленные.ПФРНаДоплатуКПенсииШахтерам) КАК ПФРНаДоплатуКПенсииШахтерам
	|ИЗ
	|	РегистрНакопления.СтраховыеВзносыИсчисленные КАК СтраховыеВзносыИсчисленные
	|ГДЕ
	|	СтраховыеВзносыИсчисленные.Период = &парамПериодРегистрации
	|	И СтраховыеВзносыИсчисленные.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|
	|СГРУППИРОВАТЬ ПО
	|	СтраховыеВзносыИсчисленные.ФизЛицо";
	
	Выборка = Запрос.Выполнить().Выбрать();

    СубконтоКредита = Перечисления.ВидыПлатежейВГосБюджет.Налог;
	Отбор = Новый Структура("ФизЛицо");
	
	// в этой таблице соберем физлиц и суммы взносов, для которых нет базы в текущем месяце
	ТаблицаНетБазы = Новый ТаблицаЗначений;
	ТаблицаНетБазы.Колонки.Добавить("Физлицо");
	ТаблицаНетБазы.Колонки.Добавить("ВидБазы");
	ТаблицаНетБазы.Колонки.Добавить("СуммаВзноса");
	ТаблицаНетБазы.Колонки.Добавить("СчетКт");
	ТаблицаНетБазы.Колонки.Добавить("СчетКтНУ");
	
	Пока Выборка.Следующий() Цикл

		Отбор.ФизЛицо = Выборка.ФизЛицо;
		СтрокиОтраженияПоФизЛицу = ТаблицаКоэффициентов.НайтиСтроки(Отбор);
		
		Если СтрокиОтраженияПоФизЛицу.Количество() = 0 Тогда
			
			Если Выборка.ФСС_НеЕНВД <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаФСС_НеЕНВД";
				НоваяСтрока.СуммаВзноса = Выборка.ФСС_НеЕНВД;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФСС;
			КонецЕсли;
			Если Выборка.ФСС_ЕНВД <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаФСС_ЕНВД";
				НоваяСтрока.СуммаВзноса = Выборка.ФСС_ЕНВД;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФСС;
			КонецЕсли;
			
			Если Выборка.ФФОМС_НеЕНВД <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаФОМС_НеЕНВД";
				НоваяСтрока.СуммаВзноса = Выборка.ФФОМС_НеЕНВД;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФФОМС;
			КонецЕсли;
			Если Выборка.ФФОМС_ЕНВД <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаФОМС_ЕНВД";
				НоваяСтрока.СуммаВзноса = Выборка.ФФОМС_ЕНВД;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФФОМС;
			КонецЕсли;
			
			Если Выборка.ТФОМС_НеЕНВД <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаФОМС_НеЕНВД";
				НоваяСтрока.СуммаВзноса = Выборка.ТФОМС_НеЕНВД;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ТФОМС;
			КонецЕсли;
			Если Выборка.ТФОМС_ЕНВД <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаФОМС_ЕНВД";
				НоваяСтрока.СуммаВзноса = Выборка.ТФОМС_ЕНВД;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ТФОМС;
			КонецЕсли;
			
			Если Выборка.ПФРНакопительная_НеЕНВД <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаПФР_НеЕНВД";
				НоваяСтрока.СуммаВзноса = Выборка.ПФРНакопительная_НеЕНВД;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_нак;
			КонецЕсли;
			Если Выборка.ПФРНакопительная_ЕНВД <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаПФР_ЕНВД";
				НоваяСтрока.СуммаВзноса = Выборка.ПФРНакопительная_ЕНВД;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_нак;
			КонецЕсли;
			
			Если Выборка.ПФРСтраховая_НеЕНВД <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаПФР_НеЕНВД";
				НоваяСтрока.СуммаВзноса = Выборка.ПФРСтраховая_НеЕНВД;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_страх;
			КонецЕсли;
			Если Выборка.ПФРСтраховая_ЕНВД <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаПФР_ЕНВД";
				НоваяСтрока.СуммаВзноса = Выборка.ПФРСтраховая_ЕНВД;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_страх;
			КонецЕсли;
			
			Если Выборка.ПФРПоДополнительномуТарифу <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаДопТариф";
				НоваяСтрока.СуммаВзноса = Выборка.ПФРПоДополнительномуТарифу;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_доп;
			КонецЕсли;
			Если Выборка.ПФРНаДоплатуКПенсииШахтерам <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаДопТарифШахтеры";
				НоваяСтрока.СуммаВзноса = Выборка.ПФРНаДоплатуКПенсииШахтерам;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_доп_шахтеры;
			КонецЕсли;
			Если Выборка.ФССНесчастныеСлучаи <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаФСС_НС";
				НоваяСтрока.СуммаВзноса = Выборка.ФССНесчастныеСлучаи;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ;
			КонецЕсли;	
			
			Продолжить;		
		КонецЕсли;		
		
		// ФСС по видам деятельности, не облагаемым ЕНВД
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФСС_НеЕНВД");
		РезультатыФСС_НеЕНВД = ОбщегоНазначения.РаспределитьПропорционально(Выборка.ФСС_НеЕНВД, Коэффициенты);
		
		// ФСС по видам деятельности, облагаемым ЕНВД
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФСС_ЕНВД");
		РезультатыФСС_ЕНВД = ОбщегоНазначения.РаспределитьПропорционально(Выборка.ФСС_ЕНВД, Коэффициенты);
		
		// ФФОМС по видам деятельности, не облагаемым ЕНВД
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФОМС_НеЕНВД");
		РезультатыФФОМС_НеЕНВД = ОбщегоНазначения.РаспределитьПропорционально(Выборка.ФФОМС_НеЕНВД, Коэффициенты);
		
		// ФФОМС по видам деятельности, облагаемым ЕНВД
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФОМС_ЕНВД");
		РезультатыФФОМС_ЕНВД = ОбщегоНазначения.РаспределитьПропорционально(Выборка.ФФОМС_ЕНВД, Коэффициенты);

		// ТФОМС по видам деятельности, не облагаемым ЕНВД
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФОМС_НеЕНВД");
		РезультатыТФОМС_НеЕНВД = ОбщегоНазначения.РаспределитьПропорционально(Выборка.ТФОМС_НеЕНВД, Коэффициенты);
		
		// ТФОМС по видам деятельности, облагаемым ЕНВД
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФОМС_ЕНВД");
		РезультатыТФОМС_ЕНВД = ОбщегоНазначения.РаспределитьПропорционально(Выборка.ТФОМС_ЕНВД, Коэффициенты);
		
		// ПФР по видам деятельности, не облагаемым ЕНВД
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаПФР_НеЕНВД");
		РезультатыПФРНакопительная_НеЕНВД = ОбщегоНазначения.РаспределитьПропорционально(Выборка.ПФРНакопительная_НеЕНВД, Коэффициенты);
		РезультатыПФРСтраховая_НеЕНВД = ОбщегоНазначения.РаспределитьПропорционально(Выборка.ПФРСтраховая_НеЕНВД, Коэффициенты);

		// ПФР по видам деятельности, облагаемым ЕНВД
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаПФР_ЕНВД");
		РезультатыПФРНакопительная_ЕНВД = ОбщегоНазначения.РаспределитьПропорционально(Выборка.ПФРНакопительная_ЕНВД, Коэффициенты);
		РезультатыПФРСтраховая_ЕНВД = ОбщегоНазначения.РаспределитьПропорционально(Выборка.ПФРСтраховая_ЕНВД, Коэффициенты);
  
		// доп тариф
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаДопТариф");
		РезультатыДопТариф = ОбщегоНазначения.РаспределитьПропорционально(Выборка.ПФРПоДополнительномуТарифу, Коэффициенты);
		
		// доп тариф шахтеры
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаДопТарифШахтеры");
		РезультатыДопТарифШахтеры = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ПФРНаДоплатуКПенсииШахтерам, Коэффициенты);
		
		// ФСС_НС
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФСС_НС");
		РезультатыФСС_НС = ОбщегоНазначения.РаспределитьПропорционально(Выборка.ФССНесчастныеСлучаи, Коэффициенты);
		
		Если РезультатыФСС_НеЕНВД = Неопределено и Выборка.ФСС_НеЕНВД <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаФСС_НеЕНВД";
			НоваяСтрока.СуммаВзноса = Выборка.ФСС_НеЕНВД;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФСС;
		КонецЕсли;
		Если РезультатыФСС_ЕНВД = Неопределено и Выборка.ФСС_ЕНВД <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаФСС_ЕНВД";
			НоваяСтрока.СуммаВзноса = Выборка.ФСС_ЕНВД;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФСС;
		КонецЕсли;
		
		Если РезультатыФФОМС_НеЕНВД = Неопределено и Выборка.ФФОМС_НеЕНВД <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаФОМС_НеЕНВД";
			НоваяСтрока.СуммаВзноса = Выборка.ФФОМС_НеЕНВД;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФФОМС;
		КонецЕсли;
		Если РезультатыФФОМС_ЕНВД = Неопределено и Выборка.ФФОМС_ЕНВД <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаФОМС_ЕНВД";
			НоваяСтрока.СуммаВзноса = Выборка.ФФОМС_ЕНВД;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФФОМС;
		КонецЕсли;
		
		Если РезультатыТФОМС_НеЕНВД = Неопределено и Выборка.ТФОМС_НеЕНВД <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаФОМС_НеЕНВД";
			НоваяСтрока.СуммаВзноса = Выборка.ТФОМС_НеЕНВД;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ТФОМС;
		КонецЕсли;
		Если РезультатыТФОМС_ЕНВД = Неопределено и Выборка.ТФОМС_ЕНВД <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаФОМС_ЕНВД";
			НоваяСтрока.СуммаВзноса = Выборка.ТФОМС_ЕНВД;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ТФОМС;
		КонецЕсли;
		
		Если РезультатыПФРНакопительная_НеЕНВД = Неопределено и Выборка.ПФРНакопительная_НеЕНВД <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаПФР_НеЕНВД";
			НоваяСтрока.СуммаВзноса = Выборка.ПФРНакопительная_НеЕНВД;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_нак;
		КонецЕсли;
		Если РезультатыПФРНакопительная_ЕНВД = Неопределено и Выборка.ПФРНакопительная_ЕНВД <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаПФР_ЕНВД";
			НоваяСтрока.СуммаВзноса = Выборка.ПФРНакопительная_ЕНВД;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_нак;
		КонецЕсли;
		
		Если РезультатыПФРСтраховая_НеЕНВД = Неопределено и Выборка.ПФРСтраховая_НеЕНВД <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаПФР_НеЕНВД";
			НоваяСтрока.СуммаВзноса = Выборка.ПФРСтраховая_НеЕНВД;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_страх;
		КонецЕсли;
		Если РезультатыПФРСтраховая_ЕНВД = Неопределено и Выборка.ПФРСтраховая_ЕНВД <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаПФР_ЕНВД";
			НоваяСтрока.СуммаВзноса = Выборка.ПФРСтраховая_ЕНВД;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_страх;
		КонецЕсли;
		
		Если РезультатыДопТариф = Неопределено и Выборка.ПФРПоДополнительномуТарифу <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаДопТариф";
			НоваяСтрока.СуммаВзноса = Выборка.ПФРПоДополнительномуТарифу;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_доп;
		КонецЕсли;
		
		Если РезультатыДопТарифШахтеры = Неопределено и Выборка.ПФРНаДоплатуКПенсииШахтерам <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаДопТарифШахтеры";
			НоваяСтрока.СуммаВзноса = Выборка.ПФРНаДоплатуКПенсииШахтерам;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_доп_шахтеры;
		КонецЕсли;
		
		Если РезультатыФСС_НС = Неопределено и Выборка.ФССНесчастныеСлучаи <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаФСС_НС";
			НоваяСтрока.СуммаВзноса = Выборка.ФССНесчастныеСлучаи;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ;
		КонецЕсли;
		
		Индекс = 0;
		Для Каждого СтрокаОтражения Из СтрокиОтраженияПоФизЛицу Цикл
			//////////////////////////////////////////////////////////
			// страховые взносы
			ПараметрыПолученияСубконто[Тип("СправочникСсылка.СтатьиЗатрат")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.СтраховыеВзносы;
			ПараметрыПолученияСубконто[Тип("СправочникСсылка.ПрочиеДоходыИРасходы")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.СтраховыеВзносы;
			
			Если РезультатыФСС_НеЕНВД <> Неопределено Тогда
				ДобавитьСтрокуПромежуточнойТаблицы(ПромежуточнаяТаблица, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФСС, РезультатыФСС_НеЕНВД[Индекс], мЗаполнятьДанныеНУ, мПериодГод2011);
			КонецЕсли;
			Если РезультатыФСС_ЕНВД <> Неопределено Тогда
				ДобавитьСтрокуПромежуточнойТаблицы(ПромежуточнаяТаблица, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФСС, РезультатыФСС_ЕНВД[Индекс], мЗаполнятьДанныеНУ, мПериодГод2011);
			КонецЕсли;
			
			Если РезультатыФФОМС_НеЕНВД <> Неопределено Тогда
				ДобавитьСтрокуПромежуточнойТаблицы(ПромежуточнаяТаблица, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФФОМС, РезультатыФФОМС_НеЕНВД[Индекс], мЗаполнятьДанныеНУ, мПериодГод2011);
			КонецЕсли;
			Если РезультатыФФОМС_ЕНВД <> Неопределено Тогда
				ДобавитьСтрокуПромежуточнойТаблицы(ПромежуточнаяТаблица, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФФОМС, РезультатыФФОМС_ЕНВД[Индекс], мЗаполнятьДанныеНУ, мПериодГод2011);
			КонецЕсли;
			
			Если РезультатыТФОМС_НеЕНВД <> Неопределено Тогда
				ДобавитьСтрокуПромежуточнойТаблицы(ПромежуточнаяТаблица, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ТФОМС, РезультатыТФОМС_НеЕНВД[Индекс], мЗаполнятьДанныеНУ, мПериодГод2011);
			КонецЕсли;
			Если РезультатыТФОМС_ЕНВД <> Неопределено Тогда
				ДобавитьСтрокуПромежуточнойТаблицы(ПромежуточнаяТаблица, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ТФОМС, РезультатыТФОМС_ЕНВД[Индекс], мЗаполнятьДанныеНУ, мПериодГод2011);
			КонецЕсли;
			
			Если РезультатыПФРНакопительная_НеЕНВД <> Неопределено Тогда
				ДобавитьСтрокуПромежуточнойТаблицы(ПромежуточнаяТаблица, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_нак, РезультатыПФРНакопительная_НеЕНВД[Индекс], мЗаполнятьДанныеНУ, мПериодГод2011);
			КонецЕсли;
			Если РезультатыПФРНакопительная_ЕНВД <> Неопределено Тогда
				ДобавитьСтрокуПромежуточнойТаблицы(ПромежуточнаяТаблица, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_нак, РезультатыПФРНакопительная_ЕНВД[Индекс], мЗаполнятьДанныеНУ, мПериодГод2011);
			КонецЕсли;
			
			Если РезультатыПФРСтраховая_НеЕНВД <> Неопределено Тогда
				ДобавитьСтрокуПромежуточнойТаблицы(ПромежуточнаяТаблица, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_страх, РезультатыПФРСтраховая_НеЕНВД[Индекс], мЗаполнятьДанныеНУ, мПериодГод2011);
			КонецЕсли;
			Если РезультатыПФРСтраховая_ЕНВД <> Неопределено Тогда
				ДобавитьСтрокуПромежуточнойТаблицы(ПромежуточнаяТаблица, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_страх, РезультатыПФРСтраховая_ЕНВД[Индекс], мЗаполнятьДанныеНУ, мПериодГод2011);
			КонецЕсли;
						
			Если РезультатыДопТариф <> Неопределено Тогда
				ДобавитьСтрокуПромежуточнойТаблицы(ПромежуточнаяТаблица, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_доп, РезультатыДопТариф[Индекс], мЗаполнятьДанныеНУ, мПериодГод2011);
			КонецЕсли;
			
			Если РезультатыДопТарифШахтеры <> Неопределено Тогда
				ДобавитьСтрокуПромежуточнойТаблицы(ПромежуточнаяТаблица, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_доп_шахтеры, РезультатыДопТарифШахтеры[Индекс], мЗаполнятьДанныеНУ, мПериодГод2011);
			КонецЕсли;
			//////////////////////////////////////////////////////////
			// ФСС_НС
			ПараметрыПолученияСубконто[Тип("СправочникСсылка.СтатьиЗатрат")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.ФСС_НС;
			ПараметрыПолученияСубконто[Тип("СправочникСсылка.ПрочиеДоходыИРасходы")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.ФСС_НС;
			
			Если РезультатыФСС_НС <> Неопределено Тогда
				ДобавитьСтрокуПромежуточнойТаблицы(ПромежуточнаяТаблица, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ, РезультатыФСС_НС[Индекс], мЗаполнятьДанныеНУ, мПериодГод2011);
			КонецЕсли;
			
			Индекс = Индекс + 1;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Если ТаблицаНетБазы.Количество() > 0 и Не Месяц(ПериодРегистрации) = 1 Тогда
		// есть суммы взносов, которые не отразили в учете из-за отсутствия базы в текущем месяце
		// получим коэффициенты по данным с начала года без текущего месяца
		
		ВремТаблица = ТаблицаНетБазы.Скопировать();
		ВремТаблица.Свернуть("Физлицо");
		МассивФизлиц = ВремТаблица.ВыгрузитьКолонку("Физлицо");
		
		МассивПериодовРегистрации = Новый Массив;
		ДатаНачалаМесяца = НачалоГода(ПериодРегистрации);
		МассивПериодовРегистрации.Добавить(ДатаНачалаМесяца);
		Пока ДатаНачалаМесяца < НачалоМесяца(ПериодРегистрации-1) Цикл
			ДатаНачалаМесяца = НачалоМесяца(КонецМесяца(ДатаНачалаМесяца)+1);
			МассивПериодовРегистрации.Добавить(ДатаНачалаМесяца);
		КонецЦикла;
		
	
		ТаблицаКоэффициентов = ПолучитьДанныеУчетаСтраховыхВзносов2011(ОтражениеВУчете, Ссылка, МассивПериодовРегистрации, ГоловнаяОрганизация, МассивФизлиц);
	
		ТаблицаКоэффициентов.Индексы.Добавить("ФизЛицо");
		
		МассивСтрокКУдалению = Новый Массив;
		
		Для каждого СтрокаТЗ Из ТаблицаНетБазы Цикл
			
			Отбор.ФизЛицо = СтрокаТЗ.ФизЛицо;
			СтрокиОтраженияПоФизЛицу = ТаблицаКоэффициентов.НайтиСтроки(Отбор);
			
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,СтрокаТЗ.ВидБазы);
			Результаты = ОбщегоНазначения.РаспределитьПропорционально(СтрокаТЗ.СуммаВзноса, Коэффициенты);
			
			Если Результаты <> Неопределено Тогда
				МассивСтрокКУдалению.Добавить(СтрокаТЗ); 
				Индекс = 0;
				Для Каждого СтрокаОтражения Из СтрокиОтраженияПоФизЛицу Цикл
					
					ДобавитьСтрокуПромежуточнойТаблицы(ПромежуточнаяТаблица, СтрокаОтражения, ПараметрыПолученияСубконто, СтрокаТЗ.СчетКт, Результаты[Индекс], мЗаполнятьДанныеНУ, мПериодГод2011);
					Индекс = Индекс +1;
					
				КонецЦикла;
			КонецЕсли;
		
		КонецЦикла;
		
		Для каждого СтрокаТаблицы Из МассивСтрокКУдалению Цикл
			ТаблицаНетБазы.Удалить(СтрокаТаблицы);
		КонецЦикла;
		
	КонецЕсли;	

	Если ТаблицаНетБазы.Количество() > 0 Тогда
		//нет базы и с начала года, отразим взносы в Дт 91 счета
		Для каждого СтрокаТЗ Из ТаблицаНетБазы Цикл
			
			СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
			
			СтрокаТЧ.СчетДт			= ПланыСчетов.Хозрасчетный.ПрочиеРасходы;
			СтрокаТЧ.СубконтоДт1    = Справочники.ПрочиеДоходыИРасходы.РасходыПоУплатеСтраховыхВзносов;
			СтрокаТЧ.СчетКт			= СтрокаТЗ.СчетКт;
			СтрокаТЧ.СубконтоКт1	= Перечисления.ВидыПлатежейВГосБюджет.Налог;
			
			Если мЗаполнятьДанныеНУ и ЗначениеЗаполнено(СтрокаТЗ.СчетКт) Тогда
				СтрокаТЧ.СуммаНУ		= СтрокаТЗ.СуммаВзноса;
			КонецЕсли;
			
			СтрокаТЧ.Сумма			= СтрокаТЗ.СуммаВзноса;
			
		КонецЦикла;
	КонецЕсли;	
	
	// отражение исчисленных страховых взносов в текущем месяце
	//////////////////////////////////////////////////////////////////////////////////////////////////
	
	// вычеркнем обнулившиеся суммы
	ПромежуточнаяТаблица.Свернуть("СчетДт,СчетДтНУ,СчетКт,СубконтоДт1,СубконтоДт2,СубконтоДт3,СубконтоКт1,СубконтоКт2,СубконтоКт3,СубконтоДтНУ1,СубконтоДтНУ2,СубконтоДтНУ3,ОтражениеВУСН,ПодразделениеДт,ПодразделениеКт", "Сумма,СуммаНУ");
	ПромежуточнаяТаблица.Индексы.Добавить("Сумма");
	НулевыеСтроки = ПромежуточнаяТаблица.НайтиСтроки(Новый Структура("Сумма",0));
	Для каждого СтрокаТаблицы Из НулевыеСтроки Цикл
		ПромежуточнаяТаблица.Удалить(СтрокаТаблицы)
	КонецЦикла;
	
	Если ТипЗнч(ОтражениеВУчете) = Тип("ТаблицаЗначений") Тогда
		ОтражениеВУчете.Очистить();
	КонецЕсли;
	
	Для каждого СтрокаТаблицы Из ПромежуточнаяТаблица Цикл
		
		СтрокаОтражения = ОтражениеВУчете.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаОтражения, СтрокаТаблицы);
		
		Если Год(ПериодРегистрации) >= 2010
			И СтрокаТаблицы.СчетДт = ПланыСчетов.Хозрасчетный.РасходыНаОплатуТрудаБудущихПериодов 
			И ЗначениеЗаполнено(СтрокаТаблицы.СчетДтНУ)
			И СтрокаТаблицы.СчетДт <> СтрокаТаблицы.СчетДтНУ Тогда
			
			СтрокаОтражения.СуммаВР = СтрокаОтражения.СуммаНУ;
			СтрокаОТражения.СуммаНУ = 0;
			
			СтрокаОтражения2 = ОтражениеВУчете.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаОтражения2, СтрокаТаблицы);
			
			СтрокаОтражения2.СчетДт = СтрокаТаблицы.СчетДтНУ;
			СтрокаОтражения2.СубконтоДт1 = СтрокаТаблицы.СубконтоДтНУ1;
			СтрокаОтражения2.СубконтоДт2 = СтрокаТаблицы.СубконтоДтНУ2;
			СтрокаОтражения2.СубконтоДт3 = СтрокаТаблицы.СубконтоДтНУ3;
			СтрокаОТражения2.Сумма = 0;
			СтрокаОтражения2.СуммаВР = -СтрокаОтражения2.СуммаНУ;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры //ОтражениеИсчисленныхСтраховыхВзносов()

/////////////////////////////////////////////////////
// Страховые взносы - с 2010 г.
Процедура ОтражениеИсчисленныхСтраховыхВзносов2010(Запрос, Ссылка, Организация, ГоловнаяОрганизация, УчетнаяПолитика, ПериодРегистрации, НачалоПериодаОтраженияВУчете, ОтражениеВУчете, ПромежуточнаяТаблица, ОтборПоДокументу = Ложь) Экспорт

	Если ПромежуточнаяТаблица.Колонки.Найти("Ссылка") = Неопределено Тогда
		ПромежуточнаяТаблица.Колонки.Добавить("Ссылка");				
	КонецЕсли;
	ПромежуточнаяТаблица.ЗаполнитьЗначения(Ссылка, "Ссылка");		

	ДатаЗакона213ФЗ = ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	СоздатьВТОтражениеВУчете(Запрос, ОтражениеВУчете, Ссылка);
	
	мУСН 												= УчетнаяПолитика.УСН;
	ПредпринимательНаОСН = Не мУСН и ОбщегоНазначения.ПолучитьЗначениеРеквизита(Организация, "ЮрФизЛицо") = Перечисления.ЮрФизЛицо.ФизЛицо;
	мЗаполнятьДанныеНУ = Не (мУСН или ПредпринимательНаОСН );
	мЕНВД = УчетнаяПолитика.ОрганизацияЯвляетсяПлательщикомЕНВД;
	мФСС_БЛ = УчетнаяПолитика.УплачиватьДобровольныеВзносыВФСС;
	мУчетПоПодразделениямНаСчетах = Истина;
	мЗаполнятьСчетаНУ  = Истина;
	
	мПериодГод2011 = Год(ПериодРегистрации) >= 2011;
	
	Запрос.УстановитьПараметр("парамОбособленноеПодразделение", Организация);
	Запрос.УстановитьПараметр("парамПериодРегистрации", ПериодРегистрации);
	Запрос.УстановитьПараметр("ДатаЗакона213ФЗ", ДатаЗакона213ФЗ);

	//////////////////////////////////////////////////////////////////////////////////////////////////
	// отражение исчисленных страховых взносов в текущем месяце
	
	// Получение коэффициентов отражения страховых взносов  
	МассивПериодовРегистрации = Новый Массив;
	МассивПериодовРегистрации.Добавить(ПериодРегистрации);
	
	ТаблицаКоэффициентов = ПолучитьДанныеУчетаСтраховыхВзносов2010(ОтражениеВУчете, Ссылка, МассивПериодовРегистрации, ГоловнаяОрганизация);
	ТаблицаКоэффициентов.Индексы.Добавить("ФизЛицо");
	
	// запрос по соответствиям статей затрат начислений 
	// для подстановки статей затрат при формировании проводок страховым взносам
    // (перечисление ВидыДополнительныхСтатейЗатрат)
    Запрос.Текст = 
    "ВЫБРАТЬ
    |   СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете.ВидСтатьиЗатрат,
    |   СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете.СтатьяЗатратНачисления,
    |   СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете.СтатьяЗатрат
    |ИЗ
    |   РегистрСведений.СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете КАК СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете
    |ГДЕ
    |   СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете.ВидСтатьиЗатрат ССЫЛКА Перечисление.ВидыДополнительныхСтатейЗатрат";
    
    ДополнительныеСтатьиЗатрат = Запрос.Выполнить().Выгрузить();
	
	ПараметрыПолученияСубконто = Новый Соответствие;
    ТипСтатьиЗатрат = Тип("СправочникСсылка.СтатьиЗатрат");
    ПараметрыПолученияСубконто[ТипСтатьиЗатрат] = Новый Структура("ВидСтатьиЗатрат, ДополнительныеСтатьиЗатрат", , ДополнительныеСтатьиЗатрат);
	
	ТипСтатьиЗатрат = Тип("СправочникСсылка.ПрочиеДоходыИРасходы");
    ПараметрыПолученияСубконто[ТипСтатьиЗатрат] = Новый Структура("ВидСтатьиЗатрат, ДополнительныеСтатьиЗатрат", , ДополнительныеСтатьиЗатрат);
	
    // Исчисленные страховые взносы в текущем месяце
	//	Поля:
	//		ФизЛицо
	//		ФСС
	//		ФФОМС
	//		ТФОМС
	//		ПФРНакопительная_НеЕНВД - в части видов деятельности, не облагаемых ЕНВД
	//		ПФРСтраховая_НеЕНВД 
	//		ПФРНакопительная_ЕНВД - в части видов деятельности, облагаемых ЕНВД     
	//		ПФРСтраховая_ЕНВД
	//		ФССНесчастныеСлучаи
	//		ПФРПоДополнительномуТарифу
	// Описание:
	// просуммированный исчисленные страховые взносы в разрезе физлиц
	//
	Запрос.Текст =  
	"ВЫБРАТЬ
	|	СтраховыеВзносыИсчисленные.ФизЛицо КАК ФизЛицо,
	|	СУММА(СтраховыеВзносыИсчисленные.ПФРСтраховая) КАК ПФРСтраховая_НеЕНВД,
	|	СУММА(СтраховыеВзносыИсчисленные.ПФРСтраховаяЕНВД) КАК ПФРСтраховая_ЕНВД,
	|	СУММА(СтраховыеВзносыИсчисленные.ПФРНакопительная) КАК ПФРНакопительная_НеЕНВД,
	|	СУММА(СтраховыеВзносыИсчисленные.ПФРНакопительнаяЕНВД) КАК ПФРНакопительная_ЕНВД,
	|	СУММА(СтраховыеВзносыИсчисленные.ФСС) КАК ФСС,
	|	СУММА(СтраховыеВзносыИсчисленные.ФФОМС) КАК ФФОМС,
	|	СУММА(СтраховыеВзносыИсчисленные.ТФОМС) КАК ТФОМС,
	|	СУММА(СтраховыеВзносыИсчисленные.ФССНесчастныеСлучаи) КАК ФССНесчастныеСлучаи,
	|	СУММА(СтраховыеВзносыИсчисленные.ПФРПоДополнительномуТарифу) КАК ПФРПоДополнительномуТарифу
	|ИЗ
	|	РегистрНакопления.СтраховыеВзносыИсчисленные КАК СтраховыеВзносыИсчисленные
	|ГДЕ
	|	СтраховыеВзносыИсчисленные.Период = &парамПериодРегистрации
	|	И СтраховыеВзносыИсчисленные.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|
	|СГРУППИРОВАТЬ ПО
	|	СтраховыеВзносыИсчисленные.ФизЛицо";
	
	Выборка = Запрос.Выполнить().Выбрать();

    СубконтоКредита = Перечисления.ВидыПлатежейВГосБюджет.Налог;
	Отбор = Новый Структура("ФизЛицо");
	
	// в этой таблице соберем физлиц и суммы взносов, для которых нет базы в текущем месяце
	ТаблицаНетБазы = Новый ТаблицаЗначений;
	ТаблицаНетБазы.Колонки.Добавить("Физлицо");
	ТаблицаНетБазы.Колонки.Добавить("ВидБазы");
	ТаблицаНетБазы.Колонки.Добавить("СуммаВзноса");
	ТаблицаНетБазы.Колонки.Добавить("СчетКт");
	ТаблицаНетБазы.Колонки.Добавить("СчетКтНУ");
	
	Пока Выборка.Следующий() Цикл

		Отбор.ФизЛицо = Выборка.ФизЛицо;
		СтрокиОтраженияПоФизЛицу = ТаблицаКоэффициентов.НайтиСтроки(Отбор);
		
		Если СтрокиОтраженияПоФизЛицу.Количество() = 0 Тогда
			
			Если Выборка.ФСС <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаФСС";
				НоваяСтрока.СуммаВзноса = Выборка.ФСС;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФСС;
			КонецЕсли;
			Если Выборка.ФФОМС <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаФОМС";
				НоваяСтрока.СуммаВзноса = Выборка.ФФОМС;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФФОМС;
			КонецЕсли;
			Если Выборка.ТФОМС <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаФОМС";
				НоваяСтрока.СуммаВзноса = Выборка.ТФОМС;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ТФОМС;
			КонецЕсли;
			Если Выборка.ПФРНакопительная_НеЕНВД <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаПФР_НеЕНВД";
				НоваяСтрока.СуммаВзноса = Выборка.ПФРНакопительная_НеЕНВД;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_нак;
			КонецЕсли;
			Если Выборка.ПФРСтраховая_НеЕНВД <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаПФР_НеЕНВД";
				НоваяСтрока.СуммаВзноса = Выборка.ПФРСтраховая_НеЕНВД;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_страх;
			КонецЕсли;
			Если Выборка.ПФРНакопительная_ЕНВД <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаПФР_ЕНВД";
				НоваяСтрока.СуммаВзноса = Выборка.ПФРНакопительная_ЕНВД;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_нак;
			КонецЕсли;
			Если Выборка.ПФРСтраховая_ЕНВД <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаПФР_ЕНВД";
				НоваяСтрока.СуммаВзноса = Выборка.ПФРСтраховая_ЕНВД;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_страх;
			КонецЕсли;
			Если Выборка.ПФРПоДополнительномуТарифу <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаДопТариф";
				НоваяСтрока.СуммаВзноса = Выборка.ПФРПоДополнительномуТарифу;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_доп;
			КонецЕсли;
			Если Выборка.ФССНесчастныеСлучаи <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаФСС_НС";
				НоваяСтрока.СуммаВзноса = Выборка.ФССНесчастныеСлучаи;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ;
			КонецЕсли;	
			
			Продолжить;		
		КонецЕсли;		
		
		// ФСС
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФСС");
		РезультатыФСС = ОбщегоНазначения.РаспределитьПропорционально(Выборка.ФСС, Коэффициенты);

		// ФОМС
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФОМС");
		РезультатыФФОМС = ОбщегоНазначения.РаспределитьПропорционально(Выборка.ФФОМС, Коэффициенты);
		РезультатыТФОМС = ОбщегоНазначения.РаспределитьПропорционально(Выборка.ТФОМС, Коэффициенты);

		// ПФР по видам деятельности, не облагаемым ЕНВД
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаПФР_НеЕНВД");
		РезультатыПФРНакопительная_НеЕНВД = ОбщегоНазначения.РаспределитьПропорционально(Выборка.ПФРНакопительная_НеЕНВД, Коэффициенты);
		РезультатыПФРСтраховая_НеЕНВД = ОбщегоНазначения.РаспределитьПропорционально(Выборка.ПФРСтраховая_НеЕНВД, Коэффициенты);

		// ПФР по видам деятельности, облагаемым ЕНВД
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаПФР_ЕНВД");
		РезультатыПФРНакопительная_ЕНВД = ОбщегоНазначения.РаспределитьПропорционально(Выборка.ПФРНакопительная_ЕНВД, Коэффициенты);
		РезультатыПФРСтраховая_ЕНВД = ОбщегоНазначения.РаспределитьПропорционально(Выборка.ПФРСтраховая_ЕНВД, Коэффициенты);
		
		// доп тариф
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаДопТариф");
		РезультатыДопТариф = ОбщегоНазначения.РаспределитьПропорционально(Выборка.ПФРПоДополнительномуТарифу, Коэффициенты);
		
		// ФСС_НС
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФСС_НС");
		РезультатыФСС_НС = ОбщегоНазначения.РаспределитьПропорционально(Выборка.ФССНесчастныеСлучаи, Коэффициенты);
		
		Если РезультатыФСС = Неопределено и Выборка.ФСС <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаФСС";
			НоваяСтрока.СуммаВзноса = Выборка.ФСС;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФСС;
		КонецЕсли;
		
		Если РезультатыФФОМС = Неопределено и Выборка.ФФОМС <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаФОМС";
			НоваяСтрока.СуммаВзноса = Выборка.ФФОМС;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФФОМС;
		КонецЕсли;
		
		Если РезультатыТФОМС = Неопределено и Выборка.ТФОМС <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаФОМС";
			НоваяСтрока.СуммаВзноса = Выборка.ТФОМС;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ТФОМС;
		КонецЕсли;
		
		Если РезультатыПФРНакопительная_НеЕНВД = Неопределено и Выборка.ПФРНакопительная_НеЕНВД <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаПФР_НеЕНВД";
			НоваяСтрока.СуммаВзноса = Выборка.ПФРНакопительная_НеЕНВД;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_нак;
		КонецЕсли;
		
		Если РезультатыПФРСтраховая_НеЕНВД = Неопределено и Выборка.ПФРСтраховая_НеЕНВД <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаПФР_НеЕНВД";
			НоваяСтрока.СуммаВзноса = Выборка.ПФРСтраховая_НеЕНВД;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_страх;
		КонецЕсли;
		
		Если РезультатыПФРНакопительная_ЕНВД = Неопределено и Выборка.ПФРНакопительная_ЕНВД <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаПФР_ЕНВД";
			НоваяСтрока.СуммаВзноса = Выборка.ПФРНакопительная_ЕНВД;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_нак;
		КонецЕсли;
		
		Если РезультатыПФРСтраховая_ЕНВД = Неопределено и Выборка.ПФРСтраховая_ЕНВД <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаПФР_ЕНВД";
			НоваяСтрока.СуммаВзноса = Выборка.ПФРСтраховая_ЕНВД;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_страх;
		КонецЕсли;
		
		Если РезультатыДопТариф = Неопределено и Выборка.ПФРПоДополнительномуТарифу <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаДопТариф";
			НоваяСтрока.СуммаВзноса = Выборка.ПФРПоДополнительномуТарифу;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_доп;
		КонецЕсли;
		
		Если РезультатыФСС_НС = Неопределено и Выборка.ФССНесчастныеСлучаи <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаФСС_НС";
			НоваяСтрока.СуммаВзноса = Выборка.ФССНесчастныеСлучаи;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ;
		КонецЕсли;
		
		Индекс = 0;
		Для Каждого СтрокаОтражения Из СтрокиОтраженияПоФизЛицу Цикл
			//////////////////////////////////////////////////////////
			// страховые взносы
			ПараметрыПолученияСубконто[Тип("СправочникСсылка.СтатьиЗатрат")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.СтраховыеВзносы;
			ПараметрыПолученияСубконто[Тип("СправочникСсылка.ПрочиеДоходыИРасходы")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.СтраховыеВзносы;
			
			Если РезультатыФСС <> Неопределено Тогда
				ДобавитьСтрокуПромежуточнойТаблицы(ПромежуточнаяТаблица, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФСС, РезультатыФСС[Индекс], мЗаполнятьДанныеНУ, мПериодГод2011);
			КонецЕсли;
			
			Если РезультатыФФОМС <> Неопределено Тогда
				ДобавитьСтрокуПромежуточнойТаблицы(ПромежуточнаяТаблица, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФФОМС, РезультатыФФОМС[Индекс], мЗаполнятьДанныеНУ, мПериодГод2011);
			КонецЕсли;
			
			Если РезультатыТФОМС <> Неопределено Тогда
				ДобавитьСтрокуПромежуточнойТаблицы(ПромежуточнаяТаблица, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ТФОМС, РезультатыТФОМС[Индекс], мЗаполнятьДанныеНУ, мПериодГод2011);
			КонецЕсли;
			
			Если РезультатыПФРНакопительная_НеЕНВД <> Неопределено Тогда
				ДобавитьСтрокуПромежуточнойТаблицы(ПромежуточнаяТаблица, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_нак, РезультатыПФРНакопительная_НеЕНВД[Индекс], мЗаполнятьДанныеНУ, мПериодГод2011);
			КонецЕсли;
			
			Если РезультатыПФРСтраховая_НеЕНВД <> Неопределено Тогда
				ДобавитьСтрокуПромежуточнойТаблицы(ПромежуточнаяТаблица, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_страх, РезультатыПФРСтраховая_НеЕНВД[Индекс], мЗаполнятьДанныеНУ, мПериодГод2011);
			КонецЕсли;
			
			Если РезультатыПФРНакопительная_ЕНВД <> Неопределено Тогда
				ДобавитьСтрокуПромежуточнойТаблицы(ПромежуточнаяТаблица, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_нак, РезультатыПФРНакопительная_ЕНВД[Индекс], мЗаполнятьДанныеНУ, мПериодГод2011);
			КонецЕсли;
			
			Если РезультатыПФРСтраховая_ЕНВД <> Неопределено Тогда
				ДобавитьСтрокуПромежуточнойТаблицы(ПромежуточнаяТаблица, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_страх, РезультатыПФРСтраховая_ЕНВД[Индекс], мЗаполнятьДанныеНУ, мПериодГод2011);
			КонецЕсли;
			
			Если РезультатыДопТариф <> Неопределено Тогда
				ДобавитьСтрокуПромежуточнойТаблицы(ПромежуточнаяТаблица, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_доп, РезультатыДопТариф[Индекс], мЗаполнятьДанныеНУ, мПериодГод2011);
			КонецЕсли;
			
			//////////////////////////////////////////////////////////
			// ФСС_НС
			ПараметрыПолученияСубконто[Тип("СправочникСсылка.СтатьиЗатрат")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.ФСС_НС;
			ПараметрыПолученияСубконто[Тип("СправочникСсылка.ПрочиеДоходыИРасходы")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.ФСС_НС;
			
			Если РезультатыФСС_НС <> Неопределено Тогда
				ДобавитьСтрокуПромежуточнойТаблицы(ПромежуточнаяТаблица, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ, РезультатыФСС_НС[Индекс], мЗаполнятьДанныеНУ, мПериодГод2011);
			КонецЕсли;
			
			Индекс = Индекс + 1;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Если ТаблицаНетБазы.Количество() > 0 и Не Месяц(ПериодРегистрации) = 1 Тогда
		// есть суммы взносов, которые не отразили в учете из-за отсутствия базы в текущем месяце
		// получим коэффициенты по данным с начала года без текущего месяца
		
		ВремТаблица = ТаблицаНетБазы.Скопировать();
		ВремТаблица.Свернуть("Физлицо");
		МассивФизлиц = ВремТаблица.ВыгрузитьКолонку("Физлицо");
		
		МассивПериодовРегистрации = Новый Массив;
		ДатаНачалаМесяца = НачалоГода(ПериодРегистрации);
		МассивПериодовРегистрации.Добавить(ДатаНачалаМесяца);
		Пока ДатаНачалаМесяца < НачалоМесяца(ПериодРегистрации-1) Цикл
			ДатаНачалаМесяца = НачалоМесяца(КонецМесяца(ДатаНачалаМесяца)+1);
			МассивПериодовРегистрации.Добавить(ДатаНачалаМесяца);
		КонецЦикла;
		Если мПериодГод2011 Тогда
			ТаблицаКоэффициентов = ПолучитьДанныеУчетаСтраховыхВзносов2011(ОтражениеВУчете, Ссылка, МассивПериодовРегистрации, ГоловнаяОрганизация, МассивФизлиц);
		Иначе
			ТаблицаКоэффициентов = ПолучитьДанныеУчетаСтраховыхВзносов2010(ОтражениеВУчете, Ссылка, МассивПериодовРегистрации, ГоловнаяОрганизация, МассивФизлиц);
		КонецЕсли;
		ТаблицаКоэффициентов.Индексы.Добавить("ФизЛицо");
		
		МассивСтрокКУдалению = Новый Массив;
		
		Для каждого СтрокаТЗ Из ТаблицаНетБазы Цикл
			
			Отбор.ФизЛицо = СтрокаТЗ.ФизЛицо;
			СтрокиОтраженияПоФизЛицу = ТаблицаКоэффициентов.НайтиСтроки(Отбор);
			
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,СтрокаТЗ.ВидБазы);
			Результаты = ОбщегоНазначения.РаспределитьПропорционально(СтрокаТЗ.СуммаВзноса, Коэффициенты);
			
			Если Результаты <> Неопределено Тогда
				МассивСтрокКУдалению.Добавить(СтрокаТЗ); 
				Индекс = 0;
				Для Каждого СтрокаОтражения Из СтрокиОтраженияПоФизЛицу Цикл
					
					ДобавитьСтрокуПромежуточнойТаблицы(ПромежуточнаяТаблица, СтрокаОтражения, ПараметрыПолученияСубконто, СтрокаТЗ.СчетКт, Результаты[Индекс], мЗаполнятьДанныеНУ, мПериодГод2011);
					Индекс = Индекс +1;
					
				КонецЦикла;
			КонецЕсли;
		
		КонецЦикла;
		
		Для каждого СтрокаТаблицы Из МассивСтрокКУдалению Цикл
			ТаблицаНетБазы.Удалить(СтрокаТаблицы);
		КонецЦикла;
		
	КонецЕсли;	

	Если ТаблицаНетБазы.Количество() > 0 Тогда
		//нет базы и с начала года, отразим взносы в Дт 91 счета
		Для каждого СтрокаТЗ Из ТаблицаНетБазы Цикл
			
			СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
			
			СтрокаТЧ.СчетДт			= ПланыСчетов.Хозрасчетный.ПрочиеРасходы;
			СтрокаТЧ.СубконтоДт1    = Справочники.ПрочиеДоходыИРасходы.РасходыПоУплатеСтраховыхВзносов;
			СтрокаТЧ.СчетКт			= СтрокаТЗ.СчетКт;
			СтрокаТЧ.СубконтоКт1	= Перечисления.ВидыПлатежейВГосБюджет.Налог;
			
			Если мЗаполнятьДанныеНУ и ЗначениеЗаполнено(СтрокаТЗ.СчетКт) Тогда
				СтрокаТЧ.СуммаНУ		= СтрокаТЗ.СуммаВзноса;
			КонецЕсли;
			
			СтрокаТЧ.Сумма			= СтрокаТЗ.СуммаВзноса;
			
		КонецЦикла;
	КонецЕсли;	
	
	// отражение исчисленных страховых взносов в текущем месяце
	//////////////////////////////////////////////////////////////////////////////////////////////////
	
	// вычеркнем обнулившиеся суммы
	ПромежуточнаяТаблица.Свернуть("СчетДт,СчетДтНУ,СчетКт,СубконтоДт1,СубконтоДт2,СубконтоДт3,СубконтоКт1,СубконтоКт2,СубконтоКт3,СубконтоДтНУ1,СубконтоДтНУ2,СубконтоДтНУ3,ОтражениеВУСН,ПодразделениеДт,ПодразделениеКт", "Сумма,СуммаНУ");
	ПромежуточнаяТаблица.Индексы.Добавить("Сумма");
	НулевыеСтроки = ПромежуточнаяТаблица.НайтиСтроки(Новый Структура("Сумма",0));
	Для каждого СтрокаТаблицы Из НулевыеСтроки Цикл
		ПромежуточнаяТаблица.Удалить(СтрокаТаблицы)
	КонецЦикла;
	
	Если ТипЗнч(ОтражениеВУчете) = Тип("ТаблицаЗначений") Тогда
		ОтражениеВУчете.Очистить();
	КонецЕсли;
	
	Для каждого СтрокаТаблицы Из ПромежуточнаяТаблица Цикл
		
		СтрокаОтражения = ОтражениеВУчете.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаОтражения, СтрокаТаблицы);
		
		Если Год(ПериодРегистрации) >= 2010
			И СтрокаТаблицы.СчетДт = ПланыСчетов.Хозрасчетный.РасходыНаОплатуТрудаБудущихПериодов 
			И ЗначениеЗаполнено(СтрокаТаблицы.СчетДтНУ)
			И СтрокаТаблицы.СчетДт <> СтрокаТаблицы.СчетДтНУ Тогда
			
			СтрокаОтражения.СуммаВР = СтрокаОтражения.СуммаНУ;
			СтрокаОТражения.СуммаНУ = 0;
			
			СтрокаОтражения2 = ОтражениеВУчете.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаОтражения2, СтрокаТаблицы);
			
			СтрокаОтражения2.СчетДт = СтрокаТаблицы.СчетДтНУ;
			СтрокаОтражения2.СубконтоДт1 = СтрокаТаблицы.СубконтоДтНУ1;
			СтрокаОтражения2.СубконтоДт2 = СтрокаТаблицы.СубконтоДтНУ2;
			СтрокаОтражения2.СубконтоДт3 = СтрокаТаблицы.СубконтоДтНУ3;
			СтрокаОТражения2.Сумма = 0;
			СтрокаОтражения2.СуммаВР = -СтрокаОтражения2.СуммаНУ;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры //ОтражениеИсчисленныхСтраховыхВзносов()

Процедура ДобавитьСтрокуПромежуточнойТаблицы(ПромежуточнаяТаблица, СтрокаОтражения, ПараметрыПолученияСубконто, СчетКт, Результат, мЗаполнятьДанныеНУ, мПериодГод2011)
	
	СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
	
	Если СтрокаОтражения.ЭтоСчет84 Тогда
		СчетДт = ПланыСчетов.Хозрасчетный.ПрочиеРасходы;
		СубконтоДт1 = Справочники.ПрочиеДоходыИРасходы.РасходыПоУплатеСтраховыхВзносов;
		СубконтоДт2 = Неопределено;
		СубконтоДт3 = Неопределено;
	Иначе
		СчетДт      =  СтрокаОтражения.СчетДт;
		СубконтоДт1 =  ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
		СубконтоДт2 = ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
		СубконтоДт3 = ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
	КонецЕсли;
	
	СубконтоКт1 = Перечисления.ВидыПлатежейВГосБюджет.Налог;
	
	СтрокаТЧ.СчетДт			= СчетДт;
	СтрокаТЧ.СчетДтНУ 		= СтрокаОтражения.СчетДтНУ;
	СтрокаТЧ.СубконтоДтНУ1  = СтрокаОтражения.СубконтоДтНУ1;
	СтрокаТЧ.СубконтоДтНУ2	= СтрокаОтражения.СубконтоДтНУ2;
	СтрокаТЧ.СубконтоДтНУ3	= СтрокаОтражения.СубконтоДтНУ3;

	// Для счета 91.02 устанавливаем только субконто с правильным типом
	Если (СчетДт <> ПланыСчетов.Хозрасчетный.ПрочиеРасходы И СчетДт.Родитель <> ПланыСчетов.Хозрасчетный.ПрочиеРасходы)
		Или ТипЗнч(СубконтоДт1) = Тип("СправочникСсылка.ПрочиеДоходыИРасходы") Тогда
		СтрокаТЧ.СубконтоДт1	= СубконтоДт1;
	КонецЕсли;	
	
	СтрокаТЧ.СубконтоДт2	= СубконтоДт2;
	СтрокаТЧ.СубконтоДт3	= СубконтоДт3;
	СтрокаТЧ.СчетКт			= СчетКт;
	СтрокаТЧ.СубконтоКт1	= СубконтоКт1;
	
	Если мПериодГод2011 Тогда
		Если мЗаполнятьДанныеНУ Тогда
			СтрокаТЧ.СуммаНУ		= Результат;
		КонецЕсли;	
	Иначе
		Если мЗаполнятьДанныеНУ и Не СтрокаОтражения.ОблагаетсяЕНВД Тогда
			СтрокаТЧ.СуммаНУ		= Результат;
		КонецЕсли;
	КонецЕсли;
	
	СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
	СтрокаТЧ.Сумма			= Результат;
	
	СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;  
	СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеКт;
	
КонецПроцедуры

// Функция фозвращает таблицу значений с данными для вычисления коэффициентов отражения в учете Страховых взносов
// Параметры
//  МассивПериодовРегистрации   - массив с периодами регистрации, по которым собираем данные
//  ГоловнаяОрганизация 		– головная организация
//  МассивФизлиц				- Массив физлиц, по которым собираем данные для списания РБП или получения базы с начала года
//
// Возвращаемое значение:
//   Таблица значений 
//
Функция ПолучитьДанныеУчетаСтраховыхВзносов2011(ОтражениеВУчете, Ссылка, МассивПериодовРегистрации, ГоловнаяОрганизация, МассивФизлиц = Неопределено)

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	СоздатьВТОтражениеВУчете(Запрос, ОтражениеВУчете, Ссылка);
	
	// Периоды
	// Таблица список периодов, для получения учетной политики
	// Поля:
	//		Период, конец месяца
	// Описание:

	// конец месяца налогового периода
	КонецМесяца = КонецМесяца(МассивПериодовРегистрации[0]);
	// первый месяц
	ПериодыТекст = "ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ") КАК Период ПОМЕСТИТЬ ВТ_Периоды";
	// прибавим остальные месяцы
	Для Индекс = 1 По МассивПериодовРегистрации.Количество()-1 Цикл
		КонецМесяца = КонецМесяца(МассивПериодовРегистрации[Индекс]);
		ПериодыТекст = ПериодыТекст +" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ")";
	КонецЦикла;	
	
	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить();
	
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация", ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("парамОбособленноеПодразделение", Ссылка.Организация);
	Запрос.УстановитьПараметр("парамНеОтбиратьФизлиц", МассивФизлиц = Неопределено);
	Запрос.УстановитьПараметр("парамМассивПериодовРегистрации", МассивПериодовРегистрации);
	Запрос.УстановитьПараметр("парамМассивФизлиц", МассивФизлиц);
	Запрос.УстановитьПараметр("парамКонецГода", КонецГода(МассивПериодовРегистрации[0]));
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Запрос.УстановитьПараметр("Счет70", ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтраховыеВзносыСведенияОДоходах.Регистратор,
	|	СтраховыеВзносыСведенияОДоходах.НомерСтроки,
	|	СтраховыеВзносыСведенияОДоходах.ФизЛицо КАК ФизЛицо,
	|	СтраховыеВзносыСведенияОДоходах.ВидРасчета КАК ВидРасчета,
	|	СтраховыеВзносыСведенияОДоходах.ВидДохода КАК КодДоходаЕСН,
	|	СтраховыеВзносыСведенияОДоходах.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	СтраховыеВзносыСведенияОДоходах.ОблагаетсяПоДополнительномуТарифу КАК ОблагаетсяПоДополнительномуТарифу,
	|	СтраховыеВзносыСведенияОДоходах.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам КАК ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|	СтраховыеВзносыСведенияОДоходах.Результат КАК Результат,
	|	НАЧАЛОПЕРИОДА(СтраховыеВзносыСведенияОДоходах.Период, МЕСЯЦ) КАК ПериодРегистрации,
	|	СтраховыеВзносыСведенияОДоходах.Скидка
	|ИЗ
	|	РегистрНакопления.СтраховыеВзносыСведенияОДоходах КАК СтраховыеВзносыСведенияОДоходах
	|ГДЕ
	|	НАЧАЛОПЕРИОДА(СтраховыеВзносыСведенияОДоходах.Период, МЕСЯЦ) В (&парамМассивПериодовРегистрации)
	|	И СтраховыеВзносыСведенияОДоходах.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|	И (&парамНеОтбиратьФизлиц
	|			ИЛИ СтраховыеВзносыСведенияОДоходах.ФизЛицо В (&парамМассивФизлиц))
	|	И СтраховыеВзносыСведенияОДоходах.Скидка <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПериодРегистрации,
	|	ФизЛицо,
	|	КодДоходаЕСН,
	|	ОблагаетсяЕНВД,
	|	ОблагаетсяПоДополнительномуТарифу,
	|	ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам";
	РезультатЗапроса = Запрос.Выполнить();
	ТаблицаСкидок = ПолучитьТаблицуСкидокКДоходам(РезультатЗапроса);
	Запрос.УстановитьПараметр("ТаблицаСкидок", ТаблицаСкидок);
	
	МассивСчет84 = Новый Массив();
	МассивСчет84.Добавить(ПланыСчетов.Хозрасчетный.НераспределеннаяПрибыль);
	Запрос.УстановитьПараметр("СчетаИсключения", МассивСчет84);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_Счета84
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&СчетаИсключения)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет70
	|ПОМЕСТИТЬ ВТ_Счета70
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&Счет70)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет70
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ) КАК Месяц,
	|	УчетнаяПолитика.ОрганизацияЯвляетсяПлательщикомЕНВД,
	|	УчетнаяПолитика.ВидТарифаСтраховыхВзносов
	|ПОМЕСТИТЬ ВТ_УчетнаяПолитика
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период КАК Период,
	|		МАКСИМУМ(УчетнаяПолитика.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВТ_Периоды КАК Периоды
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитика
	|			ПО Периоды.Период >= УчетнаяПолитика.Период
	|				И (УчетнаяПолитика.Организация = &парамГоловнаяОрганизация)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период) КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитика
	|		ПО Периоды.ПериодРегистра = УчетнаяПолитика.Период
	|			И (УчетнаяПолитика.Организация = &парамГоловнаяОрганизация)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Месяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСкидок.ФизЛицо КАК ФизЛицо,
	|	ТаблицаСкидок.ВидРасчета КАК ВидРасчета,
	|	ТаблицаСкидок.КодДоходаЕСН КАК КодДоходаЕСН,
	|	ТаблицаСкидок.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	ТаблицаСкидок.ОблагаетсяПоДополнительномуТарифу КАК ОблагаетсяПоДополнительномуТарифу,
	|	ТаблицаСкидок.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам КАК ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|	ТаблицаСкидок.ПериодРегистрации КАК ПериодРегистрации,
	|	ТаблицаСкидок.Скидка
	|ПОМЕСТИТЬ ВТ_СкидкиКДоходам
	|ИЗ
	|	&ТаблицаСкидок КАК ТаблицаСкидок
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодРегистрации,
	|	ФизЛицо,
	|	ВидРасчета,
	|	КодДоходаЕСН,
	|	ОблагаетсяЕНВД,
	|	ОблагаетсяПоДополнительномуТарифу,
	|	ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Доходы.Физлицо КАК Физлицо,
	|	Доходы.ВидРасчета КАК ВидРасчета,
	|	Доходы.Ссылка.ПериодРегистрации КАК ПериодРегистрации,
	|	Доходы.СчетДт КАК СчетДт,
	|	Доходы.СубконтоДт1 КАК СубконтоДт1,
	|	Доходы.СубконтоДт2 КАК СубконтоДт2,
	|	Доходы.СубконтоДт3 КАК СубконтоДт3,
	|	Доходы.СчетДтНУ КАК СчетДтНУ,
	|	Доходы.СубконтоДтНУ1 КАК СубконтоДтНУ1,
	|	Доходы.СубконтоДтНУ2 КАК СубконтоДтНУ2,
	|	Доходы.СубконтоДтНУ3 КАК СубконтоДтНУ3,
	|	Доходы.ОтражениеВУСН КАК ОтражениеВУСН,
	|	СУММА(Доходы.Сумма) КАК Результат,
	|	Доходы.ПодразделениеДт,
	|	Доходы.ПодразделениеКт,
	|	Доходы.ВидРасчета.КодДоходаСтраховыеВзносы КАК ВидДохода,
	|	ВЫБОР
	|		КОГДА (НЕ УчетнаяПолитика.ОрганизацияЯвляетсяПлательщикомЕНВД)
	|			ТОГДА ЛОЖЬ
	|		КОГДА ВЫБОР
	|				КОГДА Доходы.СубконтоДт1 ССЫЛКА Справочник.СтатьиЗатрат
	|					ТОГДА Доходы.СубконтоДт1.ВидДеятельностиДляНалоговогоУчетаЗатрат
	|				КОГДА Доходы.СубконтоДт1 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
	|					ТОГДА Доходы.СубконтоДт1.ВидДеятельностиДляНалоговогоУчетаЗатрат
	|				КОГДА Доходы.СубконтоДт2 ССЫЛКА Справочник.СтатьиЗатрат
	|					ТОГДА Доходы.СубконтоДт2.ВидДеятельностиДляНалоговогоУчетаЗатрат
	|				КОГДА Доходы.СубконтоДт2 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
	|					ТОГДА Доходы.СубконтоДт2.ВидДеятельностиДляНалоговогоУчетаЗатрат
	|				КОГДА Доходы.СубконтоДт3 ССЫЛКА Справочник.СтатьиЗатрат
	|					ТОГДА Доходы.СубконтоДт3.ВидДеятельностиДляНалоговогоУчетаЗатрат
	|				КОГДА Доходы.СубконтоДт3 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
	|					ТОГДА Доходы.СубконтоДт3.ВидДеятельностиДляНалоговогоУчетаЗатрат
	|				ИНАЧЕ NULL
	|			КОНЕЦ = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ПредпринимательскаяДеятельностьОблагаемаяЕНВД)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОблагаетсяЕНВД,
	|	ВЫБОР
	|		КОГДА ВТ_Счета84.Ссылка ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоСчет84
	|ПОМЕСТИТЬ ВТ_БУДоходыПоВР
	|ИЗ
	|	ОтражениеВУчете КАК Доходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетнаяПолитика КАК УчетнаяПолитика
	|		ПО Доходы.Ссылка.ПериодРегистрации = УчетнаяПолитика.Месяц
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Счета84 КАК ВТ_Счета84
	|		ПО Доходы.СчетДт = ВТ_Счета84.Ссылка
	|ГДЕ
	|	(Доходы.Ссылка.Проведен
	|			ИЛИ Доходы.Ссылка = &Ссылка)
	|	И Доходы.СчетКт В
	|			(ВЫБРАТЬ
	|				ВТ_Счета70.Счет70
	|			ИЗ
	|				ВТ_Счета70)
	|	И Доходы.Ссылка.ПериодРегистрации В(&парамМассивПериодовРегистрации)
	|
	|СГРУППИРОВАТЬ ПО
	|	Доходы.ВидРасчета,
	|	Доходы.Ссылка.ПериодРегистрации,
	|	Доходы.СчетДт,
	|	Доходы.СубконтоДт1,
	|	Доходы.СубконтоДт2,
	|	Доходы.СубконтоДт3,
	|	Доходы.СчетДтНУ,
	|	Доходы.СубконтоДтНУ1,
	|	Доходы.СубконтоДтНУ2,
	|	Доходы.СубконтоДтНУ3,
	|	Доходы.ОтражениеВУСН,
	|	Доходы.Физлицо,
	|	Доходы.ВидРасчета.КодДоходаСтраховыеВзносы,
	|	ВЫБОР
	|		КОГДА ВТ_Счета84.Ссылка ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ УчетнаяПолитика.ОрганизацияЯвляетсяПлательщикомЕНВД)
	|			ТОГДА ЛОЖЬ
	|		КОГДА ВЫБОР
	|				КОГДА Доходы.СубконтоДт1 ССЫЛКА Справочник.СтатьиЗатрат
	|					ТОГДА Доходы.СубконтоДт1.ВидДеятельностиДляНалоговогоУчетаЗатрат
	|				КОГДА Доходы.СубконтоДт1 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
	|					ТОГДА Доходы.СубконтоДт1.ВидДеятельностиДляНалоговогоУчетаЗатрат
	|				КОГДА Доходы.СубконтоДт2 ССЫЛКА Справочник.СтатьиЗатрат
	|					ТОГДА Доходы.СубконтоДт2.ВидДеятельностиДляНалоговогоУчетаЗатрат
	|				КОГДА Доходы.СубконтоДт2 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
	|					ТОГДА Доходы.СубконтоДт2.ВидДеятельностиДляНалоговогоУчетаЗатрат
	|				КОГДА Доходы.СубконтоДт3 ССЫЛКА Справочник.СтатьиЗатрат
	|					ТОГДА Доходы.СубконтоДт3.ВидДеятельностиДляНалоговогоУчетаЗатрат
	|				КОГДА Доходы.СубконтоДт3 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
	|					ТОГДА Доходы.СубконтоДт3.ВидДеятельностиДляНалоговогоУчетаЗатрат
	|				ИНАЧЕ NULL
	|			КОНЕЦ = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ПредпринимательскаяДеятельностьОблагаемаяЕНВД)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	Доходы.ПодразделениеДт,
	|	Доходы.ПодразделениеКт
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	ПериодРегистрации,
	|	ВидДохода,
	|	ВидРасчета,
	|	ОблагаетсяЕНВД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Доходы.ФизЛицо КАК ФизЛицо,
	|	Доходы.ВидДохода КАК ВидДохода,
	|	Доходы.ОблагаетсяПоДополнительномуТарифу,
	|	Доходы.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|	НАЧАЛОПЕРИОДА(Доходы.Период, МЕСЯЦ) КАК ПериодРегистрации,
	|	СУММА(ВЫБОР
	|			КОГДА Доходы.ВидДохода.ВходитВБазуФОМС
	|					ИЛИ Доходы.ВидДохода.ВходитВБазуФСС
	|					ИЛИ Доходы.ВидДохода.ВходитВБазуПФР
	|				ТОГДА Доходы.Результат - ЕСТЬNULL(ВТ_СкидкиКДоходам.Скидка, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Результат,
	|	Доходы.ВидРасчета,
	|	Доходы.ВидДохода.ВходитВБазуФОМС КАК ВходитВБазуФОМС,
	|	Доходы.ВидДохода.ВходитВБазуФСС КАК ВходитВБазуФСС,
	|	Доходы.ВидДохода.ВходитВБазуПФР КАК ВходитВБазуПФР,
	|	Доходы.ОблагаетсяЕНВД
	|ПОМЕСТИТЬ ВТ_ВзносыДоходыПоВР
	|ИЗ
	|	РегистрНакопления.СтраховыеВзносыСведенияОДоходах КАК Доходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СкидкиКДоходам КАК ВТ_СкидкиКДоходам
	|		ПО Доходы.ФизЛицо = ВТ_СкидкиКДоходам.ФизЛицо
	|			И Доходы.ВидРасчета = ВТ_СкидкиКДоходам.ВидРасчета
	|			И Доходы.ВидДохода = ВТ_СкидкиКДоходам.КодДоходаЕСН
	|			И (НАЧАЛОПЕРИОДА(Доходы.Период, МЕСЯЦ) = ВТ_СкидкиКДоходам.ПериодРегистрации)
	|			И Доходы.ОблагаетсяЕНВД = ВТ_СкидкиКДоходам.ОблагаетсяЕНВД
	|ГДЕ
	|	Доходы.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|	И НАЧАЛОПЕРИОДА(Доходы.Период, МЕСЯЦ) В (&парамМассивПериодовРегистрации)
	|
	|СГРУППИРОВАТЬ ПО
	|	Доходы.ФизЛицо,
	|	Доходы.ВидРасчета,
	|	Доходы.ВидДохода,
	|	НАЧАЛОПЕРИОДА(Доходы.Период, МЕСЯЦ),
	|	Доходы.ОблагаетсяПоДополнительномуТарифу,
	|	Доходы.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|	Доходы.ВидДохода.ВходитВБазуФОМС,
	|	Доходы.ВидДохода.ВходитВБазуФСС,
	|	Доходы.ВидДохода.ВходитВБазуПФР,
	|	Доходы.ОблагаетсяЕНВД
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	ПериодРегистрации,
	|	ВидДохода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВзносыДоходыПоВР.ФизЛицо,
	|	ВзносыДоходыПоВР.ВидРасчета,
	|	ВзносыДоходыПоВР.ВидДохода КАК ВидДохода,
	|	ВзносыДоходыПоВР.ОблагаетсяПоДополнительномуТарифу,
	|	ВзносыДоходыПоВР.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|	ВзносыДоходыПоВР.ПериодРегистрации,
	|	ВзносыДоходыПоВР.Результат,
	|	БУДоходыПоВР.СчетДт,
	|	БУДоходыПоВР.СубконтоДт1,
	|	БУДоходыПоВР.СубконтоДт2,
	|	БУДоходыПоВР.СубконтоДт3,
	|	БУДоходыПоВР.СчетДтНУ,
	|	БУДоходыПоВР.СубконтоДтНУ1,
	|	БУДоходыПоВР.СубконтоДтНУ2,
	|	БУДоходыПоВР.СубконтоДтНУ3,
	|	БУДоходыПоВР.ОтражениеВУСН,
	|	БУДоходыПоВР.Результат КАК РезультатБУ,
	|	ВзносыДоходыПоВР.ВходитВБазуПФР,
	|	ВзносыДоходыПоВР.ВходитВБазуФСС,
	|	ВзносыДоходыПоВР.ВходитВБазуФОМС,
	|	БУДоходыПоВР.ЭтоСчет84,
	|	БУДоходыПоВР.ПодразделениеДт,
	|	БУДоходыПоВР.ПодразделениеКт,
	|	ВзносыДоходыПоВР.ОблагаетсяЕНВД
	|ПОМЕСТИТЬ ВТ_ВзносыДоходыБУДоходы
	|ИЗ
	|	ВТ_ВзносыДоходыПоВР КАК ВзносыДоходыПоВР
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_БУДоходыПоВР КАК БУДоходыПоВР
	|		ПО ВзносыДоходыПоВР.ФизЛицо = БУДоходыПоВР.Физлицо
	|			И ВзносыДоходыПоВР.ВидРасчета = БУДоходыПоВР.ВидРасчета
	|			И ВзносыДоходыПоВР.ПериодРегистрации = БУДоходыПоВР.ПериодРегистрации
	|			И ВзносыДоходыПоВР.ОблагаетсяЕНВД = БУДоходыПоВР.ОблагаетсяЕНВД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БУДоходыСводПоВР.Физлицо КАК Физлицо,
	|	БУДоходыСводПоВР.ВидРасчета КАК ВидРасчета,
	|	БУДоходыСводПоВР.ПериодРегистрации КАК ПериодРегистрации,
	|	СУММА(БУДоходыСводПоВР.Результат) КАК Результат,
	|	БУДоходыСводПоВР.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД
	|ПОМЕСТИТЬ ВТ_БУДоходыСводПоВР
	|ИЗ
	|	ВТ_БУДоходыПоВР КАК БУДоходыСводПоВР
	|
	|СГРУППИРОВАТЬ ПО
	|	БУДоходыСводПоВР.Физлицо,
	|	БУДоходыСводПоВР.ВидРасчета,
	|	БУДоходыСводПоВР.ПериодРегистрации,
	|	БУДоходыСводПоВР.ОблагаетсяЕНВД
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодРегистрации,
	|	Физлицо,
	|	ВидРасчета,
	|	ОблагаетсяЕНВД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БУДоходыСводПоВР.Физлицо,
	|	ВзносыДоходыБУДоходы.СчетДт,
	|	ВзносыДоходыБУДоходы.СубконтоДт1,
	|	ВзносыДоходыБУДоходы.СубконтоДт2,
	|	ВзносыДоходыБУДоходы.СубконтоДт3,
	|	ВзносыДоходыБУДоходы.СчетДтНУ,
	|	ВзносыДоходыБУДоходы.СубконтоДтНУ1,
	|	ВзносыДоходыБУДоходы.СубконтоДтНУ2,
	|	ВзносыДоходыБУДоходы.СубконтоДтНУ3,
	|	ВзносыДоходыБУДоходы.ОтражениеВУСН,
	|	СУММА(ВЫБОР
	|			КОГДА ВзносыДоходыБУДоходы.ОблагаетсяЕНВД
	|					ИЛИ (НЕ ВзносыДоходыБУДоходы.ВходитВБазуПФР)
	|					ИЛИ БУДоходыСводПоВР.Результат = 0
	|				ТОГДА 0
	|			ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|		КОНЕЦ) КАК БазаПФР_НеЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ВзносыДоходыБУДоходы.ОблагаетсяЕНВД
	|					ИЛИ (НЕ ВзносыДоходыБУДоходы.ВходитВБазуФСС)
	|					ИЛИ БУДоходыСводПоВР.Результат = 0
	|				ТОГДА 0
	|			ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|		КОНЕЦ) КАК БазаФСС_НеЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ВзносыДоходыБУДоходы.ОблагаетсяЕНВД
	|					ИЛИ (НЕ ВзносыДоходыБУДоходы.ВходитВБазуФОМС)
	|					ИЛИ БУДоходыСводПоВР.Результат = 0
	|				ТОГДА 0
	|			ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|		КОНЕЦ) КАК БазаФОМС_НеЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ВзносыДоходыБУДоходы.ОблагаетсяПоДополнительномуТарифу)
	|					ИЛИ (НЕ ВзносыДоходыБУДоходы.ВходитВБазуПФР)
	|					ИЛИ БУДоходыСводПоВР.Результат = 0
	|				ТОГДА 0
	|			ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|		КОНЕЦ) КАК БазаДопТариф,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ВзносыДоходыБУДоходы.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам)
	|					ИЛИ (НЕ ВзносыДоходыБУДоходы.ВходитВБазуПФР)
	|					ИЛИ БУДоходыСводПоВР.Результат = 0
	|				ТОГДА 0
	|			ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|		КОНЕЦ) КАК БазаДопТарифШахтеры,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ВзносыДоходыБУДоходы.ВходитВБазуФСС)
	|					ИЛИ БУДоходыСводПоВР.Результат = 0
	|				ТОГДА 0
	|			ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|		КОНЕЦ) КАК БазаФСС_НС,
	|	ВзносыДоходыБУДоходы.ПериодРегистрации,
	|	ВзносыДоходыБУДоходы.ЭтоСчет84,
	|	ВзносыДоходыБУДоходы.ПодразделениеДт,
	|	ВзносыДоходыБУДоходы.ПодразделениеКт,
	|	ВзносыДоходыБУДоходы.ОблагаетсяЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ВзносыДоходыБУДоходы.ОблагаетсяЕНВД)
	|					ИЛИ (НЕ ВзносыДоходыБУДоходы.ВходитВБазуПФР)
	|					ИЛИ БУДоходыСводПоВР.Результат = 0
	|				ТОГДА 0
	|			ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|		КОНЕЦ) КАК БазаПФР_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ВзносыДоходыБУДоходы.ОблагаетсяЕНВД)
	|					ИЛИ (НЕ ВзносыДоходыБУДоходы.ВходитВБазуФСС)
	|					ИЛИ БУДоходыСводПоВР.Результат = 0
	|				ТОГДА 0
	|			ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|		КОНЕЦ) КАК БазаФСС_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ВзносыДоходыБУДоходы.ОблагаетсяЕНВД)
	|					ИЛИ (НЕ ВзносыДоходыБУДоходы.ВходитВБазуФОМС)
	|					ИЛИ БУДоходыСводПоВР.Результат = 0
	|				ТОГДА 0
	|			ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|		КОНЕЦ) КАК БазаФОМС_ЕНВД
	|ИЗ
	|	ВТ_ВзносыДоходыБУДоходы КАК ВзносыДоходыБУДоходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_БУДоходыСводПоВР КАК БУДоходыСводПоВР
	|		ПО ВзносыДоходыБУДоходы.ФизЛицо = БУДоходыСводПоВР.Физлицо
	|			И ВзносыДоходыБУДоходы.ПериодРегистрации = БУДоходыСводПоВР.ПериодРегистрации
	|			И ВзносыДоходыБУДоходы.ВидРасчета = БУДоходыСводПоВР.ВидРасчета
	|			И ВзносыДоходыБУДоходы.ОблагаетсяЕНВД = БУДоходыСводПоВР.ОблагаетсяЕНВД
	|
	|СГРУППИРОВАТЬ ПО
	|	БУДоходыСводПоВР.Физлицо,
	|	ВзносыДоходыБУДоходы.СчетДт,
	|	ВзносыДоходыБУДоходы.СубконтоДт1,
	|	ВзносыДоходыБУДоходы.СубконтоДт2,
	|	ВзносыДоходыБУДоходы.СубконтоДт3,
	|	ВзносыДоходыБУДоходы.СчетДтНУ,
	|	ВзносыДоходыБУДоходы.СубконтоДтНУ1,
	|	ВзносыДоходыБУДоходы.СубконтоДтНУ2,
	|	ВзносыДоходыБУДоходы.СубконтоДтНУ3,
	|	ВзносыДоходыБУДоходы.ОтражениеВУСН,
	|	ВзносыДоходыБУДоходы.ПериодРегистрации,
	|	ВзносыДоходыБУДоходы.ЭтоСчет84,
	|	ВзносыДоходыБУДоходы.ПодразделениеДт,
	|	ВзносыДоходыБУДоходы.ПодразделениеКт,
	|	ВзносыДоходыБУДоходы.ОблагаетсяЕНВД";
	
	Возврат  Запрос.Выполнить().Выгрузить();
	
КонецФункции // ПолучитьДанныеУчетаСтраховыхВзносов2011()

// Функция фозвращает таблицу значений с данными для вычисления коэффициентов отражения в учете Страховых взносов
// Параметры
//  МассивПериодовРегистрации   - массив с периодами регистрации, по которым собираем данные
//  ГоловнаяОрганизация 		– головная организация
//  МассивФизлиц				- Массив физлиц, по которым собираем данные для списания РБП или получения базы с начала года
//
// Возвращаемое значение:
//   Таблица значений 
//
Функция ПолучитьДанныеУчетаСтраховыхВзносов2010(ОтражениеВУчете, Ссылка, МассивПериодовРегистрации, ГоловнаяОрганизация, МассивФизлиц = Неопределено)

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	СоздатьВТОтражениеВУчете(Запрос, ОтражениеВУчете, Ссылка);
	
	// Периоды
	// Таблица список периодов, для получения учетной политики
	// Поля:
	//		Период, конец месяца
	// Описание:

	// конец месяца налогового периода
	КонецМесяца = КонецМесяца(МассивПериодовРегистрации[0]);
	// первый месяц
	ПериодыТекст = "ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ") КАК Период ПОМЕСТИТЬ ВТ_Периоды";
	// прибавим остальные месяцы
	Для Индекс = 1 По МассивПериодовРегистрации.Количество()-1 Цикл
		КонецМесяца = КонецМесяца(МассивПериодовРегистрации[Индекс]);
		ПериодыТекст = ПериодыТекст +" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ")";
	КонецЦикла;	
	
	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить();
	
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация", ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("парамОбособленноеПодразделение", Ссылка.Организация);
	Запрос.УстановитьПараметр("парамНеОтбиратьФизлиц", МассивФизлиц = Неопределено);
	Запрос.УстановитьПараметр("парамМассивПериодовРегистрации", МассивПериодовРегистрации);
	Запрос.УстановитьПараметр("парамМассивФизлиц", МассивФизлиц);
	Запрос.УстановитьПараметр("парамКонецГода", КонецГода(МассивПериодовРегистрации[0]));
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Запрос.УстановитьПараметр("Счет70", ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтраховыеВзносыСведенияОДоходах.Регистратор,
	|	СтраховыеВзносыСведенияОДоходах.НомерСтроки,
	|	СтраховыеВзносыСведенияОДоходах.ФизЛицо КАК ФизЛицо,
	|	СтраховыеВзносыСведенияОДоходах.ВидРасчета КАК ВидРасчета,
	|	СтраховыеВзносыСведенияОДоходах.ВидДохода КАК КодДоходаЕСН,
	|	СтраховыеВзносыСведенияОДоходах.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	СтраховыеВзносыСведенияОДоходах.ОблагаетсяПоДополнительномуТарифу КАК ОблагаетсяПоДополнительномуТарифу,
	|	СтраховыеВзносыСведенияОДоходах.Результат КАК Результат,
	|	НАЧАЛОПЕРИОДА(СтраховыеВзносыСведенияОДоходах.Период, МЕСЯЦ) КАК ПериодРегистрации,
	|	СтраховыеВзносыСведенияОДоходах.Скидка
	|ИЗ
	|	РегистрНакопления.СтраховыеВзносыСведенияОДоходах КАК СтраховыеВзносыСведенияОДоходах
	|ГДЕ
	|	НАЧАЛОПЕРИОДА(СтраховыеВзносыСведенияОДоходах.Период, МЕСЯЦ) В (&парамМассивПериодовРегистрации)
	|	И СтраховыеВзносыСведенияОДоходах.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|	И (&парамНеОтбиратьФизлиц
	|			ИЛИ СтраховыеВзносыСведенияОДоходах.ФизЛицо В (&парамМассивФизлиц))
	|	И СтраховыеВзносыСведенияОДоходах.Скидка <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПериодРегистрации,
	|	ФизЛицо,
	|	КодДоходаЕСН,
	|	ОблагаетсяЕНВД,
	|	ОблагаетсяПоДополнительномуТарифу";
	РезультатЗапроса = Запрос.Выполнить();
	ТаблицаСкидок = ПолучитьТаблицуСкидокКДоходам(РезультатЗапроса);
	Запрос.УстановитьПараметр("ТаблицаСкидок", ТаблицаСкидок);
	
	МассивСчет84 = Новый Массив();
	МассивСчет84.Добавить(ПланыСчетов.Хозрасчетный.НераспределеннаяПрибыль);
	Запрос.УстановитьПараметр("СчетаИсключения", МассивСчет84);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_Счета84
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&СчетаИсключения)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет70
	|ПОМЕСТИТЬ ВТ_Счета70
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&Счет70)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет70
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ) КАК Месяц,
	|	УчетнаяПолитика.ОрганизацияЯвляетсяПлательщикомЕНВД,
	|	УчетнаяПолитика.ВидТарифаСтраховыхВзносов
	|ПОМЕСТИТЬ ВТ_УчетнаяПолитика
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период КАК Период,
	|		МАКСИМУМ(УчетнаяПолитика.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВТ_Периоды КАК Периоды
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитика
	|			ПО Периоды.Период >= УчетнаяПолитика.Период
	|				И (УчетнаяПолитика.Организация = &парамГоловнаяОрганизация)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период) КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитика
	|		ПО Периоды.ПериодРегистра = УчетнаяПолитика.Период
	|			И (УчетнаяПолитика.Организация = &парамГоловнаяОрганизация)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Месяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСкидок.ФизЛицо КАК ФизЛицо,
	|	ТаблицаСкидок.ВидРасчета КАК ВидРасчета,
	|	ТаблицаСкидок.КодДоходаЕСН КАК КодДоходаЕСН,
	|	ТаблицаСкидок.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	ТаблицаСкидок.ОблагаетсяПоДополнительномуТарифу,
	|	ТаблицаСкидок.ПериодРегистрации КАК ПериодРегистрации,
	|	ТаблицаСкидок.Скидка
	|ПОМЕСТИТЬ ВТ_СкидкиКДоходам
	|ИЗ
	|	&ТаблицаСкидок КАК ТаблицаСкидок
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодРегистрации,
	|	ФизЛицо,
	|	ВидРасчета,
	|	КодДоходаЕСН,
	|	ОблагаетсяЕНВД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Доходы.Физлицо КАК Физлицо,
	|	Доходы.ВидРасчета,
	|	Доходы.Ссылка.ПериодРегистрации КАК ПериодРегистрации,
	|	Доходы.СчетДт КАК СчетДт,
	|	ВЫБОР
	|		КОГДА ВЫБОР
	|				КОГДА (НЕ УчетнаяПолитика.ОрганизацияЯвляетсяПлательщикомЕНВД)
	|					ТОГДА ЛОЖЬ
	|				КОГДА Доходы.СубконтоДт1 ССЫЛКА Справочник.СтатьиЗатрат
	|					ТОГДА Доходы.СубконтоДт1.ВидДеятельностиДляНалоговогоУчетаЗатрат
	|				КОГДА Доходы.СубконтоДт2 ССЫЛКА Справочник.СтатьиЗатрат
	|					ТОГДА Доходы.СубконтоДт2.ВидДеятельностиДляНалоговогоУчетаЗатрат
	|				КОГДА Доходы.СубконтоДт3 ССЫЛКА Справочник.СтатьиЗатрат
	|					ТОГДА Доходы.СубконтоДт3.ВидДеятельностиДляНалоговогоУчетаЗатрат
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|			КОНЕЦ = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ПредпринимательскаяДеятельностьОблагаемаяЕНВД)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОблагаетсяЕНВД,
	|	Доходы.СубконтоДт1 КАК СубконтоДт1,
	|	Доходы.СубконтоДт2 КАК СубконтоДт2,
	|	Доходы.СубконтоДт3 КАК СубконтоДт3,
	|	Доходы.СчетДтНУ КАК СчетДтНУ,
	|	Доходы.СубконтоДтНУ1 КАК СубконтоДтНУ1,
	|	Доходы.СубконтоДтНУ2 КАК СубконтоДтНУ2,
	|	Доходы.СубконтоДтНУ3 КАК СубконтоДтНУ3,
	|	Доходы.ОтражениеВУСН КАК ОтражениеВУСН,
	|	СУММА(Доходы.Сумма) КАК Результат,
	|	Доходы.ПодразделениеДт,
	|	Доходы.ПодразделениеКт,
	|	Доходы.ВидРасчета.КодДоходаСтраховыеВзносы КАК ВидДохода,
	|	ВЫБОР
	|		КОГДА ВТ_Счета84.Ссылка ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоСчет84
	|ПОМЕСТИТЬ ВТ_БУДоходыПоВР
	|ИЗ
	|	ОтражениеВУчете КАК Доходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетнаяПолитика КАК УчетнаяПолитика
	|		ПО Доходы.Ссылка.ПериодРегистрации = УчетнаяПолитика.Месяц
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Счета84 КАК ВТ_Счета84
	|		ПО Доходы.СчетДт = ВТ_Счета84.Ссылка
	|ГДЕ
	|	(Доходы.Ссылка.Проведен
	|			ИЛИ Доходы.Ссылка = &Ссылка)
	|	И Доходы.СчетКт В
	|			(ВЫБРАТЬ
	|				ВТ_Счета70.Счет70
	|			ИЗ
	|				ВТ_Счета70)
	|	И Доходы.Ссылка.ПериодРегистрации В(&парамМассивПериодовРегистрации)
	|
	|СГРУППИРОВАТЬ ПО
	|	Доходы.ВидРасчета,
	|	Доходы.Ссылка.ПериодРегистрации,
	|	Доходы.СчетДт,
	|	Доходы.СубконтоДт1,
	|	Доходы.СубконтоДт2,
	|	Доходы.СубконтоДт3,
	|	Доходы.СчетДтНУ,
	|	Доходы.СубконтоДтНУ1,
	|	Доходы.СубконтоДтНУ2,
	|	Доходы.СубконтоДтНУ3,
	|	Доходы.ОтражениеВУСН,
	|	Доходы.Физлицо,
	|	Доходы.ВидРасчета.КодДоходаСтраховыеВзносы,
	|	ВЫБОР
	|		КОГДА ВТ_Счета84.Ссылка ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	Доходы.ПодразделениеДт,
	|	Доходы.ПодразделениеКт,
	|	УчетнаяПолитика.ОрганизацияЯвляетсяПлательщикомЕНВД,
	|	ВЫБОР
	|		КОГДА ВЫБОР
	|				КОГДА (НЕ УчетнаяПолитика.ОрганизацияЯвляетсяПлательщикомЕНВД)
	|					ТОГДА ЛОЖЬ
	|				КОГДА Доходы.СубконтоДт1 ССЫЛКА Справочник.СтатьиЗатрат
	|					ТОГДА Доходы.СубконтоДт1.ВидДеятельностиДляНалоговогоУчетаЗатрат
	|				КОГДА Доходы.СубконтоДт2 ССЫЛКА Справочник.СтатьиЗатрат
	|					ТОГДА Доходы.СубконтоДт2.ВидДеятельностиДляНалоговогоУчетаЗатрат
	|				КОГДА Доходы.СубконтоДт3 ССЫЛКА Справочник.СтатьиЗатрат
	|					ТОГДА Доходы.СубконтоДт3.ВидДеятельностиДляНалоговогоУчетаЗатрат
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|			КОНЕЦ = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ПредпринимательскаяДеятельностьОблагаемаяЕНВД)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	ПериодРегистрации,
	|	ВидДохода,
	|	ОблагаетсяЕНВД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Доходы.ФизЛицо КАК ФизЛицо,
	|	Доходы.ВидДохода КАК ВидДохода,
	|	Доходы.ВидРасчета.КодДоходаФСС_НС КАК КодДоходаФСС_НС,
	|	Доходы.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	Доходы.ОблагаетсяПоДополнительномуТарифу,
	|	НАЧАЛОПЕРИОДА(Доходы.Период, МЕСЯЦ) КАК ПериодРегистрации,
	|	СУММА(ВЫБОР
	|			КОГДА Доходы.ВидДохода.ВходитВБазуФОМС
	|					ИЛИ Доходы.ВидДохода.ВходитВБазуФСС
	|					ИЛИ Доходы.ВидДохода.ВходитВБазуПФР
	|				ТОГДА Доходы.Результат - ЕСТЬNULL(ВТ_СкидкиКДоходам.Скидка, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Результат,
	|	СУММА(ВЫБОР
	|			КОГДА Доходы.ВидРасчета.КодДоходаФСС_НС = ЗНАЧЕНИЕ(Перечисление.ДоходыФСС_НС.Облагается)
	|				ТОГДА Доходы.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК РезультатФССНС,
	|	Доходы.ВидРасчета,
	|	Доходы.ВидДохода.ВходитВБазуФОМС КАК ВходитВБазуФОМС,
	|	Доходы.ВидДохода.ВходитВБазуФСС КАК ВходитВБазуФСС,
	|	Доходы.ВидДохода.ВходитВБазуПФР КАК ВходитВБазуПФР
	|ПОМЕСТИТЬ ВТ_ВзносыДоходыПоВР
	|ИЗ
	|	РегистрНакопления.СтраховыеВзносыСведенияОДоходах КАК Доходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СкидкиКДоходам КАК ВТ_СкидкиКДоходам
	|		ПО Доходы.ФизЛицо = ВТ_СкидкиКДоходам.ФизЛицо
	|			И Доходы.ВидРасчета = ВТ_СкидкиКДоходам.ВидРасчета
	|			И Доходы.ВидДохода = ВТ_СкидкиКДоходам.КодДоходаЕСН
	|			И Доходы.ОблагаетсяЕНВД = ВТ_СкидкиКДоходам.ОблагаетсяЕНВД
	|			И (НАЧАЛОПЕРИОДА(Доходы.Период, МЕСЯЦ) = ВТ_СкидкиКДоходам.ПериодРегистрации)
	|ГДЕ
	|	Доходы.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|	И НАЧАЛОПЕРИОДА(Доходы.Период, МЕСЯЦ) В (&парамМассивПериодовРегистрации)
	|
	|СГРУППИРОВАТЬ ПО
	|	Доходы.ФизЛицо,
	|	Доходы.ВидДохода,
	|	НАЧАЛОПЕРИОДА(Доходы.Период, МЕСЯЦ),
	|	Доходы.ОблагаетсяЕНВД,
	|	Доходы.ОблагаетсяПоДополнительномуТарифу,
	|	Доходы.ВидРасчета.КодДоходаФСС_НС,
	|	Доходы.ВидРасчета,
	|	Доходы.ВидДохода.ВходитВБазуФОМС,
	|	Доходы.ВидДохода.ВходитВБазуФСС,
	|	Доходы.ВидДохода.ВходитВБазуПФР
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	ПериодРегистрации,
	|	ВидДохода,
	|	ОблагаетсяЕНВД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВзносыДоходыПоВР.ФизЛицо,
	|	ВзносыДоходыПоВР.ВидРасчета,
	|	ВзносыДоходыПоВР.ВидДохода КАК ВидДохода,
	|	ВзносыДоходыПоВР.ОблагаетсяЕНВД,
	|	ВзносыДоходыПоВР.ОблагаетсяПоДополнительномуТарифу,
	|	ВзносыДоходыПоВР.ПериодРегистрации,
	|	ВзносыДоходыПоВР.Результат,
	|	ВзносыДоходыПоВР.РезультатФССНС,
	|	БУДоходыПоВР.СчетДт,
	|	БУДоходыПоВР.СубконтоДт1,
	|	БУДоходыПоВР.СубконтоДт2,
	|	БУДоходыПоВР.СубконтоДт3,
	|	БУДоходыПоВР.СчетДтНУ,
	|	БУДоходыПоВР.СубконтоДтНУ1,
	|	БУДоходыПоВР.СубконтоДтНУ2,
	|	БУДоходыПоВР.СубконтоДтНУ3,
	|	БУДоходыПоВР.ОтражениеВУСН,
	|	БУДоходыПоВР.Результат КАК РезультатБУ,
	|	ВзносыДоходыПоВР.ВходитВБазуПФР,
	|	ВзносыДоходыПоВР.ВходитВБазуФСС,
	|	ВзносыДоходыПоВР.ВходитВБазуФОМС,
	|	БУДоходыПоВР.ЭтоСчет84,
	|	БУДоходыПоВР.ПодразделениеДт,
	|	БУДоходыПоВР.ПодразделениеКт
	|ПОМЕСТИТЬ ВТ_ВзносыДоходыБУДоходы
	|ИЗ
	|	ВТ_ВзносыДоходыПоВР КАК ВзносыДоходыПоВР
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_БУДоходыПоВР КАК БУДоходыПоВР
	|		ПО ВзносыДоходыПоВР.ФизЛицо = БУДоходыПоВР.Физлицо
	|			И ВзносыДоходыПоВР.ВидРасчета = БУДоходыПоВР.ВидРасчета
	|			И ВзносыДоходыПоВР.ПериодРегистрации = БУДоходыПоВР.ПериодРегистрации
	|			И ВзносыДоходыПоВР.ОблагаетсяЕНВД = БУДоходыПоВР.ОблагаетсяЕНВД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БУДоходыСводПоВР.Физлицо КАК Физлицо,
	|	БУДоходыСводПоВР.ВидДохода КАК ВидДохода,
	|	БУДоходыСводПоВР.ПериодРегистрации КАК ПериодРегистрации,
	|	БУДоходыСводПоВР.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	СУММА(БУДоходыСводПоВР.Результат) КАК Результат,
	|	БУДоходыСводПоВР.ПодразделениеДт,
	|	БУДоходыСводПоВР.ПодразделениеКт,
	|	БУДоходыСводПоВР.ВидРасчета
	|ПОМЕСТИТЬ ВТ_БУДоходыСводПоВР
	|ИЗ
	|	ВТ_БУДоходыПоВР КАК БУДоходыСводПоВР
	|
	|СГРУППИРОВАТЬ ПО
	|	БУДоходыСводПоВР.Физлицо,
	|	БУДоходыСводПоВР.ВидДохода,
	|	БУДоходыСводПоВР.ПериодРегистрации,
	|	БУДоходыСводПоВР.ОблагаетсяЕНВД,
	|	БУДоходыСводПоВР.ПодразделениеДт,
	|	БУДоходыСводПоВР.ПодразделениеКт,
	|	БУДоходыСводПоВР.ВидРасчета
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодРегистрации,
	|	Физлицо,
	|	ВидДохода,
	|	ОблагаетсяЕНВД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БУДоходыСводПоВР.Физлицо,
	|	ВзносыДоходыБУДоходы.СчетДт,
	|	ВзносыДоходыБУДоходы.СубконтоДт1,
	|	ВзносыДоходыБУДоходы.СубконтоДт2,
	|	ВзносыДоходыБУДоходы.СубконтоДт3,
	|	ВзносыДоходыБУДоходы.СчетДтНУ,
	|	ВзносыДоходыБУДоходы.СубконтоДтНУ1,
	|	ВзносыДоходыБУДоходы.СубконтоДтНУ2,
	|	ВзносыДоходыБУДоходы.СубконтоДтНУ3,
	|	ВзносыДоходыБУДоходы.ОтражениеВУСН,
	|	СУММА(ВЫБОР
	|			КОГДА ВзносыДоходыБУДоходы.ОблагаетсяЕНВД
	|					ИЛИ (НЕ ВзносыДоходыБУДоходы.ВходитВБазуПФР)
	|					ИЛИ БУДоходыСводПоВР.Результат = 0
	|				ТОГДА 0
	|			ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|		КОНЕЦ) КАК БазаПФР_НеЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ВзносыДоходыБУДоходы.ОблагаетсяЕНВД
	|					ИЛИ (НЕ ВзносыДоходыБУДоходы.ВходитВБазуФСС)
	|					ИЛИ БУДоходыСводПоВР.Результат = 0
	|				ТОГДА 0
	|			ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|		КОНЕЦ) КАК БазаФСС,
	|	СУММА(ВЫБОР
	|			КОГДА ВзносыДоходыБУДоходы.ОблагаетсяЕНВД
	|					ИЛИ (НЕ ВзносыДоходыБУДоходы.ВходитВБазуФОМС)
	|					ИЛИ БУДоходыСводПоВР.Результат = 0
	|				ТОГДА 0
	|			ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|		КОНЕЦ) КАК БазаФОМС,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ВзносыДоходыБУДоходы.ОблагаетсяЕНВД)
	|					ИЛИ (НЕ ВзносыДоходыБУДоходы.ВходитВБазуПФР)
	|					ИЛИ БУДоходыСводПоВР.Результат = 0
	|				ТОГДА 0
	|			ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|		КОНЕЦ) КАК БазаПФР_ЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ВзносыДоходыБУДоходы.ОблагаетсяПоДополнительномуТарифу)
	|					ИЛИ (НЕ ВзносыДоходыБУДоходы.ВходитВБазуПФР)
	|					ИЛИ БУДоходыСводПоВР.Результат = 0
	|				ТОГДА 0
	|			ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|		КОНЕЦ) КАК БазаДопТариф,
	|	СУММА(ВЫБОР
	|			КОГДА БУДоходыСводПоВР.Результат = 0
	|				ТОГДА 0
	|			ИНАЧЕ ВзносыДоходыБУДоходы.РезультатФССНС * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|		КОНЕЦ) КАК БазаФСС_НС,
	|	ВзносыДоходыБУДоходы.ПериодРегистрации,
	|	ВзносыДоходыБУДоходы.ОблагаетсяЕНВД,
	|	ВзносыДоходыБУДоходы.ЭтоСчет84,
	|	ВзносыДоходыБУДоходы.ПодразделениеДт,
	|	ВзносыДоходыБУДоходы.ПодразделениеКт
	|ИЗ
	|	ВТ_ВзносыДоходыБУДоходы КАК ВзносыДоходыБУДоходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_БУДоходыСводПоВР КАК БУДоходыСводПоВР
	|		ПО ВзносыДоходыБУДоходы.ФизЛицо = БУДоходыСводПоВР.Физлицо
	|			И ВзносыДоходыБУДоходы.ПериодРегистрации = БУДоходыСводПоВР.ПериодРегистрации
	|			И ВзносыДоходыБУДоходы.ОблагаетсяЕНВД = БУДоходыСводПоВР.ОблагаетсяЕНВД
	|			И ВзносыДоходыБУДоходы.ВидРасчета = БУДоходыСводПоВР.ВидРасчета
	|
	|СГРУППИРОВАТЬ ПО
	|	БУДоходыСводПоВР.Физлицо,
	|	ВзносыДоходыБУДоходы.СчетДт,
	|	ВзносыДоходыБУДоходы.СубконтоДт1,
	|	ВзносыДоходыБУДоходы.СубконтоДт2,
	|	ВзносыДоходыБУДоходы.СубконтоДт3,
	|	ВзносыДоходыБУДоходы.СчетДтНУ,
	|	ВзносыДоходыБУДоходы.СубконтоДтНУ1,
	|	ВзносыДоходыБУДоходы.СубконтоДтНУ2,
	|	ВзносыДоходыБУДоходы.СубконтоДтНУ3,
	|	ВзносыДоходыБУДоходы.ОтражениеВУСН,
	|	ВзносыДоходыБУДоходы.ПериодРегистрации,
	|	ВзносыДоходыБУДоходы.ОблагаетсяЕНВД,
	|	ВзносыДоходыБУДоходы.ЭтоСчет84,
	|	ВзносыДоходыБУДоходы.ПодразделениеДт,
	|	ВзносыДоходыБУДоходы.ПодразделениеКт";
	
	Возврат  Запрос.Выполнить().Выгрузить();
	
КонецФункции // ПолучитьДанныеУчетаСтраховыхВзносов2010()

// Получает значение субконто в том случае, если заданы правила его переопределения
//
// Параметры
//  Субконто - начальное значение субконто
//  ПараметрыПолученияСубконто - соответсвие, 
//                              ключ соответсвия - тип, 
//                              значение - параметры, которые помогают преобразовывать 
//                              субконто соотв. типа из одного значения в другое
//
// Возвращаемое значение:
//   Субконто
// Если для субконто некоторого типа не заданы параметры преобразования, то его 
// значение не изменяется
//
Функция ПолучитьСубконто(Субконто, ПараметрыПолученияСубконто)
	
	Параметры = ПараметрыПолученияСубконто[ТипЗнч(Субконто)];
	Если Параметры = НеОпределено Тогда
		// для субконто этого типа не заданы парамтры переопределения
		Возврат Субконто;
	КонецЕсли;
	// для статьи затрат
	Если ТипЗнч(Субконто) = Тип("СправочникСсылка.СтатьиЗатрат") Тогда
		ВидСтатьиЗатрат = Параметры.ВидСтатьиЗатрат;
		ДополнительныеСтатьиЗатрат = Параметры.ДополнительныеСтатьиЗатрат;
		КлючПоиска = Новый Структура("ВидСтатьиЗатрат, СтатьяЗатратНачисления", ВидСтатьиЗатрат, Субконто);
		Строки = ДополнительныеСтатьиЗатрат.НайтиСтроки(КлючПоиска);
		Если Строки.Количество() = 0 Тогда
			КлючПоиска = Новый Структура("ВидСтатьиЗатрат, СтатьяЗатратНачисления", ВидСтатьиЗатрат, Справочники.СтатьиЗатрат.ПустаяСсылка());
			Строки = ДополнительныеСтатьиЗатрат.НайтиСтроки(КлючПоиска);
			Если Строки.Количество() = 0 Тогда
				Возврат Субконто;
			Иначе
				Возврат Строки[0].СтатьяЗатрат;
			КонецЕсли;
		Иначе
			Возврат Строки[0].СтатьяЗатрат;
		КонецЕсли;
	ИначеЕсли ТипЗнч(Субконто) = Тип("СправочникСсылка.ПрочиеДоходыИРасходы") Тогда
		ВидСтатьиЗатрат = Параметры.ВидСтатьиЗатрат;
		ДополнительныеСтатьиЗатрат = Параметры.ДополнительныеСтатьиЗатрат;
		КлючПоиска = Новый Структура("ВидСтатьиЗатрат, СтатьяЗатратНачисления", ВидСтатьиЗатрат, Субконто);
		Строки = ДополнительныеСтатьиЗатрат.НайтиСтроки(КлючПоиска);
		Если Строки.Количество() = 0 Тогда
			КлючПоиска = Новый Структура("ВидСтатьиЗатрат, СтатьяЗатратНачисления", ВидСтатьиЗатрат, Справочники.ПрочиеДоходыИРасходы.ПустаяСсылка());
			Строки = ДополнительныеСтатьиЗатрат.НайтиСтроки(КлючПоиска);
			Если Строки.Количество() = 0 Тогда
				КлючПоиска = Новый Структура("ВидСтатьиЗатрат, СтатьяЗатратНачисления", ВидСтатьиЗатрат, Неопределено);
				Строки = ДополнительныеСтатьиЗатрат.НайтиСтроки(КлючПоиска);
				Если Строки.Количество() = 0 Тогда
					Возврат Субконто;
				Иначе
					Возврат Строки[0].СтатьяЗатрат;
				КонецЕсли;
			Иначе
				Возврат Строки[0].СтатьяЗатрат;
			КонецЕсли;
		Иначе
			Возврат Строки[0].СтатьяЗатрат;
		КонецЕсли;	
		
		// для получения субконто другого типа - дописываем ИначеЕсли...
	Иначе
		Возврат Субконто;
	КонецЕсли;
	
КонецФункции

// Выделяет коэффициенты отражения из массива переданных строк отражения
//
// Параметры
//  МассивСтрокОтражения - массив строк таблицы значений
//  ИмяКолонки - строка - имя колонки таблицы значений, содержащей 
//                 коэффициенты отражения
//
// Возвращаемое значение:
//   массив чисел - коэффициентов отражения
//
Функция ВыделитьКоэффициентыОтраженияИзМассиваСтрок(МассивСтрокОтражения,ИмяКолонки)
	
	Коэффициенты = Новый Массив;
	
	Для каждого СтрокаОтражения Из МассивСтрокОтражения Цикл
		Коэффициенты.Добавить(СтрокаОтражения[ИмяКолонки]);
	КонецЦикла; 
	
	Возврат Коэффициенты
КонецФункции // ВыделитьКоэффициентыОтраженияИзМассиваСтрок()

// Функция возвращает счет прочих расходов из плана счетов Хозрасчетный
//
// Параметры
//  ВидБазы  - Параметр, уточняющий, какой счет возвращать
//
Функция ПолучитьСчетПрочихРасходов(ВидБазы = Неопределено) Экспорт

	Возврат ПланыСчетов.Хозрасчетный.ПрочиеРасходы;

КонецФункции // ПолучитьСчетПрочихРасходов()

// Функция распределяет скидку по доходам сотрудника
//
// Параметры
//  РезультатЗапроса  - резултат запроса 
//
// Возвращаемое значение:
//   Таблица значений  
//
Функция ПолучитьТаблицуСкидокКДоходам(РезультатЗапроса)

	ТаблицаСкидок = Новый ТаблицаЗначений;
	ТаблицаСкидок.Колонки.Добавить("ФизЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	ТаблицаСкидок.Колонки.Добавить("ВидРасчета", Новый ОписаниеТипов("ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций"));
	ТаблицаСкидок.Колонки.Добавить("КодДоходаЕСН", Новый ОписаниеТипов("СправочникСсылка.ДоходыПоСтраховымВзносам"));
	ТаблицаСкидок.Колонки.Добавить("ОблагаетсяЕНВД", Новый ОписаниеТипов("Булево"));
	ТаблицаСкидок.Колонки.Добавить("ОблагаетсяПоДополнительномуТарифу", Новый ОписаниеТипов("Булево"));
	ТаблицаСкидок.Колонки.Добавить("ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам", Новый ОписаниеТипов("Булево"));
	ТаблицаСкидок.Колонки.Добавить("ПериодРегистрации", Новый ОписаниеТипов("Дата"));
	ТаблицаСкидок.Колонки.Добавить("Скидка", Новый ОписаниеТипов("Число")); 
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат ТаблицаСкидок;
	КонецЕсли;
	
	ТаблицаРаспределения = ТаблицаСкидок.СкопироватьКолонки();
	ТаблицаРаспределения.Колонки.Добавить("Результат", Новый ОписаниеТипов("Число"));
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Регистратор") Цикл
		
		Пока Выборка.СледующийПоЗначениюПоля("НомерСтроки") Цикл
			
			СкидкаКРаспределению = Выборка.Скидка;
			
			ТаблицаРаспределения.Очистить();
			Пока Выборка.Следующий() Цикл
				ЗаполнитьЗначенияСвойств(ТаблицаРаспределения.Добавить(),Выборка);
			КонецЦикла;
			
			МассивКоэффициентов = ТаблицаРаспределения.ВыгрузитьКолонку("Результат");
			МассивСуммКНачислению = ОбщегоНазначения.РаспределитьПропорционально(СкидкаКРаспределению,МассивКоэффициентов);
			
			Если МассивСуммКНачислению <> Неопределено Тогда
				
				Для каждого СтрокаТЗ Из ТаблицаРаспределения Цикл
					
					НоваяСтрока = ТаблицаСкидок.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТЗ);
					НоваяСтрока.Скидка = МассивСуммКНачислению[ТаблицаРаспределения.Индекс(СтрокаТЗ)];
					
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ТаблицаСкидок;

КонецФункции // ПолучитьТаблицуСкидокКДоходам()

/////////////////////////////////////////////////////
// ЕСН - до 2010 г.
Процедура ОтражениеИсчисленногоЕСН(Запрос, Ссылка, Организация, ГоловнаяОрганизация, УчетнаяПолитика, ПериодРегистрации, НачалоПериодаОтраженияВУчете, ОтражениеВУчете, ПромежуточнаяТаблица, ОтборПоДокументу = Ложь) Экспорт
	
	Если ПромежуточнаяТаблица.Колонки.Найти("Ссылка") = Неопределено Тогда
		ПромежуточнаяТаблица.Колонки.Добавить("Ссылка");		
		ПромежуточнаяТаблица.ЗаполнитьЗначения(Ссылка, "Ссылка");		
	КонецЕсли;
	
	Дата = Ссылка.Дата;	
	мОбъектНалогообложенияУСН 							= УчетнаяПолитика.ОбъектНалогообложенияУСН;
	мУСН 												= УчетнаяПолитика.УСН;
	мВариантУчетаРасходовПоНалогамСФОТВНалоговомУчете	= УчетнаяПолитика.ВариантУчетаРасходовПоНалогамСФОТВНалоговомУчете;
	
	Запрос.УстановитьПараметр("парамОрганизация", Организация);
	Запрос.УстановитьПараметр("парамНачалоГода", НачалоПериодаОтраженияВУчете);
	Запрос.УстановитьПараметр("парамПериод", НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация", ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	// конец месяца налогового периода
	КонецМесяца = КонецМесяца(НачалоПериодаОтраженияВУчете);
	// первый месяц
	ПериодыТекст = "ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ") КАК Период ПОМЕСТИТЬ ВТ_Периоды";
	// прибавим остальные месяцы
	Пока КонецМесяца < КонецМесяца(ПериодРегистрации) Цикл
		КонецМесяца = КонецМесяца(КонецМесяца+1);
		ПериодыТекст = ПериодыТекст +" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ")";
	КонецЦикла;
	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда))";
	СчетаРасчетовСПерсоналомПоОплатеТруда = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	Запрос.УстановитьПараметр("СчетаРасчетовСПерсоналомПоОплатеТруда",СчетаРасчетовСПерсоналомПоОплатеТруда);
	
	// УчетнаяПолитика
	// Таблица УчетнаяПолитикаНалоговыйУчетУСН - это список периодов, когда организация переходила на УСН
	// поля:
	//		УСН, 
	//		Месяц - месяц налогового периода
	// Описание:	
	//	Выбираем Из Периоды (таблица - список периодов с начала года по текущий период)
	//	Внутреннее соединение с "псевдосрезом" последних регистра УчетнаяПолитика
	//	по равенству периодов
	//  условие: что организация использует УСН
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МЕСЯЦ(Периоды.Период) КАК Месяц,
	|	УчетнаяПолитика.Организация КАК УСН,
	|	УчетнаяПолитика.ОбъектНалогообложенияУСН КАК ОбъектНалогообложенияУСН
	|ПОМЕСТИТЬ ВТ_УчетнаяПолитикаНалоговыйУчетУСН
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период КАК Период,
	|		МАКСИМУМ(УчетнаяПолитика.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВТ_Периоды КАК Периоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитика
	|			ПО Периоды.Период >= УчетнаяПолитика.Период
	|				И (УчетнаяПолитика.Организация = &парамГоловнаяОрганизация)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период) КАК Периоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитика
	|		ПО Периоды.ПериодРегистра = УчетнаяПолитика.Период
	|			И (УчетнаяПолитика.Организация = &парамГоловнаяОрганизация)
	|ГДЕ
	|	УчетнаяПолитика.СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.СистемыНалогообложения.Упрощенная)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Месяц";	
	Запрос.Выполнить();
	
	
	// УчетнаяПолитикаУплачиватьДобровольныеВзносыВФСС
	// Таблица УчетнаяПолитикаУплачиватьДобровольныеВзносыВФСС - это список периодов, когда организация уплачивала добровольные взносы в ФСС
	// поля:
	//		УплачиватьДобровольныеВзносыВФСС, 
	//		Месяц - месяц налогового периода
	// Описание:	
	//	Выбираем Из Периоды (таблица - список периодов с начала года по текущий период)
	//	Внутреннее соединение с "псевдосрезом" последних регистра УчетнаяПолитика
	//	по равенству периодов
	//  условие: что организация уплачивает добровольные взносы в ФСС
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МЕСЯЦ(Периоды.Период) КАК Месяц,
	|	УчетнаяПолитика.УплачиватьДобровольныеВзносыВФСС КАК УплачиватьДобровольныеВзносыВФСС
	|ПОМЕСТИТЬ ВТ_УчетнаяПолитикаУплачиватьДобровольныеВзносыВФСС
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период КАК Период,
	|		МАКСИМУМ(УчетнаяПолитика.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВТ_Периоды КАК Периоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитика
	|			ПО Периоды.Период >= УчетнаяПолитика.Период
	|				И (УчетнаяПолитика.Организация = &парамГоловнаяОрганизация)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период) КАК Периоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитика
	|		ПО Периоды.ПериодРегистра = УчетнаяПолитика.Период
	|			И (УчетнаяПолитика.Организация = &парамГоловнаяОрганизация)
	|ГДЕ
	|	УчетнаяПолитика.УплачиватьДобровольныеВзносыВФСС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Месяц";	
	Запрос.Выполнить();
	
	// ЕСНДоходы
	// Поля:
	//		ФизЛицо
	//		ПериодРегистрации
	//		КодДоходаЕСН
	//		Результат
	//		
	//	
	//	Описание:
	//	Данные отражения доходов в учете ЕСН - для учета льгот инвалидов
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Доходы.ФизЛицо КАК ФизЛицо,
	|	НАЧАЛОПЕРИОДА(Доходы.Период, МЕСЯЦ) КАК ПериодРегистрации,
	|	Доходы.КодДоходаЕСН КАК КодДоходаЕСН,
	|	СУММА(Доходы.Результат - Доходы.Скидка) КАК Результат
	|ПОМЕСТИТЬ ВТ_ЕСНДоходы
	|ИЗ
	|	РегистрНакопления.ЕСНСведенияОДоходах КАК Доходы
	|ГДЕ
	|	Доходы.ОбособленноеПодразделение = &парамОрганизация
	|	И Доходы.Период >= &парамНачалоГода
	|	И Доходы.Период <= &парамПериод
	|	И (Доходы.КодДоходаЕСН.ВходитВБазуФОМС
	|			ИЛИ Доходы.КодДоходаЕСН.ВходитВБазуФСС
	|			ИЛИ Доходы.КодДоходаЕСН.ВходитВБазуФедеральныйБюджет)
	|
	|СГРУППИРОВАТЬ ПО
	|	Доходы.ФизЛицо,
	|	Доходы.КодДоходаЕСН,
	|	НАЧАЛОПЕРИОДА(Доходы.Период, МЕСЯЦ)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	ПериодРегистрации,
	|	КодДоходаЕСН";
	Запрос.Выполнить();
	
	// ДанныеОбИнвалидности
	//	Поля:
	//		Период
	//		Физлицо
	//
	//	Описание:
	// 	таблица списка периодов-физлиц которые являются инвалидами
	//
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ) КАК Период,
	|	СведенияОбИнвалидностиФизлиц.Физлицо КАК Физлицо
	|ПОМЕСТИТЬ ВТ_ДанныеОбИнвалидностиТекст
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период КАК Период,
	|		СведенияОбИнвалидностиФизлиц.Физлицо КАК Физлицо,
	|		МАКСИМУМ(СведенияОбИнвалидностиФизлиц.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВТ_Периоды КАК Периоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК СведенияОбИнвалидностиФизлиц
	|			ПО Периоды.Период >= СведенияОбИнвалидностиФизлиц.Период
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СведенияОбИнвалидностиФизлиц.Физлицо,
	|		Периоды.Период) КАК Периоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК СведенияОбИнвалидностиФизлиц
	|		ПО (СведенияОбИнвалидностиФизлиц.Период = Периоды.ПериодРегистра)
	|			И (СведенияОбИнвалидностиФизлиц.Физлицо = Периоды.Физлицо)
	|ГДЕ
	|	СведенияОбИнвалидностиФизлиц.Инвалидность
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	Период";
	Запрос.Выполнить();
	
	// ЕСНДоходыБезСкидокИнвалидов
	//	Поля:
	//		ФизЛицо
	//		ПериодРегистрации
	//		ДоходИнв... - доход инвалидов по каждому фонду
	//
	//	Описание:
	//	список доходов инвалидов по работникам-периодам регистрации
	//	
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСНДоходыОсновная.ФизЛицо КАК ФизЛицо,
	|	ЕСНДоходыОсновная.ПериодРегистрации КАК ПериодРегистрации,
	|	ГОД(ЕСНДоходыОсновная.ПериодРегистрации) КАК Год,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеОбИнвалидности.ФизЛицо ЕСТЬ НЕ NULL 
	|					И ЕСНДоходыОсновная.КодДоходаЕСН.ВходитВБазуФедеральныйБюджет
	|				ТОГДА ЕСНДоходыОсновная.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ДоходИнвФБ,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеОбИнвалидности.ФизЛицо ЕСТЬ НЕ NULL 
	|					И ЕСНДоходыОсновная.КодДоходаЕСН.ВходитВБазуФОМС
	|				ТОГДА ЕСНДоходыОсновная.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ДоходИнвФОМС,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеОбИнвалидности.ФизЛицо ЕСТЬ НЕ NULL 
	|					И ЕСНДоходыОсновная.КодДоходаЕСН.ВходитВБазуФСС
	|				ТОГДА ЕСНДоходыОсновная.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ДоходИнвФСС
	|ПОМЕСТИТЬ ВТ_ЕСНДоходыИнвалидов
	|ИЗ
	|	ВТ_ЕСНДоходы КАК ЕСНДоходыОсновная
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеОбИнвалидностиТекст КАК ДанныеОбИнвалидности
	|		ПО (ДанныеОбИнвалидности.ФизЛицо = ЕСНДоходыОсновная.ФизЛицо)
	|			И (ДанныеОбИнвалидности.Период = ЕСНДоходыОсновная.ПериодРегистрации)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСНДоходыОсновная.ФизЛицо,
	|	ЕСНДоходыОсновная.ПериодРегистрации,
	|	ДанныеОбИнвалидности.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	ПериодРегистрации,
	|	Год";
	Запрос.Выполнить();
	
	// ЕСНДоходыБезСкидокИнвалидов
	//	Поля:
	//		ФизЛицо
	//		ПериодРегистрации
	//		ДоходБезСкидокИнв... - доход инвалидов по каждому фонду
	//
	//	Описание:
	//	список доходов инвалидов по работникам-периодам регистрации
	//	с учетом ограничения льготы по ст. 239 НК РФ
	//	
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСНДоходыИнвалидов.ФизЛицо КАК ФизЛицо,
	|	ЕСНДоходыИнвалидов.ПериодРегистрации КАК ПериодРегистрации,
	|	ВЫБОР
	|		КОГДА СУММА(ЕСНДоходыИнвалидовНарастающимИтогом.ДоходИнвФБ) ЕСТЬ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСНДоходыИнвалидов.ДоходИнвФБ > 100000
	|						ТОГДА 100000
	|					ИНАЧЕ ЕСНДоходыИнвалидов.ДоходИнвФБ
	|				КОНЕЦ
	|		КОГДА СУММА(ЕСНДоходыИнвалидовНарастающимИтогом.ДоходИнвФБ) >= 100000
	|			ТОГДА 0
	|		КОГДА ЕСНДоходыИнвалидов.ДоходИнвФБ > 100000 - СУММА(ЕСНДоходыИнвалидовНарастающимИтогом.ДоходИнвФБ)
	|			ТОГДА 100000 - СУММА(ЕСНДоходыИнвалидовНарастающимИтогом.ДоходИнвФБ)
	|		ИНАЧЕ ЕСНДоходыИнвалидов.ДоходИнвФБ
	|	КОНЕЦ КАК ДоходБезСкидокИнвФБ,
	|	ВЫБОР
	|		КОГДА СУММА(ЕСНДоходыИнвалидовНарастающимИтогом.ДоходИнвФОМС) ЕСТЬ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСНДоходыИнвалидов.ДоходИнвФОМС > 100000
	|						ТОГДА 100000
	|					ИНАЧЕ ЕСНДоходыИнвалидов.ДоходИнвФОМС
	|				КОНЕЦ
	|		КОГДА СУММА(ЕСНДоходыИнвалидовНарастающимИтогом.ДоходИнвФОМС) >= 100000
	|			ТОГДА 0
	|		КОГДА ЕСНДоходыИнвалидов.ДоходИнвФОМС > 100000 - СУММА(ЕСНДоходыИнвалидовНарастающимИтогом.ДоходИнвФОМС)
	|			ТОГДА 100000 - СУММА(ЕСНДоходыИнвалидовНарастающимИтогом.ДоходИнвФОМС)
	|		ИНАЧЕ ЕСНДоходыИнвалидов.ДоходИнвФОМС
	|	КОНЕЦ КАК ДоходБезСкидокИнвФОМС,
	|	ВЫБОР
	|		КОГДА СУММА(ЕСНДоходыИнвалидовНарастающимИтогом.ДоходИнвФСС) ЕСТЬ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСНДоходыИнвалидов.ДоходИнвФСС > 100000
	|						ТОГДА 100000
	|					ИНАЧЕ ЕСНДоходыИнвалидов.ДоходИнвФСС
	|				КОНЕЦ
	|		КОГДА СУММА(ЕСНДоходыИнвалидовНарастающимИтогом.ДоходИнвФСС) >= 100000
	|			ТОГДА 0
	|		КОГДА ЕСНДоходыИнвалидов.ДоходИнвФСС > 100000 - СУММА(ЕСНДоходыИнвалидовНарастающимИтогом.ДоходИнвФСС)
	|			ТОГДА 100000 - СУММА(ЕСНДоходыИнвалидовНарастающимИтогом.ДоходИнвФСС)
	|		ИНАЧЕ ЕСНДоходыИнвалидов.ДоходИнвФСС
	|	КОНЕЦ КАК ДоходБезСкидокИнвФСС
	|ПОМЕСТИТЬ ВТ_ЕСНДоходыБезСкидокИнвалидов
	|ИЗ
	|	ВТ_ЕСНДоходыИнвалидов КАК ЕСНДоходыИнвалидов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЕСНДоходыИнвалидов КАК ЕСНДоходыИнвалидовНарастающимИтогом
	|		ПО ЕСНДоходыИнвалидов.ПериодРегистрации > ЕСНДоходыИнвалидовНарастающимИтогом.ПериодРегистрации
	|			И ЕСНДоходыИнвалидов.Год = ЕСНДоходыИнвалидовНарастающимИтогом.Год
	|			И ЕСНДоходыИнвалидов.ФизЛицо = ЕСНДоходыИнвалидовНарастающимИтогом.ФизЛицо
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСНДоходыИнвалидов.ФизЛицо,
	|	ЕСНДоходыИнвалидов.ДоходИнвФБ,
	|	ЕСНДоходыИнвалидов.ДоходИнвФОМС,
	|	ЕСНДоходыИнвалидов.ДоходИнвФСС,
	|	ЕСНДоходыИнвалидов.ПериодРегистрации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	ПериодРегистрации";
	Запрос.Выполнить();
	
	//	ЕСНДоходыОблагаемые
	//	Поля:
	//		ФизЛицо
	//		ПериодРегистрации
	//		ДоходБезСкидок ...   по каждому фонду
	//		ДоходБезСкидокИнв ...
	//
	//	Описание:
	//	таблица облагаемых доходов за месяц с учетом ограничения доходов инвалидов
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСНДоходыБезСкидок.ФизЛицо КАК ФизЛицо,
	|	ЕСНДоходыБезСкидок.ПериодРегистрации КАК ПериодРегистрации,
	|	ЕСНДоходыБезСкидок.ДоходБезСкидокФБ КАК ДоходБезСкидокФБ,
	|	ЕСНДоходыБезСкидок.ДоходБезСкидокФОМС КАК ДоходБезСкидокФОМС,
	|	ЕСНДоходыБезСкидок.ДоходБезСкидокФСС КАК ДоходБезСкидокФСС,
	|	ЕСНДоходыБезСкидокИнвалидов.ДоходБезСкидокИнвФБ КАК ДоходБезСкидокИнвФБ,
	|	ЕСНДоходыБезСкидокИнвалидов.ДоходБезСкидокИнвФОМС КАК ДоходБезСкидокИнвФОМС,
	|	ЕСНДоходыБезСкидокИнвалидов.ДоходБезСкидокИнвФСС КАК ДоходБезСкидокИнвФСС
	|ПОМЕСТИТЬ ВТ_ЕСНДоходыОблагаемые
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЕСНДоходыОсновная.ФизЛицо КАК ФизЛицо,
	|		ЕСНДоходыОсновная.ПериодРегистрации КАК ПериодРегистрации,
	|		СУММА(ВЫБОР
	|				КОГДА ЕСНДоходыОсновная.КодДоходаЕСН.ВходитВБазуФедеральныйБюджет
	|					ТОГДА ЕСНДоходыОсновная.Результат
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК ДоходБезСкидокФБ,
	|		СУММА(ВЫБОР
	|				КОГДА ЕСНДоходыОсновная.КодДоходаЕСН.ВходитВБазуФОМС
	|					ТОГДА ЕСНДоходыОсновная.Результат
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК ДоходБезСкидокФОМС,
	|		СУММА(ВЫБОР
	|				КОГДА ЕСНДоходыОсновная.КодДоходаЕСН.ВходитВБазуФСС
	|					ТОГДА ЕСНДоходыОсновная.Результат
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК ДоходБезСкидокФСС
	|	ИЗ
	|		ВТ_ЕСНДоходы КАК ЕСНДоходыОсновная
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ЕСНДоходыОсновная.ФизЛицо,
	|		ЕСНДоходыОсновная.ПериодРегистрации) КАК ЕСНДоходыБезСкидок
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЕСНДоходыБезСкидокИнвалидов КАК ЕСНДоходыБезСкидокИнвалидов
	|		ПО ЕСНДоходыБезСкидок.ПериодРегистрации = ЕСНДоходыБезСкидокИнвалидов.ПериодРегистрации
	|			И ЕСНДоходыБезСкидок.ФизЛицо = ЕСНДоходыБезСкидокИнвалидов.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	ПериодРегистрации";
	Запрос.Выполнить();
	
	
	// ЕСНДоходыЕНВД
	// Поля:
	//		ФизЛицо
	//		Приказ
	//		ПериодРегистрации
	//		КодДоходаЕСН
	//		Результат
	//		ОблагаетсяЕНВД
	//	
	//	Описание:
	//	Данные отражения доходов в учете ЕСН с учетом ЕНВД - для отражения в бух/учете
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Доходы.ФизЛицо КАК ФизЛицо,
	|	НАЧАЛОПЕРИОДА(Доходы.Период, МЕСЯЦ) КАК ПериодРегистрации,
	|	Доходы.КодДоходаЕСН КАК КодДоходаЕСН,
	|	Доходы.ОблагаетсяЕНВД,
	|	СУММА(Доходы.Результат) КАК Результат
	|ПОМЕСТИТЬ ВТ_ЕСНДоходыЕНВД
	|ИЗ
	|	РегистрНакопления.ЕСНСведенияОДоходах КАК Доходы
	|ГДЕ
	|	Доходы.ОбособленноеПодразделение = &парамОрганизация
	|	И Доходы.Период >= &парамНачалоГода
	|	И Доходы.Период <= &парамПериод
	|	И (Доходы.КодДоходаЕСН.ВходитВБазуФОМС
	|			ИЛИ Доходы.КодДоходаЕСН.ВходитВБазуФСС
	|			ИЛИ Доходы.КодДоходаЕСН.ВходитВБазуФедеральныйБюджет)
	|
	|СГРУППИРОВАТЬ ПО
	|	Доходы.ФизЛицо,
	|	Доходы.КодДоходаЕСН,
	|	НАЧАЛОПЕРИОДА(Доходы.Период, МЕСЯЦ),
	|	Доходы.ОблагаетсяЕНВД
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	ПериодРегистрации,
	|	КодДоходаЕСН";
	Запрос.Выполнить();
	
	// БУДоходыПоВР
	//	
	//	Описание:
	//	Данные отражения начислений в бухучете по видам расчета
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Доходы.Физлицо КАК Физлицо,
	|	Доходы.ВидРасчета КАК ВидРасчета,
	|	Доходы.Ссылка.ПериодРегистрации КАК ПериодРегистрации,
	|	Доходы.СчетДт КАК СчетДт,
	|	ВЫБОР
	|		КОГДА ВЫБОР
	|				КОГДА Доходы.СубконтоДт1 ССЫЛКА Справочник.СтатьиЗатрат
	|					ТОГДА Доходы.СубконтоДт1.ВидДеятельностиДляНалоговогоУчетаЗатрат
	|				КОГДА Доходы.СубконтоДт2 ССЫЛКА Справочник.СтатьиЗатрат
	|					ТОГДА Доходы.СубконтоДт2.ВидДеятельностиДляНалоговогоУчетаЗатрат
	|				КОГДА Доходы.СубконтоДт3 ССЫЛКА Справочник.СтатьиЗатрат
	|					ТОГДА Доходы.СубконтоДт3.ВидДеятельностиДляНалоговогоУчетаЗатрат
	|				ИНАЧЕ NULL
	|			КОНЕЦ = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ПредпринимательскаяДеятельностьОблагаемаяЕНВД)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоСтатьяЗатратЕНВД,
	|	Доходы.СубконтоДт1 КАК СубконтоДт1,
	|	Доходы.СубконтоДт2 КАК СубконтоДт2,
	|	Доходы.СубконтоДт3 КАК СубконтоДт3,
	|	Доходы.ОтражениеВУСН КАК ОтражениеВУСН,
	|	Доходы.СчетДт КАК СчетДт_ПД,
	|	Доходы.СубконтоДт1 КАК СубконтоДт1_ПД,
	|	Доходы.СубконтоДт2 КАК СубконтоДт2_ПД,
	|	Доходы.СубконтоДт3 КАК СубконтоДт3_ПД,
	|	СУММА(Доходы.Сумма) КАК Результат,
	|	Доходы.ПодразделениеДт,
	|	Доходы.ПодразделениеКт,
	|	Доходы.ВидРасчета.КодДоходаЕСН КАК КодДоходаЕСН
	|ПОМЕСТИТЬ ВТ_БУДоходыПоВР
	|ИЗ
	|	ОтражениеВУчете КАК Доходы
	|ГДЕ
	|	Доходы.Ссылка.Организация = &парамОрганизация
	|	И (Доходы.Ссылка.Проведен
	|			ИЛИ Доходы.Ссылка = &Ссылка)
	|	И Доходы.СчетКт В(&СчетаРасчетовСПерсоналомПоОплатеТруда)
	|	И Доходы.Ссылка.ПериодРегистрации >= &парамНачалоГода
	|	И Доходы.Ссылка.ПериодРегистрации <= &парамПериод
	|
	|СГРУППИРОВАТЬ ПО
	|	Доходы.ВидРасчета,
	|	Доходы.Ссылка.ПериодРегистрации,
	|	Доходы.СчетДт,
	|	ВЫБОР
	|		КОГДА ВЫБОР
	|				КОГДА Доходы.СубконтоДт1 ССЫЛКА Справочник.СтатьиЗатрат
	|					ТОГДА Доходы.СубконтоДт1.ВидДеятельностиДляНалоговогоУчетаЗатрат
	|				КОГДА Доходы.СубконтоДт2 ССЫЛКА Справочник.СтатьиЗатрат
	|					ТОГДА Доходы.СубконтоДт2.ВидДеятельностиДляНалоговогоУчетаЗатрат
	|				КОГДА Доходы.СубконтоДт3 ССЫЛКА Справочник.СтатьиЗатрат
	|					ТОГДА Доходы.СубконтоДт3.ВидДеятельностиДляНалоговогоУчетаЗатрат
	|				ИНАЧЕ NULL
	|			КОНЕЦ = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ПредпринимательскаяДеятельностьОблагаемаяЕНВД)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	Доходы.СубконтоДт1,
	|	Доходы.СубконтоДт2,
	|	Доходы.СубконтоДт3,
	|	Доходы.ОтражениеВУСН,
	|	Доходы.Физлицо,
	|	Доходы.ВидРасчета.КодДоходаЕСН,
	|	Доходы.ПодразделениеДт,
	|	Доходы.ПодразделениеКт,
	|	Доходы.СчетДт,
	|	Доходы.СубконтоДт1,
	|	Доходы.СубконтоДт2,
	|	Доходы.СубконтоДт3
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	ПериодРегистрации,
	|	ВидРасчета,
	|	ЭтоСтатьяЗатратЕНВД";
	Запрос.Выполнить();
	
	// ЕСНДоходыПоВР
	//	Поля:
	//  ФизЛицо,
	//  КодДоходаЕСН,
	//  ОблагаетсяЕНВД,
	//  ПериодРегистрации
	//  Результат
	//
	// Описание:
	//	список доходов по кодам ЕСН
	//
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Доходы.ФизЛицо КАК ФизЛицо,
	|	Доходы.КодДоходаЕСН,
	|	Доходы.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	НАЧАЛОПЕРИОДА(Доходы.Период, МЕСЯЦ) КАК ПериодРегистрации,
	|	СУММА(Доходы.Результат) КАК Результат
	|ПОМЕСТИТЬ ВТ_ЕСНДоходыПоВР
	|ИЗ
	|	РегистрНакопления.ЕСНСведенияОДоходах КАК Доходы
	|ГДЕ
	|	Доходы.ОбособленноеПодразделение = &парамОрганизация
	|	И Доходы.Период >= &парамНачалоГода
	|	И Доходы.Период <= &парамПериод
	|	И (Доходы.КодДоходаЕСН.ВходитВБазуФОМС
	|			ИЛИ Доходы.КодДоходаЕСН.ВходитВБазуФСС
	|			ИЛИ Доходы.КодДоходаЕСН.ВходитВБазуФедеральныйБюджет)
	|
	|СГРУППИРОВАТЬ ПО
	|	Доходы.ФизЛицо,
	|	Доходы.КодДоходаЕСН,
	|	НАЧАЛОПЕРИОДА(Доходы.Период, МЕСЯЦ),
	|	Доходы.ОблагаетсяЕНВД
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	ПериодРегистрации,
	|	ОблагаетсяЕНВД";
	Запрос.Выполнить();
	
	// ЕСНДоходыЗаГод
	//	Поля:
	//		ФизЛицо
	//		КодДоходаЕСН
	//		ПериодРегистрации
	//		Результат			- доход за период
	//		РезультатЗаГод		- доход за год нарастающим итогом
	//	Описание:
	//	соединение таблицы ЕСНДоходыЗаГод с самой собой для получения
	//	нарастающего итога
	//
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСНДоходыОсновная.ФизЛицо КАК ФизЛицо,
	|	ЕСНДоходыОсновная.КодДоходаЕСН,
	|	ЕСНДоходыОсновная.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	ЕСНДоходыОсновная.ПериодРегистрации КАК ПериодРегистрации,
	|	ЕСНДоходыОсновная.Результат,
	|	СУММА(ЕСНДоходыВспомогательная.Результат) КАК РезультатЗаГод
	|ПОМЕСТИТЬ ВТ_ЕСНДоходыЗаГод
	|ИЗ
	|	ВТ_ЕСНДоходыЕНВД КАК ЕСНДоходыОсновная
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ЕСНДоходыЕНВД КАК ЕСНДоходыВспомогательная
	|		ПО (ЕСНДоходыВспомогательная.ПериодРегистрации <= ЕСНДоходыОсновная.ПериодРегистрации)
	|			И (ГОД(ЕСНДоходыОсновная.ПериодРегистрации) = ГОД(ЕСНДоходыВспомогательная.ПериодРегистрации))
	|			И ЕСНДоходыОсновная.ФизЛицо = ЕСНДоходыВспомогательная.ФизЛицо
	|			И ЕСНДоходыОсновная.КодДоходаЕСН = ЕСНДоходыВспомогательная.КодДоходаЕСН
	|			И ЕСНДоходыОсновная.ОблагаетсяЕНВД = ЕСНДоходыВспомогательная.ОблагаетсяЕНВД
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСНДоходыОсновная.ФизЛицо,
	|	ЕСНДоходыОсновная.КодДоходаЕСН,
	|	ЕСНДоходыОсновная.ОблагаетсяЕНВД,
	|	ЕСНДоходыОсновная.Результат,
	|	ЕСНДоходыОсновная.ПериодРегистрации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	ПериодРегистрации,
	|	ОблагаетсяЕНВД";
	Запрос.Выполнить();
	
	
	// БУДоходыСводПоВР
	//	Поля:
	//		ФизЛицо
	//		Приказ
	//		ВидРасчета
	//		ПериодРегистрации
	//		Результат
	//
	// Описание:
	//	доходы, отраженные в бухучете, сведенные по видам расчета
	//
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Доходы.Физлицо КАК Физлицо,
	|	Доходы.Ссылка.ПериодРегистрации КАК ПериодРегистрации,
	|	СУММА(Доходы.Результат) КАК Результат,
	|	Доходы.ВидРасчета.КодДоходаЕСН КАК КодДоходаЕСН
	|ПОМЕСТИТЬ ВТ_БУДоходыСводПоВР
	|ИЗ
	|	Документ.НачислениеЗарплатыРаботникамОрганизаций.Начисления КАК Доходы
	|ГДЕ
	|	Доходы.Ссылка.Организация = &парамОрганизация
	|	И Доходы.Ссылка.ПериодРегистрации >= &парамНачалоГода
	|	И Доходы.Ссылка.ПериодРегистрации <= &парамПериод
	|	И Доходы.ВидРасчета.СпособОтраженияВБухучете.СчетКт В(&СчетаРасчетовСПерсоналомПоОплатеТруда)
	|
	|СГРУППИРОВАТЬ ПО
	|	Доходы.Физлицо,
	|	Доходы.Ссылка.ПериодРегистрации,
	|	Доходы.ВидРасчета.КодДоходаЕСН
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	ПериодРегистрации";
	Запрос.Выполнить();
	
	
	//	ЕСНДоходыБУДоходы
	//	Поля:
	//		ФизЛицо
	//		Приказ
	//		ВидРасчета
	//		ПериодРегистрации
	//		КодДоходаЕСН
	//		СчетДт
	//		СчетДтНУ
	//		СубконтоДт1
	//		СубконтоДт2
	//		СубконтоДт3
	//		РезультатЕСН
	//		РезультатБУ
	//	Описание:
	//	соединение таблиц с доходами в разрезе кодов дохода ЕСН и в 
	//	разрезе отражения в бухучете
	//	сопоставление выполняется по видам расчета
	//
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСНДоходыПоВР.ФизЛицо КАК ФизЛицо,
	|	ЕСНДоходыПоВР.ПериодРегистрации КАК ПериодРегистрации,
	|	ЕСНДоходыПоВР.КодДоходаЕСН,
	|	ЕСНДоходыПоВР.ОблагаетсяЕНВД,
	|	ЕСНДоходыПоВР.Результат КАК РезультатЕСН,
	|	БУДоходыПоВР.СчетДт,
	|	БУДоходыПоВР.СубконтоДт1,
	|	БУДоходыПоВР.СубконтоДт2,
	|	БУДоходыПоВР.СубконтоДт3,
	|	БУДоходыПоВР.ОтражениеВУСН,
	|	БУДоходыПоВР.ПодразделениеДт,
	|	БУДоходыПоВР.ПодразделениеКт,
	|	БУДоходыПоВР.Результат КАК РезультатБУ
	|ПОМЕСТИТЬ ВТ_ЕСНДоходыБУДоходы
	|ИЗ
	|	ВТ_ЕСНДоходыПоВР КАК ЕСНДоходыПоВР
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_БУДоходыПоВР КАК БУДоходыПоВР
	|		ПО ЕСНДоходыПоВР.ФизЛицо = БУДоходыПоВР.ФизЛицо
	|			И ЕСНДоходыПоВР.ОблагаетсяЕНВД = БУДоходыПоВР.ЭтоСтатьяЗатратЕНВД
	|			И ЕСНДоходыПоВР.КодДоходаЕСН = БУДоходыПоВР.КодДоходаЕСН
	|			И ЕСНДоходыПоВР.ПериодРегистрации = БУДоходыПоВР.ПериодРегистрации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	ПериодРегистрации";
	Запрос.Выполнить();
	
	// КоэффициентыОтраженияЕСН
	//	Поля:
	//		СчетДт
	//		СчетДтНУ
	//		СубконтоДт1
	//		СубконтоДт2
	//		СубконтоДт3
	//		БазаФедеральныйБюджет
	//		БазаФСС
	//		БазаФОМС
	//		БазаПФР
	// Описание:
	// таблица коэффициентов отражения составных частей исчисленного ЕСН по счетам бухучета
	//
	
	КоэффициентыОтраженияЕСНТекст = 
	"ВЫБРАТЬ
	|	ЕСНДоходыБУДоходы.ФизЛицо,
	|	ЕСНДоходыБУДоходы.ПериодРегистрации,
	|	ЕСНДоходыБУДоходы.СчетДт,
	|	ЕСНДоходыБУДоходы.СубконтоДт1,
	|	ЕСНДоходыБУДоходы.СубконтоДт2,
	|	ЕСНДоходыБУДоходы.СубконтоДт3,
	|	ЕСНДоходыБУДоходы.ОтражениеВУСН,
	|	ЕСНДоходыБУДоходы.ПодразделениеДт,
	|	ЕСНДоходыБУДоходы.ПодразделениеКт,
	|	ВЫБОР
	|		КОГДА ЕСНДоходыБУДоходы.ОблагаетсяЕНВД
	|				ИЛИ УчетнаяПолитикаУСН.УСН ЕСТЬ НЕ NULL 
	|				ИЛИ (НЕ ЕСНДоходыБУДоходы.КодДоходаЕСН.ВходитВБазуФедеральныйБюджет)
	|				ИЛИ ЕСНДоходыЗаГод.Результат = 0
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|				ИЛИ ЕСНДоходыОблагаемые.ДоходБезСкидокФБ = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСНДоходыБУДоходы.РезультатЕСН / БУДоходыСводПоВР.Результат * ЕСНДоходыБУДоходы.РезультатБУ * (ЕСНДоходыОблагаемые.ДоходБезСкидокФБ - ЕСНДоходыОблагаемые.ДоходБезСкидокИнвФБ) / ЕСНДоходыОблагаемые.ДоходБезСкидокФБ
	|	КОНЕЦ КАК БазаФедеральныйБюджет,
	|	ВЫБОР
	|		КОГДА ЕСНДоходыБУДоходы.ОблагаетсяЕНВД
	|				ИЛИ УчетнаяПолитикаУСН.УСН ЕСТЬ НЕ NULL 
	|				ИЛИ (НЕ ЕСНДоходыБУДоходы.КодДоходаЕСН.ВходитВБазуФСС)
	|				ИЛИ ЕСНДоходыЗаГод.Результат = 0
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|				ИЛИ ЕСНДоходыОблагаемые.ДоходБезСкидокФСС = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСНДоходыБУДоходы.РезультатЕСН / БУДоходыСводПоВР.Результат * ЕСНДоходыБУДоходы.РезультатБУ * (ЕСНДоходыОблагаемые.ДоходБезСкидокФСС - ЕСНДоходыОблагаемые.ДоходБезСкидокИнвФСС) / ЕСНДоходыОблагаемые.ДоходБезСкидокФСС
	|	КОНЕЦ КАК БазаФСС,
	|	ВЫБОР
	|		КОГДА ЕСНДоходыБУДоходы.ОблагаетсяЕНВД
	|				ИЛИ УчетнаяПолитикаУСН.УСН ЕСТЬ НЕ NULL 
	|				ИЛИ (НЕ ЕСНДоходыБУДоходы.КодДоходаЕСН.ВходитВБазуФОМС)
	|				ИЛИ ЕСНДоходыЗаГод.Результат = 0
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|				ИЛИ ЕСНДоходыОблагаемые.ДоходБезСкидокФОМС = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСНДоходыБУДоходы.РезультатЕСН / БУДоходыСводПоВР.Результат * ЕСНДоходыБУДоходы.РезультатБУ * (ЕСНДоходыОблагаемые.ДоходБезСкидокФОМС - ЕСНДоходыОблагаемые.ДоходБезСкидокИнвФОМС) / ЕСНДоходыОблагаемые.ДоходБезСкидокФОМС
	|	КОНЕЦ КАК БазаФОМС,
	|	ВЫБОР
	|		КОГДА (НЕ ЕСНДоходыБУДоходы.ОблагаетсяЕНВД)
	|				ИЛИ (НЕ ЕСНДоходыБУДоходы.КодДоходаЕСН.ВходитВБазуФедеральныйБюджет)
	|				ИЛИ ЕСНДоходыЗаГод.Результат = 0
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|				ИЛИ ЕСНДоходыОблагаемые.ДоходБезСкидокФБ = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСНДоходыБУДоходы.РезультатЕСН / БУДоходыСводПоВР.Результат * ЕСНДоходыБУДоходы.РезультатБУ
	|	КОНЕЦ КАК БазаПФР_ЕНВД,
	|	ВЫБОР
	|		КОГДА ЕСНДоходыБУДоходы.ОблагаетсяЕНВД
	|				ИЛИ (НЕ ЕСНДоходыБУДоходы.КодДоходаЕСН.ВходитВБазуФедеральныйБюджет)
	|				ИЛИ ЕСНДоходыЗаГод.Результат = 0
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|				ИЛИ ЕСНДоходыОблагаемые.ДоходБезСкидокФБ = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСНДоходыБУДоходы.РезультатЕСН / БУДоходыСводПоВР.Результат * ЕСНДоходыБУДоходы.РезультатБУ
	|	КОНЕЦ КАК БазаПФР_НеЕНВД,
	|	ВЫБОР
	|		КОГДА (НЕ ЕСНДоходыБУДоходы.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаУСН.УСН ЕСТЬ NULL 
	|				ИЛИ (НЕ УчетнаяПолитикаУплачиватьДобровольныеВзносыВФСС.УплачиватьДобровольныеВзносыВФСС)
	|				ИЛИ (НЕ ЕСНДоходыБУДоходы.КодДоходаЕСН.ВходитВБазуФедеральныйБюджет)
	|				ИЛИ ЕСНДоходыЗаГод.Результат = 0
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|				ИЛИ ЕСНДоходыОблагаемые.ДоходБезСкидокФБ = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСНДоходыБУДоходы.РезультатЕСН / БУДоходыСводПоВР.Результат * ЕСНДоходыБУДоходы.РезультатБУ
	|	КОНЕЦ КАК БазаФСС_БЛ
	|ИЗ
	|	ВТ_ЕСНДоходыБУДоходы КАК ЕСНДоходыБУДоходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетнаяПолитикаНалоговыйУчетУСН КАК УчетнаяПолитикаУСН
	|		ПО (МЕСЯЦ(ЕСНДоходыБУДоходы.ПериодРегистрации) = УчетнаяПолитикаУСН.Месяц)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетнаяПолитикаУплачиватьДобровольныеВзносыВФСС КАК УчетнаяПолитикаУплачиватьДобровольныеВзносыВФСС
	|		ПО (МЕСЯЦ(ЕСНДоходыБУДоходы.ПериодРегистрации) = УчетнаяПолитикаУплачиватьДобровольныеВзносыВФСС.Месяц)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_БУДоходыСводПоВР КАК БУДоходыСводПоВР
	|		ПО ЕСНДоходыБУДоходы.ФизЛицо = БУДоходыСводПоВР.ФизЛицо
	|			И ЕСНДоходыБУДоходы.КодДоходаЕСН = БУДоходыСводПоВР.КодДоходаЕСН
	|			И ЕСНДоходыБУДоходы.ПериодРегистрации = БУДоходыСводПоВР.ПериодРегистрации
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЕСНДоходыЗаГод КАК ЕСНДоходыЗаГод
	|		ПО ЕСНДоходыБУДоходы.ФизЛицо = ЕСНДоходыЗаГод.ФизЛицо
	|			И ЕСНДоходыБУДоходы.КодДоходаЕСН = ЕСНДоходыЗаГод.КодДоходаЕСН
	|			И ЕСНДоходыБУДоходы.ОблагаетсяЕНВД = ЕСНДоходыЗаГод.ОблагаетсяЕНВД
	|			И ЕСНДоходыБУДоходы.ПериодРегистрации = ЕСНДоходыЗаГод.ПериодРегистрации
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЕСНДоходыОблагаемые КАК ЕСНДоходыОблагаемые
	|		ПО ЕСНДоходыБУДоходы.ФизЛицо = ЕСНДоходыОблагаемые.ФизЛицо
	|			И ЕСНДоходыБУДоходы.ПериодРегистрации = ЕСНДоходыОблагаемые.ПериодРегистрации";
	
	Запрос.Текст = КоэффициентыОтраженияЕСНТекст;
	
	РБП_ЕСН = Справочники.РасходыБудущихПериодов.РБПНаЕСН;
	РБП_ПФР = Справочники.РасходыБудущихПериодов.РБПНаПФР;
	
	
	ОтражениеВБУ = Запрос.Выполнить().Выгрузить();
	ОтражениеВБУБезПериодовДействия = ОтражениеВБУ.Скопировать();
	ОтражениеВБУБезПериодовДействия.Свернуть("ФизЛицо,ПериодРегистрации,СчетДт,СубконтоДт1,СубконтоДт2,СубконтоДт3,ОтражениеВУСН,ПодразделениеДт,ПодразделениеКт","БазаФедеральныйБюджет,БазаФСС,БазаФОМС,БазаПФР_НеЕНВД,БазаПФР_ЕНВД,БазаФСС_БЛ");
	ОтражениеВБУБезПериодовДействия.Индексы.Добавить("ФизЛицо,ПериодРегистрации");
	
	
	// ЕСНИсчисленный
	//	Поля:
	//		ФизЛицо
	//		ФедеральныйБюджет
	//		ФСС
	//		ФФОМС
	//		ТФОМС
	//		ПФРНакопительная_НеЕНВД - в части видов деятельности, не облагаемых ЕНВД
	//		ПФРСтраховая_НеЕНВД 
	//		ПФРНакопительная_ЕНВД - в части видов деятельности, облагаемых ЕНВД	 
	//		ПФРСтраховая_ЕНВД
	// Описание:
	// просуммированный исчисленный ЕСН и страховые взносы в ПФР в разрезе физлиц
	//
	
	ЕСНИсчисленныйТекст = 
	"ВЫБРАТЬ
	|	ЕСНПоРаботникам.ФизЛицо,
	|	ЕСНПоРаботникам.ПериодРегистрации,
	|	СУММА(ЕСНПоРаботникам.ФедеральныйБюджет) КАК ФедеральныйБюджет,
	|	СУММА(ЕСНПоРаботникам.ФСС) КАК ФСС,
	|	СУММА(ЕСНПоРаботникам.ФФОМС) КАК ФФОМС,
	|	СУММА(ЕСНПоРаботникам.ТФОМС) КАК ТФОМС,
	|	СУММА(ЕСНПоРаботникам.ПФРНакопительная - ЕСНПоРаботникам.ПФРНакопительнаяЕНВД) КАК ПФРНакопительная_НеЕНВД,
	|	СУММА(ЕСНПоРаботникам.ПФРСтраховая - ЕСНПоРаботникам.ПФРСтраховаяЕНВД) КАК ПФРСтраховая_НеЕНВД,
	|	СУММА(ЕСНПоРаботникам.ПФРНакопительнаяЕНВД) КАК ПФРНакопительная_ЕНВД,
	|	СУММА(ЕСНПоРаботникам.ПФРСтраховаяЕНВД) КАК ПФРСтраховая_ЕНВД
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЕСНИсчисленный.ФизЛицо КАК ФизЛицо,
	|		НАЧАЛОПЕРИОДА(ЕСНИсчисленный.Период, МЕСЯЦ) КАК ПериодРегистрации,
	|		ВЫБОР
	|			КОГДА УчетнаяПолитикаУСН.УСН ЕСТЬ НЕ NULL 
	|				ТОГДА 0
	|			ИНАЧЕ СУММА(ЕСНИсчисленный.ФедеральныйБюджет - ЕСНИсчисленный.ПФРНакопительная - ЕСНИсчисленный.ПФРСтраховая + ЕСНИсчисленный.ПФРНакопительнаяЕНВД + ЕСНИсчисленный.ПФРСтраховаяЕНВД - ЕСНИсчисленный.ПримененнаяЛьготаФБ / 100 * (&СтавкаФедеральныйБюджет - ВЫБОР
	|						КОГДА ГОД(ЕСНИсчисленный.ФизЛицо.ДатаРождения) < 1967
	|							ТОГДА &СтавкаПФРНакопительная1 + &СтавкаПФРСтраховая1
	|						ИНАЧЕ &СтавкаПФРНакопительная2 + &СтавкаПФРСтраховая2
	|					КОНЕЦ))
	|		КОНЕЦ КАК ФедеральныйБюджет,
	|		ВЫБОР
	|			КОГДА УчетнаяПолитикаУСН.УСН ЕСТЬ НЕ NULL 
	|				ТОГДА 0
	|			ИНАЧЕ СУММА(ЕСНИсчисленный.ФСС - ЕСНИсчисленный.ПримененнаяЛьготаФСС * &СтавкаФСС / 100)
	|		КОНЕЦ КАК ФСС,
	|		ВЫБОР
	|			КОГДА УчетнаяПолитикаУСН.УСН ЕСТЬ НЕ NULL 
	|				ТОГДА 0
	|			ИНАЧЕ СУММА(ЕСНИсчисленный.ФФОМС - ЕСНИсчисленный.ПримененнаяЛьготаФОМС * &СтавкаФФОМС / 100)
	|		КОНЕЦ КАК ФФОМС,
	|		ВЫБОР
	|			КОГДА УчетнаяПолитикаУСН.УСН ЕСТЬ НЕ NULL 
	|				ТОГДА 0
	|			ИНАЧЕ СУММА(ЕСНИсчисленный.ТФОМС - ЕСНИсчисленный.ПримененнаяЛьготаФОМС * &СтавкаТФОМС / 100)
	|		КОНЕЦ КАК ТФОМС,
	|		СУММА(ЕСНИсчисленный.ПФРНакопительная) КАК ПФРНакопительная,
	|		СУММА(ЕСНИсчисленный.ПФРСтраховая) КАК ПФРСтраховая,
	|		СУММА(ЕСНИсчисленный.ПФРНакопительнаяЕНВД) КАК ПФРНакопительнаяЕНВД,
	|		СУММА(ЕСНИсчисленный.ПФРСтраховаяЕНВД) КАК ПФРСтраховаяЕНВД
	|	ИЗ
	|		РегистрНакопления.ЕСНИсчисленный КАК ЕСНИсчисленный
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетнаяПолитикаНалоговыйУчетУСН КАК УчетнаяПолитикаУСН
	|			ПО (МЕСЯЦ(ЕСНИсчисленный.Период) = УчетнаяПолитикаУСН.Месяц)
	|	ГДЕ
	|		ЕСНИсчисленный.Период >= &парамНачалоГода
	|		И ЕСНИсчисленный.Период < &парамКонецПериода
	|		И ЕСНИсчисленный.ОбособленноеПодразделение = &парамОбособленноеПодразделение";
	Если ОтборПоДокументу Тогда
		ЕСНИсчисленныйТекст = ЕСНИсчисленныйТекст + "
		|		И ЕСНИсчисленный.Регистратор = &парамСсылка";
	КонецЕсли;
	ЕСНИсчисленныйТекст = ЕСНИсчисленныйТекст+ "
	|	
	|	СГРУППИРОВАТЬ ПО
	|		УчетнаяПолитикаУСН.УСН,
	|		ЕСНИсчисленный.ФизЛицо,
	|		НАЧАЛОПЕРИОДА(ЕСНИсчисленный.Период, МЕСЯЦ)) КАК ЕСНПоРаботникам
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСНПоРаботникам.ФизЛицо,
	|	ЕСНПоРаботникам.ПериодРегистрации";
	
	ОтраженоЕСНИсчисленногоТекст = 
	"ВЫБРАТЬ
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт1,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт2,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт3,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.ОтражениеВУСН,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКт1,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.ПодразделениеДт,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.ПодразделениеКт,
	|	СУММА(-ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Сумма) КАК Сумма,
	|	СУММА(-ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СуммаНУ) КАК СуммаНУ
	|ИЗ
	|	ОтражениеВУчете КАК ОтражениеЗарплатыВРеглУчетеОтражениеВУчете
	|ГДЕ
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Ссылка.ПериодРегистрации >= &парамНачалоГода
	|	И ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Ссылка.ПериодРегистрации < &парамНачалоПериода
	|	И ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Ссылка.Организация = &парамОрганизация
	|	И ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт В(&парамСписокСчетовКт)
	|	И ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКт1 = &парамСубконтоКт1
	|	И ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Ссылка.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт1,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт2,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт3,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКт1,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.ПодразделениеДт,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.ПодразделениеКт,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.ОтражениеВУСН";	
	
	ЗапросОтраженоРанее = Новый Запрос(ОтраженоЕСНИсчисленногоТекст);	
	ЗапросОтраженоРанее.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	
	// готовим списки счетов учета ЕСН
	СписокСчетовУчетаЕСН = Новый СписокЗначений;
	СписокСчетовУчетаЕСН.Добавить(ПланыСчетов.Хозрасчетный.ЕСН_ФБ);
	СписокСчетовУчетаЕСН.Добавить(ПланыСчетов.Хозрасчетный.ФОМС);
	СписокСчетовУчетаЕСН.Добавить(ПланыСчетов.Хозрасчетный.ФСС);
	СписокСчетовУчетаЕСН.Добавить(ПланыСчетов.Хозрасчетный.ФФОМС);
	СписокСчетовУчетаЕСН.Добавить(ПланыСчетов.Хозрасчетный.ПФР_нак);
	СписокСчетовУчетаЕСН.Добавить(ПланыСчетов.Хозрасчетный.ПФР_страх);
	
	ТекстСчетаСчетаУчета =
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&СписокСчетовУчетаЕСН)";
	
	Запрос.Текст = ТекстСчетаСчетаУчета;
	Запрос.УстановитьПараметр("СписокСчетовУчетаЕСН", СписокСчетовУчетаЕСН);
	СписокСчетовУчетаЕСН = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	ЗапросОтраженоРанее.УстановитьПараметр("парамСписокСчетовКт", СписокСчетовУчетаЕСН);
	ЗапросОтраженоРанее.УстановитьПараметр("парамСубконтоКт1", Перечисления.ВидыПлатежейВГосБюджет.Налог);
	ЗапросОтраженоРанее.УстановитьПараметр("парамОрганизация", Организация);
	ЗапросОтраженоРанее.УстановитьПараметр("парамНачалоПериода", НачалоМесяца(ПериодРегистрации));
	ЗапросОтраженоРанее.УстановитьПараметр("парамНачалоГода", НачалоГода(ПериодРегистрации));
	
	ОтраженоРанееВНалоговомПериоде = ЗапросОтраженоРанее.Выполнить().Выгрузить();
	//ЗапросОтраженоРанее.МенеджерВременныхТаблиц.Закрыть();
	Для каждого СтрокаИсточник Из ОтраженоРанееВНалоговомПериоде Цикл
		ЗаполнитьЗначенияСвойств(ПромежуточнаяТаблица.Добавить(),СтрокаИсточник);
	КонецЦикла; 
	
	
	Запрос.Текст = ЕСНИсчисленныйТекст;
	
	Запрос.УстановитьПараметр("парамНачалоГода", НачалоГода(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамКонецПериода", КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамОбособленноеПодразделение", Организация);
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация", ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("парамМуж", Перечисления.ПолФизическихЛиц.Мужской);
	Запрос.УстановитьПараметр("парамСсылка", Ссылка);
	
	// для заполнения данных по ЕСН нужно получить максимальные ставки ЕСН
	// и передать их в качестве параметров в запрос ЕСНИсчисленный
	ЗапросПоСтавкам = Новый Запрос(
	"ВЫБРАТЬ
	|	СведенияОСтавкахЕСНиПФР.ФедеральныйБюджетВПроцентах КАК СтавкаФедеральныйБюджет,
	|	СведенияОСтавкахЕСНиПФР.ФССвПроцентах КАК СтавкаФСС,
	|	СведенияОСтавкахЕСНиПФР.ФФОМСвПроцентах КАК СтавкаФФОМС,
	|	СведенияОСтавкахЕСНиПФР.ТФОМСвПроцентах КАК СтавкаТФОМС,
	|	СведенияОСтавкахЕСНиПФР.ПФРНакопительная1вПроцентах КАК СтавкаПФРНакопительная1,
	|	СведенияОСтавкахЕСНиПФР.ПФРНакопительная2вПроцентах КАК СтавкаПФРНакопительная2,
	|	СведенияОСтавкахЕСНиПФР.ПФРСтраховая1вПроцентах КАК СтавкаПФРСтраховая1,
	|	СведенияОСтавкахЕСНиПФР.ПФРСтраховая2вПроцентах КАК СтавкаПФРСтраховая2
	|ИЗ
	|	РегистрСведений.СведенияОСтавкахЕСНиПФР КАК СведенияОСтавкахЕСНиПФР
	|
	|ГДЕ
	|	СведенияОСтавкахЕСНиПФР.Год = &Год И
	|	(СведенияОСтавкахЕСНиПФР.НомерСтрокиСтавок = 1) И
	|	СведенияОСтавкахЕСНиПФР.ВидСтавокЕСНиПФР = &ВидСтавокЕСНиПФР");
	
	ЗапросПоСтавкам.УстановитьПараметр("Год", Год(Дата));
	ЗапросПоСтавкам.УстановитьПараметр("ВидСтавокЕСНиПФР", Организация.ВидСтавокЕСНиПФР);
	ЗапросПоСтавкам = ЗапросПоСтавкам.Выполнить().Выбрать();
	Если ЗапросПоСтавкам.Следующий() Тогда
		Запрос.УстановитьПараметр("СтавкаФедеральныйБюджет", ЗапросПоСтавкам.СтавкаФедеральныйБюджет);
		Запрос.УстановитьПараметр("СтавкаФСС", ЗапросПоСтавкам.СтавкаФСС);
		Запрос.УстановитьПараметр("СтавкаФФОМС", ЗапросПоСтавкам.СтавкаФФОМС);
		Запрос.УстановитьПараметр("СтавкаТФОМС", ЗапросПоСтавкам.СтавкаТФОМС);
		Запрос.УстановитьПараметр("СтавкаПФРНакопительная1", ЗапросПоСтавкам.СтавкаПФРНакопительная1);
		Запрос.УстановитьПараметр("СтавкаПФРНакопительная2", ЗапросПоСтавкам.СтавкаПФРНакопительная2);
		Запрос.УстановитьПараметр("СтавкаПФРСтраховая1", ЗапросПоСтавкам.СтавкаПФРСтраховая1);
		Запрос.УстановитьПараметр("СтавкаПФРСтраховая2", ЗапросПоСтавкам.СтавкаПФРСтраховая2);
	Иначе
		Запрос.УстановитьПараметр("СтавкаФедеральныйБюджет", 0);
		Запрос.УстановитьПараметр("СтавкаФСС", 0);
		Запрос.УстановитьПараметр("СтавкаФФОМС", 0);
		Запрос.УстановитьПараметр("СтавкаТФОМС", 0);
		Запрос.УстановитьПараметр("СтавкаПФРНакопительная1", 0);
		Запрос.УстановитьПараметр("СтавкаПФРНакопительная2", 0);
		Запрос.УстановитьПараметр("СтавкаПФРСтраховая1", 0);
		Запрос.УстановитьПараметр("СтавкаПФРСтраховая2", 0);
	КонецЕсли;
	
	// запрос по соответствиям статей затрат начислений и удержаний с ФОТ
	// для подстановки статей затрат при формировании проводок по ЕСН, ПФР, ФСС и т.п.
	// (перечисление ВидыДополнительныхСтатейЗатрат)
	ДополнительныеСтатьиЗатратЗапрос = Новый Запрос(
	"ВЫБРАТЬ
	|   СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете.ВидСтатьиЗатрат,
	|   СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете.СтатьяЗатратНачисления,
	|   СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете.СтатьяЗатрат
	|ИЗ
	|   РегистрСведений.СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете КАК СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете
	|ГДЕ
	|   СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете.ВидСтатьиЗатрат ССЫЛКА Перечисление.ВидыДополнительныхСтатейЗатрат");
	
	ДополнительныеСтатьиЗатратЗапрос.УстановитьПараметр("ДатаЗапроса", ПериодРегистрации);
	ДополнительныеСтатьиЗатрат = ДополнительныеСтатьиЗатратЗапрос.Выполнить().Выгрузить();
	
	ТипСтатьиЗатрат = Тип("СправочникСсылка.СтатьиЗатрат");
	ПараметрыПолученияСубконто = Новый Соответствие;
	ПараметрыПолученияСубконто[ТипСтатьиЗатрат] = Новый Структура("ВидСтатьиЗатрат, ДополнительныеСтатьиЗатрат", , ДополнительныеСтатьиЗатрат);
	
	СубконтоКредита = Перечисления.ВидыПлатежейВГосБюджет.Налог;
	Отбор = Новый Структура("ФизЛицо, ПериодРегистрации");
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Отбор.ФизЛицо = Выборка.ФизЛицо;
		Отбор.ПериодРегистрации = Выборка.ПериодРегистрации;
		
		СтрокиОтраженияПоФизЛицу = ОтражениеВБУБезПериодовДействия.НайтиСтроки(Отбор);
		
		// ФедеральныйБюджет
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФедеральныйБюджет");
		РезультатыФБ = ОбщегоНазначения.РаспределитьПропорционально(Выборка.ФедеральныйБюджет, Коэффициенты);
		
		
		// ФСС
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФСС");
		РезультатыФСС = ОбщегоНазначения.РаспределитьПропорционально(Выборка.ФСС, Коэффициенты);
		
		// ФОМС
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФОМС");
		РезультатыФФОМС = ОбщегоНазначения.РаспределитьПропорционально(Выборка.ФФОМС, Коэффициенты);
		РезультатыТФОМС = ОбщегоНазначения.РаспределитьПропорционально(Выборка.ТФОМС, Коэффициенты);
		
		// ПФР по видам деятельности, не облагаемым ЕНВД
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаПФР_НеЕНВД");
		РезультатыПФРНакопительная_НеЕНВД = ОбщегоНазначения.РаспределитьПропорционально(Выборка.ПФРНакопительная_НеЕНВД, Коэффициенты);
		РезультатыПФРСтраховая_НеЕНВД = ОбщегоНазначения.РаспределитьПропорционально(Выборка.ПФРСтраховая_НеЕНВД, Коэффициенты);
		
		// ПФР по видам деятельности, облагаемым ЕНВД
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаПФР_ЕНВД");
		РезультатыПФРНакопительная_ЕНВД = ОбщегоНазначения.РаспределитьПропорционально(Выборка.ПФРНакопительная_ЕНВД, Коэффициенты);
		РезультатыПФРСтраховая_ЕНВД = ОбщегоНазначения.РаспределитьПропорционально(Выборка.ПФРСтраховая_ЕНВД, Коэффициенты);
		
		Индекс = 0;
		Для каждого СтрокаОтражения Из СтрокиОтраженияПоФизЛицу Цикл
			
			ПараметрыПолученияСубконто[ТипСтатьиЗатрат].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.ЕСН;
			
			Если РезультатыФБ <> Неопределено Тогда
				
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				
				СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
				СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
				
				СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;  
				СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеКт;
				
				СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
				
				// ФедеральныйБюджет
				СтрокаТЧ.СчетКт 		= ПланыСчетов.Хозрасчетный.ЕСН_ФБ;
				СтрокаТЧ.СубконтоКт1 	= СубконтоКредита;
				
				СтрокаТЧ.Сумма 			= РезультатыФБ[Индекс];
				СтрокаТЧ.СуммаНУ 		= СтрокаТЧ.Сумма;
				
			КонецЕсли;
			
			Если РезультатыФСС <> Неопределено Тогда
				
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				
				СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
				СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
				
				СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;  
				СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеКт;
				
				СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
				
				// ФСС
				СтрокаТЧ.СчетКт			= ПланыСчетов.Хозрасчетный.ФСС;
				СтрокаТЧ.СубконтоКт1		= СубконтоКредита;
				
				СтрокаТЧ.Сумма			= РезультатыФСС[Индекс];
				СтрокаТЧ.СуммаНУ 		= СтрокаТЧ.Сумма;
				
			КонецЕсли;
			
			Если РезультатыФФОМС <> Неопределено Тогда
				
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				
				СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
				СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
				
				СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;  
				СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеКт;
				
				СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
				
				// ФФОМС
				СтрокаТЧ.СчетКт			= ПланыСчетов.Хозрасчетный.ФФОМС;
				СтрокаТЧ.СубконтоКт1	= СубконтоКредита;
				
				СтрокаТЧ.Сумма			= РезультатыФФОМС[Индекс];
				СтрокаТЧ.СуммаНУ 		= СтрокаТЧ.Сумма;
				
			КонецЕсли;
			
			Если РезультатыТФОМС <> Неопределено Тогда
				
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				
				СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
				СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
				
				СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;  
				СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеКт;
				
				СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
				
				// ТФОМС
				СтрокаТЧ.СчетКт			= ПланыСчетов.Хозрасчетный.ТФОМС;
				СтрокаТЧ.СубконтоКт1		= СубконтоКредита;
				
				СтрокаТЧ.Сумма			= РезультатыТФОМС[Индекс];
				СтрокаТЧ.СуммаНУ 		= СтрокаТЧ.Сумма;
				
			КонецЕсли;
			
			ПараметрыПолученияСубконто[ТипСтатьиЗатрат].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.ПФР;
			
			Если РезультатыПФРНакопительная_НеЕНВД <> Неопределено Тогда
				
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				
				СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
				СубконтоДт1 = ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто); 
				СтрокаТЧ.СубконтоДт1	= ?(СубконтоДт1 = РБП_ЕСН, РБП_ПФР, СубконтоДт1);
				СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
				
				СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;  
				СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеКт;
				
				СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
				
				// ПФРНакопительная
				СтрокаТЧ.СчетКт 		= ПланыСчетов.Хозрасчетный.ПФР_нак;
				СтрокаТЧ.СубконтоКт1 	= СубконтоКредита;
				
				СтрокаТЧ.Сумма 			= РезультатыПФРНакопительная_НеЕНВД[Индекс];
				СтрокаТЧ.СуммаНУ 		= СтрокаТЧ.Сумма;
				
			КонецЕсли;
			
			Если РезультатыПФРСтраховая_НеЕНВД <> Неопределено Тогда
				
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				
				СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
				СубконтоДт1 = ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто); 
				СтрокаТЧ.СубконтоДт1	= ?(СтрокаОтражения.СубконтоДт1 = РБП_ЕСН, РБП_ПФР, СубконтоДт1);
				СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
				
				СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;  
				СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеКт;
				
				СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
				
				// ПФРСтраховая
				СтрокаТЧ.СчетКт 		= ПланыСчетов.Хозрасчетный.ПФР_страх;
				СтрокаТЧ.СубконтоКт1 	= СубконтоКредита;
				
				СтрокаТЧ.Сумма = РезультатыПФРСтраховая_НеЕНВД[Индекс];
				СтрокаТЧ.СуммаНУ 		= СтрокаТЧ.Сумма;
				
			КонецЕсли;
			
			Если РезультатыПФРНакопительная_ЕНВД <> Неопределено Тогда
				
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				
				СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
				СубконтоДт1 = ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДт1	= ?(СубконтоДт1 = РБП_ЕСН, РБП_ПФР, СубконтоДт1);
				СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
				
				СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;  
				СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеКт;
				
				СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
				
				// ПФРНакопительная
				СтрокаТЧ.СчетКт 		= ПланыСчетов.Хозрасчетный.ПФР_нак;
				СтрокаТЧ.СубконтоКт1 	= СубконтоКредита;
				
				СтрокаТЧ.Сумма 			= РезультатыПФРНакопительная_ЕНВД[Индекс];
				СтрокаТЧ.СуммаНУ 		= СтрокаТЧ.Сумма;
				
			КонецЕсли;
			
			Если РезультатыПФРСтраховая_ЕНВД <> Неопределено Тогда
				
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
				СубконтоДт1 			= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДт1	= ?(СубконтоДт1 = РБП_ЕСН, РБП_ПФР, СубконтоДт1);
				СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
				
				СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;  
				СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеКт;
				
				СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
				
				// ПФРСтраховая
				СтрокаТЧ.СчетКт 		= ПланыСчетов.Хозрасчетный.ПФР_страх;
				СтрокаТЧ.СубконтоКт1 	= СубконтоКредита;
				
				СтрокаТЧ.Сумма 			= РезультатыПФРСтраховая_ЕНВД[Индекс];
				СтрокаТЧ.СуммаНУ 		= СтрокаТЧ.Сумма;
				
			КонецЕсли;
			Индекс = Индекс + 1;
		КонецЦикла;
	КонецЦикла;
	
	Если УчетнаяПолитика.УплачиватьДобровольныеВзносыВФСС Тогда 
		
		СтавкаФСС_БЛ = "0.03";
		Если мУСН Тогда
			ДоходыДляФСС_БЛТекст = 
			"ВЫБРАТЬ
			|	ЕСНСведенияОДоходах.ФизЛицо,	
			|	СУММА(ЕСНСведенияОДоходах.Результат - ЕСНСведенияОДоходах.Скидка) * " + СтавкаФСС_БЛ + " КАК Результат	
			|ИЗ
			|	РегистрНакопления.ЕСНСведенияОДоходах КАК ЕСНСведенияОДоходах
			|ГДЕ
			|	ЕСНСведенияОДоходах.Период = &парамПериодРегистрации
			|	И ЕСНСведенияОДоходах.ОбособленноеПодразделение = &парамОбособленноеПодразделение
			|	И ЕСНСведенияОДоходах.Организация = &парамГоловнаяОрганизация
			|	И ЕСНСведенияОДоходах.КодДоходаЕСН.ВходитВБазуФедеральныйБюджет
			|	И Результат <> 0
			|
			|СГРУППИРОВАТЬ ПО
			|	ЕСНСведенияОДоходах.ФизЛицо";
			
		Иначе
			ДоходыДляФСС_БЛТекст = 
			"ВЫБРАТЬ
			|	ЕСНСведенияОДоходах.ФизЛицо,	
			|	СУММА(ВЫБОР
			|		КОГДА ЕСНСведенияОДоходах.ОблагаетсяЕНВД
			|   		ТОГДА ЕСНСведенияОДоходах.Результат - ЕСНСведенияОДоходах.Скидка
			|		ИНАЧЕ 0
			|	КОНЕЦ) * " + СтавкаФСС_БЛ + " КАК Результат	
			|ИЗ
			|	РегистрНакопления.ЕСНСведенияОДоходах КАК ЕСНСведенияОДоходах
			|ГДЕ
			|	ЕСНСведенияОДоходах.Период = &парамПериодРегистрации
			|	И ЕСНСведенияОДоходах.ОбособленноеПодразделение = &парамОбособленноеПодразделение
			|	И ЕСНСведенияОДоходах.Организация = &парамГоловнаяОрганизация
			|	И ЕСНСведенияОДоходах.КодДоходаЕСН.ВходитВБазуФедеральныйБюджет
			|	И Результат <> 0
			|
			|СГРУППИРОВАТЬ ПО
			|	ЕСНСведенияОДоходах.ФизЛицо";
			
		КонецЕсли;
		
		Запрос.Текст = ДоходыДляФСС_БЛТекст;
		Запрос.УстановитьПараметр("парамОбособленноеПодразделение", Организация);
		Запрос.УстановитьПараметр("парамГоловнаяОрганизация", ГоловнаяОрганизация);
		Запрос.УстановитьПараметр("парамПериодРегистрации", ПериодРегистрации);
		
		Отбор = Новый Структура("ФизЛицо, ПериодРегистрации");
		Отбор.ПериодРегистрации = ПериодРегистрации;
		
		ПараметрыПолученияСубконто[ТипСтатьиЗатрат].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.ФСС_БЛ;
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Отбор.ФизЛицо = Выборка.ФизЛицо;
			
			СтрокиОтраженияПоФизЛицу = ОтражениеВБУБезПериодовДействия.НайтиСтроки(Отбор);
			
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФСС_БЛ");
			РезультатыФСС_БЛ = ОбщегоНазначения.РаспределитьПропорционально(Выборка.Результат, Коэффициенты);
			
			Если РезультатыФСС_БЛ <> Неопределено Тогда
				Индекс = 0;
				Для каждого СтрокаОтражения Из СтрокиОтраженияПоФизЛицу Цикл
					Если РезультатыФСС_БЛ[Индекс] <> 0 Тогда
						СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
						СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
						СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
						СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
						СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
						
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;  
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеКт;
						
						СтрокаТЧ.СчетКт			= ПланыСчетов.Хозрасчетный.ФСС_ДобровольныеВзносы;
						СтрокаТЧ.СубконтоКт1	= СубконтоКредита;
						Если мОбъектНалогообложенияУСН = Перечисления.ОбъектыНалогообложенияПоУСН.ДоходыМинусРасходы Тогда
							СтрокаТЧ.ОтражениеВУСН	   = Перечисления.ОтражениеВУСН.НеПринимаются;
						КонецЕсли;
						
						СтрокаТЧ.Сумма 			= РезультатыФСС_БЛ[Индекс];
						СтрокаТЧ.СуммаНУ 		= СтрокаТЧ.Сумма;
					КонецЕсли;
					
					Индекс = Индекс + 1			
				КонецЦикла;	
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	// вычеркнем обнулившиеся суммы
	ПромежуточнаяТаблица.Свернуть("Ссылка,СчетДт,СчетКт,СубконтоДт1,СубконтоДт2,СубконтоДт3,СубконтоКт1,СубконтоКт2,СубконтоКт3,ОтражениеВУСН,ПодразделениеДт,ПодразделениеКт", "Сумма, СуммаНУ");
	ПромежуточнаяТаблица.Индексы.Добавить("Сумма");
	НулевыеСтроки = ПромежуточнаяТаблица.НайтиСтроки(Новый Структура("Сумма",0));
	Для каждого СтрокаТаблицы Из НулевыеСтроки Цикл
		ПромежуточнаяТаблица.Удалить(СтрокаТаблицы)
	КонецЦикла;
	
	// формирование проводок по ФСС страхование от несчастных случаев
	
	// ДоходыДляФСС_НС
	//	Результат - база для уплаты взносов по ФСС НС уже учтена льготная ставка 
	//				по зарплате инвалидов
	//	СчетДт
	//	СчетДтНУ
	//	СубконтоДт1
	//	СубконтоДт2
	//	СубконтоДт3
	//
	
	ДоходыДляФСС_НСТекст = 
	"ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА СведенияИнвалидность.Инвалидность
	|				ТОГДА Доходы.Сумма * 0.6
	|			ИНАЧЕ Доходы.Сумма
	|		КОНЕЦ) КАК Результат,
	|	Доходы.СчетДт КАК СчетДт,
	|	Доходы.СубконтоДт1 КАК СубконтоДт1,
	|	Доходы.СубконтоДт2 КАК СубконтоДт2,
	|	Доходы.СубконтоДт3 КАК СубконтоДт3,
	|	Доходы.ПодразделениеДт КАК ПодразделениеДт,
	|	Доходы.ПодразделениеКт КАК ПодразделениеКт,
	|	Доходы.ОтражениеВУСН КАК ОтражениеВУСН
	|ИЗ
	|	ОтражениеВУчете КАК Доходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц.СрезПоследних(&ПериодРегистрации, ) КАК СведенияИнвалидность
	|		ПО Доходы.Физлицо = СведенияИнвалидность.Физлицо
	|ГДЕ
	|	Доходы.ВидРасчета.КодДоходаФСС_НС = &Облагается
	|	И (Доходы.Ссылка.Проведен
	|			ИЛИ Доходы.Ссылка = &Ссылка)
	|	И Доходы.СчетКт В(&СчетаРасчетовСПерсоналомПоОплатеТруда)
	|	И Доходы.Ссылка.ПериодРегистрации = &ПериодРегистрации
	|	И Доходы.Ссылка.Организация = &парамОбособленноеПодразделение
	|
	|СГРУППИРОВАТЬ ПО
	|	Доходы.СчетДт,
	|	Доходы.СубконтоДт1,
	|	Доходы.СубконтоДт2,
	|	Доходы.СубконтоДт3,
	|	Доходы.ПодразделениеДт,
	|	Доходы.ПодразделениеКт,
	|	Доходы.ОтражениеВУСН";
	
	ЗапросДляФССНС = Новый Запрос(ДоходыДляФСС_НСТекст);
	ЗапросДляФССНС.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	ЗапросДляФССНС.УстановитьПараметр("Облагается", Перечисления.ДоходыФСС_НС.Облагается);
	ЗапросДляФССНС.УстановитьПараметр("ПериодРегистрации", НачалоМесяца(ПериодРегистрации));
	ЗапросДляФССНС.УстановитьПараметр("парамОбособленноеПодразделение", Организация);
	ЗапросДляФССНС.УстановитьПараметр("РБП_Взносов", Справочники.РасходыБудущихПериодов.РБПНаФСС);
	ЗапросДляФССНС.УстановитьПараметр("СчетаРасчетовСПерсоналомПоОплатеТруда",СчетаРасчетовСПерсоналомПоОплатеТруда);
	ЗапросДляФССНС.УстановитьПараметр("Ссылка", Ссылка);
	
	Результаты = ЗапросДляФССНС.Выполнить().Выгрузить();
	//ЗапросДляФССНС.МенеджерВременныхТаблиц.Закрыть();
	
	СтавкаВзноса = БухгалтерскийУчет.ПолучитьСтавкуВзносаНаСтрахованиеОтНесчастныхСлучаев(Организация, ПериодРегистрации);
	
	Всего = Результаты.Итог("Результат") * СтавкаВзноса;
	Коэффициенты = Результаты.ВыгрузитьКолонку("Результат");
	СуммыПоСчетам = ОбщегоНазначения.РаспределитьПропорционально(Всего, Коэффициенты);
	
	ПараметрыПолученияСубконто[ТипСтатьиЗатрат].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.ФСС_НС;
	
	Если СуммыПоСчетам <> Неопределено Тогда
		Для Каждого СтрокаРезультата Из Результаты Цикл
			
			СуммаПроводки = СуммыПоСчетам[Результаты.Индекс(СтрокаРезультата)];
			Если СуммаПроводки <> 0 Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				
				СтрокаТЧ.СчетДт			= СтрокаРезультата.СчетДт;
				СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаРезультата.СубконтоДт1, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаРезультата.СубконтоДт2, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаРезультата.СубконтоДт3, ПараметрыПолученияСубконто);
				
				СтрокаТЧ.СчетКт 		= ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ;
				СтрокаТЧ.СубконтоКт1 	= Перечисления.ВидыПлатежейВГосБюджет.Налог;
				
				СтрокаТЧ.ПодразделениеДт = СтрокаРезультата.ПодразделениеДт;  
				СтрокаТЧ.ПодразделениеКт = СтрокаРезультата.ПодразделениеКт;
				
				СтрокаТЧ.ОтражениеВУСН	= СтрокаРезультата.ОтражениеВУСН;
				
				СтрокаТЧ.Сумма 			= СуммаПроводки;
				СтрокаТЧ.СуммаНУ 		= СуммаПроводки;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ПромежуточнаяТаблица.Свернуть("Ссылка, СчетДт,СчетКт,СубконтоДт1,СубконтоДт2,СубконтоДт3,СубконтоКт1,СубконтоКт2,СубконтоКт3,ОтражениеВУСН,ПодразделениеДт,ПодразделениеКт", "Сумма, СуммаНУ");
	
	Если ТипЗнч(ОтражениеВУчете) = Тип("ТаблицаЗначений") Тогда
		ОтражениеВУчете.Очистить();
	КонецЕсли;
	
	Для Каждого СтрокаТаблицы Из ПромежуточнаяТаблица Цикл
		ЗаполнитьЗначенияСвойств(ОтражениеВУчете.Добавить(),СтрокаТаблицы);
	КонецЦикла;
	
	
КонецПроцедуры


// ПРОЧИЕ ПРОЦЕДУРЫ И ФУНКЦИИ
//

Функция ПолучитьВидСубконтоПоУмолчаниюДляСправочникаСубконто() Экспорт
	
	
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ВидыСубконтоХозрасчетные.Ссылка КАК Ссылка,
	|	ВидыСубконтоХозрасчетные.ТипЗначения КАК ТипЗначения
	|ИЗ
	|	ПланВидовХарактеристик.ВидыСубконтоХозрасчетные КАК ВидыСубконтоХозрасчетные
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|");
	
	ТипСубконто = Тип("СправочникСсылка.Субконто");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.ТипЗначения.СодержитТип(ТипСубконто) Тогда
			Возврат Выборка.Ссылка;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка();
	
КонецФункции // ПолучитьВидСубконтоПоУмолчаниюДляСправочникаСубконто()


Функция ЭтоЮрЛицо(Организация) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Организации.ЮрФизЛицо
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.Ссылка = &Организация";
	Выборка = Запрос.Выполнить().Выбрать();
	Возврат Не Выборка.Следующий() Или Выборка.ЮрФизЛицо <> Перечисления.ЮрФизЛицо.ФизЛицо;
	
КонецФункции // ЭтоЮрЛицо()

// Проверяет правильность заполнения ОГРН
// Возвращаемое значение:
//   Булево
//
Функция ОГРНСоответствуетТребованиям(ОГРН, ЮрФизЛицо, ТекстСообщенияОшибки) Экспорт
	
	Если ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо Тогда
		Если СтрДлина(СокрЛП(ОГРН)) <> 15 Тогда
			ТекстСообщенияОшибки = ТекстСообщенияОшибки + "ОГРНИП указан неверно! ОГРНИП должен состоять из 15 цифр!" + Символы.ПС;
			Возврат Ложь;
		КонецЕсли;
		Если НЕ ОбщегоНазначения.ТолькоЦифрыВСтроке(ОГРН) Тогда
			ТекстСообщенияОшибки = ТекстСообщенияОшибки + "ОГРНИП указан неверно! ОГРН должен состоять только из цифр!" + Символы.ПС;
			Возврат Ложь;
		КонецЕсли;
		ОГРН14 = Число(Лев(Строка(ОГРН), 14));
		Если Прав(Формат(ОГРН14 % 13, "ЧН=0; ЧГ=0"), 1) <> Прав(ОГРН, 1) Тогда
			ТекстСообщенияОшибки = ТекстСообщенияОшибки + "Возможно, ОГРНИП указан неверно (контрольный разряд не совпадает с вычисленным)!" + Символы.ПС;
		КонецЕсли;
	Иначе
		Если СтрДлина(ОГРН) <> 13 Тогда
			ТекстСообщенияОшибки = ТекстСообщенияОшибки + "ОГРН " + ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("организации") + " указан неверно! ОГРН должен состоять из 13 цифр!" + Символы.ПС;
			Возврат Ложь;
		КонецЕсли;
		Если НЕ ОбщегоНазначения.ТолькоЦифрыВСтроке(ОГРН) Тогда
			ТекстСообщенияОшибки = ТекстСообщенияОшибки + "ОГРН " + ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("организации") + " указан неверно! ОГРН должен состоять только из цифр!" + Символы.ПС;
			Возврат Ложь;
		КонецЕсли;
		ОГРН12 = Число(Лев(Строка(ОГРН), 12));
		Если Прав(Формат(ОГРН12 % 11, "ЧН=0; ЧГ=0"), 1) <> Прав(ОГРН, 1) Тогда
			ТекстСообщенияОшибки = ТекстСообщенияОшибки + "Возможно, ОГРН " + ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("организации") + " указан неверно (контрольный разряд не совпадает с вычисленным)!" + Символы.ПС;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Истина;

КонецФункции // ОГРНСоответствуетТребованиям()

// Проверяет правильность заполнения КПП
//
// Возвращаемое значение:
//   Булево
//
Функция КППОрганизацииСоответствуетТребованиям(КПП, ТекстСообщенияОшибки) Экспорт
	
	Если НЕ ПустаяСтрока(КПП) И СтрДлина(КПП) <> 9 Тогда
		ТекстСообщенияОшибки = ТекстСообщенияОшибки +  "КПП " + ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("организации") + " задан неверно!" + Символы.ПС;
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;

КонецФункции // КППОрганизацииСоответствуетТребованиям()

Функция ВернутьСписокТиповСсылокДляФормированияФИО() Экспорт
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.ФизическиеЛица"));
	МассивТипов.Добавить(Тип("СправочникСсылка.СотрудникиОрганизаций"));
	
	Возврат Новый ОписаниеТипов(МассивТипов);
	
КонецФункции

Функция ВернутьСписокТиповОбъектовДляФормированияФИО() Экспорт
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникОбъект.ФизическиеЛица"));
	МассивТипов.Добавить(Тип("СправочникОбъект.СотрудникиОрганизаций"));
	
	Возврат Новый ОписаниеТипов(МассивТипов);
	
КонецФункции

///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ ЗАПОЛНЕНИЯ ГЛОБАЛЬНЫХ ПЕРЕМЕННЫХ

// Процедура инициализирует глобальную переменную УчетнаяПолитикаОтраженияЗарплатыВУчете.
//
// Параметры:
//  Нет.
//
Функция ЗаполнениеУчетнойПолитикиНалоговомуУчету() Экспорт
	
	УчетнаяПолитикаПоНалоговомуУчету = Новый Соответствие;
	
	Если ПравоДоступа("Чтение", Метаданные.Справочники.Организации) Тогда
	
		УчетнаяПолитикаПоНалоговомуУчетуСоответствие = Новый Соответствие;
		УчетнаяПолитикаПоНалоговомуУчетуСоответствие.Вставить(Справочники.Организации.ПустаяСсылка(),Новый Структура("УСН,ОбъектНалогообложенияУСН,ОрганизацияЯвляетсяПлательщикомЕНВД,УплачиватьДобровольныеВзносыВФСС,ВариантУчетаРасходовПоНалогамСФОТВНалоговомУчете, ТочностьИсчисленияЕСН, ТочностьИсчисленияПФР, ПорядокРасчетаВычетаФБ",Ложь,Перечисления.ОбъектыНалогообложенияПоУСН.ПустаяСсылка(),Ложь,Ложь,Перечисления.ВариантыУчетаРасходовПоНалогамСФОТВНалоговомУчете.ПустаяСсылка(),Перечисления.ПорядкиОкругленияЕСН.Точно,Перечисления.ПорядкиОкругленияЕСН.Точно, Перечисления.ПорядкиИсчисленияВычетаПоЕСН.ПоСуммеСтраховыхВзносов));
		УчетнаяПолитикаПоНалоговомуУчету.Вставить('00010101',УчетнаяПолитикаПоНалоговомуУчетуСоответствие);
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	МАКСИМУМ(ПериодыУчетнойПолитики.Период) КАК КонечныйПериод,
		|	МИНИМУМ(ПериодыУчетнойПолитики.Период) КАК НачальныйПериод
		|ИЗ
		|	(ВЫБРАТЬ
		|		УчетнаяПолитикаНалоговыйУчет.Период КАК Период
		|	ИЗ
		|		РегистрСведений.УчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНалоговыйУчет
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		УчетнаяПолитикаПоЕСН.Период
		|	ИЗ
		|		РегистрСведений.УчетнаяПолитикаПоЕСН КАК УчетнаяПолитикаПоЕСН) КАК ПериодыУчетнойПолитики";
		Выборка = Запрос.Выполнить().Выбрать();
		ПериодыТекст =
		"ВЫБРАТЬ
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК Период
		|ПОМЕСТИТЬ ВТПериоды";
		Если Выборка.Следующий() Тогда
			НачальныйПериод = Выборка.НачальныйПериод;
			КонечныйПериод = Выборка.КонечныйПериод;
			Если ЗначениеЗаполнено(НачальныйПериод) Тогда
				// конец месяца налогового периода
				КонецМесяца = КонецМесяца(НачальныйПериод);
				// первый месяц
				ПериодыТекст = "ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ")КАК Период ПОМЕСТИТЬ ВТПериоды";
				// прибавим остальные месяцы
				Пока КонецМесяца < КонечныйПериод Цикл
					КонецМесяца = КонецМесяца(КонецМесяца+1);
			    	ПериодыТекст = ПериодыТекст +" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ")";
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		Запрос.Текст = ПериодыТекст;
		Запрос.Выполнить();
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЕСТЬNULL(ВТПериоды.Период, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК Период,
		|	Организации.Ссылка КАК Организация,
		|	ЕСТЬNULL(УчетнаяПолитикаНалоговыйУчет.УСН, ЛОЖЬ) КАК УСН,
		|	ЕСТЬNULL(УчетнаяПолитикаНалоговыйУчет.ОрганизацияЯвляетсяПлательщикомЕНВД, ЛОЖЬ) КАК ОрганизацияЯвляетсяПлательщикомЕНВД,
		|	ЕСТЬNULL(УчетнаяПолитикаНалоговыйУчет.ОбъектНалогообложенияУСН, ЗНАЧЕНИЕ(Перечисление.ОбъектыНалогообложенияПоУСН.ПустаяСсылка)) КАК ОбъектНалогообложенияУСН,
		|	ЕСТЬNULL(УчетнаяПолитикаНалоговыйУчет.УплачиватьДобровольныеВзносыВФСС, ЛОЖЬ) КАК УплачиватьДобровольныеВзносыВФСС,
		|	ЕСТЬNULL(УчетнаяПолитикаНалоговыйУчет.ВариантУчетаРасходовПоНалогамСФОТВНалоговомУчете, ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаРасходовПоНалогамСФОТВНалоговомУчете.ПустаяСсылка)) КАК ВариантУчетаРасходовПоНалогамСФОТВНалоговомУчете,
		|	ЕСТЬNULL(УчетнаяПолитикаПоЕСН.ТочностьИсчисленияЕСН, ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияЕСН.Точно)) КАК ТочностьИсчисленияЕСН,
		|	ЕСТЬNULL(УчетнаяПолитикаПоЕСН.ТочностьИсчисленияПФР, ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияЕСН.Точно)) КАК ТочностьИсчисленияПФР,
		|	ЕСТЬNULL(УчетнаяПолитикаПоЕСН.ПорядокРасчетаВычетаФБ, ЗНАЧЕНИЕ(Перечисление.ПорядкиИсчисленияВычетаПоЕСН.ПоСуммеСтраховыхВзносов)) КАК ПорядокРасчетаВычетаФБ
		|ИЗ
		|	Справочник.Организации КАК Организации
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПериоды КАК ВТПериоды
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			УчетнаяПолитикаНалоговыйУчет.Организация КАК Организация,
		|			МАКСИМУМ(УчетнаяПолитикаНалоговыйУчет.Период) КАК ДатаРегистра,
		|			ВТПериоды.Период КАК Период
		|		ИЗ
		|			ВТПериоды КАК ВТПериоды
		|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНалоговыйУчет
		|				ПО ВТПериоды.Период >= УчетнаяПолитикаНалоговыйУчет.Период
		|		
		|		СГРУППИРОВАТЬ ПО
		|			УчетнаяПолитикаНалоговыйУчет.Организация,
		|			ВТПериоды.Период) КАК ДатыУстановленияУчПолитикиНалоговыйУчет
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНалоговыйУчет
		|			ПО ДатыУстановленияУчПолитикиНалоговыйУчет.Организация = УчетнаяПолитикаНалоговыйУчет.Организация
		|				И ДатыУстановленияУчПолитикиНалоговыйУчет.ДатаРегистра = УчетнаяПолитикаНалоговыйУчет.Период
		|		ПО (ВЫБОР
		|				КОГДА Организации.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|					ТОГДА Организации.Ссылка
		|				ИНАЧЕ Организации.ГоловнаяОрганизация
		|			КОНЕЦ = ДатыУстановленияУчПолитикиНалоговыйУчет.Организация)
		|			И (ВТПериоды.Период = ДатыУстановленияУчПолитикиНалоговыйУчет.Период)
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			УчетнаяПолитикаПоЕСН.Организация КАК Организация,
		|			МАКСИМУМ(УчетнаяПолитикаПоЕСН.Период) КАК ДатаРегистра,
		|			ВТПериоды.Период КАК Период
		|		ИЗ
		|			ВТПериоды КАК ВТПериоды
		|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаПоЕСН КАК УчетнаяПолитикаПоЕСН
		|				ПО ВТПериоды.Период >= УчетнаяПолитикаПоЕСН.Период
		|		
		|		СГРУППИРОВАТЬ ПО
		|			УчетнаяПолитикаПоЕСН.Организация,
		|			ВТПериоды.Период) КАК ДатыУстановленияУчПолитикиЕСН
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаПоЕСН КАК УчетнаяПолитикаПоЕСН
		|			ПО ДатыУстановленияУчПолитикиЕСН.Организация = УчетнаяПолитикаПоЕСН.Организация
		|				И ДатыУстановленияУчПолитикиЕСН.ДатаРегистра = УчетнаяПолитикаПоЕСН.Период
		|		ПО (ВЫБОР
		|				КОГДА Организации.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|					ТОГДА Организации.Ссылка
		|				ИНАЧЕ Организации.ГоловнаяОрганизация
		|			КОНЕЦ = ДатыУстановленияУчПолитикиЕСН.Организация)
		|			И (ВТПериоды.Период = ДатыУстановленияУчПолитикиЕСН.Период)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период,
		|	Организация";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.СледующийПоЗначениюПоля("Период") Цикл
							
			Пока Выборка.СледующийПоЗначениюПоля("Организация") Цикл
				Структура = Новый Структура("УСН,ОбъектНалогообложенияУСН,ОрганизацияЯвляетсяПлательщикомЕНВД,УплачиватьДобровольныеВзносыВФСС,ВариантУчетаРасходовПоНалогамСФОТВНалоговомУчете, ТочностьИсчисленияЕСН, ТочностьИсчисленияПФР, ПорядокРасчетаВычетаФБ");
				ЗаполнитьЗначенияСвойств(Структура,Выборка);
				УчетнаяПолитикаПоНалоговомуУчетуСоответствие.Вставить(Выборка.Организация,Структура);
			КонецЦикла;
			УчетнаяПолитикаПоНалоговомуУчету.Вставить(?(ЗначениеЗаполнено(Выборка.Период),КонецМесяца(Выборка.Период),Выборка.Период),УчетнаяПолитикаПоНалоговомуУчетуСоответствие);
			УчетнаяПолитикаПоНалоговомуУчетуСоответствие = Новый Соответствие;
			УчетнаяПолитикаПоНалоговомуУчетуСоответствие.Вставить(Справочники.Организации.ПустаяСсылка(),Новый Структура("УСН,ОбъектНалогообложенияУСН,ОрганизацияЯвляетсяПлательщикомЕНВД,УплачиватьДобровольныеВзносыВФСС,ВариантУчетаРасходовПоНалогамСФОТВНалоговомУчете, ТочностьИсчисленияЕСН, ТочностьИсчисленияПФР, ПорядокРасчетаВычетаФБ",Ложь,Перечисления.ОбъектыНалогообложенияПоУСН.ПустаяСсылка(),Ложь,Ложь,Перечисления.ВариантыУчетаРасходовПоНалогамСФОТВНалоговомУчете.ПустаяСсылка(), Перечисления.ПорядкиОкругленияЕСН.Точно, Перечисления.ПорядкиОкругленияЕСН.Точно, Перечисления.ПорядкиИсчисленияВычетаПоЕСН.ПоСуммеСтраховыхВзносов));
					
		КонецЦикла;
		
	Иначе 
		УчетнаяПолитикаПоНалоговомуУчетуСоответствие = Новый Соответствие;
		УчетнаяПолитикаПоНалоговомуУчетуСоответствие.Вставить("",Новый Структура("УСН,ОбъектНалогообложенияУСН,ОрганизацияЯвляетсяПлательщикомЕНВД,УплачиватьДобровольныеВзносыВФСС,ВариантУчетаРасходовПоНалогамСФОТВНалоговомУчете, ТочностьИсчисленияЕСН, ТочностьИсчисленияПФР, ПорядокРасчетаВычетаФБ",Ложь,Перечисления.ОбъектыНалогообложенияПоУСН.ПустаяСсылка(),Ложь,Ложь,Перечисления.ВариантыУчетаРасходовПоНалогамСФОТВНалоговомУчете.ПустаяСсылка(),Перечисления.ПорядкиОкругленияЕСН.Точно,Перечисления.ПорядкиОкругленияЕСН.Точно, Перечисления.ПорядкиИсчисленияВычетаПоЕСН.ПоСуммеСтраховыхВзносов));
		УчетнаяПолитикаПоНалоговомуУчету.Вставить('00010101',УчетнаяПолитикаПоНалоговомуУчетуСоответствие);
	КонецЕсли; 
    
	Возврат УчетнаяПолитикаПоНалоговомуУчету;
	
КонецФункции// ЗаполнениеУчетнойПолитикиНалоговомуУчету


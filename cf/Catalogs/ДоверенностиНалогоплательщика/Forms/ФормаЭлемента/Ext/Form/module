
Процедура ПриОткрытии()
	
	Если ЭтоНовый() И НЕ ЗначениеЗаполнено(ПараметрОбъектКопирования) Тогда
		ПризнакДоверителя = 1;
		ПредставительЯвляетсяЮЛ = Ложь;
		Наименование = "Доверенность";
	КонецЕсли;
	
	ДоверительРук_ФИО 		= ПолучитьПредставлениеФИО(Перечисления.СубъектыДоверенностиНалогоплательщика.ДоверительРук);
	ДоверительФЛ_ФИО 		= ПолучитьПредставлениеФИО(Перечисления.СубъектыДоверенностиНалогоплательщика.ДоверительФЛ);
	ПредставительФЛ_ФИО 	= ПолучитьПредставлениеФИО(Перечисления.СубъектыДоверенностиНалогоплательщика.ПредставительФЛ);
	НотариусФЛ_ФИО 			= ПолучитьПредставлениеФИО(Перечисления.СубъектыДоверенностиНалогоплательщика.НотариусФЛ);
	
	ДоверительЮЛ_Адрес  	= ПолучитьПредставлениеАдреса(Перечисления.СубъектыДоверенностиНалогоплательщика.ДоверительЮЛ);
	ДоверительФЛ_Адрес  	= ПолучитьПредставлениеАдреса(Перечисления.СубъектыДоверенностиНалогоплательщика.ДоверительФЛ);
	ПредставительЮЛ_Адрес 	= ПолучитьПредставлениеАдреса(Перечисления.СубъектыДоверенностиНалогоплательщика.ПредставительЮЛ);
	ПредставительФЛ_Адрес  	= ПолучитьПредставлениеАдреса(Перечисления.СубъектыДоверенностиНалогоплательщика.ПредставительФЛ);
	НотариусФЛ_Адрес  		= ПолучитьПредставлениеАдреса(Перечисления.СубъектыДоверенностиНалогоплательщика.НотариусФЛ);
	
	ДоверительФЛ_Удост  	= ПолучитьПредставлениеУдостоверение(Перечисления.СубъектыДоверенностиНалогоплательщика.ДоверительФЛ);
	ПредставительФЛ_Удост  	= ПолучитьПредставлениеУдостоверение(Перечисления.СубъектыДоверенностиНалогоплательщика.ПредставительФЛ);
	
	////временное ограничение
	//ЭлементыФормы.ПредставительЯвляетсяЮЛ.Доступность = Ложь;
	
	УправлениеЭУ();
	
	ЭлементыФормы.ПолномочияПредставителя.Колонки.КПП.Видимость = НЕ РегламентированнаяОтчетность.ЭтоПБОЮЛ(Владелец);
	
КонецПроцедуры

Процедура УправлениеЭУ()
	Свернуто = РежимСверткиЭлементаУправления.Право;
	Развернуто = РежимСверткиЭлементаУправления.Нет;
	
	//панель данных
	ПанельДанные = ЭлементыФормы.ПанельДанные;
	СтраницаДанныеДоверителя = ПанельДанные.Страницы.Получить(1);
	СтраницаДанныеНотариуса = ПанельДанные.Страницы.Получить(2);
	
	Если ПризнакДоверителя = 1 Тогда
		СтраницаДанныеДоверителя.Видимость = Ложь;
	Иначе
		СтраницаДанныеДоверителя.Видимость = Истина;
	КонецЕсли;
	Если ПризнакДоверителя = 2 Тогда
		Если ДоверительЯвляетсяЮЛ = Истина Тогда
			ДоверительЯвляетсяЮЛ = Ложь;
		КонецЕсли;
		ЭлементыФормы.ДоверительЯвляетсяЮЛ.Доступность = Ложь;
	Иначе		
		ЭлементыФормы.ДоверительЯвляетсяЮЛ.Доступность = Истина;
	КонецЕсли;
	
	СтраницаДанныеНотариуса.Видимость = ЗаверенаНотариально;
	
	// панель представитель
	ПанельПредставительЮФ = ЭлементыФормы.ПанельПредставительЮФ;
	СтраницаПредставительЮЛ = ПанельПредставительЮФ.Страницы.Получить(0);
	СтраницаПредставительФЛ = ПанельПредставительЮФ.Страницы.Получить(1);
	
	ПанельПредставительУЛ = ЭлементыФормы.ПанельПредставительУЛ;
	
	Если ПредставительЯвляетсяЮЛ Тогда
		ПанельПредставительЮФ.ТекущаяСтраница = СтраницаПредставительЮЛ;
		ПанельПредставительУЛ.Свертка = Развернуто; 
	Иначе
		ПанельПредставительЮФ.ТекущаяСтраница = СтраницаПредставительФЛ;
		ПанельПредставительУЛ.Свертка = Свернуто;
	КонецЕсли;
	ЭлементыФормы.ПредставительЯвляетсяСотрудником.Видимость = НЕ ПредставительЯвляетсяЮЛ;
	
	ЭлементыФормы.НадписьПредставительФЛ_ОГРН.Видимость = НЕ ПредставительЯвляетсяСотрудником;
	ЭлементыФормы.ПредставительФЛ_ОГРН.Видимость = НЕ ПредставительЯвляетсяСотрудником;
	
	// панель доверитель
	ПанельДоверительЮФ = ЭлементыФормы.ПанельДоверительЮФ;
	СтраницаДоверительЮЛ = ПанельДоверительЮФ.Страницы.Получить(0);
	СтраницаДоверительФЛ = ПанельДоверительЮФ.Страницы.Получить(1);
	
	ПанельДоверительУЛ = ЭлементыФормы.ПанельДоверительУЛ;
	
	ЭлементыФормы.ДоверительИмеетУЛ.Видимость = ДоверительЯвляетсяЮЛ;
	Если ДоверительЯвляетсяЮЛ Тогда
		ПанельДоверительЮФ.ТекущаяСтраница = СтраницаДоверительЮЛ;
		Если ДоверительИмеетУЛ  Тогда
			ПанельДоверительУЛ.Свертка = Развернуто; 
		Иначе
			ПанельДоверительУЛ.Свертка = Свернуто;
		КонецЕсли;
	Иначе
		ПанельДоверительЮФ.ТекущаяСтраница = СтраницаДоверительФЛ;
		ПанельДоверительУЛ.Свертка = Свернуто;
	КонецЕсли;
	
	// панель нотариус
	ПанельНотариусЮФ = ЭлементыФормы.ПанельНотариусЮФ;
	СтраницаНотариусЮЛ = ПанельНотариусЮФ.Страницы.Получить(0);
	СтраницаНотариусФЛ = ПанельНотариусЮФ.Страницы.Получить(1);
	
	ПанельНотариусУЛ = ЭлементыФормы.ПанельНотариусУЛ;
	
	Если НотариусЯвляетсяЮЛ Тогда
		ПанельНотариусЮФ.ТекущаяСтраница = СтраницаНотариусЮЛ;
		ПанельНотариусУЛ.Свертка = Развернуто; 
	Иначе
		ПанельНотариусЮФ.ТекущаяСтраница = СтраницаНотариусФЛ;
		ПанельНотариусУЛ.Свертка = Свернуто;
	КонецЕсли;
	
КонецПроцедуры

Функция ДобавитьРеквизит(Текст, ДобСтрока, Префикс)
	
	Если ЗначениеЗаполнено(ДобСтрока) Тогда
		Текст = Текст + Префикс + ДобСтрока;
	КонецЕсли;
	
	Возврат Текст;
	
КонецФункции

Функция ПолучитьПредставлениеФИО(СубъектДоверенности)
	Представление = "";
	СтрокаФИО = ФИО.Найти(СубъектДоверенности, "Владелец");
	Если СтрокаФИО <> Неопределено Тогда
		ДобавитьРеквизит(Представление, СтрокаФИО.Фамилия, "");
		ДобавитьРеквизит(Представление, СтрокаФИО.Имя, " ");
		ДобавитьРеквизит(Представление, СтрокаФИО.Отчество, " ");
	КонецЕсли;
	Возврат Представление;
КонецФункции

Функция ПолучитьПредставлениеАдреса(СубъектДоверенности)
	Представление = "";
	СтрокаАдреса = Адреса.Найти(СубъектДоверенности, "Владелец");
	Если СтрокаАдреса <> Неопределено Тогда
		Представление = СтрокаАдреса.Индекс + ", "
		+ СтрокаАдреса.КодРегион + ", "
		+ СтрокаАдреса.Район + ", "
		+ СтрокаАдреса.Город + ", "
		+ СтрокаАдреса.НаселПункт + ", "
		+ СтрокаАдреса.Улица + ", "
		+ СтрокаАдреса.Дом + ", "
		+ СтрокаАдреса.Корпус + ", "
		+ СтрокаАдреса.Кварт;
	КонецЕсли;
	Возврат Представление;
КонецФункции

Функция ПолучитьПредставлениеУдостоверение(СубъектДоверенности)
	Представление = "";
	СтрокаУдостоверения = УдЛичности.Найти(СубъектДоверенности, "Владелец");
	Если СтрокаУдостоверения <> Неопределено Тогда
		ДобавитьРеквизит(Представление, СтрокаУдостоверения.ВидДок, 					"");
		ДобавитьРеквизит(Представление, СтрокаУдостоверения.СерДок, 					" ");
		ДобавитьРеквизит(Представление, СтрокаУдостоверения.НомДок, 					" №");
		ДобавитьРеквизит(Представление, Формат(СтрокаУдостоверения.ДатаДок, "ДЛФ=DD"), 	" выдан ");
		ДобавитьРеквизит(Представление, СтрокаУдостоверения.ВыдДок, 					" ");
		ДобавитьРеквизит(Представление, СтрокаУдостоверения.КодВыдДок, 					", код подразделения:");
	КонецЕсли;
	Возврат Представление;
КонецФункции

Функция ИзменитьАдрес(СубъектДоверенности)
	ФормаВводаАдреса = РегламентированнаяОтчетность.роПолучитьОбщуюФорму("ВводРоссийскогоАдреса");
	СтруктураАдресныхДанных = Новый Структура;
	
	//заполнение структуры начальных значений
	СтрокаАдреса = Адреса.Найти(СубъектДоверенности, "Владелец");
	Если СтрокаАдреса = Неопределено Тогда
		СтрокаАдреса = Адреса.Добавить();
		СтрокаАдреса.Владелец = СубъектДоверенности;
	КонецЕсли;
	
	СтруктураАдресныхДанных.Вставить("Индекс", 			СтрокаАдреса.Индекс); // индекс
	СтруктураАдресныхДанных.Вставить("Регион", 			СтрокаАдреса.КодРегион); // код
	СтруктураАдресныхДанных.Вставить("Район", 			СтрокаАдреса.Район);
	СтруктураАдресныхДанных.Вставить("Город", 			СтрокаАдреса.Город);
	СтруктураАдресныхДанных.Вставить("НаселенныйПункт", СтрокаАдреса.НаселПункт);
	СтруктураАдресныхДанных.Вставить("Улица", 			СтрокаАдреса.Улица);
	СтруктураАдресныхДанных.Вставить("Дом", 			СтрокаАдреса.Дом);
	СтруктураАдресныхДанных.Вставить("Корпус", 			СтрокаАдреса.Корпус);
	СтруктураАдресныхДанных.Вставить("Квартира", 		СтрокаАдреса.Кварт);
	
	ФормаВводаАдреса.НачальноеЗначениеВыбора = СтруктураАдресныхДанных;
	
	Если ФормаВводаАдреса.ОткрытьМодально() Тогда
		
		Результат = ФормаВводаАдреса.НачальноеЗначениеВыбора;
		
		СтрокаАдреса.Индекс = Результат.Индекс;
		СтрокаАдреса.КодРегион = Результат.Регион;
		СтрокаАдреса.Район = Результат.Район;
		СтрокаАдреса.Город = Результат.Город;
		СтрокаАдреса.НаселПункт = Результат.НаселенныйПункт;
		СтрокаАдреса.Улица = Результат.Улица;
		СтрокаАдреса.Дом = Результат.Дом;
		СтрокаАдреса.Корпус = Результат.Корпус;
		СтрокаАдреса.Кварт = Результат.Квартира;
		
		Модифицированность = Истина;
		
		Возврат ПолучитьПредставлениеАдреса(СубъектДоверенности);
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

Функция ИзменитьФИО(СубъектДоверенности)
	ФормаВводаФИО = РегламентированнаяОтчетность.роПолучитьОбщуюФорму("ФормаВводаФИО");
	
	СтруктураДанныхФИО = Новый Структура;
	
	//заполнение структуры начальных значений
	СтрокаФИО = ФИО.Найти(СубъектДоверенности, "Владелец");
	Если СтрокаФИО = Неопределено Тогда
		СтрокаФИО = ФИО.Добавить();
		СтрокаФИО.Владелец = СубъектДоверенности;
	КонецЕсли;
	
	СтруктураДанныхФИО.Вставить("Фамилия",  СтрокаФИО.Фамилия);
	СтруктураДанныхФИО.Вставить("Имя",      СтрокаФИО.Имя);
	СтруктураДанныхФИО.Вставить("Отчество", СтрокаФИО.Отчество);
	
	ФормаВводаФИО.НачальноеЗначениеВыбора = СтруктураДанныхФИО;
	
	Если ФормаВводаФИО.ОткрытьМодально() Тогда
		Результат = ФормаВводаФИО.НачальноеЗначениеВыбора;
		СтрокаФИО.Фамилия 	= Результат.Фамилия;
		СтрокаФИО.Имя 		= Результат.Имя;
		СтрокаФИО.Отчество 	= Результат.Отчество;
		
		Модифицированность = Истина;
		
		Возврат ПолучитьПредставлениеФИО(СубъектДоверенности);
	Иначе
		
		Возврат Неопределено;
		
	КонецЕсли;
КонецФункции

Функция ИзменитьУдостоверение(СубъектДоверенности)
	ФормаВводаУдостоверения = ПолучитьФорму("ФормаВводаУдостоверения");
	СтруктураДанных = Новый Структура;
	
	//заполнение структуры начальных значений
	СтрокаУдостоверения = УдЛичности.Найти(СубъектДоверенности, "Владелец");
	Если СтрокаУдостоверения = Неопределено Тогда
		СтрокаУдостоверения = УдЛичности.Добавить();
		СтрокаУдостоверения.Владелец = СубъектДоверенности;
	КонецЕсли;
	
	СтруктураДанных.Вставить("ДокументВид", 				СтрокаУдостоверения.ВидДок); 
	СтруктураДанных.Вставить("ДокументСерия", 				СтрокаУдостоверения.СерДок); 
	СтруктураДанных.Вставить("ДокументНомер", 				СтрокаУдостоверения.НомДок);
	СтруктураДанных.Вставить("ДокументДатаВыдачи", 			СтрокаУдостоверения.ДатаДок);
	СтруктураДанных.Вставить("ДокументКемВыдан",			СтрокаУдостоверения.ВыдДок);
	СтруктураДанных.Вставить("ДокументКодПодразделения", 	СтрокаУдостоверения.КодВыдДок);
	
	ФормаВводаУдостоверения.СтруктураДанных = СтруктураДанных;
	
	Результат = ФормаВводаУдостоверения.ОткрытьМодально();
	
	Если Результат <> Неопределено Тогда
		
		СтрокаУдостоверения.ВидДок = Результат.ДокументВид;
		СтрокаУдостоверения.СерДок = Результат.ДокументСерия;
		СтрокаУдостоверения.НомДок = Результат.ДокументНомер;
		СтрокаУдостоверения.ДатаДок = Результат.ДокументДатаВыдачи;
		СтрокаУдостоверения.ВыдДок = Результат.ДокументКемВыдан;
		СтрокаУдостоверения.КодВыдДок = Результат.ДокументКодПодразделения;
		
		Модифицированность = Истина;
		
		Возврат ПолучитьПредставлениеУдостоверение(СубъектДоверенности);
	Иначе
		
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

Процедура ОчиститьАдрес(СубъектДоверенности)
	СтрокаАдреса = Адреса.Найти(СубъектДоверенности, "Владелец");
	Если СтрокаАдреса <> Неопределено Тогда
		СтрокаАдреса.Индекс 	= "";
		СтрокаАдреса.КодРегион 	= "";
		СтрокаАдреса.Район 		= "";
		СтрокаАдреса.Город 		= "";
		СтрокаАдреса.НаселПункт = "";
		СтрокаАдреса.Улица 		= "";
		СтрокаАдреса.Дом 		= "";
		СтрокаАдреса.Корпус 	= "";
		СтрокаАдреса.Кварт 		= "";
	КонецЕсли;
КонецПроцедуры

Процедура ОчиститьФИО(СубъектДоверенности)
	СтрокаФИО = ФИО.Найти(СубъектДоверенности, "Владелец");
	Если СтрокаФИО <> Неопределено Тогда
		СтрокаФИО.Фамилия 	= "";
		СтрокаФИО.Имя 		= "";
		СтрокаФИО.Отчество 	= "";
	КонецЕсли;
КонецПроцедуры

Процедура ОчиститьУдостоверение(СубъектДоверенности)
	СтрокаУдостоверения = УдЛичности.Найти(СубъектДоверенности, "Владелец");
	Если СтрокаУдостоверения <> Неопределено Тогда
		СтрокаУдостоверения.ВидДок 		= Справочники.ДокументыУдостоверяющиеЛичность.ПустаяСсылка();
		СтрокаУдостоверения.СерДок 		= "";
		СтрокаУдостоверения.НомДок 		= "";
		СтрокаУдостоверения.ДатаДок 	= '00010101';
		СтрокаУдостоверения.ВыдДок 		= "";
		СтрокаУдостоверения.КодВыдДок 	= "";
	КонецЕсли;
КонецПроцедуры

//////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура ПредставительЯвляетсяЮЛПриИзменении(Элемент)
	УправлениеЭУ();
КонецПроцедуры

Процедура ДоверительЯвляетсяЮЛПриИзменении(Элемент)
	УправлениеЭУ();
КонецПроцедуры

Процедура ДоверительИмеетУЛПриИзменении(Элемент)
	УправлениеЭУ();
КонецПроцедуры

Процедура НотариусЯвляетсяЮЛПриИзменении(Элемент)
	УправлениеЭУ();
КонецПроцедуры

Процедура ПризнакДоверителяПриИзменении(Элемент)
	УправлениеЭУ();
КонецПроцедуры

Процедура ЗаверенаНотариальноПриИзменении(Элемент)
	УправлениеЭУ();
КонецПроцедуры

Процедура ПредставительЯвляетсяСотрудникомПриИзменении(Элемент)
	УправлениеЭУ();
КонецПроцедуры

//редактирование адреса
Процедура ПредставительЮЛАдресНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Результат = ИзменитьАдрес(Перечисления.СубъектыДоверенностиНалогоплательщика.ПредставительЮЛ);
	Если Результат <> Неопределено Тогда
		Элемент.Значение = Результат;
	КонецЕсли;
КонецПроцедуры

Процедура ПредставительФЛ_АдресНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Результат = ИзменитьАдрес(Перечисления.СубъектыДоверенностиНалогоплательщика.ПредставительФЛ);
	Если Результат <> Неопределено Тогда
		Элемент.Значение = Результат;
	КонецЕсли;
КонецПроцедуры

Процедура ПредставительУЛ_АдресНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Результат = ИзменитьАдрес(Перечисления.СубъектыДоверенностиНалогоплательщика.ПредставительФЛ);
	Если Результат <> Неопределено Тогда
		Элемент.Значение = Результат;
	КонецЕсли;
КонецПроцедуры

Процедура ДоверительЮЛАдресНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Результат = ИзменитьАдрес(Перечисления.СубъектыДоверенностиНалогоплательщика.ДоверительЮЛ);
	Если Результат <> Неопределено Тогда
		Элемент.Значение = Результат;
	КонецЕсли;
КонецПроцедуры

Процедура ДоверительФЛ_АдресНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Результат = ИзменитьАдрес(Перечисления.СубъектыДоверенностиНалогоплательщика.ДоверительФЛ);
	Если Результат <> Неопределено Тогда
		Элемент.Значение = Результат;
	КонецЕсли;
КонецПроцедуры

Процедура ДоверительУЛ_АдресНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Результат = ИзменитьАдрес(Перечисления.СубъектыДоверенностиНалогоплательщика.ДоверительФЛ);
	Если Результат <> Неопределено Тогда
		Элемент.Значение = Результат;
	КонецЕсли;
КонецПроцедуры

Процедура НотариусФЛ_АдресНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Результат = ИзменитьАдрес(Перечисления.СубъектыДоверенностиНалогоплательщика.НотариусФЛ);
	Если Результат <> Неопределено Тогда
		Элемент.Значение = Результат;
	КонецЕсли;
КонецПроцедуры

Процедура НотариусУЛ_АдресНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Результат = ИзменитьАдрес(Перечисления.СубъектыДоверенностиНалогоплательщика.НотариусФЛ);
	Если Результат <> Неопределено Тогда
		Элемент.Значение = Результат;
	КонецЕсли;
КонецПроцедуры

//очистка адреса
Процедура ПредставительЮЛАдресОчистка(Элемент, СтандартнаяОбработка)
	ОчиститьАдрес(Перечисления.СубъектыДоверенностиНалогоплательщика.ПредставительЮЛ);
КонецПроцедуры

Процедура ПредставительФЛ_АдресОчистка(Элемент, СтандартнаяОбработка)
	ОчиститьАдрес(Перечисления.СубъектыДоверенностиНалогоплательщика.ПредставительФЛ);
КонецПроцедуры

Процедура ПредставительУЛ_АдресОчистка(Элемент, СтандартнаяОбработка)
	ОчиститьАдрес(Перечисления.СубъектыДоверенностиНалогоплательщика.ПредставительФЛ);
КонецПроцедуры

Процедура ДоверительЮЛАдресОчистка(Элемент, СтандартнаяОбработка)
	ОчиститьАдрес(Перечисления.СубъектыДоверенностиНалогоплательщика.ДоверительЮЛ);
КонецПроцедуры

Процедура ДоверительФЛ_АдресОчистка(Элемент, СтандартнаяОбработка)
	ОчиститьАдрес(Перечисления.СубъектыДоверенностиНалогоплательщика.ДоверительФЛ);
КонецПроцедуры

Процедура ДоверительУЛ_АдресОчистка(Элемент, СтандартнаяОбработка)
	ОчиститьАдрес(Перечисления.СубъектыДоверенностиНалогоплательщика.ДоверительФЛ);
КонецПроцедуры

Процедура НотариусФЛ_АдресОчистка(Элемент, СтандартнаяОбработка)
	ОчиститьАдрес(Перечисления.СубъектыДоверенностиНалогоплательщика.НотариусФЛ);
КонецПроцедуры

Процедура НотариусУЛ_АдресОчистка(Элемент, СтандартнаяОбработка)
	ОчиститьАдрес(Перечисления.СубъектыДоверенностиНалогоплательщика.НотариусФЛ);
КонецПроцедуры

//редактирование ФИО
Процедура ПредставительФЛ_ФИОНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Результат = ИзменитьФИО(Перечисления.СубъектыДоверенностиНалогоплательщика.ПредставительФЛ);
	Если Результат <> Неопределено Тогда
		Элемент.Значение = Результат;
	КонецЕсли;
КонецПроцедуры

Процедура ПредставительУЛ_ФИОНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Результат = ИзменитьФИО(Перечисления.СубъектыДоверенностиНалогоплательщика.ПредставительФЛ);
	Если Результат <> Неопределено Тогда
		Элемент.Значение = Результат;
	КонецЕсли;
КонецПроцедуры

Процедура ДоверительРук_ФИОНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Результат = ИзменитьФИО(Перечисления.СубъектыДоверенностиНалогоплательщика.ДоверительРук);
	Если Результат <> Неопределено Тогда
		Элемент.Значение = Результат;
	КонецЕсли;
КонецПроцедуры

Процедура ДоверительФЛ_ФИОНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Результат = ИзменитьФИО(Перечисления.СубъектыДоверенностиНалогоплательщика.ДоверительФЛ);
	Если Результат <> Неопределено Тогда
		Элемент.Значение = Результат;
	КонецЕсли;
КонецПроцедуры

Процедура ДоверительУЛ_ФИОНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Результат = ИзменитьФИО(Перечисления.СубъектыДоверенностиНалогоплательщика.ДоверительФЛ);
	Если Результат <> Неопределено Тогда
		Элемент.Значение = Результат;
	КонецЕсли;
КонецПроцедуры

Процедура НотариусФЛ_ФИОНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Результат = ИзменитьФИО(Перечисления.СубъектыДоверенностиНалогоплательщика.НотариусФЛ);
	Если Результат <> Неопределено Тогда
		Элемент.Значение = Результат;
	КонецЕсли;
КонецПроцедуры

Процедура НотариусУЛ_ФИОНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Результат = ИзменитьФИО(Перечисления.СубъектыДоверенностиНалогоплательщика.НотариусФЛ);
	Если Результат <> Неопределено Тогда
		Элемент.Значение = Результат;
	КонецЕсли;
КонецПроцедуры

//очистка ФИО
Процедура ПредставительФЛ_ФИООчистка(Элемент, СтандартнаяОбработка)
	ОчиститьФИО(Перечисления.СубъектыДоверенностиНалогоплательщика.ПредставительФЛ);
КонецПроцедуры

Процедура ПредставительУЛ_ФИООчистка(Элемент, СтандартнаяОбработка)
	ОчиститьФИО(Перечисления.СубъектыДоверенностиНалогоплательщика.ПредставительФЛ);
КонецПроцедуры

Процедура ДоверительРук_ФИООчистка(Элемент, СтандартнаяОбработка)
	ОчиститьФИО(Перечисления.СубъектыДоверенностиНалогоплательщика.ДоверительРук);
КонецПроцедуры

Процедура ДоверительФЛ_ФИООчистка(Элемент, СтандартнаяОбработка)
	ОчиститьФИО(Перечисления.СубъектыДоверенностиНалогоплательщика.ДоверительФЛ);
КонецПроцедуры

Процедура ДоверительУЛ_ФИООчистка(Элемент, СтандартнаяОбработка)
	ОчиститьФИО(Перечисления.СубъектыДоверенностиНалогоплательщика.ДоверительФЛ);
КонецПроцедуры

Процедура НотариусФЛ_ФИООчистка(Элемент, СтандартнаяОбработка)
	ОчиститьФИО(Перечисления.СубъектыДоверенностиНалогоплательщика.НотариусФЛ);
КонецПроцедуры

Процедура НотариусУЛ_ФИООчистка(Элемент, СтандартнаяОбработка)
	ОчиститьФИО(Перечисления.СубъектыДоверенностиНалогоплательщика.НотариусФЛ);
КонецПроцедуры

//редактирование удостоверения
Процедура ПредставительФЛ_УдостНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Результат = ИзменитьУдостоверение(Перечисления.СубъектыДоверенностиНалогоплательщика.ПредставительФЛ);
	Если Результат <> Неопределено Тогда
		Элемент.Значение = Результат;
	КонецЕсли;
КонецПроцедуры

Процедура ПредставительУЛ_УдостНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Результат = ИзменитьУдостоверение(Перечисления.СубъектыДоверенностиНалогоплательщика.ПредставительФЛ);
	Если Результат <> Неопределено Тогда
		Элемент.Значение = Результат;
	КонецЕсли;
КонецПроцедуры

Процедура ДоверительФЛ_УдостНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Результат = ИзменитьУдостоверение(Перечисления.СубъектыДоверенностиНалогоплательщика.ДоверительФЛ);
	Если Результат <> Неопределено Тогда
		Элемент.Значение = Результат;
	КонецЕсли;
КонецПроцедуры

Процедура ДоверительУЛ_УдостНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Результат = ИзменитьУдостоверение(Перечисления.СубъектыДоверенностиНалогоплательщика.ДоверительФЛ);
	Если Результат <> Неопределено Тогда
		Элемент.Значение = Результат;
	КонецЕсли;
КонецПроцедуры

//очистка удостоверения
Процедура ПредставительФЛ_УдостОчистка(Элемент, СтандартнаяОбработка)
	ОчиститьУдостоверение(Перечисления.СубъектыДоверенностиНалогоплательщика.ПредставительФЛ);
КонецПроцедуры

Процедура ПредставительУЛ_УдостОчистка(Элемент, СтандартнаяОбработка)
	ОчиститьУдостоверение(Перечисления.СубъектыДоверенностиНалогоплательщика.ПредставительФЛ);
КонецПроцедуры

Процедура ДоверительФЛ_УдостОчистка(Элемент, СтандартнаяОбработка)
	ОчиститьУдостоверение(Перечисления.СубъектыДоверенностиНалогоплательщика.ДоверительФЛ);
КонецПроцедуры

Процедура ДоверительУЛ_УдостОчистка(Элемент, СтандартнаяОбработка)
	ОчиститьУдостоверение(Перечисления.СубъектыДоверенностиНалогоплательщика.ДоверительФЛ);
КонецПроцедуры


Процедура ПолномочияПредставителяПередНачаломИзменения(Элемент, Отказ)
	Отказ = Истина;
	ФормаВводаПолномочий = ПолучитьФорму("ФормаВводаПолномочий");
	ФормаВводаПолномочий.СтруктураДанных = Элемент.ТекущиеДанные;
	ФормаВводаПолномочий.ОтображатьКПП = НЕ РегламентированнаяОтчетность.ЭтоПБОЮЛ(Владелец);
	ФормаВводаПолномочий.ОткрытьМодально();
КонецПроцедуры

Процедура ПолномочияПредставителяПередНачаломДобавления(Элемент, Отказ, Копирование)
	Отказ = Истина;
	НоваяСтрока = Элемент.Значение.Добавить();
	Элемент.ТекущаяСтрока = НоваяСтрока;
	ФормаВводаПолномочий = ПолучитьФорму("ФормаВводаПолномочий");
	ФормаВводаПолномочий.СтруктураДанных = Элемент.ТекущиеДанные;
	ФормаВводаПолномочий.ОтображатьКПП = НЕ РегламентированнаяОтчетность.ЭтоПБОЮЛ(Владелец);
	Результат = ФормаВводаПолномочий.ОткрытьМодально();
	Если Результат = Неопределено Тогда
		Элемент.Значение.Удалить(НоваяСтрока);
	КонецЕсли
КонецПроцедуры

Процедура ОрганизацияПриИзменении(Элемент)
	ЭлементыФормы.ПолномочияПредставителя.Колонки.КПП.Видимость = НЕ РегламентированнаяОтчетность.ЭтоПБОЮЛ(Владелец);
КонецПроцедуры

Процедура ОрганизацияОчистка(Элемент, СтандартнаяОбработка)
	ЭлементыФормы.ПолномочияПредставителя.Колонки.КПП.Видимость = НЕ РегламентированнаяОтчетность.ЭтоПБОЮЛ(Владелец);
КонецПроцедуры

Процедура ПолномочияПредставителяПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если ДанныеСтроки.ПризнакПолныеПолномочия Тогда
		стрОбластьПолномочий = "Полные полномочия";
	Иначе
		стрОбластьПолномочий = "";
		Для НомерПризнака = 1 По 19 Цикл
			стрНомер = Формат(НомерПризнака, "ЧЦ=2; ЧВН=");
			ИмяПризнака = "Признак" + стрНомер;
			ПризнакОтмечен = ДанныеСтроки[ИмяПризнака];
			Если ПризнакОтмечен Тогда
				стрОбластьПолномочий = стрОбластьПолномочий + ?(стрОбластьПолномочий = "", "", ", ") + стрНомер;	
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ОформлениеСтроки.Ячейки.ОбластьПолномочий.Текст = стрОбластьПолномочий;	
	ОформлениеСтроки.Ячейки.ОбластьПолномочий.ОтображатьТекст = Истина;
КонецПроцедуры




СписокПризнакДоверителя = ЭлементыФормы.ПризнакДоверителя.СписокВыбора;
СписокПризнакДоверителя.Добавить(1, "Представляемое лицо");
СписокПризнакДоверителя.Добавить(2, "Законный представитель");
СписокПризнакДоверителя.Добавить(3, "Уполномоченный представитель");

СписокЮФ = Новый СписокЗначений;
СписокЮФ.Добавить(Истина, "Юр. лицо");
СписокЮФ.Добавить(Ложь, "Физ. лицо");

ЭлементыФормы.ПредставительЯвляетсяЮЛ.СписокВыбора 	= СписокЮФ;
ЭлементыФормы.ДоверительЯвляетсяЮЛ.СписокВыбора 		= СписокЮФ;
ЭлементыФормы.НотариусЯвляетсяЮЛ.СписокВыбора 		= СписокЮФ;

Перем ВыбранныеОтчеты;

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                      |	Количество(РегламентированныеОтчеты.Ссылка)
	                      |ИЗ
	                      |	Справочник.РегламентированныеОтчеты КАК РегламентированныеОтчеты
	                      |ГДЕ
	                      |	РегламентированныеОтчеты.НеПоказыватьВСписке = &БулевоИстина
	                      |	И РегламентированныеОтчеты.ЭтоГруппа = &БулевоЛожь");
	Запрос.УстановитьПараметр("БулевоИстина", Истина);
	Запрос.УстановитьПараметр("БулевоЛожь", Ложь);
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.Прямой);
	Выборка.Следующий();
	Если Выборка.Получить(0) = 0 ИЛИ Выборка.Получить(0) = NULL Тогда
		Предупреждение("Отсутствуют элементы для восстановления!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	РегламентированныеОтчеты.Отбор.НеПоказыватьВСписке.Значение       = Истина;
	РегламентированныеОтчеты.Отбор.НеПоказыватьВСписке.Использование  = Истина;
	
	Для Каждого Стр Из ЭлементыФормы.РегламентированныеОтчеты.НастройкаОтбора Цикл
		Стр.Доступность = Ложь;
	КонецЦикла;
	
	ВыбранныеОтчеты = Новый СписокЗначений;
	
КонецПроцедуры

Процедура РегламентированныеОтчетыПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		Если ОформлениеСтроки.ДанныеСтроки = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		ТекСсылка = ОформлениеСтроки.ДанныеСтроки.Ссылка;
		ОформлениеСтроки.Ячейки.Пометка.ОтображатьФлажок = (ЗначениеЗаполнено(ТекСсылка)) И (НЕ ТекСсылка.ЭтоГруппа);
		ОформлениеСтроки.Ячейки.Пометка.Флажок = (ВыбранныеОтчеты.НайтиПоЗначению(ТекСсылка) <> Неопределено);
	КонецЦикла;
	
КонецПроцедуры

Процедура РегламентированныеОтчетыПриИзмененииФлажка(Элемент, Колонка)
	
	Если Колонка.Имя = "Пометка" Тогда
		Если Элемент.ТекущаяСтрока = Неопределено Тогда
			Возврат;
		КонецЕсли;
		Если Элемент.ТекущиеДанные = Неопределено ИЛИ Элемент.ТекущиеДанные.Ссылка.ЭтоГруппа Тогда
			Возврат;
		КонецЕсли;
		Если ВыбранныеОтчеты.НайтиПоЗначению(Элемент.ТекущиеДанные.Ссылка) = Неопределено Тогда
			ВыбранныеОтчеты.Добавить(Элемент.ТекущиеДанные.Ссылка);
		Иначе
			ВыбранныеОтчеты.Удалить(ВыбранныеОтчеты.НайтиПоЗначению(Элемент.ТекущиеДанные.Ссылка));
		КонецЕсли;
		Элемент.ОбновитьСтроки(Элемент.ТекущаяСтрока);
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельРегламентированныйОтчетыУстановитьФлажки(Кнопка)
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                      |	РегламентированныеОтчеты.Ссылка
	                      |ИЗ
	                      |	Справочник.РегламентированныеОтчеты КАК РегламентированныеОтчеты
	                      |ГДЕ
	                      |	РегламентированныеОтчеты.НеПоказыватьВСписке = &БулевоИстина
	                      |	И РегламентированныеОтчеты.ЭтоГруппа = &БулевоЛожь");
	Запрос.УстановитьПараметр("БулевоИстина", Истина);
	Запрос.УстановитьПараметр("БулевоЛожь", Ложь);
	ВыбранныеОтчеты.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.Прямой).ВыгрузитьКолонку("Ссылка"));
	ЭлементыФормы.РегламентированныеОтчеты.ОбновитьСтроки();
	
КонецПроцедуры

Процедура КоманднаяПанельРегламентированныйОтчетыСнятьФлажки(Кнопка)
	
	ВыбранныеОтчеты.Очистить();
	ЭлементыФормы.РегламентированныеОтчеты.ОбновитьСтроки();
	
КонецПроцедуры

Процедура ОсновныеДействияФормыОК(Кнопка)
	
	НачатьТранзакцию();
	Для Каждого Эл Из ВыбранныеОтчеты Цикл
		
		Попытка
			СпрОбъект = Эл.Значение.ПолучитьОбъект();
			СпрОбъект.Заблокировать();
			СпрОбъект.НеПоказыватьВСписке = Ложь;
			СпрОбъект.Записать();
			СпрОбъект.Разблокировать();
		Исключение
			Предупреждение("Не удалось записать элемент справочника:
			|" + ОписаниеОшибки());
		КонецПопытки;
	КонецЦикла;
	ЗафиксироватьТранзакцию();
	Закрыть();
	
КонецПроцедуры

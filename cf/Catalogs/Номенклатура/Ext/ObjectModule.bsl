// Функция проверяет, существуют ли ссылки номенклатуру в движениях регистров накопления.
// Если есть - нельзя менять признак "Услуга"
//
// Параметры:
//  СуществуютСсылки - булево, переменная, в которой сохраняется результат работы функции, чтобы
//                     при последующих вызовах заново не считать функцию.
//
// Возвращаемое значение:
//  Истина - если есть движения, Ложь - если нет.
//
Функция СуществуютСсылки()

	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Номенклатура", Ссылка);
	Запрос.УстановитьПараметр("ВидСубконто", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ХозрасчетныйОбороты.Счет
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(, , , , &ВидСубконто, Субконто1 = &Номенклатура, , ) КАК ХозрасчетныйОбороты"; 

	Возврат НЕ Запрос.Выполнить().Пустой();

КонецФункции //  СуществуютСсылки()

// Обработчик события ПередЗаписью формы.
//
Процедура ПередЗаписью(Отказ)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЭтоГруппа Тогда
		
		Если НЕ ЭтоНовый() Тогда
				Если Услуга <> Ссылка.Услуга И СуществуютСсылки()Тогда
				
				ТекстСообщения = "Номенклатура """ + СокрЛП(Ссылка) + """ участвует в товародвижении.
				|Признак услуги не может быть изменен!";
				ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения, Отказ);
				
			КонецЕсли;
		КонецЕсли;
		
		Если НЕ Услуга Тогда
			Если НЕ ЗначениеЗаполнено(БазоваяЕдиницаИзмерения) Тогда
				ОбщегоНазначения.СообщитьОбОшибке("Перед записью необходимо определить единицу измерения!", Отказ);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры // ПередЗаписью()

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура;

КонецФункции // ПолучитьСтруктуруПечатныхФорм()


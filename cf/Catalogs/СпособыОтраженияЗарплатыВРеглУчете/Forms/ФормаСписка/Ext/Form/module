////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем мСведенияОСчетах;  // для получения сведений о счетах на время работы формы

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ СправочникСписок

Процедура СправочникСписокСчетДтПриИзменении(Элемент)
	СведенияОСчете = БухгалтерскийУчет.ПолучитьСведенияОСчете(мСведенияОСчетах, Элемент.Значение);
	БухгалтерскийУчет.ПривестиЗначениеСубконто(ЭлементыФормы.СправочникСписок, "Дт", СведенияОСчете);
КонецПроцедуры

Процедура СправочникСписокСчетКтПриИзменении(Элемент)
	СведенияОСчете = БухгалтерскийУчет.ПолучитьСведенияОСчете(мСведенияОСчетах, Элемент.Значение);
	БухгалтерскийУчет.ПривестиЗначениеСубконто(ЭлементыФормы.СправочникСписок, "Кт", СведенияОСчете);
КонецПроцедуры

Процедура СправочникСписокПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	СведенияОСчете = БухгалтерскийУчет.ПолучитьСведенияОСчете(мСведенияОСчетах, ДанныеСтроки.СчетДт);
	БухгалтерскийУчет.НазначитьВидимостьСубконто(ОформлениеСтроки, "Дт", СведенияОСчете);
	
	СведенияОСчете = БухгалтерскийУчет.ПолучитьСведенияОСчете(мСведенияОСчетах, ДанныеСтроки.СчетКт);
	БухгалтерскийУчет.НазначитьВидимостьСубконто(ОформлениеСтроки, "Кт", СведенияОСчете);	
	
КонецПроцедуры

Процедура СправочникСписокСубконтоКтНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ТекущаяСтрока = ЭлементыФормы.СправочникСписок.ТекущиеДанные;

	СписокПараметров = Новый Структура;
	СписокПараметров.Вставить("Дата",         ТекущаяДата());
	СписокПараметров.Вставить("СчетУчета",    ТекущаяСтрока.СчетКт);
	СписокПараметров.Вставить("Номенклатура", Справочники.Номенклатура.ПустаяСсылка());
	СписокПараметров.Вставить("Склад",        Справочники.Склады.ПустаяСсылка());
	
	БухгалтерскийУчет.ОбработатьВыборСубконто(Элемент, СтандартнаяОбработка, Справочники.Организации.ПустаяСсылка(), СписокПараметров);
	
КонецПроцедуры

Процедура СправочникСписокСубконтоДтНачалоВыбора(Элемент, СтандартнаяОбработка)

	ТекущаяСтрока = ЭлементыФормы.СправочникСписок.ТекущиеДанные;

	СписокПараметров = Новый Структура;
	СписокПараметров.Вставить("Дата",         ТекущаяДата());
	СписокПараметров.Вставить("СчетУчета",    ТекущаяСтрока.СчетДт);
	СписокПараметров.Вставить("Номенклатура", Справочники.Номенклатура.ПустаяСсылка());
	СписокПараметров.Вставить("Склад",        Справочники.Склады.ПустаяСсылка());
	
	БухгалтерскийУчет.ОбработатьВыборСубконто(Элемент, СтандартнаяОбработка, Справочники.Организации.ПустаяСсылка(), СписокПараметров);	
	
КонецПроцедуры

Процедура СправочникСписокСчетДтОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ОбработкаВыбораСчета(ВыбранноеЗначение, СтандартнаяОбработка);
КонецПроцедуры

Процедура СправочникСписокСчетКтОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ОбработкаВыбораСчета(ВыбранноеЗначение, СтандартнаяОбработка);
КонецПроцедуры

Процедура ОбработкаВыбораСчета(ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка = БухгалтерскийУчет.СчетМожноИспользоватьВПроводках(ВыбранноеЗначение)
КонецПроцедуры // ОбработкаВыбораСчета

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
                 

// Процедура - обработчик события "ПриОткрытии" формы
//
Процедура ПриОткрытии()
	
	ВидимостьУСН = (НЕ Константы.ПрименяемыеСистемыНалогообложения.Получить() = Перечисления.ПрименяемыеСистемыНалогообложения.НДФЛИндивидуальногоПредпринимателя);
	ЭлементыФормы.СправочникСписок.Колонки.РасходыУСН.Видимость 	= ВидимостьУСН;
	ЭлементыФормы.СправочникСписок.Колонки.РасходыУСН.ЭлементУправления.ДоступныеЗначения.Очистить();
	ЭлементыФормы.СправочникСписок.Колонки.РасходыУСН.ЭлементУправления.ДоступныеЗначения.Добавить(Перечисления.ОтражениеВУСН.НеПринимаются);
	ЭлементыФормы.СправочникСписок.Колонки.РасходыУСН.ЭлементУправления.ДоступныеЗначения.Добавить(Перечисления.ОтражениеВУСН.Принимаются);
		
КонецПроцедуры

Процедура СправочникСписокРасходыУСННачалоВыбора(Элемент, СтандартнаяОбработка)
	
	Если Элемент.ДоступныеЗначения.Количество() = 0 Тогда
		Элемент.ДоступныеЗначения.Добавить(Перечисления.ОтражениеВУСН.Принимаются);
		Элемент.ДоступныеЗначения.Добавить(Перечисления.ОтражениеВУСН.НеПринимаются);
	КонецЕсли;
	
КонецПроцедуры


мСведенияОСчетах = Новый Соответствие;

СправочникСписок.Колонки.Добавить("СчетДт");
СправочникСписок.Колонки.Добавить("СчетКт");



////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем мСтароеНаименование; //запоминаем наименование способа которое было при открытии формы

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Устанавливает типы субконто при изменении счета
//
// Параметры
//  Счет  – <ПланыСчетов. .Ссылка> – Счет изменившийся
//  Суффикс- <Строка> – Суффикс реквизитов
//
Процедура ПриИзмененииСчета(Счет, ДтКт)

	ВидыСубконтоСчета = Счет.ВидыСубконто;

	Для Ном = 1 по 3 Цикл
		Если Ном <= ВидыСубконтоСчета.Количество() и ЗначениеЗаполнено(Счет) и
			ВидыСубконтоСчета[Ном-1].ВидСубконто.ТипЗначения.СодержитТип(ТипЗнч(ЭтотОбъект["Субконто"+ДтКт+Ном])) Тогда
			// Без изменений
		ИначеЕсли Ном <= ВидыСубконтоСчета.Количество() тогда
			ЭтотОбъект["Субконто"+ДтКт+Ном] = Новый(ВидыСубконтоСчета[Ном-1].ВидСубконто.ТипЗначения.Типы()[0]);
		ИначеЕсли  ЭтотОбъект["Субконто"+ДтКт+Ном] <> Неопределено Тогда
			ЭтотОбъект["Субконто"+ДтКт+Ном] = Неопределено;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры // ПриИзмененииСчета()

Процедура УстановитьВидимостьСубконто(Счет, ДтКт)
	
	
	ВидыСубконтоСчета = Счет.ВидыСубконто;
	КоличествоСубконто = ВидыСубконтоСчета.Количество();
	Для Ном = 1 по 3 Цикл
		
		Если Ном <= КоличествоСубконто и ЗначениеЗаполнено(Счет) Тогда
			
			Если ВидыСубконтоСчета[Ном-1].ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизаций Тогда
				СтрокаНадпись = "Работники:";
				ЭлементыФормы["Субконто"+ДтКт+Ном].Видимость          = Ложь;
				ЭлементыФормы["Субконто"+ДтКт+Ном+"Строка"].Видимость = Истина;
				ЭлементыФормы["Субконто"+ДтКт+Ном+"Строка"].Значение  = "< подбирается автоматически >"
			ИначеЕсли ВидыСубконтоСчета[Ном-1].ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидНачисленийОплатыТрудаПоСтатье255НК Тогда
				СтрокаНадпись = "Вид начислений:";
				ЭлементыФормы["Субконто"+ДтКт+Ном].Видимость          = Истина;
				ЭлементыФормы["Субконто"+ДтКт+Ном+"Строка"].Видимость = Ложь;
			Иначе
				СтрокаНадпись = Строка(ВидыСубконтоСчета[Ном-1].ВидСубконто)+":";
				ЭлементыФормы["Субконто"+ДтКт+Ном].Видимость          = Истина;
				ЭлементыФормы["Субконто"+ДтКт+Ном+"Строка"].Видимость = Ложь;
			КонецЕсли;
			
			ЭлементыФормы["НадписьСубконто"+ДтКт+Ном].Заголовок = СтрокаНадпись;
			ЭлементыФормы["НадписьСубконто"+ДтКт+Ном].Видимость = Истина;
			
		Иначе
			ЭлементыФормы["НадписьСубконто"+ДтКт+Ном].Видимость   = Ложь;
			ЭлементыФормы["Субконто"+ДтКт+Ном].Видимость          = Ложь;
			ЭлементыФормы["Субконто"+ДтКт+Ном+"Строка"].Видимость = Ложь;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработатьИзменениеСчета(Счет, ДтКт)
	
	ПриИзмененииСчета(Счет, ДтКт);
	УстановитьВидимостьСубконто(Счет, ДтКт);
	УстановитьТекстНадписиСчетУчетаРасходовПоСтраховымВзносам();

КонецПроцедуры

// Функция формирует наименование способа отражения
// Возвращаемое значение:
//   <Строка>   – наименование способа отражения
Функция ПолучитьНаименованиеСпособаОтражения()

	НаименованиеДебета = "";
	СубконтоДебета = "";
	Если ЗначениеЗаполнено(СчетДт) Тогда
		ВидыСубконтоСчета = СчетДт.ВидыСубконто;
		Для Ном = 1 по ВидыСубконтоСчета.Количество() Цикл
			Если ЗначениеЗаполнено(ЭтотОбъект["СубконтоДт"+Ном]) Тогда
				СубконтоДебета = СубконтоДебета + "<" + ЭтотОбъект["СубконтоДт"+Ном] + "> ";	
			ИначеЕсли ВидыСубконтоСчета[Ном-1].ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизаций Тогда
				//пропускаем
			Иначе
				СубконтоДебета = СубконтоДебета + "<...> ";
			КонецЕсли;	
		КонецЦикла;
		НаименованиеДебета = "Дт" + СчетДт + " " + СубконтоДебета;
	КонецЕсли;
	
	НаименованиеКредита = "";
	СубконтоКредита = "";
	Если ЗначениеЗаполнено(СчетКт) Тогда
		ВидыСубконтоСчета = СчетКт.ВидыСубконто;
		Для Ном = 1 по ВидыСубконтоСчета.Количество() Цикл
			Если ЗначениеЗаполнено(ЭтотОбъект["СубконтоКт"+Ном]) Тогда
				СубконтоКредита = СубконтоКредита + "<" + ЭтотОбъект["СубконтоКт"+Ном] + "> ";	
			ИначеЕсли ВидыСубконтоСчета[Ном-1].ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизаций Тогда
				//пропускаем
			Иначе
				СубконтоКредита = СубконтоКредита + "<...> ";
			КонецЕсли;	
		КонецЦикла;
		НаименованиеКредита = "Кт" + СчетКт + " " + СубконтоКредита;
	КонецЕсли;
	
	Возврат СОКРЛП(НаименованиеДебета + " " + НаименованиеКредита);


КонецФункции // ПолучитьНаименованиеСпособаОтражения()

Процедура ОткрытьФормуВыбораЗначенияСубконто(ВидыСубконтоСчета, НомерСубконто, ВладелецФормы)
	
	ФормаВыбора = Справочники.Субконто.ПолучитьФормуВыбора( ,ВладелецФормы, );
	ФормаВыбора.Отбор.Владелец.Установить(ВидыСубконтоСчета[НомерСубконто-1].ВидСубконто);
	ФормаВыбора.ВидСубконто = ВидыСубконтоСчета[НомерСубконто-1].ВидСубконто;
	ФормаВыбора.ЭлементыФормы.ВидСубконто.ТолькоПросмотр = Истина;
	ФормаВыбора.Открыть();	
	
КонецПроцедуры

Процедура УстановитьТекстНадписиСчетУчетаРасходовПоСтраховымВзносам() Экспорт
	
	Если ЗначениеЗаполнено(СчетДт) Тогда
	
		Текст = "Счет учета расходов по страховым взносам ";
		
		Если СчетДт = ПланыСчетов.Хозрасчетный.РасходыНаОплатуТрудаБудущихПериодов Тогда
			
			Текст = Текст + "по БУ: " + СчетДт + " по НУ: "
				+ ?(ЗначениеЗаполнено(СчетДтНУ),
					СчетДтНУ,
					"требуется указать!");
					
			ЭлементыФормы.НадписьСчетУчетаРасходовПоСтраховымВзносам.ГиперСсылка = Истина;
			ЭлементыФормы.НадписьСчетУчетаРасходовПоСтраховымВзносам.ЦветТекста = ЦветаСтиля.ЦветГиперссылки; 
					
		Иначе
					
			Текст = Текст + "по БУ и НУ: " 
				+ ?(ЗначениеЗаполнено(СчетДт),
					СчетДт,
					"требуется указать!");
			
			ЭлементыФормы.НадписьСчетУчетаРасходовПоСтраховымВзносам.ГиперСсылка = Ложь;
			ЭлементыФормы.НадписьСчетУчетаРасходовПоСтраховымВзносам.ЦветТекста = ЦветаСтиля.ТекстИнформационнойНадписи; 
			
		КонецЕсли;
		
	Иначе
		
		Текст = "";
		
	КонецЕсли;
	
	ЭлементыФормы.НадписьСчетУчетаРасходовПоСтраховымВзносам.Заголовок = Текст;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()
	
	мСтароеНаименование = Наименование;
	
	Если Не ЭтоНовый() Тогда
		ЭтоСпособНеОтражатьВБухучете 			  = Ссылка = Справочники.СпособыОтраженияЗарплатыВРеглУчете.НеОтражатьВБухучете;
		ЭлементыФормы.Наименование.ТолькоПросмотр = Ссылка.Предопределенный;
		ЭлементыФормы.Наименование.КнопкаСпискаВыбора = Не Ссылка.Предопределенный;
	Иначе
		ЭтоСпособНеОтражатьВБухучете = Ложь;
	КонецЕсли;
	
	Если ЭтоСпособНеОтражатьВБухучете Тогда
		ЭлементыФормы.Панель.ТекущаяСтраница = ЭлементыФормы.Панель.Страницы.НеОтражатьВБухучете;
	Иначе
		ЭлементыФормы.Панель.ТекущаяСтраница = ЭлементыФормы.Панель.Страницы.НастройкаСпособаОтражения;
		УстановитьВидимостьСубконто(СчетДт,   "Дт");
		УстановитьВидимостьСубконто(СчетКт,   "Кт");
		ТекущийЭлемент = ЭлементыФормы.СчетДт;
		
		ВидимостьУСН = (НЕ Константы.ПрименяемыеСистемыНалогообложения.Получить() = Перечисления.ПрименяемыеСистемыНалогообложения.НДФЛИндивидуальногоПредпринимателя);
		ЭлементыФормы.НадписьРасходыУСН.Видимость		 = ВидимостьУСН;
		ЭлементыФормы.ОтражениеВУСН.Видимость			 = ВидимостьУСН;
		ЭлементыФормы.РамкаНалоговыйУчетУСН.Видимость	 = ВидимостьУСН;
		
	КонецЕсли;
	
	УстановитьТекстНадписиСчетУчетаРасходовПоСтраховымВзносам();
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ПустаяСтрока(Наименование) Тогда
		Наименование = ПолучитьНаименованиеСпособаОтражения();
	КонецЕсли;	
		
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
                

Процедура НаименованиеНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	СписокВозможныхЗначений = Новый СписокЗначений;
	НаименованиеДтКт = "Дт" + СчетДт + " Кт" + СчетКт;
	СписокВозможныхЗначений.Добавить(НаименованиеДтКт);
	
	НаименованиеПоДтКт = ПолучитьНаименованиеСпособаОтражения();
	Если НаименованиеДтКт <> НаименованиеПоДтКт Тогда
		СписокВозможныхЗначений.Добавить(НаименованиеПоДтКт);
	КОнецЕсли;
	
	Если НаименованиеДтКт <> мСтароеНаименование и  НаименованиеПоДтКт <> мСтароеНаименование и ЗначениеЗаполнено(мСтароеНаименование) Тогда
		СписокВозможныхЗначений.Добавить(мСтароеНаименование);
	КонецЕсли;	
	
	Элемент.СписокВыбора = СписокВозможныхЗначений;
	
КонецПроцедуры

Процедура СчетДтОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка = БухгалтерскийУчет.СчетМожноИспользоватьВПроводках(ВыбранноеЗначение)
КонецПроцедуры

Процедура СчетДтПриИзменении(Элемент)
	
	ОбработатьИзменениеСчета(Элемент.Значение, "Дт");
	
КонецПроцедуры

Процедура СчетКтОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка = БухгалтерскийУчет.СчетМожноИспользоватьВПроводках(ВыбранноеЗначение)
КонецПроцедуры

Процедура СчетКтПриИзменении(Элемент)
	
	ОбработатьИзменениеСчета(Элемент.Значение, "Кт");
	
КонецПроцедуры

Процедура СубконтоБухучетаПриИзменении(Элемент)
	
	ДтКт = Сред(Элемент.Имя,9,2);
	Если Элемент.Значение = Неопределено Тогда
		ОбработатьИзменениеСчета(?(ДтКт = "Дт", СчетДт, СчетКт), ДтКт);
	КонецЕсли;
	
КонецПроцедуры

Процедура СубконтоБухучетаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	Если ТипЗнч(Элемент.Значение) = Тип("СправочникСсылка.Субконто") Тогда
		
		СтандартнаяОбработка = Ложь;

		ДтКт = Сред(Элемент.Имя,9,2);
		НомерСубконто = Прав(Элемент.Имя,1);
		Если ДтКт = "Дт" Тогда
			ВидыСубконтоСчета = СчетДт.ВидыСубконто;
		Иначе	
			ВидыСубконтоСчета = СчетКт.ВидыСубконто;
		КонецЕсли;
		
		ОткрытьФормуВыбораЗначенияСубконто(ВидыСубконтоСчета, НомерСубконто, Элемент);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОтражениеВУСННачалоВыбора(Элемент, СтандартнаяОбработка)
	
	Если Элемент.ДоступныеЗначения.Количество() = 0 Тогда
		Элемент.ДоступныеЗначения.Добавить(Перечисления.ОтражениеВУСН.Принимаются);
		Элемент.ДоступныеЗначения.Добавить(Перечисления.ОтражениеВУСН.НеПринимаются);
	КонецЕсли;

КонецПроцедуры

Процедура НадписьСчетУчетаРасходовПоСтраховымВзносамНажатие(Элемент)
	
	Форма = ПолучитьФорму("ФормаНастройкиСчетаУчетаПоСтраховымВзносамНУ", ЭтаФорма);
	Форма.СправочникОбъект = СправочникОбъект;
	Форма.Открыть();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ




////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Обработчик события ПередЗаписью объекта.
//
Процедура ПередЗаписью(Отказ)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Если НЕ ЭтоГруппа Тогда
		
		Если НЕ ЭтоНовый() 
			И ВидСклада <> Ссылка.ВидСклада
			И СуществуютСсылки() Тогда
			
			ОбщегоНазначения.СообщитьОбОшибке("Существуют документы, в которых выбран склад """ + Наименование + """.
			|Реквизит ""Вид склада"" не может быть изменен, элемент не записан.");
			
			Отказ = Истина;
			
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ВидСклада) Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Не заполнен реквизит ""Вид склада"", элемент не записан.");
			
			Отказ = Истина;
		КонецЕсли;
		
		// не дадим записать розничный склад или НТТ без указания типа цен
		Если (ВидСклада = Перечисления.ВидыСкладов.Розничный Или ВидСклада = Перечисления.ВидыСкладов.НеавтоматизированнаяТорговаяТочка)
			И НЕ ЗначениеЗаполнено(ТипЦенРозничнойТорговли) Тогда
			
			ОбщегоНазначения.СообщитьОбОшибке("Для склада вида """+ВидСклада+""" необходимо указать тип цен розничной торговли,
			|элемент не записан.");
			
			Отказ = Истина;
			
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТИРУЕМЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Функция проверяет, существуют ли движения по складу.
// Если есть - менять реквизит "Вид склада" нельзя.
//
// Параметры:
//  Нет.
//
// Возвращаемое значение:
//  Истина - если есть движения, Ложь - если нет.
//
Функция СуществуютСсылки()

	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Склад", Ссылка);
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ХозрасчетныйОбороты.Счет
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(, , , , , Субконто1 = &Склад ИЛИ Субконто2 = &Склад ИЛИ Субконто3 = &Склад, , ) КАК ХозрасчетныйОбороты"; 

	Возврат НЕ Запрос.Выполнить().Пустой();

КонецФункции // СуществуютСсылки()

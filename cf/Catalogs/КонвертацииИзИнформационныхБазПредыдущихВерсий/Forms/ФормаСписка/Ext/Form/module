Перем КартинкаВнешниеПравила;

Процедура ДействияФормыЗаписатьНаДиск(Кнопка)
	
	Конвертация = ЭлементыФормы.СправочникСписок.ТекущиеДанные;
	Если Конвертация = Неопределено Тогда
		Сообщить("Выберите конвертацию, которую требуется сохранить на диск.", СтатусСообщения.Внимание);
		Возврат;
	КонецЕсли;
	
	ДиалогВыбораФайла				= Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ДиалогВыбораФайла.Заголовок		= "Укажите каталог для записи файлов конвертации";
	
	Если ДиалогВыбораФайла.Выбрать() Тогда
		
		Попытка
			Если ЗначениеЗаполнено(Конвертация.КонвертацияОбработка) Тогда
				КонвертацияОбработка	= Справочники.КонвертацииИзИнформационныхБазПредыдущихВерсий.ПолучитьМакет(Конвертация.КонвертацияОбработка + "_ert");
				КонвертацияОбработка.Записать(ДиалогВыбораФайла.Каталог + "\" + Конвертация.КонвертацияОбработка + ".ert");
				Сообщить("Файл обработки конвертации " + Конвертация.КонвертацияОбработка + ".ert" + " записан в каталог: "+ ДиалогВыбораФайла.Каталог, СтатусСообщения.Информация);
			КонецЕсли;			
			КонвертацияПравила		= Справочники.КонвертацииИзИнформационныхБазПредыдущихВерсий.ПолучитьМакет(Конвертация.КонвертацияПравила + "_xml");			
			КонвертацияПравила.Записать(ДиалогВыбораФайла.Каталог + "\" + Конвертация.КонвертацияПравила + ".xml");
			Сообщить("Файл правил конвертации " + Конвертация.КонвертацияПравила + ".xml" + " записан в каталог: "+ ДиалогВыбораФайла.Каталог, СтатусСообщения.Информация);
		Исключение
			Сообщить("Файлы конвертации записать не удалось.", СтатусСообщения.Важное);
		КонецПопытки;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДействияФормыЗаменитьФайлы(Кнопка)
	
	Конвертация = ЭлементыФормы.СправочникСписок.ТекущиеДанные;
	Если Конвертация = Неопределено Тогда
		Предупреждение("Выберите конвертацию, для которой требуется заменить файлы конвертации.");
		Возврат;
	КонецЕсли;
	
	ДиалогВыбораФайла				= Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ДиалогВыбораФайла.Заголовок		= "Укажите каталог с файлами конвертации";
	
	Если ДиалогВыбораФайла.Выбрать() Тогда
		
		Если ЗначениеЗаполнено(Конвертация.КонвертацияОбработка) Тогда
			
			ФайлОбработки			= ДиалогВыбораФайла.Каталог + "\" + Конвертация.КонвертацияОбработка + ".ert";
			Попытка
				ОбъектКонвертации	= Конвертация.Ссылка.ПолучитьОбъект();
				ОбъектКонвертации.ХранилищеОбработка			= Новый ХранилищеЗначения(Новый ДвоичныеДанные(ФайлОбработки));
				ОбъектКонвертации.Записать();
				Сообщить("Файлы обработки конвертации заменены.", СтатусСообщения.Внимание);
			Исключение
				Сообщить("Файлы обработки конвертации заменить не удалось.", СтатусСообщения.ОченьВажное);
			КонецПопытки;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Конвертация.КонвертацияПравила) Тогда
			
			ФайлПравил				= ДиалогВыбораФайла.Каталог + "\" + Конвертация.КонвертацияПравила + ".xml";
			
			Попытка
				ОбъектКонвертации	= Конвертация.Ссылка.ПолучитьОбъект();
				ОбъектКонвертации.ХранилищеПравила				= Новый ХранилищеЗначения(Новый ДвоичныеДанные(ФайлПравил));
				ОбъектКонвертации.Записать();
				Сообщить("Файлы правил конвертации заменены.",СтатусСообщения.Внимание);
			Исключение
				Сообщить("Файлы правил конвертации заменить не удалось.",СтатусСообщения.ОченьВажное);
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ДействияФормыВосставитьФайлы(Кнопка)
	
	Конвертация = ЭлементыФормы.СправочникСписок.ТекущиеДанные;
	Если Конвертация = Неопределено Тогда
		Предупреждение("Выберите конвертацию, для которой требуется восстановить файлы конвертации.");
		Возврат;
	КонецЕсли;
	
	Попытка
		ОбъектКонвертации	= Конвертация.Ссылка.ПолучитьОбъект();
		ОбъектКонвертации.ХранилищеОбработка			= Неопределено;
		ОбъектКонвертации.ХранилищеПравила				= Неопределено;
		ОбъектКонвертации.Записать();
		Сообщить("Файлы конвертации заменены.",СтатусСообщения.Внимание);
	Исключение
		Сообщить("Файлы конвертации заменить не удалось.",СтатусСообщения.ОченьВажное);
	КонецПопытки;
	
КонецПроцедуры

Процедура СправочникСписокПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Для Каждого Строка Из ОформленияСтрок Цикл		
		Если Строка.ДанныеСтроки.ХранилищеПравила.Получить() <> Неопределено Тогда
			Строка.Ячейки.ВнешниеПравила.УстановитьКартинку(КартинкаВнешниеПравила);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

СправочникСписок.Колонки.Добавить("ХранилищеОбработка");
СправочникСписок.Колонки.Добавить("ХранилищеПравила");
КартинкаВнешниеПравила = БиблиотекаКартинок.РучнаяКорректировка;
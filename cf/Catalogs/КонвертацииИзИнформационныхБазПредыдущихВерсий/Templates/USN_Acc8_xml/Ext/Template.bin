<ПравилаОбмена>
	<ВерсияФормата>2.01</ВерсияФормата>
	<Ид>a60eecf1-19f6-4cd7-9a33-8a5d3c5e10d6    </Ид>
	<Наименование>Упрощенная система налогообложения, ред. 1.3 --&gt; Бухгалтерия предприятия КОРП</Наименование>
	<ДатаВремяСоздания>2011-09-06T12:53:00</ДатаВремяСоздания>
	<Источник ВерсияПлатформы="7.7" ВерсияКонфигурации="" СинонимКонфигурации="">Упрощенная система налогообложения, ред. 1.3</Источник>
	<Приемник ВерсияПлатформы="8.0" ВерсияКонфигурации="2.0.24.5" СинонимКонфигурации="Бухгалтерия предприятия КОРП, редакция 2.0">БухгалтерияПредприятияКОРП</Приемник>
	<ПередВыгрузкойДанных>Если ПустоеЗначение(ДатаНачала) = 1 Тогда
	Если Форма.МодальныйРежим() = 0 Тогда
		Предупреждение("Не указана дата начала периода выгрузки!");
	Иначе   
		Сообщить("Не указана дата начала периода выгрузки!");
	КонецЕсли;
	Отказ = 1;
КонецЕсли;
Если ДатаНачала &gt; ДатаОкончания Тогда
	Если Форма.МодальныйРежим() = 0 Тогда
		Предупреждение("Неправильно задан период выгрузки!"+РазделительСтрок+
		"Дата начала больше даты окончания периода.");
	Иначе
		Сообщить("Неправильно задан период выгрузки!"+РазделительСтрок+
		"Дата начала больше даты окончания периода.");
	КонецЕсли;
	Отказ = 1;
КонецЕсли;
Если ДатаОкончания &gt; КонецРассчитанногоПериодаБИ() Тогда
	Если Форма.МодальныйРежим() = 0 Тогда
		Предупреждение("За выбранный период итоги не рассчитаны!"+РазделительСтрок+
		"Расчет итогов выполняется в режиме"+РазделительСтрок+
		"""Операции - Управление бухгалтерскими итогами"".");
	Иначе           
		Сообщить("За выбранный период итоги не рассчитаны!"+РазделительСтрок+
		"Расчет итогов выполняется в режиме"+РазделительСтрок+
		"""Операции - Управление бухгалтерскими итогами"".");
	КонецЕсли;
	Отказ = 1;
КонецЕсли;

ДатаВводаОстатков = ДатаНачала;
Параметры.ДатаВводаОстатков = ДатаВводаОстатков;
Параметры.ДатаКонцаПериодаВыгрузки = ДатаОкончания;
                                                   
Параметры.СчетВводаОстатков = СчетПоКоду("00");
Параметры.ОбъектНалогообложения = Константа.ОбъектНалогообложения.Получить(ДатаВводаОстатков);

Параметры.ВычетыСотрудниковпоНДФЛ = СоздатьОбъект("ТаблицаЗначений");
Параметры.ВычетыСотрудниковпоНДФЛ.НоваяКолонка("Физлицо");
Параметры.ВычетыСотрудниковпоНДФЛ.НоваяКолонка("КодВычета");
Параметры.ВычетыСотрудниковпоНДФЛ.НоваяКолонка("Период", "Дата");
Параметры.ВычетыСотрудниковпоНДФЛ.НоваяКолонка("ПериодЗавершения", "Дата");
Параметры.ВычетыСотрудниковпоНДФЛ.НоваяКолонка("КоличествоДетей", "Число");

Параметры.ВычетыСотрудниковпоНДФЛЛичный = СоздатьОбъект("ТаблицаЗначений");
Параметры.ВычетыСотрудниковпоНДФЛЛичный.НоваяКолонка("Физлицо");
Параметры.ВычетыСотрудниковпоНДФЛЛичный.НоваяКолонка("КодВычетаЛичный", "Строка");
Параметры.ВычетыСотрудниковпоНДФЛЛичный.НоваяКолонка("Период", "Дата");
Параметры.ВычетыСотрудниковпоНДФЛЛичный.НоваяКолонка("ПериодЗавершения", "Дата");

Параметры.ДлинаКода = 9; // стандартная длина кодов справочников в 8.0

Параметры.СписокРаботников = СоздатьОбъект("ТаблицаЗначений");
Параметры.СписокРаботников.НоваяКолонка("ФизЛицо"); // общее во всех талицах

Параметры.СписокУволенныхРаботников = СоздатьОбъект("ТаблицаЗначений");
Параметры.СписокУволенныхРаботников.НоваяКолонка("ФизЛицо");

Параметры.СписокСчетовСкладскогоУчета = "10.1,10.2,10.3,43,41.1,41.2,41.3";
Параметры.СписокСчетовРасчетов = "";

Параметры.ИмяТаблицы = "";

Параметры.СписокОС = СоздатьОбъект("ТаблицаЗначений");
Параметры.СписокОС.НоваяКолонка("ОсновноеСредство");
Параметры.СписокОС.НоваяКолонка("Контрагент");
Параметры.СписокОС.НоваяКолонка("ТекущаяСтоимостьБУНач", "Число");
Параметры.СписокОС.НоваяКолонка("ТекущаяСтоимостьБУКон", "Число");
Параметры.СписокОС.НоваяКолонка("ТекущаяСтоимостьНУ", "Число");
Параметры.СписокОС.НоваяКолонка("НакопленнаяАмортизацияБУНач", "Число");
Параметры.СписокОС.НоваяКолонка("НакопленнаяАмортизацияБУКон", "Число");
Параметры.СписокОС.НоваяКолонка("НакопленнаяАмортизацияНУ", "Число");
Параметры.СписокОС.НоваяКолонка("СчетУчетаБУ");
Параметры.СписокОС.НоваяКолонка("СчетУчетаНУ");
Параметры.СписокОС.НоваяКолонка("СчетАмортизацииБУ");
Параметры.СписокОС.НоваяКолонка("СчетАмортизацииНУ");
Параметры.СписокОС.НоваяКолонка("СтоимостьДо2002НУ", "Число");
Параметры.СписокОС.НоваяКолонка("АмортизацияДо2002НУ", "Число");

Параметры.СписокОСКон = СоздатьОбъект("ТаблицаЗначений");
Параметры.СписокОС.Выгрузить(Параметры.СписокОСКон);

Параметры.СписокНМА = СоздатьОбъект("ТаблицаЗначений");
Параметры.СписокНМА.НоваяКолонка("НМА");
Параметры.СписокНМА.НоваяКолонка("СчетУчетаНМА");
Параметры.СписокНМА.НоваяКолонка("ТекущаяСтоимостьБУНач", "Число");
Параметры.СписокНМА.НоваяКолонка("ТекущаяСтоимостьБУКон", "Число");
Параметры.СписокНМА.НоваяКолонка("ТекущаяСтоимостьНУ", "Число");
Параметры.СписокНМА.НоваяКолонка("НакопленнаяАмортизацияБУНач", "Число");
Параметры.СписокНМА.НоваяКолонка("НакопленнаяАмортизацияБУКон", "Число");
Параметры.СписокНМА.НоваяКолонка("НакопленнаяАмортизацияНУ", "Число");
Параметры.СписокНМА.НоваяКолонка("СчетУчетаБУ");
Параметры.СписокНМА.НоваяКолонка("СчетУчетаНУ");
Параметры.СписокНМА.НоваяКолонка("СчетАмортизацииБУ");
Параметры.СписокНМА.НоваяКолонка("СчетАмортизацииНУ");
Параметры.СписокНМА.НоваяКолонка("СтоимостьДо2002НУ", "Число");
Параметры.СписокНМА.НоваяКолонка("АмортизацияДо2002НУ", "Число");

Параметры.СписокНМАкон= СоздатьОбъект("ТаблицаЗначений");
Параметры.СписокНМА.Выгрузить(Параметры.СписокНМАкон);

СпрВалюты = СоздатьОбъект("Справочник.Валюты");
Если (СпрВалюты.НайтиПоКоду("810") = 1)	Тогда
	Параметры.Рубли = СпрВалюты.ТекущийЭлемент();
ИначеЕсли (СпрВалюты.НайтиПоКоду("643") = 1) Тогда
	Параметры.Рубли = СпрВалюты.ТекущийЭлемент();
Иначе
	СпрВалюты.Новый();
	СпрВалюты.Код = "643";
	СпрВалюты.Наименование = "руб.";
	СпрВалюты.ПолнНаименование = "Российский рубль";
	СпрВалюты.Записать();
	СпрВалюты.Курс.Установить('01.01.1980', 1);
	СпрВалюты.Кратность.Установить('01.01.1980', 1);	
	Параметры.Рубли = СпрВалюты.ТекущийЭлемент();
КонецЕсли;

Параметры.ПараметрыАлгоритмов = СоздатьОбъект("СписокЗначений");
Параметры.ПараметрыАлгоритмов.Установить("ДопКомментарий", "");
Параметры.ПараметрыАлгоритмов.Установить("ПорядокПризнанияМатериальныхРасходов",Строка(Константа.ПорядокПризнанияМатериальныхРасходов.Получить(ДатаВводаОстатков).Идентификатор()));
Параметры.ПараметрыАлгоритмов.Установить("ПорядокПризнанияРасходовПоТоварам",Строка(Константа.ПорядокПризнанияРасходовПоТоварам.Получить(ДатаВводаОстатков).Идентификатор()));
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);
Параметры.ПараметрыАлгоритмов.Установить("ОсновнойСклад", Константа.ОсновнойСклад);

Параметры.ПараметрыАлгоритмов.Установить("ВидОбъектаУчета", "НематериальныйАктив");

Параметры.ТаблицаНДС = СоздатьОбъект("ТаблицаЗначений");
Параметры.ТаблицаНДС.НоваяКолонка("Сумма");
Параметры.ТаблицаНДС.НоваяКолонка("НДС");
Параметры.ТаблицаНДС.НоваяКолонка("Контрагент");
Параметры.ТаблицаНДС.НоваяКолонка("Договор");
Параметры.ТаблицаНДС.НоваяКолонка("ВидРасчетов");
Параметры.ТаблицаНДС.НоваяКолонка("Ключ");
Параметры.ТаблицаНДСНач = СоздатьОбъект("ТаблицаЗначений");
Параметры.ТаблицаНДСКон = СоздатьОбъект("ТаблицаЗначений");
Параметры.ТаблицаНДС.Выгрузить(Параметры.ТаблицаНДСНач);
Параметры.ТаблицаНДС.Выгрузить(Параметры.ТаблицаНДСКон);

Параметры.ТаблицаПроводок = СоздатьОбъект("ТаблицаЗначений");
Параметры.ТаблицаПроводок.НоваяКолонка("СчетДт");
Параметры.ТаблицаПроводок.НоваяКолонка("СчетКт");
Параметры.ТаблицаПроводок.НоваяКолонка("КодСчетаДт");
Параметры.ТаблицаПроводок.НоваяКолонка("КодСчетаКт");
Параметры.ТаблицаПроводок.НоваяКолонка("ВалютаДт");
Параметры.ТаблицаПроводок.НоваяКолонка("ВалютаКт");
Параметры.ТаблицаПроводок.НоваяКолонка("СубконтоДт");
Параметры.ТаблицаПроводок.НоваяКолонка("СубконтоКт");
Параметры.ТаблицаПроводок.НоваяКолонка("Сумма", "Число");
Параметры.ТаблицаПроводок.НоваяКолонка("ВалютнаяСуммаДт", "Число");
Параметры.ТаблицаПроводок.НоваяКолонка("ВалютнаяСуммаКт", "Число");
Параметры.ТаблицаПроводок.НоваяКолонка("КоличествоДт", "Число");
Параметры.ТаблицаПроводок.НоваяКолонка("КоличествоКт", "Число");
//*********************************************************
// Исключительно для упрощения формирования документа ВНО
Параметры.ТаблицаПроводок.НоваяКолонка("СчетУчета");
Параметры.ТаблицаПроводок.НоваяКолонка("СуммаКт", "Число");
Параметры.ТаблицаПроводок.НоваяКолонка("Валюта");
Параметры.ТаблицаПроводок.НоваяКолонка("ВалютнаяСумма", "Число");
Параметры.ТаблицаПроводок.НоваяКолонка("Количество", "Число");
Параметры.ТаблицаПроводок.НоваяКолонка("Субконто1");
Параметры.ТаблицаПроводок.НоваяКолонка("Субконто2");
Параметры.ТаблицаПроводок.НоваяКолонка("Субконто3");
Параметры.ТаблицаПроводок.НоваяКолонка("ОтражениеВУСН");


Параметры.ТаблицаПроводокОбороты = СоздатьОбъект("ТаблицаЗначений");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("СчетДт");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("СчетКт");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("КодСчетаДт");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("КодСчетаКт");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("ВалютаДт");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("ВалютаКт");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("СубконтоДт");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("СубконтоКт");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("Сумма");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("ВалютнаяСуммаДт");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("ВалютнаяСуммаКт");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("КоличествоДт");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("КоличествоКт");

Параметры.ОстаткиПоВзаиморасчетамСПодотчетниками = СоздатьОбъект("ТаблицаЗначений");
Параметры.ОстаткиПоВзаиморасчетамСПодотчетниками.НоваяКолонка("Подотчетник");
Параметры.ОстаткиПоВзаиморасчетамСПодотчетниками.НоваяКолонка("РасчетныйДокумент");
Параметры.ОстаткиПоВзаиморасчетамСПодотчетниками.НоваяКолонка("СуммаВзаиморасчетов");
Параметры.ОстаткиПоВзаиморасчетамСПодотчетниками.НоваяКолонка("ВидЗадолженности");

Параметры.ОстаткиПоВзаиморасчетамСПоставщиками = СоздатьОбъект("ТаблицаЗначений");
Параметры.ОстаткиПоВзаиморасчетамСПоставщиками.НоваяКолонка("Контрагент");
Параметры.ОстаткиПоВзаиморасчетамСПоставщиками.НоваяКолонка("ДоговорКонтрагента");
Параметры.ОстаткиПоВзаиморасчетамСПоставщиками.НоваяКолонка("СуммаВзаиморасчетов");
Параметры.ОстаткиПоВзаиморасчетамСПоставщиками.НоваяКолонка("РасчетныйДокумент");
Параметры.ОстаткиПоВзаиморасчетамСПоставщиками.НоваяКолонка("ВидЗадолженности");
Параметры.ОстаткиПоВзаиморасчетамСПоставщиками.НоваяКолонка("Валюта");
Параметры.ОстаткиПоВзаиморасчетамСПоставщиками.НоваяКолонка("СуммаВзаиморасчетовВал");
Параметры.ОстаткиПоВзаиморасчетамСПоставщиками.НоваяКолонка("СчетУчета");

Параметры.ОстаткиПоВзаиморасчетамCСотрудниками = СоздатьОбъект("ТаблицаЗначений");
Параметры.ОстаткиПоВзаиморасчетамCСотрудниками.НоваяКолонка("Работник");
Параметры.ОстаткиПоВзаиморасчетамCСотрудниками.НоваяКолонка("СуммаВзаиморасчетов");
Параметры.ОстаткиПоВзаиморасчетамCСотрудниками.НоваяКолонка("ВидЗадолженности");
Параметры.ОстаткиПоВзаиморасчетамCСотрудниками.НоваяКолонка("ОтражениеВУСН");
Параметры.ОстаткиПоВзаиморасчетамCСотрудниками.НоваяКолонка("Ведомость");
Параметры.ОстаткиПоВзаиморасчетамCСотрудниками.НоваяКолонка("СчетУчета");

Параметры.ОстаткиПоВзаиморасчетамСПокупателями = СоздатьОбъект("ТаблицаЗначений");
Параметры.ОстаткиПоВзаиморасчетамСПокупателями.НоваяКолонка("Контрагент");
Параметры.ОстаткиПоВзаиморасчетамСПокупателями.НоваяКолонка("ДоговорКонтрагента");
Параметры.ОстаткиПоВзаиморасчетамСПокупателями.НоваяКолонка("СуммаВзаиморасчетов");
Параметры.ОстаткиПоВзаиморасчетамСПокупателями.НоваяКолонка("РасчетныйДокумент");
Параметры.ОстаткиПоВзаиморасчетамСПокупателями.НоваяКолонка("ВидЗадолженности");
Параметры.ОстаткиПоВзаиморасчетамСПокупателями.НоваяКолонка("ДоходЕНВД");
Параметры.ОстаткиПоВзаиморасчетамСПокупателями.НоваяКолонка("ДоходКомитента");
Параметры.ОстаткиПоВзаиморасчетамСПокупателями.НоваяКолонка("Валюта");
Параметры.ОстаткиПоВзаиморасчетамСПокупателями.НоваяКолонка("СуммаВзаиморасчетовВал");
Параметры.ОстаткиПоВзаиморасчетамСПокупателями.НоваяКолонка("СчетУчета");

Параметры.ОстаткиПоВзаиморасчетамПоНалогам = СоздатьОбъект("ТаблицаЗначений");
Параметры.ОстаткиПоВзаиморасчетамПоНалогам.НоваяКолонка("ВидЗадолженности");
Параметры.ОстаткиПоВзаиморасчетамПоНалогам.НоваяКолонка("СчетРасчетовПоНалогу");
Параметры.ОстаткиПоВзаиморасчетамПоНалогам.НоваяКолонка("СуммаВзаиморасчетов");
Параметры.ОстаткиПоВзаиморасчетамПоНалогам.НоваяКолонка("ОтражениеВУСН");

Параметры.ОстаткиПоТМЦ = СоздатьОбъект("ТаблицаЗначений");
Параметры.ОстаткиПоТМЦ.НоваяКолонка("Номенклатура");
Параметры.ОстаткиПоТМЦ.НоваяКолонка("СчетУчета");
Параметры.ОстаткиПоТМЦ.НоваяКолонка("Склад");
Параметры.ОстаткиПоТМЦ.НоваяКолонка("ДокументОприходования");
Параметры.ОстаткиПоТМЦ.НоваяКолонка("Количество");

Параметры.ОстаткиПоТМЦПереданные = СоздатьОбъект("ТаблицаЗначений");
Параметры.ОстаткиПоТМЦПереданные.НоваяКолонка("Номенклатура");
Параметры.ОстаткиПоТМЦПереданные.НоваяКолонка("СчетУчета");
Параметры.ОстаткиПоТМЦПереданные.НоваяКолонка("Контрагент");
Параметры.ОстаткиПоТМЦПереданные.НоваяКолонка("ДоговорКонтрагента");
Параметры.ОстаткиПоТМЦПереданные.НоваяКолонка("ДокументПередачи");
Параметры.ОстаткиПоТМЦПереданные.НоваяКолонка("ДокументОприходования");
Параметры.ОстаткиПоТМЦПереданные.НоваяКолонка("Количество");

Параметры.РасходыНоменклатура	= СоздатьОбъект("ТаблицаЗначений");
Параметры.РасходыНоменклатура.НоваяКолонка("Номенклатура");
Параметры.РасходыНоменклатура.НоваяКолонка("СчетУчета"); 			
Параметры.РасходыНоменклатура.НоваяКолонка("ДокументОприходования");
Параметры.РасходыНоменклатура.НоваяКолонка("СтатусыПартийУСН");
Параметры.РасходыНоменклатура.НоваяКолонка("Контрагент");
Параметры.РасходыНоменклатура.НоваяКолонка("ДоговорКонтрагента");
Параметры.РасходыНоменклатура.НоваяКолонка("РасчетныйДокумент");
Параметры.РасходыНоменклатура.НоваяКолонка("СтатусыОплатыРасходовУСН");
Параметры.РасходыНоменклатура.НоваяКолонка("ОтражениеВУСН");
Параметры.РасходыНоменклатура.НоваяКолонка("Склад");
Параметры.РасходыНоменклатура.НоваяКолонка("Валюта");
Параметры.РасходыНоменклатура.НоваяКолонка("Количество", "Число");
Параметры.РасходыНоменклатура.НоваяКолонка("Сумма", "Число");
Параметры.РасходыНоменклатура.НоваяКолонка("НДС", "Число");
Параметры.РасходыНоменклатура.НоваяКолонка("СуммаВал", "Число");
Параметры.РасходыНоменклатура.НоваяКолонка("НДСВал", "Число");
Параметры.РасходыНоменклатура.НоваяКолонка("ПартияСинхронизации");

Параметры.ВременнаяТаблицаРасчетов = СоздатьОбъект("ТаблицаЗначений");
Параметры.ВременнаяТаблицаРасчетов.НоваяКолонка("ТабличнаяЧасть");
Параметры.ВременнаяТаблицаРасчетов.НоваяКолонка("Контрагент");
Параметры.ВременнаяТаблицаРасчетов.НоваяКолонка("ДоговорКонтрагента");
Параметры.ВременнаяТаблицаРасчетов.НоваяКолонка("РасчетныйДокумент");
Параметры.ВременнаяТаблицаРасчетов.НоваяКолонка("ОтражениеВНУ");
Параметры.ВременнаяТаблицаРасчетов.НоваяКолонка("Валюта");
Параметры.ВременнаяТаблицаРасчетов.НоваяКолонка("Сумма");
Параметры.ВременнаяТаблицаРасчетов.НоваяКолонка("СуммаВзаиморасчетов");
Параметры.ВременнаяТаблицаРасчетов.НоваяКолонка("НДС");

Параметры.ВременнаяТаблицаРасчетовНач = СоздатьОбъект("ТаблицаЗначений");
Параметры.ВременнаяТаблицаРасчетовКон = СоздатьОбъект("ТаблицаЗначений");
Параметры.ВременнаяТаблицаРасчетов.Выгрузить(Параметры.ВременнаяТаблицаРасчетовНач);
Параметры.ВременнаяТаблицаРасчетов.Выгрузить(Параметры.ВременнаяТаблицаРасчетовКон);

Параметры.СтрокаТаблицыЗначений = СоздатьОбъект("ТаблицаЗначений");
Параметры.СтрокаТаблицыЗначений.НоваяКолонка("РБП");
Параметры.СтрокаТаблицыЗначений.НоваяКолонка("Номенклатура");
Параметры.СтрокаТаблицыЗначений.НоваяКолонка("СчетУчета");
Параметры.СтрокаТаблицыЗначений.НоваяКолонка("СтатусыПартийУСН");
Параметры.СтрокаТаблицыЗначений.НоваяКолонка("СчетПолучателя");
Параметры.СтрокаТаблицыЗначений.НоваяКолонка("Контрагент");
Параметры.СтрокаТаблицыЗначений.НоваяКолонка("ДоговорКонтрагента");
Параметры.СтрокаТаблицыЗначений.НоваяКолонка("ДокументОприходования");
Параметры.СтрокаТаблицыЗначений.НоваяКолонка("РасчетныйДокумент");
Параметры.СтрокаТаблицыЗначений.НоваяКолонка("СтатусыОплатыРасходовУСН");
Параметры.СтрокаТаблицыЗначений.НоваяКолонка("ОтражениеВУСН");
Параметры.СтрокаТаблицыЗначений.НоваяКолонка("Валюта");
Параметры.СтрокаТаблицыЗначений.НоваяКолонка("Количество");
Параметры.СтрокаТаблицыЗначений.НоваяКолонка("Сумма", "Число");
Параметры.СтрокаТаблицыЗначений.НоваяКолонка("НДС", "Число");
Параметры.СтрокаТаблицыЗначений.НоваяКолонка("СуммаВал", "Число");
Параметры.СтрокаТаблицыЗначений.НоваяКолонка("НДСВал", "Число");
Параметры.СтрокаТаблицыЗначений.НоваяКолонка("ПартияСинхронизации");
Параметры.СтрокаТаблицыЗначений.НоваяКолонка("ИндексСтроки", "Число");

Параметры.РасходыУслуги = СоздатьОбъект("ТаблицаЗначений");
Параметры.РасходыУслуги.НоваяКолонка("Номенклатура");
Параметры.РасходыУслуги.НоваяКолонка("Контрагент");
Параметры.РасходыУслуги.НоваяКолонка("ДоговорКонтрагента");
Параметры.РасходыУслуги.НоваяКолонка("РасчетныйДокумент");
Параметры.РасходыУслуги.НоваяКолонка("ОтражениеВУСН"); 
Параметры.РасходыУслуги.НоваяКолонка("Валюта");
Параметры.РасходыУслуги.НоваяКолонка("Сумма");
Параметры.РасходыУслуги.НоваяКолонка("НДС");

Параметры.РасходыРБП = СоздатьОбъект("ТаблицаЗначений");
Параметры.РасходыРБП.НоваяКолонка("РБП");
Параметры.РасходыРБП.НоваяКолонка("Контрагент");
Параметры.РасходыРБП.НоваяКолонка("ДоговорКонтрагента");
Параметры.РасходыРБП.НоваяКолонка("РасчетныйДокумент");
Параметры.РасходыРБП.НоваяКолонка("СтатусыОплатыРасходовУСН");
Параметры.РасходыРБП.НоваяКолонка("ОтражениеВУСН");
Параметры.РасходыРБП.НоваяКолонка("Валюта");
Параметры.РасходыРБП.НоваяКолонка("Сумма", "Число");
Параметры.РасходыРБП.НоваяКолонка("НДС", "Число");
Параметры.РасходыРБП.НоваяКолонка("СуммаВал", "Число");
Параметры.РасходыРБП.НоваяКолонка("НДСВал", "Число");

Параметры.РасходыНалоги = СоздатьОбъект("ТаблицаЗначений");
Параметры.РасходыНалоги.НоваяКолонка("СчетРасчетовПоНалогу");
Параметры.РасходыНалоги.НоваяКолонка("ОтражениеВУСН");
Параметры.РасходыНалоги.НоваяКолонка("Сумма");

Параметры.РасходыЗарплата = СоздатьОбъект("ТаблицаЗначений");
Параметры.РасходыЗарплата.НоваяКолонка("Работник");
Параметры.РасходыЗарплата.НоваяКолонка("ОтражениеВУСН");
Параметры.РасходыЗарплата.НоваяКолонка("Сумма");

Параметры.ТаблицаМХ = СоздатьОбъект("ТаблицаЗначений");
Параметры.ТаблицаМХ.НоваяКолонка("СчетаУчета");
Параметры.ТаблицаМХ.НоваяКолонка("Период");
Параметры.ТаблицаМХ.НоваяКолонка("Номенклатура");
Параметры.ТаблицаМХ.НоваяКолонка("КлючПоиска");
Параметры.ТаблицаМХ.НоваяКолонка("ТаблицаИтоговМХ");

Параметры.ТаблицаМХНач = СоздатьОбъект("ТаблицаЗначений");
Параметры.ТаблицаМХ.Выгрузить(Параметры.ТаблицаМХНач);
Параметры.ТаблицаМХКон = СоздатьОбъект("ТаблицаЗначений");
Параметры.ТаблицаМХ.Выгрузить(Параметры.ТаблицаМХКон);

Параметры.ВыгружатьБезВалют = СоздатьОбъект("СписокЗначений");
Параметры.ВыгружатьБезВалют.ДобавитьЗначение(СчетПоКоду("10.3"));
Параметры.ВыгружатьБезВалют.ДобавитьЗначение(СчетПоКоду("10.13"));
Параметры.ВыгружатьБезВалют.ДобавитьЗначение(СчетПоКоду("41.3"));
Параметры.ВыгружатьБезВалют.ДобавитьЗначение(СчетПоКоду("97.4"));

Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ПодготовитьТаблицуМХ();
	Параметры.ТаблицаМХ.Выгрузить(Параметры.ТаблицаМХКон);
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

Параметры.ТаблицаМХ.УдалитьСтроки();
ПодготовитьТаблицуМХ();
Параметры.ТаблицаМХ.Выгрузить(Параметры.ТаблицаМХНач);

Параметры.ТаблицаДоговоров = СоздатьОбъект("ТаблицаЗначений");
Параметры.ТаблицаДоговоров.НоваяКолонка("Договор");
Параметры.ТаблицаДоговоров.НоваяКолонка("ВидДоговора");

ВыгрузитьПоПравилу(,,,, "УчетнаяПолитикаОрганизаций");
ВыгрузитьПоПравилу(,,,, "УчетнаяПолитикаПоПерсоналу");
//ВыгрузитьПоПравилу(,,,, "Константы");

Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	НУ_ОстаткиПоВзаиморасчетамСПодотчетниками();
	НУ_ОстаткиПоВзаиморасчетамСПоставщиками();
	Параметры.ВременнаяТаблицаРасчетов.Выгрузить(Параметры.ВременнаяТаблицаРасчетовКон);
	Параметры.ВременнаяТаблицаРасчетов.УдалитьСтроки();
	Параметры.ОстаткиПоВзаиморасчетамСПодотчетниками.УдалитьСтроки();
	Параметры.ОстаткиПоВзаиморасчетамСПоставщиками.УдалитьСтроки();
	//ТаблицаНДС
	Параметры.ТаблицаНДС.Выгрузить(Параметры.ТаблицаНДСКон);
	Параметры.ТаблицаНДС.УдалитьСтроки();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

Параметры.ПараметрыАлгоритмов.Установить("Раздел1", "");

Параметры.ОстаткиПоВзаиморасчетамСПодотчетниками.УдалитьСтроки();
НУ_ОстаткиПоВзаиморасчетамСПодотчетниками();
НУ_ОстаткиПоВзаиморасчетамСПоставщиками();
Параметры.ВременнаяТаблицаРасчетов.Выгрузить(Параметры.ВременнаяТаблицаРасчетовНач);
Параметры.ВременнаяТаблицаРасчетов.УдалитьСтроки();
Параметры.ОстаткиПоВзаиморасчетамСПодотчетниками.УдалитьСтроки();
Параметры.ОстаткиПоВзаиморасчетамСПоставщиками.УдалитьСтроки();
Параметры.ТаблицаНДС.Выгрузить(Параметры.ТаблицаНДСНач);
Параметры.ТаблицаНДС.УдалитьСтроки();

Параметры.ТаблицаСчетовРазделовУчета = СоздатьОбъект("ТаблицаЗначений");
Параметры.ТаблицаСчетовРазделовУчета.НоваяКолонка("СчетаГруппы");
Параметры.ТаблицаСчетовРазделовУчета.НоваяКолонка("Счета");
Параметры.ТаблицаСчетовРазделовУчета.НоваяКолонка("СчетаИсключения");
Параметры.ТаблицаСчетовРазделовУчета.НоваяКолонка("РазделУчета");

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "ОсновныеСредства";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "01, 02, 03";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= """010""";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= """10"", ""11"", ""001"", ""011""";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "НематериальныеАктивыИНИОКР";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "04, 05";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= "";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= "";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "КапитальныеВложения";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "07, 08";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= "";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= "";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "Материалы";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "10";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= "";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= """10.11"",""10.12"",""10.13""";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "НезавершенноеПроизводство";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "20, 23";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= "";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= "";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "Товары";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "41";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= "";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= "";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "ГотоваяПродукцияИПолуфабрикаты";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "43, 21";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= "";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= "";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "ТоварыОтгруженные";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "45";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= "";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= "";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "ДенежныеСредства";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "50, 51, 52, 53, 54, 55, 56, 57, 58, 59";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= "";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= "";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "РасчетыСПоставщикамиИПодрядчиками";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "60";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= "";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= """60.3"", ""60.4""";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "РасчетыСПокупателямиИЗаказчиками";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "62";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= "";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= "";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "РасчетыПоНалогамИСборам";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "68, 69";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= "";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= "";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "РасчетыСПерсоналомПоОплатеТрудаИДепонентам";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "70";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= """76.4""";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= """76""";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "РасчетыСПодотчетнымиЛицами";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "71";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= "";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= "";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "РасчетыСУчредителями";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "75";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= "";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= "";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "РасчетыСПрочимиДебиторамиИКредиторами";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "76";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= "";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= """76.1"", ""76.3"", ""76.4"", ""76.11"", ""76.АВ"", ""76.Н"", ""76.Н.1"", ""76.Н.2"", ""76.Н.3""";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "НДСПоПриобретеннымЦенностям";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "19";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= "";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= "";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "НДСПоАвансамПолученным";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= """76.АВ""";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= """76""";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "Капитал";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "80, 81, 82, 83, 84, 85, 86";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= "";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= "";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "РасходыБудущихПериодов";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "97";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= "";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= "";
</ПередВыгрузкойДанных>
	<ПослеВыгрузкиДанных>Если ПустоеЗначение(Параметры.СписокСчетовРасчетов) = 0 Тогда
	Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
		ВыделитьАвансы();
	КонецЕсли;
КонецЕсли;

ВыгрузитьПоПравилу(,,,, "Работники");
ВыгрузитьПоПравилу(,,,, "УволенныеРаботники");

ОбщийСписокОС = Параметры.СписокОС;
Подразделения = СоздатьОбъект("ТаблицаЗначений");
Подразделения.НоваяКолонка("Подразделение");
Подразделения.НоваяКолонка("СписокОС");

Подразделения.НоваяСтрока();
Подразделения.Подразделение = "Основное подразделение";

Подразделения.СписокОС = ОбщийСписокОС;
	
ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.УдалитьВсе();
ВходящиеДанные.Установить("ОС", Подразделения.СписокОС);
ВходящиеДанные.Установить("Дата", Параметры.ДатаВводаОстатков - 1);
ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
	ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
Иначе
	ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 0);
	ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 0);
КонецЕсли;
ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ВводНачальныхОстатковОС");

Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	ВходящиеДанные.Установить("НМА", Параметры.СписокНМА);
	ВыгрузитьПоПравилу(,, ВходящиеДанные,, "РегистрацияОплатыОсновныхСредствДляУСН");
КонецЕсли;

Параметры.СписокНМА.ВыбратьСтроки();
ВходящиеДанные.УдалитьВсе();
ВходящиеДанные.Установить("НМА", Параметры.СписокНМА);
ВходящиеДанные.Установить("Дата", Параметры.ДатаВводаОстатков - 1);
ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
	ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
Иначе
	ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 0);
	ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 0);
КонецЕсли;
ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ВводНачальныхОстатковНМАИНИОКР");

Если Параметры.ДатаВводаОстатков &lt;&gt;  Параметры.ДатаКонцаПериодаВыгрузки Тогда
	ОбщийСписокОС = Параметры.СписокОСКон;
	Подразделения = СоздатьОбъект("ТаблицаЗначений");
	Подразделения.НоваяКолонка("Подразделение");
	Подразделения.НоваяКолонка("СписокОС");
	
	Подразделения.НоваяСтрока();
	Подразделения.Подразделение = "Основное подразделение";
	
	Подразделения.СписокОС = ОбщийСписокОС;
	
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
	ВходящиеДанные.УдалитьВсе();
	ВходящиеДанные.Установить("ОС", Подразделения.СписокОС);
	ВходящиеДанные.Установить("Дата", Параметры.ДатаКонцаПериодаВыгрузки);
	ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 0);
	ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
	ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
	ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ВводНачальныхОстатковОС");
	
	ВходящиеДанные.Установить("НМА", Параметры.СписокНМАКон);
	ВыгрузитьПоПравилу(,, ВходящиеДанные,, "РегистрацияОплатыОсновныхСредствДляУСН");
	
	Параметры.СписокНМАКон.ВыбратьСтроки();
	ВходящиеДанные.УдалитьВсе();
	ВходящиеДанные.Установить("НМА", Параметры.СписокНМАКон);
	ВходящиеДанные.Установить("Дата", Параметры.ДатаКонцаПериодаВыгрузки);
	ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 0);
	ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
	ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
	ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ВводНачальныхОстатковНМАИНИОКР");
КонецЕсли;

Параметры.ТаблицаДоговоров.ВыбратьСтроки();
Пока Параметры.ТаблицаДоговоров.ПолучитьСтроку() = 1 Цикл
	ВходящиеДанные.УдалитьВсе();
	ВидДоговора = Параметры.ТаблицаДоговоров.ВидДоговора;
	ВидДоговора = ?(ПустоеЗначение(ВидДоговора) = 1, "Прочее", ВидДоговора);
	ВходящиеДанные.Установить("ВидДоговора", ВидДоговора);
	ВыгрузитьПоПравилу(Параметры.ТаблицаДоговоров.Договор,, ВходящиеДанные,, "ДоговорыКонтрагентовПоВидам");
КонецЦикла;

//****************************************
// Добавляем сведени о конфигурации и ИБ
ВыгрузитьСведенияОбИБ();

//****************************************
// Добавляем код проверок данных
ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("ИдентификаторКонфигурации", глИдентификаторКонфигурации());
ВыгрузитьПоПравилу(,, ВходящиеДанные,, "КонвертацииИзИнформационныхБаз1СПредприятия77");






</ПослеВыгрузкиДанных>
	<ПередЗагрузкойДанных>//*********************************************************************************************
// Настройка параметров учета
//*********************************************************************************************

// Склады
// если не включен складской учет - то включим его принудительно
БУ = ПланыСчетов.Хозрасчетный.Товары.ПолучитьОбъект();

ВестиПартионныйУчетБУ = НЕ (БУ.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Партии, "ВидСубконто") = Неопределено);
ВестиСкладскойУчетБУ  = НЕ (БУ.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады, "ВидСубконто") = Неопределено);

Если ВестиСкладскойУчетБУ Тогда
	ВестиСуммовойУчетПоСкладамБУ = БУ.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады, "ВидСубконто").Суммовой;
Иначе
	ВестиСуммовойУчетПоСкладамБУ = Ложь;
КонецЕсли;

Если НЕ ВестиСкладскойУчетБУ Тогда
	ОбщегоНазначения.ПрименитьПараметрыАналитикиМПЗ(ВестиПартионныйУчетБУ, Истина, ВестиСуммовойУчетПоСкладамБУ,);
КонецЕсли;

//*********************************************************************************************
// Денежные средства
Выполнить(Алгоритмы.ПрименитьПараметрыДляСчетовДенежныхСредств);

//*********************************************************************************************

//Работники
// Алгоритм читает значение константы 7.7 и при необходимости включает аналитику на счете 70
Выполнить(Алгоритмы.ПрименитьПараметрыРасчетовССотрудниками);
</ПередЗагрузкойДанных>
	<ПослеЗагрузкиОбъекта>Если ИмяТипаОбъекта = "Справочник" ИЛИ ИмяТипаОбъекта = "ПланВидовХарактеристик" Тогда
	Если НЕ ЗначениеЗаполнено(Объект.Код) Тогда
		Объект.УстановитьНовыйКод();
	КонецЕсли;
	
ИначеЕсли ИмяТипаОбъекта = "Документ" Тогда
	Если Не ЗначениеЗаполнено(Объект.Номер) Тогда
		Объект.УстановитьНовыйНомер();
	КонецЕсли;
КонецЕсли;</ПослеЗагрузкиОбъекта>
	<Параметры>
		<Параметр Имя="ВременнаяТаблицаРасчетов                          " Наименование="ВременнаяТаблицаРасчетов" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ВременнаяТаблицаРасчетовКон                       " Наименование="ВременнаяТаблицаРасчетов" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ВременнаяТаблицаРасчетовНач                       " Наименование="ВременнаяТаблицаРасчетов" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ВременнаяТаблицаРасчетовОсн                       " Наименование="ВременнаяТаблицаРасчетов" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ВыгружатьБезВалют                                 " Наименование="ВыгружатьБезВалют" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ВыгружатьКоды                                     " Наименование="ВыгружатьКодыСправочников" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ВычетыСотрудниковпоНДФЛ                           " Наименование="Таблицы вычетов сотрудников по НДФЛ" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ВычетыСотрудниковпоНДФЛЛичный                     " Наименование="Таблица личных вычетов сотрудников по НДФЛ" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ДатаВводаОстатков                                 " Наименование="ДатаВводаОстатков" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ДатаКонцаПериодаВыгрузки                          " Наименование="ДатаКонцаПериодаВыгрузки" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ДлинаКода                                         " Наименование="ДлинаКода" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ИмяТаблицы                                        " Наименование="Имя таблицы прочих расходов                                        " ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ОбъектНалогообложения                             " Наименование="ОбъектНалогообложения" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="Организация                                       " Наименование="Организация" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ОстаткиПоВзаиморасчетамCСотрудниками              " Наименование="ОстаткиПоВзаиморасчетамCСотрудниками" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ОстаткиПоВзаиморасчетамПоНалогам                  " Наименование="ОстаткиПоВзаиморасчетамПоНалогам" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ОстаткиПоВзаиморасчетамСПодотчетниками            " Наименование="ОстаткиПоВзаиморасчетамСПодотчетниками" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ОстаткиПоВзаиморасчетамСПокупателями              " Наименование="ОстаткиПоВзаиморасчетамСПокупателями" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ОстаткиПоВзаиморасчетамСПоставщиками              " Наименование="ОстаткиПоВзаиморасчетамСПоставщиками" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ОстаткиПоТМЦ                                      " Наименование="ОстаткиПоТМЦ" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ОстаткиПоТМЦПереданные                            " Наименование="ОстаткиПоТМЦПереданные" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ПараметрыАлгоритмов                               " Наименование="ПараметрыАлгоритмов" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="РасходыЗарплата                                   " Наименование="РасходыЗарплата" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="РасходыНалоги                                     " Наименование="РасходыНалоги" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="РасходыНоменклатура                               " Наименование="РасходыНоменклатура" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="РасходыРБП                                        " Наименование="РасходыРБП" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="РасходыУслуги                                     " Наименование="РасходыУслуги" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="Рубли                                             " Наименование="Рубли" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="СписокНМА                                         " Наименование="СписокНМА" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="СписокНМАКон                                      " Наименование="СписокНМАКон" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="СписокОС                                          " Наименование="СписокОС" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="СписокОСКон                                       " Наименование="СписокОСКон" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="СписокРаботников                                  " Наименование="СписокРаботников" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="СписокСчетовРасчетов                              " Наименование="СписокСчетовРасчетов" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="СписокСчетовСкладскогоУчета                       " Наименование="СписокСчетовСкладскогоУчета" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="СписокУволенныхРаботников                         " Наименование="СписокУволенныхРаботников" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="СпрВалюты                                         " Наименование="СпрВалюты" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="СтрокаТаблицыЗначений                             " Наименование="СтрокаТаблицыЗначений" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="СчетВводаОстатков                                 " Наименование="СчетВводаОстатков" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ТаблицаДоговоров                                  " Наименование="ТаблицаДоговоров" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ТаблицаМХ                                         " Наименование="ТаблицаМХ" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ТаблицаМХКон                                      " Наименование="ТаблицаМХКон" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ТаблицаМХНач                                      " Наименование="ТаблицаМХНач" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ТаблицаНДС                                        " Наименование="ТаблицаНДС" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ТаблицаНДСКон                                     " Наименование="ТаблицаНДС" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ТаблицаНДСНач                                     " Наименование="ТаблицаНДС" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ТаблицаПроводок                                   " Наименование="ТаблицаПроводок" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ТаблицаПроводокОбороты                            " Наименование="ТаблицаПроводокОбороты" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ТаблицаСчетовРазделовУчета                        " Наименование="Таблица соответствий разделов учета документа ввода остатков и счетов" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
	</Параметры>
	<Обработки/>
	<ПравилаКонвертацииОбъектов>
		<Группа>
			<Код>ОбъектыУчета</Код>
			<Наименование>Объекты учета</Наименование>
			<Порядок>100</Порядок>
			<Группа>
				<Код>Справочники</Код>
				<Наименование>Справочники</Наименование>
				<Порядок>100</Порядок>
				<Правило>
					<Код>БанковскиеСчета</Код>
					<Наименование>СправочникСсылка.БанковскиеСчета --&gt; СправочникСсылка.БанковскиеСчета</Наименование>
					<Порядок>50</Порядок>
					<Источник>СправочникСсылка.БанковскиеСчета</Источник>
					<Приемник>СправочникСсылка.БанковскиеСчета</Приемник>
					<Свойства>
						<Свойство Отключить="true">
							<Код>8</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>12</Код>
							<Наименование>Номер --&gt; НомерСчета</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Номер" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="НомерСчета" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>БанкОрганизации --&gt; Банк</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="БанкОрганизации" Вид="Реквизит" Тип="СправочникСсылка.Банки"/>
							<Приемник Имя="Банк" Вид="Реквизит" Тип="СправочникСсылка.Банки"/>
							<КодПравилаКонвертации>Банки                                             </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>БанкДляРасчетов --&gt; БанкДляРасчетов</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="БанкДляРасчетов" Вид="Реквизит" Тип="СправочникСсылка.Банки"/>
							<Приемник Имя="БанкДляРасчетов" Вид="Реквизит" Тип="СправочникСсылка.Банки"/>
							<КодПравилаКонвертации>Банки                                             </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование>Корреспондент --&gt; ТекстКорреспондента</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="Корреспондент" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="ТекстКорреспондента" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование>МесяцПрописью --&gt; МесяцПрописью</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="МесяцПрописью" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="МесяцПрописью" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование>СуммаБез00Копеек --&gt; СуммаБезКопеек</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="СуммаБез00Копеек" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="СуммаБезКопеек" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование> --&gt; ВидСчета</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидСчета" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Значение = "Расчетный";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование>НомерИДатаРазрешения --&gt; НомерИДатаРазрешения</Наименование>
							<Порядок>1000</Порядок>
							<Источник Имя="НомерИДатаРазрешения" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="НомерИДатаРазрешения" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование>ДатаОткрытияСчета --&gt; ДатаОткрытия</Наименование>
							<Порядок>1100</Порядок>
							<Источник Имя="ДатаОткрытияСчета" Вид="Реквизит" Тип="Дата"/>
							<Приемник Имя="ДатаОткрытия" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>ДатаЗакрытияСчета --&gt; ДатаЗакрытия</Наименование>
							<Порядок>1200</Порядок>
							<Источник Имя="ДатаЗакрытияСчета" Вид="Реквизит" Тип="Дата"/>
							<Приемник Имя="ДатаЗакрытия" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование> --&gt; Владелец</Наименование>
							<Порядок>1300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Владелец" Вид="Свойство"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование> --&gt; ВалютаДенежныхСредств</Наименование>
							<Порядок>1400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаДенежныхСредств" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<ПередВыгрузкой>Если Источник.ТипСчета = Перечисление.ТипыБанковскихСчетов.Рублевый Тогда
	Значение = Параметры.Рубли;
	ИмяПКО = "Валюты";
	
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование>ВсегдаУказыватьКПП --&gt; ВсегдаУказыватьКПП</Наименование>
							<Порядок>1500</Порядок>
							<Источник Имя="ВсегдаУказыватьКПП" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="ВсегдаУказыватьКПП" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>НоменклатурныеГруппы</Код>
					<Наименование>СправочникСсылка.ВидыНоменклатуры --&gt; СправочникСсылка.НоменклатурныеГруппы</Наименование>
					<Порядок>100</Порядок>
					<ПередВыгрузкой>Отказ = Источник.ЭтоГруппа();</ПередВыгрузкой>
					<Источник>СправочникСсылка.ВидыДеятельности</Источник>
					<Приемник>СправочникСсылка.НоменклатурныеГруппы</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ДоговорыКонтрагентовПоВидам</Код>
					<Наименование>СправочникСсылка.Договоры --&gt; СправочникСсылка.ДоговорыКонтрагентов</Наименование>
					<Порядок>150</Порядок>
					<Источник>СправочникСсылка.Договоры</Источник>
					<Приемник>СправочникСсылка.ДоговорыКонтрагентов</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Договоры"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>Владелец --&gt; Владелец</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="Владелец" Вид="Свойство" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="Владелец" Вид="Свойство" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование> --&gt; ВидДоговора</Наименование>
							<Порядок>500</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДоговора" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыДоговоровКонтрагентов"/>
							<ПередВыгрузкой>Если ТипЗначения(ВходящиеДанные) = 0 Тогда
	Значение = "Прочее";
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>6</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ДоговорыКонтрагентов</Код>
					<Наименование>СправочникСсылка.Договоры --&gt; СправочникСсылка.ДоговорыКонтрагентов</Наименование>
					<Порядок>200</Порядок>
					<ПередВыгрузкой>ВидДоговора = Параметры.ПараметрыАлгоритмов.Получить("ВидДоговора");
Если (ПустоеЗначение(Источник) = 0) и (ВидДоговора &lt;&gt; "Прочее") и (ПустоеЗначение(ВидДоговора) = 0) Тогда
	Если Источник.ЭтоГруппа() = 0 Тогда
		НомСтр = 0;
		Если Параметры.ТаблицаДоговоров.НайтиЗначение(Источник, НомСтр, "Договор") = 0 Тогда
			Параметры.ТаблицаДоговоров.НоваяСтрока();
			Параметры.ТаблицаДоговоров.Договор = Источник;
			Параметры.ТаблицаДоговоров.ВидДоговора = ВидДоговора;
		Иначе
			Параметры.ТаблицаДоговоров.УстановитьЗначение(НомСтр, "Договор", Источник);
			Параметры.ТаблицаДоговоров.УстановитьЗначение(НомСтр, "ВидДоговора", ВидДоговора);			
		КонецЕсли;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.Договоры</Источник>
					<Приемник>СправочникСсылка.ДоговорыКонтрагентов</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>11</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>8</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Если Параметры.ВыгружатьКоды = 1 Тогда
	Значение = ПривестиНомерКДлине(Источник.Код, Параметры.ДлинаКода);
	
Иначе
	Отказ = 1 ;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>9</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>10</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Договоры"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true">
							<Код>7</Код>
							<Наименование>Владелец --&gt; Владелец</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="Владелец" Вид="Свойство" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="Владелец" Вид="Свойство" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true">
							<Код>12</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Если Источник.ЭтоГруппа() = 1 Тогда
	Отказ = 1;
	
Иначе
	Значение = "1";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>1</Код>
							<Наименование> --&gt;</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
							<ПередОбработкойВыгрузки>Отказ = Источник.ЭтоГруппа();</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>5</Код>
								<Наименование>ВалютаДоговора --&gt; ВалютаВзаиморасчетов</Наименование>
								<Порядок>600</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ВалютаВзаиморасчетов" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
								<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
								<ПередВыгрузкой>Если ПустоеЗначение(Источник.ВалютаДоговора) = 1 Тогда
	Значение = Параметры.Рубли;
	//ИмяПКО = "ВалютаРуб";
Иначе
	Значение = Источник.ВалютаДоговора;
	//ИмяПКО = "Валюты";
КонецЕсли;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>6</Код>
								<Наименование>ВестиУчетРасчетовУЕ --&gt; РасчетыВУсловныхЕдиницах</Наименование>
								<Порядок>700</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="РасчетыВУсловныхЕдиницах" Вид="Реквизит" Тип="Булево"/>
								<ПередВыгрузкой>Если Источник.ОплатаДоговора = 2 Тогда
	Значение = 0;
ИначеЕсли ПустоеЗначение(Источник.ВалютаДоговора) = 0 Тогда
	Значение = 1;
Иначе
	Значение = 0;
КонецЕсли;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>3</Код>
								<Наименование> --&gt; ВидДоговора</Наименование>
								<Порядок>800</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ВидДоговора" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыДоговоровКонтрагентов"/>
								<ПередВыгрузкой>Если ПустоеЗначение(Параметры.ПараметрыАлгоритмов.Получить("ВидДоговора")) = 0 Тогда
	Значение = Параметры.ПараметрыАлгоритмов.Получить("ВидДоговора");
Иначе
	Значение = "Прочее";
КонецЕсли;
</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>13</Код>
								<Наименование>ВидДоговора --&gt; ВидВзаиморасчетов</Наименование>
								<Порядок>850</Порядок>
								<Источник Имя="ВидДоговора" Вид="Реквизит" Тип="СправочникСсылка.ВидыДоговоров"/>
								<Приемник Имя="ВидВзаиморасчетов" Вид="Реквизит" Тип="СправочникСсылка.ВидыВзаиморасчетов"/>
								<КодПравилаКонвертации>ВидыВзаиморасчетов                                </КодПравилаКонвертации>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>СтавкиНДС</Код>
					<Наименование>СправочникСсылка.СтавкиНДС --&gt; ПеречислениеСсылка.СтавкиНДС</Наименование>
					<Порядок>250</Порядок>
					<ПередВыгрузкой>Если Источник.Ставка = 18 Тогда
	Значение = "НДС18";
	
ИначеЕсли Источник.Ставка = 10 Тогда
	Значение = "НДС10";
	
ИначеЕсли Источник.Ставка = 20 Тогда
	Значение = "НДС20";
	
Иначе
	Значение = "БезНДС";
КонецЕсли;</ПередВыгрузкой>
					<Источник>СправочникСсылка.СтавкиНДС</Источник>
					<Приемник>ПеречислениеСсылка.СтавкиНДС</Приемник>
					<Свойства/>
					<Значения/>
				</Правило>
				<Правило>
					<Код>Контрагенты</Код>
					<Наименование>СправочникСсылка.Контрагенты --&gt; СправочникСсылка.Контрагенты</Наименование>
					<Порядок>300</Порядок>
					<ПослеВыгрузки>Если Источник.ЭтоГруппа() = 0 Тогда
	ВыгрузитьПоПравилу(Источник,,,, "ТелефоныКонтрагента");
	ВыгрузитьПоПравилу(Источник,,,, "ЮридическийАдресКонтрагента");
	ВыгрузитьПоПравилу(Источник,,,, "ФактическийАдресКонтрагента");
КонецЕсли;</ПослеВыгрузки>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.Контрагенты</Источник>
					<Приемник>СправочникСсылка.Контрагенты</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>12</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>9</Код>
							<Наименование> --&gt; Код</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Значение = ПривестиНомерКДлине(Источник.Код, 8);</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>10</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>11</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование>ИНН --&gt; ИНН</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="ИНН" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="ИНН" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Если Источник.ЭтоГруппа() = 0 Тогда
Значение = ?(СтрДлина(СокрЛП(Источник.ИНН)) &gt; 12, СокрЛП(Лев(Источник.ИНН, 10)), СокрЛП(Источник.ИНН));
	
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>1</Код>
							<Наименование> --&gt;</Наименование>
							<Порядок>1200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
							<ПередОбработкойВыгрузки>Отказ = Источник.ЭтоГруппа();</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>8</Код>
								<Наименование>ПолнНаименование --&gt; НаименованиеПолное</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="ПолнНаименование" Вид="Реквизит" Тип="Строка"/>
								<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>6</Код>
								<Наименование>ОсновнойДоговор --&gt; ОсновнойДоговорКонтрагента</Наименование>
								<Порядок>700</Порядок>
								<Источник Имя="ОсновнойДоговор" Вид="Реквизит" Тип="СправочникСсылка.Договоры"/>
								<Приемник Имя="ОсновнойДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
								<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>7</Код>
								<Наименование>ОсновнойСчет --&gt; ОсновнойБанковскийСчет</Наименование>
								<Порядок>800</Порядок>
								<Источник Имя="ОсновнойСчет" Вид="Реквизит" Тип="СправочникСсылка.РасчетныеСчета"/>
								<Приемник Имя="ОсновнойБанковскийСчет" Вид="Реквизит" Тип="СправочникСсылка.БанковскиеСчета"/>
								<КодПравилаКонвертации>РасчетныеСчета                                    </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>4</Код>
								<Наименование> --&gt; ЮрФизЛицо</Наименование>
								<Порядок>900</Порядок>
								<Источник Имя="ВидКонтрагента" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыКонтрагентов"/>
								<Приемник Имя="ЮрФизЛицо" Вид="Реквизит" Тип="ПеречислениеСсылка.ЮрФизЛицо"/>
								<КодПравилаКонвертации>ЮрФизЛицо                                         </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>3</Код>
								<Наименование> --&gt; КПП</Наименование>
								<Порядок>1000</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="КПП" Вид="Реквизит" Тип="Строка"/>
								<ПередВыгрузкой>Значение = ?(СтрДлина(СокрЛП(Источник.ИНН)) &gt; 12, СокрЛП(Сред(Источник.ИНН, 12, 9)), "");</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>2</Код>
								<Наименование> --&gt; ДокументУдостоверяющийЛичность</Наименование>
								<Порядок>1100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДокументУдостоверяющийЛичность" Вид="Реквизит" Тип="Строка"/>
								<ПередВыгрузкой>Значение = ", серия: " + Источник.ДокументСерия + ", № " + Источник.ДокументНомер + ", выдан: "+ Источник.ДокументДатаВыдачи + ", " + Источник.ДокументКемВыдан;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>13</Код>
								<Наименование>КодОКПО --&gt; КодПоОКПО</Наименование>
								<Порядок>1150</Порядок>
								<Источник Имя="КодОКПО" Вид="Реквизит" Тип="Строка"/>
								<Приемник Имя="КодПоОКПО" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>14</Код>
								<Наименование> --&gt; ГоловнойКонтрагент</Наименование>
								<Порядок>1200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ГоловнойКонтрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
								<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
								<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ДоходыБудущихПериодов</Код>
					<Наименование>СправочникСсылка.ДоходыБудущихПериодов --&gt; СправочникСсылка.ДоходыБудущихПериодов</Наименование>
					<Порядок>350</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.ДоходыБудущихПериодов</Источник>
					<Приемник>СправочникСсылка.ДоходыБудущихПериодов</Приемник>
					<Свойства>
						<Свойство Отключить="true">
							<Код>1</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>Склады</Код>
					<Наименование>СправочникСсылка.МестаХранения --&gt; СправочникСсылка.Склады</Наименование>
					<Порядок>400</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.МестаХранения</Источник>
					<Приемник>СправочникСсылка.Склады</Приемник>
					<Свойства>
						<Свойство Отключить="true">
							<Код>1</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>ТипСклада --&gt; ВидСклада</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="ТипСклада" Вид="Реквизит" Тип="ПеречислениеСсылка.ТипыСкладов"/>
							<Приемник Имя="ВидСклада" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыСкладов"/>
							<КодПравилаКонвертации>ВидыСкладов                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>ТипЦен --&gt; ТипЦенРозничнойТорговли</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="ТипЦен" Вид="Реквизит" Тип="СправочникСсылка.ТипыЦен"/>
							<Приемник Имя="ТипЦенРозничнойТорговли" Вид="Реквизит" Тип="СправочникСсылка.ТипыЦенНоменклатуры"/>
							<КодПравилаКонвертации>ТипыЦенНоменклатуры                               </КодПравилаКонвертации>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>НематериальныеАктивы</Код>
					<Наименование>СправочникСсылка.НематериальныеАктивы --&gt; СправочникСсылка.НематериальныеАктивы</Наименование>
					<Порядок>450</Порядок>
					<ПослеВыгрузки>Если Источник.ЭтоГруппа() = 0 Тогда
	НомСтроки = 0;
	Если Параметры.СписокНМА.НайтиЗначение(Источник, НомСтроки, "НМА") = 0 Тогда
		Параметры.СписокНМА.НоваяСтрока();
		Параметры.СписокНМА.НМА = Источник;
		//Параметры.СписокНМА.СтоимостьБУ = 0;
	КонецЕсли;
КонецЕсли;</ПослеВыгрузки>
					<ПослеЗагрузки>Объект.Записать();
Если НЕ ЗначениеЗаполнено(Объект.ВидОбъектаУчета) Тогда
	Объект.ВидОбъектаУчета = Перечисления.ВидыОбъектовУчетаНМА.НематериальныйАктив;
	Объект.Записать();
КонецЕсли;
</ПослеЗагрузки>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.НематериальныеАктивы</Источник>
					<Приемник>СправочникСсылка.НематериальныеАктивы</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>9</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>7</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>8</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.НематериальныеАктивы"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.НематериальныеАктивы"/>
							<КодПравилаКонвертации>НематериальныеАктивы                              </КодПравилаКонвертации>
						</Свойство>
						<Группа>
							<Код>1</Код>
							<Наименование> --&gt;</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
							<ПередОбработкойВыгрузки>Отказ = Источник.ЭтоГруппа();</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>3</Код>
								<Наименование>Группа --&gt; ВидНМА</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="Группа" Вид="Реквизит" Тип="ПеречислениеСсылка.ГруппыНМА"/>
								<Приемник Имя="ВидНМА" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыНМА"/>
								<КодПравилаКонвертации>ВидыНМА                                           </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>4</Код>
								<Наименование>ПрочиеСведения --&gt; ПрочиеСведения</Наименование>
								<Порядок>600</Порядок>
								<Источник Имя="ПрочиеСведения" Вид="Реквизит" Тип="Строка"/>
								<Приемник Имя="ПрочиеСведения" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>5</Код>
								<Наименование> --&gt; ВидОбъектаУчета</Наименование>
								<Порядок>800</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ВидОбъектаУчета" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыОбъектовУчетаНМА"/>
								<ПередВыгрузкой>Значение = "НематериальныйАктив";
</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>11</Код>
								<Наименование>Наименование --&gt; НаименованиеПолное</Наименование>
								<Порядок>1050</Порядок>
								<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
								<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
						</Группа>
						<Свойство Поиск="true">
							<Код>10</Код>
							<Наименование>ПрочиеСведения --&gt; ПрочиеСведения</Наименование>
							<Порядок>1000</Порядок>
							<Источник Имя="ПрочиеСведения" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="ПрочиеСведения" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Если Источник.ЭтоГруппа() = 1 Тогда
	Отказ = 1;
	
Иначе
	Значение = СокрЛП(Источник.ПрочиеСведения + " # ИНН организации: " + СокрЛП(Константа.ИННОрганизации) + "; инв. ном.: " + СокрЛП(Источник.Код) + " #");
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>НомераГТД</Код>
					<Наименование>СправочникСсылка.ГТД --&gt; СправочникСсылка.НомераГТД</Наименование>
					<Порядок>500</Порядок>
					<Источник>СправочникСсылка.ГТД</Источник>
					<Приемник>СправочникСсылка.НомераГТД</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>Наименование --&gt; Код</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>Номенклатура</Код>
					<Наименование>СправочникСсылка.Номенклатура --&gt; СправочникСсылка.Номенклатура</Наименование>
					<Порядок>550</Порядок>
					<ПередВыгрузкой>Если Источник.ЭтоГруппа() = 0 Тогда
	Отказ = 0;
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.Номенклатура</Источник>
					<Приемник>СправочникСсылка.Номенклатура</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>11</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>8</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Значение = ПривестиНомерКДлине(Источник.Код, 8);</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>9</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>10</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Номенклатура"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Номенклатура"/>
							<КодПравилаКонвертации>РодительНоменклатуры                              </КодПравилаКонвертации>
							<ПередВыгрузкой>ТипНоменклатуры = Источник.ТипНоменклатуры;

Если ПустоеЗначение(Источник.Родитель) = 1 Тогда
			
	ИмяГруппы = "Товары";
	Если ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция Тогда
		ИмяГруппы = "Продукция";
	ИначеЕсли ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Материал Тогда
		ИмяГруппы = "Материалы";
	ИначеЕсли ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Услуга Тогда
		ИмяГруппы = "Услуги";
	ИначеЕсли ТипНоменклатуры = Перечисление.ТипыНоменклатуры.ПосредническаяУслуга Тогда
		ИмяГруппы = "Услуги";
	ИначеЕсли ТипНоменклатуры = Перечисление.ТипыНоменклатуры.УслугаЕНВД Тогда
		ИмяГруппы = "Услуги";
	КонецЕсли;
	
	ИмяПКО = "ГруппаНоменклатуры";
	Значение = 1;
Иначе
	
	ИмяГруппы = Источник.Родитель.Наименование + " (" + ТипНоменклатуры + ")";
	ИмяПКО = "РодительНоменклатуры";
	
КонецЕсли;

ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
ИсходящиеДанные.Установить("ТипНоменклатуры", ТипНоменклатуры);
ИсходящиеДанные.Установить("Наименование", ИмяГруппы);</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>1</Код>
							<Наименование> --&gt;</Наименование>
							<Порядок>1100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
							<ПередОбработкойВыгрузки>Если Источник.ЭтоГруппа() = 0 Тогда
	Отказ = 0;
Иначе
	Отказ = 1;
КонецЕсли;</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>5</Код>
								<Наименование>ПолнНаименование --&gt; НаименованиеПолное</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="ПолнНаименование" Вид="Реквизит" Тип="Строка"/>
								<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
								<ПередВыгрузкой>Если ПустоеЗначение(Источник.ПолнНаименование) = 1 Тогда
	Значение = Источник.Наименование;
КонецЕсли;
</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>3</Код>
								<Наименование>ВидНоменклатуры --&gt; НоменклатурнаяГруппа</Наименование>
								<Порядок>600</Порядок>
								<Источник Имя="ВидДеятельности" Вид="Реквизит" Тип="СправочникСсылка.ВидыДеятельности"/>
								<Приемник Имя="НоменклатурнаяГруппа" Вид="Реквизит" Тип="СправочникСсылка.НоменклатурныеГруппы"/>
								<КодПравилаКонвертации>НоменклатурныеГруппы                              </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>4</Код>
								<Наименование>ЕдиницаИзмерения --&gt; БазоваяЕдиницаИзмерения</Наименование>
								<Порядок>700</Порядок>
								<Источник Имя="ЕдиницаИзмерения" Вид="Реквизит" Тип="СправочникСсылка.ЕдиницыИзмерений"/>
								<Приемник Имя="БазоваяЕдиницаИзмерения" Вид="Реквизит" Тип="СправочникСсылка.КлассификаторЕдиницИзмерения"/>
								<КодПравилаКонвертации>КлассификаторЕдиницИзмерения                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>6</Код>
								<Наименование>СтавкаНДС --&gt; СтавкаНДС</Наименование>
								<Порядок>800</Порядок>
								<Источник Имя="СтавкаНДС" Вид="Реквизит" Тип="СправочникСсылка.СтавкиНДС"/>
								<Приемник Имя="СтавкаНДС" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
								<ПередВыгрузкой>Если ПустоеЗначение(Источник.СтавкаНДС) = 1 Тогда
	Значение = "БезНДС";
	
ИначеЕсли Источник.СтавкаНДС.Ставка = 18 Тогда
	Значение = "НДС18";
	
ИначеЕсли Источник.СтавкаНДС.Ставка = 10 Тогда
	Значение = "НДС10";
	
ИначеЕсли Источник.СтавкаНДС.Ставка = 20 Тогда
	Значение = "НДС20";
	
Иначе
	Значение = "БезНДС";
КонецЕсли;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>7</Код>
								<Наименование>СтранаПроисхождения --&gt; СтранаПроисхождения</Наименование>
								<Порядок>900</Порядок>
								<Источник Имя="СтранаПроисхождения" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="СтранаПроисхождения" Вид="Реквизит" Тип="СправочникСсылка.КлассификаторСтранМира"/>
								<КодПравилаКонвертации>КлассификаторСтранМира                            </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>2</Код>
								<Наименование> --&gt; Услуга</Наименование>
								<Порядок>1000</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Услуга" Вид="Реквизит" Тип="Булево"/>
								<ПередВыгрузкой>Если Источник.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Услуга Тогда
	Значение = 1;
	
ИначеЕсли Источник.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.ПосредническаяУслуга Тогда
	Значение = 1;
	
ИначеЕсли Источник.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.УслугаЕНВД Тогда
	Значение = 1;
	
Иначе
	Значение = 0;
КонецЕсли;</ПередВыгрузкой>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>КлассификаторСтранМира</Код>
					<Наименование>Строка --&gt; СправочникСсылка.КлассификаторСтранМира</Наименование>
					<Порядок>600</Порядок>
					<Источник>Строка</Источник>
					<Приемник>СправочникСсылка.КлассификаторСтранМира</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование> --&gt; Наименование</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Если Источник = 1 Тогда
	Значение = "РОССИЯ";
Иначе
	Значение = Источник;
КонецЕслИ;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование> --&gt; НаименованиеПолное</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Если Источник = 1 Тогда
	Значение = "Российская Федерация";
Иначе
	Значение = Источник;
КонецЕслИ;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование> --&gt; Код</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Если Источник = 1 Тогда
	Значение = 643;
Иначе
	Значение = Источник;
КонецЕслИ;</ПередВыгрузкой>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ОбъектыСтроительства_08_4</Код>
					<Наименование>СправочникСсылка.ОбъектыВнеоборотныхАктивов --&gt; СправочникСсылка.Номенклатура</Наименование>
					<Порядок>650</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.ОбъектыВнеоборотныхАктивов</Источник>
					<Приемник>СправочникСсылка.Номенклатура</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>2</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Значение = "С"+ПривестиНомерКДлине(Источник.Код, 7);</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ОбъектыВнеоборотныхАктивов"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Номенклатура"/>
							<КодПравилаКонвертации>ОбъектыСтроительства_08_4                         </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ПустоеЗначение(Источник.Родитель) = 1 Тогда
	ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
	ИсходящиеДанные.Установить("Наименование", "Оборудование (объекты основных средств)");
	ИмяПКО = "ГруппаНоменклатуры";
	Значение = "1";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование> --&gt; Услуга</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Услуга" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Отказ  = Источник.ЭтоГруппа(); Значение = 0;</ПередВыгрузкой>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ОбъектыСтроительства_08_3</Код>
					<Наименование>СправочникСсылка.ОбъектыСтроительства --&gt; СправочникСсылка.ОбъектыСтроительства</Наименование>
					<Порядок>700</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.ОбъектыВнеоборотныхАктивов</Источник>
					<Приемник>СправочникСсылка.ОбъектыСтроительства</Приемник>
					<Свойства>
						<Свойство Отключить="true">
							<Код>1</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Значение = ПривестиНомерКДлине(Источник.Код, 8);</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ОбъектыСтроительства_08_5_08_8</Код>
					<Наименование>СправочникСсылка.ОбъектыСтроительства --&gt; СправочникСсылка.НематериальныеАктивы</Наименование>
					<Порядок>750</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.ОбъектыВнеоборотныхАктивов</Источник>
					<Приемник>СправочникСсылка.НематериальныеАктивы</Приемник>
					<Свойства>
						<Свойство Отключить="true">
							<Код>3</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Значение = "С"+ПривестиНомерКДлине(Источник.Код, 7);</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>6</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ОбъектыВнеоборотныхАктивов"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.НематериальныеАктивы"/>
							<КодПравилаКонвертации>ОбъектыСтроительства_08_5_08_8                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование> --&gt; НаименованиеПолное</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Отказ = Источник.ЭтоГруппа(); Значение = Источник.Наименование;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование> --&gt; ВидОбъектаУчета</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидОбъектаУчета" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыОбъектовУчетаНМА"/>
							<ПередВыгрузкой>Отказ = Источник.ЭтоГруппа();
Значение = "НематериальныйАктив";

Если ТипЗначенияСтр(ВходящиеДанные) = "СписокЗначений" Тогда
	Счет = ВходящиеДанные.Получить("Счет");
	Если ПустоеЗначение(Счет) = 0 Тогда
		Если Счет = СчетПоКоду("08.8") Тогда
			Значение = "РасходыНаНИОКР";
		КонецЕсли;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ОсновныеСредства</Код>
					<Наименование>СправочникСсылка.ОсновныеСредства --&gt; СправочникСсылка.ОсновныеСредства</Наименование>
					<Порядок>800</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.ОсновныеСредства</Источник>
					<Приемник>СправочникСсылка.ОсновныеСредства</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>10</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>7</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>//Значение = ПривестиНомерКДлине(Источник.Код, 8);</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>8</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>9</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ОсновныеСредства"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ОсновныеСредства"/>
							<КодПравилаКонвертации>ОсновныеСредства                                  </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true">
							<Код>11</Код>
							<Наименование>ПрочиеСведения --&gt; Комментарий</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="ПрочиеСведения" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Если Источник.ЭтоГруппа() = 1 Тогда
	Отказ = 1;
	
Иначе
	Значение = СокрЛП(Источник.ПрочиеСведения + " # ИНН организации: " + СокрЛП(Константа.ИННОрганизации) + "; инв. ном.: " + СокрЛП(Источник.Код) + " #");
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>1</Код>
							<Наименование> --&gt;</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
							<ПередОбработкойВыгрузки>Отказ = Источник.ЭтоГруппа();</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>3</Код>
								<Наименование>Группа --&gt; ГруппаОС</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="Группа" Вид="Реквизит" Тип="ПеречислениеСсылка.ГруппыОС"/>
								<Приемник Имя="ГруппаОС" Вид="Реквизит" Тип="ПеречислениеСсылка.ГруппыОС"/>
								<КодПравилаКонвертации>ГруппыОС                                          </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>5</Код>
								<Наименование>ПрочиеСведения --&gt; НаименованиеПолное</Наименование>
								<Порядок>700</Порядок>
								<Источник Имя="ПрочиеСведения" Вид="Реквизит" Тип="Строка"/>
								<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>6</Код>
								<Наименование>ШифрПоЕНАОФ --&gt; ШифрПоЕНАОФ</Наименование>
								<Порядок>800</Порядок>
								<Источник Имя="ШифрПоЕНАОФ" Вид="Реквизит" Тип="СправочникСсылка.КлассификаторЕН"/>
								<Приемник Имя="ШифрПоЕНАОФ" Вид="Реквизит" Тип="СправочникСсылка.ЕдиныеНормыАмортизационныхОтчисленийОсновныхФондов"/>
								<КодПравилаКонвертации>ЕдиныеНормыАмортизационныхОтчисленийОсновныхФондов</КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>2</Код>
								<Наименование>АмортизационнаяГруппа --&gt; АмортизационнаяГруппа</Наименование>
								<Порядок>900</Порядок>
								<Источник Имя="АмортизационнаяГруппа" Вид="Реквизит" Тип="ПеречислениеСсылка.АмортизационныеГруппы"/>
								<Приемник Имя="АмортизационнаяГруппа" Вид="Реквизит" Тип="ПеречислениеСсылка.АмортизационныеГруппы"/>
								<КодПравилаКонвертации>АмортизационныеГруппы                             </КодПравилаКонвертации>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ПрочиеДоходыИРасходы</Код>
					<Наименование>СправочникСсылка.ПрочиеДоходыИРасходы --&gt; СправочникСсылка.ПрочиеДоходыИРасходы</Наименование>
					<Порядок>850</Порядок>
					<Источник>СправочникСсылка.ПрочиеДоходыИРасходы</Источник>
					<Приемник>СправочникСсылка.ПрочиеДоходыИРасходы</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>ВидПрочихДоходовИРасходов --&gt; ВидПрочихДоходовИРасходов</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="ВидПрочихДоходовИРасходов" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыПрочихДоходовИРасходов"/>
							<Приемник Имя="ВидПрочихДоходовИРасходов" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыПрочихДоходовИРасходов"/>
							<КодПравилаКонвертации>ВидыПрочихДоходовИРасходов                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование> --&gt; ВидДеятельностиДляНалоговогоУчетаЗатрат</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДеятельностиДляНалоговогоУчетаЗатрат" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыДеятельностиДляНалоговогоУчетаЗатрат"/>
							<ПередВыгрузкой>Значение = "ПредпринимательскаяДеятельностьНеОблагаемаяЕНВД";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование> --&gt; ПринятиеКналоговомуУчету</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПринятиеКналоговомуУчету" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>РасходыБудущихПериодов</Код>
					<Наименование>СправочникСсылка.РасходыБудущихПериодов --&gt; СправочникСсылка.РасходыБудущихПериодов</Наименование>
					<Порядок>900</Порядок>
					<ПередВыгрузкой>Отказ = Источник.ЭтоГруппа();</ПередВыгрузкой>
					<ПослеЗагрузки>ИмяСчетаБУ = "СчетЗатрат";
ИмяСубкБУ = "СубконтоЗатрат";
Корреспонденция = Объект;

мСведенияОСчетах = Новый Соответствие;

СведенияОСчете = БухгалтерскийУчет.ПолучитьСведенияОСчете(мСведенияОСчетах, Корреспонденция[ИмяСчетаБУ]);
Для СчетчикСубконто = 1 По 3 Цикл
	Для СчетчикСчета = 1 по СведенияОСчете.КоличествоСубконто Цикл
		Если (Корреспонденция[ИмяСубкБУ+СчетчикСубконто] = СведенияОСчете["ТипСубконто"+СчетчикСчета].ПривестиЗначение(Корреспонденция[ИмяСубкБУ+СчетчикСубконто])) и (СчетчикСчета &lt;&gt; СчетчикСубконто) Тогда
			Субконто = Корреспонденция[ИмяСубкБУ+СчетчикСчета];
			Корреспонденция[ИмяСубкБУ+СчетчикСчета] = Корреспонденция[ИмяСубкБУ+СчетчикСубконто];
			Корреспонденция[ИмяСубкБУ+СчетчикСубконто] = Субконто;
		КонецЕсли;
	КонецЦикла;
КонецЦикла;

Для СчетчикСубконто = 1 По 3 Цикл
	Если СведенияОСчете.КоличествоСубконто &gt;= СчетчикСубконто Тогда
		Корреспонденция[ИмяСубкБУ+СчетчикСубконто] = СведенияОСчете["ТипСубконто"+СчетчикСубконто].ПривестиЗначение(Корреспонденция[ИмяСубкБУ+СчетчикСубконто]);

	Иначе
		Корреспонденция[ИмяСубкБУ+СчетчикСубконто] = Неопределено;
	КонецЕсли;
КонецЦикла;
</ПослеЗагрузки>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.РасходыБудущихПериодов</Источник>
					<Приемник>СправочникСсылка.РасходыБудущихПериодов</Приемник>
					<Свойства>
						<Свойство Отключить="true">
							<Код>4</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>ДатаНачалаСписания --&gt; ДатаНачалаСписания</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="ДатаНачалаСписания" Вид="Реквизит" Тип="Дата"/>
							<Приемник Имя="ДатаНачалаСписания" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>ДатаОкончанияСписания --&gt; ДатаОкончанияСписания</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="ДатаОкончанияСписания" Вид="Реквизит" Тип="Дата"/>
							<Приемник Имя="ДатаОкончанияСписания" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>9</Код>
							<Наименование>Сумма --&gt; Сумма</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>10</Код>
							<Наименование>СчетЗатрат --&gt; СчетЗатрат</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="СчетЗатрат" Вид="Реквизит" Тип="ПланСчетовСсылка.Основной"/>
							<Приемник Имя="СчетЗатрат" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Счет", Источник.СчетЗатрат);
Параметры.ПараметрыАлгоритмов.Установить("Субконто1", Источник.Субконто1);
Параметры.ПараметрыАлгоритмов.Установить("Субконто2", Источник.Субконто2);
Параметры.ПараметрыАлгоритмов.Установить("Субконто3", Источник.Субконто3);

ДобавленныйСчет = мТаблицаПравилКонвертацииОбъектов.ПолучитьЗначение(НайтиПравило(Источник.СчетЗатрат, "Хозрасчетный"), "Значения").Получить(Строка(Источник.СчетЗатрат));
Если ПустоеЗначение(ДобавленныйСчет) = 1 Тогда
	ИмяПКО = "ХозрасчетныйСтрДоб";
Иначе
	 ИмяПКО = "Хозрасчетный";
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>Субконто1 --&gt; СубконтоЗатрат1</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="Субконто1" Вид="Реквизит"/>
							<Приемник Имя="СубконтоЗатрат1" Вид="Реквизит"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Счет", Источник.СчетЗатрат);
Параметры.ПараметрыАлгоритмов.Установить("Субконто1", Источник.Субконто1);
Параметры.ПараметрыАлгоритмов.Установить("Субконто2", Источник.Субконто2);
Параметры.ПараметрыАлгоритмов.Установить("Субконто3", Источник.Субконто3);

Параметры.ПараметрыАлгоритмов.Установить("Субконто", Источник.Субконто1);
ПриВыгрузкеСубконто();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование>Субконто2 --&gt; СубконтоЗатрат2</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="Субконто2" Вид="Реквизит"/>
							<Приемник Имя="СубконтоЗатрат2" Вид="Реквизит"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Счет", Источник.СчетЗатрат);
Параметры.ПараметрыАлгоритмов.Установить("Субконто1", Источник.Субконто1);
Параметры.ПараметрыАлгоритмов.Установить("Субконто2", Источник.Субконто2);
Параметры.ПараметрыАлгоритмов.Установить("Субконто3", Источник.Субконто3);

Параметры.ПараметрыАлгоритмов.Установить("Субконто", Источник.Субконто2);
Параметры.ПараметрыАлгоритмов.Установить("НомерСубконто", 2);
ПриВыгрузкеСубконто();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>Субконто3 --&gt; СубконтоЗатрат3</Наименование>
							<Порядок>1000</Порядок>
							<Источник Имя="Субконто3" Вид="Реквизит"/>
							<Приемник Имя="СубконтоЗатрат3" Вид="Реквизит"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Счет", Источник.СчетЗатрат);
Параметры.ПараметрыАлгоритмов.Установить("Субконто1", Источник.Субконто1);
Параметры.ПараметрыАлгоритмов.Установить("Субконто2", Источник.Субконто2);
Параметры.ПараметрыАлгоритмов.Установить("Субконто3", Источник.Субконто3);

Параметры.ПараметрыАлгоритмов.Установить("Субконто", Источник.Субконто3);
Параметры.ПараметрыАлгоритмов.Установить("НомерСубконто", 3);
ПриВыгрузкеСубконто();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование> --&gt; ВидРБП</Наименование>
							<Порядок>1500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидРБП" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыРБП"/>
							<ПередВыгрузкой>Значение = "Прочие";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование> --&gt; СпособПризнанияРасходов</Наименование>
							<Порядок>1550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособПризнанияРасходов" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыПризнанияРасходов"/>
							<ПередВыгрузкой>Значение = "ПоМесяцам";</ПередВыгрузкой>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>Резервы</Код>
					<Наименование>СправочникСсылка.Резервы --&gt; СправочникСсылка.Резервы</Наименование>
					<Порядок>950</Порядок>
					<ПередВыгрузкой>Отказ = Источник.ЭтоГруппа();</ПередВыгрузкой>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.Резервы</Источник>
					<Приемник>СправочникСсылка.Резервы</Приемник>
					<Свойства>
						<Свойство Отключить="true">
							<Код>2</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ФизическиеЛица</Код>
					<Наименование>СправочникСсылка.Сотрудники --&gt; СправочникСсылка.ФизическиеЛица</Наименование>
					<Порядок>1000</Порядок>
					<ПослеВыгрузки>Если Источник.ЭтоГруппа() = 0 Тогда

	ВычетыСотрудниковпоНДФЛ = СоздатьОбъект("Справочник.ВычетыСотрудниковпоНДФЛ");
	ВычетыСотрудниковпоНДФЛ.ИспользоватьВладельца(Источник);
	Параметры.ВычетыСотрудниковпоНДФЛ.УдалитьСтроки();
	Параметры.ВычетыСотрудниковпоНДФЛЛичный.УдалитьСтроки();

	НомСтроки = 0;
	Если Параметры.СписокРаботников.НайтиЗначение(Источник, НомСтроки, "ФизЛицо") = 0 Тогда
		Параметры.СписокРаботников.НоваяСтрока();
		Параметры.СписокРаботников.ФизЛицо = Источник;
	КонецЕсли;

	Если Источник.ХарактерРаботы.Получить(Параметры.ДатаКонцаПериодаВыгрузки) = Перечисление.ХарактерРаботы.ТрудовыеОтношенияПрекращены Тогда
		НомСтроки = 0;
		Если Параметры.СписокУволенныхРаботников.НайтиЗначение(Источник, НомСтроки, "ФизЛицо") = 0 Тогда
			Параметры.СписокУволенныхРаботников.НоваяСтрока();
			Параметры.СписокУволенныхРаботников.ФизЛицо = Источник;
		КонецЕсли;
	КонецЕсли;

	ПолноеИмя = Источник.Наименование;
	ПозицияПервогоПробела = Найти(ПолноеИмя, " ");
	Если ПозицияПервогоПробела &lt;&gt; 0 Тогда
		Фамилия = Лев(ПолноеИмя, ПозицияПервогоПробела);
		ИмяОтчество = Сред(ПолноеИмя, ПозицияПервогоПробела+1);
		ИмяОтчество = СокрЛ(ИмяОтчество);
		Имя = Лев(ИмяОтчество, 1)+".";
		
		ВходящиеДанные = СоздатьОбъект("СписокЗначений");
		ВходящиеДанные.Установить("Фамилия", Фамилия);
		ВходящиеДанные.Установить("Имя", ИмяОтчество);
		ВходящиеДанные.Установить("Отчество", "");

		ПозицияВторогоПробела = Найти(ИмяОтчество, " ");
		Если ПозицияВторогоПробела &lt;&gt; 0 Тогда
			Отчество = Сред(ИмяОтчество, ПозицияВторогоПробела+1);
			Отчество = СокрЛ(Отчество);
			
			ВходящиеДанные.Установить("Имя", Лев(ИмяОтчество, ПозицияВторогоПробела));
			ВходящиеДанные.Установить("Отчество", Отчество);
		КонецЕсли;
		
		ВыгрузитьПоПравилу(Источник,, ВходящиеДанные,, "ФИОФизЛиц");
	КонецЕсли;

	ВыгрузитьПоПравилу(Источник,,,, "СведенияОбИнвалидностиФизлиц");
	ВыгрузитьПоПравилу(Источник,,,, "ПаспортныеДанныеФизЛиц");
	ВыгрузитьПоПравилу(Источник,,,, "ГражданствоФизЛиц");
	ВыгрузитьПоПравилу(Источник,,,, "ГражданствоФизЛицНачало");
	ВыгрузитьПоПравилу(Источник,,,, "СтатусФизЛицКакНалогоплательщиковНДФЛ");
	ВыгрузитьПоПравилу(Источник,,,, "СтатусФизЛицКакНалогоплательщиковНДФЛНачало");
	ВыгрузитьПоПравилу(Источник,,,, "ТелефоныФизЛица");
	ВыгрузитьПоПравилу(Источник,,,, "АдресПоПропискеФизЛица");
	ВыгрузитьПоПравилу(Источник,,,, "ФактическийАдресФизЛица");
	ВыгрузитьПоПравилу(Источник,,,, "НДФЛДоходыПредыдущегоМестаРаботы");
	
    //Выгрузка стандартных вычетов сотрудника
	ВычетыСотрудниковпоНДФЛ.ВыбратьЭлементы();
	Пока ВычетыСотрудниковпоНДФЛ.ПолучитьЭлемент() = 1 Цикл
		Если ВычетыСотрудниковпоНДФЛ.ПометкаУдаления() = 1 Тогда
			Продолжить;
		КонецЕсли;
		
		Если (Лев(ВычетыСотрудниковпоНДФЛ.ВидВычета.КодДляОтчетности2009, 1)) &lt;&gt; "1" Тогда
			Продолжить;
		КонецЕсли;
		
		Если (ВычетыСотрудниковпоНДФЛ.ВидВычета.КодДляОтчетности2009 &lt;&gt; "103")
			И (ВычетыСотрудниковпоНДФЛ.ВидВычета.КодДляОтчетности2009 &lt;&gt; "104")
			И (ВычетыСотрудниковпоНДФЛ.ВидВычета.КодДляОтчетности2009 &lt;&gt; "105") Тогда
			
			Параметры.ВычетыСотрудниковпоНДФЛ.НоваяСтрока();
			Параметры.ВычетыСотрудниковпоНДФЛ.Физлицо = Источник;
			Параметры.ВычетыСотрудниковпоНДФЛ.КодВычета = ВычетыСотрудниковпоНДФЛ.ВидВычета;
			Параметры.ВычетыСотрудниковпоНДФЛ.КоличествоДетей = 1;
			Параметры.ВычетыСотрудниковпоНДФЛ.Период = ?(ПустоеЗначение(ВычетыСотрудниковпоНДФЛ.ДатаНачала) = 1, "",НачМесяца(ВычетыСотрудниковпоНДФЛ.ДатаНачала));
			Параметры.ВычетыСотрудниковпоНДФЛ.ПериодЗавершения = ?(ПустоеЗначение(ВычетыСотрудниковпоНДФЛ.ДатаОкончания) = 1, "",КонМесяца(ВычетыСотрудниковпоНДФЛ.ДатаОкончания));			
			
		Иначе
			Параметры.ВычетыСотрудниковпоНДФЛЛичный.НоваяСтрока();
			Параметры.ВычетыСотрудниковпоНДФЛЛичный.Физлицо = Источник;
			Параметры.ВычетыСотрудниковпоНДФЛЛичный.КодВычетаЛичный = ВычетыСотрудниковпоНДФЛ.ВидВычета.КодДляОтчетности2009;
			Параметры.ВычетыСотрудниковпоНДФЛЛичный.Период = ?(ПустоеЗначение(ВычетыСотрудниковпоНДФЛ.ДатаНачала) = 1, "",НачМесяца(ВычетыСотрудниковпоНДФЛ.ДатаНачала));
		КонецЕсли;
		
	КонецЦикла;
	
	Параметры.ВычетыСотрудниковпоНДФЛ.Свернуть("Физлицо, КодВычета, Период, ПериодЗавершения","КоличествоДетей");
	Параметры.ВычетыСотрудниковпоНДФЛЛичный.Свернуть("Физлицо, КодВычетаЛичный, Период","");
	
	Если (Параметры.ВычетыСотрудниковпоНДФЛ.КоличествоСтрок()&gt;0) 
		или (Параметры.ВычетыСотрудниковпоНДФЛЛичный.КоличествоСтрок()&gt;0) Тогда
			ВходящиеДанные = СоздатьОбъект("СписокЗначений");
			ВходящиеДанные.Установить("Период", Параметры.ДатаВводаОстатков);
			ВыгрузитьПоПравилу(Источник,, ВходящиеДанные,, "НДФЛПрименениеВычетов");
	КонецЕсли;
	
	Параметры.ВычетыСотрудниковпоНДФЛ.ВыбратьСтроки();
	Пока Параметры.ВычетыСотрудниковпоНДФЛ.ПолучитьСтроку() = 1 Цикл
		ВходящиеДанные = СоздатьОбъект("СписокЗначений");
		ВходящиеДанные.Установить("Период", Параметры.ВычетыСотрудниковпоНДФЛ.Период);
		ВходящиеДанные.Установить("ПериодЗавершения", Параметры.ВычетыСотрудниковпоНДФЛ.ПериодЗавершения);
		ВходящиеДанные.Установить("Физлицо", Параметры.ВычетыСотрудниковпоНДФЛ.Физлицо);
		ВходящиеДанные.Установить("КодВычета", Параметры.ВычетыСотрудниковпоНДФЛ.КодВычета);
		ВходящиеДанные.Установить("КоличествоДетей", Параметры.ВычетыСотрудниковпоНДФЛ.КоличествоДетей);
		ВыгрузитьПоПравилу(,, ВходящиеДанные,, "НДФЛСтандартныеВычетыНаДетей");
	КонецЦикла;
	
	Параметры.ВычетыСотрудниковпоНДФЛЛичный.ВыбратьСтроки();
	Пока Параметры.ВычетыСотрудниковпоНДФЛЛичный.ПолучитьСтроку() = 1 Цикл
		ВходящиеДанные = СоздатьОбъект("СписокЗначений");
		ВходящиеДанные.Установить("Период", Параметры.ВычетыСотрудниковпоНДФЛЛичный.Период);
		ВходящиеДанные.Установить("Физлицо", Параметры.ВычетыСотрудниковпоНДФЛЛичный.Физлицо);
		ВходящиеДанные.Установить("КодВычетаЛичный", Параметры.ВычетыСотрудниковпоНДФЛЛичный.КодВычетаЛичный);
		ВыгрузитьПоПравилу(,, ВходящиеДанные,, "НДФЛСтандартныеВычетыФизлиц");
	КонецЦикла;
	
КонецЕсли;</ПослеВыгрузки>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.Сотрудники</Источник>
					<Приемник>СправочникСсылка.ФизическиеЛица</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>11</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>8</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Значение = Источник.Код;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>9</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>10</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Сотрудники"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>ИНН --&gt; ИНН</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="ИНН" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="ИНН" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Если Источник.ЭтоГруппа() = 1 Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>1</Код>
							<Наименование> --&gt;</Наименование>
							<Порядок>1100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
							<ПередОбработкойВыгрузки>Отказ = Источник.ЭтоГруппа();</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>3</Код>
								<Наименование>ДатаРождения --&gt; ДатаРождения</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="ДатаРождения" Вид="Реквизит" Тип="Дата"/>
								<Приемник Имя="ДатаРождения" Вид="Реквизит" Тип="Дата"/>
							</Свойство>
							<Свойство>
								<Код>5</Код>
								<Наименование>МестоРождения --&gt; МестоРождения</Наименование>
								<Порядок>700</Порядок>
								<Источник Имя="МестоРождения" Вид="Реквизит" Тип="Строка"/>
								<Приемник Имя="МестоРождения" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>6</Код>
								<Наименование>Пол --&gt; Пол</Наименование>
								<Порядок>800</Порядок>
								<Источник Имя="Пол" Вид="Реквизит" Тип="ПеречислениеСсылка.Пол"/>
								<Приемник Имя="Пол" Вид="Реквизит" Тип="ПеречислениеСсылка.ПолФизическихЛиц"/>
								<КодПравилаКонвертации>ПолФизическихЛиц                                  </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>7</Код>
								<Наименование>СтраховойНомерПФР --&gt; СтраховойНомерПФР</Наименование>
								<Порядок>900</Порядок>
								<Источник Имя="СтраховойНомерПФР" Вид="Реквизит" Тип="Строка"/>
								<Приемник Имя="СтраховойНомерПФР" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>2</Код>
								<Наименование> --&gt; КодИМНС</Наименование>
								<Порядок>1000</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="КодИМНС" Вид="Реквизит" Тип="Строка"/>
								<ПередВыгрузкой>Значение = Лев(Источник.ИНН, 4);</ПередВыгрузкой>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>СтатьиЗатратНаПроизводство</Код>
					<Наименование>СправочникСсылка.СтатьиЗатратНаПроизводство --&gt; СправочникСсылка.СтатьиЗатрат</Наименование>
					<Порядок>1050</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.СтатьиЗатрат</Источник>
					<Приемник>СправочникСсылка.СтатьиЗатрат</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.СтатьиЗатрат"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.СтатьиЗатрат"/>
							<КодПравилаКонвертации>СтатьиЗатратНаПроизводство                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>ВидРасходовДляНалоговогоУчета --&gt; ВидРасходовНУ</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидРасходовНУ" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыРасходовНУ"/>
							<ПередВыгрузкой>Значение = "ПрочиеРасходы";
Отказ = Источник.ЭтоГруппа();</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование> --&gt; ВидДеятельностиДляНалоговогоУчетаЗатрат</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДеятельностиДляНалоговогоУчетаЗатрат" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыДеятельностиДляНалоговогоУчетаЗатрат"/>
							<ПередВыгрузкой>Отказ = Источник.ЭтоГруппа(); ОтнесениеРасходовКДеятельностиЕНВД();
</ПередВыгрузкой>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ТЗР</Код>
					<Наименование>СправочникСсылка.СтатьиЗатратНаПроизводство --&gt; СправочникСсылка.СтатьиЗатрат</Наименование>
					<Порядок>1100</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Приемник>СправочникСсылка.СтатьиЗатрат</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование> --&gt; Наименование</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Значение = "Транспортно - заготовительные расходы (1С:Бухгалтерия 7.7)";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование> --&gt; ВидРасходовНУ</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидРасходовНУ" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыРасходовНУ"/>
							<ПередВыгрузкой>Значение = "ПрочиеРасходы";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование> --&gt; ВидДеятельностиДляНалоговогоУчетаЗатрат</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДеятельностиДляНалоговогоУчетаЗатрат" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыДеятельностиДляНалоговогоУчетаЗатрат"/>
							<ПередВыгрузкой>ОтнесениеРасходовКДеятельностиЕНВД();</ПередВыгрузкой>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ЦенныеБумаги</Код>
					<Наименование>СправочникСсылка.ЦенныеБумаги --&gt; СправочникСсылка.ЦенныеБумаги</Наименование>
					<Порядок>1150</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.ЦенныеБумаги</Источник>
					<Приемник>СправочникСсылка.ЦенныеБумаги</Приемник>
					<Свойства>
						<Свойство Отключить="true">
							<Код>1</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>СотрудникиКонтрагенты</Код>
					<Наименование>СправочникСсылка.Контрагенты --&gt; СправочникСсылка.ФизическиеЛица</Наименование>
					<Порядок>1200</Порядок>
					<ПослеВыгрузки>	ПолноеИмя = Источник.Наименование;
	ПозицияПервогоПробела = Найти(ПолноеИмя, " ");
	Если ПозицияПервогоПробела &lt;&gt; 0 Тогда
		Фамилия = Лев(ПолноеИмя, ПозицияПервогоПробела);
		ИмяОтчество = Сред(ПолноеИмя, ПозицияПервогоПробела+1);
		ИмяОтчество = СокрЛ(ИмяОтчество);
		Имя = Лев(ИмяОтчество, 1)+".";
		
		ВходящиеДанные = СоздатьОбъект("СписокЗначений");
		ВходящиеДанные.Установить("Фамилия", Фамилия);
		ВходящиеДанные.Установить("Имя", ИмяОтчество);
		ВходящиеДанные.Установить("Отчество", "");
		
		ПозицияВторогоПробела = Найти(ИмяОтчество, " ");
		Если ПозицияВторогоПробела &lt;&gt; 0 Тогда
			Отчество = Сред(ИмяОтчество, ПозицияВторогоПробела+1);
			Отчество = СокрЛ(Отчество);
			
			ВходящиеДанные.Установить("Имя", Лев(ИмяОтчество, ПозицияВторогоПробела));
			ВходящиеДанные.Установить("Отчество", Отчество);
		КонецЕсли;
		
		ВыгрузитьПоПравилу(Источник,, ВходящиеДанные,, "ФИОФизЛицКонтр");
	КонецЕсли;
</ПослеВыгрузки>
					<Источник>СправочникСсылка.Контрагенты</Источник>
					<Приемник>СправочникСсылка.ФизическиеЛица</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>СотрудникиОрганизаций</Код>
					<Наименование>СправочникСсылка.Сотрудники --&gt; СправочникСсылка.СотрудникиОрганизаций</Наименование>
					<Порядок>1250</Порядок>
					<Источник>СправочникСсылка.Сотрудники</Источник>
					<Приемник>СправочникСсылка.СотрудникиОрганизаций</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Сотрудники"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.СотрудникиОрганизаций"/>
							<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>6</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Если Источник.ЭтоГруппа() = 1 Тогда
	Отказ = 1;
	
Иначе
	Значение = "1";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>7</Код>
							<Наименование> --&gt; </Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
							<ПередОбработкойВыгрузки>Если Источник.ЭтоГруппа() = 1 Тогда
	Отказ = 1;
КонецЕсли;</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>8</Код>
								<Наименование> --&gt; Актуальность</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Актуальность" Вид="Реквизит" Тип="Булево"/>
								<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>9</Код>
								<Наименование> --&gt; ВидЗанятости</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ВидЗанятости" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыЗанятостиВОрганизации"/>
								<ПередВыгрузкой>Значение = "ОсновноеМестоРаботы";</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>10</Код>
								<Наименование> --&gt; Физлицо</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Физлицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
								<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
								<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
			</Группа>
			<Группа>
				<Код>Перечисления</Код>
				<Наименование>Перечисления</Наименование>
				<Порядок>200</Порядок>
				<Правило>
					<Код>ВидыПлатежейВБюджет</Код>
					<Наименование>ПеречислениеСсылка.ВидыПлатежейВБюджет --&gt; ПеречислениеСсылка.ВидыПлатежейВГосБюджет</Наименование>
					<Порядок>300</Порядок>
					<Источник>ПеречислениеСсылка.ВидыПлатежей</Источник>
					<Приемник>ПеречислениеСсылка.ВидыПлатежейВГосБюджет</Приемник>
					<Свойства/>
					<Значения>
						<Значение>
							<Код>1</Код>
							<Наименование>Налог --&gt; Налог</Наименование>
							<Порядок>100</Порядок>
							<Источник>Налог</Источник>
							<Приемник>Налог</Приемник>
						</Значение>
						<Значение>
							<Код>3</Код>
							<Наименование>НалогСам --&gt; НалогСам</Наименование>
							<Порядок>200</Порядок>
							<Источник>НалогСам</Источник>
							<Приемник>НалогСам</Приемник>
						</Значение>
						<Значение>
							<Код>2</Код>
							<Наименование>НалогАкт --&gt; НалогАкт</Наименование>
							<Порядок>300</Порядок>
							<Источник>НалогАкт</Источник>
							<Приемник>НалогАкт</Приемник>
						</Значение>
						<Значение>
							<Код>5</Код>
							<Наименование>Штраф --&gt; Штраф</Наименование>
							<Порядок>400</Порядок>
							<Источник>Штраф</Источник>
							<Приемник>Штраф</Приемник>
						</Значение>
						<Значение>
							<Код>4</Код>
							<Наименование>Пени --&gt; ПениСам</Наименование>
							<Порядок>500</Порядок>
							<Источник>ПениСам</Источник>
							<Приемник>ПениСам</Приемник>
						</Значение>
						<Значение>
							<Код>6</Код>
							<Наименование>ПениАкт --&gt; ПениАкт</Наименование>
							<Порядок>600</Порядок>
							<Источник>ПениАкт</Источник>
							<Приемник>ПениАкт</Приемник>
						</Значение>
						<Значение>
							<Код>7</Код>
							<Наименование>НеПринято --&gt; НеПринято</Наименование>
							<Порядок>700</Порядок>
							<Источник>НеПринято</Источник>
							<Приемник>НеПринято</Приемник>
						</Значение>
						<Значение>
							<Код>8</Код>
							<Наименование>ПолученоИзФонда --&gt; ПолученоИзФонда</Наименование>
							<Порядок>800</Порядок>
							<Источник>ПолученоИзФонда</Источник>
							<Приемник>ПолученоИзФонда</Приемник>
						</Значение>
						<Значение>
							<Код>9</Код>
							<Наименование>РасходыПоСтрахованию --&gt; РасходыПоСтрахованию</Наименование>
							<Порядок>900</Порядок>
							<Источник>РасходыПоСтрахованию</Источник>
							<Приемник>РасходыПоСтрахованию</Приемник>
						</Значение>
					</Значения>
				</Правило>
				<Правило>
					<Код>ВидыПлатежейВФонды</Код>
					<Наименование>ПеречислениеСсылка.ВидыПлатежейВФонды --&gt; ПеречислениеСсылка.ВидыПлатежейВГосБюджет</Наименование>
					<Порядок>400</Порядок>
					<Источник>ПеречислениеСсылка.ВидыПлатежей</Источник>
					<Приемник>ПеречислениеСсылка.ВидыПлатежейВГосБюджет</Приемник>
					<Свойства/>
					<Значения>
						<Значение>
							<Код>1</Код>
							<Наименование>Взносы --&gt; Налог</Наименование>
							<Порядок>100</Порядок>
							<Источник>Налог</Источник>
							<Приемник>Налог</Приемник>
						</Значение>
						<Значение>
							<Код>3</Код>
							<Наименование>ВзносыСам --&gt; НалогСам</Наименование>
							<Порядок>200</Порядок>
							<Источник>НалогСам</Источник>
							<Приемник>НалогСам</Приемник>
						</Значение>
						<Значение>
							<Код>2</Код>
							<Наименование>ВзносыАкт --&gt; НалогСам</Наименование>
							<Порядок>300</Порядок>
							<Источник>НалогАкт</Источник>
							<Приемник>НалогАкт</Приемник>
						</Значение>
						<Значение>
							<Код>6</Код>
							<Наименование>ПениСам --&gt; ПениСам</Наименование>
							<Порядок>400</Порядок>
							<Источник>ПениСам</Источник>
							<Приемник>ПениСам</Приемник>
						</Значение>
						<Значение>
							<Код>5</Код>
							<Наименование>ПениАкт --&gt; ПениАкт</Наименование>
							<Порядок>500</Порядок>
							<Источник>ПениАкт</Источник>
							<Приемник>ПениАкт</Приемник>
						</Значение>
						<Значение>
							<Код>9</Код>
							<Наименование>Путевки --&gt; РасходыПоСтрахованию</Наименование>
							<Порядок>600</Порядок>
							<Источник>РасходыПоСтрахованию</Источник>
							<Приемник>РасходыПоСтрахованию</Приемник>
						</Значение>
						<Значение>
							<Код>4</Код>
							<Наименование>НеПринято --&gt; НеПринято</Наименование>
							<Порядок>700</Порядок>
							<Источник>НеПринято</Источник>
							<Приемник>НеПринято</Приемник>
						</Значение>
						<Значение>
							<Код>11</Код>
							<Наименование>Штраф --&gt; Штраф</Наименование>
							<Порядок>800</Порядок>
							<Источник>Штраф</Источник>
							<Приемник>Штраф</Приемник>
						</Значение>
						<Значение>
							<Код>7</Код>
							<Наименование>ПолученоИзфонда --&gt; ПолученоИзФонда</Наименование>
							<Порядок>900</Порядок>
							<Источник>ПолученоИзФонда</Источник>
							<Приемник>ПолученоИзФонда</Приемник>
						</Значение>
					</Значения>
				</Правило>
				<Правило>
					<Код>УровниБюджетов</Код>
					<Наименование>ПеречислениеСсылка.Бюджеты --&gt; ПеречислениеСсылка.УровниБюджетов</Наименование>
					<Порядок>600</Порядок>
					<Источник>ПеречислениеСсылка.Бюджеты</Источник>
					<Приемник>ПеречислениеСсылка.УровниБюджетов</Приемник>
					<Свойства/>
					<Значения>
						<Значение>
							<Код>3</Код>
							<Наименование>Федеральный --&gt; ФедеральныйБюджет</Наименование>
							<Порядок>100</Порядок>
							<Источник>Федеральный</Источник>
							<Приемник>ФедеральныйБюджет</Приемник>
						</Значение>
						<Значение>
							<Код>2</Код>
							<Наименование>Республиканский --&gt; РегиональныйБюджет</Наименование>
							<Порядок>200</Порядок>
							<Источник>Республиканский</Источник>
							<Приемник>РегиональныйБюджет</Приемник>
						</Значение>
						<Значение>
							<Код>1</Код>
							<Наименование>Местный --&gt; МестныйБюджет</Наименование>
							<Порядок>300</Порядок>
							<Источник>Местный</Источник>
							<Приемник>МестныйБюджет</Приемник>
						</Значение>
					</Значения>
				</Правило>
				<Правило>
					<Код>ПрибылиИУбытки</Код>
					<Наименование>ПеречислениеСсылка.ПрибылиИУбытки --&gt; ПеречислениеСсылка.ПрибылиИУбытки</Наименование>
					<Порядок>900</Порядок>
					<Источник>ПеречислениеСсылка.ПрибылиИУбытки</Источник>
					<Приемник>ПеречислениеСсылка.ПрибылиИУбытки</Приемник>
					<Свойства/>
					<Значения>
						<Значение>
							<Код>4</Код>
							<Наименование>ПрибыльУбытокОтПродаж --&gt; ПрибыльУбытокОтПродаж</Наименование>
							<Порядок>100</Порядок>
							<Источник>ПрибыльУбытокОтПродаж</Источник>
							<Приемник>ПрибыльУбытокОтПродаж</Приемник>
						</Значение>
						<Значение>
							<Код>5</Код>
							<Наименование>СальдоПрочихДоходовРасходов --&gt; СальдоПрочихДоходо</Наименование>
							<Порядок>200</Порядок>
							<Источник>СальдоПрочихДоходовРасходов</Источник>
							<Приемник>СальдоПрочихДоходовИРасходов</Приемник>
						</Значение>
						<Значение>
							<Код>6</Код>
							<Наименование>ЧрезвычайныеДоходы --&gt; ЧрезвычайныеДоходыРасходы</Наименование>
							<Порядок>300</Порядок>
							<Источник>ЧрезвычайныеДоходы</Источник>
							<Приемник>ЧрезвычайныеДоходыРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>7</Код>
							<Наименование>ЧрезвычайныеРасходы --&gt; ЧрезвычайныеДоходыРасходы</Наименование>
							<Порядок>400</Порядок>
							<Источник>ЧрезвычайныеРасходы</Источник>
							<Приемник>ЧрезвычайныеДоходыРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>2</Код>
							<Наименование>НалоговыеСанкции --&gt; НалоговыеСанкции</Наименование>
							<Порядок>600</Порядок>
							<Источник>НалоговыеСанкции</Источник>
							<Приемник>НалоговыеСанкции</Приемник>
						</Значение>
						<Значение>
							<Код>3</Код>
							<Наименование>НеПринимаемыеДляЦелейНалогообложения --&gt; ПрибыльУб</Наименование>
							<Порядок>700</Порядок>
							<Источник>НеПринимаемыеДляЦелейНалогообложения</Источник>
							<Приемник>ПрибыльУбытокОтПродаж</Приемник>
						</Значение>
					</Значения>
				</Правило>
				<Правило>
					<Код>ОбъектыНалогообложенияПоУСН</Код>
					<Наименование>ПеречислениеСсылка.ВариантОбъектаНалогообложения --&gt; ПеречислениеСсылка.ОбъектыНалогообложенияПоУСН</Наименование>
					<Порядок>1000</Порядок>
					<Источник>ПеречислениеСсылка.ВариантОбъектаНалогообложения</Источник>
					<Приемник>ПеречислениеСсылка.ОбъектыНалогообложенияПоУСН</Приемник>
					<Свойства/>
					<Значения>
						<Значение>
							<Код>1</Код>
							<Наименование>Доходы --&gt; Доходы</Наименование>
							<Порядок>100</Порядок>
							<Источник>Доходы</Источник>
							<Приемник>Доходы</Приемник>
						</Значение>
						<Значение>
							<Код>2</Код>
							<Наименование>ДоходыМинусРасходы --&gt; ДоходыМинусРасходы</Наименование>
							<Порядок>200</Порядок>
							<Источник>ДоходыМинусРасходы</Источник>
							<Приемник>ДоходыМинусРасходы</Приемник>
						</Значение>
					</Значения>
				</Правило>
				<Правило>
					<Код>ПорядокПризнанияРасходовПоТоварам</Код>
					<Наименование>ПеречислениеСсылка.ПорядокПризнанияМатериальныхРасходов --&gt; ПеречислениеСсылка.ПорядокПризнанияМатер</Наименование>
					<Порядок>1100</Порядок>
					<Источник>ПеречислениеСсылка.ПорядокПризнанияРасходовПоТоварам</Источник>
					<Приемник>ПеречислениеСсылка.ПорядокПризнанияРасходовПоТоварам</Приемник>
					<Свойства/>
					<Значения>
						<Значение>
							<Код>1</Код>
							<Наименование>ПоОплатеПоставщику --&gt; ПоОплатеПоставщику</Наименование>
							<Порядок>100</Порядок>
							<Источник>ПоОплатеПоставщику</Источник>
							<Приемник>ПоОплатеПоставщику</Приемник>
						</Значение>
						<Значение>
							<Код>2</Код>
							<Наименование>ПоФактуПолученияДохода --&gt; ПоФактуПолученияДохода</Наименование>
							<Порядок>200</Порядок>
							<Источник>ПоФактуПолученияДохода</Источник>
							<Приемник>ПоФактуПолученияДохода</Приемник>
						</Значение>
						<Значение>
							<Код>3</Код>
							<Наименование>ПоФактуРеализации --&gt; ПоФактуРеализации</Наименование>
							<Порядок>300</Порядок>
							<Источник>ПоФактуРеализации</Источник>
							<Приемник>ПоФактуРеализации</Приемник>
						</Значение>
					</Значения>
				</Правило>
				<Правило>
					<Код>ПорядокПризнанияМатериальныхРасходов</Код>
					<Наименование>ПеречислениеСсылка.ПорядокПризнанияМатериальныхРасходов --&gt; ПеречислениеСсылка.ПорядокПризнанияМатер</Наименование>
					<Порядок>3400</Порядок>
					<Источник>ПеречислениеСсылка.ПорядокПризнанияМатериальныхРасходов</Источник>
					<Приемник>ПеречислениеСсылка.ПорядокПризнанияМатериальныхРасходов</Приемник>
					<Свойства/>
					<Значения>
						<Значение>
							<Код>1</Код>
							<Наименование>ПоОплатеПоставщику --&gt; ПоОплатеПоставщику</Наименование>
							<Порядок>100</Порядок>
							<Источник>ПоОплатеПоставщику</Источник>
							<Приемник>ПоОплатеПоставщику</Приемник>
						</Значение>
						<Значение>
							<Код>2</Код>
							<Наименование>ПоФактуСписания --&gt; ПоФактуСписания</Наименование>
							<Порядок>200</Порядок>
							<Источник>ПоФактуСписания</Источник>
							<Приемник>ПоФактуСписания</Приемник>
						</Значение>
						<Значение>
							<Код>3</Код>
							<Наименование>УменьшатьРасходыНаОстатокНЗП --&gt; УменьшатьРасходыН</Наименование>
							<Порядок>300</Порядок>
							<Источник>УменьшатьРасходыНаОстатокНЗП</Источник>
							<Приемник>УменьшатьРасходыНаОстатокНЗП</Приемник>
						</Значение>
					</Значения>
				</Правило>
				<Правило>
					<Код>ОсобенностиИсчисленияНДФЛ</Код>
					<Наименование> --&gt; ПеречислениеСсылка.ОсобенностиИсчисленияНДФЛ</Наименование>
					<Порядок>3500</Порядок>
					<Источник>ПеречислениеСсылка.ОсобенностиИсчисленияНДФЛ</Источник>
					<Приемник>ПеречислениеСсылка.ОсобенностиИсчисленияНДФЛ</Приемник>
					<Свойства/>
					<Значения>
						<Значение>
							<Код>1</Код>
							<Наименование>СтандартныеВычетыВПределахМесячногоДохода --&gt; Стан</Наименование>
							<Порядок>100</Порядок>
							<Источник>СтандартныеВычетыВПределахМесячногоДохода</Источник>
							<Приемник>СтандартныеВычетыВПределахМесячногоДохода</Приемник>
						</Значение>
						<Значение>
							<Код>2</Код>
							<Наименование>СтандартныеВычетыНарастающимИтогом --&gt; Стандартные</Наименование>
							<Порядок>200</Порядок>
							<Источник>СтандартныеВычетыНарастающимИтогом</Источник>
							<Приемник>СтандартныеВычетыНарастающимИтогом</Приемник>
						</Значение>
					</Значения>
				</Правило>
				<Правило>
					<Код>ДвиженияЦелевыхСредств</Код>
					<Наименование>Перечисление: Источники целевых поступлений</Наименование>
					<Порядок>3550</Порядок>
					<Источник>ПеречислениеСсылка.ИсточникиЦелевыхПоступлений</Источник>
					<Приемник>ПеречислениеСсылка.ДвиженияЦелевыхСредств</Приемник>
					<Свойства/>
					<Значения>
						<Значение>
							<Код>1</Код>
							<Наименование>ВступительныеВзносы --&gt; ВступительныеВзносы</Наименование>
							<Порядок>50</Порядок>
							<Источник>ВступительныеВзносы</Источник>
							<Приемник>ВступительныеВзносы</Приемник>
						</Значение>
						<Значение>
							<Код>2</Код>
							<Наименование>ДобровольныеВзносы --&gt; ДобровольныеВзносы</Наименование>
							<Порядок>100</Порядок>
							<Источник>ДобровольныеВзносы</Источник>
							<Приемник>ДобровольныеВзносы</Приемник>
						</Значение>
						<Значение>
							<Код>3</Код>
							<Наименование>ЧленскиеВзносы --&gt; ЧленскиеВзносы</Наименование>
							<Порядок>150</Порядок>
							<Источник>ЧленскиеВзносы</Источник>
							<Приемник>ЧленскиеВзносы</Приемник>
						</Значение>
						<Значение>
							<Код>4</Код>
							<Наименование>ДругиеИсточники --&gt; ПрочиеПоступления</Наименование>
							<Порядок>200</Порядок>
							<Источник>ДругиеИсточники</Источник>
							<Приемник>ПрочиеПоступления</Приемник>
						</Значение>
						<Значение>
							<Код>5</Код>
							<Наименование>ИзБюджета --&gt; ПрочиеПоступления</Наименование>
							<Порядок>250</Порядок>
							<Источник>ИзБюджета</Источник>
							<Приемник>ПрочиеПоступления</Приемник>
						</Значение>
						<Значение>
							<Код>6</Код>
							<Наименование>ИзВнебюджетныхФондов --&gt; ПрочиеПоступления</Наименование>
							<Порядок>300</Порядок>
							<Источник>ИзВнебюджетныхФондов</Источник>
							<Приемник>ПрочиеПоступления</Приемник>
						</Значение>
					</Значения>
				</Правило>
			</Группа>
			<Группа>
				<Код>Документы</Код>
				<Наименование>Документы</Наименование>
				<Порядок>300</Порядок>
				<Правило>
					<Код>Партия</Код>
					<Наименование>СправочникСсылка.Договоры --&gt; ДокументСсылка.Партия</Наименование>
					<Порядок>50</Порядок>
					<Источник>СправочникСсылка.Договоры</Источник>
					<Приемник>ДокументСсылка.ДокументРасчетовСКонтрагентом</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование> --&gt; Дата</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
							<ПередВыгрузкой>Значение = Параметры.ДатаВводаОстатков;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование> --&gt; Комментарий</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>6</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование> --&gt; Контрагент</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = Источник.Владелец;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование> --&gt; ДоговорКонтрагента</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование> --&gt; ВалютаДокумента</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаДокумента" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = Параметры.Рубли;</ПередВыгрузкой>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ДокументРасчетовСКонтрагентом</Код>
					<Наименование>СправочникСсылка.Договоры --&gt; ДокументСсылка.ДокументРасчетовСКонтрагентом</Наименование>
					<Порядок>100</Порядок>
					<Источник>СправочникСсылка.Договоры</Источник>
					<Приемник>ДокументСсылка.ДокументРасчетовСКонтрагентом</Приемник>
					<Свойства>
						<Свойство>
							<Код>1</Код>
							<Наименование> --&gt; Дата</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
							<ПередВыгрузкой>Значение = Параметры.ДатаВводаОстатков;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование> --&gt; Комментарий</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование> --&gt; Контрагент</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = Источник.Владелец;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование> --&gt; ДоговорКонтрагента</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; ВалютаДокумента</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаДокумента" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = Параметры.Рубли;</ПередВыгрузкой>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ДокументРасчетовСКонтрагентомСтр</Код>
					<Наименование>Строка --&gt; ДокументСсылка.ДокументРасчетовСКонтрагентом</Наименование>
					<Порядок>150</Порядок>
					<Источник>Строка</Источник>
					<Приемник>ДокументСсылка.ДокументРасчетовСКонтрагентом</Приемник>
					<Свойства>
						<Свойство>
							<Код>1</Код>
							<Наименование> --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
							<ПередВыгрузкой>Значение = Параметры.ДатаВводаОстатков;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование> --&gt; Комментарий</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование> --&gt; ДоговорКонтрагента</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ПолучитьПустоеЗначение("Справочник.Договоры");</ПередВыгрузкой>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ЗаписьКУДиР</Код>
					<Наименование> --&gt; ДокументСсылка.ЗаписьКУДиР</Наименование>
					<Порядок>200</Порядок>
					<ПередВыгрузкой>Если (ВходящиеДанные.Получить("Раздел1").КоличествоСтрок() = 0) и (ВходящиеДанные.Получить("ОС").КоличествоСтрок() = 0) и (ВходящиеДанные.Получить("НМА").КоличествоСтрок() = 0) Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
					<Приемник>ДокументСсылка.ЗаписьКУДиР</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование> --&gt; Дата</Наименование>
							<Порядок>100</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование> --&gt; Комментарий</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>4</Код>
							<Наименование> --&gt; Строки</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Строки" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>КоллекцияОбъектов = ВходящиеДанные.Получить("Раздел1");
Если КоллекцияОбъектов.КоличествоСтрок() = 0 Тогда
	Отказ = 1;
КонецЕсли;</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>5</Код>
								<Наименование> --&gt; ДатаНомер</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДатаНомер" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>6</Код>
								<Наименование> --&gt; Содержание</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Содержание" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>7</Код>
								<Наименование> --&gt; Графа4</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Графа4" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>8</Код>
								<Наименование> --&gt; Графа5</Наименование>
								<Порядок>400</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Графа5" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>9</Код>
								<Наименование> --&gt; Графа6</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Графа6" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>10</Код>
								<Наименование> --&gt; Графа7</Наименование>
								<Порядок>600</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Графа7" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>24</Код>
								<Наименование> --&gt; ДоходыЕНВД</Наименование>
								<Порядок>650</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДоходыЕНВД" Вид="Реквизит" Тип="Булево"/>
							</Свойство>
						</Группа>
						<Группа>
							<Код>11</Код>
							<Наименование> --&gt; ОС</Наименование>
							<Порядок>500</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОС" Вид="ТабличнаяЧасть"/>
							<Свойство>
								<Код>12</Код>
								<Наименование> --&gt; ОсновноеСредство</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ОсновноеСредство" Вид="Реквизит" Тип="СправочникСсылка.ОсновныеСредства"/>
								<КодПравилаКонвертации>ОсновныеСредства                                  </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>13</Код>
								<Наименование> --&gt; ДатаОплаты</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДатаОплаты" Вид="Реквизит" Тип="Дата"/>
							</Свойство>
							<Свойство>
								<Код>14</Код>
								<Наименование> --&gt; Графа5_ПервоначальнаяСтоимость</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Графа5_ПервоначальнаяСтоимость" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>15</Код>
								<Наименование> --&gt; Графа6_ОстаточнаяСтоимость</Наименование>
								<Порядок>400</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Графа6_ОстаточнаяСтоимость" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>16</Код>
								<Наименование> --&gt; Графа8_КолКварталовВОтчетномПериоде</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Графа8_КолКварталовВОтчетномПериоде" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>17</Код>
								<Наименование> --&gt; Графа9_КолКварталовВНалПериоде</Наименование>
								<Порядок>600</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Графа9_КолКварталовВНалПериоде" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>18</Код>
								<Наименование> --&gt; Графа10_ДоляРасходовЗаНалПериод</Наименование>
								<Порядок>700</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Графа10_ДоляРасходовЗаНалПериод" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>19</Код>
								<Наименование> --&gt; Графа11_ДоляРасходовЗаКвартал</Наименование>
								<Порядок>800</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Графа11_ДоляРасходовЗаКвартал" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>20</Код>
								<Наименование> --&gt; Графа12_СуммаРасходовЗаОтчетнПериод</Наименование>
								<Порядок>900</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Графа12_СуммаРасходовЗаОтчетнПериод" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>21</Код>
								<Наименование> --&gt; Графа13_СуммаРасходовЗаКвартал</Наименование>
								<Порядок>1000</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Графа13_СуммаРасходовЗаКвартал" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>22</Код>
								<Наименование> --&gt; Графа14_РасходыПрошлыхПериодов</Наименование>
								<Порядок>1100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Графа14_РасходыПрошлыхПериодов" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>23</Код>
								<Наименование> --&gt; Графа15_ОстатокРасходов</Наименование>
								<Порядок>1200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Графа15_ОстатокРасходов" Вид="Реквизит" Тип="Число"/>
							</Свойство>
						</Группа>
						<Группа>
							<Код>25</Код>
							<Наименование> --&gt; НМА</Наименование>
							<Порядок>550</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НМА" Вид="ТабличнаяЧасть"/>
							<Свойство>
								<Код>26</Код>
								<Наименование> --&gt; НематериальныйАктив</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="НематериальныйАктив" Вид="Реквизит" Тип="СправочникСсылка.НематериальныеАктивы"/>
								<КодПравилаКонвертации>НематериальныеАктивы                              </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>27</Код>
								<Наименование> --&gt; ДатаОплаты</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДатаОплаты" Вид="Реквизит" Тип="Дата"/>
							</Свойство>
							<Свойство>
								<Код>28</Код>
								<Наименование> --&gt; Графа5_ПервоначальнаяСтоимость</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Графа5_ПервоначальнаяСтоимость" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>29</Код>
								<Наименование> --&gt; Графа6_ОстаточнаяСтоимость</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Графа6_ОстаточнаяСтоимость" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>30</Код>
								<Наименование> --&gt; Графа8_КолКварталовВОтчетномПериоде</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Графа8_КолКварталовВОтчетномПериоде" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>31</Код>
								<Наименование> --&gt; Графа9_КолКварталовВНалПериоде</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Графа9_КолКварталовВНалПериоде" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>32</Код>
								<Наименование> --&gt; Графа10_ДоляРасходовЗаНалПериод</Наименование>
								<Порядок>350</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Графа10_ДоляРасходовЗаНалПериод" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>33</Код>
								<Наименование> --&gt; Графа11_ДоляРасходовЗаКвартал</Наименование>
								<Порядок>400</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Графа11_ДоляРасходовЗаКвартал" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>34</Код>
								<Наименование> --&gt; Графа12_СуммаРасходовЗаОтчетнПериод</Наименование>
								<Порядок>450</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Графа12_СуммаРасходовЗаОтчетнПериод" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>35</Код>
								<Наименование> --&gt; Графа13_СуммаРасходовЗаКвартал</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Графа13_СуммаРасходовЗаКвартал" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>36</Код>
								<Наименование> --&gt; Графа15_ОстатокРасходов</Наименование>
								<Порядок>550</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Графа15_ОстатокРасходов" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>37</Код>
								<Наименование> --&gt; Графа15_ОстатокРасходов</Наименование>
								<Порядок>600</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Графа15_ОстатокРасходов" Вид="Реквизит" Тип="Число"/>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ЗарплатаКВыплатеОрганизаций</Код>
					<Наименование> --&gt; ДокументСсылка.ЗарплатаКВыплатеОрганизаций</Наименование>
					<Порядок>250</Порядок>
					<ПередВыгрузкой>Если ТипЗначенияСтр(ВходящиеДанные) = "СписокЗначений" Тогда
	СделатьСсылкуНаДокВводаОстатков = ВходящиеДанные.Получить("СделатьСсылкуНаДокВводаОстатков");
	Если ПустоеЗначение(СделатьСсылкуНаДокВводаОстатков) = 0 Тогда
		КлючВыгружаемыхДанных = ЗначениеВСтрокуВнутр(КлючВыгружаемыхДанных) + СделатьСсылкуНаДокВводаОстатков;
	КонецЕсли;	
КонецЕсли;</ПередВыгрузкой>
					<Приемник>ДокументСсылка.ЗарплатаКВыплатеОрганизаций</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование> --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
							<ПередВыгрузкой>Значение = Параметры.ДатаВводаОстатков - 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование> --&gt; ПериодРегистрации</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
							<ПередВыгрузкой>Если Параметры.ДатаКонцаПериодаВыгрузки &gt; Параметры.ДатаВводаОстатков Тогда
	ПериодРегистрации = Параметры.ДатаКонцаПериодаВыгрузки;
	
Иначе
	ПериодРегистрации = Параметры.ДатаВводаОстатков - 1;
КонецЕсли;

ПериодРегистрации = НачМесяца(ПериодРегистрации);

Значение = ПериодРегистрации;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование> --&gt; СпособВыплаты</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособВыплаты" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыВыплатыЗарплаты"/>
							<ПередВыгрузкой>Значение = "ЧерезКассу";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование> --&gt; ПодразделениеОрганизации</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПодразделениеОрганизации" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ПодразделенияОрганизаций                          </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "Основное подразделение";</ПередВыгрузкой>
						</Свойство>
						<Группа Отключить="true">
							<Код>5</Код>
							<Наименование> --&gt; Зарплата</Наименование>
							<Порядок>300</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Зарплата" Вид="ТабличнаяЧасть"/>
							<Свойство>
								<Код>6</Код>
								<Наименование> --&gt; Физлицо</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Физлицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
								<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>7</Код>
								<Наименование> --&gt; ВыплаченностьЗарплаты</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ВыплаченностьЗарплаты" Вид="Реквизит" Тип="ПеречислениеСсылка.ВыплаченностьЗарплаты"/>
							</Свойство>
							<Свойство>
								<Код>8</Код>
								<Наименование> --&gt; Сумма</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
			</Группа>
		</Группа>
		<Группа>
			<Код>ПрочиеНеобходимыеСведения</Код>
			<Наименование>Прочие необходимые сведения</Наименование>
			<Порядок>200</Порядок>
			<Правило>
				<Код>Банки</Код>
				<Наименование>СправочникСсылка.Банки --&gt; СправочникСсылка.Банки</Наименование>
				<Порядок>50</Порядок>
				<Источник>СправочникСсылка.Банки</Источник>
				<Приемник>СправочникСсылка.Банки</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>9</Код>
						<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>6</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>8</Код>
						<Наименование>Родитель --&gt; Родитель</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Банки"/>
						<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Банки"/>
						<КодПравилаКонвертации>Банки                                             </КодПравилаКонвертации>
					</Свойство>
					<Группа>
						<Код>1</Код>
						<Наименование> --&gt;</Наименование>
						<Порядок>900</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="" Вид=""/>
						<ПередОбработкойВыгрузки>Отказ = Источник.ЭтоГруппа();</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>3</Код>
							<Наименование>КоррСчет --&gt; КоррСчет</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="КоррСчет" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="КоррСчет" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>Местонахождение --&gt; Город</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="Местонахождение" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Город" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование>Адрес --&gt; Адрес</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="Адрес" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Адрес" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>Телефоны --&gt; Телефоны</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="Телефоны" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Телефоны" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ТерриториальныеУсловия</Код>
				<Наименование>ПеречислениеСсылка.ТерриториальныеУсловия --&gt; СправочникСсылка.ТерриториальныеУсловия</Наименование>
				<Порядок>100</Порядок>
				<Источник>ПеречислениеСсылка.ТерриториальныеУсловия</Источник>
				<Приемник>СправочникСсылка.ТерриториальныеУсловия</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ЮрФизЛицо</Код>
				<Наименование>ПеречислениеСсылка.ВидыКонтрагентов --&gt; ПеречислениеСсылка.ЮрФизЛицо</Наименование>
				<Порядок>150</Порядок>
				<Источник>ПеречислениеСсылка.ВидыКонтрагентов</Источник>
				<Приемник>ПеречислениеСсылка.ЮрФизЛицо</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>4</Код>
						<Наименование>ЧастноеЛицо --&gt; ФизЛицо</Наименование>
						<Порядок>100</Порядок>
						<Источник>ЧастноеЛицо</Источник>
						<Приемник>ФизЛицо</Приемник>
					</Значение>
					<Значение>
						<Код>1</Код>
						<Наименование>ДочернееОбщество --&gt; ЮрЛицо</Наименование>
						<Порядок>200</Порядок>
						<Источник>ДочернееОбщество</Источник>
						<Приемник>ЮрЛицо</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ЗависимоеОбщество --&gt; ЮрЛицо</Наименование>
						<Порядок>300</Порядок>
						<Источник>ЗависимоеОбщество</Источник>
						<Приемник>ЮрЛицо</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>Организация --&gt; ЮрЛицо</Наименование>
						<Порядок>400</Порядок>
						<Источник>Организация</Источник>
						<Приемник>ЮрЛицо</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>Валюты</Код>
				<Наименование>СправочникСсылка.Валюты --&gt; СправочникСсылка.Валюты</Наименование>
				<Порядок>200</Порядок>
				<ПослеВыгрузки>ВыгрузитьПоПравилу(Источник,,,, "КурсыВалют");</ПослеВыгрузки>
				<Источник>СправочникСсылка.Валюты</Источник>
				<Приемник>СправочникСсылка.Валюты</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<ПриВыгрузке>Если Источник.Код = "810" Тогда
	Значение = "643";
КонецЕсли;
</ПриВыгрузке>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ПолнНаименование --&gt; НаименованиеПолное</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="ПолнНаименование" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВалютаРуб</Код>
				<Наименование>СправочникСсылка.Валюты --&gt; СправочникСсылка.Валюты</Наименование>
				<Порядок>250</Порядок>
				<Приемник>СправочникСсылка.Валюты</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Код</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "643";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "руб.";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; НаименованиеПолное</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "Российский рубль";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВидыСкладов</Код>
				<Наименование>ПеречислениеСсылка.ТипыСкладов --&gt; ПеречислениеСсылка.ВидыСкладов</Наименование>
				<Порядок>300</Порядок>
				<Источник>ПеречислениеСсылка.ТипыСкладов</Источник>
				<Приемник>ПеречислениеСсылка.ВидыСкладов</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>2</Код>
						<Наименование>Розничный --&gt; НеавтоматизированнаяТорговаяТочка</Наименование>
						<Порядок>100</Порядок>
						<Источник>Розничный</Источник>
						<Приемник>НеавтоматизированнаяТорговаяТочка</Приемник>
					</Значение>
					<Значение>
						<Код>1</Код>
						<Наименование>Оптовый --&gt; Оптовый</Наименование>
						<Порядок>200</Порядок>
						<Источник>Оптовый</Источник>
						<Приемник>Оптовый</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ВидыНМА</Код>
				<Наименование>ПеречислениеСсылка.ГруппыНМА --&gt; ПеречислениеСсылка.ВидыНМА</Наименование>
				<Порядок>350</Порядок>
				<Источник>ПеречислениеСсылка.ГруппыНМА</Источник>
				<Приемник>ПеречислениеСсылка.ВидыНМА</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>2</Код>
						<Наименование>ОрганизационныеРасходы --&gt; ОрганизационныеРасходы</Наименование>
						<Порядок>100</Порядок>
						<Источник>ОрганизационныеРасходы</Источник>
						<Приемник>ОрганизационныеРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>ПраваНаПрограммыЭВМ --&gt; ИсключительноеПравоНаПрогр</Наименование>
						<Порядок>200</Порядок>
						<Источник>ПраваНаПрограммыЭВМ</Источник>
						<Приемник>ИсключительноеПравоНаПрограммыДляЭВМ</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>ПраваНаТопологииМикросхем --&gt; ИмущественноеПравоНа</Наименование>
						<Порядок>300</Порядок>
						<Источник>ПраваНаТопологииМикросхем</Источник>
						<Приемник>ИмущественноеПравоНаТопологииИМС</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>ПраваНаТоварныйЗнак --&gt; ИсключительноеПравоНаТовар</Наименование>
						<Порядок>400</Порядок>
						<Источник>ПраваНаТоварныйЗнак</Источник>
						<Приемник>ИсключительноеПравоНаТоварныйЗнак</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>ПраваНаСелекционныеДостижения --&gt; ИсключительноеПр</Наименование>
						<Порядок>500</Порядок>
						<Источник>ПраваНаСелекционныеДостижения</Источник>
						<Приемник>ИсключительноеПравоНаСелекционныеДостижения</Приемник>
					</Значение>
					<Значение>
						<Код>11</Код>
						<Наименование>Прочие --&gt; ПрочиеНематериальныеАктивы</Наименование>
						<Порядок>600</Порядок>
						<Источник>Прочие</Источник>
						<Приемник>ПрочиеНематериальныеАктивы</Приемник>
					</Значение>
					<Значение>
						<Код>1</Код>
						<Наименование>ДеловаяРепутация --&gt; ДеловаяРепутацияОрганизации</Наименование>
						<Порядок>700</Порядок>
						<Источник>ДеловаяРепутация</Источник>
						<Приемник>ДеловаяРепутацияОрганизации</Приемник>
					</Значение>
					<Значение>
						<Код>9</Код>
						<Наименование>ПраваПоАвторскимДоговорам --&gt; ПрочиеНематериальные</Наименование>
						<Порядок>800</Порядок>
						<Источник>ПраваПоАвторскимДоговорам</Источник>
						<Приемник>ПрочиеНематериальныеАктивы</Приемник>
					</Значение>
					<Значение>
						<Код>10</Код>
						<Наименование>ПраваПоПатентам --&gt; ИсключительноеПравоНаИзобретен</Наименование>
						<Порядок>900</Порядок>
						<Источник>ПраваПоПатентам</Источник>
						<Приемник>ИсключительноеПравоНаИзобретение</Приемник>
					</Значение>
					<Значение>
						<Код>8</Код>
						<Наименование>ПраваНоуХау --&gt; ИсключительноеПравоНаИзобретение</Наименование>
						<Порядок>1000</Порядок>
						<Источник>ПраваНоуХау</Источник>
						<Приемник>ИсключительноеПравоНаИзобретение</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ПраваНаОбъектыПриродопользования --&gt; ПрочиеНематер</Наименование>
						<Порядок>1100</Порядок>
						<Источник>ПраваНаОбъектыПриродопользования</Источник>
						<Приемник>ПрочиеНематериальныеАктивы</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>АмортизационныеГруппы</Код>
				<Наименование>ПеречислениеСсылка.АмортизационныеГруппы --&gt; ПеречислениеСсылка.АмортизационныеГруппы</Наименование>
				<Порядок>400</Порядок>
				<Источник>ПеречислениеСсылка.АмортизационныеГруппы</Источник>
				<Приемник>ПеречислениеСсылка.АмортизационныеГруппы</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>6</Код>
						<Наименование>ПерваяГруппа --&gt; ПерваяГруппа</Наименование>
						<Порядок>100</Порядок>
						<Источник>ПерваяГруппа</Источник>
						<Приемник>ПерваяГруппа</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ВтораяГруппа --&gt; ВтораяГруппа</Наименование>
						<Порядок>200</Порядок>
						<Источник>ВтораяГруппа</Источник>
						<Приемник>ВтораяГруппа</Приемник>
					</Значение>
					<Значение>
						<Код>9</Код>
						<Наименование>ТретьяГруппа --&gt; ТретьяГруппа</Наименование>
						<Порядок>300</Порядок>
						<Источник>ТретьяГруппа</Источник>
						<Приемник>ТретьяГруппа</Приемник>
					</Значение>
					<Значение>
						<Код>10</Код>
						<Наименование>ЧетвертаяГруппа --&gt; ЧетвертаяГруппа</Наименование>
						<Порядок>400</Порядок>
						<Источник>ЧетвертаяГруппа</Источник>
						<Приемник>ЧетвертаяГруппа</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>ПятаяГруппа --&gt; ПятаяГруппа</Наименование>
						<Порядок>500</Порядок>
						<Источник>ПятаяГруппа</Источник>
						<Приемник>ПятаяГруппа</Приемник>
					</Значение>
					<Значение>
						<Код>11</Код>
						<Наименование>ШестаяГруппа --&gt; ШестаяГруппа</Наименование>
						<Порядок>600</Порядок>
						<Источник>ШестаяГруппа</Источник>
						<Приемник>ШестаяГруппа</Приемник>
					</Значение>
					<Значение>
						<Код>8</Код>
						<Наименование>СедьмаяГруппа --&gt; СедьмаяГруппа</Наименование>
						<Порядок>700</Порядок>
						<Источник>СедьмаяГруппа</Источник>
						<Приемник>СедьмаяГруппа</Приемник>
					</Значение>
					<Значение>
						<Код>1</Код>
						<Наименование>ВосьмаяГруппа --&gt; ВосьмаяГруппа</Наименование>
						<Порядок>800</Порядок>
						<Источник>ВосьмаяГруппа</Источник>
						<Приемник>ВосьмаяГруппа</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ДевятаяГруппа --&gt; ДевятаяГруппа</Наименование>
						<Порядок>900</Порядок>
						<Источник>ДевятаяГруппа</Источник>
						<Приемник>ДевятаяГруппа</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>ДесятаяГруппа --&gt; ДесятаяГруппа</Наименование>
						<Порядок>1000</Порядок>
						<Источник>ДесятаяГруппа</Источник>
						<Приемник>ДесятаяГруппа</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>ОтдельнаяГруппа --&gt; ОтдельнаяГруппа</Наименование>
						<Порядок>1100</Порядок>
						<Приемник>ОтдельнаяГруппа</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ГруппыОС</Код>
				<Наименование>ПеречислениеСсылка.ГруппыОС --&gt; ПеречислениеСсылка.ГруппыОС</Наименование>
				<Порядок>450</Порядок>
				<Источник>ПеречислениеСсылка.ГруппыОС</Источник>
				<Приемник>ПеречислениеСсылка.ГруппыОС</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>Здания --&gt; Здания</Наименование>
						<Порядок>100</Порядок>
						<Источник>Здания</Источник>
						<Приемник>Здания</Приемник>
					</Значение>
					<Значение>
						<Код>13</Код>
						<Наименование>Сооружения --&gt; Сооружения</Наименование>
						<Порядок>200</Порядок>
						<Источник>Сооружения</Источник>
						<Приемник>Сооружения</Приемник>
					</Значение>
					<Значение>
						<Код>9</Код>
						<Наименование>ПередаточныеУстройства --&gt; ПроизводственныйИХозяйс</Наименование>
						<Порядок>300</Порядок>
						<Источник>ПередаточныеУстройства</Источник>
						<Приемник>ПроизводственныйИХозяйственныйИнвентарь</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>МашиныИОборудование --&gt; МашиныИОборудование</Наименование>
						<Порядок>400</Порядок>
						<Источник>МашиныИОборудование</Источник>
						<Приемник>МашиныИОборудование</Приемник>
					</Значение>
					<Значение>
						<Код>14</Код>
						<Наименование>ТранспортныеСредства --&gt; ТранспортныеСредства</Наименование>
						<Порядок>500</Порядок>
						<Источник>ТранспортныеСредства</Источник>
						<Приемник>ТранспортныеСредства</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>Инструмент --&gt; ПроизводственныйИХозяйственныйИнвен</Наименование>
						<Порядок>600</Порядок>
						<Источник>Инструмент</Источник>
						<Приемник>ПроизводственныйИХозяйственныйИнвентарь</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>Инвентарь --&gt; ПроизводственныйИХозяйственныйИнвент</Наименование>
						<Порядок>700</Порядок>
						<Источник>Инвентарь</Источник>
						<Приемник>ПроизводственныйИХозяйственныйИнвентарь</Приемник>
					</Значение>
					<Значение>
						<Код>12</Код>
						<Наименование>РабочийСкот --&gt; РабочийСкот</Наименование>
						<Порядок>800</Порядок>
						<Источник>РабочийСкот</Источник>
						<Приемник>РабочийСкот</Приемник>
					</Значение>
					<Значение>
						<Код>10</Код>
						<Наименование>ПродуктивныйСкот --&gt; ПродуктивныйСкот</Наименование>
						<Порядок>900</Порядок>
						<Источник>ПродуктивныйСкот</Источник>
						<Приемник>ПродуктивныйСкот</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>МноголетниеНасаждения --&gt; МноголетниеНасаждения</Наименование>
						<Порядок>1000</Порядок>
						<Источник>МноголетниеНасаждения</Источник>
						<Приемник>МноголетниеНасаждения</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>КапитальныеЗатратыПоУлучшениюЗемель --&gt; ДругиеВиды</Наименование>
						<Порядок>1100</Порядок>
						<Источник>КапитальныеЗатратыПоУлучшениюЗемель</Источник>
						<Приемник>ДругиеВидыОсновныхСредств</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ЗемельныеУчастки --&gt; ЗемельныеУчастки</Наименование>
						<Порядок>1200</Порядок>
						<Источник>ЗемельныеУчастки</Источник>
						<Приемник>ЗемельныеУчастки</Приемник>
					</Значение>
					<Значение>
						<Код>8</Код>
						<Наименование>ОбъектыПриродопользования --&gt; ОбъектыПриродопользо</Наименование>
						<Порядок>1300</Порядок>
						<Источник>ОбъектыПриродопользования</Источник>
						<Приемник>ОбъектыПриродопользования</Приемник>
					</Значение>
					<Значение>
						<Код>11</Код>
						<Наименование>Прочие --&gt; ДругиеВидыОсновныхСредств</Наименование>
						<Порядок>1400</Порядок>
						<Источник>Прочие</Источник>
						<Приемник>ДругиеВидыОсновныхСредств</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>РасчетныеСчета</Код>
				<Наименование>СправочникСсылка.РасчетныеСчета --&gt; СправочникСсылка.БанковскиеСчета</Наименование>
				<Порядок>500</Порядок>
				<Источник>СправочникСсылка.РасчетныеСчета</Источник>
				<Приемник>СправочникСсылка.БанковскиеСчета</Приемник>
				<Свойства>
					<Свойство Отключить="true">
						<Код>6</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>5</Код>
						<Наименование>Владелец --&gt; Владелец</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="Владелец" Вид="Свойство" Тип="СправочникСсылка.Контрагенты"/>
						<Приемник Имя="Владелец" Вид="Свойство"/>
						<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>10</Код>
						<Наименование>Номер --&gt; НомерСчета</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="Номер" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="НомерСчета" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование>БанкОрганизации --&gt; Банк</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="БанкОрганизации" Вид="Реквизит" Тип="СправочникСсылка.Банки"/>
						<Приемник Имя="Банк" Вид="Реквизит" Тип="СправочникСсылка.Банки"/>
						<КодПравилаКонвертации>Банки                                             </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>БанкДляРасчетов --&gt; БанкДляРасчетов</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="БанкДляРасчетов" Вид="Реквизит" Тип="СправочникСсылка.Банки"/>
						<Приемник Имя="БанкДляРасчетов" Вид="Реквизит" Тип="СправочникСсылка.Банки"/>
						<КодПравилаКонвертации>Банки                                             </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>Корреспондент --&gt; ТекстКорреспондента</Наименование>
						<Порядок>700</Порядок>
						<Источник Имя="Корреспондент" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="ТекстКорреспондента" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование>Назначение --&gt; ТекстНазначения</Наименование>
						<Порядок>800</Порядок>
						<Источник Имя="Назначение" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="ТекстНазначения" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; ВидСчета</Наименование>
						<Порядок>900</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидСчета" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "Расчетный";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; ВалютаДенежныхСредств</Наименование>
						<Порядок>1000</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВалютаДенежныхСредств" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
						<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Параметры.Рубли;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование>ВсегдаУказыватьКПП --&gt; ВсегдаУказыватьКПП</Наименование>
						<Порядок>1050</Порядок>
						<Источник Имя="ВсегдаУказыватьКПП" Вид="Реквизит" Тип="Число"/>
						<Приемник Имя="ВсегдаУказыватьКПП" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ЕдиныеНормыАмортизационныхОтчисленийОсновныхФондов</Код>
				<Наименование>СправочникСсылка.КлассификаторЕН --&gt; СправочникСсылка.ЕдиныеНормыАмортизационныхОтчисленийОсновныхФо</Наименование>
				<Порядок>550</Порядок>
				<ПередВыгрузкой>Отказ = Источник.ЭтоГруппа();</ПередВыгрузкой>
				<Источник>СправочникСсылка.КлассификаторЕН</Источник>
				<Приемник>СправочникСсылка.ЕдиныеНормыАмортизационныхОтчисленийОсновныхФондов</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>НормаАморт --&gt; НормаАмортизационныхОтчислений</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="НормаАморт" Вид="Реквизит" Тип="Число"/>
						<Приемник Имя="НормаАмортизационныхОтчислений" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>НормаАвто --&gt; ПроцентОтСтоимостиМашины</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="НормаАвто" Вид="Реквизит" Тип="Число"/>
						<Приемник Имя="ПроцентОтСтоимостиМашины" Вид="Реквизит" Тип="Число"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>КлассификаторЕдиницИзмерения</Код>
				<Наименование>СправочникСсылка.ЕдиницыИзмерений --&gt; СправочникСсылка.КлассификаторЕдиницИзмерения</Наименование>
				<Порядок>600</Порядок>
				<Источник>СправочникСсылка.ЕдиницыИзмерений</Источник>
				<Приемник>СправочникСсылка.КлассификаторЕдиницИзмерения</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ПолнНаименование --&gt; НаименованиеПолное</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="ПолнНаименование" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ТипыЦенНоменклатуры</Код>
				<Наименование>СправочникСсылка.ТипыЦен --&gt; СправочникСсылка.ТипыЦенНоменклатуры</Наименование>
				<Порядок>650</Порядок>
				<ПередВыгрузкой>Если Константа.ИспользоватьТипыЦен = Нет Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Источник>СправочникСсылка.ТипыЦен</Источник>
				<Приемник>СправочникСсылка.ТипыЦенНоменклатуры</Приемник>
				<Свойства>
					<Свойство Отключить="true">
						<Код>4</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>6</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>Валюта --&gt; ВалютаЦены</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="Валюта" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
						<Приемник Имя="ВалютаЦены" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
						<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
						<ПередВыгрузкой>Если ПустоеЗначение(Источник.Валюта) = 1 Тогда
	Значение = Параметры.Рубли;
КонецЕсли;
</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>Комментарий --&gt; Комментарий</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; ПорядокОкругления</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПорядокОкругления" Вид="Реквизит" Тип="ПеречислениеСсылка.ПорядкиОкругления"/>
						<ПередВыгрузкой>Значение = "Окр0_01";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; ОкруглятьВБольшуюСторону</Наименование>
						<Порядок>700</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОкруглятьВБольшуюСторону" Вид="Реквизит" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>7</Код>
						<Наименование> --&gt; ЦенаВключаетНДС</Наименование>
						<Порядок>750</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЦенаВключаетНДС" Вид="Реквизит" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВидыРезервов</Код>
				<Наименование>ПеречислениеСсылка.ВидыРезервов --&gt; ПеречислениеСсылка.ВидыРезервов</Наименование>
				<Порядок>700</Порядок>
				<Источник>ПеречислениеСсылка.ВидыРезервов</Источник>
				<Приемник>ПеречислениеСсылка.ВидыРезервов</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>3</Код>
						<Наименование>ОплатаОтпусков --&gt; НаПокрытиеИныхЗатрат</Наименование>
						<Порядок>100</Порядок>
						<Источник>ОплатаОтпусков</Источник>
						<Приемник>НаПокрытиеИныхЗатрат</Приемник>
					</Значение>
					<Значение>
						<Код>1</Код>
						<Наименование>ВыслугаЛет --&gt; НаПокрытиеИныхЗатрат</Наименование>
						<Порядок>200</Порядок>
						<Источник>ВыслугаЛет</Источник>
						<Приемник>НаПокрытиеИныхЗатрат</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>РемонтОС --&gt; НаПокрытиеИныхЗатрат</Наименование>
						<Порядок>300</Порядок>
						<Источник>РемонтОС</Источник>
						<Приемник>НаПокрытиеИныхЗатрат</Приемник>
					</Значение>
					<Значение>
						<Код>8</Код>
						<Наименование>СезонныеЗатраты --&gt; НаПокрытиеИныхЗатрат</Наименование>
						<Порядок>400</Порядок>
						<Источник>СезонныеЗатраты</Источник>
						<Приемник>НаПокрытиеИныхЗатрат</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>ПриродоохранныеМероприятия --&gt; НаПокрытиеИныхЗатра</Наименование>
						<Порядок>500</Порядок>
						<Источник>ПриродоохранныеМероприятия</Источник>
						<Приемник>НаПокрытиеИныхЗатрат</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>РемонтПредметовПроката --&gt; НаПокрытиеИныхЗатрат</Наименование>
						<Порядок>600</Порядок>
						<Источник>РемонтПредметовПроката</Источник>
						<Приемник>НаПокрытиеИныхЗатрат</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ГарантийныйРемонт --&gt; НаПокрытиеИныхЗатрат</Наименование>
						<Порядок>700</Порядок>
						<Источник>ГарантийныйРемонт</Источник>
						<Приемник>НаПокрытиеИныхЗатрат</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>ПрочиеРезервы --&gt; НаПокрытиеИныхЗатрат</Наименование>
						<Порядок>800</Порядок>
						<Источник>ПрочиеРезервы</Источник>
						<Приемник>НаПокрытиеИныхЗатрат</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ПолФизическихЛиц</Код>
				<Наименование>ПеречислениеСсылка.Пол --&gt; ПеречислениеСсылка.ПолФизическихЛиц</Наименование>
				<Порядок>750</Порядок>
				<Источник>ПеречислениеСсылка.Пол</Источник>
				<Приемник>ПеречислениеСсылка.ПолФизическихЛиц</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>2</Код>
						<Наименование>Мужской --&gt; Мужской</Наименование>
						<Порядок>100</Порядок>
						<Источник>Мужской</Источник>
						<Приемник>Мужской</Приемник>
					</Значение>
					<Значение>
						<Код>1</Код>
						<Наименование>Женский --&gt; Женский</Наименование>
						<Порядок>200</Порядок>
						<Источник>Женский</Источник>
						<Приемник>Женский</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ДолжностиОрганизаций</Код>
				<Наименование> --&gt; СправочникСсылка.ДолжностиОрганизаций</Наименование>
				<Порядок>800</Порядок>
				<ПослеЗагрузки>Если Не ЗначениеЗаполнено(Объект.Код) Тогда Объект.УстановитьНовыйКод() КонецЕсли;</ПослеЗагрузки>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Источник>Строка</Источник>
				<Приемник>СправочникСсылка.ДолжностиОрганизаций</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СпособыОтраженияЗарплатыВРеглУчете</Код>
				<Наименование>СправочникСсылка.Сотрудники --&gt; СправочникСсылка.СпособыОтраженияЗарплатыВРеглУчете</Наименование>
				<Порядок>850</Порядок>
				<ПередВыгрузкой>Если ТипЗначенияСтр(Источник) = "Справочник" Тогда
	Счет = Источник.СчетЗатрат.Получить(Параметры.ДатаКонцаПериодаВыгрузки);
	
	Если (ПустоеЗначение(Счет) = 1) Тогда
		Отказ = 1;
	Иначе
		ВходящиеДанные = СоздатьОбъект("СписокЗначений");
		ВходящиеДанные.Установить("СчетДт", Источник.СчетЗатрат.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
		ВходящиеДанные.Установить("СубконтоДт1", Источник.Субконто1.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
		ВходящиеДанные.Установить("СубконтоДт2", Источник.Субконто2.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
		ВходящиеДанные.Установить("СубконтоДт3", Источник.Субконто3.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
	КонецЕсли;
	
Иначе
	Отказ = 1;
КонецЕсли;
</ПередВыгрузкой>
				<ПослеЗагрузки>ИмяСчетаБУ = "СчетДт";
ИмяСубкБУ = "СубконтоДт";
Корреспонденция = Объект;

мСведенияОСчетах = Новый Соответствие;

СведенияОСчете = БухгалтерскийУчет.ПолучитьСведенияОСчете(мСведенияОСчетах, Корреспонденция[ИмяСчетаБУ]);
Для СчетчикСубконто = 1 По 3 Цикл
	Для СчетчикСчета = 1 по СведенияОСчете.КоличествоСубконто Цикл
		Если (Корреспонденция[ИмяСубкБУ+СчетчикСубконто] = СведенияОСчете["ТипСубконто"+СчетчикСчета].ПривестиЗначение(Корреспонденция[ИмяСубкБУ+СчетчикСубконто])) и (СчетчикСчета &lt;&gt; СчетчикСубконто) Тогда
			Субконто = Корреспонденция[ИмяСубкБУ+СчетчикСчета];
			Корреспонденция[ИмяСубкБУ+СчетчикСчета] = Корреспонденция[ИмяСубкБУ+СчетчикСубконто];
			Корреспонденция[ИмяСубкБУ+СчетчикСубконто] = Субконто;
		КонецЕсли;
	КонецЦикла;
КонецЦикла;

Для СчетчикСубконто = 1 По 3 Цикл
	Если СведенияОСчете.КоличествоСубконто &gt;= СчетчикСубконто Тогда
		Корреспонденция[ИмяСубкБУ+СчетчикСубконто] = СведенияОСчете["ТипСубконто"+СчетчикСубконто].ПривестиЗначение(Корреспонденция[ИмяСубкБУ+СчетчикСубконто]);

	Иначе
		Корреспонденция[ИмяСубкБУ+СчетчикСубконто] = Неопределено;
	КонецЕсли;
КонецЦикла;
</ПослеЗагрузки>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Источник>СправочникСсылка.Сотрудники</Источник>
				<Приемник>СправочникСсылка.СпособыОтраженияЗарплатыВРеглУчете</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<НеЗамещать>true</НеЗамещать>
						<Код>1</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = СокрП(Источник.СчетЗатрат.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
Если ПустоеЗначение(Источник.Субконто1.Получить(Параметры.ДатаКонцаПериодаВыгрузки)) = 0 Тогда
	 Значение = Значение + " / " + СокрП(Источник.Субконто1.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
КонецЕсли;
Если ПустоеЗначение(Источник.Субконто2.Получить(Параметры.ДатаКонцаПериодаВыгрузки)) = 0 Тогда
	 Значение = Значение + " / " + СокрП(Источник.Субконто2.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
КонецЕсли;
Если ПустоеЗначение(Источник.Субконто3.Получить(Параметры.ДатаКонцаПериодаВыгрузки)) = 0 Тогда
	 Значение = Значение + " / " + СокрП(Источник.Субконто3.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
КонецЕсли; 
Значение = Лев(Значение, 50);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; СчетДт</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СчетДт" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
						<ПередВыгрузкой>Счет = Источник.СчетЗатрат.Получить(Параметры.ДатаКонцаПериодаВыгрузки);
Параметры.ПараметрыАлгоритмов.Установить("Счет",Счет);
Параметры.ПараметрыАлгоритмов.Установить("Субконто1", Источник.Субконто1.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
Параметры.ПараметрыАлгоритмов.Установить("Субконто2", Источник.Субконто2.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
Параметры.ПараметрыАлгоритмов.Установить("Субконто3", Источник.Субконто3.Получить(Параметры.ДатаКонцаПериодаВыгрузки));

ДобавленныйСчет = мТаблицаПравилКонвертацииОбъектов.ПолучитьЗначение(НайтиПравило(Счет, "Хозрасчетный"), "Значения").Получить(Строка(Счет));
Если (ПустоеЗначение(ДобавленныйСчет) = 1) И (ПустоеЗначение(Счет) = 0) Тогда
	ИмяПКО = "ХозрасчетныйСтрДоб";
Иначе
	 ИмяПКО = "Хозрасчетный";
КонецЕсли;
</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; СубконтоДт1</Наименование>
						<Порядок>300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СубконтоДт1" Вид="Реквизит"/>
						<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Счет", Источник.СчетЗатрат.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
Параметры.ПараметрыАлгоритмов.Установить("Субконто1", Источник.Субконто1.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
Параметры.ПараметрыАлгоритмов.Установить("Субконто2", Источник.Субконто2.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
Параметры.ПараметрыАлгоритмов.Установить("Субконто3", Источник.Субконто3.Получить(Параметры.ДатаКонцаПериодаВыгрузки));

Параметры.ПараметрыАлгоритмов.Установить("Субконто", Источник.Субконто1.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
ПриВыгрузкеСубконто();</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; СубконтоДт2</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СубконтоДт2" Вид="Реквизит"/>
						<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Счет", Источник.СчетЗатрат.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
Параметры.ПараметрыАлгоритмов.Установить("Субконто1", Источник.Субконто1.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
Параметры.ПараметрыАлгоритмов.Установить("Субконто2", Источник.Субконто2.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
Параметры.ПараметрыАлгоритмов.Установить("Субконто3", Источник.Субконто3.Получить(Параметры.ДатаКонцаПериодаВыгрузки));

Параметры.ПараметрыАлгоритмов.Установить("Субконто", Источник.Субконто2.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
ПриВыгрузкеСубконто();</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; СубконтоДт3</Наименование>
						<Порядок>500</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СубконтоДт3" Вид="Реквизит"/>
						<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Счет", Источник.СчетЗатрат.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
Параметры.ПараметрыАлгоритмов.Установить("Субконто1", Источник.Субконто1.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
Параметры.ПараметрыАлгоритмов.Установить("Субконто2", Источник.Субконто2.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
Параметры.ПараметрыАлгоритмов.Установить("Субконто3", Источник.Субконто3.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
Параметры.ПараметрыАлгоритмов.Установить("Субконто", Источник.Субконто3.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
ПриВыгрузкеСубконто();</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; ОтражениеВУСН</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтражениеВУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.ОтражениеВУСН"/>
						<ПередВыгрузкой>Значение = "Принимаются";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование> --&gt; СчетКт</Наименование>
						<Порядок>700</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СчетКт" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
						<ПередВыгрузкой>Значение = "70";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; СубконтоКт1</Наименование>
						<Порядок>800</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СубконтоКт1" Вид="Реквизит"/>
						<ПередВыгрузкой>ТипПриемника = "СправочникСсылка.ФизическиеЛица";
Пусто = 1;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ДокументыУдостоверяющиеЛичность</Код>
				<Наименование>СправочникСсылка.ДокументыУдостоверяющиеЛичность --&gt; СправочникСсылка.ДокументыУдостоверяющиеЛичност</Наименование>
				<Порядок>900</Порядок>
				<Источник>СправочникСсылка.ДокументыУдостоверяющиеЛичность</Источник>
				<Приемник>СправочникСсылка.ДокументыУдостоверяющиеЛичность</Приемник>
				<Свойства>
					<Свойство Отключить="true">
						<Код>3</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>КодНДФЛ --&gt; КодИМНС</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="КодНДФЛ" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="КодИМНС" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство Отключить="true">
						<Код>2</Код>
						<Наименование>КодСЗВ --&gt; КодПФР</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="КодСЗВ" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="КодПФР" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ОКСМ</Код>
				<Наименование>СправочникСсылка.ОКСМ --&gt; СправочникСсылка.КлассификаторСтранМира</Наименование>
				<Порядок>950</Порядок>
				<Источник>СправочникСсылка.ОКСМ</Источник>
				<Приемник>СправочникСсылка.КлассификаторСтранМира</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>Наименование --&gt; НаименованиеПолное</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВычетыНаРебенка</Код>
				<Наименование>Число --&gt; СправочникСсылка.ВычетыНДФЛ</Наименование>
				<Порядок>1000</Порядок>
				<Источник>СправочникСсылка.ВидыВычетов</Источник>
				<Приемник>СправочникСсылка.ВычетыНДФЛ</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>КодДляОтчетности2009 --&gt; КодДляОтчетности2009</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="КодДляОтчетности2009" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="КодДляОтчетности2009" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВычетыНаРебенкаИнвалида</Код>
				<Наименование>Число --&gt; СправочникСсылка.ВычетыНДФЛ</Наименование>
				<Порядок>1050</Порядок>
				<ПередВыгрузкой>Если (Источник &lt;&gt; 1200) и (Источник &lt;&gt; 2400) и (Источник &lt;&gt; 2000) и (Источник &lt;&gt; 4000)Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
				<Источник>Число</Источник>
				<Приемник>СправочникСсылка.ВычетыНДФЛ</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; КодДляОтчетности2008</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодДляОтчетности2008" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = ?((Источник = 1200) или (Источник = 2000), "106", "107");</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВычетыНДФЛЛичный</Код>
				<Наименование>Число --&gt; СправочникСсылка.ВычетыНДФЛ</Наименование>
				<Порядок>1050</Порядок>
				<Источник>СправочникСсылка.ВидыВычетов</Источник>
				<Приемник>СправочникСсылка.ВычетыНДФЛ</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>КодДляОтчетности2009 --&gt; КодДляОтчетности2009</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="КодДляОтчетности2009" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="КодДляОтчетности2009" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВычетыНДФЛ</Код>
				<Наименование>ПеречислениеСсылка.ТипыВычетов --&gt; СправочникСсылка.ВычетыНДФЛ</Наименование>
				<Порядок>1100</Порядок>
				<ПередВыгрузкой>Если Источник = Перечисление.ТипыВычетов.БезВычетов Тогда
	Отказ = 1;
КонецЕсли;
</ПередВыгрузкой>
				<Источник>ПеречислениеСсылка.ТипыВычетов</Источник>
				<Приемник>СправочникСсылка.ВычетыНДФЛ</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения>
					<Значение>
						<Код>3</Код>
						<Наименование>Обычный --&gt; 103</Наименование>
						<Порядок>100</Порядок>
						<Источник>Обычный</Источник>
						<Приемник>Код103</Приемник>
					</Значение>
					<Значение>
						<Код>1</Код>
						<Наименование>Льготный1 --&gt; 104</Наименование>
						<Порядок>200</Порядок>
						<Источник>Льготный1</Источник>
						<Приемник>Код104</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>Льготный2 --&gt; 105</Наименование>
						<Порядок>300</Порядок>
						<Источник>Льготный2</Источник>
						<Приемник>Код105</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ВидыПрочихДоходовИРасходов</Код>
				<Наименование>ПеречислениеСсылка.ВидыПрочихДоходовИРасходов --&gt; ПеречислениеСсылка.ВидыПрочихДоходовИРасходов</Наименование>
				<Порядок>1150</Порядок>
				<Источник>ПеречислениеСсылка.ВидыПрочихДоходовИРасходов</Источник>
				<Приемник>ПеречислениеСсылка.ВидыПрочихДоходовИРасходов</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>АктивыПереданныеВПользование --&gt; ПрочиеВнереализац</Наименование>
						<Порядок>100</Порядок>
						<Источник>АктивыПереданныеВПользование</Источник>
						<Приемник>ПрочиеВнереализационныеДоходыРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>10</Код>
						<Наименование>ПредоставленныеПраваПоНМА --&gt; ПрочиеВнереализацион</Наименование>
						<Порядок>200</Порядок>
						<Источник>ПредоставленныеПраваПоНМА</Источник>
						<Приемник>ПрочиеВнереализационныеДоходыРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>21</Код>
						<Наименование>УчастиеВУставныхКапиталах --&gt; ДоходыРасходыСвязанн</Наименование>
						<Порядок>300</Порядок>
						<Источник>УчастиеВУставныхКапиталах</Источник>
						<Приемник>ДоходыРасходыСвязанныеСУчастиемВДругихОрганизациях</Приемник>
					</Значение>
					<Значение>
						<Код>22</Код>
						<Наименование>УчастиеВУставныхКапиталахИностранныхОрганизаций --</Наименование>
						<Порядок>400</Порядок>
						<Источник>УчастиеВУставныхКапиталахИностранныхОрганизаций</Источник>
						<Приемник>ДоходыРасходыСвязанныеСУчастиемВДругихОрганизациях</Приемник>
					</Значение>
					<Значение>
						<Код>11</Код>
						<Наименование>ПрибыльПоСовместнойДеятельности --&gt; ДоходыРасходыС</Наименование>
						<Порядок>500</Порядок>
						<Источник>ПрибыльПоСовместнойДеятельности</Источник>
						<Приемник>ДоходыРасходыСвязанныеСУчастиемВДругихОрганизациях</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>ВыбытиеОС --&gt; ДоходыРасходыСвязанныеСРеализациейОс</Наименование>
						<Порядок>600</Порядок>
						<Источник>ВыбытиеОС</Источник>
						<Приемник>ДоходыРасходыСвязанныеСРеализациейОсновныхСредств</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>ВыбытиеНМА --&gt; ДоходыРасходыСвязанныеСРеализациейН</Наименование>
						<Порядок>700</Порядок>
						<Источник>ВыбытиеНМА</Источник>
						<Приемник>ДоходыРасходыСвязанныеСРеализациейНематериальныхАктивов</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ВыбытиеАктивов --&gt; ДоходыРасходыСвязанныеСРеализац</Наименование>
						<Порядок>800</Порядок>
						<Источник>ВыбытиеАктивов</Источник>
						<Приемник>ДоходыРасходыСвязанныеСРеализациейПрочегоИмущества</Приемник>
					</Значение>
					<Значение>
						<Код>12</Код>
						<Наименование>ПроцентыКПолучению --&gt; ПроцентыКПолучениюУплате</Наименование>
						<Порядок>900</Порядок>
						<Источник>ПроцентыКПолучению</Источник>
						<Приемник>ПроцентыКПолучениюУплате</Приемник>
					</Значение>
					<Значение>
						<Код>13</Код>
						<Наименование>ПроцентыКУплате --&gt; ПроцентыКПолучениюУплате</Наименование>
						<Порядок>1000</Порядок>
						<Источник>ПроцентыКУплате</Источник>
						<Приемник>ПроцентыКПолучениюУплате</Приемник>
					</Значение>
					<Значение>
						<Код>19</Код>
						<Наименование>УслугиБанков --&gt; РасходыНаУслугиБанков</Наименование>
						<Порядок>1100</Порядок>
						<Источник>УслугиБанков</Источник>
						<Приемник>РасходыНаУслугиБанков</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>КупляПродажаИностраннойВалюты --&gt; ПрочиеВнереализа</Наименование>
						<Порядок>1200</Порядок>
						<Источник>КупляПродажаИностраннойВалюты</Источник>
						<Приемник>ПрочиеВнереализационныеДоходыРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>9</Код>
						<Наименование>ОсуществлениеФинансовыхУслуг --&gt; ДоходыРасходыСвяз</Наименование>
						<Порядок>1300</Порядок>
						<Источник>ОсуществлениеФинансовыхУслуг</Источник>
						<Приемник>ДоходыРасходыСвязанныеСРеализациейПраваТребованияКакОказанияФинансовыхУслуг</Приемник>
					</Значение>
					<Значение>
						<Код>20</Код>
						<Наименование>УступкиПраваТребования --&gt; ДоходыРасходыСвязанныеС</Наименование>
						<Порядок>1400</Порядок>
						<Источник>УступкиПраваТребования</Источник>
						<Приемник>ДоходыРасходыСвязанныеСРеализациейПраваТребованияДоНаступленияСрокаПлатежа</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ВосстановлениеРезервов --&gt; ПрочиеВнереализационные</Наименование>
						<Порядок>1500</Порядок>
						<Источник>ВосстановлениеРезервов</Источник>
						<Приемник>ПрочиеВнереализационныеДоходыРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>18</Код>
						<Наименование>РезервыСомнительныхДолгов --&gt; ПрочиеВнереализацион</Наименование>
						<Порядок>1600</Порядок>
						<Источник>РезервыСомнительныхДолгов</Источник>
						<Приемник>ПрочиеВнереализационныеДоходыРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>8</Код>
						<Наименование>ОперацииСФинансовымиИнструментами --&gt; ДоходыРасход</Наименование>
						<Порядок>1700</Порядок>
						<Источник>ОперацииСФинансовымиИнструментами</Источник>
						<Приемник>ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделокОР</Приемник>
					</Значение>
					<Значение>
						<Код>14</Код>
						<Наименование>ПроцентыПоГосударственнымЦеннымБумагам --&gt; Процент</Наименование>
						<Порядок>1800</Порядок>
						<Источник>ПроцентыПоГосударственнымЦеннымБумагам</Источник>
						<Приемник>ПроцентыКПолучениюУплате</Приемник>
					</Значение>
					<Значение>
						<Код>15</Код>
						<Наименование>ПроцентыПоГосударственнымЦеннымБумагамПоСтавке0 --</Наименование>
						<Порядок>1900</Порядок>
						<Источник>ПроцентыПоГосударственнымЦеннымБумагамПоСтавке0</Источник>
						<Приемник>ПроцентыКПолучениюУплате</Приемник>
					</Значение>
					<Значение>
						<Код>17</Код>
						<Наименование>ПрочиеОперационныеДоходыРасходы --&gt; ПрочиеОперацио</Наименование>
						<Порядок>2000</Порядок>
						<Источник>ПрочиеОперационныеДоходыРасходы</Источник>
						<Приемник>ПрочиеОперационныеДоходыРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>КурсовыеРазницы --&gt; КурсовыеРазницы</Наименование>
						<Порядок>2100</Порядок>
						<Источник>КурсовыеРазницы</Источник>
						<Приемник>КурсовыеРазницы</Приемник>
					</Значение>
					<Значение>
						<Код>16</Код>
						<Наименование>ПрочиеВнереализационныеДоходыРасходы --&gt; ПрочиеВне</Наименование>
						<Порядок>2200</Порядок>
						<Источник>ПрочиеВнереализационныеДоходыРасходы</Источник>
						<Приемник>ПрочиеВнереализационныеДоходыРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>23</Код>
						<Наименование>СписаннаяКредиторскаяЗадолженность --&gt; СписаниеДеб</Наименование>
						<Порядок>2300</Порядок>
						<Источник>СписаннаяКредиторскаяЗадолженность</Источник>
						<Приемник>СписаниеДебиторскойКредиторскойЗадолженности</Приемник>
					</Значение>
					<Значение>
						<Код>24</Код>
						<Наименование>СписаннаяДебиторскаяЗадолженность --&gt; СписаниеДеби</Наименование>
						<Порядок>2400</Порядок>
						<Источник>СписаннаяДебиторскаяЗадолженность</Источник>
						<Приемник>СписаниеДебиторскойКредиторскойЗадолженности</Приемник>
					</Значение>
					<Значение>
						<Код>25</Код>
						<Наименование>ВозмещениеУбытковКУплате --&gt; ВозмещениеУбытковКПол</Наименование>
						<Порядок>2500</Порядок>
						<Источник>ВозмещениеУбытковКУплате</Источник>
						<Приемник>ВозмещениеУбытковКПолучениюУплате</Приемник>
					</Значение>
					<Значение>
						<Код>26</Код>
						<Наименование>ВозмещениеУбытковКПолучению --&gt; ВозмещениеУбытковК</Наименование>
						<Порядок>2600</Порядок>
						<Источник>ВозмещениеУбытковКПолучению</Источник>
						<Приемник>ВозмещениеУбытковКПолучениюУплате</Приемник>
					</Значение>
					<Значение>
						<Код>27</Код>
						<Наименование>ДооценкаУценкаАктивов --&gt; РасходыОтСниженияСтоимос</Наименование>
						<Порядок>2700</Порядок>
						<Источник>ДооценкаУценкаАктивов</Источник>
						<Приемник>РасходыОтСниженияСтоимостиАктивов</Приемник>
					</Значение>
					<Значение>
						<Код>28</Код>
						<Наименование>ШтрафыПоДоговорам --&gt; ШтрафыПениНеустойкиКПолучени</Наименование>
						<Порядок>2800</Порядок>
						<Источник>ШтрафыПоДоговорам</Источник>
						<Приемник>ШтрафыПениНеустойкиКПолучениюУплате</Приемник>
					</Значение>
					<Значение>
						<Код>29</Код>
						<Наименование>АктивыПолученныеБезвозмездно --&gt; ДоходыРасходыСвяз</Наименование>
						<Порядок>2900</Порядок>
						<Источник>АктивыПолученныеБезвозмездно</Источник>
						<Приемник>ДоходыРасходыСвязанныеСБезвозмезднымПолучениемИмущества</Приемник>
					</Значение>
					<Значение>
						<Код>30</Код>
						<Наименование>ПрибыльУбыткиПрошлыхЛет --&gt; ПрибыльУбытокПрошлыхЛе</Наименование>
						<Порядок>3000</Порядок>
						<Источник>ПрибыльУбыткиПрошлыхЛет</Источник>
						<Приемник>ПрибыльУбытокПрошлыхЛет</Приемник>
					</Значение>
					<Значение>
						<Код>31</Код>
						<Наименование>ОтрицательнаяРазницаОтПереоценкиИмущества --&gt; Расх</Наименование>
						<Порядок>3100</Порядок>
						<Источник>ОтрицательнаяРазницаОтПереоценкиИмущества</Источник>
						<Приемник>РасходыОтСниженияСтоимостиАктивов</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>СпособыПоступленияНМА</Код>
				<Наименование>ПеречислениеСсылка.СпособыПоступленияНМА --&gt; ПеречислениеСсылка.СпособыПоступленияАктивов</Наименование>
				<Порядок>1200</Порядок>
				<Источник>ПеречислениеСсылка.СпособыПоступленияНМА</Источник>
				<Приемник>ПеречислениеСсылка.СпособыПоступленияАктивов</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>4</Код>
						<Наименование>ПриобретениеЗаПлату --&gt; ПриобретениеЗаПлату</Наименование>
						<Порядок>100</Порядок>
						<Источник>ПриобретениеЗаПлату</Источник>
						<Приемник>ПриобретениеЗаПлату</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ВкладВУставныйКапитал --&gt; ВкладВУставныйКапитал</Наименование>
						<Порядок>200</Порядок>
						<Источник>ВкладВУставныйКапитал</Источник>
						<Приемник>ВкладВУставныйКапитал</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ПоДоговоруМены --&gt; ВОбменНаДругоеИмущество</Наименование>
						<Порядок>300</Порядок>
						<Источник>ПоДоговоруМены</Источник>
						<Приемник>ВОбменНаДругоеИмущество</Приемник>
					</Значение>
					<Значение>
						<Код>1</Код>
						<Наименование>БезвозмездноеПоступление --&gt; БезвозмездноеПоступле</Наименование>
						<Порядок>400</Порядок>
						<Источник>БезвозмездноеПоступление</Источник>
						<Приемник>БезвозмездноеПоступление</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>Иной --&gt; Иное</Наименование>
						<Порядок>500</Порядок>
						<Источник>Иной</Источник>
						<Приемник>Иное</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>СпособыПоступленияОС</Код>
				<Наименование>ПеречислениеСсылка.СпособыПоступленияОС --&gt; ПеречислениеСсылка.СпособыПоступленияАктивов</Наименование>
				<Порядок>1250</Порядок>
				<Источник>ПеречислениеСсылка.СпособыПоступленияОС</Источник>
				<Приемник>ПеречислениеСсылка.СпособыПоступленияАктивов</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>5</Код>
						<Наименование>ПриобретениеЗаПлату --&gt; ПриобретениеЗаПлату</Наименование>
						<Порядок>100</Порядок>
						<Источник>ПриобретениеЗаПлату</Источник>
						<Приемник>ПриобретениеЗаПлату</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ВкладВУставныйКапитал --&gt; ВкладВУставныйКапитал</Наименование>
						<Порядок>200</Порядок>
						<Источник>ВкладВУставныйКапитал</Источник>
						<Приемник>ВкладВУставныйКапитал</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>ПоДоговоруМены --&gt; ВОбменНаДругоеИмущество</Наименование>
						<Порядок>300</Порядок>
						<Источник>ПоДоговоруМены</Источник>
						<Приемник>ВОбменНаДругоеИмущество</Приемник>
					</Значение>
					<Значение>
						<Код>1</Код>
						<Наименование>БезвозмездноеПоступление --&gt; БезвозмездноеПоступле</Наименование>
						<Порядок>400</Порядок>
						<Источник>БезвозмездноеПоступление</Источник>
						<Приемник>БезвозмездноеПоступление</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ПоДоговоруЛизинга --&gt; ПоДоговоруАренды</Наименование>
						<Порядок>500</Порядок>
						<Источник>ПоДоговоруЛизинга</Источник>
						<Приемник>ПоДоговоруАренды</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>Строительство --&gt; Строительство</Наименование>
						<Порядок>600</Порядок>
						<Источник>Строительство</Источник>
						<Приемник>Строительство</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>Иной --&gt; Иное</Наименование>
						<Порядок>650</Порядок>
						<Источник>Иной</Источник>
						<Приемник>Иное</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ПараметрыВыработкиОС</Код>
				<Наименование> --&gt; СправочникСсылка.ПараметрыВыработкиОС</Наименование>
				<Порядок>1300</Порядок>
				<ПослеЗагрузки>Если Не ЗначениеЗаполнено(Объект.Код) Тогда Объект.УстановитьНовыйКод() КонецЕсли;</ПослеЗагрузки>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Приемник>СправочникСсылка.ПараметрыВыработкиОС</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ОСВводИПринятиеКУчету</Код>
				<Наименование> --&gt; СправочникСсылка.СобытияОС</Наименование>
				<Порядок>1350</Порядок>
				<ПослеЗагрузки>Если Не ЗначениеЗаполнено(Объект.Код) Тогда Объект.УстановитьНовыйКод() КонецЕсли;</ПослеЗагрузки>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Приемник>СправочникСсылка.СобытияОС</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "Принятие к учету и ввод в экплуатацию";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; ВидОперацииОС</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидСобытияОС" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыСобытийОС"/>
						<ПередВыгрузкой>Значение = "ПринятиеКУчетуСВводомВЭксплуатацию";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ОСВыбытие</Код>
				<Наименование> --&gt; СправочникСсылка.СобытияОС</Наименование>
				<Порядок>1400</Порядок>
				<ПослеЗагрузки>Если Не ЗначениеЗаполнено(Объект.Код) Тогда Объект.УстановитьНовыйКод() КонецЕсли;</ПослеЗагрузки>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Приемник>СправочникСсылка.СобытияОС</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "Выбыло";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; ВидСобытияОС</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидСобытияОС" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыСобытийОС"/>
						<ПередВыгрузкой>Значение = "Списание";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ОСМодернизация</Код>
				<Наименование> --&gt; СправочникСсылка.СобытияОС</Наименование>
				<Порядок>1400</Порядок>
				<ПослеЗагрузки>Если Не ЗначениеЗаполнено(Объект.Код) Тогда Объект.УстановитьНовыйКод() КонецЕсли;</ПослеЗагрузки>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Приемник>СправочникСсылка.СобытияОС</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "Модернизировано";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; ВидОперацииОС</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидСобытияОС" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыСобытийОС"/>
						<ПередВыгрузкой>Значение = "Модернизация";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СпособыОтраженияРасходовПоАмортизации</Код>
				<Наименование>СправочникСсылка.ОсновныеСредства --&gt; СправочникСсылка.СпособыОтраженияРасходовПоАмортизации</Наименование>
				<Порядок>1450</Порядок>
				<ПередВыгрузкой>Если ТипЗначенияСтр(Источник) = "Справочник" Тогда
	Счет = Источник.СчетЗатрат.Получить(Параметры.ДатаКонцаПериодаВыгрузки);
	
	Если (ПустоеЗначение(Счет) = 1) Тогда
		Отказ = 1;
	КонецЕсли;
	
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
				<ПослеЗагрузки>ИмяСчетаБУ = "СчетЗатрат";
ИмяСубкБУ = "Субконто";

Для каждого Способ из Объект.Способы Цикл

	Корреспонденция = Способ;
	
	мСведенияОСчетах = Новый Соответствие;

	СведенияОСчете = БухгалтерскийУчет.ПолучитьСведенияОСчете(мСведенияОСчетах, Корреспонденция[ИмяСчетаБУ]);
	Для СчетчикСубконто = 1 По 3 Цикл
		Для СчетчикСчета = 1 по СведенияОСчете.КоличествоСубконто Цикл
			Если (Корреспонденция[ИмяСубкБУ+СчетчикСубконто] = СведенияОСчете["ТипСубконто"+СчетчикСчета].ПривестиЗначение(Корреспонденция[ИмяСубкБУ+СчетчикСубконто])) и (СчетчикСчета &lt;&gt; СчетчикСубконто) Тогда
				Субконто = Корреспонденция[ИмяСубкБУ+СчетчикСчета];
				Корреспонденция[ИмяСубкБУ+СчетчикСчета] = Корреспонденция[ИмяСубкБУ+СчетчикСубконто];
				Корреспонденция[ИмяСубкБУ+СчетчикСубконто] = Субконто;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;

	Для СчетчикСубконто = 1 По 3 Цикл
		Если СведенияОСчете.КоличествоСубконто &gt;= СчетчикСубконто Тогда
			Корреспонденция[ИмяСубкБУ+СчетчикСубконто] = СведенияОСчете["ТипСубконто"+СчетчикСубконто].ПривестиЗначение(Корреспонденция[ИмяСубкБУ+СчетчикСубконто]);

		Иначе
			Корреспонденция[ИмяСубкБУ+СчетчикСубконто] = Неопределено;
		КонецЕсли;
	КонецЦикла;
	
	Если НЕ Корреспонденция[ИмяСчетаБУ].УчетПоПодразделениям Тогда			
		Корреспонденция.ПодразделениеОрганизации = Неопределено;
	КонецЕсли;
	
КонецЦикла;

Если Не ЗначениеЗаполнено(Объект.Код) Тогда Объект.УстановитьНовыйКод() КонецЕсли;
</ПослеЗагрузки>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Приемник>СправочникСсылка.СпособыОтраженияРасходовПоАмортизации</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt;</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "БУ: " + СокрП(Источник.СчетЗатрат.Получить(Параметры.ДатаВводаОстатков)) + " / " + СокрП(Источник.Субконто1.Получить(Параметры.ДатаВводаОстатков)) + " / " + СокрП(Источник.Субконто2.Получить(Параметры.ДатаВводаОстатков)) + " / " + СокрП(Источник.Субконто3.Получить(Параметры.ДатаВводаОстатков));</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = СокрП(Источник.СчетЗатрат.Получить(Параметры.ДатаКонцаПериодаВыгрузки)) + " / " + 
СокрП(Источник.Субконто1.Получить(Параметры.ДатаКонцаПериодаВыгрузки)) + " / " + 
СокрП(Источник.Субконто2.Получить(Параметры.ДатаКонцаПериодаВыгрузки)) + " / " + 
СокрП(Источник.Субконто3.Получить(Параметры.ДатаКонцаПериодаВыгрузки));</ПередВыгрузкой>
					</Свойство>
					<Группа>
						<Код>4</Код>
						<Наименование> --&gt; Способы</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Способы" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("СчетЗатрат");
КоллекцияОбъектов.НоваяКолонка("Субконто1");
КоллекцияОбъектов.НоваяКолонка("Субконто2");
КоллекцияОбъектов.НоваяКолонка("Субконто3");
КоллекцияОбъектов.НоваяКолонка("Коэффициент");
КоллекцияОбъектов.НоваяСтрока();
КоллекцияОбъектов.СчетЗатрат = Источник.СчетЗатрат.Получить(Параметры.ДатаКонцаПериодаВыгрузки);
КоллекцияОбъектов.Субконто1 = Источник.Субконто1.Получить(Параметры.ДатаКонцаПериодаВыгрузки);
КоллекцияОбъектов.Субконто2 = Источник.Субконто2.Получить(Параметры.ДатаКонцаПериодаВыгрузки);
КоллекцияОбъектов.Субконто3 = Источник.Субконто3.Получить(Параметры.ДатаКонцаПериодаВыгрузки);
КоллекцияОбъектов.Коэффициент = 1;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>8</Код>
							<Наименование> --&gt; СчетЗатрат</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетЗатрат" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<ПередВыгрузкой>Счет = Источник.СчетЗатрат.Получить(Параметры.ДатаКонцаПериодаВыгрузки);
Параметры.ПараметрыАлгоритмов.Установить("Счет", Счет);
Параметры.ПараметрыАлгоритмов.Установить("Субконто1", Источник.Субконто1.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
Параметры.ПараметрыАлгоритмов.Установить("Субконто2", Источник.Субконто2.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
Параметры.ПараметрыАлгоритмов.Установить("Субконто3", Источник.Субконто3.Получить(Параметры.ДатаКонцаПериодаВыгрузки));

ДобавленныйСчет = мТаблицаПравилКонвертацииОбъектов.ПолучитьЗначение(НайтиПравило(Счет, "Хозрасчетный"), "Значения").Получить(Строка(Счет));
Если (ПустоеЗначение(ДобавленныйСчет) = 1) И (ПустоеЗначение(Счет) = 0) Тогда
	ИмяПКО = "ХозрасчетныйСтрДоб";
Иначе
	 ИмяПКО = "Хозрасчетный";
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование> --&gt; Субконто1</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Субконто1" Вид="Реквизит"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Счет", Источник.СчетЗатрат.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
Параметры.ПараметрыАлгоритмов.Установить("Субконто1", Источник.Субконто1.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
Параметры.ПараметрыАлгоритмов.Установить("Субконто2", Источник.Субконто2.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
Параметры.ПараметрыАлгоритмов.Установить("Субконто3", Источник.Субконто3.Получить(Параметры.ДатаКонцаПериодаВыгрузки));

Параметры.ПараметрыАлгоритмов.Установить("Субконто", Источник.Субконто1.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
ПриВыгрузкеСубконто();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; Субконто2</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Субконто2" Вид="Реквизит"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Счет", Источник.СчетЗатрат.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
Параметры.ПараметрыАлгоритмов.Установить("Субконто1", Источник.Субконто1.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
Параметры.ПараметрыАлгоритмов.Установить("Субконто2", Источник.Субконто2.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
Параметры.ПараметрыАлгоритмов.Установить("Субконто3", Источник.Субконто3.Получить(Параметры.ДатаКонцаПериодаВыгрузки));

Параметры.ПараметрыАлгоритмов.Установить("Субконто", Источник.Субконто2.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
ПриВыгрузкеСубконто();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; Субконто3</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Субконто3" Вид="Реквизит"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Счет", Источник.СчетЗатрат.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
Параметры.ПараметрыАлгоритмов.Установить("Субконто1", Источник.Субконто1.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
Параметры.ПараметрыАлгоритмов.Установить("Субконто2", Источник.Субконто2.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
Параметры.ПараметрыАлгоритмов.Установить("Субконто3", Источник.Субконто3.Получить(Параметры.ДатаКонцаПериодаВыгрузки));

Параметры.ПараметрыАлгоритмов.Установить("Субконто", Источник.Субконто3.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
ПриВыгрузкеСубконто();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование> --&gt; Коэффициент</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Коэффициент" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование> --&gt; ПодразделениеОрганизации</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПодразделениеОрганизации" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ПодразделенияОрганизаций                          </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "Основное подразделение";</ПередВыгрузкой>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>РБП_НМА</Код>
				<Наименование>СправочникСсылка.РасходыБудущихПериодов --&gt; СправочникСсылка.НематериальныеАктивы</Наименование>
				<Порядок>1500</Порядок>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Источник>СправочникСсылка.РасходыБудущихПериодов</Источник>
				<Приемник>СправочникСсылка.НематериальныеАктивы</Приемник>
				<Свойства>
					<Свойство Отключить="true">
						<Код>2</Код>
						<Наименование> --&gt; Код</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "К" + ПривестиНомерКДлине(Источник.Код, 7);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>5</Код>
						<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование>Родитель --&gt; Родитель</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.НематериальныеАктивы"/>
						<КодПравилаКонвертации>РБП_НМА                                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; ВидОбъектаУчета</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидОбъектаУчета" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыОбъектовУчетаНМА"/>
						<ПередВыгрузкой>Значение = "РасходыНаНИОКР"; Отказ = Источник.ЭтоГруппа();</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СпособыНачисленияАмортизацииНМА</Код>
				<Наименование>ПеречислениеСсылка.СпособыНачисленияАмортизацииНМА --&gt; ПеречислениеСсылка.СпособыНачисленияАмортизац</Наименование>
				<Порядок>1550</Порядок>
				<Источник>ПеречислениеСсылка.СпособыНачисленияАмортизацииНМА</Источник>
				<Приемник>ПеречислениеСсылка.СпособыНачисленияАмортизацииНМА</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>Линейный --&gt; Линейный</Наименование>
						<Порядок>100</Порядок>
						<Источник>Линейный</Источник>
						<Приемник>Линейный</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>УменьшаемогоОстатка --&gt; УменьшаемогоОстатка</Наименование>
						<Порядок>200</Порядок>
						<Источник>УменьшаемогоОстатка</Источник>
						<Приемник>УменьшаемогоОстатка</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ПропорциональноОбъемуПродукцииРабот --&gt; Пропорцион</Наименование>
						<Порядок>300</Порядок>
						<Источник>ПропорциональноОбъемуПродукцииРабот</Источник>
						<Приемник>ПропорциональноОбъемуПродукции</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>СпособыНачисленияАмортизацииОС</Код>
				<Наименование>ПеречислениеСсылка.СпособыНачисленияАмортизацииОС --&gt; ПеречислениеСсылка.СпособыНачисленияАмортизаци</Наименование>
				<Порядок>1600</Порядок>
				<Источник>ПеречислениеСсылка.СпособыНачисленияАмортизацииОС</Источник>
				<Приемник>ПеречислениеСсылка.СпособыНачисленияАмортизацииОС</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>Линейный --&gt; Линейный</Наименование>
						<Порядок>100</Порядок>
						<Источник>Линейный</Источник>
						<Приемник>Линейный</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>УменьшаемогоОстатка --&gt; УменьшаемогоОстатка</Наименование>
						<Порядок>200</Порядок>
						<Источник>УменьшаемогоОстатка</Источник>
						<Приемник>УменьшаемогоОстатка</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ПоСуммеЧиселЛет --&gt; ПоСуммеЧиселЛетИспользования</Наименование>
						<Порядок>300</Порядок>
						<Источник>ПоСуммеЧиселЛет</Источник>
						<Приемник>ПоСуммеЧиселЛетИспользования</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>ПропорциональноОбъемуПродукцииРабот --&gt; Пропорцион</Наименование>
						<Порядок>400</Порядок>
						<Источник>ПропорциональноОбъемуПродукцииРабот</Источник>
						<Приемник>ПропорциональноОбъемуПродукции</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>ПоЕдинымНормам --&gt; ПоЕНАОФ</Наименование>
						<Порядок>500</Порядок>
						<Источник>ПоЕдинымНормам</Источник>
						<Приемник>ПоЕНАОФ</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ГруппаНоменклатуры</Код>
				<Наименование>Группа номенклатуры   </Наименование>
				<Порядок>1650</Порядок>
				<ПередВыгрузкой>КлючВыгружаемыхДанных = "АвтоматическиСозданнаяГруппа_" + ВходящиеДанные.Получить("Наименование");</ПередВыгрузкой>
				<ПослеЗагрузки>Если НЕ ЗначениеЗаполнено(Объект.Код) Тогда Объект.УстановитьНовыйКод() КонецЕсли;</ПослеЗагрузки>
				<Приемник>СправочникСсылка.Номенклатура</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Родитель</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Номенклатура"/>
						<ПередВыгрузкой>Значение = ПолучитьПустоеЗначение();</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование> --&gt; ЭтоГруппа</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>РодительНоменклатуры</Код>
				<Наименование>Родитель номенклатуры   </Наименование>
				<Порядок>1700</Порядок>
				<ПередВыгрузкой>КлючВыгружаемыхДанных = "РаспределеннаяГруппа_" + ВходящиеДанные.Получить("Наименование");</ПередВыгрузкой>
				<ПослеЗагрузки>Если Не ЗначениеЗаполнено(Объект.Код) Тогда Объект.УстановитьНовыйКод() КонецЕсли;</ПослеЗагрузки>
				<Источник>СправочникСсылка.Номенклатура</Источник>
				<Приемник>СправочникСсылка.Номенклатура</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>Родитель --&gt; Родитель</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Номенклатура"/>
						<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Номенклатура"/>
						<ПередВыгрузкой>ТипНоменклатуры = ВходящиеДанные.Получить("ТипНоменклатуры");

Если ПустоеЗначение(Источник.Родитель) = 1 Тогда
			
	ИмяГруппы = "Товары";
	Если ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция Тогда
		ИмяГруппы = "Продукция";
	ИначеЕсли ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Материал Тогда
		ИмяГруппы = "Материалы";
	ИначеЕсли ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Услуга Тогда
		ИмяГруппы = "Услуги";
	ИначеЕсли ТипНоменклатуры = Перечисление.ТипыНоменклатуры.ПосредническаяУслуга Тогда
		ИмяГруппы = "Услуги";
	ИначеЕсли ТипНоменклатуры = Перечисление.ТипыНоменклатуры.УслугаЕНВД Тогда
		ИмяГруппы = "Услуги";
	КонецЕсли;
	ИмяПКО = "ГруппаНоменклатуры";
	Значение = 1;
Иначе
	
	ИмяГруппы = Источник.Родитель.Наименование + " (" + ТипНоменклатуры + ")";
	ИмяПКО = "РодительНоменклатуры";
КонецЕсли;

ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
ИсходящиеДанные.Установить("ТипНоменклатуры", ТипНоменклатуры);
ИсходящиеДанные.Установить("Наименование", ИмяГруппы);
</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование> --&gt; ЭтоГруппа</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ОсновныеНачисленияОрганизаций</Код>
				<Наименование>СправочникСсылка.Сотрудники --&gt; ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций</Наименование>
				<Порядок>1750</Порядок>
				<ПередВыгрузкой>Если Источник.СчетЗатрат.Получить(Параметры.ДатаКонцаПериодаВыгрузки).Выбран() = 0 Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
				<ПослеЗагрузки>Объект.КодДоходаЕСН = Справочники.ДоходыЕСН.ОблагаетсяЦеликом;
Объект.КодДоходаНДФЛ = Справочники.ДоходыНДФЛ.КодДоходаПоУмолчанию;
Объект.КодДоходаФСС_НС = Перечисления.ДоходыФСС_НС.Облагается;
Объект.ЧастичноПодпадаетПодЕНВД = Ложь;
Объект.КодДоходаСтраховыеВзносы = Справочники.ДоходыПоСтраховымВзносам.ОблагаетсяЦеликом;</ПослеЗагрузки>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Источник>СправочникСсылка.Сотрудники</Источник>
				<Приемник>ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Лев("Оклад по дням (счет затрат "+Источник.СчетЗатрат.Получить(Параметры.ДатаКонцаПериодаВыгрузки)+")",100);</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; СпособОтраженияВБухучете</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособОтраженияВБухучете" Вид="Реквизит" Тип="СправочникСсылка.СпособыОтраженияЗарплатыВРеглУчете"/>
						<КодПравилаКонвертации>СпособыОтраженияЗарплатыВРеглУчете                </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; ВидНачисленияПоСт255НК</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидНачисленияПоСт255НК" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыНачисленийОплатыТрудаПоСт255НК"/>
						<ПередВыгрузкой>Значение = "пп1ст255";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Код</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = ПривестиНомерКДлине(Источник.Код, 5);</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>БазаРаспределенияРасходовУСНПоВидамДеятельнос</Код>
				<Наименование>Перечисление: База распределения расходов</Наименование>
				<Порядок>1800</Порядок>
				<Источник>ПеречислениеСсылка.БазаРаспределенияРасходов</Источник>
				<Приемник>ПеречислениеСсылка.БазаРаспределенияРасходовУСНПоВидамДеятельности</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>ДоходыВсего --&gt; ДоходыВсегоНУ</Наименование>
						<Порядок>50</Порядок>
						<Источник>ДоходыВсего</Источник>
						<Приемник>ДоходыВсегоНУ</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ДоходыОтражаемыеВНУ --&gt; ДоходыПринимаемыеНУ</Наименование>
						<Порядок>100</Порядок>
						<Источник>ДоходыОтражаемыеВНУ</Источник>
						<Приемник>ДоходыПринимаемыеНУ</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ДоходыОтРеализации --&gt; ДоходыОтРеализацииБУ</Наименование>
						<Порядок>150</Порядок>
						<Источник>ДоходыОтРеализации</Источник>
						<Приемник>ДоходыОтРеализацииБУ</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>МетодыРаспределенияРасходовУСНПоВидамДеятельн</Код>
				<Наименование>Перечисление: Метод распределения</Наименование>
				<Порядок>1850</Порядок>
				<Источник>ПеречислениеСсылка.МетодРаспределенияРасходов</Источник>
				<Приемник>ПеречислениеСсылка.МетодыРаспределенияРасходовУСНПоВидамДеятельности</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>НарастающимИтогом --&gt; НарастающимИтогомСНачалаГода</Наименование>
						<Порядок>50</Порядок>
						<Источник>НарастающимИтогом</Источник>
						<Приемник>НарастающимИтогомСНачалаГода</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>Поквартально --&gt; ЗаКвартал</Наименование>
						<Порядок>100</Порядок>
						<Источник>Поквартально</Источник>
						<Приемник>ЗаКвартал</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>НазначениеЦелевыхСредств</Код>
				<Наименование>Перечисление: Назначения целевых средств</Наименование>
				<Порядок>3550</Порядок>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Источник>ПеречислениеСсылка.НазначенияЦелевыхСредств</Источник>
				<Приемник>СправочникСсылка.НазначениеЦелевыхСредств</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Строка(Источник);</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВидыВзаиморасчетов</Код>
				<Наименование>Справочник: Виды договоров</Наименование>
				<Порядок>3600</Порядок>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Источник>СправочникСсылка.ВидыДоговоров</Источник>
				<Приемник>СправочникСсылка.ВидыВзаиморасчетов</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ТарифыСтраховыхВзносов</Код>
				<Наименование>Перечисление: Тарифы страховых взносов</Наименование>
				<Порядок>3650</Порядок>
				<Источник>ПеречислениеСсылка.ТарифыСтраховыхВзносов</Источник>
				<Приемник>ПеречислениеСсылка.ТарифыСтраховыхВзносов</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>ЕНВД --&gt; ЕНВД</Наименование>
						<Порядок>50</Порядок>
						<Источник>ЕНВД</Источник>
						<Приемник>ЕНВД</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ОрганизацияИнвалидов --&gt; ОрганизацияИнвалидов</Наименование>
						<Порядок>100</Порядок>
						<Источник>ОрганизацияИнвалидов</Источник>
						<Приемник>ОрганизацияИнвалидов</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>РезидентТехникоВнедренческойЗоны --&gt; РезидентТехни</Наименование>
						<Порядок>150</Порядок>
						<Источник>РезидентТехникоВнедренческойЗоны</Источник>
						<Приемник>РезидентТехникоВнедренческойЗоны</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>УпрощенныйНалоговыйРежим --&gt; УпрощенныйНалоговыйРе</Наименование>
						<Порядок>200</Порядок>
						<Источник>УпрощенныйНалоговыйРежим</Источник>
						<Приемник>УпрощенныйНалоговыйРежим</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>ITОрганизации --&gt; ITОрганизации</Наименование>
						<Порядок>250</Порядок>
						<Источник>ITОрганизации</Источник>
						<Приемник>ITОрганизации</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>СМИ --&gt; СМИ</Наименование>
						<Порядок>300</Порядок>
						<Источник>СМИ</Источник>
						<Приемник>СМИ</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>УпрощенныйНалоговыйРежимПроизводство --&gt; Упрощенны</Наименование>
						<Порядок>350</Порядок>
						<Источник>УпрощенныйНалоговыйРежимПроизводство</Источник>
						<Приемник>УпрощенныйНалоговыйРежимПроизводство</Приемник>
					</Значение>
					<Значение>
						<Код>8</Код>
						<Наименование>ХозОбществаБюджетныхВУЗов --&gt; ХозОбществаБюджетных</Наименование>
						<Порядок>400</Порядок>
						<Источник>ХозОбществаБюджетныхВУЗов</Источник>
						<Приемник>ХозОбществаБюджетныхВУЗов</Приемник>
					</Значение>
				</Значения>
			</Правило>
		</Группа>
		<Группа>
			<Код>РегистрыСведений</Код>
			<Наименование>Регистры сведений</Наименование>
			<Порядок>300</Порядок>
			<Правило>
				<Код>КурсыВалют</Код>
				<Наименование>СправочникСсылка.Валюты --&gt; РегистрСведенийЗапись.КурсыВалют</Наименование>
				<Порядок>50</Порядок>
				<Источник>СправочникСсылка.Валюты</Источник>
				<Приемник>РегистрСведенийЗапись.КурсыВалют</Приемник>
				<Свойства>
					<Свойство>
						<Код>4</Код>
						<Наименование>Курс --&gt; Курс</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Курс" Вид="Ресурс" Тип="Число"/>
						<ПередВыгрузкой>Значение = Источник.Курс.Получить(Параметры.ДатаКонцаПериодаВыгрузки);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>Кратность --&gt; Кратность</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Кратность" Вид="Ресурс" Тип="Число"/>
						<ПередВыгрузкой>Значение = Источник.Кратность.Получить(Параметры.ДатаКонцаПериодаВыгрузки);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Параметры.ДатаКонцаПериодаВыгрузки;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Валюта</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Валюта" Вид="Измерение" Тип="СправочникСсылка.Валюты"/>
						<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ТелефоныКонтрагента</Код>
				<Наименование>СправочникСсылка.Контрагенты --&gt; РегистрСведенийЗапись.КонтактнаяИнформация</Наименование>
				<Порядок>100</Порядок>
				<Источник>СправочникСсылка.Контрагенты</Источник>
				<Приемник>РегистрСведенийЗапись.КонтактнаяИнформация</Приемник>
				<Свойства>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Объект</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Объект" Вид="Измерение"/>
						<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; Тип</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Тип" Вид="Измерение" Тип="ПеречислениеСсылка.ТипыКонтактнойИнформации"/>
						<ПередВыгрузкой>Значение = "Телефон";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Представление</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="Телефоны" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="Представление" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Поле3</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="Телефоны" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="Поле3" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Вид</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Вид" Вид="Измерение"/>
						<ПередВыгрузкой>Значение = "00005"; ТипПриемника = "СправочникСсылка.ВидыКонтактнойИнформации";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ТелефоныОрганизации</Код>
				<Наименование> --&gt; РегистрСведенийЗапись.КонтактнаяИнформация</Наименование>
				<Порядок>150</Порядок>
				<Приемник>РегистрСведенийЗапись.КонтактнаяИнформация</Приемник>
				<Свойства>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Объект</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Объект" Вид="Измерение"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; Тип</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Тип" Вид="Измерение" Тип="ПеречислениеСсылка.ТипыКонтактнойИнформации"/>
						<ПередВыгрузкой>Значение = "Телефон";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Вид</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Вид" Вид="Измерение"/>
						<ПередВыгрузкой>Значение = "00006"; ТипПриемника = "СправочникСсылка.ВидыКонтактнойИнформации";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Представление</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Представление" Вид="Ресурс" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Константа.ТелефоныОрганизации;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Поле3</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле3" Вид="Ресурс" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Константа.ТелефоныОрганизации;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ФактическийАдресКонтрагента</Код>
				<Наименование>СправочникСсылка.Контрагенты --&gt; РегистрСведенийЗапись.КонтактнаяИнформация</Наименование>
				<Порядок>200</Порядок>
				<ПередВыгрузкой>ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Адрес", Источник.ПочтовыйАдрес);
ПолучитьСтруктуруАдреса();</ПередВыгрузкой>
				<Источник>СправочникСсылка.Контрагенты</Источник>
				<Приемник>РегистрСведенийЗапись.КонтактнаяИнформация</Приемник>
				<Свойства>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Объект</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Объект" Вид="Измерение"/>
						<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>13</Код>
						<Наименование> --&gt; Тип</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Тип" Вид="Измерение" Тип="ПеречислениеСсылка.ТипыКонтактнойИнформации"/>
						<ПередВыгрузкой>Значение = "Адрес";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование> --&gt; Представление</Наименование>
						<Порядок>300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Представление" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле1" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Поле2</Наименование>
						<Порядок>500</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле2" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; Поле3</Наименование>
						<Порядок>600</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле3" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; Поле4</Наименование>
						<Порядок>700</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле4" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование> --&gt; Поле5</Наименование>
						<Порядок>800</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле5" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; Поле6</Наименование>
						<Порядок>900</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле6" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование> --&gt; Поле7</Наименование>
						<Порядок>1000</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле7" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование> --&gt; Поле8</Наименование>
						<Порядок>1100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле8" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование> --&gt; Поле9</Наименование>
						<Порядок>1200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле9" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Вид</Наименование>
						<Порядок>1300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Вид" Вид="Измерение"/>
						<ПередВыгрузкой>Значение = "00008"; ТипПриемника = "СправочникСсылка.ВидыКонтактнойИнформации";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ФактическийАдресОрганизации</Код>
				<Наименование> --&gt; РегистрСведенийЗапись.КонтактнаяИнформация</Наименование>
				<Порядок>250</Порядок>
				<ПередВыгрузкой>ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Адрес", Константа.ПочтовыйАдресОрганизации);
ПолучитьСтруктуруАдреса();</ПередВыгрузкой>
				<Приемник>РегистрСведенийЗапись.КонтактнаяИнформация</Приемник>
				<Свойства>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Объект</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Объект" Вид="Измерение"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>14</Код>
						<Наименование> --&gt; Тип</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Тип" Вид="Измерение" Тип="ПеречислениеСсылка.ТипыКонтактнойИнформации"/>
						<ПередВыгрузкой>Значение = "Адрес";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Вид</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Вид" Вид="Измерение"/>
						<ПередВыгрузкой>Значение = "00009"; ТипПриемника = "СправочникСсылка.ВидыКонтактнойИнформации";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>13</Код>
						<Наименование> --&gt; Представление</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Представление" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>500</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле1" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; Поле2</Наименование>
						<Порядок>600</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле2" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; Поле3</Наименование>
						<Порядок>700</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле3" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование> --&gt; Поле4</Наименование>
						<Порядок>800</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле4" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; Поле5</Наименование>
						<Порядок>900</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле5" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование> --&gt; Поле6</Наименование>
						<Порядок>1000</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле6" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование> --&gt; Поле7</Наименование>
						<Порядок>1100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле7" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование> --&gt; Поле8</Наименование>
						<Порядок>1200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле8" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование> --&gt; Поле9</Наименование>
						<Порядок>1300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле9" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Поле10</Наименование>
						<Порядок>1400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле10" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ЮридическийАдресКонтрагента</Код>
				<Наименование>СправочникСсылка.Контрагенты --&gt; РегистрСведенийЗапись.КонтактнаяИнформация</Наименование>
				<Порядок>300</Порядок>
				<ПередВыгрузкой>ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Адрес", Источник.ЮридическийАдрес);
ПолучитьСтруктуруАдреса();</ПередВыгрузкой>
				<Источник>СправочникСсылка.Контрагенты</Источник>
				<Приемник>РегистрСведенийЗапись.КонтактнаяИнформация</Приемник>
				<Свойства>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Объект</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Объект" Вид="Измерение"/>
						<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>13</Код>
						<Наименование> --&gt; Тип</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Тип" Вид="Измерение" Тип="ПеречислениеСсылка.ТипыКонтактнойИнформации"/>
						<ПередВыгрузкой>Значение = "Адрес";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование> --&gt; Представление</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Представление" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>500</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле1" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Поле2</Наименование>
						<Порядок>600</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле2" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; Поле3</Наименование>
						<Порядок>700</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле3" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; Поле4</Наименование>
						<Порядок>800</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле4" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование> --&gt; Поле5</Наименование>
						<Порядок>900</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле5" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; Поле6</Наименование>
						<Порядок>1000</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле6" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование> --&gt; Поле7</Наименование>
						<Порядок>1100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле7" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование> --&gt; Поле8</Наименование>
						<Порядок>1200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле8" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование> --&gt; Поле9</Наименование>
						<Порядок>1300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле9" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Вид</Наименование>
						<Порядок>1400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Вид" Вид="Измерение"/>
						<ПередВыгрузкой>Значение = "00010"; ТипПриемника = "СправочникСсылка.ВидыКонтактнойИнформации";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ЮридическийАдресОрганизации</Код>
				<Наименование> --&gt; РегистрСведенийЗапись.КонтактнаяИнформация</Наименование>
				<Порядок>350</Порядок>
				<ПередВыгрузкой>ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Адрес", Константа.АдресОрганизации);
ПолучитьСтруктуруАдреса();</ПередВыгрузкой>
				<Приемник>РегистрСведенийЗапись.КонтактнаяИнформация</Приемник>
				<Свойства>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Объект</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Объект" Вид="Измерение"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>14</Код>
						<Наименование> --&gt; Тип</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Тип" Вид="Измерение" Тип="ПеречислениеСсылка.ТипыКонтактнойИнформации"/>
						<ПередВыгрузкой>Значение = "Адрес";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Вид</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Вид" Вид="Измерение"/>
						<ПередВыгрузкой>Значение = "00011"; ТипПриемника = "СправочникСсылка.ВидыКонтактнойИнформации";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>13</Код>
						<Наименование> --&gt; Представление</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Представление" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>500</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле1" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; Поле2</Наименование>
						<Порядок>600</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле2" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; Поле3</Наименование>
						<Порядок>700</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле3" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование> --&gt; Поле4</Наименование>
						<Порядок>800</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле4" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; Поле5</Наименование>
						<Порядок>900</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле5" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование> --&gt; Поле6</Наименование>
						<Порядок>1000</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле6" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование> --&gt; Поле7</Наименование>
						<Порядок>1100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле7" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование> --&gt; Поле8</Наименование>
						<Порядок>1200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле8" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование> --&gt; Поле9</Наименование>
						<Порядок>1300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле9" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Поле10</Наименование>
						<Порядок>1400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле10" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ФИОФизЛиц</Код>
				<Наименование>СправочникСсылка.Сотрудники --&gt; РегистрСведенийЗапись.ФИОФизЛиц</Наименование>
				<Порядок>400</Порядок>
				<Источник>СправочникСсылка.Сотрудники</Источник>
				<Приемник>РегистрСведенийЗапись.ФИОФизЛиц</Приемник>
				<Свойства>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Параметры.ДатаКонцаПериодаВыгрузки;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; ФизЛицо</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизЛицо" Вид="Измерение"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Фамилия</Наименование>
						<Порядок>300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Фамилия" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Имя</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Имя" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Отчество</Наименование>
						<Порядок>500</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Отчество" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ФИОФизЛицКонтр</Код>
				<Наименование>СправочникСсылка.Сотрудники --&gt; РегистрСведенийЗапись.ФИОФизЛиц</Наименование>
				<Порядок>450</Порядок>
				<Источник>СправочникСсылка.Контрагенты</Источник>
				<Приемник>РегистрСведенийЗапись.ФИОФизЛиц</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Параметры.ДатаКонцаПериодаВыгрузки;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; ФизЛицо</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизЛицо" Вид="Измерение"/>
						<КодПравилаКонвертации>СотрудникиКонтрагенты                             </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Фамилия</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Фамилия" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Имя</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Имя" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; Отчество</Наименование>
						<Порядок>250</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Отчество" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СведенияОбИнвалидностиФизлиц</Код>
				<Наименование>СправочникСсылка.Сотрудники --&gt; РегистрСведенийЗапись.СведенияОбИнвалидностиФизлиц</Наименование>
				<Порядок>500</Порядок>
				<ПередВыгрузкой>Отказ = ?(Источник.Инвалид.Получить(Параметры.ДатаКонцаПериодаВыгрузки) = 1, 0, 1);</ПередВыгрузкой>
				<Источник>СправочникСсылка.Сотрудники</Источник>
				<Приемник>РегистрСведенийЗапись.СведенияОбИнвалидностиФизлиц</Приемник>
				<Свойства>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Параметры.ДатаВводаОстатков;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Физлицо</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Физлицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Инвалидность</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Инвалидность" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Значение = Источник.Инвалид.Получить(Параметры.ДатаВводаОстатков);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; ДатаВыдачи</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаВыдачи" Вид="Реквизит" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Параметры.ДатаВводаОстатков;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ПаспортныеДанныеФизЛиц</Код>
				<Наименование>СправочникСсылка.Сотрудники --&gt; РегистрСведенийЗапись.ПаспортныеДанныеФизЛиц</Наименование>
				<Порядок>550</Порядок>
				<Источник>СправочникСсылка.Сотрудники</Источник>
				<Приемник>РегистрСведенийЗапись.ПаспортныеДанныеФизЛиц</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Параметры.ДатаВводаОстатков;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; ФизЛицо</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ВидДокумента --&gt; ДокументВид</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="ВидДокумента" Вид="Реквизит" Тип="СправочникСсылка.ДокументыУдостоверяющиеЛичность"/>
						<Приемник Имя="ДокументВид" Вид="Ресурс" Тип="СправочникСсылка.ДокументыУдостоверяющиеЛичность"/>
						<КодПравилаКонвертации>ДокументыУдостоверяющиеЛичность                   </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>ДокументСерия --&gt; ДокументСерия</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="ДокументСерия" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="ДокументСерия" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>ДокументНомер --&gt; ДокументНомер</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="ДокументНомер" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="ДокументНомер" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>ДокументДатаВыдачи --&gt; ДокументДатаВыдачи</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="ДокументДатаВыдачи" Вид="Реквизит" Тип="Дата"/>
						<Приемник Имя="ДокументДатаВыдачи" Вид="Ресурс" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>ДокументКемВыдан --&gt; ДокументКемВыдан</Наименование>
						<Порядок>700</Порядок>
						<Источник Имя="ДокументКемВыдан" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="ДокументКемВыдан" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ГражданствоФизЛиц</Код>
				<Наименование>СправочникСсылка.Сотрудники --&gt; РегистрСведенийЗапись.ГражданствоФизЛиц</Наименование>
				<Порядок>600</Порядок>
				<Источник>СправочникСсылка.Сотрудники</Источник>
				<Приемник>РегистрСведенийЗапись.ГражданствоФизЛиц</Приемник>
				<Свойства>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Параметры.ДатаКонцаПериодаВыгрузки;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; ФизЛицо</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>Страна --&gt; Страна</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="Страна" Вид="Реквизит" Тип="СправочникСсылка.ОКСМ"/>
						<Приемник Имя="Страна" Вид="Ресурс" Тип="СправочникСсылка.КлассификаторСтранМира"/>
						<КодПравилаКонвертации>ОКСМ                                              </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; НеИмеетПравоНаПенсию</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НеИмеетПравоНаПенсию" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Значение = Источник.НеВзиматьВзносыПФРиФСС.Получить(Параметры.ДатаКонцаПериодаВыгрузки);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; НеИмеетПравоНаМедицинскоеСтрахование</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НеИмеетПравоНаМедицинскоеСтрахование" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Значение = Источник.НеВзиматьВзносыФОМС.Получить(Параметры.ДатаКонцаПериодаВыгрузки);</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ГражданствоФизЛицНачало</Код>
				<Наименование>СправочникСсылка.Сотрудники --&gt; РегистрСведенийЗапись.ГражданствоФизЛиц</Наименование>
				<Порядок>650</Порядок>
				<ПередВыгрузкой>Если НачМесяца(ДатаНачала) = НачМесяца(Параметры.ДатаКонцаПериодаВыгрузки) Тогда
	Отказ = 1;
КонецЕсли;
</ПередВыгрузкой>
				<Источник>СправочникСсылка.Сотрудники</Источник>
				<Приемник>РегистрСведенийЗапись.ГражданствоФизЛиц</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = ДатаНачала;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; ФизЛицо</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>Страна --&gt; Страна</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="Страна" Вид="Реквизит" Тип="СправочникСсылка.ОКСМ"/>
						<Приемник Имя="Страна" Вид="Ресурс" Тип="СправочникСсылка.КлассификаторСтранМира"/>
						<КодПравилаКонвертации>ОКСМ                                              </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; НеИмеетПравоНаПенсию</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НеИмеетПравоНаПенсию" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Значение = Источник.НеВзиматьВзносыПФРиФСС.Получить(ДатаНачала);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; НеИмеетПравоНаМедицинскоеСтрахование</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НеИмеетПравоНаМедицинскоеСтрахование" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Значение = Источник.НеВзиматьВзносыФОМС.Получить(ДатаНачала);</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СтатусФизЛицКакНалогоплательщиковНДФЛ</Код>
				<Наименование>СправочникСсылка.Сотрудники --&gt; РегистрСведенийЗапись.ГражданствоФизЛиц</Наименование>
				<Порядок>700</Порядок>
				<Источник>СправочникСсылка.Сотрудники</Источник>
				<Приемник>РегистрСведенийЗапись.СтатусФизЛицКакНалогоплательщиковНДФЛ</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Параметры.ДатаВводаОстатков;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; ФизЛицо</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Статус</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Статус" Вид="Ресурс" Тип="ПеречислениеСсылка.СтатусыНалогоплательщиковПоНДФЛ"/>
						<ПередВыгрузкой>Значение = ?(Источник.Статус.Получить(Параметры.ДатаКонцаПериодаВыгрузки) = 0, "НеРезидент", "Резидент");</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СтатусФизЛицКакНалогоплательщиковНДФЛНачало</Код>
				<Наименование>Справочник: Сотрудники</Наименование>
				<Порядок>750</Порядок>
				<ПередВыгрузкой>Если НачМесяца(ДатаНачала) = НачМесяца(Параметры.ДатаКонцаПериодаВыгрузки) Тогда
	Отказ = 1;
КонецЕсли;
</ПередВыгрузкой>
				<Источник>СправочникСсылка.Сотрудники</Источник>
				<Приемник>РегистрСведенийЗапись.СтатусФизЛицКакНалогоплательщиковНДФЛ</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = ДатаНачала;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; ФизЛицо</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Статус</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Статус" Вид="Ресурс" Тип="ПеречислениеСсылка.СтатусыНалогоплательщиковПоНДФЛ"/>
						<ПередВыгрузкой>Значение = ?(Источник.Статус.Получить(ДатаНачала) = 0, "НеРезидент", "Резидент");</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ТелефоныФизЛица</Код>
				<Наименование>СправочникСсылка.Сотрудники --&gt; РегистрСведенийЗапись.КонтактнаяИнформация</Наименование>
				<Порядок>800</Порядок>
				<Источник>СправочникСсылка.Сотрудники</Источник>
				<Приемник>РегистрСведенийЗапись.КонтактнаяИнформация</Приемник>
				<Свойства>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Объект</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Объект" Вид="Измерение"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; Тип</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Тип" Вид="Измерение" Тип="ПеречислениеСсылка.ТипыКонтактнойИнформации"/>
						<ПередВыгрузкой>Значение = "Телефон";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Представление</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="Телефон" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="Представление" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Поле3</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="Телефон" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="Поле3" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Вид</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Вид" Вид="Измерение"/>
						<ПередВыгрузкой>Значение = "00007"; ТипПриемника = "СправочникСсылка.ВидыКонтактнойИнформации";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>АдресПоПропискеФизЛица</Код>
				<Наименование>СправочникСсылка.Сотрудники --&gt; РегистрСведенийЗапись.КонтактнаяИнформация</Наименование>
				<Порядок>850</Порядок>
				<ПередВыгрузкой>ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Адрес", Источник.АдресПрописка);
ПолучитьСтруктуруАдреса();</ПередВыгрузкой>
				<Источник>СправочникСсылка.Сотрудники</Источник>
				<Приемник>РегистрСведенийЗапись.КонтактнаяИнформация</Приемник>
				<Свойства>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Объект</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Объект" Вид="Измерение"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>13</Код>
						<Наименование> --&gt; Тип</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Тип" Вид="Измерение" Тип="ПеречислениеСсылка.ТипыКонтактнойИнформации"/>
						<ПередВыгрузкой>Значение = "Адрес";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование> --&gt; Представление</Наименование>
						<Порядок>300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Представление" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле1" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Поле2</Наименование>
						<Порядок>500</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле2" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; Поле3</Наименование>
						<Порядок>600</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле3" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; Поле4</Наименование>
						<Порядок>700</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле4" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование> --&gt; Поле5</Наименование>
						<Порядок>800</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле5" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; Поле6</Наименование>
						<Порядок>900</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле6" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование> --&gt; Поле7</Наименование>
						<Порядок>1000</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле7" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование> --&gt; Поле8</Наименование>
						<Порядок>1100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле8" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование> --&gt; Поле9</Наименование>
						<Порядок>1200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле9" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Вид</Наименование>
						<Порядок>1300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Вид" Вид="Измерение"/>
						<ПередВыгрузкой>Значение = "00002"; ТипПриемника = "СправочникСсылка.ВидыКонтактнойИнформации";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ФактическийАдресФизЛица</Код>
				<Наименование>СправочникСсылка.Сотрудники --&gt; РегистрСведенийЗапись.КонтактнаяИнформация</Наименование>
				<Порядок>900</Порядок>
				<ПередВыгрузкой>ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Адрес", Источник.АдресФакт);
ПолучитьСтруктуруАдреса();</ПередВыгрузкой>
				<Источник>СправочникСсылка.Сотрудники</Источник>
				<Приемник>РегистрСведенийЗапись.КонтактнаяИнформация</Приемник>
				<Свойства>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Объект</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Объект" Вид="Измерение"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>13</Код>
						<Наименование> --&gt; Тип</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Тип" Вид="Измерение" Тип="ПеречислениеСсылка.ТипыКонтактнойИнформации"/>
						<ПередВыгрузкой>Значение = "Адрес";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование> --&gt; Представление</Наименование>
						<Порядок>300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Представление" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле1" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Поле2</Наименование>
						<Порядок>500</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле2" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; Поле3</Наименование>
						<Порядок>600</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле3" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; Поле4</Наименование>
						<Порядок>700</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле4" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование> --&gt; Поле5</Наименование>
						<Порядок>800</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле5" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; Поле6</Наименование>
						<Порядок>900</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле6" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование> --&gt; Поле7</Наименование>
						<Порядок>1000</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле7" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование> --&gt; Поле8</Наименование>
						<Порядок>1100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле8" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование> --&gt; Поле9</Наименование>
						<Порядок>1200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле9" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Вид</Наименование>
						<Порядок>1300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Вид" Вид="Измерение"/>
						<ПередВыгрузкой>Значение = "00003"; ТипПриемника = "СправочникСсылка.ВидыКонтактнойИнформации";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>НДФЛДоходыПредыдущегоМестаРаботы</Код>
				<Наименование>СправочникСсылка.Сотрудники --&gt; РегистрСведенийЗапись.НДФЛДоходыПредыдущегоМестаРаботы</Наименование>
				<Порядок>950</Порядок>
				<ПередВыгрузкой>Если Источник.ВаловойДоход_СНачалаГода = 0 Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
				<Источник>СправочникСсылка.Сотрудники</Источник>
				<Приемник>РегистрСведенийЗапись.НДФЛДоходыПредыдущегоМестаРаботы</Приемник>
				<Свойства>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; МесяцНалоговогоПериода</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="МесяцНалоговогоПериода" Вид="Измерение" Тип="Дата"/>
						<ПередВыгрузкой>Значение = НачМесяца(ДобавитьМесяц(Источник.ДатаПриема, -1));</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; ФизЛицо</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Размер</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="ВаловойДоход_СНачалаГода" Вид="Реквизит" Тип="Число"/>
						<Приемник Имя="Размер" Вид="Ресурс" Тип="Число"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>НДФЛПрименениеВычетов</Код>
				<Наименование>СправочникСсылка.Сотрудники --&gt; РегистрСведенийЗапись.НДФЛПрименениеВычетов</Наименование>
				<Порядок>1000</Порядок>
				<Источник>СправочникСсылка.Сотрудники</Источник>
				<Приемник>РегистрСведенийЗапись.НДФЛПрименениеВычетов</Приемник>
				<Свойства>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Физлицо</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Физлицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Ресурс" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>НДФЛСтандартныеВычетыФизлиц</Код>
				<Наименование>СправочникСсылка.Сотрудники --&gt; РегистрСведенийЗапись.НДФЛСтандартныеВычетыФизлиц</Наименование>
				<Порядок>1050</Порядок>
				<ПередВыгрузкой>КлючВыгружаемыхДанных = ЗначениеВСтрокуВнутр(Источник) + "_" + ВходящиеДанные.Получить("Период");</ПередВыгрузкой>
				<Источник>СправочникСсылка.ВычетыСотрудниковПоНДФЛ</Источник>
				<Приемник>РегистрСведенийЗапись.НДФЛСтандартныеВычетыФизлиц</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Физлицо</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Физлицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; КодВычетаЛичный</Наименование>
						<Порядок>300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодВычетаЛичный" Вид="Ресурс" Тип="СправочникСсылка.ВычетыНДФЛ"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>НДФЛСтандартныеВычетыНаДетей</Код>
				<Наименование>СправочникСсылка.Сотрудники --&gt; РегистрСведенийЗапись.НДФЛСтандартныеВычетыФизлиц</Наименование>
				<Порядок>1100</Порядок>
				<ПередВыгрузкой>КлючВыгружаемыхДанных = ЗначениеВСтрокуВнутр(Источник) + "_" + ВходящиеДанные.Получить("Период");</ПередВыгрузкой>
				<Источник>СправочникСсылка.ВычетыСотрудниковПоНДФЛ</Источник>
				<Приемник>РегистрСведенийЗапись.НДФЛСтандартныеВычетыНаДетей</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; ПериодЗавершения</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодЗавершения" Вид="Ресурс" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Физлицо</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Физлицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; КодВычета</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодВычета" Вид="Измерение" Тип="СправочникСсылка.ВычетыНДФЛ"/>
						<КодПравилаКонвертации>ВычетыНаРебенка                                   </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; КоличествоДетей</Наименование>
						<Порядок>250</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КоличествоДетей" Вид="Ресурс" Тип="Число"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>НДФЛСтандартныеВычетыНаДетейИнвалидов</Код>
				<Наименование>СправочникСсылка.Сотрудники --&gt; РегистрСведенийЗапись.НДФЛСтандартныеВычетыФизлиц</Наименование>
				<Порядок>1150</Порядок>
				<ПередВыгрузкой>КлючВыгружаемыхДанных = ЗначениеВСтрокуВнутр(Источник) + "_" + ВходящиеДанные.Получить("Период");</ПередВыгрузкой>
				<Источник>СправочникСсылка.Сотрудники</Источник>
				<Приемник>РегистрСведенийЗапись.НДФЛСтандартныеВычетыНаДетей</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Физлицо</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Физлицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; КодВычета</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодВычета" Вид="Измерение" Тип="СправочникСсылка.ВычетыНДФЛ"/>
						<КодПравилаКонвертации>ВычетыНаРебенкаИнвалида                           </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник.РазмерВычетаНаРебенкаИнвалида.Получить(ВходящиеДанные.Получить("Период"));</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; КоличествоДетей</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КоличествоДетей" Вид="Ресурс" Тип="Число"/>
						<ПередВыгрузкой>Значение = Источник.ДетиИнвалиды.Получить(ВходящиеДанные.Получить("Период"));</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>УчетнаяПолитикаПоПерсоналу</Код>
				<Наименование> --&gt; РегистрСведенийЗапись.УчетнаяПолитикаПоПерсоналу</Наименование>
				<Порядок>1200</Порядок>
				<Приемник>РегистрСведенийЗапись.УчетнаяПолитикаПоПерсоналу</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; УпрощенныйУчетНДФЛ</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="УпрощенныйУчетНДФЛ" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; ПоддержкаВнутреннегоСовместительства</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПоддержкаВнутреннегоСовместительства" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>УчетнаяПолитикаОрганизаций</Код>
				<Наименование> --&gt; РегистрСведенийЗапись.УчетнаяПолитикаНалоговыйУчет</Наименование>
				<Порядок>1250</Порядок>
				<Приемник>РегистрСведенийЗапись.УчетнаяПолитикаОрганизаций</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = НачГода(Параметры.ДатаКонцаПериодаВыгрузки);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; СпособОценкиМПЗ</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособОценкиМПЗНУ" Вид="Ресурс" Тип="ПеречислениеСсылка.СпособыОценки"/>
						<ПередВыгрузкой>Значение = "ФИФО";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>27</Код>
						<Наименование> --&gt; ВидТарифаСтраховыхВзносов</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидТарифаСтраховыхВзносов" Вид="Ресурс" Тип="ПеречислениеСсылка.ТарифыСтраховыхВзносов"/>
						<КодПравилаКонвертации>ТарифыСтраховыхВзносов                            </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Константа.ТарифСтраховыхВзносов.Получить(Параметры.ДатаКонцаПериодаВыгрузки);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; ОбъектНалогообложенияУСН</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОбъектНалогообложенияУСН" Вид="Ресурс" Тип="ПеречислениеСсылка.ОбъектыНалогообложенияПоУСН"/>
						<КодПравилаКонвертации>ОбъектыНалогообложенияПоУСН                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Константа.ОбъектНалогообложения.Получить(Параметры.ДатаКонцаПериодаВыгрузки);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; ОрганизацияЯвляетсяПлательщикомЕНВД</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОрганизацияЯвляетсяПлательщикомЕНВД" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Значение = Константа.ОрганизацияЯвляетсяПлательщикомЕНВД;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование> --&gt; РозничнаяТорговляОблагаетсяЕНВД</Наименование>
						<Порядок>700</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РозничнаяТорговляОблагаетсяЕНВД" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Значение = Константа.РозницаОблагаетсяЕНВД.Получить(Параметры.ДатаКонцаПериодаВыгрузки);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; ВариантУчетаРасходовПоНалогамСФОТВНалоговомУчете</Наименование>
						<Порядок>800</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВариантУчетаРасходовПоНалогамСФОТВНалоговомУчете" Вид="Ресурс" Тип="ПеречислениеСсылка.ВариантыУчетаРасходовПоНалогамСФОТВНалоговомУчете"/>
						<ПередВыгрузкой>Значение = "НаСчетахРасходовНаОплатуТруда";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование> --&gt; ПоложенияПереходногоПериодаУСН</Наименование>
						<Порядок>900</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПоложенияПереходногоПериодаУСН" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование> --&gt; ДатаПереходаНаУСН</Наименование>
						<Порядок>1000</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаПереходаНаУСН" Вид="Ресурс" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Константа.ДатаПереходаНаУСН;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>24</Код>
						<Наименование> --&gt; УведомлениеДата</Наименование>
						<Порядок>1000</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="УведомлениеДата" Вид="Ресурс" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Константа.УведомлениеДата;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>25</Код>
						<Наименование> --&gt; УведомлениеНомер</Наименование>
						<Порядок>1000</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="УведомлениеНомер" Вид="Ресурс" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Константа.УведомлениеНомер;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование> --&gt; ПорядокПризнанияМатериальныхРасходов</Наименование>
						<Порядок>1100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПорядокПризнанияМатериальныхРасходов" Вид="Ресурс" Тип="ПеречислениеСсылка.ПорядокПризнанияМатериальныхРасходов"/>
						<КодПравилаКонвертации>ПорядокПризнанияМатериальныхРасходов              </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Константа.ПорядокПризнанияМатериальныхРасходов.Получить(Параметры.ДатаКонцаПериодаВыгрузки);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование> --&gt; ПорядокПризнанияРасходовПоТоварам</Наименование>
						<Порядок>1200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПорядокПризнанияРасходовПоТоварам" Вид="Ресурс" Тип="ПеречислениеСсылка.ПорядокПризнанияРасходовПоТоварам"/>
						<КодПравилаКонвертации>ПорядокПризнанияРасходовПоТоварам                 </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Константа.ПорядокПризнанияРасходовПоТоварам.Получить(Параметры.ДатаКонцаПериодаВыгрузки);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>13</Код>
						<Наименование> --&gt; ПорядокПризнанияРасходовПоНДС</Наименование>
						<Порядок>1300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПорядокПризнанияРасходовПоНДС" Вид="Ресурс" Тип="ПеречислениеСсылка.ПорядокПризнанияРасходовПоНДС"/>
						<ПередВыгрузкой>Значение = ?(Константа.ВыделятьВходящийНДС.Получить(Параметры.ДатаКонцаПериодаВыгрузки) = 1, "ПоОплатеПоставщику", "ВключатьВСтоимость");</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>14</Код>
						<Наименование> --&gt; ОсобенностиИсчисленияНДФЛ</Наименование>
						<Порядок>1400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОсобенностиИсчисленияНДФЛ" Вид="Ресурс" Тип="ПеречислениеСсылка.ОсобенностиИсчисленияНДФЛ"/>
						<КодПравилаКонвертации>ОсобенностиИсчисленияНДФЛ                         </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Константа.ОсобенностиИсчисленияНДФЛ.Получить(Параметры.ДатаКонцаПериодаВыгрузки);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>15</Код>
						<Наименование> --&gt; СпособОценкиМПЗ</Наименование>
						<Порядок>1500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособОценкиМПЗ" Вид="Ресурс" Тип="ПеречислениеСсылка.СпособыОценки"/>
						<ПередВыгрузкой>Значение = "ФИФО";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>16</Код>
						<Наименование> --&gt; ДиректКостинг</Наименование>
						<Порядок>1600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДиректКостинг" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>17</Код>
						<Наименование> --&gt; СпособОценкиТоваровВРознице</Наименование>
						<Порядок>1700</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособОценкиТоваровВРознице" Вид="Ресурс" Тип="ПеречислениеСсылка.СпособыОценкиТоваровВРознице"/>
						<ПередВыгрузкой>Значение = "ПоСтоимостиПриобретения";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>18</Код>
						<Наименование> --&gt; СпособУчетаВыпускаГотовойПродукции</Наименование>
						<Порядок>1800</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособУчетаВыпускаГотовойПродукции" Вид="Ресурс" Тип="ПеречислениеСсылка.СпособыУчетаВыпускаГотовойПродукции"/>
						<ПередВыгрузкой>Значение = "БезИспользованияСчета40";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>19</Код>
						<Наименование> --&gt; ПоддержкаПБУ18</Наименование>
						<Порядок>1900</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПоддержкаПБУ18" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>20</Код>
						<Наименование> --&gt; СпособРасчетаСебестоимостиПроизводства</Наименование>
						<Порядок>2000</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособРасчетаСебестоимостиПроизводства" Вид="Ресурс" Тип="ПеречислениеСсылка.СпособыРасчетаСебестоимостиПродукции"/>
						<ПередВыгрузкой>Значение = "ПоПодразделениям";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>21</Код>
						<Наименование> --&gt; СистемаНалогообложения</Наименование>
						<Порядок>2100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СистемаНалогообложения" Вид="Ресурс" Тип="ПеречислениеСсылка.СистемыНалогообложения"/>
						<ПередВыгрузкой>Значение = "Упрощенная";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>22</Код>
						<Наименование> --&gt; БазаРаспределенияРасходовУСНПоВидамДеятельности</Наименование>
						<Порядок>2150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="БазаРаспределенияРасходовУСНПоВидамДеятельности" Вид="Ресурс" Тип="ПеречислениеСсылка.БазаРаспределенияРасходовУСНПоВидамДеятельности"/>
						<ПередВыгрузкой>Если ПустоеЗначение(Константа.МетодРаспределенияРасходов) = 1 Тогда
	Значение = "ДоходыОтРеализацииБУ";
Иначе
	Значение = Константа.БазаРаспределенияРасходов;
	ИмяПКО = "БазаРаспределенияРасходовУСНПоВидамДеятельнос";
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>23</Код>
						<Наименование> --&gt; МетодРаспределенияРасходовУСНПоВидамДеятельности</Наименование>
						<Порядок>2200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="МетодРаспределенияРасходовУСНПоВидамДеятельности" Вид="Ресурс" Тип="ПеречислениеСсылка.МетодыРаспределенияРасходовУСНПоВидамДеятельности"/>
						<ПередВыгрузкой>Если ПустоеЗначение(Константа.МетодРаспределенияРасходов) = 1 Тогда
	Значение = "ЗаКвартал";
Иначе
	Значение = Константа.МетодРаспределенияРасходов;
	ИмяПКО = "МетодыРаспределенияРасходовУСНПоВидамДеятельн";
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>26</Код>
						<Наименование> --&gt; ОрганизацияВедетРозничнуюТорговлю</Наименование>
						<Порядок>2250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОрганизацияВедетРозничнуюТорговлю" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>28</Код>
						<Наименование> --&gt; НачислятьНДСПриПередачеНедвижимости</Наименование>
						<Порядок>2300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НачислятьНДСПриПередачеНедвижимости" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Если ДатаГод(Параметры.ДатаКонцаПериодаВыгрузки) &gt; 2010 Тогда
	Значение = 1;
Иначе
	Значение = 0;
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ОтветственныеЛицаОрганизаций</Код>
				<Наименование>: </Наименование>
				<Порядок>1300</Порядок>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.ОтветственныеЛицаОрганизаций</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = НачГода(Параметры.ДатаКонцаПериодаВыгрузки)-1;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Должность</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Должность" Вид="Ресурс" Тип="СправочникСсылка.ДолжностиОрганизаций"/>
						<КодПравилаКонвертации>ДолжностиОрганизаций                              </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; ОтветственноеЛицо</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтветственноеЛицо" Вид="Измерение" Тип="ПеречислениеСсылка.ОтветственныеЛицаОрганизаций"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; ФизическоеЛицо</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизическоеЛицо" Вид="Ресурс" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; СтруктурнаяЕдиница</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СтруктурнаяЕдиница" Вид="Измерение"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
		<Группа>
			<Код>Операции</Код>
			<Наименование>Операции</Наименование>
			<Порядок>400</Порядок>
			<Правило>
				<Код>ОперацияБух</Код>
				<Наименование> --&gt; ДокументСсылка.ОперацияБух</Наименование>
				<Порядок>100</Порядок>
				<ПередВыгрузкой>Если (ПустоеЗначение(ВходящиеДанные.Получить("Хозрасчетный")) = 1) Тогда
	Отказ = 1;
	
ИначеЕсли ВходящиеДанные.Получить("Хозрасчетный").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
			
КонецЕсли;</ПередВыгрузкой>
				<ПослеЗагрузки>Для каждого Корреспонденция из Объект.Движения.Хозрасчетный Цикл
	Для каждого Субконто из Корреспонденция.СубконтоДт Цикл
		Ок = Ложь;
		Для каждого ВидыСубконто из Корреспонденция.СчетДт.ВидыСубконто Цикл
			Если ВидыСубконто.ВидСубконто = Субконто.Ключ Тогда
				Ок = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если не Ок Тогда
			Корреспонденция.СубконтоДт.Удалить(Субконто.Ключ);
		КонецЕсли;
	КонецЦикла;
	
	Для каждого Субконто из Корреспонденция.СубконтоКт Цикл
		Ок = Ложь;
		Для каждого ВидыСубконто из Корреспонденция.СчетКт.ВидыСубконто Цикл
			Если ВидыСубконто.ВидСубконто = Субконто.Ключ Тогда
				Ок = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если не Ок Тогда
			Корреспонденция.СубконтоКт.Удалить(Субконто.Ключ);
		КонецЕсли;
	КонецЦикла;
КонецЦикла;</ПослеЗагрузки>
				<Приемник>ДокументСсылка.ОперацияБух</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>17</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Счет = ВходящиеДанные.Получить("Счет");
Счет = ?(ТипЗначения(Счет) = 2, Счет, Счет.Код);
Параметры.ПараметрыАлгоритмов.Установить("ДопКомментарий", "# Обороты счета """ + Счет + """");

ПолучитьКомментарийДокумента();</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>18</Код>
						<Наименование> --&gt; Содержание</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Содержание" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные.Получить("Хозрасчетный")) = 1 Тогда
	РегистрБух = " (налоговый учет)";
	
Иначе
	РегистрБух = " (бухгалтерский учет)";
КонецЕсли;	
	
Счет = ВходящиеДанные.Получить("Счет");
Значение = "Итоги по счету " + Счет + РегистрБух;

Счет = ?(ТипЗначения(Счет) = 2, Счет, Счет.Код);</ПередВыгрузкой>
					</Свойство>
					<Группа>
						<Код>19</Код>
						<Наименование> --&gt; Хозрасчетный</Наименование>
						<Порядок>500</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Хозрасчетный" Вид="НаборДвиженийРегистраБухгалтерии"/>
						<ПередОбработкойВыгрузки>Если ПустоеЗначение(ВходящиеДанные.Получить("Хозрасчетный")) = 1 Тогда
	Отказ = 1;
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>28</Код>
							<Наименование> --&gt; Период</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
							<ПередВыгрузкой>Значение = ВходящиеДанные.Получить("Дата");</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>33</Код>
							<Наименование> --&gt; СчетДт</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетДт" Вид="Свойство" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ТипЗначенияСтр(ВходящиеДанные) &lt;&gt; "СписокЗначений" Тогда
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
КонецЕсли;
КодПриемника = ОбъектКоллекции.КодСчетаДт;
ВходящиеДанные.Установить("КодСчета", ОбъектКоллекции.КодСчетаДт);
Если ПустоеЗначение(КодПриемника) = 0 Тогда
	Значение = КодПриемника;
	ИмяПКО = "ХозрасчетныйСтр";
Иначе
	ИмяПКО = "Хозрасчетный";
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("Счет", ОбъектКоллекции.СчетДт);
Если ПустоеЗначение(ОбъектКоллекции.СубконтоДт) = 0 Тогда
	Если ОбъектКоллекции.СубконтоДт.КоличествоСтрок() &gt; 0 Тогда
		Параметры.ПараметрыАлгоритмов.Установить("Субконто1", ОбъектКоллекции.СубконтоДт.ПолучитьЗначение(1, "Значение"));
		Параметры.ПараметрыАлгоритмов.Установить("ВидСубконто1", ОбъектКоллекции.СубконтоДт.ПолучитьЗначение(1, "Ключ"));
	КонецЕсли;

	Если ОбъектКоллекции.СубконтоДт.КоличествоСтрок() &gt; 1 Тогда
		Параметры.ПараметрыАлгоритмов.Установить("Субконто2", ОбъектКоллекции.СубконтоДт.ПолучитьЗначение(2, "Значение"));
		Параметры.ПараметрыАлгоритмов.Установить("ВидСубконто2", ОбъектКоллекции.СубконтоДт.ПолучитьЗначение(2, "Ключ"));
	КонецЕсли;

	Если ОбъектКоллекции.СубконтоДт.КоличествоСтрок() &gt; 2 Тогда
		Параметры.ПараметрыАлгоритмов.Установить("Субконто3", ОбъектКоллекции.СубконтоДт.ПолучитьЗначение(3, "Значение"));
		Параметры.ПараметрыАлгоритмов.Установить("ВидСубконто3", ОбъектКоллекции.СубконтоДт.ПолучитьЗначение(3, "Ключ"));
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>30</Код>
							<Наименование> --&gt; СубконтоДт</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СубконтоДт" Вид="ВидыСубконтоСчета"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.СубконтоДт);
ИмяПКОВидСубконто = "ВидыСубконтоХозрасчетные";</ПередВыгрузкой>
							<ПриВыгрузке>Параметры.ПараметрыАлгоритмов.Установить("Счет", ОбъектКоллекции.СчетДт);
Если ПустоеЗначение(ОбъектКоллекции.СубконтоДт) = 0 Тогда
	Если ОбъектКоллекции.СубконтоДт.КоличествоСтрок() &gt; 1 Тогда
		Параметры.ПараметрыАлгоритмов.Установить("Субконто1", ОбъектКоллекции.СубконтоДт.ПолучитьЗначение(1, "Значение"));
		Параметры.ПараметрыАлгоритмов.Установить("ВидСубконто1", ОбъектКоллекции.СубконтоДт.ПолучитьЗначение(1, "Ключ"));
	КонецЕсли;

	Если ОбъектКоллекции.СубконтоДт.КоличествоСтрок() &gt; 2 Тогда
		Параметры.ПараметрыАлгоритмов.Установить("Субконто2", ОбъектКоллекции.СубконтоДт.ПолучитьЗначение(2, "Значение"));
		Параметры.ПараметрыАлгоритмов.Установить("ВидСубконто2", ОбъектКоллекции.СубконтоДт.ПолучитьЗначение(2, "Ключ"));
	КонецЕсли;

	Если ОбъектКоллекции.СубконтоДт.КоличествоСтрок() &gt; 3 Тогда
		Параметры.ПараметрыАлгоритмов.Установить("Субконто3", ОбъектКоллекции.СубконтоДт.ПолучитьЗначение(3, "Значение"));
		Параметры.ПараметрыАлгоритмов.Установить("ВидСубконто3", ОбъектКоллекции.СубконтоДт.ПолучитьЗначение(3, "Ключ"));
	КонецЕсли;
КонецЕсли;

Параметры.ПараметрыАлгоритмов.Установить("НомерСубконто", ОбъектКоллекции.СубконтоДт.НомерСтроки);
Параметры.ПараметрыАлгоритмов.Установить("Субконто", ОбъектКоллекции.СубконтоДт.Значение);
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконто", ОбъектКоллекции.СубконтоДт.Ключ);
Параметры.ПараметрыАлгоритмов.Установить("ВидУчета", "БУ");
ПриВыгрузкеСубконто();
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконто", "");
Параметры.ПараметрыАлгоритмов.Установить("ВидУчета", "");</ПриВыгрузке>
						</Свойство>
						<Свойство>
							<Код>34</Код>
							<Наименование> --&gt; СчетКт</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетКт" Вид="Свойство" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ТипЗначенияСтр(ВходящиеДанные) &lt;&gt; "СписокЗначений" Тогда
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
КонецЕсли;
КодПриемника = ОбъектКоллекции.КодСчетаКт;
ВходящиеДанные.Установить("КодСчета", ОбъектКоллекции.КодСчетаКт);
Если ПустоеЗначение(КодПриемника) = 0 Тогда
	Значение = КодПриемника;
	ИмяПКО = "ХозрасчетныйСтр";
Иначе
	ИмяПКО = "Хозрасчетный";
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("Счет", ОбъектКоллекции.СчетКт);
Если ПустоеЗначение(ОбъектКоллекции.СубконтоКт) = 0 Тогда
	Если ОбъектКоллекции.СубконтоКт.КоличествоСтрок() &gt; 0 Тогда
		Параметры.ПараметрыАлгоритмов.Установить("Субконто1", ОбъектКоллекции.СубконтоКт.ПолучитьЗначение(1, "Значение"));
		Параметры.ПараметрыАлгоритмов.Установить("ВидСубконто1", ОбъектКоллекции.СубконтоКт.ПолучитьЗначение(1, "Ключ"));
	КонецЕсли;

	Если ОбъектКоллекции.СубконтоКт.КоличествоСтрок() &gt; 1 Тогда
		Параметры.ПараметрыАлгоритмов.Установить("Субконто2", ОбъектКоллекции.СубконтоКт.ПолучитьЗначение(2, "Значение"));
		Параметры.ПараметрыАлгоритмов.Установить("ВидСубконто2", ОбъектКоллекции.СубконтоКт.ПолучитьЗначение(2, "Ключ"));
	КонецЕсли;

	Если ОбъектКоллекции.СубконтоКт.КоличествоСтрок() &gt; 2 Тогда
		Параметры.ПараметрыАлгоритмов.Установить("Субконто3", ОбъектКоллекции.СубконтоКт.ПолучитьЗначение(3, "Значение"));
		Параметры.ПараметрыАлгоритмов.Установить("ВидСубконто3", ОбъектКоллекции.СубконтоКт.ПолучитьЗначение(3, "Ключ"));
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>31</Код>
							<Наименование> --&gt; СубконтоКт</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СубконтоКт" Вид="ВидыСубконтоСчета"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.СубконтоКт);
ИмяПКОВидСубконто = "ВидыСубконтоХозрасчетные";</ПередВыгрузкой>
							<ПриВыгрузке>Параметры.ПараметрыАлгоритмов.Установить("Счет", ОбъектКоллекции.СчетКт);
Если ПустоеЗначение(ОбъектКоллекции.СубконтоКт) = 0 Тогда
	Если ОбъектКоллекции.СубконтоКт.КоличествоСтрок() &gt; 1 Тогда
		Параметры.ПараметрыАлгоритмов.Установить("Субконто1", ОбъектКоллекции.СубконтоКт.ПолучитьЗначение(1, "Значение"));
		Параметры.ПараметрыАлгоритмов.Установить("ВидСубконто1", ОбъектКоллекции.СубконтоКт.ПолучитьЗначение(1, "Ключ"));
	КонецЕсли;

	Если ОбъектКоллекции.СубконтоКт.КоличествоСтрок() &gt; 2 Тогда
		Параметры.ПараметрыАлгоритмов.Установить("Субконто2", ОбъектКоллекции.СубконтоКт.ПолучитьЗначение(2, "Значение"));
		Параметры.ПараметрыАлгоритмов.Установить("ВидСубконто2", ОбъектКоллекции.СубконтоКт.ПолучитьЗначение(2, "Ключ"));
	КонецЕсли;

	Если ОбъектКоллекции.СубконтоКт.КоличествоСтрок() &gt; 3 Тогда
		Параметры.ПараметрыАлгоритмов.Установить("Субконто3", ОбъектКоллекции.СубконтоКт.ПолучитьЗначение(3, "Значение"));
		Параметры.ПараметрыАлгоритмов.Установить("ВидСубконто3", ОбъектКоллекции.СубконтоКт.ПолучитьЗначение(3, "Ключ"));
	КонецЕсли;
КонецЕсли;

Параметры.ПараметрыАлгоритмов.Установить("НомерСубконто", ОбъектКоллекции.СубконтоКт.НомерСтроки);
Параметры.ПараметрыАлгоритмов.Установить("Субконто", ОбъектКоллекции.СубконтоКт.Значение);
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконто", ОбъектКоллекции.СубконтоКт.Ключ);
Параметры.ПараметрыАлгоритмов.Установить("ВидУчета", "БУ");
ПриВыгрузкеСубконто();
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконто", "");
Параметры.ПараметрыАлгоритмов.Установить("ВидУчета", "");</ПриВыгрузке>
						</Свойство>
						<Свойство>
							<Код>27</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>20</Код>
							<Наименование> --&gt; ВалютаДт</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаДт" Вид="Измерение" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.СчетДт);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование> --&gt; ВалютаКт</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаКт" Вид="Измерение" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.СчетКт);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>32</Код>
							<Наименование> --&gt; Сумма</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование> --&gt; ВалютнаяСуммаДт</Наименование>
							<Порядок>1000</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютнаяСуммаДт" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>23</Код>
							<Наименование> --&gt; ВалютнаяСуммаКт</Наименование>
							<Порядок>1100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютнаяСуммаКт" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>24</Код>
							<Наименование> --&gt; КоличествоДт</Наименование>
							<Порядок>1200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КоличествоДт" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>25</Код>
							<Наименование> --&gt; КоличествоКт</Наименование>
							<Порядок>1300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КоличествоКт" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>29</Код>
							<Наименование> --&gt; Содержание</Наименование>
							<Порядок>1400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Содержание" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Значение = "Перенесено из ""1С:Бухгалтерии 7.7 (УСН)""";</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Свойство>
						<Код>35</Код>
						<Наименование> --&gt; СпособЗаполнения</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособЗаполнения" Вид="Реквизит"/>
						<ПередВыгрузкой>Значение = "Вручную";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВводНачальныхОстатков</Код>
				<Наименование> --&gt; ДокументСсылка.ВводНачальныхОстатков</Наименование>
				<Порядок>150</Порядок>
				<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные.Получить("РазделУчета")) = 1 Тогда
	Отказ = 1;
КонецЕсли;
Если (ВходящиеДанные.Получить("РазделУчета") = "ОсновныеСредства")
	ИЛИ (ВходящиеДанные.Получить("РазделУчета") = "НематериальныеАктивыИНИОКР") Тогда
	Отказ = 1;
КонецЕсли;
Если ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
КонецЕсли;
</ПередВыгрузкой>
				<ПослеЗагрузки>ПровестиЗаписьНеЗаписанныхОбъектов();

ТаблицаРасчетыПоЗаработнойПлате = Объект.РасчетыПоЗаработнойПлате;
Если ТаблицаРасчетыПоЗаработнойПлате.Количество() &lt;&gt; 0 Тогда
	Для Каждого СтрокаТаблицы ИЗ ТаблицаРасчетыПоЗаработнойПлате Цикл		
		Если СтрокаТаблицы.СчетУчета = ПланыСчетов.Хозрасчетный.РасчетыПоДепонированнымСуммам Тогда			
			Если ЗначениеЗаполнено(СтрокаТаблицы.Ведомость) Тогда
				ДокументДепонирования = СтрокаТаблицы.Ведомость.ПолучитьОбъект();
				ДокументДепонирования.Зарплата.Очистить();			
				ДокументДепонирования.Записать();
			КонецЕсли;
		КонецЕсли;		
	КонецЦикла;
	Для Каждого СтрокаТаблицы ИЗ ТаблицаРасчетыПоЗаработнойПлате Цикл		
		Если СтрокаТаблицы.СчетУчета = ПланыСчетов.Хозрасчетный.РасчетыПоДепонированнымСуммам Тогда			
			Если ЗначениеЗаполнено(СтрокаТаблицы.Ведомость) Тогда
				ДокументДепонирования						= СтрокаТаблицы.Ведомость.ПолучитьОбъект();
				НоваяСтрокаДокумента						= ДокументДепонирования.Зарплата.Добавить();
				НоваяСтрокаДокумента.ФизЛицо				= СтрокаТаблицы.РаботникОрганизации;
				НоваяСтрокаДокумента.Сумма					= СтрокаТаблицы.Сумма;
				НоваяСтрокаДокумента.ВыплаченностьЗарплаты	= Перечисления.ВыплаченностьЗарплаты.Задепонировано;
				ДокументДепонирования.Записать();
			КонецЕсли;		
		КонецЕсли;		
	КонецЦикла;
КонецЕсли;

//**************************************************************
Если (Объект.РазделУчета = Перечисления.РазделыУчетаДляВводаОстатков.НезавершенноеПроизводство)
	ИЛИ (Объект.РазделУчета = Перечисления.РазделыУчетаДляВводаОстатков.РасчетыСУчредителями)
	ИЛИ (Объект.РазделУчета = Перечисления.РазделыУчетаДляВводаОстатков.Капитал)
	ИЛИ (Объект.РазделУчета = Перечисления.РазделыУчетаДляВводаОстатков.ОтложенныеНалоговыеАктивыОбязательства) 	
	ИЛИ (Объект.РазделУчета = Перечисления.РазделыУчетаДляВводаОстатков.ПрочиеСчетаБухгалтерскогоУчета) 
	ИЛИ (Объект.РазделУчета = Перечисления.РазделыУчетаДляВводаОстатков.ДенежныеСредства) Тогда
	
	КоллекцияОбъектов = Объект.БухСправка;
	
	ТаблицаСубконто = Новый ТаблицаЗначений;
	ТаблицаСубконто.Колонки.Добавить("Субконто1");
	ТаблицаСубконто.Колонки.Добавить("Субконто2");
	ТаблицаСубконто.Колонки.Добавить("Субконто3");

	Для Каждого СтрокаКоллекции ИЗ КоллекцияОбъектов Цикл
		
		ТаблицаСубконто.Очистить();		
		СтрокаТаблицаСубконто = ТаблицаСубконто.Добавить();
		
		Счет = СтрокаКоллекции.СчетУчета;		
		ЧислоАктивныхСубконто = Счет.ВидыСубконто.Количество();
		
		Для Сбк = 1 По 3 Цикл
			Значение = СтрокаКоллекции["Субконто" + Сбк];
			Для Сч = 1 По ЧислоАктивныхСубконто Цикл
				ТипСубк = Счет.ВидыСубконто[Сч - 1].ВидСубконто.ТипЗначения;				
				Если Значение &lt;&gt; Неопределено Тогда
					Если ТипСубк.СодержитТип(ТипЗнч(Значение)) Тогда
						Если НЕ ЗначениеЗаполнено(СтрокаТаблицаСубконто["Субконто" + Сч]) Тогда
							СтрокаТаблицаСубконто["Субконто" + Сч] = Значение;
						Иначе
							СтрокаТаблицаСубконто["Субконто" + Сч] = ТипСубк.ПривестиЗначение(СтрокаТаблицаСубконто["Субконто" + Сч]);
						КонецЕсли;
					Иначе
						СтрокаТаблицаСубконто["Субконто" + Сч] = ТипСубк.ПривестиЗначение(СтрокаТаблицаСубконто["Субконто" + Сч]);
					КонецЕсли;
				Иначе
					СтрокаТаблицаСубконто["Субконто" + Сч] = ТипСубк.ПривестиЗначение(СтрокаТаблицаСубконто["Субконто" + Сч]);
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		
		СтрокаКоллекции.Субконто1 = СтрокаТаблицаСубконто.Субконто1;
		СтрокаКоллекции.Субконто2 = СтрокаТаблицаСубконто.Субконто2;
		СтрокаКоллекции.Субконто3 = СтрокаТаблицаСубконто.Субконто3;
	КонецЦикла;

ПровестиЗаписьНеЗаписанныхОбъектов();	
КонецЕсли;
</ПослеЗагрузки>
				<Приемник>ДокументСсылка.ВводНачальныхОстатков</Приемник>
				<Свойства>
					<Группа>
						<Код>10</Код>
						<Наименование> --&gt; БухСправка</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="БухСправка" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "НезавершенноеПроизводство")
	И (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "РасчетыСУчредителями")
	И (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "Капитал")
	И (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "ПрочиеСчетаБухгалтерскогоУчета")
	И (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "ДенежныеСредства") Тогда
	Отказ = 1;
ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
Иначе	
	ЗаполнитьРеквизитыДокументаВНО();
	Если ВходящиеДанные.Получить("РазделУчета") = "НезавершенноеПроизводство" Тогда
		ОпределитьПризнакОтражениеВУСН();
	КонецЕсли;	
	КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");		
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>21</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СчетУчета;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование> --&gt; Субконто1</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Субконто1" Вид="Реквизит"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Субконто1;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>23</Код>
							<Наименование> --&gt; Субконто2</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Субконто2" Вид="Реквизит"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Субконто2;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>24</Код>
							<Наименование> --&gt; Субконто3</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Субконто3" Вид="Реквизит"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Субконто3;
Если ОбъектКоллекции.СчетУчета = "ТоварыНаСкладе" Тогда
	ИмяПКО = "ДокументРасчетовСКонтрагентом";	
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>25</Код>
							<Наименование> --&gt; Сумма</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Сумма;
Если ВходящиеДанные.Получить("РазделУчета") = "ДенежныеСредства" Тогда
	Если (ОбъектКоллекции.Сумма = 0)
		И (ОбъектКоллекции.СуммаКт &lt;&gt; 0) Тогда
		Значение = ОбъектКоллекции.СуммаКт;
	КонецЕсли;
ИначеЕсли ВходящиеДанные.Получить("РазделУчета") = "РасчетыСУчредителями" Тогда
	Если (ОбъектКоллекции.Сумма = 0)
		И (ОбъектКоллекции.СуммаКт &lt;&gt; 0) 
		И (ОбъектКоллекции.СчетУчета = "РасчетыПоВкладамВУставныйКапитал") Тогда
		Значение = -ОбъектКоллекции.СуммаКт;
	КонецЕсли 
КонецЕсли;

Если ОбъектКоллекции.СчетУчета = "РезервыПредстоящихРасходов" Тогда
	Значение = 0;
КонецЕсли;


</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>26</Код>
							<Наименование> --&gt; СуммаКт</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаКт" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СуммаКт;
Если ВходящиеДанные.Получить("РазделУчета") = "РасчетыСУчредителями" Тогда
	Если (ОбъектКоллекции.Сумма = 0)
		И (ОбъектКоллекции.СуммаКт &lt;&gt; 0) 
		И (ОбъектКоллекции.СчетУчета = "РасчетыПоВкладамВУставныйКапитал") Тогда
		Значение = 0;
	КонецЕсли 
КонецЕсли;

Если ОбъектКоллекции.СчетУчета = "РезервыПредстоящихРасходов" Тогда
	Значение = - ОбъектКоллекции.Сумма;
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>27</Код>
							<Наименование> --&gt; Количество</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Количество;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>28</Код>
							<Наименование> --&gt; Валюта</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Валюта" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Валюта;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>29</Код>
							<Наименование> --&gt; ВалютнаяСумма</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютнаяСумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ВалютнаяСумма;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>30</Код>
							<Наименование> --&gt; ОтражениеВУСН</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтражениеВУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.ОтражениеВУСН"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОтражениеВУСН;</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>9</Код>
						<Наименование> --&gt; МПЗПриобретенные</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="МПЗПриобретенные" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "КапитальныеВложения")
	И (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "Материалы")
	И (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "Товары")
	И (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "ГотоваяПродукцияИПолуфабрикаты") Тогда
	Отказ = 1;
ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
Иначе
	ЗаполнитьРеквизитыДокументаВНО();
	Если (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "КапитальныеВложения") Тогда
		СинхронизацияТабличныхЧастей_ТМЦ();
	Иначе
		СинхронизацияТабличныхЧастей_ВНА();
	КонецЕсли;
	КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");	
КонецЕсли;
</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>46</Код>
							<Наименование> --&gt; НомерСтрокиТЧ</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НомерСтрокиТЧ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НомерСтроки;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>31</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СчетУчета;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>32</Код>
							<Наименование> --&gt; Номенклатура</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Номенклатура" Вид="Реквизит"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Номенклатура;

Если ПустоеЗначение(Значение) = 0 Тогда	
	Если (ОбъектКоллекции.СчетУчета = "СтроительствоОбъектовОсновныхСредств") Тогда
		ИмяПКО  = "ОбъектыСтроительства_08_3";
	ИначеЕсли (ОбъектКоллекции.СчетУчета = "ПриобретениеНематериальныхАктивов")
		ИЛИ (ОбъектКоллекции.СчетУчета = "ВыполнениеНИОКР") Тогда
		ИмяПКО  = "ОбъектыСтроительства_08_5_08_8";
		Если ОбъектКоллекции.СчетУчета = "ВыполнениеНИОКР" Тогда
			ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
			ИсходящиеДанные.Установить("Счет", СчетПоКоду("08.8"));
		КонецЕсли;
	ИначеЕсли (ОбъектКоллекции.СчетУчета = "ПриобретениеОбъектовОсновныхСредств") 
		ИЛИ  (ОбъектКоллекции.СчетУчета = "ОборудованиеКУстановке") Тогда
		ИмяПКО  = "ОбъектыСтроительства_08_4";
	Иначе 
		ИмяПКО  = "Номенклатура";		
	КонецЕсли;
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>33</Код>
							<Наименование> --&gt; Склад</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Склад" Вид="Реквизит" Тип="СправочникСсылка.Склады"/>
							<КодПравилаКонвертации>Склады                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Склад;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>34</Код>
							<Наименование> --&gt; Партия</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Партия" Вид="Реквизит"/>
							<ПередВыгрузкой>Если (ОбъектКоллекции.СчетУчета = "СтроительствоОбъектовОсновныхСредств") 
	ИЛИ (ОбъектКоллекции.СчетУчета = "ПриобретениеНематериальныхАктивов") 
	ИЛИ (ОбъектКоллекции.СчетУчета = "ВыполнениеНИОКР") Тогда
	Отказ = 1;
Иначе
	Если ПустоеЗначение(ОбъектКоллекции.ДокументОприходования) = 1 Тогда
		Значение = "ФиктивнаяПартия";
		ИмяПКО =  "ДокументРасчетовСКонтрагентомСтр"
	Иначе
		Значение = ОбъектКоллекции.ДокументОприходования;
		ИмяПКО =  "ДокументРасчетовСКонтрагентом"
	КонецЕсли;
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>37</Код>
							<Наименование> --&gt; РасчетныйДокумент</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РасчетныйДокумент" Вид="Реквизит"/>
							<ПередВыгрузкой>Если (ОбъектКоллекции.СчетУчета = "СтроительствоОбъектовОсновныхСредств") 
	ИЛИ (ОбъектКоллекции.СчетУчета = "ПриобретениеНематериальныхАктивов") 
	ИЛИ (ОбъектКоллекции.СчетУчета = "ВыполнениеНИОКР") Тогда
	
	Отказ = 1;
Иначе
	Если ПустоеЗначение(ОбъектКоллекции.РасчетныйДокумент) = 1 Тогда
		Значение = "ФиктивнаяПартия";
		ИмяПКО =  "ДокументРасчетовСКонтрагентомСтр"
	Иначе
		Значение = ОбъектКоллекции.РасчетныйДокумент;
		ИмяПКО =  "ДокументРасчетовСКонтрагентом"
	КонецЕсли;
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>45</Код>
							<Наименование> --&gt; СпособСтроительства</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособСтроительства" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыСтроительства"/>
							<ПередВыгрузкой>Если (ОбъектКоллекции.СчетУчета = "СтроительствоОбъектовОсновныхСредств") Тогда
	Значение = "Хозспособ";
Иначе
	Отказ = 1;
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>38</Код>
							<Наименование> --&gt; ОтражениеВУСН</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтражениеВУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.ОтражениеВУСН"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОтражениеВУСН;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>39</Код>
							<Наименование> --&gt; СтатусыПартийУСН</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтатусыПартийУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.СтатусыПартийУСН"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СтатусыПартийУСН;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>44</Код>
							<Наименование> --&gt; СтатусыОплатыРасходовУСН</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтатусыОплатыРасходовУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.СтатусыРасходовУСН"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СтатусыОплатыРасходовУСН;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>36</Код>
							<Наименование> --&gt; Количество</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Количество;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>35</Код>
							<Наименование> --&gt; Сумма</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Сумма;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>41</Код>
							<Наименование> --&gt; НДС</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НДС" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НДС;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>40</Код>
							<Наименование> --&gt; Валюта</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Валюта" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Валюта;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>42</Код>
							<Наименование> --&gt; ВалютнаяСумма</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютнаяСумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СуммаВал;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>43</Код>
							<Наименование> --&gt; ВалютныйНДС</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютныйНДС" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НДСВал;</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>13</Код>
						<Наименование> --&gt; МПЗОтгруженные</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="МПЗОтгруженные" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "ТоварыОтгруженные" Тогда
	Отказ = 1;
ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
Иначе	
	ЗаполнитьРеквизитыДокументаВНО();
	СинхронизацияТабличныхЧастей_45();
	КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");	
КонецЕсли;
</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>47</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СчетУчета;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>48</Код>
							<Наименование> --&gt; Номенклатура</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
							<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Номенклатура;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>49</Код>
							<Наименование> --&gt; СтатусыОплатыРасходовУСН</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтатусыОплатыРасходовУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.СтатусыРасходовУСН"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СтатусыОплатыРасходовУСН;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>50</Код>
							<Наименование> --&gt; ОтражениеВУСН</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтражениеВУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.ОтражениеВУСН"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОтражениеВУСН;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>51</Код>
							<Наименование> --&gt; СтатусыПартийУСН</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтатусыПартийУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.СтатусыПартийУСН"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СтатусыПартийУСН;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>52</Код>
							<Наименование> --&gt; Покупатель</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Покупатель" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Контрагент;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>53</Код>
							<Наименование> --&gt; ДоговорПокупателя</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоговорПокупателя" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ДоговорКонтрагента;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>54</Код>
							<Наименование> --&gt; ДокументОтгрузки</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДокументОтгрузки" Вид="Реквизит"/>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.РасчетныйДокумент) = 1 Тогда
	Значение = "ФиктивнаяПартия";
	ИмяПКО =  "ДокументРасчетовСКонтрагентомСтр"
Иначе
	Значение = ОбъектКоллекции.РасчетныйДокумент;
	ИмяПКО =  "ДокументРасчетовСКонтрагентом"
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>63</Код>
							<Наименование> --&gt; Поставщик</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Поставщик" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Поставщик;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>62</Код>
							<Наименование> --&gt; ДоговорПоставщика</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоговорПоставщика" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ДоговорПоставщика;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>55</Код>
							<Наименование> --&gt; Партия</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Партия" Вид="Реквизит"/>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.ДокументОприходования) = 1 Тогда
	Значение = "ФиктивнаяПартия";
	ИмяПКО =  "ДокументРасчетовСКонтрагентомСтр"
Иначе
	Значение = ОбъектКоллекции.ДокументОприходования;
	ИмяПКО =  "ДокументРасчетовСКонтрагентом"
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>56</Код>
							<Наименование> --&gt; Количество</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Количество;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>57</Код>
							<Наименование> --&gt; Сумма</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Сумма;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>58</Код>
							<Наименование> --&gt; НДС</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НДС" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НДС;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>59</Код>
							<Наименование> --&gt; Валюта</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Валюта" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Валюта;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>60</Код>
							<Наименование> --&gt; ВалютнаяСумма</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютнаяСумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СуммаВал;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>61</Код>
							<Наименование> --&gt; ВалютныйНДС</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютныйНДС" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НДСВал;</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>15</Код>
						<Наименование> --&gt; РасходыБудущихПериодов</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РасходыБудущихПериодов" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "РасходыБудущихПериодов" Тогда
	Отказ = 1;
ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
Иначе	
	ЗаполнитьРеквизитыДокументаВНО();
	СинхронизацияТабличныхЧастей_РБП();
	КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");	
КонецЕсли;
</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>64</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СчетУчета;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>65</Код>
							<Наименование> --&gt; Субконто1</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Субконто1" Вид="Реквизит"/>
							<КодПравилаКонвертации>РасходыБудущихПериодов                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.РБП;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>66</Код>
							<Наименование> --&gt; Контрагент</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Контрагент" Вид="Реквизит"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Контрагент;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>67</Код>
							<Наименование> --&gt; ДоговорКонтрагента</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ДоговорКонтрагента;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>68</Код>
							<Наименование> --&gt; РасчетныйДокумент</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РасчетныйДокумент" Вид="Реквизит"/>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.РасчетныйДокумент) = 1 Тогда
	Значение = "ФиктивнаяПартия";
	ИмяПКО =  "ДокументРасчетовСКонтрагентомСтр"
Иначе
	Значение = ОбъектКоллекции.РасчетныйДокумент;
	ИмяПКО =  "ДокументРасчетовСКонтрагентом"
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>69</Код>
							<Наименование> --&gt; СтатусыОплатыРасходовУСН</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтатусыОплатыРасходовУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.СтатусыРасходовУСН"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СтатусыОплатыРасходовУСН;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>70</Код>
							<Наименование> --&gt; ОтражениеВУСН</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтражениеВУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.ОтражениеВУСН"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОтражениеВУСН;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>71</Код>
							<Наименование> --&gt; Сумма</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Сумма;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>72</Код>
							<Наименование> --&gt; НДС</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НДС" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НДС;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>73</Код>
							<Наименование> --&gt; Валюта</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Валюта" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Валюта;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>74</Код>
							<Наименование> --&gt; ВалютнаяСумма</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютнаяСумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СуммаВал;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>75</Код>
							<Наименование> --&gt; ВалютныйНДС</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютныйНДС" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НДСВал;</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>17</Код>
						<Наименование> --&gt; РасчетыПоНалогамИСборам</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РасчетыПоНалогамИСборам" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "РасчетыПоНалогамИСборам" Тогда
	Отказ = 1;
ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
Иначе	
	ЗаполнитьРеквизитыДокументаВНО();
	СинхронизацияТабличныхЧастей_Налоги();
	КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");	
КонецЕсли;
</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>76</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СчетУчета;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>77</Код>
							<Наименование> --&gt; ВидПлатежаВБюджет</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидПлатежаВБюджет" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыПлатежейВГосБюджет"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ВидПлатежаВБюджет;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>78</Код>
							<Наименование> --&gt; ОтражениеВУСН</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтражениеВУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.ОтражениеВУСН"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОтражениеВУСН;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>79</Код>
							<Наименование> --&gt; Сумма</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Сумма;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>80</Код>
							<Наименование> --&gt; СуммаКт</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаКт" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СуммаКт;</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>18</Код>
						<Наименование> --&gt; РасчетыСКонтрагентами</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РасчетыСКонтрагентами" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "РасчетыСПоставщикамиИПодрядчиками")
	И (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "РасчетыСПокупателямиИЗаказчиками")
	И (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "РасчетыСПрочимиДебиторамиИКредиторами") Тогда
	Отказ = 1;
ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
Иначе	
	Счет = Параметры.ПараметрыАлгоритмов.Получить("ТекущийСчет");
	Если (ВходящиеДанные.Получить("РазделУчета") = "РасчетыСПрочимиДебиторамиИКредиторами")
		И ((Счет &lt;&gt; СчетПоКоду("76.5")) И (Счет &lt;&gt; СчетПоКоду("76.6")) 
		И (Счет &lt;&gt; СчетПоКоду("76.55")) И (Счет &lt;&gt; СчетПоКоду("76.66"))) Тогда
		ЗаполнитьРеквизитыДокументаВНО();
		СинхронизацияТабличныхЧастей_Взаиморасчеты();
	КонецЕсли;
	КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");		
КонецЕсли;

</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>88</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СчетУчета;

ИспользоватьПКО = 1;
Если ((Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки)
	И (ВходящиеДанные.Получить("Дата") = Параметры.ДатаКонцаПериодаВыгрузки))
	ИЛИ (Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки) Тогда
	
	Если ВходящиеДанные.Получить("РазделУчета") = "РасчетыСПоставщикамиИПодрядчиками" Тогда
		Если ОбъектКоллекции.ВидЗадолженности = "Дебиторская" Тогда
			Если СтрДлина(Значение.Код) = 4 Тогда
				Значение = "РасчетыПоАвансамВыданным";
				ИспользоватьПКО = 0;
			ИначеЕсли СтрДлина(Значение.Код) &gt; 4 Тогда
				Значение = "РасчетыПоАвансамВыданнымВал";
				ИспользоватьПКО = 0;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли  ВходящиеДанные.Получить("РазделУчета") = "РасчетыСПокупателямиИЗаказчиками" Тогда
		Если ОбъектКоллекции.ВидЗадолженности = "Кредиторская" Тогда
			Если СтрДлина(Значение.Код) = 4 Тогда
				Значение = "РасчетыПоАвансамПолученным";
				ИспользоватьПКО = 0;
			ИначеЕсли СтрДлина(Значение.Код) &gt; 4 Тогда
				Значение = "РасчетыПоАвансамПолученнымВал";
				ИспользоватьПКО = 0;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецЕсли;

Если ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "РасчетыСПрочимиДебиторамиИКредиторами" Тогда
	Если ИспользоватьПКО = 1 Тогда
		ИмяПКО = "Хозрасчетный";
	КонецЕсли;
КонецЕсли;

Счет = Параметры.ПараметрыАлгоритмов.Получить("ТекущийСчет");
Если (ВходящиеДанные.Получить("РазделУчета") = "РасчетыСПрочимиДебиторамиИКредиторами")
	И ((Счет = СчетПоКоду("76.5")) ИЛИ (Счет = СчетПоКоду("76.6")) 
	ИЛИ (Счет = СчетПоКоду("76.55")) ИЛИ (Счет = СчетПоКоду("76.66"))) Тогда
	ИмяПКО = "Хозрасчетный";
КонецЕсли;
	
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>89</Код>
							<Наименование> --&gt; Аванс</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Аванс" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Если ((Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки)
	И (ВходящиеДанные.Получить("Дата") = Параметры.ДатаКонцаПериодаВыгрузки))
	ИЛИ (Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки) Тогда
	
	Если ВходящиеДанные.Получить("РазделУчета") = "РасчетыСПоставщикамиИПодрядчиками" Тогда
		Если ОбъектКоллекции.ВидЗадолженности = "Дебиторская" Тогда
			Значение = 1;
		Иначе
			Отказ = 1;
		КонецЕсли;
	ИначеЕсли  ВходящиеДанные.Получить("РазделУчета") = "РасчетыСПокупателямиИЗаказчиками" Тогда
		Если ОбъектКоллекции.ВидЗадолженности = "Кредиторская" Тогда
			Значение = 1;
		Иначе
			Отказ = 1;
		КонецЕсли;
	Иначе
		Отказ = 1;
	КонецЕсли;
Иначе
	Отказ = 1;
КонецЕсли;


</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>90</Код>
							<Наименование> --&gt; Контрагент</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Контрагент;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>91</Код>
							<Наименование> --&gt; ДоговорКонтрагента</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ДоговорКонтрагента;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>92</Код>
							<Наименование> --&gt; Документ</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Документ" Вид="Реквизит"/>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.РасчетныйДокумент) = 1 Тогда
	Значение = "ФиктивнаяПартия";
	ИмяПКО =  "ДокументРасчетовСКонтрагентомСтр"
Иначе
	Значение = ОбъектКоллекции.РасчетныйДокумент;
	ИмяПКО =  "ДокументРасчетовСКонтрагентом"
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>93</Код>
							<Наименование> --&gt; Сумма</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Если ВходящиеДанные.Получить("РазделУчета") = "РасчетыСПрочимиДебиторамиИКредиторами" Тогда
	Если ОбъектКоллекции.ВидЗадолженности = "Дебиторская" Тогда
		Значение = ОбъектКоллекции.СуммаВзаиморасчетов;
	Иначе
		Отказ = 1;
	КонецЕсли;
Иначе
	К = 1;
	Если (Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки) Тогда
		
		Если ВходящиеДанные.Получить("РазделУчета") = "РасчетыСПоставщикамиИПодрядчиками" Тогда
			Если ОбъектКоллекции.ВидЗадолженности = "Дебиторская" Тогда
				К = -1;
			КонецЕсли;
		ИначеЕсли  ВходящиеДанные.Получить("РазделУчета") = "РасчетыСПокупателямиИЗаказчиками" Тогда
			Если ОбъектКоллекции.ВидЗадолженности = "Кредиторская" Тогда
				К = -1;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	Значение = К*ОбъектКоллекции.СуммаВзаиморасчетов;
КонецЕсли;

	
	</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>94</Код>
							<Наименование> --&gt; СуммаКт</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаКт" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Если ВходящиеДанные.Получить("РазделУчета") = "РасчетыСПрочимиДебиторамиИКредиторами" Тогда
	Если ОбъектКоллекции.ВидЗадолженности = "Кредиторская" Тогда
		Значение = ОбъектКоллекции.СуммаВзаиморасчетов;
	Иначе
		Отказ = 1;
	КонецЕсли;
Иначе
	Значение = ОбъектКоллекции.СуммаВзаиморасчетов;
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>95</Код>
							<Наименование> --&gt; Валюта</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Валюта" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Валюта;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>96</Код>
							<Наименование> --&gt; ВалютнаяСумма</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютнаяСумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СуммаВзаиморасчетовВал;</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>19</Код>
						<Наименование> --&gt; РасчетыСПодотчетнымиЛицами</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РасчетыСПодотчетнымиЛицами" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "РасчетыСПодотчетнымиЛицами" Тогда
	Отказ = 1;	
ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
Иначе	
	ЗаполнитьРеквизитыДокументаВНО();
	КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");		
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>81</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СчетУчета;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>82</Код>
							<Наименование> --&gt; РаботникОрганизации</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РаботникОрганизации" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>СотрудникиКонтрагенты                             </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Субконто1;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>83</Код>
							<Наименование> --&gt; РасчетныйДокумент</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РасчетныйДокумент" Вид="Реквизит"/>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.Субконто2) = 1 Тогда
	Значение = "ФиктивнаяПартия";
	ИмяПКО =  "ДокументРасчетовСКонтрагентомСтр"
Иначе
	Значение = ОбъектКоллекции.Субконто2;
	ИмяПКО =  "ДокументРасчетовСКонтрагентом"
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>84</Код>
							<Наименование> --&gt; Сумма</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Сумма;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>85</Код>
							<Наименование> --&gt; СуммаКт</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаКт" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СуммаКт;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>86</Код>
							<Наименование> --&gt; Валюта</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Валюта" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<ПередВыгрузкой>Если ОбъектКоллекции.СчетУчета = "РасчетыСПодотчетнымиЛицамиВал" Тогда
	Значение = ОбъектКоллекции.Валюта;
Иначе
	Отказ = 1;
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>87</Код>
							<Наименование> --&gt; ВалютнаяСумма</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютнаяСумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Если ОбъектКоллекции.СчетУчета = "РасчетыСПодотчетнымиЛицамиВал" Тогда
	Значение = ОбъектКоллекции.ВалютнаяСумма;
Иначе
	Отказ = 1;
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>16</Код>
						<Наименование> --&gt; РасчетыПоЗаработнойПлате</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РасчетыПоЗаработнойПлате" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "РасчетыСПерсоналомПоОплатеТрудаИДепонентам" Тогда
	Отказ = 1;
ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
Иначе	
	Счет = Параметры.ПараметрыАлгоритмов.Получить("ТекущийСчет");
	Если Счет = СчетПоКоду("76.4") Тогда
		ЗаполнитьРеквизитыДокументаВНО();
		СинхронизацияТабличныхЧастей_Сотрудники();
	КонецЕсли;
	КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");		
КонецЕсли;

</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>97</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СчетУчета;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>98</Код>
							<Наименование> --&gt; РаботникОрганизации</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РаботникОрганизации" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Работник;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>99</Код>
							<Наименование> --&gt; Ведомость</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Ведомость" Вид="Реквизит" Тип="ДокументСсылка.ЗарплатаКВыплатеОрганизаций"/>
							<КодПравилаКонвертации>ЗарплатаКВыплатеОрганизаций                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ОбъектКоллекции.СчетУчета = "РасчетыСПерсоналомПоОплатеТруда" Тогда
	Отказ = 1;
Иначе
	Значение = ОбъектКоллекции.Работник;
	ТЗ = СоздатьОбъект("ТаблицаЗначений");
	ТЗ.НоваяКолонка("ФизЛицо");
	ТЗ.НоваяКолонка("Сумма");
	ТЗ.НоваяКолонка("ВыплаченностьЗарплаты");
	ТЗ.НоваяСтрока();
	ТЗ.ФизЛицо = ОбъектКоллекции.Работник;
	ТЗ.Сумма = ОбъектКоллекции.СуммаВзаиморасчетов; 
	ТЗ.ВыплаченностьЗарплаты = "Задепонировано";
	ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
	ИсходящиеДанные.Установить("СделатьСсылкуНаДокВводаОстатков", 1);
	ИсходящиеДанные.Установить("Зарплата", ТЗ);	
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>100</Код>
							<Наименование> --&gt; ОтражениеВУСН</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтражениеВУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.ОтражениеВУСН"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОтражениеВУСН;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>101</Код>
							<Наименование> --&gt; Сумма</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СуммаВзаиморасчетов;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>102</Код>
							<Наименование> --&gt; ПериодРегистрации</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
							<ПередВыгрузкой>Значение = ВходящиеДанные.Получить("Дата");</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>11</Код>
						<Наименование> --&gt; ДанныеПоСФНДС</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДанныеПоСФНДС" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "НДСПоПриобретеннымЦенностям")
	И (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "НДСПоАвансамПолученным")
	И (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "НДСНачисленный") Тогда
	Отказ = 1;
ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
Иначе		
	ЗаполнитьРеквизитыДокументаВНО();
	КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");				
КонецЕсли;
</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>103</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СчетУчета;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>104</Код>
							<Наименование> --&gt; СтавкаНДС</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтавкаНДС" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
							<ПередВыгрузкой>Значение = "НДС18";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>105</Код>
							<Наименование> --&gt; ВидЦенности</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидЦенности" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыЦенностей"/>
							<ПередВыгрузкой>Значение = "Товары";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>106</Код>
							<Наименование> --&gt; Контрагент</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Субконто1;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>107</Код>
							<Наименование> --&gt; ДоговорКонтрагента</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Субконто2;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>108</Код>
							<Наименование> --&gt; СчетФактура</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетФактура" Вид="Реквизит"/>
							<КодПравилаКонвертации>ДокументРасчетовСКонтрагентом                     </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Субконто2;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>109</Код>
							<Наименование> --&gt; СуммаБезНДС</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаБезНДС" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Сумма * 100 / 18;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>110</Код>
							<Наименование> --&gt; НДС</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НДС" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Сумма;
</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа Отключить="true">
						<Код>14</Код>
						<Наименование> --&gt; МПЗРеализованныеУСН</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="МПЗРеализованныеУСН" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "ПрочиеРасходыНалоговогоУчетаУСНиИП" Тогда
	Отказ = 1;
ИначеЕсли Параметры.ИмяТаблицы &lt;&gt; "МПЗРеализованныеУСН" Тогда
	Отказ = 1;
ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
Иначе		
	КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");		
КонецЕсли;</ПередОбработкойВыгрузки>
					</Группа>
					<Группа>
						<Код>20</Код>
						<Наименование> --&gt; УслугиУСН</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="УслугиУСН" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "ПрочиеРасходыНалоговогоУчетаУСНиИП" Тогда
	Отказ = 1;
ИначеЕсли Параметры.ИмяТаблицы &lt;&gt; "УслугиУСН" Тогда
	Отказ = 1;
ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
Иначе		
	КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");		
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>111</Код>
							<Наименование> --&gt; Контрагент</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Контрагент" Вид="Реквизит"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Контрагент;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>112</Код>
							<Наименование> --&gt; ДоговорКонтрагента</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ДоговорКонтрагента;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>113</Код>
							<Наименование> --&gt; РасчетныйДокумент</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РасчетныйДокумент" Вид="Реквизит"/>
							<КодПравилаКонвертации>ДокументРасчетовСКонтрагентом                     </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.РасчетныйДокумент;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>114</Код>
							<Наименование> --&gt; ОтражениеВУСН</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтражениеВУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.ОтражениеВУСН"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОтражениеВУСН;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>115</Код>
							<Наименование> --&gt; Валюта</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Валюта" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Валюта;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>116</Код>
							<Наименование> --&gt; Сумма</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Сумма;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>117</Код>
							<Наименование> --&gt; НДС</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НДС" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НДС;</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа Отключить="true">
						<Код>12</Код>
						<Наименование> --&gt; ДопРасходыУСН</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДопРасходыУСН" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "ПрочиеРасходыНалоговогоУчетаУСНиИП" Тогда
	Отказ = 1;
ИначеЕсли Параметры.ИмяТаблицы &lt;&gt; "ДопРасходыУСН" Тогда
	Отказ = 1;
ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
Иначе		
	КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");		
КонецЕсли;</ПередОбработкойВыгрузки>
					</Группа>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>650</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Проведен</Наименование>
						<Порядок>700</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>750</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Если ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "ПрочиеРасходыНалоговогоУчетаУСНиИП" Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ДопКомментарий", "# Остатки по счету """ + Строка(ВходящиеДанные.Получить("Счет")) + """");
Иначе
	Параметры.ПараметрыАлгоритмов.Установить("ДопКомментарий", "# Остатки прочих расходов ");
КонецЕсли;
ПолучитьКомментарийДокумента();</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>5</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>800</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>6</Код>
						<Наименование> --&gt; ОтражатьВБухгалтерскомУчете</Наименование>
						<Порядок>850</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтражатьВБухгалтерскомУчете" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>7</Код>
						<Наименование> --&gt; ОтражатьВНалоговомУчете</Наименование>
						<Порядок>900</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтражатьВНалоговомУчете" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>8</Код>
						<Наименование> --&gt; ОтражатьПоСпециальнымРегистрам</Наименование>
						<Порядок>950</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтражатьПоСпециальнымРегистрам" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; РазделУчета</Наименование>
						<Порядок>1000</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РазделУчета" Вид="Реквизит" Тип="ПеречислениеСсылка.РазделыУчетаДляВводаОстатков"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
		<Группа>
			<Код>ПланСчетов</Код>
			<Наименование>План счетов</Наименование>
			<Порядок>500</Порядок>
			<Правило>
				<Код>Хозрасчетный</Код>
				<Наименование>ПланСчетовСсылка.Основной --&gt; ПланСчетовСсылка.Хозрасчетный</Наименование>
				<Порядок>100</Порядок>
				<ПриВыгрузке>Если ТипЗначенияСтр(ВходящиеДанные) = "СписокЗначений" Тогда
	КодСчета = ВходящиеДанные.Получить("КодСчета");
	Если ПустоеЗначение(КодСчета) = 0 Тогда
		Значение = КодСчета;		
	КонецЕсли;	
КонецЕсли;</ПриВыгрузке>
				<Источник>ПланСчетовСсылка.Основной</Источник>
				<Приемник>ПланСчетовСсылка.Хозрасчетный</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>2</Код>
						<Наименование>001 --&gt; 001</Наименование>
						<Порядок>100</Порядок>
						<Источник>001</Источник>
						<Приемник>АрендованныеОсновныеСредства</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>002.1 --&gt; 002</Наименование>
						<Порядок>200</Порядок>
						<Источник>002</Источник>
						<Приемник>ТМЦпринятыеНаОтветственноеХранение</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>002.2 --&gt; 002</Наименование>
						<Порядок>300</Порядок>
						<Источник>002</Источник>
						<Приемник>ТМЦпринятыеНаОтветственноеХранение</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>003 --&gt; 003.01</Наименование>
						<Порядок>400</Порядок>
						<Источник>003</Источник>
						<Приемник>МатериалыПринятыеВПереработку</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>004 --&gt; 004.01</Наименование>
						<Порядок>500</Порядок>
						<Источник>004</Источник>
						<Приемник>ТоварыНаСкладе</Приемник>
					</Значение>
					<Значение>
						<Код>9</Код>
						<Наименование>007 --&gt; 007</Наименование>
						<Порядок>800</Порядок>
						<Источник>007</Источник>
						<Приемник>СписаннаяВУбытокЗадолженностьДебиторов</Приемник>
					</Значение>
					<Значение>
						<Код>10</Код>
						<Наименование>008 --&gt; 008</Наименование>
						<Порядок>900</Порядок>
						<Источник>008</Источник>
						<Приемник>ОбеспеченияОбязательствПолученные</Приемник>
					</Значение>
					<Значение>
						<Код>11</Код>
						<Наименование>009 --&gt; 009</Наименование>
						<Порядок>1000</Порядок>
						<Источник>009</Источник>
						<Приемник>ОбеспеченияОбязательствВыданные</Приемник>
					</Значение>
					<Значение>
						<Код>12</Код>
						<Наименование>01.1 --&gt; 01.01</Наименование>
						<Порядок>1100</Порядок>
						<Источник>01.1</Источник>
						<Приемник>ОСвОрганизации</Приемник>
					</Значение>
					<Значение>
						<Код>13</Код>
						<Наименование>01.2 --&gt; 01.09</Наименование>
						<Порядок>1200</Порядок>
						<Источник>01.2</Источник>
						<Приемник>ВыбытиеОС</Приемник>
					</Значение>
					<Значение>
						<Код>14</Код>
						<Наименование>010 --&gt; 010</Наименование>
						<Порядок>1300</Порядок>
						<Источник>010</Источник>
						<Приемник>ИзносОсновныхСредств</Приемник>
					</Значение>
					<Значение>
						<Код>15</Код>
						<Наименование>011 --&gt; 011</Наименование>
						<Порядок>1400</Порядок>
						<Источник>011</Источник>
						<Приемник>ОсновныеСредстваСданныеВАренду</Приемник>
					</Значение>
					<Значение>
						<Код>16</Код>
						<Наименование>02.1 --&gt; 02.01</Наименование>
						<Порядок>1500</Порядок>
						<Источник>02.1</Источник>
						<Приемник>АмортизацияОС_01</Приемник>
					</Значение>
					<Значение>
						<Код>17</Код>
						<Наименование>02.2 --&gt; 02.02</Наименование>
						<Порядок>1600</Порядок>
						<Источник>02.2</Источник>
						<Приемник>АмортизацияОС_03</Приемник>
					</Значение>
					<Значение>
						<Код>18</Код>
						<Наименование>03.1 --&gt; 03.01</Наименование>
						<Порядок>1700</Порядок>
						<Источник>03.1</Источник>
						<Приемник>МЦвОрганизации</Приемник>
					</Значение>
					<Значение>
						<Код>19</Код>
						<Наименование>03.2 --&gt; 03.02</Наименование>
						<Порядок>1800</Порядок>
						<Источник>03.2</Источник>
						<Приемник>МЦ_ПредоставленныеВоВременноеВладение</Приемник>
					</Значение>
					<Значение>
						<Код>20</Код>
						<Наименование>03.3 --&gt; 03.03</Наименование>
						<Порядок>1900</Порядок>
						<Источник>03.3</Источник>
						<Приемник>МЦ_ПредоставленныеВоВременноеПользование</Приемник>
					</Значение>
					<Значение>
						<Код>21</Код>
						<Наименование>03.4 --&gt; 03.04</Наименование>
						<Порядок>2000</Порядок>
						<Источник>03.4</Источник>
						<Приемник>ПрочиеДоходныеВложения</Приемник>
					</Значение>
					<Значение>
						<Код>22</Код>
						<Наименование>03.5 --&gt; 03.09</Наименование>
						<Порядок>2100</Порядок>
						<Источник>03.5</Источник>
						<Приемник>ВыбытиеМЦ</Приемник>
					</Значение>
					<Значение>
						<Код>23</Код>
						<Наименование>04.1 --&gt; 04.01</Наименование>
						<Порядок>2200</Порядок>
						<Источник>04.1</Источник>
						<Приемник>НематериальныеАктивыОрганизации</Приемник>
					</Значение>
					<Значение>
						<Код>24</Код>
						<Наименование>04.2 --&gt; 04.02</Наименование>
						<Порядок>2300</Порядок>
						<Источник>04.2</Источник>
						<Приемник>РасходыНаНИОКР</Приемник>
					</Значение>
					<Значение>
						<Код>25</Код>
						<Наименование>05 --&gt; 05</Наименование>
						<Порядок>2400</Порядок>
						<Источник>05</Источник>
						<Приемник>АмортизацияНематериальныхАктивов</Приемник>
					</Значение>
					<Значение>
						<Код>26</Код>
						<Наименование>07 --&gt; 07</Наименование>
						<Порядок>2500</Порядок>
						<Источник>07</Источник>
						<Приемник>ОборудованиеКУстановке</Приемник>
					</Значение>
					<Значение>
						<Код>29</Код>
						<Наименование>08.3 --&gt; 08.03</Наименование>
						<Порядок>2800</Порядок>
						<Источник>08.3</Источник>
						<Приемник>СтроительствоОбъектовОсновныхСредств</Приемник>
					</Значение>
					<Значение>
						<Код>30</Код>
						<Наименование>08.4 --&gt; 08.04</Наименование>
						<Порядок>2900</Порядок>
						<Источник>08.4</Источник>
						<Приемник>ПриобретениеОбъектовОсновныхСредств</Приемник>
					</Значение>
					<Значение>
						<Код>31</Код>
						<Наименование>08.5 --&gt; 08.05</Наименование>
						<Порядок>3000</Порядок>
						<Источник>08.5</Источник>
						<Приемник>ПриобретениеНематериальныхАктивов</Приемник>
					</Значение>
					<Значение>
						<Код>34</Код>
						<Наименование>08.8 --&gt; 08.08</Наименование>
						<Порядок>3300</Порядок>
						<Источник>08.8</Источник>
						<Приемник>ВыполнениеНИОКР</Приемник>
					</Значение>
					<Значение>
						<Код>36</Код>
						<Наименование>10.1 --&gt; 10.01</Наименование>
						<Порядок>3500</Порядок>
						<Источник>10.1</Источник>
						<Приемник>СырьеИМатериалы</Приемник>
					</Значение>
					<Значение>
						<Код>40</Код>
						<Наименование>10.2 --&gt; 10.02</Наименование>
						<Порядок>3600</Порядок>
						<Источник>10.2</Источник>
						<Приемник>СырьеИМатериалы</Приемник>
					</Значение>
					<Значение>
						<Код>41</Код>
						<Наименование>10.3 --&gt; 10.03</Наименование>
						<Порядок>3700</Порядок>
						<Источник>10.3</Источник>
						<Приемник>СырьеИМатериалы</Приемник>
					</Значение>
					<Значение>
						<Код>42</Код>
						<Наименование>10.4 --&gt; 10.04</Наименование>
						<Порядок>3800</Порядок>
						<Источник>10.11</Источник>
						<Приемник>ОбщехозяйственныеРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>43</Код>
						<Наименование>10.5 --&gt; 10.05</Наименование>
						<Порядок>3900</Порядок>
						<Источник>10.12</Источник>
						<Приемник>ОбщехозяйственныеРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>44</Код>
						<Наименование>10.6 --&gt; 10.06</Наименование>
						<Порядок>4000</Порядок>
						<Источник>10.13</Источник>
						<Приемник>ОбщехозяйственныеРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>63</Код>
						<Наименование>20 --&gt; 20.01</Наименование>
						<Порядок>5900</Порядок>
						<Источник>20</Источник>
						<Приемник>ОсновноеПроизводство</Приемник>
					</Значение>
					<Значение>
						<Код>67</Код>
						<Наименование>26 --&gt; 26</Наименование>
						<Порядок>6300</Порядок>
						<Источник>26</Источник>
						<Приемник>ОбщехозяйственныеРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>70</Код>
						<Наименование>40 --&gt; 40</Наименование>
						<Порядок>6600</Порядок>
						<Источник>40</Источник>
						<Приемник>ВыпускПродукции</Приемник>
					</Значение>
					<Значение>
						<Код>71</Код>
						<Наименование>41.1 --&gt; 41.01</Наименование>
						<Порядок>6700</Порядок>
						<Источник>41.1</Источник>
						<Приемник>ТоварыНаСкладах</Приемник>
					</Значение>
					<Значение>
						<Код>72</Код>
						<Наименование>41.2 --&gt; 41.02</Наименование>
						<Порядок>6800</Порядок>
						<Источник>41.2</Источник>
						<Приемник>ТоварыНаСкладах</Приемник>
					</Значение>
					<Значение>
						<Код>73</Код>
						<Наименование>41.3 --&gt; 41.03</Наименование>
						<Порядок>6900</Порядок>
						<Источник>41.3</Источник>
						<Приемник>ТоварыНаСкладах</Приемник>
					</Значение>
					<Значение>
						<Код>76</Код>
						<Наименование>42 --&gt; 42</Наименование>
						<Порядок>7200</Порядок>
						<Источник>42</Источник>
						<Приемник>ТорговаяНаценка</Приемник>
					</Значение>
					<Значение>
						<Код>77</Код>
						<Наименование>43 --&gt; 43</Наименование>
						<Порядок>7300</Порядок>
						<Источник>43</Источник>
						<Приемник>ГотоваяПродукция</Приемник>
					</Значение>
					<Значение>
						<Код>78</Код>
						<Наименование>44.1.1 --&gt; 44.01</Наименование>
						<Порядок>7400</Порядок>
						<Источник>44.1</Источник>
						<Приемник>ИздержкиОбращения</Приемник>
					</Значение>
					<Значение>
						<Код>81</Код>
						<Наименование>44.2 --&gt; 44.02</Наименование>
						<Порядок>7700</Порядок>
						<Источник>44.2</Источник>
						<Приемник>ИздержкиОбращения</Приемник>
					</Значение>
					<Значение>
						<Код>82</Код>
						<Наименование>44.3 --&gt; 44.02</Наименование>
						<Порядок>7800</Порядок>
						<Источник>44.3</Источник>
						<Приемник>КоммерческиеРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>83</Код>
						<Наименование>45 --&gt; 45.01</Наименование>
						<Порядок>7900</Порядок>
						<Источник>45</Источник>
						<Приемник>ПокупныеТоварыОтгруженные</Приемник>
					</Значение>
					<Значение>
						<Код>85</Код>
						<Наименование>50.1 --&gt; 50.01</Наименование>
						<Порядок>8100</Порядок>
						<Источник>50.1</Источник>
						<Приемник>КассаОрганизации</Приемник>
					</Значение>
					<Значение>
						<Код>86</Код>
						<Наименование>50.11 --&gt; 50.21</Наименование>
						<Порядок>8200</Порядок>
						<Источник>50.11</Источник>
						<Приемник>КассаОрганизацииВал</Приемник>
					</Значение>
					<Значение>
						<Код>90</Код>
						<Наименование>51 --&gt; 51</Наименование>
						<Порядок>8600</Порядок>
						<Источник>51</Источник>
						<Приемник>РасчетныеСчета</Приемник>
					</Значение>
					<Значение>
						<Код>91</Код>
						<Наименование>52 --&gt; 52</Наименование>
						<Порядок>8700</Порядок>
						<Источник>52</Источник>
						<Приемник>ВалютныеСчета</Приемник>
					</Значение>
					<Значение>
						<Код>92</Код>
						<Наименование>55.1 --&gt; 55.01</Наименование>
						<Порядок>8800</Порядок>
						<Источник>55.1</Источник>
						<Приемник>Аккредитивы</Приемник>
					</Значение>
					<Значение>
						<Код>93</Код>
						<Наименование>55.11 --&gt; 55.21</Наименование>
						<Порядок>8900</Порядок>
						<Источник>55.11</Источник>
						<Приемник>АккредитивыВал</Приемник>
					</Значение>
					<Значение>
						<Код>94</Код>
						<Наименование>55.2 --&gt; 55.02</Наименование>
						<Порядок>9000</Порядок>
						<Источник>55.2</Источник>
						<Приемник>ЧековыеКнижки</Приемник>
					</Значение>
					<Значение>
						<Код>95</Код>
						<Наименование>55.3 --&gt; 55.03</Наименование>
						<Порядок>9100</Порядок>
						<Источник>55.3</Источник>
						<Приемник>ДепозитныеСчета</Приемник>
					</Значение>
					<Значение>
						<Код>96</Код>
						<Наименование>55.33 --&gt; 55.23</Наименование>
						<Порядок>9200</Порядок>
						<Источник>55.33</Источник>
						<Приемник>ДепозитныеСчетаВал</Приемник>
					</Значение>
					<Значение>
						<Код>97</Код>
						<Наименование>55.4 --&gt; 55.04</Наименование>
						<Порядок>9300</Порядок>
						<Источник>55.4</Источник>
						<Приемник>ПрочиеСпециальныеСчета</Приемник>
					</Значение>
					<Значение>
						<Код>98</Код>
						<Наименование>55.44 --&gt; 55.24</Наименование>
						<Порядок>9400</Порядок>
						<Источник>55.44</Источник>
						<Приемник>ПрочиеСпециальныеСчетаВал</Приемник>
					</Значение>
					<Значение>
						<Код>99</Код>
						<Наименование>57.1 --&gt; 57.01</Наименование>
						<Порядок>9500</Порядок>
						<Источник>57.1</Источник>
						<Приемник>ПереводыВПути</Приемник>
					</Значение>
					<Значение>
						<Код>100</Код>
						<Наименование>57.11 --&gt; 57.02</Наименование>
						<Порядок>9600</Порядок>
						<Источник>57.11</Источник>
						<Приемник>ПереводыВПутиВал</Приемник>
					</Значение>
					<Значение>
						<Код>101</Код>
						<Наименование>58.1.1 --&gt; 58.01.1</Наименование>
						<Порядок>9700</Порядок>
						<Источник>58.1.1</Источник>
						<Приемник>Паи</Приемник>
					</Значение>
					<Значение>
						<Код>102</Код>
						<Наименование>58.1.2 --&gt; 58.01.2</Наименование>
						<Порядок>9800</Порядок>
						<Источник>58.1.2</Источник>
						<Приемник>Акции</Приемник>
					</Значение>
					<Значение>
						<Код>103</Код>
						<Наименование>58.2 --&gt; 58.02</Наименование>
						<Порядок>9900</Порядок>
						<Источник>58.2</Источник>
						<Приемник>ДолговыеЦенныеБумаги</Приемник>
					</Значение>
					<Значение>
						<Код>104</Код>
						<Наименование>58.3 --&gt; 58.03</Наименование>
						<Порядок>10000</Порядок>
						<Источник>58.3</Источник>
						<Приемник>ПредоставленныеЗаймы</Приемник>
					</Значение>
					<Значение>
						<Код>105</Код>
						<Наименование>58.4 --&gt; 58.04</Наименование>
						<Порядок>10100</Порядок>
						<Источник>58.4</Источник>
						<Приемник>ВкладыПоДоговоруПростогоТоварищества</Приемник>
					</Значение>
					<Значение>
						<Код>106</Код>
						<Наименование>58.5 --&gt; 58.05</Наименование>
						<Порядок>10200</Порядок>
						<Источник>58.5</Источник>
						<Приемник>ПриобретенныеПрава</Приемник>
					</Значение>
					<Значение>
						<Код>107</Код>
						<Наименование>59 --&gt; 59</Наименование>
						<Порядок>10300</Порядок>
						<Источник>59</Источник>
						<Приемник>РезервыПодОбесценениеФинансовыхВложений</Приемник>
					</Значение>
					<Значение>
						<Код>108</Код>
						<Наименование>60.1 --&gt; 60.01</Наименование>
						<Порядок>10400</Порядок>
						<Источник>60.1</Источник>
						<Приемник>РасчетыСПоставщиками</Приемник>
					</Значение>
					<Значение>
						<Код>109</Код>
						<Наименование>60.11 --&gt; 60.21</Наименование>
						<Порядок>10500</Порядок>
						<Источник>60.11</Источник>
						<Приемник>РасчетыСПоставщикамиВал</Приемник>
					</Значение>
					<Значение>
						<Код>110</Код>
						<Наименование>60.2 --&gt; 60.02</Наименование>
						<Порядок>10600</Порядок>
						<Источник>60.2</Источник>
						<Приемник>РасчетыСПоставщиками</Приемник>
					</Значение>
					<Значение>
						<Код>111</Код>
						<Наименование>60.22 --&gt; 60.22</Наименование>
						<Порядок>10700</Порядок>
						<Источник>60.22</Источник>
						<Приемник>РасчетыСПоставщикамиВал</Приемник>
					</Значение>
					<Значение>
						<Код>112</Код>
						<Наименование>60.3 --&gt; 60.03</Наименование>
						<Порядок>10800</Порядок>
						<Источник>60.3</Источник>
						<Приемник>ВекселяВыданные</Приемник>
					</Значение>
					<Значение>
						<Код>113</Код>
						<Наименование>60.6 --&gt; 60.31</Наименование>
						<Порядок>10900</Порядок>
						<Источник>60.4</Источник>
						<Приемник>ВекселяВыданные</Приемник>
					</Значение>
					<Значение>
						<Код>115</Код>
						<Наименование>62.1 --&gt; 62.01</Наименование>
						<Порядок>11100</Порядок>
						<Источник>62.1</Источник>
						<Приемник>РасчетыСПокупателями</Приемник>
					</Значение>
					<Значение>
						<Код>116</Код>
						<Наименование>62.11 --&gt; 62.21</Наименование>
						<Порядок>11200</Порядок>
						<Источник>62.11</Источник>
						<Приемник>РасчетыСПокупателямиВал</Приемник>
					</Значение>
					<Значение>
						<Код>117</Код>
						<Наименование>62.2 --&gt; 60.02</Наименование>
						<Порядок>11300</Порядок>
						<Источник>62.2</Источник>
						<Приемник>РасчетыСПокупателями</Приемник>
					</Значение>
					<Значение>
						<Код>119</Код>
						<Наименование>62.3 --&gt; 62.03</Наименование>
						<Порядок>11400</Порядок>
						<Источник>62.3</Источник>
						<Приемник>РасчетыСПокупателями</Приемник>
					</Значение>
					<Значение>
						<Код>118</Код>
						<Наименование>62.22 --&gt; 60.22</Наименование>
						<Порядок>11500</Порядок>
						<Источник>62.33</Источник>
						<Приемник>РасчетыСПокупателямиВал</Приемник>
					</Значение>
					<Значение>
						<Код>120</Код>
						<Наименование>62.4 --&gt; 62.01</Наименование>
						<Порядок>11600</Порядок>
						<Источник>62.4</Источник>
						<Приемник>РасчетыСПокупателями</Приемник>
					</Значение>
					<Значение>
						<Код>121</Код>
						<Наименование>62.44 --&gt; 62.21</Наименование>
						<Порядок>11700</Порядок>
						<Источник>62.44</Источник>
						<Приемник>РасчетыСПокупателямиВал</Приемник>
					</Значение>
					<Значение>
						<Код>125</Код>
						<Наименование>63 --&gt; 63</Наименование>
						<Порядок>12100</Порядок>
						<Источник>63</Источник>
						<Приемник>РезервыПоСомнительнымДолгам</Приемник>
					</Значение>
					<Значение>
						<Код>126</Код>
						<Наименование>66.1 --&gt; 66.01</Наименование>
						<Порядок>12200</Порядок>
						<Источник>66.1</Источник>
						<Приемник>КраткосрочныеКредиты</Приемник>
					</Значение>
					<Значение>
						<Код>127</Код>
						<Наименование>66.11 --&gt; 66.21</Наименование>
						<Порядок>12300</Порядок>
						<Источник>66.11</Источник>
						<Приемник>КраткосрочныеКредитыВал</Приемник>
					</Значение>
					<Значение>
						<Код>128</Код>
						<Наименование>66.2 --&gt; 66.02</Наименование>
						<Порядок>12400</Порядок>
						<Источник>66.2</Источник>
						<Приемник>ПроцентыПоКраткосрочнымКредитам</Приемник>
					</Значение>
					<Значение>
						<Код>129</Код>
						<Наименование>66.22 --&gt; 66.22</Наименование>
						<Порядок>12500</Порядок>
						<Источник>66.22</Источник>
						<Приемник>ПроцентыПоКраткосрочнымКредитамВал</Приемник>
					</Значение>
					<Значение>
						<Код>130</Код>
						<Наименование>66.3 --&gt; 66.03</Наименование>
						<Порядок>12600</Порядок>
						<Источник>66.3</Источник>
						<Приемник>ПроцентыПоКраткосрочнымКредитам</Приемник>
					</Значение>
					<Значение>
						<Код>131</Код>
						<Наименование>66.33 --&gt; 66.23</Наименование>
						<Порядок>12700</Порядок>
						<Источник>66.33</Источник>
						<Приемник>КраткосрочныеЗаймыВал</Приемник>
					</Значение>
					<Значение>
						<Код>136</Код>
						<Наименование>67.1 --&gt; 67.01</Наименование>
						<Порядок>13200</Порядок>
						<Источник>67.1</Источник>
						<Приемник>ДолгосрочныеКредиты</Приемник>
					</Значение>
					<Значение>
						<Код>137</Код>
						<Наименование>67.11 --&gt; 67.21</Наименование>
						<Порядок>13300</Порядок>
						<Источник>67.11</Источник>
						<Приемник>ДолгосрочныеКредитыВал</Приемник>
					</Значение>
					<Значение>
						<Код>138</Код>
						<Наименование>67.2 --&gt; 67.02</Наименование>
						<Порядок>13400</Порядок>
						<Источник>67.2</Источник>
						<Приемник>ПроцентыПоДолгосрочнымКредитам</Приемник>
					</Значение>
					<Значение>
						<Код>139</Код>
						<Наименование>67.22 --&gt; 67.22</Наименование>
						<Порядок>13500</Порядок>
						<Источник>67.22</Источник>
						<Приемник>ПроцентыПоДолгосрочнымКредитамВал</Приемник>
					</Значение>
					<Значение>
						<Код>140</Код>
						<Наименование>67.3 --&gt; 67.03</Наименование>
						<Порядок>13600</Порядок>
						<Источник>67.3</Источник>
						<Приемник>ПроцентыПоДолгосрочнымКредитам</Приемник>
					</Значение>
					<Значение>
						<Код>141</Код>
						<Наименование>67.33 --&gt; 67.23</Наименование>
						<Порядок>13700</Порядок>
						<Источник>67.33</Источник>
						<Приемник>ДолгосрочныеЗаймыВал</Приемник>
					</Значение>
					<Значение>
						<Код>146</Код>
						<Наименование>68.1 --&gt; 68.01</Наименование>
						<Порядок>14200</Порядок>
						<Источник>68.1</Источник>
						<Приемник>НДФЛ</Приемник>
					</Значение>
					<Значение>
						<Код>148</Код>
						<Наименование>68.2 --&gt; 68.02</Наименование>
						<Порядок>14300</Порядок>
						<Источник>68.2</Источник>
						<Приемник>НДС</Приемник>
					</Значение>
					<Значение>
						<Код>149</Код>
						<Наименование>68.3 --&gt; 68.03</Наименование>
						<Порядок>14400</Порядок>
						<Источник>68.3</Источник>
						<Приемник>Акцизы</Приемник>
					</Значение>
					<Значение>
						<Код>152</Код>
						<Наименование>68.5 --&gt; 68.10</Наименование>
						<Порядок>14500</Порядок>
						<Источник>68.5</Источник>
						<Приемник>ПрочиеНалогиИСборы</Приемник>
					</Значение>
					<Значение>
						<Код>147</Код>
						<Наименование>68.10 --&gt; 68.10</Наименование>
						<Порядок>14600</Порядок>
						<Источник>68.11</Источник>
						<Приемник>ЕНВД</Приемник>
					</Значение>
					<Значение>
						<Код>150</Код>
						<Наименование>68.4.1 --&gt; 68.04.1</Наименование>
						<Порядок>14700</Порядок>
						<Источник>68.12</Источник>
						<Приемник>ЕНприУСН</Приемник>
					</Значение>
					<Значение>
						<Код>155</Код>
						<Наименование>69.1 --&gt; 69.01</Наименование>
						<Порядок>15100</Порядок>
						<Источник>69.1</Источник>
						<Приемник>ФСС</Приемник>
					</Значение>
					<Значение>
						<Код>247</Код>
						<Наименование>69.1 --&gt; 69.01</Наименование>
						<Порядок>15100</Порядок>
						<Источник>69.31</Источник>
						<Приемник>ФСС</Приемник>
					</Значение>
					<Значение>
						<Код>156</Код>
						<Наименование>69.11 --&gt; 69.11</Наименование>
						<Порядок>15200</Порядок>
						<Источник>69.11</Источник>
						<Приемник>ФСС_НСиПЗ</Приемник>
					</Значение>
					<Значение>
						<Код>245</Код>
						<Наименование>69.2.2 --&gt; 69.02.1</Наименование>
						<Порядок>15400</Порядок>
						<Источник>69.51</Источник>
						<Приемник>ПФР_страх</Приемник>
					</Значение>
					<Значение>
						<Код>158</Код>
						<Наименование>69.2.2 --&gt; 69.02.1</Наименование>
						<Порядок>15400</Порядок>
						<Источник>69.21</Источник>
						<Приемник>ПФР_страх</Приемник>
					</Значение>
					<Значение>
						<Код>159</Код>
						<Наименование>69.2.3 --&gt; 69.02.2</Наименование>
						<Порядок>15500</Порядок>
						<Источник>69.22</Источник>
						<Приемник>ПФР_нак</Приемник>
					</Значение>
					<Значение>
						<Код>246</Код>
						<Наименование>69.2.3 --&gt; 69.02.2</Наименование>
						<Порядок>15500</Порядок>
						<Источник>69.52</Источник>
						<Приемник>ПФР_нак</Приемник>
					</Значение>
					<Значение>
						<Код>248</Код>
						<Наименование>69.2.3 --&gt; 69.02.2</Наименование>
						<Порядок>15500</Порядок>
						<Источник>69.41</Источник>
						<Приемник>ФФОМС</Приемник>
					</Значение>
					<Значение>
						<Код>249</Код>
						<Наименование>69.2.3 --&gt; 69.02.2</Наименование>
						<Порядок>15500</Порядок>
						<Источник>69.42</Источник>
						<Приемник>ТФОМС</Приемник>
					</Значение>
					<Значение>
						<Код>162</Код>
						<Наименование>70 --&gt; 70</Наименование>
						<Порядок>15800</Порядок>
						<Источник>70</Источник>
						<Приемник>РасчетыСПерсоналомПоОплатеТруда</Приемник>
					</Значение>
					<Значение>
						<Код>234</Код>
						<Наименование>71.2 --&gt; 71.01</Наименование>
						<Порядок>15900</Порядок>
						<Источник>71.2</Источник>
						<Приемник>РасчетыСПодотчетнымиЛицами</Приемник>
					</Значение>
					<Значение>
						<Код>163</Код>
						<Наименование>71.1 --&gt; 71.01</Наименование>
						<Порядок>15900</Порядок>
						<Источник>71.1</Источник>
						<Приемник>РасчетыСПодотчетнымиЛицами</Приемник>
					</Значение>
					<Значение>
						<Код>235</Код>
						<Наименование>71.22 --&gt; 71.21</Наименование>
						<Порядок>16000</Порядок>
						<Источник>71.22</Источник>
						<Приемник>РасчетыСПодотчетнымиЛицамиВал</Приемник>
					</Значение>
					<Значение>
						<Код>164</Код>
						<Наименование>71.11 --&gt; 71.21</Наименование>
						<Порядок>16000</Порядок>
						<Источник>71.11</Источник>
						<Приемник>РасчетыСПодотчетнымиЛицамиВал</Приемник>
					</Значение>
					<Значение>
						<Код>165</Код>
						<Наименование>73.1 --&gt; 73.01</Наименование>
						<Порядок>16100</Порядок>
						<Источник>73.1</Источник>
						<Приемник>РасчетыПоПредоставленнымЗаймам</Приемник>
					</Значение>
					<Значение>
						<Код>166</Код>
						<Наименование>73.2 --&gt; 73.02</Наименование>
						<Порядок>16200</Порядок>
						<Источник>73.2</Источник>
						<Приемник>РасчетыПоВозмещениюМатериальногоУщерба</Приемник>
					</Значение>
					<Значение>
						<Код>230</Код>
						<Наименование>73.3 --&gt; 73.03</Наименование>
						<Порядок>16300</Порядок>
						<Источник>73.6</Источник>
						<Приемник>РасчетыПоПрочимОперациям</Приемник>
					</Значение>
					<Значение>
						<Код>229</Код>
						<Наименование>73.3 --&gt; 73.03</Наименование>
						<Порядок>16300</Порядок>
						<Источник>73.5</Источник>
						<Приемник>РасчетыПоПрочимОперациям</Приемник>
					</Значение>
					<Значение>
						<Код>228</Код>
						<Наименование>73.3 --&gt; 73.03</Наименование>
						<Порядок>16300</Порядок>
						<Источник>73.4</Источник>
						<Приемник>РасчетыПоПрочимОперациям</Приемник>
					</Значение>
					<Значение>
						<Код>167</Код>
						<Наименование>73.3 --&gt; 73.03</Наименование>
						<Порядок>16300</Порядок>
						<Источник>73.3</Источник>
						<Приемник>РасчетыПоПрочимОперациям</Приемник>
					</Значение>
					<Значение>
						<Код>168</Код>
						<Наименование>75.1 --&gt; 75.01</Наименование>
						<Порядок>16400</Порядок>
						<Источник>75.1</Источник>
						<Приемник>РасчетыПоВкладамВУставныйКапитал</Приемник>
					</Значение>
					<Значение>
						<Код>169</Код>
						<Наименование>75.2 --&gt; 75.02</Наименование>
						<Порядок>16500</Порядок>
						<Источник>75.2</Источник>
						<Приемник>РасчетыПоВыплатеДоходов</Приемник>
					</Значение>
					<Значение>
						<Код>170</Код>
						<Наименование>75.3 --&gt; 75.01</Наименование>
						<Порядок>16600</Порядок>
						<Источник>75.3</Источник>
						<Приемник>РасчетыПоВкладамВУставныйКапитал</Приемник>
					</Значение>
					<Значение>
						<Код>171</Код>
						<Наименование>76.1.1 --&gt; 76.01</Наименование>
						<Порядок>16700</Порядок>
						<Источник>76.1</Источник>
						<Приемник>РасчетыПоИмущественномуИЛичномуСтрахованию</Приемник>
					</Значение>
					<Значение>
						<Код>175</Код>
						<Наименование>76.11 --&gt; 76.21</Наименование>
						<Порядок>17100</Порядок>
						<Источник>76.11</Источник>
						<Приемник>РасчетыПоИмущественномуИЛичномуСтрахованиюВал</Приемник>
					</Значение>
					<Значение>
						<Код>176</Код>
						<Наименование>76.2 --&gt; 76.02</Наименование>
						<Порядок>17200</Порядок>
						<Источник>76.2</Источник>
						<Приемник>РасчетыПоПретензиям</Приемник>
					</Значение>
					<Значение>
						<Код>177</Код>
						<Наименование>76.22 --&gt; 76.22</Наименование>
						<Порядок>17300</Порядок>
						<Источник>76.22</Источник>
						<Приемник>РасчетыПоПретензиямВал</Приемник>
					</Значение>
					<Значение>
						<Код>178</Код>
						<Наименование>76.3 --&gt; 76.03</Наименование>
						<Порядок>17400</Порядок>
						<Источник>76.3</Источник>
						<Приемник>РасчетыПоПричитающимсяДивидендам</Приемник>
					</Значение>
					<Значение>
						<Код>179</Код>
						<Наименование>76.4 --&gt; 76.04</Наименование>
						<Порядок>17500</Порядок>
						<Источник>76.4</Источник>
						<Приемник>РасчетыПоДепонированнымСуммам</Приемник>
					</Значение>
					<Значение>
						<Код>180</Код>
						<Наименование>76.5 --&gt; 76.05</Наименование>
						<Порядок>17600</Порядок>
						<Источник>76.5</Источник>
						<Приемник>ПрочиеРасчетыСРазнымиДебиторамиИКредиторами</Приемник>
					</Значение>
					<Значение>
						<Код>181</Код>
						<Наименование>76.55 --&gt; 76.25</Наименование>
						<Порядок>17700</Порядок>
						<Источник>76.55</Источник>
						<Приемник>ПрочиеРасчетыСРазнымиДебиторамиИКредиторамиВал</Приемник>
					</Значение>
					<Значение>
						<Код>182</Код>
						<Наименование>76.6 --&gt; 76.06</Наименование>
						<Порядок>17800</Порядок>
						<Источник>76.6</Источник>
						<Приемник>ПрочиеРасчетыСРазнымиДебиторамиИКредиторами</Приемник>
					</Значение>
					<Значение>
						<Код>183</Код>
						<Наименование>76.АВ --&gt; 76.АВ</Наименование>
						<Порядок>17900</Порядок>
						<Источник>76.66</Источник>
						<Приемник>ПрочиеРасчетыСРазнымиДебиторамиИКредиторамиВал</Приемник>
					</Значение>
					<Значение>
						<Код>184</Код>
						<Наименование>76.ЗП --&gt; 76.09</Наименование>
						<Порядок>18000</Порядок>
						<Источник>76.ЗП</Источник>
						<Приемник>ПрочиеРасчетыСРазнымиДебиторамиИКредиторами</Приемник>
					</Значение>
					<Значение>
						<Код>189</Код>
						<Наименование>79.1 --&gt; 79.01</Наименование>
						<Порядок>18500</Порядок>
						<Источник>79.1</Источник>
						<Приемник>РасчетыПоВыделенномуИмуществу</Приемник>
					</Значение>
					<Значение>
						<Код>190</Код>
						<Наименование>79.2 --&gt; 79.02</Наименование>
						<Порядок>18600</Порядок>
						<Источник>79.2</Источник>
						<Приемник>РасчетыПоТекущимОперациям</Приемник>
					</Значение>
					<Значение>
						<Код>191</Код>
						<Наименование>79.3 --&gt; 79.03</Наименование>
						<Порядок>18700</Порядок>
						<Источник>79.3</Источник>
						<Приемник>РасчетыПоДоговоруДоверительногоУправленияИмуществом</Приемник>
					</Значение>
					<Значение>
						<Код>192</Код>
						<Наименование>80 --&gt; 80.01</Наименование>
						<Порядок>18800</Порядок>
						<Источник>80</Источник>
						<Приемник>УставныйКапитал_ОбыкновенныеАкции</Приемник>
					</Значение>
					<Значение>
						<Код>193</Код>
						<Наименование>81 --&gt; 81.01</Наименование>
						<Порядок>18900</Порядок>
						<Источник>81</Источник>
						<Приемник>СобственныеАкции_ОбыкновенныеАкции</Приемник>
					</Значение>
					<Значение>
						<Код>194</Код>
						<Наименование>82.1 --&gt; 82.01</Наименование>
						<Порядок>19000</Порядок>
						<Источник>82.1</Источник>
						<Приемник>РезервыОбразованныеВСоответствииСЗаконодательством</Приемник>
					</Значение>
					<Значение>
						<Код>195</Код>
						<Наименование>82.2 --&gt; 82.02</Наименование>
						<Порядок>19100</Порядок>
						<Источник>82.2</Источник>
						<Приемник>РезервыОбразованныеВСоответствииСУчредительнымиДокументами</Приемник>
					</Значение>
					<Значение>
						<Код>196</Код>
						<Наименование>83.1 --&gt; 83.01</Наименование>
						<Порядок>19200</Порядок>
						<Источник>83.1</Источник>
						<Приемник>ПриростСтоимостиИмуществаПоПереоценке</Приемник>
					</Значение>
					<Значение>
						<Код>197</Код>
						<Наименование>83.2 --&gt; 83.02</Наименование>
						<Порядок>19300</Порядок>
						<Источник>83.2</Источник>
						<Приемник>ЭмиссионныйДоходОтВыпускаОбыкновенныхАкций</Приемник>
					</Значение>
					<Значение>
						<Код>198</Код>
						<Наименование>83.3 --&gt; 83.09</Наименование>
						<Порядок>19400</Порядок>
						<Источник>83.3</Источник>
						<Приемник>ДругиеИсточники</Приемник>
					</Значение>
					<Значение>
						<Код>199</Код>
						<Наименование>84.1 --&gt; 84.01</Наименование>
						<Порядок>19500</Порядок>
						<Источник>84.1</Источник>
						<Приемник>ПрибыльПодлежащаяРаспределению</Приемник>
					</Значение>
					<Значение>
						<Код>200</Код>
						<Наименование>84.2 --&gt; 84.02</Наименование>
						<Порядок>19600</Порядок>
						<Источник>84.2</Источник>
						<Приемник>УбытокПодлежащийПокрытию</Приемник>
					</Значение>
					<Значение>
						<Код>201</Код>
						<Наименование>84.3 --&gt; 84.03</Наименование>
						<Порядок>19700</Порядок>
						<Источник>84.3</Источник>
						<Приемник>НераспределеннаяПрибыльВОбращении</Приемник>
					</Значение>
					<Значение>
						<Код>202</Код>
						<Наименование>84.4 --&gt; 84.04</Наименование>
						<Порядок>19800</Порядок>
						<Источник>84.4</Источник>
						<Приемник>НераспределеннаяПрибыльИспользованная</Приемник>
					</Значение>
					<Значение>
						<Код>203</Код>
						<Наименование>86 --&gt; 86.01</Наименование>
						<Порядок>19900</Порядок>
						<Источник>86</Источник>
						<Приемник>ЦелевоеФинансированиеИзБюджета</Приемник>
					</Значение>
					<Значение>
						<Код>204</Код>
						<Наименование>90.1.1 --&gt; 90.01.1</Наименование>
						<Порядок>20000</Порядок>
						<Источник>90.1</Источник>
						<Приемник>ВыручкаНеЕНВД</Приемник>
					</Значение>
					<Значение>
						<Код>205</Код>
						<Наименование>90.1.2 --&gt; 90.01.2</Наименование>
						<Порядок>20100</Порядок>
						<Источник>90.2</Источник>
						<Приемник>ВыручкаЕНВД</Приемник>
					</Значение>
					<Значение>
						<Код>206</Код>
						<Наименование>90.2.1 --&gt; 90.02.1</Наименование>
						<Порядок>20200</Порядок>
						<Источник>90.4</Источник>
						<Приемник>СебестоимостьПродажНеЕНВД</Приемник>
					</Значение>
					<Значение>
						<Код>208</Код>
						<Наименование>90.3 --&gt; 90.03</Наименование>
						<Порядок>20300</Порядок>
						<Источник>90.3</Источник>
						<Приемник>СебестоимостьПродажЕНВД</Приемник>
					</Значение>
					<Значение>
						<Код>210</Код>
						<Наименование>90.5 --&gt; 90.05</Наименование>
						<Порядок>20500</Порядок>
						<Источник>90.5</Источник>
						<Приемник>Продажи_ЭкспортныеПошлины</Приемник>
					</Значение>
					<Значение>
						<Код>211</Код>
						<Наименование>90.7.1 --&gt; 90.07.1</Наименование>
						<Порядок>20600</Порядок>
						<Источник>90.7</Источник>
						<Приемник>Продажи_РасходыНаПродажуНеЕНВД</Приемник>
					</Значение>
					<Значение>
						<Код>213</Код>
						<Наименование>90.8.1 --&gt; 90.08.1</Наименование>
						<Порядок>20800</Порядок>
						<Источник>90.8</Источник>
						<Приемник>Продажи_УправленческиеРасходыНеЕНВД</Приемник>
					</Значение>
					<Значение>
						<Код>215</Код>
						<Наименование>90.9 --&gt; 90.09</Наименование>
						<Порядок>21000</Порядок>
						<Источник>90.9</Источник>
						<Приемник>ПрибыльУбытокОтПродаж</Приемник>
					</Значение>
					<Значение>
						<Код>216</Код>
						<Наименование>91.1 --&gt; 91.01</Наименование>
						<Порядок>21100</Порядок>
						<Источник>91.1</Источник>
						<Приемник>ПрочиеДоходы</Приемник>
					</Значение>
					<Значение>
						<Код>217</Код>
						<Наименование>91.2 --&gt; 91.02</Наименование>
						<Порядок>21200</Порядок>
						<Источник>91.2</Источник>
						<Приемник>ПрочиеДоходы</Приемник>
					</Значение>
					<Значение>
						<Код>218</Код>
						<Наименование>91.9 --&gt; 91.09</Наименование>
						<Порядок>21300</Порядок>
						<Источник>91.9</Источник>
						<Приемник>СальдоПрочихДоходовИРасходов</Приемник>
					</Значение>
					<Значение>
						<Код>219</Код>
						<Наименование>94 --&gt; 94</Наименование>
						<Порядок>21400</Порядок>
						<Источник>94</Источник>
						<Приемник>НедостачиИПотериОтПорчиЦенностей</Приемник>
					</Значение>
					<Значение>
						<Код>220</Код>
						<Наименование>96 --&gt; 96</Наименование>
						<Порядок>21500</Порядок>
						<Источник>96</Источник>
						<Приемник>РезервыПредстоящихРасходов</Приемник>
					</Значение>
					<Значение>
						<Код>233</Код>
						<Наименование>97 --&gt; 97.21</Наименование>
						<Порядок>21600</Порядок>
						<Источник>97.4</Источник>
						<Приемник>ПрочиеРасходыБудущихПериодов</Приемник>
					</Значение>
					<Значение>
						<Код>221</Код>
						<Наименование>97 --&gt; 97.21</Наименование>
						<Порядок>21600</Порядок>
						<Источник>97.1</Источник>
						<Приемник>ПрочиеРасходыБудущихПериодов</Приемник>
					</Значение>
					<Значение>
						<Код>232</Код>
						<Наименование>97 --&gt; 97.21</Наименование>
						<Порядок>21600</Порядок>
						<Источник>97.3</Источник>
						<Приемник>ПрочиеРасходыБудущихПериодов</Приемник>
					</Значение>
					<Значение>
						<Код>231</Код>
						<Наименование>97 --&gt; 97.21</Наименование>
						<Порядок>21600</Порядок>
						<Источник>97.2</Источник>
						<Приемник>ПрочиеРасходыБудущихПериодов</Приемник>
					</Значение>
					<Значение>
						<Код>222</Код>
						<Наименование>98.1 --&gt; 98.01</Наименование>
						<Порядок>21700</Порядок>
						<Источник>98.1</Источник>
						<Приемник>ДоходыПолученныеВСчетБудущихПериодов</Приемник>
					</Значение>
					<Значение>
						<Код>223</Код>
						<Наименование>98.2.1 --&gt; 98.02</Наименование>
						<Порядок>21800</Порядок>
						<Источник>98.2</Источник>
						<Приемник>БезвозмездныеПоступления</Приемник>
					</Значение>
					<Значение>
						<Код>225</Код>
						<Наименование>98.3 --&gt; 98.03</Наименование>
						<Порядок>22000</Порядок>
						<Источник>98.3</Источник>
						<Приемник>ПредстоящиеПоступленияПоНедостачамВыявленнымЗаПрошлыеГоды</Приемник>
					</Значение>
					<Значение>
						<Код>226</Код>
						<Наименование>98.4 --&gt; 98.04</Наименование>
						<Порядок>22100</Порядок>
						<Источник>98.4</Источник>
						<Приемник>РазницаМеждуСуммойПодлежащейВзысканиюСВиновныхЛицИБалансовойСтоимостьюПоНедостачамЦенностей</Приемник>
					</Значение>
					<Значение>
						<Код>227</Код>
						<Наименование>99.1 --&gt; 99.01.1</Наименование>
						<Порядок>22300</Порядок>
						<Источник>99</Источник>
						<Приемник>ПрибылиИУбыткиНеЕНВД</Приемник>
					</Значение>
					<Значение>
						<Код>1</Код>
						<Наименование>00 --&gt; 000</Наименование>
						<Порядок>22900</Порядок>
						<Источник>00</Источник>
						<Приемник>Вспомогательный</Приемник>
					</Значение>
					<Значение>
						<Код>237</Код>
						<Наименование>91.3 --&gt; 91.02</Наименование>
						<Порядок>23100</Порядок>
						<Источник>91.3</Источник>
						<Приемник>ПрочиеРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>238</Код>
						<Наименование>91.4 --&gt; 91.02</Наименование>
						<Порядок>23100</Порядок>
						<Источник>91.4</Источник>
						<Приемник>ПрочиеРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>239</Код>
						<Наименование>РВ --&gt; РВ.1</Наименование>
						<Порядок>23200</Порядок>
						<Источник>РВ</Источник>
						<Приемник>НераспределеннаяРозничнаяВыручка</Приемник>
					</Значение>
					<Значение>
						<Код>240</Код>
						<Наименование>ГТД --&gt; ГТД</Наименование>
						<Порядок>23300</Порядок>
						<Источник>ГТД</Источник>
						<Приемник>ГТД</Приемник>
					</Значение>
					<Значение>
						<Код>242</Код>
						<Наименование>19.2 --&gt; 19.04</Наименование>
						<Порядок>23400</Порядок>
						<Источник>19.2</Источник>
						<Приемник>НДСпоПриобретеннымУслугам</Приемник>
					</Значение>
					<Значение>
						<Код>241</Код>
						<Наименование>19.1 --&gt; 19.04</Наименование>
						<Порядок>23400</Порядок>
						<Источник>19.1</Источник>
						<Приемник>НДСпоПриобретеннымУслугам</Приемник>
					</Значение>
					<Значение>
						<Код>243</Код>
						<Наименование>91.3 --&gt; ПрочиеРасходы</Наименование>
						<Порядок>23450</Порядок>
						<Источник>91.3</Источник>
						<Приемник>ПрочиеРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>244</Код>
						<Наименование>91.3 --&gt; ПрочиеРасходы</Наименование>
						<Порядок>23450</Порядок>
						<Источник>91.4</Источник>
						<Приемник>ПрочиеРасходы</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ХозрасчетныйСтр</Код>
				<Наименование> --&gt; ПланСчетовСсылка.Хозрасчетный</Наименование>
				<Порядок>200</Порядок>
				<Приемник>ПланСчетовСсылка.Хозрасчетный</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Код</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ХозрасчетныйСтрДоб</Код>
				<Наименование> --&gt; ПланСчетовСсылка.Хозрасчетный</Наименование>
				<Порядок>200</Порядок>
				<Источник>ПланСчетовСсылка.Основной</Источник>
				<Приемник>ПланСчетовСсылка.Хозрасчетный</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<НеЗамещать>true</НеЗамещать>
						<Код>1</Код>
						<Наименование> --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Источник.Код;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<НеЗамещать>true</НеЗамещать>
						<Код>2</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Источник.Наименование;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВидыСубконтоХозрасчетные</Код>
				<Наименование>ВидСубконто --&gt; ПланВидовХарактеристикСсылка.ВидыСубконтоХозрасчетные</Наименование>
				<Порядок>300</Порядок>
				<ПередВыгрузкой>Если ТипЗначенияСтр(Источник) = "Строка" Тогда
	Значение = Источник;
	
Иначе
	Источник = Источник.Идентификатор();
КонецЕсли;</ПередВыгрузкой>
				<Источник>ВидСубконто</Источник>
				<Приемник>ПланВидовХарактеристикСсылка.ВидыСубконтоХозрасчетные</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>БанковскиеСчета --&gt; 00008</Наименование>
						<Порядок>100</Порядок>
						<Источник>БанковскиеСчета</Источник>
						<Приемник>БанковскиеСчета</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>Бюджеты --&gt; 00025</Наименование>
						<Порядок>200</Порядок>
						<Источник>Бюджеты</Источник>
						<Приемник>УровниБюджетов</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>ВидыНоменклатуры --&gt; 00012</Наименование>
						<Порядок>500</Порядок>
						<Источник>ВидыДеятельности</Источник>
						<Приемник>НоменклатурныеГруппы</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>ВидыПлатежейВБюджет --&gt; 00022</Наименование>
						<Порядок>600</Порядок>
						<Источник>ВидыПлатежей</Источник>
						<Приемник>ВидыПлатежейВГосБюджет</Приемник>
					</Значение>
					<Значение>
						<Код>9</Код>
						<Наименование>ВнереализационныеДоходы --&gt; 00013</Наименование>
						<Порядок>800</Порядок>
						<Источник>ПрочиеДоходыИРасходы</Источник>
						<Приемник>ПрочиеДоходыИРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>11</Код>
						<Наименование>ДвиженияДенежныхСредств --&gt; 00021</Наименование>
						<Порядок>1000</Порядок>
						<Источник>ДвиженияДенежныхСредств</Источник>
						<Приемник>СтатьиДвиженияДенежныхСредств</Приемник>
					</Значение>
					<Значение>
						<Код>12</Код>
						<Наименование>Договоры --&gt; 00016</Наименование>
						<Порядок>1100</Порядок>
						<Источник>Договоры</Источник>
						<Приемник>Договоры</Приемник>
					</Значение>
					<Значение>
						<Код>13</Код>
						<Наименование>ДоговорыС_Комиссионерами --&gt; 00038</Наименование>
						<Порядок>1200</Порядок>
						<Источник>ДоговорыПоставки</Источник>
						<Приемник>Партии</Приемник>
					</Значение>
					<Значение>
						<Код>14</Код>
						<Наименование>ДоговорыС_Комитентами --&gt; 00038</Наименование>
						<Порядок>1300</Порядок>
						<Источник>Договоры</Источник>
						<Приемник>Партии</Приемник>
					</Значение>
					<Значение>
						<Код>15</Код>
						<Наименование>ДоходыБудущихПериодов --&gt; 00018</Наименование>
						<Порядок>1400</Порядок>
						<Источник>ДоходыБудущихПериодов</Источник>
						<Приемник>ДоходыБудущихПериодов</Приемник>
					</Значение>
					<Значение>
						<Код>16</Код>
						<Наименование>Контрагенты --&gt; 00005</Наименование>
						<Порядок>1500</Порядок>
						<Источник>Контрагенты</Источник>
						<Приемник>Контрагенты</Приемник>
					</Значение>
					<Значение>
						<Код>18</Код>
						<Наименование>МестаХранения --&gt; 00027</Наименование>
						<Порядок>1700</Порядок>
						<Источник>МестаХранения</Источник>
						<Приемник>Склады</Приемник>
					</Значение>
					<Значение>
						<Код>19</Код>
						<Наименование>НематериальныеАктивы --&gt; 00006</Наименование>
						<Порядок>1800</Порядок>
						<Источник>НематериальныеАктивы</Источник>
						<Приемник>НематериальныеАктивы</Приемник>
					</Значение>
					<Значение>
						<Код>20</Код>
						<Наименование>Номенклатура --&gt; 00001</Наименование>
						<Порядок>1900</Порядок>
						<Источник>Номенклатура</Источник>
						<Приемник>Номенклатура</Приемник>
					</Значение>
					<Значение>
						<Код>21</Код>
						<Наименование>Оборудование --&gt; 00001</Наименование>
						<Порядок>2000</Порядок>
						<Источник>ОбъектыВнеоборотныхАктивов</Источник>
						<Приемник>Номенклатура</Приемник>
					</Значение>
					<Значение>
						<Код>22</Код>
						<Наименование>ОбъектыСтроительства --&gt; 00011</Наименование>
						<Порядок>2100</Порядок>
						<Источник>ОбъектыВнеоборотныхАктивов</Источник>
						<Приемник>ОбъектыСтроительства</Приемник>
					</Значение>
					<Значение>
						<Код>23</Код>
						<Наименование>ОсновныеСредства --&gt; 00004</Наименование>
						<Порядок>2200</Порядок>
						<Источник>ОсновныеСредства</Источник>
						<Приемник>ОсновныеСредства</Приемник>
					</Значение>
					<Значение>
						<Код>25</Код>
						<Наименование>ПрибылиИУбытки --&gt; 00014</Наименование>
						<Порядок>2400</Порядок>
						<Источник>ПрибылиИУбытки</Источник>
						<Приемник>ПрибылиИУбытки</Приемник>
					</Значение>
					<Значение>
						<Код>28</Код>
						<Наименование>РасходыБудущихПериодов --&gt; 00017</Наименование>
						<Порядок>2600</Порядок>
						<Источник>РасходыБудущихПериодов</Источник>
						<Приемник>РасходыБудущихПериодов</Приемник>
					</Значение>
					<Значение>
						<Код>29</Код>
						<Наименование>РезервыПредстоящихРасходов --&gt; 00033</Наименование>
						<Порядок>2700</Порядок>
						<Источник>РезервыПредстоящихРасходов</Источник>
						<Приемник>Резервы</Приемник>
					</Значение>
					<Значение>
						<Код>30</Код>
						<Наименование>Сотрудники --&gt; 00003</Наименование>
						<Порядок>2800</Порядок>
						<Источник>Сотрудники</Источник>
						<Приемник>РаботникиОрганизаций</Приемник>
					</Значение>
					<Значение>
						<Код>32</Код>
						<Наименование>СтатьиЗатратНаПроизводство --&gt; 00007</Наименование>
						<Порядок>3000</Порядок>
						<Источник>СтатьиЗатрат</Источник>
						<Приемник>СтатьиЗатрат</Приемник>
					</Значение>
					<Значение>
						<Код>42</Код>
						<Наименование>ЦенныеБумаги --&gt; 00019</Наименование>
						<Порядок>3500</Порядок>
						<Источник>ЦенныеБумаги</Источник>
						<Приемник>ЦенныеБумаги</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>ВидыНачислений --&gt; 00031</Наименование>
						<Порядок>3600</Порядок>
						<Источник>ВидыНачислений</Источник>
						<Приемник>ВидНачисленийОплатыТрудаПоСтатье255НК</Приемник>
					</Значение>
					<Значение>
						<Код>27</Код>
						<Наименование>ПрочиеОбъектыУчета --&gt; 00013</Наименование>
						<Порядок>3700</Порядок>
						<Источник>ПрочиеОбъектыУчета</Источник>
						<Приемник>ПрочиеДоходыИРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>43</Код>
						<Наименование>ГТД --&gt; 00050</Наименование>
						<Порядок>3800</Порядок>
						<Источник>ГТД</Источник>
						<Приемник>НомераГТД</Приемник>
					</Значение>
					<Значение>
						<Код>44</Код>
						<Наименование>НазначениеЦелевыхСредств --&gt; НазначениеЦелевыхСред</Наименование>
						<Порядок>3850</Порядок>
						<Источник>НазначениеЦелевыхСредств</Источник>
						<Приемник>НазначениеЦелевыхСредств</Приемник>
					</Значение>
					<Значение>
						<Код>45</Код>
						<Наименование>ИсточникиПоступления --&gt; ДвиженияЦелевыхСредств</Наименование>
						<Порядок>3900</Порядок>
						<Источник>ИсточникиПоступления</Источник>
						<Приемник>ДвиженияЦелевыхСредств</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ВидыСубконтоХозрасчетныеСтр</Код>
				<Наименование> --&gt; ПланВидовХарактеристикСсылка.ВидыСубконтоХозрасчетные</Наименование>
				<Порядок>400</Порядок>
				<Приемник>ПланВидовХарактеристикСсылка.ВидыСубконтоХозрасчетные</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Код</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
		<Группа>
			<Код>Организация</Код>
			<Наименование>Организация</Наименование>
			<Порядок>600</Порядок>
			<Правило>
				<Код>Организации</Код>
				<Наименование> --&gt; СправочникСсылка.Организации</Наименование>
				<Порядок>100</Порядок>
				<ПослеВыгрузки>Параметры.Организация = Источник;
ВыгрузитьПоПравилу(Источник,,,, "ТелефоныОрганизации");
ВыгрузитьПоПравилу(Источник,,,, "ЮридическийАдресОрганизации");
ВыгрузитьПоПравилу(Источник,,,, "ФактическийАдресОрганизации");

ВходящиеДанные = СоздатьОбъект("СписокЗначений");

Руководитель	= Константа.Руководитель.Получить(Параметры.ДатаКонцаПериодаВыгрузки);
ГлБухгалтер		= Константа.ГлБухгалтер.Получить(Параметры.ДатаКонцаПериодаВыгрузки);
Кассир			= Константа.Кассир.Получить(Параметры.ДатаКонцаПериодаВыгрузки);

Если ПустоеЗначение(Руководитель) = 0 Тогда
	ВходящиеДанные.УдалитьВсе();
	ВходящиеДанные.Установить("Должность", Руководитель.Должность);
	ВходящиеДанные.Установить("ОтветственноеЛицо", "Руководитель");
	ВходящиеДанные.Установить("ФизическоеЛицо", Руководитель);
	ВыгрузитьПоПравилу(Источник,, ВходящиеДанные,, "ОтветственныеЛицаОрганизаций");
КонецЕсли;

Если ПустоеЗначение(ГлБухгалтер) = 0 Тогда
	ВходящиеДанные.УдалитьВсе();
	ВходящиеДанные.Установить("Должность", ГлБухгалтер.Должность);
	ВходящиеДанные.Установить("ОтветственноеЛицо", "ГлавныйБухгалтер");
	ВходящиеДанные.Установить("ФизическоеЛицо", ГлБухгалтер);
	ВыгрузитьПоПравилу(Источник,, ВходящиеДанные,, "ОтветственныеЛицаОрганизаций");
КонецЕсли;

Если ПустоеЗначение(Кассир) = 0 Тогда
	ВходящиеДанные.УдалитьВсе();
	ВходящиеДанные.Установить("Должность", Кассир.Должность);
	ВходящиеДанные.Установить("ОтветственноеЛицо", "Кассир");
	ВходящиеДанные.Установить("ФизическоеЛицо", Кассир);
	ВыгрузитьПоПравилу(Источник,, ВходящиеДанные,, "ОтветственныеЛицаОрганизаций");
КонецЕсли;</ПослеВыгрузки>
				<ПослеЗагрузки>Если Не ОбъектНайден Тогда
	Объект.ОбменДанными.Загрузка = Истина;
	Объект.Записать();
КонецЕсли;

Параметры.Вставить("Организация", Объект.Ссылка);

МенеджерЗаписиРегистра = РегистрыСведений.ДатыВводаНачальныхОстатков.СоздатьМенеджерЗаписи();
МенеджерЗаписиРегистра.Организация = Объект.Ссылка;
МенеджерЗаписиРегистра.Прочитать();
Если НЕ МенеджерЗаписиРегистра.Выбран() Тогда
	МенеджерЗаписиРегистра.Организация = Объект.Ссылка;
КонецЕсли;
МенеджерЗаписиРегистра.ДатаВводаНачальныхОстатков = ДатаНачала - 24*60*60;
МенеджерЗаписиРегистра.Записать();
</ПослеЗагрузки>
				<Приемник>СправочникСсылка.Организации</Приемник>
				<Свойства>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Константа.НаименованиеОрганизации;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; ИНН</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ИНН" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Лев(Константа.ИННОрганизации, 10);</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование> --&gt; КПП</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КПП" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Сред(Константа.ИННОрганизации, 12, 9);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; РегистрационныйНомерПФР</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РегистрационныйНомерПФР" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = глПолучитьНалог("ПФР_страх").РегНомер;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; НаименованиеПолное</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Константа.ПолноеНаименованиеОрганизации;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>18</Код>
						<Наименование> --&gt; КодОКВЭД</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодОКВЭД" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Константа.КодОКВЭД;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; КодПоОКПО</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодПоОКПО" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Константа.КодОКПО;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>17</Код>
						<Наименование> --&gt; ОГРН</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОГРН" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Константа.ОГРН;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; КодИМНС</Наименование>
						<Порядок>800</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодИМНС" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Константа.КодИМНС;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование> --&gt; ТерриториальныеУсловияПФР</Наименование>
						<Порядок>900</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ТерриториальныеУсловияПФР" Вид="Реквизит" Тип="СправочникСсылка.ТерриториальныеУсловия"/>
						<КодПравилаКонвертации>ТерриториальныеУсловия                            </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Константа.ТерриториальныеУсловия;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование> --&gt; ОсновнойБанковскийСчет</Наименование>
						<Порядок>1000</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОсновнойБанковскийСчет" Вид="Реквизит" Тип="СправочникСсылка.БанковскиеСчета"/>
						<КодПравилаКонвертации>БанковскиеСчета                                   </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Константа.ОсновнойБанковскийСчет;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование> --&gt; ВидСтавокЕСНиПФР</Наименование>
						<Порядок>1100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидСтавокЕСНиПФР" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыСтавокЕСНиПФР"/>
						<ПередВыгрузкой>Значение = "ДляНеСельскохозяйственныхПроизводителей"</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование> --&gt; ЮрФизЛицо</Наименование>
						<Порядок>1150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЮрФизЛицо" Вид="Реквизит" Тип="ПеречислениеСсылка.ЮрФизЛицо"/>
						<ПередВыгрузкой>Значение = "ЮрЛицо";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>13</Код>
						<Наименование> --&gt; СвидетельствоДатаВыдачи</Наименование>
						<Порядок>1200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СвидетельствоДатаВыдачи" Вид="Реквизит" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Константа.СвидетельствоДатаВыдачи;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>15</Код>
						<Наименование> --&gt; СвидетельствоКодОргана</Наименование>
						<Порядок>1200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СвидетельствоКодОргана" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Константа.СвидетельствоКодИМНС;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>14</Код>
						<Наименование> --&gt; СвидетельствоНаименованиеОргана</Наименование>
						<Порядок>1200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СвидетельствоНаименованиеОргана" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Константа.СвидетельствоНаименованиеИМНС;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование> --&gt; СвидетельствоСерияНомер</Наименование>
						<Порядок>1200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СвидетельствоСерияНомер" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Константа.СвидетельствоСерияНомер;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>19</Код>
						<Наименование> --&gt; ВариантНаименованияДляПечатныхФорм</Наименование>
						<Порядок>1250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВариантНаименованияДляПечатныхФорм" Вид="Реквизит" Тип="ПеречислениеСсылка.ВариантыНаименованияДляПечатныхФорм"/>
						<ПередВыгрузкой>Значение = "СокращенноеНаименование";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>20</Код>
						<Наименование> --&gt; НаименованиеСокращенное</Наименование>
						<Порядок>1300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НаименованиеСокращенное" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Константа.НаименованиеОрганизации;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>21</Код>
						<Наименование> --&gt; ВидОбменаСКонтролирующимиОрганами</Наименование>
						<Порядок>1350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидОбменаСКонтролирующимиОрганами" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыОбменаСКонтролирующимиОрганами"/>
						<ПередВыгрузкой>Значение = "ОбменОтключен";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>22</Код>
						<Наименование> --&gt; НаименованиеПлательщикаПриПеречисленииВБюджет</Наименование>
						<Порядок>1400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НаименованиеПлательщикаПриПеречисленииВБюджет" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Константа.НаименованиеПлательщикаПриПеречисленииНалогов;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
		<Группа>
			<Код>ДополнительныеСведения</Код>
			<Наименование>Дополнительные сведения</Наименование>
			<Порядок>700</Порядок>
			<Правило>
				<Код>ПодразделенияОрганизаций</Код>
				<Наименование> --&gt; СправочникСсылка.ПодразделенияОрганизаций</Наименование>
				<Порядок>50</Порядок>
				<Приемник>СправочникСсылка.ПодразделенияОрганизаций</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "Основное подразделение";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Владелец</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Владелец" Вид="Свойство" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВидыОбъектовУчетаНМА</Код>
				<Наименование> --&gt; ПеречислениеСсылка.ВидыОбъектовУчетаНМА</Наименование>
				<Порядок>100</Порядок>
				<Приемник>ПеречислениеСсылка.ВидыОбъектовУчетаНМА</Приемник>
				<Свойства/>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ТипЦенНоменклатуры</Код>
				<Наименование> --&gt; СправочникСсылка.ТипыЦенНоменклатуры</Наименование>
				<Порядок>150</Порядок>
				<ПослеЗагрузки>Если Не ЗначениеЗаполнено(Объект.Код) Тогда Объект.УстановитьНовыйКод() КонецЕсли;</ПослеЗагрузки>
				<Приемник>СправочникСсылка.ТипыЦенНоменклатуры</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; ВалютаЦены</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВалютаЦены" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
						<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; ПорядокОкругления</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПорядокОкругления" Вид="Реквизит" Тип="ПеречислениеСсылка.ПорядкиОкругления"/>
						<ПередВыгрузкой>Значение = "Окр0_01";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; ЦенаВключаетНДС</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЦенаВключаетНДС" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>УстановкаЦенНоменклатуры</Код>
				<Наименование> --&gt; ДокументСсылка.УстановкаЦенНоменклатуры</Наименование>
				<Порядок>200</Порядок>
				<Приемник>ДокументСсылка.УстановкаЦенНоменклатуры</Приемник>
				<Свойства>
					<Группа>
						<Код>4</Код>
						<Наименование> --&gt; Товары</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Товары" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>5</Код>
							<Наименование> --&gt; Номенклатура</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
							<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; Цена</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Цена" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; Валюта</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Валюта" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
						</Свойство>
					</Группа>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Параметры.ДатаКонцаПериодаВыгрузки;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование> --&gt; ТипЦен</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ТипЦен" Вид="Реквизит" Тип="СправочникСсылка.ТипыЦенНоменклатуры"/>
						<КодПравилаКонвертации>ТипЦенНоменклатуры                                </КодПравилаКонвертации>
						<ПередВыгрузкой>ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
ИсходящиеДанные.Установить("Наименование", ВходящиеДанные.Получить("Наименование"));
ИсходящиеДанные.Установить("ЦенаВключаетНДС", ВходящиеДанные.Получить("ЦенаВключаетНДС"));
ВалютаЦены = ?(ПустоеЗначение(ВходящиеДанные.Получить("Валюта")) = 0, ВходящиеДанные.Получить("Валюта"), Параметры.Рубли);
ИсходящиеДанные.Установить("ВалютаЦены", ВалютаЦены);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; Информация</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Информация" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = ВходящиеДанные.Получить("Наименование");</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
		<Группа>
			<Код>ПослеВыгрузки</Код>
			<Наименование>После выгрузки</Наименование>
			<Порядок>800</Порядок>
			<Правило>
				<Код>Работники</Код>
				<Наименование> --&gt; ДокументСсылка.ПриемНаРаботуВОрганизацию</Наименование>
				<Порядок>50</Порядок>
				<ПередВыгрузкой>Если Параметры.СписокРаботников.КоличествоСтрок() = 0 Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
				<Приемник>ДокументСсылка.ПриемНаРаботуВОрганизацию</Приемник>
				<Свойства>
					<Группа>
						<Код>6</Код>
						<Наименование> --&gt; РаботникиОрганизации</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РаботникиОрганизации" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>КоллекцияОбъектов = Параметры.СписокРаботников;
КоллекцияОбъектов.НоваяКолонка("ПодразделениеОрганизации");
КоллекцияОбъектов.НоваяКолонка("Должность");</ПередОбработкойВыгрузки>
						<ПередВыгрузкой>ДатаПриема = глДатаПриема(ОбъектКоллекции.ФизЛицо);
Если (ДатаПриема = Дата(0)) ИЛИ (ДатаПриема &gt; Параметры.ДатаКонцаПериодаВыгрузки) Тогда
	Отказ = 1;
Иначе
	ОбъектКоллекции.ПодразделениеОрганизации = "1";
	ОбъектКоллекции.Должность = ОбъектКоллекции.ФизЛицо.Должность;
КонецЕсли;</ПередВыгрузкой>
						<Свойство>
							<Код>13</Код>
							<Наименование> --&gt; ФизЛицо</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.СотрудникиОрганизаций"/>
							<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ФизЛицо;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование> --&gt; Должность</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Должность" Вид="Реквизит" Тип="СправочникСсылка.ДолжностиОрганизаций"/>
							<КодПравилаКонвертации>ДолжностиОрганизаций                              </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; ДатаПриема</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаПриема" Вид="Реквизит" Тип="Дата"/>
							<ПередВыгрузкой>Значение = глДатаПриема(ОбъектКоллекции.ФизЛицо);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование> --&gt; ПодразделениеОрганизации</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПодразделениеОрганизации" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ПодразделенияОрганизаций                          </КодПравилаКонвертации>
						</Свойство>
					</Группа>
					<Группа>
						<Код>14</Код>
						<Наименование> --&gt; ОсновныеНачисления</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОсновныеНачисления" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>КоллекцияОбъектов = Параметры.СписокРаботников;
КоллекцияОбъектов.НоваяКолонка("ВидРасчета");
КоллекцияОбъектов.НоваяКолонка("Размер");</ПередОбработкойВыгрузки>
						<ПередВыгрузкой>ДатаПриема = глДатаПриема(ОбъектКоллекции.ФизЛицо);
Если (ДатаПриема = Дата(0)) ИЛИ (ДатаПриема &gt; Параметры.ДатаКонцаПериодаВыгрузки) Тогда
	Отказ = 1;
Иначе
	ОбъектКоллекции.ВидРасчета = ОбъектКоллекции.ФизЛицо;
	ОбъектКоллекции.Размер = ОбъектКоллекции.ФизЛицо.Оклад.Получить(Параметры.ДатаКонцаПериодаВыгрузки);
КонецЕсли;</ПередВыгрузкой>
						<Свойство>
							<Код>15</Код>
							<Наименование> --&gt; ФизЛицо</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.СотрудникиОрганизаций"/>
							<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ФизЛицо;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование> --&gt; ВидРасчета</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидРасчета" Вид="Реквизит" Тип="ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций"/>
							<КодПравилаКонвертации>ОсновныеНачисленияОрганизаций                     </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование> --&gt; Размер</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Размер" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Параметры.ДатаКонцаПериодаВыгрузки;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; Проведен</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>700</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "# Перенесено из 1С:Бухгалтерии 7.7 (УСН) #";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>19</Код>
						<Наименование> --&gt; ПриказНаГруппуСотрудников</Наименование>
						<Порядок>750</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПриказНаГруппуСотрудников" Вид="Реквизит" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>УволенныеРаботники</Код>
				<Наименование> --&gt; ДокументСсылка.УвольненияИзОрганизаций</Наименование>
				<Порядок>150</Порядок>
				<ПередВыгрузкой>Если Параметры.СписокРаботников.КоличествоСтрок() = 0 Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
				<Приемник>ДокументСсылка.УвольнениеИзОрганизаций</Приемник>
				<Свойства>
					<Группа>
						<Код>5</Код>
						<Наименование> --&gt; РаботникиОрганизации</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РаботникиОрганизации" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>КоллекцияОбъектов = Параметры.СписокУволенныхРаботников;</ПередОбработкойВыгрузки>
						<ПередВыгрузкой>Если ОбъектКоллекции.ФизЛицо.Выбран() = 0 Тогда
	Отказ = 1;
Иначе
	
	Параметры.ПараметрыАлгоритмов.Установить("ФизЛицо", ОбъектКоллекции.ФизЛицо);
	ДатаУвольнения = ОпределитьДатуУвольнения();
	
	Если ДатаУвольнения = Дата(0) Тогда
		Отказ = 1;
	ИначеЕсли ДатаУвольнения &gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
		Отказ = 1;		
	КонецЕсли;
	
КонецЕсли;

</ПередВыгрузкой>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; Физлицо</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.СотрудникиОрганизаций"/>
							<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ФизЛицо;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; ДатаУвольнения</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаУвольнения" Вид="Реквизит" Тип="Дата"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("ФизЛицо", ОбъектКоллекции.ФизЛицо);
Значение = ОпределитьДатуУвольнения();</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Параметры.ДатаКонцаПериодаВыгрузки;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Проведен</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "# Перенесено из 1С:Бухгалтерии 7.7 (УСН) #";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; ПриказНаГруппуСотрудников</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПриказНаГруппуСотрудников" Вид="Реквизит" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВводНачальныхОстатковОС</Код>
				<Наименование> --&gt; ДокументСсылка.ВводНачальныхОстатковОС</Наименование>
				<Порядок>200</Порядок>
				<ПередВыгрузкой>Если ВходящиеДанные.Получить("ОС").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
КонецЕсли;

//РежимЗаписи = "Проведение";</ПередВыгрузкой>
				<Приемник>ДокументСсылка.ВводНачальныхОстатков</Приемник>
				<Свойства>
					<Группа>
						<Код>4</Код>
						<Наименование> --&gt; ОС</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОС" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>КоллекцияОбъектов = ВходящиеДанные.Получить("ОС");
КоллекцияОбъектов.НоваяКолонка("СпособПоступленияРегл");
КоллекцияОбъектов.НоваяКолонка("СпособНачисленияАмортизацииБУ");
КоллекцияОбъектов.НоваяКолонка("МОЛРегл");
КоллекцияОбъектов.НоваяКолонка("СпособОтраженияРасходовПоАмортизацииБУ");
КоллекцияОбъектов.НоваяКолонка("СпособОтраженияРасходовПоАмортизацииНУ");
КоллекцияОбъектов.НоваяКолонка("НомерДокументаПринятияКУчетуРегл");</ПередОбработкойВыгрузки>
						<ПередВыгрузкой>ОбъектКоллекции.СпособПоступленияРегл = ОбъектКоллекции.ОсновноеСредство.СпособПоступления;
ОбъектКоллекции.МОЛРегл = ОбъектКоллекции.ОсновноеСредство.МОЛ.Получить(Параметры.ДатаВводаОстатков);
ОбъектКоллекции.СпособОтраженияРасходовПоАмортизацииБУ = ОбъектКоллекции.ОсновноеСредство;
ОбъектКоллекции.СпособОтраженияРасходовПоАмортизацииНУ = ОбъектКоллекции.ОсновноеСредство;
ОбъектКоллекции.СпособНачисленияАмортизацииБУ = ОбъектКоллекции.ОсновноеСредство.СпособНачисленияАмортизации;

// Получение документов ввода в эксплуатацию и модернизации
ОбъектКоллекции.НомерДокументаПринятияКУчетуРегл = "";

ОС = ОбъектКоллекции.ОсновноеСредство;

Экспл = СоздатьОбъект("Периодический");
Экспл.ИспользоватьОбъект("Состояние", ОС.ТекущийЭлемент());
Экспл.ВыбратьЗначения(ОС.ДатаВводаВЭксплуатацию, Параметры.ДатаКонцаПериодаВыгрузки);
Пока Экспл.ПолучитьЗначение() = 1 Цикл
	ИстДок = Экспл.ТекущийДокумент();
	Если ИстДок.Выбран() = 1 Тогда
		Если ИстДок.Вид() = "ВводВЭксплуатациюОС" Тогда
			ОбъектКоллекции.НомерДокументаПринятияКУчетуРегл = ИстДок.НомерДок;
			Прервать;
		КонецЕсли;
	КонецЕсли;
КонецЦикла;
</ПередВыгрузкой>
						<Свойство>
							<Код>21</Код>
							<Наименование> --&gt; ОсновноеСредство</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОсновноеСредство" Вид="Реквизит" Тип="СправочникСсылка.ОсновныеСредства"/>
							<КодПравилаКонвертации>ОсновныеСредства                                  </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование> --&gt; ИнвентарныйНомер</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИнвентарныйНомерРегл" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОсновноеСредство.Код;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>23</Код>
							<Наименование> --&gt; ПервоначальнаяСтоимостьБУ</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПервоначальнаяСтоимостьБУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОсновноеСредство.ПервоначальнаяСтоимость;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>24</Код>
							<Наименование> --&gt; ПервоначальнаяСтоимостьНУ</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПервоначальнаяСтоимостьУСН" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОсновноеСредство.ПервоначальнаяСтоимостьН;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>39</Код>
							<Наименование> --&gt; СчетУчетаБУ</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчетаБУ" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.СчетУчетаБУ) = 1 Тогда
	Значение = СчетПоКоду("01.1");

Иначе
	Значение = ОбъектКоллекции.СчетУчетаБУ;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>37</Код>
							<Наименование> --&gt; СчетАмортизацииБУ</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетАмортизацииБУ" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.СчетАмортизацииБУ) = 1 Тогда
	Значение = СчетПоКоду("02.1");

Иначе
	Значение = ОбъектКоллекции.СчетАмортизацииБУ;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование> --&gt; ДатаПринятияКУчетуБУ</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаПринятияКУчетуРегл" Вид="Реквизит" Тип="Дата"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОсновноеСредство.ДатаВводаВЭксплуатацию;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>26</Код>
							<Наименование> --&gt; СостояниеПринятияКУчетуБУ</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СостояниеПринятияКУчетуРегл" Вид="Реквизит" Тип="СправочникСсылка.СобытияОС"/>
							<КодПравилаКонвертации>ОСВводИПринятиеКУчету                             </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "ПринятиеКУчетуСВводомВЭкплуатацию";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>31</Код>
							<Наименование> --&gt; СпособПоступления</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособПоступленияРегл" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыПоступленияАктивов"/>
							<КодПравилаКонвертации>СпособыПоступленияОС                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СпособПоступленияРегл;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>28</Код>
							<Наименование> --&gt; СпособНачисленияАмортизацииБУ</Наименование>
							<Порядок>1200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособНачисленияАмортизацииБУ" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыНачисленияАмортизацииОС"/>
							<КодПравилаКонвертации>СпособыНачисленияАмортизацииОС                    </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СпособНачисленияАмортизацииБУ;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование> --&gt; МОЛБУ</Наименование>
							<Порядок>1300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="МОЛРегл" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.МОЛРегл;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование> --&gt; НакопленнаяАмортизацияБУ</Наименование>
							<Порядок>1400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НакопленнаяАмортизацияБУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Если ВходящиеДанные.получить("Дата") = (Параметры.ДатаВводаОстатков - 1) Тогда
	Если ПустоеЗначение(ОбъектКоллекции.НакопленнаяАмортизацияБУНач) = 1 Тогда
		Отказ = 1;
		
	Иначе
		Значение = ОбъектКоллекции.НакопленнаяАмортизацияБУНач;
	КонецЕсли;
Иначе
	Если ПустоеЗначение(ОбъектКоллекции.НакопленнаяАмортизацияБУКон) = 1 Тогда
		Если ПустоеЗначение(ОбъектКоллекции.НакопленнаяАмортизацияБУНач) = 1 Тогда
			Отказ = 1;
		Иначе
			Значение = ОбъектКоллекции.НакопленнаяАмортизацияБУНач;
		КонецЕсли;
	Иначе
		Значение = ОбъектКоллекции.НакопленнаяАмортизацияБУКон;
	КонецЕсли;
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование> --&gt; НакопленнаяАмортизацияНУ</Наименование>
							<Порядок>1500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаНачисленнойАмортизацииУСН" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОсновноеСредство.НачисленнаяАмортизацияН;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование> --&gt; НачислятьАмортизациюБУ</Наименование>
							<Порядок>1600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НачислятьАмортизациюБУ" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОсновноеСредство.НачислятьАмортизацию.Получить(Параметры.ДатаКонцаПериодаВыгрузки);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование> --&gt; ОбъемПродукцииРаботБУ</Наименование>
							<Порядок>1700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОбъемПродукцииРаботБУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОсновноеСредство.ОбщийОбъемПродукцииРабот;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>20</Код>
							<Наименование> --&gt; ОбъемПродукцииРаботДляВычисленияАмортизацииБУ</Наименование>
							<Порядок>1800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОбъемПродукцииРаботДляВычисленияАмортизацииБУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОсновноеСредство.ФактическийОбъемПродукцииРаботЗаМесяц.Получить(Параметры.ДатаКонцаПериодаВыгрузки);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование> --&gt; ПараметрВыработкиБУ</Наименование>
							<Порядок>1900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПараметрВыработкиБУ" Вид="Реквизит" Тип="СправочникСсылка.ПараметрыВыработкиОС"/>
							<КодПравилаКонвертации>ПараметрыВыработкиОС                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>29</Код>
							<Наименование> --&gt; СпособОтраженияРасходовПоАмортизации</Наименование>
							<Порядок>2000</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособОтраженияРасходовПоАмортизации" Вид="Реквизит" Тип="СправочникСсылка.СпособыОтраженияРасходовПоАмортизации"/>
							<КодПравилаКонвертации>СпособыОтраженияРасходовПоАмортизации             </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СпособОтраженияРасходовПоАмортизацииБУ;</ПередВыгрузкой>
						</Свойство>
						<Свойство Отключить="true">
							<Код>32</Код>
							<Наименование> --&gt; СрокИспользованияДляВычисленияАмортизацииБУ</Наименование>
							<Порядок>2100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СрокИспользованияДляВычисленияАмортизацииБУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОсновноеСредство.СрокПолезногоИспользования.Получить(Параметры.ДатаКонцаПериодаВыгрузки);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>33</Код>
							<Наименование> --&gt; СрокПолезногоИспользованияБУ</Наименование>
							<Порядок>2200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СрокПолезногоИспользованияБУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОсновноеСредство.СрокПолезногоИспользования.Получить(Параметры.ДатаКонцаПериодаВыгрузки);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>34</Код>
							<Наименование> --&gt; СрокПолезногоИспользованияНУ</Наименование>
							<Порядок>2300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СрокПолезногоИспользованияУСН" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОсновноеСредство.СрокПолезногоИспользованияН;</ПередВыгрузкой>
						</Свойство>
						<Свойство Отключить="true">
							<Код>35</Код>
							<Наименование> --&gt; СтоимостьДляВычисленияАмортизацииБУ</Наименование>
							<Порядок>2400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтоимостьДляВычисленияАмортизацииБУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОсновноеСредство.ПервоначальнаяСтоимость;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>41</Код>
							<Наименование> --&gt; ТекущаяСтоимостьБУ</Наименование>
							<Порядок>2500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ТекущаяСтоимостьБУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Если ВходящиеДанные.получить("Дата") = (Параметры.ДатаВводаОстатков - 1) Тогда
	Если ПустоеЗначение(ОбъектКоллекции.ТекущаяСтоимостьБУНач) = 1 Тогда
		Отказ = 1;
	Иначе
		Значение = ОбъектКоллекции.ТекущаяСтоимостьБУНач;
	КонецЕсли;
Иначе
	Если ПустоеЗначение(ОбъектКоллекции.ТекущаяСтоимостьБУКон) = 1 Тогда
		Если ПустоеЗначение(ОбъектКоллекции.ТекущаяСтоимостьБУНач) = 1 Тогда
			Отказ = 1;
		Иначе
			Значение = ОбъектКоллекции.ТекущаяСтоимостьБУНач;
		КонецЕсли;
	Иначе
		Значение = ОбъектКоллекции.ТекущаяСтоимостьБУКон;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>47</Код>
							<Наименование> --&gt; ДатаПриобретенияУСН</Наименование>
							<Порядок>2700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаПриобретенияУСН" Вид="Реквизит" Тип="Дата"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОсновноеСредство.ДатаПриобретения;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>49</Код>
							<Наименование> --&gt; ПорядокВключенияСтоимостиВСоставРасходовУСН</Наименование>
							<Порядок>2800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПорядокВключенияСтоимостиВСоставРасходовУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.ПорядокВключенияСтоимостиОСиНМАВСоставРасходовУСН"/>
							<ПередВыгрузкой>Если ОбъектКоллекции.ОсновноеСредство.ПорядокВключенияВРасходы = 1 Тогда
	Значение = "ВключитьВСоставАмортизируемогоИмущества";
ИначеЕсли ОбъектКоллекции.ОсновноеСредство.ПорядокВключенияВРасходы = 2 Тогда
	Значение = "ВключитьВСоставРасходов";
Иначе
	Значение = "НеВключатьВСоставРасходов";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>51</Код>
							<Наименование> --&gt; ПорядокПогашенияСтоимостиБУ</Наименование>
							<Порядок>2900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПорядокПогашенияСтоимостиБУ" Вид="Реквизит" Тип="ПеречислениеСсылка.ПорядокПогашенияСтоимостиОС"/>
							<ПередВыгрузкой>Значение = ?(ОбъектКоллекции.ОсновноеСредство.ПодлежитАмортизации = 1, "НачислениеАмортизации", "НачислениеИзноса");</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>52</Код>
							<Наименование> --&gt; КоэффициентАмортизацииБУ</Наименование>
							<Порядок>3000</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КоэффициентАмортизацииБУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОсновноеСредство.КоэффициентАмортизации.Получить(Параметры.ДатаКонцаПериодаВыгрузки);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>57</Код>
							<Наименование> --&gt; НазваниеДокументаПринятияКУчетуРегл</Наименование>
							<Порядок>3100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НазваниеДокументаПринятияКУчетуРегл" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Значение = "Акт ОС-1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>58</Код>
							<Наименование> --&gt; НомерДокументаПринятияКУчетуРегл</Наименование>
							<Порядок>3100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НомерДокументаПринятияКУчетуРегл" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
					</Группа>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>46</Код>
						<Наименование> --&gt; Проведен</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "# Перенесено из 1С:Бухгалтерии 7.7 (УСН) # Остатки по основным средствам #";
</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>56</Код>
						<Наименование> --&gt; РазделУчета</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РазделУчета" Вид="Реквизит" Тип="ПеречислениеСсылка.РазделыУчетаДляВводаОстатков"/>
						<ПередВыгрузкой>Значение = "ОсновныеСредства";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>44</Код>
						<Наименование> --&gt; ОтражатьВНалоговомУчете</Наименование>
						<Порядок>350</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтражатьВНалоговомУчете" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>54</Код>
						<Наименование> --&gt; ОтражатьВБухгалтерскомУчете</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтражатьВБухгалтерскомУчете" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>55</Код>
						<Наименование> --&gt; ОтражатьПоСпециальнымРегистрам</Наименование>
						<Порядок>450</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтражатьПоСпециальнымРегистрам" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>59</Код>
						<Наименование> --&gt; ПодразделениеОрганизации</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПодразделениеОрганизации" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
						<КодПравилаКонвертации>ПодразделенияОрганизаций                          </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "Основное подразделение";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВводНачальныхОстатковНМАИНИОКР</Код>
				<Наименование> --&gt; ДокументСсылка.ВводНачальныхОстатков</Наименование>
				<Порядок>250</Порядок>
				<ПередВыгрузкой>Если ВходящиеДанные.Получить("НМА").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
				<ПослеЗагрузки>ПровестиЗаписьНеЗаписанныхОбъектов();

ТаблицаНМА = Объект.НМА;

Для Каждого СтрокаТаблицыНМА ИЗ ТаблицаНМА Цикл
	
	Если ЗначениеЗаполнено(СтрокаТаблицыНМА.НематериальныйАктив) Тогда
		
		НМА = СтрокаТаблицыНМА.НематериальныйАктив.ПолучитьОбъект();
		
		Если СтрокаТаблицыНМА.СчетУчетаБУ = ПланыСчетов.Хозрасчетный.НематериальныеАктивыОрганизации Тогда
			НМА.ВидОбъектаУчета = Перечисления.ВидыОбъектовУчетаНМА.НематериальныйАктив;
			СтрокаТаблицыНМА.ВидОбъектаУчета = Перечисления.ВидыОбъектовУчетаНМА.НематериальныйАктив;
		Иначе
			НМА.ВидОбъектаУчета = Перечисления.ВидыОбъектовУчетаНМА.РасходыНаНИОКР;
			СтрокаТаблицыНМА.ВидОбъектаУчета = Перечисления.ВидыОбъектовУчетаНМА.РасходыНаНИОКР;
		КонецЕсли;
		
		НМА.Записать();
	КонецЕсли;
	
КонецЦикла;
ПровестиЗаписьНеЗаписанныхОбъектов();
</ПослеЗагрузки>
				<Приемник>ДокументСсылка.ВводНачальныхОстатков</Приемник>
				<Свойства>
					<Группа>
						<Код>1</Код>
						<Наименование> --&gt; НМА</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НМА" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>КоллекцияОбъектов = ВходящиеДанные.Получить("НМА");
КоллекцияОбъектов.НоваяКолонка("СпособПоступленияРегл");
КоллекцияОбъектов.НоваяКолонка("СпособНачисленияАмортизацииБУ");
КоллекцияОбъектов.НоваяКолонка("СпособОтраженияРасходовПоАмортизацииБУ");
КоллекцияОбъектов.НоваяКолонка("СпособОтраженияРасходовПоАмортизацииНУ");</ПередОбработкойВыгрузки>
						<ПередВыгрузкой>ОбъектКоллекции.СпособПоступленияРегл = ОбъектКоллекции.НМА.СпособПоступления;
ОбъектКоллекции.СпособОтраженияРасходовПоАмортизацииБУ = ОбъектКоллекции.НМА;
ОбъектКоллекции.СпособОтраженияРасходовПоАмортизацииНУ = ОбъектКоллекции.НМА;
ОбъектКоллекции.СпособНачисленияАмортизацииБУ = ОбъектКоллекции.НМА.СпособНачисленияАмортизации;</ПередВыгрузкой>
						<Свойство>
							<Код>10</Код>
							<Наименование> --&gt; НематериальныйАктив</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НематериальныйАктив" Вид="Реквизит" Тип="СправочникСсылка.НематериальныеАктивы"/>
							<КодПравилаКонвертации>НематериальныеАктивы                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ОбъектКоллекции.СчетУчетаНМА = "04.1" Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ВидОбъектаУчета", "НематериальныйАктив");
ИначеЕсли ОбъектКоллекции.СчетУчетаНМА = "04.2" Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ВидОбъектаУчета", "РасходыНаНИОКР");
Иначе
	Параметры.ПараметрыАлгоритмов.Установить("ВидОбъектаУчета", "");
КонецЕсли;
Значение = ОбъектКоллекции.НМА;

</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование> --&gt; ВидОбъектаУчета</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидОбъектаУчета" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыОбъектовУчетаНМА"/>
							<ПередВыгрузкой>Если ОбъектКоллекции.СчетУчетаНМА = "04.1" Тогда
	Значение = "НематериальныйАктив";	
ИначеЕсли ОбъектКоллекции.СчетУчетаНМА = "04.2" Тогда
	Значение = "РасходыНаНИОКР";
Иначе
	Значение = "НематериальныйАктив";	
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование> --&gt; СпособОтраженияРасходов</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособОтраженияРасходов" Вид="Реквизит" Тип="СправочникСсылка.СпособыОтраженияРасходовПоАмортизации"/>
							<КодПравилаКонвертации>СпособыОтраженияРасходовПоАмортизации             </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СпособОтраженияРасходовПоАмортизацииБУ;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование> --&gt; НачислятьАмортизациюБУ</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НачислятьАмортизациюБУ" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = ?(ОбъектКоллекции.НМА.ПорядокНачисленияАмортизации = 1, 0, 1);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование> --&gt; НачислятьАмортизациюНУ</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НачислятьАмортизациюНУ" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = ?(ОбъектКоллекции.НМА.ПорядокНачисленияАмортизации = 1, 0, 1);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование> --&gt; ОбъемПродукцииРаботДляВычисленияАмортизации</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОбъемПродукцииРаботДляВычисленияАмортизации" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НМА.ОбщийОбъемПродукцииРабот;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование> --&gt; СпециальныйКоэффициентНУ</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпециальныйКоэффициентНУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование> --&gt; СпособНачисленияАмортизацииБУ</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособНачисленияАмортизацииБУ" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыНачисленияАмортизацииНМА"/>
							<КодПравилаКонвертации>СпособыНачисленияАмортизацииНМА                   </КодПравилаКонвертации>
							<ПередВыгрузкой>ВыбСпособ = ОбъектКоллекции.НМА.СпособНачисленияАмортизации;
Если ПустоеЗначение(ВыбСпособ) = 1 Тогда
	ВыбСпособ = "";
	
Иначе
	ВыбСпособ = ВыбСпособ.Идентификатор();
КонецЕсли;

ВходящиеДанные.Установить("СпособНачисленияАмортизацииБУ", ВыбСпособ);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование> --&gt; СпособПоступления</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособПоступления" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыПоступленияАктивов"/>
							<КодПравилаКонвертации>СпособыПоступленияНМА                             </КодПравилаКонвертации>
							<ПередВыгрузкой>ВыбСпособ = ОбъектКоллекции.НМА.СпособПоступления;

Если ПустоеЗначение(ВыбСпособ) = 1 Тогда
	ВыбСпособ = Перечисление.СпособыПоступленияНМА.ПриобретениеЗаПлату;
КонецЕсли;

Значение = ВыбСпособ;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование> --&gt; СрокПолезногоИспользованияБУ</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СрокПолезногоИспользованияБУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НМА.СрокПолезногоИспользования;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>29</Код>
							<Наименование> --&gt; ПервоначальнаяСтоимостьБУ</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПервоначальнаяСтоимостьБУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НМА.ПервоначальнаяСтоимость;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>20</Код>
							<Наименование> --&gt; ТекущаяСтоимостьБУ</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ТекущаяСтоимостьБУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Если ВходящиеДанные.получить("Дата") = (Параметры.ДатаВводаОстатков - 1) Тогда
	Если ПустоеЗначение(ОбъектКоллекции.ТекущаяСтоимостьБУНач) = 1 Тогда
		Отказ = 1;
	Иначе
		Значение = ОбъектКоллекции.ТекущаяСтоимостьБУНач;
	КонецЕсли;
Иначе
	Если ПустоеЗначение(ОбъектКоллекции.ТекущаяСтоимостьБУКон) = 1 Тогда
		Если ПустоеЗначение(ОбъектКоллекции.ТекущаяСтоимостьБУНач) = 1 Тогда
			Отказ = 1;
		Иначе
			Значение = ОбъектКоллекции.ТекущаяСтоимостьБУНач;
		КонецЕсли;
	Иначе
		Значение = ОбъектКоллекции.ТекущаяСтоимостьБУКон;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование> --&gt; СчетНачисленияАмортизацииБУ</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетНачисленияАмортизацииБУ" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<ПередВыгрузкой>Значение = ?(ОбъектКоллекции.НМА.ПорядокНачисленияАмортизации = 2, "05", "04.01");</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование> --&gt; СчетУчетаБУ</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчетаБУ" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<ПередВыгрузкой>Если ОбъектКоллекции.СчетУчетаНМА = "04.1" Тогда
	Значение = "04.01";
ИначеЕсли ОбъектКоллекции.СчетУчетаНМА = "04.2" Тогда
	Значение = "04.02";
Иначе
	Значение = "04.01";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>28</Код>
							<Наименование> --&gt; ДатаПринятияКУчетуРегл</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаПринятияКУчетуРегл" Вид="Реквизит" Тип="Дата"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НМА.ДатаПриобретения;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>23</Код>
							<Наименование> --&gt; ДатаПриобретения</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаПриобретения" Вид="Реквизит" Тип="Дата"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НМА.ДатаПриобретения;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>24</Код>
							<Наименование> --&gt; ПервоначальнаяСтоимостьУСН</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПервоначальнаяСтоимостьУСН" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НМА.ПервоначальнаяСтоимостьН;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>25</Код>
							<Наименование> --&gt; НакопленнаяАмортизацияУСН</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НакопленнаяАмортизацияУСН" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НМА.НачисленнаяАмортизацияН;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>26</Код>
							<Наименование> --&gt; СрокПолезногоИспользованияУСН</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СрокПолезногоИспользованияУСН" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НМА.СрокПолезногоИспользованияН;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>27</Код>
							<Наименование> --&gt; ПорядокВключенияСтоимостиВСоставРасходовУСН</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПорядокВключенияСтоимостиВСоставРасходовУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.ПорядокВключенияСтоимостиОСиНМАВСоставРасходовУСН"/>
							<ПередВыгрузкой>НомерЗначения = ОбъектКоллекции.НМА.ПорядокВключенияВРасходы;
Если НомерЗначения = 3 Тогда
	Значение = "НеВключатьВСоставРасходов";
ИначеЕсли НомерЗначения = 2 Тогда
	Значение = "ВключитьВСоставРасходов";
Иначе
	Значение = "ВключитьВСоставАмортизируемогоИмущества";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>30</Код>
							<Наименование> --&gt; НакопленнаяАмортизацияБУ</Наименование>
							<Порядок>950</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НакопленнаяАмортизацияБУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Если ВходящиеДанные.получить("Дата") = (Параметры.ДатаВводаОстатков - 1) Тогда
	Если ПустоеЗначение(ОбъектКоллекции.НакопленнаяАмортизацияБУНач) = 1 Тогда
		Отказ = 1;
		
	Иначе
		Значение = ОбъектКоллекции.НакопленнаяАмортизацияБУНач;
	КонецЕсли;
Иначе
	Если ПустоеЗначение(ОбъектКоллекции.НакопленнаяАмортизацияБУКон) = 1 Тогда
		Если ПустоеЗначение(ОбъектКоллекции.НакопленнаяАмортизацияБУНач) = 1 Тогда
			Отказ = 1;
		Иначе
			Значение = ОбъектКоллекции.НакопленнаяАмортизацияБУНач;
		КонецЕсли;
	Иначе
		Значение = ОбъектКоллекции.НакопленнаяАмортизацияБУКон;
	КонецЕсли;
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Проведен</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "# Перенесено из 1С:Бухгалтерии 7.7 (УСН) # Остатки по НМА и расходам на НИОКР #";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>5</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>6</Код>
						<Наименование> --&gt; РазделУчета</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РазделУчета" Вид="Реквизит" Тип="ПеречислениеСсылка.РазделыУчетаДляВводаОстатков"/>
						<ПередВыгрузкой>Значение = "НематериальныеАктивыИНИОКР";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>7</Код>
						<Наименование> --&gt; ОтражатьВБухгалтерскомУчете</Наименование>
						<Порядок>350</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтражатьВБухгалтерскомУчете" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>8</Код>
						<Наименование> --&gt; ОтражатьВНалоговомУчете</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтражатьВНалоговомУчете" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>9</Код>
						<Наименование> --&gt; ОтражатьПоСпециальнымРегистрам</Наименование>
						<Порядок>450</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтражатьПоСпециальнымРегистрам" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>НачислениеЗарплатыРаботникамОрганизаций</Код>
				<Наименование> --&gt; ДокументСсылка.НачислениеЗарплатыРаботникамОрганизаций</Наименование>
				<Порядок>300</Порядок>
				<ПередВыгрузкой>Если ВходящиеДанные.Получить("Начисления").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
				<Приемник>ДокументСсылка.НачислениеЗарплатыРаботникамОрганизаций</Приемник>
				<Свойства>
					<Группа>
						<Код>3</Код>
						<Наименование> --&gt; Начисления</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Начисления" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; Физлицо</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.СотрудникиОрганизаций"/>
							<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ФизЛицо;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование> --&gt; Результат</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Результат" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование> --&gt; ПодразделениеОрганизации</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПодразделениеОрганизации" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ПодразделенияОрганизаций                          </КодПравилаКонвертации>
						</Свойство>
					</Группа>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Если Параметры.ДатаКонцаПериодаВыгрузки &gt; Параметры.ДатаВводаОстатков Тогда
	Значение = Параметры.ДатаКонцаПериодаВыгрузки;
	
Иначе
	Значение = Параметры.ДатаВводаОстатков - 1;
КонецЕсли;;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование> --&gt; Проведен</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; ПериодРегистрации</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
						<ПередВыгрузкой>Если Параметры.ДатаКонцаПериодаВыгрузки &gt; Параметры.ДатаВводаОстатков Тогда
	Значение = Параметры.ДатаКонцаПериодаВыгрузки;
	
Иначе
	Значение = Параметры.ДатаВводаОстатков - 1;
КонецЕсли;

Значение = НачМесяца(Значение);</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>7</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>700</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "# Перенесено из 1С:Бухгалтерии 7.7 (УСН) #";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>НДФЛиЕСНДоходыИНалоги</Код>
				<Наименование> --&gt; ДокументСсылка.НДФЛиЕСНДоходыИНалоги</Наименование>
				<Порядок>350</Порядок>
				<ПередВыгрузкой>Если (ВходящиеДанные.Получить("НДФЛСведенияОДоходах").КоличествоСтрок() = 0) и
	(ВходящиеДанные.Получить("НДФЛИсчисленный13").КоличествоСтрок() = 0) и
	(ВходящиеДанные.Получить("НДФЛУдержанный").КоличествоСтрок() = 0) Тогда
	Отказ = 1;
КонецЕсли;

Если ДатаГод(Параметры.ДатаВводаОстатков) &lt; 2010 Тогда
	Если (ВходящиеДанные.Получить("ЕСНСведенияОДоходах").КоличествоСтрок() = 0) и
		(ВходящиеДанные.Получить("ЕСННалоги").КоличествоСтрок() = 0) Тогда
		Отказ = 1;
	КонецЕсли;
Иначе
	Если (ВходящиеДанные.Получить("СтраховыеВзносыСведенияОДоходах").КоличествоСтрок() = 0) и
		(ВходящиеДанные.Получить("СтраховыеВзносы").КоличествоСтрок() = 0) Тогда
		Отказ = 1;
	КонецЕсли;
КонецЕсли;
</ПередВыгрузкой>
				<Приемник>ДокументСсылка.НДФЛиЕСНДоходыИНалоги</Приемник>
				<Свойства>
					<Группа>
						<Код>30</Код>
						<Наименование> --&gt; НДФЛСведенияОДоходах</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НДФЛСведенияОДоходах" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>39</Код>
							<Наименование> --&gt; ФизЛицо</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>31</Код>
							<Наименование> --&gt; ДатаДохода</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаДохода" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>34</Код>
							<Наименование> --&gt; МесяцНалоговогоПериода</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="МесяцНалоговогоПериода" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>35</Код>
							<Наименование> --&gt; ПериодРегистрации</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>33</Код>
							<Наименование> --&gt; КодДохода</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КодДохода" Вид="Реквизит" Тип="СправочникСсылка.ДоходыНДФЛ"/>
						</Свойство>
						<Свойство>
							<Код>37</Код>
							<Наименование> --&gt; СуммаДохода</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаДохода" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>32</Код>
							<Наименование> --&gt; КодВычета</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КодВычета" Вид="Реквизит" Тип="СправочникСсылка.ВычетыНДФЛ"/>
						</Свойство>
						<Свойство>
							<Код>36</Код>
							<Наименование> --&gt; СуммаВычета</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаВычета" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>38</Код>
							<Наименование> --&gt; СуммаНалогаИсчисленная</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаНалогаИсчисленная" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>23</Код>
						<Наименование> --&gt; НДФЛИсчисленный13</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НДФЛИсчисленный13" Вид="ТабличнаяЧасть"/>
						<ПередВыгрузкой>Если (ПустоеЗначение(ОбъектКоллекции.Налог) = 1) Тогда
		Отказ = 1;
КонецЕсли;
	</ПередВыгрузкой>
						<Свойство>
							<Код>29</Код>
							<Наименование> --&gt; ФизЛицо</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>26</Код>
							<Наименование> --&gt; ПериодРегистрации</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>24</Код>
							<Наименование> --&gt; МесяцНалоговогоПериода</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="МесяцНалоговогоПериода" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>25</Код>
							<Наименование> --&gt; Налог</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Налог" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>48</Код>
						<Наименование> --&gt; НДФЛПредоставленныеВычеты</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НДФЛПредоставленныеВычеты" Вид="ТабличнаяЧасть"/>
						<ПередВыгрузкой>Если (ПустоеЗначение(ОбъектКоллекции.КодВычета) = 1) Тогда
		Отказ = 1;
КонецЕсли;
	</ПередВыгрузкой>
						<Свойство>
							<Код>49</Код>
							<Наименование> --&gt; ФизЛицо</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>50</Код>
							<Наименование> --&gt; ПериодРегистрации</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>51</Код>
							<Наименование> --&gt; МесяцНалоговогоПериода</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="МесяцНалоговогоПериода" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>52</Код>
							<Наименование> --&gt; КодВычета</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КодВычета" Вид="Реквизит" Тип="СправочникСсылка.ВычетыНДФЛ"/>
							<ПередВыгрузкой>Если (ОбъектКоллекции.КодВычета.КодДляОтчетности2009 &lt;&gt; "103")
	И (ОбъектКоллекции.КодВычета.КодДляОтчетности2009 &lt;&gt; "104")
	И (ОбъектКоллекции.КодВычета.КодДляОтчетности2009 &lt;&gt; "105") Тогда
	
	ИмяПКО = "ВычетыНаРебенка";
Иначе
	ИмяПКО = "ВычетыНДФЛЛичный";
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>53</Код>
							<Наименование> --&gt; ПримененныйВычет</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПримененныйВычет" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>16</Код>
						<Наименование> --&gt; ЕСНСведенияОДоходах</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЕСНСведенияОДоходах" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>21</Код>
							<Наименование> --&gt; ФизЛицо</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование> --&gt; МесяцНалоговогоПериода</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="МесяцНалоговогоПериода" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование> --&gt; КодДоходаЕСН</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КодДоходаЕСН" Вид="Реквизит" Тип="СправочникСсылка.ДоходыЕСН"/>
						</Свойство>
						<Свойство>
							<Код>20</Код>
							<Наименование> --&gt; СуммаДохода</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаДохода" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование> --&gt; ОблагаетсяЕНВД</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОблагаетсяЕНВД" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>2</Код>
						<Наименование> --&gt; ЕСННалоги</Наименование>
						<Порядок>250</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЕСННалоги" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>13</Код>
							<Наименование> --&gt; ФизЛицо</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование> --&gt; МесяцНалоговогоПериода</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="МесяцНалоговогоПериода" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование> --&gt; ФедеральныйБюджет</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФедеральныйБюджет" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование> --&gt; ФСС</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФСС" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование> --&gt; ФФОМС</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФФОМС" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование> --&gt; ТФОМС</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ТФОМС" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; ПФРНакопительная</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПФРНакопительная" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование> --&gt; ПФРСтраховая</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПФРСтраховая" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование> --&gt; ПримененнаяЛьготаФБ</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПримененнаяЛьготаФБ" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; ПримененнаяЛьготаФСС</Наименование>
							<Порядок>1000</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПримененнаяЛьготаФСС" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование> --&gt; ПримененнаяЛьготаФОМС</Наименование>
							<Порядок>1100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПримененнаяЛьготаФОМС" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование> --&gt; ПФРНакопительнаяЕНВД</Наименование>
							<Порядок>1200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПФРНакопительнаяЕНВД" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование> --&gt; ПФРСтраховаяЕНВД</Наименование>
							<Порядок>1300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПФРСтраховаяЕНВД" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>40</Код>
						<Наименование> --&gt; НДФЛУдержанный</Наименование>
						<Порядок>300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НДФЛУдержанный" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>45</Код>
							<Наименование> --&gt; ФизЛицо</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>43</Код>
							<Наименование> --&gt; ПериодРегистрации</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>41</Код>
							<Наименование> --&gt; МесяцНалоговогоПериода</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="МесяцНалоговогоПериода" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>44</Код>
							<Наименование> --&gt; СтавкаНалогообложения</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтавкаНалогообложения" Вид="Реквизит" Тип="ПеречислениеСсылка.НДФЛСтавкиНалогообложенияРезидента"/>
						</Свойство>
						<Свойство>
							<Код>42</Код>
							<Наименование> --&gt; Налог</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Налог" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Параметры.ДатаКонцаПериодаВыгрузки;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>47</Код>
						<Наименование> --&gt; Проведен</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>46</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>22</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "# Перенесено из 1С:Бухгалтерии 7.7 (УСН) #";</ПередВыгрузкой>
					</Свойство>
					<Группа>
						<Код>54</Код>
						<Наименование> --&gt; СтраховыеВзносы</Наименование>
						<Порядок>550</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СтраховыеВзносы" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>56</Код>
							<Наименование> --&gt; ФизЛицо</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>57</Код>
							<Наименование> --&gt; МесяцРасчетногоПериода</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="МесяцРасчетногоПериода" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>58</Код>
							<Наименование> --&gt; ПФРНакопительная</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПФРНакопительная" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>62</Код>
							<Наименование> --&gt; ФФОМС</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФФОМС" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>65</Код>
							<Наименование> --&gt; ФССНесчастныеСлучаи</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФССНесчастныеСлучаи" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>64</Код>
							<Наименование> --&gt; ФСС</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФСС" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>63</Код>
							<Наименование> --&gt; ТФОМС</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ТФОМС" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>61</Код>
							<Наименование> --&gt; ПФРСтраховаяЕНВД</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПФРСтраховаяЕНВД" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>60</Код>
							<Наименование> --&gt; ПФРСтраховая</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПФРСтраховая" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>59</Код>
							<Наименование> --&gt; ПФРНакопительнаяЕНВД</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПФРНакопительнаяЕНВД" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>55</Код>
						<Наименование> --&gt; СтраховыеВзносыСведенияОДоходах</Наименование>
						<Порядок>600</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СтраховыеВзносыСведенияОДоходах" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>66</Код>
							<Наименование> --&gt; ФизЛицо</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>67</Код>
							<Наименование> --&gt; МесяцРасчетногоПериода</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="МесяцРасчетногоПериода" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>68</Код>
							<Наименование> --&gt; ВидДохода</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДохода" Вид="Реквизит" Тип="СправочникСсылка.ДоходыПоСтраховымВзносам"/>
						</Свойство>
						<Свойство>
							<Код>69</Код>
							<Наименование> --&gt; Результат</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Результат" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>70</Код>
							<Наименование> --&gt; ОблагаетсяЕНВД</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОблагаетсяЕНВД" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>71</Код>
							<Наименование> --&gt; Скидка</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Скидка" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Свойство>
						<Код>72</Код>
						<Наименование> --&gt; НалоговыйПериод</Наименование>
						<Порядок>650</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НалоговыйПериод" Вид="Реквизит" Тип="Число"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>РегистрацияОплатыОсновныхСредствДляУСН</Код>
				<Наименование> --&gt; ДокументСсылка.РегистрацияОплатыОсновныхСредствДляУСН</Наименование>
				<Порядок>400</Порядок>
				<ПередВыгрузкой>Если (ВходящиеДанные.Получить("ОС").КоличествоСтрок() = 0) и (ВходящиеДанные.Получить("НМА").КоличествоСтрок() = 0) Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
				<Приемник>ДокументСсылка.РегистрацияОплатыОсновныхСредствДляУСН</Приемник>
				<Свойства>
					<Группа>
						<Код>9</Код>
						<Наименование> --&gt; Оплата</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Оплата" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("ОсновноеСредство");
КоллекцияОбъектов.НоваяКолонка("ДатаОплаты");
КоллекцияОбъектов.НоваяКолонка("СуммаОплаты");
Оплата = СоздатьОбъект("Периодический");
ОС = ВходящиеДанные.Получить("ОС");
ОС.ВыбратьСтроки();
Пока ОС.ПолучитьСтроку() = 1 Цикл
	Если (ОС.ОсновноеСредство.ЭтоГруппа() = 1) или (ОС.ОсновноеСредство.ПометкаУдаления() = 1) Тогда
		Продолжить;
	ИначеЕсли ОС.ОсновноеСредство.ПорядокВключенияВРасходы &lt;&gt; 1 Тогда
		Продолжить;
	КонецЕсли;
	Оплата.ИспользоватьОбъект("Оплата", ОС.ОсновноеСредство);
	Оплата.ВыбратьЗначения(, Параметры.ДатаВводаОстатков);
	Пока Оплата.ПолучитьЗначение() = 1 Цикл
		Если Оплата.Значение &lt;&gt; 0 Тогда
			КоллекцияОбъектов.НоваяСтрока();
			КоллекцияОбъектов.ОсновноеСредство = ОС.ОсновноеСредство;
			КоллекцияОбъектов.СуммаОплаты = Оплата.Значение;
			КоллекцияОбъектов.ДатаОплаты = Оплата.ДатаЗнач;
		КонецЕсли;
	КонецЦикла;
КонецЦикла;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>10</Код>
							<Наименование> --&gt; ОсновноеСредство</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОсновноеСредство" Вид="Реквизит" Тип="СправочникСсылка.ОсновныеСредства"/>
							<КодПравилаКонвертации>ОсновныеСредства                                  </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование> --&gt; ДатаОплаты</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаОплаты" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование> --&gt; СуммаОплаты</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаОплаты" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>5</Код>
						<Наименование> --&gt; ОплатаНМА</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОплатаНМА" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("НематериальныйАктив");
КоллекцияОбъектов.НоваяКолонка("ДатаОплаты");
КоллекцияОбъектов.НоваяКолонка("СуммаОплаты");
КоллекцияОбъектов.НоваяКолонка("СчетУчетаНМА");
Оплата = СоздатьОбъект("Периодический");
НМА = ВходящиеДанные.Получить("НМА");
НМА.ВыбратьСтроки();
Пока НМА.ПолучитьСтроку() = 1 Цикл
	Если (НМА.НМА.ЭтоГруппа() = 1) или (НМА.НМА.ПометкаУдаления() = 1) Тогда
		Продолжить;
	ИначеЕсли НМА.НМА.ПорядокВключенияВРасходы &lt;&gt; 1 Тогда
		Продолжить;
	КонецЕсли;
	Оплата.ИспользоватьОбъект("Оплата", НМА.НМА);
	Оплата.ВыбратьЗначения(, Параметры.ДатаКонцаПериодаВыгрузки);
	Пока Оплата.ПолучитьЗначение() = 1 Цикл
		Если Оплата.Значение &lt;&gt; 0 Тогда
			КоллекцияОбъектов.НоваяСтрока();
			КоллекцияОбъектов.НематериальныйАктив = НМА.НМА;
			КоллекцияОбъектов.СуммаОплаты = Оплата.Значение;
			КоллекцияОбъектов.ДатаОплаты = Оплата.ДатаЗнач;
			КоллекцияОбъектов.СчетУчетаНМА = НМА.СчетУчетаНМА;
		КонецЕсли;
	КонецЦикла;
КонецЦикла;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; НематериальныйАктив</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НематериальныйАктив" Вид="Реквизит" Тип="СправочникСсылка.НематериальныеАктивы"/>
							<КодПравилаКонвертации>НематериальныеАктивы                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ОбъектКоллекции.СчетУчетаНМА = "04.1" Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ВидОбъектаУчета", "НематериальныйАктив");
ИначеЕсли ОбъектКоллекции.СчетУчетаНМА = "04.2" Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ВидОбъектаУчета", "РасходыНаНИОКР");
Иначе
	Параметры.ПараметрыАлгоритмов.Установить("ВидОбъектаУчета", "");
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; ДатаОплаты</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаОплаты" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование> --&gt; СуммаОплаты</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаОплаты" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Параметры.ДатаКонцаПериодаВыгрузки;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СписаниеОС</Код>
				<Наименование>: </Наименование>
				<Порядок>450</Порядок>
				<ПередВыгрузкой>Если (ВходящиеДанные.Получить("ОС").КоличествоСтрок() = 0) Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
				<ПослеЗагрузки>ПровестиЗаписьНеЗаписанныхОбъектов();

СобытияОСОрганизаций = Объект.Движения.СобытияОСОрганизаций;

Для Каждого СтрокаТаблицы ИЗ СобытияОСОрганизаций Цикл		
	СтрокаТаблицы.НазваниеДокумента = Строка(Объект.Метаданные());
	СтрокаТаблицы.НомерДокумента = Объект.Номер;
КонецЦикла;

ПровестиЗаписьНеЗаписанныхОбъектов();</ПослеЗагрузки>
				<Приемник>ДокументСсылка.СписаниеОС</Приемник>
				<Свойства>
					<Группа>
						<Код>1</Код>
						<Наименование> --&gt; ОС</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОС" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; ОсновноеСредство</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОсновноеСредство" Вид="Реквизит" Тип="СправочникСсылка.ОсновныеСредства"/>
							<КодПравилаКонвертации>ОсновныеСредства                                  </КодПравилаКонвертации>
						</Свойство>
					</Группа>
					<Группа>
						<Код>9</Код>
						<Наименование> --&gt; НачислениеАмортизацииОСБухгалтерскийУчет</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НачислениеАмортизацииОСБухгалтерскийУчет" Вид="НаборДвиженийРегистраСведений"/>
						<Свойство>
							<Код>10</Код>
							<Наименование> --&gt; НачислятьАмортизацию</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НачислятьАмортизацию" Вид="Ресурс" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование> --&gt; ОсновноеСредство</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОсновноеСредство" Вид="Измерение" Тип="СправочникСсылка.ОсновныеСредства"/>
							<КодПравилаКонвертации>ОсновныеСредства                                  </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование> --&gt; Период</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>15</Код>
						<Наименование> --&gt; СостоянияОСОрганизаций</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СостоянияОСОрганизаций" Вид="НаборДвиженийРегистраСведений"/>
						<Свойство>
							<Код>16</Код>
							<Наименование> --&gt; ДатаСостояния</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаСостояния" Вид="Ресурс" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование> --&gt; ОсновноеСредство</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОсновноеСредство" Вид="Измерение" Тип="СправочникСсылка.ОсновныеСредства"/>
							<КодПравилаКонвертации>ОсновныеСредства                                  </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение =  "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование> --&gt; Состояние</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Состояние" Вид="Ресурс" Тип="ПеречислениеСсылка.СостоянияОС"/>
							<ПередВыгрузкой>Значение = "СнятоСУчета";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>25</Код>
							<Наименование> --&gt; Период</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>20</Код>
						<Наименование> --&gt; СобытияОСОрганизаций</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СобытияОСОрганизаций" Вид="НаборДвиженийРегистраСведений"/>
						<Свойство>
							<Код>21</Код>
							<Наименование> --&gt; ОсновноеСредство</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОсновноеСредство" Вид="Измерение" Тип="СправочникСсылка.ОсновныеСредства"/>
							<КодПравилаКонвертации>ОсновныеСредства                                  </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>23</Код>
							<Наименование> --&gt; Событие</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Событие" Вид="Ресурс" Тип="СправочникСсылка.СобытияОС"/>
							<КодПравилаКонвертации>ОСВыбытие                                         </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "ВыбытиеОС";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>24</Код>
							<Наименование> --&gt; Период</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
					</Группа>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>250</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "# Перенесено из 1С:Бухгалтерии 7.7 (УСН) #";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; Проведен</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>7</Код>
						<Наименование> --&gt; СобытиеОС</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СобытиеОС" Вид="Реквизит" Тип="СправочникСсылка.СобытияОС"/>
						<КодПравилаКонвертации>ОСВыбытие                                         </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "ВыбытиеОС";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; СчетСписания</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СчетСписания" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
						<ПередВыгрузкой>Значение = "ПрочиеРасходы";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>14</Код>
						<Наименование> --&gt; РучнаяКорректировка</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РучнаяКорректировка" Вид="Реквизит" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>РасчетыПоСтраховымВзносам</Код>
				<Наименование>: </Наименование>
				<Порядок>500</Порядок>
				<Приемник>ДокументСсылка.РасчетыПоСтраховымВзносам</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование> --&gt; ДатаПлатежа</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаПлатежа" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>5</Код>
						<Наименование> --&gt; МесяцРасчетногоПериода</Наименование>
						<Порядок>250</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="МесяцРасчетногоПериода" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>6</Код>
						<Наименование> --&gt; ВидОперации</Наименование>
						<Порядок>300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидОперации" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыОперацийРасчетыПоСтраховымВзносам"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>7</Код>
						<Наименование> --&gt; ВидПлатежа</Наименование>
						<Порядок>350</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидПлатежа" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыПлатежейВГосБюджет"/>
						<КодПравилаКонвертации>ВидыПлатежейВБюджет                               </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; ПФРНакопительная</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПФРНакопительная" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование> --&gt; ПФРСтраховая</Наименование>
						<Порядок>450</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПФРСтраховая" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование> --&gt; ФФОМС</Наименование>
						<Порядок>500</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФФОМС" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование> --&gt; ТФОМС</Наименование>
						<Порядок>550</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ТФОМС" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование> --&gt; ФСС</Наименование>
						<Порядок>600</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФСС" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>13</Код>
						<Наименование> --&gt; ФССНесчастныеСлучаи</Наименование>
						<Порядок>650</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФССНесчастныеСлучаи" Вид="Реквизит" Тип="Число"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
		<Группа>
			<Код>Проверки</Код>
			<Наименование>Проверки                                          </Наименование>
			<Порядок>850</Порядок>
			<Правило>
				<Код>КонвертацииИзИнформационныхБаз1СПредприятия77</Код>
				<Наименование> --&gt; СправочникСсылка.КонвертацииИзИнформационныхБаз1СПредприятия77</Наименование>
				<Порядок>50</Порядок>
				<Приемник>СправочникСсылка.КонвертацииИзИнформационныхБазПредыдущихВерсий</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<НеЗамещать>true</НеЗамещать>
						<Код>1</Код>
						<Наименование> --&gt; ИдентификаторКонфигурации</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ИдентификаторКонфигурации" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; КонтрольныеЗначения</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КонтрольныеЗначения" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Проверки();</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
	</ПравилаКонвертацииОбъектов>
	<ПравилаВыгрузкиДанных>
		<Группа Отключить="false">
			<Код>_001_Справочники</Код>
			<Наименование>Справочники</Наименование>
			<Порядок>50</Порядок>
			<Правило Отключить="false">
				<Код>Банки</Код>
				<Наименование>Банки</Наименование>
				<Порядок>100</Порядок>
				<КодПравилаКонвертации>Банки                                             </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.Банки</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>БанковскиеСчета</Код>
				<Наименование>Банковские счета</Наименование>
				<Порядок>200</Порядок>
				<КодПравилаКонвертации>БанковскиеСчета                                   </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.БанковскиеСчета</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>ВидыНоменклатуры</Код>
				<Наименование>Виды номенклатуры</Наименование>
				<Порядок>300</Порядок>
				<КодПравилаКонвертации>НоменклатурныеГруппы                              </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.ВидыДеятельности</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>ДокументыУдостоверяющиеЛичность</Код>
				<Наименование>Документы удостоверяющие личность</Наименование>
				<Порядок>400</Порядок>
				<КодПравилаКонвертации>ДокументыУдостоверяющиеЛичность                   </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.ДокументыУдостоверяющиеЛичность</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>ДоходыБудущихПериодов</Код>
				<Наименование>Доходы будущих периодов</Наименование>
				<Порядок>500</Порядок>
				<КодПравилаКонвертации>ДоходыБудущихПериодов                             </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.ДоходыБудущихПериодов</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>ЕдиницыИзмерений</Код>
				<Наименование>Единицы измерений</Наименование>
				<Порядок>600</Порядок>
				<КодПравилаКонвертации>КлассификаторЕдиницИзмерения                      </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.ЕдиницыИзмерений</ОбъектВыборки>
			</Правило>
			<Правило Отключить="true">
				<Код>КлассификаторЕН</Код>
				<Наименование>ЕНАОФ</Наименование>
				<Порядок>700</Порядок>
				<КодПравилаКонвертации>ЕдиныеНормыАмортизационныхОтчисленийОсновныхФондов</КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.КлассификаторЕН</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>Контрагенты</Код>
				<Наименование>Контрагенты</Наименование>
				<Порядок>800</Порядок>
				<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.Контрагенты</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>МестаХранения</Код>
				<Наименование>Места хранения</Наименование>
				<Порядок>900</Порядок>
				<КодПравилаКонвертации>Склады                                            </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.МестаХранения</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>НематериальныеАктивы</Код>
				<Наименование>Нематериальные активы</Наименование>
				<Порядок>1000</Порядок>
				<КодПравилаКонвертации>НематериальныеАктивы                              </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.НематериальныеАктивы</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>Номенклатура</Код>
				<Наименование>Номенклатура</Наименование>
				<Порядок>1100</Порядок>
				<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.Номенклатура</ОбъектВыборки>
				<ПередОбработкойПравила>Выборка = СоздатьОбъект("Справочник.Номенклатура");
Выборка.ВыбратьЭлементы();
Пока Выборка.ПолучитьЭлемент() &gt; 0 Цикл
	Если Выборка.ЭтоГруппа() = 1 Тогда
		Продолжить;
	КонецЕсли;
	ВыгрузитьПоПравилу(Выборка.ТекущийЭлемент(),,,, "Номенклатура");
КонецЦикла;
</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>Оборудование</Код>
				<Наименование>Внеоборотные активы</Наименование>
				<Порядок>1200</Порядок>
				<КодПравилаКонвертации>ОбъектыСтроительства_08_4                         </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.ОбъектыВнеоборотныхАктивов</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>ОсновныеСредства</Код>
				<Наименование>Основные средства</Наименование>
				<Порядок>1300</Порядок>
				<КодПравилаКонвертации>ОсновныеСредства                                  </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.ОсновныеСредства</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>ПрочиеДоходыИРасходы</Код>
				<Наименование>Прочие доходы и расходы</Наименование>
				<Порядок>1400</Порядок>
				<КодПравилаКонвертации>ПрочиеДоходыИРасходы                              </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.ПрочиеДоходыИРасходы</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>РасходыБудущихПериодов</Код>
				<Наименование>Расходы будущих периодов</Наименование>
				<Порядок>1500</Порядок>
				<КодПравилаКонвертации>РасходыБудущихПериодов                            </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.РасходыБудущихПериодов</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>РасчетныеСчета</Код>
				<Наименование>Расчетные счета</Наименование>
				<Порядок>1600</Порядок>
				<КодПравилаКонвертации>РасчетныеСчета                                    </КодПравилаКонвертации>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.РасчетныеСчета</ОбъектВыборки>
				<ПередОбработкойПравила>ОбъектВыборки = СтрЗаменить(Правило.ОбъектВыборки, "Ссылка", "");
Выборка = СоздатьОбъект(ОбъектВыборки);
ВыборкаВладельцев = СоздатьОбъект("Справочник." + Метаданные.Справочник(Выборка.Вид()).Владелец.Идентификатор);

ВыборкаВладельцев.ВыбратьЭлементы();
Пока ВыборкаВладельцев.ПолучитьЭлемент() &gt; 0 Цикл
	Выборка.ИспользоватьВладельца(ВыборкаВладельцев.ТекущийЭлемент());
	Выборка.ВыбратьЭлементы();
	Пока Выборка.ПолучитьЭлемент() &gt; 0 Цикл
		НомерПКО = НайтиПравило(, Правило.КодПравилаКонвертации);
		ВыгрузитьПоПравилу(Выборка.ТекущийЭлемент(),,,,,,, НомерПКО);
	КонецЦикла;
КонецЦикла;

//Отказ = 1;</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>Резервы</Код>
				<Наименование>Резервы</Наименование>
				<Порядок>1700</Порядок>
				<КодПравилаКонвертации>Резервы                                           </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.Резервы</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>Сотрудники</Код>
				<Наименование>Сотрудники</Наименование>
				<Порядок>1800</Порядок>
				<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.Сотрудники</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>СтатьиЗатратНаПроизводство</Код>
				<Наименование>Статьи затрат</Наименование>
				<Порядок>1900</Порядок>
				<КодПравилаКонвертации>СтатьиЗатратНаПроизводство                        </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.СтатьиЗатрат</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>ТипыЦен</Код>
				<Наименование>Типы цен</Наименование>
				<Порядок>2000</Порядок>
				<КодПравилаКонвертации>ТипыЦенНоменклатуры                               </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.ТипыЦен</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>ЦеныНоменклатуры</Код>
				<Наименование>Цены номенклатуры </Наименование>
				<Порядок>2100</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>ТипыЦен = СоздатьОбъект("ТаблицаЗначений");
ТипыЦен.НоваяКолонка("ТипЦен");
ТипыЦен.НоваяКолонка("ЦенаВключаетНДС");
ТипыЦен.НоваяКолонка("Товары");
ТипыЦен.НоваяКолонка("Валюта");

Выборка = СоздатьОбъект("Справочник.Цены");
ВыборкаВладельцев = СоздатьОбъект("Справочник.Номенклатура");

ВыборкаВладельцев.ВыбратьЭлементы();
Пока ВыборкаВладельцев.ПолучитьЭлемент() &gt; 0 Цикл
	
	// Покупная стоимость
	Если (ВыборкаВладельцев.ПлановаяСебестоимость &lt;&gt; 0) Тогда
		Если (ВыборкаВладельцев.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар) ИЛИ
			(ВыборкаВладельцев.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Материал) ИЛИ
			(ВыборкаВладельцев.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.ТоварНаКомиссии) Тогда
			
			НомСтроки = 0;
			ТипЦен = "Учетная (покупная) цена";
			Если ТипыЦен.НайтиЗначение(ТипЦен, НомСтроки, "ТипЦен") = 0 Тогда
				ТипыЦен.НоваяСтрока();
				ТипыЦен.ТипЦен = ТипЦен;
				ТипыЦен.ЦенаВключаетНДС = 1;
				ТипыЦен.Валюта = Параметры.Рубли;
				ТипыЦен.Товары = СоздатьОбъект("ТаблицаЗначений");
								
				Товары = ТипыЦен.Товары;
				Товары.НоваяКолонка("Номенклатура");
				Товары.НоваяКолонка("Цена");
				Товары.НоваяКолонка("Валюта");
				
			Иначе
				ТипыЦен.ПолучитьСтрокуПоНомеру(НомСтроки);
				Товары = ТипыЦен.Товары;
			КонецЕсли;
			
			Товары.НоваяСтрока();
			Товары.Номенклатура = ВыборкаВладельцев.ТекущийЭлемент();
			Товары.Цена = ВыборкаВладельцев.ПлановаяСебестоимость;
			Товары.Валюта = Параметры.Рубли;
			
		Иначе
			НомСтроки = 0;
			ТипЦен = "Плановая себестоимость";
			Если ТипыЦен.НайтиЗначение(ТипЦен, НомСтроки, "ТипЦен") = 0 Тогда
				ТипыЦен.НоваяСтрока();
				ТипыЦен.ТипЦен = ТипЦен;
				ТипыЦен.ЦенаВключаетНДС = 1;
				ТипыЦен.Валюта = Параметры.Рубли;
				ТипыЦен.Товары = СоздатьОбъект("ТаблицаЗначений");
				
				Товары = ТипыЦен.Товары;
				Товары.НоваяКолонка("Номенклатура");
				Товары.НоваяКолонка("Цена");
				Товары.НоваяКолонка("Валюта");
				
			Иначе
				ТипыЦен.ПолучитьСтрокуПоНомеру(НомСтроки);
				Товары = ТипыЦен.Товары;
			КонецЕсли;
			
			Товары.НоваяСтрока();
			Товары.Номенклатура = ВыборкаВладельцев.ТекущийЭлемент();
			Товары.Цена = ВыборкаВладельцев.ПлановаяСебестоимость;
			Товары.Валюта = Параметры.Рубли;
		КонецЕсли;
	КонецЕсли;
	
	// Цены
	Если ВыборкаВладельцев.Цена &lt;&gt; 0 Тогда
		НомСтроки = 0;
		ТипЦен = "Отпускная цена";
		Если ТипыЦен.НайтиЗначение(ТипЦен, НомСтроки, "ТипЦен") = 0 Тогда
			ТипыЦен.НоваяСтрока();
			ТипыЦен.ТипЦен = ТипЦен;
			ТипыЦен.ЦенаВключаетНДС = 1;
			ТипыЦен.Валюта = ?(ПустоеЗначение(ВыборкаВладельцев.Валюта) = 1, Параметры.Рубли, ВыборкаВладельцев.Валюта);
			ТипыЦен.Товары = СоздатьОбъект("ТаблицаЗначений");
			
			Товары = ТипыЦен.Товары;
			Товары.НоваяКолонка("Номенклатура");
			Товары.НоваяКолонка("Цена");
			Товары.НоваяКолонка("Валюта");
			
		Иначе
			ТипыЦен.ПолучитьСтрокуПоНомеру(НомСтроки);
			Товары = ТипыЦен.Товары;
		КонецЕсли;
		
		Товары.НоваяСтрока();
		Товары.Номенклатура = ВыборкаВладельцев.ТекущийЭлемент();
		Товары.Цена = ВыборкаВладельцев.Цена;
		Товары.Валюта = ?(ПустоеЗначение(ВыборкаВладельцев.Валюта) = 1, Параметры.Рубли, ВыборкаВладельцев.Валюта);
	КонецЕсли;
		
	// Справочник "Цены"
	Выборка.ИспользоватьВладельца(ВыборкаВладельцев.ТекущийЭлемент());
	Выборка.ВыбратьЭлементы();
	Пока Выборка.ПолучитьЭлемент() &gt; 0 Цикл
		Если Выборка.Цена.Получить(Параметры.ДатаКонцаПериодаВыгрузки) &lt;&gt; 0 Тогда
			НомСтроки = 0;
			ТипЦен = СокрЛП(Выборка.ТипЦен.Наименование);
			Если ТипыЦен.НайтиЗначение(ТипЦен, НомСтроки, "ТипЦен") = 0 Тогда
				ТипыЦен.НоваяСтрока();
				ТипыЦен.ТипЦен = ТипЦен;
				ТипыЦен.ЦенаВключаетНДС = 1;
				ТипыЦен.Валюта = ?(ПустоеЗначение(Выборка.Валюта) = 1, Параметры.Рубли, Выборка.Валюта);
				ТипыЦен.Товары = СоздатьОбъект("ТаблицаЗначений");
				
				Товары = ТипыЦен.Товары;
				Товары.НоваяКолонка("Номенклатура");
				Товары.НоваяКолонка("Цена");
				Товары.НоваяКолонка("Валюта");
				
			Иначе
				ТипыЦен.ПолучитьСтрокуПоНомеру(НомСтроки);
				Товары = ТипыЦен.Товары;
			КонецЕсли;
			
			Товары.НоваяСтрока();
			Товары.Номенклатура = ВыборкаВладельцев.ТекущийЭлемент();
			Товары.Цена = Выборка.Цена.Получить(Параметры.ДатаКонцаПериодаВыгрузки);
			Товары.Валюта = ?(ПустоеЗначение(Выборка.Валюта) = 1, Параметры.Рубли, Выборка.Валюта);
		КонецЕсли;
	КонецЦикла;
КонецЦикла;

ВходящиеДанные = СоздатьОбъект("СписокЗначений");

ТипыЦен.ВыбратьСтроки();
Пока ТипыЦен.ПолучитьСтроку() = 1 Цикл
	Если ТипыЦен.Товары.КоличествоСтрок() &gt; 0 Тогда
		ВходящиеДанные.УдалитьВсе();
		ВходящиеДанные.Установить("ТипЦен", ТипыЦен.ТипЦен);
		ВходящиеДанные.Установить("Наименование", ТипыЦен.ТипЦен);
		ВходящиеДанные.Установить("ЦенаВключаетНДС", ТипыЦен.ЦенаВключаетНДС);
		ВходящиеДанные.Установить("Валюта", ТипыЦен.Валюта);
		ВходящиеДанные.Установить("Товары", ТипыЦен.Товары);
		ВыгрузитьПоПравилу(,, ВходящиеДанные,, "УстановкаЦенНоменклатуры");
	КонецЕсли;
КонецЦикла;

Отказ = 1;</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>ЦенныеБумаги</Код>
				<Наименование>Ценные бумаги</Наименование>
				<Порядок>2200</Порядок>
				<КодПравилаКонвертации>ЦенныеБумаги                                      </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.ЦенныеБумаги</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>Договоры</Код>
				<Наименование>Договоры</Наименование>
				<Порядок>2300</Порядок>
				<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.Договоры</ОбъектВыборки>
				<ПередОбработкойПравила>ОбъектВыборки = СтрЗаменить(Правило.ОбъектВыборки, "Ссылка", "");
Выборка = СоздатьОбъект(ОбъектВыборки);
ВыборкаВладельцев = СоздатьОбъект("Справочник." + Метаданные.Справочник(Выборка.Вид()).Владелец.Идентификатор);

ВыборкаВладельцев.ВыбратьЭлементы();
Пока ВыборкаВладельцев.ПолучитьЭлемент() &gt; 0 Цикл
	Выборка.ИспользоватьВладельца(ВыборкаВладельцев.ТекущийЭлемент());
	Выборка.ВыбратьЭлементы();
	Пока Выборка.ПолучитьЭлемент() &gt; 0 Цикл
		НомерПКО = НайтиПравило(, Правило.КодПравилаКонвертации);
		ВыгрузитьПоПравилу(Выборка.ТекущийЭлемент(),,,,,,, НомерПКО);
	КонецЦикла;
КонецЦикла;

//Отказ = 1;</ПередОбработкойПравила>
			</Правило>
		</Группа>
		<Группа Отключить="false">
			<Код>_002_ОстаткиИОборотыПоРазделамУчета</Код>
			<Наименование>Остатки и обороты по разделам учета</Наименование>
			<Порядок>100</Порядок>
			<Правило Отключить="false">
				<Код>тОсновныеСредства</Код>
				<Наименование>Основные средства</Наименование>
				<Порядок>50</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//****************** Счета 01.1 и 02.1 *************************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("01.1"));
Параметры.ПараметрыАлгоритмов.Установить("ИмяСуммы", "ТекущаяСтоимостьБУ");
Параметры.ПараметрыАлгоритмов.Установить("ИмяСчета", "СчетУчетаБУ");
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 1);
ВыгрузитьОстаткиПоОС();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	ВыгрузитьОстаткиПоОСКон();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("02.1"));
Параметры.ПараметрыАлгоритмов.Установить("ИмяСуммы", "НакопленнаяАмортизацияБУ");
Параметры.ПараметрыАлгоритмов.Установить("ИмяСчета", "СчетАмортизацииБУ");
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 2);
ВыгрузитьОстаткиПоОС();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	ВыгрузитьОстаткиПоОСКон();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//****************** Счет 01.2 *************************
//остатков быть не должно
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("01.2"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
ВыгрузитьОстаткиПоОС();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	ВыгрузитьОстаткиПоОСКон();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//****************** Счета 03.1 - 03.4 и 02.1 *************************
// Счет 03.1
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("03.1"));
Параметры.ПараметрыАлгоритмов.Установить("ИмяСуммы", "ТекущаяСтоимостьБУ");
Параметры.ПараметрыАлгоритмов.Установить("ИмяСчета", "СчетУчетаБУ");
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 1);
ВыгрузитьОстаткиПоОС();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	ВыгрузитьОстаткиПоОСКон();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);


Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

// Счет 03.2
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("03.2"));
Параметры.ПараметрыАлгоритмов.Установить("ИмяСуммы", "ТекущаяСтоимостьБУ");
Параметры.ПараметрыАлгоритмов.Установить("ИмяСчета", "СчетУчетаБУ");
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 1);
ВыгрузитьОстаткиПоОС();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	ВыгрузитьОстаткиПоОСКон();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

// Счет 03.3
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("03.3"));
Параметры.ПараметрыАлгоритмов.Установить("ИмяСуммы", "ТекущаяСтоимостьБУ");
Параметры.ПараметрыАлгоритмов.Установить("ИмяСчета", "СчетУчетаБУ");
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 1);
ВыгрузитьОстаткиПоОС();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	ВыгрузитьОстаткиПоОСКон();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

// Счет 03.4
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("03.4"));
Параметры.ПараметрыАлгоритмов.Установить("ИмяСуммы", "ТекущаяСтоимостьБУ");
Параметры.ПараметрыАлгоритмов.Установить("ИмяСчета", "СчетУчетаБУ");
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 1);
ВыгрузитьОстаткиПоОС();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	ВыгрузитьОстаткиПоОСКон();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//Счет 02.2
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("02.2"));
Параметры.ПараметрыАлгоритмов.Установить("ИмяСуммы", "НакопленнаяАмортизацияБУ");
Параметры.ПараметрыАлгоритмов.Установить("ИмяСчета", "СчетАмортизацииБУ");
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 2);
ВыгрузитьОстаткиПоОС();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	ВыгрузитьОстаткиПоОСКон();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//****************** Счет 03.5 *************************
//остатков быть не должно
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("03.5"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
ВыгрузитьОстаткиПоОС();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	ВыгрузитьОстаткиПоОСКон();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//****************** Счет 010 *************************
//износ
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("010"));
Параметры.ПараметрыАлгоритмов.Установить("ИмяСуммы", "НакопленнаяАмортизацияБУ");
Параметры.ПараметрыАлгоритмов.Установить("ИмяСчета", "СчетАмортизацииБУ");
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 1);
ВыгрузитьОстаткиПоОС();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	ВыгрузитьОстаткиПоОСКон();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("010"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();


ТабОс = СоздатьОбъект("ТаблицаЗначений");
ТабОс.НоваяКолонка("ОсновноеСредство");
ТабОс.НоваяКолонка("Период");
ТабОс.НоваяКолонка("ДатаСостояния");

СпрОС = СоздатьОбъект("Справочник.основныеСредства");
СпрОС.ВыбратьЭлементы();
Пока СпрОС.ПолучитьЭлемент() = 1 Цикл
	ТабОс.УдалитьСтроки();
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
	Если СпрОС.ДатаВыбытия &lt;&gt; Дата(0) Тогда
		Если (СпрОС.ДатаВыбытия &gt;= Параметры.ДатаВводаОстатков)
			И (СпрОС.ДатаВыбытия &lt;= Параметры.ДатаКонцаПериодаВыгрузки) Тогда
			ТабОс.НоваяСтрока();
			ТабОс.ОсновноеСредство = СпрОС.ТекущийЭлемент();
			ТабОс.Период = СпрОС.ДатаВыбытия;
			ТабОс.ДатаСостояния = СпрОС.ДатаВыбытия;
			ВходящиеДанные.Установить("Дата", СпрОС.ДатаВыбытия);
			ВходящиеДанные.Установить("ОС", ТабОс);
			ВходящиеДанные.Установить("НачислениеАмортизацииОСБухгалтерскийУчет", ТабОс);
			ВходящиеДанные.Установить("СостоянияОСОрганизаций", ТабОс);
			ВходящиеДанные.Установить("СобытияОСОрганизаций", ТабОс);
			ВыгрузитьПоПравилу(,, ВходящиеДанные,, "СписаниеОС");
		КонецЕсли;
	КонецЕсли;
КонецЦикла;


</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>тНематериальныеАктивы</Код>
				<Наименование>Нематериальные активы и расходы на НИОКР</Наименование>
				<Порядок>100</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//*************************************************************************************************
// Счета учета НМА
//*************************************************************************************************

//******************** Счет 04.1 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("04.1"));
Параметры.ПараметрыАлгоритмов.Установить("ИмяСуммы", "ТекущаяСтоимостьБУ");
Параметры.ПараметрыАлгоритмов.Установить("ВидОбъектаУчета", "НематериальныйАктив");
ВыгрузитьОстаткиПоНМА();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	ВыгрузитьОстаткиПоНМАКон();
КонецЕсли;


Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 04.2 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("04.2"));
Параметры.ПараметрыАлгоритмов.Установить("ИмяСуммы", "ТекущаяСтоимостьБУ");
Параметры.ПараметрыАлгоритмов.Установить("ВидОбъектаУчета", "РасходыНаНИОКР");
ВыгрузитьОстаткиПоНМА();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	ВыгрузитьОстаткиПоНМАКон();
КонецЕсли;

Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 05 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("05"));
Параметры.ПараметрыАлгоритмов.Установить("ИмяСуммы", "НакопленнаяАмортизацияБУ");
Параметры.ПараметрыАлгоритмов.Установить("ВидОбъектаУчета", "");
ВыгрузитьОстаткиПоНМА();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	ВыгрузитьОстаткиПоНМАКон();
КонецЕсли;

Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>тВнеоборотныеАктивы</Код>
				<Наименование>Внеоборотные активы</Наименование>
				<Порядок>150</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");
//*************************************************************************************************
//Счета учета оборудования (Счет 07)
//*************************************************************************************************

Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("07"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//*************************************************************************************************
//Счета учета внеоборотных активов (Счета 08)
//*************************************************************************************************

//******************** Счет 08.3 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("08.3"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 08.4 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("08.4"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 08.5 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("08.5"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 08.8 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("08.8"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>тМатериалы</Код>
				<Наименование>Материалы</Наименование>
				<Порядок>200</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");
//*************************************************************************************************
// Счета учета материалов
//*************************************************************************************************

//******************** Счет 10.1 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("10.1"));
//Параметры.СписокСчетовСкладскогоУчета = "10.1";
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОстаткиПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 10.2 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("10.2"));
//Параметры.СписокСчетовСкладскогоУчета = "10.2";
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОстаткиПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 10.3 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("10.3"));
//Параметры.СписокСчетовСкладскогоУчета = "10.3";
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОстаткиПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);


//Параметры.СписокСчетовСкладскогоУчета = "";

//******************** Счет 10.11 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("10.11"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 10.12 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("10.12"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 10.13 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("10.13"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "");</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>тНЗП</Код>
				<Наименование>Незавершенное производство</Наименование>
				<Порядок>250</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//*************************************************************************************************
// Счета учета производственных затрат (Счета 20 и 26)
//*************************************************************************************************

//************ Счет 20 ************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("20"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//************ Счет 26 ************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("26"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>тДанныеПоНДСпоПоставщикам</Код>
				<Наименование>НДС по приобретенным ценностям</Наименование>
				<Порядок>300</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//*************************************************************************************************
// Счета учета НДС
//*************************************************************************************************

//******************** Счет 19.1 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("19.1"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 19.2 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("19.2"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>тГотоваяПродукция</Код>
				<Наименование>Готовая продукция</Наименование>
				<Порядок>350</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//*************************************************************************************************
// Счета учета готовой продукции
//*************************************************************************************************

//******************** Счет 40 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("40"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 43 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("43"));
//Параметры.СписокСчетовСкладскогоУчета = "43";
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);


//Параметры.СписокСчетовСкладскогоУчета = "";</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>тТовары</Код>
				<Наименование>Товары</Наименование>
				<Порядок>400</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");
//*************************************************************************************************
// Счета учета товаров
//*************************************************************************************************

//******************** Счет 41.1 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("41.1"));
//Параметры.СписокСчетовСкладскогоУчета = "41.1";
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОстаткиПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 41.2 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("41.2"));
//Параметры.СписокСчетовСкладскогоУчета = "41.2";
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОстаткиПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 41.3 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("41.3"));
//Параметры.СписокСчетовСкладскогоУчета = "41.3";
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОстаткиПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//Параметры.СписокСчетовСкладскогоУчета = "";

Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "");</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>тРасходыНаПродажу</Код>
				<Наименование>Расходы на продажу</Наименование>
				<Порядок>450</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//*************************************************************************************************
// Счета учета коммерческих расходов
//*************************************************************************************************

//******************** Счет 44.1 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("44.1"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 44.2 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("44.2"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 44.3 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("44.3"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();
</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>тТоварыОтгруженные</Код>
				<Наименование>Товары отгруженные</Наименование>
				<Порядок>500</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора","СКомиссионером");
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("45"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора","");
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОстаткиПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "");</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>тКассаИБанк</Код>
				<Наименование>Денежные средства</Наименование>
				<Порядок>550</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//*************************************************************************************************
// Счета учета кассовых операций (Счет 50)
//*************************************************************************************************

//******************** Счет 50.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("50.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 50.11 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("50.11"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//*************************************************************************************************
// Счета учета банковских операций (Счета 51, 52, 55, 57)
//*************************************************************************************************

//******************** Счет 51 ********************   
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("51"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 52 ********************   
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("52"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 55.1 ********************   
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("55.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 55.11 ********************   
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("55.11"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 55.2 ********************   
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("55.2"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 55.3 ********************   
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("55.3"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 55.33 ********************   
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("55.33"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 55.4 ********************   
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("55.4"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 55.44 ********************   
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("55.44"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 57.1 ********************   
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("57.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 57.11 ********************   
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("57.11"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

  </ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>тФинансовыеВложения</Код>
				<Наименование>Финансовые вложения</Наименование>
				<Порядок>600</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//*************************************************************************************************
// Счета учета паев и акций и резервов под них (Счета 58, 59)
//*************************************************************************************************

//******************** Счет 58.1.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("58.1.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();


//******************** Счет 58.1.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("58.1.2"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 58.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("58.2"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 58.3 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("58.3"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 58.4 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("58.4"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 58.5 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("58.5"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 59 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("59"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>тРасчетыСПоставщиками</Код>
				<Наименование>Расчеты с поставщиками и подрядчиками</Наименование>
				<Порядок>650</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//***************************************************************
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");
//*************************************************************************************************
// Счет учета расчетов с поставщиками (Счет 60)
//*************************************************************************************************

//******************** Счет 60.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("60.1"));
Параметры.СписокСчетовРасчетов = Параметры.СписокСчетовРасчетов + "60.1,";
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
ВыгрузитьОстаткиПоСчету();
НУ_ОстаткиПоВзаиморасчетамСПоставщикамиПоСчету();

Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "");

//******************** Счет 60.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("60.2"));
Параметры.СписокСчетовРасчетов = Параметры.СписокСчетовРасчетов + "60.2,";
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
ВыгрузитьОстаткиПоСчету();
НУ_ОстаткиПоВзаиморасчетамСПоставщикамиПоСчету();

Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "");

//******************** Счет 60.3 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("60.3"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 60.4 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("60.4")); 
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 60.11 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("60.11"));
Параметры.СписокСчетовРасчетов = Параметры.СписокСчетовРасчетов + "60.11,";
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
ВыгрузитьОстаткиПоСчету();
НУ_ОстаткиПоВзаиморасчетамСПоставщикамиПоСчету();

Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "");

//******************** Счет 60.22 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("60.22"));
Параметры.СписокСчетовРасчетов = Параметры.СписокСчетовРасчетов + "60.22,";
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
ВыгрузитьОстаткиПоСчету();
НУ_ОстаткиПоВзаиморасчетамСПоставщикамиПоСчету();

Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "");

</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>тРасчетыСПокупателями</Код>
				<Наименование>Расчеты с покупателями и заказчиками</Наименование>
				<Порядок>700</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//***************************************************************
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПокупателем");
//*************************************************************************************************
// Счет учета расчетов с покупателями (Счет 62)
//*************************************************************************************************

//******************** Счет 62.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПокупателем");
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("62.1"));
Параметры.СписокСчетовРасчетов = Параметры.СписокСчетовРасчетов + "62.1,";
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
ВыгрузитьОстаткиПоСчету();
НУ_ОстаткиПоВзаиморасчетамСПокупателямиПоСчету();

Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "");

//******************** Счет 62.2******************** 
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПокупателем");
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("62.2"));
Параметры.СписокСчетовРасчетов = Параметры.СписокСчетовРасчетов + "62.2,";
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
ВыгрузитьОстаткиПоСчету();
НУ_ОстаткиПоВзаиморасчетамСПокупателямиПоСчету();

Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "");

//******************** Счет 62.3******************** 
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПокупателем");
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("62.3"));
Параметры.СписокСчетовРасчетов = Параметры.СписокСчетовРасчетов + "62.3,";
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
ВыгрузитьОстаткиПоСчету();
НУ_ОстаткиПоВзаиморасчетамСПокупателямиПоСчету();

Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "");

//******************** Счет 62.4******************** 
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПокупателем");
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("62.4"));
Параметры.СписокСчетовРасчетов = Параметры.СписокСчетовРасчетов + "62.4,";
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
ВыгрузитьОстаткиПоСчету();
НУ_ОстаткиПоВзаиморасчетамСПокупателямиПоСчету();

Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "");

//******************** Счет 62.11******************** 
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПокупателем");
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("62.11"));
Параметры.СписокСчетовРасчетов = Параметры.СписокСчетовРасчетов + "62.11,";
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
ВыгрузитьОстаткиПоСчету();
НУ_ОстаткиПоВзаиморасчетамСПокупателямиПоСчету();

Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "");

//******************** Счет 62.33******************* 
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПокупателем");
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("62.33"));
Параметры.СписокСчетовРасчетов = Параметры.СписокСчетовРасчетов + "62.33,";
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
ВыгрузитьОстаткиПоСчету();
НУ_ОстаткиПоВзаиморасчетамСПокупателямиПоСчету();

Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "");

//******************** Счет 62.44******************* 
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПокупателем");
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("62.44"));
Параметры.СписокСчетовРасчетов = Параметры.СписокСчетовРасчетов + "62.44,";
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
ВыгрузитьОстаткиПоСчету();
НУ_ОстаткиПоВзаиморасчетамСПокупателямиПоСчету();

Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "");



</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>тРасчетыПрочие</Код>
				<Наименование>Прочие расчеты с контрагентами</Наименование>
				<Порядок>750</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//***************************************************************
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "Прочее");
//*************************************************************************************************
// Счета учета расчетов с контрагентами по прочим операциям
//*************************************************************************************************

//******************** Счет 63 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("63"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();


//******************** Счет 66.1 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("66.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 66.2 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("66.2"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 66.3 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("66.3"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 66.11 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("66.11"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 66.22 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("66.22"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 66.33 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("66.33"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 67.1 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("67.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 67.2 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("67.2"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 67.3 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("67.3"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 67.11 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("67.11"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 67.22 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("67.22"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 67.33 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("67.33"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//*************************************************************************************************
// Счета учета расчетов по внутрифирменным расчетам (Счет 79)
//*************************************************************************************************

//******************** Счет 79.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("79.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 79.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("79.2"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 79.3 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("79.3"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>тРасчетыПоНалогамИСборам</Код>
				<Наименование>Налоги и сборы</Наименование>
				<Порядок>800</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//*************************************************************************************************
// Счета учета расчетов по налогам и сборам (Счета 68, 69)
//*************************************************************************************************

//******************** Счет 68.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("68.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОстаткиПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 68.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("68.2"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОстаткиПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 68.3 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("68.3"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОстаткиПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 68.5 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("68.5"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОстаткиПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 68.11 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("68.11"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОстаткиПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 68.12 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("68.12"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОстаткиПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 69.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("69.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОстаткиПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 69.11 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("69.11"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОстаткиПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 69.21 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("69.21"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОстаткиПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 69.22 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("69.22"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОстаткиПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 69.31 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("69.31"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОстаткиПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 69.41 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("69.41"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОстаткиПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 69.42 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("69.42"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОстаткиПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 69.51 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("69.51"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОстаткиПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 69.52 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("69.52"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОстаткиПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);



</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>тРасчетыСПерсоналом</Код>
				<Наименование>Расчеты с персоналом</Наименование>
				<Порядок>850</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//*************************************************************************************************
// Счета учета заработной платы и расчетов с персоналом (Счета 70, 73)
//*************************************************************************************************

//******************** Счет 70 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("70"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
НУ_ОстаткиПоЗарплате();
ВыгрузитьОстаткиПоСчету();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	НУ_ОстаткиПоЗарплате();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);


//******************** Счет 76.4 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("76.4"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();
//На конец периода только СР
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОстаткиПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 73.1 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("73.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 73.2 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("73.2"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 73.3 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("73.3"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 73.4 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("73.4"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 73.5 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("73.5"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 73.6 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("73.6"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>тРасчетыСПодотчетнымиЛицами</Код>
				<Наименование>Расчеты с подотчетными лицами</Наименование>
				<Порядок>900</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//*************************************************************************************************
// Счета учета расчетов с подотчетными лицами (Счет 71)
//*************************************************************************************************

//******************** Счет 71.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("71.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОстаткиПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 71.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("71.2"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОстаткиПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 71.11 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("71.11"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОстаткиПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 71.22 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("71.22"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОстаткиПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);
</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>тРасчетыСУчредителями</Код>
				<Наименование>Расчеты с учредителями</Наименование>
				<Порядок>950</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//***************************************************************
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "Прочее");
//*************************************************************************************************
// Счета учета расчетов с учредителями (Счет 75)
//*************************************************************************************************

//******************** Счет 75.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("75.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 75.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("75.2"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 75.3 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("75.3"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>тРасчетыСПрочимиДебиторамиИКредиторами</Код>
				<Наименование>Расчеты с прочими дебиторами и кредиторами</Наименование>
				<Порядок>1000</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//***************************************************************
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "Прочее");
//*************************************************************************************************
// Счета учета расчетов с прочими дебиторами и кредиторами (Счет 76)
//*************************************************************************************************

//******************** Счет 76.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("76.1"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 76.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("76.2"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОстаткиПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 76.3 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("76.3"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 76.5 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("76.5"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();
НУ_ОстаткиПоВзаиморасчетамСПоставщикамиПоСчету();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	НУ_ОстаткиПоВзаиморасчетамСПоставщикамиПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 76.6 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("76.6"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();
НУ_ОстаткиПоВзаиморасчетамСПоставщикамиПоСчету();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	НУ_ОстаткиПоВзаиморасчетамСПоставщикамиПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 76.11 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("76.11"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 76.22 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("76.22"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОстаткиПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 76.55 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("76.55"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
НУ_ОстаткиПоВзаиморасчетамСПоставщикамиПоСчету();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	НУ_ОстаткиПоВзаиморасчетамСПоставщикамиПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 76.66 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("76.66"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();
НУ_ОстаткиПоВзаиморасчетамСПоставщикамиПоСчету();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	НУ_ОстаткиПоВзаиморасчетамСПоставщикамиПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 76.ЗП ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("76.ЗП"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОстаткиПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);


</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>тКапитал</Код>
				<Наименование>Капитал и резервы</Наименование>
				<Порядок>1050</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//*************************************************************************************************
// Счета учета капитала и резервов (Счета 80, 81, 82, 83, 84, 86)
//*************************************************************************************************

//******************** Счет 80 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("80"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 81 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("81"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 82.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("82.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 82.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("82.2"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 83.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("83.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 83.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("83.2"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 83.3 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("83.3"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 84.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("84.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 84.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("84.2"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 84.3 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("84.3"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 84.4 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("84.4"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 86 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("86"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>тРБП</Код>
				<Наименование>Расходы будущих периодов</Наименование>
				<Порядок>1100</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("97.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОстаткиПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("97.2"));  
ВыгрузитьОстаткиПоСчету();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОстаткиПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("97.3"));  
ВыгрузитьОстаткиПоСчету();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОстаткиПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("97.4"));  
ВыгрузитьОстаткиПоСчету();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОстаткиПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);
</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>тФинансовыйРезультат</Код>
				<Наименование>Финансовый результат                              </Наименование>
				<Порядок>1150</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//************************************************************ 
//Счета у которых есть остатки
//************************************************************

//******************** Счет 94 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("94"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 96 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("96"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();


//******************** Счет 98.1 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("98.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 98.2 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("98.2"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 98.3 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("98.3"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 98.4 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("98.4"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 99 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("99"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//************************************************************ 
//Счета у которых есть только обороты
//************************************************************

//******************** Счет 90.1 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("90.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 90.2 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("90.2"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 90.3 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("90.3"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 90.4 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("90.4"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 90.5 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("90.5"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 90.7 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("90.7"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 90.8 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("90.8"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 90.9 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("90.9"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 91.1 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("91.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 91.2 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("91.2"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 91.3 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("91.3"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 91.4 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("91.4"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 91.9 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("91.9"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();
</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>тЗабалансовыеСчета</Код>
				<Наименование>Забалансовые счета</Наименование>
				<Порядок>1200</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//*************************************************************************************************
// Забалансовые счета 
//*************************************************************************************************

//******************** Счет 001 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("001"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 002 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("002"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 003 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("003"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 004 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("004"));
Параметры.СписокСчетовСкладскогоУчета = Параметры.СписокСчетовСкладскогоУчета + "004,";
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора","СКомитентом");
ВыгрузитьОстаткиПоСчету();
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора","");
//******************** Данные налогового учета **********************
//Данные для НУ
НУ_ОстаткиПо004();
//*******************************************************************
//******************** Счет 007 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("007"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 008 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("008"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 009 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("009"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 011 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("011"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет ГТД ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("ГТД")); 
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет РВ ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("РВ"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>тПрочиеРасходыНУ</Код>
				<Наименование>Прочие расходы налогового учета</Наименование>
				<Порядок>1250</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>// Прочие расходы налогового учета
НУ_ОстаткиПрочихРасходов();</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>ДанныеДляРасчетаНДФЛиЕСН</Код>
				<Наименование>Данные для расчета НДФЛ и ЕСН</Наименование>
				<Порядок>1300</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>// Параметры
ДатаВводаОстатков = Параметры.ДатаВводаОстатков;
СписокРаботников = Параметры.СписокРаботников;

ВычетыСотрудниковПоНДФЛ = СоздатьОбъект("Справочник.ВычетыСотрудниковПоНДФЛ");

Сотрудники=СоздатьОбъект("СписокЗначений");
СписокРаботников.Выгрузить(Сотрудники,,, "ФизЛицо");
ВсегоСотров = Сотрудники.РазмерСписка();

// Задолженность по оплате труда на момент ввода остатков
// (сальдо счета 70)
Задолженность = СоздатьОбъект("ТаблицаЗначений");
Задолженность.НоваяКолонка("ФизЛицо");
Задолженность.НоваяКолонка("МесяцНалоговогоПериода", "Дата");
Задолженность.НоваяКолонка("Результат", "Число"); 
Задолженность.НоваяКолонка("ПодразделениеОрганизации"); 

// Исчислен НДФЛ
// Сумма должна соответствовать обороту между 70 и 68
// за каждый расчетный период, но только в части ставки 13%
//
ИсчисленныйНДФЛ = СоздатьОбъект("ТаблицаЗначений"); 
ИсчисленныйНДФЛ.НоваяКолонка("ФизЛицо");            
ИсчисленныйНДФЛ.НоваяКолонка("МесяцНалоговогоПериода", "Дата");
ИсчисленныйНДФЛ.НоваяКолонка("ПериодРегистрации", "Дата");
ИсчисленныйНДФЛ.НоваяКолонка("Налог", "Число");
ИсчисленныйНДФЛ.НоваяКолонка("КодВычета");
ИсчисленныйНДФЛ.НоваяКолонка("ПримененныйВычет", "Число");

ИсчисленныйНДФЛНакопительный = СоздатьОбъект("ТаблицаЗначений"); 
ИсчисленныйНДФЛ.Выгрузить(ИсчисленныйНДФЛНакопительный);

// Удержанный НДФЛ
// Оборот 70 68 за все расчетные периоды по всем ставкам
УдержанныйНДФЛ = СоздатьОбъект("ТаблицаЗначений"); 
УдержанныйНДФЛ.НоваяКолонка("ФизЛицо");            
УдержанныйНДФЛ.НоваяКолонка("МесяцНалоговогоПериода", "Дата");
УдержанныйНДФЛ.НоваяКолонка("ПериодРегистрации", "Дата");
УдержанныйНДФЛ.НоваяКолонка("СтавкаНалогообложения", "Строка");
УдержанныйНДФЛ.НоваяКолонка("Налог", "Число");

// Доходы НДФЛ за каждый месяц налогового периода
// Сюда же надо вписать движения, сторнирующие доходы, которые отразятся при вводе задолженности
// Сторнировать доходы надо по коду 2000, а затем отразить их с настоящим кодом.
ДоходыНДФЛ = СоздатьОбъект("ТаблицаЗначений");
ДоходыНДФЛ.НоваяКолонка("ФизЛицо");
ДоходыНДФЛ.НоваяКолонка("МесяцНалоговогоПериода", "Дата");
ДоходыНДФЛ.НоваяКолонка("ПериодРегистрации", "Дата");
ДоходыНДФЛ.НоваяКолонка("ДатаДохода", "Дата"); 
ДоходыНДФЛ.НоваяКолонка("КодДохода", "Строка");
ДоходыНДФЛ.НоваяКолонка("СуммаДохода", "Число");
ДоходыНДФЛ.НоваяКолонка("КодВычета", "Строка");
ДоходыНДФЛ.НоваяКолонка("СуммаВычета", "Число");
ДоходыНДФЛ.НоваяКолонка("СуммаНалогаИсчисленная", "Число");

// Доходы ЕСН за каждый месяц налогового периода
ДоходыЕСН = СоздатьОбъект("ТаблицаЗначений");
ДоходыЕСН.НоваяКолонка("ФизЛицо");
ДоходыЕСН.НоваяКолонка("МесяцНалоговогоПериода", "Дата");
ДоходыЕСН.НоваяКолонка("КодДоходаЕСН", "Строка"); // Доходы ЕСН
ДоходыЕСН.НоваяКолонка("СуммаДохода", "Число"); // это уже есть
ДоходыЕСН.НоваяКолонка("ОблагаетсяЕНВД", "Число");        

// Начисленный  ЕСН за каждый месяц налогового периода
НачисленныйЕСН = СоздатьОбъект("ТаблицаЗначений");
НачисленныйЕСН.НоваяКолонка("ФизЛицо");
НачисленныйЕСН.НоваяКолонка("МесяцНалоговогоПериода", "Дата");
НачисленныйЕСН.НоваяКолонка("ФедеральныйБюджет", "Число"); // собственно ЕСН
НачисленныйЕСН.НоваяКолонка("ФСС", "Число");
НачисленныйЕСН.НоваяКолонка("ФФОМС", "Число");
НачисленныйЕСН.НоваяКолонка("ТФОМС", "Число");
НачисленныйЕСН.НоваяКолонка("ПФРНакопительная", "Число");
НачисленныйЕСН.НоваяКолонка("ПФРСтраховая", "Число");
НачисленныйЕСН.НоваяКолонка("ПримененнаяЛьготаФБ", "Число");
НачисленныйЕСН.НоваяКолонка("ПримененнаяЛьготаФСС", "Число");
НачисленныйЕСН.НоваяКолонка("ПримененнаяЛьготаФОМС", "Число");
НачисленныйЕСН.НоваяКолонка("ПФРНакопительнаяЕНВД", "Число");
НачисленныйЕСН.НоваяКолонка("ПФРСтраховаяЕНВД", "Число");

// Доходы по страховым взносам за каждый месяц налогового периода
ДоходыСВЗ = СоздатьОбъект("ТаблицаЗначений");
ДоходыСВЗ.НоваяКолонка("ФизЛицо");
ДоходыСВЗ.НоваяКолонка("МесяцРасчетногоПериода", "Дата");
ДоходыСВЗ.НоваяКолонка("ВидДохода", "Строка"); 
ДоходыСВЗ.НоваяКолонка("Результат", "Число");
ДоходыСВЗ.НоваяКолонка("Скидка", "Число"); 
ДоходыСВЗ.НоваяКолонка("ОблагаетсяЕНВД", "Число");        

// Начисленные страховые взносы за каждый месяц налогового периода
НачисленныйСВЗ = СоздатьОбъект("ТаблицаЗначений");
НачисленныйСВЗ.НоваяКолонка("ФизЛицо");
НачисленныйСВЗ.НоваяКолонка("МесяцРасчетногоПериода", "Дата");
НачисленныйСВЗ.НоваяКолонка("ПФРНакопительная", "Число"); 
НачисленныйСВЗ.НоваяКолонка("ПФРНакопительнаяЕНВД", "Число");
НачисленныйСВЗ.НоваяКолонка("ПФРСтраховая", "Число");
НачисленныйСВЗ.НоваяКолонка("ПФРСтраховаяЕНВД", "Число");
НачисленныйСВЗ.НоваяКолонка("ТФОМС", "Число");
НачисленныйСВЗ.НоваяКолонка("ФФОМС", "Число");
НачисленныйСВЗ.НоваяКолонка("ФСС", "Число");
НачисленныйСВЗ.НоваяКолонка("ФССНесчастныеСлучаи", "Число");

// Заполнение таблиц
Год = ДатаГод(ДатаВводаОстатков);
Месяц = ДатаМесяц(ДатаВводаОстатков);

Сч84 = СчетПоКоду("84");
Сч99 = СчетПоКоду("99");
Сч69_1 = СчетПоКоду("69.1");
Сч68_1 = СчетПоКоду("68.1");
СчДФЛ_2 = СчетПоКоду("ДФЛ.01");

СписокКолонок = СоздатьОбъект("СписокЗначений");

НДФЛ_13 = глПолучитьНалог("НДФЛ");
Ставка13 = НДФЛ_13.Ставка.Получить(КонГода(ДатаВводаОстатков));

ПервыйМесяц = 1;
ПоследнийМесяц = Месяц;
НачалоГода = НачГода(ДатаВводаОстатков);
КонецПериодаОсмотра = Параметры.ДатаКонцаПериодаВыгрузки;

БухИтЕСН = СоздатьОбъект("БухгалтерскиеИтоги");
БухИтЕСН.ИспользоватьСубконто();
БухИтЕСН.ИспользоватьСубконто();
БухИтЕСН.ВыполнитьЗапрос(НачалоГода,КонецПериодаОсмотра, "69.1,69.21,69.22",,, 2, "Месяц");

ЗапросПоЕСН = СоздатьОбъект("ТаблицаЗначений");
ЗапросПоЕСН.НоваяКолонка("Объект"); // сотрудник
ЗапросПоЕСН.НоваяКолонка("Регистрация"); // конец месяца начисления
ЗапросПоЕСН.НоваяКолонка("ФедеральныйБюджет", "Число"); // собственно ЕСН
ЗапросПоЕСН.НоваяКолонка("ФСС", "Число");
ЗапросПоЕСН.НоваяКолонка("ФФОМС", "Число");
ЗапросПоЕСН.НоваяКолонка("ТФОМС", "Число");
ЗапросПоЕСН.НоваяКолонка("ПФРНакопительная", "Число");
ЗапросПоЕСН.НоваяКолонка("ПФРСтраховая", "Число");

//ПорядокИсчисленияЕСН = Константа.ПорядокИсчисленияЕСН.Получить(КонецПериодаОсмотра);

БухИтЕСН.ВыбратьПериоды();
Пока БухИтЕСН.ПолучитьПериод() = 1 Цикл
	Для Сч = 1 по ВсегоСотров Цикл
		
		Сотрудник = Сотрудники.ПолучитьЗначение(Сч);
		
		ЗапросПоЕСН.НоваяСтрока();
		ЗапросПоЕСН.Объект = Сотрудник;
		ЗапросПоЕСН.Регистрация = БухИтЕСН.КонДата;
		
		Если БухИтЕСН.ПолучитьСчет(, СчетПоКоду("69.1")) = 1 Тогда
			Если БухИтЕСН.ПолучитьСубконто(2,, Сотрудник) = 1 Тогда
				Если БухИтЕСН.ПолучитьСубконто(1,, Перечисление.ВидыПлатежей.Налог) = 1 Тогда
					ЗапросПоЕСН.ФСС = БухИтЕСН.КО();
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если БухИтЕСН.ПолучитьСчет(, СчетПоКоду("69.21")) = 1 Тогда
			Если БухИтЕСН.ПолучитьСубконто(2,, Сотрудник) = 1 Тогда
				Если БухИтЕСН.ПолучитьСубконто(1,, Перечисление.ВидыПлатежей.Налог) = 1 Тогда
					ЗапросПоЕСН.ПФРСтраховая = БухИтЕСН.КО();
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если БухИтЕСН.ПолучитьСчет(, СчетПоКоду("69.22")) = 1 Тогда
			Если БухИтЕСН.ПолучитьСубконто(2,, Сотрудник) = 1 Тогда
				Если БухИтЕСН.ПолучитьСубконто(1,, Перечисление.ВидыПлатежей.Налог) = 1 Тогда
					ЗапросПоЕСН.ПФРНакопительная = БухИтЕСН.КО();
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецЦикла;

БухИтСВЗ = СоздатьОбъект("БухгалтерскиеИтоги");
БухИтСВЗ.ИспользоватьСубконто();
БухИтСВЗ.ВыполнитьЗапрос(НачалоГода,КонецПериодаОсмотра, "СВЗ.01.1,СВЗ.01.2,СВЗ.01.3,СВЗ.01.4,СВЗ.01.5,СВЗ.02.1,СВЗ.02.2",,, 2, "Месяц");

ЗапросПоСВЗ = СоздатьОбъект("ТаблицаЗначений");
ЗапросПоСВЗ.НоваяКолонка("Объект"); // сотрудник
ЗапросПоСВЗ.НоваяКолонка("Регистрация"); // конец месяца начисления
ЗапросПоСВЗ.НоваяКолонка("ФСС", "Число");
ЗапросПоСВЗ.НоваяКолонка("ФФОМС", "Число");
ЗапросПоСВЗ.НоваяКолонка("ТФОМС", "Число");
ЗапросПоСВЗ.НоваяКолонка("ПФРНакопительная", "Число");
ЗапросПоСВЗ.НоваяКолонка("ПФРСтраховая", "Число");
ЗапросПоСВЗ.НоваяКолонка("ПФРНакопительнаяЕНВД", "Число");
ЗапросПоСВЗ.НоваяКолонка("ПФРСтраховаяЕНВД", "Число");


БухИтСВЗ.ВыбратьПериоды();
Пока БухИтСВЗ.ПолучитьПериод() = 1 Цикл
	Для Сч = 1 по ВсегоСотров Цикл
		
		Сотрудник = Сотрудники.ПолучитьЗначение(Сч);
		
		ЗапросПоСВЗ.НоваяСтрока();
		ЗапросПоСВЗ.Объект = Сотрудник;
		ЗапросПоСВЗ.Регистрация = БухИтЕСН.КонДата;
		
		Если БухИтСВЗ.ПолучитьСчет(, СчетПоКоду("СВЗ.01.3")) = 1 Тогда
			Если БухИтСВЗ.ПолучитьСубконто(1,, Сотрудник) = 1 Тогда
				ЗапросПоСВЗ.ФСС = БухИтСВЗ.КО();
			КонецЕсли;
		КонецЕсли;
		
		Если БухИтСВЗ.ПолучитьСчет(, СчетПоКоду("СВЗ.01.1")) = 1 Тогда
			Если БухИтСВЗ.ПолучитьСубконто(1,, Сотрудник) = 1 Тогда
				ЗапросПоСВЗ.ПФРСтраховая = БухИтСВЗ.КО();
			КонецЕсли;
		КонецЕсли;
		
		Если БухИтСВЗ.ПолучитьСчет(, СчетПоКоду("СВЗ.01.2")) = 1 Тогда
			Если БухИтСВЗ.ПолучитьСубконто(1,, Сотрудник) = 1 Тогда
				ЗапросПоСВЗ.ПФРНакопительная = БухИтСВЗ.КО();
			КонецЕсли;
		КонецЕсли;
		
		Если БухИтСВЗ.ПолучитьСчет(, СчетПоКоду("СВЗ.01.4")) = 1 Тогда
			Если БухИтСВЗ.ПолучитьСубконто(1,, Сотрудник) = 1 Тогда
				ЗапросПоСВЗ.ФФОМС = БухИтСВЗ.КО();
			КонецЕсли;
		КонецЕсли;
		
		Если БухИтСВЗ.ПолучитьСчет(, СчетПоКоду("СВЗ.01.2")) = 1 Тогда
			Если БухИтСВЗ.ПолучитьСубконто(1,, Сотрудник) = 1 Тогда
				ЗапросПоСВЗ.ТФОМС = БухИтСВЗ.КО();
			КонецЕсли;
		КонецЕсли;
		
		Если БухИтСВЗ.ПолучитьСчет(, СчетПоКоду("СВЗ.02.1")) = 1 Тогда
			Если БухИтСВЗ.ПолучитьСубконто(1,, Сотрудник) = 1 Тогда
				ЗапросПоСВЗ.ПФРСтраховаяЕНВД = БухИтСВЗ.КО();
			КонецЕсли;
		КонецЕсли;
		
		Если БухИтСВЗ.ПолучитьСчет(, СчетПоКоду("СВЗ.02.2")) = 1 Тогда
			Если БухИтСВЗ.ПолучитьСубконто(1,, Сотрудник) = 1 Тогда
				ЗапросПоСВЗ.ПФРНакопительнаяЕНВД = БухИтСВЗ.КО();
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
КонецЦикла;

// перебираем сотрудников
БухИтДФЛ = СоздатьОбъект("БухгалтерскиеИтоги");
БухИтДФЛ.Опции(1, 1);
БухИтДФЛ.ИспользоватьСубконто(ВидыСубконто.Сотрудники);
БухИтДФЛ.ИспользоватьСубконто(ВидыСубконто.ВидыНачисленийВыплат);
БухИтДФЛ.ВыполнитьЗапрос(НачалоГода,КонецПериодаОсмотра, "70, ДФЛ.01",,, 2, "Месяц");

БухИт70 = СоздатьОбъект("БухгалтерскиеИтоги"); // для отбора корреспонденций 70-ого счета
БухИт70.ВключатьСубсчета(, -1);
БухИт70.ИспользоватьСубконто(ВидыСубконто.Сотрудники);
БухИт70.ИспользоватьСубконто(ВидыСубконто.ВидыНачисленийВыплат);
БухИт70.ИспользоватьКорСубконто();
БухИт70.ВыполнитьЗапрос(НачалоГода,КонецПериодаОсмотра, "70",,, 3, "Месяц");

Для СчСотров = 1 По ВсегоСотров Цикл
	
	Сотрудник=Сотрудники.ПолучитьЗначение(СчСотров);
	ВаловойДоход_СНачалаГода = ?(ДатаГод(глДатаПриема(Сотрудник))=ДатаГод(ДатаВводаОстатков), Сотрудник.ВаловойДоход_СНачалаГода, 0);
	ОблагаетсяПоСт13 = 0;
	
	ДоходОблагаемыйЕСН_СНачалаГода = 0;
	ДоходОблагаемыйЕСН_ФСС_СНачалаГода = 0;
	ДоходОблагаемыйПФР_СНачалаГода = 0;
	ДоходОблагаемыйНДФЛ_СНачалаГода = 0;
	ДоходОблагаемыйНДФЛ_СНачалаГода_Пред = 0;
	ПримененнаяЛьготаФБ = 0;
	ПримененнаяЛьготаФСС = 0;
	
	// Задолженность по оплате труда
	Если БухИт70.ПолучитьСубконто(1,, Сотрудник) = 1 Тогда
		Если БухИт70.СКК() &lt;&gt; 0 Тогда
			Задолженность.НоваяСтрока();
			Задолженность.ФизЛицо = Сотрудник;
			Задолженность.МесяцНалоговогоПериода = НачМесяца(ДатаВводаОстатков);
			Задолженность.Результат = БухИт70.СКК();
			
		КонецЕсли;
	КонецЕсли;
	
	// Начальные данные для расчета налогов
	Если (ДатаГод(Сотрудник.ДатаПриема) = ДатаГод(ДатаВводаОстатков)) и (Сотрудник.ДатаПриема &lt;&gt; Дата(0)) Тогда
		Для НомерМесяца = 1 по ДатаМесяц(Сотрудник.ДатаПриема) Цикл
			ДатаМесяца = КонМесяца(Дата(Год, НомерМесяца, 1));
			ОблагаетсяЕСН = 0;
			ОблагаетсяФСС = Сотрудник.ДоходОблагаемыйФСС_СНачалаГода;
			ДоходОблагаемыйЕСН_СНачалаГода = 0;
			ДоходОблагаемыйФСС_СНачалаГода = ДоходОблагаемыйФСС_СНачалаГода + ОблагаетсяФСС;
			ДоходОблагаемыйПФР_СНачалаГода = ДоходОблагаемыйПФР_СНачалаГода + Сотрудник.ДоходОблагаемыйПФР_СНачалаГода.Получить(ДатаМесяца);
			
			Инвалид = ?((Сотрудник.Инвалид.Получить(ДатаМесяца) = 1), 1, 0);
			Если Инвалид = 1 Тогда
				ПримененнаяЛьготаФБ = Мин(100000, ПримененнаяЛьготаФБ + ОблагаетсяЕСН);
				ПримененнаяЛьготаФСС = Мин(100000, ПримененнаяЛьготаФСС + ОблагаетсяФСС);
			КонецЕсли; 
		КонецЦикла;
		
		ДатаПериода = НачМесяца(Сотрудник.ДатаПриема);
		
		Если Сотрудник.НачисленныйНДФЛ_СНачалаГода &lt;&gt; 0 Тогда
			ИсчисленныйНДФЛ.НоваяСтрока();
			ИсчисленныйНДФЛ.ФизЛицо = Сотрудник;            
			ИсчисленныйНДФЛ.МесяцНалоговогоПериода = ДатаПериода;
			ИсчисленныйНДФЛ.ПериодРегистрации = ДатаПериода;
			ИсчисленныйНДФЛ.Налог = Сотрудник.НачисленныйНДФЛ_СНачалаГода;
			
			УдержанныйНДФЛ.НоваяСтрока(); 
			УдержанныйНДФЛ.ФизЛицо = Сотрудник;            
			УдержанныйНДФЛ.МесяцНалоговогоПериода = ДатаПериода;
			УдержанныйНДФЛ.ПериодРегистрации = ДатаПериода;
			УдержанныйНДФЛ.СтавкаНалогообложения = "Ставка13";
			УдержанныйНДФЛ.Налог = Сотрудник.НачисленныйНДФЛ_СНачалаГода;
		КонецЕсли;
		
		Если (Сотрудник.ДоходОблагаемыйНДФЛ_СНачалаГода &lt;&gt; 0) или (Сотрудник.НачисленныйНДФЛ_СНачалаГода &lt;&gt; 0) Тогда
			ДоходыНДФЛ.НоваяСтрока(); 
			ДоходыНДФЛ.ФизЛицо = Сотрудник;
			ДоходыНДФЛ.МесяцНалоговогоПериода = ДатаПериода;
			ДоходыНДФЛ.ПериодРегистрации = ДатаПериода;
			ДоходыНДФЛ.ДатаДохода = ДатаПериода;
			ДоходыНДФЛ.КодДохода = "2000";
			ДоходыНДФЛ.СуммаДохода = Сотрудник.ДоходОблагаемыйНДФЛ_СНачалаГода;
			ДоходыНДФЛ.КодВычета = "";
			ДоходыНДФЛ.СуммаВычета = 0;
			ДоходыНДФЛ.СуммаНалогаИсчисленная = 0;
		КонецЕсли;
		
		Если ДатаГод(ДатаВводаОстатков) &lt; 2010 Тогда
			Если (ДоходОблагаемыйПФР_СНачалаГода) &gt; 0 Тогда
				ДоходыЕСН.НоваяСтрока();
				ДоходыЕСН.ФизЛицо = Сотрудник;
				ДоходыЕСН.МесяцНалоговогоПериода = ДатаПериода;
				ДоходыЕСН.КодДоходаЕСН = "00011"; 
				ДоходыЕСН.СуммаДохода = ДоходОблагаемыйПФР_СНачалаГода;
				ДоходыЕСН.ОблагаетсяЕНВД = 1;
			КонецЕсли;
			
			Если (Сотрудник.НачисленныйПФР_нак_СНачалаГода &lt;&gt; 0) или
				(Сотрудник.НачисленныйПФР_страх_СНачалаГода &lt;&gt; 0) Тогда
				
				Если (ДоходОблагаемыйПФР_СНачалаГода &gt; 0) Тогда
					К_ЕНВД = ДоходОблагаемыйПФР_СНачалаГода;
					
				Иначе
					К_ЕНВД = 0;
				КонецЕсли;
				
				ПФРНакопительнаяЕНВД = Окр(К_ЕНВД * Сотрудник.НачисленныйПФР_нак_СНачалаГода, 2, 1);
				ПФРСтраховаяЕНВД = Окр(К_ЕНВД * Сотрудник.НачисленныйПФР_страх_СНачалаГода, 2, 1);
				
				НачисленныйЕСН.НоваяСтрока();
				НачисленныйЕСН.ФизЛицо = Сотрудник;
				НачисленныйЕСН.МесяцНалоговогоПериода = ДатаПериода;
				НачисленныйЕСН.ФедеральныйБюджет = 0;
				НачисленныйЕСН.ФСС = Сотрудник.НачисленныйФСС_СНачалаГода;
				НачисленныйЕСН.ФФОМС = 0;
				НачисленныйЕСН.ТФОМС = 0;
				НачисленныйЕСН.ПФРНакопительная = Сотрудник.НачисленныйПФР_нак_СНачалаГода - ПФРНакопительнаяЕНВД;
				НачисленныйЕСН.ПФРСтраховая = Сотрудник.НачисленныйПФР_страх_СНачалаГода - ПФРСтраховаяЕНВД;
				НачисленныйЕСН.ПримененнаяЛьготаФБ = 0;
				НачисленныйЕСН.ПримененнаяЛьготаФСС = 0;
				НачисленныйЕСН.ПримененнаяЛьготаФОМС = 0;
				НачисленныйЕСН.ПФРНакопительнаяЕНВД = ПФРНакопительнаяЕНВД;
				НачисленныйЕСН.ПФРСтраховаяЕНВД = ПФРСтраховаяЕНВД;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ДатаГод(ДатаВводаОстатков) &gt;= 2010 Тогда
		ДоходыВычетыНалогиСотрудников = "";
		глСобратьДанныеДляСтраховыхВзносов(ДоходыВычетыНалогиСотрудников, Сотрудник, КонецПериодаОсмотра,,,1);
		Месяц = ДатаМесяц(КонецПериодаОсмотра);		
		Если Месяц &gt;=1 Тогда
			Для НомерМесяца = 1 По Месяц Цикл
				СтрокаИтоговойТаблицы=""; 
				ДоходыВычетыНалогиСотрудников.НайтиЗначение(глПолучитьУникальныйКодСотрудника(Сотрудник)+глДополнитьСтроку(НомерМесяца,2),СтрокаИтоговойТаблицы,1);     
				Если СтрокаИтоговойТаблицы &lt;&gt; 0 Тогда
					
					ДоходТекМесяца = (ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,2)
						+ ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,15)
						+ ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,28))
						- ?(НомерМесяца = 1, 0,(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,2)
						+ ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,15)
						+ ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,28)));
					
					Если ДоходТекМесяца &lt;&gt; 0 Тогда
						
						ШагИнвалид = 13;
						ШагЕНВД = 26;
						Для НомерКолонки = 2 По 14 Цикл
							
							ДоходыСВЗ.НоваяСтрока();
							ДоходыСВЗ.ФизЛицо = Сотрудник;
							ДоходыСВЗ.МесяцРасчетногоПериода = Дата(ДатаГод(КонецПериодаОсмотра),НомерМесяца,1);
							ДоходЕНВДТекМесяц = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,28) - ?(НомерМесяца = 1, 0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,28));
							ДоходыСВЗ.ОблагаетсяЕНВД = ?(ДоходЕНВДТекМесяц &lt;&gt; 0, 1, 0);
							
							Если (НомерКолонки = 9)  ИЛИ (НомерКолонки = 11) ИЛИ (НомерКолонки = 14) Тогда
								ДоходыСВЗ.Скидка = (ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,НомерКолонки)
								+ ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,НомерКолонки+ШагИнвалид)
								+ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,НомерКолонки+ШагЕНВД))
								- ?(НомерМесяца = 1, 0,(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,НомерКолонки)
								+ ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,НомерКолонки+ШагИнвалид)
								+ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,НомерКолонки+ШагЕНВД)));
							Иначе
								ДоходыСВЗ.Результат = (ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,НомерКолонки)
								+ ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,НомерКолонки+ШагИнвалид)
								+ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,НомерКолонки+ШагЕНВД))
								- ?(НомерМесяца = 1, 0,(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,НомерКолонки)
								+ ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,НомерКолонки+ШагИнвалид)
								+ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,НомерКолонки+ШагЕНВД)));
							КонецЕсли;
							
							Если НомерКолонки = 2 Тогда								
								ДоходыСВЗ.ВидДохода = "ОблагаетсяЦеликом";
								Для НомВычКолонок = 3 По 14 Цикл
									Если (НомерКолонки = 9)  ИЛИ (НомерКолонки = 11) ИЛИ (НомерКолонки = 14) Тогда
									Иначе
										ДоходыСВЗ.Результат =  ДоходыСВЗ.Результат - ((ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,НомВычКолонок)
										+ ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,НомВычКолонок+ШагИнвалид)
										+ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,НомВычКолонок+ШагЕНВД))
										- ?(НомерМесяца = 1, 0,(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,НомВычКолонок)
										+ ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,НомВычКолонок+ШагИнвалид)
										+ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,НомВычКолонок+ШагЕНВД))));
									КонецЕсли;
								КонецЦикла;																
							КонецЕсли;
							
							Если (ДоходыСВЗ.Результат = 0) И (НомерКолонки &lt;&gt; 2) Тогда
								ДоходыСВЗ.УдалитьСтроку();
								Продолжить;
							КонецЕсли;
							
							Если НомерКолонки = 3 Тогда
								ДоходыСВЗ.ВидДохода = "НеЯвляетсяОбъектом";								
							ИначеЕсли НомерКолонки = 4 Тогда
								ДоходыСВЗ.ВидДохода = "НеОблагаетсяЦеликом";
							ИначеЕсли НомерКолонки = 5 Тогда
								ДоходыСВЗ.ВидДохода = "ПособияЗаСчетФСС";
							ИначеЕсли НомерКолонки = 6 Тогда
								ДоходыСВЗ.ВидДохода = "ДенежноеДовольствиеВоеннослужащих";
							ИначеЕсли НомерКолонки = 7 Тогда
								ДоходыСВЗ.ВидДохода = "ДенежноеСодержаниеПрокуроров";
							ИначеЕсли (НомерКолонки = 8) ИЛИ (НомерКолонки = 9) Тогда
								ДоходыСВЗ.ВидДохода = "МатпомощьПриРожденииРебенка";										
							ИначеЕсли (НомерКолонки = 10) ИЛИ (НомерКолонки = 11)  Тогда
								ДоходыСВЗ.ВидДохода = "Матпомощь";										
							ИначеЕсли НомерКолонки = 12 Тогда
								ДоходыСВЗ.ВидДохода = "ДоговорыГПХ";
							ИначеЕсли (НомерКолонки = 13) ИЛИ (НомерКолонки = 14) Тогда
								ДоходыСВЗ.ВидДохода = "АвторскиеОткрытия";
							КонецЕсли;
						КонецЦикла;
						
					
					НачисленныйСВЗ.НоваяСтрока();
					НачисленныйСВЗ.ФизЛицо = Сотрудник;
					НачисленныйСВЗ.МесяцРасчетногоПериода = Дата(ДатаГод(КонецПериодаОсмотра),НомерМесяца,1);							
					НачисленныйСВЗ.ФСС = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИсчисленоФСС") + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИсчисленоФССИнвалид")
					-?(НомерМесяца = 1, 0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"ИсчисленоФСС") + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"ИсчисленоФССИнвалид"));							
					НачисленныйСВЗ.ФФОМС = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИсчисленоФФОМС") + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИсчисленоФФОМСИнвалид")
					-?(НомерМесяца = 1, 0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"ИсчисленоФФОМС") + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"ИсчисленоФФОМСИнвалид"));					
					НачисленныйСВЗ.ТФОМС = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИсчисленоТФОМС") + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИсчисленоТФОМСИнвалид")
					-?(НомерМесяца = 1, 0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"ИсчисленоТФОМС") + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"ИсчисленоТФОМСИнвалид"));
					НачисленныйСВЗ.ПФРНакопительная = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИсчисленоПФРНак") + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИсчисленоПФРНакИнвалид")
					-?(НомерМесяца = 1, 0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"ИсчисленоПФРНак") + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"ИсчисленоПФРНакИнвалид"));
					НачисленныйСВЗ.ПФРНакопительнаяЕНВД = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИсчисленоПФРНакЕНВД")
					-?(НомерМесяца = 1, 0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"ИсчисленоПФРНакЕНВД"));
					НачисленныйСВЗ.ПФРСтраховая = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИсчисленоПФРСтрах") + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИсчисленоПФРСтрахИнвалид")
					-?(НомерМесяца = 1, 0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"ИсчисленоПФРСтрах") + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"ИсчисленоПФРСтрахИнвалид"));
					НачисленныйСВЗ.ПФРСтраховаяЕНВД = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИсчисленоПФРСтрахЕНВД")
					-?(НомерМесяца = 1, 0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"ИсчисленоПФРСтрахЕНВД"));
					
					Если (НачисленныйСВЗ.ФСС + НачисленныйСВЗ.ФФОМС + НачисленныйСВЗ.ТФОМС 
						+ НачисленныйСВЗ.ПФРНакопительная + НачисленныйСВЗ.ПФРНакопительнаяЕНВД
						+ НачисленныйСВЗ.ПФРСтраховая + НачисленныйСВЗ.ПФРСтраховаяЕНВД) = 0 Тогда
						НачисленныйСВЗ.УдалитьСтроку();
					КонецЕсли;
					
					КонецЕсли;
				КонецЕсли;		
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	// Соберем доходы из бухгалтерских итогов.
	БухИтДФЛ.ВыбратьПериоды(1);
	Пока БухИтДФЛ.ПолучитьПериод() = 1 Цикл
		
		УдержанныйНДФЛпоСт13 = 0;
		
		Если БухИтДФЛ.ПолучитьСубконто(ВидыСубконто.Сотрудники,, Сотрудник) = 1 Тогда
			Период = ДатаМесяц(БухИтДФЛ.КонДата);
			ДатаМесяца=БухИтДФЛ.КонДата;
			Инвалид = ?((Сотрудник.Инвалид.Получить(ДатаМесяца) = 1), 1, 0);
			
			БухИтДФЛ.ВыбратьСубконто(ВидыСубконто.ВидыНачисленийВыплат);
			Пока БухИтДФЛ.ПолучитьСубконто(ВидыСубконто.ВидыНачисленийВыплат) = 1 Цикл
				
				ВР = БухИтДФЛ.Субконто(2);
				ДатаДохода = БухИтДФЛ.КонДата;
				МесяцДохода = ДатаМесяц(ДатаДохода);
				
				СтавкаНДФЛ = глСтавкаНДФЛ(ВР,, ДатаДохода);
				СтрСтавкаНДФЛ = "Ставка" + Формат(СтавкаНДФЛ,"Ч(0)2");
				Если СтавкаНДФЛ = Ставка13 Тогда
					ОблагаетсяПоСт13 = ОблагаетсяПоСт13 + БухИтДФЛ.КО(); // для проверки права на вычеты
				КонецЕсли;
				
				СуммаРез = БухИтДФЛ.КО();
				СуммаПриходящаясяНаЕНВД = 0;
				
				СуммаИзПрибыли = 0;
				СуммаИзПрибылиНаЕНВД = 0;
				
				РасходыНаСтрахование = 0;
				РасходыНаСтрахованиеНаЕНВД = 0;
				
				ПрочиеЛьготы = 0;
				ПрочиеЛьготыНаЕНВД = 0;
				
				СуммаПоДоговорамГПХ = 0;
				СуммаПоДоговорамГПХнаЕНВД = 0;
				
				УдержанныйНДФЛпоВсемСтавкам = 0;
				
				Если СуммаРез &lt;&gt; 0 Тогда
					Если БухИт70.ПолучитьСубконто(1,, Сотрудник) = 1 Тогда
						Если БухИт70.ПолучитьСубконто(2,, ВР) = 1 Тогда
							Если БухИт70.ПолучитьПериод(, БухИтДФЛ.НачДата) = 1 Тогда
								
								БухИт70.ВыбратьКорСчета();
								Пока БухИт70.ПолучитьКорСчет() = 1 Цикл
									Если БухИт70.КорСчет.ПринадлежитГруппе(Сч84) = 1 Тогда
										СуммаИзПрибыли = СуммаИзПрибыли + БухИт70.КорКО();
										
									ИначеЕсли БухИт70.КорСчет.ПринадлежитГруппе(Сч99) = 1 Тогда
										СуммаИзПрибыли = СуммаИзПрибыли + БухИт70.КорКО();
										
									ИначеЕсли БухИт70.КорСчет = Сч69_1 Тогда
										РасходыНаСтрахование = РасходыНаСтрахование + БухИт70.КорКО();
										
									ИначеЕсли БухИт70.КорСчет = Сч68_1 Тогда
										УдержанныйНДФЛпоВсемСтавкам = УдержанныйНДФЛпоВсемСтавкам + БухИт70.КорДО();
										Если СтавкаНДФЛ = Ставка13 Тогда
											УдержанныйНДФЛпоСт13 = УдержанныйНДФЛпоСт13 + БухИт70.КорДО();
										КонецЕсли;
									КонецЕсли;
								КонецЦикла;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
					
					ОблагаетсяНДФЛ = СуммаРез;
					КодДохода = "";
					КодВычета = "";
					ВидДохода = ВР.ВидДохода;
					Если ПустоеЗначение(ВидДохода) = 0 Тогда
						
						КодДохода = ВидДохода.Код;
						
						Если ВидДохода.ВидВычета.Выбран() = 1 Тогда
							КодВычета = ВидДохода.ВидВычета.Код;
						КонецЕсли;
					КонецЕсли;
					
					//БухИтДФЛ.ВыбратьСчета();
					//Пока БухИтДФЛ.ПолучитьСчет() = 1 Цикл
					//	Если БухИтДФЛ.Счет = СчДФЛ_2 Тогда
					//		СуммаПриходящаясяНаЕНВД = СуммаПриходящаясяНаЕНВД + БухИтДФЛ.КО();
					//	КонецЕсли;
					//КонецЦикла;
					
					Если СуммаИзПрибыли &lt;&gt; 0 Тогда
						СуммаИзПрибылиНаЕНВД = ?(СуммаРез = 0, 0, СуммаПриходящаясяНаЕНВД / СуммаРез) * СуммаИзПрибыли;
					КонецЕсли;
					
					Если РасходыНаСтрахование &lt;&gt; 0 Тогда
						РасходыНаСтрахованиеНаЕНВД = ?(СуммаРез = 0, 0, СуммаПриходящаясяНаЕНВД / СуммаРез) * РасходыНаСтрахование;
					КонецЕсли;
					
					Если (ВР.ОблагаетсяПФР = 0) Тогда
						ПрочиеЛьготыНаЕНВД = СуммаПриходящаясяНаЕНВД - СуммаИзПрибылиНаЕНВД - РасходыНаСтрахованиеНаЕНВД;
						ПрочиеЛьготы = СуммаРез - СуммаИзПрибыли - РасходыНаСтрахование;
						
						СуммаПриходящаясяНаЕНВД = 0;
						СуммаРез = 0;
					Иначе
						СуммаРез = СуммаРез - СуммаИзПрибыли - РасходыНаСтрахование;
						СуммаПриходящаясяНаЕНВД = СуммаПриходящаясяНаЕНВД - СуммаИзПрибылиНаЕНВД - РасходыНаСтрахованиеНаЕНВД;
					КонецЕсли;
					
					Если УдержанныйНДФЛпоВсемСтавкам &lt;&gt; 0  Тогда
						УдержанныйНДФЛ.НоваяСтрока(); 
						УдержанныйНДФЛ.ФизЛицо = Сотрудник;            
						УдержанныйНДФЛ.МесяцНалоговогоПериода = БухИтДФЛ.НачДата;
						УдержанныйНДФЛ.ПериодРегистрации = БухИтДФЛ.НачДата;
						УдержанныйНДФЛ.СтавкаНалогообложения = СтрСтавкаНДФЛ;
						УдержанныйНДФЛ.Налог = УдержанныйНДФЛпоВсемСтавкам;
					КонецЕсли;
					
					Если Число(КодДохода) &lt;&gt; 0 Тогда
						ДоходыНДФЛ.НоваяСтрока(); 
						ДоходыНДФЛ.ФизЛицо = Сотрудник;
						ДоходыНДФЛ.МесяцНалоговогоПериода = БухИтДФЛ.НачДата;
						ДоходыНДФЛ.ПериодРегистрации = БухИтДФЛ.НачДата;
						ДоходыНДФЛ.ДатаДохода = БухИтДФЛ.НачДата;
						ДоходыНДФЛ.КодДохода = КодДохода;
						ДоходыНДФЛ.СуммаДохода = ОблагаетсяНДФЛ;
						ДоходыНДФЛ.КодВычета = КодВычета;
						ДоходыНДФЛ.СуммаВычета = 0;
						ДоходыНДФЛ.СуммаНалогаИсчисленная = 0;
						
						Если КодДохода = "2000" Тогда
							ДоходОблагаемыйНДФЛ_СНачалаГода = ДоходОблагаемыйНДФЛ_СНачалаГода + ОблагаетсяНДФЛ;
						КонецЕсли;
					КонецЕсли;
					
					ОблагаетсяЕСН = 0;
					ОблагаетсяФСС = СуммаРез - СуммаПриходящаясяНаЕНВД;
					
					Если Инвалид = 1 Тогда
						НоваяЛьготаФБ = Мин(100000, ПримененнаяЛьготаФБ + ОблагаетсяЕСН);
						НоваяЛьготаФСС = Мин(100000, ПримененнаяЛьготаФСС + ОблагаетсяФСС);
						
						ПримененнаяЛьготаФБзаМесяц = НоваяЛьготаФБ - ПримененнаяЛьготаФБ;
						ПримененнаяЛьготаФССзаМесяц = НоваяЛьготаФСС - ПримененнаяЛьготаФСС;
						
						ПримененнаяЛьготаФБ = НоваяЛьготаФБ;
						ПримененнаяЛьготаФСС = НоваяЛьготаФСС;
					КонецЕсли;
					
					Если (СуммаРез - СуммаПриходящаясяНаЕНВД) &gt; 0 Тогда
						ДоходыЕСН.НоваяСтрока();
						ДоходыЕСН.ФизЛицо = Сотрудник;
						ДоходыЕСН.МесяцНалоговогоПериода = БухИтДФЛ.НачДата;
						ДоходыЕСН.КодДоходаЕСН = "00011";
						ДоходыЕСН.СуммаДохода = СуммаРез - СуммаПриходящаясяНаЕНВД;
						ДоходыЕСН.ОблагаетсяЕНВД = 0;
					КонецЕсли;
					
					Если СуммаПриходящаясяНаЕНВД &gt; 0 Тогда
						ДоходыЕСН.НоваяСтрока();
						ДоходыЕСН.ФизЛицо = Сотрудник;
						ДоходыЕСН.МесяцНалоговогоПериода = БухИтДФЛ.НачДата;
						ДоходыЕСН.КодДоходаЕСН = "00011";
						ДоходыЕСН.СуммаДохода = СуммаПриходящаясяНаЕНВД;
						ДоходыЕСН.ОблагаетсяЕНВД = 1;
					КонецЕсли;
					
					Если (СуммаИзПрибыли - СуммаИзПрибылиНаЕНВД) &gt; 0 Тогда
						ДоходыЕСН.НоваяСтрока();
						ДоходыЕСН.ФизЛицо = Сотрудник;
						ДоходыЕСН.МесяцНалоговогоПериода = БухИтДФЛ.НачДата;
						ДоходыЕСН.КодДоходаЕСН = "00002";
						ДоходыЕСН.СуммаДохода = СуммаИзПрибыли - СуммаИзПрибылиНаЕНВД;
						ДоходыЕСН.ОблагаетсяЕНВД = 0;
					КонецЕсли;
					
					Если СуммаПриходящаясяНаЕНВД &gt; 0 Тогда
						ДоходыЕСН.НоваяСтрока();
						ДоходыЕСН.ФизЛицо = Сотрудник;
						ДоходыЕСН.МесяцНалоговогоПериода = БухИтДФЛ.НачДата;
						ДоходыЕСН.КодДоходаЕСН = "00002";
						ДоходыЕСН.СуммаДохода = СуммаИзПрибылиНаЕНВД;
						ДоходыЕСН.ОблагаетсяЕНВД = 1;
					КонецЕсли;
					
					Если (РасходыНаСтрахование - РасходыНаСтрахованиеНаЕНВД) &gt; 0 Тогда
						ДоходыЕСН.НоваяСтрока();
						ДоходыЕСН.ФизЛицо = Сотрудник;
						ДоходыЕСН.МесяцНалоговогоПериода = БухИтДФЛ.НачДата;
						ДоходыЕСН.КодДоходаЕСН = "00004";
						ДоходыЕСН.СуммаДохода = РасходыНаСтрахование - РасходыНаСтрахованиеНаЕНВД;
						ДоходыЕСН.ОблагаетсяЕНВД = 0;
					КонецЕсли;
					
					Если СуммаПриходящаясяНаЕНВД &gt; 0 Тогда
						ДоходыЕСН.НоваяСтрока();
						ДоходыЕСН.ФизЛицо = Сотрудник;
						ДоходыЕСН.МесяцНалоговогоПериода = БухИтДФЛ.НачДата;
						ДоходыЕСН.КодДоходаЕСН = "00004";
						ДоходыЕСН.СуммаДохода = РасходыНаСтрахованиеНаЕНВД;
						ДоходыЕСН.ОблагаетсяЕНВД = 1;
					КонецЕсли;
					
					Если (ПрочиеЛьготы - ПрочиеЛьготыНаЕНВД) &gt; 0 Тогда
						ДоходыЕСН.НоваяСтрока();
						ДоходыЕСН.ФизЛицо = Сотрудник;
						ДоходыЕСН.МесяцНалоговогоПериода = БухИтДФЛ.НачДата;
						ДоходыЕСН.КодДоходаЕСН = "00003";
						ДоходыЕСН.СуммаДохода = ПрочиеЛьготы - ПрочиеЛьготыНаЕНВД;
						ДоходыЕСН.ОблагаетсяЕНВД = 0;
					КонецЕсли;
					
					Если СуммаПриходящаясяНаЕНВД &gt; 0 Тогда
						ДоходыЕСН.НоваяСтрока();
						ДоходыЕСН.ФизЛицо = Сотрудник;
						ДоходыЕСН.МесяцНалоговогоПериода = БухИтДФЛ.НачДата;
						ДоходыЕСН.КодДоходаЕСН = "00003";
						ДоходыЕСН.СуммаДохода = ПрочиеЛьготыНаЕНВД;
						ДоходыЕСН.ОблагаетсяЕНВД = 1;
					КонецЕсли;
					
					Если СуммаПриходящаясяНаЕНВД &gt; 0 Тогда
						ДоходыЕСН.НоваяСтрока();
						ДоходыЕСН.ФизЛицо = Сотрудник;
						ДоходыЕСН.МесяцНалоговогоПериода = БухИтДФЛ.НачДата;
						ДоходыЕСН.КодДоходаЕСН = "00009";
						ДоходыЕСН.СуммаДохода = СуммаПоДоговорамГПХнаЕНВД;
						ДоходыЕСН.ОблагаетсяЕНВД = 1;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
			СписокКолонок.УдалитьВсе();
			СписокКолонок.Установить("Объект", Сотрудник);
			СписокКолонок.Установить("Регистрация", БухИтДФЛ.КонДата);
			СотрЗапросПоЕСН = глОтобратьСтрокиТаблицы(ЗапросПоЕСН, СписокКолонок);
			
			Если СотрЗапросПоЕСН.КоличествоСтрок() &gt; 0 Тогда
				СотрЗапросПоЕСН.ПолучитьСтрокуПоНомеру(1);
				
				Если (СуммаРез) &lt;&gt; 0 Тогда
					К_ЕНВД = (СуммаРез);
					
				Иначе
					К_ЕНВД = 0;
				КонецЕсли;
				
				ПФРНакопительнаяЕНВД = 0;//Окр(К_ЕНВД * СотрЗапросПоЕСН.ПФРНакопительная, 2, 1);
				ПФРСтраховаяЕНВД = 0;//Окр(К_ЕНВД * СотрЗапросПоЕСН.ПФРСтраховая, 2, 1);
				
				НачисленныйЕСН.НоваяСтрока();
				НачисленныйЕСН.ФизЛицо = Сотрудник;
				НачисленныйЕСН.МесяцНалоговогоПериода = БухИтДФЛ.НачДата;
				НачисленныйЕСН.ФедеральныйБюджет = СотрЗапросПоЕСН.ФедеральныйБюджет;
				НачисленныйЕСН.ФСС = СотрЗапросПоЕСН.ФСС;
				НачисленныйЕСН.ФФОМС = СотрЗапросПоЕСН.ФФОМС;
				НачисленныйЕСН.ТФОМС = СотрЗапросПоЕСН.ТФОМС;
				НачисленныйЕСН.ПФРНакопительная = СотрЗапросПоЕСН.ПФРНакопительная - ПФРНакопительнаяЕНВД;
				НачисленныйЕСН.ПФРСтраховая = СотрЗапросПоЕСН.ПФРСтраховая - ПФРСтраховаяЕНВД;
				НачисленныйЕСН.ПримененнаяЛьготаФБ = ПримененнаяЛьготаФБзаМесяц;
				НачисленныйЕСН.ПримененнаяЛьготаФСС = ПримененнаяЛьготаФССзаМесяц;
				НачисленныйЕСН.ПримененнаяЛьготаФОМС = ПримененнаяЛьготаФБзаМесяц;
				НачисленныйЕСН.ПФРНакопительнаяЕНВД = ПФРНакопительнаяЕНВД;
				НачисленныйЕСН.ПФРСтраховаяЕНВД = ПФРСтраховаяЕНВД;
			КонецЕсли;
		КонецЕсли;
		
		// Примененные вычеты
		Если глСотрудникЧислитсяРаботающим(Сотрудник, БухИтДФЛ.КонДата) = 1 Тогда
			ВычетыСотрудниковПоНДФЛ.ИспользоватьВладельца(Сотрудник);
			ВычетыСотрудниковПоНДФЛ.ВыбратьЭлементы();
			Пока ВычетыСотрудниковПоНДФЛ.ПолучитьЭлемент() = 1 Цикл
				
				Вычеты = 0;
				
				Если (Лев(ВычетыСотрудниковпоНДФЛ.ВидВычета.КодДляОтчетности2009, 1)) &lt;&gt; "1" Тогда
					Продолжить;
				КонецЕсли;
				
				Если ВычетыСотрудниковПоНДФЛ.ПометкаУдаления() = 1 Тогда
					Продолжить;
				КонецЕсли;
				
				ВычетПредоставлялся = 0;
				Если ПустоеЗначение(ВычетыСотрудниковПоНДФЛ.ДатаНачала) = 1 Тогда
					ВычетПредоставлялся = 0;							
				Иначе
					Если ВычетыСотрудниковПоНДФЛ.ДатаНачала &gt; БухИтДФЛ.КонДата Тогда
						ВычетПредоставлялся = 0;
					Иначе
						Если ПустоеЗначение(ВычетыСотрудниковПоНДФЛ.ДатаОкончания) = 1 Тогда
							ВычетПредоставлялся = 1;
						Иначе
							Если ВычетыСотрудниковПоНДФЛ.ДатаОкончания &lt; НачМесяца(БухИтДФЛ.КонДата) Тогда
								ВычетПредоставлялся = 0;
							Иначе
								ВычетПредоставлялся = 1;
							КонецЕсли;
							
						КонецЕсли;
					КонецЕсли;
					
				КонецЕсли;
				
				Если ВычетПредоставлялся = 0 Тогда
					Продолжить;
				КонецЕсли;
				
				РазмерВычета = ВычетыСотрудниковПоНДФЛ.ВидВычета.Сумма.Получить(БухИтДФЛ.КонДата);
				ПределДоходов = ВычетыСотрудниковПоНДФЛ.ВидВычета.ПределДоходов.Получить(БухИтДФЛ.КонДата);
				
				Если ПределДоходов &gt; 0 Тогда							
					Вычеты = РазмерВычета*?((ДоходОблагаемыйНДФЛ_СНачалаГода+ВаловойДоход_СНачалаГода)&lt;=ПределДоходов,1,0);
				Иначе
					Вычеты = РазмерВычета;
				КонецЕсли;
				
				Если (Вычеты &lt;&gt; 0) Тогда
					Если ДоходОблагаемыйНДФЛ_СНачалаГода_Пред+ВаловойДоход_СНачалаГода &lt;&gt; ДоходОблагаемыйНДФЛ_СНачалаГода+ВаловойДоход_СНачалаГода Тогда // нет начислений - накапливаем вычеты
						ИсчисленныйНДФЛ.НоваяСтрока();
						ИсчисленныйНДФЛ.ФизЛицо = Сотрудник;            
						ИсчисленныйНДФЛ.МесяцНалоговогоПериода = БухИтДФЛ.НачДата;
						ИсчисленныйНДФЛ.ПериодРегистрации = БухИтДФЛ.НачДата;
						ИсчисленныйНДФЛ.Налог = 0;
						ИсчисленныйНДФЛ.ПримененныйВычет = Вычеты;
						ИсчисленныйНДФЛ.КодВычета = ВычетыСотрудниковПоНДФЛ.ВидВычета;					
						
						ИсчисленныйНДФЛНакопительный.ВыбратьСтроки();
						Пока ИсчисленныйНДФЛНакопительный.ПолучитьСтроку() = 1 Цикл
							Если Сотрудник = ИсчисленныйНДФЛНакопительный.ФизЛицо тогда
								ИсчисленныйНДФЛ.НоваяСтрока();
								ИсчисленныйНДФЛ.ФизЛицо = Сотрудник;            
								ИсчисленныйНДФЛ.МесяцНалоговогоПериода = БухИтДФЛ.НачДата;
								ИсчисленныйНДФЛ.ПериодРегистрации = БухИтДФЛ.НачДата;
								ИсчисленныйНДФЛ.Налог = 0;
								ИсчисленныйНДФЛ.ПримененныйВычет = ИсчисленныйНДФЛНакопительный.ПримененныйВычет;
								ИсчисленныйНДФЛ.КодВычета = ИсчисленныйНДФЛНакопительный.КодВычета;					
								ИсчисленныйНДФЛНакопительный.УдалитьСтроки();
							КонецЕсли;
						КонецЦикла;
					Иначе
						ИсчисленныйНДФЛНакопительный.НоваяСтрока();
						ИсчисленныйНДФЛНакопительный.ФизЛицо = Сотрудник;            
						ИсчисленныйНДФЛНакопительный.МесяцНалоговогоПериода = БухИтДФЛ.НачДата;
						ИсчисленныйНДФЛНакопительный.ПериодРегистрации = БухИтДФЛ.НачДата;
						ИсчисленныйНДФЛНакопительный.Налог = 0;
						ИсчисленныйНДФЛНакопительный.ПримененныйВычет = Вычеты;
						ИсчисленныйНДФЛНакопительный.КодВычета = ВычетыСотрудниковПоНДФЛ.ВидВычета;					
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
			ДоходОблагаемыйНДФЛ_СНачалаГода_Пред = ДоходОблагаемыйНДФЛ_СНачалаГода;
			
			Если (УдержанныйНДФЛпоСт13 &lt;&gt; 0) Тогда
				ИсчисленныйНДФЛ.НоваяСтрока();
				ИсчисленныйНДФЛ.ФизЛицо = Сотрудник;            
				ИсчисленныйНДФЛ.МесяцНалоговогоПериода = БухИтДФЛ.НачДата;
				ИсчисленныйНДФЛ.ПериодРегистрации = БухИтДФЛ.НачДата;
				ИсчисленныйНДФЛ.Налог = УдержанныйНДФЛпоСт13;
				ИсчисленныйНДФЛ.ПримененныйВычет = 0;
				ИсчисленныйНДФЛ.КодВычета = "";
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	ИсчисленныйНДФЛНакопительный.УдалитьСтроки();
КонецЦикла;

ДоходыНДФЛ.Свернуть("ФизЛицо,МесяцНалоговогоПериода,ПериодРегистрации,ДатаДохода,КодДохода,КодВычета", "СуммаДохода,СуммаВычета,СуммаНалогаИсчисленная");
ИсчисленныйНДФЛ.Свернуть("ФизЛицо,МесяцНалоговогоПериода,ПериодРегистрации,КодВычета","Налог,ПримененныйВычет");

ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Начисления", Задолженность);
ВходящиеДанные.Установить("НДФЛСведенияОДоходах", ДоходыНДФЛ);
ВходящиеДанные.Установить("НДФЛИсчисленный13", ИсчисленныйНДФЛ);
ВходящиеДанные.Установить("НДФЛПредоставленныеВычеты", ИсчисленныйНДФЛ);
ВходящиеДанные.Установить("НДФЛУдержанный", УдержанныйНДФЛ);

Если ДатаГод(ДатаВводаОстатков) &gt;= 2010 Тогда
	ДоходыЕСН.УдалитьСтроки();	
	НачисленныйЕСН.УдалитьСтроки();
Иначе
	ДоходыСВЗ.УдалитьСтроки();
	НачисленныйСВЗ.УдалитьСтроки();	
КонецЕсли;

ВходящиеДанные.Установить("ЕСНСведенияОДоходах", ДоходыЕСН);
ВходящиеДанные.Установить("ЕСННалоги", НачисленныйЕСН);

ВходящиеДанные.Установить("СтраховыеВзносыСведенияОДоходах", ДоходыСВЗ);	
ВходящиеДанные.Установить("СтраховыеВзносы", НачисленныйСВЗ);

ВходящиеДанные.Установить("НалоговыйПериод", ДатаГод(ДатаВводаОстатков));

ВыгрузитьПоПравилу(,, ВходящиеДанные,, "НДФЛиЕСНДоходыИНалоги");

//****************** даные об оплатах для 2010 г.

Если (Параметры.ДатаКонцаПериодаВыгрузки &gt; ДатаВводаОстатков)
	И (ДатаГод(ДатаВводаОстатков) &gt;= 2010)Тогда
	
	БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
	БухИт.ИспользоватьСубконто();	
	Месяц = ДатаМесяц(Параметры.ДатаКонцаПериодаВыгрузки);
	
	ОснТекстКомментария = "# Перенесено из 1С:Бухгалтерии 7.7 (УСН) #";
	
	Для НомерМесяца = 1 По Месяц Цикл
		БухИт.ПериодМ(НомерМесяца, ДатаГод(Параметры.ДатаКонцаПериодаВыгрузки));
		
		ТекстКомментария = ОснТекстКомментария + " # период: " +ПериодСтр(БухИт.НачПериода(),БухИт.КонПериода()) + " # ";
		
		
		ПФРСтраховая = 0;
		ПФРНакопительная = 0;
		ФФОМС = 0;
		ТФОМС = 0;
		ФСС = 0;
		ФССНесчастныеСлучаи = 0;
		
		ПФРСтраховая2009 = 0;
		ПФРНакопительная2009 = 0;
		ФФОМС2009 = 0;
		ТФОМС2009 = 0;
		ФСС2009 = 0;
		
		Для НомерЗначения = 1 По Перечисление.ВидыПлатежей.КоличествоЗначений() Цикл
			
			ТекЗначение = Перечисление.ВидыПлатежей.ЗначениеПоНомеру(НомерЗначения);
			
			ПФРСтраховая = 			БухИт.ДО("69.21",,,ТекЗначение);
			ПФРНакопительная = 		БухИт.ДО("69.22",,,ТекЗначение);
			ФФОМС = 				БухИт.ДО("69.41",,,ТекЗначение);
			ТФОМС = 				БухИт.ДО("69.42",,,ТекЗначение);			
			ФСС = 					БухИт.ДО("69.31",,,ТекЗначение);
			ФССНесчастныеСлучаи = 	БухИт.ДО("69.11",,,ТекЗначение);
			
			Если (ПФРСтраховая + ПФРНакопительная) &lt;&gt; 0 Тогда				
				ВходящиеДанные = СоздатьОбъект("СписокЗначений");
				ВходящиеДанные.Установить("Дата", 					БухИт.КонПериода());
				ВходящиеДанные.Установить("ДатаПлатежа", 			БухИт.КонПериода());
				ВходящиеДанные.Установить("МесяцРасчетногоПериода",	БухИт.НачПериода());
				ВходящиеДанные.Установить("ВидПлатежа", 			ТекЗначение);
				ВходящиеДанные.Установить("ПФРНакопительная", 		ПФРНакопительная);
				ВходящиеДанные.Установить("ПФРСтраховая", 			ПФРСтраховая);
				ВходящиеДанные.Установить("ТФОМС", 					0);
				ВходящиеДанные.Установить("ФСС", 					0);
				ВходящиеДанные.Установить("ФССНесчастныеСлучаи", 	0);
				ВходящиеДанные.Установить("ФФОМС", 					0);
				ВходящиеДанные.Установить("ВидОперации",			"УплатаПФР");
				ВходящиеДанные.Установить("Комментарий",			ТекстКомментария + " # ПФР # ");
				ВыгрузитьПоПравилу(,, ВходящиеДанные,, "РасчетыПоСтраховымВзносам");
			КонецЕсли;
			
			Если (ФСС + ФССНесчастныеСлучаи) &lt;&gt; 0 Тогда				
				ВходящиеДанные = СоздатьОбъект("СписокЗначений");
				ВходящиеДанные.Установить("Дата", 					БухИт.КонПериода());
				ВходящиеДанные.Установить("ДатаПлатежа", 			БухИт.КонПериода());
				ВходящиеДанные.Установить("МесяцРасчетногоПериода",	БухИт.НачПериода());
				ВходящиеДанные.Установить("ВидПлатежа", 			ТекЗначение);
				ВходящиеДанные.Установить("ПФРНакопительная", 		0);
				ВходящиеДанные.Установить("ПФРСтраховая", 			0);
				ВходящиеДанные.Установить("ТФОМС", 					0);
				ВходящиеДанные.Установить("ФСС", 					ФСС);
				ВходящиеДанные.Установить("ФССНесчастныеСлучаи", 	ФССНесчастныеСлучаи);
				ВходящиеДанные.Установить("ФФОМС", 					0);
				ВходящиеДанные.Установить("ВидОперации",			"УплатаФСС");
				ВходящиеДанные.Установить("Комментарий",			ТекстКомментария + " # ФСС # ");
				ВыгрузитьПоПравилу(,, ВходящиеДанные,, "РасчетыПоСтраховымВзносам");
			КонецЕсли;
			
			Если (ФФОМС + ТФОМС) &lt;&gt; 0 Тогда				
				ВходящиеДанные = СоздатьОбъект("СписокЗначений");
				ВходящиеДанные.Установить("Дата", 					БухИт.КонПериода());
				ВходящиеДанные.Установить("ДатаПлатежа", 			БухИт.КонПериода());
				ВходящиеДанные.Установить("МесяцРасчетногоПериода",	БухИт.НачПериода());
				ВходящиеДанные.Установить("ВидПлатежа", 			ТекЗначение);
				ВходящиеДанные.Установить("ПФРНакопительная", 		0);
				ВходящиеДанные.Установить("ПФРСтраховая", 			0);
				ВходящиеДанные.Установить("ТФОМС", 					ТФОМС);
				ВходящиеДанные.Установить("ФСС", 					0);
				ВходящиеДанные.Установить("ФССНесчастныеСлучаи", 	0);
				ВходящиеДанные.Установить("ФФОМС", 					ФФОМС);
				ВходящиеДанные.Установить("ВидОперации",			"УплатаФОМС");
				ВходящиеДанные.Установить("Комментарий",			ТекстКомментария + " # ФОМС # ");
				ВыгрузитьПоПравилу(,, ВходящиеДанные,, "РасчетыПоСтраховымВзносам");
			КонецЕсли;
			
			ПФРСтраховая2009 = 			БухИт.ДО("69.51",,,ТекЗначение);
			ПФРНакопительная2009 = 		БухИт.ДО("69.52",,,ТекЗначение);
			
			Если (ПФРСтраховая2009 + ПФРНакопительная2009) &lt;&gt; 0 Тогда				
				ВходящиеДанные = СоздатьОбъект("СписокЗначений");
				ВходящиеДанные.Установить("Дата", 					БухИт.КонПериода());
				ВходящиеДанные.Установить("ДатаПлатежа", 			БухИт.КонПериода());
				ВходящиеДанные.Установить("МесяцРасчетногоПериода",	'01.12.2009');
				ВходящиеДанные.Установить("ВидПлатежа", 			ТекЗначение);
				ВходящиеДанные.Установить("ПФРНакопительная", 		ПФРНакопительная2009);
				ВходящиеДанные.Установить("ПФРСтраховая", 			ПФРСтраховая2009);
				ВходящиеДанные.Установить("ТФОМС", 					0);
				ВходящиеДанные.Установить("ФСС", 					0);
				ВходящиеДанные.Установить("ФССНесчастныеСлучаи", 	0);
				ВходящиеДанные.Установить("ФФОМС", 					0);
				ВходящиеДанные.Установить("ВидОперации",			"УплатаПФР");
				ВходящиеДанные.Установить("Комментарий",			ТекстКомментария + " # ПФР за 2009 г.# ");
				ВыгрузитьПоПравилу(,, ВходящиеДанные,, "РасчетыПоСтраховымВзносам");
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
КонецЕсли;</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>ЗаписиКУДиР</Код>
				<Наименование>Записи книги учета доходов и расходов</Наименование>
				<Порядок>1350</Порядок>
				<ПередОбработкойПравила>////////////////////////////////////////
////Раздел 1
ОчиститьПараметры();

ВыделятьВходящийНДС = Константа.ВыделятьВходящийНДС.Получить(Параметры.ДатаКонцаПериодаВыгрузки);
ОбъектНалогообложения = Константа.ОбъектНалогообложения.Получить(Параметры.ДатаКонцаПериодаВыгрузки);
ДоходыМинусРасходы = Перечисление.ВариантОбъектаНалогообложения.ДоходыМинусРасходы;

СчН01 = СчетПоКоду("Н01"); 
СчН03 = СчетПоКоду("Н03");
СчН05 = СчетПоКоду("Н05");                                                        

ТаблицаСтрок = СоздатьОбъект("ТаблицаЗначений");
ТаблицаСтрок.НоваяКолонка("ДатаНомер", "Строка");
ТаблицаСтрок.НоваяКолонка("Содержание");
ТаблицаСтрок.НоваяКолонка("Графа4");
ТаблицаСтрок.НоваяКолонка("Графа5");
ТаблицаСтрок.НоваяКолонка("Графа6");
ТаблицаСтрок.НоваяКолонка("Графа7");
ТаблицаСтрок.НоваяКолонка("ДоходыЕНВД", "Число");

ТаблУчета = СоздатьОбъект("ТаблицаЗначений");
ТаблУчета.НоваяКолонка("Документ", "Документ");
ТаблУчета.НоваяКолонка("НомерСтрокиДок", "Число");
ТаблУчета.НоваяКолонка("ДатаНомерДок", "Строка");
ТаблУчета.НоваяКолонка("СодержОперации");
ТаблУчета.НоваяКолонка("Описание");
ТаблУчета.НоваяКолонка("Доходы");
ТаблУчета.НоваяКолонка("Расходы");  
ТаблУчета.НоваяКолонка("ДоходыБУ");
ТаблУчета.НоваяКолонка("РасходыБУ");
ТаблУчета.НоваяКолонка("ДоходыЕНВД");
ТаблУчета.НоваяКолонка("НомерКвартала", "Число", 1, 0);
ТаблУчета.НоваяКолонка("НДС");
ТаблУчета.НоваяКолонка("Валюта");
ТаблУчета.НоваяКолонка("ВалСумма");
ТаблУчета.НоваяКолонка("Счетчик","Число");

БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
БухИт.ВключатьСубсчета(-1, 0);
БухИт.Опции(1,0);
Если ОбъектНалогообложения = ДоходыМинусРасходы Тогда
	СписокСчетов = "Н01, Н02.1, Н02.2, Н02.4, Н03, Н04, Н05";
Иначе
	СписокСчетов = "Н01, Н03, Н05";
КонецЕсли;

БухИт.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков, Параметры.ДатаКонцаПериодаВыгрузки, СписокСчетов,,,, "Проводка",);
БухИт.ВыбратьПериоды(,,,);
Пока БухИт.ПолучитьПериод(,) = 1 Цикл
	
	Доходы = 0;
	Расходы = 0; 
	ДоходыБУ = 0;
	РасходыБУ = 0;                                  
	ДоходыЕНВД = 0;
	
	//Не обрабатывать если перемещение между счетами
	//например банк - касса
	
	БухИт.ВыбратьСчета(,,,);
	Пока БухИт.ПолучитьСчет(,) = 1 Цикл
		Если БухИт.Счет = СчН01 Тогда
			Доходы = Доходы + БухИт.КО();
		ИначеЕсли БухИт.Счет.Родитель(1) = СчетПоКоду("Н02") Тогда // Н02.1, Н02.2
			Расходы = Расходы + БухИт.ДО();
		ИначеЕсли БухИт.Счет = СчН03 Тогда
			ДоходыБУ = ДоходыБУ + БухИт.КО();
		ИначеЕсли БухИт.Счет = СчН05 Тогда
			ДоходыЕНВД = ДоходыЕНВД + БухИт.КО();
		ИначеЕсли (БухИт.ДО()&lt;&gt;0) Тогда
			РасходыБУ = РасходыБУ + БухИт.ДО();
		КонецЕсли;
	КонецЦикла;
	
	ТаблУчета.НоваяСтрока();
		
	Параметры.ПараметрыАлгоритмов.Установить("ОперацияКУДиР",БухИт.Операция);
	Параметры.ПараметрыАлгоритмов.Установить("ТаблицаКУДиР",ТаблУчета);
	
	ПолучитьАтрибутыПроводки();
	
	ТаблУчета.Доходы  = Доходы;
	ТаблУчета.Расходы = Расходы;
	ТаблУчета.ДоходыБУ  = ДоходыБУ;
	ТаблУчета.РасходыБУ = РасходыБУ;
	ТаблУчета.ДоходыЕНВД = ДоходыЕНВД;
	
КонецЦикла;

ТаблУчета.Свернуть("Документ, НомерСтрокиДок, ДатаНомерДок, ДоходыЕНВДПризнак", " СодержОперации, ДоходыБУ, Доходы,  РасходыБУ, Расходы, НДС, ДоходыЕНВД");
ТаблУчета.Сортировать("+Документ, НомерСтрокиДок, ДатаНомерДок");

ТаблУчета.Сортировать("Документ", 1);
ТекДок = "";

ТаблУчета.ВыбратьСтроки();
Пока ТаблУчета.ПолучитьСтроку() = 1 Цикл
	Если (ПустоеЗначение(ТекДок) = 1) или (ТекДок &lt;&gt; ТаблУчета.Документ) Тогда
		
		//Добавить документ ЗаписьКУДиР
		Если (ПустоеЗначение(ТекДок) = 0) и (ТаблицаСтрок.КоличествоСтрок() &gt; 0) Тогда
			
			ВходящиеДанные = СоздатьОбъект("СписокЗначений");
			ВходящиеДанные.Установить("Дата", 	ТекДок.ДатаДок);
			ВходящиеДанные.Установить("Раздел1",ТаблицаСтрок);
			ВходящиеДанные.Установить("ОС",		СоздатьОбъект("ТаблицаЗначений"));
			ВходящиеДанные.Установить("НМА",	СоздатьОбъект("ТаблицаЗначений"));
			
			Параметры.ПараметрыАлгоритмов.Установить("ДопКомментарий", Строка(ТекДок));
			
			ВыгрузитьПоПравилу(,,ВходящиеДанные,, "ЗаписьКУДиР");
			
			Параметры.ПараметрыАлгоритмов.Установить("ДопКомментарий", "");
		КонецЕсли;
				
		ТекДок = ТаблУчета.Документ;
		ТаблицаСтрок.УдалитьСтроки();
		
	КонецЕсли;
	
	ДатаНомерДок = ТаблУчета.ДатаНомерДок;
	СодержОпер   = ТаблУчета.СодержОперации;
	Доходы       = ТаблУчета.Доходы;
	ДоходыБУ     = ТаблУчета.ДоходыБУ;
	ДоходыЕНВД  = ТаблУчета.ДоходыЕНВД;
	
	Если (ВыделятьВходящийНДС = 0) Тогда 
		Расходы  = ТаблУчета.Расходы - ТаблУчета.НДС;			
	Иначе
		Расходы  = ТаблУчета.Расходы;
	КонецЕсли;
	
	НДСрасходовБУ = 0;
	Если (ТаблУчета.РасходыБУ &gt; 0) и (ТаблУчета.Расходы &gt; 0) и (ТаблУчета.НДС &gt; 0) Тогда 
		НДСрасходовБУ = ?(ТаблУчета.РасходыБУ &gt;= ТаблУчета.Расходы, ТаблУчета.НДС, ТаблУчета.НДС*ТаблУчета.РасходыБУ/ТаблУчета.Расходы);
		РасходыБУ  = ТаблУчета.РасходыБУ - НДСрасходовБУ;
	Иначе
		РасходыБУ  = ТаблУчета.РасходыБУ;
	КонецЕсли;
	
	Если ПустоеЗначение(ДоходыБУ) + ПустоеЗначение(Доходы) + ПустоеЗначение(РасходыБУ) + ПустоеЗначение(Расходы) &lt; 4 Тогда
		
		//Добавить строку КУДиР
		ТаблицаСтрок.НоваяСтрока();
		ТаблицаСтрок.ДатаНомер = ДатаНомерДок;
		ТаблицаСтрок.Содержание = СодержОпер;
		ТаблицаСтрок.Графа4 = ДоходыБУ;
		ТаблицаСтрок.Графа5 = Доходы;
		ТаблицаСтрок.Графа6 = РасходыБУ;
		ТаблицаСтрок.Графа7 = Расходы;
		ТаблицаСтрок.ДоходыЕНВД = ?(ДоходыЕНВД &lt;&gt; 0, 1, 0);
		
	КонецЕсли;
	
	ДатаНомерДок = ТаблУчета.ДатаНомерДок;
	СодержОпер   = ТаблУчета.СодержОперации +" (НДС)";
	Доходы       = 0; 
	ДоходыБУ     = 0;
	Расходы  	= ТаблУчета.НДС;
	РасходыБУ  	= НДСрасходовБУ;
	
	Если ПустоеЗначение(ДоходыБУ) + ПустоеЗначение(Доходы) + ПустоеЗначение(РасходыБУ) + ПустоеЗначение(Расходы) &lt; 4 Тогда
		
		//Добавить строку КУДиР
		ТаблицаСтрок.НоваяСтрока();
		ТаблицаСтрок.ДатаНомер = ДатаНомерДок;
		ТаблицаСтрок.Содержание = СодержОпер;
		ТаблицаСтрок.Графа4 = ДоходыБУ;
		ТаблицаСтрок.Графа5 = Доходы;
		ТаблицаСтрок.Графа6 = РасходыБУ;
		ТаблицаСтрок.Графа7 = Расходы;
		ТаблицаСтрок.ДоходыЕНВД = ?(ДоходыЕНВД &lt;&gt; 0, 1, 0);
		
	КонецЕсли;
	
КонецЦикла;

//Добавить документ ЗаписьКУДиР
ТаблицаСтрокРаздела1 = СоздатьОбъект("ТаблицаЗначений");
ТаблУчета.Выгрузить(ТаблицаСтрокРаздела1);
Параметры.ПараметрыАлгоритмов.Установить("Раздел1", ТаблицаСтрокРаздела1);
	
Если (ПустоеЗначение(ТекДок) = 0) и (ТаблицаСтрок.КоличествоСтрок() &gt; 0) Тогда
	
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
	ВходящиеДанные.Установить("Дата", 	ТекДок.ДатаДок);
	ВходящиеДанные.Установить("Раздел1",ТаблицаСтрок);
	ВходящиеДанные.Установить("НМА",    СоздатьОбъект("ТаблицаЗначений"));
	ВходящиеДанные.Установить("ОС",		СоздатьОбъект("ТаблицаЗначений"));
	
	Параметры.ПараметрыАлгоритмов.Установить("ДопКомментарий", Строка(ТекДок));
	
	ВыгрузитьПоПравилу(,,ВходящиеДанные,, "ЗаписьКУДиР");
	
	Параметры.ПараметрыАлгоритмов.Установить("ДопКомментарий", "");

КонецЕсли;

////////////////////////////////////////
////Раздел 2 (ОС)

ТаблицаСтрок = СоздатьОбъект("ТаблицаЗначений"); 
ТаблицаСтрок.НоваяКолонка("ОсновноеСредство");
ТаблицаСтрок.НоваяКолонка("ДатаОплаты");
ТаблицаСтрок.НоваяКолонка("Графа5_ПервоначальнаяСтоимость");
ТаблицаСтрок.НоваяКолонка("Графа6_ОстаточнаяСтоимость");
ТаблицаСтрок.НоваяКолонка("Графа8_КолКварталовВОтчетномПериоде");
ТаблицаСтрок.НоваяКолонка("Графа9_КолКварталовВНалПериоде");
ТаблицаСтрок.НоваяКолонка("Графа10_ДоляРасходовЗаНалПериод");
ТаблицаСтрок.НоваяКолонка("Графа11_ДоляРасходовЗаКвартал");
ТаблицаСтрок.НоваяКолонка("Графа12_СуммаРасходовЗаОтчетнПериод");
ТаблицаСтрок.НоваяКолонка("Графа13_СуммаРасходовЗаКвартал");
ТаблицаСтрок.НоваяКолонка("Графа14_РасходыПрошлыхПериодов");
ТаблицаСтрок.НоваяКолонка("Графа15_ОстатокРасходов");

Оплата = СоздатьОбъект("Периодический");	

КолвоКварталов = Цел(ДатаМесяц(КонКвартала(Параметры.ДатаКонцаПериодаВыгрузки))/3);
Год 		   = НачГода(Параметры.ДатаКонцаПериодаВыгрузки);

Для ТекКвартал = 1 По КолвоКварталов Цикл
	
	Дата2 = КонКвартала(ДобавитьМесяц(Год, (ТекКвартал - 1) * 3));
	ТаблицаСтрок.УдалитьСтроки();
	
	БухИтЗаОтчетныйПериод = СоздатьОбъект("БухгалтерскиеИтоги");
	БухИтЗаОтчетныйПериод.ПериодКВ(Дата2);
	
	БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
	БухИт.ИспользоватьСубконто(ВидыСубконто.ОсновныеСредства);
	БухИт.ИспользоватьСубконто(ВидыСубконто.ДатыОплаты);
	БухИт.ВыполнитьЗапрос(НачГода(Дата2), Дата2, "Н02.1",,,,,);
	БухИт.ВыбратьСубконто(1);
	Пока БухИт.ПолучитьСубконто(1) = 1 Цикл
		
		// Основное средство отражаем в отчете только если по нему были признаны расходы.
		Если БухИт.ДО() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ОсновноеСредство = БухИт.Субконто(ВидыСубконто.ОсновныеСредства);
		
		СрокПолезногоИспользования = Цел(ОсновноеСредство.СрокПолезногоИспользованияН/12) + ?(ОсновноеСредство.СрокПолезногоИспользованияН%12 &lt;&gt; 0, 1, 0);
		
		Если ОсновноеСредство.ДатаПриобретения &lt; Константа.ДатаПереходаНаУСН Тогда
			ОбъектПриобретенДоПримененияУСН = 1;
		Иначе
			ОбъектПриобретенДоПримененияУСН = 0;
		КонецЕсли;
		
		ПервоначальнаяСтоимость = ОсновноеСредство.ПервоначальнаяСтоимостьН;
		
		Оплата.ИспользоватьОбъект("Оплата", ОсновноеСредство);
		
		СуммаРасходовЗаОтчетныйПериод   = БухИт.ДО();
		СуммаРасходовЗаПоследнийКвартал = БухИтЗаОтчетныйПериод.ДО("Н02.1",,, ОсновноеСредство);
		СуммаРасходовПредыдущихПериодов = БухИт.СНД();
		
		Если ОбъектПриобретенДоПримененияУСН = 1 Тогда
			ОстаточнаяСтоимость = Макс(0, ОсновноеСредство.ПервоначальнаяСтоимостьН - ОсновноеСредство.НачисленнаяАмортизацияН);;
		Иначе	
			ОстаточнаяСтоимость = ОсновноеСредство.ПервоначальнаяСтоимостьН;
		КонецЕсли;
		
		БухИт.ВыбратьСубконто(2);
		Пока БухИт.ПолучитьСубконто(2) = 1 Цикл
			ДатаОплаты = БухИт.Субконто(ВидыСубконто.ДатыОплаты);
			
			Если (ДатаГод(Макс(ДатаОплаты, ОсновноеСредство.ДатаВводаВЭксплуатацию))&lt;&gt; ДатаГод(Дата2))
				и (ОбъектПриобретенДоПримененияУСН = 0) Тогда
				Продолжить;
			КонецЕсли;
			
			СуммаОплаты = 0;
			Если ДатаОплаты &lt; Константа.ДатаПереходаНаУСН Тогда
				Оплата.ВыбратьЗначения(, Константа.ДатаПереходаНаУСН - 1);
			Иначе	
				Оплата.ВыбратьЗначения(ДатаОплаты, ДатаОплаты);
			КонецЕсли;	
			Пока Оплата.ПолучитьЗначение() = 1 Цикл
				СуммаОплаты = СуммаОплаты + Оплата.Значение;
			КонецЦикла;
			
			//РассчитатьКоличествоМесяцевЭксплуатации(КоличествоКварталовВОтчетномПериоде, КоличествоКварталовВНалоговомПериоде, Макс(ДатаОплаты, ОсновноеСредство.ДатаВводаВЭксплуатацию));
			ДатаВключенияСтоимостиВРасходы = Макс(ДатаОплаты, ОсновноеСредство.ДатаВводаВЭксплуатацию);
			КоличествоКварталовВОтчетномПериоде  = 0;
			КоличествоКварталовВНалоговомПериоде = 0;
			
			НомерКвартала = ДатаМесяц(КонКвартала(Дата2)) / 3;
			Если ДатаГод(ДатаВключенияСтоимостиВРасходы) &lt; ДатаГод(Дата2) Тогда
				КоличествоКварталовВОтчетномПериоде  = НомерКвартала;
				КоличествоКварталовВНалоговомПериоде = 4;
				
			ИначеЕсли ДатаВключенияСтоимостиВРасходы &lt;= Дата2 Тогда
				НомерКварталаНачалаРасчета = ДатаМесяц(КонКвартала(ДатаВключенияСтоимостиВРасходы)) / 3;
				КоличествоКварталовВОтчетномПериоде  = НомерКвартала - НомерКварталаНачалаРасчета;
				КоличествоКварталовВНалоговомПериоде = 5 - НомерКварталаНачалаРасчета;
				
				Если (ДатаМесяц(ДатаВключенияСтоимостиВРасходы) &lt;&gt; ДатаМесяц(КонКвартала(ДатаВключенияСтоимостиВРасходы))) или (ДатаВключенияСтоимостиВРасходы &gt;= '01.01.2006') Тогда
					КоличествоКварталовВОтчетномПериоде = КоличествоКварталовВОтчетномПериоде + 1;
				Иначе
					КоличествоКварталовВНалоговомПериоде = КоличествоКварталовВНалоговомПериоде - 1;
				КонецЕсли;
			КонецЕсли;
			
			СуммаРасходов = БухИт.ДО();
			ОплаченнаяОстаточнаяСтоимость = ?(ОстаточнаяСтоимость=0,0,ОстаточнаяСтоимость*(СуммаОплаты/ПервоначальнаяСтоимость));
			
			Если (ОбъектПриобретенДоПримененияУСН = 0) Тогда
				Если (Дата2 &lt; '01.01.2006') Тогда
					КоличествоКварталовВОтчетномПериоде  = "";
					КоличествоКварталовВНалоговомПериоде = "";
				Иначе
					КоличествоКварталовВОтчетномПериоде  = "";
				КонецЕсли;
			КонецЕсли;
			
			// Добавим строку в таблицу строк
			
			ТаблицаСтрок.НоваяСтрока();
			ТаблицаСтрок.ОсновноеСредство 						= ОсновноеСредство;
			ТаблицаСтрок.ДатаОплаты 							= ДатаОплаты;
			ТаблицаСтрок.Графа5_ПервоначальнаяСтоимость 		= Мин(СуммаОплаты,ОсновноеСредство.ПервоначальнаяСтоимостьН);
			ТаблицаСтрок.Графа6_ОстаточнаяСтоимость 			= Мин(ОстаточнаяСтоимость,ОплаченнаяОстаточнаяСтоимость);
			ТаблицаСтрок.Графа8_КолКварталовВОтчетномПериоде 	= КоличествоКварталовВОтчетномПериоде;
			ТаблицаСтрок.Графа9_КолКварталовВНалПериоде 		= КоличествоКварталовВНалоговомПериоде;
			ТаблицаСтрок.Графа10_ДоляРасходовЗаНалПериод 		= 0;
			ТаблицаСтрок.Графа11_ДоляРасходовЗаКвартал 			= 0;
			ТаблицаСтрок.Графа12_СуммаРасходовЗаОтчетнПериод 	= СуммаРасходов;
			ТаблицаСтрок.Графа13_СуммаРасходовЗаКвартал 		= Мин(ТаблицаСтрок.Графа5_ПервоначальнаяСтоимость, БухИтЗаОтчетныйПериод.ДО("Н02.1",,, ОсновноеСредство,ДатаОплаты));
			ТаблицаСтрок.Графа14_РасходыПрошлыхПериодов 		= СуммаРасходовПредыдущихПериодов;
			//ТаблицаСтрок.Графа15_ОстатокРасходов 				= 0;
			ТаблицаСтрок.Графа15_ОстатокРасходов		 = Макс(0, ОстаточнаяСтоимость - СуммаРасходовЗаОтчетныйПериод - СуммаРасходовПредыдущихПериодов);
			
			Если (Дата2 &gt; '01.01.2006') и (КонКвартала(Дата2) &lt; КонГода(Дата2)) Тогда
				ТаблицаСтрок.Графа12_СуммаРасходовЗаОтчетнПериод = 0;
			КонецЕсли;
			
			Если ОбъектПриобретенДоПримененияУСН = 1 Тогда
				
				//ПроцентПринятыхРасходов(СрокПолезногоИспользования);
				ПроцентСписания = 0;
				Если СрокПолезногоИспользования &lt;= 3 Тогда
					Если ДатаГод(Дата2) = ДатаГод(Константа.ДатаПереходаНаУСН) Тогда
						ПроцентСписания = 100;
					КонецЕсли;
				ИначеЕсли СрокПолезногоИспользования &lt;= 15 Тогда
					Если ДатаГод(Дата2) = ДатаГод(Константа.ДатаПереходаНаУСН) Тогда
						ПроцентСписания = 50;
					ИначеЕсли (ДатаГод(Дата2) - 1) = ДатаГод(Константа.ДатаПереходаНаУСН) Тогда
						ПроцентСписания = 30;
					ИначеЕсли (ДатаГод(Дата2) - 2) = ДатаГод(Константа.ДатаПереходаНаУСН) Тогда
						ПроцентСписания = 20;
					КонецЕсли;
				Иначе
					ПроцентСписания = 10;
				КонецЕсли;
				
				ТаблицаСтрок.Графа10_ДоляРасходовЗаНалПериод = ПроцентСписания;
				ТаблицаСтрок.Графа11_ДоляРасходовЗаКвартал	 = ?(КоличествоКварталовВНалоговомПериоде = 0, 0,	Окр(ТаблицаСтрок.Графа10_ДоляРасходовЗаНалПериод/КоличествоКварталовВНалоговомПериоде, 4));
				ТаблицаСтрок.Графа15_ОстатокРасходов		 = Макс(0, ОстаточнаяСтоимость - СуммаРасходовЗаОтчетныйПериод - СуммаРасходовПредыдущихПериодов);
				
			Иначе
				Если (Дата2 &gt; '01.01.2006') Тогда
					ТаблицаСтрок.Графа10_ДоляРасходовЗаНалПериод = 100;
					ТаблицаСтрок.Графа11_ДоляРасходовЗаКвартал	 = ?(КоличествоКварталовВНалоговомПериоде = 0, 0, Окр(ТаблицаСтрок.Графа10_ДоляРасходовЗаНалПериод/КоличествоКварталовВНалоговомПериоде, 2));
					ТаблицаСтрок.Графа6_ОстаточнаяСтоимость		 = 0;
					ТаблицаСтрок.Графа14_РасходыПрошлыхПериодов	 = 0; 
					ТаблицаСтрок.Графа15_ОстатокРасходов		 = Макс(0, ОстаточнаяСтоимость - СуммаРасходовЗаОтчетныйПериод - СуммаРасходовПредыдущихПериодов);
					//ТаблицаСтрок.Графа15_ОстатокРасходов		 = 0;
					Если КонКвартала(Дата2) &lt; КонГода(Дата2) Тогда
						ТаблицаСтрок.Графа12_СуммаРасходовЗаОтчетнПериод = 0;
					КонецЕсли;
				Иначе
					ТаблицаСтрок.Графа8_КолКварталовВОтчетномПериоде = 0;
					ТаблицаСтрок.Графа9_КолКварталовВНалПериоде		 = 0;
					ТаблицаСтрок.Графа10_ДоляРасходовЗаНалПериод     = 0;
					ТаблицаСтрок.Графа11_ДоляРасходовЗаКвартал	     = 0;
					ТаблицаСтрок.Графа15_ОстатокРасходов			 = Макс(0, ПервоначальнаяСтоимость - БухИт.СКД());
				КонецЕсли; 
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	ТаблицаСтрок.Свернуть("ОсновноеСредство, ДатаОплаты, Графа8_КолКварталовВОтчетномПериоде, Графа9_КолКварталовВНалПериоде, Графа10_ДоляРасходовЗаНалПериод, Графа11_ДоляРасходовЗаКвартал", 
	"Графа5_ПервоначальнаяСтоимость, Графа6_ОстаточнаяСтоимость, Графа12_СуммаРасходовЗаОтчетнПериод, Графа13_СуммаРасходовЗаКвартал, Графа14_РасходыПрошлыхПериодов, Графа15_ОстатокРасходов");
	
	ТаблицаСтрок.ВыбратьСтроки();
	Пока ТаблицаСтрок.ПолучитьСтроку() = 1 Цикл
		ТаблицаСтрок.Графа12_СуммаРасходовЗаОтчетнПериод = Мин(ТаблицаСтрок.Графа12_СуммаРасходовЗаОтчетнПериод, ТаблицаСтрок.Графа5_ПервоначальнаяСтоимость);		
	КонецЦикла;
	
	
	//Сформировать документ
	
	Если ТаблицаСтрок.КоличествоСтрок() &gt; 0 Тогда
		ВходящиеДанные = СоздатьОбъект("СписокЗначений");
		ВходящиеДанные.Установить("Дата", 	Дата2);
		ВходящиеДанные.Установить("Раздел1",СоздатьОбъект("ТаблицаЗначений"));
		ВходящиеДанные.Установить("НМА",СоздатьОбъект("ТаблицаЗначений"));
		ВходящиеДанные.Установить("ОС",ТаблицаСтрок);
		
		Параметры.ПараметрыАлгоритмов.Установить("ДопКомментарий", "Раздел II (ОС)");
		
		ВыгрузитьПоПравилу(,,ВходящиеДанные,, "ЗаписьКУДиР");
		
		Параметры.ПараметрыАлгоритмов.Установить("ДопКомментарий", "");
	КонецЕсли;
	
КонецЦикла;
	
////////////////////////////////////////
////Раздел 2 (НМА)

ТаблицаСтрок = СоздатьОбъект("ТаблицаЗначений"); 
ТаблицаСтрок.НоваяКолонка("НематериальныйАктив");
ТаблицаСтрок.НоваяКолонка("ДатаОплаты");
ТаблицаСтрок.НоваяКолонка("Графа5_ПервоначальнаяСтоимость");
ТаблицаСтрок.НоваяКолонка("Графа6_ОстаточнаяСтоимость");
ТаблицаСтрок.НоваяКолонка("Графа8_КолКварталовВОтчетномПериоде");
ТаблицаСтрок.НоваяКолонка("Графа9_КолКварталовВНалПериоде");
ТаблицаСтрок.НоваяКолонка("Графа10_ДоляРасходовЗаНалПериод");
ТаблицаСтрок.НоваяКолонка("Графа11_ДоляРасходовЗаКвартал");
ТаблицаСтрок.НоваяКолонка("Графа12_СуммаРасходовЗаОтчетнПериод");
ТаблицаСтрок.НоваяКолонка("Графа13_СуммаРасходовЗаКвартал");
ТаблицаСтрок.НоваяКолонка("Графа14_РасходыПрошлыхПериодов");
ТаблицаСтрок.НоваяКолонка("Графа15_ОстатокРасходов");

Оплата = СоздатьОбъект("Периодический");	

КолвоКварталов = Цел(ДатаМесяц(КонКвартала(Параметры.ДатаКонцаПериодаВыгрузки))/3);
Год 		   = НачГода(Параметры.ДатаКонцаПериодаВыгрузки);

Для ТекКвартал = 1 По КолвоКварталов Цикл
	
	Дата2 = КонКвартала(ДобавитьМесяц(Год, (ТекКвартал - 1) * 3));
	ТаблицаСтрок.УдалитьСтроки();
	
	БухИтЗаОтчетныйПериод = СоздатьОбъект("БухгалтерскиеИтоги");
	БухИтЗаОтчетныйПериод.ПериодКВ(Дата2);
	
	БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
	БухИт.ИспользоватьСубконто(ВидыСубконто.НематериальныеАктивы);
	БухИт.ИспользоватьСубконто(ВидыСубконто.ДатыОплаты);
	БухИт.ВыполнитьЗапрос(НачГода(Дата2), Дата2, "Н02.4",,,,,);
	БухИт.ВыбратьСубконто(1);
	Пока БухИт.ПолучитьСубконто(1) = 1 Цикл
		
		// НМА отражаем в отчете только если по нему были признаны расходы.
		Если БухИт.ДО() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		НематериальныйАктив = БухИт.Субконто(ВидыСубконто.НематериальныеАктивы);
		
		СрокПолезногоИспользования = Цел(НематериальныйАктив.СрокПолезногоИспользованияН/12) + ?(НематериальныйАктив.СрокПолезногоИспользованияН%12 &lt;&gt; 0, 1, 0);
		
		Если НематериальныйАктив.ДатаПриобретения &lt; Константа.ДатаПереходаНаУСН Тогда
			ОбъектПриобретенДоПримененияУСН = 1;
		Иначе
			ОбъектПриобретенДоПримененияУСН = 0;
		КонецЕсли;
		
		ПервоначальнаяСтоимость = НематериальныйАктив.ПервоначальнаяСтоимостьН;
		
		Оплата.ИспользоватьОбъект("Оплата", НематериальныйАктив);
		
		СуммаРасходовЗаОтчетныйПериод   = БухИт.ДО();
		СуммаРасходовЗаПоследнийКвартал = БухИтЗаОтчетныйПериод.ДО("Н02.4",,, НематериальныйАктив);
		СуммаРасходовПредыдущихПериодов = БухИт.СНД();
		
		Если ОбъектПриобретенДоПримененияУСН = 1 Тогда
			ОстаточнаяСтоимость = Макс(0, НематериальныйАктив.ПервоначальнаяСтоимостьН - НематериальныйАктив.НачисленнаяАмортизацияН);;
		Иначе	
			ОстаточнаяСтоимость = НематериальныйАктив.ПервоначальнаяСтоимостьН;
		КонецЕсли;
		
		БухИт.ВыбратьСубконто(2);
		Пока БухИт.ПолучитьСубконто(2) = 1 Цикл
			ДатаОплаты = БухИт.Субконто(ВидыСубконто.ДатыОплаты);
			
			Если (ДатаГод(Макс(ДатаОплаты, НематериальныйАктив.ДатаПринятияКУчету))&lt;&gt; ДатаГод(Дата2))
				и (ОбъектПриобретенДоПримененияУСН = 0) Тогда
				Продолжить;
			КонецЕсли;
			
			СуммаОплаты = 0;
			Если ДатаОплаты &lt; Константа.ДатаПереходаНаУСН Тогда
				Оплата.ВыбратьЗначения(, Константа.ДатаПереходаНаУСН - 1);
			Иначе	
				Оплата.ВыбратьЗначения(ДатаОплаты, ДатаОплаты);
			КонецЕсли;	
			Пока Оплата.ПолучитьЗначение() = 1 Цикл
				СуммаОплаты = СуммаОплаты + Оплата.Значение;
			КонецЦикла;
			
			//РассчитатьКоличествоМесяцевЭксплуатации(КоличествоКварталовВОтчетномПериоде, КоличествоКварталовВНалоговомПериоде, Макс(ДатаОплаты, ОсновноеСредство.ДатаВводаВЭксплуатацию));
			ДатаВключенияСтоимостиВРасходы = Макс(ДатаОплаты, НематериальныйАктив.ДатаПринятияКУчету);
			КоличествоКварталовВОтчетномПериоде  = 0;
			КоличествоКварталовВНалоговомПериоде = 0;
			
			НомерКвартала = ДатаМесяц(КонКвартала(Дата2)) / 3;
			Если ДатаГод(ДатаВключенияСтоимостиВРасходы) &lt; ДатаГод(Дата2) Тогда
				КоличествоКварталовВОтчетномПериоде  = НомерКвартала;
				КоличествоКварталовВНалоговомПериоде = 4;
				
			ИначеЕсли ДатаВключенияСтоимостиВРасходы &lt;= Дата2 Тогда
				НомерКварталаНачалаРасчета = ДатаМесяц(КонКвартала(ДатаВключенияСтоимостиВРасходы)) / 3;
				КоличествоКварталовВОтчетномПериоде  = НомерКвартала - НомерКварталаНачалаРасчета;
				КоличествоКварталовВНалоговомПериоде = 5 - НомерКварталаНачалаРасчета;
				
				Если (ДатаМесяц(ДатаВключенияСтоимостиВРасходы) &lt;&gt; ДатаМесяц(КонКвартала(ДатаВключенияСтоимостиВРасходы))) или (ДатаВключенияСтоимостиВРасходы &gt;= '01.01.2006') Тогда
					КоличествоКварталовВОтчетномПериоде = КоличествоКварталовВОтчетномПериоде + 1;
				Иначе
					КоличествоКварталовВНалоговомПериоде = КоличествоКварталовВНалоговомПериоде - 1;
				КонецЕсли;
			КонецЕсли;
			
			СуммаРасходов = БухИт.ДО();
			ОплаченнаяОстаточнаяСтоимость = ?(ОстаточнаяСтоимость=0,0,ОстаточнаяСтоимость*(СуммаОплаты/ПервоначальнаяСтоимость));
			
			Если (ОбъектПриобретенДоПримененияУСН = 0) Тогда
				Если (Дата2 &lt; '01.01.2006') Тогда
					КоличествоКварталовВОтчетномПериоде  = "";
					КоличествоКварталовВНалоговомПериоде = "";
				Иначе
					КоличествоКварталовВОтчетномПериоде  = "";
				КонецЕсли;
			КонецЕсли;
			
			// Добавим строку в таблицу строк
			
			ТаблицаСтрок.НоваяСтрока();
			ТаблицаСтрок.НематериальныйАктив					= НематериальныйАктив;
			ТаблицаСтрок.ДатаОплаты 							= ДатаОплаты;
			ТаблицаСтрок.Графа5_ПервоначальнаяСтоимость 		= Мин(СуммаОплаты,НематериальныйАктив.ПервоначальнаяСтоимостьН);
			ТаблицаСтрок.Графа6_ОстаточнаяСтоимость 			= Мин(ОстаточнаяСтоимость,ОплаченнаяОстаточнаяСтоимость);
			ТаблицаСтрок.Графа8_КолКварталовВОтчетномПериоде 	= КоличествоКварталовВОтчетномПериоде;
			ТаблицаСтрок.Графа9_КолКварталовВНалПериоде 		= КоличествоКварталовВНалоговомПериоде;
			ТаблицаСтрок.Графа10_ДоляРасходовЗаНалПериод 		= 0;
			ТаблицаСтрок.Графа11_ДоляРасходовЗаКвартал 			= 0;
			ТаблицаСтрок.Графа12_СуммаРасходовЗаОтчетнПериод 	= СуммаРасходов;
			ТаблицаСтрок.Графа13_СуммаРасходовЗаКвартал 		= Мин(ТаблицаСтрок.Графа5_ПервоначальнаяСтоимость, БухИтЗаОтчетныйПериод.ДО("Н02.4",,, НематериальныйАктив,ДатаОплаты));
			ТаблицаСтрок.Графа14_РасходыПрошлыхПериодов 		= СуммаРасходовПредыдущихПериодов;
			//ТаблицаСтрок.Графа15_ОстатокРасходов 				= 0;
			ТаблицаСтрок.Графа15_ОстатокРасходов		 = Макс(0, ОстаточнаяСтоимость - СуммаРасходовЗаОтчетныйПериод - СуммаРасходовПредыдущихПериодов);
			
			Если (Дата2 &gt; '01.01.2006') и (КонКвартала(Дата2) &lt; КонГода(Дата2)) Тогда
				ТаблицаСтрок.Графа12_СуммаРасходовЗаОтчетнПериод = 0;
			КонецЕсли;
			
			Если ОбъектПриобретенДоПримененияУСН = 1 Тогда
				
				//ПроцентПринятыхРасходов(СрокПолезногоИспользования);
				ПроцентСписания = 0;
				Если СрокПолезногоИспользования &lt;= 3 Тогда
					Если ДатаГод(Дата2) = ДатаГод(Константа.ДатаПереходаНаУСН) Тогда
						ПроцентСписания = 100;
					КонецЕсли;
				ИначеЕсли СрокПолезногоИспользования &lt;= 15 Тогда
					Если ДатаГод(Дата2) = ДатаГод(Константа.ДатаПереходаНаУСН) Тогда
						ПроцентСписания = 50;
					ИначеЕсли (ДатаГод(Дата2) - 1) = ДатаГод(Константа.ДатаПереходаНаУСН) Тогда
						ПроцентСписания = 30;
					ИначеЕсли (ДатаГод(Дата2) - 2) = ДатаГод(Константа.ДатаПереходаНаУСН) Тогда
						ПроцентСписания = 20;
					КонецЕсли;
				Иначе
					ПроцентСписания = 10;
				КонецЕсли;
				
				ТаблицаСтрок.Графа10_ДоляРасходовЗаНалПериод = ПроцентСписания;
				ТаблицаСтрок.Графа11_ДоляРасходовЗаКвартал	 = ?(КоличествоКварталовВНалоговомПериоде = 0, 0,	Окр(ТаблицаСтрок.Графа10_ДоляРасходовЗаНалПериод/КоличествоКварталовВНалоговомПериоде, 4));
				ТаблицаСтрок.Графа15_ОстатокРасходов		 = Макс(0, ОстаточнаяСтоимость - СуммаРасходовЗаОтчетныйПериод - СуммаРасходовПредыдущихПериодов);
				
			Иначе
				Если (Дата2 &gt; '01.01.2006') Тогда
					ТаблицаСтрок.Графа10_ДоляРасходовЗаНалПериод = 100;
					ТаблицаСтрок.Графа11_ДоляРасходовЗаКвартал	 = ?(КоличествоКварталовВНалоговомПериоде = 0, 0, Окр(ТаблицаСтрок.Графа10_ДоляРасходовЗаНалПериод/КоличествоКварталовВНалоговомПериоде, 2));
					ТаблицаСтрок.Графа6_ОстаточнаяСтоимость		 = 0;
					ТаблицаСтрок.Графа14_РасходыПрошлыхПериодов	 = 0; 
					ТаблицаСтрок.Графа15_ОстатокРасходов		 = Макс(0, ОстаточнаяСтоимость - СуммаРасходовЗаОтчетныйПериод - СуммаРасходовПредыдущихПериодов);
					//ТаблицаСтрок.Графа15_ОстатокРасходов		 = 0;
					Если КонКвартала(Дата2) &lt; КонГода(Дата2) Тогда
						ТаблицаСтрок.Графа12_СуммаРасходовЗаОтчетнПериод = 0;
					КонецЕсли;
				Иначе
					ТаблицаСтрок.Графа8_КолКварталовВОтчетномПериоде = 0;
					ТаблицаСтрок.Графа9_КолКварталовВНалПериоде		 = 0;
					ТаблицаСтрок.Графа10_ДоляРасходовЗаНалПериод     = 0;
					ТаблицаСтрок.Графа11_ДоляРасходовЗаКвартал	     = 0;
					ТаблицаСтрок.Графа15_ОстатокРасходов			 = Макс(0, ПервоначальнаяСтоимость - БухИт.СКД());
				КонецЕсли; 
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	ТаблицаСтрок.Свернуть("НематериальныйАктив, ДатаОплаты, Графа8_КолКварталовВОтчетномПериоде, Графа9_КолКварталовВНалПериоде, Графа10_ДоляРасходовЗаНалПериод, Графа11_ДоляРасходовЗаКвартал", 
	"Графа5_ПервоначальнаяСтоимость, Графа6_ОстаточнаяСтоимость, Графа12_СуммаРасходовЗаОтчетнПериод, Графа13_СуммаРасходовЗаКвартал, Графа14_РасходыПрошлыхПериодов, Графа15_ОстатокРасходов");
	
	ТаблицаСтрок.ВыбратьСтроки();
	Пока ТаблицаСтрок.ПолучитьСтроку() = 1 Цикл
		ТаблицаСтрок.Графа12_СуммаРасходовЗаОтчетнПериод = Мин(ТаблицаСтрок.Графа12_СуммаРасходовЗаОтчетнПериод, ТаблицаСтрок.Графа5_ПервоначальнаяСтоимость);		
	КонецЦикла;
	
	//Сформировать документ
	
	Если ТаблицаСтрок.КоличествоСтрок() &gt; 0 Тогда
		ВходящиеДанные = СоздатьОбъект("СписокЗначений");
		ВходящиеДанные.Установить("Дата", 	Дата2);
		ВходящиеДанные.Установить("Раздел1",СоздатьОбъект("ТаблицаЗначений"));
		ВходящиеДанные.Установить("ОС",СоздатьОбъект("ТаблицаЗначений"));
		ВходящиеДанные.Установить("НМА",ТаблицаСтрок);
		
		Параметры.ПараметрыАлгоритмов.Установить("ДопКомментарий", "Раздел II (НМА)");
		
		ВыгрузитьПоПравилу(,,ВходящиеДанные,, "ЗаписьКУДиР");
		
		Параметры.ПараметрыАлгоритмов.Установить("ДопКомментарий", "");
	КонецЕсли;
	
КонецЦикла;</ПередОбработкойПравила>
			</Правило>
		</Группа>
	</ПравилаВыгрузкиДанных>
	<ПравилаОчисткиДанных/>
	<Алгоритмы>
		<Алгоритм Имя="ВыгрузитьКорреспонденции" ИспользуетсяПриЗагрузке="false">
			<Текст>БухИт = Параметры.ПараметрыАлгоритмов.Получить("БухИт");

БухИт.ВыбратьКорСчета();
Пока БухИт.ПолучитьКорСчет() = 1 Цикл
	
	КоличествоУровней = БухИт.КорСчет.КоличествоСубконто();
	
	Если КоличествоУровней = 0 Тогда
		Параметры.ПараметрыАлгоритмов.Установить("ТолькоСумма", 0);
		
		Если (БухИт.Счет.Валютный = 0) и (БухИт.КорСчет.Валютный = 1) Тогда
			БухИт.ВыбратьВалюты(-1);
			Пока БухИт.ПолучитьВалюту() = 1 Цикл
				ПолучитьИтогиПоСчету();
				ДобавитьПроводкуОбороты();
			КонецЦикла;
			
		Иначе
			ПолучитьИтогиПоСчету();
			ДобавитьПроводкуОбороты();
		КонецЕсли;
		
	ИначеЕсли КоличествоУровней &gt; 0 Тогда
		БухИт.ВыбратьКорСубконто(1);
		Пока БухИт.ПолучитьКорСубконто(1) = 1 Цикл
			
			Если ТипЗначенияСтр(БухИт.КорСубконто(1)) = "Справочник" Тогда
				Если БухИт.КорСубконто(1).ЭтоГруппа() = 1 Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			Если КоличествоУровней = 1 Тогда
				Параметры.ПараметрыАлгоритмов.Установить("ТолькоСумма", 0);
				
				Если (БухИт.Счет.Валютный = 0) и (БухИт.КорСчет.Валютный = 1) Тогда
					БухИт.ВыбратьВалюты(-1);
					Пока БухИт.ПолучитьВалюту() = 1 Цикл
						ПолучитьИтогиПоСчету();
						ДобавитьПроводкуОбороты();
					КонецЦикла;
				Иначе
					ПолучитьИтогиПоСчету();
					ДобавитьПроводкуОбороты();
				КонецЕсли;
				
			ИначеЕсли КоличествоУровней &gt; 1 Тогда
				
				Если (БухИт.КорСчет.УчетПоСумме(2) = 0) и (КоличествоУровней = 2) Тогда
					Параметры.ПараметрыАлгоритмов.Установить("ТолькоСумма", 1);
					Параметры.ПараметрыАлгоритмов.Установить("ТекНомерСубконто", 1);
					ПолучитьИтогиПоСчету();
					ДобавитьПроводкуОбороты();
				КонецЕсли;
				
				БухИт.ВыбратьКорСубконто(2);
				Пока БухИт.ПолучитьКорСубконто(2) = 1 Цикл
					Если ТипЗначенияСтр(БухИт.КорСубконто(2)) = "Справочник" Тогда
						Если БухИт.КорСубконто(2).ЭтоГруппа() = 1 Тогда
							Продолжить;
						КонецЕсли;
					КонецЕсли;
					
					Если КоличествоУровней = 2 Тогда
						Параметры.ПараметрыАлгоритмов.Установить("ТолькоСумма", 0);
						Если (БухИт.Счет.Валютный = 0) и (БухИт.КорСчет.Валютный = 1) Тогда
							БухИт.ВыбратьВалюты(-1);
							Пока БухИт.ПолучитьВалюту() = 1 Цикл
								ПолучитьИтогиПоСчету();
								ДобавитьПроводкуОбороты();
							КонецЦикла;
						Иначе 				
							ПолучитьИтогиПоСчету();
							ДобавитьПроводкуОбороты();
						КонецЕсли;
											
					ИначеЕсли КоличествоУровней &gt; 2 Тогда
						
						Если (БухИт.КорСчет.УчетПоСумме(3) = 0) и (КоличествоУровней = 3) Тогда
							Параметры.ПараметрыАлгоритмов.Установить("ТолькоСумма", 1);
							Параметры.ПараметрыАлгоритмов.Установить("ТекНомерСубконто", 2);
							ПолучитьИтогиПоСчету();
							ДобавитьПроводкуОбороты();
						КонецЕсли;
						
						БухИт.ВыбратьКорСубконто(3);
						Пока БухИт.ПолучитьКорСубконто(3) = 1 Цикл
							Если ТипЗначенияСтр(БухИт.КорСубконто(3)) = "Справочник" Тогда
								Если БухИт.КорСубконто(3).ЭтоГруппа() = 1 Тогда
									Продолжить;
								КонецЕсли;
							КонецЕсли;
					
							Параметры.ПараметрыАлгоритмов.Установить("ТолькоСумма", 0);
							
							Если (БухИт.Счет.Валютный = 0) и (БухИт.КорСчет.Валютный = 1) Тогда
								БухИт.ВыбратьВалюты(-1);
								Пока БухИт.ПолучитьВалюту() = 1 Цикл
									ПолучитьИтогиПоСчету();
									ДобавитьПроводкуОбороты();
								КонецЦикла;
							Иначе
								ПолучитьИтогиПоСчету();
								ДобавитьПроводкуОбороты();
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецЦикла;
</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВыгрузитьОстаткиПоНМА" ИспользуетсяПриЗагрузке="false">
			<Текст>// Выбирает объекты по указанному счету и записывает их 
// в таблицу СписокНМА. При этом определяет текущую стоимость
// или начисленную амортизацию.

Счет = Параметры.ПараметрыАлгоритмов.Получить("ТекущийСчет");
ИмяСуммы = Параметры.ПараметрыАлгоритмов.Получить("ИмяСуммы");

БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
БухИт.ИспользоватьСубконто(ВидыСубконто.НематериальныеАктивы);
БухИт.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков, Параметры.ДатаВводаОстатков, Счет);
БухИт.ВыбратьСубконто(1);
Пока БухИт.ПолучитьСубконто(1) = 1 Цикл
	
	Если БухИт.Субконто(1).ЭтоГруппа() = 1 Тогда
		Продолжить;
	КонецЕсли;
	
	НомСтроки = 0;
	Если Параметры.СписокНМА.НайтиЗначение(БухИт.Субконто(1), НомСтроки, "НМА") = 0 Тогда
		Параметры.СписокНМА.НоваяСтрока();
		Параметры.СписокНМА.НМА = БухИт.Субконто(1);
		Если Счет &lt;&gt; "05" Тогда
			Параметры.СписокНМА.СчетУчетаНМА = БухИт.Счет.Код;
		КонецЕсли;
		НомСтроки = Параметры.СписокНМА.КоличествоСтрок();
	Иначе
		Если Счет.Код &lt;&gt; "05" Тогда
			Параметры.СписокНМА.УстановитьЗначение(НомСтроки, "СчетУчетаНМА", БухИт.Счет.Код);
		КонецЕсли;
	КонецЕсли;
	
	Параметры.СписокНМА.УстановитьЗначение(НомСтроки, ИмяСуммы+"Нач", ?(Счет.Активный = 1, БухИт.СНД(), БухИт.СНК()));
	Параметры.СписокНМА.УстановитьЗначение(НомСтроки, ИмяСуммы+"Кон", ?(Счет.Активный = 1, БухИт.СКД(), БухИт.СКК()));

КонецЦикла;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВыгрузитьОстаткиПоНМАКон" ИспользуетсяПриЗагрузке="false">
			<Текст>// Выбирает объекты по указанному счету и записывает их 
// в таблицу СписокНМАКон. При этом определяет текущую стоимость
// или начисленную амортизацию.

Счет = Параметры.ПараметрыАлгоритмов.Получить("ТекущийСчет");
ИмяСуммы = Параметры.ПараметрыАлгоритмов.Получить("ИмяСуммы");

БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
БухИт.ИспользоватьСубконто(ВидыСубконто.НематериальныеАктивы);
БухИт.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков, Параметры.ДатаКонцаПериодаВыгрузки, Счет);
БухИт.ВыбратьСубконто(1);
Пока БухИт.ПолучитьСубконто(1) = 1 Цикл
	
	Если БухИт.Субконто(1).ЭтоГруппа() = 1 Тогда
		Продолжить;
	КонецЕсли;
	
	НомСтроки = 0;
	Если Параметры.СписокНМАКон.НайтиЗначение(БухИт.Субконто(1), НомСтроки, "НМА") = 0 Тогда
		Параметры.СписокНМАКон.НоваяСтрока();
		Параметры.СписокНМАКон.НМА = БухИт.Субконто(1);
		Если Счет &lt;&gt; "05" Тогда
			Параметры.СписокНМАКон.СчетУчетаНМА = БухИт.Счет.Код;
		КонецЕсли;
		НомСтроки = Параметры.СписокНМАКон.КоличествоСтрок();
	Иначе
		Если Счет.Код &lt;&gt; "05" Тогда
			Параметры.СписокНМАКон.УстановитьЗначение(НомСтроки, "СчетУчетаНМА", БухИт.Счет.Код);
		КонецЕсли;
	КонецЕсли;
	
	Параметры.СписокНМАКон.УстановитьЗначение(НомСтроки, ИмяСуммы+"Нач", ?(Счет.Активный = 1, БухИт.СНД(), БухИт.СНК()));
	Параметры.СписокНМАКон.УстановитьЗначение(НомСтроки, ИмяСуммы+"Кон", ?(Счет.Активный = 1, БухИт.СКД(), БухИт.СКК()));

КонецЦикла;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВыгрузитьОстаткиПоОС" ИспользуетсяПриЗагрузке="false">
			<Текст>// Выбирает объекты по указанному счету и записывает их 
// в таблицу СписокОС. При этом определяет текущую стоимость
// или начисленную амортизацию.

Счет = Параметры.ПараметрыАлгоритмов.Получить("ТекущийСчет");
ИмяСуммы = Параметры.ПараметрыАлгоритмов.Получить("ИмяСуммы");
ИмяСчета = Параметры.ПараметрыАлгоритмов.Получить("ИмяСчета");

УчетПоКонтрагентам = ?(Счет.КоличествоСубконто() &gt; 1, 1, 0);

БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
БухИт.ИспользоватьСубконто(ВидыСубконто.ОсновныеСредства);
Если УчетПоКонтрагентам = 1 Тогда
	БухИт.ИспользоватьСубконто(ВидыСубконто.Контрагенты);	
КонецЕсли;
БухИт.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков, Параметры.ДатаВводаОстатков, Счет);
БухИт.ВыбратьСубконто(1);
Пока БухИт.ПолучитьСубконто(1) = 1 Цикл
	
	Если БухИт.Субконто(1).ЭтоГруппа() = 1 Тогда
		Продолжить;
	КонецЕсли;
	
	НомСтроки = 0;
	Если Параметры.СписокОС.НайтиЗначение(БухИт.Субконто(1), НомСтроки, "ОсновноеСредство") = 0 Тогда
		Параметры.СписокОС.НоваяСтрока();
		Параметры.СписокОС.ОсновноеСредство = БухИт.Субконто(1);
		НомСтроки = Параметры.СписокОС.КоличествоСтрок();
	КонецЕсли;
	
	Параметры.СписокОС.УстановитьЗначение(НомСтроки, ИмяСуммы+"Нач", ?(Счет.Активный = 1, БухИт.СНД(), БухИт.СНК()));
	Параметры.СписокОС.УстановитьЗначение(НомСтроки, ИмяСуммы+"Кон", ?(Счет.Активный = 1, БухИт.СКД(), БухИт.СКК()));
	Если ПустоеЗначение(ИмяСчета) = 0 Тогда
		Параметры.СписокОС.УстановитьЗначение(НомСтроки, ИмяСчета, Счет);
	КонецЕсли;
	
	Если УчетПоКонтрагентам = 1 Тогда
		БухИт.ВыбратьСубконто(2);
		Пока БухИт.ПолучитьСубконто(2) = 1 Цикл
			
			Если БухИт.Субконто(2).ЭтоГруппа() = 1 Тогда
				Продолжить;
			КонецЕсли;
	
			Параметры.СписокОС.УстановитьЗначение(НомСтроки, "Контрагент", БухИт.Субконто(2));
		КонецЦикла;
    КонецЕсли;
КонецЦикла;

</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВыгрузитьОстаткиПоОСКон" ИспользуетсяПриЗагрузке="false">
			<Текст>// Выбирает объекты по указанному счету и записывает их 
// в таблицу СписокОСКон. При этом определяет текущую стоимость
// или начисленную амортизацию.

Счет = Параметры.ПараметрыАлгоритмов.Получить("ТекущийСчет");
ИмяСуммы = Параметры.ПараметрыАлгоритмов.Получить("ИмяСуммы");
ИмяСчета = Параметры.ПараметрыАлгоритмов.Получить("ИмяСчета");

УчетПоКонтрагентам = ?(Счет.КоличествоСубконто() &gt; 1, 1, 0);

БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
БухИт.ИспользоватьСубконто(ВидыСубконто.ОсновныеСредства);
Если УчетПоКонтрагентам = 1 Тогда
	БухИт.ИспользоватьСубконто(ВидыСубконто.Контрагенты);	
КонецЕсли;
БухИт.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков, Параметры.ДатаКонцаПериодаВыгрузки, Счет);
БухИт.ВыбратьСубконто(1);
Пока БухИт.ПолучитьСубконто(1) = 1 Цикл
	
	Если БухИт.Субконто(1).ЭтоГруппа() = 1 Тогда
		Продолжить;
	КонецЕсли;
	
	НомСтроки = 0;
	Если Параметры.СписокОСКон.НайтиЗначение(БухИт.Субконто(1), НомСтроки, "ОсновноеСредство") = 0 Тогда
		Параметры.СписокОСКон.НоваяСтрока();
		Параметры.СписокОСКон.ОсновноеСредство = БухИт.Субконто(1);
		НомСтроки = Параметры.СписокОСКон.КоличествоСтрок();
	КонецЕсли;
	
	Параметры.СписокОСКон.УстановитьЗначение(НомСтроки, ИмяСуммы+"Нач", ?(Счет.Активный = 1, БухИт.СНД(), БухИт.СНК()));
	Параметры.СписокОСКон.УстановитьЗначение(НомСтроки, ИмяСуммы+"Кон", ?(Счет.Активный = 1, БухИт.СКД(), БухИт.СКК()));
	Если ПустоеЗначение(ИмяСчета) = 0 Тогда
		Параметры.СписокОСКон.УстановитьЗначение(НомСтроки, ИмяСчета, Счет);
	КонецЕсли;
	
	Если УчетПоКонтрагентам = 1 Тогда
		БухИт.ВыбратьСубконто(2);
		Пока БухИт.ПолучитьСубконто(2) = 1 Цикл
			
			Если БухИт.Субконто(2).ЭтоГруппа() = 1 Тогда
				Продолжить;
			КонецЕсли;
	
			Параметры.СписокОСКон.УстановитьЗначение(НомСтроки, "Контрагент", БухИт.Субконто(2));
		КонецЦикла;
    КонецЕсли;
КонецЦикла;

</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВыгрузитьОстаткиПоСчету" ИспользуетсяПриЗагрузке="false">
			<Текст>// Выгружает остатки по любому счету. Счет записывается в таблицу 
// проводок, как объект типа "Основной.Счет" (потом он сконвертируется
// в соответствии с настройкой конвертации значений счетов).

// Остатки по субконто на которых ведется только количественный учет
// выгружаются, как отдельные проводки.

ОстаткиНаКонец = Параметры.ПараметрыАлгоритмов.Получить("ОстаткиНаКонец");

СчетВводаОстатков = Параметры.СчетВводаОстатков;
Счет = Параметры.ПараметрыАлгоритмов.Получить("ТекущийСчет");
РегистрБух = Параметры.ПараметрыАлгоритмов.Получить("Регистр");

ПроводкиОбороты = Параметры.ТаблицаПроводокОбороты;
Проводки = Параметры.ТаблицаПроводок;
Проводки.УдалитьСтроки();

Валюты = СоздатьОбъект("СписокЗначений");

БухИт = СоздатьОбъект("БухгалтерскиеИтоги");

БухИт.ИспользоватьСубконто();
БухИт.ИспользоватьСубконто();
БухИт.ИспользоватьСубконто();

БухИт.ИспользоватьКорСубконто();
БухИт.ИспользоватьКорСубконто();
БухИт.ИспользоватьКорСубконто();

Параметры.ПараметрыАлгоритмов.Установить("БухИт", БухИт);
Параметры.ПараметрыАлгоритмов.Установить("Проводки", Проводки);
Параметры.ПараметрыАлгоритмов.Установить("ПроводкиОбороты", ПроводкиОбороты);

БухИт.ВключатьСубсчета(, -1);
Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	БухИт.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков,, Счет);
		
ИначеЕсли ОстаткиНаКонец = 1 Тогда
	БухИт.ВыполнитьЗапрос(Параметры.ДатаКонцаПериодаВыгрузки, , Счет);
	
Иначе
	БухИт.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков, Параметры.ДатаКонцаПериодаВыгрузки, Счет,,, 3, "Месяц",);
КонецЕсли;

БухИт.ВыбратьПериоды();
Пока БухИт.ПолучитьПериод() = 1 Цикл
	
	ПроводкиОбороты.УдалитьСтроки();
	
	БухИт.ВыбратьСчета();
	Пока БухИт.ПолучитьСчет() = 1 Цикл
		Валюты.УдалитьВсе();
		
		Если (Счет.Валютный = 1) и (Параметры.ВыгружатьБезВалют.НайтиЗначение(Счет) = 0) Тогда
			БухИт.ВыбратьВалюты();
			Пока БухИт.ПолучитьВалюту() = 1 Цикл
				Валюты.ДобавитьЗначение(БухИт.Валюта);
			КонецЦикла;
			
		Иначе
			Валюты.ДобавитьЗначение(ПолучитьПустоеЗначение("Справочник.Валюты"));
		КонецЕсли;
		
		// Остатки
		Если (НачМесяца(БухИт.НачДата) = НачМесяца(Параметры.ДатаВводаОстатков)) 
			ИЛИ (ОстаткиНаКонец = 1) Тогда
			
			Параметры.ПараметрыАлгоритмов.Установить("ТолькоСумма", 0);
			
			Для НомерВалюты = 1 по Валюты.РазмерСписка() Цикл
				Если Счет.Валютный = 1 Тогда
					БухИт.ПолучитьВалюту(, Валюты.ПолучитьЗначение(НомерВалюты));
				КонецЕсли;
					
				СуммовойУчет1 = ?(Счет.КоличествоСубконто() &gt; 0, ?(Счет.ТолькоОбороты(1) = 1, 0, Счет.УчетПоСумме(1)), 0);
				СуммовойУчет2 = ?(Счет.КоличествоСубконто() &gt; 1, ?(Счет.ТолькоОбороты(2) = 1, 0, Счет.УчетПоСумме(2)), 0);
				СуммовойУчет3 = ?(Счет.КоличествоСубконто() &gt; 2, ?(Счет.ТолькоОбороты(3) = 1, 0, Счет.УчетПоСумме(3)), 0);

				КоличествоУровней = 0;
				КоличествоУровней = КоличествоУровней + ?(Счет.КоличествоСубконто() &gt; 0, ?(Счет.ТолькоОбороты(1) = 1, 0, 1), 0);
				КоличествоУровней = КоличествоУровней + ?(Счет.КоличествоСубконто() &gt; 1, ?(Счет.ТолькоОбороты(2) = 1, 0, 1), 0);
				КоличествоУровней = КоличествоУровней + ?(Счет.КоличествоСубконто() &gt; 2, ?(Счет.ТолькоОбороты(3) = 1, 0, 1), 0);
				Параметры.ПараметрыАлгоритмов.Установить("КоличествоУровней", КоличествоУровней);
				
				Если КоличествоУровней = 0 Тогда
					Параметры.ПараметрыАлгоритмов.Установить("ТекНомерСубконто", 0);
					ПолучитьИтогиПоСчету();
					ДобавитьПроводку();
				
				ИначеЕсли КоличествоУровней &gt; 0 Тогда
					БухИт.ВыбратьСубконто(1);
					Пока БухИт.ПолучитьСубконто(1) = 1 Цикл
						Если ТипЗначенияСтр(БухИт.Субконто(1)) = "Справочник" Тогда
							Если БухИт.Субконто(1).ЭтоГруппа() = 1 Тогда
								Продолжить;
							КонецЕсли;
						КонецЕсли;
						
						Если ((СуммовойУчет1 = 1) и (СуммовойУчет2 = 0)) или (КоличествоУровней = 1) Тогда
							Параметры.ПараметрыАлгоритмов.Установить("ТекНомерСубконто", 1);
							ПолучитьИтогиПоСчету();
							ДобавитьПроводку();
						КонецЕсли;
						
						Если КоличествоУровней &gt; 1 Тогда
							БухИт.ВыбратьСубконто(2);
							Пока БухИт.ПолучитьСубконто(2) = 1 Цикл
								Если ТипЗначенияСтр(БухИт.Субконто(2)) = "Справочник" Тогда
									Если БухИт.Субконто(2).ЭтоГруппа() = 1 Тогда
										Продолжить;
									КонецЕсли;
								КонецЕсли;
								
								Если ((СуммовойУчет2 = 1) и (СуммовойУчет3 = 0)) или (КоличествоУровней = 2) Тогда
									Параметры.ПараметрыАлгоритмов.Установить("ТекНомерСубконто", 2);
									ПолучитьИтогиПоСчету();
									ДобавитьПроводку();
								КонецЕсли;
								
								Если КоличествоУровней &gt; 2 Тогда
									БухИт.ВыбратьСубконто(3);
									Пока БухИт.ПолучитьСубконто(3) = 1 Цикл
										Если ТипЗначенияСтр(БухИт.Субконто(3)) = "Справочник" Тогда
											Если БухИт.Субконто(3).ЭтоГруппа() = 1 Тогда
												Продолжить;
											КонецЕсли;
										КонецЕсли;
										
										Параметры.ПараметрыАлгоритмов.Установить("ТекНомерСубконто", 3);
										ПолучитьИтогиПоСчету();
										ДобавитьПроводку();
									КонецЦикла;
								КонецЕсли;	
							КонецЦикла;
						КонецЕсли;	
					КонецЦикла;
				КонецЕсли;	
			КонецЦикла;
			
			РазделУчета = ОпределитьРазделУчета();
			Если ПустоеЗначение(РазделУчета) = 0 Тогда
				ВходящиеДанные = СоздатьОбъект("СписокЗначений");
				ВходящиеДанные.Установить("ВходящиеОстатки", Проводки);
				ВходящиеДанные.Установить("Счет", Счет);
				Если ОстаткиНаКонец = 1 Тогда
					ВходящиеДанные.Установить("Дата", Параметры.ДатаКонцаПериодаВыгрузки);
				Иначе
					ВходящиеДанные.Установить("Дата", БухИт.НачДата-1);
				КонецЕсли;
				ВходящиеДанные.Установить("РазделУчета", РазделУчета);
				
				Если Параметры.ДатаКонцаПериодаВыгрузки = Параметры.ДатаВводаОстатков Тогда
					ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
					ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
					ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
				Иначе
					Если ОстаткиНаКонец = 1 Тогда
						ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 0);
						ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
						ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
					Иначе
						ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
						ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 0);
						ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 0);
					КонецЕсли;
				КонецЕсли;
				
				Параметры.ПараметрыАлгоритмов.Установить("ВходящиеДанные", ВходящиеДанные);
				Если (Счет.Код = "10.1")
					ИЛИ (Счет.Код = "10.2")
					ИЛИ (Счет.Код = "10.3") 
					ИЛИ (Счет.Код = "41.1")
					ИЛИ (Счет.Код = "41.2")
					ИЛИ (Счет.Код = "41.3")
					ИЛИ (Счет.Код = "43") Тогда
					
					НУ_ОстаткиПоТМЦ();
					
				ИначеЕсли (РазделУчета = "КапитальныеВложения")
					И (Счет.Код &lt;&gt; "08.4") Тогда
					
					ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 0);					
					
				ИначеЕсли (Счет.Код = "45") Тогда
					
					НУ_ОстаткиПо45();
					
				ИначеЕсли РазделУчета = "РасходыБудущихПериодов" Тогда
					
					НУ_ОстаткиПоРБП();
					
				ИначеЕсли РазделУчета = "РасчетыПоНалогамИСборам" Тогда
					
					НУ_ОстаткиПоНалогам();
									
				ИначеЕсли (Счет.Код = "60.3") Тогда
					ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 0);
					
				ИначеЕсли Счет.Код = "76.4" Тогда
					ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 0);
					
				ИначеЕсли (Счет.Код = "19.1")
					ИЛИ (Счет.Код = "19.2") Тогда
					
					ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 0);
					ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 0);
					
				КонецЕсли;
								
				ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ВводНачальныхОстатков");
			Иначе			
				ВходящиеДанные = СоздатьОбъект("СписокЗначений");
				ВходящиеДанные.Установить(РегистрБух, Проводки);
				ВходящиеДанные.Установить("Счет", Счет);
				ВходящиеДанные.Установить("Дата", БухИт.НачДата-1);
				ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияБух");
			КонецЕсли;
		КонецЕсли;
		
		Если ОстаткиНаКонец = 1 Тогда //нас интересуют только остатки
			Продолжить;
		КонецЕсли;
		
		// Обороты
		Параметры.ПараметрыАлгоритмов.Установить("БухИт", БухИт);
		Для НомерВалюты = 1 по Валюты.РазмерСписка() Цикл
			Если Счет.Валютный = 1 Тогда
				БухИт.ПолучитьВалюту(, Валюты.ПолучитьЗначение(НомерВалюты));
			КонецЕсли;
			
			КоличествоУровней = Счет.КоличествоСубконто();
				
			Если КоличествоУровней = 0 Тогда
				
				ВыгрузитьКорреспонденции();
			
			ИначеЕсли КоличествоУровней &gt; 0 Тогда
				БухИт.ВыбратьСубконто(1);
				Пока БухИт.ПолучитьСубконто(1) = 1 Цикл
					Если ТипЗначенияСтр(БухИт.Субконто(1)) = "Справочник" Тогда
						Если БухИт.Субконто(1).ЭтоГруппа() = 1 Тогда
							Продолжить;
						КонецЕсли;
					КонецЕсли;
					
					Если КоличествоУровней = 1 Тогда
						ВыгрузитьКорреспонденции();
					
					ИначеЕсли КоличествоУровней &gt; 1 Тогда
						БухИт.ВыбратьСубконто(2);
						Пока БухИт.ПолучитьСубконто(2) = 1 Цикл
							Если ТипЗначенияСтр(БухИт.Субконто(2)) = "Справочник" Тогда
								Если БухИт.Субконто(2).ЭтоГруппа() = 1 Тогда
									Продолжить;
								КонецЕсли;
							КонецЕсли;
							
							Если КоличествоУровней = 2 Тогда
								ВыгрузитьКорреспонденции();
							
							ИначеЕсли КоличествоУровней &gt; 2 Тогда
								БухИт.ВыбратьСубконто(3);
								Пока БухИт.ПолучитьСубконто(3) = 1 Цикл
									Если ТипЗначенияСтр(БухИт.Субконто(3)) = "Справочник" Тогда
										Если БухИт.Субконто(3).ЭтоГруппа() = 1 Тогда
											Продолжить;
										КонецЕсли;
									КонецЕсли;
									
									ВыгрузитьКорреспонденции();
								КонецЦикла;
							КонецЕсли;	
						КонецЦикла;
					КонецЕсли;	
				КонецЦикла;
			КонецЕсли;	
		КонецЦикла;
	КонецЦикла;
	
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
	ВходящиеДанные.Установить(РегистрБух, ПроводкиОбороты);
	ВходящиеДанные.Установить("Счет", Счет);
	ВходящиеДанные.Установить("Дата", БухИт.КонДата);
	ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияБух");
	
КонецЦикла;

</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВыгрузитьСведенияОбИБ" ИспользуетсяПриЗагрузке="false">
			<Текст>Идентификатор = "ИдентификаторКонфигурации";
Значение = глИдентификаторКонфигурации();
УстановитьАтрибут(rootNode, Идентификатор, Значение);

//**********************************************************
Идентификатор = "Конфигурация";
Значение = Метаданные.Идентификатор;
УстановитьАтрибут(rootNode, Идентификатор, Значение);

//**********************************************************
Идентификатор = "НомерРелиза";
Значение = Константа.НомерРелиза;
УстановитьАтрибут(rootNode, Идентификатор, Значение);

//**********************************************************
Идентификатор = "Организация";
Значение = ?(ПустоеЗначение(Константа.НаименованиеОрганизации) = 0, Константа.НаименованиеОрганизации, Константа.ПолноеНаименованиеОрганизации);
УстановитьАтрибут(rootNode, Идентификатор, Значение);

//**********************************************************
Идентификатор = "ИНН";
Значение = Лев(Константа.ИННОрганизации, 10);
УстановитьАтрибут(rootNode, Идентификатор, Значение);

//**********************************************************
Идентификатор = "КПП";
Значение = Сред(Константа.ИННОрганизации, 12, 9);
УстановитьАтрибут(rootNode, Идентификатор, Значение);

//**********************************************************
Идентификатор = "УчетЗарплатыВоВнешнейПрограмме";
Значение = ?(Константа.УчетЗарплатыВоВнешнейПрограмме = Перечисление.Булево.Нет, 0, 0);
УстановитьАтрибут(rootNode, Идентификатор, Значение);
</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВыделитьАвансы" ИспользуетсяПриЗагрузке="false">
			<Текст>Проводки = Параметры.ТаблицаПроводок;
Проводки.УдалитьСтроки();

Счета = Лев(Параметры.СписокСчетовРасчетов, СтрДлина(Параметры.СписокСчетовРасчетов)-1);
БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
БухИт.ИспользоватьСубконто(ВидыСубконто.Контрагенты);
БухИт.ИспользоватьСубконто(ВидыСубконто.Договоры);
БухИт.ВыполнитьЗапрос(, Параметры.ДатаКонцаПериодаВыгрузки, Счета);

БухИт.ВыбратьСчета();
Пока БухИт.ПолучитьСчет() = 1 Цикл
	Проводки.УдалитьСтроки();
	
	Если БухИт.Счет.Валютный = 1 Тогда
		БухИт.ВыбратьВалюты();
		Пока БухИт.ПолучитьВалюту() = 1 Цикл
			
			БухИт.ВыбратьСубконто(1);
			Пока БухИт.ПолучитьСубконто(1) = 1 Цикл
				БухИт.ВыбратьСубконто(2);
				Пока БухИт.ПолучитьСубконто(2) = 1 Цикл
					
					Если БухИт.Счет.Родитель(1).Код = "60" Тогда
						КодСчетаДт = ?(БухИт.Счет.Валютный = 1, "60.22", "60.02");
						КодСчетаКт = ?(БухИт.Счет.Валютный = 1, "60.21", "60.01");
						ПризнакАванса = "Дт";
					ИначеЕсли БухИт.Счет.Родитель(1).Код = "62" Тогда
						КодСчетаДт = ?(БухИт.Счет.Валютный = 1, "62.21", "62.01");
						КодСчетаКт = ?(БухИт.Счет.Валютный = 1, "62.22", "62.02");
						ПризнакАванса = "Кт";
					Иначе
						Продолжить;
					КонецЕсли;
					
					Если ((БухИт.СКД("С") &gt; 0) И (ПризнакАванса = "Дт")) ИЛИ ((БухИт.СКК("С") &gt; 0) И (ПризнакАванса = "Кт")) Тогда
						Выделить = 1;
					Иначе
						Выделить = 0;
						Продолжить;
					КонецЕсли;				
					
					//Добавим проводку
					Проводки.НоваяСтрока();
					
					Проводки.СчетДт = БухИт.Счет;
	                Проводки.СчетКт = БухИт.Счет;
					
					Проводки.КодСчетаДт = КодСчетаДт;
					Проводки.КодСчетаКт = КодСчетаКт;
					
					Проводки.СубконтоДт = СоздатьОбъект("ТаблицаЗначений");
					Проводки.СубконтоДт.НоваяКолонка("Ключ");
					Проводки.СубконтоДт.НоваяКолонка("Значение");
					
					Проводки.СубконтоДт.НоваяСтрока();
					Проводки.СубконтоДт.Ключ = ВидыСубконто.Контрагенты;
					Проводки.СубконтоДт.Значение = БухИт.Субконто(1);
					
					Проводки.СубконтоДт.НоваяСтрока();
					Проводки.СубконтоДт.Ключ = ВидыСубконто.Договоры;
					Проводки.СубконтоДт.Значение = БухИт.Субконто(2);
					
					Проводки.СубконтоКт = СоздатьОбъект("ТаблицаЗначений");
					Проводки.СубконтоКт.НоваяКолонка("Ключ");
					Проводки.СубконтоКт.НоваяКолонка("Значение");
					
					Проводки.СубконтоКт.НоваяСтрока();
					Проводки.СубконтоКт.Ключ = ВидыСубконто.Контрагенты;
					Проводки.СубконтоКт.Значение = БухИт.Субконто(1);
					
					Проводки.СубконтоКт.НоваяСтрока();
					Проводки.СубконтоКт.Ключ = ВидыСубконто.Договоры;
					Проводки.СубконтоКт.Значение = БухИт.Субконто(2);
					
					Проводки.ВалютнаяСуммаДт = ?(ПризнакАванса = "Дт" , БухИт.СКД("В"), БухИт.СКК("В"));
					Проводки.ВалютнаяСуммаКт = ?(ПризнакАванса = "Дт" , БухИт.СКД("В"), БухИт.СКК("В"));
					Проводки.ВалютаДт = БухИт.Валюта;
					Проводки.ВалютаКт = БухИт.Валюта;
					
					Проводки.Сумма = ?(ПризнакАванса = "Дт" , БухИт.СКД("С"), БухИт.СКК("С"));
					
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
		
	Иначе
		БухИт.ВыбратьСубконто(1);
		Пока БухИт.ПолучитьСубконто(1) = 1 Цикл
			БухИт.ВыбратьСубконто(2);
			Пока БухИт.ПолучитьСубконто(2) = 1 Цикл
				
				Если БухИт.Счет.Родитель(1).Код = "60" Тогда
					КодСчетаДт = ?(БухИт.Счет.Валютный = 1, "60.22", "60.02");
					КодСчетаКт = ?(БухИт.Счет.Валютный = 1, "60.21", "60.01");
					ПризнакАванса = "Дт";
				ИначеЕсли БухИт.Счет.Родитель(1).Код = "62" Тогда
					КодСчетаДт = ?(БухИт.Счет.Валютный = 1, "62.21", "62.01");
					КодСчетаКт = ?(БухИт.Счет.Валютный = 1, "62.22", "62.02");
					ПризнакАванса = "Кт";
				Иначе
					Продолжить;
				КонецЕсли;
				
				Если ((БухИт.СКД("С") &gt; 0) И (ПризнакАванса = "Дт")) ИЛИ ((БухИт.СКК("С") &gt; 0) И (ПризнакАванса = "Кт")) Тогда
					Выделить = 1;
				Иначе
					Выделить = 0;
					Продолжить;
				КонецЕсли;				
				
				
				
				//Добавим проводку
				Проводки.НоваяСтрока();
									
				Проводки.СчетДт = БухИт.Счет;
				Проводки.СчетКт = БухИт.Счет;
				
				Проводки.КодСчетаДт = КодСчетаДт;
				Проводки.КодСчетаКт = КодСчетаКт;
				
				Проводки.СубконтоДт = СоздатьОбъект("ТаблицаЗначений");
				Проводки.СубконтоДт.НоваяКолонка("Ключ");
				Проводки.СубконтоДт.НоваяКолонка("Значение");
				
				Проводки.СубконтоДт.НоваяСтрока();
				Проводки.СубконтоДт.Ключ = ВидыСубконто.Контрагенты;
				Проводки.СубконтоДт.Значение = БухИт.Субконто(1);
				
				Проводки.СубконтоДт.НоваяСтрока();
				Проводки.СубконтоДт.Ключ = ВидыСубконто.Договоры;
				Проводки.СубконтоДт.Значение = БухИт.Субконто(2);
				
				Проводки.СубконтоКт = СоздатьОбъект("ТаблицаЗначений");
				Проводки.СубконтоКт.НоваяКолонка("Ключ");
				Проводки.СубконтоКт.НоваяКолонка("Значение");
				
				Проводки.СубконтоКт.НоваяСтрока();
				Проводки.СубконтоКт.Ключ = ВидыСубконто.Контрагенты;
				Проводки.СубконтоКт.Значение = БухИт.Субконто(1);
				
				Проводки.СубконтоКт.НоваяСтрока();
				Проводки.СубконтоКт.Ключ = ВидыСубконто.Договоры;
				Проводки.СубконтоКт.Значение = БухИт.Субконто(2);
				
				Проводки.Сумма = ?(ПризнакАванса = "Дт" , БухИт.СКД("С"), БухИт.СКК("С"));
				
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
	ВходящиеДанные.Установить("Хозрасчетный", Проводки);
	ВходящиеДанные.Установить("Счет", "Авансы по " + БухИт.Счет);
	Если Параметры.ДатаКонцаПериодаВыгрузки = Параметры.ДатаВводаОстатков Тогда
		ВходящиеДанные.Установить("Дата", БухИт.КонДата-1);
	Иначе
		ВходящиеДанные.Установить("Дата", Параметры.ДатаКонцаПериодаВыгрузки);
	КонецЕсли;	
	ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияБух");
КонецЦикла;

</Текст>
		</Алгоритм>
		<Алгоритм Имя="ДобавитьПроводку" ИспользуетсяПриЗагрузке="false">
			<Текст>ТолькоОбороты = Параметры.ПараметрыАлгоритмов.Получить("ТолькоОбороты");
Если ТолькоОбороты = 1 Тогда
	Возврат 0;
КонецЕсли;

Проводки = Параметры.ПараметрыАлгоритмов.Получить("Проводки");
БухИт = Параметры.ПараметрыАлгоритмов.Получить("БухИт");
ТекНомерСубконто = Параметры.ПараметрыАлгоритмов.Получить("ТекНомерСубконто");
КоличествоУровней = Параметры.ПараметрыАлгоритмов.Получить("КоличествоУровней");

ОстатокДтС = Параметры.ПараметрыАлгоритмов.Получить("ОстатокДтС");
ОстатокДтВ = Параметры.ПараметрыАлгоритмов.Получить("ОстатокДтВ");
ОстатокДтК = Параметры.ПараметрыАлгоритмов.Получить("ОстатокДтК");

ОстатокКтС = Параметры.ПараметрыАлгоритмов.Получить("ОстатокКтС");
ОстатокКтВ = Параметры.ПараметрыАлгоритмов.Получить("ОстатокКтВ");
ОстатокКтК = Параметры.ПараметрыАлгоритмов.Получить("ОстатокКтК");

Налоговый = ?(Параметры.ПараметрыАлгоритмов.Получить("Регистр") = "Налоговый", 1, 0);

Сч45 = СчетПоКоду("45");

Если (ОстатокДтС &lt;&gt; 0) или (ОстатокДтВ &lt;&gt; 0) или (ОстатокДтК &lt;&gt; 0) Тогда
	Проводки.НоваяСтрока();
	Проводки.СчетДт = БухИт.Счет;
	Если (БухИт.Счет.Забалансовый = 0) и (Налоговый = 0) Тогда
		Проводки.СчетКт = Параметры.СчетВводаОстатков;
	КонецЕсли;
		
	Проводки.СубконтоДт = СоздатьОбъект("ТаблицаЗначений");
	Проводки.СубконтоДт.НоваяКолонка("Ключ");
	Проводки.СубконтоДт.НоваяКолонка("Значение");
	
	Для НомерСубконто = 1 по ТекНомерСубконто Цикл
		Проводки.СубконтоДт.НоваяСтрока();
		Проводки.СубконтоДт.Ключ = БухИт.Счет.ВидСубконто(НомерСубконто);
		Проводки.СубконтоДт.Значение = БухИт.Субконто(НомерСубконто);
	КонецЦикла;
	
	Проводки.Сумма = ОстатокДтС;
	
	Если (БухИт.Счет.Валютный = 1) и (Параметры.ВыгружатьБезВалют.НайтиЗначение(БухИт.Счет) = 0) Тогда
		Проводки.ВалютнаяСуммаДт = ОстатокДтВ;
		Проводки.ВалютаДт = БухИт.Валюта;
	КонецЕсли;
		
	Если БухИт.Счет = Сч45 Тогда
		Номенклатура = БухИт.Субконто(3);
		Если Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар Тогда
			Проводки.КодСчетаДт = "45.01";
													
		ИначеЕсли Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция Тогда
			Проводки.КодСчетаДт = "45.02";
													
		Иначе
			Проводки.КодСчетаДт = "45.03";
		КонецЕсли;
	КонецЕсли;
	
	Если (КоличествоУровней = ТекНомерСубконто) и (БухИт.Счет.Количественный = 1) Тогда
		Параметры.ПараметрыАлгоритмов.Установить("Проводки", Проводки);
		Параметры.ПараметрыАлгоритмов.Установить("БухИтПроводокПоСкладам", БухИт);
		Параметры.ПараметрыАлгоритмов.Установить("ОстатокПроводокПоСкладам", ОстатокДтК);
		Параметры.ПараметрыАлгоритмов.Установить("ИмяИтоговПроводокПоСкладам", "СНД");
		Параметры.ПараметрыАлгоритмов.Установить("КорСчетПроводокПоСкладам", 0);
		
		ОпределитьОстатокПоСкладу();
		
		Проводки = Параметры.ПараметрыАлгоритмов.Получить("Проводки");
	КонецЕсли;
	
КонецЕсли;

Если (ОстатокКтС &lt;&gt; 0) или (ОстатокКтВ &lt;&gt; 0) или (ОстатокКтК &lt;&gt; 0) Тогда
	Проводки.НоваяСтрока();
	Проводки.СчетКт = БухИт.Счет;
	Если (БухИт.Счет.Забалансовый = 0) и (Налоговый = 0) Тогда
		Проводки.СчетДт = Параметры.СчетВводаОстатков;
	КонецЕсли;
		
	Проводки.СубконтоКт = СоздатьОбъект("ТаблицаЗначений");
	Проводки.СубконтоКт.НоваяКолонка("Ключ");
	Проводки.СубконтоКт.НоваяКолонка("Значение");
	
	Для НомерСубконто = 1 по ТекНомерСубконто Цикл
		Проводки.СубконтоКт.НоваяСтрока();
		Проводки.СубконтоКт.Ключ = БухИт.Счет.ВидСубконто(НомерСубконто);
		Проводки.СубконтоКт.Значение = БухИт.Субконто(НомерСубконто);
	КонецЦикла;
	
	Проводки.Сумма = ОстатокКтС;
	
	Если (БухИт.Счет.Валютный = 1) и (Параметры.ВыгружатьБезВалют.НайтиЗначение(БухИт.Счет) = 0) Тогда
		Проводки.ВалютнаяСуммаКт = ОстатокКтВ;
		Проводки.ВалютаКт = БухИт.Валюта;
	КонецЕсли;
		
	Если БухИт.Счет = Сч45 Тогда
		Номенклатура = БухИт.Субконто(3);
		Если Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар Тогда
			Проводки.КодСчетаДт = "45.01";
													
		ИначеЕсли Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция Тогда
			Проводки.КодСчетаДт = "45.02";
													
		Иначе
			Проводки.КодСчетаДт = "45.03";
		КонецЕсли;
	КонецЕсли;
	
	Если (КоличествоУровней = ТекНомерСубконто) и (БухИт.Счет.Количественный = 1) и (Найти(Параметры.СписокСчетовСкладскогоУчета, БухИт.Счет.Код) = 0) Тогда
		Проводки.КоличествоКт = ОстатокКтК;
	КонецЕсли;
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ДобавитьПроводкуОбороты" ИспользуетсяПриЗагрузке="false">
			<Текст>Проводки = Параметры.ПараметрыАлгоритмов.Получить("ПроводкиОбороты");
БухИт = Параметры.ПараметрыАлгоритмов.Получить("БухИт");

ОборотДтС = Параметры.ПараметрыАлгоритмов.Получить("ОборотДтС");
ОборотДтВ = Параметры.ПараметрыАлгоритмов.Получить("ОборотДтВ");
ОборотДтК = Параметры.ПараметрыАлгоритмов.Получить("ОборотДтК");

Сч45 = СчетПоКоду("45");

ТолькоСумма = Параметры.ПараметрыАлгоритмов.Получить("ТолькоСумма");
Если ТолькоСумма = 1 Тогда
	ТекНомерСубконто = Параметры.ПараметрыАлгоритмов.Получить("ТекНомерСубконто");
		
Иначе
	ТекНомерСубконто = БухИт.КорСчет.КоличествоСубконто();
КонецЕсли;

Если (ОборотДтС &lt;&gt; 0) или (ОборотДтВ &lt;&gt; 0) или (ОборотДтК &lt;&gt; 0) и (ТолькоСумма = 0) Тогда
	Проводки.НоваяСтрока();
	Проводки.СчетДт = БухИт.Счет;
	Проводки.СчетКт = БухИт.КорСчет;
	
	Проводки.СубконтоДт = СоздатьОбъект("ТаблицаЗначений");
	Проводки.СубконтоДт.НоваяКолонка("Ключ");
	Проводки.СубконтоДт.НоваяКолонка("Значение");
	
	Проводки.СубконтоКт = СоздатьОбъект("ТаблицаЗначений");
	Проводки.СубконтоКт.НоваяКолонка("Ключ");
	Проводки.СубконтоКт.НоваяКолонка("Значение");
	
	Для НомерСубконто = 1 по БухИт.Счет.КоличествоСубконто() Цикл
		Проводки.СубконтоДт.НоваяСтрока();
		Проводки.СубконтоДт.Ключ = БухИт.Счет.ВидСубконто(НомерСубконто);
		Проводки.СубконтоДт.Значение = БухИт.Субконто(НомерСубконто);
	КонецЦикла;	
	
	Для НомерСубконто = 1 по ТекНомерСубконто Цикл
		Проводки.СубконтоКт.НоваяСтрока();
		Проводки.СубконтоКт.Ключ = БухИт.КорСчет.ВидСубконто(НомерСубконто);
		Проводки.СубконтоКт.Значение = БухИт.КорСубконто(НомерСубконто);
	КонецЦикла;
	
	Проводки.Сумма = ОборотДтС;
	
	Если (БухИт.Счет.Валютный = 1) и (Параметры.ВыгружатьБезВалют.НайтиЗначение(БухИт.Счет) = 0) Тогда
		Проводки.ВалютнаяСуммаДт = ОборотДтВ;
		Проводки.ВалютаДт = БухИт.Валюта;
	КонецЕсли;
	
	Если (БухИт.КорСчет.Валютный = 1) и (Параметры.ВыгружатьБезВалют.НайтиЗначение(БухИт.КорСчет) = 0) Тогда
		Проводки.ВалютнаяСуммаКт = ОборотДтВ;
		Проводки.ВалютаКт = БухИт.Валюта;
	КонецЕсли;
	
	Если БухИт.Счет = Сч45 Тогда
		Номенклатура = БухИт.Субконто(3);
		Если Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар Тогда
			Проводки.КодСчетаДт = "45.01";
														
		ИначеЕсли Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция Тогда
			Проводки.КодСчетаДт = "45.02";
														
		Иначе
			Проводки.КодСчетаДт = "45.03";
		КонецЕсли;
	КонецЕсли;

	Если БухИт.КорСчет = Сч45 Тогда
		Номенклатура = БухИт.КорСубконто(3);
		Если Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар Тогда
			Проводки.КодСчетаКт = "45.01";
														
		ИначеЕсли Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция Тогда
			Проводки.КодСчетаКт = "45.02";
														
		Иначе
			Проводки.КодСчетаКт = "45.03";
		КонецЕсли;
	КонецЕсли;
	
	Если ТолькоСумма = 0 Тогда
		Если (БухИт.Счет.Количественный = 1) Тогда
			Параметры.ПараметрыАлгоритмов.Установить("Проводки", Проводки);
			Параметры.ПараметрыАлгоритмов.Установить("БухИтПроводокПоСкладам", БухИт);
			Параметры.ПараметрыАлгоритмов.Установить("ОстатокПроводокПоСкладам", ОборотДтК);
			Параметры.ПараметрыАлгоритмов.Установить("ИмяИтоговПроводокПоСкладам", "ДО");
			Параметры.ПараметрыАлгоритмов.Установить("КорСчетПроводокПоСкладам", 0);

			ОпределитьОстатокПоСкладу();
			
			Проводки = Параметры.ПараметрыАлгоритмов.Получить("Проводки");
		КонецЕсли;
		
		Если (БухИт.КорСчет.Количественный = 1) Тогда
			Параметры.ПараметрыАлгоритмов.Установить("Проводки", Проводки);
			Параметры.ПараметрыАлгоритмов.Установить("БухИтПроводокПоСкладам", БухИт);
			Параметры.ПараметрыАлгоритмов.Установить("ОстатокПроводокПоСкладам", ОборотДтК);
			Параметры.ПараметрыАлгоритмов.Установить("ИмяИтоговПроводокПоСкладам", "КО");
			Параметры.ПараметрыАлгоритмов.Установить("КорСчетПроводокПоСкладам", 1);

			ОпределитьОстатокПоСкладу();
			
			Проводки = Параметры.ПараметрыАлгоритмов.Получить("Проводки");
		КонецЕсли;
	КонецЕсли;
	
КонецЕсли;

ОборотКтС = Параметры.ПараметрыАлгоритмов.Получить("ОборотКтС");
ОборотКтВ = Параметры.ПараметрыАлгоритмов.Получить("ОборотКтВ");
ОборотКтК = Параметры.ПараметрыАлгоритмов.Получить("ОборотКтК");

Если (ОборотКтС &lt;&gt; 0) или (ОборотКтВ &lt;&gt; 0) или (ОборотКтК &lt;&gt; 0) и (ТолькоСумма = 0) Тогда
	Проводки.НоваяСтрока();
	Проводки.СчетКт = БухИт.Счет;
	Проводки.СчетДт = БухИт.КорСчет;
	
	Проводки.СубконтоДт = СоздатьОбъект("ТаблицаЗначений");
	Проводки.СубконтоДт.НоваяКолонка("Ключ");
	Проводки.СубконтоДт.НоваяКолонка("Значение");
	
	Проводки.СубконтоКт = СоздатьОбъект("ТаблицаЗначений");
	Проводки.СубконтоКт.НоваяКолонка("Ключ");
	Проводки.СубконтоКт.НоваяКолонка("Значение");
	
	Для НомерСубконто = 1 по БухИт.Счет.КоличествоСубконто() Цикл
		Проводки.СубконтоКт.НоваяСтрока();
		Проводки.СубконтоКт.Ключ = БухИт.Счет.ВидСубконто(НомерСубконто);
		Проводки.СубконтоКт.Значение = БухИт.Субконто(НомерСубконто);
	КонецЦикла;	
	
	Для НомерСубконто = 1 по ТекНомерСубконто Цикл
		Проводки.СубконтоДт.НоваяСтрока();
		Проводки.СубконтоДт.Ключ = БухИт.КорСчет.ВидСубконто(НомерСубконто);
		Проводки.СубконтоДт.Значение = БухИт.КорСубконто(НомерСубконто);
	КонецЦикла;
	
	Проводки.Сумма = ОборотКтС;
	
	Если (БухИт.Счет.Валютный = 1) и (Параметры.ВыгружатьБезВалют.НайтиЗначение(БухИт.Счет) = 0) Тогда
		Проводки.ВалютнаяСуммаКт = ОборотКтВ;
		Проводки.ВалютаКт = БухИт.Валюта;
	КонецЕсли;
	
	Если (БухИт.КорСчет.Валютный = 1) и (Параметры.ВыгружатьБезВалют.НайтиЗначение(БухИт.КорСчет) = 0) Тогда
		Проводки.ВалютнаяСуммаДт = ОборотКтВ;
		Проводки.ВалютаДт = БухИт.Валюта;
	КонецЕсли;
	
	Если БухИт.Счет = Сч45 Тогда
		Номенклатура = БухИт.Субконто(3);
		Если Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар Тогда
			Проводки.КодСчетаКт = "45.01";
														
		ИначеЕсли Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция Тогда
			Проводки.КодСчетаКт = "45.02";
														
		Иначе
			Проводки.КодСчетаКт = "45.03";
		КонецЕсли;
	КонецЕсли;

	Если БухИт.КорСчет = Сч45 Тогда
		Номенклатура = БухИт.КорСубконто(3);
		Если Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар Тогда
			Проводки.КодСчетаДт = "45.01";
														
		ИначеЕсли Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция Тогда
			Проводки.КодСчетаДт = "45.02";
														
		Иначе
			Проводки.КодСчетаДт = "45.03";
		КонецЕсли;
	КонецЕсли;
	
	Если ТолькоСумма = 0 Тогда
		Если (БухИт.Счет.Количественный = 1) Тогда
			Параметры.ПараметрыАлгоритмов.Установить("Проводки", Проводки);
			Параметры.ПараметрыАлгоритмов.Установить("БухИтПроводокПоСкладам", БухИт);
			Параметры.ПараметрыАлгоритмов.Установить("ОстатокПроводокПоСкладам", ОборотКтК);
			Параметры.ПараметрыАлгоритмов.Установить("ИмяИтоговПроводокПоСкладам", "КО");
			Параметры.ПараметрыАлгоритмов.Установить("КорСчетПроводокПоСкладам", 0);

			ОпределитьОстатокПоСкладу();
			
			Проводки = Параметры.ПараметрыАлгоритмов.Получить("Проводки");
		КонецЕсли;
		
		Если (БухИт.КорСчет.Количественный = 1) Тогда
			Параметры.ПараметрыАлгоритмов.Установить("Проводки", Проводки);
			Параметры.ПараметрыАлгоритмов.Установить("БухИтПроводокПоСкладам", БухИт);
			Параметры.ПараметрыАлгоритмов.Установить("ОстатокПроводокПоСкладам", ОборотКтК);
			Параметры.ПараметрыАлгоритмов.Установить("ИмяИтоговПроводокПоСкладам", "ДО");
			Параметры.ПараметрыАлгоритмов.Установить("КорСчетПроводокПоСкладам", 1);

			ОпределитьОстатокПоСкладу();
			
			Проводки = Параметры.ПараметрыАлгоритмов.Получить("Проводки");
		КонецЕсли;
		
	КонецЕсли;
	
КонецЕсли;
</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьРеквизитыДокументаВНО" ИспользуетсяПриЗагрузке="false">
			<Текст>КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");
КоллекцияОбъектов.ВыбратьСтроки();
Пока КоллекцияОбъектов.ПолучитьСтроку() = 1 Цикл                                                  
	
	СчетДт = ?(ПустоеЗначение(КоллекцияОбъектов.КодСчетаДт) = 1, КоллекцияОбъектов.СчетДт, КоллекцияОбъектов.КодСчетаДт);
	СчетКт = ?(ПустоеЗначение(КоллекцияОбъектов.КодСчетаКт) = 1, КоллекцияОбъектов.СчетКт, КоллекцияОбъектов.КодСчетаКт);
	
	Если (ПустоеЗначение(СчетДт) = 1) и (ПустоеЗначение(СчетКт) = 1) Тогда
		Сообщить("Попытка выгрузки проводки без указания счетов дебета и кредита. Проводка не выгружена.");
		Отказ = 1;
		
	Иначе
		
		Если ТипЗначенияСтр(СчетДт) = "Счет" Тогда
			СчетДт = мТаблицаПравилКонвертацииОбъектов.ПолучитьЗначение(НайтиПравило(СчетДт, "Хозрасчетный"), "Значения").Получить(Строка(СчетДт));
			
		Иначе
			СчетДтЗабалансовый = 1;
		КонецЕсли;
		
		Если ТипЗначенияСтр(СчетКт) = "Счет" Тогда
			СчетКтЗабалансовый = КоллекцияОбъектов.СчетКт.Забалансовый;
			СчетКт = мТаблицаПравилКонвертацииОбъектов.ПолучитьЗначение(НайтиПравило(СчетКт, "Хозрасчетный"), "Значения").Получить(Строка(СчетКт));
			
		Иначе
			СчетКтЗабалансовый = 1;
		КонецЕсли;
		
		Если (ПустоеЗначение(СчетДт) = 1) и (СчетКтЗабалансовый = 0) Тогда
			Сообщить("При попытке выгрузки проводки по кредиту счета " + СокрЛП(СчетКт) + " не удалось определить счет дебета. Проводка не выгружена.");
			Отказ = 1;
			
		ИначеЕсли (ПустоеЗначение(СчетКт) = 1) и (СчетДтЗабалансовый = 0) Тогда
			Сообщить("При попытке выгрузки проводки по дебету счета " + СокрЛП(СчетДт) + " не удалось определить счет кредита. Проводка не выгружена.");
			Отказ = 1;
		КонецЕсли;
	КонецЕсли;
	
	Субконто1 = "";
	Субконто2 = "";
	Субконто3 = "";
	СуммаКт = 0;
	Сумма = 0;
	Количество = 0;
	ВалютнаяСумма = 0;
	
	Если (СокрЛП(СчетКт) &lt;&gt; "00")
		И (СокрЛП(СчетКт) &lt;&gt; "Вспомогательный")
		И (ПустоеЗначение(СокрЛП(СчетКт)) = 0) Тогда
		СчетУчета = СчетКт;
		СуммаКт = КоллекцияОбъектов.Сумма;
		Сумма = 0;
		Если ПустоеЗначение(КоллекцияОбъектов.ВалютнаяСуммаКт) = 0 Тогда
			Валюта = КоллекцияОбъектов.ВалютаКт;
			ВалютнаяСумма = КоллекцияОбъектов.ВалютнаяСуммаКт;
		КонецЕсли;
		Количество = КоллекцияОбъектов.КоличествоКт;
		
		Если КоллекцияОбъектов.СубконтоКт.КоличествоСтрок() &gt;= 1 Тогда
			Субконто1 = КоллекцияОбъектов.СубконтоКт.ПолучитьЗначение(1, "Значение");
			Если КоллекцияОбъектов.СубконтоКт.КоличествоСтрок() &gt;= 2 Тогда
				Субконто2 = КоллекцияОбъектов.СубконтоКт.ПолучитьЗначение(2, "Значение");
				Если КоллекцияОбъектов.СубконтоКт.КоличествоСтрок() = 3 Тогда
					Субконто3 = КоллекцияОбъектов.СубконтоКт.ПолучитьЗначение(3, "Значение");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли (СокрЛП(СчетДт) &lt;&gt; "00")
		И (СокрЛП(СчетДт) &lt;&gt; "Вспомогательный") 
		И (ПустоеЗначение(СокрЛП(СчетДт)) = 0) Тогда
		СчетУчета = СчетДт;
		СуммаКт = 0;
		Сумма = КоллекцияОбъектов.Сумма;
		Если ПустоеЗначение(КоллекцияОбъектов.ВалютнаяСуммаДт) = 0 Тогда
			Валюта = КоллекцияОбъектов.ВалютаДт;
			ВалютнаяСумма = КоллекцияОбъектов.ВалютнаяСуммаДт;
		КонецЕсли;
		Количество = КоллекцияОбъектов.КоличествоДт;
		
		Если КоллекцияОбъектов.СубконтоДт.КоличествоСтрок() &gt;= 1 Тогда
			Субконто1 = КоллекцияОбъектов.СубконтоДт.ПолучитьЗначение(1, "Значение");
			Если КоллекцияОбъектов.СубконтоДт.КоличествоСтрок() &gt;= 2 Тогда
				Субконто2 = КоллекцияОбъектов.СубконтоДт.ПолучитьЗначение(2, "Значение");
				Если КоллекцияОбъектов.СубконтоДт.КоличествоСтрок() = 3 Тогда
					Субконто3 = КоллекцияОбъектов.СубконтоДт.ПолучитьЗначение(3, "Значение");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	КоллекцияОбъектов.СчетУчета = СчетУчета;
	КоллекцияОбъектов.Субконто1 = Субконто1;
	КоллекцияОбъектов.Субконто2 = Субконто2;
	КоллекцияОбъектов.Субконто3 = Субконто3;
	КоллекцияОбъектов.СуммаКт = СуммаКт;
	КоллекцияОбъектов.Сумма = Сумма;
	КоллекцияОбъектов.Количество = Количество;
	КоллекцияОбъектов.Валюта = Валюта;
	КоллекцияОбъектов.ВалютнаяСумма = ВалютнаяСумма;
	
КонецЦикла;
</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьТаблицуНДС" ИспользуетсяПриЗагрузке="false">
			<Текст>//Если (Параметры.ТаблицаНДС.КоличествоСтрок() &gt; 0) Тогда
//	Возврат Параметры.ТаблицаНДС;
//КонецЕсли;

Параметры.ТаблицаНДС.УдалитьСтроки();

ОстаткиНаКонец = Параметры.ПараметрыАлгоритмов.Получить("ОстаткиНаКонец");

БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
СчетаРасчета =  "10.2, 10.3, 10.12, 10.13, 41.2, 41.3, 44.2, 60.2, 60.4, 60.22, 71.2, "+
				"71.22, 76.6, 76.66, 97.2, 97.3, 97.4, КМС.1, КМС.3, ПС.1, ПС.2";

Если ОстаткиНаКонец = 0 Тогда
	БухИт.Рассчитать( , Параметры.ДатаВводаОстатков-1, СчетаРасчета);
Иначе
	БухИт.Рассчитать( , Параметры.ДатаКонцаПериодаВыгрузки, СчетаРасчета);
КонецЕсли;

Счет = СчетПоКоду("НДС");
БухИтНДС = СоздатьОбъект("БухгалтерскиеИтоги");
БухИтНДС.ИспользоватьСубконто(Счет.ВидСубконто(1));
БухИтНДС.ИспользоватьСубконто(Счет.ВидСубконто(2));
БухИтНДС.ИспользоватьСубконто(Счет.ВидСубконто(3));

Если ОстаткиНаКонец = 0 Тогда
	БухИтНДС.ВыполнитьЗапрос(, Параметры.ДатаВводаОстатков-1, Счет);
Иначе
	БухИтНДС.ВыполнитьЗапрос(, Параметры.ДатаКонцаПериодаВыгрузки, Счет);
КонецЕсли;
	
БухИтНДС.ВыбратьСубконто(1);
Пока БухИтНДС.ПолучитьСубконто(1) = 1 Цикл
	БухИтНДС.ВыбратьСубконто(2);
	Пока БухИтНДС.ПолучитьСубконто(2) = 1 Цикл
		БухИтНДС.ВыбратьСубконто(3);
		Пока БухИтНДС.ПолучитьСубконто(3) = 1 Цикл
			
			Контрагент = БухИтНДС.Субконто(1);
			Договор = БухИтНДС.Субконто(2);
			ВидРасчетов = БухИтНДС.Субконто(3);
			Активы = 0;
			Если ВидРасчетов = Перечисление.ВидыРасчетовСПоставщиками.РасходыНаПриобретениеМатериалов Тогда
				Материалы	   = Макс(0, БухИт.СКД("10.2", "С",,, Контрагент, Договор)+
										 БухИт.СКД("10.3", "С",,, Контрагент, Договор)+
										 БухИт.СКД("10.12", "С",,, Контрагент, Договор)+
										 БухИт.СКД("10.13", "С",,, Контрагент, Договор));
				Товары   	   = Макс(0, БухИт.СКД("41.2", "С",,, Контрагент, Договор)+
										 БухИт.СКД("41.3", "С",,, Контрагент, Договор)+
										 БухИт.СКД("44.2", "С",,, Договор)+
										 БухИт.СКД("КМС.1", "С",,,, Договор)+
										 БухИт.СКД("КМС.3", "С",,,, Договор)+
										 БухИт.СКД("ПС.1", "С",,,, Договор)+
										 БухИт.СКД("ПС.2", "С",,,, Договор));
				Активы = Материалы + Товары;
			ИначеЕсли (ВидРасчетов = Перечисление.ВидыРасчетовСПоставщиками.ОтложенныеРасходы) или
				(ВидРасчетов = Перечисление.ВидыРасчетовСПоставщиками.ОтложенныеРаспределяемые) Тогда
				РБП			   = Макс(0, БухИт.СКД("97.2", "С",,, Контрагент, Договор)+
										 БухИт.СКД("97.3", "С",,, Контрагент, Договор)+
										 БухИт.СКД("97.4", "С",,, Контрагент, Договор));
				Активы = РБП;
			КонецЕсли;
			Задолженность1 = Макс(0, БухИт.СКК("60.2", "С",, Контрагент, Договор, ВидРасчетов)+
									 БухИт.СКК("60.4", "С",, Контрагент, Договор, ВидРасчетов)+
									 БухИт.СКК("60.22", "С",, Контрагент, Договор, ВидРасчетов));
			Задолженность2 = Макс(0, БухИт.СКК("71.2", "С",, Контрагент, Договор, ВидРасчетов)+
									 БухИт.СКК("71.22", "С",, Контрагент, Договор, ВидРасчетов));
			Задолженность3 = Макс(0, БухИт.СКК("76.6", "С",, Контрагент, Договор, ВидРасчетов)+
									 БухИт.СКК("76.66", "С",, Контрагент, Договор, ВидРасчетов));
			
			ЗадолженностьПередПоставщиком  = Задолженность1+Задолженность2+Задолженность3;
			
			СуммаНеПринятыхРасходов = Макс(Активы, ЗадолженностьПередПоставщиком);
			
			Представление1 = ?(ПустоеЗначение(БухИтНДС.Субконто(1)) = 1, "", Строка(БухИтНДС.Субконто(1).Код));
			Представление2 = ?(ПустоеЗначение(БухИтНДС.Субконто(2)) = 1, "", Строка(БухИтНДС.Субконто(2).Код));
			Представление3 = Строка(БухИтНДС.Субконто(3));
			СтрокаКлюча = Представление1 + ";" + Представление2 + ";" + Представление3;
						
			Параметры.ТаблицаНДС.НоваяСтрока();
			Параметры.ТаблицаНДС.НДС 		= БухИтНДС.СКД("С");
			Параметры.ТаблицаНДС.Сумма 		= СуммаНеПринятыхРасходов;
			Параметры.ТаблицаНДС.Контрагент = БухИтНДС.Субконто(1);
			Параметры.ТаблицаНДС.Договор 	= БухИтНДС.Субконто(2);
			Параметры.ТаблицаНДС.ВидРасчетов= БухИтНДС.Субконто(3);
			Параметры.ТаблицаНДС.Ключ 		= СтрокаКлюча;
						
		КонецЦикла;
	КонецЦикла;
КонецЦикла;</Текст>
		</Алгоритм>
		<Алгоритм Имя="НУ_ДобавитьЗаписьПоТМЦ" ИспользуетсяПриЗагрузке="false">
			<Текст>ТолькоОбороты = Параметры.ПараметрыАлгоритмов.Получить("ТолькоОбороты");
ОстаткиНаКонец = Параметры.ПараметрыАлгоритмов.Получить("ОстаткиНаКонец");
Если ТолькоОбороты = 1 Тогда
	Возврат 0;
КонецЕсли;

ОстаткиПоТМЦ 				= Параметры.ОстаткиПоТМЦ;
ОстаткиПоТМЦПереданные		= Параметры.ОстаткиПоТМЦПереданные;
РасходыНоменклатура			= Параметры.РасходыНоменклатура;
Если ОстаткиНаКонец = 1 Тогда
	ВременнаяТаблицаРасчетов = Параметры.ВременнаяТаблицаРасчетовКон;
	Параметры.ТаблицаНДСКон.Выгрузить(Параметры.ТаблицаНДС);
Иначе
	ВременнаяТаблицаРасчетов = Параметры.ВременнаяТаблицаРасчетовНач;
	Параметры.ТаблицаНДСНач.Выгрузить(Параметры.ТаблицаНДС);
КонецЕсли;
СтрокаТаблицыЗначений		= Параметры.СтрокаТаблицыЗначений;

БухИт = Параметры.ПараметрыАлгоритмов.Получить("БухИт");
Счет  = БухИт.Счет;
ТекНомерСубконто = Параметры.ПараметрыАлгоритмов.Получить("ТекНомерСубконто");
КоличествоУровней = Параметры.ПараметрыАлгоритмов.Получить("КоличествоУровней");

ОстатокДтС = Параметры.ПараметрыАлгоритмов.Получить("ОстатокДтС");
ОстатокДтВ = Параметры.ПараметрыАлгоритмов.Получить("ОстатокДтВ");
ОстатокДтК = Параметры.ПараметрыАлгоритмов.Получить("ОстатокДтК");

ОстатокКтС = Параметры.ПараметрыАлгоритмов.Получить("ОстатокКтС");
ОстатокКтВ = Параметры.ПараметрыАлгоритмов.Получить("ОстатокКтВ");
ОстатокКтК = Параметры.ПараметрыАлгоритмов.Получить("ОстатокКтК");

Если (ОстатокДтС &lt;&gt; 0) или (ОстатокДтВ &lt;&gt; 0) или (ОстатокДтК &lt;&gt; 0) Тогда
	
	//Добавить запись по расходам
	Если (Счет.Код &lt;&gt; "10.1") И (Счет.Код  &lt;&gt; "41.1") И (Счет.Код  &lt;&gt; "43") И (Счет.Код &lt;&gt; "004") Тогда
		
		//Определение входящего НДС
		Сумма 			= ?(БухИт.Счет.Валютный = 1, ОстатокДтВ, ОстатокДтС);
		Представление1 	= ?(ПустоеЗначение(БухИт.Субконто(3)) = 1, "", Строка(БухИт.Субконто(3).Владелец.Код));
		Представление2 	= ?(ПустоеЗначение(БухИт.Субконто(3)) = 1, "", Строка(БухИт.Субконто(3).Код));
		Представление3 	= Строка(Перечисление.ВидыРасчетовСПоставщиками.РасходыНаПриобретениеМатериалов);
		СтрокаКлюча 	= Представление1 + ";" + Представление2 + ";" + Представление3;
		НомерСтроки 	= "";
		
		Если Параметры.ТаблицаНДС.НайтиЗначение(СтрокаКлюча, НомерСтроки, "Ключ") = 1 Тогда
			Параметры.ТаблицаНДС.ПолучитьСтрокуПоНомеру(НомерСтроки);
			НДС = ?(Параметры.ТаблицаНДС.Сумма = 0, 0, Сумма * Параметры.ТаблицаНДС.НДС / Параметры.ТаблицаНДС.Сумма);
			НДСВал = ?((ОстатокДтВ = 0) ИЛИ (ОстатокДтС = 0), 0, НДС/(ОстатокДтС/ОстатокДтВ));						
			
		Иначе
			НДС = 0;
			НДСВал = 0;
			
		КонецЕсли;
					
		РасходыНоменклатура.НоваяСтрока();
		РасходыНоменклатура.Номенклатура 				= БухИт.Субконто(1);
		РасходыНоменклатура.СчетУчета 					= БухИт.Счет;
		РасходыНоменклатура.СтатусыПартийУСН 			= "Купленные";
		РасходыНоменклатура.Контрагент 					= БухИт.Субконто(2);
		РасходыНоменклатура.ДоговорКонтрагента 			= БухИт.Субконто(3);
		РасходыНоменклатура.РасчетныйДокумент 			= БухИт.Субконто(3);
		РасходыНоменклатура.ДокументОприходования       = БухИт.Субконто(3);
		РасходыНоменклатура.СтатусыОплатыРасходовУСН	= "НеСписано";
		РасходыНоменклатура.ОтражениеВУСН 				= "Принимаются";
		РасходыНоменклатура.Валюта 						= Параметры.Рубли;
		РасходыНоменклатура.Количество 					= ОстатокДтК;
		РасходыНоменклатура.Сумма 						= ОстатокДтС;
		РасходыНоменклатура.НДС 						= НДС;
		Если БухИт.Счет.Валютный = 1 Тогда
			РасходыНоменклатура.СуммаВал = ОстатокДтВ;
			РасходыНоменклатура.НДСВал = НДСВал;
			РасходыНоменклатура.Валюта = БухИт.Валюта;
		КонецЕсли;
		
		Если Сумма  &gt; 0 Тогда
			
			СтрокаТаблицыЗначений.УдалитьСтроки();
			
			СтрокаТаблицыЗначений.НоваяСтрока();
			СтрокаТаблицыЗначений.Номенклатура 				= РасходыНоменклатура.Номенклатура;
			СтрокаТаблицыЗначений.СчетУчета 				= РасходыНоменклатура.СчетУчета;
			СтрокаТаблицыЗначений.СтатусыПартийУСН 			= "Купленные";
			СтрокаТаблицыЗначений.Контрагент 				= РасходыНоменклатура.Контрагент;
			СтрокаТаблицыЗначений.ДоговорКонтрагента 		= РасходыНоменклатура.ДоговорКонтрагента;
			СтрокаТаблицыЗначений.РасчетныйДокумент 		= РасходыНоменклатура.ДоговорКонтрагента;
			СтрокаТаблицыЗначений.ДокументОприходования       = РасходыНоменклатура.ДокументОприходования;
			СтрокаТаблицыЗначений.СтатусыОплатыРасходовУСН 	= "НеСписано";
			СтрокаТаблицыЗначений.ОтражениеВУСН 			= "Принимаются";
			СтрокаТаблицыЗначений.Валюта 					= РасходыНоменклатура.Валюта;
			СтрокаТаблицыЗначений.Количество 				= РасходыНоменклатура.Количество;
			СтрокаТаблицыЗначений.Сумма 					= РасходыНоменклатура.Сумма;
			СтрокаТаблицыЗначений.НДС 						= РасходыНоменклатура.НДС;
			СтрокаТаблицыЗначений.СуммаВал 					= РасходыНоменклатура.СуммаВал;
			СтрокаТаблицыЗначений.НДСВал					= РасходыНоменклатура.НДСВал;
			СтрокаТаблицыЗначений.ИндексСтроки				= РасходыНоменклатура.НомерСтроки-1;
			
			УстановитьСтатусОплатыНоменклатуры();
		КонецЕсли;
	КонецЕсли;
	
КонецЕсли;
</Текст>
		</Алгоритм>
		<Алгоритм Имя="НУ_ОстаткиПо004" ИспользуетсяПриЗагрузке="false">
			<Текст>ОчиститьПараметры();
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора","СКомитентом");

ОстаткиПоТМЦ = Параметры.ОстаткиПоТМЦ;
ОстаткиПоТМЦПереданные = Параметры.ОстаткиПоТМЦПереданные;

БухИт004 = СоздатьОбъект("БухгалтерскиеИтоги");
БухИт004.ИспользоватьСубконто(ВидыСубконто.Номенклатура);
БухИт004.ИспользоватьСубконто(ВидыСубконто.Контрагенты);
БухИт004.ИспользоватьСубконто(ВидыСубконто.Договоры);
БухИт004.ВыполнитьЗапрос(, Параметры.ДатаКонцаПериодаВыгрузки, "004");

БухИтКМС = СоздатьОбъект("БухгалтерскиеИтоги");
БухИтКМС.ИспользоватьСубконто(ВидыСубконто.Номенклатура);
БухИтКМС.ИспользоватьСубконто(ВидыСубконто.ДоговорыПоставки);
БухИтКМС.ИспользоватьСубконто(ВидыСубконто.Договоры);
БухИтКМС.ВыполнитьЗапрос(, Параметры.ДатаКонцаПериодаВыгрузки, "КМС.2");

БухИт004.ВыбратьСубконто(1);
Пока БухИт004.ПолучитьСубконто(1) = 1 Цикл
	БухИт004.ВыбратьСубконто(2);
	Пока БухИт004.ПолучитьСубконто(2) = 1 Цикл
		БухИт004.ВыбратьСубконто(3);
		Пока БухИт004.ПолучитьСубконто(3) = 1 Цикл
			
			Сумма = БухИт004.СКД("С");
			Количество = БухИт004.СКД("К");
			
			Если БухИтКМС.ПолучитьСубконто(1,, БухИт004.Субконто(1)) + БухИтКМС.ПолучитьСубконто(2,, БухИт004.Субконто(3)) &gt; 1 Тогда
				БухИтКМС.ВыбратьСубконто(3);
				Пока БухИтКМС.ПолучитьСубконто(3) = 1 Цикл
					
					ОстаткиПоТМЦПереданные.НоваяСтрока(); 
					ОстаткиПоТМЦПереданные.Номенклатура				= БухИтКМС.Субконто(1);
					ОстаткиПоТМЦПереданные.ДоговорКонтрагента		= БухИтКМС.Субконто(3);
					ОстаткиПоТМЦПереданные.Контрагент				= БухИт004.Субконто(3).Владелец;
					ОстаткиПоТМЦПереданные.СчетУчета 				= "004.02";
					ОстаткиПоТМЦПереданные.ДокументПередачи			= БухИтКМС.Субконто(3);
					ОстаткиПоТМЦПереданные.ДокументОприходования	= БухИтКМС.Субконто(2);
					ОстаткиПоТМЦПереданные.Количество				= БухИтКМС.СКД("К");
					
					Сумма = Сумма - БухИтКМС.СКД("С");
					Количество = Количество - БухИтКМС.СКД("К");
				КонецЦикла;
			КонецЕсли;
			
		КонецЦикла;
	КонецЦикла;
КонецЦикла;

Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора","");

</Текст>
		</Алгоритм>
		<Алгоритм Имя="НУ_ОстаткиПо45" ИспользуетсяПриЗагрузке="false">
			<Текст>ОчиститьПараметры();
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора","СКомитентом");
ОстаткиНаКонец = Параметры.ПараметрыАлгоритмов.Получить("ОстаткиНаКонец");

Если ОстаткиНаКонец = 1 Тогда
	ДатаЗапроса = Параметры.ДатаКонцаПериодаВыгрузки;
	Параметры.ТаблицаНДСКон.Выгрузить(Параметры.ТаблицаНДС);
Иначе
	ДатаЗапроса = Параметры.ДатаВводаОстатков-1;
	Параметры.ТаблицаНДСНач.Выгрузить(Параметры.ТаблицаНДС);
КонецЕсли;

ОстаткиПоТМЦ 				= Параметры.ОстаткиПоТМЦ;
ОстаткиПоТМЦПереданные 		= Параметры.ОстаткиПоТМЦПереданные;
РасходыНоменклатура			= Параметры.РасходыНоменклатура;
ВременнаяТаблицаРасчетов	= Параметры.ВременнаяТаблицаРасчетов;
СтрокаТаблицыЗначений		= Параметры.СтрокаТаблицыЗначений;

БухИт45 = СоздатьОбъект("БухгалтерскиеИтоги");
БухИт45.ИспользоватьСубконто(ВидыСубконто.Номенклатура);
БухИт45.ИспользоватьСубконто(ВидыСубконто.Контрагенты);
БухИт45.ИспользоватьСубконто(ВидыСубконто.Договоры);
БухИт45.ВыполнитьЗапрос(, ДатаЗапроса, "45");

БухИтКМС = СоздатьОбъект("БухгалтерскиеИтоги");
БухИтКМС.ИспользоватьСубконто(ВидыСубконто.Номенклатура);
БухИтКМС.ИспользоватьСубконто(ВидыСубконто.ДоговорыПоставки);
БухИтКМС.ИспользоватьСубконто(ВидыСубконто.Договоры);
БухИтКМС.ВыполнитьЗапрос(, ДатаЗапроса, "КМС.1, КМС.3");
БухИтКМС.Опции(1, 1);

БухИт45.ВыбратьСубконто(1);
Пока БухИт45.ПолучитьСубконто(1) = 1 Цикл
	БухИт45.ВыбратьСубконто(2);
	Пока БухИт45.ПолучитьСубконто(2) = 1 Цикл
		БухИт45.ВыбратьСубконто(3);
		Пока БухИт45.ПолучитьСубконто(3) = 1 Цикл
			
			Сумма = БухИт45.СКД("С");
			Количество = БухИт45.СКД("К");
			
			Номенклатура = БухИт45.Субконто(1);
			КодСчета = СчетПоКоду("45");
						
			БухИтКМС.ВыбратьСчета();
			Пока БухИтКМС.Получитьсчет() = 1 Цикл
				
				БухИтКМС.ВыбратьСубконто(1);
				Пока БухИтКМС.ПолучитьСубконто(1) = 1 Цикл
					
					Если  БухИт45.Субконто(1) &lt;&gt;  БухИтКМС.Субконто(1) Тогда
						Продолжить;
					КонецЕсли;
					
					БухИтКМС.ВыбратьСубконто(2);
					Пока БухИтКМС.ПолучитьСубконто(2) = 1 Цикл
						
						БухИтКМС.ВыбратьСубконто(3);
						Пока БухИтКМС.ПолучитьСубконто(3) = 1 Цикл
							
							Если  БухИт45.Субконто(3) &lt;&gt;  БухИтКМС.Субконто(3) Тогда
								Продолжить;
							КонецЕсли;
							//Расходы
							
							//Определение входящего НДС
							Сумма 			= БухИтКМС.СКД("С");
							Представление1 	= ?(ПустоеЗначение(БухИтКМС.Субконто(2)) = 1, "", Строка(БухИтКМС.Субконто(2).Владелец.Код));
							Представление2 	= ?(ПустоеЗначение(БухИтКМС.Субконто(2)) = 1, "", Строка(БухИтКМС.Субконто(2).Код));
							Представление3 	= Строка(Перечисление.ВидыРасчетовСПоставщиками.РасходыНаПриобретениеМатериалов);
							СтрокаКлюча 	= Представление1 + ";" + Представление2 + ";" + Представление3;
							НомерСтроки 	= "";
							
							Если Параметры.ТаблицаНДС.НайтиЗначение(СтрокаКлюча, НомерСтроки, "Ключ") = 1 Тогда
								Параметры.ТаблицаНДС.ПолучитьСтрокуПоНомеру(НомерСтроки);
								НДС = ?(Параметры.ТаблицаНДС.Сумма = 0, 0, Сумма * Параметры.ТаблицаНДС.НДС / Параметры.ТаблицаНДС.Сумма);
								
							Иначе
								НДС = 0;
							КонецЕсли;
							
							РасходыНоменклатура.НоваяСтрока();
							РасходыНоменклатура.Номенклатура 				= Номенклатура;
							РасходыНоменклатура.СчетУчета 					= КодСчета;
							РасходыНоменклатура.СтатусыПартийУСН 			= "НаРеализации";
							РасходыНоменклатура.Контрагент 					= БухИтКМС.Субконто(2).Владелец;
							РасходыНоменклатура.ДоговорКонтрагента 			= БухИтКМС.Субконто(2);
							РасходыНоменклатура.СтатусыОплатыРасходовУСН	= "НеСписано";
							РасходыНоменклатура.ОтражениеВУСН 				= "Принимаются";
							РасходыНоменклатура.Валюта 						= Параметры.Рубли;
							РасходыНоменклатура.Количество 					= БухИтКМС.СКД("К");
							РасходыНоменклатура.Сумма 						= Сумма;
							РасходыНоменклатура.НДС 						= НДС;
							РасходыНоменклатура.ПартияСинхронизации			= БухИтКМС.Субконто(3);
							
							Если Сумма  &gt; 0 Тогда
								
								СтрокаТаблицыЗначений.УдалитьСтроки();
								
								СтрокаТаблицыЗначений.НоваяСтрока();
								СтрокаТаблицыЗначений.Номенклатура 				= РасходыНоменклатура.Номенклатура;
								СтрокаТаблицыЗначений.СчетУчета 				= РасходыНоменклатура.СчетУчета;
								СтрокаТаблицыЗначений.СтатусыПартийУСН 			= "НаРеализации";
								СтрокаТаблицыЗначений.Контрагент 				= РасходыНоменклатура.Контрагент;
								СтрокаТаблицыЗначений.ДоговорКонтрагента 		= РасходыНоменклатура.ДоговорКонтрагента;	
								СтрокаТаблицыЗначений.СтатусыОплатыРасходовУСН 	= "НеСписано";
								СтрокаТаблицыЗначений.ОтражениеВУСН 			= "Принимаются";
								СтрокаТаблицыЗначений.Валюта 					= РасходыНоменклатура.Валюта;
								СтрокаТаблицыЗначений.Количество 				= РасходыНоменклатура.Количество;
								СтрокаТаблицыЗначений.Сумма 					= РасходыНоменклатура.Сумма;
								СтрокаТаблицыЗначений.НДС 						= РасходыНоменклатура.НДС;
								СтрокаТаблицыЗначений.ПартияСинхронизации		= РасходыНоменклатура.ПартияСинхронизации;
								СтрокаТаблицыЗначений.ИндексСтроки				= РасходыНоменклатура.НомерСтроки-1;
								
								УстановитьСтатусОплатыНоменклатуры();
							КонецЕсли;
							
							ОстаткиПоТМЦПереданные.НоваяСтрока(); 
							ОстаткиПоТМЦПереданные.Номенклатура				= БухИтКМС.Субконто(1);
							ОстаткиПоТМЦПереданные.ДоговорКонтрагента		= БухИтКМС.Субконто(3);
							ОстаткиПоТМЦПереданные.Контрагент				= БухИт45.Субконто(3).Владелец;
							ОстаткиПоТМЦПереданные.СчетУчета 				= КодСчета;
							ОстаткиПоТМЦПереданные.ДокументПередачи			= БухИтКМС.Субконто(3);
							ОстаткиПоТМЦПереданные.ДокументОприходования	= БухИтКМС.Субконто(2);
							ОстаткиПоТМЦПереданные.Количество				= БухИтКМС.СКД("К");
							
							Сумма = Сумма - БухИтКМС.СКД("С");
							Количество = Количество - БухИтКМС.СКД("К");
						КонецЦикла;
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
			
			//Не принимаемые расходы
			Если (Количество &gt; 0) Тогда
				
				ОстаткиПоТМЦПереданные.НоваяСтрока(); 
				ОстаткиПоТМЦПереданные.Номенклатура				= БухИт45.Субконто(1);
				ОстаткиПоТМЦПереданные.ДоговорКонтрагента		= БухИт45.Субконто(3);
				ОстаткиПоТМЦПереданные.Контрагент				= БухИт45.Субконто(3).Владелец;
				ОстаткиПоТМЦПереданные.СчетУчета 				= КодСчета;
				ОстаткиПоТМЦПереданные.ДокументПередачи			= БухИт45.Субконто(3);
				ОстаткиПоТМЦПереданные.ДокументОприходования	= ПолучитьПустоеЗначение(ВидыСубконто.ДоговорыПоставки);
				ОстаткиПоТМЦПереданные.Количество				= Количество;
				
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
КонецЦикла;

Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора","");</Текст>
		</Алгоритм>
		<Алгоритм Имя="НУ_ОстаткиПоВзаиморасчетамСПодотчетниками" ИспользуетсяПриЗагрузке="false">
			<Текст>ОчиститьПараметры();
ЗаполнитьТаблицуНДС();
ОстаткиПоВзаиморасчетамСПодотчетниками 	= Параметры.ОстаткиПоВзаиморасчетамСПодотчетниками;
ВременнаяТаблицаРасчетов		 		= Параметры.ВременнаяТаблицаРасчетов;
ОстаткиНаКонец = Параметры.ПараметрыАлгоритмов.Получить("ОстаткиНаКонец");

Если ОстаткиНаКонец = 1 Тогда
	ДатаЗапроса = Параметры.ДатаКонцаПериодаВыгрузки;
Иначе
	ДатаЗапроса = Параметры.ДатаВводаОстатков - 1;
КонецЕсли;

БухИтД = СоздатьОбъект("БухгалтерскиеИтоги");
БухИтД.ИспользоватьСубконто(ВидыСубконто.Контрагенты);
БухИтД.ИспользоватьСубконто(ВидыСубконто.Договоры);
БухИтД.ВыполнитьЗапрос(, ДатаЗапроса, "71.1, 71.2, 71.11, 71.22");

БухИтДР = СоздатьОбъект("БухгалтерскиеИтоги");
БухИтДР.ИспользоватьСубконто(ВидыСубконто.Контрагенты);
БухИтДР.ИспользоватьСубконто(ВидыСубконто.Договоры);
БухИтДР.ИспользоватьСубконто(ВидыСубконто.ВидыРасчетовСПоставщиками);
БухИтДР.ВыполнитьЗапрос(, ДатаЗапроса, "71.2, 71.22");

БухИтД.ВыбратьСубконто(1);
Пока БухИтД.ПолучитьСубконто(1) = 1 Цикл
	БухИтД.ВыбратьСубконто(2);
	Пока БухИтД.ПолучитьСубконто(2) = 1 Цикл
		
		Подотчетник 		= БухИтД.Субконто(1);
		РасчетныйДокумент 	= БухИтД.Субконто(2);
		
		БухИтД.ВыбратьСчета();
		Пока БухИтД.ПолучитьСчет() = 1 Цикл
			ВидЗадолженности = ?((БухИтД.СКД("С")-БухИтД.СКК("С")) &gt; 0, "Дебиторская", "Кредиторская");
			Если БухИтД.ВыбратьВалюты() = 1 Тогда
				Пока БухИтД.ПолучитьВалюту() = 1 Цикл
					Валюта = БухИтД.Валюта;
					НДС = 0;
					Сумма = 0;
					РаспредНДС = 0;
					РаспредСумма = 0;
					НеПринСумма = 0;
    				Если БухИтДР.ПолучитьСчет(,БухИтД.Счет)+БухИтДР.ПолучитьВалюту(,БухИтД.Валюта)+	БухИтДР.ПолучитьСубконто(1,,БухИтД.Субконто(1))+
						БухИтДР.ПолучитьСубконто(2,,БухИтД.Субконто(2)) &gt; 3 Тогда
						ОтражениеВНУ = "Принимаются";
						БухИтДР.ВыбратьСубконто(3);
						Пока БухИтДР.ПолучитьСубконто(3) = 1 Цикл
							БухИтДР.ПолучитьВалюту(,БухИтД.Валюта);
							ВидЗадолженности = ?((БухИтДР.СКД("В")-БухИтДР.СКК("В")) &gt; 0, "Дебиторская", "Кредиторская");
							Сумма_ВР = ?((БухИтДР.СКД("В")-БухИтДР.СКК("В")) &gt; 0, БухИтДР.СКД("В") - БухИтДР.СКК("В"), БухИтДР.СКК("В") - БухИтДР.СКД("В"));
												
							//Определение входящего НДС
							Представление1 = ?(ПустоеЗначение(БухИтД.Субконто(1)) = 1, "", Строка(БухИтД.Субконто(1).Код));
							Представление2 = ?(ПустоеЗначение(БухИтД.Субконто(2)) = 1, "", Строка(БухИтД.Субконто(2).Код));
							Представление3 = Строка(БухИтДР.Субконто(3));
							СтрокаКлюча = Представление1 + ";" + Представление2 + ";" + Представление3;
							НомерСтроки = "";
							Если Параметры.ТаблицаНДС.НайтиЗначение(СтрокаКлюча, НомерСтроки, "Ключ") = 1 Тогда
								Параметры.ТаблицаНДС.ПолучитьСтрокуПоНомеру(НомерСтроки);
								НДС_ВР = ?(Параметры.ТаблицаНДС.Сумма = 0, 0, Сумма_ВР * Параметры.ТаблицаНДС.НДС / Параметры.ТаблицаНДС.Сумма); 
							КонецЕсли;
							
							Если (БухИтДР.Субконто(3) = Перечисление.ВидыРасчетовСПоставщиками.ПрочиеРаспределяемые) или
								(БухИтДР.Субконто(3) = Перечисление.ВидыРасчетовСПоставщиками.ОтложенныеРаспределяемые) Тогда
								РаспредСумма = РаспредСумма + Сумма_ВР;
								РаспредНДС = РаспредНДС + НДС_ВР;
							ИначеЕсли (БухИтДР.Субконто(3) = Перечисление.ВидыРасчетовСПоставщиками.РасходыНаПриобретениеОС) Тогда
								НеПринСумма = НеПринСумма + Сумма_ВР;
							Иначе
								Сумма = Сумма + Сумма_ВР;
								НДС = НДС + НДС_ВР;
							КонецЕсли;
							
						КонецЦикла;
					Иначе
						ОтражениеВНУ = "НеПринимаются";
						ВидЗадолженности = ?((БухИтД.СКД("В")-БухИтД.СКК("В")) &gt; 0, "Дебиторская", "Кредиторская");
						НеПринСумма = ?((БухИтД.СКД("В")-БухИтД.СКК("В")) &gt; 0, БухИтД.СКД("В") - БухИтД.СКК("В"), БухИтД.СКК("В") - БухИтД.СКД("В"));
					КонецЕсли;
					
					Если Сумма &lt;&gt; 0 Тогда
						ОтражениеВНУ = "Принимаются";
						ОстаткиПоВзаиморасчетамСПодотчетниками.НоваяСтрока();
						ОстаткиПоВзаиморасчетамСПодотчетниками.ВидЗадолженности		= ВидЗадолженности;
						ОстаткиПоВзаиморасчетамСПодотчетниками.Подотчетник 			= Подотчетник;
						ОстаткиПоВзаиморасчетамСПодотчетниками.РасчетныйДокумент 	= РасчетныйДокумент;
						ОстаткиПоВзаиморасчетамСПодотчетниками.СуммаВзаиморасчетов 	= Сумма;
						
						Если ОстаткиПоВзаиморасчетамСПодотчетниками.ВидЗадолженности = "Кредиторская" Тогда
							
							ВременнаяТаблицаРасчетов.НоваяСтрока();
							ВременнаяТаблицаРасчетов.ТабличнаяЧасть 					= "ВзаиморасчетыСПоставщиками";
							ВременнаяТаблицаРасчетов.Контрагент 						= ОстаткиПоВзаиморасчетамСПодотчетниками.Подотчетник;
							ВременнаяТаблицаРасчетов.ДоговорКонтрагента					= ОстаткиПоВзаиморасчетамСПодотчетниками.РасчетныйДокумент;
							ВременнаяТаблицаРасчетов.РасчетныйДокумент					= ОстаткиПоВзаиморасчетамСПодотчетниками.РасчетныйДокумент;
							ВременнаяТаблицаРасчетов.ОтражениеВНУ						= ОтражениеВНУ ;
							ВременнаяТаблицаРасчетов.Валюта								= Валюта;
							ВременнаяТаблицаРасчетов.Сумма                              = Число(Сумма);
							ВременнаяТаблицаРасчетов.СуммаВзаиморасчетов	            = Число(Сумма);
							ВременнаяТаблицаРасчетов.НДС								= НДС;
							
						КонецЕсли;
					КонецЕсли;
					Если РаспредСумма &lt;&gt; 0 Тогда
						ОтражениеВНУ = "Распределяются";
						ОстаткиПоВзаиморасчетамСПодотчетниками.НоваяСтрока();
						ОстаткиПоВзаиморасчетамСПодотчетниками.ВидЗадолженности		= ВидЗадолженности;
						ОстаткиПоВзаиморасчетамСПодотчетниками.Подотчетник 			= Подотчетник;
						ОстаткиПоВзаиморасчетамСПодотчетниками.РасчетныйДокумент 	= РасчетныйДокумент;
						ОстаткиПоВзаиморасчетамСПодотчетниками.СуммаВзаиморасчетов 	= РаспредСумма;
						
						Если ОстаткиПоВзаиморасчетамСПодотчетниками.ВидЗадолженности = "Кредиторская" Тогда
							
							ВременнаяТаблицаРасчетов.НоваяСтрока();
							ВременнаяТаблицаРасчетов.ТабличнаяЧасть 					= "ВзаиморасчетыСПоставщиками";
							ВременнаяТаблицаРасчетов.Контрагент 						= ОстаткиПоВзаиморасчетамСПодотчетниками.Подотчетник;
							ВременнаяТаблицаРасчетов.ДоговорКонтрагента					= ОстаткиПоВзаиморасчетамСПодотчетниками.РасчетныйДокумент;
							ВременнаяТаблицаРасчетов.РасчетныйДокумент					= ОстаткиПоВзаиморасчетамСПодотчетниками.РасчетныйДокумент;
							ВременнаяТаблицаРасчетов.ОтражениеВНУ						= ОтражениеВНУ ;
							ВременнаяТаблицаРасчетов.Валюта								= Валюта;
							ВременнаяТаблицаРасчетов.Сумма                              = Число(РаспредСумма);
							ВременнаяТаблицаРасчетов.СуммаВзаиморасчетов	            = Число(РаспредСумма);
							ВременнаяТаблицаРасчетов.НДС								= РаспредНДС;
							
						КонецЕсли;
					КонецЕсли;
					Если НеПринСумма &lt;&gt; 0 Тогда
						ОтражениеВНУ = "НеПринимаются";
						ОстаткиПоВзаиморасчетамСПодотчетниками.НоваяСтрока();
						ОстаткиПоВзаиморасчетамСПодотчетниками.ВидЗадолженности		= ВидЗадолженности;
						ОстаткиПоВзаиморасчетамСПодотчетниками.Подотчетник 			= Подотчетник;
						ОстаткиПоВзаиморасчетамСПодотчетниками.РасчетныйДокумент 	= РасчетныйДокумент;
						ОстаткиПоВзаиморасчетамСПодотчетниками.СуммаВзаиморасчетов 	= НеПринСумма;
						
						Если ОстаткиПоВзаиморасчетамСПодотчетниками.ВидЗадолженности = "Кредиторская" Тогда
							
							ВременнаяТаблицаРасчетов.НоваяСтрока();
							ВременнаяТаблицаРасчетов.ТабличнаяЧасть 					= "ВзаиморасчетыСПоставщиками";
							ВременнаяТаблицаРасчетов.Контрагент 						= ОстаткиПоВзаиморасчетамСПодотчетниками.Подотчетник;
							ВременнаяТаблицаРасчетов.ДоговорКонтрагента					= ОстаткиПоВзаиморасчетамСПодотчетниками.РасчетныйДокумент;
							ВременнаяТаблицаРасчетов.РасчетныйДокумент					= ОстаткиПоВзаиморасчетамСПодотчетниками.РасчетныйДокумент;
							ВременнаяТаблицаРасчетов.ОтражениеВНУ						= ОтражениеВНУ;
							ВременнаяТаблицаРасчетов.Валюта								= Валюта;
							ВременнаяТаблицаРасчетов.Сумма                              = Число(НеПринСумма);
							ВременнаяТаблицаРасчетов.СуммаВзаиморасчетов	            = Число(НеПринСумма);
							ВременнаяТаблицаРасчетов.НДС								= 0;
							
						КонецЕсли;
					КонецЕсли;
					
				КонецЦикла;
			Иначе
				Валюта = Параметры.Рубли;
				НДС = 0;
				Сумма = 0;
				РаспредНДС = 0;
				РаспредСумма = 0;
				НеПринСумма = 0;
				Если БухИтДР.ПолучитьСчет(,БухИтД.Счет)+БухИтДР.ПолучитьСубконто(1,,БухИтД.Субконто(1))+БухИтДР.ПолучитьСубконто(2,,БухИтД.Субконто(2)) &gt; 2 Тогда
					ОтражениеВНУ = "Принимаются";
					БухИтДР.ВыбратьСубконто(3);
					Пока БухИтДР.ПолучитьСубконто(3) = 1 Цикл
						
						ВидЗадолженности = ?((БухИтДР.СКД("С")-БухИтДР.СКК("С")) &gt; 0, "Дебиторская", "Кредиторская");
						Сумма_ВР = ?((БухИтДР.СКД("С")-БухИтДР.СКК("С")) &gt; 0, БухИтДР.СКД("С") - БухИтДР.СКК("С"), БухИтДР.СКК("С") - БухИтДР.СКД("С"));
							
						
						//Определение входящего НДС
						Представление1 = ?(ПустоеЗначение(БухИтД.Субконто(1)) = 1, "", Строка(БухИтД.Субконто(1).Код));
						Представление2 = ?(ПустоеЗначение(БухИтД.Субконто(2)) = 1, "", Строка(БухИтД.Субконто(2).Код));
						Представление3 = Строка(БухИтДР.Субконто(3));
						СтрокаКлюча = Представление1 + ";" + Представление2 + ";" + Представление3;
						НомерСтроки = "";
						Если Параметры.ТаблицаНДС.НайтиЗначение(СтрокаКлюча, НомерСтроки, "Ключ") = 1 Тогда
							Параметры.ТаблицаНДС.ПолучитьСтрокуПоНомеру(НомерСтроки);
							НДС_ВР = ?(Параметры.ТаблицаНДС.Сумма = 0, 0, Сумма_ВР * Параметры.ТаблицаНДС.НДС / Параметры.ТаблицаНДС.Сумма); 
						КонецЕсли;
						
						Если (БухИтДР.Субконто(3) = Перечисление.ВидыРасчетовСПоставщиками.ПрочиеРаспределяемые) или
							(БухИтДР.Субконто(3) = Перечисление.ВидыРасчетовСПоставщиками.ОтложенныеРаспределяемые) Тогда
							РаспредСумма = РаспредСумма + Сумма_ВР;
							РаспредНДС = РаспредНДС + НДС_ВР;
						ИначеЕсли (БухИтДР.Субконто(3) = Перечисление.ВидыРасчетовСПоставщиками.РасходыНаПриобретениеОС) Тогда
								НеПринСумма = НеПринСумма + Сумма_ВР;
						Иначе
							Сумма = Сумма + Сумма_ВР;
							НДС = НДС + НДС_ВР;
						КонецЕсли;
					КонецЦикла;
				Иначе
					ОтражениеВНУ = "НеПринимаются";
					ВидЗадолженности = ?((БухИтД.СКД("С")-БухИтД.СКК("С")) &gt; 0, "Дебиторская", "Кредиторская");
					НеПринСумма = ?((БухИтД.СКД("С")-БухИтД.СКК("С")) &gt; 0, БухИтД.СКД("С") - БухИтД.СКК("С"), БухИтД.СКК("С") - БухИтД.СКД("С"));
				КонецЕсли;
				
				Если Сумма &lt;&gt; 0 Тогда
					ОтражениеВНУ = "Принимаются";
					ОстаткиПоВзаиморасчетамСПодотчетниками.НоваяСтрока();
					ОстаткиПоВзаиморасчетамСПодотчетниками.ВидЗадолженности		= ВидЗадолженности;
					ОстаткиПоВзаиморасчетамСПодотчетниками.Подотчетник 			= Подотчетник;
					ОстаткиПоВзаиморасчетамСПодотчетниками.РасчетныйДокумент 	= РасчетныйДокумент;
					ОстаткиПоВзаиморасчетамСПодотчетниками.СуммаВзаиморасчетов 	= Сумма;
					
					Если ОстаткиПоВзаиморасчетамСПодотчетниками.ВидЗадолженности = "Кредиторская" Тогда
						
						ВременнаяТаблицаРасчетов.НоваяСтрока();
						ВременнаяТаблицаРасчетов.ТабличнаяЧасть 					= "ВзаиморасчетыСПоставщиками";
						ВременнаяТаблицаРасчетов.Контрагент 						= ОстаткиПоВзаиморасчетамСПодотчетниками.Подотчетник;
						ВременнаяТаблицаРасчетов.ДоговорКонтрагента					= ОстаткиПоВзаиморасчетамСПодотчетниками.РасчетныйДокумент;
						ВременнаяТаблицаРасчетов.РасчетныйДокумент					= ОстаткиПоВзаиморасчетамСПодотчетниками.РасчетныйДокумент;
						ВременнаяТаблицаРасчетов.ОтражениеВНУ						= ОтражениеВНУ ;
						ВременнаяТаблицаРасчетов.Валюта								= Валюта;
						ВременнаяТаблицаРасчетов.Сумма                              = Число(Сумма);
						ВременнаяТаблицаРасчетов.СуммаВзаиморасчетов	            = Число(Сумма);
						ВременнаяТаблицаРасчетов.НДС								= НДС;
						
					КонецЕсли;
				КонецЕсли;
				Если РаспредСумма &lt;&gt; 0 Тогда
					ОтражениеВНУ = "Распределяются";
					ОстаткиПоВзаиморасчетамСПодотчетниками.НоваяСтрока();
					ОстаткиПоВзаиморасчетамСПодотчетниками.ВидЗадолженности		= ВидЗадолженности;
					ОстаткиПоВзаиморасчетамСПодотчетниками.Подотчетник 			= Подотчетник;
					ОстаткиПоВзаиморасчетамСПодотчетниками.РасчетныйДокумент 	= РасчетныйДокумент;
					ОстаткиПоВзаиморасчетамСПодотчетниками.СуммаВзаиморасчетов 	= РаспредСумма;
					
					Если ОстаткиПоВзаиморасчетамСПодотчетниками.ВидЗадолженности = "Кредиторская" Тогда
						
						ВременнаяТаблицаРасчетов.НоваяСтрока();
						ВременнаяТаблицаРасчетов.ТабличнаяЧасть 					= "ВзаиморасчетыСПоставщиками";
						ВременнаяТаблицаРасчетов.Контрагент 						= ОстаткиПоВзаиморасчетамСПодотчетниками.Подотчетник;
						ВременнаяТаблицаРасчетов.ДоговорКонтрагента					= ОстаткиПоВзаиморасчетамСПодотчетниками.РасчетныйДокумент;
						ВременнаяТаблицаРасчетов.РасчетныйДокумент					= ОстаткиПоВзаиморасчетамСПодотчетниками.РасчетныйДокумент;
						ВременнаяТаблицаРасчетов.ОтражениеВНУ						= ОтражениеВНУ ;
						ВременнаяТаблицаРасчетов.Валюта								= Валюта;
						ВременнаяТаблицаРасчетов.Сумма                              = Число(РаспредСумма);
						ВременнаяТаблицаРасчетов.СуммаВзаиморасчетов	            = Число(РаспредСумма);
						ВременнаяТаблицаРасчетов.НДС								= РаспредНДС;
						
					КонецЕсли;
				КонецЕсли;
				Если НеПринСумма &lt;&gt; 0 Тогда
					ОтражениеВНУ = "НеПринимаются";
					ОстаткиПоВзаиморасчетамСПодотчетниками.НоваяСтрока();
					ОстаткиПоВзаиморасчетамСПодотчетниками.ВидЗадолженности		= ВидЗадолженности;
					ОстаткиПоВзаиморасчетамСПодотчетниками.Подотчетник 			= Подотчетник;
					ОстаткиПоВзаиморасчетамСПодотчетниками.РасчетныйДокумент 	= РасчетныйДокумент;
					ОстаткиПоВзаиморасчетамСПодотчетниками.СуммаВзаиморасчетов 	= НеПринСумма;
					
					Если ОстаткиПоВзаиморасчетамСПодотчетниками.ВидЗадолженности = "Кредиторская" Тогда
						
						ВременнаяТаблицаРасчетов.НоваяСтрока();
						ВременнаяТаблицаРасчетов.ТабличнаяЧасть 					= "ВзаиморасчетыСПоставщиками";
						ВременнаяТаблицаРасчетов.Контрагент 						= ОстаткиПоВзаиморасчетамСПодотчетниками.Подотчетник;
						ВременнаяТаблицаРасчетов.ДоговорКонтрагента					= ОстаткиПоВзаиморасчетамСПодотчетниками.РасчетныйДокумент;
						ВременнаяТаблицаРасчетов.РасчетныйДокумент					= ОстаткиПоВзаиморасчетамСПодотчетниками.РасчетныйДокумент;
						ВременнаяТаблицаРасчетов.ОтражениеВНУ						= ОтражениеВНУ;
						ВременнаяТаблицаРасчетов.Валюта								= Валюта;
						ВременнаяТаблицаРасчетов.Сумма                              = Число(НеПринСумма);
						ВременнаяТаблицаРасчетов.СуммаВзаиморасчетов	            = Число(НеПринСумма);
						ВременнаяТаблицаРасчетов.НДС								= 0;
						
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
КонецЦикла;
</Текст>
		</Алгоритм>
		<Алгоритм Имя="НУ_ОстаткиПоВзаиморасчетамСПокупателями" ИспользуетсяПриЗагрузке="false">
			<Текст>ОчиститьПараметры();
ОстаткиПоВзаиморасчетамСПокупателями 	= Параметры.ОстаткиПоВзаиморасчетамСПокупателями;

БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
БухИт.ИспользоватьСубконто(ВидыСубконто.Контрагенты);
БухИт.ИспользоватьСубконто(ВидыСубконто.Договоры);
БухИт.ВыполнитьЗапрос(, Параметры.ДатаКонцаПериодаВыгрузки, "62.1, 62.2, 62.3, 62.4, 62.11, 62.33, 62.44");

БухИт.ВыбратьСубконто(1);
Пока БухИт.ПолучитьСубконто(1) = 1 Цикл
	БухИт.ВыбратьСубконто(2);
	Пока БухИт.ПолучитьСубконто(2) = 1 Цикл
		
		Контрагент 			= БухИт.Субконто(1);
		ДоговорКонтрагента	= БухИт.Субконто(2);
		РасчетныйДокумент 	= БухИт.Субконто(2);
		
		БухИт.ВыбратьСчета();
		Пока БухИт.ПолучитьСчет() = 1 Цикл
			ВидЗадолженности = ?((БухИт.СКД("С")-БухИт.СКК("С")) &gt; 0, "Дебиторская", "Кредиторская");
			Если БухИт.ВыбратьВалюты() = 1 Тогда
				Пока БухИт.ПолучитьВалюту() = 1 Цикл
					Сумма = 0;
					ДоходКомитента = 0;
					ДоходЕНВД = 0;
					
					ВидЗадолженности = ?((БухИт.СКД("В")-БухИт.СКК("В")) &gt; 0, "Дебиторская", "Кредиторская");
					Сумма = ?((БухИт.СКД("В")-БухИт.СКК("В")) &gt; 0, БухИт.СКД("В") - БухИт.СКК("В"), БухИт.СКК("В") - БухИт.СКД("В"));
					Если (БухИт.Счет.Код = "62.2") Тогда
						ДоходКомитента = Сумма;
					ИначеЕсли (БухИт.Счет.Код = "62.4") ИЛИ (БухИт.Счет.Код = "62.44") Тогда
						ДоходЕНВД = Сумма;
					КонецЕсли;
					Если Сумма &lt;&gt; 0 Тогда
						ОстаткиПоВзаиморасчетамСПокупателями.НоваяСтрока();
						ОстаткиПоВзаиморасчетамСПокупателями.ВидЗадолженности		= ВидЗадолженности;
						ОстаткиПоВзаиморасчетамСПокупателями.Контрагент 			= Контрагент;
						ОстаткиПоВзаиморасчетамСПокупателями.ДоговорКонтрагента 	= ДоговорКонтрагента;
						ОстаткиПоВзаиморасчетамСПокупателями.РасчетныйДокумент		= РасчетныйДокумент;
						ОстаткиПоВзаиморасчетамСПокупателями.СуммаВзаиморасчетов 	= Сумма;
						ОстаткиПоВзаиморасчетамСПокупателями.ДоходКомитента 		= ДоходКомитента;
						ОстаткиПоВзаиморасчетамСПокупателями.ДоходЕНВД 				= ДоходЕНВД;
					КонецЕсли;
				КонецЦикла;
			Иначе
				Сумма = 0;
				ДоходКомитента = 0;
				ДоходЕНВД = 0;
				ВидЗадолженности = ?((БухИт.СКД("С")-БухИт.СКК("С")) &gt; 0, "Дебиторская", "Кредиторская");
				Сумма = ?((БухИт.СКД("С")-БухИт.СКК("С")) &gt; 0, БухИт.СКД("С") - БухИт.СКК("С"), БухИт.СКК("С") - БухИт.СКД("С"));
				Если (БухИт.Счет.Код = "62.2") Тогда
					ДоходКомитента = Сумма;
				ИначеЕсли (БухИт.Счет.Код = "62.4") ИЛИ (БухИт.Счет.Код = "62.44") Тогда
					ДоходЕНВД = Сумма;
				КонецЕсли;
				Если Сумма &lt;&gt; 0 Тогда
					ОстаткиПоВзаиморасчетамСПокупателями.НоваяСтрока();
					ОстаткиПоВзаиморасчетамСПокупателями.ВидЗадолженности		= ВидЗадолженности;
					ОстаткиПоВзаиморасчетамСПокупателями.Контрагент 			= Контрагент;
					ОстаткиПоВзаиморасчетамСПокупателями.ДоговорКонтрагента 	= ДоговорКонтрагента;
					ОстаткиПоВзаиморасчетамСПокупателями.РасчетныйДокумент		= РасчетныйДокумент;
					ОстаткиПоВзаиморасчетамСПокупателями.СуммаВзаиморасчетов 	= Сумма;
					ОстаткиПоВзаиморасчетамСПокупателями.ДоходКомитента 		= ДоходКомитента;
					ОстаткиПоВзаиморасчетамСПокупателями.ДоходЕНВД 				= ДоходЕНВД;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
КонецЦикла;

ОстаткиПоВзаиморасчетамСПокупателями.Свернуть("Контрагент, ДоговорКонтрагента,ВидЗадолженности,РасчетныйДокумент","СуммаВзаиморасчетов,ДоходКомитента,ДоходЕНВД");
</Текст>
		</Алгоритм>
		<Алгоритм Имя="НУ_ОстаткиПоВзаиморасчетамСПокупателямиПоСчету" ИспользуетсяПриЗагрузке="false">
			<Текст>ОчиститьПараметры();
ОстаткиПоВзаиморасчетамСПокупателями 	= Параметры.ОстаткиПоВзаиморасчетамСПокупателями;
ОстаткиПоВзаиморасчетамСПокупателями.УдалитьСтроки();
Счет = Параметры.ПараметрыАлгоритмов.Получить("ТекущийСчет");
ОстаткиНаКонец = Параметры.ПараметрыАлгоритмов.Получить("ОстаткиНаКонец");

Если ОстаткиНаКонец = 1 Тогда
	ДатаЗапроса = Параметры.ДатаКонцаПериодаВыгрузки;
Иначе
	ДатаЗапроса = Параметры.ДатаВводаОстатков - 1;
КонецЕсли;

БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
БухИт.ИспользоватьСубконто(ВидыСубконто.Контрагенты);
БухИт.ИспользоватьСубконто(ВидыСубконто.Договоры);
БухИт.ВыполнитьЗапрос(, ДатаЗапроса, Счет);

БухИт.ВыбратьСубконто(1);
Пока БухИт.ПолучитьСубконто(1) = 1 Цикл
	БухИт.ВыбратьСубконто(2);
	Пока БухИт.ПолучитьСубконто(2) = 1 Цикл
		
		Контрагент 			= БухИт.Субконто(1);
		ДоговорКонтрагента	= БухИт.Субконто(2);
		РасчетныйДокумент 	= БухИт.Субконто(2);
		
		БухИт.ВыбратьСчета();
		Пока БухИт.ПолучитьСчет() = 1 Цикл
			ВидЗадолженности = ?((БухИт.СКД("С")-БухИт.СКК("С")) &gt; 0, "Дебиторская", "Кредиторская");
			Если БухИт.ВыбратьВалюты() = 1 Тогда
				Пока БухИт.ПолучитьВалюту() = 1 Цикл
					Сумма = 0;
					ДоходКомитента = 0;
					ДоходЕНВД = 0;
					
					ВидЗадолженности = ?((БухИт.СКД("В")-БухИт.СКК("В")) &gt; 0, "Дебиторская", "Кредиторская");
					Сумма = ?((БухИт.СКД("В")-БухИт.СКК("В")) &gt; 0, БухИт.СКД("В") - БухИт.СКК("В"), БухИт.СКК("В") - БухИт.СКД("В"));
					СуммаРуб = ?((БухИт.СКД("С")-БухИт.СКК("С")) &gt; 0, БухИт.СКД("С") - БухИт.СКК("С"), БухИт.СКК("С") - БухИт.СКД("С"));
					Если (БухИт.Счет.Код = "62.2") Тогда
						ДоходКомитента = Сумма;
					ИначеЕсли (БухИт.Счет.Код = "62.4") ИЛИ (БухИт.Счет.Код = "62.44") Тогда
						ДоходЕНВД = Сумма;
					КонецЕсли;
					Если Сумма &lt;&gt; 0 Тогда
						ОстаткиПоВзаиморасчетамСПокупателями.НоваяСтрока();
						ОстаткиПоВзаиморасчетамСПокупателями.ВидЗадолженности		= ВидЗадолженности;
						ОстаткиПоВзаиморасчетамСПокупателями.Контрагент 			= Контрагент;
						ОстаткиПоВзаиморасчетамСПокупателями.ДоговорКонтрагента 	= ДоговорКонтрагента;
						ОстаткиПоВзаиморасчетамСПокупателями.РасчетныйДокумент		= РасчетныйДокумент;
						ОстаткиПоВзаиморасчетамСПокупателями.СуммаВзаиморасчетов 	= СуммаРуб;
						ОстаткиПоВзаиморасчетамСПокупателями.ДоходКомитента 		= ДоходКомитента;
						ОстаткиПоВзаиморасчетамСПокупателями.ДоходЕНВД 				= ДоходЕНВД;
						ОстаткиПоВзаиморасчетамСПокупателями.СчетУчета				= БухИт.Счет;
						ОстаткиПоВзаиморасчетамСПокупателями.Валюта					= БухИт.Валюта;
						ОстаткиПоВзаиморасчетамСПокупателями.СуммаВзаиморасчетовВал	= Сумма;
					КонецЕсли;
				КонецЦикла;
			Иначе
				Сумма = 0;
				ДоходКомитента = 0;
				ДоходЕНВД = 0;
				ВидЗадолженности = ?((БухИт.СКД("С")-БухИт.СКК("С")) &gt; 0, "Дебиторская", "Кредиторская");
				Сумма = ?((БухИт.СКД("С")-БухИт.СКК("С")) &gt; 0, БухИт.СКД("С") - БухИт.СКК("С"), БухИт.СКК("С") - БухИт.СКД("С"));
				Если (БухИт.Счет.Код = "62.2") Тогда
					ДоходКомитента = Сумма;
				ИначеЕсли (БухИт.Счет.Код = "62.4") ИЛИ (БухИт.Счет.Код = "62.44") Тогда
					ДоходЕНВД = Сумма;
				КонецЕсли;
				Если Сумма &lt;&gt; 0 Тогда
					ОстаткиПоВзаиморасчетамСПокупателями.НоваяСтрока();
					ОстаткиПоВзаиморасчетамСПокупателями.ВидЗадолженности		= ВидЗадолженности;
					ОстаткиПоВзаиморасчетамСПокупателями.Контрагент 			= Контрагент;
					ОстаткиПоВзаиморасчетамСПокупателями.ДоговорКонтрагента 	= ДоговорКонтрагента;
					ОстаткиПоВзаиморасчетамСПокупателями.РасчетныйДокумент		= РасчетныйДокумент;
					ОстаткиПоВзаиморасчетамСПокупателями.СуммаВзаиморасчетов 	= Сумма;
					ОстаткиПоВзаиморасчетамСПокупателями.ДоходКомитента 		= ДоходКомитента;
					ОстаткиПоВзаиморасчетамСПокупателями.ДоходЕНВД 				= ДоходЕНВД;
					ОстаткиПоВзаиморасчетамСПокупателями.СчетУчета				= БухИт.Счет;
					ОстаткиПоВзаиморасчетамСПокупателями.Валюта					= Параметры.Рубли;
					ОстаткиПоВзаиморасчетамСПокупателями.СуммаВзаиморасчетовВал	= Сумма;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
КонецЦикла;

ОстаткиПоВзаиморасчетамСПокупателями.Свернуть("Контрагент, СчетУчета, Валюта, ДоговорКонтрагента,ВидЗадолженности,РасчетныйДокумент","СуммаВзаиморасчетов, СуммаВзаиморасчетовВал,ДоходКомитента,ДоходЕНВД");

РазделУчета = ОпределитьРазделУчета();
Если ПустоеЗначение(РазделУчета) = 0 Тогда
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
	ВходящиеДанные.Установить("ВходящиеОстатки", ОстаткиПоВзаиморасчетамСПокупателями);
	ВходящиеДанные.Установить("Счет", Счет);
	ВходящиеДанные.Установить("Дата", ДатаЗапроса);
	ВходящиеДанные.Установить("РазделУчета", РазделУчета);
	
	Если Параметры.ДатаКонцаПериодаВыгрузки = Параметры.ДатаВводаОстатков Тогда
		ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
		ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
		ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
	Иначе
		Если ОстаткиНаКонец = 1 Тогда
			ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 0);
			ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
			ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
		Иначе
			ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
			ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 0);
			ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 0);
		КонецЕсли;
	КонецЕсли;
КонецЕсли;

ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ВводНачальныхОстатков");


</Текст>
		</Алгоритм>
		<Алгоритм Имя="НУ_ОстаткиПоВзаиморасчетамСПоставщиками" ИспользуетсяПриЗагрузке="false">
			<Текст>ОчиститьПараметры();
ЗаполнитьТаблицуНДС();
ОстаткиПоВзаиморасчетамСПоставщиками 	= Параметры.ОстаткиПоВзаиморасчетамСПоставщиками;
ВременнаяТаблицаРасчетов		 		= Параметры.ВременнаяТаблицаРасчетов;
ОстаткиНаКонец = Параметры.ПараметрыАлгоритмов.Получить("ОстаткиНаКонец");
ОстаткиПоВзаиморасчетамСПоставщиками.УдалитьСтроки();

Если ОстаткиНаКонец = 1 Тогда
	ДатаЗапроса = Параметры.ДатаКонцаПериодаВыгрузки;
Иначе
	ДатаЗапроса = Параметры.ДатаВводаОстатков - 1;
КонецЕсли;

БухИтД = СоздатьОбъект("БухгалтерскиеИтоги");
БухИтД.ИспользоватьСубконто(ВидыСубконто.Контрагенты);
БухИтД.ИспользоватьСубконто(ВидыСубконто.Договоры);
БухИтД.ВыполнитьЗапрос(, ДатаЗапроса, "60.1, 60.2, 60.11, 60.22, 76.5, 76.6, 76.55, 76.66");

БухИтДР = СоздатьОбъект("БухгалтерскиеИтоги");
БухИтДР.ИспользоватьСубконто(ВидыСубконто.Контрагенты);
БухИтДР.ИспользоватьСубконто(ВидыСубконто.Договоры);
БухИтДР.ИспользоватьСубконто(ВидыСубконто.ВидыРасчетовСПоставщиками);
БухИтДР.ВыполнитьЗапрос(, ДатаЗапроса, "60.2, 60.22, 76.6, 76.66");

БухИтД.ВыбратьСубконто(1);
Пока БухИтД.ПолучитьСубконто(1) = 1 Цикл
	БухИтД.ВыбратьСубконто(2);
	Пока БухИтД.ПолучитьСубконто(2) = 1 Цикл
		
		Контрагент 			= БухИтД.Субконто(1);
		ДоговорКонтрагента	= БухИтД.Субконто(2);
		РасчетныйДокумент 	= БухИтД.Субконто(2);
		
		БухИтД.ВыбратьСчета();
		Пока БухИтД.ПолучитьСчет() = 1 Цикл
			ВидЗадолженности = ?((БухИтД.СКД("С")-БухИтД.СКК("С")) &gt; 0, "Дебиторская", "Кредиторская");
			Если БухИтД.ВыбратьВалюты() = 1 Тогда
				Пока БухИтД.ПолучитьВалюту() = 1 Цикл
					Валюта = БухИтД.Валюта;
					НДС = 0;
					НДСРуб = 0;
					Сумма = 0;
					СуммаРуб = 0;
					РаспредНДС = 0;
					РаспредНДСРуб = 0;
					РаспредСумма = 0;
					РаспредСуммаРуб = 0;
					НеПринСумма = 0;
					НеПринСуммаРуб = 0;
    				Если БухИтДР.ПолучитьСчет(,БухИтД.Счет)+БухИтДР.ПолучитьВалюту(,БухИтД.Валюта)+	БухИтДР.ПолучитьСубконто(1,,БухИтД.Субконто(1))+
						БухИтДР.ПолучитьСубконто(2,,БухИтД.Субконто(2)) &gt; 3 Тогда
						ОтражениеВНУ = "Принимаются";
						БухИтДР.ВыбратьСубконто(3);
						Пока БухИтДР.ПолучитьСубконто(3) = 1 Цикл
							БухИтДР.ПолучитьВалюту(,БухИтД.Валюта);
							ВидЗадолженности = ?((БухИтДР.СКД("В")-БухИтДР.СКК("В")) &gt; 0, "Дебиторская", "Кредиторская");
							Сумма_ВР_Руб = ?((БухИтДР.СКД("С")-БухИтДР.СКК("С")) &gt; 0, БухИтДР.СКД("С") - БухИтДР.СКК("С"), БухИтДР.СКК("С") - БухИтДР.СКД("С"));
							Сумма_ВР = ?((БухИтДР.СКД("В")-БухИтДР.СКК("В")) &gt; 0, БухИтДР.СКД("В") - БухИтДР.СКК("В"), БухИтДР.СКК("В") - БухИтДР.СКД("В"));
												
							//Определение входящего НДС
							Представление1 = ?(ПустоеЗначение(БухИтД.Субконто(1)) = 1, "", Строка(БухИтД.Субконто(1).Код));
							Представление2 = ?(ПустоеЗначение(БухИтД.Субконто(2)) = 1, "", Строка(БухИтД.Субконто(2).Код));
							Представление3 = Строка(БухИтДР.Субконто(3));
							СтрокаКлюча = Представление1 + ";" + Представление2 + ";" + Представление3;
							НомерСтроки = "";
							Если Параметры.ТаблицаНДС.НайтиЗначение(СтрокаКлюча, НомерСтроки, "Ключ") = 1 Тогда
								Параметры.ТаблицаНДС.ПолучитьСтрокуПоНомеру(НомерСтроки);
								НДС_ВР = ?(Параметры.ТаблицаНДС.Сумма = 0, 0, Сумма_ВР * Параметры.ТаблицаНДС.НДС / Параметры.ТаблицаНДС.Сумма); 
								НДС_ВР_Руб = НДС_ВР * Сумма_ВР_Руб/Сумма_ВР;
							КонецЕсли;
							
							Если (БухИтДР.Субконто(3) = Перечисление.ВидыРасчетовСПоставщиками.ПрочиеРаспределяемые) или
								(БухИтДР.Субконто(3) = Перечисление.ВидыРасчетовСПоставщиками.ОтложенныеРаспределяемые) Тогда
								РаспредСумма = РаспредСумма + Сумма_ВР;
								РаспредНДС = РаспредНДС + НДС_ВР;
								РаспредСуммаРуб = РаспредСуммаРуб + Сумма_ВР_Руб;
								РаспредНДСРуб = РаспредНДСРуб + НДС_ВР_Руб;
							ИначеЕсли (БухИтДР.Субконто(3) = Перечисление.ВидыРасчетовСПоставщиками.РасходыНаПриобретениеОС) Тогда
								НеПринСумма = НеПринСумма + Сумма_ВР;
								НеПринСуммаРуб = НеПринСуммаРуб + Сумма_ВР_Руб;
							Иначе
								Сумма = Сумма + Сумма_ВР;
								НДС = НДС + НДС_ВР;
								СуммаРуб = СуммаРуб + Сумма_ВР_Руб;
								НДСРуб = НДСРуб + НДС_ВР_Руб;
							КонецЕсли;
							
						КонецЦикла;
					Иначе
						ОтражениеВНУ = "НеПринимаются";
						ВидЗадолженности = ?((БухИтД.СКД("В")-БухИтД.СКК("В")) &gt; 0, "Дебиторская", "Кредиторская");
						НеПринСумма = ?((БухИтД.СКД("В")-БухИтД.СКК("В")) &gt; 0, БухИтД.СКД("В") - БухИтД.СКК("В"), БухИтД.СКК("В") - БухИтД.СКД("В"));
						НеПринСуммаРуб = ?((БухИтД.СКД("С")-БухИтД.СКК("С")) &gt; 0, БухИтД.СКД("С") - БухИтД.СКК("С"), БухИтД.СКК("С") - БухИтД.СКД("С"));
					КонецЕсли;
					
					Если Сумма &lt;&gt; 0 Тогда
						ОтражениеВНУ = "Принимаются";
						ОстаткиПоВзаиморасчетамСПоставщиками.НоваяСтрока();
						ОстаткиПоВзаиморасчетамСПоставщиками.ВидЗадолженности		= ВидЗадолженности;
						ОстаткиПоВзаиморасчетамСПоставщиками.Контрагент 			= Контрагент;
						ОстаткиПоВзаиморасчетамСПоставщиками.ДоговорКонтрагента 	= ДоговорКонтрагента;
						ОстаткиПоВзаиморасчетамСПоставщиками.РасчетныйДокумент		= РасчетныйДокумент;
						ОстаткиПоВзаиморасчетамСПоставщиками.СуммаВзаиморасчетов 	= СуммаРуб;
						ОстаткиПоВзаиморасчетамСПоставщиками.Валюта				 	= Валюта;
						ОстаткиПоВзаиморасчетамСПоставщиками.СуммаВзаиморасчетовВал	= Сумма;
						ОстаткиПоВзаиморасчетамСПоставщиками.СчетУчета				= БухИтД.Счет;
						
						Если ОстаткиПоВзаиморасчетамСПоставщиками.ВидЗадолженности = "Кредиторская" Тогда
							
							ВременнаяТаблицаРасчетов.НоваяСтрока();
							ВременнаяТаблицаРасчетов.ТабличнаяЧасть 					= "ВзаиморасчетыСПоставщиками";
							ВременнаяТаблицаРасчетов.Контрагент 						= ОстаткиПоВзаиморасчетамСПоставщиками.Контрагент;
							ВременнаяТаблицаРасчетов.ДоговорКонтрагента					= ОстаткиПоВзаиморасчетамСПоставщиками.ДоговорКонтрагента;
							ВременнаяТаблицаРасчетов.РасчетныйДокумент					= ОстаткиПоВзаиморасчетамСПоставщиками.РасчетныйДокумент;
							ВременнаяТаблицаРасчетов.ОтражениеВНУ						= ОтражениеВНУ ;
							ВременнаяТаблицаРасчетов.Валюта								= Валюта;
							ВременнаяТаблицаРасчетов.Сумма                              = Число(Сумма);
							ВременнаяТаблицаРасчетов.СуммаВзаиморасчетов	            = Число(Сумма);
							ВременнаяТаблицаРасчетов.НДС								= НДС;
							
						КонецЕсли;
					КонецЕсли;
					Если РаспредСумма &lt;&gt; 0 Тогда
						ОтражениеВНУ = "Распределяются";
						ОстаткиПоВзаиморасчетамСПоставщиками.НоваяСтрока();
						ОстаткиПоВзаиморасчетамСПоставщиками.ВидЗадолженности		= ВидЗадолженности;
						ОстаткиПоВзаиморасчетамСПоставщиками.Контрагент 			= Контрагент;
						ОстаткиПоВзаиморасчетамСПоставщиками.ДоговорКонтрагента 	= ДоговорКонтрагента;
						ОстаткиПоВзаиморасчетамСПоставщиками.РасчетныйДокумент		= РасчетныйДокумент;
						ОстаткиПоВзаиморасчетамСПоставщиками.СуммаВзаиморасчетов 	= РаспредСуммаРуб;
						ОстаткиПоВзаиморасчетамСПоставщиками.Валюта 				= Валюта;
						ОстаткиПоВзаиморасчетамСПоставщиками.СуммаВзаиморасчетовВал	= РаспредСумма;
						ОстаткиПоВзаиморасчетамСПоставщиками.СчетУчета				= БухИтД.Счет;
						
						Если ОстаткиПоВзаиморасчетамСПоставщиками.ВидЗадолженности = "Кредиторская" Тогда
							
							ВременнаяТаблицаРасчетов.НоваяСтрока();
							ВременнаяТаблицаРасчетов.ТабличнаяЧасть 					= "ВзаиморасчетыСПоставщиками";
							ВременнаяТаблицаРасчетов.Контрагент 						= ОстаткиПоВзаиморасчетамСПоставщиками.Контрагент;
							ВременнаяТаблицаРасчетов.ДоговорКонтрагента					= ОстаткиПоВзаиморасчетамСПоставщиками.ДоговорКонтрагента;
							ВременнаяТаблицаРасчетов.РасчетныйДокумент					= ОстаткиПоВзаиморасчетамСПоставщиками.РасчетныйДокумент;
							ВременнаяТаблицаРасчетов.ОтражениеВНУ						= ОтражениеВНУ ;
							ВременнаяТаблицаРасчетов.Валюта								= Валюта;
							ВременнаяТаблицаРасчетов.Сумма                              = Число(РаспредСумма);
							ВременнаяТаблицаРасчетов.СуммаВзаиморасчетов	            = Число(РаспредСумма);
							ВременнаяТаблицаРасчетов.НДС								= РаспредНДС;
							
						КонецЕсли;
					КонецЕсли;
					Если НеПринСумма &lt;&gt; 0 Тогда
						ОтражениеВНУ = "НеПринимаются";
						ОстаткиПоВзаиморасчетамСПоставщиками.НоваяСтрока();
						ОстаткиПоВзаиморасчетамСПоставщиками.ВидЗадолженности		= ВидЗадолженности;
						ОстаткиПоВзаиморасчетамСПоставщиками.Контрагент 			= Контрагент;
						ОстаткиПоВзаиморасчетамСПоставщиками.ДоговорКонтрагента 	= ДоговорКонтрагента;
						ОстаткиПоВзаиморасчетамСПоставщиками.РасчетныйДокумент		= РасчетныйДокумент;
						ОстаткиПоВзаиморасчетамСПоставщиками.СуммаВзаиморасчетов 	= НеПринСуммаРуб;
						ОстаткиПоВзаиморасчетамСПоставщиками.Валюта 				= Валюта;
						ОстаткиПоВзаиморасчетамСПоставщиками.СуммаВзаиморасчетовВал	= НеПринСумма;
						ОстаткиПоВзаиморасчетамСПоставщиками.СчетУчета				= БухИтД.Счет;
						
						Если ОстаткиПоВзаиморасчетамСПоставщиками.ВидЗадолженности = "Кредиторская" Тогда
							
							ВременнаяТаблицаРасчетов.НоваяСтрока();
							ВременнаяТаблицаРасчетов.ТабличнаяЧасть 					= "ВзаиморасчетыСПоставщиками";
							ВременнаяТаблицаРасчетов.Контрагент 						= ОстаткиПоВзаиморасчетамСПоставщиками.Контрагент;
							ВременнаяТаблицаРасчетов.ДоговорКонтрагента					= ОстаткиПоВзаиморасчетамСПоставщиками.ДоговорКонтрагента;
							ВременнаяТаблицаРасчетов.РасчетныйДокумент					= ОстаткиПоВзаиморасчетамСПоставщиками.РасчетныйДокумент;
							ВременнаяТаблицаРасчетов.ОтражениеВНУ						= ОтражениеВНУ;
							ВременнаяТаблицаРасчетов.Валюта								= Валюта;
							ВременнаяТаблицаРасчетов.Сумма                              = Число(НеПринСумма);
							ВременнаяТаблицаРасчетов.СуммаВзаиморасчетов	            = Число(НеПринСумма);
							ВременнаяТаблицаРасчетов.НДС								= 0;
							
						КонецЕсли;
					КонецЕсли;
					
				КонецЦикла;
			Иначе
				Валюта = Параметры.Рубли;
				НДС = 0;
				Сумма = 0;
				РаспредНДС = 0;
				РаспредСумма = 0;
				НеПринСумма = 0;
				Если БухИтДР.ПолучитьСчет(,БухИтД.Счет)+БухИтДР.ПолучитьСубконто(1,,БухИтД.Субконто(1))+БухИтДР.ПолучитьСубконто(2,,БухИтД.Субконто(2)) &gt; 2 Тогда
					ОтражениеВНУ = "Принимаются";
					БухИтДР.ВыбратьСубконто(3);
					Пока БухИтДР.ПолучитьСубконто(3) = 1 Цикл
						
						ВидЗадолженности = ?((БухИтДР.СКД("С")-БухИтДР.СКК("С")) &gt; 0, "Дебиторская", "Кредиторская");
						Сумма_ВР = ?((БухИтДР.СКД("С")-БухИтДР.СКК("С")) &gt; 0, БухИтДР.СКД("С") - БухИтДР.СКК("С"), БухИтДР.СКК("С") - БухИтДР.СКД("С"));
							
						
						//Определение входящего НДС
						Представление1 = ?(ПустоеЗначение(БухИтД.Субконто(1)) = 1, "", Строка(БухИтД.Субконто(1).Код));
						Представление2 = ?(ПустоеЗначение(БухИтД.Субконто(2)) = 1, "", Строка(БухИтД.Субконто(2).Код));
						Представление3 = Строка(БухИтДР.Субконто(3));
						СтрокаКлюча = Представление1 + ";" + Представление2 + ";" + Представление3;
						НомерСтроки = "";
						Если Параметры.ТаблицаНДС.НайтиЗначение(СтрокаКлюча, НомерСтроки, "Ключ") = 1 Тогда
							Параметры.ТаблицаНДС.ПолучитьСтрокуПоНомеру(НомерСтроки);
							НДС_ВР = ?(Параметры.ТаблицаНДС.Сумма = 0, 0, Сумма_ВР * Параметры.ТаблицаНДС.НДС / Параметры.ТаблицаНДС.Сумма); 
						КонецЕсли;
						
						Если (БухИтДР.Субконто(3) = Перечисление.ВидыРасчетовСПоставщиками.ПрочиеРаспределяемые) или
							(БухИтДР.Субконто(3) = Перечисление.ВидыРасчетовСПоставщиками.ОтложенныеРаспределяемые) Тогда
							РаспредСумма = РаспредСумма + Сумма_ВР;
							РаспредНДС = РаспредНДС + НДС_ВР;
						ИначеЕсли (БухИтДР.Субконто(3) = Перечисление.ВидыРасчетовСПоставщиками.РасходыНаПриобретениеОС) Тогда
								НеПринСумма = НеПринСумма + Сумма_ВР;
						Иначе
							Сумма = Сумма + Сумма_ВР;
							НДС = НДС + НДС_ВР;
						КонецЕсли;
					КонецЦикла;
				Иначе
					ОтражениеВНУ = "НеПринимаются";
					ВидЗадолженности = ?((БухИтД.СКД("С")-БухИтД.СКК("С")) &gt; 0, "Дебиторская", "Кредиторская");
					НеПринСумма = ?((БухИтД.СКД("С")-БухИтД.СКК("С")) &gt; 0, БухИтД.СКД("С") - БухИтД.СКК("С"), БухИтД.СКК("С") - БухИтД.СКД("С"));
				КонецЕсли;
				
				Если Сумма &lt;&gt; 0 Тогда
					ОтражениеВНУ = "Принимаются";
					ОстаткиПоВзаиморасчетамСПоставщиками.НоваяСтрока();
					ОстаткиПоВзаиморасчетамСПоставщиками.ВидЗадолженности		= ВидЗадолженности;
					ОстаткиПоВзаиморасчетамСПоставщиками.Контрагент 			= Контрагент;
					ОстаткиПоВзаиморасчетамСПоставщиками.ДоговорКонтрагента 	= ДоговорКонтрагента;
					ОстаткиПоВзаиморасчетамСПоставщиками.РасчетныйДокумент		= РасчетныйДокумент;
					ОстаткиПоВзаиморасчетамСПоставщиками.СуммаВзаиморасчетов 	= Сумма;
					ОстаткиПоВзаиморасчетамСПоставщиками.Валюта 				= Валюта;
					ОстаткиПоВзаиморасчетамСПоставщиками.СуммаВзаиморасчетовВал	= Сумма;
					ОстаткиПоВзаиморасчетамСПоставщиками.СчетУчета				= БухИтД.Счет;
					
					Если ОстаткиПоВзаиморасчетамСПоставщиками.ВидЗадолженности = "Кредиторская" Тогда
						
						ВременнаяТаблицаРасчетов.НоваяСтрока();
						ВременнаяТаблицаРасчетов.ТабличнаяЧасть 					= "ВзаиморасчетыСПоставщиками";
						ВременнаяТаблицаРасчетов.Контрагент 						= ОстаткиПоВзаиморасчетамСПоставщиками.Контрагент;
						ВременнаяТаблицаРасчетов.ДоговорКонтрагента					= ОстаткиПоВзаиморасчетамСПоставщиками.ДоговорКонтрагента;
						ВременнаяТаблицаРасчетов.РасчетныйДокумент					= ОстаткиПоВзаиморасчетамСПоставщиками.РасчетныйДокумент;
						ВременнаяТаблицаРасчетов.ОтражениеВНУ						= ОтражениеВНУ ;
						ВременнаяТаблицаРасчетов.Валюта								= Валюта;
						ВременнаяТаблицаРасчетов.Сумма                              = Число(Сумма);
						ВременнаяТаблицаРасчетов.СуммаВзаиморасчетов	            = Число(Сумма);
						ВременнаяТаблицаРасчетов.НДС								= НДС;
						
					КонецЕсли;
				КонецЕсли;
				Если РаспредСумма &lt;&gt; 0 Тогда
					ОтражениеВНУ = "Распределяются";
					ОстаткиПоВзаиморасчетамСПоставщиками.НоваяСтрока();
					ОстаткиПоВзаиморасчетамСПоставщиками.ВидЗадолженности		= ВидЗадолженности;
					ОстаткиПоВзаиморасчетамСПоставщиками.Контрагент 			= Контрагент;
					ОстаткиПоВзаиморасчетамСПоставщиками.ДоговорКонтрагента 	= ДоговорКонтрагента;
					ОстаткиПоВзаиморасчетамСПоставщиками.РасчетныйДокумент		= РасчетныйДокумент;
					ОстаткиПоВзаиморасчетамСПоставщиками.СуммаВзаиморасчетов 	= РаспредСумма;
					ОстаткиПоВзаиморасчетамСПоставщиками.Валюта 				= Валюта;
					ОстаткиПоВзаиморасчетамСПоставщиками.СуммаВзаиморасчетовВал	= РаспредСумма;
					ОстаткиПоВзаиморасчетамСПоставщиками.СчетУчета				= БухИтД.Счет;
					
					Если ОстаткиПоВзаиморасчетамСПоставщиками.ВидЗадолженности = "Кредиторская" Тогда
						
						ВременнаяТаблицаРасчетов.НоваяСтрока();
						ВременнаяТаблицаРасчетов.ТабличнаяЧасть 					= "ВзаиморасчетыСПоставщиками";
						ВременнаяТаблицаРасчетов.Контрагент 						= ОстаткиПоВзаиморасчетамСПоставщиками.Контрагент;
						ВременнаяТаблицаРасчетов.ДоговорКонтрагента					= ОстаткиПоВзаиморасчетамСПоставщиками.ДоговорКонтрагента;
						ВременнаяТаблицаРасчетов.РасчетныйДокумент					= ОстаткиПоВзаиморасчетамСПоставщиками.РасчетныйДокумент;
						ВременнаяТаблицаРасчетов.ОтражениеВНУ						= ОтражениеВНУ ;
						ВременнаяТаблицаРасчетов.Валюта								= Валюта;
						ВременнаяТаблицаРасчетов.Сумма                              = Число(РаспредСумма);
						ВременнаяТаблицаРасчетов.СуммаВзаиморасчетов	            = Число(РаспредСумма);
						ВременнаяТаблицаРасчетов.НДС								= РаспредНДС;
						
					КонецЕсли;
				КонецЕсли;
				Если НеПринСумма &lt;&gt; 0 Тогда
					ОтражениеВНУ = "НеПринимаются";
					ОстаткиПоВзаиморасчетамСПоставщиками.НоваяСтрока();
					ОстаткиПоВзаиморасчетамСПоставщиками.ВидЗадолженности		= ВидЗадолженности;
					ОстаткиПоВзаиморасчетамСПоставщиками.Контрагент 			= Контрагент;
					ОстаткиПоВзаиморасчетамСПоставщиками.ДоговорКонтрагента 	= ДоговорКонтрагента;
					ОстаткиПоВзаиморасчетамСПоставщиками.РасчетныйДокумент		= РасчетныйДокумент;
					ОстаткиПоВзаиморасчетамСПоставщиками.СуммаВзаиморасчетов 	= НеПринСумма;
					ОстаткиПоВзаиморасчетамСПоставщиками.Валюта 				= Валюта;
					ОстаткиПоВзаиморасчетамСПоставщиками.СуммаВзаиморасчетовВал	= НеПринСумма;
					ОстаткиПоВзаиморасчетамСПоставщиками.СчетУчета				= БухИтД.Счет;
					
					Если ОстаткиПоВзаиморасчетамСПоставщиками.ВидЗадолженности = "Кредиторская" Тогда
						
						ВременнаяТаблицаРасчетов.НоваяСтрока();
						ВременнаяТаблицаРасчетов.ТабличнаяЧасть 					= "ВзаиморасчетыСПоставщиками";
						ВременнаяТаблицаРасчетов.Контрагент 						= ОстаткиПоВзаиморасчетамСПоставщиками.Контрагент;
						ВременнаяТаблицаРасчетов.ДоговорКонтрагента					= ОстаткиПоВзаиморасчетамСПоставщиками.ДоговорКонтрагента;
						ВременнаяТаблицаРасчетов.РасчетныйДокумент					= ОстаткиПоВзаиморасчетамСПоставщиками.РасчетныйДокумент;
						ВременнаяТаблицаРасчетов.ОтражениеВНУ						= ОтражениеВНУ;
						ВременнаяТаблицаРасчетов.Валюта								= Валюта;
						ВременнаяТаблицаРасчетов.Сумма                              = Число(НеПринСумма);
						ВременнаяТаблицаРасчетов.СуммаВзаиморасчетов	            = Число(НеПринСумма);
						ВременнаяТаблицаРасчетов.НДС								= 0;
						
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
КонецЦикла;
</Текст>
		</Алгоритм>
		<Алгоритм Имя="НУ_ОстаткиПоВзаиморасчетамСПоставщикамиПоСчету" ИспользуетсяПриЗагрузке="false">
			<Текст>Счет = Параметры.ПараметрыАлгоритмов.Получить("ТекущийСчет");
Если (Счет &lt;&gt; СчетПоКоду("60.1")) И (Счет &lt;&gt; СчетПоКоду("60.2"))
	И (Счет &lt;&gt; СчетПоКоду("60.11")) И (Счет &lt;&gt; СчетПоКоду("60.22"))
	И (Счет &lt;&gt; СчетПоКоду("76.5")) И (Счет &lt;&gt; СчетПоКоду("76.6"))
	И (Счет &lt;&gt; СчетПоКоду("76.55")) И (Счет &lt;&gt; СчетПоКоду("76.66")) Тогда
	Возврат 0;
КонецЕсли;

ОчиститьПараметры();
ОстаткиПоВзаиморасчетамСПоставщиками 	= Параметры.ОстаткиПоВзаиморасчетамСПоставщиками;
ОстаткиПоВзаиморасчетамСПоставщиками.УдалитьСтроки();
ОстаткиНаКонец = Параметры.ПараметрыАлгоритмов.Получить("ОстаткиНаКонец");

Если ОстаткиНаКонец = 1 Тогда
	ДатаЗапроса = Параметры.ДатаКонцаПериодаВыгрузки;
Иначе
	ДатаЗапроса = Параметры.ДатаВводаОстатков - 1;
КонецЕсли;

БухИтД = СоздатьОбъект("БухгалтерскиеИтоги");
БухИтД.ИспользоватьСубконто(ВидыСубконто.Контрагенты);
БухИтД.ИспользоватьСубконто(ВидыСубконто.Договоры);
БухИтД.ВыполнитьЗапрос(, ДатаЗапроса, Счет);

БухИтДР = СоздатьОбъект("БухгалтерскиеИтоги");
БухИтДР.ИспользоватьСубконто(ВидыСубконто.Контрагенты);
БухИтДР.ИспользоватьСубконто(ВидыСубконто.Договоры);
БухИтДР.ИспользоватьСубконто(ВидыСубконто.ВидыРасчетовСПоставщиками);
БухИтДР.ВыполнитьЗапрос(, ДатаЗапроса, "60.2, 60.22, 76.6, 76.66");

БухИтД.ВыбратьСубконто(1);
Пока БухИтД.ПолучитьСубконто(1) = 1 Цикл
	БухИтД.ВыбратьСубконто(2);
	Пока БухИтД.ПолучитьСубконто(2) = 1 Цикл
		
		Контрагент 			= БухИтД.Субконто(1);
		ДоговорКонтрагента	= БухИтД.Субконто(2);
		РасчетныйДокумент 	= БухИтД.Субконто(2);
		
		БухИтД.ВыбратьСчета();
		Пока БухИтД.ПолучитьСчет() = 1 Цикл
			ВидЗадолженности = ?((БухИтД.СКД("С")-БухИтД.СКК("С")) &gt; 0, "Дебиторская", "Кредиторская");
			Если БухИтД.ВыбратьВалюты() = 1 Тогда
				Пока БухИтД.ПолучитьВалюту() = 1 Цикл
					Валюта = БухИтД.Валюта;
					Сумма = 0;
					СуммаРуб = 0;
					РаспредСумма = 0;
					РаспредСуммаРуб = 0;
					НеПринСумма = 0;
					НеПринСуммаРуб = 0;
					БухИтДР.ВыбратьСубконто(1);
					БухИтДР.ПолучитьСубконто(1,,БухИтД.Субконто(1));
					БухИтДР.ВыбратьСубконто(2);
					БухИтДР.ПолучитьСубконто(2,,БухИтД.Субконто(2));
					Если БухИтДР.ПолучитьСчет(,БухИтД.Счет)+БухИтДР.ПолучитьВалюту(,БухИтД.Валюта)+	БухИтДР.ПолучитьСубконто(1,,БухИтД.Субконто(1))+
						БухИтДР.ПолучитьСубконто(2,,БухИтД.Субконто(2)) &gt; 3 Тогда
						ОтражениеВНУ = "Принимаются";
						БухИтДР.ВыбратьСубконто(3);
						Пока БухИтДР.ПолучитьСубконто(3) = 1 Цикл
							БухИтДР.ПолучитьВалюту(,БухИтД.Валюта);
							ВидЗадолженности = ?((БухИтДР.СКД("В")-БухИтДР.СКК("В")) &gt; 0, "Дебиторская", "Кредиторская");
							Сумма_ВР_Руб = ?((БухИтДР.СКД("С")-БухИтДР.СКК("С")) &gt; 0, БухИтДР.СКД("С") - БухИтДР.СКК("С"), БухИтДР.СКК("С") - БухИтДР.СКД("С"));
							Сумма_ВР = ?((БухИтДР.СКД("В")-БухИтДР.СКК("В")) &gt; 0, БухИтДР.СКД("В") - БухИтДР.СКК("В"), БухИтДР.СКК("В") - БухИтДР.СКД("В"));
							
							Если (БухИтДР.Субконто(3) = Перечисление.ВидыРасчетовСПоставщиками.ПрочиеРаспределяемые) или
								(БухИтДР.Субконто(3) = Перечисление.ВидыРасчетовСПоставщиками.ОтложенныеРаспределяемые) Тогда
								РаспредСумма = РаспредСумма + Сумма_ВР;
								РаспредСуммаРуб = РаспредСуммаРуб + Сумма_ВР_Руб;
							ИначеЕсли (БухИтДР.Субконто(3) = Перечисление.ВидыРасчетовСПоставщиками.РасходыНаПриобретениеОС) Тогда
								НеПринСумма = НеПринСумма + Сумма_ВР;
								НеПринСуммаРуб = НеПринСуммаРуб + Сумма_ВР_Руб;
							Иначе
								Сумма = Сумма + Сумма_ВР;
								СуммаРуб = СуммаРуб + Сумма_ВР_Руб;
							КонецЕсли;
							
						КонецЦикла;
					Иначе
						ОтражениеВНУ = "НеПринимаются";
						ВидЗадолженности = ?((БухИтД.СКД("В")-БухИтД.СКК("В")) &gt; 0, "Дебиторская", "Кредиторская");
						НеПринСумма = ?((БухИтД.СКД("В")-БухИтД.СКК("В")) &gt; 0, БухИтД.СКД("В") - БухИтД.СКК("В"), БухИтД.СКК("В") - БухИтД.СКД("В"));
						НеПринСуммаРуб = ?((БухИтД.СКД("С")-БухИтД.СКК("С")) &gt; 0, БухИтД.СКД("С") - БухИтД.СКК("С"), БухИтД.СКК("С") - БухИтД.СКД("С"));
					КонецЕсли;
					
					Если Сумма &lt;&gt; 0 Тогда
						ОтражениеВНУ = "Принимаются";
						ОстаткиПоВзаиморасчетамСПоставщиками.НоваяСтрока();
						ОстаткиПоВзаиморасчетамСПоставщиками.ВидЗадолженности		= ВидЗадолженности;
						ОстаткиПоВзаиморасчетамСПоставщиками.Контрагент 			= Контрагент;
						ОстаткиПоВзаиморасчетамСПоставщиками.ДоговорКонтрагента 	= ДоговорКонтрагента;
						ОстаткиПоВзаиморасчетамСПоставщиками.РасчетныйДокумент		= РасчетныйДокумент;
						ОстаткиПоВзаиморасчетамСПоставщиками.СуммаВзаиморасчетов 	= СуммаРуб;
						ОстаткиПоВзаиморасчетамСПоставщиками.Валюта				 	= Валюта;
						ОстаткиПоВзаиморасчетамСПоставщиками.СуммаВзаиморасчетовВал	= Сумма;
						ОстаткиПоВзаиморасчетамСПоставщиками.СчетУчета				= БухИтД.Счет;
					КонецЕсли;
					Если РаспредСумма &lt;&gt; 0 Тогда
						ОтражениеВНУ = "Распределяются";
						ОстаткиПоВзаиморасчетамСПоставщиками.НоваяСтрока();
						ОстаткиПоВзаиморасчетамСПоставщиками.ВидЗадолженности		= ВидЗадолженности;
						ОстаткиПоВзаиморасчетамСПоставщиками.Контрагент 			= Контрагент;
						ОстаткиПоВзаиморасчетамСПоставщиками.ДоговорКонтрагента 	= ДоговорКонтрагента;
						ОстаткиПоВзаиморасчетамСПоставщиками.РасчетныйДокумент		= РасчетныйДокумент;
						ОстаткиПоВзаиморасчетамСПоставщиками.СуммаВзаиморасчетов 	= РаспредСуммаРуб;
						ОстаткиПоВзаиморасчетамСПоставщиками.Валюта 				= Валюта;
						ОстаткиПоВзаиморасчетамСПоставщиками.СуммаВзаиморасчетовВал	= РаспредСумма;
						ОстаткиПоВзаиморасчетамСПоставщиками.СчетУчета				= БухИтД.Счет;
					КонецЕсли;
					Если НеПринСумма &lt;&gt; 0 Тогда
						ОтражениеВНУ = "НеПринимаются";
						ОстаткиПоВзаиморасчетамСПоставщиками.НоваяСтрока();
						ОстаткиПоВзаиморасчетамСПоставщиками.ВидЗадолженности		= ВидЗадолженности;
						ОстаткиПоВзаиморасчетамСПоставщиками.Контрагент 			= Контрагент;
						ОстаткиПоВзаиморасчетамСПоставщиками.ДоговорКонтрагента 	= ДоговорКонтрагента;
						ОстаткиПоВзаиморасчетамСПоставщиками.РасчетныйДокумент		= РасчетныйДокумент;
						ОстаткиПоВзаиморасчетамСПоставщиками.СуммаВзаиморасчетов 	= НеПринСуммаРуб;
						ОстаткиПоВзаиморасчетамСПоставщиками.Валюта 				= Валюта;
						ОстаткиПоВзаиморасчетамСПоставщиками.СуммаВзаиморасчетовВал	= НеПринСумма;
						ОстаткиПоВзаиморасчетамСПоставщиками.СчетУчета				= БухИтД.Счет;
					КонецЕсли;
					
				КонецЦикла;
			Иначе
				Валюта = Параметры.Рубли;
				Сумма = 0;
				РаспредСумма = 0;
				НеПринСумма = 0;
				Если БухИтДР.ПолучитьСчет(,БухИтД.Счет)+БухИтДР.ПолучитьСубконто(1,,БухИтД.Субконто(1))+БухИтДР.ПолучитьСубконто(2,,БухИтД.Субконто(2)) &gt; 2 Тогда
					ОтражениеВНУ = "Принимаются";
					БухИтДР.ВыбратьСубконто(3);
					Пока БухИтДР.ПолучитьСубконто(3) = 1 Цикл
						
						ВидЗадолженности = ?((БухИтДР.СКД("С")-БухИтДР.СКК("С")) &gt; 0, "Дебиторская", "Кредиторская");
						Сумма_ВР = ?((БухИтДР.СКД("С")-БухИтДР.СКК("С")) &gt; 0, БухИтДР.СКД("С") - БухИтДР.СКК("С"), БухИтДР.СКК("С") - БухИтДР.СКД("С"));
						
						Если (БухИтДР.Субконто(3) = Перечисление.ВидыРасчетовСПоставщиками.ПрочиеРаспределяемые) или
							(БухИтДР.Субконто(3) = Перечисление.ВидыРасчетовСПоставщиками.ОтложенныеРаспределяемые) Тогда
							РаспредСумма = РаспредСумма + Сумма_ВР;
						ИначеЕсли (БухИтДР.Субконто(3) = Перечисление.ВидыРасчетовСПоставщиками.РасходыНаПриобретениеОС) Тогда
								НеПринСумма = НеПринСумма + Сумма_ВР;
						Иначе
							Сумма = Сумма + Сумма_ВР;
						КонецЕсли;
					КонецЦикла;
				Иначе
					ОтражениеВНУ = "НеПринимаются";
					ВидЗадолженности = ?((БухИтД.СКД("С")-БухИтД.СКК("С")) &gt; 0, "Дебиторская", "Кредиторская");
					НеПринСумма = ?((БухИтД.СКД("С")-БухИтД.СКК("С")) &gt; 0, БухИтД.СКД("С") - БухИтД.СКК("С"), БухИтД.СКК("С") - БухИтД.СКД("С"));
				КонецЕсли;
				
				Если Сумма &lt;&gt; 0 Тогда
					ОтражениеВНУ = "Принимаются";
					ОстаткиПоВзаиморасчетамСПоставщиками.НоваяСтрока();
					ОстаткиПоВзаиморасчетамСПоставщиками.ВидЗадолженности		= ВидЗадолженности;
					ОстаткиПоВзаиморасчетамСПоставщиками.Контрагент 			= Контрагент;
					ОстаткиПоВзаиморасчетамСПоставщиками.ДоговорКонтрагента 	= ДоговорКонтрагента;
					ОстаткиПоВзаиморасчетамСПоставщиками.РасчетныйДокумент		= РасчетныйДокумент;
					ОстаткиПоВзаиморасчетамСПоставщиками.СуммаВзаиморасчетов 	= Сумма;
					ОстаткиПоВзаиморасчетамСПоставщиками.Валюта 				= Валюта;
					ОстаткиПоВзаиморасчетамСПоставщиками.СуммаВзаиморасчетовВал	= Сумма;
					ОстаткиПоВзаиморасчетамСПоставщиками.СчетУчета				= БухИтД.Счет;
				КонецЕсли;
				Если РаспредСумма &lt;&gt; 0 Тогда
					ОтражениеВНУ = "Распределяются";
					ОстаткиПоВзаиморасчетамСПоставщиками.НоваяСтрока();
					ОстаткиПоВзаиморасчетамСПоставщиками.ВидЗадолженности		= ВидЗадолженности;
					ОстаткиПоВзаиморасчетамСПоставщиками.Контрагент 			= Контрагент;
					ОстаткиПоВзаиморасчетамСПоставщиками.ДоговорКонтрагента 	= ДоговорКонтрагента;
					ОстаткиПоВзаиморасчетамСПоставщиками.РасчетныйДокумент		= РасчетныйДокумент;
					ОстаткиПоВзаиморасчетамСПоставщиками.СуммаВзаиморасчетов 	= РаспредСумма;
					ОстаткиПоВзаиморасчетамСПоставщиками.Валюта 				= Валюта;
					ОстаткиПоВзаиморасчетамСПоставщиками.СуммаВзаиморасчетовВал	= РаспредСумма;
					ОстаткиПоВзаиморасчетамСПоставщиками.СчетУчета				= БухИтД.Счет;
				КонецЕсли;
				Если НеПринСумма &lt;&gt; 0 Тогда
					ОтражениеВНУ = "НеПринимаются";
					ОстаткиПоВзаиморасчетамСПоставщиками.НоваяСтрока();
					ОстаткиПоВзаиморасчетамСПоставщиками.ВидЗадолженности		= ВидЗадолженности;
					ОстаткиПоВзаиморасчетамСПоставщиками.Контрагент 			= Контрагент;
					ОстаткиПоВзаиморасчетамСПоставщиками.ДоговорКонтрагента 	= ДоговорКонтрагента;
					ОстаткиПоВзаиморасчетамСПоставщиками.РасчетныйДокумент		= РасчетныйДокумент;
					ОстаткиПоВзаиморасчетамСПоставщиками.СуммаВзаиморасчетов 	= НеПринСумма;
					ОстаткиПоВзаиморасчетамСПоставщиками.Валюта 				= Валюта;
					ОстаткиПоВзаиморасчетамСПоставщиками.СуммаВзаиморасчетовВал	= НеПринСумма;
					ОстаткиПоВзаиморасчетамСПоставщиками.СчетУчета				= БухИтД.Счет;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
КонецЦикла;

РазделУчета = ОпределитьРазделУчета();
Если ПустоеЗначение(РазделУчета) = 0 Тогда
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
	ВходящиеДанные.Установить("ВходящиеОстатки", ОстаткиПоВзаиморасчетамСПоставщиками);
	ВходящиеДанные.Установить("Счет", Счет);
	ВходящиеДанные.Установить("Дата", ДатаЗапроса);
	ВходящиеДанные.Установить("РазделУчета", РазделУчета);
	
	Если Параметры.ДатаКонцаПериодаВыгрузки = Параметры.ДатаВводаОстатков Тогда
		ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
		ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
		ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
	Иначе
		Если ОстаткиНаКонец = 1 Тогда
			ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 0);
			ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
			ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
		Иначе
			ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
			ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 0);
			ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 0);
		КонецЕсли;
	КонецЕсли;
КонецЕсли;

ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ВводНачальныхОстатков");


	
				</Текст>
		</Алгоритм>
		<Алгоритм Имя="НУ_ОстаткиПоЗарплате" ИспользуетсяПриЗагрузке="false">
			<Текст>ОчиститьПараметры();

ОстаткиПоВзаиморасчетамCСотрудниками	= Параметры.ОстаткиПоВзаиморасчетамCСотрудниками;

ОстаткиНаКонец = Параметры.ПараметрыАлгоритмов.Получить("ОстаткиНаКонец");

Если ОстаткиНаКонец = 1 Тогда
	ДатаЗапроса = Параметры.ДатаКонцаПериодаВыгрузки;
Иначе
	ДатаЗапроса = Параметры.ДатаВводаОстатков - 1;
КонецЕсли;

БухИт70 = СоздатьОбъект("БухгалтерскиеИтоги");
БухИт70.ИспользоватьСубконто(ВидыСубконто.Сотрудники);
БухИт70.ВыполнитьЗапрос(,ДатаЗапроса,"70, ДФЛ.НУ, ДФЛ.РУ");

БухИт70.ВыбратьСубконто(1);
Пока БухИт70.ПолучитьСубконто(1) = 1 Цикл
	Сотрудник = БухИт70.Субконто(1);
	Сумма = 0;
	СуммаП = 0;
	СуммаН = 0;
	СуммаР = 0;
	Если БухИт70.ПолучитьСчет(, СчетПоКоду("70")) = 1 Тогда
		Если (БухИт70.СКД("С")-БухИт70.СКК("С")) &gt; 0 Тогда
			Сумма = БухИт70.СКД("С") - БухИт70.СКК("С");
			СуммаП = Сумма;
			ВидЗадолженности = "Дебиторская";
			Знак = -1;

		Иначе
			Параметры.ПараметрыАлгоритмов.Установить("СчетКт", СчетПоКоду("70"));
			Параметры.ПараметрыАлгоритмов.Установить("СчетДт", "");
			Сумма = БухИт70.СКК("С") - БухИт70.СКД("С");
			ВидЗадолженности = "Кредиторская";
			Знак = 1;
			
			Если (Сумма&lt;&gt;0) и (БухИт70.ПолучитьСчет(, СчетПоКоду("ДФЛ.НУ")) = 1) Тогда
				СуммаН = Мин(Сумма, Макс(0, БухИт70.СКК("С")));
			КонецЕсли;
			Если (Сумма&lt;&gt;0) и (БухИт70.ПолучитьСчет(, СчетПоКоду("ДФЛ.РУ")) = 1) Тогда
				СуммаР = Мин(Сумма - СуммаН, Макс(0, БухИт70.СКК("С")));
			КонецЕсли;
			СуммаП = Сумма - СуммаН - СуммаР;
		КонецЕсли;
	КонецЕсли;
	
	Если СуммаП &lt;&gt; 0 Тогда
		ОтражениеВНУ = "Принимаются";
		
		ОстаткиПоВзаиморасчетамCСотрудниками.НоваяСтрока();
		ОстаткиПоВзаиморасчетамCСотрудниками.ВидЗадолженности		= ВидЗадолженности;
		ОстаткиПоВзаиморасчетамCСотрудниками.Работник	 			= Сотрудник;
		ОстаткиПоВзаиморасчетамCСотрудниками.СуммаВзаиморасчетов 	= Знак*СуммаП;
		ОстаткиПоВзаиморасчетамCСотрудниками.ОтражениеВУСН		 	= ОтражениеВНУ;
		ОстаткиПоВзаиморасчетамCСотрудниками.СчетУчета			 	= "РасчетыСПерсоналомПоОплатеТруда";
		
	КонецЕсли;
	
	Если СуммаН &lt;&gt; 0 Тогда
		ОтражениеВНУ = "НеПринимаются";
		
		ОстаткиПоВзаиморасчетамCСотрудниками.НоваяСтрока();
		ОстаткиПоВзаиморасчетамCСотрудниками.ВидЗадолженности		= ВидЗадолженности;
		ОстаткиПоВзаиморасчетамCСотрудниками.Работник	 			= Сотрудник;
		ОстаткиПоВзаиморасчетамCСотрудниками.СуммаВзаиморасчетов 	= Знак*СуммаН;
		ОстаткиПоВзаиморасчетамCСотрудниками.ОтражениеВУСН		 	= ОтражениеВНУ;
		ОстаткиПоВзаиморасчетамCСотрудниками.СчетУчета			 	= "РасчетыСПерсоналомПоОплатеТруда";
		
	КонецЕсли;
	
	Если СуммаР &lt;&gt; 0 Тогда
		ОтражениеВНУ = "Распределяются";
		
		ОстаткиПоВзаиморасчетамCСотрудниками.НоваяСтрока();
		ОстаткиПоВзаиморасчетамCСотрудниками.ВидЗадолженности		= ВидЗадолженности;
		ОстаткиПоВзаиморасчетамCСотрудниками.Работник	 			= Сотрудник;
		ОстаткиПоВзаиморасчетамCСотрудниками.СуммаВзаиморасчетов 	= Знак*СуммаР;
		ОстаткиПоВзаиморасчетамCСотрудниками.ОтражениеВУСН		 	= ОтражениеВНУ;
		ОстаткиПоВзаиморасчетамCСотрудниками.СчетУчета			 	= "РасчетыСПерсоналомПоОплатеТруда";
		
	КонецЕсли;
КонецЦикла;

РазделУчета = ОпределитьРазделУчета();
Если ПустоеЗначение(РазделУчета) = 0 Тогда
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
	ВходящиеДанные.Установить("ВходящиеОстатки", ОстаткиПоВзаиморасчетамCСотрудниками);
	ВходящиеДанные.Установить("Счет", "70");
	ВходящиеДанные.Установить("Дата", ДатаЗапроса);
	ВходящиеДанные.Установить("РазделУчета", РазделУчета);
	
	Если Параметры.ДатаКонцаПериодаВыгрузки = Параметры.ДатаВводаОстатков Тогда
		ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
		ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
		ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
	Иначе
		Если ОстаткиНаКонец = 1 Тогда
			ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 0);
			ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
			ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
		Иначе
			ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
			ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 0);
			ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 0);
		КонецЕсли;
	КонецЕсли;
КонецЕсли;

ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ВводНачальныхОстатков");

</Текст>
		</Алгоритм>
		<Алгоритм Имя="НУ_ОстаткиПоНалогам" ИспользуетсяПриЗагрузке="false">
			<Текст>ОчиститьПараметры();
ОстаткиНаКонец = Параметры.ПараметрыАлгоритмов.Получить("ОстаткиНаКонец");
Если ОстаткиНаКонец = 1 Тогда
	ДатаЗапроса = Параметры.ДатаКонцаПериодаВыгрузки;
Иначе
	ДатаЗапроса = Параметры.ДатаВводаОстатков-1;
КонецЕсли;
Счет = Параметры.ПараметрыАлгоритмов.Получить("ТекущийСчет");

ОстаткиПоВзаиморасчетамПоНалогам = Параметры.ОстаткиПоВзаиморасчетамПоНалогам;
ОстаткиПоВзаиморасчетамПоНалогам.УдалитьСтроки();
ВременнаяТаблицаРасчетов		 = Параметры.ВременнаяТаблицаРасчетов;
ВременнаяТаблицаРасчетов.УдалитьСтроки();

БухИтДФЛ = СоздатьОбъект("БухгалтерскиеИтоги");
БухИтДФЛ.ВыполнитьЗапрос(,ДатаЗапроса,"ДФЛ.НФ, ДФЛ.РФ, ДФЛ.НД, ДФЛ.РД");
	
Если Счет = СчетПоКоду("68.1") Тогда
	
	БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
	БухИт.ВключатьСубсчета(-1);
	БухИт.ВыполнитьЗапрос(,ДатаЗапроса, Счет);
	
	Сумма 	= 0;
	СуммаП 	= 0;
	СуммаН 	= 0;
	СуммаР 	= 0;
	Если БухИт.ПолучитьСчет(, СчетПоКоду("68.1")) = 1 Тогда
		Счет = СчетПоКоду("68.1");
		Если (БухИт.СКД("С")-БухИт.СКК("С")) &gt; 0 Тогда
			Сумма	= БухИт.СКД("С") - БухИт.СКК("С");
			СуммаП	= Сумма;
			ВидЗадолженности = "Дебиторская";
		Иначе
			Сумма = БухИт.СКК("С") - БухИт.СКД("С");
			Если (Сумма&lt;&gt;0) и (БухИтДФЛ.ПолучитьСчет(, СчетПоКоду("ДФЛ.НД")) = 1) Тогда
				СуммаН = Мин(Сумма, Макс(0, БухИтДФЛ.СКК("С")));
			КонецЕсли;
			Если (Сумма&lt;&gt;0) и (БухИтДФЛ.ПолучитьСчет(, СчетПоКоду("ДФЛ.РД")) = 1) Тогда
				СуммаР = Мин(Сумма - СуммаН, Макс(0, БухИтДФЛ.СКК("С")));
			КонецЕсли;
			СуммаП = Сумма - СуммаН - СуммаР;
			ВидЗадолженности = "Кредиторская";
		КонецЕсли;
	КонецЕсли;
	
	Если СуммаП &lt;&gt; 0 Тогда
		
		ОтражениеВНУ = "Принимаются";
		ОстаткиПоВзаиморасчетамПоНалогам.НоваяСтрока();
		ОстаткиПоВзаиморасчетамПоНалогам.ВидЗадолженности		= ВидЗадолженности;
		ОстаткиПоВзаиморасчетамПоНалогам.СчетРасчетовПоНалогу	= Счет;
		ОстаткиПоВзаиморасчетамПоНалогам.СуммаВзаиморасчетов 	= Число(СуммаП);
		ОстаткиПоВзаиморасчетамПоНалогам.отражениеВУСН		 	= ОтражениеВНУ;
		
		Если ОстаткиПоВзаиморасчетамПоНалогам.ВидЗадолженности = "Кредиторская" Тогда
			
			ВременнаяТаблицаРасчетов.НоваяСтрока();
			ВременнаяТаблицаРасчетов.ТабличнаяЧасть 					= "ВзаиморвасчетыПоНалогам";
			ВременнаяТаблицаРасчетов.Контрагент 						= "";
			ВременнаяТаблицаРасчетов.ДоговорКонтрагента					= ОстаткиПоВзаиморасчетамПоНалогам.СчетРасчетовПоНалогу;
			ВременнаяТаблицаРасчетов.РасчетныйДокумент					= "";
			ВременнаяТаблицаРасчетов.ОтражениеВНУ						= ОтражениеВНУ ;
			ВременнаяТаблицаРасчетов.Валюта								= Параметры.Рубли;
			ВременнаяТаблицаРасчетов.Сумма                              = Число(СуммаП);
			ВременнаяТаблицаРасчетов.СуммаВзаиморасчетов                = Число(СуммаП);
			ВременнаяТаблицаРасчетов.НДС								= 0;
			
		КонецЕсли;
	КонецЕсли;
	
	Если СуммаН &lt;&gt; 0 Тогда
		ОтражениеВНУ = "НеПринимаются";
		
		ОстаткиПоВзаиморасчетамПоНалогам.НоваяСтрока();
		ОстаткиПоВзаиморасчетамПоНалогам.ВидЗадолженности		= ВидЗадолженности;
		ОстаткиПоВзаиморасчетамПоНалогам.СчетРасчетовПоНалогу	= Счет;
		ОстаткиПоВзаиморасчетамПоНалогам.СуммаВзаиморасчетов 	= Число(СуммаП);
		ОстаткиПоВзаиморасчетамПоНалогам.отражениеВУСН		 	= ОтражениеВНУ;
		
		Если ОстаткиПоВзаиморасчетамПоНалогам.ВидЗадолженности = "Кредиторская" Тогда
			
			ВременнаяТаблицаРасчетов.НоваяСтрока();
			ВременнаяТаблицаРасчетов.ТабличнаяЧасть 					= "ВзаиморвасчетыПоНалогам";
			ВременнаяТаблицаРасчетов.Контрагент 						= "";
			ВременнаяТаблицаРасчетов.ДоговорКонтрагента					= ОстаткиПоВзаиморасчетамПоНалогам.СчетРасчетовПоНалогу;
			ВременнаяТаблицаРасчетов.РасчетныйДокумент					= "";
			ВременнаяТаблицаРасчетов.ОтражениеВНУ						= ОтражениеВНУ ;
			ВременнаяТаблицаРасчетов.Валюта								= Параметры.Рубли;
			ВременнаяТаблицаРасчетов.Сумма                              = Число(СуммаН);
			ВременнаяТаблицаРасчетов.СуммаВзаиморасчетов                = Число(СуммаН);
			ВременнаяТаблицаРасчетов.НДС								= 0;
			
		КонецЕсли;
	КонецЕсли;
	
	Если СуммаР &lt;&gt; 0 Тогда
		ОтражениеВНУ = "Распределяются";
		
		ОстаткиПоВзаиморасчетамПоНалогам.НоваяСтрока();
		ОстаткиПоВзаиморасчетамПоНалогам.ВидЗадолженности		= ВидЗадолженности;
		ОстаткиПоВзаиморасчетамПоНалогам.СчетРасчетовПоНалогу	= Счет;
		ОстаткиПоВзаиморасчетамПоНалогам.СуммаВзаиморасчетов 	= Число(СуммаП);
		ОстаткиПоВзаиморасчетамПоНалогам.отражениеВУСН		 	= ОтражениеВНУ;
		
		Если ОстаткиПоВзаиморасчетамПоНалогам.ВидЗадолженности = "Кредиторская" Тогда
			
			ВременнаяТаблицаРасчетов.НоваяСтрока();
			ВременнаяТаблицаРасчетов.ТабличнаяЧасть 					= "ВзаиморвасчетыПоНалогам";
			ВременнаяТаблицаРасчетов.Контрагент 						= "";
			ВременнаяТаблицаРасчетов.ДоговорКонтрагента					= ОстаткиПоВзаиморасчетамПоНалогам.СчетРасчетовПоНалогу;
			ВременнаяТаблицаРасчетов.РасчетныйДокумент					= "";
			ВременнаяТаблицаРасчетов.ОтражениеВНУ						= ОтражениеВНУ ;
			ВременнаяТаблицаРасчетов.Валюта								= Параметры.Рубли;
			ВременнаяТаблицаРасчетов.Сумма                              = Число(СуммаР);
			ВременнаяТаблицаРасчетов.СуммаВзаиморасчетов                = Число(СуммаР);
			ВременнаяТаблицаРасчетов.НДС								= 0;
			
		КонецЕсли;
	КонецЕсли;
КонецЕсли;

Если (Счет = СчетПоКоду("69.11"))
	ИЛИ (Счет = СчетПоКоду("69.21"))
	ИЛИ (Счет = СчетПоКоду("69.22")) Тогда
	
	БухИт69 = СоздатьОбъект("БухгалтерскиеИтоги");
	БухИт69.ВыполнитьЗапрос(,ДатаЗапроса, Счет);
	
	Сумма = 0;
	СуммаП = 0;
	СуммаН = 0;
	СуммаР = 0;
	
	Сумма = БухИт69.СККРС("С");
	Если (БухИтДФЛ.ПолучитьСчет(, СчетПоКоду("ДФЛ.НФ")) = 1) Тогда
		СуммаН = Мин(Сумма, Макс(0, БухИтДФЛ.СКК("С")));
		КН = Макс(0, Мин(1, ?(Сумма = 0, 0 ,СуммаН/Сумма)));
	КонецЕсли;
	Если (БухИтДФЛ.ПолучитьСчет(, СчетПоКоду("ДФЛ.РФ")) = 1) Тогда
		СуммаР = Мин(Сумма - СуммаН, Макс(0, БухИтДФЛ.СКК("С")));
		КР = Макс(0, Мин(1, ?(Сумма = 0, 0 ,СуммаР/Сумма)));
	КонецЕсли;
	
	БухИт69.ВыбратьСчета();
	Пока БухИт69.ПолучитьСчет() = 1 Цикл
		Счет = БухИт69.Счет;
		Если БухИт69.СКД("С") &gt; 0 Тогда
			Сумма = БухИт69.СКД("С");
			СуммаП = Сумма;
			СуммаН = 0;
			СуммаР = 0;
			ВидЗадолженности = "Дебиторская";
		Иначе
			Сумма = БухИт69.СКК("С");
			СуммаН = Окр(КН * Сумма, 2, 1);
			СуммаР = Окр(КР * Сумма, 2, 1);
			СуммаП = Сумма - СуммаН - СуммаР;
			ВидЗадолженности = "Кредиторская";
		КонецЕсли;
		
		Если СуммаП &lt;&gt; 0 Тогда
			
			ОтражениеВНУ = "Принимаются";
			ОстаткиПоВзаиморасчетамПоНалогам.НоваяСтрока();
			ОстаткиПоВзаиморасчетамПоНалогам.ВидЗадолженности		= ВидЗадолженности;
			ОстаткиПоВзаиморасчетамПоНалогам.СчетРасчетовПоНалогу	= Счет;
			ОстаткиПоВзаиморасчетамПоНалогам.СуммаВзаиморасчетов 	= Число(СуммаП);
			ОстаткиПоВзаиморасчетамПоНалогам.отражениеВУСН		 	= ОтражениеВНУ;
			
			Если ОстаткиПоВзаиморасчетамПоНалогам.ВидЗадолженности = "Кредиторская" Тогда
				
				ВременнаяТаблицаРасчетов.НоваяСтрока();
				ВременнаяТаблицаРасчетов.ТабличнаяЧасть 					= "ВзаиморвасчетыПоНалогам";
				ВременнаяТаблицаРасчетов.Контрагент 						= "";
				ВременнаяТаблицаРасчетов.ДоговорКонтрагента					= ОстаткиПоВзаиморасчетамПоНалогам.СчетРасчетовПоНалогу;
				ВременнаяТаблицаРасчетов.РасчетныйДокумент					= "";
				ВременнаяТаблицаРасчетов.ОтражениеВНУ						= ОтражениеВНУ ;
				ВременнаяТаблицаРасчетов.Валюта								= Параметры.Рубли;
				ВременнаяТаблицаРасчетов.Сумма                              = Число(СуммаП);
				ВременнаяТаблицаРасчетов.СуммаВзаиморасчетов                = Число(СуммаП);
				ВременнаяТаблицаРасчетов.НДС								= 0;
				
			КонецЕсли;
		КонецЕсли;
		
		Если СуммаН &lt;&gt; 0 Тогда
			ОтражениеВНУ = "НеПринимаются";
			
			ОстаткиПоВзаиморасчетамПоНалогам.НоваяСтрока();
			ОстаткиПоВзаиморасчетамПоНалогам.ВидЗадолженности		= ВидЗадолженности;
			ОстаткиПоВзаиморасчетамПоНалогам.СчетРасчетовПоНалогу	= Счет;
			ОстаткиПоВзаиморасчетамПоНалогам.СуммаВзаиморасчетов 	= Число(СуммаП);
			ОстаткиПоВзаиморасчетамПоНалогам.отражениеВУСН		 	= ОтражениеВНУ;
			
			Если ОстаткиПоВзаиморасчетамПоНалогам.ВидЗадолженности = "Кредиторская" Тогда
				
				ВременнаяТаблицаРасчетов.НоваяСтрока();
				ВременнаяТаблицаРасчетов.ТабличнаяЧасть 					= "ВзаиморвасчетыПоНалогам";
				ВременнаяТаблицаРасчетов.Контрагент 						= "";
				ВременнаяТаблицаРасчетов.ДоговорКонтрагента					= ОстаткиПоВзаиморасчетамПоНалогам.СчетРасчетовПоНалогу;
				ВременнаяТаблицаРасчетов.РасчетныйДокумент					= "";
				ВременнаяТаблицаРасчетов.ОтражениеВНУ						= ОтражениеВНУ ;
				ВременнаяТаблицаРасчетов.Валюта								= Параметры.Рубли;
				ВременнаяТаблицаРасчетов.Сумма                              = Число(СуммаН);
				ВременнаяТаблицаРасчетов.СуммаВзаиморасчетов                = Число(СуммаН);
				ВременнаяТаблицаРасчетов.НДС								= 0;
				
			КонецЕсли;
		КонецЕсли;
		
		Если СуммаР &lt;&gt; 0 Тогда
			ОтражениеВНУ = "Распределяются";
			
			ОстаткиПоВзаиморасчетамПоНалогам.НоваяСтрока();
			ОстаткиПоВзаиморасчетамПоНалогам.ВидЗадолженности		= ВидЗадолженности;
			ОстаткиПоВзаиморасчетамПоНалогам.СчетРасчетовПоНалогу	= Счет;
			ОстаткиПоВзаиморасчетамПоНалогам.СуммаВзаиморасчетов 	= Число(СуммаП);
			ОстаткиПоВзаиморасчетамПоНалогам.отражениеВУСН		 	= ОтражениеВНУ;
			
			Если ОстаткиПоВзаиморасчетамПоНалогам.ВидЗадолженности = "Кредиторская" Тогда
				
				ВременнаяТаблицаРасчетов.НоваяСтрока();
				ВременнаяТаблицаРасчетов.ТабличнаяЧасть 					= "ВзаиморвасчетыПоНалогам";
				ВременнаяТаблицаРасчетов.Контрагент 						= "";
				ВременнаяТаблицаРасчетов.ДоговорКонтрагента					= ОстаткиПоВзаиморасчетамПоНалогам.СчетРасчетовПоНалогу;
				ВременнаяТаблицаРасчетов.РасчетныйДокумент					= "";
				ВременнаяТаблицаРасчетов.ОтражениеВНУ						= ОтражениеВНУ ;
				ВременнаяТаблицаРасчетов.Валюта								= Параметры.Рубли;
				ВременнаяТаблицаРасчетов.Сумма                              = Число(СуммаР);
				ВременнаяТаблицаРасчетов.СуммаВзаиморасчетов                = Число(СуммаР);
				ВременнаяТаблицаРасчетов.НДС								= 0;
				
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
КонецЕсли;

</Текст>
		</Алгоритм>
		<Алгоритм Имя="НУ_ОстаткиПоРБП" ИспользуетсяПриЗагрузке="false">
			<Текст>ОчиститьПараметры();
ЗаполнитьТаблицуНДС();
Счет = Параметры.ПараметрыАлгоритмов.Получить("ТекущийСчет");
ОстаткиНаКонец = Параметры.ПараметрыАлгоритмов.Получить("ОстаткиНаКонец");

Если ОстаткиНаКонец = 1 Тогда
	ДатаЗапроса = Параметры.ДатаКонцаПериодаВыгрузки;
Иначе
	ДатаЗапроса = Параметры.ДатаВводаОстатков-1;
КонецЕсли;

РасходыРБП = Параметры.РасходыРБП;
РасходыРБП.УдалитьСтроки();
СтрокаТаблицыЗначений = Параметры.СтрокаТаблицыЗначений;

БухИтД = СоздатьОбъект("БухгалтерскиеИтоги");
БухИтД.ИспользоватьСубконто(ВидыСубконто.РасходыБудущихПериодов);
БухИтД.ВыполнитьЗапрос(, ДатаЗапроса, Счет);

БухИтДР = СоздатьОбъект("БухгалтерскиеИтоги");
БухИтДР.ИспользоватьСубконто(ВидыСубконто.РасходыБудущихПериодов);
БухИтДР.ИспользоватьСубконто(ВидыСубконто.Договоры);
БухИтДР.ВыполнитьЗапрос(, ДатаЗапроса, Счет);

БухИтД.ВыбратьСубконто(1);
Пока БухИтД.ПолучитьСубконто(1) = 1 Цикл
	
	Если БухИтДР.ПолучитьСубконто(1,, БухИтД.Субконто(1)) = 1 Тогда
		БухИтДР.ВыбратьСубконто(2);
		Пока БухИтДР.ПолучитьСубконто(2) = 1 Цикл
			ОтражениеВНУ = "Принимаются";
			Если ПустоеЗначение(БухИтД.Субконто(1)) = 0 Тогда
				Если БухИтДР.Субконто(1).Распределять = 1 Тогда
					ОтражениеВНУ = "Распределяются";
				КонецЕсли;
			КонецЕсли;
			РБП = БухИтД.Субконто(1);
			Если ПустоеЗначение(БухИтДР.Субконто(2)) = 0 Тогда
				Контрагент = БухИтДР.Субконто(2).Владелец;
			Иначе
				Контрагент = ПолучитьПустоеЗначение(ВидыСубконто.Контрагенты);
			КонецЕсли;
			ДоговорКонтрагента = БухИтДР.Субконто(2);
			Представление1 = ?(ПустоеЗначение(БухИтДР.Субконто(2)) = 1, "", Строка(БухИтДР.Субконто(2).Владелец.Код));
			Представление2 = ?(ПустоеЗначение(БухИтДР.Субконто(2)) = 1, "", Строка(БухИтДР.Субконто(2).Код));
			Представление3 = Строка(Перечисление.ВидыРасчетовСПоставщиками.ОтложенныеРасходы);
			Если ПустоеЗначение(БухИтД.Субконто(1)) = 0 Тогда
				Если БухИтДР.Субконто(1).Распределять = 1 Тогда
					Представление3 = Строка(Перечисление.ВидыРасчетовСПоставщиками.ОтложенныеРаспределяемые);
				КонецЕсли;
			КонецЕсли;
			СтрокаКлюча = Представление1 + ";" + Представление2 + ";" + Представление3;
			НомерСтроки = "";
			Если БухИтДР.ПолучитьСчет(, СчетПоКоду("97.2")) = 1 Тогда
				Сумма = БухИтДР.СКД("С");
				Если БухИтДР.ПолучитьСчет(, СчетПоКоду("97.3")) = 1 Тогда
				    Сумма = Сумма + БухИтДР.СКД("С");
				КонецЕсли;
				//Определение входящего НДС
				Если Параметры.ТаблицаНДС.НайтиЗначение(СтрокаКлюча, НомерСтроки, "Ключ") = 1 Тогда
					Параметры.ТаблицаНДС.ПолучитьСтрокуПоНомеру(НомерСтроки);
					НДС = ?(Параметры.ТаблицаНДС.Сумма = 0, 0, Сумма * Параметры.ТаблицаНДС.НДС / Параметры.ТаблицаНДС.Сумма); 
				Иначе
					НДС = 0;
				КонецЕсли;
				Валюта = Параметры.Рубли;
				Если (ОтражениеВНУ &lt;&gt; "НеПринимаются") и (ОтражениеВНУ &lt;&gt; "") Тогда
					РасходыРБП.НоваяСтрока();
					РасходыРБП.РБП			 			= РБП;
					РасходыРБП.Контрагент 				= Контрагент;
					РасходыРБП.ДоговорКонтрагента 		= ДоговорКонтрагента;
					РасходыРБП.РасчетныйДокумент 		= ДоговорКонтрагента; 
					РасходыРБП.СтатусыОплатыРасходовУСН = "НеСписано";
					РасходыРБП.ОтражениеВУСН 			= ОтражениеВНУ;
					РасходыРБП.Валюта 					= Валюта;
					РасходыРБП.Сумма 					= Сумма;
					РасходыРБП.НДС 						= НДС;
					Если Сумма  &gt; 0 Тогда
						СтрокаТаблицыЗначений.УдалитьСтроки();
						СтрокаТаблицыЗначений.НоваяСтрока();
						СтрокаТаблицыЗначений.РБП		 				= РБП;
						СтрокаТаблицыЗначений.Контрагент 				= Контрагент;
						СтрокаТаблицыЗначений.ДоговорКонтрагента 		= ДоговорКонтрагента;
						СтрокаТаблицыЗначений.РасчетныйДокумент 		= ДоговорКонтрагента; 
						СтрокаТаблицыЗначений.СтатусыОплатыРасходовУСН 	= "НеСписано";
						СтрокаТаблицыЗначений.ОтражениеВУСН 			= ОтражениеВНУ;
						СтрокаТаблицыЗначений.Валюта 					= Валюта;
						СтрокаТаблицыЗначений.Сумма 					= Сумма;
						СтрокаТаблицыЗначений.НДС 						= НДС;
						УстановитьСтатусОплатыРБП();
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			Если БухИтДР.ПолучитьСчет(, СчетПоКоду("97.4")) = 1 Тогда
				БухИтДР.ВыбратьВалюты();
				Пока БухИтДР.ПолучитьВалюту() = 1 Цикл
					Валюта = БухИтДР.Валюта;
					Сумма = БухИтДР.СКД("С");
					СуммаВал = БухИтДР.СКД("В");
					//Определение входящего НДС
					Если Параметры.ТаблицаНДС.НайтиЗначение(СтрокаКлюча, НомерСтроки, "Ключ") = 1 Тогда
						Параметры.ТаблицаНДС.ПолучитьСтрокуПоНомеру(НомерСтроки);
						НДС = ?(Параметры.ТаблицаНДС.Сумма = 0, 0, Сумма * Параметры.ТаблицаНДС.НДС / Параметры.ТаблицаНДС.Сумма); 
						НДСВал = ?((СуммаВал = 0) ИЛИ (Сумма = 0), 0, НДС/(Сумма/СуммаВал));						
					Иначе
						НДС = 0;
						НДСВал = 0;
					КонецЕсли;
					Если (ОтражениеВНУ &lt;&gt; "НеПринимаются") и (ОтражениеВНУ &lt;&gt; "") Тогда
						РасходыРБП.НоваяСтрока();
						РасходыРБП.РБП			 			= РБП;
						РасходыРБП.Контрагент 				= Контрагент;
						РасходыРБП.ДоговорКонтрагента 		= ДоговорКонтрагента;
						РасходыРБП.РасчетныйДокумент 		= ДоговорКонтрагента; 
						РасходыРБП.СтатусыОплатыРасходовУСН = "НеСписано";
						РасходыРБП.ОтражениеВУСН 			= ОтражениеВНУ;
						РасходыРБП.Валюта 					= Валюта;
						РасходыРБП.Сумма 					= Сумма;
						РасходыРБП.НДС 						= НДС;
						РасходыРБП.СуммаВал					= СуммаВал;
						РасходыРБП.НДСВал 					= НДСВал;
						Если Сумма  &gt; 0 Тогда
							СтрокаТаблицыЗначений.УдалитьСтроки();
							СтрокаТаблицыЗначений.НоваяСтрока();
							СтрокаТаблицыЗначений.РБП		 				= РБП;
							СтрокаТаблицыЗначений.Контрагент 				= Контрагент;
							СтрокаТаблицыЗначений.ДоговорКонтрагента 		= ДоговорКонтрагента;
							СтрокаТаблицыЗначений.РасчетныйДокумент 		= ДоговорКонтрагента; 
							СтрокаТаблицыЗначений.СтатусыОплатыРасходовУСН 	= "НеСписано";
							СтрокаТаблицыЗначений.ОтражениеВУСН 			= ОтражениеВНУ;
							СтрокаТаблицыЗначений.Валюта 					= Валюта;
							СтрокаТаблицыЗначений.Сумма 					= Сумма;
							СтрокаТаблицыЗначений.НДС 						= НДС;
							СтрокаТаблицыЗначений.СуммаВал					= СуммаВал;
							СтрокаТаблицыЗначений.НДСВал 					= НДСВал;
							УстановитьСтатусОплатыРБП();
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;	
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецЦикла;
</Текст>
		</Алгоритм>
		<Алгоритм Имя="НУ_ОстаткиПоТМЦ" ИспользуетсяПриЗагрузке="false">
			<Текст>// Выгружает остатки по любому счету. Счет записывается в таблицу 
// проводок, как объект типа "Основной.Счет" (потом он сконвертируется
// в соответствии с настройкой конвертации значений счетов).

// Остатки по субконто на которых ведется только количественный учет
// выгружаются, как отдельные проводки.
ЗаполнитьТаблицуНДС();
ОстаткиНаКонец = Параметры.ПараметрыАлгоритмов.Получить("ОстаткиНаКонец");

Счет = Параметры.ПараметрыАлгоритмов.Получить("ТекущийСчет");

Валюты = СоздатьОбъект("СписокЗначений");
БухИт = СоздатьОбъект("БухгалтерскиеИтоги");

БухИт.ИспользоватьСубконто();
БухИт.ИспользоватьСубконто();
БухИт.ИспользоватьСубконто();

Параметры.ПараметрыАлгоритмов.Установить("БухИт", БухИт);

БухИт.ВключатьСубсчета(, -1);

Если ОстаткиНаКонец = 1 Тогда
	БухИт.ВыполнитьЗапрос(, Параметры.ДатаКонцаПериодаВыгрузки, Счет);
Иначе
	БухИт.ВыполнитьЗапрос(, Параметры.ДатаВводаОстатков-1, Счет);
КонецЕсли;

БухИт.ВыбратьСчета();
Пока БухИт.ПолучитьСчет() = 1 Цикл
	Валюты.УдалитьВсе();
	
	Если БухИт.Счет.Валютный = 1 Тогда
		БухИт.ВыбратьВалюты();
		Пока БухИт.ПолучитьВалюту() = 1 Цикл
			Валюты.ДобавитьЗначение(БухИт.Валюта);
		КонецЦикла;
		
	Иначе
		Валюты.ДобавитьЗначение(ПолучитьПустоеЗначение("Справочник.Валюты"));
	КонецЕсли;
	
	Параметры.ПараметрыАлгоритмов.Установить("ТолькоСумма", 0);
	
	Для НомерВалюты = 1 по Валюты.РазмерСписка() Цикл
		Если БухИт.Счет.Валютный = 1 Тогда
			БухИт.ПолучитьВалюту(, Валюты.ПолучитьЗначение(НомерВалюты));
		КонецЕсли;
		
		СуммовойУчет1 = ?(БухИт.Счет.КоличествоСубконто() &gt; 0, ?(БухИт.Счет.ТолькоОбороты(1) = 1, 0, БухИт.Счет.УчетПоСумме(1)), 0);
		СуммовойУчет2 = ?(БухИт.Счет.КоличествоСубконто() &gt; 1, ?(БухИт.Счет.ТолькоОбороты(2) = 1, 0, БухИт.Счет.УчетПоСумме(2)), 0);
		СуммовойУчет3 = ?(БухИт.Счет.КоличествоСубконто() &gt; 2, ?(БухИт.Счет.ТолькоОбороты(3) = 1, 0, БухИт.Счет.УчетПоСумме(3)), 0);
		
		КоличествоУровней = 0;
		КоличествоУровней = КоличествоУровней + ?(БухИт.Счет.КоличествоСубконто() &gt; 0, ?(БухИт.Счет.ТолькоОбороты(1) = 1, 0, 1), 0);
		КоличествоУровней = КоличествоУровней + ?(БухИт.Счет.КоличествоСубконто() &gt; 1, ?(БухИт.Счет.ТолькоОбороты(2) = 1, 0, 1), 0);
		КоличествоУровней = КоличествоУровней + ?(БухИт.Счет.КоличествоСубконто() &gt; 2, ?(БухИт.Счет.ТолькоОбороты(3) = 1, 0, 1), 0);
		Параметры.ПараметрыАлгоритмов.Установить("КоличествоУровней", КоличествоУровней);
		
		Если КоличествоУровней = 0 Тогда
			Параметры.ПараметрыАлгоритмов.Установить("ТекНомерСубконто", 0);
			НУ_ПолучитьОстаткиПоСчету();
			НУ_ДобавитьЗаписьПоТМЦ();
			
		ИначеЕсли КоличествоУровней &gt; 0 Тогда
			БухИт.ВыбратьСубконто(1);
			Пока БухИт.ПолучитьСубконто(1) = 1 Цикл
				Если ТипЗначенияСтр(БухИт.Субконто(1)) = "Справочник" Тогда
					Если БухИт.Субконто(1).ЭтоГруппа() = 1 Тогда
						Продолжить;
					КонецЕсли;
				КонецЕсли;
				
				Если ((СуммовойУчет1 = 1) и (СуммовойУчет2 = 0)) или (КоличествоУровней = 1) Тогда
					Параметры.ПараметрыАлгоритмов.Установить("ТекНомерСубконто", 1);
					НУ_ПолучитьОстаткиПоСчету();
					НУ_ДобавитьЗаписьПоТМЦ();
				КонецЕсли;
				
				Если КоличествоУровней &gt; 1 Тогда
					БухИт.ВыбратьСубконто(2);
					Пока БухИт.ПолучитьСубконто(2) = 1 Цикл
						Если ТипЗначенияСтр(БухИт.Субконто(2)) = "Справочник" Тогда
							Если БухИт.Субконто(2).ЭтоГруппа() = 1 Тогда
								Продолжить;
							КонецЕсли;
						КонецЕсли;
						
						Если ((СуммовойУчет2 = 1) и (СуммовойУчет3 = 0)) или (КоличествоУровней = 2) Тогда
							Параметры.ПараметрыАлгоритмов.Установить("ТекНомерСубконто", 2);
							НУ_ПолучитьОстаткиПоСчету();
							НУ_ДобавитьЗаписьПоТМЦ();
						КонецЕсли;
						
						Если КоличествоУровней &gt; 2 Тогда
							БухИт.ВыбратьСубконто(3);
							Пока БухИт.ПолучитьСубконто(3) = 1 Цикл
								Если ТипЗначенияСтр(БухИт.Субконто(3)) = "Справочник" Тогда
									Если БухИт.Субконто(3).ЭтоГруппа() = 1 Тогда
										Продолжить;
									КонецЕсли;
								КонецЕсли;
								
								Параметры.ПараметрыАлгоритмов.Установить("ТекНомерСубконто", 3);
								НУ_ПолучитьОстаткиПоСчету();
								НУ_ДобавитьЗаписьПоТМЦ();
							КонецЦикла;
						КонецЕсли;	
					КонецЦикла;
				КонецЕсли;	
			КонецЦикла;
		КонецЕсли;	
	КонецЦикла;
КонецЦикла;

		
</Текст>
		</Алгоритм>
		<Алгоритм Имя="НУ_ОстаткиПрочихРасходов" ИспользуетсяПриЗагрузке="false">
			<Текст>Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	ВременнаяТаблицаРасчетов = Параметры.ВременнаяТаблицаРасчетовКон;
Иначе
	ВременнаяТаблицаРасчетов = Параметры.ВременнаяТаблицаРасчетовНач;
КонецЕсли;
РасходыУслуги			 = Параметры.РасходыУслуги;

ВременнаяТаблицаРасчетов.ВыбратьСтроки();
Пока ВременнаяТаблицаРасчетов.получитьСтроку() = 1 Цикл
	Если ВременнаяТаблицаРасчетов.Сумма &lt; 0 Тогда
		Продолжить;
	КонецЕсли;
	
	Если ВременнаяТаблицаРасчетов.ОтражениеВНУ = "НеПринимаются" Тогда
		Продолжить;
	КонецЕсли;
	
	Если ВременнаяТаблицаРасчетов.ТабличнаяЧасть 		= "ВзаиморасчетыСПоставщиками" Тогда
		//Расходы
		РасходыУслуги.НоваяСтрока();
		РасходыУслуги.Контрагент 				= ВременнаяТаблицаРасчетов.Контрагент;
		РасходыУслуги.ДоговорКонтрагента 		= ВременнаяТаблицаРасчетов.ДоговорКонтрагента;
		РасходыУслуги.РасчетныйДокумент 		= ВременнаяТаблицаРасчетов.РасчетныйДокумент; 
		РасходыУслуги.ОтражениеВУСН 			= ВременнаяТаблицаРасчетов.ОтражениеВНУ;
		РасходыУслуги.Валюта 					= ВременнаяТаблицаРасчетов.Валюта;
		РасходыУслуги.Сумма 					= ВременнаяТаблицаРасчетов.Сумма;
		РасходыУслуги.НДС 						= ВременнаяТаблицаРасчетов.НДС;
		
	КонецЕсли;
	
КонецЦикла;

РазделУчета = "ПрочиеРасходыНалоговогоУчетаУСНиИП";
ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("ВходящиеОстатки", РасходыУслуги);
ВходящиеДанные.Установить("Счет", "");

Если Параметры.ДатаКонцаПериодаВыгрузки = Параметры.ДатаВводаОстатков Тогда
	ДатаЗапроса = Параметры.ДатаВводаОстатков - 1;
Иначе
	ДатаЗапроса = Параметры.ДатаКонцаПериодаВыгрузки;
КонецЕсли;

ВходящиеДанные.Установить("Дата", ДатаЗапроса);
ВходящиеДанные.Установить("РазделУчета", РазделУчета);	
ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
Параметры.ИмяТаблицы = "УслугиУСН";

ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ВводНачальныхОстатков");
</Текст>
		</Алгоритм>
		<Алгоритм Имя="НУ_ПолучитьОстаткиПоСчету" ИспользуетсяПриЗагрузке="false">
			<Текст>БухИт = Параметры.ПараметрыАлгоритмов.Получить("БухИт");

ОстатокДтС = 0;
ОстатокДтВ = 0;
ОстатокДтК = 0;
ОстатокКтС = 0;
ОстатокКтВ = 0;
ОстатокКтК = 0;

ОстатокДтС = БухИт.СКД(1);

Если БухИт.Счет.Валютный = 1 Тогда
	ОстатокДтВ = БухИт.СКД(2);
КонецЕсли;

Если БухИт.Счет.Количественный = 1 Тогда
	ОстатокДтК = БухИт.СКД(3);
КонецЕсли;
	
ОстатокКтС = БухИт.СКК(1);

Если БухИт.Счет.Валютный = 1 Тогда
	ОстатокКтВ = БухИт.СКК(2);
КонецЕсли;

Если БухИт.Счет.Количественный = 1 Тогда
	ОстатокКтК = БухИт.СКК(3);
КонецЕсли;

Параметры.ПараметрыАлгоритмов.Установить("ОстатокДтС", ОстатокДтС);
Параметры.ПараметрыАлгоритмов.Установить("ОстатокДтВ", ОстатокДтВ);
Параметры.ПараметрыАлгоритмов.Установить("ОстатокДтК", ОстатокДтК);
Параметры.ПараметрыАлгоритмов.Установить("ОстатокКтС", ОстатокКтС);
Параметры.ПараметрыАлгоритмов.Установить("ОстатокКтВ", ОстатокКтВ);
Параметры.ПараметрыАлгоритмов.Установить("ОстатокКтК", ОстатокКтК);

Если (ОстатокКтК = 0) и (ОстатокКтВ = 0) и (ОстатокКтС = 0) и (ОстатокДтК = 0) и (ОстатокДтВ = 0) и (ОстатокДтС = 0) Тогда
	Возврат 0;
	
Иначе
	Возврат 1;
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ОпределитьДатуУвольнения" ИспользуетсяПриЗагрузке="false">
			<Текст>ФизЛицо = Параметры.ПараметрыАлгоритмов.Получить("ФизЛицо");

СотрДатаУвольнения = Дата(0);
ХарактерРаботы = СоздатьОбъект("Периодический");
ХарактерРаботы.ИспользоватьОбъект("ХарактерРаботы", ФизЛицо);
Если ХарактерРаботы.ОбратныйПорядок() = 1 Тогда
	ХарактерРаботы.ВыбратьЗначения(,);
	Пока ХарактерРаботы.ПолучитьЗначение() = 1 Цикл
		Если ХарактерРаботы.Значение = Перечисление.ХарактерРаботы.ТрудовыеОтношенияПрекращены Тогда
			Если ХарактерРаботы.ДатаЗнач &lt;= Параметры.ДатаКонцаПериодаВыгрузки Тогда
				ДатаУвольнения = ХарактерРаботы.ДатаЗнач;
				Прервать;
			Иначе
				Продолжить;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	СотрДатаУвольнения = ДатаУвольнения;
Иначе
	СотрДатаУвольнения = Дата(0);
КонецЕсли;

Возврат СотрДатаУвольнения;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ОпределитьОстатокПоСкладу" ИспользуетсяПриЗагрузке="false">
			<Текст>ТекОпер 	= Параметры.ПараметрыАлгоритмов.Получить("ОперацияКУДиР");
ТаблУчета	= Параметры.ПараметрыАлгоритмов.Получить("ТаблицаКУДиР");

Проводки 	= Параметры.ПараметрыАлгоритмов.Получить("Проводки");
БухИт 		= Параметры.ПараметрыАлгоритмов.Получить("БухИтПроводокПоСкладам");
Остаток 	= Параметры.ПараметрыАлгоритмов.Получить("ОстатокПроводокПоСкладам");
ИмяИтогов 	= Параметры.ПараметрыАлгоритмов.Получить("ИмяИтоговПроводокПоСкладам");
КорСчет 	= Параметры.ПараметрыАлгоритмов.Получить("КорСчетПроводокПоСкладам");

ОстаткиНаКонец = Параметры.ПараметрыАлгоритмов.Получить("ОстаткиНаКонец");

Если КорСчет = 0 Тогда
	КодСчета = БухИт.Счет.Код;
	КодСчетаГруппы = БухИт.Счет.Родитель(1).Код;
	Номенклатура = БухИт.Субконто(1);
Иначе
	КодСчета = БухИт.КорСчет.Код;
	КодСчетаГруппы = БухИт.КорСчет.Родитель(1).Код;
	Номенклатура = БухИт.КорСубконто(1);
КонецЕсли;

ОстатокК = Остаток;

Период = НачМесяца(БухИт.НачДата);
ОстатокС = Проводки.Сумма;
УчтеноС = 0;

Если (Найти(Параметры.СписокСчетовСкладскогоУчета, КодСчета) &gt; 0) и (Остаток &gt; 0) Тогда
	
	//Ищем остатки по складам
	КлючПоиска = "/" + Номенклатура + "/" + Период + "/" + КодСчетаГруппы;
	НС = 0;
	
	Если ОстаткиНаКонец = 1 Тогда
		Параметры.ТаблицаМХКон.Выгрузить(Параметры.ТаблицаМХ);
	Иначе
		Параметры.ТаблицаМХНач.Выгрузить(Параметры.ТаблицаМХ);
	КонецЕсли;
	
	Если Параметры.ТаблицаМХ.НайтиЗначение(КлючПоиска, НС, "КлючПоиска") = 1 Тогда
		
		Параметры.ТаблицаМХ.ПолучитьСтрокуПоНомеру(НС);
		ТаблицаИтоговМХ = Параметры.ТаблицаМХ.ТаблицаИтоговМХ;
		ТаблицаИтоговМХ.ВыбратьСтроки();
		
		Пока ТаблицаИтоговМХ.ПолучитьСтроку() = 1 Цикл
			
			ОстатокПоСкладу = ТаблицаИтоговМХ.ПолучитьЗначение(ТаблицаИтоговМХ.НомерСтроки, ИмяИтогов);
			Если ОстатокПоСкладу = 0 Тогда
				Продолжить;
			КонецЕсли;
			Учтено = Мин(ОстатокПоСкладу, Остаток);
			НС = 0;
			
			Если (ИмяИтогов = "СНД") или (ИмяИтогов = "ДО") Тогда
				Если Проводки.СубконтоДт.НайтиЗначение(ВидыСубконто.МестаХранения, НС, "Ключ") = 1 Тогда
					Проводки.СубконтоДт.УстановитьЗначение(НС, "Значение", ТаблицаИтоговМХ.Склад);					
					Проводки.КоличествоДт = Учтено;
					Проводки.Сумма = Окр(Учтено * ОстатокС / ОстатокК, 2);
					УчтеноС = УчтеноС + Проводки.Сумма;
					
				ИначеЕсли Проводки.СубконтоДт.НайтиЗначение(ВидыСубконто.Контрагенты, НС, "Ключ") = 1 Тогда
					Проводки.СубконтоДт.УстановитьЗначение(НС, "Ключ", ВидыСубконто.МестаХранения);
					Проводки.СубконтоДт.УстановитьЗначение(НС, "Значение", ТаблицаИтоговМХ.Склад);					
					Проводки.КоличествоДт = Учтено;
					Проводки.Сумма = Окр(Учтено * ОстатокС / ОстатокК, 2);
					УчтеноС = УчтеноС + Проводки.Сумма;
					
				Иначе
					Проводки.СубконтоДт.НоваяСтрока();
					Проводки.СубконтоДт.Ключ = ВидыСубконто.МестаХранения;
					Проводки.СубконтоДт.Значение = ТаблицаИтоговМХ.Склад;					
					Проводки.КоличествоДт = Учтено;
					Проводки.Сумма = Окр(Учтено * ОстатокС / ОстатокК, 2);
					УчтеноС = УчтеноС + Проводки.Сумма;
				КонецЕсли;
				
			Иначе
				Если Проводки.СубконтоКт.НайтиЗначение(ВидыСубконто.МестаХранения, НС, "Ключ") = 1 Тогда
					Проводки.СубконтоКт.УстановитьЗначение(НС, "Значение", ТаблицаИтоговМХ.Склад);					
					Проводки.КоличествоКт = Учтено;
					Проводки.Сумма = Окр(Учтено * ОстатокС / ОстатокК, 2);
					УчтеноС = УчтеноС + Проводки.Сумма;
					
				ИначеЕсли Проводки.СубконтоКт.НайтиЗначение(ВидыСубконто.Контрагенты, НС, "Ключ") = 1 Тогда
					Проводки.СубконтоКт.УстановитьЗначение(НС, "Ключ", ВидыСубконто.МестаХранения);
					Проводки.СубконтоКт.УстановитьЗначение(НС, "Значение", ТаблицаИтоговМХ.Склад);
					Проводки.КоличествоКт = Учтено;
					Проводки.Сумма = Окр(Учтено * ОстатокС / ОстатокК, 2);
					УчтеноС = УчтеноС + Проводки.Сумма;
					
				Иначе
					Проводки.СубконтоКт.НоваяСтрока();
					Проводки.СубконтоКт.Ключ = ВидыСубконто.МестаХранения;
					Проводки.СубконтоКт.Значение = ТаблицаИтоговМХ.Склад;
					Проводки.КоличествоКт = Учтено;
					Проводки.Сумма = Окр(Учтено * ОстатокС / ОстатокК, 2);
					УчтеноС = УчтеноС + Проводки.Сумма;
				КонецЕсли;
				
			КонецЕсли;
			
			ТаблицаИтоговМХ.УстановитьЗначение(ТаблицаИтоговМХ.НомерСтроки, ИмяИтогов, ОстатокПоСкладу - Учтено);
			Остаток = Остаток - Учтено;
			Если Остаток = 0 Тогда
				Проводки.Сумма = Проводки.Сумма + (ОстатокС - УчтеноС);
				Прервать;
			КонецЕсли;
			Параметры.ПараметрыАлгоритмов.Установить("ТаблицаДляКопирования", Проводки);
			СкопироватьСтрокуТаблицы();
			Проводки = Параметры.ПараметрыАлгоритмов.Получить("ТаблицаДляКопирования");
			Проводки.ПолучитьСтрокуПоНомеру(Проводки.КоличествоСтрок());
		КонецЦикла;
		
	Иначе
		Если (ИмяИтогов = "СНД") или (ИмяИтогов = "ДО") Тогда
			Проводки.КоличествоДт = Остаток;
			Проводки.Сумма = Окр(Остаток * ОстатокС / ОстатокК, 2);
			УчтеноС = УчтеноС + Проводки.Сумма;
		Иначе
			Проводки.КоличествоКт = Остаток;
			Проводки.Сумма = Окр(Остаток * ОстатокС / ОстатокК, 2);
			УчтеноС = УчтеноС + Проводки.Сумма;
		КонецЕсли;
		Остаток = 0;
		Проводки.Сумма = Проводки.Сумма + (ОстатокС - УчтеноС);
		
	КонецЕсли;
	
	Если Остаток &gt; 0 Тогда
		НС = 0;
		Если (ИмяИтогов = "СНД") или (ИмяИтогов = "ДО") Тогда
			
			Если Проводки.СубконтоДт.НайтиЗначение(ВидыСубконто.МестаХранения, НС, "Ключ") = 1 Тогда
				Проводки.СубконтоДт.УстановитьЗначение(НС, "Значение", ПолучитьПустоеЗначение("Справочник.МестаХранения"));
				Проводки.КоличествоДт = Остаток;
				Проводки.Сумма = Окр(Остаток * ОстатокС / ОстатокК, 2);
				УчтеноС = УчтеноС + Проводки.Сумма;
				
			ИначеЕсли Проводки.СубконтоДт.НайтиЗначение(ВидыСубконто.Контрагенты, НС, "Ключ") = 1 Тогда
				Проводки.СубконтоДт.УстановитьЗначение(НС, "Ключ", ВидыСубконто.МестаХранения);
				Проводки.СубконтоДт.УстановитьЗначение(НС, "Значение",ПолучитьПустоеЗначение("Справочник.МестаХранения"));
				Проводки.КоличествоДт = Остаток;
				Проводки.Сумма = Окр(Остаток * ОстатокС / ОстатокК, 2);
				УчтеноС = УчтеноС + Проводки.Сумма;
				
			Иначе
				Проводки.СубконтоДт.НоваяСтрока();
				Проводки.СубконтоДт.Ключ = ВидыСубконто.МестаХранения;
				Проводки.СубконтоДт.Значение = ПолучитьПустоеЗначение("Справочник.МестаХранения");
				Проводки.КоличествоДт = Остаток;
				Проводки.Сумма = Окр(Остаток * ОстатокС / ОстатокК, 2);
				УчтеноС = УчтеноС + Проводки.Сумма;
			КонецЕсли;
			
		Иначе
			
			Если Проводки.СубконтоКт.НайтиЗначение(ВидыСубконто.МестаХранения, НС, "Ключ") = 1 Тогда
				Проводки.СубконтоКт.УстановитьЗначение(НС, "Значение", ПолучитьПустоеЗначение("Справочник.МестаХранения"));
				Проводки.КоличествоКт = Остаток;
				Проводки.Сумма = Окр(Остаток * ОстатокС / ОстатокК, 2);
				УчтеноС = УчтеноС + Проводки.Сумма;
				
			ИначеЕсли Проводки.СубконтоКт.НайтиЗначение(ВидыСубконто.Контрагенты, НС, "Ключ") = 1 Тогда
				Проводки.СубконтоКт.УстановитьЗначение(НС, "Ключ", ВидыСубконто.МестаХранения);
				Проводки.СубконтоКт.УстановитьЗначение(НС, "Значение", ПолучитьПустоеЗначение("Справочник.МестаХранения"));
				Проводки.КоличествоКт = Остаток;
				Проводки.Сумма = Окр(Остаток * ОстатокС / ОстатокК, 2);
				УчтеноС = УчтеноС + Проводки.Сумма;
				
			Иначе
				Проводки.СубконтоКт.НоваяСтрока();
				Проводки.СубконтоКт.Ключ = ВидыСубконто.МестаХранения;
				Проводки.СубконтоКт.Значение = ПолучитьПустоеЗначение("Справочник.МестаХранения");
				Проводки.КоличествоКт = Остаток;
				Проводки.Сумма = Окр(Остаток * ОстатокС / ОстатокК, 2);
				УчтеноС = УчтеноС + Проводки.Сумма;
			КонецЕсли;
		КонецЕсли;
		Проводки.Сумма = Проводки.Сумма + (ОстатокС - УчтеноС);
	КонецЕсли;
	
Иначе
	Если (ИмяИтогов = "СНД") или (ИмяИтогов = "ДО") Тогда
		Проводки.КоличествоДт = Остаток;
		Проводки.Сумма = ОстатокС;
		
	Иначе
		Проводки.КоличествоКт = Остаток;
		Проводки.Сумма = ОстатокС;
	КонецЕсли;
	
	Если КодСчета = "08.4" Тогда //условно назначим склад
		ОсновнойСклад = Параметры.ПараметрыАлгоритмов.Получить("ОсновнойСклад");
		Если (ИмяИтогов = "СНД") или (ИмяИтогов = "ДО") Тогда
			Если Проводки.СубконтоДт.НайтиЗначение(ВидыСубконто.МестаХранения, НС, "Ключ") = 1 Тогда
				Проводки.СубконтоДт.УстановитьЗначение(НС, "Значение", ОсновнойСклад);					
			Иначе
				Проводки.СубконтоДт.НоваяСтрока();
				Проводки.СубконтоДт.Ключ = ВидыСубконто.МестаХранения;
				Проводки.СубконтоДт.Значение = ОсновнойСклад;					
			КонецЕсли;
		Иначе
			Если Проводки.СубконтоКт.НайтиЗначение(ВидыСубконто.МестаХранения, НС, "Ключ") = 1 Тогда
				Проводки.СубконтоКт.УстановитьЗначение(НС, "Значение", ОсновнойСклад);					
			Иначе
				Проводки.СубконтоКт.НоваяСтрока();
				Проводки.СубконтоКт.Ключ = ВидыСубконто.МестаХранения;
				Проводки.СубконтоКт.Значение = ОсновнойСклад;					
			КонецЕсли;		
		КонецЕсли;	
	КонецЕсли;	
	
КонецЕсли;

Параметры.ПараметрыАлгоритмов.Установить("Проводки", Проводки);

</Текст>
		</Алгоритм>
		<Алгоритм Имя="ОпределитьПризнакОтражениеВУСН" ИспользуетсяПриЗагрузке="false">
			<Текст>Если Константа.ПорядокПризнанияМатериальныхРасходов.Получить(Параметры.ДатаКонцаПериодаВыгрузки) = Перечисление.ПорядокПризнанияМатериальныхРасходов.УменьшатьРасходыНаОстатокНЗП Тогда
	
	КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");
	
	КоллекцияОбъектов.ВыбратьСтроки();
	Пока КоллекцияОбъектов.ПолучитьСтроку() = 1 Цикл
		
		Если Константа.ОрганизацияЯвляетсяПлательщикомЕНВД = 1 Тогда
			ОтражениевУСН = "Распределяются";
		Иначе
			ОтражениевУСН = "Принимаются";
		КонецЕсли;
		
		Для НомерСубконто = 1 по 3 Цикл
			Субконто = КоллекцияОбъектов.ПолучитьЗначение(КоллекцияОбъектов.НомерСтроки, "Субконто" + НомерСубконто);
			Если ПустоеЗначение(Субконто) = 0 Тогда
				Если ТипЗначенияСтр(Субконто) = "Справочник.ВидыНоменклатуры" Тогда
					Если Субконто.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.УслугаЕНВД Тогда
						ОтражениевУСН = "НеПринимаются";
						Прервать
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		КоллекцияОбъектов.ОтражениевУСН = ОтражениевУСН;
		
	КонецЦикла;
	
	ВходящиеДанные.Установить("ВходящиеОстатки", КоллекцияОбъектов);
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ОпределитьРазделУчета" ИспользуетсяПриЗагрузке="false">
			<Текст>ТекущийСчет = Параметры.ПараметрыАлгоритмов.Получить("ТекущийСчет");
Если (Лев(ТекущийСчет.Код,3) = "ГТД")	
	ИЛИ (Лев(ТекущийСчет.Код,5) = "МЦ") Тогда
	РазделУчета = "ПрочиеСчетаБухгалтерскогоУчета";
	Возврат(РазделУчета);
Иначе
	Если ((Строка(Лев(ТекущийСчет.Код,1)) = "0")
		И (ТекущийСчет.Забалансовый = 1)) Тогда
		РазделУчета = "ПрочиеСчетаБухгалтерскогоУчета";
		Возврат(РазделУчета);		
	ИначеЕсли (ТекущийСчет.Код = "42") Тогда
		Возврат("");
	ИначеЕсли ((Строка(Лев(ТекущийСчет.Код,1)) &lt;&gt; "0")
		И (ТекущийСчет.Забалансовый = 1)) Тогда
		Возврат("");
	КонецЕсли;
КонецЕсли;

Параметры.ТаблицаСчетовРазделовУчета.ВыбратьСтроки();
Пока Параметры.ТаблицаСчетовРазделовУчета.ПолучитьСтроку() = 1 Цикл
	
	Счета			= Параметры.ТаблицаСчетовРазделовУчета.Счета;
	СчетаГруппы		= Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы;
	СчетаИсключения	= Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения;
	РазделУчета		= Параметры.ТаблицаСчетовРазделовУчета.РазделУчета;
	
	Если Найти(Счета, ТекущийСчет.Код) &lt;&gt; 0 Тогда
		Если Найти(СчетаИсключения, """"+ТекущийСчет.Код+"""") = 0 Тогда
			Параметры.ПараметрыАлгоритмов.Установить("РазделУчета", РазделУчета);
			Возврат РазделУчета;
		КонецЕсли;
	КонецЕсли; 
	
	Если Найти(СчетаГруппы, Лев(Строка(ТекущийСчет.Код), 2)) &lt;&gt; 0 Тогда
		Если Найти(СчетаИсключения, """"+ТекущийСчет.Код+"""") = 0 Тогда
			Параметры.ПараметрыАлгоритмов.Установить("РазделУчета", РазделУчета);
			Возврат РазделУчета;
		КонецЕсли;
	КонецЕсли;
	
КонецЦикла;

РазделУчета = "ПрочиеСчетаБухгалтерскогоУчета";
Возврат(РазделУчета);
Параметры.ПараметрыАлгоритмов.Установить("РазделУчета", РазделУчета);
</Текст>
		</Алгоритм>
		<Алгоритм Имя="ОтнесениеРасходовКДеятельностиЕНВД" ИспользуетсяПриЗагрузке="false">
			<Текст>Если Константа.ОрганизацияЯвляетсяПлательщикомЕНВД = 1 Тогда
	Значение = "ВидДеятельностиОпределяетсяПоДоходам";
Иначе
	Значение = "ПредпринимательскаяДеятельностьНеОблагаемаяЕНВД";
КонецЕсли;

Для НомерСубконто = 1 по 3 Цикл
	Субконто = Параметры.ПараметрыАлгоритмов.Получить("Субконто" + НомерСубконто);
	Если ПустоеЗначение(Субконто) = 0 Тогда
		Если ТипЗначенияСтр(Субконто) = "Справочник.ВидыНоменклатуры" Тогда
			Если Субконто.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.УслугаЕНВД Тогда
				Значение = "ПредпринимательскаяДеятельностьОблагаемаяЕНВД";
				Прервать
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецЦикла;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ОчиститьПараметры" ИспользуетсяПриЗагрузке="false">
			<Текст>Параметры.ПараметрыАлгоритмов.Установить("СчетДт", "");
Параметры.ПараметрыАлгоритмов.Установить("СчетКт", "");
Параметры.ПараметрыАлгоритмов.Установить("Валюта", "");
Параметры.ПараметрыАлгоритмов.Установить("ОтражениеВНУДт", "");
Параметры.ПараметрыАлгоритмов.Установить("КоличествоДт", "");
Параметры.ПараметрыАлгоритмов.Установить("Сумма", "");
Параметры.ПараметрыАлгоритмов.Установить("СуммаН", "");
Параметры.ПараметрыАлгоритмов.Установить("НДС", "");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоДт1", "");
Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт1", "");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоДт2", "");
Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт2", "");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоДт3", "");
Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт3", "");
Параметры.ПараметрыАлгоритмов.Установить("НаименованиеОбщегоАлгоритма","");
Параметры.ПараметрыАлгоритмов.Установить("ВидЗадолженности","");
Параметры.ПараметрыАлгоритмов.Установить("СуммаВзаиморасчетов","");
Параметры.ПараметрыАлгоритмов.Установить("Контрагент","");
Параметры.ПараметрыАлгоритмов.Установить("ДоговорКонтрагента","");
Параметры.ПараметрыАлгоритмов.Установить("РасчетныйДокумент","");
Параметры.ПараметрыАлгоритмов.Установить("Подотчетник","");
Параметры.ПараметрыАлгоритмов.Установить("СчетУчетаНМА","");</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПодготовитьТаблицуМХ" ИспользуетсяПриЗагрузке="false">
			<Текст>ТаблицаИтоговМХ = СоздатьОбъект("ТаблицаЗначений");
ТаблицаИтоговМХ.НоваяКолонка("Склад");
ТаблицаИтоговМХ.НоваяКолонка("СНД", "Число");
ТаблицаИтоговМХ.НоваяКолонка("ДО", "Число");
ТаблицаИтоговМХ.НоваяКолонка("КО", "Число");
ТаблицаИтоговМХ.НоваяКолонка("СКД", "Число");
ТаблицаИтоговМХ.НоваяКолонка("ДляНУ", "Число");

ОстаткиНаКонец = Параметры.ПараметрыАлгоритмов.Получить("ОстаткиНаКонец");

ТаблицаМХ = Параметры.ТаблицаМХ;

СчетаМХ = "МХ.1, МХ.2, МХ.3, МХ.4";
БухИтМХ = СоздатьОбъект("БухгалтерскиеИтоги");
БухИтМХ.ИспользоватьСубконто(ВидыСубконто.Номенклатура);
БухИтМХ.ИспользоватьСубконто(ВидыСубконто.МестаХранения);

Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	БухИтМХ.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков,, СчетаМХ);
Иначе
	//Если ОстаткиНаКонец = 1 Тогда
		БухИтМХ.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков, Параметры.ДатаКонцаПериодаВыгрузки, СчетаМХ,,, 3, "Месяц",);
	//Иначе
	//	БухИтМХ.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков,, СчетаМХ);
	//КонецЕсли;
КонецЕсли;

БухИтМХ.ВыбратьПериоды();
Пока БухИтМХ.ПолучитьПериод() = 1 Цикл
	БухИтМХ.ВыбратьСчета();
	Пока БухИтМХ.ПолучитьСчет() = 1 Цикл
		БухИтМХ.ВыбратьСубконто(1);
		Пока БухИтМХ.ПолучитьСубконто(1) = 1 Цикл
						
			ТаблицаМХ.НоваяСтрока();
			ТаблицаМХ.Период = НачМесяца(БухИтМХ.НачДата);
			ТаблицаМХ.Номенклатура = БухИтМХ.Субконто(1);
			
			Если БухИтМХ.Счет = СчетПоКоду("МХ.1") Тогда
				ТаблицаМХ.СчетаУчета = "10";
			ИначеЕсли БухИтМХ.Счет = СчетПоКоду("МХ.2") Тогда
				ТаблицаМХ.СчетаУчета = "41";
			ИначеЕсли БухИтМХ.Счет = СчетПоКоду("МХ.3") Тогда
				ТаблицаМХ.СчетаУчета = "43";
			ИначеЕсли БухИтМХ.Счет = СчетПоКоду("МХ.4") Тогда
				ТаблицаМХ.СчетаУчета = "004";
			КонецЕсли;
			
			ТаблицаМХ.КлючПоиска = "/" + ТаблицаМХ.Номенклатура + "/" + ТаблицаМХ.Период + "/" + ТаблицаМХ.СчетаУчета;
			
			ТаблицаИтоговМХ = СоздатьОбъект("ТаблицаЗначений");
			ТаблицаИтоговМХ.НоваяКолонка("Склад");
			ТаблицаИтоговМХ.НоваяКолонка("СНД", "Число");
			ТаблицаИтоговМХ.НоваяКолонка("ДО", "Число");
			ТаблицаИтоговМХ.НоваяКолонка("КО", "Число");
			ТаблицаИтоговМХ.НоваяКолонка("СКД", "Число");
			ТаблицаИтоговМХ.НоваяКолонка("ДляНУ", "Число");

			БухИтМХ.ВыбратьСубконто(2);
			Пока БухИтМХ.ПолучитьСубконто(2) = 1 Цикл
				ТаблицаИтоговМХ.НоваяСтрока();
				ТаблицаИтоговМХ.Склад = БухИтМХ.Субконто(2);
				ТаблицаИтоговМХ.СНД = Макс(0, БухИтМХ.СНД("К"));
				Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
					ТаблицаИтоговМХ.ДО = 0;
					ТаблицаИтоговМХ.КО = 0;
					ТаблицаИтоговМХ.СКД = Макс(0, БухИтМХ.СНД("К"));
					ТаблицаИтоговМХ.ДляНУ = Макс(0, БухИтМХ.СНД("К"));
				Иначе
					ТаблицаИтоговМХ.ДО = Макс(0, БухИтМХ.ДО("К"));
					ТаблицаИтоговМХ.КО = Макс(0, БухИтМХ.КО("К"));
					ТаблицаИтоговМХ.СКД = Макс(0, БухИтМХ.СКД("К"));
					ТаблицаИтоговМХ.ДляНУ = Макс(0, БухИтМХ.СКД("К"));
				КонецЕсли;
			КонецЦикла;
			
			ТаблицаМХ.ТаблицаИтоговМХ = ТаблицаИтоговМХ;
			
		КонецЦикла;
	КонецЦикла;
КонецЦикла;

ТаблицаМХ.Выгрузить(Параметры.ТаблицаМХ);
</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПолучитьАтрибутыПроводки" ИспользуетсяПриЗагрузке="false">
			<Текст>ТекОпер 	= Параметры.ПараметрыАлгоритмов.Получить("ОперацияКУДиР");
ТаблУчета	= Параметры.ПараметрыАлгоритмов.Получить("ТаблицаКУДиР");

ВыделятьВходящийНДС = Константа.ВыделятьВходящийНДС.Получить(Параметры.ДатаКонцаПериодаВыгрузки);

СчН01		= СчетПоКоду("Н01");
СчН02_2		= СчетПоКоду("Н02.2");

ТекДок = ТекОпер.Документ;
ТекДокВид = ТекДок.Вид();

Опер = СоздатьОбъект("Операция");
Опер.НайтиОперацию(ТекОпер.Документ);

// Присвоим значения по умолчанию
НомерСтрокиДок = 0;
НДС = 0;
ДатаНомерДок = Формат(ТекДок.ДатаДок, "Д ДДММГГГГ")+", №"+ТекДок.НомерДок;

СодержОперации = ТекОпер.Содержание;
Описание = ТекОпер.СодержаниеПроводки;

//Выделим расходы по НДС -------------------------------------------------

Если (ВыделятьВходящийНДС = 1) и (ТекОпер.Дебет.Счет = СчН02_2) Тогда
	Номер=ТекОпер.НомерПроводки();
	Если  Номер&gt;1 Тогда
		Опер.ПолучитьПроводкуПоНомеру(Номер-1);
		Если (Опер.Кредит.Счет = СчетПоКоду("19.2")) и (Опер.Дебет.Счет &lt;&gt; СчетПоКоду("19.1")) Тогда
			Если ТекОпер.Сумма &gt; 0 Тогда
				СодержОперации = "Принят к расходам НДС, предъявленный поставщиком.";
			Иначе
				СодержОперации = "Сторнирован НДС, ранее принятый к расходам.";
			КонецЕсли;
			НомерСтрокиДок = 99999 + ТекОпер.НомерСтрокиДокумента();
			
			//Дата номер входящего документа
			Если ТекДокВид = "АвансовыйОтчет" Тогда
				Если  ТекДок.ПолучитьСтрокуПоНомеру(ТекОпер.НомерСтрокиДокумента()) = 1 Тогда
					Если ПустоеЗначение(ТекДок.НомерДокумента) = 0 Тогда
						ДатаНомерДок = Формат(ТекДок.ДатаДокумента, "Д ДДММГГГГ")+", №"+СокрЛП(ТекДок.НомерДокумента);
						Если (ТекДок.ДатаДок &lt;&gt; ТекДок.ДатаДокумента) и (ПустоеЗначение(ТекДок.ДатаДокумента) = 0) Тогда
							ДатаНомерДок = ДатаНомерДок+" ("+Формат(ТекДок.ДатаДок, "Д ДДММГГГГ")+")";
						КонецЕсли;	
					КонецЕсли;
				КонецЕсли;
				
			ИначеЕсли ТекДокВид = "Выписка" тогда
				
				Если  ТекДок.ПолучитьСтрокуПоНомеру(ТекОпер.НомерСтрокиДокумента()) = 1 Тогда
					Если ПустоеЗначение(ТекДок.ДатаДокВходящий)=1 Тогда
						ДатаДокВходящий = ТекДок.ДатаДок;
					Иначе
						ДатаДокВходящий = ТекДок.ДатаДокВходящий;
					КонецЕсли;
					Если ПустоеЗначение(ТекДок.НомерДокВходящий)=1 Тогда
						НомерДокВходящий = ТекДок.НомерДок;
					Иначе
						НомерДокВходящий = ТекДок.НомерДокВходящий;
					КонецЕсли;
					ДатаНомерДок = Формат(ДатаДокВходящий, "Д ДДММГГГГ")+", №"+НомерДокВходящий;
					Если ТекДок.ДатаДок &lt;&gt; ДатаДокВходящий Тогда
						ДатаНомерДок = ДатаНомерДок+" ("+Формат(ТекДок.ДатаДок, "Д ДДММГГГГ")+")";
					КонецЕсли;
				КонецЕсли;
				
			ИначеЕсли (ТекДокВид = "ПоступлениеНМА") или 
				(ТекДокВид = "ПоступлениеМПЗ") или
				(ТекДокВид = "УслугиСтороннихОрганизаций") Тогда                      
				Если ПустоеЗначение(ТекДок.НомерДокВходящий) = 0 Тогда
					ДатаНомерДок = Формат(ТекДок.ДатаДокВходящий, "Д ДДММГГГГ")+", №"+СокрЛП(ТекДок.НомерДокВходящий);
					Если (ТекДок.ДатаДок &lt;&gt; ТекДок.ДатаДокВходящий) и (ПустоеЗначение(ТекДок.ДатаДокВходящий) = 0) Тогда
						ДатаНомерДок = ДатаНомерДок+" ("+Формат(ТекДок.ДатаДок, "Д ДДММГГГГ")+")";
					КонецЕсли;	
				КонецЕсли;
				
			КонецЕсли;
			ТаблУчета.Документ		 = ТекОпер.Документ;
			ТаблУчета.НомерСтрокиДок = НомерСтрокиДок;
			ТаблУчета.ДатаНомерДок   = ДатаНомерДок;
			ТаблУчета.СодержОперации = (СокрЛП(СодержОперации));
			ТаблУчета.НДС			 = НДС;
			
			Параметры.ПараметрыАлгоритмов.Установить("ТаблицаКУДиР",ТаблУчета);
			Возврат "";
		КонецЕсли;
	КонецЕсли;
	
Конецесли;

//Авансовый отчет --------------------------------------------------------

Если ТекДокВид = "АвансовыйОтчет" Тогда
	
	НомерСтрокиДок = ТекОпер.НомерСтрокиДокумента();
	Если ПустоеЗначение(ТекДок.НомерДокумента) = 0 Тогда
		ДатаНомерДок = Формат(ТекДок.ДатаДокумента, "Д ДДММГГГГ")+", №"+СокрЛП(ТекДок.НомерДокумента);
		Если (ТекДок.ДатаДок &lt;&gt; ТекДок.ДатаДокумента) и (ПустоеЗначение(ТекДок.ДатаДокумента) = 0) Тогда
			ДатаНомерДок = ДатаНомерДок+" ("+Формат(ТекДок.ДатаДок, "Д ДДММГГГГ")+")";
		КонецЕсли;	
	КонецЕсли;
	СодержОперации = "Представлен авансовый отчет: "+ТекДок.Сотрудник+
	", назначение аванса """+ТекДок.Договор+""" - "+ТекДок.КоррСчет.Наименование+".";
	
	// Взаимозачет --------------------------------------------------------------- 
	
ИначеЕсли ТекДокВид = "Взаимозачет" Тогда
	
	ДатаДокВходящий = ТекДок.ДатаДок;
	НомерДокВходящий = ТекДок.НомерДок;
	ДатаНомерДок = Формат(ДатаДокВходящий, "Д ДДММГГГГ")+", №"+НомерДокВходящий;
	СодержОперации = "Взаимозачет между дебитором """+ТекДок.Дебитор+""" и кредитором """+ТекДок.Кредитор+""".";
	
	// Выписка --------------------------------------------------------------- 
	
ИначеЕсли ТекДокВид = "Выписка" Тогда
	
	НомерСтрокиДок = ТекОпер.НомерСтрокиДокумента();
	ТекДок.ПолучитьСтрокуПоНомеру(НомерСтрокиДок);
	
	Если ПустоеЗначение(ТекДок.ДатаДокВходящий)=1 Тогда
		ДатаДокВходящий = ТекДок.ДатаДок;
	Иначе
		ДатаДокВходящий = ТекДок.ДатаДокВходящий;
	КонецЕсли;
	Если ПустоеЗначение(ТекДок.НомерДокВходящий)=1 Тогда
		НомерДокВходящий = ТекДок.НомерДок;
	Иначе
		НомерДокВходящий = ТекДок.НомерДокВходящий;
	КонецЕсли;
	ДатаНомерДок = Формат(ДатаДокВходящий, "Д ДДММГГГГ")+", №"+НомерДокВходящий;
	Если ТекДок.ДатаДок &lt;&gt; ДатаДокВходящий Тогда
		ДатаНомерДок = ДатаНомерДок+" ("+Формат(ТекДок.ДатаДок, "Д ДДММГГГГ")+")";
	КонецЕсли;	
	Если ТекДок.Приход&gt;0 Тогда
		Движение = "Поступление на р/с: ";
	Иначе
		Движение = "Списание с р/с: ";
	КонецЕсли;
	
	Если НомерСтрокиДок&gt;0 Тогда
		СодержОперации = Движение+ТекДок.ВидДвижения+" - "+СокрЛП(ТекДок.НазначениеПлатежа) + ". Аналитика платежа: "+
		?(ПустоеЗначение(ТекДок.Субконто1)=0,""""+ТекДок.Субконто1+"""","")+
		?(ПустоеЗначение(ТекДок.Субконто2)=0,", """+ТекДок.Субконто2+"""","")+
		?(ПустоеЗначение(ТекДок.Субконто3)=0,", """+ТекДок.Субконто3+"""","")+"."; 
	Иначе
		СодержОперации = "Переоценка средств на счете № "+ТекДок.БанковскийСчет.Номер+" в банке "+ТекДок.БанковскийСчет.БанкОрганизации.Наименование+".";
	КонецЕсли;
	
	//ВыплатаЗП  ------------------------------------------------------------------------------- 
ИначеЕсли ТекДокВид = "ВыплатаЗП" Тогда
	
	СодержОперации = "Выплата зарплаты";
	
	//Закрытие месяца  ------------------------------------------------------------------------------- 
ИначеЕсли ТекДокВид = "ЗакрытиеМесяца" Тогда
	
	Если ТекОпер.Дебет.Счет = СчН02_2 Тогда // расход
		Номер=ТекОпер.НомерПроводки();
		Если  Номер&gt;1 Тогда
			Опер.ПолучитьПроводкуПоНомеру(Номер-1);
			Если СтрЧислоВхождений(ТекОпер.СодержаниеПроводки,"Признание расходов по")&gt;0 Тогда 
				НомерСтрокиДок = 1000;
				СодержОперации = "Начислены налоги (взносы).";
			ИначеЕсли (Опер.Кредит.счет=СчетПоКоду("10.12")) Тогда
				НомерСтрокиДок = 1001;
				СодержОперации = "Признаны транспортно-заготовительные расходы.";
			ИначеЕсли (Опер.Кредит.счет=СчетПоКоду("10.13")) Тогда
				НомерСтрокиДок = 1001;
				СодержОперации = "Признаны транспортно-заготовительные расходы.";
			ИначеЕсли (Опер.Кредит.счет=СчетПоКоду("44.2")) Тогда
				НомерСтрокиДок = 1002;
				СодержОперации = "Признаны транспортно-заготовительные расходы.";
			ИначеЕсли (Опер.Кредит.счет=СчетПоКоду("97.2"))или(Опер.Кредит.счет=СчетПоКоду("97.3")) Тогда
				НомерСтрокиДок = 1003;
				СодержОперации = "Признаны отложенные расходы.";
			ИначеЕсли (Опер.Кредит.счет=СчетПоКоду("97.4")) Тогда
				НомерСтрокиДок = 1003;
				СодержОперации = "Признаны отложенные расходы.";
			ИначеЕсли (СокрЛП(ТекОпер.СодержаниеПроводки) = "Начислены налоги (взносы)") или (СокрЛП(ТекОпер.СодержаниеПроводки) = "Расходы по оплате труда") Тогда
				НомерСтрокиДок = 1004;
				СодержОперации = "Расходы по оплате труда";
			Иначе
				НомерСтрокиДок = Номер;
				СодержОперации = ТекОпер.СодержаниеПроводки;
				Описание = ТекОпер.СодержаниеПроводки;
			КонецЕсли; 
		ИначеЕсли (СокрЛП(ТекОпер.СодержаниеПроводки) = "Начислены налоги (взносы)") или (СокрЛП(ТекОпер.СодержаниеПроводки) = "Расходы по оплате труда") Тогда
			НомерСтрокиДок = 1004;
			СодержОперации = "Расходы по оплате труда";
		Иначе
			НомерСтрокиДок = Номер;
			СодержОперации = ТекОпер.СодержаниеПроводки;
		КонецЕсли;
	ИначеЕсли ТекОпер.Дебет.Счет = СчетПоКоду("Н02.1") Тогда // расход 
		НомерСтрокиДок = 1006;
		СодержОперации = "Признаны расходы на приобретение основных средств.";
	ИначеЕсли ТекОпер.Дебет.Счет = СчетПоКоду("Н02.4") Тогда // расход 
		НомерСтрокиДок = 1007;
		СодержОперации = "Признаны расходы на приобретение нематериальных активов.";
	Иначе
		НомерСтрокиДок = 0;
		СодержОперации = ТекОпер.СодержаниеПроводки;
	КонецЕсли;
	
	//Инвентаризация -----------------------------------------------------------------------------
ИначеЕсли ТекДокВид = "ИнвентаризацияТМЦ" Тогда
	
	Если ТекДок.ВидТМЦ = 3 Тогда
		СодержОперации = "Инвентаризация розничной торговой точки """+ТекДок.РозничныйСклад+"""."
	Иначе
		СодержОперации = "Инвентаризация склада """+ТекДок.МестоХранения + """.";
	КонецЕсли;
	
	Если (ТекОпер.Дебет.Счет = СчН02_2) и (ТекОпер.Сумма &lt; 0) Тогда // расход
		Если Найти(ТекОпер.СодержаниеПроводки, "НДС") &gt; 0 Тогда
			ВидРасходов = "на НДС ";
			СодержОперации = СодержОперации + " (НДС)";
			НомерСтрокиДок = 99999 + ТекОпер.НомерСтрокиДокумента();
		КонецЕсли;
	КонецЕсли;
	
	//НачислениеЗП  ------------------------------------------------------------------------------- 
ИначеЕсли ТекДокВид = "НачислениеЗП" Тогда
	
	СодержОперации = "Начисление зарплаты.";
	
	//Передача ОС  ------------------------------------------------------------------------------- 
ИначеЕсли ТекДокВид = "ПередачаОС" Тогда
	
	СодержОперации = "Реализация основного средства покупателю """+ТекДок.Контрагент+""" по договору """+ТекДок.Договор+""".";
	
	//Передача НМА  ------------------------------------------------------------------------------- 
ИначеЕсли ТекДокВид = "ПередачаНМА" Тогда
	
	СодержОперации = "Реализация нематериальног актива покупателю """+ТекДок.Контрагент+""" по договору """+ТекДок.Договор+""".";
	
	//Перемещение МПЗ ------------------------------------------------------------------------------- 
	
ИначеЕсли ТекДокВид = "ПеремещениеМПЗ" Тогда
	
	СодержОперации = "Материалы переданы в производство.";
	
	//Поступление НМА------------------------------------------------------------------------------------
	
ИначеЕсли ТекДокВид = "ПоступлениеНМА" Тогда
	
	СодержОперации = "Поступление нематериальных активов.";
	
	//Поступление МПЗ------------------------------------------------------------------------------------
	
ИначеЕсли ТекДокВид = "ПоступлениеМПЗ" Тогда
	
	СодержОперации = "Поступление МПЗ.";
	
	//Приходный ордер --------------------------------------------------------------------
ИначеЕсли ТекДокВид = "ПриходныйОрдер" Тогда
	
	Если ТекДок.РозничнаяВыручка = 0 Тогда
		СодержОперации = "Поступление в кассу: "+ТекДок.ДвижениеДенежныхСредств+" - "+СокрЛП(ТекДок.Основание) + ". Аналитика платежа: "+
		?(ПустоеЗначение(ТекДок.Субконто1)=0,""""+ТекДок.Субконто1+"""","")+
		?(ПустоеЗначение(ТекДок.Субконто2)=0,", """+ТекДок.Субконто2+"""","")+
		?(ПустоеЗначение(ТекДок.Субконто3)=0,", """+ТекДок.Субконто3+"""","")+".";
	Иначе
		СодержОперации = "Поступление в кассу: розничная выручка с торговой точки """+ТекДок.ТорговаяТочка+""".";
		Описание = СодержОперации;
	КонецЕсли;
	
	//РасходныйОрдер -----------------------------------------------------------------------------
ИначеЕсли ТекДокВид = "РасходныйОрдер" Тогда
	
	СодержОперации = "Выдача из кассы: "+ТекДок.ДвижениеДенежныхСредств+" - "+СокрЛП(ТекДок.Основание) + ". Аналитика платежа: "+
	?(ПустоеЗначение(ТекДок.Субконто1)=0,""""+ТекДок.Субконто1+"""","")+
	?(ПустоеЗначение(ТекДок.Субконто2)=0,", """+ТекДок.Субконто2+"""","")+
	?(ПустоеЗначение(ТекДок.Субконто3)=0,", """+ТекДок.Субконто3+"""","");
	
	//Реализация -----------------------------------------------------------------------------
ИначеЕсли ТекДокВид = "Реализация" Тогда
	
	Если ТекДок.ВидОтгрузки = 3 Тогда
		СодержОперации = "Реализация товаров (работ, услуг) в розницу."
	Иначе
		СодержОперации = "Реализация товаров (работ, услуг) покупателю """+ТекДок.Контрагент+ """ по договору """+ТекДок.Договор + """.";
	КонецЕсли;
	
	Если (ТекОпер.Дебет.Счет = СчН02_2) и (ТекОпер.Сумма &lt; 0) Тогда // расход
		Если Найти(ТекОпер.СодержаниеПроводки, "НДС") &gt; 0 Тогда
			ВидРасходов = "на НДС ";
			СодержОперации = СодержОперации + " (НДС)";
			НомерСтрокиДок = 99999 + ТекОпер.НомерСтрокиДокумента();
		КонецЕсли;
	КонецЕсли;
	
	//Услуги сторонних организаций --------------------------------------------------------------
ИначеЕсли ТекДокВид = "УслугиСтороннихОрганизаций" Тогда
	
	НомерСтрокиДок = ТекОпер.НомерСтрокиДокумента();
	ТекДок.ПолучитьСтрокуПоНомеру(НомерСтрокиДок);
	СодержОперации = "Произведены расходы: "+СокрЛП(ТекДок.НаименованиеУслуги)+" - "+ТекДок.СчетЗатрат.Наименование+".";
	
КонецЕсли;                                                                                     

Если ВыделятьВходящийНДС = 0 Тогда
	//Входной НДС ---------------------------------------------------------------------------------
	Номер=ТекОпер.НомерПроводки();
	НДС = 0;
	Если  Опер.КоличествоПроводок() &gt; Номер Тогда
		Опер.ПолучитьПроводкуПоНомеру(Номер+1);
		Если Опер.Кредит.Счет = СчетПоКоду("НДС") Тогда
			НДС = Опер.Сумма;
		КонецЕсли;
	КонецЕсли;
Иначе
	НДС = 0;
КонецЕсли;

Если (ТекОпер.Кредит.Счет &lt;&gt; СчН01) и (ТекОпер.Дебет.Счет.Родитель(1) &lt;&gt; СчетПоКоду("Н02")) Тогда
	НДС = 0;
КонецЕсли;

ТаблУчета.Документ 		 = ТекОпер.Документ;
ТаблУчета.НомерСтрокиДок = НомерСтрокиДок;
ТаблУчета.ДатаНомерДок   = ДатаНомерДок;
ТаблУчета.СодержОперации = (СокрЛП(СодержОперации));
ТаблУчета.НДС 			 = НДС;

Параметры.ПараметрыАлгоритмов.Установить("ТаблицаКУДиР",ТаблУчета);</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПолучитьИтогиПоСчету" ИспользуетсяПриЗагрузке="false">
			<Текст>БухИт = Параметры.ПараметрыАлгоритмов.Получить("БухИт");
ОстаткиНаКонец = Параметры.ПараметрыАлгоритмов.Получить("ОстаткиНаКонец");

ОстатокДтС = 0;
ОстатокДтВ = 0;
ОстатокДтК = 0;
ОстатокКтС = 0;
ОстатокКтВ = 0;
ОстатокКтК = 0;

ОборотДтС = 0;
ОборотДтВ = 0;
ОборотДтК = 0;
ОборотКтС = 0;
ОборотКтВ = 0;
ОборотКтК = 0;

Если (БухИт.НачДата = НачМесяца(Параметры.ДатаВводаОстатков)) 
	ИЛИ (ОстаткиНаКонец = 1) Тогда
	ОстатокДтС = БухИт.СНД(1);
	ОстатокДтВ = БухИт.СНД(2);
	ОстатокДтК = БухИт.СНД(3);
		
	ОстатокКтС = БухИт.СНК(1);
	ОстатокКтВ = БухИт.СНК(2);
	ОстатокКтК = БухИт.СНК(3);
КонецЕсли;

ОборотДтС = БухИт.КорДО(1);
ОборотДтВ = БухИт.КорДО(2);
ОборотДтК = БухИт.КорДО(3);
	
Если ПустоеЗначение(БухИт.КорСчет) = 1 Тогда
	ОборотКтС = БухИт.КорКО(1);
	ОборотКтВ = БухИт.КорКО(2);
	ОборотКтК = БухИт.КорКО(3);
КонецЕсли;

Параметры.ПараметрыАлгоритмов.Установить("ОстатокДтС", ОстатокДтС);
Параметры.ПараметрыАлгоритмов.Установить("ОстатокДтВ", ОстатокДтВ);
Параметры.ПараметрыАлгоритмов.Установить("ОстатокДтК", ОстатокДтК);
Параметры.ПараметрыАлгоритмов.Установить("ОстатокКтС", ОстатокКтС);
Параметры.ПараметрыАлгоритмов.Установить("ОстатокКтВ", ОстатокКтВ);
Параметры.ПараметрыАлгоритмов.Установить("ОстатокКтК", ОстатокКтК);

Параметры.ПараметрыАлгоритмов.Установить("ОборотДтС", ОборотДтС);
Параметры.ПараметрыАлгоритмов.Установить("ОборотДтВ", ОборотДтВ);
Параметры.ПараметрыАлгоритмов.Установить("ОборотДтК", ОборотДтК);
Параметры.ПараметрыАлгоритмов.Установить("ОборотКтС", ОборотКтС);
Параметры.ПараметрыАлгоритмов.Установить("ОборотКтВ", ОборотКтВ);
Параметры.ПараметрыАлгоритмов.Установить("ОборотКтК", ОборотКтК);</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПолучитьКомментарийДокумента" ИспользуетсяПриЗагрузке="false">
			<Текст>ДопКомментарий = Параметры.ПараметрыАлгоритмов.Получить("ДопКомментарий");
Значение = "# Перенесено из 1С:Бухгалтерии 7.7 (УСН) " + ДопКомментарий + "#";</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПолучитьСписокВидовНоменклатуры" ИспользуетсяПриЗагрузке="false">
			<Текст>ТипыНоменклатуры = Параметры.ПараметрыАлгоритмов.Получить("ТипНоменклатуры");

СписокВидовНоменклатуры = СоздатьОбъект("СписокЗначений");
ВН = СоздатьОбъект("Справочник.ВидыНоменклатуры");
ВН.ВыбратьЭлементы();
Пока ВН.ПолучитьЭлемент() = 1 Цикл
	Если ВН.ЭтоГруппа() = 1 Тогда
		Продолжить;
		
	ИначеЕсли ТипыНоменклатуры.НайтиЗначение(ВН.ТипНоменклатуры) &gt; 0 Тогда
		СписокВидовНоменклатуры.ДобавитьЗначение(ВН.ТекущийЭлемент());
	КонецЕсли;
КонецЦикла;
		
Возврат СписокВидовНоменклатуры;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПолучитьСтруктуруАдреса" ИспользуетсяПриЗагрузке="false">
			<Текст>	Адрес = ВходящиеДанные.Получить("Адрес");
	АдресСписком = глРазложить(Адрес);
	
	Если СтрКоличествоСтрок(Адрес) &lt;&gt; 1 Тогда     // недолжно быть переводов строк
		АдресСоответствуетТребованиямМНС = 0;
		
	ИначеЕсли СтрЧислоВхождений(Адрес, ",") &lt;&gt; 9 Тогда // должно быть 9 запятых
		АдресСоответствуетТребованиямМНС = 0;
		
	ИначеЕсли СтрДлина(АдресСписком.ПолучитьЗначение(1))  &gt; 3  Тогда   // код страны не &gt; 3 символов
		АдресСоответствуетТребованиямМНС = 0;
		
	ИначеЕсли СтрДлина(АдресСписком.ПолучитьЗначение(2))  &gt; 6  Тогда   // индекс не &gt; 6 символов
		АдресСоответствуетТребованиямМНС = 0;
		
	ИначеЕсли СтрДлина(АдресСписком.ПолучитьЗначение(3))  &gt; 30 Тогда   // наим.региона не &gt; 30 символов
		АдресСоответствуетТребованиямМНС = 0;
		
	ИначеЕсли СтрДлина(АдресСписком.ПолучитьЗначение(4))  &gt; 35 Тогда   // наим.района не &gt; 35 символов
		АдресСоответствуетТребованиямМНС = 0;
		
	ИначеЕсли СтрДлина(АдресСписком.ПолучитьЗначение(5))  &gt; 35 Тогда   // наим.города не &gt; 35 символов
		АдресСоответствуетТребованиямМНС = 0;
		
	ИначеЕсли СтрДлина(АдресСписком.ПолучитьЗначение(6))  &gt; 45 Тогда   // наим.нас.пункта не &gt; 45 символов
		АдресСоответствуетТребованиямМНС = 0;
		
	ИначеЕсли СтрДлина(АдресСписком.ПолучитьЗначение(7))  &gt; 45 Тогда   // наим.улицы не &gt; 45 символов
		АдресСоответствуетТребованиямМНС = 0;
		
	ИначеЕсли СтрДлина(АдресСписком.ПолучитьЗначение(8))  &gt; 10  Тогда   // номер дома не &gt; 10 символов
		АдресСоответствуетТребованиямМНС = 0;
		
	ИначеЕсли СтрДлина(АдресСписком.ПолучитьЗначение(9))  &gt; 10  Тогда   // номер корпуса не &gt; 10 символов
		АдресСоответствуетТребованиямМНС = 0;
		
	ИначеЕсли СтрДлина(АдресСписком.ПолучитьЗначение(10)) &gt; 10  Тогда   // номер квартиры не &gt; 10 символов
		АдресСоответствуетТребованиямМНС = 0;
		
	Иначе
		АдресСоответствуетТребованиямМНС = 1;
	КонецЕсли;
	
	Если АдресСоответствуетТребованиямМНС = 1 Тогда
		ВходящиеДанные.Установить("Поле1", АдресСписком.ПолучитьЗначение(2)); // индекс
		ВходящиеДанные.Установить("Поле2", АдресСписком.ПолучитьЗначение(3)); // регион
		ВходящиеДанные.Установить("Поле3", АдресСписком.ПолучитьЗначение(4)); // район
		ВходящиеДанные.Установить("Поле4", АдресСписком.ПолучитьЗначение(5)); // город
		ВходящиеДанные.Установить("Поле5", АдресСписком.ПолучитьЗначение(6)); // населенный пункт
		ВходящиеДанные.Установить("Поле6", АдресСписком.ПолучитьЗначение(7)); // улица
		ВходящиеДанные.Установить("Поле7", АдресСписком.ПолучитьЗначение(8)); // дом
		ВходящиеДанные.Установить("Поле8", АдресСписком.ПолучитьЗначение(9)); // корпус
		ВходящиеДанные.Установить("Поле9", АдресСписком.ПолучитьЗначение(10)); // квартира
		
		ТекПредставление = "";

		Если СокрЛП(ВходящиеДанные.Получить("Поле1")) &lt;&gt; "" Тогда
			ТекПредставление = ТекПредставление + ", " + СокрЛП(ВходящиеДанные.Получить("Поле1"));
		КонецЕсли;

		Если СокрЛП(ВходящиеДанные.Получить("Поле2")) &lt;&gt; "" Тогда
			ТекПредставление = ТекПредставление + ", " + СокрЛП(ВходящиеДанные.Получить("Поле2"));
		КонецЕсли;

		Если СокрЛП(ВходящиеДанные.Получить("Поле3")) &lt;&gt; "" Тогда
			ТекПредставление = ТекПредставление + ", " + СокрЛП(ВходящиеДанные.Получить("Поле3"));
		КонецЕсли;

		Если СокрЛП(ВходящиеДанные.Получить("Поле4")) &lt;&gt; "" Тогда
			ТекПредставление = ТекПредставление + ", " + СокрЛП(ВходящиеДанные.Получить("Поле4"));
		КонецЕсли;

		Если СокрЛП(ВходящиеДанные.Получить("Поле5")) &lt;&gt; "" Тогда
			ТекПредставление = ТекПредставление + ", " + СокрЛП(ВходящиеДанные.Получить("Поле5"));
		КонецЕсли;

		Если СокрЛП(ВходящиеДанные.Получить("Поле6")) &lt;&gt; "" Тогда
			ТекПредставление = ТекПредставление + ", " + СокрЛП(ВходящиеДанные.Получить("Поле6"));
		КонецЕсли;

		Если СокрЛП(ВходящиеДанные.Получить("Поле7")) &lt;&gt; "" Тогда
			ТекПредставление = ТекПредставление + ", дом № " + СокрЛП(ВходящиеДанные.Получить("Поле7"));
		КонецЕсли;

		Если СокрЛП(ВходящиеДанные.Получить("Поле8")) &lt;&gt; "" Тогда
			ТекПредставление = ТекПредставление + ", корпус " + СокрЛП(ВходящиеДанные.Получить("Поле8"));
		КонецЕсли;

		Если СокрЛП(ВходящиеДанные.Получить("Поле9")) &lt;&gt; "" Тогда
			ТекПредставление = ТекПредставление + ", кв." + СокрЛП(ВходящиеДанные.Получить("Поле9"));
		КонецЕсли;

		Если СтрДлина(ТекПредставление) &gt; 2 Тогда
			ТекПредставление = Сред(ТекПредставление, 3);
		КонецЕсли;
		
		ВходящиеДанные.Установить("Представление", ТекПредставление);
		
	Иначе
		ВходящиеДанные.Установить("Представление", Адрес);
	КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПриВыгрузкеСубконто" ИспользуетсяПриЗагрузке="false">
			<Текст>Счет = Параметры.ПараметрыАлгоритмов.Получить("Счет");
Субконто = Параметры.ПараметрыАлгоритмов.Получить("Субконто");
ВидСубконтоВх = Параметры.ПараметрыАлгоритмов.Получить("ВидСубконто");
НомерСубконто = Параметры.ПараметрыАлгоритмов.Получить("НомерСубконто");
ВидУчета = Параметры.ПараметрыАлгоритмов.Получить("ВидУчета");
ВидУчета = ?(ПустоеЗначение(ВидУчета) = 1, "БУ", ВидУчета);
НомерСубконто = ?(ПустоеЗначение(НомерСубконто) = 1, 1, НомерСубконто);
ВидДоговора = "";

Если ПустоеЗначение(Счет) = 0 Тогда
	Если Счет.КоличествоСубконто() &gt; 0 Тогда
		Если ПустоеЗначение(ВидСубконто) = 1 Тогда
			ВидСубконтоИсточника = Счет.ВидСубконто(НомерСубконто);
		Иначе
		    ВидСубконтоИсточника = ВидСубконтоВх;
		КонецЕслИ;
		ИмяПКО = "";
		Если ВидУчета = "БУ" Тогда
			ИмяПКОВидСубконто = "ВидыСубконтоХозрасчетные";
		КонецЕсли;

		Если ВидСубконтоИсточника = ВидыСубконто.ОбъектыВнеоборотныхАктивов Тогда
			Если (Счет = СчетПоКоду("08.4")) ИЛИ  (Счет = СчетПоКоду("07")) Тогда
				ВидСубконто = "Номенклатура"; // номенклатура
				ИмяПКОВидСубконто = "ВидыСубконтоХозрасчетныеСтр";
				ИмяПКО = "ОбъектыСтроительства_08_4";
								
			ИначеЕсли Счет = СчетПоКоду("08.5") Тогда
				ВидСубконто = "Нематериальные активы"; // нематериальные активы
				ИмяПКОВидСубконто = "ВидыСубконтоХозрасчетныеСтр";
				ИмяПКО = "ОбъектыСтроительства_08_5_08_8";
			
			ИначеЕсли Счет = СчетПоКоду("08.8") Тогда
				ВидСубконто = "Расходы на НИОКР"; // расходы на НИОКР
				ИмяПКОВидСубконто = "ВидыСубконтоХозрасчетныеСтр";
				ИмяПКО = "ОбъектыСтроительства_08_5_08_8";
				
			Иначе
				ВидСубконто = "Объекты строительства"; // объекты строительства
				ИмяПКОВидСубконто = "ВидыСубконтоХозрасчетныеСтр";
				ИмяПКО = "ОбъектыСтроительства_08_3";
			КонецЕсли;
			
		ИначеЕсли (Счет.ПринадлежитГруппе(СчетПоКоду("41")) = 1) ИЛИ
			(Счет = СчетПоКоду("10.1")) ИЛИ
			(Счет = СчетПоКоду("10.2")) ИЛИ
			(Счет = СчетПоКоду("10.3")) ИЛИ
			(Счет = СчетПоКоду("43")) Тогда
		    Если ВидСубконтоИсточника = ВидыСубконто.Договоры Тогда
				Отказ = 1;
			ИначеЕсли (ВидСубконтоИсточника = ВидыСубконто.МестаХранения) Тогда
				Если (ВидУчета = "БУ") Тогда
					ВидСубконто = "Склады"; // склады
					ИмяПКО = "Склады";
					ИмяПКОВидСубконто = "ВидыСубконтоХозрасчетныеСтр";
				Иначе
					Отказ = 1;
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли (Счет.ПринадлежитГруппе(СчетПоКоду("04")) = 1) ИЛИ (Счет = СчетПоКоду("05")) Тогда
			Если Счет = СчетПоКоду("04.1") Тогда
				Параметры.ПараметрыАлгоритмов.Установить("ВидОбъектаУчета", "НематериальныйАктив");
			ИначеЕсли Счет = СчетПоКоду("04.2") Тогда
				Параметры.ПараметрыАлгоритмов.Установить("ВидОбъектаУчета", "РасходыНаНИОКР");
			Иначе
				Параметры.ПараметрыАлгоритмов.Установить("ВидОбъектаУчета", "");
			КонецЕсли;			
			
		ИначеЕсли (Счет = СчетПоКоду("10.11")) ИЛИ
			(Счет = СчетПоКоду("10.12")) ИЛИ
			(Счет = СчетПоКоду("10.13")) ИЛИ
			(Счет = СчетПоКоду("44.1")) ИЛИ
			(Счет = СчетПоКоду("44.2")) ИЛИ
			(Счет.ПринадлежитГруппе(СчетПоКоду("97")) = 1) Тогда
			Если (Счет.ПринадлежитГруппе(СчетПоКоду("97")) = 1) Тогда
				Если НомерСубконто &gt; 1 Тогда
					Отказ = 1;
				КонецЕсли;
			Иначе
				Если НомерСубконто &gt; 1 Тогда
					Отказ = 1;
				Иначе
					ВидСубконто = "Статьи затрат"; // статьи затрат
					ИмяПКО = "ТЗР";
					ИмяПКОВидСубконто = "ВидыСубконтоХозрасчетныеСтр";
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли Счет = СчетПоКоду("40") Тогда
			Отказ = 1;
			
		ИначеЕсли Счет = СчетПоКоду("45") Тогда
			Если НомерСубконто &gt; 2 Тогда
				Отказ = 1;
			ИначеЕсли (ВидСубконтоИсточника = ВидыСубконто.Договоры) Тогда
				ВидДоговора = "СКомиссионером";
			КонецЕсли;
						
		ИначеЕсли (Счет.ПринадлежитГруппе(СчетПоКоду("70")) = 1) И (ВидУчета = "НУ") Тогда
			Если НомерСубконто &gt; 1 Тогда
				Отказ = 1;
			КонецЕсли;

		ИначеЕсли Счет.ПринадлежитГруппе(СчетПоКоду("71")) = 1 Тогда
			Если (ВидСубконтоИсточника = ВидыСубконто.Договоры) Тогда
				Отказ = 1;
											
			ИначеЕсли (ВидСубконтоИсточника = ВидыСубконто.Контрагенты) Тогда
				ВидСубконто = "Работники организаций"; // работники
				ИмяПКО = "СотрудникиКонтрагенты";
				ИмяПКОВидСубконто = "ВидыСубконтоХозрасчетныеСтр";
				
			КонецЕсли;
									
		ИначеЕсли Счет = СчетПоКоду("004") Тогда
			Если ВидСубконтоИсточника = ВидыСубконто.ДоговорыПоставки Тогда
				ВидСубконто = "Партии"; // партии
				ИмяПКОВидСубконто = "ВидыСубконтоХозрасчетныеСтр";
				//ИмяПКО = "Партия";
				ИмяПКО = "ДокументРасчетовСКонтрагентом";
				ВидДоговора = "СКомитентом";
				
			ИначеЕсли (ВидСубконтоИсточника = ВидыСубконто.Договоры) Тогда
				ВидСубконто = "Партии"; // партии
				ИмяПКОВидСубконто = "ВидыСубконтоХозрасчетныеСтр";
				//ИмяПКО = "Партия";
				ИмяПКО = "ДокументРасчетовСКонтрагентом";
				ВидДоговора = "СКомиссионером";
				
			ИначеЕсли (ВидСубконтоИсточника = ВидыСубконто.МестаХранения) Тогда
				Если (ВидУчета = "БУ") Тогда
					ВидСубконто = "Склады"; // склады
					ИмяПКО = "Склады";
					ИмяПКОВидСубконто = "ВидыСубконтоХозрасчетныеСтр";
				Иначе
					Отказ = 1;
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли (ВидСубконтоИсточника = ВидыСубконто.Контрагенты) Тогда
			ВидСубконто = "Контрагенты"; // контрагенты
			ИмяПКОВидСубконто = "ВидыСубконтоХозрасчетныеСтр";
			ИмяПКО = "Контрагенты";
						
		ИначеЕсли (ВидСубконтоИсточника = ВидыСубконто.Договоры) Тогда
			
			Если НомерСубконто &gt; 2 Тогда
				Отказ = 1;
			Иначе
				Если Счет.ПринадлежитГруппе(СчетПоКоду("62")) = 1 Тогда
					ВидДоговора = "СПокупателем";
					
				ИначеЕсли Счет.ПринадлежитГруппе(СчетПоКоду("60")) = 1 Тогда
					ВидДоговора = "СПоставщиком";
					
				КонецЕсли;

				ВидСубконто = "Договоры"; // договоры
				ИмяПКОВидСубконто = "ВидыСубконтоХозрасчетныеСтр";
				ИмяПКО = "ДоговорыКонтрагентов";
			КонецЕсли;
			
		ИначеЕсли Счет = СчетПоКоду("86") Тогда
			Если ВидСубконтоИсточника = ВидыСубконто.НазначениеЦелевыхСредств Тогда
				ВидСубконто = "НазначениеЦелевыхСредств"; 
				ИмяПКОВидСубконто = "ВидыСубконтоХозрасчетные";
				ИмяПКО = "НазначениеЦелевыхСредств";
			ИначеЕсли ВидСубконтоИсточника = ВидыСубконто.ИсточникиПоступления Тогда
				ВидСубконто = "ИсточникиПоступления"; 
				ИмяПКОВидСубконто = "ВидыСубконтоХозрасчетные";
				ИмяПКО = "ДвиженияЦелевыхСредств";
			КонецЕсли;
									
		КонецЕсли;
	КонецЕсли;

	НомерПКОСубконто = НайтиПравило(Субконто, ИмяПКО);

	Если НомерПКОСубконто = 0 Тогда
		Отказ = 1;
	КонецЕсли;
	
Иначе
	Отказ = 1;
КонецЕсли;

Если (ПустоеЗначение(Субконто) = 0) и (ПустоеЗначение(ВидДоговора) = 0) Тогда
	Если Субконто.ЭтоГруппа() = 0 Тогда
		Если ВидДоговора &lt;&gt; "Прочее" Тогда
			НомСтр = 0;
			Если Параметры.ТаблицаДоговоров.НайтиЗначение(Субконто, НомСтр, "Договор") = 0 Тогда
				Параметры.ТаблицаДоговоров.НоваяСтрока();
				Параметры.ТаблицаДоговоров.Договор = Субконто;
					
			Иначе
				Параметры.ТаблицаДоговоров.ПолучитьСтрокуПоНомеру(НомСтр);
			КонецЕсли;
				
			Параметры.ТаблицаДоговоров.ВидДоговора = ВидДоговора;
		КонецЕсли;
	КонецЕсли;
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПрименитьПараметрыДляСчетовДенежныхСредств" ИспользуетсяПриЗагрузке="true">
			<Текст>БУ = ПланыСчетов.Хозрасчетный.Касса.ПолучитьОбъект();
ВестиУчетПоСтатьямДДС = НЕ (БУ.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиДвиженияДенежныхСредств, "ВидСубконто") = Неопределено);

Если НЕ ВестиУчетПоСтатьямДДС Тогда
	
	ВестиУчетПоСтатьямДДС = Истина;
	
	
	// Устанавливаем/удаляем аналитику по статьям движения на счетах учета денежных средств
	
	Счета = Новый Массив;
	// Счет 50
	Счета.Добавить(ПланыСчетов.Хозрасчетный.Касса);
	Счета.Добавить(ПланыСчетов.Хозрасчетный.КассаОрганизации);
	Счета.Добавить(ПланыСчетов.Хозрасчетный.ОперационнаяКасса);
	Счета.Добавить(ПланыСчетов.Хозрасчетный.КассаОрганизацииВал);
	// Счет 51
	Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетныеСчета);
	// Счет 52
	Счета.Добавить(ПланыСчетов.Хозрасчетный.ВалютныеСчета);
	// Счет 55
	Счета.Добавить(ПланыСчетов.Хозрасчетный.СпециальныеСчета);
	Счета.Добавить(ПланыСчетов.Хозрасчетный.Аккредитивы);
	Счета.Добавить(ПланыСчетов.Хозрасчетный.ЧековыеКнижки);
	Счета.Добавить(ПланыСчетов.Хозрасчетный.ДепозитныеСчета);
	Счета.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеСпециальныеСчета);
	Счета.Добавить(ПланыСчетов.Хозрасчетный.АккредитивыВал);
	Счета.Добавить(ПланыСчетов.Хозрасчетный.ДепозитныеСчетаВал);
	Счета.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеСпециальныеСчетаВал);
	// Счет 57
	Счета.Добавить(ПланыСчетов.Хозрасчетный.ПереводыВПути);
	Счета.Добавить(ПланыСчетов.Хозрасчетный.ПереводыВПутиВал);
	
	// визуализация процесса
	ФормаПрогрессора = ПолучитьОбщуюФорму("ХодВыполненияОбработкиДанных");
	ФормаПрогрессора.НаименованиеОбработкиДанных = "Настройка аналитического учета денежных средств";
	ФормаПрогрессора.Значение = 0;
	ФормаПрогрессора.КомментарийОбработкиДанных  = "";
	ФормаПрогрессора.Открыть();
	
	ОбработаноСчетов = 0;
	КоличествоСчетовВсего = Счета.Количество();
	ФормаПрогрессора.МаксимальноеЗначение = КоличествоСчетовВсего;
	ФормаПрогрессора.КомментарийОбработкиДанных = "Установка аналитики на счетах бухгалтерского учета";
	
	Для каждого Счет Из Счета Цикл
		
		ОбработаноСчетов = ОбработаноСчетов + 1;
		ФормаПрогрессора.Значение = ОбработаноСчетов;
		
		СтрокаВидаСубконто = Счет.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиДвиженияДенежныхСредств, "ВидСубконто");
		НетУчетаПоСтатьямДДС = СтрокаВидаСубконто = Неопределено;
		
		Если ВестиУчетПоСтатьямДДС И НетУчетаПоСтатьямДДС Тогда
			
			СчетОбъект = Счет.ПолучитьОбъект();
			НовыйВидСубконто = СчетОбъект.ВидыСубконто.Добавить();
			НовыйВидСубконто.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиДвиженияДенежныхСредств;
			НовыйВидСубконто.ТолькоОбороты = Истина;
			НовыйВидСубконто.Суммовой = Истина;
			НовыйВидСубконто.Валютный = Истина;
			СчетОбъект.Записать();
			
		ИначеЕсли НЕ ВестиУчетПоСтатьямДДС И НЕ НетУчетаПоСтатьямДДС Тогда
			
			СчетОбъект = Счет.ПолучитьОбъект();
			СтрокаДляУдаления = СчетОбъект.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиДвиженияДенежныхСредств, "ВидСубконто");
			СчетОбъект.ВидыСубконто.Удалить(СтрокаДляУдаления);
			СчетОбъект.Записать();
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ФормаПрогрессора.Открыта() Тогда
		ФормаПрогрессора.Закрыть();
	КонецЕсли;
	
КонецЕсли;

</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПрименитьПараметрыРасчетовССотрудниками" ИспользуетсяПриЗагрузке="true">
			<Текст>Значение_ВестиУчетПоРаботникам = Истина;

Значение_ВестиУчетПоРаботникам = ?(одАтрибут(ФайлОбмена, одТипЧисло, "УчетЗарплатыВоВнешнейПрограмме") = 1, Ложь, Истина);

БУ = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда;
ВестиУчетПоРаботникам = НЕ (БУ.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизаций, "ВидСубконто") = Неопределено);


Если ВестиУчетПоРаботникам &lt;&gt; Значение_ВестиУчетПоРаботникам Тогда
	
	ВестиУчетПоРаботникам = Значение_ВестиУчетПоРаботникам;
	
	СписокСчетов = Новый СписокЗначений();
	СписокСчетов.Добавить("РасчетыСПерсоналомПоОплатеТруда");
	СписокСчетов.Добавить("РасчетыПоДепонированнымСуммам");
	СписокСчетов.Добавить("РасходыНаОплатуТрудаБудущихПериодов");
	
	ИмяПланаСчетов = "Хозрасчетный";
	
	// визуализация процесса
	ФормаПрогрессора = ПолучитьОбщуюФорму("ХодВыполненияОбработкиДанных");
	ФормаПрогрессора.НаименованиеОбработкиДанных = "Настройка аналитического учета расчетов с сотрудниками";
	ФормаПрогрессора.Значение = 0;
	ФормаПрогрессора.КомментарийОбработкиДанных  = "";
	ФормаПрогрессора.Открыть();

	ОбработаноСчетов = 0;
	КоличествоСчетовВсего = СписокСчетов.Количество();
	ФормаПрогрессора.МаксимальноеЗначение = КоличествоСчетовВсего;
	ФормаПрогрессора.КомментарийОбработкиДанных = "Установка аналитики на счетах бухгалтерского учета";
	
	Для каждого СтрокаСписка Из СписокСчетов Цикл
		
		ОбработаноСчетов = ОбработаноСчетов + 1;
		ФормаПрогрессора.Значение = ОбработаноСчетов;
		
		ИмяСчета = СтрокаСписка.Значение;
		
		Счет  = ПланыСчетов[ИмяПланаСчетов][ИмяСчета];
		Счета = Новый СписокЗначений();
		Счета.Добавить(Счет);
		
		ВыборкаСчетов = ПланыСчетов[ИмяПланаСчетов].ВыбратьИерархически(Счет);
		Пока ВыборкаСчетов.Следующий() Цикл
			
			Счета.Добавить(ВыборкаСчетов.Ссылка);
			
		КонецЦикла;
		
		Для каждого Счет Из Счета Цикл
			
			Объект   = Счет.Значение.ПолучитьОбъект();
			КодСчета = Объект.Код;
			
			Субконто = Объект.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизаций, "ВидСубконто");
			
			Если НЕ (Субконто = Неопределено) Тогда
				Если Субконто.Предопределенное Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			Если ВестиУчетПоРаботникам = Истина Тогда // Добавляем 

				Если Субконто = Неопределено Тогда

					Если Счет.Значение = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда Тогда
						НовыйВид = Объект.ВидыСубконто.Вставить(0);
					Иначе
						НовыйВид = Объект.ВидыСубконто.Добавить();
					КонецЕсли;
					
					НовыйВид.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизаций;
					НовыйВид.Суммовой    = Истина;
						
					Если Объект.Количественный Тогда
						НовыйВид.Количественный = Истина;
					КонецЕсли;
					
				КонецЕсли;

			ИначеЕсли ВестиУчетПоРаботникам = Ложь Тогда // Удаляем

				Если Субконто = Неопределено Тогда // кто-то удалил вид субконто вручную!
					Продолжить;
				КонецЕсли;
				
				Объект.ВидыСубконто.Удалить(Субконто);
				
			КонецЕсли;
			
			Объект.Записать();
			
		КонецЦикла;
		
	КонецЦикла;
	
	Если ФормаПрогрессора.Открыта() Тогда
		ФормаПрогрессора.Закрыть();
	КонецЕсли;

	
КонецЕсли;
</Текст>
		</Алгоритм>
		<Алгоритм Имя="Проверка1" ИспользуетсяПриЗагрузке="false">
			<Текст>// Проверка № 1 ******************************************
// проверка сальдо и оборотов в целом по ИБ
КодПроверки = "";

//**********************************
// # Данные из 7.7
ВыбНачПериода = Параметры.ДатаВводаОстатков;
ВыбКонПериода = Параметры.ДатаКонцаПериодаВыгрузки;

Ит = СоздатьОбъект("БухгалтерскиеИтоги");
Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Ит.ВыполнитьЗапрос(ВыбНачПериода,);
Иначе
	Ит.ВыполнитьЗапрос(ВыбНачПериода, ВыбКонПериода);
КонецЕсли;

СНД = 0;
СНК = 0;
ДО = 0;
КО = 0;
СКД = 0;
СКК = 0;

Ит.ВыбратьСчета();
Пока Ит.ПолучитьСчет() = 1 Цикл
	Если Ит.Счет.Забалансовый = 1 Тогда
		Продолжить;
	КонецЕсли;
	Если Ит.Счет.Код = "00" Тогда
		Продолжить;
	КонецЕсли;

	СНД = СНД + Ит.СНД("С");
	СНК = СНК + Ит.СНК("С");
	ДО = ДО + Ит.ДО("С");
	КО = КО + Ит.КО("С");
	СКД = СКД + Ит.СКД("С");
	СКК = СКК + Ит.СКК("С");
КонецЦикла;

//**********************************
// # Модуль проверки в 8
КодПроверки = "
|	Запрос.Текст = 
|	""ВЫБРАТЬ
|	|	ХозрасчетныйОстаткиИОбороты.Счет КАК Счет,
|	|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт) КАК СуммаНачальныйОстатокДт,
|	|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт) КАК СуммаНачальныйОстатокКт,
|	|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаОборотДт) КАК СуммаОборотДт,
|	|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаОборотКт) КАК СуммаОборотКт,
|	|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт) КАК СуммаКонечныйОстатокДт,
|	|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт) КАК СуммаКонечныйОстатокКт
|	|ИЗ
|	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&amp;НачПериода, &amp;КонПериода, , , (НЕ Счет.Забалансовый) И (Счет.Код &lt;&gt; """"000"""") И (НЕ Счет.ЗапретитьИспользоватьВПроводках), , Организация = &amp;Организация) КАК ХозрасчетныйОстаткиИОбороты
|	|	
|	|ГДЕ
|	|	ХозрасчетныйОстаткиИОбороты.Счет.Забалансовый = ЛОЖЬ И
|	|	ХозрасчетныйОстаткиИОбороты.Счет.Код &lt;&gt; """"000""""
|	|
|	|СГРУППИРОВАТЬ ПО
|	|	ХозрасчетныйОстаткиИОбороты.Счет
|	|ИТОГИ ПО
|	|	Счет ИЕРАРХИЯ"";
|
|	Результат = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
|
|   ОтобразитьТекстСостояния(""Проверка итогового начального сальдо"");
|	Если Результат.Строки.Итог(""СуммаНачальныйОстатокДт"") &lt;&gt; " + СНД + " Тогда
| 		ЗафиксироватьОшибку(ЭтапКонвертации, ""Не совпадает итоговое начальное сальдо по дебету:
|							|	Значение в базе-источнике: " + СокрЛП(Формат(СНД, "Ч25.2, ")) + "
|							|	Значение в базе-приемнике: "" + Результат.Строки.Итог(""СуммаНачальныйОстатокДт""));
|   Иначе
|   	ОтобразитьТекстСостояния(""Проверка итогового начального сальдо по дебету прошла успешно"");
|	КонецЕсли;
|	Если Результат.Строки.Итог(""СуммаНачальныйОстатокКт"") &lt;&gt; " + СНК + " Тогда
| 		ЗафиксироватьОшибку(ЭтапКонвертации, ""Не совпадает итоговое начальное сальдо по кредиту:
|							|	Значение в базе-источнике: " + СокрЛП(Формат(СНК, "Ч25.2, ")) + "
|							|	Значение в базе-приемнике: "" + Результат.Строки.Итог(""СуммаНачальныйОстатокКт""));
|   Иначе
|   	ОтобразитьТекстСостояния(""Проверка итогового начального сальдо по кредиту прошла успешно"");
|	КонецЕсли;
|
|   ОтобразитьТекстСостояния(""Проверка итоговых оборотов за период"");
|	Если Результат.Строки.Итог(""СуммаОборотДт"") &lt;&gt; " + ДО + " Тогда
| 		ЗафиксироватьОшибку(ЭтапКонвертации, ""Не совпадает итоговый оборот по дебету:
|							|	Значение в базе-источнике: " + СокрЛП(Формат(ДО, "Ч25.2, ")) + "
|							|	Значение в базе-приемнике: "" + Результат.Строки.Итог(""СуммаОборотДт""));
|   Иначе
|   	ОтобразитьТекстСостояния(""Проверка итоговых оборотов по дебету прошла успешно"");
|	КонецЕсли;
|	Если Результат.Строки.Итог(""СуммаОборотКт"") &lt;&gt; " + КО + " Тогда
| 		ЗафиксироватьОшибку(ЭтапКонвертации, ""Не совпадает итоговый оборот по кредиту:
|							|	Значение в базе-источнике: " + СокрЛП(Формат(КО, "Ч25.2, ")) + "
|							|	Значение в базе-приемнике: "" + Результат.Строки.Итог(""СуммаОборотКт""));
|   Иначе
|   	ОтобразитьТекстСостояния(""Проверка итоговых оборотов по кредиту прошла успешно"");
|	КонецЕсли;
|
|   ОтобразитьТекстСостояния(""Проверка итогового конечного сальдо"");
|	Если Результат.Строки.Итог(""СуммаКонечныйОстатокДт"") &lt;&gt; " + СКД + " Тогда
| 		ЗафиксироватьОшибку(ЭтапКонвертации, ""Не совпадает итоговое конечное сальдо по дебету:
|							|	Значение в базе-источнике: " + СокрЛП(Формат(СКД, "Ч25.2, ")) + "
|							|	Значение в базе-приемнике: "" + Результат.Строки.Итог(""СуммаКонечныйОстатокДт""));
|   Иначе
|   	ОтобразитьТекстСостояния(""Проверка итогового конечного сальдо по дебету прошла успешно"");
|	КонецЕсли;
|	Если Результат.Строки.Итог(""СуммаКонечныйОстатокКт"") &lt;&gt; " + СКК + " Тогда
| 		ЗафиксироватьОшибку(ЭтапКонвертации, ""Не совпадает итоговое конечное сальдо по кредиту:
|							|	Значение в базе-источнике: " + СокрЛП(Формат(СКК, "Ч25.2, ")) + "
|							|	Значение в базе-приемнике: "" + Результат.Строки.Итог(""СуммаКонечныйОстатокКт""));
|   Иначе
|   	ОтобразитьТекстСостояния(""Проверка итогового конечного сальдо по кредиту прошла успешно"");
|	КонецЕсли;
|" ;

Возврат КодПроверки;

</Текст>
		</Алгоритм>
		<Алгоритм Имя="Проверка3" ИспользуетсяПриЗагрузке="false">
			<Текст>// Проверка № 3 ******************************************
// проверка налоговго учета - итоговые записи КУДиР
КодПроверки = "";

//**********************************
// # Данные из 7.7
КоллекцияОбъектов = Параметры.ПараметрыАлгоритмов.Получить("Раздел1");
Если ТипЗначенияСтр(КоллекцияОбъектов) &lt;&gt; "ТаблицаЗначений" Тогда
	Возврат КодПроверки;
КонецЕсли;

Если КоллекцияОбъектов.КоличествоСтрок() = 0 Тогда
	Возврат КодПроверки;
КонецЕсли;

Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Возврат КодПроверки;
КонецЕсли;


//**********************************
// # Модуль проверки в 8

КодПроверки = "
|Период = Дата(" + ДатаГод(Параметры.ДатаКонцаПериодаВыгрузки) + "," + ДатаМесяц(Параметры.ДатаКонцаПериодаВыгрузки)+ "," + ДатаЧисло(Параметры.ДатаКонцаПериодаВыгрузки)+");
|Графа4 = " + КоллекцияОбъектов.Итог("ДоходыБУ") + ";
|Графа5 = " + КоллекцияОбъектов.Итог("Доходы") + ";
|Графа6 = " + КоллекцияОбъектов.Итог("РасходыБУ") + ";
|Графа7 = " + КоллекцияОбъектов.Итог("Расходы") + ";
|
|Период = КонецКвартала(Период);
|
|Запрос.УстановитьПараметр(""НачалоГода"", НачалоГода(Период));
|Запрос.УстановитьПараметр(""Период"", КонецДня(Период));
|Запрос.Текст = ""ВЫБРАТЬ
||	КнигаУчетаДоходовИРасходовОбороты.Графа4Оборот КАК Графа4,
||	КнигаУчетаДоходовИРасходовОбороты.Графа5Оборот КАК Графа5,
||	КнигаУчетаДоходовИРасходовОбороты.Графа6Оборот КАК Графа6,
||	КнигаУчетаДоходовИРасходовОбороты.Графа7Оборот КАК Графа7,
||	КнигаУчетаДоходовИРасходовОбороты.Период КАК Период
||ИЗ
||	РегистрНакопления.КнигаУчетаДоходовИРасходов.Обороты(&amp;НачалоГода, &amp;Период, Квартал, Организация = &amp;Организация) КАК КнигаУчетаДоходовИРасходовОбороты
||
||УПОРЯДОЧИТЬ ПО
||	Период"";
|
|
|Результат = Запрос.Выполнить().Выгрузить();
|
|ОтобразитьТекстСостояния(""Проверка данных Книги учета доходов и расходов"");
|
|Если Результат.Итог(""Графа4"") &lt;&gt; Графа4 Тогда
|	ЗафиксироватьОшибку(ЭтапКонвертации, ""Не совпадает сумма доходов:
|	|	Значение в базе-источнике: " + СокрЛП(Формат(КоллекцияОбъектов.Итог("ДоходыБУ"),"Ч25.2, ")) + "
|	|	Значение в базе-приемнике: "" + Результат.Итог(""Графа4""));
|Иначе
|	ОтобразитьТекстСостояния(""Проверка суммы доходов прошла успешно"");
|КонецЕсли;
|
|Если Результат.Итог(""Графа5"") &lt;&gt; Графа5 Тогда
|	ЗафиксироватьОшибку(ЭтапКонвертации, ""Не совпадает сумма принимаемых доходов:
|	|	Значение в базе-источнике: " + СокрЛП(Формат(КоллекцияОбъектов.Итог("Доходы"),"Ч25.2, ")) + "
|	|	Значение в базе-приемнике: "" + Результат.Итог(""Графа5""));
|Иначе
|	ОтобразитьТекстСостояния(""Проверка суммы принимаемых доходов прошла успешно"");
|КонецЕсли;
|
|Если Результат.Итог(""Графа6"") &lt;&gt; Графа6 Тогда
|	ЗафиксироватьОшибку(ЭтапКонвертации, ""Не совпадает сумма расходов:
|	|	Значение в базе-источнике: " + СокрЛП(Формат(КоллекцияОбъектов.Итог("РасходыБУ"),"Ч25.2, ")) + "
|	|	Значение в базе-приемнике: "" + Результат.Итог(""Графа6""));
|Иначе
|	ОтобразитьТекстСостояния(""Проверка суммы расходов прошла успешно"");
|КонецЕсли;
|
|Если Результат.Итог(""Графа7"") &lt;&gt; Графа7 Тогда
|	ЗафиксироватьОшибку(ЭтапКонвертации, ""Не совпадает сумма принимаемых расходов:
|	|	Значение в базе-источнике: " + СокрЛП(Формат(КоллекцияОбъектов.Итог("Расходы"),"Ч25.2, ")) + "
|	|	Значение в базе-приемнике: "" + Результат.Итог(""Графа7""));
|Иначе
|	ОтобразитьТекстСостояния(""Проверка суммы принимаемых расходов прошла успешно"");
|КонецЕсли;
|";

Возврат КодПроверки;

</Текст>
		</Алгоритм>
		<Алгоритм Имя="Проверки" ИспользуетсяПриЗагрузке="false">
			<Текст>// Проверка № 1 ******************************************
// проверка сальдо и оборотов в целом по ИБ
КодПроверки = Проверка1();

// Проверка № 2 ******************************************
// проверка сальдо и оборотов по счетам
//КодПроверки = КодПроверки + Проверка2();

// Проверка № 3 ******************************************
// проверка налоговго учета - итоговые записи КУДиР
КодПроверки = КодПроверки + Проверка3();

Возврат КодПроверки;</Текст>
		</Алгоритм>
		<Алгоритм Имя="СинхронизацияТабличныхЧастей_45" ИспользуетсяПриЗагрузке="false">
			<Текст>КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");	
РасходыНоменклатура			= Параметры.РасходыНоменклатура;
ОсновнойСклад = Параметры.ПараметрыАлгоритмов.Получить("ОсновнойСклад");

ТаблицаТМЦ = СоздатьОбъект("ТаблицаЗначений");
РасходыНоменклатура.Выгрузить(ТаблицаТМЦ);
ТаблицаТМЦ.УдалитьСтроки();
ТаблицаТМЦ.НоваяКолонка("Поставщик");
ТаблицаТМЦ.НоваяКолонка("ДоговорПоставщика");

РасходыНоменклатура.ВыбратьСтроки();
Пока РасходыНоменклатура.ПолучитьСтроку() = 1 Цикл
	КоллекцияОбъектов.ВыбратьСтроки();
	Пока КоллекцияОбъектов.ПолучитьСтроку() = 1 Цикл
		Если (КоллекцияОбъектов.Субконто3 = РасходыНоменклатура.Номенклатура)
			И (КоллекцияОбъектов.Субконто2 = РасходыНоменклатура.ПартияСинхронизации) Тогда
			
			Количество 	= 0;
			Сумма	 	= 0;
			НДС			= 0;
			СуммаВал 	= 0;
			НДСВал		= 0;
			
			Если  (РасходыНоменклатура.Количество = 0) 
				И (РасходыНоменклатура.Сумма = 0) 
				И (РасходыНоменклатура.НДС = 0) Тогда
				Продолжить;
			Иначе
				Количество = Мин(РасходыНоменклатура.Количество, КоллекцияОбъектов.Количество);
				Сумма = КоллекцияОбъектов.Количество/РасходыНоменклатура.Количество * РасходыНоменклатура.Сумма;
				НДС   = КоллекцияОбъектов.Количество/РасходыНоменклатура.Количество * РасходыНоменклатура.НДС;
				СуммаВал = КоллекцияОбъектов.Количество/РасходыНоменклатура.Количество * РасходыНоменклатура.Сумма;
				НДСВал   = КоллекцияОбъектов.Количество/РасходыНоменклатура.Количество * РасходыНоменклатура.НДС;
				
				РасходыНоменклатура.Количество 	= РасходыНоменклатура.Количество - Количество;
				РасходыНоменклатура.НДС 		= РасходыНоменклатура.НДС - НДС;
				РасходыНоменклатура.Сумма 		= РасходыНоменклатура.Сумма - Сумма;
				РасходыНоменклатура.НДСВал 		= РасходыНоменклатура.НДСВал - НДСВал;
				РасходыНоменклатура.СуммаВал	= РасходыНоменклатура.СуммаВал - СуммаВал;
				
				КоллекцияОбъектов.Количество 	= КоллекцияОбъектов.Количество - Количество;
				КоллекцияОбъектов.Сумма 		= КоллекцияОбъектов.Сумма - Сумма;
				
			КонецЕсли;
				
			ТаблицаТМЦ.НоваяСтрока();
			ТаблицаТМЦ.Номенклатура 				= РасходыНоменклатура.Номенклатура;
			ТаблицаТМЦ.СчетУчета 					= КоллекцияОбъектов.СчетУчета;
			ТаблицаТМЦ.Склад	 					= ОсновнойСклад;
			ТаблицаТМЦ.СтатусыПартийУСН 			= РасходыНоменклатура.СтатусыПартийУСН;
			ТаблицаТМЦ.Контрагент 					= РасходыНоменклатура.ПартияСинхронизации.Владелец;
			ТаблицаТМЦ.ДоговорКонтрагента 			= РасходыНоменклатура.ПартияСинхронизации;
			ТаблицаТМЦ.РасчетныйДокумент 			= РасходыНоменклатура.ПартияСинхронизации;
			ТаблицаТМЦ.Поставщик			        = РасходыНоменклатура.Контрагент;
			ТаблицаТМЦ.ДоговорПоставщика	        = РасходыНоменклатура.ДоговорКонтрагента;
			ТаблицаТМЦ.ДокументОприходования        = РасходыНоменклатура.ДоговорКонтрагента;
			ТаблицаТМЦ.СтатусыОплатыРасходовУСН		= РасходыНоменклатура.СтатусыОплатыРасходовУСН;
			ТаблицаТМЦ.ОтражениеВУСН 				= РасходыНоменклатура.ОтражениеВУСН;
			ТаблицаТМЦ.Валюта 						= РасходыНоменклатура.Валюта;
			ТаблицаТМЦ.Количество 					= Количество;
			ТаблицаТМЦ.Сумма 						= Сумма;
			ТаблицаТМЦ.НДС 							= НДС;
			ТаблицаТМЦ.СуммаВал						= Сумма;
			ТаблицаТМЦ.НДСВал						= НДС;
			
		КонецЕсли;
	КонецЦикла;
КонецЦикла;

КоллекцияОбъектов.ВыбратьСтроки();
Пока КоллекцияОбъектов.ПолучитьСтроку() = 1 Цикл
	Если (КоллекцияОбъектов.Количество &lt;&gt; 0)
		ИЛИ (КоллекцияОбъектов.Сумма &lt;&gt; 0) Тогда
		ТаблицаТМЦ.НоваяСтрока();
		ТаблицаТМЦ.Номенклатура 				= КоллекцияОбъектов.Субконто3;
		ТаблицаТМЦ.СчетУчета 					= КоллекцияОбъектов.СчетУчета;
		ТаблицаТМЦ.Склад	 					= ОсновнойСклад;
		ТаблицаТМЦ.СтатусыПартийУСН 			= "Купленные";
		ТаблицаТМЦ.Контрагент 					= КоллекцияОбъектов.Субконто1;
		ТаблицаТМЦ.ДоговорКонтрагента 			= КоллекцияОбъектов.Субконто2;
		ТаблицаТМЦ.РасчетныйДокумент 			= КоллекцияОбъектов.Субконто2;
		ТаблицаТМЦ.Поставщик			        = "";
		ТаблицаТМЦ.ДоговорПоставщика	        = "";
		ТаблицаТМЦ.ДокументОприходования        = "";
		ТаблицаТМЦ.СтатусыОплатыРасходовУСН		= "НеСписано";
		ТаблицаТМЦ.ОтражениеВУСН 				= "НеПринимаются";
		ТаблицаТМЦ.Валюта 						= Параметры.Рубли;
		ТаблицаТМЦ.Количество 					= КоллекцияОбъектов.Количество;
		ТаблицаТМЦ.Сумма 						= КоллекцияОбъектов.Сумма;
		//ТаблицаТМЦ.НДС 							= НДС;
		ТаблицаТМЦ.СуммаВал						= КоллекцияОбъектов.Сумма;
		//ТаблицаТМЦ.НДСВал						= НДС;
	КонецЕсли;
КонецЦикла;

ВходящиеДанные.Установить("ВходящиеОстатки", ТаблицаТМЦ);	

</Текст>
		</Алгоритм>
		<Алгоритм Имя="СинхронизацияТабличныхЧастей_Взаиморасчеты" ИспользуетсяПриЗагрузке="false">
			<Текст>КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");	
ОстаткиПоВзаиморасчетамСПокупателями 	= Параметры.ОстаткиПоВзаиморасчетамСПокупателями;

ТаблицаВзаиморасчетов = СоздатьОбъект("ТаблицаЗначений");
ОстаткиПоВзаиморасчетамСПокупателями.Выгрузить(ТаблицаВзаиморасчетов);
Таблицавзаиморасчетов.УдалитьСтроки();

КоллекцияОбъектов.ВыбратьСтроки();
Пока КоллекцияОбъектов.ПолучитьСтроку() = 1 Цикл
	Если (КоллекцияОбъектов.Сумма &lt;&gt; 0) 
		ИЛИ (КоллекцияОбъектов.СуммаКт &lt;&gt; 0) Тогда
		ТаблицаВзаиморасчетов.НоваяСтрока();
		
		Если КоллекцияОбъектов.Сумма &lt;&gt; 0 Тогда
			ТаблицаВзаиморасчетов.ВидЗадолженности = "Дебиторская";
			ТаблицаВзаиморасчетов.СуммаВзаиморасчетов 	= КоллекцияОбъектов.Сумма;
		Иначе
			ТаблицаВзаиморасчетов.ВидЗадолженности = "Кредиторская";
			ТаблицаВзаиморасчетов.СуммаВзаиморасчетов 	= КоллекцияОбъектов.СуммаКт;
		КонецЕсли;
		ТаблицаВзаиморасчетов.СчетУчета				= КоллекцияОбъектов.СчетУчета;				
		ТаблицаВзаиморасчетов.Контрагент 			= КоллекцияОбъектов.Субконто1;
		ТаблицаВзаиморасчетов.ДоговорКонтрагента 	= КоллекцияОбъектов.Субконто2;
		ТаблицаВзаиморасчетов.РасчетныйДокумент		= КоллекцияОбъектов.Субконто2;
		ТаблицаВзаиморасчетов.Валюта				= КоллекцияОбъектов.Валюта;
		ТаблицаВзаиморасчетов.СуммаВзаиморасчетовВал= КоллекцияОбъектов.ВалютнаяСумма;
		Если ПустоеЗначение(КоллекцияОбъектов.Валюта) = 1 Тогда
			ТаблицаВзаиморасчетов.Валюта				= Параметры.Рубли;
			ТаблицаВзаиморасчетов.СуммаВзаиморасчетовВал= ТаблицаВзаиморасчетов.СуммаВзаиморасчетов;
		КонецЕсли;
		
	КонецЕсли;
КонецЦикла;

ВходящиеДанные.Установить("ВходящиеОстатки", ТаблицаВзаиморасчетов);	

</Текст>
		</Алгоритм>
		<Алгоритм Имя="СинхронизацияТабличныхЧастей_ВНА" ИспользуетсяПриЗагрузке="false">
			<Текст>КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");	
РасходыНоменклатура			= Параметры.РасходыНоменклатура;

ТаблицаТМЦ = СоздатьОбъект("ТаблицаЗначений");
РасходыНоменклатура.Выгрузить(ТаблицаТМЦ);
ТаблицаТМЦ.УдалитьСтроки();

ОсновнойСклад = Параметры.ПараметрыАлгоритмов.Получить("ОсновнойСклад");

КоллекцияОбъектов.ВыбратьСтроки();
Пока КоллекцияОбъектов.ПолучитьСтроку() = 1 Цикл
	Если (КоллекцияОбъектов.Количество &lt;&gt; 0)
		ИЛИ (КоллекцияОбъектов.Сумма &lt;&gt; 0) Тогда
		
		Склад = "";
		Если (КоллекцияОбъектов.СчетУчета = "ПриобретениеОбъектовОсновныхСредств")
			ИЛИ (КоллекцияОбъектов.СчетУчета = "ОборудованиеКУстановке") Тогда
			Склад = ОсновнойСклад;
		КонецЕсли;
		
		ТаблицаТМЦ.НоваяСтрока();
		ТаблицаТМЦ.Номенклатура 				= КоллекцияОбъектов.Субконто1;
		ТаблицаТМЦ.СчетУчета 					= КоллекцияОбъектов.СчетУчета;
		ТаблицаТМЦ.Склад	 					= Склад;
		ТаблицаТМЦ.Количество 					= КоллекцияОбъектов.Количество;
		ТаблицаТМЦ.Сумма 						= КоллекцияОбъектов.Сумма;
		
		Если (КоллекцияОбъектов.СчетУчета &lt;&gt; "СтроительствоОбъектовОсновныхСредств") 
			И (КоллекцияОбъектов.СчетУчета &lt;&gt; "ПриобретениеНематериальныхАктивов") 
			И (КоллекцияОбъектов.СчетУчета &lt;&gt; "ВыполнениеНИОКР") Тогда
			
			ТаблицаТМЦ.СтатусыПартийУСН 			= "Купленные";
			ТаблицаТМЦ.СтатусыОплатыРасходовУСН		= "НеСписано";
			ТаблицаТМЦ.ОтражениеВУСН 				= "НеПринимаются";			
			ТаблицаТМЦ.Валюта 						= Параметры.Рубли;
			ТаблицаТМЦ.СуммаВал						= КоллекцияОбъектов.Сумма;
		КонецЕсли;
		
	КонецЕсли;
КонецЦикла;

ВходящиеДанные.Установить("ВходящиеОстатки", ТаблицаТМЦ);	

</Текст>
		</Алгоритм>
		<Алгоритм Имя="СинхронизацияТабличныхЧастей_Налоги" ИспользуетсяПриЗагрузке="false">
			<Текст>КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");	
РасходыНалоги			= Параметры.ОстаткиПоВзаиморасчетамПоНалогам;

ТаблицаНалогов = СоздатьОбъект("ТаблицаЗначений");
РасходыНалоги.Выгрузить(ТаблицаНалогов);
ТаблицаНалогов.УдалитьСтроки();
ТаблицаНалогов.НоваяКолонка("СчетУчета");
ТаблицаНалогов.НоваяКолонка("ВидПлатежаВБюджет");
ТаблицаНалогов.НоваяКолонка("Сумма");
ТаблицаНалогов.НоваяКолонка("СуммаКт");

РасходыНалоги.ВыбратьСтроки();
Пока РасходыНалоги.ПолучитьСтроку() = 1 Цикл
	КоллекцияОбъектов.ВыбратьСтроки();
	Пока КоллекцияОбъектов.ПолучитьСтроку() = 1 Цикл
		Если (КоллекцияОбъектов.СчетКт = РасходыНалоги.СчетРасчетовПоНалогу)
			ИЛИ (КоллекцияОбъектов.СчетДт = РасходыНалоги.СчетРасчетовПоНалогу) Тогда
			
			Сумма	 	= 0;
			СуммаКт	 	= 0;
			
			Если  РасходыНалоги.СуммаВзаиморасчетов = 0 Тогда
				Продолжить;
			Иначе
				Сумма = Мин(РасходыНалоги.СуммаВзаиморасчетов, КоллекцияОбъектов.Сумма);
				СуммаКт = Мин(РасходыНалоги.СуммаВзаиморасчетов, КоллекцияОбъектов.СуммаКт);
				
				РасходыНалоги.СуммаВзаиморасчетов 	= РасходыНалоги.СуммаВзаиморасчетов - Сумма;
				РасходыНалоги.СуммаВзаиморасчетов 	= РасходыНалоги.СуммаВзаиморасчетов - СуммаКт;

				КоллекцияОбъектов.Сумма 		= КоллекцияОбъектов.Сумма - Сумма;
				КоллекцияОбъектов.СуммаКт 		= КоллекцияОбъектов.СуммаКт - СуммаКт;
				
			КонецЕсли;
				
			ТаблицаНалогов.НоваяСтрока();
			ТаблицаНалогов.ВидПлатежаВБюджет 			= КоллекцияОбъектов.Субконто1;
			ТаблицаНалогов.СчетУчета 					= КоллекцияОбъектов.СчетУчета;
			ТаблицаНалогов.ОтражениеВУСН 				= РасходыНалоги.ОтражениеВУСН;
			ТаблицаНалогов.Сумма 						= Сумма;
			ТаблицаНалогов.СуммаКт						= СуммаКт;
			
		КонецЕсли;
	КонецЦикла;
КонецЦикла;

КоллекцияОбъектов.ВыбратьСтроки();
Пока КоллекцияОбъектов.ПолучитьСтроку() = 1 Цикл
	Если (КоллекцияОбъектов.Сумма &lt;&gt; 0) 
		ИЛИ (КоллекцияОбъектов.СуммаКт &lt;&gt; 0) Тогда
		ТаблицаНалогов.НоваяСтрока();
		ТаблицаНалогов.ВидПлатежаВБюджет 			= "Налог";
		ТаблицаНалогов.СчетУчета 					= КоллекцияОбъектов.СчетУчета;
		ТаблицаНалогов.ОтражениеВУСН 				= "НеПринимаются";
		ТаблицаНалогов.Сумма						= КоллекцияОбъектов.Сумма;
		ТаблицаНалогов.СуммаКт						= КоллекцияОбъектов.СуммаКт;
	КонецЕсли;
КонецЦикла;

ВходящиеДанные.Установить("ВходящиеОстатки", ТаблицаНалогов);	

</Текст>
		</Алгоритм>
		<Алгоритм Имя="СинхронизацияТабличныхЧастей_РБП" ИспользуетсяПриЗагрузке="false">
			<Текст>КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");	
РасходыРБП			= Параметры.РасходыРБП;

ТаблицаРБП = СоздатьОбъект("ТаблицаЗначений");
РасходыРБП.Выгрузить(ТаблицаРБП);
ТаблицаРБП.УдалитьСтроки();
ТаблицаРБП.НоваяКолонка("СчетУчета");

РасходыРБП.ВыбратьСтроки();
Пока РасходыРБП.ПолучитьСтроку() = 1 Цикл
	КоллекцияОбъектов.ВыбратьСтроки();
	Пока КоллекцияОбъектов.ПолучитьСтроку() = 1 Цикл
		Если (КоллекцияОбъектов.Субконто1 = РасходыРБП.РБП)
			И (КоллекцияОбъектов.Субконто3 = РасходыРБП.ДоговорКонтрагента) Тогда
			
			Сумма	 	= 0;
			НДС			= 0;
			СуммаВал 	= 0;
			НДСВал		= 0;
			
			Если (РасходыРБП.Сумма = 0) 
				И (РасходыРБП.НДС = 0) Тогда
				Продолжить;
			Иначе
				Сумма = РасходыРБП.Сумма;
				НДС   = РасходыРБП.НДС;
				СуммаВал = РасходыРБП.СуммаВал;
				НДСВал   = РасходыРБП.НДСВал;
				
				РасходыРБП.НДС 		= 0;
				РасходыРБП.Сумма 	= 0;
				РасходыРБП.НДСВал 	= 0;
				РасходыРБП.СуммаВал	= 0;
				
				КоллекцияОбъектов.Сумма 		= КоллекцияОбъектов.Сумма - Сумма;
				
			КонецЕсли;
				
			ТаблицаРБП.НоваяСтрока();
			ТаблицаРБП.РБП			 				= РасходыРБП.РБП;
			ТаблицаРБП.СчетУчета 					= КоллекцияОбъектов.СчетУчета;
			ТаблицаРБП.Контрагент 					= РасходыРБП.Контрагент;
			ТаблицаРБП.ДоговорКонтрагента 			= РасходыРБП.ДоговорКонтрагента;
			ТаблицаРБП.РасчетныйДокумент 			= РасходыРБП.РасчетныйДокумент;
			ТаблицаРБП.СтатусыОплатыРасходовУСН		= РасходыРБП.СтатусыОплатыРасходовУСН;
			ТаблицаРБП.ОтражениеВУСН 				= РасходыРБП.ОтражениеВУСН;
			ТаблицаРБП.Валюта 						= РасходыРБП.Валюта;
			ТаблицаРБП.Сумма 						= Сумма;
			ТаблицаРБП.НДС 							= НДС;
			ТаблицаРБП.СуммаВал						= СуммаВал;
			ТаблицаРБП.НДСВал						= НДСВал;
			
		КонецЕсли;
	КонецЦикла;
КонецЦикла;

КоллекцияОбъектов.ВыбратьСтроки();
Пока КоллекцияОбъектов.ПолучитьСтроку() = 1 Цикл
	Если КоллекцияОбъектов.Сумма &lt;&gt; 0 Тогда
		ТаблицаРБП.НоваяСтрока();
		ТаблицаРБП.РБП			 				= КоллекцияОбъектов.Субконто1;
		ТаблицаРБП.СчетУчета 					= КоллекцияОбъектов.СчетУчета;
		ТаблицаРБП.Контрагент 					= КоллекцияОбъектов.Субконто2;
		ТаблицаРБП.ДоговорКонтрагента 			= КоллекцияОбъектов.Субконто3;
		ТаблицаРБП.РасчетныйДокумент 			= КоллекцияОбъектов.Субконто3;
		ТаблицаРБП.СтатусыОплатыРасходовУСН		= "НеСписано";
		ТаблицаРБП.ОтражениеВУСН 				= "НеПринимаются";
		ТаблицаРБП.Валюта 						= Параметры.Рубли;
		ТаблицаРБП.Сумма 						= КоллекцияОбъектов.Сумма;
		//ТаблицаРБП.НДС 							= НДС;
		ТаблицаРБП.СуммаВал						= КоллекцияОбъектов.Сумма;
		//ТаблицаРБП.НДСВал						= НДС;
	КонецЕсли;
КонецЦикла;

ВходящиеДанные.Установить("ВходящиеОстатки", ТаблицаРБП);	

</Текст>
		</Алгоритм>
		<Алгоритм Имя="СинхронизацияТабличныхЧастей_Сотрудники" ИспользуетсяПриЗагрузке="false">
			<Текст>КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");	
ОстаткиПоВзаиморасчетамССотрудниками 	= Параметры.ОстаткиПоВзаиморасчетамCСотрудниками;

ТаблицаВзаиморасчетов = СоздатьОбъект("ТаблицаЗначений");
ОстаткиПоВзаиморасчетамССотрудниками.Выгрузить(ТаблицаВзаиморасчетов);
ТаблицаВзаиморасчетов.УдалитьСтроки();

КоллекцияОбъектов.ВыбратьСтроки();
Пока КоллекцияОбъектов.ПолучитьСтроку() = 1 Цикл
	Если (КоллекцияОбъектов.Сумма &lt;&gt; 0) 
		ИЛИ (КоллекцияОбъектов.СуммаКт &lt;&gt; 0) Тогда
		ТаблицаВзаиморасчетов.НоваяСтрока();
		ТаблицаВзаиморасчетов.СчетУчета		= "РасчетыПоДепонированнымСуммам";
		
		Если КоллекцияОбъектов.Сумма &lt;&gt; 0 Тогда
			ТаблицаВзаиморасчетов.ВидЗадолженности = "Дебиторская";
			ТаблицаВзаиморасчетов.СуммаВзаиморасчетов 	= - КоллекцияОбъектов.Сумма;
		Иначе
			ТаблицаВзаиморасчетов.ВидЗадолженности = "Кредиторская";
			ТаблицаВзаиморасчетов.СуммаВзаиморасчетов 	= КоллекцияОбъектов.СуммаКт;
		КонецЕсли;
		
		ТаблицаВзаиморасчетов.Работник	 			= КоллекцияОбъектов.Субконто1;
		ТаблицаВзаиморасчетов.ОтражениеВУСН		 	= "НеПринимаются";
		ТаблицаВзаиморасчетов.Ведомость			 	= "ВедомостьПоДепонентам";
		
	КонецЕсли;
КонецЦикла;

ВходящиеДанные.Установить("ВходящиеОстатки", ТаблицаВзаиморасчетов);	

</Текст>
		</Алгоритм>
		<Алгоритм Имя="СинхронизацияТабличныхЧастей_ТМЦ" ИспользуетсяПриЗагрузке="false">
			<Текст>КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");	
РасходыНоменклатура			= Параметры.РасходыНоменклатура;
ОсновнойСклад = Параметры.ПараметрыАлгоритмов.Получить("ОсновнойСклад");

ТаблицаТМЦ = СоздатьОбъект("ТаблицаЗначений");
РасходыНоменклатура.Выгрузить(ТаблицаТМЦ);
ТаблицаТМЦ.УдалитьСтроки();

РасходыНоменклатура.ВыбратьСтроки();
Пока РасходыНоменклатура.ПолучитьСтроку() = 1 Цикл
	КоллекцияОбъектов.ВыбратьСтроки();
	Пока КоллекцияОбъектов.ПолучитьСтроку() = 1 Цикл
		Если (КоллекцияОбъектов.Субконто1 = РасходыНоменклатура.Номенклатура)
			И (КоллекцияОбъектов.Субконто3 = РасходыНоменклатура.РасчетныйДокумент) Тогда
			
			Количество 	= 0;
			Сумма	 	= 0;
			НДС			= 0;
			СуммаВал 	= 0;
			НДСВал		= 0;
			
			Если  (РасходыНоменклатура.Количество = 0) 
				И (РасходыНоменклатура.Сумма = 0) 
				И (РасходыНоменклатура.НДС = 0) Тогда
				Продолжить;
			Иначе
				Количество = Мин(РасходыНоменклатура.Количество, КоллекцияОбъектов.Количество);
				Если Количество = 0 Тогда
					Продолжить;					
				КонецЕсли;
				Сумма = КоллекцияОбъектов.Количество/РасходыНоменклатура.Количество * РасходыНоменклатура.Сумма;
				НДС   = КоллекцияОбъектов.Количество/РасходыНоменклатура.Количество * РасходыНоменклатура.НДС;
				СуммаВал = КоллекцияОбъектов.Количество/РасходыНоменклатура.Количество * РасходыНоменклатура.СуммаВал;
				НДСВал   = КоллекцияОбъектов.Количество/РасходыНоменклатура.Количество * РасходыНоменклатура.НДСВал;
				
				
				Если РасходыНоменклатура.Валюта = Параметры.Рубли Тогда
					СуммаВал = Сумма;
					НДСВал = НДС;
				КонецЕсли;
				
				Если (Сумма = 0) И (Количество = 0) Тогда
					Продолжить;
				КонецЕсли;
				
				РасходыНоменклатура.Количество 	= РасходыНоменклатура.Количество - Количество;
				РасходыНоменклатура.НДС 		= РасходыНоменклатура.НДС - НДС;
				РасходыНоменклатура.Сумма 		= РасходыНоменклатура.Сумма - Сумма;
				РасходыНоменклатура.НДСВал 		= РасходыНоменклатура.НДСВал - НДСВал;
				РасходыНоменклатура.СуммаВал	= РасходыНоменклатура.СуммаВал - СуммаВал;
				
				КоллекцияОбъектов.Количество 	= КоллекцияОбъектов.Количество - Количество;
				КоллекцияОбъектов.Сумма 		= КоллекцияОбъектов.Сумма - Сумма;
				
			КонецЕсли;
			
			Склад = ОсновнойСклад;
			Если ПустоеЗначение(КоллекцияОбъектов.Субконто2) = 0 Тогда
				Если КоллекцияОбъектов.Субконто2.Вид() = "МестаХранения" Тогда
					Склад = КоллекцияОбъектов.Субконто2;
				КонецЕсли;
			КонецЕсли;
			
			ТаблицаТМЦ.НоваяСтрока();
			ТаблицаТМЦ.Номенклатура 				= РасходыНоменклатура.Номенклатура;
			ТаблицаТМЦ.СчетУчета 					= КоллекцияОбъектов.СчетУчета;
			ТаблицаТМЦ.Склад	 					= Склад;
			ТаблицаТМЦ.СтатусыПартийУСН 			= РасходыНоменклатура.СтатусыПартийУСН;
			ТаблицаТМЦ.Контрагент 					= РасходыНоменклатура.Контрагент;
			ТаблицаТМЦ.ДоговорКонтрагента 			= РасходыНоменклатура.ДоговорКонтрагента;
			ТаблицаТМЦ.РасчетныйДокумент 			= РасходыНоменклатура.РасчетныйДокумент;
			ТаблицаТМЦ.ДокументОприходования        = РасходыНоменклатура.ДокументОприходования;
			ТаблицаТМЦ.СтатусыОплатыРасходовУСН		= РасходыНоменклатура.СтатусыОплатыРасходовУСН;
			ТаблицаТМЦ.ОтражениеВУСН 				= РасходыНоменклатура.ОтражениеВУСН;
			ТаблицаТМЦ.Валюта 						= РасходыНоменклатура.Валюта;
			ТаблицаТМЦ.Количество 					= Количество;
			ТаблицаТМЦ.Сумма 						= Сумма;
			ТаблицаТМЦ.НДС 							= НДС;
			ТаблицаТМЦ.СуммаВал						= СуммаВал;
			ТаблицаТМЦ.НДСВал						= НДСВал;
			
		КонецЕсли;
	КонецЦикла;
КонецЦикла;

КоллекцияОбъектов.ВыбратьСтроки();
Пока КоллекцияОбъектов.ПолучитьСтроку() = 1 Цикл             
	Если (ПустоеЗначение(КоллекцияОбъектов.Количество) = 1) Тогда
		Продолжить;
	Иначе
		
		Склад = ОсновнойСклад;
		Если ПустоеЗначение(КоллекцияОбъектов.Субконто2) = 0 Тогда
			Если КоллекцияОбъектов.Субконто2.Вид() = "МестаХранения" Тогда
				Склад = КоллекцияОбъектов.Субконто2;
			КонецЕсли;
		КонецЕсли;
		
		ТаблицаТМЦ.НоваяСтрока();
		ТаблицаТМЦ.Номенклатура 				= КоллекцияОбъектов.Субконто1;
		ТаблицаТМЦ.СчетУчета 					= КоллекцияОбъектов.СчетУчета;
		ТаблицаТМЦ.Склад	 					= Склад;
		ТаблицаТМЦ.СтатусыПартийУСН 			= "Купленные";
		ТаблицаТМЦ.Контрагент 					= "";
		ТаблицаТМЦ.ДоговорКонтрагента 			= "";
		ТаблицаТМЦ.РасчетныйДокумент 			= "";
		ТаблицаТМЦ.ДокументОприходования        = "";
		ТаблицаТМЦ.СтатусыОплатыРасходовУСН		= "НеСписано";
		ТаблицаТМЦ.ОтражениеВУСН 				= "НеПринимаются";
		ТаблицаТМЦ.Валюта 						= Параметры.Рубли;
		ТаблицаТМЦ.Количество 					= КоллекцияОбъектов.Количество;
		ТаблицаТМЦ.Сумма 						= КоллекцияОбъектов.Сумма;
		ТаблицаТМЦ.СуммаВал						= КоллекцияОбъектов.Сумма;
	КонецЕсли;
КонецЦикла;

ВходящиеДанные.Установить("ВходящиеОстатки", ТаблицаТМЦ);	

</Текст>
		</Алгоритм>
		<Алгоритм Имя="СкопироватьСтрокуТаблицы" ИспользуетсяПриЗагрузке="false">
			<Текст>Проводки = Параметры.ПараметрыАлгоритмов.Получить("ТаблицаДляКопирования");

НС = Проводки.НомерСтроки;

Проводки.НоваяСтрока();
Для НК = 1 по Проводки.КоличествоКолонок() Цикл
	
	Если ТипЗначенияСтр(Проводки.ПолучитьЗначение(НС, НК)) = "ТаблицаЗначений" Тогда
		ВложеннаяТаблица = СоздатьОбъект("ТаблицаЗначений");
		Проводки.ПолучитьЗначение(НС, НК).Выгрузить(ВложеннаяТаблица);
		Проводки.УстановитьЗначение(НС+1, НК, ВложеннаяТаблица);
	Иначе
		Проводки.УстановитьЗначение(НС+1, НК, Проводки.ПолучитьЗначение(НС, НК));
	КонецЕсли;
	
КонецЦикла;

Параметры.ПараметрыАлгоритмов.Установить("ТаблицаДляКопирования", Проводки);</Текст>
		</Алгоритм>
		<Алгоритм Имя="УстановитьСтатусОплатыНоменклатуры" ИспользуетсяПриЗагрузке="false">
			<Текст>ОстаткиНаКонец = Параметры.ПараметрыАлгоритмов.Получить("ОстаткиНаКонец");
ТекущийСчет = Параметры.ПараметрыАлгоритмов.Получить("ТекущийСчет");

Если ОстаткиНаКонец = 1 Тогда
	ВременнаяТаблицаРасчетов = Параметры.ВременнаяТаблицаРасчетовКон;
Иначе
	ВременнаяТаблицаРасчетов = Параметры.ВременнаяТаблицаРасчетовНач;
КонецЕсли;

СтрокаРасходов 			 = Параметры.СтрокаТаблицыЗначений;
РасходыНоменклатура		 = Параметры.РасходыНоменклатура;

СтатусОплачено = "НеСписано";
СтатусНеОплачено = "НеСписаноНеОплачено";

Если (Параметры.ПараметрыАлгоритмов.Получить("ПорядокПризнанияРасходовПоТоварам") = Перечисление.ПорядокПризнанияРасходовПоТоварам.ПоОплатеПоставщику.Идентификатор()) Тогда
	ТоварыПоОплате = 1;
КонецЕсли;

Если (Параметры.ПараметрыАлгоритмов.Получить("ПорядокПризнанияРасходовПоТоварам") = Перечисление.ПорядокПризнанияРасходовПоТоварам.ПоФактуРеализации.Идентификатор()) Тогда
	РасходыПоОтгрузке = 1;
КонецЕсли;

Если (Параметры.ПараметрыАлгоритмов.Получить("ПорядокПризнанияРасходовПоТоварам") = Перечисление.ПорядокПризнанияРасходовПоТоварам.ПоФактуПолученияДохода.Идентификатор()) Тогда
	РасходыПоДоходам = 1;
КонецЕсли;

Если (Параметры.ПараметрыАлгоритмов.Получить("ПорядокПризнанияМатериальныхРасходов") = Перечисление.ПорядокПризнанияМатериальныхРасходов.ПоОплатеПоставщику.Идентификатор()) Тогда
	МатериалыПоОплате = 1;
КонецЕсли;	

Если (ТекущийСчет = СчетПоКоду("45")) ИЛИ
	(ТекущийСчет = СчетПоКоду("41.1")) ИЛИ
	(ТекущийСчет = СчетПоКоду("41.2")) ИЛИ
	(ТекущийСчет = СчетПоКоду("41.3")) Тогда
	ЭтоТовар = 1;
КонецЕсли;	

Если(ТекущийСчет = СчетПоКоду("10.1")) ИЛИ
	(ТекущийСчет = СчетПоКоду("10.2")) ИЛИ
	(ТекущийСчет = СчетПоКоду("10.3")) Тогда
	ЭтоМатериал = 1;
КонецЕсли;	

Если (((ТоварыПоОплате = 1) И (ЭтоТовар = 1)) ИЛИ ((МатериалыПоОплате = 1) И (ЭтоМатериал = 1))) Тогда
	РасходыПоОплате = 1;
КонецЕсли;

Если РасходыПоОплате = 1 Тогда
	Если Параметры.ПараметрыАлгоритмов.Получить("ОтражениеВНУДт") = "Принимаются" Тогда
		СтатусОплачено = "НеСписаноПринято";
	Иначе
		СтатусОплачено = "НеСписано";
	КонецЕсли;	
	
	СтатусНеОплачено = "НеСписаноНеОплачено";
Конецесли;

СуммаРасходов 		= СтрокаРасходов.Сумма;
НДСРасходов 		= СтрокаРасходов.НДС;
КоличествоРасходов 	= СтрокаРасходов.Количество;

СуммаНеОплаченная = 0;

ВременнаяТаблицаРасчетов.ВыбратьСтроки();
Пока ВременнаяТаблицаРасчетов.Получитьстроку() = 1 Цикл
	Если (ВременнаяТаблицаРасчетов.ТабличнаяЧасть		&lt;&gt; "ВзаиморасчетыСПоставщиками") ИЛИ 
		((ВременнаяТаблицаРасчетов.РасчетныйДокумент 	&lt;&gt; СтрокаРасходов.РасчетныйДокумент) ИЛИ 
		(ВременнаяТаблицаРасчетов.ОтражениеВНУ 		&lt;&gt; СтрокаРасходов.ОтражениеВУСН)) Тогда
		Продолжить;
	КонецЕсли;
	
	Долг 			= Мин(СуммаРасходов, ВременнаяТаблицаРасчетов.Сумма);
	ДолгНДС 		= Мин(НДСРасходов, ВременнаяТаблицаРасчетов.НДС);
	
	СуммаРасходов 	= СуммаРасходов - Долг;
	НДСРасходов 	= НДСРасходов - ДолгНДС;
	ВременнаяТаблицаРасчетов.Сумма 	= Число(ВременнаяТаблицаРасчетов.Сумма) - Долг;
	ВременнаяТаблицаРасчетов.НДС 	= Число(ВременнаяТаблицаРасчетов.НДС) - ДолгНДС;
	
	СуммаНеОплаченная = СуммаНеОплаченная + Долг;
	
	Если СуммаРасходов = 0 Тогда
		Прервать;
	КонецЕсли;
КонецЦикла;
Коэфф = (СтрокаРасходов.Сумма - СуммаНеОплаченная)/СтрокаРасходов.Сумма;

Если (Коэфф &gt; 0) И (Коэфф &lt; 1) Тогда
	
	//Расходы
	РасходыНоменклатура.НоваяСтрока();
	РасходыНоменклатура.Номенклатура 				= СтрокаРасходов.Номенклатура;
	РасходыНоменклатура.СчетУчета 					= СтрокаРасходов.СчетУчета;
	РасходыНоменклатура.ДокументОприходования 		= СтрокаРасходов.ДокументОприходования;
	РасходыНоменклатура.СтатусыПартийУСН 			= СтрокаРасходов.СтатусыПартийУСН;
	РасходыНоменклатура.Контрагент 					= СтрокаРасходов.Контрагент;
	РасходыНоменклатура.ДоговорКонтрагента 			= СтрокаРасходов.ДоговорКонтрагента;
	РасходыНоменклатура.РасчетныйДокумент 			= СтрокаРасходов.РасчетныйДокумент; 
	РасходыНоменклатура.СтатусыОплатыРасходовУСН 	= СтрокаРасходов.СтатусыОплатыРасходовУСН;
	РасходыНоменклатура.ОтражениеВУСН 				= СтрокаРасходов.ОтражениеВУСН;
	РасходыНоменклатура.Валюта 						= СтрокаРасходов.Валюта;
	РасходыНоменклатура.Количество 					= СтрокаРасходов.Количество;
	РасходыНоменклатура.Сумма 						= СтрокаРасходов.Сумма;
	РасходыНоменклатура.НДС 						= СтрокаРасходов.НДС;
	РасходыНоменклатура.СуммаВал					= СтрокаРасходов.СуммаВал;
	РасходыНоменклатура.НДСВал 						= СтрокаРасходов.НДСВал;

	
	СтрокаРасходов.СтатусыОплатыРасходовУСН			= СтатусОплачено;
	СтрокаРасходов.Количество 						= Коэфф*СтрокаРасходов.Количество;
	СтрокаРасходов.Сумма 							= Коэфф*СтрокаРасходов.Сумма;
	СтрокаРасходов.НДС 								= Коэфф*СтрокаРасходов.НДС;
	
	РасходыНоменклатура.СтатусыОплатыРасходовУСН 	= СтатусНеОплачено;
	РасходыНоменклатура.Количество 					= РасходыНоменклатура.Количество - СтрокаРасходов.Количество;
	РасходыНоменклатура.Сумма 						= РасходыНоменклатура.Сумма - СтрокаРасходов.Сумма;
	РасходыНоменклатура.НДС 						= РасходыНоменклатура.НДС - СтрокаРасходов.НДС;
	РасходыНоменклатура.СуммаВал					= РасходыНоменклатура.Сумма - СтрокаРасходов.СуммаВал;
	РасходыНоменклатура.НДСВал 						= РасходыНоменклатура.НДС - СтрокаРасходов.НДСВал;
	
	РасходыНоменклатура.ТекущаяСтрока(СтрокаРасходов.ИндексСтроки);
	РасходыНоменклатура.СтатусыОплатыРасходовУСН 	= СтрокаРасходов.СтатусыОплатыРасходовУСН;
	РасходыНоменклатура.Количество 					= СтрокаРасходов.Количество;
	РасходыНоменклатура.Сумма 						= СтрокаРасходов.Сумма;
	РасходыНоменклатура.НДС 						= СтрокаРасходов.НДС;
	
КонецЕсли;


Если Коэфф = 0 Тогда //Полностью не оплачено
	СтрокаРасходов.СтатусыОплатыРасходовУСН		= СтатусНеОплачено;
	РасходыНоменклатура.ТекущаяСтрока(СтрокаРасходов.ИндексСтроки);
	РасходыНоменклатура.СтатусыОплатыРасходовУСН 	= СтрокаРасходов.СтатусыОплатыРасходовУСН;
КонецЕсли;

Если Коэфф = 1 Тогда //Полностью оплачено
	СтрокаРасходов.СтатусыОплатыРасходовУСН		= СтатусОплачено;
	РасходыНоменклатура.ТекущаяСтрока(СтрокаРасходов.ИндексСтроки);
	РасходыНоменклатура.СтатусыОплатыРасходовУСН 	= СтрокаРасходов.СтатусыОплатыРасходовУСН;
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="УстановитьСтатусОплатыРБП" ИспользуетсяПриЗагрузке="false">
			<Текст>	РасходыНоменклатура		 = Параметры.РасходыНоменклатура;
	СтрокаРасходов 			 = Параметры.СтрокаТаблицыЗначений;
	ВременнаяТаблицаРасчетов = Параметры.ВременнаяТаблицаРасчетов;
	
	СтатусОплачено = "НеСписано";
	СтатусНеОплачено = "НеСписаноНеОплачено";
	
	СуммаРасходов 		= СтрокаРасходов.Сумма;
	НДСРасходов 		= СтрокаРасходов.НДС;
	
	СуммаНеОплаченная = 0;
	ВременнаяТаблицаРасчетов.ВыбратьСтроки();
	Пока ВременнаяТаблицаРасчетов.Получитьстроку() = 1 Цикл
		Если ((ВременнаяТаблицаРасчетов.ТабличнаяЧасть		&lt;&gt; "ВзаиморасчетыСПоставщиками") И 
			 (ВременнаяТаблицаРасчетов.РасчетныйДокумент 	&lt;&gt; СтрокаРасходов.РасчетныйДокумент) И 
			 (ВременнаяТаблицаРасчетов.ОтражениеВНУ 		&lt;&gt; СтрокаРасходов.ОтражениеВУСН)) Тогда
			 Продолжить;
		КонецЕсли;

		Долг 			= Мин(СуммаРасходов, ВременнаяТаблицаРасчетов.Сумма);
		ДолгНДС 		= Мин(НДСРасходов, ВременнаяТаблицаРасчетов.НДС);
		
		СуммаРасходов 	= СуммаРасходов - Долг;
		НДСРасходов 	= НДСРасходов - ДолгНДС;
		ВременнаяТаблицаРасчетов.Сумма 	= ВременнаяТаблицаРасчетов.Сумма - Долг;
		ВременнаяТаблицаРасчетов.НДС 	= ВременнаяТаблицаРасчетов.НДС - ДолгНДС;
		
		СуммаНеОплаченная = СуммаНеОплаченная + Долг;
		
		Если СуммаРасходов = 0 Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Коэфф = (СтрокаРасходов.Сумма - СуммаНеОплаченная)/СтрокаРасходов.Сумма;
	
	Если (Коэфф &gt; 0) И (Коэфф &lt; 1) Тогда
		
		//Расходы
		РасходыНоменклатура.НоваяСтрока();
		РасходыНоменклатура.Номенклатура				= СтрокаРасходов.РБП;
		РасходыНоменклатура.Контрагент 					= СтрокаРасходов.Контрагент;
		РасходыНоменклатура.ДоговорКонтрагента 			= СтрокаРасходов.ДоговорКонтрагента;
		РасходыНоменклатура.РасчетныйДокумент 			= СтрокаРасходов.РасчетныйДокумент; 
		РасходыНоменклатура.СтатусыОплатыРасходовУСН 	= СтрокаРасходов.СтатусыОплатыРасходовУСН;
		РасходыНоменклатура.ОтражениеВУСН 				= СтрокаРасходов.ОтражениеВУСН;
		РасходыНоменклатура.Валюта 						= СтрокаРасходов.Валюта;
		РасходыНоменклатура.Сумма 						= СтрокаРасходов.Сумма;
		РасходыНоменклатура.НДС 						= СтрокаРасходов.НДС;
		РасходыНоменклатура.СуммаВал					= СтрокаРасходов.СуммаВал;
		РасходыНоменклатура.НДСВал 						= СтрокаРасходов.НДСВал;

		
		СтрокаРасходов.СтатусыОплатыРасходовУСН		= СтатусОплачено;
		СтрокаРасходов.Сумма 						= Коэфф*СтрокаРасходов.Сумма;
		СтрокаРасходов.НДС 							= Коэфф*СтрокаРасходов.НДС;
		СтрокаРасходов.СуммаВал						= Коэфф*СтрокаРасходов.СуммаВал;
		СтрокаРасходов.НДСВал 						= Коэфф*СтрокаРасходов.НДСВал;
		
		РасходыНоменклатура.СтатусыОплатыРасходовУСН 	= СтатусНеОплачено;
		

	КонецЕсли;

	
	Если Коэфф = 0 Тогда //Полностью не оплачено
		СтрокаРасходов.СтатусыОплатыРасходовУСН		= СтатусНеОплачено;
		

	КонецЕсли;
	
	Если Коэфф = 1 Тогда //Полностью оплачено
		СтрокаРасходов.СтатусыОплатыРасходовУСН		= СтатусОплачено;
	КонецЕсли;</Текст>
		</Алгоритм>
	</Алгоритмы>
	<Запросы/>
</ПравилаОбмена>

<ПравилаОбмена>
	<ВерсияФормата>2.01</ВерсияФормата>
	<Ид>ded74cae-996f-496a-9ae8-097c45f9bfab    </Ид>
	<Наименование>Бухгалтерский учет, ред. 4.5 --&gt; Бухгалтерия предприятия КОРП</Наименование>
	<ДатаВремяСоздания>2011-09-06T12:55:12</ДатаВремяСоздания>
	<Источник ВерсияПлатформы="7.7" ВерсияКонфигурации="" СинонимКонфигурации="">Бухгалтерский учет, редакция 4.5</Источник>
	<Приемник ВерсияПлатформы="8.0" ВерсияКонфигурации="2.0.24.5" СинонимКонфигурации="Бухгалтерия предприятия КОРП, редакция 2.0">БухгалтерияПредприятияКОРП</Приемник>
	<ПередВыгрузкойДанных>Если ПустоеЗначение(ДатаНачала) = 1 Тогда
	Если Форма.МодальныйРежим() = 0 Тогда
		Предупреждение("Не указана дата начала периода выгрузки!");
	Иначе   
		Сообщить("Не указана дата начала периода выгрузки!");
	КонецЕсли;
	Отказ = 1;
КонецЕсли;
Если ДатаНачала &gt; ДатаОкончания Тогда
	Если Форма.МодальныйРежим() = 0 Тогда
		Предупреждение("Неправильно задан период выгрузки!"+РазделительСтрок+
		"Дата начала больше даты окончания периода.");
	Иначе
		Сообщить("Неправильно задан период выгрузки!"+РазделительСтрок+
		"Дата начала больше даты окончания периода.");
	КонецЕсли;
	Отказ = 1;
КонецЕсли;
Если ДатаОкончания &gt; КонецРассчитанногоПериодаБИ() Тогда
	Если Форма.МодальныйРежим() = 0 Тогда
		Предупреждение("За выбранный период итоги не рассчитаны!"+РазделительСтрок+
		"Расчет итогов выполняется в режиме"+РазделительСтрок+
		"""Операции - Управление бухгалтерскими итогами"".");
	Иначе           
		Сообщить("За выбранный период итоги не рассчитаны!"+РазделительСтрок+
		"Расчет итогов выполняется в режиме"+РазделительСтрок+
		"""Операции - Управление бухгалтерскими итогами"".");
	КонецЕсли;
	Отказ = 1;
КонецЕсли;

Параметры.ДатаВводаОстатков = ДатаНачала;
Параметры.ДатаКонцаПериодаВыгрузки = ДатаОкончания;

Параметры.СчетВводаОстатков = СчетПоКоду("00");
Параметры.ДлинаКода = 9; // стандартная длина кодов справочников в 8.0

Параметры.СписокРаботников = СоздатьОбъект("ТаблицаЗначений");
Параметры.СписокРаботников.НоваяКолонка("ФизЛицо"); // общее во всех талицах

Параметры.СписокУволенныхРаботников = СоздатьОбъект("ТаблицаЗначений");
Параметры.СписокУволенныхРаботников.НоваяКолонка("ФизЛицо");

Параметры.СписокОбъектовСтроительства = СоздатьОбъект("ТаблицаЗначений");
Параметры.СписокОбъектовСтроительства.НоваяКолонка("ОбъектСтроительства");
Параметры.СписокОбъектовСтроительства.НоваяКолонка("СчетБухгалтерскогоУчета");
Параметры.СписокОбъектовСтроительства.НоваяКолонка("СчетБухгалтерскогоУчетаНДС");

Параметры.ВычетыСотрудниковпоНДФЛ = СоздатьОбъект("ТаблицаЗначений");
Параметры.ВычетыСотрудниковпоНДФЛ.НоваяКолонка("Физлицо");
Параметры.ВычетыСотрудниковпоНДФЛ.НоваяКолонка("КодВычета");
Параметры.ВычетыСотрудниковпоНДФЛ.НоваяКолонка("Период", "Дата");
Параметры.ВычетыСотрудниковпоНДФЛ.НоваяКолонка("ПериодЗавершения", "Дата");
Параметры.ВычетыСотрудниковпоНДФЛ.НоваяКолонка("КоличествоДетей", "Число");

Параметры.ВычетыСотрудниковпоНДФЛЛичный = СоздатьОбъект("ТаблицаЗначений");
Параметры.ВычетыСотрудниковпоНДФЛЛичный.НоваяКолонка("Физлицо");
Параметры.ВычетыСотрудниковпоНДФЛЛичный.НоваяКолонка("КодВычетаЛичный", "Строка");
Параметры.ВычетыСотрудниковпоНДФЛЛичный.НоваяКолонка("Период", "Дата");
Параметры.ВычетыСотрудниковпоНДФЛЛичный.НоваяКолонка("ПериодЗавершения", "Дата");

СпрВалюты = СоздатьОбъект("Справочник.Валюты");
Если (СпрВалюты.НайтиПоКоду("810") = 1)	Тогда
	Параметры.Рубли = СпрВалюты.ТекущийЭлемент();
ИначеЕсли (СпрВалюты.НайтиПоКоду("643") = 1) Тогда
	Параметры.Рубли = СпрВалюты.ТекущийЭлемент();
КонецЕсли;

Параметры.ПараметрыАлгоритмов = СоздатьОбъект("СписокЗначений");

Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "Прочее");

Параметры.ТаблицаПроводок = СоздатьОбъект("ТаблицаЗначений");
Параметры.ТаблицаПроводок.НоваяКолонка("СчетДт");
Параметры.ТаблицаПроводок.НоваяКолонка("СчетКт");
Параметры.ТаблицаПроводок.НоваяКолонка("ВидУчетаДт");
Параметры.ТаблицаПроводок.НоваяКолонка("ВидУчетаКт");
Параметры.ТаблицаПроводок.НоваяКолонка("КодСчетаДт");
Параметры.ТаблицаПроводок.НоваяКолонка("КодСчетаКт");
Параметры.ТаблицаПроводок.НоваяКолонка("ВалютаДт");
Параметры.ТаблицаПроводок.НоваяКолонка("ВалютаКт");
Параметры.ТаблицаПроводок.НоваяКолонка("СубконтоДт");
Параметры.ТаблицаПроводок.НоваяКолонка("СубконтоКт");
Параметры.ТаблицаПроводок.НоваяКолонка("Сумма");
Параметры.ТаблицаПроводок.НоваяКолонка("ВалютнаяСуммаДт");
Параметры.ТаблицаПроводок.НоваяКолонка("ВалютнаяСуммаКт");
Параметры.ТаблицаПроводок.НоваяКолонка("КоличествоДт");
Параметры.ТаблицаПроводок.НоваяКолонка("КоличествоКт");

//*********************************************************
// Исключительно для упрощения формирования документа ВНО
Параметры.ТаблицаПроводок.НоваяКолонка("СчетУчета");
Параметры.ТаблицаПроводок.НоваяКолонка("СчетУчетаНУ");
Параметры.ТаблицаПроводок.НоваяКолонка("СуммаКт");
Параметры.ТаблицаПроводок.НоваяКолонка("Валюта");
Параметры.ТаблицаПроводок.НоваяКолонка("ВалютнаяСумма");
Параметры.ТаблицаПроводок.НоваяКолонка("Количество", "Число");
Параметры.ТаблицаПроводок.НоваяКолонка("Субконто1");
Параметры.ТаблицаПроводок.НоваяКолонка("Субконто2");
Параметры.ТаблицаПроводок.НоваяКолонка("Субконто3");
Параметры.ТаблицаПроводок.НоваяКолонка("СуммаНУ", "Число");
Параметры.ТаблицаПроводок.НоваяКолонка("СуммаПР", "Число");
Параметры.ТаблицаПроводок.НоваяКолонка("СуммаВР", "Число");
Параметры.ТаблицаПроводок.НоваяКолонка("СуммаНДС", "Число");
Параметры.ТаблицаПроводок.НоваяКолонка("СуммаМЦ", "Число");
//*********************************************************
// Учет специфики БП с ОП
Параметры.ТаблицаПроводок.НоваяКолонка("СуммаНУДт", "Число");
Параметры.ТаблицаПроводок.НоваяКолонка("СуммаПРДт", "Число");
Параметры.ТаблицаПроводок.НоваяКолонка("СуммаВРДт", "Число");
Параметры.ТаблицаПроводок.НоваяКолонка("СуммаНУКт", "Число");
Параметры.ТаблицаПроводок.НоваяКолонка("СуммаПРКт", "Число");
Параметры.ТаблицаПроводок.НоваяКолонка("СуммаВРКт", "Число");


//***
Параметры.ПараметрыАлгоритмов.Установить("КоличествоСубконто", 1);

Параметры.ТаблицаОстатковНУ = СоздатьОбъект("ТаблицаЗначений");
Параметры.ТаблицаОстатковНУ.НоваяКолонка("СчетДт");
Параметры.ТаблицаОстатковНУ.НоваяКолонка("Субконто1");
Параметры.ТаблицаОстатковНУ.НоваяКолонка("Субконто2");
Параметры.ТаблицаОстатковНУ.НоваяКолонка("Субконто3");
Параметры.ТаблицаОстатковНУ.НоваяКолонка("СуммаНУ", "Число");
Параметры.ТаблицаОстатковНУ.НоваяКолонка("СуммаПР", "Число");
Параметры.ТаблицаОстатковНУ.НоваяКолонка("СуммаВР", "Число");
Параметры.ТаблицаОстатковНУ.НоваяКолонка("Количество", "Число");

Параметры.ТаблицаОстатковМЦ = СоздатьОбъект("ТаблицаЗначений");

//*********************************************************

Параметры.ТаблицаПроводокОбороты = СоздатьОбъект("ТаблицаЗначений");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("СчетДт");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("СчетКт");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("КодСчетаДт");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("КодСчетаКт");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("ВидУчетаДт");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("ВидУчетаКт");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("ВалютаДт");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("ВалютаКт");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("СубконтоДт");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("СубконтоКт");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("Сумма");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("ВалютнаяСуммаДт");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("ВалютнаяСуммаКт");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("КоличествоДт");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("КоличествоКт");
//*********************************************************
// Учет специфики БП с ОП
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("СуммаНУДт", "Число");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("СуммаПРДт", "Число");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("СуммаВРДт", "Число");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("СуммаНУКт", "Число");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("СуммаПРКт", "Число");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("СуммаВРКт", "Число");


Параметры.ТаблицаДоговоров = СоздатьОбъект("ТаблицаЗначений");
Параметры.ТаблицаДоговоров.НоваяКолонка("Договор");
Параметры.ТаблицаДоговоров.НоваяКолонка("ВидДоговора");

// Учетная политика
СписокЭлементов1 = СоздатьОбъект("СписокЗначений");
СписокЭлементов2 = СоздатьОбъект("СписокЗначений");

//определим учет в отпускных ценах
БухИтЗаГод = СоздатьОбъект("БухгалтерскиеИтоги");
БухИтЗаГод.ПериодМНГ(Параметры.ДатаКонцаПериодаВыгрузки);
Если (БухИтЗаГод.КО("42") &lt;&gt; 0) или (БухИтЗаГод.СКД("42") &lt;&gt; 0) Тогда
	УчетПоПродажнымЦенам = 1;
	
Иначе
	УчетПоПродажнымЦенам = 0;
КонецЕсли;

// Бухгалтерский учет
Для Год = 1980 по ДатаГод(Параметры.ДатаКонцаПериодаВыгрузки) Цикл
	ДатаПолученияЗначений = Дата(Год, 12, 31);
	ДатаУстановкиЗначений = Дата(Год, 1, 1);
	СписокЭлементов2.ДобавитьЗначение(?(Константа.ДиректКостинг.Получить(ДатаПолученияЗначений) = Да, 1, 0), "ДиректКостинг");
	СписокЭлементов2.ДобавитьЗначение(?(Константа.ПрименяетсяПБУ18.Получить(ДатаПолученияЗначений) = Да, 1, 0), "ПоддержкаПБУ18");
	СписокЭлементов2.ДобавитьЗначение(Константа.БазаРаспределенияКосвенныхРасходовПоВидамДеятельности.Получить(ДатаПолученияЗначений), "БазаРаспределенияКосвенныхРасходовПоВидамДеятельности");
	СписокЭлементов2.ДобавитьЗначение(Константа.МетодОпределенияВыручки.Получить(ДатаПолученияЗначений), "МоментОпределенияНалоговойБазыНДС");
	СписокЭлементов2.ДобавитьЗначение(Константа.НалоговыйПериодПоНДС.Получить(ДатаПолученияЗначений), "НДСНалоговыйПериод");
	СписокЭлементов2.ДобавитьЗначение(Константа.ОсобенностиИсчисленияНДФЛ.Получить(ДатаПолученияЗначений), "ОсобенностиИсчисленияНДФЛ");
	СписокЭлементов2.ДобавитьЗначение(?(Константа.РозницаОблагаетсяЕНВД.Получить(ДатаПолученияЗначений) = Да, 1, 0), "РозничнаяТорговляОблагаетсяЕНВД");
	СписокЭлементов2.ДобавитьЗначение(?(Константа.УчитыватьПоложительныеСуммовыеРазницыПриНачисленииНДС.Получить(ДатаПолученияЗначений) = Да, 1, 0), "УчитыватьПоложительныеСуммовыеРазницыПриНачисленииНДС");
	СписокЭлементов2.ДобавитьЗначение(?(Константа.УчитыватьОтрицательныеСуммовыеРазницыПриНачисленииНДС.Получить(ДатаПолученияЗначений) = Да, 1, 0), "УчитыватьОтрицательныеСуммовыеРазницыПриНачисленииНДС");
	СписокЭлементов2.ДобавитьЗначение(?(Константа.УчитыватьПоложительныеСуммовыеРазницыПриОпределенииВычетовПоНДС.Получить(ДатаПолученияЗначений) = Да, 1, 0), "УчитыватьПоложительныеСуммовыеРазницыПриОпределенииВычетовПоНДС");
	СписокЭлементов2.ДобавитьЗначение(?(Константа.УчитыватьОтрицательныеСуммовыеРазницыПриОпределенииВычетовПоНДС.Получить(ДатаПолученияЗначений) = Да, 1, 0), "УчитыватьОтрицательныеСуммовыеРазницыПриОпределенииВычетовПоНДС");
	СписокЭлементов2.ДобавитьЗначение(?(Константа.ФормироватьСчетФактуруПоУЕвРублях.Получить(ДатаПолученияЗначений) = Да, 1, 0), "ФормироватьСчетФактуруПоУЕвРублях");
	СписокЭлементов2.ДобавитьЗначение(?(УчетПоПродажнымЦенам = 1, "ПоПродажнойСтоимости", "ПоСтоимостиПриобретения" ), "СпособОценкиТоваровВРознице");
	СписокЭлементов2.ДобавитьЗначение(Константа.МетодНачисленияАмортизацииНУ.Получить(ДатаПолученияЗначений), "МетодНачисленияАмортизацииНУ");
	СписокЭлементов2.ДобавитьЗначение(Константа.ТарифСтраховыхВзносов.Получить(ДатаПолученияЗначений), "ВидТарифаСтраховыхВзносов");
	СписокЭлементов2.ДобавитьЗначение(Константа.УчитыватьДоходыИРасходыВНУПоКурсуАвансов.Получить(ДатаПолученияЗначений), "УчитыватьРасходыНУАналогичноБУ");
	
	Для НомерЭлемента = 1 по СписокЭлементов2.РазмерСписка() Цикл
		ПредставлениеЗначения = "";
		Значение2 = СписокЭлементов2.ПолучитьЗначение(НомерЭлемента, ПредставлениеЗначения);
		Значение1 = СписокЭлементов1.Получить(ПредставлениеЗначения);
		
		Если Значение1 &lt;&gt; Значение2 Тогда
			
			СписокЭлементов2.ДобавитьЗначение(ДатаУстановкиЗначений, "Период");				
			ВыгрузитьПоПравилу(,, СписокЭлементов2,, "УчетнаяПолитикаБухгалтерскийУчет");
			
			СписокЭлементов1.УдалитьВсе();
			СписокЭлементов2.УдалитьЗначение(СписокЭлементов2.РазмерСписка());
			
			СписокЭлементов2.Выгрузить(СписокЭлементов1);
			СписокЭлементов2.УдалитьВсе();
			Прервать;
		КонецЕсли;
	КонецЦикла;
	СписокЭлементов2.УдалитьВсе();
КонецЦикла;

//Зарегистрируем изменение УП для ввода данных по отдельным регистрам
СписокЭлементов1 = СоздатьОбъект("СписокЗначений");
СписокЭлементов2 = СоздатьОбъект("СписокЗначений");
Если Параметры.ДатаКонцаПериодаВыгрузки &gt; Параметры.ДатаВводаОстатков Тогда
	ДатаПолученияЗначений = КонМесяца(Параметры.ДатаКонцаПериодаВыгрузки + 1);
	ДатаУстановкиЗначений = КонМесяца(Параметры.ДатаКонцаПериодаВыгрузки + 1);
	СписокЭлементов2.ДобавитьЗначение(?(Константа.ДиректКостинг.Получить(ДатаПолученияЗначений) = Да, 1, 0), "ДиректКостинг");
	СписокЭлементов2.ДобавитьЗначение(?(Константа.ПрименяетсяПБУ18.Получить(ДатаПолученияЗначений) = Да, 1, 0), "ПоддержкаПБУ18");
	СписокЭлементов2.ДобавитьЗначение(Константа.БазаРаспределенияКосвенныхРасходовПоВидамДеятельности.Получить(ДатаПолученияЗначений), "БазаРаспределенияКосвенныхРасходовПоВидамДеятельности");
	СписокЭлементов2.ДобавитьЗначение(Константа.МетодОпределенияВыручки.Получить(ДатаПолученияЗначений), "МоментОпределенияНалоговойБазыНДС");
	СписокЭлементов2.ДобавитьЗначение(Константа.НалоговыйПериодПоНДС.Получить(ДатаПолученияЗначений), "НДСНалоговыйПериод");
	СписокЭлементов2.ДобавитьЗначение(Константа.ОсобенностиИсчисленияНДФЛ.Получить(ДатаПолученияЗначений), "ОсобенностиИсчисленияНДФЛ");
	СписокЭлементов2.ДобавитьЗначение(?(Константа.РозницаОблагаетсяЕНВД.Получить(ДатаПолученияЗначений) = Да, 1, 0), "РозничнаяТорговляОблагаетсяЕНВД");
	СписокЭлементов2.ДобавитьЗначение(?(Константа.УчитыватьПоложительныеСуммовыеРазницыПриНачисленииНДС.Получить(ДатаПолученияЗначений) = Да, 1, 0), "УчитыватьПоложительныеСуммовыеРазницыПриНачисленииНДС");
	СписокЭлементов2.ДобавитьЗначение(?(Константа.УчитыватьОтрицательныеСуммовыеРазницыПриНачисленииНДС.Получить(ДатаПолученияЗначений) = Да, 1, 0), "УчитыватьОтрицательныеСуммовыеРазницыПриНачисленииНДС");
	СписокЭлементов2.ДобавитьЗначение(?(Константа.УчитыватьПоложительныеСуммовыеРазницыПриОпределенииВычетовПоНДС.Получить(ДатаПолученияЗначений) = Да, 1, 0), "УчитыватьПоложительныеСуммовыеРазницыПриОпределенииВычетовПоНДС");
	СписокЭлементов2.ДобавитьЗначение(?(Константа.УчитыватьОтрицательныеСуммовыеРазницыПриОпределенииВычетовПоНДС.Получить(ДатаПолученияЗначений) = Да, 1, 0), "УчитыватьОтрицательныеСуммовыеРазницыПриОпределенииВычетовПоНДС");
	СписокЭлементов2.ДобавитьЗначение(?(Константа.ФормироватьСчетФактуруПоУЕвРублях.Получить(ДатаПолученияЗначений) = Да, 1, 0), "ФормироватьСчетФактуруПоУЕвРублях");
	СписокЭлементов2.ДобавитьЗначение(?(УчетПоПродажнымЦенам = 1, "ПоПродажнойСтоимости", "ПоСтоимостиПриобретения" ), "СпособОценкиТоваровВРознице");
	СписокЭлементов2.ДобавитьЗначение(Константа.МетодНачисленияАмортизацииНУ.Получить(ДатаПолученияЗначений), "МетодНачисленияАмортизацииНУ");
	СписокЭлементов2.ДобавитьЗначение(Константа.ТарифСтраховыхВзносов.Получить(ДатаПолученияЗначений), "ВидТарифаСтраховыхВзносов");
	СписокЭлементов2.ДобавитьЗначение(Константа.УчитыватьДоходыИРасходыВНУПоКурсуАвансов.Получить(ДатаПолученияЗначений), "УчитыватьРасходыНУАналогичноБУ");
	
	Для НомерЭлемента = 1 по СписокЭлементов2.РазмерСписка() Цикл
		ПредставлениеЗначения = "";
		Значение2 = СписокЭлементов2.ПолучитьЗначение(НомерЭлемента, ПредставлениеЗначения);
		Значение1 = СписокЭлементов1.Получить(ПредставлениеЗначения);
		
		Если Значение1 &lt;&gt; Значение2 Тогда
			
			СписокЭлементов2.ДобавитьЗначение(ДатаУстановкиЗначений, "Период");				
			ВыгрузитьПоПравилу(,, СписокЭлементов2,, "УчетнаяПолитикаБухгалтерскийУчет");
			
			СписокЭлементов1.УдалитьВсе();
			СписокЭлементов2.УдалитьЗначение(СписокЭлементов2.РазмерСписка());
			
			СписокЭлементов2.Выгрузить(СписокЭлементов1);
			СписокЭлементов2.УдалитьВсе();
			Прервать;
		КонецЕсли;
	КонецЦикла;
	СписокЭлементов2.УдалитьВсе();
КонецЕсли;


ВыгрузитьПоПравилу(,,,, "УчетнаяПолитикаПоПерсоналу");

Параметры.ТаблицаСчетовРазделовУчета = СоздатьОбъект("ТаблицаЗначений");
Параметры.ТаблицаСчетовРазделовУчета.НоваяКолонка("СчетаГруппы");
Параметры.ТаблицаСчетовРазделовУчета.НоваяКолонка("Счета");
Параметры.ТаблицаСчетовРазделовУчета.НоваяКолонка("СчетаИсключения");
Параметры.ТаблицаСчетовРазделовУчета.НоваяКолонка("РазделУчета");

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "ОсновныеСредства";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "01, 02, 03";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= """010""";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= """10"", ""11"", ""001"", ""011""";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "НематериальныеАктивыИНИОКР";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "04, 05";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= "";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= "";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "КапитальныеВложения";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "07, 08";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= "";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= "";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "Материалы";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "10";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= "";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= "";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "НезавершенноеПроизводство";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "20, 23";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= "";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= "";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "Товары";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "41";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= "";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= "";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "ГотоваяПродукцияИПолуфабрикаты";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "43, 21";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= "";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= "";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "ТоварыОтгруженные";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "45";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= "";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= "";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "ДенежныеСредства";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "50, 51, 52, 53, 54, 55, 56, 57, 58, 59";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= "";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= "";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "РасчетыСПоставщикамиИПодрядчиками";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "60";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= "";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= """60.3""";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "РасчетыСПокупателямиИЗаказчиками";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "62";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= "";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= """62.3""";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "РасчетыПоНалогамИСборам";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "68, 69";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= "";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= "";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "РасчетыСПерсоналомПоОплатеТрудаИДепонентам";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "70";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= """76.4""";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= """76""";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "РасчетыСПодотчетнымиЛицами";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "71";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= "";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= "";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "РасчетыСУчредителями";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "75";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= "";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= "";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "РасчетыСПрочимиДебиторамиИКредиторами";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "76";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= "";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= """76.3"", ""76.4"", ""76.1.2"", ""76.1.3"", ""76.1.4"", ""76.1.1"", ""76.11"", ""76.АВ"", ""76.ВА"", ""76.Н"", ""76.Н.1"", ""76.Н.2"", ""76.Н.3""";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "НДСПоПриобретеннымЦенностям";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "19";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= "";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= "";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "НДСПоАвансамПолученным";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= """76.АВ"",""76.ВА""";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= """76""";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "Капитал";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "80, 81, 82, 83, 84, 85, 86";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= "";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= "";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "РасходыБудущихПериодов";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "97";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= "";//""76.1.2"", ""76.1.3"", ""76.1.4""";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= "";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "ОтложенныеНалоговыеАктивыОбязательства";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "09, 77";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= "";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= "";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "НДСНачисленный";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= """90.03""";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= "";</ПередВыгрузкойДанных>
	<ПослеВыгрузкиДанных>ВыгрузитьПоПравилу(,,,, "Работники");
ВыгрузитьПоПравилу(,,,, "УволенныеРаботники");

ВходящиеДанные = СоздатьОбъект("СписокЗначений");
Параметры.СписокОбъектовСтроительства.ВыбратьСтроки();
Пока Параметры.СписокОбъектовСтроительства.ПолучитьСтроку() = 1 Цикл
	ВходящиеДанные.УдалитьВсе();
	ВходящиеДанные.Установить("ОбъектСтроительства", Параметры.СписокОбъектовСтроительства.ОбъектСтроительства);
	ВходящиеДанные.Установить("СчетБухгалтерскогоУчета", Параметры.СписокОбъектовСтроительства.СчетБухгалтерскогоУчета);
	ВходящиеДанные.Установить("СчетБухгалтерскогоУчетаНДС", Параметры.СписокОбъектовСтроительства.СчетБухгалтерскогоУчетаНДС);
	ВыгрузитьПоПравилу(,, ВходящиеДанные,, "СчетаУчетаОбъектовСтроительства");
КонецЦикла;

Параметры.ТаблицаДоговоров.ВыбратьСтроки();
Пока Параметры.ТаблицаДоговоров.ПолучитьСтроку() = 1 Цикл
	ВходящиеДанные.УдалитьВсе();
	ВидДоговора = Параметры.ТаблицаДоговоров.ВидДоговора;
	ВидДоговора = ?(ПустоеЗначение(ВидДоговора) = 1, "Прочее", ВидДоговора);
	ВходящиеДанные.Установить("ВидДоговора", ВидДоговора);
	ВыгрузитьПоПравилу(Параметры.ТаблицаДоговоров.Договор,, ВходящиеДанные,, "ДоговорыКонтрагентовПоВидам");
КонецЦикла;

//****************************************
// Добавляем сведени о конфигурации и ИБ
ВыгрузитьСведенияОбИБ();

//****************************************
// Добавляем код проверок данных
ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("ИдентификаторКонфигурации", глИдентификаторКонфигурации());
ВыгрузитьПоПравилу(,, ВходящиеДанные,, "КонвертацииИзИнформационныхБаз1СПредприятия77");</ПослеВыгрузкиДанных>
	<ПередЗагрузкойДанных>//*********************************************************************************************
// Настройка параметров учета
//*********************************************************************************************

// Склады
// если не включен складской учет - то включим его принудительно
БУ = ПланыСчетов.Хозрасчетный.Товары.ПолучитьОбъект();

ВестиПартионныйУчетБУ = НЕ (БУ.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Партии, "ВидСубконто") = Неопределено);
ВестиСкладскойУчетБУ  = НЕ (БУ.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады, "ВидСубконто") = Неопределено);

Если ВестиСкладскойУчетБУ Тогда
	ВестиСуммовойУчетПоСкладамБУ = БУ.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады, "ВидСубконто").Суммовой;
Иначе
	ВестиСуммовойУчетПоСкладамБУ = Ложь;
КонецЕсли;

Если НЕ ВестиСкладскойУчетБУ Тогда
	ОбщегоНазначения.ПрименитьПараметрыАналитикиМПЗ(ВестиПартионныйУчетБУ, Истина, ВестиСуммовойУчетПоСкладамБУ,);
КонецЕсли;

//*********************************************************************************************
// Денежные средства
Выполнить(Алгоритмы.ПрименитьПараметрыДляСчетовДенежныхСредств);

//*********************************************************************************************

//Работники
// Алгоритм читает значение константы 7.7 и при необходимости включает аналитику на счете 70
Выполнить(Алгоритмы.ПрименитьПараметрыРасчетовССотрудниками);</ПередЗагрузкойДанных>
	<ПослеЗагрузкиОбъекта>Если ИмяТипаОбъекта = "Справочник" Тогда
	Если НЕ ЗначениеЗаполнено(Объект.Код) Тогда
		Объект.УстановитьНовыйКод();
	КонецЕсли;
	
ИначеЕсли ИмяТипаОбъекта = "Документ" Тогда
	Если НЕ ЗначениеЗаполнено(Объект.Номер) Тогда
		Объект.УстановитьНовыйНомер();
	КонецЕсли;
КонецЕсли;</ПослеЗагрузкиОбъекта>
	<Параметры>
		<Параметр Имя="БУ_ДатаКонца                                      " Наименование="Бухгалерские итоги" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ВыгружатьКоды                                     " Наименование="Выгружать коды справочников" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="true" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ВычетыСотрудниковпоНДФЛ                           " Наименование="Таблицы вычетов сотрудников по НДФЛ" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ВычетыСотрудниковпоНДФЛЛичный                     " Наименование="Таблица личных вычетов сотрудников по НДФЛ" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ДатаВводаОстатков                                 " Наименование="Дата ввода остатков" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ДатаКонцаПериодаВыгрузки                          " Наименование="Дата конца периода выгрузки" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ДлинаКода                                         " Наименование="Длина кодов справочников" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ПараметрыАлгоритмов                               " Наименование="Параметры алгоритмов" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="РазделУчета                                       " Наименование="Текущий раздел учета" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="Рубли                                             " Наименование="Рубли" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="СписокНМА                                         " Наименование="Список НМА" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="СписокОбъектовСтроительства                       " Наименование="Список объектов строительства" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="СписокОС                                          " Наименование="Список ОС" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="СписокРаботников                                  " Наименование="Список работников" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="СписокУволенныхРаботников                         " Наименование="Список уволенных работников" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="СчетВводаОстатков                                 " Наименование="Счет ввода остатков" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ТаблицаДоговоров                                  " Наименование="Таблица договоров" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ТаблицаОстатковМЦ                                 " Наименование="Таблица остатков по счетам МЦ" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ТаблицаОстатковНУ                                 " Наименование="Таблица остатков по НУ" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ТаблицаПроводок                                   " Наименование="Таблица проводок (остатки)" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ТаблицаПроводокОбороты                            " Наименование="Таблица проводок (обороты)" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ТаблицаСчетовРазделовУчета                        " Наименование="Таблица соответствий разделов учета документа ввода остатков и счетов" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
	</Параметры>
	<Обработки/>
	<ПравилаКонвертацииОбъектов>
		<Группа>
			<Код>ОбъектыУчета</Код>
			<Наименование>Объекты учета</Наименование>
			<Порядок>100</Порядок>
			<Группа>
				<Код>Справочники</Код>
				<Наименование>Справочники</Наименование>
				<Порядок>100</Порядок>
				<Правило>
					<Код>БанковскиеСчета</Код>
					<Наименование>СправочникСсылка.БанковскиеСчета --&gt; СправочникСсылка.БанковскиеСчета</Наименование>
					<Порядок>50</Порядок>
					<Источник>СправочникСсылка.БанковскиеСчета</Источник>
					<Приемник>СправочникСсылка.БанковскиеСчета</Приемник>
					<Свойства>
						<Свойство>
							<Код>1</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Если Параметры.ВыгружатьКоды = Да Тогда
	Значение = ПривестиНомерКДлине(Источник.Код, Параметры.ДлинаКода);
	
Иначе
	Отказ = 1 ;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>Номер --&gt; НомерСчета</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Номер" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="НомерСчета" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>БанкОрганизации --&gt; Банк</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="БанкОрганизации" Вид="Реквизит" Тип="СправочникСсылка.Банки"/>
							<Приемник Имя="Банк" Вид="Реквизит" Тип="СправочникСсылка.Банки"/>
							<КодПравилаКонвертации>Банки                                             </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>БанкДляРасчетов --&gt; БанкДляРасчетов</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="БанкДляРасчетов" Вид="Реквизит" Тип="СправочникСсылка.Банки"/>
							<Приемник Имя="БанкДляРасчетов" Вид="Реквизит" Тип="СправочникСсылка.Банки"/>
							<КодПравилаКонвертации>Банки                                             </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>Корреспондент --&gt; ТекстКорреспондента</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="Корреспондент" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="ТекстКорреспондента" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование>МесяцПрописью --&gt; МесяцПрописью</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="МесяцПрописью" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="МесяцПрописью" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>СуммаБез00Копеек --&gt; СуммаБезКопеек</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="СуммаБез00Копеек" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="СуммаБезКопеек" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование>ВидСчета --&gt; ВидСчета</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="ВидСчета" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="ВидСчета" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование>НомерИДатаРазрешения --&gt; НомерИДатаРазрешения</Наименование>
							<Порядок>1000</Порядок>
							<Источник Имя="НомерИДатаРазрешения" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="НомерИДатаРазрешения" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование>ДатаОткрытияСчета --&gt; ДатаОткрытия</Наименование>
							<Порядок>1100</Порядок>
							<Источник Имя="ДатаОткрытияСчета" Вид="Реквизит" Тип="Дата"/>
							<Приемник Имя="ДатаОткрытия" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование>ДатаЗакрытияСчета --&gt; ДатаЗакрытия</Наименование>
							<Порядок>1200</Порядок>
							<Источник Имя="ДатаЗакрытияСчета" Вид="Реквизит" Тип="Дата"/>
							<Приемник Имя="ДатаЗакрытия" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>13</Код>
							<Наименование> --&gt; Владелец</Наименование>
							<Порядок>1300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Владелец" Вид="Свойство"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование> --&gt; ВалютаДенежныхСредств</Наименование>
							<Порядок>1400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаДенежныхСредств" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Если Источник.ТипСчета = Перечисление.ТипыБанковскихСчетов.Рублевый Тогда
	Значение = Параметры.Рубли;
	
Иначе
	Значение = "";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>1500</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование>ВсегдаУказыватьКПП --&gt; ВсегдаУказыватьКПП</Наименование>
							<Порядок>1600</Порядок>
							<Источник Имя="ВсегдаУказыватьКПП" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="ВсегдаУказыватьКПП" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>НоменклатурныеГруппы</Код>
					<Наименование>СправочникСсылка.ВидыНоменклатуры --&gt; СправочникСсылка.НоменклатурныеГруппы</Наименование>
					<Порядок>100</Порядок>
					<ПередВыгрузкой>Отказ = Источник.ЭтоГруппа();</ПередВыгрузкой>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.ВидыНоменклатуры</Источник>
					<Приемник>СправочникСсылка.НоменклатурныеГруппы</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>3</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Если Параметры.ВыгружатьКоды = Да Тогда
	Значение = ПривестиНомерКДлине(Источник.Код, Параметры.ДлинаКода);
	
Иначе
	Отказ = 1 ;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ДоговорыКонтрагентов</Код>
					<Наименование>СправочникСсылка.Договоры --&gt; СправочникСсылка.ДоговорыКонтрагентов</Наименование>
					<Порядок>150</Порядок>
					<ПередВыгрузкой>ВидДоговора = Параметры.ПараметрыАлгоритмов.Получить("ВидДоговора");
Если (ПустоеЗначение(Источник) = 0) и (ВидДоговора &lt;&gt; "Прочее") и (ПустоеЗначение(ВидДоговора) = 0) Тогда
	Если Источник.ЭтоГруппа() = 0 Тогда
		НомСтр = 0;
		Если Параметры.ТаблицаДоговоров.НайтиЗначение(Источник, НомСтр, "Договор") = 0 Тогда
			Параметры.ТаблицаДоговоров.НоваяСтрока();
			Параметры.ТаблицаДоговоров.Договор = Источник;
			Параметры.ТаблицаДоговоров.ВидДоговора = ВидДоговора;
		Иначе
			Параметры.ТаблицаДоговоров.УстановитьЗначение(НомСтр, "Договор", Источник);
			Параметры.ТаблицаДоговоров.УстановитьЗначение(НомСтр, "ВидДоговора", ВидДоговора);			
		КонецЕсли;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.Договоры</Источник>
					<Приемник>СправочникСсылка.ДоговорыКонтрагентов</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>2</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Если Параметры.ВыгружатьКоды = Да Тогда
	Значение = ПривестиНомерКДлине(Источник.Код, Параметры.ДлинаКода);
	
Иначе
	Отказ = 1 ;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Значение = Лев(Источник.Наименование, 50);</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Договоры"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование>Владелец --&gt; Владелец</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="Владелец" Вид="Свойство" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="Владелец" Вид="Свойство" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true">
							<Код>10</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>1000</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Если Источник.ЭтоГруппа() = 1 Тогда
	Отказ = 1;
	
Иначе
	Значение = "1";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>11</Код>
							<Наименование> --&gt;</Наименование>
							<Порядок>1100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
							<ПередОбработкойВыгрузки>Отказ = Источник.ЭтоГруппа();</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>6</Код>
								<Наименование>ВалютаДоговора --&gt; ВалютаВзаиморасчетов</Наименование>
								<Порядок>600</Порядок>
								<Источник Имя="ВалютаДоговора" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
								<Приемник Имя="ВалютаВзаиморасчетов" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
								<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
								<ПередВыгрузкой>Значение = Источник.ВалютаДоговора;
Если ПустоеЗначение(Источник.ВалютаДоговора) = 1 Тогда
	Значение = Параметры.Рубли;
	
ИначеЕсли Источник.ОплатаДоговора = 1 Тогда
	Если Источник.ВестиУчетРасчетовУЕ = 0 Тогда
		Значение = Параметры.Рубли;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>7</Код>
								<Наименование>ВестиУчетРасчетовУЕ --&gt; РасчетыВУсловныхЕдиницах</Наименование>
								<Порядок>700</Порядок>
								<Источник Имя="ВестиУчетРасчетовУЕ" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="РасчетыВУсловныхЕдиницах" Вид="Реквизит" Тип="Булево"/>
							</Свойство>
							<Свойство>
								<Код>8</Код>
								<Наименование> --&gt; ВидДоговора</Наименование>
								<Порядок>800</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ВидДоговора" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыДоговоровКонтрагентов"/>
								<ПередВыгрузкой>Если ПустоеЗначение(Параметры.ПараметрыАлгоритмов.Получить("ВидДоговора")) = 0 Тогда
	Значение = Параметры.ПараметрыАлгоритмов.Получить("ВидДоговора");
Иначе
	Значение = "Прочее";
КонецЕсли;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>13</Код>
								<Наименование>ВидДоговора --&gt; ВидВзаиморасчетов</Наименование>
								<Порядок>850</Порядок>
								<Источник Имя="ВидДоговора" Вид="Реквизит" Тип="СправочникСсылка.ВидыДоговоров"/>
								<Приемник Имя="ВидВзаиморасчетов" Вид="Реквизит" Тип="СправочникСсылка.ВидыВзаиморасчетов"/>
								<КодПравилаКонвертации>ВидыВзаиморасчетов                                </КодПравилаКонвертации>
							</Свойство>
						</Группа>
						<Свойство>
							<Код>12</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>1200</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ДоговорыКонтрагентовПоВидам</Код>
					<Наименование>СправочникСсылка.Договоры --&gt; СправочникСсылка.ДоговорыКонтрагентов</Наименование>
					<Порядок>200</Порядок>
					<ПриЗагрузке>//Если ОбъектНайден Тогда
//	Если НЕ Объект.ЭтоГруппа Тогда
//		Если НЕ ЗначениеЗаполнено(Объект.ВидДоговора) Тогда
//			Объект.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.Прочее;
//			НеЗамещатьОбъект = Истина;
//		КонецЕсли;
//		Если НЕ ЗначениеЗаполнено(Объект.ВалютаВзаиморасчетов) Тогда
//			Объект.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета.Получить();
//		КонецЕсли;
//	КонецЕсли;
//КонецЕсли;</ПриЗагрузке>
					<Источник>СправочникСсылка.Договоры</Источник>
					<Приемник>СправочникСсылка.ДоговорыКонтрагентов</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>11</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>9</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Значение = Лев(Источник.Наименование, 50);</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>10</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Договоры"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true">
							<Код>7</Код>
							<Наименование>Владелец --&gt; Владелец</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="Владелец" Вид="Свойство" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="Владелец" Вид="Свойство" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование> --&gt; ВидДоговора</Наименование>
							<Порядок>800</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДоговора" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыДоговоровКонтрагентов"/>
							<ПередВыгрузкой>Если ТипЗначения(ВходящиеДанные) = 0 Тогда
	Значение = "Прочее";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>6</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>1000</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>СтавкиНДС</Код>
					<Наименование>СправочникСсылка.СтавкиНДС --&gt; ПеречислениеСсылка.СтавкиНДС</Наименование>
					<Порядок>250</Порядок>
					<Источник>Строка</Источник>
					<Приемник>ПеречислениеСсылка.СтавкиНДС</Приемник>
					<Свойства/>
					<Значения>
						<Значение>
							<Код>1</Код>
							<Наименование>БезНДС --&gt; БезНДС</Наименование>
							<Порядок>100</Порядок>
							<Источник>БезНДС</Источник>
							<Приемник>БезНДС</Приемник>
						</Значение>
						<Значение>
							<Код>2</Код>
							<Наименование>НДС10 --&gt; НДС10</Наименование>
							<Порядок>200</Порядок>
							<Источник>НДС10</Источник>
							<Приемник>НДС10</Приемник>
						</Значение>
						<Значение>
							<Код>3</Код>
							<Наименование>НДС18 --&gt; НДС18</Наименование>
							<Порядок>300</Порядок>
							<Источник>НДС18</Источник>
							<Приемник>НДС18</Приемник>
						</Значение>
						<Значение>
							<Код>4</Код>
							<Наименование>НДС20 --&gt; НДС20</Наименование>
							<Порядок>400</Порядок>
							<Источник>НДС20</Источник>
							<Приемник>НДС20</Приемник>
						</Значение>
					</Значения>
				</Правило>
				<Правило>
					<Код>Контрагенты</Код>
					<Наименование>СправочникСсылка.Контрагенты --&gt; СправочникСсылка.Контрагенты</Наименование>
					<Порядок>300</Порядок>
					<ПослеВыгрузки>Если Источник.ЭтоГруппа() = 0 Тогда
	ВыгрузитьПоПравилу(Источник,,,, "ТелефоныКонтрагента");
	ВыгрузитьПоПравилу(Источник,,,, "ЮридическийАдресКонтрагента");
	ВыгрузитьПоПравилу(Источник,,,, "ФактическийАдресКонтрагента");
КонецЕсли;</ПослеВыгрузки>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.Контрагенты</Источник>
					<Приемник>СправочникСсылка.Контрагенты</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>2</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Если Параметры.ВыгружатьКоды = Да Тогда
	Значение = ПривестиНомерКДлине(Источник.Код, Параметры.ДлинаКода);
	
Иначе
	Отказ = 1 ;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true">
							<Код>6</Код>
							<Наименование>ИНН --&gt; ИНН</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="ИНН" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="ИНН" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Если Источник.ЭтоГруппа() = 0 Тогда
	Значение = ?(СтрДлина(СокрЛП(Источник.ИНН)) &gt; 12, Лев(СокрЛП(Источник.ИНН), 10), СокрЛП(Источник.ИНН));
	
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>10</Код>
							<Наименование> --&gt; КПП</Наименование>
							<Порядок>1000</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КПП" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Если Источник.ЭтоГруппа() = 0 Тогда
	Значение = ?(СтрДлина(СокрЛП(Источник.ИНН)) &gt; 12, СокрЛП(Сред(Источник.ИНН, 12, 9)), "");
	
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>12</Код>
							<Наименование> --&gt;</Наименование>
							<Порядок>1200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
							<ПередОбработкойВыгрузки>Отказ = Источник.ЭтоГруппа();</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>5</Код>
								<Наименование>ПолнНаименование --&gt; НаименованиеПолное</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="ПолнНаименование" Вид="Реквизит" Тип="Строка"/>
								<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>7</Код>
								<Наименование>ОсновнойДоговор --&gt; ОсновнойДоговорКонтрагента</Наименование>
								<Порядок>700</Порядок>
								<Источник Имя="ОсновнойДоговор" Вид="Реквизит" Тип="СправочникСсылка.Договоры"/>
								<Приемник Имя="ОсновнойДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
								<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>8</Код>
								<Наименование>ОсновнойСчет --&gt; ОсновнойБанковскийСчет</Наименование>
								<Порядок>800</Порядок>
								<Источник Имя="ОсновнойСчет" Вид="Реквизит" Тип="СправочникСсылка.РасчетныеСчета"/>
								<Приемник Имя="ОсновнойБанковскийСчет" Вид="Реквизит" Тип="СправочникСсылка.БанковскиеСчета"/>
								<КодПравилаКонвертации>РасчетныеСчета                                    </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>9</Код>
								<Наименование>ВидКонтрагента --&gt; ЮрФизЛицо</Наименование>
								<Порядок>900</Порядок>
								<Источник Имя="ВидКонтрагента" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыКонтрагентов"/>
								<Приемник Имя="ЮрФизЛицо" Вид="Реквизит" Тип="ПеречислениеСсылка.ЮрФизЛицо"/>
								<КодПравилаКонвертации>ЮрФизЛицо                                         </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>11</Код>
								<Наименование> --&gt; ДокументУдостоверяющийЛичность</Наименование>
								<Порядок>1100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДокументУдостоверяющийЛичность" Вид="Реквизит" Тип="Строка"/>
								<ПередВыгрузкой>Значение = ", серия: " + Источник.ДокументСерия + ", № " + Источник.ДокументНомер + ", выдан: "+ Источник.ДокументДатаВыдачи + ", " + Источник.ДокументКемВыдан;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>13</Код>
								<Наименование> --&gt; ГоловнойКонтрагент</Наименование>
								<Порядок>1200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ГоловнойКонтрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
								<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
								<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>15</Код>
								<Наименование>ОКПО --&gt; КодПоОКПО</Наименование>
								<Порядок>1250</Порядок>
								<Источник Имя="ОКПО" Вид="Реквизит" Тип="Строка"/>
								<Приемник Имя="КодПоОКПО" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
						</Группа>
						<Свойство>
							<Код>14</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>1300</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>НомераГТД</Код>
					<Наименование>СправочникСсылка.ГТД --&gt; СправочникСсылка.НомераГТД</Наименование>
					<Порядок>350</Порядок>
					<Источник>СправочникСсылка.ГТД</Источник>
					<Приемник>СправочникСсылка.НомераГТД</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>Наименование --&gt; Код</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ДоходыБудущихПериодов</Код>
					<Наименование>СправочникСсылка.ДоходыБудущихПериодов --&gt; СправочникСсылка.ДоходыБудущихПериодов</Наименование>
					<Порядок>400</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.ДоходыБудущихПериодов</Источник>
					<Приемник>СправочникСсылка.ДоходыБудущихПериодов</Приемник>
					<Свойства>
						<Свойство Отключить="true">
							<Код>1</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Если Параметры.ВыгружатьКоды = Да Тогда
	Значение = ПривестиНомерКДлине(Источник.Код, Параметры.ДлинаКода);
	
Иначе
	Отказ = 1 ;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Значение = Лев(Источник.Наименование, 25);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>Материалы</Код>
					<Наименование>СправочникСсылка.Материалы --&gt; СправочникСсылка.Номенклатура</Наименование>
					<Порядок>450</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.Материалы</Источник>
					<Приемник>СправочникСсылка.Номенклатура</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>2</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Если Параметры.ВыгружатьКоды = Да Тогда
	Значение = ПривестиНомерКДлине(Источник.Код, 11);
	
Иначе
	Отказ = 1 ;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Материалы"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Номенклатура"/>
							<КодПравилаКонвертации>Материалы                                         </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ПустоеЗначение(Источник.Родитель) = 1 Тогда
	ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
	ИсходящиеДанные.Установить("Наименование", "Материалы");
	ИмяПКО = "ГруппаНоменклатуры";
	Значение = "1";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>8</Код>
							<Наименование> --&gt;</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
							<ПередОбработкойВыгрузки>Отказ = Источник.ЭтоГруппа();</ПередОбработкойВыгрузки>
							<Свойство Поиск="true">
								<Код>5</Код>
								<Наименование>ЕдиницаИзмерения --&gt; БазоваяЕдиницаИзмерения</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="ЕдиницаИзмерения" Вид="Реквизит" Тип="СправочникСсылка.ЕдиницыИзмерений"/>
								<Приемник Имя="БазоваяЕдиницаИзмерения" Вид="Реквизит" Тип="СправочникСсылка.КлассификаторЕдиницИзмерения"/>
								<КодПравилаКонвертации>КлассификаторЕдиницИзмерения                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>6</Код>
								<Наименование>Наименование --&gt; НаименованиеПолное</Наименование>
								<Порядок>600</Порядок>
								<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
								<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>7</Код>
								<Наименование> --&gt; Услуга</Наименование>
								<Порядок>700</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Услуга" Вид="Реквизит" Тип="Булево"/>
								<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
							</Свойство>
						</Группа>
						<Свойство>
							<Код>9</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>КлассификаторСтранМира</Код>
					<Наименование>Строка --&gt; СправочникСсылка.КлассификаторСтранМира</Наименование>
					<Порядок>500</Порядок>
					<Источник>Строка</Источник>
					<Приемник>СправочникСсылка.КлассификаторСтранМира</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование> --&gt; Наименование</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Значение = Лев(Источник, 60);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование> --&gt; НаименованиеПолное</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>Склады</Код>
					<Наименование>СправочникСсылка.МестаХранения --&gt; СправочникСсылка.Склады</Наименование>
					<Порядок>550</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.МестаХранения</Источник>
					<Приемник>СправочникСсылка.Склады</Приемник>
					<Свойства>
						<Свойство Отключить="true">
							<Код>1</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Если Параметры.ВыгружатьКоды = Да Тогда
	Значение = ПривестиНомерКДлине(Источник.Код, Параметры.ДлинаКода);
	
Иначе
	Отказ = 1 ;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>ТипСклада --&gt; ВидСклада</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="ТипСклада" Вид="Реквизит" Тип="ПеречислениеСсылка.ТипыСкладов"/>
							<Приемник Имя="ВидСклада" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыСкладов"/>
							<КодПравилаКонвертации>ВидыСкладов                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>ТипЦен --&gt; ТипЦенРозничнойТорговли</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="ТипЦен" Вид="Реквизит" Тип="СправочникСсылка.ТипыЦен"/>
							<Приемник Имя="ТипЦенРозничнойТорговли" Вид="Реквизит" Тип="СправочникСсылка.ТипыЦенНоменклатуры"/>
							<КодПравилаКонвертации>ТипыЦенНоменклатуры                               </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>НематериальныеАктивы</Код>
					<Наименование>СправочникСсылка.НематериальныеАктивы --&gt; СправочникСсылка.НематериальныеАктивы</Наименование>
					<Порядок>600</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.НематериальныеАктивы</Источник>
					<Приемник>СправочникСсылка.НематериальныеАктивы</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>2</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Если Параметры.ВыгружатьКоды = Да Тогда
	Значение = ПривестиНомерКДлине(Источник.Код, Параметры.ДлинаКода);
	
Иначе
	Отказ = 1 ;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.НематериальныеАктивы"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.НематериальныеАктивы"/>
							<КодПравилаКонвертации>НематериальныеАктивы                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ПустоеЗначение(Источник.Родитель) = 1 Тогда
	ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
	Наименование = ?(Источник.ВидОбъектаУчета = 0, "Нематериальные активы", "Расходы на НИОКР");
	ИсходящиеДанные.Установить("Наименование", Наименование);
	ИмяПКО = "ГруппаНМА";
	Значение = "1";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>8</Код>
							<Наименование>ВидОбъектаУчета --&gt; ВидОбъектаУчета</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидОбъектаУчета" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыОбъектовУчетаНМА"/>
							<ПередВыгрузкой>Значение = ?(Источник.ВидОбъектаУчета = 0, "НематериальныйАктив", "РасходыНаНИОКР"); Отказ = Источник.ЭтоГруппа();</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>9</Код>
							<Наименование> --&gt;</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
							<ПередОбработкойВыгрузки>Отказ = Источник.ЭтоГруппа();</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>5</Код>
								<Наименование>Группа --&gt; ВидНМА</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="Группа" Вид="Реквизит" Тип="ПеречислениеСсылка.ГруппыНМА"/>
								<Приемник Имя="ВидНМА" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыНМА"/>
								<КодПравилаКонвертации>ВидыНМА                                           </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>7</Код>
								<Наименование>АмортизационнаяГруппа --&gt; АмортизационнаяГруппа</Наименование>
								<Порядок>700</Порядок>
								<Источник Имя="АмортизационнаяГруппа" Вид="Реквизит" Тип="ПеречислениеСсылка.АмортизационныеГруппы"/>
								<Приемник Имя="АмортизационнаяГруппа" Вид="Реквизит" Тип="ПеречислениеСсылка.АмортизационныеГруппы"/>
								<КодПравилаКонвертации>АмортизационныеГруппы                             </КодПравилаКонвертации>
							</Свойство>
						</Группа>
						<Свойство Поиск="true">
							<Код>10</Код>
							<Наименование>ПрочиеСведения --&gt; ПрочиеСведения</Наименование>
							<Порядок>1000</Порядок>
							<Источник Имя="ПрочиеСведения" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="ПрочиеСведения" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Если Источник.ЭтоГруппа() = 1 Тогда
	Отказ = 1;
	
Иначе
	Значение = СокрЛП(Источник.ПрочиеСведения + " # ИНН организации: " + СокрЛП(Константа.ИННОрганизации) + "; инв. ном.: " + СокрЛП(Источник.Код) + " #");
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>1100</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>Номенклатура</Код>
					<Наименование>СправочникСсылка.Номенклатура --&gt; СправочникСсылка.Номенклатура</Наименование>
					<Порядок>650</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.Номенклатура</Источник>
					<Приемник>СправочникСсылка.Номенклатура</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>2</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Если Параметры.ВыгружатьКоды = Да Тогда
	Значение = ПривестиНомерКДлине(Источник.Код, 11);
	
Иначе
	Отказ = 1 ;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Номенклатура"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Номенклатура"/>
							<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Если Источник.ЭтоГруппа() = 0 Тогда
	ТипНоменклатуры = Источник.ТипНоменклатуры;

ИначеЕсли ТипЗначенияСтр(ВходящиеДанные) = "СписокЗначений" Тогда
	ТипНоменклатуры = ВходящиеДанные.Получить("ТипНоменклатуры");
	
Иначе
	ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар;
КонецЕсли;

Если ПустоеЗначение(Источник.Родитель) = 1 Тогда
	Если ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар Тогда
		ИмяГруппы = "Товары";
			
	ИначеЕсли ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция Тогда
		ИмяГруппы = "Продукция";
			
	ИначеЕсли ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Полуфабрикат Тогда
		ИмяГруппы = "Полуфабрикаты";
			
	ИначеЕсли ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Услуга Тогда
		ИмяГруппы = "Услуги";
			
	ИначеЕсли ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Работа Тогда
		ИмяГруппы = "Услуги";
			
	ИначеЕсли ТипНоменклатуры = Перечисление.ТипыНоменклатуры.ПосредническаяУслуга Тогда
		ИмяГруппы = "Услуги";
			
	ИначеЕсли ТипНоменклатуры = Перечисление.ТипыНоменклатуры.УслугаЕНВД Тогда
		ИмяГруппы = "Услуги";
			
	Иначе
		ИмяГруппы = "Товары";
	КонецЕсли;

	ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
	ИсходящиеДанные.Установить("Наименование", ИмяГруппы);
	ИмяПКО = "ГруппаНоменклатуры";
	Значение = "1";
	
Иначе
	ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
	ИсходящиеДанные.Установить("ТипНоменклатуры", Источник.ТипНоменклатуры);
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>7</Код>
							<Наименование>ЕдиницаИзмерения --&gt; БазоваяЕдиницаИзмерения</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="ЕдиницаИзмерения" Вид="Реквизит" Тип="СправочникСсылка.ЕдиницыИзмерений"/>
							<Приемник Имя="БазоваяЕдиницаИзмерения" Вид="Реквизит" Тип="СправочникСсылка.КлассификаторЕдиницИзмерения"/>
							<КодПравилаКонвертации>КлассификаторЕдиницИзмерения                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Если Источник.ЭтоГруппа() = 1 Тогда
	Отказ = 1;
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>11</Код>
							<Наименование> --&gt;</Наименование>
							<Порядок>1100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
							<ПередОбработкойВыгрузки>Отказ  = Источник.ЭтоГруппа();</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>5</Код>
								<Наименование>ПолнНаименование --&gt; НаименованиеПолное</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="ПолнНаименование" Вид="Реквизит" Тип="Строка"/>
								<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
								<ПередВыгрузкой>Если ПустоеЗначение(Источник.ПолнНаименование) = 1 Тогда
	Значение = Источник.Наименование;
КонецЕсли;
</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>6</Код>
								<Наименование>ВидНоменклатуры --&gt; НоменклатурнаяГруппа</Наименование>
								<Порядок>600</Порядок>
								<Источник Имя="ВидНоменклатуры" Вид="Реквизит" Тип="СправочникСсылка.ВидыНоменклатуры"/>
								<Приемник Имя="НоменклатурнаяГруппа" Вид="Реквизит" Тип="СправочникСсылка.НоменклатурныеГруппы"/>
								<КодПравилаКонвертации>НоменклатурныеГруппы                              </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>8</Код>
								<Наименование>СтавкаНДС --&gt; СтавкаНДС</Наименование>
								<Порядок>800</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СтавкаНДС" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
								<ПередВыгрузкой>Ставка = Источник.СтавкаНДС.Получить(Параметры.ДатаКонцаПериодаВыгрузки).Ставка;

Если Ставка = 0 Тогда
	Значение = "БезНДС";
	
ИначеЕсли Ставка = 18 Тогда
	Значение = "НДС18";
	
ИначеЕсли Ставка = 10 Тогда
	Значение = "НДС10";
	
ИначеЕсли Ставка = 20 Тогда
	Значение = "НДС20";
	
Иначе
	Значение = "";
КонецЕсли;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>9</Код>
								<Наименование>СтранаПроисхождения --&gt; СтранаПроисхождения</Наименование>
								<Порядок>900</Порядок>
								<Источник Имя="СтранаПроисхождения" Вид="Реквизит" Тип="Строка"/>
								<Приемник Имя="СтранаПроисхождения" Вид="Реквизит" Тип="СправочникСсылка.КлассификаторСтранМира"/>
								<КодПравилаКонвертации>КлассификаторСтранМира                            </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>10</Код>
								<Наименование> --&gt; Услуга</Наименование>
								<Порядок>1000</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Услуга" Вид="Реквизит" Тип="Булево"/>
								<ПередВыгрузкой>Если Источник.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Услуга Тогда
	Значение = 1;
	
ИначеЕсли Источник.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.ПосредническаяУслуга Тогда
	Значение = 1;
	
ИначеЕсли Источник.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.УслугаЕНВД Тогда
	Значение = 1;
	
Иначе
	Значение = 0;
КонецЕсли;</ПередВыгрузкой>
							</Свойство>
						</Группа>
						<Свойство>
							<Код>12</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>1200</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>Оборудование</Код>
					<Наименование>СправочникСсылка.Оборудование --&gt; СправочникСсылка.Номенклатура</Наименование>
					<Порядок>700</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.Оборудование</Источник>
					<Приемник>СправочникСсылка.Номенклатура</Приемник>
					<Свойства>
						<Свойство Отключить="true">
							<Код>1</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Если Параметры.ВыгружатьКоды = Да Тогда
	Значение = ПривестиНомерКДлине(Источник.Код, 11);
	
Иначе
	Отказ = 1 ;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>Описание --&gt; НаименованиеПолное</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Описание" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование> --&gt; Услуга</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Услуга" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование> --&gt; ЭтоГруппа</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>6</Код>
							<Наименование> --&gt; Родитель</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Номенклатура"/>
							<КодПравилаКонвертации>ГруппаНоменклатуры                                </КодПравилаКонвертации>
							<ПередВыгрузкой>ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
ИсходящиеДанные.Установить("Наименование", "Оборудование к установке");
Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ОбъектыСтроительства_08_4</Код>
					<Наименование>СправочникСсылка.ОбъектыСтроительства --&gt; СправочникСсылка.Номенклатура</Наименование>
					<Порядок>750</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.ОбъектыСтроительства</Источник>
					<Приемник>СправочникСсылка.Номенклатура</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>2</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Если Параметры.ВыгружатьКоды = Да Тогда
	Значение = ПривестиНомерКДлине(Источник.Код, 11);
	
Иначе
	Отказ = 1 ;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ОбъектыСтроительства"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Номенклатура"/>
							<КодПравилаКонвертации>ГруппаНоменклатуры                                </КодПравилаКонвертации>
							<ПередВыгрузкой>ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
ИсходящиеДанные.Установить("Наименование", "Оборудование (объекты основных средств)");
Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование> --&gt; Услуга</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Услуга" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Отказ  = Источник.ЭтоГруппа(); Значение = 0;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ОбъектыСтроительства_08_3</Код>
					<Наименование>СправочникСсылка.ОбъектыСтроительства --&gt; СправочникСсылка.ОбъектыСтроительства</Наименование>
					<Порядок>800</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.ОбъектыСтроительства</Источник>
					<Приемник>СправочникСсылка.ОбъектыСтроительства</Приемник>
					<Свойства>
						<Свойство Отключить="true">
							<Код>1</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Если Параметры.ВыгружатьКоды = Да Тогда
	Значение = ПривестиНомерКДлине(Источник.Код, Параметры.ДлинаКода);
	
Иначе
	Отказ = 1 ;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ОбъектыСтроительства_08_5_08_8</Код>
					<Наименование>СправочникСсылка.ОбъектыСтроительства --&gt; СправочникСсылка.НематериальныеАктивы</Наименование>
					<Порядок>850</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.ОбъектыСтроительства</Источник>
					<Приемник>СправочникСсылка.НематериальныеАктивы</Приемник>
					<Свойства>
						<Свойство Отключить="true">
							<Код>1</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Если Параметры.ВыгружатьКоды = Да Тогда
	Значение = ПривестиНомерКДлине(Источник.Код, Параметры.ДлинаКода);
	
Иначе
	Отказ = 1 ;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ОбъектыСтроительства"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.НематериальныеАктивы"/>
							<КодПравилаКонвертации>ГруппаНМА                                         </КодПравилаКонвертации>
							<ПередВыгрузкой>ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
ИсходящиеДанные.Установить("Наименование", "Объекты внеоборотных активов");
Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование> --&gt; НаименованиеПолное</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Отказ = Источник.ЭтоГруппа(); Значение = Источник.Наименование;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>6</Код>
							<Наименование> --&gt; ВидОбъектаУчета</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидОбъектаУчета" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыОбъектовУчетаНМА"/>
							<ПередВыгрузкой>Отказ = Источник.ЭтоГруппа();
Значение = "НематериальныйАктив";

Если ТипЗначенияСтр(ВходящиеДанные) = "СписокЗначений" Тогда
	Счет = ВходящиеДанные.Получить("Счет");
	Если ПустоеЗначение(Счет) = 0 Тогда
		Если (Счет = СчетПоКоду("08.8")) ИЛИ (Счет = СчетПоКоду("Н01.03")) Тогда
			Значение = "РасходыНаНИОКР";
		КонецЕсли;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ОсновныеСредства</Код>
					<Наименование>СправочникСсылка.ОсновныеСредства --&gt; СправочникСсылка.ОсновныеСредства</Наименование>
					<Порядок>900</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.ОсновныеСредства</Источник>
					<Приемник>СправочникСсылка.ОсновныеСредства</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>2</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>//Если Параметры.ВыгружатьКоды = Да Тогда
//	Значение = ПривестиНомерКДлине(Источник.Код, Параметры.ДлинаКода);
//	
//Иначе
//	Отказ = 1 ;
//КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ОсновныеСредства"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ОсновныеСредства"/>
							<КодПравилаКонвертации>ОсновныеСредства                                  </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true">
							<Код>7</Код>
							<Наименование>ПрочиеСведения --&gt; НаименованиеПолное</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="ПрочиеСведения" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Если Источник.ЭтоГруппа() = 1 Тогда
	Отказ = 1;
	
Иначе
	Значение = СокрЛП(Источник.ПрочиеСведения + " # ИНН организации: " + СокрЛП(Константа.ИННОрганизации) + "; инв. ном.: " + СокрЛП(Источник.Код) + " #");
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>10</Код>
							<Наименование> --&gt;</Наименование>
							<Порядок>1000</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
							<ПередОбработкойВыгрузки>Отказ = Источник.ЭтоГруппа();</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>5</Код>
								<Наименование>Группа --&gt; ГруппаОС</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="Группа" Вид="Реквизит" Тип="ПеречислениеСсылка.ГруппыОС"/>
								<Приемник Имя="ГруппаОС" Вид="Реквизит" Тип="ПеречислениеСсылка.ГруппыОС"/>
								<КодПравилаКонвертации>ГруппыОС                                          </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>8</Код>
								<Наименование>ШифрПоЕНАОФ --&gt; ШифрПоЕНАОФ</Наименование>
								<Порядок>800</Порядок>
								<Источник Имя="ШифрПоЕНАОФ" Вид="Реквизит" Тип="СправочникСсылка.КлассификаторЕН"/>
								<Приемник Имя="ШифрПоЕНАОФ" Вид="Реквизит" Тип="СправочникСсылка.ЕдиныеНормыАмортизационныхОтчисленийОсновныхФондов"/>
								<КодПравилаКонвертации>ЕдиныеНормыАмортизационныхОтчисленийОсновныхФондов</КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>9</Код>
								<Наименование>АмортизационнаяГруппа --&gt; АмортизационнаяГруппа</Наименование>
								<Порядок>900</Порядок>
								<Источник Имя="АмортизационнаяГруппа" Вид="Реквизит" Тип="ПеречислениеСсылка.АмортизационныеГруппы"/>
								<Приемник Имя="АмортизационнаяГруппа" Вид="Реквизит" Тип="ПеречислениеСсылка.АмортизационныеГруппы"/>
								<КодПравилаКонвертации>АмортизационныеГруппы                             </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>11</Код>
								<Наименование>Наименование --&gt; НаименованиеПолное</Наименование>
								<Порядок>1000</Порядок>
								<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
								<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>13</Код>
								<Наименование>КодПоОКОФ --&gt; КодПоОКОФ</Наименование>
								<Порядок>1050</Порядок>
								<Источник Имя="КодПоОКОФ" Вид="Реквизит" Тип="СправочникСсылка.ОбщероссийскийКлассификаторОсновныхФондов"/>
								<Приемник Имя="КодПоОКОФ" Вид="Реквизит" Тип="СправочникСсылка.ОбщероссийскийКлассификаторОсновныхФондов"/>
								<КодПравилаКонвертации>ОбщероссийскийКлассификаторОсновныхФондов         </КодПравилаКонвертации>
							</Свойство>
						</Группа>
						<Свойство>
							<Код>12</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>1100</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ПодразделенияОрганизаций</Код>
					<Наименование>СправочникСсылка.Подразделения --&gt; СправочникСсылка.ПодразделенияОрганизаций</Наименование>
					<Порядок>950</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.Подразделения</Источник>
					<Приемник>СправочникСсылка.ПодразделенияОрганизаций</Приемник>
					<Свойства>
						<Свойство Отключить="true">
							<Код>1</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Если Параметры.ВыгружатьКоды = Да Тогда
	Значение = ПривестиНомерКДлине(Источник.Код, Параметры.ДлинаКода);
	
Иначе
	Отказ = 1 ;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование> --&gt; Владелец</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Владелец" Вид="Свойство" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ПрочиеДоходыИРасходы</Код>
					<Наименование>СправочникСсылка.ПрочиеДоходыИРасходы --&gt; СправочникСсылка.ПрочиеДоходыИРасходы</Наименование>
					<Порядок>1000</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.ПрочиеДоходыИРасходы</Источник>
					<Приемник>СправочникСсылка.ПрочиеДоходыИРасходы</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>ВидПрочихДоходовИРасходов --&gt; ВидПрочихДоходовИРасходов</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="ВидПрочихДоходовИРасходов" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыПрочихДоходовИРасходов"/>
							<Приемник Имя="ВидПрочихДоходовИРасходов" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыПрочихДоходовИРасходов"/>
							<КодПравилаКонвертации>ВидыПрочихДоходовИРасходов                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование> --&gt; ВидДеятельностиДляНалоговогоУчетаЗатрат</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДеятельностиДляНалоговогоУчетаЗатрат" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыДеятельностиДляНалоговогоУчетаЗатрат"/>
							<ПередВыгрузкой>Значение = "ПредпринимательскаяДеятельностьНеОблагаемаяЕНВД";</ПередВыгрузкой>
						</Свойство>
						<Свойство Отключить="true">
							<Код>5</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Если Параметры.ВыгружатьКоды = Да Тогда
	Значение = ПривестиНомерКДлине(Источник.Код, Параметры.ДлинаКода);
	
Иначе
	Отказ = 1 ;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; ПринятиеКналоговомуУчету</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПринятиеКналоговомуУчету" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>РасходыБудущихПериодов</Код>
					<Наименование>СправочникСсылка.РасходыБудущихПериодов --&gt; СправочникСсылка.РасходыБудущихПериодов</Наименование>
					<Порядок>1050</Порядок>
					<ПередВыгрузкой>Отказ = Источник.ЭтоГруппа();</ПередВыгрузкой>
					<ПослеЗагрузки>ИмяСчетаБУ = "СчетЗатрат";
ИмяСубкБУ = "СубконтоЗатрат";
Корреспонденция = Объект;

мСведенияОСчетах = Новый Соответствие;

СведенияОСчете = БухгалтерскийУчет.ПолучитьСведенияОСчете(мСведенияОСчетах, Корреспонденция[ИмяСчетаБУ]);
Для СчетчикСубконто = 1 По 3 Цикл
	Для СчетчикСчета = 1 по СведенияОСчете.КоличествоСубконто Цикл
		Если (Корреспонденция[ИмяСубкБУ+СчетчикСубконто] = СведенияОСчете["ТипСубконто"+СчетчикСчета].ПривестиЗначение(Корреспонденция[ИмяСубкБУ+СчетчикСубконто])) и (СчетчикСчета &lt;&gt; СчетчикСубконто) Тогда
			Субконто = Корреспонденция[ИмяСубкБУ+СчетчикСчета];
			Корреспонденция[ИмяСубкБУ+СчетчикСчета] = Корреспонденция[ИмяСубкБУ+СчетчикСубконто];
			Корреспонденция[ИмяСубкБУ+СчетчикСубконто] = Субконто;
		КонецЕсли;
	КонецЦикла;
КонецЦикла;

Для СчетчикСубконто = 1 По 3 Цикл
	Если СведенияОСчете.КоличествоСубконто &gt;= СчетчикСубконто Тогда
		Корреспонденция[ИмяСубкБУ+СчетчикСубконто] = СведенияОСчете["ТипСубконто"+СчетчикСубконто].ПривестиЗначение(Корреспонденция[ИмяСубкБУ+СчетчикСубконто]);

	Иначе
		Корреспонденция[ИмяСубкБУ+СчетчикСубконто] = Неопределено;
	КонецЕсли;
КонецЦикла;</ПослеЗагрузки>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.РасходыБудущихПериодов</Источник>
					<Приемник>СправочникСсылка.РасходыБудущихПериодов</Приемник>
					<Свойства>
						<Свойство Отключить="true">
							<Код>1</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Если Параметры.ВыгружатьКоды = Да Тогда
	Значение = ПривестиНомерКДлине(Источник.Код, Параметры.ДлинаКода);
	
Иначе
	Отказ = 1 ;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>ДатаНачалаСписания --&gt; ДатаНачалаСписания</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="ДатаНачалаСписания" Вид="Реквизит" Тип="Дата"/>
							<Приемник Имя="ДатаНачалаСписания" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование>ДатаОкончанияСписания --&gt; ДатаОкончанияСписания</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="ДатаОкончанияСписания" Вид="Реквизит" Тип="Дата"/>
							<Приемник Имя="ДатаОкончанияСписания" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>6</Код>
							<Наименование>Сумма --&gt; Сумма</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>7</Код>
							<Наименование>СчетЗатрат --&gt; СчетЗатрат</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="СчетЗатрат" Вид="Реквизит" Тип="ПланСчетовСсылка.Основной"/>
							<Приемник Имя="СчетЗатрат" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<ПередВыгрузкой>Счет = Источник.СчетЗатрат;
Параметры.ПараметрыАлгоритмов.Установить("Счет", Счет);
Параметры.ПараметрыАлгоритмов.Установить("Субконто1", Источник.Субконто1);
Параметры.ПараметрыАлгоритмов.Установить("Субконто2", Источник.Субконто2);
Параметры.ПараметрыАлгоритмов.Установить("Субконто3", Источник.Субконто3);

ДобавленныйСчет = мТаблицаПравилКонвертацииОбъектов.ПолучитьЗначение(НайтиПравило(Счет, "Хозрасчетный"), "Значения").Получить(Строка(Счет));
Если ПустоеЗначение(ДобавленныйСчет) = 1 Тогда
	ИмяПКО = "ХозрасчетныйСтрДоб";
Иначе
	 ИмяПКО = "Хозрасчетный";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>Субконто1 --&gt; СубконтоЗатрат1</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="Субконто1" Вид="Реквизит"/>
							<Приемник Имя="СубконтоЗатрат1" Вид="Реквизит"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Счет", Источник.СчетЗатрат);
Параметры.ПараметрыАлгоритмов.Установить("Субконто1", Источник.Субконто1);
Параметры.ПараметрыАлгоритмов.Установить("Субконто2", Источник.Субконто2);
Параметры.ПараметрыАлгоритмов.Установить("Субконто3", Источник.Субконто3);

Параметры.ПараметрыАлгоритмов.Установить("Субконто", Источник.Субконто1);
ПриВыгрузкеСубконто();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование>Субконто2 --&gt; СубконтоЗатрат2</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="Субконто2" Вид="Реквизит"/>
							<Приемник Имя="СубконтоЗатрат2" Вид="Реквизит"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Счет", Источник.СчетЗатрат);
Параметры.ПараметрыАлгоритмов.Установить("Субконто1", Источник.Субконто1);
Параметры.ПараметрыАлгоритмов.Установить("Субконто2", Источник.Субконто2);
Параметры.ПараметрыАлгоритмов.Установить("Субконто3", Источник.Субконто3);

Параметры.ПараметрыАлгоритмов.Установить("Субконто", Источник.Субконто2);
ПриВыгрузкеСубконто();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование>Субконто3 --&gt; СубконтоЗатрат3</Наименование>
							<Порядок>1000</Порядок>
							<Источник Имя="Субконто3" Вид="Реквизит"/>
							<Приемник Имя="СубконтоЗатрат3" Вид="Реквизит"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Счет", Источник.СчетЗатрат);
Параметры.ПараметрыАлгоритмов.Установить("Субконто1", Источник.Субконто1);
Параметры.ПараметрыАлгоритмов.Установить("Субконто2", Источник.Субконто2);
Параметры.ПараметрыАлгоритмов.Установить("Субконто3", Источник.Субконто3);

Параметры.ПараметрыАлгоритмов.Установить("Субконто", Источник.Субконто3);
ПриВыгрузкеСубконто();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование> --&gt; ВидРБП</Наименование>
							<Порядок>1500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидРБП" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыРБП"/>
							<ПередВыгрузкой>Значение = "Прочие";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>1600</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>17</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>1700</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>18</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>1800</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.РасходыБудущихПериодов"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.РасходыБудущихПериодов"/>
							<КодПравилаКонвертации>РасходыБудущихПериодов                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование>СпособПризнанияРасходов --&gt; СпособПризнанияРасходов</Наименование>
							<Порядок>1900</Порядок>
							<Источник Имя="СпособПризнанияРасходов" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыПризнанияРасходов"/>
							<Приемник Имя="СпособПризнанияРасходов" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыПризнанияРасходов"/>
							<КодПравилаКонвертации>СпособыПризнанияРасходов                          </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>20</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>2000</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>Резервы</Код>
					<Наименование>СправочникСсылка.Резервы --&gt; СправочникСсылка.Резервы</Наименование>
					<Порядок>1100</Порядок>
					<ПередВыгрузкой>Отказ = Источник.ЭтоГруппа();</ПередВыгрузкой>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.Резервы</Источник>
					<Приемник>СправочникСсылка.Резервы</Приемник>
					<Свойства>
						<Свойство Отключить="true">
							<Код>1</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Если Параметры.ВыгружатьКоды = Да Тогда
	Значение = ПривестиНомерКДлине(Источник.Код, Параметры.ДлинаКода);
	
Иначе
	Отказ = 1 ;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ФизическиеЛица</Код>
					<Наименование>СправочникСсылка.Сотрудники --&gt; СправочникСсылка.ФизическиеЛица</Наименование>
					<Порядок>1150</Порядок>
					<ПослеВыгрузки>Если Источник.ЭтоГруппа() = 0 Тогда

	ВычетыСотрудниковпоНДФЛ = СоздатьОбъект("Справочник.ВычетыСотрудниковпоНДФЛ");
	ВычетыСотрудниковпоНДФЛ.ИспользоватьВладельца(Источник);
	Параметры.ВычетыСотрудниковпоНДФЛ.УдалитьСтроки();
	Параметры.ВычетыСотрудниковпоНДФЛЛичный.УдалитьСтроки();
	
	НомСтроки = 0;
	Если Параметры.СписокРаботников.НайтиЗначение(Источник, НомСтроки, "ФизЛицо") = 0 Тогда
		Параметры.СписокРаботников.НоваяСтрока();
		Параметры.СписокРаботников.ФизЛицо = Источник;
	КонецЕсли;

	Если Источник.ХарактерРаботы.Получить(Параметры.ДатаКонцаПериодаВыгрузки) = Перечисление.ХарактерРаботы.ТрудовыеОтношенияПрекращены Тогда
		НомСтроки = 0;
		Если Параметры.СписокУволенныхРаботников.НайтиЗначение(Источник, НомСтроки, "ФизЛицо") = 0 Тогда
			Параметры.СписокУволенныхРаботников.НоваяСтрока();
			Параметры.СписокУволенныхРаботников.ФизЛицо = Источник;
		КонецЕсли;
	КонецЕсли;

	ПолноеИмя = Источник.Наименование;
	ПозицияПервогоПробела = Найти(ПолноеИмя, " ");
	Если ПозицияПервогоПробела &lt;&gt; 0 Тогда
		Фамилия = Лев(ПолноеИмя, ПозицияПервогоПробела);
		ИмяОтчество = Сред(ПолноеИмя, ПозицияПервогоПробела+1);
		ИмяОтчество = СокрЛ(ИмяОтчество);
		Имя = Лев(ИмяОтчество, 1)+".";
		
		ВходящиеДанные = СоздатьОбъект("СписокЗначений");
		ВходящиеДанные.Установить("Фамилия", Фамилия);
		ВходящиеДанные.Установить("Имя", ИмяОтчество);
		ВходящиеДанные.Установить("Отчество", "");

		ПозицияВторогоПробела = Найти(ИмяОтчество, " ");
		Если ПозицияВторогоПробела &lt;&gt; 0 Тогда
			Отчество = Сред(ИмяОтчество, ПозицияВторогоПробела+1);
			Отчество = СокрЛ(Отчество);
			
			ВходящиеДанные.Установить("Имя", Лев(ИмяОтчество, ПозицияВторогоПробела));
			ВходящиеДанные.Установить("Отчество", Отчество);
		КонецЕсли;
		
		ВыгрузитьПоПравилу(Источник,, ВходящиеДанные,, "ФИОФизЛиц");
	КонецЕсли;

	ВыгрузитьПоПравилу(Источник,,,, "СведенияОбИнвалидностиФизлиц");
	ВыгрузитьПоПравилу(Источник,,,, "ПаспортныеДанныеФизЛиц");
	ВыгрузитьПоПравилу(Источник,,,, "ГражданствоФизЛиц");
	ВыгрузитьПоПравилу(Источник,,,, "ГражданствоФизЛицНачало");
	ВыгрузитьПоПравилу(Источник,,,, "СтатусФизЛицКакНалогоплательщиковНДФЛ");
	ВыгрузитьПоПравилу(Источник,,,, "СтатусФизЛицКакНалогоплательщиковНДФЛНачало");
	ВыгрузитьПоПравилу(Источник,,,, "ТелефоныФизЛица");
	ВыгрузитьПоПравилу(Источник,,,, "АдресПоПропискеФизЛица");
	ВыгрузитьПоПравилу(Источник,,,, "ФактическийАдресФизЛица");
	ВыгрузитьПоПравилу(Источник,,,, "НДФЛДоходыПредыдущегоМестаРаботы");
	
	//Выгрузка стандартных вычетов сотрудника
	ВычетыСотрудниковпоНДФЛ.ВыбратьЭлементы();
	Пока ВычетыСотрудниковпоНДФЛ.ПолучитьЭлемент() = 1 Цикл
		
		Если ВычетыСотрудниковпоНДФЛ.ПометкаУдаления() = 1 Тогда
			Продолжить;
		КонецЕсли;
		
		Если (Лев(ВычетыСотрудниковпоНДФЛ.ВидВычета.КодДляОтчетности2009, 1)) &lt;&gt; "1" Тогда
			Продолжить;
		КонецЕсли;
		
		Если (ВычетыСотрудниковпоНДФЛ.ВидВычета.КодДляОтчетности2009 &lt;&gt; "103")
			И (ВычетыСотрудниковпоНДФЛ.ВидВычета.КодДляОтчетности2009 &lt;&gt; "104")
			И (ВычетыСотрудниковпоНДФЛ.ВидВычета.КодДляОтчетности2009 &lt;&gt; "105") Тогда
			
			Параметры.ВычетыСотрудниковпоНДФЛ.НоваяСтрока();
			Параметры.ВычетыСотрудниковпоНДФЛ.Физлицо = Источник;
			Параметры.ВычетыСотрудниковпоНДФЛ.КодВычета = ВычетыСотрудниковпоНДФЛ.ВидВычета;
			Параметры.ВычетыСотрудниковпоНДФЛ.КоличествоДетей = 1;
			Параметры.ВычетыСотрудниковпоНДФЛ.Период = ?(ПустоеЗначение(ВычетыСотрудниковпоНДФЛ.ДатаНачала) = 1, "",НачМесяца(ВычетыСотрудниковпоНДФЛ.ДатаНачала));
			Параметры.ВычетыСотрудниковпоНДФЛ.ПериодЗавершения = ?(ПустоеЗначение(ВычетыСотрудниковпоНДФЛ.ДатаОкончания) = 1, "",КонМесяца(ВычетыСотрудниковпоНДФЛ.ДатаОкончания));			
			
		Иначе
			Параметры.ВычетыСотрудниковпоНДФЛЛичный.НоваяСтрока();
			Параметры.ВычетыСотрудниковпоНДФЛЛичный.Физлицо = Источник;
			Параметры.ВычетыСотрудниковпоНДФЛЛичный.КодВычетаЛичный = ВычетыСотрудниковпоНДФЛ.ВидВычета.КодДляОтчетности2009;
			Параметры.ВычетыСотрудниковпоНДФЛЛичный.Период = ?(ПустоеЗначение(ВычетыСотрудниковпоНДФЛ.ДатаНачала) = 1, "",НачМесяца(ВычетыСотрудниковпоНДФЛ.ДатаНачала));
		КонецЕсли;
		
	КонецЦикла;
	
	Параметры.ВычетыСотрудниковпоНДФЛ.Свернуть("Физлицо, КодВычета, Период, ПериодЗавершения","КоличествоДетей");
	Параметры.ВычетыСотрудниковпоНДФЛЛичный.Свернуть("Физлицо, КодВычетаЛичный, Период","");
	
	Если (Параметры.ВычетыСотрудниковпоНДФЛ.КоличествоСтрок()&gt;0) 
		или (Параметры.ВычетыСотрудниковпоНДФЛЛичный.КоличествоСтрок()&gt;0) Тогда
			ВходящиеДанные = СоздатьОбъект("СписокЗначений");
			ВходящиеДанные.Установить("Период", Параметры.ДатаВводаОстатков);
			ВыгрузитьПоПравилу(Источник,, ВходящиеДанные,, "НДФЛПрименениеВычетов");
	КонецЕсли;
	
	Параметры.ВычетыСотрудниковпоНДФЛ.ВыбратьСтроки();
	Пока Параметры.ВычетыСотрудниковпоНДФЛ.ПолучитьСтроку() = 1 Цикл
		ВходящиеДанные = СоздатьОбъект("СписокЗначений");
		ВходящиеДанные.Установить("Период", Параметры.ВычетыСотрудниковпоНДФЛ.Период);
		ВходящиеДанные.Установить("ПериодЗавершения", Параметры.ВычетыСотрудниковпоНДФЛ.ПериодЗавершения);
		ВходящиеДанные.Установить("Физлицо", Параметры.ВычетыСотрудниковпоНДФЛ.Физлицо);
		ВходящиеДанные.Установить("КодВычета", Параметры.ВычетыСотрудниковпоНДФЛ.КодВычета);
		ВходящиеДанные.Установить("КоличествоДетей", Параметры.ВычетыСотрудниковпоНДФЛ.КоличествоДетей);
		ВыгрузитьПоПравилу(,, ВходящиеДанные,, "НДФЛСтандартныеВычетыНаДетей");
	КонецЦикла;
	
	Параметры.ВычетыСотрудниковпоНДФЛЛичный.ВыбратьСтроки();
	Пока Параметры.ВычетыСотрудниковпоНДФЛЛичный.ПолучитьСтроку() = 1 Цикл
		ВходящиеДанные = СоздатьОбъект("СписокЗначений");
		ВходящиеДанные.Установить("Период", Параметры.ВычетыСотрудниковпоНДФЛЛичный.Период);
		ВходящиеДанные.Установить("Физлицо", Параметры.ВычетыСотрудниковпоНДФЛЛичный.Физлицо);
		ВходящиеДанные.Установить("КодВычетаЛичный", Параметры.ВычетыСотрудниковпоНДФЛЛичный.КодВычетаЛичный);
		ВыгрузитьПоПравилу(,, ВходящиеДанные,, "НДФЛСтандартныеВычетыФизлиц");
	КонецЦикла;
	
КонецЕсли;</ПослеВыгрузки>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.Сотрудники</Источник>
					<Приемник>СправочникСсылка.ФизическиеЛица</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>2</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Если Параметры.ВыгружатьКоды = Да Тогда
	Значение = Источник.Код;
	
Иначе
	Отказ = 1 ;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Сотрудники"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true">
							<Код>6</Код>
							<Наименование>ИНН --&gt; ИНН</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="ИНН" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="ИНН" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Если Источник.ЭтоГруппа() = 1 Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>11</Код>
							<Наименование> --&gt;</Наименование>
							<Порядок>1100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
							<ПередОбработкойВыгрузки>Отказ = Источник.ЭтоГруппа();</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>5</Код>
								<Наименование>ДатаРождения --&gt; ДатаРождения</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="ДатаРождения" Вид="Реквизит" Тип="Дата"/>
								<Приемник Имя="ДатаРождения" Вид="Реквизит" Тип="Дата"/>
							</Свойство>
							<Свойство>
								<Код>7</Код>
								<Наименование>МестоРождения --&gt; МестоРождения</Наименование>
								<Порядок>700</Порядок>
								<Источник Имя="МестоРождения" Вид="Реквизит" Тип="Строка"/>
								<Приемник Имя="МестоРождения" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>8</Код>
								<Наименование>Пол --&gt; Пол</Наименование>
								<Порядок>800</Порядок>
								<Источник Имя="Пол" Вид="Реквизит" Тип="ПеречислениеСсылка.Пол"/>
								<Приемник Имя="Пол" Вид="Реквизит" Тип="ПеречислениеСсылка.ПолФизическихЛиц"/>
								<КодПравилаКонвертации>ПолФизическихЛиц                                  </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>9</Код>
								<Наименование>СтраховойНомерПФР --&gt; СтраховойНомерПФР</Наименование>
								<Порядок>900</Порядок>
								<Источник Имя="СтраховойНомерПФР" Вид="Реквизит" Тип="Строка"/>
								<Приемник Имя="СтраховойНомерПФР" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>10</Код>
								<Наименование> --&gt; КодИМНС</Наименование>
								<Порядок>1000</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="КодИМНС" Вид="Реквизит" Тип="Строка"/>
								<ПередВыгрузкой>Значение = Лев(Источник.ИНН, 4);</ПередВыгрузкой>
							</Свойство>
						</Группа>
						<Свойство>
							<Код>12</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>1200</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>СтатьиЗатратНаПроизводство</Код>
					<Наименование>СправочникСсылка.СтатьиЗатратНаПроизводство --&gt; СправочникСсылка.СтатьиЗатрат</Наименование>
					<Порядок>1200</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.СтатьиЗатратНаПроизводство</Источник>
					<Приемник>СправочникСсылка.СтатьиЗатрат</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.СтатьиЗатратНаПроизводство"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.СтатьиЗатрат"/>
							<КодПравилаКонвертации>СтатьиЗатратНаПроизводство                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование>ВидРасходовДляНалоговогоУчета --&gt; ВидРасходовНУ</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="ВидРасходовДляНалоговогоУчета" Вид="Реквизит" Тип="ПеречислениеСсылка.ГруппыВидыРасходов"/>
							<Приемник Имя="ВидРасходовНУ" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыРасходовНУ"/>
							<КодПравилаКонвертации>ГруппыВидыРасходов                                </КодПравилаКонвертации>
							<ПередВыгрузкой>Отказ = Источник.ЭтоГруппа();</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>6</Код>
							<Наименование> --&gt; ВидДеятельностиДляНалоговогоУчетаЗатрат</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДеятельностиДляНалоговогоУчетаЗатрат" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыДеятельностиДляНалоговогоУчетаЗатрат"/>
							<ПередВыгрузкой>Отказ = Источник.ЭтоГруппа(); ОтнесениеРасходовКДеятельностиЕНВД();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>СтатьиЗатратНаСтроительство</Код>
					<Наименование>СправочникСсылка.СтатьиЗатратНаСтроительство --&gt; СправочникСсылка.СтатьиЗатрат</Наименование>
					<Порядок>1250</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.СтатьиЗатратНаСтроительство</Источник>
					<Приемник>СправочникСсылка.СтатьиЗатрат</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.СтатьиЗатратНаСтроительство"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.СтатьиЗатрат"/>
							<КодПравилаКонвертации>СтатьиЗатратНаСтроительство                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование> --&gt; ВидРасходовНУ</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидРасходовНУ" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыРасходовНУ"/>
							<ПередВыгрузкой>Отказ = Источник.ЭтоГруппа(); Значение = "НеУчитываемыеВЦеляхНалогообложения";</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование> --&gt; ВидДеятельностиДляНалоговогоУчетаЗатрат</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДеятельностиДляНалоговогоУчетаЗатрат" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыДеятельностиДляНалоговогоУчетаЗатрат"/>
							<ПередВыгрузкой>Отказ = Источник.ЭтоГруппа(); ОтнесениеРасходовКДеятельностиЕНВД();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>СтатьиЗатратОбслуживающихПроизводств</Код>
					<Наименование>СправочникСсылка.СтатьиЗатратОбслуживающихПроизводств --&gt; СправочникСсылка.СтатьиЗатрат</Наименование>
					<Порядок>1300</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.СтатьиЗатратОбслуживающихПроизводств</Источник>
					<Приемник>СправочникСсылка.СтатьиЗатрат</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.СтатьиЗатратОбслуживающихПроизводств"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.СтатьиЗатрат"/>
							<КодПравилаКонвертации>СтатьиЗатратОбслуживающихПроизводств              </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>ВидРасходовДляНалоговогоУчета --&gt; ВидРасходовНУ</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="ВидРасходовДляНалоговогоУчета" Вид="Реквизит" Тип="ПеречислениеСсылка.ГруппыВидыРасходов"/>
							<Приемник Имя="ВидРасходовНУ" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыРасходовНУ"/>
							<КодПравилаКонвертации>ГруппыВидыРасходов                                </КодПравилаКонвертации>
							<ПередВыгрузкой>Отказ = Источник.ЭтоГруппа();</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование> --&gt; ВидДеятельностиДляНалоговогоУчетаЗатрат</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДеятельностиДляНалоговогоУчетаЗатрат" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыДеятельностиДляНалоговогоУчетаЗатрат"/>
							<ПередВыгрузкой>Отказ = Источник.ЭтоГруппа(); ОтнесениеРасходовКДеятельностиЕНВД();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>СтатьиИздержекОбращения</Код>
					<Наименование>СправочникСсылка.СтатьиИздержекОбращения --&gt; СправочникСсылка.СтатьиЗатрат</Наименование>
					<Порядок>1350</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.СтатьиИздержекОбращения</Источник>
					<Приемник>СправочникСсылка.СтатьиЗатрат</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.СтатьиИздержекОбращения"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.СтатьиЗатрат"/>
							<КодПравилаКонвертации>СтатьиИздержекОбращения                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование>ВидРасходовДляНалоговогоУчета --&gt; ВидРасходовНУ</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="ВидРасходовДляНалоговогоУчета" Вид="Реквизит" Тип="ПеречислениеСсылка.ГруппыВидыРасходов"/>
							<Приемник Имя="ВидРасходовНУ" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыРасходовНУ"/>
							<ПередВыгрузкой>Отказ = Источник.ЭтоГруппа();
Если Источник.СписыватьИздержкиПропорциональноОстаткуТоваров.Получить(Параметры.ДатаКонцаПериодаВыгрузки) = 1 Тогда
	Значение = "ТранспортныеРасходы";
	
Иначе
	ИмяПКО = "ГруппыВидыРасходов";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>6</Код>
							<Наименование> --&gt; ВидДеятельностиДляНалоговогоУчетаЗатрат</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДеятельностиДляНалоговогоУчетаЗатрат" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыДеятельностиДляНалоговогоУчетаЗатрат"/>
							<ПередВыгрузкой>Отказ = Источник.ЭтоГруппа(); ОтнесениеРасходовКДеятельностиЕНВД();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>СтатьиКоммерческихРасходов</Код>
					<Наименование>СправочникСсылка.СтатьиКоммерческихРасходов --&gt; СправочникСсылка.СтатьиЗатрат</Наименование>
					<Порядок>1400</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.СтатьиКоммерческихРасходов</Источник>
					<Приемник>СправочникСсылка.СтатьиЗатрат</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.СтатьиКоммерческихРасходов"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.СтатьиЗатрат"/>
							<КодПравилаКонвертации>СтатьиКоммерческихРасходов                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование>ВидРасходовДляНалоговогоУчета --&gt; ВидРасходовНУ</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="ВидРасходовДляНалоговогоУчета" Вид="Реквизит" Тип="ПеречислениеСсылка.ГруппыВидыРасходов"/>
							<Приемник Имя="ВидРасходовНУ" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыРасходовНУ"/>
							<КодПравилаКонвертации>ГруппыВидыРасходов                                </КодПравилаКонвертации>
							<ПередВыгрузкой>Отказ = Источник.ЭтоГруппа();</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>6</Код>
							<Наименование> --&gt; ВидДеятельностиДляНалоговогоУчетаЗатрат</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДеятельностиДляНалоговогоУчетаЗатрат" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыДеятельностиДляНалоговогоУчетаЗатрат"/>
							<ПередВыгрузкой>Отказ = Источник.ЭтоГруппа(); ОтнесениеРасходовКДеятельностиЕНВД();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>СтатьиОбщепроизводственныхЗатрат</Код>
					<Наименование>СправочникСсылка.СтатьиОбщепроизводственныхЗатрат --&gt; СправочникСсылка.СтатьиЗатрат</Наименование>
					<Порядок>1450</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.СтатьиОбщепроизводственныхЗатрат</Источник>
					<Приемник>СправочникСсылка.СтатьиЗатрат</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.СтатьиОбщепроизводственныхЗатрат"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.СтатьиЗатрат"/>
							<КодПравилаКонвертации>СтатьиОбщепроизводственныхЗатрат                  </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>ВидРасходовДляНалоговогоУчета --&gt; ВидРасходовНУ</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="ВидРасходовДляНалоговогоУчета" Вид="Реквизит" Тип="ПеречислениеСсылка.ГруппыВидыРасходов"/>
							<Приемник Имя="ВидРасходовНУ" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыРасходовНУ"/>
							<КодПравилаКонвертации>ГруппыВидыРасходов                                </КодПравилаКонвертации>
							<ПередВыгрузкой>Отказ = Источник.ЭтоГруппа();</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование> --&gt; ВидДеятельностиДляНалоговогоУчетаЗатрат</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДеятельностиДляНалоговогоУчетаЗатрат" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыДеятельностиДляНалоговогоУчетаЗатрат"/>
							<ПередВыгрузкой>Отказ = Источник.ЭтоГруппа(); ОтнесениеРасходовКДеятельностиЕНВД();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>СтатьиОбщехозяйственныхЗатрат</Код>
					<Наименование>СправочникСсылка.СтатьиОбщехозяйственныхЗатрат --&gt; СправочникСсылка.СтатьиЗатрат</Наименование>
					<Порядок>1500</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.СтатьиОбщехозяйственныхЗатрат</Источник>
					<Приемник>СправочникСсылка.СтатьиЗатрат</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.СтатьиОбщехозяйственныхЗатрат"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.СтатьиЗатрат"/>
							<КодПравилаКонвертации>СтатьиОбщехозяйственныхЗатрат                     </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>ВидРасходовДляНалоговогоУчета --&gt; ВидРасходовНУ</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="ВидРасходовДляНалоговогоУчета" Вид="Реквизит" Тип="ПеречислениеСсылка.ГруппыВидыРасходов"/>
							<Приемник Имя="ВидРасходовНУ" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыРасходовНУ"/>
							<КодПравилаКонвертации>ГруппыВидыРасходов                                </КодПравилаКонвертации>
							<ПередВыгрузкой>Отказ = Источник.ЭтоГруппа();</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование> --&gt; ВидДеятельностиДляНалоговогоУчетаЗатрат</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДеятельностиДляНалоговогоУчетаЗатрат" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыДеятельностиДляНалоговогоУчетаЗатрат"/>
							<ПередВыгрузкой>Отказ = Источник.ЭтоГруппа(); ОтнесениеРасходовКДеятельностиЕНВД();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>СтатьиРасходовНаПродажу</Код>
					<Наименование>СправочникСсылка.СтатьиРасходовНаПродажу --&gt; СправочникСсылка.СтатьиЗатрат</Наименование>
					<Порядок>1550</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.СтатьиРасходовНаПродажу</Источник>
					<Приемник>СправочникСсылка.СтатьиЗатрат</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.СтатьиРасходовНаПродажу"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.СтатьиЗатрат"/>
							<КодПравилаКонвертации>СтатьиРасходовНаПродажу                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>ВидРасходовДляНалоговогоУчета --&gt; ВидРасходовНУ</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="ВидРасходовДляНалоговогоУчета" Вид="Реквизит" Тип="ПеречислениеСсылка.ГруппыВидыРасходов"/>
							<Приемник Имя="ВидРасходовНУ" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыРасходовНУ"/>
							<КодПравилаКонвертации>ГруппыВидыРасходов                                </КодПравилаКонвертации>
							<ПередВыгрузкой>Отказ = Источник.ЭтоГруппа();</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование> --&gt; ВидДеятельностиДляНалоговогоУчетаЗатрат</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДеятельностиДляНалоговогоУчетаЗатрат" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыДеятельностиДляНалоговогоУчетаЗатрат"/>
							<ПередВыгрузкой>Отказ = Источник.ЭтоГруппа(); ОтнесениеРасходовКДеятельностиЕНВД();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ЦенныеБумаги</Код>
					<Наименование>СправочникСсылка.ЦенныеБумаги --&gt; СправочникСсылка.ЦенныеБумаги</Наименование>
					<Порядок>1600</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.ЦенныеБумаги</Источник>
					<Приемник>СправочникСсылка.ЦенныеБумаги</Приемник>
					<Свойства>
						<Свойство Отключить="true">
							<Код>1</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Если Параметры.ВыгружатьКоды = Да Тогда
	Значение = ПривестиНомерКДлине(Источник.Код, Параметры.ДлинаКода);
	
Иначе
	Отказ = 1 ;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>РБП_НМА</Код>
					<Наименование>СправочникСсылка.РасходыБудущихПериодов --&gt; СправочникСсылка.НематериальныеАктивы</Наименование>
					<Порядок>1650</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.РасходыБудущихПериодов</Источник>
					<Приемник>СправочникСсылка.НематериальныеАктивы</Приемник>
					<Свойства>
						<Свойство Отключить="true">
							<Код>2</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Если Параметры.ВыгружатьКоды = Да Тогда
	Значение = ПривестиНомерКДлине(Источник.Код, Параметры.ДлинаКода);
	
Иначе
	Отказ = 1 ;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.РасходыБудущихПериодов"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.НематериальныеАктивы"/>
							<КодПравилаКонвертации>РБП_НМА                                           </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ПустоеЗначение(Источник.Родитель) = 1 Тогда
	ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
	ИсходящиеДанные.Установить("Наименование", "Расходы на НИОКР");
	ИмяПКО = "ГруппаНМА";
	Значение = "1";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>6</Код>
							<Наименование> --&gt; ВидОбъектаУчета</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидОбъектаУчета" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыОбъектовУчетаНМА"/>
							<ПередВыгрузкой>Значение = "РасходыНаНИОКР"; Отказ = Источник.ЭтоГруппа();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>СтатьиДвиженияДенежныхСредств</Код>
					<Наименование>СправочникСсылка.ДвиженияДенежныхСредств --&gt; СправочникСсылка.СтатьиДвиженияДенежныхСредств</Наименование>
					<Порядок>1700</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.ДвиженияДенежныхСредств</Источник>
					<Приемник>СправочникСсылка.СтатьиДвиженияДенежныхСредств</Приемник>
					<Свойства>
						<Свойство>
							<Код>1</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>2</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Если Параметры.ВыгружатьКоды = Да Тогда
	Значение = ПривестиНомерКДлине(Источник.Код, Параметры.ДлинаКода);
	
Иначе
	Отказ = 1 ;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>ВидДвижения --&gt; ВидДвиженияДенежныхСредств</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="ВидДвижения" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыДвиженийДенежныхСредств"/>
							<Приемник Имя="ВидДвиженияДенежныхСредств" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыДвиженийДенежныхСредств"/>
							<ПередВыгрузкой>Если Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ВыручкаПоОбычнымВидамДеятельности Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Текущая Тогда
		Значение = "СредстваПолученныеОтПокупателейИЗаказчиков";
		
	Иначе
		Отказ = 1;
	КонецЕсли;
		
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ВыручкаПоПрочимОперациям Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Текущая Тогда
		Значение = "ПрочиеПоступленияПоТекущейДеятельности";
		
	ИначеЕсли Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Инвестиционная Тогда
		Значение = "ПрочиеПоступленияПоИнвестиционнойДеятельности";
		
	Иначе
		Отказ = 1;
	КонецЕсли;
		
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ЦелевоеФинансирование Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Текущая Тогда
		Значение = "ПрочиеПоступленияПоТекущейДеятельности";
		
	Иначе
		Отказ = 1;
	КонецЕсли;
	
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.БезвозмездныеПоступления Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Текущая Тогда
		Значение = "ПрочиеПоступленияПоТекущейДеятельности";
		
	Иначе
		Отказ = 1;
	КонецЕсли;
	
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.КредитыПолученные Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Финансовая Тогда
		Значение = "ПоступленияОтЗаймовИКредитовПредоставленныхДругимиОрганизациями";
		
	Иначе
		Отказ = 1;
	КонецЕсли;
	
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ЗаймыПолученные Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Финансовая Тогда
		Значение = "ПоступленияОтЗаймовИКредитовПредоставленныхДругимиОрганизациями";
		
	Иначе
		Отказ = 1;
	КонецЕсли;
	
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ДивидендыПроцентыПолученные Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Инвестиционная Тогда
		Значение = "ПолученныеДивиденды";
		
	Иначе
		Отказ = 1;
	КонецЕсли;
	
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ПолученоИзБанкаНаличными Тогда
	Отказ = 1;
	
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.КупляПродажаИностраннойВалюты Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Текущая Тогда
		Значение = "ПрочиеПоступленияПоТекущейДеятельности";
		
	Иначе
		Отказ = 1;
	КонецЕсли;
	
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ПрочиеПоступления Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Текущая Тогда
		Значение = "ПрочиеПоступленияПоТекущейДеятельности";
		
	ИначеЕсли Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Инвестиционная Тогда
		Значение = "ПрочиеПоступленияПоИнвестиционнойДеятельности";
		
	ИначеЕсли Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Финансовая Тогда
		Значение = "ПрочиеРасходыПоФинансовойДеятельности";
	Иначе
		Отказ = 1;
	КонецЕсли;
	
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ПриобретениеТоваровПродукцииРаботИУслуг Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Текущая Тогда
		Значение = "ОплатаОборотныхАктивов";
		
	Иначе
		Отказ = 1;
	КонецЕсли;
	
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ОплатаТруда Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Текущая Тогда
		Значение = "ОплатаТруда";
		
	Иначе
		Отказ = 1;
	КонецЕсли;
	
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ПлатежиВСоциальныеФонды Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Текущая Тогда
		Значение = "ОплатаПоПенсионнымПланам";
		
	Иначе
		Отказ = 1;
	КонецЕсли;
	
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ВыданныеПодотчетныеСуммы Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Текущая Тогда
		Значение = "ПрочиеРасходыПоТекущейДеятельности";
		
	Иначе
		Отказ = 1;
	КонецЕсли;
	
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ДолевоеУчастиеВСтроительстве Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Текущая Тогда
		Значение = "ПрочиеРасходыПоТекущейДеятельности";
		
	Иначе
		Отказ = 1;
	КонецЕсли;
	
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ПриобретениеМашинОборудованияИТранспортныхСредств Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Текущая Тогда
		Значение = "ПриобретениеОбъектовОсновныхСредств";
		
	Иначе
		Отказ = 1;
	КонецЕсли;
	
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ФинансовыеВложения Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Инвестиционная Тогда
		Значение = "ПриобретениеЦенныхБумагИИныхФинансовыхВложений";
		
	Иначе
		Отказ = 1;
	КонецЕсли;
	
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ДивидендыПроцентыВыплаченные Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Текущая Тогда
		Значение = "ВыплатаДивидендовПроцентов";
		
	Иначе
		Отказ = 1;
	КонецЕсли;
	
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ПлатежиВБюджет Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Текущая Тогда
		Значение = "РасчетыПоНалогамИСборам";
		
	Иначе
		Отказ = 1;
	КонецЕсли;
	
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ВозвратКредитовИЗаймов Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Финансовая Тогда
		Значение = "ПогашениеЗаймовИКредитов";
		
	Иначе
		Отказ = 1;
	КонецЕсли;
	
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.СданоВБанкНаличными Тогда
	Отказ = 1;
	
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ПрочиеВыплатыИПеречисления Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Текущая Тогда
		Значение = "ПрочиеРасходыПоТекущейДеятельности";
		
	ИначеЕсли Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Инвестиционная Тогда
		Значение = "ПрочиеРасходыПоИнвестиционнойДеятельности";
		
	ИначеЕсли Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Финансовая Тогда
		Значение = "ПрочиеРасходыПоФинансовойДеятельности";
	Иначе
		Отказ = 1;
	КонецЕсли;
	
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ВыручкаОтПродажиЦенныхБумаг Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Инвестиционная Тогда
		Значение = "ВыручкаОтПродажиЦенныхБумагИИныхФинансовыхВложений";
		
	Иначе
		Отказ = 1;
	КонецЕсли;
	
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ПроцентыПолученные Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Инвестиционная Тогда
		Значение = "ПолученныеПроценты";
		
	Иначе
		Отказ = 1;
	КонецЕсли;
	
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ПоступленияОтПогашенияЗаймов Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Инвестиционная Тогда
		Значение = "ПоступленияОтПогашенияЗаймовПредоставленныхДругимОрганизациям";
		
	Иначе
		Отказ = 1;
	КонецЕсли;
	
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ПриобретениеДочернихОрганизаций Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Инвестиционная Тогда
		Значение = "ПриобретениеДочернихОрганизаций";
		
	Иначе
		Отказ = 1;
	КонецЕсли;
	
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ПредоставленныеЗаймы Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Инвестиционная Тогда
		Значение = "ЗаймыПредоставленныеДругимОрганизациям";
		
	Иначе
		Отказ = 1;
	КонецЕсли;
	
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ПоступленияОтЭмиссииАкций Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Финансовая Тогда
		Значение = "ПоступленияОтЭмиссииАкций";
		
	Иначе
		Отказ = 1;
	КонецЕсли;
	
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ПогашениеОбязательствПоФинансовойАренде Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Финансовая Тогда
		Значение = "ПогашениеОбязательствПоФинансовойАренде";
		
	Иначе
		Отказ = 1;
	КонецЕсли;
	
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>СотрудникиОрганизаций</Код>
					<Наименование>СправочникСсылка.Сотрудники --&gt; СправочникСсылка.СотрудникиОрганизаций</Наименование>
					<Порядок>1750</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.Сотрудники</Источник>
					<Приемник>СправочникСсылка.СотрудникиОрганизаций</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Сотрудники"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.СотрудникиОрганизаций"/>
							<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>8</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Если Источник.ЭтоГруппа() = 1 Тогда
	Отказ = 1;
	
Иначе
	Значение = "1";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>10</Код>
							<Наименование> --&gt;</Наименование>
							<Порядок>1000</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
							<ПередОбработкойВыгрузки>Если Источник.ЭтоГруппа() = 1 Тогда
	Отказ = 1;
КонецЕсли;</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>6</Код>
								<Наименование> --&gt; Актуальность</Наименование>
								<Порядок>600</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Актуальность" Вид="Реквизит" Тип="Булево"/>
								<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>7</Код>
								<Наименование> --&gt; ВидЗанятости</Наименование>
								<Порядок>700</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ВидЗанятости" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыЗанятостиВОрганизации"/>
								<ПередВыгрузкой>Значение = "ОсновноеМестоРаботы";</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>9</Код>
								<Наименование> --&gt; Физлицо</Наименование>
								<Порядок>900</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Физлицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
								<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
								<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>БланкиСтрогойОтчетности</Код>
					<Наименование>СправочникСсылка.БланкиСтрогойОтчетности --&gt; СправочникСсылка.БланкиСтрогойОтчетности</Наименование>
					<Порядок>1800</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.БланкиСтрогойОтчетности</Источник>
					<Приемник>СправочникСсылка.БланкиСтрогойОтчетности</Приемник>
					<Свойства>
						<Свойство Отключить="true">
							<Код>1</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Число"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
			</Группа>
			<Группа>
				<Код>Перечисления</Код>
				<Наименование>Перечисления</Наименование>
				<Порядок>200</Порядок>
				<Правило>
					<Код>ВидыНачисленийОплатыТрудаПоСт255НК</Код>
					<Наименование>ПеречислениеСсылка.ВидыНачисленийПоОплатеТруда --&gt; ПеречислениеСсылка.ВидыНачисленийОплатыТрудаПоСт2</Наименование>
					<Порядок>100</Порядок>
					<Источник>ПеречислениеСсылка.ВидыНачисленийПоОплатеТруда</Источник>
					<Приемник>ПеречислениеСсылка.ВидыНачисленийОплатыТрудаПоСт255НК</Приемник>
					<Свойства/>
					<Значения>
						<Значение>
							<Код>1</Код>
							<Наименование>пп1ст255 --&gt; пп1ст255</Наименование>
							<Порядок>100</Порядок>
							<Источник>пп1ст255</Источник>
							<Приемник>пп1ст255</Приемник>
						</Значение>
						<Значение>
							<Код>2</Код>
							<Наименование>пп2ст255 --&gt; пп2ст255</Наименование>
							<Порядок>200</Порядок>
							<Источник>пп2ст255</Источник>
							<Приемник>пп2ст255</Приемник>
						</Значение>
						<Значение>
							<Код>3</Код>
							<Наименование>пп3ст255 --&gt; пп3ст255</Наименование>
							<Порядок>300</Порядок>
							<Источник>пп3ст255</Источник>
							<Приемник>пп3ст255</Приемник>
						</Значение>
						<Значение>
							<Код>4</Код>
							<Наименование>пп4ст255 --&gt; пп4ст255</Наименование>
							<Порядок>400</Порядок>
							<Источник>пп4ст255</Источник>
							<Приемник>пп4ст255</Приемник>
						</Значение>
						<Значение>
							<Код>5</Код>
							<Наименование>пп5ст255 --&gt; пп5ст255</Наименование>
							<Порядок>500</Порядок>
							<Источник>пп5ст255</Источник>
							<Приемник>пп5ст255</Приемник>
						</Значение>
						<Значение>
							<Код>6</Код>
							<Наименование>пп6ст255 --&gt; пп6ст255</Наименование>
							<Порядок>600</Порядок>
							<Источник>пп6ст255</Источник>
							<Приемник>пп6ст255</Приемник>
						</Значение>
						<Значение>
							<Код>7</Код>
							<Наименование>пп7ст255 --&gt; пп7ст255</Наименование>
							<Порядок>700</Порядок>
							<Источник>пп7ст255</Источник>
							<Приемник>пп7ст255</Приемник>
						</Значение>
						<Значение>
							<Код>8</Код>
							<Наименование>пп8ст255 --&gt; пп8ст255</Наименование>
							<Порядок>800</Порядок>
							<Источник>пп8ст255</Источник>
							<Приемник>пп8ст255</Приемник>
						</Значение>
						<Значение>
							<Код>9</Код>
							<Наименование>пп9ст255 --&gt; пп9ст255</Наименование>
							<Порядок>900</Порядок>
							<Источник>пп9ст255</Источник>
							<Приемник>пп9ст255</Приемник>
						</Значение>
						<Значение>
							<Код>10</Код>
							<Наименование>пп10ст255 --&gt; пп10ст255</Наименование>
							<Порядок>1000</Порядок>
							<Источник>пп10ст255</Источник>
							<Приемник>пп10ст255</Приемник>
						</Значение>
						<Значение>
							<Код>11</Код>
							<Наименование>пп11ст255 --&gt; пп11ст255</Наименование>
							<Порядок>1100</Порядок>
							<Источник>пп11ст255</Источник>
							<Приемник>пп11ст255</Приемник>
						</Значение>
						<Значение>
							<Код>12</Код>
							<Наименование>пп12ст255 --&gt; пп12ст255</Наименование>
							<Порядок>1200</Порядок>
							<Источник>пп12ст255</Источник>
							<Приемник>пп12ст255</Приемник>
						</Значение>
						<Значение>
							<Код>13</Код>
							<Наименование>пп13ст255 --&gt; пп13ст255</Наименование>
							<Порядок>1300</Порядок>
							<Источник>пп13ст255</Источник>
							<Приемник>пп13ст255</Приемник>
						</Значение>
						<Значение>
							<Код>14</Код>
							<Наименование>пп14ст255 --&gt; пп14ст255</Наименование>
							<Порядок>1400</Порядок>
							<Источник>пп14ст255</Источник>
							<Приемник>пп14ст255</Приемник>
						</Значение>
						<Значение>
							<Код>15</Код>
							<Наименование>пп15ст255 --&gt; пп15ст255</Наименование>
							<Порядок>1500</Порядок>
							<Источник>пп15ст255</Источник>
							<Приемник>пп15ст255</Приемник>
						</Значение>
						<Значение>
							<Код>16</Код>
							<Наименование>пп16ст255 --&gt; пп16ст255</Наименование>
							<Порядок>1600</Порядок>
							<Источник>пп16ст255</Источник>
							<Приемник>пп16ст255</Приемник>
						</Значение>
						<Значение>
							<Код>17</Код>
							<Наименование>пп17ст255 --&gt; пп17ст255</Наименование>
							<Порядок>1700</Порядок>
							<Источник>пп17ст255</Источник>
							<Приемник>пп17ст255</Приемник>
						</Значение>
						<Значение>
							<Код>18</Код>
							<Наименование>пп18ст255 --&gt; пп18ст255</Наименование>
							<Порядок>1800</Порядок>
							<Источник>пп18ст255</Источник>
							<Приемник>пп18ст255</Приемник>
						</Значение>
						<Значение>
							<Код>19</Код>
							<Наименование>пп19ст255 --&gt; пп19ст255</Наименование>
							<Порядок>1900</Порядок>
							<Источник>пп19ст255</Источник>
							<Приемник>пп19ст255</Приемник>
						</Значение>
						<Значение>
							<Код>20</Код>
							<Наименование>пп20ст255 --&gt; пп20ст255</Наименование>
							<Порядок>2000</Порядок>
							<Источник>пп20ст255</Источник>
							<Приемник>пп20ст255</Приемник>
						</Значение>
						<Значение>
							<Код>21</Код>
							<Наименование>пп21ст255 --&gt; пп21ст255</Наименование>
							<Порядок>2100</Порядок>
							<Источник>пп21ст255</Источник>
							<Приемник>пп21ст255</Приемник>
						</Значение>
						<Значение>
							<Код>22</Код>
							<Наименование>пп22ст255 --&gt; пп22ст255</Наименование>
							<Порядок>2200</Порядок>
							<Источник>пп22ст255</Источник>
							<Приемник>пп22ст255</Приемник>
						</Значение>
						<Значение>
							<Код>23</Код>
							<Наименование>пп23ст255 --&gt; пп23ст255</Наименование>
							<Порядок>2300</Порядок>
							<Источник>пп23ст255</Источник>
							<Приемник>пп23ст255</Приемник>
						</Значение>
						<Значение>
							<Код>24</Код>
							<Наименование>пп24ст255 --&gt; пп24ст255</Наименование>
							<Порядок>2400</Порядок>
							<Источник>пп24ст255</Источник>
							<Приемник>пп24ст255</Приемник>
						</Значение>
						<Значение>
							<Код>25</Код>
							<Наименование>пп25ст255 --&gt; пп25ст255</Наименование>
							<Порядок>2500</Порядок>
							<Источник>пп25ст255</Источник>
							<Приемник>пп25ст255</Приемник>
						</Значение>
					</Значения>
				</Правило>
				<Правило>
					<Код>ВидыАктивовИОбязательств</Код>
					<Наименование>ПеречислениеСсылка.ВидыАктивовИобязательств --&gt; ПеречислениеСсылка.ВидыАктивовИОбязательств</Наименование>
					<Порядок>200</Порядок>
					<ПередВыгрузкой>Источник = Источник.Идентификатор();</ПередВыгрузкой>
					<Источник>ПеречислениеСсылка.ВидыАктивовИобязательств</Источник>
					<Приемник>ПеречислениеСсылка.ВидыАктивовИОбязательств</Приемник>
					<Свойства/>
					<Значения>
						<Значение>
							<Код>1</Код>
							<Наименование>ОсновныеСредства --&gt; ОсновныеСредства</Наименование>
							<Порядок>100</Порядок>
							<Источник>ОсновныеСредства</Источник>
							<Приемник>ОсновныеСредства</Приемник>
						</Значение>
						<Значение>
							<Код>2</Код>
							<Наименование>НематериальныеАктивы --&gt; НематериальныеАктивы</Наименование>
							<Порядок>200</Порядок>
							<Источник>НематериальныеАктивы</Источник>
							<Приемник>НематериальныеАктивы</Приемник>
						</Значение>
						<Значение>
							<Код>3</Код>
							<Наименование>Оборудование --&gt; Оборудование</Наименование>
							<Порядок>300</Порядок>
							<Источник>Оборудование</Источник>
							<Приемник>Оборудование</Приемник>
						</Значение>
						<Значение>
							<Код>4</Код>
							<Наименование>ВнеоборотныеАктивы --&gt; ВнеоборотныеАктивы</Наименование>
							<Порядок>400</Порядок>
							<Источник>ВнеоборотныеАктивы</Источник>
							<Приемник>ВнеоборотныеАктивы</Приемник>
						</Значение>
						<Значение>
							<Код>5</Код>
							<Наименование>Материалы --&gt; Материалы</Наименование>
							<Порядок>500</Порядок>
							<Источник>Материалы</Источник>
							<Приемник>Материалы</Приемник>
						</Значение>
						<Значение>
							<Код>6</Код>
							<Наименование>НезавершенноеПроизводство --&gt; НезавершенноеПроизво</Наименование>
							<Порядок>600</Порядок>
							<Источник>НезавершенноеПроизводство</Источник>
							<Приемник>НезавершенноеПроизводство</Приемник>
						</Значение>
						<Значение>
							<Код>7</Код>
							<Наименование>ГотоваяПродукция --&gt; ГотоваяПродукция</Наименование>
							<Порядок>700</Порядок>
							<Источник>ГотоваяПродукция</Источник>
							<Приемник>ГотоваяПродукция</Приемник>
						</Значение>
						<Значение>
							<Код>8</Код>
							<Наименование>Полуфабрикаты --&gt; Полуфабрикаты</Наименование>
							<Порядок>800</Порядок>
							<Источник>Полуфабрикаты</Источник>
							<Приемник>Полуфабрикаты</Приемник>
						</Значение>
						<Значение>
							<Код>9</Код>
							<Наименование>РасходыБудущихПериодов --&gt; РасходыБудущихПериодов</Наименование>
							<Порядок>900</Порядок>
							<Источник>РасходыБудущихПериодов</Источник>
							<Приемник>РасходыБудущихПериодов</Приемник>
						</Значение>
						<Значение>
							<Код>10</Код>
							<Наименование>Товары --&gt; Товары</Наименование>
							<Порядок>1000</Порядок>
							<Источник>Товары</Источник>
							<Приемник>Товары</Приемник>
						</Значение>
						<Значение>
							<Код>11</Код>
							<Наименование>ТоварыОтгруженные --&gt; ТоварыОтгруженные</Наименование>
							<Порядок>1100</Порядок>
							<Источник>ТоварыОтгруженные</Источник>
							<Приемник>ТоварыОтгруженные</Приемник>
						</Значение>
						<Значение>
							<Код>12</Код>
							<Наименование>ИздержкиОбращения --&gt; ИздержкиОбращения</Наименование>
							<Порядок>1200</Порядок>
							<Источник>ИздержкиОбращения</Источник>
							<Приемник>ИздержкиОбращения</Приемник>
						</Значение>
						<Значение>
							<Код>13</Код>
							<Наименование>ДебиторскаяЗадолженность --&gt; ДебиторскаяЗадолженно</Наименование>
							<Порядок>1300</Порядок>
							<Источник>ДебиторскаяЗадолженность</Источник>
							<Приемник>ДебиторскаяЗадолженность</Приемник>
						</Значение>
						<Значение>
							<Код>14</Код>
							<Наименование>ФинансовыеВложения --&gt; ФинансовыеВложения</Наименование>
							<Порядок>1400</Порядок>
							<Источник>ФинансовыеВложения</Источник>
							<Приемник>ФинансовыеВложения</Приемник>
						</Значение>
						<Значение>
							<Код>15</Код>
							<Наименование>Паи --&gt; ФинансовыеВложения</Наименование>
							<Порядок>1500</Порядок>
							<Источник>Паи</Источник>
							<Приемник>ФинансовыеВложения</Приемник>
						</Значение>
						<Значение>
							<Код>16</Код>
							<Наименование>ПраваТребования --&gt; ДебиторскаяЗадолженность</Наименование>
							<Порядок>1600</Порядок>
							<Источник>ПраваТребования</Источник>
							<Приемник>ДебиторскаяЗадолженность</Приемник>
						</Значение>
						<Значение>
							<Код>17</Код>
							<Наименование>НедостачиПотери --&gt; УбытокТекущегоПериода</Наименование>
							<Порядок>1700</Порядок>
							<Источник>НедостачиПотери</Источник>
							<Приемник>УбытокТекущегоПериода</Приемник>
						</Значение>
						<Значение>
							<Код>18</Код>
							<Наименование>ДоходыБудущихПериодов --&gt; ДоходыБудущихПериодов</Наименование>
							<Порядок>1800</Порядок>
							<Источник>ДоходыБудущихПериодов</Источник>
							<Приемник>ДоходыБудущихПериодов</Приемник>
						</Значение>
						<Значение>
							<Код>19</Код>
							<Наименование>РезервыСомнительныхДолгов --&gt; ДебиторскаяЗадолженн</Наименование>
							<Порядок>1900</Порядок>
							<Источник>РезервыСомнительныхДолгов</Источник>
							<Приемник>ДебиторскаяЗадолженность</Приемник>
						</Значение>
						<Значение>
							<Код>20</Код>
							<Наименование>КредиторскаяЗадолженность --&gt; КредиторскаяЗадолжен</Наименование>
							<Порядок>2000</Порядок>
							<Источник>КредиторскаяЗадолженность</Источник>
							<Приемник>КредиторскаяЗадолженность</Приемник>
						</Значение>
						<Значение>
							<Код>21</Код>
							<Наименование>УбыткиПрошлыхПериодов --&gt; УбытокТекущегоПериода</Наименование>
							<Порядок>2100</Порядок>
							<Источник>УбыткиПрошлыхПериодов</Источник>
							<Приемник>УбытокТекущегоПериода</Приемник>
						</Значение>
						<Значение>
							<Код>22</Код>
							<Наименование>КурсовыеРазницыПриОплатеВРублях --&gt; КурсовыеРазниц</Наименование>
							<Порядок>2200</Порядок>
							<Источник>КурсовыеРазницыПриОплатеВРублях</Источник>
							<Приемник>КурсовыеРазницыПоРасчетамВУЕ</Приемник>
						</Значение>
					</Значения>
				</Правило>
				<Правило>
					<Код>ВидыПлатежейВБюджет</Код>
					<Наименование>ПеречислениеСсылка.ВидыПлатежейВБюджет --&gt; ПеречислениеСсылка.ВидыПлатежейВГосБюджет</Наименование>
					<Порядок>300</Порядок>
					<ПередВыгрузкой>Источник = Источник.Идентификатор();</ПередВыгрузкой>
					<Источник>ПеречислениеСсылка.ВидыПлатежейВБюджет</Источник>
					<Приемник>ПеречислениеСсылка.ВидыПлатежейВГосБюджет</Приемник>
					<Свойства/>
					<Значения>
						<Значение>
							<Код>1</Код>
							<Наименование>Налог --&gt; Налог</Наименование>
							<Порядок>100</Порядок>
							<Источник>Налог</Источник>
							<Приемник>Налог</Приемник>
						</Значение>
						<Значение>
							<Код>2</Код>
							<Наименование>НалогСам --&gt; НалогСам</Наименование>
							<Порядок>200</Порядок>
							<Источник>НалогСам</Источник>
							<Приемник>НалогСам</Приемник>
						</Значение>
						<Значение>
							<Код>3</Код>
							<Наименование>НалогАкт --&gt; НалогАкт</Наименование>
							<Порядок>300</Порядок>
							<Источник>НалогАкт</Источник>
							<Приемник>НалогАкт</Приемник>
						</Значение>
						<Значение>
							<Код>4</Код>
							<Наименование>Штраф --&gt; Штраф</Наименование>
							<Порядок>400</Порядок>
							<Источник>Штраф</Источник>
							<Приемник>Штраф</Приемник>
						</Значение>
						<Значение>
							<Код>5</Код>
							<Наименование>Пени --&gt; ПениСам</Наименование>
							<Порядок>500</Порядок>
							<Источник>Пени</Источник>
							<Приемник>ПениСам</Приемник>
						</Значение>
					</Значения>
				</Правило>
				<Правило>
					<Код>ВидыПлатежейВФонды</Код>
					<Наименование>ПеречислениеСсылка.ВидыПлатежейВФонды --&gt; ПеречислениеСсылка.ВидыПлатежейВГосБюджет</Наименование>
					<Порядок>400</Порядок>
					<ПередВыгрузкой>Источник = Источник.Идентификатор();</ПередВыгрузкой>
					<Источник>ПеречислениеСсылка.ВидыПлатежейВФонды</Источник>
					<Приемник>ПеречислениеСсылка.ВидыПлатежейВГосБюджет</Приемник>
					<Свойства/>
					<Значения>
						<Значение>
							<Код>1</Код>
							<Наименование>Взносы --&gt; Налог</Наименование>
							<Порядок>100</Порядок>
							<Источник>Взносы</Источник>
							<Приемник>Налог</Приемник>
						</Значение>
						<Значение>
							<Код>2</Код>
							<Наименование>ВзносыСам --&gt; НалогСам</Наименование>
							<Порядок>200</Порядок>
							<Источник>ВзносыСам</Источник>
							<Приемник>НалогСам</Приемник>
						</Значение>
						<Значение>
							<Код>3</Код>
							<Наименование>ВзносыАкт --&gt; НалогСам</Наименование>
							<Порядок>300</Порядок>
							<Источник>ВзносыАкт</Источник>
							<Приемник>НалогСам</Приемник>
						</Значение>
						<Значение>
							<Код>4</Код>
							<Наименование>ПениСам --&gt; ПениСам</Наименование>
							<Порядок>400</Порядок>
							<Источник>ПениСам</Источник>
							<Приемник>ПениСам</Приемник>
						</Значение>
						<Значение>
							<Код>5</Код>
							<Наименование>ПениАкт --&gt; ПениАкт</Наименование>
							<Порядок>500</Порядок>
							<Источник>ПениАкт</Источник>
							<Приемник>ПениАкт</Приемник>
						</Значение>
						<Значение>
							<Код>6</Код>
							<Наименование>Путевки --&gt; РасходыПоСтрахованию</Наименование>
							<Порядок>600</Порядок>
							<Источник>Путевки</Источник>
							<Приемник>РасходыПоСтрахованию</Приемник>
						</Значение>
						<Значение>
							<Код>7</Код>
							<Наименование>НеПринято --&gt; НеПринято</Наименование>
							<Порядок>700</Порядок>
							<Источник>НеПринято</Источник>
							<Приемник>НеПринято</Приемник>
						</Значение>
						<Значение>
							<Код>8</Код>
							<Наименование>Штраф --&gt; Штраф</Наименование>
							<Порядок>800</Порядок>
							<Источник>Штраф</Источник>
							<Приемник>Штраф</Приемник>
						</Значение>
						<Значение>
							<Код>9</Код>
							<Наименование>ПолученоИзфонда --&gt; ПолученоИзФонда</Наименование>
							<Порядок>900</Порядок>
							<Источник>ПолученоИзфонда</Источник>
							<Приемник>ПолученоИзФонда</Приемник>
						</Значение>
						<Значение>
							<Код>10</Код>
							<Наименование>РасходыПоСтрахованию --&gt; РасходыПоСтрахованию</Наименование>
							<Порядок>1000</Порядок>
							<Источник>РасходыПоСтрахованию</Источник>
							<Приемник>РасходыПоСтрахованию</Приемник>
						</Значение>
						<Значение>
							<Код>11</Код>
							<Наименование>ПолученоОтНалоговогоОргана --&gt; ПолученоИзФонда</Наименование>
							<Порядок>1100</Порядок>
							<Источник>ПолученоОтНалоговогоОргана</Источник>
							<Приемник>ПолученоИзФонда</Приемник>
						</Значение>
					</Значения>
				</Правило>
				<Правило>
					<Код>ГруппыВидыРасходов</Код>
					<Наименование>ПеречислениеСсылка.ГруппыВидыРасходов --&gt; ПеречислениеСсылка.ВидыРасходовНУ</Наименование>
					<Порядок>500</Порядок>
					<ПередВыгрузкой>Источник = Источник.Идентификатор();</ПередВыгрузкой>
					<Источник>ПеречислениеСсылка.ГруппыВидыРасходов</Источник>
					<Приемник>ПеречислениеСсылка.ВидыРасходовНУ</Приемник>
					<Свойства/>
					<Значения>
						<Значение>
							<Код>1</Код>
							<Наименование>ОплатаТруда --&gt; ОплатаТруда</Наименование>
							<Порядок>100</Порядок>
							<Источник>ОплатаТруда</Источник>
							<Приемник>ОплатаТруда</Приемник>
						</Значение>
						<Значение>
							<Код>2</Код>
							<Наименование>МатериальныеРасходы --&gt; МатериальныеРасходы</Наименование>
							<Порядок>200</Порядок>
							<Источник>МатериальныеРасходы</Источник>
							<Приемник>МатериальныеРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>3</Код>
							<Наименование>Амортизация --&gt; Амортизация</Наименование>
							<Порядок>300</Порядок>
							<Источник>Амортизация</Источник>
							<Приемник>Амортизация</Приемник>
						</Значение>
						<Значение>
							<Код>4</Код>
							<Наименование>ДобровольноеИОбязательноеСтрахование --&gt; Обязатель</Наименование>
							<Порядок>400</Порядок>
							<Источник>ДобровольноеИОбязательноеСтрахование</Источник>
							<Приемник>ОбязательноеИДобровольноеСтрахованиеИмущества</Приемник>
						</Значение>
						<Значение>
							<Код>5</Код>
							<Наименование>ЕСН --&gt; ОплатаТруда</Наименование>
							<Порядок>500</Порядок>
							<Источник>ЕСН</Источник>
							<Приемник>ОплатаТруда</Приемник>
						</Значение>
						<Значение>
							<Код>6</Код>
							<Наименование>НалогиИСборы --&gt; НалогиИСборы</Наименование>
							<Порядок>600</Порядок>
							<Источник>НалогиИСборы</Источник>
							<Приемник>НалогиИСборы</Приемник>
						</Значение>
						<Значение>
							<Код>7</Код>
							<Наименование>ПользованиеПравамиНаРезультатыИнтеллектуальнойДеят</Наименование>
							<Порядок>700</Порядок>
							<Источник>ПользованиеПравамиНаРезультатыИнтеллектуальнойДеятельности</Источник>
							<Приемник>ПрочиеРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>8</Код>
							<Наименование>РасходыНаКомандировки --&gt; ПрочиеРасходы</Наименование>
							<Порядок>800</Порядок>
							<Источник>РасходыНаКомандировки</Источник>
							<Приемник>ПрочиеРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>9</Код>
							<Наименование>ПредставительскиеРасходы --&gt; ПредставительскиеРасх</Наименование>
							<Порядок>900</Порядок>
							<Источник>ПредставительскиеРасходы</Источник>
							<Приемник>ПредставительскиеРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>10</Код>
							<Наименование>РасходыНаРекламу --&gt; РасходыНаРекламуНормируемые</Наименование>
							<Порядок>1000</Порядок>
							<Источник>РасходыНаРекламу</Источник>
							<Приемник>РасходыНаРекламуНормируемые</Приемник>
						</Значение>
						<Значение>
							<Код>11</Код>
							<Наименование>РасходыНаРекламуБезНорм --&gt; ПрочиеРасходы</Наименование>
							<Порядок>1100</Порядок>
							<Источник>РасходыНаРекламуБезНорм</Источник>
							<Приемник>ПрочиеРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>12</Код>
							<Наименование>ИнформационныеУслуги --&gt; ПрочиеРасходы</Наименование>
							<Порядок>1200</Порядок>
							<Источник>ИнформационныеУслуги</Источник>
							<Приемник>ПрочиеРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>13</Код>
							<Наименование>ИзучениеКонъюнктурыРынка --&gt; ПрочиеРасходы</Наименование>
							<Порядок>1300</Порядок>
							<Источник>ИзучениеКонъюнктурыРынка</Источник>
							<Приемник>ПрочиеРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>14</Код>
							<Наименование>РемонтОсновныхСредств --&gt; РемонтОсновныхСредств</Наименование>
							<Порядок>1400</Порядок>
							<Источник>РемонтОсновныхСредств</Источник>
							<Приемник>РемонтОсновныхСредств</Приемник>
						</Значение>
						<Значение>
							<Код>15</Код>
							<Наименование>ГарантийныйРемонтИОбслуживание --&gt; ПрочиеРасходы</Наименование>
							<Порядок>1500</Порядок>
							<Источник>ГарантийныйРемонтИОбслуживание</Источник>
							<Приемник>ПрочиеРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>16</Код>
							<Наименование>ПодготовкаИПереподготовкаКадров --&gt; ПрочиеРасходы</Наименование>
							<Порядок>1600</Порядок>
							<Источник>ПодготовкаИПереподготовкаКадров</Источник>
							<Приемник>ПрочиеРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>17</Код>
							<Наименование>ОхранаИмущества --&gt; ПрочиеРасходы</Наименование>
							<Порядок>1700</Порядок>
							<Источник>ОхранаИмущества</Источник>
							<Приемник>ПрочиеРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>18</Код>
							<Наименование>УслугиПоУправлению --&gt; ПрочиеРасходы</Наименование>
							<Порядок>1800</Порядок>
							<Источник>УслугиПоУправлению</Источник>
							<Приемник>ПрочиеРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>19</Код>
							<Наименование>АудиторскиеУслуги --&gt; ПрочиеРасходы</Наименование>
							<Порядок>1900</Порядок>
							<Источник>АудиторскиеУслуги</Источник>
							<Приемник>ПрочиеРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>20</Код>
							<Наименование>ПредоставлениеРаботниковСтороннимиОрганизациями --</Наименование>
							<Порядок>2000</Порядок>
							<Источник>ПредоставлениеРаботниковСтороннимиОрганизациями</Источник>
							<Приемник>ПрочиеРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>21</Код>
							<Наименование>НИОКР --&gt; НаНИОКР</Наименование>
							<Порядок>2100</Порядок>
							<Источник>НИОКР</Источник>
							<Приемник>НИОКР</Приемник>
						</Значение>
						<Значение>
							<Код>22</Код>
							<Наименование>ОсвоениеПриродныхРесурсов --&gt; ОсвоениеПриродныхРес</Наименование>
							<Порядок>2200</Порядок>
							<Источник>ОсвоениеПриродныхРесурсов</Источник>
							<Приемник>ОсвоениеПриродныхРесурсов</Приемник>
						</Значение>
						<Значение>
							<Код>23</Код>
							<Наименование>СоциальнаяЗащитаИнвалидов --&gt; ПрочиеРасходы</Наименование>
							<Порядок>2300</Порядок>
							<Источник>СоциальнаяЗащитаИнвалидов</Источник>
							<Приемник>ПрочиеРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>24</Код>
							<Наименование>ДругиеРасходы --&gt; ПрочиеРасходы</Наименование>
							<Порядок>2400</Порядок>
							<Источник>ДругиеРасходы</Источник>
							<Приемник>ПрочиеРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>25</Код>
							<Наименование>НеПринимаемые --&gt; НеУчитываемыеВЦеляхНалогообложен</Наименование>
							<Порядок>2500</Порядок>
							<Источник>НеПринимаемые</Источник>
							<Приемник>НеУчитываемыеВЦеляхНалогообложения</Приемник>
						</Значение>
					</Значения>
				</Правило>
				<Правило>
					<Код>ВидыРасходов</Код>
					<Наименование> --&gt; СправочникСсылка.СтатьиЗатрат</Наименование>
					<Порядок>600</Порядок>
					<Источник>ПеречислениеСсылка.ГруппыВидыРасходов</Источник>
					<Приемник>СправочникСсылка.СтатьиЗатрат</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование> --&gt; Наименование</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Значение = Строка(Источник);</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование> --&gt; Родитель</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.СтатьиЗатрат"/>
							<КодПравилаКонвертации>ГруппаСтатейЗатрат                                </КодПравилаКонвертации>
							<ПередВыгрузкой>ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
ИсходящиеДанные.Установить("Наименование", "Выгрузка оборотов счета Н07.04.1");
Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование> --&gt; ЭтоГруппа</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование> --&gt; ВидРасходовНУ</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидРасходовНУ" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыРасходовНУ"/>
							<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование> --&gt; ВидДеятельностиДляНалоговогоУчетаЗатрат</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДеятельностиДляНалоговогоУчетаЗатрат" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыДеятельностиДляНалоговогоУчетаЗатрат"/>
							<ПередВыгрузкой>Значение = "ПредпринимательскаяДеятельностьНеОблагаемаяЕНВД";</ПередВыгрузкой>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ВидыРасходовПрочие</Код>
					<Наименование> --&gt; СправочникСсылка.СтатьиЗатрат</Наименование>
					<Порядок>700</Порядок>
					<Источник>ПеречислениеСсылка.ГруппыВидыРасходов</Источник>
					<Приемник>СправочникСсылка.ПрочиеДоходыИРасходы</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование> --&gt; Наименование</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Значение = Строка(Источник);</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование> --&gt; Родитель</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ПрочиеДоходыИРасходы"/>
							<КодПравилаКонвертации>ГруппаПрочихРасходов                              </КодПравилаКонвертации>
							<ПередВыгрузкой>ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
ИсходящиеДанные.Установить("Наименование", "Выгрузка оборотов счета Н09");
Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование> --&gt; ЭтоГруппа</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование> --&gt; ВидРасходовНУ</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидПрочихДоходовИРасходов" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыПрочихДоходовИРасходов"/>
							<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование> --&gt; ВидДеятельностиДляНалоговогоУчетаЗатрат</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДеятельностиДляНалоговогоУчетаЗатрат" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыДеятельностиДляНалоговогоУчетаЗатрат"/>
							<ПередВыгрузкой>Значение = "ПредпринимательскаяДеятельностьНеОблагаемаяЕНВД";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; ПринятиеКналоговомуУчету</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПринятиеКналоговомуУчету" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>УровниБюджетов</Код>
					<Наименование>ПеречислениеСсылка.Бюджеты --&gt; ПеречислениеСсылка.УровниБюджетов</Наименование>
					<Порядок>800</Порядок>
					<ПередВыгрузкой>Источник = Источник.Идентификатор();</ПередВыгрузкой>
					<Источник>ПеречислениеСсылка.Бюджеты</Источник>
					<Приемник>ПеречислениеСсылка.УровниБюджетов</Приемник>
					<Свойства/>
					<Значения>
						<Значение>
							<Код>1</Код>
							<Наименование>Федеральный --&gt; ФедеральныйБюджет</Наименование>
							<Порядок>100</Порядок>
							<Источник>Федеральный</Источник>
							<Приемник>ФедеральныйБюджет</Приемник>
						</Значение>
						<Значение>
							<Код>2</Код>
							<Наименование>Республиканский --&gt; РегиональныйБюджет</Наименование>
							<Порядок>200</Порядок>
							<Источник>Республиканский</Источник>
							<Приемник>РегиональныйБюджет</Приемник>
						</Значение>
						<Значение>
							<Код>3</Код>
							<Наименование>Местный --&gt; МестныйБюджет</Наименование>
							<Порядок>300</Порядок>
							<Источник>Местный</Источник>
							<Приемник>МестныйБюджет</Приемник>
						</Значение>
					</Значения>
				</Правило>
				<Правило>
					<Код>ВнереализационныеДоходы</Код>
					<Наименование>ПеречислениеСсылка.ВнереализационныеДоходы --&gt; СправочникСсылка.ПрочиеДоходыИРасходы</Наименование>
					<Порядок>900</Порядок>
					<Источник>ПеречислениеСсылка.ВнереализационныеДоходы</Источник>
					<Приемник>СправочникСсылка.ПрочиеДоходыИРасходы</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование> --&gt; Наименование</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Значение = Строка(Источник);</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование> --&gt; ВидПрочихДоходовИРасходов</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидПрочихДоходовИРасходов" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыПрочихДоходовИРасходов"/>
							<ПередВыгрузкой>Значение = ВыгрузитьПоПравилу(Источник,,,, "ПеречислениеВнереализационныеДоходы");
Отказ = ПустоеЗначение(Значение);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование> --&gt; ВидДеятельностиДляНалоговогоУчетаЗатрат</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДеятельностиДляНалоговогоУчетаЗатрат" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыДеятельностиДляНалоговогоУчетаЗатрат"/>
							<ПередВыгрузкой>Значение = "ПредпринимательскаяДеятельностьНеОблагаемаяЕНВД";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование> --&gt; ПринятиеКналоговомуУчету</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПринятиеКналоговомуУчету" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ВнереализационныеРасходы</Код>
					<Наименование>ПеречислениеСсылка.ВнереализационныеРасходы --&gt; СправочникСсылка.ПрочиеДоходыИРасходы</Наименование>
					<Порядок>1000</Порядок>
					<Источник>ПеречислениеСсылка.ВнереализационныеРасходы</Источник>
					<Приемник>СправочникСсылка.ПрочиеДоходыИРасходы</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование> --&gt; Наименование</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Значение = Строка(Источник);</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование> --&gt; ВидПрочихДоходовИРасходов</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидПрочихДоходовИРасходов" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыПрочихДоходовИРасходов"/>
							<ПередВыгрузкой>Значение = ВыгрузитьПоПравилу(Источник,,,, "ПеречислениеВнереализационныеРасходы");
Отказ = ПустоеЗначение(Значение);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование> --&gt; ВидДеятельностиДляНалоговогоУчетаЗатрат</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДеятельностиДляНалоговогоУчетаЗатрат" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыДеятельностиДляНалоговогоУчетаЗатрат"/>
							<ПередВыгрузкой>Значение = "ПредпринимательскаяДеятельностьНеОблагаемаяЕНВД";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование> --&gt; ПринятиеКналоговомуУчету</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПринятиеКналоговомуУчету" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ПрибылиИУбытки</Код>
					<Наименование>ПеречислениеСсылка.ПрибылиИУбытки --&gt; ПеречислениеСсылка.ПрибылиИУбытки</Наименование>
					<Порядок>1100</Порядок>
					<ПередВыгрузкой>Источник = Источник.Идентификатор();</ПередВыгрузкой>
					<Источник>ПеречислениеСсылка.ПрибылиИУбытки</Источник>
					<Приемник>ПеречислениеСсылка.ПрибылиИУбытки</Приемник>
					<Свойства/>
					<Значения>
						<Значение>
							<Код>1</Код>
							<Наименование>ПрибыльУбытокОтПродаж --&gt; ПрибыльУбытокОтПродаж</Наименование>
							<Порядок>100</Порядок>
							<Источник>ПрибыльУбытокОтПродаж</Источник>
							<Приемник>ПрибыльУбытокОтПродаж</Приемник>
						</Значение>
						<Значение>
							<Код>2</Код>
							<Наименование>СальдоПрочихДоходовРасходов --&gt; СальдоПрочихДоходо</Наименование>
							<Порядок>200</Порядок>
							<Источник>СальдоПрочихДоходовРасходов</Источник>
							<Приемник>СальдоПрочихДоходовИРасходов</Приемник>
						</Значение>
						<Значение>
							<Код>3</Код>
							<Наименование>ЧрезвычайныеДоходы --&gt; ЧрезвычайныеДоходыРасходы</Наименование>
							<Порядок>300</Порядок>
							<Источник>ЧрезвычайныеДоходы</Источник>
							<Приемник>ЧрезвычайныеДоходыРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>4</Код>
							<Наименование>ЧрезвычайныеРасходы --&gt; ЧрезвычайныеДоходыРасходы</Наименование>
							<Порядок>400</Порядок>
							<Источник>ЧрезвычайныеРасходы</Источник>
							<Приемник>ЧрезвычайныеДоходыРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>5</Код>
							<Наименование>НалогНаПрибыль --&gt; НалогНаПрибыль</Наименование>
							<Порядок>500</Порядок>
							<Источник>НалогНаПрибыль</Источник>
							<Приемник>НалогНаПрибыль</Приемник>
						</Значение>
						<Значение>
							<Код>6</Код>
							<Наименование>НалоговыеСанкции --&gt; НалоговыеСанкции</Наименование>
							<Порядок>600</Порядок>
							<Источник>НалоговыеСанкции</Источник>
							<Приемник>НалоговыеСанкции</Приемник>
						</Значение>
						<Значение>
							<Код>7</Код>
							<Наименование>НеПринимаемыеДляЦелейНалогообложения --&gt; ПрибыльУб</Наименование>
							<Порядок>700</Порядок>
							<Источник>НеПринимаемыеДляЦелейНалогообложения</Источник>
							<Приемник>ПрибыльУбытокОтПродаж</Приемник>
						</Значение>
					</Значения>
				</Правило>
			</Группа>
			<Группа>
				<Код>Документы</Код>
				<Наименование>Документы</Наименование>
				<Порядок>300</Порядок>
				<Правило>
					<Код>ДоговорСКомитентом</Код>
					<Наименование>СправочникСсылка.Договоры --&gt; ДокументСсылка.Партия</Наименование>
					<Порядок>100</Порядок>
					<Источник>СправочникСсылка.Договоры</Источник>
					<Приемник>ДокументСсылка.ДокументРасчетовСКонтрагентом</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование> --&gt; Дата</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
							<ПередВыгрузкой>Значение = Параметры.ДатаВводаОстатков - 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование> --&gt; Контрагент</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = Источник.Владелец;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>6</Код>
							<Наименование> --&gt; ДоговорКонтрагента</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>7</Код>
							<Наименование> --&gt; СчетУчетаРасчетовСКомитентом</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчетаРасчетовСКомитентом" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<ПередВыгрузкой>Значение = "76.09";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование> --&gt; ВалютаДокумента</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаДокумента" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = Параметры.Рубли;</ПередВыгрузкой>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ПартияМатериаловВЭксплуатации</Код>
					<Наименование>СправочникСсылка.НазначенияИспользования --&gt; ДокументСсылка.ПартияМатериаловВЭксплуатации</Наименование>
					<Порядок>200</Порядок>
					<Источник>СправочникСсылка.НазначенияИспользования</Источник>
					<Приемник>ДокументСсылка.ПартияМатериаловВЭксплуатации</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование> --&gt; Дата</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="ДатаВводаВЭксплуатацию" Вид="Реквизит" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование> --&gt; Номенклатура</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="Владелец" Вид="Свойство" Тип="СправочникСсылка.Материалы"/>
							<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
							<КодПравилаКонвертации>Материалы                                         </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true">
							<Код>6</Код>
							<Наименование> --&gt; НазначениеИспользования</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НазначениеИспользования" Вид="Реквизит" Тип="СправочникСсылка.НазначенияИспользования"/>
							<КодПравилаКонвертации>НазначенияИспользования                           </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ПоступлениеМатериалов</Код>
					<Наименование>ДокументСсылка.ПоступлениеМатериалов --&gt; ДокументСсылка.ОтражениеПоступленияТоваровИУслугНДС</Наименование>
					<Порядок>300</Порядок>
					<ПередВыгрузкой>Если ТипЗначенияСтр(ВходящиеДанные) = "СписокЗначений" Тогда
	СделатьСсылкуНаДокВводаОстатков = ВходящиеДанные.Получить("СделатьСсылкуНаДокВводаОстатков");
	Если ПустоеЗначение(СделатьСсылкуНаДокВводаОстатков) = 0 Тогда
		КлючВыгружаемыхДанных = ЗначениеВСтрокуВнутр(КлючВыгружаемыхДанных) + СделатьСсылкуНаДокВводаОстатков;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
					<Источник>ДокументСсылка.ПоступлениеМатериалов</Источник>
					<Приемник>ДокументСсылка.ДокументРасчетовСКонтрагентом</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>Контрагент --&gt; Контрагент</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true">
							<Код>10</Код>
							<Наименование> --&gt; Дата</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
							<ПередВыгрузкой>Значение = Параметры.ДатаВводаОстатков - 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>11</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>12</Код>
							<Наименование>Договор --&gt; ДоговорКонтрагента</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="Договор" Вид="Реквизит" Тип="СправочникСсылка.Договоры"/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>СчетФактураНаАванс</Код>
					<Наименование>ДокументСсылка.ПоступлениеНМА --&gt; ДокументСсылка.ОтражениеПоступленияТоваровИУслугНДС</Наименование>
					<Порядок>400</Порядок>
					<ПередВыгрузкой>Если ТипЗначенияСтр(ВходящиеДанные) = "СписокЗначений" Тогда
	СделатьСсылкуНаДокВводаОстатков = ВходящиеДанные.Получить("СделатьСсылкуНаДокВводаОстатков");
	Если ПустоеЗначение(СделатьСсылкуНаДокВводаОстатков) = 0 Тогда
		КлючВыгружаемыхДанных = ЗначениеВСтрокуВнутр(КлючВыгружаемыхДанных) + СделатьСсылкуНаДокВводаОстатков;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
					<Источник>ДокументСсылка.СчетФактура</Источник>
					<Приемник>ДокументСсылка.ДокументРасчетовСКонтрагентом</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>7</Код>
							<Наименование>Контрагент --&gt; Контрагент</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование> --&gt; Дата</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
							<ПередВыгрузкой>Значение = Параметры.ДатаВводаОстатков - 1;
//Значение = ?(ПустоеЗначение(Источник.ДатаПлатРасчДок) = 1, Источник.ДатаДок, Источник.ДатаПлатРасчДок);</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование> --&gt; ДоговорКонтрагента</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="Договор" Вид="Реквизит" Тип="СправочникСсылка.Договоры"/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>СчетФактура</Код>
					<Наименование>ДокументСсылка.ПоступлениеНМА --&gt; ДокументСсылка.ОтражениеПоступленияТоваровИУслугНДС</Наименование>
					<Порядок>400</Порядок>
					<ПередВыгрузкой>Если ТипЗначенияСтр(ВходящиеДанные) = "СписокЗначений" Тогда
	СделатьСсылкуНаДокВводаОстатков = ВходящиеДанные.Получить("СделатьСсылкуНаДокВводаОстатков");
	Если ПустоеЗначение(СделатьСсылкуНаДокВводаОстатков) = 0 Тогда
		КлючВыгружаемыхДанных = ЗначениеВСтрокуВнутр(КлючВыгружаемыхДанных) + СделатьСсылкуНаДокВводаОстатков;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
					<Источник>ДокументСсылка.СчетФактура</Источник>
					<Приемник>ДокументСсылка.ДокументРасчетовСКонтрагентом</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>7</Код>
							<Наименование>Контрагент --&gt; Контрагент</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование> --&gt; Дата</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
							<ПередВыгрузкой>Значение = Параметры.ДатаВводаОстатков - 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование> --&gt; ДоговорКонтрагента</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="Договор" Вид="Реквизит" Тип="СправочникСсылка.Договоры"/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>УслугиСтороннихОрганизаций</Код>
					<Наименование>ДокументСсылка.ПоступлениеНМА --&gt; ДокументСсылка.ОтражениеПоступленияТоваровИУслугНДС</Наименование>
					<Порядок>400</Порядок>
					<ПередВыгрузкой>Если ТипЗначенияСтр(ВходящиеДанные) = "СписокЗначений" Тогда
	СделатьСсылкуНаДокВводаОстатков = ВходящиеДанные.Получить("СделатьСсылкуНаДокВводаОстатков");
	Если ПустоеЗначение(СделатьСсылкуНаДокВводаОстатков) = 0 Тогда
		КлючВыгружаемыхДанных = ЗначениеВСтрокуВнутр(КлючВыгружаемыхДанных) + СделатьСсылкуНаДокВводаОстатков;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
					<Источник>ДокументСсылка.УслугиСтороннихОрганизаций</Источник>
					<Приемник>ДокументСсылка.ДокументРасчетовСКонтрагентом</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>7</Код>
							<Наименование>Контрагент --&gt; Контрагент</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование> --&gt; Дата</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
							<ПередВыгрузкой>Значение = Параметры.ДатаВводаОстатков - 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование> --&gt; ДоговорКонтрагента</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="Договор" Вид="Реквизит" Тип="СправочникСсылка.Договоры"/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ПоступлениеНМА</Код>
					<Наименование>ДокументСсылка.ПоступлениеНМА --&gt; ДокументСсылка.ОтражениеПоступленияТоваровИУслугНДС</Наименование>
					<Порядок>400</Порядок>
					<ПередВыгрузкой>Если ТипЗначенияСтр(ВходящиеДанные) = "СписокЗначений" Тогда
	СделатьСсылкуНаДокВводаОстатков = ВходящиеДанные.Получить("СделатьСсылкуНаДокВводаОстатков");
	Если ПустоеЗначение(СделатьСсылкуНаДокВводаОстатков) = 0 Тогда
		КлючВыгружаемыхДанных = ЗначениеВСтрокуВнутр(КлючВыгружаемыхДанных) + СделатьСсылкуНаДокВводаОстатков;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
					<Источник>ДокументСсылка.ПоступлениеНМА</Источник>
					<Приемник>ДокументСсылка.ДокументРасчетовСКонтрагентом</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>Контрагент --&gt; Контрагент</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование> --&gt; Дата</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
							<ПередВыгрузкой>Значение = Параметры.ДатаВводаОстатков - 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>6</Код>
							<Наименование> --&gt; ДоговорКонтрагента</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="Договор" Вид="Реквизит" Тип="СправочникСсылка.Договоры"/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ПоступлениеОборудования</Код>
					<Наименование>ДокументСсылка.ПоступлениеНМА --&gt; ДокументСсылка.ОтражениеПоступленияТоваровИУслугНДС</Наименование>
					<Порядок>400</Порядок>
					<ПередВыгрузкой>Если ТипЗначенияСтр(ВходящиеДанные) = "СписокЗначений" Тогда
	СделатьСсылкуНаДокВводаОстатков = ВходящиеДанные.Получить("СделатьСсылкуНаДокВводаОстатков");
	Если ПустоеЗначение(СделатьСсылкуНаДокВводаОстатков) = 0 Тогда
		КлючВыгружаемыхДанных = ЗначениеВСтрокуВнутр(КлючВыгружаемыхДанных) + СделатьСсылкуНаДокВводаОстатков;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
					<Источник>ДокументСсылка.ПоступлениеОборудования</Источник>
					<Приемник>ДокументСсылка.ДокументРасчетовСКонтрагентом</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>7</Код>
							<Наименование>Контрагент --&gt; Контрагент</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование> --&gt; Дата</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
							<ПередВыгрузкой>Значение = Параметры.ДатаВводаОстатков - 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование> --&gt; ДоговорКонтрагента</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="Договор" Вид="Реквизит" Тип="СправочникСсылка.Договоры"/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ПоступлениеОС</Код>
					<Наименование>ДокументСсылка.ПоступлениеНМА --&gt; ДокументСсылка.ОтражениеПоступленияТоваровИУслугНДС</Наименование>
					<Порядок>400</Порядок>
					<ПередВыгрузкой>Если ТипЗначенияСтр(ВходящиеДанные) = "СписокЗначений" Тогда
	СделатьСсылкуНаДокВводаОстатков = ВходящиеДанные.Получить("СделатьСсылкуНаДокВводаОстатков");
	Если ПустоеЗначение(СделатьСсылкуНаДокВводаОстатков) = 0 Тогда
		КлючВыгружаемыхДанных = ЗначениеВСтрокуВнутр(КлючВыгружаемыхДанных) + СделатьСсылкуНаДокВводаОстатков;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
					<Источник>ДокументСсылка.ПоступлениеОС</Источник>
					<Приемник>ДокументСсылка.ДокументРасчетовСКонтрагентом</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>7</Код>
							<Наименование>Контрагент --&gt; Контрагент</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование> --&gt; Дата</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
							<ПередВыгрузкой>Значение = Параметры.ДатаВводаОстатков - 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование> --&gt; ДоговорКонтрагента</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="Договор" Вид="Реквизит" Тип="СправочникСсылка.Договоры"/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ПоступлениеТоваров</Код>
					<Наименование>ДокументСсылка.ПоступлениеНМА --&gt; ДокументСсылка.ОтражениеПоступленияТоваровИУслугНДС</Наименование>
					<Порядок>400</Порядок>
					<ПередВыгрузкой>Если ТипЗначенияСтр(ВходящиеДанные) = "СписокЗначений" Тогда
	СделатьСсылкуНаДокВводаОстатков = ВходящиеДанные.Получить("СделатьСсылкуНаДокВводаОстатков");
	Если ПустоеЗначение(СделатьСсылкуНаДокВводаОстатков) = 0 Тогда
		КлючВыгружаемыхДанных = ЗначениеВСтрокуВнутр(КлючВыгружаемыхДанных) + СделатьСсылкуНаДокВводаОстатков;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
					<Источник>ДокументСсылка.ПоступлениеТоваров</Источник>
					<Приемник>ДокументСсылка.ДокументРасчетовСКонтрагентом</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>7</Код>
							<Наименование>Контрагент --&gt; Контрагент</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование> --&gt; Дата</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
							<ПередВыгрузкой>Значение = Параметры.ДатаВводаОстатков - 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование> --&gt; ДоговорКонтрагента</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="Договор" Вид="Реквизит" Тип="СправочникСсылка.Договоры"/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>СчетФактураПолученный</Код>
					<Наименование>ДокументСсылка.ПоступлениеНМА --&gt; ДокументСсылка.ОтражениеПоступленияТоваровИУслугНДС</Наименование>
					<Порядок>400</Порядок>
					<ПередВыгрузкой>Если ТипЗначенияСтр(ВходящиеДанные) = "СписокЗначений" Тогда
	СделатьСсылкуНаДокВводаОстатков = ВходящиеДанные.Получить("СделатьСсылкуНаДокВводаОстатков");
	Если ПустоеЗначение(СделатьСсылкуНаДокВводаОстатков) = 0 Тогда
		КлючВыгружаемыхДанных = ЗначениеВСтрокуВнутр(КлючВыгружаемыхДанных) + СделатьСсылкуНаДокВводаОстатков;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
					<Источник>ДокументСсылка.СчетФактураПолученный</Источник>
					<Приемник>ДокументСсылка.ДокументРасчетовСКонтрагентом</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>7</Код>
							<Наименование>Контрагент --&gt; Контрагент</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование> --&gt; Дата</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
							<ПередВыгрузкой>Значение = Параметры.ДатаВводаОстатков - 1;
//Док = Источник.ДокументОприходования;
//			
//Если ПустоеЗначение(Док) = 1 Тогда
//	Док = Источник;
//							
//ИначеЕсли Док.Вид() = "УслугиСтороннихОрганизаций" Тогда
//	Если ПустоеЗначение(Док.ДокументПоступления) = 0 Тогда
//		Док = Док.ДокументПоступления;
//	КонецЕсли;
//КонецЕсли;
//	
//Значение = Док.ДатаДок;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование> --&gt; ДоговорКонтрагента</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="Договор" Вид="Реквизит" Тип="СправочникСсылка.Договоры"/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ДокументРасчетовСКонтрагентом</Код>
					<Наименование>СправочникСсылка.Договоры --&gt; ДокументСсылка.ДокументРасчетовСКонтрагентом</Наименование>
					<Порядок>3700</Порядок>
					<ПередВыгрузкой>Если ТипЗначенияСтр(ВходящиеДанные) = "СписокЗначений" Тогда
	СделатьСсылкуНаДокВводаОстатков = ВходящиеДанные.Получить("СделатьСсылкуНаДокВводаОстатков");
	Если ПустоеЗначение(СделатьСсылкуНаДокВводаОстатков) = 0 Тогда
		КлючВыгружаемыхДанных = ЗначениеВСтрокуВнутр(КлючВыгружаемыхДанных) + СделатьСсылкуНаДокВводаОстатков;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
					<Источник>СправочникСсылка.Договоры</Источник>
					<Приемник>ДокументСсылка.ДокументРасчетовСКонтрагентом</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование> --&gt; Контрагент</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Владелец" Вид="Свойство" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование> --&gt; Дата</Наименование>
							<Порядок>300</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
							<ПередВыгрузкой>Значение = Параметры.ДатаВводаОстатков - 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование> --&gt; ДоговорКонтрагента</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ЗарплатаКВыплатеОрганизаций</Код>
					<Наименование> --&gt; ДокументСсылка.ЗарплатаКВыплатеОрганизаций</Наименование>
					<Порядок>3750</Порядок>
					<ПередВыгрузкой>Если ТипЗначенияСтр(ВходящиеДанные) = "СписокЗначений" Тогда
	СделатьСсылкуНаДокВводаОстатков = ВходящиеДанные.Получить("СделатьСсылкуНаДокВводаОстатков");
	Если ПустоеЗначение(СделатьСсылкуНаДокВводаОстатков) = 0 Тогда
		КлючВыгружаемыхДанных = ЗначениеВСтрокуВнутр(КлючВыгружаемыхДанных) + СделатьСсылкуНаДокВводаОстатков;
	КонецЕсли;	
КонецЕсли;</ПередВыгрузкой>
					<Приемник>ДокументСсылка.ЗарплатаКВыплатеОрганизаций</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование> --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
							<ПередВыгрузкой>Значение = Параметры.ДатаВводаОстатков - 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование> --&gt; ПериодРегистрации</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
							<ПередВыгрузкой>Если Параметры.ДатаКонцаПериодаВыгрузки &gt; Параметры.ДатаВводаОстатков Тогда
	ПериодРегистрации = Параметры.ДатаКонцаПериодаВыгрузки;
	
Иначе
	ПериодРегистрации = Параметры.ДатаВводаОстатков - 1;
КонецЕсли;

ПериодРегистрации = НачМесяца(ПериодРегистрации);

Значение = ПериодРегистрации;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование> --&gt; ПодразделениеОрганизации</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПодразделениеОрганизации" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ПодразделенияОрганизаций                          </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = Константа.ОсновноеПодразделение;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; СпособВыплаты</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособВыплаты" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыВыплатыЗарплаты"/>
							<ПередВыгрузкой>Значение = "ЧерезКассу";</ПередВыгрузкой>
						</Свойство>
						<Группа Отключить="true">
							<Код>5</Код>
							<Наименование> --&gt; Зарплата</Наименование>
							<Порядок>300</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Зарплата" Вид="ТабличнаяЧасть"/>
							<Свойство>
								<Код>6</Код>
								<Наименование> --&gt; Физлицо</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Физлицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
								<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
								<ПередВыгрузкой>//Значение = ВходящиеДанные.Получить("ФизЛицо");</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>8</Код>
								<Наименование> --&gt; Сумма</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
								<ПередВыгрузкой>//Значение = ВходящиеДанные.Получить("Сумма");</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>9</Код>
								<Наименование> --&gt; ВыплаченностьЗарплаты</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ВыплаченностьЗарплаты" Вид="Реквизит" Тип="ПеречислениеСсылка.ВыплаченностьЗарплаты"/>
								<ПередВыгрузкой>//Значение = "Задепонировано";</ПередВыгрузкой>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
			</Группа>
		</Группа>
		<Группа>
			<Код>ДополнительныеСведения</Код>
			<Наименование>Дополнительные сведения</Наименование>
			<Порядок>200</Порядок>
			<Правило>
				<Код>СпецификацииНоменклатуры</Код>
				<Наименование>СправочникСсылка.Номенклатура --&gt; СправочникСсылка.СпецификацииНоменклатуры</Наименование>
				<Порядок>100</Порядок>
				<ПередВыгрузкой>Спецификация = СоздатьОбъект("ТаблицаЗначений");
Спецификация.НоваяКолонка("Номенклатура");
Спецификация.НоваяКолонка("Количество");

Нормы = СоздатьОбъект("Справочник.НормыРасходов");
Нормы.ИспользоватьВладельца(Источник);
Нормы.ВыбратьЭлементы();
Пока Нормы.ПолучитьЭлемент() = 1 Цикл
	Если Нормы.ЭтоГруппа() = 1 Тогда
		Продолжить;
		
	ИначеЕсли Нормы.ПометкаУдаления() = 1 Тогда
		Продолжить;
	КонецЕсли;
	
	Спецификация.НоваяСтрока();
	Спецификация.Номенклатура = Нормы.Элемент;
	Спецификация.Количество = ?(Нормы.КолПрод.Получить(Параметры.ДатаКонцаПериодаВыгрузки) = 0, 0, Нормы.Норма.Получить(Параметры.ДатаКонцаПериодаВыгрузки) / Нормы.КолПрод.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
КонецЦикла;

Если Спецификация.КоличествоСтрок() = 0 Тогда
	 Отказ = 1;
	 
Иначе
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
	ВходящиеДанные.Установить("ИсходныеКомплектующие", Спецификация);
КонецЕсли;</ПередВыгрузкой>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Источник>СправочникСсылка.Номенклатура</Источник>
				<Приемник>СправочникСсылка.СпецификацииНоменклатуры</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>8</Код>
						<Наименование> --&gt; Владелец</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Владелец" Вид="Свойство" Тип="СправочникСсылка.Номенклатура"/>
						<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство Отключить="true">
						<Код>10</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Если Параметры.ВыгружатьКоды = Да Тогда
	Значение = ПривестиНомерКДлине(Источник.Код, Параметры.ДлинаКода);
	
Иначе
	Отказ = 1 ;
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование> --&gt; Количество</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
						<ПередВыгрузкой>Отказ  = Источник.ЭтоГруппа(); Значение = 1;</ПередВыгрузкой>
					</Свойство>
					<Группа>
						<Код>5</Код>
						<Наименование> --&gt; ИсходныеКомплектующие</Наименование>
						<Порядок>600</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ИсходныеКомплектующие" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Отказ  = Источник.ЭтоГруппа();</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; Номенклатура</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; Количество</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Свойство>
						<Код>11</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>700</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>Банки</Код>
				<Наименование>СправочникСсылка.Банки --&gt; СправочникСсылка.Банки</Наименование>
				<Порядок>100</Порядок>
				<Источник>СправочникСсылка.Банки</Источник>
				<Приемник>СправочникСсылка.Банки</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование>Родитель --&gt; Родитель</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Банки"/>
						<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Банки"/>
						<КодПравилаКонвертации>Банки                                             </КодПравилаКонвертации>
					</Свойство>
					<Группа>
						<Код>9</Код>
						<Наименование> --&gt;</Наименование>
						<Порядок>900</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="" Вид=""/>
						<ПередОбработкойВыгрузки>Отказ = Источник.ЭтоГруппа();</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>5</Код>
							<Наименование>КоррСчет --&gt; КоррСчет</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="КоррСчет" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="КоррСчет" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>Местонахождение --&gt; Город</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="Местонахождение" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Город" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование>Адрес --&gt; Адрес</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="Адрес" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Адрес" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>Телефоны --&gt; Телефоны</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="Телефоны" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Телефоны" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
					</Группа>
					<Свойство>
						<Код>10</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>1000</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ТерриториальныеУсловия</Код>
				<Наименование>ПеречислениеСсылка.ТерриториальныеУсловия --&gt; СправочникСсылка.ТерриториальныеУсловия</Наименование>
				<Порядок>200</Порядок>
				<ПередВыгрузкой>Источник = Источник.Идентификатор();</ПередВыгрузкой>
				<Источник>ПеречислениеСсылка.ТерриториальныеУсловия</Источник>
				<Приемник>СправочникСсылка.ТерриториальныеУсловия</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ЮрФизЛицо</Код>
				<Наименование>ПеречислениеСсылка.ВидыКонтрагентов --&gt; ПеречислениеСсылка.ЮрФизЛицо</Наименование>
				<Порядок>300</Порядок>
				<ПередВыгрузкой>Источник = Источник.Идентификатор();</ПередВыгрузкой>
				<Источник>ПеречислениеСсылка.ВидыКонтрагентов</Источник>
				<Приемник>ПеречислениеСсылка.ЮрФизЛицо</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>ЧастноеЛицо --&gt; ФизЛицо</Наименование>
						<Порядок>100</Порядок>
						<Источник>ЧастноеЛицо</Источник>
						<Приемник>ФизЛицо</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ДочернееОбщество --&gt; ЮрЛицо</Наименование>
						<Порядок>200</Порядок>
						<Источник>ДочернееОбщество</Источник>
						<Приемник>ЮрЛицо</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ЗависимоеОбщество --&gt; ЮрЛицо</Наименование>
						<Порядок>300</Порядок>
						<Источник>ЗависимоеОбщество</Источник>
						<Приемник>ЮрЛицо</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>Организация --&gt; ЮрЛицо</Наименование>
						<Порядок>400</Порядок>
						<Источник>Организация</Источник>
						<Приемник>ЮрЛицо</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ТипЦеныНоменклатуры</Код>
				<Наименование>ТипЦеныНоменклатуры</Наименование>
				<Порядок>400</Порядок>
				<Приемник>СправочникСсылка.ТипыЦенНоменклатуры</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПриВыгрузке>Значение = Лев(Значение, 25);</ПриВыгрузке>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование> --&gt; ВалютаЦены</Наименование>
						<Порядок>300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВалютаЦены" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
						<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
						<ПриВыгрузке>Если ПустоеЗначение(Значение) = 1 Тогда
	Значение = Параметры.Рубли;
КонецЕсли;
</ПриВыгрузке>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; ПорядокОкругления</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПорядокОкругления" Вид="Реквизит" Тип="ПеречислениеСсылка.ПорядкиОкругления"/>
						<ПередВыгрузкой>Значение = "Окр0_01";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>6</Код>
						<Наименование> --&gt; ЦенаВключаетНДС</Наименование>
						<Порядок>600</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЦенаВключаетНДС" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>Валюты</Код>
				<Наименование>СправочникСсылка.Валюты --&gt; СправочникСсылка.Валюты</Наименование>
				<Порядок>400</Порядок>
				<ПослеВыгрузки>ВыгрузитьПоПравилу(Источник,,,, "КурсыВалют");</ПослеВыгрузки>
				<Источник>СправочникСсылка.Валюты</Источник>
				<Приемник>СправочникСсылка.Валюты</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<ПриВыгрузке>Если Источник.Код = "810" Тогда
	Значение = "643";
КонецЕсли;</ПриВыгрузке>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ПолнНаименование --&gt; НаименованиеПолное</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="ПолнНаименование" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВидыСкладов</Код>
				<Наименование>ПеречислениеСсылка.ТипыСкладов --&gt; ПеречислениеСсылка.ВидыСкладов</Наименование>
				<Порядок>500</Порядок>
				<ПередВыгрузкой>Источник = Источник.Идентификатор();</ПередВыгрузкой>
				<Источник>ПеречислениеСсылка.ТипыСкладов</Источник>
				<Приемник>ПеречислениеСсылка.ВидыСкладов</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>Розничный --&gt; НеавтоматизированнаяТорговаяТочка</Наименование>
						<Порядок>100</Порядок>
						<Источник>Розничный</Источник>
						<Приемник>НеавтоматизированнаяТорговаяТочка</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>Оптовый --&gt; Оптовый</Наименование>
						<Порядок>200</Порядок>
						<Источник>Оптовый</Источник>
						<Приемник>Оптовый</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ВидыНМА</Код>
				<Наименование>ПеречислениеСсылка.ГруппыНМА --&gt; ПеречислениеСсылка.ВидыНМА</Наименование>
				<Порядок>600</Порядок>
				<ПередВыгрузкой>Источник = Источник.Идентификатор();</ПередВыгрузкой>
				<Источник>ПеречислениеСсылка.ГруппыНМА</Источник>
				<Приемник>ПеречислениеСсылка.ВидыНМА</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>ОрганизационныеРасходы --&gt; ОрганизационныеРасходы</Наименование>
						<Порядок>100</Порядок>
						<Источник>ОрганизационныеРасходы</Источник>
						<Приемник>ОрганизационныеРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ПраваНаПрограммыЭВМ --&gt; ИсключительноеПравоНаПрогр</Наименование>
						<Порядок>200</Порядок>
						<Источник>ПраваНаПрограммыЭВМ</Источник>
						<Приемник>ИсключительноеПравоНаПрограммыДляЭВМ</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ПраваНаТопологииМикросхем --&gt; ИмущественноеПравоНа</Наименование>
						<Порядок>300</Порядок>
						<Источник>ПраваНаТопологииМикросхем</Источник>
						<Приемник>ИмущественноеПравоНаТопологииИМС</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>ПраваНаТоварныйЗнак --&gt; ИсключительноеПравоНаТовар</Наименование>
						<Порядок>400</Порядок>
						<Источник>ПраваНаТоварныйЗнак</Источник>
						<Приемник>ИсключительноеПравоНаТоварныйЗнак</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>ПраваНаСелекционныеДостижения --&gt; ИсключительноеПр</Наименование>
						<Порядок>500</Порядок>
						<Источник>ПраваНаСелекционныеДостижения</Источник>
						<Приемник>ИсключительноеПравоНаСелекционныеДостижения</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>Прочие --&gt; ПрочиеНематериальныеАктивы</Наименование>
						<Порядок>600</Порядок>
						<Источник>Прочие</Источник>
						<Приемник>ПрочиеНематериальныеАктивы</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>ДеловаяРепутация --&gt; ДеловаяРепутацияОрганизации</Наименование>
						<Порядок>700</Порядок>
						<Источник>ДеловаяРепутация</Источник>
						<Приемник>ДеловаяРепутацияОрганизации</Приемник>
					</Значение>
					<Значение>
						<Код>8</Код>
						<Наименование>ПраваПоАвторскимДоговорам --&gt; ПрочиеНематериальные</Наименование>
						<Порядок>800</Порядок>
						<Источник>ПраваПоАвторскимДоговорам</Источник>
						<Приемник>ПрочиеНематериальныеАктивы</Приемник>
					</Значение>
					<Значение>
						<Код>9</Код>
						<Наименование>ПраваПоПатентам --&gt; ИсключительноеПравоНаИзобретен</Наименование>
						<Порядок>900</Порядок>
						<Источник>ПраваПоПатентам</Источник>
						<Приемник>ИсключительноеПравоНаИзобретение</Приемник>
					</Значение>
					<Значение>
						<Код>10</Код>
						<Наименование>ПраваНоуХау --&gt; ИсключительноеПравоНаИзобретение</Наименование>
						<Порядок>1000</Порядок>
						<Источник>ПраваНоуХау</Источник>
						<Приемник>ИсключительноеПравоНаИзобретение</Приемник>
					</Значение>
					<Значение>
						<Код>11</Код>
						<Наименование>ПраваНаОбъектыПриродопользования --&gt; ПрочиеНематер</Наименование>
						<Порядок>1100</Порядок>
						<Источник>ПраваНаОбъектыПриродопользования</Источник>
						<Приемник>ПрочиеНематериальныеАктивы</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>АмортизационныеГруппы</Код>
				<Наименование>ПеречислениеСсылка.АмортизационныеГруппы --&gt; ПеречислениеСсылка.АмортизационныеГруппы</Наименование>
				<Порядок>700</Порядок>
				<ПередВыгрузкой>Источник = Источник.Идентификатор();</ПередВыгрузкой>
				<Источник>ПеречислениеСсылка.АмортизационныеГруппы</Источник>
				<Приемник>ПеречислениеСсылка.АмортизационныеГруппы</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>ПерваяГруппа --&gt; ПерваяГруппа</Наименование>
						<Порядок>100</Порядок>
						<Источник>ПерваяГруппа</Источник>
						<Приемник>ПерваяГруппа</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ВтораяГруппа --&gt; ВтораяГруппа</Наименование>
						<Порядок>200</Порядок>
						<Источник>ВтораяГруппа</Источник>
						<Приемник>ВтораяГруппа</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ТретьяГруппа --&gt; ТретьяГруппа</Наименование>
						<Порядок>300</Порядок>
						<Источник>ТретьяГруппа</Источник>
						<Приемник>ТретьяГруппа</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>ЧетвертаяГруппа --&gt; ЧетвертаяГруппа</Наименование>
						<Порядок>400</Порядок>
						<Источник>ЧетвертаяГруппа</Источник>
						<Приемник>ЧетвертаяГруппа</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>ПятаяГруппа --&gt; ПятаяГруппа</Наименование>
						<Порядок>500</Порядок>
						<Источник>ПятаяГруппа</Источник>
						<Приемник>ПятаяГруппа</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>ШестаяГруппа --&gt; ШестаяГруппа</Наименование>
						<Порядок>600</Порядок>
						<Источник>ШестаяГруппа</Источник>
						<Приемник>ШестаяГруппа</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>СедьмаяГруппа --&gt; СедьмаяГруппа</Наименование>
						<Порядок>700</Порядок>
						<Источник>СедьмаяГруппа</Источник>
						<Приемник>СедьмаяГруппа</Приемник>
					</Значение>
					<Значение>
						<Код>8</Код>
						<Наименование>ВосьмаяГруппа --&gt; ВосьмаяГруппа</Наименование>
						<Порядок>800</Порядок>
						<Источник>ВосьмаяГруппа</Источник>
						<Приемник>ВосьмаяГруппа</Приемник>
					</Значение>
					<Значение>
						<Код>9</Код>
						<Наименование>ДевятаяГруппа --&gt; ДевятаяГруппа</Наименование>
						<Порядок>900</Порядок>
						<Источник>ДевятаяГруппа</Источник>
						<Приемник>ДевятаяГруппа</Приемник>
					</Значение>
					<Значение>
						<Код>10</Код>
						<Наименование>ДесятаяГруппа --&gt; ДесятаяГруппа</Наименование>
						<Порядок>1000</Порядок>
						<Источник>ДесятаяГруппа</Источник>
						<Приемник>ДесятаяГруппа</Приемник>
					</Значение>
					<Значение>
						<Код>11</Код>
						<Наименование>ОтдельнаяГруппа --&gt; ОтдельнаяГруппа</Наименование>
						<Порядок>1100</Порядок>
						<Источник>ОтдельнаяГруппа</Источник>
						<Приемник>ОтдельнаяГруппа</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>СпособыПризнанияРасходов</Код>
				<Наименование>ПеречислениеСсылка.СпособыПризнанияРасходов --&gt; ПеречислениеСсылка.СпособыПризнанияРасходов</Наименование>
				<Порядок>800</Порядок>
				<Источник>ПеречислениеСсылка.СпособыПризнанияРасходов</Источник>
				<Приемник>ПеречислениеСсылка.СпособыПризнанияРасходов</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>ВОсобомПорядке --&gt; ВОсобомПорядке</Наименование>
						<Порядок>100</Порядок>
						<Источник>ВОсобомПорядке</Источник>
						<Приемник>ВОсобомПорядке</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ПоКалендарнымДням --&gt; ПоКалендарнымДням</Наименование>
						<Порядок>200</Порядок>
						<Источник>ПоКалендарнымДням</Источник>
						<Приемник>ПоКалендарнымДням</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ПоМесяцам --&gt; ПоМесяцам</Наименование>
						<Порядок>300</Порядок>
						<Источник>ПоМесяцам</Источник>
						<Приемник>ПоМесяцам</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>РасчетныеСчета</Код>
				<Наименование>СправочникСсылка.РасчетныеСчета --&gt; СправочникСсылка.БанковскиеСчета</Наименование>
				<Порядок>800</Порядок>
				<Источник>СправочникСсылка.РасчетныеСчета</Источник>
				<Приемник>СправочникСсылка.БанковскиеСчета</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Если Параметры.ВыгружатьКоды = Да Тогда
	Значение = ПривестиНомерКДлине(Источник.Код, Параметры.ДлинаКода);
	
Иначе
	Отказ = 1 ;
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>Владелец --&gt; Владелец</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="Владелец" Вид="Свойство" Тип="СправочникСсылка.Контрагенты"/>
						<Приемник Имя="Владелец" Вид="Свойство"/>
						<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование>Номер --&gt; НомерСчета</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="Номер" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="НомерСчета" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Лев(Источник.Номер, 20);</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>5</Код>
						<Наименование>БанкОрганизации --&gt; Банк</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="БанкОрганизации" Вид="Реквизит" Тип="СправочникСсылка.Банки"/>
						<Приемник Имя="Банк" Вид="Реквизит" Тип="СправочникСсылка.Банки"/>
						<КодПравилаКонвертации>Банки                                             </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>БанкДляРасчетов --&gt; БанкДляРасчетов</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="БанкДляРасчетов" Вид="Реквизит" Тип="СправочникСсылка.Банки"/>
						<Приемник Имя="БанкДляРасчетов" Вид="Реквизит" Тип="СправочникСсылка.Банки"/>
						<КодПравилаКонвертации>Банки                                             </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>Корреспондент --&gt; ТекстКорреспондента</Наименование>
						<Порядок>700</Порядок>
						<Источник Имя="Корреспондент" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="ТекстКорреспондента" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование>Назначение --&gt; ТекстНазначения</Наименование>
						<Порядок>800</Порядок>
						<Источник Имя="Назначение" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="ТекстНазначения" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование> --&gt; ВидСчета</Наименование>
						<Порядок>900</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидСчета" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "Расчетный";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование> --&gt; ВалютаДенежныхСредств</Наименование>
						<Порядок>1000</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВалютаДенежныхСредств" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
						<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Параметры.Рубли;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>1100</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ГруппыОС</Код>
				<Наименование>ПеречислениеСсылка.ГруппыОС --&gt; ПеречислениеСсылка.ГруппыОС</Наименование>
				<Порядок>900</Порядок>
				<ПередВыгрузкой>Источник = Источник.Идентификатор();</ПередВыгрузкой>
				<Источник>ПеречислениеСсылка.ГруппыОС</Источник>
				<Приемник>ПеречислениеСсылка.ГруппыОС</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>Здания --&gt; Здания</Наименование>
						<Порядок>100</Порядок>
						<Источник>Здания</Источник>
						<Приемник>Здания</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>Сооружения --&gt; Сооружения</Наименование>
						<Порядок>200</Порядок>
						<Источник>Сооружения</Источник>
						<Приемник>Сооружения</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ПередаточныеУстройства --&gt; ПроизводственныйИХозяйс</Наименование>
						<Порядок>300</Порядок>
						<Источник>ПередаточныеУстройства</Источник>
						<Приемник>ПроизводственныйИХозяйственныйИнвентарь</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>МашиныИОборудование --&gt; МашиныИОборудование</Наименование>
						<Порядок>400</Порядок>
						<Источник>МашиныИОборудование</Источник>
						<Приемник>МашиныИОборудование</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>ТранспортныеСредства --&gt; ТранспортныеСредства</Наименование>
						<Порядок>500</Порядок>
						<Источник>ТранспортныеСредства</Источник>
						<Приемник>ТранспортныеСредства</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>Инструмент --&gt; ПроизводственныйИХозяйственныйИнвен</Наименование>
						<Порядок>600</Порядок>
						<Источник>Инструмент</Источник>
						<Приемник>ПроизводственныйИХозяйственныйИнвентарь</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>Инвентарь --&gt; ПроизводственныйИХозяйственныйИнвент</Наименование>
						<Порядок>700</Порядок>
						<Источник>Инвентарь</Источник>
						<Приемник>ПроизводственныйИХозяйственныйИнвентарь</Приемник>
					</Значение>
					<Значение>
						<Код>8</Код>
						<Наименование>РабочийСкот --&gt; РабочийСкот</Наименование>
						<Порядок>800</Порядок>
						<Источник>РабочийСкот</Источник>
						<Приемник>РабочийСкот</Приемник>
					</Значение>
					<Значение>
						<Код>9</Код>
						<Наименование>ПродуктивныйСкот --&gt; ПродуктивныйСкот</Наименование>
						<Порядок>900</Порядок>
						<Источник>ПродуктивныйСкот</Источник>
						<Приемник>ПродуктивныйСкот</Приемник>
					</Значение>
					<Значение>
						<Код>10</Код>
						<Наименование>МноголетниеНасаждения --&gt; МноголетниеНасаждения</Наименование>
						<Порядок>1000</Порядок>
						<Источник>МноголетниеНасаждения</Источник>
						<Приемник>МноголетниеНасаждения</Приемник>
					</Значение>
					<Значение>
						<Код>11</Код>
						<Наименование>КапитальныеЗатратыПоУлучшениюЗемель --&gt; ДругиеВиды</Наименование>
						<Порядок>1100</Порядок>
						<Источник>КапитальныеЗатратыПоУлучшениюЗемель</Источник>
						<Приемник>ДругиеВидыОсновныхСредств</Приемник>
					</Значение>
					<Значение>
						<Код>12</Код>
						<Наименование>ЗемельныеУчастки --&gt; ЗемельныеУчастки</Наименование>
						<Порядок>1200</Порядок>
						<Источник>ЗемельныеУчастки</Источник>
						<Приемник>ЗемельныеУчастки</Приемник>
					</Значение>
					<Значение>
						<Код>13</Код>
						<Наименование>ОбъектыПриродопользования --&gt; ОбъектыПриродопользо</Наименование>
						<Порядок>1300</Порядок>
						<Источник>ОбъектыПриродопользования</Источник>
						<Приемник>ОбъектыПриродопользования</Приемник>
					</Значение>
					<Значение>
						<Код>14</Код>
						<Наименование>Прочие --&gt; ДругиеВидыОсновныхСредств</Наименование>
						<Порядок>1400</Порядок>
						<Источник>Прочие</Источник>
						<Приемник>ДругиеВидыОсновныхСредств</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ЕдиныеНормыАмортизационныхОтчисленийОсновныхФондов</Код>
				<Наименование>СправочникСсылка.КлассификаторЕН --&gt; СправочникСсылка.ЕдиныеНормыАмортизационныхОтчисленийОсновныхФо</Наименование>
				<Порядок>1000</Порядок>
				<ПередВыгрузкой>Отказ = Источник.ЭтоГруппа();</ПередВыгрузкой>
				<Источник>СправочникСсылка.КлассификаторЕН</Источник>
				<Приемник>СправочникСсылка.ЕдиныеНормыАмортизационныхОтчисленийОсновныхФондов</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>НормаАморт --&gt; НормаАмортизационныхОтчислений</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="НормаАморт" Вид="Реквизит" Тип="Число"/>
						<Приемник Имя="НормаАмортизационныхОтчислений" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>НормаАвто --&gt; ПроцентОтСтоимостиМашины</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="НормаАвто" Вид="Реквизит" Тип="Число"/>
						<Приемник Имя="ПроцентОтСтоимостиМашины" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>КлассификаторЕдиницИзмерения</Код>
				<Наименование>СправочникСсылка.ЕдиницыИзмерений --&gt; СправочникСсылка.КлассификаторЕдиницИзмерения</Наименование>
				<Порядок>1100</Порядок>
				<Источник>СправочникСсылка.ЕдиницыИзмерений</Источник>
				<Приемник>СправочникСсылка.КлассификаторЕдиницИзмерения</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ПолнНаименование --&gt; НаименованиеПолное</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="ПолнНаименование" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ТипыЦенНоменклатуры</Код>
				<Наименование>СправочникСсылка.ТипыЦен --&gt; СправочникСсылка.ТипыЦенНоменклатуры</Наименование>
				<Порядок>1200</Порядок>
				<ПередВыгрузкой>Если Константа.ИспользоватьТипыЦен = Нет Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Источник>СправочникСсылка.ТипыЦен</Источник>
				<Приемник>СправочникСсылка.ТипыЦенНоменклатуры</Приемник>
				<Свойства>
					<Свойство Отключить="true">
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Если Параметры.ВыгружатьКоды = Да Тогда
	Значение = ПривестиНомерКДлине(Источник.Код, Параметры.ДлинаКода);
	
Иначе
	Отказ = 1 ;
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Лев(Источник.Наименование, 25);</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>Валюта --&gt; ВалютаЦены</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="Валюта" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
						<Приемник Имя="ВалютаЦены" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
						<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
						<ПередВыгрузкой>Если ПустоеЗначение(Источник.Валюта) = 1 Тогда
	Значение = Параметры.Рубли;
КонецЕсли;
</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>Комментарий --&gt; Комментарий</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>5</Код>
						<Наименование>ЦенаВклНДС --&gt; ЦенаВключаетНДС</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="ЦенаВклНДС" Вид="Реквизит" Тип="Число"/>
						<Приемник Имя="ЦенаВключаетНДС" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; ПорядокОкругления</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПорядокОкругления" Вид="Реквизит" Тип="ПеречислениеСсылка.ПорядкиОкругления"/>
						<ПередВыгрузкой>Значение = "Окр0_01";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование> --&gt; ОкруглятьВБольшуюСторону</Наименование>
						<Порядок>700</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОкруглятьВБольшуюСторону" Вид="Реквизит" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>800</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВидыРезервов</Код>
				<Наименование>ПеречислениеСсылка.ВидыРезервов --&gt; ПеречислениеСсылка.ВидыРезервов</Наименование>
				<Порядок>1300</Порядок>
				<ПередВыгрузкой>Источник = Источник.Идентификатор();</ПередВыгрузкой>
				<Источник>ПеречислениеСсылка.ВидыРезервов</Источник>
				<Приемник>ПеречислениеСсылка.ВидыРезервов</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>ОплатаОтпусков --&gt; НаПокрытиеИныхЗатрат</Наименование>
						<Порядок>100</Порядок>
						<Источник>ОплатаОтпусков</Источник>
						<Приемник>НаПокрытиеИныхЗатрат</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ВыслугаЛет --&gt; НаПокрытиеИныхЗатрат</Наименование>
						<Порядок>200</Порядок>
						<Источник>ВыслугаЛет</Источник>
						<Приемник>НаПокрытиеИныхЗатрат</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>РемонтОС --&gt; НаПокрытиеИныхЗатрат</Наименование>
						<Порядок>300</Порядок>
						<Источник>РемонтОС</Источник>
						<Приемник>НаПокрытиеИныхЗатрат</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>СезонныеЗатраты --&gt; НаПокрытиеИныхЗатрат</Наименование>
						<Порядок>400</Порядок>
						<Источник>СезонныеЗатраты</Источник>
						<Приемник>НаПокрытиеИныхЗатрат</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>ПриродоохранныеМероприятия --&gt; НаПокрытиеИныхЗатра</Наименование>
						<Порядок>500</Порядок>
						<Источник>ПриродоохранныеМероприятия</Источник>
						<Приемник>НаПокрытиеИныхЗатрат</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>РемонтПредметовПроката --&gt; НаПокрытиеИныхЗатрат</Наименование>
						<Порядок>600</Порядок>
						<Источник>РемонтПредметовПроката</Источник>
						<Приемник>НаПокрытиеИныхЗатрат</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>ГарантийныйРемонт --&gt; НаПокрытиеИныхЗатрат</Наименование>
						<Порядок>700</Порядок>
						<Источник>ГарантийныйРемонт</Источник>
						<Приемник>НаПокрытиеИныхЗатрат</Приемник>
					</Значение>
					<Значение>
						<Код>8</Код>
						<Наименование>ПрочиеРезервы --&gt; НаПокрытиеИныхЗатрат</Наименование>
						<Порядок>800</Порядок>
						<Источник>ПрочиеРезервы</Источник>
						<Приемник>НаПокрытиеИныхЗатрат</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ПолФизическихЛиц</Код>
				<Наименование>ПеречислениеСсылка.Пол --&gt; ПеречислениеСсылка.ПолФизическихЛиц</Наименование>
				<Порядок>1400</Порядок>
				<ПередВыгрузкой>Источник = Источник.Идентификатор();</ПередВыгрузкой>
				<Источник>ПеречислениеСсылка.Пол</Источник>
				<Приемник>ПеречислениеСсылка.ПолФизическихЛиц</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>Мужской --&gt; Мужской</Наименование>
						<Порядок>100</Порядок>
						<Источник>Мужской</Источник>
						<Приемник>Мужской</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>Женский --&gt; Женский</Наименование>
						<Порядок>200</Порядок>
						<Источник>Женский</Источник>
						<Приемник>Женский</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ДолжностиОрганизаций</Код>
				<Наименование> --&gt; СправочникСсылка.ДолжностиОрганизаций</Наименование>
				<Порядок>1500</Порядок>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Источник>Строка</Источник>
				<Приемник>СправочникСсылка.ДолжностиОрганизаций</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Лев(Источник, 100);</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СпособыОтраженияЗарплатыВРеглУчете</Код>
				<Наименование>СправочникСсылка.Сотрудники --&gt; СправочникСсылка.СпособыОтраженияЗарплатыВРеглУчете</Наименование>
				<Порядок>1600</Порядок>
				<ПередВыгрузкой>ВходящиеДанные = СоздатьОбъект("СписокЗначений");</ПередВыгрузкой>
				<ПослеЗагрузки>ИмяСчетаБУ = "СчетДт";
ИмяСубкБУ = "СубконтоДт";
Корреспонденция = Объект;

мСведенияОСчетах = Новый Соответствие;

СведенияОСчете = БухгалтерскийУчет.ПолучитьСведенияОСчете(мСведенияОСчетах, Корреспонденция[ИмяСчетаБУ]);
Для СчетчикСубконто = 1 По 3 Цикл
	Для СчетчикСчета = 1 по СведенияОСчете.КоличествоСубконто Цикл
		Если (Корреспонденция[ИмяСубкБУ+СчетчикСубконто] = СведенияОСчете["ТипСубконто"+СчетчикСчета].ПривестиЗначение(Корреспонденция[ИмяСубкБУ+СчетчикСубконто])) и (СчетчикСчета &lt;&gt; СчетчикСубконто) Тогда
			Субконто = Корреспонденция[ИмяСубкБУ+СчетчикСчета];
			Корреспонденция[ИмяСубкБУ+СчетчикСчета] = Корреспонденция[ИмяСубкБУ+СчетчикСубконто];
			Корреспонденция[ИмяСубкБУ+СчетчикСубконто] = Субконто;
		КонецЕсли;
	КонецЦикла;
КонецЦикла;

Для СчетчикСубконто = 1 По 3 Цикл
	Если СведенияОСчете.КоличествоСубконто &gt;= СчетчикСубконто Тогда
		Корреспонденция[ИмяСубкБУ+СчетчикСубконто] = СведенияОСчете["ТипСубконто"+СчетчикСубконто].ПривестиЗначение(Корреспонденция[ИмяСубкБУ+СчетчикСубконто]);

	Иначе
		Корреспонденция[ИмяСубкБУ+СчетчикСубконто] = Неопределено;
	КонецЕсли;
КонецЦикла;</ПослеЗагрузки>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Источник>СправочникСсылка.Сотрудники</Источник>
				<Приемник>СправочникСсылка.СпособыОтраженияЗарплатыВРеглУчете</Приемник>
				<Свойства>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; СчетДт</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СчетДт" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
						<ПередВыгрузкой>Счет = Источник.СчетЗатрат.Получить(Параметры.ДатаКонцаПериодаВыгрузки);
ВходящиеДанные.Установить("СчетДт", Счет);

ДобавленныйСчет = мТаблицаПравилКонвертацииОбъектов.ПолучитьЗначение(НайтиПравило(Счет, "Хозрасчетный"), "Значения").Получить(Строка(Счет));
Если ПустоеЗначение(ДобавленныйСчет) = 1 Тогда
	ИмяПКО = "ХозрасчетныйСтрДоб";
Иначе
	 ИмяПКО = "Хозрасчетный";
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Субконто1 --&gt; СубконтоДт1</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СубконтоДт1" Вид="Реквизит"/>
						<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Счет", Источник.СчетЗатрат.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
Параметры.ПараметрыАлгоритмов.Установить("Субконто1", Источник.Субконто1.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
Параметры.ПараметрыАлгоритмов.Установить("Субконто2", Источник.Субконто2.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
Параметры.ПараметрыАлгоритмов.Установить("Субконто3", Источник.Субконто3.Получить(Параметры.ДатаКонцаПериодаВыгрузки));

Параметры.ПараметрыАлгоритмов.Установить("Субконто", Источник.Субконто1.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
ПриВыгрузкеСубконто();

ВходящиеДанные.Установить("СубконтоДт1", Источник.Субконто1.Получить(Параметры.ДатаКонцаПериодаВыгрузки));</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>Субконто2 --&gt; СубконтоДт2</Наименование>
						<Порядок>300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СубконтоДт2" Вид="Реквизит"/>
						<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Счет", Источник.СчетЗатрат.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
Параметры.ПараметрыАлгоритмов.Установить("Субконто1", Источник.Субконто1.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
Параметры.ПараметрыАлгоритмов.Установить("Субконто2", Источник.Субконто2.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
Параметры.ПараметрыАлгоритмов.Установить("Субконто3", Источник.Субконто3.Получить(Параметры.ДатаКонцаПериодаВыгрузки));

Параметры.ПараметрыАлгоритмов.Установить("Субконто", Источник.Субконто2.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
ПриВыгрузкеСубконто();

ВходящиеДанные.Установить("СубконтоДт2", Источник.Субконто2.Получить(Параметры.ДатаКонцаПериодаВыгрузки));</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>Субконто3 --&gt; СубконтоДт3</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СубконтоДт3" Вид="Реквизит"/>
						<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Счет", Источник.СчетЗатрат.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
Параметры.ПараметрыАлгоритмов.Установить("Субконто1", Источник.Субконто1.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
Параметры.ПараметрыАлгоритмов.Установить("Субконто2", Источник.Субконто2.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
Параметры.ПараметрыАлгоритмов.Установить("Субконто3", Источник.Субконто3.Получить(Параметры.ДатаКонцаПериодаВыгрузки));

Параметры.ПараметрыАлгоритмов.Установить("Субконто", Источник.Субконто3.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
ПриВыгрузкеСубконто();

ВходящиеДанные.Установить("СубконтоДт3", Источник.Субконто3.Получить(Параметры.ДатаКонцаПериодаВыгрузки));</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<НеЗамещать>true</НеЗамещать>
						<Код>6</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Лев(СокрП(Источник.СчетЗатрат.Получить(Параметры.ДатаКонцаПериодаВыгрузки)) + " / " + 
СокрП(Источник.Субконто1.Получить(Параметры.ДатаКонцаПериодаВыгрузки)) + " / " + 
СокрП(Источник.Субконто2.Получить(Параметры.ДатаКонцаПериодаВыгрузки)) + " / " + 
СокрП(Источник.Субконто3.Получить(Параметры.ДатаКонцаПериодаВыгрузки)), 50);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование> --&gt; СчетКт</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СчетКт" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
						<ПередВыгрузкой>Значение = "70";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; СубконтоКт1</Наименование>
						<Порядок>700</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СубконтоКт1" Вид="Реквизит"/>
						<ПередВыгрузкой>ТипПриемника = "СправочникСсылка.ФизическиеЛица";
Пусто = 1;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование> --&gt; СубконтоКт2</Наименование>
						<Порядок>1000</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СубконтоКт2" Вид="Реквизит"/>
						<ПередВыгрузкой>ТипПриемника = "ПеречислениеСсылка.ВидыНачисленийОплатыТрудаПоСт255НК";
Значение = "пп1ст255";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ДокументыУдостоверяющиеЛичность</Код>
				<Наименование>СправочникСсылка.ДокументыУдостоверяющиеЛичность --&gt; СправочникСсылка.ДокументыУдостоверяющиеЛичност</Наименование>
				<Порядок>1700</Порядок>
				<Источник>СправочникСсылка.ДокументыУдостоверяющиеЛичность</Источник>
				<Приемник>СправочникСсылка.ДокументыУдостоверяющиеЛичность</Приемник>
				<Свойства>
					<Свойство Отключить="true">
						<Код>1</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>КодНДФЛ --&gt; КодИМНС</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="КодНДФЛ" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="КодИМНС" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство Отключить="true">
						<Код>3</Код>
						<Наименование>КодСЗВ --&gt; КодПФР</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="КодСЗВ" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="КодПФР" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>БазыРаспределенияКосвенныхРасходовПоВидамДеятельно</Код>
				<Наименование> --&gt; ПеречислениеСсылка.БазыРаспределенияКосвенныхРасходовПоВидамДеятельности</Наименование>
				<Порядок>1800</Порядок>
				<Источник>ПеречислениеСсылка.БазыРаспределенияКосвенныхРасходовПоВидамДеятельности</Источник>
				<Приемник>ПеречислениеСсылка.БазыРаспределенияКосвенныхРасходовПоВидамДеятельности</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>ДоходыОтРеализации --&gt; ДоходыОтРеализации</Наименование>
						<Порядок>100</Порядок>
						<Источник>ДоходыОтРеализации</Источник>
						<Приемник>ДоходыОтРеализации</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ДоходыОтРеализацииИВнереализационные --&gt; ДоходыОтР</Наименование>
						<Порядок>200</Порядок>
						<Источник>ДоходыОтРеализацииИВнереализационные</Источник>
						<Приемник>ДоходыОтРеализацииИВнереализационные</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ОКСМ</Код>
				<Наименование>СправочникСсылка.ОКСМ --&gt; СправочникСсылка.КлассификаторСтранМира</Наименование>
				<Порядок>1800</Порядок>
				<Источник>СправочникСсылка.ОКСМ</Источник>
				<Приемник>СправочникСсылка.КлассификаторСтранМира</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>Наименование --&gt; НаименованиеПолное</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВычетыНаРебенкаИнвалида</Код>
				<Наименование>Число --&gt; СправочникСсылка.ВычетыНДФЛ</Наименование>
				<Порядок>1900</Порядок>
				<ПередВыгрузкой>Если (Источник &lt;&gt; 1200) и (Источник &lt;&gt; 2400) и (Источник &lt;&gt; 2000) и (Источник &lt;&gt; 4000)Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
				<Источник>Число</Источник>
				<Приемник>СправочникСсылка.ВычетыНДФЛ</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; КодДляОтчетности2008</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодДляОтчетности2008" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = ?((Источник = 1200) или (Источник = 2000), "106", "107");</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВычетыНаРебенка</Код>
				<Наименование>Число --&gt; СправочникСсылка.ВычетыНДФЛ</Наименование>
				<Порядок>1900</Порядок>
				<Источник>СправочникСсылка.ВидыВычетов</Источник>
				<Приемник>СправочникСсылка.ВычетыНДФЛ</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>КодДляОтчетности2009 --&gt; КодДляОтчетности2009</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="КодДляОтчетности2009" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="КодДляОтчетности2009" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВычетыНДФЛЛичный</Код>
				<Наименование>Число --&gt; СправочникСсылка.ВычетыНДФЛ</Наименование>
				<Порядок>1900</Порядок>
				<Источник>СправочникСсылка.ВидыВычетов</Источник>
				<Приемник>СправочникСсылка.ВычетыНДФЛ</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>КодДляОтчетности2009 --&gt; КодДляОтчетности2009</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="КодДляОтчетности2009" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="КодДляОтчетности2009" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВычетыНДФЛ</Код>
				<Наименование>ПеречислениеСсылка.ТипыВычетов --&gt; СправочникСсылка.ВычетыНДФЛ</Наименование>
				<Порядок>2000</Порядок>
				<ПередВыгрузкой>Если Источник = Перечисление.ТипыВычетов.БезВычетов Тогда
	Отказ = 1;
КонецЕсли;

Источник = Источник.Идентификатор();</ПередВыгрузкой>
				<Источник>ПеречислениеСсылка.ТипыВычетов</Источник>
				<Приемник>СправочникСсылка.ВычетыНДФЛ</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>Обычный --&gt; 103</Наименование>
						<Порядок>100</Порядок>
						<Источник>Обычный</Источник>
						<Приемник>Код103</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>Льготный1 --&gt; 104</Наименование>
						<Порядок>200</Порядок>
						<Источник>Льготный1</Источник>
						<Приемник>Код104</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>Льготный2 --&gt; 105</Наименование>
						<Порядок>300</Порядок>
						<Источник>Льготный2</Источник>
						<Приемник>Код105</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ПеречислениеВнереализационныеДоходы</Код>
				<Наименование>ПеречислениеСсылка.ВнереализационныеДоходы --&gt; ПеречислениеСсылка.ВидыПрочихДоходовИРасходов</Наименование>
				<Порядок>2100</Порядок>
				<ПередВыгрузкой>Источник = Источник.Идентификатор();</ПередВыгрузкой>
				<Источник>ПеречислениеСсылка.ВнереализационныеДоходы</Источник>
				<Приемник>ПеречислениеСсылка.ВидыПрочихДоходовИРасходов</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>СдачаИмуществаВАренду --&gt; ДоходыРасходыСвязанныеСо</Наименование>
						<Порядок>100</Порядок>
						<Источник>СдачаИмуществаВАренду</Источник>
						<Приемник>ДоходыРасходыСвязанныеСоСдачейИмуществаВАренду</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ПредоставлениеПравНаРезультатыИнтеллектуальнойДеят</Наименование>
						<Порядок>200</Порядок>
						<Источник>ПредоставлениеПравНаРезультатыИнтеллектуальнойДеятельности</Источник>
						<Приемник>ПрочиеВнереализационныеДоходыРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ДолевоеУчастиеВРоссийскихОрганизациях --&gt; ДоходыРа</Наименование>
						<Порядок>300</Порядок>
						<Источник>ДолевоеУчастиеВРоссийскихОрганизациях</Источник>
						<Приемник>ДоходыРасходыСвязанныеСУчастиемВДругихОрганизациях</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>ДолевоеУчастиеВИностранныхОрганизациях --&gt; ДоходыР</Наименование>
						<Порядок>400</Порядок>
						<Источник>ДолевоеУчастиеВИностранныхОрганизациях</Источник>
						<Приемник>ДоходыРасходыСвязанныеСУчастиемВДругихОрганизациях</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>ПроцентыПоДоговорамЗайма --&gt; ПроцентыКПолучениюУпл</Наименование>
						<Порядок>500</Порядок>
						<Источник>ПроцентыПоДоговорамЗайма</Источник>
						<Приемник>ПроцентыКПолучениюУплате</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>Штрафы --&gt; ШтрафыПениНеустойкиКПолучениюУплате</Наименование>
						<Порядок>600</Порядок>
						<Источник>Штрафы</Источник>
						<Приемник>ШтрафыПениНеустойкиКПолучениюУплате</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>БезвозмездноПолученноеИмущество --&gt; ДоходыРасходыС</Наименование>
						<Порядок>700</Порядок>
						<Источник>БезвозмездноПолученноеИмущество</Источник>
						<Приемник>ДоходыРасходыСвязанныеСБезвозмезднымПолучениемИмущества</Приемник>
					</Значение>
					<Значение>
						<Код>8</Код>
						<Наименование>ДоходыПрошлыхЛет --&gt; ПрибыльУбытокПрошлыхЛет</Наименование>
						<Порядок>800</Порядок>
						<Источник>ДоходыПрошлыхЛет</Источник>
						<Приемник>ПрибыльУбытокПрошлыхЛет</Приемник>
					</Значение>
					<Значение>
						<Код>9</Код>
						<Наименование>КурсовыеРазницы --&gt; КурсовыеРазницы</Наименование>
						<Порядок>900</Порядок>
						<Источник>КурсовыеРазницы</Источник>
						<Приемник>КурсовыеРазницы</Приемник>
					</Значение>
					<Значение>
						<Код>10</Код>
						<Наименование>СуммовыеРазницы --&gt; КурсовыеРазницы</Наименование>
						<Порядок>1000</Порядок>
						<Источник>СуммовыеРазницы</Источник>
						<Приемник>ПрочиеВнереализационныеДоходыРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>11</Код>
						<Наименование>КупляПродажаИностраннойВалюты --&gt; ПрочиеВнереализа</Наименование>
						<Порядок>1100</Порядок>
						<Источник>КупляПродажаИностраннойВалюты</Источник>
						<Приемник>ПрочиеВнереализационныеДоходыРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>12</Код>
						<Наименование>ВосстановлениеРезервов --&gt; ОтчисленияВОценочныеРез</Наименование>
						<Порядок>1200</Порядок>
						<Источник>ВосстановлениеРезервов</Источник>
						<Приемник>ПрочиеВнереализационныеДоходыРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>13</Код>
						<Наименование>ОперацииСФинансовымиИнструментами --&gt; ДоходыРасход</Наименование>
						<Порядок>1300</Порядок>
						<Источник>ОперацииСФинансовымиИнструментами</Источник>
						<Приемник>ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделокОР</Приемник>
					</Значение>
					<Значение>
						<Код>14</Код>
						<Наименование>ОперацииСФинансовымиИнструментамиНеОбращающимися -</Наименование>
						<Порядок>1400</Порядок>
						<Источник>ОперацииСФинансовымиИнструментамиНеОбращающимися</Источник>
						<Приемник>ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделок</Приемник>
					</Значение>
					<Значение>
						<Код>15</Код>
						<Наименование>ПроцентыПоГосударственнымЦеннымБумагам --&gt; Процент</Наименование>
						<Порядок>1500</Порядок>
						<Источник>ПроцентыПоГосударственнымЦеннымБумагам</Источник>
						<Приемник>ПроцентыКПолучениюУплате</Приемник>
					</Значение>
					<Значение>
						<Код>16</Код>
						<Наименование>ПроцентыПоГосударственнымЦеннымБумагамПоСтавке0 --</Наименование>
						<Порядок>1600</Порядок>
						<Источник>ПроцентыПоГосударственнымЦеннымБумагамПоСтавке0</Источник>
						<Приемник>ПроцентыКПолучениюУплате</Приемник>
					</Значение>
					<Значение>
						<Код>17</Код>
						<Наименование>ПрочиеВнереализационныеДоходы --&gt; ПрочиеВнереализа</Наименование>
						<Порядок>1700</Порядок>
						<Источник>ПрочиеВнереализационныеДоходы</Источник>
						<Приемник>ПрочиеВнереализационныеДоходыРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>18</Код>
						<Наименование>НеПринимаемые --&gt; ДоходыРасходыНеУчитываемыеВЦелях</Наименование>
						<Порядок>1800</Порядок>
						<Источник>НеПринимаемые</Источник>
						<Приемник>ПрочиеВнереализационныеДоходыРасходы</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ГруппаНоменклатуры</Код>
				<Наименование>Группа номенклатуры</Наименование>
				<Порядок>2200</Порядок>
				<ПередВыгрузкой>КлючВыгружаемыхДанных = "АвтоматическиСозданнаяГруппа_" + ВходящиеДанные.Получить("Наименование");</ПередВыгрузкой>
				<Приемник>СправочникСсылка.Номенклатура</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование> --&gt; Родитель</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Номенклатура"/>
						<ПередВыгрузкой>Значение = ПолучитьПустоеЗначение();</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; ЭтоГруппа</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ПеречислениеВнереализационныеРасходы</Код>
				<Наименование>ПеречислениеСсылка.ВнереализационныеРасходы --&gt; СправочникСсылка.ПрочиеДоходыИРасходы</Наименование>
				<Порядок>2300</Порядок>
				<ПередВыгрузкой>Источник = Источник.Идентификатор();</ПередВыгрузкой>
				<Источник>ПеречислениеСсылка.ВнереализационныеРасходы</Источник>
				<Приемник>ПеречислениеСсылка.ВидыПрочихДоходовИРасходов</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>СодержаниеИмуществаПереданногоВАренду --&gt; ДоходыРа</Наименование>
						<Порядок>100</Порядок>
						<Источник>СодержаниеИмуществаПереданногоВАренду</Источник>
						<Приемник>ДоходыРасходыСвязанныеСоСдачейИмуществаВАренду</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ПроцентыПоДолговымОбязательствам --&gt; ПроцентыКПолу</Наименование>
						<Порядок>200</Порядок>
						<Источник>ПроцентыПоДолговымОбязательствам</Источник>
						<Приемник>ПроцентыКПолучениюУплате</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>УслугиБанков --&gt; РасходыНаУслугиБанков</Наименование>
						<Порядок>300</Порядок>
						<Источник>УслугиБанков</Источник>
						<Приемник>РасходыНаУслугиБанков</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>Штрафы --&gt; ШтрафыПениНеустойкиКПолучениюУплате</Наименование>
						<Порядок>400</Порядок>
						<Источник>Штрафы</Источник>
						<Приемник>ШтрафыПениНеустойкиКПолучениюУплате</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>УбыткиПрошлыхЛет --&gt; ПрибыльУбытокПрошлыхЛет</Наименование>
						<Порядок>500</Порядок>
						<Источник>УбыткиПрошлыхЛет</Источник>
						<Приемник>ПрибыльУбытокПрошлыхЛет</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>ДолгиНереальныеКВзысканию --&gt; ПрочиеВнереализацион</Наименование>
						<Порядок>600</Порядок>
						<Источник>ДолгиНереальныеКВзысканию</Источник>
						<Приемник>ПрочиеВнереализационныеДоходыРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>КурсовыеРазницы --&gt; КурсовыеРазницы</Наименование>
						<Порядок>700</Порядок>
						<Источник>КурсовыеРазницы</Источник>
						<Приемник>КурсовыеРазницы</Приемник>
					</Значение>
					<Значение>
						<Код>8</Код>
						<Наименование>СуммовыеРазницы --&gt; ПрочиеВнереализационныеДоходыР</Наименование>
						<Порядок>800</Порядок>
						<Источник>СуммовыеРазницы</Источник>
						<Приемник>ПрочиеВнереализационныеДоходыРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>9</Код>
						<Наименование>КупляПродажаИностраннойВалюты --&gt; ПрочиеВнереализа</Наименование>
						<Порядок>900</Порядок>
						<Источник>КупляПродажаИностраннойВалюты</Источник>
						<Приемник>ПрочиеВнереализационныеДоходыРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>10</Код>
						<Наименование>ПереоценкаИмущества --&gt; РасходыОтСниженияСтоимости</Наименование>
						<Порядок>1000</Порядок>
						<Источник>ПереоценкаИмущества</Источник>
						<Приемник>РасходыОтСниженияСтоимостиАктивов</Приемник>
					</Значение>
					<Значение>
						<Код>11</Код>
						<Наименование>ФормированиеРезервовПоСомнительнымДолгам --&gt; Отчис</Наименование>
						<Порядок>1100</Порядок>
						<Источник>ФормированиеРезервовПоСомнительнымДолгам</Источник>
						<Приемник>ОтчисленияВОценочныеРезервы</Приемник>
					</Значение>
					<Значение>
						<Код>12</Код>
						<Наименование>УбытокОтУступкиПраваТребования --&gt; ДоходыРасходыСв</Наименование>
						<Порядок>1200</Порядок>
						<Источник>УбытокОтУступкиПраваТребования</Источник>
						<Приемник>ДоходыРасходыСвязанныеСРеализациейПраваТребованияДоНаступленияСрокаПлатежа</Приемник>
					</Значение>
					<Значение>
						<Код>13</Код>
						<Наименование>НДС_ПоСписаннойКредиторскойЗадолженности --&gt; НДСПо</Наименование>
						<Порядок>1300</Порядок>
						<Источник>НДС_ПоСписаннойКредиторскойЗадолженности</Источник>
						<Приемник>НДСПоСписаннойКредиторскойЗадолженности</Приемник>
					</Значение>
					<Значение>
						<Код>14</Код>
						<Наименование>ОперацииСФинансовымиИнструментами --&gt; ДоходыРасход</Наименование>
						<Порядок>1400</Порядок>
						<Источник>ОперацииСФинансовымиИнструментами</Источник>
						<Приемник>ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделокОР</Приемник>
					</Значение>
					<Значение>
						<Код>15</Код>
						<Наименование>ОперацииСФинансовымиИнструментамиНеОбращающимися -</Наименование>
						<Порядок>1500</Порядок>
						<Источник>ОперацииСФинансовымиИнструментамиНеОбращающимися</Источник>
						<Приемник>ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделок</Приемник>
					</Значение>
					<Значение>
						<Код>16</Код>
						<Наименование>ОтрицательнаяРазницаОтПереоценкиИмущества --&gt; Расх</Наименование>
						<Порядок>1600</Порядок>
						<Источник>ОтрицательнаяРазницаОтПереоценкиИмущества</Источник>
						<Приемник>РасходыОтСниженияСтоимостиАктивов</Приемник>
					</Значение>
					<Значение>
						<Код>17</Код>
						<Наименование>ПрочиеВнереализационныеРасходы --&gt; ПрочиеВнереализ</Наименование>
						<Порядок>1700</Порядок>
						<Источник>ПрочиеВнереализационныеРасходы</Источник>
						<Приемник>ПрочиеВнереализационныеДоходыРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>18</Код>
						<Наименование>НеПринимаемые --&gt; ДоходыРасходыНеУчитываемыеВЦелях</Наименование>
						<Порядок>1800</Порядок>
						<Источник>НеПринимаемые</Источник>
						<Приемник>ПрочиеВнереализационныеДоходыРасходы</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ВидыПрочихДоходовИРасходов</Код>
				<Наименование>ПеречислениеСсылка.ВидыПрочихДоходовИРасходов --&gt; ПеречислениеСсылка.ВидыПрочихДоходовИРасходов</Наименование>
				<Порядок>2400</Порядок>
				<ПередВыгрузкой>Источник = Источник.Идентификатор();</ПередВыгрузкой>
				<Источник>ПеречислениеСсылка.ВидыПрочихДоходовИРасходов</Источник>
				<Приемник>ПеречислениеСсылка.ВидыПрочихДоходовИРасходов</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>АктивыПереданныеВПользование --&gt; ПрочиеВнереализац</Наименование>
						<Порядок>100</Порядок>
						<Источник>АктивыПереданныеВПользование</Источник>
						<Приемник>ПрочиеВнереализационныеДоходыРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ПредоставленныеПраваПоНМА --&gt; ПрочиеВнереализацион</Наименование>
						<Порядок>200</Порядок>
						<Источник>ПредоставленныеПраваПоНМА</Источник>
						<Приемник>ПрочиеВнереализационныеДоходыРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>УчастиеВУставныхКапиталах --&gt; ДоходыРасходыСвязанн</Наименование>
						<Порядок>300</Порядок>
						<Источник>УчастиеВУставныхКапиталах</Источник>
						<Приемник>ДоходыРасходыСвязанныеСУчастиемВДругихОрганизациях</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>УчастиеВУставныхКапиталахИностранныхОрганизаций --</Наименование>
						<Порядок>400</Порядок>
						<Источник>УчастиеВУставныхКапиталахИностранныхОрганизаций</Источник>
						<Приемник>ДоходыРасходыСвязанныеСУчастиемВДругихОрганизациях</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>ПрибыльПоСовместнойДеятельности --&gt; ДоходыРасходыС</Наименование>
						<Порядок>500</Порядок>
						<Источник>ПрибыльПоСовместнойДеятельности</Источник>
						<Приемник>ДоходыРасходыСвязанныеСУчастиемВДругихОрганизациях</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>ВыбытиеОС --&gt; ДоходыРасходыСвязанныеСРеализациейОс</Наименование>
						<Порядок>600</Порядок>
						<Источник>ВыбытиеОС</Источник>
						<Приемник>ДоходыРасходыСвязанныеСРеализациейОсновныхСредств</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>ВыбытиеНМА --&gt; ДоходыРасходыСвязанныеСРеализациейН</Наименование>
						<Порядок>700</Порядок>
						<Источник>ВыбытиеНМА</Источник>
						<Приемник>ДоходыРасходыСвязанныеСРеализациейНематериальныхАктивов</Приемник>
					</Значение>
					<Значение>
						<Код>8</Код>
						<Наименование>ВыбытиеАктивов --&gt; ДоходыРасходыСвязанныеСРеализац</Наименование>
						<Порядок>800</Порядок>
						<Источник>ВыбытиеАктивов</Источник>
						<Приемник>ДоходыРасходыСвязанныеСРеализациейПрочегоИмущества</Приемник>
					</Значение>
					<Значение>
						<Код>9</Код>
						<Наименование>ПроцентыКПолучению --&gt; ПроцентыКПолучениюУплате</Наименование>
						<Порядок>900</Порядок>
						<Источник>ПроцентыКПолучению</Источник>
						<Приемник>ПроцентыКПолучениюУплате</Приемник>
					</Значение>
					<Значение>
						<Код>10</Код>
						<Наименование>ПроцентыКУплате --&gt; ПроцентыКПолучениюУплате</Наименование>
						<Порядок>1000</Порядок>
						<Источник>ПроцентыКУплате</Источник>
						<Приемник>ПроцентыКПолучениюУплате</Приемник>
					</Значение>
					<Значение>
						<Код>11</Код>
						<Наименование>УслугиБанков --&gt; РасходыНаУслугиБанков</Наименование>
						<Порядок>1100</Порядок>
						<Источник>УслугиБанков</Источник>
						<Приемник>РасходыНаУслугиБанков</Приемник>
					</Значение>
					<Значение>
						<Код>12</Код>
						<Наименование>КупляПродажаИностраннойВалюты --&gt; ПрочиеВнереализа</Наименование>
						<Порядок>1200</Порядок>
						<Источник>КупляПродажаИностраннойВалюты</Источник>
						<Приемник>ПрочиеВнереализационныеДоходыРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>13</Код>
						<Наименование>ОсуществлениеФинансовыхУслуг --&gt; ДоходыРасходыСвяз</Наименование>
						<Порядок>1300</Порядок>
						<Источник>ОсуществлениеФинансовыхУслуг</Источник>
						<Приемник>ДоходыРасходыСвязанныеСРеализациейПраваТребованияКакОказанияФинансовыхУслуг</Приемник>
					</Значение>
					<Значение>
						<Код>14</Код>
						<Наименование>УступкиПраваТребования --&gt; ДоходыРасходыСвязанныеС</Наименование>
						<Порядок>1400</Порядок>
						<Источник>УступкиПраваТребования</Источник>
						<Приемник>ДоходыРасходыСвязанныеСРеализациейПраваТребованияДоНаступленияСрокаПлатежа</Приемник>
					</Значение>
					<Значение>
						<Код>15</Код>
						<Наименование>ВосстановлениеРезервов --&gt; ПрочиеВнереализационные</Наименование>
						<Порядок>1500</Порядок>
						<Источник>ВосстановлениеРезервов</Источник>
						<Приемник>ПрочиеВнереализационныеДоходыРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>16</Код>
						<Наименование>РезервыСомнительныхДолгов --&gt; ПрочиеВнереализацион</Наименование>
						<Порядок>1600</Порядок>
						<Источник>РезервыСомнительныхДолгов</Источник>
						<Приемник>ПрочиеВнереализационныеДоходыРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>17</Код>
						<Наименование>ОперацииСФинансовымиИнструментами --&gt; ДоходыРасход</Наименование>
						<Порядок>1700</Порядок>
						<Источник>ОперацииСФинансовымиИнструментами</Источник>
						<Приемник>ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделокОР</Приемник>
					</Значение>
					<Значение>
						<Код>18</Код>
						<Наименование>ПроцентыПоГосударственнымЦеннымБумагам --&gt; Процент</Наименование>
						<Порядок>1800</Порядок>
						<Источник>ПроцентыПоГосударственнымЦеннымБумагам</Источник>
						<Приемник>ПроцентыКПолучениюУплате</Приемник>
					</Значение>
					<Значение>
						<Код>19</Код>
						<Наименование>ПроцентыПоГосударственнымЦеннымБумагамПоСтавке0 --</Наименование>
						<Порядок>1900</Порядок>
						<Источник>ПроцентыПоГосударственнымЦеннымБумагамПоСтавке0</Источник>
						<Приемник>ПроцентыКПолучениюУплате</Приемник>
					</Значение>
					<Значение>
						<Код>20</Код>
						<Наименование>ПрочиеОперационныеДоходыРасходы --&gt; ПрочиеОперацио</Наименование>
						<Порядок>2000</Порядок>
						<Источник>ПрочиеОперационныеДоходыРасходы</Источник>
						<Приемник>ПрочиеОперационныеДоходыРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>21</Код>
						<Наименование>КурсовыеРазницы --&gt; КурсовыеРазницы</Наименование>
						<Порядок>2100</Порядок>
						<Источник>КурсовыеРазницы</Источник>
						<Приемник>КурсовыеРазницы</Приемник>
					</Значение>
					<Значение>
						<Код>22</Код>
						<Наименование>ПрочиеВнереализационныеДоходыРасходы --&gt; ПрочиеВне</Наименование>
						<Порядок>2200</Порядок>
						<Источник>ПрочиеВнереализационныеДоходыРасходы</Источник>
						<Приемник>ПрочиеВнереализационныеДоходыРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>23</Код>
						<Наименование>ШтрафыПоДоговорам --&gt; ШтрафыПениНеустойкиКПолучени</Наименование>
						<Порядок>2300</Порядок>
						<Источник>ШтрафыПоДоговорам</Источник>
						<Приемник>ШтрафыПениНеустойкиКПолучениюУплате</Приемник>
					</Значение>
					<Значение>
						<Код>24</Код>
						<Наименование>АктивыПолученныеБезвозмездно --&gt; ДоходыРасходыСвяз</Наименование>
						<Порядок>2400</Порядок>
						<Источник>АктивыПолученныеБезвозмездно</Источник>
						<Приемник>ДоходыРасходыСвязанныеСБезвозмезднымПолучениемИмущества</Приемник>
					</Значение>
					<Значение>
						<Код>25</Код>
						<Наименование>ВозмещениеУбытковКПолучению --&gt; ВозмещениеУбытковК</Наименование>
						<Порядок>2500</Порядок>
						<Источник>ВозмещениеУбытковКПолучению</Источник>
						<Приемник>ВозмещениеУбытковКПолучениюУплате</Приемник>
					</Значение>
					<Значение>
						<Код>26</Код>
						<Наименование>ВозмещениеУбытковКУплате --&gt; ВозмещениеУбытковКПол</Наименование>
						<Порядок>2600</Порядок>
						<Источник>ВозмещениеУбытковКУплате</Источник>
						<Приемник>ВозмещениеУбытковКПолучениюУплате</Приемник>
					</Значение>
					<Значение>
						<Код>27</Код>
						<Наименование>ПрибыльУбыткиПрошлыхЛет --&gt; ПрибыльУбытокПрошлыхЛе</Наименование>
						<Порядок>2700</Порядок>
						<Источник>ПрибыльУбыткиПрошлыхЛет</Источник>
						<Приемник>ПрибыльУбытокПрошлыхЛет</Приемник>
					</Значение>
					<Значение>
						<Код>28</Код>
						<Наименование>СписаннаяКредиторскаяЗадолженность --&gt; СписаниеДеб</Наименование>
						<Порядок>2800</Порядок>
						<Источник>СписаннаяКредиторскаяЗадолженность</Источник>
						<Приемник>СписаниеДебиторскойКредиторскойЗадолженности</Приемник>
					</Значение>
					<Значение>
						<Код>29</Код>
						<Наименование>СписаннаяДебиторскаяЗадолженность --&gt; СписаниеДеби</Наименование>
						<Порядок>2900</Порядок>
						<Источник>СписаннаяДебиторскаяЗадолженность</Источник>
						<Приемник>СписаниеДебиторскойКредиторскойЗадолженности</Приемник>
					</Значение>
					<Значение>
						<Код>30</Код>
						<Наименование>ОтрицательнаяРазницаОтПереоценкиИмущества --&gt; Расх</Наименование>
						<Порядок>3000</Порядок>
						<Источник>ОтрицательнаяРазницаОтПереоценкиИмущества</Источник>
						<Приемник>РасходыОтСниженияСтоимостиАктивов</Приемник>
					</Значение>
					<Значение>
						<Код>31</Код>
						<Наименование>НеПринимаемыеДляЦелейНалогообложения --&gt; ДоходыРас</Наименование>
						<Порядок>3100</Порядок>
						<Источник>НеПринимаемыеДляЦелейНалогообложения</Источник>
						<Приемник>ПрочиеВнереализационныеДоходыРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>32</Код>
						<Наименование>ДооценкаУценкаАктивов --&gt; ПрочиеВнереализационныеД</Наименование>
						<Порядок>3200</Порядок>
						<Источник>ДооценкаУценкаАктивов</Источник>
						<Приемник>ПрочиеВнереализационныеДоходыРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>33</Код>
						<Наименование>ПрочиеКосвенныеРасходы --&gt; ПрочиеКосвенныеРасходы</Наименование>
						<Порядок>3300</Порядок>
						<Источник>ПрочиеКосвенныеРасходы</Источник>
						<Приемник>ПрочиеКосвенныеРасходы</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>СпособыПоступленияОС</Код>
				<Наименование>ПеречислениеСсылка.СпособыПоступленияОС --&gt; ПеречислениеСсылка.СпособыПоступленияАктивов</Наименование>
				<Порядок>2500</Порядок>
				<Источник>ПеречислениеСсылка.СпособыПоступленияОС</Источник>
				<Приемник>ПеречислениеСсылка.СпособыПоступленияАктивов</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>ПриобретениеЗаПлату --&gt; ПриобретениеЗаПлату</Наименование>
						<Порядок>100</Порядок>
						<Источник>ПриобретениеЗаПлату</Источник>
						<Приемник>ПриобретениеЗаПлату</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ВкладВУставныйКапитал --&gt; ВкладВУставныйКапитал</Наименование>
						<Порядок>200</Порядок>
						<Источник>ВкладВУставныйКапитал</Источник>
						<Приемник>ВкладВУставныйКапитал</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ПоДоговоруМены --&gt; ВОбменНаДругоеИмущество</Наименование>
						<Порядок>300</Порядок>
						<Источник>ПоДоговоруМены</Источник>
						<Приемник>ВОбменНаДругоеИмущество</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>БезвозмездноеПоступление --&gt; БезвозмездноеПоступле</Наименование>
						<Порядок>400</Порядок>
						<Источник>БезвозмездноеПоступление</Источник>
						<Приемник>БезвозмездноеПоступление</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>ПоДоговоруЛизинга --&gt; ПоДоговоруАренды</Наименование>
						<Порядок>500</Порядок>
						<Источник>ПоДоговоруЛизинга</Источник>
						<Приемник>ПоДоговоруАренды</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>Иной --&gt; Иное</Наименование>
						<Порядок>600</Порядок>
						<Источник>Иной</Источник>
						<Приемник>Иное</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>Строительство --&gt; Строительство</Наименование>
						<Порядок>700</Порядок>
						<Источник>Строительство</Источник>
						<Приемник>Строительство</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>СпособыПоступленияНМА</Код>
				<Наименование>ПеречислениеСсылка.СпособыПоступленияНМА --&gt; ПеречислениеСсылка.СпособыПоступленияАктивов</Наименование>
				<Порядок>2600</Порядок>
				<Источник>ПеречислениеСсылка.СпособыПоступленияНМА</Источник>
				<Приемник>ПеречислениеСсылка.СпособыПоступленияАктивов</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>ПриобретениеЗаПлату --&gt; ПриобретениеЗаПлату</Наименование>
						<Порядок>100</Порядок>
						<Источник>ПриобретениеЗаПлату</Источник>
						<Приемник>ПриобретениеЗаПлату</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ВкладВУставныйКапитал --&gt; ВкладВУставныйКапитал</Наименование>
						<Порядок>200</Порядок>
						<Источник>ВкладВУставныйКапитал</Источник>
						<Приемник>ВкладВУставныйКапитал</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ПоДоговоруМены --&gt; ВОбменНаДругоеИмущество</Наименование>
						<Порядок>300</Порядок>
						<Источник>ПоДоговоруМены</Источник>
						<Приемник>ВОбменНаДругоеИмущество</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>БезвозмездноеПоступление --&gt; БезвозмездноеПоступле</Наименование>
						<Порядок>400</Порядок>
						<Источник>БезвозмездноеПоступление</Источник>
						<Приемник>БезвозмездноеПоступление</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>Иной --&gt; Иное</Наименование>
						<Порядок>500</Порядок>
						<Источник>Иной</Источник>
						<Приемник>Иное</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ПараметрыВыработкиОС</Код>
				<Наименование> --&gt; СправочникСсылка.ПараметрыВыработкиОС</Наименование>
				<Порядок>2700</Порядок>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Приемник>СправочникСсылка.ПараметрыВыработкиОС</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ОСМодернизация</Код>
				<Наименование> --&gt; СправочникСсылка.СобытияОС</Наименование>
				<Порядок>2800</Порядок>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Приемник>СправочникСсылка.СобытияОС</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "Модернизировано";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; ВидОперацииОС</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидСобытияОС" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыСобытийОС"/>
						<ПередВыгрузкой>Значение = "Модернизация";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ОСВводИПринятиеКУчету</Код>
				<Наименование> --&gt; СправочникСсылка.СобытияОС</Наименование>
				<Порядок>2900</Порядок>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Приемник>СправочникСсылка.СобытияОС</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "Принятие к учету и ввод в эксплуатацию";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; ВидОперацииОС</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидСобытияОС" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыСобытийОС"/>
						<ПередВыгрузкой>Значение = "ПринятиеКУчетуСВводомВЭксплуатацию";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СпособыОтраженияРасходовПоАмортизации</Код>
				<Наименование>СправочникСсылка.ОсновныеСредства --&gt; СправочникСсылка.СпособыОтраженияРасходовПоАмортизации</Наименование>
				<Порядок>3000</Порядок>
				<ПередВыгрузкой>Если ТипЗначенияСтр(Источник) = "Справочник" Тогда
	Счет = Источник.СчетЗатрат.Получить(Параметры.ДатаКонцаПериодаВыгрузки);
	СчетН = Источник.СчетЗатратН.Получить(Параметры.ДатаКонцаПериодаВыгрузки);
	
	Если (ПустоеЗначение(Счет) = 1) и (ПустоеЗначение(СчетН) = 1) Тогда
		Отказ = 1;
	КонецЕсли;
	
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
				<ПослеЗагрузки>ИмяСчетаБУ = "СчетЗатрат";
ИмяСубкБУ = "Субконто";

Для каждого Способ из Объект.Способы Цикл

	Корреспонденция = Способ;
	
	мСведенияОСчетах = Новый Соответствие;

	СведенияОСчете = БухгалтерскийУчет.ПолучитьСведенияОСчете(мСведенияОСчетах, Корреспонденция[ИмяСчетаБУ]);
	Для СчетчикСубконто = 1 По 3 Цикл
		Для СчетчикСчета = 1 по СведенияОСчете.КоличествоСубконто Цикл
			Если (Корреспонденция[ИмяСубкБУ+СчетчикСубконто] = СведенияОСчете["ТипСубконто"+СчетчикСчета].ПривестиЗначение(Корреспонденция[ИмяСубкБУ+СчетчикСубконто])) и (СчетчикСчета &lt;&gt; СчетчикСубконто) Тогда
				Субконто = Корреспонденция[ИмяСубкБУ+СчетчикСчета];
				Корреспонденция[ИмяСубкБУ+СчетчикСчета] = Корреспонденция[ИмяСубкБУ+СчетчикСубконто];
				Корреспонденция[ИмяСубкБУ+СчетчикСубконто] = Субконто;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;

	Для СчетчикСубконто = 1 По 3 Цикл
		Если СведенияОСчете.КоличествоСубконто &gt;= СчетчикСубконто Тогда
			Корреспонденция[ИмяСубкБУ+СчетчикСубконто] = СведенияОСчете["ТипСубконто"+СчетчикСубконто].ПривестиЗначение(Корреспонденция[ИмяСубкБУ+СчетчикСубконто]);

		Иначе
			Корреспонденция[ИмяСубкБУ+СчетчикСубконто] = Неопределено;
		КонецЕсли;
	КонецЦикла;
	
КонецЦикла;</ПослеЗагрузки>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Приемник>СправочникСсылка.СпособыОтраженияРасходовПоАмортизации</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>14</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>16</Код>
						<Наименование> --&gt;</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "БУ: " + СокрП(Источник.СчетЗатрат.Получить(Параметры.ДатаКонцаПериодаВыгрузки)) + 
" / " + СокрП(Источник.Субконто1.Получить(Параметры.ДатаКонцаПериодаВыгрузки)) + " / " +
СокрП(Источник.Субконто2.Получить(Параметры.ДатаКонцаПериодаВыгрузки)) + " / " + 
СокрП(Источник.Субконто3.Получить(Параметры.ДатаКонцаПериодаВыгрузки));</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>17</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = СокрП(Источник.СчетЗатрат.Получить(Параметры.ДатаКонцаПериодаВыгрузки)) + " / " + 
СокрП(Источник.Субконто1.Получить(Параметры.ДатаКонцаПериодаВыгрузки)) + " / " + 
СокрП(Источник.Субконто2.Получить(Параметры.ДатаКонцаПериодаВыгрузки)) + " / " + 
СокрП(Источник.Субконто3.Получить(Параметры.ДатаКонцаПериодаВыгрузки));</ПередВыгрузкой>
					</Свойство>
					<Группа>
						<Код>3</Код>
						<Наименование> --&gt; Способы</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Способы" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("СчетЗатрат");
КоллекцияОбъектов.НоваяКолонка("Субконто1");
КоллекцияОбъектов.НоваяКолонка("Субконто2");
КоллекцияОбъектов.НоваяКолонка("Субконто3");
КоллекцияОбъектов.НоваяСтрока();
КоллекцияОбъектов.СчетЗатрат = Источник.СчетЗатрат.Получить(Параметры.ДатаКонцаПериодаВыгрузки);
КоллекцияОбъектов.Субконто1 = Источник.Субконто1.Получить(Параметры.ДатаКонцаПериодаВыгрузки);
КоллекцияОбъектов.Субконто2 = Источник.Субконто2.Получить(Параметры.ДатаКонцаПериодаВыгрузки);
КоллекцияОбъектов.Субконто3 = Источник.Субконто3.Получить(Параметры.ДатаКонцаПериодаВыгрузки);</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>10</Код>
							<Наименование> --&gt; СчетЗатрат</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетЗатрат" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<ПередВыгрузкой>Счет = Источник.СчетЗатрат.Получить(Параметры.ДатаКонцаПериодаВыгрузки);
Параметры.ПараметрыАлгоритмов.Установить("Счет", Счет);
Параметры.ПараметрыАлгоритмов.Установить("Субконто1", Источник.Субконто1.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
Параметры.ПараметрыАлгоритмов.Установить("Субконто2", Источник.Субконто2.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
Параметры.ПараметрыАлгоритмов.Установить("Субконто3", Источник.Субконто3.Получить(Параметры.ДатаКонцаПериодаВыгрузки));

ДобавленныйСчет = мТаблицаПравилКонвертацииОбъектов.ПолучитьЗначение(НайтиПравило(Счет, "Хозрасчетный"), "Значения").Получить(Строка(Счет));
Если (ПустоеЗначение(ДобавленныйСчет) = 1) И (ПустоеЗначение(Счет) = 0) Тогда
	ИмяПКО = "ХозрасчетныйСтрДоб";
Иначе
	 ИмяПКО = "Хозрасчетный";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование> --&gt; Субконто1</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Субконто1" Вид="Реквизит"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Счет", Источник.СчетЗатрат.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
Параметры.ПараметрыАлгоритмов.Установить("Субконто1", Источник.Субконто1.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
Параметры.ПараметрыАлгоритмов.Установить("Субконто2", Источник.Субконто2.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
Параметры.ПараметрыАлгоритмов.Установить("Субконто3", Источник.Субконто3.Получить(Параметры.ДатаКонцаПериодаВыгрузки));

Параметры.ПараметрыАлгоритмов.Установить("Субконто", Источник.Субконто1.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
ПриВыгрузкеСубконто();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; Субконто2</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Субконто2" Вид="Реквизит"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Счет", Источник.СчетЗатрат.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
Параметры.ПараметрыАлгоритмов.Установить("Субконто1", Источник.Субконто1.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
Параметры.ПараметрыАлгоритмов.Установить("Субконто2", Источник.Субконто2.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
Параметры.ПараметрыАлгоритмов.Установить("Субконто3", Источник.Субконто3.Получить(Параметры.ДатаКонцаПериодаВыгрузки));

Параметры.ПараметрыАлгоритмов.Установить("Субконто", Источник.Субконто2.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
ПриВыгрузкеСубконто();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование> --&gt; Субконто3</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Субконто3" Вид="Реквизит"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Счет", Источник.СчетЗатрат.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
Параметры.ПараметрыАлгоритмов.Установить("Субконто1", Источник.Субконто1.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
Параметры.ПараметрыАлгоритмов.Установить("Субконто2", Источник.Субконто2.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
Параметры.ПараметрыАлгоритмов.Установить("Субконто3", Источник.Субконто3.Получить(Параметры.ДатаКонцаПериодаВыгрузки));

Параметры.ПараметрыАлгоритмов.Установить("Субконто", Источник.Субконто3.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
ПриВыгрузкеСубконто();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование> --&gt; Коэффициент</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Коэффициент" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование> --&gt; ПодразделениеОрганизации</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПодразделениеОрганизации" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ПодразделенияОрганизаций                          </КодПравилаКонвертации>
							<ПередВыгрузкой>ЗначСубконто = СоздатьОбъект("СписокЗначений");
ЗначСубконто.ДобавитьЗначение(Источник.Субконто1.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
ЗначСубконто.ДобавитьЗначение(Источник.Субконто2.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
ЗначСубконто.ДобавитьЗначение(Источник.Субконто3.Получить(Параметры.ДатаКонцаПериодаВыгрузки));

Для НомерСтроки = 1 По ЗначСубконто.РазмерСписка() Цикл
	ТекЗнач = ЗначСубконто.ПолучитьЗначение(НомерСтроки);
	Если ТипЗначенияСтр(ТекЗнач) = "Справочник" Тогда
		Если ТекЗнач.Вид() = "Подразделения" Тогда
			Значение =  ТекЗнач;
			Прервать;
		КонецЕсли;
	КонецЕсли;
КонецЦикла;

Отказ = ПустоеЗначение(Значение);
</ПередВыгрузкой>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СпособыОтраженияРасходовПоСпецодежде</Код>
				<Наименование> --&gt; СправочникСсылка.СпособыОтраженияРасходовПоАмортизации</Наименование>
				<Порядок>3100</Порядок>
				<ПередВыгрузкой>Если ТипЗначенияСтр(Источник) = "Справочник" Тогда
	Счет = Источник.СчетЗатрат;
	Если ПустоеЗначение(Счет) = 1 Тогда
		Отказ = 1;
	КонецЕсли;
	
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
				<ПослеЗагрузки>ИмяСчетаБУ = "СчетЗатрат";
ИмяСубкБУ = "Субконто";

Для каждого Способ из Объект.Способы Цикл

	Корреспонденция = Способ;
	
	мСведенияОСчетах = Новый Соответствие;

	СведенияОСчете = БухгалтерскийУчет.ПолучитьСведенияОСчете(мСведенияОСчетах, Корреспонденция[ИмяСчетаБУ]);
	Для СчетчикСубконто = 1 По 3 Цикл
		Для СчетчикСчета = 1 по СведенияОСчете.КоличествоСубконто Цикл
			Если (Корреспонденция[ИмяСубкБУ+СчетчикСубконто] = СведенияОСчете["ТипСубконто"+СчетчикСчета].ПривестиЗначение(Корреспонденция[ИмяСубкБУ+СчетчикСубконто])) и (СчетчикСчета &lt;&gt; СчетчикСубконто) Тогда
				Субконто = Корреспонденция[ИмяСубкБУ+СчетчикСчета];
				Корреспонденция[ИмяСубкБУ+СчетчикСчета] = Корреспонденция[ИмяСубкБУ+СчетчикСубконто];
				Корреспонденция[ИмяСубкБУ+СчетчикСубконто] = Субконто;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;

	Для СчетчикСубконто = 1 По 3 Цикл
		Если СведенияОСчете.КоличествоСубконто &gt;= СчетчикСубконто Тогда
			Корреспонденция[ИмяСубкБУ+СчетчикСубконто] = СведенияОСчете["ТипСубконто"+СчетчикСубконто].ПривестиЗначение(Корреспонденция[ИмяСубкБУ+СчетчикСубконто]);

		Иначе
			Корреспонденция[ИмяСубкБУ+СчетчикСубконто] = Неопределено;
		КонецЕсли;
	КонецЦикла;
	
КонецЦикла;</ПослеЗагрузки>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Приемник>СправочникСсылка.СпособыОтраженияРасходовПоАмортизации</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt;</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "БУ: " + СокрП(Источник.СчетЗатрат) + " / " + СокрП(Источник.Субконто1) + " / " + СокрП(Источник.Субконто2) + " / " + СокрП(Источник.Субконто3);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = СокрП(Источник.СчетЗатрат) + " / " + 
СокрП(Источник.Субконто1) + " / " + 
СокрП(Источник.Субконто2) + " / " + 
СокрП(Источник.Субконто3);</ПередВыгрузкой>
					</Свойство>
					<Группа>
						<Код>4</Код>
						<Наименование> --&gt; Способы</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Способы" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("СчетЗатрат");
КоллекцияОбъектов.НоваяКолонка("Субконто1");
КоллекцияОбъектов.НоваяКолонка("Субконто2");
КоллекцияОбъектов.НоваяКолонка("Субконто3");
КоллекцияОбъектов.НоваяСтрока();
КоллекцияОбъектов.СчетЗатрат = Источник.СчетЗатрат;
КоллекцияОбъектов.Субконто1 = Источник.Субконто1;
КоллекцияОбъектов.Субконто2 = Источник.Субконто2;
КоллекцияОбъектов.Субконто3 = Источник.Субконто3;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>9</Код>
							<Наименование> --&gt; СчетЗатрат</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетЗатрат" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<ПередВыгрузкой>Счет = Источник.СчетЗатрат;
Параметры.ПараметрыАлгоритмов.Установить("Счет", Счет);
Параметры.ПараметрыАлгоритмов.Установить("Субконто1", Источник.Субконто1);
Параметры.ПараметрыАлгоритмов.Установить("Субконто2", Источник.Субконто2);
Параметры.ПараметрыАлгоритмов.Установить("Субконто3", Источник.Субконто3);

ДобавленныйСчет = мТаблицаПравилКонвертацииОбъектов.ПолучитьЗначение(НайтиПравило(Счет, "Хозрасчетный"), "Значения").Получить(Строка(Счет));
Если ПустоеЗначение(ДобавленныйСчет) = 1 Тогда
	ИмяПКО = "ХозрасчетныйСтрДоб";
Иначе
	 ИмяПКО = "Хозрасчетный";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; Субконто1</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Субконто1" Вид="Реквизит"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Счет", Источник.СчетЗатрат);
Параметры.ПараметрыАлгоритмов.Установить("Субконто1", Источник.Субконто1);
Параметры.ПараметрыАлгоритмов.Установить("Субконто2", Источник.Субконто2);
Параметры.ПараметрыАлгоритмов.Установить("Субконто3", Источник.Субконто3);

Параметры.ПараметрыАлгоритмов.Установить("Субконто", Источник.Субконто1);
ПриВыгрузкеСубконто();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; Субконто2</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Субконто2" Вид="Реквизит"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Счет", Источник.СчетЗатрат);
Параметры.ПараметрыАлгоритмов.Установить("Субконто1", Источник.Субконто1);
Параметры.ПараметрыАлгоритмов.Установить("Субконто2", Источник.Субконто2);
Параметры.ПараметрыАлгоритмов.Установить("Субконто3", Источник.Субконто3);

Параметры.ПараметрыАлгоритмов.Установить("Субконто", Источник.Субконто2);
ПриВыгрузкеСубконто();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование> --&gt; Субконто3</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Субконто3" Вид="Реквизит"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Счет", Источник.СчетЗатрат);
Параметры.ПараметрыАлгоритмов.Установить("Субконто1", Источник.Субконто1);
Параметры.ПараметрыАлгоритмов.Установить("Субконто2", Источник.Субконто2);
Параметры.ПараметрыАлгоритмов.Установить("Субконто3", Источник.Субконто3);
		
Параметры.ПараметрыАлгоритмов.Установить("Субконто", Источник.Субконто3);
ПриВыгрузкеСубконто();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование> --&gt; Коэффициент</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Коэффициент" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>МетодыНачисленияАмортизации</Код>
				<Наименование>ПеречислениеСсылка.МетодыНачисленияАмортизации --&gt; ПеречислениеСсылка.МетодыНачисленияАмортизации</Наименование>
				<Порядок>3300</Порядок>
				<Источник>ПеречислениеСсылка.МетодыНачисленияАмортизации</Источник>
				<Приемник>ПеречислениеСсылка.МетодыНачисленияАмортизации</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>Линейный --&gt; Линейный</Наименование>
						<Порядок>100</Порядок>
						<Источник>Линейный</Источник>
						<Приемник>Линейный</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>Нелинейный --&gt; Нелинейный</Наименование>
						<Порядок>200</Порядок>
						<Источник>Нелинейный</Источник>
						<Приемник>Нелинейный</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>СпособыНачисленияАмортизацииНМА</Код>
				<Наименование>ПеречислениеСсылка.СпособыНачисленияАмортизацииНМА --&gt; ПеречислениеСсылка.СпособыНачисленияАмортизац</Наименование>
				<Порядок>3400</Порядок>
				<Источник>ПеречислениеСсылка.СпособыНачисленияАмортизацииНМА</Источник>
				<Приемник>ПеречислениеСсылка.СпособыНачисленияАмортизацииНМА</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>Линейный --&gt; Линейный</Наименование>
						<Порядок>100</Порядок>
						<Источник>Линейный</Источник>
						<Приемник>Линейный</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>УменьшаемогоОстатка --&gt; УменьшаемогоОстатка</Наименование>
						<Порядок>200</Порядок>
						<Источник>УменьшаемогоОстатка</Источник>
						<Приемник>УменьшаемогоОстатка</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ПропорциональноОбъемуПродукцииРабот --&gt; Пропорцион</Наименование>
						<Порядок>300</Порядок>
						<Источник>ПропорциональноОбъемуПродукцииРабот</Источник>
						<Приемник>ПропорциональноОбъемуПродукции</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ОбщероссийскийКлассификаторОсновныхФондов</Код>
				<Наименование>СправочникСсылка.ОбщероссийскийКлассификаторОсновныхФондов --&gt; СправочникСсылка.ОбщероссийскийКласси</Наименование>
				<Порядок>3450</Порядок>
				<Источник>СправочникСсылка.ОбщероссийскийКлассификаторОсновныхФондов</Источник>
				<Приемник>СправочникСсылка.ОбщероссийскийКлассификаторОсновныхФондов</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>АмортизационнаяГруппа --&gt; АмортизационнаяГруппа</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="АмортизационнаяГруппа" Вид="Реквизит" Тип="ПеречислениеСсылка.АмортизационныеГруппы"/>
						<Приемник Имя="АмортизационнаяГруппа" Вид="Реквизит" Тип="ПеречислениеСсылка.АмортизационныеГруппы"/>
						<КодПравилаКонвертации>АмортизационныеГруппы                             </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<ПриВыгрузке>Значение = СтрЗаменить(Источник, "_", " ");</ПриВыгрузке>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>КонтрольноеЧисло --&gt; КонтрольноеЧисло</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="КонтрольноеЧисло" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="КонтрольноеЧисло" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="НаименованиеГруппировки" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>Родитель --&gt; Родитель</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ОбщероссийскийКлассификаторОсновныхФондов"/>
						<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ОбщероссийскийКлассификаторОсновныхФондов"/>
						<КодПравилаКонвертации>ОбщероссийскийКлассификаторОсновныхФондов         </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>7</Код>
						<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СпособыНачисленияАмортизацииОС</Код>
				<Наименование>ПеречислениеСсылка.СпособыНачисленияАмортизацииОС --&gt; ПеречислениеСсылка.СпособыНачисленияАмортизаци</Наименование>
				<Порядок>3500</Порядок>
				<Источник>ПеречислениеСсылка.СпособыНачисленияАмортизацииОС</Источник>
				<Приемник>ПеречислениеСсылка.СпособыНачисленияАмортизацииОС</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>Линейный --&gt; Линейный</Наименование>
						<Порядок>100</Порядок>
						<Источник>Линейный</Источник>
						<Приемник>Линейный</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>УменьшаемогоОстатка --&gt; УменьшаемогоОстатка</Наименование>
						<Порядок>200</Порядок>
						<Источник>УменьшаемогоОстатка</Источник>
						<Приемник>УменьшаемогоОстатка</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ПоСуммеЧиселЛет --&gt; ПоСуммеЧиселЛетИспользования</Наименование>
						<Порядок>300</Порядок>
						<Источник>ПоСуммеЧиселЛет</Источник>
						<Приемник>ПоСуммеЧиселЛетИспользования</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>ПропорциональноОбъемуПродукцииРабот --&gt; Пропорцион</Наименование>
						<Порядок>400</Порядок>
						<Источник>ПропорциональноОбъемуПродукцииРабот</Источник>
						<Приемник>ПропорциональноОбъемуПродукции</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>ПоЕдинымНормам --&gt; ПоЕНАОФ</Наименование>
						<Порядок>500</Порядок>
						<Источник>ПоЕдинымНормам</Источник>
						<Приемник>ПоЕНАОФ</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ОсновныеНачисленияОрганизаций</Код>
				<Наименование> --&gt; ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций</Наименование>
				<Порядок>3600</Порядок>
				<ПослеЗагрузки>Объект.КодДоходаЕСН = Справочники.ДоходыЕСН.ОблагаетсяЦеликом;
Объект.КодДоходаНДФЛ = Справочники.ДоходыНДФЛ.КодДоходаПоУмолчанию;
Объект.КодДоходаФСС_НС = Перечисления.ДоходыФСС_НС.Облагается;
Объект.ЧастичноПодпадаетПодЕНВД = Ложь;
Объект.КодДоходаСтраховыеВзносы = Справочники.ДоходыПоСтраховымВзносам.ОблагаетсяЦеликом;</ПослеЗагрузки>
				<Источник>СправочникСсылка.Сотрудники</Источник>
				<Приемник>ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "Оклад по дням (счет затрат "+Источник.СчетЗатрат.Получить(Параметры.ДатаКонцаПериодаВыгрузки)+")";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; СпособОтраженияВБухучете</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособОтраженияВБухучете" Вид="Реквизит" Тип="СправочникСсылка.СпособыОтраженияЗарплатыВРеглУчете"/>
						<КодПравилаКонвертации>СпособыОтраженияЗарплатыВРеглУчете                </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; ВидНачисленияПоСт255НК</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидНачисленияПоСт255НК" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыНачисленийОплатыТрудаПоСт255НК"/>
						<ПередВыгрузкой>Значение = "пп1ст255";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = ПривестиНомерКДлине(Источник.Код, 5);
</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ГруппаНМА</Код>
				<Наименование>Группа НМА</Наименование>
				<Порядок>3800</Порядок>
				<ПередВыгрузкой>КлючВыгружаемыхДанных = "АвтоматическиСозданнаяГруппа_" + ВходящиеДанные.Получить("Наименование");</ПередВыгрузкой>
				<Приемник>СправочникСсылка.НематериальныеАктивы</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Родитель</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.НематериальныеАктивы"/>
						<ПередВыгрузкой>Значение = ПолучитьПустоеЗначение();</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование> --&gt; ЭтоГруппа</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>МоментыОпределенияНалоговойБазыНДС</Код>
				<Наименование>ПеречислениеСсылка.МетодыОпределенияВыручки --&gt; ПеречислениеСсылка.МоментыОпределенияНалоговойБазыНД</Наименование>
				<Порядок>3900</Порядок>
				<Источник>ПеречислениеСсылка.МетодыОпределенияВыручки</Источник>
				<Приемник>ПеречислениеСсылка.МоментыОпределенияНалоговойБазыНДС</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>ПоОплате --&gt; ПоОплате</Наименование>
						<Порядок>100</Порядок>
						<Источник>ПоОплате</Источник>
						<Приемник>ПоОплате</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ПоОтгрузке --&gt; ПоОтгрузке</Наименование>
						<Порядок>200</Порядок>
						<Источник>ПоОтгрузке</Источник>
						<Приемник>ПоОтгрузке</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>НазначенияИспользования</Код>
				<Наименование>СправочникСсылка.НазначенияИспользования --&gt; СправочникСсылка.НазначенияИспользования</Наименование>
				<Порядок>4000</Порядок>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Источник>СправочникСсылка.НазначенияИспользования</Источник>
				<Приемник>СправочникСсылка.НазначенияИспользования</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство Отключить="true">
						<Код>2</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Если Параметры.ВыгружатьКоды = Да Тогда
	Значение = ПривестиНомерКДлине(Источник.Код, Параметры.ДлинаКода);
	
Иначе
	Отказ = 1 ;
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование>Владелец --&gt; Владелец</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="Владелец" Вид="Свойство" Тип="СправочникСсылка.Материалы"/>
						<Приемник Имя="Владелец" Вид="Свойство" Тип="СправочникСсылка.Номенклатура"/>
						<КодПравилаКонвертации>Материалы                                         </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>5</Код>
						<Наименование>СпособПогашенияСтоимости --&gt; СпособПогашенияСтоимости</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="СпособПогашенияСтоимости" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособПогашенияСтоимости"/>
						<Приемник Имя="СпособПогашенияСтоимости" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыПогашенияСтоимости"/>
						<КодПравилаКонвертации>СпособыПогашенияСтоимости                         </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>СрокПолезногоИспользования --&gt; СрокПолезногоИспользования</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="СрокПолезногоИспользования" Вид="Реквизит" Тип="Число"/>
						<Приемник Имя="СрокПолезногоИспользования" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование> --&gt; ОбщийОбъемПродукцииРабот</Наименование>
						<Порядок>700</Порядок>
						<Источник Имя="СрокПолезногоИспользования" Вид="Реквизит" Тип="Число"/>
						<Приемник Имя="ОбщийОбъемПродукцииРабот" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; Количество</Наименование>
						<Порядок>800</Порядок>
						<Источник Имя="ФактическийОбъемПродукцииРаботЗаМесяц" Вид="Реквизит" Тип="Число"/>
						<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>9</Код>
						<Наименование> --&gt; СпособОтраженияРасходов</Наименование>
						<Порядок>900</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособОтраженияРасходов" Вид="Реквизит" Тип="СправочникСсылка.СпособыОтраженияРасходовПоАмортизации"/>
						<КодПравилаКонвертации>СпособыОтраженияРасходовПоСпецодежде              </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>1000</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СпособыПогашенияСтоимости</Код>
				<Наименование>ПеречислениеСсылка.СпособПогашенияСтоимости --&gt; ПеречислениеСсылка.СпособыПогашенияСтоимости</Наименование>
				<Порядок>4100</Порядок>
				<Источник>ПеречислениеСсылка.СпособПогашенияСтоимости</Источник>
				<Приемник>ПеречислениеСсылка.СпособыПогашенияСтоимости</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>Линейный --&gt; Линейный</Наименование>
						<Порядок>100</Порядок>
						<Источник>Линейный</Источник>
						<Приемник>Линейный</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ПогашатьСтоимостьВМоментПередачиВПроизводство --&gt;</Наименование>
						<Порядок>200</Порядок>
						<Источник>ПогашатьСтоимостьВМоментПередачиВПроизводство</Источник>
						<Приемник>ПогашатьСтоимостьПриПередачеВЭксплуатацию</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ПропорциональноОбъемуПродукцииРабот --&gt; Пропорцион</Наименование>
						<Порядок>300</Порядок>
						<Источник>ПропорциональноОбъемуПродукцииРабот</Источник>
						<Приемник>ПропорциональноОбъемуПродукцииРабот</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ГруппаПрочихРасходов</Код>
				<Наименование> --&gt; СправочникСсылка.СтатьиЗатрат</Наименование>
				<Порядок>4200</Порядок>
				<Приемник>СправочникСсылка.ПрочиеДоходыИРасходы</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Родитель</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ПрочиеДоходыИРасходы"/>
						<ПередВыгрузкой>Значение = ПолучитьПустоеЗначение();</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование> --&gt; ЭтоГруппа</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ГруппаСтатейЗатрат</Код>
				<Наименование> --&gt; СправочникСсылка.СтатьиЗатрат</Наименование>
				<Порядок>4200</Порядок>
				<Приемник>СправочникСсылка.СтатьиЗатрат</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Родитель</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.СтатьиЗатрат"/>
						<ПередВыгрузкой>Значение = ПолучитьПустоеЗначение();</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование> --&gt; ЭтоГруппа</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ОсобенностиИсчисленияНДФЛ</Код>
				<Наименование>ПеречислениеСсылка.ОсобенностиИсчисленияНДФЛ --&gt; ПеречислениеСсылка.ОсобенностиИсчисленияНДФЛ</Наименование>
				<Порядок>4400</Порядок>
				<Источник>ПеречислениеСсылка.ОсобенностиИсчисленияНДФЛ</Источник>
				<Приемник>ПеречислениеСсылка.ОсобенностиИсчисленияНДФЛ</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>СтандартныеВычетыВПределахМесячногоДохода --&gt; Стан</Наименование>
						<Порядок>100</Порядок>
						<Источник>СтандартныеВычетыВПределахМесячногоДохода</Источник>
						<Приемник>СтандартныеВычетыВПределахМесячногоДохода</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>СтандартныеВычетыНарастающимИтогом --&gt; Стандартные</Наименование>
						<Порядок>200</Порядок>
						<Источник>СтандартныеВычетыНарастающимИтогом</Источник>
						<Приемник>СтандартныеВычетыНарастающимИтогом</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>МетодыРаспределенияКосвенныхРасходовПоВидамДеятель</Код>
				<Наименование>ПеречислениеСсылка.МетодыРаспределенияКосвенныхРасходовПоВидамДеятельности --&gt; ПеречислениеСсылка.Ме</Наименование>
				<Порядок>4500</Порядок>
				<Источник>ПеречислениеСсылка.МетодыРаспределенияКосвенныхРасходовПоВидамДеятельности</Источник>
				<Приемник>ПеречислениеСсылка.МетодыРаспределенияКосвенныхРасходовПоВидамДеятельности</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>ЗаМесяц --&gt; ЗаМесяц</Наименование>
						<Порядок>100</Порядок>
						<Источник>ЗаМесяц</Источник>
						<Приемник>ЗаМесяц</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>НарастающимИтогомСНачалаГода --&gt; НарастающимИтогом</Наименование>
						<Порядок>200</Порядок>
						<Источник>НарастающимИтогомСНачалаГода</Источник>
						<Приемник>НарастающимИтогомСНачалаГода</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>Периодичность</Код>
				<Наименование>ПеречислениеСсылка.НалоговыеПериодыПоНДС --&gt; ПеречислениеСсылка.Периодичность</Наименование>
				<Порядок>4600</Порядок>
				<Источник>ПеречислениеСсылка.НалоговыеПериодыПоНДС</Источник>
				<Приемник>ПеречислениеСсылка.Периодичность</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>Квартал --&gt; Квартал</Наименование>
						<Порядок>100</Порядок>
						<Источник>Квартал</Источник>
						<Приемник>Квартал</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>Месяц --&gt; Месяц</Наименование>
						<Порядок>200</Порядок>
						<Источник>Месяц</Источник>
						<Приемник>Месяц</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>НазначениеЦелевыхСредств</Код>
				<Наименование>ПеречислениеСсылка.НазначенияЦелевыхСредств --&gt; СправочникСсылка.НазначениеЦелевыхСредств</Наименование>
				<Порядок>4650</Порядок>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Источник>ПеречислениеСсылка.НазначенияЦелевыхСредств</Источник>
				<Приемник>СправочникСсылка.НазначениеЦелевыхСредств</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Лев(Строка(Источник),25);</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ОСВыбытие</Код>
				<Наименование>: </Наименование>
				<Порядок>4700</Порядок>
				<ПослеЗагрузки>Если Не ЗначениеЗаполнено(Объект.Код) Тогда Объект.УстановитьНовыйКод() КонецЕсли;</ПослеЗагрузки>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Приемник>СправочникСсылка.СобытияОС</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "Выбыло";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; ВидСобытияОС</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидСобытияОС" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыСобытийОС"/>
						<ПередВыгрузкой>Значение = "Списание";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ТарифыСтраховыхВзносов</Код>
				<Наименование>Перечисление: Тарифы страховых взносов</Наименование>
				<Порядок>4750</Порядок>
				<Источник>ПеречислениеСсылка.ТарифыСтраховыхВзносов</Источник>
				<Приемник>ПеречислениеСсылка.ТарифыСтраховыхВзносов</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>ЕНВД --&gt; ЕНВД</Наименование>
						<Порядок>50</Порядок>
						<Источник>ЕНВД</Источник>
						<Приемник>ЕНВД</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ОбщийНалоговыйРежим --&gt; ОбщийНалоговыйРежим</Наименование>
						<Порядок>100</Порядок>
						<Источник>ОбщийНалоговыйРежим</Источник>
						<Приемник>ОбщийНалоговыйРежим</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ОрганизацияИнвалидов --&gt; ОрганизацияИнвалидов</Наименование>
						<Порядок>150</Порядок>
						<Источник>ОрганизацияИнвалидов</Источник>
						<Приемник>ОрганизацияИнвалидов</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>РезидентТехникоВнедренческойЗоны --&gt; РезидентТехни</Наименование>
						<Порядок>200</Порядок>
						<Источник>РезидентТехникоВнедренческойЗоны</Источник>
						<Приемник>РезидентТехникоВнедренческойЗоны</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>ITОрганизации --&gt; ITОрганизации</Наименование>
						<Порядок>250</Порядок>
						<Источник>ITОрганизации</Источник>
						<Приемник>ITОрганизации</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>СМИ --&gt; СМИ</Наименование>
						<Порядок>300</Порядок>
						<Источник>СМИ</Источник>
						<Приемник>СМИ</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>ХозОбществаБюджетныхВУЗов --&gt; ХозОбществаБюджетных</Наименование>
						<Порядок>350</Порядок>
						<Источник>ХозОбществаБюджетныхВУЗов</Источник>
						<Приемник>ХозОбществаБюджетныхВУЗов</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ВидыВзаиморасчетов</Код>
				<Наименование>Справочник: Договоры</Наименование>
				<Порядок>4800</Порядок>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Источник>СправочникСсылка.ВидыДоговоров</Источник>
				<Приемник>СправочникСсылка.ВидыВзаиморасчетов</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
		<Группа>
			<Код>РегистрыСведений</Код>
			<Наименование>Регистры сведений</Наименование>
			<Порядок>300</Порядок>
			<Правило>
				<Код>КурсыВалют</Код>
				<Наименование>СправочникСсылка.Валюты --&gt; РегистрСведенийЗапись.КурсыВалют</Наименование>
				<Порядок>50</Порядок>
				<Источник>СправочникСсылка.Валюты</Источник>
				<Приемник>РегистрСведенийЗапись.КурсыВалют</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование>Курс --&gt; Курс</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Курс" Вид="Ресурс" Тип="Число"/>
						<ПередВыгрузкой>Значение = Источник.Курс.Получить(Параметры.ДатаКонцаПериодаВыгрузки);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Кратность --&gt; Кратность</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Кратность" Вид="Ресурс" Тип="Число"/>
						<ПередВыгрузкой>Значение = Источник.Кратность.Получить(Параметры.ДатаКонцаПериодаВыгрузки);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Параметры.ДатаКонцаПериодаВыгрузки;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Валюта</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Валюта" Вид="Измерение" Тип="СправочникСсылка.Валюты"/>
						<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ТелефоныОрганизации</Код>
				<Наименование> --&gt; РегистрСведенийЗапись.КонтактнаяИнформация</Наименование>
				<Порядок>100</Порядок>
				<Приемник>РегистрСведенийЗапись.КонтактнаяИнформация</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Объект</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Объект" Вид="Измерение"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Тип</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Тип" Вид="Измерение" Тип="ПеречислениеСсылка.ТипыКонтактнойИнформации"/>
						<ПередВыгрузкой>Значение = "Телефон";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Вид</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Вид" Вид="Измерение"/>
						<ПередВыгрузкой>Значение = "00006"; ТипПриемника = "СправочникСсылка.ВидыКонтактнойИнформации";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Представление</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Представление" Вид="Ресурс" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Константа.ТелефоныОрганизации;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; Поле3</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле3" Вид="Ресурс" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Константа.ТелефоныОрганизации;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ТелефоныКонтрагента</Код>
				<Наименование>СправочникСсылка.Контрагенты --&gt; РегистрСведенийЗапись.КонтактнаяИнформация</Наименование>
				<Порядок>150</Порядок>
				<Источник>СправочникСсылка.Контрагенты</Источник>
				<Приемник>РегистрСведенийЗапись.КонтактнаяИнформация</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Объект</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Объект" Вид="Измерение"/>
						<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Тип</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Тип" Вид="Измерение" Тип="ПеречислениеСсылка.ТипыКонтактнойИнформации"/>
						<ПередВыгрузкой>Значение = "Телефон";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Представление</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="Телефоны" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="Представление" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Поле3</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="Телефоны" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="Поле3" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; Вид</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Вид" Вид="Измерение"/>
						<ПередВыгрузкой>Значение = "00005"; ТипПриемника = "СправочникСсылка.ВидыКонтактнойИнформации";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ЮридическийАдресОрганизации</Код>
				<Наименование> --&gt; РегистрСведенийЗапись.КонтактнаяИнформация</Наименование>
				<Порядок>200</Порядок>
				<ПередВыгрузкой>ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Адрес", Константа.АдресОрганизации);
ПолучитьСтруктуруАдреса();</ПередВыгрузкой>
				<Приемник>РегистрСведенийЗапись.КонтактнаяИнформация</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Объект</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Объект" Вид="Измерение"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Тип</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Тип" Вид="Измерение" Тип="ПеречислениеСсылка.ТипыКонтактнойИнформации"/>
						<ПередВыгрузкой>Значение = "Адрес";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Вид</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Вид" Вид="Измерение"/>
						<ПередВыгрузкой>Значение = "00011"; ТипПриемника = "СправочникСсылка.ВидыКонтактнойИнформации";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Представление</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Представление" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>500</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле1" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; Поле2</Наименование>
						<Порядок>600</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле2" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование> --&gt; Поле3</Наименование>
						<Порядок>700</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле3" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; Поле4</Наименование>
						<Порядок>800</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле4" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование> --&gt; Поле5</Наименование>
						<Порядок>900</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле5" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование> --&gt; Поле6</Наименование>
						<Порядок>1000</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле6" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование> --&gt; Поле7</Наименование>
						<Порядок>1100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле7" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование> --&gt; Поле8</Наименование>
						<Порядок>1200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле8" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>13</Код>
						<Наименование> --&gt; Поле9</Наименование>
						<Порядок>1300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле9" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>14</Код>
						<Наименование> --&gt; Поле10</Наименование>
						<Порядок>1400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле10" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ФактическийАдресОрганизации</Код>
				<Наименование> --&gt; РегистрСведенийЗапись.КонтактнаяИнформация</Наименование>
				<Порядок>250</Порядок>
				<ПередВыгрузкой>ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Адрес", Константа.ПочтовыйАдресОрганизации);
ПолучитьСтруктуруАдреса();</ПередВыгрузкой>
				<Приемник>РегистрСведенийЗапись.КонтактнаяИнформация</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Объект</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Объект" Вид="Измерение"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Тип</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Тип" Вид="Измерение" Тип="ПеречислениеСсылка.ТипыКонтактнойИнформации"/>
						<ПередВыгрузкой>Значение = "Адрес";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Вид</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Вид" Вид="Измерение"/>
						<ПередВыгрузкой>Значение = "00009"; ТипПриемника = "СправочникСсылка.ВидыКонтактнойИнформации";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Представление</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Представление" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>500</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле1" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; Поле2</Наименование>
						<Порядок>600</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле2" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование> --&gt; Поле3</Наименование>
						<Порядок>700</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле3" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; Поле4</Наименование>
						<Порядок>800</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле4" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование> --&gt; Поле5</Наименование>
						<Порядок>900</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле5" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование> --&gt; Поле6</Наименование>
						<Порядок>1000</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле6" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование> --&gt; Поле7</Наименование>
						<Порядок>1100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле7" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование> --&gt; Поле8</Наименование>
						<Порядок>1200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле8" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>13</Код>
						<Наименование> --&gt; Поле9</Наименование>
						<Порядок>1300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле9" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>14</Код>
						<Наименование> --&gt; Поле10</Наименование>
						<Порядок>1400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле10" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ЮридическийАдресКонтрагента</Код>
				<Наименование>СправочникСсылка.Контрагенты --&gt; РегистрСведенийЗапись.КонтактнаяИнформация</Наименование>
				<Порядок>300</Порядок>
				<ПередВыгрузкой>ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Адрес", Источник.ЮридическийАдрес);
ПолучитьСтруктуруАдреса();</ПередВыгрузкой>
				<Источник>СправочникСсылка.Контрагенты</Источник>
				<Приемник>РегистрСведенийЗапись.КонтактнаяИнформация</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Объект</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Объект" Вид="Измерение"/>
						<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Тип</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Тип" Вид="Измерение" Тип="ПеречислениеСсылка.ТипыКонтактнойИнформации"/>
						<ПередВыгрузкой>Значение = "Адрес";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Представление</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Представление" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>500</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле1" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; Поле2</Наименование>
						<Порядок>600</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле2" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование> --&gt; Поле3</Наименование>
						<Порядок>700</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле3" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; Поле4</Наименование>
						<Порядок>800</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле4" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование> --&gt; Поле5</Наименование>
						<Порядок>900</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле5" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование> --&gt; Поле6</Наименование>
						<Порядок>1000</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле6" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование> --&gt; Поле7</Наименование>
						<Порядок>1100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле7" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование> --&gt; Поле8</Наименование>
						<Порядок>1200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле8" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>13</Код>
						<Наименование> --&gt; Поле9</Наименование>
						<Порядок>1300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле9" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>14</Код>
						<Наименование> --&gt; Вид</Наименование>
						<Порядок>1400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Вид" Вид="Измерение"/>
						<ПередВыгрузкой>Значение = "00010"; ТипПриемника = "СправочникСсылка.ВидыКонтактнойИнформации";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ФактическийАдресКонтрагента</Код>
				<Наименование>СправочникСсылка.Контрагенты --&gt; РегистрСведенийЗапись.КонтактнаяИнформация</Наименование>
				<Порядок>350</Порядок>
				<ПередВыгрузкой>ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Адрес", Источник.ПочтовыйАдрес);
ПолучитьСтруктуруАдреса();</ПередВыгрузкой>
				<Источник>СправочникСсылка.Контрагенты</Источник>
				<Приемник>РегистрСведенийЗапись.КонтактнаяИнформация</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Объект</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Объект" Вид="Измерение"/>
						<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Тип</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Тип" Вид="Измерение" Тип="ПеречислениеСсылка.ТипыКонтактнойИнформации"/>
						<ПередВыгрузкой>Значение = "Адрес";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Представление</Наименование>
						<Порядок>300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Представление" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле1" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; Поле2</Наименование>
						<Порядок>500</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле2" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; Поле3</Наименование>
						<Порядок>600</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле3" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование> --&gt; Поле4</Наименование>
						<Порядок>700</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле4" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; Поле5</Наименование>
						<Порядок>800</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле5" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование> --&gt; Поле6</Наименование>
						<Порядок>900</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле6" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование> --&gt; Поле7</Наименование>
						<Порядок>1000</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле7" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование> --&gt; Поле8</Наименование>
						<Порядок>1100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле8" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование> --&gt; Поле9</Наименование>
						<Порядок>1200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле9" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>13</Код>
						<Наименование> --&gt; Вид</Наименование>
						<Порядок>1300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Вид" Вид="Измерение"/>
						<ПередВыгрузкой>Значение = "00008"; ТипПриемника = "СправочникСсылка.ВидыКонтактнойИнформации";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ФИОФизЛиц</Код>
				<Наименование>СправочникСсылка.Сотрудники --&gt; РегистрСведенийЗапись.ФИОФизЛиц</Наименование>
				<Порядок>400</Порядок>
				<Источник>СправочникСсылка.Сотрудники</Источник>
				<Приемник>РегистрСведенийЗапись.ФИОФизЛиц</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Параметры.ДатаКонцаПериодаВыгрузки;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; ФизЛицо</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизЛицо" Вид="Измерение"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Фамилия</Наименование>
						<Порядок>300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Фамилия" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Имя</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Имя" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; Отчество</Наименование>
						<Порядок>500</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Отчество" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СведенияОбИнвалидностиФизлиц</Код>
				<Наименование>СправочникСсылка.Сотрудники --&gt; РегистрСведенийЗапись.СведенияОбИнвалидностиФизлиц</Наименование>
				<Порядок>450</Порядок>
				<ПередВыгрузкой>Отказ = ?(Источник.Инвалид.Получить(Параметры.ДатаКонцаПериодаВыгрузки) = 1, 0, 1);</ПередВыгрузкой>
				<Источник>СправочникСсылка.Сотрудники</Источник>
				<Приемник>РегистрСведенийЗапись.СведенияОбИнвалидностиФизлиц</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Параметры.ДатаВводаОстатков;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Физлицо</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Физлицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Инвалидность</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Инвалидность" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Значение = Источник.Инвалид.Получить(Параметры.ДатаКонцаПериодаВыгрузки);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; ДатаВыдачи</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаВыдачи" Вид="Реквизит" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Параметры.ДатаВводаОстатков;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ПаспортныеДанныеФизЛиц</Код>
				<Наименование>СправочникСсылка.Сотрудники --&gt; РегистрСведенийЗапись.ПаспортныеДанныеФизЛиц</Наименование>
				<Порядок>500</Порядок>
				<Источник>СправочникСсылка.Сотрудники</Источник>
				<Приемник>РегистрСведенийЗапись.ПаспортныеДанныеФизЛиц</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Параметры.ДатаКонцаПериодаВыгрузки;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; ФизЛицо</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ВидДокумента --&gt; ДокументВид</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="ВидДокумента" Вид="Реквизит" Тип="СправочникСсылка.ДокументыУдостоверяющиеЛичность"/>
						<Приемник Имя="ДокументВид" Вид="Ресурс" Тип="СправочникСсылка.ДокументыУдостоверяющиеЛичность"/>
						<КодПравилаКонвертации>ДокументыУдостоверяющиеЛичность                   </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>ДокументСерия --&gt; ДокументСерия</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="ДокументСерия" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="ДокументСерия" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>ДокументНомер --&gt; ДокументНомер</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="ДокументНомер" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="ДокументНомер" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>ДокументДатаВыдачи --&gt; ДокументДатаВыдачи</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="ДокументДатаВыдачи" Вид="Реквизит" Тип="Дата"/>
						<Приемник Имя="ДокументДатаВыдачи" Вид="Ресурс" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>ДокументКемВыдан --&gt; ДокументКемВыдан</Наименование>
						<Порядок>700</Порядок>
						<Источник Имя="ДокументКемВыдан" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="ДокументКемВыдан" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СтатусФизЛицКакНалогоплательщиковНДФЛ</Код>
				<Наименование>СправочникСсылка.Сотрудники --&gt; РегистрСведенийЗапись.ГражданствоФизЛиц</Наименование>
				<Порядок>550</Порядок>
				<Источник>СправочникСсылка.Сотрудники</Источник>
				<Приемник>РегистрСведенийЗапись.СтатусФизЛицКакНалогоплательщиковНДФЛ</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Параметры.ДатаКонцаПериодаВыгрузки;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; ФизЛицо</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Статус</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Статус" Вид="Ресурс" Тип="ПеречислениеСсылка.СтатусыНалогоплательщиковПоНДФЛ"/>
						<ПередВыгрузкой>Значение = ?(Источник.Статус.Получить(Параметры.ДатаКонцаПериодаВыгрузки) = 0, "НеРезидент", "Резидент");</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СтатусФизЛицКакНалогоплательщиковНДФЛНачало</Код>
				<Наименование>СправочникСсылка.Сотрудники --&gt; РегистрСведенийЗапись.ГражданствоФизЛиц</Наименование>
				<Порядок>600</Порядок>
				<ПередВыгрузкой>Если НачМесяца(ДатаНачала) = НачМесяца(Параметры.ДатаКонцаПериодаВыгрузки) Тогда
	Отказ = 1;
КонецЕсли;
</ПередВыгрузкой>
				<Источник>СправочникСсылка.Сотрудники</Источник>
				<Приемник>РегистрСведенийЗапись.СтатусФизЛицКакНалогоплательщиковНДФЛ</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = ДатаНачала;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; ФизЛицо</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Статус</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Статус" Вид="Ресурс" Тип="ПеречислениеСсылка.СтатусыНалогоплательщиковПоНДФЛ"/>
						<ПередВыгрузкой>Значение = ?(Источник.Статус.Получить(ДатаНачала) = 0, "НеРезидент", "Резидент");</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ГражданствоФизЛиц</Код>
				<Наименование>СправочникСсылка.Сотрудники --&gt; РегистрСведенийЗапись.ГражданствоФизЛиц</Наименование>
				<Порядок>650</Порядок>
				<Источник>СправочникСсылка.Сотрудники</Источник>
				<Приемник>РегистрСведенийЗапись.ГражданствоФизЛиц</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Параметры.ДатаКонцаПериодаВыгрузки;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; ФизЛицо</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>Страна --&gt; Страна</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="Страна" Вид="Реквизит" Тип="СправочникСсылка.ОКСМ"/>
						<Приемник Имя="Страна" Вид="Ресурс" Тип="СправочникСсылка.КлассификаторСтранМира"/>
						<КодПравилаКонвертации>ОКСМ                                              </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; НеИмеетПравоНаМедицинскоеСтрахование</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НеИмеетПравоНаМедицинскоеСтрахование" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Значение = Источник.НеВзиматьВзносыФОМС.Получить(Параметры.ДатаКонцаПериодаВыгрузки);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; НеИмеетПравоНаПенсию</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НеИмеетПравоНаПенсию" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Значение = Источник.НеВзиматьВзносыПФРиФСС.Получить(Параметры.ДатаКонцаПериодаВыгрузки);</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ГражданствоФизЛицНачало</Код>
				<Наименование>СправочникСсылка.Сотрудники --&gt; РегистрСведенийЗапись.ГражданствоФизЛиц</Наименование>
				<Порядок>700</Порядок>
				<ПередВыгрузкой>Если НачМесяца(ДатаНачала) = НачМесяца(Параметры.ДатаКонцаПериодаВыгрузки) Тогда
	Отказ = 1;
КонецЕсли;
</ПередВыгрузкой>
				<Источник>СправочникСсылка.Сотрудники</Источник>
				<Приемник>РегистрСведенийЗапись.ГражданствоФизЛиц</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = ДатаНачала;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; ФизЛицо</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>Страна --&gt; Страна</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="Страна" Вид="Реквизит" Тип="СправочникСсылка.ОКСМ"/>
						<Приемник Имя="Страна" Вид="Ресурс" Тип="СправочникСсылка.КлассификаторСтранМира"/>
						<КодПравилаКонвертации>ОКСМ                                              </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; НеИмеетПравоНаПенсию</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НеИмеетПравоНаПенсию" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Значение = Источник.НеВзиматьВзносыПФРиФСС.Получить(ДатаНачала);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; НеИмеетПравоНаМедицинскоеСтрахование</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НеИмеетПравоНаМедицинскоеСтрахование" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Значение = Источник.НеВзиматьВзносыФОМС.Получить(ДатаНачала);</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ТелефоныФизЛица</Код>
				<Наименование>СправочникСсылка.Сотрудники --&gt; РегистрСведенийЗапись.КонтактнаяИнформация</Наименование>
				<Порядок>750</Порядок>
				<Источник>СправочникСсылка.Сотрудники</Источник>
				<Приемник>РегистрСведенийЗапись.КонтактнаяИнформация</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Объект</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Объект" Вид="Измерение"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Тип</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Тип" Вид="Измерение" Тип="ПеречислениеСсылка.ТипыКонтактнойИнформации"/>
						<ПередВыгрузкой>Значение = "Телефон";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Представление</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="Телефон" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="Представление" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Поле3</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="Телефон" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="Поле3" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; Вид</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Вид" Вид="Измерение"/>
						<ПередВыгрузкой>Значение = "00007"; ТипПриемника = "СправочникСсылка.ВидыКонтактнойИнформации";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СчетаУчетаОбъектовСтроительства</Код>
				<Наименование> --&gt; РегистрСведенийЗапись.ОбъектыСтроительстваОрганизаций</Наименование>
				<Порядок>800</Порядок>
				<Приемник>РегистрСведенийЗапись.ОбъектыСтроительстваОрганизаций</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; ОбъектСтроительства</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОбъектСтроительства" Вид="Измерение" Тип="СправочникСсылка.ОбъектыСтроительства"/>
						<КодПравилаКонвертации>ОбъектыСтроительства_08_3                         </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; СчетБухгалтерскогоУчета</Наименование>
						<Порядок>300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СчетБухгалтерскогоУчета" Вид="Ресурс" Тип="ПланСчетовСсылка.Хозрасчетный"/>
						<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; СчетБухгалтерскогоУчетаНДС</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СчетБухгалтерскогоУчетаНДС" Вид="Ресурс" Тип="ПланСчетовСсылка.Хозрасчетный"/>
						<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>АдресПоПропискеФизЛица</Код>
				<Наименование>СправочникСсылка.Сотрудники --&gt; РегистрСведенийЗапись.КонтактнаяИнформация</Наименование>
				<Порядок>850</Порядок>
				<ПередВыгрузкой>ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Адрес", Источник.АдресПрописка);
ПолучитьСтруктуруАдреса();</ПередВыгрузкой>
				<Источник>СправочникСсылка.Сотрудники</Источник>
				<Приемник>РегистрСведенийЗапись.КонтактнаяИнформация</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Объект</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Объект" Вид="Измерение"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Тип</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Тип" Вид="Измерение" Тип="ПеречислениеСсылка.ТипыКонтактнойИнформации"/>
						<ПередВыгрузкой>Значение = "Адрес";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Представление</Наименование>
						<Порядок>300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Представление" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле1" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; Поле2</Наименование>
						<Порядок>500</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле2" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; Поле3</Наименование>
						<Порядок>600</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле3" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование> --&gt; Поле4</Наименование>
						<Порядок>700</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле4" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; Поле5</Наименование>
						<Порядок>800</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле5" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование> --&gt; Поле6</Наименование>
						<Порядок>900</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле6" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование> --&gt; Поле7</Наименование>
						<Порядок>1000</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле7" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование> --&gt; Поле8</Наименование>
						<Порядок>1100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле8" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование> --&gt; Поле9</Наименование>
						<Порядок>1200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле9" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>13</Код>
						<Наименование> --&gt; Вид</Наименование>
						<Порядок>1300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Вид" Вид="Измерение"/>
						<ПередВыгрузкой>Значение = "00002"; ТипПриемника = "СправочникСсылка.ВидыКонтактнойИнформации";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ФактическийАдресФизЛица</Код>
				<Наименование>СправочникСсылка.Сотрудники --&gt; РегистрСведенийЗапись.КонтактнаяИнформация</Наименование>
				<Порядок>900</Порядок>
				<ПередВыгрузкой>ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Адрес", Источник.АдресФакт);
ПолучитьСтруктуруАдреса();</ПередВыгрузкой>
				<Источник>СправочникСсылка.Сотрудники</Источник>
				<Приемник>РегистрСведенийЗапись.КонтактнаяИнформация</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Объект</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Объект" Вид="Измерение"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Тип</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Тип" Вид="Измерение" Тип="ПеречислениеСсылка.ТипыКонтактнойИнформации"/>
						<ПередВыгрузкой>Значение = "Адрес";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Представление</Наименование>
						<Порядок>300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Представление" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле1" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; Поле2</Наименование>
						<Порядок>500</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле2" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; Поле3</Наименование>
						<Порядок>600</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле3" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование> --&gt; Поле4</Наименование>
						<Порядок>700</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле4" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; Поле5</Наименование>
						<Порядок>800</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле5" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование> --&gt; Поле6</Наименование>
						<Порядок>900</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле6" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование> --&gt; Поле7</Наименование>
						<Порядок>1000</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле7" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование> --&gt; Поле8</Наименование>
						<Порядок>1100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле8" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование> --&gt; Поле9</Наименование>
						<Порядок>1200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле9" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>13</Код>
						<Наименование> --&gt; Вид</Наименование>
						<Порядок>1300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Вид" Вид="Измерение"/>
						<ПередВыгрузкой>Значение = "00003"; ТипПриемника = "СправочникСсылка.ВидыКонтактнойИнформации";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>НДФЛДоходыПредыдущегоМестаРаботы</Код>
				<Наименование>СправочникСсылка.Сотрудники --&gt; РегистрСведенийЗапись.НДФЛДоходыПредыдущегоМестаРаботы</Наименование>
				<Порядок>950</Порядок>
				<ПередВыгрузкой>Если Источник.ВаловойДоход_СНачалаГода = 0 Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
				<Источник>СправочникСсылка.Сотрудники</Источник>
				<Приемник>РегистрСведенийЗапись.НДФЛДоходыПредыдущегоМестаРаботы</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; МесяцНалоговогоПериода</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="МесяцНалоговогоПериода" Вид="Измерение" Тип="Дата"/>
						<ПередВыгрузкой>Значение = НачМесяца(ДобавитьМесяц(Источник.ДатаПриема, -1));</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; ФизЛицо</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Размер</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="ВаловойДоход_СНачалаГода" Вид="Реквизит" Тип="Число"/>
						<Приемник Имя="Размер" Вид="Ресурс" Тип="Число"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>НДФЛПрименениеВычетов</Код>
				<Наименование>СправочникСсылка.Сотрудники --&gt; РегистрСведенийЗапись.НДФЛПрименениеВычетов</Наименование>
				<Порядок>1000</Порядок>
				<Источник>СправочникСсылка.Сотрудники</Источник>
				<Приемник>РегистрСведенийЗапись.НДФЛПрименениеВычетов</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Физлицо</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Физлицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Ресурс" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>НДФЛСтандартныеВычетыФизлиц</Код>
				<Наименование>СправочникСсылка.Сотрудники --&gt; РегистрСведенийЗапись.НДФЛСтандартныеВычетыФизлиц</Наименование>
				<Порядок>1050</Порядок>
				<Источник>СправочникСсылка.ВычетыСотрудниковПоНДФЛ</Источник>
				<Приемник>РегистрСведенийЗапись.НДФЛСтандартныеВычетыФизлиц</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Физлицо</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Физлицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; КодВычетаЛичный</Наименование>
						<Порядок>300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодВычетаЛичный" Вид="Ресурс" Тип="СправочникСсылка.ВычетыНДФЛ"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>НДФЛСтандартныеВычетыНаДетей</Код>
				<Наименование>СправочникСсылка.Сотрудники --&gt; РегистрСведенийЗапись.НДФЛСтандартныеВычетыФизлиц</Наименование>
				<Порядок>1100</Порядок>
				<Источник>СправочникСсылка.ВычетыСотрудниковПоНДФЛ</Источник>
				<Приемник>РегистрСведенийЗапись.НДФЛСтандартныеВычетыНаДетей</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; ПериодЗавершения</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодЗавершения" Вид="Ресурс" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Физлицо</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Физлицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; КодВычета</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодВычета" Вид="Измерение" Тип="СправочникСсылка.ВычетыНДФЛ"/>
						<КодПравилаКонвертации>ВычетыНаРебенка                                   </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; КоличествоДетей</Наименование>
						<Порядок>250</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КоличествоДетей" Вид="Ресурс" Тип="Число"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>НДФЛСтандартныеВычетыНаДетейИнвалидов</Код>
				<Наименование>СправочникСсылка.Сотрудники --&gt; РегистрСведенийЗапись.НДФЛСтандартныеВычетыФизлиц</Наименование>
				<Порядок>1150</Порядок>
				<Источник>СправочникСсылка.Сотрудники</Источник>
				<Приемник>РегистрСведенийЗапись.НДФЛСтандартныеВычетыНаДетей</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Физлицо</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Физлицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; КодВычета</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодВычета" Вид="Измерение" Тип="СправочникСсылка.ВычетыНДФЛ"/>
						<КодПравилаКонвертации>ВычетыНаРебенкаИнвалида                           </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник.РазмерВычетаНаРебенкаИнвалида.Получить(ВходящиеДанные.Получить("Период"));</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; КоличествоДетей</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КоличествоДетей" Вид="Ресурс" Тип="Число"/>
						<ПередВыгрузкой>Значение = Источник.ДетиИнвалиды.Получить(ВходящиеДанные.Получить("Период"));</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>УчетнаяПолитикаБухгалтерскийУчет</Код>
				<Наименование> --&gt; РегистрСведенийЗапись.УчетнаяПолитикаБухгалтерскийУчет</Наименование>
				<Порядок>1200</Порядок>
				<Приемник>РегистрСведенийЗапись.УчетнаяПолитикаОрганизаций</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; СпособОценкиМПЗ</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособОценкиМПЗ" Вид="Ресурс" Тип="ПеречислениеСсылка.СпособыОценки"/>
						<ПередВыгрузкой>Значение = "ПоСредней";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; ДиректКостинг</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДиректКостинг" Вид="Ресурс" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; СпособОценкиТоваровВРознице</Наименование>
						<Порядок>500</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособОценкиТоваровВРознице" Вид="Ресурс" Тип="ПеречислениеСсылка.СпособыОценкиТоваровВРознице"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; СпособУчетаВыпускаГотовойПродукции</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособУчетаВыпускаГотовойПродукции" Вид="Ресурс" Тип="ПеречислениеСсылка.СпособыУчетаВыпускаГотовойПродукции"/>
						<ПередВыгрузкой>Значение = "БезИспользованияСчета40";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование> --&gt; ПоддержкаПБУ18</Наименование>
						<Порядок>700</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПоддержкаПБУ18" Вид="Ресурс" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; СпособРасчетаСебестоимостиПроизводства</Наименование>
						<Порядок>800</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособРасчетаСебестоимостиПроизводства" Вид="Ресурс" Тип="ПеречислениеСсылка.СпособыРасчетаСебестоимостиПродукции"/>
						<ПередВыгрузкой>Значение = "ПоПодразделениям";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование> --&gt; БазаРаспределенияКосвенныхРасходовПоВидамДеятельности</Наименование>
						<Порядок>900</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="БазаРаспределенияКосвенныхРасходовПоВидамДеятельности" Вид="Ресурс" Тип="ПеречислениеСсылка.БазыРаспределенияКосвенныхРасходовПоВидамДеятельности"/>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование> --&gt; ВариантУчетаРасходовПоАмортизационнойПремии</Наименование>
						<Порядок>1000</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВариантУчетаРасходовПоАмортизационнойПремии" Вид="Ресурс" Тип="ПеречислениеСсылка.ВариантыУчетаРасходовПоАмортизационнойПремии"/>
						<ПередВыгрузкой>Значение = "НаСчетахРасходовПоАмортизации";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование> --&gt; ВариантУчетаРасходовПоНалогамСФОТВНалоговомУчете</Наименование>
						<Порядок>1100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВариантУчетаРасходовПоНалогамСФОТВНалоговомУчете" Вид="Ресурс" Тип="ПеречислениеСсылка.ВариантыУчетаРасходовПоНалогамСФОТВНалоговомУчете"/>
						<ПередВыгрузкой>Значение = "НаСчетахРасходовНаОплатуТруда";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>14</Код>
						<Наименование> --&gt; МоментОпределенияНалоговойБазыНДС</Наименование>
						<Порядок>1400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="МоментОпределенияНалоговойБазыНДС" Вид="Ресурс" Тип="ПеречислениеСсылка.МоментыОпределенияНалоговойБазыНДС"/>
					</Свойство>
					<Свойство>
						<Код>15</Код>
						<Наименование> --&gt; НачислятьНДСПоОтгрузке</Наименование>
						<Порядок>1500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НачислятьНДСПоОтгрузке" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>18</Код>
						<Наименование> --&gt; НДСПриНеподтвержденииСверху</Наименование>
						<Порядок>1800</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НДСПриНеподтвержденииСверху" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>20</Код>
						<Наименование> --&gt; ОрганизацияЯвляетсяПлательщикомЕНВД</Наименование>
						<Порядок>2000</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОрганизацияЯвляетсяПлательщикомЕНВД" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Значение = ?(Константа.ОрганизацияЯвляетсяПлательщикомЕНВД = Да, 1, 0);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>21</Код>
						<Наименование> --&gt; ОсобенностиИсчисленияНДФЛ</Наименование>
						<Порядок>2100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОсобенностиИсчисленияНДФЛ" Вид="Ресурс" Тип="ПеречислениеСсылка.ОсобенностиИсчисленияНДФЛ"/>
					</Свойство>
					<Свойство>
						<Код>22</Код>
						<Наименование> --&gt; ПорядокРаспределенияРасходовНаОказаниеВнутреннихУслуг</Наименование>
						<Порядок>2200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПорядокРаспределенияРасходовНаОказаниеВнутреннихУслуг" Вид="Ресурс" Тип="ПеречислениеСсылка.ПорядокРаспределенияРасходовНаОказаниеВнутреннихУслуг"/>
						<ПередВыгрузкой>Значение = "ПоПлановымЦенам";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>23</Код>
						<Наименование> --&gt; ПорядокРаспределенияРасходовНаОказаниеУслуг</Наименование>
						<Порядок>2300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПорядокРаспределенияРасходовНаОказаниеУслуг" Вид="Ресурс" Тип="ПеречислениеСсылка.ПорядокРаспределенияРасходовНаОказаниеУслуг"/>
						<ПередВыгрузкой>Значение = "ПоПлановымЦенам";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>24</Код>
						<Наименование> --&gt; РозничнаяТорговляОблагаетсяЕНВД</Наименование>
						<Порядок>2400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РозничнаяТорговляОблагаетсяЕНВД" Вид="Ресурс" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>25</Код>
						<Наименование> --&gt; СистемаНалогообложения</Наименование>
						<Порядок>2500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СистемаНалогообложения" Вид="Ресурс" Тип="ПеречислениеСсылка.СистемыНалогообложения"/>
						<ПередВыгрузкой>Значение = "Общая";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>26</Код>
						<Наименование> --&gt; СложныйУчетНДС</Наименование>
						<Порядок>2600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СложныйУчетНДС" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>27</Код>
						<Наименование> --&gt; СпособОтраженияВБухгалтерскомУчетеВключенияНДСВСтоимость</Наименование>
						<Порядок>2700</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособОтраженияВБухгалтерскомУчетеВключенияНДСВСтоимость" Вид="Ресурс" Тип="ПеречислениеСсылка.НДССпособОтраженияВБухгалтерскомУчетеПриВключенииВСтоимость"/>
						<ПередВыгрузкой>Значение = "ВСоответствииСоСт170НКРФ";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>28</Код>
						<Наименование> --&gt; СпособОценкиМПЗНУ</Наименование>
						<Порядок>2800</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособОценкиМПЗНУ" Вид="Ресурс" Тип="ПеречислениеСсылка.СпособыОценки"/>
						<ПередВыгрузкой>Значение = "ПоСредней";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>31</Код>
						<Наименование> --&gt; УчитыватьПоложительныеСуммовыеРазницыПриНачисленииНДС</Наименование>
						<Порядок>3100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="УчитыватьПоложительныеСуммовыеРазницыПриНачисленииНДС" Вид="Ресурс" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>33</Код>
						<Наименование> --&gt; ФормироватьСчетФактуруПоУЕвРублях</Наименование>
						<Порядок>3300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФормироватьСчетФактуруПоУЕвРублях" Вид="Ресурс" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>34</Код>
						<Наименование> --&gt; УпрощенныйУчетНДС</Наименование>
						<Порядок>3350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="УпрощенныйУчетНДС" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>35</Код>
						<Наименование> --&gt; МетодНачисленияАмортизацииНУ</Наименование>
						<Порядок>3400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="МетодНачисленияАмортизацииНУ" Вид="Ресурс" Тип="ПеречислениеСсылка.МетодыНачисленияАмортизации"/>
					</Свойство>
					<Свойство>
						<Код>36</Код>
						<Наименование> --&gt; ВидТарифаСтраховыхВзносов</Наименование>
						<Порядок>3450</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидТарифаСтраховыхВзносов" Вид="Ресурс" Тип="ПеречислениеСсылка.ТарифыСтраховыхВзносов"/>
						<КодПравилаКонвертации>ТарифыСтраховыхВзносов                            </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>37</Код>
						<Наименование> --&gt; УчитыватьРасходыНУАналогичноБУ</Наименование>
						<Порядок>3500</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="УчитыватьРасходыНУАналогичноБУ" Вид="Ресурс" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>38</Код>
						<Наименование> --&gt; НачислятьНДСПриПередачеНедвижимости</Наименование>
						<Порядок>3550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НачислятьНДСПриПередачеНедвижимости" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Если ДатаГод(ВходящиеДанные.Получить("Период")) &gt; 2010 Тогда
	Значение = 1;
Иначе
	Значение = 0;
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>УчетнаяПолитикаПоПерсоналу</Код>
				<Наименование> --&gt; РегистрСведенийЗапись.УчетнаяПолитикаПоПерсоналу</Наименование>
				<Порядок>1250</Порядок>
				<Приемник>РегистрСведенийЗапись.УчетнаяПолитикаПоПерсоналу</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; УпрощенныйУчетНДФЛ</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="УпрощенныйУчетНДФЛ" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ОтветственныеЛицаОрганизаций</Код>
				<Наименование>: </Наименование>
				<Порядок>1300</Порядок>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.ОтветственныеЛицаОрганизаций</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = НачГода(Параметры.ДатаКонцаПериодаВыгрузки)-1;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Должность</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Должность" Вид="Ресурс" Тип="СправочникСсылка.ДолжностиОрганизаций"/>
						<КодПравилаКонвертации>ДолжностиОрганизаций                              </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; ОтветственноеЛицо</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтветственноеЛицо" Вид="Измерение" Тип="ПеречислениеСсылка.ОтветственныеЛицаОрганизаций"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; ФизическоеЛицо</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизическоеЛицо" Вид="Ресурс" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; СтруктурнаяЕдиница</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СтруктурнаяЕдиница" Вид="Измерение"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
		<Группа>
			<Код>Операции</Код>
			<Наименование>Операции</Наименование>
			<Порядок>400</Порядок>
			<Правило>
				<Код>ОперацияБух</Код>
				<Наименование> --&gt; ДокументСсылка.ОперацияБух</Наименование>
				<Порядок>100</Порядок>
				<ПередВыгрузкой>Если (ПустоеЗначение(ВходящиеДанные.Получить("Хозрасчетный")) = 1) и (ПустоеЗначение(ВходящиеДанные.Получить("Налоговый")) = 1) Тогда
	Отказ = 1;
	
ИначеЕсли (ПустоеЗначение(ВходящиеДанные.Получить("Хозрасчетный")) = 1) и (ПустоеЗначение(ВходящиеДанные.Получить("Налоговый")) = 0) Тогда
	Если ВходящиеДанные.Получить("Налоговый").КоличествоСтрок() = 0 Тогда
		Отказ = 1;
	КонецЕсли;
	
ИначеЕсли (ПустоеЗначение(ВходящиеДанные.Получить("Хозрасчетный")) = 0) и (ПустоеЗначение(ВходящиеДанные.Получить("Налоговый")) = 1) Тогда
	Если ВходящиеДанные.Получить("Хозрасчетный").КоличествоСтрок() = 0 Тогда
		Отказ = 1;
	КонецЕсли;
	
Иначе
	Если (ВходящиеДанные.Получить("Хозрасчетный").КоличествоСтрок() = 0) и (ВходящиеДанные.Получить("Налоговый").КоличествоСтрок() = 0) Тогда
		Отказ = 1;
	КонецЕсли;
	
КонецЕсли;</ПередВыгрузкой>
				<ПослеЗагрузки>Для каждого Корреспонденция из Объект.Движения.Хозрасчетный Цикл
	Для каждого Субконто из Корреспонденция.СубконтоДт Цикл
		Ок = Ложь;
		Для каждого ВидыСубконто из Корреспонденция.СчетДт.ВидыСубконто Цикл
			Если ВидыСубконто.ВидСубконто = Субконто.Ключ Тогда
				Ок = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если не Ок Тогда
			Корреспонденция.СубконтоДт.Удалить(Субконто.Ключ);
		КонецЕсли;
	КонецЦикла;
	
	Для каждого Субконто из Корреспонденция.СубконтоКт Цикл
		Ок = Ложь;
		Для каждого ВидыСубконто из Корреспонденция.СчетКт.ВидыСубконто Цикл
			Если ВидыСубконто.ВидСубконто = Субконто.Ключ Тогда
				Ок = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если не Ок Тогда
			Корреспонденция.СубконтоКт.Удалить(Субконто.Ключ);
		КонецЕсли;
	КонецЦикла;
КонецЦикла;</ПослеЗагрузки>
				<Приемник>ДокументСсылка.ОперацияБух</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>19</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>20</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>21</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>22</Код>
						<Наименование> --&gt; Содержание</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Содержание" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные.Получить("Хозрасчетный")) = 1 Тогда
	РегистрБух = " (налоговый учет)";
	
Иначе
	РегистрБух = " (бухгалтерский учет)";
КонецЕсли;	
	
Счет = ВходящиеДанные.Получить("Счет");
Значение = "Итоги по счету " + Счет + РегистрБух;

Счет = ?(ТипЗначения(Счет) = 2, Счет, Счет.Код);</ПередВыгрузкой>
					</Свойство>
					<Группа>
						<Код>1</Код>
						<Наименование> --&gt; Хозрасчетный</Наименование>
						<Порядок>500</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Хозрасчетный" Вид="НаборДвиженийРегистраБухгалтерии"/>
						<ПередОбработкойВыгрузки>Если (ПустоеЗначение(ВходящиеДанные.Получить("Хозрасчетный")) = 1)
	И (ПустоеЗначение(ВходящиеДанные.Получить("Налоговый")) = 1) Тогда
	Отказ = 1;
Иначе
	
	Если ПустоеЗначение(ВходящиеДанные.Получить("Хозрасчетный")) = 0 Тогда
		КоллекцияОбъектов = ВходящиеДанные.Получить("Хозрасчетный");
		КоллекцияОбъектов.НоваяКолонка("СуммаНУДт", "Число");
		КоллекцияОбъектов.НоваяКолонка("СуммаПРДт", "Число");
		КоллекцияОбъектов.НоваяКолонка("СуммаВРДт", "Число");
		КоллекцияОбъектов.НоваяКолонка("СуммаНУКт", "Число");
		КоллекцияОбъектов.НоваяКолонка("СуммаПРКт", "Число");
		КоллекцияОбъектов.НоваяКолонка("СуммаВРКт", "Число");
	Иначе
		КоллекцияОбъектов = ВходящиеДанные.Получить("Налоговый");
	КонецЕсли;
	
КонецЕсли;</ПередОбработкойВыгрузки>
						<ПередВыгрузкой>//---------------Данные НУ

Если ПустоеЗначение(ВходящиеДанные.Получить("Налоговый")) = 0 Тогда
	
	ЗабДт = 0;
	ЗабКт = 0;
	Если (ПустоеЗначение(ОбъектКоллекции.СчетДт) = 0) Тогда
		Если (Лев(ОбъектКоллекции.СчетДт.Код,2) = "МЦ")
			ИЛИ (Лев(ОбъектКоллекции.СчетДт.Код,3) = "004") 
			ИЛИ (ОбъектКоллекции.СчетДт.Код = "Н05.КВ") Тогда
			ЗабДт = 1;
		КонецЕсли;
	КонецЕсли;
	
	Если (ПустоеЗначение(ОбъектКоллекции.СчетКт) = 0) Тогда
		Если (Лев(ОбъектКоллекции.СчетКт.Код,2) = "МЦ") 
			ИЛИ (Лев(ОбъектКоллекции.СчетКт.Код,3) = "004")
			ИЛИ (ОбъектКоллекции.СчетКт.Код = "Н05.КВ") Тогда
			ЗабКт = 1;
		КонецЕсли;
	КонецЕсли;
	
	ОбнулятьСуммуНУ = 1;
	//когда нет корреспонденции сумму можно обнулить
	Если  ((ПустоеЗначение(ОбъектКоллекции.СчетДт) = 0)
		И (ОбъектКоллекции.СчетДт &lt;&gt; СчетПоКоду("00")))
		И ((ПустоеЗначение(ОбъектКоллекции.СчетКт) = 0)
		И (ОбъектКоллекции.СчетКт &lt;&gt; СчетПоКоду("00"))) Тогда
		ОбнулятьСуммуНУ = 0;	
	КонецЕсли; 	
	
	ОбнулитьСумму = 0;
		
	Если (ПустоеЗначение(ОбъектКоллекции.СчетДт) = 0)
		И (ОбъектКоллекции.СчетДт &lt;&gt; СчетПоКоду("00")) Тогда
		Если ОбъектКоллекции.ВидУчетаДт = "НУ" Тогда
			ОбъектКоллекции.СуммаНУДт = ОбъектКоллекции.Сумма;
			ОбнулитьСумму = 1;			
		ИначеЕсли ОбъектКоллекции.ВидУчетаДт = "ПР" Тогда
			ОбъектКоллекции.СуммаПРДт = ОбъектКоллекции.Сумма;
			ОбнулитьСумму = 1;
		ИначеЕсли ОбъектКоллекции.ВидУчетаДт = "ВР" Тогда
			ОбъектКоллекции.СуммаВРДт = ОбъектКоллекции.Сумма;
			ОбнулитьСумму = 1;
		КонецЕсли;
		
	Иначе
		ОбъектКоллекции.СчетДт = СчетПоКоду("00");
		ОбъектКоллекции.КодСчетаДт = "";
	КонецЕсли;
	
	Если (ОбнулитьСумму = 1) И (ОбнулятьСуммуНУ = 1) Тогда
		ОбъектКоллекции.Сумма = 0;
	КонецЕсли;
	
	Если (ПустоеЗначение(ОбъектКоллекции.СчетКт) = 0)
		И (ОбъектКоллекции.СчетКт &lt;&gt; СчетПоКоду("00")) Тогда
		Если ОбъектКоллекции.ВидУчетаКт = "НУ" Тогда
			ОбъектКоллекции.СуммаНУКт = ОбъектКоллекции.Сумма;
			ОбнулитьСумму = 1;
		ИначеЕсли ОбъектКоллекции.ВидУчетаКт = "ПР" Тогда
			ОбъектКоллекции.СуммаПРКт = ОбъектКоллекции.Сумма;
			ОбнулитьСумму = 1;
		ИначеЕсли ОбъектКоллекции.ВидУчетаКт = "ВР" Тогда
			ОбъектКоллекции.СуммаВРКт = ОбъектКоллекции.Сумма;
			ОбнулитьСумму = 1;
		КонецЕсли;
		
	Иначе
		ОбъектКоллекции.СчетКт = СчетПоКоду("00");
		ОбъектКоллекции.КодСчетаКт = "";
	КонецЕсли;
	
	Если ОбнулитьСумму = 1 Тогда
		ОбъектКоллекции.Сумма = 0;
	КонецЕсли;
	
	Если (ЗабДт = 1) И (ЗабКт = 0) Тогда
		ОбъектКоллекции.СчетКт = "";
		ОбъектКоллекции.КодСчетаКт = "";
	КонецЕсли;
	Если (ЗабКт = 1) И (ЗабДт = 0) Тогда
		ОбъектКоллекции.СчетДт = "";
		ОбъектКоллекции.КодСчетаДт = "";
	КонецЕсли;
	
	//Обнулим количество НУ
	ОбъектКоллекции.КоличествоДт = 0;
	ОбъектКоллекции.КоличествоКт = 0;

КонецЕсли;

//***************************************
СчетДт = ?(ПустоеЗначение(ОбъектКоллекции.КодСчетаДт) = 1, ОбъектКоллекции.СчетДт, ОбъектКоллекции.КодСчетаДт);
СчетКт = ?(ПустоеЗначение(ОбъектКоллекции.КодСчетаКт) = 1, ОбъектКоллекции.СчетКт, ОбъектКоллекции.КодСчетаКт);

СчетДтЗабалансовый = 0;
СчетКтЗабалансовый = 0;
		
Если (ПустоеЗначение(СчетДт) = 1) и (ПустоеЗначение(СчетКт) = 1) Тогда
	Сообщить("Попытка выгрузки проводки без указания счетов дебета и кредита. Проводка не выгружена.");
	Отказ = 1;
			
Иначе
			
	Если ТипЗначенияСтр(СчетДт) = "Счет" Тогда
		СчетДтЗабалансовый = ОбъектКоллекции.СчетДт.Забалансовый;
		СчетДт = мТаблицаПравилКонвертацииОбъектов.ПолучитьЗначение(НайтиПравило(СчетДт, "Хозрасчетный"), "Значения").Получить(Строка(СчетДт));
				
	Иначе
		СчетДтЗабалансовый = 1;
	КонецЕсли;
			
	Если ТипЗначенияСтр(СчетКт) = "Счет" Тогда
		СчетКтЗабалансовый = ОбъектКоллекции.СчетКт.Забалансовый;
		СчетКт = мТаблицаПравилКонвертацииОбъектов.ПолучитьЗначение(НайтиПравило(СчетКт, "Хозрасчетный"), "Значения").Получить(Строка(СчетКт));
				
	Иначе
		СчетКтЗабалансовый = 1;
	КонецЕсли;
			
	Если (ПустоеЗначение(СчетДт) = 1) и (СчетКтЗабалансовый = 0) Тогда
		Сообщить("При попытке выгрузки проводки по кредиту счета " + СокрЛП(СчетКт) + " не удалось определить счет дебета. Проводка не выгружена.");
		Отказ = 1;
				
	ИначеЕсли (ПустоеЗначение(СчетКт) = 1) и (СчетДтЗабалансовый = 0) Тогда
		Сообщить("При попытке выгрузки проводки по дебету счета " + СокрЛП(СчетДт) + " не удалось определить счет кредита. Проводка не выгружена.");
		Отказ = 1;
	КонецЕсли;
КонецЕсли;

//Для отдельных счетов всегда отражаем в НУ
Если Отказ &lt;&gt; 1 Тогда
	Если (СчетДтЗабалансовый &lt;&gt; 1) Тогда
		Если  (ОбъектКоллекции.СчетДт = СчетПоКоду("70")) ИЛИ  (ОбъектКоллекции.СчетДт = СчетПоКоду("71.1")) ИЛИ  (ОбъектКоллекции.СчетДт = СчетПоКоду("71.11")) ИЛИ  (ОбъектКоллекции.СчетДт = СчетПоКоду("73")) Тогда
			ОбъектКоллекции.СуммаНУДт = ОбъектКоллекции.Сумма;					
		КонецЕсли;		
	КонецЕсли;
	Если (СчетКтЗабалансовый &lt;&gt; 1) Тогда
		Если (ОбъектКоллекции.СчетКт = СчетПоКоду("70")) ИЛИ  (ОбъектКоллекции.СчетКт = СчетПоКоду("71.1")) ИЛИ  (ОбъектКоллекции.СчетКт = СчетПоКоду("71.11")) ИЛИ (ОбъектКоллекции.СчетКт = СчетПоКоду("73")) Тогда
			ОбъектКоллекции.СуммаНУКт = ОбъектКоллекции.Сумма;			
		КонецЕсли;		
	КонецЕсли;
	Если (СчетДтЗабалансовый = 1) Тогда
		Если  (ОбъектКоллекции.СчетДт = СчетПоКоду("ВАЛ.60")) ИЛИ  (ОбъектКоллекции.СчетДт = СчетПоКоду("ВАЛ.62")) ИЛИ  (ОбъектКоллекции.СчетДт = СчетПоКоду("УЕ.60")) ИЛИ  (ОбъектКоллекции.СчетДт = СчетПоКоду("УЕ.62")) Тогда
			ОбъектКоллекции.СуммаНУДт = ОбъектКоллекции.Сумма;					
			ОбъектКоллекции.Сумма = 0;
			ОбъектКоллекции.ВалютнаяСуммаДт = 0;
			ОбъектКоллекции.СчетКт = СчетПоКоду("00");
		КонецЕсли;		
	КонецЕсли;
	Если (СчетКтЗабалансовый = 1) Тогда
		Если (ОбъектКоллекции.СчетКт = СчетПоКоду("ВАЛ.60")) ИЛИ  (ОбъектКоллекции.СчетКт = СчетПоКоду("ВАЛ.62")) ИЛИ  (ОбъектКоллекции.СчетКт = СчетПоКоду("УЕ.60")) ИЛИ (ОбъектКоллекции.СчетКт = СчетПоКоду("УЕ.62")) Тогда
			ОбъектКоллекции.СуммаНУКт = ОбъектКоллекции.Сумма;
			ОбъектКоллекции.Сумма = 0;
			ОбъектКоллекции.ВалютнаяСуммаКт = 0;
			ОбъектКоллекции.СчетДт = СчетПоКоду("00");
		КонецЕсли;		
	КонецЕсли;
КонецЕсли;
</ПередВыгрузкой>
						<Свойство>
							<Код>4</Код>
							<Наименование> --&gt; Период</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
							<ПередВыгрузкой>Значение = ВходящиеДанные.Получить("Дата");</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование> --&gt; СчетДт</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетДт" Вид="Свойство" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<ПередВыгрузкой>Если ТипЗначенияСтр(ВходящиеДанные) &lt;&gt; "СписокЗначений" Тогда
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
КонецЕсли;

ВходящиеДанные.Установить("КодСчета", ОбъектКоллекции.КодСчетаДт);

Параметры.ПараметрыАлгоритмов.Установить("Счет", ОбъектКоллекции.СчетДт);
Если ПустоеЗначение(ОбъектКоллекции.СубконтоДт) = 0 Тогда
	Если ОбъектКоллекции.СубконтоДт.КоличествоСтрок() &gt; 0 Тогда
		Параметры.ПараметрыАлгоритмов.Установить("Субконто1", ОбъектКоллекции.СубконтоДт.ПолучитьЗначение(1, "Значение"));
	КонецЕсли;

	Если ОбъектКоллекции.СубконтоДт.КоличествоСтрок() &gt; 1 Тогда
		Параметры.ПараметрыАлгоритмов.Установить("Субконто2", ОбъектКоллекции.СубконтоДт.ПолучитьЗначение(2, "Значение"));
	КонецЕсли;

	Если ОбъектКоллекции.СубконтоДт.КоличествоСтрок() &gt; 2 Тогда
		Параметры.ПараметрыАлгоритмов.Установить("Субконто3", ОбъектКоллекции.СубконтоДт.ПолучитьЗначение(3, "Значение"));
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
							<ПриВыгрузке>Если ПустоеЗначение(ОбъектКоллекции.КодСчетаДт) = 0 Тогда
	ИмяПКО = "";
	Значение = ОбъектКоллекции.КодСчетаДт;
	
Иначе

	ИмяПКО = "Хозрасчетный";
КонецЕсли;</ПриВыгрузке>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; СубконтоДт</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СубконтоДт" Вид="ВидыСубконтоСчета"/>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.СубконтоДт) = 0 Тогда
	
	ИмяПКОВидСубконто = "ВидыСубконтоХозрасчетные";
	
	Если ПустоеЗначение(ОбъектКоллекции.СчетДт) = 0 Тогда
		Счет = ОбъектКоллекции.СчетДт;
		Если (Счет.ПринадлежитГруппе(СчетПоКоду("60")) = 1) или 
			(Счет.ПринадлежитГруппе(СчетПоКоду("62")) = 1) или 
			(Счет = СчетПоКоду("76.5")) или
			(Счет = СчетПоКоду("76.6")) или
			(Счет = СчетПоКоду("76.55")) Тогда
			
			Если ОбъектКоллекции.СубконтоДт.КоличествоСтрок() = 2 Тогда
				ОбъектКоллекции.СубконтоДт.НоваяСтрока();
				ОбъектКоллекции.СубконтоДт.Ключ = ПолучитьПустоеЗначение();
				ОбъектКоллекции.СубконтоДт.Значение = ОбъектКоллекции.СубконтоДт.ПолучитьЗначение(2, "Значение");
			КонецЕсли;
		КонецЕсли;
		
		//**************
		Если (Счет.ПринадлежитГруппе(СчетПоКоду("10.11")) = 1) 
			ИЛИ  (Счет.ПринадлежитГруппе(СчетПоКоду("МЦ")) = 1) Тогда
			Для НомерСтроки = 1 По ОбъектКоллекции.СубконтоДт.КоличествоСтрок() Цикл
				ТекЗнач = ОбъектКоллекции.СубконтоДт.ПолучитьЗначение(НомерСтроки, "Значение");
				Если ТипЗначенияСтр(ТекЗнач) = "Справочник" Тогда
					Если ТекЗнач.Вид() = "НазначенияИспользования" Тогда
						Отказ = 1;
						Прервать;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
							<ПриВыгрузке>Параметры.ПараметрыАлгоритмов.Установить("Счет", ОбъектКоллекции.СчетДт);
Если ПустоеЗначение(ОбъектКоллекции.СубконтоДт) = 0 Тогда
	Если ОбъектКоллекции.СубконтоДт.КоличествоСтрок() &gt; 1 Тогда
		Параметры.ПараметрыАлгоритмов.Установить("Субконто1", ОбъектКоллекции.СубконтоДт.ПолучитьЗначение(1, "Значение"));
	КонецЕсли;

	Если ОбъектКоллекции.СубконтоДт.КоличествоСтрок() &gt; 2 Тогда
		Параметры.ПараметрыАлгоритмов.Установить("Субконто2", ОбъектКоллекции.СубконтоДт.ПолучитьЗначение(2, "Значение"));
	КонецЕсли;

	Если ОбъектКоллекции.СубконтоДт.КоличествоСтрок() &gt; 3 Тогда
		Параметры.ПараметрыАлгоритмов.Установить("Субконто3", ОбъектКоллекции.СубконтоДт.ПолучитьЗначение(3, "Значение"));
	КонецЕсли;
КонецЕсли;

НомерСубконто = ОбъектКоллекции.СубконтоДт.НомерСтроки;
Для Сч = 1 по 3 Цикл
	Если ОбъектКоллекции.СчетДт.ВидСубконто(Сч) = ОбъектКоллекции.СубконтоДт.Ключ Тогда
		НомерСубконто = Сч;
		Прервать;
	КонецЕсли;
КонецЦикла;

Параметры.ПараметрыАлгоритмов.Установить("НомерСубконто", НомерСубконто);
Параметры.ПараметрыАлгоритмов.Установить("Субконто", ОбъектКоллекции.СубконтоДт.Значение);
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 1);
ПриВыгрузкеСубконто();</ПриВыгрузке>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; СчетКт</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетКт" Вид="Свойство" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<ПередВыгрузкой>Если ТипЗначенияСтр(ВходящиеДанные) &lt;&gt; "СписокЗначений" Тогда
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
КонецЕсли;

ВходящиеДанные.Установить("КодСчета", ОбъектКоллекции.КодСчетаКт);

Параметры.ПараметрыАлгоритмов.Установить("Счет", ОбъектКоллекции.СчетКт);
Если ПустоеЗначение(ОбъектКоллекции.СубконтоКт) = 0 Тогда
	Если ОбъектКоллекции.СубконтоКт.КоличествоСтрок() &gt; 0 Тогда
		Параметры.ПараметрыАлгоритмов.Установить("Субконто1", ОбъектКоллекции.СубконтоКт.ПолучитьЗначение(1, "Значение"));
	КонецЕсли;

	Если ОбъектКоллекции.СубконтоКт.КоличествоСтрок() &gt; 1 Тогда
		Параметры.ПараметрыАлгоритмов.Установить("Субконто2", ОбъектКоллекции.СубконтоКт.ПолучитьЗначение(2, "Значение"));
	КонецЕсли;

	Если ОбъектКоллекции.СубконтоКт.КоличествоСтрок() &gt; 2 Тогда
		Параметры.ПараметрыАлгоритмов.Установить("Субконто3", ОбъектКоллекции.СубконтоКт.ПолучитьЗначение(3, "Значение"));
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
							<ПриВыгрузке>Если ПустоеЗначение(ОбъектКоллекции.КодСчетаКт) = 0 Тогда
	ИмяПКО = "";
	Значение = ОбъектКоллекции.КодСчетаКт;
	
Иначе
	
	ИмяПКО = "Хозрасчетный";
КонецЕсли;</ПриВыгрузке>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование> --&gt; СубконтоКт</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СубконтоКт" Вид="ВидыСубконтоСчета"/>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.СубконтоКт) = 0 Тогда
	
	ИмяПКОВидСубконто = "ВидыСубконтоХозрасчетные";
	
	Если ПустоеЗначение(ОбъектКоллекции.СчетКт) = 0 Тогда
		Счет = ОбъектКоллекции.СчетКт;
		Если (Счет.ПринадлежитГруппе(СчетПоКоду("60")) = 1) или 
			(Счет.ПринадлежитГруппе(СчетПоКоду("62")) = 1) или 
			(Счет = СчетПоКоду("76.5")) или
			(Счет = СчетПоКоду("76.6")) или
			(Счет = СчетПоКоду("76.55")) Тогда
			
			Если ОбъектКоллекции.СубконтоКт.КоличествоСтрок() = 2 Тогда
				ОбъектКоллекции.СубконтоКт.НоваяСтрока();
				ОбъектКоллекции.СубконтоКт.Ключ = ПолучитьПустоеЗначение();
				ОбъектКоллекции.СубконтоКт.Значение = ОбъектКоллекции.СубконтоКт.ПолучитьЗначение(2, "Значение");
			КонецЕсли;
		КонецЕсли;
		
		//**************
		Если (Счет.ПринадлежитГруппе(СчетПоКоду("10.11")) = 1) 
			ИЛИ  (Счет.ПринадлежитГруппе(СчетПоКоду("МЦ")) = 1) Тогда
			Для НомерСтроки = 1 По ОбъектКоллекции.СубконтоКт.КоличествоСтрок() Цикл
				ТекЗнач = ОбъектКоллекции.СубконтоКт.ПолучитьЗначение(НомерСтроки, "Значение");
				Если ТипЗначенияСтр(ТекЗнач) = "Справочник" Тогда
					Если ТекЗнач.Вид() = "НазначенияИспользования" Тогда
						Отказ = 1;
						Прервать;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
							<ПриВыгрузке>Параметры.ПараметрыАлгоритмов.Установить("Счет", ОбъектКоллекции.СчетКт);
Если ПустоеЗначение(ОбъектКоллекции.СубконтоКт) = 0 Тогда
	Если ОбъектКоллекции.СубконтоКт.КоличествоСтрок() &gt; 1 Тогда
		Параметры.ПараметрыАлгоритмов.Установить("Субконто1", ОбъектКоллекции.СубконтоКт.ПолучитьЗначение(1, "Значение"));
	КонецЕсли;

	Если ОбъектКоллекции.СубконтоКт.КоличествоСтрок() &gt; 2 Тогда
		Параметры.ПараметрыАлгоритмов.Установить("Субконто2", ОбъектКоллекции.СубконтоКт.ПолучитьЗначение(2, "Значение"));
	КонецЕсли;

	Если ОбъектКоллекции.СубконтоКт.КоличествоСтрок() &gt; 3 Тогда
		Параметры.ПараметрыАлгоритмов.Установить("Субконто3", ОбъектКоллекции.СубконтоКт.ПолучитьЗначение(3, "Значение"));
	КонецЕсли;
КонецЕсли;

НомерСубконто = ОбъектКоллекции.СубконтоКт.НомерСтроки;
Для Сч = 1 по 3 Цикл
	Если ОбъектКоллекции.СчетКт.ВидСубконто(Сч) = ОбъектКоллекции.СубконтоКт.Ключ Тогда
		НомерСубконто = Сч;
		Прервать;
	КонецЕсли;
КонецЦикла;

Параметры.ПараметрыАлгоритмов.Установить("НомерСубконто", НомерСубконто);
Параметры.ПараметрыАлгоритмов.Установить("Субконто", ОбъектКоллекции.СубконтоКт.Значение);
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 2);
ПриВыгрузкеСубконто();</ПриВыгрузке>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование> --&gt; ВалютаДт</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаДт" Вид="Измерение" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.СчетДт);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование> --&gt; ВалютаКт</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаКт" Вид="Измерение" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.СчетКт);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование> --&gt; Сумма</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование> --&gt; ВалютнаяСуммаДт</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютнаяСуммаДт" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование> --&gt; ВалютнаяСуммаКт</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютнаяСуммаКт" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование> --&gt; КоличествоДт</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КоличествоДт" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование> --&gt; КоличествоКт</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КоличествоКт" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование> --&gt; Содержание</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Содержание" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Значение = "Перенесено из ""1С:Бухгалтерии 7.7""";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>38</Код>
							<Наименование> --&gt; СуммаНУДт</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаНУДт" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>39</Код>
							<Наименование> --&gt; СуммаПРДт</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаПРДт" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>37</Код>
							<Наименование> --&gt; СуммаВРДт</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаВРДт" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>40</Код>
							<Наименование> --&gt; СуммаНУКт</Наименование>
							<Порядок>950</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаНУКт" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>41</Код>
							<Наименование> --&gt; СуммаПРКт</Наименование>
							<Порядок>1000</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаПРКт" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>42</Код>
							<Наименование> --&gt; СуммаВРКт</Наименование>
							<Порядок>1050</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаВРКт" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>43</Код>
							<Наименование> --&gt; ПодразделениеДт</Наименование>
							<Порядок>1100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПодразделениеДт" Вид="Измерение" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ПодразделенияОрганизаций                          </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ТипЗначенияСтр(ОбъектКоллекции.СубконтоДт) = "ТаблицаЗначений" Тогда
	Если (ПустоеЗначение(ОбъектКоллекции.СчетДт) = 0) Тогда
		Если (Лев(ОбъектКоллекции.СчетДт.Код,2) &lt;&gt; "79") Тогда
			Для НомерСтроки = 1 По ОбъектКоллекции.СубконтоДт.КоличествоСтрок() Цикл
				ТекЗнач = ОбъектКоллекции.СубконтоДт.ПолучитьЗначение(НомерСтроки, "Значение");
				Если ТипЗначенияСтр(ТекЗнач) = "Справочник" Тогда
					Если ТекЗнач.Вид() = "Подразделения" Тогда
						Значение =  ТекЗнач;
						Прервать;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Отказ = ПустоеЗначение(Значение);
Иначе
	Отказ = 1;
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>44</Код>
							<Наименование> --&gt; ПодразделениеКт</Наименование>
							<Порядок>1150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПодразделениеКт" Вид="Измерение" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ПодразделенияОрганизаций                          </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ТипЗначенияСтр(ОбъектКоллекции.СубконтоКт) = "ТаблицаЗначений" Тогда
	Если (ПустоеЗначение(ОбъектКоллекции.СчетКт) = 0) Тогда
		Если (Лев(ОбъектКоллекции.СчетКт.Код,2) &lt;&gt; "79") Тогда
			Для НомерСтроки = 1 По ОбъектКоллекции.СубконтоКт.КоличествоСтрок() Цикл
				ТекЗнач = ОбъектКоллекции.СубконтоКт.ПолучитьЗначение(НомерСтроки, "Значение");
				Если ТипЗначенияСтр(ТекЗнач) = "Справочник" Тогда
					Если ТекЗнач.Вид() = "Подразделения" Тогда
						Значение =  ТекЗнач;
						Прервать;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Отказ = ПустоеЗначение(Значение);
Иначе
	Отказ = 1;
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Свойство>
						<Код>45</Код>
						<Наименование> --&gt; СпособЗаполнения</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособЗаполнения" Вид="Реквизит"/>
						<ПередВыгрузкой>Значение = "Вручную";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВводНачальныхОстатков</Код>
				<Наименование> --&gt; ДокументСсылка.ВводНачальныхОстатков</Наименование>
				<Порядок>150</Порядок>
				<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные.Получить("РазделУчета")) = 1 Тогда
	Отказ = 1;
КонецЕсли;
Если (ВходящиеДанные.Получить("РазделУчета") = "НДСПоПриобретеннымЦенностям")
	ИЛИ (ВходящиеДанные.Получить("РазделУчета") = "НДСПоАвансамПолученным")
	ИЛИ (ВходящиеДанные.Получить("РазделУчета") = "НДСНачисленный")
	ИЛИ (ВходящиеДанные.Получить("РазделУчета") = "ОсновныеСредства")
	ИЛИ (ВходящиеДанные.Получить("РазделУчета") = "НематериальныеАктивыИНИОКР") Тогда
	Отказ = 1;
КонецЕсли;
Если ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
				<ПослеЗагрузки>ПровестиЗаписьНеЗаписанныхОбъектов();
ТаблицаРасчетыПоЗаработнойПлате = Объект.РасчетыПоЗаработнойПлате;
Если ТаблицаРасчетыПоЗаработнойПлате.Количество() &lt;&gt; 0 Тогда
	Для Каждого СтрокаТаблицы ИЗ ТаблицаРасчетыПоЗаработнойПлате Цикл		
		Если СтрокаТаблицы.СчетУчета = ПланыСчетов.Хозрасчетный.РасчетыПоДепонированнымСуммам Тогда			
			ДокументДепонирования = СтрокаТаблицы.Ведомость.ПолучитьОбъект();
			ДокументДепонирования.Зарплата.Очистить();			
			ДокументДепонирования.Записать();
		КонецЕсли;		
	КонецЦикла;
	Для Каждого СтрокаТаблицы ИЗ ТаблицаРасчетыПоЗаработнойПлате Цикл		
		Если СтрокаТаблицы.СчетУчета = ПланыСчетов.Хозрасчетный.РасчетыПоДепонированнымСуммам Тогда			
			ДокументДепонирования						= СтрокаТаблицы.Ведомость.ПолучитьОбъект();
			НоваяСтрокаДокумента						= ДокументДепонирования.Зарплата.Добавить();
			НоваяСтрокаДокумента.ФизЛицо				= СтрокаТаблицы.РаботникОрганизации;
			НоваяСтрокаДокумента.Сумма					= СтрокаТаблицы.Сумма;
			НоваяСтрокаДокумента.ВыплаченностьЗарплаты	= Перечисления.ВыплаченностьЗарплаты.Задепонировано;
			ДокументДепонирования.Записать();
		КонецЕсли;		
	КонецЦикла;
КонецЕсли;

//**************************************************************
Если (Объект.РазделУчета = Перечисления.РазделыУчетаДляВводаОстатков.НезавершенноеПроизводство)
	ИЛИ (Объект.РазделУчета = Перечисления.РазделыУчетаДляВводаОстатков.РасчетыСУчредителями)
	ИЛИ (Объект.РазделУчета = Перечисления.РазделыУчетаДляВводаОстатков.Капитал)
	ИЛИ (Объект.РазделУчета = Перечисления.РазделыУчетаДляВводаОстатков.ОтложенныеНалоговыеАктивыОбязательства) 	
	ИЛИ (Объект.РазделУчета = Перечисления.РазделыУчетаДляВводаОстатков.ПрочиеСчетаБухгалтерскогоУчета) 
	ИЛИ (Объект.РазделУчета = Перечисления.РазделыУчетаДляВводаОстатков.ДенежныеСредства) 
	ИЛИ (Объект.РазделУчета = Перечисления.РазделыУчетаДляВводаОстатков.РасходыБудущихПериодов) Тогда
	
	КоллекцияОбъектов = Объект.БухСправка;
	
	ТаблицаСубконто = Новый ТаблицаЗначений;
	ТаблицаСубконто.Колонки.Добавить("Субконто1");
	ТаблицаСубконто.Колонки.Добавить("Субконто2");
	ТаблицаСубконто.Колонки.Добавить("Субконто3");

	Для Каждого СтрокаКоллекции ИЗ КоллекцияОбъектов Цикл
		
		ТаблицаСубконто.Очистить();		
		СтрокаТаблицаСубконто = ТаблицаСубконто.Добавить();
		
		Счет = СтрокаКоллекции.СчетУчета;		
		ЧислоАктивныхСубконто = Счет.ВидыСубконто.Количество();
		
		Для Сбк = 1 По 3 Цикл
			Значение = СтрокаКоллекции["Субконто" + Сбк];
			Для Сч = 1 По ЧислоАктивныхСубконто Цикл
				ТипСубк = Счет.ВидыСубконто[Сч - 1].ВидСубконто.ТипЗначения;				
				Если Значение &lt;&gt; Неопределено Тогда
					Если ТипСубк.СодержитТип(ТипЗнч(Значение)) Тогда
						Если НЕ ЗначениеЗаполнено(СтрокаТаблицаСубконто["Субконто" + Сч]) Тогда
							СтрокаТаблицаСубконто["Субконто" + Сч] = Значение;
						КонецЕсли;				
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;

		
		СтрокаКоллекции.Субконто1 = СтрокаТаблицаСубконто.Субконто1;
		СтрокаКоллекции.Субконто2 = СтрокаТаблицаСубконто.Субконто2;
		СтрокаКоллекции.Субконто3 = СтрокаТаблицаСубконто.Субконто3;
		
		Если СтрокаКоллекции.СчетУчета.НалоговыйУчет Тогда
			Если СтрокаКоллекции.СуммаНУ = 0
				И СтрокаКоллекции.СуммаПР = 0
				И СтрокаКоллекции.СуммаВР = 0 Тогда
				
				СуммаДляНУ = ?(СтрокаКоллекции.Сумма &lt;&gt; 0, СтрокаКоллекции.Сумма, СтрокаКоллекции.СуммаКт);
				
				Если  СуммаДляНУ &lt;&gt; 0 Тогда
					СтрокаКоллекции.СуммаНУ = 0;
					СтрокаКоллекции.СуммаПР = 0;
					СтрокаКоллекции.СуммаВР = СуммаДляНУ;					
				КонецЕсли;
			КонецЕсли;
				
		Иначе
			СтрокаКоллекции.СуммаНУ = 0;
			СтрокаКоллекции.СуммаПР = 0;
			СтрокаКоллекции.СуммаВР = 0;
		КонецЕсли;		
		
	КонецЦикла;	
	
ИначеЕсли (Объект.РазделУчета = Перечисления.РазделыУчетаДляВводаОстатков.КапитальныеВложения) 
	ИЛИ (Объект.РазделУчета = Перечисления.РазделыУчетаДляВводаОстатков.Материалы)
	ИЛИ (Объект.РазделУчета = Перечисления.РазделыУчетаДляВводаОстатков.Товары) 
	ИЛИ (Объект.РазделУчета = Перечисления.РазделыУчетаДляВводаОстатков.ГотоваяПродукцияИПолуфабрикаты) 
	ИЛИ (Объект.РазделУчета = Перечисления.РазделыУчетаДляВводаОстатков.ТоварыОтгруженные) Тогда
	
	Если Объект.РазделУчета = Перечисления.РазделыУчетаДляВводаОстатков.ТоварыОтгруженные Тогда
		КоллекцияОбъектов = Объект.МПЗОтгруженные;		
	Иначе
		КоллекцияОбъектов = Объект.МПЗПриобретенные;		
	КонецЕсли;
	
	Для Каждого СтрокаКоллекции ИЗ КоллекцияОбъектов Цикл
		Если СтрокаКоллекции.СчетУчета.НалоговыйУчет Тогда
			Если СтрокаКоллекции.СуммаНУ = 0
				И СтрокаКоллекции.СуммаПР = 0
				И СтрокаКоллекции.СуммаВР = 0 Тогда
				
				СуммаДляНУ = СтрокаКоллекции.Сумма;
				
				Если  СуммаДляНУ &lt;&gt; 0 Тогда
					СтрокаКоллекции.СуммаНУ = 0;
					СтрокаКоллекции.СуммаПР = 0;
					СтрокаКоллекции.СуммаВР = СуммаДляНУ;					
				КонецЕсли;
			КонецЕсли;
			
		Иначе
			СтрокаКоллекции.СуммаНУ = 0;
			СтрокаКоллекции.СуммаПР = 0;
			СтрокаКоллекции.СуммаВР = 0;
		КонецЕсли;		
		
	КонецЦикла;	
		
ИначеЕсли (Объект.РазделУчета = Перечисления.РазделыУчетаДляВводаОстатков.РасчетыСПоставщикамиИПодрядчиками) 
	ИЛИ (Объект.РазделУчета = Перечисления.РазделыУчетаДляВводаОстатков.РасчетыСПокупателямиИЗаказчиками)
	ИЛИ (Объект.РазделУчета = Перечисления.РазделыУчетаДляВводаОстатков.РасчетыСПрочимиДебиторамиИКредиторами) Тогда
	
	КоллекцияОбъектов = Объект.РасчетыСКонтрагентами;
	
	Для Каждого СтрокаКоллекции ИЗ КоллекцияОбъектов Цикл
		
		Счет = СтрокаКоллекции.СчетУчета;
		ПоДокументамРасчетов = НЕ (Счет.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами, "ВидСубконто") = Неопределено);
		
		Если НЕ ПоДокументамРасчетов Тогда
			СтрокаКоллекции.Документ = "";
		КонецЕсли;
		
		Если СтрокаКоллекции.СчетУчета.НалоговыйУчет Тогда
			Если СтрокаКоллекции.СуммаНУ = 0 Тогда
				
				СуммаДляНУ = ?(СтрокаКоллекции.Сумма &lt;&gt; 0, СтрокаКоллекции.Сумма, СтрокаКоллекции.СуммаКт);
				
				Если  СуммаДляНУ &lt;&gt; 0 Тогда
					СтрокаКоллекции.СуммаНУ = СуммаДляНУ;					
				КонецЕсли;
			КонецЕсли;
				
		Иначе
			СтрокаКоллекции.СуммаНУ = 0;
		КонецЕсли;		
		
	КонецЦикла;	
	
КонецЕсли;
</ПослеЗагрузки>
				<Приемник>ДокументСсылка.ВводНачальныхОстатков</Приемник>
				<Свойства>
					<Группа>
						<Код>9</Код>
						<Наименование> --&gt; БухСправка</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="БухСправка" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "НезавершенноеПроизводство")
	И (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "РасчетыСУчредителями")
	И (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "Капитал")
	И (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "ОтложенныеНалоговыеАктивыОбязательства") 
	И (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "ПрочиеСчетаБухгалтерскогоУчета")
	И (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "ДенежныеСредства") Тогда
	Отказ = 1;
ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
Иначе	
	Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "Прочее");
	ЗаполнитьРеквизитыДокументаВНО();
	ПолучитьВходящиеДанныеНУ_МПЗ();	
	ПолучитьВходящиеДанныеНУ_Прочие();
	
	ТекущийСчет = Параметры.ПараметрыАлгоритмов.Получить("ТекущийСчет");
	Если (ТекущийСчет = СчетПоКоду("002.1")) ИЛИ (ТекущийСчет = СчетПоКоду("002.2")) ИЛИ (ТекущийСчет = СчетПоКоду("003")) ИЛИ (ТекущийСчет = СчетПоКоду("006")) Тогда
		РаспределитьПоМестамХранения();
	КонецЕсли;
	
	КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");		
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>26</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СчетУчета;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>27</Код>
							<Наименование> --&gt; Субконто1</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Субконто1" Вид="Реквизит"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Субконто1;
Если ОбъектКоллекции.СчетУчета = "ТоварыНаСкладе" Тогда
	ИмяПКО = "ДокументРасчетовСКонтрагентом";	
ИначеЕсли (ОбъектКоллекции.СчетУчета = "РасчетыПоВыделенномуИмуществу")
	ИЛИ (ОбъектКоллекции.СчетУчета = "РасчетыПоТекущимОперациям") Тогда
	ИмяПКО = "ОбособленныеПодразделения";	
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>28</Код>
							<Наименование> --&gt; Субконто2</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Субконто2" Вид="Реквизит"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Субконто2;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>29</Код>
							<Наименование> --&gt; Субконто3</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Субконто3" Вид="Реквизит"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Субконто3;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>30</Код>
							<Наименование> --&gt; Сумма</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Сумма;
Если ВходящиеДанные.Получить("РазделУчета") = "ДенежныеСредства" Тогда
	Если (ОбъектКоллекции.Сумма = 0)
		И (ОбъектКоллекции.СуммаКт &lt;&gt; 0) Тогда
		Значение = ОбъектКоллекции.СуммаКт;
	КонецЕсли;
ИначеЕсли ВходящиеДанные.Получить("РазделУчета") = "РасчетыСУчредителями" Тогда
	Если (ОбъектКоллекции.Сумма = 0)
		И (ОбъектКоллекции.СуммаКт &lt;&gt; 0) 
		И (ОбъектКоллекции.СчетУчета = "РасчетыПоВкладамВУставныйКапитал") Тогда
		Значение = -ОбъектКоллекции.СуммаКт;
	КонецЕсли 
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>31</Код>
							<Наименование> --&gt; СуммаКт</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаКт" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СуммаКт;
Если ВходящиеДанные.Получить("РазделУчета") = "РасчетыСУчредителями" Тогда
	Если (ОбъектКоллекции.Сумма = 0)
		И (ОбъектКоллекции.СуммаКт &lt;&gt; 0) 
		И (ОбъектКоллекции.СчетУчета = "РасчетыПоВкладамВУставныйКапитал") Тогда
		Значение = 0;
	КонецЕсли 
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>32</Код>
							<Наименование> --&gt; СуммаНУ</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаНУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СуммаНУ;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>33</Код>
							<Наименование> --&gt; СуммаПР</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаПР" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СуммаПР;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>34</Код>
							<Наименование> --&gt; СуммаВР</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаВР" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СуммаВР;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>35</Код>
							<Наименование> --&gt; Количество</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Количество;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>36</Код>
							<Наименование> --&gt; Валюта</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Валюта" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.Валюта) = 1 Тогда
	Отказ = 1;
Иначе
	Значение = ОбъектКоллекции.Валюта;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>37</Код>
							<Наименование> --&gt; ВалютнаяСумма</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютнаяСумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ВалютнаяСумма;</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>11</Код>
						<Наименование> --&gt; МПЗПриобретенные</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="МПЗПриобретенные" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "КапитальныеВложения")
	И (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "Материалы")
	И (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "Товары")
	И (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "ГотоваяПродукцияИПолуфабрикаты") Тогда
	Отказ = 1;
ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
Иначе	
	
	ЗаполнитьРеквизитыДокументаВНО();
	ПолучитьВходящиеДанныеНУ_МПЗ();
	
	РаспределитьПоМестамХранения();
	
	КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");
	
	//******************
	//Для спецматериалов необходимо синхронизировать получение первоначальной стоимости
	
	Если (Параметры.ПараметрыАлгоритмов.Получить("ТекущийСчет") = СчетПоКоду("10.11.1"))
		ИЛИ (Параметры.ПараметрыАлгоритмов.Получить("ТекущийСчет") = СчетПоКоду("10.11.2")) Тогда
		
		Параметры.ТаблицаОстатковМЦ.ВыбратьСтроки();
		Пока Параметры.ТаблицаОстатковМЦ.ПолучитьСтроку() = 1 Цикл
			Параметры.ТаблицаОстатковМЦ.Субконто1 = Параметры.ТаблицаОстатковМЦ.СубконтоДт.ПолучитьЗначение(1, "Значение");
			Параметры.ТаблицаОстатковМЦ.Субконто2 = Параметры.ТаблицаОстатковМЦ.СубконтоДт.ПолучитьЗначение(2, "Значение");
			Параметры.ТаблицаОстатковМЦ.Субконто3 = Параметры.ТаблицаОстатковМЦ.СубконтоДт.ПолучитьЗначение(3, "Значение");
		КонецЦикла;
		
		КоллекцияОбъектов.ВыбратьСтроки();
		Пока КоллекцияОбъектов.ПолучитьСтроку() = 1 Цикл			
			Параметры.ТаблицаОстатковМЦ.ВыбратьСтроки();
			Пока Параметры.ТаблицаОстатковМЦ.ПолучитьСтроку() = 1 Цикл
				Если (КоллекцияОбъектов.Субконто1 = Параметры.ТаблицаОстатковМЦ.Субконто1)
					И (КоллекцияОбъектов.Субконто2 = Параметры.ТаблицаОстатковМЦ.Субконто2)
					И (КоллекцияОбъектов.Субконто3 = Параметры.ТаблицаОстатковМЦ.Субконто3) Тогда 					
					КоллекцияОбъектов.СуммаМЦ = Параметры.ТаблицаОстатковМЦ.Сумма;
					Параметры.ТаблицаОстатковМЦ.УдалитьСтроку();
					Прервать;
				КонецЕсли;		
			КонецЦикла;
		КонецЦикла;
		
	КонецЕсли;
	
	//исключительные случаи
	Если (Параметры.ПараметрыАлгоритмов.Получить("ТекущийСчет") &lt;&gt; СчетПоКоду("08.6")) 
		И (Параметры.ПараметрыАлгоритмов.Получить("ТекущийСчет") &lt;&gt; СчетПоКоду("08.7")) Тогда
		КоллекцияОбъектов.ВыбратьСтроки();
		Пока КоллекцияОбъектов.получитьСтроку() = 1 Цикл
			Если (КоллекцияОбъектов.СуммаНУ + Параметры.ТаблицаОстатковНУ.СуммаПР + Параметры.ТаблицаОстатковНУ.СуммаВР) = 0 Тогда
			КоллекцияОбъектов.СуммаВР = КоллекцияОбъектов.Сумма;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
		
КонецЕсли;</ПередОбработкойВыгрузки>
						<ПослеОбработкиВыгрузки>	КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");
	//*************************************************
	//Разбросаем сумму по количеству
	ТаблицаПоКоличеству = СоздатьОбъект("ТаблицаЗначений");
	ТаблицаПоКоличеству.НоваяКолонка("СчетУчета");
	ТаблицаПоКоличеству.НоваяКолонка("Субконто1");
	ТаблицаПоКоличеству.НоваяКолонка("Субконто2");
	ТаблицаПоКоличеству.НоваяКолонка("Субконто3");
	ТаблицаПоКоличеству.НоваяКолонка("Количество");
	ТаблицаПоКоличеству.НоваяКолонка("Сумма");
	
	ТаблицаПоСумме		 = СоздатьОбъект("ТаблицаЗначений");
	ТаблицаПоСумме.НоваяКолонка("СчетУчета");
	ТаблицаПоСумме.НоваяКолонка("Субконто1");
	ТаблицаПоСумме.НоваяКолонка("Субконто2");
	ТаблицаПоСумме.НоваяКолонка("Субконто3");
	ТаблицаПоСумме.НоваяКолонка("Количество");
	ТаблицаПоСумме.НоваяКолонка("Сумма");</ПослеОбработкиВыгрузки>
						<Свойство>
							<Код>58</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СчетУчета;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>75</Код>
							<Наименование> --&gt; Номенклатура</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Номенклатура" Вид="Реквизит"/>
							<ПередВыгрузкой>Если ОбъектКоллекции.СчетУчета = "ТорговаяНаценкаНТТ" Тогда
	Отказ = 1;
Иначе
	
	Значение = ОбъектКоллекции.Субконто1;
	
	Если ПустоеЗначение(Значение) = 0 Тогда	
		Если (ОбъектКоллекции.СчетУчета = "СтроительствоОбъектовОсновныхСредств")
			ИЛИ (ОбъектКоллекции.СчетУчета = "ПриобретениеЗемельныхУчастков")
			ИЛИ (ОбъектКоллекции.СчетУчета = "ПриобретениеОбъектовПриродопользования") Тогда
			ИмяПКО  = "ОбъектыСтроительства_08_3";
		ИначеЕсли (ОбъектКоллекции.СчетУчета = "ПриобретениеНематериальныхАктивов")
			ИЛИ (ОбъектКоллекции.СчетУчета = "ВыполнениеНИОКР") Тогда
			ИмяПКО  = "ОбъектыСтроительства_08_5_08_8";
			Если ОбъектКоллекции.СчетУчета = "ВыполнениеНИОКР" Тогда
				ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
				ИсходящиеДанные.Установить("Счет", СчетПоКоду("08.8"));
			КонецЕсли;
		ИначеЕсли ОбъектКоллекции.СчетУчета = "ОборудованиеКУстановке" Тогда
			ИмяПКО  = "Оборудование";
		ИначеЕсли Значение.Вид() = "ОбъектыСтроительства" Тогда
			ИмяПКО  = "ОбъектыСтроительства_08_4";
		ИначеЕсли Значение.Вид() = "Материалы" Тогда
			ИмяПКО  = "Материалы";
		Иначе 
			ИмяПКО  = "Номенклатура";		
		КонецЕсли;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>60</Код>
							<Наименование> --&gt; Склад</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Склад" Вид="Реквизит" Тип="СправочникСсылка.Склады"/>
							<КодПравилаКонвертации>Склады                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "";
Если ОбъектКоллекции.СчетУчета = "ТорговаяНаценкаНТТ" Тогда
	СкладЗнач = ОбъектКоллекции.Субконто1;
Иначе
	СкладЗнач = ОбъектКоллекции.Субконто2;
КонецЕсли;

Если ПустоеЗначение(СкладЗнач) = 0 Тогда
	Если ТипЗначенияСтр(СкладЗнач) = "Справочник" Тогда
		Если СкладЗнач.Вид() = "МестаХранения" Тогда
			Значение = СкладЗнач;		
		Иначе
			Отказ = 1;
		КонецЕсли;
	Иначе
		Отказ = 1;
	КонецЕсли;
ИначеЕсли ОбъектКоллекции.СчетУчета = "ПриобретениеОбъектовОсновныхСредств" Тогда
	Значение = Константа.ОсновнойСклад;
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>61</Код>
							<Наименование> --&gt; Контрагент</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "";
Если ПустоеЗначение(ОбъектКоллекции.Субконто2) = 0 Тогда
	Если ТипЗначенияСтр(ОбъектКоллекции.Субконто2) = "Справочник" Тогда
		Если ОбъектКоллекции.Субконто2.Вид() = "Контрагенты" Тогда
			Значение = ОбъектКоллекции.Субконто2;
		Иначе
			Отказ = 1;
		КонецЕсли;    
	Иначе
		Отказ = 1;
	КонецЕсли;        
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>62</Код>
							<Наименование> --&gt; Количество</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Количество;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>63</Код>
							<Наименование> --&gt; Сумма</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Сумма;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>67</Код>
							<Наименование> --&gt; СпособСтроительства</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособСтроительства" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыСтроительства"/>
							<ПередВыгрузкой>Если ОбъектКоллекции.СчетУчета = "СтроительствоОбъектовОсновныхСредств" Тогда
	Значение = "Хозспособ";
Иначе
	Значение = "";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>68</Код>
							<Наименование> --&gt; НомерСтрокиТЧ</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НомерСтрокиТЧ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НомерСтроки;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>64</Код>
							<Наименование> --&gt; СуммаНУ</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаНУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СуммаНУ;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>65</Код>
							<Наименование> --&gt; СуммаПР</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаПР" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СуммаПР;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>66</Код>
							<Наименование> --&gt; СуммаВР</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаВР" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СуммаВР;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>104</Код>
							<Наименование> --&gt; СпецМатериалНазначениеИспользования</Наименование>
							<Порядок>950</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпецМатериалНазначениеИспользования" Вид="Реквизит" Тип="СправочникСсылка.НазначенияИспользования"/>
							<КодПравилаКонвертации>НазначенияИспользования                           </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "";
Если ПустоеЗначение(ОбъектКоллекции.Субконто2) = 0 Тогда
	Если ТипЗначенияСтр(ОбъектКоллекции.Субконто2) = "Справочник" Тогда
		Если ОбъектКоллекции.Субконто2.Вид() = "НазначенияИспользования" Тогда
			Значение = ОбъектКоллекции.Субконто2;		
		Иначе
			Отказ = 1;
		КонецЕсли;
	Иначе
		Отказ = 1;
	КонецЕсли;
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>105</Код>
							<Наименование> --&gt; СпецМатериалПодразделениеФизЛицо</Наименование>
							<Порядок>1000</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпецМатериалПодразделениеФизЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<ПередВыгрузкой>Значение = "";
Если ПустоеЗначение(ОбъектКоллекции.Субконто3) = 0 Тогда
	Если ТипЗначенияСтр(ОбъектКоллекции.Субконто3) = "Справочник" Тогда		
		Если ОбъектКоллекции.Субконто3.Вид() = "Сотрудники" Тогда
			Значение = ОбъектКоллекции.Субконто3;
			ИмяПКО = "ФизическиеЛица";
		ИначеЕсли ОбъектКоллекции.Субконто3.Вид() = "Подразделения" Тогда 
			Значение = ОбъектКоллекции.Субконто3;
			ИмяПКО = "ПодразделенияОрганизаций";
		Иначе
			Отказ = 1;
		КонецЕсли;
	Иначе
		Отказ = 1;
	КонецЕсли;
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>106</Код>
							<Наименование> --&gt; СпецМатериалПартияМатериалаВЭксплуатации</Наименование>
							<Порядок>1050</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпецМатериалПартияМатериалаВЭксплуатации" Вид="Реквизит"/>
							<КодПравилаКонвертации>ПартияМатериаловВЭксплуатации                     </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "";
Если ПустоеЗначение(ОбъектКоллекции.Субконто2) = 0 Тогда
	Если ТипЗначенияСтр(ОбъектКоллекции.Субконто2) = "Справочник" Тогда
		Если ОбъектКоллекции.Субконто2.Вид() = "НазначенияИспользования" Тогда
			Значение = ОбъектКоллекции.Субконто2;		
		Иначе
			Отказ = 1;
		КонецЕсли;
	Иначе
		Отказ = 1;
	КонецЕсли;
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>107</Код>
							<Наименование> --&gt; СпецМатериалПервоначальнаяСтоимость</Наименование>
							<Порядок>1100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпецМатериалПервоначальнаяСтоимость" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СуммаМЦ;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>110</Код>
							<Наименование> --&gt; Ключ</Наименование>
							<Порядок>1150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Ключ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НомерСтроки;</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>12</Код>
						<Наименование> --&gt; МПЗОтгруженные</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="МПЗОтгруженные" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "ТоварыОтгруженные" Тогда
	Отказ = 1;
ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
Иначе	
	ЗаполнитьРеквизитыДокументаВНО();
	ПолучитьВходящиеДанныеНУ_ОТ();	
	КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");	
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>76</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СчетУчета;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>77</Код>
							<Наименование> --&gt; Номенклатура</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
							<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Субконто3;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>78</Код>
							<Наименование> --&gt; Покупатель</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Покупатель" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Субконто1;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>79</Код>
							<Наименование> --&gt; ДоговорПокупателя</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоговорПокупателя" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Субконто2;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>80</Код>
							<Наименование> --&gt; ДокументОтгрузки</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДокументОтгрузки" Вид="Реквизит"/>
							<КодПравилаКонвертации>ДокументРасчетовСКонтрагентом                     </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Субконто2;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>81</Код>
							<Наименование> --&gt; Количество</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Количество;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>82</Код>
							<Наименование> --&gt; Сумма</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Сумма;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>83</Код>
							<Наименование> --&gt; СуммаНУ</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаНУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СуммаНУ;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>84</Код>
							<Наименование> --&gt; СуммаПР</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаПР" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СуммаПР;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>85</Код>
							<Наименование> --&gt; СуммаВР</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаВР" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СуммаВР;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>111</Код>
							<Наименование> --&gt; Ключ</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Ключ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НомерСтроки;</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>15</Код>
						<Наименование> --&gt; РасходыБудущихПериодов</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РасходыБудущихПериодов" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "РасходыБудущихПериодов" Тогда
	Отказ = 1;
ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
Иначе	
	ЗаполнитьРеквизитыДокументаВНО();
	ПолучитьВходящиеДанныеНУ_Прочие();
	КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");	
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>38</Код>
							<Наименование> --&gt; Субконто1</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СчетУчета;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>39</Код>
							<Наименование> --&gt; Субконто1</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Субконто1" Вид="Реквизит"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Субконто1;

Если (ОбъектКоллекции.СчетУчета = "РасчетыПоИмущественномуИЛичномуСтрахованию") 
	ИЛИ (ОбъектКоллекции.СчетУчета = "РасчетыПоИмущественномуИЛичномуСтрахованиюВал") Тогда
	ИмяПКО = "Контрагенты";
Иначе
	ИмяПКО =  "РасходыБудущихПериодов";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>40</Код>
							<Наименование> --&gt; Субконто2</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Субконто2" Вид="Реквизит"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Субконто2;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>41</Код>
							<Наименование> --&gt; Субконто3</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Субконто3" Вид="Реквизит"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Субконто3;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>42</Код>
							<Наименование> --&gt; Сумма</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Сумма;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>47</Код>
							<Наименование> --&gt; СуммаНУ</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаНУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СуммаНУ;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>48</Код>
							<Наименование> --&gt; СуммаПР</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаПР" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СуммаПР;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>49</Код>
							<Наименование> --&gt; СуммаВР</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаВР" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Сумма - ОбъектКоллекции.СуммаНУ - ОбъектКоллекции.СуммаПР;</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>16</Код>
						<Наименование> --&gt; РасчетыПоНалогамИСборам</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РасчетыПоНалогамИСборам" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "РасчетыПоНалогамИСборам" Тогда
	Отказ = 1;
ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
Иначе	
	КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");	
	ЗаполнитьРеквизитыДокументаВНО();
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>50</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СчетУчета;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>51</Код>
							<Наименование> --&gt; ВидПлатежаВБюджет</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидПлатежаВБюджет" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыПлатежейВГосБюджет"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Субконто1;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>52</Код>
							<Наименование> --&gt; УровеньБюджета</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="УровеньБюджета" Вид="Реквизит" Тип="ПеречислениеСсылка.УровниБюджетов"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Субконто2;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>53</Код>
							<Наименование> --&gt; Сумма</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Сумма;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>57</Код>
							<Наименование> --&gt; СуммаКт</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаКт" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СуммаКт;</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>17</Код>
						<Наименование> --&gt; РасчетыСКонтрагентами</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РасчетыСКонтрагентами" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "РасчетыСПоставщикамиИПодрядчиками")
	И (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "РасчетыСПокупателямиИЗаказчиками")
	И (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "РасчетыСПрочимиДебиторамиИКредиторами") Тогда
	Отказ = 1;
ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
Иначе
		
	КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");	
	ЗаполнитьРеквизитыДокументаВНО();
	ДобавитьСуммыНУПоСчетамРасчетовУЕ();
	ДобавитьСуммыНУПоСчетамРасчетовВАЛ();
КонецЕсли;</ПередОбработкойВыгрузки>
						<ПослеВыгрузки>Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "Прочее");</ПослеВыгрузки>
						<Свойство>
							<Код>86</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СчетУчета;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>87</Код>
							<Наименование> --&gt; Контрагент</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Субконто1;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>88</Код>
							<Наименование> --&gt; ДоговорКонтрагента</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ВходящиеДанные.Получить("РазделУчета") = "РасчетыСПоставщикамиИПодрядчиками" Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");
ИначеЕсли ВходящиеДанные.Получить("РазделУчета") = "РасчетыСПокупателямиИЗаказчиками" Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПокупателем");
Иначе
	Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "Прочее");
КонецЕсли;

Значение = ОбъектКоллекции.Субконто2;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>93</Код>
							<Наименование> --&gt; Документ</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Документ" Вид="Реквизит"/>
							<КодПравилаКонвертации>ДокументРасчетовСКонтрагентом                     </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Субконто2;
ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
ИсходящиеДанные.Установить("СделатьСсылкуНаДокВводаОстатков", 1);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>89</Код>
							<Наименование> --&gt; Сумма</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Сумма;
Если ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "РасчетыСПрочимиДебиторамиИКредиторами" Тогда
	Если ОбъектКоллекции.СуммаКт &lt;&gt; 0 Тогда
		Значение = ОбъектКоллекции.СуммаКт
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>90</Код>
							<Наименование> --&gt; СуммаКт</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаКт" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СуммаКт;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>91</Код>
							<Наименование> --&gt; Валюта</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Валюта" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Валюта;
Если ПустоеЗначение(Значение) = 1 Тогда
	Значение = Параметры.Рубли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>92</Код>
							<Наименование> --&gt; ВалютнаяСумма</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютнаяСумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ВалютнаяСумма;
Если ПустоеЗначение(Значение) = 1 Тогда
	Если ОбъектКоллекции.Сумма &lt;&gt; 0 Тогда
		Значение = ОбъектКоллекции.Сумма;
	Иначе
		Значение = ОбъектКоллекции.СуммаКт
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>94</Код>
							<Наименование> --&gt; КратностьВзаиморасчетов</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КратностьВзаиморасчетов" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>95</Код>
							<Наименование> --&gt; КурсВзаиморасчетов</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КурсВзаиморасчетов" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ?(ОбъектКоллекции.ВалютнаяСумма = 0, 1, ?(ОбъектКоллекции.Сумма = 0, ОбъектКоллекции.СуммаКт, ОбъектКоллекции.Сумма) / ОбъектКоллекции.ВалютнаяСумма);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>96</Код>
							<Наименование> --&gt; СуммаНУ</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаНУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СуммаНУ;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>98</Код>
							<Наименование> --&gt; Аванс</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Аванс" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 0;
Если ВходящиеДанные.Получить("РазделУчета") = "РасчетыСПоставщикамиИПодрядчиками" Тогда
	Если ОбъектКоллекции.Сумма &lt;&gt; 0 Тогда
		Значение = 1;
	КонецЕсли;
ИначеЕсли ВходящиеДанные.Получить("РазделУчета") = "РасчетыСПокупателямиИЗаказчиками" Тогда
	Если ОбъектКоллекции.СуммаКт &lt;&gt; 0 Тогда
		Значение = 1;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>18</Код>
						<Наименование> --&gt; РасчетыСПодотчетнымиЛицами</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РасчетыСПодотчетнымиЛицами" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "РасчетыСПодотчетнымиЛицами" Тогда
	Отказ = 1;	
ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
Иначе	
	КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");	
	ЗаполнитьРеквизитыДокументаВНО();
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>20</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<ПередВыгрузкой>Значени = ОбъектКоллекции.СчетУчета;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование> --&gt; РаботникОрганизации</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РаботникОрганизации" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.СубконтоДт) = 0 Тогда
	Значение = ОбъектКоллекции.СубконтоДт.Значение;
ИначеЕсли ПустоеЗначение(ОбъектКоллекции.СубконтоКт) = 0 Тогда
	Значение = ОбъектКоллекции.СубконтоКт.Значение;
Иначе
	Отказ =1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<НеЗамещать>true</НеЗамещать>
							<Код>22</Код>
							<Наименование> --&gt; Валюта</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Валюта" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.Валюта) = 1 Тогда
	Отказ = 1;
Иначе
	Значение = ОбъектКоллекции.Валюта;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>23</Код>
							<Наименование> --&gt; ВалютнаяСумма</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютнаяСумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ВалютнаяСумма;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>24</Код>
							<Наименование> --&gt; Сумма</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Сумма;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>25</Код>
							<Наименование> --&gt; СуммаКт</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаКт" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СуммаКт;</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>19</Код>
						<Наименование> --&gt; ВзаиморасчетыСДепонентамиОрганизаций</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РасчетыПоЗаработнойПлате" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "РасчетыСПерсоналомПоОплатеТрудаИДепонентам" Тогда
	Отказ = 1;
ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
Иначе	
	КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");	
	ЗаполнитьРеквизитыДокументаВНО();
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>99</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СчетУчета;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>100</Код>
							<Наименование> --&gt; РаботникОрганизации</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РаботникОрганизации" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Субконто1;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>101</Код>
							<Наименование> --&gt; Ведомость</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Ведомость" Вид="Реквизит" Тип="ДокументСсылка.ЗарплатаКВыплатеОрганизаций"/>
							<КодПравилаКонвертации>ЗарплатаКВыплатеОрганизаций                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ОбъектКоллекции.СчетУчета = "РасчетыСПерсоналомПоОплатеТруда" Тогда
	Значение = "";
Иначе
	Значение = ОбъектКоллекции.Субконто1;
	ТЗ = СоздатьОбъект("ТаблицаЗначений");
	ТЗ.НоваяКолонка("ФизЛицо");
	ТЗ.НоваяКолонка("Сумма");
	ТЗ.НоваяКолонка("ВыплаченностьЗарплаты");
	ТЗ.НоваяСтрока();
	ТЗ.ФизЛицо = ОбъектКоллекции.Субконто1;
	ТЗ.Сумма = ОбъектКоллекции.СуммаКт; 
	ТЗ.ВыплаченностьЗарплаты = "Задепонировано";
	ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
	ИсходящиеДанные.Установить("СделатьСсылкуНаДокВводаОстатков", 1);
	ИсходящиеДанные.Установить("Зарплата", ТЗ);	
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>102</Код>
							<Наименование> --&gt; Сумма</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СуммаКт;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>103</Код>
							<Наименование> --&gt; ПериодРегистрации</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
							<ПередВыгрузкой>Если ОбъектКоллекции.СчетУчета = "РасчетыСПерсоналомПоОплатеТруда" Тогда
	
	ПериодРегистрации = ВходящиеДанные.Получить("Дата");
	ПериодРегистрации = НачМесяца(ПериодРегистрации);
	
	Значение = ПериодРегистрации;
Иначе
	Значение = "";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>450</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>//Значение = Параметры.ДатаВводаОстатков - 1;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Проведен</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "# Перенесено из 1С:Бухгалтерии 7.7 # Остатки по счету """ + Строка(ВходящиеДанные.Получить("Счет")) + """";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>6</Код>
						<Наименование> --&gt; ФормироватьПроводки</Наименование>
						<Порядок>650</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтражатьВБухгалтерскомУчете" Вид="Реквизит" Тип="Булево"/>
						<ПередВыгрузкой>//Значение = 1;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>5</Код>
						<Наименование> --&gt; ОтражатьВНалоговомУчете</Наименование>
						<Порядок>700</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтражатьВНалоговомУчете" Вид="Реквизит" Тип="Булево"/>
						<ПередВыгрузкой>//Значение = 1;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>109</Код>
						<Наименование> --&gt; ФормироватьПроводки</Наименование>
						<Порядок>750</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтражатьПоСпециальнымРегистрам" Вид="Реквизит" Тип="Булево"/>
						<ПередВыгрузкой>//Значение = 1;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>7</Код>
						<Наименование> --&gt; РазделУчета</Наименование>
						<Порядок>800</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РазделУчета" Вид="Реквизит" Тип="ПеречислениеСсылка.РазделыУчетаДляВводаОстатков"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>112</Код>
						<Наименование> --&gt; ПодразделениеОрганизации</Наименование>
						<Порядок>850</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПодразделениеОрганизации" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
						<КодПравилаКонвертации>ПодразделенияОрганизаций                          </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = ВходящиеДанные.Получить("ПодразделениеОрганизации");</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
		<Группа>
			<Код>ПланСчетов</Код>
			<Наименование>План счетов</Наименование>
			<Порядок>500</Порядок>
			<Правило>
				<Код>Хозрасчетный</Код>
				<Наименование>ПланСчетовСсылка.Основной --&gt; ПланСчетовСсылка.Хозрасчетный</Наименование>
				<Порядок>300</Порядок>
				<ПриВыгрузке>Если ТипЗначенияСтр(ВходящиеДанные) = "СписокЗначений" Тогда
	КодСчета = ВходящиеДанные.Получить("КодСчета");
	Если ПустоеЗначение(КодСчета) = 0 Тогда
		Значение = КодСчета;
	КонецЕсли;
КонецЕсли;</ПриВыгрузке>
				<Источник>ПланСчетовСсылка.Основной</Источник>
				<Приемник>ПланСчетовСсылка.Хозрасчетный</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>2</Код>
						<Наименование>001 --&gt; 001</Наименование>
						<Порядок>100</Порядок>
						<Источник>001</Источник>
						<Приемник>АрендованныеОсновныеСредства</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>002.1 --&gt; 002</Наименование>
						<Порядок>200</Порядок>
						<Источник>002.1</Источник>
						<Приемник>ТМЦпринятыеНаОтветственноеХранение</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>002.2 --&gt; 002</Наименование>
						<Порядок>300</Порядок>
						<Источник>002.2</Источник>
						<Приемник>ТМЦпринятыеНаОтветственноеХранение</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>003 --&gt; 003.01</Наименование>
						<Порядок>400</Порядок>
						<Источник>003</Источник>
						<Приемник>МатериалыПринятыеВПереработку</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>004 --&gt; 004.01</Наименование>
						<Порядок>500</Порядок>
						<Источник>004</Источник>
						<Приемник>ТоварыНаСкладе</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>005 --&gt; 005</Наименование>
						<Порядок>600</Порядок>
						<Источник>005</Источник>
						<Приемник>ОборудованиеПринятоеДляМонтажа</Приемник>
					</Значение>
					<Значение>
						<Код>8</Код>
						<Наименование>006 --&gt; 006</Наименование>
						<Порядок>700</Порядок>
						<Источник>006</Источник>
						<Приемник>БланкиСтрогойОтчетности</Приемник>
					</Значение>
					<Значение>
						<Код>9</Код>
						<Наименование>007 --&gt; 007</Наименование>
						<Порядок>800</Порядок>
						<Источник>007</Источник>
						<Приемник>СписаннаяВУбытокЗадолженностьДебиторов</Приемник>
					</Значение>
					<Значение>
						<Код>10</Код>
						<Наименование>008 --&gt; 008</Наименование>
						<Порядок>900</Порядок>
						<Источник>008</Источник>
						<Приемник>ОбеспеченияОбязательствПолученные</Приемник>
					</Значение>
					<Значение>
						<Код>11</Код>
						<Наименование>009 --&gt; 009</Наименование>
						<Порядок>1000</Порядок>
						<Источник>009</Источник>
						<Приемник>ОбеспеченияОбязательствВыданные</Приемник>
					</Значение>
					<Значение>
						<Код>12</Код>
						<Наименование>01.1 --&gt; 01.01</Наименование>
						<Порядок>1100</Порядок>
						<Источник>01.1</Источник>
						<Приемник>ОСвОрганизации</Приемник>
					</Значение>
					<Значение>
						<Код>13</Код>
						<Наименование>01.2 --&gt; 01.09</Наименование>
						<Порядок>1200</Порядок>
						<Источник>01.2</Источник>
						<Приемник>ВыбытиеОС</Приемник>
					</Значение>
					<Значение>
						<Код>14</Код>
						<Наименование>010 --&gt; 010</Наименование>
						<Порядок>1300</Порядок>
						<Источник>010</Источник>
						<Приемник>ИзносОсновныхСредств</Приемник>
					</Значение>
					<Значение>
						<Код>15</Код>
						<Наименование>011 --&gt; 011</Наименование>
						<Порядок>1400</Порядок>
						<Источник>011</Источник>
						<Приемник>ОсновныеСредстваСданныеВАренду</Приемник>
					</Значение>
					<Значение>
						<Код>16</Код>
						<Наименование>02.1 --&gt; 02.01</Наименование>
						<Порядок>1500</Порядок>
						<Источник>02.1</Источник>
						<Приемник>АмортизацияОС_01</Приемник>
					</Значение>
					<Значение>
						<Код>17</Код>
						<Наименование>02.2 --&gt; 02.02</Наименование>
						<Порядок>1600</Порядок>
						<Источник>02.2</Источник>
						<Приемник>АмортизацияОС_03</Приемник>
					</Значение>
					<Значение>
						<Код>18</Код>
						<Наименование>03.1 --&gt; 03.01</Наименование>
						<Порядок>1700</Порядок>
						<Источник>03.1</Источник>
						<Приемник>МЦвОрганизации</Приемник>
					</Значение>
					<Значение>
						<Код>19</Код>
						<Наименование>03.2 --&gt; 03.02</Наименование>
						<Порядок>1800</Порядок>
						<Источник>03.2</Источник>
						<Приемник>МЦ_ПредоставленныеВоВременноеВладение</Приемник>
					</Значение>
					<Значение>
						<Код>20</Код>
						<Наименование>03.3 --&gt; 03.03</Наименование>
						<Порядок>1900</Порядок>
						<Источник>03.3</Источник>
						<Приемник>МЦ_ПредоставленныеВоВременноеПользование</Приемник>
					</Значение>
					<Значение>
						<Код>21</Код>
						<Наименование>03.4 --&gt; 03.04</Наименование>
						<Порядок>2000</Порядок>
						<Источник>03.4</Источник>
						<Приемник>ПрочиеДоходныеВложения</Приемник>
					</Значение>
					<Значение>
						<Код>22</Код>
						<Наименование>03.5 --&gt; 03.09</Наименование>
						<Порядок>2100</Порядок>
						<Источник>03.5</Источник>
						<Приемник>ВыбытиеМЦ</Приемник>
					</Значение>
					<Значение>
						<Код>23</Код>
						<Наименование>04.1 --&gt; 04.01</Наименование>
						<Порядок>2200</Порядок>
						<Источник>04.1</Источник>
						<Приемник>НематериальныеАктивыОрганизации</Приемник>
					</Значение>
					<Значение>
						<Код>24</Код>
						<Наименование>04.2 --&gt; 04.02</Наименование>
						<Порядок>2300</Порядок>
						<Источник>04.2</Источник>
						<Приемник>РасходыНаНИОКР</Приемник>
					</Значение>
					<Значение>
						<Код>25</Код>
						<Наименование>05 --&gt; 05</Наименование>
						<Порядок>2400</Порядок>
						<Источник>05</Источник>
						<Приемник>АмортизацияНематериальныхАктивов</Приемник>
					</Значение>
					<Значение>
						<Код>26</Код>
						<Наименование>07 --&gt; 07</Наименование>
						<Порядок>2500</Порядок>
						<Источник>07</Источник>
						<Приемник>ОборудованиеКУстановке</Приемник>
					</Значение>
					<Значение>
						<Код>27</Код>
						<Наименование>08.1 --&gt; 08.01</Наименование>
						<Порядок>2600</Порядок>
						<Источник>08.1</Источник>
						<Приемник>ПриобретениеЗемельныхУчастков</Приемник>
					</Значение>
					<Значение>
						<Код>28</Код>
						<Наименование>08.2 --&gt; 08.02</Наименование>
						<Порядок>2700</Порядок>
						<Источник>08.2</Источник>
						<Приемник>ПриобретениеОбъектовПриродопользования</Приемник>
					</Значение>
					<Значение>
						<Код>29</Код>
						<Наименование>08.3 --&gt; 08.03</Наименование>
						<Порядок>2800</Порядок>
						<Источник>08.3</Источник>
						<Приемник>СтроительствоОбъектовОсновныхСредств</Приемник>
					</Значение>
					<Значение>
						<Код>30</Код>
						<Наименование>08.4 --&gt; 08.04</Наименование>
						<Порядок>2900</Порядок>
						<Источник>08.4</Источник>
						<Приемник>ПриобретениеОбъектовОсновныхСредств</Приемник>
					</Значение>
					<Значение>
						<Код>31</Код>
						<Наименование>08.5 --&gt; 08.05</Наименование>
						<Порядок>3000</Порядок>
						<Источник>08.5</Источник>
						<Приемник>ПриобретениеНематериальныхАктивов</Приемник>
					</Значение>
					<Значение>
						<Код>32</Код>
						<Наименование>08.6 --&gt; 08.06</Наименование>
						<Порядок>3100</Порядок>
						<Источник>08.6</Источник>
						<Приемник>ПереводМолоднякаЖивотныхВОсновноеСтадо</Приемник>
					</Значение>
					<Значение>
						<Код>33</Код>
						<Наименование>08.7 --&gt; 08.07</Наименование>
						<Порядок>3200</Порядок>
						<Источник>08.7</Источник>
						<Приемник>ПриобретениеВзрослыхЖивотных</Приемник>
					</Значение>
					<Значение>
						<Код>34</Код>
						<Наименование>08.8 --&gt; 08.08</Наименование>
						<Порядок>3300</Порядок>
						<Источник>08.8</Источник>
						<Приемник>ВыполнениеНИОКР</Приемник>
					</Значение>
					<Значение>
						<Код>35</Код>
						<Наименование>09 --&gt; 09</Наименование>
						<Порядок>3400</Порядок>
						<Источник>09</Источник>
						<Приемник>ОтложенныеНалоговыеАктивы</Приемник>
					</Значение>
					<Значение>
						<Код>36</Код>
						<Наименование>10.1 --&gt; 10.01</Наименование>
						<Порядок>3500</Порядок>
						<Источник>10.1</Источник>
						<Приемник>СырьеИМатериалы</Приемник>
					</Значение>
					<Значение>
						<Код>37</Код>
						<Наименование>10.2 --&gt; 10.02</Наименование>
						<Порядок>3600</Порядок>
						<Источник>10.2</Источник>
						<Приемник>ПокупныеПолуфабрикатыИКомплектующие</Приемник>
					</Значение>
					<Значение>
						<Код>38</Код>
						<Наименование>10.3 --&gt; 10.03</Наименование>
						<Порядок>3700</Порядок>
						<Источник>10.3</Источник>
						<Приемник>Топливо</Приемник>
					</Значение>
					<Значение>
						<Код>39</Код>
						<Наименование>10.4 --&gt; 10.04</Наименование>
						<Порядок>3800</Порядок>
						<Источник>10.4</Источник>
						<Приемник>Тара</Приемник>
					</Значение>
					<Значение>
						<Код>40</Код>
						<Наименование>10.5 --&gt; 10.05</Наименование>
						<Порядок>3900</Порядок>
						<Источник>10.5</Источник>
						<Приемник>ЗапасныеЧасти</Приемник>
					</Значение>
					<Значение>
						<Код>41</Код>
						<Наименование>10.6 --&gt; 10.06</Наименование>
						<Порядок>4000</Порядок>
						<Источник>10.6</Источник>
						<Приемник>ПрочиеМатериалы</Приемник>
					</Значение>
					<Значение>
						<Код>42</Код>
						<Наименование>10.7 --&gt; 10.07</Наименование>
						<Порядок>4100</Порядок>
						<Источник>10.7</Источник>
						<Приемник>МатериалыПереданныеВПереработку</Приемник>
					</Значение>
					<Значение>
						<Код>43</Код>
						<Наименование>10.8 --&gt; 10.08</Наименование>
						<Порядок>4200</Порядок>
						<Источник>10.8</Источник>
						<Приемник>СтроительныеМатериалы</Приемник>
					</Значение>
					<Значение>
						<Код>44</Код>
						<Наименование>10.9 --&gt; 10.09</Наименование>
						<Порядок>4300</Порядок>
						<Источник>10.9</Источник>
						<Приемник>ИнвентарьИХозяйственныеПринадлежности</Приемник>
					</Значение>
					<Значение>
						<Код>45</Код>
						<Наименование>11 --&gt; 11</Наименование>
						<Порядок>4400</Порядок>
						<Источник>11</Источник>
						<Приемник>ЖивотныеНаВыращиванииИОткорме</Приемник>
					</Значение>
					<Значение>
						<Код>46</Код>
						<Наименование>14.1 --&gt; 14.01</Наименование>
						<Порядок>4500</Порядок>
						<Источник>14.1</Источник>
						<Приемник>РезервыПодСнижениеСтоимостиМатериалов</Приемник>
					</Значение>
					<Значение>
						<Код>47</Код>
						<Наименование>14.2 --&gt; 14.02</Наименование>
						<Порядок>4600</Порядок>
						<Источник>14.2</Источник>
						<Приемник>РезервыПодСнижениеСтоимостиТоваров</Приемник>
					</Значение>
					<Значение>
						<Код>48</Код>
						<Наименование>14.3 --&gt; 14.03</Наименование>
						<Порядок>4700</Порядок>
						<Источник>14.3</Источник>
						<Приемник>РезервыПодСнижениеСтоимостиГотовойПродукции</Приемник>
					</Значение>
					<Значение>
						<Код>49</Код>
						<Наименование>14.4 --&gt; 14.04</Наименование>
						<Порядок>4800</Порядок>
						<Источник>14.4</Источник>
						<Приемник>РезервыПодСнижениеСтоимостиНезавершенногоПроизводства</Приемник>
					</Значение>
					<Значение>
						<Код>50</Код>
						<Наименование>15.1 --&gt; 15.01</Наименование>
						<Порядок>4900</Порядок>
						<Источник>15.1</Источник>
						<Приемник>ЗаготовлениеИПриобретениеМатериалов</Приемник>
					</Значение>
					<Значение>
						<Код>51</Код>
						<Наименование>15.2 --&gt; 15.02</Наименование>
						<Порядок>5000</Порядок>
						<Источник>15.2</Источник>
						<Приемник>ПриобретениеТоваров</Приемник>
					</Значение>
					<Значение>
						<Код>52</Код>
						<Наименование>16.1 --&gt; 16.01</Наименование>
						<Порядок>5100</Порядок>
						<Источник>16.1</Источник>
						<Приемник>ОтклонениеВСтоимостиМатериалов</Приемник>
					</Значение>
					<Значение>
						<Код>53</Код>
						<Наименование>16.2 --&gt; 16.02</Наименование>
						<Порядок>5200</Порядок>
						<Источник>16.2</Источник>
						<Приемник>ОтклонениеВСтоимостиТоваров</Приемник>
					</Значение>
					<Значение>
						<Код>54</Код>
						<Наименование>16.3 --&gt; 16.02</Наименование>
						<Порядок>5300</Порядок>
						<Источник>16.3</Источник>
						<Приемник>ОтклонениеВСтоимостиТоваров</Приемник>
					</Значение>
					<Значение>
						<Код>55</Код>
						<Наименование>19.1 --&gt; 19.01</Наименование>
						<Порядок>5400</Порядок>
						<Источник>19.1</Источник>
						<Приемник>НДСприПриобретенииОсновныхСредств</Приемник>
					</Значение>
					<Значение>
						<Код>56</Код>
						<Наименование>19.2 --&gt; 19.02</Наименование>
						<Порядок>5500</Порядок>
						<Источник>19.2</Источник>
						<Приемник>НДСпоПриобретеннымНематериальнымАктивам</Приемник>
					</Значение>
					<Значение>
						<Код>57</Код>
						<Наименование>19.3 --&gt; 19.03</Наименование>
						<Порядок>5600</Порядок>
						<Источник>19.3</Источник>
						<Приемник>НДСпоПриобретеннымМПЗ</Приемник>
					</Значение>
					<Значение>
						<Код>58</Код>
						<Наименование>19.4 --&gt; 19.04</Наименование>
						<Порядок>5700</Порядок>
						<Источник>19.4</Источник>
						<Приемник>НДСуплачиваемыйТаможеннымОрганам</Приемник>
					</Значение>
					<Значение>
						<Код>59</Код>
						<Наименование>19.5 --&gt; 19.05</Наименование>
						<Порядок>5800</Порядок>
						<Источник>19.5</Источник>
						<Приемник>АкцизыПоОплаченнымМатериальнымЦенностям</Приемник>
					</Значение>
					<Значение>
						<Код>60</Код>
						<Наименование>20 --&gt; 20.01</Наименование>
						<Порядок>5900</Порядок>
						<Источник>20</Источник>
						<Приемник>ОсновноеПроизводство</Приемник>
					</Значение>
					<Значение>
						<Код>61</Код>
						<Наименование>21 --&gt; 21</Наименование>
						<Порядок>6000</Порядок>
						<Источник>21</Источник>
						<Приемник>Полуфабрикаты</Приемник>
					</Значение>
					<Значение>
						<Код>62</Код>
						<Наименование>23 --&gt; 23</Наименование>
						<Порядок>6100</Порядок>
						<Источник>23</Источник>
						<Приемник>ВспомогательныеПроизводства</Приемник>
					</Значение>
					<Значение>
						<Код>63</Код>
						<Наименование>25 --&gt; 25</Наименование>
						<Порядок>6200</Порядок>
						<Источник>25</Источник>
						<Приемник>ОбщепроизводственныеРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>64</Код>
						<Наименование>26 --&gt; 26</Наименование>
						<Порядок>6300</Порядок>
						<Источник>26</Источник>
						<Приемник>ОбщехозяйственныеРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>65</Код>
						<Наименование>28 --&gt; 28</Наименование>
						<Порядок>6400</Порядок>
						<Источник>28</Источник>
						<Приемник>БракВПроизводстве</Приемник>
					</Значение>
					<Значение>
						<Код>66</Код>
						<Наименование>29 --&gt; 29</Наименование>
						<Порядок>6500</Порядок>
						<Источник>29</Источник>
						<Приемник>ОбслуживающиеПроизводства</Приемник>
					</Значение>
					<Значение>
						<Код>67</Код>
						<Наименование>40 --&gt; 40</Наименование>
						<Порядок>6600</Порядок>
						<Источник>40</Источник>
						<Приемник>ВыпускПродукции</Приемник>
					</Значение>
					<Значение>
						<Код>68</Код>
						<Наименование>41.1 --&gt; 41.01</Наименование>
						<Порядок>6700</Порядок>
						<Источник>41.1</Источник>
						<Приемник>ТоварыНаСкладах</Приемник>
					</Значение>
					<Значение>
						<Код>69</Код>
						<Наименование>41.2 --&gt; 41.02</Наименование>
						<Порядок>6800</Порядок>
						<Источник>41.2</Источник>
						<Приемник>ТоварыВРозничнойТорговле</Приемник>
					</Значение>
					<Значение>
						<Код>70</Код>
						<Наименование>41.3 --&gt; 41.03</Наименование>
						<Порядок>6900</Порядок>
						<Источник>41.3</Источник>
						<Приемник>ТараПодТоваромИПорожняя</Приемник>
					</Значение>
					<Значение>
						<Код>71</Код>
						<Наименование>41.4 --&gt; 41.04</Наименование>
						<Порядок>7000</Порядок>
						<Источник>41.4</Источник>
						<Приемник>ПокупныеИзделия</Приемник>
					</Значение>
					<Значение>
						<Код>72</Код>
						<Наименование>41.5 --&gt; 41.01</Наименование>
						<Порядок>7100</Порядок>
						<Источник>41.5</Источник>
						<Приемник>ТоварыНаСкладах</Приемник>
					</Значение>
					<Значение>
						<Код>73</Код>
						<Наименование>42 --&gt; 42</Наименование>
						<Порядок>7200</Порядок>
						<Источник>42</Источник>
						<Приемник>ТорговаяНаценкаНТТ</Приемник>
					</Значение>
					<Значение>
						<Код>74</Код>
						<Наименование>43 --&gt; 43</Наименование>
						<Порядок>7300</Порядок>
						<Источник>43</Источник>
						<Приемник>ГотоваяПродукция</Приемник>
					</Значение>
					<Значение>
						<Код>75</Код>
						<Наименование>44.1.1 --&gt; 44.01</Наименование>
						<Порядок>7400</Порядок>
						<Источник>44.1.1</Источник>
						<Приемник>ИздержкиОбращения</Приемник>
					</Значение>
					<Значение>
						<Код>76</Код>
						<Наименование>44.1.2 --&gt; 44.01</Наименование>
						<Порядок>7500</Порядок>
						<Источник>44.1.2</Источник>
						<Приемник>ИздержкиОбращения</Приемник>
					</Значение>
					<Значение>
						<Код>77</Код>
						<Наименование>44.1.3 --&gt; 44.01</Наименование>
						<Порядок>7600</Порядок>
						<Источник>44.1.3</Источник>
						<Приемник>ИздержкиОбращения</Приемник>
					</Значение>
					<Значение>
						<Код>78</Код>
						<Наименование>44.2 --&gt; 44.02</Наименование>
						<Порядок>7700</Порядок>
						<Источник>44.2</Источник>
						<Приемник>КоммерческиеРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>79</Код>
						<Наименование>44.3 --&gt; 44.02</Наименование>
						<Порядок>7800</Порядок>
						<Источник>44.3</Источник>
						<Приемник>КоммерческиеРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>80</Код>
						<Наименование>45 --&gt; 45.01</Наименование>
						<Порядок>7900</Порядок>
						<Источник>45</Источник>
						<Приемник>ПокупныеТоварыОтгруженные</Приемник>
					</Значение>
					<Значение>
						<Код>81</Код>
						<Наименование>46 --&gt; 46</Наименование>
						<Порядок>8000</Порядок>
						<Источник>46</Источник>
						<Приемник>ВыполненныеЭтапыПоНезавершеннымРаботам</Приемник>
					</Значение>
					<Значение>
						<Код>82</Код>
						<Наименование>50.1 --&gt; 50.01</Наименование>
						<Порядок>8100</Порядок>
						<Источник>50.1</Источник>
						<Приемник>КассаОрганизации</Приемник>
					</Значение>
					<Значение>
						<Код>83</Код>
						<Наименование>50.11 --&gt; 50.21</Наименование>
						<Порядок>8200</Порядок>
						<Источник>50.11</Источник>
						<Приемник>КассаОрганизацииВал</Приемник>
					</Значение>
					<Значение>
						<Код>84</Код>
						<Наименование>50.2 --&gt; 50.02</Наименование>
						<Порядок>8300</Порядок>
						<Источник>50.2</Источник>
						<Приемник>ОперационнаяКасса</Приемник>
					</Значение>
					<Значение>
						<Код>85</Код>
						<Наименование>50.3 --&gt; 50.03</Наименование>
						<Порядок>8400</Порядок>
						<Источник>50.3</Источник>
						<Приемник>ДенежныеДокументы</Приемник>
					</Значение>
					<Значение>
						<Код>86</Код>
						<Наименование>50.33 --&gt; 50.23</Наименование>
						<Порядок>8500</Порядок>
						<Источник>50.33</Источник>
						<Приемник>ДенежныеДокументыВал</Приемник>
					</Значение>
					<Значение>
						<Код>87</Код>
						<Наименование>51 --&gt; 51</Наименование>
						<Порядок>8600</Порядок>
						<Источник>51</Источник>
						<Приемник>РасчетныеСчета</Приемник>
					</Значение>
					<Значение>
						<Код>88</Код>
						<Наименование>52 --&gt; 52</Наименование>
						<Порядок>8700</Порядок>
						<Источник>52</Источник>
						<Приемник>ВалютныеСчета</Приемник>
					</Значение>
					<Значение>
						<Код>89</Код>
						<Наименование>55.1 --&gt; 55.01</Наименование>
						<Порядок>8800</Порядок>
						<Источник>55.1</Источник>
						<Приемник>Аккредитивы</Приемник>
					</Значение>
					<Значение>
						<Код>90</Код>
						<Наименование>55.11 --&gt; 55.21</Наименование>
						<Порядок>8900</Порядок>
						<Источник>55.11</Источник>
						<Приемник>АккредитивыВал</Приемник>
					</Значение>
					<Значение>
						<Код>91</Код>
						<Наименование>55.2 --&gt; 55.02</Наименование>
						<Порядок>9000</Порядок>
						<Источник>55.2</Источник>
						<Приемник>ЧековыеКнижки</Приемник>
					</Значение>
					<Значение>
						<Код>92</Код>
						<Наименование>55.3 --&gt; 55.03</Наименование>
						<Порядок>9100</Порядок>
						<Источник>55.3</Источник>
						<Приемник>ДепозитныеСчета</Приемник>
					</Значение>
					<Значение>
						<Код>93</Код>
						<Наименование>55.33 --&gt; 55.23</Наименование>
						<Порядок>9200</Порядок>
						<Источник>55.33</Источник>
						<Приемник>ДепозитныеСчетаВал</Приемник>
					</Значение>
					<Значение>
						<Код>94</Код>
						<Наименование>55.4 --&gt; 55.04</Наименование>
						<Порядок>9300</Порядок>
						<Источник>55.4</Источник>
						<Приемник>ПрочиеСпециальныеСчета</Приемник>
					</Значение>
					<Значение>
						<Код>95</Код>
						<Наименование>55.44 --&gt; 55.24</Наименование>
						<Порядок>9400</Порядок>
						<Источник>55.44</Источник>
						<Приемник>ПрочиеСпециальныеСчетаВал</Приемник>
					</Значение>
					<Значение>
						<Код>96</Код>
						<Наименование>57.1 --&gt; 57.01</Наименование>
						<Порядок>9500</Порядок>
						<Источник>57.1</Источник>
						<Приемник>ПереводыВПути</Приемник>
					</Значение>
					<Значение>
						<Код>97</Код>
						<Наименование>57.11 --&gt; 57.02</Наименование>
						<Порядок>9600</Порядок>
						<Источник>57.11</Источник>
						<Приемник>ПереводыВПутиВал</Приемник>
					</Значение>
					<Значение>
						<Код>98</Код>
						<Наименование>58.1.1 --&gt; 58.01.1</Наименование>
						<Порядок>9700</Порядок>
						<Источник>58.1.1</Источник>
						<Приемник>Паи</Приемник>
					</Значение>
					<Значение>
						<Код>99</Код>
						<Наименование>58.1.2 --&gt; 58.01.2</Наименование>
						<Порядок>9800</Порядок>
						<Источник>58.1.2</Источник>
						<Приемник>Акции</Приемник>
					</Значение>
					<Значение>
						<Код>100</Код>
						<Наименование>58.2 --&gt; 58.02</Наименование>
						<Порядок>9900</Порядок>
						<Источник>58.2</Источник>
						<Приемник>ДолговыеЦенныеБумаги</Приемник>
					</Значение>
					<Значение>
						<Код>101</Код>
						<Наименование>58.3 --&gt; 58.03</Наименование>
						<Порядок>10000</Порядок>
						<Источник>58.3</Источник>
						<Приемник>ПредоставленныеЗаймы</Приемник>
					</Значение>
					<Значение>
						<Код>102</Код>
						<Наименование>58.4 --&gt; 58.04</Наименование>
						<Порядок>10100</Порядок>
						<Источник>58.4</Источник>
						<Приемник>ВкладыПоДоговоруПростогоТоварищества</Приемник>
					</Значение>
					<Значение>
						<Код>103</Код>
						<Наименование>58.5 --&gt; 58.05</Наименование>
						<Порядок>10200</Порядок>
						<Источник>58.5</Источник>
						<Приемник>ПриобретенныеПрава</Приемник>
					</Значение>
					<Значение>
						<Код>104</Код>
						<Наименование>59 --&gt; 59</Наименование>
						<Порядок>10300</Порядок>
						<Источник>59</Источник>
						<Приемник>РезервыПодОбесценениеФинансовыхВложений</Приемник>
					</Значение>
					<Значение>
						<Код>105</Код>
						<Наименование>60.1 --&gt; 60.01</Наименование>
						<Порядок>10400</Порядок>
						<Источник>60.1</Источник>
						<Приемник>РасчетыСПоставщиками</Приемник>
					</Значение>
					<Значение>
						<Код>106</Код>
						<Наименование>60.11 --&gt; 60.21</Наименование>
						<Порядок>10500</Порядок>
						<Источник>60.11</Источник>
						<Приемник>РасчетыСПоставщикамиВал</Приемник>
					</Значение>
					<Значение>
						<Код>107</Код>
						<Наименование>60.2 --&gt; 60.02</Наименование>
						<Порядок>10600</Порядок>
						<Источник>60.2</Источник>
						<Приемник>РасчетыПоАвансамВыданным</Приемник>
					</Значение>
					<Значение>
						<Код>108</Код>
						<Наименование>60.22 --&gt; 60.22</Наименование>
						<Порядок>10700</Порядок>
						<Источник>60.22</Источник>
						<Приемник>РасчетыПоАвансамВыданнымВал</Приемник>
					</Значение>
					<Значение>
						<Код>109</Код>
						<Наименование>60.3 --&gt; 60.03</Наименование>
						<Порядок>10800</Порядок>
						<Источник>60.3</Источник>
						<Приемник>ВекселяВыданные</Приемник>
					</Значение>
					<Значение>
						<Код>110</Код>
						<Наименование>60.6 --&gt; 60.31</Наименование>
						<Порядок>10900</Порядок>
						<Источник>60.6</Источник>
						<Приемник>РасчетыСПоставщикамиУЕ</Приемник>
					</Значение>
					<Значение>
						<Код>111</Код>
						<Наименование>60.7 --&gt; 60.32</Наименование>
						<Порядок>11000</Порядок>
						<Источник>60.7</Источник>
						<Приемник>РасчетыПоАвансамВыданнымУЕ</Приемник>
					</Значение>
					<Значение>
						<Код>112</Код>
						<Наименование>62.1 --&gt; 62.01</Наименование>
						<Порядок>11100</Порядок>
						<Источник>62.1</Источник>
						<Приемник>РасчетыСПокупателями</Приемник>
					</Значение>
					<Значение>
						<Код>113</Код>
						<Наименование>62.11 --&gt; 62.21</Наименование>
						<Порядок>11200</Порядок>
						<Источник>62.11</Источник>
						<Приемник>РасчетыСПокупателямиВал</Приемник>
					</Значение>
					<Значение>
						<Код>114</Код>
						<Наименование>62.2 --&gt; 60.02</Наименование>
						<Порядок>11300</Порядок>
						<Источник>62.2</Источник>
						<Приемник>РасчетыПоАвансамПолученным</Приемник>
					</Значение>
					<Значение>
						<Код>115</Код>
						<Наименование>62.22 --&gt; 60.22</Наименование>
						<Порядок>11400</Порядок>
						<Источник>62.22</Источник>
						<Приемник>РасчетыПоАвансамПолученнымВал</Приемник>
					</Значение>
					<Значение>
						<Код>116</Код>
						<Наименование>62.3 --&gt; 62.03</Наименование>
						<Порядок>11500</Порядок>
						<Источник>62.3</Источник>
						<Приемник>ВекселяПолученные</Приемник>
					</Значение>
					<Значение>
						<Код>117</Код>
						<Наименование>62.4 --&gt; 62.01</Наименование>
						<Порядок>11600</Порядок>
						<Источник>62.4</Источник>
						<Приемник>РасчетыСПокупателями</Приемник>
					</Значение>
					<Значение>
						<Код>118</Код>
						<Наименование>62.44 --&gt; 62.21</Наименование>
						<Порядок>11700</Порядок>
						<Источник>62.44</Источник>
						<Приемник>РасчетыСПокупателямиВал</Приемник>
					</Значение>
					<Значение>
						<Код>119</Код>
						<Наименование>62.6 --&gt; 62.31</Наименование>
						<Порядок>11800</Порядок>
						<Источник>62.6</Источник>
						<Приемник>РасчетыСПокупателямиУЕ</Приемник>
					</Значение>
					<Значение>
						<Код>120</Код>
						<Наименование>62.7 --&gt; 62.32</Наименование>
						<Порядок>11900</Порядок>
						<Источник>62.7</Источник>
						<Приемник>РасчетыПоАвансамПолученнымУЕ</Приемник>
					</Значение>
					<Значение>
						<Код>121</Код>
						<Наименование>62.8 --&gt; 62.31</Наименование>
						<Порядок>12000</Порядок>
						<Источник>62.8</Источник>
						<Приемник>РасчетыСПокупателямиУЕ</Приемник>
					</Значение>
					<Значение>
						<Код>122</Код>
						<Наименование>63 --&gt; 63</Наименование>
						<Порядок>12100</Порядок>
						<Источник>63</Источник>
						<Приемник>РезервыПоСомнительнымДолгам</Приемник>
					</Значение>
					<Значение>
						<Код>123</Код>
						<Наименование>66.1 --&gt; 66.01</Наименование>
						<Порядок>12200</Порядок>
						<Источник>66.1</Источник>
						<Приемник>КраткосрочныеКредиты</Приемник>
					</Значение>
					<Значение>
						<Код>124</Код>
						<Наименование>66.11 --&gt; 66.21</Наименование>
						<Порядок>12300</Порядок>
						<Источник>66.11</Источник>
						<Приемник>КраткосрочныеКредитыВал</Приемник>
					</Значение>
					<Значение>
						<Код>125</Код>
						<Наименование>66.2 --&gt; 66.02</Наименование>
						<Порядок>12400</Порядок>
						<Источник>66.2</Источник>
						<Приемник>ПроцентыПоКраткосрочнымКредитам</Приемник>
					</Значение>
					<Значение>
						<Код>126</Код>
						<Наименование>66.22 --&gt; 66.22</Наименование>
						<Порядок>12500</Порядок>
						<Источник>66.22</Источник>
						<Приемник>ПроцентыПоКраткосрочнымКредитамВал</Приемник>
					</Значение>
					<Значение>
						<Код>127</Код>
						<Наименование>66.3 --&gt; 66.03</Наименование>
						<Порядок>12600</Порядок>
						<Источник>66.3</Источник>
						<Приемник>КраткосрочныеЗаймы</Приемник>
					</Значение>
					<Значение>
						<Код>128</Код>
						<Наименование>66.33 --&gt; 66.23</Наименование>
						<Порядок>12700</Порядок>
						<Источник>66.33</Источник>
						<Приемник>КраткосрочныеЗаймыВал</Приемник>
					</Значение>
					<Значение>
						<Код>129</Код>
						<Наименование>66.4 --&gt; 66.04</Наименование>
						<Порядок>12800</Порядок>
						<Источник>66.4</Источник>
						<Приемник>ПроцентыПоКраткосрочнымЗаймам</Приемник>
					</Значение>
					<Значение>
						<Код>130</Код>
						<Наименование>66.44 --&gt; 66.24</Наименование>
						<Порядок>12900</Порядок>
						<Источник>66.44</Источник>
						<Приемник>ПроцентыПоКраткосрочнымЗаймамВал</Приемник>
					</Значение>
					<Значение>
						<Код>131</Код>
						<Наименование>66.5 --&gt; 66.03</Наименование>
						<Порядок>13000</Порядок>
						<Источник>66.5</Источник>
						<Приемник>КраткосрочныеЗаймы</Приемник>
					</Значение>
					<Значение>
						<Код>132</Код>
						<Наименование>66.6 --&gt; 66.04</Наименование>
						<Порядок>13100</Порядок>
						<Источник>66.6</Источник>
						<Приемник>ПроцентыПоКраткосрочнымЗаймам</Приемник>
					</Значение>
					<Значение>
						<Код>133</Код>
						<Наименование>67.1 --&gt; 67.01</Наименование>
						<Порядок>13200</Порядок>
						<Источник>67.1</Источник>
						<Приемник>ДолгосрочныеКредиты</Приемник>
					</Значение>
					<Значение>
						<Код>134</Код>
						<Наименование>67.11 --&gt; 67.21</Наименование>
						<Порядок>13300</Порядок>
						<Источник>67.11</Источник>
						<Приемник>ДолгосрочныеКредитыВал</Приемник>
					</Значение>
					<Значение>
						<Код>135</Код>
						<Наименование>67.2 --&gt; 67.02</Наименование>
						<Порядок>13400</Порядок>
						<Источник>67.2</Источник>
						<Приемник>ПроцентыПоДолгосрочнымКредитам</Приемник>
					</Значение>
					<Значение>
						<Код>136</Код>
						<Наименование>67.22 --&gt; 67.22</Наименование>
						<Порядок>13500</Порядок>
						<Источник>67.22</Источник>
						<Приемник>ПроцентыПоДолгосрочнымКредитамВал</Приемник>
					</Значение>
					<Значение>
						<Код>137</Код>
						<Наименование>67.3 --&gt; 67.03</Наименование>
						<Порядок>13600</Порядок>
						<Источник>67.3</Источник>
						<Приемник>ДолгосрочныеЗаймы</Приемник>
					</Значение>
					<Значение>
						<Код>138</Код>
						<Наименование>67.33 --&gt; 67.23</Наименование>
						<Порядок>13700</Порядок>
						<Источник>67.33</Источник>
						<Приемник>ДолгосрочныеЗаймыВал</Приемник>
					</Значение>
					<Значение>
						<Код>139</Код>
						<Наименование>67.4 --&gt; 67.04</Наименование>
						<Порядок>13800</Порядок>
						<Источник>67.4</Источник>
						<Приемник>ПроцентыПоДолгосрочнымЗаймам</Приемник>
					</Значение>
					<Значение>
						<Код>140</Код>
						<Наименование>67.44 --&gt; 67.24</Наименование>
						<Порядок>13900</Порядок>
						<Источник>67.44</Источник>
						<Приемник>ПроцентыПоДолгосрочнымЗаймамВал</Приемник>
					</Значение>
					<Значение>
						<Код>141</Код>
						<Наименование>67.5 --&gt; 67.03</Наименование>
						<Порядок>14000</Порядок>
						<Источник>67.5</Источник>
						<Приемник>ДолгосрочныеЗаймы</Приемник>
					</Значение>
					<Значение>
						<Код>142</Код>
						<Наименование>67.6 --&gt; 67.04</Наименование>
						<Порядок>14100</Порядок>
						<Источник>67.6</Источник>
						<Приемник>ПроцентыПоДолгосрочнымЗаймам</Приемник>
					</Значение>
					<Значение>
						<Код>143</Код>
						<Наименование>68.1 --&gt; 68.01</Наименование>
						<Порядок>14200</Порядок>
						<Источник>68.1</Источник>
						<Приемник>НДФЛ</Приемник>
					</Значение>
					<Значение>
						<Код>144</Код>
						<Наименование>68.10 --&gt; 68.10</Наименование>
						<Порядок>14300</Порядок>
						<Источник>68.10</Источник>
						<Приемник>ПрочиеНалогиИСборы</Приемник>
					</Значение>
					<Значение>
						<Код>145</Код>
						<Наименование>68.2 --&gt; 68.02</Наименование>
						<Порядок>14400</Порядок>
						<Источник>68.2</Источник>
						<Приемник>НДС</Приемник>
					</Значение>
					<Значение>
						<Код>146</Код>
						<Наименование>68.3 --&gt; 68.03</Наименование>
						<Порядок>14500</Порядок>
						<Источник>68.3</Источник>
						<Приемник>Акцизы</Приемник>
					</Значение>
					<Значение>
						<Код>147</Код>
						<Наименование>68.4.1 --&gt; 68.04.1</Наименование>
						<Порядок>14600</Порядок>
						<Источник>68.4.1</Источник>
						<Приемник>РасчетыСБюджетом</Приемник>
					</Значение>
					<Значение>
						<Код>148</Код>
						<Наименование>68.4.2 --&gt; 68.04.2</Наименование>
						<Порядок>14700</Порядок>
						<Источник>68.4.2</Источник>
						<Приемник>РасчетНалогаНаПрибыль</Приемник>
					</Значение>
					<Значение>
						<Код>149</Код>
						<Наименование>68.5 --&gt; 68.10</Наименование>
						<Порядок>14800</Порядок>
						<Источник>68.5</Источник>
						<Приемник>ПрочиеНалогиИСборы</Приемник>
					</Значение>
					<Значение>
						<Код>150</Код>
						<Наименование>68.7 --&gt; 68.07</Наименование>
						<Порядок>14900</Порядок>
						<Источник>68.7</Источник>
						<Приемник>ТранспортныйНалог</Приемник>
					</Значение>
					<Значение>
						<Код>151</Код>
						<Наименование>68.8 --&gt; 68.08</Наименование>
						<Порядок>15000</Порядок>
						<Источник>68.8</Источник>
						<Приемник>НалогНаИмущество</Приемник>
					</Значение>
					<Значение>
						<Код>312</Код>
						<Наименование>69.1 --&gt; 69.01</Наименование>
						<Порядок>15100</Порядок>
						<Источник>69.21.5</Источник>
						<Приемник>ФСС</Приемник>
					</Значение>
					<Значение>
						<Код>152</Код>
						<Наименование>69.1 --&gt; 69.01</Наименование>
						<Порядок>15100</Порядок>
						<Источник>69.1</Источник>
						<Приемник>ФСС</Приемник>
					</Значение>
					<Значение>
						<Код>153</Код>
						<Наименование>69.11 --&gt; 69.11</Наименование>
						<Порядок>15200</Порядок>
						<Источник>69.11</Источник>
						<Приемник>ФСС_НСиПЗ</Приемник>
					</Значение>
					<Значение>
						<Код>154</Код>
						<Наименование>69.2.1 --&gt; 69.04</Наименование>
						<Порядок>15300</Порядок>
						<Источник>69.2.1</Источник>
						<Приемник>ЕСН_ФБ</Приемник>
					</Значение>
					<Значение>
						<Код>155</Код>
						<Наименование>69.2.2 --&gt; 69.02.1</Наименование>
						<Порядок>15400</Порядок>
						<Источник>69.2.2</Источник>
						<Приемник>ПФР_страх</Приемник>
					</Значение>
					<Значение>
						<Код>313</Код>
						<Наименование>69.2.2 --&gt; 69.02.1</Наименование>
						<Порядок>15400</Порядок>
						<Источник>69.21.1</Источник>
						<Приемник>ПФР_страх</Приемник>
					</Значение>
					<Значение>
						<Код>156</Код>
						<Наименование>69.2.3 --&gt; 69.02.2</Наименование>
						<Порядок>15500</Порядок>
						<Источник>69.2.3</Источник>
						<Приемник>ПФР_нак</Приемник>
					</Значение>
					<Значение>
						<Код>314</Код>
						<Наименование>69.2.3 --&gt; 69.02.2</Наименование>
						<Порядок>15500</Порядок>
						<Источник>69.21.2</Источник>
						<Приемник>ПФР_нак</Приемник>
					</Значение>
					<Значение>
						<Код>315</Код>
						<Наименование>69.3.1 --&gt; 69.03.1</Наименование>
						<Порядок>15600</Порядок>
						<Источник>69.21.3</Источник>
						<Приемник>ФФОМС</Приемник>
					</Значение>
					<Значение>
						<Код>157</Код>
						<Наименование>69.3.1 --&gt; 69.03.1</Наименование>
						<Порядок>15600</Порядок>
						<Источник>69.3.1</Источник>
						<Приемник>ФФОМС</Приемник>
					</Значение>
					<Значение>
						<Код>316</Код>
						<Наименование>69.3.2 --&gt; 69.03.2</Наименование>
						<Порядок>15700</Порядок>
						<Источник>69.21.4</Источник>
						<Приемник>ТФОМС</Приемник>
					</Значение>
					<Значение>
						<Код>158</Код>
						<Наименование>69.3.2 --&gt; 69.03.2</Наименование>
						<Порядок>15700</Порядок>
						<Источник>69.3.2</Источник>
						<Приемник>ТФОМС</Приемник>
					</Значение>
					<Значение>
						<Код>159</Код>
						<Наименование>70 --&gt; 70</Наименование>
						<Порядок>15800</Порядок>
						<Источник>70</Источник>
						<Приемник>РасчетыСПерсоналомПоОплатеТруда</Приемник>
					</Значение>
					<Значение>
						<Код>160</Код>
						<Наименование>71.1 --&gt; 71.01</Наименование>
						<Порядок>15900</Порядок>
						<Источник>71.1</Источник>
						<Приемник>РасчетыСПодотчетнымиЛицами</Приемник>
					</Значение>
					<Значение>
						<Код>161</Код>
						<Наименование>71.11 --&gt; 71.21</Наименование>
						<Порядок>16000</Порядок>
						<Источник>71.11</Источник>
						<Приемник>РасчетыСПодотчетнымиЛицамиВал</Приемник>
					</Значение>
					<Значение>
						<Код>162</Код>
						<Наименование>73.1 --&gt; 73.01</Наименование>
						<Порядок>16100</Порядок>
						<Источник>73.1</Источник>
						<Приемник>РасчетыПоПредоставленнымЗаймам</Приемник>
					</Значение>
					<Значение>
						<Код>163</Код>
						<Наименование>73.2 --&gt; 73.02</Наименование>
						<Порядок>16200</Порядок>
						<Источник>73.2</Источник>
						<Приемник>РасчетыПоВозмещениюМатериальногоУщерба</Приемник>
					</Значение>
					<Значение>
						<Код>164</Код>
						<Наименование>73.3 --&gt; 73.03</Наименование>
						<Порядок>16300</Порядок>
						<Источник>73.3</Источник>
						<Приемник>РасчетыПоПрочимОперациям</Приемник>
					</Значение>
					<Значение>
						<Код>165</Код>
						<Наименование>75.1 --&gt; 75.01</Наименование>
						<Порядок>16400</Порядок>
						<Источник>75.1</Источник>
						<Приемник>РасчетыПоВкладамВУставныйКапитал</Приемник>
					</Значение>
					<Значение>
						<Код>166</Код>
						<Наименование>75.2 --&gt; 75.02</Наименование>
						<Порядок>16500</Порядок>
						<Источник>75.2</Источник>
						<Приемник>РасчетыПоВыплатеДоходов</Приемник>
					</Значение>
					<Значение>
						<Код>167</Код>
						<Наименование>75.3 --&gt; 75.01</Наименование>
						<Порядок>16600</Порядок>
						<Источник>75.3</Источник>
						<Приемник>РасчетыПоВкладамВУставныйКапитал</Приемник>
					</Значение>
					<Значение>
						<Код>168</Код>
						<Наименование>76.1.1 --&gt; 76.01</Наименование>
						<Порядок>16700</Порядок>
						<Источник>76.1.1</Источник>
						<Приемник>РасчетыПоИмущественномуИЛичномуСтрахованию</Приемник>
					</Значение>
					<Значение>
						<Код>169</Код>
						<Наименование>76.1.2 --&gt; 76.01</Наименование>
						<Порядок>16800</Порядок>
						<Источник>76.1.2</Источник>
						<Приемник>РасчетыПоИмущественномуИЛичномуСтрахованию</Приемник>
					</Значение>
					<Значение>
						<Код>170</Код>
						<Наименование>76.1.3 --&gt; 76.01</Наименование>
						<Порядок>16900</Порядок>
						<Источник>76.1.3</Источник>
						<Приемник>РасчетыПоИмущественномуИЛичномуСтрахованию</Приемник>
					</Значение>
					<Значение>
						<Код>171</Код>
						<Наименование>76.1.4 --&gt; 76.01</Наименование>
						<Порядок>17000</Порядок>
						<Источник>76.1.4</Источник>
						<Приемник>РасчетыПоИмущественномуИЛичномуСтрахованию</Приемник>
					</Значение>
					<Значение>
						<Код>172</Код>
						<Наименование>76.11 --&gt; 76.21</Наименование>
						<Порядок>17100</Порядок>
						<Источник>76.11</Источник>
						<Приемник>РасчетыПоИмущественномуИЛичномуСтрахованиюВал</Приемник>
					</Значение>
					<Значение>
						<Код>173</Код>
						<Наименование>76.2 --&gt; 76.02</Наименование>
						<Порядок>17200</Порядок>
						<Источник>76.2</Источник>
						<Приемник>РасчетыПоПретензиям</Приемник>
					</Значение>
					<Значение>
						<Код>174</Код>
						<Наименование>76.22 --&gt; 76.22</Наименование>
						<Порядок>17300</Порядок>
						<Источник>76.22</Источник>
						<Приемник>РасчетыПоПретензиямВал</Приемник>
					</Значение>
					<Значение>
						<Код>175</Код>
						<Наименование>76.3 --&gt; 76.03</Наименование>
						<Порядок>17400</Порядок>
						<Источник>76.3</Источник>
						<Приемник>РасчетыПоПричитающимсяДивидендам</Приемник>
					</Значение>
					<Значение>
						<Код>176</Код>
						<Наименование>76.4 --&gt; 76.04</Наименование>
						<Порядок>17500</Порядок>
						<Источник>76.4</Источник>
						<Приемник>РасчетыПоДепонированнымСуммам</Приемник>
					</Значение>
					<Значение>
						<Код>177</Код>
						<Наименование>76.5 --&gt; 76.09</Наименование>
						<Порядок>17600</Порядок>
						<Источник>76.5</Источник>
						<Приемник>ПрочиеРасчетыСРазнымиДебиторамиИКредиторами</Приемник>
					</Значение>
					<Значение>
						<Код>178</Код>
						<Наименование>76.55 --&gt; 76.25</Наименование>
						<Порядок>17700</Порядок>
						<Источник>76.55</Источник>
						<Приемник>ПрочиеРасчетыСРазнымиДебиторамиИКредиторамиВал</Приемник>
					</Значение>
					<Значение>
						<Код>179</Код>
						<Наименование>76.6 --&gt; 76.06</Наименование>
						<Порядок>17800</Порядок>
						<Источник>76.6</Источник>
						<Приемник>ПрочиеРасчетыСРазнымиДебиторамиИКредиторамиУЕ</Приемник>
					</Значение>
					<Значение>
						<Код>317</Код>
						<Наименование>76.АВ --&gt; 76.АВ</Наименование>
						<Порядок>17900</Порядок>
						<Источник>76.ВА</Источник>
						<Приемник>НДСпоАвансамИПредоплатамВыданным</Приемник>
					</Значение>
					<Значение>
						<Код>180</Код>
						<Наименование>76.АВ --&gt; 76.АВ</Наименование>
						<Порядок>17900</Порядок>
						<Источник>76.АВ</Источник>
						<Приемник>НДСпоАвансамИПредоплатам</Приемник>
					</Значение>
					<Значение>
						<Код>181</Код>
						<Наименование>76.ЗП --&gt; 76.09</Наименование>
						<Порядок>18000</Порядок>
						<Источник>76.ЗП</Источник>
						<Приемник>ПрочиеРасчетыСРазнымиДебиторамиИКредиторами</Приемник>
					</Значение>
					<Значение>
						<Код>182</Код>
						<Наименование>76.Н.1 --&gt; 76.Н</Наименование>
						<Порядок>18100</Порядок>
						<Источник>76.Н.1</Источник>
						<Приемник>РасчетыПоНДСотложенномуДляУплатыВБюджет</Приемник>
					</Значение>
					<Значение>
						<Код>183</Код>
						<Наименование>77 --&gt; 77</Наименование>
						<Порядок>18200</Порядок>
						<Источник>77</Источник>
						<Приемник>ОтложенныеНалоговыеОбязательства</Приемник>
					</Значение>
					<Значение>
						<Код>184</Код>
						<Наименование>76.Н.2 --&gt; 76.Н</Наименование>
						<Порядок>18300</Порядок>
						<Источник>76.Н.2</Источник>
						<Приемник>РасчетыПоНДСотложенномуДляУплатыВБюджет</Приемник>
					</Значение>
					<Значение>
						<Код>185</Код>
						<Наименование>76.Н.4 --&gt; 76.Н</Наименование>
						<Порядок>18400</Порядок>
						<Источник>76.Н.4</Источник>
						<Приемник>РасчетыПоНДСотложенномуДляУплатыВБюджет</Приемник>
					</Значение>
					<Значение>
						<Код>186</Код>
						<Наименование>79.1 --&gt; 79.01</Наименование>
						<Порядок>18500</Порядок>
						<Источник>79.1</Источник>
						<Приемник>РасчетыПоВыделенномуИмуществу</Приемник>
					</Значение>
					<Значение>
						<Код>187</Код>
						<Наименование>79.2 --&gt; 79.02</Наименование>
						<Порядок>18600</Порядок>
						<Источник>79.2</Источник>
						<Приемник>РасчетыПоТекущимОперациям</Приемник>
					</Значение>
					<Значение>
						<Код>188</Код>
						<Наименование>79.3 --&gt; 79.03</Наименование>
						<Порядок>18700</Порядок>
						<Источник>79.3</Источник>
						<Приемник>РасчетыПоДоговоруДоверительногоУправленияИмуществом</Приемник>
					</Значение>
					<Значение>
						<Код>189</Код>
						<Наименование>80 --&gt; 80.01</Наименование>
						<Порядок>18800</Порядок>
						<Источник>80</Источник>
						<Приемник>УставныйКапитал_ОбыкновенныеАкции</Приемник>
					</Значение>
					<Значение>
						<Код>190</Код>
						<Наименование>81 --&gt; 81.01</Наименование>
						<Порядок>18900</Порядок>
						<Источник>81</Источник>
						<Приемник>СобственныеАкции_ОбыкновенныеАкции</Приемник>
					</Значение>
					<Значение>
						<Код>191</Код>
						<Наименование>82.1 --&gt; 82.01</Наименование>
						<Порядок>19000</Порядок>
						<Источник>82.1</Источник>
						<Приемник>РезервыОбразованныеВСоответствииСЗаконодательством</Приемник>
					</Значение>
					<Значение>
						<Код>192</Код>
						<Наименование>82.2 --&gt; 82.02</Наименование>
						<Порядок>19100</Порядок>
						<Источник>82.2</Источник>
						<Приемник>РезервыОбразованныеВСоответствииСУчредительнымиДокументами</Приемник>
					</Значение>
					<Значение>
						<Код>193</Код>
						<Наименование>83.1 --&gt; 83.01</Наименование>
						<Порядок>19200</Порядок>
						<Источник>83.1</Источник>
						<Приемник>ПриростСтоимостиИмуществаПоПереоценке</Приемник>
					</Значение>
					<Значение>
						<Код>194</Код>
						<Наименование>83.2 --&gt; 83.02</Наименование>
						<Порядок>19300</Порядок>
						<Источник>83.2</Источник>
						<Приемник>ЭмиссионныйДоходОтВыпускаОбыкновенныхАкций</Приемник>
					</Значение>
					<Значение>
						<Код>195</Код>
						<Наименование>83.3 --&gt; 83.09</Наименование>
						<Порядок>19400</Порядок>
						<Источник>83.3</Источник>
						<Приемник>ДругиеИсточники</Приемник>
					</Значение>
					<Значение>
						<Код>196</Код>
						<Наименование>84.1 --&gt; 84.01</Наименование>
						<Порядок>19500</Порядок>
						<Источник>84.1</Источник>
						<Приемник>ПрибыльПодлежащаяРаспределению</Приемник>
					</Значение>
					<Значение>
						<Код>197</Код>
						<Наименование>84.2 --&gt; 84.02</Наименование>
						<Порядок>19600</Порядок>
						<Источник>84.2</Источник>
						<Приемник>УбытокПодлежащийПокрытию</Приемник>
					</Значение>
					<Значение>
						<Код>198</Код>
						<Наименование>84.3 --&gt; 84.03</Наименование>
						<Порядок>19700</Порядок>
						<Источник>84.3</Источник>
						<Приемник>НераспределеннаяПрибыльВОбращении</Приемник>
					</Значение>
					<Значение>
						<Код>199</Код>
						<Наименование>84.4 --&gt; 84.04</Наименование>
						<Порядок>19800</Порядок>
						<Источник>84.4</Источник>
						<Приемник>НераспределеннаяПрибыльИспользованная</Приемник>
					</Значение>
					<Значение>
						<Код>200</Код>
						<Наименование>86 --&gt; 86.01</Наименование>
						<Порядок>19900</Порядок>
						<Источник>86</Источник>
						<Приемник>ЦелевоеФинансированиеИзБюджета</Приемник>
					</Значение>
					<Значение>
						<Код>201</Код>
						<Наименование>90.1.1 --&gt; 90.01.1</Наименование>
						<Порядок>20000</Порядок>
						<Источник>90.1.1</Источник>
						<Приемник>ВыручкаНеЕНВД</Приемник>
					</Значение>
					<Значение>
						<Код>202</Код>
						<Наименование>90.1.2 --&gt; 90.01.2</Наименование>
						<Порядок>20100</Порядок>
						<Источник>90.1.2</Источник>
						<Приемник>ВыручкаЕНВД</Приемник>
					</Значение>
					<Значение>
						<Код>203</Код>
						<Наименование>90.2.1 --&gt; 90.02.1</Наименование>
						<Порядок>20200</Порядок>
						<Источник>90.2.1</Источник>
						<Приемник>СебестоимостьПродажНеЕНВД</Приемник>
					</Значение>
					<Значение>
						<Код>204</Код>
						<Наименование>90.3 --&gt; 90.03</Наименование>
						<Порядок>20300</Порядок>
						<Источник>90.3</Источник>
						<Приемник>Продажи_НДС</Приемник>
					</Значение>
					<Значение>
						<Код>205</Код>
						<Наименование>90.4 --&gt; 90.04</Наименование>
						<Порядок>20400</Порядок>
						<Источник>90.4</Источник>
						<Приемник>Продажи_Акцизы</Приемник>
					</Значение>
					<Значение>
						<Код>206</Код>
						<Наименование>90.5 --&gt; 90.05</Наименование>
						<Порядок>20500</Порядок>
						<Источник>90.5</Источник>
						<Приемник>Продажи_ЭкспортныеПошлины</Приемник>
					</Значение>
					<Значение>
						<Код>207</Код>
						<Наименование>90.7.1 --&gt; 90.07.1</Наименование>
						<Порядок>20600</Порядок>
						<Источник>90.7.1</Источник>
						<Приемник>Продажи_РасходыНаПродажуНеЕНВД</Приемник>
					</Значение>
					<Значение>
						<Код>208</Код>
						<Наименование>90.7.2 --&gt; 90.07.2</Наименование>
						<Порядок>20700</Порядок>
						<Источник>90.7.2</Источник>
						<Приемник>Продажи_РасходыНаПродажуЕНВД</Приемник>
					</Значение>
					<Значение>
						<Код>209</Код>
						<Наименование>90.8.1 --&gt; 90.08.1</Наименование>
						<Порядок>20800</Порядок>
						<Источник>90.8.1</Источник>
						<Приемник>Продажи_УправленческиеРасходыНеЕНВД</Приемник>
					</Значение>
					<Значение>
						<Код>210</Код>
						<Наименование>90.8.2 --&gt; 90.08.2</Наименование>
						<Порядок>20900</Порядок>
						<Источник>90.8.2</Источник>
						<Приемник>Продажи_УправленческиеРасходыЕНВД</Приемник>
					</Значение>
					<Значение>
						<Код>211</Код>
						<Наименование>90.9 --&gt; 90.09</Наименование>
						<Порядок>21000</Порядок>
						<Источник>90.9</Источник>
						<Приемник>ПрибыльУбытокОтПродаж</Приемник>
					</Значение>
					<Значение>
						<Код>212</Код>
						<Наименование>91.1 --&gt; 91.01</Наименование>
						<Порядок>21100</Порядок>
						<Источник>91.1</Источник>
						<Приемник>ПрочиеДоходы</Приемник>
					</Значение>
					<Значение>
						<Код>213</Код>
						<Наименование>91.2 --&gt; 91.02</Наименование>
						<Порядок>21200</Порядок>
						<Источник>91.2</Источник>
						<Приемник>ПрочиеРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>214</Код>
						<Наименование>91.9 --&gt; 91.09</Наименование>
						<Порядок>21300</Порядок>
						<Источник>91.9</Источник>
						<Приемник>СальдоПрочихДоходовИРасходов</Приемник>
					</Значение>
					<Значение>
						<Код>215</Код>
						<Наименование>94 --&gt; 94</Наименование>
						<Порядок>21400</Порядок>
						<Источник>94</Источник>
						<Приемник>НедостачиИПотериОтПорчиЦенностей</Приемник>
					</Значение>
					<Значение>
						<Код>216</Код>
						<Наименование>96 --&gt; 96</Наименование>
						<Порядок>21500</Порядок>
						<Источник>96</Источник>
						<Приемник>РезервыПредстоящихРасходов</Приемник>
					</Значение>
					<Значение>
						<Код>217</Код>
						<Наименование>97 --&gt; 97.21</Наименование>
						<Порядок>21600</Порядок>
						<Источник>97</Источник>
						<Приемник>ПрочиеРасходыБудущихПериодов</Приемник>
					</Значение>
					<Значение>
						<Код>218</Код>
						<Наименование>98.1 --&gt; 98.01</Наименование>
						<Порядок>21700</Порядок>
						<Источник>98.1</Источник>
						<Приемник>ДоходыПолученныеВСчетБудущихПериодов</Приемник>
					</Значение>
					<Значение>
						<Код>219</Код>
						<Наименование>98.2.1 --&gt; 98.02</Наименование>
						<Порядок>21800</Порядок>
						<Источник>98.2.1</Источник>
						<Приемник>БезвозмездныеПоступления</Приемник>
					</Значение>
					<Значение>
						<Код>220</Код>
						<Наименование>98.2.2 --&gt; 98.02</Наименование>
						<Порядок>21900</Порядок>
						<Источник>98.2.2</Источник>
						<Приемник>БезвозмездныеПоступления</Приемник>
					</Значение>
					<Значение>
						<Код>221</Код>
						<Наименование>98.3 --&gt; 98.03</Наименование>
						<Порядок>22000</Порядок>
						<Источник>98.3</Источник>
						<Приемник>ПредстоящиеПоступленияПоНедостачамВыявленнымЗаПрошлыеГоды</Приемник>
					</Значение>
					<Значение>
						<Код>222</Код>
						<Наименование>98.4 --&gt; 98.04</Наименование>
						<Порядок>22100</Порядок>
						<Источник>98.4</Источник>
						<Приемник>РазницаМеждуСуммойПодлежащейВзысканиюСВиновныхЛицИБалансовойСтоимостьюПоНедостачамЦенностей</Приемник>
					</Значение>
					<Значение>
						<Код>223</Код>
						<Наименование>90.2.2 --&gt; 90.02.2</Наименование>
						<Порядок>22200</Порядок>
						<Источник>90.2.2</Источник>
						<Приемник>СебестоимостьПродажЕНВД</Приемник>
					</Значение>
					<Значение>
						<Код>224</Код>
						<Наименование>99.1 --&gt; 99.01.1</Наименование>
						<Порядок>22300</Порядок>
						<Источник>99.1</Источник>
						<Приемник>ПрибылиИУбыткиНеЕНВД</Приемник>
					</Значение>
					<Значение>
						<Код>225</Код>
						<Наименование>99.2.1 --&gt; 99.02.1</Наименование>
						<Порядок>22400</Порядок>
						<Источник>99.2.1</Источник>
						<Приемник>УсловныйРасходПоНалогуНаПрибыль</Приемник>
					</Значение>
					<Значение>
						<Код>226</Код>
						<Наименование>99.2.2 --&gt; 99.02.2</Наименование>
						<Порядок>22500</Порядок>
						<Источник>99.2.2</Источник>
						<Приемник>УсловныйДоходПоНалогуНаПрибыль</Приемник>
					</Значение>
					<Значение>
						<Код>227</Код>
						<Наименование>99.2.3 --&gt; 99.02.3</Наименование>
						<Порядок>22600</Порядок>
						<Источник>99.2.3</Источник>
						<Приемник>ПостоянноеНалоговоеОбязательство</Приемник>
					</Значение>
					<Значение>
						<Код>228</Код>
						<Наименование>РВ.1 --&gt; РВ.1</Наименование>
						<Порядок>22700</Порядок>
						<Источник>РВ.1</Источник>
						<Приемник>НераспределеннаяРозничнаяВыручка</Приемник>
					</Значение>
					<Значение>
						<Код>229</Код>
						<Наименование>РВ.2 --&gt; РВ.2</Наименование>
						<Порядок>22800</Порядок>
						<Источник>РВ.2</Источник>
						<Приемник>НДСВРозничнойВыручке</Приемник>
					</Значение>
					<Значение>
						<Код>230</Код>
						<Наименование>00 --&gt; 000</Наименование>
						<Порядок>22900</Порядок>
						<Источник>00</Источник>
						<Приемник>Вспомогательный</Приемник>
					</Значение>
					<Значение>
						<Код>231</Код>
						<Наименование>10.10 --&gt; 10.10</Наименование>
						<Порядок>23000</Порядок>
						<Источник>10.10</Источник>
						<Приемник>СпецоснасткаИСпецодеждаНаСкладе</Приемник>
					</Значение>
					<Значение>
						<Код>232</Код>
						<Наименование>10.11.1 --&gt; 10.11</Наименование>
						<Порядок>23100</Порядок>
						<Источник>10.11.1</Источник>
						<Приемник>СпецодеждаВЭксплуатации</Приемник>
					</Значение>
					<Значение>
						<Код>233</Код>
						<Наименование>10.11.1 --&gt; 10.11</Наименование>
						<Порядок>23200</Порядок>
						<Источник>10.11.2</Источник>
						<Приемник>СпецоснасткаВЭксплуатации</Приемник>
					</Значение>
					<Значение>
						<Код>234</Код>
						<Наименование>ГТД --&gt; ГТД</Наименование>
						<Порядок>23300</Порядок>
						<Источник>ГТД</Источник>
						<Приемник>ГТД</Приемник>
					</Значение>
					<Значение>
						<Код>235</Код>
						<Наименование>МЦ.02 --&gt; МЦ.02</Наименование>
						<Порядок>23400</Порядок>
						<Источник>МЦ.02</Источник>
						<Приемник>СпецодеждаВЭксплуатацииВспомогательный</Приемник>
					</Значение>
					<Значение>
						<Код>236</Код>
						<Наименование>МЦ.02 --&gt; МЦ.02</Наименование>
						<Порядок>23500</Порядок>
						<Источник>МЦ.03</Источник>
						<Приемник>СпецоснасткаВЭксплуатацииВспомогательный</Приемник>
					</Значение>
					<Значение>
						<Код>238</Код>
						<Наименование>МЦ.04 --&gt; МЦ.04</Наименование>
						<Порядок>23600</Порядок>
						<Источник>МЦ.04</Источник>
						<Приемник>ИнвентарьИХозяйственныеПринадлежностиВЭксплуатации</Приемник>
					</Значение>
					<Значение>
						<Код>237</Код>
						<Наименование>69.12 --&gt; 69.12</Наименование>
						<Порядок>23700</Порядок>
						<Источник>69.12</Источник>
						<Приемник>ФСС_ДобровольныеВзносы</Приемник>
					</Значение>
					<Значение>
						<Код>239</Код>
						<Наименование>Н12 --&gt; ЦелевоеФинансирование</Наименование>
						<Порядок>23750</Порядок>
						<Источник>Н12</Источник>
						<Приемник>ЦелевоеФинансирование</Приемник>
					</Значение>
					<Значение>
						<Код>240</Код>
						<Наименование>Н16 --&gt; НедостачиИПотериОтПорчиЦенностей</Наименование>
						<Порядок>23800</Порядок>
						<Источник>Н16</Источник>
						<Приемник>НедостачиИПотериОтПорчиЦенностей</Приемник>
					</Значение>
					<Значение>
						<Код>241</Код>
						<Наименование>Н02.06 --&gt; ПриобретенныеПрава</Наименование>
						<Порядок>23850</Порядок>
						<Источник>Н02.06</Источник>
						<Приемник>ПриобретенныеПрава</Приемник>
					</Значение>
					<Значение>
						<Код>242</Код>
						<Наименование>Н14 --&gt; РасчетыСПерсоналомПоОплатеТруда</Наименование>
						<Порядок>23900</Порядок>
						<Источник>Н14</Источник>
						<Приемник>РасчетыСПерсоналомПоОплатеТруда</Приемник>
					</Значение>
					<Значение>
						<Код>243</Код>
						<Наименование>Н05.04 --&gt; АмортизацияНематериальныхАктивов</Наименование>
						<Порядок>23950</Порядок>
						<Источник>Н05.04</Источник>
						<Приемник>АмортизацияНематериальныхАктивов</Приемник>
					</Значение>
					<Значение>
						<Код>244</Код>
						<Наименование>Н04.03 --&gt; РасходыНаНИОКР</Наименование>
						<Порядок>24000</Порядок>
						<Источник>Н04.03</Источник>
						<Приемник>РасходыНаНИОКР</Приемник>
					</Значение>
					<Значение>
						<Код>254</Код>
						<Наименование>Н04.05 --&gt; РасходыБудущихПериодов</Наименование>
						<Порядок>24050</Порядок>
						<Источник>Н01.01</Источник>
						<Приемник>ПриобретениеОбъектовОсновныхСредств</Приемник>
					</Значение>
					<Значение>
						<Код>253</Код>
						<Наименование>Н04.05 --&gt; РасходыБудущихПериодов</Наименование>
						<Порядок>24050</Порядок>
						<Источник>Н04.11</Источник>
						<Приемник>РасходыБудущихПериодов</Приемник>
					</Значение>
					<Значение>
						<Код>252</Код>
						<Наименование>Н04.05 --&gt; РасходыБудущихПериодов</Наименование>
						<Порядок>24050</Порядок>
						<Источник>Н04.10</Источник>
						<Приемник>РасходыБудущихПериодов</Приемник>
					</Значение>
					<Значение>
						<Код>251</Код>
						<Наименование>Н04.05 --&gt; РасходыБудущихПериодов</Наименование>
						<Порядок>24050</Порядок>
						<Источник>Н04.09</Источник>
						<Приемник>РасходыБудущихПериодов</Приемник>
					</Значение>
					<Значение>
						<Код>250</Код>
						<Наименование>Н04.05 --&gt; РасходыБудущихПериодов</Наименование>
						<Порядок>24050</Порядок>
						<Источник>Н04.08</Источник>
						<Приемник>РасходыБудущихПериодов</Приемник>
					</Значение>
					<Значение>
						<Код>249</Код>
						<Наименование>Н04.05 --&gt; РасходыБудущихПериодов</Наименование>
						<Порядок>24050</Порядок>
						<Источник>Н04.04</Источник>
						<Приемник>РасходыБудущихПериодов</Приемник>
					</Значение>
					<Значение>
						<Код>248</Код>
						<Наименование>Н04.05 --&gt; РасходыБудущихПериодов</Наименование>
						<Порядок>24050</Порядок>
						<Источник>Н04.02</Источник>
						<Приемник>РасходыБудущихПериодов</Приемник>
					</Значение>
					<Значение>
						<Код>247</Код>
						<Наименование>Н04.05 --&gt; РасходыБудущихПериодов</Наименование>
						<Порядок>24050</Порядок>
						<Источник>Н04.07</Источник>
						<Приемник>РасходыБудущихПериодов</Приемник>
					</Значение>
					<Значение>
						<Код>246</Код>
						<Наименование>Н04.05 --&gt; РасходыБудущихПериодов</Наименование>
						<Порядок>24050</Порядок>
						<Источник>Н04.06</Источник>
						<Приемник>РасходыБудущихПериодов</Приемник>
					</Значение>
					<Значение>
						<Код>245</Код>
						<Наименование>Н04.05 --&gt; РасходыБудущихПериодов</Наименование>
						<Порядок>24050</Порядок>
						<Источник>Н04.05</Источник>
						<Приемник>РасходыБудущихПериодов</Приемник>
					</Значение>
					<Значение>
						<Код>255</Код>
						<Наименование>Н01.02 --&gt; ОборудованиеКУстановке</Наименование>
						<Порядок>24100</Порядок>
						<Источник>Н01.02</Источник>
						<Приемник>ОборудованиеКУстановке</Приемник>
					</Значение>
					<Значение>
						<Код>256</Код>
						<Наименование>Н01.03 --&gt; ВыполнениеНИОКР</Наименование>
						<Порядок>24150</Порядок>
						<Источник>Н01.03</Источник>
						<Приемник>ВыполнениеНИОКР</Приемник>
					</Значение>
					<Значение>
						<Код>257</Код>
						<Наименование>Н01.08 --&gt; ПриобретениеНематериальныхАктивов</Наименование>
						<Порядок>24200</Порядок>
						<Источник>Н01.08</Источник>
						<Приемник>ПриобретениеНематериальныхАктивов</Приемник>
					</Значение>
					<Значение>
						<Код>258</Код>
						<Наименование>Н01.09 --&gt; СтроительствоОбъектовОсновныхСредств</Наименование>
						<Порядок>24250</Порядок>
						<Источник>Н01.09</Источник>
						<Приемник>СтроительствоОбъектовОсновныхСредств</Приемник>
					</Значение>
					<Значение>
						<Код>259</Код>
						<Наименование>Н05.01 --&gt; ОСвОрганизации</Наименование>
						<Порядок>24300</Порядок>
						<Источник>Н05.01</Источник>
						<Приемник>ОСвОрганизации</Приемник>
					</Значение>
					<Значение>
						<Код>260</Код>
						<Наименование>Н05.03 --&gt; НематериальныеАктивыОрганизации</Наименование>
						<Порядок>24350</Порядок>
						<Источник>Н05.03</Источник>
						<Приемник>НематериальныеАктивыОрганизации</Приемник>
					</Значение>
					<Значение>
						<Код>261</Код>
						<Наименование>Н01.05 --&gt; ОсновноеПроизводство</Наименование>
						<Порядок>24400</Порядок>
						<Источник>Н01.05</Источник>
						<Приемник>ОсновноеПроизводство</Приемник>
					</Значение>
					<Значение>
						<Код>262</Код>
						<Наименование>Н02.07 --&gt; Полуфабрикаты</Наименование>
						<Порядок>24450</Порядок>
						<Источник>Н02.07</Источник>
						<Приемник>Полуфабрикаты</Приемник>
					</Значение>
					<Значение>
						<Код>263</Код>
						<Наименование>Н01.07 --&gt; ИздержкиОбращения</Наименование>
						<Порядок>24500</Порядок>
						<Источник>Н01.07</Источник>
						<Приемник>ИздержкиОбращения</Приемник>
					</Значение>
					<Значение>
						<Код>264</Код>
						<Наименование>Н02.02.1 --&gt; ТоварыНаСкладах</Наименование>
						<Порядок>24550</Порядок>
						<Источник>Н02.02.1</Источник>
						<Приемник>ТоварыНаСкладах</Приемник>
					</Значение>
					<Значение>
						<Код>265</Код>
						<Наименование>Н02.02.2 --&gt; ТоварыВРозничнойТорговле</Наименование>
						<Порядок>24600</Порядок>
						<Источник>Н02.02.2</Источник>
						<Приемник>ТоварыВРозничнойТорговле</Приемник>
					</Значение>
					<Значение>
						<Код>266</Код>
						<Наименование>Н02.03 --&gt; ГотоваяПродукция</Наименование>
						<Порядок>24650</Порядок>
						<Источник>Н02.03</Источник>
						<Приемник>ГотоваяПродукция</Приемник>
					</Значение>
					<Значение>
						<Код>267</Код>
						<Наименование>Н02.04.1 --&gt; ПокупныеТоварыОтгруженные</Наименование>
						<Порядок>24700</Порядок>
						<Источник>Н02.04.1</Источник>
						<Приемник>ПокупныеТоварыОтгруженные</Приемник>
					</Значение>
					<Значение>
						<Код>268</Код>
						<Наименование>Н02.04.2 --&gt; ГотоваяПродукцияОтгруженная</Наименование>
						<Порядок>24750</Порядок>
						<Источник>Н02.04.2</Источник>
						<Приемник>ГотоваяПродукцияОтгруженная</Приемник>
					</Значение>
					<Значение>
						<Код>269</Код>
						<Наименование>Н02.04.3 --&gt; ПрочиеТоварыОтгруженные</Наименование>
						<Порядок>24800</Порядок>
						<Источник>Н02.04.3</Источник>
						<Приемник>ПрочиеТоварыОтгруженные</Приемник>
					</Значение>
					<Значение>
						<Код>270</Код>
						<Наименование>Н02.05 --&gt; ДолговыеЦенныеБумаги</Наименование>
						<Порядок>24850</Порядок>
						<Источник>Н02.05</Источник>
						<Приемник>ДолговыеЦенныеБумаги</Приемник>
					</Значение>
					<Значение>
						<Код>271</Код>
						<Наименование>Н02.08 --&gt; Паи</Наименование>
						<Порядок>24900</Порядок>
						<Источник>Н02.08</Источник>
						<Приемник>Паи</Приемник>
					</Значение>
					<Значение>
						<Код>272</Код>
						<Наименование>Н02.01 --&gt; СырьеИМатериалы</Наименование>
						<Порядок>24950</Порядок>
						<Источник>Н02.01</Источник>
						<Приемник>СырьеИМатериалы</Приемник>
					</Значение>
					<Значение>
						<Код>273</Код>
						<Наименование>Н05.02 --&gt; АмортизацияОС_01</Наименование>
						<Порядок>25000</Порядок>
						<Источник>Н05.02</Источник>
						<Приемник>АмортизацияОС_01</Приемник>
					</Значение>
					<Значение>
						<Код>274</Код>
						<Наименование>Н05.КВ --&gt; РасходыНаКапитальныеВложения</Наименование>
						<Порядок>25050</Порядок>
						<Источник>Н05.КВ</Источник>
						<Приемник>РасходыНаКапитальныеВложения</Приемник>
					</Значение>
					<Значение>
						<Код>275</Код>
						<Наименование>Н02.09 --&gt; МатериалыПереданныеВПереработку</Наименование>
						<Порядок>25100</Порядок>
						<Источник>Н02.09</Источник>
						<Приемник>МатериалыПереданныеВПереработку</Приемник>
					</Значение>
					<Значение>
						<Код>276</Код>
						<Наименование>Н06.01 --&gt; ВыручкаНеЕНВД</Наименование>
						<Порядок>25150</Порядок>
						<Источник>Н06.01</Источник>
						<Приемник>ВыручкаНеЕНВД</Приемник>
					</Значение>
					<Значение>
						<Код>280</Код>
						<Наименование>Н06.02 --&gt; ВыручкаНеЕНВД</Наименование>
						<Порядок>25200</Порядок>
						<Источник>Н06.05</Источник>
						<Приемник>ПрочиеДоходы</Приемник>
					</Значение>
					<Значение>
						<Код>281</Код>
						<Наименование>Н06.02 --&gt; ВыручкаНеЕНВД</Наименование>
						<Порядок>25200</Порядок>
						<Источник>Н06.06</Источник>
						<Приемник>ПрочиеДоходы</Приемник>
					</Значение>
					<Значение>
						<Код>282</Код>
						<Наименование>Н06.02 --&gt; ВыручкаНеЕНВД</Наименование>
						<Порядок>25200</Порядок>
						<Источник>Н06.07</Источник>
						<Приемник>ПрочиеДоходы</Приемник>
					</Значение>
					<Значение>
						<Код>283</Код>
						<Наименование>Н06.02 --&gt; ВыручкаНеЕНВД</Наименование>
						<Порядок>25200</Порядок>
						<Источник>Н06.08</Источник>
						<Приемник>ПрочиеДоходы</Приемник>
					</Значение>
					<Значение>
						<Код>284</Код>
						<Наименование>Н06.02 --&gt; ВыручкаНеЕНВД</Наименование>
						<Порядок>25200</Порядок>
						<Источник>Н06.09</Источник>
						<Приемник>ПрочиеДоходы</Приемник>
					</Значение>
					<Значение>
						<Код>285</Код>
						<Наименование>Н06.02 --&gt; ВыручкаНеЕНВД</Наименование>
						<Порядок>25200</Порядок>
						<Источник>Н06.10</Источник>
						<Приемник>ПрочиеДоходы</Приемник>
					</Значение>
					<Значение>
						<Код>286</Код>
						<Наименование>Н06.02 --&gt; ВыручкаНеЕНВД</Наименование>
						<Порядок>25200</Порядок>
						<Источник>Н06.11</Источник>
						<Приемник>ПрочиеДоходы</Приемник>
					</Значение>
					<Значение>
						<Код>279</Код>
						<Наименование>Н06.02 --&gt; ВыручкаНеЕНВД</Наименование>
						<Порядок>25200</Порядок>
						<Источник>Н06.04</Источник>
						<Приемник>ВыручкаНеЕНВД</Приемник>
					</Значение>
					<Значение>
						<Код>278</Код>
						<Наименование>Н06.02 --&gt; ВыручкаНеЕНВД</Наименование>
						<Порядок>25200</Порядок>
						<Источник>Н06.03</Источник>
						<Приемник>ПрочиеДоходы</Приемник>
					</Значение>
					<Значение>
						<Код>277</Код>
						<Наименование>Н06.02 --&gt; ВыручкаНеЕНВД</Наименование>
						<Порядок>25200</Порядок>
						<Источник>Н06.02</Источник>
						<Приемник>ПрочиеДоходы</Приемник>
					</Значение>
					<Значение>
						<Код>287</Код>
						<Наименование>Н07.01 --&gt; СебестоимостьПродажНеЕНВД</Наименование>
						<Порядок>25250</Порядок>
						<Источник>Н07.01</Источник>
						<Приемник>СебестоимостьПродажНеЕНВД</Приемник>
					</Значение>
					<Значение>
						<Код>288</Код>
						<Наименование>Н07.01 --&gt; СебестоимостьПродажНеЕНВД</Наименование>
						<Порядок>25250</Порядок>
						<Источник>Н07.02</Источник>
						<Приемник>СебестоимостьПродажНеЕНВД</Приемник>
					</Значение>
					<Значение>
						<Код>291</Код>
						<Наименование>Н07.01 --&gt; СебестоимостьПродажНеЕНВД</Наименование>
						<Порядок>25250</Порядок>
						<Источник>Н07.05</Источник>
						<Приемник>СебестоимостьПродажНеЕНВД</Приемник>
					</Значение>
					<Значение>
						<Код>289</Код>
						<Наименование>Н07.03 --&gt; Продажи_РасходыНаПродажуНеЕНВД</Наименование>
						<Порядок>25300</Порядок>
						<Источник>Н07.03</Источник>
						<Приемник>Продажи_РасходыНаПродажуНеЕНВД</Приемник>
					</Значение>
					<Значение>
						<Код>290</Код>
						<Наименование>Н07.04.1 --&gt; Продажи_УправленческиеРасходыНеЕНВД</Наименование>
						<Порядок>25350</Порядок>
						<Источник>Н07.04.1</Источник>
						<Приемник>Продажи_УправленческиеРасходыНеЕНВД</Приемник>
					</Значение>
					<Значение>
						<Код>300</Код>
						<Наименование>Н07.06 --&gt; ПрочиеРасходы</Наименование>
						<Порядок>25400</Порядок>
						<Источник>Н07.14</Источник>
						<Приемник>ПрочиеРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>299</Код>
						<Наименование>Н07.06 --&gt; ПрочиеРасходы</Наименование>
						<Порядок>25400</Порядок>
						<Источник>Н07.13</Источник>
						<Приемник>ПрочиеРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>298</Код>
						<Наименование>Н07.06 --&gt; ПрочиеРасходы</Наименование>
						<Порядок>25400</Порядок>
						<Источник>Н07.12</Источник>
						<Приемник>ПрочиеРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>297</Код>
						<Наименование>Н07.06 --&gt; ПрочиеРасходы</Наименование>
						<Порядок>25400</Порядок>
						<Источник>Н07.11</Источник>
						<Приемник>ПрочиеРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>296</Код>
						<Наименование>Н07.06 --&gt; ПрочиеРасходы</Наименование>
						<Порядок>25400</Порядок>
						<Источник>Н07.10</Источник>
						<Приемник>ПрочиеРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>295</Код>
						<Наименование>Н07.06 --&gt; ПрочиеРасходы</Наименование>
						<Порядок>25400</Порядок>
						<Источник>Н07.09</Источник>
						<Приемник>ПрочиеРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>294</Код>
						<Наименование>Н07.06 --&gt; ПрочиеРасходы</Наименование>
						<Порядок>25400</Порядок>
						<Источник>Н07.08</Источник>
						<Приемник>ПрочиеРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>293</Код>
						<Наименование>Н07.06 --&gt; ПрочиеРасходы</Наименование>
						<Порядок>25400</Порядок>
						<Источник>Н07.07</Источник>
						<Приемник>ПрочиеРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>292</Код>
						<Наименование>Н07.06 --&gt; ПрочиеРасходы</Наименование>
						<Порядок>25400</Порядок>
						<Источник>Н07.06</Источник>
						<Приемник>ПрочиеРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>302</Код>
						<Наименование>Н07.06 --&gt; ПрочиеРасходы</Наименование>
						<Порядок>25400</Порядок>
						<Источник>Н09</Источник>
						<Приемник>ПрочиеРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>301</Код>
						<Наименование>Н08 --&gt; ПрочиеДоходы</Наименование>
						<Порядок>25450</Порядок>
						<Источник>Н08</Источник>
						<Приемник>ПрочиеДоходы</Приемник>
					</Значение>
					<Значение>
						<Код>303</Код>
						<Наименование>Н10 --&gt; ПрочиеРасходыБудущихПериодов</Наименование>
						<Порядок>25500</Порядок>
						<Источник>Н10</Источник>
						<Приемник>ПрочиеРасходыБудущихПериодов</Приемник>
					</Значение>
					<Значение>
						<Код>304</Код>
						<Наименование>Н10 --&gt; ПрочиеРасходыБудущихПериодов</Наименование>
						<Порядок>25500</Порядок>
						<Источник>Н11</Источник>
						<Приемник>ПрочиеРасходыБудущихПериодов</Приемник>
					</Значение>
					<Значение>
						<Код>305</Код>
						<Наименование>Н10 --&gt; ПрочиеРасходыБудущихПериодов</Наименование>
						<Порядок>25500</Порядок>
						<Источник>Н14.01</Источник>
						<Приемник>РасчетыСПерсоналомПоОплатеТруда</Приемник>
					</Значение>
					<Значение>
						<Код>306</Код>
						<Наименование>Н10 --&gt; ПрочиеРасходыБудущихПериодов</Наименование>
						<Порядок>25500</Порядок>
						<Источник>Н14.02</Источник>
						<Приемник>РасчетыСПерсоналомПоОплатеТруда</Приемник>
					</Значение>
					<Значение>
						<Код>307</Код>
						<Наименование>Н02.МЦ --&gt; ИнвентарьИХозяйственныеПринадлежности</Наименование>
						<Порядок>25550</Порядок>
						<Источник>Н02.МЦ</Источник>
						<Приемник>ИнвентарьИХозяйственныеПринадлежности</Приемник>
					</Значение>
					<Значение>
						<Код>308</Код>
						<Наименование>УЕ.60 --&gt; РасчетыСПоставщикамиУЕ</Наименование>
						<Порядок>25600</Порядок>
						<Источник>УЕ.60</Источник>
						<Приемник>РасчетыСПоставщикамиУЕ</Приемник>
					</Значение>
					<Значение>
						<Код>309</Код>
						<Наименование>УЕ.62 --&gt; РасчетыСПокупателямиУЕ</Наименование>
						<Порядок>25650</Порядок>
						<Источник>УЕ.62</Источник>
						<Приемник>РасчетыСПокупателямиУЕ</Приемник>
					</Значение>
					<Значение>
						<Код>310</Код>
						<Наименование>ВАЛ.60 --&gt; РасчетыПоАвансамВыданнымУЕ</Наименование>
						<Порядок>25700</Порядок>
						<Источник>ВАЛ.60</Источник>
						<Приемник>РасчетыПоАвансамВыданнымВал</Приемник>
					</Значение>
					<Значение>
						<Код>311</Код>
						<Наименование>ВАЛ.62 --&gt; РасчетыПоАвансамПолученнымВал</Наименование>
						<Порядок>25750</Порядок>
						<Источник>ВАЛ.62</Источник>
						<Приемник>РасчетыПоАвансамПолученнымВал</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ХозрасчетныйСтрДоб</Код>
				<Наименование>ПланСчетовСсылка.Основной --&gt; ПланСчетовСсылка.Хозрасчетный</Наименование>
				<Порядок>300</Порядок>
				<Источник>ПланСчетовСсылка.Основной</Источник>
				<Приемник>ПланСчетовСсылка.Хозрасчетный</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<НеЗамещать>true</НеЗамещать>
						<Код>1</Код>
						<Наименование> --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Источник.Код;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<НеЗамещать>true</НеЗамещать>
						<Код>2</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Источник.Наименование;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВидыСубконтоХозрасчетные</Код>
				<Наименование>ВидСубконто --&gt; ПланВидовХарактеристикСсылка.ВидыСубконтоХозрасчетные</Наименование>
				<Порядок>500</Порядок>
				<ПередВыгрузкой>Если ТипЗначенияСтр(Источник) &lt;&gt; "Строка" Тогда
	Источник = Источник.Идентификатор();
КонецЕсли;</ПередВыгрузкой>
				<ПриВыгрузке>Если ТипЗначения(УзелСсылки) = 1 Тогда
	НПП = УзелСсылки;
	УзелСсылки = СоздатьУзел("Ссылка");
	УстановитьАтрибут(УзелСсылки, "Нпп", Строка(НПП));
	УзелСвойства = СоздатьУзел("Свойство");
	УстановитьАтрибут(УзелСвойства, "Имя", "{ИмяПредопределенногоЭлемента}");
	УстановитьАтрибут(УзелСвойства, "Тип", "Строка");
	ЗаписатьЭлемент(УзелСвойства, "Значение", Источник);
	ДобавитьПодчиненный(УзелСсылки, УзелСвойства);
	ДобавитьПодчиненный(Приемник, УзелСсылки);
	СтандартнаяОбработка = 0;
КонецЕсли;</ПриВыгрузке>
				<Источник>ВидСубконто</Источник>
				<Приемник>ПланВидовХарактеристикСсылка.ВидыСубконтоХозрасчетные</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>БанковскиеСчета --&gt; 00008</Наименование>
						<Порядок>100</Порядок>
						<Источник>БанковскиеСчета</Источник>
						<Приемник>БанковскиеСчета</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>Бюджеты --&gt; 00025</Наименование>
						<Порядок>200</Порядок>
						<Источник>Бюджеты</Источник>
						<Приемник>УровниБюджетов</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ВидыАктивовИобязательств --&gt; 00023</Наименование>
						<Порядок>300</Порядок>
						<Источник>ВидыАктивовИобязательств</Источник>
						<Приемник>ВидыАктивовИОбязательств</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>ВидыНачисленийПоОплатеТруда --&gt; 00031</Наименование>
						<Порядок>400</Порядок>
						<Источник>ВидыНачисленийПоОплатеТруда</Источник>
						<Приемник>ВидНачисленийОплатыТрудаПоСтатье255НК</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>ВидыНоменклатуры --&gt; 00012</Наименование>
						<Порядок>500</Порядок>
						<Источник>ВидыНоменклатуры</Источник>
						<Приемник>НоменклатурныеГруппы</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>ВидыПлатежейВБюджет --&gt; 00022</Наименование>
						<Порядок>600</Порядок>
						<Источник>ВидыПлатежейВБюджет</Источник>
						<Приемник>ВидыПлатежейВГосБюджет</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>ВидыПлатежейВФонды --&gt; 00022</Наименование>
						<Порядок>700</Порядок>
						<Источник>ВидыПлатежейВФонды</Источник>
						<Приемник>ВидыПлатежейВГосБюджет</Приемник>
					</Значение>
					<Значение>
						<Код>8</Код>
						<Наименование>ВнереализационныеДоходы --&gt; 00013</Наименование>
						<Порядок>800</Порядок>
						<Источник>ВнереализационныеДоходы</Источник>
						<Приемник>ПрочиеДоходыИРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>9</Код>
						<Наименование>ВнереализационныеРасходы --&gt; 00013</Наименование>
						<Порядок>900</Порядок>
						<Источник>ВнереализационныеРасходы</Источник>
						<Приемник>ПрочиеДоходыИРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>10</Код>
						<Наименование>ДвиженияДенежныхСредств --&gt; 00021</Наименование>
						<Порядок>1000</Порядок>
						<Источник>ДвиженияДенежныхСредств</Источник>
						<Приемник>СтатьиДвиженияДенежныхСредств</Приемник>
					</Значение>
					<Значение>
						<Код>11</Код>
						<Наименование>Договоры --&gt; 00016</Наименование>
						<Порядок>1100</Порядок>
						<Источник>Договоры</Источник>
						<Приемник>Договоры</Приемник>
					</Значение>
					<Значение>
						<Код>12</Код>
						<Наименование>ДоговорыС_Комиссионерами --&gt; 00038</Наименование>
						<Порядок>1200</Порядок>
						<Источник>ДоговорыС_Комиссионерами</Источник>
						<Приемник>Партии</Приемник>
					</Значение>
					<Значение>
						<Код>13</Код>
						<Наименование>ДоговорыС_Комитентами --&gt; 00038</Наименование>
						<Порядок>1300</Порядок>
						<Источник>ДоговорыС_Комитентами</Источник>
						<Приемник>Партии</Приемник>
					</Значение>
					<Значение>
						<Код>14</Код>
						<Наименование>ДоходыБудущихПериодов --&gt; 00018</Наименование>
						<Порядок>1400</Порядок>
						<Источник>ДоходыБудущихПериодов</Источник>
						<Приемник>ДоходыБудущихПериодов</Приемник>
					</Значение>
					<Значение>
						<Код>15</Код>
						<Наименование>Контрагенты --&gt; 00005</Наименование>
						<Порядок>1500</Порядок>
						<Источник>Контрагенты</Источник>
						<Приемник>Контрагенты</Приемник>
					</Значение>
					<Значение>
						<Код>16</Код>
						<Наименование>Материалы --&gt; 00001</Наименование>
						<Порядок>1600</Порядок>
						<Источник>Материалы</Источник>
						<Приемник>Номенклатура</Приемник>
					</Значение>
					<Значение>
						<Код>17</Код>
						<Наименование>МестаХранения --&gt; 00027</Наименование>
						<Порядок>1700</Порядок>
						<Источник>МестаХранения</Источник>
						<Приемник>Склады</Приемник>
					</Значение>
					<Значение>
						<Код>18</Код>
						<Наименование>НематериальныеАктивы --&gt; 00006</Наименование>
						<Порядок>1800</Порядок>
						<Источник>НематериальныеАктивы</Источник>
						<Приемник>НематериальныеАктивы</Приемник>
					</Значение>
					<Значение>
						<Код>19</Код>
						<Наименование>Номенклатура --&gt; 00001</Наименование>
						<Порядок>1900</Порядок>
						<Источник>Номенклатура</Источник>
						<Приемник>Номенклатура</Приемник>
					</Значение>
					<Значение>
						<Код>20</Код>
						<Наименование>Оборудование --&gt; 00001</Наименование>
						<Порядок>2000</Порядок>
						<Источник>Оборудование</Источник>
						<Приемник>Номенклатура</Приемник>
					</Значение>
					<Значение>
						<Код>21</Код>
						<Наименование>ОбъектыСтроительства --&gt; 00011</Наименование>
						<Порядок>2100</Порядок>
						<Источник>ОбъектыСтроительства</Источник>
						<Приемник>ОбъектыСтроительства</Приемник>
					</Значение>
					<Значение>
						<Код>22</Код>
						<Наименование>ОсновныеСредства --&gt; 00004</Наименование>
						<Порядок>2200</Порядок>
						<Источник>ОсновныеСредства</Источник>
						<Приемник>ОсновныеСредства</Приемник>
					</Значение>
					<Значение>
						<Код>24</Код>
						<Наименование>ПрибылиИУбытки --&gt; 00014</Наименование>
						<Порядок>2400</Порядок>
						<Источник>ПрибылиИУбытки</Источник>
						<Приемник>ПрибылиИУбытки</Приемник>
					</Значение>
					<Значение>
						<Код>25</Код>
						<Наименование>ПрочиеДоходыИРасходы --&gt; 00013</Наименование>
						<Порядок>2500</Порядок>
						<Источник>ПрочиеДоходыИРасходы</Источник>
						<Приемник>ПрочиеДоходыИРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>26</Код>
						<Наименование>РасходыБудущихПериодов --&gt; 00017</Наименование>
						<Порядок>2600</Порядок>
						<Источник>РасходыБудущихПериодов</Источник>
						<Приемник>РасходыБудущихПериодов</Приемник>
					</Значение>
					<Значение>
						<Код>27</Код>
						<Наименование>РезервыПредстоящихРасходов --&gt; 00033</Наименование>
						<Порядок>2700</Порядок>
						<Источник>РезервыПредстоящихРасходов</Источник>
						<Приемник>Резервы</Приемник>
					</Значение>
					<Значение>
						<Код>28</Код>
						<Наименование>Сотрудники --&gt; 00003</Наименование>
						<Порядок>2800</Порядок>
						<Источник>Сотрудники</Источник>
						<Приемник>РаботникиОрганизаций</Приемник>
					</Значение>
					<Значение>
						<Код>29</Код>
						<Наименование>СтавкиНДС --&gt; 00026</Наименование>
						<Порядок>2900</Порядок>
						<Источник>СтавкиНДС</Источник>
						<Приемник>СтавкиНДС</Приемник>
					</Значение>
					<Значение>
						<Код>30</Код>
						<Наименование>СтатьиЗатратНаПроизводство --&gt; 00007</Наименование>
						<Порядок>3000</Порядок>
						<Источник>СтатьиЗатратНаПроизводство</Источник>
						<Приемник>СтатьиЗатрат</Приемник>
					</Значение>
					<Значение>
						<Код>31</Код>
						<Наименование>СтатьиЗатратНаСтроительство --&gt; 00007</Наименование>
						<Порядок>3100</Порядок>
						<Источник>СтатьиЗатратНаСтроительство</Источник>
						<Приемник>СтатьиЗатрат</Приемник>
					</Значение>
					<Значение>
						<Код>32</Код>
						<Наименование>СтатьиЗатратОбслуживающихПроизводств --&gt; 00007</Наименование>
						<Порядок>3200</Порядок>
						<Источник>СтатьиЗатратОбслуживающихПроизводств</Источник>
						<Приемник>СтатьиЗатрат</Приемник>
					</Значение>
					<Значение>
						<Код>33</Код>
						<Наименование>СчетаФактурыПолученные --&gt; 00042</Наименование>
						<Порядок>3300</Порядок>
						<Источник>СчетаФактурыПолученные</Источник>
						<Приемник>СФПолученные</Приемник>
					</Значение>
					<Значение>
						<Код>34</Код>
						<Наименование>УсловияПоступленияИВыбытия --&gt; 00020</Наименование>
						<Порядок>3400</Порядок>
						<Источник>УсловияПоступленияИВыбытия</Источник>
						<Приемник>УсловияПоступленияИВыбытия</Приемник>
					</Значение>
					<Значение>
						<Код>35</Код>
						<Наименование>ЦенныеБумаги --&gt; 00019</Наименование>
						<Порядок>3500</Порядок>
						<Источник>ЦенныеБумаги</Источник>
						<Приемник>ЦенныеБумаги</Приемник>
					</Значение>
					<Значение>
						<Код>36</Код>
						<Наименование>ВидыНачислений --&gt; 00031</Наименование>
						<Порядок>3600</Порядок>
						<Источник>ВидыНачислений</Источник>
						<Приемник>ВидНачисленийОплатыТрудаПоСтатье255НК</Приемник>
					</Значение>
					<Значение>
						<Код>37</Код>
						<Наименование>ПрочиеОбъектыУчета --&gt; 00013</Наименование>
						<Порядок>3700</Порядок>
						<Источник>ПрочиеОбъектыУчета</Источник>
						<Приемник>ПрочиеДоходыИРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>38</Код>
						<Наименование>СтатьиИздержекОбращения --&gt; 00007</Наименование>
						<Порядок>3800</Порядок>
						<Источник>СтатьиИздержекОбращения</Источник>
						<Приемник>СтатьиЗатрат</Приемник>
					</Значение>
					<Значение>
						<Код>39</Код>
						<Наименование>СтатьиКоммерческихРасходов --&gt; 00007</Наименование>
						<Порядок>3900</Порядок>
						<Источник>СтатьиКоммерческихРасходов</Источник>
						<Приемник>СтатьиЗатрат</Приемник>
					</Значение>
					<Значение>
						<Код>40</Код>
						<Наименование>СтатьиОбщепроизводственныхЗатрат --&gt; 00007</Наименование>
						<Порядок>4000</Порядок>
						<Источник>СтатьиОбщепроизводственныхЗатрат</Источник>
						<Приемник>СтатьиЗатрат</Приемник>
					</Значение>
					<Значение>
						<Код>41</Код>
						<Наименование>СтатьиОбщехозяйственныхЗатрат --&gt; 00007</Наименование>
						<Порядок>4100</Порядок>
						<Источник>СтатьиОбщехозяйственныхЗатрат</Источник>
						<Приемник>СтатьиЗатрат</Приемник>
					</Значение>
					<Значение>
						<Код>42</Код>
						<Наименование>СтатьиРасходовНаПродажу --&gt; 00007</Наименование>
						<Порядок>4200</Порядок>
						<Источник>СтатьиРасходовНаПродажу</Источник>
						<Приемник>СтатьиЗатрат</Приемник>
					</Значение>
					<Значение>
						<Код>43</Код>
						<Наименование>ГТД --&gt; 00050</Наименование>
						<Порядок>4300</Порядок>
						<Источник>ГТД</Источник>
						<Приемник>НомераГТД</Приемник>
					</Значение>
					<Значение>
						<Код>44</Код>
						<Наименование>НазначенияИспользования --&gt; 00048</Наименование>
						<Порядок>4400</Порядок>
						<Источник>НазначенияИспользования</Источник>
						<Приемник>ПартииМатериаловВЭксплуатации</Приемник>
					</Значение>
					<Значение>
						<Код>45</Код>
						<Наименование>ГруппыВидыРасходов --&gt; 00007</Наименование>
						<Порядок>4500</Порядок>
						<Источник>ГруппыВидыРасходов</Источник>
						<Приемник>СтатьиЗатрат</Приемник>
					</Значение>
					<Значение>
						<Код>46</Код>
						<Наименование>СчетаФактурыВыданные --&gt; 00052</Наименование>
						<Порядок>4600</Порядок>
						<Источник>СчетаФактурыВыданные</Источник>
						<Приемник>СФВыданные</Приемник>
					</Значение>
					<Значение>
						<Код>51</Код>
						<Наименование>БланкиСтрогойОтчетности --&gt; БланкиСтрогойОтчетност</Наименование>
						<Порядок>5050</Порядок>
						<Источник>БланкиСтрогойОтчетности</Источник>
						<Приемник>БланкиСтрогойОтчетности</Приемник>
					</Значение>
					<Значение>
						<Код>52</Код>
						<Наименование>НазначениеЦелевыхСредств --&gt; НазначениеЦелевыхСред</Наименование>
						<Порядок>5100</Порядок>
						<Источник>НазначениеЦелевыхСредств</Источник>
						<Приемник>НазначениеЦелевыхСредств</Приемник>
					</Значение>
					<Значение>
						<Код>56</Код>
						<Наименование>Партии --&gt; Партии</Наименование>
						<Порядок>5150</Порядок>
						<Источник>Партии</Источник>
						<Приемник>Партии</Приемник>
					</Значение>
					<Значение>
						<Код>57</Код>
						<Наименование>СтраныПроисхождения --&gt; СтраныПроисхождения</Наименование>
						<Порядок>5200</Порядок>
						<Источник>СтраныПроисхождения</Источник>
						<Приемник>СтраныПроисхождения</Приемник>
					</Значение>
					<Значение>
						<Код>58</Код>
						<Наименование>СтатьиЗатрат --&gt; СтатьиЗатрат</Наименование>
						<Порядок>5250</Порядок>
						<Источник>СтатьиЗатрат</Источник>
						<Приемник>СтатьиЗатрат</Приемник>
					</Значение>
					<Значение>
						<Код>59</Код>
						<Наименование>ДокументыРасчетовСКонтрагентами --&gt; ДокументыРасче</Наименование>
						<Порядок>5300</Порядок>
						<Источник>ДокументыРасчетовСКонтрагентами</Источник>
						<Приемник>ДокументыРасчетовСКонтрагентами</Приемник>
					</Значение>
					<Значение>
						<Код>60</Код>
						<Наименование>ОбособленныеПодразделения --&gt; ОбособленныеПодразде</Наименование>
						<Порядок>5350</Порядок>
						<Источник>ОбособленныеПодразделения</Источник>
						<Приемник>ОбособленныеПодразделения</Приемник>
					</Значение>
					<Значение>
						<Код>67</Код>
						<Наименование>РеализуемыеАктивыОС --&gt; РеализуемыеАктивы</Наименование>
						<Порядок>5400</Порядок>
						<Источник>РеализуемыеАктивыЦенныеБумаги</Источник>
						<Приемник>РеализуемыеАктивы</Приемник>
					</Значение>
					<Значение>
						<Код>66</Код>
						<Наименование>РеализуемыеАктивыОС --&gt; РеализуемыеАктивы</Наименование>
						<Порядок>5400</Порядок>
						<Источник>РеализуемыеАктивыДоговоры</Источник>
						<Приемник>РеализуемыеАктивы</Приемник>
					</Значение>
					<Значение>
						<Код>65</Код>
						<Наименование>РеализуемыеАктивыОС --&gt; РеализуемыеАктивы</Наименование>
						<Порядок>5400</Порядок>
						<Источник>РеализуемыеАктивыКонтрагенты</Источник>
						<Приемник>РеализуемыеАктивы</Приемник>
					</Значение>
					<Значение>
						<Код>64</Код>
						<Наименование>РеализуемыеАктивыОС --&gt; РеализуемыеАктивы</Наименование>
						<Порядок>5400</Порядок>
						<Источник>РеализуемыеАктивыВидНоменклатуры</Источник>
						<Приемник>РеализуемыеАктивы</Приемник>
					</Значение>
					<Значение>
						<Код>63</Код>
						<Наименование>РеализуемыеАктивыОС --&gt; РеализуемыеАктивы</Наименование>
						<Порядок>5400</Порядок>
						<Источник>РеализуемыеАктивыНоменклатура</Источник>
						<Приемник>РеализуемыеАктивы</Приемник>
					</Значение>
					<Значение>
						<Код>62</Код>
						<Наименование>РеализуемыеАктивыОС --&gt; РеализуемыеАктивы</Наименование>
						<Порядок>5400</Порядок>
						<Источник>РеализуемыеАктивыНМА</Источник>
						<Приемник>РеализуемыеАктивы</Приемник>
					</Значение>
					<Значение>
						<Код>61</Код>
						<Наименование>РеализуемыеАктивыОС --&gt; РеализуемыеАктивы</Наименование>
						<Порядок>5400</Порядок>
						<Источник>РеализуемыеАктивыОС</Источник>
						<Приемник>РеализуемыеАктивы</Приемник>
					</Значение>
				</Значения>
			</Правило>
		</Группа>
		<Группа>
			<Код>Организация</Код>
			<Наименование>Организация</Наименование>
			<Порядок>600</Порядок>
			<Правило>
				<Код>Организации</Код>
				<Наименование> --&gt; СправочникСсылка.Организации</Наименование>
				<Порядок>100</Порядок>
				<ПослеВыгрузки>ВыгрузитьПоПравилу(Источник,,,, "ТелефоныОрганизации");
ВыгрузитьПоПравилу(Источник,,,, "ЮридическийАдресОрганизации");
ВыгрузитьПоПравилу(Источник,,,, "ФактическийАдресОрганизации");

ВходящиеДанные = СоздатьОбъект("СписокЗначений");

Руководитель	= Константа.Руководитель.Получить(Параметры.ДатаКонцаПериодаВыгрузки);
ГлБухгалтер		= Константа.ГлБухгалтер.Получить(Параметры.ДатаКонцаПериодаВыгрузки);
Кассир			= Константа.Кассир.Получить(Параметры.ДатаКонцаПериодаВыгрузки);

Если ПустоеЗначение(Руководитель) = 0 Тогда
	ВходящиеДанные.УдалитьВсе();
	ВходящиеДанные.Установить("Должность", Руководитель.Должность);
	ВходящиеДанные.Установить("ОтветственноеЛицо", "Руководитель");
	ВходящиеДанные.Установить("ФизическоеЛицо", Руководитель);
	ВыгрузитьПоПравилу(Источник,, ВходящиеДанные,, "ОтветственныеЛицаОрганизаций");
КонецЕсли;

Если ПустоеЗначение(ГлБухгалтер) = 0 Тогда
	ВходящиеДанные.УдалитьВсе();
	ВходящиеДанные.Установить("Должность", ГлБухгалтер.Должность);
	ВходящиеДанные.Установить("ОтветственноеЛицо", "ГлавныйБухгалтер");
	ВходящиеДанные.Установить("ФизическоеЛицо", ГлБухгалтер);
	ВыгрузитьПоПравилу(Источник,, ВходящиеДанные,, "ОтветственныеЛицаОрганизаций");
КонецЕсли;

Если ПустоеЗначение(Кассир) = 0 Тогда
	ВходящиеДанные.УдалитьВсе();
	ВходящиеДанные.Установить("Должность", Кассир.Должность);
	ВходящиеДанные.Установить("ОтветственноеЛицо", "Кассир");
	ВходящиеДанные.Установить("ФизическоеЛицо", Кассир);
	ВыгрузитьПоПравилу(Источник,, ВходящиеДанные,, "ОтветственныеЛицаОрганизаций");
КонецЕсли;</ПослеВыгрузки>
				<ПослеЗагрузки>Если Не ОбъектНайден Тогда
	Объект.ОбменДанными.Загрузка = Истина;
	Объект.Записать();
КонецЕсли;

Параметры.Вставить("Организация", Объект.Ссылка);

МенеджерЗаписиРегистра = РегистрыСведений.ДатыВводаНачальныхОстатков.СоздатьМенеджерЗаписи();
МенеджерЗаписиРегистра.Организация = Объект.Ссылка;
МенеджерЗаписиРегистра.Прочитать();
Если НЕ МенеджерЗаписиРегистра.Выбран() Тогда
	МенеджерЗаписиРегистра.Организация = Объект.Ссылка;
КонецЕсли;
МенеджерЗаписиРегистра.ДатаВводаНачальныхОстатков = ДатаНачала - 24*60*60;
МенеджерЗаписиРегистра.Записать();</ПослеЗагрузки>
				<Приемник>СправочникСсылка.Организации</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Константа.НазваниеОрганизации;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>18</Код>
						<Наименование> --&gt; НаименованиеПлательщикаПриПеречисленииВБюджет</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НаименованиеПлательщикаПриПеречисленииВБюджет" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Константа.НаименованиеПлательщикаПриПеречисленииНалогов;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; ИНН</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ИНН" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Лев(Константа.ИННОрганизации, 10);</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование> --&gt; КПП</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КПП" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Сред(Константа.ИННОрганизации, 12, 9);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; РегистрационныйНомерПФР</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РегистрационныйНомерПФР" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = глПолучитьНалог("ПФР_страх").РегНомер;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; НаименованиеПолное</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Константа.ОфициальноеНазваниеОрганизации;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; КодПоОКПО</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодПоОКПО" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Константа.КодОКПО;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; КодИМНС</Наименование>
						<Порядок>800</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодИМНС" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Константа.КодИМНС;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование> --&gt; ТерриториальныеУсловияПФР</Наименование>
						<Порядок>900</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ТерриториальныеУсловияПФР" Вид="Реквизит" Тип="СправочникСсылка.ТерриториальныеУсловия"/>
						<КодПравилаКонвертации>ТерриториальныеУсловия                            </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Константа.ТерриториальныеУсловия;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование> --&gt; ОсновнойБанковскийСчет</Наименование>
						<Порядок>1000</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОсновнойБанковскийСчет" Вид="Реквизит" Тип="СправочникСсылка.БанковскиеСчета"/>
						<КодПравилаКонвертации>БанковскиеСчета                                   </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Константа.ОсновнойБанковскийСчет;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование> --&gt; ВидСтавокЕСНиПФР</Наименование>
						<Порядок>1100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидСтавокЕСНиПФР" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыСтавокЕСНиПФР"/>
						<ПередВыгрузкой>Значение = "ДляНеСельскохозяйственныхПроизводителей"</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование> --&gt; ОГРН</Наименование>
						<Порядок>1200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОГРН" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Константа.ОГРН;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>13</Код>
						<Наименование> --&gt; ЮрФизЛицо</Наименование>
						<Порядок>1300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЮрФизЛицо" Вид="Реквизит" Тип="ПеречислениеСсылка.ЮрФизЛицо"/>
						<ПередВыгрузкой>Значение = "ЮрЛицо";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>14</Код>
						<Наименование> --&gt; КодИФНСПолучателя</Наименование>
						<Порядок>1350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодИФНСПолучателя" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Константа.КодИФНСПолучателя;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>15</Код>
						<Наименование> --&gt; ВариантНаименованияДляПечатныхФорм</Наименование>
						<Порядок>1400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВариантНаименованияДляПечатныхФорм" Вид="Реквизит" Тип="ПеречислениеСсылка.ВариантыНаименованияДляПечатныхФорм"/>
						<ПередВыгрузкой>Значение = "СокращенноеНаименование";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>16</Код>
						<Наименование> --&gt; НаименованиеСокращенное</Наименование>
						<Порядок>1450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НаименованиеСокращенное" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Константа.НазваниеОрганизации;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>17</Код>
						<Наименование> --&gt; ВидОбменаСКонтролирующимиОрганами</Наименование>
						<Порядок>1500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидОбменаСКонтролирующимиОрганами" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыОбменаСКонтролирующимиОрганами"/>
						<ПередВыгрузкой>Значение = "ОбменОтключен";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ОбособленныеПодразделения</Код>
				<Наименование>СправочникСсылка.Подразделения --&gt; СправочникСсылка.Организации</Наименование>
				<Порядок>150</Порядок>
				<Источник>СправочникСсылка.Подразделения</Источник>
				<Приемник>СправочникСсылка.Организации</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; ЮрФизЛицо</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЮрФизЛицо" Вид="Реквизит" Тип="ПеречислениеСсылка.ЮрФизЛицо"/>
						<ПередВыгрузкой>Значение = "ЮрЛицо";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование> --&gt; ГоловнаяОрганизация</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ГоловнаяОрганизация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>Наименование --&gt; НаименованиеСокращенное</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="НаименованиеСокращенное" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; ВариантНаименованияДляПечатныхФорм</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВариантНаименованияДляПечатныхФорм" Вид="Реквизит" Тип="ПеречислениеСсылка.ВариантыНаименованияДляПечатныхФорм"/>
						<ПередВыгрузкой>Значение = "СокращенноеНаименование";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
		<Группа>
			<Код>ДокументыДляДвиженияРегистров</Код>
			<Наименование>Документы</Наименование>
			<Порядок>700</Порядок>
			<Правило>
				<Код>Работники</Код>
				<Наименование> --&gt; ДокументСсылка.ПриемНаРаботуВОрганизацию</Наименование>
				<Порядок>50</Порядок>
				<ПередВыгрузкой>Если Параметры.СписокРаботников.КоличествоСтрок() = 0 Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
				<Приемник>ДокументСсылка.ПриемНаРаботуВОрганизацию</Приемник>
				<Свойства>
					<Группа>
						<Код>1</Код>
						<Наименование> --&gt; РаботникиОрганизации</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РаботникиОрганизации" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>КоллекцияОбъектов = Параметры.СписокРаботников;
КоллекцияОбъектов.НоваяКолонка("ПодразделениеОрганизации");
КоллекцияОбъектов.НоваяКолонка("Должность");</ПередОбработкойВыгрузки>
						<ПередВыгрузкой>ДатаПриема = глДатаПриема(ОбъектКоллекции.ФизЛицо);
Если (ДатаПриема = Дата(0)) ИЛИ (ДатаПриема &gt; Параметры.ДатаКонцаПериодаВыгрузки) Тогда
	Отказ = 1;
Иначе
	ОбъектКоллекции.ПодразделениеОрганизации = ОбъектКоллекции.ФизЛицо.Подразделение.Получить(Параметры.ДатаКонцаПериодаВыгрузки);
	ОбъектКоллекции.Должность = ОбъектКоллекции.ФизЛицо.Должность;
КонецЕсли;</ПередВыгрузкой>
						<Свойство>
							<Код>2</Код>
							<Наименование> --&gt; ФизЛицо</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.СотрудникиОрганизаций"/>
							<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ФизЛицо;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование> --&gt; ПодразделениеОрганизации</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПодразделениеОрганизации" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ПодразделенияОрганизаций                          </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование> --&gt; Должность</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Должность" Вид="Реквизит" Тип="СправочникСсылка.ДолжностиОрганизаций"/>
							<КодПравилаКонвертации>ДолжностиОрганизаций                              </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование> --&gt; ДатаПриема</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаПриема" Вид="Реквизит" Тип="Дата"/>
							<ПередВыгрузкой>Значение = глДатаПриема(ОбъектКоллекции.ФизЛицо);</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>16</Код>
						<Наименование> --&gt; ОсновныеНачисления</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОсновныеНачисления" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>КоллекцияОбъектов = Параметры.СписокРаботников;
КоллекцияОбъектов.НоваяКолонка("ВидРасчета");
КоллекцияОбъектов.НоваяКолонка("Размер");</ПередОбработкойВыгрузки>
						<ПередВыгрузкой>ДатаПриема = глДатаПриема(ОбъектКоллекции.ФизЛицо);
Если (ДатаПриема = Дата(0)) ИЛИ (ДатаПриема &gt; Параметры.ДатаКонцаПериодаВыгрузки) Тогда
	Отказ = 1;
Иначе
	ОбъектКоллекции.ВидРасчета = ОбъектКоллекции.ФизЛицо;
	ОбъектКоллекции.Размер = ОбъектКоллекции.ФизЛицо.Оклад.Получить(Параметры.ДатаКонцаПериодаВыгрузки);
КонецЕсли;</ПередВыгрузкой>
						<Свойство>
							<Код>17</Код>
							<Наименование> --&gt; ФизЛицо</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.СотрудникиОрганизаций"/>
							<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ФизЛицо;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование> --&gt; ВидРасчета</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидРасчета" Вид="Реквизит" Тип="ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций"/>
							<КодПравилаКонвертации>ОсновныеНачисленияОрганизаций                     </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование> --&gt; Размер</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Размер" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Свойство Поиск="true">
						<Код>9</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Параметры.ДатаКонцаПериодаВыгрузки;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование> --&gt; Проведен</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>12</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>15</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>700</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>20</Код>
						<Наименование> --&gt; ПриказНаГруппуСотрудников</Наименование>
						<Порядок>750</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПриказНаГруппуСотрудников" Вид="Реквизит" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>УволенныеРаботники</Код>
				<Наименование> --&gt; ДокументСсылка.УвольненияИзОрганизаций</Наименование>
				<Порядок>100</Порядок>
				<ПередВыгрузкой>Если Параметры.СписокРаботников.КоличествоСтрок() = 0 Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
				<Приемник>ДокументСсылка.УвольнениеИзОрганизаций</Приемник>
				<Свойства>
					<Группа>
						<Код>5</Код>
						<Наименование> --&gt; РаботникиОрганизации</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РаботникиОрганизации" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>КоллекцияОбъектов = Параметры.СписокУволенныхРаботников;</ПередОбработкойВыгрузки>
						<ПередВыгрузкой>Если ОбъектКоллекции.ФизЛицо.Выбран() = 0 Тогда
	Отказ = 1;
Иначе
	
	Параметры.ПараметрыАлгоритмов.Установить("ФизЛицо", ОбъектКоллекции.ФизЛицо);
	ДатаУвольнения = ОпределитьДатуУвольнения();
	
	Если ДатаУвольнения = Дата(0) Тогда
		Отказ = 1;
	ИначеЕсли ДатаУвольнения &gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
		Отказ = 1;		
	КонецЕсли;
	
КонецЕсли;

</ПередВыгрузкой>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; Физлицо</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.СотрудникиОрганизаций"/>
							<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ФизЛицо;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; ДатаУвольнения</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаУвольнения" Вид="Реквизит" Тип="Дата"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("ФизЛицо", ОбъектКоллекции.ФизЛицо);
Значение = ОпределитьДатуУвольнения();</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Параметры.ДатаКонцаПериодаВыгрузки;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Проведен</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; ПриказНаГруппуСотрудников</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПриказНаГруппуСотрудников" Вид="Реквизит" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВводНачальныхОстатковНМАИНИОКР</Код>
				<Наименование> --&gt; ДокументСсылка.ПринятиеКУчетуНМА</Наименование>
				<Порядок>150</Порядок>
				<ПередВыгрузкой>Если ВходящиеДанные.Получить("НМА").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
				<ПослеЗагрузки>ПровестиЗаписьНеЗаписанныхОбъектов();</ПослеЗагрузки>
				<Приемник>ДокументСсылка.ВводНачальныхОстатков</Приемник>
				<Свойства>
					<Группа>
						<Код>24</Код>
						<Наименование> --&gt; НМА</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НМА" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>КоллекцияОбъектов = ВходящиеДанные.Получить("НМА");
КоллекцияОбъектов.НоваяКолонка("СпособПоступления");
КоллекцияОбъектов.НоваяКолонка("СпособОтраженияРасходов");
КоллекцияОбъектов.НоваяКолонка("МетодНачисленияАмортизацииНУ");
КоллекцияОбъектов.НоваяКолонка("СпособНачисленияАмортизацииБУ");
КоллекцияОбъектов.НоваяКолонка("НачислятьАмортизациюБУ");
КоллекцияОбъектов.НоваяКолонка("НачислятьАмортизациюНУ");
КоллекцияОбъектов.НоваяКолонка("ВидОбъектаУчета");
КоллекцияОбъектов.НоваяКолонка("АмортизацияДо2009");
КоллекцияОбъектов.НоваяКолонка("ФактическийСрокИспользованияДо2009");

Параметры.БУ_ДатаКонца = СоздатьОбъект("БухгалтерскиеИтоги");
Параметры.БУ_ДатаКонца.ПериодМ(Параметры.ДатаКонцаПериодаВыгрузки);</ПередОбработкойВыгрузки>
						<ПередВыгрузкой>ОбъектКоллекции.СпособПоступления = ОбъектКоллекции.НМА.СпособПоступления;
ОбъектКоллекции.СпособОтраженияРасходов = ОбъектКоллекции.НМА;
ОбъектКоллекции.МетодНачисленияАмортизацииНУ = ОбъектКоллекции.НМА.МетодНачисленияАмортизации;
ОбъектКоллекции.СпособНачисленияАмортизацииБУ = ОбъектКоллекции.НМА.СпособНачисленияАмортизации;


НМА = ОбъектКоллекции.НМА;

ОбъектКоллекции.ВидОбъектаУчета  = ?(НМА.ВидОбъектаУчета = 0, "НематериальныйАктив", "РасходыНаНИОКР");

Если (НМА.ПорядокНачисленияАмортизации &lt;&gt; 0) и (НМА.ПервоначальнаяСтоимостьН &lt;&gt; 0) Тогда
	ОбъектКоллекции.НачислятьАмортизациюНУ = 1;
	
Иначе
	ОбъектКоллекции.НачислятьАмортизациюНУ = 0;
КонецЕсли;

Если (НМА.ПорядокНачисленияАмортизации &lt;&gt; 1) и (НМА.ПервоначальнаяСтоимость &lt;&gt; 0) Тогда
	ОбъектКоллекции.НачислятьАмортизациюБУ = 1;
	
Иначе
	ОбъектКоллекции.НачислятьАмортизациюБУ = 0;
КонецЕсли;

//сведения о НМА до 2009 г.
Если (Константа.МетодНачисленияАмортизацииНУ.Получить(Параметры.ДатаВводаОстатков - 1) = Перечисление.МетодыНачисленияАмортизации.Линейный)
ИЛИ (((НМА.АмортизационнаяГруппа = Перечисление.АмортизационныеГруппы.ВосьмаяГруппа)
ИЛИ (НМА.АмортизационнаяГруппа = Перечисление.АмортизационныеГруппы.ДевятаяГруппа)
ИЛИ (НМА.АмортизационнаяГруппа = Перечисление.АмортизационныеГруппы.ДесятаяГруппа)))
ИЛИ ((НМА.МетодНачисленияАмортизации = Перечисление.МетодыНачисленияАмортизации.Линейный) И (НМА.АмортизационнаяГруппа = Перечисление.АмортизационныеГруппы.ОтдельнаяГруппа)) Тогда
	
	ДатаПереходаНаЛинейныйМетод ='01.01.2009';
	
	Если НМА.СрокПолезногоИспользованияН &gt; 0 Тогда
		Если (ПустоеЗначение(НМА.Состояние.Получить(ДатаПереходаНаЛинейныйМетод)) = 1)
		ИЛИ ((НМА.АмортизационнаяГруппа = Перечисление.АмортизационныеГруппы.ВосьмаяГруппа)
		ИЛИ (НМА.АмортизационнаяГруппа = Перечисление.АмортизационныеГруппы.ДевятаяГруппа)
		ИЛИ (НМА.АмортизационнаяГруппа = Перечисление.АмортизационныеГруппы.ДесятаяГруппа)
		ИЛИ (НМА.АмортизационнаяГруппа = Перечисление.АмортизационныеГруппы.ОтдельнаяГруппа)) 
		ИЛИ ((ПустоеЗначение(НМА.Состояние.Получить('31.12.2008')) = 0) И (НМА.МетодНачисленияАмортизации = Перечисление.МетодыНачисленияАмортизации.Линейный)) Тогда 
			//Условие выполняется для объектов принятых в период применения линейного метода, для объектов
			// отдельной группы, по которым применялся линейный метод, для объектов по которым до 2009 г.
			// применялся нелинейный метод, отдельным объектам 8-9 групп для которых всегда применяется линейный метод
			
		Иначе
			
			БухИтЛ = СоздатьОбъект("БухгалтерскиеИтоги");
			БухИтЛ .Актуальность(1);
			БухИтЛ.ПериодМ(ДатаПереходаНаЛинейныйМетод);
			
			ЛинейныйНачисленнаяАмортизацияНалог    = БухИтЛ.СНК("Н05.04",,, НМА);

			Если ПустоеЗначение (НМА.ДатаПринятияКУчету) = 1 Тогда
				ОставшийсяСрокПолезногоИспользования = 0;
			Иначе
				
				СрокЭксплуатацииЛет = Макс(0, (ДатаГод(ДатаПереходаНаЛинейныйМетод) - ДатаГод(НМА.ДатаПринятияКУчету))*12 - 1);
				СрокЭксплуатации = СрокЭксплуатацииЛет + (ДатаМесяц(ДатаПереходаНаЛинейныйМетод) - ДатаМесяц(НМА.ДатаПринятияКУчету));
				
			КонецЕсли;
			
		КонецЕсли;							
		
	КонецЕсли;
КонецЕсли;

ОбъектКоллекции.ФактическийСрокИспользованияДо2009= СрокЭксплуатации;
ОбъектКоллекции.АмортизацияДо2009  = ЛинейныйНачисленнаяАмортизацияНалог;
</ПередВыгрузкой>
						<Свойство>
							<Код>3</Код>
							<Наименование> --&gt; ВидОбъектаУчета</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидОбъектаУчета" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыОбъектовУчетаНМА"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ВидОбъектаУчета;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование> --&gt; СпособОтраженияРасходов</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособОтраженияРасходов" Вид="Реквизит" Тип="СправочникСсылка.СпособыОтраженияРасходовПоАмортизации"/>
							<КодПравилаКонвертации>СпособыОтраженияРасходовПоАмортизации             </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение =  ОбъектКоллекции.НМА;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование> --&gt; НачислятьАмортизациюБУ</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НачислятьАмортизациюБУ" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НачислятьАмортизациюБУ;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование> --&gt; СпособНачисленияАмортизацииНУ</Наименование>
							<Порядок>450</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="МетодНачисленияАмортизацииНУ" Вид="Реквизит" Тип="ПеречислениеСсылка.МетодыНачисленияАмортизации"/>
							<КодПравилаКонвертации>МетодыНачисленияАмортизации                       </КодПравилаКонвертации>
							<ПередВыгрузкой>ВыбСпособ = ОбъектКоллекции.МетодНачисленияАмортизацииНУ;
Если ПустоеЗначение(ВыбСпособ) = 1 Тогда
	ВыбСпособ = "";
	
Иначе
	ВыбСпособ = ВыбСпособ.Идентификатор();
КонецЕсли;

Значение = ВыбСпособ;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; НачислятьАмортизациюНУ</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НачислятьАмортизациюНУ" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Если ОбъектКоллекции.ВидОбъектаУчета = "НематериальныйАктив" Тогда
	Значение = ОбъектКоллекции.НачислятьАмортизациюНУ;
Иначе
	Значение = ОбъектКоллекции.СписыватьРасходыНУ;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование> --&gt; СтоимостьБУ</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПервоначальнаяСтоимостьБУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НМА.ПервоначальнаяСтоимость;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование> --&gt; СтоимостьНУ</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПервоначальнаяСтоимостьНУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Если ОбъектКоллекции.ВидОбъектаУчета = "НематериальныйАктив" Тогда
	Значение = ОбъектКоллекции.НМА.ПервоначальнаяСтоимостьН;
Иначе
	Значение = ОбъектКоллекции.ПервоначальнаяСтоимостьНУ;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>7</Код>
							<Наименование> --&gt; НематериальныйАктив</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НематериальныйАктив" Вид="Реквизит" Тип="СправочникСсылка.НематериальныеАктивы"/>
							<КодПравилаКонвертации>НематериальныеАктивы                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НМА;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование> --&gt; ОбъемПродукцииРаботДляВычисленияАмортизации</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОбъемПродукцииРаботДляВычисленияАмортизации" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НМА.ОбщийОбъемПродукцииРабот;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование> --&gt; СпециальныйКоэффициентНУ</Наименование>
							<Порядок>1000</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпециальныйКоэффициентНУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НМА.СпециальныйКоэффициент.Получить(Параметры.ДатаКонцаПериодаВыгрузки);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование> --&gt; СпособНачисленияАмортизацииБУ</Наименование>
							<Порядок>1100</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособНачисленияАмортизацииБУ" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыНачисленияАмортизацииНМА"/>
							<КодПравилаКонвертации>СпособыНачисленияАмортизацииНМА                   </КодПравилаКонвертации>
							<ПередВыгрузкой>ВыбСпособ = ОбъектКоллекции.СпособНачисленияАмортизацииБУ;
Если ПустоеЗначение(ВыбСпособ) = 1 Тогда
	ВыбСпособ = "";
	
Иначе
	ВыбСпособ = ВыбСпособ.Идентификатор();
КонецЕсли;

Значение = ВыбСпособ;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование> --&gt; СпособПоступления</Наименование>
							<Порядок>1300</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособПоступления" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыПоступленияАктивов"/>
							<КодПравилаКонвертации>СпособыПоступленияНМА                             </КодПравилаКонвертации>
							<ПередВыгрузкой>ВыбСпособ = ОбъектКоллекции.СпособПоступления;
Если ПустоеЗначение(ВыбСпособ) = 1 Тогда
	ВыбСпособ = "ПриобретениеЗаПлату";
	
Иначе
	ВыбСпособ = ВыбСпособ.Идентификатор();
КонецЕсли;

Значение = ВыбСпособ;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование> --&gt; СрокПолезногоИспользованияБУ</Наименование>
							<Порядок>1400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СрокПолезногоИспользованияБУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НМА.СрокПолезногоИспользования;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование> --&gt; СрокПолезногоИспользованияНУ</Наименование>
							<Порядок>1500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СрокПолезногоИспользованияНУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Если ОбъектКоллекции.ВидОбъектаУчета = "НематериальныйАктив" Тогда
	Значение = ОбъектКоллекции.НМА.СрокПолезногоИспользованияН;
Иначе
	Значение = ОбъектКоллекции.СрокИспользованияНУ;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование> --&gt; СчетНачисленияАмортизацииБУ</Наименование>
							<Порядок>2000</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетНачисленияАмортизацииБУ" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<ПередВыгрузкой>Значение = ?(ОбъектКоллекции.НМА.ПорядокНачисленияАмортизации = 2, "05", "04.01");</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование> --&gt; СчетУчетаБУ</Наименование>
							<Порядок>2200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчетаБУ" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<ПередВыгрузкой>Значение = ?(ОбъектКоллекции.ВидОбъектаУчета = "НематериальныйАктив", "04.01", "04.02");</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>30</Код>
							<Наименование> --&gt; ДатаПринятияКУчетуРегл</Наименование>
							<Порядок>2350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаПринятияКУчетуРегл" Вид="Реквизит" Тип="Дата"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НМА.ДатаПринятияКУчету;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>31</Код>
							<Наименование> --&gt; ТекущаяСтоимостьБУ</Наименование>
							<Порядок>2400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ТекущаяСтоимостьБУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Если ВходящиеДанные.Получить("Дата") = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Значение = ОбъектКоллекции.СтоимостьБУКон;
Иначе
	Значение = ОбъектКоллекции.СтоимостьБУ;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>32</Код>
							<Наименование> --&gt; ТекущаяСтоимостьНУ</Наименование>
							<Порядок>2450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ТекущаяСтоимостьНУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Если ВходящиеДанные.Получить("Дата") = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Значение = ОбъектКоллекции.СтоимостьНУКон;
Иначе
	Значение = ОбъектКоллекции.СтоимостьНУ;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>33</Код>
							<Наименование> --&gt; ТекущаяСтоимостьПР</Наименование>
							<Порядок>2500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ТекущаяСтоимостьПР" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Если ВходящиеДанные.Получить("Дата") = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Значение = ОбъектКоллекции.СтоимостьПРКон;
Иначе
	Значение = ОбъектКоллекции.СтоимостьПР;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>34</Код>
							<Наименование> --&gt; ТекущаяСтоимостьВР</Наименование>
							<Порядок>2550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ТекущаяСтоимостьВР" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>ЗначениеБУ = 0;
Если ВходящиеДанные.Получить("Дата") = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	ЗначениеБУ = ОбъектКоллекции.СтоимостьБУКон;
Иначе
	ЗначениеБУ = ОбъектКоллекции.СтоимостьБУ;
КонецЕсли;
ЗначениеНУ = 0;
Если ВходящиеДанные.Получить("Дата") = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	ЗначениеНУ = ОбъектКоллекции.СтоимостьНУКон;
Иначе
	ЗначениеНУ = ОбъектКоллекции.СтоимостьНУ;
КонецЕсли;
ЗначениеПР = 0;
Если ВходящиеДанные.Получить("Дата") = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	ЗначениеПР = ОбъектКоллекции.СтоимостьПРКон;
Иначе
	ЗначениеПР = ОбъектКоллекции.СтоимостьПР;
КонецЕсли;

Значение = ЗначениеБУ - ЗначениеНУ - ЗначениеПР;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>35</Код>
							<Наименование> --&gt; НакопленнаяАмортизацияБУ</Наименование>
							<Порядок>2600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НакопленнаяАмортизацияБУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Если ОбъектКоллекции.ВидОбъектаУчета  = "НематериальныйАктив" Тогда
	Если ВходящиеДанные.Получить("Дата") = Параметры.ДатаКонцаПериодаВыгрузки Тогда
		Значение = ОбъектКоллекции.АмортизацияБУКон;
	Иначе
		Значение = ОбъектКоллекции.АмортизацияБУ;
	КонецЕсли;
Иначе
	Значение = 0;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>36</Код>
							<Наименование> --&gt; НакопленнаяАмортизацияНУ</Наименование>
							<Порядок>2650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НакопленнаяАмортизацияНУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Если ОбъектКоллекции.ВидОбъектаУчета  = "НематериальныйАктив" Тогда
	Если ВходящиеДанные.Получить("Дата") = Параметры.ДатаКонцаПериодаВыгрузки Тогда
		Значение = ОбъектКоллекции.АмортизацияНУКон;
	Иначе
		Значение = ОбъектКоллекции.АмортизацияНУ;
	КонецЕсли;
Иначе
	Значение = 0;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>37</Код>
							<Наименование> --&gt; НакопленнаяАмортизацияПР</Наименование>
							<Порядок>2700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НакопленнаяАмортизацияПР" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Если ОбъектКоллекции.ВидОбъектаУчета  = "НематериальныйАктив" Тогда
	Если ВходящиеДанные.Получить("Дата") = Параметры.ДатаКонцаПериодаВыгрузки Тогда
		Значение = ОбъектКоллекции.АмортизацияПРКон;
	Иначе
		Значение = ОбъектКоллекции.АмортизацияПР;
	КонецЕсли;
Иначе
	Значение = 0;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>38</Код>
							<Наименование> --&gt; НакопленнаяАмортизацияВР</Наименование>
							<Порядок>2750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НакопленнаяАмортизацияВР" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>ЗначениеБУ = 0;
Если ОбъектКоллекции.ВидОбъектаУчета  = "НематериальныйАктив" Тогда
	Если ВходящиеДанные.Получить("Дата") = Параметры.ДатаКонцаПериодаВыгрузки Тогда
		ЗначениеБУ = ОбъектКоллекции.АмортизацияБУКон;
	Иначе
		ЗначениеБУ = ОбъектКоллекции.АмортизацияБУ;
	КонецЕсли;
Иначе
	ЗначениеБУ = 0;
КонецЕсли;
ЗначениеНУ = 0;
Если ОбъектКоллекции.ВидОбъектаУчета  = "НематериальныйАктив" Тогда
	Если ВходящиеДанные.Получить("Дата") = Параметры.ДатаКонцаПериодаВыгрузки Тогда
		ЗначениеНУ = ОбъектКоллекции.АмортизацияНУКон;
	Иначе
		ЗначениеНУ = ОбъектКоллекции.АмортизацияНУ;
	КонецЕсли;
Иначе
	ЗначениеНУ = 0;
КонецЕсли;
ЗначениеПР = 0;
Если ОбъектКоллекции.ВидОбъектаУчета  = "НематериальныйАктив" Тогда
	Если ВходящиеДанные.Получить("Дата") = Параметры.ДатаКонцаПериодаВыгрузки Тогда
		ЗначениеПР = ОбъектКоллекции.АмортизацияПРКон;
	Иначе
		ЗначениеПР = ОбъектКоллекции.АмортизацияПР;
	КонецЕсли;
Иначе
	ЗначениеПР = 0;
КонецЕсли;

Значение = ЗначениеБУ - ЗначениеНУ - ЗначениеПР;

//Если ОбъектКоллекции.ВидОбъектаУчета  = "НематериальныйАктив" Тогда
//	Если ВходящиеДанные.Получить("Дата") = Параметры.ДатаКонцаПериодаВыгрузки Тогда
//		Значение = ОбъектКоллекции.АмортизацияВРКон;
//	Иначе
//		Значение = ОбъектКоллекции.АмортизацияВР;
//	КонецЕсли;
//Иначе
//	Значение = 0;
//КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>41</Код>
							<Наименование> --&gt; АмортизацияДо2009</Наименование>
							<Порядок>2800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="АмортизацияДо2009" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.АмортизацияДо2009;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>42</Код>
							<Наименование> --&gt; ФактическийСрокИспользованияДо2009</Наименование>
							<Порядок>2850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФактическийСрокИспользованияДо2009" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ФактическийСрокИспользованияДо2009;</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>27</Код>
						<Наименование> --&gt; Проведен</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>28</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "# Перенесено из 1С:Бухгалтерии 7.7 # " + ВходящиеДанные.Получить("ВидОбъектаУчета") + " " + ВходящиеДанные.Получить("ОтражатьВНУ");</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>9</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование> --&gt; ОтражатьВНалоговомУчете</Наименование>
						<Порядок>300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтражатьВБухгалтерскомУчете" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>26</Код>
						<Наименование> --&gt; ФормироватьПроводки</Наименование>
						<Порядок>350</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтражатьВНалоговомУчете" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>40</Код>
						<Наименование> --&gt; ФормироватьПроводки</Наименование>
						<Порядок>350</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтражатьПоСпециальнымРегистрам" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>29</Код>
						<Наименование> --&gt; РазделУчета</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РазделУчета" Вид="Реквизит" Тип="ПеречислениеСсылка.РазделыУчетаДляВводаОстатков"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВводНачальныхОстатковОС</Код>
				<Наименование> --&gt; ДокументСсылка.ВводНачальныхОстатковОС</Наименование>
				<Порядок>200</Порядок>
				<ПередВыгрузкой>Если ВходящиеДанные.Получить("ОС").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
				<ПослеЗагрузки>ПровестиЗаписьНеЗаписанныхОбъектов();</ПослеЗагрузки>
				<Приемник>ДокументСсылка.ВводНачальныхОстатков</Приемник>
				<Свойства>
					<Группа>
						<Код>1</Код>
						<Наименование> --&gt; ОС</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОС" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>КоллекцияОбъектов = ВходящиеДанные.Получить("ОС");
КоллекцияОбъектов.НоваяКолонка("СпособПоступленияРегл");
КоллекцияОбъектов.НоваяКолонка("МОЛРегл");
КоллекцияОбъектов.НоваяКолонка("СпособОтраженияРасходовПоАмортизации");
КоллекцияОбъектов.НоваяКолонка("СпособОтраженияРасходовПоАмортизацииНУ");
КоллекцияОбъектов.НоваяКолонка("МетодНачисленияАмортизацииНУ");
КоллекцияОбъектов.НоваяКолонка("СпособНачисленияАмортизацииБУ");
КоллекцияОбъектов.НоваяКолонка("НазваниеДокументаПринятияКУчетуРегл");
КоллекцияОбъектов.НоваяКолонка("НомерДокументаПринятияКУчетуРегл");
КоллекцияОбъектов.НоваяКолонка("ДатаПоследнейМодернизацииРегл");
КоллекцияОбъектов.НоваяКолонка("СтоимостьДляВычисленияАмортизацииБУ");
КоллекцияОбъектов.НоваяКолонка("СуммаПоследнейМодернизацииБУ");
КоллекцияОбъектов.НоваяКолонка("СуммаПоследнейМодернизацииНУ");
КоллекцияОбъектов.НоваяКолонка("НомерДокументаМодернизацииРегл");
КоллекцияОбъектов.НоваяКолонка("НазваниеДокументаМодернизацииРегл");
КоллекцияОбъектов.НоваяКолонка("НачислятьАмортизациюБУ");
КоллекцияОбъектов.НоваяКолонка("ПорядокПогашенияСтоимостиБУ");
КоллекцияОбъектов.НоваяКолонка("НачислятьАмортизациюНУ");
КоллекцияОбъектов.НоваяКолонка("ПорядокВключенияСтоимостиВСоставРасходовНУ");
КоллекцияОбъектов.НоваяКолонка("АмортизацияДо2009");
КоллекцияОбъектов.НоваяКолонка("ФактическийСрокИспользованияДо2009");

Параметры.БУ_ДатаКонца = СоздатьОбъект("БухгалтерскиеИтоги");
Параметры.БУ_ДатаКонца.ПериодМ(Параметры.ДатаКонцаПериодаВыгрузки);</ПередОбработкойВыгрузки>
						<ПередВыгрузкой>ОбъектКоллекции.СпособПоступленияРегл = ОбъектКоллекции.ОсновноеСредство.СпособПоступления;
ОбъектКоллекции.МОЛРегл = ОбъектКоллекции.ОсновноеСредство.МОЛ.Получить(Параметры.ДатаКонцаПериодаВыгрузки);
ОбъектКоллекции.СпособОтраженияРасходовПоАмортизации = ОбъектКоллекции.ОсновноеСредство;
ОбъектКоллекции.СпособОтраженияРасходовПоАмортизацииНУ = ОбъектКоллекции.ОсновноеСредство;
ОбъектКоллекции.МетодНачисленияАмортизацииНУ = ОбъектКоллекции.ОсновноеСредство.МетодНачисленияАмортизации;
ОбъектКоллекции.СпособНачисленияАмортизацииБУ = ОбъектКоллекции.ОсновноеСредство.СпособНачисленияАмортизации;

ОС = ОбъектКоллекции.ОсновноеСредство;

// Получение документов ввода в эксплуатацию и модернизации
ОбъектКоллекции.НазваниеДокументаПринятияКУчетуРегл = "";
ОбъектКоллекции.НомерДокументаПринятияКУчетуРегл = "";
			
Экспл = СоздатьОбъект("Периодический");
Экспл.ИспользоватьОбъект("Состояние", ОС.ТекущийЭлемент());
Экспл.ВыбратьЗначения(ОС.ДатаВводаВЭксплуатацию, Параметры.ДатаКонцаПериодаВыгрузки);
Пока Экспл.ПолучитьЗначение() = 1 Цикл
	ИстДок = Экспл.ТекущийДокумент();
	Если ИстДок.Выбран() = 1 Тогда
		Если ИстДок.Вид() = "ВводВЭксплуатациюОС" Тогда
			ОбъектКоллекции.НазваниеДокументаПринятияКУчетуРегл = "Акт ОС-1";
			ОбъектКоллекции.НомерДокументаПринятияКУчетуРегл = ИстДок.НомерДок;
			Прервать;
		КонецЕсли;
	КонецЕсли;
КонецЦикла;

// Реквизиты модернизированного объекта
ОбъектМодернизирован = ОС.ОбъектМодернизирован.Получить(Параметры.ДатаКонцаПериодаВыгрузки);
Если ОбъектМодернизирован = 1 Тогда // была модернизация
	ДатаМодернизации = глДатаНаКоторуюУстановленоЗначение(ОС, "ОбъектМодернизирован", Параметры.ДатаКонцаПериодаВыгрузки);
	ОбъектКоллекции.ДатаПоследнейМодернизацииРегл = ДатаМодернизации;
	
	БУ = СоздатьОбъект("БухгалтерскиеИтоги");
	БУ.ПериодМ(ДатаМодернизации);
	СуммаАмортизации = БУ.СКК("02",,, ОС);
	ОбъектКоллекции.СтоимостьДляВычисленияАмортизацииБУ = ОбъектКоллекции.ТекущаяСтоимостьБУКон - СуммаАмортизации;
	
	СтоимостьДоМодернизации = ОС.ПервоначальнаяСтоимость.Получить(ДатаМодернизации - 1);
	СтоимостьПослеМодернизации = ОС.ПервоначальнаяСтоимость.Получить(ДатаМодернизации);
	ОбъектКоллекции.СуммаПоследнейМодернизацииБУ = СтоимостьПослеМодернизации - СтоимостьДоМодернизации;
	
	СтоимостьДоМодернизации = ОС.ПервоначальнаяСтоимостьН.Получить(ДатаМодернизации - 1);
	СтоимостьПослеМодернизации = ОС.ПервоначальнаяСтоимостьН.Получить(ДатаМодернизации);
	ОбъектКоллекции.СуммаПоследнейМодернизацииНУ = СтоимостьПослеМодернизации - СтоимостьДоМодернизации;
	
	Экспл = СоздатьОбъект("Периодический");
	Экспл.ИспользоватьОбъект("ПервоначальнаяСтоимость", ОС.ТекущийЭлемент());
	Экспл.ВыбратьЗначения(ОС.ДатаВводаВЭксплуатацию, Параметры.ДатаКонцаПериодаВыгрузки);
	Пока Экспл.ПолучитьЗначение() = 1 Цикл
		ИстДок = Экспл.ТекущийДокумент();
		Если ИстДок.Выбран() = 1 Тогда
			Если ИстДок.Вид() = "МодернизацияОС" Тогда
				ОбъектКоллекции.НазваниеДокументаМодернизацииРегл = "Акт ОС-3";
				ОбъектКоллекции.НомерДокументаМодернизацииРегл = ИстДок.НомерДок;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
Иначе
	ОбъектКоллекции.ДатаПоследнейМодернизацииРегл = ПолучитьПустоеЗначение("Дата");
	ОбъектКоллекции.СтоимостьДляВычисленияАмортизацииБУ = 0;
	ОбъектКоллекции.СуммаПоследнейМодернизацииБУ = 0;
	ОбъектКоллекции.СуммаПоследнейМодернизацииНУ = 0;
	ОбъектКоллекции.НомерДокументаМодернизацииРегл = "";
	ОбъектКоллекции.НазваниеДокументаМодернизацииРегл = "";
КонецЕсли;

Если ПустоеЗначение(ОС.МатериалДляОтраженияВСоставеМПЗ)=0 Тогда
	ОбъектКоллекции.ПорядокПогашенияСтоимостиБУ = "СписаниеПриПринятииКУчету";
	ОбъектКоллекции.НачислятьАмортизациюБУ = 0;
	
Иначе
	БУ_ДатаКонца = Параметры.БУ_ДатаКонца;
		
	Если БУ_ДатаКонца.СКД("МЦ.01",,, ОС) &gt; 0 Тогда
	    ОбъектКоллекции.ПорядокПогашенияСтоимостиБУ = "СписаниеПриПринятииКУчету";
		ОбъектКоллекции.НачислятьАмортизациюБУ = 0;
		
	ИначеЕсли ОС.ПодлежитАмортизации = 1 Тогда
		ОбъектКоллекции.НачислятьАмортизациюБУ = ОС.НачислятьАмортизацию.Получить(Параметры.ДатаКонцаПериодаВыгрузки);
		ОбъектКоллекции.ПорядокПогашенияСтоимостиБУ = "НачислениеАмортизации";
				
	Иначе
		ОбъектКоллекции.НачислятьАмортизациюБУ = ОС.НачислятьАмортизацию.Получить(Параметры.ДатаКонцаПериодаВыгрузки);
		ОбъектКоллекции.ПорядокПогашенияСтоимостиБУ = "НачислениеИзносаПоЕНАОФ";
	КонецЕсли;
КонецЕсли;
	
Если (ОС.ПодлежитАмортизации = 1) и (ОС.ПервоначальнаяСтоимостьН.Получить(Параметры.ДатаКонцаПериодаВыгрузки) &lt;&gt; 0) Тогда
	ОбъектКоллекции.НачислятьАмортизациюНУ = ОС.НачислятьАмортизацию.Получить(Параметры.ДатаКонцаПериодаВыгрузки);
	ОбъектКоллекции.ПорядокВключенияСтоимостиВСоставРасходовНУ = "НачислениеАмортизации";
	
Иначе
	ОбъектКоллекции.НачислятьАмортизациюНУ = 0;
	ОбъектКоллекции.ПорядокВключенияСтоимостиВСоставРасходовНУ = "СтоимостьНеВключаетсяВРасходы";
КонецЕсли;

// Сведение об ОС до 2009 года
ЛинейныйНачисленнаяАмортизацияНалог = 0;
СрокЭксплуатации = 0;

СрокПолезногоИспользования = ОС.СрокПолезногоИспользованияН.Получить(Параметры.ДатаВводаОстатков - 1);

Если (Константа.МетодНачисленияАмортизацииНУ.Получить(Параметры.ДатаВводаОстатков - 1) = Перечисление.МетодыНачисленияАмортизации.Линейный)
ИЛИ (((ОС.АмортизационнаяГруппа = Перечисление.АмортизационныеГруппы.ВосьмаяГруппа)
ИЛИ (ОС.АмортизационнаяГруппа = Перечисление.АмортизационныеГруппы.ДевятаяГруппа)
ИЛИ (ОС.АмортизационнаяГруппа = Перечисление.АмортизационныеГруппы.ДесятаяГруппа)) 
И ((ОС.Группа = Перечисление.ГруппыОС.Здания) ИЛИ (ОС.Группа = Перечисление.ГруппыОС.Сооружения) ИЛИ (ОС.Группа = Перечисление.ГруппыОС.ПередаточныеУстройства)))
ИЛИ ((ОС.МетодНачисленияАмортизации = Перечисление.МетодыНачисленияАмортизации.Линейный) И (ОС.АмортизационнаяГруппа = Перечисление.АмортизационныеГруппы.ОтдельнаяГруппа)) Тогда
	
	ДатаПереходаНаЛинейныйМетод ='01.01.2009';
	
	Если СрокПолезногоИспользования &gt; 0 Тогда
		Если (ПустоеЗначение(ОС.Состояние.Получить(ДатаПереходаНаЛинейныйМетод)) = 1) 
		ИЛИ (((ОС.АмортизационнаяГруппа = Перечисление.АмортизационныеГруппы.ВосьмаяГруппа)
		ИЛИ (ОС.АмортизационнаяГруппа = Перечисление.АмортизационныеГруппы.ДевятаяГруппа)
		ИЛИ (ОС.АмортизационнаяГруппа = Перечисление.АмортизационныеГруппы.ДесятаяГруппа))
		И ((ОС.Группа = Перечисление.ГруппыОС.Здания) ИЛИ (ОС.Группа = Перечисление.ГруппыОС.Сооружения) ИЛИ (ОС.Группа = Перечисление.ГруппыОС.ПередаточныеУстройства)))
		ИЛИ (ОС.АмортизационнаяГруппа = Перечисление.АмортизационныеГруппы.ОтдельнаяГруппа)
		ИЛИ ((ПустоеЗначение(ОС.Состояние.Получить('31.12.2008')) = 0) И (ОС.МетодНачисленияАмортизации = Перечисление.МетодыНачисленияАмортизации.Линейный)) Тогда 
			//Условие выполняется для объектов принятых в период применения линейного метода, для объектов
			// отдельной группы, по которым применялся линейный метод, для объектов по которым до 2009 г.
			// применялся нелинейный метод, отдельным объектам 8-9 групп для которых всегда применяется линейный метод
			
		Иначе // переход к линейному методу от нелинейного
			
			БухИтЛ = СоздатьОбъект("БухгалтерскиеИтоги");
			БухИтЛ .Актуальность(1);
			БухИтЛ.ПериодМ(ДатаПереходаНаЛинейныйМетод);
			
			ЛинейныйНачисленнаяАмортизацияНалог    = БухИтЛ.СНК("Н05.02",,, ОС);
			
			Если ПустоеЗначение (ОС.ДатаВводаВЭксплуатацию) = 1 Тогда
				ОставшийсяСрокПолезногоИспользования = 0;
			Иначе
				
				СрокЭксплуатацииЛет = Макс(0, (ДатаГод(ДатаПереходаНаЛинейныйМетод) - ДатаГод(ОС.ДатаВводаВЭксплуатацию))*12 - 1);
				СрокЭксплуатации = СрокЭксплуатацииЛет + (ДатаМесяц(ДатаПереходаНаЛинейныйМетод) - ДатаМесяц(ОС.ДатаВводаВЭксплуатацию));
				
			КонецЕсли;
			
			
		КонецЕсли;							
		
	КонецЕсли;
КонецЕсли;

ОбъектКоллекции.ФактическийСрокИспользованияДо2009= СрокЭксплуатации;
ОбъектКоллекции.АмортизацияДо2009  = ЛинейныйНачисленнаяАмортизацияНалог;

</ПередВыгрузкой>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование> --&gt; ОсновноеСредство</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОсновноеСредство" Вид="Реквизит" Тип="СправочникСсылка.ОсновныеСредства"/>
							<КодПравилаКонвертации>ОсновныеСредства                                  </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование> --&gt; ИнвентарныйНомер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИнвентарныйНомерРегл" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОсновноеСредство.Код;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование> --&gt; ДатаПринятияКУчетуБУ</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаПринятияКУчетуРегл" Вид="Реквизит" Тип="Дата"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ДатаВводаВЭксплуатацию;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование> --&gt; СостояниеПринятияКУчетуБУ</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СостояниеПринятияКУчетуРегл" Вид="Реквизит" Тип="СправочникСсылка.СобытияОС"/>
							<КодПравилаКонвертации>ОСВводИПринятиеКУчету                             </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "2";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование> --&gt; СпособПоступления</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособПоступленияРегл" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыПоступленияАктивов"/>
							<КодПравилаКонвертации>СпособыПоступленияОС                              </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование> --&gt; ПервоначальнаяСтоимостьБУ</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПервоначальнаяСтоимостьБУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Если ОбъектКоллекции.ПорядокПогашенияСтоимостиБУ = "ОтражениеВСоставеМПЗ" Тогда
	Значение = 0;
Иначе
	Значение = ОбъектКоллекции.ОсновноеСредство.ПервоначальнаяСтоимость.Получить(Параметры.ДатаКонцаПериодаВыгрузки);
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>56</Код>
							<Наименование> --&gt; ТекущаяСтоимостьБУ</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ТекущаяСтоимостьБУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Если ВходящиеДанные.получить("Дата") = (Параметры.ДатаВводаОстатков - 1) Тогда
	Если ПустоеЗначение(ОбъектКоллекции.ТекущаяСтоимостьБУНач) = 1 Тогда
		Отказ = 1;
	Иначе
		Значение = ОбъектКоллекции.ТекущаяСтоимостьБУНач;
	КонецЕсли;
Иначе
	Если ПустоеЗначение(ОбъектКоллекции.ТекущаяСтоимостьБУКон) = 1 Тогда
		Если ПустоеЗначение(ОбъектКоллекции.ТекущаяСтоимостьБУНач) = 1 Тогда
			Отказ = 1;
		Иначе
			Значение = ОбъектКоллекции.ТекущаяСтоимостьБУНач;
		КонецЕсли;
	Иначе
		Значение = ОбъектКоллекции.ТекущаяСтоимостьБУКон;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>33</Код>
							<Наименование> --&gt; НакопленнаяАмортизацияБУ</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НакопленнаяАмортизацияБУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Если ВходящиеДанные.получить("Дата") = (Параметры.ДатаВводаОстатков - 1) Тогда
	Если ПустоеЗначение(ОбъектКоллекции.НакопленнаяАмортизацияБУНач) = 1 Тогда
		Отказ = 1;
		
	Иначе
		Значение = ОбъектКоллекции.НакопленнаяАмортизацияБУНач;
	КонецЕсли;
Иначе
	Если ПустоеЗначение(ОбъектКоллекции.НакопленнаяАмортизацияБУКон) = 1 Тогда
		Если ПустоеЗначение(ОбъектКоллекции.НакопленнаяАмортизацияБУНач) = 1 Тогда
			Отказ = 1;
		Иначе
			Значение = ОбъектКоллекции.НакопленнаяАмортизацияБУНач;
		КонецЕсли;
	Иначе
		Значение = ОбъектКоллекции.НакопленнаяАмортизацияБУКон;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование> --&gt; ПервоначальнаяСтоимостьНУ</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПервоначальнаяСтоимостьНУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОсновноеСредство.ПервоначальнаяСтоимостьН.Получить(Параметры.ДатаКонцаПериодаВыгрузки);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>57</Код>
							<Наименование> --&gt; ТекущаяСтоимостьНУ</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ТекущаяСтоимостьНУ" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>34</Код>
							<Наименование> --&gt; НакопленнаяАмортизацияНУ</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НакопленнаяАмортизацияНУ" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование> --&gt; СчетУчетаБУ</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчетаБУ" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.СчетУчетаБУ) = 1 Тогда
	Значение = СчетПоКоду("01.1");

Иначе
	Значение = ОбъектКоллекции.СчетУчетаБУ;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование> --&gt; СчетАмортизацииБУ</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетАмортизацииБУ" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.СчетАмортизацииБУ) = 1 Тогда
	Значение = СчетПоКоду("02.1");

Иначе
	Значение = ОбъектКоллекции.СчетАмортизацииБУ;
	Если (ПустоеЗначение(ОбъектКоллекции.НакопленнаяАмортизацияБУНач) = 1)
		И (ПустоеЗначение(ОбъектКоллекции.СчетУчетаБУ) = 0) Тогда
		Если Лев(ОбъектКоллекции.СчетУчетаБУ,2) = "03" Тогда
			Значение = СчетПоКоду("02.2");
		КонецЕсли;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>29</Код>
							<Наименование> --&gt; МОЛБУ</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="МОЛРегл" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>71</Код>
							<Наименование> --&gt; ПорядокПогашенияСтоимостиБУ</Наименование>
							<Порядок>950</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПорядокПогашенияСтоимостиБУ" Вид="Реквизит" Тип="ПеречислениеСсылка.ПорядокПогашенияСтоимостиОС"/>
						</Свойство>
						<Свойство>
							<Код>35</Код>
							<Наименование> --&gt; НачислятьАмортизациюБУ</Наименование>
							<Порядок>1000</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НачислятьАмортизациюБУ" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование> --&gt; СпособНачисленияАмортизацииБУ</Наименование>
							<Порядок>1050</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособНачисленияАмортизацииБУ" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыНачисленияАмортизацииОС"/>
							<КодПравилаКонвертации>СпособыНачисленияАмортизацииОС                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>47</Код>
							<Наименование> --&gt; СпособОтраженияРасходовПоАмортизации</Наименование>
							<Порядок>1100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособОтраженияРасходовПоАмортизации" Вид="Реквизит" Тип="СправочникСсылка.СпособыОтраженияРасходовПоАмортизации"/>
							<КодПравилаКонвертации>СпособыОтраженияРасходовПоАмортизации             </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>50</Код>
							<Наименование> --&gt; СрокПолезногоИспользованияБУ</Наименование>
							<Порядок>1150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СрокПолезногоИспользованияБУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОсновноеСредство.СрокПолезногоИспользования.Получить(Параметры.ДатаКонцаПериодаВыгрузки);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>68</Код>
							<Наименование> --&gt; КоэффициентАмортизацииБУ</Наименование>
							<Порядок>1200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КоэффициентАмортизацииБУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОсновноеСредство.КоэффициентАмортизации.Получить(Параметры.ДатаКонцаПериодаВыгрузки);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>69</Код>
							<Наименование> --&gt; КоэффициентУскоренияБУ</Наименование>
							<Порядок>1250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КоэффициентУскоренияБУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОсновноеСредство.КоэффициентУскорения;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>41</Код>
							<Наименование> --&gt; ОбъемПродукцииРаботБУ</Наименование>
							<Порядок>1300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОбъемПродукцииРаботБУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОсновноеСредство.ОбщийОбъемПродукцииРабот.Получить(Параметры.ДатаКонцаПериодаВыгрузки);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>43</Код>
							<Наименование> --&gt; ПараметрВыработкиБУ</Наименование>
							<Порядок>1350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПараметрВыработкиБУ" Вид="Реквизит" Тип="СправочникСсылка.ПараметрыВыработкиОС"/>
							<КодПравилаКонвертации>ПараметрыВыработкиОС                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>42</Код>
							<Наименование> --&gt; ОбъемПродукцииРаботДляВычисленияАмортизацииБУ</Наименование>
							<Порядок>1400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОбъемПродукцииРаботДляВычисленияАмортизацииБУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОсновноеСредство.ОбщийОбъемПродукцииРабот.Получить(Параметры.ДатаКонцаПериодаВыгрузки);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>23</Код>
							<Наименование> --&gt; ВыработкаКоличествоБУ</Наименование>
							<Порядок>1450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВыработкаКоличествоБУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОсновноеСредство.ФактическийОбъемПродукцииРаботЗаМесяц.Получить(Параметры.ДатаКонцаПериодаВыгрузки);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>53</Код>
							<Наименование> --&gt; СтоимостьДляВычисленияАмортизацииБУ</Наименование>
							<Порядок>1500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтоимостьДляВычисленияАмортизацииБУ" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>49</Код>
							<Наименование> --&gt; СрокИспользованияДляВычисленияАмортизацииБУ</Наименование>
							<Порядок>1550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СрокИспользованияДляВычисленияАмортизацииБУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>ОС = ОбъектКоллекции.ОсновноеСредство;
ОбъектМодернизирован = ОС.ОбъектМодернизирован.Получить(Параметры.ДатаКонцаПериодаВыгрузки);
ДатаМодернизации = ПолучитьПустоеЗначение("Дата");
Если ОбъектМодернизирован = 1 Тогда // была модернизация
	ДатаМодернизации = глДатаНаКоторуюУстановленоЗначение(ОС, "ОбъектМодернизирован", Параметры.ДатаКонцаПериодаВыгрузки);
КонецЕсли;
		
СрокПолезногоИспользования = ОС.СрокПолезногоИспользования.Получить(Параметры.ДатаКонцаПериодаВыгрузки);
				
Если ОбъектМодернизирован = 1 Тогда // была модернизация
	ОставшийсяСрокПолезногИспользованияПослеМодернизации = 0;
	ОстаточнаяСтоимостьПослеМодернизации = ОС.ОстаточнаяСтоимостьПослеМодернизации.Получить(Параметры.ДатаКонцаПериодаВыгрузки);
	Если (ПустоеЗначение(ДатаМодернизации) = 0)
	   и (ПустоеЗначение(ОС.ДатаВводаВЭксплуатацию) = 0) Тогда
		ОставшийсяСрокПолезногИспользованияПослеМодернизации = СрокПолезногоИспользования - 
				(ДатаГод(КонМесяца(ДатаМодернизации)) - ДатаГод(КонМесяца(ОС.ДатаВводаВЭксплуатацию))) * 12 
				- (ДатаМесяц(КонМесяца(ДатаМодернизации)) - ДатаМесяц(КонМесяца(ОС.ДатаВводаВЭксплуатацию)));
	КонецЕсли;
	СрокПолезногоИспользования = ОставшийсяСрокПолезногИспользованияПослеМодернизации;
КонецЕсли;

Если ОбъектМодернизирован = 1 Тогда // была модернизация
	Значение = СрокПолезногоИспользования;
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>51</Код>
							<Наименование> --&gt; СрокПолезногоИспользованияНУ</Наименование>
							<Порядок>1600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СрокПолезногоИспользованияНУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОсновноеСредство.СрокПолезногоИспользованияН.Получить(Параметры.ДатаКонцаПериодаВыгрузки);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>72</Код>
							<Наименование> --&gt; ПорядокВключенияСтоимостиВСоставРасходов</Наименование>
							<Порядок>1650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПорядокВключенияСтоимостиВСоставРасходовНУ" Вид="Реквизит" Тип="ПеречислениеСсылка.ПорядокВключенияСтоимостиОСВСоставРасходовНУ"/>
						</Свойство>
						<Свойство>
							<Код>36</Код>
							<Наименование> --&gt; НачислятьАмортизациюНУ</Наименование>
							<Порядок>1700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НачислятьАмортизациюНУ" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование> --&gt; МетодНачисленияАмортизацииНУ</Наименование>
							<Порядок>1750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="МетодНачисленияАмортизацииНУ" Вид="Реквизит" Тип="ПеречислениеСсылка.МетодыНачисленияАмортизации"/>
							<КодПравилаКонвертации>МетодыНачисленияАмортизации                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>45</Код>
							<Наименование> --&gt; СпециальныйКоэффициентНУ</Наименование>
							<Порядок>1850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпециальныйКоэффициентНУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОсновноеСредство.СпециальныйКоэффициент.Получить(Параметры.ДатаКонцаПериодаВыгрузки);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>74</Код>
							<Наименование> --&gt; ТекущаяСтоимостьПР</Наименование>
							<Порядок>1900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ТекущаяСтоимостьПР" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Если Константа.ПрименяетсяПБУ18.Получить(Параметры.ДатаКонцаПериодаВыгрузки) &lt;&gt; Да Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>78</Код>
							<Наименование> --&gt; НакопленнаяАмортизацияПР</Наименование>
							<Порядок>1950</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НакопленнаяАмортизацияПР" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Если Константа.ПрименяетсяПБУ18.Получить(Параметры.ДатаКонцаПериодаВыгрузки) &lt;&gt; Да Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование> --&gt; СтоимостьДо2002НУ</Наименование>
							<Порядок>2000</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтоимостьДо2002НУ" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование> --&gt; АмортизацияДо2002НУ</Наименование>
							<Порядок>2050</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="АмортизацияДо2002НУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОсновноеСредство.АмортизацияНачисленнаяДо2002;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>70</Код>
							<Наименование> --&gt; ДатаПоследнейМодернизацииРегл</Наименование>
							<Порядок>2300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаПоследнейМодернизацииРегл" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>76</Код>
							<Наименование> --&gt; СуммаПоследнейМодернизацииБУ</Наименование>
							<Порядок>2350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаПоследнейМодернизацииБУ" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>77</Код>
							<Наименование> --&gt; СуммаПоследнейМодернизацииНУ</Наименование>
							<Порядок>2400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаПоследнейМодернизацииНУ" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>44</Код>
							<Наименование> --&gt; СостояниеМодернизацииБУ</Наименование>
							<Порядок>2450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СостояниеМодернизацииРегл" Вид="Реквизит" Тип="СправочникСсылка.СобытияОС"/>
							<КодПравилаКонвертации>ОСМодернизация                                    </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1"; Отказ = ПустоеЗначение(ОбъектКоллекции.ОсновноеСредство.ОбъектМодернизирован.Получить(Параметры.ДатаКонцаПериодаВыгрузки));</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>83</Код>
							<Наименование> --&gt; НомерДокументаПринятияКУчетуРегл</Наименование>
							<Порядок>2500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НомерДокументаПринятияКУчетуРегл" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>81</Код>
							<Наименование> --&gt; НазваниеДокументаПринятияКУчетуРегл</Наименование>
							<Порядок>2550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НазваниеДокументаПринятияКУчетуРегл" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>85</Код>
							<Наименование> --&gt; НазваниеДокументаМодернизацииРегл</Наименование>
							<Порядок>2600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НомерДокументаМодернизацииРегл" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>84</Код>
							<Наименование> --&gt; НазваниеДокументаМодернизацииРегл</Наименование>
							<Порядок>2650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НазваниеДокументаМодернизацииРегл" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>90</Код>
							<Наименование> --&gt; АмортизацияДо2009</Наименование>
							<Порядок>2700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="АмортизацияДо2009" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>91</Код>
							<Наименование> --&gt; ФактическийСрокИспользованияДо2009</Наименование>
							<Порядок>2750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФактическийСрокИспользованияДо2009" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Свойство Поиск="true">
						<Код>59</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>60</Код>
						<Наименование> --&gt; Проведен</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>63</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "# Перенесено из 1С:Бухгалтерии 7.7 # Остатки по разделу ""Основные средства"" Подразделение: """ + Строка(ВходящиеДанные.Получить("Подразделение")) + """" + "#" + Строка(ВходящиеДанные.Получить("ГруппировкаДокументов")) + "#";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>64</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>79</Код>
						<Наименование> --&gt; ФормироватьПроводки</Наименование>
						<Порядок>300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтражатьВБухгалтерскомУчете" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>66</Код>
						<Наименование> --&gt; ОтражатьВНалоговомУчете</Наименование>
						<Порядок>350</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтражатьВНалоговомУчете" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>88</Код>
						<Наименование> --&gt; ОтражатьВНалоговомУчете</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтражатьПоСпециальнымРегистрам" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>86</Код>
						<Наименование> --&gt; РазделУчета</Наименование>
						<Порядок>450</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РазделУчета" Вид="Реквизит" Тип="ПеречислениеСсылка.РазделыУчетаДляВводаОстатков"/>
					</Свойство>
					<Свойство>
						<Код>89</Код>
						<Наименование> --&gt; ПодразделениеОрганизации</Наименование>
						<Порядок>500</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПодразделениеОрганизации" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
						<КодПравилаКонвертации>ПодразделенияОрганизаций                          </КодПравилаКонвертации>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВводОстатковНДС</Код>
				<Наименование> --&gt; ДокументСсылка.ВводНачальныхОстатковНДС</Наименование>
				<Порядок>250</Порядок>
				<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные.Получить("РазделУчета")) = 1 Тогда
	Отказ = 1;
Иначе
	Если (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "НДСПоПриобретеннымЦенностям")
		И (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "НДСПоАвансамПолученным")
		И (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "НДСНачисленный") Тогда
		Отказ = 1;
	Иначе
		Если ПустоеЗначение(ВходящиеДанные.Получить("ДанныеПоСФНДС")) = 1 Тогда
			Отказ = 1;
			
		ИначеЕсли ВходящиеДанные.Получить("ДанныеПоСФНДС").КоличествоСтрок() = 0 Тогда
			Отказ = 1;	
		КонецЕсли;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
				<ПослеЗагрузки>ПровестиЗаписьНеЗаписанныхОбъектов();
Объект.ОбменДанными.Загрузка = Ложь;
Объект.Записать();
Объект.ОбменДанными.Загрузка = Истина;</ПослеЗагрузки>
				<Приемник>ДокументСсылка.ВводНачальныхОстатков</Приемник>
				<Свойства>
					<Группа>
						<Код>1</Код>
						<Наименование> --&gt; ДанныеПоСФНДС</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДанныеПоСФНДС" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ПустоеЗначение(ВходящиеДанные.Получить("ДанныеПоСФНДС")) = 1 Тогда
	Отказ = 1;

ИначеЕсли ВходящиеДанные.Получить("ДанныеПоСФНДС").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
	
Иначе
	Значение = ВходящиеДанные.Получить("ДанныеПоСФНДС");
	Значение.НоваяКолонка("СуммаБезНДСОплата", "Число");
	Значение.НоваяКолонка("НДСОплата", "Число");

КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>22</Код>
							<Наименование> --&gt; СчетУчетаНДС</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>28</Код>
							<Наименование> --&gt; СтавкаНДС</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтавкаНДС" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
							<ПередВыгрузкой>Если ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "НДСПоАвансамПолученным" Тогда
	ИмяПКО =  "СтавкиНДС";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>27</Код>
							<Наименование> --&gt; ВидЦенности</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидЦенности" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыЦенностей"/>
							<ПередВыгрузкой>Если ОбъектКоллекции.ВидЦенности = "ТаможенныеПлатежи" Тогда
	Значение = "ПрочиеРаботыИУслуги";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование> --&gt; Контрагент</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование> --&gt; ДоговорКонтрагента</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>45</Код>
							<Наименование> --&gt; СчетФактура</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетФактура" Вид="Реквизит"/>
							<ПередВыгрузкой>ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
ИсходящиеДанные.Установить("СделатьСсылкуНаДокВводаОстатков", 1);
ИсходящиеДанные.Установить("ВидОперации", ВходящиеДанные.Получить("ВидОперации"));

Если ПустоеЗначение(ОбъектКоллекции.СчетФактура) = 1 Тогда
	Отказ = 1;
	
ИначеЕсли ОбъектКоллекции.СчетФактура.Вид() = "ПоступлениеМатериалов" Тогда
	ИмяПКО = "ПоступлениеМатериалов";
	
ИначеЕсли ОбъектКоллекции.СчетФактура.Вид() = "ПоступлениеНМА" Тогда
	ИмяПКО = "ПоступлениеНМА";
	
ИначеЕсли ОбъектКоллекции.СчетФактура.Вид() = "ПоступлениеОборудования" Тогда
	ИмяПКО = "ПоступлениеОборудования";
	
ИначеЕсли ОбъектКоллекции.СчетФактура.Вид() = "ПоступлениеОС" Тогда
	ИмяПКО = "ПоступлениеОС";
	
ИначеЕсли ОбъектКоллекции.СчетФактура.Вид() = "ПоступлениеТоваров" Тогда
	ИмяПКО = "ПоступлениеТоваров";
	
ИначеЕсли ОбъектКоллекции.СчетФактура.Вид() = "СчетФактураПолученный" Тогда
	ИмяПКО = "СчетФактураПолученный";
	
ИначеЕсли ОбъектКоллекции.СчетФактура.Вид() = "УслугиСтороннихОрганизаций" Тогда
	ИмяПКО = "УслугиСтороннихОрганизаций";
	
ИначеЕсли ОбъектКоллекции.СчетФактура.Вид() = "СчетФактура" Тогда
	Если ВходящиеДанные.Получить("ВидОперации") = "НДСпоАвансамПолученным" Тогда
		ИмяПКО = "СчетФактураНаАванс";	
		
	Иначе
		ИмяПКО = "СчетФактура";
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование> --&gt; ПредъявленСФ</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПредъявленСФ" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование> --&gt; ДатаСФ</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаСФ" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование> --&gt; НомерСФ</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НомерСФ" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование> --&gt; СуммаБезНДС</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаБезНДС" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование> --&gt; НДС</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НДС" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование> --&gt; ДатаПлатежноРасчетногоДокумента</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаПлатежноРасчетногоДокумента" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>47</Код>
							<Наименование> --&gt; НомерПлатежноРасчетногоДокумента</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НомерПлатежноРасчетногоДокумента" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>41</Код>
							<Наименование> --&gt; ВалютаВзаиморасчетов</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаВзаиморасчетов" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<ПередВыгрузкой>Значение = Параметры.Рубли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>42</Код>
							<Наименование> --&gt; КратностьВзаиморасчетов</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КратностьВзаиморасчетов" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>43</Код>
							<Наименование> --&gt; ВалютаАванса</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаАванса" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>44</Код>
							<Наименование> --&gt; КурсВзаиморасчетов</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КурсВзаиморасчетов" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>49</Код>
							<Наименование> --&gt; ВалютнаяСуммаСНДС</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютнаяСуммаСНДС" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>57</Код>
							<Наименование> --&gt; НДСОплата</Наименование>
							<Порядок>950</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НДСОплата" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Если ОбъектКоллекции.ВидЦенности = "АвансыВыданные" Тогда
	Значение = ОбъектКоллекции.НДС;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>56</Код>
							<Наименование> --&gt; СуммаБезНДСОплата</Наименование>
							<Порядок>950</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаБезНДСОплата" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Если ОбъектКоллекции.ВидЦенности = "АвансыВыданные" Тогда
	Значение = ОбъектКоллекции.СуммаБезНДС;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Свойство Поиск="true">
						<Код>11</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>//Если Параметры.ДатаКонцаПериодаВыгрузки &gt; Параметры.ДатаВводаОстатков Тогда
//	Значение = Параметры.ДатаКонцаПериодаВыгрузки;
//	
//Иначе
//	Значение = Параметры.ДатаВводаОстатков - 1;
//КонецЕсли;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование> --&gt; Проведен</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>13</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>ПолучитьКомментарийДокумента();

Значение = Значение + " Остатки по счету """ + Строка(ВходящиеДанные.Получить("СчетУчетаНДС")) + """";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>14</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>53</Код>
						<Наименование> --&gt; ФормироватьПроводки</Наименование>
						<Порядок>300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтражатьВБухгалтерскомУчете" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>52</Код>
						<Наименование> --&gt; ОтражатьВНалоговомУчете</Наименование>
						<Порядок>350</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтражатьВНалоговомУчете" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>55</Код>
						<Наименование> --&gt; ОтражатьВНалоговомУчете</Наименование>
						<Порядок>350</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтражатьПоСпециальнымРегистрам" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>15</Код>
						<Наименование> --&gt; ВидОперации</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РазделУчета" Вид="Реквизит" Тип="ПеречислениеСсылка.РазделыУчетаДляВводаОстатков"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>НДФЛиЕСНДоходыИНалоги</Код>
				<Наименование> --&gt; ДокументСсылка.НДФЛиЕСНДоходыИНалоги</Наименование>
				<Порядок>300</Порядок>
				<ПередВыгрузкой>Если (ВходящиеДанные.Получить("НДФЛСведенияОДоходах").КоличествоСтрок() = 0) и
	(ВходящиеДанные.Получить("НДФЛИсчисленный13").КоличествоСтрок() = 0) и
	(ВходящиеДанные.Получить("НДФЛУдержанный").КоличествоСтрок() = 0) Тогда
	Отказ = 1;
КонецЕсли;

Если ДатаГод(Параметры.ДатаВводаОстатков) &lt; 2010 Тогда
	Если (ВходящиеДанные.Получить("ЕСНСведенияОДоходах").КоличествоСтрок() = 0) и
		(ВходящиеДанные.Получить("ЕСННалоги").КоличествоСтрок() = 0) Тогда
		Отказ = 1;
	КонецЕсли;
Иначе
	Если (ВходящиеДанные.Получить("СтраховыеВзносыСведенияОДоходах").КоличествоСтрок() = 0) и
		(ВходящиеДанные.Получить("СтраховыеВзносы").КоличествоСтрок() = 0) Тогда
		Отказ = 1;
	КонецЕсли;
КонецЕсли;
</ПередВыгрузкой>
				<Приемник>ДокументСсылка.НДФЛиЕСНДоходыИНалоги</Приемник>
				<Свойства>
					<Группа>
						<Код>1</Код>
						<Наименование> --&gt; НДФЛСведенияОДоходах</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НДФЛСведенияОДоходах" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>2</Код>
							<Наименование> --&gt; ФизЛицо</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование> --&gt; ПериодРегистрации</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование> --&gt; ДатаДохода</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаДохода" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование> --&gt; МесяцНалоговогоПериода</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="МесяцНалоговогоПериода" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование> --&gt; ПериодРегистрации</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; КодДохода</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КодДохода" Вид="Реквизит" Тип="СправочникСсылка.ДоходыНДФЛ"/>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; СуммаДохода</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаДохода" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование> --&gt; КодВычета</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КодВычета" Вид="Реквизит" Тип="СправочникСсылка.ВычетыНДФЛ"/>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование> --&gt; СуммаВычета</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаВычета" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование> --&gt; СуммаНалогаИсчисленная</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаНалогаИсчисленная" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>11</Код>
						<Наименование> --&gt; НДФЛИсчисленный13</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НДФЛИсчисленный13" Вид="ТабличнаяЧасть"/>
						<ПередВыгрузкой>Если (ПустоеЗначение(ОбъектКоллекции.Налог) = 1) Тогда
		Отказ = 1;
КонецЕсли;
	</ПередВыгрузкой>
						<Свойство>
							<Код>12</Код>
							<Наименование> --&gt; ФизЛицо</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование> --&gt; МесяцНалоговогоПериода</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="МесяцНалоговогоПериода" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование> --&gt; Налог</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Налог" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>49</Код>
							<Наименование> --&gt; ПериодРегистрации</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>50</Код>
						<Наименование> --&gt; НДФЛПредоставленныеВычеты</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НДФЛПредоставленныеВычеты" Вид="ТабличнаяЧасть"/>
						<ПередВыгрузкой>Если (ПустоеЗначение(ОбъектКоллекции.КодВычета) = 1) Тогда
		Отказ = 1;
КонецЕсли;
	</ПередВыгрузкой>
						<Свойство>
							<Код>51</Код>
							<Наименование> --&gt; ФизЛицо</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>52</Код>
							<Наименование> --&gt; МесяцНалоговогоПериода</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="МесяцНалоговогоПериода" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>53</Код>
							<Наименование> --&gt; ПримененныйВычет</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПримененныйВычет" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>54</Код>
							<Наименование> --&gt; ПериодРегистрации</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>55</Код>
							<Наименование> --&gt; КодВычета</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КодВычета" Вид="Реквизит" Тип="СправочникСсылка.ВычетыНДФЛ"/>
							<ПередВыгрузкой>Если (ОбъектКоллекции.КодВычета.КодДляОтчетности2009 &lt;&gt; "103")
	И (ОбъектКоллекции.КодВычета.КодДляОтчетности2009 &lt;&gt; "104")
	И (ОбъектКоллекции.КодВычета.КодДляОтчетности2009 &lt;&gt; "105") Тогда
	
	ИмяПКО = "ВычетыНаРебенка";
Иначе
	ИмяПКО = "ВычетыНДФЛЛичный";
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>18</Код>
						<Наименование> --&gt; ЕСНСведенияОДоходах</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЕСНСведенияОДоходах" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>19</Код>
							<Наименование> --&gt; ФизЛицо</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>20</Код>
							<Наименование> --&gt; МесяцНалоговогоПериода</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="МесяцНалоговогоПериода" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование> --&gt; КодДоходаЕСН</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КодДоходаЕСН" Вид="Реквизит" Тип="СправочникСсылка.ДоходыЕСН"/>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование> --&gt; СуммаДохода</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаДохода" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>24</Код>
							<Наименование> --&gt; ОблагаетсяЕНВД</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОблагаетсяЕНВД" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>25</Код>
						<Наименование> --&gt; ЕСННалоги</Наименование>
						<Порядок>250</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЕСННалоги" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>26</Код>
							<Наименование> --&gt; ФизЛицо</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>27</Код>
							<Наименование> --&gt; МесяцНалоговогоПериода</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="МесяцНалоговогоПериода" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>28</Код>
							<Наименование> --&gt; ФедеральныйБюджет</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФедеральныйБюджет" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>29</Код>
							<Наименование> --&gt; ФСС</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФСС" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>30</Код>
							<Наименование> --&gt; ФФОМС</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФФОМС" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>31</Код>
							<Наименование> --&gt; ТФОМС</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ТФОМС" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>32</Код>
							<Наименование> --&gt; ПФРНакопительная</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПФРНакопительная" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>33</Код>
							<Наименование> --&gt; ПФРСтраховая</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПФРСтраховая" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>34</Код>
							<Наименование> --&gt; ПримененнаяЛьготаФБ</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПримененнаяЛьготаФБ" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>35</Код>
							<Наименование> --&gt; ПримененнаяЛьготаФСС</Наименование>
							<Порядок>1000</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПримененнаяЛьготаФСС" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>36</Код>
							<Наименование> --&gt; ПримененнаяЛьготаФОМС</Наименование>
							<Порядок>1100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПримененнаяЛьготаФОМС" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>37</Код>
							<Наименование> --&gt; ПФРНакопительнаяЕНВД</Наименование>
							<Порядок>1200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПФРНакопительнаяЕНВД" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>38</Код>
							<Наименование> --&gt; ПФРСтраховаяЕНВД</Наименование>
							<Порядок>1300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПФРСтраховаяЕНВД" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>39</Код>
						<Наименование> --&gt; НДФЛУдержанный</Наименование>
						<Порядок>300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НДФЛУдержанный" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>40</Код>
							<Наименование> --&gt; ФизЛицо</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>41</Код>
							<Наименование> --&gt; ПериодРегистрации</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>42</Код>
							<Наименование> --&gt; МесяцНалоговогоПериода</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="МесяцНалоговогоПериода" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>43</Код>
							<Наименование> --&gt; СтавкаНалогообложения</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтавкаНалогообложения" Вид="Реквизит" Тип="ПеречислениеСсылка.НДФЛСтавкиНалогообложенияРезидента"/>
						</Свойство>
						<Свойство>
							<Код>44</Код>
							<Наименование> --&gt; Налог</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Налог" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Свойство Поиск="true">
						<Код>45</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Параметры.ДатаКонцаПериодаВыгрузки;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>46</Код>
						<Наименование> --&gt; Проведен</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>47</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>48</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
					</Свойство>
					<Группа>
						<Код>56</Код>
						<Наименование> --&gt; СтраховыеВзносыСведенияОДоходах</Наименование>
						<Порядок>550</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СтраховыеВзносыСведенияОДоходах" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>58</Код>
							<Наименование> --&gt; ФизЛицо</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>59</Код>
							<Наименование> --&gt; МесяцРасчетногоПериода</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="МесяцРасчетногоПериода" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>60</Код>
							<Наименование> --&gt; ВидДохода</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДохода" Вид="Реквизит" Тип="СправочникСсылка.ДоходыПоСтраховымВзносам"/>
						</Свойство>
						<Свойство>
							<Код>61</Код>
							<Наименование> --&gt; Результат</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Результат" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>62</Код>
							<Наименование> --&gt; ОблагаетсяЕНВД</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОблагаетсяЕНВД" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>74</Код>
							<Наименование> --&gt; Скидка</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Скидка" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>57</Код>
						<Наименование> --&gt; СтраховыеВзносы</Наименование>
						<Порядок>600</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СтраховыеВзносы" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>63</Код>
							<Наименование> --&gt; ФизЛицо</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>64</Код>
							<Наименование> --&gt; МесяцРасчетногоПериода</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="МесяцРасчетногоПериода" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>65</Код>
							<Наименование> --&gt; ПФРНакопительная</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПФРНакопительная" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>66</Код>
							<Наименование> --&gt; ПФРНакопительнаяЕНВД</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПФРНакопительнаяЕНВД" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>67</Код>
							<Наименование> --&gt; ПФРСтраховая</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПФРСтраховая" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>68</Код>
							<Наименование> --&gt; ПФРСтраховаяЕНВД</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПФРСтраховаяЕНВД" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>69</Код>
							<Наименование> --&gt; ТФОМС</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ТФОМС" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>70</Код>
							<Наименование> --&gt; ФФОМС</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФФОМС" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>71</Код>
							<Наименование> --&gt; ФСС</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФСС" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>72</Код>
							<Наименование> --&gt; ФССНесчастныеСлучаи</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФССНесчастныеСлучаи" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Свойство>
						<Код>73</Код>
						<Наименование> --&gt; НалоговыйПериод</Наименование>
						<Порядок>650</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НалоговыйПериод" Вид="Реквизит" Тип="Число"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>УстановкаЦенНоменклатуры</Код>
				<Наименование> --&gt; ДокументСсылка.УстановкаЦенНоменклатуры</Наименование>
				<Порядок>350</Порядок>
				<Приемник>ДокументСсылка.УстановкаЦенНоменклатуры</Приемник>
				<Свойства>
					<Группа>
						<Код>1</Код>
						<Наименование> --&gt; Товары</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Товары" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>2</Код>
							<Наименование> --&gt; Номенклатура</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
							<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование> --&gt; Цена</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Цена" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование> --&gt; Валюта</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Валюта" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
						</Свойство>
					</Группа>
					<Свойство Поиск="true">
						<Код>5</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Параметры.ДатаВводаОстатков;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>6</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>8</Код>
						<Наименование> --&gt; ТипЦен</Наименование>
						<Порядок>500</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ТипЦен" Вид="Реквизит" Тип="СправочникСсылка.ТипыЦенНоменклатуры"/>
						<КодПравилаКонвертации>ТипЦеныНоменклатуры                               </КодПравилаКонвертации>
						<ПередВыгрузкой>ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
ИсходящиеДанные.Установить("Наименование", ВходящиеДанные.Получить("Наименование"));
ИсходящиеДанные.Установить("ЦенаВключаетНДС", ВходящиеДанные.Получить("ЦенаВключаетНДС"));
ИсходящиеДанные.Установить("ВалютаЦены", ВходящиеДанные.Получить("ВалютаЦены"));</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование> --&gt; Информация</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Информация" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Строка(ВходящиеДанные.Получить("Наименование"));</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СписаниеОС</Код>
				<Наименование>: </Наименование>
				<Порядок>400</Порядок>
				<ПередВыгрузкой>Если (ВходящиеДанные.Получить("ОС").КоличествоСтрок() = 0) Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
				<ПослеЗагрузки>ПровестиЗаписьНеЗаписанныхОбъектов();

СобытияОСОрганизаций = Объект.Движения.СобытияОСОрганизаций;

Для Каждого СтрокаТаблицы ИЗ СобытияОСОрганизаций Цикл		
	СтрокаТаблицы.НазваниеДокумента = Строка(Объект.Метаданные());
	СтрокаТаблицы.НомерДокумента = Объект.Номер;
КонецЦикла;

ПровестиЗаписьНеЗаписанныхОбъектов();</ПослеЗагрузки>
				<Приемник>ДокументСсылка.СписаниеОС</Приемник>
				<Свойства>
					<Группа>
						<Код>1</Код>
						<Наименование> --&gt; ОС</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОС" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>13</Код>
							<Наименование> --&gt; ОсновноеСредство</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОсновноеСредство" Вид="Реквизит" Тип="СправочникСсылка.ОсновныеСредства"/>
							<КодПравилаКонвертации>ОсновныеСредства                                  </КодПравилаКонвертации>
						</Свойство>
					</Группа>
					<Группа>
						<Код>2</Код>
						<Наименование> --&gt; НачислениеАмортизацииОСБухгалтерскийУчет</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НачислениеАмортизацииОСБухгалтерскийУчет" Вид="НаборДвиженийРегистраСведений"/>
						<Свойство>
							<Код>14</Код>
							<Наименование> --&gt; НачислятьАмортизацию</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НачислятьАмортизацию" Вид="Ресурс" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование> --&gt; ОсновноеСредство</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОсновноеСредство" Вид="Измерение" Тип="СправочникСсылка.ОсновныеСредства"/>
							<КодПравилаКонвертации>ОсновныеСредства                                  </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование> --&gt; Период</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>3</Код>
						<Наименование> --&gt; НачислениеАмортизацииОСНалоговыйУчет</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НачислениеАмортизацииОСНалоговыйУчет" Вид="НаборДвиженийРегистраСведений"/>
						<Свойство>
							<Код>18</Код>
							<Наименование> --&gt; НачислятьАмортизацию</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НачислятьАмортизацию" Вид="Ресурс" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>20</Код>
							<Наименование> --&gt; ОсновноеСредство</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОсновноеСредство" Вид="Измерение" Тип="СправочникСсылка.ОсновныеСредства"/>
							<КодПравилаКонвертации>ОсновныеСредства                                  </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование> --&gt; Период</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>4</Код>
						<Наименование> --&gt; СостоянияОСОрганизаций</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СостоянияОСОрганизаций" Вид="НаборДвиженийРегистраСведений"/>
						<Свойство>
							<Код>22</Код>
							<Наименование> --&gt; ДатаСостояния</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаСостояния" Вид="Ресурс" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>23</Код>
							<Наименование> --&gt; ОсновноеСредство</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОсновноеСредство" Вид="Измерение" Тип="СправочникСсылка.ОсновныеСредства"/>
							<КодПравилаКонвертации>ОсновныеСредства                                  </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>24</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>25</Код>
							<Наименование> --&gt; Состояние</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Состояние" Вид="Ресурс" Тип="ПеречислениеСсылка.СостоянияОС"/>
							<ПередВыгрузкой>Значение = "СнятоСУчета";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>30</Код>
							<Наименование> --&gt; Период</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>5</Код>
						<Наименование> --&gt; СобытияОСОрганизаций</Наименование>
						<Порядок>250</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СобытияОСОрганизаций" Вид="НаборДвиженийРегистраСведений"/>
						<Свойство>
							<Код>26</Код>
							<Наименование> --&gt; ОсновноеСредство</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОсновноеСредство" Вид="Измерение" Тип="СправочникСсылка.ОсновныеСредства"/>
							<КодПравилаКонвертации>ОсновныеСредства                                  </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>27</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>28</Код>
							<Наименование> --&gt; Событие</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Событие" Вид="Ресурс" Тип="СправочникСсылка.СобытияОС"/>
							<КодПравилаКонвертации>ОСВыбытие                                         </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "ВыбытиеОС";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>29</Код>
							<Наименование> --&gt; Период</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
					</Группа>
					<Свойство Поиск="true">
						<Код>6</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>7</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>8</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование> --&gt; Проведен</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование> --&gt; СобытиеОС</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СобытиеОС" Вид="Реквизит" Тип="СправочникСсылка.СобытияОС"/>
						<КодПравилаКонвертации>ОСВыбытие                                         </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "ВыбытиеОС";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование> --&gt; СчетСписания</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СчетСписания" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
						<ПередВыгрузкой>Значение = "ПрочиеРасходы";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>12</Код>
						<Наименование> --&gt; РучнаяКорректировка</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РучнаяКорректировка" Вид="Реквизит" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>РасчетыПоСтраховымВзносам</Код>
				<Наименование>: </Наименование>
				<Порядок>450</Порядок>
				<Приемник>ДокументСсылка.РасчетыПоСтраховымВзносам</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование> --&gt; ДатаПлатежа</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаПлатежа" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>5</Код>
						<Наименование> --&gt; МесяцРасчетногоПериода</Наименование>
						<Порядок>250</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="МесяцРасчетногоПериода" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>6</Код>
						<Наименование> --&gt; ВидОперации</Наименование>
						<Порядок>300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидОперации" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыОперацийРасчетыПоСтраховымВзносам"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>7</Код>
						<Наименование> --&gt; ВидПлатежа</Наименование>
						<Порядок>350</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидПлатежа" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыПлатежейВГосБюджет"/>
						<ПередВыгрузкой>ИмяПКО = ВходящиеДанные.Получить("ИмяПКО");</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; ПФРНакопительная</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПФРНакопительная" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование> --&gt; ПФРСтраховая</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПФРСтраховая" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование> --&gt; ТФОМС</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ТФОМС" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование> --&gt; ФСС</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФСС" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>13</Код>
						<Наименование> --&gt; ФССНесчастныеСлучаи</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФССНесчастныеСлучаи" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование> --&gt; ФФОМС</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФФОМС" Вид="Реквизит" Тип="Число"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
		<Группа>
			<Код>Проверки</Код>
			<Наименование>Проверки</Наименование>
			<Порядок>750</Порядок>
			<Правило>
				<Код>КонвертацииИзИнформационныхБаз1СПредприятия77</Код>
				<Наименование> --&gt; СправочникСсылка.КонвертацииИзИнформационныхБаз1СПредприятия77</Наименование>
				<Порядок>50</Порядок>
				<Приемник>СправочникСсылка.КонвертацииИзИнформационныхБазПредыдущихВерсий</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<НеЗамещать>true</НеЗамещать>
						<Код>1</Код>
						<Наименование> --&gt; ИдентификаторКонфигурации</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ИдентификаторКонфигурации" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; КонтрольныеЗначения</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КонтрольныеЗначения" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Проверки();</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
	</ПравилаКонвертацииОбъектов>
	<ПравилаВыгрузкиДанных>
		<Группа Отключить="false">
			<Код>Справочники</Код>
			<Наименование>Справочники</Наименование>
			<Порядок>50</Порядок>
			<Правило Отключить="false">
				<Код>Банки</Код>
				<Наименование>Банки</Наименование>
				<Порядок>100</Порядок>
				<КодПравилаКонвертации>Банки                                             </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.Банки</ОбъектВыборки>
				<ИмяТипаПриемника>СправочникСсылка.Банки</ИмяТипаПриемника>
			</Правило>
			<Правило Отключить="false">
				<Код>БанковскиеСчета</Код>
				<Наименование>Банковские счета</Наименование>
				<Порядок>200</Порядок>
				<КодПравилаКонвертации>БанковскиеСчета                                   </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.БанковскиеСчета</ОбъектВыборки>
				<ИмяТипаПриемника>СправочникСсылка.БанковскиеСчета</ИмяТипаПриемника>
			</Правило>
			<Правило Отключить="false">
				<Код>ВидыНоменклатуры</Код>
				<Наименование>Виды номенклатуры</Наименование>
				<Порядок>300</Порядок>
				<КодПравилаКонвертации>НоменклатурныеГруппы                              </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.ВидыНоменклатуры</ОбъектВыборки>
				<ИмяТипаПриемника>СправочникСсылка.НоменклатурныеГруппы</ИмяТипаПриемника>
			</Правило>
			<Правило Отключить="false">
				<Код>Договоры</Код>
				<Наименование>Договоры</Наименование>
				<Порядок>400</Порядок>
				<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.Договоры</ОбъектВыборки>
				<ИмяТипаПриемника>СправочникСсылка.ДоговорыКонтрагентов</ИмяТипаПриемника>
				<ПередОбработкойПравила>ОбъектВыборки = СтрЗаменить(Правило.ОбъектВыборки, "Ссылка", "");
Выборка = СоздатьОбъект(ОбъектВыборки);
ВыборкаВладельцев = СоздатьОбъект("Справочник." + Метаданные.Справочник(Выборка.Вид()).Владелец.Идентификатор);

ВыборкаВладельцев.ВыбратьЭлементы();
Пока ВыборкаВладельцев.ПолучитьЭлемент() &gt; 0 Цикл
	Выборка.ИспользоватьВладельца(ВыборкаВладельцев.ТекущийЭлемент());
	Выборка.ВыбратьЭлементы();
	Пока Выборка.ПолучитьЭлемент() &gt; 0 Цикл
		НомерПКО = НайтиПравило(, Правило.КодПравилаКонвертации);
		ВыгрузитьПоПравилу(Выборка.ТекущийЭлемент(),,,,,,, НомерПКО);
	КонецЦикла;
КонецЦикла;

Отказ = 1;</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>ДокументыУдостоверяющиеЛичность</Код>
				<Наименование>Документы удостоверяющие личность</Наименование>
				<Порядок>500</Порядок>
				<КодПравилаКонвертации>ДокументыУдостоверяющиеЛичность                   </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.ДокументыУдостоверяющиеЛичность</ОбъектВыборки>
				<ИмяТипаПриемника>СправочникСсылка.ДокументыУдостоверяющиеЛичность</ИмяТипаПриемника>
			</Правило>
			<Правило Отключить="false">
				<Код>ДоходыБудущихПериодов</Код>
				<Наименование>Доходы будущих периодов</Наименование>
				<Порядок>600</Порядок>
				<КодПравилаКонвертации>ДоходыБудущихПериодов                             </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.ДоходыБудущихПериодов</ОбъектВыборки>
				<ИмяТипаПриемника>СправочникСсылка.ДоходыБудущихПериодов</ИмяТипаПриемника>
			</Правило>
			<Правило Отключить="false">
				<Код>ЕдиницыИзмерений</Код>
				<Наименование>Единицы измерений</Наименование>
				<Порядок>700</Порядок>
				<КодПравилаКонвертации>КлассификаторЕдиницИзмерения                      </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.ЕдиницыИзмерений</ОбъектВыборки>
				<ИмяТипаПриемника>СправочникСсылка.КлассификаторЕдиницИзмерения</ИмяТипаПриемника>
			</Правило>
			<Правило Отключить="true">
				<Код>КлассификаторЕН</Код>
				<Наименование>ЕНАОФ</Наименование>
				<Порядок>800</Порядок>
				<КодПравилаКонвертации>ЕдиныеНормыАмортизационныхОтчисленийОсновныхФондов</КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.КлассификаторЕН</ОбъектВыборки>
				<ИмяТипаПриемника>СправочникСсылка.ЕдиныеНормыАмортизационныхОтчисленийОсновныхФондов</ИмяТипаПриемника>
			</Правило>
			<Правило Отключить="false">
				<Код>Контрагенты</Код>
				<Наименование>Контрагенты</Наименование>
				<Порядок>900</Порядок>
				<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.Контрагенты</ОбъектВыборки>
				<ИмяТипаПриемника>СправочникСсылка.Контрагенты</ИмяТипаПриемника>
			</Правило>
			<Правило Отключить="false">
				<Код>Материалы</Код>
				<Наименование>Материалы</Наименование>
				<Порядок>1000</Порядок>
				<КодПравилаКонвертации>Материалы                                         </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.Материалы</ОбъектВыборки>
				<ИмяТипаПриемника>СправочникСсылка.Номенклатура</ИмяТипаПриемника>
			</Правило>
			<Правило Отключить="false">
				<Код>МестаХранения</Код>
				<Наименование>Места хранения</Наименование>
				<Порядок>1100</Порядок>
				<КодПравилаКонвертации>Склады                                            </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.МестаХранения</ОбъектВыборки>
				<ИмяТипаПриемника>СправочникСсылка.Склады</ИмяТипаПриемника>
			</Правило>
			<Правило Отключить="false">
				<Код>НематериальныеАктивы</Код>
				<Наименование>Нематериальные активы</Наименование>
				<Порядок>1200</Порядок>
				<КодПравилаКонвертации>НематериальныеАктивы                              </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.НематериальныеАктивы</ОбъектВыборки>
				<ИмяТипаПриемника>СправочникСсылка.НематериальныеАктивы</ИмяТипаПриемника>
			</Правило>
			<Правило Отключить="false">
				<Код>Номенклатура</Код>
				<Наименование>Номенклатура</Наименование>
				<Порядок>1300</Порядок>
				<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.Номенклатура</ОбъектВыборки>
				<ИмяТипаПриемника>СправочникСсылка.Номенклатура</ИмяТипаПриемника>
			</Правило>
			<Правило Отключить="false">
				<Код>НормыРасходов</Код>
				<Наименование>Нормы расходов</Наименование>
				<Порядок>1400</Порядок>
				<КодПравилаКонвертации>СпецификацииНоменклатуры                          </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.Номенклатура</ОбъектВыборки>
				<ИмяТипаПриемника>СправочникСсылка.СпецификацииНоменклатуры</ИмяТипаПриемника>
			</Правило>
			<Правило Отключить="false">
				<Код>Оборудование</Код>
				<Наименование>Оборудование</Наименование>
				<Порядок>1500</Порядок>
				<КодПравилаКонвертации>Оборудование                                      </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.Оборудование</ОбъектВыборки>
				<ИмяТипаПриемника>СправочникСсылка.Номенклатура</ИмяТипаПриемника>
			</Правило>
			<Правило Отключить="false">
				<Код>ОбъектыСтроительства</Код>
				<Наименование>Объекты внеоборотных активов</Наименование>
				<Порядок>1600</Порядок>
				<КодПравилаКонвертации>ОбъектыСтроительства_08_4                         </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.ОбъектыСтроительства</ОбъектВыборки>
				<ИмяТипаПриемника>СправочникСсылка.Номенклатура</ИмяТипаПриемника>
			</Правило>
			<Правило Отключить="false">
				<Код>ОсновныеСредства</Код>
				<Наименование>Основные средства</Наименование>
				<Порядок>1700</Порядок>
				<КодПравилаКонвертации>ОсновныеСредства                                  </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.ОсновныеСредства</ОбъектВыборки>
				<ИмяТипаПриемника>СправочникСсылка.ОсновныеСредства</ИмяТипаПриемника>
			</Правило>
			<Правило Отключить="false">
				<Код>Подразделения</Код>
				<Наименование>Подразделения</Наименование>
				<Порядок>1800</Порядок>
				<КодПравилаКонвертации>ПодразделенияОрганизаций                          </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.Подразделения</ОбъектВыборки>
				<ИмяТипаПриемника>СправочникСсылка.ПодразделенияОрганизаций</ИмяТипаПриемника>
			</Правило>
			<Правило Отключить="false">
				<Код>ПрочиеДоходыИРасходы</Код>
				<Наименование>Прочие доходы и расходы</Наименование>
				<Порядок>1900</Порядок>
				<КодПравилаКонвертации>ПрочиеДоходыИРасходы                              </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.ПрочиеДоходыИРасходы</ОбъектВыборки>
				<ИмяТипаПриемника>СправочникСсылка.ПрочиеДоходыИРасходы</ИмяТипаПриемника>
			</Правило>
			<Правило Отключить="false">
				<Код>РасходыБудущихПериодов</Код>
				<Наименование>Расходы будущих периодов</Наименование>
				<Порядок>2000</Порядок>
				<КодПравилаКонвертации>РасходыБудущихПериодов                            </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.РасходыБудущихПериодов</ОбъектВыборки>
				<ИмяТипаПриемника>СправочникСсылка.РасходыБудущихПериодов</ИмяТипаПриемника>
			</Правило>
			<Правило Отключить="false">
				<Код>РасчетныеСчета</Код>
				<Наименование>Расчетные счета</Наименование>
				<Порядок>2100</Порядок>
				<КодПравилаКонвертации>РасчетныеСчета                                    </КодПравилаКонвертации>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.РасчетныеСчета</ОбъектВыборки>
				<ИмяТипаПриемника>СправочникСсылка.БанковскиеСчета</ИмяТипаПриемника>
				<ПередОбработкойПравила>ОбъектВыборки = СтрЗаменить(Правило.ОбъектВыборки, "Ссылка", "");
Выборка = СоздатьОбъект(ОбъектВыборки);
ВыборкаВладельцев = СоздатьОбъект("Справочник." + Метаданные.Справочник(Выборка.Вид()).Владелец.Идентификатор);

ВыборкаВладельцев.ВыбратьЭлементы();
Пока ВыборкаВладельцев.ПолучитьЭлемент() &gt; 0 Цикл
	Выборка.ИспользоватьВладельца(ВыборкаВладельцев.ТекущийЭлемент());
	Выборка.ВыбратьЭлементы();
	Пока Выборка.ПолучитьЭлемент() &gt; 0 Цикл
		НомерПКО = НайтиПравило(, Правило.КодПравилаКонвертации);
		ВыгрузитьПоПравилу(Выборка.ТекущийЭлемент(),,,,,,, НомерПКО);
	КонецЦикла;
КонецЦикла;

Отказ = 1;</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>Резервы</Код>
				<Наименование>Резервы</Наименование>
				<Порядок>2200</Порядок>
				<КодПравилаКонвертации>Резервы                                           </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.Резервы</ОбъектВыборки>
				<ИмяТипаПриемника>СправочникСсылка.Резервы</ИмяТипаПриемника>
			</Правило>
			<Правило Отключить="false">
				<Код>Сотрудники</Код>
				<Наименование>Сотрудники</Наименование>
				<Порядок>2300</Порядок>
				<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.Сотрудники</ОбъектВыборки>
				<ИмяТипаПриемника>СправочникСсылка.ФизическиеЛица</ИмяТипаПриемника>
			</Правило>
			<Правило Отключить="false">
				<Код>СтатьиЗатратНаПроизводство</Код>
				<Наименование>Статьи затрат на производство</Наименование>
				<Порядок>2400</Порядок>
				<КодПравилаКонвертации>СтатьиЗатратНаПроизводство                        </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.СтатьиЗатратНаПроизводство</ОбъектВыборки>
				<ИмяТипаПриемника>СправочникСсылка.СтатьиЗатрат</ИмяТипаПриемника>
			</Правило>
			<Правило Отключить="false">
				<Код>СтатьиЗатратНаСтроительство</Код>
				<Наименование>Статьи затрат на строительство</Наименование>
				<Порядок>2500</Порядок>
				<КодПравилаКонвертации>СтатьиЗатратНаСтроительство                       </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.СтатьиЗатратНаСтроительство</ОбъектВыборки>
				<ИмяТипаПриемника>СправочникСсылка.СтатьиЗатрат</ИмяТипаПриемника>
			</Правило>
			<Правило Отключить="false">
				<Код>СтатьиЗатратОбслуживающихПроизводств</Код>
				<Наименование>Статьи затрат обслуживающих производств</Наименование>
				<Порядок>2600</Порядок>
				<КодПравилаКонвертации>СтатьиЗатратОбслуживающихПроизводств              </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.СтатьиЗатратОбслуживающихПроизводств</ОбъектВыборки>
				<ИмяТипаПриемника>СправочникСсылка.СтатьиЗатрат</ИмяТипаПриемника>
			</Правило>
			<Правило Отключить="false">
				<Код>СтатьиИздержекОбращения</Код>
				<Наименование>Статьи издержек обращения</Наименование>
				<Порядок>2700</Порядок>
				<КодПравилаКонвертации>СтатьиИздержекОбращения                           </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.СтатьиИздержекОбращения</ОбъектВыборки>
				<ИмяТипаПриемника>СправочникСсылка.СтатьиЗатрат</ИмяТипаПриемника>
			</Правило>
			<Правило Отключить="false">
				<Код>СтатьиКоммерческихРасходов</Код>
				<Наименование>Статьи коммерческих расходов</Наименование>
				<Порядок>2800</Порядок>
				<КодПравилаКонвертации>СтатьиКоммерческихРасходов                        </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.СтатьиКоммерческихРасходов</ОбъектВыборки>
				<ИмяТипаПриемника>СправочникСсылка.СтатьиЗатрат</ИмяТипаПриемника>
			</Правило>
			<Правило Отключить="false">
				<Код>СтатьиОбщепроизводственныхЗатрат</Код>
				<Наименование>Статьи общепроизводственных затрат</Наименование>
				<Порядок>2900</Порядок>
				<КодПравилаКонвертации>СтатьиОбщепроизводственныхЗатрат                  </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.СтатьиОбщепроизводственныхЗатрат</ОбъектВыборки>
				<ИмяТипаПриемника>СправочникСсылка.СтатьиЗатрат</ИмяТипаПриемника>
			</Правило>
			<Правило Отключить="false">
				<Код>СтатьиОбщехозяйственныхЗатрат</Код>
				<Наименование>Статьи общехозяйственных затрат</Наименование>
				<Порядок>3000</Порядок>
				<КодПравилаКонвертации>СтатьиОбщехозяйственныхЗатрат                     </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.СтатьиОбщехозяйственныхЗатрат</ОбъектВыборки>
				<ИмяТипаПриемника>СправочникСсылка.СтатьиЗатрат</ИмяТипаПриемника>
			</Правило>
			<Правило Отключить="false">
				<Код>СтатьиРасходовНаПродажу</Код>
				<Наименование>Статьи расходов на продажу</Наименование>
				<Порядок>3100</Порядок>
				<КодПравилаКонвертации>СтатьиРасходовНаПродажу                           </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.СтатьиРасходовНаПродажу</ОбъектВыборки>
				<ИмяТипаПриемника>СправочникСсылка.СтатьиЗатрат</ИмяТипаПриемника>
			</Правило>
			<Правило Отключить="false">
				<Код>ТипыЦен</Код>
				<Наименование>Типы цен</Наименование>
				<Порядок>3200</Порядок>
				<КодПравилаКонвертации>ТипыЦенНоменклатуры                               </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.ТипыЦен</ОбъектВыборки>
				<ИмяТипаПриемника>СправочникСсылка.ТипыЦенНоменклатуры</ИмяТипаПриемника>
			</Правило>
			<Правило Отключить="false">
				<Код>ЦенныеБумаги</Код>
				<Наименование>Ценные бумаги</Наименование>
				<Порядок>3300</Порядок>
				<КодПравилаКонвертации>ЦенныеБумаги                                      </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.ЦенныеБумаги</ОбъектВыборки>
				<ИмяТипаПриемника>СправочникСсылка.ЦенныеБумаги</ИмяТипаПриемника>
			</Правило>
			<Правило Отключить="false">
				<Код>ЦеныНоменклатуры</Код>
				<Наименование>Цены номенклатуры</Наименование>
				<Порядок>3400</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>ТипыЦен = СоздатьОбъект("ТаблицаЗначений");
ТипыЦен.НоваяКолонка("ТипЦен");
ТипыЦен.НоваяКолонка("ЦенаВключаетНДС");
ТипыЦен.НоваяКолонка("Товары");
ТипыЦен.НоваяКолонка("ВалютаЦены");

Выборка = СоздатьОбъект("Справочник.Цены");
ВыборкаВладельцев = СоздатьОбъект("Справочник.Номенклатура");

ВыборкаВладельцев.ВыбратьЭлементы();
Пока ВыборкаВладельцев.ПолучитьЭлемент() &gt; 0 Цикл
	
	// Покупная стоимость
	Если ВыборкаВладельцев.Себестоимость &lt;&gt; 0 Тогда
		НомСтроки = 0;
		ТипЦен = "Учетная (покупная) цена";
		Если ТипыЦен.НайтиЗначение(ТипЦен, НомСтроки, "ТипЦен") = 0 Тогда
			ТипыЦен.НоваяСтрока();
			ТипыЦен.ТипЦен = ТипЦен;
			ТипыЦен.ВалютаЦены = Параметры.Рубли;
			ТипыЦен.ЦенаВключаетНДС = 0;
			ТипыЦен.Товары = СоздатьОбъект("ТаблицаЗначений");
			
			Товары = ТипыЦен.Товары;
			Товары.НоваяКолонка("Номенклатура");
			Товары.НоваяКолонка("Цена");
			Товары.НоваяКолонка("Валюта");
			
		Иначе
			ТипыЦен.ПолучитьСтрокуПоНомеру(НомСтроки);
			Товары = ТипыЦен.Товары;
		КонецЕсли;
		
		Товары.НоваяСтрока();
		Товары.Номенклатура = ВыборкаВладельцев.ТекущийЭлемент();
		Товары.Цена = ВыборкаВладельцев.Себестоимость;
		Товары.Валюта = Параметры.Рубли;
	КонецЕсли;
	
	// Плановая себестоимость
	Если ВыборкаВладельцев.ПлановаяСебестоимость.Получить(Параметры.ДатаКонцаПериодаВыгрузки) &lt;&gt; 0 Тогда
		НомСтроки = 0;
		ТипЦен = "Плановая себестоимость";
		Если ТипыЦен.НайтиЗначение(ТипЦен, НомСтроки, "ТипЦен") = 0 Тогда
			ТипыЦен.НоваяСтрока();
			ТипыЦен.ТипЦен = ТипЦен;
			ТипыЦен.ВалютаЦены = Параметры.Рубли;
			ТипыЦен.ЦенаВключаетНДС = 0;
			ТипыЦен.Товары = СоздатьОбъект("ТаблицаЗначений");
			
			Товары = ТипыЦен.Товары;
			Товары.НоваяКолонка("Номенклатура");
			Товары.НоваяКолонка("Цена");
			Товары.НоваяКолонка("Валюта");
			
		Иначе
			ТипыЦен.ПолучитьСтрокуПоНомеру(НомСтроки);
			Товары = ТипыЦен.Товары;
		КонецЕсли;
		
		Товары.НоваяСтрока();
		Товары.Номенклатура = ВыборкаВладельцев.ТекущийЭлемент();
		Товары.Цена = ВыборкаВладельцев.ПлановаяСебестоимость.Получить(Параметры.ДатаКонцаПериодаВыгрузки);
		Товары.Валюта = Параметры.Рубли;
	КонецЕсли;
	
	// Цены
	Если ВыборкаВладельцев.Цена &lt;&gt; 0 Тогда
		НомСтроки = 0;
		ТипЦен = ?(ВыборкаВладельцев.ПорядокХраненияОтпускнойЦены = 1, "Отпускная цена (без НДС)", "Отпускная цена (с учетом НДС)");
		Если ТипыЦен.НайтиЗначение(ТипЦен, НомСтроки, "ТипЦен") = 0 Тогда
			ТипыЦен.НоваяСтрока();
			ТипыЦен.ТипЦен = ТипЦен;
			ТипыЦен.ВалютаЦены = ?(ПустоеЗначение(ВыборкаВладельцев.Валюта) = 1, Параметры.Рубли, ВыборкаВладельцев.Валюта);
			ТипыЦен.ЦенаВключаетНДС = ?(ВыборкаВладельцев.ПорядокХраненияОтпускнойЦены = 1, 0, 1);
			ТипыЦен.Товары = СоздатьОбъект("ТаблицаЗначений");
			
			Товары = ТипыЦен.Товары;
			Товары.НоваяКолонка("Номенклатура");
			Товары.НоваяКолонка("Цена");
			Товары.НоваяКолонка("Валюта");
			
		Иначе
			ТипыЦен.ПолучитьСтрокуПоНомеру(НомСтроки);
			Товары = ТипыЦен.Товары;
		КонецЕсли;
		
		Товары.НоваяСтрока();
		Товары.Номенклатура = ВыборкаВладельцев.ТекущийЭлемент();
		Товары.Цена = ВыборкаВладельцев.Цена;
		Товары.Валюта = ?(ПустоеЗначение(ВыборкаВладельцев.Валюта) = 1, Параметры.Рубли, ВыборкаВладельцев.Валюта);
	КонецЕсли;
		
	// Справочник "Цены"
	Выборка.ИспользоватьВладельца(ВыборкаВладельцев.ТекущийЭлемент());
	Выборка.ВыбратьЭлементы();
	Пока Выборка.ПолучитьЭлемент() &gt; 0 Цикл
		Если Выборка.Цена.Получить(Параметры.ДатаВводаОстатков) &lt;&gt; 0 Тогда
			НомСтроки = 0;
			ТипЦен = СокрЛП(Выборка.ТипЦен.Наименование);
			Если ТипыЦен.НайтиЗначение(ТипЦен, НомСтроки, "ТипЦен") = 0 Тогда
				ТипыЦен.НоваяСтрока();
				ТипыЦен.ТипЦен = ТипЦен;
				ТипыЦен.ВалютаЦены = ?(ПустоеЗначение(Выборка.Валюта) = 1, Параметры.Рубли, Выборка.Валюта);
				ТипыЦен.ЦенаВключаетНДС = Выборка.ТипЦен.ЦенаВклНДС;
				ТипыЦен.Товары = СоздатьОбъект("ТаблицаЗначений");
				
				Товары = ТипыЦен.Товары;
				Товары.НоваяКолонка("Номенклатура");
				Товары.НоваяКолонка("Цена");
				Товары.НоваяКолонка("Валюта");
				
			Иначе
				ТипыЦен.ПолучитьСтрокуПоНомеру(НомСтроки);
				Товары = ТипыЦен.Товары;
			КонецЕсли;
			
			Товары.НоваяСтрока();
			Товары.Номенклатура = ВыборкаВладельцев.ТекущийЭлемент();
			Товары.Цена = Выборка.Цена.Получить(Параметры.ДатаВводаОстатков);
			Товары.Валюта = ?(ПустоеЗначение(Выборка.Валюта) = 1, Параметры.Рубли, Выборка.Валюта);
		КонецЕсли;
	КонецЦикла;
КонецЦикла;

ВходящиеДанные = СоздатьОбъект("СписокЗначений");

ТипыЦен.ВыбратьСтроки();
Пока ТипыЦен.ПолучитьСтроку() = 1 Цикл
	Если ТипыЦен.Товары.КоличествоСтрок() &gt; 0 Тогда
		ВходящиеДанные.УдалитьВсе();
		ВходящиеДанные.Установить("ТипЦен", ТипыЦен.ТипЦен);
		ВходящиеДанные.Установить("ВалютаЦены", ТипыЦен.ВалютаЦены);
		ВходящиеДанные.Установить("Наименование", ТипыЦен.ТипЦен);
		ВходящиеДанные.Установить("ЦенаВключаетНДС", ТипыЦен.ЦенаВключаетНДС);
		ВходящиеДанные.Установить("Товары", ТипыЦен.Товары);
		ВыгрузитьПоПравилу(,, ВходящиеДанные,, "УстановкаЦенНоменклатуры");
	КонецЕсли;
КонецЦикла;

Отказ = 1;</ПередОбработкойПравила>
			</Правило>
		</Группа>
		<Группа Отключить="true">
			<Код>_ОстаткиИОборотыПоРазделамУчета</Код>
			<Наименование>Остатки и обороты по разделам учета</Наименование>
			<Порядок>100</Порядок>
			<Правило Отключить="true">
				<Код>тОсновныеСредства</Код>
				<Наименование>Основные средства</Наименование>
				<Порядок>50</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//*************************************************************************************************
// Счета учета ОС
//*************************************************************************************************

СчН05_01 = СчетПоКоду("Н05.01");
СчН05_02 = СчетПоКоду("Н05.02");
СчН05_КВ = СчетПоКоду("Н05.КВ");
СчН05_МЦ = СчетПоКоду("Н05.МЦ");
СчНПР_01 = СчетПоКоду("НПР.01");

Сч01_1 = СчетПоКоду("01.1");
Сч01_2 = СчетПоКоду("01.2");
Сч02_1 = СчетПоКоду("02.1");
Сч02_2 = СчетПоКоду("02.2");
Сч03_1 = СчетПоКоду("03.1");
Сч03_2 = СчетПоКоду("03.2");
Сч03_3 = СчетПоКоду("03.3");
Сч03_4 = СчетПоКоду("03.4");
Сч03_5 = СчетПоКоду("03.5");
Сч010 = СчетПоКоду("010");

СписокОС = СоздатьОбъект("ТаблицаЗначений");
СписокОС.НоваяКолонка("ОсновноеСредство");
СписокОС.НоваяКолонка("Подразделение");
СписокОС.НоваяКолонка("БУ", "Число");
СписокОС.НоваяКолонка("НУ", "Число");
СписокОС.НоваяКолонка("ГруппировкаДокументов");
СписокОС.НоваяКолонка("Контрагент");
СписокОС.НоваяКолонка("ТекущаяСтоимостьБУНач", "Число");
СписокОС.НоваяКолонка("ТекущаяСтоимостьБУКон", "Число");
СписокОС.НоваяКолонка("ТекущаяСтоимостьНУ", "Число");
СписокОС.НоваяКолонка("НакопленнаяАмортизацияБУНач", "Число");
СписокОС.НоваяКолонка("НакопленнаяАмортизацияБУКон", "Число");
СписокОС.НоваяКолонка("НакопленнаяАмортизацияНУ", "Число");
СписокОС.НоваяКолонка("СчетУчетаБУ");
СписокОС.НоваяКолонка("СчетУчетаНУ");
СписокОС.НоваяКолонка("СчетАмортизацииБУ");
СписокОС.НоваяКолонка("СчетАмортизацииНУ");
СписокОС.НоваяКолонка("СтоимостьДо2002НУ", "Число");
СписокОС.НоваяКолонка("АмортизацияДо2002НУ", "Число");
СписокОС.НоваяКолонка("ТекущаяСтоимостьПР", "Число");
СписокОС.НоваяКолонка("НакопленнаяАмортизацияПР", "Число");
СписокОС.НоваяКолонка("ДатаВводаВЭксплуатацию", "Дата");

СписокОСПеремещение = СоздатьОбъект("ТаблицаЗначений");
СписокОСПеремещение.НоваяКолонка("ОсновноеСредство");
СписокОСПеремещение.НоваяКолонка("Передача");
СписокОСПеремещение.НоваяКолонка("СчетУчетаБУ");
СписокОСПеремещение.НоваяКолонка("ТекущаяСтоимостьБУНач", "Число");
СписокОСПеремещение.НоваяКолонка("ТекущаяСтоимостьБУКон", "Число");

ПроводкиОбороты = Параметры.ТаблицаПроводокОбороты;
Проводки = Параметры.ТаблицаПроводок;
Проводки.УдалитьСтроки();

БУ = СоздатьОбъект("БухгалтерскиеИтоги");
БУ.Опции(1);
БУ.ИспользоватьСубконто();
БУ.ИспользоватьСубконто();
Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	БУ.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков,, "01.1,01.2,02.1,02.2,03.1,03.2,03.3,03.4,03.5,010");
	
Иначе
	БУ.ИспользоватьКорСубконто();
	БУ.ИспользоватьКорСубконто();
	БУ.ИспользоватьКорСубконто();

	БУ.ВключатьСубсчета(, -1);
	БУ.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков, Параметры.ДатаКонцаПериодаВыгрузки, "01.1,01.2,02.1,02.2,03.1,03.2,03.3,03.4,03.5,010",,, 3, "Месяц",);
КонецЕсли;

Параметры.ПараметрыАлгоритмов.Установить("БухИт", БУ);
Параметры.ПараметрыАлгоритмов.Установить("ПроводкиОбороты", ПроводкиОбороты);

БУ.ВыбратьПериоды();
Пока БУ.ПолучитьПериод() = 1 Цикл
	
	ПроводкиОбороты.УдалитьСтроки();

	БУ.ВыбратьСубконто(1);
	Пока БУ.ПолучитьСубконто(1) = 1 Цикл
		Если БУ.Субконто(1).ЭтоГруппа() = 1 Тогда
			Продолжить;
		КонецЕсли;
		
		ДтКт = 1; // 1 - дебет, 2 - кредит
		Контрагент = "";	
		СчетУчета = Сч01_1;
		СчетАмортизации = Сч02_1;
		
		СтоимостьБУНач = 0;
		АмортизацияБУНач = 0;
		СтоимостьБУКон = 0;
		АмортизацияБУКон = 0;
		Передача = 0;
		БУ.ВыбратьСчета();
		Пока БУ.ПолучитьСчет() =  1 Цикл
			Если (БУ.Счет = Сч01_1) или
				 (БУ.Счет = Сч01_2) или
				 (БУ.Счет = Сч03_1) или
				 (БУ.Счет = Сч03_2) или
				 (БУ.Счет = Сч03_3) или
				 (БУ.Счет = Сч03_4) или
				 (БУ.Счет = Сч03_5) Тогда
				 
				ДтКт = 1;
				СчетУчета = БУ.Счет;
				СтоимостьБУнач = БУ.СНД(1);
				СтоимостьБУкон = БУ.СКД(1);
				
				НомСтроки = 0;
				Если СписокОСПеремещение.НайтиЗначение(БУ.Субконто(1), НомСтроки, "ОсновноеСредство") = 0 Тогда
					СписокОСПеремещение.НоваяСтрока();
					СписокОСПеремещение.ОсновноеСредство = БУ.Субконто(1);
					СписокОСПеремещение.СчетУчетаБУ = СчетУчета;
					СписокОСПеремещение.ТекущаяСтоимостьБУНач	= СтоимостьБУнач;
					СписокОСПеремещение.ТекущаяСтоимостьБУКон	= СтоимостьБУкон;
					СписокОСПеремещение.Передача = 0;
				Иначе
					Если ((СписокОСПеремещение.ПолучитьЗначение(НомСтроки, "СчетУчетаБУ") = Сч01_1) ИЛИ ((Лев(СписокОСПеремещение.ПолучитьЗначение(НомСтроки, "СчетУчетаБУ").Код, 2) = "03") И (СписокОСПеремещение.ПолучитьЗначение(НомСтроки, "СчетУчетаБУ") &lt;&gt; Сч03_5)))
						И ((СчетУчета = Сч01_2) ИЛИ (СчетУчета = Сч03_5)) Тогда
						СтоимостьБУнач = Макс(СтоимостьБУнач, СписокОСПеремещение.ПолучитьЗначение(НомСтроки, "ТекущаяСтоимостьБУНач"));
						СтоимостьБУкон = Макс(СтоимостьБУкон, СписокОСПеремещение.ПолучитьЗначение(НомСтроки, "ТекущаяСтоимостьБУКон"));
					КонецЕсли;
				КонецЕсли;	
												
				Если (БУ.Счет = Сч03_2) или
					 (БУ.Счет = Сч03_3) или
					 (БУ.Счет = Сч03_4) Тогда
					 
					БУ.ВыбратьСубконто(2);
					Пока БУ.ПолучитьСубконто(2) = 1 Цикл
					 	Если БУ.Субконто(2).ЭтоГруппа() = 1 Тогда
							Продолжить;
						КонецЕсли;
									
						Контрагент = БУ.Субконто(2);
						
						Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
							ВыгрузитьКорреспонденции();
						КонецЕсли;
					КонецЦикла;
					
				ИначеЕсли Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
					ВыгрузитьКорреспонденции();
				КонецЕсли;
				
			ИначеЕсли (БУ.Счет = Сч02_1) или (БУ.Счет = Сч02_2) Тогда
				ДтКт = 2;
				СчетАмортизации = БУ.Счет;
				АмортизацияБУнач = БУ.СНК(1);
				АмортизацияБУкон = БУ.СКК(1);
				
				Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
					ВыгрузитьКорреспонденции();
				КонецЕсли;
				
			ИначеЕсли БУ.Счет = Сч010 Тогда
				ДтКт = 1;
				СчетАмортизации = БУ.Счет;
				АмортизацияБУнач = БУ.СНД(1);
				АмортизацияБУкон = БУ.СКД(1);
				
				Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
					ВыгрузитьКорреспонденции();
				КонецЕсли;
			КонецЕсли;
						
		КонецЦикла;
		
		НомСтроки = 0;
		Если СписокОС.НайтиЗначение(БУ.Субконто(1), НомСтроки, "ОсновноеСредство") = 0 Тогда
			СписокОС.НоваяСтрока();
			СписокОС.Подразделение = БУ.Субконто(1).Подразделение.Получить(Параметры.ДатаКонцаПериодаВыгрузки);
			СписокОС.БУ = 1;
			СписокОС.ОсновноеСредство = БУ.Субконто(1);
			НомСтроки = СписокОС.КоличествоСтрок();
			СписокОС.СчетУчетаБУ = СчетУчета;
			Если (СчетУчета = Сч01_2) ИЛИ (СчетУчета = Сч03_5) Тогда
				Если БУ.ДО("С") &lt;&gt; 0 Тогда
					СписокОС.СчетУчетаБУ = БУ.КорСчет;
				КонецЕсли;						
			КонецЕсли;			
		КонецЕсли;
		
		СписокОС.УстановитьЗначение(НомСтроки, "ДатаВводаВЭксплуатацию", БУ.Субконто(1).ДатаВводаВЭксплуатацию);		
		СписокОС.УстановитьЗначение(НомСтроки, "СчетАмортизацииБУ", СчетАмортизации);
		СписокОС.УстановитьЗначение(НомСтроки, "Контрагент", Контрагент);
		
		Если СтоимостьБУНач &lt;&gt; 0 Тогда
			Если СписокОС.ПолучитьЗначение(НомСтроки, "ТекущаяСтоимостьБУНач") = 0 Тогда
				СписокОС.УстановитьЗначение(НомСтроки, "ТекущаяСтоимостьБУНач", СтоимостьБУНач);
			КонецЕсли;
		КонецЕсли;
		Если АмортизацияБУНач &lt;&gt; 0 Тогда
			Если СписокОС.ПолучитьЗначение(НомСтроки, "НакопленнаяАмортизацияБУНач") = 0 Тогда
				СписокОС.УстановитьЗначение(НомСтроки, "НакопленнаяАмортизацияБУНач", АмортизацияБУНач);
			КонецЕсли;
		КонецЕсли;
		
		Если СтоимостьБУКон &lt;&gt; 0 Тогда
			СписокОС.УстановитьЗначение(НомСтроки, "ТекущаяСтоимостьБУКон", СтоимостьБУКон);
		КонецЕсли;
		Если АмортизацияБУКон &lt;&gt; 0 Тогда
			СписокОС.УстановитьЗначение(НомСтроки, "НакопленнаяАмортизацияБУКон", АмортизацияБУКон);
		КонецЕсли;
	КонецЦикла;
	
	Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
		ВходящиеДанные = СоздатьОбъект("СписокЗначений");
		ВходящиеДанные.Установить("Хозрасчетный", ПроводкиОбороты);
		ВходящиеДанные.Установить("Счет", "01, 02, 03");
		ВходящиеДанные.Установить("Дата", БУ.КонДата);
		ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияБух");
	КонецЕсли;
КонецЦикла;

НУ = СоздатьОбъект("БухгалтерскиеИтоги");
НУ.ИспользоватьСубконто();
Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	НУ.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков,, "Н05.01,Н05.02,Н05.МЦ,Н05.КВ,НПР.01");

Иначе
	НУ.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков, Параметры.ДатаКонцаПериодаВыгрузки, "Н05.01,Н05.02,Н05.МЦ,Н05.КВ,НПР.01",,, 3, "Месяц",);
КонецЕсли;

НУ.ВыбратьПериоды();
Пока НУ.ПолучитьПериод() = 1 Цикл
	
	ПроводкиОбороты.УдалитьСтроки();

	НУ.ВыбратьСубконто(1);
	Пока НУ.ПолучитьСубконто(1) = 1 Цикл
		Если НУ.Субконто(1).ЭтоГруппа() = 1 Тогда
			Продолжить;
		КонецЕсли;
		
		СтоимостьНУ = 0;
		СтоимостьПР = 0;
		АмортизацияНУ = 0;
		АмортизацияПР = 0;
		
		СтоимостьНУ_ОборотыДт = 0;
		СтоимостьПР_ОборотыДт = 0;
		АмортизацияНУ_ОборотыДт = 0;
		АмортизацияПР_ОборотыДт = 0;
		
		СтоимостьНУ_ОборотыКт = 0;
		СтоимостьПР_ОборотыКт = 0;
		АмортизацияНУ_ОборотыКт = 0;
		АмортизацияПР_ОборотыКт = 0;
		
		КапВложения = 0;
		КапВложения_ОборотыДт = 0;
		КапВложения_ОборотыКт = 0;
		
		Контрагент = "";
		СтоимостьБУ = 0;
		СтоимостьБУ_ОборотыДт = 0;
		СтоимостьБУ_ОборотыКт = 0;
		АмортизацияБУ = 0;
		АмортизацияБУ_ОборотыДт = 0;
		АмортизацияБУ_ОборотыКт = 0;
		
		Счет1 = Сч01_1;
		Счет2 = Сч02_1;
		
		Если БУ.ПолучитьПериод(, НУ.НачДата) = 1 Тогда
			Если БУ.ПолучитьСубконто(1,, НУ.Субконто(1)) = 1 Тогда
				БУ.ВыбратьСчета();
				Пока БУ.ПолучитьСчет() = 1 Цикл
					Если (БУ.Счет = Сч02_1) или (БУ.Счет = Сч02_2) Тогда
						АмортизацияБУ = БУ.СНК();
						АмортизацияБУ_ОборотыДт = БУ.ДО();
						АмортизацияБУ_ОборотыКт = БУ.КО();
						
						Счет2 = БУ.Счет;
						
					ИначеЕсли БУ.Счет = Сч010 Тогда
						АмортизацияБУ = БУ.СНД();
						АмортизацияБУ_ОборотыДт = БУ.ДО();
						АмортизацияБУ_ОборотыКт = БУ.КО();
						
						Счет2 = БУ.Счет;
						
					Иначе
						СтоимостьБУ = БУ.СНД();
						СтоимостьБУ_ОборотыДт = БУ.ДО();
						СтоимостьБУ_ОборотыКт = БУ.КО();
						
						Счет1 = БУ.Счет;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
			
		БУ.ПолучитьСубконто(1,, "");
		БУ.ПолучитьПериод(, "");
		
		ДтКт = 1; // 1 - дебет, 2 - кредит
		СчетМЦ = 0;
		
		Если НУ.ПолучитьСчет(, СчН05_01) = 1 Тогда
			ДтКт = 1;
			СтоимостьНУ = НУ.СНД(1);
			СтоимостьНУ_ОборотыДт = НУ.ДО(1);
			СтоимостьНУ_ОборотыКт = НУ.КО(1);
		
		ИначеЕсли НУ.ПолучитьСчет(, СчН05_МЦ) = 1 Тогда
			ДтКт = 1;
			СчетМЦ = 1;
			СтоимостьНУ = НУ.СНД(1);
			СтоимостьНУ_ОборотыДт = НУ.ДО(1);
			СтоимостьНУ_ОборотыКт = НУ.КО(1);
		КонецЕсли;
		
		Если НУ.ПолучитьСчет(, СчН05_КВ) = 1 Тогда
			ДтКт = 1;
			КапВложения = НУ.СНД(1);
			КапВложения_ОборотыДт = НУ.ДО(1);
			КапВложения_ОборотыКт = НУ.КО(1);
		КонецЕсли;
		
		Если НУ.ПолучитьСчет(, СчНПР_01) = 1 Тогда
			ДтКт = 1;
			
			Если (СтоимостьБУ - АмортизацияБУ) &lt;&gt; 0 Тогда
				К = СтоимостьБУ / (СтоимостьБУ - АмортизацияБУ);
				СтоимостьПР = Окр(НУ.СНД(1) * К, 2, 1);
				АмортизацияПР = СтоимостьПР - НУ.СНД(1);
			КонецЕсли;
					
			СтоимостьБУкон = СтоимостьБУ + СтоимостьБУ_ОборотыДт - СтоимостьБУ_ОборотыКт;
			АмортизацияБУкон = АмортизацияБУ - АмортизацияБУ_ОборотыДт + АмортизацияБУ_ОборотыКт;
					
			Если (СтоимостьБУкон - АмортизацияБУкон) &lt;&gt; 0 Тогда
				К = СтоимостьБУкон / (СтоимостьБУкон - АмортизацияБУкон);
				СтоимостьПРкон = Окр(НУ.СКД(1) * К, 2, 1);
				АмортизацияПРкон = СтоимостьПРкон - НУ.СКД(1);
						
				Если СтоимостьПРкон &gt; СтоимостьПР Тогда
					СтоимостьПР_ОборотыДт = СтоимостьПРкон - СтоимостьПР;
					СтоимостьПР_ОборотыКт = 0;
							
				Иначе
					СтоимостьПР_ОборотыДт = 0;
					СтоимостьПР_ОборотыКт = СтоимостьПР - СтоимостьПРкон;
				КонецЕсли;
						
				Если АмортизацияПРкон &gt; АмортизацияПР Тогда
					АмортизацияПР_ОборотыКт = АмортизацияПРкон - АмортизацияПР;
					АмортизацияПР_ОборотыДт = 0;
							
				Иначе
					АмортизацияПР_ОборотыКт = 0;
					АмортизацияПР_ОборотыДт = АмортизацияПР - АмортизацияПРкон;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если НУ.ПолучитьСчет(, СчН05_02) = 1 Тогда
			ДтКт = 2;
			АмортизацияНУ = НУ.СНК(1);
			АмортизацияНУ_ОборотыДт = НУ.ДО(1);
			АмортизацияНУ_ОборотыКт = НУ.КО(1);
		КонецЕсли;
		
		// Выгрузка начальных остатков.
		НомСтроки = 0;
		Если СписокОС.НайтиЗначение(НУ.Субконто(1), НомСтроки, "ОсновноеСредство") = 0 Тогда
			СписокОС.НоваяСтрока();
			СписокОС.ОсновноеСредство = НУ.Субконто(1);
			СписокОС.Подразделение = НУ.Субконто(1).Подразделение.Получить(Параметры.ДатаКонцаПериодаВыгрузки);
			СписокОС.НУ = 1;
			НомСтроки = СписокОС.КоличествоСтрок();
		КонецЕсли;
			
		Если НачМесяца(Параметры.ДатаВводаОстатков) = НУ.НачДата Тогда
			СписокОС.УстановитьЗначение(НомСтроки, "ДатаВводаВЭксплуатацию", НУ.Субконто(1).ДатаВводаВЭксплуатацию);
			
			Если (НУ.Субконто(1).ПервоначальнаяСтоимостьН.Получить(НУ.НачДата) = 0)
				И (НУ.Субконто(1).СпециальныйКоэффициент.Получить(НУ.НачДата) = 0) Тогда
				СписокОС.УстановитьЗначение(НомСтроки, "НУ", 0);
				СписокОС.УстановитьЗначение(НомСтроки, "ТекущаяСтоимостьНУ", 0);
				СписокОС.УстановитьЗначение(НомСтроки, "ТекущаяСтоимостьПР", 0);
				СписокОС.УстановитьЗначение(НомСтроки, "НакопленнаяАмортизацияНУ", 0);
				СписокОС.УстановитьЗначение(НомСтроки, "НакопленнаяАмортизацияПР", 0);
			Иначе
				СписокОС.УстановитьЗначение(НомСтроки, "НУ", 1);
				СписокОС.УстановитьЗначение(НомСтроки, "ТекущаяСтоимостьНУ", СтоимостьНУ);
				СписокОС.УстановитьЗначение(НомСтроки, "ТекущаяСтоимостьПР", СтоимостьПР);
				СписокОС.УстановитьЗначение(НомСтроки, "НакопленнаяАмортизацияНУ", АмортизацияНУ);
				СписокОС.УстановитьЗначение(НомСтроки, "НакопленнаяАмортизацияПР", АмортизацияПР);
			КонецЕсли;
		КонецЕсли;
		
		//по поступившим ОС
		Если НачМесяца(Параметры.ДатаКонцаПериодаВыгрузки) = НУ.НачДата Тогда
			СписокОС.УстановитьЗначение(НомСтроки, "ДатаВводаВЭксплуатацию", НУ.Субконто(1).ДатаВводаВЭксплуатацию);
			Если (НУ.Субконто(1).ПервоначальнаяСтоимостьН.Получить(НУ.НачДата) = 0)
				И (НУ.Субконто(1).СпециальныйКоэффициент.Получить(НУ.НачДата) = 0) Тогда
			Иначе
				
				Если (СписокОС.ПолучитьЗначение(НомСтроки, "ТекущаяСтоимостьНУ") = 0)
					И (СписокОС.ПолучитьЗначение(НомСтроки, "ТекущаяСтоимостьПР") = 0) 
					И ((СтоимостьНУ &lt;&gt; 0) ИЛИ (СтоимостьПР &lt;&gt; 0) ИЛИ (АмортизацияНУ &lt;&gt; 0) ИЛИ (АмортизацияПР &lt;&gt; 0)) Тогда
					СписокОС.УстановитьЗначение(НомСтроки, "НУ", 1);
					СписокОС.УстановитьЗначение(НомСтроки, "ТекущаяСтоимостьНУ", СтоимостьНУ);
					СписокОС.УстановитьЗначение(НомСтроки, "ТекущаяСтоимостьПР", СтоимостьПР);
					СписокОС.УстановитьЗначение(НомСтроки, "НакопленнаяАмортизацияНУ", АмортизацияНУ);
					СписокОС.УстановитьЗначение(НомСтроки, "НакопленнаяАмортизацияПР", АмортизацияПР);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;

		
		// Выгрузка оборотов
		Параметры.ПараметрыАлгоритмов.Установить("ТаблицаПроводок", ПроводкиОбороты);
		Параметры.ПараметрыАлгоритмов.Установить("ПорядокСубконтоБУ", "1,2,3");
		
		Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "НУ");
		Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "");
		Параметры.ПараметрыАлгоритмов.Установить("КоличествоДт", 0);
		Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт1", НУ.Субконто(1));
		Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт2", ?(ПустоеЗначение(Контрагент) = 0, Контрагент, ""));
		Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт3", "");
		
		Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "НУ");
		Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", "");
		Параметры.ПараметрыАлгоритмов.Установить("КоличествоКт", 0);
		Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт1", НУ.Субконто(1));
		Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт2", ?(ПустоеЗначение(Контрагент) = 0, Контрагент, ""));
		Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт3", "");
		
		// Стоимость
		Параметры.ПараметрыАлгоритмов.Установить("СчетДт", Счет1);
		Параметры.ПараметрыАлгоритмов.Установить("СчетКт", "");
		Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьНУ_ОборотыДт);
		ДобавитьПроводкуНУ();
		
		Параметры.ПараметрыАлгоритмов.Установить("СчетДт", "");
		Параметры.ПараметрыАлгоритмов.Установить("СчетКт", Счет1);
		Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьНУ_ОборотыКт);
		ДобавитьПроводкуНУ();
		
		// Амортизация
		Если Счет2 &lt;&gt; Сч010 Тогда
			Параметры.ПараметрыАлгоритмов.Установить("СчетДт", Счет2);
			Параметры.ПараметрыАлгоритмов.Установить("СчетКт", "");
			Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", АмортизацияНУ_ОборотыДт);
			ДобавитьПроводкуНУ();
			
			Параметры.ПараметрыАлгоритмов.Установить("СчетДт", "");
			Параметры.ПараметрыАлгоритмов.Установить("СчетКт", Счет2);
			Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", АмортизацияНУ_ОборотыКт);
			ДобавитьПроводкуНУ();
		КонецЕсли;
		
		// Капитальные вложения, списываемые при вводе в эксплуатацию
		Если НачМесяца(Параметры.ДатаВводаОстатков) = НУ.НачДата Тогда
			Параметры.ПараметрыАлгоритмов.Установить("ТаблицаПроводок", Проводки);
			Параметры.ПараметрыАлгоритмов.Установить("СчетДт", СчН05_КВ);
			Параметры.ПараметрыАлгоритмов.Установить("СчетКт", "");
			Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", КапВложения);
			ДобавитьПроводкуНУ();
			
			Параметры.ПараметрыАлгоритмов.Установить("ТаблицаПроводок", ПроводкиОбороты);
		КонецЕсли;
		
		Параметры.ПараметрыАлгоритмов.Установить("СчетДт", СчН05_КВ);
		Параметры.ПараметрыАлгоритмов.Установить("СчетКт", "");
		Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", КапВложения_ОборотыДт);
		ДобавитьПроводкуНУ();
		
		Параметры.ПараметрыАлгоритмов.Установить("СчетДт", "");
		Параметры.ПараметрыАлгоритмов.Установить("СчетКт", СчН05_КВ);
		Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", КапВложения_ОборотыКт);
		ДобавитьПроводкуНУ();
		
		// Поддержка ПБУ 18
		Если Константа.ПрименяетсяПБУ18.Получить(Параметры.ДатаКонцаПериодаВыгрузки) = Да Тогда
			// Постоянные разницы
			Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "ПР");
			Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "ПР");
			
			// Стоимость
			Параметры.ПараметрыАлгоритмов.Установить("СчетДт", Счет1);
			Параметры.ПараметрыАлгоритмов.Установить("СчетКт", "");
			Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьПР_ОборотыДт);
			ДобавитьПроводкуНУ();
			
			Параметры.ПараметрыАлгоритмов.Установить("СчетДт", "");
			Параметры.ПараметрыАлгоритмов.Установить("СчетКт", Счет1);
			Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьПР_ОборотыКт);
			ДобавитьПроводкуНУ();
			
			// Амортизация
			Если Счет2 &lt;&gt; Сч010 Тогда
				Параметры.ПараметрыАлгоритмов.Установить("СчетДт", Счет2);
				Параметры.ПараметрыАлгоритмов.Установить("СчетКт", "");
				Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", АмортизацияПР_ОборотыДт);
				ДобавитьПроводкуНУ();
				
				Параметры.ПараметрыАлгоритмов.Установить("СчетДт", "");
				Параметры.ПараметрыАлгоритмов.Установить("СчетКт", Счет2);
				Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", АмортизацияПР_ОборотыКт);
				ДобавитьПроводкуНУ();
			КонецЕсли;
			
			// Временные разницы
			Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "ВР");
			Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "ВР");
			
			// Стоимость
			СтоимостьВР = СтоимостьБУ - СтоимостьНУ - СтоимостьПР;
			СтоимостьВР_ОборотыДт = СтоимостьБУ_ОборотыДт - СтоимостьНУ_ОборотыДт - СтоимостьПР_ОборотыДт;
			СтоимостьВР_ОборотыКт = СтоимостьБУ_ОборотыКт - СтоимостьНУ_ОборотыКт - СтоимостьПР_ОборотыКт;
		
			Если СчетМЦ = 1 Тогда
				ДатаВводаВЭксплуатацию = НУ.Субконто(1).ДатаВводаВЭксплуатацию;
				Если (ДатаВводаВЭксплуатацию = Дата(0)) или (ДатаВводаВЭксплуатацию &gt; НУ.КонДата) Тогда
					СтоимостьВР_ОборотыДт = 0;
					СтоимостьВР_ОборотыКт = 0;
				КонецЕсли;
			КонецЕсли;
				
			Параметры.ПараметрыАлгоритмов.Установить("СчетДт", Счет1);
			Параметры.ПараметрыАлгоритмов.Установить("СчетКт", "");
			Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьВР_ОборотыДт);
			ДобавитьПроводкуНУ();
			
			Параметры.ПараметрыАлгоритмов.Установить("СчетДт", "");
			Параметры.ПараметрыАлгоритмов.Установить("СчетКт", Счет1);
			Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьВР_ОборотыКт);
			ДобавитьПроводкуНУ();
			
			// Амортизация
			Если Счет2 &lt;&gt; Сч010 Тогда
				АмортизацияВР = АмортизацияБУ - АмортизацияНУ - АмортизацияПР;
				АмортизацияВР_ОборотыДт = АмортизацияБУ_ОборотыДт - АмортизацияНУ_ОборотыДт - АмортизацияПР_ОборотыДт;
				АмортизацияВР_ОборотыКт = АмортизацияБУ_ОборотыКт - АмортизацияНУ_ОборотыКт - АмортизацияПР_ОборотыКт;
				
				Параметры.ПараметрыАлгоритмов.Установить("СчетДт", Счет2);
				Параметры.ПараметрыАлгоритмов.Установить("СчетКт", "");
				Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", АмортизацияВР_ОборотыДт);
				ДобавитьПроводкуНУ();
				
				Параметры.ПараметрыАлгоритмов.Установить("СчетДт", "");
				Параметры.ПараметрыАлгоритмов.Установить("СчетКт", Счет2);
				Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", АмортизацияВР_ОборотыКт);
				ДобавитьПроводкуНУ();
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если НУ.НачДата = НачМесяца(Параметры.ДатаВводаОстатков) Тогда
		ВходящиеДанные = СоздатьОбъект("СписокЗначений");
		ВходящиеДанные.Установить("Налоговый", Проводки);
		ВходящиеДанные.Установить("Счет", СчН05_КВ);
		ВходящиеДанные.Установить("Дата", НУ.НачДата-1);
		ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияБух");
	КонецЕсли;
	
	Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
		ВходящиеДанные = СоздатьОбъект("СписокЗначений");
		ВходящиеДанные.Установить("Налоговый", ПроводкиОбороты);
		ВходящиеДанные.Установить("Счет", "Н05.01, Н05.02, Н05.МЦ");
		ВходящиеДанные.Установить("Дата", НУ.КонДата);
		ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияБух");
	КонецЕсли;
КонецЦикла;

НУ.ИспользоватьСубконто();
НУ.ВыполнитьЗапрос(, '31.12.2001', "Н05.01,Н05.02");

НУ.ВыбратьСубконто(1);
Пока НУ.ПолучитьСубконто(1) = 1 Цикл
	Если НУ.Субконто(1).ЭтоГруппа() = 1 Тогда
		Продолжить;
	КонецЕсли;
	
	СтоимостьНУ = 0;
	АмортизацияНУ = 0;
	
	Если НУ.ПолучитьСчет(, СчН05_01) = 1 Тогда
		СтоимостьНУ = НУ.СНД(1);
	КонецЕсли;
	
	Если НУ.ПолучитьСчет(, СчН05_02) = 1 Тогда
		АмортизацияНУ = НУ.СНК(1);
	КонецЕсли;
	
	НомСтроки = 0;
	Если СписокОС.НайтиЗначение(НУ.Субконто(1), НомСтроки, "ОсновноеСредство") = 0 Тогда
		СписокОС.НоваяСтрока();
		СписокОС.ОсновноеСредство = НУ.Субконто(1);
		СписокОС.Подразделение = НУ.Субконто(1).Подразделение.Получить(Параметры.ДатаКонцаПериодаВыгрузки);
		НомСтроки = СписокОС.КоличествоСтрок();
	КонецЕсли;
	
	СписокОС.УстановитьЗначение(НомСтроки, "НУ", 1);
	СписокОС.УстановитьЗначение(НомСтроки, "СтоимостьДо2002НУ", СтоимостьНУ);
	СписокОС.УстановитьЗначение(НомСтроки, "АмортизацияДо2002НУ", АмортизацияНУ);
КонецЦикла;

СписокОС.НоваяКолонка("ФормироватьПроводки", "Число");

СписокОС.ВыбратьСтроки();
Пока СписокОС.ПолучитьСтроку() = 1 Цикл
	СписокОС.ФормироватьПроводки = 1; 
	СписокОС.ГруппировкаДокументов = ?(ПустоеЗначение(СписокОС.СчетУчетаБУ) = 1, "0", СписокОС.СчетУчетаБУ.Код) + СписокОС.Подразделение.Код + СписокОС.БУ + СписокОС.НУ + СписокОС.ФормироватьПроводки + ПустоеЗначение(СписокОС.ОсновноеСредство.Состояние.Получить(Параметры.ДатаВводаОстатков));
КонецЦикла;

СписокОС.Сортировать("ГруппировкаДокументов");

ВходящиеДанные = СоздатьОбъект("СписокЗначений");
СписокПодразделения = СоздатьОбъект("ТаблицаЗначений");
Для НомКолонки = 1 по СписокОС.КоличествоКолонок() Цикл
	СписокПодразделения.НоваяКолонка(СписокОС.ПолучитьПараметрыКолонки(НомКолонки));
КонецЦикла;

СписокОС.ВыбратьСтроки();
Пока СписокОС.ПолучитьСтроку() = 1 Цикл
	Если ПустоеЗначение(СписокОС.ДатаВводаВЭксплуатацию) = 1 Тогда
		Если (ПустоеЗначение(СписокОС.ОсновноеСредство.Состояние.Получить(Параметры.ДатаВводаОстатков)) = 0)
			ИЛИ (ПустоеЗначение(СписокОС.ОсновноеСредство.Состояние.Получить(Параметры.ДатаКонцаПериодаВыгрузки)) =0) Тогда
			СостояниеОС = СоздатьОбъект("Периодический");
			СостояниеОС.ИспользоватьОбъект("Состояние", СписокОС.ОсновноеСредство);
			Если СостояниеОС.ОбратныйПорядок() = 1 Тогда
				Если СостояниеОС.ВыбратьЗначения(,) = 1 Тогда
					Пока СостояниеОС.ПолучитьЗначение() = 1 Цикл
						Если ПустоеЗначение(СостояниеОС.Значение) = 0 Тогда
							СписокОС.ДатаВводаВЭксплуатацию = СостояниеОС.ДатаЗнач;
							Продолжить;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецЦикла;

НомерГруппировки = 1;
СписокОС.ВыбратьСтроки();
Пока СписокОС.ПолучитьСтроку() = 1 Цикл
	
	НомСтрокиОС = 0;
	
	Если ПустоеЗначение(СписокОС.ОсновноеСредство.Состояние.Получить(Параметры.ДатаВводаОстатков)) = 1 Тогда
		ТекущийДокумент = "";
	Иначе	
		НомСтрокиОС = СписокОС.НомерСтроки;
		
		СписокПодразделения.НоваяСтрока();
		НомСтроки = СписокПодразделения.КоличествоСтрок();
		Для НомКолонки = 1 по СписокОС.КоличествоКолонок() Цикл
			СписокПодразделения.УстановитьЗначение(НомСтроки, НомКолонки, СписокОС.ПолучитьЗначение(НомСтрокиОС, НомКолонки));
		КонецЦикла;
		ТекущийДокумент = СписокОС.ГруппировкаДокументов;
	КонецЕсли;
		
	Если НомСтрокиОС &lt; СписокОС.КоличествоСтрок() Тогда
		СледующийДокумент = СписокОС.ПолучитьЗначение(НомСтрокиОС + 1, "ГруппировкаДокументов");
		
	Иначе
		СледующийДокумент = "";
	КонецЕсли;
	
	Если ТекущийДокумент &lt;&gt; СледующийДокумент Тогда
		Если СписокПодразделения.КоличествоСтрок() &gt; 0 Тогда
			ВходящиеДанные.УдалитьВсе();
			ВходящиеДанные.Установить("ФормироватьПроводки", СписокПодразделения.ПолучитьЗначение(1, "ФормироватьПроводки"));
			ВходящиеДанные.Установить("ПодразделениеОрганизации", СписокОС.Подразделение);
			ВходящиеДанные.Установить("ГруппировкаДокументов", ТекущийДокумент + "#*#" + НомерГруппировки + "#*#");
			ВходящиеДанные.Установить("ОС", СписокПодразделения);
			ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", СписокПодразделения.ПолучитьЗначение(1, "НУ"));
			ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
			ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
			ВходящиеДанные.Установить("РазделУчета", "ОсновныеСредства");
			ВходящиеДанные.Установить("Дата", Параметры.ДатаВводаОстатков - 1);
			ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ВводНачальныхОстатковОС");
			
			СписокПодразделения.УдалитьСтроки();
			НомерГруппировки = 1 + НомерГруппировки;
		КонецЕсли;
	КонецЕсли;
КонецЦикла;

Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	СписокПодразделения.УдалитьСтроки();
	СписокОС.ВыбратьСтроки();
	Пока СписокОС.ПолучитьСтроку() = 1 Цикл
		
		НомСтрокиОС = 0;
		
		Если ПустоеЗначение(СписокОС.ОсновноеСредство.Состояние.Получить(Параметры.ДатаВводаОстатков)) = 0 Тогда		
			ТекущийДокумент = "";
		Иначе	
			Если ПустоеЗначение(СписокОС.ОсновноеСредство.Состояние.Получить(Параметры.ДатаКонцаПериодаВыгрузки)) = 1 Тогда
				ТекущийДокумент = "";
			Иначе
				
				НомСтрокиОС = СписокОС.НомерСтроки;
				
				СписокПодразделения.НоваяСтрока();
				НомСтроки = СписокПодразделения.КоличествоСтрок();
				Для НомКолонки = 1 по СписокОС.КоличествоКолонок() Цикл
					СписокПодразделения.УстановитьЗначение(НомСтроки, НомКолонки, СписокОС.ПолучитьЗначение(НомСтрокиОС, НомКолонки));
				КонецЦикла;
				ТекущийДокумент = СписокОС.ГруппировкаДокументов;
			КонецЕсли;
		КонецЕсли;
		
		Если НомСтрокиОС &lt; СписокОС.КоличествоСтрок() Тогда
			СледующийДокумент = СписокОС.ПолучитьЗначение(НомСтрокиОС + 1, "ГруппировкаДокументов");
			
		Иначе
			СледующийДокумент = "";
		КонецЕсли;
		
		Если ТекущийДокумент &lt;&gt; СледующийДокумент Тогда
			Если СписокПодразделения.КоличествоСтрок() &gt; 0 Тогда
				ВходящиеДанные.УдалитьВсе();
				ВходящиеДанные.Установить("ФормироватьПроводки", СписокПодразделения.ПолучитьЗначение(1, "ФормироватьПроводки"));
				Если ПустоеЗначение(СписокОС.Подразделение) = 1 Тогда
					ЗначениеПодразделение = Константа.ОсновноеПодразделение;
					
				Иначе
					ЗначениеПодразделение = СписокОС.Подразделение;
				КонецЕсли;
				ВходящиеДанные.Установить("ПодразделениеОрганизации", ЗначениеПодразделение);
				ВходящиеДанные.Установить("ГруппировкаДокументов", ТекущийДокумент + "#*#" + НомерГруппировки + "#*#");
				ВходящиеДанные.Установить("ОС", СписокПодразделения);
				ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 0);
				ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 0);
				ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
				ВходящиеДанные.Установить("РазделУчета", "ОсновныеСредства");
				ВходящиеДанные.Установить("Дата", Параметры.ДатаКонцаПериодаВыгрузки);
				ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ВводНачальныхОстатковОС");
				
				СписокПодразделения.УдалитьСтроки();
				НомерГруппировки = 1 + НомерГруппировки;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла; 
КонецЕсли;

//***
////Остатков на этих счетах быть не должно
//Параметры.ТаблицаОстатковНУ.УдалитьСтроки();
////******************** Счет 01.2 ******************** 
//Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("01.2"));
//Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
//Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
//ВыгрузитьОстаткиПоСчету();

////******************** Счет 03.5 ******************** 
//Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("03.5"));
//Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
//Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
//ВыгрузитьОстаткиПоСчету();

//Особые случаи
//******************** Счет Н02.МЦ ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("Н02.МЦ"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Налоговый");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", "");
ВыгрузитьОстаткиПоСчету();


//Выбытие
ТабОс = СоздатьОбъект("ТаблицаЗначений");
ТабОс.НоваяКолонка("ОсновноеСредство");
ТабОс.НоваяКолонка("Период");
ТабОс.НоваяКолонка("ДатаСостояния");

СпрОС = СоздатьОбъект("Справочник.основныеСредства");
СпрОС.ВыбратьЭлементы();
Пока СпрОС.ПолучитьЭлемент() = 1 Цикл
	ТабОс.УдалитьСтроки();
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
	Если СпрОС.ДатаВыбытия &lt;&gt; Дата(0) Тогда
		Если (СпрОС.ДатаВыбытия &gt;= Параметры.ДатаВводаОстатков)
			И (СпрОС.ДатаВыбытия &lt;= Параметры.ДатаКонцаПериодаВыгрузки) Тогда
			ТабОс.НоваяСтрока();
			ТабОс.ОсновноеСредство = СпрОС.ТекущийЭлемент();
			ТабОс.Период = СпрОС.ДатаВыбытия;
			ТабОс.ДатаСостояния = СпрОС.ДатаВыбытия;
			ВходящиеДанные.Установить("Дата", СпрОС.ДатаВыбытия);
			ВходящиеДанные.Установить("ОС", ТабОс);
			ВходящиеДанные.Установить("НачислениеАмортизацииОСБухгалтерскийУчет", ТабОс);
			ВходящиеДанные.Установить("НачислениеАмортизацииОСНалоговыйУчет", ТабОс);
			ВходящиеДанные.Установить("СостоянияОСОрганизаций", ТабОс);
			ВходящиеДанные.Установить("СобытияОСОрганизаций", ТабОс);
			ВыгрузитьПоПравилу(,, ВходящиеДанные,, "СписаниеОС");
		КонецЕсли;
	КонецЕсли;
КонецЦикла;


</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>тНематериальныеАктивы</Код>
				<Наименование>Нематериальные активы</Наименование>
				<Порядок>100</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//*************************************************************************************************
// Счета учета НМА
//*************************************************************************************************

СчН05_03 = СчетПоКоду("Н05.03");
СчН05_04 = СчетПоКоду("Н05.04");
СчНПР_04 = СчетПоКоду("НПР.04");

Сч04_1 = СчетПоКоду("04.1");
Сч05 = СчетПоКоду("05");

СписокНМА = СоздатьОбъект("ТаблицаЗначений");
СписокНМА.НоваяКолонка("НМА");
СписокНМА.НоваяКолонка("СтоимостьБУ", "Число");
СписокНМА.НоваяКолонка("АмортизацияБУ", "Число");
СписокНМА.НоваяКолонка("СтоимостьНУ", "Число");
СписокНМА.НоваяКолонка("АмортизацияНУ", "Число");
СписокНМА.НоваяКолонка("СтоимостьПР", "Число");
СписокНМА.НоваяКолонка("АмортизацияПР", "Число");
СписокНМА.НоваяКолонка("СтоимостьВР", "Число");
СписокНМА.НоваяКолонка("АмортизацияВР", "Число");
СписокНМА.НоваяКолонка("БУ", "Число");
СписокНМА.НоваяКолонка("НУ", "Число");
СписокНМА.НоваяКолонка("ПервоначальнаяСтоимостьНУ", "Число");
СписокНМА.НоваяКолонка("СрокИспользованияНУ", "Число");
СписокНМА.НоваяКолонка("СписыватьРасходыНУ", "Число");
СписокНМА.НоваяКолонка("СтоимостьНУКон", "Число");
СписокНМА.НоваяКолонка("АмортизацияНУКон", "Число");
СписокНМА.НоваяКолонка("СтоимостьПРКон", "Число");
СписокНМА.НоваяКолонка("АмортизацияПРКон", "Число");
СписокНМА.НоваяКолонка("СтоимостьВРКон", "Число");
СписокНМА.НоваяКолонка("АмортизацияВРКон", "Число");
СписокНМА.НоваяКолонка("СтоимостьБУКон", "Число");
СписокНМА.НоваяКолонка("АмортизацияБУКон", "Число");


ПроводкиОбороты = Параметры.ТаблицаПроводокОбороты;
Проводки = Параметры.ТаблицаПроводок;
Проводки.УдалитьСтроки();

БУ = СоздатьОбъект("БухгалтерскиеИтоги");
БУ.ИспользоватьСубконто();
БУ.ИспользоватьСубконто();
Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	БУ.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков,, "04.1,05");
	
Иначе
	БУ.ИспользоватьКорСубконто();
	БУ.ИспользоватьКорСубконто();
	БУ.ИспользоватьКорСубконто();

	БУ.ВключатьСубсчета(, -1);
	БУ.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков, Параметры.ДатаКонцаПериодаВыгрузки, "04.1,05",,, 3, "Месяц",);
КонецЕсли;

Параметры.ПараметрыАлгоритмов.Установить("БухИт", БУ);
Параметры.ПараметрыАлгоритмов.Установить("ПроводкиОбороты", ПроводкиОбороты);

БУ.ВыбратьПериоды();
Пока БУ.ПолучитьПериод() = 1 Цикл
	
	ПроводкиОбороты.УдалитьСтроки();

	БУ.ВыбратьСубконто(1);
	Пока БУ.ПолучитьСубконто(1) = 1 Цикл
		Если БУ.Субконто(1).ЭтоГруппа() = 1 Тогда
			Продолжить;
		КонецЕсли;
		
		СтоимостьБУ = 0;
		АмортизацияБУ = 0;
		
		БУ.ВыбратьСчета();
		Пока БУ.ПолучитьСчет() =  1 Цикл
			Если (БУ.Счет = Сч04_1) Тогда
				СтоимостьБУ = БУ.СНД(1);
					
				Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
					ВыгрузитьКорреспонденции();
				КонецЕсли;
				
			ИначеЕсли (БУ.Счет = Сч05) Тогда
				АмортизацияБУ = БУ.СНК(1);
				
				Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
					ВыгрузитьКорреспонденции();
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		НомСтроки = 0;
		Если СписокНМА.НайтиЗначение(БУ.Субконто(1), НомСтроки, "НМА") = 0 Тогда
			СписокНМА.НоваяСтрока();
			СписокНМА.БУ = 1;
			СписокНМА.НМА = БУ.Субконто(1);
			НомСтроки = СписокНМА.КоличествоСтрок();
		КонецЕсли;
		
		Если НачМесяца(Параметры.ДатаВводаОстатков) = БУ.НачДата Тогда
			// Выгрузка начальных остатков
			СписокНМА.УстановитьЗначение(НомСтроки, "СтоимостьБУ", СтоимостьБУ);
			СписокНМА.УстановитьЗначение(НомСтроки, "АмортизацияБУ", АмортизацияБУ);
		Иначе
			СписокНМА.УстановитьЗначение(НомСтроки, "СтоимостьБУКон", СтоимостьБУ);
			СписокНМА.УстановитьЗначение(НомСтроки, "АмортизацияБУКон", АмортизацияБУ);
		КонецЕсли;
	КонецЦикла;
	
	Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
		ВходящиеДанные = СоздатьОбъект("СписокЗначений");
		ВходящиеДанные.Установить("Хозрасчетный", ПроводкиОбороты);
		ВходящиеДанные.Установить("Счет", "04.1, 05");
		ВходящиеДанные.Установить("Дата", БУ.КонДата);
		ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияБух");
	КонецЕсли;
КонецЦикла;

ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Хозрасчетный", Проводки);
ВходящиеДанные.Установить("Счет", "04.1, 05");
ВходящиеДанные.Установить("Дата", Параметры.ДатаВводаОстатков-1);
ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияБух");

Проводки.УдалитьСтроки();

// Налоговый учет

НУ = СоздатьОбъект("БухгалтерскиеИтоги");
НУ.ИспользоватьСубконто();
Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	НУ.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков,, "Н05.03,Н05.04,НПР.04");

Иначе
	НУ.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков, Параметры.ДатаКонцаПериодаВыгрузки, "Н05.03,Н05.04,НПР.04",,, 3, "Месяц",);
КонецЕсли;

НУ.ВыбратьПериоды();
Пока НУ.ПолучитьПериод() = 1 Цикл
	
	ПроводкиОбороты.УдалитьСтроки();

	НУ.ВыбратьСубконто(1);
	Пока НУ.ПолучитьСубконто(1) = 1 Цикл
		Если НУ.Субконто(1).ЭтоГруппа() = 1 Тогда
			Продолжить;
			
		ИначеЕсли НУ.Субконто(1).Вид() = "РасходыБудущихПериодов" Тогда
			Продолжить;
		КонецЕсли;
		
		СтоимостьНУ = 0;
		СтоимостьПР = 0;
		АмортизацияНУ = 0;
		АмортизацияПР = 0;
		
		СтоимостьНУ_ОборотыДт = 0;
		СтоимостьПР_ОборотыДт = 0;
		АмортизацияНУ_ОборотыДт = 0;
		АмортизацияПР_ОборотыДт = 0;
		
		СтоимостьНУ_ОборотыКт = 0;
		СтоимостьПР_ОборотыКт = 0;
		АмортизацияНУ_ОборотыКт = 0;
		АмортизацияПР_ОборотыКт = 0;
		
		ДтКт = 1; // 1 - дебет, 2 - кредит
		
		СтоимостьБУ = 0;
		СтоимостьБУ_ОборотыДт = 0;
		СтоимостьБУ_ОборотыКт = 0;
		АмортизацияБУ = 0;
		АмортизацияБУ_ОборотыДт = 0;
		АмортизацияБУ_ОборотыКт = 0;
		
		Счет1 = Сч04_1;
		Счет2 = Сч05;
		
		Если БУ.ПолучитьПериод(, НУ.НачДата) = 1 Тогда
			Если БУ.ПолучитьСубконто(1,, НУ.Субконто(1)) = 1 Тогда
				БУ.ВыбратьСчета();
				Пока БУ.ПолучитьСчет() = 1 Цикл
					Если БУ.Счет = Сч05 Тогда
						АмортизацияБУ = БУ.СНК();
						АмортизацияБУ_ОборотыДт = БУ.ДО();
						АмортизацияБУ_ОборотыКт = БУ.КО();
						
						Счет2 = БУ.Счет;
						
					Иначе
						СтоимостьБУ = БУ.СНД();
						СтоимостьБУ_ОборотыДт = БУ.ДО();
						СтоимостьБУ_ОборотыКт = БУ.КО();
						
						Счет1 = БУ.Счет;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
			
		БУ.ПолучитьСубконто(1,, "");
		БУ.ПолучитьПериод(, "");
		
		Если НУ.ПолучитьСчет(, СчН05_03) = 1 Тогда
			ДтКт = 1;
			СтоимостьНУ = НУ.СНД(1);
			СтоимостьНУ_ОборотыДт = НУ.ДО(1);
			СтоимостьНУ_ОборотыКт = НУ.КО(1);
		КонецЕсли;
		
		Если НУ.ПолучитьСчет(, СчНПР_04) = 1 Тогда
			ДтКт = 1;
					
			Если (СтоимостьБУ - АмортизацияБУ) &lt;&gt; 0 Тогда
				К = СтоимостьБУ / (СтоимостьБУ - АмортизацияБУ);
				СтоимостьПР = Окр(НУ.СНД(1) * К, 2, 1);
				АмортизацияПР = СтоимостьПР - НУ.СНД(1);
			КонецЕсли;
					
			СтоимостьБУкон = СтоимостьБУ + СтоимостьБУ_ОборотыДт - СтоимостьБУ_ОборотыКт;
			АмортизацияБУкон = АмортизацияБУ - АмортизацияБУ_ОборотыДт + АмортизацияБУ_ОборотыКт;
					
			Если (СтоимостьБУкон - АмортизацияБУкон) &lt;&gt; 0 Тогда
				К = СтоимостьБУкон / (СтоимостьБУкон - АмортизацияБУкон);
				СтоимостьПРкон = Окр(НУ.СКД(1) * К, 2, 1);
				АмортизацияПРкон = СтоимостьПРкон - НУ.СКД(1);
						
				Если СтоимостьПРкон &gt; СтоимостьПР Тогда
					СтоимостьПР_ОборотыДт = СтоимостьПРкон - СтоимостьПР;
					СтоимостьПР_ОборотыКт = 0;
							
				Иначе
					СтоимостьПР_ОборотыДт = 0;
					СтоимостьПР_ОборотыКт = СтоимостьПР - СтоимостьПРкон;
				КонецЕсли;
						
				Если АмортизацияПРкон &gt; АмортизацияПР Тогда
					АмортизацияПР_ОборотыКт = АмортизацияПРкон - АмортизацияПР;
					АмортизацияПР_ОборотыДт = 0;
							
				Иначе
					АмортизацияПР_ОборотыКт = 0;
					АмортизацияПР_ОборотыДт = АмортизацияПР - АмортизацияПРкон;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если НУ.ПолучитьСчет(, СчН05_04) = 1 Тогда
			ДтКт = 2;
			АмортизацияНУ = НУ.СНК(1);
			АмортизацияНУ_ОборотыДт = НУ.ДО(1);
			АмортизацияНУ_ОборотыКт = НУ.КО(1);
		КонецЕсли;
		
		НомСтроки = 0;
		Если СписокНМА.НайтиЗначение(НУ.Субконто(1), НомСтроки, "НМА") = 0 Тогда
			СписокНМА.НоваяСтрока();
			СписокНМА.НМА = НУ.Субконто(1);
			СписокНМА.НУ = 1;
			НомСтроки = СписокНМА.КоличествоСтрок();	
		КонецЕсли;
		
		// Выгрузка начальных остатков.
		Если НачМесяца(Параметры.ДатаВводаОстатков) = НУ.НачДата Тогда
			СписокНМА.УстановитьЗначение(НомСтроки, "СтоимостьНУ", СтоимостьНУ);
			СписокНМА.УстановитьЗначение(НомСтроки, "АмортизацияНУ", АмортизацияНУ);
			Если Константа.ПрименяетсяПБУ18.Получить(Параметры.ДатаКонцаПериодаВыгрузки) = Да Тогда
				СписокНМА.УстановитьЗначение(НомСтроки, "НУ", 1);
				СписокНМА.УстановитьЗначение(НомСтроки, "СтоимостьПР", СтоимостьПР);
				СписокНМА.УстановитьЗначение(НомСтроки, "АмортизацияПР", АмортизацияПР);
				СписокНМА.УстановитьЗначение(НомСтроки, "СтоимостьВР", СтоимостьБУ - СтоимостьНУ - СтоимостьПР);
				СписокНМА.УстановитьЗначение(НомСтроки, "АмортизацияВР", АмортизацияБУ - АмортизацияНУ - АмортизацияПР);
			КонецЕсли;
		КонецЕсли;
		
		// Выгрузка Конечных остатков.
		Если НачМесяца(Параметры.ДатаКонцаПериодаВыгрузки) = НУ.НачДата Тогда
			СписокНМА.УстановитьЗначение(НомСтроки, "СтоимостьНУКон", СтоимостьНУ);
			СписокНМА.УстановитьЗначение(НомСтроки, "АмортизацияНУКон", АмортизацияНУ);
			Если Константа.ПрименяетсяПБУ18.Получить(Параметры.ДатаКонцаПериодаВыгрузки) = Да Тогда
				СписокНМА.УстановитьЗначение(НомСтроки, "НУ", 1);
				СписокНМА.УстановитьЗначение(НомСтроки, "СтоимостьПРКон", СтоимостьПР);
				СписокНМА.УстановитьЗначение(НомСтроки, "АмортизацияПРКон", АмортизацияПР);
				СписокНМА.УстановитьЗначение(НомСтроки, "СтоимостьВРКон", СтоимостьБУ - СтоимостьНУ - СтоимостьПР);
				СписокНМА.УстановитьЗначение(НомСтроки, "АмортизацияВРКон", АмортизацияБУ - АмортизацияНУ - АмортизацияПР);
			КонецЕсли;
		КонецЕсли;
		
		// Выгрузка оборотов
		Параметры.ПараметрыАлгоритмов.Установить("ТаблицаПроводок", ПроводкиОбороты);
		Параметры.ПараметрыАлгоритмов.Установить("ПорядокСубконтоБУ", "1,2,3");
		
		Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "НУ");
		Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "");
		Параметры.ПараметрыАлгоритмов.Установить("КоличествоДт", 0);
		Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт1", НУ.Субконто(1));
		Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт2", "");
		Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт3", "");
		
		Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "НУ");
		Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", "");
		Параметры.ПараметрыАлгоритмов.Установить("КоличествоКт", 0);
		Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт1", НУ.Субконто(1));
		Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт2", "");
		Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт3", "");
		
		// Стоимость
		Параметры.ПараметрыАлгоритмов.Установить("СчетДт", Счет1);
		Параметры.ПараметрыАлгоритмов.Установить("СчетКт", "");
		Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьНУ_ОборотыДт);
		ДобавитьПроводкуНУ();
		
		Параметры.ПараметрыАлгоритмов.Установить("СчетДт", "");
		Параметры.ПараметрыАлгоритмов.Установить("СчетКт", Счет1);
		Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьНУ_ОборотыКт);
		ДобавитьПроводкуНУ();
		
		// Амортизация
		Параметры.ПараметрыАлгоритмов.Установить("СчетДт", Счет2);
		Параметры.ПараметрыАлгоритмов.Установить("СчетКт", "");
		Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", АмортизацияНУ_ОборотыДт);
		ДобавитьПроводкуНУ();
		
		Параметры.ПараметрыАлгоритмов.Установить("СчетДт", "");
		Параметры.ПараметрыАлгоритмов.Установить("СчетКт", Счет2);
		Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", АмортизацияНУ_ОборотыКт);
		ДобавитьПроводкуНУ();
		
		// Поддержка ПБУ 18
		Если Константа.ПрименяетсяПБУ18.Получить(Параметры.ДатаКонцаПериодаВыгрузки) = Да Тогда
			// Постоянные разницы
			Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "ПР");
			Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "ПР");
			
			// Стоимость
			Параметры.ПараметрыАлгоритмов.Установить("СчетДт", Счет1);
			Параметры.ПараметрыАлгоритмов.Установить("СчетКт", "");
			Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьПР_ОборотыДт);
			ДобавитьПроводкуНУ();
			
			Параметры.ПараметрыАлгоритмов.Установить("СчетДт", "");
			Параметры.ПараметрыАлгоритмов.Установить("СчетКт", Счет1);
			Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьПР_ОборотыКт);
			ДобавитьПроводкуНУ();
			
			// Амортизация
			Параметры.ПараметрыАлгоритмов.Установить("СчетДт", Счет2);
			Параметры.ПараметрыАлгоритмов.Установить("СчетКт", "");
			Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", АмортизацияПР_ОборотыДт);
			ДобавитьПроводкуНУ();
			
			Параметры.ПараметрыАлгоритмов.Установить("СчетДт", "");
			Параметры.ПараметрыАлгоритмов.Установить("СчетКт", Счет2);
			Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", АмортизацияПР_ОборотыКт);
			ДобавитьПроводкуНУ();
			
			// Временные разницы
			Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "ВР");
			Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "ВР");
			
			// Стоимость
			СтоимостьВР = СтоимостьБУ - СтоимостьНУ - СтоимостьПР;
			СтоимостьВР_ОборотыДт = СтоимостьБУ_ОборотыДт - СтоимостьНУ_ОборотыДт - СтоимостьПР_ОборотыДт;
			СтоимостьВР_ОборотыКт = СтоимостьБУ_ОборотыКт - СтоимостьНУ_ОборотыКт - СтоимостьПР_ОборотыКт;
			
			Параметры.ПараметрыАлгоритмов.Установить("СчетДт", Счет1);
			Параметры.ПараметрыАлгоритмов.Установить("СчетКт", "");
			Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьВР_ОборотыДт);
			ДобавитьПроводкуНУ();
			
			Параметры.ПараметрыАлгоритмов.Установить("СчетДт", "");
			Параметры.ПараметрыАлгоритмов.Установить("СчетКт", Счет1);
			Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьВР_ОборотыКт);
			ДобавитьПроводкуНУ();
			
			// Амортизация
			АмортизацияВР = АмортизацияБУ - АмортизацияНУ - АмортизацияПР;
			АмортизацияВР_ОборотыДт = АмортизацияБУ_ОборотыДт - АмортизацияНУ_ОборотыДт - АмортизацияПР_ОборотыДт;
			АмортизацияВР_ОборотыКт = АмортизацияБУ_ОборотыКт - АмортизацияНУ_ОборотыКт - АмортизацияПР_ОборотыКт;
			
			Параметры.ПараметрыАлгоритмов.Установить("СчетДт", Счет2);
			Параметры.ПараметрыАлгоритмов.Установить("СчетКт", "");
			Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", АмортизацияВР_ОборотыДт);
			ДобавитьПроводкуНУ();
			
			Параметры.ПараметрыАлгоритмов.Установить("СчетДт", "");
			Параметры.ПараметрыАлгоритмов.Установить("СчетКт", Счет2);
			Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", АмортизацияВР_ОборотыКт);
			ДобавитьПроводкуНУ();
		КонецЕсли;
		
		// Выгрузка начальных остатков по амортизации
		Если НачМесяца(Параметры.ДатаВводаОстатков) = НУ.НачДата Тогда	
			Параметры.ПараметрыАлгоритмов.Установить("ТаблицаПроводок", Проводки);
			Параметры.ПараметрыАлгоритмов.Установить("ПорядокСубконтоБУ", "1,2,3");
			
			Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "НУ");
			Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "");
			Параметры.ПараметрыАлгоритмов.Установить("КоличествоДт", 0);
			Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт1", "");
			Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт2", "");
			Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт3", "");
			
			Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "НУ");
			Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", "");
			Параметры.ПараметрыАлгоритмов.Установить("КоличествоКт", 0);
			Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт1", НУ.Субконто(1));
			Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт2", "");
			Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт3", "");
			
			Параметры.ПараметрыАлгоритмов.Установить("СчетДт", "");
			Параметры.ПараметрыАлгоритмов.Установить("СчетКт", Счет2);
			Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", АмортизацияНУ);
			ДобавитьПроводкуНУ();
			
			// Поддержка ПБУ 18
			Если Константа.ПрименяетсяПБУ18.Получить(Параметры.ДатаКонцаПериодаВыгрузки) = Да Тогда
				// Постоянные разницы
				Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "ПР");
				Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "ПР");
				
				Параметры.ПараметрыАлгоритмов.Установить("СчетДт", "");
				Параметры.ПараметрыАлгоритмов.Установить("СчетКт", Счет2);
				Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", АмортизацияПР);
				ДобавитьПроводкуНУ();
				
				// Временные разницы
				Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "ВР");
				Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "ВР");
				
				АмортизацияВР = АмортизацияБУ - АмортизацияНУ - АмортизацияПР;
				
				Параметры.ПараметрыАлгоритмов.Установить("СчетДт", "");
				Параметры.ПараметрыАлгоритмов.Установить("СчетКт", Счет2);
				Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", АмортизацияВР);
				ДобавитьПроводкуНУ();
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
		ВходящиеДанные = СоздатьОбъект("СписокЗначений");
		ВходящиеДанные.Установить("Налоговый", ПроводкиОбороты);
		ВходящиеДанные.Установить("Счет", "Н05.03, Н05.04");
		ВходящиеДанные.Установить("Дата", НУ.КонДата);
		ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияБух");
	КонецЕсли;
КонецЦикла;

СписокНМАОтбор = СоздатьОбъект("ТаблицаЗначений");
Для НомКолонки = 1 по СписокНМА.КоличествоКолонок() Цикл
	СписокНМАОтбор.НоваяКолонка(СписокНМА.ПолучитьПараметрыКолонки(НомКолонки));
КонецЦикла;

СписокНМА.ВыбратьСтроки();
Пока СписокНМА.получитьСтроку() = 1 Цикл
	
	Если СписокНМА.НМА.ВидОбъектаУчета &lt;&gt; 0 Тогда
		Продолжить;
	КонецЕсли;
	
	Если СписокНМА.НУ = 0 Тогда
		Продолжить;
	КонецЕсли;

	Если ПустоеЗначение(СписокНМА.НМА.Состояние.Получить(Параметры.ДатаВводаОстатков)) = 0 Тогда
		Если СписокНМА.НМА.Состояние.Получить(Параметры.ДатаВводаОстатков) = Перечисление.СостоянияНМА.Поступил Тогда
			Продолжить;
		КонецЕсли;
		
		НомСтрокиНМА = СписокНМА.НомерСтроки;
		СписокНМАОтбор.НоваяСтрока();                        
		НомСтроки = СписокНМАОтбор.КоличествоСтрок();
		Для НомКолонки = 1 по СписокНМА.КоличествоКолонок() Цикл
			СписокНМАОтбор.УстановитьЗначение(НомСтроки, НомКолонки, СписокНМА.ПолучитьЗначение(НомСтрокиНМА, НомКолонки));
		КонецЦикла;
	КонецЕсли;
КонецЦикла;

Если СписокНМАОтбор.КоличествоСтрок() &lt;&gt; 0 Тогда
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
	ВходящиеДанные.УдалитьВсе();
	ВходящиеДанные.Установить("ФормироватьПроводки", 1);
	ВходящиеДанные.Установить("НМА", СписокНМАОтбор);
	ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
	ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
	ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
	ВходящиеДанные.Установить("РазделУчета", "НематериальныеАктивыИНИОКР");
	ВходящиеДанные.Установить("ВидОбъектаУчета", "НМА");
	ВходящиеДанные.Установить("ОтражатьВНУ", "Отражаемые в налоговом учете");
	ВходящиеДанные.Установить("Дата", Параметры.ДатаВводаОстатков - 1);
	ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ВводНачальныхОстатковНМАИНИОКР");
КонецЕсли;

//*******************

СписокНМАОтбор.УдалитьСтроки();
СписокНМА.ВыбратьСтроки();
СписокНМА.ВыбратьСтроки();
Пока СписокНМА.получитьСтроку() = 1 Цикл
	
	Если СписокНМА.НМА.ВидОбъектаУчета &lt;&gt; 0 Тогда
		Продолжить;
	КонецЕсли;
	
	Если СписокНМА.НУ = 1 Тогда
		Продолжить;
	КонецЕсли;

	Если ПустоеЗначение(СписокНМА.НМА.Состояние.Получить(Параметры.ДатаВводаОстатков)) = 0 Тогда
		Если СписокНМА.НМА.Состояние.Получить(Параметры.ДатаВводаОстатков) = Перечисление.СостоянияНМА.Поступил Тогда
			Продолжить;
		КонецЕсли;
		
		НомСтрокиНМА = СписокНМА.НомерСтроки;
		СписокНМАОтбор.НоваяСтрока();                        
		НомСтроки = СписокНМАОтбор.КоличествоСтрок();
		Для НомКолонки = 1 по СписокНМА.КоличествоКолонок() Цикл
			СписокНМАОтбор.УстановитьЗначение(НомСтроки, НомКолонки, СписокНМА.ПолучитьЗначение(НомСтрокиНМА, НомКолонки));
		КонецЦикла;
	КонецЕсли;
КонецЦикла;

Если СписокНМАОтбор.КоличествоСтрок() &lt;&gt; 0 Тогда
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
	ВходящиеДанные.УдалитьВсе();
	ВходящиеДанные.Установить("ФормироватьПроводки", 1);
	ВходящиеДанные.Установить("НМА", СписокНМАОтбор);
	ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 0);
	ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
	ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
	ВходящиеДанные.Установить("РазделУчета", "НематериальныеАктивыИНИОКР");
	ВходящиеДанные.Установить("ВидОбъектаУчета", "НМА");
	ВходящиеДанные.Установить("ОтражатьВНУ", "Не отражаемые в налоговом учете");
	ВходящиеДанные.Установить("Дата", Параметры.ДатаВводаОстатков - 1);
	ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ВводНачальныхОстатковНМАИНИОКР");
КонецЕсли;

//***************

СписокНМАОтбор.УдалитьСтроки();
СписокНМА.ВыбратьСтроки();
Пока СписокНМА.получитьСтроку() = 1 Цикл
	
	Если СписокНМА.НМА.ВидОбъектаУчета &lt;&gt; 0 Тогда
		Продолжить;
	КонецЕсли;

	Если (ПустоеЗначение(СписокНМА.НМА.Состояние.Получить(Параметры.ДатаВводаОстатков)) = 1)
		ИЛИ (СписокНМА.НМА.Состояние.Получить(Параметры.ДатаВводаОстатков) = Перечисление.СостоянияНМА.Поступил) Тогда
			
		НомСтрокиНМА = СписокНМА.НомерСтроки;
		СписокНМАОтбор.НоваяСтрока();                        
		НомСтроки = СписокНМАОтбор.КоличествоСтрок();
		Для НомКолонки = 1 по СписокНМА.КоличествоКолонок() Цикл
			СписокНМАОтбор.УстановитьЗначение(НомСтроки, НомКолонки, СписокНМА.ПолучитьЗначение(НомСтрокиНМА, НомКолонки));
		КонецЦикла;
	КонецЕсли;
КонецЦикла;

Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Если СписокНМАОтбор.КоличествоСтрок() &lt;&gt; 0 Тогда
		ВходящиеДанные = СоздатьОбъект("СписокЗначений");
		ВходящиеДанные.УдалитьВсе();
		ВходящиеДанные.Установить("ФормироватьПроводки", 1);
		ВходящиеДанные.Установить("НМА", СписокНМАОтбор);
		ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 0);
		ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 0);
		ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
		ВходящиеДанные.Установить("РазделУчета", "НематериальныеАктивыИНИОКР");
		ВходящиеДанные.Установить("ВидОбъектаУчета", "НМА");
		ВходящиеДанные.Установить("ОтражатьВНУ", "Поступившие");
		ВходящиеДанные.Установить("Дата", Параметры.ДатаКонцаПериодаВыгрузки);
		ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ВводНачальныхОстатковНМАИНИОКР");
	КонецЕсли;
КонецЕсли;</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>тРасходыНаНИОКР</Код>
				<Наименование>Расходы на НИОКР</Наименование>
				<Порядок>150</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//*************************************************************************************************
// Счета учета расходов на НИОКР
//*************************************************************************************************

ДокументыНМА = СоздатьОбъект("ТаблицаЗначений");
ДокументыНМА.НоваяКолонка("РБП");
ДокументыНМА.НоваяКолонка("НМА");
		
Док = СоздатьОбъект("Документ.ПринятиеКУчетуНМА");
Док.ВыбратьДокументы(,);
Пока Док.ПолучитьДокумент() = 1 Цикл
	Если Док.ВидОбъектаУчета = 1 Тогда
		ДокументыНМА.НоваяСтрока();
		ДокументыНМА.НМА = Док.НМА;
		ДокументыНМА.РБП = Док.РБП;
	КонецЕсли;
КонецЦикла;
		
СчН04_03 = СчетПоКоду("Н04.03");
СчНПР_04 = СчетПоКоду("НПР.04");
Сч04_2 = СчетПоКоду("04.2");
Сч97 = СчетПоКоду("97");
		
СписокНМА = СоздатьОбъект("ТаблицаЗначений");
СписокНМА.НоваяКолонка("НМА");
СписокНМА.НоваяКолонка("СтоимостьБУ", "Число");
СписокНМА.НоваяКолонка("ПервоначальнаяСтоимостьНУ", "Число");
СписокНМА.НоваяКолонка("СрокИспользованияНУ", "Число");
СписокНМА.НоваяКолонка("СписыватьРасходыНУ", "Число");
СписокНМА.НоваяКолонка("СтоимостьНУ", "Число");
СписокНМА.НоваяКолонка("СтоимостьПР", "Число");
СписокНМА.НоваяКолонка("СтоимостьВР", "Число");
СписокНМА.НоваяКолонка("БУ", "Число");
СписокНМА.НоваяКолонка("НУ", "Число");
СписокНМА.НоваяКолонка("СтоимостьНУКон", "Число");
СписокНМА.НоваяКолонка("СтоимостьПРКон", "Число");
СписокНМА.НоваяКолонка("СтоимостьВРКон", "Число");
СписокНМА.НоваяКолонка("СтоимостьБУКон", "Число");


		
ПроводкиОбороты = Параметры.ТаблицаПроводокОбороты;
Проводки = Параметры.ТаблицаПроводок;
Проводки.УдалитьСтроки();
		
БУ = СоздатьОбъект("БухгалтерскиеИтоги");
БУ.ИспользоватьСубконто();
Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	БУ.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков,, "04.2,97");
			
Иначе
	БУ.ИспользоватьКорСубконто();
	БУ.ИспользоватьКорСубконто();
	БУ.ИспользоватьКорСубконто();
		
	БУ.ВключатьСубсчета(, -1);
	БУ.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков, Параметры.ДатаКонцаПериодаВыгрузки, "04.2,97",,, 3, "Месяц",);
КонецЕсли;
		
Параметры.ПараметрыАлгоритмов.Установить("БухИт", БУ);
Параметры.ПараметрыАлгоритмов.Установить("ПроводкиОбороты", ПроводкиОбороты);
		
БУ.ВыбратьПериоды();
Пока БУ.ПолучитьПериод() = 1 Цикл
			
	ПроводкиОбороты.УдалитьСтроки();
		
	БУ.ВыбратьСчета();
	Пока БУ.ПолучитьСчет() = 1 Цикл
		Если БУ.Счет = Сч04_2 Тогда 
			БУ.ВыбратьСубконто();
			Пока БУ.ПолучитьСубконто() = 1 Цикл
				Если БУ.Субконто(1).ЭтоГруппа() = 1 Тогда
					Продолжить;
				КонецЕсли;
						
				Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
					ВыгрузитьКорреспонденции();
					//ВыгрузитьКорреспонденции( ИсходящиеДанные,,,,,,,, ВыборкаДанных,,,, ИмяПКО,,,, Правило,,,,,,,,,,,,,,,,, Отказ);                       	
				КонецЕсли;
						
				НомСтроки = 0;
				Если СписокНМА.НайтиЗначение(БУ.Субконто(1), НомСтроки, "НМА") = 0 Тогда
					СписокНМА.НоваяСтрока();
					СписокНМА.БУ = 1;
					СписокНМА.НМА = БУ.Субконто(1);
					НомСтроки = СписокНМА.КоличествоСтрок();	
				КонецЕсли;
						
				Если НачМесяца(Параметры.ДатаВводаОстатков) = БУ.НачДата Тогда
					// Выгрузка начальных остатков
					СписокНМА.УстановитьЗначение(НомСтроки, "СтоимостьБУ", БУ.СНД(1));
				Иначе
					СтоимостьБУКон = БУ.СКД(1);
					СписокНМА.УстановитьЗначение(НомСтроки, "СтоимостьБУКон", СтоимостьБУКон);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
			
	Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
		ВходящиеДанные = СоздатьОбъект("СписокЗначений");
		ВходящиеДанные.Установить("Хозрасчетный", ПроводкиОбороты);
		ВходящиеДанные.Установить("Счет", "04.2");
		ВходящиеДанные.Установить("Дата", БУ.КонДата);
		ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияБух");
	КонецЕсли;
КонецЦикла;
		
ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Хозрасчетный", Проводки);
ВходящиеДанные.Установить("Счет", "04.2");
ВходящиеДанные.Установить("Дата", Параметры.ДатаВводаОстатков-1);
ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияБух");
		
Проводки.УдалитьСтроки();
		
// Налоговый учет
		
НУ = СоздатьОбъект("БухгалтерскиеИтоги");
НУ.ИспользоватьСубконто();
Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	НУ.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков,, "Н04.03,НПР.04");
		
Иначе
	НУ.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков, Параметры.ДатаКонцаПериодаВыгрузки, "Н04.03,НПР.04",,, 3, "Месяц",);
КонецЕсли;
		
НУ.ВыбратьПериоды();
Пока НУ.ПолучитьПериод() = 1 Цикл
			
	ПроводкиОбороты.УдалитьСтроки();
		
	НУ.ВыбратьСубконто();
	Пока НУ.ПолучитьСубконто() = 1 Цикл
		Если НУ.Субконто(1).ЭтоГруппа() = 1 Тогда
			Продолжить;
					
		ИначеЕсли НУ.Субконто(1).Вид() = "НематериальныеАктивы" Тогда
			Если НУ.Субконто(1).ВидОбъектаУчета = 0 Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
				
		СтоимостьНУ = 0;
		СтоимостьПР = 0;
		
		СтоимостьНУКон = 0;
		СтоимостьПРКон = 0;
				
		СтоимостьНУ_ОборотыДт = 0;
		СтоимостьПР_ОборотыДт = 0;
				
		СтоимостьНУ_ОборотыКт = 0;
		СтоимостьПР_ОборотыКт = 0;
				
		ДтКт = 1; // 1 - дебет, 2 - кредит
				
		Если НУ.ПолучитьСчет(, СчН04_03) = 1 Тогда
			ДтКт = 1;
			СтоимостьНУ = НУ.СНД(1);
			СтоимостьНУКон = НУ.СКД(1);
			СтоимостьНУ_ОборотыДт = НУ.ДО(1);
			СтоимостьНУ_ОборотыКт = НУ.КО(1);
		КонецЕсли;
				
		Если НУ.ПолучитьСчет(, СчНПР_04) = 1 Тогда
			ДтКт = 1;
			СтоимостьПР = НУ.СНД(1);
			СтоимостьПРКон = НУ.СКД(1);
			СтоимостьПР_ОборотыДт = НУ.ДО(1);
			СтоимостьПР_ОборотыКт = НУ.КО(1);
		КонецЕсли;
				
		СтоимостьБУ = 0;
		СтоимостьБУКон = 0;
		СтоимостьБУ_ОборотыДт = 0;
		СтоимостьБУ_ОборотыКт = 0;
				
		СтатьяРБП = НУ.Субконто(1);
		
		ПервоначальнаяСтоимостьНУ = 0;
		СрокИспользованияНУ = 0;
		СписыватьРасходыНУ = 0;
		Если НУ.Счет = СчетПоКоду("Н04.03") Тогда
			ПервоначальнаяСтоимостьНУ = СтатьяРБП.Сумма;
			СрокИспользованияНУ = Цел(Окр((СтатьяРБП.ДатаОкончанияСписания - СтатьяРБП.ДатаНачалаСписания)/30.5));
			СписыватьРасходыНУ = ?(СтатьяРБП.ДатаНачалаСписания &lt;= Параметры.ДатаКонцаПериодаВыгрузки, 1, 0);
		КонецЕсли;
		Счет1 = Сч97;
				
		Если БУ.ПолучитьПериод(, НУ.НачДата) = 1 Тогда
			БУ.ВыбратьСчета();
			Пока БУ.ПолучитьСчет() = 1 Цикл
				Если БУ.Счет = Сч04_2 Тогда
					НомСтроки = 0;
					Если ДокументыНМА.НайтиЗначение(СтатьяРБП, НомСтроки, "РБП") = 1 Тогда
						Счет1 = Сч04_2;
						СтатьяРБП = ДокументыНМА.ПолучитьЗначение(НомСтроки, "НМА");						
						Если БУ.ПолучитьСубконто(1,, СтатьяРБП) = 1 Тогда
							СтоимостьБУ = БУ.СНД();
							СтоимостьБУКон = БУ.СКД();
							СтоимостьБУ_ОборотыДт = БУ.ДО();
							СтоимостьБУ_ОборотыКт = БУ.КО();
						КонецЕсли;
						БУ.ПолучитьСубконто(1,, "");
					КонецЕсли;
				КонецЕсли;
						
				Если БУ.Счет = Сч97 Тогда
					Если БУ.ПолучитьСубконто(1,, СтатьяРБП) = 1 Тогда
						СтоимостьБУ = БУ.СНД();
						СтоимостьБУКон = БУ.СКД();
						СтоимостьБУ_ОборотыДт = БУ.ДО();
						СтоимостьБУ_ОборотыКт = БУ.КО();
					КонецЕсли;
					БУ.ПолучитьСубконто(1,, "");
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
					
		БУ.ПолучитьПериод(, "");
				
		Если Счет1 = Сч04_2 Тогда
			Если НачМесяца(Параметры.ДатаВводаОстатков) = НУ.НачДата Тогда
				НомСтроки = 0;
				Если СписокНМА.НайтиЗначение(СтатьяРБП, НомСтроки, "НМА") = 0 Тогда
					СписокНМА.НоваяСтрока();
					СписокНМА.НМА = СтатьяРБП;
					СписокНМА.НУ = 1;
					СписокНМА.ПервоначальнаяСтоимостьНУ = ПервоначальнаяСтоимостьНУ;
					СписокНМА.СписыватьРасходыНУ = СписыватьРасходыНУ;
					СписокНМА.СрокИспользованияНУ = СрокИспользованияНУ;
					НомСтроки = СписокНМА.КоличествоСтрок();
				КонецЕсли;
							
				СписокНМА.УстановитьЗначение(НомСтроки, "НУ", 1);
				
				СписокНМА.УстановитьЗначение(НомСтроки, "ПервоначальнаяСтоимостьНУ", ПервоначальнаяСтоимостьНУ);
				СписокНМА.УстановитьЗначение(НомСтроки, "СписыватьРасходыНУ", СписыватьРасходыНУ);
				СписокНМА.УстановитьЗначение(НомСтроки, "СрокИспользованияНУ", СрокИспользованияНУ);
				
				Если СтоимостьНУ &lt;&gt; 0 Тогда
					СписокНМА.УстановитьЗначение(НомСтроки, "СтоимостьНУ", СтоимостьНУ);		
				КонецЕсли;
				Если Константа.ПрименяетсяПБУ18.Получить(Параметры.ДатаКонцаПериодаВыгрузки) = Да Тогда
					Если СтоимостьПР &lt;&gt; 0 Тогда
						СписокНМА.УстановитьЗначение(НомСтроки, "СтоимостьПР", СтоимостьПР);		
					КонецЕсли;
					СтоимостьВР = СтоимостьБУ - СтоимостьНУ - СтоимостьПР;
					Если СтоимостьВР &lt;&gt; 0 Тогда
						СписокНМА.УстановитьЗначение(НомСтроки, "СтоимостьВР", СтоимостьВР);
					КонецЕсли;
				КонецЕсли;
			Иначе
				НомСтроки = 0;
				Если СписокНМА.НайтиЗначение(СтатьяРБП, НомСтроки, "НМА") = 0 Тогда
					СписокНМА.НоваяСтрока();
					СписокНМА.НМА = СтатьяРБП;
					СписокНМА.НУ = 1;
					СписокНМА.ПервоначальнаяСтоимостьНУ = ПервоначальнаяСтоимостьНУ;
					СписокНМА.СписыватьРасходыНУ = СписыватьРасходыНУ;
					СписокНМА.СрокИспользованияНУ = СрокИспользованияНУ;
					НомСтроки = СписокНМА.КоличествоСтрок();
				КонецЕсли;
							
				СписокНМА.УстановитьЗначение(НомСтроки, "НУ", 1);
				
				СписокНМА.УстановитьЗначение(НомСтроки, "ПервоначальнаяСтоимостьНУ", ПервоначальнаяСтоимостьНУ);
				СписокНМА.УстановитьЗначение(НомСтроки, "СписыватьРасходыНУ", СписыватьРасходыНУ);
				СписокНМА.УстановитьЗначение(НомСтроки, "СрокИспользованияНУ", СрокИспользованияНУ);
				
				Если СтоимостьНУКон &lt;&gt; 0 Тогда
					СписокНМА.УстановитьЗначение(НомСтроки, "СтоимостьНУКон", СтоимостьНУКон);		
				КонецЕсли;
				Если Константа.ПрименяетсяПБУ18.Получить(Параметры.ДатаКонцаПериодаВыгрузки) = Да Тогда
					Если СтоимостьПРКон &lt;&gt; 0 Тогда
						СписокНМА.УстановитьЗначение(НомСтроки, "СтоимостьПРКон", СтоимостьПРКон);		
					КонецЕсли;
					СтоимостьВРКон = СтоимостьБУКон - СтоимостьНУКон - СтоимостьПРКон;
					Если СтоимостьВРКон &lt;&gt; 0 Тогда
						СписокНМА.УстановитьЗначение(НомСтроки, "СтоимостьВРКон", СтоимостьВРКон);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		Иначе
			Счет1 = Сч04_2;
			НомСтроки = 0;
			Если СписокНМА.НайтиЗначение(СтатьяРБП, НомСтроки, "НМА") = 1 Тогда				
				Если Константа.ПрименяетсяПБУ18.Получить(Параметры.ДатаКонцаПериодаВыгрузки) = Да Тогда
					Если СтоимостьПР &lt;&gt; 0 Тогда
						СписокНМА.УстановитьЗначение(НомСтроки, "СтоимостьПР", СтоимостьПР);		
					КонецЕсли;
					СтоимостьВР = СписокНМА.ПолучитьЗначение(НомСтроки, "СтоимостьБУ") - СписокНМА.ПолучитьЗначение(НомСтроки, "СтоимостьНУ") - СписокНМА.ПолучитьЗначение(НомСтроки, "СтоимостьПР");
					Если СтоимостьВР &lt;&gt; 0 Тогда
						СписокНМА.УстановитьЗначение(НомСтроки, "СтоимостьВР", СтоимостьВР);
					КонецЕсли;
					
					Если СтоимостьПРКон &lt;&gt; 0 Тогда
						СписокНМА.УстановитьЗначение(НомСтроки, "СтоимостьПРКон", СтоимостьПРКон);		
					КонецЕсли;
					СтоимостьВРКон = СписокНМА.ПолучитьЗначение(НомСтроки, "СтоимостьБУКон") - СписокНМА.ПолучитьЗначение(НомСтроки, "СтоимостьНУКон") - СписокНМА.ПолучитьЗначение(НомСтроки, "СтоимостьПРКон");
					Если СтоимостьВРКон &lt;&gt; 0 Тогда
						СписокНМА.УстановитьЗначение(НомСтроки, "СтоимостьВРКон", СтоимостьВРКон);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		// Выгрузка оборотов
		Параметры.ПараметрыАлгоритмов.Установить("ТаблицаПроводок", ПроводкиОбороты);
		Параметры.ПараметрыАлгоритмов.Установить("ПорядокСубконтоБУ", "1,2,3");
				
		Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "НУ");
		Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "");
		Параметры.ПараметрыАлгоритмов.Установить("КоличествоДт", 0);
		Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт1", СтатьяРБП);
		Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт2", "");
		Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт3", "");
				
		Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "НУ");
		Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", "");
		Параметры.ПараметрыАлгоритмов.Установить("КоличествоКт", 0);
		Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт1", СтатьяРБП);
		Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт2", "");
		Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт3", "");
				
		// Стоимость
		Параметры.ПараметрыАлгоритмов.Установить("СчетДт", Счет1);
		Параметры.ПараметрыАлгоритмов.Установить("СчетКт", "");
		Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьНУ_ОборотыДт);
		ДобавитьПроводкуНУ( ИсходящиеДанные,,,,,,,, ВыборкаДанных,,,, ИмяПКО,,,, Правило,,,,,,,,,,,,,,,,, Отказ);
				
		Параметры.ПараметрыАлгоритмов.Установить("СчетДт", "");
		Параметры.ПараметрыАлгоритмов.Установить("СчетКт", Счет1);
		Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьНУ_ОборотыКт);
		ДобавитьПроводкуНУ( ИсходящиеДанные,,,,,,,, ВыборкаДанных,,,, ИмяПКО,,,, Правило,,,,,,,,,,,,,,,,, Отказ);
				
		// Поддержка ПБУ 18
		Если Константа.ПрименяетсяПБУ18.Получить(Параметры.ДатаКонцаПериодаВыгрузки) = Да Тогда
			// Постоянные разницы
			Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "ПР");
			Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "ПР");
					
			// Стоимость
			Параметры.ПараметрыАлгоритмов.Установить("СчетДт", Счет1);
			Параметры.ПараметрыАлгоритмов.Установить("СчетКт", "");
			Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьПР_ОборотыДт);
			ДобавитьПроводкуНУ( ИсходящиеДанные,,,,,,,, ВыборкаДанных,,,, ИмяПКО,,,, Правило,,,,,,,,,,,,,,,,, Отказ);
					
			Параметры.ПараметрыАлгоритмов.Установить("СчетДт", "");
			Параметры.ПараметрыАлгоритмов.Установить("СчетКт", Счет1);
			Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьПР_ОборотыКт);
			ДобавитьПроводкуНУ( ИсходящиеДанные,,,,,,,, ВыборкаДанных,,,, ИмяПКО,,,, Правило,,,,,,,,,,,,,,,,, Отказ);
					
			// Временные разницы
			Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "ВР");
			Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "ВР");
					
			// Стоимость
			СтоимостьВР = СтоимостьБУ - СтоимостьНУ - СтоимостьПР;
			СтоимостьВР_ОборотыДт = СтоимостьБУ_ОборотыДт - СтоимостьНУ_ОборотыДт - СтоимостьПР_ОборотыДт;
			СтоимостьВР_ОборотыКт = СтоимостьБУ_ОборотыКт - СтоимостьНУ_ОборотыКт - СтоимостьПР_ОборотыКт;
					
			Параметры.ПараметрыАлгоритмов.Установить("СчетДт", Счет1);
			Параметры.ПараметрыАлгоритмов.Установить("СчетКт", "");
			Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьВР_ОборотыДт);
			ДобавитьПроводкуНУ( ИсходящиеДанные,,,,,,,, ВыборкаДанных,,,, ИмяПКО,,,, Правило,,,,,,,,,,,,,,,,, Отказ);
					
			Параметры.ПараметрыАлгоритмов.Установить("СчетДт", "");
			Параметры.ПараметрыАлгоритмов.Установить("СчетКт", Счет1);
			Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьВР_ОборотыКт);
			ДобавитьПроводкуНУ( ИсходящиеДанные,,,,,,,, ВыборкаДанных,,,, ИмяПКО,,,, Правило,,,,,,,,,,,,,,,,, Отказ);
		КонецЕсли;
	КонецЦикла;
			
	Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
		ВходящиеДанные = СоздатьОбъект("СписокЗначений");
		ВходящиеДанные.Установить("Налоговый", ПроводкиОбороты);
		ВходящиеДанные.Установить("Счет", "Н04.03");
		ВходящиеДанные.Установить("Дата", НУ.КонДата);
		ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияБух");
	КонецЕсли;
КонецЦикла;
		
СписокНМАОтбор = СоздатьОбъект("ТаблицаЗначений");
Для НомКолонки = 1 по СписокНМА.КоличествоКолонок() Цикл
	СписокНМАОтбор.НоваяКолонка(СписокНМА.ПолучитьПараметрыКолонки(НомКолонки));
КонецЦикла;

СписокНМА.ВыбратьСтроки();
Пока СписокНМА.получитьСтроку() = 1 Цикл
	
	Если СписокНМА.НМА.ВидОбъектаУчета = 0 Тогда
		Продолжить;
	КонецЕсли;
	
	Если СписокНМА.НМА.ДатаПринятияКУчету &gt;= Параметры.ДатаВводаОстатков Тогда
		Продолжить;
	КонецЕсли;
	
	Если СписокНМА.НУ = 0 Тогда
		Продолжить;
	КонецЕсли;
	
	НомСтрокиНМА = СписокНМА.НомерСтроки;
	СписокНМАОтбор.НоваяСтрока();                        
	НомСтроки = СписокНМАОтбор.КоличествоСтрок();
	Для НомКолонки = 1 по СписокНМА.КоличествоКолонок() Цикл
		СписокНМАОтбор.УстановитьЗначение(НомСтроки, НомКолонки, СписокНМА.ПолучитьЗначение(НомСтрокиНМА, НомКолонки));
	КонецЦикла;
	
КонецЦикла;

Если СписокНМАОтбор.КоличествоСтрок() &lt;&gt; 0 Тогда
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
	ВходящиеДанные.УдалитьВсе();
	ВходящиеДанные.Установить("ФормироватьПроводки", 1);
	ВходящиеДанные.Установить("НМА", СписокНМАОтбор);
	ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
	ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
	ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
	ВходящиеДанные.Установить("РазделУчета", "НематериальныеАктивыИНИОКР");
	ВходящиеДанные.Установить("ВидОбъектаУчета", "НИОКР");
	ВходящиеДанные.Установить("ОтражатьВНУ", "Отражаемые в налоговом учете");
	ВходящиеДанные.Установить("Дата", Параметры.ДатаВводаОстатков - 1);
	ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ВводНачальныхОстатковНМАИНИОКР");
КонецЕсли;

//*******************

СписокНМАОтбор.УдалитьСтроки();
СписокНМА.ВыбратьСтроки();
Пока СписокНМА.получитьСтроку() = 1 Цикл
	
	Если СписокНМА.НМА.ВидОбъектаУчета = 0 Тогда
		Продолжить;
	КонецЕсли;
	
	Если СписокНМА.НМА.ДатаПринятияКУчету &gt;= Параметры.ДатаВводаОстатков Тогда
		Продолжить;
	КонецЕсли;
	
	Если СписокНМА.НУ = 1 Тогда
		Продолжить;
	КонецЕсли;
	
	НомСтрокиНМА = СписокНМА.НомерСтроки;
	СписокНМАОтбор.НоваяСтрока();                        
	НомСтроки = СписокНМАОтбор.КоличествоСтрок();
	Для НомКолонки = 1 по СписокНМА.КоличествоКолонок() Цикл
		СписокНМАОтбор.УстановитьЗначение(НомСтроки, НомКолонки, СписокНМА.ПолучитьЗначение(НомСтрокиНМА, НомКолонки));
	КонецЦикла;
	
КонецЦикла;

Если СписокНМАОтбор.КоличествоСтрок() &lt;&gt; 0 Тогда
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
	ВходящиеДанные.УдалитьВсе();
	ВходящиеДанные.Установить("ФормироватьПроводки", 1);
	ВходящиеДанные.Установить("НМА", СписокНМАОтбор);
	ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 0);
	ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
	ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
	ВходящиеДанные.Установить("РазделУчета", "НематериальныеАктивыИНИОКР");
	ВходящиеДанные.Установить("ВидОбъектаУчета", "НИОКР");
	ВходящиеДанные.Установить("ОтражатьВНУ", "Не отражаемые в налоговом учете");
	ВходящиеДанные.Установить("Дата", Параметры.ДатаВводаОстатков - 1);
	ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ВводНачальныхОстатковНМАИНИОКР");
КонецЕсли;

//***************
СписокНМАОтбор.УдалитьСтроки();
СписокНМА.ВыбратьСтроки();
Пока СписокНМА.получитьСтроку() = 1 Цикл
	
	Если СписокНМА.НМА.ВидОбъектаУчета = 0 Тогда
		Продолжить;
	КонецЕсли;
	
	Если СписокНМА.НМА.ДатаПринятияКУчету &lt; Параметры.ДатаВводаОстатков Тогда
		Продолжить;
	КонецЕсли;
	
	НомСтрокиНМА = СписокНМА.НомерСтроки;
	СписокНМАОтбор.НоваяСтрока();                        
	НомСтроки = СписокНМАОтбор.КоличествоСтрок();
	Для НомКолонки = 1 по СписокНМА.КоличествоКолонок() Цикл
		СписокНМАОтбор.УстановитьЗначение(НомСтроки, НомКолонки, СписокНМА.ПолучитьЗначение(НомСтрокиНМА, НомКолонки));
	КонецЦикла;
	
КонецЦикла;

Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Если СписокНМАОтбор.КоличествоСтрок() &lt;&gt; 0 Тогда
		ВходящиеДанные = СоздатьОбъект("СписокЗначений");
		ВходящиеДанные.УдалитьВсе();
		ВходящиеДанные.Установить("ФормироватьПроводки", 1);
		ВходящиеДанные.Установить("НМА", СписокНМАОтбор);
		ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 0);
		ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 0);
		ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
		ВходящиеДанные.Установить("РазделУчета", "НематериальныеАктивыИНИОКР");
		ВходящиеДанные.Установить("ВидОбъектаУчета", "НИОКР");
		ВходящиеДанные.Установить("ОтражатьВНУ", "Поступившие");
		ВходящиеДанные.Установить("Дата", Параметры.ДатаКонцаПериодаВыгрузки);
		ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ВводНачальныхОстатковНМАИНИОКР");
	КонецЕсли;
КонецЕсли;</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>тВнеоборотныеАктивы</Код>
				<Наименование>Внеоборотные активы</Наименование>
				<Порядок>200</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//*************************************************************************************************
//Счета учета оборудования (Счет 07)
//*************************************************************************************************

Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовНУ", "Н01.02");
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовПР", "НПР.07");
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовБУ", "07");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоНУ", ВидыСубконто.Оборудование);
Параметры.ПараметрыАлгоритмов.Установить("ПорядокСубконтоБУ", "1,2,3");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", "");
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Налоговый");
Параметры.ПараметрыАлгоритмов.Установить("Количественный", 1);
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 1);
ВыгрузитьОстаткиПоСчетуНУ();

Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("07"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//*************************************************************************************************
//Счета учета внеоборотных активов (Счета 08)
//*************************************************************************************************

Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовНУ", "Н01.01");
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовПР", "НПР.08");
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовБУ", "08.4");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоНУ", ВидыСубконто.ОбъектыСтроительства);
Параметры.ПараметрыАлгоритмов.Установить("ПорядокСубконтоБУ", "1,2,3");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", "");
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Налоговый");
Параметры.ПараметрыАлгоритмов.Установить("Количественный", 1);
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 1);
ВыгрузитьОстаткиПоСчетуНУ();

//******************** Счет 08.4 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("08.4"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//***

Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовНУ", "Н01.09");
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовПР", "НПР.08");
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовБУ", "08.1,08.2,08.3");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоНУ", ВидыСубконто.ОбъектыСтроительства);
Параметры.ПараметрыАлгоритмов.Установить("ПорядокСубконтоБУ", "1,2,3");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", "");
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Налоговый");
Параметры.ПараметрыАлгоритмов.Установить("Количественный", 0);
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 1);
ВыгрузитьОстаткиПоСчетуНУ();

//******************** Счет 08.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("08.1"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 08.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("08.2"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 08.3 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("08.3"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//***
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовНУ", "Н01.08");
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовПР", "НПР.08");
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовБУ", "08.5");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоНУ", ВидыСубконто.ОбъектыСтроительства);
Параметры.ПараметрыАлгоритмов.Установить("ПорядокСубконтоБУ", "1,2,3");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", "");
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Налоговый");
Параметры.ПараметрыАлгоритмов.Установить("Количественный", 0);
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 1);
ВыгрузитьОстаткиПоСчетуНУ();

//******************** Счет 08.5 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("08.5"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//***

Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовНУ", "Н01.03");
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовПР", "НПР.08");
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовБУ", "08.8");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоНУ", ВидыСубконто.ОбъектыСтроительства);
Параметры.ПараметрыАлгоритмов.Установить("ПорядокСубконтоБУ", "1,2,3");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", "");
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Налоговый");
Параметры.ПараметрыАлгоритмов.Установить("Количественный", 0);
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 1);
ВыгрузитьОстаткиПоСчетуНУ();

//******************** Счет 08.8 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("08.8"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//***
Параметры.ТаблицаОстатковНУ.УдалитьСтроки();
//******************** Счет 08.6 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("08.6"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 08.7 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("08.7"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>тМатериалы</Код>
				<Наименование>Материалы</Наименование>
				<Порядок>250</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//*************************************************************************************************
// Счета учета материалов (Счет 10)
//*************************************************************************************************

Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовНУ", "Н02.01,Н02.09");
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовПР", "НПР.10.1");
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовБУ", "10.1,10.2,10.3,10.4,10.5,10.6,10.7,10.8,10.9,10.10");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоНУ", ВидыСубконто.Материалы);
Параметры.ПараметрыАлгоритмов.Установить("ПорядокСубконтоБУ", "1,2,3");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", "");
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Налоговый");
Параметры.ПараметрыАлгоритмов.Установить("Количественный", 1);
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 1);
ВыгрузитьОстаткиПоСчетуНУ();

//******************** Счет 10.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("10.1"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 10.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("10.2"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 10.3 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("10.3"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 10.4 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("10.4"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 10.5 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("10.5"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 10.6 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("10.6"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 10.7 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("10.7"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 10.8 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("10.8"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 10.9 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("10.9"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 10.10 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("10.10"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 10.11 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("КоличествоСубконто", 3);
ВыгрузитьОстаткиПоСпецматериаламНУ();

Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("МЦ.02"));
ВыгрузитьОстаткиПоСпецматериаламМЦ();

Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("10.11.1"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
Параметры.ПараметрыАлгоритмов.Установить("КоличествоСубконто", 3);
ВыгрузитьОстаткиПоСчету();

Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("МЦ.03"));
ВыгрузитьОстаткиПоСпецматериаламМЦ();

Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("10.11.2"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
Параметры.ПараметрыАлгоритмов.Установить("КоличествоСубконто", 3);
ВыгрузитьОстаткиПоСчету();

Параметры.ПараметрыАлгоритмов.Установить("КоличествоСубконто", 1);

//******************** Соответствие счетов НУ Счет МЦ.02 и МЦ.03 ******************** 
// Поддержка ПБУ 18
Если Константа.ПрименяетсяПБУ18.Получить(Параметры.ДатаКонцаПериодаВыгрузки) = Да Тогда
	
	ПроводкиОбороты = Параметры.ТаблицаПроводокОбороты;
	Проводки = Параметры.ТаблицаПроводок;
	Проводки.УдалитьСтроки();
	
	НУ = СоздатьОбъект("БухгалтерскиеИтоги");
	НУ.ИспользоватьСубконто();
	Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
		НУ.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков,, "МЦ.02,МЦ.03");
		
	Иначе
		НУ.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков, Параметры.ДатаКонцаПериодаВыгрузки, "МЦ.02,МЦ.03",,, 3, "Месяц",);
	КонецЕсли;
	
	НУ.ВыбратьПериоды();
	Пока НУ.ПолучитьПериод() = 1 Цикл
		
		НУ.ВыбратьСчета();
		Пока НУ.ПолучитьСчет() = 1 Цикл
			
			ПроводкиОбороты.УдалитьСтроки();
			
			НУ.ВыбратьСубконто(1);
			Пока НУ.ПолучитьСубконто(1) = 1 Цикл
				Если НУ.Субконто(1).ЭтоГруппа() = 1 Тогда
					Продолжить;
				КонецЕсли;
				
				СтоимостьВР = НУ.СНД(1);
				СтоимостьВР_ОборотыДт = НУ.ДО(1);
				СтоимостьВР_ОборотыКт = НУ.КО(1);
				
				// Выгрузка оборотов
				Параметры.ПараметрыАлгоритмов.Установить("ТаблицаПроводок", ПроводкиОбороты);
				Параметры.ПараметрыАлгоритмов.Установить("ПорядокСубконтоБУ", "1,2,3");
				
				Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "ВР");
				Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "");
				Параметры.ПараметрыАлгоритмов.Установить("КоличествоДт", 0);
				Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт1", НУ.Субконто(1));
				Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт2", "");
				Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт3", "");
				
				Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "ВР");
				Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", );
				Параметры.ПараметрыАлгоритмов.Установить("КоличествоКт", 0);
				Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт1", НУ.Субконто(1));
				Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт2", "");
				Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт3", "");
				
				// Стоимость
				Параметры.ПараметрыАлгоритмов.Установить("СчетДт", НУ.Счет);
				Параметры.ПараметрыАлгоритмов.Установить("СчетКт", "");
				Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьВР_ОборотыДт);
				ДобавитьПроводкуНУ();
				
				Параметры.ПараметрыАлгоритмов.Установить("СчетДт", "");
				Параметры.ПараметрыАлгоритмов.Установить("СчетКт", НУ.Счет);
				Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьВР_ОборотыКт);
				ДобавитьПроводкуНУ();
				
			КонецЦикла;
			
			ВходящиеДанные = СоздатьОбъект("СписокЗначений");
			ВходящиеДанные.Установить("Налоговый", ПроводкиОбороты);
			ВходящиеДанные.Установить("Счет", НУ.Счет);
			ВходящиеДанные.Установить("Дата", НУ.КонДата);
			ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияБух");
		КонецЦикла;
	КонецЦикла;
КонецЕсли;


//******************** Счет 11 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("11"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>тОтклонениеСтоимостиМПЗ</Код>
				<Наименование>Отклонения стоимости ТМЦ</Наименование>
				<Порядок>300</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//*************************************************************************************************
// Счета учета отклонений стоимости (Счета 14, 15, 16)
//*************************************************************************************************

//******************** Счет 14.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("14.1"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 14.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("14.2"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 14.3 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("14.3"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 14.4 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("14.4"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 15.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("15.1"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 15.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("15.2"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 16.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("16.1"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 16.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("16.2"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 16.3 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("16.3"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>тДанныеПоНДСпоПоставщикам</Код>
				<Наименование>НДС по приобретенным ценностям</Наименование>
				<Порядок>350</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");
//*********************************************************
Если Параметры.ДатаКонцаПериодаВыгрузки &gt; Параметры.ДатаВводаОстатков Тогда
	Параметры.ПараметрыАлгоритмов.Установить("НДСДатаВыгрузки", Параметры.ДатаВводаОстатков-1);
	ДанныеПоНДСпоПоставщикам();
	//Параметры.ПараметрыАлгоритмов.Установить("НДСДатаВыгрузки", Параметры.ДатаКонцаПериодаВыгрузки);
	//ДанныеПоНДСпоПоставщикам();
Иначе
	Параметры.ПараметрыАлгоритмов.Установить("НДСДатаВыгрузки", Параметры.ДатаВводаОстатков-1);
	ДанныеПоНДСпоПоставщикам();
КонецЕсли;

//*************************************************************************************************
// Счета учета НДС полученного
//*************************************************************************************************

//******************** Счет 19.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("19.1"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
Параметры.ПараметрыАлгоритмов.Установить("РазделУчета", "НДСПоПриобретеннымЦенностям");
ВыгрузитьОстаткиПоСчету();

//******************** Счет 19.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("19.2"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
Параметры.ПараметрыАлгоритмов.Установить("РазделУчета", "НДСПоПриобретеннымЦенностям");
ВыгрузитьОстаткиПоСчету();

//******************** Счет 19.3 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("19.3"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
Параметры.ПараметрыАлгоритмов.Установить("РазделУчета", "НДСПоПриобретеннымЦенностям");
ВыгрузитьОстаткиПоСчету();

//******************** Счет 19.4 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("19.4"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
Параметры.ПараметрыАлгоритмов.Установить("РазделУчета", "НДСПоПриобретеннымЦенностям");
ВыгрузитьОстаткиПоСчету();

//******************** Счет 19.5 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("19.5"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
Параметры.ПараметрыАлгоритмов.Установить("РазделУчета", "");
ВыгрузитьОстаткиПоСчету();

//*********************************************************************
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "Прочее");</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>тНЗП</Код>
				<Наименование>Незавершенное производство</Наименование>
				<Порядок>400</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//*************************************************************************************************
// Счета учета НЗМ (Счет 20)
//*************************************************************************************************

СписокСчетовНУ = "Н01.05";
СписокСчетовПР = "НПР.20";
СписокСчетовБУ = "20";

ПроводкиОбороты = Параметры.ТаблицаПроводокОбороты;
Проводки = Параметры.ТаблицаПроводок;
Проводки.УдалитьСтроки();

НУ = СоздатьОбъект("БухгалтерскиеИтоги");
НУ.ИспользоватьСубконто(ВидыСубконто.ВидыНоменклатуры);
НУ.ИспользоватьСубконто(ВидыСубконто.ГруппыВидыРасходов);
Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	НУ.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков,, СписокСчетовНУ);
	
Иначе
	НУ.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков, Параметры.ДатаКонцаПериодаВыгрузки, СписокСчетовНУ,,, 3, "Месяц",);
КонецЕсли;

ПР = СоздатьОбъект("БухгалтерскиеИтоги");
ПР.ИспользоватьСубконто();
ПР.ИспользоватьСубконто();
ПР.ИспользоватьСубконто();
Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	ПР.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков,, СписокСчетовПР);
	
Иначе
	ПР.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков, Параметры.ДатаКонцаПериодаВыгрузки, СписокСчетовПР,,, 3, "Месяц",);
КонецЕсли;

БУ = СоздатьОбъект("БухгалтерскиеИтоги");
БУ.ИспользоватьСубконто();
БУ.ИспользоватьСубконто();
БУ.ИспользоватьСубконто();
Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	БУ.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков,, СписокСчетовБУ);
	
Иначе
	БУ.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков, Параметры.ДатаКонцаПериодаВыгрузки, СписокСчетовБУ,,, 3, "Месяц",);
КонецЕсли;

ИтогиПоСубконто = СоздатьОбъект("ТаблицаЗначений");
ИтогиПоСубконто.НоваяКолонка("Счет");
ИтогиПоСубконто.НоваяКолонка("КодСчета");
ИтогиПоСубконто.НоваяКолонка("Субконто1");
ИтогиПоСубконто.НоваяКолонка("Субконто2");
ИтогиПоСубконто.НоваяКолонка("Субконто3");
ИтогиПоСубконто.НоваяКолонка("СНД1", "Число");
ИтогиПоСубконто.НоваяКолонка("СНК1", "Число");
ИтогиПоСубконто.НоваяКолонка("КО1", "Число");
ИтогиПоСубконто.НоваяКолонка("ДО1", "Число");
ИтогиПоСубконто.НоваяКолонка("СНД3", "Число");
ИтогиПоСубконто.НоваяКолонка("СНК3", "Число");
ИтогиПоСубконто.НоваяКолонка("КО3", "Число");
ИтогиПоСубконто.НоваяКолонка("ДО3", "Число");

НУ.ВыбратьПериоды();
Пока НУ.ПолучитьПериод() = 1 Цикл
	
	ПроводкиОбороты.УдалитьСтроки();
	
	НУ.ВыбратьСубконто(1);
	Пока НУ.ПолучитьСубконто(1) = 1 Цикл
		Если НУ.Субконто(1).ЭтоГруппа() = 1 Тогда
			Продолжить;
		КонецЕсли;
			
		НУ.ВыбратьСубконто(2);
		Пока НУ.ПолучитьСубконто(2) = 1 Цикл
			СтоимостьНУ = НУ.СНД(1);
			СтоимостьНУ_ОборотыДт = НУ.ДО(1);
			СтоимостьНУ_ОборотыКт = НУ.КО(1);
			
			Если БУ.ПолучитьПериод(1, НУ.НачДата) = 1 Тогда
				Если БУ.ПолучитьСубконто(1,, НУ.Субконто(1)) = 1 Тогда
					
					ИтогиПоСубконто.УдалитьСтроки();
				
					БУ.ВыбратьСчета();
					Пока БУ.ПолучитьСчет() = 1 Цикл
						БУ.ВыбратьСубконто(2);
						Пока БУ.ПолучитьСубконто(2) = 1 Цикл
							Если БУ.Субконто(2).ЭтоГруппа() = 1 Тогда
								Продолжить;
								
							ИначеЕсли НУ.Субконто(2) &lt;&gt; БУ.Субконто(2).ВидРасходовДляНалоговогоУчета Тогда
								Продолжить;
							КонецЕсли;
								
							БУ.ВыбратьСубконто(3);
							Пока БУ.ПолучитьСубконто(3) = 1 Цикл
								
								ИтогиПоСубконто.НоваяСтрока();
								ИтогиПоСубконто.Счет = БУ.Счет;
								ИтогиПоСубконто.КодСчета = "";
								ИтогиПоСубконто.Субконто1 = БУ.Субконто(1);
								ИтогиПоСубконто.Субконто2 = БУ.Субконто(2);
								ИтогиПоСубконто.Субконто3 = БУ.Субконто(3);
								ИтогиПоСубконто.СНД1 = БУ.СНД(1);
								ИтогиПоСубконто.СНК1 = БУ.СНК(1);
								ИтогиПоСубконто.КО1 = БУ.КО(1);
								ИтогиПоСубконто.ДО1 = БУ.ДО(1);
								
								Если ПР.ПолучитьПериод(1, БУ.НачДата) = 1 Тогда
									Если ПР.ПолучитьСубконто(1,, БУ.Субконто(1)) = 1 Тогда
										Если ПР.ПолучитьСубконто(2,, БУ.Субконто(2)) = 1 Тогда
											Если ПР.ПолучитьСубконто(3,, БУ.Субконто(3)) = 1 Тогда
												ИтогиПоСубконто.СНД3 = ПР.СНД(1);
												ИтогиПоСубконто.СНК3 = ПР.СНК(1);
												ИтогиПоСубконто.КО3 = ПР.КО(1);
												ИтогиПоСубконто.ДО3 = ПР.ДО(1);
											КонецЕсли;
										КонецЕсли;
									КонецЕсли;
								КонецЕсли;
								
							КонецЦикла;
						КонецЦикла;
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
				
			БУ.ПолучитьСубконто(1,, "");
			БУ.ПолучитьПериод(, "");
			
			Если ИтогиПоСубконто.КоличествоСтрок() = 0 Тогда
				ИтогиПоСубконто.НоваяСтрока();
				ИтогиПоСубконто.Счет = СчетПоКоду(СписокСчетовБУ);
				ИтогиПоСубконто.КодСчета = "";
				ИтогиПоСубконто.Субконто1 = НУ.Субконто(1);
				ИтогиПоСубконто.Субконто2 = НУ.Субконто(2);
				ИтогиПоСубконто.Субконто3 = "";
			КонецЕсли;
				
			СтоимостьБУ_Всего = ИтогиПоСубконто.Итог("СНД1");
			СтоимостьБУ_ОборотыДт_Всего = ИтогиПоСубконто.Итог("ДО1");
			СтоимостьБУ_ОборотыКт_Всего = ИтогиПоСубконто.Итог("КО1");
				
			СтоимостьБУ_ТекИтог = 0;
			СтоимостьБУ_ОборотыДт_ТекИтог = 0;
			СтоимостьБУ_ОборотыКт_ТекИтог = 0;
				
			РаспределеноНУ = 0;
			РаспределеноНУ_ОборотыДт = 0;
			РаспределеноНУ_ОборотыКт = 0;
					
			ИтогиПоСубконто.ВыбратьСтроки();
			Пока ИтогиПоСубконто.ПолучитьСтроку() = 1 Цикл
									
				СтоимостьБУ = ИтогиПоСубконто.СНД1;
				СтоимостьБУ_ОборотыДт = ИтогиПоСубконто.ДО1;
				СтоимостьБУ_ОборотыКт = ИтогиПоСубконто.КО1;
									
				ТекСтоимостьНУ = ?(СтоимостьБУ_Всего = 0, 0, Окр(СтоимостьНУ * СтоимостьБУ / СтоимостьБУ_Всего, 2, 1));
				ТекСтоимостьНУ_ОборотыДт = ?(СтоимостьБУ_ОборотыДт_Всего = 0, 0, Окр(СтоимостьНУ_ОборотыДт * СтоимостьБУ_ОборотыДт / СтоимостьБУ_ОборотыДт_Всего, 2, 1));
				ТекСтоимостьНУ_ОборотыКт = ?(СтоимостьБУ_ОборотыКт_Всего = 0, 0, Окр(СтоимостьНУ_ОборотыКт * СтоимостьБУ_ОборотыКт / СтоимостьБУ_ОборотыКт_Всего, 2, 1));
										
				ТекСтоимостьПР = ИтогиПоСубконто.СНД3;
				ТекСтоимостьПР_ОборотыДт = ИтогиПоСубконто.ДО3;
				ТекСтоимостьПР_ОборотыКт = ИтогиПоСубконто.КО3;
									
				РаспределеноНУ = РаспределеноНУ + ТекСтоимостьНУ;
				РаспределеноНУ_ОборотыДт = РаспределеноНУ_ОборотыДт + ТекСтоимостьНУ_ОборотыДт;
				РаспределеноНУ_ОборотыКт = РаспределеноНУ_ОборотыКт + ТекСтоимостьНУ_ОборотыКт;
									
				СтоимостьБУ_ТекИтог = СтоимостьБУ_ТекИтог + СтоимостьБУ;
				СтоимостьБУ_ОборотыДт_ТекИтог = СтоимостьБУ_ОборотыДт_ТекИтог + СтоимостьБУ_ОборотыДт;
				СтоимостьБУ_ОборотыКт_ТекИтог = СтоимостьБУ_ОборотыКт_ТекИтог + СтоимостьБУ_ОборотыКт;
					
				// Если текущий итог по колонке равен всей сумме колонки,
				// то это последняя проводка и ее сумму надо скорректировать.
				Если СтоимостьБУ_ТекИтог = СтоимостьБУ_Всего Тогда
					ТекСтоимостьНУ = ТекСтоимостьНУ + СтоимостьНУ - РаспределеноНУ;
				КонецЕсли;
					
				Если СтоимостьБУ_ОборотыДт_ТекИтог = СтоимостьБУ_ОборотыДт_Всего Тогда
					ТекСтоимостьНУ_ОборотыДт = ТекСтоимостьНУ_ОборотыДт + СтоимостьНУ_ОборотыДт - РаспределеноНУ_ОборотыДт;
				КонецЕсли;
					
				Если СтоимостьБУ_ОборотыКт_ТекИтог = СтоимостьБУ_ОборотыКт_Всего Тогда
					ТекСтоимостьНУ_ОборотыКт = ТекСтоимостьНУ_ОборотыКт + СтоимостьНУ_ОборотыКт - РаспределеноНУ_ОборотыКт;
				КонецЕсли;
					
				// Выгрузка оборотов НУ
				Параметры.ПараметрыАлгоритмов.Установить("ТаблицаПроводок", ПроводкиОбороты);
				Параметры.ПараметрыАлгоритмов.Установить("ПорядокСубконтоБУ", "1,2,3");
				
				Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "НУ");
				Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт1", ИтогиПоСубконто.Субконто1);
				Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт2", ИтогиПоСубконто.Субконто2);
				Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт3", ИтогиПоСубконто.Субконто3);
					
				Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "НУ");
				Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт1", ИтогиПоСубконто.Субконто1);
				Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт2", ИтогиПоСубконто.Субконто2);
				Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт3", ИтогиПоСубконто.Субконто3);
					
				// Стоимость
				Параметры.ПараметрыАлгоритмов.Установить("СчетДт", ИтогиПоСубконто.Счет);
				Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", ИтогиПоСубконто.КодСчета);
				Параметры.ПараметрыАлгоритмов.Установить("СчетКт", "");
				Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", "");
				Параметры.ПараметрыАлгоритмов.Установить("КоличествоДт", 0);
				Параметры.ПараметрыАлгоритмов.Установить("КоличествоКт", 0);
				Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", ТекСтоимостьНУ_ОборотыДт);
				ДобавитьПроводкуНУ();
					
				Параметры.ПараметрыАлгоритмов.Установить("СчетДт", "");
				Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "");
				Параметры.ПараметрыАлгоритмов.Установить("СчетКт", ИтогиПоСубконто.Счет);
				Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", ИтогиПоСубконто.КодСчета);
				Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", ТекСтоимостьНУ_ОборотыКт);
				ДобавитьПроводкуНУ();
					
				// Поддержка ПБУ 18
				Если Константа.ПрименяетсяПБУ18.Получить(Параметры.ДатаКонцаПериодаВыгрузки) = Да Тогда
					
					// Постоянные разницы
					Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "ПР");
					Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "ПР");
						
					// Стоимость
					Параметры.ПараметрыАлгоритмов.Установить("СчетДт", ИтогиПоСубконто.Счет);
					Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", ИтогиПоСубконто.КодСчета);
					Параметры.ПараметрыАлгоритмов.Установить("СчетКт", "");
					Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "");
					Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", ТекСтоимостьПР_ОборотыДт);
					ДобавитьПроводкуНУ();
						
					Параметры.ПараметрыАлгоритмов.Установить("СчетДт", "");
					Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "");
					Параметры.ПараметрыАлгоритмов.Установить("СчетКт", ИтогиПоСубконто.Счет);
					Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", ИтогиПоСубконто.КодСчета);
					Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", ТекСтоимостьПР_ОборотыКт);
					ДобавитьПроводкуНУ();
						
					// Временные разницы
					Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "ВР");
					Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "ВР");
						
					// Стоимость
					ТекСтоимостьВР = СтоимостьБУ - ТекСтоимостьНУ - ТекСтоимостьПР;
					ТекСтоимостьВР_ОборотыДт = СтоимостьБУ_ОборотыДт - ТекСтоимостьНУ_ОборотыДт - ТекСтоимостьПР_ОборотыДт;
					ТекСтоимостьВР_ОборотыКт = СтоимостьБУ_ОборотыКт - ТекСтоимостьНУ_ОборотыКт - ТекСтоимостьПР_ОборотыКт;
						
					Параметры.ПараметрыАлгоритмов.Установить("СчетДт", ИтогиПоСубконто.Счет);
					Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", ИтогиПоСубконто.КодСчета);
					Параметры.ПараметрыАлгоритмов.Установить("СчетКт", "");
					Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", "");
					Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", ТекСтоимостьВР_ОборотыДт);
					ДобавитьПроводкуНУ();
						
					Параметры.ПараметрыАлгоритмов.Установить("СчетДт", "");
					Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "");
					Параметры.ПараметрыАлгоритмов.Установить("СчетКт", ИтогиПоСубконто.Счет);
					Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", ИтогиПоСубконто.КодСчета);
					Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", ТекСтоимостьВР_ОборотыКт);
					ДобавитьПроводкуНУ();
				КонецЕсли;
					
				// Выгрузка начальных остатков.
				Если НачМесяца(Параметры.ДатаВводаОстатков) = НУ.НачДата Тогда
					Параметры.ПараметрыАлгоритмов.Установить("ТаблицаПроводок", Проводки);
						
					Параметры.ПараметрыАлгоритмов.Установить("СчетДт", ИтогиПоСубконто.Счет);
					Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", ИтогиПоСубконто.КодСчета);
					Параметры.ПараметрыАлгоритмов.Установить("СчетКт", "");
					Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", "");
							
					Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "НУ");
					Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "НУ");
					Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", ТекСтоимостьНУ);
					ДобавитьПроводкуНУ();
						
					// Поддержка ПБУ 18
					Если Константа.ПрименяетсяПБУ18.Получить(Параметры.ДатаКонцаПериодаВыгрузки) = Да Тогда
						Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "ПР");
						Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "ПР");
						Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", ТекСтоимостьПР);
						ДобавитьПроводкуНУ();
							
						Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "ВР");
						Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "ВР");
						Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", ТекСтоимостьВР);
						ДобавитьПроводкуНУ();
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
		КонецЦикла; // НУ.ВыбратьСубконто()
	КонецЦикла; // НУ.ВыбратьСубконто()

	Параметры.ПараметрыАлгоритмов.Установить("КоличествоСубконто", 3);
	Если НУ.НачДата = НачМесяца(Параметры.ДатаВводаОстатков) Тогда
		ВходящиеДанные = СоздатьОбъект("СписокЗначений");
		ВходящиеДанные.Установить("Налоговый", Проводки);
		ВходящиеДанные.Установить("Счет", СписокСчетовНУ);
		ВходящиеДанные.Установить("Дата", НУ.НачДата-1);
		ПодготовитьТаблицуОстатковНУ(); 
		//ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияБух");
	КонецЕсли;
	
	Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
		ВходящиеДанные = СоздатьОбъект("СписокЗначений");
		ВходящиеДанные.Установить("Налоговый", ПроводкиОбороты);
		ВходящиеДанные.Установить("Счет", СписокСчетовНУ);
		ВходящиеДанные.Установить("Дата", НУ.КонДата);
		ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияБух");
	КонецЕсли;
КонецЦикла;

//******************** Счет 20 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("20"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//***
Параметры.ТаблицаОстатковНУ.УдалитьСтроки();

//******************** Счет 23 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("23"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 25 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("25"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 26 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("26"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 28 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("28"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 29 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("29"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//***
Параметры.ПараметрыАлгоритмов.Установить("КоличествоСубконто", 1);</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>тТовары</Код>
				<Наименование>Товары</Наименование>
				<Порядок>450</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");
//*************************************************************************************************
// Счета учета товаров (Счета 41)
//*************************************************************************************************

Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовНУ", "Н02.02.1");
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовПР", "НПР.41");
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовБУ", "41.1,41.3,41.4,41.5");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоНУ", ВидыСубконто.Номенклатура);
Параметры.ПараметрыАлгоритмов.Установить("ПорядокСубконтоБУ", "1,2,3");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", "");
Параметры.ПараметрыАлгоритмов.Установить("Количественный", 1);
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 1);
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Налоговый"); 
ВыгрузитьОстаткиПоСчетуНУ();

//******************** Счет 41.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("41.1"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 41.3 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("41.3"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 41.4 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("41.4"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 41.5 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("41.5"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//*************************************************************************************************
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовНУ", "Н02.02.2");
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовПР", "НПР.41");
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовБУ", "41.2");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоНУ", ВидыСубконто.Номенклатура);
Параметры.ПараметрыАлгоритмов.Установить("ПорядокСубконтоБУ", "1,2,3");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", "");
Параметры.ПараметрыАлгоритмов.Установить("Количественный", 1);
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 1);
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Налоговый"); 
ВыгрузитьОстаткиПоСчетуНУ();

//******************** Счет 41.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("41.2"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 42 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("42"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//*************************************************************************************************
// Счета учета товаров на комиссии (Счет 004)
//*************************************************************************************************
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СКомитентом");
//******************** Счет 004 ******************** 
Параметры.ТаблицаОстатковНУ.УдалитьСтроки();
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Налоговый"); 
ВыгрузитьИтогиПоСчету004();

Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
ВыгрузитьИтогиПоСчету004();

Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "Прочее");</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>тГотоваяПродукцияИПолуфабрикаты</Код>
				<Наименование>Готовая продукция и полуфабрикаты</Наименование>
				<Порядок>500</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//*************************************************************************************************
// Счета учета выпуска продукции (Счет 40)
//*************************************************************************************************

Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("40"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//*************************************************************************************************
// Счета учета готовой продукции (Счет 43)
//*************************************************************************************************

Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовНУ", "Н02.03");
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовПР", "НПР.43");
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовБУ", "43");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоНУ", ВидыСубконто.Номенклатура);
Параметры.ПараметрыАлгоритмов.Установить("ПорядокСубконтоБУ", "1,2,3");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", "");
Параметры.ПараметрыАлгоритмов.Установить("Количественный", 1);
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 1);
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Налоговый");
ВыгрузитьОстаткиПоСчетуНУ();

//******************** Счет 43 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("43"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//*************************************************************************************************
// Счета учета полуфабрикатов (Счет 21)
//*************************************************************************************************

Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовНУ", "Н02.07");
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовПР", "НПР.21");
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовБУ", "21");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоНУ", ВидыСубконто.Номенклатура);
Параметры.ПараметрыАлгоритмов.Установить("ПорядокСубконтоБУ", "1,2,3");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", "");
Параметры.ПараметрыАлгоритмов.Установить("Количественный", 1);
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 1);
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Налоговый"); 
ВыгрузитьОстаткиПоСчетуНУ();

//******************** Счет 21 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("21"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>тРасходыНаПродажу</Код>
				<Наименование>Расходы на продажу</Наименование>
				<Порядок>550</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//*************************************************************************************************
// Счета учета расзодов на продажу (Счет 44)
//*************************************************************************************************

СписокСчетовНУ = "Н01.07";
СписокСчетовПР = "НПР.44.1";
СписокСчетовБУ = "44.1.1";
ВидСубконтоНУ = "";
Количественный = 0;
ДтКт = 1;

СчН01_07 = СчетПоКоду("Н01.07");
СчНПР_44_1 = СчетПоКоду("НПР.44.1");
Сч44_1_1 = СчетПоКоду("44.1.1");
СубконтоНУ = "ТранспортныеРасходы";

ПроводкиОбороты = Параметры.ТаблицаПроводокОбороты;
Проводки = Параметры.ТаблицаПроводок;
Проводки.УдалитьСтроки();

НУ = СоздатьОбъект("БухгалтерскиеИтоги");
Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	НУ.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков,, СписокСчетовНУ);
	
Иначе
	НУ.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков, Параметры.ДатаКонцаПериодаВыгрузки, СписокСчетовНУ,,, 3, "Месяц",);
КонецЕсли;

БУ = СоздатьОбъект("БухгалтерскиеИтоги");
БУ.ВключатьСубсчета(, -1);
БУ.ИспользоватьСубконто();
Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	БУ.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков,, СписокСчетовБУ+","+СписокСчетовПР);
	
Иначе
	БУ.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков, Параметры.ДатаКонцаПериодаВыгрузки, СписокСчетовБУ+","+СписокСчетовПР,,, 3, "Месяц",);
КонецЕсли;

НУ.ВыбратьПериоды();
Пока НУ.ПолучитьПериод() = 1 Цикл
	
	ПроводкиОбороты.УдалитьСтроки();
	
	СтоимостьНУ = ?(ДтКт = 1, НУ.СНД(1), НУ.СНК(1));
	СтоимостьНУ_ОборотыДт = НУ.ДО(1);
	СтоимостьНУ_ОборотыКт = НУ.КО(1);
			
	СтоимостьБУ = 0;
	СтоимостьБУ_ОборотыДт = 0;
	СтоимостьБУ_ОборотыКт = 0;
	
	СтоимостьПР = 0;
	СтоимостьПР_ОборотыДт = 0;
	СтоимостьПР_ОборотыКт = 0;
	
	Если БУ.ПолучитьПериод(1, НУ.НачДата) = 1 Тогда
		БУ.ВыбратьСубконто(1);
		Пока БУ.ПолучитьСубконто(1) = 1 Цикл
			Если БУ.Субконто(1).ЭтоГруппа() = 1 Тогда
				Продолжить;
				
			ИначеЕсли БУ.Субконто(1).СписыватьИздержкиПропорциональноОстаткуТоваров.Получить(БУ.КонДата) &lt;&gt; 1 Тогда
				Продолжить;
			КонецЕсли;
			
			Если БУ.ПолучитьСчет(, Сч44_1_1) = 1 Тогда
				СтоимостьБУ = СтоимостьБУ + БУ.СНД(1);
				СтоимостьБУ_ОборотыДт = СтоимостьБУ_ОборотыДт + БУ.ДО(1);
				СтоимостьБУ_ОборотыКт = СтоимостьБУ_ОборотыКт + БУ.КО(1);
			КонецЕсли;
			
			Если БУ.ПолучитьСчет(, СчНПР_44_1) = 1 Тогда
				СтоимостьПР = СтоимостьПР + БУ.СНД(1);
				СтоимостьПР_ОборотыДт = СтоимостьПР_ОборотыДт + БУ.ДО(1);
				СтоимостьПР_ОборотыКт = СтоимостьПР_ОборотыКт + БУ.КО(1);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	БУ.ПолучитьПериод(, "");
									
	// Выгрузка оборотов НУ
	Параметры.ПараметрыАлгоритмов.Установить("ТаблицаПроводок", ПроводкиОбороты);
	Параметры.ПараметрыАлгоритмов.Установить("ПорядокСубконтоБУ", "1,2,3");
	
	Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "НУ");
	Параметры.ПараметрыАлгоритмов.Установить("КоличествоДт", 0);
	
	Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт2", "");
	Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт3", "");
					
	Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "НУ");
	Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", "");
	Параметры.ПараметрыАлгоритмов.Установить("КоличествоКт", 0);
	Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт1", "");
	Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт2", "");
	Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт3", "");
					
	// Стоимость
	Параметры.ПараметрыАлгоритмов.Установить("СчетДт", СчН01_07);
	Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "");
	Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт1", СубконтоНУ);
	Параметры.ПараметрыАлгоритмов.Установить("СчетКт", "");
	Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт1", "");
	Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьНУ_ОборотыДт);
	ДобавитьПроводкуНУ();
					
	Параметры.ПараметрыАлгоритмов.Установить("СчетДт", СчН01_07);
	Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "90.07");
	Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт1", "");
	Параметры.ПараметрыАлгоритмов.Установить("СчетКт", СчН01_07);
	Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт1", СубконтоНУ);
	Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьНУ_ОборотыКт);
	ДобавитьПроводкуНУ();
					
	// Поддержка ПБУ 18
	Если Константа.ПрименяетсяПБУ18.Получить(Параметры.ДатаКонцаПериодаВыгрузки) = Да Тогда
		
		// Постоянные разницы
		Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "ПР");
		Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "ПР");
						
		// Стоимость
		Параметры.ПараметрыАлгоритмов.Установить("СчетДт", СчН01_07);
		Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "");
		Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт1", СубконтоНУ);
		Параметры.ПараметрыАлгоритмов.Установить("СчетКт", "");
		Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт1", "");
		Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьПР_ОборотыДт);
		ДобавитьПроводкуНУ();
						
		Параметры.ПараметрыАлгоритмов.Установить("СчетДт", СчН01_07);
		Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "90.07");
		Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт1", "");
		Параметры.ПараметрыАлгоритмов.Установить("СчетКт", СчН01_07);
		Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт1", СубконтоНУ);
		Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьПР_ОборотыКт);
		ДобавитьПроводкуНУ();
						
		// Временные разницы
		Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "ВР");
		Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "ВР");
						
		// Стоимость
		СтоимостьВР = СтоимостьБУ - СтоимостьНУ - СтоимостьПР;
		СтоимостьВР_ОборотыДт = СтоимостьБУ_ОборотыДт - СтоимостьНУ_ОборотыДт - СтоимостьПР_ОборотыДт;
		СтоимостьВР_ОборотыКт = СтоимостьБУ_ОборотыКт - СтоимостьНУ_ОборотыКт - СтоимостьПР_ОборотыКт;
						
		Параметры.ПараметрыАлгоритмов.Установить("СчетДт", СчН01_07);
		Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "");
		Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт1", СубконтоНУ);
		Параметры.ПараметрыАлгоритмов.Установить("СчетКт", "");
		Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт1", "");
		Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьВР_ОборотыДт);
		ДобавитьПроводкуНУ();
						
		Параметры.ПараметрыАлгоритмов.Установить("СчетДт", СчН01_07);
		Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "90.07");
		Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт1", "");
		Параметры.ПараметрыАлгоритмов.Установить("СчетКт", СчН01_07);
		Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт1", СубконтоНУ);
		Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьВР_ОборотыКт);
		ДобавитьПроводкуНУ();
	КонецЕсли;
					
	// Выгрузка начальных остатков.
	Если НачМесяца(Параметры.ДатаВводаОстатков) = НУ.НачДата Тогда
		Параметры.ПараметрыАлгоритмов.Установить("ТаблицаПроводок", Проводки);
						
		Параметры.ПараметрыАлгоритмов.Установить("СчетДт", СчН01_07);
		Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "");
		Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт1", СубконтоНУ);
		Параметры.ПараметрыАлгоритмов.Установить("СчетКт", "");
		Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт1", "");
				
		Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "НУ");
		Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "НУ");
				
		Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьНУ);
		ДобавитьПроводкуНУ();
						
		// Поддержка ПБУ 18
		Если Константа.ПрименяетсяПБУ18.Получить(Параметры.ДатаКонцаПериодаВыгрузки) = Да Тогда
			Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "ПР");
			Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "ПР");
			Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьПР);
			ДобавитьПроводкуНУ();
							
			Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "ВР");
			Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "ВР");
			Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьВР);
			ДобавитьПроводкуНУ();
		КонецЕсли;
			
		ВходящиеДанные = СоздатьОбъект("СписокЗначений");
		ВходящиеДанные.Установить("Налоговый", Проводки);
		ВходящиеДанные.Установить("Счет", СписокСчетовНУ);
		ВходящиеДанные.Установить("Дата", НУ.НачДата-1);
		ПодготовитьТаблицуОстатковНУ(); 
		//ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияБух");
	КонецЕсли;
	
	Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
		ВходящиеДанные = СоздатьОбъект("СписокЗначений");
		ВходящиеДанные.Установить("Налоговый", ПроводкиОбороты);
		ВходящиеДанные.Установить("Счет", СписокСчетовНУ);
		ВходящиеДанные.Установить("Дата", НУ.КонДата);
		ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияБух");
	КонецЕсли;
КонецЦикла;

//******************** Счет 44.1.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("44.1.1"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//***
Параметры.ТаблицаОстатковНУ.УдалитьСтроки();

//******************** Счет 44.1.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("44.1.2"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 44.1.3 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("44.1.3"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 44.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("44.2"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 44.3 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("44.3"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 44.1.2 ********************</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>тТоварыОтгруженные</Код>
				<Наименование>Товары отгруженные</Наименование>
				<Порядок>600</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//********************************************************************
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СКомиссионером");
//*************************************************************************************************
// Счета учета товаров (Счета 45)
//*************************************************************************************************
Параметры.ТаблицаОстатковНУ.УдалитьСтроки();

Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовНУ", "Н02.04.1");
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовПР", "НПР.45");
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовБУ", "45");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоНУ", ВидыСубконто.Номенклатура);
Параметры.ПараметрыАлгоритмов.Установить("ПорядокСубконтоБУ", "3,1,2");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "45.01");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", "");
Параметры.ПараметрыАлгоритмов.Установить("Количественный", 1);
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 1);
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Налоговый");
Параметры.ПараметрыАлгоритмов.Установить("КоличествоСубконто", 3);
ВыгрузитьОстаткиПоСчетуНУ();

Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовНУ", "Н02.04.2");
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовПР", "НПР.45");
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовБУ", "45");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоНУ", ВидыСубконто.Номенклатура);
Параметры.ПараметрыАлгоритмов.Установить("ПорядокСубконтоБУ", "3,1,2");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "45.02");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", "");
Параметры.ПараметрыАлгоритмов.Установить("Количественный", 1);
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 1);
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Налоговый");
Параметры.ПараметрыАлгоритмов.Установить("КоличествоСубконто", 3);
ВыгрузитьОстаткиПоСчетуНУ();

Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовНУ", "Н02.04.3");
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовПР", "НПР.45");
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовБУ", "45");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоНУ", ВидыСубконто.Номенклатура);
Параметры.ПараметрыАлгоритмов.Установить("ПорядокСубконтоБУ", "3,1,2");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "45.03");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", "");
Параметры.ПараметрыАлгоритмов.Установить("Количественный", 1);
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 1);
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Налоговый");
Параметры.ПараметрыАлгоритмов.Установить("КоличествоСубконто", 3);
ВыгрузитьОстаткиПоСчетуНУ();

//******************** Счет 45 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("45"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
Параметры.ПараметрыАлгоритмов.Установить("КоличествоСубконто", 3);
ВыгрузитьОстаткиПоСчету();
Параметры.ПараметрыАлгоритмов.Установить("КоличествоСубконто", 1);

//***
Параметры.ТаблицаОстатковНУ.УдалитьСтроки();

Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПокупателем");
//******************** Счет 46 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("46"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//**************************************************************
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "Прочее");</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>тКассаИБанк</Код>
				<Наименование>Денежные средства</Наименование>
				<Порядок>650</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//*************************************************************************************************
// Счета учета кассовых операций (Счет 50)
//*************************************************************************************************

//******************** Счет 50.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("50.1"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 50.11 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("50.11"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 50.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("50.2"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 50.3 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("50.3"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 50.33 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("50.33"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//*************************************************************************************************
// Счета учета банковских операций (Счета 51, 52, 55, 57)
//*************************************************************************************************

//******************** Счет 51 ********************   
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("51"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 52********************   
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("52"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 55.1 *****************   
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("55.1"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 55.11 ********************   
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("55.11"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 55.2 ********************   
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("55.2"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 55.3 ********************   
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("55.3"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 55.33 ********************   
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("55.33"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();


//******************** Счет 55.4 ********************   
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("55.4"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 55.44 ********************   
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("55.44"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 57.1 ********************   
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("57.1"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 57.11 ********************   
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("57.11"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>тФинансовыеВложения</Код>
				<Наименование>Финансовые вложения</Наименование>
				<Порядок>700</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//*************************************************************************************************
// Счета учета паев и акций (Счета 58)
//*************************************************************************************************
//Паи
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовНУ", "Н02.08");
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовПР", "НПР.58.1");
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовБУ", "58.1.1");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоНУ", ВидыСубконто.Контрагенты);
Параметры.ПараметрыАлгоритмов.Установить("ПорядокСубконтоБУ", "1,2,3");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", "");
Параметры.ПараметрыАлгоритмов.Установить("Количественный", 1);
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 1);
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Налоговый");
ВыгрузитьОстаткиПоСчетуНУ();

//******************** Счет 58.1.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("58.1.1"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//*************************************************************************************************
//Акции
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовНУ", "Н02.05");
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовПР", "НПР.58.2");
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовБУ", "58.1.2,58.2");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоНУ", ВидыСубконто.ЦенныеБумаги);
Параметры.ПараметрыАлгоритмов.Установить("ПорядокСубконтоБУ", "2,1,3");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", "");
Параметры.ПараметрыАлгоритмов.Установить("Количественный", 1);
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 1);
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Налоговый");
Параметры.ПараметрыАлгоритмов.Установить("КоличествоСубконто", 2);
ВыгрузитьОстаткиПоСчетуНУ();

//******************** Счет 58.1.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("58.1.2"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
Параметры.ПараметрыАлгоритмов.Установить("КоличествоСубконто", 2);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 58.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("58.2"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
Параметры.ПараметрыАлгоритмов.Установить("КоличествоСубконто", 2);
ВыгрузитьОстаткиПоСчету();
Параметры.ПараметрыАлгоритмов.Установить("КоличествоСубконто", 1);

//*************************************************************************************************
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовНУ", "Н02.06");
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовПР", "НПР.58.5");
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовБУ", "58.5");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоНУ", ВидыСубконто.Договоры);
Параметры.ПараметрыАлгоритмов.Установить("ПорядокСубконтоБУ", "2,1,3");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", "");
Параметры.ПараметрыАлгоритмов.Установить("Количественный", 1);
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 1);
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Налоговый");
ВыгрузитьОстаткиПоСчетуНУ();

//******************** Счет 58.5 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("58.5"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//***
Параметры.ТаблицаОстатковНУ.УдалитьСтроки();
//******************** Счет 58.3 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("58.3"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 58.4 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("58.4"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 59 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("59"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>тРасчетыСПоставщиками</Код>
				<Наименование>Расчеты с поставщиками и подрядчиками</Наименование>
				<Порядок>750</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//***************************************************************
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");
//*************************************************************************************************
// Счет учета расчетов с поставщиками (Счет 60)
//*************************************************************************************************

//******************** Счет 60.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("60.1"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 60.11******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("60.11"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 60.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("60.2"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 60.22 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("60.22"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("ВАЛ.60"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 60.3 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("60.3"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 60.6 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("60.6"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

Сч60_6 = СчетПоКоду("60.6");
СчУЕ_60 = СчетПоКоду("УЕ.60");                                       	

Если СчУЕ_60.Выбран() = 1 Тогда
	Проводки = Параметры.ТаблицаПроводок;
	Проводки.УдалитьСтроки();
	
	ПроводкиНУ = СоздатьОбъект("ТаблицаЗначений");
	Проводки.Выгрузить(ПроводкиНУ);
	
	БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
	БухИт.Опции(1,0);
	БухИт.ИспользоватьСубконто(ВидыСубконто.Контрагенты);
	БухИт.ИспользоватьСубконто(ВидыСубконто.Договоры);
	БухИт.ВыполнитьЗапрос(, Параметры.ДатаКонцаПериодаВыгрузки, "60.6,УЕ.60");
	
	БухИт.ВыбратьСубконто(1);
	Пока БухИт.ПолучитьСубконто(1) = 1 Цикл
		БухИт.ВыбратьСубконто(2);
		Пока БухИт.ПолучитьСубконто(2) = 1 Цикл
			БухИт.ВыбратьВалюты();
			Пока БухИт.ПолучитьВалюту() = 1 Цикл
				Если БухИт.ПолучитьСчет(, Сч60_6) = 1 Тогда
					СуммаВал = БухИт.СКК(2);
					СуммаРуб = БухИт.СКК(1);
					
					Если БухИт.ПолучитьСчет(, СчУЕ_60) = 1 Тогда
						СуммаВалБезПереоценки = БухИт.СКК(2);
						
						Если СуммаВалБезПереоценки = СуммаВал Тогда
							СуммаРубБезПереоценки = БухИт.СКК(1);
							
						Иначе
							СуммаРубБезПереоценки = ?(СуммаВалБезПереоценки &lt;&gt; 0, СуммаВал * БухИт.СКК(1) / СуммаВалБезПереоценки, 0);
						КонецЕсли;
						
						// Бухгалтерский учет
						Проводки.НоваяСтрока();
						Проводки.СчетКт = СчУЕ_60;
						Проводки.ВалютаКт = БухИт.Валюта;
														
						Проводки.СубконтоКт = СоздатьОбъект("ТаблицаЗначений");
						Проводки.СубконтоКт.НоваяКолонка("Ключ");
						Проводки.СубконтоКт.НоваяКолонка("Значение");
									
						Проводки.СубконтоКт.НоваяСтрока();
						Проводки.СубконтоКт.Ключ = ВидыСубконто.Контрагенты;
						Проводки.СубконтоКт.Значение = БухИт.Субконто(1);
								
						Проводки.СубконтоКт.НоваяСтрока();
						Проводки.СубконтоКт.Ключ = ВидыСубконто.Договоры;
						Проводки.СубконтоКт.Значение = БухИт.Субконто(2);
						
						Проводки.СубконтоКт.НоваяСтрока();
						Проводки.СубконтоКт.Ключ = ПолучитьПустоеЗначение();
						Проводки.СубконтоКт.Значение = БухИт.Субконто(2);
								
						Проводки.ВалютнаяСуммаКт = СуммаВал;
						Проводки.Сумма = СуммаРубБезПереоценки;
						
						// Налоговый учет
						Если (СуммаРуб - СуммаРубБезПереоценки) &lt;&gt; 0 Тогда
							ПроводкиНУ.НоваяСтрока();
							ПроводкиНУ.СчетКт = СчУЕ_60;
							ПроводкиНУ.ВидУчетаКт = "ВР";
															
							ПроводкиНУ.СубконтоКт = СоздатьОбъект("ТаблицаЗначений");
							ПроводкиНУ.СубконтоКт.НоваяКолонка("Ключ");
							ПроводкиНУ.СубконтоКт.НоваяКолонка("Значение");
										
							ПроводкиНУ.СубконтоКт.НоваяСтрока();
							ПроводкиНУ.СубконтоКт.Ключ = ВидыСубконто.Контрагенты;
							ПроводкиНУ.СубконтоКт.Значение = БухИт.Субконто(1);
									
							ПроводкиНУ.СубконтоКт.НоваяСтрока();
							ПроводкиНУ.СубконтоКт.Ключ = ВидыСубконто.Договоры;
							ПроводкиНУ.СубконтоКт.Значение = БухИт.Субконто(2);
							
							ПроводкиНУ.СубконтоКт.НоваяСтрока();
							ПроводкиНУ.СубконтоКт.Ключ = ПолучитьПустоеЗначение();
							ПроводкиНУ.СубконтоКт.Значение = БухИт.Субконто(2);
									
							ПроводкиНУ.Сумма = СуммаРуб - СуммаРубБезПереоценки;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
	ВходящиеДанные.Установить("Хозрасчетный", Проводки);
	ВходящиеДанные.Установить("Счет", "УЕ.60 (задолженность по приобретению в у.е.)");
	ВходящиеДанные.Установить("Дата", Параметры.ДатаКонцаПериодаВыгрузки);
	//ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияБух");
	
	ВходящиеДанные.Установить("Хозрасчетный", "");
	ВходящиеДанные.Установить("Налоговый", ПроводкиНУ);
	//ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияБух");
КонецЕсли;

//******************** Счет 60.7 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("60.7"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//***************************************************************
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "Прочее");</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>тРасчетыСПокупателями</Код>
				<Наименование>Расчеты с покупателями и заказчиками</Наименование>
				<Порядок>800</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//***************************************************************
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПокупателем");
//*************************************************************************************************
// Счет учета расчетов с покупателями (Счет 62)
//*************************************************************************************************

//******************** Счет 62.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("62.1"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 62.11 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("62.11"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 62.2******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("62.2"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 62.22 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("62.22"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("ВАЛ.22"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 62.3 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("62.3"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 62.4 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("62.4"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 62.44 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("62.44"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 62.6 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("62.6"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

Сч62_6 = СчетПоКоду("62.6");
СчУЕ_62 = СчетПоКоду("УЕ.62");

Если СчУЕ_62.Выбран() = 1 Тогда
	Проводки = Параметры.ТаблицаПроводок;
	Проводки.УдалитьСтроки();
	
	ПроводкиНУ = СоздатьОбъект("ТаблицаЗначений");
	Проводки.Выгрузить(ПроводкиНУ);
	
	БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
	БухИт.Опции(1,0);
	БухИт.ИспользоватьСубконто(ВидыСубконто.Контрагенты);
	БухИт.ИспользоватьСубконто(ВидыСубконто.Договоры);
	БухИт.ВыполнитьЗапрос(, Параметры.ДатаКонцаПериодаВыгрузки, "62.6,УЕ.62");
	
	БухИт.ВыбратьСубконто(1);
	Пока БухИт.ПолучитьСубконто(1) = 1 Цикл
		БухИт.ВыбратьСубконто(2);
		Пока БухИт.ПолучитьСубконто(2) = 1 Цикл
			БухИт.ВыбратьВалюты();
			Пока БухИт.ПолучитьВалюту() = 1 Цикл
				Если БухИт.ПолучитьСчет(, Сч62_6) = 1 Тогда
					СуммаВал = БухИт.СКД(2);
					СуммаРуб = БухИт.СКД(1);
					
					Если БухИт.ПолучитьСчет(, СчУЕ_62) = 1 Тогда
						СуммаВалБезПереоценки = БухИт.СКД(2);
						
						Если СуммаВалБезПереоценки = СуммаВал Тогда
							СуммаРубБезПереоценки = БухИт.СКД(1);
							
						Иначе
							СуммаРубБезПереоценки = ?(СуммаВалБезПереоценки &lt;&gt; 0, СуммаВал * БухИт.СКД(1) / СуммаВалБезПереоценки, 0);
						КонецЕсли;
						
						// Бухгалтерский учет
						Проводки.НоваяСтрока();
						Проводки.СчетДт = СчУЕ_62;
						Проводки.ВалютаДт = БухИт.Валюта;
														
						Проводки.СубконтоДт = СоздатьОбъект("ТаблицаЗначений");
						Проводки.СубконтоДт.НоваяКолонка("Ключ");
						Проводки.СубконтоДт.НоваяКолонка("Значение");
									
						Проводки.СубконтоДт.НоваяСтрока();
						Проводки.СубконтоДт.Ключ = ВидыСубконто.Контрагенты;
						Проводки.СубконтоДт.Значение = БухИт.Субконто(1);
								
						Проводки.СубконтоДт.НоваяСтрока();
						Проводки.СубконтоДт.Ключ = ВидыСубконто.Договоры;
						Проводки.СубконтоДт.Значение = БухИт.Субконто(2);
						
						Проводки.СубконтоДт.НоваяСтрока();
						Проводки.СубконтоДт.Ключ = ПолучитьПустоеЗначение();
						Проводки.СубконтоДт.Значение = БухИт.Субконто(2);
								
						Проводки.ВалютнаяСуммаДт = СуммаВал;
						Проводки.Сумма = СуммаРубБезПереоценки;
						
						// Налоговый учет
						Если (СуммаРуб - СуммаРубБезПереоценки) &lt;&gt; 0 Тогда
							ПроводкиНУ.НоваяСтрока();
							ПроводкиНУ.СчетДт = СчУЕ_62;
							ПроводкиНУ.ВидУчетаДт = "ВР";
															
							ПроводкиНУ.СубконтоДт = СоздатьОбъект("ТаблицаЗначений");
							ПроводкиНУ.СубконтоДт.НоваяКолонка("Ключ");
							ПроводкиНУ.СубконтоДт.НоваяКолонка("Значение");
										
							ПроводкиНУ.СубконтоДт.НоваяСтрока();
							ПроводкиНУ.СубконтоДт.Ключ = ВидыСубконто.Контрагенты;
							ПроводкиНУ.СубконтоДт.Значение = БухИт.Субконто(1);
									
							ПроводкиНУ.СубконтоДт.НоваяСтрока();
							ПроводкиНУ.СубконтоДт.Ключ = ВидыСубконто.Договоры;
							ПроводкиНУ.СубконтоДт.Значение = БухИт.Субконто(2);
							
							ПроводкиНУ.СубконтоДт.НоваяСтрока();
							ПроводкиНУ.СубконтоДт.Ключ = ПолучитьПустоеЗначение();
							ПроводкиНУ.СубконтоДт.Значение = БухИт.Субконто(2);
									
							ПроводкиНУ.Сумма = СуммаРуб - СуммаРубБезПереоценки;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
	ВходящиеДанные.Установить("Хозрасчетный", Проводки);
	ВходящиеДанные.Установить("Счет", "УЕ.62 (задолженность по реализации в у.е.)");
	ВходящиеДанные.Установить("Дата", Параметры.ДатаКонцаПериодаВыгрузки);
	//ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияБух");
	
	ВходящиеДанные.Установить("Хозрасчетный", "");
	ВходящиеДанные.Установить("Налоговый", ПроводкиНУ);
	//ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияБух");
КонецЕсли;

//******************** Счет 62.7 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("62.7"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 62.8 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("62.8"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//***************************************************************
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "Прочее");</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>тРасчетыПрочие</Код>
				<Наименование>Прочие расчеты с контрагентами</Наименование>
				<Порядок>850</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//*************************************************************************************************
// Счета учета расчетов по кредитам и займам (Счет 63, 66, 67)
//*************************************************************************************************

//******************** Счет 63 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("63"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 66.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("66.1"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 66.11 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("66.11"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 66.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("66.2"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
ВыгрузитьОстаткиПоСчету();

//******************** Счет 66.22 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("66.22"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
ВыгрузитьОстаткиПоСчету();

//******************** Счет 66.3 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("66.3"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
ВыгрузитьОстаткиПоСчету();

//******************** Счет 66.33 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("66.33"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 66.4 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("66.4"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 66.44 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("66.44"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 66.5 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("66.5"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 66.55 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("66.6"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 67.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("67.1"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 67.11 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("67.11"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 67.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("67.2"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 67.22 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("67.22"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 67.3 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("67.3"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 67.33 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("67.33"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 67.4 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("67.4"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 67.44 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("67.44"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 67.5 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("67.5"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 67.6 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("67.6"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//*************************************************************************************************
// Счета учета расчетов по внутрифирменным расчетам (Счет 79)
//*************************************************************************************************

//******************** Счет 79.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("79.1")); 
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 79.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("79.2"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 79.3 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("79.3")); 
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>тРасчетыПоНалогамИСборам</Код>
				<Наименование>Налоги и сборы</Наименование>
				<Порядок>900</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//*************************************************************************************************
// Счета учета расчетов по налогам и сборам (Счета 68, 69)
//*************************************************************************************************

//******************** Счет 68.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("68.1"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 68.10 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("68.10"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 68.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("68.2")); 
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 68.3 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("68.3")); 
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 68.4.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("68.4.1")); 
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 68.4.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("68.4.2"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 68.7 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("68.7"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 68.8 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("68.8")); 
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 69.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("69.1")); 
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 69.11 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("69.11"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 69.12 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("69.12"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 69.2.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("69.2.1"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 69.2.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("69.2.2"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 69.2.3 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("69.2.3")); 
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 69.3.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("69.3.1"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 69.3.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("69.3.2"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 69.21.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("69.21.1"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 69.21.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("69.21.2"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 69.21.3 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("69.21.3"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 69.21.4 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("69.21.4"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 69.21.5 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("69.21.5"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>тРасчетыСПерсоналом</Код>
				<Наименование>Расчеты с персоналом</Наименование>
				<Порядок>950</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//*************************************************************************************************
// Счета учета заработной платы и расчетов с персоналом (Счета 70, 73)
//*************************************************************************************************

//******************** Счет 70 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("70"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	ВыгрузитьОстаткиПоСчетуНаКонецПериода();
КонецЕсли;

//******************** Счет 76.4 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("76.4")); 
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	ВыгрузитьОстаткиПоСчетуНаКонецПериода();
КонецЕсли;

//******************** Счет 73.1 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("73.1")); 
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 73.2 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("73.2"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 73.3 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("73.3")); 
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

////******************** Счет Н14.01 и Н14.02 ******************* 
//Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовНУ", "Н14.01");
//Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоНУ", ВидыСубконто.Сотрудники);
//Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 2);
//ВыгрузитьОборотыПоСчетуНУ();
//Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовНУ", "Н14.02");
//ВыгрузитьОборотыПоСчетуНУ();</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>тРасчетыСПодотчетнымиЛицами</Код>
				<Наименование>Расчеты с подотчетными лицами</Наименование>
				<Порядок>1000</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//*************************************************************************************************
// Счета учета расчетов с подотчетными лицами (Счет 71)
//*************************************************************************************************

//******************** Счет 71.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("71.1")); 
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 71.11 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("71.11"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>тРасчетыСУчредителями</Код>
				<Наименование>Расчеты с учредителями</Наименование>
				<Порядок>1050</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//*************************************************************************************************
// Счета учета расчетов с учредителями (Счет 75)
//*************************************************************************************************

//******************** Счет 75.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("75.1")); 
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 75.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("75.2"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 75.3 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("75.3"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>тРасчетыСПрочимиДебиторамиИКредиторами</Код>
				<Наименование>Расчеты с прочими дебиторами и кредиторами</Наименование>
				<Порядок>1100</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//*************************************************************************************************
// Счета учета расчетов с прочими дебиторами и кредиторами (Счет 76)
//*************************************************************************************************

//******************** Счет 76.1.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("76.1.1"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 76.1.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("76.1.2"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 76.1.3 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("76.1.3")); 
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 76.1.4 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("76.1.4")); 
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 76.11 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("76.11")); 
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 76.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("76.2"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 76.22 ******************** 
 Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("76.22"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 76.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("76.3")); 
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 76.5 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("76.5"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 76.55 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("76.55")); 
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 76.6 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("76.6")); 
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

Сч76_6 = СчетПоКоду("76.6");
СчУЕ_60 = СчетПоКоду("УЕ.60");
СчУЕ_62 = СчетПоКоду("УЕ.62");

Если СчУЕ_62.Выбран() = 1 Тогда
	Проводки = Параметры.ТаблицаПроводок;
	Проводки.УдалитьСтроки();
	
	ПроводкиНУ = СоздатьОбъект("ТаблицаЗначений");
	Проводки.Выгрузить(ПроводкиНУ);
	
	БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
	БухИт.Опции(1,0);
	БухИт.ИспользоватьСубконто(ВидыСубконто.Контрагенты);
	БухИт.ИспользоватьСубконто(ВидыСубконто.Договоры);
	БухИт.ВыполнитьЗапрос(, Параметры.ДатаКонцаПериодаВыгрузки, "76.6,УЕ.62");
	
	БухИт.ВыбратьСубконто(1);
	Пока БухИт.ПолучитьСубконто(1) = 1 Цикл
		БухИт.ВыбратьСубконто(2);
		Пока БухИт.ПолучитьСубконто(2) = 1 Цикл
			БухИт.ВыбратьВалюты();
			Пока БухИт.ПолучитьВалюту() = 1 Цикл
				Если БухИт.ПолучитьСчет(, Сч76_6) = 1 Тогда
					СуммаВал = БухИт.СКД(2);
					СуммаРуб = БухИт.СКД(1);
					
					Если (БухИт.ПолучитьСчет(, СчУЕ_62) = 1) и (СуммаРуб &lt;&gt; 0) Тогда
						СуммаВалБезПереоценки = БухИт.СКД(2);
						
						Если СуммаВалБезПереоценки = СуммаВал Тогда
							СуммаРубБезПереоценки = БухИт.СКД(1);
							
						Иначе
							СуммаРубБезПереоценки = ?(СуммаВалБезПереоценки &lt;&gt; 0, СуммаВал * БухИт.СКД(1) / СуммаВалБезПереоценки, 0);
						КонецЕсли;
						
						// Бухгалтерский учет
						Проводки.НоваяСтрока();
						Проводки.СчетДт = СчУЕ_62;
						Проводки.ВалютаДт = БухИт.Валюта;
														
						Проводки.СубконтоДт = СоздатьОбъект("ТаблицаЗначений");
						Проводки.СубконтоДт.НоваяКолонка("Ключ");
						Проводки.СубконтоДт.НоваяКолонка("Значение");
									
						Проводки.СубконтоДт.НоваяСтрока();
						Проводки.СубконтоДт.Ключ = ВидыСубконто.Контрагенты;
						Проводки.СубконтоДт.Значение = БухИт.Субконто(1);
								
						Проводки.СубконтоДт.НоваяСтрока();
						Проводки.СубконтоДт.Ключ = ВидыСубконто.Договоры;
						Проводки.СубконтоДт.Значение = БухИт.Субконто(2);
						
						Проводки.СубконтоДт.НоваяСтрока();
						Проводки.СубконтоДт.Ключ = ПолучитьПустоеЗначение();
						Проводки.СубконтоДт.Значение = БухИт.Субконто(2);
								
						Проводки.ВалютнаяСуммаДт = СуммаВал;
						Проводки.Сумма = СуммаРубБезПереоценки;
						
						// Налоговый учет
						Если (СуммаРуб - СуммаРубБезПереоценки) &lt;&gt; 0 Тогда
							ПроводкиНУ.НоваяСтрока();
							ПроводкиНУ.СчетДт = СчУЕ_62;
							ПроводкиНУ.ВидУчетаДт = "ВР";
															
							ПроводкиНУ.СубконтоДт = СоздатьОбъект("ТаблицаЗначений");
							ПроводкиНУ.СубконтоДт.НоваяКолонка("Ключ");
							ПроводкиНУ.СубконтоДт.НоваяКолонка("Значение");
										
							ПроводкиНУ.СубконтоДт.НоваяСтрока();
							ПроводкиНУ.СубконтоДт.Ключ = ВидыСубконто.Контрагенты;
							ПроводкиНУ.СубконтоДт.Значение = БухИт.Субконто(1);
									
							ПроводкиНУ.СубконтоДт.НоваяСтрока();
							ПроводкиНУ.СубконтоДт.Ключ = ВидыСубконто.Договоры;
							ПроводкиНУ.СубконтоДт.Значение = БухИт.Субконто(2);
							
							ПроводкиНУ.СубконтоДт.НоваяСтрока();
							ПроводкиНУ.СубконтоДт.Ключ = ПолучитьПустоеЗначение();
							ПроводкиНУ.СубконтоДт.Значение = БухИт.Субконто(2);
									
							ПроводкиНУ.Сумма = СуммаРуб - СуммаРубБезПереоценки;
						КонецЕсли;
					КонецЕсли;
					
					СуммаВал = БухИт.СКК(2);
					СуммаРуб = БухИт.СКК(1);
					
					Если (БухИт.ПолучитьСчет(, СчУЕ_60) = 1) и (СуммаРуб &lt;&gt; 0) Тогда
						СуммаВалБезПереоценки = БухИт.СКК(2);
						
						Если СуммаВалБезПереоценки = СуммаВал Тогда
							СуммаРубБезПереоценки = БухИт.СКК(1);
							
						Иначе
							СуммаРубБезПереоценки = ?(СуммаВалБезПереоценки &lt;&gt; 0, СуммаВал * БухИт.СКК(1) / СуммаВалБезПереоценки, 0);
						КонецЕсли;
						
						// Бухгалтерский учет
						Проводки.НоваяСтрока();
						Проводки.СчетКт = СчУЕ_60;
						Проводки.ВалютаКт = БухИт.Валюта;
														
						Проводки.СубконтоКт = СоздатьОбъект("ТаблицаЗначений");
						Проводки.СубконтоКт.НоваяКолонка("Ключ");
						Проводки.СубконтоКт.НоваяКолонка("Значение");
									
						Проводки.СубконтоКт.НоваяСтрока();
						Проводки.СубконтоКт.Ключ = ВидыСубконто.Контрагенты;
						Проводки.СубконтоКт.Значение = БухИт.Субконто(1);
								
						Проводки.СубконтоКт.НоваяСтрока();
						Проводки.СубконтоКт.Ключ = ВидыСубконто.Договоры;
						Проводки.СубконтоКт.Значение = БухИт.Субконто(2);
						
						Проводки.СубконтоКт.НоваяСтрока();
						Проводки.СубконтоКт.Ключ = ПолучитьПустоеЗначение();
						Проводки.СубконтоКт.Значение = БухИт.Субконто(2);
								
						Проводки.ВалютнаяСуммаКт = СуммаВал;
						Проводки.Сумма = СуммаРубБезПереоценки;
						
						// Налоговый учет
						Если (СуммаРуб - СуммаРубБезПереоценки) &lt;&gt; 0 Тогда
							ПроводкиНУ.НоваяСтрока();
							ПроводкиНУ.СчетКт = СчУЕ_60;
							ПроводкиНУ.ВидУчетаКт = "ВР";
															
							ПроводкиНУ.СубконтоКт = СоздатьОбъект("ТаблицаЗначений");
							ПроводкиНУ.СубконтоКт.НоваяКолонка("Ключ");
							ПроводкиНУ.СубконтоКт.НоваяКолонка("Значение");
										
							ПроводкиНУ.СубконтоКт.НоваяСтрока();
							ПроводкиНУ.СубконтоКт.Ключ = ВидыСубконто.Контрагенты;
							ПроводкиНУ.СубконтоКт.Значение = БухИт.Субконто(1);
									
							ПроводкиНУ.СубконтоКт.НоваяСтрока();
							ПроводкиНУ.СубконтоКт.Ключ = ВидыСубконто.Договоры;
							ПроводкиНУ.СубконтоКт.Значение = БухИт.Субконто(2);
							
							ПроводкиНУ.СубконтоКт.НоваяСтрока();
							ПроводкиНУ.СубконтоКт.Ключ = ПолучитьПустоеЗначение();
							ПроводкиНУ.СубконтоКт.Значение = БухИт.Субконто(2);
									
							ПроводкиНУ.Сумма = СуммаРуб - СуммаРубБезПереоценки;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
	ВходящиеДанные.Установить("Хозрасчетный", Проводки);
	ВходящиеДанные.Установить("Счет", "УЕ (задолженность по приобретению и реализации в у.е.)");
	ВходящиеДанные.Установить("Дата", Параметры.ДатаКонцаПериодаВыгрузки);
	//ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияБух");
	
	ВходящиеДанные.Установить("Хозрасчетный", "");
	ВходящиеДанные.Установить("Налоговый", ПроводкиНУ);
	//ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияБух");
КонецЕсли;

//******************** Счет 76.ЗП ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("76.ЗП")); 
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>тДанныеПоНДСпоАвансам</Код>
				<Наименование>НДС по авансам</Наименование>
				<Порядок>1150</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//НДС по полученным авансам
Если Параметры.ДатаКонцаПериодаВыгрузки &gt; Параметры.ДатаВводаОстатков Тогда
	Параметры.ПараметрыАлгоритмов.Установить("НДСДатаВыгрузки", Параметры.ДатаВводаОстатков-1);
	ДанныеПоНДСпоАвансамПолученным();
	Параметры.ПараметрыАлгоритмов.Установить("НДСДатаВыгрузки", Параметры.ДатаКонцаПериодаВыгрузки);
	ДанныеПоНДСпоАвансамПолученным();
Иначе
	Параметры.ПараметрыАлгоритмов.Установить("НДСДатаВыгрузки", Параметры.ДатаВводаОстатков-1);
	ДанныеПоНДСпоАвансамПолученным();
КонецЕсли;

//НДС по выданным авансам
Если Параметры.ДатаКонцаПериодаВыгрузки &gt; Параметры.ДатаВводаОстатков Тогда
	Параметры.ПараметрыАлгоритмов.Установить("НДСДатаВыгрузки", Параметры.ДатаВводаОстатков-1);
	ДанныеПоНДСпоАвансамВыданным();
	Параметры.ПараметрыАлгоритмов.Установить("НДСДатаВыгрузки", Параметры.ДатаКонцаПериодаВыгрузки);
	ДанныеПоНДСпоАвансамВыданным();
Иначе
	Параметры.ПараметрыАлгоритмов.Установить("НДСДатаВыгрузки", Параметры.ДатаВводаОстатков-1);
	ДанныеПоНДСпоАвансамВыданным();
КонецЕсли;

//*************************************************************************************************
// Счета учета НДС с авансов
//*************************************************************************************************

//******************** Счет 76.АВ ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("76.АВ")); 
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 76.ВА ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("76.ВА")); 
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>тКапитал</Код>
				<Наименование>Капитал и резервы</Наименование>
				<Порядок>1200</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//*************************************************************************************************
// Счета учета капитала и резервов (Счета 80, 81, 82, 83, 84, 86)
//*************************************************************************************************

//******************** Счет 80 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("80"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 81******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("81"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 82.1****************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("82.1")); 
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 82.2****************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("82.2")); 
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 83.1 ***************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("83.1"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 83.2****************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("83.2")); 
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 83.3****************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("83.3"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 84.1****************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("84.1")); 
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 84.2****************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("84.2")); 
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 84.3****************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("84.3"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 84.4***************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("84.4"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 86***************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("86"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>тРБП</Код>
				<Наименование>Расходы будущих периодов</Наименование>
				<Порядок>1250</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//*************************************************************************************************
// Счета учета РБП (Счет 97)
//*************************************************************************************************
Параметры.ПараметрыАлгоритмов.Установить("КоличествоСубконто", 1);
Параметры.ТаблицаОстатковНУ.НоваяКолонка("СчетУчетаНУ");
////******************** Счета НУ по РБП ******************** 
//Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовНУ", "Н04.03");
//Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовПР", "НПР.97");
//Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовБУ", "97");
//Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоНУ", ВидыСубконто.РасходыБудущихПериодов);
//Параметры.ПараметрыАлгоритмов.Установить("ПорядокСубконтоБУ", "1,2,3");
//Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "97.21");
//Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", "");
//Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Налоговый");
//Параметры.ПараметрыАлгоритмов.Установить("Количественный", 0);
//Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 1);
//ВыгрузитьОстаткиПоСчетуНУ();

Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовНУ", "Н04.05");
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовПР", "НПР.97");
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовБУ", "97");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоНУ", ВидыСубконто.РасходыБудущихПериодов);
Параметры.ПараметрыАлгоритмов.Установить("ПорядокСубконтоБУ", "1,2,3");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "97.02");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", "");
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Налоговый");
Параметры.ПараметрыАлгоритмов.Установить("Количественный", 0);
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 1);
ВыгрузитьОстаткиПоСчетуНУ();

Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовНУ", "Н04.06");
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовПР", "НПР.97");
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовБУ", "97");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоНУ", ВидыСубконто.РасходыБудущихПериодов);
Параметры.ПараметрыАлгоритмов.Установить("ПорядокСубконтоБУ", "1,2,3");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "97.02");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", "");
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Налоговый");
Параметры.ПараметрыАлгоритмов.Установить("Количественный", 0);
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 1);
ВыгрузитьОстаткиПоСчетуНУ();

Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовНУ", "Н04.07");
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовПР", "НПР.97");
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовБУ", "97");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоНУ", ВидыСубконто.РасходыБудущихПериодов);
Параметры.ПараметрыАлгоритмов.Установить("ПорядокСубконтоБУ", "1,2,3");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "97.02");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", "");
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Налоговый");
Параметры.ПараметрыАлгоритмов.Установить("Количественный", 0);
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 1);
ВыгрузитьОстаткиПоСчетуНУ();

Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовНУ", "Н04.02");
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовПР", "НПР.97");
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовБУ", "97");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоНУ", ВидыСубконто.РасходыБудущихПериодов);
Параметры.ПараметрыАлгоритмов.Установить("ПорядокСубконтоБУ", "1,2,3");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "97.03");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", "");
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Налоговый");
Параметры.ПараметрыАлгоритмов.Установить("Количественный", 0);
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 1);
ВыгрузитьОстаткиПоСчетуНУ();

Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовНУ", "Н04.04");
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовПР", "НПР.97");
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовБУ", "97");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоНУ", ВидыСубконто.РасходыБудущихПериодов);
Параметры.ПараметрыАлгоритмов.Установить("ПорядокСубконтоБУ", "1,2,3");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "97.21");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", "");
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Налоговый");
Параметры.ПараметрыАлгоритмов.Установить("Количественный", 0);
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 1);
ВыгрузитьОстаткиПоСчетуНУ();

Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовНУ", "Н04.08");
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовПР", "НПР.97");
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовБУ", "97");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоНУ", ВидыСубконто.РасходыБудущихПериодов);
Параметры.ПараметрыАлгоритмов.Установить("ПорядокСубконтоБУ", "1,2,3");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "97.21");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", "");
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Налоговый");
Параметры.ПараметрыАлгоритмов.Установить("Количественный", 0);
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 1);
ВыгрузитьОстаткиПоСчетуНУ();

Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовНУ", "Н04.09");
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовПР", "НПР.97");
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовБУ", "97");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоНУ", ВидыСубконто.РасходыБудущихПериодов);
Параметры.ПараметрыАлгоритмов.Установить("ПорядокСубконтоБУ", "1,2,3");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "97.21");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", "");
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Налоговый");
Параметры.ПараметрыАлгоритмов.Установить("Количественный", 0);
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 1);
ВыгрузитьОстаткиПоСчетуНУ();

//****************
Параметры.ПараметрыАлгоритмов.Установить("ПорядокСубконтоБУ", "1,2,3");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "97.01");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", "97.01");
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Налоговый");
Параметры.ПараметрыАлгоритмов.Установить("Количественный", 0);
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 1);

СписокСчетовНУ = "Н04.10";

ПроводкиОбороты = Параметры.ТаблицаПроводокОбороты;
Проводки = Параметры.ТаблицаПроводок;
Проводки.УдалитьСтроки();

НУ = СоздатьОбъект("БухгалтерскиеИтоги");
НУ.ИспользоватьСубконто(ВидыСубконто.РасходыБудущихПериодов);
Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	НУ.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков,, СписокСчетовНУ);
	
Иначе
	НУ.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков, Параметры.ДатаКонцаПериодаВыгрузки, СписокСчетовНУ,,, 3, "Месяц",);
КонецЕсли;

НУ.ВыбратьПериоды();
Пока НУ.ПолучитьПериод() = 1 Цикл
	
	ПроводкиОбороты.УдалитьСтроки();
	
	НУ.ВыбратьСубконто(1);
	Пока НУ.ПолучитьСубконто(1) = 1 Цикл
		Если НУ.Субконто(1).ЭтоГруппа() = 1 Тогда
			Продолжить;
		КонецЕсли;
			
		СтоимостьНУ = НУ.СНД(1);
		СтоимостьНУ_ОборотыДт = НУ.ДО(1);
		СтоимостьНУ_ОборотыКт = НУ.КО(1);
			
		// Выгрузка оборотов НУ
		Параметры.ПараметрыАлгоритмов.Установить("ТаблицаПроводок", ПроводкиОбороты);
					
		Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "НУ");
		Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "97.01");
		Параметры.ПараметрыАлгоритмов.Установить("КоличествоДт", 0);
		Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт1", НУ.Субконто(1));
		Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт2", "");
		Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт3", "");
					
		Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "НУ");
		Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", "97.01");
		Параметры.ПараметрыАлгоритмов.Установить("КоличествоКт", 0);
		Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт1", НУ.Субконто(1));
		Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт2", "");
		Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт3", "");
					
		// Стоимость
		Параметры.ПараметрыАлгоритмов.Установить("СчетДт", НУ.Счет);
		Параметры.ПараметрыАлгоритмов.Установить("СчетКт", "");
		Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьНУ_ОборотыДт);
		ДобавитьПроводкуНУ();
					
		Параметры.ПараметрыАлгоритмов.Установить("СчетДт", "");
		Параметры.ПараметрыАлгоритмов.Установить("СчетКт", НУ.Счет);
		Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьНУ_ОборотыКт);
		ДобавитьПроводкуНУ();
					
		// Выгрузка начальных остатков.
		Если НачМесяца(Параметры.ДатаВводаОстатков) = НУ.НачДата Тогда
			Параметры.ПараметрыАлгоритмов.Установить("ТаблицаПроводок", Проводки);
			Параметры.ПараметрыАлгоритмов.Установить("СчетДт", НУ.Счет);
			Параметры.ПараметрыАлгоритмов.Установить("СчетКт", "");
			Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "97.01");
			Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", "");
			Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "НУ");
			Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "НУ");
			Параметры.ПараметрыАлгоритмов.Установить("КоличествоДт", 0);
			Параметры.ПараметрыАлгоритмов.Установить("КоличествоКт", 0);
			Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьНУ);
			ДобавитьПроводкуНУ();
		КонецЕсли;
						
	КонецЦикла; // НУ.ВыбратьСубконто()

	Если НУ.НачДата = НачМесяца(Параметры.ДатаВводаОстатков) Тогда
		ВходящиеДанные = СоздатьОбъект("СписокЗначений");
		ВходящиеДанные.Установить("Налоговый", Проводки);
		ВходящиеДанные.Установить("Счет", СписокСчетовНУ);
		ВходящиеДанные.Установить("Дата", НУ.НачДата-1);
		ПодготовитьТаблицуОстатковНУ(); 
		//ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияБух");
	КонецЕсли;
	
	Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
		ВходящиеДанные = СоздатьОбъект("СписокЗначений");
		ВходящиеДанные.Установить("Налоговый", ПроводкиОбороты);
		ВходящиеДанные.Установить("Счет", СписокСчетовНУ);
		ВходящиеДанные.Установить("Дата", НУ.КонДата);
		ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияБух");
	КонецЕсли;
КонецЦикла;

//**********

Параметры.ПараметрыАлгоритмов.Установить("ПорядокСубконтоБУ", "1,2,3");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "97.01");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", "97.01");
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Налоговый");
Параметры.ПараметрыАлгоритмов.Установить("Количественный", 0);
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 1);

СписокСчетовНУ = "Н04.11";

ПроводкиОбороты = Параметры.ТаблицаПроводокОбороты;
Проводки = Параметры.ТаблицаПроводок;
Проводки.УдалитьСтроки();

НУ = СоздатьОбъект("БухгалтерскиеИтоги");
НУ.ИспользоватьСубконто(ВидыСубконто.РасходыБудущихПериодов);
Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	НУ.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков,, СписокСчетовНУ);
	
Иначе
	НУ.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков, Параметры.ДатаКонцаПериодаВыгрузки, СписокСчетовНУ,,, 3, "Месяц",);
КонецЕсли;

НУ.ВыбратьПериоды();
Пока НУ.ПолучитьПериод() = 1 Цикл
	
	ПроводкиОбороты.УдалитьСтроки();
	
	НУ.ВыбратьСубконто(1);
	Пока НУ.ПолучитьСубконто(1) = 1 Цикл
		Если НУ.Субконто(1).ЭтоГруппа() = 1 Тогда
			Продолжить;
		КонецЕсли;
			
		СтоимостьНУ = НУ.СНД(1);
		СтоимостьНУ_ОборотыДт = НУ.ДО(1);
		СтоимостьНУ_ОборотыКт = НУ.КО(1);
			
		// Выгрузка оборотов НУ
		Параметры.ПараметрыАлгоритмов.Установить("ТаблицаПроводок", ПроводкиОбороты);
					
		Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "НУ");
		Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "97.01");
		Параметры.ПараметрыАлгоритмов.Установить("КоличествоДт", 0);
		Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт1", НУ.Субконто(1));
		Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт2", "");
		Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт3", "");
					
		Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "НУ");
		Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", "97.01");
		Параметры.ПараметрыАлгоритмов.Установить("КоличествоКт", 0);
		Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт1", НУ.Субконто(1));
		Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт2", "");
		Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт3", "");
					
		// Стоимость
		Параметры.ПараметрыАлгоритмов.Установить("СчетДт", НУ.Счет);
		Параметры.ПараметрыАлгоритмов.Установить("СчетКт", "");
		Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьНУ_ОборотыДт);
		ДобавитьПроводкуНУ();
					
		Параметры.ПараметрыАлгоритмов.Установить("СчетДт", "");
		Параметры.ПараметрыАлгоритмов.Установить("СчетКт", НУ.Счет);
		Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьНУ_ОборотыКт);
		ДобавитьПроводкуНУ();
					
		// Выгрузка начальных остатков.
		Если НачМесяца(Параметры.ДатаВводаОстатков) = НУ.НачДата Тогда
			Параметры.ПараметрыАлгоритмов.Установить("ТаблицаПроводок", Проводки);
			Параметры.ПараметрыАлгоритмов.Установить("СчетДт", НУ.Счет);
			Параметры.ПараметрыАлгоритмов.Установить("СчетКт", "");
			Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "97.01");
			Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", "");
			Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "НУ");
			Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "НУ");
			Параметры.ПараметрыАлгоритмов.Установить("КоличествоДт", 0);
			Параметры.ПараметрыАлгоритмов.Установить("КоличествоКт", 0);
			Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьНУ);
			ДобавитьПроводкуНУ();
		КонецЕсли;
						
	КонецЦикла; // НУ.ВыбратьСубконто()

	Если НУ.НачДата = НачМесяца(Параметры.ДатаВводаОстатков) Тогда
		ВходящиеДанные = СоздатьОбъект("СписокЗначений");
		ВходящиеДанные.Установить("Налоговый", Проводки);
		ВходящиеДанные.Установить("Счет", СписокСчетовНУ);
		ВходящиеДанные.Установить("Дата", НУ.НачДата-1);
		ПодготовитьТаблицуОстатковНУ(); 
		//ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияБух");
	КонецЕсли;
	
	Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
		ВходящиеДанные = СоздатьОбъект("СписокЗначений");
		ВходящиеДанные.Установить("Налоговый", ПроводкиОбороты);
		ВходящиеДанные.Установить("Счет", СписокСчетовНУ);
		ВходящиеДанные.Установить("Дата", НУ.КонДата);
		ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияБух");
	КонецЕсли;
КонецЦикла;

//******************** Счет 97 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("97"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();


//******************** Счет 75.1 ******************** 
Параметры.ТаблицаОстатковНУ.УдалитьКолонку("СчетУчетаНУ");</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>тОНО_ОНА</Код>
				<Наименование>Отложенные налоговые активы и обязательства</Наименование>
				<Порядок>1300</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//*************************************************************************************************
// Счета учета отложенных налоговых активов/обязательств
//*************************************************************************************************

//******************** Счет 09 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("09"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 77 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("77")); 
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>тДанныеПоНДСпоПокупателям</Код>
				<Наименование>НДС неполученный от покупателей</Наименование>
				<Порядок>1350</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Если Параметры.ДатаКонцаПериодаВыгрузки &gt; Параметры.ДатаВводаОстатков Тогда
	Параметры.ПараметрыАлгоритмов.Установить("НДСДатаВыгрузки", Параметры.ДатаВводаОстатков-1);
	ДанныеПоНДСпоПокупателям();
	//Параметры.ПараметрыАлгоритмов.Установить("НДСДатаВыгрузки", Параметры.ДатаКонцаПериодаВыгрузки);
	//ДанныеПоНДСпоПокупателям();
Иначе
	Параметры.ПараметрыАлгоритмов.Установить("НДСДатаВыгрузки", Параметры.ДатаВводаОстатков-1);
	ДанныеПоНДСпоПокупателям();
КонецЕсли;

//*************************************************************************************************
// Счета учета НДС 
//*************************************************************************************************

//******************** Счет 76.Н ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("76.Н.1")); 
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("76.Н.2")); 
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>тФинансовыйРезультат</Код>
				<Наименование>Финансовый результат</Наименование>
				<Порядок>1400</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//******************** Счет 94 ******************** 
СписокСчетовНУ = "Н16";
СписокСчетовПР = "НПР.94";
СписокСчетовБУ = "94";

Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовБУ", СписокСчетовБУ);
Параметры.ПараметрыАлгоритмов.Установить("КоличествоСубконто", 0);

Количественный = 0;
КодСчетаДт = "";
ДтКт = 1;

ПроводкиОбороты = Параметры.ТаблицаПроводокОбороты;
Проводки = Параметры.ТаблицаПроводок;
Проводки.УдалитьСтроки();

НУ = СоздатьОбъект("БухгалтерскиеИтоги");
Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	НУ.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков,, СписокСчетовНУ);
	
Иначе
	НУ.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков, Параметры.ДатаКонцаПериодаВыгрузки, СписокСчетовНУ,,, 3, "Месяц",);
КонецЕсли;

ПР = СоздатьОбъект("БухгалтерскиеИтоги");
Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	ПР.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков,, СписокСчетовПР);
	
Иначе
	ПР.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков, Параметры.ДатаКонцаПериодаВыгрузки, СписокСчетовПР,,, 3, "Месяц",);
КонецЕсли;

БУ = СоздатьОбъект("БухгалтерскиеИтоги");
Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	БУ.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков,, СписокСчетовБУ);
	
Иначе
	БУ.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков, Параметры.ДатаКонцаПериодаВыгрузки, СписокСчетовБУ,,, 3, "Месяц",);
КонецЕсли;

ИтогиПоСубконто = СоздатьОбъект("ТаблицаЗначений");
ИтогиПоСубконто.НоваяКолонка("Счет");
ИтогиПоСубконто.НоваяКолонка("КодСчета");
ИтогиПоСубконто.НоваяКолонка("Субконто1");
ИтогиПоСубконто.НоваяКолонка("Субконто2");
ИтогиПоСубконто.НоваяКолонка("Субконто3");
ИтогиПоСубконто.НоваяКолонка("СНД1", "Число");
ИтогиПоСубконто.НоваяКолонка("СНК1", "Число");
ИтогиПоСубконто.НоваяКолонка("КО1", "Число");
ИтогиПоСубконто.НоваяКолонка("ДО1", "Число");
ИтогиПоСубконто.НоваяКолонка("СНД3", "Число");
ИтогиПоСубконто.НоваяКолонка("СНК3", "Число");
ИтогиПоСубконто.НоваяКолонка("КО3", "Число");
ИтогиПоСубконто.НоваяКолонка("ДО3", "Число");

НУ.ВыбратьПериоды();
Пока НУ.ПолучитьПериод() = 1 Цикл
	
	ПроводкиОбороты.УдалитьСтроки();
	ВедетсяУчетМПЗвПереработке = Константа.РаздельныйУчетМатериаловСкладПереработка.Получить(НУ.НачДата);
	
	СтоимостьНУ = ?(ДтКт = 1, НУ.СНД(1), НУ.СНК(1));
	СтоимостьНУ_ОборотыДт = НУ.ДО(1);
	СтоимостьНУ_ОборотыКт = НУ.КО(1);
			
	СтоимостьБУ = 0;
	СтоимостьБУ_ОборотыДт = 0;
	СтоимостьБУ_ОборотыКт = 0;
	
	СтоимостьПР = 0;
	СтоимостьПР_ОборотыДт = 0;
	СтоимостьПР_ОборотыКт = 0;
			
	Если ПР.ПолучитьПериод(1, НУ.НачДата) = 1 Тогда
		СтоимостьПР = ?(ДтКт = 1, ПР.СНД(1), ПР.СНК(1));
		СтоимостьПР_ОборотыДт = ПР.ДО(1);
		СтоимостьПР_ОборотыКт = ПР.КО(1);
	КонецЕсли;
	
	Если БУ.ПолучитьПериод(1, НУ.НачДата) = 1 Тогда
		СтоимостьБУ = ?(ДтКт = 1, БУ.СНД(1), БУ.СНК(1));
		СтоимостьБУ_ОборотыДт = БУ.ДО(1);
		СтоимостьБУ_ОборотыКт = БУ.КО(1);
	КонецЕсли;
			
	// Выгрузка оборотов НУ
	Параметры.ПараметрыАлгоритмов.Установить("ТаблицаПроводок", ПроводкиОбороты);
	Параметры.ПараметрыАлгоритмов.Установить("ПорядокСубконтоБУ", "1,2,3");
					
	Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "НУ");
	Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "");
	Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт1", "");
	Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт2", "");
	Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт3", "");
	Параметры.ПараметрыАлгоритмов.Установить("КоличествоДт", 0);
					
	Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "НУ");
	Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", "");
	Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт1", "");
	Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт2", "");
	Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт3", "");
	Параметры.ПараметрыАлгоритмов.Установить("КоличествоКт", 0);
					
	// Стоимость
	Параметры.ПараметрыАлгоритмов.Установить("СчетДт", НУ.Счет);
	Параметры.ПараметрыАлгоритмов.Установить("СчетКт", "");
	Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьНУ_ОборотыДт);
	ДобавитьПроводкуНУ();
					
	Параметры.ПараметрыАлгоритмов.Установить("СчетДт", "");
	Параметры.ПараметрыАлгоритмов.Установить("СчетКт", НУ.Счет);
	Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьНУ_ОборотыКт);
	ДобавитьПроводкуНУ();
					
	// Поддержка ПБУ 18
	Если Константа.ПрименяетсяПБУ18.Получить(Параметры.ДатаКонцаПериодаВыгрузки) = Да Тогда
		// Постоянные разницы
		Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "ПР");
		Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "ПР");

		// Стоимость
		Параметры.ПараметрыАлгоритмов.Установить("СчетДт", НУ.Счет);
		Параметры.ПараметрыАлгоритмов.Установить("СчетКт", "");
		Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьПР_ОборотыДт);
		ДобавитьПроводкуНУ();
						
		Параметры.ПараметрыАлгоритмов.Установить("СчетДт", "");
		Параметры.ПараметрыАлгоритмов.Установить("СчетКт", НУ.Счет);
		Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьПР_ОборотыКт);
		ДобавитьПроводкуНУ();
						
		// Временные разницы
		Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "ВР");
		Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "ВР");
						
		// Стоимость
		СтоимостьВР = СтоимостьБУ - СтоимостьНУ - СтоимостьПР;
		СтоимостьВР_ОборотыДт = СтоимостьБУ_ОборотыДт - СтоимостьНУ_ОборотыДт - СтоимостьПР_ОборотыДт;
		СтоимостьВР_ОборотыКт = СтоимостьБУ_ОборотыКт - СтоимостьНУ_ОборотыКт - СтоимостьПР_ОборотыКт;
						
		Параметры.ПараметрыАлгоритмов.Установить("СчетДт", НУ.Счет);
		Параметры.ПараметрыАлгоритмов.Установить("СчетКт", "");
		Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьВР_ОборотыДт);
		ДобавитьПроводкуНУ();
						
		Параметры.ПараметрыАлгоритмов.Установить("СчетДт", "");
		Параметры.ПараметрыАлгоритмов.Установить("СчетКт", НУ.Счет);
		Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьВР_ОборотыКт);
		ДобавитьПроводкуНУ();
	КонецЕсли;
					
	// Выгрузка начальных остатков.
	Если НачМесяца(Параметры.ДатаВводаОстатков) = НУ.НачДата Тогда
		Параметры.ПараметрыАлгоритмов.Установить("ТаблицаПроводок", Проводки);
						
		Если ДтКт = 1 Тогда
			Параметры.ПараметрыАлгоритмов.Установить("СчетДт", НУ.Счет);
			Параметры.ПараметрыАлгоритмов.Установить("СчетКт", "");
										
		Иначе
			Параметры.ПараметрыАлгоритмов.Установить("СчетДт", "");
			Параметры.ПараметрыАлгоритмов.Установить("СчетКт", НУ.Счет);
		КонецЕсли;
						
		Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "НУ");
		Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "НУ");
		Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьНУ);
		ДобавитьПроводкуНУ();
						
		// Поддержка ПБУ 18
		Если Константа.ПрименяетсяПБУ18.Получить(Параметры.ДатаКонцаПериодаВыгрузки) = Да Тогда
			Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "ПР");
			Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "ПР");
			Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьПР);
			ДобавитьПроводкуНУ();
							
			Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "ВР");
			Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "ВР");
			Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьВР);
			ДобавитьПроводкуНУ();
		КонецЕсли;
	КонецЕсли;

	Если НУ.НачДата = НачМесяца(Параметры.ДатаВводаОстатков) Тогда
		ВходящиеДанные = СоздатьОбъект("СписокЗначений");
		ВходящиеДанные.Установить("Налоговый", Проводки);
		ВходящиеДанные.Установить("Счет", СписокСчетовНУ);
		ВходящиеДанные.Установить("Дата", НУ.НачДата-1);
		ПодготовитьТаблицуОстатковНУ(); 
		//ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияБух");
	КонецЕсли;
	
	Если Параметры.ДатаВводаОстатков &lt;&gt;  Параметры.ДатаКонцаПериодаВыгрузки Тогда
		ВходящиеДанные = СоздатьОбъект("СписокЗначений");
		ВходящиеДанные.Установить("Налоговый", ПроводкиОбороты);
		ВходящиеДанные.Установить("Счет", СписокСчетовНУ);
		ВходящиеДанные.Установить("Дата", НУ.КонДата);
		ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияБух");
	КонецЕсли;
КонецЦикла;

//******************** Счет 94 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("94")); 
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

Параметры.ТаблицаОстатковНУ.УдалитьСтроки();

//******************** Счет 96 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("96")); 
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 98.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("98.1")); 
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 98.2.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("98.2.1"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 98.2.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("98.2.2")); 
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 98.3 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("98.3")); 
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 98.4 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("98.4"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 99.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("99.1"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 99.2.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("99.2.1"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 99.2.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("99.2.2"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 99.2.3 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("99.2.3"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//**************************************** 
//Счета БУ по которым выгружаются только обороты - 90 и 91
//**************************************** 

//******************** Счет 90.1.1 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("90.1.1")); 
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 90.1.2 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("90.1.2"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 90.2.1 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("90.2.1"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 90.2.2 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("90.2.2"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 90.3 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("90.3"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 90.4 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("90.4"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 90.5 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("90.5"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 90.7.1 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("90.7.1"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 90.7.2 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("90.7.2"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 90.8.1 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("90.8.1"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 90.8.2 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("90.8.2"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 90.9 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("90.9"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 91.1 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("91.1"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 91.2 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("91.2"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 91.9 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("91.9"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//***********************************************************
// Счета налогового учета по которым выгружаются только обороты
//***********************************************************

//******************** Счет Н06.01 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовНУ", "Н06.01");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоНУ", ВидыСубконто.Номенклатура);
ВыгрузитьОборотыПоВыручке();

//******************** Счет Н06.02 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовНУ", "Н06.02");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоНУ", ВидыСубконто.Договоры);
ВыгрузитьОборотыПоВыручке();

//******************** Счет Н06.03 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовНУ", "Н06.03");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоНУ", "");
ВыгрузитьОборотыПоВыручке();

//******************** Счет Н06.04 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовНУ", "Н06.04");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоНУ", ВидыСубконто.Номенклатура);
ВыгрузитьОборотыПоВыручке();

//******************** Счет Н06.05 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовНУ", "Н06.05");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоНУ", ВидыСубконто.ОсновныеСредства);
ВыгрузитьОборотыПоВыручке();

//******************** Счет Н06.06 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовНУ", "Н06.06");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоНУ", ВидыСубконто.НематериальныеАктивы);
ВыгрузитьОборотыПоВыручке();

//******************** Счет Н06.07 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовНУ", "Н06.07");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоНУ", ВидыСубконто.Договоры);
ВыгрузитьОборотыПоВыручке();

//******************** Счет Н06.08 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовНУ", "Н06.08");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоНУ", ВидыСубконто.Договоры);
ВыгрузитьОборотыПоВыручке();

//******************** Счет Н06.09 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовНУ", "Н06.09");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоНУ", ВидыСубконто.Договоры);
ВыгрузитьОборотыПоВыручке();

//******************** Счет Н06.10 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовНУ", "Н06.10");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоНУ", "");
ВыгрузитьОборотыПоВыручке();

//******************** Счет Н06.11 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовНУ", "Н06.11");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоНУ", ВидыСубконто.ЦенныеБумаги);
ВыгрузитьОборотыПоВыручке();

//******************** Счет Н07.01 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовНУ", "Н07.01");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоНУ", "");
Параметры.ПараметрыАлгоритмов.Установить("ИспользоватьСчетПВ", 0);
ВыгрузитьОборотыПоРасходам();

//******************** Счет Н07.02 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовНУ", "Н07.02");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоНУ", "");
Параметры.ПараметрыАлгоритмов.Установить("ИспользоватьСчетПВ", 0);
ВыгрузитьОборотыПоРасходам();

//******************** Счет Н07.05 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовНУ", "Н07.05");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоНУ", "");
//Параметры.ПараметрыАлгоритмов.Установить("ИспользоватьСчетПВ", 1);
Параметры.ПараметрыАлгоритмов.Установить("ИспользоватьСчетПВ", 0);
ВыгрузитьОборотыПоРасходам();

//******************** Счет Н07.06 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовНУ", "Н07.06");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоНУ", "");
Параметры.ПараметрыАлгоритмов.Установить("ИспользоватьСчетПВ", 0);
ВыгрузитьОборотыПоРасходам();

//******************** Счет Н07.07 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовНУ", "Н07.07");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоНУ", ВидыСубконто.ОсновныеСредства);
Параметры.ПараметрыАлгоритмов.Установить("ИспользоватьСчетПВ", 0);
ВыгрузитьОборотыПоРасходам();

//******************** Счет Н07.08 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовНУ", "Н07.08");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоНУ", ВидыСубконто.НематериальныеАктивы);
Параметры.ПараметрыАлгоритмов.Установить("ИспользоватьСчетПВ", 0);
ВыгрузитьОборотыПоРасходам();

//******************** Счет Н07.09 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовНУ", "Н07.09");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоНУ", ВидыСубконто.Договоры);
Параметры.ПараметрыАлгоритмов.Установить("ИспользоватьСчетПВ", 0);
ВыгрузитьОборотыПоРасходам();

//******************** Счет Н07.10 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовНУ", "Н07.10");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоНУ", ВидыСубконто.Договоры);
Параметры.ПараметрыАлгоритмов.Установить("ИспользоватьСчетПВ", 0);
ВыгрузитьОборотыПоРасходам();

//******************** Счет Н07.11 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовНУ", "Н07.11");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоНУ", ВидыСубконто.Договоры);
Параметры.ПараметрыАлгоритмов.Установить("ИспользоватьСчетПВ", 0);
ВыгрузитьОборотыПоРасходам();

//******************** Счет Н07.12 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовНУ", "Н07.12");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоНУ", ВидыСубконто.Договоры);
Параметры.ПараметрыАлгоритмов.Установить("ИспользоватьСчетПВ", 0);
ВыгрузитьОборотыПоРасходам();

//******************** Счет Н07.13 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовНУ", "Н07.13");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоНУ", "");
Параметры.ПараметрыАлгоритмов.Установить("ИспользоватьСчетПВ", 0);
ВыгрузитьОборотыПоРасходам();

//******************** Счет Н07.14 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовНУ", "Н07.14");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоНУ", ВидыСубконто.ЦенныеБумаги);
Параметры.ПараметрыАлгоритмов.Установить("ИспользоватьСчетПВ", 0);
ВыгрузитьОборотыПоРасходам();

//******************** Счет Н08 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовНУ", "Н08");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоНУ", ВидыСубконто.ВнереализационныеДоходы);
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 2);
ВыгрузитьОборотыПоСчетуНУ();

//******************** Счет Н09 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("СписокСчетовНУ", "Н09");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоНУ", ВидыСубконто.ВнереализационныеРасходы);
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 1);
ВыгрузитьОборотыПоСчетуНУ();

//******************** Счет Н07.04.1 ******************* 
СписокСчетовНУ = "Н07.04.1";
Количественный = 0;
ДтКт = 1;

СчН07_04_1 = СчетПоКоду("Н07.04.1");
СчН15 = СчетПоКоду("Н15");
СчН04_11 = СчетПоКоду("Н04.11");

ПроводкиОбороты = Параметры.ТаблицаПроводокОбороты;

НУ = СоздатьОбъект("БухгалтерскиеИтоги");
НУ.ВключатьСубсчета(, -1);
НУ.ИспользоватьСубконто();
НУ.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков, Параметры.ДатаКонцаПериодаВыгрузки, СписокСчетовНУ,,, 3, "Месяц",);

НУ.ВыбратьПериоды();
Пока НУ.ПолучитьПериод() = 1 Цикл
	
	ПроводкиОбороты.УдалитьСтроки();
	
	НУ.ВыбратьСубконто(1);
	Пока НУ.ПолучитьСубконто(1) = 1 Цикл
		
		// Выгрузка оборотов НУ
		Параметры.ПараметрыАлгоритмов.Установить("ТаблицаПроводок", ПроводкиОбороты);
		Параметры.ПараметрыАлгоритмов.Установить("ПорядокСубконтоБУ", "1,2,3");
				
		Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "НУ");
		Параметры.ПараметрыАлгоритмов.Установить("КоличествоДт", 0);
		Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт2", "");
		Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт3", "");
				
		Параметры.ПараметрыАлгоритмов.Установить("СчетКт", "");
		Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", "");
		Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "НУ");
		Параметры.ПараметрыАлгоритмов.Установить("КоличествоКт", 0);
		Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт1", "");
		Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт2", "");
		Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт3", "");
		
		Субконто1_1 = НУ.Субконто(1);
		Субконто1_2 = Перечисление.ГруппыВидыРасходов.ОплатаТруда;
		
		СтоимостьНУ_ОборотыДт = 0;
		СтоимостьНУ_ОборотыДт_РОТ = 0;
		
		Если НУ.Субконто(1) = Перечисление.ГруппыВидыРасходов.НалогиИСборы Тогда
			// Если это расходы по налогам с ФОТ,
			// то надо указать вид расходов "Оплата труда".
		
			НУ.ВыбратьКорСчета();
			Пока НУ.ПолучитьКорСчет() = 1 Цикл
				Если (НУ.КорСчет = СчН15) или (НУ.КорСчет = СчН04_11) тогда
					СтоимостьНУ_ОборотыДт_РОТ = СтоимостьНУ_ОборотыДт_РОТ + НУ.КорДО();
					
				Иначе
					СтоимостьНУ_ОборотыДт = СтоимостьНУ_ОборотыДт + НУ.КорДО();
				КонецЕсли;
			КонецЦикла;
			
		Иначе
			СтоимостьНУ_ОборотыДт = НУ.ДО(1);
		КонецЕсли;
		
		Параметры.ПараметрыАлгоритмов.Установить("СчетДт", СчН07_04_1);
		Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "26");
		Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт1", Субконто1_1);
		Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьНУ_ОборотыДт);
		ДобавитьПроводкуНУ();
		
		Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт1", Субконто1_2);
		Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьНУ_ОборотыДт_РОТ);
		ДобавитьПроводкуНУ();
					
		Параметры.ПараметрыАлгоритмов.Установить("СчетДт", СчН07_04_1);
		Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "90.08.1");
		Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт1", "");
		Параметры.ПараметрыАлгоритмов.Установить("СчетКт", СчН07_04_1);
		Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", "26");
		Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт1", Субконто1_1);
		Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьНУ_ОборотыДт);
		ДобавитьПроводкуНУ();
		
		Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт1", Субконто1_2);
		Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьНУ_ОборотыДт_РОТ);
		ДобавитьПроводкуНУ();
	КонецЦикла;

	Если Параметры.ДатаВводаОстатков &lt;&gt;  Параметры.ДатаКонцаПериодаВыгрузки Тогда
		ВходящиеДанные = СоздатьОбъект("СписокЗначений");
		ВходящиеДанные.Установить("Налоговый", ПроводкиОбороты);
		ВходящиеДанные.Установить("Счет", СписокСчетовНУ);
		ВходящиеДанные.Установить("Дата", НУ.КонДата);
		ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияБух");
	КонецЕсли;
КонецЦикла;</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>тЗабалансовыеСчета</Код>
				<Наименование>Забалансовые счета</Наименование>
				<Порядок>1450</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//*************************************************************************************************
// Забалансовые счета 
//*************************************************************************************************

//******************** Счет 001 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("001"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 002.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("002.1"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 002.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("002.2"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 003 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("003")); 
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 005 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("005"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 006 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("006"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 007 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("007"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 008 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("008"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 009 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("009"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 011 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("011")); 
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();


//******************** Счет ГТД ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("ГТД")); 
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//Эти счета выгружаются в Операцию

//******************** Счет РВ.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("РВ.1"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет РВ.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("РВ.2"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет МЦ.04 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("МЦ.04"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>тДанныеДляРасчетаНДФЛиЕСН</Код>
				<Наименование>Данные по расчетам с работниками (НДФЛ и ЕСН)</Наименование>
				<Порядок>1500</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>// Параметры
ДатаВводаОстатков = Параметры.ДатаВводаОстатков;
СписокРаботников = Параметры.СписокРаботников;

ВычетыСотрудниковПоНДФЛ = СоздатьОбъект("Справочник.ВычетыСотрудниковПоНДФЛ");

Сотрудники=СоздатьОбъект("СписокЗначений");
СписокРаботников.Выгрузить(Сотрудники,,, "ФизЛицо");
ВсегоСотров = Сотрудники.РазмерСписка();

// Задолженность по оплате труда на момент ввода остатков
// (сальдо счета 70)
Задолженность = СоздатьОбъект("ТаблицаЗначений");
Задолженность.НоваяКолонка("ФизЛицо");
Задолженность.НоваяКолонка("Результат", "Число"); 
Задолженность.НоваяКолонка("ПодразделениеОрганизации"); 
												 
// Исчислен НДФЛ
// Сумма должна соответствовать обороту между 70 и 68
// за каждый расчетный период, но только в части ставки 13%
//
ИсчисленныйНДФЛ = СоздатьОбъект("ТаблицаЗначений"); 
ИсчисленныйНДФЛ.НоваяКолонка("ФизЛицо");            
ИсчисленныйНДФЛ.НоваяКолонка("МесяцНалоговогоПериода", "Дата");
ИсчисленныйНДФЛ.НоваяКолонка("ПериодРегистрации", "Дата");
ИсчисленныйНДФЛ.НоваяКолонка("Налог", "Число");
ИсчисленныйНДФЛ.НоваяКолонка("КодВычета");
ИсчисленныйНДФЛ.НоваяКолонка("ПримененныйВычет", "Число");
ИсчисленныйНДФЛ.НоваяКолонка("РебенокИнвалид", "Число");

ИсчисленныйНДФЛНакопительный = СоздатьОбъект("ТаблицаЗначений"); 
ИсчисленныйНДФЛ.Выгрузить(ИсчисленныйНДФЛНакопительный);

// Удержанный НДФЛ
// Оборот 70 68 за все расчетные периоды по всем ставкам
УдержанныйНДФЛ = СоздатьОбъект("ТаблицаЗначений"); 
УдержанныйНДФЛ.НоваяКолонка("ФизЛицо");            
УдержанныйНДФЛ.НоваяКолонка("МесяцНалоговогоПериода", "Дата");
УдержанныйНДФЛ.НоваяКолонка("ПериодРегистрации", "Дата");
УдержанныйНДФЛ.НоваяКолонка("СтавкаНалогообложения", "Строка");
УдержанныйНДФЛ.НоваяКолонка("Налог", "Число");

// Доходы НДФЛ за каждый месяц налогового периода
// Сюда же надо вписать движения, сторнирующие доходы, которые отразятся при вводе задолженности
// Сторнировать доходы надо по коду 2000, а затем отразить их с настоящим кодом.
ДоходыНДФЛ = СоздатьОбъект("ТаблицаЗначений");
ДоходыНДФЛ.НоваяКолонка("ФизЛицо");
ДоходыНДФЛ.НоваяКолонка("МесяцНалоговогоПериода", "Дата");
ДоходыНДФЛ.НоваяКолонка("ПериодРегистрации", "Дата");
ДоходыНДФЛ.НоваяКолонка("ДатаДохода", "Дата"); 
ДоходыНДФЛ.НоваяКолонка("КодДохода", "Строка");
ДоходыНДФЛ.НоваяКолонка("СуммаДохода", "Число");
ДоходыНДФЛ.НоваяКолонка("КодВычета", "Строка");
ДоходыНДФЛ.НоваяКолонка("СуммаВычета", "Число");
ДоходыНДФЛ.НоваяКолонка("СуммаНалогаИсчисленная", "Число");

// Доходы ЕСН за каждый месяц налогового периода
ДоходыЕСН = СоздатьОбъект("ТаблицаЗначений");
ДоходыЕСН.НоваяКолонка("ФизЛицо");
ДоходыЕСН.НоваяКолонка("МесяцНалоговогоПериода", "Дата");
ДоходыЕСН.НоваяКолонка("КодДоходаЕСН", "Строка"); // Доходы ЕСН
ДоходыЕСН.НоваяКолонка("СуммаДохода", "Число"); // это уже есть
ДоходыЕСН.НоваяКолонка("ОблагаетсяЕНВД", "Число");        
												
// Начисленный  ЕСН за каждый месяц налогового периода
НачисленныйЕСН = СоздатьОбъект("ТаблицаЗначений");
НачисленныйЕСН.НоваяКолонка("ФизЛицо");
НачисленныйЕСН.НоваяКолонка("МесяцНалоговогоПериода", "Дата");
НачисленныйЕСН.НоваяКолонка("ФедеральныйБюджет", "Число"); // собственно ЕСН
НачисленныйЕСН.НоваяКолонка("ФСС", "Число");
НачисленныйЕСН.НоваяКолонка("ФФОМС", "Число");
НачисленныйЕСН.НоваяКолонка("ТФОМС", "Число");
НачисленныйЕСН.НоваяКолонка("ПФРНакопительная", "Число");
НачисленныйЕСН.НоваяКолонка("ПФРСтраховая", "Число");
НачисленныйЕСН.НоваяКолонка("ПримененнаяЛьготаФБ", "Число");
НачисленныйЕСН.НоваяКолонка("ПримененнаяЛьготаФСС", "Число");
НачисленныйЕСН.НоваяКолонка("ПримененнаяЛьготаФОМС", "Число");
НачисленныйЕСН.НоваяКолонка("ПФРНакопительнаяЕНВД", "Число");
НачисленныйЕСН.НоваяКолонка("ПФРСтраховаяЕНВД", "Число");

// Доходы по страховым взносам за каждый месяц налогового периода
ДоходыСВЗ = СоздатьОбъект("ТаблицаЗначений");
ДоходыСВЗ.НоваяКолонка("ФизЛицо");
ДоходыСВЗ.НоваяКолонка("МесяцРасчетногоПериода", "Дата");
ДоходыСВЗ.НоваяКолонка("ВидДохода", "Строка"); 
ДоходыСВЗ.НоваяКолонка("Результат", "Число");
ДоходыСВЗ.НоваяКолонка("Скидка", "Число"); 
ДоходыСВЗ.НоваяКолонка("ОблагаетсяЕНВД", "Число");        
												
// Начисленные страховые взносы за каждый месяц налогового периода
НачисленныйСВЗ = СоздатьОбъект("ТаблицаЗначений");
НачисленныйСВЗ.НоваяКолонка("ФизЛицо");
НачисленныйСВЗ.НоваяКолонка("МесяцРасчетногоПериода", "Дата");
НачисленныйСВЗ.НоваяКолонка("ПФРНакопительная", "Число"); 
НачисленныйСВЗ.НоваяКолонка("ПФРНакопительнаяЕНВД", "Число");
НачисленныйСВЗ.НоваяКолонка("ПФРСтраховая", "Число");
НачисленныйСВЗ.НоваяКолонка("ПФРСтраховаяЕНВД", "Число");
НачисленныйСВЗ.НоваяКолонка("ТФОМС", "Число");
НачисленныйСВЗ.НоваяКолонка("ФФОМС", "Число");
НачисленныйСВЗ.НоваяКолонка("ФСС", "Число");
НачисленныйСВЗ.НоваяКолонка("ФССНесчастныеСлучаи", "Число");

// Заполнение таблиц
Год = ДатаГод(ДатаВводаОстатков);
Месяц = ДатаМесяц(ДатаВводаОстатков);

Сч84 = СчетПоКоду("84");
Сч99 = СчетПоКоду("99");
Сч69_1 = СчетПоКоду("69.1");
Сч68_1 = СчетПоКоду("68.1");
СчДФЛ_2 = СчетПоКоду("ДФЛ.2");

СписокКолонок = СоздатьОбъект("СписокЗначений");

НДФЛ_13 = глПолучитьНалог("НДФЛ");
Ставка13 = НДФЛ_13.Ставка.Получить(КонГода(ДатаВводаОстатков));

ПервыйМесяц = 1;
ПоследнийМесяц = Месяц;
НачалоГода = НачГода(ДатаВводаОстатков);
КонецПериодаОсмотра = Параметры.ДатаКонцаПериодаВыгрузки;

БухИтЕСН = СоздатьОбъект("БухгалтерскиеИтоги");
БухИтЕСН.ИспользоватьСубконто();
БухИтЕСН.ИспользоватьСубконто();
БухИтЕСН.ВыполнитьЗапрос(НачалоГода,КонецПериодаОсмотра, "69.1,69.2.1,69.2.2,69.2.3,69.3.1,69.3.2",,, 2, "Месяц");

ЗапросПоЕСН = СоздатьОбъект("ТаблицаЗначений");
ЗапросПоЕСН.НоваяКолонка("Объект"); // сотрудник
ЗапросПоЕСН.НоваяКолонка("Регистрация"); // конец месяца начисления
ЗапросПоЕСН.НоваяКолонка("ФедеральныйБюджет", "Число"); // собственно ЕСН
ЗапросПоЕСН.НоваяКолонка("ФСС", "Число");
ЗапросПоЕСН.НоваяКолонка("ФФОМС", "Число");
ЗапросПоЕСН.НоваяКолонка("ТФОМС", "Число");
ЗапросПоЕСН.НоваяКолонка("ПФРНакопительная", "Число");
ЗапросПоЕСН.НоваяКолонка("ПФРСтраховая", "Число");

ПорядокИсчисленияЕСН = Константа.ПорядокИсчисленияЕСН.Получить(КонецПериодаОсмотра);

БухИтЕСН.ВыбратьПериоды();
Пока БухИтЕСН.ПолучитьПериод() = 1 Цикл
	Для Сч = 1 по ВсегоСотров Цикл
		
		Сотрудник = Сотрудники.ПолучитьЗначение(Сч);
		
		ЗапросПоЕСН.НоваяСтрока();
		ЗапросПоЕСН.Объект = Сотрудник;
		ЗапросПоЕСН.Регистрация = БухИтЕСН.КонДата;
		
		Если БухИтЕСН.ПолучитьСчет(, СчетПоКоду("69.1")) = 1 Тогда
			Если БухИтЕСН.ПолучитьСубконто(2,, Сотрудник) = 1 Тогда
				Если БухИтЕСН.ПолучитьСубконто(1,, Перечисление.ВидыПлатежейВФонды.Взносы) = 1 Тогда
					ЗапросПоЕСН.ФСС = БухИтЕСН.КО();
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если БухИтЕСН.ПолучитьСчет(, СчетПоКоду("69.2.1")) = 1 Тогда
			Если БухИтЕСН.ПолучитьСубконто(2,, Сотрудник) = 1 Тогда
				Если БухИтЕСН.ПолучитьСубконто(1,, Перечисление.ВидыПлатежейВБюджет.Налог) = 1 Тогда
					ЗапросПоЕСН.ФедеральныйБюджет = БухИтЕСН.КО();
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если БухИтЕСН.ПолучитьСчет(, СчетПоКоду("69.2.2")) = 1 Тогда
			Если БухИтЕСН.ПолучитьСубконто(2,, Сотрудник) = 1 Тогда
				Если БухИтЕСН.ПолучитьСубконто(1,, Перечисление.ВидыПлатежейВБюджет.Налог) = 1 Тогда
					ЗапросПоЕСН.ПФРСтраховая = БухИтЕСН.КО();
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если БухИтЕСН.ПолучитьСчет(, СчетПоКоду("69.2.3")) = 1 Тогда
			Если БухИтЕСН.ПолучитьСубконто(2,, Сотрудник) = 1 Тогда
				Если БухИтЕСН.ПолучитьСубконто(1,, Перечисление.ВидыПлатежейВБюджет.Налог) = 1 Тогда
					ЗапросПоЕСН.ПФРНакопительная = БухИтЕСН.КО();
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если БухИтЕСН.ПолучитьСчет(, СчетПоКоду("69.3.1")) = 1 Тогда
			Если БухИтЕСН.ПолучитьСубконто(2,, Сотрудник) = 1 Тогда
				Если БухИтЕСН.ПолучитьСубконто(1,, Перечисление.ВидыПлатежейВБюджет.Налог) = 1 Тогда
					ЗапросПоЕСН.ФФОМС = БухИтЕСН.КО();
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если БухИтЕСН.ПолучитьСчет(, СчетПоКоду("69.3.2")) = 1 Тогда
			Если БухИтЕСН.ПолучитьСубконто(2,, Сотрудник) = 1 Тогда
				Если БухИтЕСН.ПолучитьСубконто(1,, Перечисление.ВидыПлатежейВБюджет.Налог) = 1 Тогда
					ЗапросПоЕСН.ТФОМС = БухИтЕСН.КО();
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если ПорядокИсчисленияЕСН &lt;&gt; 2 Тогда
			ЗапросПоЕСН.ФедеральныйБюджет = ЗапросПоЕСН.ФедеральныйБюджет - ЗапросПоЕСН.ПФРНакопительная - ЗапросПоЕСН.ПФРСтраховая; 
		КонецЕсли;
	КонецЦикла;
КонецЦикла;

БухИтСВЗ = СоздатьОбъект("БухгалтерскиеИтоги");
БухИтСВЗ.ИспользоватьСубконто();
БухИтСВЗ.ВыполнитьЗапрос(НачалоГода,КонецПериодаОсмотра, "СВЗ.01.1,СВЗ.01.2,СВЗ.01.3,СВЗ.01.4,СВЗ.01.5,СВЗ.02.1,СВЗ.02.2",,, 2, "Месяц");

ЗапросПоСВЗ = СоздатьОбъект("ТаблицаЗначений");
ЗапросПоСВЗ.НоваяКолонка("Объект"); // сотрудник
ЗапросПоСВЗ.НоваяКолонка("Регистрация"); // конец месяца начисления
ЗапросПоСВЗ.НоваяКолонка("ФСС", "Число");
ЗапросПоСВЗ.НоваяКолонка("ФФОМС", "Число");
ЗапросПоСВЗ.НоваяКолонка("ТФОМС", "Число");
ЗапросПоСВЗ.НоваяКолонка("ПФРНакопительная", "Число");
ЗапросПоСВЗ.НоваяКолонка("ПФРСтраховая", "Число");
ЗапросПоСВЗ.НоваяКолонка("ПФРНакопительнаяЕНВД", "Число");
ЗапросПоСВЗ.НоваяКолонка("ПФРСтраховаяЕНВД", "Число");

БухИтСВЗ.ВыбратьПериоды();
Пока БухИтСВЗ.ПолучитьПериод() = 1 Цикл
	Для Сч = 1 по ВсегоСотров Цикл
		
		Сотрудник = Сотрудники.ПолучитьЗначение(Сч);
		
		ЗапросПоСВЗ.НоваяСтрока();
		ЗапросПоСВЗ.Объект = Сотрудник;
		ЗапросПоСВЗ.Регистрация = БухИтЕСН.КонДата;
		
		Если БухИтСВЗ.ПолучитьСчет(, СчетПоКоду("СВЗ.01.3")) = 1 Тогда
			Если БухИтСВЗ.ПолучитьСубконто(1,, Сотрудник) = 1 Тогда
				ЗапросПоСВЗ.ФСС = БухИтСВЗ.КО();
			КонецЕсли;
		КонецЕсли;
		
		Если БухИтСВЗ.ПолучитьСчет(, СчетПоКоду("СВЗ.01.1")) = 1 Тогда
			Если БухИтСВЗ.ПолучитьСубконто(1,, Сотрудник) = 1 Тогда
				ЗапросПоСВЗ.ПФРСтраховая = БухИтСВЗ.КО();
			КонецЕсли;
		КонецЕсли;
		
		Если БухИтСВЗ.ПолучитьСчет(, СчетПоКоду("СВЗ.01.2")) = 1 Тогда
			Если БухИтСВЗ.ПолучитьСубконто(1,, Сотрудник) = 1 Тогда
				ЗапросПоСВЗ.ПФРНакопительная = БухИтСВЗ.КО();
			КонецЕсли;
		КонецЕсли;
		
		Если БухИтСВЗ.ПолучитьСчет(, СчетПоКоду("СВЗ.01.4")) = 1 Тогда
			Если БухИтСВЗ.ПолучитьСубконто(1,, Сотрудник) = 1 Тогда
				ЗапросПоСВЗ.ФФОМС = БухИтСВЗ.КО();
			КонецЕсли;
		КонецЕсли;
		
		Если БухИтСВЗ.ПолучитьСчет(, СчетПоКоду("СВЗ.01.2")) = 1 Тогда
			Если БухИтСВЗ.ПолучитьСубконто(1,, Сотрудник) = 1 Тогда
				ЗапросПоСВЗ.ТФОМС = БухИтСВЗ.КО();
			КонецЕсли;
		КонецЕсли;
		
		Если БухИтСВЗ.ПолучитьСчет(, СчетПоКоду("СВЗ.02.1")) = 1 Тогда
			Если БухИтСВЗ.ПолучитьСубконто(1,, Сотрудник) = 1 Тогда
				ЗапросПоСВЗ.ПФРСтраховаяЕНВД = БухИтСВЗ.КО();
			КонецЕсли;
		КонецЕсли;
		
		Если БухИтСВЗ.ПолучитьСчет(, СчетПоКоду("СВЗ.02.2")) = 1 Тогда
			Если БухИтСВЗ.ПолучитьСубконто(1,, Сотрудник) = 1 Тогда
				ЗапросПоСВЗ.ПФРНакопительнаяЕНВД = БухИтСВЗ.КО();
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецЦикла;

// перебираем сотрудников
БухИтДФЛ = СоздатьОбъект("БухгалтерскиеИтоги");
БухИтДФЛ.Опции(1, 1);
БухИтДФЛ.ИспользоватьСубконто(ВидыСубконто.Сотрудники);
БухИтДФЛ.ИспользоватьСубконто(ВидыСубконто.ВидыНачисленийВыплат);
БухИтДФЛ.ВыполнитьЗапрос(НачалоГода,КонецПериодаОсмотра, "ДФЛ.1,ДФЛ.2",,, 2, "Месяц");

БухИт70 = СоздатьОбъект("БухгалтерскиеИтоги"); // для отбора корреспонденций 70-ого счета
БухИт70.ВключатьСубсчета(, -1);
БухИт70.ИспользоватьСубконто(ВидыСубконто.Сотрудники);
БухИт70.ИспользоватьСубконто(ВидыСубконто.ВидыНачисленийВыплат);
БухИт70.ИспользоватьКорСубконто();
БухИт70.ВыполнитьЗапрос(НачалоГода,КонецПериодаОсмотра, "70",,, 3, "Месяц");

Если НачалоГода = КонецПериодаОсмотра Тогда
	БухИт70нач = СоздатьОбъект("БухгалтерскиеИтоги");
	БухИт70нач.ИспользоватьСубконто(ВидыСубконто.Сотрудники);
	БухИт70нач.ВыполнитьЗапрос(, НачалоГода-1, "70");
КонецЕсли;
	
Для СчСотров = 1 По ВсегоСотров Цикл

	Сотрудник=Сотрудники.ПолучитьЗначение(СчСотров);
	ВаловойДоход_СНачалаГода = ?(ДатаГод(глДатаПриема(Сотрудник))=ДатаГод(ДатаВводаОстатков), Сотрудник.ВаловойДоход_СНачалаГода, 0);
	ОблагаетсяПоСт13 = 0;
	
	ДоходОблагаемыйЕСН_СНачалаГода = 0;
	ДоходОблагаемыйЕСН_ФСС_СНачалаГода = 0;
	ДоходОблагаемыйПФР_СНачалаГода = 0;
	ДоходОблагаемыйНДФЛ_СНачалаГода = 0;
	ДоходОблагаемыйНДФЛ_СНачалаГода_Пред = 0;
	ПримененнаяЛьготаФБ = 0;
	ПримененнаяЛьготаФСС = 0;
	
	// Задолженность по оплате труда
	Если НачалоГода = КонецПериодаОсмотра Тогда
		Если БухИт70нач.ПолучитьСубконто(1,, Сотрудник) = 1 Тогда
			Если БухИт70нач.СКК() &lt;&gt; 0 Тогда
				Задолженность.НоваяСтрока();
				Задолженность.ФизЛицо = Сотрудник;
				Задолженность.Результат = БухИт70нач.СКК();
				Задолженность.ПодразделениеОрганизации = Сотрудник.Подразделение.Получить(НачалоГода-1); 
			КонецЕсли;
		КонецЕсли;
	
	Иначе	
		Если БухИт70.ПолучитьСубконто(1,, Сотрудник) = 1 Тогда
			Если БухИт70.СКК() &lt;&gt; 0 Тогда
				Задолженность.НоваяСтрока();
				Задолженность.ФизЛицо = Сотрудник;
				Задолженность.Результат = БухИт70.СКК();
				Задолженность.ПодразделениеОрганизации = Сотрудник.Подразделение.Получить(КонецПериодаОсмотра); 
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	// Начальные данные для расчета налогов
	Если (ДатаГод(Сотрудник.ДатаПриема) = ДатаГод(ДатаВводаОстатков)) и (Сотрудник.ДатаПриема &lt;&gt; Дата(0)) Тогда
		Для НомерМесяца = 1 по ДатаМесяц(Сотрудник.ДатаПриема) Цикл
			ДатаМесяца = КонМесяца(Дата(Год, НомерМесяца, 1));
			ОблагаетсяЕСН = Сотрудник.ДоходОблагаемыйЕСН_СНачалаГода.Получить(ДатаМесяца);
			ОблагаетсяФСС = Сотрудник.ДоходОблагаемыйЕСН_ФСС_СНачалаГода.Получить(ДатаМесяца);
			ДоходОблагаемыйЕСН_СНачалаГода = ДоходОблагаемыйЕСН_СНачалаГода + ОблагаетсяЕСН;
			ДоходОблагаемыйЕСН_ФСС_СНачалаГода = ДоходОблагаемыйЕСН_ФСС_СНачалаГода + ОблагаетсяФСС;
			ДоходОблагаемыйПФР_СНачалаГода = ДоходОблагаемыйПФР_СНачалаГода + Сотрудник.ДоходОблагаемыйПФР_СНачалаГода.Получить(ДатаМесяца);
			
			Инвалид = ?((Сотрудник.Инвалид.Получить(ДатаМесяца) = 1) или (Константа.ИнвалиднаяОрганизация.Получить(ДатаМесяца) = Да), 1, 0);
			Если Инвалид = 1 Тогда
				ПримененнаяЛьготаФБ = Мин(100000, ПримененнаяЛьготаФБ + ОблагаетсяЕСН);
				ПримененнаяЛьготаФСС = Мин(100000, ПримененнаяЛьготаФСС + ОблагаетсяФСС);
			КонецЕсли; 
		КонецЦикла;
		
		ДатаПериода = НачМесяца(Сотрудник.ДатаПриема);
		
		Если Сотрудник.НачисленныйНДФЛ_СНачалаГода &lt;&gt; 0 Тогда
			ИсчисленныйНДФЛ.НоваяСтрока();
			ИсчисленныйНДФЛ.ФизЛицо = Сотрудник;            
			ИсчисленныйНДФЛ.МесяцНалоговогоПериода = ДатаПериода;
			ИсчисленныйНДФЛ.ПериодРегистрации = ДатаПериода;
			ИсчисленныйНДФЛ.Налог = Сотрудник.НачисленныйНДФЛ_СНачалаГода;
			
			УдержанныйНДФЛ.НоваяСтрока(); 
			УдержанныйНДФЛ.ФизЛицо = Сотрудник;            
			УдержанныйНДФЛ.МесяцНалоговогоПериода = ДатаПериода;
			УдержанныйНДФЛ.ПериодРегистрации = ДатаПериода;
			УдержанныйНДФЛ.СтавкаНалогообложения = "Ставка13";
			УдержанныйНДФЛ.Налог = Сотрудник.НачисленныйНДФЛ_СНачалаГода;
		КонецЕсли;
		
		Если (Сотрудник.ДоходОблагаемыйНДФЛ_СНачалаГода &lt;&gt; 0) или (Сотрудник.НачисленныйНДФЛ_СНачалаГода &lt;&gt; 0) Тогда
			ДоходыНДФЛ.НоваяСтрока(); 
			ДоходыНДФЛ.ФизЛицо = Сотрудник;
			ДоходыНДФЛ.МесяцНалоговогоПериода = ДатаПериода;
			ДоходыНДФЛ.ПериодРегистрации = ДатаПериода;
			ДоходыНДФЛ.ДатаДохода = ДатаПериода;
			ДоходыНДФЛ.КодДохода = "2000";
			ДоходыНДФЛ.СуммаДохода = Сотрудник.ДоходОблагаемыйНДФЛ_СНачалаГода;
			ДоходыНДФЛ.КодВычета = "";
			ДоходыНДФЛ.СуммаВычета = 0;
			ДоходыНДФЛ.СуммаНалогаИсчисленная = 0;
		КонецЕсли;
		
		Если ДатаГод(ДатаВводаОстатков) &lt; 2010 Тогда
			Если (ДоходОблагаемыйЕСН_СНачалаГода - ДоходОблагаемыйЕСН_ФСС_СНачалаГода) &gt; 0 Тогда
				ДоходыЕСН.НоваяСтрока();
				ДоходыЕСН.ФизЛицо = Сотрудник;
				ДоходыЕСН.МесяцНалоговогоПериода = ДатаПериода;
				ДоходыЕСН.КодДоходаЕСН = "00009"; // ДоговораГПХ
				ДоходыЕСН.СуммаДохода = ДоходОблагаемыйЕСН_СНачалаГода - ДоходОблагаемыйЕСН_ФСС_СНачалаГода;
				ДоходыЕСН.ОблагаетсяЕНВД = 0;
			КонецЕсли;
			
			Если (ДоходОблагаемыйПФР_СНачалаГода - ДоходОблагаемыйЕСН_СНачалаГода) &gt; 0 Тогда
				ДоходыЕСН.НоваяСтрока();
				ДоходыЕСН.ФизЛицо = Сотрудник;
				ДоходыЕСН.МесяцНалоговогоПериода = ДатаПериода;
				ДоходыЕСН.КодДоходаЕСН = "00011"; // ДоговораГПХ
				ДоходыЕСН.СуммаДохода = ДоходОблагаемыйПФР_СНачалаГода - ДоходОблагаемыйЕСН_СНачалаГода;
				ДоходыЕСН.ОблагаетсяЕНВД = 1;
			КонецЕсли;
			
			Если ДоходОблагаемыйЕСН_ФСС_СНачалаГода &lt;&gt; 0 Тогда
				ДоходыЕСН.НоваяСтрока();
				ДоходыЕСН.ФизЛицо = Сотрудник;
				ДоходыЕСН.МесяцНалоговогоПериода = ДатаПериода;
				ДоходыЕСН.КодДоходаЕСН = "00011"; // ОблагаетсяЦеликом
				ДоходыЕСН.СуммаДохода = ДоходОблагаемыйЕСН_ФСС_СНачалаГода;
				ДоходыЕСН.ОблагаетсяЕНВД = 0;
			КонецЕсли;
			
			Если (Сотрудник.НачисленныйЕСН_ПФР_СНачалаГода &lt;&gt; 0) или
				(Сотрудник.НачисленныйЕСН_ФСС_СНачалаГода &lt;&gt; 0) или
				(Сотрудник.НачисленныйЕСН_ФОМС_СНачалаГода &lt;&gt; 0) или
				(Сотрудник.НачисленныйЕСН_ТОМС_СНачалаГода &lt;&gt; 0) или
				(Сотрудник.НачисленныйПФР_нак_СНачалаГода &lt;&gt; 0) или
				(Сотрудник.НачисленныйПФР_страх_СНачалаГода &lt;&gt; 0) или
				(ПримененнаяЛьготаФБ &lt;&gt; 0) или
				(ПримененнаяЛьготаФСС &lt;&gt; 0)Тогда
				
				Если (ДоходОблагаемыйПФР_СНачалаГода &lt;&gt; 0) и ((ДоходОблагаемыйПФР_СНачалаГода - ДоходОблагаемыйЕСН_СНачалаГода) &gt; 0) Тогда
					К_ЕНВД = (ДоходОблагаемыйПФР_СНачалаГода - ДоходОблагаемыйЕСН_СНачалаГода) / ДоходОблагаемыйПФР_СНачалаГода;
					
				Иначе
					К_ЕНВД = 0;
				КонецЕсли;
				
				ПФРНакопительнаяЕНВД = Окр(К_ЕНВД * Сотрудник.НачисленныйПФР_нак_СНачалаГода, 2, 1);
				ПФРСтраховаяЕНВД = Окр(К_ЕНВД * Сотрудник.НачисленныйПФР_страх_СНачалаГода, 2, 1);
				
				НачисленныйЕСН.НоваяСтрока();
				НачисленныйЕСН.ФизЛицо = Сотрудник;
				НачисленныйЕСН.МесяцНалоговогоПериода = ДатаПериода;
				НачисленныйЕСН.ФедеральныйБюджет = Сотрудник.НачисленныйЕСН_ПФР_СНачалаГода;
				НачисленныйЕСН.ФСС = Сотрудник.НачисленныйЕСН_ФСС_СНачалаГода;
				НачисленныйЕСН.ФФОМС = Сотрудник.НачисленныйЕСН_ФОМС_СНачалаГода;
				НачисленныйЕСН.ТФОМС = Сотрудник.НачисленныйЕСН_ТОМС_СНачалаГода;
				НачисленныйЕСН.ПФРНакопительная = Сотрудник.НачисленныйПФР_нак_СНачалаГода;
				НачисленныйЕСН.ПФРСтраховая = Сотрудник.НачисленныйПФР_страх_СНачалаГода;
				НачисленныйЕСН.ПримененнаяЛьготаФБ = ПримененнаяЛьготаФБ;
				НачисленныйЕСН.ПримененнаяЛьготаФСС = ПримененнаяЛьготаФСС;
				НачисленныйЕСН.ПримененнаяЛьготаФОМС = ПримененнаяЛьготаФБ;
				НачисленныйЕСН.ПФРНакопительнаяЕНВД = ПФРНакопительнаяЕНВД;
				НачисленныйЕСН.ПФРСтраховаяЕНВД = ПФРСтраховаяЕНВД;
				
				Если ПорядокИсчисленияЕСН = 2 Тогда
					НачисленныйЕСН.ФедеральныйБюджет = НачисленныйЕСН.ФедеральныйБюджет + НачисленныйЕСН.ПФРНакопительная + НачисленныйЕСН.ПФРСтраховая - ПФРНакопительнаяЕНВД - ПФРСтраховаяЕНВД;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли;	
	
	Если ДатаГод(ДатаВводаОстатков) &gt;= 2010 Тогда
		ДоходыВычетыНалогиСотрудников = "";
		глСобратьДанныеДляСтраховыхВзносов(ДоходыВычетыНалогиСотрудников, Сотрудник, КонецПериодаОсмотра,,,1);
		Месяц = ДатаМесяц(КонецПериодаОсмотра);		
		Если Месяц &gt;=1 Тогда
			Для НомерМесяца = 1 По Месяц Цикл
				СтрокаИтоговойТаблицы=""; 
				ДоходыВычетыНалогиСотрудников.НайтиЗначение(глПолучитьУникальныйКодСотрудника(Сотрудник)+глДополнитьСтроку(НомерМесяца,2),СтрокаИтоговойТаблицы,1);     
				Если СтрокаИтоговойТаблицы &lt;&gt; 0 Тогда
					
					ДоходТекМесяца = (ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,2)
						+ ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,15)
						+ ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,28))
						- ?(НомерМесяца = 1, 0,(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,2)
						+ ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,15)
						+ ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,28)));
					
					Если ДоходТекМесяца &lt;&gt; 0 Тогда
						
						ШагИнвалид = 13;
						ШагЕНВД = 26;
						Для НомерКолонки = 2 По 14 Цикл
							
							ДоходыСВЗ.НоваяСтрока();
							ДоходыСВЗ.ФизЛицо = Сотрудник;
							ДоходыСВЗ.МесяцРасчетногоПериода = Дата(ДатаГод(КонецПериодаОсмотра),НомерМесяца,1);
							ДоходЕНВДТекМесяц = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,28) - ?(НомерМесяца = 1, 0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,28));
							ДоходыСВЗ.ОблагаетсяЕНВД = ?(ДоходЕНВДТекМесяц &lt;&gt; 0, 1, 0);
							
							Если (НомерКолонки = 9)  ИЛИ (НомерКолонки = 11) ИЛИ (НомерКолонки = 14) Тогда
								ДоходыСВЗ.Скидка = (ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,НомерКолонки)
								+ ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,НомерКолонки+ШагИнвалид)
								+ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,НомерКолонки+ШагЕНВД))
								- ?(НомерМесяца = 1, 0,(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,НомерКолонки)
								+ ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,НомерКолонки+ШагИнвалид)
								+ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,НомерКолонки+ШагЕНВД)));
							Иначе
								ДоходыСВЗ.Результат = (ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,НомерКолонки)
								+ ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,НомерКолонки+ШагИнвалид)
								+ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,НомерКолонки+ШагЕНВД))
								- ?(НомерМесяца = 1, 0,(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,НомерКолонки)
								+ ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,НомерКолонки+ШагИнвалид)
								+ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,НомерКолонки+ШагЕНВД)));
							КонецЕсли;
							
							Если НомерКолонки = 2 Тогда								
								ДоходыСВЗ.ВидДохода = "ОблагаетсяЦеликом";
								Для НомВычКолонок = 3 По 14 Цикл
									Если (НомерКолонки = 9)  ИЛИ (НомерКолонки = 11) ИЛИ (НомерКолонки = 14) Тогда
									Иначе
										ДоходыСВЗ.Результат =  ДоходыСВЗ.Результат - ((ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,НомВычКолонок)
										+ ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,НомВычКолонок+ШагИнвалид)
										+ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,НомВычКолонок+ШагЕНВД))
										- ?(НомерМесяца = 1, 0,(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,НомВычКолонок)
										+ ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,НомВычКолонок+ШагИнвалид)
										+ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,НомВычКолонок+ШагЕНВД))));
									КонецЕсли;
								КонецЦикла;																
							КонецЕсли;
							
							Если (ДоходыСВЗ.Результат = 0) И (НомерКолонки &lt;&gt; 2) Тогда
								ДоходыСВЗ.УдалитьСтроку();
								Продолжить;
							КонецЕсли;
							
							Если НомерКолонки = 3 Тогда
								ДоходыСВЗ.ВидДохода = "НеЯвляетсяОбъектом";								
							ИначеЕсли НомерКолонки = 4 Тогда
								ДоходыСВЗ.ВидДохода = "НеОблагаетсяЦеликом";
							ИначеЕсли НомерКолонки = 5 Тогда
								ДоходыСВЗ.ВидДохода = "ПособияЗаСчетФСС";
							ИначеЕсли НомерКолонки = 6 Тогда
								ДоходыСВЗ.ВидДохода = "ДенежноеДовольствиеВоеннослужащих";
							ИначеЕсли НомерКолонки = 7 Тогда
								ДоходыСВЗ.ВидДохода = "ДенежноеСодержаниеПрокуроров";
							ИначеЕсли (НомерКолонки = 8) ИЛИ (НомерКолонки = 9) Тогда
								ДоходыСВЗ.ВидДохода = "МатпомощьПриРожденииРебенка";										
							ИначеЕсли (НомерКолонки = 10) ИЛИ (НомерКолонки = 11)  Тогда
								ДоходыСВЗ.ВидДохода = "Матпомощь";										
							ИначеЕсли НомерКолонки = 12 Тогда
								ДоходыСВЗ.ВидДохода = "ДоговорыГПХ";
							ИначеЕсли (НомерКолонки = 13) ИЛИ (НомерКолонки = 14) Тогда
								ДоходыСВЗ.ВидДохода = "АвторскиеОткрытия";
							КонецЕсли;
						КонецЦикла;
						
					
					НачисленныйСВЗ.НоваяСтрока();
					НачисленныйСВЗ.ФизЛицо = Сотрудник;
					НачисленныйСВЗ.МесяцРасчетногоПериода = Дата(ДатаГод(КонецПериодаОсмотра),НомерМесяца,1);							
					НачисленныйСВЗ.ФСС = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИсчисленоФСС") + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИсчисленоФССИнвалид")
					-?(НомерМесяца = 1, 0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"ИсчисленоФСС") + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"ИсчисленоФССИнвалид"));							
					НачисленныйСВЗ.ФФОМС = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИсчисленоФФОМС") + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИсчисленоФФОМСИнвалид")
					-?(НомерМесяца = 1, 0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"ИсчисленоФФОМС") + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"ИсчисленоФФОМСИнвалид"));					
					НачисленныйСВЗ.ТФОМС = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИсчисленоТФОМС") + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИсчисленоТФОМСИнвалид")
					-?(НомерМесяца = 1, 0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"ИсчисленоТФОМС") + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"ИсчисленоТФОМСИнвалид"));
					НачисленныйСВЗ.ПФРНакопительная = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИсчисленоПФРНак") + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИсчисленоПФРНакИнвалид")
					-?(НомерМесяца = 1, 0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"ИсчисленоПФРНак") + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"ИсчисленоПФРНакИнвалид"));
					НачисленныйСВЗ.ПФРНакопительнаяЕНВД = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИсчисленоПФРНакЕНВД")
					-?(НомерМесяца = 1, 0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"ИсчисленоПФРНакЕНВД"));
					НачисленныйСВЗ.ПФРСтраховая = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИсчисленоПФРСтрах") + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИсчисленоПФРСтрахИнвалид")
					-?(НомерМесяца = 1, 0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"ИсчисленоПФРСтрах") + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"ИсчисленоПФРСтрахИнвалид"));
					НачисленныйСВЗ.ПФРСтраховаяЕНВД = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИсчисленоПФРСтрахЕНВД")
					-?(НомерМесяца = 1, 0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"ИсчисленоПФРСтрахЕНВД"));
					
					Если (НачисленныйСВЗ.ФСС + НачисленныйСВЗ.ФФОМС + НачисленныйСВЗ.ТФОМС 
						+ НачисленныйСВЗ.ПФРНакопительная + НачисленныйСВЗ.ПФРНакопительнаяЕНВД
						+ НачисленныйСВЗ.ПФРСтраховая + НачисленныйСВЗ.ПФРСтраховаяЕНВД) = 0 Тогда
						НачисленныйСВЗ.УдалитьСтроку();
					КонецЕсли;
					
					КонецЕсли;
				КонецЕсли;		
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	// Соберем доходы из бухгалтерских итогов.
	БухИтДФЛ.ВыбратьПериоды(1);
	Пока БухИтДФЛ.ПолучитьПериод() = 1 Цикл
		
		УдержанныйНДФЛпоСт13 = 0;
		
		Если БухИтДФЛ.ПолучитьСубконто(ВидыСубконто.Сотрудники,, Сотрудник) = 1 Тогда
			Период = ДатаМесяц(БухИтДФЛ.КонДата);
			ДатаМесяца=БухИтДФЛ.КонДата;
			Инвалид = ?((Сотрудник.Инвалид.Получить(ДатаМесяца) = 1) или (Константа.ИнвалиднаяОрганизация.Получить(ДатаМесяца) = Да), 1, 0);
			
			СуммаЕНВД = 0;
			СуммаВсего = 0;
			ПримененнаяЛьготаФБзаМесяц = 0;
			ПримененнаяЛьготаФССзаМесяц = 0;
			
			БухИтДФЛ.ВыбратьСубконто(ВидыСубконто.ВидыНачисленийВыплат);
			Пока БухИтДФЛ.ПолучитьСубконто(ВидыСубконто.ВидыНачисленийВыплат) = 1 Цикл
				
				ВР = БухИтДФЛ.Субконто(2);
				ДатаДохода = БухИтДФЛ.КонДата;
				МесяцДохода = ДатаМесяц(ДатаДохода);
				
				СтавкаНДФЛ = глСтавкаНДФЛ(ВР,, ДатаДохода);
				СтрСтавкаНДФЛ = "Ставка" + Формат(СтавкаНДФЛ,"Ч(0)2");
				Если СтавкаНДФЛ = Ставка13 Тогда
					ОблагаетсяПоСт13 = ОблагаетсяПоСт13 + БухИтДФЛ.КО(); // для проверки права на вычеты
				КонецЕсли;
				
				СуммаРез = БухИтДФЛ.КО();
				СуммаПриходящаясяНаЕНВД = 0;
				
				СуммаИзПрибыли = 0;
				СуммаИзПрибылиНаЕНВД = 0;
				
				РасходыНаСтрахование = 0;
				РасходыНаСтрахованиеНаЕНВД = 0;
				
				ПрочиеЛьготы = 0;
				ПрочиеЛьготыНаЕНВД = 0;
				
				СуммаПоДоговорамГПХ = 0;
				СуммаПоДоговорамГПХнаЕНВД = 0;
				
				УдержанныйНДФЛпоВсемСтавкам = 0;
				
				Если СуммаРез &lt;&gt; 0 Тогда
					Если БухИт70.ПолучитьСубконто(1,, Сотрудник) = 1 Тогда
						Если БухИт70.ПолучитьСубконто(2,, ВР) = 1 Тогда
							Если БухИт70.ПолучитьПериод(, БухИтДФЛ.НачДата) = 1 Тогда
								
								БухИт70.ВыбратьКорСчета();
								Пока БухИт70.ПолучитьКорСчет() = 1 Цикл
									Если БухИт70.КорСчет.ПринадлежитГруппе(Сч84) = 1 Тогда
										СуммаИзПрибыли = СуммаИзПрибыли + БухИт70.КорКО();
										
									ИначеЕсли БухИт70.КорСчет.ПринадлежитГруппе(Сч99) = 1 Тогда
										СуммаИзПрибыли = СуммаИзПрибыли + БухИт70.КорКО();
										
									ИначеЕсли БухИт70.КорСчет = Сч69_1 Тогда
										РасходыНаСтрахование = РасходыНаСтрахование + БухИт70.КорКО();
										
									ИначеЕсли БухИт70.КорСчет = Сч68_1 Тогда
										УдержанныйНДФЛпоВсемСтавкам = УдержанныйНДФЛпоВсемСтавкам + БухИт70.КорДО();
										Если СтавкаНДФЛ = Ставка13 Тогда
											УдержанныйНДФЛпоСт13 = УдержанныйНДФЛпоСт13 + БухИт70.КорДО();
										КонецЕсли;
									КонецЕсли;
								КонецЦикла;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
					
					ОблагаетсяНДФЛ = СуммаРез;
					КодДохода = "";
					КодВычета = "";
					ВидДохода = ВР.ВидДохода;
					Если ПустоеЗначение(ВидДохода) = 0 Тогда
						
						КодДохода = ВидДохода.Код;
						
						Если ВидДохода.ВидВычета.Выбран() = 1 Тогда
							КодВычета = ВидДохода.ВидВычета.Код;
						КонецЕсли;
					КонецЕсли;
					
					БухИтДФЛ.ВыбратьСчета();
					Пока БухИтДФЛ.ПолучитьСчет() = 1 Цикл
						Если БухИтДФЛ.Счет = СчДФЛ_2 Тогда
							СуммаПриходящаясяНаЕНВД = СуммаПриходящаясяНаЕНВД + БухИтДФЛ.КО();
						КонецЕсли;
					КонецЦикла;
				
					Если СуммаИзПрибыли &lt;&gt; 0 Тогда
						СуммаИзПрибылиНаЕНВД = ?(СуммаРез = 0, 0, СуммаПриходящаясяНаЕНВД / СуммаРез) * СуммаИзПрибыли;
					КонецЕсли;
					
					Если РасходыНаСтрахование &lt;&gt; 0 Тогда
						РасходыНаСтрахованиеНаЕНВД = ?(СуммаРез = 0, 0, СуммаПриходящаясяНаЕНВД / СуммаРез) * РасходыНаСтрахование;
					КонецЕсли;
					
					Если (ВР.ЕСН_ФБ = 0) и (ВР.ЕСН_ФСС = 0) и (ВР.ЕСН_ФОМС = 0) и (ВР.ПФР = 0) Тогда
						ПрочиеЛьготыНаЕНВД = СуммаПриходящаясяНаЕНВД - СуммаИзПрибылиНаЕНВД - РасходыНаСтрахованиеНаЕНВД;
						ПрочиеЛьготы = СуммаРез - СуммаИзПрибыли - РасходыНаСтрахование;
						
						СуммаПриходящаясяНаЕНВД = 0;
						СуммаРез = 0;
						
					ИначеЕсли(ВР.ЕСН_ФБ = 1) и (ВР.ЕСН_ФСС = 0) и (ВР.ЕСН_ФОМС = 1) и (СуммаРез - СуммаПриходящаясяНаЕНВД &lt;&gt; 0) Тогда
						СуммаПоДоговорамГПХ = СуммаРез;
						СуммаПоДоговорамГПХнаЕНВД = СуммаПриходящаясяНаЕНВД;
						
						СуммаПриходящаясяНаЕНВД = 0;
						СуммаРез = 0;
					
					Иначе
						СуммаРез = СуммаРез - СуммаИзПрибыли - РасходыНаСтрахование;
						СуммаПриходящаясяНаЕНВД = СуммаПриходящаясяНаЕНВД - СуммаИзПрибылиНаЕНВД - РасходыНаСтрахованиеНаЕНВД;
					КонецЕсли;
					
					Если УдержанныйНДФЛпоВсемСтавкам &lt;&gt; 0  Тогда
						УдержанныйНДФЛ.НоваяСтрока(); 
						УдержанныйНДФЛ.ФизЛицо = Сотрудник;            
						УдержанныйНДФЛ.МесяцНалоговогоПериода = БухИтДФЛ.НачДата;
						УдержанныйНДФЛ.ПериодРегистрации = БухИтДФЛ.НачДата;
						УдержанныйНДФЛ.СтавкаНалогообложения = СтрСтавкаНДФЛ;
						УдержанныйНДФЛ.Налог = УдержанныйНДФЛпоВсемСтавкам;
					КонецЕсли;
						
					Если КодДохода &lt;&gt; "" Тогда
						ДоходыНДФЛ.НоваяСтрока(); 
						ДоходыНДФЛ.ФизЛицо = Сотрудник;
						ДоходыНДФЛ.МесяцНалоговогоПериода = БухИтДФЛ.НачДата;
						ДоходыНДФЛ.ПериодРегистрации = БухИтДФЛ.НачДата;
						ДоходыНДФЛ.ДатаДохода = БухИтДФЛ.НачДата;
						ДоходыНДФЛ.КодДохода = КодДохода;
						ДоходыНДФЛ.СуммаДохода = ОблагаетсяНДФЛ;
						ДоходыНДФЛ.КодВычета = КодВычета;
						ДоходыНДФЛ.СуммаВычета = 0;
						ДоходыНДФЛ.СуммаНалогаИсчисленная = 0;
						
						Если КодДохода = "2000" Тогда
							ДоходОблагаемыйНДФЛ_СНачалаГода = ДоходОблагаемыйНДФЛ_СНачалаГода + ОблагаетсяНДФЛ;
						КонецЕсли;
					КонецЕсли;
					
					ОблагаетсяЕСН = (СуммаРез + СуммаПоДоговорамГПХ) - (СуммаПриходящаясяНаЕНВД + СуммаПоДоговорамГПХнаЕНВД);
					ОблагаетсяФСС = СуммаРез - СуммаПриходящаясяНаЕНВД;
					
					Если Инвалид = 1 Тогда
						НоваяЛьготаФБ = Мин(100000, ПримененнаяЛьготаФБ + ОблагаетсяЕСН);
						НоваяЛьготаФСС = Мин(100000, ПримененнаяЛьготаФСС + ОблагаетсяФСС);
						
						ПримененнаяЛьготаФБзаМесяц = ПримененнаяЛьготаФБзаМесяц + НоваяЛьготаФБ - ПримененнаяЛьготаФБ;
						ПримененнаяЛьготаФССзаМесяц = ПримененнаяЛьготаФССзаМесяц + НоваяЛьготаФСС - ПримененнаяЛьготаФСС;
						
						ПримененнаяЛьготаФБ = НоваяЛьготаФБ;
						ПримененнаяЛьготаФСС = НоваяЛьготаФСС;
					КонецЕсли;
					
					Если (СуммаРез - СуммаПриходящаясяНаЕНВД) &gt; 0 Тогда
						ДоходыЕСН.НоваяСтрока();
						ДоходыЕСН.ФизЛицо = Сотрудник;
						ДоходыЕСН.МесяцНалоговогоПериода = БухИтДФЛ.НачДата;
						ДоходыЕСН.КодДоходаЕСН = "00011";
						ДоходыЕСН.СуммаДохода = СуммаРез - СуммаПриходящаясяНаЕНВД;
						ДоходыЕСН.ОблагаетсяЕНВД = 0;
					КонецЕсли;
					
					Если СуммаПриходящаясяНаЕНВД &gt; 0 Тогда
						ДоходыЕСН.НоваяСтрока();
						ДоходыЕСН.ФизЛицо = Сотрудник;
						ДоходыЕСН.МесяцНалоговогоПериода = БухИтДФЛ.НачДата;
						ДоходыЕСН.КодДоходаЕСН = "00011";
						ДоходыЕСН.СуммаДохода = СуммаПриходящаясяНаЕНВД;
						ДоходыЕСН.ОблагаетсяЕНВД = 1;
					КонецЕсли;
					
					Если (СуммаИзПрибыли - СуммаИзПрибылиНаЕНВД) &gt; 0 Тогда
						ДоходыЕСН.НоваяСтрока();
						ДоходыЕСН.ФизЛицо = Сотрудник;
						ДоходыЕСН.МесяцНалоговогоПериода = БухИтДФЛ.НачДата;
						ДоходыЕСН.КодДоходаЕСН = "00002";
						ДоходыЕСН.СуммаДохода = СуммаИзПрибыли - СуммаИзПрибылиНаЕНВД;
						ДоходыЕСН.ОблагаетсяЕНВД = 0;
					КонецЕсли;
					
					Если СуммаИзПрибылиНаЕНВД &gt; 0 Тогда
						ДоходыЕСН.НоваяСтрока();
						ДоходыЕСН.ФизЛицо = Сотрудник;
						ДоходыЕСН.МесяцНалоговогоПериода = БухИтДФЛ.НачДата;
						ДоходыЕСН.КодДоходаЕСН = "00002";
						ДоходыЕСН.СуммаДохода = СуммаИзПрибылиНаЕНВД;
						ДоходыЕСН.ОблагаетсяЕНВД = 1;
					КонецЕсли;
					
					Если (РасходыНаСтрахование - РасходыНаСтрахованиеНаЕНВД) &gt; 0 Тогда
						ДоходыЕСН.НоваяСтрока();
						ДоходыЕСН.ФизЛицо = Сотрудник;
						ДоходыЕСН.МесяцНалоговогоПериода = БухИтДФЛ.НачДата;
						ДоходыЕСН.КодДоходаЕСН = "00004";
						ДоходыЕСН.СуммаДохода = РасходыНаСтрахование - РасходыНаСтрахованиеНаЕНВД;
						ДоходыЕСН.ОблагаетсяЕНВД = 0;
					КонецЕсли;
					
					Если РасходыНаСтрахованиеНаЕНВД &gt; 0 Тогда
						ДоходыЕСН.НоваяСтрока();
						ДоходыЕСН.ФизЛицо = Сотрудник;
						ДоходыЕСН.МесяцНалоговогоПериода = БухИтДФЛ.НачДата;
						ДоходыЕСН.КодДоходаЕСН = "00004";
						ДоходыЕСН.СуммаДохода = РасходыНаСтрахованиеНаЕНВД;
						ДоходыЕСН.ОблагаетсяЕНВД = 1;
					КонецЕсли;
			
					Если (ПрочиеЛьготы - ПрочиеЛьготыНаЕНВД) &gt; 0 Тогда
						ДоходыЕСН.НоваяСтрока();
						ДоходыЕСН.ФизЛицо = Сотрудник;
						ДоходыЕСН.МесяцНалоговогоПериода = БухИтДФЛ.НачДата;
						ДоходыЕСН.КодДоходаЕСН = "00003";
						ДоходыЕСН.СуммаДохода = ПрочиеЛьготы - ПрочиеЛьготыНаЕНВД;
						ДоходыЕСН.ОблагаетсяЕНВД = 0;
					КонецЕсли;
					
					Если ПрочиеЛьготыНаЕНВД &gt; 0 Тогда
						ДоходыЕСН.НоваяСтрока();
						ДоходыЕСН.ФизЛицо = Сотрудник;
						ДоходыЕСН.МесяцНалоговогоПериода = БухИтДФЛ.НачДата;
						ДоходыЕСН.КодДоходаЕСН = "00003";
						ДоходыЕСН.СуммаДохода = ПрочиеЛьготыНаЕНВД;
						ДоходыЕСН.ОблагаетсяЕНВД = 1;
					КонецЕсли;
					
					Если (СуммаПоДоговорамГПХ - СуммаПоДоговорамГПХнаЕНВД) &gt; 0 Тогда
						ДоходыЕСН.НоваяСтрока();
						ДоходыЕСН.ФизЛицо = Сотрудник;
						ДоходыЕСН.МесяцНалоговогоПериода = БухИтДФЛ.НачДата;
						ДоходыЕСН.КодДоходаЕСН = "00009";
						ДоходыЕСН.СуммаДохода = СуммаПоДоговорамГПХ - СуммаПоДоговорамГПХнаЕНВД;
						ДоходыЕСН.ОблагаетсяЕНВД = 0;
					КонецЕсли;
					
					Если СуммаПоДоговорамГПХнаЕНВД &gt; 0 Тогда
						ДоходыЕСН.НоваяСтрока();
						ДоходыЕСН.ФизЛицо = Сотрудник;
						ДоходыЕСН.МесяцНалоговогоПериода = БухИтДФЛ.НачДата;
						ДоходыЕСН.КодДоходаЕСН = "00009";
						ДоходыЕСН.СуммаДохода = СуммаПоДоговорамГПХнаЕНВД;
						ДоходыЕСН.ОблагаетсяЕНВД = 1;
					КонецЕсли;
					
					СуммаЕНВД = СуммаЕНВД + СуммаРез + СуммаПоДоговорамГПХ - ОблагаетсяЕСН;
					СуммаВсего = СуммаВсего + СуммаРез + СуммаПоДоговорамГПХ;
					
				КонецЕсли;
			КонецЦикла;
			
			СписокКолонок.УдалитьВсе();
			СписокКолонок.Установить("Объект", Сотрудник);
			СписокКолонок.Установить("Регистрация", БухИтДФЛ.КонДата);
			СотрЗапросПоЕСН = глОтобратьСтрокиТаблицы(ЗапросПоЕСН, СписокКолонок);
																	
			Если СотрЗапросПоЕСН.КоличествоСтрок() &gt; 0 Тогда
				СотрЗапросПоЕСН.ПолучитьСтрокуПоНомеру(1);
							 
				Если СуммаВсего &lt;&gt; 0 Тогда
					К_ЕНВД = СуммаЕНВД / СуммаВсего;
							
				Иначе
					К_ЕНВД = 0;
				КонецЕсли;
						
				ПФРНакопительнаяЕНВД = Окр(К_ЕНВД * СотрЗапросПоЕСН.ПФРНакопительная, 2, 1);
				ПФРСтраховаяЕНВД = Окр(К_ЕНВД * СотрЗапросПоЕСН.ПФРСтраховая, 2, 1);
						
				НачисленныйЕСН.НоваяСтрока();
				НачисленныйЕСН.ФизЛицо = Сотрудник;
				НачисленныйЕСН.МесяцНалоговогоПериода = БухИтДФЛ.НачДата;
				НачисленныйЕСН.ФедеральныйБюджет = СотрЗапросПоЕСН.ФедеральныйБюджет;
				НачисленныйЕСН.ФСС = СотрЗапросПоЕСН.ФСС;
				НачисленныйЕСН.ФФОМС = СотрЗапросПоЕСН.ФФОМС;
				НачисленныйЕСН.ТФОМС = СотрЗапросПоЕСН.ТФОМС;
				НачисленныйЕСН.ПФРНакопительная = СотрЗапросПоЕСН.ПФРНакопительная;
				НачисленныйЕСН.ПФРСтраховая = СотрЗапросПоЕСН.ПФРСтраховая;
				НачисленныйЕСН.ПримененнаяЛьготаФБ = ПримененнаяЛьготаФБзаМесяц;
				НачисленныйЕСН.ПримененнаяЛьготаФСС = ПримененнаяЛьготаФССзаМесяц;
				НачисленныйЕСН.ПримененнаяЛьготаФОМС = ПримененнаяЛьготаФБзаМесяц;
				НачисленныйЕСН.ПФРНакопительнаяЕНВД = ПФРНакопительнаяЕНВД;
				НачисленныйЕСН.ПФРСтраховаяЕНВД = ПФРСтраховаяЕНВД;
						
				Если ПорядокИсчисленияЕСН = 2 Тогда
					НачисленныйЕСН.ФедеральныйБюджет = НачисленныйЕСН.ФедеральныйБюджет + НачисленныйЕСН.ПФРНакопительная + НачисленныйЕСН.ПФРСтраховая - ПФРНакопительнаяЕНВД - ПФРСтраховаяЕНВД;
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
		// Примененные вычеты
		Если СуммаВсего &lt;&gt; 0 Тогда
			Если глСотрудникЧислитсяРаботающим(Сотрудник, БухИтДФЛ.КонДата) = 1 Тогда
				ВычетыСотрудниковПоНДФЛ.ИспользоватьВладельца(Сотрудник);
				ВычетыСотрудниковПоНДФЛ.ВыбратьЭлементы();
				Пока ВычетыСотрудниковПоНДФЛ.ПолучитьЭлемент() = 1 Цикл
					
					Вычеты = 0;
					
					Если (Лев(ВычетыСотрудниковпоНДФЛ.ВидВычета.КодДляОтчетности2009, 1)) &lt;&gt; "1" Тогда
						Продолжить;
					КонецЕсли;
					
					Если ВычетыСотрудниковПоНДФЛ.ПометкаУдаления() = 1 Тогда
						Продолжить;
					КонецЕсли;
					
					ВычетПредоставлялся = 0;
					Если ПустоеЗначение(ВычетыСотрудниковПоНДФЛ.ДатаНачала) = 1 Тогда
						ВычетПредоставлялся = 0;							
					Иначе
						Если ВычетыСотрудниковПоНДФЛ.ДатаНачала &gt; БухИтДФЛ.КонДата Тогда
							ВычетПредоставлялся = 0;
						Иначе
							Если ПустоеЗначение(ВычетыСотрудниковПоНДФЛ.ДатаОкончания) = 1 Тогда
								ВычетПредоставлялся = 1;
							Иначе
								Если ВычетыСотрудниковПоНДФЛ.ДатаОкончания &lt; НачМесяца(БухИтДФЛ.КонДата) Тогда
									ВычетПредоставлялся = 0;
								Иначе
									ВычетПредоставлялся = 1;
								КонецЕсли;
								
							КонецЕсли;
						КонецЕсли;
						
					КонецЕсли;
					
					Если ВычетПредоставлялся = 0 Тогда
						Продолжить;
					КонецЕсли;
					
					РазмерВычета = ВычетыСотрудниковПоНДФЛ.ВидВычета.Сумма.Получить(БухИтДФЛ.КонДата);
					ПределДоходов = ВычетыСотрудниковПоНДФЛ.ВидВычета.ПределДоходов.Получить(БухИтДФЛ.КонДата);
					
					Если ПределДоходов &gt; 0 Тогда							
						Вычеты = РазмерВычета*?((ДоходОблагаемыйНДФЛ_СНачалаГода+ВаловойДоход_СНачалаГода)&lt;=ПределДоходов,1,0);
					Иначе
						Вычеты = РазмерВычета;
					КонецЕсли;
					
					Если (Вычеты &lt;&gt; 0) Тогда 
						Если ДоходОблагаемыйНДФЛ_СНачалаГода_Пред+ВаловойДоход_СНачалаГода &lt;&gt; ДоходОблагаемыйНДФЛ_СНачалаГода+ВаловойДоход_СНачалаГода Тогда // нет начислений - накапливаем вычеты
							ИсчисленныйНДФЛ.НоваяСтрока();
							ИсчисленныйНДФЛ.ФизЛицо = Сотрудник;            
							ИсчисленныйНДФЛ.МесяцНалоговогоПериода = БухИтДФЛ.НачДата;
							ИсчисленныйНДФЛ.ПериодРегистрации = БухИтДФЛ.НачДата;
							ИсчисленныйНДФЛ.Налог = 0;
							ИсчисленныйНДФЛ.ПримененныйВычет = Вычеты;
							ИсчисленныйНДФЛ.КодВычета = ВычетыСотрудниковПоНДФЛ.ВидВычета;
							ИсчисленныйНДФЛНакопительный.ВыбратьСтроки();
							Пока ИсчисленныйНДФЛНакопительный.ПолучитьСтроку() = 1 Цикл
								Если Сотрудник = ИсчисленныйНДФЛНакопительный.ФизЛицо тогда
									ИсчисленныйНДФЛ.НоваяСтрока();
									ИсчисленныйНДФЛ.ФизЛицо = Сотрудник;            
									ИсчисленныйНДФЛ.МесяцНалоговогоПериода = БухИтДФЛ.НачДата;
									ИсчисленныйНДФЛ.ПериодРегистрации = БухИтДФЛ.НачДата;
									ИсчисленныйНДФЛ.Налог = 0;
									ИсчисленныйНДФЛ.ПримененныйВычет = ИсчисленныйНДФЛНакопительный.ПримененныйВычет;
									ИсчисленныйНДФЛ.КодВычета = ИсчисленныйНДФЛНакопительный.КодВычета;					
									ИсчисленныйНДФЛНакопительный.УдалитьСтроки();
								КонецЕсли;
							КонецЦикла;
						Иначе
							ИсчисленныйНДФЛНакопительный.НоваяСтрока();
							ИсчисленныйНДФЛНакопительный.ФизЛицо = Сотрудник;            
							ИсчисленныйНДФЛНакопительный.МесяцНалоговогоПериода = БухИтДФЛ.НачДата;
							ИсчисленныйНДФЛНакопительный.ПериодРегистрации = БухИтДФЛ.НачДата;
							ИсчисленныйНДФЛНакопительный.Налог = 0;
							ИсчисленныйНДФЛНакопительный.ПримененныйВычет = Вычеты;
							ИсчисленныйНДФЛНакопительный.КодВычета = ВычетыСотрудниковПоНДФЛ.ВидВычета;					
						КонецЕсли;
					КонецЕсли;					
				КонецЦикла;
					
				ДоходОблагаемыйНДФЛ_СНачалаГода_Пред = ДоходОблагаемыйНДФЛ_СНачалаГода;
				
				Если (УдержанныйНДФЛпоСт13 &lt;&gt; 0) Тогда
					ИсчисленныйНДФЛ.НоваяСтрока();
					ИсчисленныйНДФЛ.ФизЛицо = Сотрудник;            
					ИсчисленныйНДФЛ.МесяцНалоговогоПериода = БухИтДФЛ.НачДата;
					ИсчисленныйНДФЛ.ПериодРегистрации = БухИтДФЛ.НачДата;
					ИсчисленныйНДФЛ.Налог = УдержанныйНДФЛпоСт13;
					ИсчисленныйНДФЛ.ПримененныйВычет = 0;
					ИсчисленныйНДФЛ.КодВычета = "";
				КонецЕсли;
				
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	ИсчисленныйНДФЛНакопительный.УдалитьСтроки();
КонецЦикла;

ДоходыНДФЛ.Свернуть("ФизЛицо,МесяцНалоговогоПериода,ПериодРегистрации,ДатаДохода,КодДохода,КодВычета", "СуммаДохода,СуммаВычета,СуммаНалогаИсчисленная");
ИсчисленныйНДФЛ.Свернуть("ФизЛицо,МесяцНалоговогоПериода,ПериодРегистрации,КодВычета","Налог,ПримененныйВычет");

ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Начисления", Задолженность);
ВходящиеДанные.Установить("НДФЛСведенияОДоходах", ДоходыНДФЛ);
ВходящиеДанные.Установить("НДФЛИсчисленный13", ИсчисленныйНДФЛ);
ВходящиеДанные.Установить("НДФЛПредоставленныеВычеты", ИсчисленныйНДФЛ);
ВходящиеДанные.Установить("НДФЛУдержанный", УдержанныйНДФЛ);

Если ДатаГод(ДатаВводаОстатков) &gt;= 2010 Тогда
	ДоходыЕСН.УдалитьСтроки();	
	НачисленныйЕСН.УдалитьСтроки();
Иначе
	ДоходыСВЗ.УдалитьСтроки();
	НачисленныйСВЗ.УдалитьСтроки();	
КонецЕсли;

ВходящиеДанные.Установить("ЕСНСведенияОДоходах", ДоходыЕСН);
ВходящиеДанные.Установить("ЕСННалоги", НачисленныйЕСН);

ВходящиеДанные.Установить("СтраховыеВзносыСведенияОДоходах", ДоходыСВЗ);	
ВходящиеДанные.Установить("СтраховыеВзносы", НачисленныйСВЗ);

ВходящиеДанные.Установить("НалоговыйПериод", ДатаГод(ДатаВводаОстатков));

ВыгрузитьПоПравилу(,, ВходящиеДанные,, "НДФЛиЕСНДоходыИНалоги");

//****************** даные об оплатах для 2010 г.

Если (Параметры.ДатаКонцаПериодаВыгрузки &gt; ДатаВводаОстатков)
	И (ДатаГод(ДатаВводаОстатков) &gt;= 2010)Тогда
	
	БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
	БухИт.ИспользоватьСубконто();	
	Месяц = ДатаМесяц(Параметры.ДатаКонцаПериодаВыгрузки);
	    
	ОснТекстКомментария = "# Перенесено из 1С:Бухгалтерии 7.7 #";
	
		Для НомерМесяца = 1 По Месяц Цикл
		БухИт.ПериодМ(НомерМесяца, ДатаГод(Параметры.ДатаКонцаПериодаВыгрузки));
		
		ТекстКомментария = ОснТекстКомментария + " # период: " +ПериодСтр(БухИт.НачПериода(),БухИт.КонПериода()) + " # ";
		
				
		ПФРСтраховая = 0;
		ПФРНакопительная = 0;
		ФФОМС = 0;
		ТФОМС = 0;
		ФСС = 0;
		ФССНесчастныеСлучаи = 0;
		
		ПФРСтраховая2009 = 0;
		ПФРНакопительная2009 = 0;
		ФФОМС2009 = 0;
		ТФОМС2009 = 0;
		ФСС2009 = 0;
		
		Для НомерЗначения = 1 По Перечисление.ВидыПлатежейВБюджет.КоличествоЗначений() Цикл
			
			ТекЗначение = Перечисление.ВидыПлатежейВБюджет.ЗначениеПоНомеру(НомерЗначения);
			
			ПФРСтраховая = 			БухИт.ДО("69.2.2",,,ТекЗначение);
			ПФРНакопительная = 		БухИт.ДО("69.2.3",,,ТекЗначение);
			ФФОМС = 				БухИт.ДО("69.3.1",,,ТекЗначение);
			ТФОМС = 				БухИт.ДО("69.3.2",,,ТекЗначение);			
			
			Если (ПФРСтраховая + ПФРНакопительная) &lt;&gt; 0 Тогда				
				ВходящиеДанные = СоздатьОбъект("СписокЗначений");
				ВходящиеДанные.Установить("Дата", 					БухИт.КонПериода());
				ВходящиеДанные.Установить("ДатаПлатежа", 			БухИт.КонПериода());
				ВходящиеДанные.Установить("МесяцРасчетногоПериода",	БухИт.НачПериода());
				ВходящиеДанные.Установить("ВидПлатежа", 			ТекЗначение);
				ВходящиеДанные.Установить("ИмяПКО", 				"ВидыПлатежейВБюджет");
				ВходящиеДанные.Установить("ПФРНакопительная", 		ПФРНакопительная);
				ВходящиеДанные.Установить("ПФРСтраховая", 			ПФРСтраховая);
				ВходящиеДанные.Установить("ТФОМС", 					0);
				ВходящиеДанные.Установить("ФСС", 					0);
				ВходящиеДанные.Установить("ФССНесчастныеСлучаи", 	0);
				ВходящиеДанные.Установить("ФФОМС", 					0);
				ВходящиеДанные.Установить("ВидОперации",			"УплатаПФР");
				ВходящиеДанные.Установить("Комментарий",			ТекстКомментария + " # ПФР # ");
				ВыгрузитьПоПравилу(,, ВходящиеДанные,, "РасчетыПоСтраховымВзносам");
			КонецЕсли;
			
			Если (ФФОМС + ТФОМС) &lt;&gt; 0 Тогда				
				ВходящиеДанные = СоздатьОбъект("СписокЗначений");
				ВходящиеДанные.Установить("Дата", 					БухИт.КонПериода());
				ВходящиеДанные.Установить("ДатаПлатежа", 			БухИт.КонПериода());
				ВходящиеДанные.Установить("МесяцРасчетногоПериода",	БухИт.НачПериода());
				ВходящиеДанные.Установить("ВидПлатежа", 			ТекЗначение);
				ВходящиеДанные.Установить("ИмяПКО", 				"ВидыПлатежейВБюджет");
				ВходящиеДанные.Установить("ПФРНакопительная", 		0);
				ВходящиеДанные.Установить("ПФРСтраховая", 			0);
				ВходящиеДанные.Установить("ТФОМС", 					ТФОМС);
				ВходящиеДанные.Установить("ФСС", 					0);
				ВходящиеДанные.Установить("ФССНесчастныеСлучаи", 	0);
				ВходящиеДанные.Установить("ФФОМС", 					ФФОМС);
				ВходящиеДанные.Установить("ВидОперации",			"УплатаФОМС");
				ВходящиеДанные.Установить("Комментарий",			ТекстКомментария + " # ФОМС # ");
				ВыгрузитьПоПравилу(,, ВходящиеДанные,, "РасчетыПоСтраховымВзносам");
			КонецЕсли;
			
			ПФРСтраховая2009 = 			БухИт.ДО("69.21.1",,,ТекЗначение);
			ПФРНакопительная2009 = 		БухИт.ДО("69.21.2",,,ТекЗначение);
			ФФОМС2009 = 				БухИт.ДО("69.21.3",,,ТекЗначение);
			ТФОМС2009 = 				БухИт.ДО("69.21.4",,,ТекЗначение);			
			
			Если (ПФРСтраховая2009 + ПФРНакопительная2009) &lt;&gt; 0 Тогда				
				ВходящиеДанные = СоздатьОбъект("СписокЗначений");
				ВходящиеДанные.Установить("Дата", 					БухИт.КонПериода());
				ВходящиеДанные.Установить("ДатаПлатежа", 			БухИт.КонПериода());
				ВходящиеДанные.Установить("МесяцРасчетногоПериода",	'01.12.2009');
				ВходящиеДанные.Установить("ВидПлатежа", 			ТекЗначение);
				ВходящиеДанные.Установить("ИмяПКО", 				"ВидыПлатежейВБюджет");
				ВходящиеДанные.Установить("ПФРНакопительная", 		ПФРНакопительная2009);
				ВходящиеДанные.Установить("ПФРСтраховая", 			ПФРСтраховая2009);
				ВходящиеДанные.Установить("ТФОМС", 					0);
				ВходящиеДанные.Установить("ФСС", 					0);
				ВходящиеДанные.Установить("ФССНесчастныеСлучаи", 	0);
				ВходящиеДанные.Установить("ФФОМС", 					0);
				ВходящиеДанные.Установить("ВидОперации",			"УплатаПФР");
				ВходящиеДанные.Установить("Комментарий",			ТекстКомментария + " # ПФР за 2009 г.# ");
				ВыгрузитьПоПравилу(,, ВходящиеДанные,, "РасчетыПоСтраховымВзносам");
			КонецЕсли;
			
			Если (ФФОМС2009 + ТФОМС2009) &lt;&gt; 0 Тогда				
				ВходящиеДанные = СоздатьОбъект("СписокЗначений");
				ВходящиеДанные.Установить("Дата", 					БухИт.КонПериода());
				ВходящиеДанные.Установить("ДатаПлатежа", 			БухИт.КонПериода());
				ВходящиеДанные.Установить("МесяцРасчетногоПериода",	'01.12.2009');
				ВходящиеДанные.Установить("ВидПлатежа", 			ТекЗначение);
				ВходящиеДанные.Установить("ИмяПКО", 				"ВидыПлатежейВБюджет");
				ВходящиеДанные.Установить("ПФРНакопительная", 		0);
				ВходящиеДанные.Установить("ПФРСтраховая", 			0);
				ВходящиеДанные.Установить("ТФОМС", 					ТФОМС2009);
				ВходящиеДанные.Установить("ФСС", 					0);
				ВходящиеДанные.Установить("ФССНесчастныеСлучаи", 	0);
				ВходящиеДанные.Установить("ФФОМС", 					ФФОМС2009);
				ВходящиеДанные.Установить("ВидОперации",			"УплатаФОМС");
				ВходящиеДанные.Установить("Комментарий",			ТекстКомментария + " # ФОМС за 2009 г.# ");
				ВыгрузитьПоПравилу(,, ВходящиеДанные,, "РасчетыПоСтраховымВзносам");
			КонецЕсли;
			
		КонецЦикла;
		
		Для НомерЗначения = 1 По Перечисление.ВидыПлатежейВФонды.КоличествоЗначений() Цикл
			
			ТекЗначение = Перечисление.ВидыПлатежейВФонды.ЗначениеПоНомеру(НомерЗначения);
			
			ФСС = 					БухИт.ДО("69.1",,,ТекЗначение);
			ФССНесчастныеСлучаи = 	БухИт.ДО("69.11",,,ТекЗначение);
			
			Если (ФСС + ФССНесчастныеСлучаи) &lt;&gt; 0 Тогда				
				ВходящиеДанные = СоздатьОбъект("СписокЗначений");
				ВходящиеДанные.Установить("Дата", 					БухИт.КонПериода());
				ВходящиеДанные.Установить("ДатаПлатежа", 			БухИт.КонПериода());
				ВходящиеДанные.Установить("МесяцРасчетногоПериода",	БухИт.НачПериода());
				ВходящиеДанные.Установить("ВидПлатежа", 			ТекЗначение);
				ВходящиеДанные.Установить("ИмяПКО", 				"ВидыПлатежейВФонды");
				ВходящиеДанные.Установить("ПФРНакопительная", 		0);
				ВходящиеДанные.Установить("ПФРСтраховая", 			0);
				ВходящиеДанные.Установить("ТФОМС", 					0);
				ВходящиеДанные.Установить("ФСС", 					ФСС);
				ВходящиеДанные.Установить("ФССНесчастныеСлучаи", 	ФССНесчастныеСлучаи);
				ВходящиеДанные.Установить("ФФОМС", 					0);
				ВходящиеДанные.Установить("ВидОперации",			"УплатаФСС");
				ВходящиеДанные.Установить("Комментарий",			ТекстКомментария + " # ФСС # ");
				ВыгрузитьПоПравилу(,, ВходящиеДанные,, "РасчетыПоСтраховымВзносам");
			КонецЕсли;
			
			ФСС2009 = 					БухИт.ДО("69.21.5",,,ТекЗначение);
			
			Если ФСС2009 &lt;&gt; 0 Тогда				
				ВходящиеДанные = СоздатьОбъект("СписокЗначений");
				ВходящиеДанные.Установить("Дата", 					БухИт.КонПериода());
				ВходящиеДанные.Установить("ДатаПлатежа", 			БухИт.КонПериода());
				ВходящиеДанные.Установить("МесяцРасчетногоПериода",	'01.12.2009');
				ВходящиеДанные.Установить("ВидПлатежа", 			ТекЗначение);
				ВходящиеДанные.Установить("ИмяПКО", 				"ВидыПлатежейВФонды");
				ВходящиеДанные.Установить("ПФРНакопительная", 		0);
				ВходящиеДанные.Установить("ПФРСтраховая", 			0);
				ВходящиеДанные.Установить("ТФОМС", 					0);
				ВходящиеДанные.Установить("ФСС", 					ФСС2009);
				ВходящиеДанные.Установить("ФССНесчастныеСлучаи", 	0);
				ВходящиеДанные.Установить("ФФОМС", 					0);
				ВходящиеДанные.Установить("ВидОперации",			"УплатаФСС");
				ВходящиеДанные.Установить("Комментарий",			ТекстКомментария + " # ФСС за 2009 г.# ");
				ВыгрузитьПоПравилу(,, ВходящиеДанные,, "РасчетыПоСтраховымВзносам");
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;

КонецЕсли;</ПередОбработкойПравила>
			</Правило>
		</Группа>
	</ПравилаВыгрузкиДанных>
	<ПравилаОчисткиДанных/>
	<Алгоритмы>
		<Алгоритм Имя="ВыгрузитьИтогиПоСчету004" ИспользуетсяПриЗагрузке="false">
			<Текст>РегистрБух = Параметры.ПараметрыАлгоритмов.Получить("Регистр");

	
Сч004 = СчетПоКоду("004");
СчКМС = СчетПоКоду("КМС");

Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", Сч004);

ПроводкиОбороты = Параметры.ТаблицаПроводокОбороты;
	
Проводки = Параметры.ТаблицаПроводок;
Проводки.УдалитьСтроки();
	
БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
БухИт.ИспользоватьСубконто(ВидыСубконто.Номенклатура);
БухИт.ИспользоватьСубконто(ВидыСубконто.Договоры);
Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	БухИт.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков,, "004");
		
Иначе
	БухИт.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков, Параметры.ДатаКонцаПериодаВыгрузки, "004",,,, "Месяц",);
КонецЕсли;
	
БухИтКМС = СоздатьОбъект("БухгалтерскиеИтоги");
БухИтКМС.ИспользоватьСубконто(ВидыСубконто.Номенклатура);
БухИтКМС.ИспользоватьСубконто(ВидыСубконто.ДоговорыС_Комитентами);
БухИтКМС.ИспользоватьСубконто(ВидыСубконто.ДоговорыС_Комиссионерами);
Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	БухИтКМС.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков,, "КМС");
		
Иначе
	БухИтКМС.ВыполнитьЗапрос(, Параметры.ДатаКонцаПериодаВыгрузки, "КМС");
КонецЕсли;
	
БухИт.ВыбратьПериоды(1);
Пока БухИт.ПолучитьПериод() = 1 Цикл
		
	ПроводкиОбороты.УдалитьСтроки();
	
	БухИт.ВыбратьСубконто(1, 1);
	Пока БухИт.ПолучитьСубконто(1) = 1 Цикл
		Если БухИт.Субконто(1).ЭтоГруппа() = 1 Тогда
			Продолжить;
		КонецЕсли;
			
		БухИт.ВыбратьСубконто(2, 1);
		Пока БухИт.ПолучитьСубконто(2) = 1 Цикл
				
			// Выгрузка остатков
			Если НачМесяца(Параметры.ДатаВводаОстатков) = БухИт.НачДата Тогда
				Если (БухИт.СНД(1) &lt;&gt; 0) или (БухИт.СНД(3) &lt;&gt; 0) Тогда
					Проводки.НоваяСтрока();
					Проводки.СчетДт = Сч004;
					Проводки.КодСчетаДт = "";
					Проводки.ВидУчетаДт = "НУ";
					Проводки.СубконтоДт = СоздатьОбъект("ТаблицаЗначений");
					Проводки.СубконтоДт.НоваяКолонка("Ключ");
					Проводки.СубконтоДт.НоваяКолонка("Значение");
					Проводки.СубконтоДт.НоваяСтрока();
					Проводки.СубконтоДт.Ключ = ВидыСубконто.Договоры;
					Проводки.СубконтоДт.Значение = БухИт.Субконто(2);
					Проводки.СубконтоДт.НоваяСтрока();
					Проводки.СубконтоДт.Ключ = ВидыСубконто.Номенклатура;
					Проводки.СубконтоДт.Значение = БухИт.Субконто(1);					
					Проводки.КоличествоДт = БухИт.СНД(3);
					Проводки.Сумма = БухИт.СНД(1);
				КонецЕсли;
			КонецЕсли;
				
			// Выгрузка оборотов по дебету
			Если (БухИт.ДО(1) &lt;&gt; 0) или (БухИт.ДО(3) &lt;&gt; 0) Тогда
				ПроводкиОбороты.НоваяСтрока();
				ПроводкиОбороты.СчетДт = Сч004;
				ПроводкиОбороты.КодСчетаДт = "";
				ПроводкиОбороты.ВидУчетаДт = "НУ";
				ПроводкиОбороты.СубконтоДт = СоздатьОбъект("ТаблицаЗначений");
				ПроводкиОбороты.СубконтоДт.НоваяКолонка("Ключ");
				ПроводкиОбороты.СубконтоДт.НоваяКолонка("Значение");
				ПроводкиОбороты.СубконтоДт.НоваяСтрока();
				ПроводкиОбороты.СубконтоДт.Ключ = ВидыСубконто.Договоры;
				ПроводкиОбороты.СубконтоДт.Значение = БухИт.Субконто(2);
				ПроводкиОбороты.СубконтоДт.НоваяСтрока();
				ПроводкиОбороты.СубконтоДт.Ключ = ВидыСубконто.Номенклатура;
				ПроводкиОбороты.СубконтоДт.Значение = БухИт.Субконто(1);				
				ПроводкиОбороты.КоличествоДт = БухИт.ДО(3);
				ПроводкиОбороты.Сумма = БухИт.ДО(1);
			КонецЕсли;
				
			// Выгрузка оборотов по кредиту
			Если (БухИт.КО(1) &lt;&gt; 0) или (БухИт.КО(3) &lt;&gt; 0) Тогда
				ПроводкиОбороты.НоваяСтрока();
				ПроводкиОбороты.СчетКт = Сч004;
				ПроводкиОбороты.КодСчетаКт = "";
				ПроводкиОбороты.ВидУчетаКт = "НУ";
				ПроводкиОбороты.СубконтоКт = СоздатьОбъект("ТаблицаЗначений");
				ПроводкиОбороты.СубконтоКт.НоваяКолонка("Ключ");
				ПроводкиОбороты.СубконтоКт.НоваяКолонка("Значение");
				ПроводкиОбороты.СубконтоКт.НоваяСтрока();
				ПроводкиОбороты.СубконтоКт.Ключ = ВидыСубконто.Договоры;
				ПроводкиОбороты.СубконтоКт.Значение = БухИт.Субконто(2);
				ПроводкиОбороты.СубконтоКт.НоваяСтрока();
				ПроводкиОбороты.СубконтоКт.Ключ = ВидыСубконто.Номенклатура;
				ПроводкиОбороты.СубконтоКт.Значение = БухИт.Субконто(1);				
				ПроводкиОбороты.КоличествоКт = БухИт.КО(3);
				ПроводкиОбороты.Сумма = БухИт.КО(1);
			КонецЕсли;
				
			// Списание части конечного остатка с Дт 004.01 в Кт 004.02
			Если (КонМесяца(Параметры.ДатаКонцаПериодаВыгрузки) = КонМесяца(БухИт.КонДата)) или (Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки) Тогда
					
				Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
					КоличествоВсего = БухИт.СНД(3);
					СтоимостьВсего = БухИт.СНД(1);
						
				Иначе
					КоличествоВсего = БухИт.СКД(3);
					СтоимостьВсего = БухИт.СКД(1);
				КонецЕсли;
					
				Если КоличествоВсего &lt;&gt; 0 Тогда
						
					Распределено = 0;
						
					Если БухИтКМС.ПолучитьСубконто(ВидыСубконто.Номенклатура,, БухИт.Субконто(1)) = 1 Тогда
						Если БухИтКМС.ПолучитьСубконто(ВидыСубконто.ДоговорыС_Комитентами,, БухИт.Субконто(2)) = 1 Тогда
							БухИтКМС.ВыбратьСубконто(ВидыСубконто.ДоговорыС_Комиссионерами);
							Пока БухИтКМС.ПолучитьСубконто(ВидыСубконто.ДоговорыС_Комиссионерами) = 1 Цикл
									
								Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
									КоличествоПроводки = БухИтКМС.СНД(3);
									СуммаПроводки = Окр(СтоимостьВсего * БухИтКМС.СНД(3) / КоличествоВсего, 2, 1);
										
								Иначе
									КоличествоПроводки = БухИтКМС.СКД(3);
									СуммаПроводки = Окр(СтоимостьВсего * БухИтКМС.СКД(3) / КоличествоВсего, 2, 1);
								КонецЕсли;
									
								ПроводкиОбороты.НоваяСтрока();
								ПроводкиОбороты.СчетДт = Сч004;
								ПроводкиОбороты.КодСчетаДт = "004.02";
								ПроводкиОбороты.ВидУчетаДт = "НУ";
								ПроводкиОбороты.СубконтоДт = СоздатьОбъект("ТаблицаЗначений");
								ПроводкиОбороты.СубконтоДт.НоваяКолонка("Ключ");
								ПроводкиОбороты.СубконтоДт.НоваяКолонка("Значение");
								ПроводкиОбороты.СубконтоДт.НоваяСтрока();
								ПроводкиОбороты.СубконтоДт.Ключ = ВидыСубконто.Договоры;
								ПроводкиОбороты.СубконтоДт.Значение = БухИт.Субконто(2);
								ПроводкиОбороты.СубконтоДт.НоваяСтрока();
								ПроводкиОбороты.СубконтоДт.Ключ = ВидыСубконто.Номенклатура;
								ПроводкиОбороты.СубконтоДт.Значение = БухИт.Субконто(1);								
								ПроводкиОбороты.СубконтоДт.НоваяСтрока();
								ПроводкиОбороты.СубконтоДт.Ключ = ВидыСубконто.Контрагенты;
								ПроводкиОбороты.СубконтоДт.Значение = БухИтКМС.Субконто(3).Владелец;
									
								ПроводкиОбороты.КоличествоДт = КоличествоПроводки;
																		
								ПроводкиОбороты.СчетКт = Сч004;
								ПроводкиОбороты.КодСчетаКт = "";
								ПроводкиОбороты.ВидУчетаКт = "НУ";
								ПроводкиОбороты.СубконтоКт = СоздатьОбъект("ТаблицаЗначений");
								ПроводкиОбороты.СубконтоКт.НоваяКолонка("Ключ");
								ПроводкиОбороты.СубконтоКт.НоваяКолонка("Значение");
								ПроводкиОбороты.СубконтоКт.НоваяСтрока();
								ПроводкиОбороты.СубконтоКт.Ключ = ВидыСубконто.Договоры;
								ПроводкиОбороты.СубконтоКт.Значение = БухИт.Субконто(2);
								ПроводкиОбороты.СубконтоКт.НоваяСтрока();
								ПроводкиОбороты.СубконтоКт.Ключ = ВидыСубконто.Номенклатура;
								ПроводкиОбороты.СубконтоКт.Значение = БухИт.Субконто(1);								
									
								ПроводкиОбороты.КоличествоКт = КоличествоПроводки;
								ПроводкиОбороты.Сумма = СуммаПроводки;
									
								Распределено = Распределено + СуммаПроводки;
									
							КонецЦикла;
								
							Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
								КоличествоОтгруженное = БухИтКМС.СНД(3);
									
							Иначе
								КоличествоОтгруженное = БухИтКМС.СКД(3);
							КонецЕсли;
								
							Если (КоличествоВсего = КоличествоОтгруженное) и (Распределено &lt;&gt; СтоимостьВсего) Тогда
								ПроводкиОбороты.Сумма = ПроводкиОбороты.Сумма + СтоимостьВсего - Распределено;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
		
	Если НачМесяца(Параметры.ДатаВводаОстатков) = БухИт.НачДата Тогда
		
		ВходящиеДанные = СоздатьОбъект("СписокЗначений");
		ВходящиеДанные.Установить(РегистрБух, Проводки);
		ВходящиеДанные.Установить("Счет", Сч004);
		ВходящиеДанные.Установить("Дата", БухИт.НачДата-1);
		Если РегистрБух = "Налоговый" Тогда
			//ПодготовитьТаблицуОстатковНУ(); 
		Иначе
			РазделУчета = "ПрочиеСчетаБухгалтерскогоУчета";
			ВходящиеДанные.Установить("ВходящиеОстатки", Проводки);
			ВходящиеДанные.Установить("Счет", Сч004);
			ВходящиеДанные.Установить("Дата", БухИт.НачДата-1);
			ВходящиеДанные.Установить("РазделУчета", РазделУчета);
			ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
			ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
			ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
			ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ВводНачальныхОстатков");
		КонецЕсли;
	КонецЕсли;
	
	
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
	ВходящиеДанные.Установить(РегистрБух, ПроводкиОбороты);
	ВходящиеДанные.Установить("Счет", Сч004);
	Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
		ВходящиеДанные.Установить("Дата", БухИт.КонДата);
	Иначе
		ВходящиеДанные.Установить("Дата", БухИт.НачДата-1);
	КонецЕсли;
	ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияБух");
	
КонецЦикла;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВыгрузитьКорреспонденции" ИспользуетсяПриЗагрузке="false">
			<Текст>БухИт = Параметры.ПараметрыАлгоритмов.Получить("БухИт");

БухИт.ВыбратьКорСчета(1);
Пока БухИт.ПолучитьКорСчет() = 1 Цикл
	
	КоличествоУровней = БухИт.КорСчет.КоличествоСубконто();
	
	Если КоличествоУровней = 0 Тогда
		Параметры.ПараметрыАлгоритмов.Установить("ТолькоСумма", 0);
		
		Если (БухИт.Счет.Валютный = 0) и (БухИт.КорСчет.Валютный = 1) Тогда
			БухИт.ВыбратьВалюты(-1);
			Пока БухИт.ПолучитьВалюту() = 1 Цикл
				ПолучитьИтогиПоСчету();
				ДобавитьПроводкуОбороты();
			КонецЦикла;
			
		Иначе
			ПолучитьИтогиПоСчету();
			ДобавитьПроводкуОбороты();
		КонецЕсли;
			
	ИначеЕсли КоличествоУровней &gt; 0 Тогда
		БухИт.ВыбратьКорСубконто(1, -1);
		Пока БухИт.ПолучитьКорСубконто(1) = 1 Цикл
			
			Если ТипЗначенияСтр(БухИт.КорСубконто(1)) = "Справочник" Тогда
				Если БухИт.КорСубконто(1).ЭтоГруппа() = 1 Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			Если КоличествоУровней = 1 Тогда
				Параметры.ПараметрыАлгоритмов.Установить("ТолькоСумма", 0);
				
				Если (БухИт.Счет.Валютный = 0) и (БухИт.КорСчет.Валютный = 1) Тогда
					БухИт.ВыбратьВалюты(-1);
					Пока БухИт.ПолучитьВалюту() = 1 Цикл
						ПолучитьИтогиПоСчету();
						ДобавитьПроводкуОбороты();
					КонецЦикла;
					
				Иначе
					ПолучитьИтогиПоСчету();
					ДобавитьПроводкуОбороты();
				КонецЕсли;
				
			ИначеЕсли КоличествоУровней &gt; 1 Тогда
				
				Если (БухИт.КорСчет.УчетПоСумме(2) = 0) и (КоличествоУровней = 2) Тогда
					Параметры.ПараметрыАлгоритмов.Установить("ТолькоСумма", 1);
					Параметры.ПараметрыАлгоритмов.Установить("ТекНомерСубконто", 1);
					
					Если (БухИт.Счет.Валютный = 0) и (БухИт.КорСчет.Валютный = 1) Тогда
						БухИт.ВыбратьВалюты(-1);
						Пока БухИт.ПолучитьВалюту() = 1 Цикл
							ПолучитьИтогиПоСчету();
							ДобавитьПроводкуОбороты();
						КонецЦикла;
						
					Иначе
						ПолучитьИтогиПоСчету();
						ДобавитьПроводкуОбороты();
					КонецЕсли;
				КонецЕсли;
				
				БухИт.ВыбратьКорСубконто(2, -1);
				Пока БухИт.ПолучитьКорСубконто(2) = 1 Цикл
					Если ТипЗначенияСтр(БухИт.КорСубконто(2)) = "Справочник" Тогда
						Если БухИт.КорСубконто(2).ЭтоГруппа() = 1 Тогда
							Продолжить;
						КонецЕсли;
					КонецЕсли;
					
					Если КоличествоУровней = 2 Тогда
						Параметры.ПараметрыАлгоритмов.Установить("ТолькоСумма", 0);
						Если (БухИт.Счет.Валютный = 0) и (БухИт.КорСчет.Валютный = 1) Тогда
							БухИт.ВыбратьВалюты(-1);
							Пока БухИт.ПолучитьВалюту() = 1 Цикл
								ПолучитьИтогиПоСчету();
								ДобавитьПроводкуОбороты();
							КонецЦикла;
							
						Иначе
							ПолучитьИтогиПоСчету();
							ДобавитьПроводкуОбороты();
						КонецЕсли;
											
					ИначеЕсли КоличествоУровней &gt; 2 Тогда
						
						Если (БухИт.КорСчет.УчетПоСумме(3) = 0) и (КоличествоУровней = 3) Тогда
							Параметры.ПараметрыАлгоритмов.Установить("ТолькоСумма", 1);
							Параметры.ПараметрыАлгоритмов.Установить("ТекНомерСубконто", 2);
							
							Если (БухИт.Счет.Валютный = 0) и (БухИт.КорСчет.Валютный = 1) Тогда
								БухИт.ВыбратьВалюты(-1);
								Пока БухИт.ПолучитьВалюту() = 1 Цикл
									ПолучитьИтогиПоСчету();
									ДобавитьПроводкуОбороты();
								КонецЦикла;
								
							Иначе
								ПолучитьИтогиПоСчету();
								ДобавитьПроводкуОбороты();
							КонецЕсли;
						КонецЕсли;
						
						БухИт.ВыбратьКорСубконто(3, -1);
						Пока БухИт.ПолучитьКорСубконто(3) = 1 Цикл
							Если ТипЗначенияСтр(БухИт.КорСубконто(3)) = "Справочник" Тогда
								Если БухИт.КорСубконто(3).ЭтоГруппа() = 1 Тогда
									Продолжить;
								КонецЕсли;
							КонецЕсли;
					
							Параметры.ПараметрыАлгоритмов.Установить("ТолькоСумма", 0);
							Если (БухИт.Счет.Валютный = 0) и (БухИт.КорСчет.Валютный = 1) Тогда
								БухИт.ВыбратьВалюты(-1);
								Пока БухИт.ПолучитьВалюту() = 1 Цикл
									ПолучитьИтогиПоСчету();
									ДобавитьПроводкуОбороты();
								КонецЦикла;
								
							Иначе
								ПолучитьИтогиПоСчету();
								ДобавитьПроводкуОбороты();
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецЦикла;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВыгрузитьОборотыПоВыручке" ИспользуетсяПриЗагрузке="false">
			<Текст>Если Параметры.ДатаВводаОстатков =  Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Возврат 0;
КонецЕсли;

СписокСчетовНУ = Параметры.ПараметрыАлгоритмов.Получить("СписокСчетовНУ");
ВидСубконтоНУ = Параметры.ПараметрыАлгоритмов.Получить("ВидСубконтоНУ");
ПроводкиОбороты = Параметры.ТаблицаПроводокОбороты;

НУ = СоздатьОбъект("БухгалтерскиеИтоги");
Если ПустоеЗначение(ВидСубконтоНУ) = 0 Тогда
	НУ.ИспользоватьСубконто(ВидСубконтоНУ);
КонецЕсли;

НУ.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков, Параметры.ДатаКонцаПериодаВыгрузки, СписокСчетовНУ,,, 3, "Месяц",);

НУ.ВыбратьПериоды();
Пока НУ.ПолучитьПериод() = 1 Цикл
	
	ПроводкиОбороты.УдалитьСтроки();
	
	НУ.ВыбратьСчета();
	Пока НУ.ПолучитьСчет() = 1 Цикл
		Если ПустоеЗначение(ВидСубконтоНУ) = 0 Тогда
			НУ.ВыбратьСубконто(1);
			ИтогиПолучены = НУ.ПолучитьСубконто(1);
			
		Иначе
			ИтогиПолучены = 1;
		КонецЕсли;
		
		Пока ИтогиПолучены = 1 Цикл
			Если ПустоеЗначение(ВидСубконтоНУ) = 0 Тогда
				Если НУ.Субконто(1).ЭтоГруппа() = 1 Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
		
			// Выгрузка оборотов НУ
			Параметры.ПараметрыАлгоритмов.Установить("ТаблицаПроводок", ПроводкиОбороты);
			Параметры.ПараметрыАлгоритмов.Установить("ПорядокСубконтоБУ", "1,2,3");
					
			Параметры.ПараметрыАлгоритмов.Установить("СчетДт", "");
			Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "");
			Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "");
			Параметры.ПараметрыАлгоритмов.Установить("КоличествоДт", 0);
			Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт1", "");
			Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт2", "");
			Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт3", "");
			
			Параметры.ПараметрыАлгоритмов.Установить("СчетКт", НУ.Счет);
			Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", "");
			Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "НУ");
			Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт1", "");
			Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт2", "");
			Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт3", "");
			
			Если ПустоеЗначение(ВидСубконтоНУ) = 0 Тогда
				
				Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт1", НУ.Субконто(1));
				
				Если ТипЗначенияСтр(НУ.Субконто(1)) = "Справочник" Тогда
					Если НУ.Субконто(1).Вид() = "Номенклатура" Тогда
												
						Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт1", НУ.Субконто(1).ВидНоменклатуры);
						Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт3", НУ.Субконто(1));
												
					ИначеЕсли НУ.Субконто(1).Вид() = "ОсновныеСредства" Тогда
						Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт1", "ДоходыРасходыСвязанныеСРеализациейОсновныхСредств");
						Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт2", НУ.Субконто(1));
						
					ИначеЕсли НУ.Субконто(1).Вид() = "НематериальныеАктивы" Тогда
						Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт1", "ДоходыРасходыСвязанныеСРеализациейНематериальныхАктивов");
						Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт2", НУ.Субконто(1));
						
					ИначеЕсли НУ.Субконто(1).Вид() = "Договоры" Тогда
						Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт2", НУ.Субконто(1).Владелец);
						
						Если НУ.Счет = СчетПоКоду("Н06.02") Тогда
							Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт1", "ДоходыРасходыСвязанныеСРеализациейИмущественныхПравКромеПраваТребования");
							
						ИначеЕсли НУ.Счет = СчетПоКоду("Н06.07") Тогда
							Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт1", "ДоходыРасходыСвязанныеСРеализациейПраваТребованияКакОказанияФинансовыхУслуг");
							
						ИначеЕсли НУ.Счет = СчетПоКоду("Н06.08") Тогда
							Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт1", "ДоходыРасходыСвязанныеСРеализациейПраваТребованияДоНаступленияСрокаПлатежа");
							
						ИначеЕсли НУ.Счет = СчетПоКоду("Н06.09") Тогда
							Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт1", "ДоходыРасходыСвязанныеСРеализациейПраваТребованияПослеНаступленияСрокаПлатежа");
						КонецЕсли;
						
					ИначеЕсли НУ.Субконто(1).Вид() = "ЦенныеБумаги" Тогда
						Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт1", "ДоходыРасходыСвязанныеСРеализациейЦенныхБумаг");
						Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт2", НУ.Субконто(1));
					КонецЕсли;
				КонецЕсли;
				
			ИначеЕсли НУ.Счет = СчетПоКоду("Н06.03") Тогда
				Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт1", "ДоходыРасходыСвязанныеСРеализациейПрочегоИмущества");
				
			ИначеЕсли НУ.Счет = СчетПоКоду("Н06.10") Тогда
				Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт1", "ДоходыРасходыСвязанныеСРеализациейИмущественныхПравПоОбъектамОбслуживающихПроизводств");
			КонецЕсли;
					
			Параметры.ПараметрыАлгоритмов.Установить("КоличествоКт", ?(НУ.Счет.Количественный = 1, НУ.КО(3), 0));
			Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", НУ.КО(1));
			ДобавитьПроводкуНУ();
			
			Если ПустоеЗначение(ВидСубконтоНУ) = 0 Тогда
				ИтогиПолучены = НУ.ПолучитьСубконто(1);
				
			Иначе
				ИтогиПолучены = 0;
			КонецЕсли;
					
		КонецЦикла; // НУ.ВыбратьСубконто()
	КонецЦикла; // НУ.ВыбратьСчета()

	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
	ВходящиеДанные.Установить("Налоговый", ПроводкиОбороты);
	ВходящиеДанные.Установить("Счет", СписокСчетовНУ);
	ВходящиеДанные.Установить("Дата", НУ.КонДата);
	ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияБух");
КонецЦикла;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВыгрузитьОборотыПоРасходам" ИспользуетсяПриЗагрузке="false">
			<Текст>Если Параметры.ДатаВводаОстатков =  Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Возврат 0;
КонецЕсли;

СписокСчетовНУ = Параметры.ПараметрыАлгоритмов.Получить("СписокСчетовНУ");
ВидСубконтоНУ = Параметры.ПараметрыАлгоритмов.Получить("ВидСубконтоНУ");
ИспользоватьСчетПВ = Параметры.ПараметрыАлгоритмов.Получить("ИспользоватьСчетПВ");

ПроводкиОбороты = Параметры.ТаблицаПроводокОбороты;

НУ = СоздатьОбъект("БухгалтерскиеИтоги");
Если ПустоеЗначение(ВидСубконтоНУ) = 0 Тогда
	НУ.ИспользоватьСубконто(ВидСубконтоНУ);
КонецЕсли;

НУ.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков, Параметры.ДатаКонцаПериодаВыгрузки, СписокСчетовНУ,,, 3, "Месяц",);

НУ.ВыбратьПериоды();
Пока НУ.ПолучитьПериод() = 1 Цикл
	
	ПроводкиОбороты.УдалитьСтроки();
	
	НУ.ВыбратьСчета();
	Пока НУ.ПолучитьСчет() = 1 Цикл
		Если ПустоеЗначение(ВидСубконтоНУ) = 0 Тогда
			НУ.ВыбратьСубконто(1);
			ИтогиПолучены = НУ.ПолучитьСубконто(1);
			
		Иначе
			ИтогиПолучены = 1;
		КонецЕсли;
		
		Пока ИтогиПолучены = 1 Цикл
			Если ПустоеЗначение(ВидСубконтоНУ) = 0 Тогда
				Если НУ.Субконто(1).ЭтоГруппа() = 1 Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
		
			// Выгрузка оборотов НУ
			Параметры.ПараметрыАлгоритмов.Установить("ТаблицаПроводок", ПроводкиОбороты);
			Параметры.ПараметрыАлгоритмов.Установить("ПорядокСубконтоБУ", "1,2,3");
			
			Параметры.ПараметрыАлгоритмов.Установить("СчетДт", НУ.Счет);
			Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "");
			Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "НУ");
			Параметры.ПараметрыАлгоритмов.Установить("КоличествоДт", 0);
			Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт1", "");
			Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт2", "");
			Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт3", "");
			
			Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "НУ");
			Параметры.ПараметрыАлгоритмов.Установить("КоличествоКт", 0);
			Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт1", "");
			Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт2", "");
			Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт3", "");
			
			Если ИспользоватьСчетПВ = 1 Тогда
				Параметры.ПараметрыАлгоритмов.Установить("СчетКт", НУ.Счет);
				Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", "ПВ");
				
			Иначе
				Параметры.ПараметрыАлгоритмов.Установить("СчетКт", "");
				Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", "");
			КонецЕсли;
			
			Если ПустоеЗначение(ВидСубконтоНУ) = 0 Тогда
				
				Если ТипЗначенияСтр(НУ.Субконто(1)) = "Справочник" Тогда
					Если НУ.Субконто(1).Вид() = "ОсновныеСредства" Тогда
						Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт1", "ДоходыРасходыСвязанныеСРеализациейОсновныхСредств");
						Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт2", НУ.Субконто(1));
						
					ИначеЕсли НУ.Субконто(1).Вид() = "НематериальныеАктивы" Тогда
						Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт1", "ДоходыРасходыСвязанныеСРеализациейНематериальныхАктивов");
						Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт2", НУ.Субконто(1));
					ИначеЕсли НУ.Субконто(1).Вид() = "Договоры" Тогда
						Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт2", НУ.Субконто(1));
						
						Если НУ.Счет = СчетПоКоду("Н07.09") Тогда
							Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт1", "ДоходыРасходыСвязанныеСРеализациейПраваТребованияКакОказанияФинансовыхУслуг");
							
						ИначеЕсли НУ.Счет = СчетПоКоду("Н07.10") Тогда
							Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт1", "ДоходыРасходыСвязанныеСРеализациейПраваТребованияДоНаступленияСрокаПлатежа");
							
						ИначеЕсли НУ.Счет = СчетПоКоду("Н07.11") Тогда
							Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт1", "ДоходыРасходыСвязанныеСРеализациейПраваТребованияПослеНаступленияСрокаПлатежа");
							
						ИначеЕсли НУ.Счет = СчетПоКоду("Н07.12") Тогда
							Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт1", "ПроцентыНачисленныеПоСт269");
							
						КонецЕсли;
						
					ИначеЕсли НУ.Субконто(1).Вид() = "ЦенныеБумаги" Тогда						
						Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт1", "ДоходыРасходыСвязанныеСРеализациейЦенныхБумаг");
						Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт2", НУ.Субконто(1));
					КонецЕсли;
				КонецЕсли;
				
			ИначеЕсли НУ.Счет = СчетПоКоду("Н07.06") Тогда
				Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт1", "ДоходыРасходыСвязанныеСРеализациейПрочегоИмущества");
				
			ИначеЕсли НУ.Счет = СчетПоКоду("Н07.13") Тогда
				Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт1", "ДоходыРасходыСвязанныеСРеализациейИмущественныхПравПоОбъектамОбслуживающихПроизводств");
			КонецЕсли;
					
			Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", НУ.ДО(1));
			ДобавитьПроводкуНУ();
			
			Если ПустоеЗначение(ВидСубконтоНУ) = 0 Тогда
				ИтогиПолучены = НУ.ПолучитьСубконто(1);
				
			Иначе
				ИтогиПолучены = 0;
			КонецЕсли;
					
		КонецЦикла; // НУ.ВыбратьСубконто()
	КонецЦикла; // НУ.ВыбратьСчета()

	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
	ВходящиеДанные.Установить("Налоговый", ПроводкиОбороты);
	ВходящиеДанные.Установить("Счет", СписокСчетовНУ);
	ВходящиеДанные.Установить("Дата", НУ.КонДата);
	ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияБух");
КонецЦикла;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВыгрузитьОборотыПоСчетуНУ" ИспользуетсяПриЗагрузке="false">
			<Текст>Если Параметры.ДатаВводаОстатков =  Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Возврат 0;
КонецЕсли;

СписокСчетовНУ = Параметры.ПараметрыАлгоритмов.Получить("СписокСчетовНУ");;
ВидСубконтоНУ = Параметры.ПараметрыАлгоритмов.Получить("ВидСубконтоНУ");
ДтКт = Параметры.ПараметрыАлгоритмов.Получить("ДтКт");

ПроводкиОбороты = Параметры.ТаблицаПроводокОбороты;
Проводки = Параметры.ТаблицаПроводок;
Проводки.УдалитьСтроки();

НУ = СоздатьОбъект("БухгалтерскиеИтоги");
НУ.ИспользоватьСубконто(ВидСубконтоНУ);
Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	НУ.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков,, СписокСчетовНУ);
	
Иначе
	НУ.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков, Параметры.ДатаКонцаПериодаВыгрузки, СписокСчетовНУ,,, 3, "Месяц",);
КонецЕсли;

НУ.ВыбратьПериоды();
Пока НУ.ПолучитьПериод() = 1 Цикл
	
	ПроводкиОбороты.УдалитьСтроки();
	
	НУ.ВыбратьСчета();
	Пока НУ.ПолучитьСчет() = 1 Цикл
		НУ.ВыбратьСубконто(1);
		Пока НУ.ПолучитьСубконто(1) = 1 Цикл
			Если ТипЗначенияСтр(НУ.Субконто(1)) = "Справочник" Тогда
				Если НУ.Субконто(1).ЭтоГруппа() = 1 Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			СтоимостьНУ = ?(ДтКт = 1, НУ.СНД(1), НУ.СНК(1));
			СтоимостьНУ_ОборотыДт = НУ.ДО(1);
			СтоимостьНУ_ОборотыКт = НУ.КО(1);
			
			// Выгрузка оборотов НУ
			Параметры.ПараметрыАлгоритмов.Установить("ТаблицаПроводок", ПроводкиОбороты);
			Параметры.ПараметрыАлгоритмов.Установить("ПорядокСубконтоБУ", "1,2,3");
					
			Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "НУ");
			Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "");
			Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт1", НУ.Субконто(1));
			Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт2", "");
			Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт3", "");
					
			Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "НУ");
			Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", "");
			Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт1", НУ.Субконто(1));
			Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт2", "");
			Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт3", "");
					
			// Стоимость
			Параметры.ПараметрыАлгоритмов.Установить("СчетДт", НУ.Счет);
			Параметры.ПараметрыАлгоритмов.Установить("СчетКт", "");
			Параметры.ПараметрыАлгоритмов.Установить("КоличествоДт", 0);
			Параметры.ПараметрыАлгоритмов.Установить("КоличествоКт", 0);
			Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьНУ_ОборотыДт);
			ДобавитьПроводкуНУ();
					
			Параметры.ПараметрыАлгоритмов.Установить("СчетДт", "");
			Параметры.ПараметрыАлгоритмов.Установить("СчетКт", НУ.Счет);
			Параметры.ПараметрыАлгоритмов.Установить("КоличествоДт", 0);
			Параметры.ПараметрыАлгоритмов.Установить("КоличествоКт", 0);
			Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьНУ_ОборотыКт);
			ДобавитьПроводкуНУ();
			
		КонецЦикла; // НУ.ВыбратьСубконто()
	КонецЦикла; // НУ.ВыбратьСчета()
	
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
	ВходящиеДанные.Установить("Налоговый", ПроводкиОбороты);
	ВходящиеДанные.Установить("Счет", СписокСчетовНУ);
	ВходящиеДанные.Установить("Дата", НУ.КонДата);
	ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияБух");
КонецЦикла;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВыгрузитьОстаткиПоСпецматериаламМЦ" ИспользуетсяПриЗагрузке="false">
			<Текст>// Выгружает остатки по любому счету. Счет записывается в таблицу 
// проводок, как объект типа "Основной.Счет" (потом он сконвертируется
// в соответствии с настройкой конвертации значений счетов).

// Остатки по субконто на которых ведется только количественный учет
// выгружаются, как отдельные проводки.

СчетВводаОстатков = Параметры.СчетВводаОстатков;
Счет = Параметры.ПараметрыАлгоритмов.Получить("ТекущийСчет");
РегистрБух = Параметры.ПараметрыАлгоритмов.Получить("Регистр");

ПроводкиОбороты = Параметры.ТаблицаПроводокОбороты;
Проводки = Параметры.ТаблицаПроводок;
Проводки.УдалитьСтроки();

Валюты = СоздатьОбъект("СписокЗначений");

// Обороты
БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
БухИт.ИспользоватьСубконто();
БухИт.ИспользоватьСубконто();
БухИт.ИспользоватьСубконто();
БухИт.ИспользоватьКорСубконто();
БухИт.ИспользоватьКорСубконто();
БухИт.ИспользоватьКорСубконто();
БухИт.ВключатьСубсчета(, -1);
БухИт.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков, Параметры.ДатаКонцаПериодаВыгрузки, Счет,,, 2, "Месяц",);

Параметры.ПараметрыАлгоритмов.Установить("БухИт", БухИт);
Параметры.ПараметрыАлгоритмов.Установить("ПроводкиОбороты", ПроводкиОбороты);

БухИт.ВыбратьПериоды();
Пока БухИт.ПолучитьПериод() = 1 Цикл
	
	ПроводкиОбороты.УдалитьСтроки();
	
	БухИт.ВыбратьСчета();
	Пока БухИт.ПолучитьСчет() = 1 Цикл
		Валюты.УдалитьВсе();
		
		Если Счет.Валютный = 1 Тогда
			БухИт.ВыбратьВалюты();
			Пока БухИт.ПолучитьВалюту() = 1 Цикл
				Валюты.ДобавитьЗначение(БухИт.Валюта);
			КонецЦикла;
			
		Иначе
			Валюты.ДобавитьЗначение(ПолучитьПустоеЗначение("Справочник.Валюты"));
		КонецЕсли;
		
		Для НомерВалюты = 1 по Валюты.РазмерСписка() Цикл
			Если Счет.Валютный = 1 Тогда
				БухИт.ПолучитьВалюту(, Валюты.ПолучитьЗначение(НомерВалюты));
			КонецЕсли;
			
			КоличествоУровней = Счет.КоличествоСубконто();
				
			Если КоличествоУровней = 0 Тогда
				
				ВыгрузитьКорреспонденции();
			
			ИначеЕсли КоличествоУровней &gt; 0 Тогда
				БухИт.ВыбратьСубконто(1);
				Пока БухИт.ПолучитьСубконто(1) = 1 Цикл
					Если ТипЗначенияСтр(БухИт.Субконто(1)) = "Справочник" Тогда
						Если БухИт.Субконто(1).ЭтоГруппа() = 1 Тогда
							Продолжить;
						КонецЕсли;
					КонецЕсли;
					
					Если КоличествоУровней = 1 Тогда
						ВыгрузитьКорреспонденции();
					
					ИначеЕсли КоличествоУровней &gt; 1 Тогда
						БухИт.ВыбратьСубконто(2);
						Пока БухИт.ПолучитьСубконто(2) = 1 Цикл
							Если ТипЗначенияСтр(БухИт.Субконто(2)) = "Справочник" Тогда
								Если БухИт.Субконто(2).ЭтоГруппа() = 1 Тогда
									Продолжить;
								КонецЕсли;
							КонецЕсли;
							
							Если КоличествоУровней = 2 Тогда
								ВыгрузитьКорреспонденции();
							
							ИначеЕсли КоличествоУровней &gt; 2 Тогда
								БухИт.ВыбратьСубконто(3);
								Пока БухИт.ПолучитьСубконто(3) = 1 Цикл
									Если ТипЗначенияСтр(БухИт.Субконто(3)) = "Справочник" Тогда
										Если БухИт.Субконто(3).ЭтоГруппа() = 1 Тогда
											Продолжить;
										КонецЕсли;
									КонецЕсли;
									
									ВыгрузитьКорреспонденции();
								КонецЦикла;
							КонецЕсли;	
						КонецЦикла;
					КонецЕсли;	
				КонецЦикла;
			КонецЕсли;	
		КонецЦикла;
	КонецЦикла;
	
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
	ВходящиеДанные.Установить(РегистрБух, ПроводкиОбороты);
	ВходящиеДанные.Установить("Счет", Счет);
	ВходящиеДанные.Установить("Дата", БухИт.КонДата);
	ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияБух");
	
КонецЦикла;

// Остатки
БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
БухИт.ИспользоватьСубконто();
БухИт.ИспользоватьСубконто();
БухИт.ИспользоватьСубконто();
БухИт.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков,, Счет);

Параметры.ПараметрыАлгоритмов.Установить("БухИт", БухИт);
Параметры.ПараметрыАлгоритмов.Установить("Проводки", Проводки);

БухИт.ВыбратьСчета();
Пока БухИт.ПолучитьСчет() = 1 Цикл
	Валюты.УдалитьВсе();
		
	Если Счет.Валютный = 1 Тогда
		БухИт.ВыбратьВалюты();
		Пока БухИт.ПолучитьВалюту() = 1 Цикл
			Валюты.ДобавитьЗначение(БухИт.Валюта);
		КонецЦикла;
			
	Иначе
		Валюты.ДобавитьЗначение(ПолучитьПустоеЗначение("Справочник.Валюты"));
	КонецЕсли;
		
	Параметры.ПараметрыАлгоритмов.Установить("ТолькоСумма", 0);
			
	Для НомерВалюты = 1 по Валюты.РазмерСписка() Цикл
		Если Счет.Валютный = 1 Тогда
			БухИт.ПолучитьВалюту(, Валюты.ПолучитьЗначение(НомерВалюты));
		КонецЕсли;
					
		СуммовойУчет1 = ?(Счет.КоличествоСубконто() &gt; 0, ?(Счет.ТолькоОбороты(1) = 1, 0, Счет.УчетПоСумме(1)), 0);
		СуммовойУчет2 = ?(Счет.КоличествоСубконто() &gt; 1, ?(Счет.ТолькоОбороты(2) = 1, 0, Счет.УчетПоСумме(2)), 0);
		СуммовойУчет3 = ?(Счет.КоличествоСубконто() &gt; 2, ?(Счет.ТолькоОбороты(3) = 1, 0, Счет.УчетПоСумме(3)), 0);

		КоличествоУровней = 0;
		КоличествоУровней = КоличествоУровней + ?(Счет.КоличествоСубконто() &gt; 0, ?(Счет.ТолькоОбороты(1) = 1, 0, 1), 0);
		КоличествоУровней = КоличествоУровней + ?(Счет.КоличествоСубконто() &gt; 1, ?(Счет.ТолькоОбороты(2) = 1, 0, 1), 0);
		КоличествоУровней = КоличествоУровней + ?(Счет.КоличествоСубконто() &gt; 2, ?(Счет.ТолькоОбороты(3) = 1, 0, 1), 0);
		Параметры.ПараметрыАлгоритмов.Установить("КоличествоУровней", КоличествоУровней);
				
		Если КоличествоУровней = 0 Тогда
			Параметры.ПараметрыАлгоритмов.Установить("ТекНомерСубконто", 0);
			ПолучитьИтогиПоСчету();
			ДобавитьПроводку();
				
		ИначеЕсли КоличествоУровней &gt; 0 Тогда
			БухИт.ВыбратьСубконто(1);
			Пока БухИт.ПолучитьСубконто(1) = 1 Цикл
				Если ТипЗначенияСтр(БухИт.Субконто(1)) = "Справочник" Тогда
					Если БухИт.Субконто(1).ЭтоГруппа() = 1 Тогда
						Продолжить;
					КонецЕсли;
				КонецЕсли;
						
				Если ((СуммовойУчет1 = 1) и (СуммовойУчет2 = 0)) или (КоличествоУровней = 1) Тогда
					Параметры.ПараметрыАлгоритмов.Установить("ТекНомерСубконто", 1);
					ПолучитьИтогиПоСчету();
					ДобавитьПроводку();
				КонецЕсли;
						
				Если КоличествоУровней &gt; 1 Тогда
					БухИт.ВыбратьСубконто(2);
					Пока БухИт.ПолучитьСубконто(2) = 1 Цикл
						Если ТипЗначенияСтр(БухИт.Субконто(2)) = "Справочник" Тогда
							Если БухИт.Субконто(2).ЭтоГруппа() = 1 Тогда
								Продолжить;
							КонецЕсли;
						КонецЕсли;
								
						Если ((СуммовойУчет2 = 1) и (СуммовойУчет3 = 0)) или (КоличествоУровней = 2) Тогда
							Параметры.ПараметрыАлгоритмов.Установить("ТекНомерСубконто", 2);
							ПолучитьИтогиПоСчету();
							ДобавитьПроводку();
						КонецЕсли;
								
						Если КоличествоУровней &gt; 2 Тогда
							БухИт.ВыбратьСубконто(3);
							Пока БухИт.ПолучитьСубконто(3) = 1 Цикл
								Если ТипЗначенияСтр(БухИт.Субконто(3)) = "Справочник" Тогда
									Если БухИт.Субконто(3).ЭтоГруппа() = 1 Тогда
										Продолжить;
									КонецЕсли;
								КонецЕсли;
										
								Параметры.ПараметрыАлгоритмов.Установить("ТекНомерСубконто", 3);
								ПолучитьИтогиПоСчету();
								ДобавитьПроводку();
							КонецЦикла;
						КонецЕсли;	
					КонецЦикла;
				КонецЕсли;	
			КонецЦикла;
		КонецЕсли;	
	КонецЦикла;
	
	Параметры.ПараметрыАлгоритмов.Установить("КоличествоСубконто", 3);	
	Проводки.Выгрузить(Параметры.ТаблицаОстатковМЦ);
	
КонецЦикла;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВыгрузитьОстаткиПоСпецматериаламНУ" ИспользуетсяПриЗагрузке="false">
			<Текст>// Поддержка ПБУ 18
Если Константа.ПрименяетсяПБУ18.Получить(Параметры.ДатаКонцаПериодаВыгрузки) &lt;&gt; Да Тогда
	Отказ = 1;
	Возврат 0;
КонецЕсли;

ПроводкиОбороты = Параметры.ТаблицаПроводокОбороты;
Проводки = Параметры.ТаблицаПроводок;
Проводки.УдалитьСтроки();

НУ = СоздатьОбъект("БухгалтерскиеИтоги");
НУ.ИспользоватьСубконто();
НУ.ИспользоватьСубконто();
НУ.ИспользоватьСубконто();
Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	НУ.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков,, "10.11.1,10.11.2");
	
Иначе
	НУ.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков, Параметры.ДатаКонцаПериодаВыгрузки, "10.11.1,10.11.2",,, 3, "Месяц",);
КонецЕсли;

НУ.ВыбратьПериоды();
Пока НУ.ПолучитьПериод() = 1 Цикл
	
	НУ.ВыбратьСчета();
	Пока НУ.ПолучитьСчет() = 1 Цикл
		
		ПроводкиОбороты.УдалитьСтроки();

		НУ.ВыбратьСубконто(1);
		Пока НУ.ПолучитьСубконто(1) = 1 Цикл
			Если НУ.Субконто(1).ЭтоГруппа() = 1 Тогда
				Продолжить;
			КонецЕсли;
			
			НУ.ВыбратьСубконто(2);
			Пока НУ.ПолучитьСубконто(2) = 1 Цикл
			
			    НУ.ВыбратьСубконто(3);
				Пока НУ.ПолучитьСубконто(3) = 1 Цикл
					СтоимостьВР = НУ.СНД(1);
					СтоимостьВР_ОборотыДт = НУ.ДО(1);
					СтоимостьВР_ОборотыКт = НУ.КО(1);
					
					// Выгрузка оборотов
					Параметры.ПараметрыАлгоритмов.Установить("ТаблицаПроводок", ПроводкиОбороты);
					Параметры.ПараметрыАлгоритмов.Установить("ПорядокСубконтоБУ", "1,2,3");
					
					Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "");
					Параметры.ПараметрыАлгоритмов.Установить("КоличествоДт", 0);
					Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт1", НУ.Субконто(1));
					Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт2", НУ.Субконто(2));
					Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт3", НУ.Субконто(3));
					
					Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", );
					Параметры.ПараметрыАлгоритмов.Установить("КоличествоКт", 0);
					Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт1", НУ.Субконто(1));
					Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт2", НУ.Субконто(2));
					Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт3", НУ.Субконто(3));
					
					// Стоимость
					Параметры.ПараметрыАлгоритмов.Установить("СчетДт", НУ.Счет);
					Параметры.ПараметрыАлгоритмов.Установить("СчетКт", "");
					
					Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "НУ");
					Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "НУ");
					Параметры.ПараметрыАлгоритмов.Установить("КоличествоДт", НУ.ДО(3));
					Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", 0);
					ДобавитьПроводкуНУ();
					
					Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "ВР");
					Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "ВР");
					Параметры.ПараметрыАлгоритмов.Установить("КоличествоДт", 0);
					Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьВР_ОборотыДт);
					ДобавитьПроводкуНУ();
					
					Параметры.ПараметрыАлгоритмов.Установить("СчетДт", "");
					Параметры.ПараметрыАлгоритмов.Установить("СчетКт", НУ.Счет);
					
					Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "НУ");
					Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "НУ");
					Параметры.ПараметрыАлгоритмов.Установить("КоличествоКт", НУ.КО(3));
					Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", 0);
					ДобавитьПроводкуНУ();
					
					Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "ВР");
					Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "ВР");
					Параметры.ПараметрыАлгоритмов.Установить("КоличествоКт", 0);
					Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьВР_ОборотыКт);
					ДобавитьПроводкуНУ();
					
					// Выгрузка начальных остатков.
					Если НачМесяца(Параметры.ДатаВводаОстатков) = НУ.НачДата Тогда
						Параметры.ПараметрыАлгоритмов.Установить("ТаблицаПроводок", Проводки);
						Параметры.ПараметрыАлгоритмов.Установить("СчетДт", НУ.Счет);
						Параметры.ПараметрыАлгоритмов.Установить("СчетКт", "");
						Параметры.ПараметрыАлгоритмов.Установить("КоличествоДт", 0);
						Параметры.ПараметрыАлгоритмов.Установить("КоличествоКт", 0);
						
						Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "НУ");
						Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "НУ");
						Параметры.ПараметрыАлгоритмов.Установить("КоличествоДт", НУ.СНД(3));
						Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", 0);
						ДобавитьПроводкуНУ();
						
						Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "ВР");
						Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "ВР");
						Параметры.ПараметрыАлгоритмов.Установить("КоличествоДт", 0);
						Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьВР);
						ДобавитьПроводкуНУ();
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
		
		Если НУ.НачДата = НачМесяца(Параметры.ДатаВводаОстатков) Тогда
			ВходящиеДанные = СоздатьОбъект("СписокЗначений");
			ВходящиеДанные.Установить("Налоговый", Проводки);
			ВходящиеДанные.Установить("Счет", НУ.Счет);
			ВходящиеДанные.Установить("Дата", НУ.НачДата-1);
			ПодготовитьТаблицуОстатковНУ(); 
			//ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияБух");
		КонецЕсли;
		
		ВходящиеДанные = СоздатьОбъект("СписокЗначений");
		ВходящиеДанные.Установить("Налоговый", ПроводкиОбороты);
		ВходящиеДанные.Установить("Счет", НУ.Счет);
		ВходящиеДанные.Установить("Дата", НУ.КонДата);
		ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияБух");
	КонецЦикла;
КонецЦикла;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВыгрузитьОстаткиПоСчету" ИспользуетсяПриЗагрузке="false">
			<Текст>// Выгружает остатки по любому счету. Счет записывается в таблицу 
// проводок, как объект типа "Основной.Счет" (потом он сконвертируется
// в соответствии с настройкой конвертации значений счетов).

// Остатки по субконто на которых ведется только количественный учет
// выгружаются, как отдельные проводки.

СчетВводаОстатков = Параметры.СчетВводаОстатков;
Счет = Параметры.ПараметрыАлгоритмов.Получить("ТекущийСчет");
РегистрБух = Параметры.ПараметрыАлгоритмов.Получить("Регистр");

ПроводкиОбороты = Параметры.ТаблицаПроводокОбороты;
Проводки = Параметры.ТаблицаПроводок;
Проводки.УдалитьСтроки();

Валюты = СоздатьОбъект("СписокЗначений");

// Обороты
БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
БухИт.ИспользоватьСубконто();
БухИт.ИспользоватьСубконто();
БухИт.ИспользоватьСубконто();
БухИт.ИспользоватьКорСубконто();
БухИт.ИспользоватьКорСубконто();
БухИт.ИспользоватьКорСубконто();
БухИт.ВключатьСубсчета(, -1);
БухИт.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков, Параметры.ДатаКонцаПериодаВыгрузки, Счет,,, 2, "Месяц",);

Параметры.ПараметрыАлгоритмов.Установить("БухИт", БухИт);
Параметры.ПараметрыАлгоритмов.Установить("ПроводкиОбороты", ПроводкиОбороты);

Если Параметры.ДатаВводаОстатков &lt;&gt;  Параметры.ДатаКонцаПериодаВыгрузки Тогда
	БухИт.ВыбратьПериоды();
	Пока БухИт.ПолучитьПериод() = 1 Цикл
		
		ПроводкиОбороты.УдалитьСтроки();
		
		БухИт.ВыбратьСчета();
		Пока БухИт.ПолучитьСчет() = 1 Цикл
			Валюты.УдалитьВсе();
			
			Если Счет.Валютный = 1 Тогда
				БухИт.ВыбратьВалюты();
				Пока БухИт.ПолучитьВалюту() = 1 Цикл
					Валюты.ДобавитьЗначение(БухИт.Валюта);
				КонецЦикла;
				
			Иначе
				Валюты.ДобавитьЗначение(ПолучитьПустоеЗначение("Справочник.Валюты"));
			КонецЕсли;
			
			Для НомерВалюты = 1 по Валюты.РазмерСписка() Цикл
				Если Счет.Валютный = 1 Тогда
					БухИт.ПолучитьВалюту(, Валюты.ПолучитьЗначение(НомерВалюты));
				КонецЕсли;
				
				КоличествоУровней = Счет.КоличествоСубконто();
				
				Если КоличествоУровней = 0 Тогда
					
					ВыгрузитьКорреспонденции();
					
				ИначеЕсли КоличествоУровней &gt; 0 Тогда
					БухИт.ВыбратьСубконто(1);
					Пока БухИт.ПолучитьСубконто(1) = 1 Цикл
						Если ТипЗначенияСтр(БухИт.Субконто(1)) = "Справочник" Тогда
							Если БухИт.Субконто(1).ЭтоГруппа() = 1 Тогда
								Продолжить;
							КонецЕсли;
						КонецЕсли;
						
						Если КоличествоУровней = 1 Тогда
							ВыгрузитьКорреспонденции();
							
						ИначеЕсли КоличествоУровней &gt; 1 Тогда
							БухИт.ВыбратьСубконто(2);
							Пока БухИт.ПолучитьСубконто(2) = 1 Цикл
								Если ТипЗначенияСтр(БухИт.Субконто(2)) = "Справочник" Тогда
									Если БухИт.Субконто(2).ЭтоГруппа() = 1 Тогда
										Продолжить;
									КонецЕсли;
								КонецЕсли;
								
								Если КоличествоУровней = 2 Тогда
									ВыгрузитьКорреспонденции();
									
								ИначеЕсли КоличествоУровней &gt; 2 Тогда
									БухИт.ВыбратьСубконто(3);
									Пока БухИт.ПолучитьСубконто(3) = 1 Цикл
										Если ТипЗначенияСтр(БухИт.Субконто(3)) = "Справочник" Тогда
											Если БухИт.Субконто(3).ЭтоГруппа() = 1 Тогда
												Продолжить;
											КонецЕсли;
										КонецЕсли;
										
										ВыгрузитьКорреспонденции();
									КонецЦикла;
								КонецЕсли;	
							КонецЦикла;
						КонецЕсли;	
					КонецЦикла;
				КонецЕсли;	
			КонецЦикла;
		КонецЦикла;
		
		ВходящиеДанные = СоздатьОбъект("СписокЗначений");
		ВходящиеДанные.Установить(РегистрБух, ПроводкиОбороты);
		ВходящиеДанные.Установить("Счет", Счет);
		ВходящиеДанные.Установить("Дата", БухИт.КонДата);
		ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияБух");
		
	КонецЦикла;
КонецЕсли;

// Остатки
БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
БухИт.ИспользоватьСубконто();
БухИт.ИспользоватьСубконто();
БухИт.ИспользоватьСубконто();
БухИт.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков,, Счет);

Параметры.ПараметрыАлгоритмов.Установить("БухИт", БухИт);
Параметры.ПараметрыАлгоритмов.Установить("Проводки", Проводки);

БухИт.ВыбратьСчета();
Пока БухИт.ПолучитьСчет() = 1 Цикл
	Валюты.УдалитьВсе();
		
	Если Счет.Валютный = 1 Тогда
		БухИт.ВыбратьВалюты();
		Пока БухИт.ПолучитьВалюту() = 1 Цикл
			Валюты.ДобавитьЗначение(БухИт.Валюта);
		КонецЦикла;
			
	Иначе
		Валюты.ДобавитьЗначение(ПолучитьПустоеЗначение("Справочник.Валюты"));
	КонецЕсли;
		
	Параметры.ПараметрыАлгоритмов.Установить("ТолькоСумма", 0);
			
	Для НомерВалюты = 1 по Валюты.РазмерСписка() Цикл
		Если Счет.Валютный = 1 Тогда
			БухИт.ПолучитьВалюту(, Валюты.ПолучитьЗначение(НомерВалюты));
		КонецЕсли;
		
		СуммовойУчет1 = ?(Счет.КоличествоСубконто() &gt; 0, ?(Счет.ТолькоОбороты(1) = 1, 0, Счет.УчетПоСумме(1)), 0);
		СуммовойУчет2 = ?(Счет.КоличествоСубконто() &gt; 1, ?(Счет.ТолькоОбороты(2) = 1, 0, Счет.УчетПоСумме(2)), 0);
		СуммовойУчет3 = ?(Счет.КоличествоСубконто() &gt; 2, ?(Счет.ТолькоОбороты(3) = 1, 0, Счет.УчетПоСумме(3)), 0);
		
		КоличествоУровней = 0;
		КоличествоУровней = КоличествоУровней + ?(Счет.КоличествоСубконто() &gt; 0, ?(Счет.ТолькоОбороты(1) = 1, 0, 1), 0);
		КоличествоУровней = КоличествоУровней + ?(Счет.КоличествоСубконто() &gt; 1, ?(Счет.ТолькоОбороты(2) = 1, 0, 1), 0);
		КоличествоУровней = КоличествоУровней + ?(Счет.КоличествоСубконто() &gt; 2, ?(Счет.ТолькоОбороты(3) = 1, 0, 1), 0);
		Параметры.ПараметрыАлгоритмов.Установить("КоличествоУровней", КоличествоУровней);
		
		Если КоличествоУровней = 0 Тогда
			Параметры.ПараметрыАлгоритмов.Установить("ТекНомерСубконто", 0);
			ПолучитьИтогиПоСчету();
			ДобавитьПроводку();
			
		ИначеЕсли КоличествоУровней &gt; 0 Тогда
			Если БухИт.ВыбратьСубконто(1) = 1 Тогда
				Пока БухИт.ПолучитьСубконто(1) = 1 Цикл
					Если ТипЗначенияСтр(БухИт.Субконто(1)) = "Справочник" Тогда
						Если БухИт.Субконто(1).ЭтоГруппа() = 1 Тогда
							Продолжить;
						КонецЕсли;
					КонецЕсли;
					
					Если ((СуммовойУчет1 = 1) и (СуммовойУчет2 = 0)) или (КоличествоУровней = 1) Тогда
						Параметры.ПараметрыАлгоритмов.Установить("ТекНомерСубконто", 1);
						ПолучитьИтогиПоСчету();
						ДобавитьПроводку();
					КонецЕсли;
					
					Если КоличествоУровней &gt; 1 Тогда
						БухИт.ВыбратьСубконто(2);
						Пока БухИт.ПолучитьСубконто(2) = 1 Цикл
							Если ТипЗначенияСтр(БухИт.Субконто(2)) = "Справочник" Тогда
								Если БухИт.Субконто(2).ЭтоГруппа() = 1 Тогда
									Продолжить;
								КонецЕсли;
							КонецЕсли;
							
							Если ((СуммовойУчет2 = 1) и (СуммовойУчет3 = 0)) или (КоличествоУровней = 2) Тогда
								Параметры.ПараметрыАлгоритмов.Установить("ТекНомерСубконто", 2);
								ПолучитьИтогиПоСчету();
								ДобавитьПроводку();
							КонецЕсли;
							
							Если КоличествоУровней &gt; 2 Тогда
								БухИт.ВыбратьСубконто(3);
								Пока БухИт.ПолучитьСубконто(3) = 1 Цикл
									Если ТипЗначенияСтр(БухИт.Субконто(3)) = "Справочник" Тогда
										Если БухИт.Субконто(3).ЭтоГруппа() = 1 Тогда
											Продолжить;
										КонецЕсли;
									КонецЕсли;
									
									Параметры.ПараметрыАлгоритмов.Установить("ТекНомерСубконто", 3);
									ПолучитьИтогиПоСчету();
									ДобавитьПроводку();
								КонецЦикла;
							КонецЕсли;	
						КонецЦикла;
					КонецЕсли;	
				КонецЦикла;
			Иначе
				Если Счет.Код = "25" Тогда
					Если БухИт.ВыбратьСубконто(2) = 1 Тогда
						Пока БухИт.ПолучитьСубконто(2) = 1 Цикл
							Если ТипЗначенияСтр(БухИт.Субконто(2)) = "Справочник" Тогда
								Если БухИт.Субконто(2).ЭтоГруппа() = 1 Тогда
									Продолжить;
								КонецЕсли;
							КонецЕсли;
							
							Если ((СуммовойУчет1 = 1) и (СуммовойУчет2 = 0)) или (КоличествоУровней = 1) Тогда
								Параметры.ПараметрыАлгоритмов.Установить("ТекНомерСубконто", 2);
								ПолучитьИтогиПоСчету();
								ДобавитьПроводку();
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;	
				КонецЕсли;	
			КонецЕсли;	
		КонецЕсли;	
	КонецЦикла;
	
	РазделУчета = ОпределитьРазделУчета();
	Если ПустоеЗначение(РазделУчета) = 0 Тогда
		ВходящиеДанные = СоздатьОбъект("СписокЗначений");
		ВходящиеДанные.Установить("ВходящиеОстатки", Проводки);
		ВходящиеДанные.Установить("Счет", Счет);
		ВходящиеДанные.Установить("Дата", БухИт.НачДата-1);
		ВходящиеДанные.Установить("РазделУчета", РазделУчета);
		ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
		ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
		ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
		Если (РазделУчета = "РасчетыСПерсоналомПоОплатеТрудаИДепонентам")
			И (Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки) Тогда
			ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 0);
		КонецЕсли;
		Если РазделУчета = "РасчетыПоНалогамИСборам" Тогда
			ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 0);
		КонецЕсли;
		Если РазделУчета &lt;&gt; "НезавершенноеПроизводство" Тогда
			ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ВводНачальныхОстатков");
		Иначе // делим по подразделениям
			ПроводкиПоПодразделению = СоздатьОбъект("ТаблицаЗначений");
			Проводки.Выгрузить(ПроводкиПоПодразделению);
			Проводки.НоваяКолонка("ПодразделениеОрганизации");
			ПроводкиПоПодразделению.УдалитьСтроки();			
			Проводки.ВыбратьСтроки();			
			Пока Проводки.ПолучитьСтроку() = 1 Цикл
				Для НомерСтроки = 1 По Проводки.СубконтоДт.КоличествоСтрок() Цикл
					ТекЗнач = Проводки.СубконтоДт.ПолучитьЗначение(НомерСтроки, "Значение");
					Если ТипЗначенияСтр(ТекЗнач) = "Справочник" Тогда
						Если ТекЗнач.Вид() = "Подразделения" Тогда
							Проводки.ПодразделениеОрганизации =  ТекЗнач;
							Прервать;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			Проводки.Сортировать("ПодразделениеОрганизации");
			
			ТекПодразделение = "";
			Проводки.ВыбратьСтроки();			
			Пока Проводки.ПолучитьСтроку() = 1 Цикл
				НомСтроки = 0;
				НомСтроки = Проводки.НомерСтроки;
				
				ПроводкиПоПодразделению.НоваяСтрока();
				НомСтрокиПодразделения = ПроводкиПоПодразделению.КоличествоСтрок();
				Для НомКолонки = 1 по ПроводкиПоПодразделению.КоличествоКолонок() Цикл
					ПроводкиПоПодразделению.УстановитьЗначение(НомСтрокиПодразделения, НомКолонки, Проводки.ПолучитьЗначение(НомСтроки, НомКолонки));
				КонецЦикла;
				ТекПодразделение = Проводки.ПодразделениеОрганизации;
				
				Если НомСтроки &lt; Проводки.КоличествоСтрок() Тогда
					СледПодразделение = Проводки.ПолучитьЗначение(НомСтроки + 1, "ПодразделениеОрганизации");
				Иначе
					СледПодразделение = "";
				КонецЕсли;
				
				Если ТекПодразделение &lt;&gt; СледПодразделение Тогда
					Если ПроводкиПоПодразделению.КоличествоСтрок() &gt; 0 Тогда
						ВходящиеДанные.Установить("ВходящиеОстатки", ПроводкиПоПодразделению);
						ВходящиеДанные.Установить("ПодразделениеОрганизации", ТекПодразделение);
						ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ВводНачальныхОстатков");
						ПроводкиПоПодразделению.УдалитьСтроки();
					КонецЕсли;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
	Иначе			
		ВходящиеДанные = СоздатьОбъект("СписокЗначений");
		ВходящиеДанные.Установить(РегистрБух, Проводки);
		ВходящиеДанные.Установить("Счет", Счет);
		ВходящиеДанные.Установить("Дата", БухИт.НачДата-1);
		ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияБух");
	КонецЕсли;
КонецЦикла;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВыгрузитьОстаткиПоСчетуНаКонецПериода" ИспользуетсяПриЗагрузке="false">
			<Текст>// Выгружает остатки по любому счету. Счет записывается в таблицу 
// проводок, как объект типа "Основной.Счет" (потом он сконвертируется
// в соответствии с настройкой конвертации значений счетов).

// Остатки по субконто на которых ведется только количественный учет
// выгружаются, как отдельные проводки.

СчетВводаОстатков = Параметры.СчетВводаОстатков;
Счет = Параметры.ПараметрыАлгоритмов.Получить("ТекущийСчет");
РегистрБух = Параметры.ПараметрыАлгоритмов.Получить("Регистр");

ПроводкиОбороты = Параметры.ТаблицаПроводокОбороты;
Проводки = Параметры.ТаблицаПроводок;
Проводки.УдалитьСтроки();

Валюты = СоздатьОбъект("СписокЗначений");

// Остатки
БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
БухИт.ИспользоватьСубконто();
БухИт.ИспользоватьСубконто();
БухИт.ИспользоватьСубконто();
БухИт.ВыполнитьЗапрос(, Параметры.ДатаКонцаПериодаВыгрузки, Счет);

Параметры.ПараметрыАлгоритмов.Установить("БухИт", БухИт);
Параметры.ПараметрыАлгоритмов.Установить("Проводки", Проводки);

БухИт.ВыбратьСчета();
Пока БухИт.ПолучитьСчет() = 1 Цикл
	Валюты.УдалитьВсе();
		
	Если Счет.Валютный = 1 Тогда
		БухИт.ВыбратьВалюты();
		Пока БухИт.ПолучитьВалюту() = 1 Цикл
			Валюты.ДобавитьЗначение(БухИт.Валюта);
		КонецЦикла;
			
	Иначе
		Валюты.ДобавитьЗначение(ПолучитьПустоеЗначение("Справочник.Валюты"));
	КонецЕсли;
		
	Параметры.ПараметрыАлгоритмов.Установить("ТолькоСумма", 0);
			
	Для НомерВалюты = 1 по Валюты.РазмерСписка() Цикл
		Если Счет.Валютный = 1 Тогда
			БухИт.ПолучитьВалюту(, Валюты.ПолучитьЗначение(НомерВалюты));
		КонецЕсли;
		
		СуммовойУчет1 = ?(Счет.КоличествоСубконто() &gt; 0, ?(Счет.ТолькоОбороты(1) = 1, 0, Счет.УчетПоСумме(1)), 0);
		СуммовойУчет2 = ?(Счет.КоличествоСубконто() &gt; 1, ?(Счет.ТолькоОбороты(2) = 1, 0, Счет.УчетПоСумме(2)), 0);
		СуммовойУчет3 = ?(Счет.КоличествоСубконто() &gt; 2, ?(Счет.ТолькоОбороты(3) = 1, 0, Счет.УчетПоСумме(3)), 0);
		
		КоличествоУровней = 0;
		КоличествоУровней = КоличествоУровней + ?(Счет.КоличествоСубконто() &gt; 0, ?(Счет.ТолькоОбороты(1) = 1, 0, 1), 0);
		КоличествоУровней = КоличествоУровней + ?(Счет.КоличествоСубконто() &gt; 1, ?(Счет.ТолькоОбороты(2) = 1, 0, 1), 0);
		КоличествоУровней = КоличествоУровней + ?(Счет.КоличествоСубконто() &gt; 2, ?(Счет.ТолькоОбороты(3) = 1, 0, 1), 0);
		Параметры.ПараметрыАлгоритмов.Установить("КоличествоУровней", КоличествоУровней);
		
		Если КоличествоУровней = 0 Тогда
			Параметры.ПараметрыАлгоритмов.Установить("ТекНомерСубконто", 0);
			ПолучитьИтогиПоСчетуНаКонецПериода();
			ДобавитьПроводку();
			
		ИначеЕсли КоличествоУровней &gt; 0 Тогда
			Если БухИт.ВыбратьСубконто(1) = 1 Тогда
				Пока БухИт.ПолучитьСубконто(1) = 1 Цикл
					Если ТипЗначенияСтр(БухИт.Субконто(1)) = "Справочник" Тогда
						Если БухИт.Субконто(1).ЭтоГруппа() = 1 Тогда
							Продолжить;
						КонецЕсли;
					КонецЕсли;
					
					Если ((СуммовойУчет1 = 1) и (СуммовойУчет2 = 0)) или (КоличествоУровней = 1) Тогда
						Параметры.ПараметрыАлгоритмов.Установить("ТекНомерСубконто", 1);
						ПолучитьИтогиПоСчетуНаКонецПериода();
						ДобавитьПроводку();
					КонецЕсли;
					
					Если КоличествоУровней &gt; 1 Тогда
						БухИт.ВыбратьСубконто(2);
						Пока БухИт.ПолучитьСубконто(2) = 1 Цикл
							Если ТипЗначенияСтр(БухИт.Субконто(2)) = "Справочник" Тогда
								Если БухИт.Субконто(2).ЭтоГруппа() = 1 Тогда
									Продолжить;
								КонецЕсли;
							КонецЕсли;
							
							Если ((СуммовойУчет2 = 1) и (СуммовойУчет3 = 0)) или (КоличествоУровней = 2) Тогда
								Параметры.ПараметрыАлгоритмов.Установить("ТекНомерСубконто", 2);
								ПолучитьИтогиПоСчетуНаКонецПериода();
								ДобавитьПроводку();
							КонецЕсли;
							
							Если КоличествоУровней &gt; 2 Тогда
								БухИт.ВыбратьСубконто(3);
								Пока БухИт.ПолучитьСубконто(3) = 1 Цикл
									Если ТипЗначенияСтр(БухИт.Субконто(3)) = "Справочник" Тогда
										Если БухИт.Субконто(3).ЭтоГруппа() = 1 Тогда
											Продолжить;
										КонецЕсли;
									КонецЕсли;
									
									Параметры.ПараметрыАлгоритмов.Установить("ТекНомерСубконто", 3);
									ПолучитьИтогиПоСчетуНаКонецПериода();
									ДобавитьПроводку();
								КонецЦикла;
							КонецЕсли;	
						КонецЦикла;
					КонецЕсли;	
				КонецЦикла;
			Иначе
				Если Счет.Код = "25" Тогда
					Если БухИт.ВыбратьСубконто(2) = 1 Тогда
						Пока БухИт.ПолучитьСубконто(2) = 1 Цикл
							Если ТипЗначенияСтр(БухИт.Субконто(2)) = "Справочник" Тогда
								Если БухИт.Субконто(2).ЭтоГруппа() = 1 Тогда
									Продолжить;
								КонецЕсли;
							КонецЕсли;
							
							Если ((СуммовойУчет1 = 1) и (СуммовойУчет2 = 0)) или (КоличествоУровней = 1) Тогда
								Параметры.ПараметрыАлгоритмов.Установить("ТекНомерСубконто", 2);
								ПолучитьИтогиПоСчетуНаКонецПериода();
								ДобавитьПроводку();
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;	
				КонецЕсли;	
			КонецЕсли;	
		КонецЕсли;	
	КонецЦикла;
	
	РазделУчета = ОпределитьРазделУчета();
	Если ПустоеЗначение(РазделУчета) = 0 Тогда
		ВходящиеДанные = СоздатьОбъект("СписокЗначений");
		ВходящиеДанные.Установить("ВходящиеОстатки", Проводки);
		ВходящиеДанные.Установить("Счет", Счет);
		ВходящиеДанные.Установить("Дата", Параметры.ДатаКонцаПериодаВыгрузки);
		ВходящиеДанные.Установить("РазделУчета", РазделУчета);
		ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 0);
		ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 0);
		ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
		ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ВводНачальныхОстатков");	
	КонецЕсли;
КонецЦикла;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВыгрузитьОстаткиПоСчетуНУ" ИспользуетсяПриЗагрузке="false">
			<Текст>// Выгрузка остатков с единственной группировкой по субконто.
// Остаток по каждому субконто распределяется по указанным счетам бух учета
// Перед распределением бухгалтерские итоги позиционируются на текущем
// параметре выборки налоговых итогов.
// Предполагается, что по счету есть только дебетовые остатки.

СписокСчетовНУ = Параметры.ПараметрыАлгоритмов.Получить("СписокСчетовНУ");
СписокСчетовПР = Параметры.ПараметрыАлгоритмов.Получить("СписокСчетовПР");
СписокСчетовБУ = Параметры.ПараметрыАлгоритмов.Получить("СписокСчетовБУ");
ВидСубконтоНУ = Параметры.ПараметрыАлгоритмов.Получить("ВидСубконтоНУ");
Количественный = Параметры.ПараметрыАлгоритмов.Получить("Количественный");
КодСчетаДт = Параметры.ПараметрыАлгоритмов.Получить("КодСчетаДт");
ДтКт = Параметры.ПараметрыАлгоритмов.Получить("ДтКт");

СчН02_01 = СчетПоКоду("Н02.01");
СчН02_09 = СчетПоКоду("Н02.09");

Сч08_3 = СчетПоКоду("08.3");
Сч10_1 = СчетПоКоду("10.1");
Сч10_2 = СчетПоКоду("10.2");
Сч10_7 = СчетПоКоду("10.7");
Сч10_11_1 = СчетПоКоду("10.11.1");
Сч10_11_2 = СчетПоКоду("10.11.2");

ПроводкиОбороты = Параметры.ТаблицаПроводокОбороты;
Проводки = Параметры.ТаблицаПроводок;
Проводки.УдалитьСтроки();

НУ = СоздатьОбъект("БухгалтерскиеИтоги");
НУ.ИспользоватьСубконто(ВидСубконтоНУ);
Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	НУ.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков,, СписокСчетовНУ);
	
Иначе
	НУ.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков, Параметры.ДатаКонцаПериодаВыгрузки, СписокСчетовНУ,,, 3, "Месяц",);
КонецЕсли;

ПР = СоздатьОбъект("БухгалтерскиеИтоги");
ПР.ИспользоватьСубконто(ВидСубконтоНУ);
Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	ПР.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков,, СписокСчетовПР);
	
Иначе
	ПР.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков, Параметры.ДатаКонцаПериодаВыгрузки, СписокСчетовПР,,, 3, "Месяц",);
КонецЕсли;

БУ = СоздатьОбъект("БухгалтерскиеИтоги");
БУ.ИспользоватьСубконто();
БУ.ИспользоватьСубконто();
БУ.ИспользоватьСубконто();
Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	БУ.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков,, СписокСчетовБУ);
	
Иначе
	БУ.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков, Параметры.ДатаКонцаПериодаВыгрузки, СписокСчетовБУ,,, 3, "Месяц",);
КонецЕсли;

ПорядокСубконто = глРазложить(Параметры.ПараметрыАлгоритмов.Получить("ПорядокСубконтоБУ"));
НомерСубконто1 = ПорядокСубконто.ПолучитьЗначение(1);
НомерСубконто2 = ПорядокСубконто.ПолучитьЗначение(2);
НомерСубконто3 = ПорядокСубконто.ПолучитьЗначение(3);

ИтогиПоСубконто = СоздатьОбъект("ТаблицаЗначений");
ИтогиПоСубконто.НоваяКолонка("Счет");
ИтогиПоСубконто.НоваяКолонка("КодСчета");
ИтогиПоСубконто.НоваяКолонка("Субконто1");
ИтогиПоСубконто.НоваяКолонка("Субконто2");
ИтогиПоСубконто.НоваяКолонка("Субконто3");
ИтогиПоСубконто.НоваяКолонка("СНД1", "Число");
ИтогиПоСубконто.НоваяКолонка("СНК1", "Число");
ИтогиПоСубконто.НоваяКолонка("КО1", "Число");
ИтогиПоСубконто.НоваяКолонка("ДО1", "Число");
ИтогиПоСубконто.НоваяКолонка("СНД3", "Число");
ИтогиПоСубконто.НоваяКолонка("СНК3", "Число");
ИтогиПоСубконто.НоваяКолонка("КО3", "Число");
ИтогиПоСубконто.НоваяКолонка("ДО3", "Число");

Табл10_7  = СоздатьОбъект("ТаблицаЗначений");
Табл10_7.Загрузить(ИтогиПоСубконто);
Табл10_7.УдалитьСтроки();


НУ.ВыбратьПериоды();
Пока НУ.ПолучитьПериод() = 1 Цикл
	
	ПроводкиОбороты.УдалитьСтроки();
	ВедетсяУчетМПЗвПереработке = Константа.РаздельныйУчетМатериаловСкладПереработка.Получить(НУ.НачДата);
	
	НУ.ВыбратьСчета();
	Пока НУ.ПолучитьСчет() = 1 Цикл
		НУ.ВыбратьСубконто(1);
		Пока НУ.ПолучитьСубконто(1) = 1 Цикл
			Если НУ.Субконто(1).ЭтоГруппа() = 1 Тогда
				Продолжить;
			КонецЕсли;
			
			СтоимостьНУ = ?(ДтКт = 1, НУ.СНД(1), НУ.СНК(1));
			СтоимостьНУ_ОборотыДт = НУ.ДО(1);
			СтоимостьНУ_ОборотыКт = НУ.КО(1);
			
			КоличествоНУ = ?(Количественный = 1, ?(ДтКт = 1, НУ.СНД(3), НУ.СНК(3)), 0);
			КоличествоНУ_ОборотыДт = ?(Количественный = 1, НУ.ДО(3), 0);
			КоличествоНУ_ОборотыКт = ?(Количественный = 1, НУ.КО(3), 0);
			
			СтоимостьПР = 0;
			СтоимостьПР_ОборотыДт = 0;
			СтоимостьПР_ОборотыКт = 0;
			
			Если ПР.ПолучитьПериод(1, НУ.НачДата) = 1 Тогда
				Если ПР.ПолучитьСубконто(ВидСубконтоНУ,, НУ.Субконто(1)) = 1 Тогда
					СтоимостьПР = ?(ДтКт = 1, ПР.СНД(1), ПР.СНК(1));
					СтоимостьПР_ОборотыДт = ПР.ДО(1);
					СтоимостьПР_ОборотыКт = ПР.КО(1);
				КонецЕсли;
			КонецЕсли;
			
			Если БУ.ПолучитьПериод(1, НУ.НачДата) = 1 Тогда
				Если БУ.ПолучитьСубконто(НомерСубконто1,, НУ.Субконто(1)) = 1 Тогда
					
					ИтогиПоСубконто.УдалитьСтроки();
					Табл10_7.УдалитьСтроки();
				
					БУ.ВыбратьСчета();
					Пока БУ.ПолучитьСчет() = 1 Цикл
						
						Если (НУ.Счет = СчН02_09) и (БУ.Счет &lt;&gt; Сч10_7) Тогда
							Продолжить;
						
						ИначеЕсли БУ.Счет = Сч10_7 Тогда
							Если (ВедетсяУчетМПЗвПереработке = Да) и (НУ.Счет &lt;&gt; СчН02_09) Тогда
								
								БУ.ВыбратьСубконто(НомерСубконто2);
								Пока БУ.ПолучитьСубконто(НомерСубконто2) = 1 Цикл
									БУ.ВыбратьСубконто(НомерСубконто3);
									Пока БУ.ПолучитьСубконто(НомерСубконто3) = 1 Цикл																							
										Табл10_7.НоваяСтрока();
										Табл10_7.Счет = БУ.Счет;
										Табл10_7.Субконто1 = БУ.Субконто(НомерСубконто1);
										Табл10_7.Субконто2 = БУ.Субконто(НомерСубконто2);
										Табл10_7.Субконто3 = БУ.Субконто(НомерСубконто3);
										Табл10_7.СНД1 = БУ.СНД(1);
										Табл10_7.СНК1 = БУ.СНК(1);
										Табл10_7.КО1 = БУ.КО(1);
										Табл10_7.ДО1 = БУ.ДО(1);
										Табл10_7.СНД3 = БУ.СНД(3);
										Табл10_7.СНК3 = БУ.СНК(3);
										Табл10_7.КО3 = БУ.КО(3);
										Табл10_7.ДО3 = БУ.ДО(3);											
									КонецЦикла;
								КонецЦикла;
								
								Продолжить;
							КонецЕсли;
							
							//Если НУ.Субконто(1).СубСчет10 = Сч10_1 Тогда
								//КодСчета = Сч10_7;//"10.07.1";
								
							//ИначеЕсли НУ.Субконто(1).СубСчет10 = Сч10_2 Тогда
							//	КодСчета = "10.07.2";
							//	
							//Иначе
							//	КодСчета = "10.07.3";
							//КонецЕсли;
							
						Иначе
							КодСчета = КодСчетаДт;
						КонецЕсли;
						
						КоличествоУровней = БУ.Счет.КоличествоСубконто();
							
						Если (КоличествоУровней &gt; 1) и (БУ.Счет &lt;&gt; Сч10_11_1) и (БУ.Счет &lt;&gt; Сч10_11_2) и (БУ.Счет &lt;&gt; Сч08_3) Тогда
							БУ.ВыбратьСубконто(НомерСубконто2);
							Пока БУ.ПолучитьСубконто(НомерСубконто2) = 1 Цикл
								Если БУ.Субконто(НомерСубконто2).ЭтоГруппа() = 1 Тогда
									Продолжить;
								КонецЕсли;
								
								Если КоличествоУровней &gt; 2 Тогда
									БУ.ВыбратьСубконто(НомерСубконто3);
									Пока БУ.ПолучитьСубконто(НомерСубконто3) = 1 Цикл
										Если БУ.Субконто(НомерСубконто3).ЭтоГруппа() = 1 Тогда
											Продолжить;
										КонецЕсли;
										
										ИтогиПоСубконто.НоваяСтрока();
										ИтогиПоСубконто.Счет = БУ.Счет;
										ИтогиПоСубконто.КодСчета = КодСчета;
										ИтогиПоСубконто.Субконто1 = БУ.Субконто(НомерСубконто1);
										ИтогиПоСубконто.Субконто2 = БУ.Субконто(НомерСубконто2);
										ИтогиПоСубконто.Субконто3 = БУ.Субконто(НомерСубконто3);
										ИтогиПоСубконто.СНД1 = БУ.СНД(1);
										ИтогиПоСубконто.СНК1 = БУ.СНК(1);
										ИтогиПоСубконто.КО1 = БУ.КО(1);
										ИтогиПоСубконто.ДО1 = БУ.ДО(1);
										Если БУ.Счет.Количественный = 1 Тогда
											ИтогиПоСубконто.СНД3 = БУ.СНД(3);
											ИтогиПоСубконто.СНК3 = БУ.СНК(3);
											ИтогиПоСубконто.КО3 = БУ.КО(3);
											ИтогиПоСубконто.ДО3 = БУ.ДО(3);
										КонецЕсли;
									КонецЦикла;
									
								Иначе
									ИтогиПоСубконто.НоваяСтрока();
									ИтогиПоСубконто.Счет = БУ.Счет;
									ИтогиПоСубконто.КодСчета = КодСчета;
									ИтогиПоСубконто.Субконто1 = БУ.Субконто(НомерСубконто1);
									ИтогиПоСубконто.Субконто2 = БУ.Субконто(НомерСубконто2);
									ИтогиПоСубконто.Субконто3 = "";
									ИтогиПоСубконто.СНД1 = БУ.СНД(1);
									ИтогиПоСубконто.СНК1 = БУ.СНК(1);
									ИтогиПоСубконто.КО1 = БУ.КО(1);
									ИтогиПоСубконто.ДО1 = БУ.ДО(1);
									Если БУ.Счет.Количественный = 1 Тогда
										ИтогиПоСубконто.СНД3 = БУ.СНД(3);
										ИтогиПоСубконто.СНК3 = БУ.СНК(3);
										ИтогиПоСубконто.КО3 = БУ.КО(3);
										ИтогиПоСубконто.ДО3 = БУ.ДО(3);
									КонецЕсли;
								КонецЕсли;
							КонецЦикла;
							
						Иначе
							ИтогиПоСубконто.НоваяСтрока();
							ИтогиПоСубконто.Счет = БУ.Счет;
							ИтогиПоСубконто.КодСчета = КодСчета;
							ИтогиПоСубконто.Субконто1 = БУ.Субконто(НомерСубконто1);
							ИтогиПоСубконто.Субконто2 = "";
							ИтогиПоСубконто.Субконто3 = "";
							ИтогиПоСубконто.СНД1 = БУ.СНД(1);
							ИтогиПоСубконто.СНК1 = БУ.СНК(1);
							ИтогиПоСубконто.КО1 = БУ.КО(1);
							ИтогиПоСубконто.ДО1 = БУ.ДО(1);
							Если БУ.Счет.Количественный = 1 Тогда
								ИтогиПоСубконто.СНД3 = БУ.СНД(3);
								ИтогиПоСубконто.СНК3 = БУ.СНК(3);
								ИтогиПоСубконто.КО3 = БУ.КО(3);
								ИтогиПоСубконто.ДО3 = БУ.ДО(3);
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				
				Если (ВедетсяУчетМПЗвПереработке = Да) и (НУ.Счет &lt;&gt; СчН02_09) Тогда
				Иначе
					ИтогиПоСубконто.ВыбратьСтроки(); 
					Пока ИтогиПоСубконто.ПолучитьСтроку() = 1 Цикл
						Если ИтогиПоСубконто.Счет.Код = "10.7" Тогда
							Табл10_7.НоваяСтрока();
							Табл10_7.Счет = ИтогиПоСубконто.Счет;
							Табл10_7.КодСчета = ИтогиПоСубконто.КодСчета;
							Табл10_7.Субконто1 = ИтогиПоСубконто.Субконто1;
							Табл10_7.Субконто2 = ИтогиПоСубконто.Субконто2;
							Табл10_7.Субконто3 = ИтогиПоСубконто.Субконто3;
							Табл10_7.СНД1 = ИтогиПоСубконто.СНД1;
							Табл10_7.СНК1 = ИтогиПоСубконто.СНК1;
							Табл10_7.КО1 = ИтогиПоСубконто.КО1;
							Табл10_7.ДО1 = ИтогиПоСубконто.ДО1;
							Табл10_7.СНД3 = ИтогиПоСубконто.СНД3;
							Табл10_7.СНК3 = ИтогиПоСубконто.СНК3;
							Табл10_7.КО3 = ИтогиПоСубконто.КО3;
							Табл10_7.ДО3 = ИтогиПоСубконто.ДО3;
						КонецЕсли;						
					КонецЦикла;   
				КонецЕсли;
				
				
				Коэф = 1;//?(ВедетсяУчетМПЗвПереработке = Нет, 1, 0);
				СтоимостьБУ_Всего_10_7 = Коэф * ?(ДтКт = 1, Табл10_7.Итог("СНД1"), Табл10_7.Итог("СНК1"));
				СтоимостьБУ_ОборотыДт_Всего_10_7 = Коэф * Табл10_7.Итог("ДО1");
				СтоимостьБУ_ОборотыКт_Всего_10_7 = Коэф * Табл10_7.Итог("КО1");
				КоличествоБУ_Всего_10_7 = Коэф * ?(ДтКт = 1, Табл10_7.Итог("СНД3"), Табл10_7.Итог("СНК3"));
				КоличествоБУ_ОборотыДт_Всего_10_7 = Коэф * Табл10_7.Итог("ДО3");
				КоличествоБУ_ОборотыКт_Всего_10_7 = Коэф * Табл10_7.Итог("КО3");
				
				СтоимостьБУ_Всего = ?(ДтКт = 1, БУ.СНД(1), БУ.СНК(1)) - СтоимостьБУ_Всего_10_7;
				СтоимостьБУ_ОборотыДт_Всего = БУ.ДО(1) - СтоимостьБУ_ОборотыДт_Всего_10_7;
				СтоимостьБУ_ОборотыКт_Всего = БУ.КО(1) - СтоимостьБУ_ОборотыКт_Всего_10_7;
				
				Если Количественный = 1 Тогда
					КоличествоБУ_Всего = ?(ДтКт = 1, БУ.СНД(3), БУ.СНК(3)) - КоличествоБУ_Всего_10_7;
					КоличествоБУ_ОборотыДт_Всего = БУ.ДО(3) - КоличествоБУ_ОборотыДт_Всего_10_7;
					КоличествоБУ_ОборотыКт_Всего = БУ.КО(3) - КоличествоБУ_ОборотыКт_Всего_10_7;
					
				Иначе
					КоличествоБУ_Всего = 0;
					КоличествоБУ_ОборотыДт_Всего = 0;
					КоличествоБУ_ОборотыКт_Всего = 0;
				КонецЕсли; 
				
				СтоимостьБУ_ТекИтог = 0;
				СтоимостьБУ_ОборотыДт_ТекИтог = 0;
				СтоимостьБУ_ОборотыКт_ТекИтог = 0;
				
				КоличествоБУ_ТекИтог = 0;
				КоличествоБУ_ОборотыДт_ТекИтог = 0;
				КоличествоБУ_ОборотыКт_ТекИтог = 0;
				
				РаспределеноНУ = 0;
				РаспределеноНУ_ОборотыДт = 0;
				РаспределеноНУ_ОборотыКт = 0;
					
				РаспределеноПР = 0;
				РаспределеноПР_ОборотыДт = 0;
				РаспределеноПР_ОборотыКт = 0;
								
				ИтогиПоСубконто.ВыбратьСтроки();
				Пока ИтогиПоСубконто.ПолучитьСтроку() = 1 Цикл
									
					СтоимостьБУ = ?(ДтКт = 1, ИтогиПоСубконто.СНД1, ИтогиПоСубконто.СНК1);
					СтоимостьБУ_ОборотыДт = ИтогиПоСубконто.ДО1;
					СтоимостьБУ_ОборотыКт = ИтогиПоСубконто.КО1;
					
					Если ИтогиПоСубконто.Счет.Количественный = 1 Тогда
						КоличествоБУ = ?(ДтКт = 1, ИтогиПоСубконто.СНД3, ИтогиПоСубконто.СНК3);
						КоличествоБУ_ОборотыДт = ИтогиПоСубконто.ДО3;
						КоличествоБУ_ОборотыКт = ИтогиПоСубконто.КО3;
					КонецЕсли;
					
					Если (ИтогиПоСубконто.Счет.Количественный = 1)
						И ((КоличествоБУ + КоличествоБУ_ОборотыДт + КоличествоБУ_ОборотыКт) &lt;&gt; 0) Тогда						
						
						ТекСтоимостьНУ = ?(КоличествоБУ_Всего + КоличествоБУ_Всего_10_7 = 0, 0, Окр(КоличествоБУ * СтоимостьНУ / (КоличествоБУ_Всего + КоличествоБУ_Всего_10_7), 2, 1));
						ТекСтоимостьНУ_ОборотыДт = ?(КоличествоБУ_ОборотыДт_Всего + КоличествоБУ_ОборотыДт_Всего_10_7 = 0, 0, Окр(КоличествоБУ_ОборотыДт * СтоимостьНУ_ОборотыДт / (КоличествоБУ_ОборотыДт_Всего + КоличествоБУ_ОборотыДт_Всего_10_7), 2, 1));
						ТекСтоимостьНУ_ОборотыКт = ?(КоличествоБУ_ОборотыКт_Всего + КоличествоБУ_ОборотыКт_Всего_10_7 = 0, 0, Окр(КоличествоБУ_ОборотыКт * СтоимостьНУ_ОборотыКт / (КоличествоБУ_ОборотыКт_Всего + КоличествоБУ_ОборотыКт_Всего_10_7), 2, 1));
						
						ТекСтоимостьПР = ?(КоличествоБУ_Всего + КоличествоБУ_Всего_10_7 = 0, 0, Окр(КоличествоБУ * СтоимостьПР / (КоличествоБУ_Всего + КоличествоБУ_Всего_10_7), 2, 1));
						ТекСтоимостьПР_ОборотыДт = ?(КоличествоБУ_ОборотыДт_Всего + КоличествоБУ_ОборотыДт_Всего_10_7 = 0, 0, Окр(КоличествоБУ_ОборотыДт * СтоимостьПР_ОборотыДт / (КоличествоБУ_ОборотыДт_Всего + КоличествоБУ_ОборотыДт_Всего_10_7), 2, 1));
						ТекСтоимостьПР_ОборотыКт = ?(КоличествоБУ_ОборотыКт_Всего + КоличествоБУ_ОборотыКт_Всего_10_7 = 0, 0, Окр(КоличествоБУ_ОборотыКт * СтоимостьПР_ОборотыКт / (КоличествоБУ_ОборотыКт_Всего + КоличествоБУ_ОборотыКт_Всего_10_7), 2, 1));
						
						Если ИтогиПоСубконто.Счет.Код = "10.7" Тогда     
							ТекСтоимостьБУ = СтоимостьБУ;
							ТекСтоимостьБУ_ОборотыДт = СтоимостьБУ_ОборотыДт;
							ТекСтоимостьБУ_ОборотыКт = СтоимостьБУ_ОборотыКт;
						Иначе
							ТекСтоимостьБУ = ?(КоличествоБУ_Всего = 0, 0, Окр(КоличествоБУ * СтоимостьБУ_Всего / КоличествоБУ_Всего, 2, 1));
							ТекСтоимостьБУ_ОборотыДт = ?(КоличествоБУ_ОборотыДт_Всего = 0, 0, Окр(КоличествоБУ_ОборотыДт * СтоимостьБУ_ОборотыДт_Всего / КоличествоБУ_ОборотыДт_Всего, 2, 1));
							ТекСтоимостьБУ_ОборотыКт = ?(КоличествоБУ_ОборотыКт_Всего = 0, 0, Окр(КоличествоБУ_ОборотыКт * СтоимостьБУ_ОборотыКт_Всего / КоличествоБУ_ОборотыКт_Всего, 2, 1));
						КонецЕсли;
						
					Иначе
						КоличествоБУ = 0;
						КоличествоБУ_ОборотыДт = 0;
						КоличествоБУ_ОборотыКт = 0;
						
						ТекСтоимостьНУ = ?(СтоимостьБУ_Всего = 0, 0, Окр(СтоимостьНУ * СтоимостьБУ / СтоимостьБУ_Всего, 2, 1));
						ТекСтоимостьНУ_ОборотыДт = ?(СтоимостьБУ_ОборотыДт_Всего = 0, 0, Окр(СтоимостьНУ_ОборотыДт * СтоимостьБУ_ОборотыДт / СтоимостьБУ_ОборотыДт_Всего, 2, 1));
						ТекСтоимостьНУ_ОборотыКт = ?(СтоимостьБУ_ОборотыКт_Всего = 0, 0, Окр(СтоимостьНУ_ОборотыКт * СтоимостьБУ_ОборотыКт / СтоимостьБУ_ОборотыКт_Всего, 2, 1));
										
						ТекСтоимостьПР = ?(СтоимостьБУ_Всего = 0, 0, Окр(СтоимостьПР * СтоимостьБУ / СтоимостьБУ_Всего, 2, 1));
						ТекСтоимостьПР_ОборотыДт = ?(СтоимостьБУ_ОборотыДт_Всего = 0, 0, Окр(СтоимостьПР_ОборотыДт * СтоимостьБУ_ОборотыДт / СтоимостьБУ_ОборотыДт_Всего, 2, 1));
						ТекСтоимостьПР_ОборотыКт = ?(СтоимостьБУ_ОборотыКт_Всего = 0, 0, Окр(СтоимостьПР_ОборотыКт * СтоимостьБУ_ОборотыКт / СтоимостьБУ_ОборотыКт_Всего, 2, 1));
						
						ТекСтоимостьБУ = СтоимостьБУ;
						ТекСтоимостьБУ_ОборотыДт = СтоимостьБУ_ОборотыДт;
						ТекСтоимостьБУ_ОборотыКт = СтоимостьБУ_ОборотыКт;
					КонецЕсли;
									
					РаспределеноНУ = РаспределеноНУ + ТекСтоимостьНУ;
					РаспределеноНУ_ОборотыДт = РаспределеноНУ_ОборотыДт + ТекСтоимостьНУ_ОборотыДт;
					РаспределеноНУ_ОборотыКт = РаспределеноНУ_ОборотыКт + ТекСтоимостьНУ_ОборотыКт;
									
					РаспределеноПР = РаспределеноПР + ТекСтоимостьПР;
					РаспределеноПР_ОборотыДт = РаспределеноПР_ОборотыДт + ТекСтоимостьПР_ОборотыДт;
					РаспределеноПР_ОборотыКт = РаспределеноПР_ОборотыКт + ТекСтоимостьПР_ОборотыКт;
					
					СтоимостьБУ_ТекИтог = СтоимостьБУ_ТекИтог + ТекСтоимостьБУ;
					СтоимостьБУ_ОборотыДт_ТекИтог = СтоимостьБУ_ОборотыДт_ТекИтог + ТекСтоимостьБУ_ОборотыДт;
					СтоимостьБУ_ОборотыКт_ТекИтог = СтоимостьБУ_ОборотыКт_ТекИтог + ТекСтоимостьБУ_ОборотыКт;
					
					КоличествоБУ_ТекИтог = КоличествоБУ_ТекИтог + КоличествоБУ;
					КоличествоБУ_ОборотыДт_ТекИтог = КоличествоБУ_ОборотыДт_ТекИтог + КоличествоБУ_ОборотыДт;
					КоличествоБУ_ОборотыКт_ТекИтог = КоличествоБУ_ОборотыКт_ТекИтог + КоличествоБУ_ОборотыКт;
					
					// Если текущий итог по колонке равен всей сумме колонки,
					// то это последняя проводка и ее сумму надо скорректировать.
					Если ИтогиПоСубконто.Счет.Количественный = 1 Тогда
						Если ((КоличествоБУ_ТекИтог = (КоличествоБУ_Всего + КоличествоБУ_Всего_10_7)) И (ВедетсяУчетМПЗвПереработке = Нет))
							ИЛИ ((КоличествоБУ_ТекИтог = КоличествоБУ_Всего) И (ВедетсяУчетМПЗвПереработке = Да)) Тогда
							ТекСтоимостьНУ = ТекСтоимостьНУ + СтоимостьНУ - РаспределеноНУ;
							ТекСтоимостьПР = ТекСтоимостьПР + СтоимостьПР - РаспределеноПР;
						КонецЕсли;
						
						Если ((КоличествоБУ_ОборотыДт_ТекИтог = (КоличествоБУ_ОборотыДт_Всего + КоличествоБУ_ОборотыДт_Всего_10_7)) И (ВедетсяУчетМПЗвПереработке = Нет)) 
							ИЛИ ((КоличествоБУ_ОборотыДт_ТекИтог = КоличествоБУ_ОборотыДт_Всего) И (ВедетсяУчетМПЗвПереработке = Да)) Тогда
							ТекСтоимостьНУ_ОборотыДт = ТекСтоимостьНУ_ОборотыДт + СтоимостьНУ_ОборотыДт - РаспределеноНУ_ОборотыДт;
							ТекСтоимостьПР_ОборотыДт = ТекСтоимостьПР_ОборотыДт + СтоимостьПР_ОборотыДт - РаспределеноПР_ОборотыДт;
						КонецЕсли;
						
						Если ((КоличествоБУ_ОборотыКт_ТекИтог = (КоличествоБУ_ОборотыКт_Всего + КоличествоБУ_ОборотыКт_Всего_10_7)) И (ВедетсяУчетМПЗвПереработке = Нет)) 
							ИЛИ ((КоличествоБУ_ОборотыКт_ТекИтог = КоличествоБУ_ОборотыКт_Всего) И (ВедетсяУчетМПЗвПереработке = Да)) Тогда
							ТекСтоимостьНУ_ОборотыКт = ТекСтоимостьНУ_ОборотыКт + СтоимостьНУ_ОборотыКт - РаспределеноНУ_ОборотыКт;
							ТекСтоимостьПР_ОборотыКт = ТекСтоимостьПР_ОборотыКт + СтоимостьПР_ОборотыКт - РаспределеноПР_ОборотыКт;
						КонецЕсли;

					Иначе
						Если СтоимостьБУ_ТекИтог = СтоимостьБУ_Всего Тогда
							ТекСтоимостьНУ = ТекСтоимостьНУ + СтоимостьНУ - РаспределеноНУ;
							ТекСтоимостьПР = ТекСтоимостьПР + СтоимостьПР - РаспределеноПР;
						КонецЕсли;
						
						Если СтоимостьБУ_ОборотыДт_ТекИтог = СтоимостьБУ_ОборотыДт_Всего Тогда
							ТекСтоимостьНУ_ОборотыДт = ТекСтоимостьНУ_ОборотыДт + СтоимостьНУ_ОборотыДт - РаспределеноНУ_ОборотыДт;
							ТекСтоимостьПР_ОборотыДт = ТекСтоимостьПР_ОборотыДт + СтоимостьПР_ОборотыДт - РаспределеноПР_ОборотыДт;
						КонецЕсли;
						
						Если СтоимостьБУ_ОборотыКт_ТекИтог = СтоимостьБУ_ОборотыКт_Всего Тогда
							ТекСтоимостьНУ_ОборотыКт = ТекСтоимостьНУ_ОборотыКт + СтоимостьНУ_ОборотыКт - РаспределеноНУ_ОборотыКт;
							ТекСтоимостьПР_ОборотыКт = ТекСтоимостьПР_ОборотыКт + СтоимостьПР_ОборотыКт - РаспределеноПР_ОборотыКт;
						КонецЕсли;
					КонецЕсли;
					
					// Выгрузка оборотов НУ
					Параметры.ПараметрыАлгоритмов.Установить("ТаблицаПроводок", ПроводкиОбороты);
					
					Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "НУ");
					Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт1", ИтогиПоСубконто.Субконто1);
					Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт2", ИтогиПоСубконто.Субконто2);
					Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт3", ИтогиПоСубконто.Субконто3);
					
					Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "НУ");
					Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт1", ИтогиПоСубконто.Субконто1);
					Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт2", ИтогиПоСубконто.Субконто2);
					Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт3", ИтогиПоСубконто.Субконто3);
					
					// Стоимость
					Параметры.ПараметрыАлгоритмов.Установить("СчетДт", ИтогиПоСубконто.Счет);
					Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", ИтогиПоСубконто.КодСчета);
					Параметры.ПараметрыАлгоритмов.Установить("СчетКт", СчетПоКоду("00"));
					Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", "");
					Параметры.ПараметрыАлгоритмов.Установить("КоличествоДт", КоличествоБУ_ОборотыДт);
					Параметры.ПараметрыАлгоритмов.Установить("КоличествоКт", 0);
					Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", ТекСтоимостьНУ_ОборотыДт);
					ДобавитьПроводкуНУ();
					
					Параметры.ПараметрыАлгоритмов.Установить("СчетДт", СчетПоКоду("00"));
					Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "");
					Параметры.ПараметрыАлгоритмов.Установить("СчетКт", ИтогиПоСубконто.Счет);
					Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", ИтогиПоСубконто.КодСчета);
					Параметры.ПараметрыАлгоритмов.Установить("КоличествоДт", 0);
					Параметры.ПараметрыАлгоритмов.Установить("КоличествоКт", КоличествоБУ_ОборотыКт);
					Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", ТекСтоимостьНУ_ОборотыКт);
					ДобавитьПроводкуНУ();
					
					// Поддержка ПБУ 18
					Если Константа.ПрименяетсяПБУ18.Получить(Параметры.ДатаКонцаПериодаВыгрузки) = Да Тогда
						// Постоянные разницы
						Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "ПР");
						Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "ПР");
						Параметры.ПараметрыАлгоритмов.Установить("КоличествоДт", 0);
						Параметры.ПараметрыАлгоритмов.Установить("КоличествоКт", 0);
						
						// Стоимость
						Параметры.ПараметрыАлгоритмов.Установить("СчетДт", ИтогиПоСубконто.Счет);
						Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", ИтогиПоСубконто.КодСчета);
						Параметры.ПараметрыАлгоритмов.Установить("СчетКт", СчетПоКоду("00"));
						Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "");
						Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", ТекСтоимостьПР_ОборотыДт);
						ДобавитьПроводкуНУ();
						
						Параметры.ПараметрыАлгоритмов.Установить("СчетДт", СчетПоКоду("00"));
						Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "");
						Параметры.ПараметрыАлгоритмов.Установить("СчетКт", ИтогиПоСубконто.Счет);
						Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", ИтогиПоСубконто.КодСчета);
						Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", ТекСтоимостьПР_ОборотыКт);
						ДобавитьПроводкуНУ();
						
						// Временные разницы
						Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "ВР");
						Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "ВР");
						
						// Стоимость
						ТекСтоимостьВР = ТекСтоимостьБУ - ТекСтоимостьНУ - ТекСтоимостьПР;
						ТекСтоимостьВР_ОборотыДт = ТекСтоимостьБУ_ОборотыДт - ТекСтоимостьНУ_ОборотыДт - ТекСтоимостьПР_ОборотыДт;
						ТекСтоимостьВР_ОборотыКт = ТекСтоимостьБУ_ОборотыКт - ТекСтоимостьНУ_ОборотыКт - ТекСтоимостьПР_ОборотыКт;
						
						Параметры.ПараметрыАлгоритмов.Установить("СчетДт", ИтогиПоСубконто.Счет);
						Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", ИтогиПоСубконто.КодСчета);
						Параметры.ПараметрыАлгоритмов.Установить("СчетКт", СчетПоКоду("00"));
						Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", "");
						Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", ТекСтоимостьВР_ОборотыДт);
						ДобавитьПроводкуНУ();
						
						Параметры.ПараметрыАлгоритмов.Установить("СчетДт", СчетПоКоду("00"));
						Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "");
						Параметры.ПараметрыАлгоритмов.Установить("СчетКт", ИтогиПоСубконто.Счет);
						Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", ИтогиПоСубконто.КодСчета);
						Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", ТекСтоимостьВР_ОборотыКт);
						ДобавитьПроводкуНУ();
					КонецЕсли;
					
					// Выгрузка начальных остатков.
					Если НачМесяца(Параметры.ДатаВводаОстатков) = НУ.НачДата Тогда
						Параметры.ПараметрыАлгоритмов.Установить("ТаблицаПроводок", Проводки);
						
						Если ДтКт = 1 Тогда
							Параметры.ПараметрыАлгоритмов.Установить("СчетДт", ИтогиПоСубконто.Счет);
							Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", ИтогиПоСубконто.КодСчета);
							Параметры.ПараметрыАлгоритмов.Установить("СчетКт", СчетПоКоду("00"));
							Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", "");
							
						Иначе
							Параметры.ПараметрыАлгоритмов.Установить("СчетДт", СчетПоКоду("00"));
							Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "");
							Параметры.ПараметрыАлгоритмов.Установить("СчетКт", ИтогиПоСубконто.Счет);
							Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", ИтогиПоСубконто.КодСчета);
						КонецЕсли;
						
						Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "НУ");
						Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "НУ");
						Параметры.ПараметрыАлгоритмов.Установить("КоличествоДт", КоличествоБУ);
						Параметры.ПараметрыАлгоритмов.Установить("КоличествоКт", КоличествоБУ);
						Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", ТекСтоимостьНУ);
						ДобавитьПроводкуНУ();
						
						// Поддержка ПБУ 18
						Если Константа.ПрименяетсяПБУ18.Получить(Параметры.ДатаКонцаПериодаВыгрузки) = Да Тогда
							Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "ПР");
							Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "ПР");
							Параметры.ПараметрыАлгоритмов.Установить("КоличествоДт", 0);
							Параметры.ПараметрыАлгоритмов.Установить("КоличествоКт", 0);
							Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", ТекСтоимостьПР);
							ДобавитьПроводкуНУ();
							
							Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "ВР");
							Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "ВР");
							Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", ТекСтоимостьВР);
							ДобавитьПроводкуНУ();
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			
			Иначе // нет остатков по бух. учету
					
				// Выгрузка оборотов НУ
				Параметры.ПараметрыАлгоритмов.Установить("ТаблицаПроводок", ПроводкиОбороты);
					
				Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "НУ");
				Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "");
				Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт1", НУ.Субконто(1));
				Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт2", "");
				Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт3", "");
					
				Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "НУ");
				Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", "");
				Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт1", НУ.Субконто(1));
				Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт2", "");
				Параметры.ПараметрыАлгоритмов.Установить("СубконтоКт3", "");
					
				// Стоимость
				Параметры.ПараметрыАлгоритмов.Установить("СчетДт", НУ.Счет);
				Параметры.ПараметрыАлгоритмов.Установить("СчетКт", СчетПоКоду("00"));
				Параметры.ПараметрыАлгоритмов.Установить("КоличествоДт", КоличествоНУ_ОборотыДт);
				Параметры.ПараметрыАлгоритмов.Установить("КоличествоКт", 0);
				Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьНУ_ОборотыДт);
				ДобавитьПроводкуНУ();
					
				Параметры.ПараметрыАлгоритмов.Установить("СчетДт", СчетПоКоду("00"));
				Параметры.ПараметрыАлгоритмов.Установить("СчетКт", НУ.Счет);
				Параметры.ПараметрыАлгоритмов.Установить("КоличествоДт", 0);
				Параметры.ПараметрыАлгоритмов.Установить("КоличествоКт", КоличествоНУ_ОборотыКт);
				Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьНУ_ОборотыКт);
				ДобавитьПроводкуНУ();
					
				// Поддержка ПБУ 18
				Если Константа.ПрименяетсяПБУ18.Получить(Параметры.ДатаКонцаПериодаВыгрузки) = Да Тогда
					// Постоянные разницы
					Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "ПР");
					Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "ПР");
					Параметры.ПараметрыАлгоритмов.Установить("КоличествоДт", 0);
					Параметры.ПараметрыАлгоритмов.Установить("КоличествоКт", 0);
						
					// Стоимость
					Параметры.ПараметрыАлгоритмов.Установить("СчетДт", НУ.Счет);
					Параметры.ПараметрыАлгоритмов.Установить("СчетКт", СчетПоКоду("00"));
					Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьПР_ОборотыДт);
					ДобавитьПроводкуНУ();
						
					Параметры.ПараметрыАлгоритмов.Установить("СчетДт", СчетПоКоду("00"));
					Параметры.ПараметрыАлгоритмов.Установить("СчетКт", НУ.Счет);
					Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьПР_ОборотыКт);
					ДобавитьПроводкуНУ();
						
					// Временные разницы
					Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "ВР");
					Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "ВР");
						
					// Стоимость
					СтоимостьВР = - СтоимостьНУ - СтоимостьПР;
					СтоимостьВР_ОборотыДт = - СтоимостьНУ_ОборотыДт - СтоимостьПР_ОборотыДт;
					СтоимостьВР_ОборотыКт = - СтоимостьНУ_ОборотыКт - СтоимостьПР_ОборотыКт;
						
					Параметры.ПараметрыАлгоритмов.Установить("СчетДт", НУ.Счет);
					Параметры.ПараметрыАлгоритмов.Установить("СчетКт", СчетПоКоду("00"));
					Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьВР_ОборотыДт);
					ДобавитьПроводкуНУ();
						
					Параметры.ПараметрыАлгоритмов.Установить("СчетДт", СчетПоКоду("00"));
					Параметры.ПараметрыАлгоритмов.Установить("СчетКт", НУ.Счет);
					Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьВР_ОборотыКт);
					ДобавитьПроводкуНУ();
				КонецЕсли;
					
				// Выгрузка начальных остатков.
				Если НачМесяца(Параметры.ДатаВводаОстатков) = НУ.НачДата Тогда
					Параметры.ПараметрыАлгоритмов.Установить("ТаблицаПроводок", Проводки);
						
					Если ДтКт = 1 Тогда
						Параметры.ПараметрыАлгоритмов.Установить("СчетДт", НУ.Счет);
						Параметры.ПараметрыАлгоритмов.Установить("СчетКт", СчетПоКоду("00"));
						Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", КодСчетаДт);
						Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", "");
							
					Иначе
						Параметры.ПараметрыАлгоритмов.Установить("СчетДт", СчетПоКоду("00"));
						Параметры.ПараметрыАлгоритмов.Установить("СчетКт", НУ.Счет);
						Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "");
						Параметры.ПараметрыАлгоритмов.Установить("КодСчетаКт", КодСчетаДт);
					КонецЕсли;
						
					Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "НУ");
					Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "НУ");
					Параметры.ПараметрыАлгоритмов.Установить("КоличествоДт", КоличествоНУ);
					Параметры.ПараметрыАлгоритмов.Установить("КоличествоКт", КоличествоНУ);
					Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьНУ);
					ДобавитьПроводкуНУ();
						
					// Поддержка ПБУ 18
					Если Константа.ПрименяетсяПБУ18.Получить(Параметры.ДатаКонцаПериодаВыгрузки) = Да Тогда
						Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "ПР");
						Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "ПР");
						Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьПР);
						ДобавитьПроводкуНУ();
							
						Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаДт", "ВР");
						Параметры.ПараметрыАлгоритмов.Установить("ВидУчетаКт", "ВР");
						Параметры.ПараметрыАлгоритмов.Установить("СуммаПроводки", СтоимостьВР);
						ДобавитьПроводкуНУ();
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			БУ.ПолучитьСубконто(1,, "");
			БУ.ПолучитьПериод(, "");
			
		КонецЦикла; // НУ.ВыбратьСубконто()
	КонецЦикла; // НУ.ВыбратьСчета()

	Если НУ.НачДата = НачМесяца(Параметры.ДатаВводаОстатков) Тогда
		ВходящиеДанные = СоздатьОбъект("СписокЗначений");
		ВходящиеДанные.Установить("Налоговый", Проводки);
		ВходящиеДанные.Установить("Счет", СписокСчетовНУ);
		ВходящиеДанные.Установить("Дата", НУ.НачДата-1);
		ПодготовитьТаблицуОстатковНУ(); 
		//ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияБух");
	КонецЕсли;
	
	Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
		ВходящиеДанные = СоздатьОбъект("СписокЗначений");
		ВходящиеДанные.Установить("Налоговый", ПроводкиОбороты);
		ВходящиеДанные.Установить("Счет", СписокСчетовНУ);
		ВходящиеДанные.Установить("Дата", НУ.КонДата);
		ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияБух");
	КонецЕсли;
КонецЦикла;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВыгрузитьСведенияОбИБ" ИспользуетсяПриЗагрузке="false">
			<Текст>Идентификатор = "ИдентификаторКонфигурации";
Значение = глИдентификаторКонфигурации();
УстановитьАтрибут(rootNode, Идентификатор, Значение);

//**********************************************************
Идентификатор = "Конфигурация";
Значение = Метаданные.Идентификатор;
УстановитьАтрибут(rootNode, Идентификатор, Значение);

//**********************************************************
Идентификатор = "НомерРелиза";
Значение = Константа.НомерРелиза;
УстановитьАтрибут(rootNode, Идентификатор, Значение);

//**********************************************************
Идентификатор = "Организация";
Значение = ?(ПустоеЗначение(Константа.НазваниеОрганизации) = 0, Константа.НазваниеОрганизации, Константа.ОфициальноеНазваниеОрганизации);
УстановитьАтрибут(rootNode, Идентификатор, Значение);

//**********************************************************
Идентификатор = "ИНН";
Значение = Лев(Константа.ИННОрганизации, 10);
УстановитьАтрибут(rootNode, Идентификатор, Значение);

//**********************************************************
Идентификатор = "КПП";
Значение = Сред(Константа.ИННОрганизации, 12, 9);
УстановитьАтрибут(rootNode, Идентификатор, Значение);

//**********************************************************
Идентификатор = "УчетЗарплатыВоВнешнейПрограмме";
Значение = ?(Константа.УчетЗарплатыВоВнешнейПрограмме = Перечисление.Булево.Нет, 0, 0);
УстановитьАтрибут(rootNode, Идентификатор, Значение);
</Текст>
		</Алгоритм>
		<Алгоритм Имя="ДанныеПоНДСпоАвансамВыданным" ИспользуетсяПриЗагрузке="false">
			<Текст>ДанныеПоСФ = СоздатьОбъект("ТаблицаЗначений");
ДанныеПоСФ.НоваяКолонка("Контрагент");
ДанныеПоСФ.НоваяКолонка("ДоговорКонтрагента"); 
ДанныеПоСФ.НоваяКолонка("ДатаПлатежноРасчетногоДокумента");
ДанныеПоСФ.НоваяКолонка("НомерПлатежноРасчетногоДокумента", "Строка");
ДанныеПоСФ.НоваяКолонка("ДатаСФ"); 
ДанныеПоСФ.НоваяКолонка("НомерСФ", "Строка"); 
ДанныеПоСФ.НоваяКолонка("ВидЦенности", "Строка"); 
ДанныеПоСФ.НоваяКолонка("Номенклатура");
ДанныеПоСФ.НоваяКолонка("СтавкаНДС", "Строка"); 
ДанныеПоСФ.НоваяКолонка("СуммаБезНДС", "Число"); 
ДанныеПоСФ.НоваяКолонка("ЗадолженностьВал", "Число");
ДанныеПоСФ.НоваяКолонка("НДС", "Число");
ДанныеПоСФ.НоваяКолонка("КлючСтроки");
ДанныеПоСФ.НоваяКолонка("СчетФактура");
ДанныеПоСФ.НоваяКолонка("ВалютнаяСуммаСНДС", "Число");
ДанныеПоСФ.НоваяКолонка("ВалютаАванса");
		
ДополнительныеСведения = СоздатьОбъект("ТаблицаЗначений");
ДополнительныеСведения.НоваяКолонка("КлючСтроки");
ДополнительныеСведения.НоваяКолонка("Событие"); 
ДополнительныеСведения.НоваяКолонка("СчетУчета");
ДополнительныеСведения.НоваяКолонка("СуммаБезНДС", "Число");
ДополнительныеСведения.НоваяКолонка("НДС", "Число");
ДополнительныеСведения.НоваяКолонка("ВидЦенности", "Строка"); 
ДополнительныеСведения.НоваяКолонка("Номенклатура");
ДополнительныеСведения.НоваяКолонка("СтавкаНДС", "Строка");
ДополнительныеСведения.НоваяКолонка("ВалютнаяСуммаСНДС", "Число");
///******
ДополнительныеСведения.НоваяКолонка("Контрагент");
ДополнительныеСведения.НоваяКолонка("ДоговорКонтрагента"); 
ДополнительныеСведения.НоваяКолонка("ДатаПлатежноРасчетногоДокумента");
ДополнительныеСведения.НоваяКолонка("НомерПлатежноРасчетногоДокумента", "Строка");
ДополнительныеСведения.НоваяКолонка("ДатаСФ"); 
ДополнительныеСведения.НоваяКолонка("НомерСФ", "Строка"); 
ДополнительныеСведения.НоваяКолонка("ПредъявленСФ", "Число");
ДополнительныеСведения.НоваяКолонка("СчетФактура");
ДополнительныеСведения.НоваяКолонка("ВалютаАванса");
		
Опер = СоздатьОбъект("Операция");
Сч76_ВА = СчетПоКоду("76.ВА");
														 
БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
БухИт.ИспользоватьСубконто(ВидыСубконто.Контрагенты);
БухИт.ИспользоватьСубконто(ВидыСубконто.СчетаФактурыПолученные);

БухИт.ВыполнитьЗапрос(, Параметры.ПараметрыАлгоритмов.Получить("НДСДатаВыгрузки"), "76.ВА");
		
ТаблицаСтавок = СоздатьОбъект("ТаблицаЗначений");
		
БухИт.ВыбратьСубконто(1);	
Пока БухИт.ПолучитьСубконто(1) = 1 Цикл
	БухИт.ВыбратьСубконто(2);	
	Пока БухИт.ПолучитьСубконто(2) = 1 Цикл
				
		Док = БухИт.Субконто(2);
		Если ПустоеЗначение(Док) = 1 Тогда
			Продолжить;
			
		ИначеЕсли ПустоеЗначение(Док.Договор) = 1 Тогда
			Сообщить("Не выгружены данные по счету-фактуре """ + Док + """: не указан договор.", "!");
			Продолжить;
		КонецЕсли;
		
		ДатаНомер = СокрЛП(Док.ДатаНомерСчетаФактуры);
		Если ПустоеЗначение(ДатаНомер) = 0 Тогда
			ПозицияПробела = Найти(ДатаНомер, " ");
			Если ПозицияПробела &gt; 0 Тогда
				ДатаСФ = Дата(Лев(ДатаНомер, ПозицияПробела-1));
				НомерСФ = Прав(ДатаНомер, СтрДлина(ДатаНомер) - ПозицияПробела);
			Иначе
				НомерСФ = ДатаНомер;
			КонецЕсли;
		Иначе
			ДатаСФ = Док.ДатаДок;
			НомерСФ = Док.НомерДок;
		КонецЕсли;
				
		ВидЦенности = "АвансыВыданные";
		Договор = Док.Договор;
				
		Курс = 1;
		Кратность = 1;
		Валюта = Параметры.Рубли;
					
		ДанныеПоСФ.НоваяСтрока();
		ДанныеПоСФ.Контрагент = Док.Контрагент;
		ДанныеПоСФ.ДоговорКонтрагента = Договор; 
		ДанныеПоСФ.ДатаСФ = ДатаСФ; 
		ДанныеПоСФ.НомерСФ = НомерСФ; 
		ДанныеПоСФ.КлючСтроки = ДанныеПоСФ.НомерСтроки;
		ДанныеПоСФ.СчетФактура = Док;
		ДанныеПоСФ.ВалютаАванса = Параметры.Рубли;
				
		ТаблицаСтавок.Очистить();
		ТаблицаСтавок.НоваяКолонка("ВидЦенности");
		ТаблицаСтавок.НоваяКолонка("Ставка");
		ТаблицаСтавок.НоваяКолонка("СуммаБезНДС");
		ТаблицаСтавок.НоваяКолонка("НДС");
				
		Если (Док.СуммаБезНДС20 + Док.НДС20) &lt;&gt; 0 Тогда
			ТаблицаСтавок.НоваяСтрока();
			ТаблицаСтавок.ВидЦенности = ВидЦенности;
			ТаблицаСтавок.СуммаБезНДС = Док.СуммаБезНДС20;
			ТаблицаСтавок.НДС = Док.НДС20;
			ТаблицаСтавок.Ставка = "НДС18_118";
		КонецЕсли;
	
		Если (Док.СуммаБезНДС10 + Док.НДС10) &lt;&gt; 0 Тогда
			ТаблицаСтавок.НоваяСтрока();
			ТаблицаСтавок.ВидЦенности = ВидЦенности;
			ТаблицаСтавок.СуммаБезНДС = Док.СуммаБезНДС10;
			ТаблицаСтавок.НДС = Док.НДС10;
			ТаблицаСтавок.Ставка = "НДС10_110";
		КонецЕсли;

		ТаблицаСтавок.Сортировать("Ставка");

		ТаблицаСтавок.ВыбратьСтроки();
		Пока ТаблицаСтавок.ПолучитьСтроку() = 1 Цикл
			ДополнительныеСведения.НоваяСтрока();
			ДополнительныеСведения.КлючСтроки = ДанныеПоСФ.НомерСтроки;
			ДополнительныеСведения.СуммаБезНДС = ТаблицаСтавок.СуммаБезНДС;
			ДополнительныеСведения.НДС = ТаблицаСтавок.НДС;
			ДополнительныеСведения.ВидЦенности = ВидЦенности;
			ДополнительныеСведения.СтавкаНДС = ТаблицаСтавок.Ставка;
			
			ДополнительныеСведения.Контрагент = ДанныеПоСФ.Контрагент;
			ДополнительныеСведения.ДоговорКонтрагента =  ДанныеПоСФ.ДоговорКонтрагента;
			ДополнительныеСведения.ДатаСФ = ДанныеПоСФ.ДатаСФ;
			ДополнительныеСведения.НомерСФ = ДанныеПоСФ.НомерСФ;
			ДополнительныеСведения.ПредъявленСФ = 1;
			ДополнительныеСведения.СчетФактура = ДанныеПоСФ.СчетФактура;
			ДополнительныеСведения.ВалютаАванса = ДанныеПоСФ.ВалютаАванса;		
			ДополнительныеСведения.СчетУчета = Сч76_ВА;

		КонецЦикла;
	КонецЦикла;
КонецЦикла;

ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("СчетУчетаНДС", Сч76_ВА);
ВходящиеДанные.Установить("ДанныеПоСФНДС", ДополнительныеСведения);
ВходящиеДанные.Установить("РазделУчета", "НДСПоАвансамПолученным");

ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);

Если Параметры.ДатаКонцаПериодаВыгрузки = Параметры.ПараметрыАлгоритмов.Получить("НДСДатаВыгрузки") Тогда
	ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 0);
	ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
	ВходящиеДанные.Установить("Дата", Параметры.ДатаКонцаПериодаВыгрузки);
Иначе
	ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
	ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 0);
	ВходящиеДанные.Установить("Дата", Параметры.ДатаВводаОстатков - 1);
КонецЕсли;

ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ВводОстатковНДС");</Текст>
		</Алгоритм>
		<Алгоритм Имя="ДанныеПоНДСпоАвансамПолученным" ИспользуетсяПриЗагрузке="false">
			<Текст>ДанныеПоСФ = СоздатьОбъект("ТаблицаЗначений");
ДанныеПоСФ.НоваяКолонка("Контрагент");
ДанныеПоСФ.НоваяКолонка("ДоговорКонтрагента"); 
ДанныеПоСФ.НоваяКолонка("ДатаПлатежноРасчетногоДокумента");
ДанныеПоСФ.НоваяКолонка("НомерПлатежноРасчетногоДокумента", "Строка");
ДанныеПоСФ.НоваяКолонка("ДатаСФ"); 
ДанныеПоСФ.НоваяКолонка("НомерСФ", "Строка"); 
ДанныеПоСФ.НоваяКолонка("ВидЦенности", "Строка"); 
ДанныеПоСФ.НоваяКолонка("Номенклатура");
ДанныеПоСФ.НоваяКолонка("СтавкаНДС", "Строка"); 
ДанныеПоСФ.НоваяКолонка("СуммаБезНДС", "Число"); 
ДанныеПоСФ.НоваяКолонка("ЗадолженностьВал", "Число");
ДанныеПоСФ.НоваяКолонка("НДС", "Число");
ДанныеПоСФ.НоваяКолонка("КлючСтроки");
ДанныеПоСФ.НоваяКолонка("СчетФактура");
ДанныеПоСФ.НоваяКолонка("ВалютнаяСуммаСНДС", "Число");
ДанныеПоСФ.НоваяКолонка("ВалютаАванса");
		
ДополнительныеСведения = СоздатьОбъект("ТаблицаЗначений");
ДополнительныеСведения.НоваяКолонка("КлючСтроки");
ДополнительныеСведения.НоваяКолонка("Событие"); 
ДополнительныеСведения.НоваяКолонка("СчетУчета");
ДополнительныеСведения.НоваяКолонка("СуммаБезНДС", "Число");
ДополнительныеСведения.НоваяКолонка("НДС", "Число");
ДополнительныеСведения.НоваяКолонка("ВидЦенности", "Строка"); 
ДополнительныеСведения.НоваяКолонка("Номенклатура");
ДополнительныеСведения.НоваяКолонка("СтавкаНДС", "Строка");
ДополнительныеСведения.НоваяКолонка("ВалютнаяСуммаСНДС", "Число");
///******
ДополнительныеСведения.НоваяКолонка("Контрагент");
ДополнительныеСведения.НоваяКолонка("ДоговорКонтрагента"); 
ДополнительныеСведения.НоваяКолонка("ДатаПлатежноРасчетногоДокумента");
ДополнительныеСведения.НоваяКолонка("НомерПлатежноРасчетногоДокумента", "Строка");
ДополнительныеСведения.НоваяКолонка("ДатаСФ"); 
ДополнительныеСведения.НоваяКолонка("НомерСФ", "Строка"); 
ДополнительныеСведения.НоваяКолонка("ПредъявленСФ", "Число");
ДополнительныеСведения.НоваяКолонка("СчетФактура");
ДополнительныеСведения.НоваяКолонка("ВалютаАванса");
		
Опер = СоздатьОбъект("Операция");
Сч76_АВ = СчетПоКоду("76.АВ");
														 
БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
БухИт.ИспользоватьСубконто(ВидыСубконто.Контрагенты);
БухИт.ИспользоватьСубконто(ВидыСубконто.СчетаФактурыВыданные);

БухИт.ВыполнитьЗапрос(, Параметры.ПараметрыАлгоритмов.Получить("НДСДатаВыгрузки"), "76.АВ");
		
СчетаФактурыВВалюте = СоздатьОбъект("СписокЗначений");
БухИт.ВыбратьСубконто(2);
Пока БухИт.ПолучитьСубконто(2) = 1 Цикл
	Если ПустоеЗначение(БухИт.Субконто()) = 0 Тогда
		Если (БухИт.СКД() &lt;&gt; 0) и (ПустоеЗначение(БухИт.Субконто(2).Валюта) = 0) Тогда
			СчетаФактурыВВалюте.ДобавитьЗначение(БухИт.Субконто(2));
		КонецЕсли;
	КонецЕсли;
КонецЦикла;
		
Если СчетаФактурыВВалюте.РазмерСписка() &gt; 0 Тогда
	БухИтВал = СоздатьОбъект("БухгалтерскиеИтоги");
	БухИтВал.ИспользоватьСубконто(ВидыСубконто.СчетаФактурыВыданные, СчетаФактурыВВалюте, 2);
	БухИтВал.ВыполнитьЗапрос('01.01.1980', Параметры.ПараметрыАлгоритмов.Получить("НДСДатаВыгрузки"), "76.АВ",,, 2);
КонецЕсли;
		
ТаблицаСтавок = СоздатьОбъект("ТаблицаЗначений");
		
БухИт.ВыбратьСубконто(1);	
Пока БухИт.ПолучитьСубконто(1) = 1 Цикл
	БухИт.ВыбратьСубконто(2);	
	Пока БухИт.ПолучитьСубконто(2) = 1 Цикл
				
		Док = БухИт.Субконто(2);
		Если ПустоеЗначение(Док) = 1 Тогда
			Продолжить;
			
		ИначеЕсли ПустоеЗначение(Док.Договор) = 1 Тогда
			Сообщить("Не выгружены данные по счету-фактуре """ + Док + """: не указан договор.", "!");
			Продолжить;
		КонецЕсли;
				
		ДатаСФ = Док.ДатаДок;
		НомерСФ = Док.НомерДок;
		ДатаРД = ?(ПустоеЗначение(Док.ДатаПлатРасчДок) = 1, Док.ДатаДок, Док.ДатаПлатРасчДок);
		НомерРД = Док.НомерПлатРасчДок;
				
		ВидЦенности = ?(Док.НДСпоСтавкеНольПроцентов = 1 ,"АвансыПолученные0", "АвансыПолученные");
		Договор = Док.Договор;
				
		ЦеныВДоговоре = 1; // в рублях
		ОплатаДоговора = 1;
		ВестиУчетРасчетовУЕ = 0;
		Курс = 1;
		Кратность = 1;
		Валюта = Параметры.Рубли;
					
		Если Договор.Выбран() = 1 Тогда
			Если ПустоеЗначение(Договор.ВалютаДоговора) = 0 Тогда
				ЦеныВДоговоре = 2; // в валюте
			КонецЕсли;
			ОплатаДоговора = Договор.ОплатаДоговора; // 1 - врублях, 2 - в валюте
			ВестиУчетРасчетовУЕ = Договор.ВестиУчетРасчетовУЕ;
		КонецЕсли;
					
		Если ЦеныВДоговоре = 2 Тогда
			Курс = Док.Курс;
						
			Валюта = Договор.ВалютаДоговора;
			Кратность = Валюта.Кратность.Получить(Док.ДатаДок);
			Кратность = ?(Кратность=0, 1, Кратность);
			Если ВестиУчетРасчетовУЕ = 1 Тогда
				Кратность = Кратность * 100 / (100 + Договор.ПроцентКорректировкиКурсаУЕ);
			КонецЕсли;
		КонецЕсли;
			
		ДанныеПоСФ.НоваяСтрока();
		ДанныеПоСФ.Контрагент = Док.Контрагент;
		ДанныеПоСФ.ДоговорКонтрагента = Договор; 
		ДанныеПоСФ.ДатаСФ = ДатаСФ; 
		ДанныеПоСФ.НомерСФ = НомерСФ; 
		ДанныеПоСФ.ДатаПлатежноРасчетногоДокумента = ДатаРД; 
		ДанныеПоСФ.НомерПлатежноРасчетногоДокумента = НомерРД; 
		ДанныеПоСФ.КлючСтроки = ДанныеПоСФ.НомерСтроки;
		ДанныеПоСФ.СчетФактура = Док;
		ДанныеПоСФ.ВалютаАванса = ?(ОплатаДоговора = 2, Валюта, Параметры.Рубли);
				
		ТаблицаСтавок.Очистить();
		ТаблицаСтавок.НоваяКолонка("ВидЦенности");
		ТаблицаСтавок.НоваяКолонка("Ставка");
		ТаблицаСтавок.НоваяКолонка("СуммаБезНДС");
		ТаблицаСтавок.НоваяКолонка("НДС");
		ТаблицаСтавок.НоваяКолонка("ЗадолженностьВал", "Число");
				
		Док.ВыбратьСтроки();
		Пока Док.ПолучитьСтроку() = 1 Цикл
			ТаблицаСтавок.НоваяСтрока();
			ТаблицаСтавок.ВидЦенности = ВидЦенности;
			ТаблицаСтавок.СуммаБезНДС = Док.Сумма;
			ТаблицаСтавок.НДС = Док.НДС;
			ТаблицаСтавок.ЗадолженностьВал = Док.Сумма;
					
			Ставка = ?(ПустоеЗначение(Док.СтавкаНДС) = 0, Док.СтавкаНДС.Ставка, 0);
					
			Если Ставка &gt; 10.5 Тогда
				Если Док.ДатаДок &lt; '01.01.2004' Тогда
					ТаблицаСтавок.Ставка = "НДС20_120";
				Иначе
					ТаблицаСтавок.Ставка = "НДС18_118";
				КонецЕсли;
				
			ИначеЕсли Ставка &gt; 0 Тогда
				ТаблицаСтавок.Ставка = "НДС10_110";
						
			Иначе
				ТаблицаСтавок.Ставка = "БезНДС";
			КонецЕсли;
		КонецЦикла;
				
		ТаблицаСтавок.Свернуть("ВидЦенности,Ставка", "СуммаБезНДС,НДС,ЗадолженностьВал");
		ТаблицаСтавок.Сортировать("Ставка");
				
		БухИт.ВыбратьСчета();
		Пока БухИт.ПолучитьСчет() = 1 Цикл
						
			НомСтроки = 1;
			Пока НомСтроки &lt;= ТаблицаСтавок.КоличествоСтрок() Цикл
				Если ТаблицаСтавок.ПолучитьЗначение(НомСтроки, "НДС") = 0 Тогда
					ТаблицаСтавок.УдалитьСтроку(НомСтроки);
							
				Иначе
					НомСтроки = НомСтроки + 1;
				КонецЕсли;
			КонецЦикла;
					
			ТекущееСальдо = БухИт.СКД();
					
			РаспределеноСуммаБезНДС = 0;
			СуммаПоКолонкеСуммаБезНДС = 0;
			РаспределеноНДС = 0;
			СуммаПоКолонкеНДС = ТаблицаСтавок.Итог("НДС");
					
			Если СуммаПоКолонкеНДС &lt;&gt; 0 Тогда
				ЗначениеКолонкиНДС = 0;
				ЗначениеКолонкиСуммаБезНДС = 0;
						
				Если (ОплатаДоговора = 2) или (ВестиУчетРасчетовУЕ = 1) Тогда
					Если БухИтВал.ПолучитьСубконто(1,, Док) = 1 Тогда
						СуммаНДСВсегоРуб = БухИтВал.ДО();
								
					Иначе
						СуммаНДСВсегоРуб = 0;
					КонецЕсли;
							
					Если СуммаНДСВсегоРуб = 0 Тогда
						Продолжить;
					КонецЕсли;
							
				Иначе
					СуммаНДСВсегоРуб = СуммаПоКолонкеНДС;
				КонецЕсли;
						
				ТаблицаСтавок.ВыбратьСтроки();
				Пока ТаблицаСтавок.ПолучитьСтроку() = 1 Цикл
					ЗначениеКолонкиНДС = ТаблицаСтавок.НДС;
					ЗначениеКолонкиСуммаБезНДС = ТаблицаСтавок.СуммаБезНДС;
					ЗначениеКолонкиЗадолженность = ТаблицаСтавок.ЗадолженностьВал;
							
					ЗначениеКолонкиНДС = Окр(ЗначениеКолонкиНДС * ТекущееСальдо / СуммаПоКолонкеНДС, 2, 1);
					ЗначениеКолонкиСуммаБезНДС = Окр(ЗначениеКолонкиСуммаБезНДС * ТекущееСальдо / СуммаПоКолонкеНДС, 2, 1);
					ЗначениеКолонкиЗадолженность = Окр(ЗначениеКолонкиЗадолженность * ТекущееСальдо / СуммаНДСВсегоРуб, 2, 1);
							
					РаспределеноНДС = РаспределеноНДС + ЗначениеКолонкиНДС;
					РаспределеноСуммаБезНДС = РаспределеноСуммаБезНДС + ЗначениеКолонкиСуммаБезНДС;
							
					ТаблицаСтавок.НДС = ЗначениеКолонкиНДС;
					ТаблицаСтавок.СуммаБезНДС = ЗначениеКолонкиСуммаБезНДС;
					ТаблицаСтавок.ЗадолженностьВал = ЗначениеКолонкиЗадолженность;
				КонецЦикла;
						
				НомПоследнейСтроки = ТаблицаСтавок.КоличествоСтрок();
						
				Если РаспределеноНДС &lt;&gt; ТекущееСальдо Тогда
					ЗначениеКолонкиНДС = ЗначениеКолонкиНДС + ТекущееСальдо - РаспределеноНДС;
					ТаблицаСтавок.УстановитьЗначение(НомПоследнейСтроки, "НДС", ЗначениеКолонкиНДС);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
				
		ТаблицаСтавок.ВыбратьСтроки();
		Пока ТаблицаСтавок.ПолучитьСтроку() = 1 Цикл
			ДополнительныеСведения.НоваяСтрока();
			ДополнительныеСведения.КлючСтроки = ДанныеПоСФ.НомерСтроки;
			ДополнительныеСведения.СуммаБезНДС = ТаблицаСтавок.СуммаБезНДС - ТаблицаСтавок.НДС;
			ДополнительныеСведения.НДС = ТаблицаСтавок.НДС;
			ДополнительныеСведения.ВидЦенности = ?(ТаблицаСтавок.ВидЦенности = "", ВидЦенности, ТаблицаСтавок.ВидЦенности);
			ДополнительныеСведения.СтавкаНДС = ТаблицаСтавок.Ставка;
			ДополнительныеСведения.ВалютнаяСуммаСНДС = ТаблицаСтавок.ЗадолженностьВал;
			
			ДополнительныеСведения.Контрагент = ДанныеПоСФ.Контрагент;
			ДополнительныеСведения.ДоговорКонтрагента =  ДанныеПоСФ.ДоговорКонтрагента;
			ДополнительныеСведения.ДатаПлатежноРасчетногоДокумента = ДанныеПоСФ.ДатаПлатежноРасчетногоДокумента;
			ДополнительныеСведения.НомерПлатежноРасчетногоДокумента = ДанныеПоСФ.НомерПлатежноРасчетногоДокумента;
			ДополнительныеСведения.ДатаСФ = ДанныеПоСФ.ДатаСФ;
			ДополнительныеСведения.НомерСФ = ДанныеПоСФ.НомерСФ;
			ДополнительныеСведения.ПредъявленСФ = 1;
			ДополнительныеСведения.СчетФактура = ДанныеПоСФ.СчетФактура;
			ДополнительныеСведения.ВалютаАванса = ДанныеПоСФ.ВалютаАванса;		
			ДополнительныеСведения.СчетУчета = Сч76_АВ;
			
			ДанныеПоСФ.СуммаБезНДС = ДанныеПоСФ.СуммаБезНДС + ТаблицаСтавок.СуммаБезНДС - ТаблицаСтавок.НДС;
			ДанныеПоСФ.НДС = ДанныеПоСФ.НДС + ТаблицаСтавок.НДС;
			ДанныеПоСФ.ЗадолженностьВал = ДанныеПоСФ.ЗадолженностьВал + ТаблицаСтавок.ЗадолженностьВал;
			ДанныеПоСФ.ВалютнаяСуммаСНДС = ДанныеПоСФ.ВалютнаяСуммаСНДС + ТаблицаСтавок.ЗадолженностьВал;
		КонецЦикла;
	КонецЦикла;
КонецЦикла;

ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("СчетУчетаНДС", Сч76_АВ);
ВходящиеДанные.Установить("ДанныеПоСФНДС", ДополнительныеСведения);
ВходящиеДанные.Установить("РазделУчета", "НДСПоАвансамПолученным");

ВходящиеДанные.Установить("Дата", Параметры.ДатаВводаОстатков - 1);
ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);

Если Параметры.ДатаКонцаПериодаВыгрузки = Параметры.ПараметрыАлгоритмов.Получить("НДСДатаВыгрузки") Тогда	
	ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 0);
	ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
	ВходящиеДанные.Установить("Дата", Параметры.ДатаКонцаПериодаВыгрузки);
Иначе
	ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
	ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 0);
	ВходящиеДанные.Установить("Дата", Параметры.ДатаВводаОстатков - 1);
КонецЕсли;
	
ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ВводОстатковНДС");</Текст>
		</Алгоритм>
		<Алгоритм Имя="ДанныеПоНДСпоПокупателям" ИспользуетсяПриЗагрузке="false">
			<Текст>ДанныеПоСФ = СоздатьОбъект("ТаблицаЗначений");
ДанныеПоСФ.НоваяКолонка("Контрагент");
ДанныеПоСФ.НоваяКолонка("ДоговорКонтрагента");
ДанныеПоСФ.НоваяКолонка("ДатаПлатежноРасчетногоДокумента");
ДанныеПоСФ.НоваяКолонка("НомерПлатежноРасчетногоДокумента", "Строка");
ДанныеПоСФ.НоваяКолонка("ДатаСФ"); 
ДанныеПоСФ.НоваяКолонка("НомерСФ", "Строка"); 
ДанныеПоСФ.НоваяКолонка("ВидЦенности", "Строка"); 
ДанныеПоСФ.НоваяКолонка("СтавкаНДС", "Строка"); 
ДанныеПоСФ.НоваяКолонка("СуммаБезНДС", "Число");
ДанныеПоСФ.НоваяКолонка("ЗадолженностьВал", "Число");
ДанныеПоСФ.НоваяКолонка("НДС", "Число"); 
ДанныеПоСФ.НоваяКолонка("КлючСтроки");
ДанныеПоСФ.НоваяКолонка("СчетФактура");
ДанныеПоСФ.НоваяКолонка("ВалютнаяСуммаСНДС", "Число");
ДанныеПоСФ.НоваяКолонка("ВалютаАванса");
		
ДополнительныеСведения = СоздатьОбъект("ТаблицаЗначений");
ДополнительныеСведения.НоваяКолонка("КлючСтроки");
ДополнительныеСведения.НоваяКолонка("Событие"); 
ДополнительныеСведения.НоваяКолонка("СчетУчета");
ДополнительныеСведения.НоваяКолонка("СуммаБезНДС", "Число");
ДополнительныеСведения.НоваяКолонка("НДС", "Число");
ДополнительныеСведения.НоваяКолонка("ВидЦенности", "Строка"); 
ДополнительныеСведения.НоваяКолонка("СтавкаНДС", "Строка");
ДополнительныеСведения.НоваяКолонка("ВалютнаяСуммаСНДС", "Число");
///******
ДополнительныеСведения.НоваяКолонка("Контрагент");
ДополнительныеСведения.НоваяКолонка("ДоговорКонтрагента"); 
ДополнительныеСведения.НоваяКолонка("ДатаПлатежноРасчетногоДокумента");
ДополнительныеСведения.НоваяКолонка("НомерПлатежноРасчетногоДокумента", "Строка");
ДополнительныеСведения.НоваяКолонка("ДатаСФ"); 
ДополнительныеСведения.НоваяКолонка("НомерСФ", "Строка"); 
ДополнительныеСведения.НоваяКолонка("ПредъявленСФ", "Число");
ДополнительныеСведения.НоваяКолонка("СчетФактура");
ДополнительныеСведения.НоваяКолонка("ВалютаАванса");
		
БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
БухИт.ИспользоватьСубконто(ВидыСубконто.СчетаФактурыВыданные);

//Если Параметры.ДатаКонцаПериодаВыгрузки = Параметры.ДатаВводаОстатков Тогда
//	БухИт.ВыполнитьЗапрос(Параметры.ПараметрыАлгоритмов.Получить("НДСДатаВыгрузки"), , "76.Н.1");
//Иначе
	БухИт.ВыполнитьЗапрос(, Параметры.ПараметрыАлгоритмов.Получить("НДСДатаВыгрузки"), "76.Н.1");
//КонецЕсли;

		
СчетаФактурыВВалюте = СоздатьОбъект("СписокЗначений");
БухИт.ВыбратьСубконто(1);
Пока БухИт.ПолучитьСубконто(1) = 1 Цикл
	Если ПустоеЗначение(БухИт.Субконто()) = 0 Тогда
		Если (БухИт.СКК() &lt;&gt; 0) и (ПустоеЗначение(БухИт.Субконто(1).Валюта) = 0) Тогда
			СчетаФактурыВВалюте.ДобавитьЗначение(БухИт.Субконто(1));
		КонецЕсли;
	КонецЕсли;
КонецЦикла;
		
Если СчетаФактурыВВалюте.РазмерСписка() &gt; 0 Тогда
	БухИтВал = СоздатьОбъект("БухгалтерскиеИтоги");
	БухИтВал.ИспользоватьСубконто(ВидыСубконто.СчетаФактурыВыданные, СчетаФактурыВВалюте, 2);
	БухИтВал.ВыполнитьЗапрос('01.01.1980', Параметры.ПараметрыАлгоритмов.Получить("НДСДатаВыгрузки"), "76.Н.1",,, 2);
КонецЕсли;
		
ТаблицаСтавок = СоздатьОбъект("ТаблицаЗначений");
		
Опер = СоздатьОбъект("Операция");
Сч76_Н_1 = СчетПоКоду("76.Н.1");
		
БухИт.ВыбратьСубконто(1);	
Пока БухИт.ПолучитьСубконто(1) = 1 Цикл
	Док = БухИт.Субконто(1);
	Если ПустоеЗначение(Док) = 1 Тогда
		Продолжить;
		
	ИначеЕсли ПустоеЗначение(Док.Договор) = 1 Тогда
		Сообщить("Не выгружены данные по счету-фактуре """ + Док + """: не указан договор.", "!");
		Продолжить;
	КонецЕсли;
				
	ДатаСФ = Док.ДатаДок;
	НомерСФ = Док.НомерДок;
	Договор = Док.Договор;
				
	ДанныеПоСФ.НоваяСтрока();
	ДанныеПоСФ.Контрагент = Док.Контрагент;
	ДанныеПоСФ.ДоговорКонтрагента = Договор; 
	ДанныеПоСФ.ДатаСФ = ДатаСФ; 
	ДанныеПоСФ.НомерСФ = НомерСФ; 
	ДанныеПоСФ.КлючСтроки = ДанныеПоСФ.НомерСтроки;
	ДанныеПоСФ.СчетФактура = Док;
	ДанныеПоСФ.ДатаПлатежноРасчетногоДокумента = ?(ПустоеЗначение(Док.ДатаПлатРасчДок) = 1, Док.ДатаДок, Док.ДатаПлатРасчДок);
	ДанныеПоСФ.НомерПлатежноРасчетногоДокумента = Док.НомерПлатРасчДок;
				
	ТаблицаСтавок.Очистить();
	ТаблицаСтавок.НоваяКолонка("ВидЦенности");
	ТаблицаСтавок.НоваяКолонка("Номенклатура");
	ТаблицаСтавок.НоваяКолонка("Ставка");
	ТаблицаСтавок.НоваяКолонка("СуммаБезНДС");
	ТаблицаСтавок.НоваяКолонка("НДС");
				
	Док.ВыбратьСтроки();
	Пока Док.ПолучитьСтроку() = 1 Цикл
					
		Вид = Док.Товар.Вид();
		Если Вид = "Номенклатура" Тогда
			Если Док.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар Тогда
				Если Док.Товар.ТипТовара = Перечисление.ТипыТоваров.НаКомиссии Тогда
					Продолжить;
							
				ИначеЕсли Док.Товар.ТипТовара = Перечисление.ТипыТоваров.Тара Тогда
					Продолжить;
								
				Иначе
					ВидЦенности = "Товары";
				КонецЕсли;
							
			ИначеЕсли Док.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция Тогда
				ВидЦенности = "Товары";
							
			ИначеЕсли Док.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Полуфабрикат Тогда
				ВидЦенности = "Товары";
							
			ИначеЕсли Док.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Услуга Тогда
				ВидЦенности = "ПрочиеРаботыИУслуги";
							
			ИначеЕсли Док.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Работа Тогда
				ВидЦенности = "ПрочиеРаботыИУслуги";
							
			ИначеЕсли Док.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.ПосредническаяУслуга Тогда
				ВидЦенности = "ПосредническиеУслуги";
							
			ИначеЕсли Док.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.УслугаЕНВД Тогда
				Продолжить;
							
			Иначе
				ВидЦенности = "Товары";
			КонецЕсли;
						
		ИначеЕсли Вид = "Материалы" Тогда
			ВидЦенности = "Материалы";
						
		ИначеЕсли Вид = "ОсновныеСредства" Тогда
			ВидЦенности = "ОС";
						
		ИначеЕсли Вид = "НематериальныеАктивы" Тогда
			ВидЦенности = "НМА";
						
		Иначе
			ВидЦенности = "Товары";
		КонецЕсли;
					
		ТаблицаСтавок.НоваяСтрока();
		ТаблицаСтавок.ВидЦенности = ВидЦенности;
		ТаблицаСтавок.Номенклатура = Док.Товар;
		ТаблицаСтавок.СуммаБезНДС = Док.Сумма;
		ТаблицаСтавок.НДС = Док.НДС;
					
		Если Док.НДСпоСтавкеНольПроцентов = 1 Тогда
			ТаблицаСтавок.Ставка = "НДС0"
						
		Иначе
			Ставка = ?(ПустоеЗначение(Док.СтавкаНДС) = 0, Док.СтавкаНДС.Ставка, 0);
						
			Если Ставка &gt; 10.5 Тогда
				
				Если Док.ДатаДок &lt; '01.01.2004' Тогда
					ТаблицаСтавок.Ставка = "НДС20";
				Иначе
					ТаблицаСтавок.Ставка = "НДС18";
				КонецЕсли;
				
			ИначеЕсли Ставка &gt; 0 Тогда
				ТаблицаСтавок.Ставка = "НДС10";
							
			Иначе
				ТаблицаСтавок.Ставка = "БезНДС";
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
				
	ЦеныВДоговоре = 1; // в рублях
	ОплатаДоговора = 1;
	ВестиУчетРасчетовУЕ = 0;
	Курс = 1;
	Кратность = 1;
				
	Если Договор.Выбран() = 1 Тогда
		Если ПустоеЗначение(Договор.ВалютаДоговора) = 0 Тогда
			ЦеныВДоговоре = 2; // в валюте
		КонецЕсли;
		ОплатаДоговора = Договор.ОплатаДоговора; // 1 - врублях, 2 - в валюте
		ВестиУчетРасчетовУЕ = Договор.ВестиУчетРасчетовУЕ;
	КонецЕсли;
				
	Если ЦеныВДоговоре = 2 Тогда
		Курс = Док.Курс;
					
		Валюта = Договор.ВалютаДоговора;
		Кратность = Валюта.Кратность.Получить(Док.ДатаДок);
		Кратность = ?(Кратность=0, 1, Кратность);
		Если ВестиУчетРасчетовУЕ = 1 Тогда
			Кратность = Кратность * 100 / (100 + Договор.ПроцентКорректировкиКурсаУЕ);
		КонецЕсли;
	КонецЕсли;
				
	ТаблицаСтавок.НоваяКолонка("ЗадолженностьВал", "Число");
	ТаблицаСтавок.ВыбратьСтроки();
	Пока ТаблицаСтавок.ПолучитьСтроку() = 1 Цикл
		Если (ТаблицаСтавок.Ставка = "НДС18") или (ТаблицаСтавок.Ставка = "НДС10") или (ТаблицаСтавок.Ставка = "НДС20") Тогда
			ТаблицаСтавок.ЗадолженностьВал = ТаблицаСтавок.СуммаБезНДС + ТаблицаСтавок.НДС;
					
		Иначе
			ТаблицаСтавок.ЗадолженностьВал = ТаблицаСтавок.СуммаБезНДС;
		КонецЕсли;
	КонецЦикла;
				
	ТаблицаСтавок.Свернуть("ВидЦенности,Номенклатура,Ставка", "СуммаБезНДС,НДС,ЗадолженностьВал");
	ТаблицаСтавок.Сортировать("Ставка");
				
	НомСтроки = 1;
	Пока НомСтроки &lt;= ТаблицаСтавок.КоличествоСтрок() Цикл
		Если ТаблицаСтавок.ПолучитьЗначение(НомСтроки, "НДС") = 0 Тогда
			ТаблицаСтавок.УдалитьСтроку(НомСтроки);
								
		Иначе
			НомСтроки = НомСтроки + 1;
		КонецЕсли;
	КонецЦикла;
						
	ТекущееСальдо = БухИт.СКК();
						
	РаспределеноСуммаБезНДС = 0;
	СуммаПоКолонкеСуммаБезНДС = 0;
	РаспределеноНДС = 0;
	СуммаПоКолонкеНДС = ТаблицаСтавок.Итог("НДС");
						
	Если СуммаПоКолонкеНДС &lt;&gt; 0 Тогда
		ЗначениеКолонкиНДС = 0;
		ЗначениеКолонкиСуммаБезНДС = 0;
						
		Если (ОплатаДоговора = 2) или (ВестиУчетРасчетовУЕ = 1) Тогда
			Если БухИтВал.ПолучитьСубконто(1,, Док) = 1 Тогда
				СуммаНДСВсегоРуб = БухИтВал.КО();
								
			Иначе
				СуммаНДСВсегоРуб = 0;
			КонецЕсли;
							
			Если СуммаНДСВсегоРуб = 0 Тогда
				Продолжить;
			КонецЕсли;
							
		Иначе
			СуммаНДСВсегоРуб = СуммаПоКолонкеНДС;
		КонецЕсли;
							
		ТаблицаСтавок.ВыбратьСтроки();
		Пока ТаблицаСтавок.ПолучитьСтроку() = 1 Цикл
			ЗначениеКолонкиНДС = ТаблицаСтавок.НДС;
			ЗначениеКолонкиСуммаБезНДС = ТаблицаСтавок.СуммаБезНДС;
			ЗначениеКолонкиЗадолженность = ТаблицаСтавок.ЗадолженностьВал;
								
			ЗначениеКолонкиНДС = Окр(ЗначениеКолонкиНДС * ТекущееСальдо / СуммаПоКолонкеНДС, 2, 1);
			ЗначениеКолонкиСуммаБезНДС = Окр(ЗначениеКолонкиСуммаБезНДС * ТекущееСальдо / СуммаПоКолонкеНДС, 2, 1);
			ЗначениеКолонкиЗадолженность = Окр(ЗначениеКолонкиЗадолженность * ТекущееСальдо / СуммаНДСВсегоРуб, 2, 1);
								
			РаспределеноНДС = РаспределеноНДС + ЗначениеКолонкиНДС;
			РаспределеноСуммаБезНДС = РаспределеноСуммаБезНДС + ЗначениеКолонкиСуммаБезНДС;
								
			ТаблицаСтавок.НДС = ЗначениеКолонкиНДС;
			ТаблицаСтавок.СуммаБезНДС = ЗначениеКолонкиСуммаБезНДС;
			ТаблицаСтавок.ЗадолженностьВал = ЗначениеКолонкиЗадолженность;
		КонецЦикла;
							
		НомПоследнейСтроки = ТаблицаСтавок.КоличествоСтрок();
							
		Если РаспределеноНДС &lt;&gt; ТекущееСальдо Тогда
			ЗначениеКолонкиНДС = ЗначениеКолонкиНДС + ТекущееСальдо - РаспределеноНДС;
			ТаблицаСтавок.УстановитьЗначение(НомПоследнейСтроки, "НДС", ЗначениеКолонкиНДС);
		КонецЕсли;
	КонецЕсли;
				
	ТаблицаСтавок.ВыбратьСтроки();
	Пока ТаблицаСтавок.ПолучитьСтроку() = 1 Цикл
		ДополнительныеСведения.НоваяСтрока();
		ДополнительныеСведения.КлючСтроки = ДанныеПоСФ.НомерСтроки;
		ДополнительныеСведения.СуммаБезНДС = ТаблицаСтавок.СуммаБезНДС;
		ДополнительныеСведения.НДС = ТаблицаСтавок.НДС;
		ДополнительныеСведения.ВидЦенности = ?(ТаблицаСтавок.ВидЦенности = "", ВидЦенности, ТаблицаСтавок.ВидЦенности);
		ДополнительныеСведения.СтавкаНДС = ТаблицаСтавок.Ставка;
		
		ДополнительныеСведения.Контрагент = ДанныеПоСФ.Контрагент;
		ДополнительныеСведения.ДоговорКонтрагента =  ДанныеПоСФ.ДоговорКонтрагента;
		ДополнительныеСведения.ДатаПлатежноРасчетногоДокумента = ДанныеПоСФ.ДатаПлатежноРасчетногоДокумента;
		ДополнительныеСведения.НомерПлатежноРасчетногоДокумента = ДанныеПоСФ.НомерПлатежноРасчетногоДокумента;
		ДополнительныеСведения.ДатаСФ = ДанныеПоСФ.ДатаСФ;
		ДополнительныеСведения.НомерСФ = ДанныеПоСФ.НомерСФ;
		ДополнительныеСведения.ПредъявленСФ = 1;
		ДополнительныеСведения.СчетФактура = ДанныеПоСФ.СчетФактура;
		ДополнительныеСведения.ВалютаАванса = ДанныеПоСФ.ВалютаАванса;		
							
		ДанныеПоСФ.СуммаБезНДС = ДанныеПоСФ.СуммаБезНДС + ТаблицаСтавок.СуммаБезНДС;
		ДанныеПоСФ.НДС = ДанныеПоСФ.НДС + ТаблицаСтавок.НДС;
		ДанныеПоСФ.ЗадолженностьВал = ДанныеПоСФ.ЗадолженностьВал + ТаблицаСтавок.ЗадолженностьВал;
	КонецЦикла;
КонецЦикла;

ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("СчетУчетаНДС", Сч76_Н_1);
ВходящиеДанные.Установить("ДанныеПоСФНДС", ДополнительныеСведения);
ВходящиеДанные.Установить("РазделУчета", "НДСНачисленный");

ВходящиеДанные.Установить("Дата", Параметры.ДатаВводаОстатков - 1);
ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 0);

//Если Параметры.ДатаКонцаПериодаВыгрузки &gt; Параметры.ДатаВводаОстатков Тогда
//	Если Параметры.ПараметрыАлгоритмов.Получить("НДСДатаВыгрузки") = Параметры.ДатаВводаОстатков Тогда
//		ВходящиеДанные.Установить("Дата", Параметры.ДатаВводаОстатков - 1);
//		ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
//		ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
//		ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 0);
//	Иначе
//		ВходящиеДанные.Установить("Дата", Параметры.ДатаКонцаПериодаВыгрузки);
//		ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 0);
//		ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 0);
//		ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
//	КонецЕсли;
//Иначе
//	ВходящиеДанные.Установить("Дата", Параметры.ДатаВводаОстатков - 1);
//	ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
//	ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
//	ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
//КонецЕсли;

ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ВводОстатковНДС");</Текст>
		</Алгоритм>
		<Алгоритм Имя="ДанныеПоНДСпоПоставщикам" ИспользуетсяПриЗагрузке="false">
			<Текст>ДанныеПоСФ = СоздатьОбъект("ТаблицаЗначений");
ДанныеПоСФ.НоваяКолонка("Контрагент");
ДанныеПоСФ.НоваяКолонка("ДоговорКонтрагента"); 
ДанныеПоСФ.НоваяКолонка("ДатаПлатежноРасчетногоДокумента");
ДанныеПоСФ.НоваяКолонка("НомерПлатежноРасчетногоДокумента", "Строка");
ДанныеПоСФ.НоваяКолонка("ДатаСФ"); 
ДанныеПоСФ.НоваяКолонка("НомерСФ", "Строка"); 
ДанныеПоСФ.НоваяКолонка("ВидЦенности", "Строка"); 
ДанныеПоСФ.НоваяКолонка("СтавкаНДС", "Строка"); 
ДанныеПоСФ.НоваяКолонка("ПредъявленСФ", "Число");
ДанныеПоСФ.НоваяКолонка("СуммаБезНДС", "Число"); 
ДанныеПоСФ.НоваяКолонка("ЗадолженностьВал", "Число");
ДанныеПоСФ.НоваяКолонка("НДС", "Число"); 
ДанныеПоСФ.НоваяКолонка("КлючСтроки");
ДанныеПоСФ.НоваяКолонка("СчетФактура");
ДанныеПоСФ.НоваяКолонка("ВалютнаяСуммаСНДС", "Число");
ДанныеПоСФ.НоваяКолонка("ВалютаАванса");
		
ДополнительныеСведения = СоздатьОбъект("ТаблицаЗначений");
ДополнительныеСведения.НоваяКолонка("КлючСтроки");
ДополнительныеСведения.НоваяКолонка("Событие"); 
ДополнительныеСведения.НоваяКолонка("СчетУчета");
ДополнительныеСведения.НоваяКолонка("СуммаБезНДС", "Число");
ДополнительныеСведения.НоваяКолонка("НДС", "Число");
ДополнительныеСведения.НоваяКолонка("ВидЦенности", "Строка"); 
ДополнительныеСведения.НоваяКолонка("СтавкаНДС", "Строка");
ДополнительныеСведения.НоваяКолонка("ВалютнаяСуммаСНДС", "Число");
///******
ДополнительныеСведения.НоваяКолонка("Контрагент");
ДополнительныеСведения.НоваяКолонка("ДоговорКонтрагента"); 
ДополнительныеСведения.НоваяКолонка("ДатаПлатежноРасчетногоДокумента");
ДополнительныеСведения.НоваяКолонка("НомерПлатежноРасчетногоДокумента", "Строка");
ДополнительныеСведения.НоваяКолонка("ДатаСФ"); 
ДополнительныеСведения.НоваяКолонка("НомерСФ", "Строка"); 
ДополнительныеСведения.НоваяКолонка("ПредъявленСФ", "Число");
ДополнительныеСведения.НоваяКолонка("СчетФактура");
ДополнительныеСведения.НоваяКолонка("ВалютаАванса");
		
БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
БухИт.ВключатьСубсчета(-1);
БухИт.ИспользоватьСубконто(ВидыСубконто.СчетаФактурыПолученные);

//Если Параметры.ДатаКонцаПериодаВыгрузки = Параметры.ДатаВводаОстатков Тогда
//	БухИт.ВыполнитьЗапрос(Параметры.ПараметрыАлгоритмов.Получить("НДСДатаВыгрузки"), , "19");
//Иначе
	БухИт.ВыполнитьЗапрос(, Параметры.ПараметрыАлгоритмов.Получить("НДСДатаВыгрузки"), "19");
//КонецЕсли;
		
СчетаФактурыВВалюте = СоздатьОбъект("СписокЗначений");
БухИт.ВыбратьСубконто(1);
Пока БухИт.ПолучитьСубконто(1) = 1 Цикл
	Если ПустоеЗначение(БухИт.Субконто(1)) = 0 Тогда
		Если ПустоеЗначение(БухИт.Субконто(1).Договор) = 0 Тогда
			Если (БухИт.СКД() &lt;&gt; 0) и (ПустоеЗначение(БухИт.Субконто(1).Договор.ВалютаДоговора) = 0) Тогда
				СчетаФактурыВВалюте.ДобавитьЗначение(БухИт.Субконто(1));
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецЦикла;
		
Если СчетаФактурыВВалюте.РазмерСписка() &gt; 0 Тогда
	БухИтВал = СоздатьОбъект("БухгалтерскиеИтоги");
	БухИтВал.ИспользоватьСубконто(ВидыСубконто.СчетаФактурыПолученные, СчетаФактурыВВалюте, 2);
	БухИтВал.ВыполнитьЗапрос('01.01.1980', Параметры.ПараметрыАлгоритмов.Получить("НДСДатаВыгрузки"), "19",,, 2);
КонецЕсли;
		
ТаблицаСтавок = СоздатьОбъект("ТаблицаЗначений");
ТаблицаУслуг = СоздатьОбъект("ТаблицаЗначений");
		
Опер = СоздатьОбъект("Операция");
		
Сч19 = СчетПоКоду("19");
Сч19_1 = СчетПоКоду("19.1");
Сч19_2 = СчетПоКоду("19.2");
Сч19_3 = СчетПоКоду("19.3");
Сч19_4= СчетПоКоду("19.4");
ВидЦенностиТаможни = "ТаможенныеПлатежи";

БухИт.ВыбратьСубконто(1);	
Пока БухИт.ПолучитьСубконто(1) = 1 Цикл
					
	СФ = БухИт.Субконто(1);
	Если ПустоеЗначение(СФ) = 1 Тогда
		Продолжить;
		
	ИначеЕсли ПустоеЗначение(СФ.Договор) = 1 Тогда
		Сообщить("Не выгружены данные по счету-фактуре """ + СФ + """: не указан договор.", "!");
		Продолжить;
	КонецЕсли;
				
	ДатаСФ = СФ.ДатаДок;
	НомерСФ = "";
	Договор = СФ.Договор;
				
	ТаблицаСтавок.Очистить();
	ТаблицаСтавок.НоваяКолонка("ВидЦенности");
	ТаблицаСтавок.НоваяКолонка("Ставка");
	ТаблицаСтавок.НоваяКолонка("Всего");
	ТаблицаСтавок.НоваяКолонка("СуммаБезНДС");
	ТаблицаСтавок.НоваяКолонка("НДС");
					
	ДатаНомер = СокрЛП(СФ.ДатаНомерСчетаФактуры);
	Если ПустоеЗначение(ДатаНомер) = 0 Тогда
		ПозицияПробела = Найти(ДатаНомер, " ");
		Если ПозицияПробела &gt; 0 Тогда
			ДатаСФ = Дата(Лев(ДатаНомер, ПозицияПробела-1));
			НомерСФ = Прав(ДатаНомер, СтрДлина(ДатаНомер) - ПозицияПробела);
					
		Иначе
			НомерСФ = ДатаНомер;
		КонецЕсли;
	КонецЕсли;
				
	ДанныеПоСФ.НоваяСтрока();
	ДанныеПоСФ.Контрагент = СФ.Контрагент;
	ДанныеПоСФ.ДоговорКонтрагента = Договор; 
	ДанныеПоСФ.ДатаСФ = ДатаСФ; 
	ДанныеПоСФ.НомерСФ = НомерСФ; 
	ДанныеПоСФ.ПредъявленСФ = 1;
	ДанныеПоСФ.КлючСтроки = ДанныеПоСФ.НомерСтроки;
	ДанныеПоСФ.СчетФактура = СФ;
	
	РасчетыСТаможней = 0;
						
	Если СФ.Вид() = "СчетФактураПолученный" Тогда
		
		Если СФ.Субсчет19 = Сч19_4 Тогда
			РасчетыСТаможней = 1;
			ВидЦенности = "ТаможенныеПлатежи";
		КонецЕсли;
		
		Док = СФ.ДокументОприходования;
					
		Если ПустоеЗначение(Док) = 1 Тогда
			Док = СФ;
									
		ИначеЕсли Док.Вид() = "УслугиСтороннихОрганизаций" Тогда
			Если ПустоеЗначение(Док.ДокументПоступления) = 1 Тогда
				ВидЦенности = "ПрочиеРаботыИУслуги";
							
			Иначе
				Док = Док.ДокументПоступления;
			КонецЕсли;
		КонецЕсли;
					
		НДСпоСтавкеНольПроцентов = СФ.НДСпоСтавкеНольПроцентов;
				
	Иначе
		Док = СФ;
		НДСпоСтавкеНольПроцентов = 0;
	КонецЕсли;
			
	ДанныеПоСФ.ДатаПлатежноРасчетногоДокумента = Док.ДатаДок;
				
	Если Док.Вид() = "ПоступлениеМатериалов" Тогда
		ВидЦенности = "Материалы";
					
	ИначеЕсли Док.Вид() = "ПоступлениеНМА" Тогда
		ВидЦенности = "НМА";
					
	ИначеЕсли Док.Вид() = "ПоступлениеОС" Тогда
		ВидЦенности = "ОС";
					
	ИначеЕсли Док.Вид() = "ПоступлениеТоваров" Тогда
		ВидЦенности = "Товары";
					
	ИначеЕсли Док.Вид() = "ПоступлениеОборудования" Тогда
		ВидЦенности = "Оборудование";
	КонецЕсли;
				
	Если Док.Вид() = "СчетФактураПолученный" Тогда
		Если НДСпоСтавкеНольПроцентов = 1 Тогда
			ТаблицаСтавок.НоваяСтрока();
			ТаблицаСтавок.ВидЦенности = "";
			ТаблицаСтавок.Ставка = "НДС0";
			ТаблицаСтавок.Всего = Док.Всего;
			ТаблицаСтавок.СуммаБезНДС = Док.Всего;
			ТаблицаСтавок.НДС = 0;
						
		Иначе
			Если (Док.СуммаБезНДС20 &lt;&gt; 0) или (Док.НДС20 &lt;&gt; 0) Тогда
				ТаблицаСтавок.НоваяСтрока();
				ТаблицаСтавок.ВидЦенности = "";
				Если Док.ДатаДок &lt; '01.01.2004' Тогда
					ТаблицаСтавок.Ставка = "НДС20";
				Иначе
					ТаблицаСтавок.Ставка = "НДС18";
				КонецЕсли;
				ТаблицаСтавок.Всего = Док.СуммаБезНДС20 + Док.НДС20;
				ТаблицаСтавок.СуммаБезНДС = Док.СуммаБезНДС20;
				ТаблицаСтавок.НДС = Док.НДС20;
			КонецЕсли;
						
			Если (Док.СуммаБезНДС10 &lt;&gt; 0) или (Док.НДС10 &lt;&gt; 0) Тогда
				ТаблицаСтавок.НоваяСтрока();
				ТаблицаСтавок.ВидЦенности = "";
				ТаблицаСтавок.Ставка = "НДС10";
				ТаблицаСтавок.Всего = Док.СуммаБезНДС10 + Док.НДС10;
				ТаблицаСтавок.СуммаБезНДС = Док.СуммаБезНДС10;
				ТаблицаСтавок.НДС = Док.НДС10;
			КонецЕсли;
						
			Если Док.СуммаСовсемБезНДС &lt;&gt; 0 Тогда
				ТаблицаСтавок.НоваяСтрока();
				ТаблицаСтавок.ВидЦенности = "";
				ТаблицаСтавок.Ставка = "БезНДС";
				ТаблицаСтавок.Всего = Док.СуммаСовсемБезНДС;
				ТаблицаСтавок.СуммаБезНДС = Док.СуммаСовсемБезНДС;
				ТаблицаСтавок.НДС = 0;
			КонецЕсли;
		КонецЕсли;
					
	Иначе
					
		Если (Док.Вид() = "УслугиСтороннихОрганизаций") или (Док.Вид() = "АвансовыйОтчет") Тогда
					
			ТаблицаУслуг.Очистить();
			ТаблицаУслуг.НоваяКолонка("ВидЦенности");
			ТаблицаУслуг.НоваяКолонка("Всего");
			ТаблицаУслуг.НоваяКолонка("СуммаБезНДС");
			ТаблицаУслуг.НоваяКолонка("НДС");
						
			ВидЦенности = "ПрочиеРаботыИУслуги";
						
			Док.ВыбратьСтроки();
			Пока Док.ПолучитьСтроку() = 1 Цикл
				ВидРасходовДляНалоговогоУчета = "";
				Для НомерСубконто = 1 по 3 Цикл
					Если ТипЗначенияСтр(Док.ПолучитьАтрибут("Субконто"+НомерСубконто)) = "Справочник" Тогда
						Если (Док.ПолучитьАтрибут("Субконто"+НомерСубконто).Вид() = "СтатьиЗатратНаПроизводство") или
							 (Док.ПолучитьАтрибут("Субконто"+НомерСубконто).Вид() = "СтатьиЗатратОбслуживающихПроизводств") или
							 (Док.ПолучитьАтрибут("Субконто"+НомерСубконто).Вид() = "СтатьиИздержекОбращения") или
							 (Док.ПолучитьАтрибут("Субконто"+НомерСубконто).Вид() = "СтатьиКоммерческихРасходов") или
							 (Док.ПолучитьАтрибут("Субконто"+НомерСубконто).Вид() = "СтатьиОбщепроизводственныхЗатрат") или
							 (Док.ПолучитьАтрибут("Субконто"+НомерСубконто).Вид() = "СтатьиОбщехозяйственныхЗатрат") или
							 (Док.ПолучитьАтрибут("Субконто"+НомерСубконто).Вид() = "СтатьиРасходовНаПродажу") Тогда
											 
							ВидРасходовДляНалоговогоУчета = Док.ПолучитьАтрибут("Субконто"+НомерСубконто).ВидРасходовДляНалоговогоУчета;
							Если ВидРасходовДляНалоговогоУчета = Перечисление.ГруппыВидыРасходов.РасходыНаКомандировки Тогда
								ВидЦенности = "КомандировочныеРасходы";
											
							ИначеЕсли ВидРасходовДляНалоговогоУчета = Перечисление.ГруппыВидыРасходов.ПредставительскиеРасходы Тогда
								ВидЦенности = "ПредставительскиеРасходы";
							КонецЕсли;
										
							Прервать;
										
						ИначеЕсли Док.ПолучитьАтрибут("Субконто"+НомерСубконто).Вид() = "СтатьиЗатратНаСтроительство" Тогда
							ВидЦенности = "СМРПодрядные";
							Прервать;
							
						ИначеЕсли Док.ПолучитьАтрибут("Субконто"+НомерСубконто).Вид() = "ОбъектыСтроительства" Тогда
							ВидЦенности = "Оборудование";
							Прервать;

						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
							
				ТаблицаУслуг.НоваяСтрока();
				ТаблицаУслуг.ВидЦенности = ВидЦенности;
				ТаблицаУслуг.Всего = ?(Док.Вид() = "АвансовыйОтчет", Док.Сумма, Док.Всего);
				ТаблицаУслуг.НДС = Док.НДС;
				ТаблицаУслуг.СуммаБезНДС = ТаблицаУслуг.Всего - ТаблицаУслуг.НДС;
			КонецЦикла;
						
			ТаблицаУслуг.Выгрузить(ТаблицаСтавок,,, "ВидЦенности,Всего,СуммаБезНДС,НДС");
						
		Иначе
			Док.ВыгрузитьТабличнуюЧасть(ТаблицаСтавок, "Всего,НДС");
			ТаблицаСтавок.НоваяКолонка("ВидЦенности");
			ТаблицаСтавок.НоваяКолонка("СуммаБезНДС");
			ТаблицаСтавок.ВыбратьСтроки();
			Пока ТаблицаСтавок.ПолучитьСтроку() = 1 Цикл
				ТаблицаСтавок.ВидЦенности = ВидЦенности;
				ТаблицаСтавок.СуммаБезНДС = ТаблицаСтавок.Всего - ТаблицаСтавок.НДС;
			КонецЦикла;
		КонецЕсли;
					
		ТаблицаСтавок.НоваяКолонка("Ставка");
					
		ТаблицаСтавок.ВыбратьСтроки();
		Пока ТаблицаСтавок.ПолучитьСтроку() = 1 Цикл
			Если НДСпоСтавкеНольПроцентов = 1 Тогда
				ТаблицаСтавок.Ставка = "НДС0"
							
			Иначе
				Если ТаблицаСтавок.СуммаБезНДС &gt; 0 Тогда
					Ставка = 100 * ТаблицаСтавок.НДС / ТаблицаСтавок.СуммаБезНДС;
							
				Иначе
					Ставка = 18;
				КонецЕсли;
							
				Если Ставка &gt; 10.5 Тогда
					ТаблицаСтавок.Ставка = "НДС18"
					
				ИначеЕсли Ставка &gt; 0 Тогда
					ТаблицаСтавок.Ставка = "НДС10"
								
				Иначе
					ТаблицаСтавок.Ставка = "БезНДС";
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
				
	ЦеныВДоговоре = 1; // в рублях
	ОплатаДоговора = 1;
	ВестиУчетРасчетовУЕ = 0;
	Курс = 1;
	Кратность = 1;
				
	Если Договор.Выбран() = 1 Тогда
		Если ПустоеЗначение(Договор.ВалютаДоговора) = 0 Тогда
			ЦеныВДоговоре = 2; // в валюте
		КонецЕсли;
		ОплатаДоговора = Договор.ОплатаДоговора; // 1 - врублях, 2 - в валюте
		ВестиУчетРасчетовУЕ = Договор.ВестиУчетРасчетовУЕ;
	КонецЕсли;
				
	Если ЦеныВДоговоре = 2 Тогда
		Курс = Док.Курс;
					
		Валюта = Договор.ВалютаДоговора;
		Кратность = Валюта.Кратность.Получить(Док.ДатаДок);
		Кратность = ?(Кратность=0, 1, Кратность);
		Если ВестиУчетРасчетовУЕ = 1 Тогда
			Кратность = Кратность * 100 / (100 + Договор.ПроцентКорректировкиКурсаУЕ);
		КонецЕсли;
	КонецЕсли;
				
	ТаблицаСтавок.НоваяКолонка("ЗадолженностьВал", "Число");
	ТаблицаСтавок.ВыбратьСтроки();
	Пока ТаблицаСтавок.ПолучитьСтроку() = 1 Цикл
		ТаблицаСтавок.ЗадолженностьВал = ТаблицаСтавок.Всего;
	КонецЦикла;
				
	ТаблицаСтавок.Свернуть("ВидЦенности,Ставка", "Всего,СуммаБезНДС,НДС,ЗадолженностьВал");
	ТаблицаСтавок.Сортировать("Ставка");
				
	БухИт.ВыбратьСчета();
	Пока БухИт.ПолучитьСчет() = 1 Цикл
		Если (Док.Вид() = "СчетФактураПолученный") и (БухИт.Счет.ПринадлежитГруппе(Сч19) = 1) Тогда
			Если БухИт.Счет = Сч19_1 Тогда
				ВидЦенности = "ОС";
							
			ИначеЕсли БухИт.Счет = Сч19_2 Тогда
				ВидЦенности = "НМА";
				
			ИначеЕсли БухИт.Счет = Сч19_4 Тогда
				ВидЦенности = "ТаможенныеПлатежи";							
				
			Иначе
				ВидЦенности = "Товары";
			КонецЕсли;
		КонецЕсли;
					
		НомСтроки = 1;
		Пока НомСтроки &lt;= ТаблицаСтавок.КоличествоСтрок() Цикл
			Если ТаблицаСтавок.ПолучитьЗначение(НомСтроки, "НДС") = 0 Тогда
				ТаблицаСтавок.УдалитьСтроку(НомСтроки);
								
			Иначе
				НомСтроки = НомСтроки + 1;
			КонецЕсли;
		КонецЦикла;
						
		ТекущееСальдо = БухИт.СКД();
						
		РаспределеноСуммаБезНДС = 0;
		СуммаПоКолонкеСуммаБезНДС = 0;
		РаспределеноНДС = 0;
		СуммаПоКолонкеНДС = ТаблицаСтавок.Итог("НДС");
						
		Если СуммаПоКолонкеНДС &lt;&gt; 0 Тогда
			ЗначениеКолонкиНДС = 0;
			ЗначениеКолонкиСуммаБезНДС = 0;
					
			Если (ОплатаДоговора = 2) или (ВестиУчетРасчетовУЕ = 1) Тогда
									
				Если БухИтВал.ПолучитьСубконто(1,, СФ) = 1 Тогда
					СуммаНДСВсегоРуб = БухИтВал.ДО();
							
				Иначе
					СуммаНДСВсегоРуб = 0;
				КонецЕсли;
						
				Если СуммаНДСВсегоРуб = 0 Тогда
					Продолжить;
				КонецЕсли;
									
			Иначе
				СуммаНДСВсегоРуб = СуммаПоКолонкеНДС;
			КонецЕсли;
							
			ТаблицаСтавок.ВыбратьСтроки();
			Пока ТаблицаСтавок.ПолучитьСтроку() = 1 Цикл
				ЗначениеКолонкиНДС = ТаблицаСтавок.НДС;
				ЗначениеКолонкиСуммаБезНДС = ТаблицаСтавок.СуммаБезНДС;
				ЗначениеКолонкиЗадолженность = ТаблицаСтавок.ЗадолженностьВал;
								
				ЗначениеКолонкиНДС = Окр(ЗначениеКолонкиНДС * ТекущееСальдо / СуммаПоКолонкеНДС, 2, 1);
				ЗначениеКолонкиСуммаБезНДС = Окр(ЗначениеКолонкиСуммаБезНДС * ТекущееСальдо / СуммаПоКолонкеНДС, 2, 1);
				ЗначениеКолонкиЗадолженность = Окр(ЗначениеКолонкиЗадолженность * ТекущееСальдо / СуммаНДСВсегоРуб, 2, 1);
								
				РаспределеноНДС = РаспределеноНДС + ЗначениеКолонкиНДС;
				РаспределеноСуммаБезНДС = РаспределеноСуммаБезНДС + ЗначениеКолонкиСуммаБезНДС;
								
				ТаблицаСтавок.НДС = ЗначениеКолонкиНДС;
				ТаблицаСтавок.СуммаБезНДС = ЗначениеКолонкиСуммаБезНДС;
				ТаблицаСтавок.ЗадолженностьВал = ЗначениеКолонкиЗадолженность;
			КонецЦикла;
							
			НомПоследнейСтроки = ТаблицаСтавок.КоличествоСтрок();
							
			Если РаспределеноНДС &lt;&gt; ТекущееСальдо Тогда
				ЗначениеКолонкиНДС = ЗначениеКолонкиНДС + ТекущееСальдо - РаспределеноНДС;
				ТаблицаСтавок.УстановитьЗначение(НомПоследнейСтроки, "НДС", ЗначениеКолонкиНДС);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
				
	ТаблицаСтавок.ВыбратьСтроки();
	Пока ТаблицаСтавок.ПолучитьСтроку() = 1 Цикл
		ДополнительныеСведения.НоваяСтрока();
		ДополнительныеСведения.КлючСтроки = ДанныеПоСФ.НомерСтроки;
		ДополнительныеСведения.СуммаБезНДС = ТаблицаСтавок.СуммаБезНДС;
		ДополнительныеСведения.НДС = ТаблицаСтавок.НДС;
		ДополнительныеСведения.ВидЦенности = ?(ТаблицаСтавок.ВидЦенности = "", ВидЦенности, ТаблицаСтавок.ВидЦенности); 
		ДополнительныеСведения.СтавкаНДС = ТаблицаСтавок.Ставка;
					
		ДанныеПоСФ.СуммаБезНДС = ДанныеПоСФ.СуммаБезНДС;// + ТаблицаСтавок.СуммаБезНДС;
		ДанныеПоСФ.НДС = ДанныеПоСФ.НДС;// + ТаблицаСтавок.НДС;
		ДанныеПоСФ.ЗадолженностьВал = ДанныеПоСФ.ЗадолженностьВал;// + ТаблицаСтавок.ЗадолженностьВал;
					
		Если ВидЦенности = "НМА" Тогда
			ДополнительныеСведения.СчетУчета = Сч19_2;
						
		ИначеЕсли ВидЦенности = "ОС" Тогда
			ДополнительныеСведения.СчетУчета = Сч19_1;
						
		ИначеЕсли ВидЦенности = "Оборудование" Тогда
			ДополнительныеСведения.СчетУчета = Сч19_1;
			
		ИначеЕсли ВидЦенности = "ТаможенныеПлатежи" Тогда
			ДополнительныеСведения.СчетУчета = Сч19_4;
						
		Иначе
			ДополнительныеСведения.СчетУчета = Сч19_3;
		КонецЕсли;
		
		ДополнительныеСведения.Контрагент = ДанныеПоСФ.Контрагент;
		ДополнительныеСведения.ДоговорКонтрагента =  ДанныеПоСФ.ДоговорКонтрагента;
		ДополнительныеСведения.ДатаПлатежноРасчетногоДокумента = ДанныеПоСФ.ДатаПлатежноРасчетногоДокумента;
		ДополнительныеСведения.НомерПлатежноРасчетногоДокумента = ДанныеПоСФ.НомерПлатежноРасчетногоДокумента;
		ДополнительныеСведения.ДатаСФ = ДанныеПоСФ.ДатаСФ;
		ДополнительныеСведения.НомерСФ = ДанныеПоСФ.НомерСФ;
		ДополнительныеСведения.ПредъявленСФ = ДанныеПоСФ.ПредъявленСФ;
		ДополнительныеСведения.СчетФактура = ДанныеПоСФ.СчетФактура;
		ДополнительныеСведения.ВалютаАванса = ДанныеПоСФ.ВалютаАванса;		
					
	КонецЦикла;
КонецЦикла;
		
ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("СчетУчетаНДС", Сч19);
ВходящиеДанные.Установить("ДанныеПоСФНДС", ДополнительныеСведения);
ВходящиеДанные.Установить("РазделУчета", "НДСПоПриобретеннымЦенностям");

ВходящиеДанные.Установить("Дата", Параметры.ДатаВводаОстатков - 1);
ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 0);

//Если Параметры.ДатаКонцаПериодаВыгрузки &gt; Параметры.ДатаВводаОстатков Тогда
//	Если Параметры.ПараметрыАлгоритмов.Получить("НДСДатаВыгрузки") = Параметры.ДатаВводаОстатков Тогда
//		ВходящиеДанные.Установить("Дата", Параметры.ДатаВводаОстатков - 1);
//		ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
//		ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
//		ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 0);
//	Иначе
//		ВходящиеДанные.Установить("Дата", Параметры.ДатаКонцаПериодаВыгрузки);
//		ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 0);
//		ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 0);
//		ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
//	КонецЕсли;
//Иначе
//	ВходящиеДанные.Установить("Дата", Параметры.ДатаВводаОстатков - 1);
//	ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
//	ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
//	ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
//КонецЕсли;

ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ВводОстатковНДС");</Текст>
		</Алгоритм>
		<Алгоритм Имя="ДобавитьПроводку" ИспользуетсяПриЗагрузке="false">
			<Текст>ТолькоОбороты = Параметры.ПараметрыАлгоритмов.Получить("ТолькоОбороты");
Если ТолькоОбороты = 1 Тогда
	Возврат 0;
КонецЕсли;

Проводки = Параметры.ПараметрыАлгоритмов.Получить("Проводки");
БухИт = Параметры.ПараметрыАлгоритмов.Получить("БухИт");
ТекНомерСубконто = Параметры.ПараметрыАлгоритмов.Получить("ТекНомерСубконто");
КоличествоУровней = Параметры.ПараметрыАлгоритмов.Получить("КоличествоУровней");

ОстатокДтС = Параметры.ПараметрыАлгоритмов.Получить("ОстатокДтС");
ОстатокДтВ = Параметры.ПараметрыАлгоритмов.Получить("ОстатокДтВ");
ОстатокДтК = Параметры.ПараметрыАлгоритмов.Получить("ОстатокДтК");

ОстатокКтС = Параметры.ПараметрыАлгоритмов.Получить("ОстатокКтС");
ОстатокКтВ = Параметры.ПараметрыАлгоритмов.Получить("ОстатокКтВ");
ОстатокКтК = Параметры.ПараметрыАлгоритмов.Получить("ОстатокКтК");

Налоговый = ?(Параметры.ПараметрыАлгоритмов.Получить("Регистр") = "Налоговый", 1, 0);

Сч45 = СчетПоКоду("45");
Сч97 = СчетПоКоду("97");
Сч79_1 = СчетПоКоду("79.1");
Сч79_2 = СчетПоКоду("79.2");

Если (ОстатокДтС &lt;&gt; 0) или (ОстатокДтВ &lt;&gt; 0) или (ОстатокДтК &lt;&gt; 0) Тогда
	Проводки.НоваяСтрока();
	Проводки.СчетДт = БухИт.Счет;
	Если (БухИт.Счет.Забалансовый = 0) и (Налоговый = 0) Тогда
		Проводки.СчетКт = Параметры.СчетВводаОстатков;
	КонецЕсли;
		
	Проводки.СубконтоДт = СоздатьОбъект("ТаблицаЗначений");
	Проводки.СубконтоДт.НоваяКолонка("Ключ");
	Проводки.СубконтоДт.НоваяКолонка("Значение");
	
	Для НомерСубконто = 1 по ТекНомерСубконто Цикл
		Проводки.СубконтоДт.НоваяСтрока();
		Если ((БухИт.Счет = Сч79_1) ИЛИ (БухИт.Счет = Сч79_2)) И (НомерСубконто = 1) Тогда
			Ключ = "ОбособленныеПодразделения";
		Иначе
			Ключ = БухИт.Счет.ВидСубконто(НомерСубконто);
		КонецЕсли;
		Проводки.СубконтоДт.Ключ = Ключ;
		Проводки.СубконтоДт.Значение = БухИт.Субконто(НомерСубконто);
	КонецЦикла;
	
	Проводки.Сумма = ОстатокДтС;
	
	Если БухИт.Счет.Валютный = 1 Тогда
		Проводки.ВалютнаяСуммаДт = ОстатокДтВ;
		Проводки.ВалютаДт = БухИт.Валюта;
	КонецЕсли;
	
	Если (КоличествоУровней = ТекНомерСубконто) и (БухИт.Счет.Количественный = 1) Тогда
		Проводки.КоличествоДт = ОстатокДтК;
	КонецЕсли;
	
	Если БухИт.Счет = Сч97 Тогда
		СтатьяРБП = БухИт.Субконто(1);
		Если СтатьяРБП.НазначениеСтатьиРасходов = 1 Тогда
			Проводки.КодСчетаДт = "97.01";
									
		Иначе
			Проводки.КодСчетаДт = "97.21";
		КонецЕсли;
	КонецЕсли;
	
	Если БухИт.Счет = Сч45 Тогда
		Номенклатура = БухИт.Субконто(3);
		Если Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар Тогда
			Проводки.КодСчетаДт = "45.01";
													
		ИначеЕсли Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция Тогда
			Проводки.КодСчетаДт = "45.02";
													
		Иначе
			Проводки.КодСчетаДт = "45.03";
		КонецЕсли;
	КонецЕсли;
КонецЕсли;

Если (ОстатокКтС &lt;&gt; 0) или (ОстатокКтВ &lt;&gt; 0) или (ОстатокКтК &lt;&gt; 0) Тогда
	Проводки.НоваяСтрока();
	Проводки.СчетКт = БухИт.Счет;
	Если (БухИт.Счет.Забалансовый = 0) и (Налоговый = 0) Тогда
		Проводки.СчетДт = Параметры.СчетВводаОстатков;
	КонецЕсли;
		
	Проводки.СубконтоКт = СоздатьОбъект("ТаблицаЗначений");
	Проводки.СубконтоКт.НоваяКолонка("Ключ");
	Проводки.СубконтоКт.НоваяКолонка("Значение");
	
	Для НомерСубконто = 1 по ТекНомерСубконто Цикл
		Проводки.СубконтоКт.НоваяСтрока();
		Если ((БухИт.Счет = Сч79_1) ИЛИ (БухИт.Счет = Сч79_2)) И (НомерСубконто = 1) Тогда
			Ключ = "ОбособленныеПодразделения";
		Иначе
			Ключ = БухИт.Счет.ВидСубконто(НомерСубконто);
		КонецЕсли;
		Проводки.СубконтоКт.Ключ = Ключ;
		Проводки.СубконтоКт.Значение = БухИт.Субконто(НомерСубконто);
	КонецЦикла;
	
	Проводки.Сумма = ОстатокКтС;
	
	Если БухИт.Счет.Валютный = 1 Тогда
		Проводки.ВалютнаяСуммаКт = ОстатокКтВ;
		Проводки.ВалютаКт = БухИт.Валюта;
	КонецЕсли;
	
	Если (КоличествоУровней = ТекНомерСубконто) и (БухИт.Счет.Количественный = 1) Тогда
		Проводки.КоличествоКт = ОстатокКтК;
	КонецЕсли;
	
	Если БухИт.Счет = Сч97 Тогда
		СтатьяРБП = БухИт.Субконто(1);
		Если СтатьяРБП.НазначениеСтатьиРасходов = 1 Тогда
			Проводки.КодСчетаКт = "97.01";
									
		Иначе
			Проводки.КодСчетаКт = "97.21";
		КонецЕсли;
	КонецЕсли;
	
	Если БухИт.Счет = Сч45 Тогда
		Номенклатура = БухИт.Субконто(3);
		Если Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар Тогда
			Проводки.КодСчетаКт = "45.01";
													
		ИначеЕсли Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция Тогда
			Проводки.КодСчетаКт = "45.02";
													
		Иначе
			Проводки.КодСчетаКт = "45.03";
		КонецЕсли;
	КонецЕсли;
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ДобавитьПроводкуНУ" ИспользуетсяПриЗагрузке="false">
			<Текст>СчетДт = Параметры.ПараметрыАлгоритмов.Получить("СчетДт");
КоличествоДт = Параметры.ПараметрыАлгоритмов.Получить("КоличествоДт");
	
СчетКт = Параметры.ПараметрыАлгоритмов.Получить("СчетКт");
КоличествоКт = Параметры.ПараметрыАлгоритмов.Получить("КоличествоКт");
	
СуммаПроводки = Параметры.ПараметрыАлгоритмов.Получить("СуммаПроводки");
	
Проводки = Параметры.ПараметрыАлгоритмов.Получить("ТаблицаПроводок");
	
Если (СуммаПроводки &lt;&gt; 0) или ((ПустоеЗначение(СчетДт) = 0) и (КоличествоДт &lt;&gt; 0)) или ((ПустоеЗначение(СчетКт) = 0) и (КоличествоКт &lt;&gt; 0)) Тогда
		
	КодСчетаДт = Параметры.ПараметрыАлгоритмов.Получить("КодСчетаДт");
	ВидУчетаДт = Параметры.ПараметрыАлгоритмов.Получить("ВидУчетаДт");
	СубконтоДт1 = Параметры.ПараметрыАлгоритмов.Получить("СубконтоДт1");
	СубконтоДт2 = Параметры.ПараметрыАлгоритмов.Получить("СубконтоДт2");
	СубконтоДт3 = Параметры.ПараметрыАлгоритмов.Получить("СубконтоДт3");
	
	ВидУчетаКт = Параметры.ПараметрыАлгоритмов.Получить("ВидУчетаКт");
	КодСчетаКт = Параметры.ПараметрыАлгоритмов.Получить("КодСчетаКт");
	СубконтоКт1 = Параметры.ПараметрыАлгоритмов.Получить("СубконтоКт1");
	СубконтоКт2 = Параметры.ПараметрыАлгоритмов.Получить("СубконтоКт2");
	СубконтоКт3 = Параметры.ПараметрыАлгоритмов.Получить("СубконтоКт3");
	
	ПорядокСубконто = глРазложить(Параметры.ПараметрыАлгоритмов.Получить("ПорядокСубконтоБУ"));
	НомерСубконто1 = ПорядокСубконто.ПолучитьЗначение(1);
	НомерСубконто2 = ПорядокСубконто.ПолучитьЗначение(2);
	НомерСубконто3 = ПорядокСубконто.ПолучитьЗначение(3);
	
	Проводки.НоваяСтрока();
	Проводки.Сумма = СуммаПроводки;
	
	Если ПустоеЗначение(СчетДт) = 0 Тогда
		Проводки.СчетДт = СчетДт;
		Проводки.КодСчетаДт = КодСчетаДт;
		Проводки.ВидУчетаДт = ВидУчетаДт;
		Проводки.КоличествоДт = КоличествоДт;
		
		Проводки.СубконтоДт = СоздатьОбъект("ТаблицаЗначений");
		Проводки.СубконтоДт.НоваяКолонка("Ключ");
		Проводки.СубконтоДт.НоваяКолонка("Значение");
		
		КоличествоСубконто = СчетДт.КоличествоСубконто();
		
		Если КоличествоСубконто &gt;= 1 Тогда
			Проводки.СубконтоДт.НоваяСтрока();
			Проводки.СубконтоДт.Ключ = СчетДт.ВидСубконто(НомерСубконто1);
			Проводки.СубконтоДт.Значение = СубконтоДт1;
		КонецЕсли;
		
		Если КоличествоСубконто &gt;= 2 Тогда
			Проводки.СубконтоДт.НоваяСтрока();
			Проводки.СубконтоДт.Ключ = СчетДт.ВидСубконто(НомерСубконто2);
			Проводки.СубконтоДт.Значение = СубконтоДт2;
		КонецЕсли;
		
		Если КоличествоСубконто &gt;= 3 Тогда
			Проводки.СубконтоДт.НоваяСтрока();
			Проводки.СубконтоДт.Ключ = СчетДт.ВидСубконто(НомерСубконто3);
			Проводки.СубконтоДт.Значение = СубконтоДт3;
		КонецЕсли;
	КонецЕсли;
	
	Если ПустоеЗначение(СчетКт) = 0 Тогда
		Проводки.СчетКт = СчетКт;
		Проводки.КодСчетаКт = КодСчетаКт;
		Проводки.ВидУчетаКт = ВидУчетаКт;
		Проводки.КоличествоКт = КоличествоКт;
		
		Проводки.СубконтоКт = СоздатьОбъект("ТаблицаЗначений");
		Проводки.СубконтоКт.НоваяКолонка("Ключ");
		Проводки.СубконтоКт.НоваяКолонка("Значение");
		
		КоличествоСубконто = СчетКт.КоличествоСубконто();
		
		Если КоличествоСубконто &gt;= 1 Тогда
			Проводки.СубконтоКт.НоваяСтрока();
			Проводки.СубконтоКт.Ключ = СчетКт.ВидСубконто(НомерСубконто1);
			Проводки.СубконтоКт.Значение = СубконтоКт1;
		КонецЕсли;
		
		Если КоличествоСубконто &gt;= 2 Тогда
			Проводки.СубконтоКт.НоваяСтрока();
			Проводки.СубконтоКт.Ключ = СчетКт.ВидСубконто(НомерСубконто2);
			Проводки.СубконтоКт.Значение = СубконтоКт2;
		КонецЕсли;
		
		Если КоличествоСубконто &gt;= 3 Тогда
			Проводки.СубконтоКт.НоваяСтрока();
			Проводки.СубконтоКт.Ключ = СчетКт.ВидСубконто(НомерСубконто3);
			Проводки.СубконтоКт.Значение = СубконтоКт3;
		КонецЕсли;
	КонецЕсли;
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ДобавитьПроводкуОбороты" ИспользуетсяПриЗагрузке="false">
			<Текст>Проводки = Параметры.ПараметрыАлгоритмов.Получить("ПроводкиОбороты");
БухИт = Параметры.ПараметрыАлгоритмов.Получить("БухИт");

ОборотДтС = Параметры.ПараметрыАлгоритмов.Получить("ОборотДтС");
ОборотДтВ = Параметры.ПараметрыАлгоритмов.Получить("ОборотДтВ");
ОборотДтК = Параметры.ПараметрыАлгоритмов.Получить("ОборотДтК");

Сч45 = СчетПоКоду("45");
Сч97 = СчетПоКоду("97");
Сч79_1 = СчетПоКоду("79.1");
Сч79_2 = СчетПоКоду("79.2");

ТолькоСумма = Параметры.ПараметрыАлгоритмов.Получить("ТолькоСумма");
Если ТолькоСумма = 1 Тогда
	ТекНомерСубконто = Параметры.ПараметрыАлгоритмов.Получить("ТекНомерСубконто");
		
Иначе
	ТекНомерСубконто = БухИт.КорСчет.КоличествоСубконто();
КонецЕсли;

Если (ОборотДтС &lt;&gt; 0) или (ОборотДтВ &lt;&gt; 0) или (ОборотДтК &lt;&gt; 0) и (ТолькоСумма = 0) Тогда
	Проводки.НоваяСтрока();
	Проводки.СчетДт = БухИт.Счет;
	Проводки.СчетКт = БухИт.КорСчет;
	
	Проводки.СубконтоДт = СоздатьОбъект("ТаблицаЗначений");
	Проводки.СубконтоДт.НоваяКолонка("Ключ");
	Проводки.СубконтоДт.НоваяКолонка("Значение");
	
	Проводки.СубконтоКт = СоздатьОбъект("ТаблицаЗначений");
	Проводки.СубконтоКт.НоваяКолонка("Ключ");
	Проводки.СубконтоКт.НоваяКолонка("Значение");
	
	Для НомерСубконто = 1 по БухИт.Счет.КоличествоСубконто() Цикл
		Проводки.СубконтоДт.НоваяСтрока();
		Если ((БухИт.Счет = Сч79_1) ИЛИ (БухИт.Счет = Сч79_2)) И (НомерСубконто = 1) Тогда
			Ключ = "ОбособленныеПодразделения";
		Иначе
			Ключ = БухИт.Счет.ВидСубконто(НомерСубконто);
		КонецЕсли;
		Проводки.СубконтоДт.Ключ = Ключ;
		Проводки.СубконтоДт.Значение = БухИт.Субконто(НомерСубконто);
	КонецЦикла;	
	
	Для НомерСубконто = 1 по ТекНомерСубконто Цикл
		Проводки.СубконтоКт.НоваяСтрока();
		Если ((БухИт.КорСчет = Сч79_1) ИЛИ (БухИт.КорСчет = Сч79_2)) И (НомерСубконто = 1) Тогда
			Ключ = "ОбособленныеПодразделения";
		Иначе
			Ключ = БухИт.КорСчет.ВидСубконто(НомерСубконто);
		КонецЕсли;
		Проводки.СубконтоКт.Ключ = Ключ;
		Проводки.СубконтоКт.Значение = БухИт.КорСубконто(НомерСубконто);
	КонецЦикла;
	
	Проводки.Сумма = ОборотДтС;
	
	Если БухИт.Счет.Валютный = 1 Тогда
		Проводки.ВалютнаяСуммаДт = ОборотДтВ;
		Проводки.ВалютаДт = БухИт.Валюта;
	КонецЕсли;
	
	Если БухИт.КорСчет.Валютный = 1 Тогда
		Проводки.ВалютнаяСуммаКт = ОборотДтВ;
		Проводки.ВалютаКт = БухИт.Валюта;
	КонецЕсли;
	
	Если ТолькоСумма = 0 Тогда
		Если БухИт.Счет.Количественный = 1 Тогда
			Проводки.КоличествоДт = ОборотДтК;
		КонецЕсли;
		
		Если БухИт.КорСчет.Количественный = 1 Тогда
			Проводки.КоличествоКт = ОборотДтК;
		КонецЕсли;
	КонецЕсли;
	
	Если БухИт.Счет = Сч97 Тогда
		СтатьяРБП = БухИт.Субконто(1);
		Если СтатьяРБП.НазначениеСтатьиРасходов = 1 Тогда
			Проводки.КодСчетаДт = "97.01";
										
		Иначе
			Проводки.КодСчетаДт = "97.21";
		КонецЕсли;
	КонецЕсли;
									
	Если БухИт.КорСчет = Сч97 Тогда
		СтатьяРБП = БухИт.КорСубконто(1);
		Если СтатьяРБП.НазначениеСтатьиРасходов = 1 Тогда
			Проводки.КодСчетаКт = "97.01";
										
		Иначе
			Проводки.КодСчетаКт = "97.21";
		КонецЕсли;
	КонецЕсли;

	Если БухИт.Счет = Сч45 Тогда
		Номенклатура = БухИт.Субконто(3);
		Если Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар Тогда
			Проводки.КодСчетаДт = "45.01";
														
		ИначеЕсли Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция Тогда
			Проводки.КодСчетаДт = "45.02";
														
		Иначе
			Проводки.КодСчетаДт = "45.03";
		КонецЕсли;
	КонецЕсли;

	Если БухИт.КорСчет = Сч45 Тогда
		Номенклатура = БухИт.КорСубконто(3);
		Если Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар Тогда
			Проводки.КодСчетаКт = "45.01";
														
		ИначеЕсли Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция Тогда
			Проводки.КодСчетаКт = "45.02";
														
		Иначе
			Проводки.КодСчетаКт = "45.03";
		КонецЕсли;
	КонецЕсли;

КонецЕсли;

ОборотКтС = Параметры.ПараметрыАлгоритмов.Получить("ОборотКтС");
ОборотКтВ = Параметры.ПараметрыАлгоритмов.Получить("ОборотКтВ");
ОборотКтК = Параметры.ПараметрыАлгоритмов.Получить("ОборотКтК");

Если (ОборотКтС &lt;&gt; 0) или (ОборотКтВ &lt;&gt; 0) или (ОборотКтК &lt;&gt; 0) и (ТолькоСумма = 0) Тогда
	Проводки.НоваяСтрока();
	Проводки.СчетКт = БухИт.Счет;
	Проводки.СчетДт = БухИт.КорСчет;
	
	Проводки.СубконтоДт = СоздатьОбъект("ТаблицаЗначений");
	Проводки.СубконтоДт.НоваяКолонка("Ключ");
	Проводки.СубконтоДт.НоваяКолонка("Значение");
	
	Проводки.СубконтоКт = СоздатьОбъект("ТаблицаЗначений");
	Проводки.СубконтоКт.НоваяКолонка("Ключ");
	Проводки.СубконтоКт.НоваяКолонка("Значение");
	
	Для НомерСубконто = 1 по БухИт.Счет.КоличествоСубконто() Цикл
		Проводки.СубконтоКт.НоваяСтрока();
		Если ((БухИт.Счет = Сч79_1) ИЛИ (БухИт.Счет = Сч79_2)) И (НомерСубконто = 1) Тогда
			Ключ = "ОбособленныеПодразделения";
		Иначе
			Ключ = БухИт.Счет.ВидСубконто(НомерСубконто);
		КонецЕсли;
		Проводки.СубконтоКт.Ключ = Ключ;
		Проводки.СубконтоКт.Значение = БухИт.Субконто(НомерСубконто);
	КонецЦикла;	
	
	Для НомерСубконто = 1 по ТекНомерСубконто Цикл
		Проводки.СубконтоДт.НоваяСтрока();
		Если ((БухИт.КорСчет = Сч79_1) ИЛИ (БухИт.КорСчет = Сч79_2)) И (НомерСубконто = 1) Тогда
			Ключ = "ОбособленныеПодразделения";
		Иначе
			Ключ = БухИт.КорСчет.ВидСубконто(НомерСубконто);
		КонецЕсли;
		Проводки.СубконтоДт.Ключ = Ключ;
		Проводки.СубконтоДт.Значение = БухИт.КорСубконто(НомерСубконто);
	КонецЦикла;
	
	Проводки.Сумма = ОборотКтС;
	
	Если БухИт.Счет.Валютный = 1 Тогда
		Проводки.ВалютнаяСуммаКт = ОборотКтВ;
		Проводки.ВалютаКт = БухИт.Валюта;
	КонецЕсли;
	
	Если БухИт.КорСчет.Валютный = 1 Тогда
		Проводки.ВалютнаяСуммаДт = ОборотКтВ;
		Проводки.ВалютаДт = БухИт.Валюта;
	КонецЕсли;
	
	Если ТолькоСумма = 0 Тогда
		Если БухИт.Счет.Количественный = 1 Тогда
			Проводки.КоличествоКт = ОборотКтК;
		КонецЕсли;
		
		Если БухИт.КорСчет.Количественный = 1 Тогда
			Проводки.КоличествоДт = ОборотКтК;
		КонецЕсли;
	КонецЕсли;
	
	Если БухИт.Счет = Сч97 Тогда
		СтатьяРБП = БухИт.Субконто(1);
		Если СтатьяРБП.НазначениеСтатьиРасходов = 1 Тогда
			Проводки.КодСчетаКт = "97.01";
										
		Иначе
			Проводки.КодСчетаКт = "97.21";
		КонецЕсли;
	КонецЕсли;
									
	Если БухИт.КорСчет = Сч97 Тогда
		СтатьяРБП = БухИт.КорСубконто(1);
		Если СтатьяРБП.НазначениеСтатьиРасходов = 1 Тогда
			Проводки.КодСчетаДт = "97.01";
										
		Иначе
			Проводки.КодСчетаДт = "97.21";
		КонецЕсли;
	КонецЕсли;

	Если БухИт.Счет = Сч45 Тогда
		Номенклатура = БухИт.Субконто(3);
		Если Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар Тогда
			Проводки.КодСчетаКт = "45.01";
														
		ИначеЕсли Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция Тогда
			Проводки.КодСчетаКт = "45.02";
														
		Иначе
			Проводки.КодСчетаКт = "45.03";
		КонецЕсли;
	КонецЕсли;

	Если БухИт.КорСчет = Сч45 Тогда
		Номенклатура = БухИт.КорСубконто(3);
		Если Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар Тогда
			Проводки.КодСчетаДт = "45.01";
														
		ИначеЕсли Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция Тогда
			Проводки.КодСчетаДт = "45.02";
														
		Иначе
			Проводки.КодСчетаДт = "45.03";
		КонецЕсли;
	КонецЕсли;

КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ДобавитьСуммыНУПоСчетамРасчетовВАЛ" ИспользуетсяПриЗагрузке="false">
			<Текст>РазделУчета = Параметры.ПараметрыАлгоритмов.Получить("РазделУчета");
Если (РазделУчета &lt;&gt; "РасчетыСПоставщикамиИПодрядчиками")
	И (РазделУчета &lt;&gt; "РасчетыСПокупателямиИЗаказчиками")
	И (РазделУчета &lt;&gt; "РасчетыСПрочимиДебиторамиИКредиторами") Тогда
	Возврат 0;
КонецЕсли;
Проводки = ВходящиеДанные.Получить("ВходящиеОстатки");
 
Счет = Параметры.ПараметрыАлгоритмов.Получить("ТекущийСчет");

Сч60_22 = СчетПоКоду("60.22");
Сч62_22 = СчетПоКоду("62.22");
СчВАЛ_60 = СчетПоКоду("ВАЛ.60");
СчВАЛ_62 = СчетПоКоду("ВАЛ.62");

Если (Счет &lt;&gt; Сч60_22) И (Счет &lt;&gt; Сч62_22) Тогда
	Возврат 0;
КонецЕсли;

Если Счет = Сч60_22 Тогда
	СчВАЛ = СчВАЛ_60;
Иначе
	СчВАЛ = СчВАЛ_62;
КонецЕсли;
	
БУ = СоздатьОбъект("БухгалтерскиеИтоги");
БУ.Опции(1);
БУ.ИспользоватьСубконто(ВидыСубконто.Контрагенты);
БУ.ИспользоватьСубконто(ВидыСубконто.Договоры);
БУ.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков,, Счет);
БУ.ВыбратьПериоды();

НУ = СоздатьОбъект("БухгалтерскиеИтоги");
НУ.Опции(1);
НУ.ИспользоватьСубконто(ВидыСубконто.Контрагенты);
НУ.ИспользоватьСубконто(ВидыСубконто.Договоры);
Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	НУ.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков,, СчВАЛ);
Иначе
	НУ.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков, Параметры.ДатаКонцаПериодаВыгрузки, СчВАЛ,,, 3, "Месяц",);
КонецЕсли;

НУ.ВыбратьПериоды();
Пока НУ.ПолучитьПериод() = 1 Цикл
	
	НУ.ВыбратьСубконто(1);
	Пока НУ.ПолучитьСубконто(1) = 1 Цикл
		Если НУ.Субконто(1).ЭтоГруппа() = 1 Тогда
			Продолжить;
		КонецЕсли;
		НУ.ВыбратьСубконто(2);
		Пока НУ.ПолучитьСубконто(2) = 1 Цикл
			Если НУ.Субконто(2).ЭтоГруппа() = 1 Тогда
				Продолжить;
			КонецЕсли;
			
			Если БУ.ПолучитьПериод(, НУ.НачДата) = 1 Тогда
				Если БУ.ПолучитьСубконто(1,, НУ.Субконто(1)) = 1 Тогда
					Если БУ.ПолучитьСубконто(2,, НУ.Субконто(2)) = 1 Тогда
						СуммаНУ = 0;
						СуммаНДС = 0;
						БУ.ВыбратьСчета();
						Пока БУ.ПолучитьСчет() = 1 Цикл
							СуммаНУ = СуммаНУ + ?(СчВАЛ = СчВАЛ_62, НУ.СКК(1), НУ.СКД(1));							
						КонецЦикла;
												
						Проводки.ВыбратьСтроки();
						Пока Проводки.ПолучитьСтроку() = 1 Цикл
							Если (Проводки.Субконто1 = НУ.Субконто(1))
								И (Проводки.Субконто2 = НУ.Субконто(2)) Тогда
								Проводки.СуммаНУ = СуммаНУ;
								Проводки.СуммаНДС = ?(Проводки.СуммаКт &lt;&gt; 0, Проводки.СуммаКт, Проводки.Сумма);							
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
	КонецЦикла;
КонецЦикла;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ДобавитьСуммыНУПоСчетамРасчетовУЕ" ИспользуетсяПриЗагрузке="false">
			<Текст>РазделУчета = Параметры.ПараметрыАлгоритмов.Получить("РазделУчета");
Если (РазделУчета &lt;&gt; "РасчетыСПоставщикамиИПодрядчиками")
	И (РазделУчета &lt;&gt; "РасчетыСПокупателямиИЗаказчиками")
	И (РазделУчета &lt;&gt; "РасчетыСПрочимиДебиторамиИКредиторами") Тогда
	Возврат 0;
КонецЕсли;
Проводки = ВходящиеДанные.Получить("ВходящиеОстатки");
 
Счет = Параметры.ПараметрыАлгоритмов.Получить("ТекущийСчет");

Сч60_6 = СчетПоКоду("60.6");
Сч62_6 = СчетПоКоду("62.6");
Сч76_6 = СчетПоКоду("76.6");
СчУЕ_60 = СчетПоКоду("УЕ.60");
СчУЕ_62 = СчетПоКоду("УЕ.62");

Если (Счет &lt;&gt; Сч60_6) И (Счет &lt;&gt; Сч62_6) И (Счет &lt;&gt; Сч76_6) Тогда
	Возврат 0;
КонецЕсли;

Если Счет = Сч60_6 Тогда
	СчУЕ = СчУЕ_60;
Иначе
	СчУЕ = СчУЕ_62;
КонецЕсли;
	
БУ = СоздатьОбъект("БухгалтерскиеИтоги");
БУ.Опции(1);
БУ.ИспользоватьСубконто(ВидыСубконто.Контрагенты);
БУ.ИспользоватьСубконто(ВидыСубконто.Договоры);
БУ.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков,, Счет);
БУ.ВыбратьПериоды();

НУ = СоздатьОбъект("БухгалтерскиеИтоги");
НУ.Опции(1);
НУ.ИспользоватьСубконто(ВидыСубконто.Контрагенты);
НУ.ИспользоватьСубконто(ВидыСубконто.Договоры);
Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	НУ.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков,, СчУЕ);
Иначе
	НУ.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков, Параметры.ДатаКонцаПериодаВыгрузки, СчУЕ,,, 3, "Месяц",);
КонецЕсли;

НУ.ВыбратьПериоды();
Пока НУ.ПолучитьПериод() = 1 Цикл
	
	НУ.ВыбратьСубконто(1);
	Пока НУ.ПолучитьСубконто(1) = 1 Цикл
		Если НУ.Субконто(1).ЭтоГруппа() = 1 Тогда
			Продолжить;
		КонецЕсли;
		НУ.ВыбратьСубконто(2);
		Пока НУ.ПолучитьСубконто(2) = 1 Цикл
			Если НУ.Субконто(2).ЭтоГруппа() = 1 Тогда
				Продолжить;
			КонецЕсли;
			
			Если БУ.ПолучитьПериод(, НУ.НачДата) = 1 Тогда
				Если БУ.ПолучитьСубконто(1,, НУ.Субконто(1)) = 1 Тогда
					Если БУ.ПолучитьСубконто(2,, НУ.Субконто(2)) = 1 Тогда
						СуммаНУ = 0;
						СуммаНДС = 0;
						БУ.ВыбратьСчета();
						Пока БУ.ПолучитьСчет() = 1 Цикл
							СуммаНУ = СуммаНУ + ?(СчУЕ = СчУЕ_60, НУ.СКК(1), НУ.СКД(1));							
						КонецЦикла;
						СуммаНДС = СуммаНУ;
						
						Проводки.ВыбратьСтроки();
						Пока Проводки.ПолучитьСтроку() = 1 Цикл
							Если (Проводки.Субконто1 = НУ.Субконто(1))
								И (Проводки.Субконто2 = НУ.Субконто(2)) Тогда
								Проводки.СуммаНУ = СуммаНУ;
								Проводки.СуммаНДС = СуммаНДС;							
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
	КонецЦикла;
КонецЦикла;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьРеквизитыДокументаВНО" ИспользуетсяПриЗагрузке="false">
			<Текст>КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");
КоллекцияОбъектов.ВыбратьСтроки();
Пока КоллекцияОбъектов.ПолучитьСтроку() = 1 Цикл                                                  
	
	СчетДт = ?(ПустоеЗначение(КоллекцияОбъектов.КодСчетаДт) = 1, КоллекцияОбъектов.СчетДт, КоллекцияОбъектов.КодСчетаДт);
	СчетКт = ?(ПустоеЗначение(КоллекцияОбъектов.КодСчетаКт) = 1, КоллекцияОбъектов.СчетКт, КоллекцияОбъектов.КодСчетаКт);
	
	Если (ПустоеЗначение(СчетДт) = 1) и (ПустоеЗначение(СчетКт) = 1) Тогда
		Сообщить("Попытка выгрузки проводки без указания счетов дебета и кредита. Проводка не выгружена.");
		Отказ = 1;
		
	Иначе
		
		Если ТипЗначенияСтр(СчетДт) = "Счет" Тогда
			СчетДт = мТаблицаПравилКонвертацииОбъектов.ПолучитьЗначение(НайтиПравило(СчетДт, "Хозрасчетный"), "Значения").Получить(Строка(СчетДт));
			
		Иначе
			СчетДтЗабалансовый = 1;
		КонецЕсли;
		
		Если ТипЗначенияСтр(СчетКт) = "Счет" Тогда
			СчетКтЗабалансовый = КоллекцияОбъектов.СчетКт.Забалансовый;
			СчетКт = мТаблицаПравилКонвертацииОбъектов.ПолучитьЗначение(НайтиПравило(СчетКт, "Хозрасчетный"), "Значения").Получить(Строка(СчетКт));
			
		Иначе
			СчетКтЗабалансовый = 1;
		КонецЕсли;
		
		Если (ПустоеЗначение(СчетДт) = 1) и (СчетКтЗабалансовый = 0) Тогда
			Сообщить("При попытке выгрузки проводки по кредиту счета " + СокрЛП(СчетКт) + " не удалось определить счет дебета. Проводка не выгружена.");
			Отказ = 1;
			
		ИначеЕсли (ПустоеЗначение(СчетКт) = 1) и (СчетДтЗабалансовый = 0) Тогда
			Сообщить("При попытке выгрузки проводки по дебету счета " + СокрЛП(СчетДт) + " не удалось определить счет кредита. Проводка не выгружена.");
			Отказ = 1;
		КонецЕсли;
	КонецЕсли;
	
	Субконто1 = "";
	Субконто2 = "";
	Субконто3 = "";
	СуммаКт = 0;
	Сумма = 0;
	Количество = 0;
	ВалютнаяСумма = 0;
	Валюта = "";
	
	Если (СокрЛП(СчетКт) &lt;&gt; "00")
		И (СокрЛП(СчетКт) &lt;&gt; "Вспомогательный")
		И (ПустоеЗначение(СокрЛП(СчетКт)) = 0) Тогда
		СчетУчета = СчетКт;
		СуммаКт = КоллекцияОбъектов.Сумма;
		Сумма = 0;
		Если ПустоеЗначение(КоллекцияОбъектов.ВалютнаяСуммаКт) = 0 Тогда
			Валюта = КоллекцияОбъектов.ВалютаКт;
			ВалютнаяСумма = КоллекцияОбъектов.ВалютнаяСуммаКт;
		КонецЕсли;
		Количество = КоллекцияОбъектов.КоличествоКт;
		
		Если КоллекцияОбъектов.СубконтоКт.КоличествоСтрок() &gt;= 1 Тогда
			Субконто1 = КоллекцияОбъектов.СубконтоКт.ПолучитьЗначение(1, "Значение");
			Если КоллекцияОбъектов.СубконтоКт.КоличествоСтрок() &gt;= 2 Тогда
				Субконто2 = КоллекцияОбъектов.СубконтоКт.ПолучитьЗначение(2, "Значение");
				Если КоллекцияОбъектов.СубконтоКт.КоличествоСтрок() = 3 Тогда
					Субконто3 = КоллекцияОбъектов.СубконтоКт.ПолучитьЗначение(3, "Значение");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли (СокрЛП(СчетДт) &lt;&gt; "00")
		И (СокрЛП(СчетДт) &lt;&gt; "Вспомогательный") 
		И (ПустоеЗначение(СокрЛП(СчетДт)) = 0) Тогда
		СчетУчета = СчетДт;
		СуммаКт = 0;
		Сумма = КоллекцияОбъектов.Сумма;
		Если ПустоеЗначение(КоллекцияОбъектов.ВалютнаяСуммаДт) = 0 Тогда
			Валюта = КоллекцияОбъектов.ВалютаДт;
			ВалютнаяСумма = КоллекцияОбъектов.ВалютнаяСуммаДт;
		КонецЕсли;
		Количество = КоллекцияОбъектов.КоличествоДт;
		
		Если КоллекцияОбъектов.СубконтоДт.КоличествоСтрок() &gt;= 1 Тогда
			Субконто1 = КоллекцияОбъектов.СубконтоДт.ПолучитьЗначение(1, "Значение");
			Если КоллекцияОбъектов.СубконтоДт.КоличествоСтрок() &gt;= 2 Тогда
				Субконто2 = КоллекцияОбъектов.СубконтоДт.ПолучитьЗначение(2, "Значение");
				Если КоллекцияОбъектов.СубконтоДт.КоличествоСтрок() = 3 Тогда
					Субконто3 = КоллекцияОбъектов.СубконтоДт.ПолучитьЗначение(3, "Значение");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	КоллекцияОбъектов.СчетУчета = СчетУчета;
	КоллекцияОбъектов.Субконто1 = Субконто1;
	КоллекцияОбъектов.Субконто2 = Субконто2;
	КоллекцияОбъектов.Субконто3 = Субконто3;
	КоллекцияОбъектов.СуммаКт = СуммаКт;
	КоллекцияОбъектов.Сумма = Сумма;
	КоллекцияОбъектов.Количество = Количество;
	КоллекцияОбъектов.Валюта = Валюта;
	КоллекцияОбъектов.ВалютнаяСумма = ВалютнаяСумма;
	
	//Исключения - для счетов у которых в 77 и 8 разный признак типа остатка
	Если СчетУчета = "ЖивотныеНаВыращиванииИОткорме" Тогда
		Если КоллекцияОбъектов.СуммаКт &lt;&gt; 0 Тогда
			КоллекцияОбъектов.Сумма = - КоллекцияОбъектов.СуммаКт;
			КоллекцияОбъектов.СуммаКт = 0
		КонецЕсли;
	КонецЕсли;
		
КонецЦикла;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ОпределитьДатуУвольнения" ИспользуетсяПриЗагрузке="false">
			<Текст>СотрДатаУвольнения = Дата(0);
ХарактерРаботы = СоздатьОбъект("Периодический");
ХарактерРаботы.ИспользоватьОбъект("ХарактерРаботы", ОбъектКоллекции.ФизЛицо);
Если ХарактерРаботы.ОбратныйПорядок() = 1 Тогда
	ХарактерРаботы.ВыбратьЗначения(,);
	Пока ХарактерРаботы.ПолучитьЗначение() = 1 Цикл
		Если ХарактерРаботы.Значение = Перечисление.ХарактерРаботы.ТрудовыеОтношенияПрекращены Тогда
			Если ХарактерРаботы.ДатаЗнач &lt;= Параметры.ДатаКонцаПериодаВыгрузки Тогда
				ДатаУвольнения = ХарактерРаботы.ДатаЗнач;
				Прервать;
			Иначе
				Продолжить;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	СотрДатаУвольнения = ДатаУвольнения;
Иначе
	СотрДатаУвольнения = Дата(0);
КонецЕсли;

Возврат СотрДатаУвольнения;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ОпределитьРазделУчета" ИспользуетсяПриЗагрузке="false">
			<Текст>ТекущийСчет = Параметры.ПараметрыАлгоритмов.Получить("ТекущийСчет");
Если (Лев(ТекущийСчет.Код,3) = "ГТД")
	ИЛИ (Лев(ТекущийСчет.Код,5) = "МЦ.04") 
	ИЛИ (((Лев(ТекущийСчет.Код,2) = "00") ИЛИ (ТекущийСчет.Код = "011"))
		И (ТекущийСчет.Забалансовый = 1)) Тогда
	РазделУчета = "ПрочиеСчетаБухгалтерскогоУчета";
	Возврат(РазделУчета);
Иначе
	Если (ТекущийСчет.Код = "42") 
		ИЛИ (ТекущийСчет.Код = "19.5") 
		ИЛИ (ТекущийСчет.Забалансовый = 1)Тогда
		Возврат("");
	КонецЕсли;
КонецЕсли;

Параметры.ТаблицаСчетовРазделовУчета.ВыбратьСтроки();
Пока Параметры.ТаблицаСчетовРазделовУчета.ПолучитьСтроку() = 1 Цикл
	
	Счета			= Параметры.ТаблицаСчетовРазделовУчета.Счета;
	СчетаГруппы		= Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы;
	СчетаИсключения	= Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения;
	РазделУчета		= Параметры.ТаблицаСчетовРазделовУчета.РазделУчета;
	
	Если Найти(Счета, ТекущийСчет.Код) &lt;&gt; 0 Тогда
		Если Найти(СчетаИсключения, """"+ТекущийСчет.Код+"""") = 0 Тогда
			Параметры.ПараметрыАлгоритмов.Установить("РазделУчета", РазделУчета);
			Возврат РазделУчета;
		КонецЕсли;
	КонецЕсли; 
	
	Если Найти(СчетаГруппы, Лев(Строка(ТекущийСчет.Код), 2)) &lt;&gt; 0 Тогда
		Если Найти(СчетаИсключения, """"+ТекущийСчет.Код+"""") = 0 Тогда
			Параметры.ПараметрыАлгоритмов.Установить("РазделУчета", РазделУчета);
			Возврат РазделУчета;
		КонецЕсли;
	КонецЕсли;
	
КонецЦикла;

РазделУчета = "ПрочиеСчетаБухгалтерскогоУчета";
Возврат(РазделУчета);
Параметры.ПараметрыАлгоритмов.Установить("РазделУчета", РазделУчета);</Текст>
		</Алгоритм>
		<Алгоритм Имя="ОтнесениеРасходовКДеятельностиЕНВД" ИспользуетсяПриЗагрузке="false">
			<Текст>Значение = "ВидДеятельностиОпределяетсяПоДоходам";

Для НомерСубконто = 1 по 3 Цикл
	Субконто = Параметры.ПараметрыАлгоритмов.Получить("Субконто" + НомерСубконто);
	Если ПустоеЗначение(Субконто) = 0 Тогда
		Если ТипЗначенияСтр(Субконто) = "Справочник.ВидыНоменклатуры" Тогда
			Если Субконто.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.УслугаЕНВД Тогда
				Значение = "ПредпринимательскаяДеятельностьОблагаемаяЕНВД";
				Прервать
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецЦикла;

Счет = Параметры.ПараметрыАлгоритмов.Получить("Счет");
Если ПустоеЗначение(Счет) = 0 Тогда
	Если Счет = СчетПоКоду("44.1.1") Тогда
		Значение = "ПредпринимательскаяДеятельностьНеОблагаемаяЕНВД";
		
	ИначеЕсли Счет = СчетПоКоду("44.1.2") Тогда
		Значение = "ПредпринимательскаяДеятельностьОблагаемаяЕНВД";
	КонецЕсли;
КонецЕсли;

Если (Источник.ЭтоГруппа() = 0) и (Метаданные.Справочник(Источник.Вид()).Реквизит("ВидРасходовДляНалоговогоУчета").Выбран() = 1)  Тогда
	Если Источник.ВидРасходовДляНалоговогоУчета = Перечисление.ГруппыВидыРасходов.ОплатаТруда Тогда
		Значение = "ПредпринимательскаяДеятельностьНеОблагаемаяЕНВД";
	КонецЕсли;
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПодготовитьТаблицуОстатковНУ" ИспользуетсяПриЗагрузке="false">
			<Текст>КоличествоСубконто = Параметры.ПараметрыАлгоритмов.Получить("КоличествоСубконто");

//Для некоторых счетов надо не перезаписать а сложить нексолько ТЗ
ДополнятьТаблицу = 0;
Если Параметры.ТаблицаОстатковНУ.КоличествоСтрок() &lt;&gt; 0 Тогда
	Если (Параметры.ПараметрыАлгоритмов.Получить("СписокСчетовБУ") = "45")
		ИЛИ (Параметры.ПараметрыАлгоритмов.Получить("СписокСчетовБУ") = "97" ) Тогда
		ДополнятьТаблицу = 1;
	КонецЕсли;	
КонецЕсли;

Если ДополнятьТаблицу = 0 Тогда
	Параметры.ТаблицаОстатковНУ.УдалитьСтроки();
КонецЕсли;

Параметры.ТаблицаОстатковНУ.НоваяКолонка("Коэфф", "Число");

Параметры.ТаблицаПроводок.ВыбратьСтроки();
Пока Параметры.ТаблицаПроводок.ПолучитьСтроку() = 1 Цикл
	Если Параметры.ТаблицаПроводок.Сумма = 0 Тогда
		Продолжить;
	КонецЕсли;
	
	Параметры.ТаблицаОстатковНУ.НоваяСтрока();	
	Параметры.ТаблицаОстатковНУ.СчетДт = Параметры.ТаблицаПроводок.СчетДт;
	Если Параметры.ПараметрыАлгоритмов.Получить("СписокСчетовБУ") &lt;&gt; "94" Тогда
		Параметры.ТаблицаОстатковНУ.Количество = Параметры.ТаблицаПроводок.КоличествоДт;
	КонецЕсли;
	Если КоличествоСубконто &gt; 0 Тогда
		Параметры.ТаблицаОстатковНУ.Субконто1 = Параметры.ТаблицаПроводок.СубконтоДт.ПолучитьЗначение(1, "Значение");
	КонецЕсли;
	Если КоличествоСубконто &gt; 1 Тогда
		Параметры.ТаблицаОстатковНУ.Субконто2 = Параметры.ТаблицаПроводок.СубконтоДт.ПолучитьЗначение(2, "Значение");
	КонецЕсли;
	Если КоличествоСубконто &gt; 2 Тогда
		Параметры.ТаблицаОстатковНУ.Субконто3 = Параметры.ТаблицаПроводок.СубконтоДт.ПолучитьЗначение(3, "Значение");
	КонецЕсли;	
	Если Параметры.ТаблицаПроводок.ВидУчетаДт = "НУ" Тогда 
		Параметры.ТаблицаОстатковНУ.СуммаНУ = Параметры.ТаблицаПроводок.Сумма;
		Если Параметры.ТаблицаОстатковНУ.Количество &lt;&gt; 0 Тогда
			Параметры.ТаблицаОстатковНУ.Коэфф = 1;
		КонецЕсли;
	ИначеЕсли Параметры.ТаблицаПроводок.ВидУчетаДт = "ВР" Тогда
		Параметры.ТаблицаОстатковНУ.СуммаВР = Параметры.ТаблицаПроводок.Сумма;
		Если Параметры.ТаблицаОстатковНУ.Количество &lt;&gt; 0 Тогда
			Параметры.ТаблицаОстатковНУ.Коэфф = 1;
		КонецЕсли;
	ИначеЕсли Параметры.ТаблицаПроводок.ВидУчетаДт = "ПР" Тогда
		Параметры.ТаблицаОстатковНУ.СуммаПР = Параметры.ТаблицаПроводок.Сумма;
		Если Параметры.ТаблицаОстатковНУ.Количество &lt;&gt; 0 Тогда
			Параметры.ТаблицаОстатковНУ.Коэфф = 1;
		КонецЕсли;
	КонецЕсли;
	
	Если Параметры.ПараметрыАлгоритмов.Получить("СписокСчетовБУ") = "97" Тогда
		Параметры.ТаблицаОстатковНУ.СчетУчетаНУ = Параметры.ТаблицаПроводок.КодСчетаДт;
	КонецЕсли;
		
КонецЦикла;

Если Параметры.ПараметрыАлгоритмов.Получить("СписокСчетовБУ") = "97" Тогда
	СтрокаСвертки = "СчетДт, СчетУчетаНУ, Субконто1, Субконто2, Субконто3";
Иначе
	СтрокаСвертки = "СчетДт, Субконто1, Субконто2, Субконто3";
КонецЕсли;

Параметры.ТаблицаОстатковНУ.Свернуть(СтрокаСвертки,"СуммаНУ, СуммаВР, СуммаПР, Количество, Коэфф");

//Количественный учет ведется в разрезе НУ и ВР, а ПР - нет, соответственно количество надо привести к исходному
Параметры.ТаблицаОстатковНУ.ВыбратьСтроки();
Пока Параметры.ТаблицаОстатковНУ.ПолучитьСтроку() = 1 Цикл
	Если (Параметры.ТаблицаОстатковНУ.СуммаНУ &lt;&gt; 0)
		И (Параметры.ТаблицаОстатковНУ.СуммаВР &lt;&gt; 0) Тогда
		Если Параметры.ТаблицаОстатковНУ.Коэфф &gt; 1 Тогда
			Параметры.ТаблицаОстатковНУ.Количество = Параметры.ТаблицаОстатковНУ.Количество/Параметры.ТаблицаОстатковНУ.Коэфф;
		КонецЕсли;
	КонецЕсли;
КонецЦикла;

Параметры.ТаблицаОстатковНУ.Свернуть(СтрокаСвертки,"СуммаНУ, СуммаВР, СуммаПР, Количество");

Параметры.ПараметрыАлгоритмов.Установить("КоличествоСубконто", 1);</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПолучитьВходящиеДанныеНУ_МПЗ" ИспользуетсяПриЗагрузке="false">
			<Текст>Если (ВходящиеДанные.Получить("РазделУчета") = "КапитальныеВложения")
	ИЛИ (ВходящиеДанные.Получить("РазделУчета") = "Материалы")
	ИЛИ (ВходящиеДанные.Получить("РазделУчета") = "Товары")
	ИЛИ (ВходящиеДанные.Получить("РазделУчета") = "ГотоваяПродукцияИПолуфабрикаты") 
	ИЛИ (ВходящиеДанные.Получить("РазделУчета") = "ДенежныеСредства") Тогда
	//ИЛИ ((ВходящиеДанные.Получить("РазделУчета") = "ПрочиеСчетаБухгалтерскогоУчета") И ((СокрЛП(Строка(Параметры.ПараметрыАлгоритмов.Получить("ТекущийСчет"))) = "004"))) Тогда
Иначе
	Возврат 0;
КонецЕсли;

Если Параметры.ТаблицаОстатковНУ.КоличествоСтрок() = 0 Тогда
	Возврат 0;
КонецЕсли;

КоличествоСубконто = Параметры.ПараметрыАлгоритмов.Получить("КоличествоСубконто");
ПорядокСубконто = глРазложить(Параметры.ПараметрыАлгоритмов.Получить("ПорядокСубконтоБУ"));
НомерСубконто1 = ПорядокСубконто.ПолучитьЗначение(1);
НомерСубконто2 = ПорядокСубконто.ПолучитьЗначение(2);
НомерСубконто3 = ПорядокСубконто.ПолучитьЗначение(3);

ТаблицаКоличества = СоздатьОбъект("ТаблицаЗначений");
Колонки = "";
Если КоличествоСубконто &gt; 0 Тогда
	Колонки = "Субконто1";
	Если КоличествоСубконто &gt; 1 Тогда
		Колонки = Колонки + ", Субконто2";
		Если КоличествоСубконто &gt; 2 Тогда
			Колонки = Колонки + ", Субконто3";
		КонецЕсли;
	КонецЕсли;
КонецЕсли;
	
КоллекцияОбъектов.Выгрузить(ТаблицаКоличества);
ТаблицаКоличества.Свернуть(Колонки, "Количество");

ТаблицаОстатковНУ = СоздатьОбъект("ТаблицаЗначений");
Параметры.ТаблицаОстатковНУ.Выгрузить(ТаблицаОстатковНУ);
ТаблицаОстатковНУ.Свернуть(Колонки + ", СчетДт", "Количество, СуммаНУ, СуммаПР, СуммаВР");
ТаблицаОстатковНУ.Сортировать("СчетДт," + Колонки);

//***********************************
//Получение стоимости ТМЦ в НУ (в 77 количество счетов НУ не соответствовало количеству счетов БУ
//а для ввода остатков нам необходима сумма в НУ)
//Параметры.ТаблицаОстатковНУ.Сортировать("СчетДт, Субконто1");

КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");

КоллекцияОбъектов.ВыбратьСтроки();
Пока КоллекцияОбъектов.ПолучитьСтроку() = 1 Цикл			
	СчетУчета = КоллекцияОбъектов.СчетДт;
	Количество = КоллекцияОбъектов.Количество;		
	КоличествоУровней = СчетУчета.КоличествоСубконто();
	
	ОбщееКоличество = 0;
	ТаблицаКоличества.ВыбратьСтроки();
	Пока ТаблицаКоличества.ПолучитьСтроку() = 1 Цикл
		Если КоличествоСубконто &gt; 0 Тогда
			Если КоллекцияОбъектов.ПолучитьЗначение(КоллекцияОбъектов.НомерСтроки, "Субконто1") = ТаблицаКоличества.ПолучитьЗначение(ТаблицаКоличества.НомерСтроки, "Субконто1") Тогда
				Если КоличествоСубконто &gt; 1 Тогда
					Если КоллекцияОбъектов.ПолучитьЗначение(КоллекцияОбъектов.НомерСтроки, "Субконто2") = ТаблицаКоличества.ПолучитьЗначение(ТаблицаКоличества.НомерСтроки, "Субконто2") Тогда
						Если КоличествоСубконто &gt; 2 Тогда
							Если КоллекцияОбъектов.ПолучитьЗначение(КоллекцияОбъектов.НомерСтроки, "Субконто3") = ТаблицаКоличества.ПолучитьЗначение(ТаблицаКоличества.НомерСтроки, "Субконто3") Тогда
								ОбщееКоличество = ОбщееКоличество + КоллекцияОбъектов.Количество;
							КонецЕсли;
						Иначе
							ОбщееКоличество = ОбщееКоличество + ТаблицаКоличества.Количество;
						КонецЕсли;
					КонецЕсли;
				Иначе
					ОбщееКоличество = ОбщееКоличество + ТаблицаКоличества.Количество;
				КонецЕсли;
			КонецЕсли;
		Иначе
			ОбщееКоличество = ОбщееКоличество + ТаблицаКоличества.Количество;
		КонецЕсли;
	КонецЦикла;
	
	Если КоличествоСубконто &gt; 0 Тогда
		ЗначениеБУ1 = КоллекцияОбъектов.ПолучитьЗначение(КоллекцияОбъектов.НомерСтроки, "Субконто" + НомерСубконто1);
	КонецЕсли;
	Если КоличествоСубконто &gt; 1 Тогда
		ЗначениеБУ2 = КоллекцияОбъектов.ПолучитьЗначение(КоллекцияОбъектов.НомерСтроки, "Субконто" + НомерСубконто2);
	КонецЕсли;
	Если КоличествоСубконто &gt; 2 Тогда
		ЗначениеБУ3 = КоллекцияОбъектов.ПолучитьЗначение(КоллекцияОбъектов.НомерСтроки, "Субконто" + НомерСубконто3);	
	КонецЕсли;
	ТаблицаОстатковНУ.ВыбратьСтроки();
	Пока ТаблицаОстатковНУ.ПолучитьСтроку() = 1 Цикл
		Если КоличествоСубконто &gt; 0 Тогда
			ЗначениеНУ1 = ТаблицаОстатковНУ.ПолучитьЗначение(ТаблицаОстатковНУ.НомерСтроки, "Субконто1");
		КонецЕсли;
		Если КоличествоСубконто &gt; 1 Тогда
			ЗначениеНУ2 = ТаблицаОстатковНУ.ПолучитьЗначение(ТаблицаОстатковНУ.НомерСтроки, "Субконто2");
		КонецЕсли;
		Если КоличествоСубконто &gt; 2 Тогда
			ЗначениеНУ3 = ТаблицаОстатковНУ.ПолучитьЗначение(ТаблицаОстатковНУ.НомерСтроки, "Субконто3");
		КонецЕсли;
		
		Если СчетУчета = ТаблицаОстатковНУ.СчетДт Тогда			
			
			Если (ЗначениеБУ1 = ЗначениеНУ1) И (ЗначениеБУ2 = ЗначениеНУ2) И (ЗначениеБУ3 = ЗначениеНУ3) Тогда
				
				Если (СчетУчета.Количественный = 1) И (ПустоеЗначение(Количество) = 1) Тогда
					Количество = 0;
					//Прервать;
				КонецЕсли;                                         			
				//Если (ОбщееКоличество = ТаблицаОстатковНУ.Количество)
				//	И (КоллекцияОбъектов.СчетУчета &lt;&gt; "ОборудованиеКУстановке") Тогда
				//	КоллекцияОбъектов.СуммаНУ = ТаблицаОстатковНУ.СуммаНУ;
				//	КоллекцияОбъектов.СуммаПР = ТаблицаОстатковНУ.СуммаПР;
				//	КоллекцияОбъектов.СуммаВР = ТаблицаОстатковНУ.СуммаВР;				
				//Иначе	
					РасчетноеКоличество = ТаблицаОстатковНУ.Количество;
					Если Количество &lt;&gt; 0 Тогда
						Если РасчетноеКоличество &gt; Количество Тогда
							РасчетноеКоличество = Количество;
						КонецЕсли;
					КонецЕсли;
					ДоляСтоимостиНУ = ?(РасчетноеКоличество = 0, 1, РасчетноеКоличество/?(ОбщееКоличество = 0, 1, ОбщееКоличество));				
					КоллекцияОбъектов.СуммаНУ = Окр(ДоляСтоимостиНУ * ТаблицаОстатковНУ.СуммаНУ, 2);
					КоллекцияОбъектов.СуммаПР = Окр(ДоляСтоимостиНУ * ТаблицаОстатковНУ.СуммаПР, 2);
					КоллекцияОбъектов.СуммаВР = Окр(ДоляСтоимостиНУ * ТаблицаОстатковНУ.СуммаВР, 2);				
				//КонецЕсли;
				//Параметры.ТаблицаОстатковНУ.Количество = Параметры.ТаблицаОстатковНУ.Количество - Количество;
				//Параметры.ТаблицаОстатковНУ.СуммаНУ = Параметры.ТаблицаОстатковНУ.СуммаНУ - КоллекцияОбъектов.СуммаНУ;
				//Параметры.ТаблицаОстатковНУ.СуммаПР = Параметры.ТаблицаОстатковНУ.СуммаПР - КоллекцияОбъектов.СуммаПР;
				//Параметры.ТаблицаОстатковНУ.СуммаВР = Параметры.ТаблицаОстатковНУ.СуммаВР - КоллекцияОбъектов.СуммаВР;
				Прервать;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецЦикла;

ВходящиеДанные.Установить("ВходящиеОстатки", КоллекцияОбъектов);</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПолучитьВходящиеДанныеНУ_ОТ" ИспользуетсяПриЗагрузке="false">
			<Текст>Если (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "ТоварыОтгруженные") Тогда
	Возврат 0;
КонецЕсли;
Если Параметры.ТаблицаОстатковНУ.КоличествоСтрок() = 0 Тогда
	Возврат 0;
КонецЕсли;

КоличествоСубконто = Параметры.ПараметрыАлгоритмов.Получить("КоличествоСубконто");
ПорядокСубконто = глРазложить(Параметры.ПараметрыАлгоритмов.Получить("ПорядокСубконтоБУ"));
НомерСубконто1 = ПорядокСубконто.ПолучитьЗначение(1);
НомерСубконто2 = ПорядокСубконто.ПолучитьЗначение(2);
НомерСубконто3 = ПорядокСубконто.ПолучитьЗначение(3);

//***********************************
//Получение стоимости ТМЦ в НУ (в 77 количество счетов НУ не соответствовало количеству счетов БУ
//а для ввода остатков нам необходима сумма в НУ)
Параметры.ТаблицаОстатковНУ.Сортировать("СчетДт");

КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");

КоллекцияОбъектов.ВыбратьСтроки();
Пока КоллекцияОбъектов.ПолучитьСтроку() = 1 Цикл			
	СчетУчета = КоллекцияОбъектов.СчетДт;
	Количество = КоллекцияОбъектов.Количество;		
	КоличествоУровней = СчетУчета.КоличествоСубконто();		
	ЗначениеБУ1 = КоллекцияОбъектов.ПолучитьЗначение(КоллекцияОбъектов.НомерСтроки, "Субконто" + НомерСубконто1);
	ЗначениеБУ2 = КоллекцияОбъектов.ПолучитьЗначение(КоллекцияОбъектов.НомерСтроки, "Субконто" + НомерСубконто3);	
	Параметры.ТаблицаОстатковНУ.ВыбратьСтроки();
	Пока Параметры.ТаблицаОстатковНУ.ПолучитьСтроку() = 1 Цикл
		ЗначениеНУ1 = Параметры.ТаблицаОстатковНУ.ПолучитьЗначение(Параметры.ТаблицаОстатковНУ.НомерСтроки, "Субконто1");
		ЗначениеНУ2 = Параметры.ТаблицаОстатковНУ.ПолучитьЗначение(Параметры.ТаблицаОстатковНУ.НомерСтроки, "Субконто3");
					
		Если СчетУчета = Параметры.ТаблицаОстатковНУ.СчетДт Тогда			
			
			Если (ЗначениеБУ1 = ЗначениеНУ1) И (ЗначениеБУ2 = ЗначениеНУ2) Тогда
				
				Если (СчетУчета.Количественный = 1) И (ПустоеЗначение(Количество) = 1) Тогда
					Прервать;
				КонецЕсли;                                         			
				Если Количество = Параметры.ТаблицаОстатковНУ.Количество Тогда
					КоллекцияОбъектов.СуммаНУ = Параметры.ТаблицаОстатковНУ.СуммаНУ;
					КоллекцияОбъектов.СуммаПР = Параметры.ТаблицаОстатковНУ.СуммаПР;
					КоллекцияОбъектов.СуммаВР = Параметры.ТаблицаОстатковНУ.СуммаВР;				
				Иначе	
					ДоляСтоимостиНУ = ?(Параметры.ТаблицаОстатковНУ.Количество = 0, 1, Количество/Параметры.ТаблицаОстатковНУ.Количество);				
					КоллекцияОбъектов.СуммаНУ = Окр(ДоляСтоимостиНУ * Параметры.ТаблицаОстатковНУ.СуммаНУ, 2);
					КоллекцияОбъектов.СуммаПР = Окр(ДоляСтоимостиНУ * Параметры.ТаблицаОстатковНУ.СуммаПР, 2);
					КоллекцияОбъектов.СуммаВР = Окр(ДоляСтоимостиНУ * Параметры.ТаблицаОстатковНУ.СуммаВР, 2);				
				КонецЕсли;
				Параметры.ТаблицаОстатковНУ.Количество = Параметры.ТаблицаОстатковНУ.Количество - Количество;
				Параметры.ТаблицаОстатковНУ.СуммаНУ = Параметры.ТаблицаОстатковНУ.СуммаНУ - КоллекцияОбъектов.СуммаНУ;
				Параметры.ТаблицаОстатковНУ.СуммаПР = Параметры.ТаблицаОстатковНУ.СуммаПР - КоллекцияОбъектов.СуммаПР;
				Параметры.ТаблицаОстатковНУ.СуммаВР = Параметры.ТаблицаОстатковНУ.СуммаВР - КоллекцияОбъектов.СуммаВР;
				Прервать;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецЦикла;

ВходящиеДанные.Установить("ВходящиеОстатки", КоллекцияОбъектов);</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПолучитьВходящиеДанныеНУ_Прочие" ИспользуетсяПриЗагрузке="false">
			<Текст>ТекущийСчет = Параметры.ПараметрыАлгоритмов.Получить("ТекущийСчет");

Если (ВходящиеДанные.Получить("РазделУчета") = "НезавершенноеПроизводство") 
	ИЛИ (ВходящиеДанные.Получить("РазделУчета") = "РасходыБудущихПериодов")  Тогда
	
ИначеЕсли (ВходящиеДанные.Получить("РазделУчета") = "ПрочиеСчетаБухгалтерскогоУчета")
	И (Параметры.ТаблицаОстатковНУ.КоличествоСтрок() = 0) Тогда
	
	Если ПустоеЗначение(Параметры.ПараметрыАлгоритмов.Получить("ТекущийСчет")) = 1 Тогда
		Возврат 0;
	КонецЕсли;
	
	Если Параметры.ПараметрыАлгоритмов.Получить("ТекущийСчет") = СчетПоКоду("004") Тогда
		КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");
		КоллекцияОбъектов.ВыбратьСтроки();
		Пока КоллекцияОбъектов.ПолучитьСтроку() = 1 Цикл			
			КоллекцияОбъектов.СуммаНУ = КоллекцияОбъектов.Сумма;
		КонецЦикла;
		ВходящиеДанные.Установить("ВходящиеОстатки", КоллекцияОбъектов);
		Возврат 0;
	КонецЕсли;	
	
	Если Параметры.ПараметрыАлгоритмов.Получить("ТекущийСчет").Забалансовый = 1 Тогда
		Возврат 0;
	КонецЕсли;
	
ИначеЕсли (ВходящиеДанные.Получить("РазделУчета") = "ПрочиеСчетаБухгалтерскогоУчета")
	И ((ТекущийСчет.Код = "94") ИЛИ (ТекущийСчет.Код = "44.1.1")) Тогда

Иначе
	Возврат 0;
КонецЕсли;

КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");

Если Параметры.ТаблицаОстатковНУ.КоличествоСтрок() = 0 Тогда

	КоллекцияОбъектов.ВыбратьСтроки();
	Пока КоллекцияОбъектов.ПолучитьСтроку() = 1 Цикл			
		КоллекцияОбъектов.СуммаВР = КоллекцияОбъектов.Сумма;
	КонецЦикла;
	ВходящиеДанные.Установить("ВходящиеОстатки", КоллекцияОбъектов);
	
	Возврат 0;
КонецЕсли;

//***********************************
//Получение стоимости в НУ 
Если ТекущийСчет.Код = "20" Тогда
	
	ТаблицаОстатковНУ = СоздатьОбъект("ТаблицаЗначений");
	Параметры.ТаблицаОстатковНУ.Выгрузить(ТаблицаОстатковНУ);
	ТаблицаОстатковНУ.Свернуть("СчетДт, Субконто1, Субконто2, Субконто3", "СуммаНУ, СуммаВР, СуммаПР");
	ТаблицаОстатковНУ.Сортировать("СчетДт, Субконто1, Субконто2, Субконто3");

	
	ТаблицаОстатковБУ = СоздатьОбъект("ТаблицаЗначений");
	КоллекцияОбъектов.Выгрузить(ТаблицаОстатковБУ);
	ТаблицаОстатковБУ.Свернуть("СчетДт, Субконто1, Субконто2, Субконто3", "Сумма");
	
	КоллекцияОбъектов.ВыбратьСтроки();
	Пока КоллекцияОбъектов.ПолучитьСтроку() = 1 Цикл			
		СчетУчета = КоллекцияОбъектов.СчетДт;

		ЗначениеБУ1 = КоллекцияОбъектов.ПолучитьЗначение(КоллекцияОбъектов.НомерСтроки, "Субконто1");
		ЗначениеБУ2 = КоллекцияОбъектов.ПолучитьЗначение(КоллекцияОбъектов.НомерСтроки, "Субконто2");
		ЗначениеБУ3 = КоллекцияОбъектов.ПолучитьЗначение(КоллекцияОбъектов.НомерСтроки, "Субконто3");	

		ТаблицаОстатковНУ.ВыбратьСтроки();
		Пока ТаблицаОстатковНУ.ПолучитьСтроку() = 1 Цикл
			ЗначениеНУ1 = ТаблицаОстатковНУ.ПолучитьЗначение(ТаблицаОстатковНУ.НомерСтроки, "Субконто1");
			ЗначениеНУ2 = ТаблицаОстатковНУ.ПолучитьЗначение(ТаблицаОстатковНУ.НомерСтроки, "Субконто2");
			ЗначениеНУ3 = ТаблицаОстатковНУ.ПолучитьЗначение(ТаблицаОстатковНУ.НомерСтроки, "Субконто3");
			Если СчетУчета = ТаблицаОстатковНУ.СчетДт Тогда			
				
				Если (ЗначениеБУ1 = ЗначениеНУ1) 
					И (ЗначениеБУ2 = ЗначениеНУ2) 
					И (ЗначениеБУ3 = ЗначениеНУ3) Тогда

					КоллекцияОбъектов.СуммаНУ = ТаблицаОстатковНУ.СуммаНУ;
					КоллекцияОбъектов.СуммаПР = ТаблицаОстатковНУ.СуммаПР;
					КоллекцияОбъектов.СуммаВР = ТаблицаОстатковНУ.СуммаВР;				
					
					Прервать;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
ИначеЕсли ТекущийСчет.Код = "44.1.1" Тогда
	ТаблицаОстатковНУ = СоздатьОбъект("ТаблицаЗначений");
	Параметры.ТаблицаОстатковНУ.Выгрузить(ТаблицаОстатковНУ);
	ОбщаяСуммаНУ = ТаблицаОстатковНУ.Итог("СуммаНУ");
	ОбщаяСуммаПР = ТаблицаОстатковНУ.Итог("СуммаПР");
	ОбщаяСуммаВР = ТаблицаОстатковНУ.Итог("СуммаВР");
	ОбщаяСуммаРасходовНУ = ОбщаяСуммаНУ + ОбщаяСуммаПР + ОбщаяСуммаВР;
	
		
	КоллекцияОбъектов.ВыбратьСтроки();
	ОбщаяСуммаРасходовБУ = 0;
	Пока КоллекцияОбъектов.ПолучитьСтроку() = 1 Цикл			
		Если  КоллекцияОбъектов.Субконто1.СписыватьИздержкиПропорциональноОстаткуТоваров.Получить(Параметры.ДатаКонцаПериодаВыгрузки) = 1 Тогда
			ОбщаяСуммаРасходовБУ = ОбщаяСуммаРасходовБУ + КоллекцияОбъектов.Сумма;
		КонецЕсли;
	КонецЦикла;
	
	КоллекцияОбъектов.ВыбратьСтроки();
	Пока КоллекцияОбъектов.ПолучитьСтроку() = 1 Цикл			
		Если  КоллекцияОбъектов.Субконто1.СписыватьИздержкиПропорциональноОстаткуТоваров.Получить(Параметры.ДатаКонцаПериодаВыгрузки) = 1 Тогда
			Если КоллекцияОбъектов.Сумма = ОбщаяСуммаРасходовБУ Тогда
				КоллекцияОбъектов.СуммаНУ = ОбщаяСуммаНУ;
				КоллекцияОбъектов.СуммаПР = ОбщаяСуммаПР;
				КоллекцияОбъектов.СуммаВР = ОбщаяСуммаВР;
				Прервать;
			Иначе
				Если ОбщаяСуммаРасходовНУ = 0 Тогда
					Прервать;
				КонецЕсли;
				ДоляСтоимостиНУ = ?(ОбщаяСуммаРасходовБУ = 0, 0, ОбщаяСуммаРасходовБУ/КоллекцияОбъектов.Сумма);				
				КоллекцияОбъектов.СуммаНУ = Окр(ДоляСтоимостиНУ * ОбщаяСуммаНУ, 2);
				КоллекцияОбъектов.СуммаПР = Окр(ДоляСтоимостиНУ * ОбщаяСуммаПР, 2);
				КоллекцияОбъектов.СуммаВР = Окр(ДоляСтоимостиНУ * ОбщаяСуммаВР, 2);
				ОбщаяСуммаРасходовНУ = ОбщаяСуммаРасходовНУ - КоллекцияОбъектов.СуммаНУ - КоллекцияОбъектов.СуммаПР - КоллекцияОбъектов.СуммаВР;				
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;

ИначеЕсли ТекущийСчет.Код = "94" Тогда
	
	ТаблицаОстатковНУ = СоздатьОбъект("ТаблицаЗначений");
	Параметры.ТаблицаОстатковНУ.Выгрузить(ТаблицаОстатковНУ);
	ТаблицаОстатковНУ.Свернуть("СчетДт", "СуммаНУ, СуммаВР, СуммаПР");
	ТаблицаОстатковНУ.Сортировать("СчетДт");

	КоллекцияОбъектов.ВыбратьСтроки();
	Пока КоллекцияОбъектов.ПолучитьСтроку() = 1 Цикл
		ТаблицаОстатковНУ.ВыбратьСтроки();
		Пока ТаблицаОстатковНУ.ПолучитьСтроку() = 1 Цикл
			КоллекцияОбъектов.СуммаНУ = ТаблицаОстатковНУ.СуммаНУ;
			КоллекцияОбъектов.СуммаПР = ТаблицаОстатковНУ.СуммаПР;
			КоллекцияОбъектов.СуммаВР = ТаблицаОстатковНУ.СуммаВР;				
		КонецЦикла;
	КонецЦикла;
	
ИначеЕсли ВходящиеДанные.Получить("РазделУчета") = "РасходыБудущихПериодов" Тогда
	
	
	ТаблицаОстатковНУ = СоздатьОбъект("ТаблицаЗначений");
	Параметры.ТаблицаОстатковНУ.Выгрузить(ТаблицаОстатковНУ);
	ТаблицаОстатковНУ.Свернуть("Субконто1, Субконто2, Субконто3", "СуммаНУ, СуммаВР, СуммаПР");
	ТаблицаОстатковНУ.Сортировать("Субконто1, Субконто2, Субконто3");
	
	КоллекцияОбъектов.ВыбратьСтроки();
	Пока КоллекцияОбъектов.ПолучитьСтроку() = 1 Цикл			
		
		ЗначениеБУ1 = ?(ПустоеЗначение(КоллекцияОбъектов.ПолучитьЗначение(КоллекцияОбъектов.НомерСтроки, "Субконто1")) = 1, "", КоллекцияОбъектов.ПолучитьЗначение(КоллекцияОбъектов.НомерСтроки, "Субконто1"));
		
		ТаблицаОстатковНУ.ВыбратьСтроки();
		Пока ТаблицаОстатковНУ.ПолучитьСтроку() = 1 Цикл
			ЗначениеНУ1 = ?(ПустоеЗначение(ТаблицаОстатковНУ.ПолучитьЗначение(ТаблицаОстатковНУ.НомерСтроки, "Субконто1")) = 1, "", ТаблицаОстатковНУ.ПолучитьЗначение(ТаблицаОстатковНУ.НомерСтроки, "Субконто1"));
			ЗначениеНУ2 = ?(ПустоеЗначение(ТаблицаОстатковНУ.ПолучитьЗначение(ТаблицаОстатковНУ.НомерСтроки, "Субконто2")) = 1, "", ТаблицаОстатковНУ.ПолучитьЗначение(ТаблицаОстатковНУ.НомерСтроки, "Субконто2"));
			//ЗначениеНУ3 = ?(ПустоеЗначение(ТаблицаОстатковНУ.ПолучитьЗначение(ТаблицаОстатковНУ.НомерСтроки, "Субконто3")) = 1, "", ТаблицаОстатковНУ.ПолучитьЗначение(ТаблицаОстатковНУ.НомерСтроки, "Субконто3"));
			
			Если ЗначениеБУ1 = ЗначениеНУ1 Тогда
				
				КоллекцияОбъектов.СчетУчетаНУ = КоллекцияОбъектов.СчетУчета;
				КоллекцияОбъектов.Субконто2 = ЗначениеНУ2;
				КоллекцияОбъектов.СуммаНУ = ТаблицаОстатковНУ.СуммаНУ;
				КоллекцияОбъектов.СуммаПР = ТаблицаОстатковНУ.СуммаПР;
				КоллекцияОбъектов.СуммаВР = ТаблицаОстатковНУ.СуммаВР;				
				
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецЕсли;

ВходящиеДанные.Установить("ВходящиеОстатки", КоллекцияОбъектов);</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПолучитьИтогиПоСчету" ИспользуетсяПриЗагрузке="false">
			<Текст>БухИт = Параметры.ПараметрыАлгоритмов.Получить("БухИт");

ОстатокДтС = 0;
ОстатокДтВ = 0;
ОстатокДтК = 0;
ОстатокКтС = 0;
ОстатокКтВ = 0;
ОстатокКтК = 0;

ОборотДтС = 0;
ОборотДтВ = 0;
ОборотДтК = 0;
ОборотКтС = 0;
ОборотКтВ = 0;
ОборотКтК = 0;

Если БухИт.НачДата = НачМесяца(Параметры.ДатаВводаОстатков) Тогда
	ОстатокДтС = БухИт.СНД(1);
	ОстатокДтВ = БухИт.СНД(2);
	ОстатокДтК = БухИт.СНД(3);
		
	ОстатокКтС = БухИт.СНК(1);
	ОстатокКтВ = БухИт.СНК(2);
	ОстатокКтК = БухИт.СНК(3);
КонецЕсли;

ОборотДтС = БухИт.КорДО(1);
ОборотДтВ = БухИт.КорДО(2);
ОборотДтК = БухИт.КорДО(3);
				
Если ПустоеЗначение(БухИт.КорСчет) = 1 Тогда
	ОборотКтС = БухИт.КорКО(1);
	ОборотКтВ = БухИт.КорКО(2);
	ОборотКтК = БухИт.КорКО(3);
КонецЕсли;

Параметры.ПараметрыАлгоритмов.Установить("ОстатокДтС", ОстатокДтС);
Параметры.ПараметрыАлгоритмов.Установить("ОстатокДтВ", ОстатокДтВ);
Параметры.ПараметрыАлгоритмов.Установить("ОстатокДтК", ОстатокДтК);
Параметры.ПараметрыАлгоритмов.Установить("ОстатокКтС", ОстатокКтС);
Параметры.ПараметрыАлгоритмов.Установить("ОстатокКтВ", ОстатокКтВ);
Параметры.ПараметрыАлгоритмов.Установить("ОстатокКтК", ОстатокКтК);

Параметры.ПараметрыАлгоритмов.Установить("ОборотДтС", ОборотДтС);
Параметры.ПараметрыАлгоритмов.Установить("ОборотДтВ", ОборотДтВ);
Параметры.ПараметрыАлгоритмов.Установить("ОборотДтК", ОборотДтК);
Параметры.ПараметрыАлгоритмов.Установить("ОборотКтС", ОборотКтС);
Параметры.ПараметрыАлгоритмов.Установить("ОборотКтВ", ОборотКтВ);
Параметры.ПараметрыАлгоритмов.Установить("ОборотКтК", ОборотКтК);</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПолучитьИтогиПоСчетуНаКонецПериода" ИспользуетсяПриЗагрузке="false">
			<Текст>БухИт = Параметры.ПараметрыАлгоритмов.Получить("БухИт");

ОстатокДтС = 0;
ОстатокДтВ = 0;
ОстатокДтК = 0;
ОстатокКтС = 0;
ОстатокКтВ = 0;
ОстатокКтК = 0;

ОборотДтС = 0;
ОборотДтВ = 0;
ОборотДтК = 0;
ОборотКтС = 0;
ОборотКтВ = 0;
ОборотКтК = 0;

Если БухИт.КонДата = КонМесяца(Параметры.ДатаКонцаПериодаВыгрузки) Тогда
	ОстатокДтС = БухИт.СКД(1);
	ОстатокДтВ = БухИт.СКД(2);
	ОстатокДтК = БухИт.СКД(3);
		
	ОстатокКтС = БухИт.СКК(1);
	ОстатокКтВ = БухИт.СКК(2);
	ОстатокКтК = БухИт.СКК(3);
КонецЕсли;

ОборотДтС = БухИт.КорДО(1);
ОборотДтВ = БухИт.КорДО(2);
ОборотДтК = БухИт.КорДО(3);
				
Если ПустоеЗначение(БухИт.КорСчет) = 1 Тогда
	ОборотКтС = БухИт.КорКО(1);
	ОборотКтВ = БухИт.КорКО(2);
	ОборотКтК = БухИт.КорКО(3);
КонецЕсли;

Параметры.ПараметрыАлгоритмов.Установить("ОстатокДтС", ОстатокДтС);
Параметры.ПараметрыАлгоритмов.Установить("ОстатокДтВ", ОстатокДтВ);
Параметры.ПараметрыАлгоритмов.Установить("ОстатокДтК", ОстатокДтК);
Параметры.ПараметрыАлгоритмов.Установить("ОстатокКтС", ОстатокКтС);
Параметры.ПараметрыАлгоритмов.Установить("ОстатокКтВ", ОстатокКтВ);
Параметры.ПараметрыАлгоритмов.Установить("ОстатокКтК", ОстатокКтК);

Параметры.ПараметрыАлгоритмов.Установить("ОборотДтС", ОборотДтС);
Параметры.ПараметрыАлгоритмов.Установить("ОборотДтВ", ОборотДтВ);
Параметры.ПараметрыАлгоритмов.Установить("ОборотДтК", ОборотДтК);
Параметры.ПараметрыАлгоритмов.Установить("ОборотКтС", ОборотКтС);
Параметры.ПараметрыАлгоритмов.Установить("ОборотКтВ", ОборотКтВ);
Параметры.ПараметрыАлгоритмов.Установить("ОборотКтК", ОборотКтК);</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПолучитьКомментарийДокумента" ИспользуетсяПриЗагрузке="false">
			<Текст>Значение = "# Перенесено из 1С:Бухгалтерии 7.7 #";</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПолучитьСписокВидовНоменклатуры" ИспользуетсяПриЗагрузке="false">
			<Текст>ТипыНоменклатуры = Параметры.ПараметрыАлгоритмов.Получить("ТипНоменклатуры");

СписокВидовНоменклатуры = СоздатьОбъект("СписокЗначений");
ВН = СоздатьОбъект("Справочник.ВидыНоменклатуры");
ВН.ВыбратьЭлементы();
Пока ВН.ПолучитьЭлемент() = 1 Цикл
	Если ВН.ЭтоГруппа() = 1 Тогда
		Продолжить;
		
	ИначеЕсли ТипыНоменклатуры.НайтиЗначение(ВН.ТипНоменклатуры) &gt; 0 Тогда
		СписокВидовНоменклатуры.ДобавитьЗначение(ВН.ТекущийЭлемент());
	КонецЕсли;
КонецЦикла;
		
Возврат СписокВидовНоменклатуры;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПолучитьСтруктуруАдреса" ИспользуетсяПриЗагрузке="false">
			<Текст>	Адрес = ВходящиеДанные.Получить("Адрес");
	АдресСписком = глРазложить(Адрес);
	
	Если СтрКоличествоСтрок(Адрес) &lt;&gt; 1 Тогда     // недолжно быть переводов строк
		АдресСоответствуетТребованиямМНС = 0;
		
	ИначеЕсли СтрЧислоВхождений(Адрес, ",") &lt;&gt; 9 Тогда // должно быть 9 запятых
		АдресСоответствуетТребованиямМНС = 0;
		
	ИначеЕсли СтрДлина(АдресСписком.ПолучитьЗначение(1))  &gt; 3  Тогда   // код страны не &gt; 3 символов
		АдресСоответствуетТребованиямМНС = 0;
		
	ИначеЕсли СтрДлина(АдресСписком.ПолучитьЗначение(2))  &gt; 6  Тогда   // индекс не &gt; 6 символов
		АдресСоответствуетТребованиямМНС = 0;
		
	ИначеЕсли СтрДлина(АдресСписком.ПолучитьЗначение(3))  &gt; 30 Тогда   // наим.региона не &gt; 30 символов
		АдресСоответствуетТребованиямМНС = 0;
		
	ИначеЕсли СтрДлина(АдресСписком.ПолучитьЗначение(4))  &gt; 35 Тогда   // наим.района не &gt; 35 символов
		АдресСоответствуетТребованиямМНС = 0;
		
	ИначеЕсли СтрДлина(АдресСписком.ПолучитьЗначение(5))  &gt; 35 Тогда   // наим.города не &gt; 35 символов
		АдресСоответствуетТребованиямМНС = 0;
		
	ИначеЕсли СтрДлина(АдресСписком.ПолучитьЗначение(6))  &gt; 45 Тогда   // наим.нас.пункта не &gt; 45 символов
		АдресСоответствуетТребованиямМНС = 0;
		
	ИначеЕсли СтрДлина(АдресСписком.ПолучитьЗначение(7))  &gt; 45 Тогда   // наим.улицы не &gt; 45 символов
		АдресСоответствуетТребованиямМНС = 0;
		
	ИначеЕсли СтрДлина(АдресСписком.ПолучитьЗначение(8))  &gt; 10  Тогда   // номер дома не &gt; 10 символов
		АдресСоответствуетТребованиямМНС = 0;
		
	ИначеЕсли СтрДлина(АдресСписком.ПолучитьЗначение(9))  &gt; 10  Тогда   // номер корпуса не &gt; 10 символов
		АдресСоответствуетТребованиямМНС = 0;
		
	ИначеЕсли СтрДлина(АдресСписком.ПолучитьЗначение(10)) &gt; 10  Тогда   // номер квартиры не &gt; 10 символов
		АдресСоответствуетТребованиямМНС = 0;
		
	Иначе
		АдресСоответствуетТребованиямМНС = 1;
	КонецЕсли;
	
	Если АдресСоответствуетТребованиямМНС = 1 Тогда
		ВходящиеДанные.Установить("Поле1", АдресСписком.ПолучитьЗначение(2)); // индекс
		ВходящиеДанные.Установить("Поле2", АдресСписком.ПолучитьЗначение(3)); // регион
		ВходящиеДанные.Установить("Поле3", АдресСписком.ПолучитьЗначение(4)); // район
		ВходящиеДанные.Установить("Поле4", АдресСписком.ПолучитьЗначение(5)); // город
		ВходящиеДанные.Установить("Поле5", АдресСписком.ПолучитьЗначение(6)); // населенный пункт
		ВходящиеДанные.Установить("Поле6", АдресСписком.ПолучитьЗначение(7)); // улица
		ВходящиеДанные.Установить("Поле7", АдресСписком.ПолучитьЗначение(8)); // дом
		ВходящиеДанные.Установить("Поле8", АдресСписком.ПолучитьЗначение(9)); // корпус
		ВходящиеДанные.Установить("Поле9", АдресСписком.ПолучитьЗначение(10)); // квартира
		
		ТекПредставление = "";

		Если СокрЛП(ВходящиеДанные.Получить("Поле1")) &lt;&gt; "" Тогда
			ТекПредставление = ТекПредставление + ", " + СокрЛП(ВходящиеДанные.Получить("Поле1"));
		КонецЕсли;

		Если СокрЛП(ВходящиеДанные.Получить("Поле2")) &lt;&gt; "" Тогда
			ТекПредставление = ТекПредставление + ", " + СокрЛП(ВходящиеДанные.Получить("Поле2"));
		КонецЕсли;

		Если СокрЛП(ВходящиеДанные.Получить("Поле3")) &lt;&gt; "" Тогда
			ТекПредставление = ТекПредставление + ", " + СокрЛП(ВходящиеДанные.Получить("Поле3"));
		КонецЕсли;

		Если СокрЛП(ВходящиеДанные.Получить("Поле4")) &lt;&gt; "" Тогда
			ТекПредставление = ТекПредставление + ", " + СокрЛП(ВходящиеДанные.Получить("Поле4"));
		КонецЕсли;

		Если СокрЛП(ВходящиеДанные.Получить("Поле5")) &lt;&gt; "" Тогда
			ТекПредставление = ТекПредставление + ", " + СокрЛП(ВходящиеДанные.Получить("Поле5"));
		КонецЕсли;

		Если СокрЛП(ВходящиеДанные.Получить("Поле6")) &lt;&gt; "" Тогда
			ТекПредставление = ТекПредставление + ", " + СокрЛП(ВходящиеДанные.Получить("Поле6"));
		КонецЕсли;

		Если СокрЛП(ВходящиеДанные.Получить("Поле7")) &lt;&gt; "" Тогда
			ТекПредставление = ТекПредставление + ", дом № " + СокрЛП(ВходящиеДанные.Получить("Поле7"));
		КонецЕсли;

		Если СокрЛП(ВходящиеДанные.Получить("Поле8")) &lt;&gt; "" Тогда
			ТекПредставление = ТекПредставление + ", корпус " + СокрЛП(ВходящиеДанные.Получить("Поле8"));
		КонецЕсли;

		Если СокрЛП(ВходящиеДанные.Получить("Поле9")) &lt;&gt; "" Тогда
			ТекПредставление = ТекПредставление + ", кв." + СокрЛП(ВходящиеДанные.Получить("Поле9"));
		КонецЕсли;

		Если СтрДлина(ТекПредставление) &gt; 2 Тогда
			ТекПредставление = Сред(ТекПредставление, 3);
		КонецЕсли;
		
		ВходящиеДанные.Установить("Представление", ТекПредставление);
		
	Иначе
		ВходящиеДанные.Установить("Представление", Адрес);
	КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПриВыгрузкеСубконто" ИспользуетсяПриЗагрузке="false">
			<Текст>Счет = Параметры.ПараметрыАлгоритмов.Получить("Счет");
Субконто = Параметры.ПараметрыАлгоритмов.Получить("Субконто");
НомерСубконто = Параметры.ПараметрыАлгоритмов.Получить("НомерСубконто");
ДтКт = Параметры.ПараметрыАлгоритмов.Получить("ДтКт");
ВидДоговора = "Прочее";

Если ПустоеЗначение(Счет) = 0 Тогда
	Если Счет = СчетПоКоду("ГТД") Тогда
		Если НомерСубконто = 3 Тогда
			ВидСубконто = "СтраныПроисхождения"; // страны происхождения
			ИмяПКО = "КлассификаторСтранМира";
		КонецЕсли;
		
	ИначеЕсли Счет.КоличествоСубконто() &gt; 0 Тогда
		ВидСубконтоИсточника = Счет.ВидСубконто(НомерСубконто);
		ИмяПКО = "";
		ИмяПКОВидСубконто = "ВидыСубконтоХозрасчетные";

		Если ТипЗначенияСтр(Субконто) = "Справочник" Тогда
			Если Субконто.Вид() = "Договоры" Тогда
				ИмяПКО = "ДоговорыКонтрагентов";
			КонецЕсли;
		КонецЕсли;
		
		Если ВидСубконтоИсточника = ВидыСубконто.Подразделения Тогда
			Если (Счет = СчетПоКоду("79.1")) 
				ИЛИ (Счет = СчетПоКоду("79.2")) Тогда
				ВидСубконто = "ОбособленныеПодразделения"; // Обособленные подразделения
				ИмяПКО = "ОбособленныеПодразделения";
			КонецЕсли;
		ИначеЕсли ВидСубконтоИсточника = ВидыСубконто.ОбъектыСтроительства Тогда
			Если (Счет = СчетПоКоду("08.4")) или (Счет = СчетПоКоду("Н01.01")) Тогда
				ВидСубконто = "Номенклатура"; // номенклатура
				ИмяПКО = "ОбъектыСтроительства_08_4";
				
			ИначеЕсли (Счет = СчетПоКоду("08.5")) или (Счет = СчетПоКоду("Н01.08")) Тогда
				ВидСубконто = "НематериальныеАктивы"; // нематериальные активы
				ИмяПКО = "ОбъектыСтроительства_08_5_08_8";
				
			ИначеЕсли (Счет = СчетПоКоду("08.8")) или (Счет = СчетПоКоду("Н01.03")) Тогда
				ВидСубконто = "РасходыНаНИОКР"; // расходы на НИОКР
				ИмяПКО = "ОбъектыСтроительства_08_5_08_8";
				
				ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
				ИсходящиеДанные.Установить("Счет", Счет);
				
			Иначе
				ВидСубконто = "ОбъектыСтроительства"; // объекты строительства
				ИмяПКО = "ОбъектыСтроительства_08_3";
				
				//Параметры.ПараметрыАлгоритмов.Установить("ВыгрузитьСчетУчета", "Да");
				СписокОбъектов = Параметры.СписокОбъектовСтроительства;
				НомСтр = 0;
				Если СписокОбъектов.НайтиЗначение(Субконто, НомСтр, "ОбъектСтроительства") = 0 Тогда
					Если (Счет = СчетПоКоду("08.1")) или (Счет = СчетПоКоду("08.2")) или (Счет = СчетПоКоду("08.3")) Тогда
						СписокОбъектов.НоваяСтрока();
						СписокОбъектов.ОбъектСтроительства = Субконто;
						СписокОбъектов.СчетБухгалтерскогоУчета = Счет;
						СписокОбъектов.СчетБухгалтерскогоУчетаНДС = СчетПоКоду("19.1");
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ВидСубконтоИсточника = ВидыСубконто.СчетаФактурыВыданные Тогда
			Если Счет = СчетПоКоду("76.АВ")  Тогда
				ИмяПКО = "СчетФактураНаАванс";
				
			Иначе
				ИмяПКО = "СчетФактура";
			КонецЕсли;
			
		ИначеЕсли ВидСубконтоИсточника = ВидыСубконто.СчетаФактурыПолученные Тогда
			ИмяПКО = "СчетФактураПолученный";			
			
		ИначеЕсли ВидСубконтоИсточника = ВидыСубконто.СтавкиНДС Тогда
			Если Субконто.Ставка = 0 Тогда
				Субконто = "БезНДС";
					
			ИначеЕсли Субконто.Ставка = 18 Тогда
				Субконто = "НДС18";
					
			ИначеЕсли Субконто.Ставка = 10 Тогда
				Субконто = "НДС10";
					
			ИначеЕсли Субконто.Ставка = 20 Тогда
				Субконто = "НДС20";
			КонецЕсли;
				
			ИмяПКО = "СтавкиНДС";
			
		ИначеЕсли Счет = СчетПоКоду("45") Тогда
			Если ВидСубконтоИсточника = ВидыСубконто.Договоры Тогда
				ВидСубконто = "Партии"; // партии
				ИмяПКО = "ДоговорСКомитентом";
				ВидДоговора = "СКомиссионером";
			КонецЕсли;
			
		ИначеЕсли Счет = СчетПоКоду("004") Тогда
			Если ВидСубконтоИсточника = ВидыСубконто.Договоры Тогда
				ВидСубконто = "Партии"; // партии
				ИмяПКО = "ДоговорСКомитентом";
				ВидДоговора = "СКомитентом";
			КонецЕсли;
			
		ИначеЕсли Счет.ПринадлежитГруппе(СчетПоКоду("62")) = 1 Тогда
			Если ВидСубконтоИсточника = ВидыСубконто.Договоры Тогда
				ВидДоговора = "СПокупателем";
			КонецЕсли;	
				
		ИначеЕсли Счет.ПринадлежитГруппе(СчетПоКоду("60")) = 1 Тогда
			Если ВидСубконтоИсточника = ВидыСубконто.Договоры Тогда
				ВидДоговора = "СПоставщиком";
			КонецЕсли;	
			
		ИначеЕсли Счет.ПринадлежитГруппе(СчетПоКоду("Н02.04")) = 1 Тогда
			Если ВидСубконтоИсточника = ВидыСубконто.Договоры Тогда
				ВидСубконто = "Партии"; // партии
				ИмяПКО = "ДоговорСКомитентом";
				ВидДоговора = "СКомиссионером";
			КонецЕсли;
			
		ИначеЕсли Счет = СчетПоКоду("Н04.03") Тогда
			Если ТипЗначенияСтр(Субконто) = "Справочник" Тогда
				Если Субконто.Вид() = "РасходыБудущихПериодов" Тогда
					ИмяПКО = "РБП_НМА";
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли (Счет = СчетПоКоду("Н07.04.1")) или (Счет = СчетПоКоду("Н01.05")) Тогда
			Если ТипЗначенияСтр(Субконто) = "Перечисление" Тогда
				Если Субконто.Вид() = "ГруппыВидыРасходов" Тогда
					ВидСубконто = "СтатьиЗатрат"; // статьи затрат
					ИмяПКО = "ВидыРасходов";
			    КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли (Счет = СчетПоКоду("Н07.09")) или
				  (Счет = СчетПоКоду("Н07.10")) или
				  (Счет = СчетПоКоду("Н07.11")) или
				  (Счет = СчетПоКоду("Н07.12")) Тогда
				  
			ВидСубконто = ВидыСубконто.Договоры;
			
		ИначеЕсли Счет = СчетПоКоду("Н01.07") Тогда
			Если ТипЗначенияСтр(Субконто) = "Строка" Тогда
				ВидСубконто = "СтатьиЗатрат"; // статьи затрат
				ИмяПКО = "ВидыРасходов";
			КонецЕсли;
			
		ИначеЕсли (Счет.ПринадлежитГруппе(СчетПоКоду("Н06")) = 1) или
				  (Счет.ПринадлежитГруппе(СчетПоКоду("Н07")) = 1) или
				  (Счет = СчетПоКоду("Н08")) или
				  (Счет = СчетПоКоду("Н09")) Тогда
				  
			Если ТипЗначенияСтр(Субконто) = "Перечисление" Тогда
				Если Субконто.Вид() = "ВидыПрочихДоходовИРасходов" Тогда
					ВидСубконто = "ПрочиеДоходыИРасходы"; // прочие доходы и расходы
					ИмяПКО = "ВидыРасходовПрочие";
				КонецЕсли;
				
			ИначеЕсли ТипЗначенияСтр(Субконто) = "Строка" Тогда
				ВидСубконто = "ПрочиеДоходыИРасходы"; // прочие доходы и расходы
				ИмяПКО = "ВидыРасходовПрочие";
			ИначеЕсли ТипЗначенияСтр(Субконто) = "Справочник" Тогда
				Если Субконто.Вид() = "ОсновныеСредства" Тогда
					ВидСубконто = "РеализуемыеАктивыОС";
					ИмяПКО = "ОсновныеСредства";
				ИначеЕсли Субконто.Вид() = "НематериальныеАктивы" Тогда
					ВидСубконто = "РеализуемыеАктивыНМА";
					ИмяПКО = "НематериальныеАктивы";
				ИначеЕсли Субконто.Вид() = "Договоры" Тогда
					ВидСубконто = "РеализуемыеАктивыДоговоры";
					ИмяПКО = "ДоговорыКонтрагентов";
				ИначеЕсли Субконто.Вид() = "Контрагенты" Тогда
					ВидСубконто = "РеализуемыеАктивыКонтрагенты";
					ИмяПКО = "Контрагенты";
				ИначеЕсли Субконто.Вид() = "ЦенныеБумаги" Тогда
					ВидСубконто = "РеализуемыеАктивыЦенныеБумаги";
					ИмяПКО = "ЦенныеБумаги";
				ИначеЕсли Субконто.Вид() = "Номенклатура" Тогда
					Если (Счет = СчетПоКоду("Н06.01")) ИЛИ (Счет = СчетПоКоду("Н06.04")) Тогда					
						ВидСубконто = "Номенклатура";
					Иначе
						ВидСубконто = "РеализуемыеАктивыНоменклатура";
					КонецЕсли;
					ИмяПКО = "Номенклатура";
				ИначеЕсли Субконто.Вид() = "ВидыНоменклатуры" Тогда
					Если (Счет = СчетПоКоду("Н06.01")) ИЛИ (Счет = СчетПоКоду("Н06.04")) 
						ИЛИ (Счет = СчетПоКоду("Н07.01")) ИЛИ (Счет = СчетПоКоду("Н07.02")) ИЛИ (Счет = СчетПоКоду("Н07.05")) Тогда
						ВидСубконто = "ВидыНоменклатуры";
					Иначе
						ВидСубконто = "РеализуемыеАктивыВидНоменклатуры";
					КонецЕсли;
					ИмяПКО = "НоменклатурныеГруппы";
				КонецЕсли;

			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если (Счет.ПринадлежитГруппе(СчетПоКоду("60")) = 1) или (Счет.ПринадлежитГруппе(СчетПоКоду("62")) = 1) или (Счет.ПринадлежитГруппе(СчетПоКоду("76")) = 1) или (Счет.ПринадлежитГруппе(СчетПоКоду("УЕ")) = 1) или (Счет.ПринадлежитГруппе(СчетПоКоду("ВАЛ")) = 1) Тогда
		Если ПустоеЗначение(ВидСубконтоИсточника) = 1 Тогда // это расчетный документ
			ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
			ИсходящиеДанные.Установить("СделатьСсылкуНаДокВводаОстатков", 1);
			ИсходящиеДанные.Установить("ВидОперации", ВходящиеДанные.Получить("ВидОперации"));
			
			ВидСубконто = "ДокументыРасчетовСКонтрагентами";
			ИмяПКОВидСубконто = "ВидыСубконтоХозрасчетные";

			Если (ТипЗначенияСтр(Субконто) &lt;&gt; "Справочник") и (ТипЗначенияСтр(Субконто) &lt;&gt; "Документ") Тогда
				Отказ = 1;
				
			ИначеЕсли Субконто.Вид() = "ПоступлениеМатериалов" Тогда
				ИмяПКО = "ПоступлениеМатериалов";
				ИсходящиеДанные.Установить("ВидОперации", "НДСПоПриобретеннымЦенностям");
				
			ИначеЕсли Субконто.Вид() = "ПоступлениеНМА" Тогда
				ИмяПКО = "ПоступлениеНМА";
				ИсходящиеДанные.Установить("ВидОперации", "НДСПоПриобретеннымЦенностям");
				
			ИначеЕсли Субконто.Вид() = "ПоступлениеОборудования" Тогда
				ИмяПКО = "ПоступлениеОборудования";
				ИсходящиеДанные.Установить("ВидОперации", "НДСПоПриобретеннымЦенностям");
				
			ИначеЕсли Субконто.Вид() = "ПоступлениеОС" Тогда
				ИмяПКО = "ПоступлениеОС";
				ИсходящиеДанные.Установить("ВидОперации", "НДСПоПриобретеннымЦенностям");
				
			ИначеЕсли Субконто.Вид() = "ПоступлениеТоваров" Тогда
				ИмяПКО = "ПоступлениеТоваров";
				ИсходящиеДанные.Установить("ВидОперации", "НДСПоПриобретеннымЦенностям");
				
			ИначеЕсли Субконто.Вид() = "СчетФактураПолученный" Тогда
				ИмяПКО = "СчетФактураПолученный";
				
				Если Субконто.ВидОперации = Перечисление.ВидыОперацийСчетаФактурыПолученного.Аванс тогда
					ИсходящиеДанные.Установить("ВидОперации", "НДСпоАвансамПолученным");
				Иначе
					ИсходящиеДанные.Установить("ВидОперации", "НДСПоПриобретеннымЦенностям");
				КонецЕсли;				
				
			ИначеЕсли Субконто.Вид() = "УслугиСтороннихОрганизаций" Тогда
				ИмяПКО = "УслугиСтороннихОрганизаций";
				ИсходящиеДанные.Установить("ВидОперации", "НДСПоПриобретеннымЦенностям");
				
			ИначеЕсли Субконто.Вид() = "СчетФактура" Тогда
				Если Субконто.Аванс = 1 Тогда
					ИмяПКО = "СчетФактураНаАванс";
					ИсходящиеДанные.Установить("ВидОперации", "НДСпоАвансамПолученным");
					
				Иначе
					ИмяПКО = "СчетФактура";
					ИсходящиеДанные.Установить("ВидОперации", "НДСНеПолученныйОтПокупателей");
				КонецЕсли;
				
			ИначеЕсли Субконто.Вид() = "Договоры" Тогда
				ИмяПКО = "ДокументРасчетовСКонтрагентом";
				
				Если (Счет.ПринадлежитГруппе(СчетПоКоду("60")) = 1) или
					 (Счет = СчетПоКоду("УЕ.60")) или
					 (Счет.ПринадлежитГруппе(СчетПоКоду("76")) = 1) и (ДтКт = 2) Тогда
					 
					ИсходящиеДанные.Установить("ВидОперации", "НДСПоПриобретеннымЦенностям");
					
				ИначеЕсли (Счет = СчетПоКоду("62.2")) или (Счет = СчетПоКоду("62.22")) или (Счет = СчетПоКоду("62.7")) Тогда
					ИсходящиеДанные.Установить("ВидОперации", "НДСпоАвансамПолученным");
					
				Иначе
					ИсходящиеДанные.Установить("ВидОперации", "НДСНеПолученныйОтПокупателей");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	НомерПКОСубконто = НайтиПравило(Субконто, ИмяПКО);

	Если НомерПКОСубконто = 0 Тогда
		Отказ = 1;
	КонецЕсли;
	
Иначе
	Отказ = 1;
КонецЕсли;

Если (ПустоеЗначение(Субконто) = 0) и (ВидДоговора &lt;&gt; "Прочее") Тогда
	Если Субконто.ЭтоГруппа() = 0 Тогда
		НомСтр = 0;
		Если Параметры.ТаблицаДоговоров.НайтиЗначение(Субконто, НомСтр, "Договор") = 0 Тогда
			Параметры.ТаблицаДоговоров.НоваяСтрока();
			Параметры.ТаблицаДоговоров.Договор = Субконто;
			Параметры.ТаблицаДоговоров.ВидДоговора = ВидДоговора;
		КонецЕсли;
	КонецЕсли;
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПрименитьПараметрыДляСчетовДенежныхСредств" ИспользуетсяПриЗагрузке="true">
			<Текст>БУ = ПланыСчетов.Хозрасчетный.Касса.ПолучитьОбъект();
ВестиУчетПоСтатьямДДС = НЕ (БУ.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиДвиженияДенежныхСредств, "ВидСубконто") = Неопределено);

Если НЕ ВестиУчетПоСтатьямДДС Тогда
	
	ВестиУчетПоСтатьямДДС = Истина;
	
	
	// Устанавливаем/удаляем аналитику по статьям движения на счетах учета денежных средств
	
	Счета = Новый Массив;
	// Счет 50
	Счета.Добавить(ПланыСчетов.Хозрасчетный.Касса);
	Счета.Добавить(ПланыСчетов.Хозрасчетный.КассаОрганизации);
	Счета.Добавить(ПланыСчетов.Хозрасчетный.ОперационнаяКасса);
	Счета.Добавить(ПланыСчетов.Хозрасчетный.КассаОрганизацииВал);
	// Счет 51
	Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетныеСчета);
	// Счет 52
	Счета.Добавить(ПланыСчетов.Хозрасчетный.ВалютныеСчета);
	// Счет 55
	Счета.Добавить(ПланыСчетов.Хозрасчетный.СпециальныеСчета);
	Счета.Добавить(ПланыСчетов.Хозрасчетный.Аккредитивы);
	Счета.Добавить(ПланыСчетов.Хозрасчетный.ЧековыеКнижки);
	Счета.Добавить(ПланыСчетов.Хозрасчетный.ДепозитныеСчета);
	Счета.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеСпециальныеСчета);
	Счета.Добавить(ПланыСчетов.Хозрасчетный.АккредитивыВал);
	Счета.Добавить(ПланыСчетов.Хозрасчетный.ДепозитныеСчетаВал);
	Счета.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеСпециальныеСчетаВал);
	// Счет 57
	Счета.Добавить(ПланыСчетов.Хозрасчетный.ПереводыВПути);
	Счета.Добавить(ПланыСчетов.Хозрасчетный.ПереводыВПутиВал);
	
	// визуализация процесса
	ФормаПрогрессора = ПолучитьОбщуюФорму("ХодВыполненияОбработкиДанных");
	ФормаПрогрессора.НаименованиеОбработкиДанных = "Настройка аналитического учета денежных средств";
	ФормаПрогрессора.Значение = 0;
	ФормаПрогрессора.КомментарийОбработкиДанных  = "";
	ФормаПрогрессора.Открыть();
	
	ОбработаноСчетов = 0;
	КоличествоСчетовВсего = Счета.Количество();
	ФормаПрогрессора.МаксимальноеЗначение = КоличествоСчетовВсего;
	ФормаПрогрессора.КомментарийОбработкиДанных = "Установка аналитики на счетах бухгалтерского учета";
	
	Для каждого Счет Из Счета Цикл
		
		ОбработаноСчетов = ОбработаноСчетов + 1;
		ФормаПрогрессора.Значение = ОбработаноСчетов;
		
		СтрокаВидаСубконто = Счет.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиДвиженияДенежныхСредств, "ВидСубконто");
		НетУчетаПоСтатьямДДС = СтрокаВидаСубконто = Неопределено;
		
		Если ВестиУчетПоСтатьямДДС И НетУчетаПоСтатьямДДС Тогда
			
			СчетОбъект = Счет.ПолучитьОбъект();
			НовыйВидСубконто = СчетОбъект.ВидыСубконто.Добавить();
			НовыйВидСубконто.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиДвиженияДенежныхСредств;
			НовыйВидСубконто.ТолькоОбороты = Истина;
			НовыйВидСубконто.Суммовой = Истина;
			НовыйВидСубконто.Валютный = Истина;
			СчетОбъект.Записать();
			
		ИначеЕсли НЕ ВестиУчетПоСтатьямДДС И НЕ НетУчетаПоСтатьямДДС Тогда
			
			СчетОбъект = Счет.ПолучитьОбъект();
			СтрокаДляУдаления = СчетОбъект.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиДвиженияДенежныхСредств, "ВидСубконто");
			СчетОбъект.ВидыСубконто.Удалить(СтрокаДляУдаления);
			СчетОбъект.Записать();
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ФормаПрогрессора.Открыта() Тогда
		ФормаПрогрессора.Закрыть();
	КонецЕсли;
	
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПрименитьПараметрыРасчетовССотрудниками" ИспользуетсяПриЗагрузке="true">
			<Текст>Значение_ВестиУчетПоРаботникам = Истина;

Значение_ВестиУчетПоРаботникам = ?(одАтрибут(ФайлОбмена, одТипЧисло, "УчетЗарплатыВоВнешнейПрограмме") = 1, Ложь, Истина);

БУ = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда;
ВестиУчетПоРаботникам = НЕ (БУ.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизаций, "ВидСубконто") = Неопределено);


Если ВестиУчетПоРаботникам &lt;&gt; Значение_ВестиУчетПоРаботникам Тогда
	
	ВестиУчетПоРаботникам = Значение_ВестиУчетПоРаботникам;
	
	СписокСчетов = Новый СписокЗначений();
	СписокСчетов.Добавить("РасчетыСПерсоналомПоОплатеТруда");
	СписокСчетов.Добавить("РасчетыПоДепонированнымСуммам");
	СписокСчетов.Добавить("РасходыНаОплатуТрудаБудущихПериодов");
	
	ИмяПланаСчетов = "Хозрасчетный";
	
	// визуализация процесса
	ФормаПрогрессора = ПолучитьОбщуюФорму("ХодВыполненияОбработкиДанных");
	ФормаПрогрессора.НаименованиеОбработкиДанных = "Настройка аналитического учета расчетов с сотрудниками";
	ФормаПрогрессора.Значение = 0;
	ФормаПрогрессора.КомментарийОбработкиДанных  = "";
	ФормаПрогрессора.Открыть();

	ОбработаноСчетов = 0;
	КоличествоСчетовВсего = СписокСчетов.Количество();
	ФормаПрогрессора.МаксимальноеЗначение = КоличествоСчетовВсего;
	ФормаПрогрессора.КомментарийОбработкиДанных = "Установка аналитики на счетах бухгалтерского учета";
	
	Для каждого СтрокаСписка Из СписокСчетов Цикл
		
		ОбработаноСчетов = ОбработаноСчетов + 1;
		ФормаПрогрессора.Значение = ОбработаноСчетов;
		
		ИмяСчета = СтрокаСписка.Значение;
		
		Счет  = ПланыСчетов[ИмяПланаСчетов][ИмяСчета];
		Счета = Новый СписокЗначений();
		Счета.Добавить(Счет);
		
		ВыборкаСчетов = ПланыСчетов[ИмяПланаСчетов].ВыбратьИерархически(Счет);
		Пока ВыборкаСчетов.Следующий() Цикл
			
			Счета.Добавить(ВыборкаСчетов.Ссылка);
			
		КонецЦикла;
		
		Для каждого Счет Из Счета Цикл
			
			Объект   = Счет.Значение.ПолучитьОбъект();
			КодСчета = Объект.Код;
			
			Субконто = Объект.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизаций, "ВидСубконто");
			
			Если НЕ (Субконто = Неопределено) Тогда
				Если Субконто.Предопределенное Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			Если ВестиУчетПоРаботникам = Истина Тогда // Добавляем 

				Если Субконто = Неопределено Тогда

					Если Счет.Значение = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда Тогда
						НовыйВид = Объект.ВидыСубконто.Вставить(0);
					Иначе
						НовыйВид = Объект.ВидыСубконто.Добавить();
					КонецЕсли;
					
					НовыйВид.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизаций;
					НовыйВид.Суммовой    = Истина;
						
					Если Объект.Количественный Тогда
						НовыйВид.Количественный = Истина;
					КонецЕсли;
					
				КонецЕсли;

			ИначеЕсли ВестиУчетПоРаботникам = Ложь Тогда // Удаляем

				Если Субконто = Неопределено Тогда // кто-то удалил вид субконто вручную!
					Продолжить;
				КонецЕсли;
				
				Объект.ВидыСубконто.Удалить(Субконто);
				
			КонецЕсли;
			
			Объект.Записать();
			
		КонецЦикла;
		
	КонецЦикла;
	
	Если ФормаПрогрессора.Открыта() Тогда
		ФормаПрогрессора.Закрыть();
	КонецЕсли;

	
КонецЕсли;
</Текст>
		</Алгоритм>
		<Алгоритм Имя="Проверка1" ИспользуетсяПриЗагрузке="false">
			<Текст>// Проверка № 1 ******************************************
// проверка сальдо и оборотов в целом по ИБ

КодПроверки = "";
//**********************************
// # Данные из 7.7
ВыбНачПериода = Параметры.ДатаВводаОстатков;
ВыбКонПериода = Параметры.ДатаКонцаПериодаВыгрузки;

Ит = СоздатьОбъект("БухгалтерскиеИтоги");
Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Ит.ВыполнитьЗапрос(ВыбНачПериода,);
	ОстаткиИОбороты = 1;
Иначе
	Ит.ВыполнитьЗапрос(ВыбНачПериода, ВыбКонПериода);
	ОстаткиИОбороты = 2;
КонецЕсли;

СНД = 0;
СНК = 0;
ДО = 0;
КО = 0;
СКД = 0;
СКК = 0;

Ит.ВыбратьСчета();
Пока Ит.ПолучитьСчет() = 1 Цикл
	Если Ит.Счет.Забалансовый = 1 Тогда
		Продолжить;
	КонецЕсли;
	Если Ит.Счет.Код = "00" Тогда
		Продолжить;
	КонецЕсли;
	СНД = СНД + Ит.СНД("С");
	СНК = СНК + Ит.СНК("С");
	ДО = ДО + Ит.ДО("С");
	КО = КО + Ит.КО("С");
	СКД = СКД + Ит.СКД("С");
	СКК = СКК + Ит.СКК("С");
КонецЦикла;

//**********************************
// # Модуль проверки в 8
КодПроверки = "
|	Запрос.Текст = 
|	""ВЫБРАТЬ
|	|	ХозрасчетныйОстаткиИОбороты.Счет КАК Счет,
|	|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт) КАК СуммаНачальныйОстатокДт,
|	|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт) КАК СуммаНачальныйОстатокКт,
|	|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаОборотДт) КАК СуммаОборотДт,
|	|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаОборотКт) КАК СуммаОборотКт,
|	|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт) КАК СуммаКонечныйОстатокДт,
|	|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт) КАК СуммаКонечныйОстатокКт
|	|ИЗ
|	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&amp;НачПериода, &amp;КонПериода, , , (НЕ Счет.Забалансовый) И (Счет.Код &lt;&gt; """"000"""") И (НЕ Счет.ЗапретитьИспользоватьВПроводках), , Организация = &amp;Организация) КАК ХозрасчетныйОстаткиИОбороты
|	|	
|	|ГДЕ
|	|	ХозрасчетныйОстаткиИОбороты.Счет.Забалансовый = ЛОЖЬ И
|	|	ХозрасчетныйОстаткиИОбороты.Счет.Код &lt;&gt; """"000""""
|	|
|	|СГРУППИРОВАТЬ ПО
|	|	ХозрасчетныйОстаткиИОбороты.Счет
|	|ИТОГИ ПО
|	|	Счет ИЕРАРХИЯ"";
|
|	Результат = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
|
|   ОтобразитьТекстСостояния(""Проверка итогового начального сальдо"");
|	Если Результат.Строки.Итог(""СуммаНачальныйОстатокДт"") &lt;&gt; " + СНД + " Тогда
| 		ЗафиксироватьОшибку(ЭтапКонвертации, ""Не совпадает итоговое начальное сальдо по дебету:
|							|	Значение в базе-источнике: " + СокрЛП(Формат(СНД, "Ч25.2, ")) + "
|							|	Значение в базе-приемнике: "" + Результат.Строки.Итог(""СуммаНачальныйОстатокДт""));
|   Иначе
|   	ОтобразитьТекстСостояния(""Проверка итогового начального сальдо по дебету прошла успешно"");
|	КонецЕсли;
|	Если Результат.Строки.Итог(""СуммаНачальныйОстатокКт"") &lt;&gt; " + СНК + " Тогда
| 		ЗафиксироватьОшибку(ЭтапКонвертации, ""Не совпадает итоговое начальное сальдо по кредиту:
|							|	Значение в базе-источнике: " + СокрЛП(Формат(СНК, "Ч25.2, ")) + "
|							|	Значение в базе-приемнике: "" + Результат.Строки.Итог(""СуммаНачальныйОстатокКт""));
|   Иначе
|   	ОтобразитьТекстСостояния(""Проверка итогового начального сальдо по кредиту прошла успешно"");
|	КонецЕсли;
|
|   ОтобразитьТекстСостояния(""Проверка итоговых оборотов за период"");
|	Если Результат.Строки.Итог(""СуммаОборотДт"") &lt;&gt; " + ДО + " Тогда
| 		ЗафиксироватьОшибку(ЭтапКонвертации, ""Не совпадает итоговый оборот по дебету:
|							|	Значение в базе-источнике: " + СокрЛП(Формат(ДО, "Ч25.2, ")) + "
|							|	Значение в базе-приемнике: "" + Результат.Строки.Итог(""СуммаОборотДт""));
|   Иначе
|   	ОтобразитьТекстСостояния(""Проверка итоговых оборотов по дебету прошла успешно"");
|	КонецЕсли;
|	Если Результат.Строки.Итог(""СуммаОборотКт"") &lt;&gt; " + КО + " Тогда
| 		ЗафиксироватьОшибку(ЭтапКонвертации, ""Не совпадает итоговый оборот по кредиту:
|							|	Значение в базе-источнике: " + СокрЛП(Формат(КО, "Ч25.2, ")) + "
|							|	Значение в базе-приемнике: "" + Результат.Строки.Итог(""СуммаОборотКт""));
|   Иначе
|   	ОтобразитьТекстСостояния(""Проверка итоговых оборотов по кредиту прошла успешно"");
|	КонецЕсли;
|
|   ОтобразитьТекстСостояния(""Проверка итогового конечного сальдо"");
|	Если Результат.Строки.Итог(""СуммаКонечныйОстатокДт"") &lt;&gt; " + СКД + " Тогда
| 		ЗафиксироватьОшибку(ЭтапКонвертации, ""Не совпадает итоговое конечное сальдо по дебету:
|							|	Значение в базе-источнике: " + СокрЛП(Формат(СКД, "Ч25.2, ")) + "
|							|	Значение в базе-приемнике: "" + Результат.Строки.Итог(""СуммаКонечныйОстатокДт""));
|   Иначе
|   	ОтобразитьТекстСостояния(""Проверка итогового конечного сальдо по дебету прошла успешно"");
|	КонецЕсли;
|	Если Результат.Строки.Итог(""СуммаКонечныйОстатокКт"") &lt;&gt; " + СКК + " Тогда
| 		ЗафиксироватьОшибку(ЭтапКонвертации, ""Не совпадает итоговое конечное сальдо по кредиту:
|							|	Значение в базе-источнике: " + СокрЛП(Формат(СКК, "Ч25.2, ")) + "
|							|	Значение в базе-приемнике: "" + Результат.Строки.Итог(""СуммаКонечныйОстатокКт""));
|   Иначе
|   	ОтобразитьТекстСостояния(""Проверка итогового конечного сальдо по кредиту прошла успешно"");
|	КонецЕсли;
|" ;

Возврат(КодПроверки);</Текст>
		</Алгоритм>
		<Алгоритм Имя="Проверка2" ИспользуетсяПриЗагрузке="false">
			<Текст>// Проверка № 2 ******************************************
// проверка сальдо и оборотов по каждому счету

КодПроверки = "";
//**********************************
// # Данные из 7.7
ВыбНачПериода = Параметры.ДатаВводаОстатков;
ВыбКонПериода = Параметры.ДатаКонцаПериодаВыгрузки;

Ит = СоздатьОбъект("БухгалтерскиеИтоги");
Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Ит.ВыполнитьЗапрос(ВыбНачПериода,);
	ОстаткиИОбороты = 1;
Иначе
	Ит.ВыполнитьЗапрос(ВыбНачПериода, ВыбКонПериода);
	ОстаткиИОбороты = 2;
КонецЕсли;

СписокДанных = СоздатьОбъект("СписокЗначений");
СписокИмен = СоздатьОбъект("СписокЗначений");

Ит.ВыбратьСчета();
Пока Ит.ПолучитьСчет() = 1 Цикл
	Если Ит.Счет.Забалансовый = 1 Тогда
		Продолжить;
	КонецЕсли;
	
	Если Ит.Счет = СчетПоКоду("00") Тогда
		Продолжить;
	КонецЕсли;
	
	// исользуем ключ: тип итогов + код счета
	СписокДанных.ДобавитьЗначение(Ит.СНД("С"));
	СписокДанных.ДобавитьЗначение(Ит.СНК("С"));
	СписокДанных.ДобавитьЗначение(Ит.ДО("С"));
	СписокДанных.ДобавитьЗначение(Ит.КО("С"));
	СписокДанных.ДобавитьЗначение(Ит.СКД("С"));
	СписокДанных.ДобавитьЗначение(Ит.СКК("С"));
	
	СписокИмен.ДобавитьЗначение("СНД" + Ит.Счет.Код);
	СписокИмен.ДобавитьЗначение("СНК" + Ит.Счет.Код);
	СписокИмен.ДобавитьЗначение("ДО" + Ит.Счет.Код);
	СписокИмен.ДобавитьЗначение("КО" + Ит.Счет.Код);
	СписокИмен.ДобавитьЗначение("СКД" + Ит.Счет.Код);
	СписокИмен.ДобавитьЗначение("СКК" + Ит.Счет.Код);
	
КонецЦикла;

СписокИмен = СписокИмен.ВСтрокуСРазделителями();
СписокИмен = СтрЗаменить(СписокИмен, """","");
СписокДанных = СписокДанных.ВСтрокуСРазделителями();


//**********************************
// # Модуль проверки в 8
КодПроверки = "
|	Запрос.Текст = 
|	""ВЫБРАТЬ
|	|	ХозрасчетныйОстаткиИОбороты.Счет КАК Счет,
|	|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт) КАК СуммаНачальныйОстатокДт,
|	|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт) КАК СуммаНачальныйОстатокКт,
|	|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаОборотДт) КАК СуммаОборотДт,
|	|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаОборотКт) КАК СуммаОборотКт,
|	|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт) КАК СуммаКонечныйОстатокДт,
|	|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт) КАК СуммаКонечныйОстатокКт
|	|ИЗ
|	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&amp;НачПериода, &amp;КонПериода, , , , , Организация = &amp;Организация) КАК ХозрасчетныйОстаткиИОбороты
|	|	
|	|ГДЕ
|	|	ХозрасчетныйОстаткиИОбороты.Счет.Забалансовый = ЛОЖЬ И
|	|	ХозрасчетныйОстаткиИОбороты.Счет.Код &lt;&gt; """"000""""
|	|
|	|СГРУППИРОВАТЬ ПО
|	|	ХозрасчетныйОстаткиИОбороты.Счет
|	|ИТОГИ 
|	|	СУММА(СуммаНачальныйОстатокДт),
|	|	СУММА(СуммаНачальныйОстатокКт),
|	|	СУММА(СуммаОборотДт),
|	|	СУММА(СуммаОборотКт),
|	|	СУММА(СуммаКонечныйОстатокДт),
|	|	СУММА(СуммаКонечныйОстатокКт)
|	|ПО
|	|	Счет ИЕРАРХИЯ
|	|	АВТОУПОРЯДОЧИВАНИЕ"";
|
|	Результат = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
|
|СписокИменБП = """ + СписокИмен + """; 
|СписокДанныхБП = """ + СписокДанных + """;
|
|//Преобразуем строки в многострочную часть
| СписокИмен = СтрЗаменить(СписокИменБП, "","", Символы.ПС);
| СписокДанных = СтрЗаменить(СписокДанныхБП, "","", Символы.ПС);
|
|Для Каждого СтрокаРезультата ИЗ Результат.Строки Цикл
|	Найден = Ложь;
|	
|	// В строке имен найдем номер строки с которой начинаем проверку счетов соответствующих БП
|	Для НомерСтроки = 1 По СтрЧислоСтрок(СписокИмен) Цикл
|		Если СтрПолучитьСтроку(СписокИмен, НомерСтроки) = ""СНД"" + СокрЛП(СтрокаРезультата.Счет.Код) Тогда
|			Найден = Истина;
|			Прервать;
|		КонецЕсли;
|	КонецЦикла;
|	
|	Если НЕ Найден Тогда
|		Продолжить;
|	КонецЕсли;
|	
|	// Проверка итогов по найденному счету
|	
|	СНД		= Число(СтрПолучитьСтроку(СписокДанных, НомерСтроки));
|	СНК		= Число(СтрПолучитьСтроку(СписокДанных, НомерСтроки+1));
|	ДО		= Число(СтрПолучитьСтроку(СписокДанных, НомерСтроки+2));
|	КО		= Число(СтрПолучитьСтроку(СписокДанных, НомерСтроки+3));
|	СКД		= Число(СтрПолучитьСтроку(СписокДанных, НомерСтроки+4));
|	СКК		= Число(СтрПолучитьСтроку(СписокДанных, НомерСтроки+5));
|	
|	ОтобразитьТекстСостояния(""Проверка начального сальдо для счета "" + СтрокаРезультата.Счет.Код);
|	Если СтрокаРезультата.СуммаНачальныйОстатокДт &lt;&gt; СНД Тогда
|		ЗафиксироватьОшибку(ЭтапКонвертации, ""Не совпадает начальное сальдо по дебету счета "" + СтрокаРезультата.Счет.Код + "":
|		|	Значение в базе-источнике: "" + СНД + ""
|		|	Значение в базе-приемнике: "" + СтрокаРезультата.СуммаНачальныйОстатокДт);
|	Иначе
|		ОтобразитьТекстСостояния(""Проверка начального сальдо по дебету для счета "" + СтрокаРезультата.Счет.Код + "" прошла успешно"");
|	КонецЕсли;
|	Если СтрокаРезультата.СуммаНачальныйОстатокКт &lt;&gt; СНК Тогда
|		ЗафиксироватьОшибку(ЭтапКонвертации, ""Не совпадает начальное сальдо по кредиту счета "" + СтрокаРезультата.Счет.Код + "":
|		|	Значение в базе-источнике: "" + СНК + ""
|		|	Значение в базе-приемнике: "" + СтрокаРезультата.СуммаНачальныйОстатокКт);
|	Иначе
|		ОтобразитьТекстСостояния(""Проверка начального сальдо по кредиту для счета "" + СтрокаРезультата.Счет.Код + "" прошла успешно"");
|	КонецЕсли;
|	
|	ОтобразитьТекстСостояния(""Проверка оборотов за период для счета "" + СтрокаРезультата.Счет.Код);
|	Если СтрокаРезультата.СуммаОборотДт &lt;&gt; ДО Тогда
|		ЗафиксироватьОшибку(ЭтапКонвертации, ""Не совпадает оборот по дебету счета "" + СтрокаРезультата.Счет.Код + "":
|		|	Значение в базе-источнике: "" + ДО + ""
|		|	Значение в базе-приемнике: "" + СтрокаРезультата.СуммаОборотДт);
|	Иначе
|		ОтобразитьТекстСостояния(""Проверка оборотов по дебету для счета "" + СтрокаРезультата.Счет.Код + "" прошла успешно"");
|	КонецЕсли;
|	Если СтрокаРезультата.СуммаОборотКт &lt;&gt; КО Тогда
|		ЗафиксироватьОшибку(ЭтапКонвертации, ""Не совпадает оборот по кредиту счета "" + СтрокаРезультата.Счет.Код + "":
|		|	Значение в базе-источнике: "" + КО + ""
|		|	Значение в базе-приемнике: "" + СтрокаРезультата.СуммаОборотКт);
|	Иначе
|		ОтобразитьТекстСостояния(""Проверка оборотов по кредиту для счета "" + СтрокаРезультата.Счет.Код + "" прошла успешно"");
|	КонецЕсли;
|		
|	ОтобразитьТекстСостояния(""Проверка конечного сальдо для счета "" + СтрокаРезультата.Счет.Код);
|	Если СтрокаРезультата.СуммаКонечныйОстатокДт &lt;&gt; СКД Тогда
|		ЗафиксироватьОшибку(ЭтапКонвертации, ""Не совпадает конечное сальдо по дебету счета "" + СтрокаРезультата.Счет.Код + "":
|		|	Значение в базе-источнике: "" + СКД + ""
|		|	Значение в базе-приемнике: "" + СтрокаРезультата.СуммаКонечныйОстатокДт);
|	Иначе
|		ОтобразитьТекстСостояния(""Проверка конечного сальдо по дебету для счета "" + СтрокаРезультата.Счет.Код + "" прошла успешно"");
|	КонецЕсли;
|	Если СтрокаРезультата.СуммаКонечныйОстатокКт &lt;&gt; СКК Тогда
|		ЗафиксироватьОшибку(ЭтапКонвертации, ""Не совпадает конечное сальдо по кредиту счета "" + СтрокаРезультата.Счет.Код + "":
|		|	Значение в базе-источнике: "" + СКК + ""
|		|	Значение в базе-приемнике: "" + СтрокаРезультата.СуммаКонечныйОстатокКт);
|	Иначе
|		ОтобразитьТекстСостояния(""Проверка конечного сальдо по кредиту для счета "" + СтрокаРезультата.Счет.Код + "" прошла успешно"");
|	КонецЕсли;
|		
|КонецЦикла;
|" ;
									
Возврат(КодПроверки);</Текст>
		</Алгоритм>
		<Алгоритм Имя="Проверки" ИспользуетсяПриЗагрузке="false">
			<Текст>// Проверка № 1 ******************************************
// проверка сальдо и оборотов в целом по ИБ
КодПроверки = Проверка1();

// Проверка № 2 ******************************************
// проверка сальдо и оборотов по счетам
КодПроверки = КодПроверки + Проверка2();

Возврат КодПроверки;</Текст>
		</Алгоритм>
		<Алгоритм Имя="РаспределитьПоМестамХранения" ИспользуетсяПриЗагрузке="false">
			<Текст>КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");

Сч_006 = СчетПоКоду("006");

//***********************************
//Получение стоимости единицы ТМЦ (в 77 на местах хранения ведется только количественный учет, 
//а для ввода остатков нам необходима сумма)
//Выбираем строки с итогами (без указания количества) удаляем их, а сумму распределяем 
//по строкам с указанным количеством пропорционально
КоллекцияОбъектов.Сортировать("СчетУчета, Субконто1, Субконто2, Субконто3");
ТабСуммыКРаспределению = СоздатьОбъект("ТаблицаЗначений");
ТабСуммыКРаспределению.НоваяКолонка("СчетУчета");
ТабСуммыКРаспределению.НоваяКолонка("Субконто1");
ТабСуммыКРаспределению.НоваяКолонка("Субконто2");
ТабСуммыКРаспределению.НоваяКолонка("Сумма");
ТабСуммыКРаспределению.НоваяКолонка("Количество");
ТабСуммыКРаспределению.НоваяКолонка("Стоимость");

КоллекцияОбъектов.ВыбратьСтроки();
Пока КоллекцияОбъектов.ПолучитьСтроку() = 1 Цикл			
	СчетУчета = ?(КоллекцияОбъектов.СчетДт = СчетПоКоду("00"), КоллекцияОбъектов.СчетКт,КоллекцияОбъектов.СчетДт);
	Если СчетУчета.Количественный = 1 Тогда
		Если (ПустоеЗначение(КоллекцияОбъектов.Количество) = 1)
			И (ПустоеЗначение(КоллекцияОбъектов.Сумма) = 0) Тогда
			ТабСуммыКРаспределению.НоваяСтрока();
			ТабСуммыКРаспределению.СчетУчета = КоллекцияОбъектов.СчетУчета;
			ТабСуммыКРаспределению.Субконто1 = КоллекцияОбъектов.Субконто1;
			ТабСуммыКРаспределению.Субконто2 = КоллекцияОбъектов.Субконто2;
			ТабСуммыКРаспределению.Сумма = КоллекцияОбъектов.Сумма;
		КонецЕсли;
	КонецЕсли;		
КонецЦикла;

ТабСуммыКРаспределению.ВыбратьСтроки();
Пока ТабСуммыКРаспределению.ПолучитьСтроку() = 1 Цикл		
	ТабСуммыКРаспределению.Количество = 0;
	ТабСуммыКРаспределению.Стоимость = 0;
	КоллекцияОбъектов.ВыбратьСтроки();
	Пока КоллекцияОбъектов.ПолучитьСтроку() = 1 Цикл		
		СчетУчета = ?(КоллекцияОбъектов.СчетДт = СчетПоКоду("00"), КоллекцияОбъектов.СчетКт,КоллекцияОбъектов.СчетДт);
		Если СчетУчета.Количественный = 1 Тогда
			Если (ПустоеЗначение(КоллекцияОбъектов.Количество) = 0)
				И (ПустоеЗначение(КоллекцияОбъектов.Сумма) = 1) Тогда
				Если (ТабСуммыКРаспределению.СчетУчета = КоллекцияОбъектов.СчетУчета)
					И (ТабСуммыКРаспределению.Субконто1 = КоллекцияОбъектов.Субконто1) Тогда
					
					СчетУчета = ?(КоллекцияОбъектов.СчетДт = СчетПоКоду("00"), КоллекцияОбъектов.СчетКт,КоллекцияОбъектов.СчетДт);
					Если СчетУчета = Сч_006 Тогда
						ТабСуммыКРаспределению.Количество = ТабСуммыКРаспределению.Количество + КоллекцияОбъектов.Количество;								
					Иначе
						Если ТабСуммыКРаспределению.Субконто2 &lt;&gt; КоллекцияОбъектов.Субконто2 Тогда
							ТабСуммыКРаспределению.Количество = ТабСуммыКРаспределению.Количество + КоллекцияОбъектов.Количество;
						КонецЕсли;
					КонецЕсли;
					
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;		
	КонецЦикла;		
	ТабСуммыКРаспределению.Стоимость = ТабСуммыКРаспределению.Сумма/?(ТабСуммыКРаспределению.Количество = 0, 1, ТабСуммыКРаспределению.Количество);
КонецЦикла;

ТабСуммыКРаспределению.ВыбратьСтроки();
Пока ТабСуммыКРаспределению.ПолучитьСтроку() = 1 Цикл		
	КоличествоРаспределено = ТабСуммыКРаспределению.Количество;
	СуммаРаспределено = ТабСуммыКРаспределению.Сумма;
	СтоимостьЕдиницы = ТабСуммыКРаспределению.Стоимость;
	КоллекцияОбъектов.ВыбратьСтроки();
	КоличествоСтрок = КоллекцияОбъектов.КоличествоСтрок();
	Если КоличествоСтрок = 0 Тогда
		Прервать;
	КонецЕсли;
	ТекущаяСтрока = 1;
	Для НомерСтроки = 0 По КоллекцияОбъектов.КоличествоСтрок() Цикл
		Если НомерСтроки = 0 Тогда
			Продолжить;
		КонецЕсли;
		Если НомерСтроки &gt; КоллекцияОбъектов.КоличествоСтрок() Тогда
			Прервать;
		КонецЕсли;
		КоллекцияОбъектов.ПолучитьСтрокуПоНомеру(НомерСтроки);
		СчетУчета = ?(КоллекцияОбъектов.СчетДт = СчетПоКоду("00"), КоллекцияОбъектов.СчетКт,КоллекцияОбъектов.СчетДт);
		Если СчетУчета.Количественный = 1 Тогда
			Если (ПустоеЗначение(КоллекцияОбъектов.Количество) = 0)
				И (ПустоеЗначение(КоллекцияОбъектов.Сумма) = 1) Тогда
				Если (ТабСуммыКРаспределению.СчетУчета = КоллекцияОбъектов.СчетУчета)
					И (ТабСуммыКРаспределению.Субконто1 = КоллекцияОбъектов.Субконто1) Тогда						
					
					Если СчетУчета = Сч_006 Тогда
						
						СуммаКРаспределению = Окр(КоллекцияОбъектов.Количество * СтоимостьЕдиницы, 2);
						КоллекцияОбъектов.Сумма = СуммаКРаспределению;
						СуммаРаспределено = СуммаРаспределено - СуммаКРаспределению;
						КоличествоРаспределено = КоличествоРаспределено - КоллекцияОбъектов.Количество;
						Если КоличествоРаспределено = 0 Тогда
							КоллекцияОбъектов.Сумма = КоллекцияОбъектов.Сумма + СуммаРаспределено;
						КонецЕсли;
						
					Иначе
						Если ТабСуммыКРаспределению.Субконто2 &lt;&gt; КоллекцияОбъектов.Субконто2 Тогда						
							СуммаКРаспределению = Окр(КоллекцияОбъектов.Количество * СтоимостьЕдиницы, 2);
							КоллекцияОбъектов.Сумма = СуммаКРаспределению;
							СуммаРаспределено = СуммаРаспределено - СуммаКРаспределению;
							КоличествоРаспределено = КоличествоРаспределено - КоллекцияОбъектов.Количество;
							Если КоличествоРаспределено = 0 Тогда
								КоллекцияОбъектов.Сумма = КоллекцияОбъектов.Сумма + СуммаРаспределено;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			ИначеЕсли (ПустоеЗначение(КоллекцияОбъектов.Количество) = 1)
				И (ПустоеЗначение(КоллекцияОбъектов.Сумма) = 0) Тогда
				КоллекцияОбъектов.УдалитьСтроку(НомерСтроки);
				НомерСтроки = НомерСтроки - 1;
			КонецЕсли;
		КонецЕсли;		
	КонецЦикла;		
КонецЦикла;

ВходящиеДанные.Установить("ВходящиеОстатки", КоллекцияОбъектов);</Текст>
		</Алгоритм>
	</Алгоритмы>
	<Запросы/>
</ПравилаОбмена>

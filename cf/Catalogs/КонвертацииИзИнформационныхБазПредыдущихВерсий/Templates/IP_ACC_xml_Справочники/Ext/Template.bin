<ПравилаОбмена>
	<ВерсияФормата>2.01</ВерсияФормата>
	<Ид>1e449e86-8268-4273-8aeb-5112f8d1b436    </Ид>
	<Наименование>Учет и отчетность предпринимателя, ред. 1.2 --&gt; Бухгалтерия предприятия КОРП</Наименование>
	<ДатаВремяСоздания>2011-09-06T12:52:02</ДатаВремяСоздания>
	<Источник ВерсияПлатформы="7.7" ВерсияКонфигурации="" СинонимКонфигурации="">Учет и отчетность предпринимателя, ред. 1.2</Источник>
	<Приемник ВерсияПлатформы="8.0" ВерсияКонфигурации="2.0.24.5" СинонимКонфигурации="Бухгалтерия предприятия КОРП, редакция 2.0">БухгалтерияПредприятияКОРП</Приемник>
	<ПередВыгрузкойДанных>Если ПустоеЗначение(ДатаНачала) = 1 Тогда
	Предупреждение("Не указана дата начала периода выгрузки!");
	Отказ = 1;
КонецЕсли;
Если ДатаНачала &gt; ДатаОкончания Тогда
	Если Форма.МодальныйРежим() = 0 Тогда
		Предупреждение("Неправильно задан период выгрузки!"+РазделительСтрок+
		"Дата начала больше даты окончания периода.");
		Отказ = 1;
	Иначе
		Сообщить("Неправильно задан период выгрузки!"+РазделительСтрок+
		"Дата начала больше даты окончания периода.");
		Отказ = 1;
	КонецЕсли;
КонецЕсли;
Если ДатаОкончания&gt;ПолучитьДатуТА() Тогда
	Если Форма.МодальныйРежим() = 0 Тогда
		Если Вопрос("Нельзя устанавливать дату окончания больше Точки Актуальности!
			| Выгрузить данные по Точку Актуальности ("+ПолучитьДатуТА()+")?","Да+Нет") &lt;&gt; "Да" Тогда
			Отказ = 1;
		Иначе
			ДатаОкончания=ПолучитьДатуТА();
			ДатаНачала = Мин(ДатаНачала,ДатаОкончания);
		КонецЕсли;
	Иначе
		Сообщить("Нельзя устанавливать дату окончания больше Точки Актуальности!"+РазделительСтрок+
		"Дата окончания установлена равной дате точки актуальности");
		ДатаОкончания=ПолучитьДатуТА();
		ДатаНачала = Мин(ДатаНачала,ДатаОкончания);
	КонецЕсли;
КонецЕсли;

Параметры.ДатаВводаОстатков = ДатаНачала;
Параметры.ДатаКонцаПериодаВыгрузки = ДатаОкончания;

Параметры.ВычетыСотрудниковпоНДФЛ = СоздатьОбъект("ТаблицаЗначений");
Параметры.ВычетыСотрудниковпоНДФЛ.НоваяКолонка("Физлицо");
Параметры.ВычетыСотрудниковпоНДФЛ.НоваяКолонка("КодВычета");
Параметры.ВычетыСотрудниковпоНДФЛ.НоваяКолонка("Период", "Дата");
Параметры.ВычетыСотрудниковпоНДФЛ.НоваяКолонка("ПериодЗавершения", "Дата");
Параметры.ВычетыСотрудниковпоНДФЛ.НоваяКолонка("КоличествоДетей", "Число");

Параметры.ВычетыСотрудниковпоНДФЛЛичный = СоздатьОбъект("ТаблицаЗначений");
Параметры.ВычетыСотрудниковпоНДФЛЛичный.НоваяКолонка("Физлицо");
Параметры.ВычетыСотрудниковпоНДФЛЛичный.НоваяКолонка("КодВычетаЛичный", "Строка");
Параметры.ВычетыСотрудниковпоНДФЛЛичный.НоваяКолонка("Период", "Дата");
Параметры.ВычетыСотрудниковпоНДФЛЛичный.НоваяКолонка("ПериодЗавершения", "Дата");

Параметры.СчетВводаОстатков = СчетПоКоду("00");
Параметры.ДлинаКода = 9; // стандартная длина кодов справочников в 8.0

Параметры.СписокРаботников = СоздатьОбъект("ТаблицаЗначений");
Параметры.СписокРаботников.НоваяКолонка("ФизЛицо"); // общее во всех талицах

Параметры.СписокУволенныхРаботников = СоздатьОбъект("ТаблицаЗначений");
Параметры.СписокУволенныхРаботников.НоваяКолонка("ФизЛицо");

Параметры.СписокОбъектовСтроительства = СоздатьОбъект("ТаблицаЗначений");
Параметры.СписокОбъектовСтроительства.НоваяКолонка("ОбъектСтроительства");
Параметры.СписокОбъектовСтроительства.НоваяКолонка("СчетБухгалтерскогоУчета");
Параметры.СписокОбъектовСтроительства.НоваяКолонка("СчетБухгалтерскогоУчетаНДС");

СпрВалюты = СоздатьОбъект("Справочник.Валюты");
Если (СпрВалюты.НайтиПоКоду("810") = 1) Тогда
	Параметры.Рубли = СпрВалюты.ТекущийЭлемент();
ИначеЕсли (СпрВалюты.НайтиПоКоду("643") = 1) Тогда
	Параметры.Рубли = СпрВалюты.ТекущийЭлемент();
КонецЕсли;

Параметры.ПараметрыАлгоритмов = СоздатьОбъект("СписокЗначений");
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "Прочее");
Параметры.ПараметрыАлгоритмов.Установить("СкладПоУмолчанию", "Основной склад &lt;1С:Предприниматель 7.7&gt;");
Параметры.ПараметрыАлгоритмов.Установить("ВидПрочихРасходов", "");
Параметры.ПараметрыАлгоритмов.Установить("ДатаДокументаРасчетов", "");
Параметры.ПараметрыАлгоритмов.Установить("ИспользоватьИмяНоменклатуры", 0);

//*****************************************************************
Параметры.ТаблицаОстатковМПЗ = СоздатьОбъект("ТаблицаЗначений");
Параметры.ТаблицаОстатковМПЗ.НоваяКолонка("Ключ");
Параметры.ТаблицаОстатковМПЗ.НоваяКолонка("НомерСтрокиТЧ");
Параметры.ТаблицаОстатковМПЗ.НоваяКолонка("СчетУчета");
Параметры.ТаблицаОстатковМПЗ.НоваяКолонка("Номенклатура");
Параметры.ТаблицаОстатковМПЗ.НоваяКолонка("ВидМПЗ");
Параметры.ТаблицаОстатковМПЗ.НоваяКолонка("Склад");
Параметры.ТаблицаОстатковМПЗ.НоваяКолонка("Количество", "Число");
Параметры.ТаблицаОстатковМПЗ.НоваяКолонка("Сумма", "Число");
Параметры.ТаблицаОстатковМПЗ.НоваяКолонка("НДС", "Число");
Параметры.ТаблицаОстатковМПЗ.НоваяКолонка("НДСВключенВСтоимость");
Параметры.ТаблицаОстатковМПЗ.НоваяКолонка("Партия");
Параметры.ТаблицаОстатковМПЗ.НоваяКолонка("Оплачен", "Число");
Параметры.ТаблицаОстатковМПЗ.НоваяКолонка("РеквизитыДокументаОплаты");
Параметры.ТаблицаОстатковМПЗ.НоваяКолонка("РасчетныйДокумент");
Параметры.ТаблицаОстатковМПЗ.НоваяКолонка("СтатусыОплатыРасходовУСН");
Параметры.ТаблицаОстатковМПЗ.НоваяКолонка("ОтражениеВУСН");
Параметры.ТаблицаОстатковМПЗ.НоваяКолонка("Валюта");
Параметры.ТаблицаОстатковМПЗ.НоваяКолонка("ВалютнаяСумма", "Число");
Параметры.ТаблицаОстатковМПЗ.НоваяКолонка("ВалютныйНДС", "Число");
Параметры.ТаблицаОстатковМПЗ.НоваяКолонка("Покупатель");
Параметры.ТаблицаОстатковМПЗ.НоваяКолонка("ДоговорПокупателя");
Параметры.ТаблицаОстатковМПЗ.НоваяКолонка("ДокументОтгрузки");
Параметры.ТаблицаОстатковМПЗ.НоваяКолонка("Поставщик");
Параметры.ТаблицаОстатковМПЗ.НоваяКолонка("ДоговорПоставщика");
Параметры.ТаблицаОстатковМПЗ.НоваяКолонка("Выручка", "Число");
Параметры.ТаблицаОстатковМПЗ.НоваяКолонка("НДСНачисленный", "Число");
Параметры.ТаблицаОстатковМПЗ.НоваяКолонка("ДоговорПоставщика");
Параметры.ТаблицаОстатковМПЗ.НоваяКолонка("НоменклатурнаяГруппа");
Параметры.ТаблицаОстатковМПЗ.НоваяКолонка("ХарактерДеятельности");
Параметры.ТаблицаОстатковМПЗ.НоваяКолонка("СтатусыОплатыРасходовУСН");
Параметры.ТаблицаОстатковМПЗ.НоваяКолонка("ОтражениеВУСН");
Параметры.ТаблицаОстатковМПЗ.НоваяКолонка("СтатусыПартийУСН");
Параметры.ТаблицаОстатковМПЗ.НоваяКолонка("ВидДеятельности");
Параметры.ТаблицаОстатковМПЗ.НоваяКолонка("ПартияСинхронизации");
Параметры.ТаблицаОстатковМПЗ.НоваяКолонка("Услуга", "Число");
Параметры.ТаблицаОстатковМПЗ.НоваяКолонка("Индекс");

//*****************************************************************
Параметры.ТаблицаОстатковМПЗОборотов = СоздатьОбъект("ТаблицаЗначений");
Параметры.ТаблицаОстатковМПЗОборотов.НоваяКолонка("Ключ");
Параметры.ТаблицаОстатковМПЗОборотов.НоваяКолонка("НомерСтрокиТЧ");
Параметры.ТаблицаОстатковМПЗОборотов.НоваяКолонка("Номенклатура");
Параметры.ТаблицаОстатковМПЗОборотов.НоваяКолонка("ВидМПЗ");
Параметры.ТаблицаОстатковМПЗОборотов.НоваяКолонка("Партия");
Параметры.ТаблицаОстатковМПЗОборотов.НоваяКолонка("Количество");
Параметры.ТаблицаОстатковМПЗОборотов.НоваяКолонка("Сумма");
Параметры.ТаблицаОстатковМПЗОборотов.НоваяКолонка("НДС");
Параметры.ТаблицаОстатковМПЗОборотов.НоваяКолонка("НДСВключенВСтоимость");

//*****************************************************************
Параметры.ТаблицаОстатковРасчетовСКонтрагентами = СоздатьОбъект("ТаблицаЗначений");
Параметры.ТаблицаОстатковРасчетовСКонтрагентами.НоваяКолонка("СчетУчета");
Параметры.ТаблицаОстатковРасчетовСКонтрагентами.НоваяКолонка("Контрагент");
Параметры.ТаблицаОстатковРасчетовСКонтрагентами.НоваяКолонка("ДоговорКонтрагента");
Параметры.ТаблицаОстатковРасчетовСКонтрагентами.НоваяКолонка("Документ");
Параметры.ТаблицаОстатковРасчетовСКонтрагентами.НоваяКолонка("Сумма");
Параметры.ТаблицаОстатковРасчетовСКонтрагентами.НоваяКолонка("СуммаКт");
Параметры.ТаблицаОстатковРасчетовСКонтрагентами.НоваяКолонка("Валюта");
Параметры.ТаблицаОстатковРасчетовСКонтрагентами.НоваяКолонка("КратностьВзаиморасчетов");
Параметры.ТаблицаОстатковРасчетовСКонтрагентами.НоваяКолонка("КурсВзаиморасчетов");
Параметры.ТаблицаОстатковРасчетовСКонтрагентами.НоваяКолонка("ВалютнаяСумма");
Параметры.ТаблицаОстатковРасчетовСКонтрагентами.НоваяКолонка("Аванс");

//*****************************************************************
Параметры.ТаблицаОстатковРасчетовПоНалогам= СоздатьОбъект("ТаблицаЗначений");
Параметры.ТаблицаОстатковРасчетовПоНалогам.НоваяКолонка("СчетУчета");
Параметры.ТаблицаОстатковРасчетовПоНалогам.НоваяКолонка("ВидПлатежаВБюджет");
Параметры.ТаблицаОстатковРасчетовПоНалогам.НоваяКолонка("НоменклатурнаяГруппа");
Параметры.ТаблицаОстатковРасчетовПоНалогам.НоваяКолонка("ХарактерДеятельности");
Параметры.ТаблицаОстатковРасчетовПоНалогам.НоваяКолонка("СтатьяЗатрат");
Параметры.ТаблицаОстатковРасчетовПоНалогам.НоваяКолонка("Сумма");
Параметры.ТаблицаОстатковРасчетовПоНалогам.НоваяКолонка("СуммаКт");
Параметры.ТаблицаОстатковРасчетовПоНалогам.НоваяКолонка("ОтражениеВУСН");

//*****************************************************************
Параметры.ТаблицаОстатковВнеоборотныхАктивов = СоздатьОбъект("ТаблицаЗначений");
Параметры.ТаблицаОстатковВнеоборотныхАктивов.НоваяКолонка("ИнвентарныйНомер");
Параметры.ТаблицаОстатковВнеоборотныхАктивов.НоваяКолонка("Объект");
Параметры.ТаблицаОстатковВнеоборотныхАктивов.НоваяКолонка("ПервоначальнаяСтоимость");
Параметры.ТаблицаОстатковВнеоборотныхАктивов.НоваяКолонка("ТекущаяСтоимость");
Параметры.ТаблицаОстатковВнеоборотныхАктивов.НоваяКолонка("НакопленнаяАмортизация");
Параметры.ТаблицаОстатковВнеоборотныхАктивов.НоваяКолонка("СрокПолезногоИспользования");
Параметры.ТаблицаОстатковВнеоборотныхАктивов.НоваяКолонка("НачислятьАмортизацию");
Параметры.ТаблицаОстатковВнеоборотныхАктивов.НоваяКолонка("РеквизитыДокументаОплаты");
Параметры.ТаблицаОстатковВнеоборотныхАктивов.НоваяКолонка("ДатаПринятияКУчету");
Параметры.ТаблицаОстатковВнеоборотныхАктивов.НоваяКолонка("Событие");
Параметры.ТаблицаОстатковВнеоборотныхАктивов.НоваяКолонка("НомерДокумента");
Параметры.ТаблицаОстатковВнеоборотныхАктивов.НоваяКолонка("ДатаПриобретения");

//*****************************************************************
Параметры.ТаблицаОстатковНДС = СоздатьОбъект("ТаблицаЗначений");
Параметры.ТаблицаОстатковНДС.НоваяКолонка("СтавкаНДС");
Параметры.ТаблицаОстатковНДС.НоваяКолонка("Контрагент");
Параметры.ТаблицаОстатковНДС.НоваяКолонка("ДоговорКонтрагента");
Параметры.ТаблицаОстатковНДС.НоваяКолонка("СчетФактура");
Параметры.ТаблицаОстатковНДС.НоваяКолонка("ДатаСФ");
Параметры.ТаблицаОстатковНДС.НоваяКолонка("НомерСФ");
Параметры.ТаблицаОстатковНДС.НоваяКолонка("СуммаБезНДС");
Параметры.ТаблицаОстатковНДС.НоваяКолонка("НДС");

//*****************************************************************
Параметры.ТаблицаОстатковРасчетовСРаботниками = СоздатьОбъект("ТаблицаЗначений");
Параметры.ТаблицаОстатковРасчетовСРаботниками.НоваяКолонка("РаботникОрганизации");
Параметры.ТаблицаОстатковРасчетовСРаботниками.НоваяКолонка("Сумма");
Параметры.ТаблицаОстатковРасчетовСРаботниками.НоваяКолонка("ПериодРегистрации");
Параметры.ТаблицаОстатковРасчетовСРаботниками.НоваяКолонка("Получатель");
Параметры.ТаблицаОстатковРасчетовСРаботниками.НоваяКолонка("ВидУдержания");
Параметры.ТаблицаОстатковРасчетовСРаботниками.НоваяКолонка("СуммаПодлежитУдержанию");
Параметры.ТаблицаОстатковРасчетовСРаботниками.НоваяКолонка("ХарактерДеятельности");
Параметры.ТаблицаОстатковРасчетовСРаботниками.НоваяКолонка("НоменклатурнаяГруппа");
Параметры.ТаблицаОстатковРасчетовСРаботниками.НоваяКолонка("ВидРасчета");

//*****************************************************************
Параметры.ТаблицаПроводок = СоздатьОбъект("ТаблицаЗначений");
Параметры.ТаблицаПроводок.НоваяКолонка("СчетУчета");
Параметры.ТаблицаПроводок.НоваяКолонка("Субконто1");
Параметры.ТаблицаПроводок.НоваяКолонка("Субконто2");
Параметры.ТаблицаПроводок.НоваяКолонка("Субконто3");
Параметры.ТаблицаПроводок.НоваяКолонка("Количество", "Число");
Параметры.ТаблицаПроводок.НоваяКолонка("Сумма");
Параметры.ТаблицаПроводок.НоваяКолонка("СуммаКт");
Параметры.ТаблицаПроводок.НоваяКолонка("Валюта");
Параметры.ТаблицаПроводок.НоваяКолонка("ВалютнаяСумма");
Параметры.ТаблицаПроводок.НоваяКолонка("СуммаНДС", "Число");
Параметры.ТаблицаПроводок.НоваяКолонка("СуммаМЦ", "Число");

//*****************************************************************
Параметры.ТаблицаДвижений = СоздатьОбъект("ТаблицаЗначений");
Параметры.ТаблицаДвижений.НоваяКолонка("ВидДвижения");
Параметры.ТаблицаДвижений.НоваяКолонка("ВидМПЗ");
Параметры.ТаблицаДвижений.НоваяКолонка("Номенклатура");
Параметры.ТаблицаДвижений.НоваяКолонка("НоменклатурнаяГруппа");
Параметры.ТаблицаДвижений.НоваяКолонка("ХарактерДеятельности");
Параметры.ТаблицаДвижений.НоваяКолонка("Партия");
Параметры.ТаблицаДвижений.НоваяКолонка("ПравилоДокументаОплаты");
Параметры.ТаблицаДвижений.НоваяКолонка("ДокументОплаты");
Параметры.ТаблицаДвижений.НоваяКолонка("Количество", "Число");
Параметры.ТаблицаДвижений.НоваяКолонка("Сумма", "Число");
Параметры.ТаблицаДвижений.НоваяКолонка("НДС", "Число");
Параметры.ТаблицаДвижений.НоваяКолонка("СуммаАмортизации", "Число");
Параметры.ТаблицаДвижений.НоваяКолонка("ДатаОперации");
Параметры.ТаблицаДвижений.НоваяКолонка("НомерДокумента");
Параметры.ТаблицаДвижений.НоваяКолонка("Оплачен", "Число");

//*********************************************************
Параметры.ПараметрыАлгоритмов.Установить("КоличествоСубконто", 1);

Параметры.ПараметрыАлгоритмов.Установить("ПартияПоРеквизитам", "");

//*********************************************************

Параметры.ТаблицаПроводокОбороты = СоздатьОбъект("ТаблицаЗначений");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("СчетДт");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("СчетКт");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("КодСчетаДт");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("КодСчетаКт");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("ВалютаДт");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("ВалютаКт");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("СубконтоДт");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("СубконтоКт");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("Сумма");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("ВалютнаяСуммаДт");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("ВалютнаяСуммаКт");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("КоличествоДт");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("КоличествоКт");

Параметры.ТаблицаДоговоров = СоздатьОбъект("ТаблицаЗначений");
Параметры.ТаблицаДоговоров.НоваяКолонка("Договор");
Параметры.ТаблицаДоговоров.НоваяКолонка("ВидДоговора");

// Учетная политика
СписокЭлементов1 = СоздатьОбъект("СписокЗначений");
СписокЭлементов2 = СоздатьОбъект("СписокЗначений");

//Определим наличие ЕНВД и заполним таблицу параметров
Параметры.ПрочиеПараметры = СоздатьОбъект("ТаблицаЗначений");
Параметры.ПрочиеПараметры.НоваяКолонка("ВидДеятельности");
Параметры.ПрочиеПараметры.НоваяКолонка("ХарактерДеятельности");

СправочникВидовДеятельности = СоздатьОбъект("Справочник.ВидыДеятельности");
ПрименяетсяЕНВД = 0;
СправочникВидовДеятельности.ВыбратьЭлементы();	
КоличествоВидовДеятельности = 0;
Пока СправочникВидовДеятельности.ПолучитьЭлемент() = 1 Цикл  
	КоличествоВидовДеятельности = КоличествоВидовДеятельности + 1;
	Если СправочникВидовДеятельности.ОблагаетсяЕНВД = 1 Тогда
		ПрименяетсяЕНВД = 1;				
	КонецЕсли;
	
	Параметры.ПрочиеПараметры.НоваяСтрока();
	Параметры.ПрочиеПараметры.ВидДеятельности = СправочникВидовДеятельности.ТекущийЭлемент();
	Если ПустоеЗначение(СправочникВидовДеятельности.ТекущийЭлемент().ХарактерДеятельности) = 1 Тогда
		Параметры.ПрочиеПараметры.ХарактерДеятельности = "ОптоваяТорговля";
	Иначе
		Параметры.ПрочиеПараметры.ХарактерДеятельности = СправочникВидовДеятельности.ХарактерДеятельности.Идентификатор();
	КонецЕсли
КонецЦикла;

ВестиУчетПоВидамДеятельности = ?(КоличествоВидовДеятельности &gt; 1, 1, 0);

Параметры.ПараметрыАлгоритмов.Установить("УСН", ?(Константа.УСН.Получить(ДатаОкончания) = Да, 1, 0));
ДатаПереходаНаУСН = "";
// Бухгалтерский учет
Для Год = 1980 по ДатаГод(Параметры.ДатаКонцаПериодаВыгрузки) Цикл
	ДатаПолученияЗначений = Дата(Год, 12, 31);
	ДатаУстановкиЗначений = Дата(Год, 1, 1);
	СписокЭлементов2.ДобавитьЗначение(?(Константа.МетодОпределенияВыручки.Получить(ДатаПолученияЗначений) = Перечисление.МетодыОпределенияВыручки.ПоОтгрузке, "ПоОтгрузке", "ПоОплате"), "МоментОпределенияНалоговойБазыНДС");
	СписокЭлементов2.ДобавитьЗначение(?(Константа.ОсобенностиИсчисленияНДФЛ.Получить(ДатаПолученияЗначений) = Перечисление.ОсобенностиИсчисленияНДФЛ.СтандартныеВычетыВПределахМесячногоДохода, "СтандартныеВычетыВПределахМесячногоДохода", "СтандартныеВычетыНарастающимИтогом") , "ОсобенностиИсчисленияНДФЛ");
	СписокЭлементов2.ДобавитьЗначение(ВестиУчетПоВидамДеятельности, "ВестиУчетПоВидамДеятельности");
	СписокЭлементов2.ДобавитьЗначение(ПрименяетсяЕНВД, "РозничнаяТорговляОблагаетсяЕНВД");
	СписокЭлементов2.ДобавитьЗначение(ПрименяетсяЕНВД, "ОрганизацияЯвляетсяПлательщикомЕНВД");
	СписокЭлементов2.ДобавитьЗначение(?(Константа.УСН.Получить(ДатаПолученияЗначений) = Да, "Упрощенная", "Общая"), "СистемаНалогообложения");	
	
	//для УСН
	Если Константа.УСН.Получить(ДатаПолученияЗначений) = Да Тогда
		Если ПустоеЗначение(ДатаПереходаНаУСН) = 1 Тогда
			ДатаПереходаНаУСН = ДатаПолученияЗначений;
		КонецЕсли;
	Иначе
		ДатаПереходаНаУСН = "";
	КонецЕсли;	
	СписокЭлементов2.ДобавитьЗначение(?(Константа.УСН.Получить(ДатаПолученияЗначений) = Да, Константа.ОбъектНалогообложения.Получить(ДатаПолученияЗначений), ""), "ОбъектНалогообложенияУСН");
	СписокЭлементов2.ДобавитьЗначение(Константа.УведомлениеНомер.Получить(ДатаПолученияЗначений), "УведомлениеНомер");
	СписокЭлементов2.ДобавитьЗначение(Константа.УведомлениеДата.Получить(ДатаПолученияЗначений), "УведомлениеДата");
	СписокЭлементов2.ДобавитьЗначение(Константа.ПорядокПризнанияМатериальныхРасходов, "ПорядокПризнанияМатериальныхРасходов");
	СписокЭлементов2.ДобавитьЗначение(Константа.ПорядокПризнанияРасходовПоТоварам, "ПорядокПризнанияРасходовПоТоварам");
	СписокЭлементов2.ДобавитьЗначение(Константа.ПорядокПризнанияРасходовПоНДС, "ПорядокПризнанияРасходовПоНДС");
	СписокЭлементов2.ДобавитьЗначение(НачГода(ДатаПереходаНаУСН), "ДатаПереходаНаУСН");
	СписокЭлементов2.ДобавитьЗначение(?(ПустоеЗначение(ДатаПереходаНаУСН) = 1, 0, 1), "ПоложенияПереходногоПериодаУСН");
	СписокЭлементов2.ДобавитьЗначение(Константа.ТарифСтраховыхВзносов.Получить(ДатаПолученияЗначений), "ВидТарифаСтраховыхВзносов");
	
	Параметры.УСН = ?(Константа.УСН.Получить(ДатаПолученияЗначений) = Да, 1, 0);
	Параметры.ПараметрыАлгоритмов.Установить("ПорядокПризнанияМатериальныхРасходов", Константа.ПорядокПризнанияМатериальныхРасходов);
	Параметры.ПараметрыАлгоритмов.Установить("ПорядокПризнанияРасходовПоТоварам", Константа.ПорядокПризнанияРасходовПоТоварам);
	Параметры.ПараметрыАлгоритмов.Установить("ПорядокПризнанияРасходовПоНДС", Константа.ПорядокПризнанияРасходовПоНДС);
	
	Для НомерЭлемента = 1 по СписокЭлементов2.РазмерСписка() Цикл
		ПредставлениеЗначения = "";
		Значение2 = СписокЭлементов2.ПолучитьЗначение(НомерЭлемента, ПредставлениеЗначения);
		Значение1 = СписокЭлементов1.Получить(ПредставлениеЗначения);
		
		Если Значение1 &lt;&gt; Значение2 Тогда
			
			СписокЭлементов2.ДобавитьЗначение(ДатаУстановкиЗначений, "Период");				
			ВыгрузитьПоПравилу(,, СписокЭлементов2,, "УчетнаяПолитикаБухгалтерскийУчет");
			
			СписокЭлементов1.УдалитьВсе();
			СписокЭлементов2.УдалитьЗначение(СписокЭлементов2.РазмерСписка());
			
			СписокЭлементов2.Выгрузить(СписокЭлементов1);
			СписокЭлементов2.УдалитьВсе();
			Прервать;
		КонецЕсли;
	КонецЦикла;
	СписокЭлементов2.УдалитьВсе();
КонецЦикла;

//Зарегистрируем изменение УП для ввода данных по отдельным регистрам
СписокЭлементов1 = СоздатьОбъект("СписокЗначений");
СписокЭлементов2 = СоздатьОбъект("СписокЗначений");
Если Параметры.ДатаКонцаПериодаВыгрузки &gt; Параметры.ДатаВводаОстатков Тогда
	ДатаПолученияЗначений = КонМесяца(Параметры.ДатаКонцаПериодаВыгрузки + 1);
	ДатаУстановкиЗначений = КонМесяца(Параметры.ДатаКонцаПериодаВыгрузки + 1);
	СписокЭлементов2.ДобавитьЗначение(?(Константа.МетодОпределенияВыручки.Получить(ДатаПолученияЗначений) = Перечисление.МетодыОпределенияВыручки.ПоОтгрузке, "ПоОтгрузке", "ПоОплате"), "МоментОпределенияНалоговойБазыНДС");
	СписокЭлементов2.ДобавитьЗначение(?(Константа.ОсобенностиИсчисленияНДФЛ.Получить(ДатаПолученияЗначений) = Перечисление.ОсобенностиИсчисленияНДФЛ.СтандартныеВычетыВПределахМесячногоДохода, "СтандартныеВычетыВПределахМесячногоДохода", "СтандартныеВычетыНарастающимИтогом") , "ОсобенностиИсчисленияНДФЛ");
	СписокЭлементов2.ДобавитьЗначение(ВестиУчетПоВидамДеятельности, "ВестиУчетПоВидамДеятельности");
	СписокЭлементов2.ДобавитьЗначение(ПрименяетсяЕНВД, "РозничнаяТорговляОблагаетсяЕНВД");
	СписокЭлементов2.ДобавитьЗначение(ПрименяетсяЕНВД, "ОрганизацияЯвляетсяПлательщикомЕНВД");
	СписокЭлементов2.ДобавитьЗначение(?(Константа.УСН.Получить(ДатаПолученияЗначений) = Да, "Упрощенная", "Общая"), "СистемаНалогообложения");
	
	//для УСН
	Если Константа.УСН.Получить(ДатаПолученияЗначений) = Да Тогда
		Если ПустоеЗначение(ДатаПереходаНаУСН) = 1 Тогда
			ДатаПереходаНаУСН = ДатаПолученияЗначений;
		КонецЕсли;
	Иначе
		ДатаПереходаНаУСН = "";
	КонецЕсли;	
	СписокЭлементов2.ДобавитьЗначение(?(Константа.УСН.Получить(ДатаПолученияЗначений) = Да, Константа.ОбъектНалогообложения.Получить(ДатаПолученияЗначений), ""), "ОбъектНалогообложенияУСН");
	СписокЭлементов2.ДобавитьЗначение(Константа.УведомлениеНомер.Получить(ДатаПолученияЗначений), "УведомлениеНомер");
	СписокЭлементов2.ДобавитьЗначение(Константа.УведомлениеДата.Получить(ДатаПолученияЗначений), "УведомлениеДата");
	СписокЭлементов2.ДобавитьЗначение(Константа.ПорядокПризнанияМатериальныхРасходов, "ПорядокПризнанияМатериальныхРасходов");
	СписокЭлементов2.ДобавитьЗначение(Константа.ПорядокПризнанияРасходовПоТоварам, "ПорядокПризнанияРасходовПоТоварам");
	СписокЭлементов2.ДобавитьЗначение(Константа.ПорядокПризнанияРасходовПоНДС, "ПорядокПризнанияРасходовПоНДС");
	СписокЭлементов2.ДобавитьЗначение(НачГода(ДатаПереходаНаУСН), "ДатаПереходаНаУСН");
	СписокЭлементов2.ДобавитьЗначение(?(ПустоеЗначение(ДатаПереходаНаУСН) = 1, 0, 1), "ПоложенияПереходногоПериодаУСН");
	СписокЭлементов2.ДобавитьЗначение(Константа.ТарифСтраховыхВзносов.Получить(ДатаПолученияЗначений), "ВидТарифаСтраховыхВзносов");
	
	Для НомерЭлемента = 1 по СписокЭлементов2.РазмерСписка() Цикл
		ПредставлениеЗначения = "";
		Значение2 = СписокЭлементов2.ПолучитьЗначение(НомерЭлемента, ПредставлениеЗначения);
		Значение1 = СписокЭлементов1.Получить(ПредставлениеЗначения);
		
		Если Значение1 &lt;&gt; Значение2 Тогда
			
			СписокЭлементов2.ДобавитьЗначение(ДатаУстановкиЗначений, "Период");				
			ВыгрузитьПоПравилу(,, СписокЭлементов2,, "УчетнаяПолитикаБухгалтерскийУчет");
			
			СписокЭлементов1.УдалитьВсе();
			СписокЭлементов2.УдалитьЗначение(СписокЭлементов2.РазмерСписка());
			
			СписокЭлементов2.Выгрузить(СписокЭлементов1);
			СписокЭлементов2.УдалитьВсе();
			Прервать;
		КонецЕсли;
	КонецЦикла;
	СписокЭлементов2.УдалитьВсе();
КонецЕсли;

ВыгрузитьПоПравилу(,,,, "УчетнаяПолитикаПоПерсоналу");

Параметры.ПараметрыАлгоритмов.Установить("УчетНоменклатурыПоСкладам", Константа.УчетНоменклатурыПоСкладам);

Параметры.ОсновнаяНоменклатурнаяГруппа = "Основная номенклатурная группа";
//Выгрузка номенклатурных групп
ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
НоменклатурныеГруппы = СоздатьОбъект("Справочник.Номенклатура");
НоменклатурныеГруппы.ВыбратьЭлементы();
Пока НоменклатурныеГруппы.ПолучитьЭлемент() = 1 Цикл
	Если ПустоеЗначение(НоменклатурныеГруппы.ВидДеятельности) = 0 Тогда
		НоменклатурнаяГруппа = СокрЛП(НоменклатурныеГруппы.ВидДеятельности.Наименование);	
		ИсходящиеДанные.Установить("Наименование", НоменклатурнаяГруппа);
		ВыгрузитьПоПравилу(,,ИсходящиеДанные,, "НоменклатурныеГруппы");
	КонецЕсли;
КонецЦикла;
ИсходящиеДанные.Установить("Наименование", Параметры.ОсновнаяНоменклатурнаяГруппа);
ВыгрузитьПоПравилу(,,ИсходящиеДанные,, "НоменклатурныеГруппы");


</ПередВыгрузкойДанных>
	<ПослеВыгрузкиДанных>ВыгрузитьПоПравилу(,,,, "Работники");
ВыгрузитьПоПравилу(,,,, "УвольнениеИзОрганизаций");

ВходящиеДанные = СоздатьОбъект("СписокЗначений");

Параметры.ТаблицаДоговоров.ВыбратьСтроки();
Пока Параметры.ТаблицаДоговоров.ПолучитьСтроку() = 1 Цикл
	ВходящиеДанные.УдалитьВсе();
	ВходящиеДанные.Установить("ВидДоговора", Параметры.ТаблицаДоговоров.ВидДоговора);
	ВыгрузитьПоПравилу(Параметры.ТаблицаДоговоров.Договор,, ВходящиеДанные,, "ДоговорыКонтрагентовПоВидам");
КонецЦикла;

//Заполнение регистра Виды деятельности

Параметры.ПрочиеПараметры.ВыбратьСтроки();

ВходящиеДанные = СоздатьОбъект("СписокЗначений");
Пока Параметры.ПрочиеПараметры.ПолучитьСтроку() = 1 Цикл
	ВидДеятельности = Параметры.ПрочиеПараметры.ВидДеятельности;
	ХарактерДеятельности = Параметры.ПрочиеПараметры.ХарактерДеятельности;
	НоменклатурнаяГруппа = СокрЛП(ВидДеятельности.Наименование);
	ВходящиеДанные.УдалитьВсе();
	ВходящиеДанные.Установить("ВидДеятельности", ВидДеятельности);
	ВходящиеДанные.Установить("ХарактерДеятельности", ХарактерДеятельности);
	ВходящиеДанные.Установить("НоменклатурнаяГруппа", НоменклатурнаяГруппа);			
	ВыгрузитьПоПравилу(,,ВходящиеДанные,,"РегистрВидыДеятельностиПредпринимателей");
КонецЦикла;


//****************************************
// Добавляем сведени о конфигурации и ИБ
ВыгрузитьСведенияОбИБ();




</ПослеВыгрузкиДанных>
	<ПередЗагрузкойДанных>//*********************************************************************************************
// Настройка параметров учета
//*********************************************************************************************

// Склады
// если не включен складской учет - то включим его принудительно
БУ = ПланыСчетов.Хозрасчетный.Товары.ПолучитьОбъект();

ВестиПартионныйУчетБУ = НЕ (БУ.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Партии, "ВидСубконто") = Неопределено);
ВестиСкладскойУчетБУ  = НЕ (БУ.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады, "ВидСубконто") = Неопределено);

Если ВестиСкладскойУчетБУ Тогда
	ВестиСуммовойУчетПоСкладамБУ = БУ.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады, "ВидСубконто").Суммовой;
Иначе
	ВестиСуммовойУчетПоСкладамБУ = Ложь;
КонецЕсли;

Если НЕ ВестиСкладскойУчетБУ 
	ИЛИ НЕ ВестиПартионныйУчетБУ Тогда
	ОбщегоНазначения.ПрименитьПараметрыАналитикиМПЗ(Истина, Истина, ВестиСуммовойУчетПоСкладамБУ,);
КонецЕсли;

//*********************************************************************************************
//Расчеты
Выполнить(Алгоритмы.ПрименитьПараметрыРасчетовПоДокументам);

//*********************************************************************************************
// Денежные средства
Выполнить(Алгоритмы.ПрименитьПараметрыДляСчетовДенежныхСредств);

//*********************************************************************************************
//Работники
// Алгоритм читает значение константы 7.7 и при необходимости включает аналитику на счете 70
Выполнить(Алгоритмы.ПрименитьПараметрыРасчетовССотрудниками);
</ПередЗагрузкойДанных>
	<ПослеЗагрузкиОбъекта>Если ИмяТипаОбъекта = "Справочник" Тогда
	Если НЕ ЗначениеЗаполнено(Объект.Код) Тогда
		Объект.УстановитьНовыйКод();
	КонецЕсли;
	
ИначеЕсли ИмяТипаОбъекта = "Документ" Тогда
	Если НЕ ЗначениеЗаполнено(Объект.Номер) Тогда
		Объект.УстановитьНовыйНомер();
	КонецЕсли;
КонецЕсли;</ПослеЗагрузкиОбъекта>
	<Параметры>
		<Параметр Имя="ВидМПЗ                                            " Наименование="Вид МПЗ                                            " ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ВидыХарактерыДеятельности                         " Наименование="Таблица сопоставлений видов деятельности и характеров деятельности" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ВыгружатьКоды                                     " Наименование="Выгружать коды справочников                                     " ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="true" ТипЗначения="ПеречислениеСсылка.Булево" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ВычетыСотрудниковпоНДФЛ                           " Наименование="Таблицы вычетов сотрудников по НДФЛ" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ВычетыСотрудниковпоНДФЛЛичный                     " Наименование="Таблица личных вычетов сотрудников по НДФЛ" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ДатаВводаОстатков                                 " Наименование="Дата ввода остатков" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ДатаКонцаПериодаВыгрузки                          " Наименование="Дата конца периода выгрузки                          " ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ДлинаКода                                         " Наименование="Длина кодов справочников                                         " ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ОсновнаяНоменклатурнаяГруппа                      " Наименование="Основная номенклатурная группа                      " ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ПараметрыАлгоритмов                               " Наименование="Параметры алгоритмов                               " ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ПаспортныеДанные                                  " Наименование="Паспортные данные                                  " ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ПостфиксКомментария                               " Наименование="Постфикс комментария                               " ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ПрочиеПараметры                                   " Наименование="Прочие параметры (динамически формируемые)" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="РазделУчета                                       " Наименование="Текущий раздел учета" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="Рубли                                             " Наименование="Рубли                                             " ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="СписокНМА                                         " Наименование="Список НМА                                         " ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="СписокОбъектовСтроительства                       " Наименование="Список объектов строительства" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="СписокОС                                          " Наименование="Список ОС                                          " ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="СписокРаботников                                  " Наименование="Список работников                                  " ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="СписокУволенныхРаботников                         " Наименование="Список уволенных работников" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="СписокХарактеровДеятельности                      " Наименование="Список характеров деятельности в БП 8                      " ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="СчетВводаОстатков                                 " Наименование="Счет ввода остатков" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ТаблицаДвижений                                   " Наименование="Таблица оборотов МПЗ                                " ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ТаблицаДоговоров                                  " Наименование="Таблица договоров                                  " ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ТаблицаОстатковВнеоборотныхАктивов                " Наименование="Таблица остатков внеоборотных активов                " ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ТаблицаОстатковМПЗ                                " Наименование="Таблица остатков МПЗ                                " ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ТаблицаОстатковМПЗОборотов                        " Наименование="Таблица остатков МПЗ (обороты материалов в производстве)                                " ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ТаблицаОстатковНДС                                " Наименование="Таблица остатков НДС                                " ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ТаблицаОстатковРасчетовПоНалогам                  " Наименование="Таблица остатков расчетов по налогам                  " ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ТаблицаОстатковРасчетовСКонтрагентами             " Наименование="Таблица остатков расчетов с контрагентами                     " ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ТаблицаОстатковРасчетовСРаботниками               " Наименование="Таблица остатков расчетов с работниками               " ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ТаблицаПроводок                                   " Наименование="Таблица проводок (остатки)                                   " ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ТаблицаПроводокОбороты                            " Наименование="Таблица проводок (обороты)" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="УСН                                               " Наименование="УСН                                               " ИспользуетсяПриЗагрузке="true" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
	</Параметры>
	<Обработки/>
	<ПравилаКонвертацииОбъектов>
		<Группа>
			<Код>ОбъектыУчета</Код>
			<Наименование>ОбъектыУчета                                      </Наименование>
			<Порядок>50</Порядок>
			<Группа>
				<Код>Справочники</Код>
				<Наименование>Справочники                                       </Наименование>
				<Порядок>50</Порядок>
				<Правило>
					<Код>ВидыДеятельностиПредпринимателей</Код>
					<Наименование>СправочникСсылка.ВидыДеятельности --&gt; СправочникСсылка.ВидыДеятельностиПредпринимателей</Наименование>
					<Порядок>50</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.ВидыДеятельности</Источник>
					<Приемник>СправочникСсылка.ВидыДеятельностиПредпринимателей</Приемник>
					<Свойства>
						<Свойство Отключить="true">
							<Код>1</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Если Параметры.ВыгружатьКоды = Да Тогда
	Значение = ПривестиНомерКДлине(Источник.Код, Параметры.ДлинаКода);
	
Иначе
	Отказ = 1 ;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование>Лицензия --&gt; Лицензия</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Лицензия" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Лицензия" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>ПолнНаименование --&gt; НаименованиеПолное</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="ПолнНаименование" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>Адрес --&gt; МестоОсуществления</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="Адрес" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="МестоОсуществления" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>7</Код>
							<Наименование> --&gt; ХарактерДеятельности</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ХарактерДеятельности" Вид="Реквизит" Тип="ПеречислениеСсылка.ХарактерДеятельности"/>
							<ПередВыгрузкой>Параметры.ПрочиеПараметры.ВыбратьСтроки();
НомерСтроки = "";
Параметры.ПрочиеПараметры.НайтиЗначение(Источник,НомерСтроки, "ВидДеятельности");
Значение = Параметры.ПрочиеПараметры.ПолучитьЗначение(НомерСтроки, "ХарактерДеятельности");</ПередВыгрузкой>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>БанковскиеСчета</Код>
					<Наименование>СправочникСсылка.БанковскиеСчета --&gt; СправочникСсылка.БанковскиеСчета</Наименование>
					<Порядок>100</Порядок>
					<Источник>СправочникСсылка.БанковскиеСчета</Источник>
					<Приемник>СправочникСсылка.БанковскиеСчета</Приемник>
					<Свойства>
						<Свойство>
							<Код>3</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Если Параметры.ВыгружатьКоды = Да Тогда
	Значение = ПривестиНомерКДлине(Источник.Код, Параметры.ДлинаКода);
	
Иначе
	Отказ = 1 ;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>9</Код>
							<Наименование>Номер --&gt; НомерСчета</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="Номер" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="НомерСчета" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>10</Код>
							<Наименование>БанкОрганизации --&gt; Банк</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="БанкОрганизации" Вид="Реквизит" Тип="СправочникСсылка.Банки"/>
							<Приемник Имя="Банк" Вид="Реквизит" Тип="СправочникСсылка.Банки"/>
							<КодПравилаКонвертации>Банки                                             </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование>БанкДляРасчетов --&gt; БанкДляРасчетов</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="БанкДляРасчетов" Вид="Реквизит" Тип="СправочникСсылка.Банки"/>
							<Приемник Имя="БанкДляРасчетов" Вид="Реквизит" Тип="СправочникСсылка.Банки"/>
							<КодПравилаКонвертации>Банки                                             </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование>Корреспондент --&gt; ТекстКорреспондента</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Корреспондент" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="ТекстКорреспондента" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>МесяцПрописью --&gt; МесяцПрописью</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="МесяцПрописью" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="МесяцПрописью" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование>СуммаБез00Копеек --&gt; СуммаБезКопеек</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="СуммаБез00Копеек" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="СуммаБезКопеек" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование>ВидСчета --&gt; ВидСчета</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="ВидСчета" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="ВидСчета" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Если Источник.ТипСчета &lt;&gt; Перечисление.ТипыБанковскихСчетов.Рублевый Тогда
	Значение = "Расчетный";
ИначеЕсли Лев(Источник.ВидСчета, 9) = "Расчетный" Тогда
	Значение = "Расчетный";
Иначе
	Значение = Источник.ВидСчета;
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>НомерИДатаРазрешения --&gt; НомерИДатаРазрешения</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="НомерИДатаРазрешения" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="НомерИДатаРазрешения" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование>ДатаОткрытияСчета --&gt; ДатаОткрытия</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="ДатаОткрытияСчета" Вид="Реквизит" Тип="Дата"/>
							<Приемник Имя="ДатаОткрытия" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование>ДатаЗакрытияСчета --&gt; ДатаЗакрытия</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="ДатаЗакрытияСчета" Вид="Реквизит" Тип="Дата"/>
							<Приемник Имя="ДатаЗакрытия" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>8</Код>
							<Наименование> --&gt; Владелец</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Владелец" Вид="Свойство"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование> --&gt; ВалютаДенежныхСредств</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаДенежныхСредств" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Если Источник.ТипСчета = Перечисление.ТипыБанковскихСчетов.Рублевый Тогда
	Значение = Параметры.Рубли;
	
Иначе
	Значение = Источник.Валюта;
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование> --&gt; ВсегдаУказыватьКПП</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВсегдаУказыватьКПП" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование> --&gt; ВалютаДенежныхСредств</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаДенежныхСредств" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Если Источник.ТипСчета = Перечисление.ТипыБанковскихСчетов.Рублевый Тогда
	Значение = Параметры.Рубли;
Иначе
	Отказ = 1;
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ФизическиеЛица</Код>
					<Наименование>СправочникСсылка.Работники --&gt; СправочникСсылка.ФизическиеЛица</Наименование>
					<Порядок>150</Порядок>
					<ПослеВыгрузки>Если Источник.ЭтоГруппа() = 0 Тогда
	
	ВычетыСотрудниковпоНДФЛ = СоздатьОбъект("Справочник.ВычетыСотрудниковпоНДФЛ");
	ВычетыСотрудниковпоНДФЛ.ИспользоватьВладельца(Источник);
	Параметры.ВычетыСотрудниковпоНДФЛ.УдалитьСтроки();
	Параметры.ВычетыСотрудниковпоНДФЛЛичный.УдалитьСтроки();

	НомСтроки = 0;
	Если Параметры.СписокРаботников.НайтиЗначение(Источник, НомСтроки, "ФизЛицо") = 0 Тогда
		Параметры.СписокРаботников.НоваяСтрока();
		Параметры.СписокРаботников.ФизЛицо = Источник;
	КонецЕсли;

	Если (Источник.ХарактерРаботы.Получить(Параметры.ДатаКонцаПериодаВыгрузки) = Перечисление.ХарактерРаботы.ТрудовыеОтношенияПрекращены)
		ИЛИ (ПустоеЗначение(Источник.ДатаУвольнения) = 0) Тогда
		НомСтроки = 0;
		Если Параметры.СписокУволенныхРаботников.НайтиЗначение(Источник, НомСтроки, "ФизЛицо") = 0 Тогда
			Параметры.СписокУволенныхРаботников.НоваяСтрока();
			Параметры.СписокУволенныхРаботников.ФизЛицо = Источник;
		КонецЕсли;
	КонецЕсли;

	ПолноеИмя = Источник.Наименование;
	ПозицияПервогоПробела = Найти(ПолноеИмя, " ");
	Если ПозицияПервогоПробела &lt;&gt; 0 Тогда
		Фамилия = Лев(ПолноеИмя, ПозицияПервогоПробела);
		ИмяОтчество = Сред(ПолноеИмя, ПозицияПервогоПробела+1);
		ИмяОтчество = СокрЛ(ИмяОтчество);
		Имя = Лев(ИмяОтчество, 1)+".";
		
		ВходящиеДанные = СоздатьОбъект("СписокЗначений");
		ВходящиеДанные.Установить("Фамилия", Фамилия);
		ВходящиеДанные.Установить("Имя", ИмяОтчество);
		ВходящиеДанные.Установить("Отчество", "");

		ПозицияВторогоПробела = Найти(ИмяОтчество, " ");
		Если ПозицияВторогоПробела &lt;&gt; 0 Тогда
			Отчество = Сред(ИмяОтчество, ПозицияВторогоПробела+1);
			Отчество = СокрЛ(Отчество);
			
			ВходящиеДанные.Установить("Имя", Лев(ИмяОтчество, ПозицияВторогоПробела));
			ВходящиеДанные.Установить("Отчество", Отчество);
		КонецЕсли;
		
		ВыгрузитьПоПравилу(Источник,, ВходящиеДанные,, "ФИОФизЛиц");
	КонецЕсли;

	ВыгрузитьПоПравилу(Источник,,,, "СведенияОбИнвалидностиФизлиц");
	ВыгрузитьПоПравилу(Источник,,,, "ПаспортныеДанныеФизЛиц");
	ВыгрузитьПоПравилу(Источник,,,, "ГражданствоФизЛиц");
	ВыгрузитьПоПравилу(Источник,,,, "ГражданствоФизЛицНачало");
	ВыгрузитьПоПравилу(Источник,,,, "СтатусФизЛицКакНалогоплательщиковНДФЛ");
	ВыгрузитьПоПравилу(Источник,,,, "СтатусФизЛицКакНалогоплательщиковНДФЛНачало");
	ВыгрузитьПоПравилу(Источник,,,, "ТелефоныФизЛица");
	ВыгрузитьПоПравилу(Источник,,,, "АдресПоПропискеФизЛица");
	ВыгрузитьПоПравилу(Источник,,,, "ФактическийАдресФизЛица");
	
    //Выгрузка стандартных вычетов сотрудника
	ВычетыСотрудниковпоНДФЛ.ВыбратьЭлементы();
	Пока ВычетыСотрудниковпоНДФЛ.ПолучитьЭлемент() = 1 Цикл
		
		Если ВычетыСотрудниковпоНДФЛ.ПометкаУдаления() = 1 Тогда
			Продолжить;
		КонецЕсли;
		
		Если (Лев(ВычетыСотрудниковпоНДФЛ.ВидВычета.КодДляОтчетности2009, 1)) &lt;&gt; "1" Тогда
			Продолжить;
		КонецЕсли;
		
		Если (ВычетыСотрудниковпоНДФЛ.ВидВычета.КодДляОтчетности2009 &lt;&gt; "103")
			И (ВычетыСотрудниковпоНДФЛ.ВидВычета.КодДляОтчетности2009 &lt;&gt; "104")
			И (ВычетыСотрудниковпоНДФЛ.ВидВычета.КодДляОтчетности2009 &lt;&gt; "105") Тогда
			
			Параметры.ВычетыСотрудниковпоНДФЛ.НоваяСтрока();
			Параметры.ВычетыСотрудниковпоНДФЛ.Физлицо = Источник;
			Параметры.ВычетыСотрудниковпоНДФЛ.КодВычета = ВычетыСотрудниковпоНДФЛ.ВидВычета;
			Параметры.ВычетыСотрудниковпоНДФЛ.КоличествоДетей = 1;
			Параметры.ВычетыСотрудниковпоНДФЛ.Период = ?(ПустоеЗначение(ВычетыСотрудниковпоНДФЛ.ДатаНачала) = 1, "",НачМесяца(ВычетыСотрудниковпоНДФЛ.ДатаНачала));
			Параметры.ВычетыСотрудниковпоНДФЛ.ПериодЗавершения = ?(ПустоеЗначение(ВычетыСотрудниковпоНДФЛ.ДатаОкончания) = 1, "",КонМесяца(ВычетыСотрудниковпоНДФЛ.ДатаОкончания));			
			
		Иначе
			Параметры.ВычетыСотрудниковпоНДФЛЛичный.НоваяСтрока();
			Параметры.ВычетыСотрудниковпоНДФЛЛичный.Физлицо = Источник;
			Параметры.ВычетыСотрудниковпоНДФЛЛичный.КодВычетаЛичный = ВычетыСотрудниковпоНДФЛ.ВидВычета.КодДляОтчетности2009;
			Параметры.ВычетыСотрудниковпоНДФЛЛичный.Период = ?(ПустоеЗначение(ВычетыСотрудниковпоНДФЛ.ДатаНачала) = 1, "",НачМесяца(ВычетыСотрудниковпоНДФЛ.ДатаНачала));
		КонецЕсли;
		
	КонецЦикла;
	
	Параметры.ВычетыСотрудниковпоНДФЛ.Свернуть("Физлицо, КодВычета, Период, ПериодЗавершения","КоличествоДетей");
	Параметры.ВычетыСотрудниковпоНДФЛЛичный.Свернуть("Физлицо, КодВычетаЛичный, Период","");
	
	Если (Параметры.ВычетыСотрудниковпоНДФЛ.КоличествоСтрок()&gt;0) 
		или (Параметры.ВычетыСотрудниковпоНДФЛЛичный.КоличествоСтрок()&gt;0) Тогда
			ВходящиеДанные = СоздатьОбъект("СписокЗначений");
			ВходящиеДанные.Установить("Период", Параметры.ДатаВводаОстатков);
			ВыгрузитьПоПравилу(Источник,, ВходящиеДанные,, "НДФЛПрименениеВычетов");
	КонецЕсли;
	
	Параметры.ВычетыСотрудниковпоНДФЛ.ВыбратьСтроки();
	Пока Параметры.ВычетыСотрудниковпоНДФЛ.ПолучитьСтроку() = 1 Цикл
		ВходящиеДанные = СоздатьОбъект("СписокЗначений");
		ВходящиеДанные.Установить("Период", Параметры.ВычетыСотрудниковпоНДФЛ.Период);
		ВходящиеДанные.Установить("ПериодЗавершения", Параметры.ВычетыСотрудниковпоНДФЛ.ПериодЗавершения);
		ВходящиеДанные.Установить("Физлицо", Параметры.ВычетыСотрудниковпоНДФЛ.Физлицо);
		ВходящиеДанные.Установить("КодВычета", Параметры.ВычетыСотрудниковпоНДФЛ.КодВычета);
		ВходящиеДанные.Установить("КоличествоДетей", Параметры.ВычетыСотрудниковпоНДФЛ.КоличествоДетей);
		ВыгрузитьПоПравилу(,, ВходящиеДанные,, "НДФЛСтандартныеВычетыНаДетей");
	КонецЦикла;
	
	Параметры.ВычетыСотрудниковпоНДФЛЛичный.ВыбратьСтроки();
	Пока Параметры.ВычетыСотрудниковпоНДФЛЛичный.ПолучитьСтроку() = 1 Цикл
		ВходящиеДанные = СоздатьОбъект("СписокЗначений");
		ВходящиеДанные.Установить("Период", Параметры.ВычетыСотрудниковпоНДФЛЛичный.Период);
		ВходящиеДанные.Установить("Физлицо", Параметры.ВычетыСотрудниковпоНДФЛЛичный.Физлицо);
		ВходящиеДанные.Установить("КодВычетаЛичный", Параметры.ВычетыСотрудниковпоНДФЛЛичный.КодВычетаЛичный);
		ВыгрузитьПоПравилу(,, ВходящиеДанные,, "НДФЛСтандартныеВычетыФизлиц");
	КонецЦикла;
	
КонецЕсли;</ПослеВыгрузки>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.Работники</Источник>
					<Приемник>СправочникСсылка.ФизическиеЛица</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>2</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Если Параметры.ВыгружатьКоды = Да Тогда
	Значение = ПривестиНомерКДлине(Источник.Код, 10);
	
Иначе
	Отказ = 1 ;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Работники"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование>ИНН --&gt; ИНН</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="ИНН" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="ИНН" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Если Источник.ЭтоГруппа() = 1 Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>6</Код>
							<Наименование> --&gt; </Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
							<ПередОбработкойВыгрузки>Отказ = Источник.ЭтоГруппа();</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>8</Код>
								<Наименование>ДатаРождения --&gt; ДатаРождения</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="ДатаРождения" Вид="Реквизит" Тип="Дата"/>
								<Приемник Имя="ДатаРождения" Вид="Реквизит" Тип="Дата"/>
							</Свойство>
							<Свойство>
								<Код>9</Код>
								<Наименование>МестоРождения --&gt; МестоРождения</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="МестоРождения" Вид="Реквизит" Тип="Строка"/>
								<Приемник Имя="МестоРождения" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>10</Код>
								<Наименование>Пол --&gt; Пол</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="Пол" Вид="Реквизит" Тип="ПеречислениеСсылка.Пол"/>
								<Приемник Имя="Пол" Вид="Реквизит" Тип="ПеречислениеСсылка.ПолФизическихЛиц"/>
								<КодПравилаКонвертации>ПолФизическихЛиц                                  </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>11</Код>
								<Наименование>СтраховойНомерПФР --&gt; СтраховойНомерПФР</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="СтраховойНомерПФР" Вид="Реквизит" Тип="Строка"/>
								<Приемник Имя="СтраховойНомерПФР" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>12</Код>
								<Наименование> --&gt; КодИМНС</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="КодИМНС" Вид="Реквизит" Тип="Строка"/>
								<ПередВыгрузкой>Значение = Лев(Источник.ИНН, 4);</ПередВыгрузкой>
							</Свойство>
						</Группа>
						<Свойство>
							<Код>7</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>СотрудникиОрганизаций</Код>
					<Наименование>СправочникСсылка.Работники --&gt; СправочникСсылка.ФизическиеЛица</Наименование>
					<Порядок>200</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.Работники</Источник>
					<Приемник>СправочникСсылка.СотрудникиОрганизаций</Приемник>
					<Свойства>
						<Свойство Отключить="true">
							<Код>1</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Работники"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.СотрудникиОрганизаций"/>
							<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>6</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Если Источник.ЭтоГруппа() = 1 Тогда
	Отказ = 1;
	
Иначе
	Значение = "1";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>7</Код>
							<Наименование> --&gt; </Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
							<ПередОбработкойВыгрузки>Если Источник.ЭтоГруппа() = 1 Тогда
	Отказ = 1;
КонецЕсли;</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>8</Код>
								<Наименование> --&gt; Актуальность</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Актуальность" Вид="Реквизит" Тип="Булево"/>
								<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>9</Код>
								<Наименование> --&gt; ВидЗанятости</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ВидЗанятости" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыЗанятостиВОрганизации"/>
								<ПередВыгрузкой>Значение = "ОсновноеМестоРаботы";</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>10</Код>
								<Наименование> --&gt; Физлицо</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Физлицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
								<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
								<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ИндивидуальныйПредприниматель</Код>
					<Наименование> --&gt; СправочникСсылка.ФизическиеЛица</Наименование>
					<Порядок>250</Порядок>
					<ПослеВыгрузки>ПолноеИмя = Константа.ФИО;
ПозицияПервогоПробела = Найти(ПолноеИмя, " ");
Если ПозицияПервогоПробела &lt;&gt; 0 Тогда
	Фамилия = Лев(ПолноеИмя, ПозицияПервогоПробела);
	ИмяОтчество = Сред(ПолноеИмя, ПозицияПервогоПробела+1);
	ИмяОтчество = СокрЛ(ИмяОтчество);
	Имя = Лев(ИмяОтчество, 1)+".";
	
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
	ВходящиеДанные.Установить("Фамилия", Фамилия);
	ВходящиеДанные.Установить("Имя", ИмяОтчество);
	ВходящиеДанные.Установить("Отчество", "");
	
	ПозицияВторогоПробела = Найти(ИмяОтчество, " ");
	Если ПозицияВторогоПробела &lt;&gt; 0 Тогда
		Отчество = Сред(ИмяОтчество, ПозицияВторогоПробела+1);
		Отчество = СокрЛ(Отчество);
		
		ВходящиеДанные.Установить("Имя", Лев(ИмяОтчество, ПозицияВторогоПробела));
		ВходящиеДанные.Установить("Отчество", Отчество);
	КонецЕсли;
	
	ВыгрузитьПоПравилу(Источник,, ВходящиеДанные,, "ФИО_ИП");
КонецЕсли;</ПослеВыгрузки>
					<ПослеЗагрузки>Объект.Записать();</ПослеЗагрузки>
					<Приемник>СправочникСсылка.ФизическиеЛица</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование> --&gt; Наименование</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Значение = Константа.ФИО;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование> --&gt; ИНН</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИНН" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Значение = Константа.ИНН;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование> --&gt; КодИМНС</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КодИМНС" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Значение = Константа.КодИМНС;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование> --&gt; ДатаРождения</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаРождения" Вид="Реквизит" Тип="Дата"/>
							<ПередВыгрузкой>Значение = Константа.ДатаРождения;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование> --&gt; Пол</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Пол" Вид="Реквизит" Тип="ПеречислениеСсылка.ПолФизическихЛиц"/>
							<КодПравилаКонвертации>ПолФизическихЛиц                                  </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = Константа.Пол;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; СтраховойНомерПФР</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтраховойНомерПФР" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>СправочникНалогов = СоздатьОбъект("Справочник.НалогиИОтчисления");
		
СправочникНалогов.ВыбратьЭлементы();	
Если СправочникНалогов.НайтиПоКоду("ПФР_страх") = 1 Тогда
	Значение = СправочникНалогов.РегНомер;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; МестоРождения</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="МестоРождения" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Значение = Константа.МестоРождения;</ПередВыгрузкой>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>Контрагенты</Код>
					<Наименование>СправочникСсылка.Контрагенты --&gt; СправочникСсылка.Контрагенты</Наименование>
					<Порядок>300</Порядок>
					<ПередВыгрузкой>Если Источник.ЭтоГруппа() = 0 Тогда
	ВыгрузитьПоПравилу(Источник,,,, "ТелефоныКонтрагента");
	ВыгрузитьПоПравилу(Источник,,,, "ЮридическийАдресКонтрагента");
	ВыгрузитьПоПравилу(Источник,,,, "ФактическийАдресКонтрагента");	
КонецЕсли;</ПередВыгрузкой>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.Контрагенты</Источник>
					<Приемник>СправочникСсылка.Контрагенты</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>7</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>2</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Если Параметры.ВыгружатьКоды = Да Тогда
	Значение = ПривестиНомерКДлине(Источник.Код, Параметры.ДлинаКода);
	
Иначе
	Отказ = 1 ;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>6</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>ИНН --&gt; ИНН</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="ИНН" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="ИНН" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Если Источник.ЭтоГруппа() = 0 Тогда
	Значение = ?(СтрДлина(СокрЛП(Источник.ИНН)) &gt; 12, Лев(СокрЛП(Источник.ИНН), 10), СокрЛП(Источник.ИНН));
	
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>8</Код>
							<Наименование> --&gt; КПП</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КПП" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Если Источник.ЭтоГруппа() = 0 Тогда
	Значение = ?(СтрДлина(СокрЛП(Источник.ИНН)) &gt; 12, СокрЛП(Сред(Источник.ИНН, 12, 9)), "");
	
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>9</Код>
							<Наименование> --&gt; </Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
							<ПередОбработкойВыгрузки>Отказ = Источник.ЭтоГруппа();</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>10</Код>
								<Наименование>ПолнНаименование --&gt; НаименованиеПолное</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="ПолнНаименование" Вид="Реквизит" Тип="Строка"/>
								<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>11</Код>
								<Наименование>ОсновнойДоговор --&gt; ОсновнойДоговорКонтрагента</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="ОсновнойДоговор" Вид="Реквизит" Тип="СправочникСсылка.Договоры"/>
								<Приемник Имя="ОсновнойДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
								<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>12</Код>
								<Наименование>ВидКонтрагента --&gt; ЮрФизЛицо</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="ВидКонтрагента" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыКонтрагентов"/>
								<Приемник Имя="ЮрФизЛицо" Вид="Реквизит" Тип="ПеречислениеСсылка.ЮрФизЛицо"/>
								<КодПравилаКонвертации>ЮрФизЛицо                                         </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>13</Код>
								<Наименование>ДокументУдЛичность --&gt; ДокументУдостоверяющийЛичность</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="ДокументУдЛичность" Вид="Реквизит" Тип="Строка"/>
								<Приемник Имя="ДокументУдостоверяющийЛичность" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>14</Код>
								<Наименование> --&gt; ГоловнойКонтрагент</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ГоловнойКонтрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
								<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
								<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>15</Код>
								<Наименование>КодОКПО --&gt; КодПоОКПО</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="КодОКПО" Вид="Реквизит" Тип="Строка"/>
								<Приемник Имя="КодПоОКПО" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
						</Группа>
						<Свойство>
							<Код>5</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ДоговорыКонтрагентов</Код>
					<Наименование>СправочникСсылка.Договоры --&gt; СправочникСсылка.ДоговорыКонтрагентов</Наименование>
					<Порядок>350</Порядок>
					<ПередВыгрузкой>ВидДоговора = Параметры.ПараметрыАлгоритмов.Получить("ВидДоговора");
Если (ПустоеЗначение(Источник) = 0) и ( ВидДоговора &lt;&gt; "Прочее") Тогда
	Если Источник.ЭтоГруппа() = 0 Тогда
		НомСтр = 0;
		Если Параметры.ТаблицаДоговоров.НайтиЗначение(Источник, НомСтр, "Договор") = 0 Тогда
			Параметры.ТаблицаДоговоров.НоваяСтрока();
			Параметры.ТаблицаДоговоров.Договор = Источник;
			Параметры.ТаблицаДоговоров.ВидДоговора = ВидДоговора;
		КонецЕсли;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.Договоры</Источник>
					<Приемник>СправочникСсылка.ДоговорыКонтрагентов</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>6</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>2</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Если Параметры.ВыгружатьКоды = Да Тогда
	Значение = ПривестиНомерКДлине(Источник.Код, Параметры.ДлинаКода);
	
Иначе
	Отказ = 1 ;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>//Значение = Лев(Источник.Наименование, 50);</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Договоры"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>Владелец --&gt; Владелец</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="Владелец" Вид="Свойство" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="Владелец" Вид="Свойство" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true">
							<Код>7</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Если Источник.ЭтоГруппа() = 1 Тогда
	Отказ = 1;
	
Иначе
	Значение = "1";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>8</Код>
							<Наименование> --&gt; </Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
							<ПередОбработкойВыгрузки>Отказ = Источник.ЭтоГруппа();</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>9</Код>
								<Наименование>Валюта --&gt; ВалютаВзаиморасчетов</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="Валюта" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
								<Приемник Имя="ВалютаВзаиморасчетов" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
								<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>10</Код>
								<Наименование> --&gt; ВидДоговора</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ВидДоговора" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыДоговоровКонтрагентов"/>
								<ПередВыгрузкой>Если Параметры.ПараметрыАлгоритмов.Получить("ВидДоговора") &lt;&gt; "" Тогда
	Значение = Параметры.ПараметрыАлгоритмов.Получить("ВидДоговора");
Иначе
	Значение = "Прочее";
КонецЕсли;
</ПередВыгрузкой>
							</Свойство>
						</Группа>
						<Свойство>
							<Код>4</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ДоговорыКонтрагентовПоВидам</Код>
					<Наименование>СправочникСсылка.Договоры --&gt; СправочникСсылка.ДоговорыКонтрагентов</Наименование>
					<Порядок>400</Порядок>
					<ПриЗагрузке>//Если ОбъектНайден Тогда
//	Если НЕ Объект.ЭтоГруппа Тогда
//		Если Объект.ВидДоговора &lt;&gt; Перечисления.ВидыДоговоровКонтрагентов.Прочее Тогда
//			НеЗамещатьОбъект = Истина;
//		КонецЕсли;
//	КонецЕсли;
//КонецЕсли;</ПриЗагрузке>
					<Источник>СправочникСсылка.Договоры</Источник>
					<Приемник>СправочникСсылка.ДоговорыКонтрагентов</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>6</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Значение = Лев(Источник.Наименование, 50);</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Договоры"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>Владелец --&gt; Владелец</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Владелец" Вид="Свойство" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="Владелец" Вид="Свойство" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; ВидДоговора</Наименование>
							<Порядок>250</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДоговора" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыДоговоровКонтрагентов"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>8</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>НомераГТД</Код>
					<Наименование>СправочникСсылка.ГТД --&gt; СправочникСсылка.НомераГТД</Наименование>
					<Порядок>450</Порядок>
					<Источник>СправочникСсылка.ГТД</Источник>
					<Приемник>СправочникСсылка.НомераГТД</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование> --&gt; Код</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ОсновныеСредства</Код>
					<Наименование>СправочникСсылка.ОсновныеСредства --&gt; СправочникСсылка.ОсновныеСредства</Наименование>
					<Порядок>500</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.ОсновныеСредства</Источник>
					<Приемник>СправочникСсылка.ОсновныеСредства</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>8</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>2</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Если Параметры.ВыгружатьКоды = Да Тогда
	Значение = ПривестиНомерКДлине(Источник.Код, Параметры.ДлинаКода);
	
Иначе
	Отказ = 1 ;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>6</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ОсновныеСредства"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ОсновныеСредства"/>
							<КодПравилаКонвертации>ОсновныеСредства                                  </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Если Источник.ЭтоГруппа() = 1 Тогда
	Отказ = 1;
	
Иначе
	Значение = СокрЛП(Источник.Комментарий + " # ИНН организации: " + СокрЛП(Константа.ИНН) + "; инв. ном.: " + СокрЛП(Источник.Код) + " #");
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>9</Код>
							<Наименование> --&gt; </Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
							<ПередОбработкойВыгрузки>Отказ = Источник.ЭтоГруппа();</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>7</Код>
								<Наименование>ШифрПоЕНАОФ --&gt; ШифрПоЕНАОФ</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="ШифрПоЕНАОФ" Вид="Реквизит" Тип="СправочникСсылка.КлассификаторЕН"/>
								<Приемник Имя="ШифрПоЕНАОФ" Вид="Реквизит" Тип="СправочникСсылка.ЕдиныеНормыАмортизационныхОтчисленийОсновныхФондов"/>
								<КодПравилаКонвертации>ЕдиныеНормыАмортизационныхОтчисленийОсновныхФондов</КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>1</Код>
								<Наименование>АмортизационнаяГруппа --&gt; АмортизационнаяГруппа</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="АмортизационнаяГруппа" Вид="Реквизит" Тип="ПеречислениеСсылка.АмортизационныеГруппы"/>
								<Приемник Имя="АмортизационнаяГруппа" Вид="Реквизит" Тип="ПеречислениеСсылка.АмортизационныеГруппы"/>
								<КодПравилаКонвертации>АмортизационныеГруппы                             </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>10</Код>
								<Наименование>КодОКОФ --&gt; КодПоОКОФ</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="КодОКОФ" Вид="Реквизит" Тип="Строка"/>
								<Приемник Имя="КодПоОКОФ" Вид="Реквизит" Тип="СправочникСсылка.ОбщероссийскийКлассификаторОсновныхФондов"/>
							</Свойство>
						</Группа>
						<Свойство>
							<Код>5</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ПрочиеДоходы</Код>
					<Наименование>СправочникСсылка.ПрочиеДоходы --&gt; СправочникСсылка.ПрочиеДоходыИРасходы</Наименование>
					<Порядок>550</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.ПрочиеДоходы</Источник>
					<Приемник>СправочникСсылка.ПрочиеДоходыИРасходы</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>1</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Если Параметры.ВыгружатьКоды = Да Тогда
	Значение = ПривестиНомерКДлине(Источник.Код, Параметры.ДлинаКода);
	
Иначе
	Отказ = 1 ;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ПрочиеДоходы"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ПрочиеДоходыИРасходы"/>
							<КодПравилаКонвертации>ПрочиеДоходы                                      </КодПравилаКонвертации>
						</Свойство>
						<Группа>
							<Код>8</Код>
							<Наименование> --&gt; </Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
							<ПередОбработкойВыгрузки>Отказ = Источник.ЭтоГруппа();</ПередОбработкойВыгрузки>
							<Свойство Поиск="true">
								<Код>6</Код>
								<Наименование> --&gt; ВидПрочихДоходовИРасходов</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ВидПрочихДоходовИРасходов" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыПрочихДоходовИРасходов"/>
								<ПередВыгрузкой>Значение = "ПрочиеВнереализационныеДоходыРасходы";</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>7</Код>
								<Наименование> --&gt; ВидДеятельностиДляНалоговогоУчетаЗатрат</Наименование>
								<Порядок>350</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ВидДеятельностиДляНалоговогоУчетаЗатрат" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыДеятельностиДляНалоговогоУчетаЗатрат"/>
								<ПередВыгрузкой>Значение = "ПредпринимательскаяДеятельностьНеОблагаемаяЕНВД";</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>9</Код>
								<Наименование>ВидДохода --&gt; ПринятиеКналоговомуУчету</Наименование>
								<Порядок>400</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ПринятиеКналоговомуУчету" Вид="Реквизит" Тип="Булево"/>
								<ПередВыгрузкой>Если Источник.ВидДохода = Перечисление.ВидыПрочихДоходов.Принимаемые Тогда
	Значение = 1;
Иначе
	Значение = 0
КонецЕсли;
</ПередВыгрузкой>
							</Свойство>
						</Группа>
						<Свойство>
							<Код>3</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ПрочиеРасходы</Код>
					<Наименование>СправочникСсылка.ПрочиеРасходы --&gt; СправочникСсылка.ПрочиеДоходыИРасходы</Наименование>
					<Порядок>600</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.ПрочиеРасходы</Источник>
					<Приемник>СправочникСсылка.ПрочиеДоходыИРасходы</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>1</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Если Параметры.ВыгружатьКоды = Да Тогда
	Значение = ПривестиНомерКДлине(Источник.Код, Параметры.ДлинаКода);
	
Иначе
	Отказ = 1 ;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ПрочиеРасходы"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ПрочиеДоходыИРасходы"/>
							<КодПравилаКонвертации>ПрочиеРасходы                                     </КодПравилаКонвертации>
						</Свойство>
						<Группа>
							<Код>6</Код>
							<Наименование> --&gt; </Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
							<ПередОбработкойВыгрузки>Отказ = Источник.ЭтоГруппа();</ПередОбработкойВыгрузки>
							<Свойство Поиск="true">
								<Код>7</Код>
								<Наименование> --&gt; ВидПрочихДоходовИРасходов</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="ВидРасхода" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыПрочихРасходов"/>
								<Приемник Имя="ВидПрочихДоходовИРасходов" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыПрочихДоходовИРасходов"/>
								<КодПравилаКонвертации>ВидыПрочихДоходовИРасходов                        </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>8</Код>
								<Наименование> --&gt; ВидДеятельностиДляНалоговогоУчетаЗатрат</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ВидДеятельностиДляНалоговогоУчетаЗатрат" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыДеятельностиДляНалоговогоУчетаЗатрат"/>
								<ПередВыгрузкой>Значение = "ПредпринимательскаяДеятельностьНеОблагаемаяЕНВД";</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>9</Код>
								<Наименование>ВидРасхода --&gt; ПринятиеКналоговомуУчету</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ПринятиеКналоговомуУчету" Вид="Реквизит" Тип="Булево"/>
								<ПередВыгрузкой>Если Источник.ВидРасхода = Перечисление.ВидыПрочихРасходов.НеПринимаемые Тогда
	Значение = 0;
Иначе
	Значение = 1
КонецЕсли;
</ПередВыгрузкой>
							</Свойство>
						</Группа>
						<Свойство>
							<Код>3</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>РасходыБудущихПериодов</Код>
					<Наименование>СправочникСсылка.ВидыРасходовБудущихПериодов --&gt; СправочникСсылка.РасходыБудущихПериодов</Наименование>
					<Порядок>650</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.ВидыРасходовБудущихПериодов</Источник>
					<Приемник>СправочникСсылка.РасходыБудущихПериодов</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>1</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Если Параметры.ВыгружатьКоды = Да Тогда
	Значение = ПривестиНомерКДлине(Источник.Код, Параметры.ДлинаКода);
	
Иначе
	Отказ = 1 ;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ВидыРасходовБудущихПериодов"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.РасходыБудущихПериодов"/>
							<КодПравилаКонвертации>РасходыБудущихПериодов                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; СпособПризнанияРасходов</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособПризнанияРасходов" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыПризнанияРасходов"/>
							<ПередВыгрузкой>Если Источник.ЭтоГруппа() = 0 Тогда
	Значение = "ВОсобомПорядке";
Иначе
	Отказ = 1;
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>НематериальныеАктивы</Код>
					<Наименование>СправочникСсылка.НематериальныеАктивы --&gt; СправочникСсылка.НематериальныеАктивы</Наименование>
					<Порядок>700</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.НематериальныеАктивы</Источник>
					<Приемник>СправочникСсылка.НематериальныеАктивы</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>6</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>2</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Если Параметры.ВыгружатьКоды = Да Тогда
	Значение = ПривестиНомерКДлине(Источник.Код, Параметры.ДлинаКода);
	
Иначе
	Отказ = 1 ;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.НематериальныеАктивы"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.НематериальныеАктивы"/>
							<КодПравилаКонвертации>НематериальныеАктивы                              </КодПравилаКонвертации>
						</Свойство>
						<Группа>
							<Код>9</Код>
							<Наименование> --&gt; </Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
							<ПередОбработкойВыгрузки>Отказ = Источник.ЭтоГруппа();</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>7</Код>
								<Наименование> --&gt; ВидОбъектаУчета</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ВидОбъектаУчета" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыОбъектовУчетаНМА"/>
								<ПередВыгрузкой>Значение = "НематериальныйАктив";</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>1</Код>
								<Наименование>АмортизационнаяГруппа --&gt; АмортизационнаяГруппа</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="АмортизационнаяГруппа" Вид="Реквизит" Тип="ПеречислениеСсылка.АмортизационныеГруппы"/>
								<Приемник Имя="АмортизационнаяГруппа" Вид="Реквизит" Тип="ПеречислениеСсылка.АмортизационныеГруппы"/>
								<КодПравилаКонвертации>АмортизационныеГруппы                             </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>10</Код>
								<Наименование> --&gt; ВидНМА</Наименование>
								<Порядок>350</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ВидНМА" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыНМА"/>
								<ПередВыгрузкой>Значение = "ПрочиеНематериальныеАктивы";</ПередВыгрузкой>
							</Свойство>
						</Группа>
						<Свойство Поиск="true">
							<Код>8</Код>
							<Наименование>Комментарий --&gt; ПрочиеСведения</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="ПрочиеСведения" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Если Источник.ЭтоГруппа() = 1 Тогда
	Отказ = 1;
	
Иначе
	Значение = СокрЛП(Источник.Комментарий + " # ИНН организации: " + СокрЛП(Константа.ИНН) + "; инв. ном.: " + СокрЛП(Источник.Код) + " #");
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>Склады</Код>
					<Наименование>СправочникСсылка.МестаХранения --&gt; СправочникСсылка.Склады</Наименование>
					<Порядок>750</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.МестаХранения</Источник>
					<Приемник>СправочникСсылка.Склады</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>1</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Если Параметры.ВыгружатьКоды = Да Тогда
	Значение = ПривестиНомерКДлине(Источник.Код, Параметры.ДлинаКода);
	
Иначе
	Отказ = 1 ;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование> --&gt; ЭтоГруппа</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование> --&gt; ВидСклада</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидСклада" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыСкладов"/>
							<ПередВыгрузкой>Значение = "Оптовый";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>ТипЦен --&gt; ТипЦенРозничнойТорговли</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="ТипЦен" Вид="Реквизит" Тип="СправочникСсылка.ТипыЦен"/>
							<Приемник Имя="ТипЦенРозничнойТорговли" Вид="Реквизит" Тип="СправочникСсылка.ТипыЦенНоменклатуры"/>
							<КодПравилаКонвертации>ТипыЦенНоменклатурыСправочник                     </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>СкладПоУмолчанию</Код>
					<Наименование> --&gt; СправочникСсылка.Склады</Наименование>
					<Порядок>800</Порядок>
					<Приемник>СправочникСсылка.Склады</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование> --&gt; Наименование</Наименование>
							<Порядок>50</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование> --&gt; ВидСклада</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидСклада" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыСкладов"/>
							<ПередВыгрузкой>Значение = "Оптовый";</ПередВыгрузкой>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>Номенклатура</Код>
					<Наименование>СправочникСсылка.Номенклатура --&gt; СправочникСсылка.Номенклатура</Наименование>
					<Порядок>850</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.Номенклатура</Источник>
					<Приемник>СправочникСсылка.Номенклатура</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>8</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>1</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Если Параметры.ВыгружатьКоды = Да Тогда
	Значение = ПривестиНомерКДлине(Источник.Код, Параметры.ДлинаКода);
	
Иначе
	Отказ = 1 ;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Номенклатура"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Номенклатура"/>
							<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>ИмяПКО = "";
Если Источник.ЭтоГруппа() = 0 Тогда
	Если Источник.Вид() = "Номенклатура" Тогда
		ТипНоменклатуры = Источник.ВидМатериальногоРесурса;
	Иначе
		ТипНоменклатуры = Источник.Родитель;
	КонецЕсли;
Иначе
	Если Источник.Вид() = "Номенклатура" Тогда
		ИмяПКО = "Номенклатура";
	КонецЕсли;
	ТипНоменклатуры = Источник.Родитель;
КонецЕсли;

Если ПустоеЗначение(Источник.Родитель) = 1 Тогда
	
	ИмяГруппы = "Материалы";
	Если Источник.ЭтоГруппа() = 1 Тогда
		ИмяГруппы = Источник.Наименование;
	ИначеЕсли ТипНоменклатуры = Перечисление.ВидыМатериальныхРесурсов.Продукция Тогда
		ИмяГруппы = "Продукция";
	ИначеЕсли ТипНоменклатуры = Перечисление.ВидыМатериальныхРесурсов.Товар Тогда
		ИмяГруппы = "Товары";
	ИначеЕсли ТипНоменклатуры = Перечисление.ВидыМатериальныхРесурсов.Услуга Тогда
		ИмяГруппы = "Услуги";
	ИначеЕсли ТипНоменклатуры = Перечисление.ВидыМатериальныхРесурсов.Полуфабрикат Тогда
		ИмяГруппы = "Полуфабрикаты";
	ИначеЕсли ТипНоменклатуры = Перечисление.ВидыМатериальныхРесурсов.ВнеоборотныйАктив Тогда
		ИмяГруппы = "Оборудование (объекты основных средств)";
	Иначе
		ИмяГруппы = "Номенклатура";
	КонецЕсли;
	
	Если ИмяПКО = "" Тогда
		ИмяПКО = "ГруппаНоменклатуры";
	КонецЕсли;
	Значение = Источник;
Иначе
	
	
	ИмяГруппы = Источник.Родитель.Наименование;
	Если ИмяПКО = "" Тогда
		ИмяПКО = "РодительНоменклатуры";
	КонецЕсли;
	Значение = Источник;
	
КонецЕсли;

ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
ИсходящиеДанные.Установить("ТипНоменклатуры", ТипНоменклатуры);
ИсходящиеДанные.Установить("Наименование", ИмяГруппы);
</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>9</Код>
							<Наименование> --&gt; </Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
							<ПередОбработкойВыгрузки>Отказ  = Источник.ЭтоГруппа();
Если Источник.Вид() &lt;&gt; "Номенклатура" Тогда
	Отказ = 1;
КонецЕсли;
</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>10</Код>
								<Наименование>ПолнНаименование --&gt; НаименованиеПолное</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="ПолнНаименование" Вид="Реквизит" Тип="Строка"/>
								<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
								<ПередВыгрузкой>Если ПустоеЗначение(Источник.ПолнНаименование) = 1 Тогда
	Значение = Источник.Наименование;
Иначе
	Значение = СокрЛП(Источник.ПолнНаименование);
КонецЕсли;
</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>11</Код>
								<Наименование> --&gt; НоменклатурнаяГруппа</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="НоменклатурнаяГруппа" Вид="Реквизит" Тип="СправочникСсылка.НоменклатурныеГруппы"/>
								<КодПравилаКонвертации>НоменклатурныеГруппы                              </КодПравилаКонвертации>
								<ПередВыгрузкой>НоменклатурнаяГруппа = ?(ПустоеЗначение(Источник.ВидДеятельности) = 1, Параметры.ОсновнаяНоменклатурнаяГруппа, СокрЛП(Источник.ВидДеятельности.Наименование));
Значение = НоменклатурнаяГруппа;
ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
ИсходящиеДанные.Установить("Наименование", Значение);
</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>12</Код>
								<Наименование>ЕдиницаИзмерения --&gt; БазоваяЕдиницаИзмерения</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="ЕдиницаИзмерения" Вид="Реквизит" Тип="СправочникСсылка.ЕдиницыИзмерений"/>
								<Приемник Имя="БазоваяЕдиницаИзмерения" Вид="Реквизит" Тип="СправочникСсылка.КлассификаторЕдиницИзмерения"/>
								<КодПравилаКонвертации>КлассификаторЕдиницИзмерения                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>6</Код>
								<Наименование>СтавкаНДС --&gt; СтавкаНДС</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="СтавкаНДС" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
								<Приемник Имя="СтавкаНДС" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
								<КодПравилаКонвертации>СтавкиНДС                                         </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>13</Код>
								<Наименование>ВидМатериальногоРесурса --&gt; Услуга</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="ВидМатериальногоРесурса" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыМатериальныхРесурсов"/>
								<Приемник Имя="Услуга" Вид="Реквизит" Тип="Булево"/>
								<ПередВыгрузкой>Если Источник.ВидМатериальногоРесурса = Перечисление.ВидыМатериальныхРесурсов.Услуга Тогда
	Значение = 1;
Иначе
	Значение = 0;
КонецЕсли;
</ПередВыгрузкой>
							</Свойство>
						</Группа>
						<Свойство>
							<Код>4</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
			</Группа>
			<Группа>
				<Код>Перечисления</Код>
				<Наименование>Перечисления                                      </Наименование>
				<Порядок>100</Порядок>
				<Правило>
					<Код>ПорядокПризнанияМатериальныхРасходов</Код>
					<Наименование>ПеречислениеСсылка.ПорядокПризнанияМатериальныхРасходов --&gt; ПеречислениеСсылка.ПорядокПризнанияМатер</Наименование>
					<Порядок>50</Порядок>
					<Источник>ПеречислениеСсылка.ПорядокПризнанияМатериальныхРасходов</Источник>
					<Приемник>ПеречислениеСсылка.ПорядокПризнанияМатериальныхРасходов</Приемник>
					<Свойства/>
					<Значения>
						<Значение>
							<Код>1</Код>
							<Наименование>ПоОплатеПоставщику --&gt; ПоОплатеПоставщику</Наименование>
							<Порядок>50</Порядок>
							<Источник>ПоОплатеПоставщику</Источник>
							<Приемник>ПоОплатеПоставщику</Приемник>
						</Значение>
						<Значение>
							<Код>2</Код>
							<Наименование>ПоФактуСписания --&gt; ПоФактуСписания</Наименование>
							<Порядок>100</Порядок>
							<Источник>ПоФактуСписания</Источник>
							<Приемник>ПоФактуСписания</Приемник>
						</Значение>
					</Значения>
				</Правило>
				<Правило>
					<Код>ПорядокПризнанияРасходовПоТоварам</Код>
					<Наименование>ПеречислениеСсылка.ПорядокПризнанияРасходовПоТоварам --&gt; ПеречислениеСсылка.ПорядокПризнанияРасходов</Наименование>
					<Порядок>100</Порядок>
					<Источник>ПеречислениеСсылка.ПорядокПризнанияРасходовПоТоварам</Источник>
					<Приемник>ПеречислениеСсылка.ПорядокПризнанияРасходовПоТоварам</Приемник>
					<Свойства/>
					<Значения>
						<Значение>
							<Код>1</Код>
							<Наименование>ПоОплатеПоставщику --&gt; ПоОплатеПоставщику</Наименование>
							<Порядок>50</Порядок>
							<Источник>ПоОплатеПоставщику</Источник>
							<Приемник>ПоОплатеПоставщику</Приемник>
						</Значение>
						<Значение>
							<Код>2</Код>
							<Наименование>ПоФактуПолученияДохода --&gt; ПоФактуПолученияДохода</Наименование>
							<Порядок>100</Порядок>
							<Источник>ПоФактуПолученияДохода</Источник>
							<Приемник>ПоФактуПолученияДохода</Приемник>
						</Значение>
						<Значение>
							<Код>3</Код>
							<Наименование>ПоФактуРеализации --&gt; ПоФактуРеализации</Наименование>
							<Порядок>150</Порядок>
							<Источник>ПоФактуРеализации</Источник>
							<Приемник>ПоФактуРеализации</Приемник>
						</Значение>
					</Значения>
				</Правило>
				<Правило>
					<Код>ПорядокПризнанияРасходовПоНДС</Код>
					<Наименование>ПеречислениеСсылка.ПорядокПризнанияРасходовПоНДС --&gt; ПеречислениеСсылка.ПорядокПризнанияРасходовПоНД</Наименование>
					<Порядок>150</Порядок>
					<Источник>ПеречислениеСсылка.ПорядокПризнанияРасходовПоНДС</Источник>
					<Приемник>ПеречислениеСсылка.ПорядокПризнанияРасходовПоНДС</Приемник>
					<Свойства/>
					<Значения>
						<Значение>
							<Код>1</Код>
							<Наименование>ВключатьВСтоимость --&gt; ВключатьВСтоимость</Наименование>
							<Порядок>50</Порядок>
							<Источник>ВключатьВСтоимость</Источник>
							<Приемник>ВключатьВСтоимость</Приемник>
						</Значение>
						<Значение>
							<Код>2</Код>
							<Наименование>ПоОплатеПоставщику --&gt; ПоОплатеПоставщику</Наименование>
							<Порядок>100</Порядок>
							<Источник>ПоОплатеПоставщику</Источник>
							<Приемник>ПоОплатеПоставщику</Приемник>
						</Значение>
					</Значения>
				</Правило>
				<Правило>
					<Код>ОбъектыНалогообложенияПоУСН</Код>
					<Наименование>ПеречислениеСсылка.ВариантОбъектаНалогообложения --&gt; ПеречислениеСсылка.ОбъектыНалогообложенияПоУСН</Наименование>
					<Порядок>200</Порядок>
					<Источник>ПеречислениеСсылка.ВариантОбъектаНалогообложения</Источник>
					<Приемник>ПеречислениеСсылка.ОбъектыНалогообложенияПоУСН</Приемник>
					<Свойства/>
					<Значения>
						<Значение>
							<Код>1</Код>
							<Наименование>Доходы --&gt; Доходы</Наименование>
							<Порядок>50</Порядок>
							<Источник>Доходы</Источник>
							<Приемник>Доходы</Приемник>
						</Значение>
						<Значение>
							<Код>2</Код>
							<Наименование>ДоходыМинусРасходы --&gt; ДоходыМинусРасходы</Наименование>
							<Порядок>100</Порядок>
							<Источник>ДоходыМинусРасходы</Источник>
							<Приемник>ДоходыМинусРасходы</Приемник>
						</Значение>
					</Значения>
				</Правило>
				<Правило>
					<Код>ЮрФизЛицо</Код>
					<Наименование>ПеречислениеСсылка.ВидыКонтрагентов --&gt; ПеречислениеСсылка.ЮрФизЛицо</Наименование>
					<Порядок>250</Порядок>
					<ПередВыгрузкой>Источник = Источник.Идентификатор();</ПередВыгрузкой>
					<Источник>ПеречислениеСсылка.ВидыКонтрагентов</Источник>
					<Приемник>ПеречислениеСсылка.ЮрФизЛицо</Приемник>
					<Свойства/>
					<Значения>
						<Значение>
							<Код>1</Код>
							<Наименование>Организация --&gt; ЮрЛицо</Наименование>
							<Порядок>50</Порядок>
							<Источник>Организация</Источник>
							<Приемник>ЮрЛицо</Приемник>
						</Значение>
						<Значение>
							<Код>2</Код>
							<Наименование>ЧастноеЛицо --&gt; ФизЛицо</Наименование>
							<Порядок>100</Порядок>
							<Источник>ЧастноеЛицо</Источник>
							<Приемник>ФизЛицо</Приемник>
						</Значение>
					</Значения>
				</Правило>
				<Правило>
					<Код>СтавкиНДС</Код>
					<Наименование>ПеречислениеСсылка.СтавкиНДС --&gt; ПеречислениеСсылка.СтавкиНДС</Наименование>
					<Порядок>300</Порядок>
					<Источник>ПеречислениеСсылка.СтавкиНДС</Источник>
					<Приемник>ПеречислениеСсылка.СтавкиНДС</Приемник>
					<Свойства/>
					<Значения>
						<Значение>
							<Код>1</Код>
							<Наименование>БезНДС --&gt; БезНДС</Наименование>
							<Порядок>50</Порядок>
							<Источник>БезНДС</Источник>
							<Приемник>БезНДС</Приемник>
						</Значение>
						<Значение>
							<Код>2</Код>
							<Наименование>НДС0 --&gt; НДС0</Наименование>
							<Порядок>100</Порядок>
							<Источник>НДС0</Источник>
							<Приемник>НДС0</Приемник>
						</Значение>
						<Значение>
							<Код>3</Код>
							<Наименование>НДС10 --&gt; НДС10</Наименование>
							<Порядок>150</Порядок>
							<Источник>НДС10</Источник>
							<Приемник>НДС10</Приемник>
						</Значение>
						<Значение>
							<Код>4</Код>
							<Наименование>НДС10_110 --&gt; НДС10_110</Наименование>
							<Порядок>200</Порядок>
							<Источник>НДС10_110</Источник>
							<Приемник>НДС10_110</Приемник>
						</Значение>
						<Значение>
							<Код>5</Код>
							<Наименование>НДС18 --&gt; НДС18</Наименование>
							<Порядок>250</Порядок>
							<Источник>НДС18</Источник>
							<Приемник>НДС18</Приемник>
						</Значение>
						<Значение>
							<Код>6</Код>
							<Наименование>НДС18_118 --&gt; НДС18_118</Наименование>
							<Порядок>300</Порядок>
							<Источник>НДС18_118</Источник>
							<Приемник>НДС18_118</Приемник>
						</Значение>
						<Значение>
							<Код>7</Код>
							<Наименование>НДС20 --&gt; НДС20</Наименование>
							<Порядок>350</Порядок>
							<Источник>НДС20</Источник>
							<Приемник>НДС20</Приемник>
						</Значение>
						<Значение>
							<Код>8</Код>
							<Наименование>НДС20_120 --&gt; НДС20_120</Наименование>
							<Порядок>400</Порядок>
							<Источник>НДС20_120</Источник>
							<Приемник>НДС20_120</Приемник>
						</Значение>
					</Значения>
				</Правило>
				<Правило>
					<Код>ВидыМПЗ</Код>
					<Наименование>ПеречислениеСсылка.ВидыМатериальныхРесурсов --&gt; ПеречислениеСсылка.ВидыМПЗ</Наименование>
					<Порядок>350</Порядок>
					<Источник>ПеречислениеСсылка.ВидыМатериальныхРесурсов</Источник>
					<Приемник>ПеречислениеСсылка.ВидыМПЗ</Приемник>
					<Свойства/>
					<Значения>
						<Значение>
							<Код>3</Код>
							<Наименование>ВнеоборотныйАктив --&gt; КапитальныеВложения</Наименование>
							<Порядок>50</Порядок>
							<Источник>ВнеоборотныйАктив</Источник>
							<Приемник>КапитальныеВложения</Приемник>
						</Значение>
						<Значение>
							<Код>4</Код>
							<Наименование>ВспомогательныйМатериал --&gt; ВспомогательныеМатериа</Наименование>
							<Порядок>100</Порядок>
							<Источник>ВспомогательныйМатериал</Источник>
							<Приемник>ВспомогательныеМатериалы</Приемник>
						</Значение>
						<Значение>
							<Код>5</Код>
							<Наименование>ИныеМатериальныеРасходы --&gt; ИныеМатериальныеРасход</Наименование>
							<Порядок>150</Порядок>
							<Источник>ИныеМатериальныеРасходы</Источник>
							<Приемник>ИныеМатериальныеРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>6</Код>
							<Наименование>ИныеРасходыРаспределяемые --&gt; ИныеМатериальныеРасх</Наименование>
							<Порядок>200</Порядок>
							<Источник>ИныеРасходыРаспределяемые</Источник>
							<Приемник>ИныеМатериальныеРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>7</Код>
							<Наименование>Материал --&gt; Материалы</Наименование>
							<Порядок>250</Порядок>
							<Источник>Материал</Источник>
							<Приемник>Материалы</Приемник>
						</Значение>
						<Значение>
							<Код>8</Код>
							<Наименование>МБП --&gt; Материалы</Наименование>
							<Порядок>300</Порядок>
							<Источник>МБП</Источник>
							<Приемник>Материалы</Приемник>
						</Значение>
						<Значение>
							<Код>9</Код>
							<Наименование>НематериальныйАктив --&gt; НМА</Наименование>
							<Порядок>350</Порядок>
							<Источник>НематериальныйАктив</Источник>
							<Приемник>НМА</Приемник>
						</Значение>
						<Значение>
							<Код>10</Код>
							<Наименование>ОсновноеСредство --&gt; ОС</Наименование>
							<Порядок>400</Порядок>
							<Источник>ОсновноеСредство</Источник>
							<Приемник>ОС</Приемник>
						</Значение>
						<Значение>
							<Код>11</Код>
							<Наименование>Полуфабрикат --&gt; Полуфабрикаты</Наименование>
							<Порядок>450</Порядок>
							<Источник>Полуфабрикат</Источник>
							<Приемник>Полуфабрикаты</Приемник>
						</Значение>
						<Значение>
							<Код>12</Код>
							<Наименование>Продукция --&gt; Продукция</Наименование>
							<Порядок>500</Порядок>
							<Источник>Продукция</Источник>
							<Приемник>Продукция</Приемник>
						</Значение>
						<Значение>
							<Код>13</Код>
							<Наименование>Прочее --&gt; ПрочиеРасходы</Наименование>
							<Порядок>550</Порядок>
							<Источник>Прочее</Источник>
							<Приемник>ПрочиеРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>14</Код>
							<Наименование>РасходыПодлежащиеРаспределению --&gt; ИныеМатериальны</Наименование>
							<Порядок>600</Порядок>
							<Источник>РасходыПодлежащиеРаспределению</Источник>
							<Приемник>ИныеМатериальныеРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>15</Код>
							<Наименование>Товар --&gt; Товары</Наименование>
							<Порядок>650</Порядок>
							<Источник>Товар</Источник>
							<Приемник>Товары</Приемник>
						</Значение>
						<Значение>
							<Код>16</Код>
							<Наименование>Услуга --&gt; ПрочиеРасходы</Наименование>
							<Порядок>700</Порядок>
							<Источник>Услуга</Источник>
							<Приемник>ПрочиеРасходы</Приемник>
						</Значение>
					</Значения>
				</Правило>
				<Правило>
					<Код>ВидыПрочихДоходовИРасходов</Код>
					<Наименование>ПеречислениеСсылка.ВидыПрочихРасходов --&gt; ПеречислениеСсылка.ВидыПрочихДоходовИРасходов</Наименование>
					<Порядок>400</Порядок>
					<Источник>ПеречислениеСсылка.ВидыПрочихРасходов</Источник>
					<Приемник>ПеречислениеСсылка.ВидыПрочихДоходовИРасходов</Приемник>
					<Свойства/>
					<Значения>
						<Значение>
							<Код>1</Код>
							<Наименование>АрендныеПлатежи --&gt; ДоходыРасходыСвязанныеСоСдачей</Наименование>
							<Порядок>50</Порядок>
							<Источник>АрендныеПлатежи</Источник>
							<Приемник>ДоходыРасходыСвязанныеСоСдачейИмуществаВАренду</Приемник>
						</Значение>
						<Значение>
							<Код>2</Код>
							<Наименование>ГарантийныйРемонтИОбслуживание --&gt; ПрочиеВнереализ</Наименование>
							<Порядок>100</Порядок>
							<Источник>ГарантийныйРемонтИОбслуживание</Источник>
							<Приемник>ПрочиеВнереализационныеДоходыРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>3</Код>
							<Наименование>ДругиеРасходы --&gt; ПрочиеВнереализационныеДоходыРас</Наименование>
							<Порядок>150</Порядок>
							<Источник>ДругиеРасходы</Источник>
							<Приемник>ПрочиеВнереализационныеДоходыРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>4</Код>
							<Наименование>ИзучениеКонъюнктурыРынка --&gt; ПрочиеВнереализационн</Наименование>
							<Порядок>200</Порядок>
							<Источник>ИзучениеКонъюнктурыРынка</Источник>
							<Приемник>ПрочиеВнереализационныеДоходыРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>5</Код>
							<Наименование>ИнформационныеУслуги --&gt; ПрочиеВнереализационныеДо</Наименование>
							<Порядок>250</Порядок>
							<Источник>ИнформационныеУслуги</Источник>
							<Приемник>ПрочиеВнереализационныеДоходыРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>6</Код>
							<Наименование>КанцелярскиеТовары --&gt; ПрочиеВнереализационныеДохо</Наименование>
							<Порядок>300</Порядок>
							<Источник>КанцелярскиеТовары</Источник>
							<Приемник>ПрочиеВнереализационныеДоходыРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>7</Код>
							<Наименование>КомиссионныеСборы --&gt; ПрочиеВнереализационныеДоход</Наименование>
							<Порядок>350</Порядок>
							<Источник>КомиссионныеСборы</Источник>
							<Приемник>ПрочиеВнереализационныеДоходыРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>8</Код>
							<Наименование>КонсультационныеУслуги --&gt; ПрочиеВнереализационные</Наименование>
							<Порядок>400</Порядок>
							<Источник>КонсультационныеУслуги</Источник>
							<Приемник>ПрочиеВнереализационныеДоходыРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>9</Код>
							<Наименование>НаборРаботников --&gt; ПрочиеВнереализационныеДоходыР</Наименование>
							<Порядок>450</Порядок>
							<Источник>НаборРаботников</Источник>
							<Приемник>ПрочиеВнереализационныеДоходыРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>10</Код>
							<Наименование>НалогиИСборы --&gt; ПрочиеВнереализационныеДоходыРасх</Наименование>
							<Порядок>500</Порядок>
							<Источник>НалогиИСборы</Источник>
							<Приемник>ПрочиеВнереализационныеДоходыРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>11</Код>
							<Наименование>НеПринимаемые --&gt; ПрочиеВнереализационныеДоходыРас</Наименование>
							<Порядок>550</Порядок>
							<Источник>НеПринимаемые</Источник>
							<Приемник>ПрочиеВнереализационныеДоходыРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>12</Код>
							<Наименование>ОхранаИмущества --&gt; ПрочиеВнереализационныеДоходыР</Наименование>
							<Порядок>600</Порядок>
							<Источник>ОхранаИмущества</Источник>
							<Приемник>ПрочиеВнереализационныеДоходыРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>13</Код>
							<Наименование>ПлатаНотариусу --&gt; ПрочиеВнереализационныеДоходыРа</Наименование>
							<Порядок>650</Порядок>
							<Источник>ПлатаНотариусу</Источник>
							<Приемник>ПрочиеВнереализационныеДоходыРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>14</Код>
							<Наименование>ПользованиеПравамиНаРезультатыИнтеллектуальнойДеят</Наименование>
							<Порядок>700</Порядок>
							<Источник>ПользованиеПравамиНаРезультатыИнтеллектуальнойДеятельности</Источник>
							<Приемник>ПрочиеВнереализационныеДоходыРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>15</Код>
							<Наименование>РасходыНаКомандировки --&gt; ПрочиеВнереализационныеД</Наименование>
							<Порядок>750</Порядок>
							<Источник>РасходыНаКомандировки</Источник>
							<Приемник>ПрочиеВнереализационныеДоходыРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>16</Код>
							<Наименование>РасходыНаРекламу --&gt; ПрочиеВнереализационныеДоходы</Наименование>
							<Порядок>800</Порядок>
							<Источник>РасходыНаРекламу</Источник>
							<Приемник>ПрочиеВнереализационныеДоходыРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>17</Код>
							<Наименование>РемонтОсновныхСредств --&gt; ПрочиеВнереализационныеД</Наименование>
							<Порядок>850</Порядок>
							<Источник>РемонтОсновныхСредств</Источник>
							<Приемник>ПрочиеВнереализационныеДоходыРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>18</Код>
							<Наименование>Сертификация --&gt; ПрочиеВнереализационныеДоходыРасх</Наименование>
							<Порядок>900</Порядок>
							<Источник>Сертификация</Источник>
							<Приемник>ПрочиеВнереализационныеДоходыРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>19</Код>
							<Наименование>УсловияТруда --&gt; ПрочиеВнереализационныеДоходыРасх</Наименование>
							<Порядок>950</Порядок>
							<Источник>УсловияТруда</Источник>
							<Приемник>ПрочиеВнереализационныеДоходыРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>20</Код>
							<Наименование>УслугиСвязи --&gt; ПрочиеВнереализационныеДоходыРасхо</Наименование>
							<Порядок>1000</Порядок>
							<Источник>УслугиСвязи</Источник>
							<Приемник>ПрочиеВнереализационныеДоходыРасходы</Приемник>
						</Значение>
					</Значения>
				</Правило>
				<Правило>
					<Код>ВидыРасходовНУ</Код>
					<Наименование>ПеречислениеСсылка.ВидыПрочихРасходов --&gt; ПеречислениеСсылка.ВидыРасходовНУ</Наименование>
					<Порядок>450</Порядок>
					<Источник>ПеречислениеСсылка.ВидыПрочихРасходов</Источник>
					<Приемник>ПеречислениеСсылка.ВидыРасходовНУ</Приемник>
					<Свойства/>
					<Значения>
						<Значение>
							<Код>1</Код>
							<Наименование>АрендныеПлатежи --&gt; АрендаФедеральногоИМуниципальн</Наименование>
							<Порядок>50</Порядок>
							<Источник>АрендныеПлатежи</Источник>
							<Приемник>АрендаФедеральногоИМуниципальногоИмущества</Приемник>
						</Значение>
						<Значение>
							<Код>2</Код>
							<Наименование>ГарантийныйРемонтИОбслуживание --&gt; РемонтОсновныхС</Наименование>
							<Порядок>100</Порядок>
							<Источник>ГарантийныйРемонтИОбслуживание</Источник>
							<Приемник>ПрочиеРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>3</Код>
							<Наименование>ДругиеРасходы --&gt; ПрочиеРасходы</Наименование>
							<Порядок>150</Порядок>
							<Источник>ДругиеРасходы</Источник>
							<Приемник>ПрочиеРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>4</Код>
							<Наименование>ИзучениеКонъюнктурыРынка --&gt; ПрочиеРасходы</Наименование>
							<Порядок>200</Порядок>
							<Источник>ИзучениеКонъюнктурыРынка</Источник>
							<Приемник>ПрочиеРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>5</Код>
							<Наименование>ИнформационныеУслуги --&gt; ПрочиеРасходы</Наименование>
							<Порядок>250</Порядок>
							<Источник>ИнформационныеУслуги</Источник>
							<Приемник>ПрочиеРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>6</Код>
							<Наименование>КанцелярскиеТовары --&gt; ПрочиеРасходы</Наименование>
							<Порядок>300</Порядок>
							<Источник>КанцелярскиеТовары</Источник>
							<Приемник>МатериальныеРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>7</Код>
							<Наименование>КомиссионныеСборы --&gt; ПрочиеРасходы</Наименование>
							<Порядок>350</Порядок>
							<Источник>КомиссионныеСборы</Источник>
							<Приемник>ПрочиеРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>8</Код>
							<Наименование>КонсультационныеУслуги --&gt; ПрочиеРасходы</Наименование>
							<Порядок>400</Порядок>
							<Источник>КонсультационныеУслуги</Источник>
							<Приемник>ПрочиеРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>9</Код>
							<Наименование>НаборРаботников --&gt; ПрочиеРасходы</Наименование>
							<Порядок>450</Порядок>
							<Источник>НаборРаботников</Источник>
							<Приемник>ПрочиеРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>10</Код>
							<Наименование>НалогиИСборы --&gt; НалогиИСборы</Наименование>
							<Порядок>500</Порядок>
							<Источник>НалогиИСборы</Источник>
							<Приемник>НалогиИСборы</Приемник>
						</Значение>
						<Значение>
							<Код>11</Код>
							<Наименование>НеПринимаемые --&gt; НеУчитываемыеВЦеляхНалогообложен</Наименование>
							<Порядок>550</Порядок>
							<Источник>НеПринимаемые</Источник>
							<Приемник>НеУчитываемыеВЦеляхНалогообложения</Приемник>
						</Значение>
						<Значение>
							<Код>12</Код>
							<Наименование>ОхранаИмущества --&gt; ПрочиеРасходы</Наименование>
							<Порядок>600</Порядок>
							<Источник>ОхранаИмущества</Источник>
							<Приемник>ПрочиеРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>13</Код>
							<Наименование>ПлатаНотариусу --&gt; ПрочиеРасходы</Наименование>
							<Порядок>650</Порядок>
							<Источник>ПлатаНотариусу</Источник>
							<Приемник>ПрочиеРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>14</Код>
							<Наименование>ПользованиеПравамиНаРезультатыИнтеллектуальнойДеят</Наименование>
							<Порядок>700</Порядок>
							<Источник>ПользованиеПравамиНаРезультатыИнтеллектуальнойДеятельности</Источник>
							<Приемник>ПрочиеРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>15</Код>
							<Наименование>РасходыНаКомандировки --&gt; КомандировочныеРасходы</Наименование>
							<Порядок>750</Порядок>
							<Источник>РасходыНаКомандировки</Источник>
							<Приемник>КомандировочныеРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>16</Код>
							<Наименование>РасходыНаРекламу --&gt; РасходыНаРекламуНормируемые</Наименование>
							<Порядок>800</Порядок>
							<Источник>РасходыНаРекламу</Источник>
							<Приемник>РасходыНаРекламуНормируемые</Приемник>
						</Значение>
						<Значение>
							<Код>17</Код>
							<Наименование>РемонтОсновныхСредств --&gt; РемонтОсновныхСредств</Наименование>
							<Порядок>850</Порядок>
							<Источник>РемонтОсновныхСредств</Источник>
							<Приемник>РемонтОсновныхСредств</Приемник>
						</Значение>
						<Значение>
							<Код>18</Код>
							<Наименование>Сертификация --&gt; ПрочиеРасходы</Наименование>
							<Порядок>900</Порядок>
							<Источник>Сертификация</Источник>
							<Приемник>ПрочиеРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>19</Код>
							<Наименование>УсловияТруда --&gt; ОплатаТруда</Наименование>
							<Порядок>950</Порядок>
							<Источник>УсловияТруда</Источник>
							<Приемник>ОплатаТруда</Приемник>
						</Значение>
						<Значение>
							<Код>20</Код>
							<Наименование>УслугиСвязи --&gt; ПрочиеРасходы</Наименование>
							<Порядок>1000</Порядок>
							<Источник>УслугиСвязи</Источник>
							<Приемник>ПрочиеРасходы</Приемник>
						</Значение>
					</Значения>
				</Правило>
			</Группа>
			<Группа>
				<Код>Документы</Код>
				<Наименование>Документы                                         </Наименование>
				<Порядок>150</Порядок>
				<Правило>
					<Код>ДокументРасчетовСКонтрагентом</Код>
					<Наименование>ДокументСсылка.ПоступлениеТМЦ --&gt; ДокументСсылка.ДокументРасчетовСКонтрагентом</Наименование>
					<Порядок>50</Порядок>
					<Источник>СправочникСсылка.Договоры</Источник>
					<Приемник>ДокументСсылка.ДокументРасчетовСКонтрагентом</Приемник>
					<Свойства>
						<Свойство>
							<Код>3</Код>
							<Наименование>Контрагент --&gt; Контрагент</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(Источник);
Если Отказ = 0 Тогда
	Значение = Источник.Владелец;
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
							<ПередВыгрузкой>Если ПустоеЗначение(Параметры.ПараметрыАлгоритмов.Получить("ДатаДокументаРасчетов")) = 1 Тогда
	Значение = Параметры.ДатаВводаОстатков-1;
Иначе
	Значение = Параметры.ПараметрыАлгоритмов.Получить("ДатаДокументаРасчетов");
	Параметры.ПараметрыАлгоритмов.Установить("ДатаДокументаРасчетов", "");
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>6</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(Источник);
Если Отказ = 0 Тогда
	Значение = Источник;
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>7</Код>
							<Наименование> --&gt; Комментарий</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокументаРасчетов();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование> --&gt; ВалютаДокумента</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаДокумента" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<ПередВыгрузкой>Значение = Параметры.Рубли;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>9</Код>
							<Наименование> --&gt; НомерВходящегоДокумента</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НомерВходящегоДокумента" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Если ПустоеЗначение(Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента")) = 1 Тогда
	Отказ = 1;
Иначе
	Значение = Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента");
	Параметры.ПараметрыАлгоритмов.Установить("НомерДокумента", "");
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ВводНачальныхОстатковДвижения</Код>
					<Наименование> --&gt; ДокументСсылка.ВводНачальныхОстатков</Наименование>
					<Порядок>100</Порядок>
					<Приемник>ДокументСсылка.ВводНачальныхОстатков</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование> --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>100</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование> --&gt; Комментарий</Наименование>
							<Порядок>150</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ПустаяПартия</Код>
					<Наименование> --&gt; ДокументСсылка.ДокументРасчетовСКонтрагентом</Наименование>
					<Порядок>150</Порядок>
					<Приемник>ДокументСсылка.ДокументРасчетовСКонтрагентом</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование> --&gt; Комментарий</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Значение = "# Перенесено из 1С:Предпринимателя 7.7 # &lt; Условный документ партии &gt;";</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование> --&gt; ВалютаДокумента</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаДокумента" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = Параметры.Рубли;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование> --&gt; Дата</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
							<ПередВыгрузкой>Если ПустоеЗначение(Параметры.ПараметрыАлгоритмов.Получить("ДатаДокументаРасчетов")) = 1 Тогда
	Значение = Параметры.ДатаВводаОстатков-1;
Иначе
	Значение = Параметры.ПараметрыАлгоритмов.Получить("ДатаДокументаРасчетов");
	Параметры.ПараметрыАлгоритмов.Установить("ДатаДокументаРасчетов", "");
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование> --&gt; НомерВходящегоДокумента</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НомерВходящегоДокумента" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Если ПустоеЗначение(Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента")) = 1 Тогда
	Отказ = 1;
Иначе
	Значение = Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента");
	Параметры.ПараметрыАлгоритмов.Установить("НомерДокумента", "");
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ПартияПоРеквизитам</Код>
					<Наименование> --&gt; ДокументСсылка.ДокументРасчетовСКонтрагентом</Наименование>
					<Порядок>200</Порядок>
					<ПередВыгрузкой>Отказ = ПустоеЗначение(Параметры.ПараметрыАлгоритмов.Получить("ПартияПоРеквизитам"));</ПередВыгрузкой>
					<ПослеВыгрузки>Параметры.ПараметрыАлгоритмов.Установить("ПартияПоРеквизитам", "");</ПослеВыгрузки>
					<Приемник>ДокументСсылка.ДокументРасчетовСКонтрагентом</Приемник>
					<Свойства>
						<Свойство>
							<Код>1</Код>
							<Наименование> --&gt; Контрагент</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(Параметры.ПараметрыАлгоритмов.Получить("ПартияПоРеквизитам"));</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование> --&gt; Дата</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
							<ПередВыгрузкой>Если ПустоеЗначение(Параметры.ПараметрыАлгоритмов.Получить("ДатаДокументаРасчетов")) = 1 Тогда
	Значение = Параметры.ДатаВводаОстатков-1;
Иначе
	Значение = Параметры.ПараметрыАлгоритмов.Получить("ДатаДокументаРасчетов");
	Параметры.ПараметрыАлгоритмов.Установить("ДатаДокументаРасчетов", "");
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование> --&gt; ДоговорКонтрагента</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(Параметры.ПараметрыАлгоритмов.Получить("ПартияПоРеквизитам"));
Если Отказ = 0 Тогда
	Значение = Параметры.ПараметрыАлгоритмов.Получить("ПартияПоРеквизитам");
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование> --&gt; Комментарий</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокументаРасчетов();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; ВалютаДокумента</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаДокумента" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = Параметры.Рубли;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>7</Код>
							<Наименование> --&gt; НомерВходящегоДокумента</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НомерВходящегоДокумента" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Если ПустоеЗначение(Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента")) = 1 Тогда
	Отказ = 1;
Иначе
	Значение = Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента");
	Параметры.ПараметрыАлгоритмов.Установить("НомерДокумента", "");
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
			</Группа>
		</Группа>
		<Группа>
			<Код>Планы счетов</Код>
			<Наименование>Планы счетов</Наименование>
			<Порядок>100</Порядок>
		</Группа>
		<Группа>
			<Код>ДополнительныеСведения</Код>
			<Наименование>ДополнительныеСведения                            </Наименование>
			<Порядок>150</Порядок>
			<Правило>
				<Код>Банки</Код>
				<Наименование>СправочникСсылка.Банки --&gt; СправочникСсылка.Банки</Наименование>
				<Порядок>50</Порядок>
				<Источник>СправочникСсылка.Банки</Источник>
				<Приемник>СправочникСсылка.Банки</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>Родитель --&gt; Родитель</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Банки"/>
						<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Банки"/>
						<КодПравилаКонвертации>Банки                                             </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Группа>
						<Код>6</Код>
						<Наименование> --&gt; </Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="" Вид=""/>
						<ПередОбработкойВыгрузки>Отказ = Источник.ЭтоГруппа();</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>7</Код>
							<Наименование>КоррСчет --&gt; КоррСчет</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="КоррСчет" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="КоррСчет" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>Местонахождение --&gt; Город</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Местонахождение" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Город" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование>Адрес --&gt; Адрес</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="Адрес" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Адрес" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование>Телефоны --&gt; Телефоны</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Телефоны" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Телефоны" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>Валюты</Код>
				<Наименование>СправочникСсылка.Валюты --&gt; СправочникСсылка.Валюты</Наименование>
				<Порядок>100</Порядок>
				<ПослеВыгрузки>ВыгрузитьПоПравилу(Источник,,,, "КурсыВалют");</ПослеВыгрузки>
				<Источник>СправочникСсылка.Валюты</Источник>
				<Приемник>СправочникСсылка.Валюты</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<ПриВыгрузке>Если Источник.Код = "810" Тогда
	Значение = "643";
КонецЕсли;
</ПриВыгрузке>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>ПолнНаименование --&gt; НаименованиеПолное</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="ПолнНаименование" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ОКСМ</Код>
				<Наименование>СправочникСсылка.ОКСМ --&gt; СправочникСсылка.КлассификаторСтранМира</Наименование>
				<Порядок>150</Порядок>
				<Источник>СправочникСсылка.ОКСМ</Источник>
				<Приемник>СправочникСсылка.КлассификаторСтранМира</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ПолФизическихЛиц</Код>
				<Наименование>ПеречислениеСсылка.Пол --&gt; ПеречислениеСсылка.ПолФизическихЛиц</Наименование>
				<Порядок>200</Порядок>
				<ПередВыгрузкой>Источник = Источник.Идентификатор();</ПередВыгрузкой>
				<Источник>ПеречислениеСсылка.Пол</Источник>
				<Приемник>ПеречислениеСсылка.ПолФизическихЛиц</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>Женский --&gt; Женский</Наименование>
						<Порядок>50</Порядок>
						<Источник>Женский</Источник>
						<Приемник>Женский</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>Мужской --&gt; Мужской</Наименование>
						<Порядок>100</Порядок>
						<Источник>Мужской</Источник>
						<Приемник>Мужской</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ДолжностиОрганизаций</Код>
				<Наименование>Строка --&gt; СправочникСсылка.ДолжностиОрганизаций</Наименование>
				<Порядок>250</Порядок>
				<Источник>Строка</Источник>
				<Приемник>СправочникСсылка.ДолжностиОрганизаций</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Лев(Источник, 100);</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ПодразделенияОрганизаций</Код>
				<Наименование> --&gt; СправочникСсылка.ПодразделенияОрганизаций</Наименование>
				<Порядок>300</Порядок>
				<ПослеЗагрузки>Объект.Записать();</ПослеЗагрузки>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Приемник>СправочникСсылка.ПодразделенияОрганизаций</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "Основное подразделение (для ИП)";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Владелец</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Владелец" Вид="Свойство" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ОсновныеНачисленияОрганизаций</Код>
				<Наименование>СправочникСсылка.Работники --&gt; ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций</Наименование>
				<Порядок>350</Порядок>
				<ПослеЗагрузки>Объект.КодДоходаЕСН = Справочники.ДоходыЕСН.ОблагаетсяЦеликом;
Объект.КодДоходаНДФЛ = Справочники.ДоходыНДФЛ.КодДоходаПоУмолчанию;
Объект.КодДоходаФСС_НС = Перечисления.ДоходыФСС_НС.Облагается;
Объект.ЧастичноПодпадаетПодЕНВД = Истина;
Объект.КодДоходаСтраховыеВзносы = Справочники.ДоходыПоСтраховымВзносам.ОблагаетсяЦеликом;</ПослеЗагрузки>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Источник>СправочникСсылка.Работники</Источник>
				<Приемник>ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "Оклад по дням (для ИП)";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; СпособОтраженияВБухучете</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособОтраженияВБухучете" Вид="Реквизит" Тип="СправочникСсылка.СпособыОтраженияЗарплатыВРеглУчете"/>
						<КодПравилаКонвертации>СпособыОтраженияЗарплатыВРеглУчете                </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "Отражение начислений по умолчанию";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование> --&gt; ВидНачисленияПоСт255НК</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидНачисленияПоСт255НК" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыНачисленийОплатыТрудаПоСт255НК"/>
						<ПередВыгрузкой>Значение = "пп1ст255";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование> --&gt; Код</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = ПривестиНомерКДлине(Источник.Код, 5);</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СпособыОтраженияЗарплатыВРеглУчете</Код>
				<Наименование>СправочникСсылка.Работники --&gt; СправочникСсылка.СпособыОтраженияЗарплатыВРеглУчете</Наименование>
				<Порядок>400</Порядок>
				<Источник>Строка</Источник>
				<Приемник>СправочникСсылка.СпособыОтраженияЗарплатыВРеглУчете</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "Отражение начислений по умолчанию";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ДокументыУдостоверяющиеЛичность</Код>
				<Наименование> --&gt; СправочникСсылка.ДокументыУдостоверяющиеЛичность</Наименование>
				<Порядок>450</Порядок>
				<Источник>СправочникСсылка.ДокументыУдостоверяющиеЛичность</Источник>
				<Приемник>СправочникСсылка.ДокументыУдостоверяющиеЛичность</Приемник>
				<Свойства>
					<Свойство Отключить="true">
						<Код>1</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; КодИМНС</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="КодНДФЛ" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="КодИМНС" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство Отключить="true">
						<Код>3</Код>
						<Наименование> --&gt; КодПФР</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="КодСЗВ" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="КодПФР" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>КлассификаторЕдиницИзмерения</Код>
				<Наименование>СправочникСсылка.ЕдиницыИзмерений --&gt; СправочникСсылка.КлассификаторЕдиницИзмерения</Наименование>
				<Порядок>500</Порядок>
				<Источник>СправочникСсылка.ЕдиницыИзмерений</Источник>
				<Приемник>СправочникСсылка.КлассификаторЕдиницИзмерения</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>ПолнНаименование --&gt; НаименованиеПолное</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="ПолнНаименование" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>РасчетныеСчета</Код>
				<Наименование>СправочникСсылка.РасчетныеСчета --&gt; СправочникСсылка.БанковскиеСчета</Наименование>
				<Порядок>550</Порядок>
				<Источник>СправочникСсылка.РасчетныеСчета</Источник>
				<Приемник>СправочникСсылка.БанковскиеСчета</Приемник>
				<Свойства>
					<Свойство>
						<Код>3</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Если Параметры.ВыгружатьКоды = Да Тогда
	Значение = ПривестиНомерКДлине(Источник.Код, Параметры.ДлинаКода);
	
Иначе
	Отказ = 1 ;
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>Владелец --&gt; Владелец</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="Владелец" Вид="Свойство" Тип="СправочникСсылка.Контрагенты"/>
						<Приемник Имя="Владелец" Вид="Свойство"/>
						<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>6</Код>
						<Наименование>Номер --&gt; НомерСчета</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Номер" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="НомерСчета" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Лев(Источник.Номер, 20);</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>7</Код>
						<Наименование>БанкОрганизации --&gt; Банк</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="БанкОрганизации" Вид="Реквизит" Тип="СправочникСсылка.Банки"/>
						<Приемник Имя="Банк" Вид="Реквизит" Тип="СправочникСсылка.Банки"/>
						<КодПравилаКонвертации>Банки                                             </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование>БанкДляРасчетов --&gt; БанкДляРасчетов</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="БанкДляРасчетов" Вид="Реквизит" Тип="СправочникСсылка.Банки"/>
						<Приемник Имя="БанкДляРасчетов" Вид="Реквизит" Тип="СправочникСсылка.Банки"/>
						<КодПравилаКонвертации>Банки                                             </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование>Корреспондент --&gt; ТекстКорреспондента</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="Корреспондент" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="ТекстКорреспондента" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование>Назначение --&gt; ТекстНазначения</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="Назначение" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="ТекстНазначения" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование> --&gt; ВидСчета</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидСчета" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "Расчетный";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование> --&gt; ВалютаДенежныхСредств</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВалютаДенежныхСредств" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
						<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Параметры.Рубли;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ЕдиныеНормыАмортизационныхОтчисленийОсновныхФондов</Код>
				<Наименование>СправочникСсылка.КлассификаторЕН --&gt; СправочникСсылка.ЕдиныеНормыАмортизационныхОтчисленийОсновныхФо</Наименование>
				<Порядок>600</Порядок>
				<ПередВыгрузкой>//Отказ = Источник.ЭтоГруппа();</ПередВыгрузкой>
				<Источник>СправочникСсылка.КлассификаторЕН</Источник>
				<Приемник>СправочникСсылка.ЕдиныеНормыАмортизационныхОтчисленийОсновныхФондов</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>8</Код>
						<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>9</Код>
						<Наименование>Родитель --&gt; Родитель</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.КлассификаторЕН"/>
						<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ЕдиныеНормыАмортизационныхОтчисленийОсновныхФондов"/>
						<КодПравилаКонвертации>ЕдиныеНормыАмортизационныхОтчисленийОсновныхФондов</КодПравилаКонвертации>
					</Свойство>
					<Группа>
						<Код>10</Код>
						<Наименование> --&gt; </Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="" Вид=""/>
						<ПередОбработкойВыгрузки>Отказ = Источник.ЭтоГруппа();</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>6</Код>
							<Наименование>НормаАморт --&gt; НормаАмортизационныхОтчислений</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="НормаАморт" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="НормаАмортизационныхОтчислений" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование>НормаАвто --&gt; ПроцентОтСтоимостиМашины</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="НормаАвто" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="ПроцентОтСтоимостиМашины" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>АмортизационныеГруппы</Код>
				<Наименование>ПеречислениеСсылка.АмортизационныеГруппы --&gt; ПеречислениеСсылка.АмортизационныеГруппы</Наименование>
				<Порядок>650</Порядок>
				<Источник>ПеречислениеСсылка.АмортизационныеГруппы</Источник>
				<Приемник>ПеречислениеСсылка.АмортизационныеГруппы</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>ВосьмаяГруппа --&gt; ВосьмаяГруппа</Наименование>
						<Порядок>50</Порядок>
						<Источник>ВосьмаяГруппа</Источник>
						<Приемник>ВосьмаяГруппа</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ВтораяГруппа --&gt; ВтораяГруппа</Наименование>
						<Порядок>100</Порядок>
						<Источник>ВтораяГруппа</Источник>
						<Приемник>ВтораяГруппа</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ДевятаяГруппа --&gt; ДевятаяГруппа</Наименование>
						<Порядок>150</Порядок>
						<Источник>ДевятаяГруппа</Источник>
						<Приемник>ДевятаяГруппа</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>ДесятаяГруппа --&gt; ДесятаяГруппа</Наименование>
						<Порядок>200</Порядок>
						<Источник>ДесятаяГруппа</Источник>
						<Приемник>ДесятаяГруппа</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>ОтдельнаяГруппа --&gt; ОтдельнаяГруппа</Наименование>
						<Порядок>250</Порядок>
						<Источник>ОтдельнаяГруппа</Источник>
						<Приемник>ОтдельнаяГруппа</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>ПерваяГруппа --&gt; ПерваяГруппа</Наименование>
						<Порядок>300</Порядок>
						<Источник>ПерваяГруппа</Источник>
						<Приемник>ПерваяГруппа</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>ПятаяГруппа --&gt; ПятаяГруппа</Наименование>
						<Порядок>350</Порядок>
						<Источник>ПятаяГруппа</Источник>
						<Приемник>ПятаяГруппа</Приемник>
					</Значение>
					<Значение>
						<Код>8</Код>
						<Наименование>СедьмаяГруппа --&gt; СедьмаяГруппа</Наименование>
						<Порядок>400</Порядок>
						<Источник>СедьмаяГруппа</Источник>
						<Приемник>СедьмаяГруппа</Приемник>
					</Значение>
					<Значение>
						<Код>9</Код>
						<Наименование>ТретьяГруппа --&gt; ТретьяГруппа</Наименование>
						<Порядок>450</Порядок>
						<Источник>ТретьяГруппа</Источник>
						<Приемник>ТретьяГруппа</Приемник>
					</Значение>
					<Значение>
						<Код>10</Код>
						<Наименование>ЧетвертаяГруппа --&gt; ЧетвертаяГруппа</Наименование>
						<Порядок>500</Порядок>
						<Источник>ЧетвертаяГруппа</Источник>
						<Приемник>ЧетвертаяГруппа</Приемник>
					</Значение>
					<Значение>
						<Код>11</Код>
						<Наименование>ШестаяГруппа --&gt; ШестаяГруппа</Наименование>
						<Порядок>550</Порядок>
						<Источник>ШестаяГруппа</Источник>
						<Приемник>ШестаяГруппа</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ТипыЦенНоменклатуры</Код>
				<Наименование>СправочникСсылка.ТипыЦен --&gt; СправочникСсылка.ТипыЦенНоменклатуры</Наименование>
				<Порядок>700</Порядок>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Приемник>СправочникСсылка.ТипыЦенНоменклатуры</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>5</Код>
						<Наименование>ЦенаВклНДС --&gt; ЦенаВключаетНДС</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЦенаВключаетНДС" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>6</Код>
						<Наименование> --&gt; ВалютаЦены</Наименование>
						<Порядок>250</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВалютаЦены" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
						<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование> --&gt; ПорядокОкругления</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПорядокОкругления" Вид="Реквизит" Тип="ПеречислениеСсылка.ПорядкиОкругления"/>
						<ПередВыгрузкой>Значение = "Окр0_01";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ТипыЦенНоменклатурыСправочник</Код>
				<Наименование>СправочникСсылка.ТипыЦен --&gt; СправочникСсылка.ТипыЦенНоменклатуры</Наименование>
				<Порядок>750</Порядок>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Источник>СправочникСсылка.ТипыЦен</Источник>
				<Приемник>СправочникСсылка.ТипыЦенНоменклатуры</Приемник>
				<Свойства>
					<Свойство Отключить="true">
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Если Параметры.ВыгружатьКоды = Да Тогда
	Значение = ПривестиНомерКДлине(Источник.Код, Параметры.ДлинаКода);
	
Иначе
	Отказ = 1 ;
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Комментарий --&gt; Комментарий</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>5</Код>
						<Наименование>ЦенаВклНДС --&gt; ЦенаВключаетНДС</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="ЦенаВклНДС" Вид="Реквизит" Тип="Число"/>
						<Приемник Имя="ЦенаВключаетНДС" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; ПорядокОкругления</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПорядокОкругления" Вид="Реквизит" Тип="ПеречислениеСсылка.ПорядкиОкругления"/>
						<ПередВыгрузкой>Значение = "Окр0_01";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>7</Код>
						<Наименование> --&gt; ВалютаЦены</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВалютаЦены" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
						<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Параметры.Рубли;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>НоменклатурныеГруппы</Код>
				<Наименование> --&gt; СправочникСсылка.НоменклатурныеГруппы</Наименование>
				<Порядок>800</Порядок>
				<Приемник>СправочникСсылка.НоменклатурныеГруппы</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВидыДеятельностиДляРегистра</Код>
				<Наименование>СправочникСсылка.ВидыДеятельности --&gt; СправочникСсылка.ВидыДеятельностиПредпринимателей</Наименование>
				<Порядок>850</Порядок>
				<Источник>СправочникСсылка.ВидыДеятельности</Источник>
				<Приемник>СправочникСсылка.ВидыДеятельностиПредпринимателей</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование>ОблагаетсяЕНВД --&gt; ХарактерДеятельности</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ХарактерДеятельности" Вид="Реквизит" Тип="ПеречислениеСсылка.ХарактерДеятельности"/>
						<ПередВыгрузкой>Параметры.ПрочиеПараметры.ВыбратьСтроки();
НомерСтроки = "";
Параметры.ПрочиеПараметры.НайтиЗначение(Источник,НомерСтроки, "ВидДеятельности");
Значение = Параметры.ПрочиеПараметры.ПолучитьЗначение(НомерСтроки, "ХарактерДеятельности");</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СтатьиЗатрат</Код>
				<Наименование> --&gt; СправочникСсылка.СтатьиЗатрат</Наименование>
				<Порядок>900</Порядок>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Источник>СправочникСсылка.ПрочиеРасходы</Источник>
				<Приемник>СправочникСсылка.СтатьиЗатрат</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Если ПустоеЗначение(Параметры.ПараметрыАлгоритмов.Получить("НаименованиеСтатьиЗатрат")) = 0 Тогда
	Значение = Параметры.ПараметрыАлгоритмов.Получить("НаименованиеСтатьиЗатрат");
КонецЕсли;
</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование> --&gt; ВидРасходовНУ</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="ВидРасхода" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыПрочихРасходов"/>
						<Приемник Имя="ВидРасходовНУ" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыРасходовНУ"/>
						<ПередВыгрузкой>Если ПустоеЗначение(Параметры.ПараметрыАлгоритмов.Получить("НаименованиеСтатьиЗатрат")) = 0 Тогда
	Значение = Параметры.ПараметрыАлгоритмов.Получить("ВидРасходовНУ");
Иначе
	ИмяПКО = "ВидыРасходовНУ";
КонецЕсли;
</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование> --&gt; ВидДеятельностиДляНалоговогоУчетаЗатрат</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидДеятельностиДляНалоговогоУчетаЗатрат" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыДеятельностиДляНалоговогоУчетаЗатрат"/>
						<ПередВыгрузкой>Если ПустоеЗначение(Параметры.ПараметрыАлгоритмов.Получить("ПредпринимательскаяДеятельностьОблагаемаяЕНВД")) = 0 Тогда
	Значение = Параметры.ПараметрыАлгоритмов.Получить("ПредпринимательскаяДеятельностьОблагаемаяЕНВД");
Иначе
	Значение = "ПредпринимательскаяДеятельностьНеОблагаемаяЕНВД";
КонецЕсли;
</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; ЭтоГруппа</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Если ПустоеЗначение(Параметры.ПараметрыАлгоритмов.Получить("НаименованиеСтатьиЗатрат")) = 0 Тогда
	Значение = 0;
КонецЕсли;
</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>Родитель --&gt; Родитель</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ПрочиеРасходы"/>
						<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.СтатьиЗатрат"/>
						<КодПравилаКонвертации>СтатьиЗатрат                                      </КодПравилаКонвертации>
						<ПередВыгрузкой>Если ПустоеЗначение(Параметры.ПараметрыАлгоритмов.Получить("НаименованиеСтатьиЗатрат")) = 0 Тогда
	Отказ = 1;
КонецЕсли;
</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СобытияОС</Код>
				<Наименование> --&gt; СправочникСсылка.СобытияОС</Наименование>
				<Порядок>950</Порядок>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Приемник>СправочникСсылка.СобытияОС</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "Принятие к учету и ввод в эксплуатацию";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование> --&gt; ВидСобытияОС</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидСобытияОС" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыСобытийОС"/>
						<ПередВыгрузкой>Значение = "ПринятиеКУчетуСВводомВЭксплуатацию";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СпособыОтраженияРасходовПоАмортизации</Код>
				<Наименование> --&gt; СправочникСсылка.СпособыОтраженияРасходовПоАмортизации</Наименование>
				<Порядок>1000</Порядок>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Источник>Строка</Источник>
				<Приемник>СправочникСсылка.СпособыОтраженияРасходовПоАмортизации</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "# Служебный # &lt;1С:Предприниматель 7.7&gt;";</ПередВыгрузкой>
					</Свойство>
					<Группа Отключить="true">
						<Код>3</Код>
						<Наименование> --&gt; Способы</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Способы" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>4</Код>
							<Наименование> --&gt; Коэффициент</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Коэффициент" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование> --&gt; СчетЗатрат</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетЗатрат" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<ПередВыгрузкой>Значение = "ОбщехозяйственныеРасходы";</ПередВыгрузкой>
						</Свойство>
						<Свойство Отключить="true">
							<Код>6</Код>
							<Наименование> --&gt; Субконто1</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Субконто1" Вид="Реквизит"/>
							<КодПравилаКонвертации>ПодразделенияОрганизаций                          </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "Основное подразделение (для ИП)";</ПередВыгрузкой>
						</Свойство>
						<Свойство Отключить="true">
							<Код>7</Код>
							<Наименование> --&gt; Субконто2</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Субконто2" Вид="Реквизит"/>
							<КодПравилаКонвертации>СтатьиЗатрат                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("НаименованиеСтатьиЗатрат", "Амортизация");
Параметры.ПараметрыАлгоритмов.Установить("ВидРасходовНУСтатьиЗатрат", "Амортизация");
Значение = "Амортизация";</ПередВыгрузкой>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ОбъектыСтроительства</Код>
				<Наименование>СправочникСсылка.Номенклатура --&gt; СправочникСсылка.ОбъектыСтроительства</Наименование>
				<Порядок>1050</Порядок>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Источник>СправочникСсылка.Номенклатура</Источник>
				<Приемник>СправочникСсылка.ОбъектыСтроительства</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>Родитель --&gt; Родитель</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Номенклатура"/>
						<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ОбъектыСтроительства"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>5</Код>
						<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ОтражениеЗарплатыВРеглУчете</Код>
				<Наименование> --&gt; ДокументСсылка.ОтражениеЗарплатыВРеглУчете</Наименование>
				<Порядок>1100</Порядок>
				<Приемник>ДокументСсылка.ОтражениеЗарплатыВРеглУчете</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Параметры.ПараметрыАлгоритмов.Получить("ДатаДокументаЗП");</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; ПериодРегистрации</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Параметры.ПараметрыАлгоритмов.Получить("ДатаПериодаЗП");</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "# Перенесено из 1С:Предпринимателя 7.7 # &lt; Период: " + Параметры.ПараметрыАлгоритмов.Получить("ДатаПериодаЗП") + " &gt;";
</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>РасходныйКассовыйОрдер</Код>
				<Наименование> --&gt; ДокументСсылка.РасходныйКассовыйОрдер</Наименование>
				<Порядок>1150</Порядок>
				<ПослеЗагрузки>Если Не ОбъектНайден Тогда
	Объект.ОбменДанными.Загрузка = Истина;
	Объект.Записать();
КонецЕсли;
Если Объект.РасшифровкаПлатежа.Количество() = 0 Тогда
	Объект.РасшифровкаПлатежа.Добавить();
	Объект.ОбменДанными.Загрузка = Истина;
	Объект.Записать();
КонецЕсли;
</ПослеЗагрузки>
				<Приемник>ДокументСсылка.РасходныйКассовыйОрдер</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Параметры.ПараметрыАлгоритмов.Получить("ДатаДокументаЗП");</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "# Перенесено из 1С:Предпринимателя 7.7 # &lt; Период: " + Параметры.ПараметрыАлгоритмов.Получить("ДатаПериодаЗП") + " &gt;";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование> --&gt; ВидОперации</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидОперации" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыОперацийРКО"/>
						<ПередВыгрузкой>Значение = "ВыплатаЗаработнойПлатыПоВедомостям";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>7</Код>
						<Наименование> --&gt; СчетКасса</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СчетКасса" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
						<ПередВыгрузкой>Значение = "КассаОрганизации";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>8</Код>
						<Наименование> --&gt; ВалютаДокумента</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВалютаДокумента" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
						<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Параметры.Рубли;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ГруппаНоменклатуры</Код>
				<Наименование> --&gt; СправочникСсылка.Номенклатура</Наименование>
				<Порядок>1200</Порядок>
				<ПередВыгрузкой>КлючВыгружаемыхДанных = "АвтоматическиСозданнаяГруппа_" + ВходящиеДанные.Получить("Наименование");</ПередВыгрузкой>
				<ПослеЗагрузки>Если НЕ ЗначениеЗаполнено(Объект.Код) Тогда Объект.УстановитьНовыйКод() КонецЕсли;</ПослеЗагрузки>
				<Приемник>СправочникСсылка.Номенклатура</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Родитель</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Номенклатура"/>
						<ПередВыгрузкой>Значение = ПолучитьПустоеЗначение();</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование> --&gt; ЭтоГруппа</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>РодительНоменклатуры</Код>
				<Наименование>СправочникСсылка.Номенклатура --&gt; СправочникСсылка.Номенклатура</Наименование>
				<Порядок>1250</Порядок>
				<ПередВыгрузкой>КлючВыгружаемыхДанных = "РаспределеннаяГруппа_" + ВходящиеДанные.Получить("Наименование");</ПередВыгрузкой>
				<ПослеЗагрузки>Если Не ЗначениеЗаполнено(Объект.Код) Тогда Объект.УстановитьНовыйКод() КонецЕсли;</ПослеЗагрузки>
				<Источник>СправочникСсылка.Номенклатура</Источник>
				<Приемник>СправочникСсылка.Номенклатура</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Родитель</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Номенклатура"/>
						<ПередВыгрузкой>		ТипНоменклатуры = ВходящиеДанные.Получить("ТипНоменклатуры");

Если ПустоеЗначение(Источник.Родитель) = 1 Тогда
	
	ИмяГруппы = "Материалы";
	Если Источник.ЭтоГруппа() = 1 Тогда
		ИмяГруппы = Источник.Наименование;
	ИначеЕсли ТипНоменклатуры = Перечисление.ВидыМатериальныхРесурсов.Продукция Тогда
		ИмяГруппы = "Продукция";
	ИначеЕсли ТипНоменклатуры = Перечисление.ВидыМатериальныхРесурсов.Товар Тогда
		ИмяГруппы = "Товары";
	ИначеЕсли ТипНоменклатуры = Перечисление.ВидыМатериальныхРесурсов.Услуга Тогда
		ИмяГруппы = "Услуги";
	ИначеЕсли ТипНоменклатуры = Перечисление.ВидыМатериальныхРесурсов.Полуфабрикат Тогда
		ИмяГруппы = "Полуфабрикаты";
	ИначеЕсли ТипНоменклатуры = Перечисление.ВидыМатериальныхРесурсов.ВнеоборотныйАктив Тогда
		ИмяГруппы = "Оборудование (объекты основных средств)";
	Иначе
		ИмяГруппы = "Номенклатура";
	КонецЕсли;
	ИмяПКО = "ГруппаНоменклатуры";
	Значение = Источник;
Иначе
	
	ИмяГруппы = Источник.Родитель.Наименование;	
	ИмяПКО = "РодительНоменклатуры";
	Значение = Источник.Родитель;
КонецЕсли;

ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
ИсходящиеДанные.Установить("ТипНоменклатуры", ТипНоменклатуры);
ИсходящиеДанные.Установить("Наименование", ИмяГруппы);
</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование> --&gt; ЭтоГруппа</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВычетыНДФЛЛичный</Код>
				<Наименование>Число: Число</Наименование>
				<Порядок>1300</Порядок>
				<Источник>СправочникСсылка.ТипыВычетов2001</Источник>
				<Приемник>СправочникСсылка.ВычетыНДФЛ</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>КодДляОтчетности2009 --&gt; КодДляОтчетности2009</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="КодДляОтчетности2009" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="КодДляОтчетности2009" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВычетыНаРебенка</Код>
				<Наименование>Число: Число</Наименование>
				<Порядок>1300</Порядок>
				<Источник>СправочникСсылка.ТипыВычетов2001</Источник>
				<Приемник>СправочникСсылка.ВычетыНДФЛ</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>КодДляОтчетности2009 --&gt; КодДляОтчетности2009</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="КодДляОтчетности2009" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="КодДляОтчетности2009" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВычетыНаРебенкаИнвалида</Код>
				<Наименование>Число: Число</Наименование>
				<Порядок>1300</Порядок>
				<ПередВыгрузкой>Если (Источник &lt;&gt; 600) и (Источник &lt;&gt; 1200) и (Источник &lt;&gt; 2400) и (Источник &lt;&gt; 2000) и (Источник &lt;&gt; 4000)Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
				<Источник>Число</Источник>
				<Приемник>СправочникСсылка.ВычетыНДФЛ</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; КодДляОтчетности2008</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодДляОтчетности2008" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = ?((Источник = 600) или (Источник = 1200) или (Источник = 2000), "106", "107");</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВычетПоКоду</Код>
				<Наименование>Число: Число</Наименование>
				<Порядок>1300</Порядок>
				<Источник>Строка</Источник>
				<Приемник>СправочникСсылка.ВычетыНДФЛ</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; КодДляОтчетности2008</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодДляОтчетности2008" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ТарифыСтраховыхВзносов</Код>
				<Наименование>Перечисление: Тарифы страховых взносов</Наименование>
				<Порядок>1350</Порядок>
				<Источник>ПеречислениеСсылка.ТарифыСтраховыхВзносов</Источник>
				<Приемник>ПеречислениеСсылка.ТарифыСтраховыхВзносов</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>ЕНВД --&gt; ЕНВД</Наименование>
						<Порядок>50</Порядок>
						<Источник>ЕНВД</Источник>
						<Приемник>ЕНВД</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ОбщийНалоговыйРежим --&gt; ОбщийНалоговыйРежим</Наименование>
						<Порядок>100</Порядок>
						<Источник>ОбщийНалоговыйРежим</Источник>
						<Приемник>ОбщийНалоговыйРежим</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ОрганизацияИнвалидов --&gt; ОрганизацияИнвалидов</Наименование>
						<Порядок>150</Порядок>
						<Источник>ОрганизацияИнвалидов</Источник>
						<Приемник>ОрганизацияИнвалидов</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>РезидентТехникоВнедренческойЗоны --&gt; РезидентТехни</Наименование>
						<Порядок>200</Порядок>
						<Источник>РезидентТехникоВнедренческойЗоны</Источник>
						<Приемник>РезидентТехникоВнедренческойЗоны</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>УпрощенныйНалоговыйРежим --&gt; УпрощенныйНалоговыйРе</Наименование>
						<Порядок>250</Порядок>
						<Источник>УпрощенныйНалоговыйРежим</Источник>
						<Приемник>УпрощенныйНалоговыйРежим</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>ITОрганизации --&gt; ITОрганизации</Наименование>
						<Порядок>300</Порядок>
						<Источник>ITОрганизации</Источник>
						<Приемник>ITОрганизации</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>СМИ --&gt; СМИ</Наименование>
						<Порядок>350</Порядок>
						<Источник>СМИ</Источник>
						<Приемник>СМИ</Приемник>
					</Значение>
					<Значение>
						<Код>8</Код>
						<Наименование>УпрощенныйНалоговыйРежимПроизводство --&gt; Упрощенны</Наименование>
						<Порядок>400</Порядок>
						<Источник>УпрощенныйНалоговыйРежимПроизводство</Источник>
						<Приемник>УпрощенныйНалоговыйРежимПроизводство</Приемник>
					</Значение>
					<Значение>
						<Код>9</Код>
						<Наименование>ХозОбществаБюджетныхВУЗов --&gt; ХозОбществаБюджетных</Наименование>
						<Порядок>450</Порядок>
						<Источник>ХозОбществаБюджетныхВУЗов</Источник>
						<Приемник>ХозОбществаБюджетныхВУЗов</Приемник>
					</Значение>
				</Значения>
			</Правило>
		</Группа>
		<Группа>
			<Код>РегистрыСведений</Код>
			<Наименование>РегистрыСведений                                  </Наименование>
			<Порядок>200</Порядок>
			<Правило>
				<Код>РегистрВидыДеятельностиПредпринимателей</Код>
				<Наименование> --&gt; РегистрСведенийЗапись.ВидыДеятельностиПредпринимателей</Наименование>
				<Порядок>50</Порядок>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.ВидыДеятельностиПредпринимателей</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; ВидДеятельности</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидДеятельности" Вид="Ресурс" Тип="СправочникСсылка.ВидыДеятельностиПредпринимателей"/>
						<КодПравилаКонвертации>ВидыДеятельностиДляРегистра                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; ХарактерДеятельности</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ХарактерДеятельности" Вид="Измерение" Тип="ПеречислениеСсылка.ХарактерДеятельности"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; НоменклатурнаяГруппа</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НоменклатурнаяГруппа" Вид="Измерение" Тип="СправочникСсылка.НоменклатурныеГруппы"/>
						<КодПравилаКонвертации>НоменклатурныеГруппы                              </КодПравилаКонвертации>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>УчетнаяПолитикаБухгалтерскийУчет</Код>
				<Наименование> --&gt; РегистрСведенийЗапись.УчетнаяПолитикаОрганизаций</Наименование>
				<Порядок>100</Порядок>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.УчетнаяПолитикаОрганизаций</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; СпособОценкиМПЗ</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособОценкиМПЗ" Вид="Ресурс" Тип="ПеречислениеСсылка.СпособыОценки"/>
						<ПередВыгрузкой>Значение = "ФИФО";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; ДиректКостинг</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДиректКостинг" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; СпособОценкиТоваровВРознице</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособОценкиТоваровВРознице" Вид="Ресурс" Тип="ПеречислениеСсылка.СпособыОценкиТоваровВРознице"/>
						<ПередВыгрузкой>Значение = "ПоСтоимостиПриобретения";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; СпособУчетаВыпускаГотовойПродукции</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособУчетаВыпускаГотовойПродукции" Вид="Ресурс" Тип="ПеречислениеСсылка.СпособыУчетаВыпускаГотовойПродукции"/>
						<ПередВыгрузкой>Значение = "БезИспользованияСчета40";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование> --&gt; СпособРасчетаСебестоимостиПроизводства</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособРасчетаСебестоимостиПроизводства" Вид="Ресурс" Тип="ПеречислениеСсылка.СпособыРасчетаСебестоимостиПродукции"/>
						<ПередВыгрузкой>Значение = "ПоПодразделениям";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; БазаРаспределенияКосвенныхРасходовПоВидамДеятельности</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="БазаРаспределенияКосвенныхРасходовПоВидамДеятельности" Вид="Ресурс" Тип="ПеречислениеСсылка.БазыРаспределенияКосвенныхРасходовПоВидамДеятельности"/>
						<ПередВыгрузкой>Значение = "ДоходыОтРеализации";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование> --&gt; МоментОпределенияНалоговойБазыНДС</Наименование>
						<Порядок>550</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="МоментОпределенияНалоговойБазыНДС" Вид="Ресурс" Тип="ПеречислениеСсылка.МоментыОпределенияНалоговойБазыНДС"/>
					</Свойство>
					<Свойство>
						<Код>14</Код>
						<Наименование> --&gt; НачислятьНДСПоОтгрузке</Наименование>
						<Порядок>650</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НачислятьНДСПоОтгрузке" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>16</Код>
						<Наименование> --&gt; НДСПриНеподтвержденииСверху</Наименование>
						<Порядок>750</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НДСПриНеподтвержденииСверху" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>18</Код>
						<Наименование> --&gt; ОрганизацияЯвляетсяПлательщикомЕНВД</Наименование>
						<Порядок>850</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОрганизацияЯвляетсяПлательщикомЕНВД" Вид="Ресурс" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>13</Код>
						<Наименование> --&gt; ОсобенностиИсчисленияНДФЛ</Наименование>
						<Порядок>900</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОсобенностиИсчисленияНДФЛ" Вид="Ресурс" Тип="ПеречислениеСсылка.ОсобенностиИсчисленияНДФЛ"/>
					</Свойство>
					<Свойство>
						<Код>19</Код>
						<Наименование> --&gt; ПорядокРаспределенияРасходовНаОказаниеВнутреннихУслуг</Наименование>
						<Порядок>950</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПорядокРаспределенияРасходовНаОказаниеВнутреннихУслуг" Вид="Ресурс" Тип="ПеречислениеСсылка.ПорядокРаспределенияРасходовНаОказаниеВнутреннихУслуг"/>
						<ПередВыгрузкой>Значение = "ПоПлановымЦенам";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>20</Код>
						<Наименование> --&gt; ПорядокРаспределенияРасходовНаОказаниеУслуг</Наименование>
						<Порядок>1000</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПорядокРаспределенияРасходовНаОказаниеУслуг" Вид="Ресурс" Тип="ПеречислениеСсылка.ПорядокРаспределенияРасходовНаОказаниеУслуг"/>
						<ПередВыгрузкой>Значение = "ПоПлановымЦенам";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>21</Код>
						<Наименование> --&gt; РозничнаяТорговляОблагаетсяЕНВД</Наименование>
						<Порядок>1050</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РозничнаяТорговляОблагаетсяЕНВД" Вид="Ресурс" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>22</Код>
						<Наименование> --&gt; СистемаНалогообложения</Наименование>
						<Порядок>1100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СистемаНалогообложения" Вид="Ресурс" Тип="ПеречислениеСсылка.СистемыНалогообложения"/>
					</Свойство>
					<Свойство>
						<Код>23</Код>
						<Наименование> --&gt; СложныйУчетНДС</Наименование>
						<Порядок>1150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СложныйУчетНДС" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>24</Код>
						<Наименование> --&gt; СпособОтраженияВБухгалтерскомУчетеВключенияНДСВСтоимость</Наименование>
						<Порядок>1200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособОтраженияВБухгалтерскомУчетеВключенияНДСВСтоимость" Вид="Ресурс" Тип="ПеречислениеСсылка.НДССпособОтраженияВБухгалтерскомУчетеПриВключенииВСтоимость"/>
						<ПередВыгрузкой>Значение = "ВСоответствииСоСт170НКРФ";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>27</Код>
						<Наименование> --&gt; УчитыватьПоложительныеСуммовыеРазницыПриНачисленииНДС</Наименование>
						<Порядок>1350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="УчитыватьПоложительныеСуммовыеРазницыПриНачисленииНДС" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>29</Код>
						<Наименование> --&gt; ФормироватьСчетФактуруПоУЕвРублях</Наименование>
						<Порядок>1450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФормироватьСчетФактуруПоУЕвРублях" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>30</Код>
						<Наименование> --&gt; УпрощенныйУчетНДС</Наименование>
						<Порядок>1500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="УпрощенныйУчетНДС" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>31</Код>
						<Наименование> --&gt; ВестиУчетПоВидамДеятельности</Наименование>
						<Порядок>1550</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВестиУчетПоВидамДеятельности" Вид="Ресурс" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>32</Код>
						<Наименование> --&gt; ОбъектНалогообложенияУСН</Наименование>
						<Порядок>1600</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОбъектНалогообложенияУСН" Вид="Ресурс" Тип="ПеречислениеСсылка.ОбъектыНалогообложенияПоУСН"/>
						<КодПравилаКонвертации>ОбъектыНалогообложенияПоУСН                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>33</Код>
						<Наименование> --&gt; УведомлениеНомер</Наименование>
						<Порядок>1650</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="УведомлениеНомер" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>34</Код>
						<Наименование> --&gt; УведомлениеДата</Наименование>
						<Порядок>1700</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="УведомлениеДата" Вид="Ресурс" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>36</Код>
						<Наименование> --&gt; ПорядокПризнанияМатериальныхРасходов</Наименование>
						<Порядок>1800</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПорядокПризнанияМатериальныхРасходов" Вид="Ресурс" Тип="ПеречислениеСсылка.ПорядокПризнанияМатериальныхРасходов"/>
						<КодПравилаКонвертации>ПорядокПризнанияМатериальныхРасходов              </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>37</Код>
						<Наименование> --&gt; ПорядокПризнанияРасходовПоТоварам</Наименование>
						<Порядок>1850</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПорядокПризнанияРасходовПоТоварам" Вид="Ресурс" Тип="ПеречислениеСсылка.ПорядокПризнанияРасходовПоТоварам"/>
						<КодПравилаКонвертации>ПорядокПризнанияРасходовПоТоварам                 </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>38</Код>
						<Наименование> --&gt; ПорядокПризнанияРасходовПоНДС</Наименование>
						<Порядок>1900</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПорядокПризнанияРасходовПоНДС" Вид="Ресурс" Тип="ПеречислениеСсылка.ПорядокПризнанияРасходовПоНДС"/>
						<КодПравилаКонвертации>ПорядокПризнанияРасходовПоНДС                     </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>39</Код>
						<Наименование> --&gt; ОсновнаяНоменклатурнаяГруппа</Наименование>
						<Порядок>1950</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОсновнаяНоменклатурнаяГруппа" Вид="Ресурс" Тип="СправочникСсылка.НоменклатурныеГруппы"/>
						<КодПравилаКонвертации>НоменклатурныеГруппы                              </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "Основная номенклатурная группа";
ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
ИсходящиеДанные.Установить("Наименование", Значение);
</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>40</Код>
						<Наименование> --&gt; ОсновнойХарактерДеятельности</Наименование>
						<Порядок>2000</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОсновнойХарактерДеятельности" Вид="Ресурс" Тип="ПеречислениеСсылка.ХарактерДеятельности"/>
						<ПередВыгрузкой>Значение = "ОптоваяТорговля";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>41</Код>
						<Наименование> --&gt; МетодРаспределенияРасходовУСНПоВидамДеятельности</Наименование>
						<Порядок>2050</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="МетодРаспределенияРасходовУСНПоВидамДеятельности" Вид="Ресурс" Тип="ПеречислениеСсылка.МетодыРаспределенияРасходовУСНПоВидамДеятельности"/>
						<ПередВыгрузкой>Значение = "ЗаКвартал";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>42</Код>
						<Наименование> --&gt; БазаРаспределенияРасходовУСНПоВидамДеятельности</Наименование>
						<Порядок>2100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="БазаРаспределенияРасходовУСНПоВидамДеятельности" Вид="Ресурс" Тип="ПеречислениеСсылка.БазаРаспределенияРасходовУСНПоВидамДеятельности"/>
						<ПередВыгрузкой>Значение = "ДоходыОтРеализацииБУ";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>43</Код>
						<Наименование> --&gt; ПоложенияПереходногоПериодаУСН</Наименование>
						<Порядок>2150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПоложенияПереходногоПериодаУСН" Вид="Ресурс" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>44</Код>
						<Наименование> --&gt; ДатаПереходаНаУСН</Наименование>
						<Порядок>2200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаПереходаНаУСН" Вид="Ресурс" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>45</Код>
						<Наименование> --&gt; ОрганизацияВедетРозничнуюТорговлю</Наименование>
						<Порядок>2250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОрганизацияВедетРозничнуюТорговлю" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>46</Код>
						<Наименование> --&gt; ОрганизацияВедетПроизводственнуюДеятельность</Наименование>
						<Порядок>2300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОрганизацияВедетПроизводственнуюДеятельность" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>47</Код>
						<Наименование> --&gt; ВидТарифаСтраховыхВзносов</Наименование>
						<Порядок>2350</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидТарифаСтраховыхВзносов" Вид="Ресурс" Тип="ПеречислениеСсылка.ТарифыСтраховыхВзносов"/>
						<КодПравилаКонвертации>ТарифыСтраховыхВзносов                            </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>48</Код>
						<Наименование> --&gt; НачислятьНДСПриПередачеНедвижимости</Наименование>
						<Порядок>2400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НачислятьНДСПриПередачеНедвижимости" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Если ДатаГод(ВходящиеДанные.Получить("Период")) &gt; 2010 Тогда
	Значение = 1;
Иначе
	Значение = 0;
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>УчетнаяПолитикаПоПерсоналу</Код>
				<Наименование> --&gt; РегистрСведенийЗапись.УчетнаяПолитикаПоПерсоналу</Наименование>
				<Порядок>150</Порядок>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.УчетнаяПолитикаПоПерсоналу</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; УпрощенныйУчетНДФЛ</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="УпрощенныйУчетНДФЛ" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>КурсыВалют</Код>
				<Наименование>СправочникСсылка.Валюты --&gt; РегистрСведенийЗапись.КурсыВалют</Наименование>
				<Порядок>200</Порядок>
				<Источник>СправочникСсылка.Валюты</Источник>
				<Приемник>РегистрСведенийЗапись.КурсыВалют</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Курс</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Курс" Вид="Ресурс" Тип="Число"/>
						<ПередВыгрузкой>Значение = Источник.Курс.Получить(Параметры.ДатаКонцаПериодаВыгрузки);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Кратность</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Кратность" Вид="Ресурс" Тип="Число"/>
						<ПередВыгрузкой>Значение = Источник.Кратность.Получить(Параметры.ДатаКонцаПериодаВыгрузки);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Параметры.ДатаКонцаПериодаВыгрузки;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Валюта</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Валюта" Вид="Измерение" Тип="СправочникСсылка.Валюты"/>
						<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ПаспортныеДанныеИндивидуальногоПредпринимателя</Код>
				<Наименование> --&gt; РегистрСведенийЗапись.ПаспортныеДанныеФизЛиц</Наименование>
				<Порядок>250</Порядок>
				<ПередВыгрузкой>Параметры.ПаспортныеДанные = Константа.ДокументУдЛичность;
ВходящиеДанные = ПолучитьПаспортныеДанные(); 
Если ВходящиеДанные.РазмерСписка() =  0 Тогда
	Отказ = 1;
КонецЕсли;
</ПередВыгрузкой>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.ПаспортныеДанныеФизЛиц</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Параметры.ДатаКонцаПериодаВыгрузки;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; ФизЛицо</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ИндивидуальныйПредприниматель                     </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; ДокументВид</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДокументВид" Вид="Ресурс" Тип="СправочникСсылка.ДокументыУдостоверяющиеЛичность"/>
						<КодПравилаКонвертации>ДокументыУдостоверяющиеЛичность                   </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; ДокументСерия</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДокументСерия" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; ДокументНомер</Наименование>
						<Порядок>250</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДокументНомер" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; ДокументДатаВыдачи</Наименование>
						<Порядок>300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДокументДатаВыдачи" Вид="Ресурс" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование> --&gt; ДокументКемВыдан</Наименование>
						<Порядок>350</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДокументКемВыдан" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ТелефонДомашнийИндивидуальногоПредпринимателя</Код>
				<Наименование> --&gt; РегистрСведенийЗапись.КонтактнаяИнформация</Наименование>
				<Порядок>300</Порядок>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.КонтактнаяИнформация</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Объект</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Объект" Вид="Измерение"/>
						<КодПравилаКонвертации>ИндивидуальныйПредприниматель                     </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Тип</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Тип" Вид="Измерение" Тип="ПеречислениеСсылка.ТипыКонтактнойИнформации"/>
						<ПередВыгрузкой>Значение = "Телефон";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Вид</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Вид" Вид="Измерение"/>
						<ПередВыгрузкой>Значение = "00007"; ТипПриемника = "СправочникСсылка.ВидыКонтактнойИнформации";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Представление</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Представление" Вид="Ресурс" Тип="Строка"/>
						<ПередВыгрузкой>Телефон = "";

Если ПустоеЗначение(Константа.КодТел1) = 0 Тогда
	Телефон = Телефон + "(" + Константа.КодТел1 + ")"
КонецЕсли;

Если ПустоеЗначение(Константа.ТелефонДомашний) = 0 Тогда
	Телефон = Телефон + Константа.ТелефонДомашний;
КонецЕсли;

Значение = Телефон;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; Представление</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле3" Вид="Ресурс" Тип="Строка"/>
						<ПередВыгрузкой>Телефон = "";

Если ПустоеЗначение(Константа.КодТел1) = 0 Тогда
	Телефон = Телефон + "(" + Константа.КодТел1 + ")"
КонецЕсли;

Если ПустоеЗначение(Константа.ТелефонДомашний) = 0 Тогда
	Телефон = Телефон + Константа.ТелефонДомашний;
КонецЕсли;

Значение = Телефон;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ТелефонРабочийИндивидуальногоПредпринимателя</Код>
				<Наименование> --&gt; РегистрСведенийЗапись.КонтактнаяИнформация</Наименование>
				<Порядок>350</Порядок>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.КонтактнаяИнформация</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Объект</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Объект" Вид="Измерение"/>
						<КодПравилаКонвертации>ИндивидуальныйПредприниматель                     </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Тип</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Тип" Вид="Измерение" Тип="ПеречислениеСсылка.ТипыКонтактнойИнформации"/>
						<ПередВыгрузкой>Значение = "Телефон";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Вид</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Вид" Вид="Измерение"/>
						<ПередВыгрузкой>Значение = "00020"; ТипПриемника = "СправочникСсылка.ВидыКонтактнойИнформации";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Представление</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Представление" Вид="Ресурс" Тип="Строка"/>
						<ПередВыгрузкой>Телефон = "";

Если ПустоеЗначение(Константа.КодТел2) = 0 Тогда
	Телефон = Телефон + "(" + Константа.КодТел2 + ")"
КонецЕсли;

Если ПустоеЗначение(Константа.ТелефонРабочий) = 0 Тогда
	Телефон = Телефон + Константа.ТелефонРабочий;
КонецЕсли;

Значение = Телефон;
</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; Представление</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле3" Вид="Ресурс" Тип="Строка"/>
						<ПередВыгрузкой>Телефон = "";

Если ПустоеЗначение(Константа.КодТел2) = 0 Тогда
	Телефон = Телефон + "(" + Константа.КодТел2 + ")"
КонецЕсли;

Если ПустоеЗначение(Константа.ТелефонРабочий) = 0 Тогда
	Телефон = Телефон + Константа.ТелефонРабочий;
КонецЕсли;

Значение = Телефон;
</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>АдресИндивидуальногоПредпринимателя</Код>
				<Наименование> --&gt; РегистрСведенийЗапись.КонтактнаяИнформация</Наименование>
				<Порядок>400</Порядок>
				<ПередВыгрузкой>ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Адрес", Константа.Адрес);
ПолучитьСтруктуруАдреса();
</ПередВыгрузкой>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.КонтактнаяИнформация</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Объект</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Объект" Вид="Измерение"/>
						<КодПравилаКонвертации>ИндивидуальныйПредприниматель                     </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Тип</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Тип" Вид="Измерение" Тип="ПеречислениеСсылка.ТипыКонтактнойИнформации"/>
						<ПередВыгрузкой>Значение = "Адрес";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Представление</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Представление" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле1" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле2" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле3" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле4" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле5" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле6" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле7" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле8" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле9" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>13</Код>
						<Наименование> --&gt; Вид</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Вид" Вид="Измерение"/>
						<ПередВыгрузкой>Значение = "00002"; ТипПриемника = "СправочникСсылка.ВидыКонтактнойИнформации";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ФИОФизЛиц</Код>
				<Наименование>СправочникСсылка.Работники --&gt; РегистрСведенийЗапись.ФИОФизЛиц</Наименование>
				<Порядок>450</Порядок>
				<Источник>СправочникСсылка.Работники</Источник>
				<Приемник>РегистрСведенийЗапись.ФИОФизЛиц</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Параметры.ДатаКонцаПериодаВыгрузки;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; ФизЛицо</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизЛицо" Вид="Измерение"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Фамилия</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Фамилия" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Фамилия</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Имя" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; Фамилия</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Отчество" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ФИО_ИП</Код>
				<Наименование> --&gt; РегистрСведенийЗапись.ФИОФизЛиц</Наименование>
				<Порядок>500</Порядок>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.ФИОФизЛиц</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Параметры.ДатаКонцаПериодаВыгрузки;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; ФизЛицо</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизЛицо" Вид="Измерение"/>
						<КодПравилаКонвертации>ИндивидуальныйПредприниматель                     </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Фамилия</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Фамилия" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Имя</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Имя" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; Отчество</Наименование>
						<Порядок>250</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Отчество" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СведенияОбИнвалидностиФизлиц</Код>
				<Наименование>СправочникСсылка.Работники --&gt; РегистрСведенийЗапись.СведенияОбИнвалидностиФизлиц</Наименование>
				<Порядок>550</Порядок>
				<ПередВыгрузкой>Отказ = ?(Источник.Инвалид.Получить(Параметры.ДатаКонцаПериодаВыгрузки) = 1, 0, 1);</ПередВыгрузкой>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Источник>СправочникСсылка.Работники</Источник>
				<Приемник>РегистрСведенийЗапись.СведенияОбИнвалидностиФизлиц</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Параметры.ДатаВводаОстатков;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Физлицо</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Физлицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Инвалидность</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Инвалидность" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Значение = Источник.Инвалид.Получить(Параметры.ДатаКонцаПериодаВыгрузки);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; ДатаВыдачи</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаВыдачи" Вид="Реквизит" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Параметры.ДатаВводаОстатков;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ПаспортныеДанныеФизЛиц</Код>
				<Наименование>СправочникСсылка.Работники --&gt; РегистрСведенийЗапись.ПаспортныеДанныеФизЛиц</Наименование>
				<Порядок>600</Порядок>
				<ПередВыгрузкой>Параметры.ПаспортныеДанные = Источник.ДокументУдЛичность;
ВходящиеДанные = ПолучитьПаспортныеДанные(); 
Если ВходящиеДанные.РазмерСписка() =  0 Тогда
	Отказ = 1;
КонецЕсли;
</ПередВыгрузкой>
				<Источник>СправочникСсылка.Работники</Источник>
				<Приемник>РегистрСведенийЗапись.ПаспортныеДанныеФизЛиц</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Параметры.ДатаКонцаПериодаВыгрузки;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; ФизЛицо</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; ДокументВид</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДокументВид" Вид="Ресурс" Тип="СправочникСсылка.ДокументыУдостоверяющиеЛичность"/>
						<КодПравилаКонвертации>ДокументыУдостоверяющиеЛичность                   </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; ДокументСерия</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДокументСерия" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; ДокументНомер</Наименование>
						<Порядок>250</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДокументНомер" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; ДокументДатаВыдачи</Наименование>
						<Порядок>300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДокументДатаВыдачи" Вид="Ресурс" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование> --&gt; ДокументКемВыдан</Наименование>
						<Порядок>350</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДокументКемВыдан" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СтатусФизЛицКакНалогоплательщиковНДФЛ</Код>
				<Наименование> --&gt; РегистрСведенийЗапись.ГражданствоФизЛиц</Наименование>
				<Порядок>650</Порядок>
				<Источник>СправочникСсылка.Работники</Источник>
				<Приемник>РегистрСведенийЗапись.СтатусФизЛицКакНалогоплательщиковНДФЛ</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Параметры.ДатаКонцаПериодаВыгрузки;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; ФизЛицо</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Статус</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Статус" Вид="Ресурс" Тип="ПеречислениеСсылка.СтатусыНалогоплательщиковПоНДФЛ"/>
						<ПередВыгрузкой>Значение = ?(Источник.Статус.Получить(Параметры.ДатаКонцаПериодаВыгрузки) = 0, "НеРезидент", "Резидент");</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СтатусФизЛицКакНалогоплательщиковНДФЛНачало</Код>
				<Наименование>Справочник: </Наименование>
				<Порядок>700</Порядок>
				<ПередВыгрузкой>Если НачМесяца(ДатаНачала) = НачМесяца(Параметры.ДатаКонцаПериодаВыгрузки) Тогда
	Отказ = 1;
КонецЕсли;
</ПередВыгрузкой>
				<Источник>СправочникСсылка.Работники</Источник>
				<Приемник>РегистрСведенийЗапись.СтатусФизЛицКакНалогоплательщиковНДФЛ</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = ДатаНачала;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; ФизЛицо</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Статус</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Статус" Вид="Ресурс" Тип="ПеречислениеСсылка.СтатусыНалогоплательщиковПоНДФЛ"/>
						<ПередВыгрузкой>Значение = ?(Источник.Статус.Получить(ДатаНачала) = 0, "НеРезидент", "Резидент");</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ГражданствоФизЛиц</Код>
				<Наименование> --&gt; РегистрСведенийЗапись.ГражданствоФизЛиц</Наименование>
				<Порядок>750</Порядок>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Источник>СправочникСсылка.Работники</Источник>
				<Приемник>РегистрСведенийЗапись.ГражданствоФизЛиц</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Параметры.ДатаКонцаПериодаВыгрузки;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; ФизЛицо</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>Страна --&gt; Страна</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="Страна" Вид="Реквизит" Тип="СправочникСсылка.ОКСМ"/>
						<Приемник Имя="Страна" Вид="Ресурс" Тип="СправочникСсылка.КлассификаторСтранМира"/>
						<КодПравилаКонвертации>ОКСМ                                              </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; НеИмеетПравоНаПенсию</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НеИмеетПравоНаПенсию" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Значение = Источник.НеВзиматьВзносыПФРиФСС.Получить(Параметры.ДатаКонцаПериодаВыгрузки);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; НеИмеетПравоНаМедицинскоеСтрахование</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НеИмеетПравоНаМедицинскоеСтрахование" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Значение = Источник.НеВзиматьВзносыФОМС.Получить(Параметры.ДатаКонцаПериодаВыгрузки);</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ГражданствоФизЛицНачало</Код>
				<Наименование> --&gt; РегистрСведенийЗапись.ГражданствоФизЛиц</Наименование>
				<Порядок>800</Порядок>
				<ПередВыгрузкой>Если НачМесяца(ДатаНачала) = НачМесяца(Параметры.ДатаКонцаПериодаВыгрузки) Тогда
	Отказ = 1;
КонецЕсли;
</ПередВыгрузкой>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Источник>СправочникСсылка.Работники</Источник>
				<Приемник>РегистрСведенийЗапись.ГражданствоФизЛиц</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = ДатаНачала;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; ФизЛицо</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>Страна --&gt; Страна</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="Страна" Вид="Реквизит" Тип="СправочникСсылка.ОКСМ"/>
						<Приемник Имя="Страна" Вид="Ресурс" Тип="СправочникСсылка.КлассификаторСтранМира"/>
						<КодПравилаКонвертации>ОКСМ                                              </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; НеИмеетПравоНаПенсию</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НеИмеетПравоНаПенсию" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Значение = Источник.НеВзиматьВзносыПФРиФСС.Получить(ДатаНачала);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; НеИмеетПравоНаМедицинскоеСтрахование</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НеИмеетПравоНаМедицинскоеСтрахование" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Значение = Источник.НеВзиматьВзносыФОМС.Получить(ДатаНачала);</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ТелефоныФизЛица</Код>
				<Наименование>СправочникСсылка.Работники --&gt; РегистрСведенийЗапись.КонтактнаяИнформация</Наименование>
				<Порядок>850</Порядок>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Источник>СправочникСсылка.Работники</Источник>
				<Приемник>РегистрСведенийЗапись.КонтактнаяИнформация</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Объект</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Объект" Вид="Измерение"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Тип</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Тип" Вид="Измерение" Тип="ПеречислениеСсылка.ТипыКонтактнойИнформации"/>
						<ПередВыгрузкой>Значение = "Телефон";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>Телефон --&gt; Представление</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="Телефон" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="Представление" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>Телефон --&gt; Поле3</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Телефон" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="Поле3" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; Вид</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Вид" Вид="Измерение"/>
						<ПередВыгрузкой>Значение = "00007"; ТипПриемника = "СправочникСсылка.ВидыКонтактнойИнформации";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>АдресПоПропискеФизЛица</Код>
				<Наименование>СправочникСсылка.Работники --&gt; РегистрСведенийЗапись.КонтактнаяИнформация</Наименование>
				<Порядок>900</Порядок>
				<ПередВыгрузкой>ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Адрес", Источник.Адрес);
ПолучитьСтруктуруАдреса();</ПередВыгрузкой>
				<Источник>СправочникСсылка.Работники</Источник>
				<Приемник>РегистрСведенийЗапись.КонтактнаяИнформация</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Объект</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Объект" Вид="Измерение"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Тип</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Тип" Вид="Измерение" Тип="ПеречислениеСсылка.ТипыКонтактнойИнформации"/>
						<ПередВыгрузкой>Значение = "Адрес";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>13</Код>
						<Наименование> --&gt; Представление</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Представление" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле1" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>250</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле2" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле3" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>350</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле4" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле5" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>450</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле6" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>500</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле7" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>550</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле8" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>600</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле9" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование> --&gt; Тип</Наименование>
						<Порядок>650</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Вид" Вид="Измерение"/>
						<ПередВыгрузкой>Значение = "00002"; ТипПриемника = "СправочникСсылка.ВидыКонтактнойИнформации";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ФактическийАдресФизЛица</Код>
				<Наименование>СправочникСсылка.Работники --&gt; РегистрСведенийЗапись.КонтактнаяИнформация</Наименование>
				<Порядок>950</Порядок>
				<ПередВыгрузкой>ВходящиеДанные = СоздатьОбъект("СписокЗначений");
Если ПустоеЗначение(Источник.АдресФакт) = 0 Тогда
	ВходящиеДанные.Установить("Адрес", Источник.АдресФакт);
Иначе
	ВходящиеДанные.Установить("Адрес", Источник.Адрес);
КонецЕсли;

ПолучитьСтруктуруАдреса();</ПередВыгрузкой>
				<Источник>СправочникСсылка.Работники</Источник>
				<Приемник>РегистрСведенийЗапись.КонтактнаяИнформация</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Объект</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Объект" Вид="Измерение"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Тип</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Тип" Вид="Измерение" Тип="ПеречислениеСсылка.ТипыКонтактнойИнформации"/>
						<ПередВыгрузкой>Значение = "Адрес";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>13</Код>
						<Наименование> --&gt; Представление</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Представление" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле1" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>250</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле2" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле3" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>350</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле4" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле5" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>450</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле6" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>500</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле7" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>550</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле8" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>600</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле9" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование> --&gt; Вид</Наименование>
						<Порядок>650</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Вид" Вид="Измерение"/>
						<ПередВыгрузкой>Значение = "00003"; ТипПриемника = "СправочникСсылка.ВидыКонтактнойИнформации";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>НДФЛПрименениеВычетов</Код>
				<Наименование>СправочникСсылка.Работники --&gt; РегистрСведенийЗапись.НДФЛПрименениеВычетов</Наименование>
				<Порядок>1000</Порядок>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Источник>СправочникСсылка.Работники</Источник>
				<Приемник>РегистрСведенийЗапись.НДФЛПрименениеВычетов</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Физлицо</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Физлицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Ресурс" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>НДФЛСтандартныеВычетыФизлиц</Код>
				<Наименование>СправочникСсылка.Работники --&gt; РегистрСведенийЗапись.НДФЛСтандартныеВычетыФизлиц</Наименование>
				<Порядок>1050</Порядок>
				<ПередВыгрузкой>КлючВыгружаемыхДанных = ЗначениеВСтрокуВнутр(Источник) + "_" + ВходящиеДанные.Получить("Период");</ПередВыгрузкой>
				<Источник>СправочникСсылка.ВычетыСотрудниковПоНДФЛ</Источник>
				<Приемник>РегистрСведенийЗапись.НДФЛСтандартныеВычетыФизлиц</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Физлицо</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Физлицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; КодВычетаЛичный</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодВычетаЛичный" Вид="Ресурс" Тип="СправочникСсылка.ВычетыНДФЛ"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>НДФЛСтандартныеВычетыНаДетей</Код>
				<Наименование>СправочникСсылка.Работники --&gt; РегистрСведенийЗапись.НДФЛСтандартныеВычетыФизлиц</Наименование>
				<Порядок>1100</Порядок>
				<ПередВыгрузкой>КлючВыгружаемыхДанных = ЗначениеВСтрокуВнутр(Источник) + "_" + ВходящиеДанные.Получить("Период");</ПередВыгрузкой>
				<Источник>СправочникСсылка.ВычетыСотрудниковПоНДФЛ</Источник>
				<Приемник>РегистрСведенийЗапись.НДФЛСтандартныеВычетыНаДетей</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; ПериодЗавершения</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодЗавершения" Вид="Ресурс" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Физлицо</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Физлицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; КодВычета</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодВычета" Вид="Измерение" Тип="СправочникСсылка.ВычетыНДФЛ"/>
						<КодПравилаКонвертации>ВычетыНаРебенка                                   </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; КоличествоДетей</Наименование>
						<Порядок>250</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КоличествоДетей" Вид="Ресурс" Тип="Число"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>НДФЛСтандартныеВычетыНаДетейИнвалидов</Код>
				<Наименование>СправочникСсылка.Работники --&gt; РегистрСведенийЗапись.НДФЛСтандартныеВычетыФизлиц</Наименование>
				<Порядок>1150</Порядок>
				<ПередВыгрузкой>КлючВыгружаемыхДанных = ЗначениеВСтрокуВнутр(Источник) + "_" + ВходящиеДанные.Получить("Период");</ПередВыгрузкой>
				<Источник>СправочникСсылка.Работники</Источник>
				<Приемник>РегистрСведенийЗапись.НДФЛСтандартныеВычетыНаДетей</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Физлицо</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Физлицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; КодВычета</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодВычета" Вид="Измерение" Тип="СправочникСсылка.ВычетыНДФЛ"/>
						<КодПравилаКонвертации>ВычетыНаРебенкаИнвалида                           </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник.РазмерВычетаНаРебенкаИнвалида.Получить(ВходящиеДанные.Получить("Период"));</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; КоличествоДетей</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КоличествоДетей" Вид="Ресурс" Тип="Число"/>
						<ПередВыгрузкой>Значение = Источник.ДетиИнвалиды.Получить(ВходящиеДанные.Получить("Период"));</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ТелефоныКонтрагента</Код>
				<Наименование>СправочникСсылка.Контрагенты --&gt; РегистрСведенийЗапись.КонтактнаяИнформация</Наименование>
				<Порядок>1200</Порядок>
				<Источник>СправочникСсылка.Контрагенты</Источник>
				<Приемник>РегистрСведенийЗапись.КонтактнаяИнформация</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Объект</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Объект" Вид="Измерение"/>
						<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Тип</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Тип" Вид="Измерение" Тип="ПеречислениеСсылка.ТипыКонтактнойИнформации"/>
						<ПередВыгрузкой>Значение = "Телефон";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>Телефоны --&gt; Представление</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="Телефоны" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="Представление" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>Телефоны --&gt; Представление</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="Телефоны" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="Поле3" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; Вид</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Вид" Вид="Измерение"/>
						<ПередВыгрузкой>Значение = "00005"; ТипПриемника = "СправочникСсылка.ВидыКонтактнойИнформации";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ЮридическийАдресКонтрагента</Код>
				<Наименование>СправочникСсылка.Контрагенты --&gt; РегистрСведенийЗапись.КонтактнаяИнформация</Наименование>
				<Порядок>1250</Порядок>
				<ПередВыгрузкой>ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Адрес", Источник.ЮридическийАдрес);
ПолучитьСтруктуруАдреса();</ПередВыгрузкой>
				<Источник>СправочникСсылка.Контрагенты</Источник>
				<Приемник>РегистрСведенийЗапись.КонтактнаяИнформация</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Объект</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Объект" Вид="Измерение"/>
						<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Тип</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Тип" Вид="Измерение" Тип="ПеречислениеСсылка.ТипыКонтактнойИнформации"/>
						<ПередВыгрузкой>Значение = "Адрес";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Представление</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Представление" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле1" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле2" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле3" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле4" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле5" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле6" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле7" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле8" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле9" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>13</Код>
						<Наименование> --&gt; Вид</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Вид" Вид="Измерение"/>
						<ПередВыгрузкой>Значение = "00010"; ТипПриемника = "СправочникСсылка.ВидыКонтактнойИнформации";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ФактическийАдресКонтрагента</Код>
				<Наименование>СправочникСсылка.Контрагенты --&gt; РегистрСведенийЗапись.КонтактнаяИнформация</Наименование>
				<Порядок>1300</Порядок>
				<ПередВыгрузкой>ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Адрес", Источник.ПочтовыйАдрес);
ПолучитьСтруктуруАдреса();</ПередВыгрузкой>
				<Источник>СправочникСсылка.Контрагенты</Источник>
				<Приемник>РегистрСведенийЗапись.КонтактнаяИнформация</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Объект</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Объект" Вид="Измерение"/>
						<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Тип</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Тип" Вид="Измерение" Тип="ПеречислениеСсылка.ТипыКонтактнойИнформации"/>
						<ПередВыгрузкой>Значение = "Адрес";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Представление</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Представление" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле1" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле2" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле3" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле4" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле5" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле6" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле7" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле8" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>13</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле9" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Вид</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Вид" Вид="Измерение"/>
						<ПередВыгрузкой>Значение = "00008"; ТипПриемника = "СправочникСсылка.ВидыКонтактнойИнформации";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ЦеныНоменклатуры</Код>
				<Наименование>СправочникСсылка.Цены --&gt; РегистрСведенийЗапись.ЦеныНоменклатуры</Наименование>
				<Порядок>1350</Порядок>
				<Источник>СправочникСсылка.Цены</Источник>
				<Приемник>РегистрСведенийЗапись.ЦеныНоменклатуры</Приемник>
				<Свойства/>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВидыПлатежейВГосБюджет</Код>
				<Наименование>ПеречислениеСсылка.ВидыПлатежей --&gt; ПеречислениеСсылка.ВидыПлатежейВГосБюджет</Наименование>
				<Порядок>1400</Порядок>
				<Источник>ПеречислениеСсылка.ВидыПлатежей</Источник>
				<Приемник>ПеречислениеСсылка.ВидыПлатежейВГосБюджет</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>Налог --&gt; Налог</Наименование>
						<Порядок>50</Порядок>
						<Источник>Налог</Источник>
						<Приемник>Налог</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>НалогАкт --&gt; НалогАкт</Наименование>
						<Порядок>100</Порядок>
						<Источник>НалогАкт</Источник>
						<Приемник>НалогАкт</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>НалогСам --&gt; НалогСам</Наименование>
						<Порядок>150</Порядок>
						<Источник>НалогСам</Источник>
						<Приемник>НалогСам</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>НеПринято --&gt; НеПринято</Наименование>
						<Порядок>200</Порядок>
						<Источник>НеПринято</Источник>
						<Приемник>НеПринято</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>ПениАкт --&gt; ПениАкт</Наименование>
						<Порядок>250</Порядок>
						<Источник>ПениАкт</Источник>
						<Приемник>ПениАкт</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>ПениСам --&gt; ПениСам</Наименование>
						<Порядок>300</Порядок>
						<Источник>ПениСам</Источник>
						<Приемник>ПениСам</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>ПолученоИзФонда --&gt; ПолученоИзФонда</Наименование>
						<Порядок>350</Порядок>
						<Источник>ПолученоИзФонда</Источник>
						<Приемник>ПолученоИзФонда</Приемник>
					</Значение>
					<Значение>
						<Код>8</Код>
						<Наименование>РасходыПоСтрахованию --&gt; РасходыПоСтрахованию</Наименование>
						<Порядок>400</Порядок>
						<Источник>РасходыПоСтрахованию</Источник>
						<Приемник>РасходыПоСтрахованию</Приемник>
					</Значение>
					<Значение>
						<Код>9</Код>
						<Наименование>Штраф --&gt; Штраф</Наименование>
						<Порядок>450</Порядок>
						<Источник>Штраф</Источник>
						<Приемник>Штраф</Приемник>
					</Значение>
					<Значение>
						<Код>10</Код>
						<Наименование>ПолученоОтНалоговогоОргана --&gt; Налог</Наименование>
						<Порядок>500</Порядок>
						<Источник>ПолученоОтНалоговогоОргана</Источник>
						<Приемник>Налог</Приемник>
					</Значение>
				</Значения>
			</Правило>
		</Группа>
		<Группа>
			<Код>Операции</Код>
			<Наименование>Операции                                          </Наименование>
			<Порядок>250</Порядок>
			<Правило>
				<Код>ВводНачальныхОстатков</Код>
				<Наименование> --&gt; ДокументСсылка.ВводНачальныхОстатков</Наименование>
				<Порядок>50</Порядок>
				<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные.Получить("РазделУчета")) = 1 Тогда
	Отказ = 1;
КонецЕсли;
Если ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
КонецЕсли;
</ПередВыгрузкой>
				<ПослеЗагрузки>ПровестиЗаписьНеЗаписанныхОбъектов();</ПослеЗагрузки>
				<Приемник>ДокументСсылка.ВводНачальныхОстатков</Приемник>
				<Свойства>
					<Группа>
						<Код>11</Код>
						<Наименование> --&gt; ОС</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОС" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "ОсновныеСредства" Тогда
	Отказ = 1;
ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
Иначе
	КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");		
КонецЕсли;
</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>108</Код>
							<Наименование> --&gt; ИнвентарныйНомерРегл</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИнвентарныйНомерРегл" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ИнвентарныйНомер;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>109</Код>
							<Наименование> --&gt; ИнвентарныйНомерРегл</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОсновноеСредство" Вид="Реквизит" Тип="СправочникСсылка.ОсновныеСредства"/>
							<КодПравилаКонвертации>ОсновныеСредства                                  </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Объект;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>110</Код>
							<Наименование> --&gt; ИнвентарныйНомерРегл</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПервоначальнаяСтоимостьБУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ПервоначальнаяСтоимость;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>111</Код>
							<Наименование> --&gt; ИнвентарныйНомерРегл</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПервоначальнаяСтоимостьНУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ПервоначальнаяСтоимость;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>225</Код>
							<Наименование> --&gt; ИнвентарныйНомерРегл</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПервоначальнаяСтоимостьУСН" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ПервоначальнаяСтоимость;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>112</Код>
							<Наименование> --&gt; СчетУчетаБУ</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчетаБУ" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<ПередВыгрузкой>Значение = "ОСвОрганизации"</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>113</Код>
							<Наименование> --&gt; СчетУчетаБУ</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ТекущаяСтоимостьБУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ТекущаяСтоимость;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>131</Код>
							<Наименование> --&gt; СчетУчетаБУ</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НакопленнаяАмортизацияБУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НакопленнаяАмортизация;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>114</Код>
							<Наименование> --&gt; СчетУчетаБУ</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ТекущаяСтоимостьНУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ТекущаяСтоимость;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>132</Код>
							<Наименование> --&gt; СчетУчетаБУ</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НакопленнаяАмортизацияНУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НакопленнаяАмортизация;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>115</Код>
							<Наименование> --&gt; СчетУчетаБУ</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетАмортизацииБУ" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<ПередВыгрузкой>Значение = "АмортизацияОС_01";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>116</Код>
							<Наименование> --&gt; СчетУчетаБУ</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособПоступленияРегл" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыПоступленияАктивов"/>
							<ПередВыгрузкой>Значение = "ПриобретениеЗаПлату";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>117</Код>
							<Наименование> --&gt; СчетУчетаБУ</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПорядокПогашенияСтоимостиБУ" Вид="Реквизит" Тип="ПеречислениеСсылка.ПорядокПогашенияСтоимостиОС"/>
							<ПередВыгрузкой>Значение = "НачислениеАмортизации";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>118</Код>
							<Наименование> --&gt; СчетУчетаБУ</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособНачисленияАмортизацииБУ" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыНачисленияАмортизацииОС"/>
							<ПередВыгрузкой>Если ОбъектКоллекции.ДатаПриобретения &lt;= '31.12.2002' Тогда
	Значение = "ПоЕНАОФ";	
Иначе
	Значение = "Линейный";
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>227</Код>
							<Наименование> --&gt; СчетУчетаБУ</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СрокПолезногоИспользованияУСН" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Если ОбъектКоллекции.ДатаПриобретения &lt;= '31.12.2002' Тогда
	Значение = ОбъектКоллекции.СрокПолезногоИспользования*12;
Иначе
	Значение = ОбъектКоллекции.СрокПолезногоИспользования;
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>119</Код>
							<Наименование> --&gt; СчетУчетаБУ</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СрокПолезногоИспользованияБУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Если ОбъектКоллекции.ДатаПриобретения &lt;= '31.12.2002' Тогда
	Значение = ОбъектКоллекции.СрокПолезногоИспользования*12;
Иначе
	Значение = ОбъектКоллекции.СрокПолезногоИспользования;
КонецЕсли;
	</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>120</Код>
							<Наименование> --&gt; СчетУчетаБУ</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НачислятьАмортизациюБУ" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НачислятьАмортизацию;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>121</Код>
							<Наименование> --&gt; СпособОтраженияРасходовПоАмортизации</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособОтраженияРасходовПоАмортизации" Вид="Реквизит" Тип="СправочникСсылка.СпособыОтраженияРасходовПоАмортизации"/>
							<КодПравилаКонвертации>СпособыОтраженияРасходовПоАмортизации             </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "# Служебный # &lt;1С:Предприниматель 7.7&gt;";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>228</Код>
							<Наименование> --&gt; СчетУчетаБУ</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПорядокВключенияСтоимостиВСоставРасходовУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.ПорядокВключенияСтоимостиОСиНМАВСоставРасходовУСН"/>
							<ПередВыгрузкой>Значение = "ВключитьВСоставАмортизируемогоИмущества";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>122</Код>
							<Наименование> --&gt; СчетУчетаБУ</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПорядокВключенияСтоимостиВСоставРасходовНУ" Вид="Реквизит" Тип="ПеречислениеСсылка.ПорядокВключенияСтоимостиОСВСоставРасходовНУ"/>
							<ПередВыгрузкой>Значение = "НачислениеАмортизации";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>123</Код>
							<Наименование> --&gt; СчетУчетаБУ</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="МетодНачисленияАмортизацииНУ" Вид="Реквизит" Тип="ПеречислениеСсылка.МетодыНачисленияАмортизации"/>
							<ПередВыгрузкой>Если ОбъектКоллекции.ДатаПриобретения &lt;= '31.12.2002' Тогда
	Значение = "ПоЕНАОФ";	
Иначе
	Значение = "Линейный";
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>124</Код>
							<Наименование> --&gt; СчетУчетаБУ</Наименование>
							<Порядок>950</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СрокПолезногоИспользованияНУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Если ОбъектКоллекции.ДатаПриобретения &lt;= '31.12.2002' Тогда
	Значение = ОбъектКоллекции.СрокПолезногоИспользования*12;
Иначе
	Значение = ОбъектКоллекции.СрокПолезногоИспользования;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>125</Код>
							<Наименование> --&gt; СчетУчетаБУ</Наименование>
							<Порядок>1000</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НачислятьАмортизациюНУ" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НачислятьАмортизацию;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>126</Код>
							<Наименование> --&gt; СчетУчетаБУ</Наименование>
							<Порядок>1050</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РеквизитыДокументаОплаты" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.РеквизитыДокументаОплаты;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>127</Код>
							<Наименование> --&gt; СчетУчетаБУ</Наименование>
							<Порядок>1100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаПринятияКУчетуРегл" Вид="Реквизит" Тип="Дата"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ДатаПринятияКУчету;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>226</Код>
							<Наименование> --&gt; СчетУчетаБУ</Наименование>
							<Порядок>1100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаПриобретенияУСН" Вид="Реквизит" Тип="Дата"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ДатаПринятияКУчету;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>128</Код>
							<Наименование> --&gt; СчетУчетаБУ</Наименование>
							<Порядок>1150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СостояниеПринятияКУчетуРегл" Вид="Реквизит" Тип="СправочникСсылка.СобытияОС"/>
							<КодПравилаКонвертации>СобытияОС                                         </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Событие;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>129</Код>
							<Наименование> --&gt; НазваниеДокументаПринятияКУчетуРегл</Наименование>
							<Порядок>1200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НазваниеДокументаПринятияКУчетуРегл" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Значение = "Акт о примемке-передаче объетка ОС";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>130</Код>
							<Наименование> --&gt; НазваниеДокументаПринятияКУчетуРегл</Наименование>
							<Порядок>1250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НомерДокументаПринятияКУчетуРегл" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НомерДокумента;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>235</Код>
							<Наименование> --&gt; КоэффициентАмортизацииБУ</Наименование>
							<Порядок>1350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КоэффициентАмортизацииБУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Объект.ГодоваяНорма.Получить(Параметры.ДатаКонцаПериодаВыгрузки);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>236</Код>
							<Наименование> --&gt; КоэффициентАмортизацииНУ</Наименование>
							<Порядок>1400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КоэффициентАмортизацииНУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Объект.ГодоваяНорма.Получить(Параметры.ДатаКонцаПериодаВыгрузки);</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>9</Код>
						<Наименование> --&gt; НМА</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НМА" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "НематериальныеАктивыИНИОКР" Тогда
	Отказ = 1;
ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
Иначе
	КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");		
КонецЕсли;

</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>136</Код>
							<Наименование> --&gt; НематериальныйАктив</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НематериальныйАктив" Вид="Реквизит" Тип="СправочникСсылка.НематериальныеАктивы"/>
							<КодПравилаКонвертации>НематериальныеАктивы                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Объект;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>133</Код>
							<Наименование> --&gt; ВидОбъектаУчета</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидОбъектаУчета" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыОбъектовУчетаНМА"/>
							<ПередВыгрузкой>Значение = "НематериальныйАктив";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>134</Код>
							<Наименование> --&gt; ПервоначальнаяСтоимостьБУ</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПервоначальнаяСтоимостьБУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ПервоначальнаяСтоимость;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>135</Код>
							<Наименование> --&gt; ПервоначальнаяСтоимостьБУ</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПервоначальнаяСтоимостьНУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ПервоначальнаяСтоимость;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>229</Код>
							<Наименование> --&gt; ПервоначальнаяСтоимостьБУ</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПервоначальнаяСтоимостьУСН" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ПервоначальнаяСтоимость;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>137</Код>
							<Наименование> --&gt; СчетУчетаБУ</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчетаБУ" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<ПередВыгрузкой> Значение = "НематериальныеАктивыОрганизации";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>138</Код>
							<Наименование> --&gt; ТекущаяСтоимостьБУ</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ТекущаяСтоимостьБУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ТекущаяСтоимость;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>139</Код>
							<Наименование> --&gt; ТекущаяСтоимостьБУ</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ТекущаяСтоимостьНУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ТекущаяСтоимость;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>151</Код>
							<Наименование> --&gt; ТекущаяСтоимостьБУ</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НакопленнаяАмортизацияБУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НакопленнаяАмортизация;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>152</Код>
							<Наименование> --&gt; ТекущаяСтоимостьБУ</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НакопленнаяАмортизацияНУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НакопленнаяАмортизация;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>140</Код>
							<Наименование> --&gt; СчетНачисленияАмортизацииБУ</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетНачисленияАмортизацииБУ" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<ПередВыгрузкой>Значение = "АмортизацияНематериальныхАктивов";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>141</Код>
							<Наименование> --&gt; СпособОтраженияРасходов</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособОтраженияРасходов" Вид="Реквизит" Тип="СправочникСсылка.СпособыОтраженияРасходовПоАмортизации"/>
							<КодПравилаКонвертации>СпособыОтраженияРасходовПоАмортизации             </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "# Служебный # &lt;1С:Предприниматель 7.7&gt;";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>142</Код>
							<Наименование> --&gt; СчетНачисленияАмортизацииБУ</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НачислятьАмортизациюБУ" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НачислятьАмортизацию;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>231</Код>
							<Наименование> --&gt; СчетНачисленияАмортизацииБУ</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПорядокВключенияСтоимостиВСоставРасходовУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.ПорядокВключенияСтоимостиОСиНМАВСоставРасходовУСН"/>
							<ПередВыгрузкой>Значение = "ВключитьВСоставАмортизируемогоИмущества";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>230</Код>
							<Наименование> --&gt; СчетНачисленияАмортизацииБУ</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СрокПолезногоИспользованияУСН" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СрокПолезногоИспользования;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>143</Код>
							<Наименование> --&gt; СчетНачисленияАмортизацииБУ</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СрокПолезногоИспользованияБУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СрокПолезногоИспользования;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>147</Код>
							<Наименование> --&gt; СчетНачисленияАмортизацииБУ</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НачислятьАмортизациюНУ" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НачислятьАмортизацию;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>148</Код>
							<Наименование> --&gt; СчетНачисленияАмортизацииБУ</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СрокПолезногоИспользованияНУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СрокПолезногоИспользования;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>144</Код>
							<Наименование> --&gt; СпособНачисленияАмортизацииБУ</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособНачисленияАмортизацииБУ" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыНачисленияАмортизацииНМА"/>
							<ПередВыгрузкой>Значение = "Линейный";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>145</Код>
							<Наименование> --&gt; СпособПоступления</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособПоступления" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыПоступленияАктивов"/>
							<ПередВыгрузкой>Значение = "ПриобретениеЗаПлату";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>150</Код>
							<Наименование> --&gt; СпособПоступления</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаПриобретения" Вид="Реквизит" Тип="Дата"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ДатаПриобретения;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>146</Код>
							<Наименование> --&gt; СпособПоступления</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаПринятияКУчетуРегл" Вид="Реквизит" Тип="Дата"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ДатаПринятияКУчету;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>149</Код>
							<Наименование> --&gt; СчетНачисленияАмортизацииБУ</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РеквизитыДокументаОплаты" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.РеквизитыДокументаОплаты;</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>3</Код>
						<Наименование> --&gt; МПЗПриобретенные</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="МПЗПриобретенные" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "КапитальныеВложения")
	И (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "Материалы")
	И (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "Товары")
	И (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "ГотоваяПродукцияИПолуфабрикаты") Тогда
	Отказ = 1;
ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
Иначе
	КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>44</Код>
							<Наименование> --&gt; НомерСтрокиТЧ</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НомерСтрокиТЧ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НомерСтрокиТЧ;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>62</Код>
							<Наименование> --&gt; НомерСтрокиТЧ</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Ключ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Ключ;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>28</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СчетУчета;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>29</Код>
							<Наименование> --&gt; Номенклатура</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Номенклатура" Вид="Реквизит"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Номенклатура;
Если ОбъектКоллекции.СчетУчета = "СтроительствоОбъектовОсновныхСредств" Тогда
	ИмяПКО = "ОбъектыСтроительства";
Иначе
	ИмяПКО = "Номенклатура";
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>30</Код>
							<Наименование> --&gt; Склад</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Склад" Вид="Реквизит" Тип="СправочникСсылка.Склады"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Склад;
ИмяПКО = "Склады";
Если ПустоеЗначение(Значение) = 1 Тогда
	Если (ВходящиеДанные.Получить("РазделУчета") = "Материалы")
		ИЛИ (ВходящиеДанные.Получить("РазделУчета") = "Товары")
		ИЛИ (ВходящиеДанные.Получить("РазделУчета") = "ГотоваяПродукцияИПолуфабрикаты") 
		ИЛИ ((ВходящиеДанные.Получить("РазделУчета") = "КапитальныеВложения") И (ОбъектКоллекции.СчетУчета &lt;&gt; "СтроительствоОбъектовОсновныхСредств")) Тогда
		Значение = "СкладПоУмолчанию";
		ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
		ИсходящиеДанные.Установить("Наименование", Параметры.ПараметрыАлгоритмов.Получить("СкладПоУмолчанию"));
		ИмяПКО = "СкладПоУмолчанию";
	КонецЕсли;
КонецЕсли;



</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>31</Код>
							<Наименование> --&gt; Количество</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Если ОбъектКоллекции.СчетУчета = "СтроительствоОбъектовОсновныхСредств" Тогда
	Отказ = 1;
Иначе
	Значение = ОбъектКоллекции.Количество;
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>32</Код>
							<Наименование> --&gt; Сумма</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Сумма;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>33</Код>
							<Наименование> --&gt; НДС</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НДС" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Если ОбъектКоллекции.СчетУчета = "СтроительствоОбъектовОсновныхСредств" Тогда
	Отказ = 1;
Иначе
	Значение = ОбъектКоллекции.НДС;
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>34</Код>
							<Наименование> --&gt; НДСВключенВстоимость</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НДСВключенВстоимость" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Если ОбъектКоллекции.СчетУчета = "СтроительствоОбъектовОсновныхСредств" Тогда
	Отказ = 1;
Иначе
	Значение = ОбъектКоллекции.НДСВключенВстоимость;
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>35</Код>
							<Наименование> --&gt; Партия</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Партия" Вид="Реквизит"/>
							<ПередВыгрузкой>Если ОбъектКоллекции.СчетУчета = "СтроительствоОбъектовОсновныхСредств" Тогда
	Отказ = 1;
Иначе
	Если ПустоеЗначение(ОбъектКоллекции.Партия) = 1 Тогда	
		Значение = ОбъектКоллекции.СчетУчета;
		ИмяПКО = "ПустаяПартия";
	Иначе
		Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");	
		Значение = ОбъектКоллекции.Партия;
		ИмяПКО = "ДокументРасчетовСКонтрагентом";
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>36</Код>
							<Наименование> --&gt; Оплачен</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Оплачен" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Оплачен;</ПередВыгрузкой>
						</Свойство>
						<Свойство Отключить="true">
							<Код>37</Код>
							<Наименование> --&gt; РеквизитыДокументаОплаты</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РеквизитыДокументаОплаты" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.РеквизитыДокументаОплаты;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>38</Код>
							<Наименование> --&gt; РасчетныйДокумент</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РасчетныйДокумент" Вид="Реквизит"/>
							<КодПравилаКонвертации>ДокументРасчетовСКонтрагентом                     </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ОбъектКоллекции.СчетУчета = "СтроительствоОбъектовОсновныхСредств" Тогда
	Отказ = 1;
Иначе
	Если ПустоеЗначение(ОбъектКоллекции.Партия) = 1 Тогда	
		Значение = ОбъектКоллекции.СчетУчета;
		ИмяПКО = "ПустаяПартия";
	Иначе
		Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");	
		Значение = ОбъектКоллекции.Партия;
		ИмяПКО = "ДокументРасчетовСКонтрагентом";
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>41</Код>
							<Наименование> --&gt; ВалютнаяСумма</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютнаяСумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Если ОбъектКоллекции.СчетУчета = "СтроительствоОбъектовОсновныхСредств" Тогда
	Отказ = 1;
Иначе
	Значение = ОбъектКоллекции.Сумма;
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>42</Код>
							<Наименование> --&gt; ВалютныйНДС</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютныйНДС" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Если ОбъектКоллекции.СчетУчета = "СтроительствоОбъектовОсновныхСредств" Тогда
	Отказ = 1;
Иначе
	Значение = ОбъектКоллекции.НДС;
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>43</Код>
							<Наименование> --&gt; Валюта</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Валюта" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = Параметры.Рубли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>40</Код>
							<Наименование> --&gt; ОтражениеВУСН</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтражениеВУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.ОтражениеВУСН"/>
							<ПередВыгрузкой>Если ОбъектКоллекции.СчетУчета = "СтроительствоОбъектовОсновныхСредств" Тогда
	Отказ = 1;
ИначеЕсли (Параметры.ПараметрыАлгоритмов.Получить("УСН") = 1) 
	И (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "ГотоваяПродукцияИПолуфабрикаты") Тогда
	Значение = "Принимаются";
Иначе
	Отказ = 1;
КонецЕсли</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>39</Код>
							<Наименование> --&gt; СтатусыОплатыРасходовУСН</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтатусыОплатыРасходовУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.СтатусыРасходовУСН"/>
							<ПередВыгрузкой>Если ОбъектКоллекции.СчетУчета = "СтроительствоОбъектовОсновныхСредств" Тогда
	Отказ = 1;
ИначеЕсли (Параметры.ПараметрыАлгоритмов.Получить("УСН") = 1) 
	И (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "ГотоваяПродукцияИПолуфабрикаты") Тогда
	
	Если ОбъектКоллекции.Оплачен = 0 Тогда
		Значение = "НеСписаноНеОплачено";
	Иначе		
		Если ВходящиеДанные.Получить("РазделУчета") = "Товары" Тогда
			Если Параметры.ПараметрыАлгоритмов.Получить("ПорядокПризнанияРасходовПоТоварам") = Перечисление.ПорядокПризнанияРасходовПоТоварам.ПоОплатеПоставщику Тогда
				Значение = "НеСписаноПринято";
			Иначе
				Значение = "НеСписано";
			КонецЕсли;
		Иначе
			Если Параметры.ПараметрыАлгоритмов.Получить("ПорядокПризнанияМатериальныхРасходов") = Перечисление.ПорядокПризнанияМатериальныхРасходов.ПоОплатеПоставщику Тогда
				Значение = "НеСписаноПринято";
			Иначе
				Значение = "НеСписано";
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>201</Код>
							<Наименование> --&gt; ОтражениеВУСН</Наименование>
							<Порядок>950</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтатусыПартийУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.СтатусыПартийУСН"/>
							<ПередВыгрузкой>Если ОбъектКоллекции.СчетУчета = "СтроительствоОбъектовОсновныхСредств" Тогда
	Отказ = 1;
ИначеЕсли (Параметры.ПараметрыАлгоритмов.Получить("УСН") = 1) 
	И (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "ГотоваяПродукцияИПолуфабрикаты") Тогда
	Значение = "Купленные";
Иначе
	Отказ = 1;
КонецЕсли
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>233</Код>
							<Наименование> --&gt; СпособСтроительства</Наименование>
							<Порядок>1000</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособСтроительства" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыСтроительства"/>
							<ПередВыгрузкой>Если ОбъектКоллекции.СчетУчета = "СтроительствоОбъектовОсновныхСредств" Тогда
	Значение = "Хозспособ";
Иначе
	Отказ = 1;
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа Отключить="true">
						<Код>4</Код>
						<Наименование> --&gt; МПЗОтгруженные</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="МПЗОтгруженные" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "ТоварыОтгруженные" Тогда
	Отказ = 1;
ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
Иначе
	КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");
КонецЕсли;
</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>63</Код>
							<Наименование> --&gt; Ключ</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Ключ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Ключ;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>64</Код>
							<Наименование> --&gt; Ключ</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СчетУчета;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>65</Код>
							<Наименование> --&gt; Ключ</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
							<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Номенклатура;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>66</Код>
							<Наименование> --&gt; Ключ</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидМПЗ" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыМПЗ"/>
							<КодПравилаКонвертации>ВидыМПЗ                                           </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ВидМПЗ;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>67</Код>
							<Наименование> --&gt; Ключ</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Покупатель" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Покупатель;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>68</Код>
							<Наименование> --&gt; Ключ</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоговорПокупателя" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПокупателем");
Значение = ОбъектКоллекции.ДоговорПокупателя;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>80</Код>
							<Наименование> --&gt; Ключ</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДокументОтгрузки" Вид="Реквизит"/>
							<КодПравилаКонвертации>ДокументРасчетовСКонтрагентом                     </КодПравилаКонвертации>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПокупателем");
Значение = ОбъектКоллекции.ДокументОтгрузки;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>69</Код>
							<Наименование> --&gt; Ключ</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Оплачен" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Оплачен;</ПередВыгрузкой>
						</Свойство>
						<Свойство Отключить="true">
							<Код>70</Код>
							<Наименование> --&gt; Ключ</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РеквизитыДокументаОплаты" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.РеквизитыДокументаОплаты;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>71</Код>
							<Наименование> --&gt; Ключ</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Поставщик" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ОбъектКоллекции.Оплачен = 1 Тогда
	Отказ = 1;
Иначе
	Значение = ОбъектКоллекции.Поставщик;
КонецЕсли;

	</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>72</Код>
							<Наименование> --&gt; Ключ</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоговорПоставщика" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ОбъектКоллекции.Оплачен = 1 Тогда
	Отказ = 1;
Иначе
	Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");
	Значение = ОбъектКоллекции.ДоговорПоставщика;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>73</Код>
							<Наименование> --&gt; Ключ</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Партия" Вид="Реквизит"/>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.Партия) = 1 Тогда
	Значение = ОбъектКоллекции.СчетУчета;
	ИмяПКО = "ПустаяПартия";
Иначе
	Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");
	Значение = ОбъектКоллекции.Партия;
	ИмяПКО = "ДокументРасчетовСКонтрагентом";
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>74</Код>
							<Наименование> --&gt; Ключ</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Количество;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>75</Код>
							<Наименование> --&gt; Ключ</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Выручка" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Выручка;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>76</Код>
							<Наименование> --&gt; Ключ</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НДСНачисленный" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НДСНачисленный;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>164</Код>
							<Наименование> --&gt; НоменклатурнаяГруппа</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НоменклатурнаяГруппа" Вид="Реквизит" Тип="СправочникСсылка.НоменклатурныеГруппы"/>
							<КодПравилаКонвертации>НоменклатурныеГруппы                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НоменклатурнаяГруппа;
ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
ИсходящиеДанные.Установить("Наименование", Значение);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>165</Код>
							<Наименование> --&gt; ХарактерДеятельности</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ХарактерДеятельности" Вид="Реквизит" Тип="ПеречислениеСсылка.ХарактерДеятельности"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ХарактерДеятельности;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>77</Код>
							<Наименование> --&gt; Ключ</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>//Если Параметры.ПараметрыАлгоритмов.Получить("УСН") = 1 Тогда
	Значение = ОбъектКоллекции.Сумма;
//Иначе
//	Значение = 0;
//КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>78</Код>
							<Наименование> --&gt; Ключ</Наименование>
							<Порядок>950</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НДС" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НДС;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>79</Код>
							<Наименование> --&gt; Ключ</Наименование>
							<Порядок>1000</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НДСВключенВстоимость" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НДСВключенВстоимость;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>200</Код>
							<Наименование> --&gt; ОтражениеВУСН</Наименование>
							<Порядок>1050</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтатусыПартийУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.СтатусыПартийУСН"/>
							<ПередВыгрузкой>Значение = "НаРеализации";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>199</Код>
							<Наименование> --&gt; ОтражениеВУСН</Наименование>
							<Порядок>1050</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтатусыОплатыРасходовУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.СтатусыРасходовУСН"/>
							<ПередВыгрузкой>Если Параметры.ПараметрыАлгоритмов.Получить("УСН") = 1 Тогда
	Если ОбъектКоллекции.Оплачен = 0 Тогда
		Значение = "НеСписаноНеОплачено";
	Иначе		
		Если ВходящиеДанные.Получить("СчетУчета") &lt;&gt; "ГотоваяПродукцияОтгруженная" Тогда
			Если Параметры.ПараметрыАлгоритмов.Получить("ПорядокПризнанияРасходовПоТоварам") = Перечисление.ПорядокПризнанияРасходовПоТоварам.ПоОплатеПоставщику Тогда
				Значение = "НеСписаноПринято";
			Иначе
				Значение = "НеСписано";
			КонецЕсли;
		Иначе
			Значение = "НеСписаноПринято";						
		КонецЕсли;
	КонецЕсли;
Иначе
	Значение = "";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>198</Код>
							<Наименование> --&gt; ОтражениеВУСН</Наименование>
							<Порядок>1050</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтражениеВУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.ОтражениеВУСН"/>
							<ПередВыгрузкой>Если Параметры.ПараметрыАлгоритмов.Получить("УСН") = 1 Тогда
	Значение = "Принимаются";
Иначе
	Значение = "";
КонецЕсли</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>17</Код>
						<Наименование> --&gt; РасчетыСКонтрагентами</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РасчетыСКонтрагентами" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "РасчетыСПоставщикамиИПодрядчиками")
	И (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "РасчетыСПокупателямиИЗаказчиками")
	И (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "РасчетыСПрочимиДебиторамиИКредиторами") Тогда
	Отказ = 1;
ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
Иначе	
	КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");	
КонецЕсли;

</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>90</Код>
							<Наименование> --&gt; Контрагент</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СчетУчета;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>81</Код>
							<Наименование> --&gt; Контрагент</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Контрагент;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>82</Код>
							<Наименование> --&gt; Контрагент</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ВходящиеДанные.Получить("РазделУчета") = "РасчетыСПоставщикамиИПодрядчиками" Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");
ИначеЕсли ВходящиеДанные.Получить("РазделУчета") = "РасчетыСПокупателямиИЗаказчиками" Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПокупателем");
Иначе
	Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "Прочее");
КонецЕсли;


Значение = ОбъектКоллекции.ДоговорКонтрагента;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>89</Код>
							<Наименование> --&gt; Контрагент</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Документ" Вид="Реквизит"/>
							<КодПравилаКонвертации>ДокументРасчетовСКонтрагентом                     </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ВходящиеДанные.Получить("РазделУчета") = "РасчетыСПоставщикамиИПодрядчиками" Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");
ИначеЕсли ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "РасчетыСПокупателямиИЗаказчиками" Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПокупателем");
Иначе
	Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "Прочее");
КонецЕсли;


Значение = ОбъектКоллекции.Документ;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>83</Код>
							<Наименование> --&gt; Контрагент</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Сумма;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>84</Код>
							<Наименование> --&gt; Контрагент</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаКт" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СуммаКт;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>86</Код>
							<Наименование> --&gt; Контрагент</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Валюта" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.Валюта) = 1 Тогда
	Значение = Параметры.Рубли;
Иначе
	Значение = ОбъектКоллекции.Валюта;
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>87</Код>
							<Наименование> --&gt; Контрагент</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КратностьВзаиморасчетов" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.КратностьВзаиморасчетов;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>88</Код>
							<Наименование> --&gt; Контрагент</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КурсВзаиморасчетов" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.КурсВзаиморасчетов;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>85</Код>
							<Наименование> --&gt; Контрагент</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютнаяСумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.Валюта) = 1 Тогда
	Значение = ОбъектКоллекции.Сумма;
ИначеЕсли ОбъектКоллекции.Валюта = Параметры.Рубли Тогда
	Значение = ОбъектКоллекции.Сумма;
Иначе
	Значение = ОбъектКоллекции.ВалютнаяСумма;
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>91</Код>
							<Наименование> --&gt; Контрагент</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Аванс" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Аванс;</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>16</Код>
						<Наименование> --&gt; РасчетыПоНалогамИСборам</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РасчетыПоНалогамИСборам" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "РасчетыПоНалогамИСборам" Тогда
	Отказ = 1;
ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
Иначе	
	КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");	
КонецЕсли;
</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>100</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СчетУчета;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>101</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидПлатежаВБюджет" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыПлатежейВГосБюджет"/>
							<КодПравилаКонвертации>ВидыПлатежейВГосБюджет                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ВидПлатежаВБюджет;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>102</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НоменклатурнаяГруппа" Вид="Реквизит" Тип="СправочникСсылка.НоменклатурныеГруппы"/>
							<КодПравилаКонвертации>НоменклатурныеГруппы                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НоменклатурнаяГруппа;
ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
ИсходящиеДанные.Установить("Наименование", Значение);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>103</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ХарактерДеятельности" Вид="Реквизит" Тип="ПеречислениеСсылка.ХарактерДеятельности"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ХарактерДеятельности;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>104</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтатьяЗатрат" Вид="Реквизит"/>
							<КодПравилаКонвертации>СтатьиЗатрат                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СтатьяЗатрат;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>106</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Сумма;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>107</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаКт" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СуммаКт;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>105</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтражениеВУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.ОтражениеВУСН"/>
							<ПередВыгрузкой>Если Параметры.ПараметрыАлгоритмов.Получить("УСН") = 1 Тогда
	Значение = "Принимаются";
Иначе
	Значение = "";
КонецЕсли</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>14</Код>
						<Наименование> --&gt; РасчетыПоЗаработнойПлате</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РасчетыПоЗаработнойПлате" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "РасчетыСПерсоналомПоОплатеТрудаИДепонентам" Тогда
	Отказ = 1;
ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
Иначе	
	КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");	
КонецЕсли;

</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>167</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<ПередВыгрузкой>Значение = "РасчетыСПерсоналомПоОплатеТруда";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>168</Код>
							<Наименование> --&gt; РаботникОрганизации</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РаботникОрганизации" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.РаботникОрганизации;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>169</Код>
							<Наименование> --&gt; РаботникОрганизации</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидНачисления" Вид="Реквизит" Тип="ПеречислениеСсылка.ИПВидыНачисленийУдержаний"/>
							<ПередВыгрузкой>Значение = "НачисленоПовременно";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>170</Код>
							<Наименование> --&gt; РаботникОрганизации</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтатьяЗатрат" Вид="Реквизит"/>
							<КодПравилаКонвертации>СтатьиЗатрат                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("НаименованиеСтатьиЗатрат", "Оплата труда");
Параметры.ПараметрыАлгоритмов.Установить("ВидРасходовНУ", "ОплатаТруда");
Значение = "Оплата труда";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>171</Код>
							<Наименование> --&gt; РаботникОрганизации</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Сумма - ОбъектКоллекции.СуммаПодлежитУдержанию;;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>172</Код>
							<Наименование> --&gt; РаботникОрганизации</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ПериодРегистрации;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>173</Код>
							<Наименование> --&gt; РаботникОрганизации</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидУдержания" Вид="Реквизит" Тип="ПеречислениеСсылка.ИПВидыНачисленийУдержаний"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ВидУдержания;</ПередВыгрузкой>
						</Свойство>
						<Свойство Отключить="true">
							<Код>174</Код>
							<Наименование> --&gt; РаботникОрганизации</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Получатель" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<ПередВыгрузкой>//Значение = ОбъектКоллекции.Получатель;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>175</Код>
							<Наименование> --&gt; РаботникОрганизации</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаПодлежитУдержанию" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СуммаПодлежитУдержанию;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>177</Код>
							<Наименование> --&gt; РаботникОрганизации</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ХарактерДеятельности" Вид="Реквизит" Тип="ПеречислениеСсылка.ХарактерДеятельности"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ХарактерДеятельности;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>176</Код>
							<Наименование> --&gt; НоменклатурнаяГруппа</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НоменклатурнаяГруппа" Вид="Реквизит" Тип="СправочникСсылка.НоменклатурныеГруппы"/>
							<КодПравилаКонвертации>НоменклатурныеГруппы                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НоменклатурнаяГруппа;
ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
ИсходящиеДанные.Установить("Наименование", Значение);

</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>202</Код>
							<Наименование> --&gt; ОтражениеВУСН</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтражениеВУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.ОтражениеВУСН"/>
							<ПередВыгрузкой>Если Параметры.ПараметрыАлгоритмов.Получить("УСН") = 1 Тогда
	Если ОбъектКоллекции.ВидРасчета.НеУменьшаетНалоговуюБазу = 0 Тогда
		Значение = "Принимаются";
	Иначе
		Значение = "НеПринимаются";
	КонецЕсли;
Иначе
	Значение = "";
КонецЕсли</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>18</Код>
						<Наименование> --&gt; РасчетыСПодотчетнымиЛицами</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РасчетыСПодотчетнымиЛицами" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "РасчетыСПодотчетнымиЛицами" Тогда
	Отказ = 1;	
ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
Иначе	
	КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");	
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>92</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СчетУчета;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>93</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РаботникОрганизации" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Контрагент;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>95</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Сумма;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>96</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаКт" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СуммаКт;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>97</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Валюта" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Валюта;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>98</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютнаяСумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ВалютнаяСумма;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>99</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РасчетныйДокумент" Вид="Реквизит"/>
							<КодПравилаКонвертации>ПустаяПартия                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Контрагент;</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа Отключить="true">
						<Код>13</Код>
						<Наименование> --&gt; РасходыБудущихПериодов</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РасходыБудущихПериодов" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "РасходыБудущихПериодов" Тогда
	Отказ = 1;
ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
Иначе	
	КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");	
КонецЕсли;
</ПередОбработкойВыгрузки>
					</Группа>
					<Группа>
						<Код>1</Код>
						<Наименование> --&gt; БухСправка</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="БухСправка" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "НезавершенноеПроизводство")
	И (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "РасчетыСУчредителями")
	И (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "Капитал")
	И (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "ОтложенныеНалоговыеАктивыОбязательства") 
	И (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "ПрочиеСчетаБухгалтерскогоУчета")
	И (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "ДенежныеСредства") Тогда
	Отказ = 1;
ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
Иначе		
	
	Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "Прочее");
	
	КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");		
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>54</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СчетУчета;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>55</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Субконто1" Вид="Реквизит"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Субконто1;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>56</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Субконто2" Вид="Реквизит"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Субконто2;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>57</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Субконто3" Вид="Реквизит"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Субконто3;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>58</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Количество;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>60</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Сумма;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>59</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Валюта" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Валюта;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>61</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютнаяСумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ВалютнаяСумма;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>203</Код>
							<Наименование> --&gt; ОтражениеВУСН</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтражениеВУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.ОтражениеВУСН"/>
							<ПередВыгрузкой>Если Параметры.ПараметрыАлгоритмов.Получить("УСН") = 1 Тогда
	Значение = "НеПринимаются";
Иначе
	Значение = "";
КонецЕсли
</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>2</Код>
						<Наименование> --&gt; ДанныеПоСФНДС</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДанныеПоСФНДС" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если Параметры.ПараметрыАлгоритмов.Получить("УСН") = 1 Тогда
Отказ = 1 
	
Иначе	
	Если (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "НДСПоПриобретеннымЦенностям")
		И (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "НДСПоАвансамПолученным")
		И (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "НДСНачисленный") Тогда
		Отказ = 1;
	ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
		Отказ = 1;
	Иначе		
		КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");		
	КонецЕсли;
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>153</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<ПередВыгрузкой>Если Параметры.РазделУчета = "НДСПоПриобретеннымЦенностям" Тогда
	Значение = "НДСпоПриобретеннымМПЗ";
Иначе 
	Значение = "НДСпоАвансамИПредоплатам";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>154</Код>
							<Наименование> --&gt; СтавкаНДС</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтавкаНДС" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
							<КодПравилаКонвертации>СтавкиНДС                                         </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СтавкаНДС;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>155</Код>
							<Наименование> --&gt; ВидЦенности</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидЦенности" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыЦенностей"/>
							<ПередВыгрузкой>Если Параметры.РазделУчета = "НДСПоПриобретеннымЦенностям" Тогда
	Значение = "Товары";
Иначе 
	Значение = "АвансыПолученные";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>156</Код>
							<Наименование> --&gt; СтавкаНДС</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Контрагент;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>157</Код>
							<Наименование> --&gt; СтавкаНДС</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "НДСПоПриобретеннымЦенностям" Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");
ИначеЕсли ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "НДСПоАвансамПолученным" Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПокупателем");
Иначе
	Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "Прочее");
КонецЕсли;

Значение = ОбъектКоллекции.ДоговорКонтрагента;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>158</Код>
							<Наименование> --&gt; СчетФактура</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетФактура" Вид="Реквизит"/>
							<КодПравилаКонвертации>ДокументРасчетовСКонтрагентом                     </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "НДСПоПриобретеннымЦенностям" Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");
ИначеЕсли ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "НДСПоАвансамПолученным" Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПокупателем");
Иначе
	Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "Прочее");
КонецЕсли;

Значение = ОбъектКоллекции.СчетФактура;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>159</Код>
							<Наименование> --&gt; ПредъявленСФ</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПредъявленСФ" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>163</Код>
							<Наименование> --&gt; ДатаСФ</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НДС" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НДС;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>162</Код>
							<Наименование> --&gt; ДатаСФ</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаБезНДС" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СуммаБезНДС;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>161</Код>
							<Наименование> --&gt; ДатаСФ</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НомерСФ" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НомерСФ;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>160</Код>
							<Наименование> --&gt; ДатаСФ</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаСФ" Вид="Реквизит" Тип="Дата"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ДатаСФ;</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>5</Код>
						<Наименование> --&gt; ДопРасходыИП</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДопРасходыИП" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если Параметры.ПараметрыАлгоритмов.Получить("УСН") = 1 Тогда
	Отказ = 1 
	
Иначе	
	Если ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "ПрочиеРасходыНалоговогоУчетаУСНиИП" Тогда
		Отказ = 1;
	ИначеЕсли Параметры.ПараметрыАлгоритмов.Получить("ВидПрочихРасходов") &lt;&gt; "ДопРасходы" Тогда
		Отказ = 1;
	ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
		Отказ = 1;
	Иначе		
		КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");		
	КонецЕсли;
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>242</Код>
							<Наименование> --&gt; МПЗ</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="МПЗ" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
							<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Номенклатура;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>243</Код>
							<Наименование> --&gt; Партия</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Партия" Вид="Реквизит"/>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.Партия) = 1 Тогда
	Значение = "ПустаяПартия";
	ИмяПКО = "ПустаяПартия";
Иначе
	Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");
	Значение = ОбъектКоллекции.Партия;
	ИмяПКО = "ДокументРасчетовСКонтрагентом";
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>244</Код>
							<Наименование> --&gt; СтатьяЗатрат</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтатьяЗатрат" Вид="Реквизит" Тип="СправочникСсылка.СтатьиЗатрат"/>
							<КодПравилаКонвертации>СтатьиЗатрат                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить( "ВидРасходовНУСтатьиЗатрат", "ПрочиеРасходы");
Параметры.ПараметрыАлгоритмов.Установить("ВидРасходовНУ", "ПрочиеРасходы");

Если Параметры.ПараметрыАлгоритмов.Получить("ИспользоватьИмяНоменклатуры") = 1 Тогда
	Параметры.ПараметрыАлгоритмов.Установить( "НаименованиеСтатьиЗатрат", Строка(ОбъектКоллекции.Номенклатура));
КонецЕсли;

Значение = ОбъектКоллекции.Номенклатура;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>245</Код>
							<Наименование> --&gt; Оплачен</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Оплачен" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Оплачен;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>246</Код>
							<Наименование> --&gt; ПартияМПЗ</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПартияМПЗ" Вид="Реквизит"/>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.Партия) = 1 Тогда
	Значение = "ПустаяПартия";
	ИмяПКО = "ПустаяПартия";
Иначе
	Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");
	Значение = ОбъектКоллекции.Партия;
	ИмяПКО = "ДокументРасчетовСКонтрагентом";
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>247</Код>
							<Наименование> --&gt; Количество</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Количество;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>248</Код>
							<Наименование> --&gt; Сумма</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Сумма;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>249</Код>
							<Наименование> --&gt; НДС</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НДС" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НДС;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>250</Код>
							<Наименование> --&gt; НДСВключенВстоимость</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НДСВключенВстоимость" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НДСВключенВстоимость;</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>12</Код>
						<Наименование> --&gt; ПрочиеРасходыИП</Наименование>
						<Порядок>650</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПрочиеРасходыИП" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если Параметры.ПараметрыАлгоритмов.Получить("УСН") = 1 Тогда
	Отказ = 1 
	
Иначе	
	
	Если ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "ПрочиеРасходыНалоговогоУчетаУСНиИП" Тогда
		Отказ = 1;
	ИначеЕсли (Параметры.ПараметрыАлгоритмов.Получить("ВидПрочихРасходов") = "МатериальныеРасходы") 
		ИЛИ (Параметры.ПараметрыАлгоритмов.Получить("ВидПрочихРасходов") = "") Тогда
		Отказ = 1;
	ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
		Отказ = 1;
	ИначеЕсли Параметры.ПараметрыАлгоритмов.Получить("ИспользоватьИмяНоменклатуры") = 1 Тогда
		Отказ = 1;
	Иначе		
		КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");		
	КонецЕсли;
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>178</Код>
							<Наименование> --&gt; СтатьяЗатрат</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтатьяЗатрат" Вид="Реквизит"/>
							<ПередВыгрузкой>Если Параметры.ПараметрыАлгоритмов.Получить("ВидПрочихРасходов") = "ИныеМатериальныеРасходы" Тогда
	Значение = ОбъектКоллекции.Номенклатура;
	ИмяПКО = "Номенклатура";
ИначеЕсли (Параметры.ПостфиксКомментария = "Услуги")
	ИЛИ (Параметры.ПостфиксКомментария = "Прочие материальные расходы")
	ИЛИ (Параметры.ПостфиксКомментария = "Прочие расходы налогового учета") Тогда
	Параметры.ПараметрыАлгоритмов.Установить("НаименованиеСтатьиЗатрат", "Прочие расходы");
	Параметры.ПараметрыАлгоритмов.Установить("ВидРасходовНУ", "ПрочиеРасходы");
	Значение = "Прочие расходы";
	ИмяПКО = "СтатьиЗатрат";
Иначе
	Параметры.ПараметрыАлгоритмов.Установить("НаименованиеСтатьиЗатрат", "Материальные расходы");
	Параметры.ПараметрыАлгоритмов.Установить("ВидРасходовНУ", "МатериальныеРасходы");
	Значение = "Материальные расходы";
	ИмяПКО = "СтатьиЗатрат";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>179</Код>
							<Наименование> --&gt; ВидМПЗ</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидМПЗ" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыМПЗ"/>
							<ПередВыгрузкой>Если Параметры.ПараметрыАлгоритмов.Получить("ВидПрочихРасходов") = "ИныеМатериальныеРасходы" Тогда
	Значение = "ИныеМатериальныеРасходы";
ИначеЕсли (Параметры.ПостфиксКомментария = "Услуги")
	ИЛИ (Параметры.ПостфиксКомментария = "Прочие материальные расходы")
	ИЛИ (Параметры.ПостфиксКомментария = "Прочие расходы налогового учета") Тогда
	Значение = "ПрочиеРасходы";
Иначе
	Значение = "ИныеМатериальныеРасходы";
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>180</Код>
							<Наименование> --&gt; ВидМПЗ</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НоменклатурнаяГруппа" Вид="Реквизит" Тип="СправочникСсылка.НоменклатурныеГруппы"/>
							<КодПравилаКонвертации>НоменклатурныеГруппы                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НоменклатурнаяГруппа;
ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
ИсходящиеДанные.Установить("Наименование", Значение);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>181</Код>
							<Наименование> --&gt; ВидМПЗ</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ХарактерДеятельности" Вид="Реквизит" Тип="ПеречислениеСсылка.ХарактерДеятельности"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ХарактерДеятельности;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>182</Код>
							<Наименование> --&gt; ВидМПЗ</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Партия" Вид="Реквизит"/>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.Партия) = 1 Тогда
	Значение = "ПустаяПартия";
	ИмяПКО = "ПустаяПартия";
Иначе
	Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");
	Значение = ОбъектКоллекции.Партия;
	ИмяПКО = "ДокументРасчетовСКонтрагентом";
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>183</Код>
							<Наименование> --&gt; ВидМПЗ</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Количество;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>184</Код>
							<Наименование> --&gt; ВидМПЗ</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Сумма;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>185</Код>
							<Наименование> --&gt; ВидМПЗ</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НДС" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НДС;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>186</Код>
							<Наименование> --&gt; ВидМПЗ</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НДСВключенВстоимость" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НДСВключенВстоимость;</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>7</Код>
						<Наименование> --&gt; МПЗРеализованныеИП</Наименование>
						<Порядок>700</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="МПЗРеализованныеИП" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если Параметры.ПараметрыАлгоритмов.Получить("УСН") = 1 Тогда
	Отказ = 1 
	
Иначе	
	Если ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "ПрочиеРасходыНалоговогоУчетаУСНиИП" Тогда
		Отказ = 1;
	ИначеЕсли Параметры.ПараметрыАлгоритмов.Получить("ВидПрочихРасходов") &lt;&gt; "МатериальныеРасходы" Тогда
		Отказ = 1;
	ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
		Отказ = 1;
	Иначе		
		КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");		
	КонецЕсли;
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>197</Код>
							<Наименование> --&gt; Номенклатура</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НДСВключенВстоимость" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НДСВключенВстоимость;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>191</Код>
							<Наименование> --&gt; Номенклатура</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Ключ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Ключ;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>192</Код>
							<Наименование> --&gt; Номенклатура</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Партия" Вид="Реквизит"/>
							<ПередВыгрузкой>Если ОбъектКоллекции.ВидМПЗ = Перечисление.ВидыМатериальныхРесурсов.Услуга Тогда
	Отказ = 1;
Иначе
	
	Если ПустоеЗначение(ОбъектКоллекции.Партия) = 1 Тогда
		Значение = "ПустаяПартия";
		ИмяПКО = "ПустаяПартия";
	Иначе
		Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");
		Значение = ОбъектКоллекции.Партия;
		ИмяПКО = "ДокументРасчетовСКонтрагентом";
	КонецЕсли;
КонецЕсли;


</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>193</Код>
							<Наименование> --&gt; Номенклатура</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Собственный" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Оплачен;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>194</Код>
							<Наименование> --&gt; Номенклатура</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Количество;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>195</Код>
							<Наименование> --&gt; Номенклатура</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Сумма;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>196</Код>
							<Наименование> --&gt; Номенклатура</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НДС" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НДС;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>187</Код>
							<Наименование> --&gt; Номенклатура</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
							<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Номенклатура;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>188</Код>
							<Наименование> --&gt; Номенклатура</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидМПЗ" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыМПЗ"/>
							<ПередВыгрузкой>Если ОбъектКоллекции.ВидМПЗ = Перечисление.ВидыМатериальныхРесурсов.Услуга Тогда
	Значение = "Продукция";
Иначе
	Значение = ОбъектКоллекции.ВидМПЗ;
	ИмяПКО = "ВидыМПЗ";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>189</Код>
							<Наименование> --&gt; Номенклатура</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НоменклатурнаяГруппа" Вид="Реквизит" Тип="СправочникСсылка.НоменклатурныеГруппы"/>
							<КодПравилаКонвертации>НоменклатурныеГруппы                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НоменклатурнаяГруппа;
ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
ИсходящиеДанные.Установить("Наименование", Значение);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>190</Код>
							<Наименование> --&gt; Номенклатура</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ХарактерДеятельности" Вид="Реквизит" Тип="ПеречислениеСсылка.ХарактерДеятельности"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ХарактерДеятельности;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>237</Код>
							<Наименование> --&gt; СтатусыОплатыРасходовИП</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтатусыОплатыРасходовИП" Вид="Реквизит" Тип="ПеречислениеСсылка.СтатусыРасходовИП"/>
							<ПередВыгрузкой>Если ПустоеЗначение(Параметры.ПараметрыАлгоритмов.Получить("СтатусыОплатыРасходовИП")) = 1 Тогда
	Если (ОбъектКоллекции.Оплачен = 1)
		ИЛИ (ОбъектКоллекции.ВидМПЗ = Перечисление.ВидыМатериальныхРесурсов.Услуга) Тогда
		Значение = "НеОплаченоПокупателем";
	Иначе
		Значение = "НеОплаченоНеОплаченоПокупателем";
	КонецЕсли;
Иначе
	Значение = Параметры.ПараметрыАлгоритмов.Получить("СтатусыОплатыРасходовИП");
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>238</Код>
							<Наименование> --&gt; РасчетныйДокумент</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РасчетныйДокумент" Вид="Реквизит" Тип="ДокументСсылка.ДокументРасчетовСКонтрагентом"/>
							<КодПравилаКонвертации>ДокументРасчетовСКонтрагентом                     </КодПравилаКонвертации>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПокупателем");
Значение = ОбъектКоллекции.ДокументОтгрузки;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>239</Код>
							<Наименование> --&gt; Выручка</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Выручка" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Выручка;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>240</Код>
							<Наименование> --&gt; НДСНачисленный</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НДСНачисленный" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НДСНачисленный;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>241</Код>
							<Наименование> --&gt; Услуга</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Услуга" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Услуга;
Если ОбъектКоллекции.ВидМПЗ = Перечисление.ВидыМатериальныхРесурсов.Услуга Тогда
	Значение = 1;
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>10</Код>
						<Наименование> --&gt; Обороты</Наименование>
						<Порядок>750</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Обороты" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если Параметры.ПараметрыАлгоритмов.Получить("УСН") = 1 Тогда
	Отказ = 1 
	
Иначе	
	Если (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "ГотоваяПродукцияИПолуфабрикаты") 
		И (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "ТоварыОтгруженные") 
		И (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "ПрочиеРасходыНалоговогоУчетаУСНиИП") Тогда
		Отказ = 1;
	ИначеЕсли ТипЗначенияСтр(ВходящиеДанные.Получить("ВходящиеОстаткиОборотов")) &lt;&gt; "ТаблицаЗначений" Тогда
		Отказ = 1;
	Иначе
		Если ВходящиеДанные.Получить("ВходящиеОстаткиОборотов").КоличествоСтрок() = 0 Тогда
			Отказ = 1;
		Иначе
			КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстаткиОборотов");
		КонецЕсли;
	КонецЕсли;
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>45</Код>
							<Наименование> --&gt; Ключ</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Ключ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Ключ;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>51</Код>
							<Наименование> --&gt; НомерСтрокиТЧ</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НомерСтрокиТЧ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НомерСтрокиТЧ;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>50</Код>
							<Наименование> --&gt; Номенклатура</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
							<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Номенклатура;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>46</Код>
							<Наименование> --&gt; ВидМПЗ</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидМПЗ" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыМПЗ"/>
							<КодПравилаКонвертации>ВидыМПЗ                                           </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ВидМПЗ;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>52</Код>
							<Наименование> --&gt; Партия</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Партия" Вид="Реквизит"/>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.Партия) = 1 Тогда
	Значение = "ПустаяПартия";
	ИмяПКО = "ПустаяПартия";
Иначе
	Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");
	Значение = ОбъектКоллекции.Партия;
	ИмяПКО = "ДокументРасчетовСКонтрагентом";
КонецЕсли;

</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>47</Код>
							<Наименование> --&gt; Количество</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Количество;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>53</Код>
							<Наименование> --&gt; Сумма</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Сумма;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>48</Код>
							<Наименование> --&gt; НДС</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НДС" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НДС;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>49</Код>
							<Наименование> --&gt; НДСВключенВстоимость</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НДСВключенВстоимость" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НДСВключенВстоимость;</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа Отключить="true">
						<Код>6</Код>
						<Наименование> --&gt; ДопРасходыУСН</Наименование>
						<Порядок>800</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДопРасходыУСН" Вид="ТабличнаяЧасть"/>
					</Группа>
					<Группа>
						<Код>19</Код>
						<Наименование> --&gt; УслугиУСН</Наименование>
						<Порядок>850</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="УслугиУСН" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если Параметры.ПараметрыАлгоритмов.Получить("УСН") &lt;&gt; 1 Тогда
	Отказ = 1 
Иначе
		
	Если ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "ПрочиеРасходыНалоговогоУчетаУСНиИП" Тогда
		Отказ = 1;
	ИначеЕсли (Параметры.ПараметрыАлгоритмов.Получить("ВидПрочихРасходов") = "МатериальныеРасходы")
		ИЛИ (Параметры.ПараметрыАлгоритмов.Получить("ВидПрочихРасходов") = "") Тогда
		Отказ = 1;
	ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
		Отказ = 1;
	Иначе		
		КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");		
	КонецЕсли;
	
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>217</Код>
							<Наименование> --&gt; Номенклатура</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
							<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Номенклатура;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>218</Код>
							<Наименование> --&gt; Номенклатура</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Контрагент" Вид="Реквизит"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.Поставщик) = 0 Тогда
	Значение = ОбъектКоллекции.Поставщик;
Иначе
	Если ПустоеЗначение(ОбъектКоллекции.Партия) = 0 Тогда
		Значение = ОбъектКоллекции.Партия.Владелец;
	Иначе
		Значение = "";
	КонецЕсли;
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>219</Код>
							<Наименование> --&gt; Номенклатура</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");

Если ПустоеЗначение(ОбъектКоллекции.ДоговорПоставщика) = 0 Тогда
	Значение = ОбъектКоллекции.ДоговорПоставщика;
Иначе
	Если ПустоеЗначение(ОбъектКоллекции.Партия) = 0 Тогда
		Значение = ОбъектКоллекции.Партия;
	Иначе
		Значение = "";
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>220</Код>
							<Наименование> --&gt; Номенклатура</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РасчетныйДокумент" Вид="Реквизит"/>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.Партия) = 1 Тогда
	Значение = "ПустаяПартия";
	ИмяПКО = "ПустаяПартия";
Иначе
	Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");
	Значение = ОбъектКоллекции.Партия;
	ИмяПКО = "ДокументРасчетовСКонтрагентом";
КонецЕсли;




</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>222</Код>
							<Наименование> --&gt; Номенклатура</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Валюта" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.Валюта) = 1 Тогда
	Значение = Параметры.Рубли;
Иначе
	Значение = ОбъектКоллекции.Валюта;
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>223</Код>
							<Наименование> --&gt; Номенклатура</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Сумма;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>224</Код>
							<Наименование> --&gt; Номенклатура</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НДС" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НДС;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>221</Код>
							<Наименование> --&gt; Номенклатура</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтражениеВУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.ОтражениеВУСН"/>
							<ПередВыгрузкой>Значение = "Принимаются";</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>8</Код>
						<Наименование> --&gt; МПЗРеализованныеУСН</Наименование>
						<Порядок>900</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="МПЗРеализованныеУСН" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если Параметры.ПараметрыАлгоритмов.Получить("УСН") &lt;&gt; 1 Тогда
	Отказ = 1 
	
Иначе	
	Если ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "ПрочиеРасходыНалоговогоУчетаУСНиИП" Тогда
		Отказ = 1;
	ИначеЕсли Параметры.ПараметрыАлгоритмов.Получить("ВидПрочихРасходов") &lt;&gt; "МатериальныеРасходы" Тогда
		Отказ = 1;
	ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
		Отказ = 1;
	Иначе		
		КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");		
	КонецЕсли;
	
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>204</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<ПередВыгрузкой>Значение = "ТоварыНаСкладах";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>206</Код>
							<Наименование> --&gt; Номенклатура</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
							<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Номенклатура;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>205</Код>
							<Наименование> --&gt; РасчетныйДокумент</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РасчетныйДокумент" Вид="Реквизит"/>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.Партия) = 1 Тогда
	Значение = "ПустаяПартия";
	ИмяПКО = "ПустаяПартия";
Иначе
	Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");
	Значение = ОбъектКоллекции.Партия;
	ИмяПКО = "ДокументРасчетовСКонтрагентом";
КонецЕсли;


</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>210</Код>
							<Наименование> --&gt; РасчетныйДокумент</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДокументОприходования" Вид="Реквизит"/>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.РасчетныйДокумент) = 1 Тогда
	Значение = "ПустаяПартия";
	ИмяПКО = "ПустаяПартия";
Иначе
	Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПокупателем");
	Значение = ОбъектКоллекции.РасчетныйДокумент;
	ИмяПКО = "ДокументРасчетовСКонтрагентом";
КонецЕсли;

</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>211</Код>
							<Наименование> --&gt; РасчетныйДокумент</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Контрагент" Вид="Реквизит"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.Поставщик) = 0 Тогда
	Значение = ОбъектКоллекции.Поставщик;
Иначе
	Если ПустоеЗначение(ОбъектКоллекции.Партия) = 0 Тогда
		Значение = ОбъектКоллекции.Партия.Владелец;
	Иначе
		Значение = "";
	КонецЕсли;
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>212</Код>
							<Наименование> --&gt; РасчетныйДокумент</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");

Если ПустоеЗначение(ОбъектКоллекции.ДоговорПоставщика) = 0 Тогда
	Значение = ОбъектКоллекции.ДоговорПоставщика;
Иначе
	Если ПустоеЗначение(ОбъектКоллекции.Партия) = 0 Тогда
		Значение = ОбъектКоллекции.Партия;
	Иначе
		Значение ="";
	КонецЕсли;
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>213</Код>
							<Наименование> --&gt; РасчетныйДокумент</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Валюта" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.Валюта) = 0 Тогда
	Значение = ОбъектКоллекции.Валюта;
Иначе
	Значение = Параметры.Рубли;
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>214</Код>
							<Наименование> --&gt; РасчетныйДокумент</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Количество;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>215</Код>
							<Наименование> --&gt; РасчетныйДокумент</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Сумма;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>216</Код>
							<Наименование> --&gt; РасчетныйДокумент</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НДС" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НДС;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>207</Код>
							<Наименование> --&gt; РасчетныйДокумент</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтатусыОплатыРасходовУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.СтатусыРасходовУСН"/>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.СтатусыОплатыРасходовУСН) = 1 Тогда
	Если (ОбъектКоллекции.Оплачен = 1)
		ИЛИ (ОбъектКоллекции.ВидМПЗ = Перечисление.ВидыМатериальныхРесурсов.Услуга) Тогда
		Значение = "НеОплаченоПокупателем";
	Иначе
		Значение = "НеОплаченоНеОплаченоПокупателем";
	КонецЕсли;
Иначе
	Значение = ОбъектКоллекции.СтатусыОплатыРасходовУСН;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>208</Код>
							<Наименование> --&gt; РасчетныйДокумент</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтатусыПартийУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.СтатусыПартийУСН"/>
							<ПередВыгрузкой>Значение = "Списанные";

	

</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>209</Код>
							<Наименование> --&gt; РасчетныйДокумент</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтражениеВУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.ОтражениеВУСН"/>
							<ПередВыгрузкой>Значение = "Принимаются";

	

</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Свойство Поиск="true">
						<Код>20</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>950</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>21</Код>
						<Наименование> --&gt; Проведен</Наименование>
						<Порядок>1000</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>22</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>1050</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>23</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>1100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>24</Код>
						<Наименование> --&gt; ОтражатьВНалоговомУчете</Наименование>
						<Порядок>1150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтражатьВНалоговомУчете" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>25</Код>
						<Наименование> --&gt; ФормироватьПроводки</Наименование>
						<Порядок>1200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтражатьВБухгалтерскомУчете" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>232</Код>
						<Наименование> --&gt; ФормироватьПроводки</Наименование>
						<Порядок>1200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтражатьПоСпециальнымРегистрам" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>26</Код>
						<Наименование> --&gt; РазделУчета</Наименование>
						<Порядок>1250</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РазделУчета" Вид="Реквизит" Тип="ПеречислениеСсылка.РазделыУчетаДляВводаОстатков"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ЗаписьКнигиУчетаДоходовИРасходовИП</Код>
				<Наименование> --&gt; ДокументСсылка.ЗаписьКнигиУчетаДоходовИРасходовИП</Наименование>
				<Порядок>150</Порядок>
				<ПередВыгрузкой>Если Параметры.ПараметрыАлгоритмов.Получить("УСН") = 1 Тогда
	Отказ = 1;
ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
КонецЕсли;
</ПередВыгрузкой>
				<Приемник>ДокументСсылка.ЗаписьКнигиУчетаДоходовИРасходовИП</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>6</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>7</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>8</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование> --&gt; Проведен</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
					</Свойство>
					<Группа>
						<Код>10</Код>
						<Наименование> --&gt; Таблица1</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Таблица1" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ВходящиеДанные.Получить("Таблица") &lt;&gt; "Таблица1" Тогда
	Отказ = 1;	
ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
Иначе	
	КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");	
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>15</Код>
							<Наименование> --&gt; ВидДвижения</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДвижения" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ВидДвижения;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование> --&gt; ВидМПЗ</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидМПЗ" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыМПЗ"/>
							<КодПравилаКонвертации>ВидыМПЗ                                           </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ВидМПЗ;


</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>20</Код>
							<Наименование> --&gt; ВидДвижения</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
							<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Номенклатура;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование> --&gt; ВидДвижения</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НоменклатурнаяГруппа" Вид="Реквизит" Тип="СправочникСсылка.НоменклатурныеГруппы"/>
							<КодПравилаКонвертации>НоменклатурныеГруппы                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НоменклатурнаяГруппа;
ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
ИсходящиеДанные.Установить("Наименование", Значение);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>24</Код>
							<Наименование> --&gt; ВидДвижения</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ХарактерДеятельности" Вид="Реквизит" Тип="ПеречислениеСсылка.ХарактерДеятельности"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ХарактерДеятельности;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование> --&gt; ВидДвижения</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Партия" Вид="Реквизит"/>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.Партия) = 1 Тогда
	Значение = "ПустаяПартия";
	ИмяПКО = "ПустаяПартия";
Иначе
	Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");
	Значение = ОбъектКоллекции.Партия;
	ИмяПКО = "ДокументРасчетовСКонтрагентом";
КонецЕсли;


</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование> --&gt; ВидДвижения</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДокументОплаты" Вид="Реквизит"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");
Если ПустоеЗначение(ОбъектКоллекции.ДокументОплаты) = 0 Тогда
	ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
	ИсходящиеДанные.Установить("Дата", Параметры.ДатаВводаОстатков - 1);
	ИсходящиеДанные.Установить("Организация", "1");
	ПолучитьКомментарийДокумента();
	ИсходящиеДанные.Установить("Комментарий", Значение);
	Значение = ОбъектКоллекции.ДокументОплаты;
	ИмяПКО = ОбъектКоллекции.ПравилоДокументаОплаты;
Иначе
	Если ОбъектКоллекции.Оплачен = 1 Тогда
		Значение = "ПустаяПартия";
		ИмяПКО = "ПустаяПартия";
	КонецЕсли;
КонецЕсли;


</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование> --&gt; ВидДвижения</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Количество;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>23</Код>
							<Наименование> --&gt; ВидДвижения</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Сумма;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование> --&gt; ВидДвижения</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НДС" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НДС;</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>11</Код>
						<Наименование> --&gt; Таблица2</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Таблица2" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ВходящиеДанные.Получить("Таблица") &lt;&gt; "Таблица2" Тогда
	Отказ = 1;	
ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
Иначе	
	КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");	
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>25</Код>
							<Наименование> --&gt; ВидДвижения</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДвижения" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ВидДвижения;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>34</Код>
							<Наименование> --&gt; ВидДвижения</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.ОсновныеСредства"/>
							<КодПравилаКонвертации>ОсновныеСредства                                  </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Номенклатура;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>35</Код>
							<Наименование> --&gt; ВидДвижения</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НоменклатурнаяГруппа" Вид="Реквизит" Тип="СправочникСсылка.НоменклатурныеГруппы"/>
							<КодПравилаКонвертации>НоменклатурныеГруппы                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НоменклатурнаяГруппа;
ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
ИсходящиеДанные.Установить("Наименование", Значение);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>36</Код>
							<Наименование> --&gt; ВидДвижения</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ХарактерДеятельности" Вид="Реквизит" Тип="ПеречислениеСсылка.ХарактерДеятельности"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ХарактерДеятельности;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>37</Код>
							<Наименование> --&gt; ВидДвижения</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Партия" Вид="Реквизит"/>
							<КодПравилаКонвертации>ВводНачальныхОстатковДвижения                     </КодПравилаКонвертации>
							<ПередВыгрузкой>ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	ИсходящиеДанные.Установить("Дата", Параметры.ДатаВводаОстатков - 1);
Иначе
	ИсходящиеДанные.Установить("Дата", Параметры.ДатаКонцаПериодаВыгрузки);
КонецЕсли;
ИсходящиеДанные.Установить("Организация", "1");
ПолучитьКомментарийДокумента();
ИсходящиеДанные.Установить("Комментарий", Значение);
Значение = "ПустаяПартия";
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>38</Код>
							<Наименование> --&gt; ВидДвижения</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДокументОплаты" Вид="Реквизит"/>
							<КодПравилаКонвертации>ВводНачальныхОстатковДвижения                     </КодПравилаКонвертации>
							<ПередВыгрузкой>ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	ИсходящиеДанные.Установить("Дата", Параметры.ДатаВводаОстатков - 1);
Иначе
	ИсходящиеДанные.Установить("Дата", Параметры.ДатаКонцаПериодаВыгрузки);
КонецЕсли;
ИсходящиеДанные.Установить("Организация", "1");
ПолучитьКомментарийДокумента();
ИсходящиеДанные.Установить("Комментарий", Значение);
Значение = "ПустаяПартияОплаты";

//Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");
//Если ПустоеЗначение(ОбъектКоллекции.ДокументОплаты) = 1 Тогда
//	Значение = "ПустаяПартия";
//	ИмяПКО = "ПустаяПартия";
//Иначе
//	Значение = ОбъектКоллекции.ДокументОплаты;
//	ИмяПКО = "ДокументРасчетовСКонтрагентом";
//КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>39</Код>
							<Наименование> --&gt; ВидДвижения</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Сумма;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>40</Код>
							<Наименование> --&gt; ВидДвижения</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НДС" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НДС;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>41</Код>
							<Наименование> --&gt; ВидДвижения</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаАмортизации" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СуммаАмортизации;</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>12</Код>
						<Наименование> --&gt; Таблица4</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Таблица4" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ВходящиеДанные.Получить("Таблица") &lt;&gt; "Таблица4" Тогда
	Отказ = 1;	
ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
Иначе	
	КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");	
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>51</Код>
							<Наименование> --&gt; ВидДвижения</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаАмортизации" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СуммаАмортизации;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>50</Код>
							<Наименование> --&gt; ВидДвижения</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НДС" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НДС;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>49</Код>
							<Наименование> --&gt; ВидДвижения</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Сумма;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>42</Код>
							<Наименование> --&gt; ВидДвижения</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДвижения" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ВидДвижения;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>44</Код>
							<Наименование> --&gt; ВидДвижения</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.НематериальныеАктивы"/>
							<КодПравилаКонвертации>НематериальныеАктивы                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Номенклатура;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>45</Код>
							<Наименование> --&gt; ВидДвижения</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НоменклатурнаяГруппа" Вид="Реквизит" Тип="СправочникСсылка.НоменклатурныеГруппы"/>
							<КодПравилаКонвертации>НоменклатурныеГруппы                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НоменклатурнаяГруппа;
ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
ИсходящиеДанные.Установить("Наименование", Значение);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>46</Код>
							<Наименование> --&gt; ВидДвижения</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ХарактерДеятельности" Вид="Реквизит" Тип="ПеречислениеСсылка.ХарактерДеятельности"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ХарактерДеятельности;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>47</Код>
							<Наименование> --&gt; ВидДвижения</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Партия" Вид="Реквизит"/>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.Партия) = 1 Тогда
	Значение = "ПустаяПартия";
	ИмяПКО = "ПустаяПартия";
Иначе
	Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");
	Значение = ОбъектКоллекции.Партия;
	ИмяПКО = "ДокументРасчетовСКонтрагентом";
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>48</Код>
							<Наименование> --&gt; ВидДвижения</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДокументОплаты" Вид="Реквизит"/>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.ДокументОплаты) = 1 Тогда
	Значение = "ПустаяПартия";
	ИмяПКО = "ПустаяПартия";
Иначе
	Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");
	Значение = ОбъектКоллекции.ДокументОплаты;
	ИмяПКО = "ДокументРасчетовСКонтрагентом";
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>13</Код>
						<Наименование> --&gt; Таблица5</Наименование>
						<Порядок>650</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Таблица5" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ВходящиеДанные.Получить("Таблица") &lt;&gt; "Таблица5" Тогда
	Отказ = 1;	
ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
Иначе	
	КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");	
	Параметры.ПараметрыАлгоритмов.Установить("ДатаДокументаЗП", ВходящиеДанные.Получить("Дата"));
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>60</Код>
							<Наименование> --&gt; Период</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Сумма;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>59</Код>
							<Наименование> --&gt; Период</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДокументОплаты" Вид="Реквизит"/>
							<КодПравилаКонвертации>РасходныйКассовыйОрдер                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("ДатаПериодаЗП", ОбъектКоллекции.ПериодРегистрации);
Значение = ОбъектКоллекции.ПериодРегистрации;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>58</Код>
							<Наименование> --&gt; Период</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РасчетныйДокумент" Вид="Реквизит"/>
							<КодПравилаКонвертации>ОтражениеЗарплатыВРеглУчете                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("ДатаПериодаЗП", ОбъектКоллекции.ПериодРегистрации);
Значение = ОбъектКоллекции.ПериодРегистрации;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>57</Код>
							<Наименование> --&gt; Период</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидНачисленияУдержания" Вид="Реквизит" Тип="ПеречислениеСсылка.ИПВидыНачисленийУдержаний"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ВидУдержания;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>56</Код>
							<Наименование> --&gt; Период</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтатьяЗатрат" Вид="Реквизит"/>
							<КодПравилаКонвертации>СтатьиЗатрат                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("НаименованиеСтатьиЗатрат", "Оплата труда");
Параметры.ПараметрыАлгоритмов.Установить("ВидРасходовНУ", "ОплатаТруда");
Значение = "Оплата труда";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>55</Код>
							<Наименование> --&gt; Период</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ХарактерДеятельности" Вид="Реквизит" Тип="ПеречислениеСсылка.ХарактерДеятельности"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ХарактерДеятельности;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>54</Код>
							<Наименование> --&gt; Период</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НоменклатурнаяГруппа" Вид="Реквизит" Тип="СправочникСсылка.НоменклатурныеГруппы"/>
							<КодПравилаКонвертации>НоменклатурныеГруппы                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НоменклатурнаяГруппа;
ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
ИсходящиеДанные.Установить("Наименование", Значение);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>53</Код>
							<Наименование> --&gt; Период</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.РаботникОрганизации;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>52</Код>
							<Наименование> --&gt; Период</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Реквизит" Тип="Дата"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ПериодРегистрации;</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>14</Код>
						<Наименование> --&gt; Таблица6</Наименование>
						<Порядок>700</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Таблица6" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ВходящиеДанные.Получить("Таблица") &lt;&gt; "Таблица6" Тогда
	Отказ = 1;	
ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
Иначе	
	КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");	
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>26</Код>
							<Наименование> --&gt; СтатьяЗатрат</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтатьяЗатрат" Вид="Реквизит"/>
							<КодПравилаКонвертации>СтатьиЗатрат                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>//Если (Параметры.ПостфиксКомментария = "Услуги")
//	ИЛИ (Параметры.ПостфиксКомментария = "Прочие материальные расходы")
//	ИЛИ (Параметры.ПостфиксКомментария = "Прочие расходы налогового учета") Тогда
//	
//	Значение = "Прочие расходы";
//Иначе
//	Значение = "Материальные расходы";
//КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("НаименованиеСтатьиЗатрат", "");
Значение = ОбъектКоллекции.Номенклатура;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>32</Код>
							<Наименование> --&gt; НоменклатурнаяГруппа</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НДС" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НДС;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>31</Код>
							<Наименование> --&gt; НоменклатурнаяГруппа</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Сумма;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>30</Код>
							<Наименование> --&gt; НоменклатурнаяГруппа</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДокументОплаты" Вид="Реквизит"/>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.ДокументОплаты) = 1 Тогда
	Если (ПустоеЗначение(ОбъектКоллекции.ДатаОперации) = 0)
		ИЛИ (ПустоеЗначение(ОбъектКоллекции.НомерДокумента) = 0) Тогда
		Параметры.ПараметрыАлгоритмов.Установить("ДатаДокументаРасчетов", ОбъектКоллекции.ДатаОперации);
		Параметры.ПараметрыАлгоритмов.Установить("НомерДокумента", ОбъектКоллекции.НомерДокумента);
		Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");
		Значение = "ПустаяПартия" + Строка(ОбъектКоллекции.ДатаОперации) + ОбъектКоллекции.НомерСтроки + ОбъектКоллекции.НомерДокумента;
		ИмяПКО = "ПустаяПартия";
	КонецЕсли;
Иначе
	Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");
	Параметры.ПараметрыАлгоритмов.Установить("ДатаДокументаРасчетов", ОбъектКоллекции.ДатаОперации);
	Параметры.ПараметрыАлгоритмов.Установить("НомерДокумента", ОбъектКоллекции.НомерДокумента);
	Параметры.ПараметрыАлгоритмов.Установить("ПартияПоРеквизитам", ОбъектКоллекции.ДокументОплаты);
	Значение = Строка(ОбъектКоллекции.ДокументОплаты) + ОбъектКоллекции.НомерСтроки + ОбъектКоллекции.НомерДокумента;
	ИмяПКО = "ПартияПоРеквизитам";
КонецЕсли;


	
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>29</Код>
							<Наименование> --&gt; НоменклатурнаяГруппа</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РасчетныйДокумент" Вид="Реквизит"/>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.Партия) = 1 Тогда
	Если (ПустоеЗначение(ОбъектКоллекции.ДатаОперации) = 0)
		ИЛИ (ПустоеЗначение(ОбъектКоллекции.НомерДокумента) = 0) Тогда
		Параметры.ПараметрыАлгоритмов.Установить("ДатаДокументаРасчетов", ОбъектКоллекции.ДатаОперации);
		Параметры.ПараметрыАлгоритмов.Установить("НомерДокумента", ОбъектКоллекции.НомерДокумента);
		Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");
		Значение = "ПустаяПартия" + Строка(ОбъектКоллекции.ДатаОперации) + ОбъектКоллекции.НомерСтроки + ОбъектКоллекции.НомерДокумента;
		ИмяПКО = "ПустаяПартия";
	КонецЕсли;
Иначе
	Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");
	Параметры.ПараметрыАлгоритмов.Установить("ДатаДокументаРасчетов", ОбъектКоллекции.ДатаОперации);
	Параметры.ПараметрыАлгоритмов.Установить("НомерДокумента", ОбъектКоллекции.НомерДокумента);
	Параметры.ПараметрыАлгоритмов.Установить("ПартияПоРеквизитам", ОбъектКоллекции.Партия);
	Значение = Строка(ОбъектКоллекции.Партия) + ОбъектКоллекции.НомерСтроки + ОбъектКоллекции.НомерДокумента;
	ИмяПКО = "ПартияПоРеквизитам";
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>28</Код>
							<Наименование> --&gt; НоменклатурнаяГруппа</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ХарактерДеятельности" Вид="Реквизит" Тип="ПеречислениеСсылка.ХарактерДеятельности"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ХарактерДеятельности;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>27</Код>
							<Наименование> --&gt; НоменклатурнаяГруппа</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НоменклатурнаяГруппа" Вид="Реквизит" Тип="СправочникСсылка.НоменклатурныеГруппы"/>
							<КодПравилаКонвертации>НоменклатурныеГруппы                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НоменклатурнаяГруппа;
ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
ИсходящиеДанные.Установить("Наименование", Значение);</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>61</Код>
						<Наименование> --&gt; Таблица12</Наименование>
						<Порядок>750</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Таблица12" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ВходящиеДанные.Получить("Таблица") &lt;&gt; "Таблица12" Тогда
	Отказ = 1;	
ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
Иначе	
	КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");	
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>63</Код>
							<Наименование> --&gt; ВидМПЗ</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидМПЗ" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыМПЗ"/>
							<КодПравилаКонвертации>ВидыМПЗ                                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>71</Код>
							<Наименование> --&gt; Номенклатура</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
							<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>72</Код>
							<Наименование> --&gt; НоменклатурнаяГруппа</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НоменклатурнаяГруппа" Вид="Реквизит" Тип="СправочникСсылка.НоменклатурныеГруппы"/>
							<КодПравилаКонвертации>НоменклатурныеГруппы                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НоменклатурнаяГруппа;
ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
ИсходящиеДанные.Установить("Наименование", Значение);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>75</Код>
							<Наименование> --&gt; ХарактерДеятельности</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ХарактерДеятельности" Вид="Реквизит" Тип="ПеречислениеСсылка.ХарактерДеятельности"/>
						</Свойство>
						<Свойство>
							<Код>73</Код>
							<Наименование> --&gt; Партия</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Партия" Вид="Реквизит"/>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.Партия) = 1 Тогда
	Значение = "ПустаяПартия";
	ИмяПКО = "ПустаяПартия";
Иначе
	Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");
	Значение = ОбъектКоллекции.Партия;
	ИмяПКО = "ДокументРасчетовСКонтрагентом";
КонецЕсли;


	
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>65</Код>
							<Наименование> --&gt; ДокументОплаты</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДокументОплаты" Вид="Реквизит"/>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.ДокументОплаты) = 1 Тогда
//	Значение = "ПустаяПартия";
//	ИмяПКО = "ПустаяПартия";
Иначе
	Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");
	Значение = ОбъектКоллекции.ДокументОплаты;
	ИмяПКО = "ДокументРасчетовСКонтрагентом";
КонецЕсли;


	
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>66</Код>
							<Наименование> --&gt; ДокументОтгрузки</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДокументОтгрузки" Вид="Реквизит"/>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.ДокументОтгрузки) = 1 Тогда
	Значение = "ПустаяПартия";
	ИмяПКО = "ПустаяПартия";
Иначе
	Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПокупателем");
	Значение = ОбъектКоллекции.ДокументОтгрузки;
	ИмяПКО = "ДокументРасчетовСКонтрагентом";
КонецЕсли;


	
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>67</Код>
							<Наименование> --&gt; Количество</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>64</Код>
							<Наименование> --&gt; Выручка</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Выручка" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>70</Код>
							<Наименование> --&gt; НДСНачисленный</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НДСНачисленный" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>68</Код>
							<Наименование> --&gt; КоличествоОплаченоПоставщику</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КоличествоОплаченоПоставщику" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>69</Код>
							<Наименование> --&gt; НДС</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НДС" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>74</Код>
							<Наименование> --&gt; Сумма</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>62</Код>
						<Наименование> --&gt; Таблица15</Наименование>
						<Порядок>800</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Таблица15" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ВходящиеДанные.Получить("Таблица") &lt;&gt; "Таблица15" Тогда
	Отказ = 1;	
ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
Иначе	
	КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");	
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>76</Код>
							<Наименование> --&gt; ВидСписанногоМПЗ</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидСписанногоМПЗ" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыМПЗ"/>
							<КодПравилаКонвертации>ВидыМПЗ                                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>82</Код>
							<Наименование> --&gt; НоменклатурнаяГруппа</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НоменклатурнаяГруппа" Вид="Реквизит" Тип="СправочникСсылка.НоменклатурныеГруппы"/>
							<КодПравилаКонвертации>НоменклатурныеГруппы                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НоменклатурнаяГруппа;
ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
ИсходящиеДанные.Установить("Наименование", Значение);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>86</Код>
							<Наименование> --&gt; ХарактерДеятельности</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ХарактерДеятельности" Вид="Реквизит" Тип="ПеречислениеСсылка.ХарактерДеятельности"/>
						</Свойство>
						<Свойство>
							<Код>81</Код>
							<Наименование> --&gt; НоменклатураСписанная</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НоменклатураСписанная" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
							<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>84</Код>
							<Наименование> --&gt; ПартияСписаннойНоменклатуры</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПартияСписаннойНоменклатуры" Вид="Реквизит"/>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.ПартияСписаннойНоменклатуры) = 1 Тогда
	Значение = "ПустаяПартия";
	ИмяПКО = "ПустаяПартия";
Иначе
	Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");
	Значение = ОбъектКоллекции.ПартияСписаннойНоменклатуры;
	ИмяПКО = "ДокументРасчетовСКонтрагентом";
КонецЕсли;


	
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>77</Код>
							<Наименование> --&gt; ДокументОплаты</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДокументОплаты" Вид="Реквизит"/>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.ДокументОплаты) = 1 Тогда
//	Значение = "ПустаяПартия";
//	ИмяПКО = "ПустаяПартия";
Иначе
	Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");
	Значение = ОбъектКоллекции.ДокументОплаты;
	ИмяПКО = "ДокументРасчетовСКонтрагентом";
КонецЕсли;


	
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>80</Код>
							<Наименование> --&gt; НоменклатураПоступившая</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НоменклатураПоступившая" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
							<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>83</Код>
							<Наименование> --&gt; ПартияПоступившейНоменклатуры</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПартияПоступившейНоменклатуры" Вид="Реквизит"/>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.ПартияПоступившейНоменклатуры) = 1 Тогда
	Значение = "ПустаяПартия";
	ИмяПКО = "ПустаяПартия";
Иначе
	Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");
	Значение = ОбъектКоллекции.ПартияПоступившейНоменклатуры;
	ИмяПКО = "ДокументРасчетовСКонтрагентом";
КонецЕсли;


	
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>78</Код>
							<Наименование> --&gt; Количество</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>85</Код>
							<Наименование> --&gt; Сумма</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>79</Код>
							<Наименование> --&gt; НДС</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НДС" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ЗаписьКУДиР</Код>
				<Наименование> --&gt; ДокументСсылка.ЗаписьКУДиР</Наименование>
				<Порядок>200</Порядок>
				<ПередВыгрузкой>Если Параметры.ПараметрыАлгоритмов.Получить("УСН") &lt;&gt; 1 Тогда
	Отказ = 1;
КонецЕсли;
</ПередВыгрузкой>
				<Приемник>ДокументСсылка.ЗаписьКУДиР</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Проведен</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
					</Свойство>
					<Группа>
						<Код>8</Код>
						<Наименование> --&gt; Строки</Наименование>
						<Порядок>250</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Строки" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ТипЗначения(ВходящиеДанные.Получить("Строки")) = 0 Тогда
	Отказ = 1;
КонецЕсли;
</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>11</Код>
							<Наименование> --&gt; ДатаНомер</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаНомер" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование> --&gt; Содержание</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Содержание" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование> --&gt; Графа4</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Графа4" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование> --&gt; Графа5</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Графа5" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование> --&gt; Графа6</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Графа6" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование> --&gt; Графа7</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Графа7" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование> --&gt; НДС</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НДС" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование> --&gt; ДоходыЕНВД</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоходыЕНВД" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование> --&gt; РасходыЕНВД</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РасходыЕНВД" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>9</Код>
						<Наименование> --&gt; ОС</Наименование>
						<Порядок>300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОС" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ТипЗначения(ВходящиеДанные.Получить("ОС")) = 0 Тогда
	Отказ = 1;
КонецЕсли;
</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>20</Код>
							<Наименование> --&gt; ОсновноеСредство</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОсновноеСредство" Вид="Реквизит" Тип="СправочникСсылка.ОсновныеСредства"/>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование> --&gt; ДатаОплаты</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаОплаты" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>23</Код>
							<Наименование> --&gt; Графа4_ГосударственнаяРегистрация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Графа4_ГосударственнаяРегистрация" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование> --&gt; Графа5_ПервоначальнаяСтоимость</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Графа5_ПервоначальнаяСтоимость" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>24</Код>
							<Наименование> --&gt; Графа6_ОстаточнаяСтоимость</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Графа6_ОстаточнаяСтоимость" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>25</Код>
							<Наименование> --&gt; Графа8_КолКварталовВОтчетномПериоде</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Графа8_КолКварталовВОтчетномПериоде" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>26</Код>
							<Наименование> --&gt; Графа9_КолКварталовВНалПериоде</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Графа9_КолКварталовВНалПериоде" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>27</Код>
							<Наименование> --&gt; Графа10_ДоляРасходовЗаНалПериод</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Графа10_ДоляРасходовЗаНалПериод" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>28</Код>
							<Наименование> --&gt; Графа11_ДоляРасходовЗаКвартал</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Графа11_ДоляРасходовЗаКвартал" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>29</Код>
							<Наименование> --&gt; Графа12_СуммаРасходовЗаОтчетнПериод</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Графа12_СуммаРасходовЗаОтчетнПериод" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>30</Код>
							<Наименование> --&gt; Графа13_СуммаРасходовЗаКвартал</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Графа13_СуммаРасходовЗаКвартал" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>31</Код>
							<Наименование> --&gt; Графа14_РасходыПрошлыхПериодов</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Графа14_РасходыПрошлыхПериодов" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>32</Код>
							<Наименование> --&gt; Графа15_ОстатокРасходов</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Графа15_ОстатокРасходов" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>10</Код>
						<Наименование> --&gt; НМА</Наименование>
						<Порядок>350</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НМА" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ТипЗначения(ВходящиеДанные.Получить("НМА")) = 0 Тогда
	Отказ = 1;
КонецЕсли;
</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>33</Код>
							<Наименование> --&gt; НематериальныйАктив</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НематериальныйАктив" Вид="Реквизит" Тип="СправочникСсылка.НематериальныеАктивы"/>
						</Свойство>
						<Свойство>
							<Код>34</Код>
							<Наименование> --&gt; ДатаОплаты</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаОплаты" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>35</Код>
							<Наименование> --&gt; Графа5_ПервоначальнаяСтоимость</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Графа5_ПервоначальнаяСтоимость" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>36</Код>
							<Наименование> --&gt; Графа6_ОстаточнаяСтоимость</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Графа6_ОстаточнаяСтоимость" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>37</Код>
							<Наименование> --&gt; Графа8_КолКварталовВОтчетномПериоде</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Графа8_КолКварталовВОтчетномПериоде" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>38</Код>
							<Наименование> --&gt; Графа9_КолКварталовВНалПериоде</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Графа9_КолКварталовВНалПериоде" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>39</Код>
							<Наименование> --&gt; Графа10_ДоляРасходовЗаНалПериод</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Графа10_ДоляРасходовЗаНалПериод" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>40</Код>
							<Наименование> --&gt; Графа11_ДоляРасходовЗаКвартал</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Графа11_ДоляРасходовЗаКвартал" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>41</Код>
							<Наименование> --&gt; Графа12_СуммаРасходовЗаОтчетнПериод</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Графа12_СуммаРасходовЗаОтчетнПериод" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>42</Код>
							<Наименование> --&gt; Графа13_СуммаРасходовЗаКвартал</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Графа13_СуммаРасходовЗаКвартал" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>43</Код>
							<Наименование> --&gt; Графа14_РасходыПрошлыхПериодов</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Графа14_РасходыПрошлыхПериодов" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>44</Код>
							<Наименование> --&gt; Графа15_ОстатокРасходов</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Графа15_ОстатокРасходов" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
		<Группа>
			<Код>Организация</Код>
			<Наименование>Организация                                       </Наименование>
			<Порядок>300</Порядок>
			<Правило>
				<Код>Организации</Код>
				<Наименование> --&gt; СправочникСсылка.Организации</Наименование>
				<Порядок>50</Порядок>
				<ПослеВыгрузки>ВыгрузитьПоПравилу(,,,, "ТелефонДомашнийИндивидуальногоПредпринимателя");
ВыгрузитьПоПравилу(,,,, "ТелефонРабочийИндивидуальногоПредпринимателя");
ВыгрузитьПоПравилу(,,,, "АдресИндивидуальногоПредпринимателя");
ВыгрузитьПоПравилу(,,,, "ПаспортныеДанныеИндивидуальногоПредпринимателя");

</ПослеВыгрузки>
				<ПослеЗагрузки>Если Не ОбъектНайден Тогда
	Объект.ОбменДанными.Загрузка = Истина;
	Объект.Записать();
КонецЕсли;

Параметры.Вставить("Организация", Объект.Ссылка);

МенеджерЗаписиРегистра = РегистрыСведений.ДатыВводаНачальныхОстатков.СоздатьМенеджерЗаписи();
МенеджерЗаписиРегистра.Организация = Объект.Ссылка;
МенеджерЗаписиРегистра.Прочитать();
Если НЕ МенеджерЗаписиРегистра.Выбран() Тогда
	МенеджерЗаписиРегистра.Организация = Объект.Ссылка;
КонецЕсли;
Если ДатаНачала = ДатаОкончания Тогда
	ДатаВводаНачальныхОстатков = ДатаНачала - 24*60*60;
Иначе
	ДатаВводаНачальныхОстатков = ДатаОкончания;
КонецЕсли;	
МенеджерЗаписиРегистра.ДатаВводаНачальныхОстатков = ДатаВводаНачальныхОстатков;
МенеджерЗаписиРегистра.Записать();</ПослеЗагрузки>
				<Приемник>СправочникСсылка.Организации</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Константа.ФИО;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; ИНН</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ИНН" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Лев(Константа.ИНН, 12);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; РегистрационныйНомерПФР</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РегистрационныйНомерПФР" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>СправочникНалогов = СоздатьОбъект("Справочник.НалогиИОтчисления");
		
СправочникНалогов.ВыбратьЭлементы();	
Если СправочникНалогов.НайтиПоКоду("ПФР_страх") = 1 Тогда
	Значение = СправочникНалогов.РегНомер;
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Константа.ФИО;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование> --&gt; НаименованиеПлательщикаПриПеречисленииВБюджет</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НаименованиеПлательщикаПриПеречисленииВБюджет" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Константа.НаименованиеПлательщикаПриПеречисленииНалогов;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; КодПоОКПО</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодПоОКПО" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Константа.КодОКПО;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; КодИМНС</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодИМНС" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Константа.КодИМНС;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование> --&gt; КодИМНС</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НаименованиеИМНС" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Константа.НаименованиеИМНС;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование> --&gt; СвидетельствоДатаВыдачи</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОсновнойБанковскийСчет" Вид="Реквизит" Тип="СправочникСсылка.БанковскиеСчета"/>
						<ПередВыгрузкой>Значение = глЗначениеПоУмолчанию("ОсновнойСчет");</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование> --&gt; СвидетельствоДатаВыдачи</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ТерриториальныеУсловияПФР" Вид="Реквизит" Тип="СправочникСсылка.ТерриториальныеУсловия"/>
						<ПередВыгрузкой>Значение = Константа.ТерриториальныеУсловия;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование> --&gt; СвидетельствоДатаВыдачи</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СвидетельствоСерияНомер" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Константа.СвидетельствоСерияНомер;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; СвидетельствоДатаВыдачи</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СвидетельствоДатаВыдачи" Вид="Реквизит" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Константа.СвидетельствоДатаВыдачи;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>13</Код>
						<Наименование> --&gt; ЮрФизЛицо</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЮрФизЛицо" Вид="Реквизит" Тип="ПеречислениеСсылка.ЮрФизЛицо"/>
						<ПередВыгрузкой>Значение = "ФизЛицо";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>14</Код>
						<Наименование> --&gt; ИндивидуальныйПредприниматель</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ИндивидуальныйПредприниматель" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ИндивидуальныйПредприниматель                     </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Константа.ФИО;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>15</Код>
						<Наименование> --&gt; ВариантНаименованияДляПечатныхФорм</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВариантНаименованияДляПечатныхФорм" Вид="Реквизит" Тип="ПеречислениеСсылка.ВариантыНаименованияДляПечатныхФорм"/>
						<ПередВыгрузкой>Значение = "СокращенноеНаименование";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>16</Код>
						<Наименование> --&gt; НаименованиеСокращенное</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НаименованиеСокращенное" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Константа.ФИО;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>17</Код>
						<Наименование> --&gt; ВидОбменаСКонтролирующимиОрганами</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидОбменаСКонтролирующимиОрганами" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыОбменаСКонтролирующимиОрганами"/>
						<ПередВыгрузкой>Значение = "ОбменОтключен";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>18</Код>
						<Наименование> --&gt; НаименованиеПлательщикаПриПеречисленииВБюджет</Наименование>
						<Порядок>650</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НаименованиеПлательщикаПриПеречисленииВБюджет" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Константа.НаименованиеПлательщикаПриПеречисленииНалогов;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
		<Группа>
			<Код>ДокументыДляДвиженияРегистров</Код>
			<Наименование>ДокументыДляДвиженияРегистров                     </Наименование>
			<Порядок>350</Порядок>
			<Правило>
				<Код>Работники</Код>
				<Наименование> --&gt; ДокументСсылка.ПриемНаРаботуВОрганизацию</Наименование>
				<Порядок>50</Порядок>
				<ПередВыгрузкой>Если Параметры.СписокРаботников.КоличествоСтрок() = 0 Тогда
	Отказ = 1;
КонецЕсли;
</ПередВыгрузкой>
				<Приемник>ДокументСсылка.ПриемНаРаботуВОрганизацию</Приемник>
				<Свойства>
					<Группа>
						<Код>1</Код>
						<Наименование> --&gt; РаботникиОрганизации</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РаботникиОрганизации" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>КоллекцияОбъектов = Параметры.СписокРаботников;</ПередОбработкойВыгрузки>
						<ПередВыгрузкой>ДатаПриема = ОбъектКоллекции.ФизЛицо.ДатаПриема;
Если (ДатаПриема = Дата(0)) ИЛИ (ДатаПриема &gt; Параметры.ДатаКонцаПериодаВыгрузки) Тогда
	Отказ = 1;
КонецЕсли;
</ПередВыгрузкой>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; Сотрудник</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.СотрудникиОрганизаций"/>
							<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ФизЛицо;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование> --&gt; ПодразделениеОрганизации</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПодразделениеОрганизации" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ПодразделенияОрганизаций                          </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "Основное подразделение (для ИП)";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование> --&gt; Должность</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Должность" Вид="Реквизит" Тип="СправочникСсылка.ДолжностиОрганизаций"/>
							<КодПравилаКонвертации>ДолжностиОрганизаций                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ФизЛицо.Должность;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование> --&gt; ДатаПриема</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаПриема" Вид="Реквизит" Тип="Дата"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ФизЛицо.ДатаПриема;</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>2</Код>
						<Наименование> --&gt; ОсновныеНачисления</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОсновныеНачисления" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>КоллекцияОбъектов = Параметры.СписокРаботников;
КоллекцияОбъектов.НоваяКолонка("ВидРасчета");
КоллекцияОбъектов.НоваяКолонка("Размер");</ПередОбработкойВыгрузки>
						<ПередВыгрузкой>ДатаПриема = ОбъектКоллекции.ФизЛицо.ДатаПриема;
Если (ДатаПриема = Дата(0)) ИЛИ (ДатаПриема &gt; Параметры.ДатаКонцаПериодаВыгрузки) Тогда
	Отказ = 1;
Иначе
	ОбъектКоллекции.ВидРасчета = ОбъектКоллекции.ФизЛицо;
	ОбъектКоллекции.Размер = ОбъектКоллекции.ФизЛицо.Оклад.Получить(Параметры.ДатаКонцаПериодаВыгрузки);
КонецЕсли;
</ПередВыгрузкой>
						<Свойство>
							<Код>11</Код>
							<Наименование> --&gt; Сотрудник</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.СотрудникиОрганизаций"/>
							<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ФизЛицо;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование> --&gt; ВидРасчета</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидРасчета" Вид="Реквизит" Тип="ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций"/>
							<КодПравилаКонвертации>ОсновныеНачисленияОрганизаций                     </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ВидРасчета</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование> --&gt; Размер</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Размер" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Размер;</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Параметры.ДатаКонцаПериодаВыгрузки;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Проведен</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>5</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>6</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>14</Код>
						<Наименование> --&gt; ПриказНаГруппуСотрудников</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПриказНаГруппуСотрудников" Вид="Реквизит" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>УвольнениеИзОрганизаций</Код>
				<Наименование> --&gt; ДокументСсылка.УвольнениеИзОрганизаций</Наименование>
				<Порядок>100</Порядок>
				<ПередВыгрузкой>Если Параметры.СписокУволенныхРаботников.КоличествоСтрок() = 0 Тогда
	Отказ = 1;
КонецЕсли;
</ПередВыгрузкой>
				<Приемник>ДокументСсылка.УвольнениеИзОрганизаций</Приемник>
				<Свойства>
					<Группа>
						<Код>1</Код>
						<Наименование> --&gt; РаботникиОрганизации</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РаботникиОрганизации" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>КоллекцияОбъектов = Параметры.СписокУволенныхРаботников;</ПередОбработкойВыгрузки>
						<ПередВыгрузкой>ДатаУвольнения = ОбъектКоллекции.ФизЛицо.ДатаУвольнения;
Если (ДатаУвольнения = Дата(0)) ИЛИ (ДатаУвольнения &gt; Параметры.ДатаКонцаПериодаВыгрузки) Тогда
	Отказ = 1;
КонецЕсли;
</ПередВыгрузкой>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; Сотрудник</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.СотрудникиОрганизаций"/>
							<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ФизЛицо;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; ДатаУвольнения</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаУвольнения" Вид="Реквизит" Тип="Дата"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ФизЛицо.ДатаУвольнения;</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Параметры.ДатаКонцаПериодаВыгрузки;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Проведен</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>5</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; ПриказНаГруппуСотрудников</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПриказНаГруппуСотрудников" Вид="Реквизит" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>УстановкаЦенНоменклатуры</Код>
				<Наименование> --&gt; ДокументСсылка.УстановкаЦенНоменклатуры</Наименование>
				<Порядок>150</Порядок>
				<Источник>СправочникСсылка.Цены</Источник>
				<Приемник>ДокументСсылка.УстановкаЦенНоменклатуры</Приемник>
				<Свойства>
					<Группа>
						<Код>1</Код>
						<Наименование> --&gt; Товары</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Товары" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>2</Код>
							<Наименование>Владелец --&gt; Номенклатура</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
							<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>ТипЦен --&gt; ТипЦен</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Цена" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>Валюта --&gt; Валюта</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Валюта" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
						</Свойство>
					</Группа>
					<Свойство Поиск="true">
						<Код>5</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Параметры.ДатаВводаОстатков;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>6</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Параметры.ПостфиксКомментария = ВходящиеДанные.Получить("Наименование");
ПолучитьКомментарийДокумента();</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>7</Код>
						<Наименование> --&gt; ТипЦен</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ТипЦен" Вид="Реквизит" Тип="СправочникСсылка.ТипыЦенНоменклатуры"/>
						<КодПравилаКонвертации>ТипыЦенНоменклатуры                               </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = ВходящиеДанные.Получить("ТипЦен");
ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
ИсходящиеДанные.Установить("Наименование", ВходящиеДанные.Получить("Наименование"));
ИсходящиеДанные.Установить("ЦенаВключаетНДС", ВходящиеДанные.Получить("ЦенаВключаетНДС"));
ИсходящиеДанные.Установить("ВалютаЦены", Параметры.Рубли);</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>НДФЛиЕСНДоходыИНалоги</Код>
				<Наименование> --&gt; ДокументСсылка.НДФЛиЕСНДоходыИНалоги</Наименование>
				<Порядок>200</Порядок>
				<ПередВыгрузкой>Если (ВходящиеДанные.Получить("НДФЛСведенияОДоходах").КоличествоСтрок() = 0) и
	(ВходящиеДанные.Получить("НДФЛИсчисленный13").КоличествоСтрок() = 0) и
	(ВходящиеДанные.Получить("НДФЛУдержанный").КоличествоСтрок() = 0) Тогда
	Отказ = 1;
КонецЕсли;

Если ДатаГод(Параметры.ДатаВводаОстатков) &lt; 2010 Тогда
	Если (ВходящиеДанные.Получить("ЕСНСведенияОДоходах").КоличествоСтрок() = 0) и
		(ВходящиеДанные.Получить("ЕСННалоги").КоличествоСтрок() = 0) Тогда
		Отказ = 1;
	КонецЕсли;
Иначе
	Если (ВходящиеДанные.Получить("СтраховыеВзносыСведенияОДоходах").КоличествоСтрок() = 0) и
		(ВходящиеДанные.Получить("СтраховыеВзносы").КоличествоСтрок() = 0) Тогда
		Отказ = 1;
	КонецЕсли;
КонецЕсли;
</ПередВыгрузкой>
				<Приемник>ДокументСсылка.НДФЛиЕСНДоходыИНалоги</Приемник>
				<Свойства>
					<Группа>
						<Код>1</Код>
						<Наименование> --&gt; НДФЛСведенияОДоходах</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НДФЛСведенияОДоходах" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>10</Код>
							<Наименование> --&gt; ФизЛицо</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование> --&gt; ДатаДохода</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаДохода" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование> --&gt; ПериодРегистрации</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование> --&gt; МесяцНалоговогоПериода</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="МесяцНалоговогоПериода" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>48</Код>
							<Наименование> --&gt; КодДохода</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КодДохода" Вид="Реквизит" Тип="СправочникСсылка.ДоходыНДФЛ"/>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование> --&gt; ДатаДохода</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаДохода" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование> --&gt; СуммаДохода</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаДохода" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование> --&gt; КодВычета</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КодВычета" Вид="Реквизит" Тип="СправочникСсылка.ВычетыНДФЛ"/>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование> --&gt; СуммаВычета</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаВычета" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование> --&gt; СуммаНалогаИсчисленная</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаНалогаИсчисленная" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>2</Код>
						<Наименование> --&gt; НДФЛИсчисленный13</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НДФЛИсчисленный13" Вид="ТабличнаяЧасть"/>
						<ПередВыгрузкой>Если (ПустоеЗначение(ОбъектКоллекции.Налог) = 1) Тогда
		Отказ = 1;
КонецЕсли;
	</ПередВыгрузкой>
						<Свойство>
							<Код>19</Код>
							<Наименование> --&gt; ФизЛицо</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>20</Код>
							<Наименование> --&gt; МесяцНалоговогоПериода</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="МесяцНалоговогоПериода" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование> --&gt; Налог</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Налог" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>24</Код>
							<Наименование> --&gt; ПериодРегистрации</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>50</Код>
						<Наименование> --&gt; НДФЛПредоставленныеВычеты</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НДФЛПредоставленныеВычеты" Вид="ТабличнаяЧасть"/>
						<ПередВыгрузкой>Если (ПустоеЗначение(ОбъектКоллекции.КодВычета) = 1) Тогда
		Отказ = 1;
КонецЕсли;
	</ПередВыгрузкой>
						<Свойство>
							<Код>51</Код>
							<Наименование> --&gt; ФизЛицо</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>52</Код>
							<Наименование> --&gt; ПериодРегистрации</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>53</Код>
							<Наименование> --&gt; МесяцНалоговогоПериода</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="МесяцНалоговогоПериода" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>54</Код>
							<Наименование> --&gt; ПримененныйВычет</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПримененныйВычет" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>55</Код>
							<Наименование> --&gt; КодВычета</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КодВычета" Вид="Реквизит" Тип="СправочникСсылка.ВычетыНДФЛ"/>
							<ПередВыгрузкой>Если (ОбъектКоллекции.КодВычета.КодДляОтчетности2009 &lt;&gt; "103")
	И (ОбъектКоллекции.КодВычета.КодДляОтчетности2009 &lt;&gt; "104")
	И (ОбъектКоллекции.КодВычета.КодДляОтчетности2009 &lt;&gt; "105") Тогда
	
	ИмяПКО = "ВычетыНаРебенка";
Иначе
	ИмяПКО = "ВычетыНДФЛЛичный";
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>3</Код>
						<Наименование> --&gt; ЕСНСведенияОДоходах</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЕСНСведенияОДоходах" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>25</Код>
							<Наименование> --&gt; ФизЛицо</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>26</Код>
							<Наименование> --&gt; МесяцНалоговогоПериода</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="МесяцНалоговогоПериода" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>27</Код>
							<Наименование> --&gt; КодДоходаЕСН</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КодДоходаЕСН" Вид="Реквизит" Тип="СправочникСсылка.ДоходыЕСН"/>
						</Свойство>
						<Свойство>
							<Код>28</Код>
							<Наименование> --&gt; СуммаДохода</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаДохода" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>29</Код>
							<Наименование> --&gt; ОблагаетсяЕНВД</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОблагаетсяЕНВД" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>4</Код>
						<Наименование> --&gt; ЕСННалоги</Наименование>
						<Порядок>250</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЕСННалоги" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>30</Код>
							<Наименование> --&gt; ФизЛицо</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>31</Код>
							<Наименование> --&gt; МесяцНалоговогоПериода</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="МесяцНалоговогоПериода" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>32</Код>
							<Наименование> --&gt; ФедеральныйБюджет</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФедеральныйБюджет" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>33</Код>
							<Наименование> --&gt; ФСС</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФСС" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>34</Код>
							<Наименование> --&gt; ФФОМС</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФФОМС" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>35</Код>
							<Наименование> --&gt; ТФОМС</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ТФОМС" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>36</Код>
							<Наименование> --&gt; ПФРНакопительная</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПФРНакопительная" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>37</Код>
							<Наименование> --&gt; ПФРСтраховая</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПФРСтраховая" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>38</Код>
							<Наименование> --&gt; ПримененнаяЛьготаФБ</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПримененнаяЛьготаФБ" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>39</Код>
							<Наименование> --&gt; ПримененнаяЛьготаФСС</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПримененнаяЛьготаФСС" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>40</Код>
							<Наименование> --&gt; ПримененнаяЛьготаФОМС</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПримененнаяЛьготаФОМС" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>41</Код>
							<Наименование> --&gt; ПФРНакопительнаяЕНВД</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПФРНакопительнаяЕНВД" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>42</Код>
							<Наименование> --&gt; ПФРСтраховаяЕНВД</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПФРСтраховаяЕНВД" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>5</Код>
						<Наименование> --&gt; НДФЛУдержанный</Наименование>
						<Порядок>300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НДФЛУдержанный" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>43</Код>
							<Наименование> --&gt; ФизЛицо</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>44</Код>
							<Наименование> --&gt; КодДохода</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="МесяцНалоговогоПериода" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>45</Код>
							<Наименование> --&gt; ПериодРегистрации</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>46</Код>
							<Наименование> --&gt; СтавкаНалогообложения</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтавкаНалогообложения" Вид="Реквизит" Тип="ПеречислениеСсылка.НДФЛСтавкиНалогообложенияРезидента"/>
						</Свойство>
						<Свойство>
							<Код>47</Код>
							<Наименование> --&gt; Налог</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Налог" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Свойство Поиск="true">
						<Код>6</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Параметры.ДатаКонцаПериодаВыгрузки;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование> --&gt; Проведен</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>8</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>9</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
					</Свойство>
					<Группа>
						<Код>56</Код>
						<Наименование> --&gt; СтраховыеВзносы</Наименование>
						<Порядок>550</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СтраховыеВзносы" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>59</Код>
							<Наименование> --&gt; ФизЛицо</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>60</Код>
							<Наименование> --&gt; МесяцРасчетногоПериода</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="МесяцРасчетногоПериода" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>61</Код>
							<Наименование> --&gt; ПФРНакопительная</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПФРНакопительная" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>62</Код>
							<Наименование> --&gt; ПФРНакопительнаяЕНВД</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПФРНакопительнаяЕНВД" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>63</Код>
							<Наименование> --&gt; ПФРСтраховая</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПФРСтраховая" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>64</Код>
							<Наименование> --&gt; ПФРСтраховаяЕНВД</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПФРСтраховаяЕНВД" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>65</Код>
							<Наименование> --&gt; ТФОМС</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ТФОМС" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>66</Код>
							<Наименование> --&gt; ФФОМС</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФФОМС" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>67</Код>
							<Наименование> --&gt; ФСС</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФСС" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>68</Код>
							<Наименование> --&gt; ФССНесчастныеСлучаи</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФССНесчастныеСлучаи" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>57</Код>
						<Наименование> --&gt; СтраховыеВзносыСведенияОДоходах</Наименование>
						<Порядок>600</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СтраховыеВзносыСведенияОДоходах" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>69</Код>
							<Наименование> --&gt; ФизЛицо</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>70</Код>
							<Наименование> --&gt; МесяцРасчетногоПериода</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="МесяцРасчетногоПериода" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>71</Код>
							<Наименование> --&gt; ВидДохода</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДохода" Вид="Реквизит" Тип="СправочникСсылка.ДоходыПоСтраховымВзносам"/>
						</Свойство>
						<Свойство>
							<Код>72</Код>
							<Наименование> --&gt; ОблагаетсяЕНВД</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОблагаетсяЕНВД" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>73</Код>
							<Наименование> --&gt; Результат</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Результат" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>74</Код>
							<Наименование> --&gt; Скидка</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Скидка" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Свойство>
						<Код>58</Код>
						<Наименование> --&gt; НалоговыйПериод</Наименование>
						<Порядок>650</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НалоговыйПериод" Вид="Реквизит" Тип="Число"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>РасчетыПоСтраховымВзносам</Код>
				<Наименование>: </Наименование>
				<Порядок>250</Порядок>
				<Приемник>ДокументСсылка.РасчетыПоСтраховымВзносам</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование> --&gt; ДатаПлатежа</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаПлатежа" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>5</Код>
						<Наименование> --&gt; МесяцРасчетногоПериода</Наименование>
						<Порядок>250</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="МесяцРасчетногоПериода" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>6</Код>
						<Наименование> --&gt; ВидОперации</Наименование>
						<Порядок>300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидОперации" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыОперацийРасчетыПоСтраховымВзносам"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>7</Код>
						<Наименование> --&gt; ВидПлатежа</Наименование>
						<Порядок>350</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидПлатежа" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыПлатежейВГосБюджет"/>
						<КодПравилаКонвертации>ВидыПлатежейВГосБюджет                            </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; ПФРНакопительная</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПФРНакопительная" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование> --&gt; ПФРСтраховая</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПФРСтраховая" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование> --&gt; ТФОМС</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ТФОМС" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование> --&gt; ФСС</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФСС" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>13</Код>
						<Наименование> --&gt; ФССНесчастныеСлучаи</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФССНесчастныеСлучаи" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование> --&gt; ФФОМС</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФФОМС" Вид="Реквизит" Тип="Число"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
		<Группа>
			<Код>Проверки</Код>
			<Наименование>Проверки                                          </Наименование>
			<Порядок>400</Порядок>
			<Правило>
				<Код>КонвертацииИзИнформационныхБаз1СПредприятия77</Код>
				<Наименование> --&gt; СправочникСсылка.КонвертацииИзИнформационныхБаз1СПредприятия77</Наименование>
				<Порядок>50</Порядок>
				<Приемник>СправочникСсылка.КонвертацииИзИнформационныхБазПредыдущихВерсий</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; ИдентификаторКонфигурации</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ИдентификаторКонфигурации" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; КонтрольныеЗначения</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КонтрольныеЗначения" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Проверки();</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
	</ПравилаКонвертацииОбъектов>
	<ПравилаВыгрузкиДанных>
		<Группа Отключить="false">
			<Код>Справочники</Код>
			<Наименование>Справочники</Наименование>
			<Порядок>50</Порядок>
			<Правило Отключить="false">
				<Код>Банки</Код>
				<Наименование>Банки</Наименование>
				<Порядок>100</Порядок>
				<КодПравилаКонвертации>Банки                                             </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.Банки</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>БанковскиеСчета</Код>
				<Наименование>Банковские счета</Наименование>
				<Порядок>150</Порядок>
				<КодПравилаКонвертации>БанковскиеСчета                                   </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.БанковскиеСчета</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>Работники</Код>
				<Наименование>Работники                                         </Наименование>
				<Порядок>250</Порядок>
				<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.Работники</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>Договоры</Код>
				<Наименование>Договоры                                          </Наименование>
				<Порядок>300</Порядок>
				<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.Договоры</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>Контрагенты</Код>
				<Наименование>Контрагенты                                       </Наименование>
				<Порядок>350</Порядок>
				<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.Контрагенты</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>РасчетныеСчета</Код>
				<Наименование>Расчетные счета</Наименование>
				<Порядок>400</Порядок>
				<КодПравилаКонвертации>РасчетныеСчета                                    </КодПравилаКонвертации>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.РасчетныеСчета</ОбъектВыборки>
				<ПередОбработкойПравила>ОбъектВыборки = СтрЗаменить(Правило.ОбъектВыборки, "Ссылка", "");
Выборка = СоздатьОбъект(ОбъектВыборки);
ВыборкаВладельцев = СоздатьОбъект("Справочник." + Метаданные.Справочник(Выборка.Вид()).Владелец.Идентификатор);

ВыборкаВладельцев.ВыбратьЭлементы();
Пока ВыборкаВладельцев.ПолучитьЭлемент() &gt; 0 Цикл
	Выборка.ИспользоватьВладельца(ВыборкаВладельцев.ТекущийЭлемент());
	Выборка.ВыбратьЭлементы();
	Пока Выборка.ПолучитьЭлемент() &gt; 0 Цикл
		НомерПКО = НайтиПравило(, Правило.КодПравилаКонвертации);
		ВыгрузитьПоПравилу(Выборка.ТекущийЭлемент(),,,,,,, НомерПКО);
	КонецЦикла;
КонецЦикла;

Отказ = 1;</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>ЕдиницыИзмерений</Код>
				<Наименование>Единицы измерений</Наименование>
				<Порядок>450</Порядок>
				<КодПравилаКонвертации>КлассификаторЕдиницИзмерения                      </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.ЕдиницыИзмерений</ОбъектВыборки>
			</Правило>
			<Правило Отключить="true">
				<Код>КлассификаторЕН</Код>
				<Наименование>Классификатор ЕНАОФ</Наименование>
				<Порядок>500</Порядок>
				<КодПравилаКонвертации>ЕдиныеНормыАмортизационныхОтчисленийОсновныхФондов</КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.КлассификаторЕН</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>ОсновныеСредства</Код>
				<Наименование>Основные средства</Наименование>
				<Порядок>550</Порядок>
				<КодПравилаКонвертации>ОсновныеСредства                                  </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.ОсновныеСредства</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>ПрочиеДоходыИРасходы</Код>
				<Наименование>Прочие доходы и расходы                              </Наименование>
				<Порядок>600</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Выборка = СоздатьОбъект("Справочник.ПрочиеДоходы");
Выборка.ВыбратьЭлементы();
Пока Выборка.ПолучитьЭлемент() &gt; 0 Цикл		
		ВыгрузитьПоПравилу(Выборка.ТекущийЭлемент(),,,, "ПрочиеДоходы");	
КонецЦикла;

Выборка = СоздатьОбъект("Справочник.ПрочиеРасходы");
Выборка.ВыбратьЭлементы();
Пока Выборка.ПолучитьЭлемент() &gt; 0 Цикл		
		ВыгрузитьПоПравилу(Выборка.ТекущийЭлемент(),,,, "ПрочиеРасходы");	
КонецЦикла;

Отказ = 1;</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>РасходыБудущихПериодов</Код>
				<Наименование>Расходы будущих периодов</Наименование>
				<Порядок>650</Порядок>
				<КодПравилаКонвертации>РасходыБудущихПериодов                            </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.ВидыРасходовБудущихПериодов</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>НематериальныеАктивы</Код>
				<Наименование>Нематериальные активы</Наименование>
				<Порядок>700</Порядок>
				<КодПравилаКонвертации>НематериальныеАктивы                              </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.НематериальныеАктивы</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>ТипыЦен</Код>
				<Наименование>Типы цен</Наименование>
				<Порядок>750</Порядок>
				<КодПравилаКонвертации>ТипыЦенНоменклатурыСправочник                     </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.ТипыЦен</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>ЦеныНоменклатуры</Код>
				<Наименование>Цены номенклатуры                                  </Наименование>
				<Порядок>800</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>ТипыЦен = СоздатьОбъект("ТаблицаЗначений");
ТипыЦен.НоваяКолонка("ТипЦен");
ТипыЦен.НоваяКолонка("ЦенаВключаетНДС");
ТипыЦен.НоваяКолонка("Товары");

Выборка = СоздатьОбъект("Справочник.Цены");
ВыборкаВладельцев = СоздатьОбъект("Справочник.Номенклатура");

ВыборкаВладельцев.ВыбратьЭлементы();
Пока ВыборкаВладельцев.ПолучитьЭлемент() &gt; 0 Цикл
	
	// Справочник "Цены"
	Выборка.ИспользоватьВладельца(ВыборкаВладельцев.ТекущийЭлемент());
	Выборка.ВыбратьЭлементы();
	Пока Выборка.ПолучитьЭлемент() &gt; 0 Цикл
		Если Выборка.Цена.Получить(Параметры.ДатаВводаОстатков) &lt;&gt; 0 Тогда
			НомСтроки = 0;
			ТипЦен = СокрЛП(Выборка.ТипЦен.Наименование);
			Если ТипыЦен.НайтиЗначение(ТипЦен, НомСтроки, "ТипЦен") = 0 Тогда
				ТипыЦен.НоваяСтрока();
				ТипыЦен.ТипЦен = ТипЦен;
				ТипыЦен.ЦенаВключаетНДС = Выборка.ТипЦен.ЦенаВклНДС;
				ТипыЦен.Товары = СоздатьОбъект("ТаблицаЗначений");
				
				Товары = ТипыЦен.Товары;
				Товары.НоваяКолонка("Номенклатура");
				Товары.НоваяКолонка("Цена");
				Товары.НоваяКолонка("Валюта");
				
			Иначе
				ТипыЦен.ПолучитьСтрокуПоНомеру(НомСтроки);
				Товары = ТипыЦен.Товары;
			КонецЕсли;
			
			Товары.НоваяСтрока();
			Товары.Номенклатура = ВыборкаВладельцев.ТекущийЭлемент();
			Товары.Цена = Выборка.Цена.Получить(Параметры.ДатаВводаОстатков);
			Товары.Валюта = ?(ПустоеЗначение(Выборка.Валюта) = 1, Параметры.Рубли, Выборка.Валюта);
		КонецЕсли;
	КонецЦикла;
КонецЦикла;

ВходящиеДанные = СоздатьОбъект("СписокЗначений");

ТипыЦен.ВыбратьСтроки();
Пока ТипыЦен.ПолучитьСтроку() = 1 Цикл
	Если ТипыЦен.Товары.КоличествоСтрок() &gt; 0 Тогда
		ВходящиеДанные.УдалитьВсе();
		ВходящиеДанные.Установить("ТипЦен", ТипыЦен.ТипЦен);
		ВходящиеДанные.Установить("Наименование", ТипыЦен.ТипЦен);
		ВходящиеДанные.Установить("ЦенаВключаетНДС", ТипыЦен.ЦенаВключаетНДС);
		ВходящиеДанные.Установить("Товары", ТипыЦен.Товары);
		ВыгрузитьПоПравилу(,, ВходящиеДанные,, "УстановкаЦенНоменклатуры");
	КонецЕсли;
КонецЦикла;

Отказ = 1;</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>Номенклатура</Код>
				<Наименование>Номенклатура                                      </Наименование>
				<Порядок>850</Порядок>
				<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.Номенклатура</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>МестаХранения</Код>
				<Наименование>Места хранения</Наименование>
				<Порядок>900</Порядок>
				<КодПравилаКонвертации>Склады                                            </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.МестаХранения</ОбъектВыборки>
			</Правило>
		</Группа>
		<Группа Отключить="true">
			<Код>_ОстаткиИОборотыПоРазделамУчета</Код>
			<Наименование>Остатки и обороты по разделам учета</Наименование>
			<Порядок>100</Порядок>
			<Правило Отключить="true">
				<Код>тОсновныеСредства</Код>
				<Наименование>Основные средства                                 </Наименование>
				<Порядок>50</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Установить("ВидМПЗ", Перечисление.ВидыМатериальныхРесурсов.ОсновноеСредство);
Параметры.РазделУчета = "ОсновныеСредства";
Параметры.ПостфиксКомментария = "Основные средства";
ВыгрузитьОстаткиВНА();
ВыгрузитьОборотыВНА_НУ();



</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>тНематериальныеАктивы</Код>
				<Наименование>Нематериальные активы                             </Наименование>
				<Порядок>100</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Установить("ВидМПЗ", Перечисление.ВидыМатериальныхРесурсов.НематериальныйАктив);
Параметры.РазделУчета = "НематериальныеАктивыИНИОКР";
Параметры.ПостфиксКомментария = "Нематериальные активы";
ВыгрузитьОстаткиВНА();
ВыгрузитьОборотыВНА_НУ();


</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>тВнеоборотныеАктивы</Код>
				<Наименование>Внеоборотные активы                               </Наименование>
				<Порядок>150</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Установить("ВидМПЗ", Перечисление.ВидыМатериальныхРесурсов.ВнеоборотныйАктив);
Параметры.ПараметрыАлгоритмов.Установить("СчетУчета", "ПриобретениеОбъектовОсновныхСредств");
Параметры.РазделУчета = "КапитальныеВложения";
Параметры.ПостфиксКомментария = "Внеоборотные активы";
Параметры.ПараметрыАлгоритмов.Установить("ВидВыгрузки", "КонечныеОстатки");
ВыгрузитьОстаткиМПЗ();
</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>тМатериалы</Код>
				<Наименование>Материалы                                        </Наименование>
				<Порядок>200</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Установить("ВидМПЗ", Перечисление.ВидыМатериальныхРесурсов.Материал);
Параметры.ПараметрыАлгоритмов.Установить("СчетУчета", "СырьеИМатериалы");
Параметры.РазделУчета = "Материалы";
Параметры.ПостфиксКомментария = "Материалы";
Параметры.ПараметрыАлгоритмов.Установить("ВидВыгрузки", "НачальныеОстатки");
ВыгрузитьОстаткиМПЗ();
ВыгрузитьОборотыМПЗ_НУ();
Если Параметры.ПараметрыАлгоритмов.Получить("УСН") = 0 Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ВидВыгрузки", "КонечныеОстатки");
	ВыгрузитьОстаткиМПЗ();
КонецЕсли;

Параметры.ПараметрыАлгоритмов.Установить("ВидМПЗ", Перечисление.ВидыМатериальныхРесурсов.ВспомогательныйМатериал);
Параметры.ПараметрыАлгоритмов.Установить("СчетУчета", "ПрочиеМатериалы");
Параметры.РазделУчета = "Материалы";
Параметры.ПостфиксКомментария = "Вспомогательные материалы";
Параметры.ПараметрыАлгоритмов.Установить("ВидВыгрузки", "НачальныеОстатки");
ВыгрузитьОстаткиМПЗ();
ВыгрузитьОборотыМПЗ_НУ();
Если Параметры.ПараметрыАлгоритмов.Получить("УСН") = 0 Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ВидВыгрузки", "КонечныеОстатки");
	ВыгрузитьОстаткиМПЗ();
КонецЕсли;
</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>тДанныеПоНДСпоПоставщикам</Код>
				<Наименование>НДС по приобретенным ценностям</Наименование>
				<Порядок>250</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.РазделУчета = "НДСПоПриобретеннымЦенностям";
Параметры.ПостфиксКомментария = "НДС по приобретенным ценностям";
ВыгрузитьОстаткиНДС();</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>тТовары</Код>
				<Наименование>Товары</Наименование>
				<Порядок>300</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Установить("ВидМПЗ", Перечисление.ВидыМатериальныхРесурсов.Товар);
Параметры.ПараметрыАлгоритмов.Установить("СчетУчета", "ТоварыНаСкладах");
Параметры.РазделУчета = "Товары";
Параметры.ПостфиксКомментария = "Товары";
Параметры.ПараметрыАлгоритмов.Установить("ВидВыгрузки", "НачальныеОстатки");
ВыгрузитьОстаткиМПЗ();
ВыгрузитьОборотыМПЗ_НУ();
Если Параметры.ПараметрыАлгоритмов.Получить("УСН") = 0 Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ВидВыгрузки", "КонечныеОстатки");
	ВыгрузитьОстаткиМПЗ();
	ВыгрузитьОборотыМПЗ_Таб16();
КонецЕсли;
</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>тГотоваяПродукцияИПолуфабрикаты</Код>
				<Наименование>Готовая продукция и полуфабрикаты                 </Наименование>
				<Порядок>350</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Установить("ВидМПЗ", Перечисление.ВидыМатериальныхРесурсов.Продукция);
Параметры.ПараметрыАлгоритмов.Установить("СчетУчета", "ГотоваяПродукция");
Параметры.РазделУчета = "ГотоваяПродукцияИПолуфабрикаты";
Параметры.ПостфиксКомментария = "Готовая продукция";
Параметры.ТаблицаОстатковМПЗОборотов.УдалитьСтроки();
Параметры.ПараметрыАлгоритмов.Установить("ВидВыгрузки", "НачальныеОстатки");
ВыгрузитьОстаткиМПЗ();
ВыгрузитьОборотыМПЗ_НУ();
Если Параметры.ПараметрыАлгоритмов.Получить("УСН") = 0 Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ВидВыгрузки", "КонечныеОстатки");
	ВыгрузитьОборотыМПЗ_Таб15();
	ВыгрузитьОстаткиМПЗ();
КонецЕсли;


Параметры.ПараметрыАлгоритмов.Установить("ВидМПЗ", Перечисление.ВидыМатериальныхРесурсов.Полуфабрикат);
Параметры.ПараметрыАлгоритмов.Установить("СчетУчета", "Полуфабрикаты");
Параметры.РазделУчета = "ГотоваяПродукцияИПолуфабрикаты";
Параметры.ПостфиксКомментария = "Полуфабрикаты";
Параметры.ТаблицаОстатковМПЗОборотов.УдалитьСтроки();
Параметры.ПараметрыАлгоритмов.Установить("ВидВыгрузки", "НачальныеОстатки");
ВыгрузитьОстаткиМПЗ();
ВыгрузитьОборотыМПЗ_НУ();
Если Параметры.ПараметрыАлгоритмов.Получить("УСН") = 0 Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ВидВыгрузки", "КонечныеОстатки");
	ВыгрузитьОборотыМПЗ_Таб15();
	ВыгрузитьОстаткиМПЗ();
КонецЕсли;


</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>тТоварыРеализованные</Код>
				<Наименование>Товары реализованные                                </Наименование>
				<Порядок>400</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Установить("ВидПрочихРасходов", "МатериальныеРасходы");
Параметры.ПараметрыАлгоритмов.Установить("ВидМПЗ", Перечисление.ВидыМатериальныхРесурсов.Товар);
Параметры.ПараметрыАлгоритмов.Установить("СчетУчета", "ПокупныеТоварыОтгруженные");
Параметры.РазделУчета = "ПрочиеРасходыНалоговогоУчетаУСНиИП";
Параметры.ПостфиксКомментария = "Товары реализованные";
Параметры.ТаблицаОстатковМПЗОборотов.УдалитьСтроки();
Параметры.ПараметрыАлгоритмов.Установить("ВидВыгрузки", "НачальныеОстатки");
ВыгрузитьОстаткиМПЗОтгруженных();

Параметры.ПараметрыАлгоритмов.Установить("ВидМПЗ", Перечисление.ВидыМатериальныхРесурсов.Продукция);
Параметры.ПараметрыАлгоритмов.Установить("СчетУчета", "ГотоваяПродукцияОтгруженная");
Параметры.РазделУчета = "ПрочиеРасходыНалоговогоУчетаУСНиИП";
Параметры.ПостфиксКомментария = "Продукция реализованная";
Параметры.ТаблицаОстатковМПЗОборотов.УдалитьСтроки();
Параметры.ПараметрыАлгоритмов.Установить("ВидВыгрузки", "НачальныеОстатки");
ВыгрузитьОстаткиМПЗОтгруженных();

Параметры.ПараметрыАлгоритмов.Установить("ВидМПЗ", Перечисление.ВидыМатериальныхРесурсов.Услуга);
Параметры.ПараметрыАлгоритмов.Установить("СчетУчета", "ГотоваяПродукцияОтгруженная");
Параметры.РазделУчета = "ПрочиеРасходыНалоговогоУчетаУСНиИП";
Параметры.ПостфиксКомментария = "Услуги реализованные";
Параметры.ТаблицаОстатковМПЗОборотов.УдалитьСтроки();
Параметры.ПараметрыАлгоритмов.Установить("ВидВыгрузки", "НачальныеОстатки");
Если Параметры.ПараметрыАлгоритмов.Получить("УСН") = 0 Тогда //для УСН расчеты по услугам это расчеты с покупателем
	ВыгрузитьОстаткиМПЗОтгруженных();
КонецЕсли;

Параметры.ПараметрыАлгоритмов.Установить("ВидМПЗ", Перечисление.ВидыМатериальныхРесурсов.Полуфабрикат);
Параметры.ПараметрыАлгоритмов.Установить("СчетУчета", "ГотоваяПродукцияОтгруженная");
Параметры.РазделУчета = "ПрочиеРасходыНалоговогоУчетаУСНиИП";
Параметры.ПостфиксКомментария = "Полуфабрикаты реализованные";
Параметры.ТаблицаОстатковМПЗОборотов.УдалитьСтроки();
Параметры.ПараметрыАлгоритмов.Установить("ВидВыгрузки", "НачальныеОстатки");
ВыгрузитьОстаткиМПЗОтгруженных();

Параметры.ПараметрыАлгоритмов.Установить("ВидМПЗ", Перечисление.ВидыМатериальныхРесурсов.Материал);
Параметры.ПараметрыАлгоритмов.Установить("СчетУчета", "ПрочиеТоварыОтгруженные");
Параметры.РазделУчета = "ПрочиеРасходыНалоговогоУчетаУСНиИП";
Параметры.ПостфиксКомментария = "Материалы реализованные";
Параметры.ТаблицаОстатковМПЗОборотов.УдалитьСтроки();
Параметры.ПараметрыАлгоритмов.Установить("ВидВыгрузки", "НачальныеОстатки");
ВыгрузитьОстаткиМПЗОтгруженных();

Параметры.ПараметрыАлгоритмов.Установить("ВидМПЗ", Перечисление.ВидыМатериальныхРесурсов.ВспомогательныйМатериал);
Параметры.ПараметрыАлгоритмов.Установить("СчетУчета", "ПрочиеТоварыОтгруженные");
Параметры.РазделУчета = "ПрочиеРасходыНалоговогоУчетаУСНиИП";
Параметры.ПостфиксКомментария = "Вспомогательные материалы реализованные";
Параметры.ТаблицаОстатковМПЗОборотов.УдалитьСтроки();
Параметры.ПараметрыАлгоритмов.Установить("ВидВыгрузки", "НачальныеОстатки");
ВыгрузитьОстаткиМПЗОтгруженных();

//Параметры.ПараметрыАлгоритмов.Установить("ВидМПЗ", Перечисление.ВидыМатериальныхРесурсов.Прочее);
//Параметры.ПараметрыАлгоритмов.Установить("СчетУчета", "ПрочиеТоварыОтгруженные");
//Параметры.РазделУчета = "ПрочиеРасходыНалоговогоУчетаУСНиИП";
//Параметры.ПостфиксКомментария = "Прочие товары реализованные";
//Параметры.ТаблицаОстатковМПЗОборотов.УдалитьСтроки();
//Параметры.ПараметрыАлгоритмов.Установить("ВидВыгрузки", "НачальныеОстатки");
//ВыгрузитьОстаткиМПЗОтгруженных();</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>тКассаИБанк</Код>
				<Наименование>Денежные средства</Наименование>
				<Порядок>450</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//Выгрузка остатков по кассе в рублях
Параметры.ПараметрыАлгоритмов.Установить("СчетУчета", "КассаОрганизации");
Параметры.РазделУчета = "ДенежныеСредства";
Параметры.ПостфиксКомментария = "Касса (руб.)";
ВыгрузитьОстаткиДенежныхСредств();

//Выгрузка остатков по кассе в валюте
Параметры.ПараметрыАлгоритмов.Установить("СчетУчета", "КассаОрганизацииВал");
Параметры.РазделУчета = "ДенежныеСредства";
Параметры.ПостфиксКомментария = "Касса (вал.)";
ВыгрузитьОстаткиДенежныхСредств();

//Выгрузка остатков по банку по рублевым счетам
Параметры.ПараметрыАлгоритмов.Установить("СчетУчета", "РасчетныеСчета");
Параметры.РазделУчета = "ДенежныеСредства";
Параметры.ПостфиксКомментария = "Банк (руб.)";
ВыгрузитьОстаткиДенежныхСредств();

//Выгрузка остатков по банку по вылютным счетам
Параметры.ПараметрыАлгоритмов.Установить("СчетУчета", "ВалютныеСчета");
Параметры.РазделУчета = "ДенежныеСредства";
Параметры.ПостфиксКомментария = "Банк (вал.)";
ВыгрузитьОстаткиДенежныхСредств();</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>тРасчетыСПоставщиками</Код>
				<Наименование>Расчеты с поставщиками                             </Наименование>
				<Порядок>500</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Установить("ВидРасчетов", "РасчетыСПоставщиками");
Параметры.РазделУчета = "РасчетыСПоставщикамиИПодрядчиками";
Параметры.ПостфиксКомментария = "Расчеты с поставщиками";
ВыгрузитьОстаткиРасчетовСКонтрагентами();</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>тРасчетыСПокупателями</Код>
				<Наименование>Расчеты с покупателями                             </Наименование>
				<Порядок>550</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Установить("ВидРасчетов", "РасчетыСПокупателями");
Параметры.РазделУчета = "РасчетыСПокупателямиИЗаказчиками";
Параметры.ПостфиксКомментария = "Расчеты с покупателями";
ВыгрузитьОстаткиРасчетовСКонтрагентами();
</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>тПрочиеРасходы</Код>
				<Наименование>Прочие непризнанные расходы</Наименование>
				<Порядок>600</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//Подготовка статей затрат
Параметры.ПараметрыАлгоритмов.Установить("НаименованиеСтатьиЗатрат", "Материальные расходы");
Параметры.ПараметрыАлгоритмов.Установить( "ВидРасходовНУСтатьиЗатрат", "МатериальныеРасходы");
Параметры.ПараметрыАлгоритмов.Установить("ВидРасходовНУ", "МатериальныеРасходы");
Параметры.ПараметрыАлгоритмов.Установить("ОтнесениеРасходовКДеятельностиЕНВД", "РасходыОтносятсяКнеЕНВД");
СтатьяЗатрат = СоздатьОбъект("СписокЗначений");
СтатьяЗатрат.Установить("Наименование", "Материальные расходы");
ВыгрузитьПоПравилу(,,СтатьяЗатрат,, "СтатьиЗатрат");

Параметры.ПараметрыАлгоритмов.Установить("НаименованиеСтатьиЗатрат", "Прочие расходы");
Параметры.ПараметрыАлгоритмов.Установить( "ВидРасходовНУСтатьиЗатрат", "ПрочиеРасходы");
Параметры.ПараметрыАлгоритмов.Установить("ВидРасходовНУ", "ПрочиеРасходы");
СтатьяЗатрат = СоздатьОбъект("СписокЗначений");
СтатьяЗатрат.Установить("Наименование", "Прочие расходы");
ВыгрузитьПоПравилу(,,СтатьяЗатрат,, "СтатьиЗатрат");

Параметры.ПараметрыАлгоритмов.Установить("НаименованиеСтатьиЗатрат", "Иные материальные расходы");
Параметры.ПараметрыАлгоритмов.Установить( "ВидРасходовНУСтатьиЗатрат", "ПрочиеРасходы");
Параметры.ПараметрыАлгоритмов.Установить("ВидРасходовНУ", "ПрочиеРасходы");
СтатьяЗатрат = СоздатьОбъект("СписокЗначений");
СтатьяЗатрат.Установить("Наименование", "Иные материальные расходы");
ВыгрузитьПоПравилу(,,СтатьяЗатрат,, "СтатьиЗатрат");

Параметры.ПараметрыАлгоритмов.Установить("НаименованиеСтатьиЗатрат", "Распределяемые материальные расходы");
Параметры.ПараметрыАлгоритмов.Установить( "ВидРасходовНУСтатьиЗатрат", "ПрочиеРасходы");
Параметры.ПараметрыАлгоритмов.Установить("ОтнесениеРасходовКДеятельностиЕНВД", "РасходыРаспределяются");
Параметры.ПараметрыАлгоритмов.Установить("ВидРасходовНУ", "ПрочиеРасходы");
СтатьяЗатрат = СоздатьОбъект("СписокЗначений");
СтатьяЗатрат.Установить("Наименование", "Распределяемые материальные расходы");
ВыгрузитьПоПравилу(,,СтатьяЗатрат,, "СтатьиЗатрат");

//***********************************************************
Параметры.ПараметрыАлгоритмов.Установить("ВидВыгрузки", "НачальныеОстатки");
Параметры.ПараметрыАлгоритмов.Установить("СтатусыОплатыРасходовИП", "НеОплачено");
//***********************************************************

Параметры.ПараметрыАлгоритмов.Установить("ВидПрочихРасходов", "ИныеМатериальныеРасходы");
Параметры.ПараметрыАлгоритмов.Установить("НаименованиеСтатьиЗатрат", "Иные материальные расходы");
Параметры.ПараметрыАлгоритмов.Установить( "ВидРасходовНУСтатьиЗатрат", "ПрочиеРасходы");
Параметры.ПараметрыАлгоритмов.Установить("ВидРасходовНУ", "ПрочиеРасходы");
Параметры.ПараметрыАлгоритмов.Установить("ОтнесениеРасходовКДеятельностиЕНВД", "РасходыОтносятсяКнеЕНВД");

Параметры.ПараметрыАлгоритмов.Установить("ВидМПЗ", Перечисление.ВидыМатериальныхРесурсов.ИныеМатериальныеРасходы);
Параметры.РазделУчета = "ПрочиеРасходыНалоговогоУчетаУСНиИП";
Параметры.ПостфиксКомментария = "Иные материальные расходы";
ВыгрузитьОстаткиМПЗ();
ВыгрузитьОборотыМПЗ_НУ();

Параметры.ПараметрыАлгоритмов.Установить("ВидМПЗ", Перечисление.ВидыМатериальныхРесурсов.ИныеРасходыРаспределяемые);
Параметры.РазделУчета = "ПрочиеРасходыНалоговогоУчетаУСНиИП";
Параметры.ПостфиксКомментария = "Иные распределяемые материальные расходы";
ВыгрузитьОстаткиМПЗ();
ВыгрузитьОборотыМПЗ_НУ();

Параметры.ПараметрыАлгоритмов.Установить("ВидМПЗ", Перечисление.ВидыМатериальныхРесурсов.Прочее);
Параметры.РазделУчета = "ПрочиеРасходыНалоговогоУчетаУСНиИП";
Параметры.ПостфиксКомментария = "Прочие материальные расходы";
ВыгрузитьОстаткиМПЗ();
ВыгрузитьОборотыМПЗ_НУ();

Параметры.ПараметрыАлгоритмов.Установить("НаименованиеСтатьиЗатрат", "Распределяемые материальные расходы");
Параметры.ПараметрыАлгоритмов.Установить( "ВидРасходовНУСтатьиЗатрат", "ПрочиеРасходы");
Параметры.ПараметрыАлгоритмов.Установить("ОтнесениеРасходовКДеятельностиЕНВД", "РасходыРаспределяются");
Параметры.ПараметрыАлгоритмов.Установить("ВидРасходовНУ", "ПрочиеРасходы");
Параметры.ПараметрыАлгоритмов.Установить("ВидМПЗ", Перечисление.ВидыМатериальныхРесурсов.РасходыПодлежащиеРаспределению);
Параметры.РазделУчета = "ПрочиеРасходыНалоговогоУчетаУСНиИП";
Параметры.ПостфиксКомментария = "Распределяемые материальные расходы";
ВыгрузитьОстаткиМПЗ();
ВыгрузитьОборотыМПЗ_НУ();

//***********************************************************
Параметры.ПараметрыАлгоритмов.Установить("ВидПрочихРасходов", "МатериальныеРасходы");
Параметры.ПараметрыАлгоритмов.Установить("ОтнесениеРасходовКДеятельностиЕНВД", "РасходыОтносятсяКнеЕНВД");

Параметры.ПараметрыАлгоритмов.Установить("ВидМПЗ", Перечисление.ВидыМатериальныхРесурсов.Услуга);
Параметры.РазделУчета = "ПрочиеРасходыНалоговогоУчетаУСНиИП";
Параметры.ПостфиксКомментария = "Услуги";
ВыгрузитьОстаткиМПЗ();
ВыгрузитьОборотыМПЗ_НУ();

Параметры.ПараметрыАлгоритмов.Установить("ВидПрочихРасходов", "ПрочиеРасходы");
Параметры.РазделУчета = "ПрочиеРасходыНалоговогоУчетаУСНиИП";
Параметры.ПостфиксКомментария = "Прочие расходы налогового учета";
ВыгрузитьОстаткиПрочихРасходов();
ВыгрузитьОборотыПрочихРасходов_НУ();

//***********************************************************
Параметры.ПараметрыАлгоритмов.Установить("ВидПрочихРасходов", "МатериальныеРасходы");
Параметры.РазделУчета = "ПрочиеРасходыНалоговогоУчетаУСНиИП";
Параметры.ПостфиксКомментария = "Реализованные МПЗ";
ВыгрузитьОстаткиРасходовПоРеализованнымМПЗ();//в расчетах с покупателями

//***********************************************************
Параметры.РазделУчета = "ПрочиеРасходыНалоговогоУчетаУСНиИП";
Параметры.ПостфиксКомментария = "Не оплаченные поставщику расходы по ТМЦ";
ВыгрузитьОстаткиМПЗНеОплаченных(); //в расчетах с поставщиками

//***********************************************************
Параметры.ПараметрыАлгоритмов.Установить("СтатусыОплатыРасходовИП", "");
</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>тРасчетыПоНалогамИСборам</Код>
				<Наименование>Расчеты по налогам и сборам                          </Наименование>
				<Порядок>650</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Установить("НаименованиеСтатьиЗатрат", "Уплата налогов и сборов");
Параметры.ПараметрыАлгоритмов.Установить( "ВидРасходовНУСтатьиЗатрат", "НалогиИСборы");
Параметры.ПараметрыАлгоритмов.Установить("ВидРасходовНУ", "НалогиИСборы");
СтатьяЗатрат = СоздатьОбъект("СписокЗначений");
СтатьяЗатрат.Установить("Наименование", "Уплата налогов и сборов");
ВыгрузитьПоПравилу(,,СтатьяЗатрат,, "СтатьиЗатрат");

Параметры.ПараметрыАлгоритмов.Установить("ВидРасчетов", "РасчетыПоНалогамИСборам");
Параметры.РазделУчета = "РасчетыПоНалогамИСборам";
Параметры.ПостфиксКомментария = "Расчеты по налогам и сборам";
ВыгрузитьОстаткиРасчетовПоНалогамИСборам();

Параметры.ПараметрыАлгоритмов.Установить("ВидРасчетов", "СредстваУдержанныеУРаботников");
Параметры.РазделУчета = "РасчетыПоНалогамИСборам";
Параметры.ПостфиксКомментария = "Расчеты по НДФЛ";
ВыгрузитьОстаткиРасчетовПоНалогамИСборам();
</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>тРасчетыСПерсоналом</Код>
				<Наименование>Расчеты с работниками</Наименование>
				<Порядок>700</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Установить("НаименованиеСтатьиЗатрат", "Оплата труда");
Параметры.ПараметрыАлгоритмов.Установить( "ВидРасходовНУСтатьиЗатрат", "ОплатаТруда");
Параметры.ПараметрыАлгоритмов.Установить( "ВидРасходовНУ", "ОплатаТруда");
СтатьяЗатрат = СоздатьОбъект("СписокЗначений");
СтатьяЗатрат.Установить("Наименование", "Оплата труда");
ВыгрузитьПоПравилу(,,СтатьяЗатрат,, "СтатьиЗатрат");

Параметры.РазделУчета = "РасчетыСПерсоналомПоОплатеТрудаИДепонентам";
Параметры.ПостфиксКомментария = "Расчеты с персоналом по оплате труда";
ВыгрузитьОстаткиРасчетовСРаботниками();
ВыгрузитьОборотыРасчетовСРаботниками_НУ();
</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>тРасчетыСПодотчетнымиЛицами</Код>
				<Наименование>Расчеты с подотчетными лицами                       </Наименование>
				<Порядок>750</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Установить("ВидРасчетов", "РасчетыСПодотчетнымиЛицами");
Параметры.РазделУчета = "РасчетыСПодотчетнымиЛицами";
Параметры.ПостфиксКомментария = "Расчеты с подотчетными лицами";
ВыгрузитьОстаткиРасчетовСПодотчетнымиЛицами();
</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>тДанныеПоНДСпоАвансамПолученным</Код>
				<Наименование>НДС по авансам полученным                   </Наименование>
				<Порядок>800</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.РазделУчета = "НДСПоАвансамПолученным";
Параметры.ПостфиксКомментария = "НДС по авансам полученным";
ВыгрузитьОстаткиНДС();</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>тДанныеДляРасчетаНДФЛиЕСН</Код>
				<Наименование>Данные для расчета НДФЛ и ЕСН                         </Наименование>
				<Порядок>900</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>
// Параметры
Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Отказ = 1;
КонецЕсли;

ВычетыСотрудниковПоНДФЛ = СоздатьОбъект("Справочник.ВычетыСотрудниковПоНДФЛ");

Параметры.ПостфиксКомментария = "Данные для рассчета НДФЛ и ЕСН";

ОсобенностиИсчисленияНДФЛ = Константа.ОсобенностиИсчисленияНДФЛ.Получить(Параметры.ДатаКонцаПериодаВыгрузки );

ПределыДоходовЕСН = СоздатьОбъект("СписокЗначений");
СтавкиНалогаПФР = СоздатьОбъект("СписокЗначений");
СтавкиНалогаТФОМС = СоздатьОбъект("СписокЗначений");
СтавкиНалогаФФОМС = СоздатьОбъект("СписокЗначений");
СтавкиНалогаФСС = СоздатьОбъект("СписокЗначений");
СтавкиВзносаПФРСтраховаяЧасть = СоздатьОбъект("СписокЗначений");
СтавкиВзносаПФРНакопительнаяЧасть = СоздатьОбъект("СписокЗначений");
СтавкиНалогаПФРвзносы = СоздатьОбъект("СписокЗначений");


ВыбНачПериода = Параметры.ДатаВводаОстатков;
ВыбКонПериода = Параметры.ДатаКонцаПериодаВыгрузки;

ДатаВводаОстатков = Параметры.ДатаВводаОстатков;
СписокРаботников = Параметры.СписокРаботников;

Сотрудники=СоздатьОбъект("СписокЗначений");
СписокРаботников.Выгрузить(Сотрудники,,, "ФизЛицо");
ВсегоСотров = Сотрудники.РазмерСписка();

// Задолженность по оплате труда на момент ввода остатков
Задолженность = СоздатьОбъект("ТаблицаЗначений");
Задолженность.НоваяКолонка("ФизЛицо");
Задолженность.НоваяКолонка("Результат", "Число"); 
Задолженность.НоваяКолонка("ПодразделениеОрганизации"); 

// Исчислен НДФЛ
// за каждый расчетный период, но только в части ставки 13%
//
ИсчисленныйНДФЛ = СоздатьОбъект("ТаблицаЗначений"); 
ИсчисленныйНДФЛ.НоваяКолонка("ФизЛицо");            
ИсчисленныйНДФЛ.НоваяКолонка("МесяцНалоговогоПериода", "Дата");
ИсчисленныйНДФЛ.НоваяКолонка("ПериодРегистрации", "Дата");
ИсчисленныйНДФЛ.НоваяКолонка("Налог", "Число");
ИсчисленныйНДФЛ.НоваяКолонка("ПримененныйВычет", "Число");
ИсчисленныйНДФЛ.НоваяКолонка("КодВычета");

ИсчисленныйНДФЛКонтроль = СоздатьОбъект("ТаблицаЗначений");
ИсчисленныйНДФЛ.Выгрузить(ИсчисленныйНДФЛКонтроль);

//Предоставленные вычеты
НДФЛПредоставленныеВычеты = СоздатьОбъект("ТаблицаЗначений");
НДФЛПредоставленныеВычеты.НоваяКолонка("ФизЛицо");            
НДФЛПредоставленныеВычеты.НоваяКолонка("МесяцНалоговогоПериода", "Дата");
НДФЛПредоставленныеВычеты.НоваяКолонка("ПериодРегистрации", "Дата");
НДФЛПредоставленныеВычеты.НоваяКолонка("ПримененныйВычет", "Число");
НДФЛПредоставленныеВычеты.НоваяКолонка("КодВычета");

НДФЛПредоставленныеВычетыКонтроль = СоздатьОбъект("ТаблицаЗначений");
НДФЛПредоставленныеВычеты.Выгрузить(НДФЛПредоставленныеВычетыКонтроль);

// Удержанный НДФЛ
УдержанныйНДФЛ = СоздатьОбъект("ТаблицаЗначений"); 
УдержанныйНДФЛ.НоваяКолонка("ФизЛицо");            
УдержанныйНДФЛ.НоваяКолонка("МесяцНалоговогоПериода", "Дата");
УдержанныйНДФЛ.НоваяКолонка("ПериодРегистрации", "Дата");
УдержанныйНДФЛ.НоваяКолонка("СтавкаНалогообложения", "Строка");
УдержанныйНДФЛ.НоваяКолонка("Налог", "Число");

// Доходы НДФЛ за каждый месяц налогового периода
// Сюда же надо вписать движения, сторнирующие доходы, которые отразятся при вводе задолженности
// Сторнировать доходы надо по коду 2000, а затем отразить их с настоящим кодом.
ДоходыНДФЛ = СоздатьОбъект("ТаблицаЗначений");
ДоходыНДФЛ.НоваяКолонка("ФизЛицо");
ДоходыНДФЛ.НоваяКолонка("МесяцНалоговогоПериода", "Дата");
ДоходыНДФЛ.НоваяКолонка("ПериодРегистрации", "Дата");
ДоходыНДФЛ.НоваяКолонка("ДатаДохода", "Дата"); 
ДоходыНДФЛ.НоваяКолонка("КодДохода", "Строка");
ДоходыНДФЛ.НоваяКолонка("СуммаДохода", "Число");
ДоходыНДФЛ.НоваяКолонка("КодВычета", "Строка");
ДоходыНДФЛ.НоваяКолонка("СуммаВычета", "Число");
ДоходыНДФЛ.НоваяКолонка("СуммаНалогаИсчисленная", "Число");

// Доходы ЕСН за каждый месяц налогового периода
ДоходыЕСН = СоздатьОбъект("ТаблицаЗначений");
ДоходыЕСН.НоваяКолонка("ФизЛицо");
ДоходыЕСН.НоваяКолонка("МесяцНалоговогоПериода", "Дата");
ДоходыЕСН.НоваяКолонка("КодДоходаЕСН", "Строка"); // Доходы ЕСН
ДоходыЕСН.НоваяКолонка("СуммаДохода", "Число"); // это уже есть
ДоходыЕСН.НоваяКолонка("ОблагаетсяЕНВД", "Число");        

// Начисленный  ЕСН за каждый месяц налогового периода
НачисленныйЕСН = СоздатьОбъект("ТаблицаЗначений");
НачисленныйЕСН.НоваяКолонка("ФизЛицо");
НачисленныйЕСН.НоваяКолонка("МесяцНалоговогоПериода", "Дата");
НачисленныйЕСН.НоваяКолонка("ФедеральныйБюджет", "Число"); // собственно ЕСН
НачисленныйЕСН.НоваяКолонка("ФСС", "Число");
НачисленныйЕСН.НоваяКолонка("ФФОМС", "Число");
НачисленныйЕСН.НоваяКолонка("ТФОМС", "Число");
НачисленныйЕСН.НоваяКолонка("ПФРНакопительная", "Число");
НачисленныйЕСН.НоваяКолонка("ПФРСтраховая", "Число");
НачисленныйЕСН.НоваяКолонка("ПримененнаяЛьготаФБ", "Число");
НачисленныйЕСН.НоваяКолонка("ПримененнаяЛьготаФСС", "Число");
НачисленныйЕСН.НоваяКолонка("ПримененнаяЛьготаФОМС", "Число");
НачисленныйЕСН.НоваяКолонка("ПФРНакопительнаяЕНВД", "Число");
НачисленныйЕСН.НоваяКолонка("ПФРСтраховаяЕНВД", "Число");
НачисленныйЕСН.НоваяКолонка("Инвалидность", "Число");

// Доходы по страховым взносам за каждый месяц налогового периода
ДоходыСВЗ = СоздатьОбъект("ТаблицаЗначений");
ДоходыСВЗ.НоваяКолонка("ФизЛицо");
ДоходыСВЗ.НоваяКолонка("МесяцРасчетногоПериода", "Дата");
ДоходыСВЗ.НоваяКолонка("ВидДохода", "Строка"); 
ДоходыСВЗ.НоваяКолонка("Результат", "Число");
ДоходыСВЗ.НоваяКолонка("Скидка", "Число"); 
ДоходыСВЗ.НоваяКолонка("ОблагаетсяЕНВД", "Число");        

// Начисленные страховые взносы за каждый месяц налогового периода
НачисленныйСВЗ = СоздатьОбъект("ТаблицаЗначений");
НачисленныйСВЗ.НоваяКолонка("ФизЛицо");
НачисленныйСВЗ.НоваяКолонка("МесяцРасчетногоПериода", "Дата");
НачисленныйСВЗ.НоваяКолонка("ПФРНакопительная", "Число"); 
НачисленныйСВЗ.НоваяКолонка("ПФРНакопительнаяЕНВД", "Число");
НачисленныйСВЗ.НоваяКолонка("ПФРСтраховая", "Число");
НачисленныйСВЗ.НоваяКолонка("ПФРСтраховаяЕНВД", "Число");
НачисленныйСВЗ.НоваяКолонка("ТФОМС", "Число");
НачисленныйСВЗ.НоваяКолонка("ФФОМС", "Число");
НачисленныйСВЗ.НоваяКолонка("ФСС", "Число");
НачисленныйСВЗ.НоваяКолонка("ФССНесчастныеСлучаи", "Число");

// Заполнение таблиц
Год = ДатаГод(ДатаВводаОстатков);
Месяц = ДатаМесяц(ДатаВводаОстатков);

СписокКолонок = СоздатьОбъект("СписокЗначений");

//НДФЛ_13 = глПолучитьНалог("НДФЛ");
//Ставка13 = НДФЛ_13.Ставка.Получить(КонГода(ДатаВводаОстатков));

ПервыйМесяц = 1;
ПоследнийМесяц = Месяц;
НачалоГода = НачГода(ДатаВводаОстатков);
КонецПериодаОсмотра = Параметры.ДатаКонцаПериодаВыгрузки;

ПорядокИсчисленияЕСН = Константа.ПорядокИсчисленияЕСН;

// Заполнения таблицы начисленной зарплаты и налогов
ТекстЗапроса =
"//{{ЗАПРОС(Налоги
|Период с ВыбНачПериода по ВыбКонПериода;
|Работник = Регистр.ДоходыРаботников.Работник, Регистр.НалогиНачисленныеПриОплатеТруда.Работник, Регистр.РасчетыПоОплатеТруда.Работник;
|ВидРасчета = Регистр.ДоходыРаботников.ВидРасчета, Регистр.НалогиНачисленныеПриОплатеТруда.ВидНалога, Регистр.РасчетыПоОплатеТруда.ВидРасчета;
|ВидДеятельности = Регистр.ДоходыРаботников.ВидДеятельности, Регистр.НалогиНачисленныеПриОплатеТруда.ВидДеятельности, Регистр.РасчетыПоОплатеТруда.ВидДеятельности;
|МесяцНачисления = Регистр.ДоходыРаботников.МесяцНачисления, Регистр.РасчетыПоОплатеТруда.МесяцНачисления;
|Нач = Регистр.ДоходыРаботников.Сумма;
|Нал = Регистр.НалогиНачисленныеПриОплатеТруда.Сумма;
|СумНДФЛ = Регистр.ДоходыРаботников.СуммаНДФЛ;
|СумНДФЛУд = Регистр.РасчетыПоОплатеТруда.Сумма;
|ВидУдержания = Регистр.РасчетыПоОплатеТруда.ВидУдержания;
|Функция Начислено = Сумма(Нач);
|Функция Налог = Сумма(Нал);
|Функция СуммаНДФЛ = Сумма(СумНДФЛ);
|Функция СуммаНДФЛУд = Расход(СумНДФЛУд);
|Группировка Работник без групп;
|Группировка Месяц;
|Группировка ВидДеятельности;
|Группировка ВидРасчета;
|Группировка ВидУдержания;
|"//}}ЗАПРОС
;

Запрос = СоздатьОбъект("Запрос");
Запрос.Выполнить(ТекстЗапроса);

Пока Запрос.Группировка(1) = 1 Цикл
	
	ИсчисленныйНДФЛКонтроль.УдалитьСтроки();
	НДФЛПредоставленныеВычетыКонтроль.УдалитьСтроки();

	//********
	Параметры.ПараметрыАлгоритмов.Установить("ФизЛицо", Запрос.Работник);
	НомерШкалыВзносов = НомерШкалыСтраховыхВзносовПФР();
	Параметры.ПараметрыАлгоритмов.Установить("КонецГода", Параметры.ДатаКонцаПериодаВыгрузки);
	Параметры.ПараметрыАлгоритмов.Установить("НомерШкалыВзносов", 0);
	Параметры.ПараметрыАлгоритмов.Установить("СтавкиНалога", 1);
	Параметры.ПараметрыАлгоритмов.Установить("ПределыДоходовЕСН", 0);
	
	Параметры.ПараметрыАлгоритмов.Установить("Налог", глПолучитьНалог("ЕСН_ФБ"));
	СтавкиНалогаПФР = ПолучитьСтавкиЕСН();
	
	Параметры.ПараметрыАлгоритмов.Установить("Налог", глПолучитьНалог("ФСС"));
	СтавкиНалогаФСС = ПолучитьСтавкиЕСН();
	
	Параметры.ПараметрыАлгоритмов.Установить("Налог", глПолучитьНалог("ФФОМС"));
	СтавкиНалогаФФОМС = ПолучитьСтавкиЕСН();
	
	Параметры.ПараметрыАлгоритмов.Установить("Налог", глПолучитьНалог("ТФОМС"));
	СтавкиНалогаТФОМС = ПолучитьСтавкиЕСН();
	
	Параметры.ПараметрыАлгоритмов.Установить("Налог", глПолучитьНалог("ПФР_страх"));
	Параметры.ПараметрыАлгоритмов.Установить("НомерШкалыВзносов", НомерШкалыВзносов);
	СтавкиВзносаПФРСтраховаяЧасть = ПолучитьСтавкиЕСН();
	
	Параметры.ПараметрыАлгоритмов.Установить("Налог", глПолучитьНалог("ПФР_нак"));
	Параметры.ПараметрыАлгоритмов.Установить("НомерШкалыВзносов", НомерШкалыВзносов);
	СтавкиВзносаПФРНакопительнаяЧасть = ПолучитьСтавкиЕСН();
	
	Параметры.ПараметрыАлгоритмов.Установить("Налог", глПолучитьНалог("ЕСН_ФБ"));
	Параметры.ПараметрыАлгоритмов.Установить("СтавкиНалога", 0);
	Параметры.ПараметрыАлгоритмов.Установить("ПределыДоходовЕСН", 1);
	ПределыДоходовЕСН = ПолучитьСтавкиЕСН();
	
	СтавкиНалогаПФРвзносы = СоздатьОбъект("СписокЗначений");
	Для Сч = 1 по 10 Цикл
		СтавкиНалогаПФРвзносы.ДобавитьЗначение(Сч, 0);
		СтавкиНалогаПФРвзносы.УстановитьЗначение(Сч, СтавкиВзносаПФРСтраховаяЧасть.ПолучитьЗначение(Сч) + СтавкиВзносаПФРНакопительнаяЧасть.ПолучитьЗначение(Сч));
	КонецЦикла;
	//**
	
	ДоходОблагаемый13_СНачалаГода = 0;
	ДоходОблагаемыйЕСН_СНачалаГода = 0;
	ДоходОблагаемыйЕСН_ФСС_СНачалаГода = 0;
	ДоходОблагаемыйПФР_СНачалаГода = 0;
	ВычетЛичныйМесяц = 0;
	ВычетНаДетейМесяц = 0;	
	ВычетНаДетейИнвалидовМесяц = 0;
	ВычетЛичныйСНачалаГода = 0;
	ВычетНаДетейСНачалаГода = 0;
	ВычетНаДетейИнвалидовСНачалаГода = 0;
	
	НомерМесяца = 1;
	
	Пока Запрос.Группировка(2) = 1 Цикл	
		
		ТекущийДоход = 0;
		
		Параметры.ПараметрыАлгоритмов.Установить("МесяцПериода", Запрос.Месяц);
		ТекущийМесяц = НачМесяца(ОпределитьПериод());
		
		ВычетЛичныйМесяц = 0;
		ВычетНаДетейМесяц = 0;
		ВычетНаДетейИнвалидовМесяц = 0;
		
		Пока Запрос.Группировка(3) = 1 Цикл
			Пока Запрос.Группировка(4) = 1 Цикл		
				Пока Запрос.Группировка(5) = 1 Цикл		
					Если Запрос.ВидРасчета.Вид() = "ВидыНачислений" Тогда
						
						Если Запрос.Начислено &lt;&gt; 0 Тогда						
							
							ДоходыНДФЛ.НоваяСтрока();
							ДоходыНДФЛ.ФизЛицо					= Запрос.Работник;
							ДоходыНДФЛ.МесяцНалоговогоПериода	= НачМесяца(Запрос.МесяцНачисления);
							ДоходыНДФЛ.ПериодРегистрации		= НачМесяца(Запрос.МесяцНачисления);
							ДоходыНДФЛ.ДатаДохода				= НачМесяца(Запрос.МесяцНачисления);
							ДоходыНДФЛ.КодДохода				= Запрос.ВидРасчета.ВидДохода.Код;
							ДоходыНДФЛ.СуммаДохода              = Запрос.Начислено;
							ДоходыНДФЛ.КодВычета = "";
							ДоходыНДФЛ.СуммаВычета = 0;
							ДоходыНДФЛ.СуммаНалогаИсчисленная = 0;
							ДоходОблагаемый13_СНачалаГода = ДоходОблагаемый13_СНачалаГода + Запрос.Начислено;
							ТекущийДоход = ТекущийДоход + Запрос.Начислено;
							ТекущийМесяц = НачМесяца(Запрос.МесяцНачисления);
						КонецЕсли;
						
						Если Запрос.СумНДФЛ &lt;&gt; 0 Тогда					
							ИсчисленныйНДФЛ.НоваяСтрока();
							ИсчисленныйНДФЛ.ФизЛицо					= Запрос.Работник;
							ИсчисленныйНДФЛ.МесяцНалоговогоПериода  = НачМесяца(Запрос.МесяцНачисления);
							ИсчисленныйНДФЛ.ПериодРегистрации		= НачМесяца(Запрос.МесяцНачисления);
							ИсчисленныйНДФЛ.Налог					= Запрос.СумНДФЛ;
							
							ИсчисленныйНДФЛКонтроль.НоваяСтрока();
							ИсчисленныйНДФЛКонтроль.ФизЛицо					= Запрос.Работник;
							ИсчисленныйНДФЛКонтроль.МесяцНалоговогоПериода  = НачМесяца(Запрос.МесяцНачисления);
							ИсчисленныйНДФЛКонтроль.ПериодРегистрации		= НачМесяца(Запрос.МесяцНачисления);
							
						КонецЕсли;
						
						Если ПустоеЗначение(Запрос.ВидУдержания) = 0 Тогда
							Если Запрос.СуммаНДФЛУд &lt;&gt; 0 Тогда
								УдержанныйНДФЛ.НоваяСтрока(); 
								УдержанныйНДФЛ.ФизЛицо 					= Запрос.Работник;
								УдержанныйНДФЛ.МесяцНалоговогоПериода 	= НачМесяца(Запрос.МесяцНачисления);
								УдержанныйНДФЛ.ПериодРегистрации 		= НачМесяца(Запрос.МесяцНачисления);
								УдержанныйНДФЛ.СтавкаНалогообложения 	= "Ставка13";
								УдержанныйНДФЛ.Налог 					= Запрос.СуммаНДФЛУд;					
							КонецЕсли;
						КонецЕсли;
						
						
						Если Запрос.Начислено &gt; 0 Тогда
							ДоходыЕСН.НоваяСтрока();
							ДоходыЕСН.ФизЛицо					= Запрос.Работник;
							ДоходыЕСН.МесяцНалоговогоПериода	= НачМесяца(Запрос.МесяцНачисления);
							ДоходыЕСН.СуммаДохода				= Запрос.Начислено;
							ДоходыЕСН.ОблагаетсяЕНВД			= Запрос.ВидДеятельности.ОблагаетсяЕНВД;
							КодДоходаЕСН = "00011";
							
							Если Запрос.ВидРасчета.НеУменьшаетНалоговуюБазу = 2 Тогда
								
								КодДоходаЕСН				= "00004";					
							ИначеЕсли (Запрос.ВидРасчета.ЕСН_ФБ = 0)
								И (Запрос.ВидРасчета.ЕСН_ФСС = 0)
								И (Запрос.ВидРасчета.ЕСН_ФОМС = 0)
								И (Запрос.ВидРасчета.ПФР = 0) Тогда
								
								КодДоходаЕСН				= "00003";					
							ИначеЕсли (Запрос.ВидРасчета.ЕСН_ФБ = 1)
								И (Запрос.ВидРасчета.ЕСН_ФСС = 1)
								И (Запрос.ВидРасчета.ЕСН_ФОМС = 1)
								И (Запрос.ВидРасчета.ПФР = 1) Тогда
								
								КодДоходаЕСН				= "00011";
							ИначеЕсли (Запрос.ВидРасчета.ЕСН_ФБ = 1)
								И (Запрос.ВидРасчета.ПФР = 1)
								И (Запрос.ВидРасчета.ЕСН_ФОМС = 1)
								И (Запрос.ВидРасчета.ЕСН_ФСС = 0) Тогда
								
								КодДоходаЕСН				= "00009";					
							КонецЕсли;
							ДоходыЕСН.КодДоходаЕСН				= КодДоходаЕСН;
							
							Если Запрос.Работник.Инвалид.Получить(ОпределитьПериод()) = 1 Тогда
								НачисленныйЕСН.НоваяСтрока();
								НачисленныйЕСН.ФизЛицо					= Запрос.Работник;
								Параметры.ПараметрыАлгоритмов.Установить("МесяцПериода", Запрос.Месяц);
								НачисленныйЕСН.МесяцНалоговогоПериода	= НачМесяца(ОпределитьПериод());
								
								НачисленныйЕСН.Инвалидность = 1;
								
								Если Запрос.ВидДеятельности.ОблагаетсяЕНВД = 0 Тогда
									Если (КодДоходаЕСН = "00011") ИЛИ (КодДоходаЕСН = "00009") Тогда
										ДоходОблагаемыйЕСН_СНачалаГода = ДоходОблагаемыйЕСН_СНачалаГода + Запрос.Начислено;
										ДоходОблагаемыйЕСН_ФСС_СНачалаГода = ДоходОблагаемыйЕСН_ФСС_СНачалаГода + Запрос.Начислено;
										Если КодДоходаЕСН = "00011" Тогда
											ДоходОблагаемыйПФР_СНачалаГода = ДоходОблагаемыйПФР_СНачалаГода + Запрос.Начислено;
										КонецЕсли;		
									КонецЕсли;		
									Если ДоходОблагаемыйЕСН_СНачалаГода &lt;= 100000 Тогда 
										НачисленныйЕСН.ПримененнаяЛьготаФОМС = Запрос.Начислено;
									ИначеЕсли (ДоходОблагаемыйЕСН_СНачалаГода - Запрос.Начислено) &lt;= 100000 Тогда 
										НачисленныйЕСН.ПримененнаяЛьготаФОМС = Запрос.Начислено - (ДоходОблагаемыйЕСН_СНачалаГода - 100000);
									КонецЕсли;
									
									Если ДоходОблагаемыйЕСН_ФСС_СНачалаГода &lt;= 100000 Тогда 
										НачисленныйЕСН.ПримененнаяЛьготаФСС = Запрос.Начислено;
									ИначеЕсли (ДоходОблагаемыйЕСН_ФСС_СНачалаГода - Запрос.Начислено) &lt;= 100000 Тогда 
										НачисленныйЕСН.ПримененнаяЛьготаФСС = Запрос.Начислено - (ДоходОблагаемыйЕСН_ФСС_СНачалаГода - 100000);
									КонецЕсли;
									
									Если ДоходОблагаемыйПФР_СНачалаГода &lt;= 100000 Тогда 
										НачисленныйЕСН.ПримененнаяЛьготаФБ = Запрос.Начислено;
									ИначеЕсли (ДоходОблагаемыйПФР_СНачалаГода - Запрос.Начислено) &lt;= 100000 Тогда 
										НачисленныйЕСН.ПримененнаяЛьготаФБ = Запрос.Начислено - (ДоходОблагаемыйПФР_СНачалаГода - 100000);
									КонецЕсли;
									
								КонецЕсли;		
							КонецЕсли;	
						КонецЕсли;
						
					ИначеЕсли Запрос.ВидРасчета.Вид() = "НалогиИОтчисления" Тогда
						
						// Начисленный  ЕСН за каждый месяц налогового периода
						НачисленныйЕСН.НоваяСтрока();
						НачисленныйЕСН.ФизЛицо					= Запрос.Работник;
						Параметры.ПараметрыАлгоритмов.Установить("МесяцПериода", Запрос.Месяц);
						НачисленныйЕСН.МесяцНалоговогоПериода	= НачМесяца(ОпределитьПериод());
						
						Если Запрос.Работник.Инвалид.Получить(ОпределитьПериод()) = 1 Тогда
							НачисленныйЕСН.Инвалидность = 1;
						КонецЕсли;
						
						Если Запрос.ВидРасчета.Код = "ЕСН_ФБ" Тогда
							НачисленныйЕСН.ФедеральныйБюджет	= Запрос.Налог;
						ИначеЕсли Запрос.ВидРасчета.Код = "ФСС" Тогда	
							НачисленныйЕСН.ФСС					= Запрос.Налог;
						ИначеЕсли Запрос.ВидРасчета.Код = "ФФОМС" Тогда	       
							НачисленныйЕСН.ФФОМС				= Запрос.Налог;
						ИначеЕсли Запрос.ВидРасчета.Код = "ТФОМС" Тогда	
							НачисленныйЕСН.ТФОМС				= Запрос.Налог;
						ИначеЕсли Запрос.ВидРасчета.Код = "ПФР_нак" Тогда      
							НачисленныйЕСН.ПФРНакопительная		= Запрос.Налог;
							Если Запрос.ВидДеятельности.ОблагаетсяЕНВД = 1 Тогда
								НачисленныйЕСН.ПФРНакопительнаяЕНВД = Запрос.Налог;
							КонецЕсли;
						ИначеЕсли Запрос.ВидРасчета.Код = "ПФР_страх" Тогда	   
							НачисленныйЕСН.ПФРСтраховая			= Запрос.Налог;
							Если Запрос.ВидДеятельности.ОблагаетсяЕНВД = 1 Тогда
								НачисленныйЕСН.ПФРСтраховаяЕНВД = Запрос.Налог;
							КонецЕсли;
						КонецЕсли;	
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
		
		Если Запрос.Работник.Инвалид.Получить(ОпределитьПериод()) = 1 Тогда
			НачисленныйЕСН.НоваяСтрока();
			НачисленныйЕСН.ФизЛицо					= Запрос.Работник;
			Параметры.ПараметрыАлгоритмов.Установить("МесяцПериода", Запрос.Месяц);
			НачисленныйЕСН.МесяцНалоговогоПериода	= НачМесяца(ОпределитьПериод());
			
			Параметры.ПараметрыАлгоритмов.Установить("ПределыДоходовЕСН", ПределыДоходовЕСН);		
			
			Параметры.ПараметрыАлгоритмов.Установить("НалоговаяБаза", ДоходОблагаемыйЕСН_СНачалаГода);		
			Параметры.ПараметрыАлгоритмов.Установить("Ставки", СтавкиНалогаПФР);			
			НачисленныйЕСН.ФедеральныйБюджет	= РассчитатьЕСНилиВзносыВПФР();
			
			Параметры.ПараметрыАлгоритмов.Установить("Ставки", СтавкиНалогаФФОМС);			
			НачисленныйЕСН.ФФОМС				= РассчитатьЕСНилиВзносыВПФР();
			
			Параметры.ПараметрыАлгоритмов.Установить("Ставки", СтавкиНалогаТФОМС);			
			НачисленныйЕСН.ТФОМС				= РассчитатьЕСНилиВзносыВПФР();
			
			Параметры.ПараметрыАлгоритмов.Установить("НалоговаяБаза", ДоходОблагаемыйЕСН_ФСС_СНачалаГода);		
			Параметры.ПараметрыАлгоритмов.Установить("Ставки", СтавкиНалогаФСС);			
			НачисленныйЕСН.ФСС					= РассчитатьЕСНилиВзносыВПФР();
			
		КонецЕсли;
		
		Если НомерМесяца &lt; ДатаМесяц(ТекущийМесяц) Тогда
			
			Если ОсобенностиИсчисленияНДФЛ = Перечисление.ОсобенностиИсчисленияНДФЛ.СтандартныеВычетыНарастающимИтогом Тогда
				
				Пока НомерМесяца &lt; ДатаМесяц(ТекущийМесяц) Цикл
					
					Если Запрос.Работник.ДатаПриема &lt;= НачМесяца(ДобавитьМесяц(НачГода(ТекущийМесяц), НомерМесяца - 1)) Тогда					
						
						ВычетыСотрудниковПоНДФЛ.ИспользоватьВладельца(Запрос.Работник);
						ВычетыСотрудниковПоНДФЛ.ВыбратьЭлементы();
						Пока ВычетыСотрудниковПоНДФЛ.ПолучитьЭлемент() = 1 Цикл
							
							Вычеты = 0;
							
							Если (Лев(ВычетыСотрудниковпоНДФЛ.ВидВычета.КодДляОтчетности2009, 1)) &lt;&gt; "1" Тогда
								Продолжить;
							КонецЕсли;
							
							Если ВычетыСотрудниковПоНДФЛ.ПометкаУдаления() = 1 Тогда
								Продолжить;
							КонецЕсли;
							
							ВычетПредоставлялся = 0;
							Если ПустоеЗначение(ВычетыСотрудниковПоНДФЛ.ДатаНачала) = 1 Тогда
								ВычетПредоставлялся = 0;							
							Иначе
								Если ВычетыСотрудниковПоНДФЛ.ДатаНачала &gt; КонМесяца(ТекущийМесяц) Тогда
									ВычетПредоставлялся = 0;
								Иначе
									Если ПустоеЗначение(ВычетыСотрудниковПоНДФЛ.ДатаОкончания) = 1 Тогда
										ВычетПредоставлялся = 1;
									Иначе
										Если ВычетыСотрудниковПоНДФЛ.ДатаОкончания &lt; НачМесяца(ТекущийМесяц) Тогда
											ВычетПредоставлялся = 0;
										Иначе
											ВычетПредоставлялся = 1;
										КонецЕсли;
										
									КонецЕсли;
								КонецЕсли;
								
							КонецЕсли;
							
							Если ВычетПредоставлялся = 0 Тогда
								Продолжить;
							КонецЕсли;
							
							РазмерВычета = ВычетыСотрудниковПоНДФЛ.ВидВычета.Сумма.Получить(КонМесяца(ТекущийМесяц));
							ПределДоходов = ВычетыСотрудниковПоНДФЛ.ВидВычета.ПределДоходов.Получить(КонМесяца(ТекущийМесяц));
							
							Если ПределДоходов &gt; 0 Тогда							
								Вычеты = РазмерВычета*?((ДоходОблагаемый13_СНачалаГода - ТекущийДоход)&lt;=ПределДоходов,1,0);
							Иначе
								Вычеты = РазмерВычета;
							КонецЕсли;
							
							Если Вычеты &lt;&gt; 0 Тогда
								НДФЛПредоставленныеВычеты.НоваяСтрока();
								НДФЛПредоставленныеВычеты.ФизЛицо					= Запрос.Работник;
								Параметры.ПараметрыАлгоритмов.Установить("МесяцПериода", Запрос.Месяц);						
								НДФЛПредоставленныеВычеты.МесяцНалоговогоПериода  = НачМесяца(ТекущийМесяц);
								НДФЛПредоставленныеВычеты.ПериодРегистрации		= НачМесяца(ТекущийМесяц);
								НДФЛПредоставленныеВычеты.ПримененныйВычет		= Вычеты;
								НДФЛПредоставленныеВычеты.КодВычета 				= ВычетыСотрудниковПоНДФЛ.ВидВычета;
								
								НДФЛПредоставленныеВычетыКонтроль.НоваяСтрока();
								НДФЛПредоставленныеВычетыКонтроль.ФизЛицо					= Запрос.Работник;
								НДФЛПредоставленныеВычетыКонтроль.МесяцНалоговогоПериода  = НачМесяца(ТекущийМесяц);
								НДФЛПредоставленныеВычетыКонтроль.ПериодРегистрации		= НачМесяца(ТекущийМесяц);
								
								Стр1 = 0;
								Стр2 = 0;
								Стр3 = 0;
								Если (ИсчисленныйНДФЛКонтроль.НайтиЗначение(НачМесяца(ДобавитьМесяц(НачГода(ТекущийМесяц), НомерМесяца - 1)),Стр1, "МесяцНалоговогоПериода") = 0)
									ИЛИ ((ИсчисленныйНДФЛКонтроль.НайтиЗначение(НачМесяца(ДобавитьМесяц(НачГода(ТекущийМесяц), НомерМесяца - 1)),Стр2, "МесяцНалоговогоПериода") = 1)
									И (НДФЛПредоставленныеВычетыКонтроль.НайтиЗначение(НачМесяца(ДобавитьМесяц(НачГода(ТекущийМесяц), НомерМесяца - 1)),Стр3, "МесяцНалоговогоПериода") = 0)) Тогда
									НДФЛПредоставленныеВычеты.НоваяСтрока();
									НДФЛПредоставленныеВычеты.ФизЛицо					= Запрос.Работник;
									Параметры.ПараметрыАлгоритмов.Установить("МесяцПериода", Запрос.Месяц);						
									НДФЛПредоставленныеВычеты.МесяцНалоговогоПериода  = НачМесяца(ДобавитьМесяц(НачГода(ТекущийМесяц), НомерМесяца - 1));
									НДФЛПредоставленныеВычеты.ПериодРегистрации		= НачМесяца(ДобавитьМесяц(НачГода(ТекущийМесяц), НомерМесяца - 1));							
									НДФЛПредоставленныеВычеты.ПримененныйВычет		= Вычеты;
									НДФЛПредоставленныеВычеты.КодВычета 				= ВычетыСотрудниковПоНДФЛ.ВидВычета;
								КонецЕсли;
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;
					НомерМесяца = НомерМесяца + 1;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	// страховые взносы	
	Если ДатаГод(ДатаВводаОстатков) &gt;= 2010 Тогда
		Сотрудник = Запрос.Работник;
		ДоходыВычетыНалогиСотрудников = "";
		глСобратьДанныеДляСтраховыхВзносов(ДоходыВычетыНалогиСотрудников, Сотрудник, КонецПериодаОсмотра,,,1);
		Месяц = ДатаМесяц(КонецПериодаОсмотра);		
		Если Месяц &gt;=1 Тогда
			Для НомерМесяца = 1 По Месяц Цикл
				СтрокаИтоговойТаблицы=""; 
				ДоходыВычетыНалогиСотрудников.НайтиЗначение(глПолучитьУникальныйКодСотрудника(Сотрудник)+глДополнитьСтроку(НомерМесяца,2),СтрокаИтоговойТаблицы,1);     
				Если СтрокаИтоговойТаблицы &lt;&gt; 0 Тогда
					
					ДоходТекМесяца = (ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,2)
						+ ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,15)
						+ ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,28))
						- ?(НомерМесяца = 1, 0,(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,2)
						+ ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,15)
						+ ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,28)));
					
					Если ДоходТекМесяца &lt;&gt; 0 Тогда
						
						ШагИнвалид = 13;
						ШагЕНВД = 26;
						Для НомерКолонки = 2 По 14 Цикл
							
							ДоходыСВЗ.НоваяСтрока();
							ДоходыСВЗ.ФизЛицо = Сотрудник;
							ДоходыСВЗ.МесяцРасчетногоПериода = Дата(ДатаГод(КонецПериодаОсмотра),НомерМесяца,1);
							ДоходЕНВДТекМесяц = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,28) - ?(НомерМесяца = 1, 0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,28));
							ДоходыСВЗ.ОблагаетсяЕНВД = ?(ДоходЕНВДТекМесяц &lt;&gt; 0, 1, 0);
							
							Если (НомерКолонки = 9)  ИЛИ (НомерКолонки = 11) ИЛИ (НомерКолонки = 14) Тогда
								ДоходыСВЗ.Скидка = (ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,НомерКолонки)
								+ ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,НомерКолонки+ШагИнвалид)
								+ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,НомерКолонки+ШагЕНВД))
								- ?(НомерМесяца = 1, 0,(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,НомерКолонки)
								+ ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,НомерКолонки+ШагИнвалид)
								+ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,НомерКолонки+ШагЕНВД)));
							Иначе
								ДоходыСВЗ.Результат = (ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,НомерКолонки)
								+ ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,НомерКолонки+ШагИнвалид)
								+ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,НомерКолонки+ШагЕНВД))
								- ?(НомерМесяца = 1, 0,(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,НомерКолонки)
								+ ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,НомерКолонки+ШагИнвалид)
								+ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,НомерКолонки+ШагЕНВД)));
							КонецЕсли;
							
							Если НомерКолонки = 2 Тогда								
								ДоходыСВЗ.ВидДохода = "ОблагаетсяЦеликом";
								Для НомВычКолонок = 3 По 14 Цикл
									Если (НомерКолонки = 9)  ИЛИ (НомерКолонки = 11) ИЛИ (НомерКолонки = 14) Тогда
									Иначе
										ДоходыСВЗ.Результат =  ДоходыСВЗ.Результат - ((ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,НомВычКолонок)
										+ ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,НомВычКолонок+ШагИнвалид)
										+ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,НомВычКолонок+ШагЕНВД))
										- ?(НомерМесяца = 1, 0,(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,НомВычКолонок)
										+ ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,НомВычКолонок+ШагИнвалид)
										+ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,НомВычКолонок+ШагЕНВД))));
									КонецЕсли;
								КонецЦикла;																
							КонецЕсли;
							
							Если (ДоходыСВЗ.Результат = 0) И (НомерКолонки &lt;&gt; 2) Тогда
								ДоходыСВЗ.УдалитьСтроку();
								Продолжить;
							КонецЕсли;
							
							Если НомерКолонки = 3 Тогда
								ДоходыСВЗ.ВидДохода = "НеЯвляетсяОбъектом";								
							ИначеЕсли НомерКолонки = 4 Тогда
								ДоходыСВЗ.ВидДохода = "НеОблагаетсяЦеликом";
							ИначеЕсли НомерКолонки = 5 Тогда
								ДоходыСВЗ.ВидДохода = "ПособияЗаСчетФСС";
							ИначеЕсли НомерКолонки = 6 Тогда
								ДоходыСВЗ.ВидДохода = "ДенежноеДовольствиеВоеннослужащих";
							ИначеЕсли НомерКолонки = 7 Тогда
								ДоходыСВЗ.ВидДохода = "ДенежноеСодержаниеПрокуроров";
							ИначеЕсли (НомерКолонки = 8) ИЛИ (НомерКолонки = 9) Тогда
								ДоходыСВЗ.ВидДохода = "МатпомощьПриРожденииРебенка";										
							ИначеЕсли (НомерКолонки = 10) ИЛИ (НомерКолонки = 11)  Тогда
								ДоходыСВЗ.ВидДохода = "Матпомощь";										
							ИначеЕсли НомерКолонки = 12 Тогда
								ДоходыСВЗ.ВидДохода = "ДоговорыГПХ";
							ИначеЕсли (НомерКолонки = 13) ИЛИ (НомерКолонки = 14) Тогда
								ДоходыСВЗ.ВидДохода = "АвторскиеОткрытия";
							КонецЕсли;
						КонецЦикла;
						
					
					НачисленныйСВЗ.НоваяСтрока();
					НачисленныйСВЗ.ФизЛицо = Сотрудник;
					НачисленныйСВЗ.МесяцРасчетногоПериода = Дата(ДатаГод(КонецПериодаОсмотра),НомерМесяца,1);							
					НачисленныйСВЗ.ФСС = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИсчисленоФСС") + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИсчисленоФССИнвалид")
					-?(НомерМесяца = 1, 0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"ИсчисленоФСС") + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"ИсчисленоФССИнвалид"));							
					НачисленныйСВЗ.ФФОМС = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИсчисленоФФОМС") + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИсчисленоФФОМСИнвалид")
					-?(НомерМесяца = 1, 0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"ИсчисленоФФОМС") + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"ИсчисленоФФОМСИнвалид"));					
					НачисленныйСВЗ.ТФОМС = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИсчисленоТФОМС") + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИсчисленоТФОМСИнвалид")
					-?(НомерМесяца = 1, 0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"ИсчисленоТФОМС") + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"ИсчисленоТФОМСИнвалид"));
					НачисленныйСВЗ.ПФРНакопительная = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИсчисленоПФРНак") + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИсчисленоПФРНакИнвалид")
					-?(НомерМесяца = 1, 0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"ИсчисленоПФРНак") + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"ИсчисленоПФРНакИнвалид"));
					НачисленныйСВЗ.ПФРНакопительнаяЕНВД = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИсчисленоПФРНакЕНВД")
					-?(НомерМесяца = 1, 0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"ИсчисленоПФРНакЕНВД"));
					НачисленныйСВЗ.ПФРСтраховая = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИсчисленоПФРСтрах") + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИсчисленоПФРСтрахИнвалид")
					-?(НомерМесяца = 1, 0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"ИсчисленоПФРСтрах") + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"ИсчисленоПФРСтрахИнвалид"));
					НачисленныйСВЗ.ПФРСтраховаяЕНВД = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИсчисленоПФРСтрахЕНВД")
					-?(НомерМесяца = 1, 0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"ИсчисленоПФРСтрахЕНВД"));
					
					Если (НачисленныйСВЗ.ФСС + НачисленныйСВЗ.ФФОМС + НачисленныйСВЗ.ТФОМС 
						+ НачисленныйСВЗ.ПФРНакопительная + НачисленныйСВЗ.ПФРНакопительнаяЕНВД
						+ НачисленныйСВЗ.ПФРСтраховая + НачисленныйСВЗ.ПФРСтраховаяЕНВД) = 0 Тогда
						НачисленныйСВЗ.УдалитьСтроку();
					КонецЕсли;
					
					КонецЕсли;
				КонецЕсли;		
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецЦикла;

//*****************************************************
ДоходыНДФЛ.Свернуть("ФизЛицо, МесяцНалоговогоПериода, ПериодРегистрации, ДатаДохода, КодДохода, КодВычета", "СуммаДохода, СуммаВычета, СуммаНалогаИсчисленная");
ИсчисленныйНДФЛ.Свернуть("ФизЛицо, МесяцНалоговогоПериода, ПериодРегистрации,КодВычета", "ПримененныйВычет, Налог");
ДоходыЕСН.Свернуть("ФизЛицо, МесяцНалоговогоПериода, КодДоходаЕСН, ОблагаетсяЕНВД", "СуммаДохода");
НачисленныйЕСН.Свернуть("ФизЛицо, МесяцНалоговогоПериода, Инвалидность", "ФедеральныйБюджет, ФСС, ФФОМС, ТФОМС, ПФРНакопительная, ПФРСтраховая, ПримененнаяЛьготаФБ, ПримененнаяЛьготаФСС, ПримененнаяЛьготаФОМС, ПФРНакопительнаяЕНВД, ПФРСтраховаяЕНВД");
УдержанныйНДФЛ.Свернуть("ФизЛицо, МесяцНалоговогоПериода, ПериодРегистрации, СтавкаНалогообложения", "Налог");
НачисленныйЕСН.Свернуть("ФизЛицо, МесяцНалоговогоПериода", "ФедеральныйБюджет, ФСС, ФФОМС, ТФОМС, ПФРНакопительная, ПФРСтраховая, ПримененнаяЛьготаФБ, ПримененнаяЛьготаФСС, ПримененнаяЛьготаФОМС, ПФРНакопительнаяЕНВД, ПФРСтраховаяЕНВД");
НДФЛПредоставленныеВычеты.Свернуть("ФизЛицо, МесяцНалоговогоПериода, ПериодРегистрации,КодВычета", "ПримененныйВычет");
НДФЛПредоставленныеВычеты.Сортировать("ФизЛицо,МесяцНалоговогоПериода");

ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Начисления", Задолженность);
ВходящиеДанные.Установить("НДФЛСведенияОДоходах", ДоходыНДФЛ);
ВходящиеДанные.Установить("НДФЛИсчисленный13", ИсчисленныйНДФЛ);
ВходящиеДанные.Установить("НДФЛПредоставленныеВычеты", НДФЛПредоставленныеВычеты);
ВходящиеДанные.Установить("НДФЛУдержанный", УдержанныйНДФЛ);

Если ДатаГод(ДатаВводаОстатков) &gt;= 2010 Тогда
	ДоходыЕСН.УдалитьСтроки();	
	НачисленныйЕСН.УдалитьСтроки();
Иначе
	ДоходыСВЗ.УдалитьСтроки();
	НачисленныйСВЗ.УдалитьСтроки();	
КонецЕсли;

ВходящиеДанные.Установить("ЕСНСведенияОДоходах", ДоходыЕСН);
ВходящиеДанные.Установить("ЕСННалоги", НачисленныйЕСН);

ВходящиеДанные.Установить("СтраховыеВзносыСведенияОДоходах", ДоходыСВЗ);	
ВходящиеДанные.Установить("СтраховыеВзносы", НачисленныйСВЗ);

ВходящиеДанные.Установить("НалоговыйПериод", ДатаГод(ДатаВводаОстатков));

ВыгрузитьПоПравилу(,, ВходящиеДанные,, "НДФЛиЕСНДоходыИНалоги");

//****************** даные об оплатах для 2010 г.
Если (Параметры.ДатаКонцаПериодаВыгрузки &gt; ДатаВводаОстатков)
	И (ДатаГод(ДатаВводаОстатков) &gt;= 2010)Тогда
	
	ОснТекстКомментария = "# Перенесено из 1С:Бухгалтерии 7.7 (УСН) #";
	
	Вид_ПФР_страх = глПолучитьНалог("ПФР_страх");
	Вид_ПФР_нак = глПолучитьНалог("ПФР_нак");
	Вид_ФСС = глПолучитьНалог("ФСС");
	Вид_ФФОМС = глПолучитьНалог("ФФОМС");
	Вид_ТФОМС = глПолучитьНалог("ТФОМС");
	Вид_ФСС_НС_И_ПЗ = глПолучитьНалог("ФСС_НС");
	Вид_ПФР_страх_ЕСН = глПолучитьНалог("ПФР_страх_ЕСН");
	Вид_ПФР_нак_ЕСН = глПолучитьНалог("ПФР_нак_ЕСН");
	Вид_ФСС_ЕСН = глПолучитьНалог("ФСС_ЕСН");
	Вид_ФФОМС_ЕСН = глПолучитьНалог("ФФОМС_ЕСН");
	Вид_ТФОМС_ЕСН = глПолучитьНалог("ТФОМС_ЕСН");
	
	ВыбНачПериода = ДатаВводаОстатков;
	ВыбКонПериода = Параметры.ДатаКонцаПериодаВыгрузки;
	
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса = 
	"//{{ЗАПРОС(Сформировать)
	|Период с ВыбНачПериода по ВыбКонПериода;
	|ВидНалога = Регистр.РасчетыСБюджетом.ВидНалога;
	|ВидДеятельности = Регистр.РасчетыСБюджетом.ВидДеятельности;
	|ВидПлатежа = Регистр.РасчетыСБюджетом.ВидПлатежаВБюджет;
	|Сумма = Регистр.РасчетыСБюджетом.Сумма;
	|Функция ПФР_страх = Расход(Сумма) когда(ВидНалога = Вид_ПФР_страх);
	|Функция ПФР_нак = Расход(Сумма) когда(ВидНалога = Вид_ПФР_нак);
	|Функция ФСС = Расход(Сумма) когда(ВидНалога = Вид_ФСС);
	|Функция ФФОМС = Расход(Сумма) когда(ВидНалога = Вид_ФФОМС);
	|Функция ТФОМС = Расход(Сумма) когда(ВидНалога = Вид_ТФОМС);
	|Функция ФСС_НС_И_ПЗ = Расход(Сумма) когда(ВидНалога = Вид_ФСС_НС_И_ПЗ);
	|Функция ПФР_страх_2009 = Расход(Сумма) когда(ВидНалога = Вид_ПФР_страх_ЕСН);
	|Функция ПФР_нак_2009 = Расход(Сумма) когда(ВидНалога = Вид_ПФР_нак_ЕСН);
	|Функция ФСС_2009 = Расход(Сумма) когда(ВидНалога = Вид_ФСС_ЕСН);
	|Функция ФФОМС_2009 = Расход(Сумма) когда(ВидНалога = Вид_ФФОМС_ЕСН);
	|Функция ТФОМС_2009 = Расход(Сумма) когда(ВидНалога = Вид_ТФОМС_ЕСН);
	|Группировка Месяц;
	|Группировка ВидДеятельности;
	|Группировка ВидПлатежа;
	|"//}}ЗАПРОС
	;
	
	Если Запрос.Выполнить(ТекстЗапроса) = 1 Тогда
		
		Пока Запрос.Группировка(1) = 1 Цикл
			Пока Запрос.Группировка(2) = 1 Цикл
				Пока Запрос.Группировка(3) = 1 Цикл
					
					Параметры.ПараметрыАлгоритмов.Установить("МесяцПериода", Запрос.Месяц);
					ТекМесяц = ОпределитьПериод();
					
					ТекстКомментария = ОснТекстКомментария + " # вид деятельности: " + Запрос.ВидДеятельности + " # # период: " +ПериодСтр(НачМесяца(ТекМесяц),КонМесяца(ТекМесяц)) + " # ";
					
					ПФРСтраховая = 			Запрос.ПФР_страх;
					ПФРНакопительная = 		Запрос.ПФР_нак;
					ФФОМС = 				Запрос.ФФОМС;
					ТФОМС = 				Запрос.ТФОМС;
					ФСС = 					Запрос.ФСС;
					ФССНесчастныеСлучаи = 	Запрос.ФСС_НС_И_ПЗ;
					
					Если (ПФРСтраховая + ПФРНакопительная) &lt;&gt; 0 Тогда				
						ВходящиеДанные = СоздатьОбъект("СписокЗначений");
						ВходящиеДанные.Установить("Дата", 					КонМесяца(ТекМесяц));
						ВходящиеДанные.Установить("ДатаПлатежа", 			КонМесяца(ТекМесяц));
						ВходящиеДанные.Установить("МесяцРасчетногоПериода",	НачМесяца(ТекМесяц));
						ВходящиеДанные.Установить("ВидПлатежа", 			Запрос.ВидПлатежа);
						ВходящиеДанные.Установить("ПФРНакопительная", 		ПФРНакопительная);
						ВходящиеДанные.Установить("ПФРСтраховая", 			ПФРСтраховая);
						ВходящиеДанные.Установить("ТФОМС", 					0);
						ВходящиеДанные.Установить("ФСС", 					0);
						ВходящиеДанные.Установить("ФССНесчастныеСлучаи", 	0);
						ВходящиеДанные.Установить("ФФОМС", 					0);
						ВходящиеДанные.Установить("ВидОперации",			"УплатаПФР");
						ВходящиеДанные.Установить("Комментарий",			ТекстКомментария + " # ПФР # ");
						ВыгрузитьПоПравилу(,, ВходящиеДанные,, "РасчетыПоСтраховымВзносам");
					КонецЕсли;
					
					Если (ФФОМС + ТФОМС) &lt;&gt; 0 Тогда				
						ВходящиеДанные = СоздатьОбъект("СписокЗначений");
						ВходящиеДанные.Установить("Дата", 					КонМесяца(ТекМесяц));
						ВходящиеДанные.Установить("ДатаПлатежа", 			КонМесяца(ТекМесяц));
						ВходящиеДанные.Установить("МесяцРасчетногоПериода",	НачМесяца(ТекМесяц));
						ВходящиеДанные.Установить("ВидПлатежа", 			Запрос.ВидПлатежа);
						ВходящиеДанные.Установить("ПФРНакопительная", 		0);
						ВходящиеДанные.Установить("ПФРСтраховая", 			0);
						ВходящиеДанные.Установить("ТФОМС", 					ТФОМС);
						ВходящиеДанные.Установить("ФСС", 					0);
						ВходящиеДанные.Установить("ФССНесчастныеСлучаи", 	0);
						ВходящиеДанные.Установить("ФФОМС", 					ФФОМС);
						ВходящиеДанные.Установить("ВидОперации",			"УплатаФОМС");
						ВходящиеДанные.Установить("Комментарий",			ТекстКомментария + " # ФОМС # ");
						ВыгрузитьПоПравилу(,, ВходящиеДанные,, "РасчетыПоСтраховымВзносам");
					КонецЕсли;
					
					Если (ФСС + ФССНесчастныеСлучаи) &lt;&gt; 0 Тогда				
						ВходящиеДанные = СоздатьОбъект("СписокЗначений");
						ВходящиеДанные.Установить("Дата", 					КонМесяца(ТекМесяц));
						ВходящиеДанные.Установить("ДатаПлатежа", 			КонМесяца(ТекМесяц));
						ВходящиеДанные.Установить("МесяцРасчетногоПериода",	НачМесяца(ТекМесяц));
						ВходящиеДанные.Установить("ВидПлатежа", 			Запрос.ВидПлатежа);
						ВходящиеДанные.Установить("ПФРНакопительная", 		0);
						ВходящиеДанные.Установить("ПФРСтраховая", 			0);
						ВходящиеДанные.Установить("ТФОМС", 					0);
						ВходящиеДанные.Установить("ФСС", 					ФСС);
						ВходящиеДанные.Установить("ФССНесчастныеСлучаи", 	ФССНесчастныеСлучаи);
						ВходящиеДанные.Установить("ФФОМС", 					0);
						ВходящиеДанные.Установить("ВидОперации",			"УплатаФСС");
						ВходящиеДанные.Установить("Комментарий",			ТекстКомментария + " # ФСС # ");
						ВыгрузитьПоПравилу(,, ВходящиеДанные,, "РасчетыПоСтраховымВзносам");
					КонецЕсли;
					
					ПФРСтраховая2009 = 			Запрос.ПФР_страх_2009;
					ПФРНакопительная2009 = 		Запрос.ПФР_нак_2009;
					ФФОМС2009 = 				Запрос.ФФОМС_2009;
					ТФОМС2009 = 				Запрос.ТФОМС_2009;
					ФСС2009 = 					Запрос.ФСС_2009;					
					
					Если (ПФРСтраховая2009 + ПФРНакопительная2009) &lt;&gt; 0 Тогда				
						ВходящиеДанные = СоздатьОбъект("СписокЗначений");
						ВходящиеДанные.Установить("Дата", 					КонМесяца(ТекМесяц));
						ВходящиеДанные.Установить("ДатаПлатежа", 			КонМесяца(ТекМесяц));
						ВходящиеДанные.Установить("МесяцРасчетногоПериода",	'01.12.2009');
						ВходящиеДанные.Установить("ВидПлатежа", 			Запрос.ВидПлатежа);
						ВходящиеДанные.Установить("ПФРНакопительная", 		ПФРНакопительная2009);
						ВходящиеДанные.Установить("ПФРСтраховая", 			ПФРСтраховая2009);
						ВходящиеДанные.Установить("ТФОМС", 					0);
						ВходящиеДанные.Установить("ФСС", 					0);
						ВходящиеДанные.Установить("ФССНесчастныеСлучаи", 	0);
						ВходящиеДанные.Установить("ФФОМС", 					0);
						ВходящиеДанные.Установить("ВидОперации",			"УплатаПФР");
						ВходящиеДанные.Установить("Комментарий",			ТекстКомментария + " # ПФР за 2009 г.# ");
						ВыгрузитьПоПравилу(,, ВходящиеДанные,, "РасчетыПоСтраховымВзносам");
					КонецЕсли;
					
					Если (ФФОМС2009 + ТФОМС2009) &lt;&gt; 0 Тогда				
						ВходящиеДанные = СоздатьОбъект("СписокЗначений");
						ВходящиеДанные.Установить("Дата", 					КонМесяца(ТекМесяц));
						ВходящиеДанные.Установить("ДатаПлатежа", 			КонМесяца(ТекМесяц));
						ВходящиеДанные.Установить("МесяцРасчетногоПериода",	'01.12.2009');
						ВходящиеДанные.Установить("ВидПлатежа", 			Запрос.ВидПлатежа);
						ВходящиеДанные.Установить("ПФРНакопительная", 		0);
						ВходящиеДанные.Установить("ПФРСтраховая", 			0);
						ВходящиеДанные.Установить("ТФОМС", 					ТФОМС2009);
						ВходящиеДанные.Установить("ФСС", 					0);
						ВходящиеДанные.Установить("ФССНесчастныеСлучаи", 	0);
						ВходящиеДанные.Установить("ФФОМС", 					ФФОМС2009);
						ВходящиеДанные.Установить("ВидОперации",			"УплатаФОМС");
						ВходящиеДанные.Установить("Комментарий",			ТекстКомментария + " # ФОМС за 2009 г.# ");
						ВыгрузитьПоПравилу(,, ВходящиеДанные,, "РасчетыПоСтраховымВзносам");
					КонецЕсли;
					
					Если (ФСС2009) &lt;&gt; 0 Тогда				
						ВходящиеДанные = СоздатьОбъект("СписокЗначений");
						ВходящиеДанные.Установить("Дата", 					КонМесяца(ТекМесяц));
						ВходящиеДанные.Установить("ДатаПлатежа", 			КонМесяца(ТекМесяц));
						ВходящиеДанные.Установить("МесяцРасчетногоПериода",	'01.12.2009');
						ВходящиеДанные.Установить("ВидПлатежа", 			Запрос.ВидПлатежа);
						ВходящиеДанные.Установить("ПФРНакопительная", 		0);
						ВходящиеДанные.Установить("ПФРСтраховая", 			0);
						ВходящиеДанные.Установить("ТФОМС", 					0);
						ВходящиеДанные.Установить("ФСС", 					0);
						ВходящиеДанные.Установить("ФССНесчастныеСлучаи", 	0);
						ВходящиеДанные.Установить("ФФОМС", 					ФФОМС2009);
						ВходящиеДанные.Установить("ВидОперации",			"УплатаФСС");
						ВходящиеДанные.Установить("Комментарий",			ТекстКомментария + " # ФСС за 2009 г.# ");
						ВыгрузитьПоПравилу(,, ВходящиеДанные,, "РасчетыПоСтраховымВзносам");
					КонецЕсли;
					
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
		
	КонецЕсли;
КонецЕсли;

</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>ВыгружатьЗаписиКУДиР</Код>
				<Наименование>Записи КУДиР (УСН) за период</Наименование>
				<Порядок>950</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Если Параметры.ПараметрыАлгоритмов.Получить("УСН") = 1 Тогда
	Если Параметры.ДатаКонцаПериодаВыгрузки &lt;&gt; Параметры.ДатаВводаОстатков Тогда
		ПолучитьТаблицуУчетаУСН();
	КонецЕсли;
КонецЕсли;

 </ПередОбработкойПравила>
			</Правило>
		</Группа>
	</ПравилаВыгрузкиДанных>
	<ПравилаОчисткиДанных/>
	<Алгоритмы>
		<Алгоритм Имя="ВыгрузитьОборотыВНА_НУ" ИспользуетсяПриЗагрузке="false">
			<Текст>ВыбВидМатериальногоРесурса = Параметры.ПараметрыАлгоритмов.Получить("ВидМПЗ");
Параметры.ТаблицаОстатковВнеоборотныхАктивов.УдалитьСтроки();
Если ПустоеЗначение(ВыбВидМатериальногоРесурса) = 1 Тогда
	Возврат 0;
КонецЕсли;

ВыбНачПериода = Параметры.ДатаВводаОстатков;
ВыбКонПериода = Параметры.ДатаКонцаПериодаВыгрузки;

Если ВыбНачПериода = ВыбКонПериода Тогда
	Возврат 0;
КонецЕсли;

ТаблицаВНА_Нач = СоздатьОбъект("ТаблицаЗначений");
Параметры.ТаблицаДвижений.Выгрузить(ТаблицаВНА_Нач);	
ТаблицаВНА_Нач.УдалитьСтроки();
	
Запрос = СоздатьОбъект("Запрос");
ТекстЗапроса = 
"//{{ЗАПРОС(Сформировать)
|Период с ВыбНачПериода по ВыбКонПериода;
//|Без итогов;
|Объект = Регистр.Расходы.Номенклатура, Регистр.Амортизация.Объект;
|ВидРесурса = Регистр.Расходы.ВидМатериальногоРесурса, Регистр.Амортизация.ВидМатериальногоРесурса;
|ДокументПоступления = Регистр.Расходы.ДокументПоступления;
|ВидДеятельности = Регистр.Расходы.ВидДеятельности, Регистр.Амортизация.ВидДеятельности;
|ТекущаяСтоимость = Регистр.Расходы.СтоимостьОплаченная;
|СуммаНДС = Регистр.Расходы.СуммаНДСОплаченная;
|Амортизация = Регистр.Амортизация.Амортизация;
|ДокументОплаты = Регистр.Расходы.ДокументОплаты;
|Функция СтоимостьНачОст = НачОст(ТекущаяСтоимость);
|Функция СтоимостьПриход = Приход(ТекущаяСтоимость);
|Функция СтоимостьРасход = Расход(ТекущаяСтоимость);
|Функция СуммаНДСНачОст = НачОст(СуммаНДС);
|Функция СуммаНДСПриход = Приход(СуммаНДС);
|Функция СуммаНДСРасход = Расход(СуммаНДС);
|Функция АмортизацияНачОст = НачОст(Амортизация);
|Функция АмортизацияПриход = Приход(Амортизация);
|Функция АмортизацияРасход = Расход(Амортизация);
|Группировка Месяц;
|Группировка ВидДеятельности;
|Группировка ВидРесурса;
|Группировка Объект без групп;
|Группировка ДокументПоступления;
|Группировка ДокументОплаты;
|Условие(ВидРесурса = ВыбВидМатериальногоРесурса);
|"//}}ЗАПРОС
;
// Если ошибка в запросе, то выход из процедуры
Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
	Возврат 0;
КонецЕсли;

НомерШага = 1;
Пока Запрос.Группировка(1) = 1 Цикл	
	Параметры.ПараметрыАлгоритмов.Установить("МесяцПериода", Запрос.Месяц);
	ДатаДокумента = ОпределитьПериод();

	Параметры.ТаблицаДвижений.УдалитьСтроки();
	Пока Запрос.Группировка(2) = 1 Цикл
		Пока Запрос.Группировка(3) = 1 Цикл
			Пока Запрос.Группировка(4) = 1 Цикл
				Пока Запрос.Группировка(5) = 1 Цикл
					Пока Запрос.Группировка(6) = 1 Цикл
						
						Если ПустоеЗначение(Запрос.ДокументПоступления) = 1 Тогда
							ДокументПоступления = "";
						ИначеЕсли Метаданные.Документ(Запрос.ДокументПоступления.Вид()).РеквизитШапки("Договор").Выбран() = 1 Тогда
							ДокументПоступления = Запрос.ДокументПоступления.Договор;
						Иначе
							ДокументПоступления = "";
						КонецЕсли; 
						
						Если (НомерШага = 1) И (Запрос.Объект.ДатаНачалаИспользования &lt;= Параметры.ДатаВводаОстатков) И (НачМесяца(ДатаДокумента) = НачМесяца(Параметры.ДатаВводаОстатков)) Тогда
							ТаблицаВНА_Нач.НоваяСтрока();						
							ТаблицаВНА_Нач.ВидДвижения				= 0;
							ТаблицаВНА_Нач.ВидМПЗ					= Запрос.ВидРесурса;
							ТаблицаВНА_Нач.Номенклатура	 			= Запрос.Объект;
							НоменклатурнаяГруппа = ?(ПустоеЗначение(Запрос.ВидДеятельности) = 1, Параметры.ОсновнаяНоменклатурнаяГруппа, СокрЛП(Запрос.ВидДеятельности.Наименование));
							ТаблицаВНА_Нач.НоменклатурнаяГруппа		= НоменклатурнаяГруппа;		
							Параметры.ПараметрыАлгоритмов.Установить("ВидДеятельсности", Запрос.ВидДеятельности);		
							ТаблицаВНА_Нач.ХарактерДеятельности		= ОпределитьХарактерДеятельности();
							ТаблицаВНА_Нач.Партия					= ДокументПоступления;
							ТаблицаВНА_Нач.ДокументОплаты			= ДокументПоступления;
							ТаблицаВНА_Нач.Сумма					= Запрос.СтоимостьНачОст; 					
							ТаблицаВНА_Нач.НДС						= Запрос.СуммаНДСНачОст;
							ТаблицаВНА_Нач.СуммаАмортизации			= Запрос.АмортизацияНачОст;
						КонецЕсли;
												
						Если (Запрос.СтоимостьПриход &lt;&gt; 0) ИЛИ (Запрос.АмортизацияПриход &lt;&gt; 0) Тогда
							
							Параметры.ТаблицаДвижений.НоваяСтрока();						
							Параметры.ТаблицаДвижений.ВидДвижения				= 0;
							Параметры.ТаблицаДвижений.ВидМПЗ					= Запрос.ВидРесурса;
							Параметры.ТаблицаДвижений.Номенклатура	 			= Запрос.Объект;
							НоменклатурнаяГруппа = ?(ПустоеЗначение(Запрос.ВидДеятельности) = 1, Параметры.ОсновнаяНоменклатурнаяГруппа, СокрЛП(Запрос.ВидДеятельности.Наименование));
							Параметры.ТаблицаДвижений.НоменклатурнаяГруппа		= НоменклатурнаяГруппа;		
							Параметры.ПараметрыАлгоритмов.Установить("ВидДеятельсности", Запрос.ВидДеятельности);		
							Параметры.ТаблицаДвижений.ХарактерДеятельности		= ОпределитьХарактерДеятельности();
							Параметры.ТаблицаДвижений.Партия					= ДокументПоступления;
							Параметры.ТаблицаДвижений.ДокументОплаты			= ДокументПоступления;
							Если (НомерШага &lt;&gt; 1) ИЛИ ((НомерШага = 1) И (Запрос.Объект.ДатаНачалаИспользования &gt; Параметры.ДатаВводаОстатков)) Тогда
								//Данные о первоначальных затратах на ОС записывать надо только один раз
								//либо в первый проход, либо если ОС введено в текущем месяце.
								Если Запрос.Объект.ДатаНачалаИспользования &gt;= НачМесяца(ДатаДокумента) Тогда
									Параметры.ТаблицаДвижений.Сумма						= Запрос.СтоимостьПриход; 					
									Параметры.ТаблицаДвижений.НДС						= Запрос.СуммаНДСПриход;
								КонецЕсли;
							КонецЕсли;
							Параметры.ТаблицаДвижений.СуммаАмортизации			= Запрос.АмортизацияПриход;
							
						КонецЕсли;
						
						Если (Запрос.СтоимостьРасход &lt;&gt; 0) ИЛИ (Запрос.АмортизацияРасход &lt;&gt; 0) Тогда //выбытие
							
							Параметры.ТаблицаДвижений.НоваяСтрока();						
							Параметры.ТаблицаДвижений.ВидДвижения				= 1;
							Параметры.ТаблицаДвижений.ВидМПЗ					= Запрос.ВидРесурса;
							Параметры.ТаблицаДвижений.Номенклатура	 			= Запрос.Объект;
							НоменклатурнаяГруппа = ?(ПустоеЗначение(Запрос.ВидДеятельности) = 1, Параметры.ОсновнаяНоменклатурнаяГруппа, СокрЛП(Запрос.ВидДеятельности.Наименование));
							Параметры.ТаблицаДвижений.НоменклатурнаяГруппа		= НоменклатурнаяГруппа;		
							Параметры.ПараметрыАлгоритмов.Установить("ВидДеятельсности", Запрос.ВидДеятельности);		
							Параметры.ТаблицаДвижений.ХарактерДеятельности		= ОпределитьХарактерДеятельности();
							Параметры.ТаблицаДвижений.Партия					= ДокументПоступления;
							Параметры.ТаблицаДвижений.ДокументОплаты			= ДокументПоступления;
							Параметры.ТаблицаДвижений.Сумма						= Запрос.СтоимостьРасход; 					
							Параметры.ТаблицаДвижений.НДС						= Запрос.СуммаНДСРасход;
							Параметры.ТаблицаДвижений.СуммаАмортизации			= Запрос.АмортизацияРасход;
							
						КонецЕсли;
						
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	ТаблицаВНА = СоздатьОбъект("ТаблицаЗначений");
	Параметры.ТаблицаДвижений.Выгрузить(ТаблицаВНА);
	ТаблицаВНА.Свернуть("ВидДвижения, ВидМПЗ, Номенклатура, НоменклатурнаяГруппа, ХарактерДеятельности, Партия, ДокументОплаты", "Сумма, НДС, СуммаАмортизации");
	
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
	ВходящиеДанные.Установить("Дата", ДатаДокумента);
	ВходящиеДанные.Установить("РазделУчета", Параметры.РазделУчета);
	
	Если ВыбВидМатериальногоРесурса = Перечисление.ВидыМатериальныхРесурсов.ОсновноеСредство Тогда
		ВходящиеДанные.Установить("Таблица", "Таблица2");
	Иначе
		ВходящиеДанные.Установить("Таблица", "Таблица4");
	КонецЕсли;
	
	ВходящиеДанные.Установить("ВходящиеОстатки", ТаблицаВНА);
	ВыгрузитьПоПравилу(,,ВходящиеДанные,, "ЗаписьКнигиУчетаДоходовИРасходовИП");
	
	Если НомерШага = 1 Тогда
		ТаблицаВНА_Нач.Свернуть("ВидДвижения, ВидМПЗ, Номенклатура, НоменклатурнаяГруппа, ХарактерДеятельности, Партия, ДокументОплаты", "Сумма, НДС, СуммаАмортизации");
		ВходящиеДанные = СоздатьОбъект("СписокЗначений");
		ВходящиеДанные.Установить("Дата", Параметры.ДатаВводаОстатков-1);
		ВходящиеДанные.Установить("РазделУчета", Параметры.РазделУчета);
		
		Если ВыбВидМатериальногоРесурса = Перечисление.ВидыМатериальныхРесурсов.ОсновноеСредство Тогда
			ВходящиеДанные.Установить("Таблица", "Таблица2");
		Иначе
			ВходящиеДанные.Установить("Таблица", "Таблица4");
		КонецЕсли;
		
		ВходящиеДанные.Установить("ВходящиеОстатки", ТаблицаВНА_Нач);
		ВыгрузитьПоПравилу(,,ВходящиеДанные,, "ЗаписьКнигиУчетаДоходовИРасходовИП");
		
	КонецЕсли;
	
	НомерШага = НомерШага + 1;	
КонецЦикла;


	
	
	</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВыгрузитьОборотыМПЗ_НУ" ИспользуетсяПриЗагрузке="false">
			<Текст>ВыбВидМатериальногоРесурса = Параметры.ПараметрыАлгоритмов.Получить("ВидМПЗ");
Если ПустоеЗначение(ВыбВидМатериальногоРесурса) = 1 Тогда
	Возврат 0;
КонецЕсли;

ВыбНачПериода = Параметры.ДатаВводаОстатков;
ВыбКонПериода = Параметры.ДатаКонцаПериодаВыгрузки;

Если ВыбНачПериода = ВыбКонПериода Тогда
	Возврат 0;
КонецЕсли;

Запрос = СоздатьОбъект("Запрос");
ТекстЗапроса = 
"//{{ЗАПРОС(Поступления)
|Период с ВыбНачПериода по ВыбКонПериода;
|ВидМатериальногоРесурса = Регистр.Расходы.ВидМатериальногоРесурса;
|ВидДеятельности = Регистр.Расходы.ВидДеятельности;

|Номенклатура = Регистр.Расходы.Номенклатура;
|ДокументПоступления = Регистр.Расходы.ДокументПоступления;
|ДокументОтгрузки = Регистр.Расходы.ТекущийДокумент;
|ДокументОплаты = Регистр.Расходы.ДокументОплаты;

|КоличествоОплаченное = Регистр.Расходы.КоличествоОплаченное;
|СтоимостьОплаченная = Регистр.Расходы.СтоимостьОплаченная;
|СуммаНДСОплаченная = Регистр.Расходы.СуммаНДСОплаченная;

|КоличествоПост = Регистр.Расходы.Количество;
|СтоимостьПост = Регистр.Расходы.Стоимость;
|СуммаНДСпост = Регистр.Расходы.СуммаНДС;

|Функция КоличествоПриход  = Приход(КоличествоОплаченное);
|Функция КоличествоРасход  = Расход(КоличествоОплаченное);
|Функция КоличествоНачОст  = НачОст(КоличествоОплаченное);
|Функция КоличествоКонОст  = КонОст(КоличествоОплаченное);
|Функция СтоимостьПриход  = Приход(СтоимостьОплаченная);
|Функция СтоимостьРасход  = Расход(СтоимостьОплаченная);
|Функция СтоимостьНачОст  = НачОст(СтоимостьОплаченная);
|Функция СтоимостьКонОст  = КонОст(СтоимостьОплаченная);
|Функция СуммаНДСНачОст  = НачОст(СуммаНДСОплаченная);
|Функция СуммаНДСПриход  = Приход(СуммаНДСОплаченная);
|Функция СуммаНДСРасход  = Расход(СуммаНДСОплаченная);
|Функция СуммаНДСКонОст  = КонОст(СуммаНДСОплаченная);

|Функция КоличествоПриходПост  = Приход(КоличествоПост);
|Функция КоличествоРасходПост  = Расход(КоличествоПост);
|Функция КоличествоНачОстПост  = НачОст(КоличествоПост);
|Функция КоличествоКонОстПост  = КонОст(КоличествоПост);
|Функция СтоимостьПриходПост  = Приход(СтоимостьПост);
|Функция СтоимостьРасходПост  = Расход(СтоимостьПост);
|Функция СтоимостьНачОстПост  = НачОст(СтоимостьПост);
|Функция СтоимостьКонОстПост  = КонОст(СтоимостьПост);
|Функция СуммаНДСНачОстПост  = НачОст(СуммаНДСпост);
|Функция СуммаНДСПриходПост  = Приход(СуммаНДСпост);
|Функция СуммаНДСРасходПост  = Расход(СуммаНДСпост);
|Функция СуммаНДСКонОстПост  = КонОст(СуммаНДСпост);


|Группировка Месяц;
|Группировка ВидДеятельности;
|Группировка ДокументПоступления;
|Группировка Номенклатура Без Групп;
|Группировка ВидМатериальногоРесурса;
|Группировка ДокументОтгрузки;
|Группировка ДокументОплаты;

|Условие (ВидМатериальногоРесурса = ВыбВидМатериальногоРесурса);
|"//}}ЗАПРОС
;

Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
	Возврат 0;
КонецЕсли;

Пока Запрос.Группировка(1) = 1 Цикл
	Параметры.ПараметрыАлгоритмов.Установить("МесяцПериода", Запрос.Месяц);
	ДатаДокумента = ОпределитьПериод();

	Параметры.ТаблицаДвижений.УдалитьСтроки();
	Пока Запрос.Группировка(2) = 1 Цикл
		Пока Запрос.Группировка(3) = 1 Цикл
			Пока Запрос.Группировка(4) = 1 Цикл
				Пока Запрос.Группировка(5) = 1 Цикл
					Пока Запрос.Группировка(6) = 1 Цикл
						Пока Запрос.Группировка(7) = 1 Цикл
							
							НоменклатурнаяГруппа = ?(ПустоеЗначение(Запрос.ВидДеятельности) = 1, Параметры.ОсновнаяНоменклатурнаяГруппа, СокрЛП(Запрос.ВидДеятельности.Наименование));
							
							Если ПустоеЗначение(Запрос.ДокументПоступления) = 1 Тогда
								ДокументПоступления = "";
							ИначеЕсли Метаданные.Документ(Запрос.ДокументПоступления.Вид()).РеквизитШапки("Договор").Выбран() = 1 Тогда
								ДокументПоступления = Запрос.ДокументПоступления.Договор;
							Иначе
								ДокументПоступления = "";
							КонецЕсли; 
							
							Если Запрос.КоличествоПриход &lt;&gt; 0 Тогда
								Параметры.ТаблицаДвижений.НоваяСтрока();
								Параметры.ТаблицаДвижений.ВидДвижения				= 0;
								Параметры.ТаблицаДвижений.ВидМПЗ					= Запрос.ВидМатериальногоРесурса;
								Параметры.ТаблицаДвижений.Номенклатура	 			= Запрос.Номенклатура;
								Параметры.ТаблицаДвижений.НоменклатурнаяГруппа		= НоменклатурнаяГруппа;		
								Параметры.ПараметрыАлгоритмов.Установить("ВидДеятельсности", Запрос.ВидДеятельности);		
								Параметры.ТаблицаДвижений.ХарактерДеятельности		= ОпределитьХарактерДеятельности();
								Параметры.ТаблицаДвижений.Партия					= ДокументПоступления;
								Параметры.ТаблицаДвижений.ДокументОплаты			= ДокументПоступления;
								Параметры.ТаблицаДвижений.ПравилоДокументаОплаты	= "ДокументРасчетовСКонтрагентом";
								Параметры.ТаблицаДвижений.Количество				= Запрос.КоличествоПриход;
								Параметры.ТаблицаДвижений.Сумма						= Запрос.СтоимостьПриход; 					
								Параметры.ТаблицаДвижений.НДС						= Запрос.СуммаНДСПриход;
								Параметры.ТаблицаДвижений.Оплачен					= 1;
							КонецЕсли;
							
							Если (Запрос.КоличествоПриходПост - Запрос.КоличествоПриход) &lt;&gt; 0 Тогда
								Коэф = ?((Запрос.КоличествоПриходПост - Запрос.КоличествоПриход)&lt;0,-1,1);
								Параметры.ТаблицаДвижений.НоваяСтрока();
								Параметры.ТаблицаДвижений.ВидДвижения				= ?(Коэф&lt;0, 1, 0);
								Параметры.ТаблицаДвижений.ВидМПЗ					= Запрос.ВидМатериальногоРесурса;
								Параметры.ТаблицаДвижений.Номенклатура	 			= Запрос.Номенклатура;
								Параметры.ТаблицаДвижений.НоменклатурнаяГруппа		= НоменклатурнаяГруппа;		
								Параметры.ПараметрыАлгоритмов.Установить("ВидДеятельсности", Запрос.ВидДеятельности);		
								Параметры.ТаблицаДвижений.ХарактерДеятельности		= ОпределитьХарактерДеятельности();
								Параметры.ТаблицаДвижений.Партия					= ДокументПоступления;
								Параметры.ТаблицаДвижений.ПравилоДокументаОплаты	= "ДокументРасчетовСКонтрагентом";
								Параметры.ТаблицаДвижений.Количество				= (Запрос.КоличествоПриходПост - Запрос.КоличествоПриход)*Коэф;
								Параметры.ТаблицаДвижений.Сумма						= (Запрос.СтоимостьПриходПост - Запрос.СтоимостьПриход)*Коэф; 					
								Параметры.ТаблицаДвижений.НДС						= (Запрос.СуммаНДСПриходПост - Запрос.СуммаНДСПриход)*Коэф;
							КонецЕсли;

							Если Запрос.КоличествоРасход &lt;&gt; 0 Тогда
								
								ДоляНачальногоОстатка = 0;
								Если Запрос.КоличествоНачОст &lt;&gt; 0 Тогда //определим тип документа оплаты
									Если Запрос.КоличествоНачОст &lt; Запрос.КоличествоРасход Тогда
										ДоляНачальногоОстатка = Запрос.КоличествоРасход/Запрос.КоличествоНачОст;										
									КонецЕсли;
								КонецЕсли;			
								
								КоличествоРасход = Окр(Запрос.КоличествоРасход * ДоляНачальногоОстатка, 2);
								СтоимостьРасход = Окр(Запрос.СтоимостьРасход * ДоляНачальногоОстатка, 2);
								СуммаНДСРасход = Окр(Запрос.СуммаНДСРасход * ДоляНачальногоОстатка, 2);
								
								Если КоличествоРасход &lt;&gt; 0 Тогда
									Параметры.ТаблицаДвижений.НоваяСтрока();
									Параметры.ТаблицаДвижений.ВидДвижения				= 1;
									Параметры.ТаблицаДвижений.ВидМПЗ					= Запрос.ВидМатериальногоРесурса;
									Параметры.ТаблицаДвижений.Номенклатура	 			= Запрос.Номенклатура;
									Параметры.ТаблицаДвижений.НоменклатурнаяГруппа		= НоменклатурнаяГруппа;		
									Параметры.ПараметрыАлгоритмов.Установить("ВидДеятельсности", Запрос.ВидДеятельности);		
									Параметры.ТаблицаДвижений.ХарактерДеятельности		= ОпределитьХарактерДеятельности();
									Параметры.ТаблицаДвижений.Партия					= ДокументПоступления;
									//Параметры.ТаблицаДвижений.ДокументОплаты			= Запрос.ДокументОплаты.Договор;
									Параметры.ТаблицаДвижений.ПравилоДокументаОплаты	= "ВводНачальныхОстатковДвижения";
									Параметры.ТаблицаДвижений.Количество				= КоличествоРасход;
									Параметры.ТаблицаДвижений.Сумма						= СтоимостьРасход; 					
									Параметры.ТаблицаДвижений.НДС						= СуммаНДСРасход;
									Параметры.ТаблицаДвижений.Оплачен					= 1;
								КонецЕсли;
								
								Если (ДоляНачальногоОстатка &lt;&gt;  1) И (Запрос.КоличествоРасход - КоличествоРасход &lt;&gt; 0) Тогда
									Параметры.ТаблицаДвижений.НоваяСтрока();
									Параметры.ТаблицаДвижений.ВидДвижения				= 1;
									Параметры.ТаблицаДвижений.ВидМПЗ					= Запрос.ВидМатериальногоРесурса;
									Параметры.ТаблицаДвижений.Номенклатура	 			= Запрос.Номенклатура;
									Параметры.ТаблицаДвижений.НоменклатурнаяГруппа		= НоменклатурнаяГруппа;		
									Параметры.ПараметрыАлгоритмов.Установить("ВидДеятельсности", Запрос.ВидДеятельности);		
									Параметры.ТаблицаДвижений.ХарактерДеятельности		= ОпределитьХарактерДеятельности();
									Параметры.ТаблицаДвижений.Партия					= ДокументПоступления;
									Параметры.ТаблицаДвижений.ДокументОплаты			= ДокументПоступления;
									Параметры.ТаблицаДвижений.ПравилоДокументаОплаты	= "ДокументРасчетовСКонтрагентом";
									Параметры.ТаблицаДвижений.Количество				= Запрос.КоличествоРасход - КоличествоРасход;
									Параметры.ТаблицаДвижений.Сумма						= Запрос.СтоимостьРасход - СтоимостьРасход; 					
									Параметры.ТаблицаДвижений.НДС						= Запрос.СуммаНДСРасход - СуммаНДСРасход;
									Параметры.ТаблицаДвижений.Оплачен					= 1;
								КонецЕсли;
							КонецЕсли;
							
							Если ((Запрос.КоличествоРасходПост - Запрос.КоличествоРасход) &lt;&gt; 0) Тогда
								Коэф = ?((Запрос.КоличествоРасходПост - Запрос.КоличествоРасход)&lt;0,-1,1);
								Параметры.ТаблицаДвижений.НоваяСтрока();
								Параметры.ТаблицаДвижений.ВидДвижения				= ?(Коэф &lt; 0, 0, 1);
								Параметры.ТаблицаДвижений.ВидМПЗ					= Запрос.ВидМатериальногоРесурса;
								Параметры.ТаблицаДвижений.Номенклатура	 			= Запрос.Номенклатура;
								Параметры.ТаблицаДвижений.НоменклатурнаяГруппа		= НоменклатурнаяГруппа;		
								Параметры.ПараметрыАлгоритмов.Установить("ВидДеятельсности", Запрос.ВидДеятельности);		
								Параметры.ТаблицаДвижений.ХарактерДеятельности		= ОпределитьХарактерДеятельности();
								Параметры.ТаблицаДвижений.Партия					= ДокументПоступления;
								Параметры.ТаблицаДвижений.ПравилоДокументаОплаты	= "ДокументРасчетовСКонтрагентом";
								Параметры.ТаблицаДвижений.Количество				= (Запрос.КоличествоРасходПост - Запрос.КоличествоРасход)*Коэф;
								Параметры.ТаблицаДвижений.Сумма						= (Запрос.СтоимостьРасходПост - Запрос.СтоимостьРасход)*Коэф; 					
								Параметры.ТаблицаДвижений.НДС						= (Запрос.СуммаНДСРасходПост - Запрос.СуммаНДСРасход)*Коэф;
							КонецЕсли;
							
						КонецЦикла;
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
	ВходящиеДанные.Установить("Дата", ДатаДокумента);
	ВходящиеДанные.Установить("РазделУчета", Параметры.РазделУчета);
	
	//Если (ВыбВидМатериальногоРесурса = Перечисление.ВидыМатериальныхРесурсов.Услуга)
	//	ИЛИ (ВыбВидМатериальногоРесурса = Перечисление.ВидыМатериальныхРесурсов.РасходыПодлежащиеРаспределению)
	//	ИЛИ (ВыбВидМатериальногоРесурса = Перечисление.ВидыМатериальныхРесурсов.Прочее) Тогда
	//	ВходящиеДанные.Установить("Таблица", "Таблица6");
	//	Иначе		
		ВходящиеДанные.Установить("Таблица", "Таблица1");
	//КонецЕсли;
	ВходящиеДанные.Установить("ВходящиеОстатки", Параметры.ТаблицаДвижений);
	ВыгрузитьПоПравилу(,,ВходящиеДанные,, "ЗаписьКнигиУчетаДоходовИРасходовИП");

КонецЦикла;


</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВыгрузитьОборотыМПЗ_Таб15" ИспользуетсяПриЗагрузке="false">
			<Текст>
ВыбНачПериода = Параметры.ДатаВводаОстатков;
ВыбКонПериода = Параметры.ДатаКонцаПериодаВыгрузки;

ВыбВидПолученнгоРесурса = Параметры.ПараметрыАлгоритмов.Получить("ВидМПЗ");

Если ВыбНачПериода = ВыбКонПериода Тогда
	Возврат 0;
КонецЕсли;

ТаблицаДвижений = СоздатьОбъект("ТаблицаЗначений");
ТаблицаДвижений.НоваяКолонка("ВидСписанногоМПЗ");
ТаблицаДвижений.НоваяКолонка("НоменклатурнаяГруппа");
ТаблицаДвижений.НоваяКолонка("ХарактерДеятельности");
ТаблицаДвижений.НоваяКолонка("НоменклатураСписанная");
ТаблицаДвижений.НоваяКолонка("ПартияСписаннойНоменклатуры");
ТаблицаДвижений.НоваяКолонка("ДокументОплаты");
ТаблицаДвижений.НоваяКолонка("НоменклатураПоступившая");
ТаблицаДвижений.НоваяКолонка("ПартияПоступившейНоменклатуры");
ТаблицаДвижений.НоваяКолонка("Количество", "Число");
ТаблицаДвижений.НоваяКолонка("Сумма", "Число");
ТаблицаДвижений.НоваяКолонка("НДС", "Число");

Запрос = СоздатьОбъект("Запрос");
ТекстЗапроса = 
"//{{ЗАПРОС(Сформировать)
|Период с ВыбНачПериода по ВыбКонПериода;
|ВидДеятельности = Регистр.Обороты.ВидДеятельности;
|ОблагаетсяНДС = Регистр.Обороты.ОблагаетсяНДС;
|ВидПолученногоРесурса = Регистр.Обороты.ВидПолученногоРесурса;
|ВидИзрасходованногоРесурса = Регистр.Обороты.ВидИзрасходованногоРесурса;
|ИзрасходованныйРесурс = Регистр.Обороты.ИзрасходованныйРесурс;
|ДокументПоступленияИзрасходовано = Регистр.Обороты.ДокументПоступленияИзрасходовано;
|ПолученныйРесурс = Регистр.Обороты.ПолученныйРесурс;
|ДокументПоступленияПолучено = Регистр.Обороты.ДокументПоступленияПолучено;
|КоличествоОплаченное = Регистр.Обороты.КоличествоОплаченное;
|СтоимостьОплаченная = Регистр.Обороты.СтоимостьОплаченная;
|СуммаНДСОплаченная = Регистр.Обороты.СуммаНДСОплаченная;
|ДокументОплаты = Регистр.Обороты.ДокументОплаты;
|Функция КоличествоОплаченноеСумма = Сумма(КоличествоОплаченное);
|Функция СтоимостьОплаченнаяСумма = Сумма(СтоимостьОплаченная);
|Функция СуммаНДСОплаченнаяСумма = Сумма(СуммаНДСОплаченная);
|Группировка Месяц;
|Группировка ВидДеятельности;
|Группировка ОблагаетсяНДС;
|Группировка ВидПолученногоРесурса;
|Группировка ВидИзрасходованногоРесурса;
|Группировка ИзрасходованныйРесурс без групп;
|Группировка ДокументПоступленияИзрасходовано;
|Группировка ПолученныйРесурс без групп;
|Группировка ДокументПоступленияПолучено;
|Группировка ДокументОплаты;
|Условие ((ВидИзрасходованногоРесурса &lt;&gt; Перечисление.ВидыМатериальныхРесурсов.ИныеМатериальныеРасходы) и (ВидИзрасходованногоРесурса &lt;&gt; Перечисление.ВидыМатериальныхРесурсов.РасходыПодлежащиеРаспределению) и (ВидПолученногоРесурса = ВыбВидПолученнгоРесурса));
|"//}}ЗАПРОС
;
// Если ошибка в запросе, то выход из процедуры
Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
	Возврат 0;
КонецЕсли;

Пока Запрос.Группировка(1) = 1 Цикл
	Параметры.ПараметрыАлгоритмов.Установить("МесяцПериода", Запрос.Месяц);
	ДатаДокумента = ОпределитьПериод();
	Пока Запрос.Группировка(2) = 1 Цикл
		Пока Запрос.Группировка(3) = 1 Цикл
			Пока Запрос.Группировка(4) = 1 Цикл
				Пока Запрос.Группировка(5) = 1 Цикл
					Пока Запрос.Группировка(6) = 1 Цикл
						Пока Запрос.Группировка(7) = 1 Цикл
							Пока Запрос.Группировка(8) = 1 Цикл
								Пока Запрос.Группировка(9) = 1 Цикл
									Пока Запрос.Группировка(10) = 1 Цикл
										
										Если ПустоеЗначение(Запрос.ДокументПоступленияИзрасходовано) = 1 Тогда
											ПартияСписаннойНоменклатуры = "";
										ИначеЕсли Метаданные.Документ(Запрос.ДокументПоступленияИзрасходовано.Вид()).РеквизитШапки("Договор").Выбран() = 1 Тогда
											ПартияСписаннойНоменклатуры = Запрос.ДокументПоступленияИзрасходовано.Договор;
										Иначе
											ПартияСписаннойНоменклатуры = "";
										КонецЕсли; 
										
										Если ПустоеЗначение(Запрос.ДокументПоступленияПолучено) = 1 Тогда
											ПартияПоступившейНоменклатуры = "";
										ИначеЕсли Метаданные.Документ(Запрос.ДокументПоступленияПолучено.Вид()).РеквизитШапки("Договор").Выбран() = 1 Тогда
											ПартияПоступившейНоменклатуры = Запрос.ДокументПоступленияПолучено.Договор;
										Иначе
											ПартияПоступившейНоменклатуры = "";
										КонецЕсли; 
										
										НоменклатурнаяГруппа = ?(ПустоеЗначение(Запрос.ВидДеятельности) = 1, Параметры.ОсновнаяНоменклатурнаяГруппа, СокрЛП(Запрос.ВидДеятельности.Наименование));
										
										ТаблицаДвижений.НоваяСтрока();
										ТаблицаДвижений.ВидСписанногоМПЗ				= Запрос.ВидИзрасходованногоРесурса;
										ТаблицаДвижений.НоменклатурнаяГруппа        	= НоменклатурнаяГруппа;		
										Параметры.ПараметрыАлгоритмов.Установить("ВидДеятельсности", Запрос.ВидДеятельности);
										ТаблицаДвижений.ХарактерДеятельности			= ОпределитьХарактерДеятельности();
										ТаблицаДвижений.НоменклатураСписанная			= Запрос.ИзрасходованныйРесурс;
										ТаблицаДвижений.ПартияСписаннойНоменклатуры 	= ПартияСписаннойНоменклатуры;
										ТаблицаДвижений.ДокументОплаты					= ПартияСписаннойНоменклатуры;
										ТаблицаДвижений.НоменклатураПоступившая 		= Запрос.ПолученныйРесурс;
										ТаблицаДвижений.ПартияПоступившейНоменклатуры	= ПартияПоступившейНоменклатуры;
										ТаблицаДвижений.Количество						= Запрос.КоличествоОплаченноеСумма;
										ТаблицаДвижений.Сумма                           = Запрос.СтоимостьОплаченнаяСумма;
										ТаблицаДвижений.НДС								= Запрос.СуммаНДСОплаченнаяСумма;		
									КонецЦикла;
								КонецЦикла;
							КонецЦикла;
						КонецЦикла;
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
	ВходящиеДанные.Установить("Дата", ДатаДокумента);
	ВходящиеДанные.Установить("РазделУчета", Параметры.РазделУчета);
	ВходящиеДанные.Установить("Таблица", "Таблица15");
	ВходящиеДанные.Установить("ВходящиеОстатки", ТаблицаДвижений);
	ВыгрузитьПоПравилу(,,ВходящиеДанные,, "ЗаписьКнигиУчетаДоходовИРасходовИП");
	
КонецЦикла;


</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВыгрузитьОборотыМПЗ_Таб16" ИспользуетсяПриЗагрузке="false">
			<Текст>
ВыбНачПериода = Параметры.ДатаВводаОстатков;
ВыбКонПериода = Параметры.ДатаКонцаПериодаВыгрузки;

Если ВыбНачПериода = ВыбКонПериода Тогда
	Возврат 0;
КонецЕсли;

ТаблицаДвижений = СоздатьОбъект("ТаблицаЗначений");
ТаблицаДвижений.НоваяКолонка("ВидМПЗ");
ТаблицаДвижений.НоваяКолонка("Номенклатура");
ТаблицаДвижений.НоваяКолонка("НоменклатурнаяГруппа");
ТаблицаДвижений.НоваяКолонка("ХарактерДеятельности");
ТаблицаДвижений.НоваяКолонка("Партия");
ТаблицаДвижений.НоваяКолонка("ДокументОплаты");
ТаблицаДвижений.НоваяКолонка("ДокументОтгрузки");
ТаблицаДвижений.НоваяКолонка("Количество", "Число");
ТаблицаДвижений.НоваяКолонка("Выручка", "Число");
ТаблицаДвижений.НоваяКолонка("НДСНачисленный", "Число");
ТаблицаДвижений.НоваяКолонка("КоличествоОплаченоПоставщику", "Число");
ТаблицаДвижений.НоваяКолонка("Сумма", "Число");
ТаблицаДвижений.НоваяКолонка("НДС", "Число");
ТаблицаДвижений.НоваяКолонка("ВидДеятельности");
ТаблицаДвижений.НоваяКолонка("ПартияСинхронизации");
ТаблицаДвижений.НоваяКолонка("МесяцПериода");
ТаблицаДвижений.НоваяКолонка("Индекс");

ТаблицаДвиженийПоМесяцам = СоздатьОбъект("ТаблицаЗначений");
ТаблицаДвижений.Выгрузить(ТаблицаДвиженийПоМесяцам);

ВыбВидМатериальногоРесурса = Перечисление.ВидыМатериальныхРесурсов.Товар;

Запрос = СоздатьОбъект("Запрос");
ТекстЗапроса = 
"//{{ЗАПРОС(Сформировать)	
|Период с ВыбНачПериода по ВыбКонПериода;
|ВидДеятельности = Регистр.РасчетыСПокупателями.ВидДеятельности;
|ВидМатериальногоРесурса = Регистр.РасчетыСПокупателями.ВидМатериальногоРесурса;
|Договор = Регистр.РасчетыСПокупателями.Договор;
|Номенклатура = Регистр.РасчетыСПокупателями.Номенклатура;
|РасчДокумент = Регистр.РасчетыСПокупателями.РасчДокумент;
|ДокументПоступления = Регистр.РасчетыСПокупателями.ДокументПоступления;
|Количество = Регистр.РасчетыСПокупателями.Количество;
|Сумма = Регистр.РасчетыСПокупателями.Сумма;
|СуммаНДС = Регистр.РасчетыСПокупателями.СуммаНДС;
|Стоимость = Регистр.РасчетыСПокупателями.Стоимость;
|СтоимостьОплаченная = Регистр.РасчетыСПокупателями.СтоимостьОплаченная;
|ДокументОплаты = Регистр.РасчетыСПокупателями.ДокументОплаты;
|Функция КоличествоНачОст = НачОст(Количество);
|Функция КоличествоПриход = Приход(Количество);
|Функция КоличествоРасход = Расход(Количество);
|Функция СуммаНачОст = НачОст(Сумма);
|Функция СуммаПриход = Приход(Сумма);
|Функция СуммаРасход = Расход(Сумма);
|Функция СуммаНДСНачОст = НачОст(СуммаНДС);
|Функция СуммаНДСПриход = Приход(СуммаНДС);
|Функция СуммаНДСРасход = Расход(СуммаНДС);
|Функция СтоимостьНачОст = НачОст(Стоимость);
|Функция СтоимостьПриход = Приход(Стоимость);
|Функция СтоимостьРасход = Расход(Стоимость);
|Функция СтоимостьОплаченнаяНачОст = НачОст(СтоимостьОплаченная);
|Функция СтоимостьОплаченнаяПриход = Приход(СтоимостьОплаченная);
|Функция СтоимостьОплаченнаяРасход = Расход(СтоимостьОплаченная);
|Группировка Месяц;
|Группировка Номенклатура;
|Группировка ДокументПоступления;
|Условие(ВидМатериальногоРесурса = ВыбВидМатериальногоРесурса);
|"//}}ЗАПРОС
;
// Если ошибка в запросе, то выход из процедуры
Если Запрос.Выполнить(ТекстЗапроса) = 1 Тогда
	
	Пока Запрос.Группировка(1) = 1 Цикл
		Пока Запрос.Группировка(2) = 1 Цикл
			Пока Запрос.Группировка(3) = 1 Цикл
				//Если Запрос.СтоимостьОплаченнаяРасход &lt;&gt; 0 Тогда //отсекаем неоплаченные поставщику
					
					Если ПустоеЗначение(Запрос.Месяц) = 1 Тогда
						Продолжить;
					КонецЕсли;
					
					Если ПустоеЗначение(Запрос.Номенклатура) = 1 Тогда
						Продолжить;
					КонецЕсли;
					
					Если ПустоеЗначение(Запрос.ДокументПоступления) = 1 Тогда
						Продолжить;
					КонецЕсли;
					
					Если (Запрос.КоличествоРасход = 0) И (Запрос.СуммаРасход = 0) Тогда
						//нет данных о реализации
						Продолжить;
					КонецЕсли;
					
					Если ПустоеЗначение(Запрос.ДокументПоступления) = 1 Тогда
						ДокументПоступления = "";
					ИначеЕсли  Метаданные.Документ(Запрос.ДокументПоступления.Вид()).РеквизитШапки("Договор").Выбран() = 1 Тогда
						ДокументПоступления = Запрос.ДокументПоступления.Договор;
					Иначе
						ДокументПоступления = "";
					КонецЕсли;
					
					НоменклатурнаяГруппа = ?(ПустоеЗначение(Запрос.ВидДеятельности) = 1, Параметры.ОсновнаяНоменклатурнаяГруппа, СокрЛП(Запрос.ВидДеятельности.Наименование));
					
					ТаблицаДвижений.НоваяСтрока();
					ТаблицаДвижений.ВидМПЗ							= Запрос.ВидМатериальногоРесурса;
					ТаблицаДвижений.Номенклатура					= Запрос.Номенклатура;
					ТаблицаДвижений.НоменклатурнаяГруппа        	= НоменклатурнаяГруппа;		
					Параметры.ПараметрыАлгоритмов.Установить("ВидДеятельсности", Запрос.ВидДеятельности);
					ТаблицаДвижений.ХарактерДеятельности			= ОпределитьХарактерДеятельности( ИсходящиеДанные, ВходящиеДанные, Источник, Приемник, ТипПриемника, Значение, Выражение,,,,,,,,,,,,,,,,,,,,,,,,,,, Отказ);
					ТаблицаДвижений.Партия							= ДокументПоступления;
					ТаблицаДвижений.ДокументОплаты                  = ДокументПоступления;
					ТаблицаДвижений.ДокументОтгрузки				= Запрос.Договор;
					ТаблицаДвижений.Количество						= Запрос.КоличествоРасход;			
					ТаблицаДвижений.Выручка							= Запрос.СуммаРасход;		
					ТаблицаДвижений.НДСНачисленный					= Запрос.СуммаНДСРасход;				
					ТаблицаДвижений.Сумма							= Запрос.СтоимостьОплаченнаяРасход;
					Если Запрос.СтоимостьРасход = 0 Тогда
						ТаблицаДвижений.КоличествоОплаченоПоставщику = 0;
					Иначе
						ТаблицаДвижений.КоличествоОплаченоПоставщику	= Запрос.КоличествоРасход * (Запрос.СтоимостьОплаченнаяРасход/Запрос.СтоимостьРасход);
					КонецЕсли;
					ТаблицаДвижений.ВидДеятельности							= Запрос.ВидДеятельности;
					ТаблицаДвижений.ПартияСинхронизации						= Запрос.ДокументПоступления;
					ТаблицаДвижений.МесяцПериода							= Запрос.Месяц;
					ТаблицаДвижений.Индекс = Строка(ТаблицаДвижений.Сумма) + Строка(ТаблицаДвижений.Количество) + Строка(Запрос.Месяц) + Строка(ТаблицаДвижений.ПартияСинхронизации) + Строка(Запрос.ВидДеятельности) + Строка(ТаблицаДвижений.ВидМПЗ) + Строка(ТаблицаДвижений.Номенклатура) + Строка(ТаблицаДвижений.Номенклатура.ПолныйКод());
				//КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
КонецЕсли;


//теперь соберем сумму НДС по отгруженным ТМЦ
ЗапросПоНДС = СоздатьОбъект("Запрос");
ТекстЗапроса = 
"//{{ЗАПРОС(НДС)
|Период с ВыбНачПериода по ВыбКонПериода;
|ВидДеятельности = Регистр.Расходы.ВидДеятельности;
|ВидМПЗ = Регистр.Расходы.ВидМатериальногоРесурса;
|Номенклатура = Регистр.Расходы.Номенклатура;
|ДокументПоступления = Регистр.Расходы.ДокументПоступления;
|Количество = Регистр.Расходы.Количество;
|Стоимость = Регистр.Расходы.Стоимость;
|СуммаНДС = Регистр.Расходы.СуммаНДС;
|ДокументОплаты = Регистр.Расходы.ДокументОплаты;
|ОблагаетсяНДС = Регистр.Расходы.ОблагаетсяНДС;
|КоличествоОплаченное = Регистр.Расходы.КоличествоОплаченное;
|СтоимостьОплаченная = Регистр.Расходы.СтоимостьОплаченная;
|СуммаНДСОплаченная = Регистр.Расходы.СуммаНДСОплаченная;
|Функция КоличествоРасход = Расход(Количество);
|Функция СтоимостьРасход = Расход(Стоимость);
|Функция СуммаНДСРасход = Расход(СуммаНДС);
|Функция КоличествоОплаченноеРасход = Расход(КоличествоОплаченное);
|Функция СтоимостьОплаченнаяРасход = Расход(СтоимостьОплаченная);
|Функция СуммаНДСОплаченнаяРасход = Расход(СуммаНДСОплаченная);
|Группировка Месяц;
|Группировка ВидДеятельности;
|Группировка ВидМПЗ;
|Группировка Номенклатура;
|Группировка ДокументПоступления;
|Группировка ДокументОплаты;
|Группировка ОблагаетсяНДС;";

// Если ошибка в запросе, то выход из процедуры
Если ЗапросПоНДС.Выполнить(ТекстЗапроса) = 1 Тогда
	
	ТЗапрос = СоздатьОбъект("ТаблицаЗначений");
	ЗапросПоНДС.Выгрузить(ТЗапрос);		
	
	ТЗапрос.НоваяКолонка("Индекс");		
	ТЗапрос.ВыбратьСтроки();
	Пока ТЗапрос.ПолучитьСтроку() = 1 Цикл
		ТЗапрос.Индекс = Строка(ТЗапрос.СтоимостьОплаченнаяРасход) + Строка(ТЗапрос.КоличествоОплаченноеРасход) + Строка(ТЗапрос.Месяц) + Строка(ТЗапрос.ДокументПоступления) + Строка(ТЗапрос.ВидДеятельности) + Строка(ТЗапрос.ВидМПЗ) + Строка(ТЗапрос.Номенклатура) + ?(ТЗапрос.Номенклатура.Вид() = "", "", Строка(ТЗапрос.Номенклатура.ПолныйКод()));
	КонецЦикла;
	ТЗапрос.Свернуть("Месяц,ВидДеятельности,ВидМПЗ,Номенклатура,ДокументПоступления,ДокументОплаты,ОблагаетсяНДС,Индекс","КоличествоРасход,СтоимостьРасход,СуммаНДСРасход,КоличествоОплаченноеРасход,СтоимостьОплаченнаяРасход,СуммаНДСОплаченнаяРасход");
	ТЗапрос.Сортировать("Индекс");
	
	ТаблицаДвижений.Сортировать("Индекс");
	
	ТаблицаДвижений.ВыбратьСтроки();
	Пока ТаблицаДвижений.ПолучитьСтроку() = 1 Цикл
		
		Стр =  0;
		Если ТЗапрос.НайтиЗначение(ТаблицаДвижений.Индекс, Стр, "Индекс") = 1 Тогда
			ТЗапрос.ПолучитьСтрокуПоНомеру(Стр);
			
			
			ТаблицаДвижений.НДС = ТЗапрос.СуммаНДСОплаченнаяРасход;
			
		КонецЕсли;
	КонецЦикла;
КонецЕсли;


МесяцПериода = "";
ТаблицаДвижений.ВыбратьСтроки();
Пока ТаблицаДвижений.ПолучитьСтроку() = 1 Цикл
	
	Если МесяцПериода = "" Тогда
		МесяцПериода = ТаблицаДвижений.МесяцПериода;		
		Параметры.ПараметрыАлгоритмов.Установить("МесяцПериода", ТаблицаДвижений.МесяцПериода);
		ДатаДокумента = ОпределитьПериод();
	КонецЕсли;
	
	Если МесяцПериода &lt;&gt; ТаблицаДвижений.МесяцПериода Тогда		
		Если ТаблицаДвиженийПоМесяцам.КоличествоСтрок() &gt; 0 Тогда
			ВходящиеДанные = СоздатьОбъект("СписокЗначений");
			ВходящиеДанные.Установить("Дата", ДатаДокумента);
			ВходящиеДанные.Установить("РазделУчета", Параметры.РазделУчета);
			ВходящиеДанные.Установить("Таблица", "Таблица12");
			ВходящиеДанные.Установить("ВходящиеОстатки", ТаблицаДвиженийПоМесяцам);
			ВыгрузитьПоПравилу(,,ВходящиеДанные,, "ЗаписьКнигиУчетаДоходовИРасходовИП");
		КонецЕсли;
		
		МесяцПериода = ТаблицаДвижений.МесяцПериода;
		Параметры.ПараметрыАлгоритмов.Установить("МесяцПериода", ТаблицаДвижений.МесяцПериода);
		ДатаДокумента = ОпределитьПериод();
		
		ТаблицаДвиженийПоМесяцам.УдалитьСтроки();
	КонецЕсли;
	
	ТаблицаДвиженийПоМесяцам.НоваяСтрока();
	
	ТаблицаДвиженийПоМесяцам.ВидМПЗ = ТаблицаДвижений.ВидМПЗ;
	ТаблицаДвиженийПоМесяцам.Номенклатура = ТаблицаДвижений.Номенклатура;
	ТаблицаДвиженийПоМесяцам.НоменклатурнаяГруппа = ТаблицаДвижений.НоменклатурнаяГруппа;
	ТаблицаДвиженийПоМесяцам.ХарактерДеятельности = ТаблицаДвижений.ХарактерДеятельности;
	ТаблицаДвиженийПоМесяцам.Партия = ТаблицаДвижений.Партия;
	ТаблицаДвиженийПоМесяцам.ДокументОплаты = ТаблицаДвижений.ДокументОплаты;
	ТаблицаДвиженийПоМесяцам.ДокументОтгрузки = ТаблицаДвижений.ДокументОтгрузки;	
	ТаблицаДвиженийПоМесяцам.Количество = ТаблицаДвижений.Количество;
	ТаблицаДвиженийПоМесяцам.Выручка = ТаблицаДвижений.Выручка;
	ТаблицаДвиженийПоМесяцам.НДСНачисленный = ТаблицаДвижений.НДСНачисленный;
	ТаблицаДвиженийПоМесяцам.КоличествоОплаченоПоставщику = ТаблицаДвижений.КоличествоОплаченоПоставщику;
	ТаблицаДвиженийПоМесяцам.Сумма = ТаблицаДвижений.Сумма;	
	ТаблицаДвиженийПоМесяцам.НДС = ТаблицаДвижений.НДС;
	ТаблицаДвиженийПоМесяцам.ВидДеятельности = ТаблицаДвижений.ВидДеятельности;
	ТаблицаДвиженийПоМесяцам.ПартияСинхронизации = ТаблицаДвижений.ПартияСинхронизации;
	ТаблицаДвиженийПоМесяцам.МесяцПериода = ТаблицаДвижений.МесяцПериода;
	ТаблицаДвиженийПоМесяцам.Индекс = ТаблицаДвижений.Индекс;
	
КонецЦикла;

Если ТаблицаДвиженийПоМесяцам.КоличествоСтрок() &gt; 0 Тогда
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
	ВходящиеДанные.Установить("Дата", ДатаДокумента);
	ВходящиеДанные.Установить("РазделУчета", Параметры.РазделУчета);
	ВходящиеДанные.Установить("Таблица", "Таблица12");
	ВходящиеДанные.Установить("ВходящиеОстатки", ТаблицаДвиженийПоМесяцам);
	ВыгрузитьПоПравилу(,,ВходящиеДанные,, "ЗаписьКнигиУчетаДоходовИРасходовИП");
КонецЕсли;

</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВыгрузитьОборотыПрочихРасходов_НУ" ИспользуетсяПриЗагрузке="false">
			<Текст>Параметры.ТаблицаОстатковМПЗ.УдалитьСтроки();

ВыбНачПериода = Параметры.ДатаВводаОстатков;
ВыбКонПериода = Параметры.ДатаКонцаПериодаВыгрузки;

Если ВыбНачПериода = ВыбКонПериода Тогда
	Возврат 0;
КонецЕсли;

Запрос = СоздатьОбъект("Запрос");
ТекстЗапроса = 
"//{{ЗАПРОС(ПрочиеРасходы)
|Период с '01.01.1980';
|ВидДеятельности = Регистр.ПрочиеРасходы.ВидДеятельности;
|ВидВидаРасхода = Регистр.ПрочиеРасходы.ВидРасхода.ВидРасхода;
|ВидРасхода = Регистр.ПрочиеРасходы.ВидРасхода;
|Сум = Регистр.ПрочиеРасходы.Сумма;
|ДатаОперации = Регистр.ПрочиеРасходы.ДатаОперации;
|НомерДокумента = Регистр.ПрочиеРасходы.НомерДокумента;
|Функция Сумма = Сумма(Сум) Когда (ВидВидаРасхода &lt;&gt; Перечисление.ВидыПрочихРасходов.НеПринимаемые);
|Группировка Месяц;
|Группировка ВидДеятельности;
|Группировка ВидВидаРасхода;
|Группировка ВидРасхода;
|Группировка Документ;
|Условие((ДатаОперации &gt;= ВыбНачПериода) и (ДатаОперации &lt;= ВыбКонПериода));
|Условие(ВидВидаРасхода &lt;&gt; Перечисление.ВидыПрочихРасходов.НеПринимаемые);";

// Если ошибка в запросе, то выход из процедуры
Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
	Возврат 0;
КонецЕсли;

Пока Запрос.Группировка(1) = 1 Цикл	
	Параметры.ПараметрыАлгоритмов.Установить("МесяцПериода", Запрос.Месяц);
	ДатаДокумента = ОпределитьПериод();
	Параметры.ТаблицаДвижений.УдалитьСтроки();
	Пока Запрос.Группировка(2) = 1 Цикл
		Пока Запрос.Группировка(3) = 1 Цикл
			Пока Запрос.Группировка(4) = 1 Цикл
				Пока Запрос.Группировка(5) = 1 Цикл
					
					Если ПустоеЗначение(Запрос.Документ) = 1 Тогда
						ДокументПоступления = "";
					ИначеЕсли Метаданные.Документ(Запрос.Документ.Вид()).РеквизитШапки("Договор").Выбран() = 1 Тогда
						ДокументПоступления = Запрос.Документ.Договор;
					Иначе
						ДокументПоступления = "";
					КонецЕсли;
					
					НоменклатурнаяГруппа = ?(ПустоеЗначение(Запрос.ВидДеятельности) = 1, Параметры.ОсновнаяНоменклатурнаяГруппа, СокрЛП(Запрос.ВидДеятельности.Наименование));
					
					Параметры.ТаблицаДвижений.НоваяСтрока();
					Параметры.ТаблицаДвижений.НоменклатурнаяГруппа		= НоменклатурнаяГруппа;		
					Параметры.ПараметрыАлгоритмов.Установить("ВидДеятельсности", Запрос.ВидДеятельности);		
					Параметры.ТаблицаДвижений.ХарактерДеятельности		= ОпределитьХарактерДеятельности();
					Если Запрос.Документ.Вид() = "ПрочиеРасходыРасчеты" Тогда
						Параметры.ТаблицаДвижений.Партия					= ДокументПоступления;					
						Параметры.ТаблицаДвижений.ДокументОплаты			= ДокументПоступления;
					КонецЕсли;										
					Параметры.ТаблицаДвижений.Сумма						= Запрос.Сумма; 					
					Параметры.ТаблицаДвижений.Номенклатура				= Запрос.ВидРасхода; 					
					Параметры.ТаблицаДвижений.ДатаОперации				= Макс(Запрос.Документ.ДатаДок, Запрос.ДатаОперации); 					
					Параметры.ТаблицаДвижений.НомерДокумента			= Запрос.НомерДокумента;
					
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
	ВходящиеДанные.Установить("Дата", ДатаДокумента);
	ВходящиеДанные.Установить("РазделУчета", Параметры.РазделУчета);
	ВходящиеДанные.Установить("Таблица", "Таблица6");
	ВходящиеДанные.Установить("ВходящиеОстатки", Параметры.ТаблицаДвижений);
	ВыгрузитьПоПравилу(,,ВходящиеДанные,, "ЗаписьКнигиУчетаДоходовИРасходовИП");
	
КонецЦикла;


</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВыгрузитьОборотыРасчетовСРаботниками_НУ" ИспользуетсяПриЗагрузке="false">
			<Текст>Параметры.ТаблицаОстатковРасчетовСРаботниками.УдалитьСтроки();

ВыбНачПериода = Параметры.ДатаВводаОстатков;
ВыбКонПериода = Параметры.ДатаКонцаПериодаВыгрузки;

Если ВыбНачПериода = ВыбКонПериода Тогда
	Возврат 0;
КонецЕсли;

ТекстЗапроса = 
"//{{ЗАПРОС(ДоходыРаботника)
|Период с ВыбНачПериода по ВыбКонПериода;
|ВидДеятельности = Регистр.РасчетыПоОплатеТруда.ВидДеятельности;
|ВидРасчета = Регистр.РасчетыПоОплатеТруда.ВидРасчета;
|Работник = Регистр.РасчетыПоОплатеТруда.Работник;
|ВидУдержания = Регистр.РасчетыПоОплатеТруда.ВидУдержания;
|МесяцНачисления = Регистр.РасчетыПоОплатеТруда.МесяцНачисления;
|Сум = Регистр.РасчетыПоОплатеТруда.Сумма;
|Функция Начислено = Приход(Сум);
|Функция Выплачено = Расход(Сум) Когда (ПустоеЗначение(ВидУдержания) = 1);
|Функция Удержано = Расход(Сум) Когда (ПустоеЗначение(ВидУдержания) = 0);
|Группировка Месяц;
|Группировка ВидДеятельности;
|Группировка ВидРасчета;
|Группировка Работник;
|Группировка МесяцНачисления;
|Группировка ВидУдержания;
|Группировка Документ;";
//|Условие (ВидРасчета.НеУменьшаетНалоговуюБазу = 0);";

Запрос = СоздатьОбъект("Запрос");
Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
	Возврат 0;
КонецЕсли;

Пока Запрос.Группировка(1) = 1 Цикл
	Параметры.ПараметрыАлгоритмов.Установить("МесяцПериода", Запрос.Месяц);
	ДатаДокумента = ОпределитьПериод();

	Параметры.ТаблицаОстатковРасчетовСРаботниками.УдалитьСтроки();
	Пока Запрос.Группировка(2) = 1 Цикл
		Пока Запрос.Группировка(3) = 1 Цикл
			Пока Запрос.Группировка(4) = 1 Цикл
				Пока Запрос.Группировка(5) = 1 Цикл
					Пока Запрос.Группировка(6) = 1 Цикл
						
						НоменклатурнаяГруппа = ?(ПустоеЗначение(Запрос.ВидДеятельности) = 1, Параметры.ОсновнаяНоменклатурнаяГруппа, СокрЛП(Запрос.ВидДеятельности.Наименование));
						
						Если (Запрос.Выплачено + Запрос.Удержано) &lt;&gt; 0 Тогда
							Параметры.ТаблицаОстатковРасчетовСРаботниками.НоваяСтрока();
							Параметры.ТаблицаОстатковРасчетовСРаботниками.РаботникОрганизации = Запрос.Работник;
							Параметры.ТаблицаОстатковРасчетовСРаботниками.Сумма = Запрос.Выплачено + Запрос.Удержано;
							Параметры.ТаблицаОстатковРасчетовСРаботниками.ПериодРегистрации = НачМесяца(Запрос.МесяцНачисления);
							Параметры.ТаблицаОстатковРасчетовСРаботниками.ВидУдержания = "НачисленоПовременно";									
							Параметры.ТаблицаОстатковРасчетовСРаботниками.НоменклатурнаяГруппа = НоменклатурнаяГруппа;									
							Параметры.ПараметрыАлгоритмов.Установить("ВидДеятельсности", Запрос.ВидДеятельности);
							Параметры.ТаблицаОстатковРасчетовСРаботниками.ХарактерДеятельности = ОпределитьХарактерДеятельности();	
						КонецЕсли;
						
						Если ПустоеЗначение(Запрос.ВидУдержания) = 0 Тогда
							Если Запрос.Удержано &lt;&gt; 0 Тогда
								Параметры.ТаблицаОстатковРасчетовСРаботниками.НоваяСтрока();
								Параметры.ТаблицаОстатковРасчетовСРаботниками.РаботникОрганизации = Запрос.Работник;
								Параметры.ТаблицаОстатковРасчетовСРаботниками.Сумма = Запрос.Удержано;
								Параметры.ТаблицаОстатковРасчетовСРаботниками.НоменклатурнаяГруппа = НоменклатурнаяГруппа;
								Параметры.ТаблицаОстатковРасчетовСРаботниками.ПериодРегистрации = НачМесяца(Запрос.МесяцНачисления);
								Если Запрос.ВидУдержания.НДФЛ = 1 Тогда
									Параметры.ТаблицаОстатковРасчетовСРаботниками.ВидУдержания = "УдержаноНДФЛ";
								Иначе
									Параметры.ТаблицаОстатковРасчетовСРаботниками.ВидУдержания = "УдержаноДругое";
								КонецЕсли;
								Параметры.ПараметрыАлгоритмов.Установить("ВидДеятельсности", Запрос.ВидДеятельности);
								Параметры.ТаблицаОстатковРасчетовСРаботниками.ХарактерДеятельности = ОпределитьХарактерДеятельности();	
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
	ВходящиеДанные.Установить("Дата", ДатаДокумента);
	ВходящиеДанные.Установить("РазделУчета", Параметры.РазделУчета);
	ВходящиеДанные.Установить("Таблица", "Таблица5");
	ВходящиеДанные.Установить("ВходящиеОстатки", Параметры.ТаблицаОстатковРасчетовСРаботниками);
	ВыгрузитьПоПравилу(,,ВходящиеДанные,, "ЗаписьКнигиУчетаДоходовИРасходовИП");
	
КонецЦикла;


</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВыгрузитьОстаткиВНА" ИспользуетсяПриЗагрузке="false">
			<Текст>ВыбВидМатериальногоРесурса = Параметры.ПараметрыАлгоритмов.Получить("ВидМПЗ");
Параметры.ТаблицаОстатковВнеоборотныхАктивов.УдалитьСтроки();
Если ПустоеЗначение(ВыбВидМатериальногоРесурса) = 1 Тогда
	Возврат 0;
КонецЕсли;

ВыбНачПериода = Параметры.ДатаКонцаПериодаВыгрузки;
ВыбКонПериода = Параметры.ДатаКонцаПериодаВыгрузки;	

Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	ВидОстатка = "НачОст";
Иначе
	ВидОстатка = "КонОст";
КонецЕсли;

ТаблицаОбъектовНаНачало = СоздатьОбъект("ТаблицаЗначений");
ТаблицаОбъектовНаКонец = СоздатьОбъект("ТаблицаЗначений");
ТаблицаВыбывшихОбъектов = СоздатьОбъект("ТаблицаЗначений");
Параметры.ТаблицаОстатковВнеоборотныхАктивов.Выгрузить(ТаблицаОбъектовНаНачало);
ТаблицаОбъектовНаНачало.УдалитьСтроки();
//для записи в регистры сведений данных о выбывших объектах
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	НачПериода = Параметры.ДатаВводаОстатков;
	КонПериода = Параметры.ДатаВводаОстатков;
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса = 
	"//{{ЗАПРОС(Сформировать)
	|Период с НачПериода по КонПериода;
	|Без итогов;
	|Объект = Регистр.Расходы.Номенклатура, Регистр.Амортизация.Объект;
	|ВидРесурса = Регистр.Расходы.ВидМатериальногоРесурса, Регистр.Амортизация.ВидМатериальногоРесурса;
	|ТекущаяСтоимость = Регистр.Расходы.СтоимостьОплаченная;
	|Амортизация = Регистр.Амортизация.Амортизация;
	|ПервоначальнаяСтоимость = Регистр.Расходы.Стоимость;
	|ДокументОплаты = Регистр.Расходы.ДокументОплаты;
	|НомерДокумента = Регистр.Расходы.ДокументПоступления.НомерДок;
	|Функция ПервоначальнаяСтоимостьНачОст = " + ВидОстатка + "(ПервоначальнаяСтоимость);
	|Функция БалансоваяСтоимостьНач = " + ВидОстатка + "(ТекущаяСтоимость);
	|Функция НачисленнаяАмортизацияНач = " + ВидОстатка + "(Амортизация);
	|Группировка ВидРесурса;
	|Группировка Объект без групп;
	|Условие(ВидРесурса = ВыбВидМатериальногоРесурса);
	|"//}}ЗАПРОС
	;
	Если Запрос.Выполнить(ТекстЗапроса) = 1 Тогда
		Пока Запрос.Группировка() = 1 Цикл
			ТаблицаОбъектовНаНачало.НоваяСтрока();
			ТаблицаОбъектовНаНачало.Объект = Запрос.Объект;
			ТаблицаОбъектовНаНачало.ИнвентарныйНомер = Запрос.Объект.Код;
			ТаблицаОбъектовНаНачало.ПервоначальнаяСтоимость = Запрос.ПервоначальнаяСтоимостьНачОст;
			ТаблицаОбъектовНаНачало.ТекущаяСтоимость = Запрос.БалансоваяСтоимостьНач;
			ТаблицаОбъектовНаНачало.НакопленнаяАмортизация = Запрос.НачисленнаяАмортизацияНач;	
			ТаблицаОбъектовНаНачало.РеквизитыДокументаОплаты	= "Документ № " + Запрос.ДокументОплаты.НомерДок + " от " + Запрос.ДокументОплаты.ДатаДок;	
			ТаблицаОбъектовНаНачало.ДатаПринятияКУчету = Запрос.Объект.ДатаНачалаИспользования;
			ТаблицаОбъектовНаНачало.ДатаПриобретения = Запрос.Объект.ДатаПриобретения;
			ТаблицаОбъектовНаНачало.Событие = "Принятие к учету и ввод в эксплуатацию";
			ТаблицаОбъектовНаНачало.НомерДокумента = Запрос.НомерДокумента;	
			Если ВыбВидМатериальногоРесурса = Перечисление.ВидыМатериальныхРесурсов.НематериальныйАктив Тогда
				ТаблицаОбъектовНаНачало.СрокПолезногоИспользования = Запрос.Объект.СрокПолезногоИспользования;
				ТаблицаОбъектовНаНачало.НачислятьАмортизацию = 1;	
			Иначе
				ТаблицаОбъектовНаНачало.СрокПолезногоИспользования = Запрос.Объект.СрокПолезногоИспользования.Получить(КонПериода);
				ТаблицаОбъектовНаНачало.НачислятьАмортизацию = Запрос.Объект.НачислятьАмортизацию.Получить(КонПериода);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;	
КонецЕсли;

//получение данных об объектах в эксплуатации
Запрос = СоздатьОбъект("Запрос");
ТекстЗапроса = 
"//{{ЗАПРОС(Сформировать)
|Период с ВыбНачПериода по ВыбКонПериода;
|Без итогов;
|Объект = Регистр.Расходы.Номенклатура, Регистр.Амортизация.Объект;
|ВидРесурса = Регистр.Расходы.ВидМатериальногоРесурса, Регистр.Амортизация.ВидМатериальногоРесурса;
|ТекущаяСтоимость = Регистр.Расходы.СтоимостьОплаченная;
|Амортизация = Регистр.Амортизация.Амортизация;
|ПервоначальнаяСтоимость = Регистр.Расходы.Стоимость;
|ДокументОплаты = Регистр.Расходы.ДокументОплаты;
|НомерДокумента = Регистр.Расходы.ДокументПоступления.НомерДок;
|Функция ПервоначальнаяСтоимостьНачОст = " + ВидОстатка + "(ПервоначальнаяСтоимость);
|Функция БалансоваяСтоимостьНач = " + ВидОстатка + "(ТекущаяСтоимость);
|Функция НачисленнаяАмортизацияНач = " + ВидОстатка + "(Амортизация);
|Группировка ВидРесурса;
|Группировка Объект без групп;
|Условие(ВидРесурса = ВыбВидМатериальногоРесурса);
|"//}}ЗАПРОС
;
// Если ошибка в запросе, то выход из процедуры
Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
	Возврат 0;
КонецЕсли;

Пока Запрос.Группировка() = 1 Цикл
	Параметры.ТаблицаОстатковВнеоборотныхАктивов.НоваяСтрока();
	Параметры.ТаблицаОстатковВнеоборотныхАктивов.Объект = Запрос.Объект;
	Параметры.ТаблицаОстатковВнеоборотныхАктивов.ИнвентарныйНомер = Запрос.Объект.Код;
	Параметры.ТаблицаОстатковВнеоборотныхАктивов.ПервоначальнаяСтоимость = Запрос.ПервоначальнаяСтоимостьНачОст;
	Параметры.ТаблицаОстатковВнеоборотныхАктивов.ТекущаяСтоимость = Запрос.БалансоваяСтоимостьНач;
	Параметры.ТаблицаОстатковВнеоборотныхАктивов.НакопленнаяАмортизация = Запрос.НачисленнаяАмортизацияНач;	
	Параметры.ТаблицаОстатковВнеоборотныхАктивов.РеквизитыДокументаОплаты	= "Документ № " + Запрос.ДокументОплаты.НомерДок + " от " + Запрос.ДокументОплаты.ДатаДок;	
	Параметры.ТаблицаОстатковВнеоборотныхАктивов.ДатаПринятияКУчету = Запрос.Объект.ДатаНачалаИспользования;
	Параметры.ТаблицаОстатковВнеоборотныхАктивов.ДатаПриобретения = Запрос.Объект.ДатаПриобретения;
	Параметры.ТаблицаОстатковВнеоборотныхАктивов.Событие = "Принятие к учету и ввод в эксплуатацию";
	Параметры.ТаблицаОстатковВнеоборотныхАктивов.НомерДокумента = Запрос.НомерДокумента;	
	Если ВыбВидМатериальногоРесурса = Перечисление.ВидыМатериальныхРесурсов.НематериальныйАктив Тогда
		Параметры.ТаблицаОстатковВнеоборотныхАктивов.СрокПолезногоИспользования = Запрос.Объект.СрокПолезногоИспользования;
		Параметры.ТаблицаОстатковВнеоборотныхАктивов.НачислятьАмортизацию = 1;	
	Иначе
		Параметры.ТаблицаОстатковВнеоборотныхАктивов.СрокПолезногоИспользования = Запрос.Объект.СрокПолезногоИспользования.Получить(ВыбКонПериода);
		Параметры.ТаблицаОстатковВнеоборотныхАктивов.НачислятьАмортизацию = Запрос.Объект.НачислятьАмортизацию.Получить(ВыбКонПериода);
	КонецЕсли;
КонецЦикла;

Если Параметры.ПараметрыАлгоритмов.Получить("УСН") = 1 Тогда
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
	ВходящиеДанные.Установить("РазделУчета", Параметры.РазделУчета);
	Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
		ВходящиеДанные.Установить("Дата", Параметры.ДатаВводаОстатков - 1);
	Иначе
		ВходящиеДанные.Установить("Дата", Параметры.ДатаКонцаПериодаВыгрузки);
	КонецЕсли;
	ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
	ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
	ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
	ВходящиеДанные.Установить("ВходящиеОстатки", Параметры.ТаблицаОстатковВнеоборотныхАктивов);
	ВыгрузитьПоПравилу(,,ВходящиеДанные,, "ВводНачальныхОстатков");
	
	//нужны сведения об выбывших ОС
	Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
		// Получим список выбывших объектов
		ТаблицаОбъектовНаНачало.Выгрузить(ТаблицаВыбывшихОбъектов);
		Параметры.ТаблицаОстатковВнеоборотныхАктивов.ВыбратьСтроки();
		ТаблицаВыбывшихОбъектов.ВыбратьСтроки();
		Пока Параметры.ТаблицаОстатковВнеоборотныхАктивов.ПолучитьСтроку() = 1 Цикл
			НомерСтроки = "";
			Если ТаблицаВыбывшихОбъектов.НайтиЗначение(Параметры.ТаблицаОстатковВнеоборотныхАктивов.Объект, НомерСтроки, "Объект") = 1 Тогда
				ТаблицаВыбывшихОбъектов.УдалитьСтроку(НомерСтроки);
			КонецЕсли;
		КонецЦикла;
		
		Если ТаблицаВыбывшихОбъектов.КоличествоСтрок() &lt;&gt; 0 Тогда
			ВходящиеДанные = СоздатьОбъект("СписокЗначений");
			ВходящиеДанные.Установить("РазделУчета", Параметры.РазделУчета);
			ВходящиеДанные.Установить("Дата", Параметры.ДатаВводаОстатков - 1);
			ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 0);
			ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 0);		
			ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
			ВходящиеДанные.Установить("ВходящиеОстатки", ТаблицаВыбывшихОбъектов);
			ВыгрузитьПоПравилу(,,ВходящиеДанные,, "ВводНачальныхОстатков");
		КонецЕсли;
		
	КонецЕсли;
	
Иначе
	Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
		ВходящиеДанные = СоздатьОбъект("СписокЗначений");
		ВходящиеДанные.Установить("РазделУчета", Параметры.РазделУчета);
		ВходящиеДанные.Установить("Дата", Параметры.ДатаВводаОстатков - 1);
		ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
		ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
		ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
		ВходящиеДанные.Установить("ВходящиеОстатки", Параметры.ТаблицаОстатковВнеоборотныхАктивов);
		ВыгрузитьПоПравилу(,,ВходящиеДанные,, "ВводНачальныхОстатков");
	Иначе
		
		// Получим список выбывших объектов
		ТаблицаОбъектовНаНачало.Выгрузить(ТаблицаВыбывшихОбъектов);
		Параметры.ТаблицаОстатковВнеоборотныхАктивов.ВыбратьСтроки();
		ТаблицаВыбывшихОбъектов.ВыбратьСтроки();
		Пока Параметры.ТаблицаОстатковВнеоборотныхАктивов.ПолучитьСтроку() = 1 Цикл
			НомерСтроки = "";
			Если ТаблицаВыбывшихОбъектов.НайтиЗначение(Параметры.ТаблицаОстатковВнеоборотныхАктивов.Объект, НомерСтроки, "Объект") = 1 Тогда
				ТаблицаВыбывшихОбъектов.УдалитьСтроку(НомерСтроки);
			КонецЕсли;
		КонецЦикла;
		
		// Шаг 1. По объектам, которые были на начало формируем запси спец регистров			
		Если ТаблицаОбъектовНаНачало.КоличествоСтрок() &lt;&gt; 0 Тогда
			ВходящиеДанные = СоздатьОбъект("СписокЗначений");
			ВходящиеДанные.Установить("РазделУчета", Параметры.РазделУчета);
			ВходящиеДанные.Установить("Дата", Параметры.ДатаВводаОстатков - 1);
			ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 0);
			ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 0);		
			ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
			ВходящиеДанные.Установить("ВходящиеОстатки", ТаблицаОбъектовНаНачало);
			ВыгрузитьПоПравилу(,,ВходящиеДанные,, "ВводНачальныхОстатков");
		КонецЕсли;
		
		//получаем список объектов, которые были на начало но еще не выбыли
		ТаблицаОбъектовНаНачало.ВыбратьСтроки();
		ТаблицаВыбывшихОбъектов.ВыбратьСтроки();		
		Пока ТаблицаВыбывшихОбъектов.ПолучитьСтроку() = 1 Цикл
			НомерСтроки = "";
			Если ТаблицаОбъектовНаНачало.НайтиЗначение(ТаблицаВыбывшихОбъектов.Объект, НомерСтроки, "Объект") = 1 Тогда
				ТаблицаОбъектовНаНачало.УдалитьСтроку(НомерСтроки);
			КонецЕсли;
		КонецЦикла;
		
		// Шаг 2. По объектам, которые были на начало но еще не выбыли
		Если ТаблицаОбъектовНаНачало.КоличествоСтрок() &lt;&gt; 0 Тогда
			ВходящиеДанные = СоздатьОбъект("СписокЗначений");
			ВходящиеДанные.Установить("РазделУчета", Параметры.РазделУчета);
			ВходящиеДанные.Установить("Дата", Параметры.ДатаКонцаПериодаВыгрузки);
			ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
			ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 0);		
			ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 0);
			ВходящиеДанные.Установить("ВходящиеОстатки", ТаблицаОбъектовНаНачало);
			ВыгрузитьПоПравилу(,,ВходящиеДанные,, "ВводНачальныхОстатков");
		КонецЕсли;
		
		//получаем список объектов, которые поступили в текущем году
		Параметры.ТаблицаОстатковВнеоборотныхАктивов.Выгрузить(ТаблицаОбъектовНаКонец);
		ТаблицаОбъектовНаКонец.ВыбратьСтроки();
		ТаблицаОбъектовНаНачало.ВыбратьСтроки();
		Пока ТаблицаОбъектовНаНачало.ПолучитьСтроку() = 1 Цикл
			НомерСтроки = "";
			Если ТаблицаОбъектовНаКонец.НайтиЗначение(ТаблицаОбъектовНаНачало.Объект, НомерСтроки, "Объект") = 1 Тогда
				ТаблицаОбъектовНаКонец.УдалитьСтроку(НомерСтроки);
			КонецЕсли;
		КонецЦикла;
		
		// Шаг 3. По объектам, поступили
		Если ТаблицаОбъектовНаКонец.КоличествоСтрок() &lt;&gt; 0 Тогда
			ВходящиеДанные = СоздатьОбъект("СписокЗначений");
			ВходящиеДанные.Установить("РазделУчета", Параметры.РазделУчета);
			ВходящиеДанные.Установить("Дата", Параметры.ДатаКонцаПериодаВыгрузки);
			ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
			ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 0);		
			ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
			ВходящиеДанные.Установить("ВходящиеОстатки", ТаблицаОбъектовНаКонец);
			ВыгрузитьПоПравилу(,,ВходящиеДанные,, "ВводНачальныхОстатков");
		КонецЕсли;
		
	КонецЕсли;
КонецЕсли;



</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВыгрузитьОстаткиДенежныхСредств" ИспользуетсяПриЗагрузке="false">
			<Текст>СчетУчета = Параметры.ПараметрыАлгоритмов.Получить("СчетУчета");
Параметры.ТаблицаПроводок.УдалитьСтроки();
Если ПустоеЗначение(СчетУчета) = 1 Тогда
	Возврат 0;
КонецЕсли;

ВыбНачПериода = Параметры.ДатаКонцаПериодаВыгрузки;
ВыбКонПериода = Параметры.ДатаКонцаПериодаВыгрузки;	

Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	ВидОстатка = "НачОст";
Иначе
	ВидОстатка = "КонОст";
КонецЕсли;

ВыбВалюта = Параметры.Рубли;

Если (СчетУчета = "КассаОрганизацииВал")
	ИЛИ (СчетУчета = "КассаОрганизации") Тогда
	// остатки по кассе
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса = 
	"//{{ЗАПРОС(Сформировать)
	|Период с ВыбНачПериода по ВыбКонПериода;
	|Без итогов;
	|Валюта = Регистр.Касса.Валюта;
	|Сумма = Регистр.Касса.Сумма;
	|Функция СуммаНачОст = " + ВидОстатка + "(Сумма);";
	Если СчетУчета = "КассаОрганизации" Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|Условие(Валюта = ВыбВалюта);
		|"//}}ЗАПРОС
		;
	Иначе
		ТекстЗапроса = ТекстЗапроса + "
		|Условие(Валюта &lt;&gt; ВыбВалюта);
		|"//}}ЗАПРОС
		;
	КонецЕсли;
	
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат 0;
	КонецЕсли;
	
Иначе
	//остатки по банку
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса = 
	"//{{ЗАПРОС(Сформировать)
	|Период с ВыбНачПериода по ВыбКонПериода;
	|Без итогов;
	|Счет = Регистр.Банк.БанковскийСчет;
	|Валюта = Регистр.Банк.БанковскийСчет.Валюта;
	|Сумма = Регистр.Банк.Сумма;
	|Функция СуммаНачОст = " + ВидОстатка + "(Сумма);";
	Если СчетУчета = "РасчетныеСчета" Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|Условие(Валюта = ВыбВалюта);
		|"//}}ЗАПРОС
		;
	Иначе
		ТекстЗапроса = ТекстЗапроса + "
		|Условие(Валюта &lt;&gt; ВыбВалюта);
		|"//}}ЗАПРОС
		;
	КонецЕсли;
	
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат 0;
	КонецЕсли;
	
КонецЕсли;

Пока Запрос.Группировка() = 1 Цикл
	Параметры.ТаблицаПроводок.НоваяСтрока();
	Параметры.ТаблицаПроводок.СчетУчета = СчетУчета;
	Если Лев(СчетУчета, 5) &lt;&gt; "Касса" Тогда
		Параметры.ТаблицаПроводок.Субконто1 = Запрос.Счет;
	КонецЕсли;
	Если Запрос.Валюта = Параметры.Рубли Тогда
		Параметры.ТаблицаПроводок.Сумма = Запрос.Сумма;
	Иначе
		ДатаКурса = ВыбНачПериода;
		Кратность = Запрос.Валюта.Кратность.Получить(ДатаКурса);
		Курс = Запрос.Валюта.Курс.Получить(ДатаКурса)/?(Кратность = 0, 1, Кратность);
		Параметры.ТаблицаПроводок.Сумма = Запрос.Сумма * Курс;
		Параметры.ТаблицаПроводок.Валюта = Запрос.Валюта;
		Параметры.ТаблицаПроводок.ВалютнаяСумма = Запрос.Сумма;
	КонецЕсли;
КонецЦикла;

	
ВходящиеДанные = СоздатьОбъект("СписокЗначений");
Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	ВходящиеДанные.Установить("Дата", Параметры.ДатаВводаОстатков - 1);
Иначе
	ВходящиеДанные.Установить("Дата", Параметры.ДатаКонцаПериодаВыгрузки);
КонецЕсли;
ВходящиеДанные.Установить("РазделУчета", Параметры.РазделУчета);
ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
ВходящиеДанные.Установить("ВходящиеОстатки", Параметры.ТаблицаПроводок);
ВыгрузитьПоПравилу(,,ВходящиеДанные,, "ВводНачальныхОстатков");

	



</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВыгрузитьОстаткиМПЗ" ИспользуетсяПриЗагрузке="false">
			<Текст>ВыбВидМатериальногоРесурса = Параметры.ПараметрыАлгоритмов.Получить("ВидМПЗ");
СчетУчета = Параметры.ПараметрыАлгоритмов.Получить("СчетУчета");
Параметры.ТаблицаОстатковМПЗ.УдалитьСтроки();
Если ПустоеЗначение(ВыбВидМатериальногоРесурса) = 1 Тогда
	Возврат 0;
КонецЕсли;

Если ВыбВидМатериальногоРесурса = Перечисление.ВидыМатериальныхРесурсов.Услуга Тогда
	ВыбВидМатериальногоРесурса = "";
КонецЕсли;

Если Параметры.ПараметрыАлгоритмов.Получить("УСН") = 1 Тогда
	ВыбНачПериода = Параметры.ДатаКонцаПериодаВыгрузки;
	ВыбКонПериода = Параметры.ДатаКонцаПериодаВыгрузки;	
	Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
		ВидОстатка = "НачОст";
	Иначе
		ВидОстатка = "КонОст";
	КонецЕсли;

Иначе
	Если Параметры.ПараметрыАлгоритмов.Получить("ВидВыгрузки") = "НачальныеОстатки" Тогда
		ВыбНачПериода = Параметры.ДатаВводаОстатков;
		ВыбКонПериода = Параметры.ДатаВводаОстатков;
		ВидОстатка = "НачОст";
	Иначе
		ВыбНачПериода = Параметры.ДатаКонцаПериодаВыгрузки;
		ВыбКонПериода = Параметры.ДатаКонцаПериодаВыгрузки;	
		ВидОстатка = "КонОст";
	КонецЕсли;		
КонецЕсли;

Запрос = СоздатьОбъект("Запрос");
ТекстЗапроса = 
"//{{ЗАПРОС(Сформировать)
|Период с ВыбНачПериода по ВыбКонПериода;
|Без итогов;
|ВидДеятельности = Регистр.Расходы.ВидДеятельности;
|ВидМатериальногоРесурса = Регистр.Расходы.ВидМатериальногоРесурса;
|Номенклатура = Регистр.Расходы.Номенклатура;
|ДокументПоступления = Регистр.Расходы.ДокументПоступления;
|Количество = Регистр.Расходы.Количество;
|Стоимость = Регистр.Расходы.Стоимость;
|СуммаНДС = Регистр.Расходы.СуммаНДС;
|ДокументОплаты = Регистр.Расходы.ДокументОплаты;
|ОблагаетсяНДС = Регистр.Расходы.ОблагаетсяНДС;
|КоличествоОплаченное = Регистр.Расходы.КоличествоОплаченное;
|СтоимостьОплаченная = Регистр.Расходы.СтоимостьОплаченная;
|СуммаНДСОплаченная = Регистр.Расходы.СуммаНДСОплаченная;
|Функция КоличествоНачОст = " + ВидОстатка + "(Количество);
|Функция СтоимостьНачОст = " + ВидОстатка + "(Стоимость);
|Функция СуммаНДСНачОст = " + ВидОстатка + "(СуммаНДС);
|Функция КоличествоОплаченноеНачОст = " + ВидОстатка + "(КоличествоОплаченное);
|Функция СтоимостьОплаченнаяНачОст = " + ВидОстатка + "(СтоимостьОплаченная);
|Функция СуммаНДСОплаченнаяНачОст = " + ВидОстатка + "(СуммаНДСОплаченная);
|Группировка ВидДеятельности;
|Группировка ВидМатериальногоРесурса;
|Группировка Номенклатура;
|Группировка ДокументПоступления;
|Группировка ДокументОплаты;
|Условие(ВидМатериальногоРесурса = ВыбВидМатериальногоРесурса);
|"//}}ЗАПРОС
;
// Если ошибка в запросе, то выход из процедуры
Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
	Возврат 0;
КонецЕсли;

НомерСтроки = 1;
Пока Запрос.Группировка() = 1 Цикл
	
	Попытка
		ДокументПоступления = Запрос.ДокументПоступления.Договор;
	Исключение             
		ДокументПоступления = "";
	КонецПопытки;
	
	Попытка
		Поставщик = Запрос.ДокументПоступления.Контрагент;
	Исключение             
		Поставщик = "";
	КонецПопытки;

	
	Если ВыбВидМатериальногоРесурса = Перечисление.ВидыМатериальныхРесурсов.ВнеоборотныйАктив Тогда
		Если Запрос.Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.ТМЦ Тогда
			СчетУчета = Параметры.ПараметрыАлгоритмов.Получить("СчетУчета");
		Иначе
			СчетУчета = "СтроительствоОбъектовОсновныхСредств";
		КонецЕсли;
	КонецЕсли;
	
	Если (ВыбВидМатериальногоРесурса = Перечисление.ВидыМатериальныхРесурсов.Услуга)
		ИЛИ (ВыбВидМатериальногоРесурса = Перечисление.ВидыМатериальныхРесурсов.Прочее) Тогда
		ВидМатериальногоРесурса = Перечисление.ВидыМатериальныхРесурсов.Материал;
	Иначе
		ВидМатериальногоРесурса = ВыбВидМатериальногоРесурса;
	КонецЕсли;
	
	НоменклатурнаяГруппа = ?(ПустоеЗначение(Запрос.ВидДеятельности) = 1, Параметры.ОсновнаяНоменклатурнаяГруппа, СокрЛП(Запрос.ВидДеятельности.Наименование));
	Параметры.ПараметрыАлгоритмов.Установить("ВидДеятельсности", Запрос.ВидДеятельности);
		
	Параметры.ТаблицаОстатковМПЗ.НоваяСтрока();
	Параметры.ТаблицаОстатковМПЗ.Индекс = Строка(Запрос.ДокументПоступления) + Строка(Запрос.ВидДеятельности) + Строка(ВидМатериальногоРесурса) + Строка(Запрос.Номенклатура) + ?(Запрос.Номенклатура.Вид() = "","", Строка(Запрос.Номенклатура.ПолныйКод()));
	Параметры.ТаблицаОстатковМПЗ.Ключ						= НомерСтроки;	
	Параметры.ТаблицаОстатковМПЗ.НомерСтрокиТЧ				= НомерСтроки;
	НомерСтроки = НомерСтроки + 1;
	Параметры.ТаблицаОстатковМПЗ.СчетУчета					= СчетУчета;
	Параметры.ТаблицаОстатковМПЗ.Номенклатура 				= Запрос.Номенклатура; 
	Параметры.ТаблицаОстатковМПЗ.НоменклатурнаяГруппа		= НоменклатурнаяГруппа; 
	Параметры.ТаблицаОстатковМПЗ.ХарактерДеятельности		= ОпределитьХарактерДеятельности();	
	Параметры.ТаблицаОстатковМПЗ.Партия						= ДокументПоступления;
	Параметры.ТаблицаОстатковМПЗ.ПартияСинхронизации		= Запрос.ДокументПоступления;
	Параметры.ТаблицаОстатковМПЗ.Поставщик					= Поставщик;
	Параметры.ТаблицаОстатковМПЗ.ДоговорПоставщика			= ДокументПоступления;
	Параметры.ТаблицаОстатковМПЗ.ВидМПЗ						= ВидМатериальногоРесурса;
	Если Запрос.СуммаНДСНачОст &lt;&gt; 0 Тогда
		Параметры.ТаблицаОстатковМПЗ.НДСВключенВСтоимость		=?(Запрос.ОблагаетсяНДС = 0, 1, 0);
	Иначе
		Параметры.ТаблицаОстатковМПЗ.НДСВключенВСтоимость		= 0;
	КонецЕсли;
	
	Если Запрос.КоличествоОплаченноеНачОст &lt;&gt; 0 Тогда
		Если Запрос.КоличествоНачОст &lt;&gt; 0 Тогда
			Если (Запрос.КоличествоНачОст - Запрос.КоличествоОплаченноеНачОст &lt;&gt; 0) Тогда
				Параметры.ТаблицаОстатковМПЗ.Количество 				= Запрос.КоличествоНачОст - Запрос.КоличествоОплаченноеНачОст; 
				Параметры.ТаблицаОстатковМПЗ.Сумма						= Запрос.СтоимостьНачОст - Запрос.СтоимостьОплаченнаяНачОст;
				Параметры.ТаблицаОстатковМПЗ.НДС	 					= Запрос.СуммаНДСНачОст - Запрос.СуммаНДСОплаченнаяНачОст;
				Параметры.ТаблицаОстатковМПЗ.Оплачен					= 0;
				Параметры.ТаблицаОстатковМПЗ.РеквизитыДокументаОплаты	= "";
			Иначе
				Параметры.ТаблицаОстатковМПЗ.УдалитьСтроку();
				НомерСтроки = НомерСтроки - 1;
			КонецЕсли;
			
			//*** оплаченная часть
			Параметры.ТаблицаОстатковМПЗ.НоваяСтрока();
			Параметры.ТаблицаОстатковМПЗ.Индекс = Строка(Запрос.ДокументПоступления) + Строка(Запрос.ВидДеятельности) + Строка(ВидМатериальногоРесурса) + Строка(Запрос.Номенклатура) + ?(Запрос.Номенклатура.Вид() = "","", Строка(Запрос.Номенклатура.ПолныйКод()));
			Параметры.ТаблицаОстатковМПЗ.Ключ						= НомерСтроки;			
			Параметры.ТаблицаОстатковМПЗ.НомерСтрокиТЧ				= НомерСтроки;
			НомерСтроки = НомерСтроки + 1;
			Параметры.ТаблицаОстатковМПЗ.СчетУчета					= СчетУчета;
			Параметры.ТаблицаОстатковМПЗ.Номенклатура 				= Запрос.Номенклатура; 
			Параметры.ТаблицаОстатковМПЗ.НоменклатурнаяГруппа		= НоменклатурнаяГруппа; 
			Параметры.ТаблицаОстатковМПЗ.ХарактерДеятельности		= ОпределитьХарактерДеятельности();
			Параметры.ТаблицаОстатковМПЗ.Партия						= ДокументПоступления;
			Параметры.ТаблицаОстатковМПЗ.ПартияСинхронизации		= Запрос.ДокументПоступления;
			Параметры.ТаблицаОстатковМПЗ.Поставщик					= Поставщик;
			Параметры.ТаблицаОстатковМПЗ.ДоговорПоставщика			= ДокументПоступления;
			Параметры.ТаблицаОстатковМПЗ.ВидМПЗ						= ВидМатериальногоРесурса;
			Если Запрос.СуммаНДСНачОст &lt;&gt; 0 Тогда
				Параметры.ТаблицаОстатковМПЗ.НДСВключенВСтоимость		=?(Запрос.ОблагаетсяНДС = 0, 1, 0);
			Иначе
				Параметры.ТаблицаОстатковМПЗ.НДСВключенВСтоимость		= 0;
			КонецЕсли;
			Параметры.ТаблицаОстатковМПЗ.Количество 				= Запрос.КоличествоОплаченноеНачОст; 
			Параметры.ТаблицаОстатковМПЗ.Сумма						= Запрос.СтоимостьОплаченнаяНачОст;
			Параметры.ТаблицаОстатковМПЗ.НДС	 					= Запрос.СуммаНДСОплаченнаяНачОст;	
			Параметры.ТаблицаОстатковМПЗ.Оплачен					= 1;
			Параметры.ТаблицаОстатковМПЗ.РеквизитыДокументаОплаты	= "Документ № " + Запрос.ДокументОплаты.НомерДок + " от " + Запрос.ДокументОплаты.ДатаДок;	
			//
		Иначе
			Параметры.ТаблицаОстатковМПЗ.Количество 				= Запрос.КоличествоОплаченноеНачОст; 
			Параметры.ТаблицаОстатковМПЗ.Сумма						= Запрос.СтоимостьОплаченнаяНачОст;
			Параметры.ТаблицаОстатковМПЗ.НДС	 					= Запрос.СуммаНДСОплаченнаяНачОст;	
			Параметры.ТаблицаОстатковМПЗ.Оплачен					= 1;
			Параметры.ТаблицаОстатковМПЗ.РеквизитыДокументаОплаты	= "Документ № " + Запрос.ДокументОплаты.НомерДок + " от " + Запрос.ДокументОплаты.ДатаДок;	
		КонецЕсли;
	Иначе
		Параметры.ТаблицаОстатковМПЗ.Количество 				= Запрос.КоличествоНачОст; 
		Параметры.ТаблицаОстатковМПЗ.Сумма						= Запрос.СтоимостьНачОст;
		Параметры.ТаблицаОстатковМПЗ.НДС	 					= Запрос.СуммаНДСНачОст;	
		Параметры.ТаблицаОстатковМПЗ.Оплачен					= 0;
		Параметры.ТаблицаОстатковМПЗ.РеквизитыДокументаОплаты	= "";
	КонецЕсли;

		
	
	//Параметры.ТаблицаОстатковМПЗ.РасчетныйДокумент			= ;	
	//Параметры.ТаблицаОстатковМПЗ.СтатусыОплатыРасходовУСН
	//Параметры.ТаблицаОстатковМПЗ.ОтражениеВУСН
	//Параметры.ТаблицаОстатковМПЗ.ВалютнаяСумма
	//Параметры.ТаблицаОстатковМПЗ.ВалютныйНДС
	
КонецЦикла;

Если Параметры.РазделУчета &lt;&gt;  "ПрочиеРасходыНалоговогоУчетаУСНиИП" Тогда
	Если Параметры.ПараметрыАлгоритмов.Получить("УчетНоменклатурыПоСкладам") = 1 Тогда
		РаспределитьОстаткиПоСкладам();	
	КонецЕсли;
КонецЕсли;

Если (Параметры.РазделУчета = "ГотоваяПродукцияИПолуфабрикаты")
	ИЛИ (Параметры.РазделУчета =  "ПрочиеРасходыНалоговогоУчетаУСНиИП") Тогда
	ВыгрузитьОстаткиМПЗОборотов();
КонецЕсли;

ВходящиеДанные = СоздатьОбъект("СписокЗначений");

Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	ВходящиеДанные.Установить("Дата", Параметры.ДатаВводаОстатков - 1);
Иначе
	Если Параметры.ПараметрыАлгоритмов.Получить("УСН") = 1 Тогда
		ВходящиеДанные.Установить("Дата", Параметры.ДатаКонцаПериодаВыгрузки);
	ИначеЕсли Параметры.ПараметрыАлгоритмов.Получить("ВидВыгрузки") = "НачальныеОстатки" Тогда
		ВходящиеДанные.Установить("Дата", Параметры.ДатаВводаОстатков - 1);
	Иначе
		ВходящиеДанные.Установить("Дата", Параметры.ДатаКонцаПериодаВыгрузки);
	КонецЕсли;	
КонецЕсли;

ВходящиеДанные.Установить("РазделУчета", Параметры.РазделУчета);
Если Параметры.ПараметрыАлгоритмов.Получить("УСН") = 1 Тогда
	
	ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
	ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
	ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
	
Иначе
	Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
		ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
		ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
		ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
	ИначеЕсли (ВыбВидМатериальногоРесурса &lt;&gt; Перечисление.ВидыМатериальныхРесурсов.Материал)
		И (ВыбВидМатериальногоРесурса &lt;&gt; Перечисление.ВидыМатериальныхРесурсов.ВспомогательныйМатериал)
		И (ВыбВидМатериальногоРесурса &lt;&gt; Перечисление.ВидыМатериальныхРесурсов.Товар)
		И (ВыбВидМатериальногоРесурса &lt;&gt; Перечисление.ВидыМатериальныхРесурсов.Продукция)
		И (ВыбВидМатериальногоРесурса &lt;&gt; Перечисление.ВидыМатериальныхРесурсов.Полуфабрикат)
		И (ВыбВидМатериальногоРесурса &lt;&gt; Перечисление.ВидыМатериальныхРесурсов.Услуга)
		И (ВыбВидМатериальногоРесурса &lt;&gt; Перечисление.ВидыМатериальныхРесурсов.РасходыПодлежащиеРаспределению)
		И (ВыбВидМатериальногоРесурса &lt;&gt; Перечисление.ВидыМатериальныхРесурсов.Прочее)
		И (ВыбВидМатериальногоРесурса &lt;&gt; Перечисление.ВидыМатериальныхРесурсов.ИныеМатериальныеРасходы) 
		И (ВыбВидМатериальногоРесурса &lt;&gt; Перечисление.ВидыМатериальныхРесурсов.ИныеРасходыРаспределяемые) Тогда
		
		ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
		ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
		ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
		
	ИначеЕсли Параметры.ПараметрыАлгоритмов.Получить("ВидВыгрузки") = "НачальныеОстатки" Тогда
		ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 0);
		ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
		ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 0);
	Иначе
		ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
		ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 0);
		ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);		
	КонецЕсли;
КонецЕсли;

Если (Параметры.РазделУчета = "ПрочиеРасходыНалоговогоУчетаУСНиИП")
	И ((Параметры.ПараметрыАлгоритмов.Получить("ВидПрочихРасходов") &lt;&gt; "МатериальныеРасходы") 
	И (Параметры.ПараметрыАлгоритмов.Получить("ВидПрочихРасходов") &lt;&gt; "")) Тогда
	ТаблицаОстатковМПЗИМР = СоздатьОбъект("ТаблицаЗначений");
	Параметры.ТаблицаОстатковМПЗ.Выгрузить(ТаблицаОстатковМПЗИМР);
	ТаблицаОстатковМПЗИМР.УдалитьСтроки();
	Параметры.ТаблицаОстатковМПЗ.ВыбратьСтроки();
	Пока Параметры.ТаблицаОстатковМПЗ.ПолучитьСтроку() = 1 Цикл
		Если Параметры.ТаблицаОстатковМПЗ.РеквизитыДокументаОплаты = "" Тогда
			
			ТаблицаОстатковМПЗИМР.НоваяСтрока();			
			ТаблицаОстатковМПЗИМР.Номенклатура = Параметры.ТаблицаОстатковМПЗ.Номенклатура;
			ТаблицаОстатковМПЗИМР.НоменклатурнаяГруппа = Параметры.ТаблицаОстатковМПЗ.НоменклатурнаяГруппа;
			ТаблицаОстатковМПЗИМР.ХарактерДеятельности = Параметры.ТаблицаОстатковМПЗ.ХарактерДеятельности;
			ТаблицаОстатковМПЗИМР.Партия = Параметры.ТаблицаОстатковМПЗ.Партия;
			ТаблицаОстатковМПЗИМР.ПартияСинхронизации = Параметры.ТаблицаОстатковМПЗ.ПартияСинхронизации;
			ТаблицаОстатковМПЗИМР.Поставщик = Параметры.ТаблицаОстатковМПЗ.Поставщик;
			ТаблицаОстатковМПЗИМР.ДоговорПоставщика = Параметры.ТаблицаОстатковМПЗ.ДоговорПоставщика;
			ТаблицаОстатковМПЗИМР.ВидМПЗ = Параметры.ТаблицаОстатковМПЗ.ВидМПЗ;
			ТаблицаОстатковМПЗИМР.НДСВключенВСтоимость = Параметры.ТаблицаОстатковМПЗ.НДСВключенВСтоимость;
			ТаблицаОстатковМПЗИМР.Количество = Параметры.ТаблицаОстатковМПЗ.Количество;
			ТаблицаОстатковМПЗИМР.Сумма = Параметры.ТаблицаОстатковМПЗ.Сумма;
			ТаблицаОстатковМПЗИМР.НДС = Параметры.ТаблицаОстатковМПЗ.НДС;

		КонецЕсли;
	КонецЦикла;
		
	ВходящиеДанные.Установить("ВходящиеОстатки", ТаблицаОстатковМПЗИМР);
Иначе
	ВходящиеДанные.Установить("ВходящиеОстатки", Параметры.ТаблицаОстатковМПЗ);
КонецЕсли;

ВходящиеДанные.Установить("ВходящиеОстаткиОборотов", Параметры.ТаблицаОстатковМПЗОборотов);
ВыгрузитьПоПравилу(,,ВходящиеДанные,, "ВводНачальныхОстатков");

//*****************************************************
//Для отработки оплаченных но не списанных расходов
ПостфиксКомментарияПред = Параметры.ПостфиксКомментария;
ВидПрочихРасходовПред = Параметры.ПараметрыАлгоритмов.Получить("ВидПрочихРасходов");
Параметры.ПараметрыАлгоритмов.Установить("ИспользоватьИмяНоменклатуры", 1);

Если (Параметры.РазделУчета = "ПрочиеРасходыНалоговогоУчетаУСНиИП")
	И ((Параметры.ПараметрыАлгоритмов.Получить("ВидПрочихРасходов") &lt;&gt; "МатериальныеРасходы") 
	И (Параметры.ПараметрыАлгоритмов.Получить("ВидПрочихРасходов") &lt;&gt; ""))
	И ((Параметры.ПараметрыАлгоритмов.Получить("ВидМПЗ") = Перечисление.ВидыМатериальныхРесурсов.ИныеМатериальныеРасходы)) Тогда
	
	
	Параметры.ПостфиксКомментария = ПостфиксКомментарияПред + "; доп. расходы";
	Параметры.ПараметрыАлгоритмов.Установить("ВидПрочихРасходов", "ДопРасходы");
	
	ТаблицаОстатковМПЗИМР = СоздатьОбъект("ТаблицаЗначений");
	Параметры.ТаблицаОстатковМПЗ.Выгрузить(ТаблицаОстатковМПЗИМР);
	ТаблицаОстатковМПЗИМР.УдалитьСтроки();
	
	ТаблицаОстатковМПЗОборотов = СоздатьОбъект("ТаблицаЗначений");
	Параметры.ТаблицаОстатковМПЗОборотов.Выгрузить(ТаблицаОстатковМПЗОборотов);
	ТаблицаОстатковМПЗОборотов.УдалитьСтроки();
	
	Параметры.ТаблицаОстатковМПЗ.ВыбратьСтроки();
	Пока Параметры.ТаблицаОстатковМПЗ.ПолучитьСтроку() = 1 Цикл
		Если Параметры.ТаблицаОстатковМПЗ.РеквизитыДокументаОплаты &lt;&gt; "" Тогда
			
			ТаблицаОстатковМПЗИМР.НоваяСтрока();			
			ТаблицаОстатковМПЗИМР.Номенклатура = Параметры.ТаблицаОстатковМПЗ.Номенклатура;
			ТаблицаОстатковМПЗИМР.НоменклатурнаяГруппа = Параметры.ТаблицаОстатковМПЗ.НоменклатурнаяГруппа;
			ТаблицаОстатковМПЗИМР.ХарактерДеятельности = Параметры.ТаблицаОстатковМПЗ.ХарактерДеятельности;
			ТаблицаОстатковМПЗИМР.Партия = Параметры.ТаблицаОстатковМПЗ.Партия;
			ТаблицаОстатковМПЗИМР.ПартияСинхронизации = Параметры.ТаблицаОстатковМПЗ.ПартияСинхронизации;
			ТаблицаОстатковМПЗИМР.Поставщик = Параметры.ТаблицаОстатковМПЗ.Поставщик;
			ТаблицаОстатковМПЗИМР.ДоговорПоставщика = Параметры.ТаблицаОстатковМПЗ.ДоговорПоставщика;
			ТаблицаОстатковМПЗИМР.ВидМПЗ = Параметры.ТаблицаОстатковМПЗ.ВидМПЗ;
			ТаблицаОстатковМПЗИМР.НДСВключенВСтоимость = Параметры.ТаблицаОстатковМПЗ.НДСВключенВСтоимость;
			ТаблицаОстатковМПЗИМР.Количество = Параметры.ТаблицаОстатковМПЗ.Количество;
			ТаблицаОстатковМПЗИМР.Сумма = Параметры.ТаблицаОстатковМПЗ.Сумма;
			ТаблицаОстатковМПЗИМР.НДС = Параметры.ТаблицаОстатковМПЗ.НДС;
			ТаблицаОстатковМПЗИМР.Оплачен = 1;
			ТаблицаОстатковМПЗИМР.РеквизитыДокументаОплаты = Параметры.ТаблицаОстатковМПЗ.РеквизитыДокументаОплаты;
			
		КонецЕсли;
	КонецЦикла;
	
	ВходящиеДанные.Установить("ВходящиеОстатки", ТаблицаОстатковМПЗИМР);
	ВходящиеДанные.Установить("ВходящиеОстаткиОборотов", ТаблицаОстатковМПЗОборотов);
	ВыгрузитьПоПравилу(,,ВходящиеДанные,, "ВводНачальныхОстатков");
	
КонецЕсли;

Параметры.ПостфиксКомментария = ПостфиксКомментарияПред;
Параметры.ПараметрыАлгоритмов.Установить("ВидПрочихРасходовПред", ВидПрочихРасходовПред);
Параметры.ПараметрыАлгоритмов.Установить("ИспользоватьИмяНоменклатуры", 0);


</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВыгрузитьОстаткиМПЗНеОплаченных" ИспользуетсяПриЗагрузке="false">
			<Текст>Параметры.ПараметрыАлгоритмов.Установить("СтатусыОплатыРасходовИП", "НеОплачено");
Параметры.ТаблицаОстатковМПЗ.УдалитьСтроки();

Параметры.ТаблицаОстатковМПЗОборотов.УдалитьСтроки();
ТаблицаМПЗРеализованных = Параметры.ПараметрыАлгоритмов.Получить("ТаблицаМПЗРеализованных");

Если Параметры.ПараметрыАлгоритмов.Получить("УСН") = 1 Тогда
	ВыбНачПериода = Параметры.ДатаКонцаПериодаВыгрузки;
	ВыбКонПериода = Параметры.ДатаКонцаПериодаВыгрузки;	
	Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
		ВидОстатка = "НачОст";
	Иначе
		ВидОстатка = "КонОст";
	КонецЕсли;

Иначе
	ВыбНачПериода = Параметры.ДатаВводаОстатков;
	ВыбКонПериода = Параметры.ДатаВводаОстатков;
	ВидОстатка = "НачОст";
КонецЕсли;


//Вспомогательные таблицы
Докум = СоздатьОбъект("Документ");
Докум.ВыбратьДокументы();
Докум.ПолучитьДокумент();
		
ВыбНачПериодаОб = ?(ПолучитьПозициюТА() &lt; Докум.ТекущийДокумент().ПолучитьПозицию(), ПолучитьПозициюТА(), Докум.ТекущийДокумент().ПолучитьПозицию());
ВыбКонПериодаОб = ?(ПолучитьДатуТА() &lt;= ВыбКонПериода, ПолучитьПозициюТА(), ВыбКонПериода);

Запрос = СоздатьОбъект("Запрос");
ТекстЗапроса = 
"//{{ЗАПРОС(Сформировать)
|Период с ВыбНачПериодаОб по ВыбКонПериодаОб;
|Без итогов;
|Номенклатура = Регистр.Обороты.ИзрасходованныйРесурс;
|ВидМПЗ = Регистр.Обороты.ВидИзрасходованногоРесурса;
|Партия = Регистр.Обороты.ДокументПоступленияИзрасходовано;
|Количество = Регистр.Обороты.Количество;
|Сумма = Регистр.Обороты.Стоимость;
|СуммаНДС = Регистр.Обороты.СуммаНДС;
|ОблагаетсяНДС = Регистр.Обороты.ОблагаетсяНДС;
|КоличествоОплаченное = Регистр.Обороты.КоличествоОплаченное;
|СуммаОплаченная = Регистр.Обороты.СтоимостьОплаченная;
|СуммаНДСОплаченная = Регистр.Обороты.СуммаНДСОплаченная;
|ВидДеятельности = Регистр.Обороты.ВидДеятельности;
|Функция КоличествоНачОст = Сумма(Количество);
|Функция СуммаНачОст = Сумма(Сумма);
|Функция СуммаНДСНачОст = Сумма(СуммаНДС);
|Функция КоличествоОплаченноеНачОст = Сумма(КоличествоОплаченное);
|Функция СуммаОплаченнаяНачОст = Сумма(СуммаОплаченная);
|Функция СуммаНДСОплаченнаяНачОст = Сумма(СуммаНДСОплаченная);
|Группировка ВидДеятельности;
|Группировка ВидМПЗ;
|Группировка Номенклатура без групп;
|Группировка Партия;
|"//}}ЗАПРОС
;
// Если ошибка в запросе, то выход из процедуры
Если Запрос.Выполнить(ТекстЗапроса) = 1 Тогда
	
	ОбЗапрос = СоздатьОбъект("ТаблицаЗначений");
	Запрос.Выгрузить(ОбЗапрос);		
	
	ОбЗапрос.НоваяКолонка("Индекс");		
	ОбЗапрос.ВыбратьСтроки();
	Пока ОбЗапрос.ПолучитьСтроку() = 1 Цикл
		ОбЗапрос.Индекс = Строка(ОбЗапрос.Партия) + Строка(ОбЗапрос.ВидДеятельности) + Строка(ОбЗапрос.ВидМПЗ) + Строка(ОбЗапрос.Номенклатура) + Строка(ОбЗапрос.Номенклатура.ПолныйКод());
	КонецЦикла;
	ОбЗапрос.Свернуть("ВидДеятельности,ВидМПЗ,Номенклатура,Партия,ДокументОплаты,ОблагаетсяНДС,Индекс","КоличествоНачОст,СуммаНачОст,СуммаНДСНачОст,КоличествоОплаченноеНачОст,СуммаОплаченнаяНачОст,СуммаНДСОплаченнаяНачОст");
	ОбЗапрос.Сортировать("Индекс");

КонецЕсли;

Запрос = СоздатьОбъект("Запрос");
ТекстЗапроса = 
"//{{ЗАПРОС(Реализации)
|Период с ВыбНачПериода по ВыбКонПериода;
|Без итогов;
|ВидДеятельности = Регистр.РасчетыСПокупателями.ВидДеятельности;
|ВидМатериальногоРесурса = Регистр.РасчетыСПокупателями.ВидМатериальногоРесурса;
|Номенклатура = Регистр.РасчетыСПокупателями.Номенклатура;
|ДокументПоступления = Регистр.РасчетыСПокупателями.ДокументПоступления;
|Количество = Регистр.РасчетыСПокупателями.Количество;
|Стоимость = Регистр.РасчетыСПокупателями.Стоимость;
|СтоимостьОплаченная = Регистр.РасчетыСПокупателями.СтоимостьОплаченная;
|ОблагаетсяНДС = Регистр.РасчетыСПокупателями.СтавкаНДС;
|Функция КоличествоНачОст = " + ВидОстатка + "(Количество);
|Функция СтоимостьНачОст = " + ВидОстатка + "(Стоимость);
|Функция СтоимостьОплаченнаяНачОст = " + ВидОстатка + "(СтоимостьОплаченная);
|Группировка ВидДеятельности;
|Группировка ВидМатериальногоРесурса;
|Группировка Номенклатура без Групп;
|Группировка ДокументПоступления;
|Группировка ОблагаетсяНДС;
|"//}}ЗАПРОС
;

//// Если ошибка в запросе, то выход из процедуры
Если Запрос.Выполнить(ТекстЗапроса) = 1 Тогда
	
	РеалЗапрос = СоздатьОбъект("ТаблицаЗначений");
	Запрос.Выгрузить(РеалЗапрос);		
	
	РеалЗапрос.НоваяКолонка("Индекс");		
	РеалЗапрос.ВыбратьСтроки();
	Пока РеалЗапрос.ПолучитьСтроку() = 1 Цикл
		РеалЗапрос.Индекс = Строка(РеалЗапрос.ДокументПоступления) + Строка(РеалЗапрос.ВидДеятельности) + Строка(РеалЗапрос.ВидМатериальногоРесурса) + Строка(РеалЗапрос.Номенклатура) + Строка(РеалЗапрос.Номенклатура.ПолныйКод());
	КонецЦикла;
	РеалЗапрос.Свернуть("ВидДеятельности,ВидМатериальногоРесурса,Номенклатура,ДокументПоступления,ОблагаетсяНДС,Индекс","КоличествоНачОст,СтоимостьНачОст,СтоимостьОплаченнаяНачОст");
	РеалЗапрос.Сортировать("Индекс");

КонецЕсли;

Запрос = СоздатьОбъект("Запрос");
ТекстЗапроса = 
"//{{ЗАПРОС(ТМЦ)
|Период с ВыбНачПериода по ВыбКонПериода;
|Без итогов;
|ВидДеятельности = Регистр.Расходы.ВидДеятельности;
|ВидМатериальногоРесурса = Регистр.Расходы.ВидМатериальногоРесурса;
|Номенклатура = Регистр.Расходы.Номенклатура;
|ДокументПоступления = Регистр.Расходы.ДокументПоступления;
|Количество = Регистр.Расходы.Количество;
|Стоимость = Регистр.Расходы.Стоимость;
|СуммаНДС = Регистр.Расходы.СуммаНДС;
|ДокументОплаты = Регистр.Расходы.ДокументОплаты;
|ОблагаетсяНДС = Регистр.Расходы.ОблагаетсяНДС;
|КоличествоОплаченное = Регистр.Расходы.КоличествоОплаченное;
|СтоимостьОплаченная = Регистр.Расходы.СтоимостьОплаченная;
|СуммаНДСОплаченная = Регистр.Расходы.СуммаНДСОплаченная;
|Функция КоличествоНачОст = " + ВидОстатка + "(Количество);
|Функция СтоимостьНачОст = " + ВидОстатка + "(Стоимость);
|Функция СуммаНДСНачОст = " + ВидОстатка + "(СуммаНДС);
|Функция КоличествоОплаченноеНачОст = " + ВидОстатка + "(КоличествоОплаченное);
|Функция СтоимостьОплаченнаяНачОст = " + ВидОстатка + "(СтоимостьОплаченная);
|Функция СуммаНДСОплаченнаяНачОст = " + ВидОстатка + "(СуммаНДСОплаченная);
|Группировка ВидДеятельности;
|Группировка ВидМатериальногоРесурса;
|Группировка Номенклатура без Групп;
|Группировка ДокументПоступления;
|Группировка ДокументОплаты;
|Группировка ОблагаетсяНДС;
|"//}}ЗАПРОС
;
// Если ошибка в запросе, то выход из процедуры
Если Запрос.Выполнить(ТекстЗапроса) = 1 Тогда
	ТМЦЗапрос = СоздатьОбъект("ТаблицаЗначений");
	Запрос.Выгрузить(ТМЦЗапрос);		
	
	ТМЦЗапрос.НоваяКолонка("Индекс");		
	ТМЦЗапрос.ВыбратьСтроки();
	Пока ТМЦЗапрос.ПолучитьСтроку() = 1 Цикл
		ТМЦЗапрос.Индекс = Строка(ТМЦЗапрос.ДокументПоступления) + Строка(ТМЦЗапрос.ВидДеятельности) + Строка(ТМЦЗапрос.ВидМатериальногоРесурса) + Строка(ТМЦЗапрос.Номенклатура) + Строка(ТМЦЗапрос.Номенклатура.ПолныйКод());
	КонецЦикла;
	ТМЦЗапрос.Свернуть("ВидДеятельности,ВидМатериальногоРесурса,Номенклатура,ДокументПоступления,ДокументОплаты,ОблагаетсяНДС,Индекс","КоличествоНачОст,СтоимостьНачОст,СуммаНДСНачОст,КоличествоОплаченноеНачОст,СтоимостьОплаченнаяНачОст,СуммаНДСОплаченнаяНачОст");
	ТМЦЗапрос.Сортировать("Индекс");

КонецЕсли;


// Основной запрос к регистрам
Запрос = СоздатьОбъект("Запрос");
ТекстЗапроса = 
"//{{ЗАПРОС(Поставки)
|Период с ВыбНачПериода по ВыбКонПериода;
|Без итогов;
|ВидДеятельности = Регистр.РасчетыСПоставщиками.ВидДеятельности;
|ВидМатериальногоРесурса = Регистр.РасчетыСПоставщиками.ВидМатериальногоРесурса;
|Номенклатура = Регистр.РасчетыСПоставщиками.Номенклатура;
|ДокументПоступления = Регистр.РасчетыСПоставщиками.РасчДокумент;
|Количество = Регистр.РасчетыСПоставщиками.Количество;
|Стоимость = Регистр.РасчетыСПоставщиками.Сумма;
|СуммаНДС = Регистр.РасчетыСПоставщиками.СуммаНДС;
|ДокументОплаты = Регистр.РасчетыСПоставщиками.ДокументОплаты;
|ОблагаетсяНДС = Регистр.РасчетыСПоставщиками.ОблагаетсяНДС;
|Функция КоличествоНачОст = " + ВидОстатка + "(Количество);
|Функция СтоимостьНачОст = " + ВидОстатка + "(Стоимость);
|Функция СуммаНДСНачОст = " + ВидОстатка + "(СуммаНДС);
|Группировка ВидДеятельности;
|Группировка ВидМатериальногоРесурса;
|Группировка Номенклатура без Групп;
|Группировка ДокументПоступления;
|Группировка ДокументОплаты;
|"//}}ЗАПРОС
;

// Если ошибка в запросе, то выход из процедуры
Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
	Возврат 0;
КонецЕсли;

//выбираем все задолженности перед поставщиками
НомерСтроки = 1;
Пока Запрос.Группировка() = 1 Цикл
	Если ПустоеЗначение(Запрос.Номенклатура) = 1 Тогда
		Продолжить;
	КонецЕсли;
	
	Попытка
		ДокументПоступления = Запрос.ДокументПоступления.Договор;
	Исключение             
		ДокументПоступления = "";
	КонецПопытки;
	
	Попытка
		Поставщик = Запрос.ДокументПоступления.Контрагент;
	Исключение             
		Поставщик = "";
	КонецПопытки;
	
	Если (Запрос.ВидМатериальногоРесурса = Перечисление.ВидыМатериальныхРесурсов.Услуга)
		ИЛИ (Запрос.ВидМатериальногоРесурса = Перечисление.ВидыМатериальныхРесурсов.Прочее)
		ИЛИ (Запрос.ВидМатериальногоРесурса = "") Тогда
		ВидМатериальногоРесурса = Перечисление.ВидыМатериальныхРесурсов.Материал;
	Иначе
		ВидМатериальногоРесурса = Запрос.ВидМатериальногоРесурса;
	КонецЕсли;
	
	НоменклатурнаяГруппа = ?(ПустоеЗначение(Запрос.ВидДеятельности) = 1, Параметры.ОсновнаяНоменклатурнаяГруппа, СокрЛП(Запрос.ВидДеятельности.Наименование));
	Параметры.ПараметрыАлгоритмов.Установить("ВидДеятельсности", Запрос.ВидДеятельности);
	
	Параметры.ТаблицаОстатковМПЗ.НоваяСтрока();
	Параметры.ТаблицаОстатковМПЗ.Ключ						= НомерСтроки;	
	Параметры.ТаблицаОстатковМПЗ.НомерСтрокиТЧ				= НомерСтроки;
	НомерСтроки = НомерСтроки + 1;
	Параметры.ТаблицаОстатковМПЗ.Номенклатура 				= Запрос.Номенклатура; 
	Параметры.ТаблицаОстатковМПЗ.НоменклатурнаяГруппа		= НоменклатурнаяГруппа; 
	Параметры.ТаблицаОстатковМПЗ.ХарактерДеятельности		= ОпределитьХарактерДеятельности();	
	Параметры.ТаблицаОстатковМПЗ.Партия						= ДокументПоступления;
	Параметры.ТаблицаОстатковМПЗ.ПартияСинхронизации		= Запрос.ДокументПоступления;
	Параметры.ТаблицаОстатковМПЗ.Поставщик					= Поставщик;
	Параметры.ТаблицаОстатковМПЗ.ДоговорПоставщика			= ДокументПоступления;
	Параметры.ТаблицаОстатковМПЗ.ВидМПЗ						= ВидМатериальногоРесурса;
	Если Запрос.СуммаНДСНачОст &lt;&gt; 0 Тогда
		Параметры.ТаблицаОстатковМПЗ.НДСВключенВСтоимость		=?(Запрос.ОблагаетсяНДС = 0, 1, 0);
	Иначе
		Параметры.ТаблицаОстатковМПЗ.НДСВключенВСтоимость		= 0;
	КонецЕсли;
	Параметры.ТаблицаОстатковМПЗ.Количество 				= Запрос.КоличествоНачОст; 
	Если Параметры.ТаблицаОстатковМПЗ.НДСВключенВСтоимость = 0 Тогда
		Параметры.ТаблицаОстатковМПЗ.Сумма						= Запрос.СтоимостьНачОст - Запрос.СуммаНДСНачОст;
	Иначе
		Параметры.ТаблицаОстатковМПЗ.Сумма						= Запрос.СтоимостьНачОст;
	КонецЕсли;	
	Параметры.ТаблицаОстатковМПЗ.НДС	 					= Запрос.СуммаНДСНачОст;	
	Параметры.ТаблицаОстатковМПЗ.Оплачен					= 0;
	Параметры.ТаблицаОстатковМПЗ.РеквизитыДокументаОплаты	= "";
	Параметры.ТаблицаОстатковМПЗ.СтатусыОплатыРасходовУСН = "НеОплачено";		
	Параметры.ТаблицаОстатковМПЗ.Индекс = Строка(Параметры.ТаблицаОстатковМПЗ.ПартияСинхронизации) + Строка(Параметры.ТаблицаОстатковМПЗ.ВидДеятельности) + Строка(Параметры.ТаблицаОстатковМПЗ.ВидМПЗ) + Строка(Параметры.ТаблицаОстатковМПЗ.Номенклатура) + Строка(Параметры.ТаблицаОстатковМПЗ.Номенклатура.ПолныйКод());
	
	//Корректировки
	Стр =  0;
	Если РеалЗапрос.НайтиЗначение(Параметры.ТаблицаОстатковМПЗ.Индекс, Стр, "Индекс") = 1 Тогда
		РеалЗапрос.ПолучитьСтрокуПоНомеру(Стр);
		
		КоличествоНеОплаченное = РеалЗапрос.КоличествоНачОст - РеалЗапрос.СтоимостьОплаченнаяНачОст / РеалЗапрос.СтоимостьНачОст * РеалЗапрос.КоличествоНачОст;
		СтоимостьНеОплаченная =  РеалЗапрос.СтоимостьНачОст - РеалЗапрос.СтоимостьОплаченнаяНачОст;
		Если Параметры.ТаблицаОстатковМПЗ.НДСВключенВСтоимость = 1 Тогда
			СтоимостьБезНалогов = Параметры.ТаблицаОстатковМПЗ.Сумма - Параметры.ТаблицаОстатковМПЗ.НДС;
		Иначе
			СтоимостьБезНалогов = Параметры.ТаблицаОстатковМПЗ.Сумма;
		КонецЕсли;
		
		СуммаНДС = Параметры.ТаблицаОстатковМПЗ.НДС * СтоимостьНеОплаченная / СтоимостьБезНалогов;
		
		Параметры.ТаблицаОстатковМПЗ.Количество = Параметры.ТаблицаОстатковМПЗ.Количество - КоличествоНеОплаченное; 
		Параметры.ТаблицаОстатковМПЗ.Сумма		= Параметры.ТаблицаОстатковМПЗ.Сумма - СтоимостьНеОплаченная;
		Параметры.ТаблицаОстатковМПЗ.НДС	 	= Параметры.ТаблицаОстатковМПЗ.НДС - СуммаНДС;	
		
	КонецЕсли;
	
	////избавляемся от расходов которые обрабатываются в расчетах по реализованным покупателям ТМЦ
	Стр =  0;
	Если ТаблицаМПЗРеализованных.НайтиЗначение(Параметры.ТаблицаОстатковМПЗ.Индекс, Стр, "Индекс") = 1 Тогда
		ТаблицаМПЗРеализованных.ПолучитьСтрокуПоНомеру(Стр);
		Параметры.ТаблицаОстатковМПЗ.Количество = Параметры.ТаблицаОстатковМПЗ.Количество - ТаблицаМПЗРеализованных.Количество; 
		Параметры.ТаблицаОстатковМПЗ.Сумма		= Параметры.ТаблицаОстатковМПЗ.Сумма - ТаблицаМПЗРеализованных.Сумма;
		Параметры.ТаблицаОстатковМПЗ.НДС	 	= Параметры.ТаблицаОстатковМПЗ.НДС - ТаблицаМПЗРеализованных.НДС;	
	КонецЕсли;
	
	Стр =  0;
	Если ТМЦЗапрос.НайтиЗначение(Параметры.ТаблицаОстатковМПЗ.Индекс, Стр, "Индекс") = 1 Тогда				
		ТМЦЗапрос.ПолучитьСтрокуПоНомеру(Стр);				
		Параметры.ТаблицаОстатковМПЗ.Количество = Параметры.ТаблицаОстатковМПЗ.Количество - (ТМЦЗапрос.КоличествоНачОст - ТМЦЗапрос.КоличествоОплаченноеНачОст); 
		Параметры.ТаблицаОстатковМПЗ.Сумма		= Параметры.ТаблицаОстатковМПЗ.Сумма - (ТМЦЗапрос.СтоимостьНачОст - ТМЦЗапрос.СтоимостьОплаченнаяНачОст); 
		Параметры.ТаблицаОстатковМПЗ.НДС	 	= Параметры.ТаблицаОстатковМПЗ.НДС - (ТМЦЗапрос.СуммаНДСНачОст - ТМЦЗапрос.СуммаНДСОплаченнаяНачОст); 
	КонецЕсли;
	
	Стр =  0;
	Если ОбЗапрос.НайтиЗначение(Параметры.ТаблицаОстатковМПЗ.Индекс, Стр, "Индекс") = 1 Тогда				
		ОбЗапрос.ПолучитьСтрокуПоНомеру(Стр);				
		Параметры.ТаблицаОстатковМПЗ.Количество = Параметры.ТаблицаОстатковМПЗ.Количество - (ОбЗапрос.КоличествоНачОст - ОбЗапрос.КоличествоОплаченноеНачОст); 
		Параметры.ТаблицаОстатковМПЗ.Сумма		= Параметры.ТаблицаОстатковМПЗ.Сумма - (ОбЗапрос.СуммаНачОст - ОбЗапрос.СуммаОплаченнаяНачОст); 
		Параметры.ТаблицаОстатковМПЗ.НДС	 	= Параметры.ТаблицаОстатковМПЗ.НДС - (ОбЗапрос.СуммаНДСНачОст - ОбЗапрос.СуммаНДСОплаченнаяНачОст); 
	КонецЕсли;
	
КонецЦикла;

//избавляемся от пустых строк
ТаблицаПустыхСтрок = СоздатьОбъект("ТаблицаЗначений");
ТаблицаПустыхСтрок.НоваяКолонка("НомерПустойСтроки", "Число");
Параметры.ТаблицаОстатковМПЗ.ВыбратьСтроки();
Пока Параметры.ТаблицаОстатковМПЗ.ПолучитьСтроку() = 1 Цикл
	Если ((Параметры.ТаблицаОстатковМПЗ.Количество = 0)
		И (Параметры.ТаблицаОстатковМПЗ.Сумма = 0))
		ИЛИ ((Параметры.ТаблицаОстатковМПЗ.Количество &lt; 0)
		И (Параметры.ТаблицаОстатковМПЗ.Сумма &lt; 0)) Тогда
		ТаблицаПустыхСтрок.НоваяСтрока();
		ТаблицаПустыхСтрок.НомерПустойСтроки = Параметры.ТаблицаОстатковМПЗ.НомерСтроки;
	КонецЕсли;
КонецЦикла;

ТаблицаПустыхСтрок.Сортировать("-НомерПустойСтроки");
ТаблицаПустыхСтрок.ВыбратьСтроки();
Пока ТаблицаПустыхСтрок.ПолучитьСтроку() = 1 Цикл
	Параметры.ТаблицаОстатковМПЗ.УдалитьСтроку(ТаблицаПустыхСтрок.НомерПустойСтроки);
КонецЦикла;


//*******************************
ВходящиеДанные = СоздатьОбъект("СписокЗначений");

Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	ВходящиеДанные.Установить("Дата", Параметры.ДатаВводаОстатков - 1);
Иначе
	Если Параметры.ПараметрыАлгоритмов.Получить("УСН") = 1 Тогда
		ВходящиеДанные.Установить("Дата", Параметры.ДатаКонцаПериодаВыгрузки);
	Иначе
		ВходящиеДанные.Установить("Дата", Параметры.ДатаВводаОстатков - 1);	
	КонецЕсли;	
КонецЕсли;

ВходящиеДанные.Установить("РазделУчета", Параметры.РазделУчета);
Если Параметры.ПараметрыАлгоритмов.Получить("УСН") = 1 Тогда
	
	ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
	ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
	ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
	
Иначе
	
	ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 0);
	ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
	ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 0);
КонецЕсли;

ВходящиеДанные.Установить("ВходящиеОстатки", Параметры.ТаблицаОстатковМПЗ);
ВходящиеДанные.Установить("ВходящиеОстаткиОборотов", Параметры.ТаблицаОстатковМПЗОборотов);
Параметры.ПараметрыАлгоритмов.Установить("ВидПрочихРасходов", "МатериальныеРасходы");
ВыгрузитьПоПравилу(,,ВходящиеДанные,, "ВводНачальныхОстатков");




</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВыгрузитьОстаткиМПЗОборотов" ИспользуетсяПриЗагрузке="false">
			<Текст>//Выгружаем остатки материалов, списанных в производство, но не оплаченных поставщику
Если Параметры.ТаблицаОстатковМПЗ.КоличествоСтрок() = 0 Тогда
	Возврат 0;
КонецЕсли;

Параметры.ТаблицаОстатковМПЗОборотов.УдалитьСтроки();

ТаблицаПроверенныхИндексов = СоздатьОбъект("ТаблицаЗначений");
ТаблицаПроверенныхИндексов.НоваяКолонка("НомерСтрокиТЗапрос");
ТаблицаПроверенныхИндексов.НоваяКолонка("Индекс");


Докум = СоздатьОбъект("Документ");
Докум.ВыбратьДокументы();
Докум.ПолучитьДокумент();

ВыбНачПериода = Параметры.ДатаВводаОстатков;
ВыбКонПериода = Параметры.ДатаКонцаПериодаВыгрузки;
Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	ВидОстатка = "НачОст";
Иначе
	ВидОстатка = "КонОст";
КонецЕсли;
		
ВыбНачПериода = ?(ПолучитьПозициюТА() &lt; Докум.ТекущийДокумент().ПолучитьПозицию(), ПолучитьПозициюТА(), Докум.ТекущийДокумент().ПолучитьПозицию());
ВыбКонПериода = ?(ПолучитьДатуТА() &lt;= ВыбКонПериода, ПолучитьПозициюТА(), ВыбКонПериода);

Запрос = СоздатьОбъект("Запрос");
ТекстЗапроса = 
"//{{ЗАПРОС(Сформировать)
|Период с ВыбНачПериода по ВыбКонПериода;
|Без итогов;
|ПолученныйРесурс = Регистр.Обороты.ПолученныйРесурс;
|Номенклатура = Регистр.Обороты.ИзрасходованныйРесурс;
|ВидМПЗ = Регистр.Обороты.ВидИзрасходованногоРесурса;
|Партия = Регистр.Обороты.ДокументПоступленияИзрасходовано;
|Количество = Регистр.Обороты.Количество;
|Сумма = Регистр.Обороты.Стоимость;
|СуммаНДС = Регистр.Обороты.СуммаНДС;
|ПартияПоступившегоРесурса = Регистр.Обороты.ДокументПоступленияПолучено;
|ОблагаетсяНДС = Регистр.Обороты.ОблагаетсяНДС;
|КоличествоОплаченное = Регистр.Обороты.КоличествоОплаченное;
|СуммаОплаченная = Регистр.Обороты.СтоимостьОплаченная;
|СуммаНДСОплаченная = Регистр.Обороты.СуммаНДСОплаченная;
|ВидПолученногоРесурса = Регистр.Обороты.ВидПолученногоРесурса;
|ВидДеятельности = Регистр.Обороты.ВидДеятельности;
|Функция КоличествоНачОст = Сумма(Количество);
|Функция СуммаНачОст = Сумма(Сумма);
|Функция СуммаНДСНачОст = Сумма(СуммаНДС);
|Функция КоличествоОплаченноеНачОст = Сумма(КоличествоОплаченное);
|Функция СуммаОплаченнаяНачОст = Сумма(СуммаОплаченная);
|Функция СуммаНДСОплаченнаяНачОст = Сумма(СуммаНДСОплаченная);
|Группировка ВидДеятельности;
|Группировка ПолученныйРесурс без групп;
|Группировка ВидПолученногоРесурса;
|Группировка ПартияПоступившегоРесурса;
|Группировка ВидМПЗ;
|Группировка Номенклатура без групп;
|Группировка Партия;
|Группировка ОблагаетсяНДС;
|"//}}ЗАПРОС
;
// Если ошибка в запросе, то выход из процедуры
Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
	Возврат 0;
Иначе
	ТЗапрос = СоздатьОбъект("ТаблицаЗначений");
	Запрос.Выгрузить(ТЗапрос);		
	
	ТЗапрос.НоваяКолонка("Индекс");		
	ТЗапрос.ВыбратьСтроки();
	Пока ТЗапрос.ПолучитьСтроку() = 1 Цикл
		ТЗапрос.Индекс = Строка(ТЗапрос.ПартияПоступившегоРесурса) + Строка(ТЗапрос.ВидДеятельности) + Строка(ТЗапрос.ВидПолученногоРесурса) + Строка(ТЗапрос.ПолученныйРесурс) + ?(ТЗапрос.ПолученныйРесурс.Вид() = "","", Строка(ТЗапрос.ПолученныйРесурс.ПолныйКод()));
	КонецЦикла;
	ТЗапрос.Свернуть("ВидДеятельности,ПолученныйРесурс,ВидПолученногоРесурса,Номенклатура,ВидМПЗ,ПартияПоступившегоРесурса,Партия,ОблагаетсяНДС,Индекс","КоличествоНачОст,СуммаНачОст,СуммаНДСНачОст,КоличествоОплаченноеНачОст,СуммаОплаченнаяНачОст,СуммаНДСОплаченнаяНачОст");
	ТЗапрос.Сортировать("Индекс");
	
	Параметры.ТаблицаОстатковМПЗ.Сортировать("Индекс");
	
	
	ВремРегистры = СоздатьОбъект("Регистры");
	ВремРегистры.Актуальность(1);
	Расходы = ВремРегистры.Расходы;
	Отгрузка = ВремРегистры.РасчетыСПокупателями;
	Расходы.ВременныйРасчет(1);
	
	ВремРегистры.РассчитатьРегистрыПо(ВыбКонПериода);
	
	Параметры.ТаблицаОстатковМПЗ.ВыбратьСтроки();
	Пока Параметры.ТаблицаОстатковМПЗ.ПолучитьСтроку() = 1 Цикл
		Если Параметры.ТаблицаОстатковМПЗ.Оплачен = 1 Тогда
			Продолжить;
		КонецЕсли;
		НомерСтроки = 1;
		
		//восстановление индекса
		ТаблицаПроверенныхИндексов.ВыбратьСтроки();
		Пока ТаблицаПроверенныхИндексов.ПолучитьСтроку() = 1 Цикл
			ТЗапрос.УстановитьЗначение(ТаблицаПроверенныхИндексов.НомерСтрокиТЗапрос,"Индекс",ТаблицаПроверенныхИндексов.Индекс);			    
		КонецЦикла;
		ТаблицаПроверенныхИндексов.УдалитьСтроки();
		
		Стр =  0;
		Пока ТЗапрос.НайтиЗначение(Параметры.ТаблицаОстатковМПЗ.Индекс, Стр, "Индекс") = 1 Цикл
			ТЗапрос.ПолучитьСтрокуПоНомеру(Стр);
			
			//удаление индекса
			ТаблицаПроверенныхИндексов.НомерСтрокиТЗапрос = ТЗапрос.НомерСтроки;
			ТаблицаПроверенныхИндексов.Индекс = ТЗапрос.Индекс;
			ТЗапрос.Индекс = "";
			
			Если ТЗапрос.КоличествоНачОст - ТЗапрос.КоличествоОплаченноеНачОст &lt;&gt; 0 Тогда
				
				Если ПустоеЗначение(ТЗапрос.Партия) = 1 Тогда
					ДокументПоступления = "";
				ИначеЕсли Метаданные.Документ(ТЗапрос.Партия.Вид()).РеквизитШапки("Договор").Выбран() = 1 Тогда
					ДокументПоступления = ТЗапрос.Партия.Договор;
				Иначе
					ДокументПоступления = "";
				КонецЕсли; 
				
				ВсегоСтоимостьРасход = Расходы.СводныйОстаток(,,, ТЗапрос.ПолученныйРесурс, ТЗапрос.ПартияПоступившегоРесурса, "Стоимость");
				ВсегоСтоимостьОтгрузка= Отгрузка.СводныйОстаток(,,,, ТЗапрос.ПолученныйРесурс,, ТЗапрос.ПартияПоступившегоРесурса, "Стоимость");
				ВсегоСтоимостьРасходОпл = Расходы.СводныйОстаток(,,, ТЗапрос.ПолученныйРесурс, ТЗапрос.ПартияПоступившегоРесурса, "СтоимостьОплаченная");
				ВсегоСтоимостьОтгрузкаОпл= Отгрузка.СводныйОстаток(,,,, ТЗапрос.ПолученныйРесурс,, ТЗапрос.ПартияПоступившегоРесурса, "СтоимостьОплаченная");
				ВсегоСтоимость = ВсегоСтоимостьРасход + ВсегоСтоимостьОтгрузка;
				ВсегоСтоимостьОпл = ВсегоСтоимостьРасходОпл + ВсегоСтоимостьОтгрузкаОпл;
				ИтогоСтоимость = (ВсегоСтоимость - ВсегоСтоимостьОпл);
				Коэффициент = Параметры.ТаблицаОстатковМПЗ.Сумма/?(ИтогоСтоимость = 0, 1, ИтогоСтоимость);
				
				Параметры.ТаблицаОстатковМПЗОборотов.НоваяСтрока();
				Параметры.ТаблицаОстатковМПЗОборотов.Ключ = Параметры.ТаблицаОстатковМПЗ.Ключ;
				Параметры.ТаблицаОстатковМПЗОборотов.НомерСтрокиТЧ = НомерСтроки;
				НомерСтроки = НомерСтроки + 1;													
				Параметры.ТаблицаОстатковМПЗОборотов.Номенклатура = ТЗапрос.Номенклатура;
				Параметры.ТаблицаОстатковМПЗОборотов.ВидМПЗ = ТЗапрос.ВидМПЗ;
				Параметры.ТаблицаОстатковМПЗОборотов.Партия = ДокументПоступления;
				Параметры.ТаблицаОстатковМПЗОборотов.Количество = (ТЗапрос.КоличествоНачОст - ТЗапрос.КоличествоОплаченноеНачОст) * Коэффициент;
				Параметры.ТаблицаОстатковМПЗОборотов.Сумма = (ТЗапрос.СуммаНачОст - ТЗапрос.СуммаОплаченнаяНачОст) * Коэффициент;
				Параметры.ТаблицаОстатковМПЗОборотов.НДС = (ТЗапрос.СуммаНДСНачОст - ТЗапрос.СуммаНДСОплаченнаяНачОст) * Коэффициент;
				Если ТЗапрос.СуммаНДСНачОст &lt;&gt; 0 Тогда
					Параметры.ТаблицаОстатковМПЗОборотов.НДСВключенВСтоимость = ?(ТЗапрос.ОблагаетсяНДС = 0, 1, 0);
				Иначе
					Параметры.ТаблицаОстатковМПЗОборотов.НДСВключенВСтоимость = 0;
				КонецЕсли;					
				Если Параметры.РазделУчета =  "ПрочиеРасходыНалоговогоУчетаУСНиИП" Тогда
					Параметры.ТаблицаОстатковМПЗ.Оплачен = 0;						
				КонецЕсли;
			КонецЕсли;							
			Стр =  0;
		КонецЦикла;							
	КонецЦикла;
КонецЕсли;

Если Параметры.ПараметрыАлгоритмов.Получить("УСН") = 1 Тогда
	КлючиДляУдаления = СоздатьОбъект("ТаблицаЗначений");
	КлючиДляУдаления.НоваяКолонка("Ключ", "Число");
	
	Если Параметры.РазделУчета =  "ПрочиеРасходыНалоговогоУчетаУСНиИП" Тогда
		ТаблицаПродукции = СоздатьОбъект("ТаблицаЗначений");
		Параметры.ТаблицаОстатковМПЗ.Выгрузить(ТаблицаПродукции);
		
		Параметры.ТаблицаОстатковМПЗ.ВыбратьСтроки();
		Пока Параметры.ТаблицаОстатковМПЗ.ПолучитьСтроку() = 1 Цикл
			КлючиДляУдаления.НоваяСтрока();
			Если (Параметры.ТаблицаОстатковМПЗ.ВидМПЗ = Перечисление.ВидыМатериальныхРесурсов.Продукция)
				ИЛИ (Параметры.ТаблицаОстатковМПЗ.ВидМПЗ = Перечисление.ВидыМатериальныхРесурсов.Полуфабрикат) Тогда
				КлючиДляУдаления.Ключ = Параметры.ТаблицаОстатковМПЗ.Ключ;
			КонецЕсли;
		КонецЦикла;
		
		ТаблицаПродукции.ВыбратьСтроки();
		Пока ТаблицаПродукции.ПолучитьСтроку() = 1 Цикл			
			Параметры.ТаблицаОстатковМПЗОборотов.ВыбратьСтроки();
			Пока Параметры.ТаблицаОстатковМПЗОборотов.ПолучитьСтроку() = 1 Цикл
				Если Параметры.ТаблицаОстатковМПЗОборотов.Ключ = ТаблицаПродукции.Ключ Тогда
					Параметры.ТаблицаОстатковМПЗ.НоваяСтрока();
					Параметры.ТаблицаОстатковМПЗ.ХарактерДеятельности 		= ТаблицаПродукции.ХарактерДеятельности;
					Параметры.ТаблицаОстатковМПЗ.НоменклатурнаяГруппа 		= ТаблицаПродукции.НоменклатурнаяГруппа;		
					Параметры.ТаблицаОстатковМПЗ.ВидДеятельности			= ТаблицаПродукции.ВидДеятельности;	
					Параметры.ТаблицаОстатковМПЗ.ПартияСинхронизации		= ТаблицаПродукции.ПартияСинхронизации;
					Параметры.ТаблицаОстатковМПЗ.Ключ						= Параметры.ТаблицаОстатковМПЗ.КоличествоСтрок();			
					Параметры.ТаблицаОстатковМПЗ.СчетУчета					= Параметры.ТаблицаОстатковМПЗ.СчетУчета;
					Параметры.ТаблицаОстатковМПЗ.Номенклатура 				= Параметры.ТаблицаОстатковМПЗОборотов.Номенклатура; 
					Параметры.ТаблицаОстатковМПЗ.ВидМПЗ						= Параметры.ТаблицаОстатковМПЗОборотов.ВидМПЗ;
					Параметры.ТаблицаОстатковМПЗ.Партия						= Параметры.ТаблицаОстатковМПЗОборотов.Партия;
					Параметры.ТаблицаОстатковМПЗ.НДСВключенВСтоимость		= Параметры.ТаблицаОстатковМПЗОборотов.НДСВключенВСтоимость;
					Параметры.ТаблицаОстатковМПЗ.Количество 				= Параметры.ТаблицаОстатковМПЗОборотов.Количество; 
					Параметры.ТаблицаОстатковМПЗ.Сумма						= Параметры.ТаблицаОстатковМПЗОборотов.Сумма; 
					Параметры.ТаблицаОстатковМПЗ.Оплачен					= 0;
					Параметры.ТаблицаОстатковМПЗ.РеквизитыДокументаОплаты	= "";				
					Параметры.ТаблицаОстатковМПЗ.Покупатель					= ТаблицаПродукции.Покупатель;
					Параметры.ТаблицаОстатковМПЗ.ДоговорПокупателя			= ТаблицаПродукции.ДоговорПокупателя;
					Параметры.ТаблицаОстатковМПЗ.ДокументОтгрузки			= ТаблицаПродукции.ДокументОтгрузки;
					Параметры.ТаблицаОстатковМПЗ.Выручка					= 0;
					Параметры.ТаблицаОстатковМПЗ.НДСНачисленный				= 0;
					Параметры.ТаблицаОстатковМПЗ.Поставщик					= ТаблицаПродукции.Поставщик;
					Параметры.ТаблицаОстатковМПЗ.ДоговорПоставщика			= ТаблицаПродукции.ДоговорПоставщика;	
					Параметры.ТаблицаОстатковМПЗ.СтатусыОплатыРасходовУСН	= "НеОплачено";
				КонецЕсли;
			КонецЦикла;	
		КонецЦикла;
		
		КлючиДляУдаления.ВыбратьСтроки();
		Пока КлючиДляУдаления.ПолучитьСтроку() = 1 Цикл
			Стр = 0;
			Если Параметры.ТаблицаОстатковМПЗ.НайтиЗначение(КлючиДляУдаления.Ключ, Стр, "Ключ") = 1 Тогда
				Параметры.ТаблицаОстатковМПЗ.УдалитьСтроку(Стр);
			КонецЕсли;			
		КонецЦикла;		
	КонецЕсли;
КонецЕсли;


</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВыгрузитьОстаткиМПЗОтгруженных" ИспользуетсяПриЗагрузке="false">
			<Текст>ВыбВидМатериальногоРесурса = Параметры.ПараметрыАлгоритмов.Получить("ВидМПЗ");
СчетУчета = Параметры.ПараметрыАлгоритмов.Получить("СчетУчета");
Параметры.ТаблицаОстатковМПЗ.УдалитьСтроки();
Если ПустоеЗначение(ВыбВидМатериальногоРесурса) = 1 Тогда
	Возврат 0;
КонецЕсли;

Если Параметры.ПараметрыАлгоритмов.Получить("УСН") = 1 Тогда
	ВыбНачПериода = Параметры.ДатаКонцаПериодаВыгрузки;
	ВыбКонПериода = Параметры.ДатаКонцаПериодаВыгрузки;
	Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
		ВидОстатка = "НачОст";
	Иначе
		ВидОстатка = "КонОст";
	КонецЕсли;
Иначе
	ВыбНачПериода = Параметры.ДатаВводаОстатков;
	ВыбКонПериода = Параметры.ДатаВводаОстатков;
	ВидОстатка = "НачОст";
КонецЕсли;

Запрос = СоздатьОбъект("Запрос");
ТекстЗапроса = 
"//{{ЗАПРОС(Сформировать)
|Период с ВыбНачПериода по ВыбКонПериода;
|Без итогов;
|ВидДеятельности = Регистр.РасчетыСПокупателями.ВидДеятельности;
|Номенклатура = Регистр.РасчетыСПокупателями.Номенклатура;
|ВидМПЗ = Регистр.РасчетыСПокупателями.ВидМатериальногоРесурса;
|Покупатель = Регистр.РасчетыСПокупателями.Договор.Владелец;
|ДоговорПокупателя = Регистр.РасчетыСПокупателями.Договор;
|ДокументОтгрузки = Регистр.РасчетыСПокупателями.РасчДокумент;
|ДокументОплаты = Регистр.РасчетыСПокупателями.ДокументОплаты;
|ДокументПоступления = Регистр.РасчетыСПокупателями.ДокументПоступления;
|Количество = Регистр.РасчетыСПокупателями.Количество;
|Выручка = Регистр.РасчетыСПокупателями.Сумма;
|НДСНачисленный = Регистр.РасчетыСПокупателями.СуммаНДС;
|Стоимость = Регистр.РасчетыСПокупателями.Стоимость;
|СуммаОплаченная = Регистр.РасчетыСПокупателями.СтоимостьОплаченная;
|Функция КоличествоНачОст = " + ВидОстатка + "(Количество);
|Функция ВыручкаНачОст = " + ВидОстатка + "(Выручка);
|Функция НДСНачисленныйНачОст = " + ВидОстатка + "(НДСНачисленный);
|Функция СтоимостьНачОст = " + ВидОстатка + "(Стоимость);
|Функция СтоимостьОплаченнаяНачОст = " + ВидОстатка + "(СуммаОплаченная);
|Группировка ВидДеятельности;
|Группировка ВидМПЗ;
|Группировка Номенклатура без групп;
|Группировка ДокументПоступления;
|Группировка Покупатель без групп;
|Группировка ДоговорПокупателя без групп;
|Группировка ДокументОтгрузки;
|Группировка ДокументОплаты;";
Если ВыбВидМатериальногоРесурса &lt;&gt; Перечисление.ВидыМатериальныхРесурсов.Прочее Тогда
	ТекстЗапроса = ТекстЗапроса + "
	|Условие(ВидМПЗ = ВыбВидМатериальногоРесурса);
	|"//}}ЗАПРОС
	;
Иначе
	ТекстЗапроса = ТекстЗапроса + "
	|Условие((ВидМПЗ = Перечисление.ВидыМатериальныхРесурсов.Материал) ИЛИ (ВидМПЗ = Перечисление.ВидыМатериальныхРесурсов.ВспомогательныйМатериал) ИЛИ (ВидМПЗ = Перечисление.ВидыМатериальныхРесурсов.Услуга) ИЛИ (ВидМПЗ = Перечисление.ВидыМатериальныхРесурсов.ОсновноеСредство) ИЛИ (ВидМПЗ = Перечисление.ВидыМатериальныхРесурсов.Прочее));
	|"//}}ЗАПРОС
	;
КонецЕсли;

// Если ошибка в запросе, то выход из процедуры
Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
	Возврат 0;
КонецЕсли;

НомерСтроки = 1;
Пока Запрос.Группировка() = 1 Цикл
	Если Запрос.Номенклатура.Вид() &lt;&gt; "Номенклатура" Тогда
		Продолжить;
	КонецЕсли;
	
	Попытка
		Поставщик = Запрос.ДокументПоступления.Контрагент;
		ДоговорПоставщика = Запрос.ДокументПоступления.Договор;
	Исключение             
		Поставщик = "";
		ДоговорПоставщика = "";
	КонецПопытки;
	
	Попытка
		ДокументПоступления = Запрос.ДокументПоступления.Договор;
	Исключение             
		ДокументПоступления = "";
	КонецПопытки;
	
	Если Запрос.Выручка &lt;&gt; 0 Тогда
		
		НоменклатурнаяГруппа = ?(ПустоеЗначение(Запрос.ВидДеятельности) = 1, Параметры.ОсновнаяНоменклатурнаяГруппа, СокрЛП(Запрос.ВидДеятельности.Наименование));
		
		Параметры.ТаблицаОстатковМПЗ.НоваяСтрока();
		Параметры.ПараметрыАлгоритмов.Установить("ВидДеятельсности", Запрос.ВидДеятельности);		
		Параметры.ТаблицаОстатковМПЗ.ХарактерДеятельности = ОпределитьХарактерДеятельности();
		Параметры.ТаблицаОстатковМПЗ.НоменклатурнаяГруппа = НоменклатурнаяГруппа;	
		Параметры.ТаблицаОстатковМПЗ.ВидДеятельности			= Запрос.ВидДеятельности;	
		Параметры.ТаблицаОстатковМПЗ.ПартияСинхронизации		= Запрос.ДокументПоступления;
		Параметры.ТаблицаОстатковМПЗ.Ключ						= НомерСтроки;	
		Параметры.ТаблицаОстатковМПЗ.НомерСтрокиТЧ				= НомерСтроки;
		НомерСтроки = НомерСтроки + 1;
		Параметры.ТаблицаОстатковМПЗ.СчетУчета					= СчетУчета;
		Параметры.ТаблицаОстатковМПЗ.Номенклатура 				= Запрос.Номенклатура; 
		Параметры.ТаблицаОстатковМПЗ.ВидМПЗ						= Запрос.ВидМПЗ;
		Параметры.ТаблицаОстатковМПЗ.Партия						= ДокументПоступления;
		Параметры.ТаблицаОстатковМПЗ.НДСВключенВСтоимость		= 0;
		Параметры.ТаблицаОстатковМПЗ.Покупатель					= Запрос.Покупатель;
		Параметры.ТаблицаОстатковМПЗ.ДоговорПокупателя			= Запрос.ДоговорПокупателя;
		Параметры.ТаблицаОстатковМПЗ.ДокументОтгрузки			= Запрос.ДоговорПокупателя;
		Параметры.ТаблицаОстатковМПЗ.Выручка					= Запрос.Выручка;
		Параметры.ТаблицаОстатковМПЗ.НДСНачисленный				= Запрос.НДСНачисленныйНачОст;
		Параметры.ТаблицаОстатковМПЗ.Поставщик					= Поставщик;
		Параметры.ТаблицаОстатковМПЗ.ДоговорПоставщика			= ДоговорПоставщика;
		Параметры.ТаблицаОстатковМПЗ.Услуга						= ?(ВыбВидМатериальногоРесурса = Перечисление.ВидыМатериальныхРесурсов.Услуга, 1, 0);
		Параметры.ТаблицаОстатковМПЗ.Индекс = Строка(Параметры.ТаблицаОстатковМПЗ.ПартияСинхронизации) + Строка(Параметры.ТаблицаОстатковМПЗ.ВидДеятельности) + Строка(Параметры.ТаблицаОстатковМПЗ.ВидМПЗ) + Строка(Параметры.ТаблицаОстатковМПЗ.Номенклатура) + Строка(Параметры.ТаблицаОстатковМПЗ.Номенклатура.ПолныйКод());
		
		Если Запрос.СтоимостьНачОст = 0 Тогда
			КоличествоОплаченноеНачОст = 0;
		Иначе
			КоличествоОплаченноеНачОст = (Запрос.СтоимостьОплаченнаяНачОст / Запрос.СтоимостьНачОст) * Запрос.КоличествоНачОст;	
		КонецЕсли;
		Если КоличествоОплаченноеНачОст &lt;&gt; 0 Тогда
			Если Запрос.КоличествоНачОст &lt;&gt; 0 Тогда
				Если (Запрос.КоличествоНачОст - КоличествоОплаченноеНачОст &lt;&gt; 0) Тогда
					Коэфф = (Запрос.КоличествоНачОст - КоличествоОплаченноеНачОст)/Запрос.КоличествоНачОст;
					Параметры.ТаблицаОстатковМПЗ.Выручка					= Параметры.ТаблицаОстатковМПЗ.Выручка * Коэфф;
					Параметры.ТаблицаОстатковМПЗ.НДСНачисленный				= Параметры.ТаблицаОстатковМПЗ.НДСНачисленный * Коэфф;
					Параметры.ТаблицаОстатковМПЗ.Количество 				= Запрос.КоличествоНачОст - КоличествоОплаченноеНачОст; 
					Параметры.ТаблицаОстатковМПЗ.Сумма						= Запрос.СтоимостьНачОст - Запрос.СтоимостьОплаченнаяНачОст;
					Параметры.ТаблицаОстатковМПЗ.Оплачен					= 0;
					Параметры.ТаблицаОстатковМПЗ.РеквизитыДокументаОплаты	= "";
				Иначе
					Параметры.ТаблицаОстатковМПЗ.УдалитьСтроку();
					НомерСтроки = НомерСтроки - 1;
				КонецЕсли;
				
				Коэфф = КоличествоОплаченноеНачОст/Запрос.КоличествоНачОст;
				//*** оплаченная часть
				Параметры.ТаблицаОстатковМПЗ.НоваяСтрока();
				Параметры.ПараметрыАлгоритмов.Установить("ВидДеятельсности", Запрос.ВидДеятельности);		
				Параметры.ТаблицаОстатковМПЗ.ХарактерДеятельности = ОпределитьХарактерДеятельности();
				Параметры.ТаблицаОстатковМПЗ.НоменклатурнаяГруппа = НоменклатурнаяГруппа;		
				Параметры.ТаблицаОстатковМПЗ.ВидДеятельности			= Запрос.ВидДеятельности;	
				Параметры.ТаблицаОстатковМПЗ.ПартияСинхронизации		= Запрос.ДокументПоступления;
				Параметры.ТаблицаОстатковМПЗ.Ключ						= НомерСтроки;			
				Параметры.ТаблицаОстатковМПЗ.НомерСтрокиТЧ				= НомерСтроки;
				НомерСтроки = НомерСтроки + 1;
				Параметры.ТаблицаОстатковМПЗ.СчетУчета					= СчетУчета;
				Параметры.ТаблицаОстатковМПЗ.Номенклатура 				= Запрос.Номенклатура; 
				Параметры.ТаблицаОстатковМПЗ.ВидМПЗ						= Запрос.ВидМПЗ;
				Параметры.ТаблицаОстатковМПЗ.Партия						= ДокументПоступления;
				Параметры.ТаблицаОстатковМПЗ.НДСВключенВСтоимость		= 0;
				Параметры.ТаблицаОстатковМПЗ.Количество 				= КоличествоОплаченноеНачОст; 
				Параметры.ТаблицаОстатковМПЗ.Сумма						= Запрос.СтоимостьОплаченнаяНачОст;
				Параметры.ТаблицаОстатковМПЗ.Оплачен					= 1;
				Параметры.ТаблицаОстатковМПЗ.РеквизитыДокументаОплаты	= "Документ № " + Запрос.ДокументОплаты.НомерДок + " от " + Запрос.ДокументОплаты.ДатаДок;				
				Параметры.ТаблицаОстатковМПЗ.Покупатель					= Запрос.Покупатель;
				Параметры.ТаблицаОстатковМПЗ.ДоговорПокупателя			= Запрос.ДоговорПокупателя;
				Параметры.ТаблицаОстатковМПЗ.ДокументОтгрузки			= Запрос.ДоговорПокупателя;
				Параметры.ТаблицаОстатковМПЗ.Выручка					= Запрос.Выручка * Коэфф;
				Параметры.ТаблицаОстатковМПЗ.НДСНачисленный				= Запрос.НДСНачисленныйНачОст * Коэфф;
				Параметры.ТаблицаОстатковМПЗ.Поставщик					= Поставщик;
				Параметры.ТаблицаОстатковМПЗ.ДоговорПоставщика			= ДоговорПоставщика;	
				Параметры.ТаблицаОстатковМПЗ.Услуга						= ?(ВыбВидМатериальногоРесурса = Перечисление.ВидыМатериальныхРесурсов.Услуга, 1, 0);
				Параметры.ТаблицаОстатковМПЗ.Индекс = Строка(Параметры.ТаблицаОстатковМПЗ.ПартияСинхронизации) + Строка(Параметры.ТаблицаОстатковМПЗ.ВидДеятельности) + Строка(Параметры.ТаблицаОстатковМПЗ.ВидМПЗ) + Строка(Параметры.ТаблицаОстатковМПЗ.Номенклатура) + Строка(Параметры.ТаблицаОстатковМПЗ.Номенклатура.ПолныйКод());
								
				Если (Запрос.Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Услуга) //это собственная услуга
					И (ПустоеЗначение(Запрос.ДокументПоступления) = 1) Тогда
					Параметры.ТаблицаОстатковМПЗ.Оплачен					= 1;
				КонецЕсли;				
				Если ВыбВидМатериальногоРесурса = Перечисление.ВидыМатериальныхРесурсов.Прочее Тогда
					Параметры.ТаблицаОстатковМПЗ.ВидМПЗ = Перечисление.ВидыМатериальныхРесурсов.Товар;
				КонецЕсли;
				
				//
			Иначе
				Параметры.ТаблицаОстатковМПЗ.Количество 				= КоличествоОплаченноеНачОст; 
				Параметры.ТаблицаОстатковМПЗ.Сумма						= Запрос.СтоимостьОплаченнаяНачОст;
				Параметры.ТаблицаОстатковМПЗ.Оплачен					= 1;
				Параметры.ТаблицаОстатковМПЗ.РеквизитыДокументаОплаты	= "Документ № " + Запрос.ДокументОплаты.НомерДок + " от " + Запрос.ДокументОплаты.ДатаДок;	
				Если (Запрос.Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Услуга) //это собственная услуга
					И (ПустоеЗначение(Запрос.ДокументПоступления) = 1) Тогда
					Параметры.ТаблицаОстатковМПЗ.Оплачен					= 1;
				КонецЕсли;        
				Если ВыбВидМатериальногоРесурса = Перечисление.ВидыМатериальныхРесурсов.Прочее Тогда
					Параметры.ТаблицаОстатковМПЗ.ВидМПЗ = Перечисление.ВидыМатериальныхРесурсов.Товар;
				КонецЕсли;
				
			КонецЕсли;
		Иначе
			Параметры.ТаблицаОстатковМПЗ.Количество 				= Запрос.КоличествоНачОст; 
			Параметры.ТаблицаОстатковМПЗ.Сумма						= Запрос.СтоимостьНачОст;
			Параметры.ТаблицаОстатковМПЗ.Оплачен					= 0;
			Параметры.ТаблицаОстатковМПЗ.РеквизитыДокументаОплаты	= "";
			Если (Запрос.Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Услуга) //это собственная услуга
				И (ПустоеЗначение(Запрос.ДокументПоступления) = 1) Тогда
				Параметры.ТаблицаОстатковМПЗ.Оплачен					= 1;
			КонецЕсли;            
			Если ВыбВидМатериальногоРесурса = Перечисление.ВидыМатериальныхРесурсов.Прочее Тогда
				Параметры.ТаблицаОстатковМПЗ.ВидМПЗ = Перечисление.ВидыМатериальныхРесурсов.Товар;
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
	
	
	//Параметры.ТаблицаОстатковМПЗ.РасчетныйДокумент			= ;	
	//Параметры.ТаблицаОстатковМПЗ.СтатусыОплатыРасходовУСН
	//Параметры.ТаблицаОстатковМПЗ.ОтражениеВУСН
	//Параметры.ТаблицаОстатковМПЗ.ВалютнаяСумма
	//Параметры.ТаблицаОстатковМПЗ.ВалютныйНДС
	НомерСтроки = НомерСтроки + 1;
КонецЦикла;

//теперь соберем сумму НДС по отгруженным ТМЦ
Запрос = СоздатьОбъект("Запрос");
ТекстЗапроса = 
"//{{ЗАПРОС(НДС)
|Период с ВыбНачПериода по ВыбКонПериода;
|Без итогов;
|ВидДеятельности = Регистр.Расходы.ВидДеятельности;
|ВидМПЗ = Регистр.Расходы.ВидМатериальногоРесурса;
|Номенклатура = Регистр.Расходы.Номенклатура;
|ДокументПоступления = Регистр.Расходы.ДокументПоступления;
|Количество = Регистр.Расходы.Количество;
|Стоимость = Регистр.Расходы.Стоимость;
|СуммаНДС = Регистр.Расходы.СуммаНДС;
|ДокументОплаты = Регистр.Расходы.ДокументОплаты;
|ОблагаетсяНДС = Регистр.Расходы.ОблагаетсяНДС;
|КоличествоОплаченное = Регистр.Расходы.КоличествоОплаченное;
|СтоимостьОплаченная = Регистр.Расходы.СтоимостьОплаченная;
|СуммаНДСОплаченная = Регистр.Расходы.СуммаНДСОплаченная;
|Функция КоличествоНачОст = " + ВидОстатка + "(Количество);
|Функция СтоимостьНачОст = " + ВидОстатка + "(Стоимость);
|Функция СуммаНДСНачОст = " + ВидОстатка + "(СуммаНДС);
|Функция КоличествоОплаченноеНачОст = " + ВидОстатка + "(КоличествоОплаченное);
|Функция СтоимостьОплаченнаяНачОст = " + ВидОстатка + "(СтоимостьОплаченная);
|Функция СуммаНДСОплаченнаяНачОст = " + ВидОстатка + "(СуммаНДСОплаченная);
|Группировка ВидДеятельности;
|Группировка ВидМПЗ;
|Группировка Номенклатура;
|Группировка ДокументПоступления;
|Группировка ДокументОплаты;
|Группировка ОблагаетсяНДС;";
Если ВыбВидМатериальногоРесурса &lt;&gt; Перечисление.ВидыМатериальныхРесурсов.Прочее Тогда
	ТекстЗапроса = ТекстЗапроса + "
	|Условие(ВидМПЗ = ВыбВидМатериальногоРесурса);
	|"//}}ЗАПРОС
	;
Иначе
	ТекстЗапроса = ТекстЗапроса + "
	|Условие((ВидМПЗ = Перечисление.ВидыМатериальныхРесурсов.Материал) ИЛИ (ВидМПЗ = Перечисление.ВидыМатериальныхРесурсов.ВспомогательныйМатериал) ИЛИ (ВидМПЗ = Перечисление.ВидыМатериальныхРесурсов.Услуга) ИЛИ (ВидМПЗ = Перечисление.ВидыМатериальныхРесурсов.ОсновноеСредство) ИЛИ (ВидМПЗ = Перечисление.ВидыМатериальныхРесурсов.Прочее));
	|"//}}ЗАПРОС
	;
КонецЕсли;

// Если ошибка в запросе, то выход из процедуры
Если Запрос.Выполнить(ТекстЗапроса) = 1 Тогда
	ТЗапрос = СоздатьОбъект("ТаблицаЗначений");
	Запрос.Выгрузить(ТЗапрос);		
	
	ТЗапрос.НоваяКолонка("Индекс");		
	ТЗапрос.ВыбратьСтроки();
	Пока ТЗапрос.ПолучитьСтроку() = 1 Цикл
		ТЗапрос.Индекс = Строка(ТЗапрос.ДокументПоступления) + Строка(ТЗапрос.ВидДеятельности) + Строка(ТЗапрос.ВидМПЗ) + Строка(ТЗапрос.Номенклатура) + Строка(ТЗапрос.Номенклатура.ПолныйКод());
	КонецЦикла;
	ТЗапрос.Свернуть("ВидДеятельности,ВидМПЗ,Номенклатура,ДокументПоступления,ДокументОплаты,ОблагаетсяНДС,Индекс","КоличествоНачОст,СтоимостьНачОст,СуммаНДСНачОст,КоличествоОплаченноеНачОст,СтоимостьОплаченнаяНачОст,СуммаНДСОплаченнаяНачОст");
	ТЗапрос.Сортировать("Индекс");
	
	Параметры.ТаблицаОстатковМПЗ.Сортировать("Индекс");
	
	Параметры.ТаблицаОстатковМПЗ.ВыбратьСтроки();
	Пока Параметры.ТаблицаОстатковМПЗ.ПолучитьСтроку() = 1 Цикл			
		Стр =  0;
		Если Параметры.ТаблицаОстатковМПЗ.НДС = 0 Тогда
			Если ТЗапрос.НайтиЗначение(Параметры.ТаблицаОстатковМПЗ.Индекс, Стр, "Индекс") = 1 Тогда
				ТЗапрос.ПолучитьСтрокуПоНомеру(Стр);
				СуммаНДС =  ?(ТЗапрос.СтоимостьНачОст &lt;&gt; 0, Параметры.ТаблицаОстатковМПЗ.Сумма * ТЗапрос.СуммаНДСНачОст/ТЗапрос.СтоимостьНачОст, 0);
				Параметры.ТаблицаОстатковМПЗ.НДС = СуммаНДС;
				Параметры.ТаблицаОстатковМПЗ.НДСВключенВСтоимость = ?(СуммаНДС &lt;&gt; 0, ?(ТЗапрос.ОблагаетсяНДС = 1, 0, 1), 0);								
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецЕсли;

//теперь соберем сумму НДС по реализованным ТМЦ
Запрос = СоздатьОбъект("Запрос");
ТекстЗапроса = 
"//{{ЗАПРОС(НДС)
|Период с ВыбНачПериода по ВыбКонПериода;
|Без итогов;
|ВидДеятельности = Регистр.РасчетыСПоставщиками.ВидДеятельности;
|ВидМПЗ = Регистр.РасчетыСПоставщиками.ВидМатериальногоРесурса;
|Номенклатура = Регистр.РасчетыСПоставщиками.Номенклатура;
|ДокументПоступления = Регистр.РасчетыСПоставщиками.РасчДокумент;
|Количество = Регистр.РасчетыСПоставщиками.Количество;
|Стоимость = Регистр.РасчетыСПоставщиками.Сумма;
|СуммаНДС = Регистр.РасчетыСПоставщиками.СуммаНДС;
|ДокументОплаты = Регистр.РасчетыСПоставщиками.ДокументОплаты;
|ОблагаетсяНДС = Регистр.РасчетыСПоставщиками.ОблагаетсяНДС;
|Функция КоличествоНачОст = " + ВидОстатка + "(Количество);
|Функция СтоимостьНачОст = " + ВидОстатка + "(Стоимость);
|Функция СуммаНДСНачОст = " + ВидОстатка + "(СуммаНДС);
|Группировка ВидДеятельности;
|Группировка ВидМПЗ;
|Группировка Номенклатура;
|Группировка ДокументПоступления;
|Группировка ДокументОплаты;
|Группировка ОблагаетсяНДС;";
Если ВыбВидМатериальногоРесурса &lt;&gt; Перечисление.ВидыМатериальныхРесурсов.Прочее Тогда
	ТекстЗапроса = ТекстЗапроса + "
	|Условие(ВидМПЗ = ВыбВидМатериальногоРесурса);
	|"//}}ЗАПРОС
	;
Иначе
	ТекстЗапроса = ТекстЗапроса + "
	|Условие((ВидМПЗ = Перечисление.ВидыМатериальныхРесурсов.Материал) ИЛИ (ВидМПЗ = Перечисление.ВидыМатериальныхРесурсов.ВспомогательныйМатериал) ИЛИ (ВидМПЗ = Перечисление.ВидыМатериальныхРесурсов.Услуга) ИЛИ (ВидМПЗ = Перечисление.ВидыМатериальныхРесурсов.ОсновноеСредство) ИЛИ (ВидМПЗ = Перечисление.ВидыМатериальныхРесурсов.Прочее));
	|"//}}ЗАПРОС
	;
КонецЕсли;

// Если ошибка в запросе, то выход из процедуры
Если Запрос.Выполнить(ТекстЗапроса) = 1 Тогда
	ТЗапрос = СоздатьОбъект("ТаблицаЗначений");
	Запрос.Выгрузить(ТЗапрос);
	
	ТЗапрос.НоваяКолонка("Индекс");		
	ТЗапрос.ВыбратьСтроки();
	Пока ТЗапрос.ПолучитьСтроку() = 1 Цикл
		ТЗапрос.Индекс = Строка(ТЗапрос.ДокументПоступления) + Строка(ТЗапрос.ВидДеятельности) + Строка(ТЗапрос.ВидМПЗ) + Строка(ТЗапрос.Номенклатура) + Строка(ТЗапрос.Номенклатура.ПолныйКод());
	КонецЦикла;
	ТЗапрос.Свернуть("ВидДеятельности,ВидМПЗ,Номенклатура,ДокументПоступления,ДокументОплаты,ОблагаетсяНДС,Индекс","КоличествоНачОст,СтоимостьНачОст,СуммаНДСНачОст");
	ТЗапрос.Сортировать("Индекс");
	
	Параметры.ТаблицаОстатковМПЗ.Сортировать("Индекс");
	
	Параметры.ТаблицаОстатковМПЗ.ВыбратьСтроки();
	Пока Параметры.ТаблицаОстатковМПЗ.ПолучитьСтроку() = 1 Цикл			
		Стр =  0;
		Если Параметры.ТаблицаОстатковМПЗ.НДС = 0 Тогда
			Если ТЗапрос.НайтиЗначение(Параметры.ТаблицаОстатковМПЗ.Индекс, Стр, "Индекс") = 1 Тогда
				ТЗапрос.ПолучитьСтрокуПоНомеру(Стр);
				
				СуммаНДС =  ?(ТЗапрос.СтоимостьНачОст &lt;&gt; 0, Параметры.ТаблицаОстатковМПЗ.Сумма * ТЗапрос.СуммаНДСНачОст/(ТЗапрос.СтоимостьНачОст - ТЗапрос.СуммаНДСНачОст), 0);
				Параметры.ТаблицаОстатковМПЗ.НДС = СуммаНДС;
				Параметры.ТаблицаОстатковМПЗ.НДСВключенВСтоимость = ?(СуммаНДС &lt;&gt; 0, ?(ТЗапрос.ОблагаетсяНДС = 1, 0, 1), 0);				
				
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецЕсли;


// выгружаем обороты
ВыгрузитьОстаткиМПЗОборотов( ИсходящиеДанные, ВходящиеДанные, Источник, Приемник, ТипПриемника, Значение, Выражение,,,,,,,,,,,,,,,,,,,,,,,,,,, Отказ);

ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("РазделУчета", Параметры.РазделУчета);

Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	ВходящиеДанные.Установить("Дата", Параметры.ДатаВводаОстатков - 1);
	ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
	ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
	ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
Иначе
	Если Параметры.ПараметрыАлгоритмов.Получить("УСН") = 1 Тогда
		ВходящиеДанные.Установить("Дата", Параметры.ДатаКонцаПериодаВыгрузки);
		ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
		ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
		ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
	Иначе
		ВходящиеДанные.Установить("Дата", Параметры.ДатаВводаОстатков - 1);
		ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 0);
		ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
		ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 0);
	КонецЕсли;	
КонецЕсли;

ВходящиеДанные.Установить("ВходящиеОстатки", Параметры.ТаблицаОстатковМПЗ);
ВходящиеДанные.Установить("ВходящиеОстаткиОборотов", Параметры.ТаблицаОстатковМПЗОборотов);
ВыгрузитьПоПравилу(,,ВходящиеДанные,, "ВводНачальныхОстатков");


</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВыгрузитьОстаткиНДС" ИспользуетсяПриЗагрузке="false">
			<Текст>Параметры.ТаблицаОстатковНДС.УдалитьСтроки();

Если Параметры.ПараметрыАлгоритмов.Получить("УСН") = 1 Тогда
	Возврат 0;
КонецЕсли;

ВыбНачПериода = Параметры.ДатаКонцаПериодаВыгрузки;
ВыбКонПериода = Параметры.ДатаКонцаПериодаВыгрузки;

Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	ВидОстатка = "НачОст";
Иначе
	ВидОстатка = "КонОст";
КонецЕсли;

Запрос = СоздатьОбъект("Запрос");
ТекстЗапроса = 
"//{{ЗАПРОС(Сформировать)
|Период с ВыбНачПериода по ВыбКонПериода;
|Без итогов;
|СтавкаНДС = Регистр.КнигаПокупок.СтавкаНДС;
|СчетФактура = Регистр.КнигаПокупок.РасчДокумент;
|Сумма = Регистр.КнигаПокупок.Сумма;
|СуммаНДС = Регистр.КнигаПокупок.СуммаНДС;
|РеквизитыСФ = Регистр.КнигаПокупок.СчетФактура;
|Функция СуммаНачОст = " + ВидОстатка + "(Сумма);
|Функция СуммаНДСНачОст = " + ВидОстатка + "(СуммаНДС);
|Группировка СтавкаНДС;
|Группировка СчетФактура;
|Группировка РеквизитыСФ;
|"//}}ЗАПРОС
;
// Если ошибка в запросе, то выход из процедуры
Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
	Возврат 0;
КонецЕсли;

Пока Запрос.Группировка() = 1 Цикл
	Если Запрос.РеквизитыСФ.Вид() = "СчетФактураВыданный" Тогда
		Если Запрос.РеквизитыСФ.ВидОперации = Перечисление.ВидыОперацийСчетаФактурыВыданного.Аванс Тогда
			Если Параметры.РазделУчета &lt;&gt;  "НДСПоАвансамПолученным" Тогда
				Продолжить;
			КонецЕсли;
		Иначе
			Если Параметры.РазделУчета =  "НДСПоАвансамПолученным" Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли Параметры.РазделУчета =  "НДСПоАвансамПолученным" Тогда
		Продолжить;
	КонецЕсли;
	
	Параметры.ТаблицаОстатковНДС.НоваяСтрока();
	Параметры.ТаблицаОстатковНДС.СтавкаНДС			= Запрос.СтавкаНДС;
	Параметры.ТаблицаОстатковНДС.Контрагент			= Запрос.СчетФактура.Контрагент;
	Параметры.ТаблицаОстатковНДС.ДоговорКонтрагента	= Запрос.СчетФактура.Договор;
	Параметры.ТаблицаОстатковНДС.СчетФактура		= Запрос.СчетФактура.Договор;
	Параметры.ТаблицаОстатковНДС.ДатаСФ				= Запрос.РеквизитыСФ.ДатаДок;
	Параметры.ТаблицаОстатковНДС.НомерСФ			= Запрос.РеквизитыСФ.НомерДок;;
	Параметры.ТаблицаОстатковНДС.СуммаБезНДС		= Запрос.СуммаНачОст - Запрос.СуммаНДСНачОст;
	Параметры.ТаблицаОстатковНДС.НДС				= Запрос.СуммаНДСНачОст;	
КонецЦикла;

ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("РазделУчета", Параметры.РазделУчета);

Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	ВходящиеДанные.Установить("Дата", Параметры.ДатаВводаОстатков - 1);
Иначе
	ВходящиеДанные.Установить("Дата", Параметры.ДатаКонцаПериодаВыгрузки);
КонецЕсли;

ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
ВходящиеДанные.Установить("ВходящиеОстатки", Параметры.ТаблицаОстатковНДС);
ВыгрузитьПоПравилу(,,ВходящиеДанные,, "ВводНачальныхОстатков");




</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВыгрузитьОстаткиПрочихРасходов" ИспользуетсяПриЗагрузке="false">
			<Текст>Параметры.ТаблицаОстатковМПЗ.УдалитьСтроки();

ВыбНачПериода = Параметры.ДатаКонцаПериодаВыгрузки;
ВыбКонПериода = Параметры.ДатаКонцаПериодаВыгрузки;	

Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	ВидОстатка = "НачОст";
Иначе
	ВидОстатка = "КонОст";
КонецЕсли;

Запрос = СоздатьОбъект("Запрос");
ТекстЗапроса = 
"//{{ЗАПРОС(Сформировать)
|Период с ВыбНачПериода по ВыбКонПериода;
|Без итогов;
|ВидДеятельности = Регистр.РасчетыСПоставщиками.ВидДеятельности;
|ОблагаетсяНДС = Регистр.РасчетыСПоставщиками.ОблагаетсяНДС;
|Договор = Регистр.РасчетыСПоставщиками.Договор;
|Номенклатура = Регистр.РасчетыСПоставщиками.Номенклатура;
|Партия = Регистр.РасчетыСПоставщиками.РасчДокумент;
|Количество = Регистр.РасчетыСПоставщиками.Количество;
|Сумма = Регистр.РасчетыСПоставщиками.Сумма;
|СуммаНДС = Регистр.РасчетыСПоставщиками.СуммаНДС;
|Функция КоличествоНачОст = " + ВидОстатка + "(Количество);
|Функция СуммаНачОст = " + ВидОстатка + "(Сумма);
|Функция СуммаНДСНачОст = " + ВидОстатка + "(СуммаНДС);
|Группировка ВидДеятельности;
|Группировка Договор;
|Группировка Номенклатура без групп;
|Группировка Партия;
|Условие(Партия.Вид() = ""ПрочиеРасходыРасчеты"");
|"//}}ЗАПРОС
;
// Если ошибка в запросе, то выход из процедуры
Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
	Возврат 0;
КонецЕсли;

НомерСтроки = 1;
Пока Запрос.Группировка() = 1 Цикл
	
	НоменклатурнаяГруппа = ?(ПустоеЗначение(Запрос.ВидДеятельности) = 1, Параметры.ОсновнаяНоменклатурнаяГруппа, СокрЛП(Запрос.ВидДеятельности.Наименование));
	
	Параметры.ТаблицаОстатковМПЗ.НоваяСтрока();
	Параметры.ТаблицаОстатковМПЗ.Ключ						= НомерСтроки;
	Параметры.ТаблицаОстатковМПЗ.НомерСтрокиТЧ				= НомерСтроки;
	Параметры.ТаблицаОстатковМПЗ.Номенклатура 				= Запрос.Номенклатура; 
	Параметры.ТаблицаОстатковМПЗ.Партия						= Запрос.Договор;
	Параметры.ТаблицаОстатковМПЗ.Количество 				= Запрос.КоличествоНачОст; 
	Параметры.ТаблицаОстатковМПЗ.Сумма						= Запрос.СуммаНачОст;
	Параметры.ТаблицаОстатковМПЗ.НДС						= Запрос.СуммаНДСНачОст;
	Параметры.ТаблицаОстатковМПЗ.НоменклатурнаяГруппа 	= НоменклатурнаяГруппа;
	
	Если Запрос.СуммаНДСНачОст &lt;&gt; 0 Тогда
		Параметры.ТаблицаОстатковМПЗ.НДСВключенВСтоимость		=?(Запрос.ОблагаетсяНДС = 0, 1, 0);
	Иначе
		Параметры.ТаблицаОстатковМПЗ.НДСВключенВСтоимость		= 0;
	КонецЕсли;
	
	Параметры.ПараметрыАлгоритмов.Установить("ВидДеятельсности", Запрос.ВидДеятельности);		
	Параметры.ТаблицаОстатковМПЗ.ХарактерДеятельности = ОпределитьХарактерДеятельности();
	
	//Параметры.ТаблицаОстатковМПЗ.РасчетныйДокумент			= ;	
	//Параметры.ТаблицаОстатковМПЗ.СтатусыОплатыРасходовУСН
	//Параметры.ТаблицаОстатковМПЗ.ОтражениеВУСН
	//Параметры.ТаблицаОстатковМПЗ.ВалютнаяСумма
	//Параметры.ТаблицаОстатковМПЗ.ВалютныйНДС
	НомерСтроки = НомерСтроки + 1;
КонецЦикла;

ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("РазделУчета", Параметры.РазделУчета);

Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	ВходящиеДанные.Установить("Дата", Параметры.ДатаВводаОстатков - 1);
Иначе
	ВходящиеДанные.Установить("Дата", Параметры.ДатаКонцаПериодаВыгрузки);
КонецЕсли;

ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
ВходящиеДанные.Установить("ВходящиеОстатки", Параметры.ТаблицаОстатковМПЗ);
ВыгрузитьПоПравилу(,,ВходящиеДанные,, "ВводНачальныхОстатков");


</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВыгрузитьОстаткиРасходовПоРеализованнымМПЗ" ИспользуетсяПриЗагрузке="false">
			<Текст>СчетУчета = "";
Параметры.ТаблицаОстатковМПЗ.УдалитьСтроки();

//Подготовка таблиц НДС
Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	ВыбНачПериода = Параметры.ДатаВводаОстатков;
	ВыбКонПериода = Параметры.ДатаВводаОстатков;
	ВидОстатка = "НачОст";
Иначе
	Если Параметры.ПараметрыАлгоритмов.Получить("УСН") = 1 Тогда
		ВыбНачПериода = Параметры.ДатаВводаОстатков;
		ВыбКонПериода = Параметры.ДатаКонцаПериодаВыгрузки;
		ВидОстатка = "КонОст";
	Иначе
		ВыбНачПериода = Параметры.ДатаВводаОстатков;
		ВыбКонПериода = Параметры.ДатаВводаОстатков;
		ВидОстатка = "НачОст";
	КонецЕсли;	
КонецЕсли;


//теперь соберем сумму НДС по отгруженным ТМЦ
Запрос = СоздатьОбъект("Запрос");
ТекстЗапроса = 
"//{{ЗАПРОС(НДС)
|Период с ВыбНачПериода по ВыбКонПериода;
|Без итогов;
|ВидДеятельности = Регистр.Расходы.ВидДеятельности;
|ВидМПЗ = Регистр.Расходы.ВидМатериальногоРесурса;
|Номенклатура = Регистр.Расходы.Номенклатура;
|ДокументПоступления = Регистр.Расходы.ДокументПоступления;
|Количество = Регистр.Расходы.Количество;
|Стоимость = Регистр.Расходы.Стоимость;
|СуммаНДС = Регистр.Расходы.СуммаНДС;
|ДокументОплаты = Регистр.Расходы.ДокументОплаты;
|ОблагаетсяНДС = Регистр.Расходы.ОблагаетсяНДС;
|КоличествоОплаченное = Регистр.Расходы.КоличествоОплаченное;
|СтоимостьОплаченная = Регистр.Расходы.СтоимостьОплаченная;
|СуммаНДСОплаченная = Регистр.Расходы.СуммаНДСОплаченная;
|Функция КоличествоНачОст = " + ВидОстатка + "(Количество);
|Функция СтоимостьНачОст = " + ВидОстатка + "(Стоимость);
|Функция СуммаНДСНачОст = " + ВидОстатка + "(СуммаНДС);
|Функция КоличествоОплаченноеНачОст = " + ВидОстатка + "(КоличествоОплаченное);
|Функция СтоимостьОплаченнаяНачОст = " + ВидОстатка + "(СтоимостьОплаченная);
|Функция СуммаНДСОплаченнаяНачОст = " + ВидОстатка + "(СуммаНДСОплаченная);
|Группировка ВидДеятельности;
|Группировка ВидМПЗ;
|Группировка Номенклатура;
|Группировка ДокументПоступления;
|Группировка ДокументОплаты;
|Группировка ОблагаетсяНДС;
|Условие(ПустоеЗначение(Номенклатура) = 0);
|"//}}ЗАПРОС
;

// Если ошибка в запросе, то выход из процедуры
Если Запрос.Выполнить(ТекстЗапроса) = 1 Тогда
	
	ОтгрЗапрос = СоздатьОбъект("ТаблицаЗначений");
	Запрос.Выгрузить(ОтгрЗапрос);		
	
	ОтгрЗапрос.НоваяКолонка("Индекс");		
	ОтгрЗапрос.ВыбратьСтроки();
	Пока ОтгрЗапрос.ПолучитьСтроку() = 1 Цикл
		ОтгрЗапрос.Индекс = Строка(ОтгрЗапрос.ДокументПоступления) + Строка(ОтгрЗапрос.ВидДеятельности) + Строка(ОтгрЗапрос.ВидМПЗ) + Строка(ОтгрЗапрос.Номенклатура) + Строка(ОтгрЗапрос.Номенклатура.ПолныйКод());
	КонецЦикла;
	ОтгрЗапрос.Свернуть("ВидДеятельности,ВидМПЗ,Номенклатура,ДокументПоступления,ДокументОплаты,ОблагаетсяНДС,Индекс","КоличествоНачОст,СтоимостьНачОст,СуммаНДСНачОст,КоличествоОплаченноеНачОст,СтоимостьОплаченнаяНачОст,СуммаНДСОплаченнаяНачОст");
	ОтгрЗапрос.Сортировать("Индекс");
	
КонецЕсли;

//теперь соберем сумму НДС по реализованным ТМЦ
Запрос = СоздатьОбъект("Запрос");
ТекстЗапроса = 
"//{{ЗАПРОС(НДС)
|Период с ВыбНачПериода по ВыбКонПериода;
|Без итогов;
|ВидДеятельности = Регистр.РасчетыСПоставщиками.ВидДеятельности;
|ВидМПЗ = Регистр.РасчетыСПоставщиками.ВидМатериальногоРесурса;
|Номенклатура = Регистр.РасчетыСПоставщиками.Номенклатура;
|ДокументПоступления = Регистр.РасчетыСПоставщиками.РасчДокумент;
|Количество = Регистр.РасчетыСПоставщиками.Количество;
|Стоимость = Регистр.РасчетыСПоставщиками.Сумма;
|СуммаНДС = Регистр.РасчетыСПоставщиками.СуммаНДС;
|ДокументОплаты = Регистр.РасчетыСПоставщиками.ДокументОплаты;
|ОблагаетсяНДС = Регистр.РасчетыСПоставщиками.ОблагаетсяНДС;
|Функция КоличествоНачОст = " + ВидОстатка + "(Количество);
|Функция СтоимостьНачОст = " + ВидОстатка + "(Стоимость);
|Функция СуммаНДСНачОст = " + ВидОстатка + "(СуммаНДС);
|Группировка ВидДеятельности;
|Группировка ВидМПЗ;
|Группировка Номенклатура;
|Группировка ДокументПоступления;
|Группировка ДокументОплаты;
|Группировка ОблагаетсяНДС;
|Условие(ПустоеЗначение(Номенклатура) = 0);
|"//}}ЗАПРОС
;

// Если ошибка в запросе, то выход из процедуры
Если Запрос.Выполнить(ТекстЗапроса) = 1 Тогда
	РеалЗапрос = СоздатьОбъект("ТаблицаЗначений");
	Запрос.Выгрузить(РеалЗапрос);
	
	РеалЗапрос.НоваяКолонка("Индекс");		
	РеалЗапрос.ВыбратьСтроки();
	Пока РеалЗапрос.ПолучитьСтроку() = 1 Цикл
		РеалЗапрос.Индекс = Строка(РеалЗапрос.ДокументПоступления) + Строка(РеалЗапрос.ВидДеятельности) + Строка(РеалЗапрос.ВидМПЗ) + Строка(РеалЗапрос.Номенклатура) + Строка(РеалЗапрос.Номенклатура.ПолныйКод());
	КонецЦикла;
	РеалЗапрос.Свернуть("ВидДеятельности,ВидМПЗ,Номенклатура,ДокументПоступления,ДокументОплаты,ОблагаетсяНДС,Индекс","КоличествоНачОст,СтоимостьНачОст,СуммаНДСНачОст");
	РеалЗапрос.Сортировать("Индекс");
	
КонецЕсли;

// Основной запрос
ВыбНачПериода = '01.01.1980';
Если Параметры.ПараметрыАлгоритмов.Получить("УСН") = 1 Тогда
	ВыбКонПериода = Параметры.ДатаКонцаПериодаВыгрузки;	
Иначе
	ВыбКонПериода = Параметры.ДатаВводаОстатков;
КонецЕсли;

Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
		ВыбКонПериода = ВыбКонПериода - 1;
КонецЕсли;	


Запрос = СоздатьОбъект("Запрос");
ТекстЗапроса = 
"//{{ЗАПРОС(Сформировать)
|Период с ВыбНачПериода по ВыбКонПериода;
|Без итогов;
|ВидДеятельности = Регистр.РасчетыСПокупателями.ВидДеятельности;
|ДокументОтгрузки = Регистр.РасчетыСПокупателями.РасчДокумент;
|ТекДок = Регистр.РасчетыСПокупателями.ТекущийДокумент;
|Договор = Регистр.РасчетыСПокупателями.Договор;
|СтавкаНДС = Регистр.РасчетыСПокупателями.СтавкаНДС;
|ДокументПоступления = Регистр.РасчетыСПокупателями.ДокументПоступления;
|ВидМатериальногоРесурса = Регистр.РасчетыСПокупателями.ВидМатериальногоРесурса;
|Номенклатура = Регистр.РасчетыСПокупателями.Номенклатура;
|Стоимость = Регистр.РасчетыСПокупателями.Стоимость;
|СтоимостьОплаченная = Регистр.РасчетыСПокупателями.СтоимостьОплаченная;
|Количество = Регистр.РасчетыСПокупателями.Количество;
|Выручка = Регистр.РасчетыСПокупателями.Сумма;
|Функция КоличествоПриход = Приход(Количество);
|Функция СтоимостьПриход = Приход(Стоимость);
|Функция СтоимостьРасход = Расход(Стоимость);
|Функция СтоимостьОплаченнаяПриход = Приход(СтоимостьОплаченная);
|Функция СтоимостьОплаченнаяРасход = Расход(СтоимостьОплаченная);
|Функция ВыручкаПриход = Приход(Выручка);
|Функция ВыручкаРасход = Расход(Выручка);
|Группировка ВидМатериальногоРесурса;
|Группировка Номенклатура без групп;
|Группировка ДокументПоступления;
|Группировка ВидДеятельности;
|Группировка СтавкаНДС;
|Группировка ДокументОтгрузки;
|Группировка Договор без групп;
|"//}}ЗАПРОС
;
// Если ошибка в запросе, то выход из процедуры
Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
	Возврат 0;
КонецЕсли;

НомерСтроки = 1;
Пока Запрос.Группировка() = 1 Цикл
	
	Стоимость = Запрос.СтоимостьПриход;// - Запрос.СтоимостьРасход;
	СтоимостьОплаченная = Запрос.СтоимостьОплаченнаяПриход;// - Запрос.СтоимостьОплаченнаяРасход;
	ЗадолженностьПокупателя = Запрос.ВыручкаПриход - Запрос.ВыручкаРасход;
	ЗадолженностьПоставщику = Стоимость - СтоимостьОплаченная;
	
	НоменклатурнаяГруппа = ?(ПустоеЗначение(Запрос.ВидДеятельности) = 1, Параметры.ОсновнаяНоменклатурнаяГруппа, СокрЛП(Запрос.ВидДеятельности.Наименование));
	
	Если ЗадолженностьПокупателя = 0 Тогда
		Если ЗадолженностьПоставщику &lt;&gt; 0 Тогда
			
			Если ПустоеЗначение(Запрос.ДокументПоступления) = 1 Тогда
				ДокументПоступления = "";
			ИначеЕсли Метаданные.Документ(Запрос.ДокументПоступления.Вид()).РеквизитШапки("Договор").Выбран() = 1 Тогда
				ДокументПоступления = Запрос.ДокументПоступления.Договор;
			Иначе
				ДокументПоступления = "";
			КонецЕсли; 
			
			ЗадолженностьКоличество = ?(Стоимость = 0, 0, Запрос.КоличествоПриход * (ЗадолженностьПоставщику / Стоимость));
			
			Параметры.ТаблицаОстатковМПЗ.НоваяСтрока();
			Параметры.ТаблицаОстатковМПЗ.Ключ						= НомерСтроки;
			Параметры.ТаблицаОстатковМПЗ.НомерСтрокиТЧ				= НомерСтроки;
			Параметры.ТаблицаОстатковМПЗ.СчетУчета					= СчетУчета;
			Параметры.ТаблицаОстатковМПЗ.Номенклатура 				= Запрос.Номенклатура; 
			Параметры.ТаблицаОстатковМПЗ.ВидДеятельности			= Запрос.ВидДеятельности; 
			Параметры.ТаблицаОстатковМПЗ.ВидМПЗ						= Запрос.ВидМатериальногоРесурса;			
			Параметры.ТаблицаОстатковМПЗ.Партия						= ДокументПоступления;
			Параметры.ТаблицаОстатковМПЗ.РасчетныйДокумент			= Запрос.Договор;
			Параметры.ТаблицаОстатковМПЗ.НДСВключенВСтоимость		= 0;
			Параметры.ТаблицаОстатковМПЗ.Оплачен					= 0;
			Параметры.ТаблицаОстатковМПЗ.Количество 				= ЗадолженностьКоличество; 
			Параметры.ТаблицаОстатковМПЗ.Сумма						= ЗадолженностьПоставщику;
			Параметры.ПараметрыАлгоритмов.Установить("ВидДеятельсности", Запрос.ВидДеятельности);		
			Параметры.ТаблицаОстатковМПЗ.ХарактерДеятельности = ОпределитьХарактерДеятельности();
			Параметры.ТаблицаОстатковМПЗ.НоменклатурнаяГруппа = НоменклатурнаяГруппа;	
			
			Параметры.ТаблицаОстатковМПЗ.СтатусыОплатыРасходовУСН = "НеОплачено";		
			Параметры.ТаблицаОстатковМПЗ.ПартияСинхронизации = Запрос.ДокументПоступления;		
			Параметры.ТаблицаОстатковМПЗ.Индекс = Строка(Параметры.ТаблицаОстатковМПЗ.ПартияСинхронизации) + Строка(Параметры.ТаблицаОстатковМПЗ.ВидДеятельности) + Строка(Параметры.ТаблицаОстатковМПЗ.ВидМПЗ) + Строка(Параметры.ТаблицаОстатковМПЗ.Номенклатура) + Строка(Параметры.ТаблицаОстатковМПЗ.Номенклатура.ПолныйКод());
			
			//Параметры.ТаблицаОстатковМПЗ.РасчетныйДокумент			= ;	
			//Параметры.ТаблицаОстатковМПЗ.СтатусыОплатыРасходовУСН
			//Параметры.ТаблицаОстатковМПЗ.ОтражениеВУСН
			//Параметры.ТаблицаОстатковМПЗ.ВалютнаяСумма
			//Параметры.ТаблицаОстатковМПЗ.ВалютныйНДС
			НомерСтроки = НомерСтроки + 1;
			
			//расчет НДС
			Стр =  0;
			Если Параметры.ТаблицаОстатковМПЗ.НДС = 0 Тогда
				Если ОтгрЗапрос.НайтиЗначение(Параметры.ТаблицаОстатковМПЗ.Индекс, Стр, "Индекс") = 1 Тогда
					ОтгрЗапрос.ПолучитьСтрокуПоНомеру(Стр);
					СуммаНДС =  ?(ОтгрЗапрос.СтоимостьНачОст &lt;&gt; 0, Параметры.ТаблицаОстатковМПЗ.Сумма * ОтгрЗапрос.СуммаНДСНачОст/ОтгрЗапрос.СтоимостьНачОст, 0);
					Параметры.ТаблицаОстатковМПЗ.НДС = СуммаНДС;
					Параметры.ТаблицаОстатковМПЗ.НДСВключенВСтоимость = ?(СуммаНДС &lt;&gt; 0, ?(ОтгрЗапрос.ОблагаетсяНДС = 1, 0, 1), 0);
				КонецЕсли;
			КонецЕсли;
			
			Стр =  0;
			Если Параметры.ТаблицаОстатковМПЗ.НДС = 0 Тогда
				Если РеалЗапрос.НайтиЗначение(Параметры.ТаблицаОстатковМПЗ.Индекс, Стр, "Индекс") = 1 Тогда
					РеалЗапрос.ПолучитьСтрокуПоНомеру(Стр);
					СуммаНДС =  ?(РеалЗапрос.СтоимостьНачОст &lt;&gt; 0, Параметры.ТаблицаОстатковМПЗ.Сумма * РеалЗапрос.СуммаНДСНачОст/(РеалЗапрос.СтоимостьНачОст - РеалЗапрос.СуммаНДСНачОст), 0);
					Параметры.ТаблицаОстатковМПЗ.НДС = СуммаНДС;
					Параметры.ТаблицаОстатковМПЗ.НДСВключенВСтоимость = ?(СуммаНДС &lt;&gt; 0, ?(РеалЗапрос.ОблагаетсяНДС = 1, 0, 1), 0);				
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
КонецЦикла;



ТаблицаМПЗРеализованных = СоздатьОбъект("ТаблицаЗначений");
Параметры.ТаблицаОстатковМПЗ.Выгрузить(ТаблицаМПЗРеализованных);
Параметры.ПараметрыАлгоритмов.Установить("ТаблицаМПЗРеализованных", ТаблицаМПЗРеализованных);

ВыгрузитьОстаткиМПЗОборотов();

ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("РазделУчета", Параметры.РазделУчета);

Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	ВходящиеДанные.Установить("Дата", Параметры.ДатаВводаОстатков - 1);
Иначе
	Если Параметры.ПараметрыАлгоритмов.Получить("УСН") = 1 Тогда
		ВходящиеДанные.Установить("Дата", Параметры.ДатаКонцаПериодаВыгрузки);
	Иначе
		ВходящиеДанные.Установить("Дата", Параметры.ДатаВводаОстатков - 1);
	КонецЕсли;	
КонецЕсли;

ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
ВходящиеДанные.Установить("ВходящиеОстатки", Параметры.ТаблицаОстатковМПЗ);
ВходящиеДанные.Установить("ВходящиеОстаткиОборотов", Параметры.ТаблицаОстатковМПЗОборотов);
ВыгрузитьПоПравилу(,,ВходящиеДанные,, "ВводНачальныхОстатков");





</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВыгрузитьОстаткиРасчетовПоНалогамИСборам" ИспользуетсяПриЗагрузке="false">
			<Текст>ВидРасчетов = Параметры.ПараметрыАлгоритмов.Получить("ВидРасчетов");
СтатьяЗатрат = "Уплата налогов и сборов";
Параметры.ПараметрыАлгоритмов.Установить("ВидРасходовНУ", "НалогиИСборы");
Параметры.ТаблицаОстатковРасчетовПоНалогам.УдалитьСтроки();

Если ПустоеЗначение(ВидРасчетов) = 1 Тогда
	Возврат 0;
КонецЕсли;

ВыбНачПериода = Параметры.ДатаКонцаПериодаВыгрузки;
ВыбКонПериода = Параметры.ДатаКонцаПериодаВыгрузки;	

Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	ВидОстатка = "НачОст";
Иначе
	ВидОстатка = "КонОст";
КонецЕсли;

Если ВидРасчетов = "РасчетыПоНалогамИСборам" Тогда
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса = 
	"//{{ЗАПРОС(Сформировать)
	|Период с ВыбНачПериода по ВыбКонПериода;
	|Без итогов;
	|ВидПлатежаВБюджет = Регистр.РасчетыСБюджетом.ВидПлатежаВБюджет;
	|ВидНалога = Регистр.РасчетыСБюджетом.ВидНалога;
	|ВидДеятельности = Регистр.РасчетыСБюджетом.ВидДеятельности;
	|Сумма = Регистр.РасчетыСБюджетом.Сумма;
	|Функция СуммаНачОст = " + ВидОстатка + "(Сумма);
	|Группировка ВидПлатежаВБюджет без групп;
	|Группировка ВидНалога без групп;
	|Группировка ВидДеятельности без групп;
	|"//}}ЗАПРОС
	;
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат 0;
	КонецЕсли;
	
	Пока Запрос.Группировка() = 1 Цикл
		
		НоменклатурнаяГруппа = ?(ПустоеЗначение(Запрос.ВидДеятельности) = 1, Параметры.ОсновнаяНоменклатурнаяГруппа, СокрЛП(Запрос.ВидДеятельности.Наименование));
		
		Параметры.ТаблицаОстатковРасчетовПоНалогам.НоваяСтрока();
		Параметры.ТаблицаОстатковРасчетовПоНалогам.ВидПлатежаВБюджет = Запрос.ВидПлатежаВБюджет;
		
		Параметры.ПараметрыАлгоритмов.Установить("ВидДеятельсности", Запрос.ВидДеятельности);		
		Параметры.ТаблицаОстатковРасчетовПоНалогам.ХарактерДеятельности = ОпределитьХарактерДеятельности();
		Параметры.ТаблицаОстатковРасчетовПоНалогам.НоменклатурнаяГруппа = НоменклатурнаяГруппа;
		
		Если Запрос.СуммаНачОст &gt; 0 Тогда
			Параметры.ТаблицаОстатковРасчетовПоНалогам.СуммаКт = Запрос.СуммаНачОст;
		Иначе
			Параметры.ТаблицаОстатковРасчетовПоНалогам.Сумма =  - Запрос.СуммаНачОст;
		КонецЕсли;
		Если (Запрос.ВидНалога.Код = "ПФР_страх")
			ИЛИ (Запрос.ВидНалога.Код = "ПФР_нак")
			ИЛИ (Запрос.ВидНалога.Код = "ТФОМС")
			ИЛИ (Запрос.ВидНалога.Код = "ФФОМС")
			ИЛИ (Запрос.ВидНалога.Код = "ФСС")
			ИЛИ (Запрос.ВидНалога.Код = "ЕСН_ФБ")			
			ИЛИ (Запрос.ВидНалога.Код = "НДФЛ") 
			ИЛИ (Запрос.ВидНалога.Код = "НДС") Тогда
			СчетУчета = СокрЛП(Запрос.ВидНалога.Код);
		ИначеЕсли (Запрос.ВидНалога.Код = "ПФР_страх_ЕСН")
			ИЛИ (Запрос.ВидНалога.Код = "ПФР_нак_ЕСН")
			ИЛИ (Запрос.ВидНалога.Код = "ТФОМС_ЕСН")
			ИЛИ (Запрос.ВидНалога.Код = "ФФОМС_ЕСН")
			ИЛИ (Запрос.ВидНалога.Код = "ФСС_ЕСН") Тогда
			НомерПозиции = Найти(Запрос.ВидНалога.Код, "_ЕСН");
			Если НомерПозиции &lt;&gt; 0 Тогда
				СчетУчета = СокрЛП(Лев(Запрос.ВидНалога.Код, НомерПозиции-1));
			Иначе
				СчетУчета = "ПрочиеНалогиИСборы";
			КонецЕсли;
		ИначеЕсли Запрос.ВидНалога.Код = "ФСС_БЛ" Тогда
			СчетУчета = "ФСС_ДобровольныеВзносы";
		ИначеЕсли Запрос.ВидНалога.Код = "ФСС_НС" Тогда
			СчетУчета = "ФСС_НСиПЗ";
		ИначеЕсли Запрос.ВидНалога.Код = "НалогНаДоходы" Тогда
			СчетУчета = "НДФЛ";
		Иначе
			СчетУчета = "ПрочиеНалогиИСборы";
		КонецЕсли;
		
		Параметры.ТаблицаОстатковРасчетовПоНалогам.СчетУчета = СчетУчета;
		Параметры.ТаблицаОстатковРасчетовПоНалогам.СтатьяЗатрат = СтатьяЗатрат;
	КонецЦикла;

ИначеЕсли ВидРасчетов = "СредстваУдержанныеУРаботников" Тогда
	
	ВидУдержания = "";
	СпрУдержания = СоздатьОбъект("Справочник.ВидыУдержаний");
	СпрУдержания.ВыбратьЭлементы();
	Пока СпрУдержания.ПолучитьЭлемент() = 1 Цикл
		Если (СпрУдержания.ЭтоГруппа() = 0) и (СпрУдержания.ПометкаУдаления() = 0) Тогда
			Если СпрУдержания.НДФЛ = 1 Тогда
				ВидУдержания = СпрУдержания.ТекущийЭлемент();
				Прервать;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если ПустоеЗначение(ВидУдержания) = 1 Тогда
		СпрУдержания.Новый();
		СпрУдержания.Наименование = "Налог на доходы физических лиц";
		СпрУдержания.НДФЛ = 1;
		СпрУдержания.Записать();
		ВидУдержания = СпрУдержания.ТекущийЭлемент();
	КонецЕсли;
	
	ВыбВидУдержания = ВидУдержания;
	
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса = 
	"//{{ЗАПРОС(Сформировать)
	|Период с ВыбНачПериода по ВыбКонПериода;
	|Без итогов;
	|ВидУдержания = Регистр.Удержано.ВидУдержания;
	|ВидДеятельности = Регистр.Удержано.ВидДеятельности;
	|Сумма = Регистр.Удержано.Сумма;
	|Функция СуммаНачОст = " + ВидОстатка + "(Сумма);
	|Группировка ВидДеятельности без групп;
	|Группировка ВидУдержания без групп;
	|Условие(ВидУдержания = ВыбВидУдержания);
	|"//}}ЗАПРОС
	;
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат 0;
	КонецЕсли;
	
	Пока Запрос.Группировка() = 1 Цикл
		
		НоменклатурнаяГруппа = ?(ПустоеЗначение(Запрос.ВидДеятельности) = 1, Параметры.ОсновнаяНоменклатурнаяГруппа, СокрЛП(Запрос.ВидДеятельности.Наименование));
		
		Параметры.ТаблицаОстатковРасчетовПоНалогам.НоваяСтрока();
		Параметры.ТаблицаОстатковРасчетовПоНалогам.ВидПлатежаВБюджет = Перечисление.ВидыПлатежей.Налог;
		
		Параметры.ПараметрыАлгоритмов.Установить("ВидДеятельсности", Запрос.ВидДеятельности);		
		Параметры.ТаблицаОстатковРасчетовПоНалогам.ХарактерДеятельности = ОпределитьХарактерДеятельности();		
		Параметры.ТаблицаОстатковРасчетовПоНалогам.НоменклатурнаяГруппа = НоменклатурнаяГруппа;
		
		Параметры.ТаблицаОстатковРасчетовПоНалогам.СтатьяЗатрат = СтатьяЗатрат;				
		Если Запрос.СуммаНачОст &gt; 0 Тогда
			Параметры.ТаблицаОстатковРасчетовПоНалогам.СуммаКт = Запрос.СуммаНачОст;
		Иначе
			Параметры.ТаблицаОстатковРасчетовПоНалогам.Сумма =  - Запрос.СуммаНачОст;
		КонецЕсли;
		Параметры.ТаблицаОстатковРасчетовПоНалогам.СчетУчета = "НДФЛ";
	КонецЦикла;

КонецЕсли;

ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("РазделУчета", Параметры.РазделУчета);

Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	ВходящиеДанные.Установить("Дата", Параметры.ДатаВводаОстатков - 1);
Иначе
	ВходящиеДанные.Установить("Дата", Параметры.ДатаКонцаПериодаВыгрузки);
КонецЕсли;

ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
ВходящиеДанные.Установить("ВходящиеОстатки", Параметры.ТаблицаОстатковРасчетовПоНалогам);
ВыгрузитьПоПравилу(,,ВходящиеДанные,, "ВводНачальныхОстатков");

</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВыгрузитьОстаткиРасчетовСКонтрагентами" ИспользуетсяПриЗагрузке="false">
			<Текст>ВидРасчетов = Параметры.ПараметрыАлгоритмов.Получить("ВидРасчетов");

Параметры.ТаблицаОстатковРасчетовСКонтрагентами.УдалитьСтроки();

ВыбНачПериода = Параметры.ДатаКонцаПериодаВыгрузки;
ВыбКонПериода = Параметры.ДатаКонцаПериодаВыгрузки;

Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	ВидОстатка = "НачОст";
Иначе
	ВидОстатка = "КонОст";
КонецЕсли;

Запрос = СоздатьОбъект("Запрос");
ТекстЗапроса = 
"//{{ЗАПРОС(Сформировать)
|Период с ВыбНачПериода по ВыбКонПериода;
|Без итогов;
|Контрагент = Регистр." + ВидРасчетов + ".Договор.Владелец;
|ДоговорКонтрагента = Регистр." + ВидРасчетов + ".Договор;
|РасчетныйДокумент = Регистр." + ВидРасчетов + ".РасчДокумент;
|Сумма = Регистр." + ВидРасчетов + ".Сумма;
|Валюта = Регистр." + ВидРасчетов + ".Договор.Валюта;
|Функция СуммаНачОст = " + ВидОстатка + "(Сумма);
|Группировка Контрагент без групп;
|Группировка ДоговорКонтрагента без групп;
|Группировка РасчетныйДокумент;
|Группировка Валюта;
|"//}}ЗАПРОС
;
// Если ошибка в запросе, то выход из процедуры
Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
	Возврат 0;
КонецЕсли;

Пока Запрос.Группировка() = 1 Цикл
	Параметры.ТаблицаОстатковРасчетовСКонтрагентами.НоваяСтрока();
	Параметры.ТаблицаОстатковРасчетовСКонтрагентами.Контрагент			= Запрос.Контрагент;
	Параметры.ТаблицаОстатковРасчетовСКонтрагентами.ДоговорКонтрагента	= Запрос.ДоговорКонтрагента;
	Параметры.ТаблицаОстатковРасчетовСКонтрагентами.Документ			= Запрос.ДоговорКонтрагента;
	Если Запрос.СуммаНачОст &lt; 0 Тогда
		Параметры.ТаблицаОстатковРасчетовСКонтрагентами.Аванс			= 1;
		Коэф = -1;
	Иначе
		Параметры.ТаблицаОстатковРасчетовСКонтрагентами.Аванс			= 0;
		Коэф = 1;
	КонецЕсли;

	Параметры.ТаблицаОстатковРасчетовСКонтрагентами.Сумма				= Запрос.СуммаНачОст * Коэф;
	//Параметры.ТаблицаОстатковРасчетовСКонтрагентами.СуммаКт				= Запрос.СуммаНачОст * Коэф;
	Параметры.ТаблицаОстатковРасчетовСКонтрагентами.Валюта				= Запрос.Валюта;
	Если (Запрос.Валюта &lt;&gt;  Параметры.Рубли) И (ПустоеЗначение(Запрос.Валюта) = 0) Тогда
		Параметры.ТаблицаОстатковРасчетовСКонтрагентами.КратностьВзаиморасчетов	= Запрос.Валюта.Кратность.Получить(Запрос.РасчетныйДокумент);
		Параметры.ТаблицаОстатковРасчетовСКонтрагентами.КурсВзаиморасчетов		= Запрос.Валюта.Курс.Получить(Запрос.РасчетныйДокумент);
		Параметры.ТаблицаОстатковРасчетовСКонтрагентами.ВалютнаяСумма			= Окр(Запрос.СуммаНачОст/Параметры.ТаблицаОстатковРасчетовСКонтрагентами.КурсВзаиморасчетов*Параметры.ТаблицаОстатковРасчетовСКонтрагентами.КратностьВзаиморасчетов, 2) * Коэф;
		ПостфиксСчета = "Вал";
	Иначе
		Параметры.ТаблицаОстатковРасчетовСКонтрагентами.КратностьВзаиморасчетов	= 1;
		Параметры.ТаблицаОстатковРасчетовСКонтрагентами.КурсВзаиморасчетов		= 1;
		Параметры.ТаблицаОстатковРасчетовСКонтрагентами.ВалютнаяСумма			= 0;
		ПостфиксСчета = "";
	КонецЕсли;
	//определим счет учета в зависимости от валюты и наличия аванса
	Если ВидРасчетов = "РасчетыСПоставщиками" Тогда
		СчетУчета = "РасчетыСПоставщиками";
		Если Параметры.ТаблицаОстатковРасчетовСКонтрагентами.Аванс			= 1 Тогда
			СчетУчета = "РасчетыПоАвансамВыданным";
		КонецЕсли;
	Иначе
		СчетУчета = "РасчетыСПокупателями";
		Если Параметры.ТаблицаОстатковРасчетовСКонтрагентами.Аванс			= 1 Тогда
			СчетУчета = "РасчетыПоАвансамПолученным";
		КонецЕсли;
	КонецЕсли;
	СчетУчета = СчетУчета + ПостфиксСчета;
	Параметры.ТаблицаОстатковРасчетовСКонтрагентами.СчетУчета			= СчетУчета;
КонецЦикла;

ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("РазделУчета", Параметры.РазделУчета);

Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	ВходящиеДанные.Установить("Дата", Параметры.ДатаВводаОстатков - 1);
Иначе
	ВходящиеДанные.Установить("Дата", Параметры.ДатаКонцаПериодаВыгрузки);
КонецЕсли;

ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
ВходящиеДанные.Установить("ВходящиеОстатки", Параметры.ТаблицаОстатковРасчетовСКонтрагентами);
ВыгрузитьПоПравилу(,,ВходящиеДанные,, "ВводНачальныхОстатков");




</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВыгрузитьОстаткиРасчетовСПодотчетнымиЛицами" ИспользуетсяПриЗагрузке="false">
			<Текст>Параметры.ТаблицаОстатковРасчетовСКонтрагентами.УдалитьСтроки();


ВыбНачПериода = Параметры.ДатаКонцаПериодаВыгрузки;
ВыбКонПериода = Параметры.ДатаКонцаПериодаВыгрузки;

Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	ВидОстатка = "НачОст";
Иначе
	ВидОстатка = "КонОст";
КонецЕсли;

Запрос = СоздатьОбъект("Запрос");
ТекстЗапроса = 
"//{{ЗАПРОС(Сформировать)
|Период с ВыбНачПериода по ВыбКонПериода;
|Без итогов;
|ФизЛицо = Регистр.Подотчетники.ФизЛицо;
|Валюта = Регистр.Подотчетники.Валюта;
|Сумма = Регистр.Подотчетники.Сумма;
|Функция СуммаНачОст = " + ВидОстатка + "(Сумма);
|Группировка ФизЛицо без групп;
|Группировка Валюта без групп;
|"//}}ЗАПРОС
;
// Если ошибка в запросе, то выход из процедуры
Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
	Возврат 0;
КонецЕсли;

ДатаКурса = ВыбКонПериода;
Пока Запрос.Группировка() = 1 Цикл
	Параметры.ТаблицаОстатковРасчетовСКонтрагентами.НоваяСтрока();
	Параметры.ТаблицаОстатковРасчетовСКонтрагентами.Контрагент			= Запрос.ФизЛицо;
	Если Запрос.СуммаНачОст &lt; 0 Тогда
		Коэф = -1;		
	Иначе		
		Коэф = 1;
	КонецЕсли;
	Если Запрос.Валюта &lt;&gt;  Параметры.Рубли Тогда
		Параметры.ТаблицаОстатковРасчетовСКонтрагентами.Валюта = Запрос.Валюта;
		Параметры.ТаблицаОстатковРасчетовСКонтрагентами.ВалютнаяСумма = Запрос.СуммаНачОст * Коэф;
		Кратность = Запрос.Валюта.Кратность.Получить(ДатаКурса);
		Курс = Запрос.Валюта.Курс.Получить(ДатаКурса);
		Сумма			= Окр(Запрос.СуммаНачОст*Курс/Кратность, 2) * Коэф;
		ПостфиксСчета = "Вал";
	Иначе		
		Сумма = Запрос.СуммаНачОст * Коэф;
		ПостфиксСчета = "";
	КонецЕсли;
	
	Если Коэф &lt; 0 Тогда
		Параметры.ТаблицаОстатковРасчетовСКонтрагентами.СуммаКт = Сумма;
	Иначе
		Параметры.ТаблицаОстатковРасчетовСКонтрагентами.Сумма = Сумма;
	КонецЕсли;
	
	Параметры.ТаблицаОстатковРасчетовСКонтрагентами.СчетУчета = "РасчетыСПодотчетнымиЛицами" + ПостфиксСчета;
КонецЦикла;

ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("РазделУчета", Параметры.РазделУчета);

Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	ВходящиеДанные.Установить("Дата", Параметры.ДатаВводаОстатков - 1);
Иначе
	ВходящиеДанные.Установить("Дата", Параметры.ДатаКонцаПериодаВыгрузки);
КонецЕсли;

ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
ВходящиеДанные.Установить("ВходящиеОстатки", Параметры.ТаблицаОстатковРасчетовСКонтрагентами);
ВыгрузитьПоПравилу(,,ВходящиеДанные,, "ВводНачальныхОстатков");


</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВыгрузитьОстаткиРасчетовСРаботниками" ИспользуетсяПриЗагрузке="false">
			<Текст>Параметры.ТаблицаОстатковРасчетовСРаботниками.УдалитьСтроки();

ВыбНачПериода = Параметры.ДатаКонцаПериодаВыгрузки;
ВыбКонПериода = Параметры.ДатаКонцаПериодаВыгрузки;

Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	ВидОстатка = "НачОст";
Иначе
	ВидОстатка = "КонОст";
КонецЕсли;

Запрос = СоздатьОбъект("Запрос");
ТекстЗапроса = 
"//{{ЗАПРОС(Сформировать)
|Период с ВыбНачПериода по ВыбКонПериода;
|Без итогов;
|ВидДеятельности = Регистр.Удержано.ВидДеятельности, Регистр.РасчетыПоОплатеТруда.ВидДеятельности;
|Работник = Регистр.Удержано.Работник, Регистр.РасчетыПоОплатеТруда.Работник;
|ВидРасчета = Регистр.Удержано.ВидНачисления, Регистр.РасчетыПоОплатеТруда.ВидРасчета;
|ВидУдержания = Регистр.Удержано.ВидУдержания, Регистр.РасчетыПоОплатеТруда.ВидУдержания;
|ПериодУдержания = Регистр.Удержано.МесяцНачисления, Регистр.РасчетыПоОплатеТруда.МесяцНачисления;
|Сумма = Регистр.РасчетыПоОплатеТруда.Сумма;
|ПодлежитУдержанию = Регистр.Удержано.Сумма;
|Функция СуммаНачОст = " + ВидОстатка + "(Сумма);
|Функция ПодлежитУдержаниюНачОст = " + ВидОстатка + "(ПодлежитУдержанию);
|Группировка Работник без групп;
|Группировка ВидРасчета без групп;
|Группировка ВидУдержания без групп;
|Группировка ВидДеятельности;
|Группировка ПериодУдержания;
|"//}}ЗАПРОС
;
// Если ошибка в запросе, то выход из процедуры
Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
	Возврат 0;
КонецЕсли;

ТаблицаНачислений = СоздатьОбъект("ТаблицаЗначений");
ТаблицаНачислений.НоваяКолонка("Работник");
ТаблицаНачислений.НоваяКолонка("ВидРасчета");
ТаблицаНачислений.НоваяКолонка("ВидДеятельности");
ТаблицаНачислений.НоваяКолонка("Сумма", "Число");

ТаблицаУдержаний = СоздатьОбъект("ТаблицаЗначений");
ТаблицаУдержаний.НоваяКолонка("Работник");
ТаблицаУдержаний.НоваяКолонка("ВидРасчета");
ТаблицаУдержаний.НоваяКолонка("ВидДеятельности");
ТаблицаУдержаний.НоваяКолонка("УдержаноНДФЛ", "Число");
ТаблицаУдержаний.НоваяКолонка("УдержаноДругое", "Число");
ТаблицаУдержаний.НоваяКолонка("Сумма", "Число");

Пока Запрос.Группировка() = 1 Цикл	
	Если Запрос.СуммаНачОст &lt;&gt; 0 Тогда
		ТаблицаНачислений.НоваяСтрока();
		ТаблицаНачислений.Работник = Запрос.Работник;
		ТаблицаНачислений.ВидРасчета = Запрос.ВидРасчета;
		ТаблицаНачислений.ВидДеятельности = Запрос.ВидДеятельности;
		ТаблицаНачислений.Сумма = Запрос.СуммаНачОст;
	КонецЕсли;
	
	Если Запрос.ПодлежитУдержаниюНачОст &lt;&gt; 0 Тогда
		ТаблицаУдержаний.НоваяСтрока();
		ТаблицаУдержаний.Работник = Запрос.Работник;
		ТаблицаУдержаний.ВидРасчета = Запрос.ВидРасчета;
		ТаблицаУдержаний.ВидДеятельности = Запрос.ВидДеятельности;
		Если Запрос.ВидУдержания.НДФЛ = 1 Тогда
			ТаблицаУдержаний.УдержаноНДФЛ = Запрос.ПодлежитУдержаниюНачОст;
		Иначе
			ТаблицаУдержаний.УдержаноДругое = Запрос.ПодлежитУдержаниюНачОст;
		КонецЕсли;	
	КонецЕсли;
КонецЦикла;
ТаблицаНачислений.Свернуть("Работник, ВидРасчета, ВидДеятельности", "Сумма");

ТаблицаСтрок = СоздатьОбъект("ТаблицаЗначений");
ТаблицаСтрок.НоваяКолонка("НомерСтрокиТЗ");

ТаблицаНачислений.ВыбратьСтроки();
Пока ТаблицаНачислений.ПолучитьСтроку() = 1 Цикл
	ТаблицаСтрок.УдалитьСтроки();
	
	СуммаКРаспределению = ТаблицаНачислений.Сумма;
	НомерТекущейСтроки = 0;
	ТаблицаУдержаний.ВыбратьСтроки();
	Пока ТаблицаУдержаний.ПолучитьСтроку() = 1 Цикл
		Если (ТаблицаУдержаний.Работник = ТаблицаНачислений.Работник)
			И (ТаблицаУдержаний.ВидРасчета = ТаблицаНачислений.ВидРасчета)
			И (ТаблицаУдержаний.ВидДеятельности = ТаблицаНачислений.ВидДеятельности) Тогда
			ТаблицаСтрок.НоваяСтрока();
			ТаблицаСтрок.НомерСтрокиТЗ = ТаблицаУдержаний.НомерСтроки;
		КонецЕсли;	
	КонецЦикла;
	Если ТаблицаСтрок.КоличествоСтрок() = 0 Тогда
		ТаблицаУдержаний.НоваяСтрока();
		ТаблицаУдержаний.Работник = ТаблицаНачислений.Работник;
		ТаблицаУдержаний.ВидРасчета = ТаблицаНачислений.ВидРасчета;
		ТаблицаУдержаний.ВидДеятельности = ТаблицаНачислений.ВидДеятельности;
		ТаблицаУдержаний.Сумма = ТаблицаНачислений.Сумма;
	Иначе
		СуммаПоСтроке = СуммаКРаспределению/ТаблицаСтрок.КоличествоСтрок();
		ТаблицаСтрок.ВыбратьСтроки();
		Пока ТаблицаСтрок.ПолучитьСтроку() = 1 Цикл			
			ТаблицаУдержаний.ПолучитьСтрокуПоНомеру(ТаблицаСтрок.НомерСтрокиТЗ);
			Если ТаблицаСтрок.КоличествоСтрок() = ТаблицаСтрок.НомерСтроки Тогда
				ТаблицаУдержаний.Сумма = СуммаКРаспределению;
				СуммаКРаспределению = 0;
			Иначе
				ТаблицаУдержаний.Сумма = СуммаПоСтроке;
				СуммаКРаспределению = СуммаКРаспределению - СуммаПоСтроке;
			КонецЕсли;
		КонецЦикла;		
	КонецЕсли;
КонецЦикла;

ТаблицаУдержаний.ВыбратьСтроки();
Пока ТаблицаУдержаний.ПолучитьСтроку() = 1 Цикл
	
	НоменклатурнаяГруппа = ?(ПустоеЗначение(ТаблицаУдержаний.ВидДеятельности) = 1, Параметры.ОсновнаяНоменклатурнаяГруппа, СокрЛП(ТаблицаУдержаний.ВидДеятельности.Наименование));
	
	Параметры.ТаблицаОстатковРасчетовСРаботниками.НоваяСтрока();
	Параметры.ТаблицаОстатковРасчетовСРаботниками.НоменклатурнаяГруппа = НоменклатурнаяГруппа;
	Параметры.ТаблицаОстатковРасчетовСРаботниками.РаботникОрганизации = ТаблицаУдержаний.Работник;
	Параметры.ТаблицаОстатковРасчетовСРаботниками.Сумма = ТаблицаУдержаний.Сумма;
	Параметры.ТаблицаОстатковРасчетовСРаботниками.ВидРасчета = ТаблицаУдержаний.ВидРасчета;
	Параметры.ТаблицаОстатковРасчетовСРаботниками.ПериодРегистрации = НачМесяца(ВыбКонПериода - 1);
	Если ТаблицаУдержаний.УдержаноНДФЛ &lt;&gt;  0 Тогда
		Параметры.ТаблицаОстатковРасчетовСРаботниками.ВидУдержания = "УдержаноНДФЛ";
		Параметры.ТаблицаОстатковРасчетовСРаботниками.СуммаПодлежитУдержанию = ТаблицаУдержаний.УдержаноНДФЛ;
	ИначеЕсли ТаблицаУдержаний.УдержаноДругое &lt;&gt;  0 Тогда
		Параметры.ТаблицаОстатковРасчетовСРаботниками.ВидУдержания = "УдержаноДругое";	
		Параметры.ТаблицаОстатковРасчетовСРаботниками.СуммаПодлежитУдержанию = ТаблицаУдержаний.УдержаноДругое;
	КонецЕсли;
	Параметры.ПараметрыАлгоритмов.Установить("ВидДеятельсности", ТаблицаУдержаний.ВидДеятельности);
	Параметры.ТаблицаОстатковРасчетовСРаботниками.ХарактерДеятельности = ОпределитьХарактерДеятельности();	
КонецЦикла;

ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("РазделУчета", Параметры.РазделУчета);

Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	ВходящиеДанные.Установить("Дата", Параметры.ДатаВводаОстатков - 1);
Иначе
	ВходящиеДанные.Установить("Дата", Параметры.ДатаКонцаПериодаВыгрузки);
КонецЕсли;

ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
ВходящиеДанные.Установить("ВходящиеОстатки", Параметры.ТаблицаОстатковРасчетовСРаботниками);
ВыгрузитьПоПравилу(,,ВходящиеДанные,, "ВводНачальныхОстатков");


</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВыгрузитьСведенияОбИБ" ИспользуетсяПриЗагрузке="false">
			<Текст>Идентификатор = "ИдентификаторКонфигурации";
Значение = глИдентификаторКонфигурации();
УстановитьАтрибут(rootNode, Идентификатор, Значение);

//**********************************************************
Идентификатор = "Конфигурация";
Значение = Метаданные.Идентификатор;
УстановитьАтрибут(rootNode, Идентификатор, Значение);

//**********************************************************
Идентификатор = "НомерРелиза";
Значение = Константа.НомерРелиза;
УстановитьАтрибут(rootNode, Идентификатор, Значение);

//**********************************************************
Идентификатор = "Организация";
Значение = Константа.ФИО;
УстановитьАтрибут(rootNode, Идентификатор, Значение);

//**********************************************************
Идентификатор = "ИНН";
Значение = Константа.ИНН;
УстановитьАтрибут(rootNode, Идентификатор, Значение);

//**********************************************************
Идентификатор = "КПП";
Значение = "";
УстановитьАтрибут(rootNode, Идентификатор, Значение);

//**********************************************************
Идентификатор = "УчетЗарплатыВоВнешнейПрограмме";
Значение = ?(Константа.УчетЗарплатыВоВнешнейПрограмме = Перечисление.Булево.Нет, 0, 0);
УстановитьАтрибут(rootNode, Идентификатор, Значение);


</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьТаблУчетаРезультатамиЗапроса" ИспользуетсяПриЗагрузке="false">
			<Текст>Запрос = Параметры.ПараметрыАлгоритмов.Получить("Запрос");
ТаблУчета = Параметры.ПараметрыАлгоритмов.Получить("ТаблУчета");
БезНДС = Параметры.ПараметрыАлгоритмов.Получить("БезНДС");

Пока Запрос.Группировка(1) = 1 Цикл
	Пока Запрос.Группировка(2) = 1 Цикл
		Пока Запрос.Группировка(3) = 1 Цикл
			Пока Запрос.Группировка(4) = 1 Цикл
				Пока Запрос.Группировка(5) = 1 Цикл
					Пока Запрос.Группировка(6) = 1 Цикл
						ТаблУчета.НоваяСтрока();
						ТаблУчета.Документ = Запрос.Документ;
						
						Если Запрос.Документ = Запрос.ДокументОплаты Тогда // графы 6 и 7
							ТаблУчета.СодержОперации = глСодержаниеОперации(Запрос.ДокументОплаты, Запрос.НомерСтроки, 1);
							Параметры.ПараметрыАлгоритмов.Установить("НомерДокументаОплаты", Запрос.ДокументОплаты);
							Параметры.ПараметрыАлгоритмов.Установить("ДатаДокументаОплаты", Запрос.Документ.ДатаДок);
							Параметры.ПараметрыАлгоритмов.Установить("НомерСтрокиДокументаОплаты", Запрос.НомерСтроки);
							ТаблУчета.ДатаНомерДок = НомерДокументаОплаты();
 
						Иначе // Если ПустоеЗначение(Запрос.ДокументОплаты) = 1 Тогда
							ТаблУчета.СодержОперации = глСодержаниеОперации(Запрос.Документ,, 1);
							Параметры.ПараметрыАлгоритмов.Установить("НомерДокументаОплаты", Запрос.Документ);
							Параметры.ПараметрыАлгоритмов.Установить("ДатаДокументаОплаты", Запрос.Документ.ДатаДок);
							Параметры.ПараметрыАлгоритмов.Установить("НомерСтрокиДокументаОплаты", 0);
							ТаблУчета.ДатаНомерДок = НомерДокументаОплаты();
						КонецЕсли;
						
						ТаблУчета.Расходы = Запрос.Сумма;
						Если БезНДС = 0 Тогда
							ТаблУчета.НДС = Запрос.СуммаНДС;
						КонецЕсли;
						
						Основание = "";
						
						ТаблУчета.НомерКвартала = Цел(ДатаМесяц(КонКвартала(Запрос.Документ.ДатаДок))/3);
						
						Если Запрос.ВидРесурса = Перечисление.ВидыМатериальныхРесурсов.Товар Тогда
							ТаблУчета.Описание = "Признаны расходы на приобретение товаров """ + Запрос.Номенклатура + """";
							Основание = "Расходы по оплате стоимости приобретенных товаров";
							
						ИначеЕсли Запрос.ВидРесурса = Перечисление.ВидыМатериальныхРесурсов.НематериальныйАктив Тогда
							ТаблУчета.Описание = "Признаны расходы на приобретение нематериального актива """ + Запрос.Номенклатура + """";
							Основание = ТаблУчета.Описание;
							ТаблУчета.СодержОперации = "";
							
						Иначе
							ТаблУчета.Описание = "Признаны расходы на приобретение товаров (работ, услуг) """ + Запрос.Номенклатура + """";
							Основание = "Материальные расходы";
						КонецЕсли;
						
						ТаблУчета.СодержОперации = ?(ПустоеЗначение(ТаблУчета.СодержОперации) = 1, Основание, ТаблУчета.СодержОперации + " / " + Основание);
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
КонецЦикла;
</Текст>
		</Алгоритм>
		<Алгоритм Имя="НомерДокументаОплаты" ИспользуетсяПриЗагрузке="false">
			<Текст>Док = Параметры.ПараметрыАлгоритмов.Получить("НомерДокументаОплаты");
ДатаДок = Параметры.ПараметрыАлгоритмов.получить("ДатаДокументаОплаты");
НомерСтроки = Параметры.ПараметрыАлгоритмов.Получить("НомерСтрокиДокументаОплаты");

ДатаДокумента = "";
Если ПустоеЗначение(ДатаДок) = 0 Тогда
	ДатаДок = Формат(ДатаДок,"ДДДММГГГГ") + ?(ПустоеЗначение(ДатаДок) = 1, "", " г.");
Иначе
	ДатаДок = "";
КонецЕсли;

ПечНомер = "";

Если ТипЗначенияСтр(Док) &lt;&gt; "Документ" Тогда  //если передали номер
	ПечНомер = "№ " + Док + " от " + ДатаДок;
	Возврат ПечНомер;
КонецЕсли;

Если ПустоеЗначение(Док) = 0 Тогда  //а если пустое значение то б/н
	Если глЕстьРеквизитШапки("ДокументПодтверждающийФактОплаты", Док.Вид()) = 1 Тогда
		Если ТипЗначенияСтр(Док.ДокументПодтверждающийФактОплаты) = "Документ" Тогда
			Параметры.ПараметрыАлгоритмов.Установить("ДокументОплаты", Док.ДокументПодтверждающийФактОплаты);
			ПечНомер = ПредставлениеДокумента();
			Возврат ПечНомер;
			
		Иначе
			Если глЕстьРеквизитШапки("РеквизитыПлатежногоДокумента", Док.Вид()) = 1 Тогда
				ПечНомер = СокрЛП(Док.РеквизитыПлатежногоДокумента);
				Если ПустоеЗначение(ПечНомер) = 0 Тогда
					Возврат ПечНомер;
				КонецЕсли;
				
			Иначе
				ПечНомер = СокрЛП(Док.ДокументПодтверждающийФактОплаты);
				ДатаДокумента = Док.ДатаДок;
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли глЕстьРеквизитШапки("ДокументОплаты", Док.Вид()) = 1 Тогда // зачеты авансов
		Если глЕстьРеквизитШапки("ДокументПодтверждающийФактОплаты", Док.ДокументОплаты.Вид()) = 1 Тогда
			Если ТипЗначенияСтр(Док.ДокументОплаты.ДокументПодтверждающийФактОплаты) = "Документ" Тогда
				Параметры.ПараметрыАлгоритмов.Установить("ДокументОплаты", Док.ДокументОплаты.ДокументПодтверждающийФактОплаты);
				ПечНомер = ПредставлениеДокумента();
				Возврат ПечНомер;
				
			Иначе
				ПечНомер = СокрЛП(Док.ДокументОплаты.ДокументПодтверждающийФактОплаты);
				ДатаДокумента = Док.ДокументОплаты.ДокументПодтверждающийФактОплаты.ДатаДок;
			КонецЕсли;
			
		ИначеЕсли глЕстьРеквизитМнЧ("ДокументПодтверждающийФактОплаты", Док.Вид()) = 1 Тогда
			Если НомерСтроки &gt; 0 Тогда
				Если Док.ПолучитьСтрокуПоНомеру(НомерСтроки) = 1 Тогда
					ПечНомер = СокрЛП(Док.ДокументПодтверждающийФактОплаты);
				КонецЕсли;
			КонецЕсли;
			
		Иначе
			Параметры.ПараметрыАлгоритмов.Установить("ДокументОплаты", Док.ДокументОплаты);
			ПечНомер = ПредставлениеДокумента();
			Возврат ПечНомер;
		КонецЕсли;
		
	ИначеЕсли глЕстьРеквизитМнЧ("ДокументПодтверждающийФактОплаты", Док.Вид()) = 1 Тогда
		Если НомерСтроки &gt; 0 Тогда
			Если Док.ПолучитьСтрокуПоНомеру(НомерСтроки) = 1 Тогда
				ПечНомер = СокрЛП(Док.ДокументПодтверждающийФактОплаты);
				ДатаДокумента = Док.ДокументПодтверждающийФактОплаты.ДатаДок;
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли глЕстьРеквизитМнЧ("НомерДокумента", Док.Вид()) = 1 Тогда // авансовый отчет
		Если НомерСтроки &gt; 0 Тогда
			Если Док.ПолучитьСтрокуПоНомеру(НомерСтроки) = 1 Тогда
				Если (ПустоеЗначение(Док.НомерДокумента) = 0) и (ПустоеЗначение(Док.ДатаДокумента) = 0) Тогда
					ПечНомер = "№ " + СокрЛП(Док.НомерДокумента) + " от " + Формат(Док.ДатаДокумента ,"ДДДММГГГГ") + " г.";
					Возврат ПечНомер;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	Иначе // ПКО, РКО
		Если Константа.ПредпринимательВедетКассовуюКнигу = 0 Тогда
			Если глЕстьРеквизитШапки("Приложение", Док.Вид()) = 1 Тогда
				ПечНомер = СокрЛП(Док.Приложение);
				
			Иначе
				Параметры.ПараметрыАлгоритмов.Установить("ДокументОплаты", Док);
				ПечНомер = ПредставлениеДокумента();
				Возврат ПечНомер;
			КонецЕсли;
			
		Иначе
			Параметры.ПараметрыАлгоритмов.Установить("ДокументОплаты", Док);
			ПечНомер = ПредставлениеДокумента();
			Возврат ПечНомер;
		КонецЕсли;
	КонецЕсли;
	
	Если ПечНомер = "" Тогда
		ПечНомер = глПреобразоватьНомерДок(Док.НомерДок);
	КонецЕсли;
	
КонецЕсли;

Если ПустоеЗначение(ДатаДок) = 0 Тогда
	ДатаДок = Формат(ДатаДок,"ДДДММГГГГ") + ?(ПустоеЗначение(ДатаДок) = 1, "", " г.");
КонецЕсли;

Если ПустоеЗначение(ДатаДок) = 1 Тогда
	ДатаДок = Формат(ДатаДокумента,"ДДДММГГГГ") + ?(ПустоеЗначение(ДатаДокумента) = 1, "", " г.");
КонецЕсли;

ПечНомер = ?(Лев(СокрЛП(ПечНомер),1) = "№", "", "№ ") + ПечНомер + " от " + ДатаДок;
	
Возврат ПечНомер;
</Текст>
		</Алгоритм>
		<Алгоритм Имя="НомерШкалыСтраховыхВзносовПФР" ИспользуетсяПриЗагрузке="false">
			<Текст>ФизЛицо = Параметры.ПараметрыАлгоритмов.Получить("ФизЛицо");

ДатаРождения = ФизЛицо.ДатаРождения;
Если ПустоеЗначение(ДатаРождения) = 1 Тогда
	Возврат -1
ИначеЕсли ДатаРождения &gt;= РабочаяДата() Тогда
	Возврат -2
Иначе
	ГодРождения = ДатаГод(ДатаРождения)
КонецЕсли;

Пол = ВРег(Строка(ФизЛицо.Пол));
Если ПустоеЗначение(Пол) = 1 Тогда
	Возврат -1
КонецЕсли;

Если Найти(Пол,"М") &gt; 0 Тогда  // мужчины
	Если ГодРождения &lt; 1953 Тогда
		Возврат 1
	ИначеЕсли ГодРождения &lt; 1967 Тогда
		Возврат 2
	Иначе
		Возврат 3
	КонецЕсли;
ИначеЕсли Найти(Пол,"Ж") &gt; 0 Тогда // женщины
	Если ГодРождения &lt; 1957 Тогда
		Возврат 1
	ИначеЕсли ГодРождения &lt; 1967 Тогда
		Возврат 2
	Иначе
		Возврат 3
	КонецЕсли;
КонецЕсли;

Возврат -1
</Текст>
		</Алгоритм>
		<Алгоритм Имя="ОпределитьПериод" ИспользуетсяПриЗагрузке="false">
			<Текст>МесяцПериода = Параметры.ПараметрыАлгоритмов.Получить("МесяцПериода");
Если ПустоеЗначение(МесяцПериода) = 1 Тогда
	Возврат Дата(0);
КонецЕсли;

ГодПериода = Прав(МесяцПериода, 2);
ИмяМесяца = Лев(МесяцПериода, СтрДлина(МесяцПериода) - 3);
Если ИмяМесяца = "Январь" Тогда
	КоличествоМесяцев = 0;
ИначеЕсли ИмяМесяца = "Февраль" Тогда
	КоличествоМесяцев = 1;
ИначеЕсли ИмяМесяца = "Март" Тогда
	КоличествоМесяцев = 2;
ИначеЕсли ИмяМесяца = "Апрель" Тогда
	КоличествоМесяцев = 3;
ИначеЕсли ИмяМесяца = "Май" Тогда
	КоличествоМесяцев = 4;
ИначеЕсли ИмяМесяца = "Июнь" Тогда
	КоличествоМесяцев = 5;
ИначеЕсли ИмяМесяца = "Июль" Тогда
	КоличествоМесяцев = 6;
ИначеЕсли ИмяМесяца = "Август" Тогда
	КоличествоМесяцев = 7;
ИначеЕсли ИмяМесяца = "Сентябрь" Тогда
	КоличествоМесяцев = 8;
ИначеЕсли ИмяМесяца = "Октябрь" Тогда
	КоличествоМесяцев = 9;
ИначеЕсли ИмяМесяца = "Ноябрь" Тогда
	КоличествоМесяцев = 10;
ИначеЕсли ИмяМесяца = "Декабрь" Тогда
	КоличествоМесяцев = 11;
КонецЕсли;

ТочкаОтсчета = Дата("01.01." +ГодПериода);
ДатаПериода = КонМесяца(ДобавитьМесяц(ТочкаОтсчета, КоличествоМесяцев));
Возврат ДатаПериода;





	
</Текст>
		</Алгоритм>
		<Алгоритм Имя="ОпределитьХарактерДеятельности" ИспользуетсяПриЗагрузке="false">
			<Текст>ВидДеятельности = Параметры.ПараметрыАлгоритмов.Получить("ВидДеятельсности");

Если ПустоеЗначение(ВидДеятельности) = 1 Тогда
	Возврат "ОптоваяТорговля";
КонецЕсли;

Если ТипЗначенияСтр(Параметры.ПрочиеПараметры) &lt;&gt; "ТаблицаЗначений" Тогда
	Возврат "ОптоваяТорговля";
КонецЕсли;

Параметры.ПрочиеПараметры.ВыбратьСтроки();
Стр = "";
Параметры.ПрочиеПараметры.НайтиЗначение(ВидДеятельности, Стр, "ВидДеятельности");
ХарактерДеятельсности = Параметры.ПрочиеПараметры.ПолучитьЗначение(Стр, "ХарактерДеятельности");

Возврат ХарактерДеятельсности;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ОтобратьСтрокиТаблицы" ИспользуетсяПриЗагрузке="false">
			<Текст>Таб = Параметры.ПараметрыАлгоритмов.Получить("Таб");
СписокКолонок = Параметры.ПараметрыАлгоритмов.Получить("СписокКолонок");

// Создадим отдельную таблицу для обработки данных.
Т = СоздатьОбъект("ТаблицаЗначений");
Таб.Выгрузить(Т);

Если Т.КоличествоСтрок() = 0 Тогда
	Возврат Т;
КонецЕсли;

Если СписокКолонок.РазмерСписка() = 0 Тогда
	Возврат Т;
КонецЕсли;

// Отсортируем полученную таблицу по переданным в функцию колонкам
ИменаКолонок = "";
ИмяКолонки = "";
Для а = 1 по СписокКолонок.РазмерСписка() Цикл
	СписокКолонок.ПолучитьЗначение(а, ИмяКолонки);
	ИменаКолонок = ИменаКолонок + ?(ИменаКолонок="","",",") + ИмяКолонки;
КонецЦикла;
Т.Сортировать(ИменаКолонок);

// Определим начальную и конечную строки таблицы, в которых есть указанные
// значения.
НачСтрока = 0;
КонСтрока = 0;

// Пропустим первые ненужные строки таблицы.
НачСтрокаПоиска = 0;
ИмяПервойКолонки = "";
Если Т.НайтиЗначение(СписокКолонок.ПолучитьЗначение(1, ИмяПервойКолонки),
	НачСтрокаПоиска, ИмяПервойКолонки) = 0 Тогда
	
	Т.УдалитьСтроки();
	Возврат Т;
КонецЕсли;

Для а = НачСтрокаПоиска по Т.КоличествоСтрок() Цикл
	СтрокаУдовлетворяетУсловиям = 1;
	Для б = 1 по СписокКолонок.РазмерСписка() Цикл
		ИмяКолонки = "";
		ЗначениеЯчейки = СписокКолонок.ПолучитьЗначение(б, ИмяКолонки);
		Если (Т.ПолучитьЗначение(а, ИмяКолонки) &lt;&gt; ЗначениеЯчейки) Тогда
			СтрокаУдовлетворяетУсловиям = 0;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Если СтрокаУдовлетворяетУсловиям = 1 Тогда
		Если НачСтрока = 0 Тогда // начальная строка пока не найдена
			НачСтрока = а;
		КонецЕсли;
	Иначе
		Если НачСтрока &gt; 0 Тогда // начальная строка уже была найдена
			КонСтрока = а - 1;
			Прервать;
		КонецЕсли;
	КонецЕсли;
КонецЦикла;

Если НачСтрока = 0 Тогда // ни одной строки не найдено
	Т.УдалитьСтроки();
	Возврат Т;
КонецЕсли;

Если КонСтрока = 0 Тогда // последняя строка таблицы удовлетворяла условиям
	КонСтрока = Т.КоличествоСтрок();
КонецЕсли;

Результат = СоздатьОбъект("ТаблицаЗначений");
Т.Выгрузить(Результат, НачСтрока, КонСтрока);
Возврат Результат;

</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПолучитьДокументыОплаты" ИспользуетсяПриЗагрузке="false">
			<Текст>ВидДеятельности = Параметры.ПараметрыАлгоритмов.Получить("ВидДеятельности");
ОблагаетсяНДС = Параметры.ПараметрыАлгоритмов.Получить("ОблагаетсяНДС");
Док = Параметры.ПараметрыАлгоритмов.Получить("Док");
ВМР =Параметры.ПараметрыАлгоритмов.Получить("ВМР");
МР = Параметры.ПараметрыАлгоритмов.Получить("МР");
ДокОплаты = Параметры.ПараметрыАлгоритмов.Получить("ДокОплаты");
НомСтроки = Параметры.ПараметрыАлгоритмов.Получить("НомСтроки");
ТекДок = Параметры.ПараметрыАлгоритмов.Получить("ТекДок");
ДокументыОплаты = Параметры.ПараметрыАлгоритмов.Получить("ДокументыОплаты");

ДатаПереходаНаУСН = Параметры.ПараметрыАлгоритмов.Получить("ДатаПереходаНаУСН");

Обороты = СоздатьОбъект("Регистр.Обороты");
ТабОплаты = СоздатьОбъект("ТаблицаЗначений");
ТабОплаты.НоваяКолонка("ВидДеятельности");
ТабОплаты.НоваяКолонка("ОблагаетсяНДС");
ТабОплаты.НоваяКолонка("ДокОплаты", "Документ");
ТабОплаты.НоваяКолонка("НомСтроки");

ТаблицаОборотов = СоздатьОбъект("ТаблицаЗначений");
ТаблицаОборотов.НоваяКолонка("МР");
ТаблицаОборотов.НоваяКолонка("ВМР");
ТаблицаОборотов.НоваяКолонка("Док");
ТаблицаОборотов.НоваяКолонка("ДокОплаты", "Документ");
ТаблицаОборотов.НоваяКолонка("НомСтроки");

Если ТекДок.ДатаДок &lt; ДатаПереходаНаУСН Тогда
	КонВыборки = ДатаПереходаНаУСН - 1;
Иначе
	КонВыборки = ТекДок;
КонецЕсли;

Если ПустоеЗначение(ДокОплаты) = 0 Тогда
	ТабОплаты.НоваяСтрока();
	ТабОплаты.ВидДеятельности = ВидДеятельности;
	ТабОплаты.ОблагаетсяНДС = ОблагаетсяНДС;
	ТабОплаты.ДокОплаты = ДокОплаты;
	ТабОплаты.НомСтроки = НомСтроки;
	
Иначе
	Расходы = СоздатьОбъект("Регистр.Расходы");
	Если ТипЗначенияСтр(ВидДеятельности) = "Справочник" Тогда
		Расходы.УстановитьЗначениеФильтра("ВидДеятельности", ВидДеятельности);
		Расходы.УстановитьЗначениеФильтра("ОблагаетсяНДС", ОблагаетсяНДС);
		
	Иначе
		глФильтрПоВидуДеятельности(Расходы);
		глФильтрПоОперациямОблагаемымНДС(Расходы);
	КонецЕсли;
	Расходы.УстановитьЗначениеФильтра("Номенклатура", МР);
	Расходы.УстановитьЗначениеФильтра("ВидМатериальногоРесурса", ВМР);
	Расходы.УстановитьЗначениеФильтра("ДокументПоступления", Док);
	Расходы.ВыбратьДвижения(Док, КонВыборки);
	Пока Расходы.ПолучитьДвижение() = 1 Цикл
		Если Расходы.Приход = 1 Тогда
			ТабОплаты.НоваяСтрока();
			ТабОплаты.ВидДеятельности = Расходы.ВидДеятельности;
			ТабОплаты.ОблагаетсяНДС = Расходы.ОблагаетсяНДС;
			ТабОплаты.ДокОплаты = Расходы.ДокументОплаты;
			ТабОплаты.НомСтроки = Расходы.НомерСтроки;
		КонецЕсли;
	КонецЦикла;
КонецЕсли;

ТабОплаты.Свернуть("ВидДеятельности,ОблагаетсяНДС,ДокОплаты,НомСтроки", "");
ТабОплаты.Сортировать("+ДокОплаты", 1);
ТабОплаты.ВыбратьСтроки();
Пока ТабОплаты.ПолучитьСтроку() = 1 Цикл
	Если ПустоеЗначение(ТабОплаты.ДокОплаты) = 0 Тогда
		ДокументыОплаты.НоваяСтрока();
		ДокументыОплаты.ДокументОплаты = ТабОплаты.ДокОплаты;
		ДокументыОплаты.НомСтроки = ТабОплаты.НомСтроки;
	КонецЕсли;
	
	
	// По оборотам выберем израсходованные ресурсы. Сторнируем оборот и расход израсходованных ресурсов
	ТаблицаОборотов.УдалитьСтроки();
	
	Обороты.УстановитьЗначениеФильтра("ВидДеятельности", ТабОплаты.ВидДеятельности);
	Обороты.УстановитьЗначениеФильтра("ОблагаетсяНДС", ТабОплаты.ОблагаетсяНДС);
	Обороты.УстановитьЗначениеФильтра("ПолученныйРесурс", МР);
	Обороты.УстановитьЗначениеФильтра("ВидПолученногоРесурса", ВМР);
	Обороты.УстановитьЗначениеФильтра("ДокументПоступленияПолучено", Док);
	
	// В таблице оборотов собираются материальные ресурсы, их стоимость и количество,
	// израсходованные на изготовление обрабатываемого материального ресурса "МР".
	
	Обороты.ВыбратьДвижения(Док,КонВыборки);
	Пока Обороты.ПолучитьДвижение() = 1 Цикл
		Если (Обороты.ДокументОплаты = ТабОплаты.ДокОплаты) и (Обороты.НомерСтроки = ТабОплаты.НомСтроки) Тогда
			ТаблицаОборотов.НоваяСтрока();
			ТаблицаОборотов.МР = Обороты.ИзрасходованныйРесурс;
			ТаблицаОборотов.ВМР = Обороты.ВидИзрасходованногоРесурса;
			ТаблицаОборотов.Док = Обороты.ДокументПоступленияИзрасходовано;
			ТаблицаОборотов.ДокОплаты = Обороты.ДокументОплаты;
			ТаблицаОборотов.НомСтроки = Обороты.НомерСтроки;
		КонецЕсли;
	КонецЦикла;
	ТаблицаОборотов.Свернуть("Док,МР,ВМР,ДокОплаты,НомСтроки", "");
	
	ТаблицаОборотов.ВыбратьСтроки();
	Пока ТаблицаОборотов.ПолучитьСтроку() = 1 Цикл
		Параметры.ПараметрыАлгоритмов.Установить("ВидДеятельности", ТабОплаты.ВидДеятельности);
		Параметры.ПараметрыАлгоритмов.Установить("ОблагаетсяНДС", ТабОплаты.ОблагаетсяНДС);
		Параметры.ПараметрыАлгоритмов.Установить("Док", ТаблицаОборотов.Док);
		Параметры.ПараметрыАлгоритмов.Установить("ВМР", ТаблицаОборотов.ВМР);
		Параметры.ПараметрыАлгоритмов.Установить("МР", ТаблицаОборотов.МР);
		Параметры.ПараметрыАлгоритмов.Установить("ДокОплаты", ТаблицаОборотов.ДокОплаты);
		Параметры.ПараметрыАлгоритмов.Установить("НомСтроки", ТаблицаОборотов.НомСтроки);
		Параметры.ПараметрыАлгоритмов.Установить("ТекДок", ТекДок);
		Параметры.ПараметрыАлгоритмов.Установить("ДокументыОплаты", ДокументыОплаты);
		
		ПолучитьДокументыОплаты();
		ДокументыОплаты = Параметры.ПараметрыАлгоритмов.Получить("ДокументыОплаты");
	КонецЦикла;
КонецЦикла;
Параметры.ПараметрыАлгоритмов.Установить("ДокументыОплаты", ДокументыОплаты);


</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПолучитьКомментарийДокумента" ИспользуетсяПриЗагрузке="false">
			<Текст>Значение = "# Перенесено из 1С:Предпринимателя 7.7 #" + ?(ПустоеЗначение(Параметры.ПостфиксКомментария) = 1, "", " &lt; " + Параметры.ПостфиксКомментария + " &gt;");</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПолучитьКомментарийДокументаРасчетов" ИспользуетсяПриЗагрузке="false">
			<Текст>Значение = "# Перенесено из 1С:Предпринимателя 7.7 #";</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПолучитьПаспортныеДанные" ИспользуетсяПриЗагрузке="false">
			<Текст>ВходящиеДанные = СоздатьОбъект("СписокЗначений");
УдЛичности = глУдостоверениеЛичности(Параметры.ПаспортныеДанные);
УдЛичности.ВыбратьСтроки();
УдЛичности.ПолучитьСтроку();

Если ПустоеЗначение(УдЛичности.ВидДокумента) = 0 Тогда
	ВходящиеДанные.Установить("Наименование", УдЛичности.Наименование);
	ВходящиеДанные.Установить("ДокументСерия", УдЛичности.ШаблонСерия);
	ВходящиеДанные.Установить("ДокументНомер", УдЛичности.ШаблонНомер);
	ВходящиеДанные.Установить("ДокументКемВыдан", УдЛичности.Выдан);
	ВходящиеДанные.Установить("ДокументДатаВыдачи", УдЛичности.ДатаВыдачи);
	ВходящиеДанные.Установить("ДокументВид", УдЛичности.ВидДокумента);
КонецЕсли;

Возврат ВходящиеДанные;

</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПолучитьСтавкиЕСН" ИспользуетсяПриЗагрузке="false">
			<Текст>Налог = Параметры.ПараметрыАлгоритмов.Получить("Налог");
КонецГода = Параметры.ПараметрыАлгоритмов.Получить("КонецГода");
НомерШкалыВзносов = Параметры.ПараметрыАлгоритмов.Получить("НомерШкалыВзносов");
СтавкиНалога = Параметры.ПараметрыАлгоритмов.Получить("СтавкиНалога");
ПределыДоходовЕСН = Параметры.ПараметрыАлгоритмов.Получить("ПределыДоходовЕСН");

Результат = СоздатьОбъект("СписокЗначений");

Для Сч = 1 по 10 Цикл
	Результат.ДобавитьЗначение(Сч, 0);
КонецЦикла;	

ИмяСтавки = "Процент";
НомерСтавки = 1;

Если НомерШкалыВзносов &gt; 1 Тогда
	ИмяСтавки = ИмяСтавки + Строка(НомерШкалыВзносов);
КонецЕсли;

Ставки = СоздатьОбъект("Справочник.СтавкиНалогов");
Ставки.ИспользоватьВладельца(Налог);
Ставки.ПорядокКодов();
Ставки.ВыбратьЭлементы();
Пока Ставки.ПолучитьЭлемент() = 1 Цикл
	Ставка = Ставки.ПолучитьАтрибут(ИмяСтавки).Получить(КонецГода);
	СуммаПредела = Ставки.Предел.Получить(КонецГода);
	
	Если СтавкиНалога = 1 Тогда
		Результат.УстановитьЗначение(НомерСтавки, Ставка);
		
	ИначеЕсли ПределыДоходовЕСН = 1 Тогда
		Результат.УстановитьЗначение(НомерСтавки, СуммаПредела);
	КонецЕсли;
	
	НомерСтавки = НомерСтавки + 1;
КонецЦикла;

Возврат Результат;
</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПолучитьСтруктуруАдреса" ИспользуетсяПриЗагрузке="false">
			<Текст>	Адрес = ВходящиеДанные.Получить("Адрес");
	АдресСписком = глРазложить(Адрес);
	
	Если СтрКоличествоСтрок(Адрес) &lt;&gt; 1 Тогда     // недолжно быть переводов строк
		АдресСоответствуетТребованиямМНС = 0;
		
	ИначеЕсли СтрЧислоВхождений(Адрес, ",") &lt;&gt; 9 Тогда // должно быть 9 запятых
		АдресСоответствуетТребованиямМНС = 0;
		
	ИначеЕсли СтрДлина(АдресСписком.ПолучитьЗначение(1))  &gt; 3  Тогда   // код страны не &gt; 3 символов
		АдресСоответствуетТребованиямМНС = 0;
		
	ИначеЕсли СтрДлина(АдресСписком.ПолучитьЗначение(2))  &gt; 6  Тогда   // индекс не &gt; 6 символов
		АдресСоответствуетТребованиямМНС = 0;
		
	ИначеЕсли СтрДлина(АдресСписком.ПолучитьЗначение(3))  &gt; 30 Тогда   // наим.региона не &gt; 30 символов
		АдресСоответствуетТребованиямМНС = 0;
		
	ИначеЕсли СтрДлина(АдресСписком.ПолучитьЗначение(4))  &gt; 35 Тогда   // наим.района не &gt; 35 символов
		АдресСоответствуетТребованиямМНС = 0;
		
	ИначеЕсли СтрДлина(АдресСписком.ПолучитьЗначение(5))  &gt; 35 Тогда   // наим.города не &gt; 35 символов
		АдресСоответствуетТребованиямМНС = 0;
		
	ИначеЕсли СтрДлина(АдресСписком.ПолучитьЗначение(6))  &gt; 45 Тогда   // наим.нас.пункта не &gt; 45 символов
		АдресСоответствуетТребованиямМНС = 0;
		
	ИначеЕсли СтрДлина(АдресСписком.ПолучитьЗначение(7))  &gt; 45 Тогда   // наим.улицы не &gt; 45 символов
		АдресСоответствуетТребованиямМНС = 0;
		
	ИначеЕсли СтрДлина(АдресСписком.ПолучитьЗначение(8))  &gt; 10  Тогда   // номер дома не &gt; 10 символов
		АдресСоответствуетТребованиямМНС = 0;
		
	ИначеЕсли СтрДлина(АдресСписком.ПолучитьЗначение(9))  &gt; 10  Тогда   // номер корпуса не &gt; 10 символов
		АдресСоответствуетТребованиямМНС = 0;
		
	ИначеЕсли СтрДлина(АдресСписком.ПолучитьЗначение(10)) &gt; 10  Тогда   // номер квартиры не &gt; 10 символов
		АдресСоответствуетТребованиямМНС = 0;
		
	Иначе
		АдресСоответствуетТребованиямМНС = 1;
	КонецЕсли;
	
	Если АдресСоответствуетТребованиямМНС = 1 Тогда
		ВходящиеДанные.Установить("Поле1", АдресСписком.ПолучитьЗначение(2)); // индекс
		ВходящиеДанные.Установить("Поле2", АдресСписком.ПолучитьЗначение(3)); // регион
		ВходящиеДанные.Установить("Поле3", АдресСписком.ПолучитьЗначение(4)); // район
		ВходящиеДанные.Установить("Поле4", АдресСписком.ПолучитьЗначение(5)); // город
		ВходящиеДанные.Установить("Поле5", АдресСписком.ПолучитьЗначение(6)); // населенный пункт
		ВходящиеДанные.Установить("Поле6", АдресСписком.ПолучитьЗначение(7)); // улица
		ВходящиеДанные.Установить("Поле7", АдресСписком.ПолучитьЗначение(8)); // дом
		ВходящиеДанные.Установить("Поле8", АдресСписком.ПолучитьЗначение(9)); // корпус
		ВходящиеДанные.Установить("Поле9", АдресСписком.ПолучитьЗначение(10)); // квартира
		
		ТекПредставление = "";

		Если СокрЛП(ВходящиеДанные.Получить("Поле1")) &lt;&gt; "" Тогда
			ТекПредставление = ТекПредставление + ", " + СокрЛП(ВходящиеДанные.Получить("Поле1"));
		КонецЕсли;

		Если СокрЛП(ВходящиеДанные.Получить("Поле2")) &lt;&gt; "" Тогда
			ТекПредставление = ТекПредставление + ", " + СокрЛП(ВходящиеДанные.Получить("Поле2"));
		КонецЕсли;

		Если СокрЛП(ВходящиеДанные.Получить("Поле3")) &lt;&gt; "" Тогда
			ТекПредставление = ТекПредставление + ", " + СокрЛП(ВходящиеДанные.Получить("Поле3"));
		КонецЕсли;

		Если СокрЛП(ВходящиеДанные.Получить("Поле4")) &lt;&gt; "" Тогда
			ТекПредставление = ТекПредставление + ", " + СокрЛП(ВходящиеДанные.Получить("Поле4"));
		КонецЕсли;

		Если СокрЛП(ВходящиеДанные.Получить("Поле5")) &lt;&gt; "" Тогда
			ТекПредставление = ТекПредставление + ", " + СокрЛП(ВходящиеДанные.Получить("Поле5"));
		КонецЕсли;

		Если СокрЛП(ВходящиеДанные.Получить("Поле6")) &lt;&gt; "" Тогда
			ТекПредставление = ТекПредставление + ", " + СокрЛП(ВходящиеДанные.Получить("Поле6"));
		КонецЕсли;

		Если СокрЛП(ВходящиеДанные.Получить("Поле7")) &lt;&gt; "" Тогда
			ТекПредставление = ТекПредставление + ", дом № " + СокрЛП(ВходящиеДанные.Получить("Поле7"));
		КонецЕсли;

		Если СокрЛП(ВходящиеДанные.Получить("Поле8")) &lt;&gt; "" Тогда
			ТекПредставление = ТекПредставление + ", корпус " + СокрЛП(ВходящиеДанные.Получить("Поле8"));
		КонецЕсли;

		Если СокрЛП(ВходящиеДанные.Получить("Поле9")) &lt;&gt; "" Тогда
			ТекПредставление = ТекПредставление + ", кв." + СокрЛП(ВходящиеДанные.Получить("Поле9"));
		КонецЕсли;

		Если СтрДлина(ТекПредставление) &gt; 2 Тогда
			ТекПредставление = Сред(ТекПредставление, 3);
		КонецЕсли;
		
		ВходящиеДанные.Установить("Представление", ТекПредставление);
		
	Иначе
		ВходящиеДанные.Установить("Представление", Адрес);
	КонецЕсли;
	
	</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПолучитьТаблицуУчетаУСН" ИспользуетсяПриЗагрузке="false">
			<Текст>Дата1 = НачГода(Параметры.ДатаКонцаПериодаВыгрузки);
Дата2 = Параметры.ДатаКонцаПериодаВыгрузки;

РегРасчеты = СоздатьОбъект("Регистр.РасчетыСПоставщиками");

ВидыДеятельностиУСН = СоздатьОбъект("СписокЗначений");
ВидыДеятельностиУСН.ДобавитьЗначение(ПолучитьПустоеЗначение("Справочник.ВидыДеятельности"));
СпрВидыДеятельности = СоздатьОбъект("Справочник.ВидыДеятельности");
СпрВидыДеятельности.ВыбратьЭлементы();
Пока СпрВидыДеятельности.ПолучитьЭлемент() = 1 Цикл
	Если (СпрВидыДеятельности.ОблагаетсяЕНВД = 0) и (СпрВидыДеятельности.Служебный = 0) Тогда
		ВидыДеятельностиУСН.ДобавитьЗначение(СпрВидыДеятельности.ТекущийЭлемент());
	КонецЕсли;
КонецЦикла;

ДатаПереходаНаУСН = Дата(0);
ТекГод = Дата1;
Если Константа.УСН.Получить(ТекГод) = Да Тогда // УСН могла премяняться и в предыдущие периоды
	ДатаПереходаНаУСН = ТекГод;
	Пока (Константа.УСН.Получить(ТекГод) = Да) и (ТекГод &gt; '01.01.1980') Цикл
		ДатаПереходаНаУСН = ТекГод;
		ТекГод = ДобавитьМесяц(ТекГод, -12);
	КонецЦикла;
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ДатаПереходаНаУСН", ДатаПереходаНаУСН);

РежимПечатиГраф4и6  = 1;
РежимПечатиНДС		= ?(Константа.ПорядокПризнанияРасходовПоНДС = Перечисление.ПорядокПризнанияРасходовПоНДС.ПоОплатеПоставщику,2,1);

ТаблУчета = СоздатьОбъект("ТаблицаЗначений");
ТаблУчета.НоваяКолонка("Документ", "Документ");
ТаблУчета.НоваяКолонка("НомерСтрокиДок", "Число");
ТаблУчета.НоваяКолонка("ДатаНомерДок", "Строка");
ТаблУчета.НоваяКолонка("СодержОперации");
ТаблУчета.НоваяКолонка("Описание");
ТаблУчета.НоваяКолонка("Доходы", "Число");
ТаблУчета.НоваяКолонка("Расходы", "Число");  
ТаблУчета.НоваяКолонка("ДоходыБУ", "Число");
ТаблУчета.НоваяКолонка("РасходыБУ", "Число");
ТаблУчета.НоваяКолонка("ДоходыЕНВД", "Число");
ТаблУчета.НоваяКолонка("НомерКвартала", "Число", 1, 0);
ТаблУчета.НоваяКолонка("ДатаКонцаКвартала", "Дата");
ТаблУчета.НоваяКолонка("НДС", "Число");
ТаблУчета.НоваяКолонка("Валюта");
ТаблУчета.НоваяКолонка("ВалСумма");
ТаблУчета.НоваяКолонка("ЭтоНДС","Число");

Раздел1 = СоздатьОбъект("ТаблицаЗначений");
Раздел1.НоваяКолонка("ДатаНомер");
Раздел1.НоваяКолонка("Содержание");
Раздел1.НоваяКолонка("Графа4");
Раздел1.НоваяКолонка("Графа5");
Раздел1.НоваяКолонка("Графа6");
Раздел1.НоваяКолонка("Графа7");
Раздел1.НоваяКолонка("НДС");
Раздел1.НоваяКолонка("ДоходыЕНВД");
Раздел1.НоваяКолонка("РасходыЕНВД");

Раздел2 = СоздатьОбъект("ТаблицаЗначений");
Раздел2.НоваяКолонка("ОсновноеСредство");
Раздел2.НоваяКолонка("НематериальныйАктив");
Раздел2.НоваяКолонка("ДатаОплаты");
Раздел2.НоваяКолонка("Графа4_ГосударственнаяРегистрация");
Раздел2.НоваяКолонка("Графа5_ПервоначальнаяСтоимость");
Раздел2.НоваяКолонка("Графа6_ОстаточнаяСтоимость");
Раздел2.НоваяКолонка("Графа8_КолКварталовВОтчетномПериоде");
Раздел2.НоваяКолонка("Графа9_КолКварталовВНалПериоде");
Раздел2.НоваяКолонка("Графа10_ДоляРасходовЗаНалПериод");
Раздел2.НоваяКолонка("Графа11_ДоляРасходовЗаКвартал");
Раздел2.НоваяКолонка("Графа12_СуммаРасходовЗаОтчетнПериод");
Раздел2.НоваяКолонка("Графа13_СуммаРасходовЗаКвартал");
Раздел2.НоваяКолонка("Графа14_РасходыПрошлыхПериодов");
Раздел2.НоваяКолонка("Графа15_ОстатокРасходов");

// ДОХОДЫ ОТ РЕАЛИЗАЦИИ
//

СписокВидовРесурсов = СоздатьОбъект("СписокЗначений");
СписокВидовРесурсов.ДобавитьЗначение(Перечисление.ВидыМатериальныхРесурсов.Продукция);
СписокВидовРесурсов.ДобавитьЗначение(Перечисление.ВидыМатериальныхРесурсов.Услуга);
СписокВидовРесурсов.ДобавитьЗначение(Перечисление.ВидыМатериальныхРесурсов.Товар);
СписокВидовРесурсов.ДобавитьЗначение(ПолучитьПустоеЗначение("Перечисление.ВидыМатериальныхРесурсов"));

ТекстЗапроса = 
"//{{ЗАПРОС(ДоходыОтРеализации)
|Период с Дата1 по Дата2;
|ДокументОплаты = Регистр.РасчетыСПокупателями.ДокументОплаты;
|ВидДеятельности = Регистр.РасчетыСПокупателями.ВидДеятельности;
|ОблагаетсяЕНВД = Регистр.РасчетыСПокупателями.ВидДеятельности.ОблагаетсяЕНВД;
|Служебный = Регистр.РасчетыСПокупателями.ВидДеятельности.Служебный;
|ВидРесурса = Регистр.РасчетыСПокупателями.ВидМатериальногоРесурса;
|ТекДокумент = Регистр.РасчетыСПокупателями.ТекущийДокумент;
|НомерСтроки = Регистр.РасчетыСПокупателями.НомерСтроки;
|Договор = Регистр.РасчетыСПокупателями.Договор;
|Сум = Регистр.РасчетыСПокупателями.Сумма;
|Функция Сумма = Расход(Сум) Когда ((ОблагаетсяЕНВД = 0) и ((Служебный = 0) или (ПустоеЗначение(ВидДеятельности) = 1)));
|Функция СуммаЕНВД = Расход(Сум) Когда (ОблагаетсяЕНВД = 1);
|Функция НеОблагается = Расход(Сум) Когда ((Служебный = 1) и (ОблагаетсяЕНВД = 0) и (ПустоеЗначение(ВидДеятельности) = 0));
|Группировка Документ;
|Группировка ДокументОплаты;
|Группировка НомерСтроки;
|Условие (ВидРесурса в СписокВидовРесурсов);
|"//}}ЗАПРОС
;
Запрос = СоздатьОбъект("Запрос");
Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
	Возврат 0;
КонецЕсли;

УчитыватьРасходы = ?(Константа.ОбъектНалогообложения.Получить(Дата2) = Перечисление.ВариантОбъектаНалогообложения.ДоходыМинусРасходы, 1, 0);
Пока Запрос.Группировка(1) = 1 Цикл
	Пока Запрос.Группировка(2) = 1 Цикл
		Пока Запрос.Группировка(3) = 1 Цикл
			Если (Запрос.Сумма &lt;&gt; 0) или (Запрос.СуммаЕНВД &lt;&gt; 0) Тогда
				ДокОплаты = Запрос.ДокументОплаты;
				НомСтроки = Запрос.НомерСтроки;
				НомСтрокиДок = Запрос.НомерСтроки;
				
				Если Запрос.ТекДокумент = Запрос.ДокументОплаты Тогда
					ТаблУчета.НоваяСтрока();
					ТаблУчета.Документ = Запрос.Документ;
					Параметры.ПараметрыАлгоритмов.Установить("НомерДокументаОплаты", ДокОплаты);
					Параметры.ПараметрыАлгоритмов.Установить("ДатаДокументаОплаты", Запрос.Документ.ДатаДок);
					Параметры.ПараметрыАлгоритмов.Установить("НомерСтрокиДокументаОплаты", НомСтроки);
					ТаблУчета.ДатаНомерДок = НомерДокументаОплаты();
					
					Параметры.ПараметрыАлгоритмов.Установить("СодержаниеДокумент", ДокОплаты);
					Параметры.ПараметрыАлгоритмов.Установить("СодержаниеНомерСтроки", НомСтроки);
					Параметры.ПараметрыАлгоритмов.Установить("СодержаниеВариант", 1);

					ТаблУчета.СодержОперации = СодержаниеОперации();
					ТаблУчета.Описание = СодержаниеОперации();
					ТаблУчета.НомерКвартала = Цел(ДатаМесяц(КонКвартала(Запрос.Документ.ДатаДок))/3);
					ТаблУчета.ДатаКонцаКвартала = КонКвартала(Запрос.Документ.ДатаДок);
					ТаблУчета.НомерСтрокиДок = НомСтрокиДок;
					
					ТаблУчета.Доходы = Запрос.Сумма;
					ТаблУчета.ДоходыБУ = Запрос.Сумма + Запрос.СуммаЕНВД;
					ТаблУчета.ДоходыЕНВД = Запрос.СуммаЕНВД;
					
				Иначе // зачет аванса
					Если (Запрос.СуммаЕНВД &lt;&gt; 0) Тогда
						ТаблУчета.НоваяСтрока();
						ТаблУчета.Документ = Запрос.Документ;
						Параметры.ПараметрыАлгоритмов.Установить("НомерДокументаОплаты", ДокОплаты);
						Параметры.ПараметрыАлгоритмов.Установить("ДатаДокументаОплаты", Запрос.Документ.ДатаДок);
						Параметры.ПараметрыАлгоритмов.Установить("НомерСтрокиДокументаОплаты", НомСтроки);
						ТаблУчета.ДатаНомерДок = НомерДокументаОплаты();
						ТаблУчета.СодержОперации = "Реализация товаров (работ, услуг)"  + ". Покупатель: """ + Запрос.Документ.Контрагент + """. Договор: """ + Запрос.Документ.Договор + """";
						ТаблУчета.Описание = "Сторнирован доход, учитываемый при расчете единого налога, отраженный при получении аванса.";
						ТаблУчета.НомерКвартала = Цел(ДатаМесяц(КонКвартала(Запрос.Документ.ДатаДок))/3);
						ТаблУчета.ДатаКонцаКвартала = КонКвартала(Запрос.Документ.ДатаДок);
						ТаблУчета.Доходы = - Запрос.СуммаЕНВД;
						
						ТаблУчета.НоваяСтрока();
						ТаблУчета.Документ = Запрос.Документ;
						Параметры.ПараметрыАлгоритмов.Установить("НомерДокументаОплаты", ДокОплаты);
						Параметры.ПараметрыАлгоритмов.Установить("ДатаДокументаОплаты", Запрос.Документ.ДатаДок);
						Параметры.ПараметрыАлгоритмов.Установить("НомерСтрокиДокументаОплаты", НомСтроки);
						ТаблУчета.ДатаНомерДок = НомерДокументаОплаты();
						ТаблУчета.СодержОперации = "Реализация товаров (работ, услуг)"  + ". Покупатель: """ + Запрос.Документ.Контрагент + """. Договор: """ + Запрос.Документ.Договор + """";
						ТаблУчета.Описание = "Сторнирован доход, отраженный при получении авнаса, как ""Доходы всего, не облагаемые ЕНВД"".";
						ТаблУчета.НомерКвартала = Цел(ДатаМесяц(КонКвартала(Запрос.Документ.ДатаДок))/3);
						ТаблУчета.ДатаКонцаКвартала = КонКвартала(Запрос.Документ.ДатаДок);
						ТаблУчета.ДоходыБУ = - Запрос.СуммаЕНВД;
						
						ТаблУчета.НоваяСтрока();
						ТаблУчета.Документ = Запрос.Документ;
						Параметры.ПараметрыАлгоритмов.Установить("НомерДокументаОплаты", ДокОплаты);
						Параметры.ПараметрыАлгоритмов.Установить("ДатаДокументаОплаты", Запрос.Документ.ДатаДок);
						Параметры.ПараметрыАлгоритмов.Установить("НомерСтрокиДокументаОплаты", НомСтроки);
						ТаблУчета.ДатаНомерДок = НомерДокументаОплаты();
						ТаблУчета.СодержОперации = "Реализация товаров (работ, услуг)"  + ". Покупатель: """ + Запрос.Документ.Контрагент + """. Договор: """ + Запрос.Документ.Договор + """";
						ТаблУчета.Описание = "Отражен доход, облагаемый ЕНВД";
						ТаблУчета.НомерКвартала = Цел(ДатаМесяц(КонКвартала(Запрос.Документ.ДатаДок))/3);
						ТаблУчета.ДатаКонцаКвартала = КонКвартала(Запрос.Документ.ДатаДок);
						ТаблУчета.ДоходыБУ = Запрос.СуммаЕНВД;
						ТаблУчета.ДоходыЕНВД = Запрос.СуммаЕНВД;
					КонецЕсли;	
					
					Если (Запрос.НеОблагается &lt;&gt; 0) Тогда
						ТаблУчета.НоваяСтрока();
						ТаблУчета.Документ = Запрос.Документ;
						Параметры.ПараметрыАлгоритмов.Установить("НомерДокументаОплаты", ДокОплаты);
						Параметры.ПараметрыАлгоритмов.Установить("ДатаДокументаОплаты", Запрос.Документ.ДатаДок);
						Параметры.ПараметрыАлгоритмов.Установить("НомерСтрокиДокументаОплаты", НомСтроки);
						ТаблУчета.ДатаНомерДок = НомерДокументаОплаты();
						ТаблУчета.СодержОперации = "Реализация товаров (работ, услуг)"  + ". Покупатель: """ + Запрос.Документ.Контрагент + """. Договор: """ + Запрос.Документ.Договор + """";
						ТаблУчета.Описание = "Сторнирован доход, распределенный на виды деятельности, не облагаемые единым налогом.";
						ТаблУчета.НомерКвартала = Цел(ДатаМесяц(КонКвартала(Запрос.Документ.ДатаДок))/3);
						ТаблУчета.ДатаКонцаКвартала = КонКвартала(Запрос.Документ.ДатаДок);
						ТаблУчета.Доходы = - Запрос.НеОблагается;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
КонецЦикла;

// ПРОЧИЕ ДОХОДЫ
//
Запрос = СоздатьОбъект("Запрос");
ТекстЗапроса = 
"//{{ЗАПРОС(ПрочиеДоходы)
|Период с '01.01.1980';
|ВидДеятельности = Регистр.ПрочиеДоходы.ВидДеятельности;
|ВидДохода = Регистр.ПрочиеДоходы.ВидДохода;
|Сум = Регистр.ПрочиеДоходы.Сумма;
|СумНеПрин = Регистр.ПрочиеДоходы.СуммаНеПринимаемая;
|ДатаОперации = Регистр.ПрочиеДоходы.ДатаОперации;
|НомерДокумента = Регистр.ПрочиеДоходы.НомерДокумента;
|Функция Сумма = Сумма(Сум);
|Функция СуммаНеПринимаемая = Сумма(СумНеПрин);
|Группировка Документ;
|Группировка НомерДокумента Без Упорядочивания;
|Группировка ВидДохода Без Групп Без Упорядочивания;
|Условие((ДатаОперации &gt;= Дата1) и (ДатаОперации &lt;= Дата2));";

// Если ошибка в запросе, то выход из процедуры
Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
	Возврат 0;
КонецЕсли;

Пока Запрос.Группировка(1) = 1 Цикл
	Пока Запрос.Группировка(2) = 1 Цикл
		Пока Запрос.Группировка(3) = 1 Цикл
			ТекДок = Запрос.Документ;
			
			ТаблУчета.НоваяСтрока();
			ТаблУчета.Документ = ТекДок;
			Параметры.ПараметрыАлгоритмов.Установить("НомерДокументаОплаты", Запрос.НомерДокумента);
			Параметры.ПараметрыАлгоритмов.Установить("ДатаДокументаОплаты", ТекДок.ДатаДок);
			Параметры.ПараметрыАлгоритмов.Установить("НомерСтрокиДокументаОплаты", 0);
			ТаблУчета.ДатаНомерДок = НомерДокументаОплаты();
			
			Параметры.ПараметрыАлгоритмов.Установить("СодержаниеДокумент", ТекДок);
			Параметры.ПараметрыАлгоритмов.Установить("СодержаниеНомерСтроки", 0);
			Параметры.ПараметрыАлгоритмов.Установить("СодержаниеВариант", 0);

			ТекСодержание = СодержаниеОперации();
			ТаблУчета.СодержОперации = ТекСодержание + ?(ПустоеЗначение(ТекСодержание) = 1, "", " ") + Строка(Запрос.ВидДохода);
			
			ТаблУчета.Описание = ТаблУчета.СодержОперации;
			ТаблУчета.ДоходыБУ = Запрос.СуммаНеПринимаемая;
			Если Запрос.ВидДеятельности.ОблагаетсяЕНВД = 1 Тогда
				ТаблУчета.ДоходыЕНВД = Запрос.СуммаНеПринимаемая;
				
			ИначеЕсли Запрос.ВидДеятельности.Служебный = 0 Тогда
				ТаблУчета.Доходы = Запрос.Сумма;
			КонецЕсли;
			ТаблУчета.НомерКвартала = Цел(ДатаМесяц(КонКвартала(Запрос.ДатаОперации))/3);
			ТаблУчета.ДатаКонцаКвартала = КонКвартала(Запрос.ДатаОперации);
			ТаблУчета.НомерСтрокиДок = 0;
		КонецЦикла;
	КонецЦикла;
КонецЦикла;


// РАСХОДЫ
//
Если УчитыватьРасходы = 1 Тогда
	
	ПорядокПризнанияМатериальныхРасходов = Константа.ПорядокПризнанияМатериальныхРасходов;
	ПорядокПризнанияРасходовПоТоварам = Константа.ПорядокПризнанияРасходовПоТоварам;
	ПорядокПризнанияРасходовПоНДС = Константа.ПорядокПризнанияРасходовПоНДС;
	
	Если РежимПечатиГраф4и6 = 1 Тогда
		// Расходы "всего", связанные с расчетами с постащиками
		ТекстЗапроса = 
		"//{{ЗАПРОС(ОплатаПоставщику)
		|Период с Дата1 по Дата2;
		|ВидДеятельности = Регистр.РасчетыСПоставщиками.ВидДеятельности;
		|ДокументОплаты = Регистр.РасчетыСПоставщиками.ДокументОплаты;
		|ТекДокумент = Регистр.РасчетыСПоставщиками.ТекущийДокумент;
		|НомерСтроки = Регистр.РасчетыСПоставщиками.НомерСтроки;
		|Договор = Регистр.РасчетыСПоставщиками.Договор;
		|Сум = Регистр.РасчетыСПоставщиками.Сумма;
		|СумНДС = Регистр.РасчетыСПоставщиками.СуммаНДС;
		|Функция СуммаНДС = Расход(СумНДС);
		|Функция Сумма = Расход(Сум);
		|Группировка ВидДеятельности;
		|Группировка Документ;
		|Группировка ДокументОплаты;
		|Группировка НомерСтроки;
		|Условие (ТекДокумент = ДокументОплаты);
		|"//}}ЗАПРОС
		;
		Запрос = СоздатьОбъект("Запрос");
		Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
			Возврат 0;
		КонецЕсли;
		
		Пока Запрос.Группировка(1) = 1 Цикл
			Пока Запрос.Группировка(2) = 1 Цикл
				Если Запрос.Документ.Вид() = "ВозвратПоставщику" Тогда
					Продолжить;
				КонецЕсли;
				
				Пока Запрос.Группировка(3) = 1 Цикл
					Пока Запрос.Группировка(4) = 1 Цикл
						Если Запрос.Сумма &lt;&gt; 0 Тогда
							ДокОплаты = ?(ПустоеЗначение(Запрос.ДокументОплаты) = 1, Запрос.РасчДокумент, Запрос.ДокументОплаты);
							НомСтроки = Запрос.НомерСтроки;
							НомСтрокиДок = Запрос.НомерСтроки;
							
							ТаблУчета.НоваяСтрока();
							ТаблУчета.Документ = Запрос.Документ;
							Параметры.ПараметрыАлгоритмов.Установить("НомерДокументаОплаты", ДокОплаты);
							Параметры.ПараметрыАлгоритмов.Установить("ДатаДокументаОплаты", Запрос.Документ.ДатаДок);
							Параметры.ПараметрыАлгоритмов.Установить("НомерСтрокиДокументаОплаты", НомСтроки);
							ТаблУчета.ДатаНомерДок = НомерДокументаОплаты();
							
							Параметры.ПараметрыАлгоритмов.Установить("СодержаниеДокумент", ДокОплаты);
							Параметры.ПараметрыАлгоритмов.Установить("СодержаниеНомерСтроки", НомСтроки);
							Параметры.ПараметрыАлгоритмов.Установить("СодержаниеВариант", 1);

							ТаблУчета.СодержОперации = СодержаниеОперации();
							ТаблУчета.Описание = СодержаниеОперации();
							
							Если (ПорядокПризнанияРасходовПоНДС = Перечисление.ПорядокПризнанияРасходовПоНДС.ПоОплатеПоставщику) и (Запрос.ВидДеятельности.Служебный &lt;&gt; 1) и (Запрос.ВидДеятельности.ОблагаетсяЕНВД &lt;&gt; 1) Тогда
								ТаблУчета.РасходыБУ = Запрос.Сумма - Запрос.СуммаНДС;
								
							Иначе
								ТаблУчета.РасходыБУ = Запрос.Сумма;
							КонецЕсли;
							
							ТаблУчета.НомерКвартала = Цел(ДатаМесяц(КонКвартала(Запрос.Документ.ДатаДок))/3);
							ТаблУчета.ДатаКонцаКвартала = КонКвартала(Запрос.Документ.ДатаДок);
							ТаблУчета.НомерСтрокиДок = НомСтрокиДок;
						КонецЕсли;
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	// МАТЕРИАЛЬНЫЕ РАСХОДЫ
	
	// Расходы на приобретение товаров, реализованных и оплаченных покупателем
	СписокВидовРесурсов = СоздатьОбъект("СписокЗначений");
	СписокВидовРесурсов.ДобавитьЗначение(Перечисление.ВидыМатериальныхРесурсов.Товар);
	
	Если (ПорядокПризнанияРасходовПоТоварам = Перечисление.ПорядокПризнанияРасходовПоТоварам.ПоФактуПолученияДохода) или
		(ПорядокПризнанияРасходовПоТоварам = Перечисление.ПорядокПризнанияРасходовПоТоварам.ПоФактуРеализации) Тогда
		
		ТекстЗапроса = 
		"//{{ЗАПРОС(СтоимостьПроданныхТоваров)
		|Период с Дата1 по Дата2;
		|ВидДеятельности = Регистр.РасчетыСПокупателями.ВидДеятельности;
		|ВидМатериальногоРесурса = Регистр.РасчетыСПокупателями.ВидМатериальногоРесурса;
		|Номенклатура = Регистр.РасчетыСПокупателями.Номенклатура;
		|ДокументПоступления = Регистр.РасчетыСПокупателями.ДокументПоступления;
		|ДокументОплаты = Регистр.РасчетыСПокупателями.ДокументОплаты;
		|НомерСтроки = Регистр.РасчетыСПокупателями.НомерСтроки;
		|Договор = Регистр.РасчетыСПокупателями.Договор;
		|Ст = Регистр.РасчетыСПокупателями.Стоимость;
		|СтОпл = Регистр.РасчетыСПокупателями.СтоимостьОплаченная;";
		
		Если ПорядокПризнанияРасходовПоТоварам = Перечисление.ПорядокПризнанияРасходовПоТоварам.ПоФактуПолученияДохода Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|Функция Стоимость = Расход(Ст);
			|Функция СтоимостьОплаченная = Расход(СтОпл);";
			
		ИначеЕсли ПорядокПризнанияРасходовПоТоварам = Перечисление.ПорядокПризнанияРасходовПоТоварам.ПоФактуРеализации Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|Функция Стоимость = Приход(Ст);
			|Функция СтоимостьОплаченная = Приход(СтОпл);";
			
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса + "
		|Группировка Документ;
		|Группировка ДокументПоступления;
		|Группировка Номенклатура;
		|Группировка Договор без групп;
		|Группировка ДокументОплаты;
		|Группировка НомерСтроки;
		|Условие (ВидДеятельности в ВидыДеятельностиУСН);
		|Условие (ВидМатериальногоРесурса в СписокВидовРесурсов);
		|"//}}ЗАПРОС
		;
		Запрос = СоздатьОбъект("Запрос");
		Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
			Возврат 0;
		КонецЕсли;
		
		СписокДокументовПоступления = СоздатьОбъект("СписокЗначений");
		ДатаПервойПартии = Дата1;
		Пока Запрос.Группировка(1) = 1 Цикл
			Пока Запрос.Группировка(2) = 1 Цикл
				СписокДокументовПоступления.ДобавитьЗначение(Запрос.ДокументПоступления);
				Если ДатаПервойПартии &gt; Запрос.ДокументПоступления.ДатаДок Тогда
					ДатаПервойПартии = Запрос.ДокументПоступления.ДатаДок;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		
		ДатаПервойПартии = НачМесяца(ДатаПервойПартии);
		ТекстЗапроса = 
		"//{{ЗАПРОС(НДС_ПроданныхТоваров)
		|Период с ДатаПервойПартии по Дата2;
		|ВидДеятельности = Регистр.Расходы.ВидДеятельности;
		|ВидМатериальногоРесурса = Регистр.Расходы.ВидМатериальногоРесурса;
		|Номенклатура = Регистр.Расходы.Номенклатура;
		|ДокументПоступления = Регистр.Расходы.ДокументПоступления;
		|СтОпл = Регистр.Расходы.СтоимостьОплаченная;
		|СумНДСОпл = Регистр.Расходы.СуммаНДСОплаченная;
		|Функция СтоимостьОплаченная = Приход(СтОпл);
		|Функция СуммаНДС = Приход(СумНДСОпл);
		|Группировка Номенклатура;
		|Группировка ДокументПоступления;
		|Условие (ДокументПоступления в СписокДокументовПоступления);
		|Условие (ВидДеятельности в ВидыДеятельностиУСН);
		|Условие (ВидМатериальногоРесурса в СписокВидовРесурсов);
		|"//}}ЗАПРОС
		;
		
		НДС = СоздатьОбъект("Запрос");
		Если НДС.Выполнить(ТекстЗапроса) = 0 Тогда
			Возврат 0;
		КонецЕсли;
		
		Пока Запрос.Группировка(1) = 1 Цикл
			Пока Запрос.Группировка(2) = 1 Цикл
				Пока Запрос.Группировка(3) = 1 Цикл
					Пока Запрос.Группировка(4) = 1 Цикл
						Пока Запрос.Группировка(5) = 1 Цикл
							Пока Запрос.Группировка(6) = 1 Цикл
								ТаблУчета.НоваяСтрока();
								ТаблУчета.Документ = Запрос.Документ;
								
								Если Запрос.Документ = Запрос.ДокументОплаты Тогда
									Параметры.ПараметрыАлгоритмов.Установить("НомерДокументаОплаты", Запрос.ДокументОплаты);
									Параметры.ПараметрыАлгоритмов.Установить("ДатаДокументаОплаты", Запрос.Документ.ДатаДок);
									Параметры.ПараметрыАлгоритмов.Установить("НомерСтрокиДокументаОплаты", Запрос.НомерСтроки);
									ТаблУчета.ДатаНомерДок = НомерДокументаОплаты();
									
									Параметры.ПараметрыАлгоритмов.Установить("СодержаниеДокумент", Запрос.ДокументОплаты);
									Параметры.ПараметрыАлгоритмов.Установить("СодержаниеНомерСтроки", Запрос.НомерСтроки);
									Параметры.ПараметрыАлгоритмов.Установить("СодержаниеВариант", 1);

									ТаблУчета.СодержОперации = СодержаниеОперации();
									ТаблУчета.Описание = "Покупателем """+Запрос.Договор.Владелец+""" по договору """+Запрос.Договор+
									""" погашена задолженность за отгруженный товар """+Запрос.Номенклатура+"""." + ?(Запрос.Стоимость&lt;&gt;0, " Стоимость оплаченного товара (в ценах приобретения) составляет  "+СокрЛП(Формат(Запрос.Стоимость,"Ч15.2")), "");
									
								Иначе
									Параметры.ПараметрыАлгоритмов.Установить("НомерДокументаОплаты", Запрос.Документ);
									Параметры.ПараметрыАлгоритмов.Установить("ДатаДокументаОплаты", Запрос.Документ.ДатаДок);
									Параметры.ПараметрыАлгоритмов.Установить("НомерСтрокиДокументаОплаты", 0);
									ТаблУчета.ДатаНомерДок = НомерДокументаОплаты();
									
									Параметры.ПараметрыАлгоритмов.Установить("СодержаниеДокумент", Запрос.Документ);
									Параметры.ПараметрыАлгоритмов.Установить("СодержаниеНомерСтроки", 0);
									Параметры.ПараметрыАлгоритмов.Установить("СодержаниеВариант", 1);

									ТаблУчета.СодержОперации = СодержаниеОперации();
									ТаблУчета.Описание = "Покупателю """+Запрос.Договор.Владелец+""" по договору """+Запрос.Договор+
									""" отгружен товар """+Запрос.Номенклатура+""" в счет предварительной оплаты." + ?(Запрос.Стоимость&lt;&gt;0, " Стоимость оплаченного товара (в ценах приобретения) составляет  "+СокрЛП(Формат(Запрос.Стоимость,"Ч15.2")), "");
									
								КонецЕсли;
								
								ТаблУчета.Расходы = Запрос.СтоимостьОплаченная;
								ТаблУчета.НомерКвартала = Цел(ДатаМесяц(КонКвартала(Запрос.Документ.ДатаДок))/3);
								ТаблУчета.ДатаКонцаКвартала = КонКвартала(Запрос.Документ.ДатаДок);
								
								Если ПорядокПризнанияРасходовПоТоварам = Перечисление.ПорядокПризнанияРасходовПоТоварам.ПоФактуРеализации Тогда
									Основание = "Расходы по оплате стоимости приобретенных товаров";
									ТаблУчета.СодержОперации = ?(ПустоеЗначение(ТаблУчета.СодержОперации) = 1, Основание, ТаблУчета.СодержОперации + " / " + Основание);
								КонецЕсли;
								
								НДС.вНачалоВыборки();
								Если НДС.Получить(Запрос.Номенклатура, Запрос.ДокументПоступления) = 1 Тогда
									Если НДС.СтоимостьОплаченная &lt;&gt; 0 Тогда
										ТаблУчета.НДС = НДС.СуммаНДС * Запрос.СтоимостьОплаченная / НДС.СтоимостьОплаченная;
									КонецЕсли;
								КонецЕсли;
							КонецЦикла;
						КонецЦикла;
					КонецЦикла;		
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
		
	ИначеЕсли ПорядокПризнанияРасходовПоТоварам = Перечисление.ПорядокПризнанияРасходовПоТоварам.ПоОплатеПоставщику Тогда
		ТекстЗапроса = 
		"//{{ЗАПРОС(ТоварыПоОплате)
		|Период с Дата1 по Дата2;
		|ВидДеятельности = Регистр.Расходы.ВидДеятельности;
		|ВидРесурса = Регистр.Расходы.ВидМатериальногоРесурса;
		|ДокументПоступления = Регистр.Расходы.ДокументПоступления;
		|ДокументОплаты = Регистр.Расходы.ДокументОплаты;
		|НомерСтроки = Регистр.Расходы.НомерСтроки;
		|Номенклатура = Регистр.Расходы.Номенклатура;
		|Сум = Регистр.Расходы.СтоимостьОплаченная;
		|СумНДС = Регистр.Расходы.СуммаНДСОплаченная;
		|Функция Сумма = Приход(Сум);
		|Функция СуммаНДС = Приход(СумНДС);
		|Группировка Документ;
		|Группировка ВидРесурса;
		|Группировка Номенклатура Без Групп;
		|Группировка ДокументПоступления;
		|Группировка ДокументОплаты;
		|Группировка НомерСтроки;
		|Условие (ВидДеятельности в ВидыДеятельностиУСН);
		|Условие (ВидРесурса в СписокВидовРесурсов);
		|"//}}ЗАПРОС
		;
		
		Запрос = СоздатьОбъект("Запрос");
		Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
			Возврат 0;
		КонецЕсли;
		
		Параметры.ПараметрыАлгоритмов.Установить("Запрос", Запрос);
		Параметры.ПараметрыАлгоритмов.Установить("ТаблУчета", ТаблУчета);
		Параметры.ПараметрыАлгоритмов.Установить("БезНДС", 0);
		ЗаполнитьТаблУчетаРезультатамиЗапроса();
	КонецЕсли;
	
	// Расходы на приобретение материалов (работ, услуг), переданных в производство (распределенным по видам деятельности).
	// (Примечание: расходы на приобретение материалов, отпущенных на сторону, учитываются, как прочие расходы
	// при оплате покупки покупателем.)
	
	Если ПорядокПризнанияМатериальныхРасходов = Перечисление.ПорядокПризнанияМатериальныхРасходов.ПоФактуСписания Тогда
		СписокВидовРесурсов = СоздатьОбъект("СписокЗначений");
		СписокВидовРесурсов.ДобавитьЗначение(Перечисление.ВидыМатериальныхРесурсов.Материал);
		СписокВидовРесурсов.ДобавитьЗначение(Перечисление.ВидыМатериальныхРесурсов.ВспомогательныйМатериал);
		СписокВидовРесурсов.ДобавитьЗначение(Перечисление.ВидыМатериальныхРесурсов.ИныеМатериальныеРасходы);
		СписокВидовРесурсов.ДобавитьЗначение(Перечисление.ВидыМатериальныхРесурсов.РасходыПодлежащиеРаспределению);
		
		ТекстЗапроса = 
		"//{{ЗАПРОС(МатериалыПоСписанию)
		|Период с Дата1 по Дата2;
		|ВидДеятельности = Регистр.Обороты.ВидДеятельности;
		|ВидРесурса = Регистр.Обороты.ВидИзрасходованногоРесурса;
		|ВидПолученногоРесурса = Регистр.Обороты.ВидПолученногоРесурса;
		|ДокументПоступления = Регистр.Обороты.ДокументПоступленияИзрасходовано;
		|ДокументОплаты = Регистр.Обороты.ДокументОплаты;
		|НомерСтроки = Регистр.Обороты.НомерСтроки;
		|Номенклатура = Регистр.Обороты.ИзрасходованныйРесурс;
		|Док = Регистр.Обороты.ДокументПоступленияПолучено;
		|Сум = Регистр.Обороты.СтоимостьОплаченная;
		|СумНДС = Регистр.Обороты.СуммаНДСОплаченная;
		|Функция Сумма = Сумма(Сум);
		|Функция СуммаНДС = Сумма(СумНДС);
		|Группировка Документ;
		|Группировка ВидРесурса;
		|Группировка Номенклатура Без Групп;
		|Группировка ДокументПоступления;
		|Группировка ДокументОплаты;
		|Группировка НомерСтроки;
		|Условие (ВидДеятельности в ВидыДеятельностиУСН);
		|Условие (ВидРесурса в СписокВидовРесурсов);
		|Условие (ВидПолученногоРесурса &lt;&gt; Перечисление.ВидыМатериальныхРесурсов.РасходыПодлежащиеРаспределению);
		|"//}}ЗАПРОС
		;
		
	Иначе // ПорядокПризнанияМатериальныхРасходов = Перечисление.ПорядокПризнанияМатериальныхРасходов.ПоОплатеПоставщику Тогда
		
		СписокВидовРесурсов = СоздатьОбъект("СписокЗначений");
		СписокВидовРесурсов.ДобавитьЗначение(Перечисление.ВидыМатериальныхРесурсов.Материал);
		СписокВидовРесурсов.ДобавитьЗначение(Перечисление.ВидыМатериальныхРесурсов.ВспомогательныйМатериал);
		СписокВидовРесурсов.ДобавитьЗначение(Перечисление.ВидыМатериальныхРесурсов.ИныеМатериальныеРасходы);
		
		ТекстЗапроса = 
		"//{{ЗАПРОС(МатериалыПоОплате)
		|Период с Дата1 по Дата2;
		|ВидДеятельности = Регистр.Расходы.ВидДеятельности;
		|ВидРесурса = Регистр.Расходы.ВидМатериальногоРесурса;
		|ДокументПоступления = Регистр.Расходы.ДокументПоступления;
		|ДокументОплаты = Регистр.Расходы.ДокументОплаты;
		|НомерСтроки = Регистр.Расходы.НомерСтроки;
		|Номенклатура = Регистр.Расходы.Номенклатура;
		|Сум = Регистр.Расходы.СтоимостьОплаченная;
		|СумНДС = Регистр.Расходы.СуммаНДСОплаченная;
		|Функция Сумма = Приход(Сум);
		|Функция СуммаНДС = Приход(СумНДС);
		|Группировка Документ;
		|Группировка ВидРесурса;
		|Группировка Номенклатура Без Групп;
		|Группировка ДокументПоступления;
		|Группировка ДокументОплаты;
		|Группировка НомерСтроки;
		|Условие (ВидДеятельности в ВидыДеятельностиУСН);
		|Условие (ВидРесурса в СписокВидовРесурсов);
		|"//}}ЗАПРОС
		;
		
	КонецЕсли;
	
	Запрос = СоздатьОбъект("Запрос");
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат 0;
	КонецЕсли;
	Параметры.ПараметрыАлгоритмов.Установить("Запрос", Запрос);
	Параметры.ПараметрыАлгоритмов.Установить("ТаблУчета", ТаблУчета);
	Параметры.ПараметрыАлгоритмов.Установить("БезНДС", 0);
	ЗаполнитьТаблУчетаРезультатамиЗапроса();
	
	// АМОРТИЗАЦИЯ
	ТекстЗапроса = 
	"//{{ЗАПРОС(ОперацииПоАмортизации)
	|Период с Дата1 по Дата2;
	|ВидДеятельности = Регистр.Амортизация.ВидДеятельности;
	|ВидРесурса = Регистр.Амортизация.ВидМатериальногоРесурса;
	|ДокументОплаты = Регистр.Амортизация.ДокументОплаты;
	|НомерСтроки = Регистр.Амортизация.НомерСтроки;
	|Номенклатура = Регистр.Амортизация.Объект;
	|Сум = Регистр.Амортизация.Расходы;
	|Функция Сумма = Приход(Сум);
	|Группировка Документ;
	|Группировка ВидРесурса;
	|Группировка Номенклатура Без Групп;
	|Группировка ДокументОплаты;
	|Группировка НомерСтроки;
	|Условие (ВидДеятельности в ВидыДеятельностиУСН);
	|"//}}ЗАПРОС
	;
	
	Если Дата2&gt;='01.01.2006' Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|Условие ((ВидРесурса = Перечисление.ВидыМатериальныхРесурсов.ОсновноеСредство) или (ВидРесурса = Перечисление.ВидыМатериальныхРесурсов.НематериальныйАктив));
		|";
	Иначе
		ТекстЗапроса = ТекстЗапроса + "
		|Условие (ВидРесурса = Перечисление.ВидыМатериальныхРесурсов.ОсновноеСредство);
		|";
	КонецЕсли;
	
	Запрос = СоздатьОбъект("Запрос");
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат 0;
	КонецЕсли;
	
	Пока Запрос.Группировка(1) = 1 Цикл
		Пока Запрос.Группировка(2) = 1 Цикл
			Пока Запрос.Группировка(3) = 1 Цикл
				Пока Запрос.Группировка(4) = 1 Цикл
					Пока Запрос.Группировка(5) = 1 Цикл
						ТаблУчета.НоваяСтрока();
						ТаблУчета.Документ = Запрос.Документ;
						ТаблУчета.Расходы = Запрос.Сумма;
						ТаблУчета.НомерКвартала = Цел(ДатаМесяц(КонКвартала(Запрос.Документ.ДатаДок))/3);
						ТаблУчета.ДатаКонцаКвартала = КонКвартала(Запрос.Документ.ДатаДок);
						Если Запрос.ВидРесурса = Перечисление.ВидыМатериальныхРесурсов.ОсновноеСредство Тогда
							ТаблУчета.СодержОперации = "Признаны расходы на приобретение основного средства """ + Запрос.Номенклатура + """ инв. № " + Запрос.Номенклатура.Код;
						Иначе
							ТаблУчета.СодержОперации = "Признаны расходы на приобретение нематериального актива """ + Запрос.Номенклатура + """ инв. № " + Запрос.Номенклатура.Код;
						КонецЕсли;
						ТаблУчета.Описание = ТаблУчета.СодержОперации;
						
						Параметры.ПараметрыАлгоритмов.Установить("НомерДокументаОплаты", Запрос.ДокументОплаты);
						Параметры.ПараметрыАлгоритмов.Установить("ДатаДокументаОплаты", Запрос.Документ.ДатаДок);
						Параметры.ПараметрыАлгоритмов.Установить("НомерСтрокиДокументаОплаты", Запрос.НомерСтроки);
						ТаблУчета.ДатаНомерДок = НомерДокументаОплаты();
						
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	Если Дата2 &lt; '01.01.2006' Тогда  //c 2006 НМА отражаются в том же порядке что и ОС    
		// ПРИОБРЕТЕНИЕ НЕМАТЕРИАЛЬНЫХ АКТИВОВ
		ТекстЗапроса = 
		"//{{ЗАПРОС(НМА)
		|Период с Дата1 по Дата2;
		|ВидДеятельности = Регистр.Расходы.ВидДеятельности;
		|ВидРесурса = Регистр.Расходы.ВидМатериальногоРесурса;
		|ДокументПоступления = Регистр.Расходы.ДокументПоступления;
		|ДокументОплаты = Регистр.Расходы.ДокументОплаты;
		|НомерСтроки = Регистр.Расходы.НомерСтроки;
		|Номенклатура = Регистр.Расходы.Номенклатура;
		|Ст = Регистр.Расходы.СтоимостьОплаченная;
		|СумНДС = Регистр.Расходы.СуммаНДСОплаченная;
		|Функция Сумма = Приход(Ст);
		|Функция СуммаНДС = Приход(СумНДС);
		|Группировка Документ;
		|Группировка ВидРесурса;
		|Группировка Номенклатура Без Групп;
		|Группировка ДокументПоступления;
		|Группировка ДокументОплаты;
		|Группировка НомерСтроки;
		|Условие (ВидДеятельности в ВидыДеятельностиУСН);
		|Условие (ВидРесурса = Перечисление.ВидыМатериальныхРесурсов.НематериальныйАктив);
		|"//}}ЗАПРОС
		;
		
		Запрос = СоздатьОбъект("Запрос");
		Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
			Возврат 0;
		КонецЕсли;
		Параметры.ПараметрыАлгоритмов.Установить("Запрос", Запрос);
		Параметры.ПараметрыАлгоритмов.Установить("ТаблУчета", ТаблУчета);
		Параметры.ПараметрыАлгоритмов.Установить("БезНДС", 1);
		ЗаполнитьТаблУчетаРезультатамиЗапроса();
	КонецЕсли;
	
	// ОПЛАТА ТРУДА
	// В расходы включается погашение задолженности работникам, уменьшенное на сумму удержаний.
	ТекстЗапроса = 
	"//{{ЗАПРОС(РасходыНаОплатуТруда)
	|Период с Дата1 по Дата2;
	|ВидДеятельности = Регистр.РасчетыПоОплатеТруда.ВидДеятельности;
	|МесяцНачисления = Регистр.РасчетыПоОплатеТруда.МесяцНачисления;
	|Работник = Регистр.РасчетыПоОплатеТруда.Работник;
	|ВидУдержания = Регистр.РасчетыПоОплатеТруда.ВидУдержания;
	|НеУменьшаетНалоговуюБазу = Регистр.РасчетыПоОплатеТруда.ВидРасчета.НеУменьшаетНалоговуюБазу;
	|Сум = Регистр.РасчетыПоОплатеТруда.Сумма;
	|Функция СуммаПринимаемая = Расход(Сум) Когда (НеУменьшаетНалоговуюБазу = 0);
	|Функция Сумма = Расход(Сум);
	|Группировка МесяцНачисления;
	|Группировка Документ;
	|Группировка Работник Без Групп;
	|Условие (ВидДеятельности в ВидыДеятельностиУСН);
	|Условие (ПустоеЗначение(ВидУдержания) = 1);
	|"//}}ЗАПРОС
	;
	
	ЗапросРасходыНаОплатуТруда = СоздатьОбъект("Запрос");
	Если ЗапросРасходыНаОплатуТруда.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат 0;
	КонецЕсли;
	
	Пока ЗапросРасходыНаОплатуТруда.Группировка(1) = 1 Цикл
		Пока ЗапросРасходыНаОплатуТруда.Группировка(2) = 1 Цикл
			Пока ЗапросРасходыНаОплатуТруда.Группировка(3) = 1 Цикл
				Если (ЗапросРасходыНаОплатуТруда.Сумма = 0) и (ЗапросРасходыНаОплатуТруда.СуммаПринимаемая = 0) Тогда
					Продолжить;
				КонецЕсли;
				
				Док = ЗапросРасходыНаОплатуТруда.Документ;
				
				Если ПустоеЗначение(Док.ДокументПодтверждающийФактОплаты) = 1 Тогда
					НомерДокумента = глПреобразоватьНомерДок(Док.НомерДок);
					
				Иначе
					НомерДокумента = Док;
				КонецЕсли;
				
				СодержОперации = "Выплата зарплаты за " + глСменитьПериод(ЗапросРасходыНаОплатуТруда.МесяцНачисления);
				НомерКвартала = Цел(ДатаМесяц(КонКвартала(ЗапросРасходыНаОплатуТруда.Документ.ДатаДок))/3);
				
				ТаблУчета.НоваяСтрока();
				ТаблУчета.Документ = Док;
				Параметры.ПараметрыАлгоритмов.Установить("НомерДокументаОплаты", НомерДокумента);
				Параметры.ПараметрыАлгоритмов.Установить("ДатаДокументаОплаты", Док.ДатаДок);
				Параметры.ПараметрыАлгоритмов.Установить("НомерСтрокиДокументаОплаты", 0);
				ТаблУчета.ДатаНомерДок = НомерДокументаОплаты();
				ТаблУчета.СодержОперации = СодержОперации;
				ТаблУчета.НомерКвартала = НомерКвартала;
				ТаблУчета.ДатаКонцаКвартала = КонКвартала(ЗапросРасходыНаОплатуТруда.Документ.ДатаДок);
				
				ТаблУчета.Описание = "" + ЗапросРасходыНаОплатуТруда.Работник + ": Расходы на оплату труда.";
				ТаблУчета.Расходы = ЗапросРасходыНаОплатуТруда.СуммаПринимаемая;
				ТаблУчета.РасходыБУ = ЗапросРасходыНаОплатуТруда.Сумма;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	// Выплаты работникам уменьшаются на всю сумму произведенных удержаний, включая НДФЛ.
	// Исключение составляет НДФЛ, начисленный на доходы, начисленные на доходы работников,
	// не уменьшающие налоговой базы по единому налогу ( в т.ч. начисленные за счет ФСС).
	// Сумма удержанного НДФЛ распределяется пропорционально доходам работника, уменьшающим
	// и не уменьшающим налоговую базу по единому налогу. Распределение выполняется отдельно 
	// по каждому виду деятельности,  работнику и расчетному периоду. Считаем, что любые 
	// другие удержания (не НДФЛ), могут производиться только из выплат, принимаемых, 
	// как расходы предпринимателя.
	
	ТекстЗапроса = 
	"//{{ЗАПРОС(УдержанныйНДФЛ)
	|Период с Дата1 по Дата2;
	|ВидДеятельности = Регистр.Удержано.ВидДеятельности;
	|ВидУдержания = Регистр.Удержано.ВидУдержания;
	|НеУменьшаетНалоговуюБазу = Регистр.Удержано.ВидНачисления.НеУменьшаетНалоговуюБазу;
	|Сум = Регистр.Удержано.Сумма;
	|Функция СуммаПринимаемая = Расход(Сум) Когда ((НеУменьшаетНалоговуюБазу = 0) и (ПустоеЗначение(ВидДеятельности) = 0));
	|Функция Сумма = Расход(Сум);
	|Группировка Документ;
	|Группировка ВидУдержания;
	|Условие (ВидДеятельности в ВидыДеятельностиУСН);
	|"//}}ЗАПРОС
	;
	
	Запрос = СоздатьОбъект("Запрос");
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат 0;
	КонецЕсли;
	
	ПрочиеУдержания = 0;
	РасходыПоНДФЛПринимаемые = 0;
	
	Пока Запрос.Группировка(1) = 1 Цикл
		Пока Запрос.Группировка(2) = 1 Цикл
			ТаблУчета.НоваяСтрока();
			ТаблУчета.Документ = Запрос.Документ;
			Параметры.ПараметрыАлгоритмов.Установить("НомерДокументаОплаты", Запрос.Документ);
			Параметры.ПараметрыАлгоритмов.Установить("ДатаДокументаОплаты", Запрос.Документ.ДатаДок);
			Параметры.ПараметрыАлгоритмов.Установить("НомерСтрокиДокументаОплаты", 0);
			ТаблУчета.ДатаНомерДок = НомерДокументаОплаты();
			
			Параметры.ПараметрыАлгоритмов.Установить("СодержаниеДокумент", Запрос.Документ);
			Параметры.ПараметрыАлгоритмов.Установить("СодержаниеНомерСтроки", 0);
			Параметры.ПараметрыАлгоритмов.Установить("СодержаниеВариант", 0);

			ТаблУчета.СодержОперации = СодержаниеОперации() + ": " + Строка(Запрос.ВидУдержания);
			ТаблУчета.НомерКвартала = Цел(ДатаМесяц(КонКвартала(Запрос.Документ.ДатаДок))/3);
			ТаблУчета.ДатаКонцаКвартала = КонКвартала(Запрос.Документ.ДатаДок);
			ТаблУчета.Описание = ТаблУчета.СодержОперации;
			ТаблУчета.Расходы = Запрос.СуммаПринимаемая;
			ТаблУчета.РасходыБУ = Запрос.Сумма;
		КонецЦикла;
	КонецЦикла;
	
	// ПРОЧИЕ РАСХОДЫ
	//
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса = 
	"//{{ЗАПРОС(ПрочиеРасходы)
	|Период с '01.01.1980';
	|ВидДеятельности = Регистр.ПрочиеРасходы.ВидДеятельности;
	|ОблагаетсяЕНВД = Регистр.ПрочиеРасходы.ВидДеятельности.ОблагаетсяЕНВД;
	|ВидРасхода = Регистр.ПрочиеРасходы.ВидРасхода;
	|Сум = Регистр.ПрочиеРасходы.Сумма;
	|СумНеПрин = Регистр.ПрочиеРасходы.СуммаНеПринимаемая;
	|ДатаОперации = Регистр.ПрочиеРасходы.ДатаОперации;
	|НомерДокумента = Регистр.ПрочиеРасходы.НомерДокумента;
	|Функция Сумма = Сумма(Сум);
	|Функция СуммаНеПринимаемая = Сумма(СумНеПрин);
	|Группировка Документ;
	|Группировка ВидРасхода Без Групп Без Упорядочивания;
	|Группировка НомерДокумента Без Упорядочивания;
	|Условие((ДатаОперации &gt;= Дата1) и (ДатаОперации &lt;= Дата2));
	|Условие(ОблагаетсяЕНВД = 0);";
	
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат 0;
	КонецЕсли;
	
	ДатаПервогоРасхода = Дата1;
	Пока Запрос.Группировка(1) = 1 Цикл
		Если ДатаПервогоРасхода &gt; Запрос.Документ.ДатаДок Тогда
			ДатаПервогоРасхода = Запрос.Документ.ДатаДок;
		КонецЕсли;
	КонецЦикла;
	
	ДатаПервогоРасхода = НачМесяца(ДатаПервогоРасхода);
	
	СписокВидовРесурсов = СоздатьОбъект("СписокЗначений");
	СписокВидовРесурсов.ДобавитьЗначение(ПолучитьПустоеЗначение("Перечисление.ВидыМатериальныхРесурсов"));
	ТекстЗапроса = 
	"//{{ЗАПРОС(НДС_ПрочихРасходов)
	|Период с ДатаПервогоРасхода по Дата2;
	|ВидДеятельности = Регистр.РасчетыСПоставщиками.ВидДеятельности;
	|ВидМатериальногоРесурса = Регистр.РасчетыСПоставщиками.ВидМатериальногоРесурса;
	|Номенклатура = Регистр.РасчетыСПоставщиками.Номенклатура;
	|ДокументОплаты = Регистр.РасчетыСПоставщиками.ДокументОплаты;
	|НомерСтроки = Регистр.РасчетыСПоставщиками.НомерСтроки;
	|СумНДС = Регистр.РасчетыСПоставщиками.СуммаНДС;
	|Функция СуммаНДС = Расход(СумНДС);
	|Группировка Номенклатура;
	|Группировка Документ;
	|Группировка ДокументОплаты;
	|Группировка НомерСтроки;
	|Условие (ВидДеятельности в ВидыДеятельностиУСН);
	|Условие (ВидМатериальногоРесурса в СписокВидовРесурсов);
	|"//}}ЗАПРОС
	;
	НДС = СоздатьОбъект("Запрос");
	Если НДС.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат 0;
	КонецЕсли;
	
	Пока Запрос.Группировка(1) = 1 Цикл
		Пока Запрос.Группировка(2) = 1 Цикл
			СуммаНДС = 0;
			РаспределеноНДС = 0;
			ЗапросСуммаВсего = Запрос.Сумма;
			ТекДок = Запрос.Документ;
			
			Если ЗапросСуммаВсего &lt;&gt; 0 Тогда
				НДС.вНачалоВыборки();
				Если НДС.Получить(Запрос.ВидРасхода, ТекДок,,) = 1 Тогда
					СуммаНДС = НДС.СуммаНДС;
				КонецЕсли;
			КонецЕсли;
			
			Пока Запрос.Группировка(3) = 1 Цикл
				ТаблУчета.НоваяСтрока();
				ТаблУчета.Документ = ТекДок;
				
				//Если ТаблУчета.Документ.Вид() = "ПрочиеРасходыРасчеты" Тогда
					Параметры.ПараметрыАлгоритмов.Установить("НомерДокументаОплаты", ТекДок);
				//	
				//Иначе
				//	Параметры.ПараметрыАлгоритмов.Установить("НомерДокументаОплаты", Запрос.НомерДокумента);					
				//КонецЕсли;
				Параметры.ПараметрыАлгоритмов.Установить("ДатаДокументаОплаты", ТекДок.ДатаДок);
				Параметры.ПараметрыАлгоритмов.Установить("НомерСтрокиДокументаОплаты", 0);
				ТаблУчета.ДатаНомерДок = НомерДокументаОплаты();
				
				Параметры.ПараметрыАлгоритмов.Установить("СодержаниеДокумент", ТекДок);				
				Параметры.ПараметрыАлгоритмов.Установить("СодержаниеНомерСтроки", 0);
				Параметры.ПараметрыАлгоритмов.Установить("СодержаниеВариант", 1);  

				ТекСодержание = СодержаниеОперации();
				ТаблУчета.СодержОперации = ТекСодержание + ?(ПустоеЗначение(ТекСодержание) = 1, "", ": ") + Строка(Запрос.ВидРасхода);
				ТаблУчета.Описание = ТаблУчета.СодержОперации;
				
				ТаблУчета.РасходыБУ = Запрос.СуммаНеПринимаемая;
				
				Если Запрос.ВидДеятельности.Служебный = 0 Тогда
					ТаблУчета.Расходы = Запрос.Сумма;
					Если (Запрос.Сумма &lt;&gt; 0) и (СуммаНДС &lt;&gt; 0) и (ЗапросСуммаВсего &lt;&gt; 0) Тогда
						ТаблУчета.НДС = СуммаНДС * Запрос.Сумма / ЗапросСуммаВсего;
						РаспределеноНДС = РаспределеноНДС + ТаблУчета.НДС;
					КонецЕсли;	
				КонецЕсли;
				
				ТаблУчета.НомерКвартала = Цел(ДатаМесяц(КонКвартала(Запрос.ДатаОперации))/3);
				ТаблУчета.ДатаКонцаКвартала = КонКвартала(Запрос.ДатаОперации);
				ТаблУчета.НомерСтрокиДок = 0;
			КонецЦикла;
			
			Если РаспределеноНДС &lt;&gt; 0 Тогда
				ТаблУчета.НДС = ТаблУчета.НДС + СуммаНДС - РаспределеноНДС;
			КонецЕсли;
			
			Если (СуммаНДС &lt;&gt; 0) и (ПорядокПризнанияРасходовПоНДС = Перечисление.ПорядокПризнанияРасходовПоНДС.ПоОплатеПоставщику) Тогда
				Пока НДС.Группировка(3) = 1 Цикл
					Пока НДС.Группировка(4) = 1 Цикл
						ТаблУчета.НоваяСтрока();
						ТаблУчета.Документ = НДС.Документ;
						
						Если НДС.Документ = НДС.ДокументОплаты Тогда
							Параметры.ПараметрыАлгоритмов.Установить("НомерДокументаОплаты", НДС.ДокументОплаты);
							Параметры.ПараметрыАлгоритмов.Установить("ДатаДокументаОплаты", НДС.Документ.ДатаДок);
							Параметры.ПараметрыАлгоритмов.Установить("НомерСтрокиДокументаОплаты", НДС.НомерСтроки);
							ТаблУчета.ДатаНомерДок = НомерДокументаОплаты();														
							
							Параметры.ПараметрыАлгоритмов.Установить("СодержаниеДокумент", НДС.ДокументОплаты);
							Параметры.ПараметрыАлгоритмов.Установить("СодержаниеНомерСтроки", НДС.НомерСтроки);
							Параметры.ПараметрыАлгоритмов.Установить("СодержаниеВариант", 1);

							ТаблУчета.СодержОперации = СодержаниеОперации();
							ТаблУчета.РасходыБУ = НДС.СуммаНДС;
							
						Иначе // Если ПустоеЗначение(Запрос.ДокументОплаты) = 1 Тогда
							Параметры.ПараметрыАлгоритмов.Установить("НомерДокументаОплаты", НДС.Документ);
							Параметры.ПараметрыАлгоритмов.Установить("ДатаДокументаОплаты", НДС.Документ.ДатаДок);
							Параметры.ПараметрыАлгоритмов.Установить("НомерСтрокиДокументаОплаты", 0);
							ТаблУчета.ДатаНомерДок = НомерДокументаОплаты();														
							
							Параметры.ПараметрыАлгоритмов.Установить("СодержаниеДокумент", НДС.Документ);
							Параметры.ПараметрыАлгоритмов.Установить("СодержаниеНомерСтроки", 0);
							Параметры.ПараметрыАлгоритмов.Установить("СодержаниеВариант", 1);

							ТаблУчета.СодержОперации = СодержаниеОперации();
						КонецЕсли;
						
						Основание = "НДС, предъявленный поставщиками";
						ТаблУчета.СодержОперации = ?(ПустоеЗначение(ТаблУчета.СодержОперации) = 1, Основание, ТаблУчета.СодержОперации + " / " + Основание);
						
						ТаблУчета.НомерКвартала = Цел(ДатаМесяц(КонКвартала(НДС.Документ.ДатаДок))/3);
						ТаблУчета.ДатаКонцаКвартала = КонКвартала(НДС.Документ.ДатаДок);
						ТаблУчета.Описание = ТаблУчета.СодержОперации;
						ТаблУчета.Расходы = НДС.СуммаНДС;
						ТаблУчета.ЭтоНДС = 1;
					КонецЦикла;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	// НДС отдельной строкой
	Если ПорядокПризнанияРасходовПоНДС = Перечисление.ПорядокПризнанияРасходовПоНДС.ПоОплатеПоставщику Тогда
		СписокВидовРесурсов = СоздатьОбъект("СписокЗначений");
		СписокВидовРесурсов.ДобавитьЗначение(Перечисление.ВидыМатериальныхРесурсов.Товар);
		СписокВидовРесурсов.ДобавитьЗначение(Перечисление.ВидыМатериальныхРесурсов.Материал);
		СписокВидовРесурсов.ДобавитьЗначение(Перечисление.ВидыМатериальныхРесурсов.ВспомогательныйМатериал);
		СписокВидовРесурсов.ДобавитьЗначение(Перечисление.ВидыМатериальныхРесурсов.ИныеМатериальныеРасходы);
		СписокВидовРесурсов.ДобавитьЗначение(Перечисление.ВидыМатериальныхРесурсов.ВнеоборотныйАктив);
		
		ТекстЗапроса = 
		"//{{ЗАПРОС(НДС)
		|Период с Дата1 по Дата2;
		|ВидДеятельности = Регистр.Расходы.ВидДеятельности;
		|ВидМатериальногоРесурса = Регистр.Расходы.ВидМатериальногоРесурса;
		|ДокументПоступления = Регистр.Расходы.ДокументПоступления;
		|ДокументОплаты = Регистр.Расходы.ДокументОплаты;
		|НомерСтроки = Регистр.Расходы.НомерСтроки;
		|СумНДС = Регистр.Расходы.СуммаНДСОплаченная;
		|Функция СуммаНДС = Приход(СумНДС);
		|Группировка Документ;
		|Группировка ДокументПоступления;
		|Группировка ДокументОплаты;
		|Группировка НомерСтроки;
		|Условие (ВидДеятельности в ВидыДеятельностиУСН);
		|Условие (ВидМатериальногоРесурса в СписокВидовРесурсов);
		|"//}}ЗАПРОС
		;
		
		Запрос = СоздатьОбъект("Запрос");
		Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
			Возврат 0;
		КонецЕсли;
		
		Пока Запрос.Группировка(1) = 1 Цикл
			Пока Запрос.Группировка(2) = 1 Цикл
				Пока Запрос.Группировка(3) = 1 Цикл
					Пока Запрос.Группировка(4) = 1 Цикл  
						Если (Запрос.ВидМатериальногоРесурса =  Перечисление.ВидыМатериальныхРесурсов.ВнеоборотныйАктив) Тогда
							Если ТаблУчета.КоличествоСтрок()&gt;0 Тогда
								Стр="";Кол="";
								Если ТаблУчета.НайтиЗначение(Запрос.ДокументОплаты,Стр,Кол) = 1 Тогда
									ТаблУчета.УстановитьЗначение(Стр,"РасходыБУ",(ТаблУчета.ПолучитьЗначение(Стр,"РасходыБУ") + Запрос.СуммаНДС));
									Продолжить;
								КонецЕсли; 									
							КонецЕсли;
						КонецЕсли;
						
						ТаблУчета.НоваяСтрока();
						ТаблУчета.Документ = Запрос.Документ;
						
						Если Запрос.Документ = Запрос.ДокументОплаты Тогда
							Параметры.ПараметрыАлгоритмов.Установить("НомерДокументаОплаты", Запрос.ДокументОплаты);
							Параметры.ПараметрыАлгоритмов.Установить("ДатаДокументаОплаты", Запрос.Документ.ДатаДок);
							Параметры.ПараметрыАлгоритмов.Установить("НомерСтрокиДокументаОплаты", Запрос.НомерСтроки);
							ТаблУчета.ДатаНомерДок = НомерДокументаОплаты();														 
							
							Параметры.ПараметрыАлгоритмов.Установить("СодержаниеДокумент", Запрос.ДокументОплаты);
							Параметры.ПараметрыАлгоритмов.Установить("СодержаниеНомерСтроки", Запрос.НомерСтроки);
							Параметры.ПараметрыАлгоритмов.Установить("СодержаниеВариант", 1);

							ТаблУчета.СодержОперации = СодержаниеОперации();
							Если РегРасчеты.ВыбратьДвиженияДокумента(Запрос.ДокументПоступления) = 1 Тогда
								ТаблУчета.РасходыБУ = Запрос.СуммаНДС;
							КонецЕсли;
							
						Иначе // Если ПустоеЗначение(Запрос.ДокументОплаты) = 1 Тогда
							Параметры.ПараметрыАлгоритмов.Установить("НомерДокументаОплаты", Запрос.Документ);
							Параметры.ПараметрыАлгоритмов.Установить("ДатаДокументаОплаты", Запрос.Документ.ДатаДок);
							Параметры.ПараметрыАлгоритмов.Установить("НомерСтрокиДокументаОплаты", 0);
							ТаблУчета.ДатаНомерДок = НомерДокументаОплаты();														 
							
							Параметры.ПараметрыАлгоритмов.Установить("СодержаниеДокумент", Запрос.Документ);
							Параметры.ПараметрыАлгоритмов.Установить("СодержаниеНомерСтроки", 0);
							Параметры.ПараметрыАлгоритмов.Установить("СодержаниеВариант", 1);
							
							ТаблУчета.СодержОперации = СодержаниеОперации();
						КонецЕсли;
						
						Основание = "НДС, предъявленный поставщиками";
						ТаблУчета.СодержОперации = ?(ПустоеЗначение(ТаблУчета.СодержОперации) = 1, Основание, ТаблУчета.СодержОперации + " / " + Основание);
						
						ТаблУчета.НомерКвартала = Цел(ДатаМесяц(КонКвартала(Запрос.Документ.ДатаДок))/3);
						ТаблУчета.ДатаКонцаКвартала = КонКвартала(Запрос.Документ.ДатаДок);
						ТаблУчета.Описание = ТаблУчета.СодержОперации;
						ТаблУчета.Расходы = Запрос.СуммаНДС;
						ТаблУчета.ЭтоНДС = 1;
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
КонецЕсли;

ТаблКварталов = СоздатьОбъект("ТаблицаЗначений");
ТаблУчета.Выгрузить(ТаблКварталов);
ТаблКварталов.Свернуть("ДатаКонцаКвартала",);
ТаблКварталов.Сортировать("+ДатаКонцаКвартала");

ТаблУчета.Свернуть("Документ, НомерСтрокиДок, ДатаНомерДок, НомерКвартала, ДатаКонцаКвартала, ЭтоНДС", " ДоходыБУ, Доходы,  РасходыБУ, Расходы, НДС, ДоходыЕНВД, СодержОперации");
ТаблУчета.Сортировать("+Документ, НомерСтрокиДок, ДатаНомерДок, НомерКвартала, ЭтоНДС");
ТаблУчета.Сортировать("Документ,ЭтоНДС", 1);

КолвоКварталов = Цел(ДатаМесяц(КонКвартала(Дата2))/3);

Для ТекКвартал = 1 По КолвоКварталов Цикл
	ДатаКонцаКвартала = "";
	Раздел1.УдалитьСтроки();
	ТаблУчета.ВыбратьСтроки();
	Пока ТаблУчета.ПолучитьСтроку() = 1 Цикл
		
		ТекДок = ТаблУчета.Документ;
		Если ТаблУчета.НомерКвартала = ТекКвартал Тогда
			
			Если ПустоеЗначение(ДатаКонцаКвартала) = 1 Тогда
				ДатаКонцаКвартала = ТаблУчета.ДатаКонцаКвартала;
			КонецЕсли;
			
			
			Раздел1.НоваяСтрока();
			
			Раздел1.ДатаНомер = ТаблУчета.ДатаНомерДок;
			Раздел1.Содержание   = ТаблУчета.СодержОперации;
			Раздел1.Графа5       = ТаблУчета.Доходы;
			
			Если ПорядокПризнанияРасходовПоНДС = Перечисление.ПорядокПризнанияРасходовПоНДС.ПоОплатеПоставщику Тогда
				Раздел1.Графа7  = ТаблУчета.Расходы - ТаблУчета.НДС;
			Иначе
				Если РежимПечатиНДС = 1 Тогда
					Раздел1.Графа7      = ТаблУчета.Расходы;
					Раздел1.НДС			= ТаблУчета.НДС;
				ИначеЕсли РежимПечатиНДС = 2 Тогда 
					Раздел1.Графа7  = ТаблУчета.Расходы - ТаблУчета.НДС;			
					Раздел1.НДС		= ТаблУчета.НДС;
				Иначе
					Раздел1.Графа7  = ТаблУчета.Расходы;
				КонецЕсли;
			КонецЕсли;
			
			Раздел1.Графа4       = ТаблУчета.ДоходыБУ;
			Раздел1.ДоходыЕНВД	= ТаблУчета.ДоходыЕНВД;
			
			НДСрасходовБУ = 0;
			Если ПорядокПризнанияРасходовПоНДС = Перечисление.ПорядокПризнанияРасходовПоНДС.ВключатьВСтоимость Тогда
				Если (РежимПечатиНДС = 2) и (ТаблУчета.РасходыБУ &gt; 0) и (ТаблУчета.Расходы &gt; 0) и (ТаблУчета.НДС &gt; 0) Тогда 
					НДСрасходовБУ  = ?(ТаблУчета.РасходыБУ &gt;= ТаблУчета.Расходы, ТаблУчета.НДС, ТаблУчета.НДС*ТаблУчета.РасходыБУ/ТаблУчета.Расходы);
					Раздел1.Графа6  = ТаблУчета.РасходыБУ - НДСрасходовБУ;
				Иначе
					Раздел1.Графа6  = ТаблУчета.РасходыБУ;
				КонецЕсли;
				
			Иначе
				Раздел1.Графа6  = ТаблУчета.РасходыБУ;
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
	
	Если Раздел1.КоличествоСтрок() &lt;&gt; 0 Тогда
		ВходящиеДанные = СоздатьОбъект("СписокЗначений");
		ВходящиеДанные.Установить("Строки", Раздел1);
		ВходящиеДанные.Установить("Комментарий", "# Перенесено из 1С:Предпринимателя 7.7 # &lt;Записи КУДиР - Раздел I&gt;");
		ВходящиеДанные.Установить("Дата", ДатаКонцаКвартала);
		ВыгрузитьПоПравилу(,,ВходящиеДанные,, "ЗаписьКУДиР");
	КонецЕсли;
	
КонецЦикла;

//Раздел 2

Дата2 = Параметры.ДатаКонцаПериодаВыгрузки;
КолвоКварталов = Цел(ДатаМесяц(КонКвартала(Дата2))/3);
ДатаКонцаКвартала = КонМесяца(ДобавитьМесяц(НачГода(Дата2),2));
Дата2 = ДатаКонцаКвартала;

Для ТекКвартал = 1 По КолвоКварталов Цикл
	
	Параметры.ПараметрыАлгоритмов.Установить("Дата2", Дата2);
	
	ТаблицаСтрок = СоздатьОбъект("ТаблицаЗначений");
	ТаблицаСтрок.НоваяКолонка("СписокДат", "Строка");
	ТаблицаСтрок.НоваяКолонка("КолвоКвартОтч", "Число");
	ТаблицаСтрок.НоваяКолонка("КолвоКвартНал", "Число");
	ТаблицаСтрок.НоваяКолонка("СуммаРасходов", "Число");
	ТаблицаСтрок.НоваяКолонка("СуммаРасходовКвартал", "Число");
	ТаблицаСтрок.НоваяКолонка("ОплаченнаяОстаточнаяСтоимость", "Число");
	ТаблицаСтрок.НоваяКолонка("ОплаченнаяПервоначальнаяСтоимость", "Число");
	
	Оплата = СоздатьОбъект("Периодический");	
	
	Таб = СоздатьОбъект("Таблица");
	
	СписокВидовРесурсов = СоздатьОбъект("СписокЗначений");
	СписокВидовРесурсов.ДобавитьЗначение(Перечисление.ВидыМатериальныхРесурсов.ОсновноеСредство);
	СписокВидовРесурсов.ДобавитьЗначение(Перечисление.ВидыМатериальныхРесурсов.НематериальныйАктив);
	
	ВремРегистры = СоздатьОбъект("Регистры");
	Расходы = ВремРегистры.Расходы;
	Расходы.ВременныйРасчет(1);
	глФильтрПоВидуДеятельности(Расходы, ВидыДеятельностиУСН);
	глФильтрПоОперациямОблагаемымНДС(Расходы);
	глФильтрПоВидуРесурса(Расходы, СписокВидовРесурсов);
	
	Амортизация = ВремРегистры.Амортизация;
	Амортизация.ВременныйРасчет(1);
	глФильтрПоВидуДеятельности(Амортизация, ВидыДеятельностиУСН);
	глФильтрПоВидуРесурса(Амортизация, СписокВидовРесурсов);
	
	ВремРегистры.РассчитатьРегистрыНа(ДатаПереходаНаУСН);
	
	ТабОС = СоздатьОбъект("ТаблицаЗначений");
	ТабОС.НоваяКолонка("ОС");
	ТабОС.НоваяКолонка("ДокументВводаВЭксплуатацию", "Документ");
	ТабОС.НоваяКолонка("Документ", "Документ");
	ТабОС.НоваяКолонка("ДокументОплаты", "Документ");
	ТабОС.НоваяКолонка("НомСтроки", "Число");
	ТабОС.НоваяКолонка("Стоимость", "Число");
	ТабОС.НоваяКолонка("ПервоначальнаяСтоимость", "Число");
	
	ТабСтоимости = СоздатьОбъект("ТаблицаЗначений");
	ТабСтоимости.НоваяКолонка("ОС");
	ТабСтоимости.НоваяКолонка("Стоимость", "Число");
	ТабСтоимости.НоваяКолонка("ДатаВыбытия", "Дата");
	ТабСтоимости.НоваяКолонка("БылПриход", "Число");
	
	ТабАмортизации = СоздатьОбъект("ТаблицаЗначений");
	ТабИтогов = СоздатьОбъект("ТаблицаЗначений");
	Расходы.ВыгрузитьИтоги(ТабИтогов, 1, 1);
	
	// Итоги на дату перехода на УСН
	ТабИтогов.ВыбратьСтроки();
	Пока ТабИтогов.ПолучитьСтроку() = 1 Цикл
		ТабОС.НоваяСтрока();
		ТабОС.ОС = ТабИтогов.Номенклатура;
		ТабОС.ДокументВводаВЭксплуатацию = ТабИтогов.ДокументПоступления;
		ТабОС.Документ = ТабИтогов.ДокументПоступления;
		
		СтоимостьНаДатуПерехода = ТабИтогов.СтоимостьОплаченная;
		
		Амортизация.УстановитьЗначениеФильтра("Объект", ТабИтогов.Номенклатура);
		Амортизация.ВыгрузитьИтоги(ТабАмортизации);
		АмортизацияНаДатуПерехода = ТабАмортизации.Итог("Амортизация");
		
		ТабОС.Стоимость = Макс(0, СтоимостьНаДатуПерехода - АмортизацияНаДатуПерехода);
		ТабОС.ПервоначальнаяСтоимость = СтоимостьНаДатуПерехода;
		
		ТабСтоимости.НоваяСтрока();
		ТабСтоимости.ОС = ТабОС.ОС;
		ТабСтоимости.Стоимость = СтоимостьНаДатуПерехода;
		ТабСтоимости.ДатаВыбытия = Дата(0); 
	КонецЦикла;                    
	// Увеличение стоимости (в том числе приобретение новых объектов) за период применения УСН
	Расходы.ВыбратьДвижения(ДатаПереходаНаУСН, Дата2);
	Пока Расходы.ПолучитьДвижение() = 1 Цикл
		
		НомСтроки = 0;
		Если ТабСтоимости.НайтиЗначение(Расходы.Номенклатура, НомСтроки, "ОС") = 0 Тогда
			ТабСтоимости.НоваяСтрока();
			ТабСтоимости.ОС = Расходы.Номенклатура;
			
		Иначе
			ТабСтоимости.ПолучитьСтрокуПоНомеру(НомСтроки);
		КонецЕсли;
		
		Если ПустоеЗначение(ТабСтоимости.ДатаВыбытия) = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Если Расходы.Приход = 1 Тогда
			ТабОС.НоваяСтрока();
			ТабОС.ОС = Расходы.Номенклатура;
			ТабОС.ДокументВводаВЭксплуатацию = Расходы.ДокументПоступления;
			ТабОС.Документ = Расходы.ТекущийДокумент();
			
			Если ПустоеЗначение(Расходы.ДокументОплаты) = 0 Тогда
				ТабОС.Документ = Расходы.ДокументОплаты;
				ТабОС.НомСтроки = Расходы.НомерСтроки;
			КонецЕсли;
			
			ТабОС.Стоимость = Расходы.СтоимостьОплаченная;
			ТабОС.ПервоначальнаяСтоимость = Расходы.СтоимостьОплаченная;
			
			ТабСтоимости.Стоимость = ТабСтоимости.Стоимость + Расходы.СтоимостьОплаченная;
			
		Иначе
			ТабСтоимости.Стоимость = ТабСтоимости.Стоимость - Расходы.СтоимостьОплаченная;
		КонецЕсли;
		
		Если ТабСтоимости.Стоимость &gt; 0 Тогда
			ТабСтоимости.БылПриход = 1;
		КонецЕсли;
		
		Если (ТабСтоимости.Стоимость &lt;= 0) и (ТабСтоимости.БылПриход = 1) Тогда
			ТабСтоимости.ДатаВыбытия = Расходы.ТекущийДокумент().ДатаДок;
		КонецЕсли;  
	КонецЦикла;
	
	ДокументыОплаты = СоздатьОбъект("ТаблицаЗначений");
	ДокументыОплаты.НоваяКолонка("ДокументОплаты", "Докуимент");
	ДокументыОплаты.НоваяКолонка("НомСтроки", "Число");
	
	ТабОС.Свернуть("ОС,ДокументВводаВЭксплуатацию,Документ,ДокументОплаты,НомСтроки", "Стоимость,ПервоначальнаяСтоимость");
	ТабОплаты = СоздатьОбъект("ТаблицаЗначений");
	ТабОплаты.НоваяКолонка("ОС");
	ТабОплаты.НоваяКолонка("ДатаОплаты");
	ТабОплаты.НоваяКолонка("КоличествоКварталовВНалоговомПериоде");
	ТабОплаты.НоваяКолонка("МенюРасшифровки");
	
	ТабОС.ВыбратьСтроки();
	Пока ТабОС.ПолучитьСтроку()=1 Цикл
		ОсновноеСредство = ТабОС.ОС;
		
		Если глЕстьРеквизитШапки("ДокументПодтверждающийФактОплаты", ТабОС.Документ.Вид()) = 1 Тогда
			Расшифровка = ТабОС.Документ;
			ДатаОплаты = ТабОС.Документ.ДокументПодтверждающийФактОплаты;
			
			Если ПустоеЗначение(ТабОС.Документ.ДокументПодтверждающийФактОплаты) = 0 Тогда
				
				Если ТипЗначения(ДатаОплаты)=2 Тогда
					Если ПустоеЗначение(Дата(СокрЛП(ДатаОплаты)))=0 Тогда
						ДатаОплаты = Дата(СокрЛП(ДатаОплаты)); 
					КонецЕсли;
				ИначеЕсли  ТипЗначения(ДатаОплаты)=12 Тогда
					ДатаОплаты = ТабОС.Документ.ДокументПодтверждающийФактОплаты.ДатаДок;
				Иначе					
					ДатаОплаты = ТабОС.Документ.ДатаДок;
				КонецЕсли;
			Иначе
				ДатаОплаты = ТабОС.Документ.ДатаДок;
			КонецЕсли;
			
		ИначеЕсли ПустоеЗначение(ТабОС.ДокументОплаты) = 0 Тогда
			Расшифровка = ТабОС.ДокументОплаты;
			Если глЕстьРеквизитШапки("ДокументПодтверждающийФактОплаты",Расшифровка.Вид()) = 1 Тогда
				Если (ПустоеЗначение(Расшифровка.ДокументПодтверждающийФактОплаты) = 0) Тогда
					Если (ТипЗначения(Расшифровка.ДокументПодтверждающийФактОплаты)=12) Тогда
						ДатаОплаты = Расшифровка.ДокументПодтверждающийФактОплаты.ДатаДок;
					ИначеЕсли (ТипЗначения(Расшифровка.ДокументПодтверждающийФактОплаты)=2)
						и (ПустоеЗначение(Дата(СокрЛП(Расшифровка.ДокументПодтверждающийФактОплаты)))=0) Тогда
						ДатаОплаты = Дата(СокрЛП(Расшифровка.ДокументПодтверждающийФактОплаты));						
					Иначе
						ДатаОплаты = Дата(СокрЛП(Строка(Расшифровка.ДокументПодтверждающийФактОплаты)));						
					КонецЕсли; 
				Иначе
					ДатаОплаты = ТабОС.ДокументОплаты.ДатаДок;
				КонецЕсли;				
			Иначе					                                             								
				ДатаОплаты = ТабОС.ДокументОплаты.ДатаДок;
			КонецЕсли;                                                         
		Иначе
			Расшифровка = ОсновноеСредство;
			
			Если ТабОС.Документ.Вид()="РасходныйОрдер" Тогда
				ДатаОплаты=ТабОС.Документ.ДатаДок;
				Расшифровка = ТабОС.Документ;
			Иначе
				ДокументыОплаты.УдалитьСтроки();
				ДокументыОплаты.НоваяКолонка("НомСтроки", "Число");
				Док = ТабОС.ДокументВводаВЭксплуатацию;
				ВМР = ?(ОсновноеСредство.Вид()="ОсновныеСредства",Перечисление.ВидыМатериальныхРесурсов.ОсновноеСредство,Перечисление.ВидыМатериальныхРесурсов.НематериальныйАктив);
				МР = ОсновноеСредство;
				
				Параметры.ПараметрыАлгоритмов.Установить("ВидДеятельности", "");
				Параметры.ПараметрыАлгоритмов.Установить("ОблагаетсяНДС", "");
				Параметры.ПараметрыАлгоритмов.Установить("Док", Док);
				Параметры.ПараметрыАлгоритмов.Установить("ВМР", ВМР);
				Параметры.ПараметрыАлгоритмов.Установить("МР", МР);
				Параметры.ПараметрыАлгоритмов.Установить("ДокОплаты", "");
				Параметры.ПараметрыАлгоритмов.Установить("НомСтроки", "");
				Параметры.ПараметрыАлгоритмов.Установить("ТекДок", ТабОС.Документ);
				Параметры.ПараметрыАлгоритмов.Установить("ДокументыОплаты", ДокументыОплаты);
				
				ПолучитьДокументыОплаты();
				ДокументыОплаты = Параметры.ПараметрыАлгоритмов.Получить("ДокументыОплаты");
				ДокументыОплаты.Свернуть("ДокументОплаты", "");
				
				ДатаОплаты = "";
				
				Если ДокументыОплаты.КоличествоСтрок() &gt; 1 Тогда
					Меню = СоздатьОбъект("СписокЗначений");
					ДокументыОплаты.ВыбратьСтроки();
					Пока ДокументыОплаты.ПолучитьСтроку() = 1 Цикл
						Меню.ДобавитьЗначение(ДокументыОплаты.ДокументОплаты, глПредставлениеДокумента(ДокументыОплаты.ДокументОплаты));
						Если глЕстьРеквизитШапки("ДокументПодтверждающийФактОплаты",ДокументыОплаты.ДокументОплаты.Вид()) = 1 Тогда
							Если (ПустоеЗначение(ДокументыОплаты.ДокументОплаты.ДокументПодтверждающийФактОплаты) = 0)  Тогда
								Если (ТипЗначения(ДокументыОплаты.ДокументОплаты.ДокументПодтверждающийФактОплаты)=12) Тогда
									ДатаОплаты = ?(ДатаОплаты &lt;&gt; "", ДатаОплаты, ДокументыОплаты.ДокументОплаты.ДокументПодтверждающийФактОплаты.ДатаДок);
								ИначеЕсли (ТипЗначения(ДокументыОплаты.ДокументОплаты.ДокументПодтверждающийФактОплаты)=2)
									и (ПустоеЗначение(Дата(СокрЛП(Расшифровка.ДокументПодтверждающийФактОплаты)))=0) Тогда
									ДатаОплаты = ?(ДатаОплаты &lt;&gt; "", ДатаОплаты, Дата(СокрЛП(ДокументыОплаты.ДокументОплаты.ДокументПодтверждающийФактОплаты)));
								Иначе
									ДатаОплаты = ?(ДатаОплаты &lt;&gt; "", ДатаОплаты, Дата(Строка(СокрЛП(Строка(ДокументыОплаты.ДокументОплаты.ДокументПодтверждающийФактОплаты)))));
								КонецЕсли;								
							Иначе					
								ДатаОплаты = ?(ДатаОплаты &lt;&gt; "", ДатаОплаты, ДокументыОплаты.ДокументОплаты.ДатаДок);
							КонецЕсли;
						Иначе
							ДатаОплаты = ?(ДатаОплаты &lt;&gt; "", ДатаОплаты, ДокументыОплаты.ДокументОплаты.ДатаДок);
						КонецЕсли;
					КонецЦикла;
					Расшифровка = СоздатьОбъект("СписокЗначений");
					Расшифровка.Установить("Меню", Меню);	
				ИначеЕсли ДокументыОплаты.КоличествоСтрок() = 1 Тогда
					Расшифровка = ДокументыОплаты.ПолучитьЗначение(1, "ДокументОплаты");
					Если глЕстьРеквизитШапки("ДокументПодтверждающийФактОплаты",Расшифровка.Вид()) = 1 Тогда
						Если (ПустоеЗначение(Расшифровка.ДокументПодтверждающийФактОплаты) = 0) Тогда
							Если (ТипЗначения(Расшифровка.ДокументПодтверждающийФактОплаты)=12) Тогда
								ДатаОплаты = Расшифровка.ДокументПодтверждающийФактОплаты.ДатаДок;
							ИначеЕсли (ТипЗначения(Расшифровка.ДокументПодтверждающийФактОплаты)=2) 
								и (ПустоеЗначение(Дата(СокрЛП(Расшифровка.ДокументПодтверждающийФактОплаты)))=0) Тогда
								ДатаОплаты = Дата(СокрЛП(Строка(Расшифровка.ДокументПодтверждающийФактОплаты)));
							Иначе                                                                                                    
								ДатаОплаты = Дата(СокрЛП(Строка(Расшифровка.ДокументПодтверждающийФактОплаты)));
							КонецЕсли;																							
						Иначе					                                             								
							ДатаОплаты = ДокументыОплаты.ПолучитьЗначение(1, "ДокументОплаты").ДатаДок;
						КонецЕсли;
					Иначе
						ДатаОплаты = ДокументыОплаты.ПолучитьЗначение(1, "ДокументОплаты").ДатаДок;
					КонецЕсли;						
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если ПустоеЗначение(ДатаОплаты) = 0 Тогда
			Если ТипЗначенияСтр(Расшифровка) = "СписокЗначений" Тогда
				Для СчетчикСписка = 1 по Расшифровка.РазмерСписка() Цикл
					ТабОплаты.НоваяСтрока();
					ТабОплаты.ОС = ОсновноеСредство;
					ТабОплаты.ДатаОплаты = ДатаОплаты; 
					ТабОплаты.МенюРасшифровки = Расшифровка.ПолучитьЗначение(СчетчикСписка); 
					
					ДатаОплатыДляРасчета = ТабОС.ОС.ДатаПриобретения;
					Если ПустоеЗначение(ТабОС.Документ)  = 0 Тогда
						Если ТабОС.Документ.ДатаДок &gt; ДатаПереходаНаУСН Тогда
							ДатаОплатыДляРасчета = ТабОС.Документ.ДатаДок;
						КонецЕсли;
					КонецЕсли;  
					
					Параметры.ПараметрыАлгоритмов.Установить("ДатаВключенияСтоимостиВРасходы", Макс(ДатаОплатыДляРасчета, ТабОС.ОС.ДатаНачалаИспользования));
					РассчитатьКоличествоМесяцевЭксплуатации();
					КоличествоКварталовВНалоговомПериоде=Параметры.ПараметрыАлгоритмов.Получить("КоличествоКварталовВНалоговомПериоде");
					КоличествоКварталовВОтчетномПериоде=Параметры.ПараметрыАлгоритмов.Получить("КоличествоКварталовВОтчетномПериоде");
					
					ТабОплаты.КоличествоКварталовВНалоговомПериоде = КоличествоКварталовВНалоговомПериоде;
				КонецЦикла;
			Иначе
				ТабОплаты.НоваяСтрока();
				ТабОплаты.ОС = ОсновноеСредство;
				ТабОплаты.ДатаОплаты = ДатаОплаты; 
				ТабОплаты.МенюРасшифровки = Расшифровка; 
				
				ДатаОплатыДляРасчета = ТабОС.ОС.ДатаПриобретения;
				Если ПустоеЗначение(ТабОС.Документ)  = 0 Тогда
					Если ТабОС.Документ.ДатаДок &gt; ДатаПереходаНаУСН Тогда
						ДатаОплатыДляРасчета = ТабОС.Документ.ДатаДок;
					КонецЕсли;
				КонецЕсли;  
				
				Параметры.ПараметрыАлгоритмов.Установить("ДатаВключенияСтоимостиВРасходы", Макс(ДатаОплатыДляРасчета, ТабОС.ОС.ДатаНачалаИспользования));
				РассчитатьКоличествоМесяцевЭксплуатации();		
				КоличествоКварталовВНалоговомПериоде=Параметры.ПараметрыАлгоритмов.Получить("КоличествоКварталовВНалоговомПериоде");
				КоличествоКварталовВОтчетномПериоде=Параметры.ПараметрыАлгоритмов.Получить("КоличествоКварталовВОтчетномПериоде");
				
				ТабОплаты.КоличествоКварталовВНалоговомПериоде = КоличествоКварталовВНалоговомПериоде;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ТабОплаты.Свернуть("ОС,ДатаОплаты,МенюРасшифровки,КоличествоКварталовВНалоговомПериоде",);
	
	ТабОСН = СоздатьОбъект("ТаблицаЗначений");
	ТабОСН.НоваяКолонка("ОС");
	ТабОСН.НоваяКолонка("ПервоначальнаяСтоимость");
	ТабОСН.НоваяКолонка("ПечДатаПодачиДокументовНаГосРегистрацию"); 
	ТабОСН.НоваяКолонка("ПечДатаВводаВЭксплуатацию");
	ТабОСН.НоваяКолонка("СрокПолезногоИспользования");
	ТабОСН.НоваяКолонка("ОстаточнаяСтоимость");
	ТабОСН.НоваяКолонка("КоличествоКварталовВНалоговомПериоде");
	ТабОСН.НоваяКолонка("ПроцентПринятыхРасходов");
	ТабОСН.НоваяКолонка("ПроцентПринятыхРасходовЗаМесяц");
	ТабОСН.НоваяКолонка("СуммаРасходовЗаПоследнийКвартал");
	ТабОСН.НоваяКолонка("СуммаРасходовЗаОтчетныйПериод"); 
	ТабОСН.НоваяКолонка("СуммаРасходовПредыдущихПериодов");
	ТабОСН.НоваяКолонка("СуммаРасходовНеВключенныхВСоставРасходов");
	ТабОСН.НоваяКолонка("ПечДатаВыбытия");
	ТабОСН.НоваяКолонка("ДатаОплаты");
	ТабОСН.НоваяКолонка("КоличествоКварталовВОтчетномПериоде");
	ТабОСН.НоваяКолонка("МенюРасшифровки");
	
	
	ТабОС.ВыбратьСтроки();
	Пока ТабОС.ПолучитьСтроку() = 1 Цикл
		НомСтроки = 0;
		ДатаВыбытия = Дата(0);
		Если ТабСтоимости.НайтиЗначение(ТабОС.ОС, НомСтроки, "ОС") = 1 Тогда
			Если (ТабСтоимости.ДатаВыбытия &lt; Дата1) и (ПустоеЗначение(ТабСтоимости.ДатаВыбытия) = 0) Тогда
				Продолжить;
				
			Иначе
				ДатаВыбытия = ТабСтоимости.ПолучитьЗначение(НомСтроки, "ДатаВыбытия");
			КонецЕсли;
		КонецЕсли;
		
		ОсновноеСредство = ТабОС.ОС;
		
		НаименованиеОС  = ОсновноеСредство.Наименование + ", инв.№" + ОсновноеСредство.Код;
		ПечДатаВводаВЭксплуатацию = Формат(ОсновноеСредство.ДатаНачалаИспользования, "Д ДДММГГГГ");
		ПечДатаВыбытия = ОсновноеСредство.ОснованиеВыбытия;
		
		Если  ОсновноеСредство.Вид()="ОсновныеСредства" Тогда
			СрокПолезногоИспользования = ОсновноеСредство.СрокПолезногоИспользования.Получить(Дата2);
			ПечДатаПодачиДокументовНаГосРегистрацию = ОсновноеСредство.ДатаПодачиДокументовНаГосРегистрацию;
		ИначеЕсли ОсновноеСредство.Вид()="НематериальныеАктивы" Тогда
			СрокПолезногоИспользования = ОсновноеСредство.СрокПолезногоИспользования;
			ПечДатаПодачиДокументовНаГосРегистрацию = "";
		КонецЕсли;
		
		Если ОсновноеСредство.ДатаПриобретения &gt;= '01.01.2002' Тогда
			СрокПолезногоИспользования = Цел(СрокПолезногоИспользования / 12) + ?(СрокПолезногоИспользования % 12 &lt;&gt; 0, 1, 0);
		КонецЕсли;
		
		Амортизация.УстановитьЗначениеФильтра("Объект", ТабОС.ОС);
		Амортизация.УстановитьЗначениеФильтра("ДокументОплаты", ТабОС.Документ);
		Амортизация.УстановитьЗначениеФильтра("НомерСтроки", ТабОС.НомСтроки);
		
		СуммаРасходовЗаОтчетныйПериод = 0;
		СуммаРасходовЗаПоследнийКвартал = 0; 
		СуммаРасходовПредыдущихПериодов = 0;
		Амортизация.ВыбратьДвижения(?(ОсновноеСредство.ДатаПриобретения &gt;= ДатаПереходаНаУСН, ОсновноеСредство.ДатаПриобретения, ДатаПереходаНаУСН), Дата2);
		Пока Амортизация.ПолучитьДвижение() = 1 Цикл
			Если Амортизация.ТекущийДокумент().ДатаДок &gt;= НачКвартала(Дата2) Тогда
				СуммаРасходовЗаПоследнийКвартал = СуммаРасходовЗаПоследнийКвартал + Амортизация.Расходы;
			КонецЕсли;
			
			Если Амортизация.ТекущийДокумент().ДатаДок &lt; НачГода(Дата2) Тогда
				СуммаРасходовПредыдущихПериодов = СуммаРасходовПредыдущихПериодов + Амортизация.Расходы;
				
			Иначе
				СуммаРасходовЗаОтчетныйПериод = СуммаРасходовЗаОтчетныйПериод + Амортизация.Расходы;
			КонецЕсли;
		КонецЦикла;
		
		Если СуммаРасходовЗаОтчетныйПериод = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ПервоначальнаяСтоимость = ТабОС.ПервоначальнаяСтоимость;
		
		Если (Дата2 &gt; '01.01.2006') и (КонКвартала(Дата2) &lt; КонГода(Дата2)) Тогда
			СуммаРасходовЗаОтчетныйПериод = 0;
		КонецЕсли;
		
		
		Если ОсновноеСредство.ДатаПриобретения &lt; ДатаПереходаНаУСН Тогда
			ДатаОплатыДляРасчета = ТабОС.ОС.ДатаПриобретения;
			Если ПустоеЗначение(ТабОС.Документ)  = 0 Тогда
				Если ТабОС.Документ.ДатаДок &gt; ДатаПереходаНаУСН Тогда
					ДатаОплатыДляРасчета = ТабОС.Документ.ДатаДок;
				КонецЕсли;
			КонецЕсли;
			
			Параметры.ПараметрыАлгоритмов.Установить("ДатаВключенияСтоимостиВРасходы", Макс(ДатаОплатыДляРасчета, ТабОС.ОС.ДатаНачалаИспользования));
			РассчитатьКоличествоМесяцевЭксплуатации();
			КоличествоКварталовВНалоговомПериоде=Параметры.ПараметрыАлгоритмов.Получить("КоличествоКварталовВНалоговомПериоде");
			КоличествоКварталовВОтчетномПериоде=Параметры.ПараметрыАлгоритмов.Получить("КоличествоКварталовВОтчетномПериоде");
			
			ПроцентСписания = 0;
			
			Если СрокПолезногоИспользования &lt;= 3 Тогда
				
				Если ДатаГод(Дата2) = ДатаГод(ДатаПереходаНаУСН) Тогда
					ПроцентСписания = 100;
				КонецЕсли;
				
			ИначеЕсли СрокПолезногоИспользования &lt;= 15 Тогда
				Если ДатаГод(Дата2) = ДатаГод(ДатаПереходаНаУСН) Тогда
					ПроцентСписания = 50;
					
				ИначеЕсли (ДатаГод(Дата2) - 1) = ДатаГод(ДатаПереходаНаУСН) Тогда
					ПроцентСписания = 30;
					
				ИначеЕсли (ДатаГод(Дата2) - 2) = ДатаГод(ДатаПереходаНаУСН) Тогда
					ПроцентСписания = 20;
				КонецЕсли;
				
			Иначе
				ПроцентСписания = 10;
			КонецЕсли;

			ПроцентПринятыхРасходов = ПроцентСписания;
			
			ПроцентПринятыхРасходовЗаМесяц = ?(КоличествоКварталовВНалоговомПериоде = 0, 0,
			
			Окр(ПроцентПринятыхРасходов/КоличествоКварталовВНалоговомПериоде,?( Дата2&lt;'01.01.2006',4,2)));
			
			ОстаточнаяСтоимость = ТабОС.Стоимость;
			
			Если ПустоеЗначение(ДатаВыбытия) = 0 Тогда
				СуммаРасходовНеВключенныхВСоставРасходов = 0;
			Иначе
				СуммаРасходовНеВключенныхВСоставРасходов = Макс(0, ОстаточнаяСтоимость
				- СуммаРасходовЗаОтчетныйПериод
				- СуммаРасходовПредыдущихПериодов);
			КонецЕсли;
			
		Иначе
			ДатаОплатыДляРасчета = ТабОС.ОС.ДатаПриобретения;
			Если ПустоеЗначение(ТабОС.Документ)  = 0 Тогда
				Если ТабОС.Документ.ДатаДок &gt; ДатаПереходаНаУСН Тогда
					ДатаОплатыДляРасчета = ТабОС.Документ.ДатаДок;
				КонецЕсли;
			КонецЕсли;
			
			Если (Дата2 &gt; '01.01.2006') Тогда
				СрокПолезногоИспользования = "";          
				ПроцентПринятыхРасходов = 100;
				Параметры.ПараметрыАлгоритмов.Установить("ДатаВключенияСтоимостиВРасходы", Макс(ДатаОплатыДляРасчета, ТабОС.ОС.ДатаНачалаИспользования));
				РассчитатьКоличествоМесяцевЭксплуатации();
				КоличествоКварталовВНалоговомПериоде=Параметры.ПараметрыАлгоритмов.Получить("КоличествоКварталовВНалоговомПериоде");
				КоличествоКварталовВОтчетномПериоде=Параметры.ПараметрыАлгоритмов.Получить("КоличествоКварталовВОтчетномПериоде");
				
				ПроцентПринятыхРасходовЗаМесяц = ?(КоличествоКварталовВНалоговомПериоде = 0, 0, Окр(ПроцентПринятыхРасходов/КоличествоКварталовВНалоговомПериоде, 2));
				ОстаточнаяСтоимость = 0;
				СуммаРасходовПредыдущихПериодов = 0; 
				СуммаРасходовНеВключенныхВСоставРасходов = 0;
				Если КонКвартала(Дата2) &lt; КонГода(Дата2) Тогда
					СуммаРасходовЗаОтчетныйПериод = 0;
				КонецЕсли;
			Иначе
				КоличествоКварталовВОтчетномПериоде = 0;
				КоличествоКварталовВНалоговомПериоде = 0;
				ПроцентПринятыхРасходов = 0;
				ПроцентПринятыхРасходовЗаМесяц = 0;
				ОстаточнаяСтоимость = 0;			
			КонецЕсли; 
		КонецЕсли;
		
		ПорядковыйНомер = ПорядковыйНомер + 1;
		ДатыОплаты = "";
		КоличествоКварталов = 0;
		ТабОплаты.ВыбратьСтроки();
		
		МенюРасшифровки="";
		МенюРасшифровкиСписок=СоздатьОбъект("СписокЗначений");
		Пока ТабОплаты.ПолучитьСтроку()=1 Цикл
			Если ТабОплаты.ОС = ОсновноеСредство Тогда 
				Если КоличествоКварталовВНалоговомПериоде = ТабОплаты.КоличествоКварталовВНалоговомПериоде тогда
					ДатыОплаты = ?(ДатыОплаты &lt;&gt; "", ДатыОплаты, ТабОплаты.ДатаОплаты);
					Если ТипЗначения(ТабОплаты.МенюРасшифровки)=12 Тогда
						МенюРасшифровкиСписок.ДобавитьЗначение(ТабОплаты.МенюРасшифровки,);
					КонецЕсли;
				КонецЕсли;	
			КонецЕсли;
		КонецЦикла; 
		Если ПустоеЗначение(ДатыОплаты)=1 Тогда
			ДатыОплаты = ТабОС.Документ.ДатаДок;
			МенюРасшифровкиСписок.ДобавитьЗначение(ТабОС.Документ);
		КонецЕсли;
		
		ДатаОплаты = ДатыОплаты;
		
		ТабОСН.НоваяСтрока();
		ТабОСН.ОС =  ОсновноеСредство;
		ТабОСН.ПервоначальнаяСтоимость = ПервоначальнаяСтоимость;
		ТабОСН.ПечДатаПодачиДокументовНаГосРегистрацию=ПечДатаПодачиДокументовНаГосРегистрацию; 
		ТабОСН.ПечДатаВводаВЭксплуатацию=ПечДатаВводаВЭксплуатацию;
		ТабОСН.СрокПолезногоИспользования=СрокПолезногоИспользования;
		ТабОСН.ОстаточнаяСтоимость=ОстаточнаяСтоимость;
		ТабОСН.КоличествоКварталовВНалоговомПериоде=КоличествоКварталовВНалоговомПериоде;
		ТабОСН.КоличествоКварталовВОтчетномПериоде=КоличествоКварталовВОтчетномПериоде;
		ТабОСН.ПроцентПринятыхРасходов=ПроцентПринятыхРасходов;
		ТабОСН.ПроцентПринятыхРасходовЗаМесяц=ПроцентПринятыхРасходовЗаМесяц;
		ТабОСН.СуммаРасходовЗаПоследнийКвартал=СуммаРасходовЗаПоследнийКвартал;
		ТабОСН.СуммаРасходовЗаОтчетныйПериод=СуммаРасходовЗаОтчетныйПериод; 
		ТабОСН.СуммаРасходовПредыдущихПериодов=СуммаРасходовПредыдущихПериодов;
		ТабОСН.СуммаРасходовНеВключенныхВСоставРасходов=СуммаРасходовНеВключенныхВСоставРасходов;
		ТабОСН.ПечДатаВыбытия=ПечДатаВыбытия;
		ТабОСН.ДатаОплаты = ДатаОплаты; 
		ТабОСН.МенюРасшифровки = МенюРасшифровкиСписок; 
		
	КонецЦикла; 
	
	ТабОСН.Свернуть("МенюРасшифровки,ДатаОплаты,ПечДатаВыбытия,ПроцентПринятыхРасходовЗаМесяц,ПроцентПринятыхРасходов,КоличествоКварталовВНалоговомПериоде,КоличествоКварталовВОтчетномПериоде,СрокПолезногоИспользования,ПечДатаВводаВЭксплуатацию,ОС,ПечДатаПодачиДокументовНаГосРегистрацию","СуммаРасходовНеВключенныхВСоставРасходов,СуммаРасходовПредыдущихПериодов,ПервоначальнаяСтоимость,ОстаточнаяСтоимость,СуммаРасходовЗаПоследнийКвартал,СуммаРасходовЗаОтчетныйПериод,");
	Раздел2.УдалитьСтроки();
	ТабОСН.ВыбратьСтроки();
	Пока ТабОСН.ПолучитьСтроку()=1 Цикл //Выгрузка по ОС
		
		Если ТабОСН.ОС.Вид() &lt;&gt; "ОсновныеСредства" Тогда
			Продолжить;
		ИначеЕсли ТабОСН.СуммаРасходовЗаПоследнийКвартал = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Раздел2.НоваяСтрока();
		Раздел2.ОсновноеСредство					= ТабОСН.ОС;
		Раздел2.ДатаОплаты							= ТабОСН.ДатаОплаты;
		Раздел2.Графа4_ГосударственнаяРегистрация	= ТабОСН.ПечДатаПодачиДокументовНаГосРегистрацию;
		Раздел2.Графа5_ПервоначальнаяСтоимость		= ТабОСН.ПервоначальнаяСтоимость;
		Раздел2.Графа6_ОстаточнаяСтоимость 			= ТабОСН.ОстаточнаяСтоимость;
		Раздел2.Графа8_КолКварталовВОтчетномПериоде	= ТабОСН.КоличествоКварталовВОтчетномПериоде;
		Раздел2.Графа9_КолКварталовВНалПериоде		= ТабОСН.КоличествоКварталовВНалоговомПериоде;
		Раздел2.Графа10_ДоляРасходовЗаНалПериод		= ТабОСН.ПроцентПринятыхРасходов;
		Раздел2.Графа11_ДоляРасходовЗаКвартал		= ТабОСН.ПроцентПринятыхРасходовЗаМесяц;
		Раздел2.Графа12_СуммаРасходовЗаОтчетнПериод	= ТабОСН.СуммаРасходовЗаОтчетныйПериод;
		Раздел2.Графа13_СуммаРасходовЗаКвартал		= ТабОСН.СуммаРасходовЗаПоследнийКвартал;
		Раздел2.Графа14_РасходыПрошлыхПериодов		= ТабОСН.СуммаРасходовПредыдущихПериодов;
		Если ТабОСН.СуммаРасходовНеВключенныхВСоставРасходов &lt;&gt; 0 Тогда
			Раздел2.Графа15_ОстатокРасходов				= ТабОСН.СуммаРасходовНеВключенныхВСоставРасходов;
		Иначе
			Раздел2.Графа15_ОстатокРасходов				= ТабОСН.ПервоначальнаяСтоимость - ТабОСН.КоличествоКварталовВОтчетномПериоде * ТабОСН.СуммаРасходовЗаПоследнийКвартал;
		КонецЕсли;
		
	КонецЦикла;
	
	Если Раздел2.КоличествоСтрок() &lt;&gt; 0 Тогда
		ВходящиеДанные = СоздатьОбъект("СписокЗначений");
		ВходящиеДанные.Установить("ОС", Раздел2);
		ВходящиеДанные.Установить("Комментарий", "# Перенесено из 1С:Предпринимателя 7.7 # &lt;Записи КУДиР - Раздел II (Основные средства)&gt;");
		ВходящиеДанные.Установить("Дата", ДатаКонцаКвартала);
		ВыгрузитьПоПравилу(,,ВходящиеДанные,, "ЗаписьКУДиР");
	КонецЕсли;
	
	Раздел2.УдалитьСтроки();
	ТабОСН.ВыбратьСтроки();
	Пока ТабОСН.ПолучитьСтроку()=1 Цикл //Выгрузка по ОС
		
		Если ТабОСН.ОС.Вид() &lt;&gt; "НематериальныеАктивы" Тогда
			Продолжить;
		ИначеЕсли ТабОСН.СуммаРасходовЗаПоследнийКвартал = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Раздел2.НоваяСтрока();
		Раздел2.НематериальныйАктив					= ТабОСН.ОС;
		Раздел2.ДатаОплаты							= ТабОСН.ДатаОплаты;
		Раздел2.Графа5_ПервоначальнаяСтоимость		= ТабОСН.ПервоначальнаяСтоимость;
		Раздел2.Графа6_ОстаточнаяСтоимость 			= ТабОСН.ОстаточнаяСтоимость;
		Раздел2.Графа8_КолКварталовВОтчетномПериоде	= ТабОСН.КоличествоКварталовВОтчетномПериоде;
		Раздел2.Графа9_КолКварталовВНалПериоде		= ТабОСН.КоличествоКварталовВНалоговомПериоде;
		Раздел2.Графа10_ДоляРасходовЗаНалПериод		= ТабОСН.ПроцентПринятыхРасходов;
		Раздел2.Графа11_ДоляРасходовЗаКвартал		= ТабОСН.ПроцентПринятыхРасходовЗаМесяц;
		Раздел2.Графа12_СуммаРасходовЗаОтчетнПериод	= ТабОСН.СуммаРасходовЗаОтчетныйПериод;
		Раздел2.Графа13_СуммаРасходовЗаКвартал		= ТабОСН.СуммаРасходовЗаПоследнийКвартал;
		Раздел2.Графа14_РасходыПрошлыхПериодов		= ТабОСН.СуммаРасходовПредыдущихПериодов;
		Если ТабОСН.СуммаРасходовНеВключенныхВСоставРасходов &lt;&gt; 0 Тогда
			Раздел2.Графа15_ОстатокРасходов				= ТабОСН.СуммаРасходовНеВключенныхВСоставРасходов;
		Иначе
			Раздел2.Графа15_ОстатокРасходов				= ТабОСН.ПервоначальнаяСтоимость - ТабОСН.КоличествоКварталовВОтчетномПериоде * ТабОСН.СуммаРасходовЗаПоследнийКвартал;
		КонецЕсли;
		
	КонецЦикла;
	
	Если Раздел2.КоличествоСтрок() &lt;&gt; 0 Тогда
		ВходящиеДанные = СоздатьОбъект("СписокЗначений");
		ВходящиеДанные.Установить("НМА", Раздел2);
		ВходящиеДанные.Установить("Комментарий", "# Перенесено из 1С:Предпринимателя 7.7 # &lt;Записи КУДиР - Раздел II (Нематериальные активы)&gt;");
		ВходящиеДанные.Установить("Дата", ДатаКонцаКвартала);
		ВыгрузитьПоПравилу(,,ВходящиеДанные,, "ЗаписьКУДиР");
	КонецЕсли;
	
	ДатаКонцаКвартала = КонМесяца(ДобавитьМесяц(Дата2,3));
	Дата2 = ДатаКонцаКвартала;
	
КонецЦикла;

</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПредставлениеДокумента" ИспользуетсяПриЗагрузке="false">
			<Текст>Док = Параметры.ПараметрыАлгоритмов.Получить("ДокументОплаты");

ДокСтр = "";
Если (ТипЗначенияСтр(Док) = "Документ") или (ТипЗначенияСтр(Док) = "ГрупповойКонтекст") Тогда
	Если Док.Выбран() = 1 Тогда
		Если глЕстьРеквизитШапки("НомерДокВходящий", Док.Вид())  = 1 Тогда
			ДокСтр = "№ " + СокрЛП(Док.НомерДокВходящий);
			ДокСтр = ДокСтр + ?(ПустоеЗначение(Док.ДатаДокВходящий) = 0, " от " + СокрЛ(Формат(Док.ДатаДокВходящий, "ДДДММГГГГ")) + " г.", "");			
			ДокСтр = СокрЛ(ДокСтр);
			
		Иначе
			ДокСтр = "№ " + глПреобразоватьНомерДок(Док.НомерДок);
			ДокСтр = ДокСтр + " от " + СокрЛ(Формат(Док.ДатаДок, "ДДДММГГГГ")) + " г.";
		КонецЕсли;
	КонецЕсли;
КонецЕсли;

Возврат ДокСтр;

</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПриВыгрузкеСубконто" ИспользуетсяПриЗагрузке="false"/>
		<Алгоритм Имя="ПрименитьПараметрыДляСчетовДенежныхСредств" ИспользуетсяПриЗагрузке="true">
			<Текст>БУ = ПланыСчетов.Хозрасчетный.Касса.ПолучитьОбъект();
ВестиУчетПоСтатьямДДС = НЕ (БУ.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиДвиженияДенежныхСредств, "ВидСубконто") = Неопределено);

Если НЕ ВестиУчетПоСтатьямДДС Тогда
	
	ВестиУчетПоСтатьямДДС = Истина;
	
	
	// Устанавливаем/удаляем аналитику по статьям движения на счетах учета денежных средств
	
	Счета = Новый Массив;
	// Счет 50
	Счета.Добавить(ПланыСчетов.Хозрасчетный.Касса);
	Счета.Добавить(ПланыСчетов.Хозрасчетный.КассаОрганизации);
	Счета.Добавить(ПланыСчетов.Хозрасчетный.ОперационнаяКасса);
	Счета.Добавить(ПланыСчетов.Хозрасчетный.КассаОрганизацииВал);
	// Счет 51
	Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетныеСчета);
	// Счет 52
	Счета.Добавить(ПланыСчетов.Хозрасчетный.ВалютныеСчета);
	// Счет 55
	Счета.Добавить(ПланыСчетов.Хозрасчетный.СпециальныеСчета);
	Счета.Добавить(ПланыСчетов.Хозрасчетный.Аккредитивы);
	Счета.Добавить(ПланыСчетов.Хозрасчетный.ЧековыеКнижки);
	Счета.Добавить(ПланыСчетов.Хозрасчетный.ДепозитныеСчета);
	Счета.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеСпециальныеСчета);
	Счета.Добавить(ПланыСчетов.Хозрасчетный.АккредитивыВал);
	Счета.Добавить(ПланыСчетов.Хозрасчетный.ДепозитныеСчетаВал);
	Счета.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеСпециальныеСчетаВал);
	// Счет 57
	Счета.Добавить(ПланыСчетов.Хозрасчетный.ПереводыВПути);
	Счета.Добавить(ПланыСчетов.Хозрасчетный.ПереводыВПутиВал);
	
	// визуализация процесса
	ФормаПрогрессора = ПолучитьОбщуюФорму("ХодВыполненияОбработкиДанных");
	ФормаПрогрессора.НаименованиеОбработкиДанных = "Настройка аналитического учета денежных средств";
	ФормаПрогрессора.Значение = 0;
	ФормаПрогрессора.КомментарийОбработкиДанных  = "";
	ФормаПрогрессора.Открыть();
	
	ОбработаноСчетов = 0;
	КоличествоСчетовВсего = Счета.Количество();
	ФормаПрогрессора.МаксимальноеЗначение = КоличествоСчетовВсего;
	ФормаПрогрессора.КомментарийОбработкиДанных = "Установка аналитики на счетах бухгалтерского учета";
	
	Для каждого Счет Из Счета Цикл
		
		ОбработаноСчетов = ОбработаноСчетов + 1;
		ФормаПрогрессора.Значение = ОбработаноСчетов;
		
		СтрокаВидаСубконто = Счет.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиДвиженияДенежныхСредств, "ВидСубконто");
		НетУчетаПоСтатьямДДС = СтрокаВидаСубконто = Неопределено;
		
		Если ВестиУчетПоСтатьямДДС И НетУчетаПоСтатьямДДС Тогда
			
			СчетОбъект = Счет.ПолучитьОбъект();
			НовыйВидСубконто = СчетОбъект.ВидыСубконто.Добавить();
			НовыйВидСубконто.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиДвиженияДенежныхСредств;
			НовыйВидСубконто.ТолькоОбороты = Истина;
			НовыйВидСубконто.Суммовой = Истина;
			НовыйВидСубконто.Валютный = Истина;
			СчетОбъект.Записать();
			
		ИначеЕсли НЕ ВестиУчетПоСтатьямДДС И НЕ НетУчетаПоСтатьямДДС Тогда
			
			СчетОбъект = Счет.ПолучитьОбъект();
			СтрокаДляУдаления = СчетОбъект.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиДвиженияДенежныхСредств, "ВидСубконто");
			СчетОбъект.ВидыСубконто.Удалить(СтрокаДляУдаления);
			СчетОбъект.Записать();
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ФормаПрогрессора.Открыта() Тогда
		ФормаПрогрессора.Закрыть();
	КонецЕсли;
	
КонецЕсли;

</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПрименитьПараметрыРасчетовПоДокументам" ИспользуетсяПриЗагрузке="true">
			<Текст>БУ = ПланыСчетов.Хозрасчетный.РасчетыСПоставщиками.ПолучитьОбъект();
ВестиРасчетыПоДокументам = НЕ (БУ.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами, "ВидСубконто") = Неопределено);

Если НЕ ВестиРасчетыПоДокументам Тогда
	
	ВестиРасчетыПоДокументам = Истина;
	
	
	СписокСчетов = Новый СписокЗначений();
	СписокСчетов.Добавить("РасчетыСПоставщикамиИПодрядчиками");
	СписокСчетов.Добавить("РасчетыСПокупателямиИЗаказчиками");
	СписокСчетов.Добавить("РасчетыСПрочимиПоставщикамиИПодрядчиками");
	СписокСчетов.Добавить("РасчетыСПрочимиПокупателямиИЗаказчиками");
	СписокСчетов.Добавить("ПрочиеРасчетыСРазнымиДебиторамиИКредиторами");
	
	СписокСчетов.Добавить("РасчетыСПрочимиПоставщикамиИПодрядчикамиВал");
	СписокСчетов.Добавить("РасчетыСПрочимиПокупателямиИЗаказчикамиВал");
	СписокСчетов.Добавить("ПрочиеРасчетыСРазнымиДебиторамиИКредиторамиВал");
	СписокСчетов.Добавить("РасчетыПоПретензиям");
	СписокСчетов.Добавить("РасчетыПоПретензиямВал");
	СписокСчетов.Добавить("РасчетыПоПретензиямУЕ");
	
	// визуализация процесса
	ФормаПрогрессора = ПолучитьОбщуюФорму("ХодВыполненияОбработкиДанных");
	ФормаПрогрессора.НаименованиеОбработкиДанных = "Настройка аналитического учета расчетов с контрагентами";
	ФормаПрогрессора.Значение = 0;
	ФормаПрогрессора.КомментарийОбработкиДанных  = "";
	ФормаПрогрессора.Открыть();
	
	ОбработаноСчетов = 0;
	КоличествоСчетовВсего = СписокСчетов.Количество();
	ФормаПрогрессора.МаксимальноеЗначение = КоличествоСчетовВсего;
	ФормаПрогрессора.КомментарийОбработкиДанных = "Установка аналитики на счетах бухгалтерского учета";
	
	Для каждого СчетСписка Из СписокСчетов Цикл
		
		ИмяСчета = СчетСписка.Значение;
		
		ОбработаноСчетов = ОбработаноСчетов + 1;
		ФормаПрогрессора.Значение = ОбработаноСчетов;
		
		Счет6003 = ПланыСчетов.Хозрасчетный.ВекселяВыданные;
		Счет6203 = ПланыСчетов.Хозрасчетный.ВекселяПолученные;
		Счет62_Р = ПланыСчетов.Хозрасчетный.РасчетыСРозничнымиПокупателями;
		
		Счет  = ПланыСчетов.Хозрасчетный[ИмяСчета];
		Счета = Новый СписокЗначений();
		Счета.Добавить(Счет);
		
		ВыборкаСчетов = ПланыСчетов.Хозрасчетный.ВыбратьИерархически(Счет);
		Пока ВыборкаСчетов.Следующий() Цикл
			
			Если ВыборкаСчетов.Ссылка = Счет6003 
				ИЛИ ВыборкаСчетов.Ссылка = Счет6203 
				ИЛИ ВыборкаСчетов.Ссылка = Счет62_Р Тогда
				Продолжить;
			КонецЕсли;
			
			Счета.Добавить(ВыборкаСчетов.Ссылка);
			
		КонецЦикла;
		
		Для каждого Счет Из Счета Цикл
			
			Объект   = Счет.Значение.ПолучитьОбъект();
			КодСчета = Объект.Код;
			
			Субконто = Объект.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами, "ВидСубконто");
			
			Если НЕ (Субконто = Неопределено) Тогда
				Если Субконто.Предопределенное Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			ВестиРасчетыПоДокументамПоСчету = ВестиРасчетыПоДокументам ИЛИ Объект.Валютный;
			
			Если ВестиРасчетыПоДокументамПоСчету Тогда // Добавляем 
				
				Если Субконто &lt;&gt; Неопределено Тогда 
					Продолжить;
				КонецЕсли;
				
				НовыйВид = Объект.ВидыСубконто.Добавить();
				
				НовыйВид.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами;
				НовыйВид.Суммовой    = Истина;
				
				Если Объект.Количественный Тогда
					НовыйВид.Количественный = Истина;
				КонецЕсли;
				
				Если Объект.Валютный Тогда
					НовыйВид.Валютный = Истина;
				КонецЕсли;
				
				Сообщение = "План счетов ""Хозрасчетный"": на счете """ +Строка(Объект) + """ установлено субконто ""Документы расчетов с контрагентом""";
				
			Иначе // Удаляем
				
				Если Субконто = Неопределено Тогда 
					Продолжить;
				КонецЕсли;
				
				Объект.ВидыСубконто.Удалить(Субконто);
				
				Сообщение = "План счетов ""Хозрасчетный"": на счете """ +Строка(Объект) + """ удалено субконто ""Документы расчетов с контрагентом""";
				
			КонецЕсли;
			
			Если Объект.Модифицированность() Тогда
				Объект.Записать();
				//Сообщить(Сообщение);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Если ФормаПрогрессора.Открыта() Тогда
		ФормаПрогрессора.Закрыть();
	КонецЕсли;
	
КонецЕсли;

</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПрименитьПараметрыРасчетовССотрудниками" ИспользуетсяПриЗагрузке="true">
			<Текст>Значение_ВестиУчетПоРаботникам = Истина;

Значение_ВестиУчетПоРаботникам = ?(одАтрибут(ФайлОбмена, одТипЧисло, "УчетЗарплатыВоВнешнейПрограмме") = 1, Ложь, Истина);

БУ = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда;
ВестиУчетПоРаботникам = НЕ (БУ.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизаций, "ВидСубконто") = Неопределено);


Если ВестиУчетПоРаботникам &lt;&gt; Значение_ВестиУчетПоРаботникам Тогда
	
	ВестиУчетПоРаботникам = Значение_ВестиУчетПоРаботникам;
	
	СписокСчетов = Новый СписокЗначений();
	СписокСчетов.Добавить("РасчетыСПерсоналомПоОплатеТруда");
	СписокСчетов.Добавить("РасчетыПоДепонированнымСуммам");
	СписокСчетов.Добавить("РасходыНаОплатуТрудаБудущихПериодов");
	
	ИмяПланаСчетов = "Хозрасчетный";
	
	// визуализация процесса
	ФормаПрогрессора = ПолучитьОбщуюФорму("ХодВыполненияОбработкиДанных");
	ФормаПрогрессора.НаименованиеОбработкиДанных = "Настройка аналитического учета расчетов с сотрудниками";
	ФормаПрогрессора.Значение = 0;
	ФормаПрогрессора.КомментарийОбработкиДанных  = "";
	ФормаПрогрессора.Открыть();

	ОбработаноСчетов = 0;
	КоличествоСчетовВсего = СписокСчетов.Количество();
	ФормаПрогрессора.МаксимальноеЗначение = КоличествоСчетовВсего;
	ФормаПрогрессора.КомментарийОбработкиДанных = "Установка аналитики на счетах бухгалтерского учета";
	
	Для каждого СтрокаСписка Из СписокСчетов Цикл
		
		ОбработаноСчетов = ОбработаноСчетов + 1;
		ФормаПрогрессора.Значение = ОбработаноСчетов;
		
		ИмяСчета = СтрокаСписка.Значение;
		
		Счет  = ПланыСчетов[ИмяПланаСчетов][ИмяСчета];
		Счета = Новый СписокЗначений();
		Счета.Добавить(Счет);
		
		ВыборкаСчетов = ПланыСчетов[ИмяПланаСчетов].ВыбратьИерархически(Счет);
		Пока ВыборкаСчетов.Следующий() Цикл
			
			Счета.Добавить(ВыборкаСчетов.Ссылка);
			
		КонецЦикла;
		
		Для каждого Счет Из Счета Цикл
			
			Объект   = Счет.Значение.ПолучитьОбъект();
			КодСчета = Объект.Код;
			
			Субконто = Объект.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизаций, "ВидСубконто");
			
			Если НЕ (Субконто = Неопределено) Тогда
				Если Субконто.Предопределенное Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			Если ВестиУчетПоРаботникам = Истина Тогда // Добавляем 

				Если Субконто = Неопределено Тогда

					Если Счет.Значение = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда Тогда
						НовыйВид = Объект.ВидыСубконто.Вставить(0);
					Иначе
						НовыйВид = Объект.ВидыСубконто.Добавить();
					КонецЕсли;
					
					НовыйВид.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизаций;
					НовыйВид.Суммовой    = Истина;
						
					Если Объект.Количественный Тогда
						НовыйВид.Количественный = Истина;
					КонецЕсли;
					
				КонецЕсли;

			ИначеЕсли ВестиУчетПоРаботникам = Ложь Тогда // Удаляем

				Если Субконто = Неопределено Тогда // кто-то удалил вид субконто вручную!
					Продолжить;
				КонецЕсли;
				
				Объект.ВидыСубконто.Удалить(Субконто);
				
			КонецЕсли;
			
			Объект.Записать();
			
		КонецЦикла;
		
	КонецЦикла;
	
	Если ФормаПрогрессора.Открыта() Тогда
		ФормаПрогрессора.Закрыть();
	КонецЕсли;

	
КонецЕсли;
</Текст>
		</Алгоритм>
		<Алгоритм Имя="Проверка1" ИспользуетсяПриЗагрузке="false">
			<Текст>// Проверка № 1 ******************************************
// проверка сальдо и оборотов в целом по ИБ
КодПроверки = "";

//**********************************
// # Данные из 7.7

//**********************************
// # Модуль проверки в 8

Возврат КодПроверки;

</Текст>
		</Алгоритм>
		<Алгоритм Имя="Проверки" ИспользуетсяПриЗагрузке="false">
			<Текст>// Проверка № 1 ******************************************
// 
КодПроверки = Проверка1();

// Проверка № 2 ******************************************
// 
//КодПроверки = КодПроверки + Проверка2();

Возврат КодПроверки;</Текст>
		</Алгоритм>
		<Алгоритм Имя="РаспределитьОстаткиПоСкладам" ИспользуетсяПриЗагрузке="false">
			<Текст>Если Параметры.ТаблицаОстатковМПЗ.КоличествоСтрок() = 0 Тогда
	Возврат 0;
КонецЕсли;

Если Параметры.ПараметрыАлгоритмов.Получить("УСН") = 1 Тогда
	ВыбНачПериода = Параметры.ДатаКонцаПериодаВыгрузки;
	ВыбКонПериода = Параметры.ДатаКонцаПериодаВыгрузки;
	Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
		ВидОстатка = "НачОст";
	Иначе
		ВидОстатка = "КонОст";
	КонецЕсли;
Иначе
	Если Параметры.ПараметрыАлгоритмов.Получить("ВидВыгрузки") = "НачальныеОстатки" Тогда
		ВыбНачПериода = Параметры.ДатаВводаОстатков;
		ВыбКонПериода = Параметры.ДатаВводаОстатков;
		ВидОстатка = "НачОст";
	Иначе
		ВыбНачПериода = Параметры.ДатаКонцаПериодаВыгрузки;
		ВыбКонПериода = Параметры.ДатаКонцаПериодаВыгрузки;
		ВидОстатка = "КонОст";
	КонецЕсли;
	
КонецЕсли;

Запрос = СоздатьОбъект("Запрос");
ТекстЗапроса = 
"//{{ЗАПРОС(Сформировать)
|Период с ВыбНачПериода по ВыбКонПериода;
|Склад = Регистр.ОстаткиТМЦ.Склад;
|Номенклатура = Регистр.ОстаткиТМЦ.Номенклатура;
|КоличествоНачОст = Регистр.ОстаткиТМЦ.Количество;
|Функция Количество = " + ВидОстатка + "(КоличествоНачОст);
|Группировка Склад без групп;
|Группировка Номенклатура без групп;
|"//}}ЗАПРОС
;
// Если ошибка в запросе, то выход из процедуры
Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
	Возврат 0;
КонецЕсли;

ТЗапрос = СоздатьОбъект("ТаблицаЗначений");
Запрос.Выгрузить(ТЗапрос);		

ТЗапрос.Свернуть("Склад,Номенклатура","Количество");
Количество = 0;

Параметры.ТаблицаОстатковМПЗ.ВыбратьСтроки();
Пока Параметры.ТаблицаОстатковМПЗ.ПолучитьСтроку() = 1 Цикл
	
	Стр =  0;
	Если ТЗапрос.НайтиЗначение(Параметры.ТаблицаОстатковМПЗ.Номенклатура, Стр, "Номенклатура") = 0 Тогда
		Продолжить;
	Иначе
		ТЗапрос.ПолучитьСтрокуПоНомеру(Стр);
	КонецЕсли;
	
	Количество = ТЗапрос.Количество;
	
	Если Количество = 0 Тогда
		Продолжить;
	КонецЕсли;
	
	Если ПустоеЗначение(Параметры.ТаблицаОстатковМПЗ.Склад) = 0 Тогда
		Продолжить;
	КонецЕсли;
	
	Если Параметры.ТаблицаОстатковМПЗ.Количество &lt;= Количество Тогда
		Параметры.ТаблицаОстатковМПЗ.Склад = ТЗапрос.Склад;
		Количество = Количество - Параметры.ТаблицаОстатковМПЗ.Количество;
		ТЗапрос.Количество = Количество;
	Иначе
		ТЗапрос.Количество = 0;
		НомерСтроки = Параметры.ТаблицаОстатковМПЗ.НомерСтроки;
		КоличествоНов = Параметры.ТаблицаОстатковМПЗ.Количество - Количество;
		СуммаНов = Окр(Параметры.ТаблицаОстатковМПЗ.Сумма / Параметры.ТаблицаОстатковМПЗ.Количество * КоличествоНов, 2);
		НДСНов = Окр(Параметры.ТаблицаОстатковМПЗ.НДС / Параметры.ТаблицаОстатковМПЗ.Количество * КоличествоНов, 2);
		Параметры.ТаблицаОстатковМПЗ.Количество = Количество;
		Параметры.ТаблицаОстатковМПЗ.Сумма = Параметры.ТаблицаОстатковМПЗ.Сумма - СуммаНов;
		Параметры.ТаблицаОстатковМПЗ.НДС = Параметры.ТаблицаОстатковМПЗ.НДС - НДСНов;
		Параметры.ТаблицаОстатковМПЗ.Склад = ТЗапрос.Склад;
		Если КоличествоНов &lt;&gt; 0 Тогда
			Параметры.ТаблицаОстатковМПЗ.НоваяСтрока();
			Параметры.ТаблицаОстатковМПЗ.Ключ						= Параметры.ТаблицаОстатковМПЗ.КоличествоСтрок();
			Параметры.ТаблицаОстатковМПЗ.НомерСтрокиТЧ				= Параметры.ТаблицаОстатковМПЗ.КоличествоСтрок();
			Параметры.ТаблицаОстатковМПЗ.СчетУчета					= Параметры.ТаблицаОстатковМПЗ.ПолучитьЗначение(НомерСтроки, "СчетУчета");	
			Параметры.ТаблицаОстатковМПЗ.Номенклатура 				= Параметры.ТаблицаОстатковМПЗ.ПолучитьЗначение(НомерСтроки, "Номенклатура");	
			Параметры.ТаблицаОстатковМПЗ.Партия						= Параметры.ТаблицаОстатковМПЗ.ПолучитьЗначение(НомерСтроки, "Партия");	
			Параметры.ТаблицаОстатковМПЗ.НДСВключенВСтоимость		= Параметры.ТаблицаОстатковМПЗ.ПолучитьЗначение(НомерСтроки, "НДСВключенВСтоимость");	
			Параметры.ТаблицаОстатковМПЗ.Количество 				= КоличествоНов;
			Параметры.ТаблицаОстатковМПЗ.Сумма						= СуммаНов;	
			Параметры.ТаблицаОстатковМПЗ.НДС	 					= НДСНов;	
			Параметры.ТаблицаОстатковМПЗ.Оплачен					= Параметры.ТаблицаОстатковМПЗ.ПолучитьЗначение(НомерСтроки, "Оплачен");	
			Параметры.ТаблицаОстатковМПЗ.РеквизитыДокументаОплаты	= Параметры.ТаблицаОстатковМПЗ.ПолучитьЗначение(НомерСтроки, "РеквизитыДокументаОплаты");	
			Параметры.ТаблицаОстатковМПЗ.ПолучитьСтрокуПоНомеру(НомерСтроки);
			Параметры.ТаблицаОстатковМПЗ.Индекс	 					= Параметры.ТаблицаОстатковМПЗ.ПолучитьЗначение(НомерСтроки, "Индекс");	
		КонецЕсли;				
	КонецЕсли;
	Если ТЗапрос.Количество = 0 Тогда
		ТЗапрос.УдалитьСтроку();
	КонецЕсли;
КонецЦикла;

</Текст>
		</Алгоритм>
		<Алгоритм Имя="РассчитатьЕСНилиВзносыВПФР" ИспользуетсяПриЗагрузке="false">
			<Текст>НалоговаяБаза = Параметры.ПараметрыАлгоритмов.Получить("НалоговаяБаза");
Ставки = Параметры.ПараметрыАлгоритмов.Получить("Ставки");
ПределыДоходовЕСН = Параметры.ПараметрыАлгоритмов.Получить("ПределыДоходовЕСН");
РазмерСдвигаПределов = 0;

ВсегоСтавок = 4;
ПределыСоСдвигом = СоздатьОбъект("СписокЗначений");
Для Сч = 1 По ВсегоСтавок Цикл       
	ПределыСоСдвигом.ДобавитьЗначение(Сч, 0);	
КонецЦикла;
// определим пределы с учетом сдвига
Для Сч = 1 По ВсегоСтавок - 1 Цикл // (последний предел не надо менять, т.к. он бесконечность)	
	ПределыСоСдвигом.УстановитьЗначение(Сч, ПределыДоходовЕСН.ПолучитьЗначение(Сч) - РазмерСдвигаПределов);
КонецЦикла;
ПределыСоСдвигом.УстановитьЗначение(ВсегоСтавок, ПределыДоходовЕСН.ПолучитьЗначение(ВсегоСтавок));

ИсчисленоПоТекущийМесяц = 0; 
Если НалоговаяБаза &lt;&gt; 0 Тогда 
	ОстатокНалоговойБазы = НалоговаяБаза;           
	Для сч = 1 по ВсегоСтавок Цикл
		Если НалоговаяБаза &gt;= ПределыСоСдвигом.ПолучитьЗначение(сч) тогда
			ИсчисленоПоТекущийМесяц = ИсчисленоПоТекущийМесяц + (ПределыСоСдвигом.ПолучитьЗначение(сч) - ?(сч=1,0,ПределыСоСдвигом.ПолучитьЗначение(сч-1)))*Ставки.ПолучитьЗначение(сч)/100;
			Если НалоговаяБаза &lt; ПределыСоСдвигом.ПолучитьЗначение(сч+1) тогда
				ОстатокНалоговойБазы = ОстатокНалоговойБазы - ПределыСоСдвигом.ПолучитьЗначение(сч);
				Прервать;                                                                                                    
			КонецЕсли;                                                    
		Иначе
			сч = сч - 1;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	ИсчисленоПоТекущийМесяц = ИсчисленоПоТекущийМесяц + ОстатокНалоговойБазы*Ставки.ПолучитьЗначение(сч+1)/100;
КонецЕсли;

Возврат ИсчисленоПоТекущийМесяц  

</Текст>
		</Алгоритм>
		<Алгоритм Имя="РассчитатьКоличествоМесяцевЭксплуатации" ИспользуетсяПриЗагрузке="false">
			<Текст>Дата2 = Параметры.ПараметрыАлгоритмов.Получить("Дата2");
ДатаВключенияСтоимостиВРасходы = Параметры.ПараметрыАлгоритмов.Получить("ДатаВключенияСтоимостиВРасходы");
КоличествоКварталовВОтчетномПериоде  = 0;
КоличествоКварталовВНалоговомПериоде = 0;

НомерКвартала = ДатаМесяц(КонКвартала(Дата2)) / 3;
Если ДатаГод(ДатаВключенияСтоимостиВРасходы) &lt; ДатаГод(Дата2) Тогда
	КоличествоКварталовВОтчетномПериоде  = НомерКвартала;
	КоличествоКварталовВНалоговомПериоде = 4;
	
ИначеЕсли ДатаВключенияСтоимостиВРасходы &lt;= Дата2 Тогда
	НомерКварталаНачалаРасчета = ДатаМесяц(КонКвартала(ДатаВключенияСтоимостиВРасходы)) / 3;
	КоличествоКварталовВОтчетномПериоде  = НомерКвартала - НомерКварталаНачалаРасчета;
	КоличествоКварталовВНалоговомПериоде = 5 - НомерКварталаНачалаРасчета;
	
	
	
	
	
	Если (ДатаМесяц(ДатаВключенияСтоимостиВРасходы) &lt;&gt; ДатаМесяц(КонКвартала(ДатаВключенияСтоимостиВРасходы)))
		или (ДатаВключенияСтоимостиВРасходы &gt;= '01.01.2006') Тогда
		КоличествоКварталовВОтчетномПериоде = КоличествоКварталовВОтчетномПериоде + 1;
	КонецЕсли;
	
КонецЕсли;

Параметры.ПараметрыАлгоритмов.Установить("КоличествоКварталовВОтчетномПериоде", КоличествоКварталовВОтчетномПериоде);
Параметры.ПараметрыАлгоритмов.Установить("КоличествоКварталовВНалоговомПериоде", КоличествоКварталовВНалоговомПериоде);
</Текст>
		</Алгоритм>
		<Алгоритм Имя="СодержаниеОперации" ИспользуетсяПриЗагрузке="false">
			<Текст>Док = Параметры.ПараметрыАлгоритмов.Получить("СодержаниеДокумент");
НомерСтроки = Параметры.ПараметрыАлгоритмов.Получить("СодержаниеНомерСтроки");
СформироватьПолныйВариант = Параметры.ПараметрыАлгоритмов.Получить("СодержаниеВариант");

ДокВид = Док.Вид();

Содержание = "";

Основание = "";
ТипОперации = "";
ВидРасч = "";
Контрагент = "";
Договор = "";
ВидПлатежаВБюджет = "";
ВидНалога = "";
Работник = "";
ВидУдержания = "";

ВидДок = Док.Вид();
Если ПустоеЗначение(Док) = 0 Тогда
	Если (ВидДок = "СтрокаВыпискиРасход") или (ВидДок = "СтрокаВыпискиПриход") Тогда
		ВидРасч = Док.ВидВзаиморасчетов;
		Основание = СокрЛП(Док.Содержание);
		Контрагент = Док.Контрагент;
		Договор = Док.Договор;
		ВидНалога = Док.ВидНалога;
		ВидПлатежаВБюджет = Док.ВидПлатежаВБюджет;
		
		Если ДокВид = "СтрокаВыпискиПриход" Тогда
			ТипОперации = "Поступление на р/с: ";
			
		Иначе // Если ДокВид = "СтрокаВыпискиРасход" Тогда
			ТипОперации = "Списание с р/с: ";
			ВидУдержания = Док.ВидУдержания;
		КонецЕсли;
		
	ИначеЕсли (ВидДок = "ПриходныйОрдер") или (ВидДок = "РасходныйОрдер") Тогда
		ВидРасч = Док.ВидВзаиморасчетов;
		Основание = СокрЛП(Док.Основание);
		Контрагент = Док.Контрагент;
		Договор = Док.Договор;
		Работник = Док.ФизЛицо;
		
		Если ДокВид = "ПриходныйОрдер" Тогда
			ТипОперации = "Поступление в кассу: ";
			
		Иначе // Если ДокВид = "РасходныйОрдер" Тогда
			ТипОперации = "Выдача из кассы: ";
			ВидНалога = Док.ВидНалога;
			ВидПлатежаВБюджет = Док.ВидПлатежаВБюджет;
			ВидУдержания = Док.ВидУдержания;
		КонецЕсли;
		
	ИначеЕсли ВидДок = "СтрокаАвансовогоОтчета" Тогда
		ВидРасч = Док.ВидВзаиморасчетов;
		Основание = СокрЛП(Док.Основание);
		Контрагент = Док.Контрагент;
		Договор = Док.Договор;
		ВидНалога = Док.ВидНалога;
		ВидПлатежаВБюджет = Док.ВидПлатежаВБюджет;
		Работник = Док.ФизЛицо;
		ВидУдержания = Док.ВидУдержания;
		
	ИначеЕсли ВидДок = "КорректировкаЗадолженности" Тогда
		Если НомерСтроки &gt; 0 Тогда
			Если Док.ПолучитьСтрокуПоНомеру(НомерСтроки) = 1 Тогда
				ВидРасч = Док.ВидВзаиморасчетов;
				Основание = Док.НаименованиеОперации;
				Контрагент = Док.Контрагент;
				Договор = Док.Договор;
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ВидДок = "РасходыПоРознице" Тогда
		ТипОперации = "Реализация товаров (работ, услуг)";
		Контрагент = Док.Контрагент;
		Договор = Док.Договор;
		
	ИначеЕсли ВидДок = "Удержания" Тогда
		ВидРасч = Перечисление.ВидыВзаиморасчетов.Удержания;
		ТипОперации = "";
		Док.ПолучитьСтрокуПоНомеру(НомерСтроки);
		ВидУдержания = Док.ВидУдержания;
		
	ИначеЕсли ВидДок = "ВозвратПоставщику" Тогда
		ВидРасч = Перечисление.ВидыВзаиморасчетов.РасчетыСПоставщиками;
		Содержание = "Возврат поставщику";
		Контрагент = Док.Контрагент;
		Договор = Док.Договор;
		
	ИначеЕсли ВидДок = "ВозвратОтПокупателя" Тогда
		ВидРасч = Перечисление.ВидыВзаиморасчетов.РасчетыСПокупателями;
		Содержание = "Возврат от покупателя";
		Контрагент = Док.Контрагент;
		Договор = Док.Договор;
		
	ИначеЕсли (ВидДок = "ПоступлениеТМЦ") или (ВидДок = "ЗачетАвансаВыданного")  или (ВидДок = "ПрочиеРасходыРасчеты") Тогда
		ВидРасч = Перечисление.ВидыВзаиморасчетов.РасчетыСПоставщиками;
		Содержание = "Поступление товаров (работ, услуг)";
		Контрагент = Док.Контрагент;
		Договор = Док.Договор;
		
	ИначеЕсли (Найти(ВидДок, "Реализация") &gt; 0) или (ВидДок = "ЗачетАвансаПолученного") Тогда
		ВидРасч = Перечисление.ВидыВзаиморасчетов.РасчетыСПокупателями;
		Содержание = "Реализация товаров (работ, услуг)";
		Контрагент = Док.Контрагент;
		Договор = Док.Договор;
	КонецЕсли;
	
	Если Содержание = "" Тогда
		Если ВидРасч = Перечисление.ВидыВзаиморасчетов.РасчетыСПодотчетнымиЛицами Тогда
			Содержание = СокрЛ(ТипОперации + " " + Основание);
			
		ИначеЕсли ВидРасч = Перечисление.ВидыВзаиморасчетов.Розница Тогда
			Содержание = СокрЛП(ТипОперации + " " + СокрЛП(Основание));
			
		Иначе
			Содержание = ТипОперации;
			
			Стр = Содержание;
			Предлог = ?(ПустоеЗначение(Содержание) = 1, "", " ");
			Реквизит = "" + ВидРасч;
			Если ПустоеЗначение(Реквизит) = 0 Тогда
				Стр = Стр + Предлог + СокрЛП(Реквизит);
			КонецЕсли;
			Содержание = Стр;
			
			Стр = Содержание;
			Предлог = ?(ПустоеЗначение(Содержание) = 1, "", " - ");
			Реквизит = Основание;
			Если ПустоеЗначение(Реквизит) = 0 Тогда
				Стр = Стр + Предлог + СокрЛП(Реквизит);
			КонецЕсли;
			Содержание = Стр;
			
		КонецЕсли;
	КонецЕсли;
	
	Если СформироватьПолныйВариант = 1 Тогда
		Если ВидРасч = Перечисление.ВидыВзаиморасчетов.РасчетыСПокупателями Тогда
			Если ПустоеЗначение(Контрагент) = 0 Тогда
				Содержание = Содержание + " / Покупатель: """ + Контрагент + """";
				Если ПустоеЗначение(Договор) = 0 Тогда
					Содержание = Содержание + " / Договор: """ + Договор + """";
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ВидРасч = Перечисление.ВидыВзаиморасчетов.РасчетыСПоставщиками Тогда
			Если ПустоеЗначение(Контрагент) = 0 Тогда
				Содержание = Содержание + " / Поставщик: """ + Контрагент + """";
				Если ПустоеЗначение(Договор) = 0 Тогда
					Содержание = Содержание + " / Договор: """ + Договор + """";
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ВидРасч = Перечисление.ВидыВзаиморасчетов.Розница Тогда
			Если ПустоеЗначение(Контрагент) = 0 Тогда
				Содержание = Содержание + " / Доп. информация: """ + Контрагент + """";
				Если ПустоеЗначение(Договор) = 0 Тогда
					Содержание = Содержание + " (" + Договор + ")";
				КонецЕсли;
				Содержание = Содержание + """";
			КонецЕсли;
			
		ИначеЕсли ВидРасч = Перечисление.ВидыВзаиморасчетов.РасчетыСБюджетом Тогда
			Содержание = Содержание + " / " + ВидНалога + ": " + ВидПлатежаВБюджет;
			
		ИначеЕсли ВидРасч = Перечисление.ВидыВзаиморасчетов.РасчетыСПодотчетнымиЛицами Тогда
			Содержание = Содержание + " / " + ВидРасч + ": " + Работник;
			
		ИначеЕсли ВидРасч = Перечисление.ВидыВзаиморасчетов.Удержания Тогда
			Содержание = Содержание + ": """ + ВидУдержания + """";
		КонецЕсли;
	КонецЕсли;
КонецЕсли;

Возврат Содержание;

</Текст>
		</Алгоритм>
	</Алгоритмы>
	<Запросы/>
</ПравилаОбмена>

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Процедура УстановитьЗаголовокФормы()

	НомерЗаписи        = 1 + ВладелецФормы.ЭлементыФормы.Хозрасчетный.Значение.Индекс(СтрокаТаблицы);
	ЭтаФорма.Заголовок = "Проводка № " + НомерЗаписи + ". Настройка параметров";

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТЗ ТАБЛИЦАПАРАМЕТРОВ

Процедура ТаблицаПараметровПередНачаломДобавления(Элемент, Отказ, Копирование)

	Отказ = Истина;

КонецПроцедуры

Процедура ТаблицаПараметровПередУдалением(Элемент, Отказ)

	Отказ = Истина;

КонецПроцедуры

Процедура ТаблицаПараметровНачалоВыбора(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	СтрокаТЗ             = ЭлементыФормы.ТаблицаПараметров.ТекущиеДанные;
	ИмяКолонки           = СтрокаТЗ.Имя;
	ТипыКолонки          = ВладелецФормы.ПолучитьТипыКолонки(ВладелецФормы.ЭлементыФормы.Хозрасчетный, СтрокаТаблицы, ИмяКолонки);

	Если ТипыКолонки = Неопределено Тогда
		Возврат
	КонецЕсли;

	СписокЗначений = Новый  СписокЗначений;
	СписокЗначений.Добавить("<< Новый параметр >>");

	Для каждого Парам Из ВладелецФормы.ПолучитьМассивПараметров(ТипыКолонки) Цикл
		СписокЗначений.Добавить(Парам);
	КонецЦикла;

	Выб = ВыбратьИзМеню(СписокЗначений, Элемент);

	Если Выб = Неопределено Тогда
		Возврат;
	ИначеЕсли Выб.Значение = "<< Новый параметр >>" Тогда

		ФормаПараметра = Справочники["ТиповыеОперации"].ПолучитьФорму("Параметр", ВладелецФормы);

		ФормаПараметра.СтрокаТаблицы = СтрокаТЗ;
		ФормаПараметра.ФормаФормулы  = ЭтаФорма;
		ФормаПараметра.Имя           = ИмяКолонки;
		ФормаПараметра.Представление = ИмяКолонки;
		ФормаПараметра.Тип           = ТипыКолонки;
		ФормаПараметра.Значение      = СтрокаТаблицы[ИмяКолонки];
		ФормаПараметра.НеЗапрашивать = Ложь;

		Пар = ФормаПараметра.ОткрытьМодально();

		Если Пар = Неопределено Тогда
			Возврат
		КонецЕсли;

		СтрокаТЗ.Параметр = СтрЗаменить(Пар, "Параметры.", "");

	Иначе
		СтрокаТЗ.Параметр = СтрЗаменить(Выб.Значение, "Параметры.", "");
	КонецЕсли;

	СтрокаТЗ.Установить = Истина;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()

	УстановитьЗаголовокФормы();

КонецПроцедуры

Процедура ОбработкаАктивизацииОбъекта(АктивныйОбъект, Источник)

	УстановитьЗаголовокФормы();

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ 

Процедура КнопкаОКНажатие(Элемент)

	Таб = ВладелецФормы.ЭлементыФормы.Хозрасчетный;

	Для каждого Стр Из ЭлементыФормы.ТаблицаПараметров.Значение Цикл

		Если Не Стр.Установить Тогда
			Продолжить
		КонецЕсли;

		Если Стр.Новый Тогда

			Если Не ВладелецФормы.ИмяКорректно(Стр.Параметр) Тогда
				Возврат
			КонецЕсли;

			НовыйПараметр = ВладелецФормы.Параметры.Добавить();
			НовыйПараметр.Имя = Стр.Параметр;
			НовыйПараметр.Представление = Стр.Представление;
			НовыйПараметр.Тип = Новый ХранилищеЗначения(ВладелецФормы.ПолучитьТипыКолонки(Таб, СтрокаТаблицы, Стр.Имя));

		Иначе

			Если ВладелецФормы.Параметры.Найти(Стр.Параметр, "Имя") = Неопределено Тогда
				Предупреждение("Не найден параметр с именем: " + Стр.Параметр, 6);
				Возврат;
			КонецЕсли;

		КонецЕсли;

		ВладелецФормы.УстановитьФормулу(СтрокаТаблицы, Стр.Имя, Стр.Параметр);

	КонецЦикла;

	Закрыть();

КонецПроцедуры // КнопкаОКНажатие()

Процедура КнопкаУстановитьВсеФлажкиНажатие(Элемент)

	Для каждого Стр Из ТаблицаПараметров Цикл
		Стр.Установить = Истина;
	КонецЦикла;

КонецПроцедуры

Процедура КнопкаСнятьВсеФлажкиНажатие(Элемент)

	Для каждого Стр Из ТаблицаПараметров Цикл
		Стр.Установить = Ложь;
	КонецЦикла;

КонецПроцедуры

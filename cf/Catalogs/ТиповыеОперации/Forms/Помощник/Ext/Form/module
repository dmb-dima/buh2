
////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем Таб;         // ссылка на табличное поле шаблонов проводок в форме владельце
Перем ТипыКолонки; // объект типа ОписаниеТипов текущей колонки табличного поля шаблонов проводок
Перем ИмяКолонки;  // имя текущей колонки табличного поля шаблонов проводок

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Читает из формы владельца значение текущей колонки табличного поля шаблона
// проводки. Устанавливает доступность ЭУ в зависимости от выбранного
// способа заполнения
//
Процедура ПрочитатьИзФормыВладельца()

	Если ТипыКолонки = Неопределено  Тогда
		ТипыКолонки = Новый ОписаниеТипов();
	КонецЕсли;

	Если Таб.Значение.Количество()>0 Тогда
		ТекЗначение = Таб.ТекущиеДанные[ИмяКолонки];
	Иначе
		ТекЗначение = Неопределено;
	КонецЕсли; 

	Если СпособЗаполнения = 0 Тогда

		ЭлементыФормы.Значение.Доступность = Ложь;
		ЭлементыФормы.Параметр.Доступность = Ложь;
		ЭлементыФормы.Формула.Доступность  = Ложь;

		Значение = Неопределено; // ТипыКолонки.ПривестиЗначение(Неопределено);
		Параметр = "";
		Формула  = "";

	ИначеЕсли СпособЗаполнения = 1 Тогда // Значение

		ЭлементыФормы.Значение.Доступность = Истина;
		ЭлементыФормы.Параметр.Доступность = Ложь;
		ЭлементыФормы.Формула.Доступность  = Ложь;
		
		ЭлементыФормы.Значение.ВыбиратьТип = ТипыКолонки.Типы().Количество() > 1;
		ЭлементыФормы.Значение.ОграничениеТипа = ТипыКолонки;

		Значение = ТипыКолонки.ПривестиЗначение(ТекЗначение);
		Параметр = "";
		Формула  = "";

	ИначеЕсли СпособЗаполнения = 2 Тогда // Параметр

		ЭлементыФормы.Значение.Доступность = Ложь;
		ЭлементыФормы.Параметр.Доступность = Истина;
		ЭлементыФормы.Формула.Доступность  = Ложь;

		Значение = Неопределено;  // ТипыКолонки.ПривестиЗначение(Неопределено);
		Параметр = ВладелецФормы.Формула;
		Формула  = "";

	ИначеЕсли СпособЗаполнения = 3 Тогда  // Формула

		ЭлементыФормы.Значение.Доступность = Ложь;
		ЭлементыФормы.Параметр.Доступность = Ложь;
		ЭлементыФормы.Формула.Доступность  = Истина;

		Значение = Неопределено; // ТипыКолонки.ПривестиЗначение(Неопределено);
		Параметр = "";
		Формула  = ВладелецФормы.Формула;

	КонецЕсли;

КонецПроцедуры

// Устанавливает заголовок формы
//
Процедура УстановитьЗаголовокФормы()

	Если Таб.Значение.Количество() > 0 Тогда

		НомерЗаписи = 1 + Таб.Значение.Индекс(Таб.ТекущаяСтрока);
		ЭтаФорма.Заголовок = "Проводка № " + НомерЗаписи + "   Текущее поле: " + ИмяКолонки;
		ЭлементыФормы.НадписьВыберитеСпособ.Заголовок = "Способ заполнения поля:  " + ИмяКолонки;

	Иначе

		ЭтаФорма.Заголовок = "НЕ ВЫБРАНА ПРОВОДКА!";
		ЭлементыФормы.НадписьВыберитеСпособ.Заголовок = "Способ заполнения поля: ";

	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()

	Таб = ВладелецФормы.ЭлементыФормы.Хозрасчетный;

	ОбработкаАктивизацииОбъекта("", "");

	Для Сч = 0 По 3 Цикл
		ЭлементыФормы["СпособЗаполнения" + ?(Сч=0, "", Сч)].Заголовок = ВладелецФормы.СпособыЗаполнения[Сч] + ":";
	КонецЦикла;

КонецПроцедуры

Процедура ОбработкаАктивизацииОбъекта(АктивныйОбъект, Источник)

	ТипыКолонки = ВладелецФормы.ПолучитьТипыКолонки(Таб);

	Если Таб.Значение.Количество() > 0 Тогда
		ИмяКолонки = Таб.ТекущаяКолонка.Имя;
	Иначе
		Если ЭтаФорма.ВводДоступен() Тогда
			ВладелецФормы.Активизировать();
		КонецЕсли; 
	КонецЕсли;

	УстановитьЗаголовокФормы();

	Способ = СокрЛП(СпособЗаполнения);

	Если Способ = "" Тогда

		ЭтаФорма.ТолькоПросмотр = Истина;
		СпособЗаполнения = 0;
		Значение = Неопределено;
		Параметр = "";
		Формула  = "";

	Иначе

		ЭтаФорма.ТолькоПросмотр = Ложь;

		Для Сч = 0 По 3 Цикл

			Если ВладелецФормы.СпособыЗаполнения[Сч] = Способ Тогда

				СпособЗаполнения = Сч;
				ПрочитатьИзФормыВладельца();
				Прервать;
				
			КонецЕсли;

		КонецЦикла;

	КонецЕсли;

КонецПроцедуры // ОбработкаАктивизацииОбъекта()

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если (ИмяСобытия = "ВыборПараметра") И (Источник = "ФормаВыбораПараметра") Тогда
		Формула = Параметр;
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ

Процедура ПараметрПриИзменении(Элемент)

	ВладелецФормы.УстановитьФормулу( , , Параметр);
	ВладелецФормы.Формула= Параметр;
	ВладелецФормы.СпособЗаполнения = ВладелецФормы.СпособыЗаполнения[2];

КонецПроцедуры

Процедура ПараметрНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка= Ложь;

	Таб = ВладелецФормы.ЭлементыФормы.Хозрасчетный;

	НаименованиеСубконто = "";
	ТипыКолонки = ВладелецФормы.ПолучитьТипыКолонки(Таб, , , НаименованиеСубконто);
	ИмяКолонки  = Таб.ТекущаяКолонка.Имя;

	Если ТипыКолонки = Неопределено Тогда
		Возврат
	КонецЕсли;

	СписокЗначений = Новый СписокЗначений;   
	СписокЗначений.Добавить("<< Новый запрашиваемый параметр >>");

	Для каждого Парам Из ВладелецФормы.ПолучитьМассивПараметров(ТипыКолонки) Цикл
		СписокЗначений.Добавить(Парам);
	КонецЦикла;

	Элемент.ШиринаСпискаВыбора = 46;
	Элемент.ВысотаСпискаВыбора = 1 + СписокЗначений.Количество();

	Выб = ВыбратьИзМеню(СписокЗначений, Элемент);

	Если Выб = Неопределено Тогда
		Возврат;

	ИначеЕсли Выб.Значение = "<< Новый запрашиваемый параметр >>" Тогда

		ФормаПараметра = Справочники["ТиповыеОперации"].ПолучитьФорму("Параметр", ВладелецФормы);
		ФормаПараметра.Тип           = ТипыКолонки;
		ФормаПараметра.Значение      = Таб.ТекущиеДанные[ИмяКолонки];
		ФормаПараметра.НеЗапрашивать = Ложь;
		ФормаПараметра.СтрокаТаблицы = Таб.ТекущиеДанные;
		ФормаПараметра.ИмяКолонки    = ИмяКолонки;

		Если СокрЛП(НаименованиеСубконто) <> "" Тогда
			ФормаПараметра.Имя           = НаименованиеСубконто;
			ФормаПараметра.Представление = НаименованиеСубконто;
		Иначе
			ФормаПараметра.Имя           = ИмяКолонки;
			ФормаПараметра.Представление = ИмяКолонки;
		КонецЕсли;

		Парам = ФормаПараметра.ОткрытьМодально();

	Иначе
		Парам = Выб.Значение;
	КонецЕсли;

	Если СокрЛП(Парам) <> "" Тогда

		Параметр = Парам;
		ВладелецФормы.УстановитьФормулу( , , Параметр);
		ВладелецФормы.Формула = Параметр;
		ВладелецФормы.СпособЗаполнения = ВладелецФормы.СпособыЗаполнения[2];

	КонецЕсли;

КонецПроцедуры // ПараметрНачалоВыбораИзСписка()

Процедура ЗначениеНачалоВыбора(Элемент, СтандартнаяОбработка)

	Если ТипыКолонки = Неопределено Тогда
		Возврат
	КонецЕсли;

	Элемент.ВыбиратьТип     = ТипыКолонки.Типы().Количество() > 1;
	Элемент.ОграничениеТипа = ТипыКолонки;

	Значение = ТипыКолонки.ПривестиЗначение(Значение);

КонецПроцедуры

Процедура ЗначениеПриИзменении(Элемент)

	ЗначениеНачалоВыбора(Элемент, Истина);

	Таб.ТекущиеДанные[Таб.ТекущаяКолонка.Имя] = Значение;

КонецПроцедуры

Процедура ФормулаОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)

	ВладелецФормы.УстановитьФормулу( , , Текст);
	ВладелецФормы.Формула = Текст;
	ВладелецФормы.СпособЗаполнения = ВладелецФормы.СпособыЗаполнения[3];

КонецПроцедуры

Процедура ФормулаНачалоВыбора(Элемент, СтандартнаяОбработка)

	ВладелецФормы.ФормулаНачалоВыбора(Элемент, СтандартнаяОбработка);

КонецПроцедуры

Процедура СпособЗаполненияПриИзменении(Элемент)

	ВладелецФормы.СпособЗаполнения = ВладелецФормы.СпособыЗаполнения[СпособЗаполнения];

	Если ТипыКолонки = Неопределено Тогда

		Значение = Неопределено;
		Параметр = "";
		Формула  = "";

		ВладелецФормы.УстановитьФормулу();

		Возврат;

	КонецЕсли;

	ПрочитатьИзФормыВладельца();

	Если СпособЗаполнения = 0 Тогда

		ВладелецФормы.Формула = "";
		Таб.ТекущиеДанные[ИмяКолонки] = ТипыКолонки.ПривестиЗначение(Неопределено);
		ВладелецФормы.УстановитьФормулу();

	ИначеЕсли СпособЗаполнения = 1 Тогда // Значение

		ВладелецФормы.Формула = "";
		ВладелецФормы.УстановитьФормулу();

	ИначеЕсли СпособЗаполнения = 2 Тогда // Параметр

		Таб.ТекущиеДанные[ИмяКолонки] = ТипыКолонки.ПривестиЗначение(Неопределено);

	ИначеЕсли СпособЗаполнения = 3 Тогда // Формула

		Таб.ТекущиеДанные[ИмяКолонки] = ТипыКолонки.ПривестиЗначение(Неопределено);

	КонецЕсли;

КонецПроцедуры // СпособЗаполненияПриИзменении()

// Вызывается по нажатию кнопок "Предыдущее поле", "Следующее поле"
//
Процедура ВыборПоля(Элемент)

	ИндексТекущей = Таб.Колонки.Индекс(Таб.ТекущаяКолонка);
	МаксИндекс    = Таб.Колонки.Количество()-2;

	Если Элемент.Имя = "КнопкаСледующееПоле" Тогда

		Если ИндексТекущей < МаксИндекс Тогда
			НачИндекс = 1 + ИндексТекущей;
		Иначе
			НачИндекс = 1;
		КонецЕсли;

		Для Сч = НачИндекс По МаксИндекс Цикл

			Кол = Таб.Колонки[Сч];

			Если ВладелецФормы.ПолучитьТипыКолонки(Таб, , Кол.Имя) <> Неопределено Тогда
				Таб.ТекущаяКолонка = Кол;
				Прервать;
			КонецЕсли;

		КонецЦикла;

	Иначе

		Если ИндексТекущей = 1 Тогда
			НачИндекс = МаксИндекс;
		Иначе
			НачИндекс = ИндексТекущей - 1;
		КонецЕсли;

		Для Сч = -НачИндекс По -1 Цикл

			Кол = Таб.Колонки[-Сч];

			Если ВладелецФормы.ПолучитьТипыКолонки(Таб, , Кол.Имя) <> Неопределено Тогда
				Таб.ТекущаяКолонка = Кол;
				Прервать;
			КонецЕсли;

		КонецЦикла;

	КонецЕсли;

	ВладелецФормы.ПриИзмененииВТабличномПоле();

	ОбработкаАктивизацииОбъекта("", "");

КонецПроцедуры // ВыборПоля()

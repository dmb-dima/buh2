
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Разбирает коллекцию объектов метаданных, добавляя соответствующие им ссылочный
// типы в массив
//
// Параметры:
//  КоллекцияМД    - коллекция объектов метаданных
//
// Возвращаемое значение:
//  Массив типов коллекции метаданных
// 
Функция МассивТиповКоллекцииМетаданных(КоллекцияМД)

	МассивТипов = Новый Массив;

	Для каждого ОбъектМД Из КоллекцияМД Цикл

		Попытка
			МассивТипов.Добавить(Тип("СправочникСсылка." + Метаданные.Справочники[ОбъектМД.Имя].Имя));
		Исключение
			МассивТипов.Добавить(Тип("ПланВидовХарактеристикСсылка." + Метаданные.ПланыВидовХарактеристик[ОбъектМД.Имя].Имя));
		КонецПопытки;

	КонецЦикла;

	Возврат МассивТипов;

КонецФункции

// Находит типы, являющиеся владельцами переданных в качестве параметра типов
//
// Параметры:
//  ОписаниеТипов  - объект типа ОписаниеТипов
//
// Возвращаемое значение:
//  Объект типа ОписаниеТипов, содержащий типы возможных владельцев объектов,
//  типы которых переданы
// 
Функция ПолучитьТипыВозможныхВладельцев(ОписаниеТипов)

	Типы = Новый ОписаниеТипов();

	Для каждого ОбъектМД Из Метаданные.Справочники Цикл

		Если ОбъектМД.Владельцы = Неопределено Тогда
			Продолжить
		КонецЕсли;

		Если ОписаниеТипов.СодержитТип(Тип("СправочникСсылка." + ОбъектМД.Имя)) Тогда
			Типы = Новый ОписаниеТипов(Типы, МассивТиповКоллекцииМетаданных(ОбъектМД.Владельцы));
		КонецЕсли;

	КонецЦикла;

	Возврат Типы;

КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ

Процедура КнопкаОКНажатие(Элемент)

	Если Не ВладелецФормы.ИмяКорректно(Имя, Параметр) Тогда
		Возврат;
	КонецЕсли;

	Если СокрЛП(Представление) = "" Тогда
		Предупреждение("Не указано представление параметра!");
		Возврат;
	КонецЕсли;

	Если СпособВыбораТипов = 1 Тогда
		Если СокрЛП(СвязьПоТипу) = "" Тогда
			Предупреждение("Не указан параметр-счет!");
			Возврат;
		КонецЕсли;
	Иначе
		Если Тип.Типы().Количество() = 0 Тогда
			Предупреждение("Не указан тип значений параметра!");
			Возврат;
		КонецЕсли;
	КонецЕсли;

	Если ТипЗнч(Параметр) <> Тип("СправочникТабличнаяЧастьСтрока.ТиповыеОперации.Параметры") Тогда
		Параметр = ВладелецФормы.Параметры.Добавить();
	Иначе

		Попытка
			Параметр.Имя = Имя;
		Исключение // если строка была удалена
			Параметр = ВладелецФормы.Параметры.Добавить();
		КонецПопытки;

	КонецЕсли;

	Параметр.Имя = Имя;
	Параметр.Тип = Новый ХранилищеЗначения(Тип);
	Параметр.Представление    = Представление;
	Параметр.Значение         = Значение;
	Параметр.НеЗапрашивать    = НеЗапрашивать;
	Параметр.СвязьПоВладельцу = СвязьПоВладельцу;
	Параметр.СвязьПоТипу      = СвязьПоТипу;

	Если Не ПустаяСтрока(СвязьПоТипу) Тогда
		Параметр.НомерСубконто = ?(НомерСубконто=0, 1, НомерСубконто);
	Иначе
		Параметр.НомерСубконто = 0;
	КонецЕсли;

	Параметр.Подсказка        = Подсказка;
	Параметр.Обязательный     = Обязательный;
	Параметр.АлгоритмПриИзменении = ЭлементыФормы.ФормаАлгоритм.ПолучитьТекст();

	Если СокрЛП(ТипЗнч(ФормаФормулы)) = "Форма" Тогда

		Попытка
			ФормаФормулы.ВставитьВТекст(Имя, СтрокаТаблицы);
		Исключение
		КонецПопытки;

	ИначеЕсли СокрЛП(ИмяКолонки) <> "" Тогда

		Попытка
			ВладелецФормы.УстановитьФормулу(СтрокаТаблицы, ИмяКолонки, Имя);
		Исключение   // Строка удалена
		КонецПопытки;

	КонецЕсли;

	Закрыть(Имя);

КонецПроцедуры // КнопкаОКНажатие()

Процедура ИмяОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)

	Если (Текст <> "") И (Представление = "") Тогда
		Представление = Текст;
	КонецЕсли;

КонецПроцедуры

Процедура ЗначениеНачалоВыбора(Элемент, СтандартнаяОбработка)

	Элемент.ВыбиратьТип     = Тип.Типы().Количество() > 1;
	Элемент.ОграничениеТипа = Тип;

КонецПроцедуры

Процедура СвязьПоВладельцуНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)

	Элемент.СписокВыбора.Очистить();

	Для каждого Парам Из ВладелецФормы.ПолучитьМассивПараметров(ПолучитьТипыВозможныхВладельцев(Тип)) Цикл
		Элемент.СписокВыбора.Добавить(СтрЗаменить(Парам, "Параметры.", ""));
	КонецЦикла;

	Элемент.ВысотаСпискаВыбора = Элемент.СписокВыбора.Количество();

КонецПроцедуры

Процедура СвязьПоТипуНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)

	Элемент.СписокВыбора.Очистить();

	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПланСчетовСсылка.Хозрасчетный"));
	ОписаниеТипов = Новый ОписаниеТипов(МассивТипов);

	Для каждого Парам Из ВладелецФормы.ПолучитьМассивПараметров(ОписаниеТипов) Цикл
		Элемент.СписокВыбора.Добавить(СтрЗаменить(Парам, "Параметры.", ""));
	КонецЦикла;

	Элемент.ВысотаСпискаВыбора = Элемент.СписокВыбора.Количество();

КонецПроцедуры

Процедура ЗначениеОчистка(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	Значение = Тип.ПривестиЗначение(Неопределено);

КонецПроцедуры

Процедура ТипПриИзменении(Элемент)

	Значение = Тип.ПривестиЗначение(Значение);
	Если Тип.Типы().Количество() = 1 Тогда

		Если Тип.СодержитТип(Тип("Число")) Тогда
			ЭлементыФормы.Значение.Формат = "ЧЦ=" + Тип.КвалификаторыЧисла.Разрядность
			                              + "; ЧДЦ=" + Тип.КвалификаторыЧисла.РазрядностьДробнойЧасти;
		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

Процедура СпособВыбораТиповПриИзменении(Элемент)

	Если СпособВыбораТипов = 0 Тогда

		ЭлементыФормы.СвязьПоТипу.Доступность      = Ложь;
		ЭлементыФормы.НомерСубконто.Доступность    = Ложь;

		ЭлементыФормы.Тип.Доступность              = Истина;
		ЭлементыФормы.СвязьПоВладельцу.Доступность = Истина;
		ЭлементыФормы.Значение.Доступность         = Истина;

		СвязьПоТипу = "";

	ИначеЕсли СпособВыбораТипов = 1 Тогда

		ЭлементыФормы.СвязьПоТипу.Доступность      = Истина;
		ЭлементыФормы.НомерСубконто.Доступность    = Истина;

		ЭлементыФормы.Тип.Доступность              = Ложь;
		ЭлементыФормы.СвязьПоВладельцу.Доступность = Ложь;
		ЭлементыФормы.Значение.Доступность         = Ложь;

		Тип              = Неопределено;
		СвязьПоВладельцу = "";
		Значение         = Неопределено;

		МассивТипов = Новый Массив;
		МассивТипов.Добавить(Тип("ПланСчетовСсылка.Хозрасчетный"));

		ОписаниеТипов    = Новый ОписаниеТипов(МассивТипов);
		МассивПараметров = ВладелецФормы.ПолучитьМассивПараметров(ОписаниеТипов);

		Если МассивПараметров.Количество() > 0 Тогда
			СвязьПоТипу = СтрЗаменить(МассивПараметров[0], "Параметры.", "");
		КонецЕсли;

	КонецЕсли;

КонецПроцедуры // СпособВыбораТиповПриИзменении()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()

	Если СвязьПоТипу <> "" Тогда
		СпособВыбораТипов = 1;
	Иначе
		СпособВыбораТипов = 0;
	КонецЕсли;

	ТипПриИзменении(ЭлементыФормы.Значение);
	СпособВыбораТиповПриИзменении(ЭлементыФормы.СпособВыбораТипов);
	
	ЭлементыФормы.ФормаАлгоритм.УстановитьТекст(ФормаАлгоритм);
	
КонецПроцедуры

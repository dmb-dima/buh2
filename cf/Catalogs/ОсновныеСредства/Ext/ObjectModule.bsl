Перем мДатаСведений Экспорт;

#Если Клиент Тогда

// Функция формирует табличный документ с печатной формой инвентарной карточки ОС (форма ОС-6)
// Утверждена постановлением Госкомстата России от 21.01.2003 № 7
// Возвращаемое значение:
//  Табличный документ - печатная форма инвентарной карточки ОС
Функция ПечатьОС6_2003(ДатаСведений, Организация) 
	
	Макет = ПолучитьМакет("ОС6");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ШапкаРазделов1и2  = Макет.ПолучитьОбласть("ШапкаРазделов1и2");
	ШапкаРаздела3     = Макет.ПолучитьОбласть("ШапкаРаздела3");
	СтрокиРаздела3    = Макет.ПолучитьОбласть("СтрокиРаздела3");
	ШапкаРаздела4     = Макет.ПолучитьОбласть("ШапкаРаздела4");
	СтрокаРаздела4    = Макет.ПолучитьОбласть("СтрокаРаздела4");
	ПодвалСтраницы1   = Макет.ПолучитьОбласть("ПодвалСтраницы1");
	ШапкаРазделов5и6  = Макет.ПолучитьОбласть("ШапкаРазделов5и6");
	СтрокаРазделов5и6 = Макет.ПолучитьОбласть("СтрокаРазделов5и6");
	ШапкаРаздела7_1   = Макет.ПолучитьОбласть("ШапкаРаздела7_1");
	ШапкаРаздела7_2   = Макет.ПолучитьОбласть("ШапкаРаздела7_2");
	ПодвалСтраницы2   = Макет.ПолучитьОбласть("ПодвалСтраницы2");
	
	ТабДок = Новый ТабличныйДокумент();
	
	//Последние сведения об ОС
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Организация",   Организация);
	Запрос.УстановитьПараметр("ДатаСведений", ДатаСведений);
	Запрос.УстановитьПараметр("ОсновноеСредство", Ссылка);
	Запрос.УстановитьПараметр("СубконтоОС", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.СтоимостьДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.КоэффициентАмортизации,
	|	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.КоэффициентУскорения,
	|	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.Период,
	|	СчетаБухгалтерскогоУчетаОсновныхСредствСрезПоследних.СчетУчета,
	|	СчетаБухгалтерскогоУчетаОсновныхСредствСрезПоследних.СчетНачисленияАмортизации,
	|	ПервоначальныеСведенияОбОсновныхСредствахОрганизацийСрезПоследних.СпособНачисленияАмортизации,
	|	ПервоначальныеСведенияОбОсновныхСредствахОрганизацийСрезПоследних.ПервоначальнаяСтоимость,
	|	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.СрокПолезногоИспользования,
	|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.Местонахождение,
	|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.МОЛ,
	|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.Местонахождение.Наименование,
	|	ПервоначальныеСведенияОбОсновныхСредствахОрганизацийСрезПоследних.ОсновноеСредство,
	|	ПервоначальныеСведенияОбОсновныхСредствахОрганизацийСрезПоследних.ИнвентарныйНомер
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(&ДатаСведений, Организация = &Организация И ОсновноеСредство = &ОсновноеСредство) КАК ПервоначальныеСведенияОбОсновныхСредствахОрганизацийСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСБухгалтерскийУчет.СрезПоследних(&ДатаСведений, Организация = &Организация И ОсновноеСредство = &ОсновноеСредство) КАК ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних
	|		ПО ПервоначальныеСведенияОбОсновныхСредствахОрганизацийСрезПоследних.ОсновноеСредство = ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(&ДатаСведений, Организация = &Организация И ОсновноеСредство = &ОсновноеСредство) КАК СчетаБухгалтерскогоУчетаОсновныхСредствСрезПоследних
	|		ПО ПервоначальныеСведенияОбОсновныхСредствахОрганизацийСрезПоследних.ОсновноеСредство = СчетаБухгалтерскогоУчетаОсновныхСредствСрезПоследних.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(&ДатаСведений, Организация = &Организация И ОсновноеСредство = &ОсновноеСредство) КАК МестонахождениеОСБухгалтерскийУчетСрезПоследних
	|		ПО ПервоначальныеСведенияОбОсновныхСредствахОрганизацийСрезПоследних.ОсновноеСредство = МестонахождениеОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство
	|
	|ГДЕ
	|	ПервоначальныеСведенияОбОсновныхСредствахОрганизацийСрезПоследних.Организация = &Организация";
	ТекущиеСведенияОС = Запрос.Выполнить().Выбрать();
	ТекущиеСведенияОС.Следующий();
	
	Если НЕ ЗначениеЗаполнено(ТекущиеСведенияОС.ОсновноеСредство) Тогда
		Сообщить("На момент формирования отчета основное средство не принималось к учету в указанной организации."+Символы.ПС+
		"Нельзя сформировать инвентарную карточку объекта!",СтатусСообщения.Внимание);
		Возврат неопределено;
	КонецЕсли; 
	
	СчетУчетаСтоимостиБУ = ТекущиеСведенияОС.СчетУчета;
	СрокИспользования   = ТекущиеСведенияОС.СрокПолезногоИспользования;
	
	Отбор  = Новый Структура( "ОсновноеСредство", Ссылка);
	Подразделение  = ТекущиеСведенияОС.МестонахождениеНаименование;
	
	СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация);
	
	Шапка.Параметры.Организация       = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм");
	Шапка.Параметры.КодПоОКПО         = Организация.КодПоОКПО;
	Шапка.Параметры.Подразделение     = Подразделение;
	Шапка.Параметры.НаименованиеОС     = ?(НЕ ЗначениеЗаполнено(НаименованиеПолное),Наименование,НаименованиеПолное);
	Шапка.Параметры.НомерДок          = ТекущиеСведенияОС.ИнвентарныйНомер;
	Шапка.Параметры.ДатаДок           = Формат(ДатаСведений,"ДФ=dd.MM.yyyy");
	Шапка.Параметры.МестоНахождениеОС = Подразделение;
	Шапка.Параметры.ИзготовительОС    = Изготовитель;
	Шапка.Параметры.КодПоОКОФ         = КодПоОКОФ.Код;
	Шапка.Параметры.НомерГруппы       = АмортизационнаяГруппа;
	Шапка.Параметры.НомерПаспорта     = НомерПаспорта;
	Шапка.Параметры.ЗаводскойНомер    = ЗаводскойНомер;
	Шапка.Параметры.ИнвентарныйНомер  = ТекущиеСведенияОС.ИнвентарныйНомер;
	Шапка.Параметры.СубСчет           = Строка(СчетУчетаСтоимостиБУ);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СостоянияОСОрганизаций.Состояние,
		|	СостоянияОСОрганизаций.ДатаСостояния,
		|	СобытияОСОрганизаций.НазваниеДокумента,
		|	СобытияОСОрганизаций.НомерДокумента,
		|	СобытияОСОрганизаций.Событие,
		|	СостоянияОСОрганизаций.Регистратор
		|ИЗ
		|	РегистрСведений.СобытияОСОрганизаций КАК СобытияОСОрганизаций
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
		|		ПО СобытияОСОрганизаций.Период = СостоянияОСОрганизаций.ДатаСостояния И СобытияОСОрганизаций.Регистратор = СостоянияОСОрганизаций.Регистратор
		|
		|ГДЕ
		|	СобытияОСОрганизаций.Организация = &Организация И
		|	СостоянияОСОрганизаций.Организация = &Организация И
		|	СобытияОСОрганизаций.ОсновноеСредство = &ОсновноеСредство И
		|	СостоянияОСОрганизаций.ОсновноеСредство = &ОсновноеСредство
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	NULL,
		|	СобытияОСОрганизацийСрезПоследних.Период,
		|	СобытияОСОрганизацийСрезПоследних.НазваниеДокумента,
		|	СобытияОСОрганизацийСрезПоследних.НомерДокумента,
		|	СобытияОСОрганизацийСрезПоследних.Событие,
		|	СобытияОСОрганизацийСрезПоследних.Регистратор
		|ИЗ
		|	РегистрСведений.СобытияОСОрганизаций.СрезПоследних(&ДатаСведений, ОсновноеСредство = &ОсновноеСредство И Организация = &Организация И Событие.ВидСобытияОС В (&МодернизацияИКапРемонт)) КАК СобытияОСОрганизацийСрезПоследних";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ОсновноеСредство", Ссылка);
	Запрос.УстановитьПараметр("ДатаСведений", ДатаСведений);
	
	ВидыСобытий = Новый СписокЗначений;
	ВидыСобытий.Добавить(Перечисления.ВидыСобытийОС.Модернизация);
	ВидыСобытий.Добавить(Перечисления.ВидыСобытийОС.Достройка);
	ВидыСобытий.Добавить(Перечисления.ВидыСобытийОС.Дооборудование);
	ВидыСобытий.Добавить(Перечисления.ВидыСобытийОС.КапитальныйРемонт);

	
	Запрос.УстановитьПараметр("МодернизацияИКапРемонт", ВидыСобытий);
	Выборка = Запрос.Выполнить().Выбрать();
	
	ДатаПринятия     = '00010101';
	ДокументПринятия = "";
	
	ДатаВвода     = '00010101';
	ДокументВвода = "";
	ДокументВводаНомер = "";
	
	ДатаСписания       = '00010101';
	ДокументСписания   = "";
	РегистраторСписания = Неопределено;
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.Состояние   = Перечисления.СостоянияОС.ПринятоКУчету Тогда
			 ДатаПринятия        = Выборка.ДатаСостояния;
			 ДокументПринятия    = Выборка.НазваниеДокумента;
		ИначеЕсли Выборка.Состояние = Перечисления.СостоянияОС.СнятоСУчета Тогда
			 ДатаСписания        = Выборка.ДатаСостояния;
			 ДокументСписания    = Выборка.НазваниеДокумента;
			 РегистраторСписания = Выборка.Регистратор;
		Иначе
			ДатаПоследнейМодернизации     = Выборка.ДатаСостояния;
			ДокументПоследнейМодернизации = Выборка.НазваниеДокумента;
		КонецЕсли; 
	КонецЦикла;

	Шапка.Параметры.ДатаВвода    = ДатаПринятия;
	Шапка.Параметры.ДатаСписания = ДатаСписания;

	ТабДок.Вывести(Шапка);

	// Балансовая стоимость ОС на момент поступления и первоначально принятый срок полезного использования
	ШапкаРазделов1и2.Параметры.ПервоначальнаяСтоимость    = ТекущиеСведенияОС.ПервоначальнаяСтоимость;
	ШапкаРазделов1и2.Параметры.СрокПолезногоИспользования = СрокИспользования;

	ТабДок.Вывести(ШапкаРазделов1и2);
	ТабДок.Вывести(ШапкаРаздела3);
	ТабДок.Вывести(СтрокиРаздела3);

	// Сведения о приемке, внутренних перемещениях и выбытии	
	ТабДок.Вывести(ШапкаРаздела4);

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период",           ДатаСведений);
	Запрос.УстановитьПараметр("Организация",      Организация);
	Запрос.УстановитьПараметр("ОсновноеСредство", Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СобытияОСОрганизаций.НазваниеДокумента,
	|	СобытияОСОрганизаций.НомерДокумента,
	|	СобытияОСОрганизаций.Период,
	|	ВЫБОР КОГДА (СобытияОСОрганизаций.Регистратор ССЫЛКА Документ.ПередачаОС)
	|	          И (СобытияОСОрганизаций.Регистратор.ДокПодготовкаКПередачеОС <> ЗНАЧЕНИЕ(Документ.ПодготовкаКПередачеОС.ПустаяСсылка)) ТОГДА
	|		СобытияОСОрганизаций.Регистратор.ДокПодготовкаКПередачеОС.Дата
	|	ИНАЧЕ
	|		СобытияОСОрганизаций.Период
	|	КОНЕЦ КАК ПериодОстатков,
	|	СобытияОСОрганизаций.Событие,
	|	СобытияОСОрганизаций.Событие.ВидСобытияОС КАК ВидСобытияОС,
	|	СобытияОСОрганизаций.Регистратор
	|ПОМЕСТИТЬ СобытияОС
	|ИЗ
	|	РегистрСведений.СобытияОСОрганизаций КАК СобытияОСОрганизаций
	|ГДЕ
	|	СобытияОСОрганизаций.ОсновноеСредство = &ОсновноеСредство
	|	И СобытияОСОрганизаций.Период < &Период
	|	И СобытияОСОрганизаций.Организация = &Организация
	|	И СобытияОСОрганизаций.Событие.ВидСобытияОС В (ЗНАЧЕНИЕ(Перечисление.ВидыСобытийОС.ПринятиеКУчету), ЗНАЧЕНИЕ(Перечисление.ВидыСобытийОС.ПринятиеКУчетуСВводомВЭксплуатацию), ЗНАЧЕНИЕ(Перечисление.ВидыСобытийОС.ВнутреннееПеремещение), ЗНАЧЕНИЕ(Перечисление.ВидыСобытийОС.Списание), ЗНАЧЕНИЕ(Перечисление.ВидыСобытийОС.Передача))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МестонахождениеОСБухгалтерскийУчет.Период,
	|	МестонахождениеОСБухгалтерскийУчет.МОЛ,
	|	МестонахождениеОСБухгалтерскийУчет.Местонахождение
	|ПОМЕСТИТЬ МестонахождениеОСБухгалтерскийУчет
	|ИЗ
	|	РегистрСведений.МестонахождениеОСБухгалтерскийУчет КАК МестонахождениеОСБухгалтерскийУчет
	|ГДЕ
	|	МестонахождениеОСБухгалтерскийУчет.ОсновноеСредство = &ОсновноеСредство
	|	И МестонахождениеОСБухгалтерскийУчет.Организация = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СобытияОС.Период,
	|	МАКСИМУМ(МестонахождениеОСБухгалтерскийУчет.Период) КАК ПоследнийПериод
	|ПОМЕСТИТЬ МестонахождениеОСБухгалтерскийУчетСрезПоследнихПериодов
	|ИЗ
	|	СобытияОС КАК СобытияОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОСБухгалтерскийУчет КАК МестонахождениеОСБухгалтерскийУчет
	|		ПО СобытияОС.Период >= МестонахождениеОСБухгалтерскийУчет.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	СобытияОС.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МестонахождениеОСБухгалтерскийУчетСрезПоследнихПериодов.Период,
	|	МестонахождениеОСБухгалтерскийУчет.МОЛ,
	|	МестонахождениеОСБухгалтерскийУчет.Местонахождение
	|ПОМЕСТИТЬ МестонахождениеОСБухгалтерскийУчетСрезПоследних
	|ИЗ
	|	МестонахождениеОСБухгалтерскийУчетСрезПоследнихПериодов КАК МестонахождениеОСБухгалтерскийУчетСрезПоследнихПериодов
	|		ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОСБухгалтерскийУчет КАК МестонахождениеОСБухгалтерскийУчет
	|		ПО МестонахождениеОСБухгалтерскийУчетСрезПоследнихПериодов.ПоследнийПериод = МестонахождениеОСБухгалтерскийУчет.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаБухгалтерскогоУчетаОС.Период,
	|	СчетаБухгалтерскогоУчетаОС.СчетУчета,
	|	СчетаБухгалтерскогоУчетаОС.СчетНачисленияАмортизации
	|ПОМЕСТИТЬ СчетаБухгалтерскогоУчетаОС
	|ИЗ
	|	РегистрСведений.СчетаБухгалтерскогоУчетаОС КАК СчетаБухгалтерскогоУчетаОС
	|ГДЕ
	|	СчетаБухгалтерскогоУчетаОС.ОсновноеСредство = &ОсновноеСредство
	|	И СчетаБухгалтерскогоУчетаОС.Организация = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СобытияОС.ПериодОстатков,
	|	МАКСИМУМ(СчетаБухгалтерскогоУчетаОС.Период) КАК ПоследнийПериод
	|ПОМЕСТИТЬ СчетаБухгалтерскогоУчетаОССрезПоследнихПериодов
	|ИЗ
	|	СобытияОС КАК СобытияОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаБухгалтерскогоУчетаОС КАК СчетаБухгалтерскогоУчетаОС
	|		ПО СобытияОС.ПериодОстатков >= СчетаБухгалтерскогоУчетаОС.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	СобытияОС.ПериодОстатков
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаБухгалтерскогоУчетаОССрезПоследнихПериодов.ПериодОстатков,
	|	СчетаБухгалтерскогоУчетаОС.СчетУчета,
	|	СчетаБухгалтерскогоУчетаОС.СчетНачисленияАмортизации
	|ПОМЕСТИТЬ СчетаБухгалтерскогоУчетаОССрезПоследних
	|ИЗ
	|	СчетаБухгалтерскогоУчетаОССрезПоследнихПериодов КАК СчетаБухгалтерскогоУчетаОССрезПоследнихПериодов
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаБухгалтерскогоУчетаОС КАК СчетаБухгалтерскогоУчетаОС
	|		ПО СчетаБухгалтерскогоУчетаОССрезПоследнихПериодов.ПоследнийПериод = СчетаБухгалтерскогоУчетаОС.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстаткиИОбороты.Период,
	|	ХозрасчетныйОстаткиИОбороты.Счет,
	|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт,
	|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт,
	|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт,
	|	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
	|ПОМЕСТИТЬ ХозрасчетныйОстаткиИОбороты
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
	|			,
	|			&Период,
	|			Регистратор,
	|			,
	|			Счет В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					СчетаБухгалтерскогоУчетаОССрезПоследних.СчетУчета
	|				ИЗ
	|					СчетаБухгалтерскогоУчетаОССрезПоследних
	|			
	|				ОБЪЕДИНИТЬ
	|			
	|				ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					СчетаБухгалтерскогоУчетаОССрезПоследних.СчетНачисленияАмортизации
	|				ИЗ
	|					СчетаБухгалтерскогоУчетаОССрезПоследних),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			Организация = &Организация
	|				И Субконто1 = &ОсновноеСредство) КАК ХозрасчетныйОстаткиИОбороты
	|ГДЕ НЕ (Регистратор = Неопределено)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СобытияОС.ПериодОстатков,
	|	ХозрасчетныйОстаткиИОбороты.Счет,
	|	МАКСИМУМ(ХозрасчетныйОстаткиИОбороты.Период) КАК ПоследнийПериод
	|ПОМЕСТИТЬ ХозрасчетныйОстаткиИОборотыСрезПоследнихПериодов
	|ИЗ
	|	СобытияОС КАК СобытияОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ ХозрасчетныйОстаткиИОбороты КАК ХозрасчетныйОстаткиИОбороты
	|		ПО СобытияОС.ПериодОстатков >= ХозрасчетныйОстаткиИОбороты.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	СобытияОС.ПериодОстатков,
	|	ХозрасчетныйОстаткиИОбороты.Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстаткиИОборотыСрезПоследнихПериодов.ПериодОстатков,
	|	ХозрасчетныйОстаткиИОбороты.Счет,
	|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт,
	|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт,
	|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт,
	|	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
	|ПОМЕСТИТЬ ХозрасчетныйОстаткиИОборотыСрезПоследних
	|ИЗ
	|	ХозрасчетныйОстаткиИОборотыСрезПоследнихПериодов КАК ХозрасчетныйОстаткиИОборотыСрезПоследнихПериодов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ХозрасчетныйОстаткиИОбороты КАК ХозрасчетныйОстаткиИОбороты
	|		ПО ХозрасчетныйОстаткиИОборотыСрезПоследнихПериодов.ПоследнийПериод = ХозрасчетныйОстаткиИОбороты.Период
	|		 И ХозрасчетныйОстаткиИОборотыСрезПоследнихПериодов.Счет = ХозрасчетныйОстаткиИОбороты.Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СобытияОС.НазваниеДокумента,
	|	СобытияОС.НомерДокумента,
	|	СобытияОС.Период,
	|	СобытияОС.Событие,
	|	СобытияОС.Регистратор,
	|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.МОЛ,
	|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.Местонахождение,
	|	СтоимостьОС.СуммаОборотКт КАК СтоимостьОборот,
	|	АмортизацияОС.СуммаОборотДт КАК АмортизацияОборот,
	|	ВЫБОР КОГДА СобытияОС.ВидСобытияОС В (ЗНАЧЕНИЕ(Перечисление.ВидыСобытийОС.Списание), ЗНАЧЕНИЕ(Перечисление.ВидыСобытийОС.Передача)) ТОГДА
	|		ЕСТЬNULL(СтоимостьОС.СуммаОборотКт, 0) - ЕСТЬNULL(АмортизацияОС.СуммаОборотДт, 0) 
	|	ИНАЧЕ
	|		ЕСТЬNULL(СтоимостьОС.СуммаКонечныйОстатокДт, 0) - ЕСТЬNULL(АмортизацияОС.СуммаКонечныйОстатокКт, 0) 
	|	КОНЕЦ КАК ОстаточнаяСтоимость
	|ИЗ
	|	СобытияОС КАК СобытияОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОСБухгалтерскийУчетСрезПоследних КАК МестонахождениеОСБухгалтерскийУчетСрезПоследних
	|		ПО СобытияОС.Период = МестонахождениеОСБухгалтерскийУчетСрезПоследних.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаБухгалтерскогоУчетаОССрезПоследних КАК СчетаБухгалтерскогоУчетаОССрезПоследних
	|		ПО СобытияОС.ПериодОстатков = СчетаБухгалтерскогоУчетаОССрезПоследних.ПериодОстатков
	|		ЛЕВОЕ СОЕДИНЕНИЕ ХозрасчетныйОстаткиИОборотыСрезПоследних КАК СтоимостьОС
	|		ПО (СчетаБухгалтерскогоУчетаОССрезПоследних.ПериодОстатков = СтоимостьОС.ПериодОстатков)
	|			И (СчетаБухгалтерскогоУчетаОССрезПоследних.СчетУчета = СтоимостьОС.Счет)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ХозрасчетныйОстаткиИОборотыСрезПоследних КАК АмортизацияОС
	|		ПО (СчетаБухгалтерскогоУчетаОССрезПоследних.ПериодОстатков = АмортизацияОС.ПериодОстатков)
	|			И (СчетаБухгалтерскогоУчетаОССрезПоследних.СчетНачисленияАмортизации = АмортизацияОС.Счет)";
	ВыборкаЗаписей = Запрос.Выполнить().Выбрать();
	Пока ВыборкаЗаписей.Следующий() Цикл





		ТекущаяОперация = ВыборкаЗаписей.Событие;










		СтрокаРаздела4.Параметры.ДатаНомерДокумента = ВыборкаЗаписей.НазваниеДокумента + " № "+ВыборкаЗаписей.НомерДокумента+" от "+Формат(ВыборкаЗаписей.Период,"ДФ=dd.MM.yyyy");
		СтрокаРаздела4.Параметры.ВидОперации        = ТекущаяОперация;
		СтрокаРаздела4.Параметры.ФИОМОЛДвижения     = "";
		СтрокаРаздела4.Параметры.Подразделение      = "";
		СтрокаРаздела4.Параметры.ФИОМОЛДвижения     = ВыборкаЗаписей.МОЛ;
		СтрокаРаздела4.Параметры.Подразделение      = ВыборкаЗаписей.Местонахождение;


















































			
		Если ТипЗнч(ВыборкаЗаписей.Регистратор) = Тип("ДокументСсылка.ВводНачальныхОстатков") Тогда
			
			СтрокаРаздела4.Параметры.ОстаточнаяСтоимость = ТекущиеСведенияОС.ПервоначальнаяСтоимость;
			
		Иначе
			
			СтрокаРаздела4.Параметры.ОстаточнаяСтоимость = ВыборкаЗаписей.ОстаточнаяСтоимость;


















		КонецЕсли;

		ТабДок.Вывести(СтрокаРаздела4);

	КонецЦикла;

	ТабДок.Вывести(ПодвалСтраницы1);

	// модернизация ос и ремонт
	ТаблицаМодернизаций = Новый ТаблицаЗначений;
	ТаблицаМодернизаций.Колонки.Добавить("ВидОперации");
	ТаблицаМодернизаций.Колонки.Добавить("Название");
	ТаблицаМодернизаций.Колонки.Добавить("Дата");
	ТаблицаМодернизаций.Колонки.Добавить("Номер");
	ТаблицаМодернизаций.Колонки.Добавить("Сумма");

	ТаблицаРемонтов = Новый ТаблицаЗначений;
	ТаблицаРемонтов.Колонки.Добавить("ВидОперации");
	ТаблицаРемонтов.Колонки.Добавить("Название");
	ТаблицаРемонтов.Колонки.Добавить("Дата");
	ТаблицаРемонтов.Колонки.Добавить("Номер");
	ТаблицаРемонтов.Колонки.Добавить("Сумма");

	//ШапкаРазделов5и6.Параметры.Валюта = ВалютаПечати;
	ТабДок.Вывести(ШапкаРазделов5и6);

	СписокМодернизаций = Новый Массив;
	СписокМодернизаций.Добавить(Перечисления.ВидыСобытийОС.Модернизация);
	СписокМодернизаций.Добавить(Перечисления.ВидыСобытийОС.Достройка);
	СписокМодернизаций.Добавить(Перечисления.ВидыСобытийОС.Реконструкция);
	СписокМодернизаций.Добавить(Перечисления.ВидыСобытийОС.Дооборудование);
	СписокМодернизаций.Добавить(Перечисления.ВидыСобытийОС.ЧастичнаяЛиквидация);

	СписокРемонтов = Новый Массив;
	СписокРемонтов.Добавить(Перечисления.ВидыСобытийОС.СреднийРемонт);
	СписокРемонтов.Добавить(Перечисления.ВидыСобытийОС.ТекущийРемонт);
	СписокРемонтов.Добавить(Перечисления.ВидыСобытийОС.КапитальныйРемонт);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",  Организация);
	Запрос.УстановитьПараметр("ОсновноеСредство",  Ссылка);
	Запрос.УстановитьПараметр("УсловиеМодернизаций",СписокМодернизаций);
	Запрос.УстановитьПараметр("УсловиеРемонтов",СписокРемонтов);
	Запрос.УстановитьПараметр("ВидСобытияОС",Перечисления.ВидыСобытийОС.ПринятиеКУчету);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫБОР КОГДА СобытияОСОрганизаций.Событие.ВидСобытияОС В (&УсловиеМодернизаций) ТОГДА СобытияОСОрганизаций.СуммаЗатратБУ ИНАЧЕ 0 КОНЕЦ КАК СуммаЗатратБУМодернизаций,
	|	ВЫБОР КОГДА СобытияОСОрганизаций.Событие.ВидСобытияОС В (&УсловиеРемонтов) ТОГДА СобытияОСОрганизаций.СуммаЗатратБУ ИНАЧЕ 0 КОНЕЦ КАК СуммаЗатратБУРемонтов,
	|	СобытияОСОрганизаций.Регистратор КАК Регистратор,
	|	СобытияОСОрганизаций.Период КАК Период,
	|	СобытияОСОрганизаций.Событие КАК Операция,
	|	СобытияОСОрганизаций.НомерДокумента КАК НомерДокумента,
	|	ВЫРАЗИТЬ(СобытияОСОрганизаций.НазваниеДокумента КАК СТРОКА(200)) КАК НазваниеДокумента
	|ИЗ
	|	РегистрСведений.СобытияОСОрганизаций КАК СобытияОСОрганизаций
	|
	|ГДЕ
	|	СобытияОСОрганизаций.Организация = &Организация И
	|	СобытияОСОрганизаций.Событие.ВидСобытияОС <> &ВидСобытияОС И
	|	СобытияОСОрганизаций.ОсновноеСредство = &ОсновноеСредство
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	Регистратор";

	Результат = Запрос.Выполнить();

	СпособВыборки = ОбходРезультатаЗапроса.Прямой;
	ВыборкаРегистраторов = Результат.Выбрать(СпособВыборки);
	Пока ВыборкаРегистраторов.Следующий() Цикл

		СуммаМодернизаций = ?(ВыборкаРегистраторов.СуммаЗатратБУМодернизаций = NULL, 0, ВыборкаРегистраторов.СуммаЗатратБУМодернизаций);
		СуммаРемонтов = ?(ВыборкаРегистраторов.СуммаЗатратБУРемонтов = NULL, 0, ВыборкаРегистраторов.СуммаЗатратБУРемонтов);

		Если СуммаМодернизаций <> 0 Тогда
			СтрокаТаблицыМодернизаций = ТаблицаМодернизаций.Добавить();
			СтрокаТаблицыМодернизаций.ВидОперации = ВыборкаРегистраторов.Операция;
			СтрокаТаблицыМодернизаций.Название    = ВыборкаРегистраторов.НазваниеДокумента;
			СтрокаТаблицыМодернизаций.Номер       = ВыборкаРегистраторов.НомерДокумента;
			СтрокаТаблицыМодернизаций.Дата        = ВыборкаРегистраторов.Период;
			СтрокаТаблицыМодернизаций.Сумма       = СуммаМодернизаций;
		КонецЕсли;

		Если СуммаРемонтов <> 0 Тогда
			СтрокаТаблицыРемонтов = ТаблицаРемонтов.Добавить();
			СтрокаТаблицыРемонтов.ВидОперации      = ВыборкаРегистраторов.Операция;
			СтрокаТаблицыРемонтов.Название         = ВыборкаРегистраторов.НазваниеДокумента;
			СтрокаТаблицыРемонтов.Номер            = ВыборкаРегистраторов.НомерДокумента;
			СтрокаТаблицыРемонтов.Дата             = ВыборкаРегистраторов.Период;
			СтрокаТаблицыРемонтов.Сумма            = СуммаРемонтов;
		КонецЕсли;

	КонецЦикла;
	
	КоличествоСтрок = Макс(ТаблицаМодернизаций.Количество(),ТаблицаРемонтов.Количество(),1); 
	Для СчетСтрок = 1 По КоличествоСтрок Цикл
		Если СчетСтрок <= ТаблицаМодернизаций.Количество() Тогда
			СтрокаТаблицы = ТаблицаМодернизаций.Получить(СчетСтрок - 1);
			СтрокаРазделов5и6.Параметры.Модернизация          = СтрокаТаблицы.ВидОперации;
			СтрокаРазделов5и6.Параметры.ДокМодернизации       = СтрокаТаблицы.Название;
			СтрокаРазделов5и6.Параметры.ДокМодернизацииДата   = СтрокаТаблицы.Дата;
			СтрокаРазделов5и6.Параметры.ДокМодернизацииНомер  = СтрокаТаблицы.Номер;
			СтрокаРазделов5и6.Параметры.ЗатратыНаМодернизацию = СтрокаТаблицы.Сумма; 
		Иначе
			СтрокаРазделов5и6.Параметры.Модернизация          = "";
			СтрокаРазделов5и6.Параметры.ДокМодернизации       = "";
			СтрокаРазделов5и6.Параметры.ДокМодернизацииДата   = "";
			СтрокаРазделов5и6.Параметры.ДокМодернизацииНомер  = "";
			СтрокаРазделов5и6.Параметры.ЗатратыНаМодернизацию = ""; 
		КонецЕсли;
		
		СтрокаРазделов5и6.Параметры.Ремонт          = "";
		СтрокаРазделов5и6.Параметры.ДокРемонта      = "";
		СтрокаРазделов5и6.Параметры.ДокРемонтаДата  = "";
		СтрокаРазделов5и6.Параметры.ДокРемонтаНомер = "";
		СтрокаРазделов5и6.Параметры.ЗатратыНаРемонт = "";
		ТабДок.Вывести(СтрокаРазделов5и6);
	КонецЦикла;
	
	ТабДок.Вывести(ШапкаРаздела7_1);
	ТабДок.Вывести(ШапкаРаздела7_2);
	ТабДок.Вывести(ПодвалСтраницы2);
	
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДок.ПолеСверху = 0;
	ТабДок.ПолеСнизу = 0;
	
	Возврат ТабДок;
	
КонецФункции // ПечатьОС6_2003(ДатаСведений) 


////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Процедура осуществляет печать справочника. Можно направить печать на 
// экран или принтер, а также распечатать необходимое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
// Параметры:
//  НазваниеМакета - строка, название макета.
// Возвращаемое значение:
//  Нет.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь, НепосредственнаяПечать = Ложь, ФормаЭлемента = Неопределено) Экспорт
	
	ДатаСведений   = ?(мДатаСведений = Неопределено, КонецДня(ОбщегоНазначения.ПолучитьРабочуюДату()), мДатаСведений);
	ВыборкаЗаписей = РегистрыСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.ПолучитьПоследнее(ДатаСведений,Новый Структура("ОсновноеСредство",Ссылка));
	Организация    = ?(ВыборкаЗаписей.Количество() > 0,ВыборкаЗаписей.Организация,Справочники.Организации.ПустаяСсылка());
	
	// Получить экземпляр документа на печать
	Если ИмяМакета = "ОС6_2003" Тогда
		ТабДокумент = ПечатьОС6_2003(ДатаСведений, Организация);
	Иначе
		Сообщить("Ошибка получения дополнительной печатной формы объекта. Возможно форма была удалена", СтатусСообщения.Важное);
	КонецЕсли;

	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, "Инвентарная карточка ОС (Форма ОС-6)", НепосредственнаяПечать);

КонецПроцедуры // Печать()

// Возвращает доступные варианты печати справочника.
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати.
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура("ОС6_2003","Форма ОС-6");

КонецФункции // ПолучитьСписокПечатныхФорм()

#КонецЕсли

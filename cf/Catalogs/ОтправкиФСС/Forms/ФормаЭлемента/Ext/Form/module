
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если ЭтоНовый() Тогда
		Предупреждение("Справочник не предназначен для ручного заполнения!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ОтчетПредставление = РегламентированнаяОтчетность.ПредставлениеДокументаРеглОтч(ОтчетСсылка);
	ЭлементыФормы.Предмет.Заголовок = ОтчетПредставление;
	
	ЭлементыФормы.Организация.Значение = Организация;
	ЭлементыФормы.КодОрганаФСС.Заголовок = КодОрганаФСС;
	ЭлементыФормы.ДатаОтправки.Значение = ДатаОтправки;
	
	ОбновитьФорму();
	
КонецПроцедуры

Процедура ОбновитьМеню()
	// кнопка ВыгрузитьПротоколКвитанцию
	КнопкиПодменюВыгрузка = ЭлементыФормы.ДействияФормы.Кнопки.Выгрузка.Кнопки;
	КнопкиМенюДействияФормы = ЭлементыФормы.ДействияФормы.Кнопки;
	
	флЕстьКнопкаВыгрузитьПротоколКвитанцию = (КнопкиПодменюВыгрузка.Найти("ВыгрузитьПротоколКвитанцию") <> Неопределено);
	флПолученРезультат = СтатусОтправки <> Перечисления.СтатусыОтправки.Отправлен;
	
	Если НЕ флЕстьКнопкаВыгрузитьПротоколКвитанцию И флПолученРезультат Тогда
		Если СтатусОтправки = Перечисления.СтатусыОтправки.НеПринят Тогда
			ТекстКнопки = "Выгрузить полученный протокол ошибок";
		Иначе
			ТекстКнопки = "Выгрузить полученную квитанцию";
		КонецЕсли;
		
		//добавляем кнопку
		КнопкиПодменюВыгрузка.Вставить(1, "ВыгрузитьПротоколКвитанцию", ТипКнопкиКоманднойПанели.Действие, 
														  ТекстКнопки, Новый Действие("ДействияФормыВыгрузитьПротоколКвитанцию"));
	КонецЕсли;
	
	//кнопка Обновить
	КнопкиМенюДействияФормы = ЭлементыФормы.ДействияФормы.Кнопки;
	флЕстьКнопкаОбновить = (КнопкиМенюДействияФормы.Найти("Обновить") <> Неопределено);
	
	Если флЕстьКнопкаОбновить И флПолученРезультат Тогда
		//удаляем кнопку
		ИндексКнопки = КнопкиМенюДействияФормы.Индекс(КнопкиМенюДействияФормы.Обновить);
		КнопкиМенюДействияФормы.Удалить(ИндексКнопки);
		//добавляем разделитель
		КнопкиМенюДействияФормы.Вставить(ИндексКнопки, , ТипКнопкиКоманднойПанели.Разделитель);
	КонецЕсли;												  
													  
КонецПроцедуры

Процедура ОбновитьФорму()
	ЦветСерый = Новый Цвет(128, 128, 128);
	ЦветЧерный = Новый Цвет(0, 0, 0);
	ЦветСиний = Новый Цвет(0, 0, 128);
	
	ЭлементыФормы.НадписьПомеченНаУдаление.Видимость = ПометкаУдаления;
	
	ЭлементыФормы.НадписьДатаОбновления.Заголовок = ?(ДатаПолученияРезультата = ОбщегоНазначения.ПустоеЗначениеТипа(Тип("Дата")), "<не определено>", ДатаПолученияРезультата);
	
	Если СтатусОтправки = Перечисления.СтатусыОтправки.Отправлен Тогда
		ЭлементыФормы.НадписьСтатусОтправки.Заголовок = "Протокол обработки пакета отсутствует";
		ЭлементыФормы.НадписьСтатусОтправки.ЦветТекста = ЦветСерый;
		ЭлементыФормы.НадписьСтатусОтправки.ГиперСсылка = Ложь;
	Иначе
		ЭлементыФормы.КартинкаПодтверждениеОтправки.Картинка = БиблиотекаКартинок.ЗеленыйШар;
		ЭлементыФормы.НадписьДатаЗакрытия.Заголовок =  Формат(ДатаПолученияРезультата,"ДЛФ=DT");
		
		Если СтатусОтправки = Перечисления.СтатусыОтправки.НеПринят Тогда
			ЭлементыФормы.КартинкаСтатусОтправки.Картинка = БиблиотекаКартинок.РегламентированныйОтчетНеПринят;
			ЭлементыФормы.НадписьСтатусОтправки.Заголовок = "Протокол ошибок получен";
			ЭлементыФормы.НадписьСтатусОтправки.ЦветТекста = ЦветСиний;
			ЭлементыФормы.НадписьСтатусОтправки.ГиперСсылка = Истина;
		ИначеЕсли СтатусОтправки = Перечисления.СтатусыОтправки.Сдан Тогда
			ЭлементыФормы.КартинкаСтатусОтправки.Картинка = БиблиотекаКартинок.ПисьмоПодтверждениеПолучено;
			ЭлементыФормы.НадписьСтатусОтправки.Заголовок = "Квитанция о сдаче отчета получена";
			ЭлементыФормы.НадписьСтатусОтправки.ЦветТекста = ЦветСиний;
			ЭлементыФормы.НадписьСтатусОтправки.ГиперСсылка = Истина;
		КонецЕсли;
	КонецЕсли;
	
	ОбновитьМеню();
КонецПроцедуры

Процедура ОбновитьРезультат()
	РезультатОтправки = РегламентированнаяОтчетность.ПолучитьРезультатОтправкиФСС(ИдентификаторОтправкиНаСервере);
	
	Попытка
		Заблокировать();
	Исключение
		Предупреждение("Не удалось заблокировать объект """ + ЭтотОбъект + """!
		|" + ОписаниеОшибки(), 60);
		Возврат;
	КонецПопытки;
	
	Если РезультатОтправки <> Неопределено Тогда
		ДатаПолученияРезультата = РезультатОтправки.ДатаПолученияРезультата;
		СтатусОтправки = РезультатОтправки.СтатусОтправки;
		Протокол = Новый ХранилищеЗначения(РезультатОтправки.Протокол);
		Если РезультатОтправки.Квитанция <> Неопределено Тогда
			Квитанция = Новый ХранилищеЗначения(РезультатОтправки.Квитанция);
		КонецЕсли;
	КонецЕсли;                
	
	Записать();
	Разблокировать();
	ОбновитьФорму();
	
	Если РезультатОтправки <> Неопределено Тогда
		
		// покажем протокол
		ЗаголовокПротокола = "Протокол обработки";
		РегламентированнаяОтчетность.ПоказатьПротоколОбработки(РезультатОтправки.Протокол, ЗаголовокПротокола);
		
	КонецЕсли;                
КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если Имясобытия = "Изменение статуса отправки регламентированного отчета" И ЗначениеЗаполнено(Параметр) И Источник = ОтчетСсылка Тогда
		Прочитать();
		ОбновитьФорму();
	КонецЕсли;
КонецПроцедуры

Процедура СохранитьПакет()
	//сохранение пакета
	Режим = РежимДиалогаВыбораФайла.ВыборКаталога;
	ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(Режим);
	ДиалогВыбораКаталога.Заголовок = "Выберите каталог для сохранения в файл зашифрованного пакета выгрузки";
	Если ДиалогВыбораКаталога.Выбрать() Тогда
		Пакет = ЗашифрованныйПакет.Получить();
		ПолноеИмяФайла = ДиалогВыбораКаталога.Каталог + "\" + ИмяФайлаПакета;
		Попытка
			Пакет.Записать(ПолноеИмяФайла);
		Исключение
			Сообщить(ОписаниеОшибки());		
		КонецПопытки;
		Сообщить("Пакет успешно выгружен в файл """ + ПолноеИмяФайла + """.", СтатусСообщения.Информация);
	КонецЕсли;
КонецПроцедуры

Процедура СохранитьФайлРезультата()
	Если СтатусОтправки = Перечисления.СтатусыОтправки.НеПринят Тогда
		// сохраняем протокол
		Режим = РежимДиалогаВыбораФайла.ВыборКаталога;
		ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(Режим);
		ДиалогВыбораКаталога.Заголовок = "Выберите каталог для сохранения в файл протокола входного контроля файла отчетности";
		Если ДиалогВыбораКаталога.Выбрать() Тогда
			СтрПротокол = Протокол.Получить();
			ПолноеИмяФайла = ДиалогВыбораКаталога.Каталог + "\" + "Протокол " + ИдентификаторОтправкиНаСервере + ".html";
			Попытка
				Текст = Новый ЗаписьТекста(ПолноеИмяФайла, КодировкаТекста.ANSI);
				Текст.Записать(СтрПротокол);
				Текст.Закрыть();
			Исключение
				Сообщить(ОписаниеОшибки());		
			КонецПопытки;
			Сообщить("Протокол успешно выгружен в файл """ + ПолноеИмяФайла + """.", СтатусСообщения.Информация);
		КонецЕсли;
	ИначеЕсли СтатусОтправки = Перечисления.СтатусыОтправки.Сдан тогда
		// сохраняем квитанцию
		Режим = РежимДиалогаВыбораФайла.ВыборКаталога;
		ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(Режим);
		ДиалогВыбораКаталога.Заголовок = "Выберите каталог для сохранения в файл квитанции о сдаче отчета";
		Если ДиалогВыбораКаталога.Выбрать() Тогда
			ДвоичныеДанныеКвитанция = Квитанция.Получить();
			ПолноеИмяФайла = ДиалогВыбораКаталога.Каталог + "\" + ИдентификаторОтправкиНаСервере + ".p7e";
			Попытка
				ДвоичныеДанныеКвитанция.Записать(ПолноеИмяФайла);
			Исключение
				Сообщить(ОписаниеОшибки());		
			КонецПопытки;
			Сообщить("Пакет успешно выгружен в файл """ + ПолноеИмяФайла + """.", СтатусСообщения.Информация);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ПредметНажатие(Элемент)
	ОткрытьЗначение(ОтчетСсылка);
КонецПроцедуры

Процедура НадписьПервичноеСообщениеНажатие(Элемент)
	СохранитьПакет();	
КонецПроцедуры

Процедура НадписьСтатусОтправкиНажатие(Элемент)
	// покажем протокол
	ЗаголовокПротокола = "Протокол обработки";
	РегламентированнаяОтчетность.ПоказатьПротоколОбработки(Протокол.Получить(), ЗаголовокПротокола);
КонецПроцедуры

Процедура ОрганизацияНажатие(Элемент)
	ОткрытьЗначение(Организация);
КонецПроцедуры

Процедура ДействияФормыВыгрузитьПакет(Кнопка)
	СохранитьПакет();
КонецПроцедуры

Процедура ДействияФормыВыгрузитьПротоколКвитанцию(Кнопка)
	СохранитьФайлРезультата();
КонецПроцедуры

Процедура ДействияФормыОбновить(Кнопка)
	// обновляем статус отправки
	ОбновитьРезультат();
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()
	
	СписокТиповНастройки = Новый СписокЗначений;
	СписокТиповНастройки.Добавить(Перечисления.ТипыНастроек.НастройкиОтчета);
	СписокТиповНастройки.Добавить(Перечисления.ТипыНастроек.ПустаяСсылка());
	
	Отбор.ТипНастройки.ВидСравнения = ВидСравнения.ВСписке;
	Отбор.ТипНастройки.Значение = СписокТиповНастройки;
	Отбор.ТипНастройки.Использование = истина;
	//Отбор.ТипНастройки.Установить(СписокТиповНастройки);
	
	// Установка доступности отбора и порядка
	СохранениеНастроек.УстановитьДоступностьОтбора(ЭлементыФормы.СправочникСписокСохраненныеНастройки);
	СохранениеНастроек.УстановитьДоступностьПорядка(ЭлементыФормы.СправочникСписокСохраненныеНастройки);
	
	// Применение настройки по-умолчанию
	Если СохраненнаяНастройка.Пустая() Тогда
		ПрименитьНастройку();
	КонецЕсли;
	
	// Настройка вида списка                 
	СохранениеНастроек.НастроитьВидСписка(ЭлементыФормы.СправочникСписокСохраненныеНастройки, глЗначениеПеременной("глТекущийПользователь"));
	
	//ЭлементыФормы.СправочникСписокСохраненныеНастройки.РежимВыбора = Истина;
	ЭлементыФормы.СправочникСписокСохраненныеНастройки.РежимВыделения = РежимВыделенияТабличногоПоля.Множественный;
КонецПроцедуры

Процедура ПриЗакрытии()
	
	// Сохранение настройки.
	Если СохраненнаяНастройка.СохранятьАвтоматически ИЛИ СохраненнаяНастройка.Пустая() Тогда
		СохранитьНастройку();
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТИРУЕМЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ

// Сохраняет режимы работы формы в настройку.
//
// Параметры:
//  Нет.
//
Процедура СохранитьНастройку() Экспорт
	
	СтруктураНастроек = Новый Структура();
	
	СтруктураНастроек.Вставить("СправочникСписокСохраненныеНастройки_Колонки", СохранениеНастроек.ПолучитьНастройкуКолонокСписка(ЭлементыФормы.СправочникСписокСохраненныеНастройки.Колонки));
	
	Если НЕ СохраненнаяНастройка.Пустая() Тогда
	СтруктураНастроек.Вставить("СправочникСписокСохраненныеНастройки_Отбор",   СохранениеНастроек.ПолучитьНастройкуОтбораСписка (СправочникСписокСохраненныеНастройки.Отбор));
	СтруктураНастроек.Вставить("СправочникСписокСохраненныеНастройки_Порядок", СохранениеНастроек.ПолучитьНастройкуПорядкаСписка(СправочникСписокСохраненныеНастройки.Порядок));
		
		Заголовок = "" + СохраненнаяНастройка.НастраиваемыйОбъект + ", настройка """ + СохраненнаяНастройка + """";
		
		СохранениеНастроек.СохранитьНастройкуОбъекта(СохраненнаяНастройка, СтруктураНастроек);
		
	Иначе
		Заголовок = "Список настроек форм";
		
		СохранитьЗначение("Справочник.СохраненныеНастройки.Форма.СписокНастроекФорм", СтруктураНастроек);
	КонецЕсли;
	
КонецПроцедуры

// Применяет режимы работы формы полученные из настройки.
//
// Параметры:
//  Нет.
//
Процедура ПрименитьНастройку() Экспорт
	
	СтруктураНастроек = СохраненнаяНастройка.ХранилищеНастроек.Получить();
	
	Если СохраненнаяНастройка.Пустая() Тогда
		Заголовок = "Варианты отчетов";
		
		СтруктураНастроек = ВосстановитьЗначение("Справочник.СохраненныеНастройки.Форма.СписокНастроекФорм");
		
	Иначе
		Заголовок = "" + СохраненнаяНастройка.НастраиваемыйОбъект + ", настройка """ + СохраненнаяНастройка + """";
		
		СтруктураНастроек = СохраненнаяНастройка.ХранилищеНастроек.Получить();
		
		СохранениеНастроек.ПрименитьНастройкуОтбораСписка (СтруктураНастроек, "СправочникСписокСохраненныеНастройки_Отбор",   СправочникСписокСохраненныеНастройки.Отбор);
		СохранениеНастроек.ПрименитьНастройкуПорядкаСписка(СтруктураНастроек, "СправочникСписокСохраненныеНастройки_Порядок", СправочникСписокСохраненныеНастройки.Порядок, ЭлементыФормы.СправочникСписокСохраненныеНастройки.НастройкаПорядка);
	КонецЕсли;
	
	СохранениеНастроек.ПрименитьНастройкуКолонокСписка(СтруктураНастроек, "СправочникСписокСохраненныеНастройки_Колонки", ЭлементыФормы.СправочникСписокСохраненныеНастройки.Колонки);
	
КонецПроцедуры


Процедура СправочникСписокСохраненныеНастройкиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа)
	
	Если Не Копирование И Не ЭтоГруппа Тогда
		Вопрос("Создание настройки возможно только из формы настраиваемого объекта", РежимДиалогаВопрос.ОК);
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ДействияФормыОбновитьВариантыОтчетов(Кнопка)
	СписокВариантов = Новый СписокЗначений;
	Для каждого Элемент из ЭлементыФормы.СправочникСписокСохраненныеНастройки.ВыделенныеСтроки Цикл
		Если Элемент.Предопределенный тогда
			СписокВариантов.Добавить(Справочники.СохраненныеНастройки.ПолучитьИмяПредопределенного(Элемент));
		Иначе
			Сообщить("Выбран не предопределенный вариант отчета " + Элемент);
		КонецЕсли;
	КонецЦикла;
	Если СписокВариантов.Количество() > 0 тогда
		Если Вопрос("Сейчас будет загружены настройки по умолчанию. Это удалит предыдущие настройки вариантов. Загрузить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да тогда
			ТиповыеОтчеты.ОбновитьПредопределенныеВариантыОтчетов(СписокВариантов, истина);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура СправочникСписокСохраненныеНастройкиПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Для каждого ОформленияСтроки из ОформленияСтрок Цикл
		
		Если ОформленияСтроки.ДанныеСтроки <> Неопределено тогда
			СписокПользователей = "";
			ПервыйПроход = истина;
			Для каждого СтрокаПользователь из ОформленияСтроки.ДанныеСтроки.Ссылка.Пользователи Цикл
				СписокПользователей = СписокПользователей + ?(ПервыйПроход, "", ", ") +СтрокаПользователь.Пользователь;
				ПервыйПроход = Ложь;
			КонецЦикла;
			ОформленияСтроки.Ячейки.Пользователи.Текст = СписокПользователей;
			ОформленияСтроки.Ячейки.Пользователи.ОтображатьТекст = истина;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ДействияФормыЗагрузитьНастройку(Кнопка)
	ФормаВыбораКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ФормаВыбораКаталога.Заголовок = "Выберите файл настройки";
	ФормаВыбораКаталога.Фильтр = "Настройка варианта отчета(*.vrp)|*.vrp";
	Если ФормаВыбораКаталога.Выбрать() тогда
		Каталог = ФормаВыбораКаталога.Каталог;
	Иначе
		Возврат;
	КонецЕсли;
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	ТекстовыйДокумент.Прочитать(ФормаВыбораКаталога.ПолноеИмяФайла);
	Настройка = ТиповыеОтчеты.ПолучитьНастройкуОтчета(ТекстовыйДокумент.ПолучитьТекст());
	Если Настройка.Версия > ТиповыеОтчеты.РабочаяВерсияНастройкиОтчетов() тогда
		Предупреждение("Данная конфигурация не поддерживает версию выбранной настройки. Обновите версию конфигурации.");
		Возврат;
	КонецЕсли;
	ЭлементСправочника = Справочники.СохраненныеНастройки.СоздатьЭлемент();
	ЭлементСправочника.Записать();
	ТиповыеОтчеты.ЗагрузитьНастройкуОтчета(ЭлементСправочника.Ссылка, Настройка);
КонецПроцедуры

Процедура ДействияФормыСохранитьНастройку(Кнопка)
	СписокВариантов = Новый СписокЗначений;
	Для каждого Элемент из ЭлементыФормы.СправочникСписокСохраненныеНастройки.ВыделенныеСтроки Цикл
		СписокВариантов.Добавить(Элемент);
	КонецЦикла;
	Если СписокВариантов.Количество() > 0 тогда
		ФормаВыбораКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
		ФормаВыбораКаталога.Заголовок = "Выберите каталог сохранения настройки";
		Каталог = "";
		Если ФормаВыбораКаталога.Выбрать() тогда
			Каталог = ФормаВыбораКаталога.Каталог;
		Иначе
			Возврат;
		КонецЕсли;
		Для каждого ВариантОтчета из СписокВариантов Цикл
			ТекстовыйДокумент = Новый ТекстовыйДокумент;
			ОбъектНастройки = ВариантОтчета.Значение;
			ТиповыеОтчеты.ПолучитьФайлСНастройкойОтчета(ОбъектНастройки, ТекстовыйДокумент);
			ИмяФайла = ТиповыеОтчеты.ПолучитьИмяФайлаДляНастройки(ОбъектНастройки.Наименование, ОбъектНастройки.Ссылка);
			ИмяФайла = РаботаСФайлами.УдалитьЗапрещенныеСимволыИмени(ИмяФайла);
			Файл = Новый Файл(Каталог + "\" + СокрЛП(ИмяФайла) + ".vrp");
			Если Файл.Существует() тогда
				Если Вопрос("Файл ("+СокрЛП(ИмяФайла) + ".vrp) существует в указанном каталоге. Перезаписать его?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			ТекстовыйДокумент.Записать(Каталог + "\" + СокрЛП(ИмяФайла) + ".vrp");
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// РАЗДЕЛ ОСНОВНОЙ ПРОГРАММЫ

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Обработчик события ОбновлениеОтображения формы.
//
Процедура ОбновлениеОтображения()

	СформироватьНадписиПолейПрописиНаРусском();

КонецПроцедуры

// Обработчик события ПриИзмененииДанных формы.
//
Процедура ПриИзмененииДанных()

	// Устанавливается отбор курсов валюты.
	СписокКурсыВалют.Отбор.Валюта.Установить(Ссылка);

	// Перечитываются параметры прописи.
	ПрочитатьПараметрыПрописи();

КонецПроцедуры

// Обработчик события ПослеЗаписи формы.
//
Процедура ПослеЗаписи()

	// Устанавливается отбор курсов валюты - на тот случай если был записан новый элемент.
	СписокКурсыВалют.Отбор.Валюта.Установить(Ссылка);

КонецПроцедуры

// Обработчик события ПриЗаписи формы.
//
Процедура ПриЗаписи()

	// если курс на 1 января 1980 не задан, установим его
	МодульВалютногоУчета.ПроверитьКорректностьКурсаНа01_01_1980(Ссылка);

КонецПроцедуры

// Обработчик события ПередНачаломДобавления элемента СписокКурсыВалют.
//
Процедура СписокКурсыВалютПередНачаломДобавления(Элемент, Отказ, Копирование)

	Если ЭтоНовый() Тогда
		Ответ = Вопрос("Элемент еще не записан. Записать?", РежимДиалогаВопрос.ОКОтмена);

		Если Ответ = КодВозвратаДиалога.ОК Тогда
			Отказ = НЕ ЗаписатьВФорме();
		Иначе
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

// Обработчик события ПриНачалеРедактирования элемента СписокКурсыВалют.
//
Процедура СписокКурсыВалютПриНачалеРедактирования(Элемент, НоваяСтрока)

	Если НоваяСтрока Тогда
		СтруктураКурса = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(ТекущаяДата(), Новый Структура("Валюта", Ссылка));

		Элемент.ТекущиеДанные.Курс      = СтруктураКурса.Курс;
		Элемент.ТекущиеДанные.Кратность = СтруктураКурса.Кратность;
	КонецЕсли;

КонецПроцедуры
                  

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ ПРОПИСИ

// Обработчик события ПриИзменении элемента НаименованиеПолное.
//
Процедура НаименованиеПолноеПриИзменении(Элемент)

	Если ПустаяСтрока(ЭлементыФормы.ПолеПрописи1наРусском.Значение) Тогда
		ЭлементыФормы.ПолеПрописи1наРусском.Значение = Нрег(НаименованиеПолное);
	КонецЕсли;

КонецПроцедуры

// Обработчик события ПриИзменении элементов ПолеПрописи1наРусском, ..., ПолеПрописи8наРусском.
//
Процедура ПолеПрописиНаРусскомПриИзменении(Элемент)

	СформироватьПараметрыПрописиНаРусском();

КонецПроцедуры

// Обработчик события ПриИзменении элемента ПолеПрописиДлинаДробнойЧасти.
//
Процедура ПолеПрописиДлинаДробнойЧастиПриИзменении(Элемент)

	СформироватьПараметрыПрописиНаРусском();

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ, ВЫЗЫВАЕМЫЕ ИЗ ОБРАБОТЧИКОВ

// Процедура считывает параметры прописи и заполняет соответствующие поля диалога.
//
// Параметры:
//  Нет.
//
Процедура ПрочитатьПараметрыПрописи()

	СтрокаПараметров = СтрЗаменить(ПараметрыПрописиНаРусском, ",", Символы.ПС);

	ЭлементыФормы.ПолеПрописи1наРусском.Значение        = СокрЛП(СтрПолучитьСтроку(СтрокаПараметров, 1));
	ЭлементыФормы.ПолеПрописи2наРусском.Значение        = СокрЛП(СтрПолучитьСтроку(СтрокаПараметров, 2));
	ЭлементыФормы.ПолеПрописи3наРусском.Значение        = СокрЛП(СтрПолучитьСтроку(СтрокаПараметров, 3));
	ЭлементыФормы.ПолеПрописи4наРусском.Значение        = СокрЛП(СтрПолучитьСтроку(СтрокаПараметров, 4));
	ЭлементыФормы.ПолеПрописи5наРусском.Значение        = СокрЛП(СтрПолучитьСтроку(СтрокаПараметров, 5));
	ЭлементыФормы.ПолеПрописи6наРусском.Значение        = СокрЛП(СтрПолучитьСтроку(СтрокаПараметров, 6));
	ЭлементыФормы.ПолеПрописи7наРусском.Значение        = СокрЛП(СтрПолучитьСтроку(СтрокаПараметров, 7));
	ЭлементыФормы.ПолеПрописи8наРусском.Значение        = СокрЛП(СтрПолучитьСтроку(СтрокаПараметров, 8));
	ЭлементыФормы.ПолеПрописиДлинаДробнойЧасти.Значение = СокрЛП(СтрПолучитьСтроку(СтрокаПараметров, 9));

	Если ЭлементыФормы.ПолеПрописи4наРусском.Значение = Неопределено Тогда
		ЭлементыФормы.ПолеПрописи4наРусском.Значение = ЭлементыФормы.ПолеПрописи4наРусском.СписокВыбора[0].Значение;
	КонецЕсли;

	Если ЭлементыФормы.ПолеПрописи8наРусском.Значение = Неопределено Тогда
		ЭлементыФормы.ПолеПрописи8наРусском.Значение = ЭлементыФормы.ПолеПрописи8наРусском.СписокВыбора[0].Значение;
	КонецЕсли;

	Если ЭлементыФормы.ПолеПрописиДлинаДробнойЧасти.Значение = Неопределено Тогда
		ЭлементыФормы.ПолеПрописиДлинаДробнойЧасти.Значение = ЭлементыФормы.ПолеПрописиДлинаДробнойЧасти.СписокВыбора[0].Значение;
	КонецЕсли;

КонецПроцедуры

// Процедура формирует параметры прописи для русского языка из соответствующих полей диалога.
//
// Параметры:
//  Нет.
//
Процедура СформироватьПараметрыПрописиНаРусском()

	ПараметрыПрописиНаРусском = ЭлементыФормы.ПолеПрописи1наРусском.Значение + ", "
	                          + ЭлементыФормы.ПолеПрописи2наРусском.Значение + ", "
	                          + ЭлементыФормы.ПолеПрописи3наРусском.Значение + ", "
	                          + ЭлементыФормы.ПолеПрописи4наРусском.Значение + ", "
	                          + ЭлементыФормы.ПолеПрописи5наРусском.Значение + ", "
	                          + ЭлементыФормы.ПолеПрописи6наРусском.Значение + ", "
	                          + ЭлементыФормы.ПолеПрописи7наРусском.Значение + ", "
	                          + ЭлементыФормы.ПолеПрописи8наРусском.Значение + ", "
	                          + ЭлементыФормы.ПолеПрописиДлинаДробнойЧасти.Значение;

КонецПроцедуры

// Процедура формирует надписи к полям прописи для русского языка.
//
// Параметры:
//  Нет.
//
Процедура СформироватьНадписиПолейПрописиНаРусском()

	Надписи = Новый Структура("м1, м2, м3, ж1, ж2, ж3, с1, с2, с3");

	Надписи.м1 = "один:"; Надписи.м2 = "два:"; Надписи.м3 = "пять:";
	Надписи.ж1 = "одна:"; Надписи.ж2 = "две:"; Надписи.ж3 = "пять:";
	Надписи.с1 = "одно:"; Надписи.с2 = "два:"; Надписи.с3 = "пять:";

	Род = ЭлементыФормы.ПолеПрописи4наРусском.Значение;

	ЭлементыФормы.НадписьПолеПрописи1наРусском.Заголовок = Надписи[Род + "1"];
	ЭлементыФормы.НадписьПолеПрописи2наРусском.Заголовок = Надписи[Род + "2"];
	ЭлементыФормы.НадписьПолеПрописи3наРусском.Заголовок = Надписи[Род + "3"];

	Род = ЭлементыФормы.ПолеПрописи8наРусском.Значение;

	ЭлементыФормы.НадписьПолеПрописи5наРусском.Заголовок = Надписи[Род + "1"];
	ЭлементыФормы.НадписьПолеПрописи6наРусском.Заголовок = Надписи[Род + "2"];
	ЭлементыФормы.НадписьПолеПрописи7наРусском.Заголовок = Надписи[Род + "3"];

КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// РАЗДЕЛ ОСНОВНОЙ ПРОГРАММЫ

// Род целой части на русском языке
ЭлементыФормы.ПолеПрописи4наРусском.СписокВыбора.Очистить();
ЭлементыФормы.ПолеПрописи4наРусском.СписокВыбора.Добавить("м", "Мужской");
ЭлементыФормы.ПолеПрописи4наРусском.СписокВыбора.Добавить("ж", "Женский");
ЭлементыФормы.ПолеПрописи4наРусском.СписокВыбора.Добавить("с", "Средний");

// Род дробной части на русском языке
ЭлементыФормы.ПолеПрописи8наРусском.СписокВыбора.Очистить();
ЭлементыФормы.ПолеПрописи8наРусском.СписокВыбора.Добавить("м", "Мужской");
ЭлементыФормы.ПолеПрописи8наРусском.СписокВыбора.Добавить("ж", "Женский");
ЭлементыФормы.ПолеПрописи8наРусском.СписокВыбора.Добавить("с", "Средний");

// Род дробной части на русском языке
ЭлементыФормы.ПолеПрописиДлинаДробнойЧасти.СписокВыбора.Очистить();
ЭлементыФормы.ПолеПрописиДлинаДробнойЧасти.СписокВыбора.Добавить("2", "2 знака");
ЭлементыФормы.ПолеПрописиДлинаДробнойЧасти.СписокВыбора.Добавить("1", "1 знак");
ЭлементыФормы.ПолеПрописиДлинаДробнойЧасти.СписокВыбора.Добавить("3", "3 знака");



Перем мСпискиПечатныхФормОбъектов;

Перем мТекущаяСтрока, мПредыдущийВидОбработки;

Процедура ОткрытьФормуВыбораПринадлежности(Элемент, СсылкаОбъекта = Неопределено, РежимПодбора = Ложь)

	Отказ = Истина;
	Форма = ПолучитьФорму("ФормаВыбораПринадлежности", Элемент);
	Форма.РежимВыбора = Истина;
	Форма.РежимПодбора = РежимПодбора;
	Форма.ВидОбработки = ВидОбработки;
	
	Если Не ВидОбработки = Перечисления.ВидыДополнительныхВнешнихОбработок.ПечатнаяФорма Тогда
		Форма.УжеВыбранные = СтуктураЗаполненных(СсылкаОбъекта);
	КонецЕсли; 
	мТекущаяСтрока = ?(СсылкаОбъекта = Неопределено, Неопределено, Элемент.ТекущаяСтрока);
	Если Форма.Открыта() Тогда
		Форма.СписокДокументов.Очистить();
	КонецЕсли;
	Форма.Открыть();
	
КонецПроцедуры

Процедура ПринадлежностьПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	Отказ = Истина;
	ОткрытьФормуВыбораПринадлежности(Элемент);
	
КонецПроцедуры

Процедура ПринадлежностьОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗНЧ(ВыбранноеЗначение) <> Тип("СписокЗначений") Тогда
		
		Если мТекущаяСтрока = Неопределено Тогда
			НоваяСтрока = Принадлежность.Добавить();
		Иначе
			НоваяСтрока = мТекущаяСтрока;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ТипЗНЧ(ВыбранноеЗначение) = Тип("ЭлементСпискаЗначений") Тогда // Выбрали ТЧ
		
		НоваяСтрока.ТабличнаяЧастьИмя           = ВыбранноеЗначение.Значение;
		НоваяСтрока.ТабличнаяЧастьПредставление = ВыбранноеЗначение.Представление;
		
	ИначеЕсли ТипЗНЧ(ВыбранноеЗначение) = Тип("СписокЗначений") Тогда
		
		Для Каждого Объект Из ВыбранноеЗначение Цикл
			
			НоваяСтрока = Принадлежность.Добавить();
			
			
			Если Метаданные.Документы.Содержит(Объект.Значение) Тогда
				
				НоваяСтрока.СсылкаОбъекта = Документы[Объект.Значение.Имя].ПустаяСсылка();
				НоваяСтрока.ПредставлениеОбъекта = "Документ """ + ?(Объект.Значение.Синоним = "", Объект.Значение.Имя, Объект.Значение.Синоним)+"""";
				
			ИначеЕсли Метаданные.Справочники.Содержит(Объект.Значение) Тогда
				
				НоваяСтрока.СсылкаОбъекта = Справочники[Объект.Значение.Имя].ПустаяСсылка();
				НоваяСтрока.ПредставлениеОбъекта = "Справочник """ + ?(Объект.Значение.Синоним = "", Объект.Значение.Имя, Объект.Значение.Синоним)+"""";
				
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("ОбъектМетаданных") Тогда
		
		Если Метаданные.Документы.Содержит(ВыбранноеЗначение) Тогда
			НоваяСтрока.СсылкаОбъекта = Документы[ВыбранноеЗначение.Имя].ПустаяСсылка();
			НоваяСтрока.ПредставлениеОбъекта = "Документ """ + ?(ВыбранноеЗначение.Синоним="", ВыбранноеЗначение.Имя, ВыбранноеЗначение.Синоним)+"""";
		ИначеЕсли Метаданные.Справочники.Содержит(ВыбранноеЗначение) Тогда
			НоваяСтрока.СсылкаОбъекта = Справочники[ВыбранноеЗначение.Имя].ПустаяСсылка();
			НоваяСтрока.ПредставлениеОбъекта = "Справочник """ + ?(ВыбранноеЗначение.Синоним="", ВыбранноеЗначение.Имя, ВыбранноеЗначение.Синоним)+"""";
		КонецЕсли;
		
		ЗаполнитьСписокВыбораПодменяемыхФорм();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСписокВыбораПодменяемыхФорм()
	
	ЭлементыФормы.Принадлежность.Колонки.ЗаменяемаяПечатнаяФорма.ЭлементУправления.СписокВыбора.Очистить();
	Если ВидОбработки = Перечисления.ВидыДополнительныхВнешнихОбработок.ПечатнаяФорма Тогда
		
		Если ЭлементыФормы.Принадлежность.ТекущаяСтрока <> Неопределено Тогда
			ЭлементыФормы.Принадлежность.Колонки.ЗаменяемаяПечатнаяФорма.ЭлементУправления.СписокВыбора = ПолучитьСписокПечатныхФормОбъектов(ЭлементыФормы.Принадлежность.ТекущиеДанные.СсылкаОбъекта);
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры

Функция СтуктураЗаполненных(ТекущийОбъект = Неопределено)
	
	Результат = Новый Соответствие;
	Если ВидОбработки = Перечисления.ВидыДополнительныхВнешнихОбработок.ЗаполнениеТабличныхЧастей Тогда
		Возврат Результат;
	КонецЕсли;
	
	Для Каждого СтрокаПринадлежности ИЗ Принадлежность Цикл
		
		Если ТекущийОбъект = Неопределено Тогда
			Результат.Вставить(СтрокаПринадлежности.СсылкаОбъекта.Метаданные(), Истина);
		ИначеЕсли ТекущийОбъект <> Неопределено И СтрокаПринадлежности.СсылкаОбъекта <> ТекущийОбъект Тогда
			Результат.Вставить(СтрокаПринадлежности.СсылкаОбъекта.Метаданные(), Истина);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Процедура ПередЗаписью(Отказ)	
	
	Если ВидОбработки.Пустая() Тогда
		Предупреждение("Не заполнено поле: Вид обработки");
		Отказ = Истина;
		Возврат;
	КонецЕсли; 
	
	Если Не ВыбраныФайлыВнешнейОбработки() Тогда
		Предупреждение("Не выбран файл внешней обработки");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

// <Описание функции>
//
// Параметры
//  <Параметр1>  – <Тип.Вид> – <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  – <Тип.Вид> – <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   – <описание возвращаемого значения>
//
Функция ВыбратьФайл()
	
	Если ВидОбработки.Пустая() Тогда
		Предупреждение("Не заполнено значение реквизита ""Вид обработки""");
		Возврат Неопределено;
	КонецЕсли; 
	
	ДиалогФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	Если ВидОбработки = Перечисления.ВидыДополнительныхВнешнихОбработок.Отчет Тогда
		
		ДиалогФайла.Фильтр = "Внешний отчет(*.erf)|*.erf";
		
	Иначе
		
		ДиалогФайла.Фильтр = "Внешняя обработка(*.epf)|*.epf";
		
	КонецЕсли;
	
	ВнешняяОбработка = Неопределено;
	
	Если ДиалогФайла.Выбрать() Тогда
		
		ПолноеИмяФайлаОбработки = ДиалогФайла.ПолноеИмяФайла;
		
		Попытка
			
			Если ВидОбработки = Перечисления.ВидыДополнительныхВнешнихОбработок.Отчет Тогда
				
				СообщениеОшибки = "Выбранный файл не является внешним отчетом.
								   |Либо, данный отчет не предназначена для
								   |запуска в этой конфигурации.";
				
				ВнешняяОбработка = ВнешниеОтчеты.Создать(ПолноеИмяФайлаОбработки);
				
			Иначе
				
				СообщениеОшибки = "Выбранный файл не является внешней обработкой.
								   |Либо, данная обработка не предназначена для
								   |запуска в этой конфигурации.";
				
				ВнешняяОбработка = ВнешниеОбработки.Создать(ПолноеИмяФайлаОбработки);
				
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(Наименование) Тогда
				Наименование = ВнешняяОбработка.Метаданные().Синоним;
			КонецЕсли;
			
		Исключение
			
			Сообщить(ОписаниеОшибки());
			Предупреждение(СообщениеОшибки);
			
			ПолноеИмяФайлаОбработки = "";
			
			Возврат Неопределено;
			
		КонецПопытки;
		
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
	Файл = Новый Файл(ДиалогФайла.ПолноеИмяФайла);
	
	КомментарийКФайлу = Файл.Имя + Символы.ПС + "размер:" + Файл.Размер()+" байт; изменен:" + Файл.ПолучитьВремяИзменения() + "; сохранен в ИБ:" + ТекущаяДата();
	
	СтруктураВозврата = Новый Структура("КомментарийКФайлу,ПолноеИмяФайлаОбработки,ИмяФайлаОбработки,ВнешняяОбработка", КомментарийКФайлу, ПолноеИмяФайлаОбработки, Файл.Имя, ВнешняяОбработка);
	
	ЭлементыФормы.ВидОбработки.ТолькоПросмотр = Истина;
	
	Возврат СтруктураВозврата;
	
КонецФункции // ВыбратьФайл()

Процедура КоманднаяПанельФайлаИсточникаЗаменитьФайл(Элемент)
	
	ЗначениеВозврата = ВыбратьФайл();
	Если ЗначениеВозврата = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИмяФайлаВнешнейОбработки   = ЗначениеВозврата.ПолноеИмяФайлаОбработки;
	
	Если ЗначениеВозврата.ВнешняяОбработка.Метаданные().Макеты.Найти("Параметры_Авторегистрации")<>Неопределено Тогда
		Макет = ЗначениеВозврата.ВнешняяОбработка.ПолучитьМакет("Параметры_Авторегистрации");
		ТаблицаПринадлежности = Новый ТаблицаЗначений;
		ТаблицаПринадлежности.Колонки.Добавить("СсылкаОбъекта");
		ТаблицаПринадлежности.Колонки.Добавить("ТабличнаяЧастьИмя");
		Для индекс = 1 по Макет.ВысотаТаблицы Цикл
			Попытка
				ВидОбъектаСтр = Макет.Область(индекс, 1, индекс, 1).Текст;
				ИмяТЧ         = ?(ВидОбработки = Перечисления.ВидыДополнительныхВнешнихОбработок.ЗаполнениеТабличныхЧастей,Макет.Область(индекс, 2, индекс, 2).Текст,"");
				ЕСли Лев(ВидОбъектаСтр, Найти(ВидОбъектаСтр, ".")-1) = "Документы" Тогда
					Попытка
						СсылкаНаОбъект = Документы[Сред(ВидОбъектаСтр, Найти(ВидОбъектаСтр, ".")+1)].ПустаяСсылка();
						СтрокаТаблицыПринадлежности = ТаблицаПринадлежности.Добавить();
						СтрокаТаблицыПринадлежности.СсылкаОбъекта     = СсылкаНаОбъект;
						СтрокаТаблицыПринадлежности.ТабличнаяЧастьИмя = ИмяТЧ;
					Исключение
					КонецПопытки;
				ИначеЕсли Лев(ВидОбъектаСтр, Найти(ВидОбъектаСтр, ".")-1)  = "Справочники" Тогда
					Попытка
						СсылкаНаОбъект = Справочники[Сред(ВидОбъектаСтр, Найти(ВидОбъектаСтр, ".")+1)].ПустаяСсылка();
						СтрокаТаблицыПринадлежности = ТаблицаПринадлежности.Добавить();
						СтрокаТаблицыПринадлежности.СсылкаОбъекта     = СсылкаНаОбъект;
						СтрокаТаблицыПринадлежности.ТабличнаяЧастьИмя = ИмяТЧ;
					Исключение
					КонецПопытки;
				КонецЕсли;
			Исключение
			КонецПопытки;
		КонецЦикла;
		Если ТаблицаПринадлежности.Количество() > 0 Тогда
			Ответ = Вопрос("Указанная внешняя печатная форма содержит параметры авторегистрации. Использовать их при регистрации?", РежимДиалогаВопрос.ДаНет);
			Если Ответ = КодВозвратаДиалога.Да Тогда
				Для Каждого СтрокаТаблицыПринадлежности Из ТаблицаПринадлежности Цикл
					Если Принадлежность.НайтиСтроки(Новый Структура("СсылкаОбъекта,ТабличнаяЧастьИмя", СтрокаТаблицыПринадлежности.СсылкаОбъекта, СтрокаТаблицыПринадлежности.ТабличнаяЧастьИмя)).Количество() = 0 Тогда
						НоваяСтрока = Принадлежность.Добавить();
						НоваяСтрока.СсылкаОбъекта = СтрокаТаблицыПринадлежности.СсылкаОбъекта;
						МетаданныеОбъекта = СтрокаТаблицыПринадлежности.СсылкаОбъекта.Метаданные();
						Если Метаданные.Документы.Содержит(МетаданныеОбъекта) Тогда
							НоваяСтрока.ПредставлениеОбъекта = "Документ """ + ?(МетаданныеОбъекта.Синоним = "", МетаданныеОбъекта.Имя, МетаданныеОбъекта.Синоним) + """";
						ИначеЕсли Метаданные.Справочники.Содержит(МетаданныеОбъекта) Тогда
							НоваяСтрока.ПредставлениеОбъекта = "Справочник """ + ?(МетаданныеОбъекта.Синоним = "", МетаданныеОбъекта.Имя, МетаданныеОбъекта.Синоним) + """";
						КонецЕсли;
						НоваяСтрока.ТабличнаяЧастьИмя = СтрокаТаблицыПринадлежности.ТабличнаяЧастьИмя;
						НайденнаяТЧ = МетаданныеОбъекта.ТабличныеЧасти.Найти(СтрокаТаблицыПринадлежности.ТабличнаяЧастьИмя);
						Если НайденнаяТЧ = Неопределено Тогда
							НоваяСтрока.ТабличнаяЧастьПредставление = НоваяСтрока.ТабличнаяЧастьИмя;
						Иначе
							НоваяСтрока.ТабличнаяЧастьПредставление = НайденнаяТЧ.Синоним;
						КонецЕсли; 
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЕСли;
	ХранилищеВнешнейОбработки = Новый ХранилищеЗначения(Новый ДвоичныеДанные(ИмяФайлаВнешнейОбработки));
	
	
	КомментарийКФайлуИсточнику = "Исходный файл: " + ЗначениеВозврата.КомментарийКФайлу;
	
	ЭлементыФормы.КомментарийКФайлуИсточнику.ЦветТекста = ЦветаСтиля.ЦветТекстаФормы;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ДанныеХранилища = ХранилищеВнешнейОбработки.Получить();
	
	Если Не ВидОбработки = Перечисления.ВидыДополнительныхВнешнихОбработок.ПечатнаяФорма и ДанныеХранилища = Неопределено Тогда
		
		КомментарийКФайлуИсточнику = "Файл внешней обработки не выбран";

	КонецЕсли;
	
	ЭлементыФормы.ВидОбработки.ТолькоПросмотр = Не ВидОбработки.Пустая();
	
	мПредыдущийВидОбработки = ВидОбработки;
	ОбновитьДоступностьПринадлежности();
	
	МеханизмНумерацииОбъектов.ДобавитьВМенюДействияКнопкуРедактированияКода(ЭлементыФормы.ДействияФормы.Кнопки.Подменю);
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Код);
	
КонецПроцедуры

Процедура ОбновитьДоступностьПринадлежности()
	
	Если ВидОбработки = Перечисления.ВидыДополнительныхВнешнихОбработок.ПечатнаяФорма Тогда
		Заголовок = "Регистрация внешней печатной формы";
	ИначеЕсли ВидОбработки = Перечисления.ВидыДополнительныхВнешнихОбработок.ЗаполнениеТабличныхЧастей Тогда
		Заголовок = "Регистрация внешней обработки заполнения табличных частей";
	ИначеЕсли ВидОбработки = Перечисления.ВидыДополнительныхВнешнихОбработок.Обработка Тогда
		Заголовок = "Регистрация внешней обработки";
	ИначеЕсли ВидОбработки = Перечисления.ВидыДополнительныхВнешнихОбработок.Отчет Тогда
		Заголовок = "Регистрация внешнего отчета";
	КонецЕсли;
	
	Если ВидОбработки = Перечисления.ВидыДополнительныхВнешнихОбработок.Обработка ИЛИ ВидОбработки = Перечисления.ВидыДополнительныхВнешнихОбработок.Отчет ИЛИ ВидОбработки.Пустая() Тогда
		
		Если Не Принадлежность.Количество() = 0  Тогда
			Принадлежность.Очистить();
		КонецЕсли;
		
		ЭлементыФормы.КоманднаяПанельОбъектов.Доступность = Ложь;
		ЭлементыФормы.РамкаГруппыПринадлежность.Доступность = Ложь;
		ЭлементыФормы.Панель.Доступность = Ложь;
		ЭлементыФормы.Принадлежность.Доступность = Ложь;
		
	Иначе
		
		ЭлементыФормы.КоманднаяПанельОбъектов.Доступность = Истина;
		ЭлементыФормы.РамкаГруппыПринадлежность.Доступность = Истина;
		ЭлементыФормы.Панель.Доступность = Истина;
		ЭлементыФормы.Принадлежность.Доступность = Истина;
		
		Если ВидОбработки = Перечисления.ВидыДополнительныхВнешнихОбработок.ПечатнаяФорма Тогда
			ЭлементыФормы.РамкаГруппыПринадлежность.Заголовок = "Принадлежность печатной формы";
		Иначе
			ЭлементыФормы.РамкаГруппыПринадлежность.Заголовок = "Принадлежность обработки по заполнению табличных частей";
		КонецЕсли;
		
	КонецЕсли;
	
	ЭлементыФормы.Принадлежность.Колонки.ТабличнаяЧасть.Видимость                 = (ВидОбработки = Перечисления.ВидыДополнительныхВнешнихОбработок.ЗаполнениеТабличныхЧастей);
	
	ЭтоВидОбработкиПечатнойФормы = ВидОбработки = Перечисления.ВидыДополнительныхВнешнихОбработок.ПечатнаяФорма;
	ЭтоВидОбработкиЗаполнениеТЧ  = ВидОбработки = Перечисления.ВидыДополнительныхВнешнихОбработок.ЗаполнениеТабличныхЧастей;
	
	ЭлементыФормы.Принадлежность.Колонки.ПредставлениеКнопки.Видимость            = ЭтоВидОбработкиЗаполнениеТЧ ИЛИ ЭтоВидОбработкиПечатнойФормы;
	ЭлементыФормы.Принадлежность.Колонки.ПредставлениеОтбораПостроителя.Видимость = ЭтоВидОбработкиПечатнойФормы;
	ЭлементыФормы.Принадлежность.Колонки.ЗаменяемаяПечатнаяФорма.Видимость        = ЭтоВидОбработкиПечатнойФормы;
	ЭлементыФормы.Принадлежность.Колонки.ИмяФайлаПечатнойФормы.Видимость          = ВидОбработки = Перечисления.ВидыДополнительныхВнешнихОбработок.ПечатнаяФорма;
	
КонецПроцедуры // () 

Процедура ВидОбработкиПриИзменении(Элемент)
	
	Если Не Принадлежность.Количество() = 0 Тогда
		Если (ВидОбработки = Перечисления.ВидыДополнительныхВнешнихОбработок.Обработка) ИЛИ ВидОбработки = Перечисления.ВидыДополнительныхВнешнихОбработок.Отчет Тогда
			Если Вопрос("Табличная часть будет очищена", РежимДиалогаВопрос.ОКОтмена) = КодВозвратаДиалога.Отмена Тогда
				ВидОбработки =  мПредыдущийВидОбработки;
				Возврат;
			КонецЕсли;
		ИначеЕсли (ВидОбработки = Перечисления.ВидыДополнительныхВнешнихОбработок.ПечатнаяФорма)И мПредыдущийВидОбработки = Перечисления.ВидыДополнительныхВнешнихОбработок.ЗаполнениеТабличныхЧастей Тогда
			Если Вопрос("Данные о табличных частях будут утеряны", РежимДиалогаВопрос.ОКОтмена) = КодВозвратаДиалога.Отмена Тогда
				ВидОбработки =  мПредыдущийВидОбработки;
				Возврат;
			Иначе
				Принадлежность.Свернуть("ПредставлениеОбъекта,СсылкаОбъекта",);
			КонецЕсли;
		КонецЕсли; 
	КонецЕсли;
	
	ОбновитьДоступностьПринадлежности();
	
КонецПроцедуры

Процедура ПринадлежностьПредставлениеОбъектаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ОткрытьФормуВыбораПринадлежности(ЭлементыФормы.Принадлежность, ЭлементыФормы.Принадлежность.ТекущиеДанные.СсылкаОбъекта);
	
КонецПроцедуры

Функция СтуктураЗаполненныхТЧ(ТекущиеДанные)
	Массив = Принадлежность.НайтиСтроки(Новый Структура("СсылкаОбъекта",ТекущиеДанные.СсылкаОбъекта));
	Результат = Новый Соответствие;
	Для Каждого СтрокаПринадлежности ИЗ Массив Цикл
		Если Не СтрокаПринадлежности = ТекущиеДанные Тогда
			Результат.Вставить(СтрокаПринадлежности.ТабличнаяЧастьИмя, Истина);
		КонецЕсли;
	КонецЦикла;
	Возврат Результат;
КонецФункции

Процедура ПринадлежностьТабличнаяЧастьНачалоВыбора(Элемент, СтандартнаяОбработка)
	ТекущиеДанные = ЭлементыФормы.Принадлежность.ТекущиеДанные;
	Форма = ПолучитьФорму("ФормаВыбораТЧПринадлежности", ЭлементыФормы.Принадлежность);
	Форма.РежимВыбора = Истина;
	Если  ТекущиеДанные.СсылкаОбъекта  = Неопределено Тогда
		Предупреждение("Не выбрана принадлежность к объекту");
		Возврат;
	КонецЕсли; 
	Форма.СсылкаОбъекта = ТекущиеДанные.СсылкаОбъекта;
	Форма.УжеВыбранные  = СтуктураЗаполненныхТЧ(ТекущиеДанные);
	мТекущаяСтрока = ЭлементыФормы.Принадлежность.ТекущаяСтрока;
	Если Форма.Открыта() Тогда
		Форма.СписокТабличныхЧастей.Очистить();
	КонецЕсли;
	Форма.Открыть();
КонецПроцедуры

Процедура КоманднаяПанельФайлаИсточникаСохранитьФайлНаДиск(Элемент)
	
	ДиалогФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	
	Если ВидОбработки = Перечисления.ВидыДополнительныхВнешнихОбработок.Отчет Тогда
		
		ДиалогФайла.Фильтр = "Внешний отчет(*.erf)|*.erf";
		
	Иначе
		ДиалогФайла.Фильтр = "Внешняя обработка(*.epf)|*.epf";
	КонецЕсли;
	
	ДвоичныеДанные = ХранилищеВнешнейОбработки.Получить();
	
	Если ДвоичныеДанные = Неопределено Тогда
		Предупреждение("Внешний файл отсутствует в хранилище"); 
		Возврат;
	КонецЕсли; 
	
	ДиалогФайла.ПолноеИмяФайла = РаботаСФайлами.УдалитьЗапрещенныеСимволыИмени(Наименование);
	Если ДиалогФайла.Выбрать() Тогда
		ИмяФайла = ДиалогФайла.ПолноеИмяФайла;
		Попытка
			ДвоичныеДанные.Записать(ИмяФайла);
		Исключение
			Предупреждение("Внешний файл не сохранен
			|"+ОписаниеОшибки()); 
		КонецПопытки; 
	КонецЕсли;
КонецПроцедуры

Процедура РедактироватьДополнительныеУсловия()

	Если ЭлементыФормы.Принадлежность.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(ЭлементыФормы.Принадлежность.ТекущиеДанные.СсылкаОбъекта)) Тогда
		МетаданныеОбъекта = ЭлементыФормы.Принадлежность.ТекущиеДанные.СсылкаОбъекта.Метаданные();
		ИмяТаблицы     = "Документ." + МетаданныеОбъекта.Имя;
		СинонимТаблицы = МетаданныеОбъекта.Синоним;
	ИначеЕсли Справочники.ТипВсеСсылки().СодержитТип(ТипЗнч(ЭлементыФормы.Принадлежность.ТекущиеДанные.СсылкаОбъекта)) Тогда
		МетаданныеОбъекта = ЭлементыФормы.Принадлежность.ТекущиеДанные.СсылкаОбъекта.Метаданные();
		ИмяТаблицы     = "Справочник." + МетаданныеОбъекта.Имя;
		СинонимТаблицы = МетаданныеОбъекта.Синоним;
	Иначе
		Сообщить("Указан неверный тип объекта в текущей строке или объект не выбран!");
		Возврат;
	КонецЕсли;
	
	ПостроительОтчета = УниверсальныеМеханизмы.ИнициализироватьПостроительДопПечатныхФорм(ИмяТаблицы, СинонимТаблицы);
	
	ЗначениеХранилища = ЭлементыФормы.Принадлежность.ТекущиеДанные.НастройкиПостроителяДляОтбора.Получить();
	Если ТипЗнч(ЗначениеХранилища) = Тип("НастройкиПостроителяОтчета") Тогда
		ПостроительОтчета.УстановитьНастройки(ЗначениеХранилища, Истина, Ложь, Ложь, Ложь, Ложь);
	КонецЕсли;
	
	ФормаНастройки = ПолучитьФорму("ФормаНастройкиПостроителя");
	ФормаНастройки.Построитель = ПостроительОтчета;
	ЗначениеВозврата = ФормаНастройки.ОткрытьМодально();
	
	Если ЗначениеВозврата <> Неопределено Тогда
		Если ТипЗнч(ЗначениеВозврата) = Тип("ПостроительОтчета") Тогда
			ЭлементыФормы.Принадлежность.ТекущиеДанные.НастройкиПостроителяДляОтбора = Новый ХранилищеЗначения(ЗначениеВозврата.ПолучитьНастройки(Истина, Ложь, Ложь, Ложь, Ложь));
			ЭлементыФормы.Принадлежность.ТекущиеДанные.ПредставлениеОтбораПостроителя = Строка(ЗначениеВозврата.Отбор);
		Иначе
			ЭлементыФормы.Принадлежность.ТекущиеДанные.НастройкиПостроителяДляОтбора = Новый ХранилищеЗначения(Неопределено);
			ЭлементыФормы.Принадлежность.ТекущиеДанные.ПредставлениеОтбораПостроителя = "";
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПринадлежностьИмяФайлаПечатнойФормыНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ЗначениеВозврата = ВыбратьФайл();
	
	Если ЗначениеВозврата = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элемент.Значение = ЗначениеВозврата.КомментарийКФайлу;
	ЭлементыФормы.Принадлежность.ТекущиеДанные.ХранилищеВнешнейОбработки = Новый ХранилищеЗначения(Новый ДвоичныеДанные(ЗначениеВозврата.ПолноеИмяФайлаОбработки));
	
КонецПроцедуры

Процедура ПринадлежностьИмяФайлаПечатнойФормыОчистка(Элемент, СтандартнаяОбработка)
	
	ЭлементыФормы.Принадлежность.ТекущиеДанные.ХранилищеВнешнейОбработки = Новый ХранилищеЗначения(Неопределено);
	
КонецПроцедуры

Процедура ПринадлежностьПредставлениеОтбораПостроителяНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	РедактироватьДополнительныеУсловия();
	
КонецПроцедуры

Процедура ПринадлежностьПредставлениеОтбораПостроителяОчистка(Элемент, СтандартнаяОбработка)
	
	ЭлементыФормы.Принадлежность.ТекущиеДанные.НастройкиПостроителяДляОтбора = Новый ХранилищеЗначения(Неопределено);
	
КонецПроцедуры

Процедура ПринадлежностьПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ЗаполнитьСписокВыбораПодменяемыхФорм();
	
КонецПроцедуры

Процедура ПринадлежностьПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Для каждого Оформление Из ОформленияСтрок Цикл
		
		Если Оформление.ДанныеСтроки.СсылкаОбъекта <> Неопределено И (ВидОбработки = Перечисления.ВидыДополнительныхВнешнихОбработок.ПечатнаяФорма) Тогда
			СписокВыбора = ПолучитьСписокПечатныхФормОбъектов(Оформление.ДанныеСтроки.СсылкаОбъекта);
			НайденныйЭлемент = СписокВыбора.НайтиПоЗначению(Оформление.ДанныеСтроки.ЗаменяемаяПечатнаяФорма);
			Если НайденныйЭлемент <> Неопределено Тогда
				Оформление.Ячейки.ЗаменяемаяПечатнаяФорма.УстановитьТекст(НайденныйЭлемент.Представление);
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// <Описание функции>
//
// Параметры
//  <Параметр1>  – <Тип.Вид> – <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  – <Тип.Вид> – <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   – <описание возвращаемого значения>
//
Функция ПолучитьСписокПечатныхФормОбъектов(ОбъектСсылка)

	СписокФорм = мСпискиПечатныхФормОбъектов.Получить(ОбъектСсылка);
	
	Если ТипЗнч(СписокФорм) = Тип("СписокЗначений") Тогда
		Возврат СписокФорм.Скопировать();
	Иначе
		СписокФорм = Новый СписокЗначений;
	КонецЕсли;
	
	Объект = Неопределено;
	
	Если Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(ОбъектСсылка)) Тогда
		Объект = Документы[ОбъектСсылка.Метаданные().Имя].СоздатьДокумент();
	ИначеЕсли Справочники.ТипВсеСсылки().СодержитТип(ТипЗнч(ОбъектСсылка)) Тогда
		Объект = Справочники[ОбъектСсылка.Метаданные().Имя].СоздатьЭлемент();
	КонецЕсли; 
	
	Если Объект <> Неопределено Тогда
		
		Попытка
			
			СтруктураПечатныхФорм = Объект.ПолучитьСтруктуруПечатныхФорм();
			
		Исключение
			
			Возврат СписокФорм;
			
		КонецПопытки;
		
		Если ТипЗНЧ(СтруктураПечатныхФорм) = Тип("Структура") Тогда
			
			Для каждого КлючИЗначение Из СтруктураПечатныхФорм Цикл
				СписокФорм.Добавить(КлючИЗначение.Ключ, КлючИЗначение.Значение);
			КонецЦикла;
			
		КонецЕсли;
		
		мСпискиПечатныхФормОбъектов.Вставить(ОбъектСсылка, СписокФорм);
		
	КонецЕсли;
	
	Возврат СписокФорм;
	
КонецФункции // ()

Процедура КоманднаяПанельФайлаИсточникаУдалитьФайл(Кнопка)
	
	ХранилищеВнешнейОбработки = Новый ХранилищеЗначения(Неопределено);
	КомментарийКФайлуИсточнику = "Файл внешней обработки не выбран";
	
КонецПроцедуры

Процедура ОбновлениеОтображения()
	
	Если ВыбраныФайлыВнешнейОбработки() Тогда
		ЭлементыФормы.КомментарийКФайлуИсточнику.ЦветТекста = ЦветаСтиля.ЦветТекстаФормы;
	Иначе
		ЭлементыФормы.КомментарийКФайлуИсточнику.ЦветТекста = ЦветаСтиля.ТекстПредупреждающейНадписи;
	КонецЕсли; 
	
	
КонецПроцедуры

Функция ВыбраныФайлыВнешнейОбработки()

	Если КомментарийКФайлуИсточнику = "Файл внешней обработки не выбран" Тогда
		Если Принадлежность.Количество() = 0 или Не Принадлежность.Найти("","ИмяФайлаПечатнойФормы") = Неопределено Тогда
			Возврат Ложь;
		КонецЕсли; 
	КонецЕсли;
	Возврат Истина;

КонецФункции // ()

Процедура КоманднаяПанельФормыПрава(Кнопка)
	
	Если НЕ РаботаСДиалогами.ЗаписатьНовыйОбъектВФорме(ЭтаФорма) Тогда
		Возврат;
	КонецЕсли;
	
	НастройкаПравДоступа.РедактироватьПраваДоступа(Ссылка);
	
КонецПроцедуры

Процедура ПринадлежностьПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если Не ОтменаРедактирования Тогда
		ЭлементыФормы.ВидОбработки.ТолькоПросмотр = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельОбъектовЗаменитьФайл(Кнопка)
	
	ТекущиеДанные = ЭлементыФормы.Принадлежность.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	ЗначениеВозврата = ВыбратьФайл();
	
	Если ЗначениеВозврата = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.ИмяФайлаПечатнойФормы = ЗначениеВозврата.КомментарийКФайлу;
	ХранилищеВнешнейОбработки = Новый ХранилищеЗначения(Новый ДвоичныеДанные(ЗначениеВозврата.ПолноеИмяФайлаОбработки));
	ЭлементыФормы.Принадлежность.ТекущиеДанные.ХранилищеВнешнейОбработки = ХранилищеВнешнейОбработки;
	
КонецПроцедуры

Процедура КоманднаяПанельОбъектовСохранитьФайлНаДиск(Кнопка)
	
	ТекущиеДанные = ЭлементыФормы.Принадлежность.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	ДиалогФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогФайла.Фильтр = "Внешняя обработка(*.epf)|*.epf";
	ДвоичныеДанные = ТекущиеДанные.ХранилищеВнешнейОбработки.Получить();
	Если ДвоичныеДанные = Неопределено Тогда
		Предупреждение("Внешний файл отсутствует в хранилище"); 
		Возврат;
	КонецЕсли; 
	
	ДиалогФайла.ПолноеИмяФайла = РаботаСФайлами.УдалитьЗапрещенныеСимволыИмени(Наименование);
	Если ДиалогФайла.Выбрать() Тогда
		ИмяФайла = ДиалогФайла.ПолноеИмяФайла;
		Попытка
			ДвоичныеДанные.Записать(ИмяФайла);
		Исключение
			Предупреждение("Внешний файл не сохранен
			|"+ОписаниеОшибки()); 
		КонецПопытки; 
	КонецЕсли;
	
КонецПроцедуры

Процедура ПринадлежностьТабличнаяЧастьОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = ЭлементыФормы.Принадлежность.ТекущиеДанные;
	ТекущиеДанные.ТабличнаяЧастьИмя           = "";
	ТекущиеДанные.ТабличнаяЧастьПредставление = "";
	
	
КонецПроцедуры

// Процедура обработки события "ПриВыводеСтроки" элемента формы Принадлежность.
// Устанавливает значение в поле ПредставлениеНастроекОбработки.
//
Процедура ПринадлежностьПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	
	Если ПустаяСтрока(ДанныеСтроки.ПредставлениеНастроекОбработки) Тогда
		
		ДополнительныеПараметрыОбработки = ДанныеСтроки.ДополнительныеПараметрыОбработки;
		
		Если ДополнительныеПараметрыОбработки.Получить() = Неопределено Тогда
			ДанныеСтроки.ПредставлениеНастроекОбработки = "<Задать параметры>";
		Иначе
			ДанныеСтроки.ПредставлениеНастроекОбработки = "<Изменить параметры>";
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ПринадлежностьПриВыводеСтроки()

// Процедура обработки события "НачалоВыбора" колонки ПредставлениеНастроекОбработки элемента формы Принадлежность.
// Открывает форму редактирования параметров обработки.
// Устанавливает значение в поле ПредставлениеНастроекОбработки.
//
Процедура ПринадлежностьПредставлениеНастроекОбработкиНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	// Если новый объект, записать перед установкой параметров
	Если ЭтоНовый() Тогда
		
		Ответ = Вопрос("Перед установкой параметров необходимо записать объект. Записать?", РежимДиалогаВопрос.ДаНет);
		
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
		
		Если НЕ ЭтаФорма.ЗаписатьВФорме() Тогда
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	ТекущиеДанные = ЭлементыФормы.Принадлежность.ТекущиеДанные;
	
	// Получить форму редактирования параметров
	ФормаПараметров = Ссылка.ПолучитьФорму("ФормаПараметровОбработки");
	
	// Передать параметры форме
	ФормаПараметров.ХранилищеПараметрыОбработки = ТекущиеДанные.ДополнительныеПараметрыОбработки;
	
	// Получить измененные параметры
	Параметры = ФормаПараметров.ОткрытьМодально();
	
	// Если параметры изменились, принять изменения
	Если Параметры <> Неопределено Тогда
		
		Если Параметры.Получить().Количество() > 0 Тогда
			ТекущиеДанные.ДополнительныеПараметрыОбработки = Параметры;
			ТекущиеДанные.ПредставлениеНастроекОбработки   = "<Изменить параметры>";
		
		Иначе
			ТекущиеДанные.ДополнительныеПараметрыОбработки = Неопределено;
			ТекущиеДанные.ПредставлениеНастроекОбработки   = "<Задать параметры>";
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ПринадлежностьПредставлениеНастроекОбработкиНачалоВыбора()

// Процедура обработки события "Очистка" колонки ДополнительныеПараметрыОбработки элемента формы Принадлежность.
// Очищает значение поля ДополнительныеПараметрыОбработки.
// Устанавливает значение в поле ПредставлениеНастроекОбработки.
//
Процедура ПринадлежностьПредставлениеНастроекОбработкиОчистка(Элемент, СтандартнаяОбработка)
	
	ТекущиеДанные = ЭлементыФормы.Принадлежность.ТекущиеДанные;
	
	// Если структура параметров заполнена, запросить подтверждение на очистку
	Если ТекущиеДанные.ДополнительныеПараметрыОбработки.Получить() <> Неопределено Тогда
		
		Ответ = Вопрос("Параметры внешней обработки будут очищены. Продолжить?", РежимДиалогаВопрос.ДаНет);
		
		Если Ответ = КодВозвратаДиалога.Да Тогда
			
			ТекущиеДанные.ДополнительныеПараметрыОбработки = Неопределено;
			ТекущиеДанные.ПредставлениеНастроекОбработки   = "<Задать параметры>";
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ПринадлежностьПредставлениеНастроекОбработкиОчистка()

// Процедура обработки действия "Подбор" элемента формы КоманднаяПанельОбъектов.
// Открывает форму выбора принадлежности в режиме подбора.
//
Процедура КоманднаяПанельОбъектовПодбор(Кнопка)
	
	ОткрытьФормуВыбораПринадлежности(ЭлементыФормы.Принадлежность, , Истина);
	
КонецПроцедуры //КоманднаяПанельОбъектовПодбор()

// Процедура обработки действия "Очистить" элемента формы КоманднаяПанельОбъектов.
// Очищает табличную часть Принадлежность.
//
Процедура КоманднаяПанельОбъектовОчистить(Кнопка)
	
	Ответ = Вопрос("Таблица принадлежности будет очищена. Продолжить?", РежимДиалогаВопрос.ДаНет);
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Принадлежность.Очистить();
	КонецЕсли;
	
КонецПроцедуры // КоманднаяПанельОбъектовОчистить()

Процедура ДействияФормыРедактироватьКод(Кнопка)
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Код);
КонецПроцедуры
                           


мСпискиПечатныхФормОбъектов = Новый Соответствие;

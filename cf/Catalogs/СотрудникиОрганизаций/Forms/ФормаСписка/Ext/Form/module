////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем мЗаголовокФормы;

Перем мОбработкаТайпинга;
Перем мТекстТайпинга;
Перем мПоследнееЗначениеЭлементаТайпинга;

Перем мЖирныйШрифт;
Перем мОтображенныеОрганизации;
Перем мОтображенныеГруппы;

Перем мИспользоватьИерархию;

// Переменная соответствие названия действия - действию
// Для формирования динамического меню
Перем мСтруктураСоответствияДействий;

Перем мМассивВыбранныхЗначений Экспорт;

Перем мКодПорядка;

// Переменная для отбора из вне, например из формы контрактов

Перем мИмяФормыДляСохраненияНастроек;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Процедура УстановитьОтборПоОрганизации()
	
	ЗначениеИзСписка = ЭлементыФормы.ОтборПоОрганизации.Значение;
	ИспользоватьОтбор = ЗначениеЗаполнено(ЗначениеИзСписка);
	Если ИспользоватьОтбор Тогда
		СправочникСписок.Отбор.Организация.ВидСравнения	= ВидСравнения.Равно;
		СправочникСписок.Отбор.Организация.Значение		= ЗначениеИзСписка;
		
		Если ЭлементыФормы.ПанельРежимОтображенияСписка.ТекущаяСтраница = ЭлементыФормы.ПанельРежимОтображенияСписка.Страницы.Подразделения Тогда
			// В форме отбор устанавливается только по головным организациям
			// В списке подразделений кроме головных, есть еще и обособленные подразделения
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("ГоловнаяОрганизация",	ЗначениеИзСписка);
			Запрос.Текст =
			"ВЫБРАТЬ
			|	Организации.Ссылка
			|ИЗ
			|	Справочник.Организации КАК Организации
			|ГДЕ
			|	(Организации.Ссылка = &ГоловнаяОрганизация
			|			ИЛИ Организации.ГоловнаяОрганизация = &ГоловнаяОрганизация)";
			СписокОрганизаций = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
			
			ПодразделенияОрганизаций.Отбор.Владелец.ВидСравнения	= ВидСравнения.ВСписке;
			ПодразделенияОрганизаций.Отбор.Владелец.Значение.ЗагрузитьЗначения(СписокОрганизаций);
		КонецЕсли;
	КонецЕсли;
	СправочникСписок.Отбор.Организация.Использование = ИспользоватьОтбор;
	
	Если ЭлементыФормы.ПанельРежимОтображенияСписка.ТекущаяСтраница = ЭлементыФормы.ПанельРежимОтображенияСписка.Страницы.Подразделения Тогда
		ПодразделенияОрганизаций.Отбор.Владелец.Использование		= Ложь;
		Если ИспользоватьОтбор Тогда
			ПодразделенияОрганизаций.Отбор.Владелец.Использование	= Истина;
		КонецЕсли;		
		ЭлементыФормы.ПодразделенияОрганизаций.ТекущаяСтрока = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
		УстановитьОтборПоПодразделению(НЕ ИспользоватьОтбор);
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьОтборПоПодразделению(СброситьОтбор = Ложь)
	
	Элемент = ЭлементыФормы.ПодразделенияОрганизаций;
	
	ДанныеСтроки = Элемент.ТекущиеДанные;
	Если ДанныеСтроки = Неопределено ИЛИ СброситьОтбор Тогда
		Если СправочникСписок.Отбор.ТекущееПодразделениеОрганизации.Использование Тогда
			СправочникСписок.Отбор.ТекущееПодразделениеОрганизации.Использование	= Ложь;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОтборПоОрганизации) Тогда
			Если СправочникСписок.Отбор.Организация.Использование Тогда
				СправочникСписок.Отбор.Организация.Использование	= Ложь;
			КонецЕсли;
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	Если Элемент.ТекущаяКолонка.Имя <> "Организация" Тогда
		ТекущийОтбор = СправочникСписок.Отбор.ТекущееПодразделениеОрганизации;
		ТекущийОтбор.Значение		= ДанныеСтроки.Ссылка;
		ТекущийОтбор.Использование	= Истина;
		ТекущийОтбор = СправочникСписок.Отбор.Организация;
		Если ТекущийОтбор.Значение <> ДанныеСтроки.Владелец Тогда
			ТекущийОтбор.Значение		= ?(НЕ ЗначениеЗаполнено(ДанныеСтроки.Владелец.ГоловнаяОрганизация),ДанныеСтроки.Владелец,ДанныеСтроки.Владелец.ГоловнаяОрганизация);
			ТекущийОтбор.Использование	= Истина;
		КонецЕсли;
	Иначе
		ТекущийОтбор = СправочникСписок.Отбор.Организация;
		СправочникСписок.Отбор.ТекущееПодразделениеОрганизации.Использование	= Ложь;
		ТекущийОтбор.Значение		= ?(НЕ ЗначениеЗаполнено(ДанныеСтроки.Владелец.ГоловнаяОрганизация),ДанныеСтроки.Владелец,ДанныеСтроки.Владелец.ГоловнаяОрганизация);
		ТекущийОтбор.Использование	= Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьРежимОтображенияСписка()
	
	Если Не мИспользоватьИерархию Тогда
		ЭлементыФормы.СправочникСписок.ТекущийРодитель							= 0;
		СправочникСписок.Отбор.ТекущееПодразделениеОрганизации.Использование	= Ложь;
		ЭлементыФормы.СправочникСписок.ИерархическийПросмотр					= Ложь;
	Иначе
		Если ЭлементыФормы.ПолеРежимОтображенияСписка.Значение = "ПоГруппам" Тогда
			СправочникСписок.Отбор.ТекущееПодразделениеОрганизации.Использование	= Ложь;
			ЭлементыФормы.СправочникСписок.ИерархическийПросмотр					= Истина;
			ЭлементыФормы.ПанельРежимОтображенияСписка.ТекущаяСтраница	= ЭлементыФормы.ПанельРежимОтображенияСписка.Страницы.Группы;
			
			ДанныеСтроки = ЭлементыФормы.СправочникДерево.ТекущиеДанные;
			Если ДанныеСтроки <> Неопределено Тогда
				ЭлементыФормы.СправочникСписок.ТекущийРодитель = ДанныеСтроки.Ссылка;
			КонецЕсли;
			
		Иначе
			ЭлементыФормы.СправочникСписок.ТекущийРодитель	= 0;
			ЭлементыФормы.СправочникСписок.ИерархическийПросмотр					= Ложь;
			ЭлементыФормы.ПанельРежимОтображенияСписка.ТекущаяСтраница	= ЭлементыФормы.ПанельРежимОтображенияСписка.Страницы.Подразделения;
			
			УстановитьОтборПоОрганизации();
			УстановитьОтборПоПодразделению();
			
		КонецЕсли;
	КонецЕсли;
	
	мКодПорядка = ?(ЭлементыФормы.СправочникСписок.ИерархическийПросмотр, 1, 0);
	
КонецПроцедуры

Функция ПервоеПодразделение(Подразделение, Организация, НазваниеОрганизации)
	
	Если мОтображенныеОрганизации[Организация] <> Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПодразделенияОрганизаций.Ссылка,
	|	ПодразделенияОрганизаций.Владелец.Наименование КАК НазваниеОрганизации
	|ИЗ
	|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
	|ГДЕ
	|	ПодразделенияОрганизаций.Владелец = &Организация
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПодразделенияОрганизаций.Наименование ИЕРАРХИЯ";
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Выборка.Следующий();
	
	НазваниеОрганизации = Выборка.НазваниеОрганизации;
	
	мОтображенныеОрганизации[Организация] = Истина;
	
	Возврат Выборка.Ссылка = Подразделение;
	
КонецФункции

Процедура ПереключитьИерархию()
	
	ИзменитьВидимостьПанелиПоГоризонталиЛево(ЭтаФорма, мИспользоватьИерархию, ЭлементыФормы.ОсновнаяПанель, ЭлементыФормы.ПанельИерархическийПросмотр, ЭлементыФормы.РазделительИерархическийПросмотр);
	
	ЭлементыФормы.ДействияФормы.Кнопки.ИспользоватьИерархию.Пометка					= мИспользоватьИерархию;
	ЭлементыФормы.ДействияФормы.Кнопки.Подменю.Кнопки.ИспользоватьИерархию.Пометка	= мИспользоватьИерархию;
	
КонецПроцедуры

Процедура ИзменитьВидимостьПанелиПоГоризонталиЛево(Форма, ОтображатьПанель, ПраваяПанель, ЛеваяПанель, Разделитель) 
	
	Если ОтображатьПанель Тогда
		Если ЛеваяПанель.Свертка = РежимСверткиЭлементаУправления.Лево Тогда
			// установить привязку основной панели к разделителю
			ПраваяПанель.УстановитьПривязку(ГраницаЭлементаУправления.Лево, Разделитель, ГраницаЭлементаУправления.Право);
			
			// развернуть разделитель
			Разделитель.Свертка = РежимСверткиЭлементаУправления.Нет;
			
			// развернуть панель
			ЛеваяПанель.Свертка = РежимСверткиЭлементаУправления.Нет;
			
			// Переместим разделитель к левой панели
			Разделитель.Лево = ЛеваяПанель.Лево + ЛеваяПанель.Ширина;
			
			// восстановить привязки разделителя
			Разделитель.УстановитьПривязку(ГраницаЭлементаУправления.Право, Форма.Панель, ГраницаЭлементаУправления.Лево);
			Разделитель.УстановитьПривязку(ГраницаЭлементаУправления.Лево, Разделитель, ГраницаЭлементаУправления.Право);
			
			// установить привязку панели справки к разделителю
			ЛеваяПанель.УстановитьПривязку(ГраницаЭлементаУправления.Право, Разделитель, ГраницаЭлементаУправления.Лево);
			
			// Ширину определим от текущего размера формы, за минусом отступов по 8 слева и справа и шириной левой панели и разделителя
			ПраваяПанель.Ширина	= Форма.Ширина - ЛеваяПанель.Ширина - Разделитель.Ширина - 8 * 2;
			ПраваяПанель.Лево	= Разделитель.Лево + Разделитель.Ширина;
		КонецЕсли;
	Иначе
		Если ЛеваяПанель.Свертка = РежимСверткиЭлементаУправления.Нет Тогда
			ШиринаОсновнойПанели = ПраваяПанель.Ширина + Разделитель.Ширина + ЛеваяПанель.Ширина;
			
			// сбросить привязку панели к разделителю
			ЛеваяПанель.УстановитьПривязку(ГраницаЭлементаУправления.Право);
			
			// установить привязку разделителя к панели справки
			Разделитель.УстановитьПривязку(ГраницаЭлементаУправления.Лево, ЛеваяПанель, ГраницаЭлементаУправления.Право);
			Разделитель.УстановитьПривязку(ГраницаЭлементаУправления.Право, ЛеваяПанель, ГраницаЭлементаУправления.Право);
			
			// свернуть панель
			ЛеваяПанель.Свертка = РежимСверткиЭлементаУправления.Лево;
			// свернуть разделитель
			Разделитель.Свертка = РежимСверткиЭлементаУправления.Лево;
			
			ЛеваяПанель.УстановитьПривязку(ГраницаЭлементаУправления.Право, ЛеваяПанель, ГраницаЭлементаУправления.Лево);
			
			// установить привязку основной панели к форме
			ПраваяПанель.УстановитьПривязку(ГраницаЭлементаУправления.Лево, Форма.Панель, ГраницаЭлементаУправления.Лево);
			ПраваяПанель.Лево	= 8;
			ПраваяПанель.Ширина	= ШиринаОсновнойПанели;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПервыйСотрудник(Сотрудник, Группа)
	
	Если мОтображенныеГруппы[Группа] <> Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ПодразделенияМассив = Новый Массив;
	
	Запрос = Новый Запрос;
	
	СтрокаОтборов = "";
	
	Если ЭлементыФормы.СправочникСписок.ИерархическийПросмотр И ЗначениеЗаполнено(ЭлементыФормы.СправочникСписок.ТекущийРодитель) Тогда
		СтрокаОтборов = СтрокаОтборов + "И СотрудникиОрганизаций.Родитель В (&Родитель)";
		
		Запрос.УстановитьПараметр("Родитель",	ЭлементыФормы.СправочникСписок.ТекущийРодитель);
	КонецЕсли;
		
	Если СправочникСписок.Отбор.ТекущееПодразделениеОрганизации.Использование Тогда
		СтрокаОтборов = СтрокаОтборов + "И СотрудникиОрганизаций.ТекущееПодразделениеОрганизации В ИЕРАРХИИ (&Подразделение)";
		
		Запрос.УстановитьПараметр("Подразделение",	СправочникСписок.Отбор.ТекущееПодразделениеОрганизации.Значение);
	КонецЕсли;
	
	ОтборПоОрганизацииДляЗапроса = ОтборПоОрганизации;
	Если ЗначениеЗаполнено(ОтборПоОрганизацииДляЗапроса) Тогда
		Если ЭлементыФормы.ПанельРежимОтображенияСписка.ТекущаяСтраница = ЭлементыФормы.ПанельРежимОтображенияСписка.Страницы.Подразделения Тогда
			Элемент = ЭлементыФормы.ПодразделенияОрганизаций;
			ДанныеСтроки = Элемент.ТекущиеДанные;
			Если ДанныеСтроки <> Неопределено Тогда
				ОтборПоОрганизацииДляЗапроса = ДанныеСтроки.Владелец;
			КонецЕсли;		
		КонецЕсли;
	ИначеЕсли СправочникСписок.Отбор.Организация.Использование Тогда
		ОтборПоОрганизацииДляЗапроса = СправочникСписок.Отбор.Организация.Значение;		
	КонецЕсли;
		
	Если СправочникСписок.Порядок[мКодПорядка].Имя = "Наименование" Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	СотрудникиОрганизаций.Ссылка
		|ИЗ
		|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
		|ГДЕ
		|	СотрудникиОрганизаций.Наименование >= &Группа
		|	" + ?(НЕ ПустаяСтрока(СтрокаОтборов), СтрокаОтборов, "") + "
		|	" + ?(ЗначениеЗаполнено(ОтборПоОрганизацииДляЗапроса), " И СотрудникиОрганизаций.Организация = &ОтборПоОрганизацииДляЗапроса", "") + "
		|
		|УПОРЯДОЧИТЬ ПО
		|	СотрудникиОрганизаций.Наименование, СотрудникиОрганизаций.Ссылка";
		
	ИначеЕсли СправочникСписок.Порядок[мКодПорядка].Имя = "ДатаПриемаНаРаботу" Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	СотрудникиОрганизаций.Ссылка
		|ИЗ
		|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
		|ГДЕ
		|	НАЧАЛОПЕРИОДА(СотрудникиОрганизаций." + СправочникСписок.Порядок[мКодПорядка].Имя + ", МЕСЯЦ) = &Группа
		|	" + ?(НЕ ПустаяСтрока(СтрокаОтборов), СтрокаОтборов, "") + "
		|	" + ?(ЗначениеЗаполнено(ОтборПоОрганизацииДляЗапроса), " И СотрудникиОрганизаций.Организация = &ОтборПоОрганизацииДляЗапроса", "") + "
		|
		|УПОРЯДОЧИТЬ ПО
		|	СотрудникиОрганизаций." + СправочникСписок.Порядок[мКодПорядка].Имя + " УБЫВ,
		|	СотрудникиОрганизаций.Наименование, СотрудникиОрганизаций.Ссылка";
		
	Иначе
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	СотрудникиОрганизаций.Ссылка
		|ИЗ
		|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
		|ГДЕ
		|	СотрудникиОрганизаций." + СправочникСписок.Порядок[мКодПорядка].Имя + " = &Группа
		|	" + ?(НЕ ПустаяСтрока(СтрокаОтборов), СтрокаОтборов, "") + "
		|	" + ?(ЗначениеЗаполнено(ОтборПоОрганизацииДляЗапроса), " И СотрудникиОрганизаций.Организация = &ОтборПоОрганизацииДляЗапроса", "") + "
		|
		|УПОРЯДОЧИТЬ ПО
		|	СотрудникиОрганизаций." + СправочникСписок.Порядок[мКодПорядка].Имя + ",
		|	СотрудникиОрганизаций.Наименование, СотрудникиОрганизаций.Ссылка";
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Группа",							Группа);
	Запрос.УстановитьПараметр("ОтборПоОрганизацииДляЗапроса",					ОтборПоОрганизацииДляЗапроса);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	мОтображенныеГруппы[Группа] = Истина;
	
	Возврат Выборка.Ссылка = Сотрудник;
	
КонецФункции

Процедура ИзменитьУпорядочивание()
	
	СправочникСписок.Обновить();
	
	ПоНаименованию	= СправочникСписок.Порядок[мКодПорядка].Имя = "Наименование";
	ПоПодразделению	= СправочникСписок.Порядок[мКодПорядка].Имя = "ТекущееПодразделениеОрганизации";
	ПоДолжности		= СправочникСписок.Порядок[мКодПорядка].Имя = "ТекущаяДолжностьОрганизации";
	ПоДатеПриема	= СправочникСписок.Порядок[мКодПорядка].Имя = "ДатаПриемаНаРаботу";
	ПоКоду			= СправочникСписок.Порядок[мКодПорядка].Имя = "Код";
	
	Кнопки1	= ЭлементыФормы.ДействияФормы.Кнопки.УпорядочитьПо.Кнопки;
	Кнопки2	= ЭлементыФормы.ДействияФормы.Кнопки.Подменю.Кнопки.УпорядочитьПо.Кнопки;
	Кнопки3	= ЭлементыФормы.КоманднаяПанельСпискаСотрудников.Кнопки.УпорядочитьПо.Кнопки;
	
	Кнопки1.УпорядочитьПоНаименованию.Пометка	= ПоНаименованию;
	Кнопки1.УпорядочитьПоПодразделению.Пометка	= ПоПодразделению;
	Кнопки1.УпорядочитьПоДолжности.Пометка		= ПоДолжности;
	Кнопки1.УпорядочитьПоДатеПриема.Пометка		= ПоДатеПриема;
	Кнопки1.УпорядочитьПоКоду.Пометка			= ПоКоду;
	
	Кнопки2.УпорядочитьПоНаименованию.Пометка	= ПоНаименованию;
	Кнопки2.УпорядочитьПоПодразделению.Пометка	= ПоПодразделению;
	Кнопки2.УпорядочитьПоДолжности.Пометка		= ПоДолжности;
	Кнопки2.УпорядочитьПоДатеПриема.Пометка		= ПоДатеПриема;
	Кнопки2.УпорядочитьПоКоду.Пометка			= ПоКоду;
	
	Кнопки3.УпорядочитьПоНаименованию.Пометка	= ПоНаименованию;
	Кнопки3.УпорядочитьПоПодразделению.Пометка	= ПоПодразделению;
	Кнопки3.УпорядочитьПоДолжности.Пометка		= ПоДолжности;
	Кнопки3.УпорядочитьПоДатеПриема.Пометка		= ПоДатеПриема;
	Кнопки3.УпорядочитьПоКоду.Пометка			= ПоКоду;
	
КонецПроцедуры

Процедура ПерерисоватьКнопкиВыбора(ДанныеСтроки)
	
	КнопкиКонтекстногоМеню	= ЭлементыФормы.КоманднаяПанельСпискаСотрудников.Кнопки;
	
	// В зависимости от того, подобран элемент или нет, "дорисуем" контекстное меню
	Если ДанныеСтроки = Неопределено ИЛИ ДанныеСтроки.ЭтоГруппа Тогда
		Кнопка = КнопкиКонтекстногоМеню.Найти("КнопкаВыбрать");
		Если Кнопка <> Неопределено Тогда
			КнопкиКонтекстногоМеню.Удалить(Кнопка);
		КонецЕсли;
		
	ИначеЕсли мМассивВыбранныхЗначений = Неопределено ИЛИ мМассивВыбранныхЗначений.Найти(ДанныеСтроки.Ссылка) = Неопределено Тогда
		Если КнопкиКонтекстногоМеню.Найти("КнопкаВыбрать") = Неопределено Тогда
			НоваяКнопка = КнопкиКонтекстногоМеню.Вставить(0);
			НоваяКнопка.ТипКнопки	= ТипКнопкиКоманднойПанели.Действие;
			НоваяКнопка.Действие	= Новый Действие("ДействияФормыВыбор");
			НоваяКнопка.Имя			= "КнопкаВыбрать";
			НоваяКнопка.Текст		= "Выбрать";
			НоваяКнопка.Подсказка	= "Выбрать";
			НоваяКнопка.Пояснение	= "Выбрать значение";
			НоваяКнопка.Картинка	= БиблиотекаКартинок.ВыбратьИзСписка;
		КонецЕсли;
		
	Иначе
		Кнопка = КнопкиКонтекстногоМеню.Найти("КнопкаВыбрать");
		Если Кнопка <> Неопределено Тогда
			КнопкиКонтекстногоМеню.Удалить(Кнопка);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ПерерисоватьКнопкиВыбора()

Функция СформироватьСоответствиеДействий()
	
	мСтруктураСоответствияДействий = Новый Структура;
	мСтруктураСоответствияДействий.Вставить("ДействиеВводНаОснованииПриемНаРаботуВОрганизацию"        , Новый Действие("ДействиеВводНаОснованииПриемНаРаботуВОрганизацию"));
	мСтруктураСоответствияДействий.Вставить("ДействиеВводНаОснованииКадровоеПеремещениеОрганизаций"   , Новый Действие("ДействиеВводНаОснованииКадровоеПеремещениеОрганизаций"));
	мСтруктураСоответствияДействий.Вставить("ДействиеВводНаОснованииУвольнениеИзОрганизаций"          , Новый Действие("ДействиеВводНаОснованииУвольнениеИзОрганизаций"));
	
	Возврат мСтруктураСоответствияДействий;
КонецФункции

Процедура УточнитьНаименованиеИДоступностьКомандыИзменитьАктуальность(ВыделенныеСтроки, ДанныеСтроки)
	
	// Если выделенных строк нет - команды недоступны
	Если ВыделенныеСтроки.Количество() = 0 Тогда
		ТекстЗаголовкаКоманды = "";
		
	// Если выделенная строка одна - обратимся к текущим данным строки
	ИначеЕсли ВыделенныеСтроки.Количество() = 1 Тогда
		Если ДанныеСтроки.Актуальность Тогда
			ТекстЗаголовкаКоманды = "Поместить сотрудника в архив";
		Иначе
			ТекстЗаголовкаКоманды = "Извлечь сотрудника из архива";
		КонецЕсли;
		
	// Выделенных строк больше одной, получим данные запросом
	Иначе
		СписокСотрудников = Новый Массив;
		Для Каждого ВыделеннаяСтрока Из ВыделенныеСтроки Цикл
			СписокСотрудников.Добавить(ВыделеннаяСтрока);
		КонецЦикла;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("СписокСотрудников",	СписокСотрудников);
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	МАКСИМУМ(СотрудникиОрганизаций.Актуальность) КАК Актуальные,
		|	МИНИМУМ(СотрудникиОрганизаций.Актуальность) КАК Неактуальные
		|ИЗ
		|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
		|ГДЕ
		|	СотрудникиОрганизаций.Ссылка В(&СписокСотрудников)
		|
		|ИМЕЮЩИЕ
		|	МИНИМУМ(СотрудникиОрганизаций.Актуальность) = МАКСИМУМ(СотрудникиОрганизаций.Актуальность)";
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			Если Выборка.Актуальные Тогда
				ТекстЗаголовкаКоманды = "Поместить сотрудников в архив";
			Иначе
				ТекстЗаголовкаКоманды = "Извлечь сотрудников из архива";
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПустаяСтрока(ТекстЗаголовкаКоманды) Тогда
		ЭлементыФормы.КоманднаяПанельСпискаСотрудников.Кнопки.ИзменитьАктуальность.Доступность = Ложь;
		ЭлементыФормы.ДействияФормы.Кнопки.Подменю.Кнопки.ИзменитьАктуальность.Доступность = Ложь;
	Иначе
		ЭлементыФормы.КоманднаяПанельСпискаСотрудников.Кнопки.ИзменитьАктуальность.Доступность = Истина;
		ЭлементыФормы.КоманднаяПанельСпискаСотрудников.Кнопки.ИзменитьАктуальность.Текст = ТекстЗаголовкаКоманды;
		ЭлементыФормы.ДействияФормы.Кнопки.Подменю.Кнопки.ИзменитьАктуальность.Доступность = Истина;
		ЭлементыФормы.ДействияФормы.Кнопки.Подменю.Кнопки.ИзменитьАктуальность.Текст = ТекстЗаголовкаКоманды;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	мИмяФормыДляСохраненияНастроек = ?(ЭтаФорма.РежимВыбора, "ФормаВыбора_", "ФормаСписка_");
	мИспользоватьИерархию = ВосстановитьЗначение("СправочникСотрудники_" + мИмяФормыДляСохраненияНастроек + "ИспользоватьИерархию");
	Если мИспользоватьИерархию = Неопределено Тогда
		мИспользоватьИерархию = Истина;
	КонецЕсли;
	ПереключитьИерархию();
	
	// Отображать в группах
	ОтображатьВГруппах = ВосстановитьЗначение("СправочникСотрудники_" + мИмяФормыДляСохраненияНастроек + "ОтображатьВГруппах");
	Если ОтображатьВГруппах = Неопределено Тогда
		ОтображатьВГруппах = Истина;
	КонецЕсли;
	ЭлементыФормы.ДействияФормы.Кнопки.Подменю.Кнопки.ОтображатьВГруппах.Пометка = ОтображатьВГруппах;
	
	// отбор по актуальности
	ПоказыватьАрхив = ВосстановитьЗначение("СправочникСотрудники_" + мИмяФормыДляСохраненияНастроек + "ПоказыватьАрхив");
	Если ПоказыватьАрхив = Неопределено Тогда
		ПоказыватьАрхив = Ложь;
	КонецЕсли;
	СправочникСписок.Отбор.Актуальность.Использование = Не ПоказыватьАрхив;
	СправочникСписок.Отбор.Актуальность.Значение = Не ПоказыватьАрхив;
	ЭлементыФормы.ДействияФормы.Кнопки.Подменю.Кнопки.ПоказыватьАрхив.Пометка = ПоказыватьАрхив;
	
	// отбор по организации
	СписокОтборов = ПроцедурыУправленияПерсоналом.ПолучитьСписокГоловныхОрганизаций();
	Если СписокОтборов.Количество() = 0 Тогда
		// нет доступных организаций
		СписокОтборов.Вставить(0, Справочники.Организации.ПустаяСсылка(), "Нет доступных организаций");
	ИначеЕсли СписокОтборов.Количество() > 1 Тогда
		СписокОтборов.Вставить(0, Справочники.Организации.ПустаяСсылка(), "По всем организациям");
	КонецЕсли;
	ЭлементыФормы.ОтборПоОрганизации.СписокВыбора = СписокОтборов;
	Если ЭтаФорма.РежимВыбора И Отбор.Организация.Использование Тогда
		ОрганизацияДляОтбора	= ЭлементыФормы.ОтборПоОрганизации.СписокВыбора.НайтиПоЗначению(Отбор.Организация.Значение);
		
	Иначе
		ОрганизацияПользователя	= УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");
		ОрганизацияДляОтбора	= ЭлементыФормы.ОтборПоОрганизации.СписокВыбора.НайтиПоЗначению(ОрганизацияПользователя);
		
	КонецЕсли;
	Если ОрганизацияДляОтбора = Неопределено Тогда
		ЭлементыФормы.ОтборПоОрганизации.Значение = ЭлементыФормы.ОтборПоОрганизации.СписокВыбора.Получить(0).Значение;
	Иначе
		ЭлементыФормы.ОтборПоОрганизации.Значение = ОрганизацияДляОтбора.Значение;
	КонецЕсли;
	
	УстановитьОтборПоОрганизации();
	
	
	// Режим отображения списка
	РежимОтображенияСписка = ВосстановитьЗначение("СправочникСотрудники_" + мИмяФормыДляСохраненияНастроек + "РежимОтображенияСписка");
	Если РежимОтображенияСписка = Неопределено Тогда
		РежимОтображенияСписка = "ПоПодразделениям";
	КонецЕсли;
	ЭлементыФормы.ПолеРежимОтображенияСписка.Значение	= РежимОтображенияСписка;
	УстановитьРежимОтображенияСписка();
	
	
	// Упорядочивание
	ПодразделенияОрганизаций.Порядок.Установить("Владелец, Наименование, Ссылка");
	
	Для Каждого ЭлементУправленияПорядком Из ЭлементыФормы.СправочникСписок.НастройкаПорядка Цикл
		ЭлементУправленияПорядком.Доступность = Ложь;
	КонецЦикла;
	
	ТекущееУпорядочивание = ВосстановитьЗначение("СправочникСотрудники_" + мИмяФормыДляСохраненияНастроек + "ТекущееУпорядочивание");
	Если	ТекущееУпорядочивание = Неопределено Или 
			ТекущееУпорядочивание = "Наименование" Тогда
		ТекущееУпорядочивание	= "";
	ИначеЕсли ТекущееУпорядочивание = "ДатаПриемаНаРаботу" Тогда
		ТекущееУпорядочивание	= "ДатаПриемаНаРаботу УБЫВ";
	КонецЕсли;
	ТекущееУпорядочивание = ТекущееУпорядочивание + ?(ПустаяСтрока(ТекущееУпорядочивание), "", ", ") + "Наименование, Ссылка";
	СправочникСписок.Порядок.Установить(ТекущееУпорядочивание);
	
	ИзменитьУпорядочивание();
	
	
	// Кнопки выбора
	Если Не ЭтаФорма.РежимВыбора Тогда
		Кнопки = ЭлементыФормы.ДействияФормы.Кнопки;
		Кнопки.Удалить(Кнопки.КнопкаВыбрать);
	КонецЕсли;
	
	
	Если  ЭлементыФормы.СправочникСписок.Колонки.Найти("ЗаШтатом") <> Неопределено Тогда
		ЭлементыФормы.СправочникСписок.Колонки.Удалить(ЭлементыФормы.СправочникСписок.Колонки.ЗаШтатом);
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	мЗаголовокФормы = "Сотрудники организаций ";
	
	ТекущийЭлемент = ЭлементыФормы.СправочникСписок;
	
	РаботаСДиалогами.ИзменитьПредставлениеКнопкиВыбораСвойств(ЭтаФорма, РаботаСДиалогами.ПолучитьОписаниеЗначенийСвойствОбъекта(ЭлементыФормы.СправочникСписок.ТекущаяСтрока));
	
КонецПроцедуры

Процедура ПриЗакрытии()
	
	СохранитьЗначение("СправочникСотрудники_" + мИмяФормыДляСохраненияНастроек + "ИспользоватьИерархию",	мИспользоватьИерархию);
	СохранитьЗначение("СправочникСотрудники_" + мИмяФормыДляСохраненияНастроек + "РежимОтображенияСписка",	ЭлементыФормы.ПолеРежимОтображенияСписка.Значение);
	СохранитьЗначение("СправочникСотрудники_" + мИмяФормыДляСохраненияНастроек + "ТекущееУпорядочивание",	СправочникСписок.Порядок[мКодПорядка].Имя);
	СохранитьЗначение("СправочникСотрудники_" + мИмяФормыДляСохраненияНастроек + "ПоказыватьАрхив",			ЭлементыФормы.ДействияФормы.Кнопки.Подменю.Кнопки.ПоказыватьАрхив.Пометка);
	СохранитьЗначение("СправочникСотрудники_" + мИмяФормыДляСохраненияНастроек + "ОтображатьВГруппах",		ЭлементыФормы.ДействияФормы.Кнопки.Подменю.Кнопки.ОтображатьВГруппах.Пометка);
	
КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если (мМассивВыбранныхЗначений = Неопределено ИЛИ ТипЗнч(Параметр) <> Тип("СправочникСсылка.СотрудникиОрганизаций"))
		И ИмяСобытия <> "ОбновлениеЗначенийСвойств" И ИмяСобытия <> "ИзменениеТекущейОрганизации" Тогда
		Возврат;
	КонецЕсли;
	
	Если ИмяСобытия = "ПодборВыбор" Тогда
		Если мМассивВыбранныхЗначений.Найти(Параметр) = Неопределено Тогда
			мМассивВыбранныхЗначений.Добавить(Параметр);
			
			ДанныеСтроки = ЭлементыФормы.СправочникСписок.ТекущиеДанные;
			Если ДанныеСтроки <> Неопределено Тогда
				ПерерисоватьКнопкиВыбора(ДанныеСтроки);
			КонецЕсли;
			ЭлементыФормы.СправочникСписок.ОбновитьСтроки(Параметр);
		КонецЕсли;
	
	ИначеЕсли ИмяСобытия = "ПодборОтменаВыбора" Тогда
		ИндексСтроки = мМассивВыбранныхЗначений.Найти(Параметр);
		
		Если ИндексСтроки <> Неопределено Тогда
			мМассивВыбранныхЗначений.Удалить(ИндексСтроки);
			
			ДанныеСтроки = ЭлементыФормы.СправочникСписок.ТекущиеДанные;
			Если ДанныеСтроки <> Неопределено Тогда
				ПерерисоватьКнопкиВыбора(ДанныеСтроки);
			КонецЕсли;
			ЭлементыФормы.СправочникСписок.ОбновитьСтроки(Параметр);
		КонецЕсли;
	ИначеЕсли ИмяСобытия = "ОбновлениеЗначенийСвойств" И Источник = ЭлементыФормы.СправочникСписок.ТекущаяСтрока Тогда
		РаботаСДиалогами.ИзменитьПредставлениеКнопкиВыбораСвойств(ЭтаФорма, Параметр);
	ИначеЕсли ИмяСобытия = "ИзменениеТекущейОрганизации" Тогда
		ОтборПоОрганизации = глЗначениеПеременной("ОсновнаяОрганизация");
		Если ЗначениеЗаполнено(ОтборПоОрганизации.ГоловнаяОрганизация) Тогда
			ОтборПоОрганизации = ОтборПоОрганизации.ГоловнаяОрганизация;
		КонецЕсли;
		УстановитьОтборПоОрганизации();
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

Процедура УДФОткрыть(Кнопка)
	
	ДанныеСтроки = ЭлементыФормы.СправочникСписок.ТекущиеДанные;
	Если ДанныеСтроки = Неопределено Тогда
		Физлицо = Справочники.ФизическиеЛица.ПустаяСсылка();
	Иначе
		Физлицо = ДанныеСтроки.Ссылка.Физлицо;
	КонецЕсли;
	
	Форма = Обработки.УправлениеДаннымиРаботника.ПолучитьФорму();
	Форма.УстановитьРеквизиты(Физлицо, "Основное", ОбщегоНазначения.ПолучитьРабочуюДату());
	Форма.Открыть();
	
КонецПроцедуры // УДФОткрыть()

Процедура ДействияФормыИспользоватьИерархию(Кнопка)
	
	мИспользоватьИерархию = Не мИспользоватьИерархию;
	ПереключитьИерархию();
	УстановитьРежимОтображенияСписка();
	
КонецПроцедуры

Процедура УпорядочитьПоНаименованию(Кнопка)
	
	СправочникСписок.Порядок.Установить("Наименование, Ссылка");
	ИзменитьУпорядочивание();
	
КонецПроцедуры

Процедура УпорядочитьПоПодразделению(Кнопка)
	
	СправочникСписок.Порядок.Установить("ТекущееПодразделениеОрганизации, Наименование, Ссылка");
	ИзменитьУпорядочивание();
	
КонецПроцедуры

Процедура УпорядочитьПоДолжности(Кнопка)
	
	СправочникСписок.Порядок.Установить("ТекущаяДолжностьОрганизации, Наименование, Ссылка");
	ИзменитьУпорядочивание();
	
КонецПроцедуры

Процедура УпорядочитьПоДатеПриема(Кнопка)
	
	СправочникСписок.Порядок.Установить("ДатаПриемаНаРаботу УБЫВ, Наименование, Ссылка");
	ИзменитьУпорядочивание();
	
КонецПроцедуры

Процедура УпорядочитьПоКоду(Кнопка)
	
	СправочникСписок.Порядок.Установить("Код, Наименование, Ссылка");
	ИзменитьУпорядочивание();
	
КонецПроцедуры

Процедура ДействияФормыИзменитьАктуальность(Кнопка)
	
	// команда изменения актуальности доступна только при наличии
	// выделенных строк и только если у всех выделенных сотрудников одинаковая актуальность
	
	ВыделенныеСтроки = ЭлементыФормы.СправочникСписок.ВыделенныеСтроки;
	ДанныеСтроки		= ЭлементыФормы.СправочникСписок.ТекущиеДанные;
	ТекущаяАктуальность	= ДанныеСтроки.Актуальность;
	Наименование		= ДанныеСтроки.Наименование;
	
	МассивСотрудников = Новый Массив;
	Для Каждого ВыделеннаяСтрока Из ВыделенныеСтроки Цикл
		МассивСотрудников.Добавить(ВыделеннаяСтрока);
	КонецЦикла;
	
	// если ТекущаяАктуальность = Ложь, то пользователь видит архив
	
	Форма = Справочники.СотрудникиОрганизаций.ПолучитьФорму("ДиалогВопрос");
	Если МассивСотрудников.Количество() > 1 Тогда
		
		Если ТекущаяАктуальность Тогда
			Форма.Заголовок	= "Перемещение сотрудников в архив";
			Форма.ЭлементыФормы.НадписьТекстВопроса.Заголовок =
			"Поместить выделенных сотрудников в архив.
			|
			|Сотрудники помещенные в архив не будут показваться в списке.";
			Форма.ЭлементыФормы.КнопкаДействие1.Заголовок = "Поместить в архив";
		Иначе
			Форма.Заголовок	= "Извлечение сотрудников из архива";
			Форма.ЭлементыФормы.НадписьТекстВопроса.Заголовок =
			"Извлечь выделенных сотрудников из архива. 
			|
			|После извлечения из архива сотрудники будут показваться в списке.";
			Форма.ЭлементыФормы.КнопкаДействие1.Заголовок = "Извлечь из архива";
		КонецЕсли;
		
	Иначе
		
		Если ТекущаяАктуальность Тогда
			Форма.Заголовок	= "Перемещение сотрудника в архив";
			Форма.ЭлементыФормы.НадписьТекстВопроса.Заголовок =
			"Поместить сотрудника: " + Наименование + " в архив.
			|
			|Сотрудник, помещенный в архив, не будет показываться в списке.";
			Форма.ЭлементыФормы.КнопкаДействие1.Заголовок = "Поместить в архив";
		Иначе
			Форма.Заголовок	= "Извлечение сотрудника из архива";
			Форма.ЭлементыФормы.НадписьТекстВопроса.Заголовок =
			"Извлечь сотрудника: " + Наименование + " из архива. 
			|
			|После извлечения из архива сотрудник будет показваться в списке.";
			Форма.ЭлементыФормы.КнопкаДействие1.Заголовок = "Извлечь из архива";
		КонецЕсли;
		
	КонецЕсли;
	
	Форма.ЭлементыФормы.КнопкаДействие2.Заголовок = "Отмена";
	Результат = Форма.ОткрытьМодально();
	
	Если ПустаяСтрока(Результат) или Результат = "2" Тогда
		// отказались от смены актуальности
		Возврат;
	Иначе
		
		НачатьТранзакцию();
		Для Каждого ЭлементМассива Из МассивСотрудников Цикл
			Сотрудник = ЭлементМассива.ПолучитьОбъект();
			Сотрудник.Актуальность = Не ТекущаяАктуальность;
			Сотрудник.Записать();
		КонецЦикла;
		ЗафиксироватьТранзакцию();
		
		// после смены актуальности уточним заголовок команды
		УточнитьНаименованиеИДоступностьКомандыИзменитьАктуальность(ВыделенныеСтроки, ДанныеСтроки);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДействияФормыПоказыватьАрхив(Кнопка)
	
	ПоказыватьАрхив = НЕ ЭлементыФормы.ДействияФормы.Кнопки.Подменю.Кнопки.ПоказыватьАрхив.Пометка;
	СправочникСписок.Отбор.Актуальность.Использование = Не ПоказыватьАрхив;
	СправочникСписок.Отбор.Актуальность.Значение = Не ПоказыватьАрхив;
	ЭлементыФормы.ДействияФормы.Кнопки.Подменю.Кнопки.ПоказыватьАрхив.Пометка = ПоказыватьАрхив;
	
КонецПроцедуры

Процедура ДействияФормыОтображатьВГруппах(Кнопка)
	
	ЭлементыФормы.ДействияФормы.Кнопки.Подменю.Кнопки.ОтображатьВГруппах.Пометка = НЕ ЭлементыФормы.ДействияФормы.Кнопки.Подменю.Кнопки.ОтображатьВГруппах.Пометка;
	СправочникСписок.Обновить();
	
КонецПроцедуры

Процедура ДействияФормыВыбор(Кнопка)
	
	ДанныеСтроки = ЭлементыФормы.СправочникСписок.ТекущиеДанные;
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ДанныеСтроки.ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	СправочникСписокВыбор(ЭлементыФормы.СправочникСписок, ДанныеСтроки, ЭлементыФормы.СправочникСписок.ТекущаяКолонка, Истина);
	
	Если ВыборФизлица Тогда
		ОповеститьОВыборе(ДанныеСтроки.Ссылка.Физлицо);
	Иначе
		ОповеститьОВыборе(ДанныеСтроки.Ссылка);
	КонецЕсли;
КонецПроцедуры

Процедура ДействияФормыДействиеСвойства(Кнопка)
	
	РаботаСДиалогами.ОткрытьСвойстваИзСписка(ЭлементыФормы.СправочникСписок.ТекущаяСтрока, ЭтаФорма);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПОДМЕНЮ ВВОД НА ОСНОВАНИИ

Процедура ДействиеВводНаОснованииПриемНаРаботуВОрганизацию(Кнопка)
	
	ВыделенныеСтроки = ЭлементыФормы.СправочникСписок.ВыделенныеСтроки;
	Если ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПравоДоступа("Добавление", Метаданные.Документы.ПриемНаРаботуВОрганизацию) Тогда
		Предупреждение("Нарушение прав доступа!");
		Возврат;
	КонецЕсли;
	
	ДокументОбъект = Документы.ПриемНаРаботуВОрганизацию.СоздатьДокумент();
	ДокументОбъект.РаботникиОрганизации.Очистить();
	Если ВыделенныеСтроки.Количество() > 1 Тогда
		ДокументОбъект.ПриказНаГруппуСотрудников = Истина;
	КонецЕсли;
	
	Для Каждого ВыделеннаяСтрока Из ВыделенныеСтроки Цикл
		ДокументОбъект.Заполнить(ВыделеннаяСтрока);
	КонецЦикла;
	ФормаДокумента = ДокументОбъект.ПолучитьФорму();
	ФормаДокумента.ОтключитьПомощника = Истина;
	ФормаДокумента.Открыть();
	
КонецПроцедуры

Процедура ДействиеВводНаОснованииКадровоеПеремещениеОрганизаций(Кнопка)
	
	ВыделенныеСтроки = ЭлементыФормы.СправочникСписок.ВыделенныеСтроки;
	Если ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПравоДоступа("Добавление", Метаданные.Документы.КадровоеПеремещениеОрганизаций) Тогда
		Предупреждение("Нарушение прав доступа!");
		Возврат;
	КонецЕсли;
	
	ДокументОбъект = Документы.КадровоеПеремещениеОрганизаций.СоздатьДокумент();
	Если ВыделенныеСтроки.Количество() > 1 Тогда
		ДокументОбъект.ПриказНаГруппуСотрудников = Истина;
	КонецЕсли;
		
	Для Каждого ВыделеннаяСтрока Из ВыделенныеСтроки Цикл
		ДокументОбъект.Заполнить(ВыделеннаяСтрока);
	КонецЦикла;
	ФормаДокумента = ДокументОбъект.ПолучитьФорму();
	ФормаДокумента.Открыть();
	
КонецПроцедуры

Процедура ДействиеВводНаОснованииУвольнениеИзОрганизаций(Кнопка)
	
	ВыделенныеСтроки = ЭлементыФормы.СправочникСписок.ВыделенныеСтроки;
	Если ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПравоДоступа("Добавление", Метаданные.Документы.УвольнениеИзОрганизаций) Тогда
		Предупреждение("Нарушение прав доступа!");
		Возврат;
	КонецЕсли;
	
	ДокументОбъект = Документы.УвольнениеИзОрганизаций.СоздатьДокумент();
	Если ВыделенныеСтроки.Количество() > 1 Тогда
		ДокументОбъект.ПриказНаГруппуСотрудников = Истина;
	КонецЕсли;
		
	Для Каждого ВыделеннаяСтрока Из ВыделенныеСтроки Цикл
		ДокументОбъект.Заполнить(ВыделеннаяСтрока);
	КонецЦикла;
	ФормаДокумента = ДокументОбъект.ПолучитьФорму();
	ФормаДокумента.Открыть();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура ОтборПоОрганизацииПриИзменении(Элемент)
	
	УстановитьОтборПоОрганизации();
	
КонецПроцедуры

Процедура ПолеРежимОтображенияСпискаПриИзменении(Элемент)
	
	УстановитьРежимОтображенияСписка();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ СправочникДерево

Процедура СправочникДеревоПриАктивизацииСтроки(Элемент)
	
	ДанныеСтроки = Элемент.ТекущиеДанные;
	Если ДанныеСтроки = Неопределено Тогда
		ЭлементыФормы.СправочникСписок.ТекущийРодитель = 0;
		Возврат;
	КонецЕсли;
	
	ЭлементыФормы.СправочникСписок.ТекущийРодитель = ДанныеСтроки.Ссылка;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ Подразделения

Процедура ПодразделенияОрганизацийПриАктивизацииЯчейки(Элемент)
	
	УстановитьОтборПоПодразделению();
	
КонецПроцедуры

Процедура ПодразделенияПриПолученииДанных(Элемент, ОформленияСтрок)
	
	мОтображенныеОрганизации.Очистить();
	
	ПодразделенияМассив = Новый Массив;
	Для Каждого Оформление Из ОформленияСтрок Цикл
		Если Оформление.ДанныеСтроки <> Неопределено Тогда
			ПодразделенияМассив.Добавить(Оформление.ДанныеСтроки.Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ГоловнаяОрганизация",	ЭлементыФормы.ОтборПоОрганизации.Значение);
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 2
	|	Организации.Ссылка
	|ИЗ
	|	Справочник.Организации КАК Организации";
	Если ЗначениеЗаполнено(ЭлементыФормы.ОтборПоОрганизации.Значение) Тогда
	Запрос.Текст = Запрос.Текст + "
	|ГДЕ
	|	(Организации.Ссылка = &ГоловнаяОрганизация
	|			ИЛИ Организации.ГоловнаяОрганизация = &ГоловнаяОрганизация)";
	КонецЕсли;
	Выборка = Запрос.Выполнить().Выбрать();
	
	Для Каждого Оформление Из ОформленияСтрок Цикл
		Если Оформление.ДанныеСтроки = Неопределено Тогда
			Оформление.Ячейки.Наименование.УстановитьТекст(?(Выборка.Количество() = 2, "Все организации", "Все подразделения"));
			Оформление.Ячейки.Наименование.ОтображатьКартинку	= Ложь;
			Оформление.Ячейки.Наименование.Шрифт				= мЖирныйШрифт;
			Оформление.Ячейки.Организация.Видимость				= Ложь;
			Продолжить;
		КонецЕсли;
		
		НазваниеОрганизации	= "";
		Если (Выборка.Количество() = 2) И ПервоеПодразделение(Оформление.ДанныеСтроки.Ссылка, Оформление.ДанныеСтроки.Владелец, НазваниеОрганизации) Тогда
			Оформление.Ячейки.Организация.УстановитьТекст("      " + НазваниеОрганизации);
			Оформление.Ячейки.Организация.Шрифт = мЖирныйШрифт;
		Иначе
			Оформление.Ячейки.Организация.Видимость = Ложь;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПодразделенияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа)
	
	Отказ = Истина;
	
	ДанныеСтроки = Элемент.ТекущиеДанные;
	Если ДанныеСтроки = Неопределено Тогда
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 2
		|	Организации.Ссылка
		|ИЗ
		|	Справочник.Организации КАК Организации";
		
		ЗначениеИзСписка = ЭлементыФормы.ОтборПоОрганизации.Значение;
		ИспользоватьОтбор = ЗначениеЗаполнено(ЗначениеИзСписка);
		
		Если ИспользоватьОтбор Тогда
			Запрос.УстановитьПараметр("ГоловнаяОрганизация",	ЗначениеИзСписка);
			Запрос.Текст = Запрос.Текст + "
			|ГДЕ
			|	ВЫБОР
			|		КОГДА Организации.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
			|			ТОГДА Организации.Ссылка
			|		ИНАЧЕ Организации.ГоловнаяОрганизация
			|	КОНЕЦ = &ГоловнаяОрганизация";
		КонецЕсли;
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Количество() <> 1 Тогда
			Возврат;
		КонецЕсли;
		
		Выборка.Следующий();
		ВладелецПодразделения	= Выборка.Ссылка;
		РодительПодразделения	= 0;
		
	Иначе
		ВладелецПодразделения	= ДанныеСтроки.Владелец;
		РодительПодразделения	= ?(Элемент.ТекущаяКолонка.Имя <> "Организация", ДанныеСтроки.Ссылка, Справочники.ПодразделенияОрганизаций.ПустаяСсылка());
		
	КонецЕсли;
	
	Форма = Справочники.ПодразделенияОрганизаций.ПолучитьФормуНовогоЭлемента(, Элемент);
	Форма.Владелец	= ВладелецПодразделения;
	Форма.Родитель	= РодительПодразделения;
	Форма.Открыть();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ СправочникСписок

Процедура СправочникСписокВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Колонка.Имя <> "Группа";
	
	Если ЭтаФорма.РежимВыбора Тогда
		
		Если ТипЗнч(ВыбраннаяСтрока) = Тип("Массив") или ВыбраннаяСтрока.ЭтоГруппа Тогда
			Возврат;
		КонецЕсли;
		
		Если мМассивВыбранныхЗначений <> Неопределено И мМассивВыбранныхЗначений.Найти(ВыбраннаяСтрока.Ссылка) = Неопределено Тогда
			мМассивВыбранныхЗначений.Добавить(ВыбраннаяСтрока.Ссылка);
			ПерерисоватьКнопкиВыбора(ВыбраннаяСтрока);
			ЭлементыФормы.СправочникСписок.ОбновитьСтроки(ВыбраннаяСтрока);
		ИначеЕсли ТипЗнч(ВыбраннаяСтрока) = Тип("СправочникСсылка.СотрудникиОрганизаций") Тогда
			Если ВыборФизлица Тогда
				ОповеститьОВыборе(ВыбраннаяСтрока.Физлицо);
			Иначе
				ОповеститьОВыборе(ВыбраннаяСтрока);
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура СправочникСписокПриАктивизацииСтроки(Элемент)
	
	// Нельзя переносить код в обработчик ожидания
	// Контекстное меню появляется быстрее, чем срабатывает обработчик
	// В результате пользователь увидит подменю, сформированное для предыдущего активного элемента
	
	МассивПодменю = Новый Массив;
	МассивПодменю.Добавить(ЭлементыФормы.ДействияФормы.Кнопки.СоздатьДокумент);
	МассивПодменю.Добавить(ЭлементыФормы.ДействияФормы.Кнопки.Подменю.Кнопки.СоздатьДокумент);
	МассивПодменю.Добавить(ЭлементыФормы.КоманднаяПанельСпискаСотрудников.Кнопки.СоздатьДокумент);
	
	ДанныеСтроки = ЭлементыФормы.СправочникСписок.ТекущиеДанные;
	Если ДанныеСтроки = Неопределено Тогда
		СформироватьПодменюВвестиДокумент(МассивПодменю, мСтруктураСоответствияДействий, Дата(1,1,1), Дата(1,1,1));
	Иначе
		СформироватьПодменюВвестиДокумент(МассивПодменю, мСтруктураСоответствияДействий, ДанныеСтроки.ДатаПриемаНаРаботу, ДанныеСтроки.ДатаУвольнения);
	КонецЕсли;	
	
	Если ЭтаФорма.РежимВыбора Тогда
		ПерерисоватьКнопкиВыбора(ДанныеСтроки);
	КонецЕсли;
	
	// уточним наименование и доступность команды ИзменитьАктуальность
	УточнитьНаименованиеИДоступностьКомандыИзменитьАктуальность(ЭлементыФормы.СправочникСписок.ВыделенныеСтроки, ЭлементыФормы.СправочникСписок.ТекущиеДанные);
	
	РаботаСДиалогами.ИзменитьПредставлениеКнопкиВыбораСвойств(ЭтаФорма, РаботаСДиалогами.ПолучитьОписаниеЗначенийСвойствОбъекта(ЭлементыФормы.СправочникСписок.ТекущаяСтрока));
	 
КонецПроцедуры

Процедура СформироватьПодменюВвестиДокумент(МассивКнопокПодменю, СтруктураСоответствияДействий, ДатаПриема, ДатаУвольнения) 
	
	Для Каждого КнопкаПодменю Из МассивКнопокПодменю Цикл
		КнопкаПодменю.Кнопки.Очистить();
	КонецЦикла;
	
	Для Каждого КнопкаПодменю Из МассивКнопокПодменю Цикл
		КнопкаПодменю.Доступность = Ложь;
	КонецЦикла;
	
	Принят = (ДатаПриема <> Дата(1,1,1));
	Уволен = (ДатаУвольнения <> Дата(1,1,1));
	
	Если Уволен Тогда
		Для Каждого КнопкаПодменю Из МассивКнопокПодменю Цикл
			КнопкаПодменю.Доступность = Ложь;
		КонецЦикла;
		Возврат;
	Иначе
		Для Каждого КнопкаПодменю Из МассивКнопокПодменю Цикл
			КнопкаПодменю.Доступность = Истина;
		КонецЦикла;
	КонецЕсли;
	
	Если Не Принят Тогда
		ДобавитьКнопкуВПодменю(МассивКнопокПодменю, "ПриемНаРаботу", ТипКнопкиКоманднойПанели.Действие, "Прием на работу", СтруктураСоответствияДействий.ДействиеВводНаОснованииПриемНаРаботуВОрганизацию);
		ДобавитьКнопкуВПодменю(МассивКнопокПодменю, "Разделитель1", ТипКнопкиКоманднойПанели.Разделитель);
	КонецЕсли;
	ДобавитьКнопкуВПодменю(МассивКнопокПодменю, "КадровоеПеремещение", ТипКнопкиКоманднойПанели.Действие, "Кадровое перемещение", СтруктураСоответствияДействий.ДействиеВводНаОснованииКадровоеПеремещениеОрганизаций);
	ДобавитьКнопкуВПодменю(МассивКнопокПодменю, "Увольнение", ТипКнопкиКоманднойПанели.Действие, "Увольнение", СтруктураСоответствияДействий.ДействиеВводНаОснованииУвольнениеИзОрганизаций);
	
КонецПроцедуры

Процедура ДобавитьКнопкуВПодменю(МассивКнопок, ИмяКнопки, ТипКнопки, ТекстКнопки = "", Действие = Неопределено)
	
	Для Каждого КнопкаПодменю Из МассивКнопок Цикл
		КнопкаПодменю.Кнопки.Добавить(ИмяКнопки, ТипКнопки, ТекстКнопки, Действие);
	КонецЦикла;
	
КонецПроцедуры

Процедура СправочникСписокПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ЭтаФорма.РежимВыбора Тогда
		Если мМассивВыбранныхЗначений <> Неопределено И мМассивВыбранныхЗначений.Найти(ДанныеСтроки.Ссылка) <> Неопределено Тогда
			ОформлениеСтроки.ЦветТекста	= ЦветаСтиля.ЦветПодобранногоЭлемента;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

//Процедура - обработчик события "ПриПолученииДанных" табличного поля СправочникСписок
Процедура СправочникСписокПриПолученииДанных(Элемент, ОформленияСтрок)
	
	ЗаполнитьДанныеПоРаботникамОрганизации(ЭлементыФормы.СправочникСписок, ОформленияСтрок, ОбщегоНазначения.ПолучитьРабочуюДату());
	
	мОтображенныеГруппы.Очистить();
	
	Для Каждого Оформление Из ОформленияСтрок Цикл
		
		Если НЕ Оформление.ДанныеСтроки.ЭтоГруппа И Не Оформление.ДанныеСтроки.Актуальность Тогда
			Оформление.ЦветТекста = ЦветаСтиля.ЦветРамки;
		КонецЕсли;
		
		// по коду не группируем
		ПоказыватьГруппы = СправочникСписок.Порядок[мКодПорядка].Имя <> "Код" И ЭлементыФормы.ДействияФормы.Кнопки.Подменю.Кнопки.ОтображатьВГруппах.Пометка;
		
		Если ПоказыватьГруппы Тогда
			Если СправочникСписок.Порядок[мКодПорядка].Имя = "Наименование" Тогда
				Группа = ВРЕГ(Лев(СокрЛ(Оформление.ДанныеСтроки.Наименование), 1));
			ИначеЕсли СправочникСписок.Порядок[мКодПорядка].Имя = "ДатаПриемаНаРаботу" Тогда
				Группа = НачалоМесяца(Оформление.ДанныеСтроки.ДатаПриемаНаРаботу);
			ИначеЕсли СправочникСписок.Порядок[мКодПорядка].Имя <> "Код" Тогда
				Группа = Оформление.ДанныеСтроки[СправочникСписок.Порядок[мКодПорядка].Имя];
			КонецЕсли;
		КонецЕсли;
		
		Если ПоказыватьГруппы
			И ПервыйСотрудник(Оформление.ДанныеСтроки.Ссылка, Группа) Тогда
			Если ЗначениеЗаполнено(Группа) Тогда
				Если СправочникСписок.Порядок[мКодПорядка].Имя = "ДатаПриемаНаРаботу" Тогда
					Оформление.Ячейки.Группа.УстановитьТекст(Формат(Группа, "ДФ='ММММ гггг""г.""'"));
				Иначе
					Оформление.Ячейки.Группа.УстановитьТекст(Группа);
				КонецЕсли;
			Иначе
				Если СправочникСписок.Порядок[мКодПорядка].Имя = "ТекущееПодразделениеОрганизации" Тогда
					Оформление.Ячейки.Группа.УстановитьТекст("Подразделение не указано");
				ИначеЕсли СправочникСписок.Порядок[мКодПорядка].Имя = "ТекущаяДолжностьОрганизации" Тогда
					Оформление.Ячейки.Группа.УстановитьТекст("Должность не указана");
				ИначеЕсли СправочникСписок.Порядок[мКодПорядка].Имя = "ДатаПриемаНаРаботу" Тогда
					Оформление.Ячейки.Группа.УстановитьТекст("Не работают");
				КонецЕсли;
			КонецЕсли;
			
			Если СправочникСписок.Порядок[мКодПорядка].Имя <> "Наименование" Тогда
				Оформление.Ячейки.Группа.Шрифт = Новый Шрифт(, 10, Истина);
			КонецЕсли;
			
		Иначе
			Оформление.Ячейки.Группа.Видимость = Ложь;
			
		КонецЕсли;
	
		Оформление.Ячейки.Наименование.УстановитьТекст("   " + Оформление.Ячейки.Наименование.Текст);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьДанныеПоРаботникамОрганизации(ТабличноеПоле, ОформленияСтрок, ДатаСреза = Неопределено)

	КолонкиТабличногоПоля = ТабличноеПоле.Колонки;
	
	ПоказыватьЗаШтатом = КолонкиТабличногоПоля.Найти("ЗаШтатом") <> Неопределено и КолонкиТабличногоПоля.ЗаШтатом.Видимость;
	
	Если Не ПоказыватьЗаШтатом Тогда
		Возврат;
	КонецЕсли;
	
	МассивСотрудников = Новый Массив;
	Для Каждого СтрокаТабличногоПоля Из ОформленияСтрок Цикл
		ДанныеСтроки = СтрокаТабличногоПоля.ДанныеСтроки;
		Если ДанныеСтроки.ЭтоГруппа Тогда
			Продолжить;
		КонецЕсли;
		МассивСотрудников.Добавить(ДанныеСтроки.Ссылка);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивСотрудников", МассивСотрудников);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ";

	Запрос.Текст = Запрос.Текст + "
	|	Сотрудники.Ссылка КАК Сотрудник
	|ИЗ
	|	Справочник.СотрудникиОрганизаций КАК Сотрудники";
	
	Запрос.Текст = Запрос.Текст + "
	|ГДЕ
	|	Сотрудники.Ссылка В(&МассивСотрудников)";
	
	Таблица = Запрос.Выполнить().Выгрузить();
	Таблица.Индексы.Добавить("Сотрудник");
	
	Для Каждого СтрокаТабличногоПоля Из ОформленияСтрок Цикл
		
		ДанныеСтроки = СтрокаТабличногоПоля.ДанныеСтроки;
		Если ДанныеСтроки.ЭтоГруппа Тогда
			Продолжить;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры


Процедура СправочникСписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа)
	
	Если Не ЭтоГруппа Тогда
		
		ПроцедурыУправленияПерсоналом.УчетЗарплатыИКадровВоВнешнейПрограмме(Отказ,Справочники.СотрудникиОрганизаций.ПустаяСсылка(), ЭтаФорма, Истина);	
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		
		ОрганизацияСотрудника = Справочники.Организации.ПустаяСсылка();
		
		Если ТипЗнч(СправочникСписок.Отбор.Организация.Значение) = Тип("СправочникСсылка.Организации") 
			и СправочникСписок.Отбор.Организация.Использование
			и СправочникСписок.Отбор.Организация.ВидСравнения = ВидСравнения.Равно Тогда
			ОрганизацияСотрудника = СправочникСписок.Отбор.Организация.Значение;
		КонецЕсли;
		
		// проверим какую форму надо использовать
		ИспользоватьПомощника = НЕ УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "НеИспользоватьПомощникаПриемаНаРаботу");
		
		Если ИспользоватьПомощника Тогда
			Если ЭтаФорма.КлючУникальности <> Неопределено Тогда
				Если ТипЗнч(ЭтаФорма.КлючУникальности) = Тип("ДокументСсылка.ПриемНаРаботуВОрганизацию")Тогда
					ИспользоватьПомощника = Ложь;
				КонецЕсли;			
			КонецЕсли;			
			
		КонецЕсли;
		
		Если ИспользоватьПомощника Тогда

			Форма = Справочники.СотрудникиОрганизаций.ПолучитьФормуНовогоЭлемента("ФормаПомощник", Элемент);
			Форма.СоздатьДокумент = Истина;
			Отказ = истина;
			
		Иначе
			Форма = Справочники.СотрудникиОрганизаций.ПолучитьФормуНовогоЭлемента(,Элемент);
		КонецЕсли;
		
		Если Форма.Открыта() Тогда
			// просто активизируем уже открытую форму
			Форма.Активизировать();
			Возврат;
		КонецЕсли;
				
		Форма.Организация = ОрганизацияСотрудника;
		Форма.Родитель = Родитель;
		Форма.Открыть();
		Если ИспользоватьПомощника Тогда
			Если ЭтаФорма.ВладелецФормы <> Неопределено Тогда
				Форма.ЭлементыФормы.ПанельСоздатьПриказ.Свертка = РежимСверткиЭлементаУправления.Верх;			
			КонецЕсли;		
		КонецЕсли;		
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СправочникСписокПередНачаломИзменения(Элемент, Отказ)
	
	Если Элемент.СпособРедактирования <> СпособРедактированияСписка.ВДиалоге Тогда
		Элемент.СпособРедактирования = СпособРедактированияСписка.ВДиалоге;
	КонецЕсли;
	
КонецПроцедуры

Процедура ДействияФормыЛичнаяКарточкаТ2(Кнопка)
	
	Если ЭлементыФормы.СправочникСписок.ТекущиеДанные <>  Неопределено Тогда
		ЛичнаяКарточка = Отчеты.УнифицированнаяФормаТ2.Создать();
		ЛичнаяКарточка.Работник = ЭлементыФормы.СправочникСписок.ТекущиеДанные.Ссылка;
		ЛичнаяКарточкаФорма = ЛичнаяКарточка.ПолучитьФорму();
		ЛичнаяКарточкаФорма.Открыть();
		ЛичнаяКарточка.СформироватьОтчет(ЛичнаяКарточкаФорма.ЭлементыФормы.ДокументРезультат, Ложь);
	Иначе
		ЛичнаяКарточка = Отчеты.УнифицированнаяФормаТ2.Создать();
		ЛичнаяКарточкаФорма = ЛичнаяКарточка.ПолучитьФорму();
		ЛичнаяКарточкаФорма.Открыть();		
	КонецЕсли;

КонецПроцедуры

Процедура ДействияФормыЗаявлениеДСВ1(Кнопка)
	
	Если ЭлементыФормы.СправочникСписок.ТекущиеДанные <>  Неопределено Тогда
		ЗаявлениеДСВ1 = Отчеты.ЗаявлениеДСВ1.Создать();
		ЗаявлениеДСВ1.ФизЛицо = ЭлементыФормы.СправочникСписок.ТекущиеДанные.Ссылка.Физлицо;
		ЗаявлениеДСВ1Форма = ЗаявлениеДСВ1.ПолучитьФорму();
		ЗаявлениеДСВ1Форма.Открыть();
		ЗаявлениеДСВ1.СформироватьОтчет(ЗаявлениеДСВ1Форма.ЭлементыФормы.ДокументРезультат);
	Иначе
		ЗаявлениеДСВ1 = Отчеты.УнифицированнаяФормаТ2.Создать();
		ЗаявлениеДСВ1Форма = ЗаявлениеДСВ1.ПолучитьФорму();
		ЗаявлениеДСВ1Форма.Открыть();		
	КонецЕсли;

КонецПроцедуры

Процедура ДействияФормыУправлениеДаннымиРаботника(Кнопка)
	
	Если ЭлементыФормы.СправочникСписок.ТекущиеДанные <>  Неопределено Тогда
		УправлениеДаннымиРаботника = Обработки.УправлениеДаннымиРаботника.Создать();
		УправлениеДаннымиРаботника.ФизЛицо = ЭлементыФормы.СправочникСписок.ТекущиеДанные.Ссылка.Физлицо;
		УправлениеДаннымиРаботникаФорма = УправлениеДаннымиРаботника.ПолучитьФорму();
		УправлениеДаннымиРаботникаФорма.Открыть();		
	Иначе
		УправлениеДаннымиРаботника = Обработки.УправлениеДаннымиРаботника.Создать();
		УправлениеДаннымиРаботникаФорма = УправлениеДаннымиРаботника.ПолучитьФорму();
		УправлениеДаннымиРаботникаФорма.Открыть();		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДействияФормыВводДаныхСЗВ4(Кнопка)
		
	ОтчетныйПериод = ПроцедурыПерсонифицированногоУчета.ПредшествующийОтчетныйПериодПерсучета(ОбщегоНазначения.ПолучитьРабочуюДату());
	Если ЭлементыФормы.СправочникСписок.ТекущиеДанные <>  Неопределено Тогда
		ФормаВводаДанныхСЗВ4 = ПолучитьОбщуюФорму("ФормаВводаДанныхСЗВ4", ЭтаФорма, "ФизЛицо"+ ЭлементыФормы.СправочникСписок.ТекущиеДанные.Ссылка.Физлицо.Код);
		ФормаВводаДанныхСЗВ4.ФизЛицо = ЭлементыФормы.СправочникСписок.ТекущиеДанные.Ссылка.Физлицо;
		ФормаВводаДанныхСЗВ4.Организация = ЭлементыФормы.СправочникСписок.ТекущиеДанные.Ссылка.Организация;
		ФормаВводаДанныхСЗВ4.Открыть();
	Иначе
		ФормаВводаДанныхСЗВ4 = ПолучитьОбщуюФорму("ФормаВводаДанныхСЗВ4", ЭтаФорма, "ФизЛицо");
		ФормаВводаДанныхСЗВ4.ФизЛицо = Справочники.ФизическиеЛица.ПустаяСсылка();
		ФормаВводаДанныхСЗВ4.Организация = ?(ЗначениеЗаполнено(ОтборПоОрганизации),ОтборПоОрганизации,Справочники.Организации.ПустаяСсылка());
		ФормаВводаДанныхСЗВ4.Открыть();
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

мЖирныйШрифт = Новый Шрифт(ШрифтыСтиля.ШрифтТекста,,, Истина);

мОтображенныеОрганизации	= Новый Соответствие;
мОтображенныеГруппы			= Новый Соответствие;

СправочникСписок.Колонки.Добавить("Актуальность");
СправочникСписок.Колонки.Добавить("Родитель");
СправочникСписок.Колонки.Добавить("ДатаПриемаНаРаботу");
СправочникСписок.Колонки.Добавить("ТекущееПодразделениеОрганизации");
СправочникСписок.Колонки.Добавить("ТекущаяДолжностьОрганизации");
СправочникСписок.Колонки.Добавить("ДатаУвольнения");
СправочникСписок.Колонки.Добавить("ВидЗанятости");

мОбработкаТайпинга                 = Ложь;
мТекстТайпинга                     = "";
мПоследнееЗначениеЭлементаТайпинга = Неопределено;

мСтруктураСоответствияДействий = СформироватьСоответствиеДействий();

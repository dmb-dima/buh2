Перем ПоследниеВыбранныеХО;
Перем ОтборПоСодержаниюПриАвтоПодборе;
Перем СоответствиеСинонимаИмени;
Перем ОбщееКоличествоКорреспонденций;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СОБЫТИЙ ФОРМЫ

// Обработчик события ПриОткрытии формы.
//
Процедура ПриОткрытии()
	
	СписокДокументов = новый СписокЗначений;
	СоответствиеСинонимаИмени = новый Соответствие;
	ОбщееКоличествоКорреспонденций = ПолучитьОбщееКоличествоКорреспонденций();
	
	Для каждого Док из Метаданные.Документы Цикл
		СписокДокументов.Добавить(Док.Синоним,Док.Синоним);
		СоответствиеСинонимаИмени.Вставить(Док.Синоним,Док.Имя);
	КонецЦикла;
	ЭлементыФормы.ПолеВводаДокумента.СписокВыбора = СписокДокументов;
	ЭлементыФормы.ПолеВводаДокумента.Значение = "";

	ПоследниеВыбранныеХО=ВосстановитьЗначение("ПоследниеВыбранныеХО");
	Если ПоследниеВыбранныеХО=неопределено Тогда
		//При первом открытие создаем таблицу и определяем колонки
		ПоследниеВыбранныеХО = новый ТаблицаЗначений;
		МассивТипов = Новый Массив();
		МассивТипов.Добавить(Тип("Дата"));
		НовыйТип = Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя));;
		ПоследниеВыбранныеХО.Колонки.Добавить("Момент",НовыйТип);
		МассивТипов = Новый Массив();
		МассивТипов.Добавить(Тип("СправочникСсылка.КорреспонденцииСчетов"));
		НовыйТип = Новый ОписаниеТипов(МассивТипов, , ,);
		ПоследниеВыбранныеХО.Колонки.Добавить("Ссылка",НовыйТип);
	КонецЕсли;
	
	Если ВосстановитьЗначение("ТекущаяСтраница")<>Неопределено Тогда
		ЭлементыФормы.Панель.ТекущаяСтраница = ЭлементыФормы.Панель.Страницы.Найти(ВосстановитьЗначение("ТекущаяСтраница"));
	КонецЕсли;
	
	ОбновитьСписокХО();
	
	ВосстановленныеОтборы = ВосстановитьЗначение("ОтборыПоСодержанию");
	Если ВосстановленныеОтборы = неопределено Тогда
		ОтборыПоСодержанию.Добавить("товар от поставщ");
		ОтборыПоСодержанию.Добавить("денеж на расчет счет от покупателя");
		ОтборыПоСодержанию.Добавить("перечислен ден поставщик");
	Иначе
		ОтборыПоСодержанию = ВосстановленныеОтборы;
	КонецЕсли;
	ЭлементыФормы.ПолеВводаСодержания.СписокВыбора = ОтборыПоСодержанию;
	
КонецПроцедуры

// Обработчик события ПриЗакрытии формы.
//
Процедура ПриЗакрытии()
	
	СохранитьЗначение("ПоследниеВыбранныеХО",ПоследниеВыбранныеХО);
	СохранитьЗначение("ТекущаяСтраница",ЭлементыФормы.Панель.ТекущаяСтраница.Имя);
	СохранитьЗначение("ОтборыПоСодержанию",ОтборыПоСодержанию);

КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ


Процедура ПолеВводаСчетаПриИзменении(Элемент)
	
	ОбновитьСписокХО();

КонецПроцедуры

Процедура ПолеВводаСодержанияПриИзменении(Элемент)
	
	Если ОтборПоСодержаниюПриАвтоПодборе<>Элемент.Значение Тогда
		ОбновитьСписокХО();
	КонецЕсли;

КонецПроцедуры

Процедура ПолеВводаСодержанияАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	
	ОтборПоСодержаниюПриАвтоПодборе = ЭлементыФормы.ПолеВводаСодержания.Значение;
	ОбновитьСписокХО();
	
КонецПроцедуры

Процедура ТабличноеПолеВсехВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	//Сохраняем выбранную операцию в списке последних выбранных
	НайденнаяХО = ПоследниеВыбранныеХО.Найти(ВыбраннаяСтрока.Ссылка,"Ссылка");
	Если НайденнаяХО <>Неопределено Тогда
		НайденнаяХО.Момент = ТекущаяДата();
	Иначе
		ВыбраннаяХО = ПоследниеВыбранныеХО.Добавить();
		ВыбраннаяХО.Момент = ТекущаяДата();
		ВыбраннаяХО.Ссылка = ВыбраннаяСтрока.Ссылка;
	КонецЕсли;
	
	ФормаДокумента = Документы[СоответствиеСинонимаИмени[ВыбраннаяСтрока.Ссылка.ТипДокумента]].ПолучитьФормуНовогоДокумента(,ЭтаФорма);
	
	Если ВыбраннаяСтрока.Документ = "Операция (бухгалтерский и налоговый учет)" Тогда
		//Если открывается документ Операция - выполним первоначальное заполнение
		Движения = ФормаДокумента.Движения.Хозрасчетный;
		НоваяПроводка = Движения.Добавить();
		НоваяПроводка.СчетДт = ВыбраннаяСтрока.СчетДт;
		Для Каждого Субконто Из ВыбраннаяСтрока.СчетДт.ВидыСубконто Цикл
			ЗначениеСубконто = ?(Субконто.ВидСубконто.ТипЗначения.Типы().Количество() > 1, Неопределено, Новый(Субконто.ВидСубконто.ТипЗначения.Типы()[0]));
			НоваяПроводка.СубконтоДт.Вставить(Субконто.ВидСубконто, ЗначениеСубконто);
		КонецЦикла;
		НоваяПроводка.СчетКт = ВыбраннаяСтрока.СчетКт;
		Для Каждого Субконто Из ВыбраннаяСтрока.СчетКт.ВидыСубконто Цикл
			ЗначениеСубконто = ?(Субконто.ВидСубконто.ТипЗначения.Типы().Количество() > 1, Неопределено, Новый(Субконто.ВидСубконто.ТипЗначения.Типы()[0]));
			НоваяПроводка.СубконтоКт.Вставить(Субконто.ВидСубконто, ЗначениеСубконто);
		КонецЦикла;
		НоваяПроводка.Содержание = ВыбраннаяСтрока.Содержание;
		ФормаДокумента.Содержание = ВыбраннаяСтрока.Содержание;
	ИначеЕсли ВыбраннаяСтрока.Документ = "Ввод начальных остатков" Тогда
		Если ЗначениеЗаполнено(ВыбраннаяСтрока.ВидОперацииДокумента) Тогда
			Для каждого Перечень из Перечисления[ФормаДокумента.РазделУчета.Метаданные().Имя] Цикл
				Если Строка(Перечень) = ВыбраннаяСтрока.Ссылка.ВидОперацииДокумента Тогда
					ФормаДокумента.РазделУчета = Перечень;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	ИначеЕсли ВыбраннаяСтрока.Документ = "Закрытие месяца" Тогда
		//Если это документ закрытие то только после открытия формы установим флажок нужной операции
	Иначе
		//Если указан вид операции то открываем документ с указанной операцией
		Если ЗначениеЗаполнено(ВыбраннаяСтрока.ВидОперацииДокумента) Тогда
			Для каждого Перечень из Перечисления[ФормаДокумента.ВидОперации.Метаданные().Имя] Цикл
				Если Строка(Перечень) = ВыбраннаяСтрока.Ссылка.ВидОперацииДокумента Тогда
					ФормаДокумента.ВидОперации = Перечень;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	ФормаДокумента.Открыть();
	
	Если ВыбраннаяСтрока.Документ = "Закрытие месяца" Тогда
		ИскомаяОперация = ВыбраннаяСтрока.Ссылка.ВидОперацииДокумента;
		//установим флажок нужной операции
		Для каждого СтрокаПервогоУровня из ФормаДокумента.ДеревоВыполняемыхОпераций.Строки Цикл
			СтрокаПервогоУровня.БУ = Ложь;
			Если СтрокаПервогоУровня.Строки.Количество() > 0 Тогда
				Для каждого СтрокаВторогоУровня из СтрокаПервогоУровня.Строки Цикл
					Если СтрокаВторогоУровня.Действие = ИскомаяОперация Тогда
						СтрокаВторогоУровня.БУ = Истина;
						СтрокаПервогоУровня.БУ = 2;
					Иначе
						СтрокаВторогоУровня.БУ = Ложь;
					КонецЕсли;
				КонецЦикла;
			Иначе
				Если СтрокаПервогоУровня.Действие = ИскомаяОперация Тогда
					СтрокаПервогоУровня.БУ = Истина;
					СтрокаПервогоУровня.БУ = 1;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	//Если находимся на странице с последними используемыми, то обновим список
	Если ЭлементыФормы.Панель.ТекущаяСтраница.Имя = "Страница2" Тогда 
		ОбновитьСписокПоследнихХО();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПанельПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если ТекущаяСтраница=1 Тогда
		ОбновитьСписокПоследнихХО();
		ЭлементыФормы.КоманднаяПанельОчистки.Видимость = истина;
	Иначе
		ЭлементыФормы.КоманднаяПанельОчистки.Видимость = ложь;
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельДействиеОчиститьСписокПоследних(Кнопка)
	
	ПоследниеВыбранныеХО.Очистить();
	ОбновитьСписокПоследнихХО(Истина);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция ПолучитьОбщееКоличествоКорреспонденций()
	
	Запрос=новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Количество(КорреспонденцииСчетов.Ссылка) КАК Количество
	               |ИЗ
	               |	Справочник.КорреспонденцииСчетов КАК КорреспонденцииСчетов
	               |";
				   
	Возврат Запрос.Выполнить().Выгрузить()[0].Количество;
	
КонецФункции

Процедура ОбновитьСписокХО()
	
	Запрос=новый Запрос;
	Запрос.УстановитьПараметр("ОтборПоСчетДт",ОтборПоСчетДт);			   
	Запрос.УстановитьПараметр("ОтборПоСчетКт",ОтборПоСчетКт);		
	Запрос.УстановитьПараметр("ПустойСчет",ПланыСчетов.Хозрасчетный.ПустаяСсылка());		
	Запрос.УстановитьПараметр("ТипДокумента",ЭлементыФормы.ПолеВводаДокумента.Значение);	
	
	Условие = "";
	Если ЗначениеЗаполнено(ОтборПоСчетДт) Тогда
		Условие= Условие + ?(Условие="","КорреспонденцииСчетов.СчетДт В Иерархии (&ОтборПоСчетДт)"," И КорреспонденцииСчетов.СчетДт В Иерархии (&ОтборПоСчетДт)");
	КонецЕсли;
	Если ЗначениеЗаполнено(ОтборПоСчетКт) Тогда
		Условие= Условие + ?(Условие="","КорреспонденцииСчетов.СчетКт В Иерархии (&ОтборПоСчетКт)"," И КорреспонденцииСчетов.СчетКт В Иерархии (&ОтборПоСчетКт)");
	КонецЕсли;
	Если ЗначениеЗаполнено(ЭлементыФормы.ПолеВводаСодержания.Значение) Тогда
		
		МассивСтрок = ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(ЭлементыФормы.ПолеВводаСодержания.Значение," ");
		НомерСтроки = 0;
		УсловиеОтбора = "";
		Для каждого строка из МассивСтрок Цикл
			Если УсловиеОтбора="" Тогда
				УсловиеОтбора = "(КорреспонденцииСчетов.Содержание Подобно &ОтборПоСодержанию"+НомерСтроки+" ";
			Иначе
				УсловиеОтбора = УсловиеОтбора + "И КорреспонденцииСчетов.Содержание Подобно &ОтборПоСодержанию"+НомерСтроки+" "
			КонецЕсли;
			Запрос.УстановитьПараметр("ОтборПоСодержанию"+НомерСтроки,"%"+строка+"%");			   
			НомерСтроки = НомерСтроки + 1;
		КонецЦикла;
		УсловиеОтбора = УсловиеОтбора+")";
		
		Условие= Условие + ?(Условие="",УсловиеОтбора," И "+УсловиеОтбора);

	КонецЕсли;
	Если ЗначениеЗаполнено(ЭлементыФормы.ПолеВводаДокумента.Значение) Тогда
		Условие= Условие + ?(Условие="","КорреспонденцииСчетов.ТипДокумента=&ТипДокумента"," И КорреспонденцииСчетов.ТипДокумента=&ТипДокумента");
	КонецЕсли;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	КорреспонденцииСчетов.Содержание КАК Содержание,
	               |	КорреспонденцииСчетов.Ссылка,
	               |	КорреспонденцииСчетов.СчетДт КАК СчетДт,
	               |	КорреспонденцииСчетов.СчетКт КАК СчетКт,
	               |	ВЫБОР
	               |		КОГДА КорреспонденцииСчетов.СчетДт = &ПустойСчет
	               |				И КорреспонденцииСчетов.СчетКт = &ПустойСчет
	               |			ТОГДА 3
	               |		КОГДА КорреспонденцииСчетов.СчетДт = &ПустойСчет
	               |				ИЛИ КорреспонденцииСчетов.СчетКт = &ПустойСчет
	               |			ТОГДА 2
	               |		ИНАЧЕ 1
	               |	КОНЕЦ КАК ДопПорядок,
	               |	ВЫБОР
	               |		КОГДА КорреспонденцииСчетов.ВидОперацииДокумента = """"
	               |			ТОГДА """"
	               |		ИНАЧЕ ""операция """""" + КорреспонденцииСчетов.ВидОперацииДокумента + """"""""
	               |	КОНЕЦ КАК ВидОперацииДокумента,
	               |	ВЫБОР
	               |		КОГДА КорреспонденцииСчетов.ЗакладкаДокумента = """"
	               |			ТОГДА """"
	               |		ИНАЧЕ ""закладка """""" + КорреспонденцииСчетов.ЗакладкаДокумента + """"""""
	               |	КОНЕЦ КАК ЗакладкаДокумента,
	               |	"""" + КорреспонденцииСчетов.ТипДокумента + """" КАК Документ,
	               |	""меню """""" + КорреспонденцииСчетов.Меню + """""""" КАК Меню
	               |ИЗ
	               |	Справочник.КорреспонденцииСчетов КАК КорреспонденцииСчетов
	               |
	               |"+?(Условие = "","","ГДЕ "+Условие)+" 
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ДопПорядок,
	               |	КорреспонденцииСчетов.СчетДт.Порядок,
	               |	КорреспонденцииСчетов.СчетКт.Порядок,
	               |	Содержание";
				   
	ТабличноеПолеВсех = Запрос.Выполнить().Выгрузить();
	КоличествоОтображаемых = ТабличноеПолеВсех.Количество();
	ЭлементыФормы.Панель.Страницы.Страница1.Заголовок = "Все ("+?(КоличествоОтображаемых=ОбщееКоличествоКорреспонденций,"",""+КоличествоОтображаемых+" из ")+ОбщееКоличествоКорреспонденций+")";

	Если ЭлементыФормы.Панель.ТекущаяСтраница.Имя = "Страница2" Тогда 
		ОбновитьСписокПоследнихХО();
		ЭлементыФормы.КоманднаяПанельОчистки.Видимость = истина;
	Иначе
		ЭлементыФормы.КоманднаяПанельОчистки.Видимость = ложь;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьСписокПоследнихХО(ОчищенСписок = ложь)
	
	Если Не ОчищенСписок И (ПоследниеВыбранныеХО=неопределено ИЛИ ПоследниеВыбранныеХО.Количество()=0) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос=новый Запрос;
	Запрос.УстановитьПараметр("ПоследниеВыбранныеХО",ПоследниеВыбранныеХО);			   
	Запрос.УстановитьПараметр("ОтборПоСчетДт",ОтборПоСчетДт);			   
	Запрос.УстановитьПараметр("ОтборПоСчетКт",ОтборПоСчетКт);			   
	Запрос.УстановитьПараметр("ТипДокумента",ЭлементыФормы.ПолеВводаДокумента.Значение);	
	
	Условие = "";
	Если ЗначениеЗаполнено(ОтборПоСчетДт) Тогда
		Условие= Условие + ?(Условие="","КорреспонденцииСчетов.СчетДт В Иерархии (&ОтборПоСчетДт)"," И КорреспонденцииСчетов.СчетДт В Иерархии (&ОтборПоСчетДт)");
	КонецЕсли;
	Если ЗначениеЗаполнено(ОтборПоСчетКт) Тогда
		Условие= Условие + ?(Условие="","КорреспонденцииСчетов.СчетКт В Иерархии (&ОтборПоСчетКт)"," И КорреспонденцииСчетов.СчетКт В Иерархии (&ОтборПоСчетКт)");
	КонецЕсли;
	Если ЗначениеЗаполнено(ЭлементыФормы.ПолеВводаСодержания.Значение) Тогда
		
		МассивСтрок = ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(ЭлементыФормы.ПолеВводаСодержания.Значение," ");
		НомерСтроки = 0;
		УсловиеОтбора = "";
		Для каждого строка из МассивСтрок Цикл
			Если УсловиеОтбора="" Тогда
				УсловиеОтбора = "(КорреспонденцииСчетов.Содержание Подобно &ОтборПоСодержанию"+НомерСтроки+" ";
			Иначе
				УсловиеОтбора = УсловиеОтбора + "И КорреспонденцииСчетов.Содержание Подобно &ОтборПоСодержанию"+НомерСтроки+" "
			КонецЕсли;
			Запрос.УстановитьПараметр("ОтборПоСодержанию"+НомерСтроки,"%"+строка+"%");			   
			НомерСтроки = НомерСтроки + 1;
		КонецЦикла;
		УсловиеОтбора = УсловиеОтбора+")";
		
		Условие= Условие + ?(Условие="",УсловиеОтбора," И "+УсловиеОтбора);

	КонецЕсли;
	Если ЗначениеЗаполнено(ЭлементыФормы.ПолеВводаДокумента.Значение) Тогда
		Условие= Условие + ?(Условие="","КорреспонденцииСчетов.ТипДокумента=&ТипДокумента"," И КорреспонденцииСчетов.ТипДокумента=&ТипДокумента");
	КонецЕсли;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПоследниеВыбранные.Ссылка,
	               |	ПоследниеВыбранные.Момент
	               |ПОМЕСТИТЬ Т_ПоследниеВыбранные
	               |ИЗ
	               |	&ПоследниеВыбранныеХО КАК ПоследниеВыбранные
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ПоследниеВыбранные.Момент КАК Момент,
	               |	КорреспонденцииСчетов.Содержание,
	               |	КорреспонденцииСчетов.Ссылка,
	               |	КорреспонденцииСчетов.СчетДт,
	               |	КорреспонденцииСчетов.СчетКт,
	               |	ВЫБОР
	               |		КОГДА КорреспонденцииСчетов.ВидОперацииДокумента = """"
	               |			ТОГДА """"
	               |		ИНАЧЕ ""операция """""" + КорреспонденцииСчетов.ВидОперацииДокумента + """"""""
	               |	КОНЕЦ КАК ВидОперацииДокумента,
	               |	ВЫБОР
	               |		КОГДА КорреспонденцииСчетов.ЗакладкаДокумента = """"
	               |			ТОГДА """"
	               |		ИНАЧЕ ""закладка """""" + КорреспонденцииСчетов.ЗакладкаДокумента + """"""""
	               |	КОНЕЦ КАК ЗакладкаДокумента,
	               |	"""" + КорреспонденцииСчетов.ТипДокумента + """" КАК Документ,
	               |	""меню """""" + КорреспонденцииСчетов.Меню + """""""" КАК Меню
	               |ИЗ
	               |	Т_ПоследниеВыбранные КАК ПоследниеВыбранные
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КорреспонденцииСчетов КАК КорреспонденцииСчетов
	               |		ПО ПоследниеВыбранные.Ссылка = КорреспонденцииСчетов.Ссылка
	               |
	               |"+?(Условие = "","","ГДЕ "+Условие)+" 
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Момент УБЫВ";
		
	ТабличноеПолеПоследних = Запрос.Выполнить().Выгрузить();

КонецПроцедуры

Процедура КнопкаВыбратьНажатие(Элемент)
	
	Если ЭлементыФормы.Панель.ТекущаяСтраница = ЭлементыФормы.Панель.Страницы.Страница1 Тогда
		Если ЭлементыФормы.ТабличноеПолеВсех.ТекущаяСтрока = неопределено Тогда
			Возврат;
		КонецЕсли;
		ТабличноеПолеВсехВыбор(,ЭлементыФормы.ТабличноеПолеВсех.ТекущаяСтрока,,);
	Иначе
		Если ЭлементыФормы.ТабличноеПолеПоследних.ТекущаяСтрока = неопределено Тогда
			Возврат;
		КонецЕсли;
		ТабличноеПолеВсехВыбор(,ЭлементыФормы.ТабличноеПолеПоследних.ТекущаяСтрока,,);
	КонецЕсли;
	
КонецПроцедуры

Процедура КнопкаЗакрытьНажатие(Элемент)
	
	Закрыть();
	
КонецПроцедуры

Процедура ПолеВводаСодержанияОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	Если Текст = "" Тогда
		Возврат;
	КонецЕсли;
	
	НайденныйОтбор = ОтборыПоСодержанию.НайтиПоЗначению(Текст);
	Если НайденныйОтбор = неопределено ТОгда
		ОтборыПоСодержанию.Вставить(0,Текст);
		Если ОтборыПоСодержанию.Количество()=11 Тогда
			ОтборыПоСодержанию.Удалить(10);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПолеВводаСодержанияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ЭлементыФормы.ПолеВводаДокумента.Значение = ВыбранноеЗначение;
	
КонецПроцедуры







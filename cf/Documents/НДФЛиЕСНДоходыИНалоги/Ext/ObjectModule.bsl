Перем мДатаОтменыЕСН;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ РАБОТЫ ФОРМ


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Формирует запрос по шапке документа
//
// Параметры: 
//  Режим        - режим проведения.
//
// Возвращаемое значение:
//  Результат запроса.
//
Функция СформироватьЗапросПоШапке(Режим)

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДФЛиЕСНДоходыИНалоги.Дата,
	|	НДФЛиЕСНДоходыИНалоги.Организация,
	|	ВЫБОР
	|		КОГДА НДФЛиЕСНДоходыИНалоги.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА НДФЛиЕСНДоходыИНалоги.Организация
	|		ИНАЧЕ НДФЛиЕСНДоходыИНалоги.Организация.ГоловнаяОрганизация
	|	КОНЕЦ КАК ГоловнаяОрганизация,
	|	НДФЛиЕСНДоходыИНалоги.НалоговыйПериод,
	|	НДФЛиЕСНДоходыИНалоги.Ссылка
	|ИЗ
	|	Документ.НДФЛиЕСНДоходыИНалоги КАК НДФЛиЕСНДоходыИНалоги
	|ГДЕ
	|	НДФЛиЕСНДоходыИНалоги.Ссылка = &ДокументСсылка";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоШапке()

// Формирует запрос по табличным частям документам
//
// Параметры: 
//  Режим        - режим проведения.
//
// Возвращаемое значение:
//  Результат запроса.
//
Функция СформироватьЗапросПоПособияСоциальномуСтрахованию()
	
	Запрос = Новый Запрос;
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ПособияСоциальномуСтрахованию.ПериодРегистрации, МЕСЯЦ) КАК Период,
	|	ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования,
	|	ПособияСоциальномуСтрахованию.ОблагаетсяЕНВД,
	|	СУММА(ПособияСоциальномуСтрахованию.ОплаченныеДни) КАК ОплаченныеДни,
	|	ВЫБОР
	|		КОГДА (НЕ ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования В (ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай)))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ПустаяСсылка)
	|		КОГДА ПособияСоциальномуСтрахованию.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ПустаяСсылка)
	|	КОНЕЦ КАК ВидЗанятости,
	|	СУММА(ВЫБОР
	|		КОГДА ПособияСоциальномуСтрахованию.УчитыватьКакНовыйСтраховойСлучай
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|		КОНЕЦ) КАК СтраховыеСлучаи,
	|	СУММА(ПособияСоциальномуСтрахованию.СуммаВсего) КАК СуммаВсего,
	|	СУММА(ПособияСоциальномуСтрахованию.СуммаСверхНорм) КАК СуммаСверхНорм,
	|	ПособияСоциальномуСтрахованию.Сотрудник,
	|	ПособияСоциальномуСтрахованию.ДатаСтраховогоСлучая,
	|	ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета
	|ИЗ
	|	Документ.НДФЛиЕСНДоходыИНалоги.ПособияСоциальномуСтрахованию КАК ПособияСоциальномуСтрахованию
	|ГДЕ
	|	ПособияСоциальномуСтрахованию.Ссылка = &ДокументСсылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования,
	|	ПособияСоциальномуСтрахованию.ОблагаетсяЕНВД,
	|	ПособияСоциальномуСтрахованию.Сотрудник,
	|	ПособияСоциальномуСтрахованию.ДатаСтраховогоСлучая,
	|	НАЧАЛОПЕРИОДА(ПособияСоциальномуСтрахованию.ПериодРегистрации, МЕСЯЦ),
	|	ВЫБОР
	|		КОГДА (НЕ ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования В (ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай)))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ПустаяСсылка)
	|		КОГДА ПособияСоциальномуСтрахованию.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ПустаяСсылка)
	|	КОНЕЦ,
	|	ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета";
	
	
	Возврат Запрос.Выполнить();

КонецФункции

// Формирует запрос по табличным частям документам
//
// Параметры: 
//  Режим        - режим проведения.
//
// Возвращаемое значение:
//  Результат запроса.
//
Функция СформироватьЗапросПоПособияПоУходуЗаРебенкомДоПолутораЛет()
	
	Запрос = Новый Запрос;
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ПособияПоУходуЗаРебенком.ПериодРегистрации, МЕСЯЦ) КАК Период,
	|	ПособияПоУходуЗаРебенком.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	ПособияПоУходуЗаРебенком.Сотрудник.Физлицо КАК Физлицо,
	|	ИСТИНА КАК УходЗаПервымРебенком,
	|	ВЫБОР
	|		КОГДА ПособияПоУходуЗаРебенком.ПособиеПоУходуЗаПервымРебенком <> 0
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтраховыеСлучаи,
	|	СУММА(ПособияПоУходуЗаРебенком.ПособиеПоУходуЗаПервымРебенком) КАК СуммаВсего,
	|	СУММА(ПособияПоУходуЗаРебенком.ПособиеПоУходуЗаПервымРебенкомСверхНорм) КАК СуммаСверхНорм,
	|	ПособияПоУходуЗаРебенком.Сотрудник КАК Сотрудник,
	|	ПособияПоУходуЗаРебенком.ПериодДействияНачало КАК ДатаСтраховогоСлучая,
	|	ПособияПоУходуЗаРебенком.ВыплатаЗаСчетФедеральногоБюджета
	|ИЗ
	|	Документ.НДФЛиЕСНДоходыИНалоги.ПособияПоУходуЗаРебенкомДоПолутораЛет КАК ПособияПоУходуЗаРебенком
	|ГДЕ
	|	ПособияПоУходуЗаРебенком.Ссылка = &ДокументСсылка
	|	И (ПособияПоУходуЗаРебенком.ПособиеПоУходуЗаПервымРебенком <> 0
	|			ИЛИ ПособияПоУходуЗаРебенком.ПособиеПоУходуЗаПервымРебенкомСверхНорм <> 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПособияПоУходуЗаРебенком.ОблагаетсяЕНВД,
	|	ПособияПоУходуЗаРебенком.Сотрудник,
	|	ПособияПоУходуЗаРебенком.ПериодДействияНачало,
	|	НАЧАЛОПЕРИОДА(ПособияПоУходуЗаРебенком.ПериодРегистрации, МЕСЯЦ),
	|	ПособияПоУходуЗаРебенком.Сотрудник.Физлицо,
	|	ВЫБОР
	|		КОГДА ПособияПоУходуЗаРебенком.ПособиеПоУходуЗаПервымРебенком <> 0
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ПособияПоУходуЗаРебенком.ВыплатаЗаСчетФедеральногоБюджета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ПособияПоУходуЗаРебенком.ПериодРегистрации, МЕСЯЦ),
	|	ПособияПоУходуЗаРебенком.ОблагаетсяЕНВД,
	|	ПособияПоУходуЗаРебенком.Сотрудник.Физлицо,
	|	ЛОЖЬ,
	|	ВЫБОР
	|		КОГДА ПособияПоУходуЗаРебенком.ПособиеПоУходуЗаВторымРебенком <> 0
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	СУММА(ПособияПоУходуЗаРебенком.ПособиеПоУходуЗаВторымРебенком),
	|	СУММА(ПособияПоУходуЗаРебенком.ПособиеПоУходуЗаВторымРебенкомСверхНорм),
	|	ПособияПоУходуЗаРебенком.Сотрудник,
	|	ПособияПоУходуЗаРебенком.ПериодДействияНачало,
	|	ПособияПоУходуЗаРебенком.ВыплатаЗаСчетФедеральногоБюджета
	|ИЗ
	|	Документ.НДФЛиЕСНДоходыИНалоги.ПособияПоУходуЗаРебенкомДоПолутораЛет КАК ПособияПоУходуЗаРебенком
	|ГДЕ
	|	ПособияПоУходуЗаРебенком.Ссылка = &ДокументСсылка
	|	И (ПособияПоУходуЗаРебенком.ПособиеПоУходуЗаВторымРебенком <> 0
	|			ИЛИ ПособияПоУходуЗаРебенком.ПособиеПоУходуЗаВторымРебенкомСверхНорм <> 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПособияПоУходуЗаРебенком.ОблагаетсяЕНВД,
	|	ПособияПоУходуЗаРебенком.Сотрудник,
	|	ПособияПоУходуЗаРебенком.ПериодДействияНачало,
	|	НАЧАЛОПЕРИОДА(ПособияПоУходуЗаРебенком.ПериодРегистрации, МЕСЯЦ),
	|	ПособияПоУходуЗаРебенком.Сотрудник.Физлицо,
	|	ВЫБОР
	|		КОГДА ПособияПоУходуЗаРебенком.ПособиеПоУходуЗаВторымРебенком <> 0
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ПособияПоУходуЗаРебенком.ВыплатаЗаСчетФедеральногоБюджета";
	
	Возврат Запрос.Выполнить();

КонецФункции

// Формирует запрос по табличным частям документам
//
// Параметры: 
//  Режим        - режим проведения.
//
// Возвращаемое значение:
//  Результат запроса.
//
Функция СформироватьЗапросЗаработкиПолучателейПособияПоУходуЗаРебенкомДоПолутораЛет()
	
	Запрос = Новый Запрос;
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаработкиПолучателей.Физлицо,
	|	ЗаработкиПолучателей.Период,
	|	ЗаработкиПолучателей.ОблагаетсяЕНВД,
	|	ЗаработкиПолучателей.РазмерСреднегоЗаработка,
	|	ЗаработкиПолучателей.ДокументОснование,
	|	МАКСИМУМ(ПолучателиПособийПоУходу.Сотрудник) КАК Сотрудник
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПолучателиПособийПоУходу.Сотрудник.Физлицо КАК Физлицо,
	|		НАЧАЛОПЕРИОДА(ПолучателиПособийПоУходу.ПериодРегистрации, МЕСЯЦ) КАК Период,
	|		ПолучателиПособийПоУходу.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|		МАКСИМУМ(ПолучателиПособийПоУходу.СреднийДневнойЗаработок) КАК РазмерСреднегоЗаработка,
	|		ПолучателиПособийПоУходу.Ссылка КАК ДокументОснование
	|	ИЗ
	|		Документ.НДФЛиЕСНДоходыИНалоги.ПособияПоУходуЗаРебенкомДоПолутораЛет КАК ПолучателиПособийПоУходу
	|	ГДЕ
	|		ПолучателиПособийПоУходу.Ссылка = &ДокументСсылка
	|	
	|	СГРУППИРОВАТЬ ПО
	|		НАЧАЛОПЕРИОДА(ПолучателиПособийПоУходу.ПериодРегистрации, МЕСЯЦ),
	|		ПолучателиПособийПоУходу.Сотрудник.Физлицо,
	|		ПолучателиПособийПоУходу.ОблагаетсяЕНВД,
	|		ПолучателиПособийПоУходу.Ссылка) КАК ЗаработкиПолучателей
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.НДФЛиЕСНДоходыИНалоги.ПособияПоУходуЗаРебенкомДоПолутораЛет КАК ПолучателиПособийПоУходу
	|		ПО ЗаработкиПолучателей.Физлицо = ПолучателиПособийПоУходу.Сотрудник.Физлицо
	|			И (ЗаработкиПолучателей.Период = НАЧАЛОПЕРИОДА(ПолучателиПособийПоУходу.ПериодРегистрации, МЕСЯЦ))
	|			И ЗаработкиПолучателей.ОблагаетсяЕНВД = ПолучателиПособийПоУходу.ОблагаетсяЕНВД
	|			И ЗаработкиПолучателей.РазмерСреднегоЗаработка = ПолучателиПособийПоУходу.СреднийДневнойЗаработок
	|ГДЕ
	|	ПолучателиПособийПоУходу.Ссылка = &ДокументСсылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаработкиПолучателей.Физлицо,
	|	ЗаработкиПолучателей.Период,
	|	ЗаработкиПолучателей.ОблагаетсяЕНВД,
	|	ЗаработкиПолучателей.РазмерСреднегоЗаработка,
	|	ЗаработкиПолучателей.ДокументОснование";
	
	Возврат Запрос.Выполнить();

КонецФункции

// Формирует запрос по табличным частям документам
//
// Параметры: 
//  Режим        - режим проведения.
//
// Возвращаемое значение:
//  Результат запроса.
//
Функция СформироватьЗапросПоТабличнымЧастям(Режим)

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);
	Запрос.УстановитьПараметр("СтавкаНалогообложения13" , Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка13);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	""НДФЛСведенияОДоходах"" КАК ВидСтрокиЗапроса,
	|	НДФЛиЕСНДоходыИНалогиНДФЛСведенияОДоходах.НомерСтроки,
	|	НДФЛиЕСНДоходыИНалогиНДФЛСведенияОДоходах.ФизЛицо,
	|	НДФЛиЕСНДоходыИНалогиНДФЛСведенияОДоходах.МесяцНалоговогоПериода,
	|	НДФЛиЕСНДоходыИНалогиНДФЛСведенияОДоходах.ПериодРегистрации,
	|	НДФЛиЕСНДоходыИНалогиНДФЛСведенияОДоходах.КодДохода,
	|	НДФЛиЕСНДоходыИНалогиНДФЛСведенияОДоходах.СуммаДохода,
	|	НДФЛиЕСНДоходыИНалогиНДФЛСведенияОДоходах.КодВычета,
	|	НДФЛиЕСНДоходыИНалогиНДФЛСведенияОДоходах.СуммаВычета,
	|	НДФЛиЕСНДоходыИНалогиНДФЛСведенияОДоходах.СуммаНалогаИсчисленная КАК СуммаНалога,
	|	НДФЛиЕСНДоходыИНалогиНДФЛСведенияОДоходах.КодДохода.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	НДФЛиЕСНДоходыИНалогиНДФЛСведенияОДоходах.КПП КАК КПП,
	|	НДФЛиЕСНДоходыИНалогиНДФЛСведенияОДоходах.КодПоОКАТО КАК КодПоОКАТО,
	|	НДФЛиЕСНДоходыИНалогиНДФЛСведенияОДоходах.КоличествоДетей,
	|	NULL КАК ОблагаетсяЕНВД,
	|	NULL КАК ФедеральныйБюджет,
	|	NULL КАК ФСС,
	|	NULL КАК ФФОМС,
	|	NULL КАК ТФОМС,
	|	NULL КАК ПФРНакопительная,
	|	NULL КАК ПФРСтраховая,
	|	NULL КАК ПФРНакопительнаяЕНВД,
	|	NULL КАК ПФРСтраховаяЕНВД,
	|	NULL КАК ПримененнаяЛьготаФБ,
	|	NULL КАК ПримененнаяЛьготаФСС,
	|	NULL КАК ПримененнаяЛьготаФОМС,
	|	NULL КАК ОшибкаУказанияКодаДохода
	|ИЗ
	|	Документ.НДФЛиЕСНДоходыИНалоги.НДФЛСведенияОДоходах КАК НДФЛиЕСНДоходыИНалогиНДФЛСведенияОДоходах
	|ГДЕ
	|	НДФЛиЕСНДоходыИНалогиНДФЛСведенияОДоходах.Ссылка = &ДокументСсылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""НДФЛИсчисленный13"",
	|	НДФЛиЕСНДоходыИНалогиНДФЛИсчисленный13.НомерСтроки,
	|	НДФЛиЕСНДоходыИНалогиНДФЛИсчисленный13.ФизЛицо,
	|	НДФЛиЕСНДоходыИНалогиНДФЛИсчисленный13.МесяцНалоговогоПериода,
	|	НДФЛиЕСНДоходыИНалогиНДФЛИсчисленный13.ПериодРегистрации,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	НДФЛиЕСНДоходыИНалогиНДФЛИсчисленный13.Налог,
	|	&СтавкаНалогообложения13,
	|	НДФЛиЕСНДоходыИНалогиНДФЛИсчисленный13.КПП,
	|	НДФЛиЕСНДоходыИНалогиНДФЛИсчисленный13.КодПоОКАТО,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	Документ.НДФЛиЕСНДоходыИНалоги.НДФЛИсчисленный13 КАК НДФЛиЕСНДоходыИНалогиНДФЛИсчисленный13
	|ГДЕ
	|	НДФЛиЕСНДоходыИНалогиНДФЛИсчисленный13.Ссылка = &ДокументСсылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""НДФЛУдержанный"",
	|	НДФЛиЕСНДоходыИНалогиНДФЛУдержанный.НомерСтроки,
	|	НДФЛиЕСНДоходыИНалогиНДФЛУдержанный.ФизЛицо,
	|	НДФЛиЕСНДоходыИНалогиНДФЛУдержанный.МесяцНалоговогоПериода,
	|	НДФЛиЕСНДоходыИНалогиНДФЛУдержанный.ПериодРегистрации,
	|	НДФЛиЕСНДоходыИНалогиНДФЛУдержанный.КодДохода,
	|	NULL,
	|	NULL,
	|	NULL,
	|	НДФЛиЕСНДоходыИНалогиНДФЛУдержанный.Налог,
	|	НДФЛиЕСНДоходыИНалогиНДФЛУдержанный.СтавкаНалогообложения,
	|	НДФЛиЕСНДоходыИНалогиНДФЛУдержанный.КПП,
	|	НДФЛиЕСНДоходыИНалогиНДФЛУдержанный.КодПоОКАТО,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ВЫБОР
	|		КОГДА НДФЛиЕСНДоходыИНалогиНДФЛУдержанный.КодДохода.СтавкаНалогообложенияРезидента <> НДФЛиЕСНДоходыИНалогиНДФЛУдержанный.СтавкаНалогообложения
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|ИЗ
	|	Документ.НДФЛиЕСНДоходыИНалоги.НДФЛУдержанный КАК НДФЛиЕСНДоходыИНалогиНДФЛУдержанный
	|ГДЕ
	|	НДФЛиЕСНДоходыИНалогиНДФЛУдержанный.Ссылка = &ДокументСсылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""ЕСНСведенияОДоходах"",
	|	НДФЛиЕСНДоходыИНалогиЕСНСведенияОДоходах.НомерСтроки,
	|	НДФЛиЕСНДоходыИНалогиЕСНСведенияОДоходах.ФизЛицо,
	|	НДФЛиЕСНДоходыИНалогиЕСНСведенияОДоходах.МесяцНалоговогоПериода,
	|	NULL,
	|	НДФЛиЕСНДоходыИНалогиЕСНСведенияОДоходах.КодДоходаЕСН,
	|	НДФЛиЕСНДоходыИНалогиЕСНСведенияОДоходах.СуммаДохода,
	|	NULL,
	|	НДФЛиЕСНДоходыИНалогиЕСНСведенияОДоходах.Скидка,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	НДФЛиЕСНДоходыИНалогиЕСНСведенияОДоходах.ОблагаетсяЕНВД,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	Документ.НДФЛиЕСНДоходыИНалоги.ЕСНСведенияОДоходах КАК НДФЛиЕСНДоходыИНалогиЕСНСведенияОДоходах
	|ГДЕ
	|	НДФЛиЕСНДоходыИНалогиЕСНСведенияОДоходах.Ссылка = &ДокументСсылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""ЕСННалоги"",
	|	НДФЛиЕСНДоходыИНалогиЕСННалоги.НомерСтроки,
	|	НДФЛиЕСНДоходыИНалогиЕСННалоги.ФизЛицо,
	|	НДФЛиЕСНДоходыИНалогиЕСННалоги.МесяцНалоговогоПериода,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	НДФЛиЕСНДоходыИНалогиЕСННалоги.ФедеральныйБюджет,
	|	НДФЛиЕСНДоходыИНалогиЕСННалоги.ФСС,
	|	НДФЛиЕСНДоходыИНалогиЕСННалоги.ФФОМС,
	|	НДФЛиЕСНДоходыИНалогиЕСННалоги.ТФОМС,
	|	НДФЛиЕСНДоходыИНалогиЕСННалоги.ПФРНакопительная,
	|	НДФЛиЕСНДоходыИНалогиЕСННалоги.ПФРСтраховая,
	|	НДФЛиЕСНДоходыИНалогиЕСННалоги.ПФРНакопительнаяЕНВД,
	|	НДФЛиЕСНДоходыИНалогиЕСННалоги.ПФРСтраховаяЕНВД,
	|	НДФЛиЕСНДоходыИНалогиЕСННалоги.ПримененнаяЛьготаФБ,
	|	НДФЛиЕСНДоходыИНалогиЕСННалоги.ПримененнаяЛьготаФСС,
	|	НДФЛиЕСНДоходыИНалогиЕСННалоги.ПримененнаяЛьготаФОМС,
	|	NULL
	|ИЗ
	|	Документ.НДФЛиЕСНДоходыИНалоги.ЕСННалоги КАК НДФЛиЕСНДоходыИНалогиЕСННалоги
	|ГДЕ
	|	НДФЛиЕСНДоходыИНалогиЕСННалоги.Ссылка = &ДокументСсылка";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоШапке()

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизитов шапки, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по шапке,
// все проверяемые реквизиты должны быть включены в выборку по шапке.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента	- выборка из результата запроса по шапке документа,
//  Отказ 		 - флаг отказа в проведении,
//	Заголовок	 - Заголовок для сообщений об ошибках проведения.
//
Процедура ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок)

	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Организация) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указана организация!", Отказ, Заголовок);
	КонецЕсли;

КонецПроцедуры // ПроверитьЗаполнениеШапки()

// Проверяет правильность заполнения строки документа.
Процедура ПроверитьЗаполнениеСтрокиТЧ(ВыборкаПоТЧ, Отказ, Заголовок)

	Если ВыборкаПоТЧ.ВидСтрокиЗапроса = "НДФЛСведенияОДоходах" Тогда
		
		НачалоСообщения = "В строке № """+ СокрЛП(ВыборкаПоТЧ.НомерСтроки) +
									""" табл. части ""НДФЛ: доходы и налоги"": ";
									
		Если НЕ ЗначениеЗаполнено(ВыборкаПоТЧ.ФизЛицо) Тогда
			ОбщегоНазначения.СообщитьОбОшибке(НачалоСообщения + "не указано физическое лицо!", Отказ, Заголовок);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ВыборкаПоТЧ.МесяцНалоговогоПериода) Тогда
			ОбщегоНазначения.СообщитьОбОшибке(НачалоСообщения + "не указана дата получения дохода!", Отказ, Заголовок);
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ВыборкаПоТЧ.ПериодРегистрации) Тогда
			ОбщегоНазначения.СообщитьОбОшибке(НачалоСообщения + "не указан период регистрации дохода!", Отказ, Заголовок);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ВыборкаПоТЧ.КодДохода) Тогда
			ОбщегоНазначения.СообщитьОбОшибке(НачалоСообщения + "не указан код дохода!", Отказ, Заголовок);
		КонецЕсли;
	
	ИначеЕсли ВыборкаПоТЧ.ВидСтрокиЗапроса = "НДФЛИсчисленный13" Тогда
		
		НачалоСообщения = "В строке № """+ СокрЛП(ВыборкаПоТЧ.НомерСтроки) +
									""" табл. части ""НДФЛ по ставке 13%"": ";
									
		Если НЕ ЗначениеЗаполнено(ВыборкаПоТЧ.ФизЛицо) Тогда
			ОбщегоНазначения.СообщитьОбОшибке(НачалоСообщения + "не указано физическое лицо!", Отказ, Заголовок);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ВыборкаПоТЧ.МесяцНалоговогоПериода) Тогда
			ОбщегоНазначения.СообщитьОбОшибке(НачалоСообщения + "не указан месяц налогового периода!", Отказ, Заголовок);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ВыборкаПоТЧ.ПериодРегистрации) Тогда
			ОбщегоНазначения.СообщитьОбОшибке(НачалоСообщения + "не указан период регистрации!", Отказ, Заголовок);
		КонецЕсли;
		
	ИначеЕсли ВыборкаПоТЧ.ВидСтрокиЗапроса = "НДФЛУдержанный" Тогда
		
		НачалоСообщения = "В строке № """+ СокрЛП(ВыборкаПоТЧ.НомерСтроки) +
									""" табл. части ""НДФЛ удержанный"": ";
									
		Если НЕ ЗначениеЗаполнено(ВыборкаПоТЧ.ФизЛицо) Тогда
			ОбщегоНазначения.СообщитьОбОшибке(НачалоСообщения + "не указано физическое лицо!", Отказ, Заголовок);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ВыборкаПоТЧ.МесяцНалоговогоПериода) Тогда
			ОбщегоНазначения.СообщитьОбОшибке(НачалоСообщения + "не указан месяц налогового периода!", Отказ, Заголовок);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ВыборкаПоТЧ.ПериодРегистрации) Тогда
			ОбщегоНазначения.СообщитьОбОшибке(НачалоСообщения + "не указан период регистрации!", Отказ, Заголовок);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ВыборкаПоТЧ.СтавкаНалогообложенияРезидента) Тогда
			ОбщегоНазначения.СообщитьОбОшибке(НачалоСообщения + "не указана ставка налога!", Отказ, Заголовок);
		ИначеЕсли ЗначениеЗаполнено(ВыборкаПоТЧ.КодДохода) И ВыборкаПоТЧ.ОшибкаУказанияКодаДохода Тогда	
			ОбщегоНазначения.СообщитьОбОшибке(НачалоСообщения + "неверно указан код дохода, для которого зарегистрирован налог!", Отказ, Заголовок);
		КонецЕсли;
		
	ИначеЕсли ВыборкаПоТЧ.ВидСтрокиЗапроса = "ЕСНСведенияОДоходах" Тогда
		
		НачалоСообщения = "В строке № """+ СокрЛП(ВыборкаПоТЧ.НомерСтроки) +
							""" табл. части ""ЕСН: доходы"": ";
		
		Если НЕ ЗначениеЗаполнено(ВыборкаПоТЧ.ФизЛицо) Тогда
			ОбщегоНазначения.СообщитьОбОшибке(НачалоСообщения + "не указано физическое лицо!", Отказ, Заголовок);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ВыборкаПоТЧ.МесяцНалоговогоПериода) Тогда
			ОбщегоНазначения.СообщитьОбОшибке(НачалоСообщения + "не указан месяц налогового периода!", Отказ, Заголовок);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ВыборкаПоТЧ.КодДохода) Тогда
			ОбщегоНазначения.СообщитьОбОшибке(НачалоСообщения + "не указан код дохода!", Отказ, Заголовок);
		КонецЕсли;
		
	ИначеЕсли ВыборкаПоТЧ.ВидСтрокиЗапроса = "ЕСННалоги" Тогда
		
		НачалоСообщения = "В строке № """+ СокрЛП(ВыборкаПоТЧ.НомерСтроки) +
							""" табл. части ""ЕСН: налоги"": ";
		
		Если НЕ ЗначениеЗаполнено(ВыборкаПоТЧ.ФизЛицо) Тогда
			ОбщегоНазначения.СообщитьОбОшибке(НачалоСообщения + "не указано физическое лицо!", Отказ, Заголовок);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ВыборкаПоТЧ.МесяцНалоговогоПериода) Тогда
			ОбщегоНазначения.СообщитьОбОшибке(НачалоСообщения + "не указан месяц налогового периода!", Отказ, Заголовок);
		КонецЕсли;
		
	КонецЕсли; 
	
КонецПроцедуры // ПроверитьЗаполнениеСтрокиТЧ()

Процедура ПроверитьЗаполнениеСтрокиСтраховыеВзносыСведенияОДоходах(ВыборкаПоТЧ, Отказ, Заголовок)

	НачалоСообщения = "В строке № """+ СокрЛП(ВыборкаПоТЧ.НомерСтроки) +
	""" табл. части ""Учет доходов по страховым взносам"": ";
	
	Если Не ЗначениеЗаполнено(ВыборкаПоТЧ.ФизЛицо) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(НачалоСообщения + "не указано физическое лицо!", Отказ, Заголовок);
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ВыборкаПоТЧ.МесяцРасчетногоПериода) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(НачалоСообщения + "не указан месяц налогового периода!", Отказ, Заголовок);
	ИначеЕсли НачалоМесяца(ВыборкаПоТЧ.МесяцРасчетногоПериода) < мДатаОтменыЕСН Тогда
		ОбщегоНазначения.СообщитьОбОшибке(НачалоСообщения + "неверно указан месяц расчетного периода, страховые взносы заменят ЕСН только с 2010 года!", Отказ, Заголовок);
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ВыборкаПоТЧ.ВидДохода) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(НачалоСообщения + "не указан вид дохода!", Отказ, Заголовок);
	КонецЕсли;
		
КонецПроцедуры // ПроверитьЗаполнениеСтрокиТЧ()

Процедура ПроверитьЗаполнениеСтрокиСтраховыеВзносы(ВыборкаПоТЧ, Отказ, Заголовок)

	НачалоСообщения = "В строке № """+ СокрЛП(ВыборкаПоТЧ.НомерСтроки) +
	""" табл. части ""Исчислено взносов в ПФР, ФСС и ФОМС"": ";
	
	Если Не ЗначениеЗаполнено(ВыборкаПоТЧ.ФизЛицо) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(НачалоСообщения + "не указано физическое лицо!", Отказ, Заголовок);
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ВыборкаПоТЧ.МесяцРасчетногоПериода) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(НачалоСообщения + "не указан месяц расчетного периода!", Отказ, Заголовок);
	ИначеЕсли НачалоМесяца(ВыборкаПоТЧ.МесяцРасчетногоПериода) < мДатаОтменыЕСН Тогда
		ОбщегоНазначения.СообщитьОбОшибке(НачалоСообщения + "неверно указан месяц расчетного периода, страховые взносы заменят ЕСН только с 2010 года!", Отказ, Заголовок);
	КонецЕсли;
		
КонецПроцедуры // ПроверитьЗаполнениеСтрокиТЧ()

Процедура ПроверитьЗаполнениеСтрокиВычетов(ВыборкаПоТЧ, Отказ, Заголовок)
	
	НачалоСообщения = "В строке № """+ СокрЛП(ВыборкаПоТЧ.НомерСтроки) +
	""" табл. части ""НДФЛ по ставке 13% - Предоставлено вычетов"": ";
	
	Если НЕ ЗначениеЗаполнено(ВыборкаПоТЧ.ФизЛицо) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(НачалоСообщения + "не указано физическое лицо!", Отказ, Заголовок);
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ВыборкаПоТЧ.МесяцНалоговогоПериода) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(НачалоСообщения + "не указан месяц налогового периода!", Отказ, Заголовок);
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ВыборкаПоТЧ.КодВычета) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(НачалоСообщения + "не указан код предоставленного вычета!", Отказ, Заголовок);
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ВыборкаПоТЧ.ПериодРегистрации) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(НачалоСообщения + "не указан период регистрации!", Отказ, Заголовок);
	КонецЕсли;
	
КонецПроцедуры // ПроверитьЗаполнениеСтрокиВычетов()


Процедура ПроверитьЗаполнениеСтрокиПособия(ВыборкаПоТЧ, Отказ, Заголовок)
	
	НачалоСообщения = "В строке № """+ СокрЛП(ВыборкаПоТЧ.НомерСтроки) +
									""" табл. части ""ФСС: расходы"": ";
									
	Если НЕ ЗначениеЗаполнено(ВыборкаПоТЧ.ВидПособияСоциальногоСтрахования) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(НачалоСообщения + "не указан вид пособия!", Отказ, Заголовок);
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ВыборкаПоТЧ.ПериодРегистрации) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(НачалоСообщения + "не указана дата регистрации пособия!", Отказ, Заголовок);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВыборкаПоТЧ.ДатаСтраховогоСлучая) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(НачалоСообщения + "не указана дата страхового случая!", Отказ, Заголовок);
	КонецЕсли;
	
КонецПроцедуры // ПроверитьЗаполнениеСтрокиПособия()

Процедура ПроверитьЗаполнениеСтрокиПособияПоУходу(ВыборкаПоТЧ, Отказ, Заголовок)
	
	НачалоСообщения = "В строке № """+ СокрЛП(ВыборкаПоТЧ.НомерСтроки) +
									""" табл. части ""ФСС: по уходу за ребенком"": ";
									
	Если НЕ ЗначениеЗаполнено(ВыборкаПоТЧ.Сотрудник) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(НачалоСообщения + "не указан работник!", Отказ, Заголовок);
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ВыборкаПоТЧ.ПериодРегистрации) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(НачалоСообщения + "не указана дата регистрации пособия!", Отказ, Заголовок);
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ВыборкаПоТЧ.ПериодДействияНачало) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(НачалоСообщения + "не указана дата начала периода выплаты пособия!", Отказ, Заголовок);
	КонецЕсли;
	
КонецПроцедуры // ПроверитьЗаполнениеСтрокиПособияПоУходу()

// По строке выборки результата запроса по документу формируем движения по регистрам
//
// Параметры: 
//  ВыборкаПоШапкеДокумента                  - выборка из результата запроса по шапке документа
//  СтруктураПроведенияПоРегистрамНакопления - структура, содержащая имена регистров 
//                                             накопления по которым надо проводить документ
//  СтруктураПараметров                      - структура параметров проведения.
//
// Возвращаемое значение:
//  Нет.
//
Процедура ДобавитьСтрокуВДвиженияПоРегистрамНакопления(ВыборкаПоШапкеДокумента, ВыборкаПоТЧ)

	Если ВыборкаПоТЧ.ВидСтрокиЗапроса = "НДФЛСведенияОДоходах" Тогда
		
		Движение = Движения.НДФЛСведенияОДоходах.Добавить();
		
		ЗаполнитьЗначенияСвойств(Движение, ВыборкаПоТЧ);
		
		// Свойства
		Движение.Период             = ВыборкаПоТЧ.МесяцНалоговогоПериода;
		
		// Измерения
		Движение.Организация		= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
		Движение.ОбособленноеПодразделение  = ВыборкаПоШапкеДокумента.Организация;
		Движение.ПериодРегистрации	= НачалоМесяца(ВыборкаПоТЧ.ПериодРегистрации);
		
		// Реквизиты
		Если ВыборкаПоТЧ.СуммаНалога <>0 Тогда
			Движение = Движения.НДФЛРасчетыСБюджетом.Добавить();
			// Свойства
 			Движение.ВидДвижения			= ВидДвиженияНакопления.Приход;
			ЗаполнитьЗначенияСвойств(Движение, ВыборкаПоТЧ);
 			Движение.Организация					= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
			Движение.ОбособленноеПодразделение  = ВыборкаПоШапкеДокумента.Организация;
			Движение.Период                 = ВыборкаПоТЧ.ПериодРегистрации;
			Движение.Налог					= ВыборкаПоТЧ.СуммаНалога; 
			Движение.ВидСтроки				= Перечисления.НДФЛРасчетыСБюджетомВидСтроки.Начисление;
		КонецЕсли; 
	ИначеЕсли ВыборкаПоТЧ.ВидСтрокиЗапроса = "НДФЛИсчисленный13" Тогда
		
		Движение = Движения.НДФЛРасчетыСБюджетом.Добавить();
		
		// Свойства
		Движение.ВидДвижения			= ВидДвиженияНакопления.Приход;
		ЗаполнитьЗначенияСвойств(Движение, ВыборкаПоТЧ);
		// Налог с оплаты труда рассчитывается последним днём месяца
		Движение.Организация			= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
		Движение.ОбособленноеПодразделение  = ВыборкаПоШапкеДокумента.Организация;
		Движение.Период                 = КонецМесяца(ВыборкаПоТЧ.ПериодРегистрации);
		
		Движение.Налог					 = ВыборкаПоТЧ.СуммаНалога; 
		Движение.ВидСтроки				= Перечисления.НДФЛРасчетыСБюджетомВидСтроки.Начисление;			
				
		
	ИначеЕсли ВыборкаПоТЧ.ВидСтрокиЗапроса = "НДФЛУдержанный" Тогда
		
		
		Движение = Движения.НДФЛРасчетыСБюджетом.Добавить();
		
		// Свойства
		Движение.ВидДвижения			= ВидДвиженияНакопления.Расход;
		ЗаполнитьЗначенияСвойств(Движение, ВыборкаПоТЧ);
		
		
		// Измерения
		Движение.Организация					= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
		Движение.ОбособленноеПодразделение = ВыборкаПоШапкеДокумента.Организация;
		Движение.Период                 = ВыборкаПоТЧ.ПериодРегистрации;
		Движение.Налог					= ВыборкаПоТЧ.СуммаНалога; 
		Движение.ВидСтроки				= Перечисления.НДФЛРасчетыСБюджетомВидСтроки.Удержание;			

		
	ИначеЕсли ВыборкаПоТЧ.ВидСтрокиЗапроса = "ЕСНСведенияОДоходах" Тогда
		
		Движение = Движения.ЕСНСведенияОДоходах.Добавить();
		
		// Свойства
		Движение.Период                 = ВыборкаПоТЧ.МесяцНалоговогоПериода;
		
		// Измерения
		Движение.Организация			= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
		Движение.ФизЛицо                = ВыборкаПоТЧ.ФизЛицо;
		
		// Ресурсы
		
		// для договоров подряда доход запишем за минусом скидки (не облагается ЕСН)
		Если ВыборкаПоТЧ.КодДохода = Справочники.ДоходыЕСН.ДоговораАвторские
			Или ВыборкаПоТЧ.КодДохода = Справочники.ДоходыЕСН.ДоговораГПХ  Тогда
			Движение.Результат				= ВыборкаПоТЧ.СуммаДохода - ВыборкаПоТЧ.СуммаВычета; 
			Движение.Скидка					= 0; 
		Иначе			
			Движение.Результат				= ВыборкаПоТЧ.СуммаДохода; 
			Движение.Скидка					= ВыборкаПоТЧ.СуммаВычета; 
		КонецЕсли; 
		
		// Реквизиты
		Движение.КодДоходаЕСН           = ВыборкаПоТЧ.КодДохода;
		Движение.ОблагаетсяЕНВД         = ВыборкаПоТЧ.ОблагаетсяЕНВД;
		Движение.ОбособленноеПодразделение  = ВыборкаПоШапкеДокумента.Организация;
		
	ИначеЕсли ВыборкаПоТЧ.ВидСтрокиЗапроса = "ЕСННалоги" Тогда
		
		
		Движение = Движения.ЕСНИсчисленный.Добавить();
		
		// Свойства
		Движение.Период 					= ВыборкаПоТЧ.МесяцНалоговогоПериода;
		
		// Измерения
		Движение.Организация				= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
		Движение.ФизЛицо               		= ВыборкаПоТЧ.ФизЛицо;
		
		// Ресурсы
		Движение.ФедеральныйБюджет          = ВыборкаПоТЧ.ФедеральныйБюджет;
		Движение.ФСС       					= ВыборкаПоТЧ.ФСС;
		Движение.ФФОМС       				= ВыборкаПоТЧ.ФФОМС;
		Движение.ТФОМС       				= ВыборкаПоТЧ.ТФОМС;
		Движение.ПФРНакопительная       	= ВыборкаПоТЧ.ПФРНакопительная;
		Движение.ПФРСтраховая       		= ВыборкаПоТЧ.ПФРСтраховая;
		Движение.ПФРНакопительнаяЕНВД       = ВыборкаПоТЧ.ПФРНакопительнаяЕНВД;
		Движение.ПФРСтраховаяЕНВД       	= ВыборкаПоТЧ.ПФРСтраховаяЕНВД;
		Движение.ПримененнаяЛьготаФБ       	= ВыборкаПоТЧ.ПримененнаяЛьготаФБ;
		Движение.ПримененнаяЛьготаФСС       = ВыборкаПоТЧ.ПримененнаяЛьготаФСС;
		Движение.ПримененнаяЛьготаФОМС      = ВыборкаПоТЧ.ПримененнаяЛьготаФОМС;
		
		// Реквизиты
		Движение.ОбособленноеПодразделение  = ВыборкаПоШапкеДокумента.Организация;
		
	КонецЕсли;		  

КонецПроцедуры // ДобавитьСтрокуВДвиженияПоРегистрамНакопления

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, Режим)
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);	
	мДатаОтменыЕСН = ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами();

	РезультатЗапросаПоШапке = СформироватьЗапросПоШапке(Режим);

	// Получим реквизиты шапки из запроса
	ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();

	Если ВыборкаПоШапкеДокумента.Следующий() Тогда

		//Надо позвать проверку заполнения реквизитов шапки
		ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок);

		// Движения стоит добавлять, если в проведении еще не отказано (отказ = ложь)
		Если НЕ Отказ Тогда

			// получим реквизиты табличной части
			ВыборкаПоТабличнымЧастям = СформироватьЗапросПоТабличнымЧастям(Режим).Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

			Пока ВыборкаПоТабличнымЧастям.Следующий() Цикл 

				// проверим очередную строку табличной части
				ПроверитьЗаполнениеСтрокиТЧ(ВыборкаПоТабличнымЧастям, Отказ, Заголовок);
				
				Если НЕ Отказ Тогда
					// Заполним записи в наборах записей регистров
					ДобавитьСтрокуВДвиженияПоРегистрамНакопления(ВыборкаПоШапкеДокумента, ВыборкаПоТабличнымЧастям);
				КонецЕсли; 

			КонецЦикла;
			
			Если Движения.НДФЛРасчетыСБюджетом.Количество() > 0 Тогда
				Движения.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Загрузить(ПроведениеРасчетов.РасчетыНалоговогоАгентаПоУдержанномуНДФЛ(Движения.НДФЛРасчетыСБюджетом.Выгрузить()))
			КонецЕсли;
			
			Для каждого СтрокаТЧ Из НДФЛПредоставленныеВычеты  Цикл
				
				ПроверитьЗаполнениеСтрокиВычетов(СтрокаТЧ, Отказ, Заголовок);
				Если НЕ Отказ Тогда
					Если (СтрокаТЧ.КодВычета = Справочники.ВычетыНДФЛ.Код311 Или СтрокаТЧ.КодВычета = Справочники.ВычетыНДФЛ.Код312 Или СтрокаТЧ.КодВычета = Справочники.ВычетыНДФЛ.Код318) И СтрокаТЧ.ПримененныйВычет <> 0 Тогда
						
						Движение = Движения.НДФЛИмущественныеВычетыФизлиц.Добавить();
						ЗаполнитьЗначенияСвойств(Движение,СтрокаТЧ);
						
						Движение.Период						= КонецМесяца(СтрокаТЧ.ПериодРегистрации);
						Движение.ВидДвижения				= ВидДвиженияНакопления.Расход;
						Движение.Организация				= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
						Движение.ОбособленноеПодразделение  = ВыборкаПоШапкеДокумента.Организация;
						Движение.Год			    		= Год(СтрокаТЧ.МесяцНалоговогоПериода);
						Движение.Размер						= СтрокаТЧ.ПримененныйВычет; 
						Движение.КодВычетаИмущественный		= СтрокаТЧ.КодВычета; 
						
					ИначеЕсли СтрокаТЧ.ПримененныйВычет <> 0 Тогда
						
						Движение = Движения.НДФЛПредоставленныеСтандартныеВычетыФизЛиц.Добавить();
						ЗаполнитьЗначенияСвойств(Движение,СтрокаТЧ);
						
						Движение.Период						= КонецМесяца(СтрокаТЧ.ПериодРегистрации);
						Движение.Организация				= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
						Движение.ОбособленноеПодразделение  = ВыборкаПоШапкеДокумента.Организация;
					КонецЕсли;
				КонецЕсли;
				
			КонецЦикла;
			Для каждого СтрокаТЧ Из ПособияСоциальномуСтрахованию Цикл
				// проверим очередную строку табличной части
				ПроверитьЗаполнениеСтрокиПособия(СтрокаТЧ, Отказ, Заголовок);
			КонецЦикла; 
			
			Если НЕ Отказ Тогда
				Выборка = СформироватьЗапросПоПособияСоциальномуСтрахованию().Выбрать();
				Пока Выборка.Следующий() Цикл 
					
					Движение = Движения.ПособияСоциальномуСтрахованию.Добавить();
					ЗаполнитьЗначенияСвойств(Движение,ВыборкаПоШапкеДокумента,"Организация");
					ЗаполнитьЗначенияСвойств(Движение,Выборка);

					
				КонецЦикла;
			КонецЕсли; 
			
			Для каждого СтрокаТЧ Из ПособияПоУходуЗаРебенкомДоПолутораЛет Цикл
				// проверим очередную строку табличной части
				ПроверитьЗаполнениеСтрокиПособияПоУходу(СтрокаТЧ, Отказ, Заголовок);
			КонецЦикла; 
			Если НЕ Отказ Тогда
				Выборка = СформироватьЗапросПоПособияПоУходуЗаРебенкомДоПолутораЛет().Выбрать();
				Пока Выборка.Следующий() Цикл 
					Движение = Движения.ПособияПоУходуЗаРебенкомДоПолутораЛет.Добавить();
					ЗаполнитьЗначенияСвойств(Движение,ВыборкаПоШапкеДокумента,"Организация");
					ЗаполнитьЗначенияСвойств(Движение,Выборка);
				КонецЦикла;
				
				Если ВыборкаПоШапкеДокумента.НалоговыйПериод < Год(мДатаОтменыЕСН) Тогда
					Выборка = СформироватьЗапросЗаработкиПолучателейПособияПоУходуЗаРебенкомДоПолутораЛет().Выбрать();
					Пока Выборка.Следующий() Цикл 
						
						Движение = Движения.ЗаработкиПолучателейПособияПоУходуЗаРебенкомДоПолутораЛет.Добавить();
						ЗаполнитьЗначенияСвойств(Движение,ВыборкаПоШапкеДокумента,"Организация");
						ЗаполнитьЗначенияСвойств(Движение,Выборка);
					КонецЦикла;
				КонецЕсли;
			КонецЕсли; 
			
			Для каждого СтрокаТЧ Из СтраховыеВзносы Цикл
				// проверим очередную строку табличной части
				ПроверитьЗаполнениеСтрокиСтраховыеВзносы(СтрокаТЧ, Отказ, Заголовок);
				Если Не Отказ Тогда
					Движение = Движения.СтраховыеВзносыИсчисленные.Добавить();
					ЗаполнитьЗначенияСвойств(Движение,СтрокаТЧ);
					Движение.Период = СтрокаТЧ.МесяцРасчетногоПериода;
					Движение.Организация = ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
					Движение.ОбособленноеПодразделение = ВыборкаПоШапкеДокумента.Организация;
				КонецЕсли;
			КонецЦикла; 
			
			Для каждого СтрокаТЧ Из СтраховыеВзносыСведенияОДоходах Цикл
				// проверим очередную строку табличной части
				ПроверитьЗаполнениеСтрокиСтраховыеВзносыСведенияОДоходах(СтрокаТЧ, Отказ, Заголовок);
				Если Не Отказ Тогда
					Движение = Движения.СтраховыеВзносыСведенияОДоходах.Добавить();
					ЗаполнитьЗначенияСвойств(Движение,СтрокаТЧ);
					Движение.Период = СтрокаТЧ.МесяцРасчетногоПериода;
					Движение.Организация = ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
					Движение.ОбособленноеПодразделение = ВыборкаПоШапкеДокумента.Организация;
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли; 
		
	КонецЕсли;

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
		
	КраткийСоставДокумента = ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(НДФЛСведенияОДоходах, ЕСНСведенияОДоходах, "Физлицо");
	
КонецПроцедуры

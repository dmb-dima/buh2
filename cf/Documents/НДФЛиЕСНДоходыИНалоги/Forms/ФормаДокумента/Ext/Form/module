Перем мТекущаяДатаДокумента; // Хранит последнюю установленную дату документа - для проверки перехода документа в другой период
Перем мТаблицаСтавокКодовДоходов;// Хранит значения ставок налога для каждого кода доходов НДФЛ
Перем мПустойКодДохода; // Хранит пустую ссылку на элемент справочника "ДоходыНДФЛ"
Перем мПустойКодВычета; // Хранит пустую ссылку на элемент справочника "ВычетыНДФЛ"
Перем мСписокАвторскихВознаграждений; // Хранит авторские вознаграждения
Перем мСоответствиеДоходовИВычетов; // Хранит для кода дохода соответствующие ему коды вычетов

// Ссылки на предопределенные элементы справочника "ВычетыНДФЛ"
Перем мВычетСКодом405;
Перем мВычетМатпомощьПриРожденииРебенка;

// Ссылки на предопределенные элементы справочника "ДоходыНДФЛ"
Перем мДивиденды;

// Хранит дерево макетов печатных форм
Перем мДеревоМакетов;

// Хранит элемент управления подменю печати
Перем мПодменюПечати;

// Хранит элемент управления кнопку печать по умолчанию
Перем мПечатьПоУмолчанию;

// Хранит дерево кнопок подменю заполнение ТЧ
Перем мКнопкиЗаполненияТЧ;

Перем мСписокВидовДляОсновныхНачислений;

Перем мСписокКодовЕСН;
Перем мСписокВыбораОКАТОиКПП;
Перем мСписокВыбораСтандартныхВычетов;

// Хранит ссылку на головную организацию
Перем мГоловнаяОрганизация;

Перем мОбработкаТайпинга;
Перем мТекстТайпинга;
Перем мПоследнееЗначениеЭлементаТайпинга;

Перем СтатусыФизЛиц;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Функция ФизЛицоЯвляетсяРезидентом(ФизЛицо, ДатаСреза)
	ЗначениеВСписке = СтатусыФизЛиц.НайтиСтроки(Новый Структура("ФизЛицо, Год", ФизЛицо, КонецГода(ДатаСреза)));
	Если ЗначениеВСписке.Количество() = 0 Тогда
		
		// Проверим, не является ли физлицо НеРезидентом (на конец года относительно даты получения дохода) 
		ФизЛицоНеРезидент = РегистрыСведений.СтатусФизЛицКакНалогоплательщиковНДФЛ.ПолучитьПоследнее(КонецГода(ДатаСреза), Новый Структура("ФизЛицо",ФизЛицо)).Статус = Перечисления.СтатусыНалогоплательщиковПоНДФЛ.НеРезидент;
		ДобавляемаяСтрока = СтатусыФизЛиц.Добавить();
		ДобавляемаяСтрока.ФизЛицо = ФизЛицо;
		ДобавляемаяСтрока.Год = КонецГода(ДатаСреза);
		ДобавляемаяСтрока.ЯвляетсяРезидентом = НЕ ФизЛицоНеРезидент;
		
		Возврат ДобавляемаяСтрока.ЯвляетсяРезидентом;
	Иначе
		Возврат ЗначениеВСписке[0].ЯвляетсяРезидентом;
	КонецЕсли;
	
КонецФункции

Процедура УправлениеЗакладкамиЕСНСтраховыхВзносов(ОчищатьДанные = Ложь)

	ВидимостьЕСН = НалоговыйПериод < Год(ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами());
	
	Если ОчищатьДанные Тогда
		Если ВидимостьЕСН И (СтраховыеВзносы.Количество() > 0 Или СтраховыеВзносыСведенияОДоходах.Количество() > 0) Тогда
			ТекстВопроса = "Страховые взносы заменят ЕСН только с 2010 года. Данные по страховым взносам будут очищены. Продолжить?";
			Ответ  = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
			Если Ответ = КодВозвратаДиалога.Отмена Тогда
				Возврат;
			КонецЕсли;
			СтраховыеВзносы.Очистить();
			СтраховыеВзносыСведенияОДоходах.Очистить();
		ИначеЕсли Не ВидимостьЕСН И (ЕСННалоги.Количество() > 0 Или ЕСНСведенияОДоходах.Количество() > 0) Тогда
			//спросить
			ТекстВопроса = "ЕСН с 2010 года отменен. Данные по ЕСН будут очищены. Продолжить?";
			Ответ  = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
			Если Ответ = КодВозвратаДиалога.Отмена Тогда
				Возврат;
			КонецЕсли;
			ЕСННалоги.Очистить();
			ЕСНСведенияОДоходах.Очистить();
		КонецЕсли;		
	КонецЕсли;
	
	ЭлементыФормы.Панель1.Страницы.СтраховыеВзносы.Видимость = Не ВидимостьЕСН;
	ЭлементыФормы.ПособияПоУходуЗаРебенкомДоПолутораЛет.Колонки.СреднийДневнойЗаработок.Видимость = ВидимостьЕСН;
	ЭлементыФормы.Панель1.Страницы.СтраницаЕСН.Видимость = ВидимостьЕСН;
                                                                       
	ПоказыватьКолонкиЕНВД = НалоговыйПериод < Год(ПроведениеРасчетов.ДатаРасширенияПеречняЛьготныхТарифовСтраховыхВзносов());
	ЭлементыФормы.СтраховыеВзносы.Колонки.ФССЕНВД.Видимость   = НЕ ПоказыватьКолонкиЕНВД;
	ЭлементыФормы.СтраховыеВзносы.Колонки.ФФОМСЕНВД.Видимость = НЕ ПоказыватьКолонкиЕНВД;
	ЭлементыФормы.СтраховыеВзносы.Колонки.ТФОМСЕНВД.Видимость = НЕ ПоказыватьКолонкиЕНВД;
	ЭлементыФормы.ПособияПоУходуЗаРебенкомДоПолутораЛет.Колонки.ОблагаетсяЕНВД.Видимость = ПоказыватьКолонкиЕНВД;
	ЭлементыФормы.ПособияСоциальномуСтрахованию.Колонки.ОблагаетсяЕНВД.Видимость = ПоказыватьКолонкиЕНВД;
	
КонецПроцедуры

Функция ПолучитьСтруктуруПараметровТайпинга()
	
	СтруктураПараметров = Новый Структура("СтавкаНалогообложенияРезидента", ЭлементыФормы.НДФЛУдержанный.ТекущиеДанные.СтавкаНалогообложения);
	
	Возврат СтруктураПараметров;
	
КонецФункции // ПолучитьСтруктуруПараметровТайпинга()

// Процедура устанавливает подменю "Заполнить" в командных панелях ТЧ документа при необходимости
//
Процедура УстановитьКнопкиПодменюЗаполненияТЧ();
	
	СоответствиеТЧ = Новый Соответствие;
	СоответствиеТЧ.Вставить(ЭлементыФормы.НДФЛИсчисленный13,ЭлементыФормы.КоманднаяПанельНДФЛИсчисленный13);
	СоответствиеТЧ.Вставить(ЭлементыФормы.ЕСНСведенияОДоходах,ЭлементыФормы.КоманднаяПанельЕСНСведенияОДоходах.Кнопки.ПодменюЗаполнить);
	СоответствиеТЧ.Вставить(ЭлементыФормы.НДФЛСведенияОДоходах,ЭлементыФормы.КоманднаяПанельНДФЛСведенияОДоходах);
	СоответствиеТЧ.Вставить(ЭлементыФормы.ЕСННалоги,ЭлементыФормы.КоманднаяПанельЕСННалоги);
	СоответствиеТЧ.Вставить(ЭлементыФормы.НДФЛУдержанный,ЭлементыФормы.КоманднаяПанельНДФЛУдержанный.Кнопки.ПодменюЗаполнить);
	
	мКнопкиЗаполненияТЧ = УниверсальныеМеханизмы.СформироватьПодменюЗаполненияТЧ(Ссылка, СоответствиеТЧ, Новый Действие("НажатиеНаДополнительнуюКнопкуЗаполненияТЧ"));
	
КонецПроцедуры

// Процедура устанавливает подменю "Печать" и кнопку "Печать по умолчанию" при необходимости
//
Процедура УстановитьКнопкиПечати()
	
	мДеревоМакетов = УниверсальныеМеханизмы.ПолучитьДеревоМакетовПечати(Ссылка, Неопределено, Новый Действие("ОсновныеДействияФормыПечать"), Новый Действие("ОсновныеДействияФормыУстановитьПечатьПоУмолчанию"));

	УниверсальныеМеханизмы.УстановитьПодменюПечати    (мПодменюПечати, ЭлементыФормы.ОсновныеДействияФормы, мДеревоМакетов.Строки.Количество() > 0);
	УниверсальныеМеханизмы.УстановитьПечатьПоУмолчанию(мПечатьПоУмолчанию, ЭлементыФормы.ОсновныеДействияФормы, мДеревоМакетов, Метаданные().Имя,Новый Действие("ОсновныеДействияФормыПечатьПоУмолчанию"));

	Если Не мПодменюПечати = Неопределено Тогда
		УниверсальныеМеханизмы.СформироватьПодменю(мДеревоМакетов, мПодменюПечати,Истина,Истина);
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьВидимостьКолонок()

	мСписокВыбораОКАТОиКПП = Новый СписокЗначений;
	МаксимальнаяДлина = 40;
	ЭтоЮрЛицо = Организация.ЮрФизЛицо <> Перечисления.ЮрФизЛицо.ФизЛицо;
	Если ЭтоЮрЛицо Тогда
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Организация",Организация);
		Запрос.УстановитьПараметр("ПустаяОрганизация",Справочники.Организации.ПустаяСсылка());
		Запрос.УстановитьПараметр("ПустойКодПоОКАТО","");
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПодразделенияОрганизаций.Наименование + "": "" + ПодразделенияОрганизаций.КодПоОКАТО + "", "" + ПодразделенияОрганизаций.КПП КАК Представление,
		|	ПодразделенияОрганизаций.КодПоОКАТО,
		|	ПодразделенияОрганизаций.КПП
		|ИЗ
		|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
		|ГДЕ
		|	ПодразделенияОрганизаций.Владелец = &Организация
		|	И ПодразделенияОрганизаций.КодПоОКАТО <> &ПустойКодПоОКАТО";

		НаборыДанных = Запрос.Выполнить().Выгрузить(); 
		
		// Если не нашли данных - ничего не делаем
		Если НаборыДанных.Количество() > 0 Тогда
			Для Каждого СтрокаЗапроса Из НаборыДанных Цикл
				МаксимальнаяДлина = Макс(МаксимальнаяДлина,СтрДлина(СтрокаЗапроса.Представление));
				мСписокВыбораОКАТОиКПП.Добавить(СтрокаЗапроса, СтрокаЗапроса.Представление);
			КонецЦикла;
		КонецЕсли; 

	КонецЕсли;				
	
	ЭлементыФормы.НДФЛСведенияОДоходах.Колонки.КодПоОКАТО.Видимость = ЭтоЮрЛицо;
	ЭлементыФормы.НДФЛСведенияОДоходах.Колонки.КодПоОКАТО.ИзменятьНастройку = ЭтоЮрЛицо;
	ЭлементыФормы.НДФЛСведенияОДоходах.Колонки.КПП.Видимость = ЭтоЮрЛицо;
	ЭлементыФормы.НДФЛСведенияОДоходах.Колонки.КПП.ИзменятьНастройку = ЭтоЮрЛицо;
	ЭлементыФормы.НДФЛСведенияОДоходах.Колонки.КолонкаКодовОП.Видимость = ЭтоЮрЛицо;
	ЭлементыФормы.НДФЛСведенияОДоходах.Колонки.КолонкаКодовОП.ИзменятьНастройку = ЭтоЮрЛицо;

	ЭУКодаПоОКАТО = ЭлементыФормы.НДФЛСведенияОДоходах.Колонки.КодПоОКАТО.ЭлементУправления;				
	ЭУКодаПоОКАТО.КнопкаВыбора = мСписокВыбораОКАТОиКПП.Количество() <> 0;
	ЭУКодаПоОКАТО.ШиринаСпискаВыбора = МаксимальнаяДлина;
	
	ЭлементыФормы.НДФЛИсчисленный13.Колонки.КодПоОКАТО.Видимость = ЭтоЮрЛицо;
	ЭлементыФормы.НДФЛИсчисленный13.Колонки.КодПоОКАТО.ИзменятьНастройку = ЭтоЮрЛицо;
	ЭлементыФормы.НДФЛИсчисленный13.Колонки.КПП.Видимость = ЭтоЮрЛицо;
	ЭлементыФормы.НДФЛИсчисленный13.Колонки.КПП.ИзменятьНастройку = ЭтоЮрЛицо;
	ЭлементыФормы.НДФЛИсчисленный13.Колонки.КолонкаКодовОП.Видимость = ЭтоЮрЛицо;
	ЭлементыФормы.НДФЛИсчисленный13.Колонки.КолонкаКодовОП.ИзменятьНастройку = ЭтоЮрЛицо;
	
	ЭлементыФормы.НДФЛПредоставленныеВычеты.Колонки.КодПоОКАТО.Видимость = ЭтоЮрЛицо;
	ЭлементыФормы.НДФЛПредоставленныеВычеты.Колонки.КодПоОКАТО.ИзменятьНастройку = ЭтоЮрЛицо;
	ЭлементыФормы.НДФЛПредоставленныеВычеты.Колонки.КПП.Видимость = ЭтоЮрЛицо;
	ЭлементыФормы.НДФЛПредоставленныеВычеты.Колонки.КПП.ИзменятьНастройку = ЭтоЮрЛицо;
	ЭлементыФормы.НДФЛПредоставленныеВычеты.Колонки.КолонкаКодовОП.Видимость = ЭтоЮрЛицо;
	ЭлементыФормы.НДФЛПредоставленныеВычеты.Колонки.КолонкаКодовОП.ИзменятьНастройку = ЭтоЮрЛицо;

	ЭУКодаПоОКАТО = ЭлементыФормы.НДФЛИсчисленный13.Колонки.КодПоОКАТО.ЭлементУправления;				
	ЭУКодаПоОКАТО.КнопкаВыбора = мСписокВыбораОКАТОиКПП.Количество() <> 0;
	ЭУКодаПоОКАТО.ШиринаСпискаВыбора = МаксимальнаяДлина;
	
	ЭлементыФормы.НДФЛУдержанный.Колонки.КодПоОКАТО.Видимость = ЭтоЮрЛицо;
	ЭлементыФормы.НДФЛУдержанный.Колонки.КодПоОКАТО.ИзменятьНастройку = ЭтоЮрЛицо;
	ЭлементыФормы.НДФЛУдержанный.Колонки.КПП.Видимость = ЭтоЮрЛицо;
	ЭлементыФормы.НДФЛУдержанный.Колонки.КПП.ИзменятьНастройку = ЭтоЮрЛицо;
	ЭлементыФормы.НДФЛУдержанный.Колонки.КолонкаКодовОП.Видимость = ЭтоЮрЛицо;
	ЭлементыФормы.НДФЛУдержанный.Колонки.КолонкаКодовОП.ИзменятьНастройку = ЭтоЮрЛицо;

	ЭУКодаПоОКАТО = ЭлементыФормы.НДФЛУдержанный.Колонки.КодПоОКАТО.ЭлементУправления;				
	ЭУКодаПоОКАТО.КнопкаВыбора = мСписокВыбораОКАТОиКПП.Количество() <> 0;
	ЭУКодаПоОКАТО.ШиринаСпискаВыбора = МаксимальнаяДлина;
	
КонецПроцедуры

// Определяет размер ставки налога для кода дохода
Функция СтавкаНалогообложения(КодДохода)

	НайдСтр = мТаблицаСтавокКодовДоходов.Найти(КодДохода, "Ссылка");
	Если НайдСтр = Неопределено тогда
		Возврат ПроцедурыУправленияПерсоналом.ЗначениеСтавкиНДФЛотСтавкиНалогообложенияРезидента(КодДохода.СтавкаНалогообложенияРезидента);
	Иначе	
		Возврат НайдСтр.Ставка;
	КонецЕсли;	

КонецФункции 

// Выполняет расчет суммы налога для строки таблицы НДФЛСведенияОДоходах
Функция СуммаНалогаИсчисленная(СведенияОДоходах)

	// Проверим, не является ли физлицо НеРезидентом (на конец года относительно даты получения дохода) 
    ФизЛицоНеРезидент = РегистрыСведений.СтатусФизЛицКакНалогоплательщиковНДФЛ.ПолучитьПоследнее(КонецГода(СведенияОДоходах.МесяцНалоговогоПериода), Новый Структура("ФизЛицо",СведенияОДоходах.ФизЛицо)).Статус = Перечисления.СтатусыНалогоплательщиковПоНДФЛ.НеРезидент;
	Если ФизЛицоНеРезидент Тогда
		РазмерСтавкиНалога = ПроцедурыУправленияПерсоналом.ЗначениеСтавкиНДФЛСНерезидента(СведенияОДоходах.КодДохода, СведенияОДоходах.МесяцНалоговогоПериода);// все доходы нерезидента облагаются по ставке 30%
	Иначе	
		РазмерСтавкиНалога = СтавкаНалогообложения(СведенияОДоходах.КодДохода);	
	КонецЕсли;
	
	Если РазмерСтавкиНалога = ПроцедурыУправленияПерсоналом.ЗначениеСтавкиНДФЛотСтавкиНалогообложенияРезидента(Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка13) 
		ИЛИ СведенияОДоходах.КодДохода.НеОблагаетсяУНалоговогоАгента Тогда
		Возврат 0;//Налог по ставке 13% считаем на закладке "По ставке 13%"
	Иначе
		Возврат Окр((СведенияОДоходах.СуммаДохода - СведенияОДоходах.СуммаВычета) * РазмерСтавкиНалога / 100);
	КонецЕсли;
	
КонецФункции // СуммаНалогаИсчисленная()

// Возвращает список доступных кодов вычетов для кода дохода
Функция ПолучитьСписокВычетовДляДохода(СведенияОДоходах)

    КодДохода = СведенияОДоходах.КодДохода; 
	
	Если КодДохода = мПустойКодДохода Тогда
		Возврат Новый СписокЗначений;	// Пустой список
	КонецЕсли; 

	// Всем подряд могут предоставляться только вычеты 3хх на доходы по ценным бумагам, 5хх на доходы 27X0 и вычет по дивидендам
	// остальные вычеты - только резидентам
	Если КодДохода = Справочники.ДоходыНДФЛ.Код2010 Или мСписокАвторскихВознаграждений.Найти(КодДохода) <> Неопределено Тогда // Договора подряда
		 		
		// Проверим, является ли физлицо Резидентом (на конец года относительно даты получения дохода) 
		ФизЛицоНеРезидент = РегистрыСведений.СтатусФизЛицКакНалогоплательщиковНДФЛ.ПолучитьПоследнее(КонецГода(СведенияОДоходах.МесяцНалоговогоПериода), Новый Структура("ФизЛицо",СведенияОДоходах.ФизЛицо)).Статус = Перечисления.СтатусыНалогоплательщиковПоНДФЛ.НеРезидент;
		
		Если ФизЛицоНеРезидент Тогда 
			Возврат Новый СписокЗначений;
		КонецЕсли;
	КонецЕсли;

	Вычеты = мСоответствиеДоходовИВычетов[КодДохода];
	
	Если Вычеты = Неопределено Тогда
		Возврат Новый СписокЗначений;
	ИначеЕсли ТипЗнч(Вычеты) = Тип("СписокЗначений") Тогда
		Возврат Вычеты;
	Иначе	
		СписокВычетов = Новый СписокЗначений;
		СписокВычетов.Добавить(Вычеты);
		Возврат СписокВычетов;
	КонецЕсли;

КонецФункции 

// Выполняет расчет возможной суммы вычета для строки таблицы НДФЛСведенияОДоходах
Функция РассчитатьСуммуВычетаДляДохода(СведенияОДоходах)

	Если СведенияОДоходах.КодДохода = мПустойКодДохода или СведенияОДоходах.КодВычета = мПустойКодВычета Тогда
		Возврат 0;
	КонецЕсли; 

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДФЛВычетыПоДоходамСрезПоследних.ГодовойВычет,
	|	НДФЛВычетыПоДоходамСрезПоследних.НормативЗатрат
	|ИЗ
	|	РегистрСведений.НДФЛВычетыПоДоходам.СрезПоследних(&Период, КодДохода = &КодДохода) КАК НДФЛВычетыПоДоходамСрезПоследних"	;

	Запрос.УстановитьПараметр("Период",		СведенияОДоходах.МесяцНалоговогоПериода);
	Запрос.УстановитьПараметр("КодДохода",	СведенияОДоходах.КодДохода);
	
	РезультатЗапроса = Запрос.Выполнить();
	ПустойЗапрос = РезультатЗапроса.Пустой();
	Если ПустойЗапрос Тогда
	
		НормативЗатрат	= 0;
		ГодовойВычет	= 0;
		
	Иначе
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		НормативЗатрат	= Выборка.НормативЗатрат;
		ГодовойВычет	= Выборка.ГодовойВычет;
	
	КонецЕсли; 
	
	// Если код вычета 405, то надо предоставить вычет согласно нормативу затрат, заданного в процентах для кода дохода
	Если СведенияОДоходах.КодВычета = мВычетСКодом405 Тогда
		// вычет по нормативу затрат дается для кодов доходов 2201-2209 (авторские) и 4000 (предприниматели), 4006 (нотариусы)

		Возврат СведенияОДоходах.СуммаДохода *  НормативЗатрат / 100;
		
	ИначеЕсли СведенияОДоходах.КодВычета = мВычетМатпомощьПриРожденииРебенка Тогда
		// вычет при рождении ребенка даётся на каждого ребенка
		
		Возврат Мин(СведенияОДоходах.СуммаДохода, СведенияОДоходах.КоличествоДетей * НормативЗатрат);
		
	КонецЕсли; 
	
	// Если для кода дохода установлен годовой вычет, то попробуем воспользоваться им
	КодДоходаГодовойВычет = ГодовойВычет;
	Если ПустойЗапрос Тогда
		// В регистре сведений НДФЛВычетыПоДоходам нет записи с таким кодом дохода - скидку не меняем
		Возврат Мин(СведенияОДоходах.СуммаДохода, СведенияОДоходах.СуммаВычета)
	ИначеЕсли КодДоходаГодовойВычет = 0 Тогда
		// У кода дохода годовой вычет равен 0 - обнулим и скидку
		Возврат 0;
	КонецЕсли;	

	Запрос = Новый Запрос("ВЫБРАТЬ
	|	СУММА(НДФЛСведенияОДоходах.СуммаВычета) КАК СуммаВычета
	|ИЗ
	|	РегистрНакопления.НДФЛСведенияОДоходах КАК НДФЛСведенияОДоходах
	|
	|ГДЕ
	|	НДФЛСведенияОДоходах.Регистратор <> &ДокументСсылка И
	|	НДФЛСведенияОДоходах.Период МЕЖДУ &парамНачалоПериода И &парамКонецПериода И
	|	НДФЛСведенияОДоходах.ПериодРегистрации <= &парамПериодРегистрации И
	|	НДФЛСведенияОДоходах.КодДохода = &КодДохода И
	|	НДФЛСведенияОДоходах.ФизЛицо = &ФизЛицо И
	|	НДФЛСведенияОДоходах.Организация = &парамОрганизация");

	Запрос.УстановитьПараметр("парамНачалоПериода", НачалоГода(СведенияОДоходах.МесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("парамКонецПериода", КонецМесяца(СведенияОДоходах.МесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("парамПериодРегистрации", КонецМесяца(СведенияОДоходах.ПериодРегистрации));
	Запрос.УстановитьПараметр("парамОрганизация", Организация);
	Запрос.УстановитьПараметр("КодДохода", СведенияОДоходах.КодДохода);
	Запрос.УстановитьПараметр("Физлицо", СведенияОДоходах.Физлицо);
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();

	СуммаВычетаВРегистре = 0;
	Если Выборка.Следующий() Тогда
		СуммаВычетаВРегистре = ?(Выборка.СуммаВычета = NULL,0,Выборка.СуммаВычета);
	КонецЕсли;

	// Расчет суммы вычетов, использованных с начала года в текущем документе

	// перед пробегом по строкам документа надо очистить сумму вычета в текущей строке, чтобы она не учитывалась
	ПрежнееЗначениеВычетаПоСтроке = СведенияОДоходах.СуммаВычета;
	СведенияОДоходах.СуммаВычета = 0;

	СуммаВычетаВДокументе = 0;
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("ФизЛицо", СведенияОДоходах.Физлицо);
	СтруктураПоиска.Вставить("КодДохода", СведенияОДоходах.КодДохода);
	ВременнаяТаблица = НДФЛСведенияОДоходах.Выгрузить();
	ВременнаяТаблица.Индексы.Добавить("ФизЛицо, КодДохода");
	НайдСтроки = ВременнаяТаблица.НайтиСтроки(СтруктураПоиска);
	Для каждого НайденнаяСтрока Из НайдСтроки Цикл
		Если НайденнаяСтрока.МесяцНалоговогоПериода >= НачалоГода(СведенияОДоходах.МесяцНалоговогоПериода) 
			И НайденнаяСтрока.МесяцНалоговогоПериода <= КонецМесяца(СведенияОДоходах.МесяцНалоговогоПериода) 
			И НайденнаяСтрока.ПериодРегистрации <= КонецМесяца(СведенияОДоходах.ПериодРегистрации) Тогда
			СуммаВычетаВДокументе =СуммаВычетаВДокументе + НайденнаяСтрока.СуммаВычета;
		КонецЕсли; 
	КонецЦикла; 

	// восстановим ранее очищенное значение сумы вычета
    СведенияОДоходах.СуммаВычета = ПрежнееЗначениеВычетаПоСтроке;
	
	// Расчет суммы вычета
	РанееПредоставленныйВычет  = СуммаВычетаВРегистре + СуммаВычетаВДокументе;

	Возврат  Мин(СведенияОДоходах.СуммаДохода, Макс(КодДоходаГодовойВычет - РанееПредоставленныйВычет,0));
	
КонецФункции	 

// Выполняет перерасчет суммы вычета и суммы налога по строке таблицы НДФЛСведенияОДоходах
Процедура ПересчетСтрокиСведенийОДоходах(СведенияОДоходах)

    Если СведенияОДоходах.КодДохода = мПустойКодДохода или СведенияОДоходах.СуммаДохода = 0 Тогда

		СведенияОДоходах.СуммаНалогаИсчисленная = 0;	
		СведенияОДоходах.СуммаВычета = 0;
		Возврат;	

	КонецЕсли; 
	
	// перерасчет суммы вычета
	СведенияОДоходах.СуммаВычета = РассчитатьСуммуВычетаДляДохода(СведенияОДоходах);	
	// перерасчет суммы налога
	СведенияОДоходах.СуммаНалогаИсчисленная = СуммаНалогаИсчисленная(СведенияОДоходах);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СВОЙСТВ И КАТЕГОРИЙ

// Процедура выполняет открытие формы работы со свойствами документа
//
Процедура ДействияФормыДействиеОткрытьСвойства(Кнопка)

	РаботаСДиалогами.ОткрытьСвойстваДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	// Установка кнопок печати
	УстановитьКнопкиПечати();
	
	// Установка кнопок заполнение ТЧ
	УстановитьКнопкиПодменюЗаполненияТЧ();
	
КонецПроцедуры // ПередОткрытием()

// Процедура - обработчик события "ПриОткрытии" формы
//
Процедура ПриОткрытии()

	Если ЭтоНовый() Тогда
		// Заполнить реквизиты значениями по умолчанию.
		ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, глЗначениеПеременной("глТекущийПользователь"));
		Если НалоговыйПериод = 0 Тогда
			НалоговыйПериод = Макс(Год(Дата),2003);
		КонецЕсли;
	Иначе
		
		// Установить доступность формы с учетом даты запрета редактирования	
		РаботаСДиалогами.УстановитьДоступностьФормыДляРедактирования(ЭтотОбъект, ЭтаФорма);

	КонецЕсли;	
	
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Номер);

	СтруктураКолонок = Новый Структура();

	// Установить колонки, видимостью которых пользователь управлять не может.
	СтруктураКолонок.Вставить("ФизЛицо");
	СтруктураКолонок.Вставить("МесяцНалоговогоПериода");
 	СтруктураКолонок.Вставить("ПериодРегистрации");
 	СтруктураКолонок.Вставить("ДатаДохода");
 	СтруктураКолонок.Вставить("КодДохода");
	СтруктураКолонок.Вставить("СуммаДохода");
	// Установить ограничение - изменять видимость колонок для табличной части НДФЛСведенияОДоходах
	ОбработкаТабличныхЧастей.УстановитьИзменятьВидимостьКолонокТабЧасти(ЭлементыФормы.НДФЛСведенияОДоходах.Колонки, СтруктураКолонок);

	СтруктураКолонок = Новый Структура();
	СтруктураКолонок.Вставить("ФизЛицо");
	СтруктураКолонок.Вставить("МесяцНалоговогоПериода");
	СтруктураКолонок.Вставить("ПериодРегистрации");
	// Установить ограничение - изменять видимость колонок для табличной части НДФЛИсчисленный13
	ОбработкаТабличныхЧастей.УстановитьИзменятьВидимостьКолонокТабЧасти(ЭлементыФормы.НДФЛИсчисленный13.Колонки, СтруктураКолонок);

	СтруктураКолонок = Новый Структура();
	СтруктураКолонок.Вставить("ФизЛицо");
	СтруктураКолонок.Вставить("МесяцНалоговогоПериода");
 	СтруктураКолонок.Вставить("ПериодРегистрации");
 	СтруктураКолонок.Вставить("СтавкаНалогообложения");
 	СтруктураКолонок.Вставить("Налог");
	
	// Установить ограничение - изменять видимость колонок для табличной части НДФЛУдержанный
	ОбработкаТабличныхЧастей.УстановитьИзменятьВидимостьКолонокТабЧасти(ЭлементыФормы.НДФЛУдержанный.Колонки, СтруктураКолонок);

	СтруктураКолонок = Новый Структура();
	СтруктураКолонок.Вставить("ФизЛицо");
	СтруктураКолонок.Вставить("МесяцНалоговогоПериода");
	СтруктураКолонок.Вставить("КодДоходаЕСН");
	СтруктураКолонок.Вставить("СуммаДохода");
	
	// Установить ограничение - изменять видимость колонок для табличной части ЕСНСведенияОДоходах
	ОбработкаТабличныхЧастей.УстановитьИзменятьВидимостьКолонокТабЧасти(ЭлементыФормы.ЕСНСведенияОДоходах.Колонки, СтруктураКолонок);

	СтруктураКолонок = Новый Структура();
	СтруктураКолонок.Вставить("ФизЛицо");
	СтруктураКолонок.Вставить("МесяцНалоговогоПериода");
	// Установить ограничение - изменять видимость колонок для табличной части ЕСННалоги
	ОбработкаТабличныхЧастей.УстановитьИзменятьВидимостьКолонокТабЧасти(ЭлементыФормы.ЕСННалоги.Колонки, СтруктураКолонок);

	СтруктураКолонок = Новый Структура();
	СтруктураКолонок.Вставить("ВидПособияСоциальногоСтрахования");
	СтруктураКолонок.Вставить("ОплаченныеДни");
	СтруктураКолонок.Вставить("СуммаВсего");
	// Установить ограничение - изменять видимость колонок для табличной части ЕСННалоги
	ОбработкаТабличныхЧастей.УстановитьИзменятьВидимостьКолонокТабЧасти(ЭлементыФормы.ПособияСоциальномуСтрахованию.Колонки, СтруктураКолонок);

	СтруктураКолонок = Новый Структура();
	СтруктураКолонок.Вставить("Сотрудник");
	СтруктураКолонок.Вставить("ПособиеПоУходуЗаПервымРебенком");
	СтруктураКолонок.Вставить("ПособиеПоУходуЗаВторымРебенком");
	СтруктураКолонок.Вставить("СреднийДневнойЗаработок");
	// Установить ограничение - изменять видимость колонок для табличной части ЕСННалоги
	ОбработкаТабличныхЧастей.УстановитьИзменятьВидимостьКолонокТабЧасти(ЭлементыФормы.ПособияПоУходуЗаРебенкомДоПолутораЛет.Колонки, СтруктураКолонок);

	// Вывести в заголовке формы вид операции и статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);

	// Запомнить текущие значения реквизитов формы.
	мТекущаяДатаДокумента        = Дата;

	// Получим и запомним ссылку на головную организацию
	мГоловнаяОрганизация = ОбщегоНазначения.ГоловнаяОрганизация(Организация);
	
	// подготовим списки вычетов для указания в т.п. стандартных вычетов
	
	мСписокВыбораСтандартныхВычетов	= СправкиПоНДФЛ.СписокСтандартныхВычетов();
	мСоответствиеДоходовИВычетов = СправкиПоНДФЛ.СоответствиеДоходовИВычетов(НалоговыйПериод);

	// Установить активный реквизит.
	РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма);
	
	// Ненужные колонки показывать не будем
	УстановитьВидимостьКолонок();
	
	ЭлементыФормы.СтраховыеВзносы.Колонки.ПФРПоДополнительномуТарифу.Видимость = Истина;
	ЭлементыФормы.СтраховыеВзносыСведенияОДоходах.Колонки.ОблагаетсяПоДополнительномуТарифу.Видимость = Истина;
	
	ЭлементыФормы.СтраховыеВзносы.Колонки.ПФРНаДоплатуКПенсииШахтерам.Видимость = Истина;
	ЭлементыФормы.СтраховыеВзносыСведенияОДоходах.Колонки.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам.Видимость = Истина;
	
	
	
	мСписокКодовЕСН = Новый СписокЗначений;
 	мСписокКодовЕСН.Добавить(Справочники.ДоходыЕСН.ВыплатыЗаСчетПрибыли);
 	мСписокКодовЕСН.Добавить(Справочники.ДоходыЕСН.ДоговораАвторские);
 	мСписокКодовЕСН.Добавить(Справочники.ДоходыЕСН.ДоговораГПХ);
 	мСписокКодовЕСН.Добавить(Справочники.ДоходыЕСН.ПособияЗаСчетФСС);
 	мСписокКодовЕСН.Добавить(Справочники.ДоходыЕСН.НеОблагаетсяЦеликом);
 	мСписокКодовЕСН.Добавить(Справочники.ДоходыЕСН.НеЯвляетсяОбъектом);
 	мСписокКодовЕСН.Добавить(Справочники.ДоходыЕСН.ОблагаетсяЦеликом);
 	мСписокКодовЕСН.Добавить(Справочники.ДоходыЕСН.Матпомощь);
	
	мСписокВидовДляОсновныхНачислений = Новый СписокЗначений;
	мСписокВидовДляОсновныхНачислений.Добавить(Справочники.ДоходыПоСтраховымВзносам.НеОблагаетсяЦеликом);
	мСписокВидовДляОсновныхНачислений.Добавить(Справочники.ДоходыПоСтраховымВзносам.НеЯвляетсяОбъектом);
	мСписокВидовДляОсновныхНачислений.Добавить(Справочники.ДоходыПоСтраховымВзносам.ОблагаетсяЦеликом);
	мСписокВидовДляОсновныхНачислений.Добавить(Справочники.ДоходыПоСтраховымВзносам.ПособияЗаСчетФСС);
	мСписокВидовДляОсновныхНачислений.Добавить(Справочники.ДоходыПоСтраховымВзносам.Матпомощь);
	мСписокВидовДляОсновныхНачислений.Добавить(Справочники.ДоходыПоСтраховымВзносам.МатпомощьПриРожденииРебенка);
	мСписокВидовДляОсновныхНачислений.Добавить(Справочники.ДоходыПоСтраховымВзносам.ДоговорыГПХ);
	мСписокВидовДляОсновныхНачислений.Добавить(Справочники.ДоходыПоСтраховымВзносам.АвторскиеАудиовизуальныеПроизведения);
	мСписокВидовДляОсновныхНачислений.Добавить(Справочники.ДоходыПоСтраховымВзносам.АвторскиеГрафическиеПроизведения);
	мСписокВидовДляОсновныхНачислений.Добавить(Справочники.ДоходыПоСтраховымВзносам.АвторскиеДругиеМузыкальныеПроизведения);
	мСписокВидовДляОсновныхНачислений.Добавить(Справочники.ДоходыПоСтраховымВзносам.АвторскиеИсполнениеПроизведений);
	мСписокВидовДляОсновныхНачислений.Добавить(Справочники.ДоходыПоСтраховымВзносам.АвторскиеЛитературныеПроизведения);
	мСписокВидовДляОсновныхНачислений.Добавить(Справочники.ДоходыПоСтраховымВзносам.АвторскиеМузыкальноСценическиеПроизведение);
	мСписокВидовДляОсновныхНачислений.Добавить(Справочники.ДоходыПоСтраховымВзносам.АвторскиеНаучныеТруды);
	мСписокВидовДляОсновныхНачислений.Добавить(Справочники.ДоходыПоСтраховымВзносам.АвторскиеОткрытия);
	мСписокВидовДляОсновныхНачислений.Добавить(Справочники.ДоходыПоСтраховымВзносам.АвторскиеСкульптуры);
	мСписокВидовДляОсновныхНачислений.Добавить(Справочники.ДоходыПоСтраховымВзносам.ДоходыСтудентовЗаРаботуВСтудотрядеПоГражданскоПравовомуДоговору);
	мСписокВидовДляОсновныхНачислений.Добавить(Справочники.ДоходыПоСтраховымВзносам.ДоходыСтудентовЗаРаботуВСтудотрядеПоТрудовомуДоговору);
	
	ЭлементыФормы.ПособияСоциальномуСтрахованию.Колонки.ВидПособияСоциальногоСтрахования.ЭлементУправления.ДоступныеЗначения = ПроведениеРасчетов.ПолучитьСписокРасходовПоСоцСтрахованию();

	РаботаСДиалогами.ИзменитьПредставлениеКнопкиВыбораСвойств(ЭтаФорма, РаботаСДиалогами.ПолучитьОписаниеЗначенийСвойствОбъекта(Ссылка));
	
	УправлениеЗакладкамиЕСНСтраховыхВзносов();

КонецПроцедуры

// Процедура - обработчик события "ПриЗакрытии" формы.
//
Процедура ПриЗакрытии()
				
	ОбщегоНазначения.ОткрытьЖурналДокумента(ЭтаФорма);

КонецПроцедуры //ПриЗакрытии

// Процедура - обработчик события "ОбработкаОповещения" формы.
//
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновлениеЗначенийСвойств" И Источник = Ссылка Тогда
		РаботаСДиалогами.ИзменитьПредставлениеКнопкиВыбораСвойств(ЭтаФорма, Параметр);
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик события "ПослеЗаписи" формы.
//
Процедура ПослеЗаписи()

	// Установка кнопок печати
	УстановитьКнопкиПечати();
	// Вывести в заголовке формы статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

// Процедура - обработчик события "ПриИзменении" поля ввода даты документа
//
Процедура ДатаПриИзменении(Элемент = Неопределено)

	РаботаСДиалогами.ПроверитьНомерДокумента(ДокументОбъект, мТекущаяДатаДокумента);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);

	мТекущаяДатаДокумента = Дата;

КонецПроцедуры // ДатаПриИзменении

// Процедура - обработчик события "ПриИзменении" поля ввода организации.
//
Процедура ОрганизацияПриИзменении(Элемент)

	Если Не ПустаяСтрока(Номер) Тогда
		МеханизмНумерацииОбъектов.СброситьУстановленныйКодНомерОбъекта(ЭтотОбъект, "Номер", ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	КонецЕсли;

	// Ненужные колонки показывать не будем
	УстановитьВидимостьКолонок();
	
	// Получим и запомним ссылку на головную организацию
	мГоловнаяОрганизация = ОбщегоНазначения.ГоловнаяОрганизация(Организация);

КонецПроцедуры // ОрганизацияПриИзменении()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ КОМАНДНЫХ ПАНЕЛЕЙ

// Процедура - обработчик события "Нажатие" кнопки "Заполнить" командной панели "КоманднаяПанельЕСНСведенияОДоходах"
Процедура КоманднаяПанельЕСНСведенияОДоходахЗаполнить(Кнопка)

    Если ЕСНСведенияОДоходах.Количество() > 0 Тогда
		Ответ = Вопрос("Имеющиеся данные о доходах ЕСН будут удалены.
		|Продолжить?", РежимДиалогаВопрос.ОКОтмена);
		Если Ответ = КодВозвратаДиалога.Отмена Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если Модифицированность Тогда
		Ответ = Вопрос("Перед автозаполнением документ необходимо записать. Записать?", РежимДиалогаВопрос.ОКОтмена);
		Если Ответ = КодВозвратаДиалога.Отмена Тогда
			Возврат;
		КонецЕсли;
		ЗаписатьВФорме();
	КонецЕсли; 

	ЕСНСведенияОДоходах.Очистить();

    Запрос = Новый Запрос("ВЫБРАТЬ
                          |	НДФЛиЕСНДоходыИНалогиНДФЛСведенияОДоходах.ФизЛицо КАК ФизЛицо,
                          |	НДФЛиЕСНДоходыИНалогиНДФЛСведенияОДоходах.ПериодРегистрации КАК ПериодРегистрации,
                          |	СУММА(НДФЛиЕСНДоходыИНалогиНДФЛСведенияОДоходах.СуммаДохода) КАК СуммаДохода,
                          |	СУММА(НДФЛиЕСНДоходыИНалогиНДФЛСведенияОДоходах.СуммаВычета) КАК СуммаВычета,
                          |	НДФЛиЕСНДоходыИНалогиНДФЛСведенияОДоходах.КодДохода
                          |ИЗ
                          |	Документ.НДФЛиЕСНДоходыИНалоги.НДФЛСведенияОДоходах КАК НДФЛиЕСНДоходыИНалогиНДФЛСведенияОДоходах
                          |
                          |ГДЕ
                          |	НДФЛиЕСНДоходыИНалогиНДФЛСведенияОДоходах.Ссылка = &ДокументСсылка
                          |
                          |СГРУППИРОВАТЬ ПО
                          |	НДФЛиЕСНДоходыИНалогиНДФЛСведенияОДоходах.ФизЛицо,
                          |	НДФЛиЕСНДоходыИНалогиНДФЛСведенияОДоходах.ПериодРегистрации,
                          |	НДФЛиЕСНДоходыИНалогиНДФЛСведенияОДоходах.КодДохода");
	
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл

		КодДохода = Выборка.КодДохода;
		СуммаДоходаНДФЛ = Выборка.СуммаДохода;
		СуммаВычетаНДФЛ = Выборка.СуммаВычета;

		СуммаДоходаЕСН = 0;
        СуммаСкидкиЕСН = 0;
		
		Если 
			(КодДохода = Справочники.ДоходыНДФЛ.Код2720) или
			(КодДохода = Справочники.ДоходыНДФЛ.Код2730) или
			(КодДохода = Справочники.ДоходыНДФЛ.Код2740) или
			(КодДохода = Справочники.ДоходыНДФЛ.Код2750) Тогда
			
			// Не облагается ЕСН целиком согласно пп. 1–12 ст. 238 НК РФ (кроме пособий за счет ФСС)
			КодДоходаЕСН = Справочники.ДоходыЕСН.НеОблагаетсяЦеликом;
			СуммаДоходаЕСН = СуммаДоходаНДФЛ;
			
		ИначеЕсли  (КодДохода = Справочники.ДоходыНДФЛ.Код1010) Тогда  // дивиденды
            // выплаты за счет прибыли
			КодДоходаЕСН = Справочники.ДоходыЕСН.ВыплатыЗаСчетПрибыли;
			СуммаДоходаЕСН = СуммаДоходаНДФЛ;
			
		ИначеЕсли  (КодДохода = Справочники.ДоходыНДФЛ.Код2300) Тогда  // больничные
            // пособия за счет ФСС
			КодДоходаЕСН = Справочники.ДоходыЕСН.ПособияЗаСчетФСС;
			СуммаДоходаЕСН = СуммаДоходаНДФЛ;
			
		ИначеЕсли  (КодДохода = Справочники.ДоходыНДФЛ.Код2010) Тогда  // договора ГПХ (кроме авторских)

			КодДоходаЕСН = Справочники.ДоходыЕСН.ДоговораГПХ;
			СуммаДоходаЕСН = СуммаДоходаНДФЛ;
			
		//ИначеЕсли  (КодДохода = Справочники.ДоходыНДФЛ.Код2760) Тогда  // Материальная помощь (только для бюджетных организаций)
		//	// годовая скидка 
		//	КодДоходаЕСН = Справочники.ДоходыЕСН.Матпомощь;
		//	СуммаДоходаЕСН = СуммаДоходаНДФЛ;
		//	СуммаСкидкиЕСН = СуммаВычетаНДФЛ;

		ИначеЕсли  мСписокАвторскихВознаграждений.Найти(КодДохода) <> Неопределено Тогда
            // авторские вознаграждения
			КодДоходаЕСН = Справочники.ДоходыЕСН.ДоговораАвторские;
			СуммаДоходаЕСН = СуммаДоходаНДФЛ;
			СуммаСкидкиЕСН = СуммаВычетаНДФЛ;
			
		ИначеЕсли  КодДохода = Справочники.ДоходыНДФЛ.МатпомощьПриРожденииРебенка Тогда
            // Материальная помощь, оказываемая работодателями своим работникам при рождении (усыновлении) ребенка
			КодДоходаЕСН = Справочники.ДоходыЕСН.МатпомощьПриРожденииРебенка;
			СуммаДоходаЕСН = СуммаДоходаНДФЛ;
			СуммаСкидкиЕСН = СуммаВычетаНДФЛ;
			
		ИначеЕсли (КодДохода = Справочники.ДоходыНДФЛ.Код1300) Тогда // лицензионные договора - не является объектом налогообложения ЕСН 
		ИначеЕсли (КодДохода = Справочники.ДоходыНДФЛ.Код2710) или
				   (КодДохода = Справочники.ДоходыНДФЛ.Код2761) Тогда // мат.помощь не работникам не является объектом налогообложения ЕСН 
		ИначеЕсли (КодДохода = Справочники.ДоходыНДФЛ.Код2001) Тогда // не является объектом налогообложения ЕСН 
		ИначеЕсли  (КодДохода = Справочники.ДоходыНДФЛ.Код3010) или
			       (КодДохода = Справочники.ДоходыНДФЛ.Код2800) или
			       (КодДохода = Справочники.ДоходыНДФЛ.Код2900) или
			       (КодДохода = Справочники.ДоходыНДФЛ.Код2400) или
			       (КодДохода = Справочники.ДоходыНДФЛ.Код2640) Тогда // доходы предпринимателей - не является объектом налогообложения ЕСН
		ИначеЕсли  (КодДохода = Справочники.ДоходыНДФЛ.Код2610ПоСтавке13) или
			       (КодДохода = Справочники.ДоходыНДФЛ.Код2610ПоСтавке35) или
				   (КодДохода = Справочники.ДоходыНДФЛ.Код3020ПоСтавке35) Тогда  //матвыгода - не является объектом налогообложения ЕСН
		ИначеЕсли  (КодДохода = Справочники.ДоходыНДФЛ.Код1200) или
				   (КодДохода = Справочники.ДоходыНДФЛ.Код1220) или
				   (КодДохода = Справочники.ДоходыНДФЛ.Код1530) или
				   (КодДохода = Справочники.ДоходыНДФЛ.Код1531) или
				   (КодДохода = Справочники.ДоходыНДФЛ.Код1532) или
				   (КодДохода = Справочники.ДоходыНДФЛ.Код1533) или
				   (КодДохода = Справочники.ДоходыНДФЛ.Код1536) или
				   (КодДохода = Справочники.ДоходыНДФЛ.Код1540) Тогда  //продажа имущества - не является объектом налогообложения ЕСН
		Иначе  // просто облагаемые НДФЛ доходы - считаем, что они все также облагаются и ЕСН
			КодДоходаЕСН = Справочники.ДоходыЕСН.ОблагаетсяЦеликом; 
			СуммаДоходаЕСН = СуммаДоходаНДФЛ;  
		КонецЕсли;

		Если СуммаДоходаЕСН <> 0 Тогда

			СтрокаЕСН = ЕСНСведенияОДоходах.Добавить();
			СтрокаЕСН.ФизЛицо = Выборка.ФизЛицо;
			СтрокаЕСН.МесяцНалоговогоПериода = Выборка.ПериодРегистрации;
			СтрокаЕСН.КодДоходаЕСН = КодДоходаЕСН;
			СтрокаЕСН.СуммаДохода = СуммаДоходаЕСН;
			СтрокаЕСН.Скидка = СуммаСкидкиЕСН;

		КонецЕсли; 
		
	КонецЦикла;	// по детальным записям

КонецПроцедуры

// Процедура - обработчик события "Нажатие" кнопки "Заполнить" командной панели "КоманднаяПанельНДФЛУдержанный"
Процедура КоманднаяПанельНДФЛУдержанныйЗаполнить(Кнопка)
	
	Если НДФЛУдержанный.Количество() > 0 Тогда
		Ответ = Вопрос("Имеющиеся данные об удержанном НДФЛ будут удалены.
		|Продолжить?", РежимДиалогаВопрос.ОКОтмена);
		Если Ответ = КодВозвратаДиалога.Отмена Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если Модифицированность Тогда
		Ответ = Вопрос("Перед автозаполнением документ необходимо записать. Записать?", РежимДиалогаВопрос.ОКОтмена);
		Если Ответ = КодВозвратаДиалога.Отмена Тогда
			Возврат;
		КонецЕсли;
		ЗаписатьВФорме();
	КонецЕсли; 

    Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТЧ_НДФЛИсчисленный13.ФизЛицо КАК ФизЛицо,
	|	ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13) КАК СтавкаНалогообложения,
	|	ТЧ_НДФЛИсчисленный13.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	КОНЕЦПЕРИОДА(ТЧ_НДФЛИсчисленный13.ПериодРегистрации, МЕСЯЦ) КАК ПериодРегистрации,
	|	ТЧ_НДФЛИсчисленный13.Налог,
	|	ТЧ_НДФЛИсчисленный13.КодПоОКАТО,
	|	ТЧ_НДФЛИсчисленный13.КПП,
	|	NULL КАК КодДохода
	|ИЗ
	|	Документ.НДФЛиЕСНДоходыИНалоги.НДФЛИсчисленный13 КАК ТЧ_НДФЛИсчисленный13
	|ГДЕ
	|	ТЧ_НДФЛИсчисленный13.Ссылка = &ДокументСсылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТЧ_СведенияОДоходах.ФизЛицо,
	|	ТЧ_СведенияОДоходах.КодДохода.СтавкаНалогообложенияРезидента,
	|	ТЧ_СведенияОДоходах.МесяцНалоговогоПериода,
	|	ТЧ_СведенияОДоходах.ПериодРегистрации,
	|	ТЧ_СведенияОДоходах.СуммаНалогаИсчисленная,
	|	ТЧ_СведенияОДоходах.КодПоОКАТО,
	|	ТЧ_СведенияОДоходах.КПП,
	|	ТЧ_СведенияОДоходах.КодДохода
	|ИЗ
	|	Документ.НДФЛиЕСНДоходыИНалоги.НДФЛСведенияОДоходах КАК ТЧ_СведенияОДоходах
	|ГДЕ
	|	ТЧ_СведенияОДоходах.Ссылка = &ДокументСсылка
	|	И ТЧ_СведенияОДоходах.СуммаНалогаИсчисленная <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизЛицо,
	|	ПериодРегистрации,
	|	МесяцНалоговогоПериода";
	
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	
	НДФЛУдержанный.Загрузить(Запрос.Выполнить().Выгрузить());	
	
КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	РаботаСДиалогами.НапечататьДвиженияДокумента(Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНОЙ ПАНЕЛИ "КоманднаяПанельНДФЛСведенияОДоходах"

// Процедура - вызывается при нажатии на кнопку "Подбор из справочника сотрудников организации"
//
Процедура КоманднаяПанельНДФЛСведенияОДоходахПодбор(Кнопка)
	
	ПроцедурыУправленияПерсоналом.ОткрытьФормуВыбораСотрудникаОрганизации(ЭлементыФормы.НДФЛСведенияОДоходах, Ссылка, Ложь, Дата, мГоловнаяОрганизация);

КонецПроцедуры

// Процедура - вызывается при нажатии на кнопку "Подбор из справочника физических лиц"
//
Процедура КоманднаяПанельНДФЛСведенияОДоходахПодборИзСправочникаФизическихЛиц(Кнопка)
	ФормаВыбора = Справочники.ФизическиеЛица.ПолучитьФормуВыбора();
	ФормаВыбора.ВладелецФормы = ЭлементыФормы.НДФЛСведенияОДоходах;
	ФормаВыбора.ЗакрыватьПриВыборе = Ложь;
	ФормаВыбора.Открыть();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНОЙ ПАНЕЛИ "НДФЛИсчисленный13"

// Процедура - вызывается при нажатии на кнопку "Подбор"
//
Процедура КоманднаяПанельНДФЛИсчисленный13Подбор(Кнопка)
	
	ПроцедурыУправленияПерсоналом.ОткрытьФормуВыбораСотрудникаОрганизации(ЭлементыФормы.НДФЛИсчисленный13, Ссылка, Ложь, Дата, мГоловнаяОрганизация);

КонецПроцедуры

Процедура КоманднаяПанельНДФЛИсчисленный13ИзСправочникаФизическихЛиц(Кнопка)
	ФормаВыбора = Справочники.ФизическиеЛица.ПолучитьФормуВыбора();
	ФормаВыбора.ВладелецФормы = ЭлементыФормы.НДФЛИсчисленный13;
	ФормаВыбора.ЗакрыватьПриВыборе = Ложь;
	ФормаВыбора.Открыть();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНОЙ ПАНЕЛИ "КоманднаяПанельВычеты"

// Процедура - вызывается при нажатии на кнопку "Подбор"
//
Процедура КоманднаяПанельВычетыПодбор(Кнопка)
	ПроцедурыУправленияПерсоналом.ОткрытьФормуВыбораСотрудникаОрганизации(ЭлементыФормы.НДФЛПредоставленныеВычеты, Ссылка, Ложь, Дата, мГоловнаяОрганизация, 0);
КонецПроцедуры


Процедура НДФЛПредоставленныеВычетыПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если Элемент.Колонки.КолонкаКодовОП.Видимость Тогда
		ОформлениеСтроки.Ячейки.КолонкаКодовОП.Видимость = Ложь;
	КонецЕсли;
	МесяцНалоговогоПериодаТЧ = ДанныеСтроки.МесяцНалоговогоПериода;
	ОформлениеСтроки.Ячейки.МесяцНалоговогоПериода.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(МесяцНалоговогоПериодаТЧ);
	ПериодРегистрацииТЧ = ДанныеСтроки.ПериодРегистрации;
	ОформлениеСтроки.Ячейки.ПериодРегистрации.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(ПериодРегистрацииТЧ);
	
КонецПроцедуры


Процедура НДФЛПредоставленныеВычетыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
		Если НоваяСтрока И Не Копирование Тогда
		Элемент.ТекущаяСтрока.МесяцНалоговогоПериода = НачалоМесяца(Дата);
		Элемент.ТекущаяСтрока.ПериодРегистрации = НачалоМесяца(Дата);
	КонецЕсли;
	ЭлементыФормы.НДФЛПредоставленныеВычеты.Колонки.МесяцНалоговогоПериода.ЭлементУправления.Значение =
		РаботаСДиалогами.ДатаКакМесяцПредставление(Элемент.ТекущаяСтрока.МесяцНалоговогоПериода);
	ЭлементыФормы.НДФЛПредоставленныеВычеты.Колонки.ПериодРегистрации.ЭлементУправления.Значение =
		РаботаСДиалогами.ДатаКакМесяцПредставление(Элемент.ТекущаяСтрока.ПериодРегистрации);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНОЙ ПАНЕЛИ "КоманднаяПанельНДФЛУдержанный"

// Процедура - вызывается при нажатии на кнопку "Подбор"
//
Процедура КоманднаяПанельНДФЛУдержанныйПодбор(Кнопка)
	
	ПроцедурыУправленияПерсоналом.ОткрытьФормуВыбораСотрудникаОрганизации(ЭлементыФормы.НДФЛУдержанный, Ссылка, Ложь, Дата, мГоловнаяОрганизация);
	
КонецПроцедуры

 Процедура КоманднаяПанельНДФЛУдержанныйИзСправочникаФизическихЛиц(Кнопка)
	ФормаВыбора = Справочники.ФизическиеЛица.ПолучитьФормуВыбора();
	ФормаВыбора.ВладелецФормы = ЭлементыФормы.НДФЛУдержанный;
	ФормаВыбора.ЗакрыватьПриВыборе = Ложь;
	ФормаВыбора.Открыть();
КонецПроцедуры
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНОЙ ПАНЕЛИ "ЕСНСведенияОДоходах"

// Процедура - вызывается при нажатии на кнопку "Подбор"
//
Процедура КоманднаяПанельЕСНСведенияОДоходахПодбор(Кнопка)
	
	ПроцедурыУправленияПерсоналом.ОткрытьФормуВыбораСотрудникаОрганизации(ЭлементыФормы.ЕСНСведенияОДоходах, Ссылка, Ложь, Дата, мГоловнаяОрганизация);

КонецПроцедуры

Процедура КоманднаяПанельЕСНСведенияОДоходахИзСправочникаФизическихЛиц(Кнопка)
	ФормаВыбора = Справочники.ФизическиеЛица.ПолучитьФормуВыбора();
	ФормаВыбора.ВладелецФормы = ЭлементыФормы.ЕСНСведенияОДоходах;
	ФормаВыбора.ЗакрыватьПриВыборе = Ложь;
	ФормаВыбора.Открыть();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНОЙ ПАНЕЛИ "КоманднаяПанельЕСННалоги"

// Процедура - вызывается при нажатии на кнопку "Подбор"
//
Процедура КоманднаяПанельЕСННалогиПодбор(Кнопка)
	
	ПроцедурыУправленияПерсоналом.ОткрытьФормуВыбораСотрудникаОрганизации(ЭлементыФормы.ЕСННалоги, Ссылка, Ложь, Дата, мГоловнаяОрганизация);

КонецПроцедуры


Процедура КоманднаяПанельЕСННалогиИзСправочникаФизическихЛиц(Кнопка)
	ФормаВыбора = Справочники.ФизическиеЛица.ПолучитьФормуВыбора();
	ФормаВыбора.ВладелецФормы = ЭлементыФормы.ЕСННалоги;
	ФормаВыбора.ЗакрыватьПриВыборе = Ложь;
	ФормаВыбора.Открыть();
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНОЙ ПАНЕЛИ "КоманднаяПанельФССРасходы"

Процедура КоманднаяПанельФССРасходыПодбор(Кнопка)
	ПроцедурыУправленияПерсоналом.ОткрытьФормуВыбораСотрудникаОрганизации(ЭлементыФормы.ПособияСоциальномуСтрахованию, Ссылка, Ложь, Дата, мГоловнаяОрганизация);
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНОЙ ПАНЕЛИ "КоманднаяПанельФССРасходы"

Процедура КоманднаяПанельФССПоУходуПодбор(Кнопка)
	ПроцедурыУправленияПерсоналом.ОткрытьФормуВыбораСотрудникаОрганизации(ЭлементыФормы.ПособияПоУходуЗаРебенкомДоПолутораЛет, Ссылка, Ложь, Дата, мГоловнаяОрганизация);
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНЫХ ЧАСТЕЙ

// Процедура - обработчик оповещения о выборе, присланного формой рег-ра сведений
//
Процедура ТабличнаяЧастьОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
		ФизЛицо = ВыбранноеЗначение;
	Иначе
		Если ТипЗнч(ВыбранноеЗначение) <> Тип("СправочникСсылка.СотрудникиОрганизаций") Тогда
			Возврат;
		КонецЕсли;
		
		Физлицо = ВыбранноеЗначение.Физлицо;
		
	КонецЕсли;
	
	ТабличнаяЧасть = Элемент.Значение;
	Если ТабличнаяЧасть.НайтиСтроки(Новый Структура("ФизЛицо", ФизЛицо)).Количество() = 0 Тогда
		НачалоТекущегомесяца = НачалоМесяца(Дата);
		НоваяСтрока = ТабличнаяЧасть.Добавить();
		НоваяСтрока.Физлицо = Физлицо;
		
		
		Если Элемент.Колонки.Найти("МесяцНалоговогоПериода") <> Неопределено Тогда
			НоваяСтрока.МесяцНалоговогоПериода = НачалоТекущегомесяца;
		КонецЕсли;
		Если Элемент.Колонки.Найти("ПериодРегистрации") <> Неопределено Тогда
			НоваяСтрока.ПериодРегистрации = НачалоТекущегомесяца;
		КонецЕсли;
		Если Элемент.Колонки.Найти("МесяцРасчетногоПериода") <> Неопределено Тогда
			НоваяСтрока.МесяцРасчетногоПериода = НачалоТекущегомесяца;
		КонецЕсли;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры  // ТабличнаяЧастьОбработкаВыбора

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТАБЛИЧНОЙ ЧАСТИ НДФЛСведенияОДоходах

// при выводе строки следим за доступностью суммы налога
//
Процедура НДФЛСведенияОДоходахПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)

	Если Элемент.Колонки.СуммаНалогаИсчисленная.Видимость Тогда
		ОформлениеСтроки.Ячейки.СуммаНалогаИсчисленная.ТолькоПросмотр = ФизЛицоЯвляетсяРезидентом(ДанныеСтроки.ФизЛицо, ДанныеСтроки.МесяцНалоговогоПериода);	
	КонецЕсли;

	Если Элемент.Колонки.СуммаВычета.Видимость Тогда
		ОформлениеСтроки.Ячейки.СуммаВычета.ТолькоПросмотр = (ДанныеСтроки.КодВычета = мПустойКодВычета) и (ДанныеСтроки.КодДохода <> мДивиденды);
	КонецЕсли;
	
	Если Элемент.Колонки.КолонкаКодовОП.Видимость Тогда
		ОформлениеСтроки.Ячейки.КолонкаКодовОП.Видимость = Ложь;
	КонецЕсли;
	
	Если Элемент.Колонки.КоличествоДетей.Видимость Тогда
		ОформлениеСтроки.Ячейки.КоличествоДетей.Видимость = ДанныеСтроки.КодВычета = мВычетМатпомощьПриРожденииРебенка;
		ОформлениеСтроки.Ячейки.КоличествоДетей.ТолькоПросмотр = Не ОформлениеСтроки.Ячейки.КоличествоДетей.Видимость;
	КонецЕсли;
	
	ПериодРегистрацииТЧ = ДанныеСтроки.ПериодРегистрации;
	ОформлениеСтроки.Ячейки.ПериодРегистрации.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(ПериодРегистрацииТЧ);
	
КонецПроцедуры

// при изменении физлица
Процедура НДФЛСведенияОДоходахФизЛицоПриИзменении(Элемент)

	СведенияОДоходах = ЭлементыФормы.НДФЛСведенияОДоходах.ТекущиеДанные;

	// для кода по умолчанию вычет проставлять не будем
	Если СведенияОДоходах.КодДохода = Справочники.ДоходыНДФЛ.КодДоходаПоУмолчанию и НЕ ЗначениеЗаполнено(СведенияОДоходах.КодВычета) Тогда
		Возврат
	КонецЕсли;
	
	// Контролируем допустимость кода вычета
	Если ПолучитьСписокВычетовДляДохода(СведенияОДоходах).НайтиПоЗначению(СведенияОДоходах.КодВычета) = Неопределено Тогда
		// Если ранее установленный код вычета не доступен, то очистим его
		СведенияОДоходах.КодВычета = Неопределено;
	КонецЕсли;

	// пересчет суммы вычета и налога
    ПересчетСтрокиСведенийОДоходах(СведенияОДоходах);
	
КонецПроцедуры

// при изменении даты получения дохода
Процедура НДФЛСведенияОДоходахДатаДоходаПриИзменении(Элемент)

	СведенияОДоходах = ЭлементыФормы.НДФЛСведенияОДоходах.ТекущиеДанные;

	СведенияОДоходах.МесяцНалоговогоПериода = НачалоМесяца(Элемент.Значение);
	СведенияОДоходах.ПериодРегистрации = Элемент.Значение;

	// для кода по умолчанию вычет проставлять не будем
	Если СведенияОДоходах.КодДохода = Справочники.ДоходыНДФЛ.КодДоходаПоУмолчанию и НЕ ЗначениеЗаполнено(СведенияОДоходах.КодВычета) Тогда
		Возврат
	КонецЕсли;
	
	// Контролируем допустимость кода вычета
  	Если ПолучитьСписокВычетовДляДохода(СведенияОДоходах).НайтиПоЗначению(СведенияОДоходах.КодВычета) = Неопределено Тогда
		// Если ранее установленный код вычета не доступен, то очистим его
		СведенияОДоходах.КодВычета = Неопределено;
	КонецЕсли;

	// пересчет суммы вычета и налога
    ПересчетСтрокиСведенийОДоходах(СведенияОДоходах);

КонецПроцедуры

// при изменении периода регистрации
Процедура НДФЛСведенияОДоходахПериодРегистрацииПриИзменении(Элемент)

	Перем ПериодРегистрацииТЧ;
	РаботаСДиалогами.ДатаКакМесяцПодобратьДатуПоТексту(Элемент.Значение, ПериодРегистрацииТЧ);
	Элемент.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(ПериодРегистрацииТЧ);
	ЭлементыФормы.НДФЛСведенияОДоходах.ТекущаяСтрока.ПериодРегистрации = ПериодРегистрацииТЧ;

	// пересчет суммы вычета и налога
    ПересчетСтрокиСведенийОДоходах(ЭлементыФормы.НДФЛСведенияОДоходах.ТекущиеДанные);

КонецПроцедуры

// при изменении кода дохода выполняем расчет налога
//
Процедура НДФЛСведенияОДоходахКодДоходаПриИзменении(Элемент)

	СведенияОДоходах = ЭлементыФормы.НДФЛСведенияОДоходах.ТекущиеДанные;

	// для кода по умолчанию вычет проставлять не будем
	Если Элемент.Значение = Справочники.ДоходыНДФЛ.КодДоходаПоУмолчанию и НЕ ЗначениеЗаполнено(СведенияОДоходах.КодВычета) Тогда
		Возврат
	КонецЕсли;
	
	// Контролируем допустимость кода вычета
	СписокКодовВычетов = ПолучитьСписокВычетовДляДохода(СведенияОДоходах);

	Если СписокКодовВычетов.Количество() = 1 Тогда
		// Если доступен только один код вычета, то возьмём его
		СведенияОДоходах.КодВычета = СписокКодовВычетов[0].Значение;	
	Иначе
		Если СписокКодовВычетов.НайтиПоЗначению(СведенияОДоходах.КодВычета) = Неопределено Тогда
			// Если ранее установленный код вычета не доступен, то очистим его
			СведенияОДоходах.КодВычета = Неопределено;
		КонецЕсли;
	КонецЕсли;	

	Если СведенияОДоходах.КодВычета <> мВычетМатпомощьПриРожденииРебенка Тогда
		СведенияОДоходах.КоличествоДетей = 0
	КонецЕсли;
	
	// перераcчет суммы вычета и суммы налога
    ПересчетСтрокиСведенийОДоходах(СведенияОДоходах);

КонецПроцедуры

// при изменении суммы дохода выполняем расчет налога
//
Процедура НДФЛСведенияОДоходахСуммаДоходаПриИзменении(Элемент)
	СведенияОДоходах = ЭлементыФормы.НДФЛСведенияОДоходах.ТекущиеДанные;
	// перерасчет суммы вычета и суммы налога
    ПересчетСтрокиСведенийОДоходах(СведенияОДоходах);
КонецПроцедуры

// при изменении кода вычета выполняем расчет налога
//
Процедура НДФЛСведенияОДоходахКодВычетаПриИзменении(Элемент)

	Если ЭлементыФормы.НДФЛСведенияОДоходах.ТекущиеДанные.КодДохода <> мДивиденды Тогда
		// перерачет суммы вычета и суммы налога
	    ПересчетСтрокиСведенийОДоходах(ЭлементыФормы.НДФЛСведенияОДоходах.ТекущиеДанные);
	КонецЕсли;
	
	Если Элемент.Значение <> мВычетМатпомощьПриРожденииРебенка Тогда
		ЭлементыФормы.НДФЛСведенияОДоходах.ТекущиеДанные.КоличествоДетей = 0
	КонецЕсли;
	
КонецПроцедуры

// при выборе кода вычета
Процедура НДФЛСведенияОДоходахКодВычетаНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СписокОтбора = ПолучитьСписокВычетовДляДохода(ЭлементыФормы.НДФЛСведенияОДоходах.ТекущаяСтрока);
	Если СписокОтбора.Количество() > 0 Тогда
		ФормаВыбора = Справочники.ВычетыНДФЛ.ПолучитьФормуВыбора(, Элемент);
		ФормаВыбора.Отбор.Ссылка.ВидСравнения	= ВидСравнения.ВСписке;
		ФормаВыбора.Отбор.Ссылка.Значение		= СписокОтбора;
		ФормаВыбора.Отбор.Ссылка.Использование	= Истина;
		ФормаВыбора.НачальноеЗначениеВыбора = Элемент.Значение;
		ФормаВыбора.Открыть();
	Иначе	
		ЭлементСписка = ВыбратьИзСписка(СписокОтбора,Элемент,СписокОтбора.НайтиПоЗначению(Элемент.Значение));
		Если ЭлементСписка <> Неопределено Тогда
			Элемент.Значение = ЭлементСписка.Значение
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура НДФЛСведенияОДоходахКодВычетаАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;

    ЭлементСправочника = Справочники.ВычетыНДФЛ.НайтиПоКоду(СокрЛП(Текст));

	// допускается вводить только те коды доходов, которые есть в списке выбора 
	Если ПолучитьСписокВычетовДляДохода(ЭлементыФормы.НДФЛСведенияОДоходах.ТекущиеДанные).НайтиПоЗначению(ЭлементСправочника) <> Неопределено Тогда
		ТекстАвтоПодбора = ЭлементСправочника.Код;
	Иначе
		ТекстАвтоПодбора = "";
	КонецЕсли;
	
КонецПроцедуры

// при окончании ввода текста в реквизит "КодВычета"
Процедура НДФЛСведенияОДоходахКодВычетаОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

    ЭлементСправочника = Справочники.ВычетыНДФЛ.НайтиПоКоду(СокрЛП(Текст));

	// допускается вводить только те коды доходов, которые есть в списке выбора 
	Если ПолучитьСписокВычетовДляДохода(ЭлементыФормы.НДФЛСведенияОДоходах.ТекущиеДанные).НайтиПоЗначению(ЭлементСправочника) <> Неопределено Тогда
		Значение = ЭлементСправочника;
	КонецЕсли;	

КонецПроцедуры

// при начале выбора кода вычета из списка значение
Процедура НДФЛСведенияОДоходахКодВычетаНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	Элемент.СписокВыбора = ПолучитьСписокВычетовДляДохода(ЭлементыФормы.НДФЛСведенияОДоходах.ТекущаяСтрока);	
КонецПроцедуры

Процедура НДФЛСведенияОДоходахКоличествоДетейПриИзменении(Элемент)
    ПересчетСтрокиСведенийОДоходах(ЭлементыФормы.НДФЛСведенияОДоходах.ТекущиеДанные);
КонецПроцедуры

// при изменении суммы вычета выполняем расчет налога
//
Процедура НДФЛСведенияОДоходахСуммаВычетаПриИзменении(Элемент)
	СведенияОДоходах = ЭлементыФормы.НДФЛСведенияОДоходах.ТекущиеДанные;
	СведенияОДоходах.СуммаНалогаИсчисленная = СуммаНалогаИсчисленная(СведенияОДоходах);
КонецПроцедуры

Процедура НДФЛСведенияОДоходахКодПоОКАТОНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЭлементСписка = ВыбратьИзСписка(мСписокВыбораОКАТОиКПП,Элемент,мСписокВыбораОКАТОиКПП.НайтиПоЗначению(Элемент.Значение));
	Если ЭлементСписка <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(ЭлементыФормы.НДФЛСведенияОДоходах.ТекущиеДанные,ЭлементСписка.Значение,"КодПоОКАТО,КПП")
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТАБЛИЧНОЙ ЧАСТИ НДФЛИсчисленный13

Процедура НДФЛИсчисленный13ПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)

	Если Элемент.Колонки.КолонкаКодовОП.Видимость Тогда
		ОформлениеСтроки.Ячейки.КолонкаКодовОП.Видимость = Ложь;
	КонецЕсли;
	МесяцНалоговогоПериодаТЧ = ДанныеСтроки.МесяцНалоговогоПериода;
	ОформлениеСтроки.Ячейки.МесяцНалоговогоПериода.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(МесяцНалоговогоПериодаТЧ);
	ПериодРегистрацииТЧ = ДанныеСтроки.ПериодРегистрации;
	ОформлениеСтроки.Ячейки.ПериодРегистрации.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(ПериодРегистрацииТЧ);
	
КонецПроцедуры


// при изменении месяца налогового периода
Процедура НДФЛИсчисленный13МесяцНалоговогоПериодаПриИзменении(Элемент)
	Перем МесяцНалоговогоПериодаТЧ;
	РаботаСДиалогами.ДатаКакМесяцПодобратьДатуПоТексту(Элемент.Значение, МесяцНалоговогоПериодаТЧ);
	Элемент.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(МесяцНалоговогоПериодаТЧ);
	ЭлементыФормы.НДФЛИсчисленный13.ТекущаяСтрока.МесяцНалоговогоПериода = МесяцНалоговогоПериодаТЧ;
	
	ЭлементыФормы.НДФЛИсчисленный13.ТекущаяСтрока.ПериодРегистрации = МесяцНалоговогоПериодаТЧ;
КонецПроцедуры

// при изменении периода регистрации
Процедура НДФЛИсчисленный13ПериодРегистрацииПриИзменении(Элемент)
	Перем ПериодРегистрацииТЧ;
	РаботаСДиалогами.ДатаКакМесяцПодобратьДатуПоТексту(Элемент.Значение, ПериодРегистрацииТЧ);
	Элемент.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(ПериодРегистрацииТЧ);
	ЭлементыФормы.НДФЛИсчисленный13.ТекущаяСтрока.ПериодРегистрации = ПериодРегистрацииТЧ;
КонецПроцедуры

Процедура НДФЛИсчисленный13КодПоОКАТОНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЭлементСписка = ВыбратьИзСписка(мСписокВыбораОКАТОиКПП,Элемент,мСписокВыбораОКАТОиКПП.НайтиПоЗначению(Элемент.Значение));
	Если ЭлементСписка <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(ЭлементыФормы.НДФЛИсчисленный13.ТекущиеДанные,ЭлементСписка.Значение,"КодПоОКАТО,КПП")
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТАБЛИЧНОЙ ЧАСТИ НДФЛУдержанный

Процедура НДФЛУдержанныйПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)

	Если Элемент.Колонки.КолонкаКодовОП.Видимость Тогда
		ОформлениеСтроки.Ячейки.КолонкаКодовОП.Видимость = Ложь;
	КонецЕсли;
	
	Если Элемент.Колонки.КодДохода.Видимость Тогда
		ОформлениеСтроки.Ячейки.КодДохода.Видимость = ЗначениеЗаполнено(ДанныеСтроки.СтавкаНалогообложения) И ДанныеСтроки.СтавкаНалогообложения <> Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка13;
	КонецЕсли;
	
	МесяцНалоговогоПериодаТЧ = ДанныеСтроки.МесяцНалоговогоПериода;
	ОформлениеСтроки.Ячейки.МесяцНалоговогоПериода.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(МесяцНалоговогоПериодаТЧ);
	ПериодРегистрацииТЧ = ДанныеСтроки.ПериодРегистрации;
	ОформлениеСтроки.Ячейки.ПериодРегистрации.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(ПериодРегистрацииТЧ);
	
КонецПроцедуры


// при изменении месяца налогового периода
Процедура НДФЛУдержанныйМесяцНалоговогоПериодаПриИзменении(Элемент)
	Перем МесяцНалоговогоПериодаТЧ;
	РаботаСДиалогами.ДатаКакМесяцПодобратьДатуПоТексту(Элемент.Значение, МесяцНалоговогоПериодаТЧ);
	Элемент.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(МесяцНалоговогоПериодаТЧ);
	ЭлементыФормы.НДФЛУдержанный.ТекущаяСтрока.МесяцНалоговогоПериода = МесяцНалоговогоПериодаТЧ;
	
	ЭлементыФормы.НДФЛУдержанный.ТекущаяСтрока.ПериодРегистрации = МесяцНалоговогоПериодаТЧ;
КонецПроцедуры

Процедура НДФЛУдержанныйСтавкаНалогообложенияПриИзменении(Элемент)
	Если Не ЗначениеЗаполнено(Элемент.Значение) Тогда
		ЭлементыФормы.НДФЛУдержанный.ТекущиеДанные.КодДохода = ""
	КонецЕсли;
КонецПроцедуры

Процедура НДФЛУдержанныйКодДоходаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	//Предложим для выбора список кодов дохода, имеющих указанную ранее ставку
	ФормаВыбора = Справочники.ДоходыНДФЛ.ПолучитьФормуВыбора("ФормаВыбора", Элемент, "дляДокументаНДФЛиЕСНДоходыИНалоги");
	
	ФормаВыбора.НачальноеЗначениеВыбора = Элемент.Значение;
	
	ФормаВыбора.Отбор.СтавкаНалогообложенияРезидента.ВидСравнения	= ВидСравнения.Равно;
	ФормаВыбора.Отбор.СтавкаНалогообложенияРезидента.Значение		= ЭлементыФормы.НДФЛУдержанный.ТекущиеДанные.СтавкаНалогообложения;
	ФормаВыбора.Отбор.СтавкаНалогообложенияРезидента.Использование	= Истина;

	ФормаВыбора.Открыть();
	
КонецПроцедуры

Процедура НДФЛУдержанныйКодДоходаАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	ПроцедурыПоискаПоСтроке.АвтоПодборТекстаВЭлементеУправления(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка, ПолучитьСтруктуруПараметровТайпинга(), Элемент.ТипЗначения.Типы()[0]);
КонецПроцедуры

Процедура НДФЛУдержанныйКодДоходаОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	ПроцедурыПоискаПоСтроке.ОкончаниеВводаТекстаВЭлементеУправления(Элемент, Текст, Значение, СтандартнаяОбработка, ПолучитьСтруктуруПараметровТайпинга(), ЭтаФорма, Элемент.ТипЗначения.Типы()[0], мОбработкаТайпинга, мТекстТайпинга, мПоследнееЗначениеЭлементаТайпинга, Ложь);
КонецПроцедуры

Процедура НДФЛУдержанныйКодПоОКАТОНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЭлементСписка = ВыбратьИзСписка(мСписокВыбораОКАТОиКПП,Элемент,мСписокВыбораОКАТОиКПП.НайтиПоЗначению(Элемент.Значение));
	Если ЭлементСписка <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(ЭлементыФормы.НДФЛУдержанный.ТекущиеДанные,ЭлементСписка.Значение,"КодПоОКАТО,КПП")
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТАБЛИЧНОЙ ЧАСТИ ЕСНСведенияОДоходах


// при изменении месяца налогового периода
Процедура ЕСНСведенияОДоходахМесяцНалоговогоПериодаПриИзменении(Элемент)

	
	Перем МесяцНалоговогоПериодаТЧ;
	РаботаСДиалогами.ДатаКакМесяцПодобратьДатуПоТексту(Элемент.Значение, МесяцНалоговогоПериодаТЧ);
	Элемент.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(МесяцНалоговогоПериодаТЧ);
	ЭлементыФормы.ЕСНСведенияОДоходах.ТекущаяСтрока.МесяцНалоговогоПериода = МесяцНалоговогоПериодаТЧ;

КонецПроцедуры

Процедура ЕСНСведенияОДоходахМесяцНалоговогоПериодаНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	МесяцНалоговогоПериодаТЧ = ЭлементыФормы.ЕСНСведенияОДоходах.ТекущаяСтрока.МесяцНалоговогоПериода;
	РаботаСДиалогами.НачалоВыбораИзСпискаПредставленияПериодаРегистрации(Элемент, СтандартнаяОбработка, МесяцНалоговогоПериодаТЧ, ЭтаФорма);
	ЭлементыФормы.ЕСНСведенияОДоходах.ТекущаяСтрока.МесяцНалоговогоПериода = МесяцНалоговогоПериодаТЧ;
	
КонецПроцедуры

Процедура ЕСНСведенияОДоходахМесяцНалоговогоПериодаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	МесяцНалоговогоПериодаТЧ = ЭлементыФормы.ЕСНСведенияОДоходах.ТекущаяСтрока.МесяцНалоговогоПериода;
	МесяцНалоговогоПериодаТЧ = ДобавитьМесяц(МесяцНалоговогоПериодаТЧ, Направление);
	Элемент.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(МесяцНалоговогоПериодаТЧ);
	ЭлементыФормы.ЕСНСведенияОДоходах.ТекущаяСтрока.МесяцНалоговогоПериода = МесяцНалоговогоПериодаТЧ;
	
КонецПроцедуры

Процедура ЕСНСведенияОДоходахМесяцНалоговогоПериодаАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	
	РаботаСДиалогами.ДатаКакМесяцАвтоПодборТекста(Текст, ТекстАвтоПодбора, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ЕСНСведенияОДоходахМесяцНалоговогоПериодаОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	РаботаСДиалогами.ДатаКакМесяцОкончаниеВводаТекста(Текст, Значение, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ЕСНСведенияОДоходахКодДоходаЕСННачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЭлементСписка = ВыбратьИзСписка(мСписокКодовЕСН,Элемент,мСписокКодовЕСН.НайтиПоЗначению(Элемент.Значение));
	Если ЭлементСписка <> Неопределено Тогда
		Элемент.Значение = ЭлементСписка.Значение
	КонецЕсли;
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТАБЛИЧНОЙ ЧАСТИ ПособияСоциальномуСтрахованию

Процедура ПособияСоциальномуСтрахованиюОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) <> Тип("СправочникСсылка.СотрудникиОрганизаций") Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
		
	ТабличнаяЧасть = Элемент.Значение;
	Если ТабличнаяЧасть.НайтиСтроки(Новый Структура("Сотрудник", ВыбранноеЗначение)).Количество() = 0 Тогда
		НоваяСтрока = ТабличнаяЧасть.Добавить();
		НоваяСтрока.Физлицо = ВыбранноеЗначение.Физлицо;
		НоваяСтрока.Сотрудник = ВыбранноеЗначение;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

Процедура ПособияСоциальномуСтрахованиюПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	// Вставить содержимое обработчика.
	Если НоваяСтрока И Не Копирование Тогда
		Элемент.ТекущаяСтрока.УчитыватьКакНовыйСтраховойСлучай = Истина
	КонецЕсли;
КонецПроцедуры

Процедура ПособияСоциальномуСтрахованиюСотрудникПриИзменении(Элемент)
	ЭлементыФормы.ПособияСоциальномуСтрахованию.ТекущиеДанные.ФизЛицо = Элемент.Значение.ФизЛицо;
КонецПроцедуры

// Процедура - обработчик события "НачалоВыбора" поля ввода физлица
// переопределим выбор физлица на выбор из списка регистра сведений
//
Процедура ПособияСоциальномуСтрахованиюСотрудникНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ПроцедурыУправленияПерсоналом.ОткрытьФормуВыбораСотрудникаОрганизации(Элемент, Ссылка, Истина, Дата, мГоловнаяОрганизация, 1, СтандартнаяОбработка, Элемент.Значение);
	
КонецПроцедуры // ПособияСоциальномуСтрахованиюСотрудникНачалоВыбора()

// Процедура - обработчик события "АвтоПодборТекста" поля ввода физлица
// переопределим выбор физлица на выбор из списка регистра сведений
//
Процедура ПособияСоциальномуСтрахованиюСотрудникАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	
	ТекстАвтоПодбора = ПроцедурыУправленияПерсоналом.ПодобратьФИОРаботникаКандидата(СтандартнаяОбработка, "РаботникиОрганизации", Текст, Организация);
	
КонецПроцедуры // ПособияСоциальномуСтрахованиюСотрудникАвтоПодборТекста()

// Процедура - обработчик события "ОкончаниеВводаТекста" поля ввода физлица
// переопределим выбор физлица на выбор из списка регистра сведений
//
Процедура ПособияСоциальномуСтрахованиюСотрудникОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	Значение = ПроцедурыУправленияПерсоналом.ПодобратьСписокРаботниковКандидатов(СтандартнаяОбработка, "РаботникиОрганизации", Текст, Элемент.Значение, Организация);
	
КонецПроцедуры // ПособияСоциальномуСтрахованиюСотрудникОкончаниеВводаТекста()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТАБЛИЧНОЙ ЧАСТИ ПособияПоУходуЗаРебенкомДоПолутораЛет

Процедура ПособияПоУходуЗаРебенкомДоПолутораЛетОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) <> Тип("СправочникСсылка.СотрудникиОрганизаций") Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
		
	ТабличнаяЧасть = Элемент.Значение;
	Если ТабличнаяЧасть.НайтиСтроки(Новый Структура("Сотрудник", ВыбранноеЗначение)).Количество() = 0 Тогда
		НоваяСтрока = ТабличнаяЧасть.Добавить();
		НоваяСтрока.Физлицо = ВыбранноеЗначение.Физлицо;
		НоваяСтрока.Сотрудник = ВыбранноеЗначение;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

// Процедура вызова структуры подчиненности документа
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
КонецПроцедуры

// Процедура - обработчик нажатия на любую из дополнительных кнопок по заполнению ТЧ
//
Процедура НажатиеНаДополнительнуюКнопкуЗаполненияТЧ(Кнопка)
	
	УниверсальныеМеханизмы.ОбработатьНажатиеНаДополнительнуюКнопкуЗаполненияТЧ(мКнопкиЗаполненияТЧ.Строки.Найти(Кнопка.Имя,"Имя",Истина),ЭтотОбъект);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать по умолчанию"
//
Процедура ОсновныеДействияФормыПечатьПоУмолчанию(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать"
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Установить печать по умолчанию"
//
Процедура ОсновныеДействияФормыУстановитьПечатьПоУмолчанию(Кнопка)
	
	Если УниверсальныеМеханизмы.НазначитьКнопкуПечатиПоУмолчанию(мДеревоМакетов, Метаданные().Имя) Тогда
		
		УстановитьКнопкиПечати();
		
	КонецЕсли; 
	
	
КонецПроцедуры

// Процедура разрешения/запрещения редактирования номера документа
Процедура ДействияФормыРедактироватьНомер(Кнопка)
	
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
			
КонецПроцедуры

Процедура НДФЛСведенияОДоходахПериодРегистрацииНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
		
	ПериодРегистрацииТЧ = ЭлементыФормы.НДФЛСведенияОДоходах.ТекущаяСтрока.ПериодРегистрации;
	РаботаСДиалогами.НачалоВыбораИзСпискаПредставленияПериодаРегистрации(Элемент, СтандартнаяОбработка, ПериодРегистрацииТЧ, ЭтаФорма);
	ЭлементыФормы.НДФЛСведенияОДоходах.ТекущаяСтрока.ПериодРегистрации = ПериодРегистрацииТЧ;
	
	// пересчет суммы вычета и налога
    ПересчетСтрокиСведенийОДоходах(ЭлементыФормы.НДФЛСведенияОДоходах.ТекущиеДанные);

КонецПроцедуры

Процедура НДФЛСведенияОДоходахПериодРегистрацииРегулирование(Элемент, Направление, СтандартнаяОбработка)
		
	ПериодРегистрацииТЧ = ЭлементыФормы.НДФЛСведенияОДоходах.ТекущаяСтрока.ПериодРегистрации;
	ПериодРегистрацииТЧ = ДобавитьМесяц(ПериодРегистрацииТЧ, Направление);
	Элемент.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(ПериодРегистрацииТЧ);
	ЭлементыФормы.НДФЛСведенияОДоходах.ТекущаяСтрока.ПериодРегистрации = ПериодРегистрацииТЧ;
	
	// пересчет суммы вычета и налога
    ПересчетСтрокиСведенийОДоходах(ЭлементыФормы.НДФЛСведенияОДоходах.ТекущиеДанные);

КонецПроцедуры

Процедура НДФЛСведенияОДоходахПериодРегистрацииАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
		
	РаботаСДиалогами.ДатаКакМесяцАвтоПодборТекста(Текст, ТекстАвтоПодбора, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура НДФЛСведенияОДоходахПериодРегистрацииОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	РаботаСДиалогами.ДатаКакМесяцОкончаниеВводаТекста(Текст, Значение, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура НДФЛУдержанныйМесяцНалоговогоПериодаНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
		
	МесяцНалоговогоПериодаТЧ = ЭлементыФормы.НДФЛУдержанный.ТекущаяСтрока.МесяцНалоговогоПериода;
	РаботаСДиалогами.НачалоВыбораИзСпискаПредставленияПериодаРегистрации(Элемент, СтандартнаяОбработка, МесяцНалоговогоПериодаТЧ, ЭтаФорма);
	ЭлементыФормы.НДФЛУдержанный.ТекущаяСтрока.МесяцНалоговогоПериода = МесяцНалоговогоПериодаТЧ;
	
	ЭлементыФормы.НДФЛУдержанный.ТекущаяСтрока.ПериодРегистрации = МесяцНалоговогоПериодаТЧ;
	

КонецПроцедуры

Процедура НДФЛУдержанныйМесяцНалоговогоПериодаРегулирование(Элемент, Направление, СтандартнаяОбработка)
		
	МесяцНалоговогоПериодаТЧ = ЭлементыФормы.НДФЛУдержанный.ТекущаяСтрока.МесяцНалоговогоПериода;
	МесяцНалоговогоПериодаТЧ = ДобавитьМесяц(МесяцНалоговогоПериодаТЧ, Направление);
	Элемент.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(МесяцНалоговогоПериодаТЧ);
	ЭлементыФормы.НДФЛУдержанный.ТекущаяСтрока.МесяцНалоговогоПериода = МесяцНалоговогоПериодаТЧ;
	
	ЭлементыФормы.НДФЛУдержанный.ТекущаяСтрока.ПериодРегистрации = МесяцНалоговогоПериодаТЧ;
	

КонецПроцедуры

Процедура НДФЛУдержанныйМесяцНалоговогоПериодаАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
		
	РаботаСДиалогами.ДатаКакМесяцАвтоПодборТекста(Текст, ТекстАвтоПодбора, СтандартнаяОбработка);
	

КонецПроцедуры

Процедура НДФЛУдержанныйМесяцНалоговогоПериодаОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
		
	РаботаСДиалогами.ДатаКакМесяцОкончаниеВводаТекста(Текст, Значение, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура НДФЛУдержанныйПериодРегистрацииПриИзменении(Элемент)
		
	Перем ПериодРегистрацииТЧ;
	РаботаСДиалогами.ДатаКакМесяцПодобратьДатуПоТексту(Элемент.Значение, ПериодРегистрацииТЧ);
	Элемент.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(ПериодРегистрацииТЧ);
	ЭлементыФормы.НДФЛУдержанный.ТекущаяСтрока.ПериодРегистрации = ПериодРегистрацииТЧ;
	

КонецПроцедуры

Процедура НДФЛУдержанныйПериодРегистрацииНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
		
	ПериодРегистрацииТЧ = ЭлементыФормы.НДФЛУдержанный.ТекущаяСтрока.ПериодРегистрации;
	РаботаСДиалогами.НачалоВыбораИзСпискаПредставленияПериодаРегистрации(Элемент, СтандартнаяОбработка, ПериодРегистрацииТЧ, ЭтаФорма);
	ЭлементыФормы.НДФЛУдержанный.ТекущаяСтрока.ПериодРегистрации = ПериодРегистрацииТЧ;
	

КонецПроцедуры

Процедура НДФЛУдержанныйПериодРегистрацииРегулирование(Элемент, Направление, СтандартнаяОбработка)
		
	ПериодРегистрацииТЧ = ЭлементыФормы.НДФЛУдержанный.ТекущаяСтрока.ПериодРегистрации;
	ПериодРегистрацииТЧ = ДобавитьМесяц(ПериодРегистрацииТЧ, Направление);
	Элемент.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(ПериодРегистрацииТЧ);
	ЭлементыФормы.НДФЛУдержанный.ТекущаяСтрока.ПериодРегистрации = ПериодРегистрацииТЧ;
	

КонецПроцедуры

Процедура НДФЛУдержанныйПериодРегистрацииАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
		
	РаботаСДиалогами.ДатаКакМесяцАвтоПодборТекста(Текст, ТекстАвтоПодбора, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура НДФЛУдержанныйПериодРегистрацииОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
		
	РаботаСДиалогами.ДатаКакМесяцОкончаниеВводаТекста(Текст, Значение, СтандартнаяОбработка);

КонецПроцедуры

Процедура ЕСННалогиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока И Не Копирование Тогда
		Элемент.ТекущаяСтрока.МесяцНалоговогоПериода = НачалоМесяца(Дата);
	КонецЕсли;
	ЭлементыФормы.ЕСННалоги.Колонки.МесяцНалоговогоПериода.ЭлементУправления.Значение =
		РаботаСДиалогами.ДатаКакМесяцПредставление(Элемент.ТекущаяСтрока.МесяцНалоговогоПериода)
КонецПроцедуры

Процедура ЕСННалогиПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
		
	МесяцНалоговогоПериодаТЧ = ДанныеСтроки.МесяцНалоговогоПериода;
	ОформлениеСтроки.Ячейки.МесяцНалоговогоПериода.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(МесяцНалоговогоПериодаТЧ);
	

КонецПроцедуры

Процедура ЕСНСведенияОДоходахПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
		
	Если НоваяСтрока И Не Копирование Тогда
		Элемент.ТекущаяСтрока.МесяцНалоговогоПериода = НачалоМесяца(Дата);
	КонецЕсли;
	ЭлементыФормы.ЕСНСведенияОДоходах.Колонки.МесяцНалоговогоПериода.ЭлементУправления.Значение =
		РаботаСДиалогами.ДатаКакМесяцПредставление(Элемент.ТекущаяСтрока.МесяцНалоговогоПериода)

КонецПроцедуры

Процедура ЕСНСведенияОДоходахПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
		
	МесяцНалоговогоПериодаТЧ = ДанныеСтроки.МесяцНалоговогоПериода;
	ОформлениеСтроки.Ячейки.МесяцНалоговогоПериода.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(МесяцНалоговогоПериодаТЧ);
	

КонецПроцедуры

Процедура НДФЛСведенияОДоходахПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	ЭлементыФормы.НДФЛСведенияОДоходах.Колонки.ПериодРегистрации.ЭлементУправления.Значение =
	РаботаСДиалогами.ДатаКакМесяцПредставление(Элемент.ТекущаяСтрока.ПериодРегистрации);
КонецПроцедуры

Процедура НДФЛИсчисленный13ПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
		
	Если НоваяСтрока И Не Копирование Тогда
		Элемент.ТекущаяСтрока.МесяцНалоговогоПериода = НачалоМесяца(Дата);
		Элемент.ТекущаяСтрока.ПериодРегистрации = НачалоМесяца(Дата);
	КонецЕсли;
	ЭлементыФормы.НДФЛИсчисленный13.Колонки.МесяцНалоговогоПериода.ЭлементУправления.Значение =
		РаботаСДиалогами.ДатаКакМесяцПредставление(Элемент.ТекущаяСтрока.МесяцНалоговогоПериода);
	ЭлементыФормы.НДФЛИсчисленный13.Колонки.ПериодРегистрации.ЭлементУправления.Значение =
		РаботаСДиалогами.ДатаКакМесяцПредставление(Элемент.ТекущаяСтрока.ПериодРегистрации);

КонецПроцедуры

Процедура НДФЛУдержанныйПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока И Не Копирование Тогда
		Элемент.ТекущаяСтрока.МесяцНалоговогоПериода = НачалоМесяца(Дата);
		Элемент.ТекущаяСтрока.ПериодРегистрации = НачалоМесяца(Дата);
	КонецЕсли;
	
	ЭлементыФормы.НДФЛУдержанный.Колонки.МесяцНалоговогоПериода.ЭлементУправления.Значение =
	РаботаСДиалогами.ДатаКакМесяцПредставление(Элемент.ТекущаяСтрока.МесяцНалоговогоПериода);
	ЭлементыФормы.НДФЛУдержанный.Колонки.ПериодРегистрации.ЭлементУправления.Значение =
	РаботаСДиалогами.ДатаКакМесяцПредставление(Элемент.ТекущаяСтрока.ПериодРегистрации);
	
	
КонецПроцедуры
	
Процедура НДФЛИсчисленный13МесяцНалоговогоПериодаНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
		
	МесяцНалоговогоПериодаТЧ = ЭлементыФормы.НДФЛИсчисленный13.ТекущаяСтрока.МесяцНалоговогоПериода;
	РаботаСДиалогами.НачалоВыбораИзСпискаПредставленияПериодаРегистрации(Элемент, СтандартнаяОбработка, МесяцНалоговогоПериодаТЧ, ЭтаФорма);
	ЭлементыФормы.НДФЛИсчисленный13.ТекущаяСтрока.МесяцНалоговогоПериода = МесяцНалоговогоПериодаТЧ;
	
	ЭлементыФормы.НДФЛИсчисленный13.ТекущаяСтрока.ПериодРегистрации = МесяцНалоговогоПериодаТЧ;
	
КонецПроцедуры

Процедура НДФЛИсчисленный13МесяцНалоговогоПериодаРегулирование(Элемент, Направление, СтандартнаяОбработка)
		
	МесяцНалоговогоПериодаТЧ = ЭлементыФормы.НДФЛИсчисленный13.ТекущаяСтрока.МесяцНалоговогоПериода;
	МесяцНалоговогоПериодаТЧ = ДобавитьМесяц(МесяцНалоговогоПериодаТЧ, Направление);
	Элемент.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(МесяцНалоговогоПериодаТЧ);
	ЭлементыФормы.НДФЛИсчисленный13.ТекущаяСтрока.МесяцНалоговогоПериода = МесяцНалоговогоПериодаТЧ;
	
	ЭлементыФормы.НДФЛИсчисленный13.ТекущаяСтрока.ПериодРегистрации = МесяцНалоговогоПериодаТЧ;
	
КонецПроцедуры

Процедура НДФЛИсчисленный13МесяцНалоговогоПериодаАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
		
	РаботаСДиалогами.ДатаКакМесяцАвтоПодборТекста(Текст, ТекстАвтоПодбора, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура НДФЛИсчисленный13МесяцНалоговогоПериодаОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
		
	РаботаСДиалогами.ДатаКакМесяцОкончаниеВводаТекста(Текст, Значение, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура НДФЛИсчисленный13ПериодРегистрацииНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
		
	ПериодРегистрацииТЧ = ЭлементыФормы.НДФЛИсчисленный13.ТекущаяСтрока.ПериодРегистрации;
	РаботаСДиалогами.НачалоВыбораИзСпискаПредставленияПериодаРегистрации(Элемент, СтандартнаяОбработка, ПериодРегистрацииТЧ, ЭтаФорма);
	ЭлементыФормы.НДФЛИсчисленный13.ТекущаяСтрока.ПериодРегистрации = ПериодРегистрацииТЧ;
	
КонецПроцедуры

Процедура НДФЛИсчисленный13ПериодРегистрацииРегулирование(Элемент, Направление, СтандартнаяОбработка)
		
	ПериодРегистрацииТЧ = ЭлементыФормы.НДФЛИсчисленный13.ТекущаяСтрока.ПериодРегистрации;
	ПериодРегистрацииТЧ = ДобавитьМесяц(ПериодРегистрацииТЧ, Направление);
	Элемент.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(ПериодРегистрацииТЧ);
	ЭлементыФормы.НДФЛИсчисленный13.ТекущаяСтрока.ПериодРегистрации = ПериодРегистрацииТЧ;
	
КонецПроцедуры

Процедура НДФЛИсчисленный13ПериодРегистрацииАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
		
	РаботаСДиалогами.ДатаКакМесяцАвтоПодборТекста(Текст, ТекстАвтоПодбора, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура НДФЛИсчисленный13ПериодРегистрацииОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
		
	РаботаСДиалогами.ДатаКакМесяцОкончаниеВводаТекста(Текст, Значение, СтандартнаяОбработка);
	
КонецПроцедуры
	
Процедура НДФЛПредоставленныеВычетыМесяцНалоговогоПериодаПриИзменении(Элемент)
		
	Перем МесяцНалоговогоПериодаТЧ;
	РаботаСДиалогами.ДатаКакМесяцПодобратьДатуПоТексту(Элемент.Значение, МесяцНалоговогоПериодаТЧ);
	Элемент.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(МесяцНалоговогоПериодаТЧ);
	ЭлементыФормы.НДФЛПредоставленныеВычеты.ТекущаяСтрока.МесяцНалоговогоПериода = МесяцНалоговогоПериодаТЧ;
	
КонецПроцедуры

Процедура НДФЛПредоставленныеВычетыМесяцНалоговогоПериодаНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
		
	МесяцНалоговогоПериодаТЧ = ЭлементыФормы.НДФЛПредоставленныеВычеты.ТекущаяСтрока.МесяцНалоговогоПериода;
	РаботаСДиалогами.НачалоВыбораИзСпискаПредставленияПериодаРегистрации(Элемент, СтандартнаяОбработка, МесяцНалоговогоПериодаТЧ, ЭтаФорма);
	ЭлементыФормы.НДФЛПредоставленныеВычеты.ТекущаяСтрока.МесяцНалоговогоПериода = МесяцНалоговогоПериодаТЧ;
	
КонецПроцедуры

Процедура НДФЛПредоставленныеВычетыМесяцНалоговогоПериодаРегулирование(Элемент, Направление, СтандартнаяОбработка)
		
	МесяцНалоговогоПериодаТЧ = ЭлементыФормы.НДФЛПредоставленныеВычеты.ТекущаяСтрока.МесяцНалоговогоПериода;
	МесяцНалоговогоПериодаТЧ = ДобавитьМесяц(МесяцНалоговогоПериодаТЧ, Направление);
	Элемент.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(МесяцНалоговогоПериодаТЧ);
	ЭлементыФормы.НДФЛПредоставленныеВычеты.ТекущаяСтрока.МесяцНалоговогоПериода = МесяцНалоговогоПериодаТЧ;
	
КонецПроцедуры

Процедура НДФЛПредоставленныеВычетыМесяцНалоговогоПериодаАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
		
	РаботаСДиалогами.ДатаКакМесяцАвтоПодборТекста(Текст, ТекстАвтоПодбора, СтандартнаяОбработка);

КонецПроцедуры

Процедура НДФЛПредоставленныеВычетыМесяцНалоговогоПериодаОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
		
	РаботаСДиалогами.ДатаКакМесяцОкончаниеВводаТекста(Текст, Значение, СтандартнаяОбработка);

КонецПроцедуры

Процедура НДФЛПредоставленныеВычетыПериодРегистрацииПриИзменении(Элемент)
		
	Перем ПериодРегистрацииТЧ;
	РаботаСДиалогами.ДатаКакМесяцПодобратьДатуПоТексту(Элемент.Значение, ПериодРегистрацииТЧ);
	Элемент.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(ПериодРегистрацииТЧ);
	ЭлементыФормы.НДФЛПредоставленныеВычеты.ТекущаяСтрока.ПериодРегистрации = ПериодРегистрацииТЧ;
	
КонецПроцедуры

Процедура НДФЛПредоставленныеВычетыПериодРегистрацииНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
		
	ПериодРегистрацииТЧ = ЭлементыФормы.НДФЛПредоставленныеВычеты.ТекущаяСтрока.ПериодРегистрации;
	РаботаСДиалогами.НачалоВыбораИзСпискаПредставленияПериодаРегистрации(Элемент, СтандартнаяОбработка, ПериодРегистрацииТЧ, ЭтаФорма);
	ЭлементыФормы.НДФЛПредоставленныеВычеты.ТекущаяСтрока.ПериодРегистрации = ПериодРегистрацииТЧ;

КонецПроцедуры

Процедура НДФЛПредоставленныеВычетыПериодРегистрацииРегулирование(Элемент, Направление, СтандартнаяОбработка)
		
	ПериодРегистрацииТЧ = ЭлементыФормы.НДФЛПредоставленныеВычеты.ТекущаяСтрока.ПериодРегистрации;
	ПериодРегистрацииТЧ = ДобавитьМесяц(ПериодРегистрацииТЧ, Направление);
	Элемент.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(ПериодРегистрацииТЧ);
	ЭлементыФормы.НДФЛПредоставленныеВычеты.ТекущаяСтрока.ПериодРегистрации = ПериодРегистрацииТЧ;

КонецПроцедуры

Процедура НДФЛПредоставленныеВычетыПериодРегистрацииАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
		
	РаботаСДиалогами.ДатаКакМесяцАвтоПодборТекста(Текст, ТекстАвтоПодбора, СтандартнаяОбработка);

КонецПроцедуры

Процедура НДФЛПредоставленныеВычетыПериодРегистрацииОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
		
	РаботаСДиалогами.ДатаКакМесяцОкончаниеВводаТекста(Текст, Значение, СтандартнаяОбработка);

КонецПроцедуры


Процедура НалоговыйПериодПриИзменении(Элемент)
	УправлениеЗакладкамиЕСНСтраховыхВзносов(Истина)
КонецПроцедуры

// Процедура - обработчик события "Нажатие" кнопки "Заполнить" командной панели "КоманднаяПанельСтраховыеВзносыСведенияОДоходах"
Процедура КоманднаяПанельСтраховыеВзносыСведенияОДоходахЗаполнить(Кнопка)

      Если СтраховыеВзносыСведенияОДоходах.Количество() > 0 Тогда
		Ответ = Вопрос("Имеющиеся данные учета доходов по страховым взносам будут удалены.
		|Продолжить?", РежимДиалогаВопрос.ОКОтмена);
		Если Ответ = КодВозвратаДиалога.Отмена Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	СтраховыеВзносыСведенияОДоходах.Очистить();
	
    Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ВременнаяТаблица = НДФЛСведенияОДоходах.Выгрузить(,"ФизЛицо,ПериодРегистрации,СуммаДохода,СуммаВычета,КодДохода");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДФЛиЕСНДоходыИНалогиНДФЛСведенияОДоходах.ФизЛицо КАК ФизЛицо,
	|	НДФЛиЕСНДоходыИНалогиНДФЛСведенияОДоходах.ПериодРегистрации КАК ПериодРегистрации,
	|	НДФЛиЕСНДоходыИНалогиНДФЛСведенияОДоходах.СуммаДохода КАК СуммаДохода,
	|	НДФЛиЕСНДоходыИНалогиНДФЛСведенияОДоходах.СуммаВычета КАК СуммаВычета,
	|	НДФЛиЕСНДоходыИНалогиНДФЛСведенияОДоходах.КодДохода КАК КодДохода
	|ПОМЕСТИТЬ ВТДанныеДокумента
	|ИЗ
	|	&НДФЛСведенияОДоходах КАК НДФЛиЕСНДоходыИНалогиНДФЛСведенияОДоходах
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	ПериодРегистрации,
	|	КодДохода";
	Запрос.УстановитьПараметр("НДФЛСведенияОДоходах", ВременнаяТаблица);
	Запрос.Выполнить();
						  
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДФЛиЕСНДоходыИНалогиНДФЛСведенияОДоходах.ФизЛицо КАК ФизЛицо,
	|	НДФЛиЕСНДоходыИНалогиНДФЛСведенияОДоходах.ПериодРегистрации КАК ПериодРегистрации,
	|	СУММА(НДФЛиЕСНДоходыИНалогиНДФЛСведенияОДоходах.СуммаДохода) КАК СуммаДохода,
	|	СУММА(НДФЛиЕСНДоходыИНалогиНДФЛСведенияОДоходах.СуммаВычета) КАК СуммаВычета,
	|	НДФЛиЕСНДоходыИНалогиНДФЛСведенияОДоходах.КодДохода
	|ИЗ
	|	ВТДанныеДокумента КАК НДФЛиЕСНДоходыИНалогиНДФЛСведенияОДоходах
	|
	|СГРУППИРОВАТЬ ПО
	|	НДФЛиЕСНДоходыИНалогиНДФЛСведенияОДоходах.ФизЛицо,
	|	НДФЛиЕСНДоходыИНалогиНДФЛСведенияОДоходах.ПериодРегистрации,
	|	НДФЛиЕСНДоходыИНалогиНДФЛСведенияОДоходах.КодДохода";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл

		КодДохода = Выборка.КодДохода;
		СуммаДоходаНДФЛ = Выборка.СуммаДохода;
		СуммаВычетаНДФЛ = Выборка.СуммаВычета;

		СуммаДохода = 0;
        СуммаСкидки = 0;
		
		Если 
			(КодДохода = Справочники.ДоходыНДФЛ.Код2720) или
			(КодДохода = Справочники.ДоходыНДФЛ.Код2730) или
			(КодДохода = Справочники.ДоходыНДФЛ.Код2740) или
			(КодДохода = Справочники.ДоходыНДФЛ.Код2750) Тогда
			
			// Не облагается ЕСН целиком согласно пп. 1–12 ст. 238 НК РФ (кроме пособий за счет ФСС)
			ВидДохода = Справочники.ДоходыПоСтраховымВзносам.НеОблагаетсяЦеликом;
			СуммаДохода = СуммаДоходаНДФЛ;
			
		ИначеЕсли  (КодДохода = Справочники.ДоходыНДФЛ.Код1010) Тогда  // дивиденды - не является объектом налогообложения ЕСН 

			
		ИначеЕсли  (КодДохода = Справочники.ДоходыНДФЛ.Код2300) Тогда  // больничные
            // пособия за счет ФСС
			ВидДохода = Справочники.ДоходыПоСтраховымВзносам.ПособияЗаСчетФСС;
			СуммаДохода = СуммаДоходаНДФЛ;
			
		ИначеЕсли  (КодДохода = Справочники.ДоходыНДФЛ.Код2010) Тогда  // договора ГПХ (кроме авторских)

			ВидДохода = Справочники.ДоходыПоСтраховымВзносам.ДоговорыГПХ;
			СуммаДохода = СуммаДоходаНДФЛ;
			
		ИначеЕсли  (КодДохода = Справочники.ДоходыНДФЛ.Код2760) Тогда  // Материальная помощь (только для бюджетных организаций)
			
			// годовая скидка 
			ВидДохода = Справочники.ДоходыПоСтраховымВзносам.Матпомощь;
			СуммаДохода = СуммаДоходаНДФЛ;
			СуммаСкидки = СуммаВычетаНДФЛ;

		ИначеЕсли  КодДохода = Справочники.ДоходыНДФЛ.Код2201 Тогда
			
			// авторские вознаграждения
			ВидДохода = Справочники.ДоходыПоСтраховымВзносам.АвторскиеЛитературныеПроизведения;
			СуммаДохода = СуммаДоходаНДФЛ;
			СуммаСкидки = СуммаВычетаНДФЛ;
			
		ИначеЕсли  КодДохода = Справочники.ДоходыНДФЛ.Код2202 Тогда
			
			// авторские вознаграждения
			ВидДохода = Справочники.ДоходыПоСтраховымВзносам.АвторскиеГрафическиеПроизведения;
			СуммаДохода = СуммаДоходаНДФЛ;
			СуммаСкидки = СуммаВычетаНДФЛ;
			
		ИначеЕсли  КодДохода = Справочники.ДоходыНДФЛ.Код2203 Тогда
			
			// авторские вознаграждения
			ВидДохода = Справочники.ДоходыПоСтраховымВзносам.АвторскиеСкульптуры;
			СуммаДохода = СуммаДоходаНДФЛ;
			СуммаСкидки = СуммаВычетаНДФЛ;
			
		ИначеЕсли  КодДохода = Справочники.ДоходыНДФЛ.Код2204 Тогда
			
			// авторские вознаграждения
			ВидДохода = Справочники.ДоходыПоСтраховымВзносам.АвторскиеАудиовизуальныеПроизведения;
			СуммаДохода = СуммаДоходаНДФЛ;
			СуммаСкидки = СуммаВычетаНДФЛ;
			
		ИначеЕсли  КодДохода = Справочники.ДоходыНДФЛ.Код2205 Тогда
			
			// авторские вознаграждения
			ВидДохода = Справочники.ДоходыПоСтраховымВзносам.АвторскиеМузыкальноСценическиеПроизведение;
			СуммаДохода = СуммаДоходаНДФЛ;
			СуммаСкидки = СуммаВычетаНДФЛ;
			
		ИначеЕсли  КодДохода = Справочники.ДоходыНДФЛ.Код2206 Тогда
			
			// авторские вознаграждения
			ВидДохода = Справочники.ДоходыПоСтраховымВзносам.АвторскиеДругиеМузыкальныеПроизведения;
			СуммаДохода = СуммаДоходаНДФЛ;
			СуммаСкидки = СуммаВычетаНДФЛ;
			
		ИначеЕсли  КодДохода = Справочники.ДоходыНДФЛ.Код2207 Тогда
			
			// авторские вознаграждения
			ВидДохода = Справочники.ДоходыПоСтраховымВзносам.АвторскиеИсполнениеПроизведений;
			СуммаДохода = СуммаДоходаНДФЛ;
			СуммаСкидки = СуммаВычетаНДФЛ;
			
		ИначеЕсли  КодДохода = Справочники.ДоходыНДФЛ.Код2208 Тогда
			
			// авторские вознаграждения
			ВидДохода = Справочники.ДоходыПоСтраховымВзносам.АвторскиеНаучныеТруды;
			СуммаДохода = СуммаДоходаНДФЛ;
			СуммаСкидки = СуммаВычетаНДФЛ;
			
		ИначеЕсли  КодДохода = Справочники.ДоходыНДФЛ.Код2209 Тогда
			
			// авторские вознаграждения
			ВидДохода = Справочники.ДоходыПоСтраховымВзносам.АвторскиеОткрытия;
			СуммаДохода = СуммаДоходаНДФЛ;
			СуммаСкидки = СуммаВычетаНДФЛ;
			
		ИначеЕсли  КодДохода = Справочники.ДоходыНДФЛ.МатпомощьПриРожденииРебенка Тогда
            // Материальная помощь, оказываемая работодателями своим работникам при рождении (усыновлении) ребенка
			ВидДохода = Справочники.ДоходыПоСтраховымВзносам.МатпомощьПриРожденииРебенка;
			СуммаДохода = СуммаДоходаНДФЛ;
			СуммаСкидки = СуммаВычетаНДФЛ;
			
		ИначеЕсли (КодДохода = Справочники.ДоходыНДФЛ.Код1300) Тогда // лицензионные договоры
            // авторские вознаграждения
			ВидДохода = Справочники.ДоходыПоСтраховымВзносам.АвторскиеЛитературныеПроизведения;
			СуммаДохода = СуммаДоходаНДФЛ;
			
		ИначеЕсли (КодДохода = Справочники.ДоходыНДФЛ.Код2710) или
				   (КодДохода = Справочники.ДоходыНДФЛ.Код2761) Тогда // мат.помощь не работникам не является объектом налогообложения ЕСН 
		ИначеЕсли (КодДохода = Справочники.ДоходыНДФЛ.Код2001) Тогда // не является объектом налогообложения ЕСН 
		ИначеЕсли  (КодДохода = Справочники.ДоходыНДФЛ.Код3010) или
			       (КодДохода = Справочники.ДоходыНДФЛ.Код2800) или
			       (КодДохода = Справочники.ДоходыНДФЛ.Код2900) или
			       (КодДохода = Справочники.ДоходыНДФЛ.Код2400) или
			       (КодДохода = Справочники.ДоходыНДФЛ.Код2640) Тогда // доходы предпринимателей - не является объектом налогообложения ЕСН
		ИначеЕсли  (КодДохода = Справочники.ДоходыНДФЛ.Код2610ПоСтавке13) или
			       (КодДохода = Справочники.ДоходыНДФЛ.Код2610ПоСтавке35) или
				   (КодДохода = Справочники.ДоходыНДФЛ.Код3020ПоСтавке35) Тогда  //матвыгода - не является объектом налогообложения ЕСН
		ИначеЕсли  (КодДохода = Справочники.ДоходыНДФЛ.Код1200) или
				   (КодДохода = Справочники.ДоходыНДФЛ.Код1220) или
				   (КодДохода = Справочники.ДоходыНДФЛ.Код1530) или
				   (КодДохода = Справочники.ДоходыНДФЛ.Код1531) или
				   (КодДохода = Справочники.ДоходыНДФЛ.Код1532) или
				   (КодДохода = Справочники.ДоходыНДФЛ.Код1533) или
				   (КодДохода = Справочники.ДоходыНДФЛ.Код1533_2010) или
				   (КодДохода = Справочники.ДоходыНДФЛ.Код1536) или
				   (КодДохода = Справочники.ДоходыНДФЛ.Код1535) или
				   (КодДохода = Справочники.ДоходыНДФЛ.Код1540) Тогда  //продажа имущества - не является объектом налогообложения ЕСН
		Иначе  // просто облагаемые НДФЛ доходы - считаем, что они все также облагаются и ЕСН
			ВидДохода = Справочники.ДоходыПоСтраховымВзносам.ОблагаетсяЦеликом; 
			СуммаДохода = СуммаДоходаНДФЛ;  
		КонецЕсли;

		Если СуммаДохода <> 0 Тогда

			СтрокаЕСН = СтраховыеВзносыСведенияОДоходах.Добавить();
			СтрокаЕСН.ФизЛицо = Выборка.ФизЛицо;
			СтрокаЕСН.МесяцРасчетногоПериода = Выборка.ПериодРегистрации;
			СтрокаЕСН.ВидДохода = ВидДохода;
			СтрокаЕСН.Результат = СуммаДохода;
			СтрокаЕСН.Скидка = СуммаСкидки;

		КонецЕсли; 
		
	КонецЦикла;	// по детальным записям


КонецПроцедуры

Процедура КоманднаяПанельСтраховыеВзносыСведенияОДоходахИзСправочникаСотрудниковОргаинзации(Кнопка)
	ПроцедурыУправленияПерсоналом.ОткрытьФормуВыбораСотрудникаОрганизации(ЭлементыФормы.СтраховыеВзносыСведенияОДоходах, Ссылка, Ложь, Дата, мГоловнаяОрганизация);
КонецПроцедуры

Процедура КоманднаяПанельСтраховыеВзносыСведенияОДоходахИзСправочникаФизическихЛиц(Кнопка)
	ФормаВыбора = Справочники.ФизическиеЛица.ПолучитьФормуВыбора();
	ФормаВыбора.ВладелецФормы = ЭлементыФормы.СтраховыеВзносыСведенияОДоходах;
	ФормаВыбора.ЗакрыватьПриВыборе = Ложь;
	ФормаВыбора.Открыть();
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТАБЛИЧНОЙ ЧАСТИ СтраховыеВзносыСведенияОДоходах

Процедура СтраховыеВзносыСведенияОДоходахПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока И Не Копирование Тогда
		Элемент.ТекущаяСтрока.МесяцРасчетногоПериода = НачалоМесяца(Дата);
	КонецЕсли;
	ЭлементыФормы.СтраховыеВзносыСведенияОДоходах.Колонки.МесяцРасчетногоПериода.ЭлементУправления.Значение =
		РаботаСДиалогами.ДатаКакМесяцПредставление(Элемент.ТекущаяСтрока.МесяцРасчетногоПериода)
КонецПроцедуры

Процедура СтраховыеВзносыСведенияОДоходахПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	МесяцНалоговогоПериодаТЧ = ДанныеСтроки.МесяцРасчетногоПериода;
	ОформлениеСтроки.Ячейки.МесяцРасчетногоПериода.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(МесяцНалоговогоПериодаТЧ);
КонецПроцедуры

Процедура СтраховыеВзносыСведенияОДоходахМесяцРасчетногоПериодаПриИзменении(Элемент)
		
	Перем МесяцНалоговогоПериодаТЧ;
	РаботаСДиалогами.ДатаКакМесяцПодобратьДатуПоТексту(Элемент.Значение, МесяцНалоговогоПериодаТЧ);
	Элемент.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(МесяцНалоговогоПериодаТЧ);
	ЭлементыФормы.СтраховыеВзносыСведенияОДоходах.ТекущаяСтрока.МесяцРасчетногоПериода = МесяцНалоговогоПериодаТЧ;

КонецПроцедуры

Процедура СтраховыеВзносыСведенияОДоходахМесяцРасчетногоПериодаНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	МесяцНалоговогоПериодаТЧ = ЭлементыФормы.СтраховыеВзносыСведенияОДоходах.ТекущаяСтрока.МесяцРасчетногоПериода;
	РаботаСДиалогами.НачалоВыбораИзСпискаПредставленияПериодаРегистрации(Элемент, СтандартнаяОбработка, МесяцНалоговогоПериодаТЧ, ЭтаФорма);
	ЭлементыФормы.СтраховыеВзносыСведенияОДоходах.ТекущаяСтрока.МесяцРасчетногоПериода = МесяцНалоговогоПериодаТЧ;
	
КонецПроцедуры

Процедура СтраховыеВзносыСведенияОДоходахМесяцРасчетногоПериодаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	МесяцНалоговогоПериодаТЧ = ЭлементыФормы.СтраховыеВзносыСведенияОДоходах.ТекущаяСтрока.МесяцРасчетногоПериода;
	МесяцНалоговогоПериодаТЧ = ДобавитьМесяц(МесяцНалоговогоПериодаТЧ, Направление);
	Элемент.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(МесяцНалоговогоПериодаТЧ);
	ЭлементыФормы.СтраховыеВзносыСведенияОДоходах.ТекущаяСтрока.МесяцРасчетногоПериода = МесяцНалоговогоПериодаТЧ;

КонецПроцедуры

Процедура СтраховыеВзносыСведенияОДоходахМесяцРасчетногоПериодаАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	
	РаботаСДиалогами.ДатаКакМесяцАвтоПодборТекста(Текст, ТекстАвтоПодбора, СтандартнаяОбработка);

КонецПроцедуры

Процедура СтраховыеВзносыСведенияОДоходахМесяцРасчетногоПериодаОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	РаботаСДиалогами.ДатаКакМесяцОкончаниеВводаТекста(Текст, Значение, СтандартнаяОбработка);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТАБЛИЧНОЙ ЧАСТИ СтраховыеВзносы

Процедура КоманднаяПанельСтраховыеВзносыИзСправочникаСотрудниковОргаинзации(Кнопка)
		ПроцедурыУправленияПерсоналом.ОткрытьФормуВыбораСотрудникаОрганизации(ЭлементыФормы.СтраховыеВзносы, Ссылка, Ложь, Дата, мГоловнаяОрганизация);
КонецПроцедуры

Процедура КоманднаяПанельСтраховыеВзносыИзСправочникаФизическихЛиц(Кнопка)
	
	ФормаВыбора = Справочники.ФизическиеЛица.ПолучитьФормуВыбора();
	ФормаВыбора.ВладелецФормы = ЭлементыФормы.СтраховыеВзносы;
	ФормаВыбора.ЗакрыватьПриВыборе = Ложь;
	ФормаВыбора.Открыть();

КонецПроцедуры

Процедура СтраховыеВзносыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока И Не Копирование Тогда
		Элемент.ТекущаяСтрока.МесяцРасчетногоПериода = НачалоМесяца(Дата);
	КонецЕсли;
	ЭлементыФормы.СтраховыеВзносы.Колонки.МесяцРасчетногоПериода.ЭлементУправления.Значение =
		РаботаСДиалогами.ДатаКакМесяцПредставление(Элемент.ТекущаяСтрока.МесяцРасчетногоПериода)
КонецПроцедуры

Процедура СтраховыеВзносыПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Ячейки = ОформлениеСтроки.Ячейки;
	МесяцНалоговогоПериодаТЧ = ДанныеСтроки.МесяцРасчетногоПериода;
	Ячейки.МесяцРасчетногоПериода.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(МесяцНалоговогоПериодаТЧ);
	Ячейки.КолонкаПФР.Видимость = Ложь;
	Ячейки.КолонкаФСС.Видимость = Ложь;
	Ячейки.КолонкаФОМС.Видимость = Ложь;
	
КонецПроцедуры

Процедура СтраховыеВзносыСведенияОДоходахВидДоходаАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	ЗначениеНайдено = Ложь;
	СтандартнаяОбработка = Ложь;
	ДлинаТекста = СтрДлина(Текст);
	Для Каждого ВидДохода Из мСписокВидовДляОсновныхНачислений Цикл
		Если Лев(НРег(ВидДохода.Значение), ДлинаТекста) = НРег(Текст) Тогда
			Если ЗначениеНайдено Тогда 
				ТекстАвтоПодбора = "";
				Возврат;
			КонецЕсли;
			ЗначениеНайдено = Истина;
			ТекстАвтоПодбора = ВидДохода;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура СтраховыеВзносыСведенияОДоходахВидДоходаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ФормаВыбора = Справочники.ДоходыПоСтраховымВзносам.ПолучитьФормуВыбора("ФормаВыбора", Элемент, "дляДокументаРасчетСтраховыхВзносов");
	ФормаВыбора.НачальноеЗначениеВыбора = Элемент.Значение;
	ФормаВыбора.Отбор.Ссылка.ВидСравнения = ВидСравнения.ВСписке;
	ФормаВыбора.Отбор.Ссылка.Значение = мСписокВидовДляОсновныхНачислений;
	ФормаВыбора.Отбор.Ссылка.Использование = Истина;
	ФормаВыбора.Открыть();
	
КонецПроцедуры

Процедура СтраховыеВзносыСведенияОДоходахВидДоходаОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДлинаТекста = СтрДлина(Текст);
	ЗначениеПроинициализировано = Ложь;
	Для Каждого ВидДохода Из мСписокВидовДляОсновныхНачислений Цикл
		Если Лев(НРег(ВидДохода), ДлинаТекста) = НРег(Текст) Тогда
			Если НЕ ЗначениеПроинициализировано Тогда 
				Значение = Новый СписокЗначений;
			КонецЕсли;
			ЗначениеПроинициализировано = Истина;
			Значение.Добавить(ВидДохода.Значение, ВидДохода.Значение.Наименование);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПособияПоУходуЗаРебенкомДоПолутораЛетСотрудникПриИзменении(Элемент)
	ЭлементыФормы.ПособияПоУходуЗаРебенкомДоПолутораЛет.ТекущиеДанные.ФизЛицо = Элемент.Значение.ФизЛицо;
КонецПроцедуры

Процедура СтраховыеВзносыМесяцРасчетногоПериодаПриИзменении(Элемент)
	Перем МесяцНалоговогоПериодаТЧ;
	РаботаСДиалогами.ДатаКакМесяцПодобратьДатуПоТексту(Элемент.Значение, МесяцНалоговогоПериодаТЧ);
	Элемент.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(МесяцНалоговогоПериодаТЧ);
	ЭлементыФормы.СтраховыеВзносы.ТекущаяСтрока.МесяцРасчетногоПериода = МесяцНалоговогоПериодаТЧ;
КонецПроцедуры

Процедура СтраховыеВзносыМесяцРасчетногоПериодаНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
		
	МесяцНалоговогоПериодаТЧ = ЭлементыФормы.СтраховыеВзносы.ТекущаяСтрока.МесяцРасчетногоПериода;
	РаботаСДиалогами.НачалоВыбораИзСпискаПредставленияПериодаРегистрации(Элемент, СтандартнаяОбработка, МесяцНалоговогоПериодаТЧ, ЭтаФорма);
	ЭлементыФормы.СтраховыеВзносы.ТекущаяСтрока.МесяцРасчетногоПериода = МесяцНалоговогоПериодаТЧ;
	

КонецПроцедуры

Процедура СтраховыеВзносыМесяцРасчетногоПериодаРегулирование(Элемент, Направление, СтандартнаяОбработка)
		
	МесяцНалоговогоПериодаТЧ = ЭлементыФормы.СтраховыеВзносы.ТекущаяСтрока.МесяцРасчетногоПериода;
	МесяцНалоговогоПериодаТЧ = ДобавитьМесяц(МесяцНалоговогоПериодаТЧ, Направление);
	Элемент.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(МесяцНалоговогоПериодаТЧ);
	ЭлементыФормы.СтраховыеВзносы.ТекущаяСтрока.МесяцРасчетногоПериода = МесяцНалоговогоПериодаТЧ;


КонецПроцедуры

Процедура СтраховыеВзносыМесяцРасчетногоПериодаАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
		
	РаботаСДиалогами.ДатаКакМесяцАвтоПодборТекста(Текст, ТекстАвтоПодбора, СтандартнаяОбработка);

КонецПроцедуры

Процедура СтраховыеВзносыМесяцРасчетногоПериодаОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
		
	РаботаСДиалогами.ДатаКакМесяцОкончаниеВводаТекста(Текст, Значение, СтандартнаяОбработка);

КонецПроцедуры

Процедура ЕСННалогиМесяцНалоговогоПериодаПриИзменении(Элемент)
	
	
	Перем МесяцНалоговогоПериодаТЧ;
	РаботаСДиалогами.ДатаКакМесяцПодобратьДатуПоТексту(Элемент.Значение, МесяцНалоговогоПериодаТЧ);
	Элемент.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(МесяцНалоговогоПериодаТЧ);
	ЭлементыФормы.ЕСННалоги.ТекущаяСтрока.МесяцНалоговогоПериода = МесяцНалоговогоПериодаТЧ;


КонецПроцедуры

Процедура ЕСННалогиМесяцНалоговогоПериодаНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
		
	МесяцНалоговогоПериодаТЧ = ЭлементыФормы.ЕСННалоги.ТекущаяСтрока.МесяцНалоговогоПериода;
	РаботаСДиалогами.НачалоВыбораИзСпискаПредставленияПериодаРегистрации(Элемент, СтандартнаяОбработка, МесяцНалоговогоПериодаТЧ, ЭтаФорма);
	ЭлементыФормы.ЕСННалоги.ТекущаяСтрока.МесяцНалоговогоПериода = МесяцНалоговогоПериодаТЧ;
	

КонецПроцедуры

Процедура ЕСННалогиМесяцНалоговогоПериодаРегулирование(Элемент, Направление, СтандартнаяОбработка)
		
	МесяцНалоговогоПериодаТЧ = ЭлементыФормы.ЕСННалоги.ТекущаяСтрока.МесяцНалоговогоПериода;
	МесяцНалоговогоПериодаТЧ = ДобавитьМесяц(МесяцНалоговогоПериодаТЧ, Направление);
	Элемент.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(МесяцНалоговогоПериодаТЧ);
	ЭлементыФормы.ЕСННалоги.ТекущаяСтрока.МесяцНалоговогоПериода = МесяцНалоговогоПериодаТЧ;
	

КонецПроцедуры

Процедура ЕСННалогиМесяцНалоговогоПериодаАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
		
	РаботаСДиалогами.ДатаКакМесяцАвтоПодборТекста(Текст, ТекстАвтоПодбора, СтандартнаяОбработка);
	

КонецПроцедуры

Процедура ЕСННалогиМесяцНалоговогоПериодаОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
		
	РаботаСДиалогами.ДатаКакМесяцОкончаниеВводаТекста(Текст, Значение, СтандартнаяОбработка);
	
КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////
// РАЗДЕЛ ОСНОВНОЙ ПРОГРАММЫ
					   
// Заполним таблицу ставок кодов доходов НДФЛ для предопределенных элементов
Запрос = Новый Запрос("ВЫБРАТЬ
                      |	ДоходыНДФЛ.Ссылка,
                      |	ДоходыНДФЛ.СтавкаНалогообложенияРезидента,
                      |	0 КАК Ставка
                      |ИЗ
                      |	Справочник.ДоходыНДФЛ КАК ДоходыНДФЛ");

мТаблицаСтавокКодовДоходов = Запрос.Выполнить().Выгрузить();
мТаблицаСтавокКодовДоходов.Индексы.Добавить("Ссылка");

Для каждого СтрокаТЧ Из мТаблицаСтавокКодовДоходов Цикл
	СтрокаТЧ.Ставка = ПроцедурыУправленияПерсоналом.ЗначениеСтавкиНДФЛотСтавкиНалогообложенияРезидента(СтрокаТЧ.СтавкаНалогообложенияРезидента)
КонецЦикла;

мПустойКодДохода = Справочники.ДоходыНДФЛ.ПустаяСсылка();
мПустойКодВычета = Справочники.ВычетыНДФЛ.ПустаяСсылка();

мВычетСКодом405 = Справочники.ВычетыНДФЛ.Код405;
мВычетМатпомощьПриРожденииРебенка = Справочники.ВычетыНДФЛ.МатпомощьПриРожденииРебенка;

мДивиденды = Справочники.ДоходыНДФЛ.Код1010;

// Все виды авторских 2201-2209
мСписокАвторскихВознаграждений = Новый Массив;
мСписокАвторскихВознаграждений.Добавить(Справочники.ДоходыНДФЛ.Код2201);
мСписокАвторскихВознаграждений.Добавить(Справочники.ДоходыНДФЛ.Код2202);
мСписокАвторскихВознаграждений.Добавить(Справочники.ДоходыНДФЛ.Код2203);
мСписокАвторскихВознаграждений.Добавить(Справочники.ДоходыНДФЛ.Код2204);
мСписокАвторскихВознаграждений.Добавить(Справочники.ДоходыНДФЛ.Код2205);
мСписокАвторскихВознаграждений.Добавить(Справочники.ДоходыНДФЛ.Код2206);
мСписокАвторскихВознаграждений.Добавить(Справочники.ДоходыНДФЛ.Код2207);
мСписокАвторскихВознаграждений.Добавить(Справочники.ДоходыНДФЛ.Код2208);
мСписокАвторскихВознаграждений.Добавить(Справочники.ДоходыНДФЛ.Код2209);



СтатусыФизЛиц = Новый ТаблицаЗначений;
СтатусыФизЛиц.Колонки.Добавить("ФизЛицо");
СтатусыФизЛиц.Колонки.Добавить("Год");
СтатусыФизЛиц.Колонки.Добавить("ЯвляетсяРезидентом");

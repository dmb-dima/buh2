
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ДЛЯ ВЫВОДА ПЕЧАТНОЙ ФОРМЫ ДОКУМЕНТА

Перем мКэшВидовСубконтоПоСчетам;
#Если Клиент Тогда

Функция ПечатьОтчетаОРаспределенииНДСКосвенныхРасходов()
	
	Отчет = Отчеты.РаспределениеНДСКосвенныхРасходов.Создать();
	Отчет.Организация = Организация;
	Отчет.ДокументРаспределения = ЭтотОбъект.Ссылка;
	Отчет.ВыручкаПоДокументам = Истина;
	Отчет.ДатаНач = НачалоПериода;
	Отчет.ДатаКон = УчетНДС.ПолучитьКонецПериодаПоУчетнойПолитике(Организация, НачалоПериода);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ВысотаЗаголовка = 0;
	
	Отчет.СформироватьОтчет(ТабличныйДокумент, Истина, ВысотаЗаголовка);
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходимое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь, НепосредственнаяПечать = Ложь) Экспорт
	
	// Получить экземпляр документа на печать
	Если ИмяМакета = "РаспределениеНДСПоКосвеннымРасходам" Тогда
		
		ТабДокумент = ПечатьОтчетаОРаспределенииНДСКосвенныхРасходов();
		
	КонецЕсли;
	
	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект), НепосредственнаяПечать);
	
КонецПроцедуры // Печать

#КонецЕсли

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура("РаспределениеНДСПоКосвеннымРасходам", "Распределение НДС по косвенным расходам");
	

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ АВТОЗАПОЛНЕНИЯ ДОКУМЕНТА

Процедура ЗаполнитьДокумент(ОшибкаЗаполнения = Ложь, Сообщать = Истина, СтрокаСообщения = "", ОтменитьПроведение = Ложь) Экспорт
	
	Если Проведен Тогда
		Если ОтменитьПроведение Тогда
			Записать(РежимЗаписиДокумента.ОтменаПроведения);
		Иначе
			ОшибкаЗаполнения = Истина;
			СтрокаСообщения = " перед заполнением требуется отменить проведение документа";
			Если Сообщать Тогда
				ОбщегоНазначения.СообщитьОбОшибке("Документ не заполнен:" + СтрокаСообщения, , Строка(Ссылка));
			КонецЕсли; 
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	// Расчет выручки от реализации
	РассчитатьВыручку();
	Если ВыручкаЕНВД = 0 и ВыручкаБезНДС = 0 и ВыручкаНДС0 = 0 и ВыручкаНДС = 0 тогда
		ОшибкаЗаполнения = Истина;
		СтрокаСообщения = СтрокаСообщения+Символы.ПС + " - отсутствует выручка от реализации"
	КонецЕсли;

	// Заполнение списка расходов к распределению
	ЗаполнитьТабличныеЧастиПоКосвеннымРасходам();
	Если СоставКосвенныхРасходов.Количество() = 0 Тогда
		ОшибкаЗаполнения = Истина;
		СтрокаСообщения = СтрокаСообщения+Символы.ПС + " - не обнаружены расходы к распределению"
	КонецЕсли; 
	
    Если ОшибкаЗаполнения Тогда
		Если Сообщать Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Документ не заполнен:" + СтрокаСообщения,,Строка(Ссылка));
		КонецЕсли; 
		Возврат;
	КонецЕсли; 
	
	// Распределение косвенных расходов по выручке
	РаспределитьПоВыручке();
	
КонецПроцедуры

// Процедура вызывается по кнопке "Распределить" в форме диалога документа.
// В процедуре реализуется алгоритм распределения косвенных расходов в табличной
// части "СоставКосвенныхРасходов" на различные виды реализации в текущем периоде.
//
Процедура РаспределитьПоВыручке() Экспорт

	БазаРаспределенияСЕНВД = ВыручкаНДС + ВыручкаБезНДС + ВыручкаЕНВД + ВыручкаНДС0;
	БазаРаспределенияБезЕНВД =  ВыручкаНДС + ВыручкаБезНДС + ВыручкаНДС0;

	Если БазаРаспределенияСЕНВД = 0 Тогда
		Сообщить("На закладке ""Выручка от реализации"" не указаны параметры реализации!", СтатусСообщения.Внимание);
		Возврат;
	КонецЕсли;

	Для Каждого СтрТабЧасти Из СоставКосвенныхРасходов Цикл
		
		Если СтрТабЧасти.БазисРаспределенияВключаетЕНВД Тогда
		    БазаРаспределения = БазаРаспределенияСЕНВД;
		Иначе
		    БазаРаспределения = БазаРаспределенияБезЕНВД;
		КонецЕсли; 

		УчтеноСуммы   = 0;
		УчтеноНДС     = 0;
		УчтеноВыручки = 0;

		Если ВыручкаНДС <> 0 Тогда

			СтрТабЧасти.НДССумма = Окр(СтрТабЧасти.СуммаВсего * (ВыручкаНДС + УчтеноВыручки)/БазаРаспределения, 2) - УчтеноСуммы;
			СтрТабЧасти.НДС      = Окр(СтрТабЧасти.НДСВсего * (ВыручкаНДС + УчтеноВыручки)/БазаРаспределения, 2) - УчтеноНДС;

			УчтеноСуммы     = УчтеноСуммы + СтрТабЧасти.НДССумма;
			УчтеноНДС       = УчтеноНДС + СтрТабЧасти.НДС;
			УчтеноВыручки   = УчтеноВыручки + ВыручкаНДС;

		Иначе
			СтрТабЧасти.НДССумма = 0;
			СтрТабЧасти.НДС      = 0;
		КонецЕсли;

		Если ВыручкаБезНДС <> 0 Тогда

			СтрТабЧасти.БезНДССумма = Окр(СтрТабЧасти.СуммаВсего * (ВыручкаБезНДС + УчтеноВыручки)/БазаРаспределения, 2) - УчтеноСуммы;
			СтрТабЧасти.БезНДС      = Окр(СтрТабЧасти.НДСВсего * (ВыручкаБезНДС + УчтеноВыручки)/БазаРаспределения, 2) - УчтеноНДС;

			УчтеноСуммы   = УчтеноСуммы + СтрТабЧасти.БезНДССумма;
			УчтеноНДС     = УчтеноНДС + СтрТабЧасти.БезНДС;
			УчтеноВыручки = УчтеноВыручки + ВыручкаБезНДС;

		Иначе
			СтрТабЧасти.БезНДССумма = 0;
			СтрТабЧасти.БезНДС      = 0;

		КонецЕсли;

		Если ВыручкаЕНВД <> 0 и СтрТабЧасти.БазисРаспределенияВключаетЕНВД Тогда

			СтрТабЧасти.ЕНВДСумма = Окр(СтрТабЧасти.СуммаВсего * (ВыручкаЕНВД + УчтеноВыручки)/БазаРаспределения, 2) - УчтеноСуммы;
			СтрТабЧасти.ЕНВДНДС   = Окр(СтрТабЧасти.НДСВсего *   (ВыручкаЕНВД + УчтеноВыручки)/БазаРаспределения, 2) - УчтеноНДС;

			УчтеноСуммы   = УчтеноСуммы + СтрТабЧасти.ЕНВДСумма;
			УчтеноНДС     = УчтеноНДС + СтрТабЧасти.ЕНВДНДС;
			УчтеноВыручки = УчтеноВыручки + ВыручкаЕНВД;

		Иначе
			СтрТабЧасти.ЕНВДСумма = 0;
			СтрТабЧасти.ЕНВДНДС   = 0;

		КонецЕсли;
		
		Если ВыручкаНДС0 <> 0 Тогда

			СтрТабЧасти.НДС0Сумма = Окр(СтрТабЧасти.СуммаВсего * (ВыручкаНДС0 + УчтеноВыручки)/БазаРаспределения, 2) - УчтеноСуммы;
			СтрТабЧасти.НДС0      = Окр(СтрТабЧасти.НДСВсего * (ВыручкаНДС0 + УчтеноВыручки)/БазаРаспределения, 2) - УчтеноНДС;

			УчтеноСуммы   = УчтеноСуммы + СтрТабЧасти.НДС0Сумма;
			УчтеноНДС     = УчтеноНДС + СтрТабЧасти.НДС0;
			УчтеноВыручки = УчтеноВыручки + ВыручкаНДС0;

		Иначе
			СтрТабЧасти.НДС0Сумма = 0;
			СтрТабЧасти.НДС0      = 0;

		КонецЕсли;

	КонецЦикла;

КонецПроцедуры // РаспределитьПоВыручке()

// Процедура вызывается по кнопке "Рассчитать" из формы диалога документа.
// Выполняется расчет объемов реализации в текущем периоде по данным
// регистра НДСПродажи в разрезе различных ставок НДС.
//
Процедура РассчитатьВыручку() Экспорт

	ВыручкаЕНВД   = 0;
	ВыручкаБезНДС = 0;
	ВыручкаНДС0   = 0;
	ВыручкаНДС    = 0;

	Отказ = Ложь;
	КонецПериода = УчетНДС.ПолучитьКонецПериодаПоУчетнойПолитике(Организация, НачалоПериода, Отказ);
	
	Если Не Отказ Тогда
		УчетНДС.РассчитатьВыручкуДляНДС(Организация, НачалоПериода, КонецПериода, ВыручкаЕНВД, ВыручкаБезНДС, ВыручкаНДС0, ВыручкаНДС);
	КонецЕсли;

КонецПроцедуры // РассчитатьВыручку()

// Заполнение табличной части документа по регистру НДСКосвенныхРасходов
//
Процедура ЗаполнитьТабличныеЧастиПоКосвеннымРасходам(ОтменитьПроведение = Ложь) Экспорт
	
	Если Проведен Тогда
		Если ОтменитьПроведение Тогда
			Записать(РежимЗаписиДокумента.ОтменаПроведения);
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	СоставКосвенныхРасходов.Очистить();
	СчетаУчетаРасходов.Очистить();
	
	Результат = ПолучитьВыборкуИзРегистраНДСКосвенныеРасходы(Организация, НачалоПериода, Дата);
		
	КонтрагентПоСчетуФактуре = ПолучитьСписокКонтрагентовПоСчетамФактурам(Организация, Результат.Выгрузить());
	КонтрагентПоСчетуФактуре.Индексы.Добавить("СчетФактура");
	
	Ключ = 1;
	ВыборкаПоСчетуФактуре = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	Пока ВыборкаПоСчетуФактуре.Следующий() Цикл
		
		ВыборкаПоВидуЦенности = ВыборкаПоСчетуФактуре.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
		Контрагент = КонтрагентПоСчетуФактуре.Найти(ВыборкаПоСчетуФактуре.СчетФактура,"СчетФактура");
		
		Если (Контрагент = Неопределено) И 
			(НЕ ВыборкаПоСчетуФактуре.СчетФактура.Метаданные().Реквизиты.Найти("Контрагент") = Неопределено) Тогда
			Контрагент = Новый Структура("Поставщик, СчетФактура", ВыборкаПоСчетуФактуре.СчетФактура.Контрагент, ВыборкаПоСчетуФактуре.СчетФактура);
		КонецЕсли;
		
		Пока ВыборкаПоВидуЦенности.Следующий() Цикл
			
				
			ВыборкаПоСтавкеНДС = ВыборкаПоВидуЦенности.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
			
			Пока ВыборкаПоСтавкеНДС.Следующий() Цикл
				
				ВыборкаПоСчетуУчетаНДС = ВыборкаПоСтавкеНДС.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
				
				Пока ВыборкаПоСчетуУчетаНДС.Следующий() Цикл
					
					ВыборкаПоВключениюНДСВСтоимость = ВыборкаПоСчетуУчетаНДС.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
					
					Пока ВыборкаПоВключениюНДСВСтоимость.Следующий() Цикл
				
						ВыборкаПоБазисуРаспределения = ВыборкаПоВключениюНДСВСтоимость.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
						
						РассчитатьСуммуКОтражению = (ВыборкаПоБазисуРаспределения.Количество()>1);
						
						Если РассчитатьСуммуКОтражению Тогда
							НомерПервойСтрокиКосвенныхРасходовКзаполнению = СоставКосвенныхРасходов.Количество();
							БазисРаспределенияСНДС = Новый Массив();
							БазисРаспределенияНДС = Новый Массив();
						КонецЕсли; 
						
						Пока ВыборкаПоБазисуРаспределения.Следующий() Цикл
							
							Если РассчитатьСуммуКОтражению Тогда
								БазисРаспределенияСНДС.Добавить(0);
								БазисРаспределенияНДС.Добавить(0);
							КонецЕсли;
							
							ПолучитьСуммуИзВыборки = Истина;
							
							НоваяСтрока = СоставКосвенныхРасходов.Добавить();
							
							НоваяСтрока.ВидЦенности = ВыборкаПоБазисуРаспределения.ВидЦенности;
							НоваяСтрока.Поставщик   = ?(Контрагент <> Неопределено, Контрагент.Поставщик, Справочники.Контрагенты.ПустаяСсылка());					НоваяСтрока.СчетФактура = ВыборкаПоСчетуФактуре.СчетФактура;
							НоваяСтрока.СтавкаНДС   = ВыборкаПоБазисуРаспределения.СтавкаНДС;
							НоваяСтрока.СчетУчетаНДС= ВыборкаПоБазисуРаспределения.СчетУчетаНДС;
							НоваяСтрока.НДСВключенВСтоимость = ВыборкаПоБазисуРаспределения.НДСВключенВСтоимость;
							
							
							НоваяСтрока.БазисРаспределенияВключаетЕНВД    = ВыборкаПоБазисуРаспределения.БазисРаспределенияВключаетЕНВД;
							НоваяСтрока.КлючСтроки  = Ключ;
							
							Выборка = ВыборкаПоБазисуРаспределения.Выбрать();
							
							Пока Выборка.Следующий() Цикл
								
								Если РассчитатьСуммуКОтражению Тогда
									БазисРаспределенияСНДС[БазисРаспределенияСНДС.Количество()-1] = БазисРаспределенияСНДС[БазисРаспределенияСНДС.Количество()-1] + Выборка.СуммаБезНДСПроводка+Выборка.НДСПроводка;
									БазисРаспределенияНДС[БазисРаспределенияНДС.Количество()-1] = БазисРаспределенияНДС[БазисРаспределенияНДС.Количество()-1] +Выборка.НДСПроводка;
									Если ПолучитьСуммуИзВыборки Тогда
										СуммаСНДСкРаспределению	= Выборка.СуммаБезНДС+Выборка.НДС;
										НДСКРаспределению		= Выборка.НДС;
									КонецЕсли;
								ИначеЕсли ПолучитьСуммуИзВыборки Тогда
									НоваяСтрока.СуммаВсего  = Выборка.СуммаБезНДС;
									НоваяСтрока.НДСВсего    = Выборка.НДС;
								КонецЕсли;

								НоваяСтрокаСчетов = СчетаУчетаРасходов.Добавить();
								НоваяСтрокаСчетов.КлючСтроки  = Ключ;
								НоваяСтрокаСчетов.СчетЗатрат  = Выборка.СчетЗатрат;
								НоваяСтрокаСчетов.ПодразделениеЗатрат = Выборка.ПодразделениеЗатрат;
								НоваяСтрокаСчетов.Субконто1   = Выборка.Субконто1;
								НоваяСтрокаСчетов.Субконто2   = Выборка.Субконто2;
								НоваяСтрокаСчетов.Субконто3   = Выборка.Субконто3;
								НоваяСтрокаСчетов.СуммаБезНДС = Выборка.СуммаБезНДСПроводка;
								НоваяСтрокаСчетов.НДС         = Выборка.НДСПроводка;
								
								ПолучитьСуммуИзВыборки = Ложь;
								
							КонецЦикла;
							
							Ключ = Ключ + 1;
						
						КонецЦикла; // Пока ВыборкаПоБазисуРаспределения
						
						Если РассчитатьСуммуКОтражению Тогда
							Если не СуммаСНДСкРаспределению = 0 Тогда
								СуммаСНДСРезультатРаспределения = ОбщегоНазначения.РаспределитьПропорционально(СуммаСНДСкРаспределению,БазисРаспределенияСНДС);
							КонецЕсли; 
							Если не НДСКРаспределению = 0 Тогда
								НДСРезультатРаспределения = ОбщегоНазначения.РаспределитьПропорционально(НДСкРаспределению,БазисРаспределенияНДС);
							КонецЕсли; 
							
							Для ИндексСтрокиТекущейВыборки = 0 По БазисРаспределенияСНДС.Количество()-1 Цикл
								СоставКосвенныхРасходов[НомерПервойСтрокиКосвенныхРасходовКзаполнению+ИндексСтрокиТекущейВыборки].НДСВсего =?(НДСкРаспределению = 0, 0 ,НДСРезультатРаспределения[ИндексСтрокиТекущейВыборки]);
								СоставКосвенныхРасходов[НомерПервойСтрокиКосвенныхРасходовКзаполнению+ИндексСтрокиТекущейВыборки].СуммаВсего =
									?(СуммаСНДСкРаспределению = 0, 0 ,СуммаСНДСРезультатРаспределения[ИндексСтрокиТекущейВыборки])
									- СоставКосвенныхРасходов[НомерПервойСтрокиКосвенныхРасходовКзаполнению+ИндексСтрокиТекущейВыборки].НДСВсего;
							КонецЦикла; 
						КонецЕсли;
					КонецЦикла; // Пока ВыборкаПоВключениюНДСВСтоимость
					
				КонецЦикла; // Пока ВыборкаПоСчетуУчетаНДС
				
			КонецЦикла; // Пока ВыборкаПоСтавкеНДС
			
		КонецЦикла; // Пока ВыборкаПоВидуЦенности
		
	КонецЦикла; // Пока ВыборкаПоСчетуФактуре
	
	СоставКосвенныхРасходов.Сортировать("СчетФактура, Поставщик, ВидЦенности, СтавкаНДС, НДСВключенВСтоимость, БазисРаспределенияВключаетЕНВД, СчетУчетаНДС");
	
КонецПроцедуры	

//Возвращает выборку по регистру НДС по косвенным расходам за период с итогами по измерениям 
Функция ПолучитьВыборкуИзРегистраНДСКосвенныеРасходы(Организация, НачалоПериода, КонецПериода) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
	
	ВидДеятельностиОпределяетсяПоДоходам = Новый СписокЗначений;
	ВидДеятельностиОпределяетсяПоДоходам.Добавить(Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ВидДеятельностиОпределяетсяПоДоходам);
	ВидДеятельностиОпределяетсяПоДоходам.Добавить(Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ПредпринимательскаяДеятельностьНеОблагаемаяЕНВД);
	
	Запрос.УстановитьПараметр("ВидДеятельностиОпределяетсяПоДоходам", ВидДеятельностиОпределяетсяПоДоходам);
	Запрос.УстановитьПараметр("ВидДеятельностиОпределяетсяПоДоходамПоПолномуБазису", Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ВидДеятельностиОпределяетсяПоДоходам);
	
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	НДСКосвенныеРасходыОбороты.СчетФактура КАК СчетФактура,
		|	НДСКосвенныеРасходыОбороты.ВидЦенности КАК ВидЦенности,
		|	НДСКосвенныеРасходыОбороты.СтавкаНДС КАК СтавкаНДС,
		|	НДСКосвенныеРасходыОбороты.СчетУчетаНДС КАК СчетУчетаНДС,
		|	НДСКосвенныеРасходыОбороты.НДСВключенВСтоимость КАК НДСВключенВСтоимость,
		|	НДСКосвенныеРасходы.СтатьяЗатрат КАК СтатьяЗатрат,
		|	НДСКосвенныеРасходы.СчетЗатрат КАК СчетЗатрат,
		|	НДСКосвенныеРасходы.ПодразделениеЗатрат КАК ПодразделениеЗатрат,
		|	НДСКосвенныеРасходы.Субконто1 КАК Субконто1,
		|	НДСКосвенныеРасходы.Субконто2 КАК Субконто2,
		|	НДСКосвенныеРасходы.Субконто3 КАК Субконто3,
		|	ВЫБОР
		|		КОГДА ВЫБОР
		|				КОГДА (НЕ НДСКосвенныеРасходы.Субконто1.ВидДеятельностиДляНалоговогоУчетаЗатрат ЕСТЬ NULL )
		|					ТОГДА НДСКосвенныеРасходы.Субконто1.ВидДеятельностиДляНалоговогоУчетаЗатрат
		|				КОГДА (НЕ НДСКосвенныеРасходы.Субконто2.ВидДеятельностиДляНалоговогоУчетаЗатрат ЕСТЬ NULL )
		|					ТОГДА НДСКосвенныеРасходы.Субконто2.ВидДеятельностиДляНалоговогоУчетаЗатрат
		|				КОГДА (НЕ НДСКосвенныеРасходы.Субконто3.ВидДеятельностиДляНалоговогоУчетаЗатрат ЕСТЬ NULL )
		|					ТОГДА НДСКосвенныеРасходы.Субконто3.ВидДеятельностиДляНалоговогоУчетаЗатрат
		|				ИНАЧЕ ЛОЖЬ
		|			КОНЕЦ = &ВидДеятельностиОпределяетсяПоДоходамПоПолномуБазису
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК БазисРаспределенияВключаетЕНВД,
		|	СУММА(НДСКосвенныеРасходыОбороты.СуммаБезНДСОборот) КАК СуммаБезНДС,
		|	СУММА(НДСКосвенныеРасходыОбороты.НДСОборот) КАК НДС,
		|	СУММА(НДСКосвенныеРасходы.СуммаБезНДС) КАК СуммаБезНДСПроводка,
		|	СУММА(НДСКосвенныеРасходы.НДС) КАК НДСПроводка,
		|	NULL КАК Поставщик
		|ИЗ
		|	РегистрНакопления.НДСКосвенныеРасходы.Обороты(&НачалоПериода, &КонецПериода, , Организация = &Организация) КАК НДСКосвенныеРасходыОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			НДСКосвенныеРасходы.Организация КАК Организация,
		|			НДСКосвенныеРасходы.СчетФактура КАК СчетФактура,
		|			НДСКосвенныеРасходы.ВидЦенности КАК ВидЦенности,
		|			НДСКосвенныеРасходы.СтавкаНДС КАК СтавкаНДС,
		|			НДСКосвенныеРасходы.СчетУчетаНДС КАК СчетУчетаНДС,
		|			НДСКосвенныеРасходы.НДСВключенВСтоимость КАК НДСВключенВСтоимость,
		|			СУММА(НДСКосвенныеРасходы.СуммаБезНДС) КАК СуммаБезНДС,
		|			СУММА(НДСКосвенныеРасходы.НДС) КАК НДС,
		|			НДСКосвенныеРасходы.СтатьяЗатрат КАК СтатьяЗатрат,
		|			НДСКосвенныеРасходы.СчетЗатрат КАК СчетЗатрат,
		|			НДСКосвенныеРасходы.ПодразделениеЗатрат КАК ПодразделениеЗатрат,
		|			НДСКосвенныеРасходы.Субконто1 КАК Субконто1,
		|			НДСКосвенныеРасходы.Субконто2 КАК Субконто2,
		|			НДСКосвенныеРасходы.Субконто3 КАК Субконто3
		|		ИЗ
		|			РегистрНакопления.НДСКосвенныеРасходы КАК НДСКосвенныеРасходы
		|		ГДЕ
		|			НДСКосвенныеРасходы.Организация = &Организация
		|			И НДСКосвенныеРасходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			И НДСКосвенныеРасходы.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|		
		|		СГРУППИРОВАТЬ ПО
		|			НДСКосвенныеРасходы.СтатьяЗатрат,
		|			НДСКосвенныеРасходы.СчетЗатрат,
		|			НДСКосвенныеРасходы.ПодразделениеЗатрат,
		|			НДСКосвенныеРасходы.Субконто1,
		|			НДСКосвенныеРасходы.Субконто2,
		|			НДСКосвенныеРасходы.Субконто3,
		|			НДСКосвенныеРасходы.СчетФактура,
		|			НДСКосвенныеРасходы.ВидЦенности,
		|			НДСКосвенныеРасходы.СтавкаНДС,
		|			НДСКосвенныеРасходы.СчетУчетаНДС,
		|			НДСКосвенныеРасходы.НДСВключенВСтоимость,
		|			НДСКосвенныеРасходы.Организация) КАК НДСКосвенныеРасходы
		|		ПО НДСКосвенныеРасходыОбороты.Организация = НДСКосвенныеРасходы.Организация
		|			И НДСКосвенныеРасходыОбороты.СчетФактура = НДСКосвенныеРасходы.СчетФактура
		|			И НДСКосвенныеРасходыОбороты.ВидЦенности = НДСКосвенныеРасходы.ВидЦенности
		|			И НДСКосвенныеРасходыОбороты.СтавкаНДС = НДСКосвенныеРасходы.СтавкаНДС
		|			И НДСКосвенныеРасходыОбороты.СчетУчетаНДС = НДСКосвенныеРасходы.СчетУчетаНДС
		|			И НДСКосвенныеРасходыОбороты.НДСВключенВСтоимость = НДСКосвенныеРасходы.НДСВключенВСтоимость
		|ГДЕ
		|	(НЕ(ЕСТЬNULL(НДСКосвенныеРасходыОбороты.СуммаБезНДСОборот, 0) = 0
		|				И ЕСТЬNULL(НДСКосвенныеРасходыОбороты.НДСОборот, 0) = 0))
		|	И ВЫБОР
		|			КОГДА (НЕ НДСКосвенныеРасходы.Субконто1.ВидДеятельностиДляНалоговогоУчетаЗатрат ЕСТЬ NULL )
		|				ТОГДА НДСКосвенныеРасходы.Субконто1.ВидДеятельностиДляНалоговогоУчетаЗатрат
		|			КОГДА (НЕ НДСКосвенныеРасходы.Субконто2.ВидДеятельностиДляНалоговогоУчетаЗатрат ЕСТЬ NULL )
		|				ТОГДА НДСКосвенныеРасходы.Субконто2.ВидДеятельностиДляНалоговогоУчетаЗатрат
		|			КОГДА (НЕ НДСКосвенныеРасходы.Субконто3.ВидДеятельностиДляНалоговогоУчетаЗатрат ЕСТЬ NULL )
		|				ТОГДА НДСКосвенныеРасходы.Субконто3.ВидДеятельностиДляНалоговогоУчетаЗатрат
		|			ИНАЧЕ НДСКосвенныеРасходы.СчетЗатрат
		|		КОНЕЦ В (&ВидДеятельностиОпределяетсяПоДоходам)
		|
		|СГРУППИРОВАТЬ ПО
		|	НДСКосвенныеРасходыОбороты.СчетФактура,
		|	НДСКосвенныеРасходыОбороты.ВидЦенности,
		|	НДСКосвенныеРасходыОбороты.СтавкаНДС,
		|	НДСКосвенныеРасходыОбороты.СчетУчетаНДС,
		|	НДСКосвенныеРасходыОбороты.НДСВключенВСтоимость,
		|	ВЫБОР
		|		КОГДА ВЫБОР
		|				КОГДА (НЕ НДСКосвенныеРасходы.Субконто1.ВидДеятельностиДляНалоговогоУчетаЗатрат ЕСТЬ NULL )
		|					ТОГДА НДСКосвенныеРасходы.Субконто1.ВидДеятельностиДляНалоговогоУчетаЗатрат
		|				КОГДА (НЕ НДСКосвенныеРасходы.Субконто2.ВидДеятельностиДляНалоговогоУчетаЗатрат ЕСТЬ NULL )
		|					ТОГДА НДСКосвенныеРасходы.Субконто2.ВидДеятельностиДляНалоговогоУчетаЗатрат
		|				КОГДА (НЕ НДСКосвенныеРасходы.Субконто3.ВидДеятельностиДляНалоговогоУчетаЗатрат ЕСТЬ NULL )
		|					ТОГДА НДСКосвенныеРасходы.Субконто3.ВидДеятельностиДляНалоговогоУчетаЗатрат
		|				ИНАЧЕ ЛОЖЬ
		|			КОНЕЦ = &ВидДеятельностиОпределяетсяПоДоходамПоПолномуБазису
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ,
		|	НДСКосвенныеРасходы.СтатьяЗатрат,
		|	НДСКосвенныеРасходы.СчетЗатрат,
		|	НДСКосвенныеРасходы.ПодразделениеЗатрат,
		|	НДСКосвенныеРасходы.Субконто1,
		|	НДСКосвенныеРасходы.Субконто2,
		|	НДСКосвенныеРасходы.Субконто3
		|
		|УПОРЯДОЧИТЬ ПО
		|	СчетФактура,
		|	ВидЦенности,
		|	СтавкаНДС,
		|	СчетУчетаНДС,
		|	НДСВключенВСтоимость,
		|	БазисРаспределенияВключаетЕНВД,
		|	Поставщик,
		|	СчетЗатрат,
		|	СтатьяЗатрат,
		|	ПодразделениеЗатрат,
		|	Субконто2,
		|	Субконто1,
		|	Субконто3
		|ИТОГИ ПО
		|	СчетФактура,
		|	ВидЦенности,
		|	СтавкаНДС,
		|	СчетУчетаНДС,
		|	НДСВключенВСтоимость,
		|	БазисРаспределенияВключаетЕНВД";
				   
	Результат = Запрос.Выполнить();
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьСписокКонтрагентовПоСчетамФактурам(Организация, СписокСчетовФактур)
	
	// Получение поставщиков по счету-фактуре
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",  Организация);
	Запрос.УстановитьПараметр("СчетаФактуры",       ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(СписокСчетовФактур.ВыгрузитьКолонку("СчетФактура")));
	Запрос.УстановитьПараметр("ПустойКонтрагент",   Справочники.Контрагенты.ПустаяСсылка());
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДСПредъявленныйОбороты.Поставщик,
	|	НДСПредъявленныйОбороты.СчетФактура
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный.Обороты(
	|		,
	|		,
	|		,
	|		Организация = &Организация
	|		    И СчетФактура В (&СчетаФактуры)) КАК НДСПредъявленныйОбороты
	|ГДЕ
	|	НДСПредъявленныйОбороты.Поставщик <> &ПустойКонтрагент";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Процедура проверяет соответствие даты налоговому периоду.
//
Процедура ПроверитьСоответствиеДатыПериоду(Отказ, Заголовок)
	
	КонецПериода = УчетНДС.ПолучитьКонецПериодаПоУчетнойПолитике(Организация, Дата, Отказ);

	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если (Дата > КонецПериода) ИЛИ (Дата < НачалоПериода) Тогда
		
		ОбщегоНазначения.ОшибкаПриПроведении("Дата документа не входит в указанный налоговый период", Отказ, Заголовок);
		
	КонецЕсли;
	
КонецПроцедуры

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизитов шапки, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверяется также правильность заполнения реквизитов ссылочных полей документа.
// Проверка выполняется по объекту и по выборке из результата запроса по шапке.
//
// Параметры: 
//  СтруктураШапкиДокумента - структура, содержащая реквизиты шапки документа и результаты запроса по шапке,
//  Отказ                   - флаг отказа в проведении,
//  Заголовок               - строка, заголовок сообщения об ошибке проведения.
//
Процедура ПроверитьЗаполнениеШапки(ТаблицаПоКосвеннымРасходам, ТаблицаПоСчетамУчета, Отказ, Заголовок)

	// Укажем, что надо проверить:
	СтруктураОбязательныхПолей = Новый Структура("Организация");
	Если не ТаблицаПоКосвеннымРасходам.Итог("БезНДС") = 0 Тогда
		СтруктураОбязательныхПолей.Вставить("СтатьяЗатратНДС");
	КонецЕсли;
	Если не ТаблицаПоКосвеннымРасходам.Итог("ЕНВДНДС") = 0 Тогда
		СтруктураОбязательныхПолей.Вставить("СтатьяЗатратНДСприЕНВД");
	КонецЕсли;
	
	Если Дата >= '20060101' И Не ДляСписанияНДСИспользоватьСчетИАналитикуУчетаЗатрат Тогда
		
		ЕстьВключениеВСтоимость = Ложь;
		
		Для Каждого СтрокаТаблицы Из ТаблицаПоКосвеннымРасходам Цикл
			Если Не СтрокаТаблицы.НДСВключенВСтоимость И (СтрокаТаблицы.БезНДС <> 0 Или СтрокаТаблицы.ЕНВДНДС <> 0) Тогда
				ЕстьВключениеВСтоимость = Истина;
				
			КонецЕсли;
			
			Если ЕстьВключениеВСтоимость Тогда
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
		Если ЕстьВключениеВСтоимость Тогда
			СтруктураОбязательныхПолей.Вставить("СчетСписанияНДС");
		КонецЕсли;
		
	КонецЕсли;
	
	// Теперь вызовем общую процедуру проверки.
	ЗаполнениеДокументов.ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);
	
КонецПроцедуры // ПроверитьЗаполнениеШапки()

Процедура ПодменитьСубконтоСтатьиЗатрат(ТаблицаРасшифровки,СтатьяЗатрат)
	Для каждого СтрокаТаблицы Из ТаблицаРасшифровки Цикл
	
		ВидыСубконто = БухгалтерскийУчет.ОпределитьВидСубконтоПоСчету(СтрокаТаблицы.СчетЗатрат, мКэшВидовСубконтоПоСчетам);	
		СтрокаСубконто = ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат, "ВидСубконто");
		Если СтрокаСубконто <> Неопределено Тогда
			СтрокаТаблицы["Субконто" + СтрокаСубконто.НомерСтроки] = СтатьяЗатрат;
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

// Выгружает результат запроса в табличную часть, добавляет ей необходимые колонки для проведения.
//
//
Функция ПодготовитьТаблицуПоКосвеннымРасходам(СтруктураШапкиДокумента)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СоставРасходов.ВидЦенности,
		|	СоставРасходов.Поставщик,
		|	СоставРасходов.СчетФактура,
		|	СоставРасходов.СтавкаНДС,
		|	СоставРасходов.СуммаВсего,
		|	СоставРасходов.НДСВсего,
		|	СоставРасходов.БезНДССумма,
		|	СоставРасходов.БезНДС,
		|	СоставРасходов.НДС0Сумма,
		|	СоставРасходов.ЕНВДСумма,
		|	СоставРасходов.ЕНВДНДС,
		|	СоставРасходов.НДС0,
		|	СоставРасходов.НДССумма,
		|	СоставРасходов.НДС,
		|	СоставРасходов.КлючСтроки,
		|	СоставРасходов.БазисРаспределенияВключаетЕНВД,
		|	СоставРасходов.НДСВключенВСтоимость,
		|	СоставРасходов.СчетУчетаНДС,
		|	РаспределениеНДСКосвенныхРасходов.СчетаУчетаРасходов.(
		|		КлючСтроки,
		|		СчетЗатрат,
		|		ПодразделениеЗатрат,
		|		Субконто1,
		|		Субконто2,
		|		Субконто3,
		|		СуммаБезНДС,
		|		НДС
		|	),
		|	СоставРасходов.СчетФактура.ДоговорКонтрагента
		|ИЗ
		|	Документ.РаспределениеНДСКосвенныхРасходов.СоставКосвенныхРасходов КАК СоставРасходов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РаспределениеНДСКосвенныхРасходов КАК РаспределениеНДСКосвенныхРасходов
		|		ПО СоставРасходов.Ссылка = РаспределениеНДСКосвенныхРасходов.Ссылка
		|ГДЕ
		|	РаспределениеНДСКосвенныхРасходов.Ссылка = &Ссылка
		|	И СоставРасходов.Ссылка = &Ссылка
		|	И РаспределениеНДСКосвенныхРасходов.СчетаУчетаРасходов.КлючСтроки = СоставРасходов.КлючСтроки";
	
	Запрос.УстановитьПараметр("Ссылка", СтруктураШапкиДокумента.Ссылка);
	
	РезультатЗапросаПоКосвеннымРасходам = Запрос.Выполнить();
	
	Таблица = РезультатЗапросаПоКосвеннымРасходам.Выгрузить();
	
	Таблица.Колонки.Добавить("СуммаБезНДС", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
	Таблица.Колонки.Добавить("ПроводкаНДС", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
	Таблица.Колонки.Добавить("ПроводкаНДС0", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
	Таблица.Колонки.Добавить("ПроводкаЕНВД", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
	Таблица.Колонки.Добавить("ПроводкаБезНДС", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
	Таблица.Колонки.Добавить("НДСДвижений", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
	Таблица.Колонки.Добавить("НДСЭтоЕНВД", Новый ОписаниеТипов("Булево"));
	
	КоличествоСтрок = Таблица.Количество();
	
	Для К = 0 По КоличествоСтрок - 1 Цикл
		СтрокаТаблицы = Таблица[К];
		Если СтрокаТаблицы.НДСВключенВСтоимость Тогда
			продолжить;
		ИначеЕсли СтрокаТаблицы.БезНДССумма + СтрокаТаблицы.БезНДС <> 0 И СтрокаТаблицы.ЕНВДСумма + СтрокаТаблицы.ЕНВДНДС <> 0 Тогда
			
			// Новая строка - ЕНВД, текущая - без НДС (не ЕНВД)
			НоваяСтрока = Таблица.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы,,"СчетаУчетаРасходов");
			НоваяСтрока.СчетаУчетаРасходов = СтрокаТаблицы.СчетаУчетаРасходов.Скопировать();
			НоваяСтрока.НДСЭтоЕНВД = Истина;
			
			НоваяСтрока.БезНДССумма = 0;
			НоваяСтрока.БезНДС = 0;
			НоваяСтрока.НДС0 = 0;
			НоваяСтрока.НДС0Сумма = 0;
			НоваяСтрока.СуммаВсего = НоваяСтрока.ЕНВДСумма;
			НоваяСтрока.НДСВсего = НоваяСтрока.ЕНВДНДС;
			
			СтрокаТаблицы.ЕНВДСумма = 0;
			СтрокаТаблицы.ЕНВДНДС = 0;
			СтрокаТаблицы.СуммаВсего = СтрокаТаблицы.СуммаВсего - НоваяСтрока.ЕНВДСумма;
			СтрокаТаблицы.НДСВсего = СтрокаТаблицы.НДСВсего - НоваяСтрока.ЕНВДНДС;
			
			
			ПодменитьСубконтоСтатьиЗатрат(СтрокаТаблицы.СчетаУчетаРасходов,СтруктураШапкиДокумента.СтатьяЗатратНДС);
			ПодменитьСубконтоСтатьиЗатрат(НоваяСтрока.СчетаУчетаРасходов,СтруктураШапкиДокумента.СтатьяЗатратНДСприЕНВД);
		ИначеЕсли СтрокаТаблицы.БезНДССумма + СтрокаТаблицы.БезНДС <> 0 тогда
			ПодменитьСубконтоСтатьиЗатрат(СтрокаТаблицы.СчетаУчетаРасходов,СтруктураШапкиДокумента.СтатьяЗатратНДС);
		ИначеЕсли СтрокаТаблицы.ЕНВДСумма + СтрокаТаблицы.ЕНВДНДС <> 0 тогда
			ПодменитьСубконтоСтатьиЗатрат(СтрокаТаблицы.СчетаУчетаРасходов,СтруктураШапкиДокумента.СтатьяЗатратНДСприЕНВД);
		КонецЕсли;
	КонецЦикла;
	// Подготовка сумм для включения и исключения
	Для Каждого СтрокаТаблицы Из Таблица Цикл
		
		Если СтрокаТаблицы.НДСВключенВСтоимость Тогда
			
			СтрокаТаблицы.СуммаБезНДС = (СтрокаТаблицы.НДССумма + СтрокаТаблицы.НДС0Сумма);
			СтрокаТаблицы.НДСДвижений = (СтрокаТаблицы.НДС + СтрокаТаблицы.НДС0);
			СтрокаТаблицы.ПроводкаНДС = СтрокаТаблицы.НДС;
			СтрокаТаблицы.ПроводкаНДС0 = СтрокаТаблицы.НДС0;
			
		Иначе
			
			СтрокаТаблицы.СуммаБезНДС = (СтрокаТаблицы.БезНДССумма + СтрокаТаблицы.ЕНВДСумма);
			СтрокаТаблицы.НДСДвижений = (СтрокаТаблицы.БезНДС + СтрокаТаблицы.ЕНВДНДС);
			СтрокаТаблицы.ПроводкаБезНДС = СтрокаТаблицы.БезНДС;
			СтрокаТаблицы.ПроводкаЕНВД = СтрокаТаблицы.ЕНВДНДС;
			
		КонецЕсли;
		
			
	КонецЦикла;
		
	Возврат Таблица;

КонецФункции // ПодготовитьТаблицуПоОплатам()

// Выгружает результат запроса в табличную часть, добавляет ей необходимые колонки для проведения.
//
//
Функция ПодготовитьТаблицуПоСчетамУчета(СтруктураШапкиДокумента, РезультатЗапросаПоСчетамУчета)

	Таблица = РезультатЗапросаПоСчетамУчета.Выгрузить();
	
	Возврат Таблица;

КонецФункции // ПодготовитьТаблицуПоОплатам()

// Проверяет правильность заполнения строк табличной части.
//
//
Процедура ПроверитьЗаполнениеТабличнойЧастиСоставКосвенныхРасходов(ТаблицаКосвенныхРасходов, Отказ, Заголовок)

	// Укажем, что надо проверить:
	СтруктураОбязательныхПолей = Новый Структура("ВидЦенности, Поставщик, СчетФактура, СтавкаНДС");
	
	// Теперь вызовем общую процедуру проверки.
	ЗаполнениеДокументов.ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, "СоставКосвенныхРасходов", СтруктураОбязательныхПолей, Отказ, Заголовок);
	
	// Проверка совпадения информации по выручке в документе и в регистре НДСНачисленный
	ВыручкаЕНВДПоРегистру   = 0;
	ВыручкаБезНДСПоРегистру = 0;
	ВыручкаНДС0ПоРегистру	= 0;
	ВыручкаНДСПоРегистру    = 0;
	
	КонецПериода = УчетНДС.ПолучитьКонецПериодаПоУчетнойПолитике(Организация, НачалоПериода);
	
	Если Не Отказ Тогда
		УчетНДС.РассчитатьВыручкуДляНДС(Организация, НачалоПериода, КонецПериода, ВыручкаЕНВДПоРегистру, ВыручкаБезНДСПоРегистру, ВыручкаНДС0ПоРегистру, ВыручкаНДСПоРегистру);
		ВалютаУчета = Константы.ВалютаРегламентированногоУчета.Получить();
		
		Если ВыручкаНДС <> ВыручкаНДСПоРегистру Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Сумма выручки по обычным ставкам НДС (" + ВыручкаНДС + " " + ВалютаУчета + ") не совпадает с информацией в регистрах учета (" + ВыручкаНДСПоРегистру + " " + ВалютаУчета + ")!", , Заголовок,СтатусСообщения.Внимание);
		КонецЕсли;
		Если ВыручкаЕНВД <> ВыручкаЕНВДПоРегистру Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Сумма выручки облагаемой ЕНВД (" + ВыручкаЕНВД + " " + ВалютаУчета + ") не совпадает с информацией в регистрах учета (" + ВыручкаЕНВДПоРегистру + " " + ВалютаУчета + ")!", , Заголовок,СтатусСообщения.Внимание);
		КонецЕсли;
		Если ВыручкаБезНДС <> ВыручкаБезНДСПоРегистру Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Сумма выручки без НДС (" + ВыручкаБезНДС + " " + ВалютаУчета + ") не совпадает с информацией в регистрах учета (" + ВыручкаБезНДСПоРегистру + " " + ВалютаУчета + ")!", , Заголовок,СтатусСообщения.Внимание);
		КонецЕсли;
		Если ВыручкаНДС0 <> ВыручкаНДС0ПоРегистру Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Сумма выручки облагаемой НДС по ставке 0% (" + ВыручкаНДС0 + " " + ВалютаУчета + ") не совпадает с информацией в регистрах учета (" + ВыручкаНДС0ПоРегистру + " " + ВалютаУчета + ")!", , Заголовок,СтатусСообщения.Внимание);
		КонецЕсли;
		
	КонецЕсли;
	
	СтрокаСообщенияСчетУчетаНДС = "Не заполнено значение реквизита ""Счет учета НДС""";
	// Дополнительно нужно проверить арифметику распределения.
	Для Каждого Строка Из СоставКосвенныхРасходов Цикл
		
		// Счет учета НДС должен быть заполнен только если есть сумма НДС
		Если Не ЗначениеЗаполнено(Строка.СчетУчетаНДС) И (Строка.НДСВсего + Строка.ЕНВДНДС + Строка.БезНДС + Строка.НДС0 + Строка.НДС <> 0) Тогда
			СтрокаНачалаСообщенияОбОшибке = "Строка номер "+ СокрЛП(Строка.НомерСтроки) +
										   " табличной части ""Состав косвенных расходов"": ";
			ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + СтрокаСообщенияСчетУчетаНДС, Отказ, Заголовок);
		КонецЕсли;
			
		Если Строка.СуммаВсего <> (Строка.БезНДССумма + Строка.НДС0Сумма + Строка.ЕНВДСумма + Строка.НДССумма) Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Для строки """ + Строка.НомерСтроки + """ общая сумма в колонке ""Сумма по счету"" не совпадает с итогом распределения этой суммы в других колонках!", Отказ, Заголовок);
		КонецЕсли;
		
		Если Строка.НДСВсего <> (Строка.БезНДС + Строка.НДС0 + Строка.ЕНВДНДС + Строка.НДС) Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Для строки """ + Строка.НомерСтроки + """ общая сумма в колонке ""НДС по счету"" не совпадает с итогом распределения этой суммы в других колонках!", Отказ, Заголовок);
		КонецЕсли;
		
		Если (Не Строка.НДСВключенВСтоимость И (Строка.БезНДС <> 0 или Строка.ЕНВДНДС <> 0)) Или 
			 (Строка.НДСВключенВСтоимость И (Строка.НДС <> 0 или Строка.НДС0 <> 0)) Тогда
			// Следует проверить направления отнесения затрат для включения части НДС
			// в стоимость этих затрат
			СтруктураПоиска = Новый Структура("КлючСтроки", Строка.КлючСтроки);
			СтрокиСчетовУчета = СчетаУчетаРасходов.НайтиСтроки(СтруктураПоиска);
			Если СтрокиСчетовУчета.Количество() > 0 Тогда
				Если Строка.СуммаВсего <> 0 Тогда
					СчетчикСуммы = 0;
					//СчетчикНДС = 0;
					Для Каждого СтрокаУчета Из СтрокиСчетовУчета Цикл		
						СчетчикСуммы = СчетчикСуммы + СтрокаУчета.СуммаБезНДС;
						//СчетчикНДС = СчетчикНДС + СтрокаУчета.НДС;
					КонецЦикла;
					
					Если СчетчикСуммы = 0 Тогда
						ОбщегоНазначения.СообщитьОбОшибке("Для строки """ + Строка.НомерСтроки + """ не указаны суммы без НДС на закладке ""Счета учета расходов"", использующиеся для распределения по движениям (при включении(исключении) НДС в стоимость)!", Отказ, Заголовок);
					КонецЕсли;
				КонецЕсли;
			Иначе
				ОбщегоНазначения.СообщитьОбОшибке("Для строки """ + Строка.НомерСтроки + """ на закладке ""Счета учета расходов"" не указаны счета и суммы относимых затрат. Невозможно выполнить включение НДС в стоимость затрат!", Отказ, Заголовок);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры // ПроверитьЗаполнениеТабличнойЧастиТовары()

// Проверяет правильность заполнения строк табличной части.
//
//
Процедура ПроверитьЗаполнениеТабличнойЧастиСчетаУчетаРасходов(ТаблицаСчетовУчета, Отказ, Заголовок)

	// Укажем, что надо проверить:
	СтруктураОбязательныхПолей = Новый Структура("СчетЗатрат");
	
	// Теперь вызовем общую процедуру проверки.
	ЗаполнениеДокументов.ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, "СчетаУчетаРасходов", СтруктураОбязательныхПолей, Отказ, Заголовок);
	
КонецПроцедуры // ПроверитьЗаполнениеТабличнойЧастиТовары()

// Формирование движений по регистрам подсистемы НДС.
//
//
Процедура ДвиженияПоРегистрамПодсистемыНДС(СтруктураШапкиДокумента, РаспределениеКосвенныхРасходов, ТаблицаПоСчетамУчета, Отказ, Заголовок);
	
	Если РаспределениеКосвенныхРасходов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ОбщегоНазначения.ПроводитьДокументПоРазделуУчета(СтруктураШапкиДокумента.Организация, Перечисления.РазделыУчета.НДС, СтруктураШапкиДокумента.Дата) Тогда
		Возврат;
	КонецЕсли;
	
	Движения_НДСКосвенныеРасходы = Движения.НДСКосвенныеРасходы;
	
	ТаблицаДвиженийНДСКосвенныеРасходы = Движения_НДСКосвенныеРасходы.ВыгрузитьКолонки();
	
	ТаблицаДляРаспределения = РаспределениеКосвенныхРасходов.Скопировать();
	ТаблицаДляРаспределения.Колонки.Удалить("НДС");
	ТаблицаДляРаспределения.Колонки.Удалить("СуммаБезНДС");
	ТаблицаДляРаспределения.Колонки.НДСВсего.Имя = "НДС";
	ТаблицаДляРаспределения.Колонки.СуммаВсего.Имя = "СуммаБезНДС";
	
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаДляРаспределения, ТаблицаДвиженийНДСКосвенныеРасходы);
	ТаблицаДвиженийНДСКосвенныеРасходы.ЗаполнитьЗначения(СтруктураШапкиДокумента.Организация, "Организация");
	
	Если Не Отказ Тогда
		Движения_НДСКосвенныеРасходы.мПериод = СтруктураШапкиДокумента.Дата;
		Движения_НДСКосвенныеРасходы.мТаблицаДвижений = ТаблицаДвиженийНДСКосвенныеРасходы;
		Движения_НДСКосвенныеРасходы.ВыполнитьРасход();
	КонецЕсли;
	
	ДвиженияПоРегистрамВключениеИсключениеИзСтоимости(СтруктураШапкиДокумента, РаспределениеКосвенныхРасходов, ТаблицаПоСчетамУчета, Отказ, Заголовок);
	
	ДвиженияПоРегиструНДСПредъявленныйРеализация0(СтруктураШапкиДокумента, РаспределениеКосвенныхРасходов, Отказ, Заголовок);
								  
КонецПроцедуры // ДвиженияПоРегистрамПодсистемыНДС()

// Включение НДС в стоимость и исключение из стоимости по результатам распределения
//
Процедура ДвиженияПоРегистрамВключениеИсключениеИзСтоимости(СтруктураШапкиДокумента, РаспределениеКосвенныхРасходов, ТаблицаПоСчетамУчета, Отказ, Заголовок)
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Распределение = Новый Структура("СуммаБезНДС, НДСДвижений", "СуммаБезНДС", "НДС");
	Отбор		  = Новый Структура("КлючСтроки");
	СписокИсключаемыхКолонок = Новый Структура("БезНДССумма, БезНДС, НДС0, НДС0Сумма, ЕНВДСумма, ЕНВДНДС, СуммаВсего, НДСВсего, НДССумма,НДС");
	
	ТаблицаВключенияИсключения = ОбщегоНазначения.РазвернутьПоВложеннойТаблице(РаспределениеКосвенныхРасходов, "СчетаУчетаРасходов",Распределение,СписокИсключаемыхКолонок,);
	
	Если ТаблицаВключенияИсключения = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаВключенияИсключения.Колонки.СуммаБезНДС.Имя = "Стоимость";
	ТаблицаВключенияИсключения.Колонки.НДСДвижений.Имя = "НДС";
	ТаблицаВключенияИсключения.Колонки.Добавить("ДействияНДСПокупки_ВключитьВСтоимость", Новый ОписаниеТипов("Булево"));
	ТаблицаВключенияИсключения.Колонки.Добавить("ДействияНДСПокупки_ИсключитьИзСтоимости", Новый ОписаниеТипов("Булево"));
	ТаблицаВключенияИсключения.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	СтрокиКУдалению = Новый Массив();
	Для каждого СтрокаРасходов Из ТаблицаВключенияИсключения Цикл
		Если СтрокаРасходов.НДС = 0 и СтрокаРасходов.Стоимость = 0 тогда
			СтрокиКУдалению.Добавить(СтрокаРасходов);
		Иначе
			СтрокаРасходов.Стоимость = СтрокаРасходов.Стоимость + СтрокаРасходов.НДС;
			СтрокаРасходов.Организация = СтруктураШапкиДокумента.Организация;
			СтрокаРасходов.ДействияНДСПокупки_ВключитьВСтоимость = Не СтрокаРасходов.НДСВключенВСтоимость;
			СтрокаРасходов.ДействияНДСПокупки_ИсключитьИзСтоимости = СтрокаРасходов.НДСВключенВСтоимость;
		КонецЕсли;
	КонецЦикла; 
	
	Для каждого СтрокаКУдалению Из СтрокиКУдалению Цикл
		ТаблицаВключенияИсключения.Удалить(СтрокаКУдалению);
	КонецЦикла; 
	
	// Добавление колонок нужных для включения НДС в стоимость
	ТаблицаВключенияИсключения.Колонки.Добавить("СчетСписанияНДС", Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТаблицаВключенияИсключения.Колонки.Добавить("ПодразделениеОрганизации", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	ТаблицаВключенияИсключения.Колонки.Добавить("СубконтоСписанияНДС1");
	ТаблицаВключенияИсключения.Колонки.Добавить("СубконтоСписанияНДС2");
	ТаблицаВключенияИсключения.Колонки.Добавить("СубконтоСписанияНДС3");
	ТаблицаВключенияИсключения.Колонки.Добавить("КорСчетСписания", Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТаблицаВключенияИсключения.Колонки.Добавить("КорПодразделениеОрганизации", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	ТаблицаВключенияИсключения.Колонки.Добавить("КорСубконтоСписания1");
	ТаблицаВключенияИсключения.Колонки.Добавить("КорСубконтоСписания2");
	ТаблицаВключенияИсключения.Колонки.Добавить("КорСубконтоСписания3");
	
	Для Каждого СтрокаТаблицы Из ТаблицаВключенияИсключения Цикл
		Если СтруктураШапкиДокумента.ДляСписанияНДСИспользоватьСчетИАналитикуУчетаЗатрат Или СтрокаТаблицы.НДСВключенВСтоимость Тогда
			СтрокаТаблицы.СчетСписанияНДС = СтрокаТаблицы.СчетЗатрат;
			СтрокаТаблицы.ПодразделениеОрганизации = СтрокаТаблицы.ПодразделениеЗатрат;
			СтрокаТаблицы.СубконтоСписанияНДС1 = СтрокаТаблицы.Субконто1;
			СтрокаТаблицы.СубконтоСписанияНДС2 = СтрокаТаблицы.Субконто2;
			СтрокаТаблицы.СубконтоСписанияНДС3 = СтрокаТаблицы.Субконто3;
		Иначе
			СтрокаТаблицы.СчетСписанияНДС = СтруктураШапкиДокумента.СчетСписанияНДС;
			СтрокаТаблицы.ПодразделениеОрганизации = СтруктураШапкиДокумента.ПодразделениеЗатрат;
			СтрокаТаблицы.СубконтоСписанияНДС1 = СтруктураШапкиДокумента.СубконтоСписанияНДС1;
			СтрокаТаблицы.СубконтоСписанияНДС2 = СтруктураШапкиДокумента.СубконтоСписанияНДС2;
			СтрокаТаблицы.СубконтоСписанияНДС3 = СтруктураШапкиДокумента.СубконтоСписанияНДС3;
		КонецЕсли;
		СтрокаТаблицы.КорСчетСписания = СтрокаТаблицы.СчетЗатрат;
		СтрокаТаблицы.КорПодразделениеОрганизации = СтрокаТаблицы.ПодразделениеОрганизации;
		СтрокаТаблицы.КорСубконтоСписания1 = СтрокаТаблицы.Субконто1;
		СтрокаТаблицы.КорСубконтоСписания2 = СтрокаТаблицы.Субконто2;
		СтрокаТаблицы.КорСубконтоСписания3 = СтрокаТаблицы.Субконто3;
	КонецЦикла;
	
	УчетНДСФормированиеДвижений.ОтразитьВключениеИсключениеНДСВСтоимость(СтруктураШапкиДокумента, ТаблицаВключенияИсключения, Неопределено, Истина, Движения.Хозрасчетный, Заголовок, Движения, Ложь);
	УчетНДСФормированиеДвижений.ОтразитьВключениеИсключениеНДСВСтоимость(СтруктураШапкиДокумента, ТаблицаВключенияИсключения, Неопределено, Ложь, Движения.Хозрасчетный, Заголовок, Движения, Ложь);
	
КонецПроцедуры

// Распределение НДС по ставке 0%
//
Процедура ДвиженияПоРегиструНДСПредъявленныйРеализация0(СтруктураШапкиДокумента, РаспределениеКосвенныхРасходов, Отказ, Заголовок)

	КонецПериода = УчетНДС.ПолучитьКонецПериодаПоУчетнойПолитике(СтруктураШапкиДокумента.Организация, НачалоПериода, Отказ);
	
	Если Отказ Тогда
		Возврат
	КонецЕсли;
	
	Если РаспределениеКосвенныхРасходов.Итог("НДС0Сумма") + РаспределениеКосвенныхРасходов.Итог("НДС0") = 0 Тогда
		// Нет сумм для распределения
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", СтруктураШапкиДокумента.Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДСРеализация0Обороты.СчетФактура КАК ДокументОтгрузки,
	|	СУММА(НДСРеализация0Обороты.СуммаБезНДСПриход + НДСРеализация0Обороты.НДСПриход) КАК СуммаПриход
	|ИЗ
	|	РегистрНакопления.НДСРеализация0.Обороты(
	|			НАЧАЛОПЕРИОДА(&НачалоПериода, ДЕНЬ),
	|			КОНЕЦПЕРИОДА(&КонецПериода, ДЕНЬ),
	|			Период,
	|			Организация = &Организация
	|				И Состояние = ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.ОжидаетсяПодтверждение)) КАК НДСРеализация0Обороты
	|ГДЕ
	|	НДСРеализация0Обороты.СуммаБезНДСПриход + НДСРеализация0Обороты.НДСПриход > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСРеализация0Обороты.СчетФактура";
					
	// Определим реализацию по ставке 0% за налоговый период 
	БазоваяТаблицаРаспределения = Запрос.Выполнить().Выгрузить();
	
	СписокДокументовОтгрузки = ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(БазоваяТаблицаРаспределения.ВыгрузитьКолонку("ДокументОтгрузки"), Истина);
	
	Если СписокДокументовОтгрузки.Количество()>0 Тогда
		Запрос.УстановитьПараметр("МоментДокумента", Новый Граница(Новый МоментВремени(Дата, Ссылка), ВидГраницы.Включая));
		
		Запрос.УстановитьПараметр("СписокДокументовОтгрузки", СписокДокументовОтгрузки);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НДСРеализация0Остатки.СчетФактура КАК ДокументОтгрузки,
		|	НДСРеализация0Остатки.Состояние,
		|	СУММА(НДСРеализация0Остатки.СуммаБезНДСОстаток + НДСРеализация0Остатки.НДСОстаток) КАК СуммаПриход
		|ИЗ
		|	РегистрНакопления.НДСРеализация0.Остатки(
		|			&МоментДокумента,
		|			Организация = &Организация
		|				И СчетФактура В (&СписокДокументовОтгрузки)) КАК НДСРеализация0Остатки
		|
		|СГРУППИРОВАТЬ ПО
		|	НДСРеализация0Остатки.СчетФактура,
		|	НДСРеализация0Остатки.Состояние";
		ТаблицаТекущихСостояний = Запрос.Выполнить().Выгрузить(); 
	
		ТаблицаРаспределения = ОбщегоНазначения.СформироватьКорректирующиеЗаписи(БазоваяТаблицаРаспределения,ТаблицаТекущихСостояний,Новый Структура("СуммаПриход"),,,,Истина);
		ТаблицаРаспределения.Индексы.Добавить("Состояние");
		СтрокиБезСостояния =  ТаблицаРаспределения.НайтиСтроки(Новый Структура("Состояние",Неопределено));
		Для каждого Строка Из СтрокиБезСостояния Цикл
			Строка.Состояние = Перечисления.НДССостоянияРеализация0.ОжидаетсяПодтверждение;
		КонецЦикла; 
	Иначе
	    ТаблицаРаспределения = БазоваяТаблицаРаспределения.Скопировать();
		ТаблицаРаспределения.Колонки.Добавить("Состояние", Новый описаниеТипов("ПеречислениеСсылка.НДССостоянияРеализация0"));
		ТаблицаРаспределения.ЗаполнитьЗначения(Перечисления.НДССостоянияРеализация0.ОжидаетсяПодтверждение ,"Состояние");
	КонецЕсли; 
	
	ТаблицаДвижений	= РаспределениеКосвенныхРасходов.Скопировать();
	ТаблицаДвижений.Свернуть("ВидЦенности, Поставщик, СчетФактура, СтавкаНДС, СчетУчетаНДС", "НДС0Сумма, НДС0");
	ТаблицаДвижений.Колонки.НДС0Сумма.Имя = "СуммаБезНДС";
	ТаблицаДвижений.Колонки.НДС0.Имя = "НДС";
	
	МассивКоэффициентов = ТаблицаРаспределения.ВыгрузитьКолонку("СуммаПриход");
	
	ТаблицаДвижений.Колонки.Добавить("СуммыДвижений", Новый ОписаниеТипов("ТаблицаЗначений"));
	
	Для Каждого СтрокаРасхода Из ТаблицаДвижений Цикл
		
		СтрокаРасхода.СуммыДвижений = ТаблицаРаспределения.Скопировать();
		СтрокаРасхода.СуммыДвижений.Колонки.Добавить("СуммаБезНДС");
		СтрокаРасхода.СуммыДвижений.Колонки.Добавить("НДС");
		МассивСумм = ОбщегоНазначения.РаспределитьПропорционально(СтрокаРасхода.СуммаБезНДС, МассивКоэффициентов);
		Если МассивСумм <> Неопределено Тогда
			СтрокаРасхода.СуммыДвижений.ЗагрузитьКолонку(МассивСумм, "СуммаБезНДС");
		КонецЕсли;
		МассивСумм = ОбщегоНазначения.РаспределитьПропорционально(СтрокаРасхода.НДС, МассивКоэффициентов);
		Если МассивСумм <> Неопределено Тогда
			СтрокаРасхода.СуммыДвижений.ЗагрузитьКолонку(МассивСумм, "НДС");
		КонецЕсли;
		
	КонецЦикла;
	
	СписокРаспределяемыхКолонок = Новый Структура("СуммаБезНДС, НДС");
	СписокИсключаемыхКолонок = Новый Структура("СуммаПриход");
	
	ТаблицаДвижений = ОбщегоНазначения.РазвернутьПоВложеннойТаблице(ТаблицаДвижений, "СуммыДвижений", СписокРаспределяемыхКолонок, СписокИсключаемыхКолонок);
		
	Движения_НДСПредъявленныйРеализация0 = Движения.НДСПредъявленныйРеализация0;
	
	ТаблицаДвиженийНДСПредъявленныйРеализация0 = Движения_НДСПредъявленныйРеализация0.ВыгрузитьКолонки();
	ТаблицаДвиженийНДСПредъявленныйРеализация0.Колонки.Добавить("Поставщик",новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	
	СчетНДС0 = ПланыСчетов.Хозрасчетный.НДСПоТоварамРеализованнымПоСтавке0;
	
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаДвижений, ТаблицаДвиженийНДСПредъявленныйРеализация0);
	ТаблицаДвиженийНДСПредъявленныйРеализация0.ЗаполнитьЗначения(СтруктураШапкиДокумента.Организация, "Организация");
	ТаблицаДвиженийНДСПредъявленныйРеализация0.ЗаполнитьЗначения(СтруктураШапкиДокумента.Дата, "ДатаСобытия");
	Для Каждого СтрокаДвижения Из ТаблицаДвиженийНДСПредъявленныйРеализация0 Цикл
		Если СтрокаДвижения.Состояние = Перечисления.НДССостоянияРеализация0.ОжидаетсяПодтверждение Тогда
			СтрокаДвижения.Событие = Перечисления.СобытияПоНДСПокупки.ПредполагаетсяСтавка0;
		ИначеЕсли СтрокаДвижения.Состояние = Перечисления.НДССостоянияРеализация0.ПодтвержденаРеализация0 Тогда
			СтрокаДвижения.Событие = Перечисления.СобытияПоНДСПокупки.ПодтвержденаСтавка0;
		ИначеЕсли СтрокаДвижения.Состояние = Перечисления.НДССостоянияРеализация0.НеПодтвержденаРеализация0 Тогда
			СтрокаДвижения.Событие = Перечисления.СобытияПоНДСПокупки.НеПодтвержденаСтавка0;
		КонецЕсли;
		
		Если не СтрокаДвижения.НДС = 0 Тогда
		
			Проводка = Движения.Хозрасчетный.Добавить();

			Проводка.Период                  = Дата;
			Проводка.Активность              = Истина;
			Проводка.Организация             = СтруктураШапкиДокумента.Организация;
			Проводка.Содержание              = "НДС по косв. расх. (по реализ., предполаг. НДС 0%)";

			Проводка.СчетДт                  = СчетНДС0;
			БухгалтерскийУчет.УстановитьСубконто( Проводка.СчетДт, Проводка.СубконтоДт, "Контрагенты", СтрокаДвижения.поставщик);
			БухгалтерскийУчет.УстановитьСубконто( Проводка.СчетДт, Проводка.СубконтоДт, "СФПолученные", СтрокаДвижения.СчетФактура);
			БухгалтерскийУчет.УстановитьСубконто( Проводка.СчетДт, Проводка.СубконтоДт, "ДокументыРеализации", СтрокаДвижения.ДокументОтгрузки);
			

			Проводка.СчетКт                  = СтрокаДвижения.СчетУчетаНДС;
			БухгалтерскийУчет.УстановитьСубконто( Проводка.СчетКт, Проводка.СубконтоКт, "Контрагенты", СтрокаДвижения.поставщик);
			БухгалтерскийУчет.УстановитьСубконто( Проводка.СчетКт, Проводка.СубконтоКт, "СФПолученные", СтрокаДвижения.СчетФактура);
			
			Проводка.Сумма = СтрокаДвижения.НДС;
		КонецЕсли; 
	КонецЦикла;
	
	ТаблицаДвиженийНДСПредъявленныйРеализация0.Колонки.Удалить(ТаблицаДвиженийНДСПредъявленныйРеализация0.Колонки.Поставщик);
	
	Если ТаблицаДвиженийНДСПредъявленныйРеализация0.Количество() <> 0 Тогда
		Движения_НДСПредъявленныйРеализация0.мПериод = СтруктураШапкиДокумента.Дата;
		Движения_НДСПредъявленныйРеализация0.мТаблицаДвижений = ТаблицаДвиженийНДСПредъявленныйРеализация0;
		Движения_НДСПредъявленныйРеализация0.ВыполнитьПриход();
	КонецЕсли;
	
	
КонецПроцедуры

// Проверка остатков по регистру НДС по косвенным регистрам после проведения. 
// В случае если они не нулевые, проведение отменяется
Процедура ПроверитьСписаниеПоРегиструНДСКосвенныеРасходы(СтруктураШапкиДокумента, Заголовок, Отказ)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", СтруктураШапкиДокумента.Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(СтруктураШапкиДокумента.НачалоПериода));
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(СтруктураШапкиДокумента.Дата));
	
	Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Расхождения.СчетФактура,
		|	Расхождения.ВидЦенности,
		|	Расхождения.СтавкаНДС,
		|	Расхождения.СчетУчетаНДС,
		|	Расхождения.НДСВключенВСтоимость,
		|	СУММА(Расхождения.РасхождениеБезНДС) КАК РасхождениеБезНДС,
		|	СУММА(Расхождения.РасхождениеНДС) КАК РасхождениеНДС
		|ИЗ
		|	(ВЫБРАТЬ
		|		НДСКосвенныеРасходыОбороты.СчетФактура КАК СчетФактура,
		|		НДСКосвенныеРасходыОбороты.ВидЦенности КАК ВидЦенности,
		|		НДСКосвенныеРасходыОбороты.СтавкаНДС КАК СтавкаНДС,
		|		НДСКосвенныеРасходыОбороты.СчетУчетаНДС КАК СчетУчетаНДС,
		|		НДСКосвенныеРасходыОбороты.НДСВключенВСтоимость КАК НДСВключенВСтоимость,
		|		НДСКосвенныеРасходыОбороты.СуммаБезНДСОборот КАК РасхождениеБезНДС,
		|		НДСКосвенныеРасходыОбороты.НДСОборот КАК РасхождениеНДС
		|	ИЗ
		|		РегистрНакопления.НДСКосвенныеРасходы.Обороты(&НачалоПериода, &КонецПериода, Период, Организация = &Организация) КАК НДСКосвенныеРасходыОбороты
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ДанныеДокумента.СчетФактура,
		|		ДанныеДокумента.ВидЦенности,
		|		ДанныеДокумента.СтавкаНДС,
		|		ДанныеДокумента.СчетУчетаНДС,
		|		ДанныеДокумента.НДСВключенВСтоимость,
		|		ДанныеДокумента.СуммаВсего * -1,
		|		ДанныеДокумента.НДСВсего * -1
		|	ИЗ
		|		Документ.РаспределениеНДСКосвенныхРасходов.СоставКосвенныхРасходов КАК ДанныеДокумента
		|	ГДЕ
		|		ДанныеДокумента.Ссылка = &Ссылка) КАК Расхождения
		|
		|СГРУППИРОВАТЬ ПО
		|	Расхождения.СтавкаНДС,
		|	Расхождения.ВидЦенности,
		|	Расхождения.СчетФактура,
		|	Расхождения.НДСВключенВСтоимость,
		|	Расхождения.СчетУчетаНДС
		|
		|ИМЕЮЩИЕ
		|	(НЕ(СУММА(Расхождения.РасхождениеБезНДС) = 0
		|			И СУММА(Расхождения.РасхождениеНДС) = 0))";
				   			   
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
	    Возврат;
	КонецЕсли; 
	
	Выборка = Результат.Выбрать();
	ПервоеСообщение = Истина;
	
	Пока Выборка.Следующий() Цикл
		
		Если ПервоеСообщение Тогда
			СтрокаСообщения = "Обнаружено расхождение данных о суммах НДС по косвенным расходам, подлежащих распределению:"+Символы.ПС;
			ПервоеСообщение = Ложь;
		Иначе
			СтрокаСообщения = "";	
		КонецЕсли; 
		
		СтрокаСообщения = СтрокаСообщения+" - Счет-фактура '" + Выборка.СчетФактура + "', вид ценности '" + Выборка.ВидЦенности + "'
					  |ставка НДС '" + Выборка.СтавкаНДС + "', счет учета НДС '" + Выборка.СчетУчетаНДС + "', " +
					  ?(Выборка.НДСВключенВСтоимость, "НДС включен в стоимость", "НДС не включен встоимость") + ":";
	
		Если не Выборка.РасхождениеБезНДС=0 Тогда
			СтрокаСообщения = СтрокаСообщения+Символы.ПС+Символы.Таб+?(Выборка.РасхождениеБезНДС>0," не распределена", " распределена не отраженная в составе косвенных расходов ")+" сумма без НДС "+Формат(?(Выборка.РасхождениеБезНДС<0,-1,1)*Выборка.РасхождениеБезНДС, "ЧЦ=15; ЧДЦ=2")+" "+строка(СтруктураШапкиДокумента.ВалютаРегламентированногоУчета);
		КонецЕсли; 
		Если не Выборка.РасхождениеНДС=0 Тогда
			СтрокаСообщения = СтрокаСообщения+Символы.ПС+Символы.Таб+?(Выборка.РасхождениеНДС>0," не распределен", " распределен не отраженный в составе косвенных расходов ")+" НДС "+Формат(?(Выборка.РасхождениеНДС<0,-1,1)*Выборка.РасхождениеНДС, "ЧЦ=15; ЧДЦ=2")+" "+строка(СтруктураШапкиДокумента.ВалютаРегламентированногоУчета);
		КонецЕсли; 

		ОбщегоНазначения.СообщитьОбОшибке(СтрокаСообщения, , Заголовок, СтатусСообщения.Внимание); 
	
	КонецЦикла; //Пока Выборка.Следующий()
																	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ
//

Процедура ОбработкаПроведения(Отказ, Режим)
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);

	// Проверка ручной корректировки
	Если ОбщегоНазначения.РучнаяКорректировкаОбработкаПроведения(РучнаяКорректировка,Отказ,Заголовок,ЭтотОбъект, Ложь) Тогда
		Возврат
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(НачалоПериода) Тогда
		ОбщегоНазначения.ОшибкаПриПроведении("Не установлен период документа!", Отказ, Заголовок);
	КонецЕсли; 
	
	СтруктураШапкиДокумента = ОбщегоНазначения.СформироватьСтруктуруШапкиДокумента(Ссылка);
	//// Подготовим данные необходимые для проведения и проверки заполнения табличной части.
	
	ТаблицаПоКосвеннымРасходам = ПодготовитьТаблицуПоКосвеннымРасходам(СтруктураШапкиДокумента); //, РезультатЗапросаПоКосвеннымРасходам
	ТаблицаПоКосвеннымРасходам.Индексы.Добавить("КлючСтроки");
	
	// Подготовим данные необходимые для проведения и проверки заполнения табличной части счетов расхода.
	СтруктураПолей = Новый Структура;
	СтруктураПолей.Вставить("СчетЗатрат",			"СчетЗатрат");
	СтруктураПолей.Вставить("ПодразделениеЗатрат",	"ПодразделениеЗатрат");
	СтруктураПолей.Вставить("Субконто1",			"Субконто1");
	СтруктураПолей.Вставить("Субконто2",			"Субконто2");
	СтруктураПолей.Вставить("Субконто3",			"Субконто3");
	СтруктураПолей.Вставить("КлючСтроки",			"КлючСтроки");
	СтруктураПолей.Вставить("СуммаБезНДС",			"СуммаБезНДС");
	СтруктураПолей.Вставить("НДС",					"НДС");
	
	РезультатЗапросаПоСчетамУчета = ОбщегоНазначения.СформироватьЗапросПоТабличнойЧасти(ЭтотОбъект, "СчетаУчетаРасходов", СтруктураПолей);
	ТаблицаПоСчетамУчета = ПодготовитьТаблицуПоСчетамУчета(СтруктураШапкиДокумента, РезультатЗапросаПоСчетамУчета);
	
	// Проверим правильность заполнения шапки документа
	ПроверитьЗаполнениеШапки(ТаблицаПоКосвеннымРасходам, ТаблицаПоСчетамУчета, Отказ, Заголовок);
	
	ПроверитьЗаполнениеТабличнойЧастиСоставКосвенныхРасходов(ТаблицаПоКосвеннымРасходам, Отказ, Заголовок);
	
	ПроверитьЗаполнениеТабличнойЧастиСчетаУчетаРасходов(ТаблицаПоСчетамУчета, Отказ, Заголовок);
	
	ПроверитьСоответствиеДатыПериоду(Отказ, Заголовок);
	
	Если Не Отказ Тогда
		ДвиженияПоРегистрамПодсистемыНДС(СтруктураШапкиДокумента, ТаблицаПоКосвеннымРасходам, ТаблицаПоСчетамУчета, Отказ, Заголовок);
		ПроверитьСписаниеПоРегиструНДСКосвенныеРасходы(СтруктураШапкиДокумента, Заголовок, Отказ);
	КонецЕсли;
	
	Если Не Отказ Тогда
		УниверсальныеМеханизмы.ЗафиксироватьФактВыполненияРегламентнойОперации(НачалоМесяца(Дата),
													  СтруктураШапкиДокумента.Организация,
													  Ссылка,														  
													  Перечисления.РегламентныеОперации.РаспределениеНДСКосвенныхРасходов);
	КонецЕсли;
 
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	УниверсальныеМеханизмы.СброситьФактВыполненияОперации(Ссылка);
		
	ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ, РучнаяКорректировка, Ложь);
КонецПроцедуры


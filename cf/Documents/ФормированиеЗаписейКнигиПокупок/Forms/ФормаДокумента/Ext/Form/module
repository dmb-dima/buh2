
// Хранит дерево макетов печатных форм
Перем мДеревоМакетов;

// Хранит элемент управления подменю печати
Перем мПодменюПечати;

// Хранит элемент управления кнопку печать по умолчанию
Перем мПечатьПоУмолчанию;

// Хранит дерево кнопок подменю заполнение ТЧ
Перем мКнопкиЗаполненияТЧ;

// Хранит текущую дату документа - для проверки перехода документа в другой период установки номера
Перем мТекущаяДатаДокумента;

Перем мТекущаяОрганизация;

Перем ОткрыватьНастройкуДвижений;

// Процедура устанавливает подменю "Заполнить" в командных панелях ТЧ документа при необходимости
//
Процедура УстановитьКнопкиПодменюЗаполненияТЧ();
	
	СоответствиеТЧ = Новый Соответствие;
	СоответствиеТЧ.Вставить(ЭлементыФормы.ВычетПоПриобретеннымЦенностям,ЭлементыФормы.КоманднаяПанельВычетПоПриобретеннымЦенностям.Кнопки.ПодменюЗаполнить);
	СоответствиеТЧ.Вставить(ЭлементыФормы.НДСсАвансов,ЭлементыФормы.КоманднаяПанельНДСсАвансов.Кнопки.ПодменюЗаполнить);
	СоответствиеТЧ.Вставить(ЭлементыФормы.НДСсАвансовВыданных,ЭлементыФормы.КоманднаяПанельНДСсАвансовВыданных.Кнопки.ПодменюЗаполнить);
	СоответствиеТЧ.Вставить(ЭлементыФормы.ВычетНДСПоНалоговомуАгенту,ЭлементыФормы.КоманднаяПанельВычетНДСПоНалоговомуАгенту.Кнопки.ПодменюЗаполнить);
	
	мКнопкиЗаполненияТЧ = УниверсальныеМеханизмы.СформироватьПодменюЗаполненияТЧ(Ссылка, СоответствиеТЧ, Новый Действие("НажатиеНаДополнительнуюКнопкуЗаполненияТЧ"));
	
КонецПроцедуры

// Процедура устанавливает подменю "Печать" и кнопку "Печать по умолчанию" при необходимости
//
Процедура УстановитьКнопкиПечати()
	
	мДеревоМакетов = УниверсальныеМеханизмы.ПолучитьДеревоМакетовПечати(Ссылка, Неопределено, Новый Действие("ОсновныеДействияФормыПечать"), Новый Действие("ОсновныеДействияФормыУстановитьПечатьПоУмолчанию"));

	УниверсальныеМеханизмы.УстановитьПодменюПечати    (мПодменюПечати, ЭлементыФормы.ОсновныеДействияФормы, мДеревоМакетов.Строки.Количество() > 0);
	УниверсальныеМеханизмы.УстановитьПечатьПоУмолчанию(мПечатьПоУмолчанию, ЭлементыФормы.ОсновныеДействияФормы, мДеревоМакетов, Метаданные().Имя,Новый Действие("ОсновныеДействияФормыПечатьПоУмолчанию"));

	Если Не мПодменюПечати = Неопределено Тогда
		УниверсальныеМеханизмы.СформироватьПодменю(мДеревоМакетов, мПодменюПечати,Истина,Истина);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПредъявленНДСКВычету0ПриИзменении(Элемент)

	Если ВычетПоПриобретеннымЦенностям.Количество() <> 0 
		Или НДСсАвансов.Количество() <> 0 
		Или НДСсАвансовВыданных.Количество() <> 0 
		Или ВычетНДСПоНалоговомуАгенту.Количество() <> 0 
		Тогда

		Если Вопрос("Необходимо очистить табличные части. Продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
			ВычетПоПриобретеннымЦенностям.Очистить();
			НДСсАвансов.Очистить();
			НДСсАвансовВыданных.Очистить();
			ВычетНДСПоНалоговомуАгенту.Очистить();
		Иначе
			ПредъявленНДСКВычету0 = НЕ ПредъявленНДСКВычету0;
		КонецЕсли;

	КонецЕсли;

	УстановитьВидимость();
	
КонецПроцедуры

// Процедура вызова структуры подчиненности документа
//
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
	
КонецПроцедуры
          

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ОсновныеДействияФормыНастройка(Кнопка)

	ОбщегоНазначения.РучнаяКорректировкаОсновнаяФорма(ЭтоНовый(),Ссылка,ЭтотОбъект);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

// Процедура разрешения/запрещения редактирования номера документа
Процедура ДействияФормыРедактироватьНомер(Кнопка)
	
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю1, ЭлементыФормы.Номер);
			
КонецПроцедуры

Процедура ДействияФормыЗаполнитьДокумент(Кнопка)
	
	Если Ссылка.Проведен Тогда
		Ответ = Вопрос("Проведенный документ не может быть заполнен автоматически. Отменить проведение документа для заполнения?", РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Нет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ВычетПоПриобретеннымЦенностям.Количество() > 0 
		или НДСсАвансов.Количество() >0
		или НДСсАвансовВыданных.Количество() >0
		или ВычетНДСПоНалоговомуАгенту.Количество() >0
		Тогда
		ОтветНаВопрос = Вопрос("Заполненные ранее табличные поля документа будут очищены. Продолжить?", РежимДиалогаВопрос.ДаНет);
		Если ОтветНаВопрос = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьДокумент(, , , Ссылка.Проведен И Ответ = КодВозвратаДиалога.Да);
	
	// Установка текущей страницы
	Страницы = Новый СписокЗначений;
	Страницы.Добавить("ВычетПоПриобретеннымЦенностям",	"ВычетПоПриобретеннымЦенностям");
	Страницы.Добавить("НДСсАвансов",					"НДСсАвансов");
	Страницы.Добавить("НДСсАвансовВыданных",			"НДСсАвансовВыданных");
	Страницы.Добавить("ВычетНДСПоНалоговомуАгенту",		"ВычетНДСПоНалоговомуАгенту");
	РаботаСДиалогами.УстановкаТекущейСтраницы(ЭтотОбъект, ЭлементыФормы.НДСПоВидамНачисления, Страницы,);

	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры

// Процедура вызывается при нажатии на кнопку "Заполнить" в диалоге документа
// Реализует алгоритм автоматического заполнения табличной части ВычетПоПриобретеннымЦенностям.
//
Процедура КоманднаяПанельВычетПоПриобретеннымЦенностямЗаполнить(Кнопка)

	Если Ссылка.Проведен Тогда
		Ответ = Вопрос("Проведенный документ не может быть заполнен автоматически. Отменить проведение документа для заполнения?", РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Нет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ВычетПоПриобретеннымЦенностям.Количество() > 0 Тогда
		ОтветНаВопрос = Вопрос("Табличное поле ""Вычет НДС по приобретенным ценностям"" будет очищено. Продолжить?", РежимДиалогаВопрос.ДаНет);
		Если ОтветНаВопрос = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьСтроки_ВычетПоПриобретеннымЦенностям(Ссылка.Проведен И Ответ = КодВозвратаДиалога.Да);

	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры // КоманднаяПанельВычетПоПриобретеннымЦенностямЗаполнить()

// Процедура вызывается при нажатии на кнопку "Запонить" в диалоге документа
// Реализует алгоритм автоматического заполнения табличной части НДСсАвансов.
//
Процедура КоманднаяПанельНДСсАвансовЗаполнить(Кнопка)
	
	Если Ссылка.Проведен Тогда
		Ответ = Вопрос("Проведенный документ не может быть заполнен автоматически. Отменить проведение документа для заполнения?", РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Нет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если НДСсАвансов.Количество() > 0 Тогда
		ОтветНаВопрос = Вопрос("Табличное поле ""Вычет НДС с полученных авансов"" будет очищено. Продолжить?", РежимДиалогаВопрос.ДаНет);
		Если ОтветНаВопрос = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьСтроки_НДСсАвансов(Ссылка.Проведен И Ответ = КодВозвратаДиалога.Да);
	
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры // КоманднаяПанельНДСсАвансовЗаполнить()

Процедура КоманднаяПанельВычетНДСПоНалоговомуАгентуЗаполнить(Кнопка)
	
	Если Ссылка.Проведен Тогда
		Ответ = Вопрос("Проведенный документ не может быть заполнен автоматически. Отменить проведение документа для заполнения?", РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Нет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ВычетНДСПоНалоговомуАгенту.Количество() > 0 Тогда
		ОтветНаВопрос = Вопрос("Табличное поле ""Вычет НДС по налоговому агенту"" будет очищено. Продолжить?", РежимДиалогаВопрос.ДаНет);
		Если ОтветНаВопрос = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьСтроки_ВычетНДСПоНалоговомуАгенту(Ссылка.Проведен И Ответ = КодВозвратаДиалога.Да);

	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры

// Процедура устанавливает видимость для тех колонок в табличной части 
// "ВычетПоПриобретеннымЦенностям", видимость которых определяется реквизитами документа.
//
// Параметры:
//  Нет.
//
Процедура УстановитьВидимость()
	
	ЭлементыФормы.ПредъявленНДСКВычету0.Видимость = Не мУпрощенныйУчетНДС;
	ЭлементыФормы.НДСПоВидамНачисления.Страницы.ВычетПоПриобретеннымЦенностям.Видимость = Не мУпрощенныйУчетНДС;
	ЭлементыФормы.НДСПоВидамНачисления.Страницы.НДССАвансовВыданных.Видимость = Не мУпрощенныйУчетНДС И Не ПредъявленНДСКВычету0;
	ЭлементыФормы.НДСПоВидамНачисления.Страницы.ВычетНДСПоНалоговомуАгенту.Видимость = Не мУпрощенныйУчетНДС;
	
	ЭлементыФормы.ВычетПоПриобретеннымЦенностям.Колонки.ДокументОтгрузки.Видимость = ПредъявленНДСКВычету0;
	ЭлементыФормы.ВычетПоПриобретеннымЦенностям.Колонки.Состояние.Видимость        = ПредъявленНДСКВычету0;

	ЭлементыФормы.НДСсАвансов.Колонки.ДокументОтгрузки.Видимость = ПредъявленНДСКВычету0;
	ЭлементыФормы.НДСсАвансов.Колонки.Состояние.Видимость        = ПредъявленНДСКВычету0;
	ЭлементыФормы.НДСсАвансов.Колонки.ВалютаДокумента.Видимость  = Не мУпрощенныйУчетНДС;
	ЭлементыФормы.НДСсАвансов.Колонки.ВалютнаяСумма.Видимость        = Не мУпрощенныйУчетНДС;
	
	ЭлементыФормы.ВычетНДСПоНалоговомуАгенту.Колонки.ДокументОтгрузки.Видимость = ПредъявленНДСКВычету0;
	ЭлементыФормы.ВычетНДСПоНалоговомуАгенту.Колонки.Состояние.Видимость        = ПредъявленНДСКВычету0;
	
	Для Каждого КнопкаЗаполнить Из ЭлементыФормы.КоманднаяПанельВычетПоПриобретеннымЦенностям.Кнопки.ПодменюЗаполнить.Кнопки Цикл
		КнопкаЗаполнить.Доступность = Не ТолькоПросмотр;
	КонецЦикла;
	
	Для Каждого КнопкаЗаполнить Из ЭлементыФормы.КоманднаяПанельНДСсАвансов.Кнопки.ПодменюЗаполнить.Кнопки Цикл
		КнопкаЗаполнить.Доступность = Не ТолькоПросмотр;
	КонецЦикла;
	
	Для Каждого КнопкаЗаполнить Из ЭлементыФормы.КоманднаяПанельНДСсАвансовВыданных.Кнопки.ПодменюЗаполнить.Кнопки Цикл
		КнопкаЗаполнить.Доступность = Не ТолькоПросмотр;
	КонецЦикла;
	
	Для Каждого КнопкаЗаполнить Из ЭлементыФормы.КоманднаяПанельВычетНДСПоНалоговомуАгенту.Кнопки.ПодменюЗаполнить.Кнопки Цикл
		КнопкаЗаполнить.Доступность = Не ТолькоПросмотр;
	КонецЦикла;
	
КонецПроцедуры // УстановитьВидимость()

Процедура ОбновитьПодвал()
	
	ЭлементыФормы.СуммаБезНДС1.Значение = ОбщегоНазначения.ФорматСумм(ВычетПоПриобретеннымЦенностям.Итог("СуммаБезНДС"));
	ЭлементыФормы.НДС1.Значение = ОбщегоНазначения.ФорматСумм(ВычетПоПриобретеннымЦенностям.Итог("НДС"));
	ЭлементыФормы.СуммаБезНДС2.Значение = ОбщегоНазначения.ФорматСумм(НДСсАвансов.Итог("СуммаБезНДС"));
	ЭлементыФормы.НДС2.Значение = ОбщегоНазначения.ФорматСумм(НДСсАвансов.Итог("НДС"));
	ЭлементыФормы.СуммаБезНДС3.Значение = ОбщегоНазначения.ФорматСумм(НДСсАвансовВыданных.Итог("СуммаБезНДС"));
	ЭлементыФормы.НДС3.Значение = ОбщегоНазначения.ФорматСумм(НДСсАвансовВыданных.Итог("НДС"));
	ЭлементыФормы.СуммаБезНДС4.Значение = ОбщегоНазначения.ФорматСумм(ВычетНДСПоНалоговомуАгенту.Итог("СуммаБезНДС"));
	ЭлементыФормы.НДС4.Значение = ОбщегоНазначения.ФорматСумм(ВычетНДСПоНалоговомуАгенту.Итог("НДС"));
	
	ЭлементыФормы.ВсегоНДС.Значение = ОбщегоНазначения.ФорматСумм(ВычетПоПриобретеннымЦенностям.Итог("НДС") 
										+ НДСсАвансов.Итог("НДС") 
										+ НДСсАвансовВыданных.Итог("НДС")
										+ ВычетНДСПоНалоговомуАгенту.Итог("НДС"));
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ 

// Процедура - обработчик события "ПриИзменении" поля ввода организации.
//
Процедура ОрганизацияПриИзменении(Элемент)

	Если организация = мТекущаяОрганизация Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПустаяСтрока(Номер) Тогда
		МеханизмНумерацииОбъектов.СброситьУстановленныйКодНомерОбъекта(ЭтотОбъект, "Номер", ЭлементыФормы.ДействияФормы.Кнопки.Подменю1, ЭлементыФормы.Номер);
	КонецЕсли;
	
	Если ВычетПоПриобретеннымЦенностям.Количество() <> 0 
		Или НДСсАвансов.Количество() <> 0 
		Или НДСсАвансовВыданных.Количество() <> 0 
		Или ВычетНДСПоНалоговомуАгенту.Количество() <> 0 Тогда

		Если Вопрос("Необходимо очистить табличные части. Продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
			ВычетПоПриобретеннымЦенностям.Очистить();
			НДСсАвансов.Очистить();
			НДСсАвансовВыданных.Очистить();
			ВычетНДСПоНалоговомуАгенту.Очистить();
		Иначе
			Организация = мТекущаяОрганизация;
		КонецЕсли;

	КонецЕсли;
	
	мТекущаяОрганизация = Организация;

	мУпрощенныйУчетНДС = УчетНДС.ПолучитьУПУпрощенныйУчетНДС(Организация, Дата);
	
	УстановитьВидимость();

КонецПроцедуры // ОрганизацияПриИзменении()

// Процедура - обработчик события "ПриИзменении" поля ввода ставки НДС
// в строке табличной части "Товары".
//
Процедура СтавкаНДСПриИзменении(Элемент)

	// Рассчитать реквизиты табличной части.
	ЭлементыФормы.ВычетПоПриобретеннымЦенностям.ТекущиеДанные.НДС = УчетНДС.РассчитатьСуммуНДС(ЭлементыФормы.ВычетПоПриобретеннымЦенностям.ТекущиеДанные.СуммаБезНДС, Истина, Ложь, УчетНДС.ПолучитьСтавкуНДС(ЭлементыФормы.ВычетПоПриобретеннымЦенностям.ТекущиеДанные.СтавкаНДС));

КонецПроцедуры // ТоварыСтавкаНДСПриИзменении()

// Процедура - обработчик события "ПриИзменении" поля дата 
// в диалоге документа.
//
Процедура ДатаПриИзменении(Элемент)

	УстановитьВремя(РежимАвтоВремя.Последним);
	РаботаСДиалогами.ПроверитьНомерДокумента(ЭтотОбъект, мТекущаяДатаДокумента);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю1, ЭлементыФормы.Номер);

	мТекущаяДатаДокумента = Дата; // запомним текущую дату документа для контроля номера документа

	мУпрощенныйУчетНДС = УчетНДС.ПолучитьУПУпрощенныйУчетНДС(Организация, Дата);
	
	УстановитьВидимость();
	
КонецПроцедуры

// ВЫЧЕТ НДС ПО ПРИОБРЕТЕННЫМ ЦЕННОСТЯМ

Процедура ВычетПоПриобретеннымЦенностямСчетУчетаНДСОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	СтандартнаяОбработка = БухгалтерскийУчет.СчетМожноИспользоватьВПроводках(ВыбранноеЗначение)

КонецПроцедуры

Процедура ВычетПоПриобретеннымЦенностямДокументОплатыПриИзменении(Элемент)
	
	ТД = ЭлементыФормы.ВычетПоПриобретеннымЦенностям.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТД.ДокументОплаты) Тогда
		ТД.ДатаОплаты = ТД.ДокументОплаты.Дата;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВычетПоПриобретеннымЦенностямСчетФактураНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ТД = ЭлементыФормы.ВычетПоПриобретеннымЦенностям.ТекущиеДанные;
	Если ТД = Неопределено тогда
		Возврат;
	КонецЕсли;
	СтандартнаяОбработка = Ложь;
	
	Отбор = Новый Структура("Организация,Контрагент", Организация,ТД.Поставщик);
	РаботаСДиалогами.НачалоВыбораЗначенияДокументаСоставногоТипа(ЭтотОбъект, ЭтаФорма, Элемент, СтандартнаяОбработка, Отбор, "ВычетПоПриобретеннымЦенностям");

КонецПроцедуры

Процедура ВычетПоПриобретеннымЦенностямДокументОплатыНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ТД = ЭлементыФормы.ВычетПоПриобретеннымЦенностям.ТекущиеДанные;
	Если ТД = Неопределено тогда
		Возврат;
	КонецЕсли;
	СтандартнаяОбработка = Ложь;
	
	Отбор = Новый Структура("Организация,Контрагент", Организация,ТД.Поставщик);
	
	РаботаСДиалогами.НачалоВыбораЗначенияДокументаСоставногоТипа(ЭтотОбъект, ЭтаФорма, Элемент, СтандартнаяОбработка, Отбор, "ВычетПоПриобретеннымЦенностям");

КонецПроцедуры

Процедура ВычетПоПриобретеннымЦенностямСостояниеНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	СписокВыбора = Новый СписокЗначений;
	СписокВыбора.Добавить(Перечисления.НДССостоянияРеализация0.ПодтвержденаРеализация0);
	СписокВыбора.Добавить(Перечисления.НДССостоянияРеализация0.НеПодтвержденаРеализация0);
	
	РаботаСДиалогами.УстановитьСписокПоляВыбора(Элемент, СписокВыбора);
	
КонецПроцедуры

Процедура ВычетПоПриобретеннымЦенностямДокументОтгрузкиНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Отбор = Новый Структура("Организация", Организация,);
	РаботаСДиалогами.НачалоВыбораЗначенияДокументаСоставногоТипа(ЭтотОбъект, ЭтаФорма, Элемент, СтандартнаяОбработка, Отбор, "ВычетПоПриобретеннымЦенностям");
	
КонецПроцедуры

Процедура ВычетПоПриобретеннымЦенностямПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	ОформлениеСтроки.Ячейки.СчетУчетаНДС.ОтметкаНезаполненного = (ДанныеСтроки.НДС <> 0 И Не ЗначениеЗаполнено(ДанныеСтроки.СчетУчетаНДС));
	ОформлениеСтроки.Ячейки.КорректируемыйПериод.ОтметкаНезаполненного = (ДанныеСтроки.ЗаписьДополнительногоЛиста и НЕ ЗначениеЗаполнено(ДанныеСтроки.КорректируемыйПериод));
	
КонецПроцедуры

Процедура СуммаБезНДСПриИзменении(Элемент)
	
	// Рассчитать реквизиты табличной части.
	ЭлементыФормы.ВычетПоПриобретеннымЦенностям.ТекущиеДанные.НДС = УчетНДС.РассчитатьСуммуНДС(ЭлементыФормы.ВычетПоПриобретеннымЦенностям.ТекущиеДанные.СуммаБезНДС, Истина, Ложь, УчетНДС.ПолучитьСтавкуНДС(ЭлементыФормы.ВычетПоПриобретеннымЦенностям.ТекущиеДанные.СтавкаНДС));
	
КонецПроцедуры
 
// НДС С АВАНСОВ

Процедура НДСсАвансовСостояниеНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	СписокВыбора = Новый СписокЗначений;
	СписокВыбора.Добавить(Перечисления.НДССостоянияРеализация0.ПодтвержденаРеализация0);
	СписокВыбора.Добавить(Перечисления.НДССостоянияРеализация0.НеПодтвержденаРеализация0);
	
	РаботаСДиалогами.УстановитьСписокПоляВыбора(Элемент, СписокВыбора);
	
КонецПроцедуры

Процедура НДСсАвансовДокументОтгрузкиНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ТекущиеДанные = ЭлементыФормы.НДСсАвансов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено тогда
		Возврат;
	КонецЕсли;
	СтандартнаяОбработка = Ложь;
	
	Отбор = Новый Структура("Организация, Контрагент, ДокументыПоДоговоруКонтрагента", Организация, ТекущиеДанные.Покупатель, ТекущиеДанные.ДоговорКонтрагента);
	РаботаСДиалогами.НачалоВыбораЗначенияДокументаСоставногоТипа(ЭтотОбъект, ЭтаФорма, Элемент, СтандартнаяОбработка, Отбор, "НДСсАвансов");
	
КонецПроцедуры

Процедура НДСсАвансовДоговорКонтрагентаНачалоВыбора(Элемент, СтандартнаяОбработка)

	ТекущиеДанные = ЭлементыФормы.НДСсАвансов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено тогда
		Возврат;
	КонецЕсли;
	
	РаботаСДиалогами.НачалоВыбораЗначенияДоговораКонтрагента(ЭтотОбъект, ЭтаФорма, Элемент, ТекущиеДанные.Покупатель, ТекущиеДанные.ДоговорКонтрагента,
	                                        Неопределено, СтандартнаяОбработка);

КонецПроцедуры

Процедура НДСсАвансовСчетФактураНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ТекущиеДанные = ЭлементыФормы.НДСсАвансов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено тогда
		Возврат;
	КонецЕсли;
	СтандартнаяОбработка = Ложь;
	
	СписокДоговоров = Новый СписокЗначений;
	СписокДоговоров.Добавить(ТекущиеДанные.ДоговорКонтрагента);
	СписокДоговоров.Добавить(Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
	Отбор = Новый Структура("Организация, Контрагент, ДокументыПоДоговоруКонтрагента", Организация, ТекущиеДанные.Покупатель, СписокДоговоров);
	
	РаботаСДиалогами.НачалоВыбораЗначенияДокументаСоставногоТипа(ЭтотОбъект, ЭтаФорма, Элемент, СтандартнаяОбработка, Отбор, "НДСсАвансов");
	
КонецПроцедуры

Процедура НДСсАвансовПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	ОформлениеСтроки.Ячейки.КорректируемыйПериод.ОтметкаНезаполненного = (ДанныеСтроки.ЗаписьДополнительногоЛиста и НЕ ЗначениеЗаполнено(ДанныеСтроки.КорректируемыйПериод));
	
КонецПроцедуры

Процедура НДСсАвансовПокупательПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = ЭлементыФормы.НДСсАвансов.ТекущиеДанные;
	УправлениеВзаиморасчетами.УстановитьДоговорКонтрагента(СтрокаТабличнойЧасти.ДоговорКонтрагента,СтрокаТабличнойЧасти.Покупатель,Организация);				

КонецПроцедуры

Процедура НДСсАвансовСтавкаНДСПриИзменении(Элемент)
	
	ЭлементыФормы.НДСсАвансов.ТекущиеДанные.НДС = УчетНДС.РассчитатьСуммуНДС(ЭлементыФормы.НДСсАвансов.ТекущиеДанные.СуммаБезНДС, Истина, Ложь, УчетНДС.ПолучитьСтавкуНДС(ЭлементыФормы.НДСсАвансов.ТекущиеДанные.СтавкаНДС));
	
КонецПроцедуры

Процедура НДСсАвансовСуммаБезНДСПриИзменении(Элемент)
	
	ЭлементыФормы.НДСсАвансов.ТекущиеДанные.НДС = УчетНДС.РассчитатьСуммуНДС(ЭлементыФормы.НДСсАвансов.ТекущиеДанные.СуммаБезНДС, Истина, Ложь, УчетНДС.ПолучитьСтавкуНДС(ЭлементыФормы.НДСсАвансов.ТекущиеДанные.СтавкаНДС));
	
КонецПроцедуры

// НДС С АВАНСОВ ВЫДАННЫХ

Процедура КоманднаяПанельНДСсАвансовВыданныхЗаполнить(Кнопка)

	Если Ссылка.Проведен Тогда
		Ответ = Вопрос("Проведенный документ не может быть заполнен автоматически. Отменить проведение документа для заполнения?", РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Нет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если НДСсАвансовВыданных.Количество() > 0 Тогда
		ОтветНаВопрос = Вопрос("Табличное поле ""Вычет НДС с выданных авансов"" будет очищено. Продолжить?", РежимДиалогаВопрос.ДаНет);
		Если ОтветНаВопрос = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьСтроки_НДСсАвансовВыданных(Ссылка.Проведен И Ответ = КодВозвратаДиалога.Да);

	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры

Процедура НДСсАвансовВыданныхПоставщикПриИзменении(Элемент)
		
	СтрокаТабличнойЧасти = ЭлементыФормы.НДСсАвансовВыданных.ТекущиеДанные;
	УправлениеВзаиморасчетами.УстановитьДоговорКонтрагента(СтрокаТабличнойЧасти.ДоговорКонтрагента, СтрокаТабличнойЧасти.Поставщик, Организация);

КонецПроцедуры

Процедура НДСсАвансовВыданныхДоговорКонтрагентаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ТекущиеДанные = ЭлементыФормы.НДСсАвансовВыданных.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено тогда
		Возврат;
	КонецЕсли;
	
	РаботаСДиалогами.НачалоВыбораЗначенияДоговораКонтрагента(ЭтотОбъект, ЭтаФорма, Элемент, ТекущиеДанные.Поставщик, ТекущиеДанные.ДоговорКонтрагента,
	                                        Неопределено, СтандартнаяОбработка);

КонецПроцедуры

Процедура НДСсАвансовВыданныхСчетФактураНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ТекущиеДанные = ЭлементыФормы.НДСсАвансовВыданных.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено тогда
		Возврат;
	КонецЕсли;
	СтандартнаяОбработка = Ложь;
	
	СписокДоговоров = Новый СписокЗначений;
	СписокДоговоров.Добавить(ТекущиеДанные.ДоговорКонтрагента);
	СписокДоговоров.Добавить(Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
	Отбор = Новый Структура("Организация, Контрагент, ДокументыПоДоговоруКонтрагента", Организация, ТекущиеДанные.Поставщик, СписокДоговоров);
	
	РаботаСДиалогами.НачалоВыбораЗначенияДокументаСоставногоТипа(ЭтотОбъект, ЭтаФорма, Элемент, СтандартнаяОбработка, Отбор, "НДСсАвансовВыданных");

КонецПроцедуры

Процедура НДСсАвансовВыданныхСтавкаНДСПриИзменении(Элемент)
	
	ЭлементыФормы.НДСсАвансовВыданных.ТекущиеДанные.НДС = УчетНДС.РассчитатьСуммуНДС(ЭлементыФормы.НДСсАвансовВыданных.ТекущиеДанные.СуммаБезНДС, Истина, Ложь, УчетНДС.ПолучитьСтавкуНДС(ЭлементыФормы.НДСсАвансовВыданных.ТекущиеДанные.СтавкаНДС));

КонецПроцедуры

Процедура НДСсАвансовВыданныхСуммаБезНДСПриИзменении(Элемент)
	
	ЭлементыФормы.НДСсАвансовВыданных.ТекущиеДанные.НДС = УчетНДС.РассчитатьСуммуНДС(ЭлементыФормы.НДСсАвансовВыданных.ТекущиеДанные.СуммаБезНДС, Истина, Ложь, УчетНДС.ПолучитьСтавкуНДС(ЭлементыФормы.НДСсАвансовВыданных.ТекущиеДанные.СтавкаНДС));
	
КонецПроцедуры

Процедура НДСсАвансовВыданныхПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	ОформлениеСтроки.Ячейки.КорректируемыйПериод.ОтметкаНезаполненного = (ДанныеСтроки.ЗаписьДополнительногоЛиста И Не ЗначениеЗаполнено(ДанныеСтроки.КорректируемыйПериод));

КонецПроцедуры

// ВЫЧЕТ НДС ПО НАЛОГОВОМУ АГЕНТУ

Процедура ВычетНДСПоНалоговомуАгентуСчетФактураНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ТД = ЭлементыФормы.ВычетНДСПоНалоговомуАгенту.ТекущиеДанные;
	Если ТД = Неопределено тогда
		Возврат;
	КонецЕсли;
	СтандартнаяОбработка = Ложь;
	
	Отбор = Новый Структура("Организация,Контрагент", Организация,ТД.Поставщик);
	РаботаСДиалогами.НачалоВыбораЗначенияДокументаСоставногоТипа(ЭтотОбъект, ЭтаФорма, Элемент, СтандартнаяОбработка, Отбор, "ВычетНДСПоНалоговомуАгенту");
	
КонецПроцедуры

Процедура ВычетНДСПоНалоговомуАгентуДокументОплатыНачалоВыбора(Элемент, СтандартнаяОбработка)
		
	ТекущиеДанные = ЭлементыФормы.ВычетНДСПоНалоговомуАгенту.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено тогда
		Возврат;
	КонецЕсли;
	СтандартнаяОбработка = Ложь;
	
	Отбор = Новый Структура("Организация,Контрагент", Организация, ТекущиеДанные.Поставщик);
	
	РаботаСДиалогами.НачалоВыбораЗначенияДокументаСоставногоТипа(ЭтотОбъект, ЭтаФорма, Элемент, СтандартнаяОбработка, Отбор, "ВычетНДСПоНалоговомуАгенту");

КонецПроцедуры

Процедура ВычетНДСПоНалоговомуАгентуДокументОплатыПриИзменении(Элемент)
	
	ТД = ЭлементыФормы.ВычетНДСПоНалоговомуАгенту.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТД.ДокументОплаты) Тогда
		ТД.ДатаОплаты = ТД.ДокументОплаты.Дата;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВычетНДСПоНалоговомуАгентуСостояниеНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	СписокВыбора = Новый СписокЗначений;
	СписокВыбора.Добавить(Перечисления.НДССостоянияРеализация0.ПодтвержденаРеализация0);
	СписокВыбора.Добавить(Перечисления.НДССостоянияРеализация0.НеПодтвержденаРеализация0);
	
	РаботаСДиалогами.УстановитьСписокПоляВыбора(Элемент, СписокВыбора);
	
КонецПроцедуры

Процедура ВычетНДСПоНалоговомуАгентуСуммаБезНДСПриИзменении(Элемент)
	
	ТекущиеДанные = ЭлементыФормы.ВычетНДСПоНалоговомуАгенту.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекущиеДанные.СтавкаНДС) Тогда
		ТекущиеДанные.НДС = УчетНДС.РассчитатьСуммуНДС(ТекущиеДанные.СуммаБезНДС, Истина, Ложь, УчетНДС.ПолучитьСтавкуНДС(ТекущиеДанные.СтавкаНДС));
	КонецЕсли;
	
КонецПроцедуры

Процедура ВычетНДСПоНалоговомуАгентуСтавкаНДСПриИзменении(Элемент)
	
	ТекущиеДанные = ЭлементыФормы.ВычетНДСПоНалоговомуАгенту.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекущиеДанные.СтавкаНДС) Тогда
		ТекущиеДанные.НДС = УчетНДС.РассчитатьСуммуНДС(ТекущиеДанные.СуммаБезНДС, Истина, Ложь, УчетНДС.ПолучитьСтавкуНДС(ТекущиеДанные.СтавкаНДС));
	КонецЕсли;
	
КонецПроцедуры

Процедура ВычетНДСПоНалоговомуАгентуПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	ОформлениеСтроки.Ячейки.СчетУчетаНДС.ОтметкаНезаполненного = (ДанныеСтроки.НДС <> 0 И Не ЗначениеЗаполнено(ДанныеСтроки.СчетУчетаНДС));
	ОформлениеСтроки.Ячейки.КорректируемыйПериод.ОтметкаНезаполненного = (ДанныеСтроки.ЗаписьДополнительногоЛиста и НЕ ЗначениеЗаполнено(ДанныеСтроки.КорректируемыйПериод));
	
КонецПроцедуры

Процедура ВычетНДСПоНалоговомуАгентуВидЦенностиНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	СписокВыбора = Новый СписокЗначений;
	СписокВыбора.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентАренда);
	СписокВыбора.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентРеализацияИмущества);
	СписокВыбора.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентИностранцы);
	
	РаботаСДиалогами.УстановитьСписокПоляВыбора(Элемент, СписокВыбора);
	
КонецПроцедуры

Процедура ВычетНДСПоНалоговомуАгентуСчетУчетаНДСОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = БухгалтерскийУчет.СчетМожноИспользоватьВПроводках(ВыбранноеЗначение)
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СВОЙСТВ И КАТЕГОРИЙ

// Процедура выполняет открытие формы работы со свойствами документа
//
Процедура ДействияФормыДействиеОткрытьСвойства(Кнопка)

	РаботаСДиалогами.ОткрытьСвойстваДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	// Установка кнопок печати
	УстановитьКнопкиПечати();
	
	// Установка кнопок заполнение ТЧ
	УстановитьКнопкиПодменюЗаполненияТЧ();
	      
КонецПроцедуры // ПередОткрытием()

Процедура ПриОткрытии()

	Если ЭтоНовый() Тогда // проверить объект на то, что он еще не внесен в ИБ

		// Заполнить реквизиты значениями по умолчанию.
		ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, глЗначениеПеременной("глТекущийПользователь"), , "Продажа");

		УстановитьВремя(РежимАвтоВремя.Последним);

		НачалоПериода = НачалоМесяца(Дата); 
		КонецПериода  = КонецМесяца(Дата);

	КонецЕсли;
	
	МеханизмНумерацииОбъектов.ДобавитьВМенюДействияКнопкуРедактированияНомера(ЭлементыФормы.ДействияФормы.Кнопки.Подменю1);
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю1,ЭлементыФормы.Номер);

	ОткрыватьНастройкуДвижений = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ПоказыватьДвиженияПриПроведении");

	мВестиУчетНДС = УчетНДС.ПроводитьПоРазделуУчетаНДС(Дата);
	
	мТекущаяДатаДокумента = Дата;
	
	мУпрощенныйУчетНДС = УчетНДС.ПолучитьУПУпрощенныйУчетНДС(Организация, Дата);

	// Вывести в заголовке формы вид операции.
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);

	// Установка текущей страницы
	Страницы = Новый СписокЗначений;
	Страницы.Добавить("ВычетПоПриобретеннымЦенностям",	"ВычетПоПриобретеннымЦенностям");
	Страницы.Добавить("НДСсАвансов",					"НДСсАвансов");
	Страницы.Добавить("НДСсАвансовВыданных",			"НДСсАвансовВыданных");
	Страницы.Добавить("ВычетНДСПоНалоговомуАгенту",		"ВычетНДСПоНалоговомуАгенту");
	РаботаСДиалогами.УстановкаТекущейСтраницы(ЭтотОбъект, ЭлементыФормы.НДСПоВидамНачисления, Страницы,);
	
	// Установить активный реквизит.
	РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма,,ЭлементыФормы.НДСПоВидамНачисления.ТекущаяСтраница,Страницы);
	
	// Установить доступность формы с учетом даты запрета редактирования	
	РаботаСДиалогами.УстановитьДоступностьФормыДляРедактирования(ЭтотОбъект, ЭтаФорма);
	
	УстановитьВидимость();
	
	мТекущаяОрганизация = Организация;
	
	РаботаСДиалогами.ИзменитьПредставлениеКнопкиВыбораСвойств(ЭтаФорма, РаботаСДиалогами.ПолучитьОписаниеЗначенийСвойствОбъекта(Ссылка));

КонецПроцедуры

// Процедура - обработчик события "ПриЗакрытии" формы.
//
Процедура ПриЗакрытии()
			
	ОбщегоНазначения.ОткрытьЖурналДокумента(ЭтаФорма);

КонецПроцедуры

// Процедура - обработчик события "ОбработкаОповещения" формы.
//
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновлениеЗначенийСвойств" И Источник = Ссылка Тогда
		РаботаСДиалогами.ИзменитьПредставлениеКнопкиВыбораСвойств(ЭтаФорма, Параметр);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПослеЗаписи()

	// Установка кнопок печати
	УстановитьКнопкиПечати();

	// Вывести в заголовке формы вид операции и статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);            	
	ОбщегоНазначения.РучнаяКорректировкаОсновнаяФормаПослеЗаписи(ЭтотОбъект.Проведен,ОткрыватьНастройкуДвижений,Ссылка,ЭтотОбъект);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю1, ЭлементыФормы.Номер);
	Оповестить("РегОперация", ?(Проведен, Перечисления.ВидыСостоянийРегламентныхОпераций.Выполнено, Перечисления.ВидыСостоянийРегламентныхОпераций.НеВыполнено), "НДС");
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	Если НЕ ЗначениеЗаполнено(Организация) Тогда

		Предупреждение("Не указана организация. Операция не записана.");

		Отказ = Истина;

		ТекущийЭлемент = ЭлементыФормы.Организация;

		Возврат;

	КонецЕсли;

КонецПроцедуры

// Процедура - обработчик нажатия на любую из дополнительных кнопок по заполнению ТЧ
//
Процедура НажатиеНаДополнительнуюКнопкуЗаполненияТЧ(Кнопка)
	
	УниверсальныеМеханизмы.ОбработатьНажатиеНаДополнительнуюКнопкуЗаполненияТЧ(мКнопкиЗаполненияТЧ.Строки.Найти(Кнопка.Имя,"Имя",Истина),ЭтотОбъект);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать по умолчанию"
//
Процедура ОсновныеДействияФормыПечатьПоУмолчанию(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать"
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Установить печать по умолчанию"
//
Процедура ОсновныеДействияФормыУстановитьПечатьПоУмолчанию(Кнопка)
	
	Если УниверсальныеМеханизмы.НазначитьКнопкуПечатиПоУмолчанию(мДеревоМакетов, Метаданные().Имя) Тогда
		
		УстановитьКнопкиПечати();
		
	КонецЕсли; 
	
	
КонецПроцедуры

Процедура ОбновлениеОтображения()
	
	СтраницаПанели  = ЭлементыФормы.НДСПоВидамНачисления.Страницы;
	
	СтраницаПанели.ВычетПоПриобретеннымЦенностям.Заголовок = "Вычет НДС по приобретенным ценностям ("   + ВычетПоПриобретеннымЦенностям.Количество() + " поз.)";
	СтраницаПанели.НДСсАвансов.Заголовок = "Вычет НДС с полученных авансов (" + НДСсАвансов.Количество() + " поз.)";
	СтраницаПанели.НДССАвансовВыданных.Заголовок = "Вычет НДС с выданных авансов (" + НДСсАвансовВыданных.Количество() + " поз.)";
	СтраницаПанели.ВычетНДСПоНалоговомуАгенту.Заголовок = "Вычет НДС по налоговому агенту (" + ВычетНДСПоНалоговомуАгенту.Количество() + " поз.)";
	
	ОбновитьПодвал();

КонецПроцедуры



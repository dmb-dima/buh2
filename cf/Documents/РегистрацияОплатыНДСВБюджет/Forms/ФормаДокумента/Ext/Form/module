
// Хранит дерево макетов печатных форм
Перем мДеревоМакетов;

// Хранит элемент управления подменю печати
Перем мПодменюПечати;

// Хранит элемент управления кнопку печать по умолчанию
Перем мПечатьПоУмолчанию;

// Хранит дерево кнопок подменю заполнение ТЧ
Перем мКнопкиЗаполненияТЧ;

Перем мТекущаяОрганизация;

// Хранит текущую дату документа - для проверки перехода документа в другой период установки номера
Перем мТекущаяДатаДокумента;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура устанавливает подменю "Заполнить" в командных панелях ТЧ документа при необходимости
//
Процедура УстановитьКнопкиПодменюЗаполненияТЧ();
	
	СоответствиеТЧ = Новый Соответствие;
	СоответствиеТЧ.Вставить(ЭлементыФормы.ОплатаПоДоговорамНалоговогоАгента,ЭлементыФормы.КоманднаяПанельПоДоговорамНалоговогоАгента.Кнопки.ПодменюЗаполнить);
	СоответствиеТЧ.Вставить(ЭлементыФормы.ОплатаДляСобственногоПотребления,ЭлементыФормы.КоманднаяПанельПоДоговорамСобственногоПотребления.Кнопки.ПодменюЗаполнить);
	
	мКнопкиЗаполненияТЧ = УниверсальныеМеханизмы.СформироватьПодменюЗаполненияТЧ(Ссылка, СоответствиеТЧ, Новый Действие("НажатиеНаДополнительнуюКнопкуЗаполненияТЧ"));
	
КонецПроцедуры

// Процедура устанавливает подменю "Печать" и кнопку "Печать по умолчанию" при необходимости
//
Процедура УстановитьКнопкиПечати()
	
	мДеревоМакетов = УниверсальныеМеханизмы.ПолучитьДеревоМакетовПечати(Ссылка, Неопределено, Новый Действие("ОсновныеДействияФормыПечать"), Новый Действие("ОсновныеДействияФормыУстановитьПечатьПоУмолчанию"));

	УниверсальныеМеханизмы.УстановитьПодменюПечати    (мПодменюПечати, ЭлементыФормы.ОсновныеДействияФормы, мДеревоМакетов.Строки.Количество() > 0);
	УниверсальныеМеханизмы.УстановитьПечатьПоУмолчанию(мПечатьПоУмолчанию, ЭлементыФормы.ОсновныеДействияФормы, мДеревоМакетов, Метаданные().Имя,Новый Действие("ОсновныеДействияФормыПечатьПоУмолчанию"));

	Если Не мПодменюПечати = Неопределено Тогда
		УниверсальныеМеханизмы.СформироватьПодменю(мДеревоМакетов, мПодменюПечати,Истина,Истина);
	КонецЕсли;
	
КонецПроцедуры

// Процедура устанавливает видимость элементов формы.
//
// Параметры:
//  Нет.
//
Процедура УстановитьВидимость()
	
	Для Каждого КнопкаЗаполнить Из ЭлементыФормы.КоманднаяПанельПоДоговорамНалоговогоАгента.Кнопки.ПодменюЗаполнить.Кнопки Цикл
		КнопкаЗаполнить.Доступность = Не ТолькоПросмотр;
	КонецЦикла;
	
	Для Каждого КнопкаЗаполнить Из ЭлементыФормы.КоманднаяПанельПоДоговорамСобственногоПотребления.Кнопки.ПодменюЗаполнить.Кнопки Цикл
		КнопкаЗаполнить.Доступность = Не ТолькоПросмотр;
	КонецЦикла;
	
КонецПроцедуры // УстановитьВидимость()

Процедура ОбновитьПодвал()
	
	ЭлементыФормы.СуммаБезНДС1.Значение = ОбщегоНазначения.ФорматСумм(ОплатаПоДоговорамНалоговогоАгента.Итог("СуммаБезНДС"));
	ЭлементыФормы.СуммаБезНДС2.Значение = ОбщегоНазначения.ФорматСумм(ОплатаДляСобственногоПотребления.Итог("СуммаБезНДС"));
	ЭлементыФормы.НДС1.Значение = ОбщегоНазначения.ФорматСумм(ОплатаПоДоговорамНалоговогоАгента.Итог("НДС"));
	ЭлементыФормы.НДС2.Значение = ОбщегоНазначения.ФорматСумм(ОплатаДляСобственногоПотребления.Итог("НДС"));
	
	ЭлементыФормы.ВсегоНДС.Значение = ОбщегоНазначения.ФорматСумм(ОплатаПоДоговорамНалоговогоАгента.Итог("НДС") 
										+ ОплатаДляСобственногоПотребления.Итог("НДС"));
	
КонецПроцедуры

Процедура РассчитатьСуммуНДССтроки(СтрокаТабличнойЧасти)
	
	Если ЗначениеЗаполнено(СтрокаТабличнойЧасти.СтавкаНДС) Тогда
		СтрокаТабличнойЧасти.НДС = УчетНДС.РассчитатьСуммуНДС(СтрокаТабличнойЧасти.СуммаБезНДС, Истина, Ложь, УчетНДС.ПолучитьСтавкуНДС(СтрокаТабличнойЧасти.СтавкаНДС));
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ 

Процедура ДатаПриИзменении(Элемент)
	
	РаботаСДиалогами.ПроверитьНомерДокумента(ЭтотОбъект, мТекущаяДатаДокумента);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю1, ЭлементыФормы.Номер);
	мТекущаяДатаДокумента = Дата; // запомним текущую дату документа для контроля номера документа
	
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля ввода организации.
//
Процедура ОрганизацияПриИзменении(Элемент)
	
	Если организация = мТекущаяОрганизация Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПустаяСтрока(Номер) Тогда
		МеханизмНумерацииОбъектов.СброситьУстановленныйКодНомерОбъекта(ЭтотОбъект, "Номер", ЭлементыФормы.ДействияФормы.Кнопки.Подменю1, ЭлементыФормы.Номер);
	КонецЕсли;
	
	мТекущаяОрганизация = организация;


КонецПроцедуры

// Процедура - обработчик нажатия на любую из дополнительных кнопок по заполнению ТЧ
//
Процедура НажатиеНаДополнительнуюКнопкуЗаполненияТЧ(Кнопка)
	
	УниверсальныеМеханизмы.ОбработатьНажатиеНаДополнительнуюКнопкуЗаполненияТЧ(мКнопкиЗаполненияТЧ.Строки.Найти(Кнопка.Имя,"Имя",Истина),ЭтотОбъект);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать по умолчанию"
//
Процедура ОсновныеДействияФормыПечатьПоУмолчанию(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать"
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Установить печать по умолчанию"
//
Процедура ОсновныеДействияФормыУстановитьПечатьПоУмолчанию(Кнопка)
	
	Если УниверсальныеМеханизмы.НазначитьКнопкуПечатиПоУмолчанию(мДеревоМакетов, Метаданные().Имя) Тогда
		
		УстановитьКнопкиПечати();
		
	КонецЕсли; 
	
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СВОЙСТВ И КАТЕГОРИЙ

// Процедура выполняет открытие формы работы со свойствами документа
//
Процедура ДействияФормыДействиеОткрытьСвойства(Кнопка)

	РаботаСДиалогами.ОткрытьСвойстваДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	// Установка кнопок печати
	УстановитьКнопкиПечати();
	
	// Установка кнопок заполнение ТЧ
	УстановитьКнопкиПодменюЗаполненияТЧ();
		
КонецПроцедуры // ПередОткрытием()

Процедура ПриОткрытии()
	
	Если ЭтоНовый() Тогда // проверить объект на то, что он еще не внесен в ИБ

		// Заполнить реквизиты значениями по умолчанию.
		ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, глЗначениеПеременной("глТекущийПользователь"),);

		УстановитьВремя(РежимАвтоВремя.Последним);

	КонецЕсли;
	
	МеханизмНумерацииОбъектов.ДобавитьВМенюДействияКнопкуРедактированияНомера(ЭлементыФормы.ДействияФормы.Кнопки.Подменю1);
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю1,ЭлементыФормы.Номер);
	
	мТекущаяДатаДокумента = Дата;

	// Вывести в заголовке формы вид операции.
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);

	// Установка текущей страницы
	Страницы = Новый СписокЗначений;
	Страницы.Добавить("ПоДоговорамНалоговогоАгента",	"ОплатаПоДоговорамНалоговогоАгента");
	Страницы.Добавить("ДляСобственногоПотребления",		"ОплатаДляСобственногоПотребления");
	РаботаСДиалогами.УстановкаТекущейСтраницы(ЭтотОбъект, ЭлементыФормы.НДСПоВидамДоговоров, Страницы,);
	
	// Установить активный реквизит.
	РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма,,ЭлементыФормы.НДСПоВидамДоговоров.ТекущаяСтраница, Страницы);

	// Установить доступность формы с учетом даты запрета редактирования	
	РаботаСДиалогами.УстановитьДоступностьФормыДляРедактирования(ЭтотОбъект, ЭтаФорма);
	
	УстановитьВидимость();
	
	мТекущаяОрганизация = Организация;
	
	РаботаСДиалогами.ИзменитьПредставлениеКнопкиВыбораСвойств(ЭтаФорма, РаботаСДиалогами.ПолучитьОписаниеЗначенийСвойствОбъекта(Ссылка));

КонецПроцедуры

// Процедура - обработчик события "ПриЗакрытии" формы.
//
Процедура ПриЗакрытии()
				
	ОбщегоНазначения.ОткрытьЖурналДокумента(ЭтаФорма);

КонецПроцедуры //ПриЗакрытии

// Процедура - обработчик события "ОбработкаОповещения" формы.
//
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновлениеЗначенийСвойств" И Источник = Ссылка Тогда
		РаботаСДиалогами.ИзменитьПредставлениеКнопкиВыбораСвойств(ЭтаФорма, Параметр);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда

		Предупреждение("Не указана организация. Операция не записана.");

		Отказ = Истина;

		ТекущийЭлемент = ЭлементыФормы.Организация;

		Возврат;

	КонецЕсли;

КонецПроцедуры

Процедура ПослеЗаписи()

	// Установка кнопок печати
	УстановитьКнопкиПечати();
	
	// Вывести в заголовке формы вид операции и статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю1, ЭлементыФормы.Номер);

КонецПроцедуры

Процедура ОбновлениеОтображения()
	
	СтраницаПанели  = ЭлементыФормы.НДСПоВидамДоговоров.Страницы;
	
	СтраницаПанели.ПоДоговорамНалоговогоАгента.Заголовок = "По договорам налогового агента ("   + ДокументОбъект.ОплатаПоДоговорамНалоговогоАгента.Количество() + " поз.)";
	СтраницаПанели.ДляСобственногоПотребления.Заголовок = "Для собственного потребления (" + ДокументОбъект.ОплатаДляСобственногоПотребления.Количество() + " поз.)";
	
	ОбновитьПодвал();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ ДЕЙСТВИЙ КОМАНДНОЙ ПАНЕЛИ 


// Процедура вызова структуры подчиненности документа
//
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
	
КонецПроцедуры

Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)
	
	РаботаСДиалогами.НапечататьДвиженияДокумента(Ссылка);
	
КонецПроцедуры

Процедура ДействияФормыЗаполнитьДокумент(Кнопка)
	
	Если Ссылка.Проведен Тогда
		Ответ = Вопрос("Проведенный документ не может быть заполнен автоматически. Отменить проведение документа для заполнения?", РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Нет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ОплатаПоДоговорамНалоговогоАгента.Количество() > 0 
		или ОплатаДляСобственногоПотребления.Количество() >0
		Тогда
		ОтветНаВопрос = Вопрос("Заполненные ранее табличные поля документа будут очищены. Продолжить?", РежимДиалогаВопрос.ДаНет);
		Если ОтветНаВопрос = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьДокумент(, , , Ссылка.Проведен И Ответ = КодВозвратаДиалога.Да);
	// Установка текущей страницы
	Страницы = Новый СписокЗначений;
	Страницы.Добавить("ПоДоговорамНалоговогоАгента",	"ОплатаПоДоговорамНалоговогоАгента");
	Страницы.Добавить("ДляСобственногоПотребления",		"ОплатаДляСобственногоПотребления");
	РаботаСДиалогами.УстановкаТекущейСтраницы(ЭтотОбъект, ЭлементыФормы.НДСПоВидамДоговоров, Страницы,);

	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура разрешения/запрещения редактирования номера документа
Процедура ДействияФормыРедактироватьНомер(Кнопка)
	
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю1, ЭлементыФормы.Номер);
			
КонецПроцедуры

Процедура КоманднаяПанельПоДоговорамНалоговогоАгентаЗаполнить(Кнопка)
	
	Если Ссылка.Проведен Тогда
		Ответ = Вопрос("Проведенный документ не может быть заполнен автоматически. Отменить проведение документа для заполнения?", РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Нет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ОплатаПоДоговорамНалоговогоАгента.Количество() > 0 Тогда
		ОтветНаВопрос = Вопрос("Табличное поле будет очищено. Продолжить?", РежимДиалогаВопрос.ДаНет);
		Если ОтветНаВопрос = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьТабличнуюЧастьПоДоговорамНалоговогоАгента(Ссылка.Проведен И Ответ = КодВозвратаДиалога.Да);
	
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

Процедура КоманднаяПанельПоДоговорамСобственногоПотребленияЗаполнить(Кнопка)
	
	Если Ссылка.Проведен Тогда
		Ответ = Вопрос("Проведенный документ не может быть заполнен автоматически. Отменить проведение документа для заполнения?", РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Нет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ОплатаДляСобственногоПотребления.Количество() > 0 Тогда
		ОтветНаВопрос = Вопрос("Табличное поле будет очищено. Продолжить?", РежимДиалогаВопрос.ДаНет);
		Если ОтветНаВопрос = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьТабличнуюЧастьДляСобственногоПотребления(Ссылка.Проведен И Ответ = КодВозвратаДиалога.Да);
	
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ОсновныеДействияФормыНастройка(Кнопка)

	ОбщегоНазначения.РучнаяКорректировкаОсновнаяФорма(ЭтоНовый(),Ссылка,ЭтотОбъект);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНЫХ ЧАСТЕЙ
 
// Процедура - обработчик события "НачалоВыбора" поля ввода ДокументОплаты
//
Процедура ОплатаПоДоговорамНалоговогоАгентаДокументОплатыНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтрокаТабличнойЧасти = ЭлементыФормы.ОплатаПоДоговорамНалоговогоАгента.ТекущиеДанные;
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Организация", Организация);
	
	РаботаСДиалогами.НачалоВыбораЗначенияДокументаСоставногоТипа(ЭтотОбъект, ЭтаФорма, Элемент, СтандартнаяОбработка, СтруктураОтбора, "ОплатаПоДоговорамНалоговогоАгента");

КонецПроцедуры

// Процедура - обработчик события "НачалоВыбора" поля ввода СчетФактура
//
Процедура ОплатаПоДоговорамНалоговогоАгентаСчетФактураНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтрокаТабличнойЧасти = ЭлементыФормы.ОплатаПоДоговорамНалоговогоАгента.ТекущиеДанные;

	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Организация", Организация);
	
	РаботаСДиалогами.НачалоВыбораЗначенияДокументаСоставногоТипа(ЭтотОбъект, ЭтаФорма, Элемент, СтандартнаяОбработка, СтруктураОтбора, "ОплатаПоДоговорамНалоговогоАгента");
	
КонецПроцедуры

// Процедура - обработчик события "ОбработкаВыбора" поля ввода ДокументОплаты
//
Процедура ОплатаПоДоговорамНалоговогоАгентаДокументОплатыОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("ДокументСсылка.СписаниеСРасчетногоСчета") Тогда
		Если ВыбранноеЗначение.ВидОперации <> Перечисления.ВидыОперацийСписаниеДенежныхСредств.ПеречислениеНалога Тогда
			Сообщить("В документе можно выбирать документы оплаты с операцией ""перечисление налога""", СтатусСообщения.Важное);
			СтандартнаяОбработка = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОплатаПоДоговорамНалоговогоАгентаСуммаБезНДСПриИзменении(Элемент)
	
	Если ЭлементыФормы.ОплатаПоДоговорамНалоговогоАгента.ТекущиеДанные <> Неопределено Тогда
		РассчитатьСуммуНДССтроки(ЭлементыФормы.ОплатаПоДоговорамНалоговогоАгента.ТекущиеДанные);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОплатаПоДоговорамНалоговогоАгентаСтавкаНДСПриИзменении(Элемент)
	
	Если ЭлементыФормы.ОплатаПоДоговорамНалоговогоАгента.ТекущиеДанные <> Неопределено Тогда
		РассчитатьСуммуНДССтроки(ЭлементыФормы.ОплатаПоДоговорамНалоговогоАгента.ТекущиеДанные);
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик события "НачалоВыбора" поля ввода ДокументОплаты
//
Процедура ОплатаДляСобственногоПотребленияДокументОплатыНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтрокаТабличнойЧасти = ЭлементыФормы.ОплатаДляСобственногоПотребления.ТекущиеДанные;
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Организация", Организация);
	
	РаботаСДиалогами.НачалоВыбораЗначенияДокументаСоставногоТипа(ЭтотОбъект, ЭтаФорма, Элемент, СтандартнаяОбработка, СтруктураОтбора, "ОплатаДляСобственногоПотребления");
	
КонецПроцедуры

// Процедура - обработчик события "НачалоВыбора" поля ввода СчетФактура
//
Процедура ОплатаДляСобственногоПотребленияСчетФактураНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтрокаТабличнойЧасти = ЭлементыФормы.ОплатаДляСобственногоПотребления.ТекущиеДанные;

	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Организация", Организация);
	
	РаботаСДиалогами.НачалоВыбораЗначенияДокументаСоставногоТипа(ЭтотОбъект, ЭтаФорма, Элемент, СтандартнаяОбработка, СтруктураОтбора, "ОплатаДляСобственногоПотребления");
	
КонецПроцедуры

// Процедура - обработчик события "ОбработкаВыбора" поля ввода ДокументОплаты
//
Процедура ОплатаДляСобственногоПотребленияДокументОплатыОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("ДокументСсылка.СписаниеСРасчетногоСчета") Тогда
		Если ВыбранноеЗначение.ВидОперации <> Перечисления.ВидыОперацийСписаниеДенежныхСредств.ПеречислениеНалога Тогда
			Сообщить("В документе можно выбирать документы оплаты с операцией ""перечисление налога""", СтатусСообщения.Важное);
			СтандартнаяОбработка = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОплатаДляСобственногоПотребленияСуммаБезНДСПриИзменении(Элемент)
	
	Если ЭлементыФормы.ОплатаДляСобственногоПотребления.ТекущиеДанные <> Неопределено Тогда
		РассчитатьСуммуНДССтроки(ЭлементыФормы.ОплатаДляСобственногоПотребления.ТекущиеДанные);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОплатаДляСобственногоПотребленияСтавкаНДСПриИзменении(Элемент)
	
	Если ЭлементыФормы.ОплатаДляСобственногоПотребления.ТекущиеДанные <> Неопределено Тогда
		РассчитатьСуммуНДССтроки(ЭлементыФормы.ОплатаДляСобственногоПотребления.ТекущиеДанные);
	КонецЕсли;
	
КонецПроцедуры




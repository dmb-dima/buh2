////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

// Хранит текущую дату документа - для проверки перехода документа в другой период установки номера
Перем мТекущаяДатаДокумента; 

// Хранит дерево макетов печатных форм
Перем мДеревоМакетов;

// Хранит элемент управления подменю печати
Перем мПодменюПечати;

// Хранит элемент управления кнопку печать по умолчанию
Перем мПечатьПоУмолчанию;

// Хранит дерево кнопок подменю заполнение ТЧ
Перем мКнопкиЗаполненияТЧ;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ УПРАВЛЕНИЯ ВНЕШНИМ ВИДОМ ФОРМЫ

// Процедура устанавливает подменю "Заполнить" в командных панелях ТЧ документа при необходимости
//
Процедура УстановитьКнопкиПодменюЗаполненияТЧ();
	
	СоответствиеТЧ = Новый Соответствие;
	СоответствиеТЧ.Вставить(ЭлементыФормы.ОС,ЭлементыФормы.КоманднаяПанельОС.Кнопки.ПодменюЗаполнить);
	
	мКнопкиЗаполненияТЧ = УниверсальныеМеханизмы.СформироватьПодменюЗаполненияТЧ(Ссылка, СоответствиеТЧ, Новый Действие("НажатиеНаДополнительнуюКнопкуЗаполненияТЧ"));
	
КонецПроцедуры

// Процедура устанавливает подменю "Печать" и кнопку "Печать по умолчанию" при необходимости
//
Процедура УстановитьКнопкиПечати()
	
	мДеревоМакетов = УниверсальныеМеханизмы.ПолучитьДеревоМакетовПечати(Ссылка, Неопределено, Новый Действие("ОсновныеДействияФормыПечать"), Новый Действие("ОсновныеДействияФормыУстановитьПечатьПоУмолчанию"));

	УниверсальныеМеханизмы.УстановитьПодменюПечати    (мПодменюПечати, ЭлементыФормы.ОсновныеДействияФормы, мДеревоМакетов.Строки.Количество() > 0);
	УниверсальныеМеханизмы.УстановитьПечатьПоУмолчанию(мПечатьПоУмолчанию, ЭлементыФормы.ОсновныеДействияФормы, мДеревоМакетов, Метаданные().Имя,Новый Действие("ОсновныеДействияФормыПечатьПоУмолчанию"));

	Если Не мПодменюПечати = Неопределено Тогда
		УниверсальныеМеханизмы.СформироватьПодменю(мДеревоМакетов, мПодменюПечати,Истина,Истина);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СВОЙСТВ И КАТЕГОРИЙ

// Процедура выполняет открытие формы работы со свойствами документа
//
Процедура ДействияФормыДействиеОткрытьСвойства(Кнопка)

	РаботаСДиалогами.ОткрытьСвойстваДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	// Установка кнопок печати
	УстановитьКнопкиПечати();
	
	// Установка кнопок заполнение ТЧ
	УстановитьКнопкиПодменюЗаполненияТЧ();
	  	
КонецПроцедуры // ПередОткрытием()

// Процедура - обработчик события "ПриОткрытии" формы
//
Процедура ПриОткрытии()

	Если ЭтоНовый() Тогда // проверить объект на то, что он еще не внесен в ИБ

		// Заполнить реквизиты значениями по умолчанию.
		ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, глЗначениеПеременной("глТекущийПользователь"));

		Если СчетРасчетов.Пустая() Тогда
			СчетРасчетов = ПланыСчетов.Хозрасчетный.РасчетыПоВыделенномуИмуществу;
		КонецЕсли;
		
	КонецЕсли;
		
	ЭлементыФормы.ОрганизацияОтправитель.СписокВыбора = ОбщегоНазначения.ПолучитьСписокОбособленныхПодразделений(Организация);
	
	МеханизмНумерацииОбъектов.ДобавитьВМенюДействияКнопкуРедактированияНомера(ЭлементыФормы.ДействияФормы.Кнопки.Подменю);
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Номер);

	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента("", ЭтотОбъект, ЭтаФорма);

	// Установить активный реквизит.
	СтруктураРеквизитов = Новый Структура("Дата,Организация,ДокументОснование,ОрганизацияОтправитель,СчетРасчетов");
	РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма,СтруктураРеквизитов,ЭлементыФормы.ОС);
	
	мТекущаяДатаДокумента = Дата;
	
	// Установить доступность формы с учетом даты запрета редактирования	
	РаботаСДиалогами.УстановитьДоступностьФормыДляРедактирования(ЭтотОбъект, ЭтаФорма);
		
	РаботаСДиалогами.ИзменитьПредставлениеКнопкиВыбораСвойств(ЭтаФорма, РаботаСДиалогами.ПолучитьОписаниеЗначенийСвойствОбъекта(Ссылка));

КонецПроцедуры // ПриОткрытии()

// Процедура - обработчик события "ПриЗакрытии" формы.
//
Процедура ПриЗакрытии()
			
	ОбщегоНазначения.ОткрытьЖурналДокумента(ЭтаФорма);

КонецПроцедуры

// Процедура - обработчик события "ОбработкаОповещения" формы.
//
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновлениеЗначенийСвойств" И Источник = Ссылка Тогда
		РаботаСДиалогами.ИзменитьПредставлениеКнопкиВыбораСвойств(ЭтаФорма, Параметр);
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик события "ПослеЗаписи" формы.
//
Процедура ПослеЗаписи()

	// Установка кнопок печати
	УстановитьКнопкиПечати();

	// Вывести в заголовке формы вид операции и статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);

КонецПроцедуры // ПослеЗаписи()

// Процедура - обработчик события "ОбработкаВыбора" формы.
//
Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)

	Если ЗначениеЗаполнено(ЗначениеВыбора) Тогда

		Если ТипЗнч(ЗначениеВыбора) = Тип("СправочникСсылка.ОсновныеСредства") Тогда

			СтрокаТабличнойЧасти = ОС.Найти(ЗначениеВыбора,"ОсновноеСредство");

			Если СтрокаТабличнойЧасти <> Неопределено Тогда

				Предупреждение("Это основное средство уже подобрано!",60);

			Иначе

				НоваяСтрока = ОС.Добавить();
				НоваяСтрока.ОсновноеСредство = ЗначениеВыбора;

			КонецЕсли;

		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Процедура вызова структуры подчиненности документа
//
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
	
КонецПроцедуры
           

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	РаботаСДиалогами.НапечататьДвиженияДокумента(Ссылка);

КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "По наименованию" из меню "Заполнить"
// командной панели формы. Процедура добавляет в табличную часть основные средства,
// наименование которых совпадает с наименованием текущего выбранного в табличной части ОС
//
Процедура КоманднаяПанельОСЗаполнитьПоДокументуОснованию(Кнопка)
	
	Если ОС.Количество() > 0 Тогда
		
		Ответ = Вопрос("При заполнении табличная часть будет очищена.
		               |Продолжить?", РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Нет);
					   
		Если НЕ (Ответ = КодВозвратаДиалога.Да) Тогда
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ДокументОснование.Пустая() Тогда
		
		ФормаВыбора = Документы.АвизоОСИсходящее.ПолучитьФормуВыбора(, ЭтаФорма);
		Выбор = ФормаВыбора.ОткрытьМодально();
		
		Если Выбор <> Неопределено Тогда
			
			ДокументОснование = Выбор;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ ДокументОснование.Пустая() Тогда
		ЗаполнитьТабличнуюЧастьПоДокументуОснованию(ДокументОснование);
	КонецЕсли;

КонецПроцедуры // КоманднаяПанельОСЗаполнитьПоДокументуОснованию()


// Процедура вызывается при нажании кнопки Подбор командной панели "КоманднаяПанельОС"
//
Процедура КоманднаяПанельОСПодбор(Кнопка)

	ФормаВыбора = Справочники.ОсновныеСредства.ПолучитьФормуВыбора(, ЭтаФорма);

	ФормаВыбора.ЗакрыватьПриВыборе = Ложь;

	ФормаВыбора.Открыть();

КонецПроцедуры // КоманднаяПанельОСПодбор

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ОсновныеДействияФормыНастройка(Кнопка)

	ОбщегоНазначения.РучнаяКорректировкаОсновнаяФорма(ЭтоНовый(),Ссылка,ЭтотОбъект);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

// Процедура - обработчик события "ПриИзменении" поля ввода даты документа.
//
Процедура ДатаПриИзменении(Элемент)

	РаботаСДиалогами.ПроверитьНомерДокумента(ЭтотОбъект, мТекущаяДатаДокумента);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);

	мТекущаяДатаДокумента = Дата; // запомним текущую дату документа для контроля номера документа

КонецПроцедуры // ДатаПриИзменении()

// Процедура - обработчик события "ПриИзменении" поля ввода организации.
//
Процедура ОрганизацияПриИзменении(Элемент)

	Если Не ПустаяСтрока(Номер) Тогда
		МеханизмНумерацииОбъектов.СброситьУстановленныйКодНомерОбъекта(ЭтотОбъект, "Номер", ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	КонецЕсли;
	
	// Выполняем общие действия для всех документов при изменении реквизита Организация.
	ЗаполнениеДокументов.ПриИзмененииЗначенияОрганизации(ЭтотОбъект, глЗначениеПеременной("глТекущийПользователь"));

	Если Не ПустаяСтрока(Номер) Тогда
		МеханизмНумерацииОбъектов.СброситьУстановленныйКодНомерОбъекта(ЭтотОбъект, "Номер", ЭлементыФормы.ДействияФормы.Кнопки.Подменю1, ЭлементыФормы.Номер);
	КонецЕсли;
	
	// Выполняем общие действия для всех документов при изменении реквизита Организация.
	ЗаполнениеДокументов.ПриИзмененииЗначенияОрганизации(ЭтотОбъект, глЗначениеПеременной("глТекущийПользователь"));
	
КонецПроцедуры // ОрганизацияПриИзменении()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТЧ

Процедура ОСВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	Отказ = Истина;
	
	Форма = ДокументОбъект.ПолучитьФорму("ФормаРедактированияСтроки", Элемент, "Документ_АвизоИсходящееОС_ФормаРедактированияСтроки_" + СокрЛП(Элемент.ТекущиеДанные.НомерСтроки));
	
	Форма.ДокументОбъект = ДокументОбъект;
	Форма.ТекущиеДанные  = Элемент.ТекущиеДанные;
	
	Форма.Открыть();
	
КонецПроцедуры

Процедура ОСПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	Отказ = Истина;
	
	Форма = ДокументОбъект.ПолучитьФорму("ФормаРедактированияСтроки", Элемент, "Документ_АвизоИсходящееОС_ФормаРедактированияСтроки_НоваяСтрока");
	
	Форма.ДокументОбъект = ДокументОбъект;
	Форма.ТекущиеДанные  = Элемент.ТекущиеДанные;
	Форма.ЭтоНовый       = Истина;
	Форма.Копирование    = Копирование;
	
	Форма.Открыть();
	
КонецПроцедуры

Процедура ОСПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	
	Форма = ДокументОбъект.ПолучитьФорму("ФормаРедактированияСтроки", Элемент, "Документ_АвизоИсходящееОС_ФормаРедактированияСтроки_" + СокрЛП(Элемент.ТекущиеДанные.НомерСтроки));
	
	Форма.ДокументОбъект = ЭтотОбъект;
	Форма.ТекущиеДанные  = Элемент.ТекущиеДанные;
	
	Форма.Открыть();
	
КонецПроцедуры

Процедура ОСПослеУдаления(Элемент)
	
	мМодифицированаТабличнаяЧасть = Истина;
	
КонецПроцедуры

Процедура ОСПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	мПредыдущееОС = ЭлементыФормы.ОС.ТекущиеДанные.ОсновноеСредство;
	
	Если НоваяСтрока Тогда
		ЗаполнитьЗначенияСвойств(Элемент.ТекущиеДанные, ДокументОбъект.мСтруктураРеквизитовЗаполняемыхПоУмолчанию);		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОСПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	мМодифицированаТабличнаяЧасть = Истина;
	
КонецПроцедуры


Процедура СобытиеОСНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	//Виды событий, рекомендуемые к указанию
	ВидыСобытий = Новый СписокЗначений;
	ВидыСобытий.Добавить(Перечисления.ВидыСобытийОС.ВнутреннееПеремещение);

	УправлениеВнеоборотнымиАктивами.НачалоВыбораЗначенияСобытийОС(Элемент, ВидыСобытий, СтандартнаяОбработка);

КонецПроцедуры

// Процедура - обработчик нажатия на любую из дополнительных кнопок по заполнению ТЧ
//
Процедура НажатиеНаДополнительнуюКнопкуЗаполненияТЧ(Кнопка)
	
	УниверсальныеМеханизмы.ОбработатьНажатиеНаДополнительнуюКнопкуЗаполненияТЧ(мКнопкиЗаполненияТЧ.Строки.Найти(Кнопка.Имя,"Имя",Истина),ЭтотОбъект);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать по умолчанию"
//
Процедура ОсновныеДействияФормыПечатьПоУмолчанию(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать"
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Установить печать по умолчанию"
//
Процедура ОсновныеДействияФормыУстановитьПечатьПоУмолчанию(Кнопка)
	
	Если УниверсальныеМеханизмы.НазначитьКнопкуПечатиПоУмолчанию(мДеревоМакетов, Метаданные().Имя) Тогда
		
		УстановитьКнопкиПечати();
		
	КонецЕсли; 
	
	
КонецПроцедуры

// Процедура разрешения/запрещения редактирования номера документа
Процедура ДействияФормыРедактироватьНомер(Кнопка)
	
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
			
КонецПроцедуры

Процедура ДокументОснованиеПриИзменении(Элемент)
	
	Если НЕ ДокументОснование.Пустая() Тогда
		
		Если ОС.Количество() > 0 Тогда
			
			Ответ = Вопрос("Заполнить табличное поле ""Основные средства"" данными из документа-основания?
			               |Перед заполнением табличная часть будет очищена.
			               |Продолжить?", РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Нет);
						   
			Если НЕ (Ответ = КодВозвратаДиалога.Да) Тогда
				Возврат;
			КонецЕсли;
			
		КонецЕсли;
		
		ОрганизацияОтправитель  = ДокументОснование.Организация;
		СчетРасчетов            = ДокументОснование.СчетРасчетов;
		ДатаВходящегоДокумента  = ДокументОснование.Дата;
		НомерВходящегоДокумента = ДокументОснование.Номер;
		
		Если НЕ ЗначениеЗаполнено(Организация) Тогда
			Организация = ДокументОснование.ОрганизацияПолучатель;
		КонецЕсли;
		
		ЗаполнитьТабличнуюЧастьПоДокументуОснованию(ДокументОснование);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОрганизацияОтправительНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	РаботаСДиалогами.ВыбратьЗначениеПоляВводаИзСписка(
		ЭтаФорма, Элемент, СтандартнаяОбработка, ЭлементыФормы.ОрганизацияОтправитель.СписокВыбора, ОрганизацияОтправитель);
	
КонецПроцедуры

Процедура ОрганизацияОтправительАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	
	РаботаСДиалогами.ОбработатьАвтоПодборТекста(
		Текст, ТекстАвтоПодбора, СтандартнаяОбработка, ЭлементыФормы.ОрганизацияОтправитель.СписокВыбора);
	
КонецПроцедуры

Процедура ОрганизацияОтправительОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	РаботаСДиалогами.ОбработатьОкончаниеВводаТекста(
		Текст, Значение, СтандартнаяОбработка, ЭлементыФормы.ОрганизацияОтправитель.СписокВыбора);
	
КонецПроцедуры




////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

// Соответствие русских букв латинским
Перем СоответствиеСимволов;


// Хранит дерево макетов печатных форм
Перем мДеревоМакетов;

// Хранит элемент управления подменю печати
Перем мПодменюПечати;

// Хранит элемент управления кнопку печать по умолчанию
Перем мПечатьПоУмолчанию;

// Хранит дерево кнопок подменю заполнение ТЧ
Перем мКнопкиЗаполненияТЧ;

// Хранит старое значение физ лица в строке табличной части
Перем мТекущееФизЛицо;

// Хранит ссылку на головную организацию
Перем мГоловнаяОрганизация;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура устанавливает подменю "Перейти" 
//
Процедура УстановитьПодменюПерейти()
	
	// Устанавливаем подменю перейти
	//мСоответствиеДействийПодменюПерейти = Новый Соответствие;
	//УниверсальныеМеханизмы.СформироватьПодменю(УниверсальныеМеханизмы.ПолучитьДеревоПодменюПерейти("Документы", Метаданные().Имя, Новый Действие("ПриНажатииНаКнопкуВПодменюПерейти"), мСоответствиеДействийПодменюПерейти), ЭлементыФормы.ДействияФормы.Кнопки.ПодменюПерейти);
	
КонецПроцедуры

Функция ПолучитьСтрокуНаЛатинском(Знач ИсходныйТекст)
	ИсходныйТекст = СокрЛП(ВРег(ИсходныйТекст));
	ГотовоеЗначение = "";
	ТекущийСимвол = "";
	ТекущийГотовыйСимвол = "";
	Для к = 1 по СтрДлина(ИсходныйТекст) Цикл
		ТекущийСимвол = Сред(ИсходныйТекст, к, 1);
		ТекущийГотовыйСимвол = СоответствиеСимволов.Получить(ТекущийСимвол);
		Если ТекущийГотовыйСимвол = Неопределено Тогда
			ГотовоеЗначение = ГотовоеЗначение + ТекущийСимвол;
		Иначе
			ГотовоеЗначение = ГотовоеЗначение + ТекущийГотовыйСимвол;
		КонецЕсли;
		
	КонецЦикла;
	Возврат ГотовоеЗначение;
КонецФункции // ПолучитьСтрокуНаЛатинском()

// Процедура устанавливает подменю "Печать" и кнопку "Печать по умолчанию" при необходимости
//
Процедура УстановитьКнопкиПечати()
	
	мДеревоМакетов = УниверсальныеМеханизмы.ПолучитьДеревоМакетовПечати(Ссылка, Неопределено, Новый Действие("ОсновныеДействияФормыПечать"), Новый Действие("ОсновныеДействияФормыУстановитьПечатьПоУмолчанию"));

	УниверсальныеМеханизмы.УстановитьПодменюПечати    (мПодменюПечати, ЭлементыФормы.ОсновныеДействияФормы, мДеревоМакетов.Строки.Количество() > 0);
	УниверсальныеМеханизмы.УстановитьПечатьПоУмолчанию(мПечатьПоУмолчанию, ЭлементыФормы.ОсновныеДействияФормы, мДеревоМакетов, Метаданные().Имя,Новый Действие("ОсновныеДействияФормыПечатьПоУмолчанию"));

	Если Не мПодменюПечати = Неопределено Тогда
		УниверсальныеМеханизмы.СформироватьПодменю(мДеревоМакетов, мПодменюПечати,Истина,Истина);
	КонецЕсли;
	
КонецПроцедуры

// Процедура устанавливает подменю "Заполнить" в командных панелях ТЧ документа при необходимости
//
Процедура УстановитьКнопкиПодменюЗаполненияТЧ()
	
	СоответствиеТЧ = Новый Соответствие;
	СоответствиеТЧ.Вставить(ЭлементыФормы.РаботникиОрганизации,ЭлементыФормы.КоманднаяПанель1);
	
	мКнопкиЗаполненияТЧ = УниверсальныеМеханизмы.СформироватьПодменюЗаполненияТЧ(Ссылка, СоответствиеТЧ, Новый Действие("НажатиеНаДополнительнуюКнопкуЗаполненияТЧ"));
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

	// Установка кнопок печати
	УстановитьКнопкиПечати();
	
	// Установка кнопок заполнение ТЧ
	УстановитьКнопкиПодменюЗаполненияТЧ();
	
	// Установка кнопок подменю перейти
	УстановитьПодменюПерейти();

	КоличествоСтрокВВидеВклада = СтрЧислоСтрок(ВидВклада);
	
	Если КоличествоСтрокВВидеВклада > 0 Тогда
		ВидВкладаСтрокой = СтрПолучитьСтроку(ВидВклада, 1);
	КонецЕсли;
	
	Если КоличествоСтрокВВидеВклада > 1 Тогда
		КодВида = СтрПолучитьСтроку(ВидВклада, 2);
	КонецЕсли;
	
	Если КоличествоСтрокВВидеВклада > 2 Тогда
		КодПодВида = СтрПолучитьСтроку(ВидВклада, 3);
	КонецЕсли;
	
	Если КоличествоСтрокВВидеВклада > 3 Тогда
		КодВалюты = СтрПолучитьСтроку(ВидВклада, 4);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	Если ЭтоНовый() Тогда
		// Заполнить реквизиты значениями по умолчанию.
		ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, глЗначениеПеременной("глТекущийПользователь"));
		
	КонецЕсли;
	
		
	// Установить доступность формы с учетом даты запрета редактирования	
	РаботаСДиалогами.УстановитьДоступностьФормыДляРедактирования(ЭтотОбъект, ЭтаФорма);	

	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Номер);
	
	// Установить активный реквизит.
	СтруктураРеквизитов = Новый Структура("Дата,Организация,Банк,БанковскийСчет");
	РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма,СтруктураРеквизитов,ЭлементыФормы.РаботникиОрганизации);
	
	ЭлементыФормы.РаботникиОрганизации.Колонки.НомерЛицевогоСчета.Видимость = ВводНачальныхСведений;
	РаботаСДиалогами.ИзменитьПредставлениеКнопкиВыбораСвойств(ЭтаФорма, РаботаСДиалогами.ПолучитьОписаниеЗначенийСвойствОбъекта(Ссылка));
	
	// Получим и запомним ссылку на головную организацию
	мГоловнаяОрганизация = ОбщегоНазначения.ГоловнаяОрганизация(Организация);
	
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
КонецПроцедуры

Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	
	Если ТипЗнч(ЗначениеВыбора) = Тип("СправочникСсылка.Валюты") Тогда
		КодВалюты = ЗначениеВыбора.Код;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	ВидВклада = ВидВкладаСтрокой + Символы.ПС + КодВида + Символы.ПС + КодПодВида + Символы.ПС + КодВалюты;
	
КонецПроцедуры

// Процедура - обработчик события "ПослеЗаписи" формы.
//
Процедура ПослеЗаписи()
	
	// Установка кнопок печати
	УстановитьКнопкиПечати();
	
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
КонецПроцедуры // ПослеЗаписи()

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновлениеЗначенийСвойств" И Источник = Ссылка Тогда
		РаботаСДиалогами.ИзменитьПредставлениеКнопкиВыбораСвойств(ЭтаФорма, Параметр);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)
	
	РаботаСДиалогами.НапечататьДвиженияДокумента(Ссылка);
	
КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

// Процедура вызова структуры подчиненности документа
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
	
КонецПроцедуры // ДействияФормыСтруктураПодчиненностиДокумента()

// Процедура разрешения/запрещения редактирования номера документа
Процедура ДействияФормыРедактироватьНомер(Кнопка)
	
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	
КонецПроцедуры

// Процедура - обработчик нажатия на любую из дополнительных кнопок по заполнению ТЧ
//
Процедура НажатиеНаДополнительнуюКнопкуЗаполненияТЧ(Кнопка)
	
	УниверсальныеМеханизмы.ОбработатьНажатиеНаДополнительнуюКнопкуЗаполненияТЧ(мКнопкиЗаполненияТЧ.Строки.Найти(Кнопка.Имя,"Имя",Истина),ЭтотОбъект);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать по умолчанию"
//
Процедура ОсновныеДействияФормыПечатьПоУмолчанию(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать"
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Установить печать по умолчанию"
//
Процедура ОсновныеДействияФормыУстановитьПечатьПоУмолчанию(Кнопка)
	
	Если УниверсальныеМеханизмы.НазначитьКнопкуПечатиПоУмолчанию(мДеревоМакетов, Метаданные().Имя) Тогда
		
		УстановитьКнопкиПечати();
		
	КонецЕсли; 
	
КонецПроцедуры

// Процедура - обработчик события нажатия на кн. Показвыать все поля
//
Процедура КоманднаяПанель1ПоказыватьВсеПоля(Кнопка)
	Кнопка.Пометка = Не Кнопка.Пометка;
	
	Если Кнопка.Пометка Тогда
		// устанавливаем видимость полям
		ЭлементыФормы.РаботникиОрганизации.Колонки.Должность.Видимость = Истина;
		ЭлементыФормы.РаботникиОрганизации.Колонки.РабочийТелефон.Видимость = Истина;
		ЭлементыФормы.РаботникиОрганизации.Колонки.ДомашнийТелефон.Видимость = Истина;
		ЭлементыФормы.РаботникиОрганизации.Колонки.Сумма.Видимость = Истина;
		ЭлементыФормы.РаботникиОрганизации.Колонки.ПризнакЗарплатный.Видимость = Истина;
		ЭлементыФормы.РаботникиОрганизации.Колонки.КатегорияНаселения.Видимость = Истина;
		ЭлементыФормы.РаботникиОрганизации.Колонки.БонусУчастника.Видимость = Истина;
		ЭлементыФормы.РаботникиОрганизации.Колонки.ТарифСледующийГод.Видимость = Истина;
		ЭлементыФормы.РаботникиОрганизации.Колонки.ТарифТекущийГод.Видимость = Истина;
		ЭлементыФормы.РаботникиОрганизации.Колонки.БонусПрограмма.Видимость = Истина;
		ЭлементыФормы.РаботникиОрганизации.Колонки.ПризнакРассылки.Видимость = Истина;
		ЭлементыФормы.РаботникиОрганизации.Колонки.ИнтернетАдрес.Видимость = Истина;
		ЭлементыФормы.РаботникиОрганизации.Колонки.СчетДебета.Видимость = Истина;
		ЭлементыФормы.РаботникиОрганизации.Колонки.МобильныйТелефон.Видимость = Истина;
		ЭлементыФормы.РаботникиОрганизации.Колонки.ОператорСвязи.Видимость = Истина;
		ЭлементыФормы.РаботникиОрганизации.Колонки.МобильныйБанк.Видимость = Истина;
		ЭлементыФормы.РаботникиОрганизации.Колонки.ПередачаБКИ.Видимость = Истина;
		ЭлементыФормы.РаботникиОрганизации.Колонки.Резидент.Видимость = Истина;
		ЭлементыФормы.РаботникиОрганизации.Колонки.Гражданство.Видимость = Истина;
		
	Иначе
		// убираем идимость полям
		ЭлементыФормы.РаботникиОрганизации.Колонки.Должность.Видимость = Ложь;
		ЭлементыФормы.РаботникиОрганизации.Колонки.РабочийТелефон.Видимость = Ложь;
		ЭлементыФормы.РаботникиОрганизации.Колонки.ДомашнийТелефон.Видимость = Ложь;
		ЭлементыФормы.РаботникиОрганизации.Колонки.Сумма.Видимость = Ложь;
		ЭлементыФормы.РаботникиОрганизации.Колонки.ПризнакЗарплатный.Видимость = Ложь;
		ЭлементыФормы.РаботникиОрганизации.Колонки.КатегорияНаселения.Видимость = Ложь;
		ЭлементыФормы.РаботникиОрганизации.Колонки.БонусУчастника.Видимость = Ложь;
		ЭлементыФормы.РаботникиОрганизации.Колонки.ТарифСледующийГод.Видимость = Ложь;
		ЭлементыФормы.РаботникиОрганизации.Колонки.ТарифТекущийГод.Видимость = Ложь;
		ЭлементыФормы.РаботникиОрганизации.Колонки.БонусПрограмма.Видимость = Ложь;
		ЭлементыФормы.РаботникиОрганизации.Колонки.ПризнакРассылки.Видимость = Ложь;
		ЭлементыФормы.РаботникиОрганизации.Колонки.ИнтернетАдрес.Видимость = Ложь;
		ЭлементыФормы.РаботникиОрганизации.Колонки.СчетДебета.Видимость = Ложь;
		ЭлементыФормы.РаботникиОрганизации.Колонки.МобильныйТелефон.Видимость = Ложь;
		ЭлементыФормы.РаботникиОрганизации.Колонки.ОператорСвязи.Видимость = Ложь;
		ЭлементыФормы.РаботникиОрганизации.Колонки.МобильныйБанк.Видимость = Ложь;
		ЭлементыФормы.РаботникиОрганизации.Колонки.ПередачаБКИ.Видимость = Ложь;
		ЭлементыФормы.РаботникиОрганизации.Колонки.Резидент.Видимость = Ложь;
		ЭлементыФормы.РаботникиОрганизации.Колонки.Гражданство.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры // КоманднаяПанель1ПоказыватьВсеПоля()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СВОЙСТВ И КАТЕГОРИЙ

// Процедура выполняет открытие формы работы со свойствами документа
//
Процедура ДействияФормыДействиеОткрытьСвойства(Кнопка)

	РаботаСДиалогами.ОткрытьСвойстваДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

Процедура ВводНачальныхСведенийПриИзменении(Элемент)
	
	ЭлементыФормы.РаботникиОрганизации.Колонки.НомерЛицевогоСчета.Видимость = ВводНачальныхСведений;
	
КонецПроцедуры

Процедура ОрганизацияПриИзменении(Элемент)
	Если Не ПустаяСтрока(Номер) Тогда
		МеханизмНумерацииОбъектов.СброситьУстановленныйКодНомерОбъекта(ЭтотОбъект, "Номер", ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	КонецЕсли;
	
	// Получим и запомним ссылку на головную организацию
	мГоловнаяОрганизация = ОбщегоНазначения.ГоловнаяОрганизация(Организация);
КонецПроцедуры

Процедура КодВалютыНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Справочники.Валюты.ПолучитьФормуВыбора(, ЭтаФорма).Открыть();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ РаботникиОрганизации

Процедура РаботникиОрганизацииПередНачаломИзменения(Элемент, Отказ)
	
	ТекущиеДанныеСтроки = Элемент.ТекущиеДанные;
	
	Если ТекущиеДанныеСтроки <> Неопределено Тогда
		мТекущееФизЛицо = ТекущиеДанныеСтроки.ФизЛицо;
	КонецЕсли;
	
КонецПроцедуры

Процедура РаботникиОрганизацииПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	мТекущееФизЛицо = Неопределено;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТАБЛИЧНОГО ПОЛЯ РаботникиОрганизации

Процедура РаботникиОрганизацииФизЛицоПриИзменении(Элемент)
	
	ЗаполнитьЭмбоссированныйТекст(ЭлементыФормы.РаботникиОрганизации.ТекущиеДанные);
		
КонецПроцедуры

Процедура ЗаполнитьЭмбоссированныйТекст(ДанныеТекущегоРаботникаОрганизации)
	
	ЗаполнятьЭмбосированныйТекст = Ложь;
	
	Если ДанныеТекущегоРаботникаОрганизации <> Неопределено Тогда
		
		Если ПустаяСтрока(ДанныеТекущегоРаботникаОрганизации.ЭмбоссированныйТекст1) Тогда
			ЗаполнятьЭмбосированныйТекст = Истина;
			
		Иначе
			Если ДанныеТекущегоРаботникаОрганизации.ФизЛицо <> Неопределено Тогда
				СрезФИО = РегистрыСведений.ФИОФизЛиц.СрезПоследних(ТекущаяДата(), Новый Структура("ФизЛицо", ДанныеТекущегоРаботникаОрганизации.ФизЛицо));
				Если СрезФИО.Количество() > 0 Тогда
					Если (ДанныеТекущегоРаботникаОрганизации.ЭмбоссированныйТекст1 <> ПолучитьСтрокуНаЛатинском(СрезФИО[0].Имя))
					   ИЛИ (ДанныеТекущегоРаботникаОрганизации.ЭмбоссированныйТекст2 <> ПолучитьСтрокуНаЛатинском(СрезФИО[0].Фамилия)) Тогда
						ЗаполнятьЭмбосированныйТекст = Истина;
						
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗаполнятьЭмбосированныйТекст Тогда
		
		СрезФИО = РегистрыСведений.ФИОФизЛиц.СрезПоследних(ТекущаяДата(), Новый Структура("ФизЛицо", ДанныеТекущегоРаботникаОрганизации.ФизЛицо));
		Если СрезФИО.Количество() > 0 Тогда
			ДанныеТекущегоРаботникаОрганизации.ЭмбоссированныйТекст1 = ПолучитьСтрокуНаЛатинском(СрезФИО[0].Имя);
			ДанныеТекущегоРаботникаОрганизации.ЭмбоссированныйТекст2 = ПолучитьСтрокуНаЛатинском(СрезФИО[0].Фамилия);
			Если ДанныеТекущегоРаботникаОрганизации.ФизЛицо.Пол = Перечисления.ПолФизическихЛиц.Женский Тогда
				ДанныеТекущегоРаботникаОрганизации.ЭмбоссированныйТекст3 = "MRS";
			Иначе 
				ДанныеТекущегоРаботникаОрганизации.ЭмбоссированныйТекст3 = "MR";
			КонецЕсли;	
				
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры //ЗаполнитьЭмбоссированныйТекст()

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ


СоответствиеСимволов = Новый Соответствие;
СоответствиеСимволов.Вставить("А", "A");
СоответствиеСимволов.Вставить("Б", "B");
СоответствиеСимволов.Вставить("В", "V");
СоответствиеСимволов.Вставить("Г", "G");
СоответствиеСимволов.Вставить("Д", "D");
СоответствиеСимволов.Вставить("Е", "E");
СоответствиеСимволов.Вставить("Ё", "E");
СоответствиеСимволов.Вставить("Ж", "ZH");
СоответствиеСимволов.Вставить("З", "Z");
СоответствиеСимволов.Вставить("И", "I");
СоответствиеСимволов.Вставить("Й", "Y");
СоответствиеСимволов.Вставить("К", "K");
СоответствиеСимволов.Вставить("Л", "L");
СоответствиеСимволов.Вставить("М", "M");
СоответствиеСимволов.Вставить("Н", "N");
СоответствиеСимволов.Вставить("О", "O");
СоответствиеСимволов.Вставить("П", "P");
СоответствиеСимволов.Вставить("Р", "R");
СоответствиеСимволов.Вставить("С", "S");
СоответствиеСимволов.Вставить("Т", "T");
СоответствиеСимволов.Вставить("У", "U");
СоответствиеСимволов.Вставить("Ф", "F");
СоответствиеСимволов.Вставить("Х", "KH");
СоответствиеСимволов.Вставить("Ц", "TS");
СоответствиеСимволов.Вставить("Ч", "CH");
СоответствиеСимволов.Вставить("Ш", "SH");
СоответствиеСимволов.Вставить("Щ", "SHCH");
СоответствиеСимволов.Вставить("Ъ", "");
СоответствиеСимволов.Вставить("Ы", "Y");
СоответствиеСимволов.Вставить("Ь", "");
СоответствиеСимволов.Вставить("Э", "E");
СоответствиеСимволов.Вставить("Ю", "YU");
СоответствиеСимволов.Вставить("Я", "YA");

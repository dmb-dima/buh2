////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

// Хранит дерево макетов печатных форм
Перем мДеревоМакетов;

// Хранит элемент управления подменю печати
Перем мПодменюПечати;

// Хранит элемент управления кнопку печать по умолчанию
Перем мПечатьПоУмолчанию;

// Хранит дерево кнопок подменю заполнение ТЧ
Перем мКнопкиЗаполненияТЧ;

// Хранит текущую дату документа - для проверки перехода документа в другой период установки номера
Перем мТекущаяДатаДокумента;

Перем ОткрыватьНастройкуДвижений;

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура устанавливает подменю "Заполнить" в командных панелях ТЧ документа при необходимости
//
Процедура УстановитьКнопкиПодменюЗаполненияТЧ();
	
	СоответствиеТЧ = Новый Соответствие;
	СоответствиеТЧ.Вставить(ЭлементыФормы.Состав,ЭлементыФормы.КоманднаяПанель1.Кнопки.ПодменюЗаполнить);
	
	мКнопкиЗаполненияТЧ = УниверсальныеМеханизмы.СформироватьПодменюЗаполненияТЧ(Ссылка, СоответствиеТЧ, Новый Действие("НажатиеНаДополнительнуюКнопкуЗаполненияТЧ"));
	
КонецПроцедуры

// Процедура устанавливает подменю "Печать" и кнопку "Печать по умолчанию" при необходимости
//
Процедура УстановитьКнопкиПечати()
	
	мДеревоМакетов = УниверсальныеМеханизмы.ПолучитьДеревоМакетовПечати(Ссылка, Неопределено, Новый Действие("ОсновныеДействияФормыПечать"), Новый Действие("ОсновныеДействияФормыУстановитьПечатьПоУмолчанию"));

	УниверсальныеМеханизмы.УстановитьПодменюПечати    (мПодменюПечати, ЭлементыФормы.ОсновныеДействияФормы, мДеревоМакетов.Строки.Количество() > 0);
	УниверсальныеМеханизмы.УстановитьПечатьПоУмолчанию(мПечатьПоУмолчанию, ЭлементыФормы.ОсновныеДействияФормы, мДеревоМакетов, Метаданные().Имя,Новый Действие("ОсновныеДействияФормыПечатьПоУмолчанию"));

	Если Не мПодменюПечати = Неопределено Тогда
		УниверсальныеМеханизмы.СформироватьПодменю(мДеревоМакетов, мПодменюПечати,Истина,Истина);
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать по умолчанию"
//
Процедура ОсновныеДействияФормыПечатьПоУмолчанию(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать"
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Установить печать по умолчанию"
//
Процедура ОсновныеДействияФормыУстановитьПечатьПоУмолчанию(Кнопка)
	
	Если УниверсальныеМеханизмы.НазначитьКнопкуПечатиПоУмолчанию(мДеревоМакетов, Метаданные().Имя) Тогда
		
		УстановитьКнопкиПечати();
		
	КонецЕсли; 
	
	
КонецПроцедуры

Процедура УстановитьПризнакДопЛистаДляСтрокДокумента()

	Если Дата < '20060530' Тогда
		// До вступления в силу 283-ФЗ записи в доп.листе не отражались
		Возврат;
	КонецЕсли; 
	
	НДСНалоговыйПериод = УчетНДС.ПолучитьУПНДСНалоговыйПериод(Организация, Дата);
	
	НачалоНалоговогоПериода = ?(НДСНалоговыйПериод = Перечисления.Периодичность.Квартал,НачалоКвартала(Дата),НачалоМесяца(Дата));
	
	Для каждого СтрокаВосстановления Из Состав Цикл
		ДатаСФ = СтрокаВосстановления.СчетФактура.Дата;
		Если ДатаСФ < '20060101' Тогда
			КорректируемыйПериод = ?(СтрокаВосстановления.ДатаОплаты = '00010101', '00010101', 
														Макс(ДатаСФ, СтрокаВосстановления.ДатаОплаты));
		Иначе										
			КорректируемыйПериод = ДатаСФ;
		КонецЕсли;

		Если (НачалоНалоговогоПериода > НачалоМесяца(КорректируемыйПериод)) Тогда
			СтрокаВосстановления.ЗаписьДополнительногоЛиста = Истина;
			СтрокаВосстановления.КорректируемыйПериод = КорректируемыйПериод;
		КонецЕсли; 
	КонецЦикла;
	

КонецПроцедуры

Процедура СнятьПризнакДопЛистаДляСтрокДокумента()

	Для каждого СтрокаВосстановления Из Состав Цикл
		Если СтрокаВосстановления.ЗаписьДополнительногоЛиста Тогда
			СтрокаВосстановления.ЗаписьДополнительногоЛиста = Ложь;
			СтрокаВосстановления.КорректируемыйПериод = Неопределено;
		КонецЕсли; 
	КонецЦикла; 

КонецПроцедуры

Процедура УстановитьДоступность();
	
	Для Каждого КнопкаЗаполнить Из ЭлементыФормы.КоманднаяПанель1.Кнопки.ПодменюЗаполнить.Кнопки Цикл
		КнопкаЗаполнить.Доступность = Не ТолькоПросмотр;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбновитьПодвал()
	
	ЭлементыФормы.СуммаБезНДС1.Значение = ОбщегоНазначения.ФорматСумм(Состав.Итог("СуммаБезНДС"));
	ЭлементыФормы.НДС1.Значение = ОбщегоНазначения.ФорматСумм(Состав.Итог("НДС"));
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ УПРАВЛЕНИЯ ВНЕШНИМ ВИДОМ ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СВОЙСТВ И КАТЕГОРИЙ

// Процедура выполняет открытие формы работы со свойствами документа
//
Процедура ДействияФормыДействиеОткрытьСвойства(Кнопка)

	РаботаСДиалогами.ОткрытьСвойстваДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	// Установка кнопок печати
	УстановитьКнопкиПечати();
	
	// Установка кнопок заполнение ТЧ
	УстановитьКнопкиПодменюЗаполненияТЧ();
	     	
КонецПроцедуры // ПередОткрытием()

Процедура ПриОткрытии()

	Если ЭтоНовый() Тогда // проверить объект на то, что он еще не внесен в ИБ

		// Заполнить реквизиты значениями по умолчанию.
		ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, глЗначениеПеременной("глТекущийПользователь"), , "Продажа");
	КонецЕсли;
	
	МеханизмНумерацииОбъектов.ДобавитьВМенюДействияКнопкуРедактированияНомера(ЭлементыФормы.ДействияФормы.Кнопки.Подменю);
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Номер);
	
	ОткрыватьНастройкуДвижений = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ПоказыватьДвиженияПриПроведении");

	// Вывести в заголовке формы вид операции.
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	
	мТекущаяДатаДокумента = Дата;
	
	// Установить доступность формы с учетом даты запрета редактирования	
	РаботаСДиалогами.УстановитьДоступностьФормыДляРедактирования(ЭтотОбъект, ЭтаФорма);
	
	УстановитьДоступность();
	
	// Установить активный реквизит.
	РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма,,ЭлементыФормы.Состав);
	
	РаботаСДиалогами.ИзменитьПредставлениеКнопкиВыбораСвойств(ЭтаФорма, РаботаСДиалогами.ПолучитьОписаниеЗначенийСвойствОбъекта(Ссылка));

КонецПроцедуры

// Процедура - обработчик события "ОбработкаОповещения" формы.
//
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновлениеЗначенийСвойств" И Источник = Ссылка Тогда
		РаботаСДиалогами.ИзменитьПредставлениеКнопкиВыбораСвойств(ЭтаФорма, Параметр);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПослеЗаписи()

	// Установка кнопок печати
	УстановитьКнопкиПечати();

	// Вывести в заголовке формы вид операции и статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	
	//Открыть настройку движений
	ОбщегоНазначения.РучнаяКорректировкаОсновнаяФормаПослеЗаписи(ЭтотОбъект.Проведен,ОткрыватьНастройкуДвижений,Ссылка,ЭтотОбъект);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	Если НЕ ЗначениеЗаполнено(Организация) Тогда

		Предупреждение("Не указана организация. Операция не записана.");

		Отказ = Истина;

		ТекущийЭлемент = ЭлементыФормы.Организация;

		Возврат;

	КонецЕсли;

КонецПроцедуры

Процедура ОбновлениеОтображения()
	
	ОбновитьПодвал();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Процедура вызова структуры подчиненности документа
//
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
	
КонецПроцедуры
              

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ОсновныеДействияФормыНастройка(Кнопка)
	
	ОбщегоНазначения.РучнаяКорректировкаОсновнаяФорма(ЭтоНовый(),Ссылка,ЭтотОбъект);
	
КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

Процедура КоманднаяПанельЗаполнить(Кнопка)
	
	Если Ссылка.Проведен Тогда
		Ответ = Вопрос("Проведенный документ не может быть заполнен автоматически. Отменить проведение документа для заполнения?", РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Нет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если Состав.Количество() > 0 Тогда
		ОтветНаВопрос = Вопрос("Табличное поле будет очищено. Продолжить?", РежимДиалогаВопрос.ДаНет);
		Если ОтветНаВопрос = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьДокумент(, , , Ссылка.Проведен И Ответ = КодВозвратаДиалога.Да);
	
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

Процедура КоманднаяПанель1УстановитьПризнакДопЛиста(Кнопка)
	
	УстановитьПризнакДопЛистаДляСтрокДокумента();
	
КонецПроцедуры

Процедура КоманднаяПанель1СнятьПризнакДопЛиста(Кнопка)
	
	СнятьПризнакДопЛистаДляСтрокДокумента();
	
КонецПроцедуры

// Процедура - обработчик нажатия на любую из дополнительных кнопок по заполнению ТЧ
//
Процедура НажатиеНаДополнительнуюКнопкуЗаполненияТЧ(Кнопка)
	
	УниверсальныеМеханизмы.ОбработатьНажатиеНаДополнительнуюКнопкуЗаполненияТЧ(мКнопкиЗаполненияТЧ.Строки.Найти(Кнопка.Имя,"Имя",Истина),ЭтотОбъект);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

// Процедура - обработчик события "ПриИзменении" поля ввода организации.
//
Процедура ОрганизацияПриИзменении(Элемент)

	Если Не ПустаяСтрока(Номер) Тогда
		МеханизмНумерацииОбъектов.СброситьУстановленныйКодНомерОбъекта(ЭтотОбъект, "Номер", ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	КонецЕсли;

КонецПроцедуры // ОрганизацияПриИзменении()

// Процедура - обработчик события "ПриИзменении" поля дата 
// в диалоге документа.
//
Процедура ДатаПриИзменении(Элемент)
	
	РаботаСДиалогами.ПроверитьНомерДокумента(ЭтотОбъект, мТекущаяДатаДокумента);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	мТекущаяДатаДокумента = Дата; // запомним текущую дату документа для контроля номера документа
	УстановитьВремя(РежимАвтоВремя.Последним);
	
КонецПроцедуры

Процедура ОтразитьВКнигеПродажПриИзменении(Элемент)
	
	Если (Состав.Найти(ОтразитьВКнигеПродаж,"ЗаписьДополнительногоЛиста") = Неопределено) Тогда
		// Все строки отражаются: 
		//  - для книги продаж в основном разделе,
		//  - для книги покупок в дополнительном разделе.
		// Обработка ТЧ не требуется
		Возврат;
	Иначе
		Если ОтразитьВКнигеПродаж Тогда
			Если Вопрос("При отражении восстановления НДС в книге продаж рекомендуется формировать записи в основном разделе книги.
				|Установить для всех строк документа признак отражения в основном разделе?", РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Да) = КодВозвратаДиалога.Да  Тогда
			    СнятьПризнакДопЛистаДляСтрокДокумента();
			КонецЕсли; 
		Иначе
			Если Вопрос("При отражении восстановления НДС в книге покупок рекомендуется формировать записи в дополнительных листах книги.
				|Установить для строк документа признак отражения в дополнительном листе 
				|(при восстановлении записей книги предыдущих налоговых периодов)?", РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Да) = КодВозвратаДиалога.Да  Тогда
			    УстановитьПризнакДопЛистаДляСтрокДокумента();
			КонецЕсли; 
		КонецЕсли; 
		
	КонецЕсли; 

	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТАБЛИЧНОГО ПОЛЯ "СОСТАВ"

Процедура СоставСчетФактураНачалоВыбора(Элемент, СтандартнаяОбработка)
		
	ТД = ЭлементыФормы.Состав.ТекущиеДанные;
	Если ТД = Неопределено тогда
		Возврат;
	КонецЕсли;
	СтандартнаяОбработка = Ложь;
	
	Отбор = Новый Структура("Организация,Контрагент", Организация,ТД.Поставщик);
	РаботаСДиалогами.НачалоВыбораЗначенияДокументаСоставногоТипа(ЭтотОбъект, ЭтаФорма, Элемент, СтандартнаяОбработка, Отбор, "Состав");

КонецПроцедуры

Процедура СоставДокументОплатыНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ТД = ЭлементыФормы.Состав.ТекущиеДанные;
	Если ТД = Неопределено тогда
		Возврат;
	КонецЕсли;
	СтандартнаяОбработка = Ложь;
	
	Отбор = Новый Структура("Организация,Контрагент", Организация,ТД.Поставщик);
	РаботаСДиалогами.НачалоВыбораЗначенияДокументаСоставногоТипа(ЭтотОбъект, ЭтаФорма, Элемент, СтандартнаяОбработка, Отбор, "Состав");
	
КонецПроцедуры

Процедура СоставСтавкаНДСПриИзменении(Элемент)
	
	ЭлементыФормы.Состав.ТекущиеДанные.НДС = УчетНДС.РассчитатьСуммуНДС(ЭлементыФормы.Состав.ТекущиеДанные.СуммаБезНДС, Истина, Ложь, УчетНДС.ПолучитьСтавкуНДС(ЭлементыФормы.Состав.ТекущиеДанные.СтавкаНДС));

КонецПроцедуры

Процедура СоставСуммаБезНДСПриИзменении(Элемент)
	
	ЭлементыФормы.Состав.ТекущиеДанные.НДС = УчетНДС.РассчитатьСуммуНДС(ЭлементыФормы.Состав.ТекущиеДанные.СуммаБезНДС, Истина, Ложь, УчетНДС.ПолучитьСтавкуНДС(ЭлементыФормы.Состав.ТекущиеДанные.СтавкаНДС));

КонецПроцедуры

// Процедура разрешения/запрещения редактирования номера документа
Процедура ДействияФормыРедактироватьНомер(Кнопка)
	
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
			
КонецПроцедуры

// Процедура - обработчик события "ПриЗакрытии" формы.
//
Процедура ПриЗакрытии()
			
	ОбщегоНазначения.ОткрытьЖурналДокумента(ЭтаФорма);

КонецПроцедуры

Процедура СоставПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	ОформлениеСтроки.Ячейки.КорректируемыйПериод.ОтметкаНезаполненного = (ДанныеСтроки.ЗаписьДополнительногоЛиста и НЕ ЗначениеЗаполнено(ДанныеСтроки.КорректируемыйПериод));
КонецПроцедуры
////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ




////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Если Клиент Тогда

Функция ПечатьСправки()
	
	СтруктураДанныхНА = СправкиПоНДФЛ.ДанныеНалоговогоАгентаДля2НДФЛ(Организация, НалоговыйПериод, ОКАТО_КПП, Дата, Телефон, ДолжностьПодписавшегоЛица, СправкуПодписал);
	СтруктураДанныхНА.Признак = ?(СпособФормирования = Перечисления.ПорядокФормированияСправкиОДоходахФизлица.ФизлицуСводно,"СводнаяСправка","");
	
	ТаблицаДанныхСотрудников = Новый ТаблицаЗначений;
	Для каждого Реквизит Из Метаданные.Документы.СправкаПоНДФЛВНалоговыйОрган.ТабличныеЧасти.СотрудникиОрганизации.Реквизиты Цикл
		Если Реквизит.Имя = "НомерСправки" Тогда // номер справки в этом документе - строковый
			Продолжить;
		КонецЕсли;
		ТаблицаДанныхСотрудников.Колонки.Добавить(Реквизит.Имя,Реквизит.Тип);
	КонецЦикла;
	ТаблицаДанныхСотрудников.Колонки.Добавить("НомерСправки", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(11)));
	СтрокаДанных = ТаблицаДанныхСотрудников.Добавить();
	ЗаполнитьЗначенияСвойств(СтрокаДанных,ЭтотОбъект);
	СтрокаДанных.НомерСправки = ОбщегоНазначения.ПолучитьНомерНаПечать(ЭтотОбъект);
	
	ТаблицаДанныхОДоходах = СведенияОДоходах.Выгрузить();
	ТаблицаДанныхОДоходах.Колонки.Добавить("НомерСправки", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(11)));
	ТаблицаДанныхОДоходах.ЗаполнитьЗначения(СтрокаДанных.НомерСправки,"НомерСправки");
	
	ТаблицаДанныхОВычетах = СведенияОВычетах.Выгрузить();
	ТаблицаДанныхОВычетах.Колонки.Добавить("НомерСправки", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(11)));
	ТаблицаДанныхОВычетах.ЗаполнитьЗначения(СтрокаДанных.НомерСправки,"НомерСправки");
	
	Возврат СправкиПоНДФЛ.ПечатьСправок2НДФЛ(Ссылка, СтруктураДанныхНА, ТаблицаДанныхСотрудников, ТаблицаДанныхОДоходах, ТаблицаДанныхОВычетах)	

КонецФункции // ПечатьСправки()
	
	
// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходимое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Функция Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь, НепосредственнаяПечать = Ложь) Экспорт
	
	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат Неопределено;
	КонецЕсли;
		
	ТабДокумент = Неопределено;
	
	// Получить экземпляр документа на печать
	Если ИмяМакета = "Справка" Тогда
		ТабДокумент = ПечатьСправки();
	КонецЕсли;

	
	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект,"Справка о доходах (2-НДФЛ) "));
	
	Возврат Неопределено;
КонецФункции // Печать

#КонецЕсли

Процедура ЗаполнитьРеквизитыЗначениямиПоУмолчанию() Экспорт
	
	ЗаполнениеДокументовПереопределяемый.ЗаполнитьШапкуДокумента(ЭтотОбъект, глЗначениеПеременной("глТекущийПользователь"));
	
	Если НЕ ЗначениеЗаполнено(Дата) Тогда
		Дата = ОбщегоНазначения.ПолучитьРабочуюДату();
	КонецЕсли;
	
	Если НалоговыйПериод = 0 Тогда 
		НалоговыйПериод = Макс(Год(Дата) - ?(Месяц(Дата) = 1, 1, 0), 2010);
		Если ЗначениеЗаполнено(Организация) Тогда
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, СправкиПоНДФЛ.ДанныеПодписывающихЛиц(Организация, Дата));
		КонецЕсли;
		СпособФормирования = Перечисления.ПорядокФормированияСправкиОДоходахФизлица.ФизлицуВРазрезеКодовОКАТО;
		Ставка = Перечисления.НДФЛСтавки.Ставка13;
	КонецЕсли;
	
КонецПроцедуры

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	СтруктураПечатныхФорм = Новый Структура("Справка", "2-НДФЛ");
	
	Возврат СтруктураПечатныхФорм;

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НалоговыйПериод = 0 Тогда // документ без налогового периода неконсистентен
		НалоговыйПериод = Макс(Год(Дата),2010);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(Основание)
	
	Если ТипЗнч(Основание) = Тип("СправочникСсылка.СотрудникиОрганизаций") Тогда
		
		Дата = ОбщегоНазначения.ПолучитьРабочуюДату();
		
		ДанныеСотрудника = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(Основание, "Физлицо, Организация");
		ЭтотОбъект.Сотрудник = ДанныеСотрудника.Физлицо;
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеСотрудника);
		
		ЗаполнитьРеквизитыЗначениямиПоУмолчанию();
		
		СписокОКАТОиКПП = СправкиПоНДФЛ.СписокОКАТОиКПП(Организация);
		
		ОКАТО_КПП = ?(СписокОКАТОиКПП.Количество() > 0, СписокОКАТОиКПП[0].Значение, "");
		
		СправкиПоНДФЛ.ПрочитатьДанныеСотрудника(ЭтотОбъект, Дата, НалоговыйПериод);
		СправкиПоНДФЛ.ПрочитатьДанныеСправки(ЭтотОбъект, СведенияОДоходах, СведенияОВычетах, НалоговыйПериод, Организация, ОбщегоНазначения.ГоловнаяОрганизация(Организация), ?(СпособФормирования = Перечисления.ПорядокФормированияСправкиОДоходахФизлица.ФизлицуВРазрезеКодовОКАТО, ОКАТО_КПП, Неопределено), КонецМесяца(Дата) + 1)
		
	КонецЕсли;
	
КонецПроцедуры



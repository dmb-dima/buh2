////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем мТаблицаФормОтчета;

// Хранит имя выбранной формы отчета
Перем мВыбраннаяФорма Экспорт;

// Хранит признак скопированной формы.
Перем мСкопированаФорма Экспорт;

// Следующие переменные хранят границы
// периода построения отчета
Перем мДатаНачалаПериодаОтчета Экспорт;
Перем мДатаКонцаПериодаОтчета  Экспорт;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура назначает форму отчета по умолчанию 
//   при изменении периода представления отчета.
// При отсутствии формы, соответствующей выбранному 
//   периоду, по умолчанию выдаем текущую (действующую) форму.
//
// Вызывается из других процедур модуля.
//
Процедура ВыборФормыПоУмолчанию()
	
	Для Каждого Строка Из мТаблицаФормОтчета Цикл
		Если (Строка.ДатаНачалоДействия > КонецДня(мДатаКонцаПериодаОтчета)) ИЛИ
			((Строка.ДатаКонецДействия > '00010101000000') И (Строка.ДатаКонецДействия < НачалоДня(мДатаКонцаПериодаОтчета))) Тогда

			Продолжить;
		КонецЕсли;

		мВыбраннаяФорма = Строка.ФормаОтчета;
		ЭлементыФормы.ОписаниеНормативДок.Значение = Строка.ОписаниеОтчета;

		Возврат;
	КонецЦикла;

	// Если не удалось найти форму, соответствующую выбранному периоду,
	// то по умолчанию выдаем текущую (действующую) форму.
	Если мВыбраннаяФорма = Неопределено Тогда
		мВыбраннаяФорма = мТаблицаФормОтчета[0].ФормаОтчета;
		ЭлементыФормы.ОписаниеНормативДок.Значение = мТаблицаФормОтчета[0].ОписаниеОтчета;
	КонецЕсли;

КонецПроцедуры // ВыборФормыПоУмолчанию()

// Процедура управляет показом в форме периода построения отчета.
//
Процедура ПоказатьПериод()

	СтрПериодОтчета = ПредставлениеПериода( НачалоДня(мДатаНачалаПериодаОтчета), КонецДня(мДатаКонцаПериодаОтчета), "ФП = Истина" );

	// Покажем период в диалоге
	ЭлементыФормы.НадписьПериодСоставленияОтчета.Заголовок = СтрПериодОтчета;

	ВыборФормыПоУмолчанию();

КонецПроцедуры // ПоказатьПериод()

// Процедура устанавливает границы периода построения отчета.
//
// Параметры:
//  Шаг          - число, количество стандартных периодов, на которое необходимо
//                 сдвигать период построения отчета;
//
Процедура ИзменитьПериод(Шаг)

	мДатаКонцаПериодаОтчета  = КонецМесяца(ДобавитьМесяц(мДатаКонцаПериодаОтчета, Шаг));
	мДатаНачалаПериодаОтчета = НачалоМесяца(мДатаКонцаПериодаОтчета);

	ПоказатьПериод();

КонецПроцедуры // ИзменитьПериод()


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

	ЭтаФорма.АвтоЗаголовок = Ложь;

	Если ВладелецФормы <> Неопределено Тогда
		Если Не ВладелецФормы.ЭтоНовый() Тогда

			// При восстановлении сохраненных данных сразу открываем
			// нужную форму отчета, минуя основную форму.
			Отказ = Истина;

			мСохраненныйДок = ВладелецФормы.ДокументОбъект;

			// определяем границы периода построения отчета
			мДатаНачалаПериодаОтчета = мСохраненныйДок.ДатаНачала;
			мДатаКонцаПериодаОтчета  = мСохраненныйДок.ДатаОкончания;

			// по реквизиту ВыбраннаяФорма документа определяем,
			// какую форму следует открыть
			ВыбраннаяФорма = ВладелецФормы.ВыбраннаяФорма;

			Если ЭтотОбъект.Метаданные().Формы.Найти(СокрП(ВыбраннаяФорма)) <> Неопределено Тогда
				ВыбФормаОтчета = ПолучитьФорму(СокрП(ВыбраннаяФорма));
			Иначе
				// Если не удалось найти форму с таким названием (могла быть переименована),
				// то по умолчанию выдаем текущую (действующую) форму
				ВыбраннаяФорма = мТаблицаФормОтчета[0].ФормаОтчета;
				ВыбФормаОтчета = ПолучитьФорму(ВыбраннаяФорма);
			КонецЕсли;

			мВыбраннаяФорма = ВыбраннаяФорма;

			ВыбФормаОтчета.РежимВыбора = Ложь;
			ВыбФормаОтчета.Открыть();

		ИначеЕсли ВладелецФормы.мСкопированаФорма <> Неопределено Тогда
			// Новый документ РегламентированныйОтчет был получен
			// методом копирования имеющегося.
			// Переменной мСохраненныйДок присвоим текущий документ
			мСохраненныйДок   = ВладелецФормы.ДокументОбъект;
			мСкопированаФорма = ВладелецФормы.мСкопированаФорма;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры // ПередОткрытием()

// Процедура - обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии()

	// Устанваливаем границы периода построения отчета как квартал
	// предшествующий текущему, нарастающим итогом с начала года.
	мДатаКонцаПериодаОтчета  = КонецМесяца(ДобавитьМесяц(КонецКвартала(РабочаяДата), -3));
	мДатаНачалаПериодаОтчета = НачалоМесяца(мДатаКонцаПериодаОтчета);

	ПоказатьПериод();

	Если НЕ мТаблицаФормОтчета.Количество() > 1 Тогда
		ЭлементыФормы.КнопкаВыбораФормы.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры // ПриОткрытии()

// Процедура - обработчик события "ПередЗакрытием" формы.
//
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)

	// здесь отключаем стандартную обработку ПередЗакрытием формы
	// для подавления выдачи запроса на сохранение формы.
	СтандартнаяОбработка = Ложь;

КонецПроцедуры // ПередЗакрытием()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Процедура вызывается по нажатию кнопки "ОК" формы.
//   Инициализирует открытие нужной формы документа.
//
Процедура ОсновныеДействияФормыОК(Кнопка)

	Если мСкопированаФорма <> Неопределено Тогда
		// Документ был скопиран. 
		// Проверяем соответствие форм.
		Если мВыбраннаяФорма <> мСкопированаФорма Тогда

			Если Вопрос("Форма отчета изменилась, копирование данных не выполняется.
						|Продолжить?", РежимДиалогаВопрос.ДаНет,30,КодВозвратаДиалога.Да) = КодВозвратаДиалога.Нет Тогда

				ЭтаФорма.Закрыть();
				Возврат;
			КонецЕсли;

			// очищаем данные скопированного отчета
			//СписокСохранения = Новый Структура();
			//ХранилищеДанных  = Новый ХранилищеЗначения(СписокСохранения);
			//мСохраненныйДок.ДанныеОтчета    = ХранилищеДанных;

		КонецЕсли;
	КонецЕсли;
	
	// устанавливаем дату 
	Дата		               = мДатаНачалаПериодаОтчета;
	ВыбФормаОтчета             = ПолучитьФорму(мВыбраннаяФорма);
	ВыбФормаОтчета.РежимВыбора = Ложь;
	ЭтаФорма.Закрыть();
	ВыбФормаОтчета.Открыть();
	
КонецПроцедуры // ОсновныеДействияФормыОК()

// Процедура вызывается по нажатию кнопки "<" формы.
//   Инициализирует изменение переиода построения отчета.
//
Процедура КнопкаПредыдущийПериодНажатие(Элемент)

	ИзменитьПериод(-1);

КонецПроцедуры // КнопкаПредыдущийПериодНажатие()

// Процедура вызывается по нажатию кнопки ">" формы.
//   Инициализирует изменение переиода построения отчета.
//
Процедура КнопкаСледующийПериодНажатие(Элемент)

	ИзменитьПериод(1);

КонецПроцедуры // КнопкаСледующийПериодНажатие()

// Процедура вызывается по нажатию кнопки "..." формы.
//   Инициализирует выбор из списка требуемой формы отчета.
//
Процедура КнопкаВыбораФормыНажатие(Элемент)

	ТаблицаВыбораФормы = мТаблицаФормОтчета.Скопировать();
	ТаблицаВыбораФормы.Колонки.Удалить("ФормаОтчета");

	ИсхИндекс = 0;
	ИсхСтрока = мТаблицаФормОтчета.Найти(мВыбраннаяФорма, "ФормаОтчета");
	Если Не ИсхСтрока = Неопределено Тогда
		ИсхИндекс = мТаблицаФормОтчета.Индекс(ИсхСтрока);
	КонецЕсли;

	СтрокаТаблВыбора = ТаблицаВыбораФормы[ИсхИндекс];
	ВыбСтрока = ТаблицаВыбораФормы.ВыбратьСтроку("Выберите форму отчета", СтрокаТаблВыбора);

	Если Не ВыбСтрока = Неопределено Тогда
		ВыбИндекс = ТаблицаВыбораФормы.Индекс(ВыбСтрока);
		ВыбСтрока = мТаблицаФормОтчета[ВыбИндекс];

		мВыбраннаяФорма = ВыбСтрока.ФормаОтчета;
		ЭлементыФормы.ОписаниеНормативДок.Значение = ВыбСтрока.ОписаниеОтчета;
	КонецЕсли;

КонецПроцедуры // КнопкаВыбораФормыНажатие()

////////////////////////////////////////////////////////////////////////////////
// РАЗДЕЛ ОСНОВНОЙ ПРОГРАММЫ

ОписаниеТиповСтрока = ОбщегоНазначения.ПолучитьОписаниеТиповСтроки(254);

МассивТипов = Новый Массив;
МассивТипов.Добавить(Тип("Дата"));
ОписаниеТиповДата = Новый ОписаниеТипов(МассивТипов, , Новый КвалификаторыДаты(ЧастиДаты.Дата));

мТаблицаФормОтчета = Новый ТаблицаЗначений;
мТаблицаФормОтчета.Колонки.Добавить("ФормаОтчета",        ОписаниеТиповСтрока);
мТаблицаФормОтчета.Колонки.Добавить("ОписаниеОтчета",     ОписаниеТиповСтрока, "Утверждена",  20);
мТаблицаФормОтчета.Колонки.Добавить("ДатаНачалоДействия", ОписаниеТиповДата,   "Действует с", 5);
мТаблицаФормОтчета.Колонки.Добавить("ДатаКонецДействия",  ОписаниеТиповДата,   "         по", 5);
мТаблицаФормОтчета.Индексы.Добавить("ФормаОтчета");

НоваяФорма = мТаблицаФормОтчета.Добавить();
НоваяФорма.ФормаОтчета        = "ФормаДокумента";
НоваяФорма.ОписаниеОтчета     = "Анкета застрахованного лица (АДВ-1)";
НоваяФорма.ДатаНачалоДействия = '20040101';
НоваяФорма.ДатаКонецДействия  = '20040101';


////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция ТекущиеОстатки(Организация, Дата, МесяцРасчетногоПериода, ВидОстатка, УчитыватьДанныеДокумента = Ложь, Ссылка = Неопределено, ДатаПлатежа = Неопределено, УчитыватьРасходыПоСтрахованию = Ложь) Экспорт
	
	СтруктураОстатков = Новый Структура("ПФРСтраховая,ПФРНакопительная,ПФРПоДополнительномуТарифу,ПФРНаДоплатуКПенсииШахтерам,ФФОМС,ТФОМС,ФСС,ФССНесчастныеСлучаи",0,0,0,0,0,0,0,0);
	
	ДатаОстатка = ?(НачалоМесяца(Дата) > МесяцРасчетногоПериода, Дата, КонецМесяца(МесяцРасчетногоПериода) + 1);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ДатаОстатка",			ДатаОстатка);
	Запрос.УстановитьПараметр("ВидПлатежа",				ВидОстатка);
	Запрос.УстановитьПараметр("МесяцРасчетногоПериода",	МесяцРасчетногоПериода);
	Запрос.УстановитьПараметр("Организация",			Организация);

	Если УчитыватьДанныеДокумента И ЗначениеЗаполнено(ДатаПлатежа) И ДатаПлатежа < ДатаОстатка Тогда
		Запрос.УстановитьПараметр("Ссылка",	Ссылка);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	РасчетыПоСтраховымВзносам.ПФРСтраховая,
		|	РасчетыПоСтраховымВзносам.ПФРНакопительная,
		|	РасчетыПоСтраховымВзносам.ФСС,
		|	РасчетыПоСтраховымВзносам.ФФОМС,
		|	РасчетыПоСтраховымВзносам.ТФОМС,
		|	РасчетыПоСтраховымВзносам.ФССНесчастныеСлучаи,
		|	РасчетыПоСтраховымВзносам.ПФРПоДополнительномуТарифу,
		|	РасчетыПоСтраховымВзносам.ПФРНаДоплатуКПенсииШахтерам
		|ПОМЕСТИТЬ ВТДанныеДокумента
		|ИЗ
		|	РегистрНакопления.РасчетыПоСтраховымВзносам КАК РасчетыПоСтраховымВзносам
		|ГДЕ
		|	РасчетыПоСтраховымВзносам.Регистратор = &Ссылка
		|	И РасчетыПоСтраховымВзносам.ВидПлатежа = &ВидПлатежа
		|	И РасчетыПоСтраховымВзносам.Организация = &Организация
		|	И РасчетыПоСтраховымВзносам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И РасчетыПоСтраховымВзносам.МесяцРасчетногоПериода = &МесяцРасчетногоПериода";	
	Иначе 
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	0 КАК ПФРСтраховая,
		|	0 КАК ПФРНакопительная,
		|	0 КАК ФСС,
		|	0 КАК ФФОМС,
		|	0 КАК ТФОМС,
		|	0 КАК ФССНесчастныеСлучаи,
		|	0 КАК ПФРПоДополнительномуТарифу,
		|	0 КАК ПФРНаДоплатуКПенсииШахтерам
		|ПОМЕСТИТЬ ВТДанныеДокумента";	
	КонецЕсли;
	Запрос.Выполнить();
	
	Если УчитыватьРасходыПоСтрахованию Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	-РасчетыПоСтраховымВзносам.ФССОстаток КАК ФСС,
		|	-РасчетыПоСтраховымВзносам.ФССНесчастныеСлучаиОстаток КАК ФССНесчастныеСлучаи
		|ПОМЕСТИТЬ ВТРасходыПоСоцСтрахованию
		|ИЗ
		|	РегистрНакопления.РасчетыПоСтраховымВзносам.Остатки(
		|			&ДатаОстатка,
		|			ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию)
		|				И МесяцРасчетногоПериода = &МесяцРасчетногоПериода
		|				И Организация = &Организация) КАК РасчетыПоСтраховымВзносам
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РасчетыПоСтраховымВзносам.ФССОстаток,
		|	РасчетыПоСтраховымВзносам.ФССНесчастныеСлучаиОстаток
		|ИЗ
		|	РегистрНакопления.РасчетыПоСтраховымВзносам.Остатки(
		|			&ДатаОстатка,
		|			ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.ПолученоИзФонда)
		|				И МесяцРасчетногоПериода = &МесяцРасчетногоПериода
		|				И Организация = &Организация) КАК РасчетыПоСтраховымВзносам
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РасчетыПоСтраховымВзносам.ФССОстаток,
		|	РасчетыПоСтраховымВзносам.ФССНесчастныеСлучаиОстаток
		|ИЗ
		|	РегистрНакопления.РасчетыПоСтраховымВзносам.Остатки(
		|			&ДатаОстатка,
		|			ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НеПринято)
		|				И МесяцРасчетногоПериода = &МесяцРасчетногоПериода
		|				И Организация = &Организация) КАК РасчетыПоСтраховымВзносам";	
	Иначе 
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	0 КАК ФСС,
		|	0 КАК ФССНесчастныеСлучаи
		|ПОМЕСТИТЬ ВТРасходыПоСоцСтрахованию";	
	КонецЕсли;
	Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(СУММА(ДанныеДляСуммирования.ПФРСтраховая) КАК ЧИСЛО(15, 0))) > 0
	|			ТОГДА ВЫРАЗИТЬ(СУММА(ДанныеДляСуммирования.ПФРСтраховая) КАК ЧИСЛО(15, 0))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПФРСтраховая,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(СУММА(ДанныеДляСуммирования.ПФРНакопительная) КАК ЧИСЛО(15, 0))) > 0
	|			ТОГДА ВЫРАЗИТЬ(СУММА(ДанныеДляСуммирования.ПФРНакопительная) КАК ЧИСЛО(15, 0))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПФРНакопительная,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(СУММА(ДанныеДляСуммирования.ФСС) КАК ЧИСЛО(15, 0))) > 0
	|			ТОГДА ВЫРАЗИТЬ(СУММА(ДанныеДляСуммирования.ФСС) КАК ЧИСЛО(15, 0))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ФСС,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(СУММА(ДанныеДляСуммирования.ФФОМС) КАК ЧИСЛО(15, 0))) > 0
	|			ТОГДА ВЫРАЗИТЬ(СУММА(ДанныеДляСуммирования.ФФОМС) КАК ЧИСЛО(15, 0))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ФФОМС,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(СУММА(ДанныеДляСуммирования.ТФОМС) КАК ЧИСЛО(15, 0))) > 0
	|			ТОГДА ВЫРАЗИТЬ(СУММА(ДанныеДляСуммирования.ТФОМС) КАК ЧИСЛО(15, 0))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ТФОМС,
	|	ВЫБОР
	|		КОГДА СУММА(ДанныеДляСуммирования.ФССНесчастныеСлучаи) > 0
	|			ТОГДА СУММА(ДанныеДляСуммирования.ФССНесчастныеСлучаи)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ФССНесчастныеСлучаи,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(СУММА(ДанныеДляСуммирования.ПФРПоДополнительномуТарифу) КАК ЧИСЛО(15, 0))) > 0
	|			ТОГДА ВЫРАЗИТЬ(СУММА(ДанныеДляСуммирования.ПФРПоДополнительномуТарифу) КАК ЧИСЛО(15, 0))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПФРПоДополнительномуТарифу,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(СУММА(ДанныеДляСуммирования.ПФРНаДоплатуКПенсииШахтерам) КАК ЧИСЛО(15, 0))) > 0
	|			ТОГДА ВЫРАЗИТЬ(СУММА(ДанныеДляСуммирования.ПФРНаДоплатуКПенсииШахтерам) КАК ЧИСЛО(15, 0))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПФРНаДоплатуКПенсииШахтерам
	|ИЗ
	|	(ВЫБРАТЬ
	|		РасчетыПоСтраховымВзносамОстатки.ПФРСтраховаяОстаток КАК ПФРСтраховая,
	|		РасчетыПоСтраховымВзносамОстатки.ПФРНакопительнаяОстаток КАК ПФРНакопительная,
	|		РасчетыПоСтраховымВзносамОстатки.ФССОстаток КАК ФСС,
	|		РасчетыПоСтраховымВзносамОстатки.ФФОМСОстаток КАК ФФОМС,
	|		РасчетыПоСтраховымВзносамОстатки.ТФОМСОстаток КАК ТФОМС,
	|		РасчетыПоСтраховымВзносамОстатки.ФССНесчастныеСлучаиОстаток КАК ФССНесчастныеСлучаи,
	|		РасчетыПоСтраховымВзносамОстатки.ПФРПоДополнительномуТарифуОстаток КАК ПФРПоДополнительномуТарифу,
	|		РасчетыПоСтраховымВзносамОстатки.ПФРНаДоплатуКПенсииШахтерамОстаток КАК ПФРНаДоплатуКПенсииШахтерам
	|	ИЗ
	|		РегистрНакопления.РасчетыПоСтраховымВзносам.Остатки(
	|				&ДатаОстатка,
	|				ВидПлатежа = &ВидПлатежа
	|					И МесяцРасчетногоПериода = &МесяцРасчетногоПериода
	|					И Организация = &Организация) КАК РасчетыПоСтраховымВзносамОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеДокумента.ПФРСтраховая,
	|		ДанныеДокумента.ПФРНакопительная,
	|		ДанныеДокумента.ФСС,
	|		ДанныеДокумента.ФФОМС,
	|		ДанныеДокумента.ТФОМС,
	|		ДанныеДокумента.ФССНесчастныеСлучаи,
	|		ДанныеДокумента.ПФРПоДополнительномуТарифу,
	|		ДанныеДокумента.ПФРНаДоплатуКПенсииШахтерам
	|	ИЗ
	|		ВТДанныеДокумента КАК ДанныеДокумента
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		0,
	|		0,
	|		-РасходыПоСоцСтрахованию.ФСС,
	|		0,
	|		0,
	|		-РасходыПоСоцСтрахованию.ФССНесчастныеСлучаи,
	|		0,
	|		0
	|	ИЗ
	|		ВТРасходыПоСоцСтрахованию КАК РасходыПоСоцСтрахованию) КАК ДанныеДляСуммирования";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(СтруктураОстатков,Выборка);
	КонецЦикла;
	
	Возврат СтруктураОстатков
	
КонецФункции // ТекущиеОстатки()

Процедура Автозаполнение() Экспорт

	Если ВидОперации = Перечисления.ВидыОперацийРасчетыПоСтраховымВзносам.УплатаПФР Тогда
		СтрокаЗаполняемыхПолей = "ПФРСтраховая,ПФРНакопительная,ПФРПоДополнительномуТарифу,ПФРНаДоплатуКПенсииШахтерам";
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРасчетыПоСтраховымВзносам.УплатаФОМС Тогда
		СтрокаЗаполняемыхПолей = "ФФОМС,ТФОМС";
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРасчетыПоСтраховымВзносам.УплатаФСС Тогда
		СтрокаЗаполняемыхПолей = "ФСС,ФССНесчастныеСлучаи";
	Иначе	
		СтрокаЗаполняемыхПолей = "ПФРСтраховая,ПФРНакопительная,ПФРПоДополнительномуТарифу,ПФРНаДоплатуКПенсииШахтерам,ФФОМС,ТФОМС,ФСС,ФССНесчастныеСлучаи";
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект,ТекущиеОстатки(Организация, Дата, МесяцРасчетногоПериода, ВидПлатежа, Проведен, Ссылка, ДатаПлатежа, ВидПлатежа = Перечисления.ВидыПлатежейВГосБюджет.Налог И ВидОперации = Перечисления.ВидыОперацийРасчетыПоСтраховымВзносам.УплатаФСС),СтрокаЗаполняемыхПолей);
	
КонецПроцедуры

Процедура АвтозаполнениеПоУплатам() Экспорт
    	
	ДатаРегистратора = Новый Граница(Ссылка.МоментВремени(), ВидГраницы.Исключая);
	
	ПланСчетовХозрасчетный = ПланыСчетов.Хозрасчетный;
	
	СчетаУчетаВзносов = Новый Массив;
	Если ВидОперации = Перечисления.ВидыОперацийРасчетыПоСтраховымВзносам.УплатаПФР Тогда
		СчетаУчетаВзносов.Добавить(ПланСчетовХозрасчетный.ПФР_нак);
		СчетаУчетаВзносов.Добавить(ПланСчетовХозрасчетный.ПФР_страх);
		СчетаУчетаВзносов.Добавить(ПланСчетовХозрасчетный.ПФР_доп);
		СчетаУчетаВзносов.Добавить(ПланСчетовХозрасчетный.ПФР_доп_шахтеры);
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРасчетыПоСтраховымВзносам.УплатаФОМС Тогда
		СчетаУчетаВзносов.Добавить(ПланСчетовХозрасчетный.ФФОМС);
		СчетаУчетаВзносов.Добавить(ПланСчетовХозрасчетный.ТФОМС);
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРасчетыПоСтраховымВзносам.УплатаФСС Тогда
		СчетаУчетаВзносов.Добавить(ПланСчетовХозрасчетный.ФСС);
		СчетаУчетаВзносов.Добавить(ПланСчетовХозрасчетный.ФСС_НСиПЗ);
	КонецЕсли;
	
	СчетаУчетРасчетов = Новый Массив;
	СчетаУчетРасчетов.Добавить(ПланСчетовХозрасчетный.РасчетныеСчета);		
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;	
	Запрос.УстановитьПараметр("НачалоПериода",		НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонецПериода",		ДатаРегистратора);
	Запрос.УстановитьПараметр("ВидСубконто",		ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет);
	Запрос.УстановитьПараметр("ВидПлатежа",			ВидПлатежа);
	Запрос.УстановитьПараметр("Организация",		Организация);
	Запрос.УстановитьПараметр("СчетаУчетаВзносов",	СчетаУчетаВзносов);
	Запрос.УстановитьПараметр("СчетаУчетРасчетов",	СчетаУчетРасчетов);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОборотыДтКт.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПФР_нак)
	|			ТОГДА ХозрасчетныйОборотыДтКт.СуммаОборот
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПФРНакопительная,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОборотыДтКт.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПФР_страх)
	|			ТОГДА ХозрасчетныйОборотыДтКт.СуммаОборот
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПФРСтраховая,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОборотыДтКт.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПФР_доп)
	|			ТОГДА ХозрасчетныйОборотыДтКт.СуммаОборот
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПФРПоДополнительномуТарифу,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОборотыДтКт.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ФСС)
	|			ТОГДА ХозрасчетныйОборотыДтКт.СуммаОборот
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ФСС,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОборотыДтКт.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ФФОМС)
	|			ТОГДА ХозрасчетныйОборотыДтКт.СуммаОборот
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ФФОМС,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОборотыДтКт.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТФОМС)
	|			ТОГДА ХозрасчетныйОборотыДтКт.СуммаОборот
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ТФОМС,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОборотыДтКт.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ФСС_НСиПЗ)
	|			ТОГДА ХозрасчетныйОборотыДтКт.СуммаОборот
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ФССНесчастныеСлучаи,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОборотыДтКт.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ФСС)
	|			ТОГДА ХозрасчетныйОборотыДтКт.Регистратор
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ПлатежноеПоручениеФСС,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОборотыДтКт.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ФСС_НСиПЗ)
	|			ТОГДА ХозрасчетныйОборотыДтКт.Регистратор
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ПлатежноеПоручениеФСС_НС_ПЗ,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОборотыДтКт.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПФР_доп_шахтеры)
	|			ТОГДА ХозрасчетныйОборотыДтКт.СуммаОборот
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПФРНаДоплатуКПенсииШахтерам
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Регистратор,
	|			СчетДт В (&СчетаУчетаВзносов),
	|			&ВидСубконто,
	|			СчетКт В (&СчетаУчетРасчетов),
	|			,
	|			Организация = &Организация
	|				И СубконтоДт1 = &ВидПлатежа) КАК ХозрасчетныйОборотыДтКт";

	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	МассивПлатежноеПоручениеФСС = РезультатЗапроса.ВыгрузитьКолонку("ПлатежноеПоручениеФСС");
	МассивПлатежноеПоручениеФСС_НС_ПЗ =  РезультатЗапроса.ВыгрузитьКолонку("ПлатежноеПоручениеФСС_НС_ПЗ");
	РезультатЗапроса.Свернуть("","ПФРНакопительная,ПФРСтраховая,ПФРПоДополнительномуТарифу,ПФРНаДоплатуКПенсииШахтерам,ФСС,ФФОМС,ТФОМС,ФССНесчастныеСлучаи");
	
	Для Каждого СтрокаТаблицы ИЗ РезультатЗапроса Цикл
		ЗаполнитьЗначенияСвойств(ЭтотОбъект,СтрокаТаблицы);
	КонецЦикла;

	Если ВидОперации = Перечисления.ВидыОперацийРасчетыПоСтраховымВзносам.УплатаФСС Тогда
		НомерВходящегоДокумента	= "";
		ДатаВходящегоДокумента	= "";
		Для Каждого ТекДокументМассива ИЗ МассивПлатежноеПоручениеФСС Цикл
			Если ТекДокументМассива = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			Если ТипЗнч(ТекДокументМассива) = Тип("ДокументСсылка.СписаниеСРасчетногоСчета") Тогда
				НомерВходящегоДокумента = ТекДокументМассива.НомерВходящегоДокумента;
				ДатаВходящегоДокумента 	= ТекДокументМассива.ДатаВходящегоДокумента;
				Прервать;
			Иначе
				НомерВходящегоДокумента = ОбщегоНазначения.ПолучитьНомерНаПечать(ТекДокументМассива.ПолучитьОбъект());
				ДатаВходящегоДокумента 	= ТекДокументМассива.Дата;
				Прервать
			КонецЕсли;
			
		КонецЦикла;
		ПлатежноеПоручениеФССНомер 	= НомерВходящегоДокумента;
		ПлатежноеПоручениеФССДата 	= ДатаВходящегоДокумента;
		
		НомерВходящегоДокумента	= "";
		ДатаВходящегоДокумента	= "";
		Для Каждого ТекДокументМассива ИЗ МассивПлатежноеПоручениеФСС_НС_ПЗ Цикл
			Если ТекДокументМассива = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			Если ТипЗнч(ТекДокументМассива) = Тип("ДокументСсылка.СписаниеСРасчетногоСчета") Тогда
				НомерВходящегоДокумента = ТекДокументМассива.НомерВходящегоДокумента;
				ДатаВходящегоДокумента 	= ТекДокументМассива.ДатаВходящегоДокумента;
				Прервать;
			Иначе
				НомерВходящегоДокумента = ОбщегоНазначения.ПолучитьНомерНаПечать(ТекДокументМассива.ПолучитьОбъект());
				ДатаВходящегоДокумента 	= ТекДокументМассива.Дата;
				Прервать
			КонецЕсли;
			
		КонецЦикла;	
		ПлатежноеПоручениеФСС_НС_ПЗНомер	= НомерВходящегоДокумента;
		ПлатежноеПоручениеФСС_НС_ПЗДата 	= ДатаВходящегоДокумента;
	КонецЕсли;
	
КонецПроцедуры

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	Возврат Новый Структура();
КонецФункции // ПолучитьСтруктуруПечатныхФорм()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизитов шапки, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по шапке,
// все проверяемые реквизиты должны быть включены в выборку по шапке.
//
// Параметры: 
//	ВыборкаПоШапкеДокумента	- выборка из результата запроса по шапке документа,
//	Отказ					- флаг отказа в проведении,
//	Заголовок				- Заголовок для сообщений об ошибках проведения.
//
Процедура ПроверитьЗаполнениеШапки(Отказ, Заголовок = "")

	
	СтруктураОбязательныхПолей = Новый Структура("Организация, МесяцРасчетногоПериода, ВидПлатежа");

	// Теперь вызовем общую процедуру проверки.
	ЗаполнениеДокументов.ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);
	
КонецПроцедуры // ПроверитьЗаполнениеШапки()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, Режим)
		
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);
	
	ПроверитьЗаполнениеШапки(Отказ, Заголовок);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если ВидОперации = Перечисления.ВидыОперацийРасчетыПоСтраховымВзносам.ПособияПоСтрахованию Тогда
		Если ФСС <> 0 Или ФССНесчастныеСлучаи <> 0 Тогда
			Движение = Движения.РасчетыПоСтраховымВзносам.Добавить();
			ЗаполнитьЗначенияСвойств(Движение,ЭтотОбъект);
			Движение.Период = ДатаПлатежа;
			Движение.ВидДвижения = ?(ВидПлатежа = Перечисления.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию,ВидДвиженияНакопления.Расход,ВидДвиженияНакопления.Приход);
		КонецЕсли;
		Если ФССЕНВД <> 0 И МесяцРасчетногоПериода < ПроведениеРасчетов.ДатаРасширенияПеречняЛьготныхТарифовСтраховыхВзносов()Тогда
			Движение = Движения.РасчетыПоСтраховымВзносам.Добавить();
			ЗаполнитьЗначенияСвойств(Движение,ЭтотОбъект, ,"ФСС, ФССНесчастныеСлучаи");
			Движение.ФСС = ФССЕНВД;
			Движение.ОблагаетсяЕНВД = Истина;
			Движение.Период = ДатаПлатежа;	
			Движение.ВидДвижения = ?(ВидПлатежа = Перечисления.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию,ВидДвиженияНакопления.Расход,ВидДвиженияНакопления.Приход);
		КонецЕсли;
	Иначе
		
		Если ВидОперации = Перечисления.ВидыОперацийРасчетыПоСтраховымВзносам.Начисление Тогда
			Движение = Движения.РасчетыПоСтраховымВзносам.ДобавитьПриход()
		Иначе
			Движение = Движения.РасчетыПоСтраховымВзносам.ДобавитьРасход()
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(Движение,ЭтотОбъект);
		Движение.Период = ДатаПлатежа;	
	КонецЕсли;
	
КонецПроцедуры // ОбработкаПроведения()

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ВидОперации = Перечисления.ВидыОперацийРасчетыПоСтраховымВзносам.УплатаПФР Тогда
		ФФОМС = 0;
		ТФОМС = 0;
		ФСС = 0; ПлатежноеПоручениеФССДата = ""; ПлатежноеПоручениеФССНомер = "";
		ФССНесчастныеСлучаи = 0; ПлатежноеПоручениеФСС_НС_ПЗНомер = ""; ПлатежноеПоручениеФСС_НС_ПЗДата = "";
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРасчетыПоСтраховымВзносам.УплатаФОМС Тогда
		ПФРСтраховая = 0;
		ПФРНакопительная = 0;
		ПФРПоДополнительномуТарифу = 0;
		ПФРНаДоплатуКПенсииШахтерам = 0;
		ФСС = 0; ПлатежноеПоручениеФССДата = ""; ПлатежноеПоручениеФССНомер = "";
		ФССНесчастныеСлучаи = 0; ПлатежноеПоручениеФСС_НС_ПЗНомер = ""; ПлатежноеПоручениеФСС_НС_ПЗДата = "";
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРасчетыПоСтраховымВзносам.УплатаФСС Тогда
		ПФРСтраховая = 0;
		ПФРНакопительная = 0;
		ПФРПоДополнительномуТарифу = 0;
		ПФРНаДоплатуКПенсииШахтерам = 0;
		ФФОМС = 0;
		ТФОМС = 0;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	Если ВидОперации = Перечисления.ВидыОперацийРасчетыПоСтраховымВзносам.УдалитьУплата Тогда
		ВидОперации = Перечисления.ВидыОперацийРасчетыПоСтраховымВзносам.УплатаПФР
	КонецЕсли;
КонецПроцедуры

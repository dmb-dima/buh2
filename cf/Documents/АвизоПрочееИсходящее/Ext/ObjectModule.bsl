Перем СтруктураШапкиДокумента;

////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Если Клиент Тогда

// Функция формирует табличный документ с печатной формой накладной,
// разработанной методистами
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной
//
Функция ПечатьАвизо()

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", ЭтотОбъект.Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Авизо.Номер,
	|	Авизо.Дата,
	|	Авизо.СчетРасчетов,
	|	Авизо.Организация КАК ОрганизацияОтправитель,
	|	ВЫБОР
	|		КОГДА Авизо.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА Авизо.Организация
	|		ИНАЧЕ Авизо.Организация.ГоловнаяОрганизация
	|	КОНЕЦ КАК Организация,
	|	Авизо.ОрганизацияПолучатель КАК ОрганизацияПолучатель
	|ИЗ
	|	Документ.АвизоПрочееИсходящее КАК Авизо
	|ГДЕ
	|	Авизо.Ссылка = &ТекущийДокумент";
	
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АвизоПрочееИсходящее_Авизо";
	Макет       = ПолучитьМакет("Авизо");

	// Выводим основную шапку
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.ТекстЗаголовка = ОбщегоНазначения.СформироватьЗаголовокДокумента(Шапка, "Извещение (авизо)");
	
	СведенияОбОрганизации    = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
	ПредставлениеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм,");
	ОбластьМакета.Параметры.Организация = ПредставлениеОрганизации;
	
	СведенияОбОтправителе    = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.ОрганизацияОтправитель, Шапка.Дата);
	ПредставлениеОтправителя = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОтправителе, "НаименованиеДляПечатныхФорм,");
	ОбластьМакета.Параметры.Отправитель = ПредставлениеОтправителя;
	
	СведенияОПолучателе     = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.ОрганизацияПолучатель, Шапка.Дата);
	ПредставлениеПолучателя = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПолучателе, "НаименованиеДляПечатныхФорм,");
	ОбластьМакета.Параметры.Получатель = ПредставлениеПолучателя;
	
	ТабДокумент.Вывести(ОбластьМакета);
 
	// Выводим шапку таблицы БУ
	ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокТаблицыБУ");
	ТабДокумент.Вывести(ОбластьМакета);
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Запрос.УстановитьПараметр("Счет", Шапка.СчетРасчетов);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ХозрасчетныйДвиженияССубконто.НомерСтроки КАК НомерСтроки,
	|	ХозрасчетныйДвиженияССубконто.СчетДт,
	|	ХозрасчетныйДвиженияССубконто.СубконтоДт1,
	|	ХозрасчетныйДвиженияССубконто.СубконтоДт2,
	|	ХозрасчетныйДвиженияССубконто.СубконтоДт3,
	|	ХозрасчетныйДвиженияССубконто.СчетКт,
	|	ХозрасчетныйДвиженияССубконто.СубконтоКт1,
	|	ХозрасчетныйДвиженияССубконто.СубконтоКт2,
	|	ХозрасчетныйДвиженияССубконто.СубконтоКт3,
	|	ХозрасчетныйДвиженияССубконто.Организация,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйДвиженияССубконто.ВалютаДт ЕСТЬ NULL 
	|			ТОГДА ХозрасчетныйДвиженияССубконто.ВалютаКт
	|		ИНАЧЕ ХозрасчетныйДвиженияССубконто.ВалютаДт
	|	КОНЕЦ КАК Валюта,
	|	ХозрасчетныйДвиженияССубконто.Сумма,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйДвиженияССубконто.ВалютнаяСуммаДт ЕСТЬ NULL 
	|			ТОГДА ХозрасчетныйДвиженияССубконто.ВалютнаяСуммаКт
	|		ИНАЧЕ ХозрасчетныйДвиженияССубконто.ВалютнаяСуммаДт
	|	КОНЕЦ КАК ВалСумма,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйДвиженияССубконто.КоличествоДт ЕСТЬ NULL 
	|			ТОГДА ХозрасчетныйДвиженияССубконто.КоличествоКт
	|		ИНАЧЕ ХозрасчетныйДвиженияССубконто.КоличествоДт
	|	КОНЕЦ КАК Количество,
	|	ХозрасчетныйДвиженияССубконто.Содержание,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйДвиженияССубконто.СуммаНУДт ЕСТЬ NULL 
	|			ТОГДА ХозрасчетныйДвиженияССубконто.СуммаНУКт
	|		ИНАЧЕ ХозрасчетныйДвиженияССубконто.СуммаНУДт
	|	КОНЕЦ КАК СуммаНУ,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйДвиженияССубконто.СуммаПРДт ЕСТЬ NULL 
	|			ТОГДА ХозрасчетныйДвиженияССубконто.СуммаПРКт
	|		ИНАЧЕ ХозрасчетныйДвиженияССубконто.СуммаПРДт
	|	КОНЕЦ КАК СуммаПР,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйДвиженияССубконто.СуммаВРДт ЕСТЬ NULL 
	|			ТОГДА ХозрасчетныйДвиженияССубконто.СуммаВРКт
	|		ИНАЧЕ ХозрасчетныйДвиженияССубконто.СуммаВРДт
	|	КОНЕЦ КАК СуммаВР
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
	|			,
	|			,
	|			Регистратор = &Регистратор
	|				И (СчетДт = &Счет
	|					ИЛИ СчетКт = &Счет)) КАК ХозрасчетныйДвиженияССубконто
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ВыборкаДвижений = Запрос.Выполнить().Выбрать();

	НС = 1;
	// Выводим строки таблицы БУ
	Пока ВыборкаДвижений.Следующий() Цикл
		
		ОбластьМакета = Макет.ПолучитьОбласть("СтрокаТаблицыБУ");
		ОбластьМакета.Параметры.Заполнить(ВыборкаДвижений);
		ОбластьМакета.Параметры.НомерСтроки = НС;
		
		АналитикаДт = Строка(ВыборкаДвижений.СубконтоДт1) + Символы.ПС
		            + Строка(ВыборкаДвижений.СубконтоДт2) + Символы.ПС
                    + Строка(ВыборкаДвижений.СубконтоДт3);
					
		АналитикаКт = Строка(ВыборкаДвижений.СубконтоКт1) + Символы.ПС
		            + Строка(ВыборкаДвижений.СубконтоКт2) + Символы.ПС
                    + Строка(ВыборкаДвижений.СубконтоКт3);
					
		ОбластьМакета.Параметры.АналитикаДт = АналитикаДт;
		ОбластьМакета.Параметры.АналитикаКт = АналитикаКт;
		
		ТабДокумент.Вывести(ОбластьМакета);
        НС = НС +1;		
	КонецЦикла;

	// Выводим подвал таблицы БУ
	ОбластьМакета = Макет.ПолучитьОбласть("ПодвалТаблицыБУ");
	ТабДокумент.Вывести(ОбластьМакета);
	
	// Выводим общий подвал
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	ОбластьМакета.Параметры.РасшифровкаПодписиИсполнителя = ?(НЕ ЗначениеЗаполнено(Ответственный), "", ОбщегоНазначения.ФамилияИнициалыФизЛица(Ответственный.ФизЛицо));
	ТабДокумент.Вывести(ОбластьМакета);
	
	Возврат ТабДокумент;

КонецФункции // ПечатьПеремещениеТоваров()

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходимое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь, НепосредственнаяПечать = Ложь) Экспорт
	
	// Получить экземпляр документа на печать
	Если ИмяМакета = "Авизо" тогда
		
		ТабДокумент = ПечатьАвизо();
		УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект,ЭтотОбъект.Метаданные().Представление()), НепосредственнаяПечать);
		
	КонецЕсли;

КонецПроцедуры // Печать

#КонецЕсли

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура("Авизо","Авизо");

КонецФункции // ПолучитьСтруктуруПечатныхФорм()


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Выполняет движения по регистрам 
//
Процедура ДвиженияПоРегистрам(СтруктураШапкиДокумента, Отказ, Заголовок)

	Проводки = Движения.Хозрасчетный;

	// Создание движений документа по БУ
	Для Каждого СтрокаТЧ Из ДанныеБух Цикл

		СформироватьПроводкуБух(Проводки, СтрокаТЧ, СтруктураШапкиДокумента);
		
	КонецЦикла;

КонецПроцедуры

Процедура СформироватьПроводкуБух(Операция, СтрокаТЧ, СтруктураШапкиДокумента)
	
	ОтразитьПоДебету = (СтрокаТЧ.Сумма <> 0);
	СуммаПроводки = ?(ОтразитьПоДебету, СтрокаТЧ.Сумма, СтрокаТЧ.СуммаКт);
	
	Проводка = Операция.Добавить();
	Проводка.Период      = СтруктураШапкиДокумента.Дата;
	Проводка.Организация = СтруктураШапкиДокумента.Организация;
	Проводка.Содержание  = СтрокаТЧ.СодержаниеПроводки;
	Проводка.Сумма = СуммаПроводки;
	
	Если ОтразитьПоДебету Тогда
	
		Проводка.СчетДт = СтрокаТЧ.СчетУчета;
		Для й = 1 По 3 Цикл
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, й, СтрокаТЧ["Субконто" + й]);
		КонецЦикла;
	
		БухгалтерскийУчет.УстановитьПодразделениеПроводки(Проводка, СтрокаТЧ.Подразделение, "Дт");
		
		Если СтрокаТЧ.СчетУчета.Валютный Тогда
			Проводка.ВалютаДт = СтрокаТЧ.Валюта;
			Проводка.ВалютнаяСуммаДт = СтрокаТЧ.ВалютнаяСумма;
		КонецЕсли;
		Если СтрокаТЧ.СчетУчета.Количественный Тогда
			Проводка.КоличествоДт = СтрокаТЧ.Количество;
		КонецЕсли;
		
		Если НЕ СтрокаТЧ.СчетУчета.Забалансовый Тогда
			Проводка.СчетКт = СчетРасчетов;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 1, ОрганизацияПолучатель);
		КонецЕсли;
		
	Иначе
	
		Если НЕ СтрокаТЧ.СчетУчета.Забалансовый Тогда
			Проводка.СчетДт = СчетРасчетов;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 1, ОрганизацияПолучатель);
		КонецЕсли;
	
		Проводка.СчетКт = СтрокаТЧ.СчетУчета;
		Для й = 1 По 3 Цикл
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, й, СтрокаТЧ["Субконто" + й]);
		КонецЦикла;
	
		БухгалтерскийУчет.УстановитьПодразделениеПроводки(Проводка, СтрокаТЧ.Подразделение, "Кт");
		
		Если СтрокаТЧ.СчетУчета.Валютный Тогда
			Проводка.ВалютаКт = СтрокаТЧ.Валюта;
			Проводка.ВалютнаяСуммаКт = СтрокаТЧ.ВалютнаяСумма;
		КонецЕсли;
		Если СтрокаТЧ.СчетУчета.Количественный Тогда
			Проводка.КоличествоКт = СтрокаТЧ.Количество;
		КонецЕсли;
		
	КонецЕсли;
		
	Если СтруктураШапкиДокумента.ОтражатьВНалоговомУчете Тогда

		НалоговыйУчет.ЗаполнитьНалоговыеСуммыПроводки(СтрокаТЧ.СуммаНУ,СтрокаТЧ.СуммаНУ,СтрокаТЧ.СуммаПР,СтрокаТЧ.СуммаПР,СтрокаТЧ.СуммаВР,СтрокаТЧ.СуммаВР,Проводка, СтруктураШапкиДокумента.ПрименениеПБУ18);
		
	КонецЕсли;
		
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ, ложь, ложь);
                     
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);

	Если ОбщегоНазначения.РучнаяКорректировкаОбработкаПроведения(Ложь, Отказ, Заголовок, ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	// Сформируем структуру реквизитов шапки документа
	СтруктураШапкиДокумента = ОбщегоНазначения.СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);

	ПроверитьЗаполнениеДокумента(СтруктураШапкиДокумента,Отказ, Заголовок);

	Если НЕ Отказ Тогда
		
		ДвиженияПоРегистрам(СтруктураШапкиДокумента, Отказ, Заголовок);
		
	КонецЕсли;

КонецПроцедуры

Процедура ПроверитьЗаполнениеДокумента(СтруктураШапкиДокумента, Отказ, Заголовок)
	
	СтруктураПолей = Новый Структура("Организация");
	
	СтруктураПолей.Вставить("СчетРасчетов",       "Не указан счет расчетов прочих операций");
	СтруктураПолей.Вставить("ОрганизацияПолучатель","Не указана организация получатель!");
		
	ЗаполнениеДокументов.ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект,СтруктураПолей, Отказ, Заголовок);
	
КонецПроцедуры


Перем 	КартинкаВыполнено; 
Перем 	КартинкаИсправлено;
Перем 	КартинкаОшибок; 
Перем 	КартинкаУдаления;
Перем 	КартинкаПропущено;

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

               
Процедура ДействияФормыДействиеСвойства(Кнопка)
	
	РаботаСДиалогами.ОткрытьСвойстваИзСписка(ЭлементыФормы.ДокументСписок.ТекущаяСтрока, ЭтаФорма);
	
КонецПроцедуры


// Обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии()

	// Проверка однофирменности
	РаботаСДиалогами.УстановитьОтборПоОрганизации(ЭтаФорма,, глЗначениеПеременной("ОсновнаяОрганизация"), "ДокументСписок");
	
	ЭлементыФормы.ПолеВводаВидаОперации.Значение =ЭтаФорма.ВидТекущейОперации;
	
	РаботаСДиалогами.ИзменитьПредставлениеКнопкиВыбораСвойств(ЭтаФорма, РаботаСДиалогами.ПолучитьОписаниеЗначенийСвойствОбъекта(ЭлементыФормы.ДокументСписок.ТекущаяСтрока));
	
КонецПроцедуры // ПриОткрытии()

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновлениеЗначенийСвойств" И Источник = ЭлементыФормы.ДокументСписок.ТекущаяСтрока Тогда
		РаботаСДиалогами.ИзменитьПредставлениеКнопкиВыбораСвойств(ЭтаФорма, Параметр);
	ИначеЕсли ИмяСобытия = "ИзменениеТекущейОрганизации" Тогда
		РаботаСДиалогами.УстановитьОтборПоОрганизации(ЭтаФорма,, глЗначениеПеременной("ОсновнаяОрганизация"), "ДокументСписок", Истина);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Процедура печатает выбранный документ.
//
//  Печатается форма, выбранная для печати по умолчанию.
//
Процедура ДействияФормыДействиеПечать(Кнопка)
    ТекущиеДанные = ЭлементыФормы.ДокументСписок.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат
	КонецЕсли;
	ЗакрытиеМесяца.СформироватьСправкиРасчеты(ТекущиеДанные.Ссылка.Организация, ТекущиеДанные.Ссылка.Дата, ТекущиеДанные.Ссылка.ВидОперации);

КонецПроцедуры // ДействияФормыДействиеПечать()
                    
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ФОРМЫ

// Обработчик события "ПриИзменении" поля ввода "Организация".
//
Процедура ПолеВводаОрганизацияПриИзменении(Элемент)

	Отбор.Организация.Использование = ЗначениеЗаполнено(Элемент.Значение);

КонецПроцедуры


Процедура ОсновныеДействияФормыНастройка(Кнопка)
	Если ЭлементыФормы.ДокументСписок.ТекущиеДанные = Неопределено тогда
		Возврат
	КонецЕсли;

	ОбщегоНазначения.РучнаяКорректировкаОсновнаяФорма(Ложь,ЭлементыФормы.ДокументСписок.ТекущиеДанные.Ссылка,
													  ЭлементыФормы.ДокументСписок.ТекущиеДанные.Ссылка.ПолучитьОбъект());

КонецПроцедуры

Процедура ДокументСписокПриПолученииДанных(Элемент, ОформленияСтрок)
	
	
	Для Каждого Строка Из ОформленияСтрок Цикл 
		ТекущийДокумент = Строка.ДанныеСтроки.Ссылка;
		
		Если ТекущийДокумент.ПометкаУдаления Тогда
				Строка.Ячейки.СостояниеОперации.Картинка = КартинкаУдаления;
				Строка.Ячейки.СостояниеОперации.ОтображатьКартинку = Истина;
				Строка.ЦветФона = WebЦвета.Белый;
			Иначе
		
			Если ТекущийДокумент.Состояние = Перечисления.ВидыСостоянийРегламентныхОпераций.Выполнено Тогда
				Строка.Ячейки.СостояниеОперации.Картинка = ?(ТекущийДокумент.РучнаяКорректировка, КартинкаИсправлено, КартинкаВыполнено);
				Строка.Ячейки.СостояниеОперации.ОтображатьКартинку = Истина;
				Строка.ЦветФона = WebЦвета.Белый;
			ИначеЕсли ТекущийДокумент.Состояние = Перечисления.ВидыСостоянийРегламентныхОпераций.ВыполненоСошибками Тогда
				Строка.Ячейки.СостояниеОперации.Картинка = КартинкаОшибок;
				Строка.Ячейки.СостояниеОперации.ОтображатьКартинку = Истина;
				Строка.ЦветФона = WebЦвета.АнтикБелый;
			ИначеЕсли ТекущийДокумент.Состояние = Перечисления.ВидыСостоянийРегламентныхОпераций.НеВыполнено Тогда
				Строка.Ячейки.СостояниеОперации.ОтображатьКартинку = Ложь;
				Строка.ЦветФона = WebЦвета.Белый;
			ИначеЕсли ТекущийДокумент.Состояние = Перечисления.ВидыСостоянийРегламентныхОпераций.Пропущено Тогда
				Строка.Ячейки.СостояниеОперации.Картинка = КартинкаПропущено;
				Строка.Ячейки.СостояниеОперации.ОтображатьКартинку = Истина;
				Строка.ЦветФона = WebЦвета.Белый;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла
	
КонецПроцедуры

Процедура ДействияФормыВыполнить(Кнопка)
	
    ТекущиеДанные = ЭлементыФормы.ДокументСписок.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	ТекущиеДанные.Ссылка.ПолучитьОбъект().ВыполнитьОперацию();

КонецПроцедуры

Процедура ДействияФормыОтменить(Кнопка)
	
    ТекущиеДанные = ЭлементыФормы.ДокументСписок.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	ТекущиеДанные.Ссылка.ПолучитьОбъект().ОтменитьОперацию();

КонецПроцедуры

Процедура ДействияФормыЗакрытиеМесяца(Кнопка)
	
    ТекущиеДанные = ЭлементыФормы.ДокументСписок.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		ТекДата = ТекущаяДата();
		ТекОрганизация = ЭлементыФормы.ПолеВводаОрганизация.Значение;
	Иначе
		ТекДата = ТекущиеДанные.Ссылка.Дата;
		ТекОрганизация = ТекущиеДанные.Ссылка.Организация;
	КонецЕсли;
	
	РегОперация = Обработки.ЗакрытиеМесяца;
	Форма = РегОперация.ПолучитьФорму("Форма");
	Форма.ПериодРегистрации = ТекДата;
	Форма.Организация = ТекОрганизация;
	Форма.Открыть();

КонецПроцедуры

Процедура ПолеВводаВидаОперацииПриИзменении(Элемент)
	Отбор.ВидОперации.Использование = ЗначениеЗаполнено(Элемент.Значение);
	ЭтаФорма.ВидТекущейОперации = Элемент.Значение;
КонецПроцедуры

Процедура ДокументСписокПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	Если Копирование Тогда
		Возврат;
	КонецЕсли;
	
	ВидОперации = ЭлементыФормы.ПолеВводаВидаОперации.Значение;
	Организация = ЭлементыФормы.ПолеВводаОрганизация.Значение;
	
	Если Не ЗначениеЗаполнено(ВидОперации) Тогда
		ВидыОпераций = Новый СписокЗначений;
		Для Счетчик = 0 По Перечисления.ВидыРегламентныхОпераций.Количество() - 1 Цикл
			ВидыОпераций.Добавить(Перечисления.ВидыРегламентныхОпераций.Получить(Счетчик));
		КонецЦикла;
		ВыбранныйВидОперации = ВидыОпераций.ВыбратьЭлемент("Выбор вида регламентной операции");
		Если ВыбранныйВидОперации = Неопределено Тогда
			ВидОперации = Неопределено
		Иначе
			ВидОперации = ВыбранныйВидОперации.Значение;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВидОперации) Тогда
		РегОперация = Документы.РегламентнаяОперация.СоздатьДокумент();
		РегОперация.ВидОперации = ВидОперации;
		РегОперация.Организация = Организация;
		Форма = РегОперация.ПолучитьФорму("ФормаДокумента");
		Форма.Открыть();
	КонецЕсли;
	Отказ = Истина;
КонецПроцедуры

Процедура ДокументСписокПриАктивизацииСтроки(Элемент)
	
	РаботаСДиалогами.ИзменитьПредставлениеКнопкиВыбораСвойств(ЭтаФорма, РаботаСДиалогами.ПолучитьОписаниеЗначенийСвойствОбъекта(ЭлементыФормы.ДокументСписок.ТекущаяСтрока));
	
КонецПроцедуры


КартинкаВыполнено  = БиблиотекаКартинок.ОперацияВыполненаУспешно;
КартинкаИсправлено = БиблиотекаКартинок.ОперацияИсправлена;
КартинкаОшибок     = БиблиотекаКартинок.ОперацияВыполненаСОшибками;
КартинкаУдаления   = БиблиотекаКартинок.УдаленныйДокумент;
КартинкаПропущено  = БиблиотекаКартинок.ОперацияПропущена;

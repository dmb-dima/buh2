Перем ОткрыватьНастройкуДвижений;

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
//

// Процедура выполняет открытие формы работы со свойствами документа
//
Процедура ДействияФормыДействиеОткрытьСвойства(Кнопка)

	РаботаСДиалогами.ОткрытьСвойстваДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

Процедура ПриОткрытии()
	                       
	Если ЭтоНовый() Тогда // проверить объект на то, что он еще не внесен в ИБ
		
		// Заполнить реквизиты значениями по умолчанию.
		ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, глЗначениеПеременной("глТекущийПользователь"), , "Продажа");
		Дата = ?(ЗначениеЗаполнено(Дата), КонецМесяца(Дата), КонецМесяца(ТекущаяДата()));
		
		Ошибки.Очистить();
		
		Если УстановитьСостояниеПропустить() Тогда
			Состояние = Перечисления.ВидыСостоянийРегламентныхОпераций.Пропущено;
		Иначе
			Состояние = Перечисления.ВидыСостоянийРегламентныхОпераций.НеВыполнено;
		КонецЕсли;
		
		// {ОбособленныеПодразделения
		
		Если ЗначениеЗаполнено(Организация) 
			И ОбщегоНазначения.ЭтоОбособленноеПодразделение(Организация) Тогда
			
			Если ВидОперации = Перечисления.ВидыРегламентныхОпераций.РасчетДолейСписанияКосвенныхРасходов Тогда
				Предупреждение("Для обособленного подразделения используется расчет долей косвенных расходов головной организации");
				Организация = ОбщегоНазначения.ГоловнаяОрганизация(Организация);
				
			КонецЕсли;
			Если ВидОперации = Перечисления.ВидыРегламентныхОпераций.СписаниеУбытковПрошлыхЛет 
				Или ВидОперации = Перечисления.ВидыРегламентныхОпераций.ЗакрытиеСчетов90_91 
				Или ВидОперации = Перечисления.ВидыРегламентныхОпераций.РасчетНалогаНаПрибыль Тогда
				
				Предупреждение("Регламентная операция """ + ВидОперации + """ проводится только для головной организации");
				Организация = ОбщегоНазначения.ГоловнаяОрганизация(Организация);
			КонецЕсли;
			
			
		КонецЕсли;
		
		// }ОбособленныеПодразделения 
		
	КонецЕсли;
	
	ЭтаФорма.ЭлементыФормы.НадписьВидОперации.Заголовок = ВидОперации;
	
	МеханизмНумерацииОбъектов.ДобавитьВМенюДействияКнопкуРедактированияНомера(ЭлементыФормы.ДействияФормы.Кнопки.Подменю);
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(
		Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Номер);
	
	// Проверка ведения однофирменности
	ОткрыватьНастройкуДвижений = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ПоказыватьДвиженияПриПроведении");
	
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(Строка(ВидОперации), ЭтотОбъект, ЭтаФорма);
	
	// Установить доступность формы с учетом даты запрета редактирования	
	ЗакрытиеМесяца.УстановитьДоступность(Организация, Дата, ЭтаФорма);
	
	ПредставлениеПериодаРегистрации    = РаботаСДиалогами.ПолучитьПредставлениеПериодаРегистрации(Дата);
	
	Если Не ЗакрытиеМесяца.СуществуетСправкаРасчет(ВидОперации) Тогда
		
		ЭтаФорма.ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Удалить(ЭтаФорма.ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОтчетОперации);
	КонецЕсли;
	
	РаботаСДиалогами.ИзменитьПредставлениеКнопкиВыбораСвойств(ЭтаФорма, РаботаСДиалогами.ПолучитьОписаниеЗначенийСвойствОбъекта(Ссылка));	
	
КонецПроцедуры // ПриОткрытии()

// Процедура - обработчик события "ПриЗакрытии" формы.
//
Процедура ПриЗакрытии()
			
	ОбщегоНазначения.ОткрытьЖурналДокумента(ЭтаФорма);

КонецПроцедуры


// Процедура - обработчик события "ПриИзменении" поля ПериодРегистрации (Дата)
// Обновляется список операции, согласно учетной политике установленной на указанную дату
//
Процедура ПредставлениеПериодаРегистрацииПриИзменении(Элемент)
	
	Если Состояние = Перечисления.ВидыСостоянийРегламентныхОпераций.НеВыполнено 
		И УстановитьСостояниеПропустить() Тогда
		Состояние = Перечисления.ВидыСостоянийРегламентныхОпераций.Пропущено;
	КонецЕсли;	
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ ПЕЧАТИ И ЗАПОЛНЕНИЯ ТЧ
//
// Процедура разрешения/запрещения редактирования номера документа
Процедура ДействияФормыРедактироватьНомер(Кнопка)
	
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ ПРЕДСТАВЛЕНИЯ ПЕРИОДА
//

// Процедура - обработчик события "Регулирование" элемента управления ПредставлениеПериодаРегистрации.
//
Процедура ПредставлениеПериодаРегистрацииРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	НачальнаяДатаДокумента = Дата;
	
	ТекущаяДата = ?(Направление > 0, Дата, НачалоМесяца(Дата));
	РаботаСДиалогами.РегулированиеПредставленияПериодаРегистрации(Направление, СтандартнаяОбработка, ТекущаяДата, ПредставлениеПериодаРегистрации);
	Дата = КонецМесяца(ТекущаяДата);
	
	РаботаСДиалогами.ПроверитьНомерДокумента(ЭтотОбъект, НачальнаяДатаДокумента);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	
КонецПроцедуры

// Процедура - обработчик события "НачалоВыбораИзСписка" элемента управления ПредставлениеПериодаРегистрации.
//
Процедура ПредставлениеПериодаРегистрацииНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	НачальнаяДатаДокумента = Дата;
	
	РаботаСДиалогами.НачалоВыбораИзСпискаПредставленияПериодаРегистрации(Элемент, СтандартнаяОбработка, Дата, ЭтаФорма);
	ПредставлениеПериодаРегистрацииПриИзменении(Элемент);
	Дата = КонецМесяца(Дата);
	
	РаботаСДиалогами.ПроверитьНомерДокумента(ЭтотОбъект, НачальнаяДатаДокумента);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	
КонецПроцедуры

Функция УстановитьСостояниеПропустить()
	
    Возврат ЗакрытиеМесяца.ПропущеноРанее(Организация,Дата,ВидОперации) 

КонецФункции

Процедура ОсновныеДействияФормыВыполнитьОперацию(Кнопка)
	
    Если ПроверкаПовторовВидовОпераций(Ложь, "Регламентная операция (" + ВидОперации + ")") Тогда
	
		ВыполнитьОперацию();
	    ОбщегоНазначения.РучнаяКорректировкаОсновнаяФормаПослеЗаписи(ЭтотОбъект.Проведен,ОткрыватьНастройкуДвижений,Ссылка,ЭтотОбъект);
		
		Если ЭтаФорма.Открыта() И Не Состояние = Перечисления.ВидыСостоянийРегламентныхОпераций.ВыполненоСошибками И Найти(Кнопка.Имя, "НеЗакрывать") = 0 Тогда
			Закрыть();
		КонецЕсли;
   КонецЕсли;
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(Строка(ВидОперации), ЭтотОбъект, ЭтаФорма);
   
КонецПроцедуры

Процедура ОсновныеДействияФормыОтменитьОперацию(Кнопка) Экспорт
	
	ОтменитьОперацию();
	
	Если ЭтаФорма.Открыта() И Найти(Кнопка.Имя, "НеЗакрывать") = 0 Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

Процедура ДействияФормыПропустить(Кнопка)
	
	Если Состояние = Перечисления.ВидыСостоянийРегламентныхОпераций.Пропущено Тогда
		Возврат;
	КонецЕсли;

	ПропуститьОперацию();
	
	Если ЭтаФорма.Открыта() И Найти(Кнопка.Имя, "НеЗакрывать") = 0 Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

Процедура ОсновныеДействияФормыНастройка(Кнопка)
	
	ОбщегоНазначения.РучнаяКорректировкаОсновнаяФорма(ЭтоНовый(),Ссылка,ЭтотОбъект);
	
КонецПроцедуры

Процедура ПоказатьСправку(Кнопка)
		ЗакрытиеМесяца.СформироватьСправкиРасчеты(Организация, Дата, ВидОперации);
КонецПроцедуры

Процедура ОбновлениеОтображения()
	
	ЕстьОшибки = НЕ (Ошибки.Количество() = 0);
	
	ЭтаФорма.ЭлементыФормы.НадписьСписокОшибок.Видимость   = ЕстьОшибки;
	ЭтаФорма.ЭлементыФормы.НадписьСписокОшибок.Доступность = ЕстьОшибки;
	ЭтаФорма.ЭлементыФормы.НадписьСписокОшибок.ЦветТекста = ?(ЕстьОшибки,WebЦвета.СветлоКоралловый,ЦветаСтиля.ЦветФонаФормы);
	ЭтаФорма.ЭлементыФормы.НадписьСписокОшибок.Картинка = ?(ЕстьОшибки,БиблиотекаКартинок.ОперацияВыполненаСОшибками, Новый Картинка);
	
	Если ЗакрытиеМесяца.СуществуетСправкаРасчет(ВидОперации) Тогда
		ЭтаФорма.ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОтчетОперации.Доступность = Не ЕстьОшибки;
	КонецЕсли;
	
	НадписьСостояниеРегОперации = ЭтаФорма.ЭлементыФормы.НадписьСостояниеРегОперации;
	Если Не ЗначениеЗаполнено(ВидОперации) Тогда
		НадписьСостояниеРегОперации = "Не выполнено";
	КонецЕсли;
	
	ЭтаФорма.ЭлементыФормы.Организация.Доступность = Не (Состояние = Перечисления.ВидыСостоянийРегламентныхОпераций.Выполнено);
	ЭтаФорма.ЭлементыФормы.ПредставлениеПериодаРегистрации.Доступность = Не (Состояние = Перечисления.ВидыСостоянийРегламентныхОпераций.Выполнено);
	ЭтаФорма.ЭлементыФормы.ДействияФормы.Кнопки.ОтменитьНеЗакрывать.Доступность = Не ЭтоНовый();
	
	
КонецПроцедуры

Процедура НадписьСписокОшибокНажатие(Элемент)
	
	ФормаОшибок = ЭтотОбъект.ПолучитьФорму("ФормаОшибок");
	ФормаОшибок.Открыть();

КонецПроцедуры

Процедура ОсновныеДействияФормыОткрытьЗакрытиеМесяца(Кнопка)
	РегОперация = Обработки.ЗакрытиеМесяца;
	Форма = РегОперация.ПолучитьФорму("Форма");
	Форма.ПериодРегистрации = Дата;
	Форма.Организация = Организация;
	Форма.Открыть();

КонецПроцедуры

Процедура ОрганизацияПриИзменении(Элемент)
	
	// {ОбособленныеПодразделения

	Если ЗначениеЗаполнено(Организация) 
		И ОбщегоНазначения.ЭтоОбособленноеПодразделение(Организация) Тогда
		
		Если ВидОперации = Перечисления.ВидыРегламентныхОпераций.РасчетДолейСписанияКосвенныхРасходов Тогда
			Предупреждение("Для обособленного подразделения используется расчет долей косвенных расходов головной организации");
			Организация = ОбщегоНазначения.ГоловнаяОрганизация(Организация);
		КонецЕсли;
		Если ВидОперации = Перечисления.ВидыРегламентныхОпераций.СписаниеУбытковПрошлыхЛет 
			Или ВидОперации = Перечисления.ВидыРегламентныхОпераций.ЗакрытиеСчетов90_91 
			Или ВидОперации = Перечисления.ВидыРегламентныхОпераций.РасчетНалогаНаПрибыль Тогда
			
			Предупреждение("Регламентная операция """ + ВидОперации + """ проводится только для головной организации");
			Организация = ОбщегоНазначения.ГоловнаяОрганизация(Организация);
		КонецЕсли;
		
	КонецЕсли;
	
	// }ОбособленныеПодразделения 
	
	Если Состояние = Перечисления.ВидыСостоянийРегламентныхОпераций.НеВыполнено 
		И УстановитьСостояниеПропустить() Тогда
		Состояние = Перечисления.ВидыСостоянийРегламентныхОпераций.Пропущено;
	КонецЕсли;	
	
	Если Не ПустаяСтрока(Номер) Тогда
		МеханизмНумерацииОбъектов.СброситьУстановленныйКодНомерОбъекта(ЭтотОбъект, "Номер", ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновлениеЗначенийСвойств" И Источник = Ссылка Тогда
		РаботаСДиалогами.ИзменитьПредставлениеКнопкиВыбораСвойств(ЭтаФорма, Параметр);
	КонецЕсли;
	
КонецПроцедуры





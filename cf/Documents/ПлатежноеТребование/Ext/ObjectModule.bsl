Перем мВалютаРегламентированногоУчета Экспорт;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

// Пересчитывает сумму НДС
//
// Параметры:
//  Нет.
//
Процедура ПересчитатьСуммуНДС() Экспорт

	ЗначениеСтавкиНДС = УчетНДС.ПолучитьСтавкуНДС(СтавкаНДС);
	СуммаНДС          = СуммаДокумента * ЗначениеСтавкиНДС / (100 + ЗначениеСтавкиНДС);

КонецПроцедуры // ПересчитатьСуммуНДС()

#Если Клиент Тогда
	
// Функция возвращает сформированную печатную форму документа
//
Функция ПечатьПлатежногоТребования()
	
	Если Организация.Пустая() Тогда
		Сообщить("Не указана организация.", СтатусСообщения.Важное);
		Возврат Неопределено;
	КонецЕсли;

	Если Контрагент.Пустая() Тогда
		Сообщить("Не указан контрагент.", СтатусСообщения.Важное);
		Возврат Неопределено;
	КонецЕсли;
	
	НомерПечать = ОбщегоНазначения.ПолучитьНомерНаПечать(ЭтотОбъект);

	Если Прав(НомерПечать,3) = "000" Тогда
		Сообщить("Номер платежного требования не может оканчиваться на ""000""!
		|(Приложение 12 к Положению Банка России ""О безналичных расчетах в Российской Федерации"" 
		|от 3 октября 2002 г. No. 2-П в ред. Указания ЦБ РФ от 03.03.2003 No. 1256-У)", 
		СтатусСообщения.Важное);
		Возврат Неопределено;
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПлатежноеТребование.Дата КАК ДатаВыписки,
	|	ПлатежноеТребование.Организация КАК Организация,
	|	ПлатежноеТребование.СчетОрганизации КАК СчетОрганизации,
	|	ПлатежноеТребование.Контрагент КАК Контрагент,
	|	ПлатежноеТребование.СчетКонтрагента КАК СчетКонтрагента,
	|	ПлатежноеТребование.СуммаДокумента КАК СуммаДокумента,
	|	ПлатежноеТребование.ВалютаДокумента КАК ВалютаДокумента,
	|	ПлатежноеТребование.ДатаОтсылкиДокументов КАК ДатаОтсылкиДокументов,
	|	ПлатежноеТребование.ВидПлатежа КАК ВидПлатежа,
	|	ПлатежноеТребование.ОчередностьПлатежа КАК ОчередностьПлатежа,
	|	ПлатежноеТребование.СрокДляАкцепта КАК СрокДляАкцепта,
	|	ВЫБОР
	|		КОГДА ПлатежноеТребование.САкцептом
	|			ТОГДА ""С акцептом""
	|		ИНАЧЕ ""Без акцепта "" + ПОДСТРОКА(ПлатежноеТребование.ОснованиеДляБезакцептногоСписания, 1, 200)
	|	КОНЕЦ КАК УсловиеОплаты,
	|	ПлатежноеТребование.НазначениеПлатежа КАК НазначениеПлатежа
	|ИЗ
	|	Документ.ПлатежноеТребование КАК ПлатежноеТребование
	|ГДЕ
	|	ПлатежноеТребование.Ссылка = &ТекущийДокумент";

	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();

	АвтоЗначенияРеквизитов = ФормированиеПечатныхФорм.СформироватьАвтоЗначенияРеквизитовПлательщикаПолучателя(
	                         Выборка.Контрагент, Выборка.СчетКонтрагента, Выборка.Организация, Выборка.СчетОрганизации, Ложь);

	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПлатежноеТребование_ПлатежноеТребование";
	
	Макет  = ПолучитьМакет("ПлатежноеТребование");

	Обл = Макет.ПолучитьОбласть();
	
	Обл.Параметры.Заполнить(Выборка);
	
	Обл.Параметры.Заполнить(АвтоЗначенияРеквизитов);
	
	Обл.Параметры.НаименованиеНомер = "ПЛАТЕЖНОЕ ТРЕБОВАНИЕ № " + НомерПечать;
	
	МесяцПрописью = СчетОрганизации.МесяцПрописью;
	ФорматДаты    = "ДФ=" + ?(МесяцПрописью, "'дд ММММ гггг'", "'дд.ММ.гггг'");

	Обл.Параметры.ДатаДокумента = Формат(Выборка.ДатаВыписки, ФорматДаты);
	
	// Сумма платежного документа
	
	СуммаБезКопеек  = СчетОрганизации.СуммаБезКопеек;
	Обл.Параметры.СуммаЧислом   = ФормированиеПечатныхФорм.ФорматироватьСуммуПлатежногоДокумента(
	                              Выборка.СуммаДокумента, СуммаБезКопеек);
	Обл.Параметры.СуммаПрописью = ФормированиеПечатныхФорм.ФорматироватьСуммуПрописьюПлатежногоДокумента(
	                              Выборка.СуммаДокумента, Выборка.ВалютаДокумента, СуммаБезКопеек);

	Обл.Параметры.ИННПлательщика = "ИНН " + Обл.Параметры.ИННПлательщика;
	Обл.Параметры.ИННПолучателя  = "ИНН " + Обл.Параметры.ИННПолучателя;
	
	ТабДок.Вывести(Обл);
	
	Возврат ТабДок;
	
КонецФункции // ПечатьПлатежногоТребования()

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходимое количество копий.
//
//  Название макета печати передается в качестве параметра,
//  по переданному названию находим имя макета в соответствии.
//
//  Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь, НепосредственнаяПечать = Ложь) Экспорт
	
	// Получить экземпляр документа на печать
	Если НЕ (ИмяМакета = Неопределено) Тогда
		ТабДокумент = ПечатьПлатежногоТребования();
	КонецЕсли;
	
	Если НЕ (ТабДокумент = Неопределено) Тогда
		УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, 
						   КоличествоЭкземпляров, 
						   НаПринтер, 
						   ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект, 
						   ЭтотОбъект.Метаданные().Представление()), 
						   НепосредственнаяПечать);
	КонецЕсли;
	
КонецПроцедуры // Печать

#КонецЕсли

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура("ПлатежноеТребование","Платежное требование");

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры // ПередЗаписью()

////////////////////////////////////////////////////////////////////////////////
// ТЕЛО МОДУЛЯ

мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();

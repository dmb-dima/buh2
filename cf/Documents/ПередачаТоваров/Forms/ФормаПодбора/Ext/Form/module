// Хранит текущую форму подбора номенклатуры
Перем мФормаПодбораНоменклатуры;

Процедура Подбор(Кнопка)
	ДействиеПодбор(Продукция)
КонецПроцедуры

Функция СформироватьСписокЗапросовДляПодбора(ТабличнаяЧасть)

	СписокЗапросов = Новый СписокЗначений();
	СписокЗапросов.Добавить(,"По справочнику");

	Возврат СписокЗапросов;

КонецФункции // СформироватьСписокЗапросовДляПодбора()

// Процедура вызывает сервисный механизм для подбора номенклатуры в табличную часть.
//
// Параметры:
//  ТабличнаяЧасть - табличная часть, в которую осуществляется подбор.
//
Процедура ДействиеПодбор(ТабличнаяЧасть)

	Перем Команда;

	ТипЦен    = Неопределено;
	ЕстьЦена  = Ложь;

		Команда           = "ПодборВТабличнуюЧастьТовары";
		ИмяТабличнойЧасти = "Продукция";

	СтруктураПараметровПодбора = Новый Структура();
	СтруктураПараметровПодбора.Вставить("Команда"            , Команда);
	
	СписокВидовПодбора = СформироватьСписокЗапросовДляПодбора(ТабличнаяЧасть);
	СтруктураПараметровПодбора.Вставить("СписокВидовПодбора" , СписокВидовПодбора);

	// Тип цен устанавливает склад получатель.
	СтруктураПараметровПодбора.Вставить("Заголовок",             "Подбор готовой продукции");

    РаботаСДиалогами.ОткрытьПодборНоменклатуры(ЭтаФорма, СтруктураПараметровПодбора, мФормаПодбораНоменклатуры);

КонецПроцедуры // ДействиеПодбор()

// Процедура - обработчик события "ОбработкаВыбора" формы.
//
Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	
	Перем Команда;
	
	ЗначениеВыбора.Свойство("Команда", Команда);
	
	ОбработкаПодбора(Продукция, ЗначениеВыбора);

КонецПроцедуры // ОбработкаВыбора()

// Производит заполнение документа переданными из формы подбора данными.
//
// Параметры:
//  ТабличнаяЧасть    - табличная часть, в которую надо добавлять подобранную позицию номенклатуры;
//  ЗначениеВыбора    - структура, содержащая параметры подбора.
//
Процедура ОбработкаПодбора(ТабличнаяЧасть, ЗначениеВыбора) 

	Перем СпособЗаполненияЦен, ВалютаЦены;
	Перем Номенклатура, ЕдиницаИзмерения, Количество, КоличествоМест, Цена;

	// Получим параметры подбора из структуры подбора.
	ЗначениеВыбора.Свойство("Номенклатура"    , Номенклатура);
	ЗначениеВыбора.Свойство("Количество"      , Количество);

	Если Номенклатура.Услуга Тогда
		Предупреждение("В данном контексте услуги не подбираются!");
		Возврат;
	КонецЕсли;

	// Расчет цены по валюте документа
	
	Продукция.Индексы.Добавить("Номенклатура");
	СтрокаТабличнойЧасти = Продукция.Найти(Номенклатура, "Номенклатура");
	Если СтрокаТабличнойЧасти <> Неопределено Тогда

				// Нашли, увеличиваем количество в первой найденной строке.
			СтрокаТабличнойЧасти.Количество = СтрокаТабличнойЧасти.Количество + Количество;

	Иначе
                  
		// Не нашли - добавляем новую строку.
		СтрокаТабличнойЧасти = Продукция.Добавить();

		СтрокаТабличнойЧасти.Номенклатура = Номенклатура;
		СтрокаТабличнойЧасти.Количество = Количество;
        СтрокаТабличнойЧасти.Спецификация = УправлениеПроизводством.ОпределитьСпецификациюПоУмолчанию(Номенклатура, РабочаяДата);
		
	КонецЕсли;
	
	ЭлементыФормы.Продукция.ОбновитьСтроки();
	
КонецПроцедуры // ОбработкаПодбора()

// Процедура обновляет параметры в форме подбора, если она открыта.
//
// Параметры:
//  Реквизит - измененный реквизит.
//
Процедура ОбновитьФормуПодбора(Реквизит)

	РаботаСДиалогами.ОбновитьПараметрыИФормуПодбора(ЭтотОбъект, мФормаПодбораНоменклатуры, Реквизит);

КонецПроцедуры // ОбновитьФормуПодбора()

Процедура ЗакрытьРассчитать(Кнопка)
	
    Материалы =  Новый ТаблицаЗначений;
	Материалы.Колонки.Добавить("Номенклатура");
	Материалы.Колонки.Добавить("Количество");
	
	Для Каждого Строка Из Продукция Цикл
		Если  Строка.Спецификация = Справочники.СпецификацииНоменклатуры.ПустаяСсылка() Тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого Комплектующие Из Строка.Спецификация.ИсходныеКомплектующие Цикл
			
			Всего = Строка.Спецификация.Количество;
			Если Всего = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			СтрокаМатериалы = Материалы.Добавить();
			СтрокаМатериалы.Номенклатура = Комплектующие.Номенклатура;
			СтрокаМатериалы.Количество   = Строка.Количество * (Комплектующие.Количество/Всего);
		КонецЦикла;
	КонецЦикла;

	ЭтотОбъект.Товары.Очистить();
	ЭтотОбъект.Товары.Загрузить(Материалы);
	ЭтотОбъект.Записать(РежимЗаписиДокумента.Запись);
	
	Для Каждого СтрокаТабличнойЧасти Из ЭтотОбъект.Товары Цикл
		СчетаУчета = БухгалтерскийУчет.ПолучитьСчетаУчетаНоменклатуры(Организация, СтрокаТабличнойЧасти.Номенклатура, Склад);
		СтрокаТабличнойЧасти.СчетУчета = СчетаУчета.СчетУчета;
		СтрокаТабличнойЧасти.СчетПередачи = СчетаУчета.СчетПередачи;
	КонецЦикла;
	
	ЭтотОбъект.Записать(РежимЗаписиДокумента.Запись);
	
	ЭтаФорма.Закрыть();

КонецПроцедуры

Процедура ПриОткрытии()
	
	ДействиеПодбор(Продукция)
	
КонецПроцедуры

Процедура ВнешнееСобытие(Источник, Событие, Данные)
	
	Если Не ВводДоступен() Тогда
		Возврат;
	КонецЕсли;

КонецПроцедуры

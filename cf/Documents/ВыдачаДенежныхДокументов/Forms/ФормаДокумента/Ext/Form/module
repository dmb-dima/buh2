////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

// Хранит текущую дату документа - для проверки перехода документа в другой период установки номера
Перем мТекущаяДатаДокумента;

// {ОбособленныеПодразделения
// Хранит текущее подразделение организации, используется для определения необходимости 
// установки нового номера документа, если документы по подразделению нумеруются отдельно.
Перем мТекущееПодразделениеОрганизации;
// }ОбособленныеПодразделения

// Хранит список видов договоров, доступных для данного документа
Перем мСписокВидовДоговоров;

// Хранит дерево макетов печатных форм
Перем мДеревоМакетов;

// Хранит элемент управления подменю печати
Перем мПодменюПечати;

// Хранит элемент управления кнопку печать по умолчанию
Перем мПечатьПоУмолчанию;

// Хранит дерево кнопок подменю заполнение ТЧ
Перем мКнопкиЗаполненияТЧ;

//Используется для определения необходимости открытия настроек движения после сохранения
Перем ОткрыватьНастройкуДвижений;

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ 

// Процедура устанавливает подменю "Заполнить" в командных панелях ТЧ документа при необходимости
//
Процедура УстановитьКнопкиПодменюЗаполненияТЧ()
	
	СоответствиеТЧ = Новый Соответствие;
	СоответствиеТЧ.Вставить(ЭлементыФормы.ДенежныеДокументы,ЭлементыФормы.КоманднаяПанельДенежныеДокументы);
	
	мКнопкиЗаполненияТЧ = УниверсальныеМеханизмы.СформироватьПодменюЗаполненияТЧ(
		Ссылка, СоответствиеТЧ, Новый Действие("НажатиеНаДополнительнуюКнопкуЗаполненияТЧ"));
	
КонецПроцедуры

// Процедура устанавливает подменю "Печать" и кнопку "Печать по умолчанию" при необходимости
//
Процедура УстановитьКнопкиПечати()
	
	мДеревоМакетов = УниверсальныеМеханизмы.ПолучитьДеревоМакетовПечати(
		Ссылка, ПолучитьСтруктуруПечатныхФорм(), 
		Новый Действие("ОсновныеДействияФормыПечать"), 
		Новый Действие("ОсновныеДействияФормыУстановитьПечатьПоУмолчанию"));

	УниверсальныеМеханизмы.УстановитьПодменюПечати(
		мПодменюПечати, ЭлементыФормы.ОсновныеДействияФормы, мДеревоМакетов.Строки.Количество() > 0);
	
	УниверсальныеМеханизмы.УстановитьПечатьПоУмолчанию(
		мПечатьПоУмолчанию, ЭлементыФормы.ОсновныеДействияФормы, мДеревоМакетов, Метаданные().Имя,
		Новый Действие("ОсновныеДействияФормыПечатьПоУмолчанию"));

	Если Не мПодменюПечати = Неопределено Тогда
		УниверсальныеМеханизмы.СформироватьПодменю(мДеревоМакетов, мПодменюПечати,Истина,Истина);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Процедура ЗаполнитьВыданоДаннымиФизЛица(ФизЛицо)

	Если ЗначениеЗаполнено(ФизЛицо) Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЕСТЬNULL(ФИОФизЛицСрезПоследних.Фамилия, ФизическиеЛица.Наименование) КАК Фамилия,
		|	ЕСТЬNULL(ФИОФизЛицСрезПоследних.Имя, """") КАК Имя,
		|	ЕСТЬNULL(ФИОФизЛицСрезПоследних.Отчество, """") КАК Отчество
		|ИЗ
		|	Справочник.ФизическиеЛица КАК ФизическиеЛица
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ФизЛицо = &ФизЛицо) КАК ФИОФизЛицСрезПоследних
		|		ПО ФизическиеЛица.Ссылка = ФИОФизЛицСрезПоследних.ФизЛицо
		|ГДЕ
		|	ФизическиеЛица.Ссылка = &ФизЛицо";
		Запрос.УстановитьПараметр("Дата", Дата);
		Запрос.УстановитьПараметр("ФизЛицо", ФизЛицо);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Выдано = Выборка.Фамилия+" "+Выборка.Имя+" "+Выборка.Отчество;
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

Процедура ПриИзмененииВалютыДокумента()

	СтруктураКурса = МодульВалютногоУчета.ПолучитьКурсВалюты(ВалютаДокумента, Дата);
	КурсВзаиморасчетов      = СтруктураКурса.Курс;
	КратностьВзаиморасчетов = СтруктураКурса.Кратность;

	Если (ВидОперации = Перечисления.ВидыОперацийВыдачаДенежныхДокументов.ВозвратПоставщику)
		И ЗначениеЗаполнено(ДоговорКонтрагента)
		И (ДоговорКонтрагента.ВалютаВзаиморасчетов <> ВалютаДокумента) Тогда
	
		ДоговорКонтрагента = Неопределено;
	
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриИзмененииВидаОперации()

	Если ВидОперации = Перечисления.ВидыОперацийВыдачаДенежныхДокументов.ВозвратПоставщику Тогда
		Контрагент = Справочники.Контрагенты.ПустаяСсылка();
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийВыдачаДенежныхДокументов.ВыдачаПодотчетномуЛицу Тогда
		Контрагент = Справочники.ФизическиеЛица.ПустаяСсылка();
	Иначе // .ПрочаяВыдача
		Контрагент = Неопределено;
	КонецЕсли;
	
	ДоговорКонтрагента = Неопределено;
	ПринятоОт          = "";
	
	СчетУчетаРасчетовСКонтрагентом = Неопределено;
	
	РаботаСДиалогами.ПриВыбореСчетаВТабличномПоле(СчетУчетаРасчетовСКонтрагентом,
		СубконтоДт1, ЭлементыФормы.СубконтоДт1,
		СубконтоДт2, ЭлементыФормы.СубконтоДт2,
		СубконтоДт3, ЭлементыФормы.СубконтоДт3);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ УПРАВЛЕНИЯ ВНЕШНИМ ВИДОМ ФОРМЫ

Процедура УстановитьВидимость()
	
	ЭлементыФормы.ОсновнаяПанель.Страницы.СчетаДоходовИРасходов.Видимость = 
		(ВидОперации = Перечисления.ВидыОперацийВыдачаДенежныхДокументов.ВозвратПоставщику);
		
	ЭлементыФормы.ДействияФормы.Кнопки.НастройкаУСН.Доступность = НалоговыйУчетУСН.ПрименениеУСН(Организация, Дата);
	
	Если ВидОперации = Перечисления.ВидыОперацийВыдачаДенежныхДокументов.ВозвратПоставщику Тогда
		ЭлементыФормы.ПанельВидаОперации.ТекущаяСтраница = ЭлементыФормы.ПанельВидаОперации.Страницы.ВозвратПоставщику;
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийВыдачаДенежныхДокументов.ВыдачаПодотчетномуЛицу Тогда
		ЭлементыФормы.ПанельВидаОперации.ТекущаяСтраница = ЭлементыФормы.ПанельВидаОперации.Страницы.ВыдачаПодотчетномуЛицу;
		ЭлементыФормы.ДействияФормы.Кнопки.НастройкаУСН.Доступность = НалоговыйУчетУСН.ПрименениеУСНДоходы(Организация, Дата);
	Иначе
		ЭлементыФормы.ПанельВидаОперации.ТекущаяСтраница = ЭлементыФормы.ПанельВидаОперации.Страницы.Прочее;
	КонецЕсли;
	
	ЭлементыФормы.ВалютаДокумента.Видимость        = СчетУчетаДенежныхДокументов.Валютный;
	ЭлементыФормы.НадписьВалютаДокумента.Видимость = СчетУчетаДенежныхДокументов.Валютный;
	
	ЭлементыФормы.ДенежныеДокументы.Колонки.Сумма.Видимость =
		(ВидОперации = Перечисления.ВидыОперацийВыдачаДенежныхДокументов.ВозвратПоставщику);
		
	УстановитьВидимостьСубконто();

КонецПроцедуры // УстановитьВидимость()

Процедура УстановитьВидимостьСубконто()

	Для Ном = 1 по 3 Цикл

		Если ЗначениеЗаполнено(СчетУчетаРасчетовСКонтрагентом) 
			И (Ном <= СчетУчетаРасчетовСКонтрагентом.ВидыСубконто.Количество()) Тогда
			
			ЭлементыФормы["НадписьСубконтоДт"+Ном].Заголовок = 
				Строка(СчетУчетаРасчетовСКонтрагентом.ВидыСубконто[Ном-1].ВидСубконто);
			ЭлементыФормы["НадписьСубконтоДт"+Ном].Видимость = Истина;
			ЭлементыФормы["СубконтоДт"+Ном].Видимость        = Истина;
			
		Иначе
			
			ЭлементыФормы["НадписьСубконтоДт"+Ном].Видимость = Ложь;
			ЭлементыФормы["СубконтоДт"+Ном].Видимость        = Ложь;
			
		КонецЕсли;

	КонецЦикла;

КонецПроцедуры // УстановитьВидимостьСубконто()

// Процедура формирует текст в информационной надписи об итогах документа.
//
// Параметры:
//  Нет.
//
Процедура ОбновитьПодвал()

	// При изменении данных обновим суммы в подвале.
	ЭлементыФормы.Всего.Значение    = ОбщегоНазначения.ФорматСумм(ДенежныеДокументы.Итог("Стоимость"));

	Если НЕ ЗначениеЗаполнено(ДокументОбъект.ВалютаДокумента) Тогда
		ЭлементыФормы.НадписьВсего.Заголовок = "Всего (<>):";
	Иначе
		ЭлементыФормы.НадписьВсего.Заголовок = "Всего (" + СокрЛП(ДокументОбъект.ВалютаДокумента) +"):";
	КонецЕсли;

КонецПроцедуры // ОбновитьПодвал()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СВОЙСТВ И КАТЕГОРИЙ

// Процедура выполняет открытие формы работы со свойствами документа
//
Процедура ДействияФормыДействиеОткрытьСвойства(Кнопка)

	РаботаСДиалогами.ОткрытьСвойстваДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если ЭтоНовый() Тогда // проверить объект на то, что он еще не внесен в ИБ
		РаботаСДиалогами.ВыбратьВидОперации(ЭтотОбъект, Отказ);
	КонецЕсли;
	
	// Установка кнопок печати
	УстановитьКнопкиПечати();
	
	// Установка кнопок заполнение ТЧ
	УстановитьКнопкиПодменюЗаполненияТЧ();
	
КонецПроцедуры // ПередОткрытием()

Процедура ПриОткрытии()
	
	Если ЭтоНовый() Тогда // проверить объект на то, что он еще не внесен в ИБ

		// Заполнить реквизиты значениями по умолчанию.
		ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(
			ЭтотОбъект, глЗначениеПеременной("глТекущийПользователь"), 
			мВалютаРегламентированногоУчета, "Продажа", ПараметрОбъектКопирования);

		ПриИзмененииВалютыДокумента();
			
		Если НЕ ЗначениеЗаполнено(ПараметрОбъектКопирования) Тогда
			
			СчетУчетаДенежныхДокументов = ПланыСчетов.Хозрасчетный.ДенежныеДокументы;
			
			ПриИзмененииВидаОперации();
			
		КонецЕсли;

	КонецЕсли;
	
	МеханизмНумерацииОбъектов.ДобавитьВМенюДействияКнопкуРедактированияНомера(ЭлементыФормы.ДействияФормы.Кнопки.Подменю1);
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(
		Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю1,ЭлементыФормы.Номер);
            
	//Устанавливает необходимость открытия настроек движения после сохранения
	ОткрыватьНастройкуДвижений = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(
		глЗначениеПеременной("глТекущийПользователь"), "ПоказыватьДвиженияПриПроведении");

	// Заполняем подменю, вызываемое нажатием кнопки "Операция" командной панели 
	// формы, значениями перечисления "Вид операции" данного вида документа.
	// В качестве обработки выбора вида операции назначается процедура 
	// ДействияФормыДействиеУстановитьОперацию модуля формы.
	РаботаСДиалогами.УстановитьПодменюВыбораВидаОперации(
		ЭлементыФормы.ДействияФормы.Кнопки.ПодменюВидаОперации,
		ВидОперации.Метаданные().ЗначенияПеречисления,
		Новый Действие("ДействияФормыДействиеУстановитьОперацию"));

	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(Строка(ВидОперации), ЭтотОбъект, ЭтаФорма);

	// Запомнить текущие значения реквизитов формы.
	мТекущаяДатаДокумента        = Дата;
	// {ОбособленныеПодразделения
	мТекущееПодразделениеОрганизации = ПодразделениеОрганизации;
    // }ОбособленныеПодразделения
	
	// Установить видимость реквизитов и заголовков колонок.
	УстановитьВидимость();
	
	// Установить активный реквизит.
	СтруктураРеквизитов = Новый Структура("Дата,Организация,ПодразделениеОрганизации,СчетУчетаДенежныхДокументов");
	Если ВидОперации = Перечисления.ВидыОперацийВыдачаДенежныхДокументов.ВозвратПоставщику Тогда
		СтруктураРеквизитов.Вставить("Контрагент");
		СтруктураРеквизитов.Вставить("ДоговорКонтрагента");
		СтруктураРеквизитов.Вставить("СчетУчетаРасчетовСКонтрагентом");
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийВыдачаДенежныхДокументов.ВыдачаПодотчетномуЛицу Тогда
		СтруктураРеквизитов.Вставить("ПодотчетноеЛицо");
	Иначе //.ПрочаяВыдача
		СтруктураРеквизитов.Вставить("СчетУчетаРасчетовСКонтрагентомПрочее");
	КонецЕсли;
	РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма, СтруктураРеквизитов);

    // Установить доступность формы с учетом даты запрета редактирования	
	РаботаСДиалогами.УстановитьДоступностьФормыДляРедактирования(ЭтотОбъект, ЭтаФорма);
	
	РаботаСДиалогами.ИзменитьПредставлениеКнопкиВыбораСвойств(
		ЭтаФорма, РаботаСДиалогами.ПолучитьОписаниеЗначенийСвойствОбъекта(Ссылка));
	
КонецПроцедуры // ПриОткрытии()

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновлениеЗначенийСвойств" И Источник = Ссылка Тогда
		РаботаСДиалогами.ИзменитьПредставлениеКнопкиВыбораСвойств(ЭтаФорма, Параметр);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновлениеОтображения()

	ОбновитьПодвал();

	// Подсчитаем количество строк в табличных частях.
	ЭлементыФормы.ОсновнаяПанель.Страницы.ДенежныеДокументы.Заголовок = 
		"Денежные документы (" + ДокументОбъект.ДенежныеДокументы.Количество() + " поз.)";
	
КонецПроцедуры // ОбновлениеОтображения()

Процедура ПослеЗаписи()

	УстановитьКнопкиПечати();

	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(Строка(ВидОперации), ЭтотОбъект, ЭтаФорма);
	
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(
		ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю1, ЭлементыФормы.Номер);

	//Открыть настройку движений
	ОбщегоНазначения.РучнаяКорректировкаОсновнаяФормаПослеЗаписи(
		ЭтотОбъект.Проведен, ОткрыватьНастройкуДвижений, Ссылка, ЭтотОбъект);

КонецПроцедуры // ПослеЗаписи()

Процедура ПриЗакрытии()
	
	ОбщегоНазначения.ОткрытьЖурналДокумента(ЭтаФорма);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Процедура вызывается при выборе пункта подменю "ПодменюВидаОперации" командной панели формы.
// Процедура устанавливает значение реквизита ВидОперации.
//
Процедура ДействияФормыДействиеУстановитьОперацию(Кнопка)

	ПредыдущийВидОперации = ВидОперации;
	Если Кнопка <> Неопределено Тогда
		ВидОперации = Перечисления.ВидыОперацийВыдачаДенежныхДокументов[Кнопка.Имя];
	КонецЕсли;
	Если ПредыдущийВидОперации = ВидОперации Тогда 
		Возврат;
	КонецЕсли;
	
	ПриИзмененииВидаОперации();
	
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(Строка(ВидОперации), ЭтотОбъект, ЭтаФорма);

	УстановитьВидимость();
	НалоговыйУчетУСН.ЗаполнитьНастройкуКУДиР(ЭтотОбъект, Истина);

КонецПроцедуры // ДействияФормыДействиеУстановитьОперацию()

// Процедура вызова структуры подчиненности документа
//
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
	
КонецПроцедуры

// Процедура разрешения/запрещения редактирования номера документа
//
Процедура ДействияФормыРедактироватьНомер(Кнопка)
	
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(
		ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю1, ЭлементыФормы.Номер);
			
КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ОсновныеДействияФормыНастройка(Кнопка)

	//Открывает форму движений документа для ручного редактирования
	ОбщегоНазначения.РучнаяКорректировкаОсновнаяФорма(ЭтоНовый(), Ссылка, ЭтотОбъект);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

// Процедура - обработчик нажатия на любую из дополнительных кнопок по заполнению ТЧ
//
Процедура НажатиеНаДополнительнуюКнопкуЗаполненияТЧ(Кнопка)
	
	УниверсальныеМеханизмы.ОбработатьНажатиеНаДополнительнуюКнопкуЗаполненияТЧ(
		мКнопкиЗаполненияТЧ.Строки.Найти(Кнопка.Имя,"Имя",Истина), ЭтотОбъект);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать по умолчанию"
//
Процедура ОсновныеДействияФормыПечатьПоУмолчанию(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать"
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Установить печать по умолчанию"
//
Процедура ОсновныеДействияФормыУстановитьПечатьПоУмолчанию(Кнопка)
	
	Если УниверсальныеМеханизмы.НазначитьКнопкуПечатиПоУмолчанию(мДеревоМакетов, Метаданные().Имя) Тогда
		
		УстановитьКнопкиПечати();
		
	КонецЕсли; 
	
	
КонецПроцедуры

Процедура ДействияФормыНастройкаУСН(Кнопка)

	НалоговыйУчетУСН.ЗаполнитьНастройкуКУДиР(ЭтотОбъект);
	
	ФормаНастройки = ПолучитьОбщуюФорму("ФормаНастройкиПлатежаУСН");

	ФормаНастройки.Графа4       = Графа4_УСН;
	ФормаНастройки.Графа5       = Графа5_УСН;
	ФормаНастройки.Графа6       = Графа6_УСН;
	ФормаНастройки.Графа7       = Графа7_УСН;
	ФормаНастройки.НДС          = НДС_УСН;
	ФормаНастройки.ДоходЕНВД    = ДоходыЕНВД_УСН;
	ФормаНастройки.РасходЕНВД   = РасходыЕНВД_УСН;
	ФормаНастройки.Содержание   = Содержание_УСН;
	ФормаНастройки.ТолькоДоходы = НалоговыйУчетУСН.ПрименениеУСНДоходы(Организация, Дата);
	ФормаНастройки.АвтоРежим 	= НЕ РучнаяНастройка_УСН;

	СтруктураПараметров = ФормаНастройки.ОткрытьМодально();

	Если СтруктураПараметров = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Графа4_УСН      = СтруктураПараметров.Графа4;
	Графа5_УСН      = СтруктураПараметров.Графа5;
	Графа6_УСН      = СтруктураПараметров.Графа6;
	Графа7_УСН      = СтруктураПараметров.Графа7;
	НДС_УСН         = СтруктураПараметров.НДС;
	ДоходыЕНВД_УСН  = СтруктураПараметров.ДоходыЕНВД;
	РасходыЕНВД_УСН = СтруктураПараметров.РасходыЕНВД;
	Содержание_УСН  = СтруктураПараметров.Содержание;
	РучнаяНастройка_УСН = НЕ СтруктураПараметров.АвтоРежим;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

Процедура ДатаПриИзменении(Элемент)

	РаботаСДиалогами.ПроверитьНомерДокумента(ЭтотОбъект, мТекущаяДатаДокумента);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(
		ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю1, ЭлементыФормы.Номер);
	РаботаСДиалогами.ПриИзмененииЗначенияДатыДокумента(ЭтотОбъект, мВалютаРегламентированногоУчета);

	мТекущаяДатаДокумента = Дата; // запомним текущую дату документа для контроля номера документа
	
	УстановитьВидимость();
	
КонецПроцедуры // ДатаПриИзменении()

Процедура ОрганизацияПриИзменении(Элемент)

	Если НЕ ПустаяСтрока(Номер) Тогда
		МеханизмНумерацииОбъектов.СброситьУстановленныйКодНомерОбъекта(
			ЭтотОбъект, "Номер", ЭлементыФормы.ДействияФормы.Кнопки.Подменю1, ЭлементыФормы.Номер);
	КонецЕсли;
	
	// Выполняем общие действия для всех документов при изменении Организация.
	ЗаполнениеДокументов.ПриИзмененииЗначенияОрганизации(ЭтотОбъект, глЗначениеПеременной("глТекущийПользователь"));
	
	УстановитьВидимость();
	
КонецПроцедуры // ОрганизацияПриИзменении()

Процедура КонтрагентПриИзменении(Элемент)

	ЗаполнениеДокументов.ПриИзмененииЗначенияКонтрагента(ЭтотОбъект,мСписокВидовДоговоров);

	СведенияОКонтрагенте = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Контрагент, Дата);
	Выдано = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОКонтрагенте, "НаименованиеДляПечатныхФорм,");

КонецПроцедуры // КонтрагентПриИзменении()

Процедура ДоговорКонтрагентаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтруктураДопПараметров = Новый Структура;
	СтруктураОтбора = Новый Структура("ЗначениеОтбора", ВалютаДокумента);
	СтруктураДопПараметров.Вставить("ВалютаВзаиморасчетов", СтруктураОтбора);
	РаботаСДиалогами.НачалоВыбораЗначенияДоговораКонтрагента(
		ЭтотОбъект, ЭтаФорма, Элемент, 
		Контрагент, ДоговорКонтрагента, мСписокВидовДоговоров, СтандартнаяОбработка, СтруктураДопПараметров);

КонецПроцедуры // ДоговорКонтрагентаНачалоВыбора()

Процедура ДоговорКонтрагентаПриИзменении(Элемент)

	УстановитьВидимость();

КонецПроцедуры // ДоговорКонтрагентаПриИзменении()

Процедура СчетУчетаРасчетовСКонтрагентомОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	СтандартнаяОбработка = БухгалтерскийУчет.СчетМожноИспользоватьВПроводках(ВыбранноеЗначение);

КонецПроцедуры

Процедура СчетУчетаРасчетовСКонтрагентомПрочееПриИзменении(Элемент)
	
	РаботаСДиалогами.ПриВыбореСчетаВТабличномПоле(Элемент.Значение,
		СубконтоДт1, ЭлементыФормы.СубконтоДт1,
		СубконтоДт2, ЭлементыФормы.СубконтоДт2,
		СубконтоДт3, ЭлементыФормы.СубконтоДт3);
		
	УстановитьВидимостьСубконто();
	
КонецПроцедуры

// {ОбособленныеПодразделения

Процедура ПодразделениеОрганизацииПриИзменении(Элемент)
	
 	ПриИзмененииПодразделенияОрганизации();

КонецПроцедуры

Процедура ПриИзмененииПодразделенияОрганизации()
	
	Если НЕ ПустаяСтрока(Номер) 
		И РаботаСДиалогами.ИзменилсяПрефиксПодразделенияОрганизации(
			мТекущееПодразделениеОрганизации, ПодразделениеОрганизации) Тогда
			
		МеханизмНумерацииОбъектов.СброситьУстановленныйКодНомерОбъекта(
			ЭтотОбъект, "Номер", ЭлементыФормы.ДействияФормы.Кнопки.Подменю1, ЭлементыФормы.Номер);
		
	КонецЕсли;
	
	мТекущееПодразделениеОрганизации = ПодразделениеОрганизации;
	
КонецПроцедуры // ПриИзмененииПодразделенияОрганизации()

// }ОбособленныеПодразделения

Процедура СчетУчетаДенежныхДокументовОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	СтандартнаяОбработка = БухгалтерскийУчет.СчетМожноИспользоватьВПроводках(ВыбранноеЗначение);

КонецПроцедуры

Процедура СчетУчетаДенежныхДокументовПриИзменении(Элемент)
	
	Если НЕ СчетУчетаДенежныхДокументов.Валютный Тогда
		ВалютаДокумента = мВалютаРегламентированногоУчета;
		ПриИзмененииВалютыДокумента();
	КонецЕсли;
	
	УстановитьВидимость();
	
КонецПроцедуры

Процедура ВалютаДокументаПриИзменении(Элемент)
	
	ПриИзмененииВалютыДокумента();
	
КонецПроцедуры

Процедура ПодотчетноеЛицоПриИзменении(Элемент)
	
	ЗаполнитьВыданоДаннымиФизЛица(Контрагент);
	
КонецПроцедуры

Процедура ВыданоПрочееНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ФормаВыбора = Справочники.ФизическиеЛица.ПолучитьФормуВыбора(, Элемент);
	ФормаВыбора.Открыть();
	
КонецПроцедуры

Процедура ВыданоПрочееОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
		ЗаполнитьВыданоДаннымиФизЛица(ВыбранноеЗначение);
	КонецЕсли;
	
КонецПроцедуры

Процедура СчетУчетаДоходовОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	СтандартнаяОбработка = БухгалтерскийУчет.СчетМожноИспользоватьВПроводках(ВыбранноеЗначение);

КонецПроцедуры

Процедура СчетУчетаРасходовОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	СтандартнаяОбработка = БухгалтерскийУчет.СчетМожноИспользоватьВПроводках(ВыбранноеЗначение);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТЧ ДЕНЕЖНЫЕ ДОКУМЕНТЫ

Процедура ДенежныеДокументыДенежныйДокументПриИзменении(Элемент)

	СтрокаТЧ = ЭлементыФормы.ДенежныеДокументы.ТекущиеДанные;
	Если СтрокаТЧ.Количество = 0 Тогда
		СтрокаТЧ.Количество = 1;
	КонецЕсли;
	
	СтрокаТЧ.Стоимость = СтрокаТЧ.ДенежныйДокумент.Стоимость * СтрокаТЧ.Количество;
	Если ВидОперации = Перечисления.ВидыОперацийВыдачаДенежныхДокументов.ВозвратПоставщику Тогда
		СтрокаТЧ.Сумма = СтрокаТЧ.Стоимость;
	КонецЕсли;
	
КонецПроцедуры

Процедура ДенежныеДокументыКоличествоПриИзменении(Элемент)

	СтрокаТЧ = ЭлементыФормы.ДенежныеДокументы.ТекущиеДанные;
	
	СтрокаТЧ.Стоимость = СтрокаТЧ.ДенежныйДокумент.Стоимость * СтрокаТЧ.Количество;
	Если ВидОперации = Перечисления.ВидыОперацийВыдачаДенежныхДокументов.ВозвратПоставщику Тогда
		СтрокаТЧ.Сумма = СтрокаТЧ.Стоимость;
	КонецЕсли;

КонецПроцедуры

Процедура ДенежныеДокументыСтоимостьПриИзменении(Элемент)
	
	СтрокаТЧ = ЭлементыФормы.ДенежныеДокументы.ТекущиеДанные;
	
	Если ВидОперации = Перечисления.ВидыОперацийВыдачаДенежныхДокументов.ВозвратПоставщику Тогда
		СтрокаТЧ.Сумма = СтрокаТЧ.Стоимость;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОсновнаяПанельПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.СчетаДоходовИРасходов Тогда
		
		ОтметкаНезаполненного = Ложь;
		Для каждого СтрокаДенежногоДокумента Из ДенежныеДокументы Цикл
			
			Если СтрокаДенежногоДокумента.Стоимость <> СтрокаДенежногоДокумента.Сумма Тогда
				ОтметкаНезаполненного = Истина;
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
		ЭлементыФормы.СтатьяДоходовИРасходов.АвтоОтметкаНезаполненного = ОтметкаНезаполненного;
		ЭлементыФормы.СчетУчетаДоходов.АвтоОтметкаНезаполненного       = ОтметкаНезаполненного;
		ЭлементыФормы.СчетУчетаРасходов.АвтоОтметкаНезаполненного      = ОтметкаНезаполненного;
	
		ЭлементыФормы.СтатьяДоходовИРасходов.АвтоВыборНезаполненного = ОтметкаНезаполненного;
		ЭлементыФормы.СчетУчетаДоходов.АвтоВыборНезаполненного       = ОтметкаНезаполненного;
		ЭлементыФормы.СчетУчетаРасходов.АвтоВыборНезаполненного      = ОтметкаНезаполненного;
		
		Если НЕ ОтметкаНезаполненного Тогда
			ЭлементыФормы.СтатьяДоходовИРасходов.ОтметкаНезаполненного = Ложь;
			ЭлементыФормы.СчетУчетаДоходов.ОтметкаНезаполненного       = Ложь;
			ЭлементыФормы.СчетУчетаРасходов.ОтметкаНезаполненного      = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры


мСписокВидовДоговоров = Новый СписокЗначений;
мСписокВидовДоговоров.Добавить(Перечисления.ВидыДоговоровКонтрагентов.Прочее);

////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

// Хранит текущую дату документа - для проверки перехода документа в другой период установки номера
Перем мТекущаяДатаДокумента; 
// Хранит дерево макетов печатных форм
Перем мДеревоМакетов;
// Хранит элемент управления подменю печати
Перем мПодменюПечати;
// Хранит элемент управления кнопку печать по умолчанию
Перем мПечатьПоУмолчанию;
// Хранит дерево кнопок подменю заполнение ТЧ
Перем мКнопкиЗаполненияТЧ;

Перем ОткрыватьНастройкуДвижений;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Процедура ПриИзмененииДоговора()

	Если ДоговорКонтрагента.ВалютаВзаиморасчетов <> мВалютаРегламентированногоУчета Тогда
		ДоговорКонтрагента = Неопределено;
	КонецЕсли;
	
	СчетФактура = Неопределено;
	ВычетНДС.Очистить();
	ВосстановлениеНДС.Очистить();
		
КонецПроцедуры

Процедура ЗаполнитьСпискиВыбораРеквизитовСчетаФактуры(Реквизиты)

	ЭлементыФормы.НаименованиеПродавца.СписокВыбора.Очистить();
	ЭлементыФормы.НаименованиеПродавца.СписокВыбора.Добавить(Реквизиты.НаименованиеПродавца);

	ЭлементыФормы.ИННПродавца.СписокВыбора.Очистить();
	ЭлементыФормы.ИННПродавца.СписокВыбора.Добавить(Реквизиты.ИННПродавца);
	
	ЭлементыФормы.КПППродавца.СписокВыбора.Очистить();
	ЭлементыФормы.КПППродавца.СписокВыбора.Добавить(Реквизиты.КПППродавца);
	
КонецПроцедуры

Процедура ЗаполнитьРеквизитыКорректируемогоСчетаФактуры()

	РеквизитыСФ = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(СчетФактура, 
		"НомерВходящегоДокумента,ДатаВходящегоДокумента");
	НомерСчетаФактуры = РеквизитыСФ.НомерВходящегоДокумента;
	ДатаСчетаФактуры  = РеквизитыСФ.ДатаВходящегоДокумента;

КонецПроцедуры

Процедура ОбработатьОкончаниеВводаСтавкиНДС(Элемент, Текст, Значение, СтандартнаяОбработка)

	Если Текст = "18" ИЛИ Текст = "18%" Тогда
		Значение = Перечисления.СтавкиНДС.НДС18;
		СтандартнаяОбработка = Ложь;
	ИначеЕсли Текст = "10" ИЛИ Текст = "10%" Тогда
		Значение = Перечисления.СтавкиНДС.НДС10;
		СтандартнаяОбработка = Ложь;
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ УПРАВЛЕНИЯ ВНЕШНИМ ВИДОМ ФОРМЫ

Процедура УстановитьВидимость()
	
	ДоговорСКомитентом = (ДоговорКонтрагента.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомитентом);
	
	ДоступенВычет = НЕ ДоговорСКомитентом;
	ЭлементыФормы.ВычетНДС.Доступность = ДоступенВычет;
	
	ДоступноВосстановление = НЕ ДоговорСКомитентом;
	ЭлементыФормы.ВосстановлениеНДС.Доступность = ДоступноВосстановление;
	
КонецПроцедуры

// Процедура устанавливает подменю "Заполнить" в командных панелях ТЧ документа при необходимости
//
Процедура УстановитьКнопкиПодменюЗаполненияТЧ()
	
	СоответствиеТЧ = Новый Соответствие;
	
	мКнопкиЗаполненияТЧ = УниверсальныеМеханизмы.СформироватьПодменюЗаполненияТЧ(
		Ссылка, СоответствиеТЧ, Новый Действие("НажатиеНаДополнительнуюКнопкуЗаполненияТЧ"));
	
КонецПроцедуры

// Процедура устанавливает подменю "Печать" и кнопку "Печать по умолчанию" при необходимости
//
Процедура УстановитьКнопкиПечати()
	
	мДеревоМакетов = УниверсальныеМеханизмы.ПолучитьДеревоМакетовПечати(
		Ссылка, ПолучитьСтруктуруПечатныхФорм(), 
		Новый Действие("ОсновныеДействияФормыПечать"), Новый Действие("ОсновныеДействияФормыУстановитьПечатьПоУмолчанию"));

	УниверсальныеМеханизмы.УстановитьПодменюПечати(
		мПодменюПечати, ЭлементыФормы.ОсновныеДействияФормы, мДеревоМакетов.Строки.Количество() > 0);
	УниверсальныеМеханизмы.УстановитьПечатьПоУмолчанию(
		мПечатьПоУмолчанию, ЭлементыФормы.ОсновныеДействияФормы, мДеревоМакетов, Метаданные().Имя,
		Новый Действие("ОсновныеДействияФормыПечатьПоУмолчанию"));

	Если НЕ мПодменюПечати = Неопределено Тогда
		УниверсальныеМеханизмы.СформироватьПодменю(мДеревоМакетов, мПодменюПечати,Истина,Истина);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СВОЙСТВ И КАТЕГОРИЙ

// Процедура выполняет открытие формы работы со свойствами документа
//
Процедура ДействияФормыДействиеОткрытьСвойства(Кнопка)

	РаботаСДиалогами.ОткрытьСвойстваДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	// Установка кнопок печати
	УстановитьКнопкиПечати();
	
	// Установка кнопок заполнение ТЧ
	УстановитьКнопкиПодменюЗаполненияТЧ();
	
КонецПроцедуры 

Процедура ПриОткрытии()

	МеханизмНумерацииОбъектов.ДобавитьВМенюДействияКнопкуРедактированияНомера(
		ЭлементыФормы.ДействияФормы.Кнопки.Подменю);
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(
		Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Номер);
	
	ОткрыватьНастройкуДвижений = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(
		глЗначениеПеременной("глТекущийПользователь"), "ПоказыватьДвиженияПриПроведении");

	// Запомнить текущие значения реквизитов формы.
	мТекущаяДатаДокумента = Дата;
	
	// Вывести в заголовке формы статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);

	// Установить активный реквизит.
	СтруктураРеквизитов = Новый Структура("Дата,Организация,Контрагент,ДоговорКонтрагента,СчетФактура,
		|НомерВходящегоДокумента,ДатаВходящегоДокумента");
	РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма,СтруктураРеквизитов);
	
	// Установить доступность формы с учетом даты запрета редактирования	
	РаботаСДиалогами.УстановитьДоступностьФормыДляРедактирования(ЭтотОбъект, ЭтаФорма);
	
	РеквизитыПродавца = ПолучитьРеквизитыПродавца(Контрагент, Дата);
	ЗаполнитьСпискиВыбораРеквизитовСчетаФактуры(РеквизитыПродавца);
	
	ЗаполнитьРеквизитыКорректируемогоСчетаФактуры();
	УстановитьВидимость();
	
	РаботаСДиалогами.ИзменитьПредставлениеКнопкиВыбораСвойств(
		ЭтаФорма, РаботаСДиалогами.ПолучитьОписаниеЗначенийСвойствОбъекта(Ссылка));

КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновлениеЗначенийСвойств" И Источник = Ссылка Тогда
		РаботаСДиалогами.ИзменитьПредставлениеКнопкиВыбораСвойств(ЭтаФорма, Параметр);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПослеЗаписи()

	// Установка кнопок печати
	УстановитьКнопкиПечати();

	// Вывести в заголовке формы статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(
		ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);

	ОбщегоНазначения.РучнаяКорректировкаОсновнаяФормаПослеЗаписи(
		ЭтотОбъект.Проведен, ОткрыватьНастройкуДвижений, Ссылка, ЭтотОбъект);

КонецПроцедуры

Процедура ПриЗакрытии()
			
	ОбщегоНазначения.ОткрытьЖурналДокумента(ЭтаФорма);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Процедура - обработчик нажатия на любую из дополнительных кнопок по заполнению ТЧ
//
Процедура НажатиеНаДополнительнуюКнопкуЗаполненияТЧ(Кнопка)
	
	УниверсальныеМеханизмы.ОбработатьНажатиеНаДополнительнуюКнопкуЗаполненияТЧ(мКнопкиЗаполненияТЧ.Строки.Найти(Кнопка.Имя,"Имя",Истина),ЭтотОбъект);
	
КонецПроцедуры

// Процедура разрешения/запрещения редактирования номера документа
Процедура ДействияФормыРедактироватьНомер(Кнопка)
	
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
			
КонецПроцедуры

// Процедура вызова структуры подчиненности документа
//
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
	
КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ОсновныеДействияФормыНастройка(Кнопка)

	ОбщегоНазначения.РучнаяКорректировкаОсновнаяФорма(ЭтоНовый(),Ссылка,ЭтотОбъект);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

// Процедура - обработчик нажатия на кнопку "Печать по умолчанию"
//
Процедура ОсновныеДействияФормыПечатьПоУмолчанию(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать"
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Установить печать по умолчанию"
//
Процедура ОсновныеДействияФормыУстановитьПечатьПоУмолчанию(Кнопка)
	
	Если УниверсальныеМеханизмы.НазначитьКнопкуПечатиПоУмолчанию(мДеревоМакетов, Метаданные().Имя) Тогда
		
		УстановитьКнопкиПечати();
		
	КонецЕсли; 
	
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

Процедура ДатаПриИзменении(Элемент)

	РаботаСДиалогами.ПроверитьНомерДокумента(ЭтотОбъект, мТекущаяДатаДокумента);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);

	мТекущаяДатаДокумента = Дата; // запомним текущую дату документа для контроля номера документа
	
	УстановитьВидимость();

КонецПроцедуры 

Процедура ОрганизацияПриИзменении(Элемент)
	
	Если НЕ ПустаяСтрока(Номер) Тогда
		МеханизмНумерацииОбъектов.СброситьУстановленныйКодНомерОбъекта(ЭтотОбъект, "Номер", ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	КонецЕсли;
	
	СписокВидовДоговоров = Новый СписокЗначений;
	СписокВидовДоговоров.Добавить(Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком);
	СписокВидовДоговоров.Добавить(Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером);
	СписокВидовДоговоров.Добавить(Перечисления.ВидыДоговоровКонтрагентов.СКомитентом);
	ОтборПоВалюте       = Новый Структура("ЗначениеОтбора", мВалютаРегламентированногоУчета);
	СтруктураПараметров = Новый Структура("ВалютаВзаиморасчетов", ОтборПоВалюте);
	УправлениеВзаиморасчетами.УстановитьДоговорКонтрагента(
		ДоговорКонтрагента, Контрагент, Организация, СписокВидовДоговоров, СтруктураПараметров);
	
	ПриИзмененииДоговора();
	
	УстановитьВидимость();
	
КонецПроцедуры

Процедура КонтрагентПриИзменении(Элемент)
	
	РеквизитыПродавца = ПолучитьРеквизитыПродавца(Контрагент, Дата);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, РеквизитыПродавца);
	ЗаполнитьСпискиВыбораРеквизитовСчетаФактуры(РеквизитыПродавца);
	
	СписокВидовДоговоров = Новый СписокЗначений;
	СписокВидовДоговоров.Добавить(Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком);
	СписокВидовДоговоров.Добавить(Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером);
	СписокВидовДоговоров.Добавить(Перечисления.ВидыДоговоровКонтрагентов.СКомитентом);
	ОтборПоВалюте       = Новый Структура("ЗначениеОтбора", мВалютаРегламентированногоУчета);
	СтруктураПараметров = Новый Структура("ВалютаВзаиморасчетов", ОтборПоВалюте);
	УправлениеВзаиморасчетами.УстановитьДоговорКонтрагента(
		ДоговорКонтрагента, Контрагент, Организация, СписокВидовДоговоров, СтруктураПараметров);
	
	ПриИзмененииДоговора();
	
	УстановитьВидимость();
	
КонецПроцедуры

Процедура ДоговорКонтрагентаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СписокВидовДоговоров = Новый СписокЗначений;
	СписокВидовДоговоров.Добавить(Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком);
	СписокВидовДоговоров.Добавить(Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером);
	СписокВидовДоговоров.Добавить(Перечисления.ВидыДоговоровКонтрагентов.СКомитентом);
	ОтборПоВалюте       = Новый Структура("ЗначениеОтбора", мВалютаРегламентированногоУчета);
	СтруктураПараметров = Новый Структура("ВалютаВзаиморасчетов", ОтборПоВалюте);
	
	РаботаСДиалогами.НачалоВыбораЗначенияДоговораКонтрагента(
		ЭтотОбъект, ЭтаФорма, Элемент, Контрагент, ДоговорКонтрагента, 
		СписокВидовДоговоров, СтандартнаяОбработка, СтруктураПараметров);

КонецПроцедуры

Процедура ДоговорКонтрагентаПриИзменении(Элемент)
	
	ПриИзмененииДоговора();
	
	УстановитьВидимость();
	
КонецПроцедуры

Процедура СчетФактураНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	Отбор = Новый Структура(
		"Организация,Контрагент,ДоговорКонтрагента,НаАванс",
		Организация, Контрагент, ДоговорКонтрагента, Ложь);
	
	РаботаСДиалогами.НачалоВыбораЗначенияДокументаСоставногоТипа(
		ЭтотОбъект, ЭтаФорма, Элемент, СтандартнаяОбработка, Отбор, "");
	
КонецПроцедуры

Процедура СчетФактураПриИзменении(Элемент)
	
	ЗаполнитьРеквизитыКорректируемогоСчетаФактуры();
	
КонецПроцедуры

Процедура НаименованиеПродавцаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВыбранныйВариант = ВыбратьИзСписка(Элемент.СписокВыбора, Элемент);
	Если ВыбранныйВариант <> Неопределено Тогда
		Элемент.Значение = ВыбранныйВариант.Значение;
	КонецЕсли;
	
КонецПроцедуры

Процедура ИННПродавцаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВыбранныйВариант = ВыбратьИзСписка(Элемент.СписокВыбора, Элемент);
	Если ВыбранныйВариант <> Неопределено Тогда
		Элемент.Значение = ВыбранныйВариант.Значение;
	КонецЕсли;
	
КонецПроцедуры

Процедура КПППродавцаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВыбранныйВариант = ВыбратьИзСписка(Элемент.СписокВыбора, Элемент);
	Если ВыбранныйВариант <> Неопределено Тогда
		Элемент.Значение = ВыбранныйВариант.Значение;
	КонецЕсли;
	
КонецПроцедуры

Процедура РазницаНДСКУменьшениюПриИзменении(Элемент)
	
	Если РазницаНДСКУменьшению < ВосстановлениеНДС.Итог("СуммаНДС") Тогда
		ТекстСообщения = НСтр("ru='НДС к уменьшению меньше восстанавливаемой суммы НДС.'");
		Предупреждение(ТекстСообщения);
	КонецЕсли;
	
	УстановитьВидимость();
	
КонецПроцедуры

Процедура РазницаНДСКДоплатеПриИзменении(Элемент)
	
	Если РазницаНДСКДоплате < ВычетНДС.Итог("СуммаНДС") Тогда
		ТекстСообщения = НСтр("ru='НДС к доплате меньше принимаемой к вычету суммы НДС.'");
		Предупреждение(ТекстСообщения);
	КонецЕсли;
	
	УстановитьВидимость();
	
КонецПроцедуры

Процедура РазницаСНДСКУменьшениюПриИзменении(Элемент)
	
	Если РазницаСНДСКУменьшению = 0 Тогда
		РазницаНДСКУменьшению = 0;
	КонецЕсли;
	
	Если РазницаСНДСКУменьшению < ВосстановлениеНДС.Итог("Сумма") Тогда
		ТекстСообщения = НСтр("ru='Разница к уменьшению меньше восстанавливаемой суммы.'");
		Предупреждение(ТекстСообщения);
	КонецЕсли;
	
	УстановитьВидимость();
	
КонецПроцедуры

Процедура РазницаСНДСКДоплатеПриИзменении(Элемент)
	
	Если РазницаСНДСКДоплате = 0 Тогда
		РазницаНДСКДоплате = 0;
	КонецЕсли;
	
	Если РазницаСНДСКДоплате < ВычетНДС.Итог("Сумма") Тогда
		ТекстСообщения = НСтр("ru='Разница к доплате меньше принимаемой к вычету суммы.'");
		Предупреждение(ТекстСообщения);
	КонецЕсли;
	
	УстановитьВидимость();
	
КонецПроцедуры

Процедура ОсновнаяПанельПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	ТекСтраница = ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница;
	Если ТекСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.ВосстановлениеНДС Тогда
		ЭлементыФормы.НадписьИтогиКУменьшению.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Разница к уменьшению по счету-фактуре: %1 %2, в том числе НДС: %3 %2'"),
			Формат(РазницаСНДСКУменьшению, "ЧЦ=15; ЧДЦ=2; ЧН=0"),
			ВалютаДокумента,
			Формат(РазницаНДСКУменьшению, "ЧЦ=15; ЧДЦ=2; ЧН=0"));
	ИначеЕсли ТекСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.ВычетНДС Тогда
		ЭлементыФормы.НадписьИтогиКДоплате.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Разница к доплате по счету-фактуре: %1 %2, в том числе НДС: %3 %2'"),
			Формат(РазницаСНДСКДоплате, "ЧЦ=15; ЧДЦ=2; ЧН=0"),
			ВалютаДокумента,
			Формат(РазницаНДСКДоплате, "ЧЦ=15; ЧДЦ=2; ЧН=0"));
	КонецЕсли;
		
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТЧ "Вычет НДС"

Процедура ВычетНДСПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока 
		И НЕ Копирование Тогда
		ТекДанные = ЭлементыФормы.ВычетНДС.ТекущиеДанные;
		ТекДанные.ВидЦенности  = Перечисления.ВидыЦенностей.Товары;
		ТекДанные.СчетУчетаНДС = ПланыСчетов.Хозрасчетный.НДСпоПриобретеннымМПЗ; // 19.03
	КонецЕсли;
	
КонецПроцедуры

Процедура ВычетНДССуммаПриИзменении(Элемент)
	
	ТекДанные = ЭлементыФормы.ВычетНДС.ТекущиеДанные;
	ТекДанные.СуммаНДС = УчетНДС.РассчитатьСуммуНДС(
		ТекДанные.Сумма, Истина, Истина, УчетНДС.ПолучитьСтавкуНДС(ТекДанные.СтавкаНДС));
	
КонецПроцедуры

Процедура ВычетНДССтавкаНДСОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	ОбработатьОкончаниеВводаСтавкиНДС(Элемент, Текст, Значение, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ВычетНДССтавкаНДСПриИзменении(Элемент)
	
	ТекДанные = ЭлементыФормы.ВычетНДС.ТекущиеДанные;
	ТекДанные.СуммаНДС = УчетНДС.РассчитатьСуммуНДС(
		ТекДанные.Сумма, Истина, Истина, УчетНДС.ПолучитьСтавкуНДС(ТекДанные.СтавкаНДС));
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТЧ "Восстановление НДС"

Процедура ВосстановлениеНДСПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока 
		И НЕ Копирование Тогда
		ТекДанные = ЭлементыФормы.ВосстановлениеНДС.ТекущиеДанные;
		ТекДанные.ВидЦенности  = Перечисления.ВидыЦенностей.Товары;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВосстановлениеНДССуммаПриИзменении(Элемент)
	
	ТекДанные = ЭлементыФормы.ВосстановлениеНДС.ТекущиеДанные;
	ТекДанные.СуммаНДС = УчетНДС.РассчитатьСуммуНДС(
		ТекДанные.Сумма, Истина, Истина, УчетНДС.ПолучитьСтавкуНДС(ТекДанные.СтавкаНДС));
	
КонецПроцедуры

Процедура ВосстановлениеНДССтавкаНДСОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	ОбработатьОкончаниеВводаСтавкиНДС(Элемент, Текст, Значение, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ВосстановлениеНДССтавкаНДСПриИзменении(Элемент)
	
	ТекДанные = ЭлементыФормы.ВосстановлениеНДС.ТекущиеДанные;
	ТекДанные.СуммаНДС = УчетНДС.РассчитатьСуммуНДС(
		ТекДанные.Сумма, Истина, Истина, УчетНДС.ПолучитьСтавкуНДС(ТекДанные.СтавкаНДС));
	
КонецПроцедуры



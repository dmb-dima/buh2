Перем мДатаПерехода Экспорт;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизитов шапки, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверяется также правильность заполнения реквизитов ссылочных полей документа.
// Проверка выполняется по объекту и по выборке из результата запроса по шапке.
//
// Параметры: 
//  СтруктураШапкиДокумента - выборка из результата запроса по шапке документа,
//  Отказ                   - флаг отказа в проведении,
//  Заголовок               - строка, заголовок сообщения об ошибке проведения.
//
Процедура ПроверитьЗаполнениеШапки(СтруктураШапкиДокумента, Отказ, Заголовок)

	// Укажем, что надо проверить:
	СтруктураОбязательныхПолей = Новый Структура("Организация");

	// Теперь вызовем общую процедуру проверки.
	ЗаполнениеДокументов.ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);

КонецПроцедуры // ПроверитьЗаполнениеШапки()

// Выполняет движения по регистрам 
//
Процедура ДвиженияПоРегистрам(СтруктураШапкиДокумента, ТаблицаЗаписей, ТаблицаПоОС, ТаблицаПоНМА, Отказ)

	УчетнаяПолитикаНУ = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(СтруктураШапкиДокумента.Дата, Отказ, СтруктураШапкиДокумента.Организация);
	ДатаПереходаНаУСН = УчетнаяПолитикаНУ["ДатаПереходаНаУСН"];
	мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	КУДиР_ОС = Движения.КнигаУчетаДоходовИРасходовОС;
	
	Для Каждого Запись Из ТаблицаПоОС Цикл
		
		НомерЗаписи = 0;
		ВыборкаЗаписей = РегистрыСведений.ПервоначальныеСведенияОСНалоговыйУчетУСН.СрезПоследних(СтруктураШапкиДокумента.Дата,Новый Структура("ОсновноеСредство",Запись.ОсновноеСредство)); //,Организация,ТекОрганизация
		Для Индекс = 1 по ВыборкаЗаписей.Количество() Цикл
			Если ВыборкаЗаписей[Индекс - 1].Организация = СтруктураШапкиДокумента.Организация тогда
				НомерЗаписи = Индекс;
			КонецЕсли;
		КонецЦикла;
		
		Если НомерЗаписи = 0 Тогда
			ТекстСообщения = "Отсутствует информация о первоначальных сведениях по объекту """ + СокрЛП(Запись.ОсновноеСредство) + """.";
			ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения, Отказ, ОбщегоНазначения.ПредставлениеДокументаПриПроведении(ЭтотОбъект));
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
		СрокИспользованияУСН 	= ?(ВыборкаЗаписей.Количество() > 0,ВыборкаЗаписей[НомерЗаписи - 1].СрокПолезногоИспользования,0);
		ДатаПриобретения		= ?(ВыборкаЗаписей.Количество() > 0,ВыборкаЗаписей[НомерЗаписи - 1].ДатаПриобретения,0);
		
		ДокРегистратор   = Неопределено;
		ДатаВвода		 = Неопределено;
		УправлениеВнеоборотнымиАктивами.ПолучитьДокументБухСостоянияОС(Запись.ОсновноеСредство, СтруктураШапкиДокумента.Организация, Перечисления.СостоянияОС.ПринятоКУчету, ДокРегистратор, ДатаВвода);
		Если (ДатаВвода = Неопределено) ИЛИ (СрокИспользованияУСН = 0) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаКниги = КУДиР_ОС.Добавить();
		СтрокаКниги.Период = СтруктураШапкиДокумента.Дата;
		СтрокаКниги.Организация = СтруктураШапкиДокумента.Организация;
		СтрокаКниги.ОсновноеСредство = Запись.ОсновноеСредство;
		СтрокаКниги.Графа3_ДатаВводаВЭксплуатацию = ДатаВвода;
		СтрокаКниги.ДатаОплаты = Запись.ДатаОплаты;
		СтрокаКниги.Графа4_ГосударственнаяРегистрация = Запись.Графа4_ГосударственнаяРегистрация;
		СтрокаКниги.Графа5_ПервоначальнаяСтоимость = Запись.Графа5_ПервоначальнаяСтоимость;
		СтрокаКниги.Графа6_ОстаточнаяСтоимость = Запись.Графа6_ОстаточнаяСтоимость;
		Если (Дата < Дата("20060101")) или (ДатаПриобретения < ДатаПереходаНаУСН) Тогда
			СтрокаКниги.Графа7_СрокПолезногоИспользования = Цел(СрокИспользованияУСН/12) + ?(СрокИспользованияУСН%12 <> 0, 1, 0);
		КонецЕсли;
		СтрокаКниги.Графа8_КолКварталовВОтчетномПериоде = Запись.Графа8_КолКварталовВОтчетномПериоде;
		СтрокаКниги.Графа9_КолКварталовВНалПериоде  = Запись.Графа9_КолКварталовВНалПериоде;
		СтрокаКниги.Графа10_ДоляРасходовЗаНалПериод  = Запись.Графа10_ДоляРасходовЗаНалПериод;
		СтрокаКниги.Графа11_ДоляРасходовЗаКвартал   = Запись.Графа11_ДоляРасходовЗаКвартал;
		СтрокаКниги.Графа12_СуммаРасходовЗаОтчетнПериод = Запись.Графа12_СуммаРасходовЗаОтчетнПериод;
		СтрокаКниги.Графа13_СуммаРасходовЗаКвартал = Запись.Графа13_СуммаРасходовЗаКвартал;
		СтрокаКниги.Графа14_РасходыПрошлыхПериодов = Запись.Графа14_РасходыПрошлыхПериодов;
		СтрокаКниги.Графа15_ОстатокРасходов = Запись.Графа15_ОстатокРасходов;
					
	КонецЦикла;
	
	КУДиР_НМА = Движения.КнигаУчетаДоходовИРасходовНМА;
	
	Для Каждого Запись Из ТаблицаПоНМА Цикл
		
		НомерЗаписи = 0;
		ВыборкаЗаписей = РегистрыСведений.ПервоначальныеСведенияНМАНалоговыйУчетУСН.СрезПоследних(СтруктураШапкиДокумента.Дата,Новый Структура("НематериальныйАктив",Запись.НематериальныйАктив)); //,Организация,ТекОрганизация
		Для Индекс = 1 по ВыборкаЗаписей.Количество() Цикл
			Если ВыборкаЗаписей[Индекс - 1].Организация = СтруктураШапкиДокумента.Организация тогда
				НомерЗаписи = Индекс;
			КонецЕсли;
		КонецЦикла;
		
		Если НомерЗаписи = 0 Тогда
			ТекстСообщения = "Отсутствует информация о первоначальных сведениях по объекту """ + СокрЛП(Запись.НематериальныйАктив) + """.";
			ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения, Отказ, ОбщегоНазначения.ПредставлениеДокументаПриПроведении(ЭтотОбъект));
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
		СрокИспользованияУСН 	= ?(ВыборкаЗаписей.Количество() > 0,ВыборкаЗаписей[НомерЗаписи - 1].СрокПолезногоИспользования,0);
		ДатаПриобретения		= ?(ВыборкаЗаписей.Количество() > 0,ВыборкаЗаписей[НомерЗаписи - 1].ДатаПриобретения,0);
		
		ДокРегистратор   = Неопределено;
		ДатаВвода		 = Неопределено;
		УправлениеВнеоборотнымиАктивами.ПолучитьДокументБухСостоянияНМА(Запись.НематериальныйАктив, СтруктураШапкиДокумента.Организация, Перечисления.ВидыСостоянийНМА.ПринятКУчету, ДокРегистратор, ДатаВвода);
		Если (ДатаВвода = Неопределено) ИЛИ (СрокИспользованияУСН = 0) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаКниги = КУДиР_НМА.Добавить();
		СтрокаКниги.Период = СтруктураШапкиДокумента.Дата;
		СтрокаКниги.Организация = СтруктураШапкиДокумента.Организация;
		СтрокаКниги.НематериальныйАктив = Запись.НематериальныйАктив;
		СтрокаКниги.Графа3_ДатаПринятияКУчету = ДатаВвода;
		СтрокаКниги.ДатаОплаты = Запись.ДатаОплаты;
		СтрокаКниги.Графа5_ПервоначальнаяСтоимость = Запись.Графа5_ПервоначальнаяСтоимость;
		СтрокаКниги.Графа6_ОстаточнаяСтоимость = Запись.Графа6_ОстаточнаяСтоимость;
		Если (Дата < Дата("20060101")) или (ДатаПриобретения < ДатаПереходаНаУСН) Тогда
			СтрокаКниги.Графа7_СрокПолезногоИспользования = Цел(СрокИспользованияУСН/12) + ?(СрокИспользованияУСН%12 <> 0, 1, 0);
		КонецЕсли;
		СтрокаКниги.Графа8_КолКварталовВОтчетномПериоде = Запись.Графа8_КолКварталовВОтчетномПериоде;
		СтрокаКниги.Графа9_КолКварталовВНалПериоде  = Запись.Графа9_КолКварталовВНалПериоде;
		СтрокаКниги.Графа10_ДоляРасходовЗаНалПериод  = Запись.Графа10_ДоляРасходовЗаНалПериод;
		СтрокаКниги.Графа11_ДоляРасходовЗаКвартал   = Запись.Графа11_ДоляРасходовЗаКвартал;
		СтрокаКниги.Графа12_СуммаРасходовЗаОтчетнПериод = Запись.Графа12_СуммаРасходовЗаОтчетнПериод;
		СтрокаКниги.Графа13_СуммаРасходовЗаКвартал = Запись.Графа13_СуммаРасходовЗаКвартал;
		СтрокаКниги.Графа14_РасходыПрошлыхПериодов = Запись.Графа14_РасходыПрошлыхПериодов;
		СтрокаКниги.Графа15_ОстатокРасходов = Запись.Графа15_ОстатокРасходов;
					
	КонецЦикла;
	
	Движения.РасходыПриУСН.Очистить();
	
	КУДиР 			= Движения.КнигаУчетаДоходовИРасходов;
	РасходыПриУСН 	= Движения.РасходыПриУСН;
	
	Для Каждого Запись Из ТаблицаЗаписей Цикл
		СтрокаКниги 									= КУДиР.Добавить();
		СтрокаКниги.Период 								= СтруктураШапкиДокумента.Дата;
		СтрокаКниги.Организация 						= СтруктураШапкиДокумента.Организация;
		СтрокаКниги.Содержание							= Запись.Содержание;
		СтрокаКниги.РеквизитыПервичногоДокумента		= Запись.ДатаНомер;
       	СтрокаКниги.Графа4 								= Запись.Графа4;
		Если Запись.ДоходыЕНВД Тогда
			СтрокаКниги.ДоходЕНВД 						= Запись.Графа4;
		Иначе
			СтрокаКниги.Графа5							= Запись.Графа5;
		КонецЕсли;
		СтрокаКниги.Графа5								= Запись.Графа5;
		СтрокаКниги.Графа6 								= Запись.Графа6;
		Если Не Запись.РасходыЕНВД Тогда
		 	СтрокаКниги.Графа7 							= Запись.Графа7;
	 		СтрокаКниги.НДС 							= Запись.НДС;
		Иначе
			СтрокаРасходов 								= РасходыПриУСН.Добавить();
			СтрокаРасходов.ВидДвижения					= ВидДвиженияНакопления.Приход;
			СтрокаРасходов.Период						= СтруктураШапкиДокумента.Дата;
			СтрокаРасходов.Организация					= СтруктураШапкиДокумента.Организация;
			СтрокаРасходов.РасчетныйДокумент			= СтруктураШапкиДокумента.Ссылка;
			СтрокаРасходов.ОтражениеВУСН			  	= Перечисления.ОтражениеВУСН.Распределяются;
			СтрокаРасходов.СтатусыОплатыРасходовУСН 	= Перечисления.СтатусыРасходовУСН.НеРаспределено;
			СтрокаРасходов.Валюта 					 	= мВалютаРегламентированногоУчета;
		 	СтрокаРасходов.Сумма 					 	= Запись.Графа7;
	  		СтрокаРасходов.НДС 	  				 		= Запись.НДС;
		КонецЕсли;
 	КонецЦикла;	 
	
КонецПроцедуры // ДвиженияПоРегистрам()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ)

	// Сформируем структуру реквизитов шапки документа
	СтруктураШапкиДокумента = ОбщегоНазначения.СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);

	Заголовок = "";

	ПроверитьЗаполнениеШапки(СтруктураШапкиДокумента, Отказ, Заголовок);

	// Получим необходимые данные для проведения и проверки заполенения данные по табличной части "Строки".
	СтруктураПолей = Новый Структура();
	СтруктураПолей.Вставить("ДатаНомер"  , "ДатаНомер");
	СтруктураПолей.Вставить("Содержание" , "Содержание");
	СтруктураПолей.Вставить("Графа4"     , "Графа4");
	СтруктураПолей.Вставить("Графа5"     , "Графа5");
	СтруктураПолей.Вставить("Графа6"     , "Графа6");
	СтруктураПолей.Вставить("Графа7"     , "Графа7");
	СтруктураПолей.Вставить("НДС"        , "НДС");
	СтруктураПолей.Вставить("ДоходыЕНВД" , "ДоходыЕНВД");
	СтруктураПолей.Вставить("РасходыЕНВД", "РасходыЕНВД");

	РезультатЗапросаПоСтрокам = ОбщегоНазначения.СформироватьЗапросПоТабличнойЧасти(ЭтотОбъект, "Строки", СтруктураПолей);

	ТаблицаПоСтрокам = РезультатЗапросаПоСтрокам.Выгрузить();
	
	// Получим необходимые данные для проведения и проверки заполенения данные по табличной части "ОС".
	СтруктураПолей = Новый Структура();
	СтруктураПолей.Вставить("ОсновноеСредство"  					, "ОсновноеСредство");
	СтруктураПолей.Вставить("ДатаОплаты" 							, "ДатаОплаты");
	СтруктураПолей.Вставить("Графа4_ГосударственнаяРегистрация"		, "Графа4_ГосударственнаяРегистрация");
	СтруктураПолей.Вставить("Графа5_ПервоначальнаяСтоимость"		, "Графа5_ПервоначальнаяСтоимость");
	СтруктураПолей.Вставить("Графа6_ОстаточнаяСтоимость"			, "Графа6_ОстаточнаяСтоимость");
	СтруктураПолей.Вставить("Графа8_КолКварталовВОтчетномПериоде"	, "Графа8_КолКварталовВОтчетномПериоде");
	СтруктураПолей.Вставить("Графа9_КолКварталовВНалПериоде"     	, "Графа9_КолКварталовВНалПериоде");
	СтруктураПолей.Вставить("Графа10_ДоляРасходовЗаНалПериод"     	, "Графа10_ДоляРасходовЗаНалПериод");
	СтруктураПолей.Вставить("Графа11_ДоляРасходовЗаКвартал"     	, "Графа11_ДоляРасходовЗаКвартал");
	СтруктураПолей.Вставить("Графа12_СуммаРасходовЗаОтчетнПериод"   , "Графа12_СуммаРасходовЗаОтчетнПериод");
	СтруктураПолей.Вставить("Графа13_СуммаРасходовЗаКвартал" 		, "Графа13_СуммаРасходовЗаКвартал");
	СтруктураПолей.Вставить("Графа14_РасходыПрошлыхПериодов" 		, "Графа14_РасходыПрошлыхПериодов");
	СтруктураПолей.Вставить("Графа15_ОстатокРасходов"				, "Графа15_ОстатокРасходов");

	РезультатЗапросаПоОС = ОбщегоНазначения.СформироватьЗапросПоТабличнойЧасти(ЭтотОбъект, "ОС", СтруктураПолей);

	ТаблицаПоОС = РезультатЗапросаПоОС.Выгрузить();
	
	СтруктураОбязательныхПолей = Новый Структура();
	СтруктураОбязательныхПолей.Вставить("ОсновноеСредство");
	СтруктураОбязательныхПолей.Вставить("ДатаОплаты");
	СтруктураОбязательныхПолей.Вставить("Графа5_ПервоначальнаяСтоимость");
	СтруктураОбязательныхПолей.Вставить("Графа13_СуммаРасходовЗаКвартал");
	
	ЗаполнениеДокументов.ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, "ОС", СтруктураОбязательныхПолей, Отказ, Заголовок);

	// Получим необходимые данные для проведения и проверки заполенения данные по табличной части "НМА".
	СтруктураПолей = Новый Структура();
	СтруктураПолей.Вставить("НематериальныйАктив"  					, "НематериальныйАктив");
	СтруктураПолей.Вставить("ДатаОплаты" 							, "ДатаОплаты");
	СтруктураПолей.Вставить("Графа5_ПервоначальнаяСтоимость"		, "Графа5_ПервоначальнаяСтоимость");
	СтруктураПолей.Вставить("Графа6_ОстаточнаяСтоимость"			, "Графа6_ОстаточнаяСтоимость");
	СтруктураПолей.Вставить("Графа8_КолКварталовВОтчетномПериоде"	, "Графа8_КолКварталовВОтчетномПериоде");
	СтруктураПолей.Вставить("Графа9_КолКварталовВНалПериоде"     	, "Графа9_КолКварталовВНалПериоде");
	СтруктураПолей.Вставить("Графа10_ДоляРасходовЗаНалПериод"     	, "Графа10_ДоляРасходовЗаНалПериод");
	СтруктураПолей.Вставить("Графа11_ДоляРасходовЗаКвартал"     	, "Графа11_ДоляРасходовЗаКвартал");
	СтруктураПолей.Вставить("Графа12_СуммаРасходовЗаОтчетнПериод"   , "Графа12_СуммаРасходовЗаОтчетнПериод");
	СтруктураПолей.Вставить("Графа13_СуммаРасходовЗаКвартал" 		, "Графа13_СуммаРасходовЗаКвартал");
	СтруктураПолей.Вставить("Графа14_РасходыПрошлыхПериодов" 		, "Графа14_РасходыПрошлыхПериодов");
	СтруктураПолей.Вставить("Графа15_ОстатокРасходов"				, "Графа15_ОстатокРасходов");

	РезультатЗапросаПоНМА = ОбщегоНазначения.СформироватьЗапросПоТабличнойЧасти(ЭтотОбъект, "НМА", СтруктураПолей);

	ТаблицаПоНМА = РезультатЗапросаПоНМА.Выгрузить();
	
	СтруктураОбязательныхПолей = Новый Структура();
	СтруктураОбязательныхПолей.Вставить("НематериальныйАктив");
	СтруктураОбязательныхПолей.Вставить("ДатаОплаты");
	СтруктураОбязательныхПолей.Вставить("Графа5_ПервоначальнаяСтоимость");
	СтруктураОбязательныхПолей.Вставить("Графа13_СуммаРасходовЗаКвартал");
		
	ЗаполнениеДокументов.ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, "НМА", СтруктураОбязательныхПолей, Отказ, Заголовок);
	
	Если Не Отказ Тогда
		ДвиженияПоРегистрам(СтруктураШапкиДокумента, ТаблицаПоСтрокам, ТаблицаПоОС, ТаблицаПоНМА, Отказ);
	КонецЕсли;

КонецПроцедуры // ОбработкаПроведения()

мДатаПерехода = Дата("20060101");

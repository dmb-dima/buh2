
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Процедура - обработчик события "ОбработкаПроведения"
//
Процедура ОбработкаПроведения(Отказ, Режим)
	
	ОбщегоНазначения.СообщитьОбОшибке("Документ не используется, рекомендуется воспользоваться меню ""Операции"" - ""Закрытие месяца""");
	Отказ = Истина;
	Возврат;
	
	СтруктураШапкиДокумента = Новый Структура("Дата", Дата);
	СписокОП = ОбщегоНазначения.ПолучитьСписокОбособленныхПодразделенийОрганизации(Организация);
	СписокОП.Добавить(Организация.Ссылка, Организация.Наименование);
	СтруктураШапкиДокумента.Вставить("Организация", Организация);
	СтруктураШапкиДокумента.Вставить("СписокОрганизаций", СписокОП);
	
	
	ЗаписьНормированияРасходов = Движения.РасчетНормированияРасходов.ВыгрузитьКолонки();
	ЗаписиДолей                = Движения.ДолиСписанияКосвенныхРасходов.ВыгрузитьКолонки();
	СтруктураШапкиДокумента.Вставить("ЗаписьНормированияРасходов", ЗаписьНормированияРасходов);
	СтруктураШапкиДокумента.Вставить("ЗаписиДолей", ЗаписиДолей);
	
	Отказ = Ложь;
	СообщенияОповторахВидовОпераций = ПроверкаПовторовВидовОпераций(СтруктураШапкиДокумента, Отказ);
	Если Отказ Тогда
		ОбщегоНазначения.СообщитьОбОшибке(СообщенияОповторахВидовОпераций, Отказ, ОбщегоНазначения.ПредставлениеДокументаПриПроведении(ЭтотОбъект));
		Возврат;
	КонецЕсли;
	
	Если СписокОП.Количество() < 2 Тогда
				Отказ = Истина;
		        ОбщегоНазначения.СообщитьОбОшибке("У организации " + Организация + " не обнаружены обособленные подразделения, выделенные на отдельный баланс. 
				|Рекомендуется использовать документ ""Закрытие месяца""", Отказ, ОбщегоНазначения.ПредставлениеДокументаПриПроведении(ЭтотОбъект));
		
	КонецЕсли;
	
	Если Не Отказ Тогда
		
	НалоговыйУчет.ПровестиРасчетСуммРасходовПоКоторымПредусмотреныОграничения(СтруктураШапкиДокумента);
	
	ЗаписьВВспомогательныеРегистрыСведений(СтруктураШапкиДокумента,
		СтруктураШапкиДокумента.ЗаписьНормированияРасходов, 
		РегистрыСведений.РасчетНормированияРасходов,
		"Организация,ПериодРасчета,Активность,Регистратор,ВидОперации,ВидРегОперации,СуммаБазы",
		"РасходыМесяц,РазницыМесяц,ЗатратыГод,РасходыГод,РазницыГод");
		
	ЗаписьВВспомогательныеРегистрыСведений(СтруктураШапкиДокумента,
		СтруктураШапкиДокумента.ЗаписиДолей, 
		РегистрыСведений.ДолиСписанияКосвенныхРасходов,
		"Организация,ПериодРасчета,Активность,Регистратор",
		"ДоляРасходовНаРекламу,ДоляРасходовНаДобровольноеСтрахованиеЖизни,ДоляРасходовНаДобровольноеМедицинскоеСтрахование,ДоляПредставительскихРасходов,ДоляЕНВД,ДоляТранспортныхРасходов,ДоляРасходовНаВозмещениеПроцентовРаботникам,ДоляРасходовНаДобровольноеСтрахованиеОтНесчастныхСлучаев");
	КонецЕсли;
	
КонецПроцедуры // ОбработкаПроведения()
	
	// Выполняет запись в регистры информации параметров расчетов по рег.операциям
// по данным которых будут построены справки - расчеты
Процедура ЗаписьВВспомогательныеРегистрыСведений(СтруктураШапкиДокумента, ТаблицаДвижений, ВспомогательныйРегистр, СтрокаГруппировки,СтрокаСуммирования)
	
	Если ТаблицаДвижений.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаДвижений.ЗаполнитьЗначения(Организация, "Организация");
	ТаблицаДвижений.ЗаполнитьЗначения(СтруктураШапкиДокумента.Дата, "ПериодРасчета");
	ТаблицаДвижений.ЗаполнитьЗначения(Истина, "Активность");
	ТаблицаДвижений.ЗаполнитьЗначения(Ссылка, "Регистратор");
	ТаблицаДвижений.Свернуть(СтрокаГруппировки,СтрокаСуммирования);
	ВспомогательныйРасчет = ВспомогательныйРегистр.СоздатьНаборЗаписей();
	ВспомогательныйРасчет.Отбор.Регистратор.Установить(Ссылка);
	ВспомогательныйРасчет.Загрузить(ТаблицаДвижений);
	
	ВспомогательныйРасчет.Записать();
	
КонецПроцедуры


// Возвращает доступные варианты печати документа.
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	мПрименениеУСН = НалоговыйУчетУСН.ПрименениеУСН(Организация, Дата);
	
	Если НЕ мПрименениеУСН И Организация.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо Тогда
		Возврат Новый Структура("НормированиеРасходов","Нормирование расходов");
	КонецЕсли;
КонецФункции // ПолучитьСтруктуруПечатныхФорм()


Функция ПроверкаПовторовВидовОпераций(СтруктураШапкиДокумента, Отказ)
	
	мНачДата    = НачалоМесяца(СтруктураШапкиДокумента.Дата);
	мКонДата    = КонецМесяца (СтруктураШапкиДокумента.Дата);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоМесяца", мНачДата);
	Запрос.УстановитьПараметр("КонецМесяца",  мКонДата);
	Запрос.УстановитьПараметр("Организация",  СтруктураШапкиДокумента.СписокОрганизаций);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	СУММА(ВЫБОР
	               |			КОГДА ЗакрытиеМесяца.РасчетСтоимостиПродукции = ИСТИНА
	               |				ТОГДА 1
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК РасчетСтоимостиПродукции,
	               |	СУММА(ВЫБОР
	               |			КОГДА ЗакрытиеМесяца.ЗакрытиеСчета44ТранспортныеРасходы = ИСТИНА
	               |				ТОГДА 1
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК ЗакрытиеСчета44ТранспортныеРасходы,
	               |	СУММА(ВЫБОР
	               |			КОГДА ЗакрытиеМесяца.ЗакрытиеСчета44ИныеРасходы = ИСТИНА
	               |				ТОГДА 1
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК ЗакрытиеСчета44ИныеРасходы,
	               |	ЗакрытиеМесяца.Организация
	               |ИЗ
	               |	Документ.УдалитьЗакрытиеМесяца КАК ЗакрытиеМесяца
	               |ГДЕ
	               |	ЗакрытиеМесяца.Организация В ИЕРАРХИИ(&Организация)
	               |	И ЗакрытиеМесяца.Дата >= &НачалоМесяца
	               |	И ЗакрытиеМесяца.Дата <= &КонецМесяца
	               |	И ЗакрытиеМесяца.Проведен
	               |	И (НЕ ЗакрытиеМесяца.ПометкаУдаления)
	               |	И ЗакрытиеМесяца.РасчетСтоимостиПродукции > 1
	               |	И ЗакрытиеМесяца.ЗакрытиеСчета44ИныеРасходы > 1
	               |	И ЗакрытиеМесяца.ЗакрытиеСчета44ТранспортныеРасходы > 1
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЗакрытиеМесяца.Организация";
		
	Результат = Запрос.Выполнить().Выгрузить();
	
	ТекстСообщения = "Расчет долей списания косвенных расходов невозможен, т.к. проведены ранее следующие операции:
	|";
	
	Для Каждого Выборка Из Результат Цикл
		Отказ = Истина;
		
		Если Выборка.РасчетСтоимостиПродукции> 0 Тогда
			ТекстСообщения = ТекстСообщения + """Закрытие счетов 20,23,25,26"" по организации " + Выборка.Организация + "
			|";
		КонецЕсли;
		
		Если Выборка.ЗакрытиеСчета44ТранспортныеРасходы> 0 Тогда
			ТекстСообщения = ТекстСообщения +  """Списание транспортных расходов"" по организации " + Выборка.Организация + " 
			|";
		КонецЕсли;
		
		Если Выборка.ЗакрытиеСчета44ИныеРасходы> 0 Тогда
			ТекстСообщения = ТекстСообщения + """Списание иных расходов (кроме транспортных)"" по организации " + Выборка.Организация + " 
			|";
		КонецЕсли;
		
		
	КонецЦикла;
	
	Возврат ТекстСообщения;
	
Конецфункции



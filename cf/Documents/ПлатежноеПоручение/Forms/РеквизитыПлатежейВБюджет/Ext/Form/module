Процедура УстановитьВидимость()

	Если ВидПеречисленияВБюджет = Перечисления.ВидыПеречисленийВБюджет.НалоговыйПлатеж Тогда	
		
		ЭлементыФормы.ПанельТипаПлатежа.ТекущаяСтраница = ЭлементыФормы.ПанельТипаПлатежа.Страницы.НалоговыйПлатеж;
		ЭлементыФормы.ПанельПлатежейВБюджет.ТекущаяСтраница = ЭлементыФормы.ПанельПлатежейВБюджет.Страницы.НалоговыйПлатеж;
		
	ИначеЕсли ВидПеречисленияВБюджет = Перечисления.ВидыПеречисленийВБюджет.ТаможенныйПлатеж Тогда	
		
		ЭлементыФормы.ПанельТипаПлатежа.ТекущаяСтраница = ЭлементыФормы.ПанельТипаПлатежа.Страницы.ТаможенныйПлатеж;
		ЭлементыФормы.ПанельПлатежейВБюджет.ТекущаяСтраница = ЭлементыФормы.ПанельПлатежейВБюджет.Страницы.ТаможенныйПлатеж;
	
	Иначе
		
		ЭлементыФормы.ПанельТипаПлатежа.ТекущаяСтраница = ЭлементыФормы.ПанельТипаПлатежа.Страницы.ИнойПлатеж;
		ЭлементыФормы.ПанельПлатежейВБюджет.ТекущаяСтраница = ЭлементыФормы.ПанельПлатежейВБюджет.Страницы.ИнойПлатеж;
	
	КонецЕсли;

	ПоказательДатыИмеетТипДата = (ТипЗнч(ПоказательДаты) = Тип("Дата"));
	
	Если ВидПеречисленияВБюджет = Перечисления.ВидыПеречисленийВБюджет.НалоговыйПлатеж Тогда
			
		Если ПериодичностьУплаты = "0" Тогда
			ЭлементыФормы.ПанельПоказателяПериода.Видимость = Ложь;
		Иначе
			ЭлементыФормы.ПанельПоказателяПериода.Видимость = Истина;
			Если ПериодичностьУплаты = "-" Тогда
				ЭлементыФормы.ПанельПоказателяПериода.ТекущаяСтраница = 
					ЭлементыФормы.ПанельПоказателяПериода.Страницы.ПлатежПоКонкретнойДате;
			Иначе
				ЭлементыФормы.ПанельПоказателяПериода.ТекущаяСтраница = 
					ЭлементыФормы.ПанельПоказателяПериода.Страницы.ПлатежПоПериоду;
				ЭлементыФормы.НадписьПериодПлатежа.Видимость = НЕ ПериодичностьУплаты = "ГД";
				ЭлементыФормы.ПериодПлатежа.Видимость        = НЕ ПериодичностьУплаты = "ГД";
				Если ПериодичностьУплаты = "МС" Тогда
					ЭлементыФормы.ПериодПлатежа.МаксимальноеЗначение = 12;
					ЭлементыФормы.НадписьПериодПлатежа.Заголовок     = "Месяц:";
				ИначеЕсли ПериодичностьУплаты = "КВ" Тогда
					ЭлементыФормы.ПериодПлатежа.МаксимальноеЗначение = 4;
					ЭлементыФормы.НадписьПериодПлатежа.Заголовок     = "Квартал:";
				ИначеЕсли ПериодичностьУплаты = "ПЛ" Тогда
					ЭлементыФормы.ПериодПлатежа.МаксимальноеЗначение = 2;
					ЭлементыФормы.НадписьПериодПлатежа.Заголовок     = "Полугодие:";
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		ЭлементыФормы.ПоказательДаты.РедактированиеТекста        = ПоказательДатыИмеетТипДата;
		
	ИначеЕсли ВидПеречисленияВБюджет = Перечисления.ВидыПеречисленийВБюджет.ТаможенныйПлатеж Тогда	
		
		ЭлементыФормы.ПоказательДатыТаможня.РедактированиеТекста = ПоказательДатыИмеетТипДата;
		
	Иначе
		
		ЭлементыФормы.ПоказательДатыПрочее.РедактированиеТекста  = ПоказательДатыИмеетТипДата;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьКодБК()

	КодБК = АдминистраторДохода + ВидДохода + ПодвидДохода + КОСГУ;

КонецПроцедуры

Процедура ОбновитьПодсказкиНалоговогоПлатежа()

	Если ПоказательОснования = "ТР" Тогда
		ПодсказкаПоказательПериода = "Срок уплаты, установленный в требовании налогового органа об уплате налогов (сборов)";
	ИначеЕсли ПоказательОснования = "РС" Тогда
		ПодсказкаПоказательПериода = "Дата уплаты части рассроченной суммы налога в соответствии с установленным графиком рассрочки";
	ИначеЕсли ПоказательОснования = "ОТ" Тогда
		ПодсказкаПоказательПериода = "Дата завершения отсрочки";
	ИначеЕсли ПоказательОснования = "РТ" Тогда
		ПодсказкаПоказательПериода = "Дата уплаты части реструктурируемой задолженности в соответствии с графиком реструктуризации";
	ИначеЕсли ПоказательОснования = "ВУ" Тогда
		ПодсказкаПоказательПериода = "Дата завершения внешнего управления";
	ИначеЕсли ПоказательОснования = "ПР" Тогда
		ПодсказкаПоказательПериода = "Дата завершения приостановления взыскания";
	ИначеЕсли ПоказательОснования = "АП" Тогда
		ПодсказкаПоказательПериода = "При основании ""АП"" проставляется ""0""";
	ИначеЕсли ПоказательОснования = "АР" Тогда
		ПодсказкаПоказательПериода = "При основании ""АР"" проставляется ""0""";
	ИначеЕсли ПоказательОснования = "0" Тогда
		ПодсказкаПоказательПериода = "";
	Иначе
		ПодсказкаПоказательПериода = "Налоговый период, за который производится уплата налога (сбора)";
	КонецЕсли;
	ЭлементыФормы.ПодсказкаПоказательПериода.Заголовок = ПодсказкаПоказательПериода;
	
	Если ПоказательОснования = "ТР" Тогда
		ПодсказкаПоказательНомера = "Номер требования налогового органа об уплате налогов (сборов)";
	ИначеЕсли ПоказательОснования = "РС" Тогда
		ПодсказкаПоказательНомера = "Номер решения о рассрочке";
	ИначеЕсли ПоказательОснования = "ОТ" Тогда
		ПодсказкаПоказательНомера = "Номер решения об отсрочке";
	ИначеЕсли ПоказательОснования = "РТ" Тогда
		ПодсказкаПоказательНомера = "Номер решения о реструктуризации";
	ИначеЕсли ПоказательОснования = "ПР" Тогда
		ПодсказкаПоказательНомера = "Номер решения о приостановлении взыскания";
	ИначеЕсли ПоказательОснования = "ВУ" Тогда
		ПодсказкаПоказательНомера = "Номер дела или материала, рассмотренного арбитражным судом";
	ИначеЕсли ПоказательОснования = "АП" Тогда
		ПодсказкаПоказательНомера = "Номер акта проверки";
	ИначеЕсли ПоказательОснования = "АР" Тогда
		ПодсказкаПоказательНомера = "Номер исполнительного документа и возбужденного на основании его исполнительного производства";
	ИначеЕсли ПоказательОснования = "ТП" Тогда
		ПодсказкаПоказательНомера = "При основании ""ТП"" проставляется ""0""";
	ИначеЕсли ПоказательОснования = "ЗД" Тогда
		ПодсказкаПоказательНомера = "При основании ""ЗД"" проставляется ""0""";
	ИначеЕсли ПоказательОснования = "БФ" Тогда
		ПодсказкаПоказательНомера = "Значение реквизита ""Индекс документа"" из извещения, заполненного налоговым органом. При уплате налога на основании налоговой декларации проставляется ""0""";
	КонецЕсли;
	ЭлементыФормы.ПодсказкаПоказательНомера.Заголовок = ПодсказкаПоказательНомера;
	
	Если ПоказательОснования = "ТП" Тогда
		ПодсказкаПоказательДаты = "Дата подписи налогоплательщиком декларации, представленной в налоговый орган";
	ИначеЕсли ПоказательОснования = "ЗД" Тогда
		ПодсказкаПоказательДаты = "При основании ""ЗД"" проставляется ""0""";
	ИначеЕсли ПоказательОснования = "ТР" Тогда
		ПодсказкаПоказательДаты = "Дата требования налогового органа об уплате налогов (сборов)";
	ИначеЕсли ПоказательОснования = "РС" Тогда
		ПодсказкаПоказательДаты = "Дата решения о рассрочке";
	ИначеЕсли ПоказательОснования = "ОТ" Тогда
		ПодсказкаПоказательДаты = "Дата решения об отсрочке";
	ИначеЕсли ПоказательОснования = "ВУ" Тогда
		ПодсказкаПоказательДаты = "Дата принятия арбитражным судом решения о введении внешнего управления";
	ИначеЕсли ПоказательОснования = "РТ" Тогда
		ПодсказкаПоказательДаты = "Дата решения о реструктуризации";
	ИначеЕсли ПоказательОснования = "ПР" Тогда
		ПодсказкаПоказательДаты = "Дата решения о приостановлении взыскания";
	ИначеЕсли ПоказательОснования = "АП" Тогда
		ПодсказкаПоказательДаты = "Дата акта проверки";
	ИначеЕсли ПоказательОснования = "АР" Тогда
		ПодсказкаПоказательДаты = "Дата вынесения исполнительного документа и возбужденного на его основании исполнительного производства";
	ИначеЕсли ПоказательОснования = "БФ" Тогда
		ПодсказкаПоказательДаты = "При уплате налога на основании налоговой декларации - дата представления данной декларации в налоговый орган либо дата отправки декларации по почте";
	КонецЕсли;
	ЭлементыФормы.ПодсказкаПоказательДаты.Заголовок = ПодсказкаПоказательДаты;
	
КонецПроцедуры

Процедура ОбновитьПодсказкиТаможенногоПлатежа()

	Если ПоказательОснования = "ДЕ" Тогда
		ПодсказкаПоказательНомера = "Последние 7 символов из номера таможенной декларации (порядковый номер)";
	ИначеЕсли ПоказательОснования = "ПО" Тогда
		ПодсказкаПоказательНомера = "Номер таможенного приходного ордера";
	ИначеЕсли ПоказательОснования = "КВ" Тогда
		ПодсказкаПоказательНомера = "Постановление-квитанция (при уплате штрафа)";
	ИначеЕсли ПоказательОснования = "КТ" Тогда
		ПодсказкаПоказательНомера = "Последние 7 символов из номера таможенной декларации (порядковый номер)";
	ИначеЕсли ПоказательОснования = "ИД" Тогда
		ПодсказкаПоказательНомера = "Номер исполнительного документа";
	ИначеЕсли ПоказательОснования = "ИП" Тогда
		ПодсказкаПоказательНомера = "Номер инкассового поручения";
	ИначеЕсли ПоказательОснования = "ТУ" Тогда
		ПодсказкаПоказательНомера = "Номер требования об уплате таможенных платежей";
	ИначеЕсли ПоказательОснования = "БД" Тогда
		ПодсказкаПоказательНомера = "Номер документа бухгалтерских служб таможенных органов";
	ИначеЕсли ПоказательОснования = "ИН" Тогда
		ПодсказкаПоказательНомера = "Номер документа инкассации";
	ИначеЕсли ПоказательОснования = "КП" Тогда
		ПодсказкаПоказательНомера = "Номер соглашения о взаимодействии при уплате крупными плательщиками суммарных платежей в централизованном порядке";
	КонецЕсли;
	ЭлементыФормы.ПодсказкаПоказательНомераТаможня.Заголовок = ПодсказкаПоказательНомера;
	
	Если ПоказательОснования = "ДЕ" Тогда
		ПодсказкаПоказательДаты = "Дата из номера таможенной декларации";
	ИначеЕсли ПоказательОснования = "ПО" Тогда
		ПодсказкаПоказательДаты = "Дата таможенного приходного ордера";
	ИначеЕсли ПоказательОснования = "КВ" Тогда
		ПодсказкаПоказательДаты = "Постановление-квитанция (при уплате штрафа)";
	ИначеЕсли ПоказательОснования = "КТ" Тогда
		ПодсказкаПоказательДаты = "Дата из номера таможенной декларации";
	ИначеЕсли ПоказательОснования = "ИД" Тогда
		ПодсказкаПоказательДаты = "Дата исполнительного документа";
	ИначеЕсли ПоказательОснования = "ИП" Тогда
		ПодсказкаПоказательДаты = "Дата инкассового поручения";
	ИначеЕсли ПоказательОснования = "ТУ" Тогда
		ПодсказкаПоказательДаты = "Дата требования об уплате таможенных платежей";
	ИначеЕсли ПоказательОснования = "БД" Тогда
		ПодсказкаПоказательДаты = "Дата документа бухгалтерских служб таможенных органов";
	ИначеЕсли ПоказательОснования = "ИН" Тогда
		ПодсказкаПоказательДаты = "Дата документа инкассации";
	ИначеЕсли ПоказательОснования = "КП" Тогда
		ПодсказкаПоказательДаты = "Дата соглашения о взаимодействии при уплате крупными плательщиками суммарных платежей в централизованном порядке";
	КонецЕсли;
	ЭлементыФормы.ПодсказкаПоказательДатыТаможня.Заголовок = ПодсказкаПоказательДаты;
	
КонецПроцедуры

Процедура ОбновитьПодсказки()
	
	Если ВидПеречисленияВБюджет = Перечисления.ВидыПеречисленийВБюджет.НалоговыйПлатеж Тогда
	
		ОбновитьПодсказкиНалоговогоПлатежа();
	
	ИначеЕсли ВидПеречисленияВБюджет = Перечисления.ВидыПеречисленийВБюджет.ТаможенныйПлатеж Тогда
	
		ОбновитьПодсказкиТаможенногоПлатежа();
	
	Иначе
		
		// иного платежа
	
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСпискиРеквизитовПлатежейВБюджет()

	ЭлементыФормы.СтатусСоставителя.СписокВыбора          = УправлениеДенежнымиСредствами.ПолучитьСписокСтатусовОтправителя();
	ЭлементыФормы.ПоказательОснования.СписокВыбора        = УправлениеДенежнымиСредствами.ПолучитьСписокОснованийНалоговогоПлатежа();
	ЭлементыФормы.ПоказательТипа.СписокВыбора             = УправлениеДенежнымиСредствами.ПолучитьСписокПоказателейТипаНалоговогоПлатежа();
	ЭлементыФормы.ПериодичностьУплаты.СписокВыбора        = УправлениеДенежнымиСредствами.ПолучитьСписокПериодичностиУплатыНалогов();
	ЭлементыФормы.ПоказательОснованияТаможня.СписокВыбора = УправлениеДенежнымиСредствами.ПолучитьСписокОснованийТаможенногоПлатежа();
	ЭлементыФормы.ПоказательТипаТаможня.СписокВыбора      = УправлениеДенежнымиСредствами.ПолучитьСписокПоказателейТипаТаможенногоПлатежа();
	
КонецПроцедуры // ЗаполнитьСпискиРеквизитовПлатежейВБюджет()

Процедура УстановитьРеквизитыПоказателяПериода()

	Если ПоказательПериода = "0" ИЛИ ПустаяСтрока(ПоказательПериода) ИЛИ ПустаяСтрока(СтрЗаменить(ПоказательПериода, ".", "")) Тогда
		ПериодичностьУплаты = "0";
	Иначе
		
		СтрокаВидаПериода = Лев(ПоказательПериода, 2);
		СтрокаПериода     = Сред(ПоказательПериода, 4, 2);
		СтрокаГода        = Сред(ПоказательПериода, 7);
		
		Если СтрокаВидаПериода = "ГД" Тогда
			ПериодичностьУплаты = "ГД";
		ИначеЕсли СтрокаВидаПериода = "ПЛ" Тогда
			ПериодичностьУплаты = "ПЛ";
		ИначеЕсли СтрокаВидаПериода = "КВ" Тогда
			ПериодичностьУплаты = "КВ";
		ИначеЕсли СтрокаВидаПериода = "МС" Тогда
			ПериодичностьУплаты = "МС";
		Иначе
			ПериодичностьУплаты = "-";
		КонецЕсли;
		
		Попытка
			
			ГодЧислом    = Число(СтрокаГода);
			ПериодЧислом = Число(СтрокаПериода);
			Если ПериодичностьУплаты = "-" Тогда
				ДеньЧислом  = Число(СтрокаВидаПериода);
				ДатаПлатежа = Дата(ГодЧислом, ПериодЧислом, ДеньЧислом);
			Иначе
				ГодПлатежа    = ГодЧислом;
				ПериодПлатежа = ПериодЧислом;
			КонецЕсли;
			
		Исключение
			
			ПоказательПериода = "0";
			ПериодичностьУплаты = "0";
			
		КонецПопытки;
		
	КонецЕсли;
	
	УстановитьВидимость();

КонецПроцедуры

Процедура УстановитьПоказательПериода()

	Если ПериодичностьУплаты = "0" Тогда
	
		ПоказательПериода = "0";
	
	ИначеЕсли ПериодичностьУплаты = "-" Тогда
	
		ПоказательПериода = Формат(ДатаПлатежа, "ДФ=dd.MM.yyyy");
		
	Иначе
		
		ПоказательПериода = ПериодичностьУплаты + "." + Формат(ПериодПлатежа, "ЧЦ=2; ЧН=; ЧВН=") + "." + Формат(ГодПлатежа, "ЧЦ=4; ЧГ=");
	
	КонецЕсли;

КонецПроцедуры

Процедура ПериодичностьУплатыПриИзменении(Элемент)
	
	Если ПериодичностьУплаты = Неопределено Тогда
		ПериодичностьУплаты = "0";
	КонецЕсли;
	
	Если ПериодичностьУплаты <> "0" И ПериодичностьУплаты <> "-" Тогда
		
		Если ГодПлатежа = 0 Тогда
			ГодПлатежа = Год(РабочаяДата);
		КонецЕсли;
		
		Если ПериодичностьУплаты = "ГД" Тогда
			ПериодПлатежа = 0;
		Иначе
			Если ПериодичностьУплаты = "МС" Тогда
				ПериодПлатежа = Мин(ПериодПлатежа, 12);
			ИначеЕсли ПериодичностьУплаты = "КВ" Тогда
				ПериодПлатежа = Мин(ПериодПлатежа, 4);
			ИначеЕсли ПериодичностьУплаты = "ПЛ" Тогда
				ПериодПлатежа = Мин(ПериодПлатежа, 2);
			КонецЕсли;
			ПериодПлатежа = Макс(1, ПериодПлатежа);
		КонецЕсли;
		
	Иначе
		
		ГодПлатежа = 0;
	
	КонецЕсли;
	
	УстановитьПоказательПериода();
	
	УстановитьВидимость();
	
КонецПроцедуры

Процедура ГодПлатежаПриИзменении(Элемент)
	
	УстановитьПоказательПериода();
	
	УстановитьВидимость();
	
КонецПроцедуры

Процедура ПериодПлатежаПриИзменении(Элемент)
	
	УстановитьПоказательПериода();
	
	УстановитьВидимость();
	
КонецПроцедуры

Процедура ДатаПлатежаПриИзменении(Элемент)
	
	УстановитьПоказательПериода();
	
	УстановитьВидимость();
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, ДокументОбъект,
		"ВидПеречисленияВБюджет, КодБК, КодОКАТО, СтатусСоставителя, ПоказательОснования, ПоказательПериода, ПоказательНомера, ПоказательТипа");
		
	АдминистраторДохода = Лев(КодБК, 3);
	ВидДохода = Сред(КодБК, 4, 10);
	ПодВидДохода = Сред(КодБК, 14, 4);
	КОСГУ = Сред(КодБК, 18);

	Если ПустаяСтрока(КодОКАТО) Тогда
		КодОКАТО = ДокументОбъект.Организация.КодПоОКАТО;
	КонецЕсли;
	Если ПустаяСтрока(СтатусСоставителя) Тогда
		СтатусСоставителя = ЭлементыФормы.СтатусСоставителя.СписокВыбора[0].Значение;
	КонецЕсли;
	
	ЗначениеПоказателяДаты = ДокументОбъект.ПоказательДаты;
	ЭлементыФормы.ПоказательДаты.СписокВыбора.Добавить("0 - значение не указывается");
	ЭлементыФормы.ПоказательДаты.СписокВыбора.Добавить("Дата...");
	ЭлементыФормы.ПоказательДатыТаможня.СписокВыбора.Добавить("0 - значение не указывается");
	ЭлементыФормы.ПоказательДатыТаможня.СписокВыбора.Добавить("Дата...");
	ЭлементыФормы.ПоказательДатыПрочее.СписокВыбора.Добавить("0 - значение не указывается");
	ЭлементыФормы.ПоказательДатыПрочее.СписокВыбора.Добавить("Дата...");
	Если ДокументОбъект.ПоказательДаты = "0" ИЛИ ПустаяСтрока(ДокументОбъект.ПоказательДаты) Тогда
		ПоказательДаты = "0 - значение не указывается";
	Иначе
		Попытка
			ПоказательДаты = Дата(Сред(ДокументОбъект.ПоказательДаты, 7, 4) + Сред(ДокументОбъект.ПоказательДаты, 4, 2) + Сред(ДокументОбъект.ПоказательДаты, 1, 2));
		Исключение
			ПоказательДаты = '00010101';
		КонецПопытки;
	КонецЕсли;
	
	Если ПустаяСтрока(ПоказательОснования) Тогда
		ПоказательОснования = ЭлементыФормы.ПоказательОснования.СписокВыбора[0].Значение;
		ПоказательОснованияПриИзменении("");
	КонецЕсли;
	Если ПустаяСтрока(ПоказательТипа) Тогда
		ПоказательТипа = ЭлементыФормы.ПоказательТипа.СписокВыбора[0].Значение;
	КонецЕсли;
	
	Если НЕ ВидПеречисленияВБюджет = Перечисления.ВидыПеречисленийВБюджет.ТаможенныйПлатеж Тогда
		Если ПустаяСтрока(ПоказательПериода) Тогда
			ПоказательПериода = "МС." + Формат(Месяц(ДокументОбъект.Дата), "ЧЦ=2; ЧВН=") + "." + Формат(Год(ДокументОбъект.Дата), "ЧГ=");
		КонецЕсли;
		УстановитьРеквизитыПоказателяПериода();
	Иначе
		УстановитьВидимость();
	КонецЕсли;
	
	ОбновитьПодсказки();
	
КонецПроцедуры

Процедура УстановитьПоказательДатыДокумента()

	Если ТипЗнч(ПоказательДаты) = Тип("Строка") ИЛИ ПоказательДаты = '00010101' Тогда
		ДокументОбъект.ПоказательДаты = "0";
	Иначе
		ДокументОбъект.ПоказательДаты = Формат(ПоказательДаты, "ДФ=dd.MM.yyyy");
	КонецЕсли;

КонецПроцедуры

Функция ЕстьОшибкиЗаполненияРеквизитов()
	
	ЕстьОшибки = Ложь;
	
	Если НЕ ЗначениеЗаполнено(ВидПеречисленияВБюджет) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не заполнен вид перечисления в бюджет", ЕстьОшибки);
	КонецЕсли;
	
	Если ПустаяСтрока(СтатусСоставителя) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не заполнено значение статуса составителя", ЕстьОшибки);
	КонецЕсли;
		
	Если СтрДлина(СокрЛП(КодБК)) <> 20 Тогда
		
		Если ПустаяСтрока(АдминистраторДохода) Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Не заполнены значения разрядов 1-3 КБК", ЕстьОшибки);
		ИначеЕсли СтрДлина(АдминистраторДохода) <> 3 Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Не полностью заполнены значения разрядов 1-3 КБК", ЕстьОшибки);
		КонецЕсли;
		Если ПустаяСтрока(ВидДохода) Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Не заполнены значения разрядов 4-13 КБК", ЕстьОшибки);
		ИначеЕсли СтрДлина(ВидДохода) <> 3 Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Не полностью заполнены значения разрядов 4-13 КБК", ЕстьОшибки);
		КонецЕсли;
		Если ПустаяСтрока(ПодвидДохода) Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Не заполнены значения разрядов 14-17 КБК", ЕстьОшибки);
		ИначеЕсли СтрДлина(ПодвидДохода) <> 3 Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Не полностью заполнены значения разрядов 14-17 КБК", ЕстьОшибки);
		КонецЕсли;
		Если ПустаяСтрока(КОСГУ) Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Не заполнены значения разрядов 18-20 КБК", ЕстьОшибки);
		ИначеЕсли СтрДлина(КОСГУ) <> 3 Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Не полностью заполнены значения разрядов 18-20 КБК", ЕстьОшибки);
		КонецЕсли;
		
	КонецЕсли; 
	
	Если ПустаяСтрока(КодОКАТО) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не заполнено значение кода ОКАТО", ЕстьОшибки);
	КонецЕсли;
	
	Возврат ЕстьОшибки;

КонецФункции

Процедура ОсновныеДействияФормыОК(Кнопка)
	
	ЕстьОшибки = ЕстьОшибкиЗаполненияРеквизитов();
	Если ЕстьОшибки Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ДокументОбъект, ЭтаФорма, 
		"ВидПеречисленияВБюджет, КодБК, КодОКАТО, 
		|СтатусСоставителя, ПоказательОснования, ПоказательПериода, ПоказательНомера, ПоказательТипа");
	УстановитьПоказательДатыДокумента();
	ЭтаФорма.Модифицированность = Ложь;
	ЭтаФорма.Закрыть(Истина);
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если ЭтаФорма.Модифицированность Тогда
	
		Ответ = Вопрос("Изменить значения реквизитов в документе?", РежимДиалогаВопрос.ДаНетОтмена, , КодВозвратаДиалога.Да);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			ЕстьОшибки = ЕстьОшибкиЗаполненияРеквизитов();
			Если ЕстьОшибки Тогда
				Отказ = Истина;
				Возврат;
			КонецЕсли;
			ЗаполнитьЗначенияСвойств(ДокументОбъект, ЭтаФорма, 
				"ВидПеречисленияВБюджет, КодБК, КодОКАТО, 
				|СтатусСоставителя, ПоказательОснования, ПоказательПериода, ПоказательНомера, ПоказательТипа");
			УстановитьПоказательДатыДокумента();
			ЭтаФорма.Закрыть(Истина);
		ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
			ЭтаФорма.Закрыть();
		Иначе
			Отказ = Истина;
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры

Процедура ПоказательОснованияПриИзменении(Элемент)
	
	Если ПустаяСтрока(ПоказательОснования) Тогда
		ПоказательОснования = "0";
	КонецЕсли;
	
	Если ВидПеречисленияВБюджет = Перечисления.ВидыПеречисленийВБюджет.НалоговыйПлатеж Тогда
		
		Если ПоказательОснования = "ТР" Тогда
			ПериодичностьУплаты = "-";
		ИначеЕсли ПоказательОснования = "РС" Тогда
			ПериодичностьУплаты = "-";
		ИначеЕсли ПоказательОснования = "ОТ" Тогда
			ПериодичностьУплаты = "-";
		ИначеЕсли ПоказательОснования = "РТ" Тогда
			ПериодичностьУплаты = "-";
		ИначеЕсли ПоказательОснования = "ВУ" Тогда
			ПериодичностьУплаты = "-";
		ИначеЕсли ПоказательОснования = "ПР" Тогда
			ПериодичностьУплаты = "-";
		ИначеЕсли ПоказательОснования = "АП" Тогда
			ПериодичностьУплаты = "0";
		ИначеЕсли ПоказательОснования = "АР" Тогда
			ПериодичностьУплаты = "0";
		Иначе
			ПериодичностьУплаты = "МС";
		КонецЕсли;
		
		ПериодичностьУплатыПриИзменении("");
		
		Если ПоказательОснования = "ТП" ИЛИ ПоказательОснования = "ЗД" Тогда
			ПоказательНомера = "0";
		КонецЕсли;
		
		Если ПоказательОснования = "ЗД" Тогда
			ПоказательДаты = "0 - значение не указывается";
		ИначеЕсли ПоказательОснования <> "0" И ТипЗнч(ПоказательДаты) <> Тип("Дата") Тогда
			ПоказательДаты = '00010101';
		КонецЕсли;
		
	КонецЕсли;
	
	ОбновитьПодсказки();
	
	УстановитьВидимость();
	
КонецПроцедуры

Процедура ПоказательДатыНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = (ТипЗнч(ПоказательДаты) = Тип("Дата"));

КонецПроцедуры

Процедура ПоказательДатыОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = (ТипЗнч(ПоказательДаты) = Тип("Дата"));

КонецПроцедуры

Процедура ПоказательДатыОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) <> Тип("Строка") Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	Если ВыбранноеЗначение = "Дата..." Тогда
		Если ТипЗнч(ПоказательДаты) = Тип("Строка") Тогда
			ПоказательДаты = '00010101';
		КонецЕсли; 
	Иначе
		ПоказательДаты = "0 - значение не указывается";
	КонецЕсли;
	
	УстановитьВидимость();
	
КонецПроцедуры

Процедура ПоказательДатыПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(ПоказательДаты) Тогда
		ПоказательДаты = "0 - значение не указывается";
	КонецЕсли;
	
	УстановитьВидимость();
	
КонецПроцедуры

Процедура ПоказательНомераПриИзменении(Элемент)
	
	Если ПустаяСтрока(ПоказательНомера) Тогда
		ПоказательНомера = "0";
	КонецЕсли;
	
КонецПроцедуры

Процедура ПоказательПериодаПриИзменении(Элемент)
	
	Если ПустаяСтрока(ПоказательПериода) Тогда
		ПоказательПериода = "0";
	КонецЕсли;
	
КонецПроцедуры

Процедура СтатусСоставителяПриИзменении(Элемент)
	
	Если ПустаяСтрока(СтатусСоставителя) Тогда
		СтатусСоставителя = "01";
	КонецЕсли;
	
	Если СтатусСоставителя = "08" Тогда
		ПоказательТипа      = "0";
		ПоказательОснования = "0";
		ПоказательПериода   = "0";
		ПоказательДаты      = "0 - значение не указывается";
		ПоказательНомера    = "0";
	Иначе
		Если ПустаяСтрока(ПоказательОснования) ИЛИ ПоказательОснования = "0" Тогда
			ПоказательОснования = ЭлементыФормы.ПоказательОснования.СписокВыбора[0].Значение;
			ПоказательОснованияПриИзменении("");
		КонецЕсли;
	КонецЕсли;
	
	УстановитьРеквизитыПоказателяПериода();
	
	ОбновитьПодсказки();
	
	УстановитьВидимость();
	
КонецПроцедуры

Процедура АдминистраторДоходаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ФормаВыбораКодаИзКлассификатора = Справочники.ВидыНалоговИПлатежейВБюджет.ПолучитьФорму("ФормаВыбораКодаИзКлассификатора", Элемент);
	ФормаВыбораКодаИзКлассификатора.ИмяМакета = "АдминистраторыДоходовБюджетов";
	ФормаВыбораКодаИзКлассификатора.СтрокаПоиска = АдминистраторДохода;
	ФормаВыбораКодаИзКлассификатора.Заголовок = "Выберите администратора доходов из классификатора";
	ФормаВыбораКодаИзКлассификатора.Открыть();
	
КонецПроцедуры

Процедура АдминистраторДоходаПриИзменении(Элемент)
	
	УстановитьКодБК();
	
КонецПроцедуры

Процедура ВидДоходаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ФормаВыбораКодаИзКлассификатора = Справочники.ВидыНалоговИПлатежейВБюджет.ПолучитьФорму("ФормаВыбораКодаИзКлассификатора", Элемент);
	ФормаВыбораКодаИзКлассификатора.ИмяМакета = "КлассификацияДоходовБюджетов";
	// В классификаторе доходов подвид дохода (знаки 11-14) всегда "0000"
	СтатьяДоходаДляПоиска = ВидДохода + "0000" + КОСГУ;
	ФормаВыбораКодаИзКлассификатора.СтрокаПоиска = СтатьяДоходаДляПоиска;
	ФормаВыбораКодаИзКлассификатора.Заголовок = "Выберите статью доходов из классификатора";
	ФормаВыбораКодаИзКлассификатора.Открыть();
	
КонецПроцедуры

Процедура ВидДоходаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтатьяДоходаДляПоиска = ВидДохода + "0000" + КОСГУ;
	Если ВыбранноеЗначение = СтатьяДоходаДляПоиска Тогда
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
	Если ПоказательТипа = "НС" ИЛИ ПоказательТипа = "АВ" Тогда
		ПодвидДохода = "1000";
	ИначеЕсли ПоказательТипа = "ПЕ" ИЛИ ПоказательТипа = "ПЦ" Тогда
		ПодвидДохода = "2000";
	ИначеЕсли ПоказательТипа = "АШ" ИЛИ ПоказательТипа = "СА" Тогда
		ПодвидДохода = "3000";
	Иначе
		// По умолчанию подставляем подвид "Налог" с кодом 1000
		ПодвидДохода = "1000";
	КонецЕсли;
	КОСГУ = Сред(ВыбранноеЗначение, 15);
	
	УстановитьКодБК();
	
КонецПроцедуры

Процедура ВидДоходаПриИзменении(Элемент)
	
	УстановитьКодБК();
	
КонецПроцедуры

Процедура ПодвидДоходаПриИзменении(Элемент)
	
	УстановитьКодБК();
	
КонецПроцедуры

Процедура КОСГУПриИзменении(Элемент)
	
	УстановитьКодБК();
	
КонецПроцедуры

Процедура ПоказательТипаПриИзменении(Элемент)
	
	Если ПустаяСтрока(ПоказательТипа) Тогда
		ПоказательТипа = "0";
	КонецЕсли;
	
	Если ВидПеречисленияВБюджет = Перечисления.ВидыПеречисленийВБюджет.НалоговыйПлатеж Тогда
		
		Если ПоказательТипа = "НС" ИЛИ ПоказательТипа = "АВ" Тогда
			ПодвидДохода = "1000";
		ИначеЕсли ПоказательТипа = "ПЕ" ИЛИ ПоказательТипа = "ПЦ" Тогда
			ПодвидДохода = "2000";
		ИначеЕсли ПоказательТипа = "АШ" ИЛИ ПоказательТипа = "СА" Тогда
			ПодвидДохода = "3000";
		КонецЕсли;
		
		УстановитьКодБК();
		
	ИначеЕсли ВидПеречисленияВБюджет = Перечисления.ВидыПеречисленийВБюджет.ТаможенныйПлатеж Тогда
		
		Если ПоказательТипа = "ТП" ИЛИ ПоказательТипа = "ЗД" Тогда
			ПодвидДохода = "1000";
		ИначеЕсли ПоказательТипа = "ПЕ" Тогда
			ПодвидДохода = "2000";
		ИначеЕсли ПоказательТипа = "ШТ" Тогда
			ПодвидДохода = "3000";
		КонецЕсли;
		
		УстановитьКодБК();
		
	КонецЕсли;
	
КонецПроцедуры

// {ОбособленныеПодразделения

Процедура КодОКАТОНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ФормаВыбора = Справочники.КодыОКАТО.ПолучитьФормуВыбора(, Элемент);
	ТекЗначение = Справочники.КодыОКАТО.НайтиПоКоду(КодОКАТО);
	Если ЗначениеЗаполнено(ТекЗначение) Тогда
		ФормаВыбора.НачальноеЗначениеВыбора = ТекЗначение;
	КонецЕсли;
	ФормаВыбора.Открыть();
	
КонецПроцедуры

Процедура КодОКАТООбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.КодыОКАТО") Тогда
		СтандартнаяОбработка = Ложь;
		КодОКАТО = ВыбранноеЗначение.Код;
	КонецЕсли;
	
КонецПроцедуры

// }ОбособленныеПодразделения 

Процедура КодОКАТОПриИзменении(Элемент)
	
	Если ПустаяСтрока(КодОКАТО) Тогда
		
		Если ВидПеречисленияВБюджет = Перечисления.ВидыПеречисленийВБюджет.ТаможенныйПлатеж Тогда
			КодОКАТО = "0";
		КонецЕсли;
		
		Возврат;
	КонецЕсли;
	
	// {ОбособленныеПодразделения

	Если КодОКАТО = "0" Тогда
		Возврат;
	КонецЕсли;
	
	ТекЗначение = Справочники.КодыОКАТО.НайтиПоКоду(КодОКАТО);
	Если НЕ ЗначениеЗаполнено(ТекЗначение) Тогда
		
		ТекстВопроса = "Такого кода нет в справочнике кодов ОКАТО. 
			|Добавить код в справочник?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Да Тогда
		
			НовыйЭлемент = Справочники.КодыОКАТО.СоздатьЭлемент();
			НовыйЭлемент.Код = КодОКАТО;
			ФормаЭлемента = НовыйЭлемент.ПолучитьФорму();
			ФормаЭлемента.ТекущийЭлемент = ФормаЭлемента.ЭлементыФормы.Наименование;
			ФормаЭлемента.Открыть();
		
		КонецЕсли;
		
	КонецЕсли;
	
	// }ОбособленныеПодразделения 
	
КонецПроцедуры

Процедура ВидПеречисленияВБюджетПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(ВидПеречисленияВБюджет) Тогда
		ВидПеречисленияВБюджет = Перечисления.ВидыПеречисленийВБюджет.ИнойПлатеж;
	КонецЕсли;
	
	СтруктураРеквизитов = УправлениеДенежнымиСредствами.ПолучитьРеквизитыПлатежаВБюджетПоУмолчанию(
		ДокументОбъект.Дата, ДокументОбъект.Организация, ДокументОбъект.ПеречислениеВБюджет, ВидПеречисленияВБюджет);
		
	ЗаполнитьЗначенияСвойств(ЭтаФорма, СтруктураРеквизитов);
	Если ПоказательДаты = "0" ИЛИ ПустаяСтрока(ПоказательДаты) Тогда
		ПоказательДаты = "0 - значение не указывается";
	КонецЕсли;
	 
	ОбновитьПодсказки();
	
	УстановитьВидимость();
	
КонецПроцедуры


ЗаполнитьСпискиРеквизитовПлатежейВБюджет();

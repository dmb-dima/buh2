Перем КартинкаЗеленаяГалка;

// Процедура установки быстрого отбора по организации
//
Процедура УстановитьОтборПоОрганизации()

	ОтключитьОбработчикИзмененияДанных("ДокументСписок.Отбор");
	
	Отбор.Организация.Установить(Организация, Не Организация.Пустая());
	
	ПодключитьОбработчикИзмененияДанных("ДокументСписок.Отбор", "ДокументСписокПриИзмененииОтбора", Истина);
	
КонецПроцедуры // УстановитьОтборПоОрганизации()	

// Процедура установки быстрого отбора по банковскому счету
//
Процедура УстановитьОтборПоБанковскомуСчету()

	ОтключитьОбработчикИзмененияДанных("ДокументСписок.Отбор");
	
	Отбор.СчетОрганизации.Установить(БанковскийСчет, Не БанковскийСчет.Пустая());
	
	ПодключитьОбработчикИзмененияДанных("ДокументСписок.Отбор", "ДокументСписокПриИзмененииОтбора", Истина);
	
КонецПроцедуры // УстановитьОтборПоБанковскомуСчету()	

// Процедура установки быстрого отбора по дате
//
Процедура УстановитьОтборПоДате()

	ОтключитьОбработчикИзмененияДанных("ДокументСписок.Отбор");
	
	Если Дата = '00010101' Тогда
		Отбор.Дата.Использование = Ложь;
	Иначе
		Отбор.Дата.ВидСравнения = ВидСравнения.ИнтервалВключаяГраницы;
		Отбор.Дата.ЗначениеС = НачалоДня(Дата);
		Отбор.Дата.ЗначениеПо = КонецДня(Дата);
		Отбор.Дата.Использование = Истина;
	КонецЕсли;
	
	ПодключитьОбработчикИзмененияДанных("ДокументСписок.Отбор", "ДокументСписокПриИзмененииОтбора", Истина);

КонецПроцедуры // УстановитьОтборПоДате()	

// Процедура установки быстрого отбора по контрагенту
//
Процедура УстановитьОтборПоКонтрагенту()

	ОтключитьОбработчикИзмененияДанных("ДокументСписок.Отбор");
	
	Отбор.Контрагент.Установить(Контрагент, Не Контрагент.Пустая());
	            
	ПодключитьОбработчикИзмененияДанных("ДокументСписок.Отбор", "ДокументСписокПриИзмененииОтбора", Истина);

КонецПроцедуры // УстановитьОтборПоКонтрагенту()	

// Процедура установки быстрого отбора по назначению платежа с видом сравнения "содержит"
//
Процедура УстановитьОтборПоНазначениюПлатежа()

	ОтключитьОбработчикИзмененияДанных("ДокументСписок.Отбор");
	
	Если ПустаяСтрока(НазначениеПлатежа) Тогда
		Отбор.НазначениеПлатежа.Использование = Ложь;
	Иначе
		Отбор.НазначениеПлатежа.ВидСравнения = ВидСравнения.Содержит;
		Отбор.НазначениеПлатежа.Значение = НазначениеПлатежа;
		Отбор.НазначениеПлатежа.Использование = Истина;
	КонецЕсли;
	
	ПодключитьОбработчикИзмененияДанных("ДокументСписок.Отбор", "ДокументСписокПриИзмененииОтбора", Истина);

КонецПроцедуры // УстановитьОтборПоНазначениюПлатежа()	

// Процедура вызывается при изменении значения быстрого отбора по организации
//
Процедура ОрганизацияПриИзменении(Элемент)

	БанковскийСчет = Организация.ОсновнойБанковскийСчет;

	УстановитьОтборПоОрганизации();
	УстановитьОтборПоБанковскомуСчету();

КонецПроцедуры

// Процедура вызывается при изменении значения быстрого отбора по банковскому счету
//
Процедура БанковскийСчетПриИзменении(Элемент)

	Если Организация.Пустая() И НЕ БанковскийСчет.Пустая() Тогда
		Организация = БанковскийСчет.Владелец;
		УстановитьОтборПоОрганизации();
	КонецЕсли;

	УстановитьОтборПоБанковскомуСчету();

КонецПроцедуры

// Процедура вызывается при изменении значения быстрого отбора по дате
//
Процедура ДатаПриИзменении(Элемент)

	УстановитьОтборПоДате();

КонецПроцедуры

// Процедура вызывается при изменении значения быстрого отбора по контрагенту
//
Процедура КонтрагентПриИзменении(Элемент)

	УстановитьОтборПоКонтрагенту();

КонецПроцедуры

// Процедура вызывается при изменении значения быстрого отбора по назначению платежа
//
Процедура НазначениеПлатежаПриИзменении(Элемент)

	УстановитьОтборПоНазначениюПлатежа();

КонецПроцедуры

//  Процедура печатает выбранный документ 
// Печатается та форма, которая была отпечатана при нажатии в документе кнопки
// печати по умолчанию
//
Процедура ДействияФормыДействиеПечать(Кнопка)

	Если ЭлементыФормы.ДокументСписок.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	УниверсальныеМеханизмы.НапечататьДокументИзФормыСписка(ЭлементыФормы.ДокументСписок.ТекущиеДанные.Ссылка);

КонецПроцедуры // ДействиеПечать()

// Процедура вызова структуры подчиненности документа
//
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	
	Если ЭлементыФормы.ДокументСписок.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(ЭлементыФормы.ДокументСписок.ТекущиеДанные.Ссылка);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()

	ОтборПоОрганизации = РаботаСДиалогами.УстановитьОтборПоОрганизации(ЭтаФорма,, глЗначениеПеременной("ОсновнаяОрганизация"), "ДокументСписок");

	Организация = Неопределено;
	Если ОтборПоОрганизации <> Неопределено Тогда
		Если ОтборПоОрганизации.ВидСравнения = ВидСравнения.Равно
			И ОтборПоОрганизации.Использование Тогда
			Организация = ОтборПоОрганизации.Значение;
			БанковскийСчет = Организация.ОсновнойБанковскийСчет;
			УстановитьОтборПоБанковскомуСчету();
		КонецЕсли; 
	КонецЕсли;
	
	РаботаСДиалогами.ИзменитьПредставлениеКнопкиВыбораСвойств(ЭтаФорма, РаботаСДиалогами.ПолучитьОписаниеЗначенийСвойствОбъекта(ЭлементыФормы.ДокументСписок.ТекущаяСтрока));
	
	ПодключитьОбработчикИзмененияДанных("ДокументСписок.Отбор", "ДокументСписокПриИзмененииОтбора", Истина);

КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновлениеЗначенийСвойств" И Источник = ЭлементыФормы.ДокументСписок.ТекущаяСтрока Тогда
		РаботаСДиалогами.ИзменитьПредставлениеКнопкиВыбораСвойств(ЭтаФорма, Параметр);
	ИначеЕсли ИмяСобытия = "ИзменениеТекущейОрганизации" Тогда
		РаботаСДиалогами.УстановитьОтборПоОрганизации(ЭтаФорма,, глЗначениеПеременной("ОсновнаяОрганизация"), "ДокументСписок", Истина);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ

Процедура ДокументСписокПриАктивизацииСтроки(Элемент)
	
	РаботаСДиалогами.ИзменитьПредставлениеКнопкиВыбораСвойств(ЭтаФорма, РаботаСДиалогами.ПолучитьОписаниеЗначенийСвойствОбъекта(ЭлементыФормы.ДокументСписок.ТекущаяСтрока));
	
КонецПроцедуры

Процедура ДокументСписокПриИзмененииОтбора(ПутьКДанным = "")

	Если ДокументСписок.Отбор.Организация.Использование
		И ДокументСписок.Отбор.Организация.ВидСравнения = ВидСравнения.Равно Тогда
		Организация = ДокументСписок.Отбор.Организация.Значение;
	Иначе
		Организация = Неопределено;
	КонецЕсли;
	
	Если ДокументСписок.Отбор.СчетОрганизации.Использование
		И ДокументСписок.Отбор.СчетОрганизации.ВидСравнения = ВидСравнения.Равно Тогда
		БанковскийСчет = ДокументСписок.Отбор.СчетОрганизации.Значение;
	Иначе
		БанковскийСчет = Неопределено;
	КонецЕсли;
	
	Если ДокументСписок.Отбор.Контрагент.Использование
		И ДокументСписок.Отбор.Контрагент.ВидСравнения = ВидСравнения.Равно Тогда
		Контрагент = ДокументСписок.Отбор.Контрагент.Значение;
	Иначе
		Контрагент = Неопределено;
	КонецЕсли;
	
	Если ДокументСписок.Отбор.Дата.Использование
		И ДокументСписок.Отбор.Дата.ВидСравнения = ВидСравнения.ИнтервалВключаяГраницы Тогда
		Дата = ДокументСписок.Отбор.Дата.ЗначениеС;
	Иначе
		Дата = Неопределено;
	КонецЕсли;
	
	Если ДокументСписок.Отбор.НазначениеПлатежа.Использование
		И ДокументСписок.Отбор.НазначениеПлатежа.ВидСравнения = ВидСравнения.Содержит Тогда
		НазначениеПлатежа = ДокументСписок.Отбор.НазначениеПлатежа.Значение;
	Иначе
		НазначениеПлатежа = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельСпискаВыгрузить(Кнопка)
	
	ОбработкаКБ = Обработки.КлиентБанк.Создать();
	Если ЗначениеЗаполнено(Организация) Тогда
		ОбработкаКБ.Организация = Организация;
	КонецЕсли;
	Если ЗначениеЗаполнено(БанковскийСчет) Тогда
		ОбработкаКБ.БанковскийСчет = БанковскийСчет;
	КонецЕсли;
	СохранитьЗначение("КлиентБанкРежимПоУмолчанию", "  Выгрузка  ");
	ФормаКБ = ОбработкаКБ.ПолучитьФорму(, ЭтаФорма);
	ФормаКБ.Открыть();
	
КонецПроцедуры

Процедура ДействияФормыДействиеСвойства(Кнопка)
	
	РаботаСДиалогами.ОткрытьСвойстваИзСписка(ЭлементыФормы.ДокументСписок.ТекущаяСтрока, ЭтаФорма);
	
КонецПроцедуры

Процедура ДокументСписокПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Если Элемент.Колонки.Оплачено.Видимость Тогда
		Для Каждого Строка Из ОформленияСтрок Цикл
			Отображать = Строка.Ячейки.Оплачено.Значение;
			Если ТипЗнч(Отображать) = Тип("Булево") и Отображать Тогда
				Строка.Ячейки.Оплачено.УстановитьКартинку(КартинкаЗеленаяГалка);
			Иначе 
				Строка.Ячейки.Оплачено.Текст = "";
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

КартинкаЗеленаяГалка = БиблиотекаКартинок.ЗеленаяГалка;
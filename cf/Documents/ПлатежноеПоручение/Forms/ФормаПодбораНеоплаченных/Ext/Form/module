Перем ДокументыСформированы;

Перем ОтмеченныеДокументы;
Перем ДокументыСОшибками;

Перем ЕстьДокументыДляОтметки;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Функция ПолучитьЗначениеОтметки(ДокументСсылка)
	
	НайденныйДокумент = ОтмеченныеДокументы.НайтиПоЗначению(ДокументСсылка);
	Возврат НайденныйДокумент <> Неопределено;

КонецФункции

Функция ПроверитьНаличиеДокументовДляОтметки()

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ЖурналБанк.Ссылка
	|ИЗ
	|	Документ.ПлатежноеПоручение КАК ЖурналБанк
	|ГДЕ
	|	ЖурналБанк.Дата МЕЖДУ &Дата1 И &Дата2
	|	И ЖурналБанк.Оплачено = ЛОЖЬ
	|	И ЖурналБанк.ПометкаУдаления = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("Дата1", ЖурналДокументовСписок.Отбор.Дата.ЗначениеС);
	Запрос.УстановитьПараметр("Дата2", ЖурналДокументовСписок.Отбор.Дата.ЗначениеПо);
	Запрос.УстановитьПараметр("Организация", ЖурналДокументовСписок.Отбор.Организация.Значение);
	Запрос.УстановитьПараметр("СчетОрганизации", ЖурналДокументовСписок.Отбор.СчетОрганизации.Значение);
	
	Если ЗначениеЗаполнено(ЖурналДокументовСписок.Отбор.Организация.Значение) Тогда
		Запрос.Текст = Запрос.Текст + "	
		|И ЖурналБанк.Организация = &Организация";
	КонецЕсли;
	Если ЗначениеЗаполнено(ЖурналДокументовСписок.Отбор.СчетОрганизации.Значение) Тогда
		Запрос.Текст = Запрос.Текст + "	
		|	И ЖурналБанк.СчетОрганизации = &СчетОрганизации";
	КонецЕсли;
		
	Результат = Запрос.Выполнить();
	
	Возврат НЕ Результат.Пустой();

КонецФункции 

Процедура УстановитьВидимость()

	ЕстьДокументыДляОтметки = ПроверитьНаличиеДокументовДляОтметки();
	
	Если ЕстьДокументыДляОтметки Тогда
		
		ЭлементыФормы.ДействияФормы.Кнопки.ОтметитьВсе.Доступность     = Истина;
		ЭлементыФормы.ДействияФормы.Кнопки.СнятьВсеОтметки.Доступность = Истина;
		
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.СформироватьСтрокиВыписки.Доступность        = Истина;		
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.СформироватьСтрокиВыписки.КнопкаПоУмолчанию = Истина;
		
	Иначе
		
		ЭлементыФормы.ДействияФормы.Кнопки.ОтметитьВсе.Доступность     = Ложь;
		ЭлементыФормы.ДействияФормы.Кнопки.СнятьВсеОтметки.Доступность = Ложь;
		
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.СформироватьСтрокиВыписки.Доступность        = Ложь;
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Закрыть.КнопкаПоУмолчанию = Истина;
		
	КонецЕсли;
	
	ВидимостьОрганизации = НЕ (ЖурналДокументовСписок.Отбор.Организация.Использование
		И ЖурналДокументовСписок.Отбор.Организация.ВидСравнения = ВидСравнения.Равно);
	ЭлементыФормы.ЖурналДокументовСписок.Колонки.Организация.Видимость = ВидимостьОрганизации;
	
	ВидимостьБанковскогоСчета = НЕ (ЖурналДокументовСписок.Отбор.СчетОрганизации.Использование
		И ЖурналДокументовСписок.Отбор.СчетОрганизации.ВидСравнения = ВидСравнения.Равно);
	ЭлементыФормы.ЖурналДокументовСписок.Колонки.СчетОрганизации.Видимость = ВидимостьБанковскогоСчета;

КонецПроцедуры

Процедура ОбновитьНадписи()

	Если ЕстьДокументыДляОтметки Тогда
		КоличествоДокументов = ОпределитьКоличествоДокуметов();		
		Если КоличествоДокументов <> 0 Тогда
			КоличествоДокументовСОшибками = ОпределитьКоличествоДокуметов(Истина);
			ЭлементыФормы.НадписьКомментарийСписание.Заголовок = 
			"Сформировано документов списания - " +КоличествоДокументов;
			Если КоличествоДокументовСОшибками > 0 Тогда
				ЭлементыФормы.НадписьКомментарийСписание.Заголовок = ЭлементыФормы.НадписьКомментарийСписание.Заголовок + ", из них с ошибками - " + КоличествоДокументовСОшибками + ". Непроведенные документы выделены красным цветом.";
			Иначе
				ЭлементыФормы.НадписьКомментарийСписание.Заголовок = ЭлементыФормы.НадписьКомментарийСписание.Заголовок + ", ошибок не обнаружено.";
			КонецЕсли;
		Иначе
			ЭлементыФормы.НадписьКомментарий.Заголовок = 
			"Отметьте флажками документы, которые нужно провести по выписке банка";
		КонецЕсли;
		
	Иначе
		ЭлементыФормы.НадписьКомментарий.Заголовок =
		"С " + Формат(ЖурналДокументовСписок.Отбор.Дата.ЗначениеС, "ДФ=dd.MM.yyyy")
		+ " по " + Формат(ЖурналДокументовСписок.Отбор.Дата.ЗначениеПо, "ДФ=dd.MM.yyyy")
		+ " нет неоплаченных документов по организации """ + ЖурналДокументовСписок.Отбор.Организация.Значение +  """";		
		
		Если ЗначениеЗаполнено(ЖурналДокументовСписок.Отбор.СчетОрганизации.Значение) Тогда
			ЭлементыФормы.НадписьКомментарий.Заголовок =  ЭлементыФормы.НадписьКомментарий.Заголовок
		+ " и счету в банке """ + ЖурналДокументовСписок.Отбор.СчетОрганизации.Значение + """";
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

Процедура ОбновитьДанные()

	ЖурналДокументовСписок.Обновить();
	
	Если НЕ ДокументыСформированы Тогда
		УстановитьВидимость();
	КонецЕсли;
	
	ОбновитьНадписи();
	
КонецПроцедуры

Процедура ВключитьВсеДокументыВОтмеченные()

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЖурналБанк.Ссылка
	|ИЗ
	|	Документ.ПлатежноеПоручение КАК ЖурналБанк
	|ГДЕ
	|	ЖурналБанк.Дата МЕЖДУ &Дата1 И &Дата2
	|	И ЖурналБанк.Оплачено = ЛОЖЬ
	|	И ЖурналБанк.ПометкаУдаления = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("Дата1", ЖурналДокументовСписок.Отбор.Дата.ЗначениеС);
	Запрос.УстановитьПараметр("Дата2", ЖурналДокументовСписок.Отбор.Дата.ЗначениеПо);
	Запрос.УстановитьПараметр("Организация", ЖурналДокументовСписок.Отбор.Организация.Значение);
	Запрос.УстановитьПараметр("СчетОрганизации", ЖурналДокументовСписок.Отбор.СчетОрганизации.Значение);
	
	Если ЗначениеЗаполнено(ЖурналДокументовСписок.Отбор.Организация.Значение) Тогда
		Запрос.Текст = Запрос.Текст + "	
		|И ЖурналБанк.Организация = &Организация";
	КонецЕсли;
	Если ЗначениеЗаполнено(ЖурналДокументовСписок.Отбор.СчетОрганизации.Значение) Тогда
		Запрос.Текст = Запрос.Текст + "	
		|	И ЖурналБанк.СчетОрганизации = &СчетОрганизации";
	КонецЕсли;
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		ОтмеченныеДокументы.Добавить(Выборка.Ссылка);
	КонецЦикла;

КонецПроцедуры

Процедура СформироватьСтрокиВыписки(Кнопка)
	
	НетОтмеченныхДокументов = ОтмеченныеДокументы.Количество() = 0;
	Если НетОтмеченныхДокументов Тогда
	
		Предупреждение("Нет отмеченных документов");
		Возврат;
	
	КонецЕсли;
	
	ДокументыСОшибками.Очистить();
	
	Для каждого ОтмеченныйЭлемент Из ОтмеченныеДокументы Цикл
		
		СтрокаВыпискиБанка = Неопределено;
		
		Если ЗначениеЗаполнено(ОтмеченныйЭлемент.Значение.ДокументОснование) И 
			ТипЗнч(ОтмеченныйЭлемент.Значение.ДокументОснование) = Тип("ДокументСсылка.СписаниеСРасчетногоСчета") Тогда
			СтрокаВыпискиБанка = ОтмеченныйЭлемент.Значение.ДокументОснование.ПолучитьОбъект();
		Иначе		
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("ДокументСсылка", ОтмеченныйЭлемент.Значение);
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
			|	ДокСписания.Ссылка
			|ИЗ
			|	Документ.СписаниеСРасчетногоСчета КАК ДокСписания
			|ГДЕ
			|	ДокСписания.ДокументОснование = &ДокументСсылка";
			ВыборкаИзЗапроса = Запрос.Выполнить().Выбрать();
			
			Если ВыборкаИзЗапроса.Следующий() Тогда
				СтрокаВыпискиБанка = ВыборкаИзЗапроса.Ссылка.ПолучитьОбъект();
				СтрокаВыпискиБанка.Дата = ДатаВыписки;
				СтрокаВыпискиБанка.НеПодтвержденоВыпискойБанка = Ложь;
			КонецЕсли;
		КонецЕсли;
			
		Если СтрокаВыпискиБанка = Неопределено Тогда
			СтрокаВыпискиБанка = Документы.СписаниеСРасчетногоСчета.СоздатьДокумент();
			СтрокаВыпискиБанка.Дата = ДатаВыписки;
			СтрокаВыпискиБанка.Заполнить(ОтмеченныйЭлемент.Значение);
		Иначе		
			СтрокаВыпискиБанка.Дата = ДатаВыписки;
			СтрокаВыпискиБанка.НеПодтвержденоВыпискойБанка = Ложь;
		КонецЕсли;

		Попытка
			
			СтрокаВыпискиБанка.Записать(РежимЗаписиДокумента.Проведение);
	
		Исключение
			СтрокаВыпискиБанка.Записать(РежимЗаписиДокумента.Запись);
			Сообщить("Не удалось провести документ " + Строка(СтрокаВыпискиБанка), СтатусСообщения.Важное);
			НоваяСтрока = ДокументыСОшибками.Добавить();
			НоваяСтрока.ДокументПлатежноеПоручение = ОтмеченныйЭлемент.Значение;
		
		КонецПопытки;
		
		// заполняем таблицу документов "Списание с расчетного счета"
		НоваяСтрока = ТаблицаДокументовСписания.Добавить();		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаВыпискиБанка.Ссылка);
		НоваяСтрока.Ссылка = СтрокаВыпискиБанка.Ссылка;
		
	КонецЦикла;
	
	Оповестить( , ВладелецФормы);
	
	НетОшибокПриПроведении = ДокументыСОшибками.Количество() = 0;
	
	ДокументыСформированы = Истина;

	ПоказатьДокументыСписания();
	ОбновитьНадписи();
	
КонецПроцедуры

Процедура ПоказатьДокументыСписания()
	
	ЭлементыФормы.Организация.Доступность 		= Ложь;
	ЭлементыФормы.БанковскийСчет.Доступность 	= Ложь;
	ЭлементыФормы.ДатаВыписки.Доступность 		= Ложь;
	
	ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Удалить(ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Индекс(ЭлементыФормы.ОсновныеДействияФормы.Кнопки.СформироватьСтрокиВыписки));
	ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Закрыть.КнопкаПоУмолчанию = Истина;
	
	ЭлементыФормы.ПанельДокументов.ТекущаяСтраница = ЭлементыФормы.ПанельДокументов.Страницы.СписаниеСРасчетногоСчета;
	УстановитьВидимостьТаблицыДокументовСписания();
	
КонецПроцедуры

Процедура ОбновитьТаблицуДокументовСписания()
	
	Для Каждого СтрокаТаблицы ИЗ ТаблицаДокументовСписания Цикл
		ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаТаблицы.Ссылка);
	КонецЦикла;
	
	ОбновитьНадписи();
	
КонецПроцедуры

Процедура УстановитьВидимостьТаблицыДокументовСписания()
	
	ВидимостьОрганизации = НЕ (ЖурналДокументовСписок.Отбор.Организация.Использование
		И ЖурналДокументовСписок.Отбор.Организация.ВидСравнения = ВидСравнения.Равно);
	ЭлементыФормы.ТаблицаДокументовСписания.Колонки.Организация.Видимость = ВидимостьОрганизации;
	
	ВидимостьБанковскогоСчета = НЕ (ЖурналДокументовСписок.Отбор.СчетОрганизации.Использование
		И ЖурналДокументовСписок.Отбор.СчетОрганизации.ВидСравнения = ВидСравнения.Равно);
	ЭлементыФормы.ТаблицаДокументовСписания.Колонки.СчетОрганизации.Видимость = ВидимостьБанковскогоСчета;
	
КонецПроцедуры

// Процедура вызывается при изменении значения быстрого отбора по организации
//
Процедура ОрганизацияПриИзменении(Элемент)
    
	УстановитьОтборПоОрганизации();
	
	БанковскийСчет = Организация.ОсновнойБанковскийСчет;
	УстановитьОтборПоБанковскомуСчету();

	УстановитьВидимость();
	
	ОбновитьНадписи();
	
КонецПроцедуры

// Процедура установки быстрого отбора по организации
//
Процедура УстановитьОтборПоОрганизации()

	ЖурналДокументовСписок.Отбор.Организация.Установить(Организация, Не Организация.Пустая());
	ПодключитьОбработчикИзмененияДанных("ЖурналДокументовСписок.Отбор", "ЖурналДокументовСписокПриИзмененииОтбора", Истина);
	
КонецПроцедуры // УстановитьОтборПоОрганизации()	

// Процедура вызывается при изменении значения быстрого отбора по банковскому счету
//
Процедура БанковскийСчетПриИзменении(Элемент)

	Если Организация.Пустая() И НЕ БанковскийСчет.Пустая() Тогда
		Организация = БанковскийСчет.Владелец;
		УстановитьОтборПоОрганизации();
	КонецЕсли;

	УстановитьОтборПоБанковскомуСчету();

	УстановитьВидимость();
	
	ОбновитьНадписи();
	
КонецПроцедуры

// Процедура установки быстрого отбора по банковскому счету
//
Процедура УстановитьОтборПоБанковскомуСчету()

	ЖурналДокументовСписок.Отбор.СчетОрганизации.Установить(БанковскийСчет, Не БанковскийСчет.Пустая());
	ПодключитьОбработчикИзмененияДанных("ЖурналДокументовСписок.Отбор", "ЖурналДокументовСписокПриИзмененииОтбора", Истина);
	
КонецПроцедуры // УстановитьОтборПоБанковскомуСчету()	

// Процедура вызывается при изменении значения быстрого отбора по дате
//
Процедура ДатаПриИзменении(Элемент)

	УстановитьОтборПоДате();
	
	УстановитьВидимость();
	
	ОбновитьНадписи();
	
КонецПроцедуры

// Процедура вызывается при попытке очистить быстрый отбор по дате
//
Процедура ДатаОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

// Процедура установки быстрого отбора по дате
//
Процедура УстановитьОтборПоДате()

	Если ДатаВыписки = '00010101' Тогда
		ЖурналДокументовСписок.Отбор.Дата.Использование = Ложь;
	Иначе
		ДатаОтбора = ДатаВыписки;
		ЖурналДокументовСписок.Отбор.Дата.ВидСравнения = ВидСравнения.ИнтервалВключаяГраницы;
		ЖурналДокументовСписок.Отбор.Дата.ЗначениеС = НачалоДня(ДатаОтбора - 864000);
		ЖурналДокументовСписок.Отбор.Дата.ЗначениеПо = КонецДня(ДатаОтбора);
		ЖурналДокументовСписок.Отбор.Дата.Использование = Истина;
	КонецЕсли;
	ОбновитьНадписи();
	
	ПодключитьОбработчикИзмененияДанных("ЖурналДокументовСписок.Отбор", "ЖурналДокументовСписокПриИзмененииОтбора", Истина);

КонецПроцедуры // УстановитьОтборПоДате()	

Функция ОпределитьКоличествоДокуметов(ТолькоОшибки = Ложь)
	
	Если НЕ ТолькоОшибки Тогда
		КоличествоДокументов = ТаблицаДокументовСписания.Количество();
	Иначе
		КоличествоДокументов = 0;
		Для Каждого СтрокаТаблицы ИЗ ТаблицаДокументовСписания Цикл
			Если НЕ СтрокаТаблицы.Проведен Тогда
				КоличествоДокументов = КоличествоДокументов + 1;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат КоличествоДокументов;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()
	
	Если Организация = Неопределено Тогда
		ОтборПоОрганизации = РаботаСДиалогами.УстановитьОтборПоОрганизации(ЭтаФорма,, глЗначениеПеременной("ОсновнаяОрганизация"), "ЖурналДокументовСписок");
		Если ОтборПоОрганизации <> Неопределено Тогда
			Если ОтборПоОрганизации.ВидСравнения = ВидСравнения.Равно
				И ОтборПоОрганизации.Использование Тогда
				Организация = ОтборПоОрганизации.Значение;
			КонецЕсли; 
		КонецЕсли;
	КонецЕсли;
	
	ЭлементыФормы.ЖурналДокументовСписок.НастройкаОтбора.Организация.Доступность     = Ложь;
	ЭлементыФормы.ЖурналДокументовСписок.НастройкаОтбора.СчетОрганизации.Доступность = Ложь;
	
	//Установка отбора по статусу оплаты
	ЖурналДокументовСписок.Отбор.Оплачено.Установить(Ложь, Истина);	
	ЭлементыФормы.ЖурналДокументовСписок.НастройкаОтбора.Оплачено.Доступность = Ложь;
	
	ЖурналДокументовСписок.Отбор.ПометкаУдаления.Установить(Ложь, Истина);

	
	УстановитьОтборПоОрганизации();
	УстановитьОтборПоБанковскомуСчету();
	УстановитьОтборПоДате();
	
	УстановитьВидимость();
	
	ОбновитьНадписи();
	
	ПодключитьОбработчикИзмененияДанных("ЖурналДокументовСписок.Отбор", "ЖурналДокументовСписокОтборПриИзмененииДанных", Истина);
	
КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновитьФорму"
		И ((ТипЗнч(Источник) = Тип("ДокументОбъект.ПлатежноеПоручение"))
		ИЛИ (ТипЗнч(Источник) = Тип("ДокументОбъект.СписаниеСРасчетногоСчета"))) Тогда
		
		Если ТипЗнч(Источник) = Тип("ДокументОбъект.ПлатежноеПоручение") Тогда
			Если Источник.Оплачено Тогда
				
				ОтмеченныйДокумент = ОтмеченныеДокументы.НайтиПоЗначению(Источник.Ссылка);
				Если ОтмеченныйДокумент <> Неопределено Тогда
					ОтмеченныеДокументы.Удалить(ОтмеченныйДокумент);
				КонецЕсли;
				
				ДокументСОшибками = ДокументыСОшибками.Найти(Источник.Ссылка);
				Если ДокументСОшибками <> Неопределено Тогда
					ДокументыСОшибками.Удалить(ДокументСОшибками);
				КонецЕсли;
			КонецЕсли;
			
			Если Параметр = ЭтаФорма Тогда
				Оповестить( , ВладелецФормы);
				
			КонецЕсли;
			
		КонецЕсли;
				
		ОбновитьДанные();
		ОбновитьТаблицуДокументовСписания();		
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	ЕстьОтмеченныеДокументы = ОтмеченныеДокументы.Количество() > 0;
	ЕстьДокументыСОшибками = ОпределитьКоличествоДокуметов(Истина) > 0;
	Если ЕстьДокументыСОшибками Тогда
		
	    ТекстВопроса = "Остались непроведенные документы.
		|Закрыть форму?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ОКОтмена, , КодВозвратаДиалога.Отмена);
		Если Ответ <> КодВозвратаДиалога.ОК Тогда
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
	ИначеЕсли ЕстьОтмеченныеДокументы И НЕ ДокументыСформированы Тогда
		
	    ТекстВопроса = "По отмеченным документам не будет сформировано списание с расчетного счета.
		|Закрыть форму?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ОКОтмена, , КодВозвратаДиалога.Отмена);
		Если Ответ <> КодВозвратаДиалога.ОК Тогда
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

Процедура ДействияФормыОтметитьВсе(Кнопка)
	
	ВключитьВсеДокументыВОтмеченные();
	
	Обновить();
	
КонецПроцедуры

Процедура ДействияФормыСнятьВсеОтметки(Кнопка)
	
	ОтмеченныеДокументы.Очистить();
	
	Обновить();
	
КонецПроцедуры

Процедура ДействияФормыОбновить(Кнопка)
	
	ОбновитьДанные();
	
КонецПроцедуры

Процедура КоманднаяПанельДокументыСписанияОбновить(Кнопка)
	
	ОбновитьТаблицуДокументовСписания();		

КонецПроцедуры

Процедура РезультатПроведения(Кнопка)
	
	ТекущиеДанные = ЭлементыФормы.ТаблицаДокументовСписания.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		
		//Открывает форму движений документа для ручного редактирования
		ОбщегоНазначения.РучнаяКорректировкаОсновнаяФорма(Ложь,ТекущиеДанные.Ссылка,ТекущиеДанные.Ссылка.ПолучитьОбъект());
	КонецЕсли;

КонецПроцедуры // РезультатПроведения()

Процедура ДатаВыпискиОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Элемент.Значение) Тогда
		ДатаВыписки = ТекущаяДата();
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ

Процедура ЖурналДокументовСписокПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ДанныеСтроки.Ссылка = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОформлениеСтроки.Ячейки.Отметка.ОтображатьТекст  = Ложь; 
	ОформлениеСтроки.Ячейки.Отметка.ОтображатьФлажок = Истина; 
	ОформлениеСтроки.Ячейки.Отметка.Флажок           = ПолучитьЗначениеОтметки(ДанныеСтроки.Ссылка); 
	
КонецПроцедуры

Процедура ЖурналДокументовСписокПриИзмененииФлажка(Элемент, Колонка)
	
	ТекДанные = ЭлементыФормы.ЖурналДокументовСписок.ТекущиеДанные;
	НужноОтметитьДокумент = НЕ ПолучитьЗначениеОтметки(ТекДанные.Ссылка);
	Если НужноОтметитьДокумент Тогда
		ОтмеченныеДокументы.Добавить(ТекДанные.Ссылка);
	Иначе
		ОтмеченныеДокументы.Удалить(ОтмеченныеДокументы.НайтиПоЗначению(ТекДанные.Ссылка));
	КонецЕсли;
	
КонецПроцедуры

Процедура ЖурналДокументовСписокОтборПриИзмененииДанных(ПутьКДанным)
	
	УстановитьВидимость();
	ОбновитьНадписи();

КонецПроцедуры

Процедура ЖурналДокументовСписокПриИзмененииОтбора(ПутьКДанным = "")
	
	Если ЖурналДокументовСписок.Отбор.Организация.Использование
		И ЖурналДокументовСписок.Отбор.Организация.ВидСравнения = ВидСравнения.Равно Тогда
		Организация = ЖурналДокументовСписок.Отбор.Организация.Значение;
	Иначе
		Организация = Неопределено;
	КонецЕсли;
	
	Если ЖурналДокументовСписок.Отбор.СчетОрганизации.Использование
		И ЖурналДокументовСписок.Отбор.СчетОрганизации.ВидСравнения = ВидСравнения.Равно Тогда
		БанковскийСчет = ЖурналДокументовСписок.Отбор.СчетОрганизации.Значение;
	Иначе
		БанковскийСчет = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

Процедура ТаблицаДокументовСписанияПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	ВыбраннаяСтрока = ЭлементыФормы.ТаблицаДокументовСписания.ТекущаяСтрока;
	
	ФормаДокумента = ВыбраннаяСтрока.Ссылка.ПолучитьФорму( , ЭтаФорма);
	
	ФормаДокумента.Открыть();
	
КонецПроцедуры

Процедура ТаблицаДокументовСписанияПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	Отказ = Истина;
	
КонецПроцедуры

Процедура ТаблицаДокументовСписанияПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
		
	Если ДанныеСтроки.Ссылка = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ДанныеСтроки.Проведен Тогда
		ОформлениеСтроки.ЦветТекста  = WebЦвета.Красный;
	КонецЕсли;

КонецПроцедуры

ОтмеченныеДокументы = Новый СписокЗначений;
ДокументыСОшибками  = Новый ТаблицаЗначений;
ДокументыСОшибками.Колонки.Добавить("ДокументПлатежноеПоручение");

ЕстьДокументыДляОтметки = Ложь;
ДокументыСформированы = Ложь;

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Если Клиент Тогда

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходмое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Функция Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь, НепосредственнаяПечать = Ложь) Экспорт
	
	// Получить экземпляр документа на печать
	Если ИмяМакета = "ПечатьФайла" Тогда
		
		ЕстьОшибки = Ложь;
		ТекстФайла = РегламентированнаяОтчетность.ПолучитьТекстФайла(ЭтотОбъект,ЕстьОшибки);
		Если ЕстьОшибки тогда
			Возврат Неопределено;
		КонецЕсли;	 
		
		Если ВидАДВ =  Перечисления.ВидыАДВ.АДВ2 тогда
			ТипЗаписи = "ОБМН";
			Макет = ПолучитьМакет("ФормаАДВ_2");
		Иначе	
			ТипЗаписи = "ДУБЛ";
			Макет = ПолучитьМакет("ФормаАДВ_3");
		КонецЕсли;	 
		
		//Обработка документов файла
		ОбластьЗаявление = Макет.ПолучитьОбласть("Заявление");
		Если ВидАДВ = Перечисления.ВидыАДВ.АДВ3 Тогда
			НормальныйШрифт = Новый Шрифт(ОбластьЗаявление.Области.СведенияПредставлялись.Шрифт);
			ЗачеркнутыйШрифт = Новый Шрифт(ОбластьЗаявление.Области.СведенияПредставлялись.Шрифт,,,,,,ИСТИНА);
		КонецЕсли;
		
		ДокументРезультат = Новый ТабличныйДокумент;
		ДокументРезультат.ПолеСверху = 0;
		ДокументРезультат.ПолеСлева  = 0;
		ДокументРезультат.ПолеСнизу  = 0;
		ДокументРезультат.ПолеСправа = 0;
		ДокументРезультат.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства_ФорматЗаписей";
		ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
		
		Если ФорматФайла = Перечисления.ФорматФайлаПФР.Версия04 Тогда
			// формируем отчет по версии файла 04.00	
			
			//Получаем таблицу формата записи
			ДокументФорматЗаписей = ПолучитьМакет("ФорматЗаписей");
			ТаблицаФорматаЗаписи = ПроцедурыПерсонифицированногоУчета.ПолучитьФорматЗаписи(ТипЗаписи,ДокументФорматЗаписей);
			ТаблицаФорматаЗаписи.Индексы.Добавить("ИмяПоля");
			СтрокаТЗ = ТаблицаФорматаЗаписи.Найти("ДокументНомер","ИмяПоля");
			Если СтрокаТЗ <> Неопределено Тогда
				СтрокаТЗ.ТипПоля = "СТРОКА";
			КонецЕсли;
			
			
			//Обработка заголовка файла
			ИнформацияОПачке = Новый Структура;
			Если ПроцедурыПерсонифицированногоУчета.РазобратьЗаголовокФайла(ТекстФайла,ИнформацияОПачке)=0 тогда
				Возврат Неопределено;
			КонецЕсли;	
			
			
			Для Н=5 по СтрЧислоСтрок(ТекстФайла) цикл
				
				//Прочитаем запись из файла
				СтрокаФайла = СтрПолучитьСтроку(ТекстФайла,Н);
				
				Запись = ПроцедурыПерсонифицированногоУчета.ПолучитьСтруктуруЗаписи(ТаблицаФорматаЗаписи);
				СтрОшибка = "";
				Если НЕ ПроцедурыПерсонифицированногоУчета.РазложитьСтрокуВСтруктуруЗаписи(СтрокаФайла,ТипЗаписи,ТаблицаФорматаЗаписи,Запись,СтрОшибка) тогда
					Сообщить("Ошибка в строке файла № "+Н+": "+СтрОшибка);
					Возврат Неопределено;
				КонецЕсли;	
				
				//Данные, указанные в свидетельстве
				ОбластьЗаявление.Параметры.СтраховойНомерПФР 			= Запись.СтраховойНомер; 
				ОбластьЗаявление.Параметры.ФамилияВСвидетельстве 		= Запись.ФамилияВСвидетельстве; 
				ОбластьЗаявление.Параметры.ИмяВСвидетельстве 			= Запись.ИмяВСвидетельстве; 
				ОбластьЗаявление.Параметры.ОтчествоВСвидетельстве 		= Запись.ОтчествоВСвидетельстве; 
				
				//Изменившиеся данные
				ОбластьЗаявление.Параметры.Фамилия 						= Запись.Фамилия; 
				ОбластьЗаявление.Параметры.Имя 							= Запись.Имя; 
				ОбластьЗаявление.Параметры.Отчество 					= ?(Запись.ПризнакОтменыОтчества = "ОТМН", "отменено", Запись.Отчество); 
				ОбластьЗаявление.Параметры.Пол 							= Запись.Пол + "     (м/ж)"; 
				ОбластьЗаявление.Параметры.ДатаРождения 				= ПроцедурыПерсонифицированногоУчета.ДатаВОтчет(Запись.СтандартнаяДатаРождения); 
				
				//Место рождения
				ОбластьЗаявление.Параметры.МестоРожденияГород 			= 	Запись.МестоРожденияНаселенныйПункт;
				ОбластьЗаявление.Параметры.МестоРожденияРайон 			= 	Запись.МестоРожденияРайон;
				ОбластьЗаявление.Параметры.МестоРожденияОбласть			= 	Запись.МестоРожденияОбласть;
				ОбластьЗаявление.Параметры.МестоРожденияСтрана 			= 	Запись.МестоРожденияСтрана;
				ОбластьЗаявление.Параметры.Гражданство 					= 	Запись.Гражданство;
				
				//Паспортные данные
				НаименованиеДокумента 									= 	Запись.ДокументНаименование;
				Серия1 													= 	Запись.ДокументСерияРимскиеЦифры;
				Серия2 													= 	Запись.ДокументСерияРусскиеБуквы;
				
				СерияНомер = Серия1 +?(Запись.ДокументВид = "ПАСПОРТ РОССИИ", " ", ?(Запись.ДокументВид = "ПАСПОРТ", "-", "") ) + Серия2 +",  " + Запись.ДокументНомер;
				
				ОбластьЗаявление.Параметры.НаименованиеДокумента		= 	НаименованиеДокумента;
				ОбластьЗаявление.Параметры.СерияНомер			 		= 	СерияНомер;
				ОбластьЗаявление.Параметры.ДатаВыдачи 					= 	ПроцедурыПерсонифицированногоУчета.ДатаВОтчет(Запись.ДокументДатаВыдачи);
				ОбластьЗаявление.Параметры.КемВыдан 					= 	Запись.ДокументКемВыдан;
				
				//Адреса
				ОбластьЗаявление.Параметры.АдресРегистрации 			=	ВРег(РегламентированнаяОтчетность.ПредставлениеАдреса(НРег(Запись.АдресРегистрации),0,""));
				ОбластьЗаявление.Параметры.АдресФактический 			= 	ВРег(РегламентированнаяОтчетность.ПредставлениеАдреса(НРег(Запись.АдресФактический),0,""));
				ОбластьЗаявление.Параметры.Телефоны 					= 	Запись.Телефоны;
				
				//Подвал
				ОбластьЗаявление.Параметры.ДатаЗаполнения				= 	"Дата заполнения " + Символы.ПС + ПроцедурыПерсонифицированногоУчета.ДатаВОтчет(Запись.ДатаЗаполнения);
				
				//Поля, присутствующие только в форме АДВ-3
				Если ВидАДВ = Перечисления.ВидыАДВ.АДВ3 тогда	
					
					ОтветственныеЛица = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Организация,Дата,Ответственный.ФизЛицо);
					ОбластьЗаявление.Параметры.ДолжностьРуководителя			= ОтветственныеЛица.РуководительДолжность;
					ОбластьЗаявление.Параметры.РасшифровкаПодписиРуководителя	= ОтветственныеЛица.Руководитель;
							
					ОбластьЗаявление.Параметры.ПолВСвидетельстве 							= Запись.ПолВСвидетельстве + "     (м/ж)"; 
					ОбластьЗаявление.Параметры.ДатаРожденияВСвидетельстве 					= ПроцедурыПерсонифицированногоУчета.ДатаВОтчет(Запись.СтандартнаяДатаРожденияВСвидетельстве); 
					
					//Место рождения, указанное в свидетельстве
					ОбластьЗаявление.Параметры.МестоРожденияГородВСвидетельстве 			= 	Запись.МестоРожденияНаселенныйПунктВСвидетельстве;
					ОбластьЗаявление.Параметры.МестоРожденияРайонВСвидетельстве 			= 	Запись.МестоРожденияРайонВСвидетельстве;
					ОбластьЗаявление.Параметры.МестоРожденияОбластьВСвидетельстве			= 	Запись.МестоРожденияОбластьВСвидетельстве;
					ОбластьЗаявление.Параметры.МестоРожденияСтранаВСвидетельстве 			= 	Запись.МестоРожденияСтранаВСвидетельстве;
					
					Если Запись.ОтметкаОПредставленииСведений <> "ПРЕДСТАВЛ" тогда
						ОбластьЗаявление.Области.СведенияПредставлялись.Шрифт 		= ЗачеркнутыйШрифт;
						ОбластьЗаявление.Области.СведенияБудутПредставлены.Шрифт 	= НормальныйШрифт;
					Иначе	
						ОбластьЗаявление.Области.СведенияПредставлялись.Шрифт 		= НормальныйШрифт;
						ОбластьЗаявление.Области.СведенияБудутПредставлены.Шрифт 	= ЗачеркнутыйШрифт;
					КонецЕсли;	 
				КонецЕсли;	
				
				ДокументРезультат.Вывести(ОбластьЗаявление);
				ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЦикла;	
			
			Если ВидАДВ =  Перечисления.ВидыАДВ.АДВ2 тогда
				РаботаСДиалогами.НапечататьДокумент(ДокументРезультат,1,Ложь,"Заявления об обмене страхового свидетельства АДВ-2");
			иначе	
				РаботаСДиалогами.НапечататьДокумент(ДокументРезультат,1,Ложь,"Заявления о выдаче дубликата страхового свидетельства АДВ-3");
			КонецЕсли;	 
			
			
			//Печать описи документов
			ДокументОписи = Новый ТабличныйДокумент;
			ДокументОписи.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства_АДВ_6";
			ОтветственныеЛица = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Организация,Дата,Ответственный.ФизЛицо);
			ИнформацияОПачке.Вставить("ИнформацияОРаботодателе", Организация);
			ПроцедурыПерсонифицированногоУчета.ВывестиОписьАДВ6(ДокументОписи,ИнформацияОПачке,ОтветственныеЛица);
			Возврат РаботаСДиалогами.НапечататьДокумент(ДокументОписи,1,Ложь,"Опись документов АДВ-6");
			
		ИначеЕсли ФорматФайла = Перечисления.ФорматФайлаПФР.Версия07 Тогда
			
			// формируем отчет по версии файла 07.00
			
			ДеревоПФР = ПроцедурыПерсонифицированногоУчета.ПреобразоватьВДеревоXML(ТекстФайла);
			
			Если ДеревоПФР = Неопределено Тогда
				Отказ = Ложь;
				ОбщегоНазначения.СообщитьОбОшибке("Не удалось разобрать файл с данными!",Отказ, ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка));
				Возврат Неопределено 
			КонецЕсли;
			ДеревоПФР = ДеревоПФР.Строки.Найти("ФайлПФР","Имя");
			Если ДеревоПФР = Неопределено Тогда
				Отказ = Ложь;
				ОбщегоНазначения.СообщитьОбОшибке("Не удалось разобрать файл с данными!",Отказ, ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка));
				Возврат Неопределено 
			КонецЕсли;
			СтрокаДереваПачкаВходящихДокументов = ДеревоПФР.Строки.Найти("ПачкаВходящихДокументов","Имя");
			Если СтрокаДереваПачкаВходящихДокументов <> Неопределено Тогда
				Для Каждого СтрокаДереваЗаявление Из СтрокаДереваПачкаВходящихДокументов.Строки Цикл
					Если СтрокаДереваЗаявление.Имя = "ЗАЯВЛЕНИЕ_О_ДУБЛИКАТЕ" Или СтрокаДереваЗаявление.Имя = "ЗАЯВЛЕНИЕ_ОБ_ОБМЕНЕ" Тогда
						
						//Данные, указанные в свидетельстве
						ОбластьЗаявление.Параметры.СтраховойНомерПФР = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваЗаявление, "СтраховойНомер");
						СтрокаДереваФИОИзСтрахового = СтрокаДереваЗаявление.Строки.Найти("ФИОизСтрахового");
						Если СтрокаДереваФИОИзСтрахового <> Неопределено Тогда
							ОбластьЗаявление.Параметры.ФамилияВСвидетельстве 	= ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваФИОИзСтрахового, "Фамилия"); 
							ОбластьЗаявление.Параметры.ИмяВСвидетельстве 		= ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваФИОИзСтрахового, "Имя"); 
							ОбластьЗаявление.Параметры.ОтчествоВСвидетельстве 	= ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваФИОИзСтрахового, "Отчество"); 
						КонецЕсли;
						
						//Изменившиеся данные
						СтрокаДереваИзменившиесяДанные = СтрокаДереваЗаявление.Строки.Найти("ИзменившиесяДанные");
						Если СтрокаДереваИзменившиесяДанные <> Неопределено Тогда
							СтрокаДереваФИО = СтрокаДереваИзменившиесяДанные.Строки.Найти("ФИО");
							Если СтрокаДереваФИО <> Неопределено Тогда
								ОбластьЗаявление.Параметры.Фамилия 				= ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваФИО, "Фамилия");
								ОбластьЗаявление.Параметры.Имя 					= ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваФИО, "Имя");
								ПризнакОтменыОтчества = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваЗаявление, "ПризнакОтменыОтчества");
								ОбластьЗаявление.Параметры.Отчество 			= ?(ПризнакОтменыОтчества = "ОТМЕНЕНО", "отменено", ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваФИО, "Отчество")); 
							КонецЕсли;
							Пол = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваИзменившиесяДанные, "Пол");
							Если Пол = "МУЖСКОЙ" Тогда
								ОбластьЗаявление.Параметры.Пол 					= "М     (м/ж)"; 
							ИначеЕсли Пол = "ЖЕНСКИЙ" Тогда
								ОбластьЗаявление.Параметры.Пол 					= "Ж     (м/ж)"; 
							Иначе
								ОбластьЗаявление.Параметры.Пол 					= "      (м/ж)"; 
							КонецЕсли;

							
							
							СтрокаДереваДатаРожденияОсобая = СтрокаДереваИзменившиесяДанные.Строки.Найти("ДатаРожденияОсобая");
							Если СтрокаДереваДатаРожденияОсобая = Неопределено Тогда
								ДатаРождения = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваИзменившиесяДанные, "ДатаРождения");
								Если ЗначениеЗаполнено(ДатаРождения) Тогда
									ОбластьЗаявление.Параметры.ДатаРождения	= ПроцедурыПерсонифицированногоУчета.ДатаXMLВОтчет(ДатаРождения); 
								Иначе
									ОбластьЗаявление.Параметры.ДатаРождения	= ""
								КонецЕсли;
							Иначе
								ОбластьЗаявление.Параметры.ДатаРождения = 
									ПроцедурыПерсонифицированногоУчета.ДатаВОтчет(Дата(ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваДатаРожденияОсобая,"Год"),
										ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваДатаРожденияОсобая,"Месяц"),
										ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваДатаРожденияОсобая,"День"))); 
							КонецЕсли;
							
							//Место рождения
							СтрокаДереваМестоРождения = СтрокаДереваИзменившиесяДанные.Строки.Найти("МестоРождения");
							Если СтрокаДереваМестоРождения <> Неопределено Тогда
								ТипМестаРождения = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваМестоРождения, "ТипМестаРождения");
								Если ТипМестаРождения = "ОСОБОЕ" Тогда
									ОбластьЗаявление.Параметры.МестоРожденияТип = "особое";
								КонецЕсли;
								ОбластьЗаявление.Параметры.МестоРожденияГород = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваМестоРождения, "ГородРождения");
								ОбластьЗаявление.Параметры.МестоРожденияРайон = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваМестоРождения, "РайонРождения");
								ОбластьЗаявление.Параметры.МестоРожденияОбласть = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваМестоРождения, "РегионРождения");
								ОбластьЗаявление.Параметры.МестоРожденияСтрана = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваМестоРождения, "СтранаРождения");
							КонецЕсли;
							
							ОбластьЗаявление.Параметры.Гражданство = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваИзменившиесяДанные, "Гражданство");
							
							//Адреса
							СтрокаДереваАдресРегистрации = СтрокаДереваИзменившиесяДанные.Строки.Найти("АдресРегистрации");
							Если СтрокаДереваАдресРегистрации <> Неопределено Тогда
								ОбластьЗаявление.Параметры.АдресРегистрации = ПроцедурыПерсонифицированногоУчета.ПредставлениеАдресадляПФР(СтрокаДереваАдресРегистрации);
							КонецЕсли;
							
							СтрокаДереваАдресФактический = СтрокаДереваИзменившиесяДанные.Строки.Найти("АдресФактический");
							Если СтрокаДереваАдресФактический <> Неопределено Тогда
								ОбластьЗаявление.Параметры.АдресФактический = ПроцедурыПерсонифицированногоУчета.ПредставлениеАдресадляПФР(СтрокаДереваАдресФактический);
							КонецЕсли;
							
							ОбластьЗаявление.Параметры.Телефоны = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваИзменившиесяДанные, "Телефон");
							
							
							
						КонецЕсли;
						
						//Паспортные данные
						СтрокаДереваУдостоверяющийДокумент = СтрокаДереваЗаявление.Строки.Найти("УдостоверяющийДокумент");
						Если СтрокаДереваУдостоверяющийДокумент <> Неопределено Тогда
							ТипУдостоверяющего = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваУдостоверяющийДокумент, "ТипУдостоверяющего");
							
							СтрокаДереваДокумент = СтрокаДереваУдостоверяющийДокумент.Строки.Найти("Документ");
							Если СтрокаДереваДокумент <> Неопределено Тогда
								
								НаименованиеДокумента = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваДокумент, "НаименованиеУдостоверяющего");
								Серия1 = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваДокумент, "СерияРимскиеЦифры");
								Серия2 = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваДокумент, "СерияРусскиеБуквы");
								СерияНомер = Серия1 +?(ТипУдостоверяющего = "ПАСПОРТ РОССИИ", " ", ?(ТипУдостоверяющего = "ПАСПОРТ", "-", "") ) + Серия2 +",  " + ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваДокумент, "НомерУдостоверяющего");
								ОбластьЗаявление.Параметры.НаименованиеДокумента = НаименованиеДокумента;
								ОбластьЗаявление.Параметры.СерияНомер = СерияНомер;
								ОбластьЗаявление.Параметры.ДатаВыдачи = ПроцедурыПерсонифицированногоУчета.ДатаXMLВОтчет(ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваДокумент, "ДатаВыдачи"));
								ОбластьЗаявление.Параметры.КемВыдан = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваДокумент, "КемВыдан");
								
							КонецЕсли;
							
						КонецЕсли;
						
						//Подвал
						ОбластьЗаявление.Параметры.ДатаЗаполнения = "Дата заполнения " + Символы.ПС + ПроцедурыПерсонифицированногоУчета.ДатаXMLВОтчет(ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваЗаявление, "ДатаЗаполнения"));
						
						
						//Поля, присутствующие только в форме АДВ-3
						Если СтрокаДереваЗаявление.Имя = "ЗАЯВЛЕНИЕ_О_ДУБЛИКАТЕ" Тогда 
							
							ОтветственныеЛица = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Организация,Дата,Ответственный.ФизЛицо);
							ОбластьЗаявление.Параметры.ДолжностьРуководителя			= ОтветственныеЛица.РуководительДолжность;
							ОбластьЗаявление.Параметры.РасшифровкаПодписиРуководителя	= ОтветственныеЛица.Руководитель;
							
							ПолИзСтрахового = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваЗаявление, "ПолИзСтрахового");
							
							Если ПолИзСтрахового = "МУЖСКОЙ" Тогда
								ОбластьЗаявление.Параметры.ПолВСвидетельстве 					= "М     (м/ж)"; 
							ИначеЕсли ПолИзСтрахового = "ЖЕНСКИЙ" Тогда
								ОбластьЗаявление.Параметры.ПолВСвидетельстве 					= "Ж     (м/ж)"; 
							КонецЕсли;
							
							СтрокаДереваДатаРожденияОсобая = СтрокаДереваЗаявление.Строки.Найти("ДатаРожденияИзСтраховогоОсобая");
							Если СтрокаДереваДатаРожденияОсобая = Неопределено Тогда
								ОбластьЗаявление.Параметры.ДатаРожденияВСвидетельстве = ПроцедурыПерсонифицированногоУчета.ДатаXMLВОтчет(ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваЗаявление, "ДатаРожденияИзСтрахового")); 
							Иначе
								ОбластьЗаявление.Параметры.ДатаРожденияВСвидетельстве = 
								ПроцедурыПерсонифицированногоУчета.ДатаВОтчет(Дата(ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваДатаРожденияОсобая,"Год"),
								ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваДатаРожденияОсобая,"Месяц"),
								ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваДатаРожденияОсобая,"День"))); 
							КонецЕсли;
							
							//Место рождения, указанное в свидетельстве
							СтрокаДереваМестоРождения = СтрокаДереваЗаявление.Строки.Найти("МестоРожденияИзСтрахового");
							Если СтрокаДереваМестоРождения <> Неопределено Тогда
								ТипМестаРождения = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваМестоРождения, "ТипМестаРождения");
								Если ТипМестаРождения = "ОСОБОЕ" Тогда
									//ОбластьАнкета.Параметры.МестоРожденияТип = "особое";
								КонецЕсли;
								ОбластьЗаявление.Параметры.МестоРожденияГородВСвидетельстве = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваМестоРождения, "ГородРождения");
								ОбластьЗаявление.Параметры.МестоРожденияРайонВСвидетельстве = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваМестоРождения, "РайонРождения");
								ОбластьЗаявление.Параметры.МестоРожденияОбластьВСвидетельстве = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваМестоРождения, "РегионРождения");
								ОбластьЗаявление.Параметры.МестоРожденияСтранаВСвидетельстве = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваМестоРождения, "СтранаРождения");
							КонецЕсли;
							
							
							ОтметкаОПредставленииСведений = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваЗаявление, "ОтметкаОпредставленииСведений");
							Если ОтметкаОПредставленииСведений <> "ПРЕДСТАВЛЕНЫ РАНЕЕ" Тогда
								ОбластьЗаявление.Области.СведенияПредставлялись.Шрифт 		= ЗачеркнутыйШрифт;
								ОбластьЗаявление.Области.СведенияБудутПредставлены.Шрифт 	= НормальныйШрифт;
							Иначе	
								ОбластьЗаявление.Области.СведенияПредставлялись.Шрифт 		= НормальныйШрифт;
								ОбластьЗаявление.Области.СведенияБудутПредставлены.Шрифт 	= ЗачеркнутыйШрифт;
							КонецЕсли;	 
						КонецЕсли;	
						
						ДокументРезультат.Вывести(ОбластьЗаявление);
						ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
						
					КонецЕсли;
				КонецЦикла;
				
				Если СтрокаДереваЗаявление.Имя = "ЗАЯВЛЕНИЕ_ОБ_ОБМЕНЕ" Тогда
					РаботаСДиалогами.НапечататьДокумент(ДокументРезультат,1,Ложь,"Заявления об обмене страхового свидетельства АДВ-2");
					ТипДокумента = "ОБМН";
				иначе	
					РаботаСДиалогами.НапечататьДокумент(ДокументРезультат,1,Ложь,"Заявления о выдаче дубликата страхового свидетельства АДВ-3");
					ТипДокумента = "ДУБЛ";
				КонецЕсли;	 
				
				//Печать описи документов
				СтрокаДереваОпись = СтрокаДереваПачкаВходящихДокументов.Строки.Найти("ВХОДЯЩАЯ_ОПИСЬ");
				Если СтрокаДереваОпись <> Неопределено Тогда
					ДокументОписи = Новый ТабличныйДокумент;
					ДокументОписи.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства_АДВ_6";
					ОтветственныеЛица = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Организация,Дата,Ответственный.ФизЛицо);
					ИнформацияОПачке = Новый Структура;
					ИнформацияОПачке.Вставить("ИнформацияОРаботодателе", Организация);
					ИнформацияОПачке.Вставить("ТипДокумента", ТипДокумента);
					СтрокаДереваСоставДокументов = СтрокаДереваОпись.Строки.Найти("СоставДокументов");
					Если СтрокаДереваСоставДокументов <> Неопределено Тогда
						СтрокаДереваНаличиеДокументов = СтрокаДереваСоставДокументов.Строки.Найти("НаличиеДокументов");
						Если СтрокаДереваНаличиеДокументов <> Неопределено Тогда
							ИнформацияОПачке.Вставить("ДокументовВПачке",ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваНаличиеДокументов, "Количество"));
						КонецЕсли;
					КонецЕсли;
					
					СтрокаДереваНомерПачки = СтрокаДереваОпись.Строки.Найти("НомерПачки");
					Если СтрокаДереваНомерПачки  <> Неопределено Тогда
						СтрокаДереваОсновной = СтрокаДереваНомерПачки.Строки.Найти("Основной");
						Если СтрокаДереваОсновной <> Неопределено Тогда
							ИнформацияОПачке.Вставить("НомерПачкиРаботодателя", ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваНомерПачки, "Основной"));
						Иначе
							ИнформацияОПачке.Вставить("НомерПачкиРаботодателя", ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваНомерПачки, "ПоПодразделению"));
						КонецЕсли;
					КонецЕсли;
					ИнформацияОПачке.Вставить("ИнформацияОРаботодателе", Организация);
					ИнформацияОПачке.Вставить("ДатаСоставленияОписи",ПроцедурыПерсонифицированногоУчета.ДатаXMLВОтчет(ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваОпись, "ДатаСоставления"),Ложь));
					ПроцедурыПерсонифицированногоУчета.ВывестиОписьАДВ6(ДокументОписи,ИнформацияОПачке,ОтветственныеЛица);
					Возврат РаботаСДиалогами.НапечататьДокумент(ДокументОписи,1,Ложь,"Опись документов АДВ-6");
				КонецЕсли;
				
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции // Печать

#КонецЕсли

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура("ПечатьФайла","АДВ-2,3");
                                                              
КонецФункции // ПолучитьСтруктуруПечатныхФорм()

//Процедура выполняет заполнение реквизитов заявлений табличной части документа
Процедура ЗаполнитьДанныеЗаявлений() Экспорт

    //Запрос среза данных на даты, указанные в реквизите "ДатаПолученияСвидетельства"
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ВводимыйДокумент" , 		Ссылка);
	Запрос.УстановитьПараметр("ВыбраннаяОрганизация",	Организация);
	Запрос.УстановитьПараметр("ВыбранныйПериод",		Дата);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельстваРаботникиОрганизации.НомерСтроки КАК НомерСтроки,
	|	ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельстваРаботникиОрганизации.ДатаПолученияСвидетельства КАК ДатаПолученияСвидетельства,
	|	ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельстваРаботникиОрганизации.ФизЛицо КАК ФизЛицо,
	|	ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельстваРаботникиОрганизации.Ссылка.ВидАДВ КАК ВидАДВ,
	|	ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельстваРаботникиОрганизации.ФизЛицо.СтраховойНомерПФР,
	|	ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельстваРаботникиОрганизации.ФизЛицо.Пол,
	|	ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельстваРаботникиОрганизации.ФизЛицо.ДатаРождения,
	|	ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельстваРаботникиОрганизации.ФизЛицо.МестоРождения
	|ПОМЕСТИТЬ ВТСписокФизлиц
	|ИЗ
	|	Документ.ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.РаботникиОрганизации КАК ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельстваРаботникиОрганизации
	|ГДЕ
	|	ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельстваРаботникиОрганизации.Ссылка = &ВводимыйДокумент
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";
	
	Запрос.Выполнить();
	СписокФизЛицТекст = "ВТСписокФизлиц";	

	Запрос.Текст =
	"ВЫБРАТЬ 
	|	ДомашниеТелефоны.Поле3,
	|   ДомашниеТелефоны.Объект
	|ПОМЕСТИТЬ ВТДомашниеТелефоны
	|ИЗ
	|	РегистрСведений.КонтактнаяИнформация КАК ДомашниеТелефоны
	|ГДЕ ДомашниеТелефоны.Объект В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + " КАК СписокФизЛиц)
	|		И (ДомашниеТелефоны.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонФизЛица))
	|	  	И (ДомашниеТелефоны.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Объект";
	
	Запрос.Выполнить();
	СписокДомашниеТелефоныТекст = "ВТДомашниеТелефоны";	

	Запрос.Текст =
	"ВЫБРАТЬ 
	|	АдресаФактические.Поле1,
	|	АдресаФактические.Поле2,
	|	АдресаФактические.Поле3,
	|	АдресаФактические.Поле4,
	|	АдресаФактические.Поле5,
	|	АдресаФактические.Поле6,
	|	АдресаФактические.Поле7,
	|	АдресаФактические.Поле8,
	|	АдресаФактические.Поле9,
	|   АдресаФактические.Объект
	|ПОМЕСТИТЬ ВТАдресаФактические
	|ИЗ
	|	РегистрСведений.КонтактнаяИнформация КАК АдресаФактические
	|ГДЕ АдресаФактические.Объект В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + " КАК СписокФизЛиц)
	|		И (АдресаФактические.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ФактАдресФизЛица))
	|		И (АдресаФактические.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Объект";
	
	Запрос.Выполнить();
	СписокАдресаФактическиеТекст = "ВТАдресаФактические";	

	Запрос.Текст =
	"ВЫБРАТЬ 
	|	АдресаРегистрации.Поле1,
	|	АдресаРегистрации.Поле2,
	|	АдресаРегистрации.Поле3,
	|	АдресаРегистрации.Поле4,
	|	АдресаРегистрации.Поле5,
	|	АдресаРегистрации.Поле6,
	|	АдресаРегистрации.Поле7,
	|	АдресаРегистрации.Поле8,
	|	АдресаРегистрации.Поле9,
	|   АдресаРегистрации.Объект
	|ПОМЕСТИТЬ ВТАдресаРегистрации
	|ИЗ
	|	РегистрСведений.КонтактнаяИнформация КАК АдресаРегистрации
	|ГДЕ АдресаРегистрации.Объект В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + " КАК СписокФизЛиц)
	|		И (АдресаРегистрации.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресФизЛица))
	|		И (АдресаРегистрации.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Объект";
	
	Запрос.Выполнить();
	СписокАдресаРегистрацииТекст = "ВТАдресаРегистрации";	

	Запрос.Текст =
	"ВЫБРАТЬ
	|	МаксимальныеДатыПоСотрудникам.ФизЛицо КАК ФизЛицо,
	|	Анкета.Фамилия КАК Фамилия,
	|	Анкета.Имя КАК Имя,
	|	Анкета.Отчество КАК Отчество,
	|	Анкета.Пол КАК Пол,
	|	Анкета.ДатаРождения КАК ДатаРождения,
	|	Анкета.МестоРождения КАК МестоРождения,
	|	ВЫБОР
	|		КОГДА Анкета.Гражданство = ЗНАЧЕНИЕ(Справочник.КлассификаторСтранМира.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.КлассификаторСтранМира.Россия)
	|		ИНАЧЕ Анкета.Гражданство
	|	КОНЕЦ КАК Гражданство,
	|	Анкета.АдресРегистрации КАК АдресРегистрации,
	|	Анкета.АдресФактический КАК АдресФактический,
	|	Анкета.Телефоны КАК Телефоны
	|ПОМЕСТИТЬ ВТДанныеАнкет
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(Анкета.Ссылка.Дата) КАК МаксимальнаяДата,
	|		ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельстваРаботникиОрганизации.ФизЛицо КАК ФизЛицо
	|	ИЗ
	|		" + СписокФизЛицТекст + " КАК ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельстваРаботникиОрганизации
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АнкетаЗастрахованногоЛица.РаботникиОрганизации КАК Анкета
	|			ПО Анкета.ФизЛицо = ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельстваРаботникиОрганизации.ФизЛицо
	|				И (Анкета.Ссылка.Организация = &ВыбраннаяОрганизация)
	|				И (Анкета.Ссылка.Проведен)
	|				И (Анкета.Ссылка.Дата <= ВЫБОР
	|					КОГДА ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельстваРаботникиОрганизации.ДатаПолученияСвидетельства = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|						ТОГДА &ВыбранныйПериод
	|					ИНАЧЕ ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельстваРаботникиОрганизации.ДатаПолученияСвидетельства
	|				КОНЕЦ)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельстваРаботникиОрганизации.ФизЛицо) КАК МаксимальныеДатыПоСотрудникам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АнкетаЗастрахованногоЛица.РаботникиОрганизации КАК Анкета
	|		ПО (Анкета.Ссылка.Организация = &ВыбраннаяОрганизация)
	|			И (Анкета.Ссылка.Проведен)
	|			И МаксимальныеДатыПоСотрудникам.МаксимальнаяДата = Анкета.Ссылка.Дата
	|			И МаксимальныеДатыПоСотрудникам.ФизЛицо = Анкета.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";
	
	Запрос.Выполнить();
	ДанныеАнкетТекст = "ВТДанныеАнкет";	

	Запрос.Текст =
	"ВЫБРАТЬ
	|	МаксимальныеДатыПоСотрудникам.ФизЛицо КАК ФизЛицо,
	|	ВЫБОР
	|		КОГДА Заявление.Фамилия = """"
	|			ТОГДА Заявление.ФамилияВСвидетельстве
	|		ИНАЧЕ Заявление.Фамилия
	|	КОНЕЦ КАК Фамилия,
	|	ВЫБОР
	|		КОГДА Заявление.Имя = """"
	|			ТОГДА Заявление.ИмяВСвидетельстве
	|		ИНАЧЕ Заявление.Имя
	|	КОНЕЦ КАК Имя,
	|	ВЫБОР
	|		КОГДА Заявление.Отчество = """"
	|			ТОГДА Заявление.ОтчествоВСвидетельстве
	|		ИНАЧЕ Заявление.Отчество
	|	КОНЕЦ КАК Отчество,
	|	ВЫБОР
	|		КОГДА Заявление.Пол = ЗНАЧЕНИЕ(Перечисление.ПолФизическихЛиц.ПустаяСсылка)
	|			ТОГДА Заявление.ПолВСвидетельстве
	|		ИНАЧЕ Заявление.Пол
	|	КОНЕЦ КАК Пол,
	|	ВЫБОР
	|		КОГДА Заявление.ДатаРождения = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА Заявление.ДатаРожденияВСвидетельстве
	|		ИНАЧЕ Заявление.ДатаРождения
	|	КОНЕЦ КАК ДатаРождения,
	|	ВЫБОР
	|		КОГДА Заявление.МестоРождения = """"
	|			ТОГДА Заявление.МестоРожденияВСвидетельстве
	|		ИНАЧЕ Заявление.МестоРождения
	|	КОНЕЦ КАК МестоРождения
	|ПОМЕСТИТЬ ВТСтарыеДанные
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(Заявление.Ссылка.Дата) КАК МаксимальнаяДата,
	|		ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельстваРаботникиОрганизации.ФизЛицо КАК ФизЛицо
	|	ИЗ
	|		" + СписокФизЛицТекст + " КАК ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельстваРаботникиОрганизации
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.РаботникиОрганизации КАК Заявление
	|			ПО Заявление.ФизЛицо = ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельстваРаботникиОрганизации.ФизЛицо
	|				И (Заявление.Ссылка.Проведен)
	|				И (Заявление.Ссылка <> &ВводимыйДокумент)
	|				И (Заявление.Ссылка.Организация = &ВыбраннаяОрганизация)
	|				И (Заявление.Ссылка.Дата <= ВЫБОР
	|					КОГДА ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельстваРаботникиОрганизации.ДатаПолученияСвидетельства = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|						ТОГДА &ВыбранныйПериод
	|					ИНАЧЕ ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельстваРаботникиОрганизации.ДатаПолученияСвидетельства
	|				КОНЕЦ)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельстваРаботникиОрганизации.ФизЛицо) КАК МаксимальныеДатыПоСотрудникам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.РаботникиОрганизации КАК Заявление
	|		ПО (Заявление.Ссылка <> &ВводимыйДокумент)
	|			И (Заявление.Ссылка.Организация = &ВыбраннаяОрганизация)
	|			И (Заявление.Ссылка.Проведен)
	|			И МаксимальныеДатыПоСотрудникам.МаксимальнаяДата = Заявление.Ссылка.Дата
	|			И МаксимальныеДатыПоСотрудникам.ФизЛицо = Заявление.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";
	
	Запрос.Выполнить();
	СтарыеДанныеТекст = "ВТСтарыеДанные";	
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МаксимальныеДатыПоСотрудникам.ФизЛицо КАК ФизЛицо,
	|	Заявление.Гражданство КАК Гражданство
	|ПОМЕСТИТЬ ВТСтарыеДанныеОГражданстве
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(Заявление.Ссылка.Дата) КАК МаксимальнаяДата,
	|		ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельстваРаботникиОрганизации.ФизЛицо КАК ФизЛицо
	|	ИЗ
	|		" + СписокФизЛицТекст + " КАК ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельстваРаботникиОрганизации
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.РаботникиОрганизации КАК Заявление
	|			ПО Заявление.ФизЛицо = ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельстваРаботникиОрганизации.ФизЛицо
	|				И (Заявление.Ссылка.Проведен)
	|				И (Заявление.Ссылка <> &ВводимыйДокумент)
	|				И (Заявление.Ссылка.Организация = &ВыбраннаяОрганизация)
	|				И (Заявление.Ссылка.Дата <= ВЫБОР
	|					КОГДА ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельстваРаботникиОрганизации.ДатаПолученияСвидетельства = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|						ТОГДА &ВыбранныйПериод
	|					ИНАЧЕ ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельстваРаботникиОрганизации.ДатаПолученияСвидетельства
	|				КОНЕЦ)
	|				И (Заявление.Гражданство <> ЗНАЧЕНИЕ(Справочник.КлассификаторСтранМира.ПустаяСсылка))
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельстваРаботникиОрганизации.ФизЛицо) КАК МаксимальныеДатыПоСотрудникам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.РаботникиОрганизации КАК Заявление
	|		ПО (Заявление.Ссылка <> &ВводимыйДокумент)
	|			И (Заявление.Ссылка.Организация = &ВыбраннаяОрганизация)
	|			И (Заявление.Ссылка.Проведен)
	|			И МаксимальныеДатыПоСотрудникам.МаксимальнаяДата = Заявление.Ссылка.Дата
	|			И МаксимальныеДатыПоСотрудникам.ФизЛицо = Заявление.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";
	
	Запрос.Выполнить();
	СтарыеДанныеОГражданствеТекст = "ВТСтарыеДанныеОГражданстве";	
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МаксимальныеДатыПоСотрудникам.ФизЛицо КАК ФизЛицо,
	|	Заявление.Телефоны КАК Телефоны
	|ПОМЕСТИТЬ ВТСтарыеДанныеОТелефоне
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(Заявление.Ссылка.Дата) КАК МаксимальнаяДата,
	|		ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельстваРаботникиОрганизации.ФизЛицо КАК ФизЛицо
	|	ИЗ
	|		" + СписокФизЛицТекст + " КАК ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельстваРаботникиОрганизации
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.РаботникиОрганизации КАК Заявление
	|			ПО Заявление.ФизЛицо = ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельстваРаботникиОрганизации.ФизЛицо
	|				И (Заявление.Ссылка.Проведен)
	|				И (Заявление.Ссылка <> &ВводимыйДокумент)
	|				И (Заявление.Ссылка.Организация = &ВыбраннаяОрганизация)
	|				И (Заявление.Ссылка.Дата <= ВЫБОР
	|					КОГДА ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельстваРаботникиОрганизации.ДатаПолученияСвидетельства = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|						ТОГДА &ВыбранныйПериод
	|					ИНАЧЕ ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельстваРаботникиОрганизации.ДатаПолученияСвидетельства
	|				КОНЕЦ)
	|				И (Заявление.Телефоны <> """")
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельстваРаботникиОрганизации.ФизЛицо) КАК МаксимальныеДатыПоСотрудникам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.РаботникиОрганизации КАК Заявление
	|		ПО (Заявление.Ссылка <> &ВводимыйДокумент)
	|			И (Заявление.Ссылка.Организация = &ВыбраннаяОрганизация)
	|			И (Заявление.Ссылка.Проведен)
	|			И МаксимальныеДатыПоСотрудникам.МаксимальнаяДата = Заявление.Ссылка.Дата
	|			И МаксимальныеДатыПоСотрудникам.ФизЛицо = Заявление.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";
	
	Запрос.Выполнить();
	СтарыеДанныеОТелефонеТекст = "ВТСтарыеДанныеОТелефоне";	
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МаксимальныеДатыПоСотрудникам.ФизЛицо КАК ФизЛицо,
	|	Заявление.АдресФактический КАК АдресФактический
	|ПОМЕСТИТЬ ВТСтарыеДанныеАдресаФактического
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(Заявление.Ссылка.Дата) КАК МаксимальнаяДата,
	|		ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельстваРаботникиОрганизации.ФизЛицо КАК ФизЛицо
	|	ИЗ
	|		" + СписокФизЛицТекст + " КАК ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельстваРаботникиОрганизации
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.РаботникиОрганизации КАК Заявление
	|			ПО Заявление.ФизЛицо = ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельстваРаботникиОрганизации.ФизЛицо
	|				И (Заявление.Ссылка.Проведен)
	|				И (Заявление.Ссылка <> &ВводимыйДокумент)
	|				И (Заявление.Ссылка.Организация = &ВыбраннаяОрганизация)
	|				И (Заявление.Ссылка.Дата <= ВЫБОР
	|					КОГДА ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельстваРаботникиОрганизации.ДатаПолученияСвидетельства = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|						ТОГДА &ВыбранныйПериод
	|					ИНАЧЕ ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельстваРаботникиОрганизации.ДатаПолученияСвидетельства
	|				КОНЕЦ)
	|				И (Заявление.АдресФактический <> """")
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельстваРаботникиОрганизации.ФизЛицо) КАК МаксимальныеДатыПоСотрудникам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.РаботникиОрганизации КАК Заявление
	|		ПО (Заявление.Ссылка <> &ВводимыйДокумент)
	|			И (Заявление.Ссылка.Организация = &ВыбраннаяОрганизация)
	|			И (Заявление.Ссылка.Проведен)
	|			И МаксимальныеДатыПоСотрудникам.МаксимальнаяДата = Заявление.Ссылка.Дата
	|			И МаксимальныеДатыПоСотрудникам.ФизЛицо = Заявление.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";
	
	Запрос.Выполнить();
	СтарыеДанныеАдресаФактическогоТекст = "ВТСтарыеДанныеАдресаФактического";	
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МаксимальныеДатыПоСотрудникам.ФизЛицо КАК ФизЛицо,
	|	Заявление.АдресРегистрации КАК АдресРегистрации
	|ПОМЕСТИТЬ ВТСтарыеДанныеАдресаРегистрации
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(Заявление.Ссылка.Дата) КАК МаксимальнаяДата,
	|		ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельстваРаботникиОрганизации.ФизЛицо КАК ФизЛицо
	|	ИЗ
	|		" + СписокФизЛицТекст + " КАК ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельстваРаботникиОрганизации
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.РаботникиОрганизации КАК Заявление
	|			ПО Заявление.ФизЛицо = ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельстваРаботникиОрганизации.ФизЛицо
	|				И (Заявление.Ссылка.Проведен)
	|				И (Заявление.Ссылка <> &ВводимыйДокумент)
	|				И (Заявление.Ссылка.Организация = &ВыбраннаяОрганизация)
	|				И (Заявление.Ссылка.Дата <= ВЫБОР
	|					КОГДА ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельстваРаботникиОрганизации.ДатаПолученияСвидетельства = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|						ТОГДА &ВыбранныйПериод
	|					ИНАЧЕ ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельстваРаботникиОрганизации.ДатаПолученияСвидетельства
	|				КОНЕЦ)
	|				И (Заявление.АдресРегистрации <> """")
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельстваРаботникиОрганизации.ФизЛицо) КАК МаксимальныеДатыПоСотрудникам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.РаботникиОрганизации КАК Заявление
	|		ПО (Заявление.Ссылка <> &ВводимыйДокумент)
	|			И (Заявление.Ссылка.Организация = &ВыбраннаяОрганизация)
	|			И (Заявление.Ссылка.Проведен)
	|			И МаксимальныеДатыПоСотрудникам.МаксимальнаяДата = Заявление.Ссылка.Дата
	|			И МаксимальныеДатыПоСотрудникам.ФизЛицо = Заявление.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";
	
	Запрос.Выполнить();
	СтарыеДанныеАдресаРегистрацииТекст = "ВТСтарыеДанныеАдресаРегистрации";	
	
	ТекстЗапросаКДанным = 
	"ВЫБРАТЬ
	|	НомераСтрок.НомерСтроки КАК НомерСтроки,
	|	НомераСтрок.ФизЛицо,
	|	НомераСтрок.ДатаПолученияСвидетельства,
	|	НомераСтрок.ФизЛицоСтраховойНомерПФР КАК СтраховойНомерПФРВСвидетельстве,
	|	ВЫБОР
	|		КОГДА СтарыеДанные.ФизЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА СтарыеДанные.Фамилия
	|		КОГДА ДанныеАнкет.ФизЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ДанныеАнкет.Фамилия
	|		ИНАЧЕ ФИОСрезПоследних.Фамилия
	|	КОНЕЦ КАК ФамилияВСвидетельстве,
	|	ВЫБОР
	|		КОГДА СтарыеДанные.ФизЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА СтарыеДанные.Имя
	|		КОГДА ДанныеАнкет.ФизЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ДанныеАнкет.Имя
	|		ИНАЧЕ ФИОСрезПоследних.Имя
	|	КОНЕЦ КАК ИмяВСвидетельстве,
	|	ВЫБОР
	|		КОГДА СтарыеДанные.ФизЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА СтарыеДанные.Отчество
	|		КОГДА ДанныеАнкет.ФизЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ДанныеАнкет.Отчество
	|		ИНАЧЕ ФИОСрезПоследних.Отчество
	|	КОНЕЦ КАК ОтчествоВСвидетельстве,
	|	ВЫБОР
	|		КОГДА СтарыеДанные.ФизЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА СтарыеДанные.Пол
	|		КОГДА ДанныеАнкет.ФизЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ДанныеАнкет.Пол
	|		ИНАЧЕ НомераСтрок.ФизЛицоПол
	|	КОНЕЦ КАК ПолВСвидетельстве,
	|	ВЫБОР
	|		КОГДА СтарыеДанные.ФизЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА СтарыеДанные.ДатаРождения
	|		КОГДА ДанныеАнкет.ФизЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ДанныеАнкет.ДатаРождения
	|		ИНАЧЕ НомераСтрок.ФизЛицоДатаРождения
	|	КОНЕЦ КАК ДатаРожденияВСвидетельстве,
	|	ВЫБОР
	|		КОГДА СтарыеДанные.ФизЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА СтарыеДанные.МестоРождения
	|		КОГДА ДанныеАнкет.ФизЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ДанныеАнкет.МестоРождения
	|		ИНАЧЕ НомераСтрок.ФизЛицоМестоРождения
	|	КОНЕЦ КАК МестоРожденияВСвидетельстве,
	|	ВЫБОР
	|		КОГДА СтарыеДанные.ФизЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ФИОСрезПоследних.Фамилия <> СтарыеДанные.Фамилия
	|						ТОГДА ФИОСрезПоследних.Фамилия
	|					ИНАЧЕ """"
	|				КОНЕЦ
	|		КОГДА ДанныеАнкет.ФизЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ФИОСрезПоследних.Фамилия <> ДанныеАнкет.Фамилия
	|						ТОГДА ФИОСрезПоследних.Фамилия
	|					ИНАЧЕ """"
	|				КОНЕЦ
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Фамилия,
	|	ВЫБОР
	|		КОГДА СтарыеДанные.ФизЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ФИОСрезПоследних.Имя <> СтарыеДанные.Имя
	|						ТОГДА ФИОСрезПоследних.Имя
	|					ИНАЧЕ """"
	|				КОНЕЦ
	|		КОГДА ДанныеАнкет.ФизЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ФИОСрезПоследних.Имя <> ДанныеАнкет.Имя
	|						ТОГДА ФИОСрезПоследних.Имя
	|					ИНАЧЕ """"
	|				КОНЕЦ
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Имя,
	|	ВЫБОР
	|		КОГДА СтарыеДанные.ФизЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ФИОСрезПоследних.Отчество <> СтарыеДанные.Отчество
	|						ТОГДА ФИОСрезПоследних.Отчество
	|					ИНАЧЕ """"
	|				КОНЕЦ
	|		КОГДА ДанныеАнкет.ФизЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ФИОСрезПоследних.Отчество <> ДанныеАнкет.Отчество
	|						ТОГДА ФИОСрезПоследних.Отчество
	|					ИНАЧЕ """"
	|				КОНЕЦ
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Отчество,
	|	ВЫБОР
	|		КОГДА СтарыеДанные.ФизЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА СтарыеДанные.Отчество <> """"
	|							И ФИОСрезПоследних.Отчество = """"
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		КОГДА ДанныеАнкет.ФизЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ДанныеАнкет.Отчество <> """"
	|							И ФИОСрезПоследних.Отчество = """"
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПризнакОтменыОтчества,
	|	ВЫБОР
	|		КОГДА СтарыеДанные.ФизЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА НомераСтрок.ФизЛицоПол = СтарыеДанные.Пол
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ПолФизическихЛиц.ПустаяСсылка)
	|					ИНАЧЕ НомераСтрок.ФизЛицоПол
	|				КОНЕЦ
	|		КОГДА ДанныеАнкет.ФизЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА НомераСтрок.ФизЛицоПол = ДанныеАнкет.Пол
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ПолФизическихЛиц.ПустаяСсылка)
	|					ИНАЧЕ НомераСтрок.ФизЛицоПол
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ПолФизическихЛиц.ПустаяСсылка)
	|	КОНЕЦ КАК Пол,
	|	ВЫБОР
	|		КОГДА СтарыеДанные.ФизЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА НомераСтрок.ФизЛицоДатаРождения = СтарыеДанные.ДатаРождения
	|						ТОГДА ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ИНАЧЕ НомераСтрок.ФизЛицоДатаРождения
	|				КОНЕЦ
	|		КОГДА ДанныеАнкет.ФизЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА НомераСтрок.ФизЛицоДатаРождения = ДанныеАнкет.ДатаРождения
	|						ТОГДА ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ИНАЧЕ НомераСтрок.ФизЛицоДатаРождения
	|				КОНЕЦ
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	КОНЕЦ КАК ДатаРождения,
	|	ВЫБОР
	|		КОГДА СтарыеДанные.ФизЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА НомераСтрок.ФизЛицоМестоРождения = СтарыеДанные.МестоРождения
	|						ТОГДА """"
	|					ИНАЧЕ НомераСтрок.ФизЛицоМестоРождения
	|				КОНЕЦ
	|		КОГДА ДанныеАнкет.ФизЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА НомераСтрок.ФизЛицоМестоРождения = ДанныеАнкет.МестоРождения
	|						ТОГДА """"
	|					ИНАЧЕ НомераСтрок.ФизЛицоМестоРождения
	|				КОНЕЦ
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК МестоРождения,
	|	ВЫБОР
	|		КОГДА СтарыеДанныеОГражданстве.ФизЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(ГражданствоФизЛицСрезПоследних.Страна, ЗНАЧЕНИЕ(Справочник.КлассификаторСтранМира.Россия)) = СтарыеДанныеОГражданстве.Гражданство
	|						ТОГДА ЗНАЧЕНИЕ(Справочник.КлассификаторСтранМира.ПустаяСсылка)
	|					ИНАЧЕ ЕСТЬNULL(ГражданствоФизЛицСрезПоследних.Страна, ЗНАЧЕНИЕ(Справочник.КлассификаторСтранМира.Россия))
	|				КОНЕЦ
	|		КОГДА ДанныеАнкет.ФизЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(ГражданствоФизЛицСрезПоследних.Страна, ЗНАЧЕНИЕ(Справочник.КлассификаторСтранМира.Россия)) = ДанныеАнкет.Гражданство
	|						ТОГДА ЗНАЧЕНИЕ(Справочник.КлассификаторСтранМира.ПустаяСсылка)
	|					ИНАЧЕ ЕСТЬNULL(ГражданствоФизЛицСрезПоследних.Страна, ЗНАЧЕНИЕ(Справочник.КлассификаторСтранМира.Россия))
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КлассификаторСтранМира.ПустаяСсылка)
	|	КОНЕЦ КАК Гражданство,
	|	ВЫБОР
	|		КОГДА СтарыеДанныеАдресаРегистрации.ФизЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА "","" + АдресаРегистрации.Поле1 + "","" + АдресаРегистрации.Поле2 + "","" + АдресаРегистрации.Поле3 + "","" + АдресаРегистрации.Поле4 + "","" + АдресаРегистрации.Поле5 + "","" + АдресаРегистрации.Поле6 + "","" + АдресаРегистрации.Поле7 + "","" + АдресаРегистрации.Поле8 + "","" + АдресаРегистрации.Поле9 = СтарыеДанныеАдресаРегистрации.АдресРегистрации
	|						ТОГДА """"
	|					ИНАЧЕ "","" + АдресаРегистрации.Поле1 + "","" + АдресаРегистрации.Поле2 + "","" + АдресаРегистрации.Поле3 + "","" + АдресаРегистрации.Поле4 + "","" + АдресаРегистрации.Поле5 + "","" + АдресаРегистрации.Поле6 + "","" + АдресаРегистрации.Поле7 + "","" + АдресаРегистрации.Поле8 + "","" + АдресаРегистрации.Поле9
	|				КОНЕЦ
	|		КОГДА ДанныеАнкет.ФизЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА "","" + АдресаРегистрации.Поле1 + "","" + АдресаРегистрации.Поле2 + "","" + АдресаРегистрации.Поле3 + "","" + АдресаРегистрации.Поле4 + "","" + АдресаРегистрации.Поле5 + "","" + АдресаРегистрации.Поле6 + "","" + АдресаРегистрации.Поле7 + "","" + АдресаРегистрации.Поле8 + "","" + АдресаРегистрации.Поле9 = ДанныеАнкет.АдресРегистрации
	|						ТОГДА """"
	|					ИНАЧЕ "","" + АдресаРегистрации.Поле1 + "","" + АдресаРегистрации.Поле2 + "","" + АдресаРегистрации.Поле3 + "","" + АдресаРегистрации.Поле4 + "","" + АдресаРегистрации.Поле5 + "","" + АдресаРегистрации.Поле6 + "","" + АдресаРегистрации.Поле7 + "","" + АдресаРегистрации.Поле8 + "","" + АдресаРегистрации.Поле9
	|				КОНЕЦ
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК АдресРегистрации,
	|	ВЫБОР
	|		КОГДА СтарыеДанныеАдресаФактического.ФизЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА "","" + АдресаФактические.Поле1 + "","" + АдресаФактические.Поле2 + "","" + АдресаФактические.Поле3 + "","" + АдресаФактические.Поле4 + "","" + АдресаФактические.Поле5 + "","" + АдресаФактические.Поле6 + "","" + АдресаФактические.Поле7 + "","" + АдресаФактические.Поле8 + "","" + АдресаФактические.Поле9 = СтарыеДанныеАдресаФактического.АдресФактический
	|						ТОГДА """"
	|					ИНАЧЕ "","" + АдресаФактические.Поле1 + "","" + АдресаФактические.Поле2 + "","" + АдресаФактические.Поле3 + "","" + АдресаФактические.Поле4 + "","" + АдресаФактические.Поле5 + "","" + АдресаФактические.Поле6 + "","" + АдресаФактические.Поле7 + "","" + АдресаФактические.Поле8 + "","" + АдресаФактические.Поле9
	|				КОНЕЦ
	|		КОГДА ДанныеАнкет.ФизЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА "","" + АдресаФактические.Поле1 + "","" + АдресаФактические.Поле2 + "","" + АдресаФактические.Поле3 + "","" + АдресаФактические.Поле4 + "","" + АдресаФактические.Поле5 + "","" + АдресаФактические.Поле6 + "","" + АдресаФактические.Поле7 + "","" + АдресаФактические.Поле8 + "","" + АдресаФактические.Поле9 = ДанныеАнкет.АдресФактический
	|						ТОГДА """"
	|					ИНАЧЕ "","" + АдресаФактические.Поле1 + "","" + АдресаФактические.Поле2 + "","" + АдресаФактические.Поле3 + "","" + АдресаФактические.Поле4 + "","" + АдресаФактические.Поле5 + "","" + АдресаФактические.Поле6 + "","" + АдресаФактические.Поле7 + "","" + АдресаФактические.Поле8 + "","" + АдресаФактические.Поле9
	|				КОНЕЦ
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК АдресФактический,
	|	ВЫБОР
	|		КОГДА СтарыеДанныеОТелефоне.ФизЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ДомашниеТелефоны.Поле3 = СтарыеДанныеОТелефоне.Телефоны
	|						ТОГДА """"
	|					ИНАЧЕ ДомашниеТелефоны.Поле3
	|				КОНЕЦ
	|		КОГДА ДанныеАнкет.ФизЛицо ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ДомашниеТелефоны.Поле3 = ДанныеАнкет.Телефоны
	|						ТОГДА """"
	|					ИНАЧЕ ДомашниеТелефоны.Поле3
	|				КОНЕЦ
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Телефоны,
	|	ВЫБОР
	|		КОГДА НомераСтрок.ВидАДВ = ЗНАЧЕНИЕ(Перечисление.ВидыАДВ.АДВ3)
	|			ТОГДА ВЫБОР
	|					КОГДА ДанныеОСЗВ4.Ссылка ЕСТЬ НЕ NULL 
	|						ТОГДА ""Представлялись""
	|					ИНАЧЕ ""Будут представлены""
	|				КОНЕЦ
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ОтметкаОПредставленииСведений
	|ИЗ
	|	" + СписокФизЛицТекст + " КАК НомераСтрок
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ВыбранныйПериод, ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + " КАК СписокФизЛиц)) КАК ФИОСрезПоследних
	|		ПО НомераСтрок.ФизЛицо = ФИОСрезПоследних.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц.СрезПоследних(&ВыбранныйПериод, ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + " КАК СписокФизЛиц)) КАК ГражданствоФизЛицСрезПоследних
	|		ПО НомераСтрок.ФизЛицо = ГражданствоФизЛицСрезПоследних.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ " + ДанныеАнкетТекст + " КАК ДанныеАнкет
	|		ПО НомераСтрок.ФизЛицо = ДанныеАнкет.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ " + СтарыеДанныеТекст + " КАК СтарыеДанные
	|		ПО НомераСтрок.ФизЛицо = СтарыеДанные.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
	|			СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.Ссылка КАК Ссылка,
	|			ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельстваРаботникиОрганизации.ФизЛицо КАК ФизЛицо
	|		ИЗ
	|			" + СписокФизЛицТекст + " КАК ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельстваРаботникиОрганизации
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СведенияОТрудовомСтажеИЗаработкеСЗВ4.РаботникиОрганизации КАК СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации
	|				ПО СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.ФизЛицо = ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельстваРаботникиОрганизации.ФизЛицо
	|					И (СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.Ссылка.Проведен)
	|					И (СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.Ссылка.Организация = &ВыбраннаяОрганизация)
	|					И (СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.Ссылка.Дата <= ВЫБОР
	|						КОГДА ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельстваРаботникиОрганизации.ДатаПолученияСвидетельства = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|							ТОГДА &ВыбранныйПериод
	|						ИНАЧЕ ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельстваРаботникиОрганизации.ДатаПолученияСвидетельства
	|					КОНЕЦ)
	|		
	|		УПОРЯДОЧИТЬ ПО
	|			СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.Ссылка.Дата УБЫВ) КАК ДанныеОСЗВ4
	|		ПО НомераСтрок.ФизЛицо = ДанныеОСЗВ4.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ " + СтарыеДанныеОГражданствеТекст + " КАК СтарыеДанныеОГражданстве
	|		ПО НомераСтрок.ФизЛицо = СтарыеДанныеОГражданстве.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ " + СтарыеДанныеОТелефонеТекст + " КАК СтарыеДанныеОТелефоне
	|		ПО НомераСтрок.ФизЛицо = СтарыеДанныеОТелефоне.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ " + СтарыеДанныеАдресаФактическогоТекст + " КАК СтарыеДанныеАдресаФактического
	|		ПО НомераСтрок.ФизЛицо = СтарыеДанныеАдресаФактического.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ " + СтарыеДанныеАдресаРегистрацииТекст + " КАК СтарыеДанныеАдресаРегистрации
	|		ПО НомераСтрок.ФизЛицо = СтарыеДанныеАдресаРегистрации.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ " + СписокДомашниеТелефоныТекст + " КАК ДомашниеТелефоны
	|		ПО НомераСтрок.ФизЛицо = ДомашниеТелефоны.Объект
	|		ЛЕВОЕ СОЕДИНЕНИЕ " + СписокАдресаФактическиеТекст + " КАК АдресаФактические
	|		ПО НомераСтрок.ФизЛицо = АдресаФактические.Объект
	|		ЛЕВОЕ СОЕДИНЕНИЕ " + СписокАдресаРегистрацииТекст + " КАК АдресаРегистрации
	|		ПО НомераСтрок.ФизЛицо = АдресаРегистрации.Объект
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос.Текст 	= ТекстЗапросаКДанным;
	РаботникиОрганизации.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры 

// Формирует файл, который можно будет записать на дискетку
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Строка - содержимое файла
//
Функция СформироватьВыходнойФайл(Отказ) Экспорт

	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);
	
	ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапке().Выбрать();
	Если Не ВыборкаПоШапкеДокумента.Следующий() тогда
		Отказ = Истина;
		Возврат "";
	КонецЕсли;
	
	ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок);
	Если Отказ тогда
		Возврат "";
	КонецЕсли;
	
	ВыборкаПоРаботникиОрганизации = СформироватьЗапросПоРаботникиОрганизации(ВыборкаПоШапкеДокумента).Выбрать(ОбходРезультатаЗапроса.Прямой);
	
	Если ВыборкаПоРаботникиОрганизации.Количество() > 200 тогда
		ОбщегоНазначения.СообщитьОбОшибке("В документе должно быть не более 200 заявлений (работников)!", Отказ, Заголовок);
	КонецЕсли;
	
	СписокОбработанныхЗаявлений = Новый Соответствие;
	
	ТекстФайла	= "";
	НомерДокументаВПачке = 0;
	
	ДатаЗаполнения			= ВыборкаПоШапкеДокумента.Дата;
	
	КоличествоДокументов 	= ВыборкаПоРаботникиОрганизации.Количество();
	
	// Формирование файла версии 04.00
	Если ВыборкаПоШапкеДокумента.ФорматФайла = Перечисления.ФорматФайлаПФР.Версия04 Тогда
		//Формируем заголовок выходного файла
		ТекстФайла	= ТекстФайла + ПроцедурыПерсонифицированногоУчета.ПолучитьЗаписьЗаголовок();
		ТекстФайла	= ТекстФайла + ПроцедурыПерсонифицированногоУчета.ПолучитьЗаписьОРаботодателе(ВыборкаПоШапкеДокумента.Организация, ВыборкаПоШапкеДокумента.Дата, Отказ);
		ТекстФайла	= ТекстФайла + ПроцедурыПерсонифицированногоУчета.ПолучитьЗаписьОПачке(НомерПачки,ДатаЗаполнения,"","");
		ТекстФайла	= ТекстФайла + ПроцедурыПерсонифицированногоУчета.ПолучитьЗаписьОПачке(СокрЛП(НомерПачки),ДатаЗаполнения,"","");
		Если Отказ Тогда
			Возврат "";
		КонецЕсли;
		
		Если ВыборкаПоШапкеДокумента.ВидАДВ =  Перечисления.ВидыАДВ.АДВ2 тогда
			ТипДокумента = "ОБМН";
		Иначе	
			ТипДокумента = "ДУБЛ";
		КонецЕсли;
		ТекстФайла	= ТекстФайла + ПроцедурыПерсонифицированногоУчета.ПолучитьЗаписьОТипеДокумента(ТипДокумента,КоличествоДокументов);
		
		//Получаем таблицу формата записи
		ДокументФорматЗаписей = ПолучитьМакет("ФорматЗаписей");
		ТаблицаФорматаЗаписи = ПроцедурыПерсонифицированногоУчета.ПолучитьФорматЗаписи(ТипДокумента,ДокументФорматЗаписей);
		
		Пока ВыборкаПоРаботникиОрганизации.Следующий() Цикл
			
			//Контроль дубля строк
			Если СписокОбработанныхЗаявлений.Получить(ВыборкаПоРаботникиОрганизации.ФизЛицо) = Неопределено Тогда
				СписокОбработанныхЗаявлений.Вставить(ВыборкаПоРаботникиОрганизации.ФизЛицо, Истина);
			Иначе	
				ОбщегоНазначения.СообщитьОбОшибке("Строка №" + ВыборкаПоРаботникиОрганизации.НомерСтроки + ": Работник " + ВыборкаПоРаботникиОрганизации.ФизЛицоНаименование + " указан(а) в документе дважды!", Отказ, Заголовок);
			КонецЕсли;
			
			ПроверитьЗаполнениеСтрокиРаботникаОрганизации(ВыборкаПоШапкеДокумента, ВыборкаПоРаботникиОрганизации, Отказ, Заголовок);
			
			Если Отказ Тогда
				Продолжить;
			КонецЕсли;
			
			НомерДокументаВПачке = 	НомерДокументаВПачке + 1;
			
			//Берем запись с пустыми полями
			Запись = ПроцедурыПерсонифицированногоУчета.ПолучитьСтруктуруЗаписи(ТаблицаФорматаЗаписи);
			
			Запись.ТипЗаписи = ТипДокумента;
			Запись.НомерДокументаВПачке = НомерДокументаВПачке;
			Запись.ДатаЗаполнения = ДатаЗаполнения;
			
			//Данные, указанные в свидетельстве
			Запись.СтраховойНомер = ВыборкаПоРаботникиОрганизации.СтраховойНомерПФРВСвидетельстве;
			Запись.ФамилияВСвидетельстве = ВыборкаПоРаботникиОрганизации.ФамилияВСвидетельстве;
			Запись.ИмяВСвидетельстве = ВыборкаПоРаботникиОрганизации.ИмяВСвидетельстве;
			Запись.ОтчествоВСвидетельстве = ВыборкаПоРаботникиОрганизации.ОтчествоВСвидетельстве;
			
			//Изменившиеся данные
			Запись.Фамилия	= ВыборкаПоРаботникиОрганизации.Фамилия;
			Запись.Имя		= ВыборкаПоРаботникиОрганизации.Имя;
			
			//Отчетство может быть отменено
			Если ВыборкаПоРаботникиОрганизации.ПризнакОтменыОтчества  тогда
				Запись.ПризнакОтменыОтчества = "ОТМН";
				
			Иначе
				Запись.Отчество = ВыборкаПоРаботникиОрганизации.Отчество;
				
			КонецЕсли;
			
			//Пол
			Если ЗначениеЗаполнено(ВыборкаПоРаботникиОрганизации.Пол) тогда
				Запись.Пол = ?(ВыборкаПоРаботникиОрганизации.Пол = Перечисления.ПолФизическихЛиц.Мужской, "М", "Ж");
			КонецЕсли;
			
			//Дата рождения
			Если ЗначениеЗаполнено(ВыборкаПоРаботникиОрганизации.ДатаРождения) тогда
				Запись.ТипДатыРождения = "СТАНДАРТ";
				Запись.СтандартнаяДатаРождения = ВыборкаПоРаботникиОрганизации.ДатаРождения;
				Запись.ОсобаяДатаРожденияДень = 0;
				Запись.ОсобаяДатаРожденияМесяц = 0;
				Запись.ОсобаяДатаРожденияГод = 0;
			КонецЕсли;
			
			//Место рождения может быть отменено
			Если ВыборкаПоРаботникиОрганизации.ПризнакОтменыМестаРождения  тогда
				Запись.ПризнакОтменыМестаРождения = "ОТМН";
				
			ИначеЕсли ЗначениеЗаполнено(ВыборкаПоРаботникиОрганизации.МестоРождения) тогда
				ПроцедурыПерсонифицированногоУчета.ВписатьВЗаписьМестоРождения(Запись, ВыборкаПоРаботникиОрганизации.МестоРождения);
				
			КонецЕсли;
			
			Запись.Гражданство = СокрЛП(ВыборкаПоРаботникиОрганизации.Гражданство);
			
			//Паспортные данные
			Если ЗначениеЗаполнено(ВыборкаПоРаботникиОрганизации.ДокументВид) тогда
				ПроцедурыПерсонифицированногоУчета.ВписатьВЗаписьДокумент(Запись,ВыборкаПоРаботникиОрганизации);
			КонецЕсли;
			
			Запись.АдресРегистрации = ВыборкаПоРаботникиОрганизации.АдресРегистрации;
			Запись.АдресФактический = ВыборкаПоРаботникиОрганизации.АдресФактический;
			Запись.Телефоны = ВыборкаПоРаботникиОрганизации.Телефоны;
			
			//Поля, присутствующие только в записи типа "ДУБЛ"
			Если ТипДокумента = "ДУБЛ" тогда
				Запись.ПолВСвидетельстве = ?(ВыборкаПоРаботникиОрганизации.ПолВСвидетельстве = Перечисления.ПолФизическихЛиц.Мужской, "М", "Ж");
				
				//Даты рождения указанная в свидетельстве 
				Запись.ТипДатыРожденияВСвидетельстве			= "СТАНДАРТ";
				Запись.СтандартнаяДатаРожденияВСвидетельстве	= ВыборкаПоРаботникиОрганизации.ДатаРожденияВСвидетельстве;
				Запись.ОсобаяДатаРожденияДеньВСвидетельстве		= 0;
				Запись.ОсобаяДатаРожденияМесяцВСвидетельстве	= 0;
				Запись.ОсобаяДатаРожденияГодВСвидетельстве		= 0;
				
				//Место рождения указанное в свидетельстве (может не указываться)
				МестоРождения = РегламентированнаяОтчетность.РазложитьМестоРождения(ВыборкаПоРаботникиОрганизации.МестоРожденияВСвидетельстве);
				Запись.ТипМестаРожденияВСвидетельстве				= ?(МестоРождения.Особое = 1, "ОСОБОЕ", "СТАНДАРТ");
				Запись.МестоРожденияНаселенныйПунктВСвидетельстве	= МестоРождения.НаселенныйПункт;
				Запись.МестоРожденияРайонВСвидетельстве				= МестоРождения.Район;
				Запись.МестоРожденияОбластьВСвидетельстве			= МестоРождения.Область;
				Запись.МестоРожденияСтранаВСвидетельстве			= МестоРождения.Страна;
				
				//Отметка о предоставлении сведений
				Если СокрЛП(ВыборкаПоРаботникиОрганизации.ОтметкаОПредставленииСведений)= "Представлялись" тогда
					Запись.ОтметкаОПредставленииСведений = "ПРЕДСТАВЛ";
					
				ИначеЕсли СокрЛП(ВыборкаПоРаботникиОрганизации.ОтметкаОПредставленииСведений)= "Будут представлены" тогда	
					Запись.ОтметкаОПредставленииСведений = "БУДУТ";
					
				КонецЕсли;
			КонецЕсли;
			
			//Добавляем запись в файл
			СтрокавФайл	= ПроцедурыПерсонифицированногоУчета.ПолучитьСтрокуПоДаннымЗаписи(Запись,ТаблицаФорматаЗаписи);
			ТекстФайла	= ТекстФайла + ВРег(СтрокавФайл) + Символы.ПС;
		КонецЦикла;
		
	ИначеЕсли ВыборкаПоШапкеДокумента.ФорматФайла = Перечисления.ФорматФайлаПФР.Версия07 Тогда
		// Формируем файл версии 07.00
		
		// Список стран
		СписокСтран = Новый Соответствие;
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	КлассификаторСтранМира.Наименование,
		|	КлассификаторСтранМира.Код
		|ИЗ
		|	Справочник.КлассификаторСтранМира КАК КлассификаторСтранМира";
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			СписокСтран.Вставить(СокрЛП(Выборка.Наименование), Строка(Выборка.Код));
		КонецЦикла;

		НомерДокументаВПачке = 1;

		// Загружаем формат файла сведений
		МакетФормата = ПолучитьОбщийМакет("ФорматПФР70");
		
		// Создаем начальное дерево
		ДеревоВыгрузки = ПроцедурыПерсонифицированногоУчета.СоздатьДеревоXML();
		
		УзелПФР = ПроцедурыПерсонифицированногоУчета.ДобавитьУзелВДеревоXML(ДеревоВыгрузки, "ФайлПФР", "", );
		
		ПроцедурыПерсонифицированногоУчета.ЗаполнитьИмяИЗаголовокФайла(УзелПФР, МакетФормата, ПроцедурыПерсонифицированногоУчета.ПолучитьИмяФайлаПФ(Ссылка, Год(ДатаЗаполнения), ВыборкаПоШапкеДокумента));
				
		Если ВыборкаПоШапкеДокумента.ВидАДВ =  Перечисления.ВидыАДВ.АДВ2 тогда
			ТипДокумента = "ЗАЯВЛЕНИЕ_ОБ_ОБМЕНЕ";
		Иначе	
			ТипДокумента = "ЗАЯВЛЕНИЕ_О_ДУБЛИКАТЕ";
		КонецЕсли;
		
		// Добавляем реквизит ПачкаВходящихДокументов
		УзелПачкаВходящихДокументов = ПроцедурыПерсонифицированногоУчета.ЗаполнитьНаборЗаписейВходящаяОпись(УзелПФР, МакетФормата, ТипДокумента, ВыборкаПоШапкеДокумента, КоличествоДокументов, СокрЛП(НомерПачки), НомерДокументаВПачке);
		
		Сокращение = "";
		ФорматАДВ23 = ПроцедурыПерсонифицированногоУчета.ЗагрузитьФорматНабораЗаписейдляПФР(МакетФормата, ТипДокумента);
		ФорматИностранныйАдрес = ПроцедурыПерсонифицированногоУчета.ЗагрузитьФорматНабораЗаписейдляПФР(МакетФормата, "АдресОбщий", 3);
		ФорматНеструктурированныйАдрес = ПроцедурыПерсонифицированногоУчета.ЗагрузитьФорматНабораЗаписейдляПФР(МакетФормата, "АдресОбщий", 2);
		
		Пока ВыборкаПоРаботникиОрганизации.Следующий()	Цикл
			
			//Контроль дубля строк
			Если СписокОбработанныхЗаявлений.Получить(ВыборкаПоРаботникиОрганизации.ФизЛицо) = Неопределено Тогда
				СписокОбработанныхЗаявлений.Вставить(ВыборкаПоРаботникиОрганизации.ФизЛицо, Истина);
			Иначе	
				ОбщегоНазначения.СообщитьОбОшибке("Строка №" + ВыборкаПоРаботникиОрганизации.НомерСтроки + ": Работник " + ВыборкаПоРаботникиОрганизации.ФизЛицоНаименование + " указан(а) в документе дважды!", Отказ, Заголовок);
			КонецЕсли;
			
			ПроверитьЗаполнениеСтрокиРаботникаОрганизации(ВыборкаПоШапкеДокумента, ВыборкаПоРаботникиОрганизации, Отказ, Заголовок);
			
			Если Отказ Тогда
				Продолжить;
			КонецЕсли;
			
			НомерДокументаВПачке = 	НомерДокументаВПачке + 1;
			
			НаборЗаписейАДВ23 = ПроцедурыПерсонифицированногоУчета.СкопироватьСтруктуруДанных(ФорматАДВ23);
			
			НаборЗаписейАДВ23.НомерВпачке.Значение = НомерДокументаВПачке;
			НаборЗаписейАДВ23.СтраховойНомер.Значение = ВыборкаПоРаботникиОрганизации.СтраховойНомерПФРВСвидетельстве;
			
			// ФИОИзСтрахового
			НаборЗаписейФИОИзСтрахового = НаборЗаписейАДВ23.ФИОИзСтрахового.Значение;
			НаборЗаписейФИОИзСтрахового.Фамилия = ВРег(ВыборкаПоРаботникиОрганизации.ФамилияВСвидетельстве);
			НаборЗаписейФИОИзСтрахового.Имя = ВРег(ВыборкаПоРаботникиОрганизации.ИмяВСвидетельстве);
			НаборЗаписейФИОИзСтрахового.Отчество = ВРег(ВыборкаПоРаботникиОрганизации.ОтчествоВСвидетельстве);
			
			//Поля, присутствующие только в записи типа "ЗАЯВЛЕНИЕ_О_ДУБЛИКАТЕ"
			Если ТипДокумента = "ЗАЯВЛЕНИЕ_О_ДУБЛИКАТЕ" Тогда
				
				
				//Отметка о предоставлении сведений
				Если СокрЛП(ВыборкаПоРаботникиОрганизации.ОтметкаОПредставленииСведений)= "Представлялись" тогда
					НаборЗаписейАДВ23.ОтметкаОПредставленииСведений.Значение = "ПРЕДСТАВЛЕНЫ РАНЕЕ";
				ИначеЕсли СокрЛП(ВыборкаПоРаботникиОрганизации.ОтметкаОПредставленииСведений)= "Будут представлены" тогда	
					НаборЗаписейАДВ23.ОтметкаОПредставленииСведений.Значение = "БУДУТ ПРЕДСТАВЛЕНЫ";
				КонецЕсли;
				// ПолИзСтрахового
				НаборЗаписейАДВ23.ПолИзСтрахового.Значение = ?(ВыборкаПоРаботникиОрганизации.ПолВСвидетельстве = Перечисления.ПолФизическихЛиц.Мужской, "МУЖСКОЙ", "ЖЕНСКИЙ");
				// ДатаРожденияИзСтрахового
				НаборЗаписейАДВ23.ДатаРожденияИзСтрахового.Значение = ВыборкаПоРаботникиОрганизации.ДатаРожденияВСвидетельстве;
				// МестоРожденияИзСтрахового
				НаборЗаписейМестоРожденияИзСтрахового = НаборЗаписейАДВ23.МестоРожденияИзСтрахового.Значение;
				МестоРожденияИзСтрахового = РегламентированнаяОтчетность.РазложитьМестоРождения(ВыборкаПоРаботникиОрганизации.МестоРожденияВСвидетельстве);
				НаборЗаписейМестоРожденияИзСтрахового.ТипМестаРождения = ?(МестоРожденияИзСтрахового.Особое = 1, "ОСОБОЕ", "СТАНДАРТНОЕ");
				
				НаборЗаписейМестоРожденияИзСтрахового.ГородРождения = УправлениеКонтактнойИнформацией.ПолучитьИмяИАдресноеСокращение(МестоРожденияИзСтрахового.НаселенныйПункт,Сокращение);
				НаборЗаписейМестоРожденияИзСтрахового.РайонРождения = УправлениеКонтактнойИнформацией.ПолучитьИмяИАдресноеСокращение(МестоРожденияИзСтрахового.Район,Сокращение);
				НаборЗаписейМестоРожденияИзСтрахового.РегионРождения = МестоРожденияИзСтрахового.Область;
				НаборЗаписейМестоРожденияИзСтрахового.СтранаРождения = МестоРожденияИзСтрахового.Страна;
	
			КонецЕсли;
			
			// ИзменившиесяДанные
			НаборЗаписейИзменившиесяДанные = НаборЗаписейАДВ23.ИзменившиесяДанные.Значение;
			// ФИО
			НаборЗаписейИзмФИО = НаборЗаписейИзменившиесяДанные.ФИО.Значение;
			НаборЗаписейИзмФИО.Фамилия = ВРег(ВыборкаПоРаботникиОрганизации.Фамилия);
			НаборЗаписейИзмФИО.Имя = ВРег(ВыборкаПоРаботникиОрганизации.Имя);
			
			//Отчетство может быть отменено
			Если ВыборкаПоРаботникиОрганизации.ПризнакОтменыОтчества  тогда
				НаборЗаписейАДВ23.ПризнакОтменыОтчества.Значение = "ОТМН";
			Иначе
				НаборЗаписейИзмФИО.Отчество = СтрЗаменить(ВРег(ВыборкаПоРаботникиОрганизации.Отчество), "Ё", "Е");
			КонецЕсли;
			//Пол
			Если ЗначениеЗаполнено(ВыборкаПоРаботникиОрганизации.Пол) тогда
				НаборЗаписейИзменившиесяДанные.Пол.Значение = ?(ВыборкаПоРаботникиОрганизации.Пол = Перечисления.ПолФизическихЛиц.Мужской, "МУЖСКОЙ", "ЖЕНСКИЙ");
			КонецЕсли;
			//Дата рождения
			Если ЗначениеЗаполнено(ВыборкаПоРаботникиОрганизации.ДатаРождения) тогда
				НаборЗаписейИзменившиесяДанные.ДатаРождения.Значение = ВыборкаПоРаботникиОрганизации.ДатаРождения;
			КонецЕсли;
			
			//Место рождения
			НаборЗаписейМестоРождения = НаборЗаписейИзменившиесяДанные.МестоРождения.Значение;
			МестоРождения = РегламентированнаяОтчетность.РазложитьМестоРождения(ВыборкаПоРаботникиОрганизации.МестоРождения);
			НаборЗаписейМестоРождения.ТипМестаРождения = ?(МестоРождения.Особое = 1, "ОСОБОЕ", "СТАНДАРТНОЕ");
			
			НаборЗаписейМестоРождения.ГородРождения = УправлениеКонтактнойИнформацией.ПолучитьИмяИАдресноеСокращение(МестоРождения.НаселенныйПункт,Сокращение);
			НаборЗаписейМестоРождения.РайонРождения = УправлениеКонтактнойИнформацией.ПолучитьИмяИАдресноеСокращение(МестоРождения.Район, Сокращение);
			НаборЗаписейМестоРождения.РегионРождения = МестоРождения.Область;
			НаборЗаписейМестоРождения.СтранаРождения = МестоРождения.Страна;
						
			// Гражданство
			НаборЗаписейИзменившиесяДанные.Гражданство.Значение = СокрЛП(ВыборкаПоРаботникиОрганизации.Гражданство);
			
			// АдресРегистрации
			Если РегламентированнаяОтчетность.ПустоеЗначение(ВыборкаПоРаботникиОрганизации.АдресРегистрации) ТОгда
				НаборЗаписейИзменившиесяДанные.Удалить("АдресРегистрации");
			Иначе
				ТекстОшибки  ="";
				НаборЗаписейАдресРегистрации = НаборЗаписейИзменившиесяДанные.АдресРегистрации.Значение;
				ПроцедурыПерсонифицированногоУчета.ЗаполнитьАдрес(НаборЗаписейАдресРегистрации, ВыборкаПоРаботникиОрганизации.АдресРегистрации, 
					СписокСтран, ФорматНеструктурированныйАдрес, ФорматИностранныйАдрес, ТекстОшибки);
				НаборЗаписейИзменившиесяДанные.АдресРегистрации.Значение = НаборЗаписейАдресРегистрации;
				Если НЕ ПустаяСтрока(ТекстОшибки) Тогда
					ОбщегоНазначения.СообщитьОбОшибке("Предупреждение: Строка №"+ВыборкаПоРаботникиОрганизации.НомерСтроки+": Работник "+ВыборкаПоРаботникиОрганизации.ФизЛицо+ " Адрес регистрации" + ТекстОшибки, Ложь);
				КонецЕсли;
			КонецЕсли;
			
			// АдресФактический
			Если ПустаяСтрока(ВыборкаПоРаботникиОрганизации.АдресФактический) Тогда
				НаборЗаписейИзменившиесяДанные.Удалить("АдресФактический");
			Иначе
				ТекстОшибки = "";
				НаборЗаписейАдресФактический = НаборЗаписейИзменившиесяДанные.АдресФактический.Значение;
				ПроцедурыПерсонифицированногоУчета.ЗаполнитьАдрес(НаборЗаписейАдресФактический, ВыборкаПоРаботникиОрганизации.АдресФактический, 
					СписокСтран, ФорматНеструктурированныйАдрес, ФорматИностранныйАдрес, ТекстОшибки);
				НаборЗаписейИзменившиесяДанные.АдресФактический.Значение = НаборЗаписейАдресФактический;
				Если НЕ ПустаяСтрока(ТекстОшибки) Тогда
					ОбщегоНазначения.СообщитьОбОшибке("Предупреждение: Строка №"+ВыборкаПоРаботникиОрганизации.НомерСтроки+": Работник "+ВыборкаПоРаботникиОрганизации.ФизЛицо+ " Адрес фактический" + ТекстОшибки, Ложь);
				КонецЕсли;
			КонецЕсли;
			
			// Телефон
			НаборЗаписейИзменившиесяДанные.Телефон.Значение = ВыборкаПоРаботникиОрганизации.Телефоны;
			
			// ПризнакОтменыОтчества, Отчетство может быть отменено
			Если ВыборкаПоРаботникиОрганизации.ПризнакОтменыОтчества  Тогда
				НаборЗаписейАДВ23.ПризнакОтменыОтчества.Значение = "ОТМЕНЕНО";
			Иначе
				НаборЗаписейАДВ23.Удалить("ПризнакОтменыОтчества");
			КонецЕсли;
			
			//Место рождения может быть отменено
			Если ВыборкаПоРаботникиОрганизации.ПризнакОтменыМестаРождения  Тогда
				НаборЗаписейАДВ23.ПризнакОтменыМестаРождения.Значение = "ОТМЕНЕНО";
			Иначе
				НаборЗаписейАДВ23.Удалить("ПризнакОтменыМестаРождения");
			КонецЕсли;	
			
			// УдостоверяющийДокумент
			НаборЗаписейУдостоверяющийДокумент = НаборЗаписейАДВ23.УдостоверяющийДокумент.Значение;
			НаборЗаписейУдостоверяющийДокумент.ТипУдостоверяющего.Значение = ВыборкаПоРаботникиОрганизации.ДокументВидКодПФР;
			
			НаборЗаписейДокумент = НаборЗаписейУдостоверяющийДокумент.Документ.Значение;
			НаборЗаписейДокумент.НаименованиеУдостоверяющего = ВыборкаПоРаботникиОрганизации.ДокументВидКодПФР; 
			СерииДокумента = РегламентированнаяОтчетность.РазложитьСериюДокумента(ВыборкаПоРаботникиОрганизации.ДокументВид,ВыборкаПоРаботникиОрганизации.ДокументСерия);
			НаборЗаписейДокумент.СерияРимскиеЦифры = СерииДокумента.Часть1;
			НаборЗаписейДокумент.СерияРусскиеБуквы = СерииДокумента.Часть2;
			НаборЗаписейДокумент.НомерУдостоверяющего = ВыборкаПоРаботникиОрганизации.ДокументНомер;
			НаборЗаписейДокумент.ДатаВыдачи = ВыборкаПоРаботникиОрганизации.ДокументДатаВыдачи;
			НаборЗаписейДокумент.КемВыдан = СокрЛП(ВРег(ВыборкаПоРаботникиОрганизации.ДокументКемВыдан));
		
			// ДатаЗаполнения
			НаборЗаписейАДВ23.ДатаЗаполнения.Значение = ДатаЗаполнения;
			ПроцедурыПерсонифицированногоУчета.ДобавитьИнформациюВДерево(ПроцедурыПерсонифицированногоУчета.ДобавитьУзелВДеревоXML(УзелПачкаВходящихДокументов, ТипДокумента,""), НаборЗаписейАДВ23);
		КонецЦикла;
		
		// Преобразуем дерево в строковое описание XML
		ТекстФайла = ПроцедурыПерсонифицированногоУчета.ПолучитьТекстФайлаИзДереваЗначений(ДеревоВыгрузки);

	КонецЕсли;
	
	Возврат ТекстФайла;
	
КонецФункции // СформироватьВыходнойФайл()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Формирует запрос по шапке документа
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросПоШапке()

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);
	

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.Дата,
	|	ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.Номер,
	|	ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.Организация,
	|	ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.Организация.Код,
	|	ВЫБОР
	|		КОГДА ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.Организация
	|		ИНАЧЕ ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.Организация.ГоловнаяОрганизация
	|	КОНЕЦ КАК ГоловнаяОрганизация,
	|	ВЫБОР
	|		КОГДА ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоГоловнаяОрганизация,
	|	ВЫРАЗИТЬ(ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.Организация.НаименованиеПолное КАК СТРОКА(300)) КАК ОрганизацияНаименованиеПолное,
	|	ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.Организация.РегистрационныйНомерПФР,
	|	ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.Организация.ИНН,
	|	ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.Организация.КПП,
	|	ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.Организация.ЮрФизЛицо,
	|	ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.Организация.ОГРН,
	|	ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.Организация.НаименованиеОКОПФ,
	|	ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.Организация.Наименование,
	|	ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.Организация.НаименованиеСокращенное,
	|	ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.Ответственный,
	|	ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.ВидАДВ,
	|	ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.ФорматФайла,
	|	ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.Ссылка,
	|	ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.НомерПачки
	|ИЗ
	|	Документ.ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства КАК ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства
	|ГДЕ
	|	ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.Ссылка = &ДокументСсылка";
	
	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоШапке()

// Выбирает данные, необходимые для заполнения утвержденных форм как из спр-ка
//  физлиц, так и из соотв. регистров сведений
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Результат запроса к данным работников документа.
//
Функция	СформироватьЗапросПоРаботникиОрганизации(ВыборкаПоШапкеДокумента)

	Запрос = Новый Запрос;
 	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка",				Ссылка);
	Запрос.УстановитьПараметр("ДатаАктуальности",			Дата);
	Запрос.УстановитьПараметр("Организация",				Организация);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация",		ВыборкаПоШапкеДокумента.ГоловнаяОрганизация);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаявлениеРаботникиОрганизации.Ссылка,
	|	ЗаявлениеРаботникиОрганизации.НомерСтроки,
	|	ЗаявлениеРаботникиОрганизации.ФизЛицо,
	|	ЗаявлениеРаботникиОрганизации.ДатаПолученияСвидетельства,
	|	ЗаявлениеРаботникиОрганизации.ФизЛицо.Наименование КАК ФизЛицоНаименование,
	|	ЗаявлениеРаботникиОрганизации.СтраховойНомерПФРВСвидетельстве,
	|	ЗаявлениеРаботникиОрганизации.ФамилияВСвидетельстве,
	|	ЗаявлениеРаботникиОрганизации.ИмяВСвидетельстве,
	|	ЗаявлениеРаботникиОрганизации.ОтчествоВСвидетельстве,
	|	ЗаявлениеРаботникиОрганизации.ПолВСвидетельстве,
	|	ЗаявлениеРаботникиОрганизации.ДатаРожденияВСвидетельстве,
	|	ЗаявлениеРаботникиОрганизации.МестоРожденияВСвидетельстве,
	|	ЗаявлениеРаботникиОрганизации.Фамилия,
	|	ЗаявлениеРаботникиОрганизации.Имя,
	|	ЗаявлениеРаботникиОрганизации.Отчество,
	|	ЗаявлениеРаботникиОрганизации.Пол,
	|	ЗаявлениеРаботникиОрганизации.ДатаРождения,
	|	ЗаявлениеРаботникиОрганизации.МестоРождения,
	|	ЗаявлениеРаботникиОрганизации.Гражданство,
	|	ЗаявлениеРаботникиОрганизации.АдресРегистрации,
	|	ЕСТЬNULL(ЗаявлениеРаботникиОрганизации.Гражданство.Наименование, """") КАК ГражданствоНаименование,
	|	ЗаявлениеРаботникиОрганизации.АдресФактический,
	|	ЗаявлениеРаботникиОрганизации.Телефоны,
	|	ЗаявлениеРаботникиОрганизации.ОтметкаОПредставленииСведений,
	|	ЗаявлениеРаботникиОрганизации.ПризнакОтменыОтчества,
	|	ЗаявлениеРаботникиОрганизации.ПризнакОтменыМестаРождения
	|ПОМЕСТИТЬ ВТСписокФизлиц
	|ИЗ
	|	Документ.ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.РаботникиОрганизации КАК ЗаявлениеРаботникиОрганизации
	|ГДЕ
	|	ЗаявлениеРаботникиОрганизации.Ссылка = &ДокументСсылка";
	
	Запрос.Выполнить();
	СписокФизЛицТекст = "ВТСписокФизлиц";	

	Запрос.Текст =
	"ВЫБРАТЬ
	|	РаботникиЗаявления.СтраховойНомерПФРВСвидетельстве,
	|	РаботникиЗаявления.ФамилияВСвидетельстве,
	|	РаботникиЗаявления.ИмяВСвидетельстве,
	|	РаботникиЗаявления.ОтчествоВСвидетельстве,
	|	РаботникиЗаявления.ПолВСвидетельстве,
	|	РаботникиЗаявления.ДатаРожденияВСвидетельстве,
	|	РаботникиЗаявления.МестоРожденияВСвидетельстве,
	|	РаботникиЗаявления.Фамилия,
	|	РаботникиЗаявления.Имя,
	|	РаботникиЗаявления.Отчество,
	|	РаботникиЗаявления.Пол,
	|	РаботникиЗаявления.ДатаРождения,
	|	РаботникиЗаявления.МестоРождения,
	|	РаботникиЗаявления.Телефоны,
	|	РаботникиЗаявления.ОтметкаОПредставленииСведений,
	|	РаботникиЗаявления.ПризнакОтменыОтчества,
	|	РаботникиЗаявления.ПризнакОтменыМестаРождения,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА РаботникиЗаявления.Гражданство = ЗНАЧЕНИЕ(Справочник.КлассификаторСтранМира.Россия)
	|				ТОГДА """"
	|			ИНАЧЕ РаботникиЗаявления.ГражданствоНаименование
	|		КОНЕЦ, """") КАК Гражданство,
	|	РаботникиЗаявления.АдресРегистрации,
	|	РаботникиЗаявления.АдресФактический,
	|	РаботникиЗаявления.НомерСтроки КАК НомерСтроки,
	|	РаботникиЗаявления.ФизЛицо,
	|	РаботникиЗаявления.ФизЛицоНаименование,
	|	РаботникиЗаявления.ДатаПолученияСвидетельства,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументВид,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументВид.КодИМНС КАК КодИМНС,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументСерия,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументНомер,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументДатаВыдачи,
	|	ВЫРАЗИТЬ(ПаспортныеДанныеФизЛицСрезПоследних.ДокументКемВыдан КАК СТРОКА(300)) КАК ДокументКемВыдан,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументВид.КодПФР,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументВид.Наименование,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизации.ФизЛицо ЕСТЬ НЕ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ФизЛицоРаботаетВОрганизации
	|ИЗ
	|	" + СписокФизЛицТекст + " КАК РаботникиЗаявления
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПаспортныеДанныеФизЛиц.СрезПоследних(&ДатаАктуальности, ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + " КАК СписокФизЛиц)) КАК ПаспортныеДанныеФизЛицСрезПоследних
	|		ПО РаботникиЗаявления.ФизЛицо = ПаспортныеДанныеФизЛицСрезПоследних.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			РаботникиОрганизации.Сотрудник.Физлицо КАК ФизЛицо
	|		ИЗ
	|			РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|				&ДатаАктуальности,
	|				Организация = &ГоловнаяОрганизация
	|					И Сотрудник.Физлицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + " КАК СписокФизЛиц)
	|					И Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)) КАК РаботникиОрганизации
	|		ГДЕ
	|			РаботникиОрганизации.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|			И РаботникиОрганизации.ОбособленноеПодразделение = &Организация
	|		
	|		) КАК РаботникиОрганизации
	|		ПО РаботникиЗаявления.ФизЛицо = РаботникиОрганизации.ФизЛицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизтов шапки, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по шапке,
// все проверяемые реквизиты должны быть включены в выборку по шапке.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента	- выборка из результата запроса по шапке документа,
//  Отказ 					- флаг отказа в проведении.
//	Заголовок				- Заголовок для сообщений об ошибках проведения
//
Процедура ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок)

	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Организация) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указана организация, которая подает сведения!", Отказ, Заголовок);
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Ответственный) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указано ответственное лицо!", Отказ, Заголовок);
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ФорматФайла) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указан формат файла!", Отказ, Заголовок);
	ИначеЕсли ВыборкаПоШапкеДокумента.ФорматФайла = Перечисления.ФорматФайлаПФР.Версия07 Тогда	
		Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ОрганизацияНаименованиеОКОПФ) Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Предупреждение: Не указано наименование ОКОПФ организации",,Заголовок);
		ИначеЕсли СтрДлина(ВыборкаПоШапкеДокумента.ОрганизацияНаименованиеОКОПФ) > 40 Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Предупреждение: Наименование ОКОПФ организации обрезано до 40 символов.",,Заголовок);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПроверитьЗаполнениеШапки()

// Проверяет правильность заполнения реквизитов в строке ТЧ "РаботникиОрганизации" документа.
// Если какой-то из реквизтов, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по строке ТЧ документа,
// все проверяемые реквизиты должны быть включены в выборку.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента		- выборка из результата запроса по шапке документа,
//  ВыборкаПоСтрокамДокумента	- спозиционированная на определеной строке выборка 
//  							  из результата запроса по работникам, 
//  Отказ 						- флаг отказа в проведении.
//	Заголовок					- Заголовок для сообщений об ошибках проведения
//
Процедура ПроверитьЗаполнениеСтрокиРаботникаОрганизации(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, Отказ, Заголовок)

	// ФизЛицо
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ФизЛицо) Тогда
  		СтрокаНачалоСообщения = "В табличной части ""Работники"" в строке № "+ СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки)+":"+ Символы.ПС + Символы.Таб;
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалоСообщения + "- не выбран работник!", Отказ, Заголовок);
	Иначе	

		//Проверка реквизитов страницы "РаботникиОрганизации"
		СтрокаСообщения = "";

		Если ВидАДВ = Перечисления.ВидыАДВ.АДВ2 тогда
		Иначе	
			Если (НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ОтметкаОПредставленииСведений)) Тогда
				СтрокаСообщения = СтрокаСообщения + Символы.ПС+Символы.Таб + "- не указана отметка о предоставлении сведений!";
			КонецЕсли;
		КонецЕсли;	  
		
		//Паспортные данные
		Если ВыборкаПоСтрокамДокумента.ДокументВид = NULL Тогда

			СтрокаСообщения = СтрокаСообщения + Символы.ПС+Символы.Таб +  "- не указаны паспортные данные!";

		Иначе
			
			Если НЕ ВыборкаПоСтрокамДокумента.ФизЛицоРаботаетВОрганизации тогда
				СтрокаСообщения = СтрокаСообщения  + Символы.ПС+Символы.Таб +  "- сотрудник не работает в организации " + ВыборкаПоШапкеДокумента.ОрганизацияНаименование + "!";
			КонецЕсли;
			
			УказанВидДокумента = ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ДокументВид);
			СообщениеОбОшибке =  "";
			
			//Проверка реквизитов паспортных данных
			Если Не УказанВидДокумента Тогда
				СтрокаСообщения = СтрокаСообщения + Символы.ПС+Символы.Таб + "- не задан документ, удостоверяющий личность!";
			КонецЕсли;	

			Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ДокументДатаВыдачи) Тогда
				СтрокаСообщения = СтрокаСообщения + Символы.ПС+Символы.Таб + "- не задана дата выдачи документа, удостоверяющего личность!";
			Иначе
				Если (ВыборкаПоСтрокамДокумента.ДатаРождения > ВыборкаПоСтрокамДокумента.ДокументДатаВыдачи) Тогда
					СтрокаСообщения = СтрокаСообщения + Символы.ПС+Символы.Таб + "- дата рождения не должна превышать дату выдачи документа, удостоверяющего личность!";
				КонецЕсли;
			КонецЕсли;	
			Если ВыборкаПоСтрокамДокумента.ДокументВид <> Справочники.ДокументыУдостоверяющиеЛичность.ИМНС05
				И ВыборкаПоСтрокамДокумента.ДокументВид <> Справочники.ДокументыУдостоверяющиеЛичность.ИМНС10
				И ВыборкаПоСтрокамДокумента.ДокументВид <> Справочники.ДокументыУдостоверяющиеЛичность.ИМНС11
				И ВыборкаПоСтрокамДокумента.ДокументВид <> Справочники.ДокументыУдостоверяющиеЛичность.ИМНС12
				И ВыборкаПоСтрокамДокумента.ДокументВид <> Справочники.ДокументыУдостоверяющиеЛичность.ИМНС13
				И ВыборкаПоСтрокамДокумента.ДокументВид <> Справочники.ДокументыУдостоверяющиеЛичность.ИМНС14
				И ВыборкаПоСтрокамДокумента.ДокументВид <> Справочники.ДокументыУдостоверяющиеЛичность.ИМНС15 // Документы, серию и номер которых не нужно проверять
				И ВыборкаПоСтрокамДокумента.ДокументВид <> Справочники.ДокументыУдостоверяющиеЛичность.ИМНС91  Тогда
				
				Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ДокументСерия) Тогда
					СтрокаСообщения = СтрокаСообщения + Символы.ПС+Символы.Таб +  "- не задана серия документа, удостоверяющего личность!";
				ИначеЕсли УказанВидДокумента 
					И НЕ ПроцедурыПерсонифицированногоУчета.ПроверитьСериюУдостоверенияЛичности(ВыборкаПоСтрокамДокумента.ДокументВид,ВыборкаПоСтрокамДокумента.ДокументСерия, СообщениеОбОшибке) Тогда 
					СтрокаСообщения = СтрокаСообщения + Символы.ПС+Символы.Таб +  "- ошибка в серии удостоверения личности "+ СообщениеОбОшибке;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ДокументНомер) Тогда
					СтрокаСообщения = СтрокаСообщения + Символы.ПС+Символы.Таб +  "- не задан номер документа, удостоверяющего личность!";
				ИначеЕсли УказанВидДокумента 
					И НЕ ПроцедурыПерсонифицированногоУчета.ПроверитьНомерУдостоверенияЛичности(ВыборкаПоСтрокамДокумента.ДокументВид,ВыборкаПоСтрокамДокумента.ДокументНомер, СообщениеОбОшибке) Тогда 
					СтрокаСообщения = СтрокаСообщения + Символы.ПС+Символы.Таб +  "- ошибка в номере удостоверения личности. "+ СообщениеОбОшибке;
				КонецЕсли;
			КонецЕсли;	
		КонецЕсли;	

		Если СтрокаСообщения <> "" тогда
  			СтрокаСообщения = "Для сотрудника, указанного в строке № "+ СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки)+" табличной части ""Работники"""+ СтрокаСообщения;
			ОбщегоНазначения.СообщитьОбОшибке(СтрокаСообщения, Отказ, Заголовок);
		КонецЕсли;	 

		//Проверка реквизитов страницы "Данные, указанные в свидетельстве"
		СтрокаСообщения = "";

		Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ФамилияВСвидетельстве) Тогда
        	СтрокаСообщения = СтрокаСообщения + Символы.ПС+Символы.Таб + "- не указана фамилия!";
		КонецЕсли;

		Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ИмяВСвидетельстве) Тогда
        	СтрокаСообщения = СтрокаСообщения + Символы.ПС+Символы.Таб + "- не указано имя!";
		КонецЕсли;

		Если ВидАДВ = Перечисления.ВидыАДВ.АДВ2 тогда
			
		Иначе//Вид АДВ-3

			Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ПолВСвидетельстве) Тогда
                СтрокаСообщения = СтрокаСообщения + Символы.ПС+Символы.Таб + "- не указан пол!";
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ДатаРожденияВСвидетельстве) Тогда
	            СтрокаСообщения = СтрокаСообщения + Символы.ПС+Символы.Таб + "- не указана дата рождения!";
			КонецЕсли;
		КонецЕсли;	 

		//Проверка на указание пустого или неверного страхового номера ("   -   -      ")
		Если НЕ ЗначениеЗаполнено(СтрЗаменить(ВыборкаПоСтрокамДокумента.СтраховойНомерПФРВСвидетельстве,"-","")) Тогда
			СтрокаСообщения = СтрокаСообщения + Символы.ПС+Символы.Таб + "- не указан номер страхового свидетельства!";
		ИначеЕсли Не РегламентированнаяОтчетность.СтраховойНомерПФРСоответствуетТребованиям(ВыборкаПоСтрокамДокумента.СтраховойНомерПФРВСвидетельстве) тогда
			СтрокаСообщения = СтрокаСообщения + Символы.ПС+Символы.Таб + "- задан неверный номер страхового свидетельства!";
		КонецЕсли;	
				
		Если СтрокаСообщения <> "" тогда
			СтрокаСообщения = "На закладке ""Данные, указанные в свидетельстве"" в строке № "+ СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки)+":"+ СтрокаСообщения;
			ОбщегоНазначения.СообщитьОбОшибке(СтрокаСообщения, Отказ, Заголовок);
		КонецЕсли;	 

        //Проверка реквизитов страницы "Изменившиеся данные"
		СтрокаСообщения = "";

		Если ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.АдресРегистрации) Тогда 
			
			АдресРегистрацииСписком = УправлениеКонтактнойИнформацией.ПолучитьСтруктуруАдресаИзСтроки(ВыборкаПоСтрокамДокумента.АдресРегистрации);
			ЗаПределамиРФ = Ложь;
			АдресРегистрацииСписком.Свойство("ЗаПределамиРФ", ЗаПределамиРФ);
			// значение переменной ЗаПределамиРФ может быть Неопределено
			Если ЗаПределамиРФ <> Истина Тогда
				Если  РегламентированнаяОтчетность.АдресСоответствуетТребованиям(АдресРегистрацииСписком) Тогда
					ТекстОшибки = ПроцедурыПерсонифицированногоУчета.ПроверитьАдресПоКЛАДР(АдресРегистрацииСписком);

					Если НЕ ПустаяСтрока(ТекстОшибки) Тогда
						ОбщегоНазначения.СообщитьОбОшибке("На закладке ""Изменившиеся данные"" в строке № "+ СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки)+": Адрес регистрации не соответствует адресному классификатору: в классификаторе не найден" + ТекстОшибки + "!", , Заголовок);
					КонецЕсли;
				Иначе
					СтрокаСообщения = СтрокаСообщения + Символы.ПС+Символы.Таб + "- адрес регистрации заполнен не полностью или неверно или присутствуют латинские или недопустимые символы!";
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.АдресФактический) Тогда
			
			АдресФактическийСписком = УправлениеКонтактнойИнформацией.ПолучитьСтруктуруАдресаИзСтроки(ВыборкаПоСтрокамДокумента.АдресФактический);
			ЗаПределамиРФ = Ложь;
			АдресФактическийСписком.Свойство("ЗаПределамиРФ", ЗаПределамиРФ);
			Если ЗаПределамиРФ <> Истина Тогда
				Если РегламентированнаяОтчетность.АдресСоответствуетТребованиям(АдресФактическийСписком) Тогда
					ТекстОшибки = ПроцедурыПерсонифицированногоУчета.ПроверитьАдресПоКЛАДР(АдресФактическийСписком);
					Если НЕ ПустаяСтрока(ТекстОшибки) Тогда
						ОбщегоНазначения.СообщитьОбОшибке("На закладке ""Изменившиеся данные"" в строке № "+ СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки)+": Фактический адрес проживания не соответствует адресному классификатору: в классификаторе не найден" + ТекстОшибки + "!", , Заголовок);
					КонецЕсли;
				Иначе
					СтрокаСообщения = СтрокаСообщения + Символы.ПС+Символы.Таб + "- фактический адрес проживания заполнен не полностью или неверно или присутствуют латинские или недопустимые символы!";
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
		Если ВидАДВ = Перечисления.ВидыАДВ.АДВ2 Тогда 
			Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Фамилия) И НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Имя) И НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Отчество)
				И НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Пол)  И НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ДатаРождения) И НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.МестоРождения)
				И НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.АдресРегистрации) И НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.АдресФактический) 
				И НЕ(ВыборкаПоСтрокамДокумента.ПризнакОтменыОтчества) И НЕ(ВыборкаПоСтрокамДокумента.ПризнакОтменыМестаРождения) Тогда 
                СтрокаСообщения = СтрокаСообщения + Символы.ПС+Символы.Таб + "- не указаны изменившиеся данные!";
			КонецЕсли;	 
		КонецЕсли;	

		Если ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ДатаРождения) Тогда 
			Если (ВыборкаПоСтрокамДокумента.ДатаРождения > Дата) Тогда
				СтрокаСообщения = СтрокаСообщения + Символы.ПС+Символы.Таб + "- дата рождения не должна превышать дату документа!";
			КонецЕсли;
		КонецЕсли; 
		
		Если СтрокаСообщения <> "" Тогда 
			СтрокаСообщения = "На закладке ""Изменившиеся данные"" в строке № "+ СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки)+":"+ СтрокаСообщения;
			ОбщегоНазначения.СообщитьОбОшибке(СтрокаСообщения, Отказ, Заголовок);
		КонецЕсли;	 

	КонецЕсли;

КонецПроцедуры // ПроверитьЗаполнениеСтрокиРаботникаОрганизации()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, Режим)
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);
	
	// Получим реквизиты шапки из запроса
	ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапке().Выбрать();

	Если ВыборкаПоШапкеДокумента.Следующий() Тогда

		//Надо позвать проверку заполнения реквизитов шапки
		ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок);

		Если Отказ Тогда
			Возврат;
		КонецЕсли;	 
		
	КонецЕсли;
	
    //При проведении файл формируем заново 
	ТекстФайла = СформироватьВыходнойФайл(Отказ);
	Если Отказ тогда
		Возврат;
	КонецЕсли;	 

	//Сохраним сформированный файл сведений в регистре сведений
	Запись = Движения.АрхивДанныхРегламентированнойОтчетности.Добавить();
	Запись.Объект = Ссылка;
	Запись.ОписаниеДанных = "Файл-пачка форм "+ВидАДВ;
	Запись.Данные = ТекстФайла; 
КонецПроцедуры	

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ПроцедурыПерсонифицированногоУчета.ПроставитьНомерПачки(ЭтотОбъект);
	
	КраткийСоставДокумента = ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(РаботникиОрганизации,, "Физлицо");
	
КонецПроцедуры


Процедура ПриКопировании(ОбъектКопирования)
	НомерПачки = "";
	ПроцедурыПерсонифицированногоУчета.ПроставитьНомерПачки(ЭтотОбъект);
КонецПроцедуры


Перем СтруктураШапкиДокумента;
Перем мВестиУчетПоВидамДеятельностиПредпринимателя Экспорт;
Перем ОсновнойХарактерДеятельности Экспорт;
Перем ОсновнаяНоменклатурнаяГруппа Экспорт;

Процедура ПроверитьЗаполнениеШапки(ЭтотОбъект, СтруктураШапкиДокумента, Отказ, Заголовок)
	
	// Укажем, что надо проверить:
	СтруктураРеквизитов = Новый Структура();
	СтруктураРеквизитов.Вставить("Организация");
	
	// Теперь вызовем общую процедуру проверки.
	ЗаполнениеДокументов.ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураРеквизитов, Отказ, Заголовок);

КонецПроцедуры // ПроверитьЗаполнениеШапки()

Процедура ПриЗаписи(Отказ)
		
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Сформируем структуру реквизитов шапки документа
	СтруктураШапкиДокумента = ОбщегоНазначения.СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
	
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);
	
	// Проверим правильность заполнения шапки документа	
	ПроверитьЗаполнениеШапки(ЭтотОбъект, СтруктураШапкиДокумента, Отказ, Заголовок);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Предприниматель = (СтруктураШапкиДокумента.Организация.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо И НЕ НалоговыйУчетУСН.ПрименениеУСН(СтруктураШапкиДокумента.Организация, СтруктураШапкиДокумента.Дата));
	
	Если НЕ Предприниматель Тогда
		СтрокаСообщенияОбОшибке = "Указанная организация не является индивидуальным предпринимателем.";
		ОбщегоНазначения.ОшибкаПриПроведении(СтрокаСообщенияОбОшибке, Отказ, Заголовок);
	КонецЕсли;
	
	Если Не Отказ Тогда
		
		УчетнаяПолитикаНеЗадана = Ложь;
		УчетнаяПолитикаНУ = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(Дата, УчетнаяПолитикаНеЗадана, Организация);
		Если УчетнаяПолитикаНеЗадана Тогда
			мВестиУчетПоВидамДеятельностиПредпринимателя = Ложь;
			ОсновнойХарактерДеятельности = Перечисления.ХарактерДеятельности.ПустаяСсылка();
			ОсновнаяНоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.ПустаяСсылка();			
		Иначе
			мВестиУчетПоВидамДеятельностиПредпринимателя = УчетнаяПолитикаНУ.ВестиУчетПоВидамДеятельности;
			ОсновнойХарактерДеятельности = УчетнаяПолитикаНУ.ОсновнойХарактерДеятельности;
			ОсновнаяНоменклатурнаяГруппа = УчетнаяПолитикаНУ.ОсновнаяНоменклатурнаяГруппа;
		КонецЕсли;
		
		ПроведениеПоРегистрам(Отказ, Заголовок);
	КонецЕсли;
	
КонецПроцедуры

//Проведение по регистрам ИП
//
Процедура ПроведениеПоРегистрам(Отказ, Заголовок)
	
	ПроведениеПоРазделу1(Отказ, Заголовок);
	
	ПроведениеПоРазделу1_2(Отказ, Заголовок);
	
	ПроведениеПоРазделу1_5(Отказ, Заголовок);
	
	ПроведениеПоРазделу2(Отказ, Заголовок);
	
	ПроведениеПоРазделу4(Отказ, Заголовок);
	
	ПроведениеПоРазделу5(Отказ, Заголовок);
	
	ПроведениеПоРазделу6(Отказ, Заголовок);
	
	ПроведениеПоРазделу63(Отказ, Заголовок);
	
	ПроведениеПоПрочимДоходам(Отказ, Заголовок);
	
КонецПроцедуры

Процедура СформироватьДвиженияПоРазделу(ТаблицаРаздела, ИмяРаздела, Отказ, Заголовок)
	
	Если НЕ Отказ Тогда
		Для Каждого СтрокаТаблицы ИЗ ТаблицаРаздела Цикл
			Движение = Движения[ИмяРаздела].Добавить();
			ЗаполнитьЗначенияСвойств(Движение, СтрокаТаблицы);
			Если ИмяРаздела <> "ИПМПЗОбороты" 
				И ИмяРаздела <> "ИППрочиеДоходы" Тогда
				Движение.РеквизитыДокументаОплаты = ДоходыИРасходыПредпринимателя.РеквизитыДокументаОплаты(СтрокаТаблицы.ДокументОплаты);
			КонецЕсли;
			Если НЕ мВестиУчетПоВидамДеятельностиПредпринимателя Тогда
				Движение.НоменклатурнаяГруппа = ОсновнаяНоменклатурнаяГруппа;
				Движение.ХарактерДеятельности = ОсновнойХарактерДеятельности;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

//Формирование данных для таблиц раздела 1
//
Процедура ПроведениеПоРазделу1(Отказ, Заголовок)
	
	Если НЕ мВестиУчетПоВидамДеятельностиПредпринимателя Тогда
		СтруктураПроверяемыхРеквизитов = Новый Структура("ВидДвижения, ВидМПЗ, Номенклатура, Партия, Количество, Сумма");
	Иначе
		СтруктураПроверяемыхРеквизитов = Новый Структура("ВидДвижения, ВидМПЗ, Номенклатура, НоменклатурнаяГруппа, ХарактерДеятельности, Партия, Количество, Сумма");
	КонецЕсли;
	ЗаполнениеДокументов.ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, "Таблица1", СтруктураПроверяемыхРеквизитов,Отказ, Заголовок);
	Если НЕ Отказ Тогда
		ТаблицаРаздела1_МПЗ = ПодготовитьТаблицуРаздела1(Отказ, Заголовок, ВидСравнения.НеРавно);
		СформироватьДвиженияПоРазделу(ТаблицаРаздела1_МПЗ, "ИПМПЗ", Отказ, Заголовок);
		ТаблицаРаздела1_ИМР = ПодготовитьТаблицуРаздела1(Отказ, Заголовок, ВидСравнения.Равно);
		ТаблицаРаздела1_ИМР.Колонки.Номенклатура.Имя = "СтатьяЗатрат";
		СформироватьДвиженияПоРазделу(ТаблицаРаздела1_ИМР, "ИПИныеМатериальныеРасходы", Отказ, Заголовок);
	КонецЕсли;
	
КонецПроцедуры

Функция ПодготовитьТаблицуРаздела1(Отказ, Заголовок, ВидСравненияУсловия)
	
	Если ВидСравненияУсловия = ВидСравнения.Равно Тогда
		ВидСравненияВЗапросе = "=";
	ИначеЕсли ВидСравненияУсловия = ВидСравнения.НеРавно Тогда
		ВидСравненияВЗапросе = "<>";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ИМР", Перечисления.ВидыМПЗ.ИныеМатериальныеРасходы);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Ссылка.Дата КАК Период,
	|	ВЫБОР
	|		КОГДА ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ВидДвижения = ИСТИНА
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	КОНЕЦ КАК ВидДвижения,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ВидМПЗ,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Номенклатура,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.НоменклатурнаяГруппа,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ХарактерДеятельности,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ДокументОплаты,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Партия,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Количество,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Сумма,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.НДС,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Ссылка.Организация
	|ИЗ
	|	Документ.ЗаписьКнигиУчетаДоходовИРасходовИП.Таблица1 КАК ЗаписьКнигиУчетаДоходовИРасходовИПТЧ
	|ГДЕ
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ВидМПЗ " + ВидСравненияВЗапросе + " &ИМР
	|	И ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Ссылка = &Ссылка";
	
	Результат = Запрос.Выполнить().Выгрузить();
	Возврат Результат;
	
КонецФункции

//Формирование данных для таблиц 1-6 1-7 раздела 1
Процедура ПроведениеПоРазделу1_2(Отказ, Заголовок)
	
	Если НЕ мВестиУчетПоВидамДеятельностиПредпринимателя Тогда
		СтруктураПроверяемыхРеквизитов = Новый Структура("ВидМПЗ, Номенклатура, ДокументОплаты, Партия, ДокументОтгрузки, Количество");
	Иначе
		СтруктураПроверяемыхРеквизитов = Новый Структура("ВидМПЗ, Номенклатура, НоменклатурнаяГруппа, ХарактерДеятельности, ДокументОплаты, Партия, ДокументОтгрузки, Количество");
	КонецЕсли;
	ЗаполнениеДокументов.ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, "Таблица12", СтруктураПроверяемыхРеквизитов,Отказ, Заголовок);
	Если НЕ Отказ Тогда
		ТаблицаРаздела1_2 = ПодготовитьТаблицуРаздела1_2(Отказ, Заголовок);
		СформироватьДвиженияПоРазделу(ТаблицаРаздела1_2, "ИПДоходы", Отказ, Заголовок);
	КонецЕсли;
	
КонецПроцедуры

Функция ПодготовитьТаблицуРаздела1_2(Отказ, Заголовок)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ВидМПЗ,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Номенклатура,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.НоменклатурнаяГруппа,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ХарактерДеятельности,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ДокументОплаты,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Партия,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ДокументОтгрузки,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Количество,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Сумма,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.НДС,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Выручка,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.НДСНачисленный,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Ссылка.Организация,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Ссылка.Дата КАК Период,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.КоличествоОплаченоПоставщику
	|ИЗ
	|	Документ.ЗаписьКнигиУчетаДоходовИРасходовИП.Таблица12 КАК ЗаписьКнигиУчетаДоходовИРасходовИПТЧ
	|ГДЕ
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Ссылка = &Ссылка";
	
	Результат = Запрос.Выполнить().Выгрузить();
	Возврат Результат;
	
КонецФункции

//Формирование данных для таблиц 1-5 раздела 1
Процедура ПроведениеПоРазделу1_5(Отказ, Заголовок)
	
	Если НЕ мВестиУчетПоВидамДеятельностиПредпринимателя Тогда
		СтруктураПроверяемыхРеквизитов = Новый Структура("ВидСписанногоМПЗ, НоменклатураСписанная, ПартияСписаннойНоменклатуры, НоменклатураПоступившая, ПартияПоступившейНоменклатуры, Количество, Сумма");
	Иначе
		СтруктураПроверяемыхРеквизитов = Новый Структура("НоменклатурнаяГруппа, ХарактерДеятельности, ВидСписанногоМПЗ, НоменклатураСписанная, ПартияСписаннойНоменклатуры, НоменклатураПоступившая, ПартияПоступившейНоменклатуры, Количество, Сумма");
	КонецЕсли;
	ЗаполнениеДокументов.ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, "Таблица15", СтруктураПроверяемыхРеквизитов,Отказ, Заголовок);
	Если НЕ Отказ Тогда
		ТаблицаРаздела1_5 = ПодготовитьТаблицуРаздела1_5(Отказ, Заголовок);
		СформироватьДвиженияПоРазделу(ТаблицаРаздела1_5, "ИПМПЗОбороты", Отказ, Заголовок);
	КонецЕсли;

КонецПроцедуры

Функция ПодготовитьТаблицуРаздела1_5(Отказ, Заголовок)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.НоменклатурнаяГруппа,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ХарактерДеятельности,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ДокументОплаты,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ВидСписанногоМПЗ,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.НоменклатураСписанная,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ПартияСписаннойНоменклатуры,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыМПЗ.Продукция) КАК ВидПоступившегоМПЗ,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.НоменклатураПоступившая,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ПартияПоступившейНоменклатуры,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Количество,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Сумма,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.НДС,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Ссылка.Организация,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Ссылка.Дата КАК Период
	|ИЗ
	|	Документ.ЗаписьКнигиУчетаДоходовИРасходовИП.Таблица15 КАК ЗаписьКнигиУчетаДоходовИРасходовИПТЧ
	|ГДЕ
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Ссылка = &Ссылка";
	
	Результат = Запрос.Выполнить().Выгрузить();
	Возврат Результат;
	
КонецФункции

//Формирование данных для таблиц раздела 2 и 4
//
Процедура ПроведениеПоРазделу2(Отказ, Заголовок)
	
	Если НЕ мВестиУчетПоВидамДеятельностиПредпринимателя Тогда
		СтруктураПроверяемыхРеквизитов = Новый Структура("ВидДвижения, Номенклатура, Партия");
	Иначе
		СтруктураПроверяемыхРеквизитов = Новый Структура("ВидДвижения, Номенклатура, НоменклатурнаяГруппа, ХарактерДеятельности, Партия");
	КонецЕсли;
	ЗаполнениеДокументов.ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, "Таблица2", СтруктураПроверяемыхРеквизитов,Отказ, Заголовок);
	Если НЕ Отказ Тогда
		ТаблицаРаздела2_ВНА = ПодготовитьТаблицуРаздела2_Стоимость(Отказ, Заголовок, 2);
		СформироватьДвиженияПоРазделу(ТаблицаРаздела2_ВНА, "ИПМПЗ", Отказ, Заголовок);
		ТаблицаРаздела2_Амортизация = ПодготовитьТаблицуРаздела2_Амортизация(Отказ, Заголовок, 2);
		СформироватьДвиженияПоРазделу(ТаблицаРаздела2_Амортизация, "ИППрочиеРасходы", Отказ, Заголовок);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроведениеПоРазделу4(Отказ, Заголовок)
	
	Если НЕ мВестиУчетПоВидамДеятельностиПредпринимателя Тогда
		СтруктураПроверяемыхРеквизитов = Новый Структура("ВидДвижения, Номенклатура, Партия");
	Иначе
		СтруктураПроверяемыхРеквизитов = Новый Структура("ВидДвижения, Номенклатура, НоменклатурнаяГруппа, ХарактерДеятельности, Партия");
	КонецЕсли;
	ЗаполнениеДокументов.ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, "Таблица4", СтруктураПроверяемыхРеквизитов,Отказ, Заголовок);
	Если НЕ Отказ Тогда
		ТаблицаРаздела2_ВНА = ПодготовитьТаблицуРаздела2_Стоимость(Отказ, Заголовок, 4);
		СформироватьДвиженияПоРазделу(ТаблицаРаздела2_ВНА, "ИПМПЗ", Отказ, Заголовок);
		ТаблицаРаздела2_Амортизация = ПодготовитьТаблицуРаздела2_Амортизация(Отказ, Заголовок, 4);
		СформироватьДвиженияПоРазделу(ТаблицаРаздела2_Амортизация, "ИППрочиеРасходы", Отказ, Заголовок);
	КонецЕсли;
	
КонецПроцедуры

Функция ПодготовитьТаблицуРаздела2_Стоимость(Отказ, Заголовок, НомерТЧ)
	
	Если НомерТЧ = 2 Тогда
		ТекстВидМПЗ = "ОС"
	Иначе
		ТекстВидМПЗ = "НМА"
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Ссылка.Дата КАК Период,
	|	ВЫБОР
	|		КОГДА ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ВидДвижения = ИСТИНА
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	КОНЕЦ КАК ВидДвижения,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыМПЗ." + ТекстВидМПЗ + ") КАК ВидМПЗ,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Номенклатура КАК Номенклатура,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ХарактерДеятельности КАК ХарактерДеятельности,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ДокументОплаты КАК ДокументОплаты,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Партия КАК Партия,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Сумма КАК Сумма,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.НДС КАК НДС,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Ссылка.Организация
	|ИЗ
	|	Документ.ЗаписьКнигиУчетаДоходовИРасходовИП.Таблица" + НомерТЧ + " КАК ЗаписьКнигиУчетаДоходовИРасходовИПТЧ
	|ГДЕ
	|	(ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Сумма <> 0
	|			ИЛИ ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.НДС <> 0)
	|	И ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Ссылка = &Ссылка";
	
	Результат = Запрос.Выполнить().Выгрузить();
	Возврат Результат;
	
КонецФункции

Функция ПодготовитьТаблицуРаздела2_Амортизация(Отказ, Заголовок, НомерТЧ)
	
	Если НомерТЧ = 2 Тогда
		ТекстВидМПЗ = "ОС"
	Иначе
		ТекстВидМПЗ = "НМА"
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Ссылка.Дата КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыМПЗ." + ТекстВидМПЗ + ") КАК ВидМПЗ,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Номенклатура КАК СтатьяЗатрат,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ХарактерДеятельности КАК ХарактерДеятельности,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ДокументОплаты КАК ДокументОплаты,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Партия КАК РасчетныйДокумент,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.СуммаАмортизации КАК Сумма,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Ссылка.Организация
	|ИЗ
	|	Документ.ЗаписьКнигиУчетаДоходовИРасходовИП.Таблица" + НомерТЧ + " КАК ЗаписьКнигиУчетаДоходовИРасходовИПТЧ
	|ГДЕ
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.СуммаАмортизации <> 0
	|	И ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Ссылка = &Ссылка";
	
	Результат = Запрос.Выполнить().Выгрузить();
	Возврат Результат;
	
КонецФункции

//Формирование данных для таблицы раздела 5
//
Процедура ПроведениеПоРазделу5(Отказ, Заголовок)
	
	Если НЕ мВестиУчетПоВидамДеятельностиПредпринимателя Тогда
		СтруктураПроверяемыхРеквизитов = Новый Структура("Период, ФизЛицо, СтатьяЗатрат, ВидНачисленияУдержания, РасчетныйДокумент, Сумма");
	Иначе
		СтруктураПроверяемыхРеквизитов = Новый Структура("Период, ФизЛицо, НоменклатурнаяГруппа, ХарактерДеятельности, СтатьяЗатрат, ВидНачисленияУдержания, РасчетныйДокумент, Сумма");
	КонецЕсли;
	ЗаполнениеДокументов.ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, "Таблица5", СтруктураПроверяемыхРеквизитов,Отказ, Заголовок);
	Если НЕ Отказ Тогда
		ТаблицаРаздела5 = ПодготовитьТаблицуРаздела5(Отказ, Заголовок);
		СформироватьДвиженияПоРазделу(ТаблицаРаздела5, "ИПРасходыНаОплатуТруда", Отказ, Заголовок);
	КонецЕсли;
	
КонецПроцедуры

Функция ПодготовитьТаблицуРаздела5(Отказ, Заголовок)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ФизЛицо,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.НоменклатурнаяГруппа,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ХарактерДеятельности,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.СтатьяЗатрат,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ВидНачисленияУдержания,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.РасчетныйДокумент,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ДокументОплаты,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Сумма,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Период,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Ссылка.Организация
	|ИЗ
	|	Документ.ЗаписьКнигиУчетаДоходовИРасходовИП.Таблица5 КАК ЗаписьКнигиУчетаДоходовИРасходовИПТЧ
	|ГДЕ
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Ссылка = &Ссылка";
	
	Результат = Запрос.Выполнить().Выгрузить();
	Возврат Результат;
	
КонецФункции

//Формирование данных для таблицы раздела 6
//
Процедура ПроведениеПоРазделу6(Отказ, Заголовок)
	
	Если НЕ мВестиУчетПоВидамДеятельностиПредпринимателя Тогда
		СтруктураПроверяемыхРеквизитов = Новый Структура("СтатьяЗатрат, РасчетныйДокумент, Сумма");
	Иначе
		СтруктураПроверяемыхРеквизитов = Новый Структура("СтатьяЗатрат, НоменклатурнаяГруппа, ХарактерДеятельности, РасчетныйДокумент, Сумма");
	КонецЕсли;
	ЗаполнениеДокументов.ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, "Таблица6", СтруктураПроверяемыхРеквизитов,Отказ, Заголовок);
	Если НЕ Отказ Тогда
		ТаблицаРаздела6 = ПодготовитьТаблицуРаздела6(Отказ, Заголовок);
		СформироватьДвиженияПоРазделу(ТаблицаРаздела6, "ИППрочиеРасходы", Отказ, Заголовок);
	КонецЕсли;
	
КонецПроцедуры

Функция ПодготовитьТаблицуРаздела6(Отказ, Заголовок)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.СтатьяЗатрат,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.НоменклатурнаяГруппа,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ХарактерДеятельности,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.РасчетныйДокумент,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ДокументОплаты,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Сумма,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.НДС,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Ссылка.Организация,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Ссылка.Дата КАК Период
	|ИЗ
	|	Документ.ЗаписьКнигиУчетаДоходовИРасходовИП.Таблица6 КАК ЗаписьКнигиУчетаДоходовИРасходовИПТЧ
	|ГДЕ
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Ссылка = &Ссылка";
	
	Результат = Запрос.Выполнить().Выгрузить();
	Возврат Результат;
	
КонецФункции

//Формирование данных для таблицы раздела 6-3
//
Процедура ПроведениеПоРазделу63(Отказ, Заголовок)
	
	Если НЕ мВестиУчетПоВидамДеятельностиПредпринимателя Тогда
		СтруктураПроверяемыхРеквизитов = Новый Структура("ВидДвижения, ВидРасхода, РасчетныйДокумент, Сумма");
	Иначе
		СтруктураПроверяемыхРеквизитов = Новый Структура("ВидДвижения, ВидРасхода, НоменклатурнаяГруппа, ХарактерДеятельности, РасчетныйДокумент, Сумма");
	КонецЕсли;
	ЗаполнениеДокументов.ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, "Таблица63", СтруктураПроверяемыхРеквизитов,Отказ, Заголовок);
	Если НЕ Отказ Тогда
		ТаблицаРаздела63 = ПодготовитьТаблицуРаздела63(Отказ, Заголовок);
		СформироватьДвиженияПоРазделу(ТаблицаРаздела63, "ИПРБП", Отказ, Заголовок);
	КонецЕсли;
	
КонецПроцедуры

Функция ПодготовитьТаблицуРаздела63(Отказ, Заголовок)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ВидДвижения = ИСТИНА
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	КОНЕЦ КАК ВидДвижения,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ВидРасхода,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.НоменклатурнаяГруппа,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ХарактерДеятельности,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.РасчетныйДокумент,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ДокументОплаты,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Сумма,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.НДС,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Ссылка.Организация,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Ссылка.Дата КАК Период
	|ИЗ
	|	Документ.ЗаписьКнигиУчетаДоходовИРасходовИП.Таблица63 КАК ЗаписьКнигиУчетаДоходовИРасходовИПТЧ
	|ГДЕ
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Ссылка = &Ссылка";
	
	Результат = Запрос.Выполнить().Выгрузить();
	Возврат Результат;
	
КонецФункции

//Формирование данных для таблицы Прочие доходы
//
Процедура ПроведениеПоПрочимДоходам(Отказ, Заголовок)
	
	Если НЕ мВестиУчетПоВидамДеятельностиПредпринимателя Тогда
		СтруктураПроверяемыхРеквизитов = Новый Структура("СтатьяДоходов, Сумма");
	Иначе
		СтруктураПроверяемыхРеквизитов = Новый Структура("СтатьяДоходов, НоменклатурнаяГруппа, ХарактерДеятельности, Сумма");
	КонецЕсли;
	ЗаполнениеДокументов.ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, "Таблица61", СтруктураПроверяемыхРеквизитов,Отказ, Заголовок);
	Если НЕ Отказ Тогда
		ТаблицаПрочихДоходов = ПодготовитьТаблицуПрочихДоходов(Отказ, Заголовок);
		СформироватьДвиженияПоРазделу(ТаблицаПрочихДоходов, "ИППрочиеДоходы", Отказ, Заголовок);
	КонецЕсли;
	
КонецПроцедуры

Функция ПодготовитьТаблицуПрочихДоходов(Отказ, Заголовок)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Ссылка.Дата КАК Период,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Ссылка.Организация КАК Организация,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.СтатьяДоходов,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.ХарактерДеятельности КАК ХарактерДеятельности,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Сумма КАК Сумма,
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.РеквизитыДокументаОплаты КАК РеквизитыДокументаОплаты
	|ИЗ
	|	Документ.ЗаписьКнигиУчетаДоходовИРасходовИП.Таблица61 КАК ЗаписьКнигиУчетаДоходовИРасходовИПТЧ
	|ГДЕ
	|	ЗаписьКнигиУчетаДоходовИРасходовИПТЧ.Ссылка = &Ссылка";
	
	Результат = Запрос.Выполнить().Выгрузить();
	Возврат Результат;
	
КонецФункции

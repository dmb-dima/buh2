
////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

// Проверяет правильность заполнения документа
//
Процедура ПроверитьПравильностьЗаполненияДокумента(ЕстьОшибки, СообщатьОбУспехе = Истина, ВыборкаПоШапкеДокумента = Неопределено, ВыборкаПоСтрокамДокумента = Неопределено) Экспорт
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок =  "Проверка документа " + СокрЛП(Ссылка);
	
	Если ВыборкаПоШапкеДокумента = Неопределено Тогда
		ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапке().Выбрать();
		ВыборкаПоШапкеДокумента.Следующий();
	КонецЕсли;
	Если ВыборкаПоСтрокамДокумента = Неопределено Тогда
		РезультатЗапросаПоТЧ = СформироватьЗапросПоСотрудникиОрганизации(ВыборкаПоШапкеДокумента);
		ВыборкаПоСтрокамДокумента = РезультатЗапросаПоТЧ.Выбрать();
	Иначе	
		ВыборкаПоСтрокамДокумента.Сбросить();
	КонецЕсли;
	
	Отказ = Ложь;
	КоличествоДокументов = ВыборкаПоШапкеДокумента.Количество;
	Если КоличествоДокументов = 0 Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Список застрахованных лиц пуст!", Отказ, Заголовок);
	КонецЕсли;
	Если КоличествоДокументов > 200 Тогда
		ОбщегоНазначения.СообщитьОбОшибке("В документе должно быть не более 200 форм!", Отказ, Заголовок);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Организация) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Не указана организация!"), Отказ, Заголовок);
	ИначеЕсли СтрДлина(СокрЛП(ВыборкаПоШапкеДокумента.ОрганизацияРегистрационныйНомерПФР)) <> 14 Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Предупреждение: Регистрационный номер организации в ПФР скорее всего неправильный",,Заголовок);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ОтчетныйПериод) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указан отчетный период!", Отказ, Заголовок);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.КатегорияЗастрахованныхЛиц) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указана категория застрахованных лиц!", Отказ, Заголовок);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ТипДоговора) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указан тип договора!", Отказ, Заголовок);
	КонецЕсли;
	
	Пока ВыборкаПоСтрокамДокумента.СледующийПоЗначениюПоля("НомерСтроки") цикл
		
	   	СтрокаНачалаСообщенияОбОшибке = "В строке номер "+ СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки);
		
		Если Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ФизЛицо) Тогда
			ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + ": Не выбран сотрудник!", Отказ, Заголовок);
		Иначе
			СтрокаНачалаСообщенияОбОшибке = СтрокаНачалаСообщенияОбОшибке + " по сотруднику " + ВыборкаПоСтрокамДокумента.ФизЛицоНаименование + ": ";
			
			Если Не ВыборкаПоСтрокамДокумента.ФизЛицоРаботаетВОрганизации тогда
				ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- не зарегистрирован(а) как сотрудник организации " + ВыборкаПоШапкеДокумента.ОрганизацияНаименование, Отказ, Заголовок);
			КонецЕсли;
			
			СтраховойНомерПФР = ВыборкаПоСтрокамДокумента.СтраховойНомерПФР;
			Если Не ЗначениеЗаполнено(СтраховойНомерПФР) Тогда
				ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- Не задан страховой номер!", Отказ, Заголовок);
			ИначеЕсли Не РегламентированнаяОтчетность.СтраховойНомерПФРСоответствуетТребованиям(СтраховойНомерПФР) тогда
				ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- Задан неверный страховой номер!", Отказ, Заголовок);
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Фамилия) Тогда
				ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- Не задана фамилия!", Отказ, Заголовок);
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Имя) Тогда
				ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- Не задано имя!", Отказ, Заголовок);
			КонецЕсли;
			
			//Контроль дубля строк
			Если ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.НомерПовторяющейсяСтроки) Тогда
				ОбщегоНазначения.СообщитьОбОшибке("Строка №" + ВыборкаПоСтрокамДокумента.НомерПовторяющейсяСтроки + ": Сотрудник " + ВыборкаПоСтрокамДокумента.ФизЛицоНаименование + " указан в документе дважды!", Отказ, Заголовок);
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ВсегоЗаработка) Тогда
				ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- У сотрудника отсутствуют данные о заработке!", Отказ, Заголовок);
			Иначе
				Если ВыборкаПоСтрокамДокумента.НаименьшийМесяц < 1 Тогда
					ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- Неверно указан один из месяцев - меньше 1!", Отказ, Заголовок);
				КонецЕсли;
				Если ВыборкаПоСтрокамДокумента.МинимальныйЗаработок < 0 Тогда
					ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- За один или несколько месяцев указан отрицательный заработок!", Отказ, Заголовок);
				КонецЕсли;
				Если ВыборкаПоСтрокамДокумента.МинимальныйОблагаетсяВзносами < 0 Тогда
					ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- За один или несколько месяцев указана отрицательная облагаемая сумма!", Отказ, Заголовок);
				КонецЕсли;
			КонецЕсли;
			Если ВыборкаПоСтрокамДокумента.НаибольшийМесяц > 12 Тогда
				ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- Неверно указан один из месяцев - превышает 12!", Отказ, Заголовок);
			КонецЕсли;
			Если ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ФизЛицоСДвойнымиМесяцами) Тогда
				ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- В данных о заработке один из месяцев повторяется несколько раз!", Отказ, Заголовок);
			КонецЕсли;
			Если ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ФизЛицоСНевернымиОблагаемымиСуммами) Тогда
				ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- В данных о заработке сумма, облагаемая взносами, превышает сумму начисленного заработка!", Отказ, Заголовок);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если Отказ тогда
		ЕстьОшибки = Истина;
	КонецЕсли;	 
	
	Если СообщатьОбУспехе И Не ЕстьОшибки Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Ошибок не обнаружено.",,, СтатусСообщения.Обычное);		
	КонецЕсли;
	
КонецПроцедуры // ПроверитьПравильностьЗаполненияДокумента()
	
Процедура РассчитатьЗаработок(СтрокаТабличнойЧасти = Неопределено, ГоловнаяОрганизация = Неопределено) Экспорт
	
	МассивВидовДохода = Новый Массив;
	Если СтрокаТабличнойЧасти <> Неопределено Тогда
		МассивФизлиц = Новый Массив;
		МассивФизлиц.Добавить(СтрокаТабличнойЧасти.Физлицо);
	Иначе
		МассивФизлиц = СотрудникиОрганизации.ВыгрузитьКолонку("Физлицо");
	КонецЕсли;
	Если ГоловнаяОрганизация = Неопределено Тогда
		ГоловнаяОрганизация = ОбщегоНазначения.ГоловнаяОрганизация(Организация)
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ФизЛица", МассивФизлиц);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("ОбособленноеПодразделение", Организация);
	Запрос.УстановитьПараметр("Начало", Дата(ОтчетныйПериод, 1, 1));
	Запрос.УстановитьПараметр("Окончание", КонецГода(Дата(ОтчетныйПериод, 1, 1)));
	Запрос.УстановитьПараметр("КатегорияЗастрахованныхЛиц", КатегорияЗастрахованныхЛиц);
	
	Если ОтчетныйПериод < Год(ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами()) Тогда
		Если ТипДоговора = Перечисления.ТипДоговораСЗВ63.ГражданскоПравовой Тогда
			МассивВидовДохода.Добавить(Справочники.ДоходыЕСН.ДоговораАвторские);
			МассивВидовДохода.Добавить(Справочники.ДоходыЕСН.ДоговораГПХ);
		Иначе
			МассивВидовДохода.Добавить(Справочники.ДоходыЕСН.ПособияЗаСчетФСС);
			МассивВидовДохода.Добавить(Справочники.ДоходыЕСН.ДенежноеДовольствиеВоеннослужащих);
			МассивВидовДохода.Добавить(Справочники.ДоходыЕСН.ДенежноеСодержаниеПрокуроров);
			МассивВидовДохода.Добавить(Справочники.ДоходыЕСН.НеОблагаетсяЦеликом);
			МассивВидовДохода.Добавить(Справочники.ДоходыЕСН.ОблагаетсяЦеликом);
			МассивВидовДохода.Добавить(Справочники.ДоходыЕСН.МатпомощьПриРожденииРебенка);
			МассивВидовДохода.Добавить(Справочники.ДоходыЕСН.Матпомощь);
			МассивВидовДохода.Добавить(Справочники.ДоходыЕСН.ВыплатыЗаСчетПрибыли);
		КонецЕсли;
		Запрос.УстановитьПараметр("ВидыДохода", МассивВидовДохода);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СведенияОДоходах.ФизЛицо,
		|	СведенияОДоходах.КодДоходаЕСН КАК ВидДохода,
		|	СведенияОДоходах.Результат,
		|	СведенияОДоходах.Скидка,
		|	МЕСЯЦ(СведенияОДоходах.Период) КАК Месяц
		|ПОМЕСТИТЬ ВТДоходы
		|ИЗ
		|	РегистрНакопления.ЕСНСведенияОДоходах КАК СведенияОДоходах
		|ГДЕ
		|	СведенияОДоходах.Период МЕЖДУ &Начало И &Окончание
		|	И СведенияОДоходах.КодДоходаЕСН В(&ВидыДохода)
		|	И СведенияОДоходах.ФизЛицо В(&ФизЛица)
		|	И СведенияОДоходах.Организация = &ГоловнаяОрганизация
		|	И СведенияОДоходах.ОбособленноеПодразделение = &ОбособленноеПодразделение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Доходы.ФизЛицо КАК ФизЛицо,
		|	Доходы.Месяц КАК Месяц,
		|	СУММА(Доходы.Результат) КАК Заработок,
		|	СУММА(ВЫБОР
		|			КОГДА Доходы.ВидДохода.ВходитВБазуФедеральныйБюджет
		|				ТОГДА Доходы.Результат - Доходы.Скидка
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ОблагаетсяВзносами
		|ИЗ
		|	ВТДоходы КАК Доходы
		|
		|СГРУППИРОВАТЬ ПО
		|	Доходы.ФизЛицо,
		|	Доходы.Месяц
		|
		|УПОРЯДОЧИТЬ ПО
		|	ФизЛицо,
		|	Месяц";
	Иначе
		ПроцедурыПерсонифицированногоУчета.ПоместитьВМенеджерСоответствиеТарифаКатегории(Запрос.МенеджерВременныхТаблиц);
		
		МассивВидовДохода.Добавить(Справочники.ДоходыПоСтраховымВзносам.ПособияЗаСчетФСС);
		МассивВидовДохода.Добавить(Справочники.ДоходыПоСтраховымВзносам.ДенежноеДовольствиеВоеннослужащих);
		МассивВидовДохода.Добавить(Справочники.ДоходыПоСтраховымВзносам.ДенежноеСодержаниеПрокуроров);
		МассивВидовДохода.Добавить(Справочники.ДоходыПоСтраховымВзносам.ДоходыСтудентовЗаРаботуВСтудотрядеПоТрудовомуДоговору);
		МассивВидовДохода.Добавить(Справочники.ДоходыПоСтраховымВзносам.НеОблагаетсяЦеликом);
		МассивВидовДохода.Добавить(Справочники.ДоходыПоСтраховымВзносам.ОблагаетсяЦеликом);
		МассивВидовДохода.Добавить(Справочники.ДоходыПоСтраховымВзносам.МатпомощьПриРожденииРебенка);
		МассивВидовДохода.Добавить(Справочники.ДоходыПоСтраховымВзносам.Матпомощь);
		Запрос.УстановитьПараметр("ВидыДохода", МассивВидовДохода);
		Запрос.УстановитьПараметр("ТипДоговора", ТипДоговора);
		Запрос.УстановитьПараметр("ДатаНовойРедакцииЗакона212", ПроведениеРасчетов.ДатаРасширенияПеречняЛьготныхТарифовСтраховыхВзносов());
		
		ДтНачМесяца = Дата(ОтчетныйПериод, 1, 1);
		ТекстПериодов = 
		"ВЫБРАТЬ
		|	&Начало КАК Период
		|ПОМЕСТИТЬ ВТПериоды";
		ДтНачМесяца = ДобавитьМесяц(ДтНачМесяца, 1);
		Пока ДтНачМесяца <= КонецГода(Дата(ОтчетныйПериод, 1, 1)) Цикл
			ТекстПериодов =  ТекстПериодов + 
			"
			|ОБЪЕДИНИТЬ
			|
			|ВЫБРАТЬ
			|	ДАТАВРЕМЯ("+Формат(ДтНачМесяца, "ДФ=yyyy")+", "+Месяц(ДтНачМесяца)+", 1) КАК Период
			|";
			ДтНачМесяца = ДобавитьМесяц(ДтНачМесяца, 1);
		КонецЦИкла;
		Запрос.Текст = ТекстПериодов;
		Запрос.Выполнить();
		ОсновнойТекст = 
		"ВЫБРАТЬ
		|	ПредельнаяВеличинаБазыСтраховыхВзносовСрезПоследних.Размер КАК Размер
		|ПОМЕСТИТЬ ВТПредельнаяВеличина
		|ИЗ
		|	РегистрСведений.ПредельнаяВеличинаБазыСтраховыхВзносов.СрезПоследних(&Окончание, ) КАК ПредельнаяВеличинаБазыСтраховыхВзносовСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Периоды.Период КАК Период,
		|	ЕСТЬNULL(УчетнаяПолитикаНалоговыйУчет.ВидТарифаСтраховыхВзносов, ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОбщийНалоговыйРежим)) КАК ВидТарифаСтраховыхВзносов
		|ПОМЕСТИТЬ ВТТарифыОрганизации
		|ИЗ
		|	(ВЫБРАТЬ
		|		Периоды.Период КАК Период,
		|		УчетнаяПолитикаНалоговыйУчет.Организация КАК Организация,
		|		МАКСИМУМ(УчетнаяПолитикаНалоговыйУчет.Период) КАК ПериодРегистра
		|	ИЗ
		|		ВТПериоды КАК Периоды
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНалоговыйУчет
		|			ПО Периоды.Период >= УчетнаяПолитикаНалоговыйУчет.Период
		|				И (УчетнаяПолитикаНалоговыйУчет.Организация = &ГоловнаяОрганизация)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Периоды.Период,
		|		УчетнаяПолитикаНалоговыйУчет.Организация) КАК Периоды
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНалоговыйУчет
		|		ПО Периоды.ПериодРегистра = УчетнаяПолитикаНалоговыйУчет.Период
		|			И Периоды.Организация = УчетнаяПолитикаНалоговыйУчет.Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СрезПоследнихДат.ПериодРегистрации КАК ПериодРегистрации,
		|	СрезПоследнихДат.Физлицо КАК Физлицо,
		|	СведенияОбИнвалидностиФизлиц.Инвалидность
		|ПОМЕСТИТЬ ВТИнвалиды
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВТПериоды.Период КАК ПериодРегистрации,
		|		СведенияОбИнвалидностиФизлиц.Физлицо КАК Физлицо,
		|		МАКСИМУМ(СведенияОбИнвалидностиФизлиц.Период) КАК Период
		|	ИЗ
		|		ВТПериоды КАК ВТПериоды
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК СведенияОбИнвалидностиФизлиц
		|			ПО (КОНЕЦПЕРИОДА(ВТПериоды.Период, МЕСЯЦ) >= СведенияОбИнвалидностиФизлиц.Период)
		|	ГДЕ
		|		СведенияОбИнвалидностиФизлиц.Физлицо В(&ФизЛица)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		СведенияОбИнвалидностиФизлиц.Физлицо,
		|		ВТПериоды.Период) КАК СрезПоследнихДат
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК СведенияОбИнвалидностиФизлиц
		|		ПО СрезПоследнихДат.Период = СведенияОбИнвалидностиФизлиц.Период
		|			И СрезПоследнихДат.Физлицо = СведенияОбИнвалидностиФизлиц.Физлицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СрезПоследнихДат.ПериодРегистрации КАК ПериодРегистрации,
		|	СрезПоследнихДат.Физлицо КАК Физлицо,
		|	ГражданствоФизЛиц.НеИмеетПравоНаПенсию
		|ПОМЕСТИТЬ ВТГражданство
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВТПериоды.Период КАК ПериодРегистрации,
		|		ГражданствоФизЛиц.ФизЛицо КАК Физлицо,
		|		МАКСИМУМ(ГражданствоФизЛиц.Период) КАК Период
		|	ИЗ
		|		ВТПериоды КАК ВТПериоды
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
		|			ПО (КОНЕЦПЕРИОДА(ВТПериоды.Период, МЕСЯЦ) >= ГражданствоФизЛиц.Период)
		|	ГДЕ
		|		ГражданствоФизЛиц.ФизЛицо В(&ФизЛица)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ГражданствоФизЛиц.ФизЛицо,
		|		ВТПериоды.Период) КАК СрезПоследнихДат
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
		|		ПО СрезПоследнихДат.Период = ГражданствоФизЛиц.Период
		|			И СрезПоследнихДат.Физлицо = ГражданствоФизЛиц.ФизЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтраховыеВзносыСведенияОДоходах.ФизЛицо КАК ФизЛицо,
		|	СтраховыеВзносыСведенияОДоходах.Организация,
		|	СтраховыеВзносыСведенияОДоходах.ВидДохода,
		|	СтраховыеВзносыСведенияОДоходах.ОбособленноеПодразделение,
		|	ВЫБОР
		|		КОГДА СтраховыеВзносыСведенияОДоходах.Период < &ДатаНовойРедакцииЗакона212
		|			ТОГДА СтраховыеВзносыСведенияОДоходах.ОблагаетсяЕНВД
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ОблагаетсяЕНВД,
		|	СтраховыеВзносыСведенияОДоходах.Период КАК Период,
		|	СУММА(СтраховыеВзносыСведенияОДоходах.РезультатОборот) КАК РезультатОборот,
		|	СУММА(СтраховыеВзносыСведенияОДоходах.СкидкаОборот) КАК СкидкаОборот
		|ПОМЕСТИТЬ ВТСведенияОДоходах
		|ИЗ
		|	РегистрНакопления.СтраховыеВзносыСведенияОДоходах.Обороты(
		|			&Начало,
		|			&Окончание,
		|			МЕСЯЦ,
		|			ФизЛицо В (&ФизЛица)
		|				И ВидДохода <> ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.НеЯвляетсяОбъектом)
		|				И Организация = &ГоловнаяОрганизация) КАК СтраховыеВзносыСведенияОДоходах
		|
		|СГРУППИРОВАТЬ ПО
		|	СтраховыеВзносыСведенияОДоходах.ФизЛицо,
		|	СтраховыеВзносыСведенияОДоходах.Организация,
		|	СтраховыеВзносыСведенияОДоходах.ВидДохода,
		|	СтраховыеВзносыСведенияОДоходах.ОбособленноеПодразделение,
		|	СтраховыеВзносыСведенияОДоходах.Период,
		|	ВЫБОР
		|		КОГДА СтраховыеВзносыСведенияОДоходах.Период < &ДатаНовойРедакцииЗакона212
		|			ТОГДА СтраховыеВзносыСведенияОДоходах.ОблагаетсяЕНВД
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтраховыеВзносыСведенияОДоходах.ФизЛицо КАК ФизЛицо,
		|	НАЧАЛОПЕРИОДА(СтраховыеВзносыСведенияОДоходах.Период, МЕСЯЦ) КАК ПериодРегистрации,
		|	СтраховыеВзносыСведенияОДоходах.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
		|	ВЫБОР
		|		КОГДА СтраховыеВзносыСведенияОДоходах.ВидДохода В (&ВидыДохода)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипДоговораСЗВ63.Трудовой)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипДоговораСЗВ63.ГражданскоПравовой)
		|	КОНЕЦ КАК ТипДоговора,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(Инвалиды.Инвалидность, ЛОЖЬ)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
		|		КОГДА СтраховыеВзносыСведенияОДоходах.ОблагаетсяЕНВД
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
		|		ИНАЧЕ ВидыТарифныхСтавок.ВидТарифаСтраховыхВзносов
		|	КОНЕЦ КАК ВидТарифаСтраховыхВзносов,
		|	СтраховыеВзносыСведенияОДоходах.РезультатОборот КАК Результат,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(Гражданство.НеИмеетПравоНаПенсию, ЛОЖЬ)
		|			ТОГДА 0
		|		КОГДА СтраховыеВзносыСведенияОДоходах.ВидДохода.ВходитВБазуПФР
		|			ТОГДА СтраховыеВзносыСведенияОДоходах.РезультатОборот - СтраховыеВзносыСведенияОДоходах.СкидкаОборот
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ОблагаемаяБазаПФР
		|ПОМЕСТИТЬ ВТДоходыПоТарифам
		|ИЗ
		|	ВТСведенияОДоходах КАК СтраховыеВзносыСведенияОДоходах
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИнвалиды КАК Инвалиды
		|		ПО СтраховыеВзносыСведенияОДоходах.Период = Инвалиды.ПериодРегистрации
		|			И СтраховыеВзносыСведенияОДоходах.ФизЛицо = Инвалиды.Физлицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТГражданство КАК Гражданство
		|		ПО СтраховыеВзносыСведенияОДоходах.Период = Гражданство.ПериодРегистрации
		|			И СтраховыеВзносыСведенияОДоходах.ФизЛицо = Гражданство.Физлицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТТарифыОрганизации КАК ВидыТарифныхСтавок
		|		ПО СтраховыеВзносыСведенияОДоходах.Период = ВидыТарифныхСтавок.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СведенияОДоходах.ФизЛицо КАК ФизЛицо,
		|	НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ) КАК Период,
		|	СУММА(СведенияОДоходах.ОблагаемаяБазаПФР) КАК ЗаГод,
		|	СУММА(ВЫБОР
		|			КОГДА НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ) = СведенияОДоходах.ПериодРегистрации
		|				ТОГДА СведенияОДоходах.ОблагаемаяБазаПФР
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ЗаМесяц
		|ПОМЕСТИТЬ ВТБазаНарастающимИтогом
		|ИЗ
		|	ВТПериоды КАК Периоды
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыПоТарифам КАК СведенияОДоходах
		|		ПО (СведенияОДоходах.ПериодРегистрации МЕЖДУ НАЧАЛОПЕРИОДА(Периоды.Период, ГОД) И Периоды.Период)
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходах.ФизЛицо,
		|	Периоды.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОблагаемаяБаза.ФизЛицо КАК ФизЛицо,
		|	ОблагаемаяБаза.Период КАК Период,
		|	ВЫБОР
		|		КОГДА ОблагаемаяБаза.ЗаГод - Предел.Размер >= 0
		|			ТОГДА ОблагаемаяБаза.ЗаГод - Предел.Размер
		|		ИНАЧЕ 0
		|	КОНЕЦ - ВЫБОР
		|		КОГДА ЕСТЬNULL(ОблагаемаяБазаПрошлогоМесяца.ЗаГод, 0) - Предел.Размер >= 0
		|			ТОГДА ЕСТЬNULL(ОблагаемаяБазаПрошлогоМесяца.ЗаГод, 0) - Предел.Размер
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаПревысившаяПредел
		|ПОМЕСТИТЬ ВТБазаПревышенияДохода
		|ИЗ
		|	ВТБазаНарастающимИтогом КАК ОблагаемаяБаза
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПредельнаяВеличина КАК Предел
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБазаНарастающимИтогом КАК ОблагаемаяБазаПрошлогоМесяца
		|		ПО ОблагаемаяБаза.ФизЛицо = ОблагаемаяБазаПрошлогоМесяца.ФизЛицо
		|			И (ОблагаемаяБаза.Период = ДОБАВИТЬКДАТЕ(ОблагаемаяБазаПрошлогоМесяца.Период, МЕСЯЦ, 1))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СведенияОДоходах.ФизЛицо КАК ФизЛицо,
		|	СведенияОДоходах.ПериодРегистрации КАК Период,
		|	СведенияОДоходах.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
		|	СведенияОДоходах.ВидТарифаСтраховыхВзносов,
		|	СведенияОДоходах.ТипДоговора,
		|	СУММА(СведенияОДоходах.ОблагаемаяБазаПФР) КАК ЗаМесяц
		|ПОМЕСТИТЬ ВТБазаЗаМесяцПоОбособленноеПодразделение
		|ИЗ
		|	ВТДоходыПоТарифам КАК СведенияОДоходах
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходах.ФизЛицо,
		|	СведенияОДоходах.ОбособленноеПодразделение,
		|	СведенияОДоходах.ПериодРегистрации,
		|	СведенияОДоходах.ВидТарифаСтраховыхВзносов,
		|	СведенияОДоходах.ТипДоговора
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СведенияОДоходах.ФизЛицо КАК ФизЛицо,
		|	СведенияОДоходах.Период КАК Период,
		|	МАКСИМУМ(СведенияОДоходах.ЗаМесяц) КАК ЗаМесяц
		|ПОМЕСТИТЬ ВТМаксБазаЗаМесяц
		|ИЗ
		|	ВТБазаЗаМесяцПоОбособленноеПодразделение КАК СведенияОДоходах
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходах.ФизЛицо,
		|	СведенияОДоходах.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СведенияОДоходах.ФизЛицо КАК ФизЛицо,
		|	СведенияОДоходах.Период КАК Период,
		|	СведенияОДоходах.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
		|	СведенияОДоходах.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов,
		|	МАКСИМУМ(БазаЗаМесяцПоОбособленным.ТипДоговора) КАК ТипДоговора
		|ПОМЕСТИТЬ ВТОбособленноеПодразделениеМаксБазы
		|ИЗ
		|	(ВЫБРАТЬ
		|		СведенияОДоходах.ФизЛицо КАК ФизЛицо,
		|		СведенияОДоходах.Период КАК Период,
		|		СведенияОДоходах.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
		|		МАКСИМУМ(БазаЗаМесяцПоОбособленным.ВидТарифаСтраховыхВзносов) КАК ВидТарифаСтраховыхВзносов,
		|		БазаЗаМесяцПоОбособленным.ЗаМесяц КАК ЗаМесяц
		|	ИЗ
		|		(ВЫБРАТЬ
		|			СведенияОДоходах.ФизЛицо КАК ФизЛицо,
		|			СведенияОДоходах.Период КАК Период,
		|			СведенияОДоходах.ЗаМесяц КАК ЗаМесяц,
		|			МАКСИМУМ(БазаЗаМесяцПоОбособленным.ОбособленноеПодразделение) КАК ОбособленноеПодразделение
		|		ИЗ
		|			ВТМаксБазаЗаМесяц КАК СведенияОДоходах
		|				ЛЕВОЕ СОЕДИНЕНИЕ ВТБазаЗаМесяцПоОбособленноеПодразделение КАК БазаЗаМесяцПоОбособленным
		|				ПО СведенияОДоходах.ФизЛицо = БазаЗаМесяцПоОбособленным.ФизЛицо
		|					И СведенияОДоходах.Период = БазаЗаМесяцПоОбособленным.Период
		|					И СведенияОДоходах.ЗаМесяц = БазаЗаМесяцПоОбособленным.ЗаМесяц
		|		
		|		СГРУППИРОВАТЬ ПО
		|			СведенияОДоходах.ФизЛицо,
		|			СведенияОДоходах.Период,
		|			СведенияОДоходах.ЗаМесяц) КАК СведенияОДоходах
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТБазаЗаМесяцПоОбособленноеПодразделение КАК БазаЗаМесяцПоОбособленным
		|			ПО СведенияОДоходах.ФизЛицо = БазаЗаМесяцПоОбособленным.ФизЛицо
		|				И СведенияОДоходах.Период = БазаЗаМесяцПоОбособленным.Период
		|				И СведенияОДоходах.ЗаМесяц = БазаЗаМесяцПоОбособленным.ЗаМесяц
		|				И СведенияОДоходах.ОбособленноеПодразделение = БазаЗаМесяцПоОбособленным.ОбособленноеПодразделение
		|	
		|	СГРУППИРОВАТЬ ПО
		|		СведенияОДоходах.ФизЛицо,
		|		СведенияОДоходах.Период,
		|		СведенияОДоходах.ОбособленноеПодразделение,
		|		БазаЗаМесяцПоОбособленным.ЗаМесяц) КАК СведенияОДоходах
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБазаЗаМесяцПоОбособленноеПодразделение КАК БазаЗаМесяцПоОбособленным
		|		ПО СведенияОДоходах.ФизЛицо = БазаЗаМесяцПоОбособленным.ФизЛицо
		|			И СведенияОДоходах.Период = БазаЗаМесяцПоОбособленным.Период
		|			И СведенияОДоходах.ЗаМесяц = БазаЗаМесяцПоОбособленным.ЗаМесяц
		|			И СведенияОДоходах.ОбособленноеПодразделение = БазаЗаМесяцПоОбособленным.ОбособленноеПодразделение
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходах.ФизЛицо,
		|	СведенияОДоходах.Период,
		|	СведенияОДоходах.ОбособленноеПодразделение,
		|	СведенияОДоходах.ВидТарифаСтраховыхВзносов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОблагаемаяБаза.ФизЛицо КАК ФизЛицо,
		|	ОблагаемаяБаза.Период КАК Период,
		|	ВЫБОР
		|		КОГДА ПревышениеДоходаПоВсемОП.СуммаПревысившаяПредел = 0
		|				ИЛИ ОблагаемаяБаза.ЗаМесяц = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВЫРАЗИТЬ((ВЫРАЗИТЬ(ПревышениеДоходаПоВсемОП.СуммаПревысившаяПредел КАК ЧИСЛО(25, 10))) * (ВЫРАЗИТЬ(БазаЗаМесяцПоОбособленным.ЗаМесяц КАК ЧИСЛО(25, 10))) / (ВЫРАЗИТЬ(ОблагаемаяБаза.ЗаМесяц КАК ЧИСЛО(25, 10))) КАК ЧИСЛО(15, 2))
		|	КОНЕЦ КАК СуммаПревысившаяПредел,
		|	БазаЗаМесяцПоОбособленным.ОбособленноеПодразделение,
		|	БазаЗаМесяцПоОбособленным.ВидТарифаСтраховыхВзносов,
		|	БазаЗаМесяцПоОбособленным.ТипДоговора
		|ПОМЕСТИТЬ ВТПревышениеДоходаПоОбособленноеПодразделение
		|ИЗ
		|	ВТБазаНарастающимИтогом КАК ОблагаемаяБаза
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБазаПревышенияДохода КАК ПревышениеДоходаПоВсемОП
		|		ПО ОблагаемаяБаза.ФизЛицо = ПревышениеДоходаПоВсемОП.ФизЛицо
		|			И ОблагаемаяБаза.Период = ПревышениеДоходаПоВсемОП.Период
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБазаЗаМесяцПоОбособленноеПодразделение КАК БазаЗаМесяцПоОбособленным
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТОбособленноеПодразделениеМаксБазы КАК ОбособленноеПодразделениеДляОкругления
		|			ПО БазаЗаМесяцПоОбособленным.ФизЛицо = ОбособленноеПодразделениеДляОкругления.ФизЛицо
		|				И БазаЗаМесяцПоОбособленным.Период = ОбособленноеПодразделениеДляОкругления.Период
		|				И БазаЗаМесяцПоОбособленным.ОбособленноеПодразделение = ОбособленноеПодразделениеДляОкругления.ОбособленноеПодразделение
		|				И БазаЗаМесяцПоОбособленным.ВидТарифаСтраховыхВзносов = ОбособленноеПодразделениеДляОкругления.ВидТарифаСтраховыхВзносов
		|				И БазаЗаМесяцПоОбособленным.ТипДоговора = ОбособленноеПодразделениеДляОкругления.ТипДоговора
		|		ПО ОблагаемаяБаза.Период = БазаЗаМесяцПоОбособленным.Период
		|			И ОблагаемаяБаза.ФизЛицо = БазаЗаМесяцПоОбособленным.ФизЛицо
		|ГДЕ
		|	ОбособленноеПодразделениеДляОкругления.ОбособленноеПодразделение ЕСТЬ NULL 
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Превышение.ФизЛицо КАК ФизЛицо,
		|	Превышение.Период КАК Период,
		|	Превышение.СуммаПревысившаяПредел,
		|	Превышение.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов,
		|	Превышение.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
		|	Превышение.ТипДоговора
		|ПОМЕСТИТЬ ВТПревышениеДохода
		|ИЗ
		|	ВТПревышениеДоходаПоОбособленноеПодразделение КАК Превышение
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Превышение.ФизЛицо,
		|	Превышение.Период,
		|	СУММА(Превышение.СуммаПревысившаяПредел),
		|	ОбособленноеПодразделениеДляОкругления.ВидТарифаСтраховыхВзносов,
		|	ОбособленноеПодразделениеДляОкругления.ОбособленноеПодразделение,
		|	ОбособленноеПодразделениеДляОкругления.ТипДоговора
		|ИЗ
		|	(ВЫБРАТЬ
		|		Превышение.ФизЛицо КАК ФизЛицо,
		|		Превышение.Период КАК Период,
		|		-Превышение.СуммаПревысившаяПредел КАК СуммаПревысившаяПредел
		|	ИЗ
		|		ВТПревышениеДоходаПоОбособленноеПодразделение КАК Превышение
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Превышение.ФизЛицо,
		|		Превышение.Период,
		|		Превышение.СуммаПревысившаяПредел
		|	ИЗ
		|		ВТБазаПревышенияДохода КАК Превышение) КАК Превышение
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОбособленноеПодразделениеМаксБазы КАК ОбособленноеПодразделениеДляОкругления
		|		ПО Превышение.ФизЛицо = ОбособленноеПодразделениеДляОкругления.ФизЛицо
		|			И Превышение.Период = ОбособленноеПодразделениеДляОкругления.Период
		|
		|СГРУППИРОВАТЬ ПО
		|	Превышение.ФизЛицо,
		|	Превышение.Период,
		|	ОбособленноеПодразделениеДляОкругления.ВидТарифаСтраховыхВзносов,
		|	ОбособленноеПодразделениеДляОкругления.ОбособленноеПодразделение,
		|	ОбособленноеПодразделениеДляОкругления.ТипДоговора
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДоходыВзносов.ФизЛицо КАК ФизЛицо,
		|	ДоходыВзносов.ПериодРегистрации КАК Период,
		|	МЕСЯЦ(ДоходыВзносов.ПериодРегистрации) КАК Месяц,
		|	ДоходыВзносов.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов,
		|	ДоходыВзносов.ТипДоговора,
		|	СУММА(ДоходыВзносов.Результат) КАК НачисленоВсего,
		|	СУММА(ДоходыВзносов.ОблагаемаяБазаПФР) - МАКСИМУМ(ПревышениеДоходаПФР.СуммаПревысившаяПредел) КАК ОблагаемаяБазаПФР
		|ПОМЕСТИТЬ ВТДоходыПоТарифамДоговорам
		|ИЗ
		|	ВТДоходыПоТарифам КАК ДоходыВзносов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПревышениеДохода КАК ПревышениеДоходаПФР
		|		ПО ДоходыВзносов.ФизЛицо = ПревышениеДоходаПФР.ФизЛицо
		|			И ДоходыВзносов.ОбособленноеПодразделение = ПревышениеДоходаПФР.ОбособленноеПодразделение
		|			И ДоходыВзносов.ПериодРегистрации = ПревышениеДоходаПФР.Период
		|			И ДоходыВзносов.ВидТарифаСтраховыхВзносов = ПревышениеДоходаПФР.ВидТарифаСтраховыхВзносов
		|			И ДоходыВзносов.ТипДоговора = ПревышениеДоходаПФР.ТипДоговора
		|ГДЕ
		|	ДоходыВзносов.ОбособленноеПодразделение = &ОбособленноеПодразделение
		|	И ДоходыВзносов.ТипДоговора = &ТипДоговора
		|
		|СГРУППИРОВАТЬ ПО
		|	ДоходыВзносов.ФизЛицо,
		|	ДоходыВзносов.ВидТарифаСтраховыхВзносов,
		|	ДоходыВзносов.ТипДоговора,
		|	ДоходыВзносов.ПериодРегистрации
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Доходы.ФизЛицо КАК ФизЛицо,
		|	Доходы.Месяц КАК Месяц,
		|	СУММА(Доходы.НачисленоВсего) КАК Заработок,
		|	СУММА(Доходы.ОблагаемаяБазаПФР) КАК ОблагаетсяВзносами
		|ИЗ
		|	ВТДоходыПоТарифамДоговорам КАК Доходы
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСоответствиеТарифаКатегории КАК СоответствиеТарифаКатегории
		|		ПО Доходы.ВидТарифаСтраховыхВзносов = СоответствиеТарифаКатегории.ВидТарифаСтраховыхВзносов
		|			И (ГОД(Доходы.Период) МЕЖДУ СоответствиеТарифаКатегории.ГодС И СоответствиеТарифаКатегории.ГодПо)
		|ГДЕ
		|	СоответствиеТарифаКатегории.КатегорияЗастрахованныхЛиц = &КатегорияЗастрахованныхЛиц
		|
		|СГРУППИРОВАТЬ ПО
		|	Доходы.ФизЛицо,
		|	Доходы.Месяц
		|
		|УПОРЯДОЧИТЬ ПО
		|	ФизЛицо,
		|	Месяц";
		
		Запрос.Текст = СтрЗаменить(ОсновнойТекст,"РегистрСведений.УчетнаяПолитикаНалоговыйУчет", ЗаполнениеРегламентированнойОтчетностиПереопределяемый.ИмяУчетнойПолитики()); 	
		
	КонецЕсли;
	
	Если СтрокаТабличнойЧасти <> Неопределено Тогда
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(СведенияОЗаработке.Добавить(),Выборка);
		КонецЦикла;
	Иначе
		СведенияОЗаработке.Загрузить(Запрос.Выполнить().Выгрузить())
	КонецЕсли;
	
КонецПроцедуры // РассчитатьЗаработок()
	
// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	СтруктураМакетов = Новый Структура;
	
	СтруктураМакетов.Вставить("ФормаСЗВ", "Форма СЗВ-6-3");
	
	Возврат СтруктураМакетов;
	
КонецФункции // ПолучитьСтруктуруПечатныхФорм()

#Если Клиент Тогда

//Процедура вывода сведений на печать
Функция Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь, ОчищатьСообщения = Истина) Экспорт
	
	Если ИмяМакета = "ФормаСЗВ" Тогда
		
		Отказ = Ложь;
		
		
		ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапке().Выбрать();
		ВыборкаПоШапкеДокумента.Следующий();
		
		ВыборкаПоСтрокамДокумента = СформироватьЗапросПоСотрудникиОрганизации(ВыборкаПоШапкеДокумента).Выбрать();
		ПроверитьПравильностьЗаполненияДокумента(Отказ, Ложь, ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента);
		
		Заголовок = "Печать документа " + СокрЛП(ЭтотОбъект);
		
		// проверим данные руководителя
		Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Руководитель) Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Не указан руководитель!", , Заголовок);
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.РуководительДолжность) Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Не указана должность руководителя!", , Заголовок);
		КонецЕсли;
		
		
		Если Отказ Тогда
			Возврат Неопределено;
		КонецЕсли;	 
		
		ДокументОписи = Новый ТабличныйДокумент;
		ДокументОписи.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ОписьАДВ_6_4";
		ДокументОписи.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
		МакетОписи = ПолучитьМакет("ФормаАДВ_6_4");
		СекцияОпись = МакетОписи.ПолучитьОбласть("Опись");
		ЗаполнитьЗначенияСвойств(СекцияОпись.Параметры, ВыборкаПоШапкеДокумента);
		СекцияОпись.Параметры.КодКатегории = ОбщегоНазначения.ПолучитьИмяЭлементаПеречисленияПоЗначению(ВыборкаПоШапкеДокумента.КатегорияЗастрахованныхЛиц);
		ДокументОписи.Вывести(СекцияОпись);
		УниверсальныеМеханизмы.НапечататьДокумент(ДокументОписи, КоличествоЭкземпляров, НаПринтер,"Опись документов (АДВ-6-4); пачка №" + ВыборкаПоШапкеДокумента.НомерПачки);
		
		ТабДокумент = Новый ТабличныйДокумент;
		ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СЗВ6_6_3";
		ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
		Макет = ПолучитьМакет("ФормаСЗВ_6_3");
		ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка"); // Шапка документа.
		ОбластьМакетаСтрока = Макет.ПолучитьОбласть("Строка"); // строка работника
		ОбластьМакетаПустаяСтрока = Макет.ПолучитьОбласть("Строка"); // строка работника
		ОбластьМакетаПодвал = Макет.ПолучитьОбласть("Подвал");// Подвал документа
		
		ОбластьМакетаШапка.Параметры.Заполнить(ВыборкаПоШапкеДокумента); // Шапка документа.
		ОбластьМакетаШапка.Параметры.КодКатегории = ОбщегоНазначения.ПолучитьИмяЭлементаПеречисленияПоЗначению(ВыборкаПоШапкеДокумента.КатегорияЗастрахованныхЛиц);
		ОбластьМакетаПодвал.Параметры.Заполнить(ВыборкаПоШапкеДокумента); // Шапка документа.
		
		СоответствиеМесяцев = Новый Соответствие;
		Для Сч = 1 По 12 Цикл
			СоответствиеМесяцев.Вставить(Сч, Формат(Дата(ОтчетныйПериод, сч, 1),"ДФ=ММММ"))
		КонецЦикла; 
		
		ВыборкаПоСтрокамДокумента.Сбросить();
		Пока ВыборкаПоСтрокамДокумента.СледующийПоЗначениюПоля("НомерСтроки") Цикл
			
			Если ТабДокумент.ВысотаТаблицы > 0 Тогда
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ОбластьМакетаШапка.Параметры.Заполнить(ВыборкаПоСтрокамДокумента); // Шапка документа.
			ОбластьМакетаПодвал.Параметры.Заполнить(ВыборкаПоСтрокамДокумента); // Шапка документа.
		
			ТабДокумент.Вывести(ОбластьМакетаШапка);
			
			ПоследнийМесяц = 0;
			Пока ВыборкаПоСтрокамДокумента.СледующийПоЗначениюПоля("Месяц") Цикл
				Для Сч = ПоследнийМесяц + 1 По ВыборкаПоСтрокамДокумента.Месяц - 1 Цикл
					ОбластьМакетаПустаяСтрока.Параметры.Месяц = СоответствиеМесяцев[Сч];
					ТабДокумент.Вывести(ОбластьМакетаПустаяСтрока);
				КонецЦикла;
				ПоследнийМесяц = ВыборкаПоСтрокамДокумента.Месяц;
				ОбластьМакетаСтрока.Параметры.Заполнить(ВыборкаПоСтрокамДокумента); 
				ОбластьМакетаСтрока.Параметры.Месяц = СоответствиеМесяцев[ПоследнийМесяц];
				ОбластьМакетаСтрока.Параметры.Месяц = СоответствиеМесяцев[ПоследнийМесяц];
				ТабДокумент.Вывести(ОбластьМакетаСтрока);
			КонецЦикла;
			Для Сч = ПоследнийМесяц + 1 По 12 Цикл
				ОбластьМакетаПустаяСтрока.Параметры.Месяц = СоответствиеМесяцев[Сч];
				ТабДокумент.Вывести(ОбластьМакетаПустаяСтрока);
			КонецЦикла;
			
			ТабДокумент.Вывести(ОбластьМакетаПодвал);
		КонецЦикла;
		
		УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект,Метаданные().Синоним));
		Возврат "";
		
	КонецЕсли;
	
	Возврат Неопределено
	
КонецФункции // Печать()

#КонецЕсли

// Формирует файл, который можно будет записать на дискетку
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Строка - содержимое файла
//
Функция СформироватьВыходнойФайл(Отказ, ПроверятьДанные = Истина, ВыборкаПоШапкеДокумента = Неопределено, ВыборкаПоСтрокамДокумента = Неопределено) Экспорт
	
	// Заголовок для сообщений об ошибках 
	Заголовок = "Формирование файла по документу " + СокрЛП(ЭтотОбъект);
	
	//Проверка корректности заполнения документа
	Если ВыборкаПоШапкеДокумента = Неопределено Тогда
		ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапке().Выбрать();
		ВыборкаПоШапкеДокумента.Следующий();
	КонецЕсли;
	Если ВыборкаПоСтрокамДокумента = Неопределено Тогда
		РезультатЗапросаПоТЧ = СформироватьЗапросПоСотрудникиОрганизации(ВыборкаПоШапкеДокумента);
		ВыборкаПоСтрокамДокумента = РезультатЗапросаПоТЧ.Выбрать();
	Иначе	
		ВыборкаПоСтрокамДокумента.Сбросить();
	КонецЕсли;
	Если ПроверятьДанные Тогда
		ПроверитьПравильностьЗаполненияДокумента(Отказ, Ложь, ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента);
		ВыборкаПоСтрокамДокумента.Сбросить();
	КонецЕсли;
	
	Если Отказ тогда
		Возврат "";
	КонецЕсли;	 
	
	////////////////////////////////////////////////////////////////////////////////////////////
	//ФОРМИРУЕМ ФАЙЛ СВЕДЕНИЙ
	
	// Загружаем формат файла сведений
	МакетФормата = ПолучитьОбщийМакет("ФорматПФР70_2010");
	ТипДокументовПачки = "СВЕДЕНИЯ_О_СУММЕ_ВЫПЛАТ_И_ВОЗНАГРАЖДЕНИЙ";
	
	// Создаем начальное дерево
	ДеревоВыгрузки = ПроцедурыПерсонифицированногоУчета.СоздатьДеревоXML();
	УзелПФР = ПроцедурыПерсонифицированногоУчета.ДобавитьУзелВДеревоXML(ДеревоВыгрузки, "ФайлПФР", "", );
	ПроцедурыПерсонифицированногоУчета.ЗаполнитьИмяИЗаголовокФайла(УзелПФР, МакетФормата, ПроцедурыПерсонифицированногоУчета.ПолучитьИмяФайлаПФ(Ссылка, ВыборкаПоШапкеДокумента.ОтчетныйПериод, ВыборкаПоШапкеДокумента));
	// Добавляем ветки ПачкаВходящихДокументов и ВходящаяОпись
	ДанныеВходящейОписи = "";
	УзелПачкаВходящихДокументов = ПроцедурыПерсонифицированногоУчета.ЗаполнитьНаборЗаписейВходящаяОпись2010(УзелПФР, МакетФормата, ТипДокументовПачки, ВыборкаПоШапкеДокумента, ВыборкаПоШапкеДокумента.Количество, НомерПачки, 1, "ОПИСЬ_ВЫПЛАТ", ДанныеВходящейОписи, "ВХОДЯЩАЯ_ОПИСЬ_ПО_СУММАМ_ВЫПЛАТ");
	ФорматСЗВ6 = ПроцедурыПерсонифицированногоУчета.ЗагрузитьФорматНабораЗаписейдляПФР(МакетФормата, "СЗВ_6_3");
	ФорматСуммаВыплатИвознаграждений = ПроцедурыПерсонифицированногоУчета.ЗагрузитьФорматНабораЗаписейдляПФР(МакетФормата, "СуммаВыплатИтоговая");
	
	Если ВыборкаПоШапкеДокумента.ОрганизацияЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо Тогда
		ФорматСЗВ6.Удалить("КПП");
		ТаблицаПолей = ФорматСЗВ6.НалоговыйНомер.Поля;
		ТаблицаПолей.Индексы.Добавить("ИмяПоля");
		СтрокаКПП = ТаблицаПолей.Найти("КПП", "ИмяПоля");
		Если СтрокаКПП <> Неопределено Тогда
			ТаблицаПолей.Удалить(СтрокаКПП);
		КонецЕсли;
	КонецЕсли;
	
	НомерДокументаВПачке = 1;
	Пока ВыборкаПоСтрокамДокумента.СледующийПоЗначениюПоля("НомерСтроки") Цикл
		
		НаборЗаписейСЗВ6 = ПроцедурыПерсонифицированногоУчета.СкопироватьСтруктуруДанных(ФорматСЗВ6);
		
		// Общие данные пачки - берем их из описи
		НаборЗаписейСЗВ6.ТипСведений.Значение = ДанныеВходящейОписи.ТипСведений.Значение;
		НаборЗаписейСЗВ6.РегистрационныйНомер.Значение = ДанныеВходящейОписи.СоставительПачки.Значение.РегистрационныйНомер.Значение;
		НаборЗаписейСЗВ6.НаименованиеКраткое.Значение = ДанныеВходящейОписи.СоставительПачки.Значение.НаименованиеКраткое.Значение;
		НаборЗаписейСЗВ6.НалоговыйНомер.Значение = ДанныеВходящейОписи.СоставительПачки.Значение.НалоговыйНомер.Значение;
		НаборЗаписейСЗВ6.КодКатегории.Значение = ДанныеВходящейОписи.КодКатегории.Значение;
		НаборЗаписейСЗВ6.ТипДоговора.Значение = ДанныеВходящейОписи.ТипДоговора.Значение;
		НаборЗаписейСЗВ6.ОтчетныйГод.Значение = ДанныеВходящейОписи.ОтчетныйГод.Значение;
		НаборЗаписейСЗВ6.ДатаЗаполнения.Значение = ВыборкаПоШапкеДокумента.Дата;
		
		// Данные физлица
		НомерДокументаВПачке = НомерДокументаВПачке + 1;
		
		Фамилия = СокрЛП(ВыборкаПоСтрокамДокумента.Фамилия);
		Имя = СокрЛП(ВыборкаПоСтрокамДокумента.Имя);
		Отчество = СокрЛП(ВыборкаПоСтрокамДокумента.Отчество);
		
		НаборЗаписейСЗВ6.НомерВПачке.Значение = НомерДокументаВПачке;
		НаборЗаписейСЗВ6.СтраховойНомер.Значение = ВыборкаПоСтрокамДокумента.СтраховойНомерПФР;
		НаборЗаписейФИО = НаборЗаписейСЗВ6.ФИО.Значение;
		НаборЗаписейФИО.Фамилия = ВРег(Фамилия);
		НаборЗаписейФИО.Имя = ВРег(Имя);
		НаборЗаписейФИО.Отчество = ВРег(Отчество);
		
		НаборЗаписейСуммаВыплатИвознаграждений = ПроцедурыПерсонифицированногоУчета.СкопироватьСтруктуруДанных(НаборЗаписейСЗВ6.СуммаВыплатИвознаграждений.Значение);
		НаборЗаписейСЗВ6.Удалить("СуммаВыплатИвознаграждений");
		
		УзелСЗВ6 = ПроцедурыПерсонифицированногоУчета.ДобавитьУзелВДеревоXML(УзелПачкаВходящихДокументов, ТипДокументовПачки,"");
		ПроцедурыПерсонифицированногоУчета.ДобавитьИнформациюВДерево(УзелСЗВ6, НаборЗаписейСЗВ6);
		
		Пока ВыборкаПоСтрокамДокумента.СледующийПоЗначениюПоля("Месяц") Цикл
			
			НаборЗаписейСуммаВыплатИвознаграждений.Месяц.Значение = ВыборкаПоСтрокамДокумента.Месяц;
			НаборЗаписейСуммаВыплатИвознаграждений.ТипСтроки.Значение = "МЕСЯЦ";
			НаборЗаписейСуммаВыплатИвознаграждений.СуммаВыплатВсего.Значение = ВыборкаПоСтрокамДокумента.Заработок;
			НаборЗаписейСуммаВыплатИвознаграждений.СуммаВыплатНачисленыСтраховыеВзносы.Значение = ВыборкаПоСтрокамДокумента.ОблагаетсяВзносами;
			
			УзелЗаработка = ПроцедурыПерсонифицированногоУчета.ДобавитьУзелВДеревоXML(УзелСЗВ6, "СуммаВыплатИвознаграждений","");
			ПроцедурыПерсонифицированногоУчета.ДобавитьИнформациюВДерево(УзелЗаработка, НаборЗаписейСуммаВыплатИвознаграждений);
			
		КонецЦикла;
		
		НаборЗаписейСуммаВыплатИвознаграждений = ПроцедурыПерсонифицированногоУчета.СкопироватьСтруктуруДанных(ФорматСуммаВыплатИвознаграждений);
		НаборЗаписейСуммаВыплатИвознаграждений.ТипСтроки.Значение = "ИТОГО";
		НаборЗаписейСуммаВыплатИвознаграждений.СуммаВыплатВсего.Значение = ВыборкаПоСтрокамДокумента.ВсегоЗаработка;
		НаборЗаписейСуммаВыплатИвознаграждений.СуммаВыплатНачисленыСтраховыеВзносы.Значение = ВыборкаПоСтрокамДокумента.ВсегоОблагаетсяВзносами;
		
		УзелЗаработка = ПроцедурыПерсонифицированногоУчета.ДобавитьУзелВДеревоXML(УзелСЗВ6, "СуммаВыплатИвознаграждений","");
		ПроцедурыПерсонифицированногоУчета.ДобавитьИнформациюВДерево(УзелЗаработка, НаборЗаписейСуммаВыплатИвознаграждений);
		
	КонецЦикла;
	
	Если Отказ тогда
		Возврат "";
	КонецЕсли;	 
	
	// Преобразуем дерево в строковое описание XML
	ТекстФайла = ПроцедурыПерсонифицированногоУчета.ПолучитьТекстФайлаИзДереваЗначений(ДеревоВыгрузки);
	Возврат ТекстФайла
	
КонецФункции 

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Формирует запрос по шапке документа
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросПоШапке() Экспорт 

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка",	Ссылка);
	Запрос.УстановитьПараметр("Руководитель",	Руководитель);
	Запрос.УстановитьПараметр("ДатаФИО",		Дата);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Застрахованные.НомерСтроки) КАК Количество
	|ПОМЕСТИТЬ ВТКоличествоСотрудников
	|ИЗ
	|	Документ.СведенияОНачисленномЗаработкеСЗВ63.СотрудникиОрганизации КАК Застрахованные
	|ГДЕ
	|	Застрахованные.Ссылка = &ДокументСсылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(СведенияОНачисленномЗаработкеСЗВ63СведенияОЗаработке.Заработок) КАК Заработок,
	|	СУММА(СведенияОНачисленномЗаработкеСЗВ63СведенияОЗаработке.ОблагаетсяВзносами) КАК ОблагаетсяВзносами
	|ПОМЕСТИТЬ ВТИтоги
	|ИЗ
	|	Документ.СведенияОНачисленномЗаработкеСЗВ63.СведенияОЗаработке КАК СведенияОНачисленномЗаработкеСЗВ63СведенияОЗаработке
	|ГДЕ
	|	СведенияОНачисленномЗаработкеСЗВ63СведенияОЗаработке.Ссылка = &ДокументСсылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫБОР
	|		КОГДА ФИОФизЛицСрезПоследних.ФизЛицо ЕСТЬ NULL 
	|			ТОГДА ФизическиеЛица.Наименование
	|		ИНАЧЕ ФИОФизЛицСрезПоследних.Фамилия + "" "" + ФИОФизЛицСрезПоследних.Имя + "" "" + ФИОФизЛицСрезПоследних.Отчество
	|	КОНЕЦ КАК ФИОРуководителя
	|ПОМЕСТИТЬ ВТФИОРуководителя
	|ИЗ
	|	Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаФИО, ФизЛицо = &Руководитель) КАК ФИОФизЛицСрезПоследних
	|		ПО ФизическиеЛица.Ссылка = ФИОФизЛицСрезПоследних.ФизЛицо
	|ГДЕ
	|	ФизическиеЛица.Ссылка = &Руководитель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОНачисленномЗаработке.Ссылка КАК Ссылка,
	|	СведенияОНачисленномЗаработке.Дата КАК Дата,
	|	СведенияОНачисленномЗаработке.Дата КАК ДатаСоставленияОписи,
	|	СведенияОНачисленномЗаработке.Номер КАК Номер,
	|	СведенияОНачисленномЗаработке.Организация КАК Организация,
	|	СведенияОНачисленномЗаработке.НомерПачки,
	|	СведенияОНачисленномЗаработке.ОтчетныйПериод,
	|	СведенияОНачисленномЗаработке.КатегорияЗастрахованныхЛиц,
	|	""СЗВ-6-3"" КАК ТипФормДокументов,
	|	СведенияОНачисленномЗаработке.ДолжностьРуководителя.Наименование КАК РуководительДолжность,
	|	СведенияОНачисленномЗаработке.Организация.Наименование,
	|	СведенияОНачисленномЗаработке.Организация.ЮрФизЛицо КАК ОрганизацияЮрФизЛицо,
	|	СведенияОНачисленномЗаработке.Организация.ОГРН КАК ОрганизацияОГРН,
	|	СведенияОНачисленномЗаработке.Организация.НаименованиеОКОПФ КАК ОрганизацияНаименованиеОКОПФ,
	|	СведенияОНачисленномЗаработке.Организация.НаименованиеПолное,
	|	СведенияОНачисленномЗаработке.Организация.НаименованиеСокращенное,
	|	СведенияОНачисленномЗаработке.Организация.РегистрационныйНомерПФР,
	|	СведенияОНачисленномЗаработке.Организация.ИНН,
	|	СведенияОНачисленномЗаработке.Организация.КПП,
	|	СведенияОНачисленномЗаработке.Организация.КодПоОКПО КАК ОКПО,
	|	ВЫБОР
	|		КОГДА СведенияОНачисленномЗаработке.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА СведенияОНачисленномЗаработке.Организация
	|		ИНАЧЕ СведенияОНачисленномЗаработке.Организация.ГоловнаяОрганизация
	|	КОНЕЦ КАК ГоловнаяОрганизация,
	|	КоличествоСотрудников.Количество,
	|	ЕСТЬNULL(ФИОФизЛиц.ФИОРуководителя, """") КАК Руководитель,
	|	СведенияОНачисленномЗаработке.ОтчетныйПериод КАК Год,
	|	СведенияОНачисленномЗаработке.ФорматФайла,
	|	СведенияОНачисленномЗаработке.ТипСведенийСЗВ,
	|	СведенияОНачисленномЗаработке.ТипДоговора,
	|	ВсегоЗаработка.Заработок,
	|	ВсегоЗаработка.ОблагаетсяВзносами,
	|	ВЫБОР
	|		КОГДА СведенияОНачисленномЗаработке.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипДоговораСЗВ63.Трудовой)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоТрудовойДоговор,
	|	ВЫБОР
	|		КОГДА СведенияОНачисленномЗаработке.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипДоговораСЗВ63.ГражданскоПравовой)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоДоговорГПХ,
	|	ВЫБОР
	|		КОГДА СведенияОНачисленномЗаработке.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоИсходныйДокумент,
	|	ВЫБОР
	|		КОГДА СведенияОНачисленномЗаработке.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоКорректирующийДокумент,
	|	ВЫБОР
	|		КОГДА СведенияОНачисленномЗаработке.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоОтменяющийДокумент
	|ИЗ
	|	Документ.СведенияОНачисленномЗаработкеСЗВ63 КАК СведенияОНачисленномЗаработке
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИОРуководителя КАК ФИОФизЛиц
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКоличествоСотрудников КАК КоличествоСотрудников
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИтоги КАК ВсегоЗаработка
	|		ПО (ИСТИНА)
	|ГДЕ
	|	СведенияОНачисленномЗаработке.Ссылка = &ДокументСсылка";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоШапке()

Функция СформироватьЗапросПоСотрудникиОрганизации(ВыборкаПоШапкеДокумента)

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка",			ВыборкаПоШапкеДокумента.Ссылка);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация",	ВыборкаПоШапкеДокумента.ГоловнаяОрганизация);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗастрахованныеЛица.Ссылка КАК Ссылка,
	|	ЗастрахованныеЛица.ФизЛицо КАК ФизЛицо,
	|	ЗастрахованныеЛица.НомерСтроки КАК НомерСтроки,
	|	ЗастрахованныеЛица.СтраховойНомерПФР,
	|	ЗастрахованныеЛица.Фамилия,
	|	ЗастрахованныеЛица.Имя,
	|	ЗастрахованныеЛица.Отчество,
	|	ЗастрахованныеЛица.Ссылка.Организация,
	|	ЗастрахованныеЛица.Ссылка.КатегорияЗастрахованныхЛиц,
	|	ЗастрахованныеЛица.Ссылка.ОтчетныйПериод
	|ПОМЕСТИТЬ ВТЗастрахованныеЛица
	|ИЗ
	|	Документ.СведенияОНачисленномЗаработкеСЗВ63.СотрудникиОрганизации КАК ЗастрахованныеЛица
	|ГДЕ
	|	ЗастрахованныеЛица.Ссылка = &ДокументСсылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки,
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТЧРаботникиОрг.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ВТЗарегистрированныеСотрудниками
	|ИЗ
	|	ВТЗастрахованныеЛица КАК ТЧРаботникиОрг
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
	|		ПО ТЧРаботникиОрг.ФизЛицо = СотрудникиОрганизаций.Физлицо
	|			И (СотрудникиОрганизаций.Организация = &ГоловнаяОрганизация)
	|ГДЕ
	|	СотрудникиОрганизаций.Ссылка ЕСТЬ НЕ NULL 
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОНачисленномЗаработкеСЗВ63СведенияОЗаработке.Месяц,
	|	СведенияОНачисленномЗаработкеСЗВ63СведенияОЗаработке.Заработок,
	|	СведенияОНачисленномЗаработкеСЗВ63СведенияОЗаработке.ОблагаетсяВзносами,
	|	СведенияОНачисленномЗаработкеСЗВ63СведенияОЗаработке.ФизЛицо,
	|	СведенияОНачисленномЗаработкеСЗВ63СведенияОЗаработке.НомерСтроки
	|ПОМЕСТИТЬ ВТСтрокиЗаработкаЗастрахованных
	|ИЗ
	|	Документ.СведенияОНачисленномЗаработкеСЗВ63.СведенияОЗаработке КАК СведенияОНачисленномЗаработкеСЗВ63СведенияОЗаработке
	|ГДЕ
	|	СведенияОНачисленномЗаработкеСЗВ63СведенияОЗаработке.Ссылка = &ДокументСсылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(СведенияОНачисленномЗаработкеСЗВ63СведенияОЗаработке.Месяц) КАК НаибольшийМесяц,
	|	МИНИМУМ(СведенияОНачисленномЗаработкеСЗВ63СведенияОЗаработке.Месяц) КАК НаименьшийМесяц,
	|	СУММА(СведенияОНачисленномЗаработкеСЗВ63СведенияОЗаработке.Заработок) КАК Заработок,
	|	СУММА(СведенияОНачисленномЗаработкеСЗВ63СведенияОЗаработке.ОблагаетсяВзносами) КАК ОблагаетсяВзносами,
	|	СведенияОНачисленномЗаработкеСЗВ63СведенияОЗаработке.ФизЛицо,
	|	МИНИМУМ(СведенияОНачисленномЗаработкеСЗВ63СведенияОЗаработке.Заработок) КАК МинимальныйЗаработок,
	|	МИНИМУМ(СведенияОНачисленномЗаработкеСЗВ63СведенияОЗаработке.ОблагаетсяВзносами) КАК МинимальныйОблагаетсяВзносами
	|ПОМЕСТИТЬ ВТЗаработокЗастрахованных
	|ИЗ
	|	ВТСтрокиЗаработкаЗастрахованных КАК СведенияОНачисленномЗаработкеСЗВ63СведенияОЗаработке
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОНачисленномЗаработкеСЗВ63СведенияОЗаработке.ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПерваяТаблица.ФизЛицо
	|ПОМЕСТИТЬ ВТДвойныеМесяцы
	|ИЗ
	|	ВТСтрокиЗаработкаЗастрахованных КАК ПерваяТаблица
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСтрокиЗаработкаЗастрахованных КАК ВтораяТаблица
	|		ПО ПерваяТаблица.ФизЛицо = ВтораяТаблица.ФизЛицо
	|			И ПерваяТаблица.Месяц = ВтораяТаблица.Месяц
	|			И ПерваяТаблица.НомерСтроки <> ВтораяТаблица.НомерСтроки
	|ГДЕ
	|	ВтораяТаблица.НомерСтроки ЕСТЬ НЕ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	ПерваяТаблица.ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПерваяТаблица.ФизЛицо
	|ПОМЕСТИТЬ ВТНеверныеОблагаемыеСуммы
	|ИЗ
	|	ВТСтрокиЗаработкаЗастрахованных КАК ПерваяТаблица
	|ГДЕ
	|	ПерваяТаблица.Заработок < ПерваяТаблица.ОблагаетсяВзносами
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ВтораяТаблица.НомерСтроки) КАК НомерПовторяющейсяСтроки,
	|	ПерваяТаблица.Ссылка,
	|	ПерваяТаблица.ФизЛицо,
	|	ПерваяТаблица.НомерСтроки КАК НомерСтроки,
	|	ПерваяТаблица.СтраховойНомерПФР,
	|	ПерваяТаблица.Фамилия,
	|	ПерваяТаблица.Имя,
	|	ПерваяТаблица.Отчество,
	|	ПерваяТаблица.ФизЛицо.Наименование,
	|	ВЫБОР
	|		КОГДА ЗарегистрированныеСотрудниками.НомерСтроки ЕСТЬ НЕ NULL 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ФизЛицоРаботаетВОрганизации,
	|	ПерваяТаблица.Организация,
	|	ПерваяТаблица.КатегорияЗастрахованныхЛиц,
	|	ПерваяТаблица.ОтчетныйПериод,
	|	ДвойныеМесяцы.ФизЛицо КАК ФизЛицоСДвойнымиМесяцами,
	|	ЕСТЬNULL(ЗаработокЗастрахованных.НаибольшийМесяц, 12) КАК НаибольшийМесяц,
	|	ЕСТЬNULL(ЗаработокЗастрахованных.Заработок, 0) КАК ВсегоЗаработка,
	|	ЕСТЬNULL(ЗаработокЗастрахованных.ОблагаетсяВзносами, 0) КАК ВсегоОблагаетсяВзносами,
	|	ЕСТЬNULL(ЗаработокЗастрахованных.НаименьшийМесяц, 0) КАК НаименьшийМесяц,
	|	ЕСТЬNULL(ЗаработокЗастрахованных.МинимальныйЗаработок, 0) КАК МинимальныйЗаработок,
	|	ЕСТЬNULL(ЗаработокЗастрахованных.МинимальныйОблагаетсяВзносами, 0) КАК МинимальныйОблагаетсяВзносами,
	|	НеверныеОблагаемыеСуммы.ФизЛицо КАК ФизЛицоСНевернымиОблагаемымиСуммами,
	|	ЗаработокПоМесяцам.Месяц КАК Месяц,
	|	ЗаработокПоМесяцам.Заработок КАК Заработок,
	|	ЗаработокПоМесяцам.ОблагаетсяВзносами
	|ИЗ
	|	ВТЗастрахованныеЛица КАК ПерваяТаблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗарегистрированныеСотрудниками КАК ЗарегистрированныеСотрудниками
	|		ПО ПерваяТаблица.НомерСтроки = ЗарегистрированныеСотрудниками.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗастрахованныеЛица КАК ВтораяТаблица
	|		ПО ПерваяТаблица.ФизЛицо = ВтораяТаблица.ФизЛицо
	|			И ПерваяТаблица.НомерСтроки < ВтораяТаблица.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаработокЗастрахованных КАК ЗаработокЗастрахованных
	|		ПО ПерваяТаблица.ФизЛицо = ЗаработокЗастрахованных.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДвойныеМесяцы КАК ДвойныеМесяцы
	|		ПО ПерваяТаблица.ФизЛицо = ДвойныеМесяцы.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНеверныеОблагаемыеСуммы КАК НеверныеОблагаемыеСуммы
	|		ПО ПерваяТаблица.ФизЛицо = НеверныеОблагаемыеСуммы.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтрокиЗаработкаЗастрахованных КАК ЗаработокПоМесяцам
	|		ПО ПерваяТаблица.ФизЛицо = ЗаработокПоМесяцам.ФизЛицо
	|
	|СГРУППИРОВАТЬ ПО
	|	ПерваяТаблица.Ссылка,
	|	ПерваяТаблица.ФизЛицо,
	|	ПерваяТаблица.НомерСтроки,
	|	ПерваяТаблица.СтраховойНомерПФР,
	|	ПерваяТаблица.Фамилия,
	|	ПерваяТаблица.Имя,
	|	ПерваяТаблица.Отчество,
	|	ПерваяТаблица.ФизЛицо.Наименование,
	|	ВЫБОР
	|		КОГДА ЗарегистрированныеСотрудниками.НомерСтроки ЕСТЬ НЕ NULL 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ПерваяТаблица.Организация,
	|	ПерваяТаблица.КатегорияЗастрахованныхЛиц,
	|	ПерваяТаблица.ОтчетныйПериод,
	|	ЗаработокЗастрахованных.ОблагаетсяВзносами,
	|	ДвойныеМесяцы.ФизЛицо,
	|	НеверныеОблагаемыеСуммы.ФизЛицо,
	|	ЗаработокПоМесяцам.Месяц,
	|	ЗаработокПоМесяцам.Заработок,
	|	ЗаработокПоМесяцам.ОблагаетсяВзносами,
	|	ЗаработокЗастрахованных.МинимальныйЗаработок,
	|	ЗаработокЗастрахованных.МинимальныйОблагаетсяВзносами,
	|	ЕСТЬNULL(ЗаработокЗастрахованных.НаибольшийМесяц, 12),
	|	ЕСТЬNULL(ЗаработокЗастрахованных.Заработок, 0),
	|	ЕСТЬNULL(ЗаработокЗастрахованных.НаименьшийМесяц, 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки,
	|	Месяц";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоСотрудникиОрганизации()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, Режим)

	Если Проведен И ПринятоВПФР Тогда
		Возврат
	КонецЕсли;
	
	Для Каждого Набор Из Движения Цикл
		Набор.Очистить();
	КонецЦикла;
	
	ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапке().Выбрать();
	ВыборкаПоШапкеДокумента.Следующий();
	
	ВыборкаПоСтрокамДокумента = СформироватьЗапросПоСотрудникиОрганизации(ВыборкаПоШапкеДокумента).Выбрать();
	ПроверитьПравильностьЗаполненияДокумента(Отказ, Ложь, ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента);
	
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	//При проведении файл формируем заново 
	ТекстФайла = СформироватьВыходнойФайл(Отказ, Ложь, ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента);
	
	//Сохраним сформированный файл сведений в регистре сведений
	Запись = Движения.АрхивДанныхРегламентированнойОтчетности.Добавить();
	Запись.Объект = Ссылка;
	Запись.ОписаниеДанных = "Файл формы СЗВ-6-3";
	Запись.Данные = ТекстФайла;

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат
	КонецЕсли;
	
	ПроцедурыПерсонифицированногоУчета.ПроставитьНомерПачки(ЭтотОбъект);
	
	КраткийСоставДокумента = ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(СотрудникиОрганизации, , "ФизЛицо");
	
	Соответствие = Новый Соответствие;
	Для каждого СтрокаТЧ Из СотрудникиОрганизации Цикл
        Соответствие.Вставить(СтрокаТЧ.ФизЛицо, Истина)
	КонецЦикла;
	ВсегоСтрок = СведенияОЗаработке.Количество();
	Для Сч = 1 По ВсегоСтрок Цикл
		СтрокаТЧ = СведенияОЗаработке[ВсегоСтрок - Сч];
		Если Соответствие[СтрокаТЧ.ФизЛицо] = Неопределено Тогда
			СведенияОЗаработке.Удалить(СтрокаТЧ)
		КонецЕсли;
	КонецЦикла; 
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	Отказ = ПринятоВПФР;
	Если Не Отказ Тогда
		Для Каждого Набор Из Движения Цикл
			Набор.Очистить();
			Набор.Записать();
		КонецЦикла
	КонецЕсли;
	
КонецПроцедуры // ОбработкаУдаленияПроведения()



////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

// Хранит текущую дату документа - для проверки перехода документа в другой период установки номера
Перем мТекущаяДатаДокумента;

// Хранит дерево макетов печатных форм
Перем мДеревоМакетов;

// Хранит элемент управления подменю печати
Перем мПодменюПечати;

// Хранит элемент управления кнопку печать по умолчанию
Перем мПечатьПоУмолчанию;

// Хранит дерево кнопок подменю заполнение ТЧ
Перем мКнопкиЗаполненияТЧ;

Перем СтруктураОтбораСФ;

Перем СоответствиеВидовЦенности;

Перем ОткрыватьНастройкуДвижений;

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура устанавливает подменю "Заполнить" в командных панелях ТЧ документа при необходимости
//
Процедура УстановитьКнопкиПодменюЗаполненияТЧ();
	
	СоответствиеТЧ = Новый Соответствие;
	СоответствиеТЧ.Вставить(ЭлементыФормы.ОбъектыНедвижимости, ЭлементыФормы.КоманднаяПанельОбъектыНедвижимости.Кнопки.ПодменюЗаполнить);
	СоответствиеТЧ.Вставить(ЭлементыФормы.СчетаФактуры, ЭлементыФормы.КоманднаяПанельСчетаФактуры.Кнопки.ПодменюЗаполнить);
	
	мКнопкиЗаполненияТЧ = УниверсальныеМеханизмы.СформироватьПодменюЗаполненияТЧ(Ссылка, СоответствиеТЧ, Новый Действие("НажатиеНаДополнительнуюКнопкуЗаполненияТЧ"));
	
КонецПроцедуры

// Процедура устанавливает подменю "Печать" и кнопку "Печать по умолчанию" при необходимости
//
Процедура УстановитьКнопкиПечати()
	
	мДеревоМакетов = УниверсальныеМеханизмы.ПолучитьДеревоМакетовПечати(Ссылка, Неопределено, Новый Действие("ОсновныеДействияФормыПечать"), Новый Действие("ОсновныеДействияФормыУстановитьПечатьПоУмолчанию"));

	УниверсальныеМеханизмы.УстановитьПодменюПечати    (мПодменюПечати, ЭлементыФормы.ОсновныеДействияФормы, мДеревоМакетов.Строки.Количество() > 0);
	УниверсальныеМеханизмы.УстановитьПечатьПоУмолчанию(мПечатьПоУмолчанию, ЭлементыФормы.ОсновныеДействияФормы, мДеревоМакетов, Метаданные().Имя,Новый Действие("ОсновныеДействияФормыПечатьПоУмолчанию"));

	Если Не мПодменюПечати = Неопределено Тогда
		УниверсальныеМеханизмы.СформироватьПодменю(мДеревоМакетов, мПодменюПечати,Истина,Истина);
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать по умолчанию"
//
Процедура ОсновныеДействияФормыПечатьПоУмолчанию(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать"
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Установить печать по умолчанию"
//
Процедура ОсновныеДействияФормыУстановитьПечатьПоУмолчанию(Кнопка)
	
	Если УниверсальныеМеханизмы.НазначитьКнопкуПечатиПоУмолчанию(мДеревоМакетов, Метаданные().Имя) Тогда
		
		УстановитьКнопкиПечати();
		
	КонецЕсли; 
	
КонецПроцедуры

// Возврат - сумма к восстановлению
// Сумма - общая сумма
// ДоляВыручки - процент выручки, не облагаемый НДС
Функция ПолучитьСуммуВосстановления(Сумма, ДоляВыручки)
	
	Возврат Сумма * (ДоляВыручки/100) / 10;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ УПРАВЛЕНИЯ ВНЕШНИМ ВИДОМ ФОРМЫ

Процедура УстановитьЗаголовокГруппыСчетаФактуры()
	
	ТекущиеДанные = ЭлементыФормы.ОбъектыНедвижимости.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		ЭлементыФормы.РамкаГруппыСчетаФактуры.Заголовок = "Счета-фактуры";
	Иначе
		НаименованиеОбъекта = ?(НЕ ЗначениеЗаполнено(ТекущиеДанные.ОбъектНедвижимости), "объект недвижимости не выбран", ТекущиеДанные.ОбъектНедвижимости);
		ЭлементыФормы.РамкаГруппыСчетаФактуры.Заголовок = "Счета-фактуры (" + НаименованиеОбъекта + ")";
	КонецЕсли;
	
		
КонецПроцедуры	

Процедура ОтобразитьСчетаФактуры()
	
	ТекущиеДанные = ЭлементыФормы.ОбъектыНедвижимости.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		
		// Включаем отбор ключу из текущей строки табличной части "ОбъектыНедвижимости"
		ЭлементыФормы.СчетаФактуры.ТолькоПросмотр = Ложь;
		ЭлементыФормы.СчетаФактуры.ОтборСтрок.КлючСтроки.Значение = ТекущиеДанные.КлючСтроки;

	Иначе
		
		// Текущая строка в таблице косвенных расходов не установлена
		ЭлементыФормы.СчетаФактуры.ТолькоПросмотр = Истина;
		Если ОбъектыНедвижимости.Количество() = 0 Тогда
			Если СчетаФактуры.Количество() <> 0 Тогда
				СчетаФактуры.Очистить();
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьВидимостьДоступность()
	
	ТекущиеДанныеОбъекты = ЭлементыФормы.ОбъектыНедвижимости.ТекущиеДанные;
	Если ТекущиеДанныеОбъекты <> Неопределено Тогда
		
		ЭлементыФормы.СчетаФактуры.Колонки.СуммаБезНДСВосстановлена.Видимость = ТекущиеДанныеОбъекты.ИспользуетсяДляОперацийНеОблагаемыхНДС;
		ЭлементыФормы.СчетаФактуры.Колонки.НДСВосстановлен.Видимость = ТекущиеДанныеОбъекты.ИспользуетсяДляОперацийНеОблагаемыхНДС;
		ЭлементыФормы.СчетаФактуры.Колонки.СчетФактура.АвтоОтметкаНезаполненного = ТекущиеДанныеОбъекты.ИспользуетсяДляОперацийНеОблагаемыхНДС;
		ЭлементыФормы.СчетаФактуры.Колонки.ВидЦенности.АвтоОтметкаНезаполненного = ТекущиеДанныеОбъекты.ИспользуетсяДляОперацийНеОблагаемыхНДС;
		ЭлементыФормы.СчетаФактуры.Колонки.КодОперацииДляДекларации.АвтоОтметкаНезаполненного = ТекущиеДанныеОбъекты.ИспользуетсяДляОперацийНеОблагаемыхНДС;
		ЭлементыФормы.КоманднаяПанельОбъектыНедвижимости.Кнопки.ПодменюЗаполнить.Кнопки.ЗаполнитьСуммыНДСПоСФвСтроке.Доступность = Истина;
		ЭлементыФормы.КоманднаяПанельСчетаФактуры.Кнопки.ПодменюЗаполнить.Кнопки.ПодборСчетовФактур.Доступность = Истина;
		
	Иначе
		
		ЭлементыФормы.СчетаФактуры.Колонки.СуммаБезНДСВосстановлена.Видимость = Ложь;
		ЭлементыФормы.СчетаФактуры.Колонки.НДСВосстановлен.Видимость = Ложь;
		ЭлементыФормы.КоманднаяПанельОбъектыНедвижимости.Кнопки.ПодменюЗаполнить.Кнопки.ЗаполнитьСуммыНДСПоСФвСтроке.Доступность = Ложь;
		ЭлементыФормы.КоманднаяПанельСчетаФактуры.Кнопки.ПодменюЗаполнить.Кнопки.ПодборСчетовФактур.Доступность = Ложь;
		
	КонецЕсли;
	
	УстановитьВидимостьСубконто(СчетСписанияНДС, "СписанияНДС", Истина);
	
	ЭлементыФормы.ПанельОсновная.Страницы.СчетаСписанияНДС.Видимость = ОтражатьВосстановлениеВКнигеПродаж;
	
	Для Каждого КнопкаЗаполнить Из ЭлементыФормы.КоманднаяПанельОбъектыНедвижимости.Кнопки.ПодменюЗаполнить.Кнопки Цикл
		КнопкаЗаполнить.Доступность = Не ТолькоПросмотр;
	КонецЦикла;	
	
КонецПроцедуры

Процедура УстановитьВидимостьСубконто(Счет, Суффикс, ВидимостьСчета)
	
	ВидыСубконтоСчета = Счет.ВидыСубконто;
	КоличествоСубконто = ВидыСубконтоСчета.Количество();
	Для Ном = 1 по 3 Цикл
		
		Если ВидимостьСчета и (Ном <= КоличествоСубконто) и  (ЗначениеЗаполнено(Счет)) Тогда
			ЭлементыФормы["НадписьСубконто"+Суффикс+Ном].Заголовок = Строка(ВидыСубконтоСчета[Ном-1].ВидСубконто);
			ЭлементыФормы["НадписьСубконто"+Суффикс+Ном].Видимость = Истина;
			ЭлементыФормы["Субконто"+Суффикс+Ном].Видимость        = Истина;
		Иначе
			ЭлементыФормы["НадписьСубконто"+Суффикс+Ном].Видимость = Ложь;
			ЭлементыФормы["Субконто"+Суффикс+Ном].Видимость        = Ложь;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Устанавливает типы субконто при изменении счета
//
// Параметры
//  Счет  – <ПланыСчетов. .Ссылка> – Счет изменившийся
//  Суффикс- <Строка> – Суффикс реквизитов
//
Процедура ПриИзмененииСчета(Счет, Суффикс)

	ВидыСубконтоСчета = Счет.ВидыСубконто;

	Для Ном = 1 по 3 Цикл
		Если (Ном <= ВидыСубконтоСчета.Количество()) и (ЗначениеЗаполнено(Счет)) и
			ВидыСубконтоСчета[Ном-1].ВидСубконто.ТипЗначения.СодержитТип(ТипЗнч(ЭтотОбъект["Субконто"+Суффикс+Ном]))  Тогда
			// Без изменений
		ИначеЕсли Ном <= ВидыСубконтоСчета.Количество() тогда
			ЭтотОбъект["Субконто"+Суффикс+Ном] = Новый(ВидыСубконтоСчета[Ном-1].ВидСубконто.ТипЗначения.Типы()[0]);
		Иначе
			ЭтотОбъект["Субконто"+Суффикс+Ном] = Неопределено;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры // ПриИзмененииСчета()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СВОЙСТВ И КАТЕГОРИЙ

// Процедура выполняет открытие формы работы со свойствами документа
//
Процедура ДействияФормыДействиеОткрытьСвойства(Кнопка)

	РаботаСДиалогами.ОткрытьСвойстваДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	// Установка кнопок печати
	УстановитьКнопкиПечати();
	
	// Установка кнопок заполнение ТЧ
	УстановитьКнопкиПодменюЗаполненияТЧ();
      	
КонецПроцедуры

Процедура ПриОткрытии()
	
	Если ЭтоНовый() Тогда
		
		// Заполнить реквизиты значениями по умолчанию.
		ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, глЗначениеПеременной("глТекущийПользователь"),,,ПараметрОбъектКопирования);
		
		ОтражатьВосстановлениеВКнигеПродаж = Истина;
		
		//Счета списания НДС по умолчанию
		СчетСписанияНДС = ПланыСчетов.Хозрасчетный.ПрочиеРасходы;
		ПриИзмененииСчета(СчетСписанияНДС, "СписанияНДС");
		
	КонецЕсли;
	
	МеханизмНумерацииОбъектов.ДобавитьВМенюДействияКнопкуРедактированияНомера(ЭлементыФормы.ДействияФормы.Кнопки.Подменю);
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Номер);
	
	ОткрыватьНастройкуДвижений = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ПоказыватьДвиженияПриПроведении");
    	
	мТекущаяДатаДокумента = Дата;
	
	УстановитьЗаголовокГруппыСчетаФактуры();
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	
	// Предполагается использовать отбор по таблице "СчетаФактуры"
	ЭлементыФормы.СчетаФактуры.ОтборСтрок.КлючСтроки.Использование = Истина;
	ЭлементыФормы.СчетаФактуры.ОтборСтрок.КлючСтроки.Значение = 0;
	
	ОтобразитьСчетаФактуры();
	
	// Установить доступность формы с учетом даты запрета редактирования	
	РаботаСДиалогами.УстановитьДоступностьФормыДляРедактирования(ЭтотОбъект, ЭтаФорма);
		
	УстановитьВидимостьДоступность();
	
	// Установить активный реквизит.
	РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма,,ЭлементыФормы.ОбъектыНедвижимости);
	
	РаботаСДиалогами.ИзменитьПредставлениеКнопкиВыбораСвойств(ЭтаФорма, РаботаСДиалогами.ПолучитьОписаниеЗначенийСвойствОбъекта(Ссылка));

КонецПроцедуры

// Процедура - обработчик события "ПриЗакрытии" формы.
//
Процедура ПриЗакрытии()
			
	ОбщегоНазначения.ОткрытьЖурналДокумента(ЭтаФорма);

КонецПроцедуры

// Процедура - обработчик события "ОбработкаОповещения" формы.
//
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновлениеЗначенийСвойств" И Источник = Ссылка Тогда
		РаботаСДиалогами.ИзменитьПредставлениеКнопкиВыбораСвойств(ЭтаФорма, Параметр);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПослеЗаписи()
	
	// Установка кнопок печати
	УстановитьКнопкиПечати();
	
	// Вывести в заголовке формы статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	
	//Открыть настройку движений
	ОбщегоНазначения.РучнаяКорректировкаОсновнаяФормаПослеЗаписи(ЭтотОбъект.Проведен,ОткрыватьНастройкуДвижений,Ссылка,ЭтотОбъект);
	
КонецПроцедуры

// Процедура - обработчик нажатия на любую из дополнительных кнопок по заполнению ТЧ
//
Процедура НажатиеНаДополнительнуюКнопкуЗаполненияТЧ(Кнопка)
	
	УниверсальныеМеханизмы.ОбработатьНажатиеНаДополнительнуюКнопкуЗаполненияТЧ(мКнопкиЗаполненияТЧ.Строки.Найти(Кнопка.Имя,"Имя",Истина),ЭтотОбъект);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ
 
// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ОсновныеДействияФормыНастройка(Кнопка)
	
	ОбщегоНазначения.РучнаяКорректировкаОсновнаяФорма(ЭтоНовый(),Ссылка,ЭтотОбъект);
	
КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

// Процедура вызова структуры подчиненности документа
//
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
	
КонецПроцедуры
           

Процедура КоманднаяПанельОбъектыНедвижимостиПодборОбъектыНедвижимости(Кнопка)
	
	ТекущиеДанныеОбъектыНедвижимости = ЭлементыФормы.ОбъектыНедвижимости.ТекущиеДанные;
	
	ФормаПодбора = ПолучитьФорму("ФормаПодбораОбъектовНедвижимости");
	ФормаПодбора.ДокументОбъект = ДокументОбъект;
	Для Каждого СтрокаОбъектНедвижимости Из ОбъектыНедвижимости Цикл
		НоваяСтрока = ФормаПодбора.ОбъектыНедвижимостиПодбор.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОбъектНедвижимости);
		НоваяСтрока.Выбран = Истина;
	КонецЦикла;
	Результат = ФормаПодбора.ОткрытьМодально();
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	СтруктураОтбора = Новый Структура("ОбъектНедвижимости");
	Для Каждого СтрокаРезультата Из Результат Цикл
		
		СтруктураОтбора.ОбъектНедвижимости = СтрокаРезультата.ОбъектНедвижимости;
		СтрокиОбъектыНедвижимости = ОбъектыНедвижимости.НайтиСтроки(СтруктураОтбора);
		Если СтрокиОбъектыНедвижимости.Количество() <> 0 Тогда
			СтрокаРезультата.Выбран = Ложь;
			Для Каждого СтрокаОбъектНедвижимости Из СтрокиОбъектыНедвижимости Цикл
				ЗаполнитьЗначенияСвойств(СтрокаОбъектНедвижимости, СтрокаРезультата);
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого СтрокаРезультата Из Результат Цикл
		Если СтрокаРезультата.Выбран Тогда
			НоваяСтрока = ОбъектыНедвижимости.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаРезультата);
			// Инициализируем значение "КлючСтроки" для установки связи данной таблицы с таблицей 
			// "СчетаФактуры".
			// Значение должно быть уникальным
			НеУстановлено = Истина;
			Кандидат = ОбъектыНедвижимости.Количество();

			Пока НеУстановлено Цикл
				Если ОбъектыНедвижимости.Найти(Кандидат, "КлючСтроки") = Неопределено Тогда
					// Уникальное значение ключа
					НоваяСтрока.КлючСтроки = Кандидат;
					НеУстановлено = Ложь;
				Иначе
					// Такое значение ключа уже использовано
					Кандидат = Кандидат + 1;
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
	КонецЦикла;
	
	Результат.Индексы.Добавить("ОбъектНедвижимости");
	// Удалим ОСы, которые не были отобраны в форме подбора, но есть в ТЧ
	СтрокиКУдалению = Новый Массив;
	Для Каждого СтрокаОбъектНедвижимости ИЗ ОбъектыНедвижимости Цикл
		СтруктураОтбора.ОбъектНедвижимости = СтрокаОбъектНедвижимости.ОбъектНедвижимости;
		Если Результат.Найти(СтрокаОбъектНедвижимости.ОбъектНедвижимости, "ОбъектНедвижимости") = Неопределено Тогда
			СтруктураОтбораСФ.КлючСтроки = СтрокаОбъектНедвижимости.КлючСтроки;
			СтрокиСчетаФактуры = СчетаФактуры.НайтиСтроки(СтруктураОтбораСФ);
			Для Каждого СтрокаКУдалению из СтрокиСчетаФактуры Цикл
				СчетаФактуры.Удалить(СтрокаКУдалению);
			КонецЦикла;
			СтрокиКУдалению.Добавить(СтрокаОбъектНедвижимости);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого СтрокаКУдалению из СтрокиКУдалению Цикл
		ОбъектыНедвижимости.Удалить(СтрокаКУдалению);
	КонецЦикла;
		
	ЗаполнитьСуммыПоСчетамФактурам();
	
	ОтобразитьСчетаФактуры();
	
КонецПроцедуры

Процедура КоманднаяПанельОбъектыНедвижимостиЗаполнитьДолюВыручки(Кнопка)

	Если ОбъектыНедвижимости.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ФормаВвода = ПолучитьФорму("ФормаВводаВыручки");
	
	ЕстьОбщаяДоля = Истина;
	ОбщаяДоля = ОбъектыНедвижимости[0].ДоляВыручкиНеОблагаемаяНДС;
	Для Каждого СтрокаОбъектНедвижимости Из ОбъектыНедвижимости Цикл
		Если ОбщаяДоля И СтрокаОбъектНедвижимости.ДоляВыручкиНеОблагаемаяНДС <> 0 Тогда
			ОбщаяДоля = СтрокаОбъектНедвижимости.ДоляВыручкиНеОблагаемаяНДС;
		КонецЕсли;
		Если СтрокаОбъектНедвижимости.ДоляВыручкиНеОблагаемаяНДС <> 0 И СтрокаОбъектНедвижимости.ДоляВыручкиНеОблагаемаяНДС <> ОбщаяДоля Тогда
			ЕстьОбщаяДоля = Ложь;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ЕстьОбщаяДоля Тогда
		ФормаВвода.ОбщаяВыручка = 100;
		ФормаВвода.ВыручкаНеОблагаемаяНДС = ОбщаяДоля;
		ФормаВвода.ДоляВыручкиНеОблагаемаяНДС = ОбщаяДоля;
	КонецЕсли;
	
	ДоляВыручки = ФормаВвода.ОткрытьМодально();
	Если ДоляВыручки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаОбъектНедвижимости Из ОбъектыНедвижимости Цикл
		Если СтрокаОбъектНедвижимости.ИспользуетсяДляОперацийНеОблагаемыхНДС Тогда
			СтрокаОбъектНедвижимости.ДоляВыручкиНеОблагаемаяНДС = ДоляВыручки;
			СтруктураОтбораСФ.КлючСтроки = СтрокаОбъектНедвижимости.КлючСтроки;
			СтрокиСчетаФактуры = СчетаФактуры.НайтиСтроки(СтруктураОтбораСФ);
			Для Каждого СтрокаСчетФактура Из СтрокиСчетаФактуры Цикл
				РассчитатьСуммыВосстановления(СтрокаОбъектНедвижимости, СтрокаСчетФактура);
			КонецЦикла;
			ЗаполнитьСуммыПоСчетамФактурамВСтроке(СтрокаОбъектНедвижимости);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура КоманднаяПанельСчетаФактурыПодборСчетовФактур(Кнопка)
	
	ТекущиеДанныеОбъектыНедвижимости = ЭлементыФормы.ОбъектыНедвижимости.ТекущиеДанные;
	Если ТекущиеДанныеОбъектыНедвижимости = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(ТекущиеДанныеОбъектыНедвижимости.ОбъектНедвижимости) Тогда
		Предупреждение("В табличном поле ""Объекты недвижимости"" не указан объект недвижимости");
		Возврат;
	КонецЕсли;
	
	ФормаПодбора = ПолучитьФорму("ФормаПодбораСчетовФактур");
	ФормаПодбора.ДокументОбъект = ДокументОбъект;
	ФормаПодбора.ОсновноеСредство = ТекущиеДанныеОбъектыНедвижимости.ОбъектНедвижимости;
	СтруктураОтбораСФ.КлючСтроки = ТекущиеДанныеОбъектыНедвижимости.КлючСтроки;
	СтрокиСчетаФактуры = СчетаФактуры.НайтиСтроки(СтруктураОтбораСФ);
	Для Каждого СтрокаСчетФактура Из СтрокиСчетаФактуры Цикл
		НоваяСтрока = ФормаПодбора.СчетаФактурыПодбор.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаСчетФактура);
		НоваяСтрока.Выбрана = Истина;
	КонецЦикла;
	ФормаПодбора.СчетаФактурыПодбор.Индексы.Добавить("СчетФактура, ВидЦенности, СтавкаНДС");
	ФормаПодбора.СчетаФактурыПодбор.Индексы.Добавить("Выбрана");
	Результат = ФормаПодбора.ОткрытьМодально();
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	Результат.Колонки.Добавить("КлючСтроки", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(10, 0));
	Результат.ЗаполнитьЗначения(ТекущиеДанныеОбъектыНедвижимости.КлючСтроки, "КлючСтроки");
	
	СтрокиСчетаФактуры = СчетаФактуры.НайтиСтроки(СтруктураОтбораСФ);
	Для Каждого СтрокаСчетФактура Из СтрокиСчетаФактуры Цикл
		СчетаФактуры.Удалить(СтрокаСчетФактура);
	КонецЦикла;	
	
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(Результат, СчетаФактуры);
	
	СтрокиСчетаФактуры = СчетаФактуры.НайтиСтроки(СтруктураОтбораСФ);
	Для Каждого СтрокаСчетФактура Из СтрокиСчетаФактуры Цикл
		РассчитатьСуммыВосстановления(ТекущиеДанныеОбъектыНедвижимости, СтрокаСчетФактура);
	КонецЦикла;
	
	ЗаполнитьСуммыПоСчетамФактурамВСтроке(ТекущиеДанныеОбъектыНедвижимости);
	
КонецПроцедуры

Процедура КоманднаяПанельОбъектыНедвижимостиЗаполнитьПараметрыОбъектовНедвижимости(Кнопка)
	
	Если ОбъектыНедвижимости.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СтоимостьОбъектов = ПолучитьПараметрыОСпоСписку(ОбъектыНедвижимости.ВыгрузитьКолонку("ОбъектНедвижимости"));
	Если СтоимостьОбъектов.Количество() <> 0 Тогда
		
		СтруктураОтбора = Новый Структура("ОбъектНедвижимости");
		Для Каждого Объект Из СтоимостьОбъектов Цикл
			
			СтруктураОтбора.ОбъектНедвижимости = Объект.ОбъектНедвижимости;
			СтрокиОбъектыНедвижимости = ОбъектыНедвижимости.НайтиСтроки(СтруктураОтбора);
			Для Каждого СтрокаОбъектНедвижимости Из СтрокиОбъектыНедвижимости Цикл 
				ЗаполнитьЗначенияСвойств(СтрокаОбъектНедвижимости, Объект);
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
		
КонецПроцедуры

Процедура КоманднаяПанельОбъектыНедвижимостиЗаполнитьСуммыНДСПоСФ(Кнопка)
	
	ОтветДа = ОбщегоНазначения.ВопросДаНет("Суммы вычетов и восстановления по объектам недвижимости будут заполнены по данным счетов-фактур. Вы уверены?");
	Если ОтветДа Тогда
		ЗаполнитьСуммыПоСчетамФактурам(Истина);
	КонецЕсли;
		
КонецПроцедуры

Процедура КоманднаяПанельОбъектыНедвижимостиЗаполнитьСуммыНДСПоСФвСтроке(Кнопка)
	
	ТекущиеДанныеОбъектНедвижимости = ЭлементыФормы.ОбъектыНедвижимости.ТекущиеДанные;
	
	Если ТекущиеДанныеОбъектНедвижимости = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОтветДа = ОбщегоНазначения.ВопросДаНет("Суммы вычетов и восстановления по «" + ТекущиеДанныеОбъектНедвижимости.ОбъектНедвижимости + "» будут заполнены по данным счетов-фактур. Вы уверены?");
	Если ОтветДа Тогда
		ЗаполнитьСуммыПоСчетамФактурамВСтроке(ТекущиеДанныеОбъектНедвижимости, Истина);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

Процедура ДатаПриИзменении(Элемент)
	
	РаботаСДиалогами.ПроверитьНомерДокумента(ЭтотОбъект, мТекущаяДатаДокумента);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	мТекущаяДатаДокумента = Дата; // запомним текущую дату документа для контроля номера документа
	
КонецПроцедуры

Процедура ОрганизацияПриИзменении(Элемент)
	
	Если Не ПустаяСтрока(Номер) Тогда
		МеханизмНумерацииОбъектов.СброситьУстановленныйКодНомерОбъекта(ЭтотОбъект, "Номер", ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОтражатьВосстановлениеВКнигеПродажПриИзменении(Элемент)
	
	Если ОтражатьВосстановлениеВКнигеПродаж Тогда
		
		НуженВопрос = ОбъектыНедвижимости.Найти(Истина, "ИспользуетсяДляОперацийНеОблагаемыхНДС") <> Неопределено;
		
		Если НуженВопрос Тогда
			НуженВопрос = Ложь;
			СтруктураОтбораСФ.Вставить("КодОперацииДляДекларации");
			
			Для Каждого СтрокаОбъектНедвижимости Из ОбъектыНедвижимости Цикл
				
				СтруктураОтбораСФ.КлючСтроки = СтрокаОбъектНедвижимости.КлючСтроки;
				
				Для Каждого ВидЦенности Из СоответствиеВидовЦенности Цикл
					
					СтруктураОтбораСФ.КодОперацииДляДекларации = ВидЦенности.Ключ;
					СтрокиСчетаФактуры = СчетаФактуры.НайтиСтроки(СтруктураОтбораСФ);
					СуммаПоВидуЦенности = 0;
					СуммаВосстановленаПоВидуЦенности = 0;
					Для Каждого СтрокаСчетФактура Из СтрокиСчетаФактуры Цикл
						СуммаПоВидуЦенности = СуммаПоВидуЦенности + СтрокаСчетФактура.НДС;
						СуммаВосстановленаПоВидуЦенности = СуммаВосстановленаПоВидуЦенности + СтрокаСчетФактура.НДСВосстановлен;
					КонецЦикла;
					Если СтрокаОбъектНедвижимости[ВидЦенности.Значение] <> СуммаПоВидуЦенности
						Или СтрокаОбъектНедвижимости[ВидЦенности.Значение + "Восстановлена"] <> СуммаВосстановленаПоВидуЦенности Тогда
						НуженВопрос = Истина;
						Прервать;
					КонецЕсли;
				КонецЦикла;
					
			КонецЦикла;
				СтруктураОтбораСФ.Удалить("КодОперацииДляДекларации");
		КонецЕсли;
			
		Если НуженВопрос Тогда
			ОтветДа = ОбщегоНазначения.ВопросДаНет("При установке флага суммы вычетов и восстановления объектов недвижимости, которые используются для операций, не облагаемых НДС, будут заполнены по данным счетов-фактур. Вы уверены?");
			Если ОтветДа Тогда
				Для Каждого СтрокаОбъектНедвижимости Из ОбъектыНедвижимости Цикл
					Если СтрокаОбъектНедвижимости.ИспользуетсяДляОперацийНеОблагаемыхНДС Тогда
						ЗаполнитьСуммыПоСчетамФактурамВСтроке(СтрокаОбъектНедвижимости);
					КонецЕсли;
				КонецЦикла;
			Иначе
				ОтражатьВосстановлениеВКнигеПродаж = Ложь;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

Процедура СчетСписанияНДСПриИзменении(Элемент)
	
	ПриИзмененииСчета(СчетСписанияНДС, "СписанияНДС");
	УстановитьВидимостьСубконто(СчетСписанияНДС, "СписанияНДС", Элемент.Видимость);
	
КонецПроцедуры


Процедура СчетСписанияНДСОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = БухгалтерскийУчет.СчетМожноИспользоватьВПроводках(ВыбранноеЗначение);
	
КонецПроцедуры
 
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТАБЛИЧНОГО ПОЛЯ ОБЪЕКТЫНЕДВИЖИМОСТИ

Процедура ЗаполнитьСуммыПоСчетамФактурамВСтроке(СтрокаОбъектНедвижимости, УчитыватьНеиспользуемые = Ложь)
	
	Если СтрокаОбъектНедвижимости = Неопределено 
		Или (Не УчитыватьНеиспользуемые И Не СтрокаОбъектНедвижимости.ИспользуетсяДляОперацийНеОблагаемыхНДС) Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураОтбораСФ.Вставить("КодОперацииДляДекларации");
	СтруктураОтбораСФ.КлючСтроки = СтрокаОбъектНедвижимости.КлючСтроки;
	
	Для Каждого ВидЦенности Из СоответствиеВидовЦенности Цикл
		
		СтруктураОтбораСФ.КодОперацииДляДекларации = ВидЦенности.Ключ;
		СтрокиСчетаФактуры = СчетаФактуры.НайтиСтроки(СтруктураОтбораСФ);
		СтрокаОбъектНедвижимости[ВидЦенности.Значение] = 0;
		СтрокаОбъектНедвижимости[ВидЦенности.Значение + "Восстановлена"] = 0;
		Для Каждого СтрокаСчетФактура Из СтрокиСчетаФактуры Цикл
			
			СтрокаОбъектНедвижимости[ВидЦенности.Значение] = СтрокаОбъектНедвижимости[ВидЦенности.Значение] + СтрокаСчетФактура.НДС;
			СтрокаОбъектНедвижимости[ВидЦенности.Значение + "Восстановлена"] = СтрокаОбъектНедвижимости[ВидЦенности.Значение + "Восстановлена"] + СтрокаСчетФактура.НДСВосстановлен;
			
		КонецЦикла;
	КонецЦикла;
		
	СтруктураОтбораСФ.Удалить("КодОперацииДляДекларации");
	
КонецПроцедуры

Процедура ЗаполнитьСуммыПоСчетамФактурам(УчитыватьНеиспользуемые = Ложь)
	
	Для Каждого СтрокаОбъектНедвижимости Из ОбъектыНедвижимости Цикл
		ЗаполнитьСуммыПоСчетамФактурамВСтроке(СтрокаОбъектНедвижимости, УчитыватьНеиспользуемые);
	КонецЦикла;

КонецПроцедуры
	
Процедура ОбъектыНедвижимостиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		// Инициализируем значение "КлючСтроки" для установки связи данной таблицы с таблицей 
		// "СчетаФактуры".
		// Значение должно быть уникальным
		НеУстановлено = Истина;
		Кандидат = ОбъектыНедвижимости.Количество();

		Пока НеУстановлено Цикл
			Если ОбъектыНедвижимости.Найти(Кандидат, "КлючСтроки") = Неопределено Тогда
				// Уникальное значение ключа
				ЭлементыФормы.ОбъектыНедвижимости.ТекущиеДанные.КлючСтроки = Кандидат;
				НеУстановлено = Ложь;
			Иначе
				// Такое значение ключа уже использовано
				Кандидат = Кандидат + 1;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ОтобразитьСчетаФактуры();

КонецПроцедуры

Процедура ОбъектыНедвижимостиПриАктивизацииСтроки(Элемент)

	УстановитьЗаголовокГруппыСчетаФактуры();
	
	ОтобразитьСчетаФактуры();
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

Процедура ОбъектыНедвижимостиПриИзмененииФлажка(Элемент, Колонка)
	
	ТекущиеДанныеОбъектНедвижимости = ЭлементыФормы.ОбъектыНедвижимости.ТекущиеДанные;
	
	Если ТекущиеДанныеОбъектНедвижимости = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НуженВопрос = Ложь;
	СтруктураОтбораСФ.Вставить("КодОперацииДляДекларации");
			
	СтруктураОтбораСФ.КлючСтроки = ТекущиеДанныеОбъектНедвижимости.КлючСтроки;
				
	Для Каждого ВидЦенности Из СоответствиеВидовЦенности Цикл
					
		СтруктураОтбораСФ.КодОперацииДляДекларации = ВидЦенности.Ключ;
		СтрокиСчетаФактуры = СчетаФактуры.НайтиСтроки(СтруктураОтбораСФ);
		СуммаПоВидуЦенности = 0;
		СуммаВосстановленаПоВидуЦенности = 0;
		Для Каждого СтрокаСчетФактура Из СтрокиСчетаФактуры Цикл
			СуммаПоВидуЦенности = СуммаПоВидуЦенности + СтрокаСчетФактура.НДС;
			СуммаВосстановленаПоВидуЦенности = СуммаВосстановленаПоВидуЦенности + СтрокаСчетФактура.НДСВосстановлен;
		КонецЦикла;
		Если ТекущиеДанныеОбъектНедвижимости[ВидЦенности.Значение] <> СуммаПоВидуЦенности
			Или ТекущиеДанныеОбъектНедвижимости[ВидЦенности.Значение + "Восстановлена"] <> СуммаВосстановленаПоВидуЦенности Тогда
			НуженВопрос = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
					
	СтруктураОтбораСФ.Удалить("КодОперацииДляДекларации");
		
	Если ТекущиеДанныеОбъектНедвижимости.ИспользуетсяДляОперацийНеОблагаемыхНДС Тогда
		Если НуженВопрос И ОтражатьВосстановлениеВКнигеПродаж Тогда
			ОтветДа = ОбщегоНазначения.ВопросДаНет("При установке флага суммы вычетов и восстановления будут заполнены по данным счетов-фактур. Вы уверены?");
			Если ОтветДа Тогда
				ЗаполнитьСуммыПоСчетамФактурамВСтроке(ТекущиеДанныеОбъектНедвижимости);
			Иначе
				ТекущиеДанныеОбъектНедвижимости.ИспользуетсяДляОперацийНеОблагаемыхНДС = Ложь;
			КонецЕсли;
		КонецЕсли;
	Иначе
		ТекущиеДанныеОбъектНедвижимости.ДатаНачалаИспользованияДляОпераций = '00010101';
		ТекущиеДанныеОбъектНедвижимости.ДоляВыручкиНеОблагаемаяНДС = 0;
		ТекущиеДанныеОбъектНедвижимости.СуммаНДСПоПодряднымРаботамВосстановлена = 0;
		ТекущиеДанныеОбъектНедвижимости.СуммаНДСПоСМРДляСобственногоПотребленияВосстановлена = 0;
		ТекущиеДанныеОбъектНедвижимости.СуммаНДСПоОбъектуНедвижимостиВосстановлена = 0;
		СтруктураОтбораСФ.КлючСтроки = ТекущиеДанныеОбъектНедвижимости.КлючСтроки;
		СтрокиСчетаФактуры = СчетаФактуры.НайтиСтроки(СтруктураОтбораСФ);
		Для Каждого СтрокаСчетФактура Из СтрокиСчетаФактуры Цикл
			СтрокаСчетФактура.СуммаБезНДСВосстановлена = 0;
			СтрокаСчетФактура.НДСВосстановлен = 0;
		КонецЦикла;
	КонецЕсли;
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

Процедура ОбъектыНедвижимостиОбъектНедвижимостиПриИзменении(Элемент)
	
	УстановитьЗаголовокГруппыСчетаФактуры();
	
КонецПроцедуры

Процедура ОбъектыНедвижимостиДоляВыручкиНеОблагаемаяНДСПриИзменении(Элемент)

	ТекущиеДанныеОбъектНедвижимости = ЭлементыФормы.ОбъектыНедвижимости.ТекущиеДанные;
	Если ТекущиеДанныеОбъектНедвижимости = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураОтбораСФ.КлючСтроки = ТекущиеДанныеОбъектНедвижимости.КлючСтроки;
	СтрокиСчетаФактуры = СчетаФактуры.НайтиСтроки(СтруктураОтбораСФ);
	Для Каждого СтрокаСчетФактура Из СтрокиСчетаФактуры Цикл
		РассчитатьСуммыВосстановления(ТекущиеДанныеОбъектНедвижимости, СтрокаСчетФактура);
	КонецЦикла;
	
	Если ОтражатьВосстановлениеВКнигеПродаж Тогда
		ЗаполнитьСуммыПоСчетамФактурамВСтроке(ТекущиеДанныеОбъектНедвижимости);
	Иначе
		ТекущиеДанныеОбъектНедвижимости.СуммаНДСПоПодряднымРаботамВосстановлена = ПолучитьСуммуВосстановления(ТекущиеДанныеОбъектНедвижимости.СуммаНДСПоПодряднымРаботам, ТекущиеДанныеОбъектНедвижимости.ДоляВыручкиНеОблагаемаяНДС);
		ТекущиеДанныеОбъектНедвижимости.СуммаНДСПоСМРДляСобственногоПотребленияВосстановлена = ПолучитьСуммуВосстановления(ТекущиеДанныеОбъектНедвижимости.СуммаНДСПоСМРДляСобственногоПотребления, ТекущиеДанныеОбъектНедвижимости.ДоляВыручкиНеОблагаемаяНДС);
		ТекущиеДанныеОбъектНедвижимости.СуммаНДСПоОбъектуНедвижимостиВосстановлена = ПолучитьСуммуВосстановления(ТекущиеДанныеОбъектНедвижимости.СуммаНДСПоОбъектуНедвижимости, ТекущиеДанныеОбъектНедвижимости.ДоляВыручкиНеОблагаемаяНДС);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбъектыНедвижимостиСуммаНДСПоПодряднымРаботамПриИзменении(Элемент)
	
	ТекущиеДанныеОбъектНедвижимости = ЭлементыФормы.ОбъектыНедвижимости.ТекущиеДанные;
	
	Если ТекущиеДанныеОбъектНедвижимости = Неопределено Или Не ТекущиеДанныеОбъектНедвижимости.ИспользуетсяДляОперацийНеОблагаемыхНДС Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанныеОбъектНедвижимости.СуммаНДСПоПодряднымРаботамВосстановлена = ПолучитьСуммуВосстановления(
														ТекущиеДанныеОбъектНедвижимости.СуммаНДСПоПодряднымРаботам,
														ТекущиеДанныеОбъектНедвижимости.ДоляВыручкиНеОблагаемаяНДС);
	
КонецПроцедуры

Процедура ОбъектыНедвижимостиСуммаНДСПоСМРДляСобственногоПотребленияПриИзменении(Элемент)
	
	ТекущиеДанныеОбъектНедвижимости = ЭлементыФормы.ОбъектыНедвижимости.ТекущиеДанные;
	
	Если ТекущиеДанныеОбъектНедвижимости = Неопределено Или Не ТекущиеДанныеОбъектНедвижимости.ИспользуетсяДляОперацийНеОблагаемыхНДС Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанныеОбъектНедвижимости.СуммаНДСПоСМРДляСобственногоПотребленияВосстановлена = ПолучитьСуммуВосстановления(
														ТекущиеДанныеОбъектНедвижимости.СуммаНДСПоСМРДляСобственногоПотребления,
														ТекущиеДанныеОбъектНедвижимости.ДоляВыручкиНеОблагаемаяНДС);
	
КонецПроцедуры

Процедура ОбъектыНедвижимостиСуммаНДСПоОбъектуНедвижимостиПриИзменении(Элемент)
	
	ТекущиеДанныеОбъектНедвижимости = ЭлементыФормы.ОбъектыНедвижимости.ТекущиеДанные;
	
	Если ТекущиеДанныеОбъектНедвижимости = Неопределено Или Не ТекущиеДанныеОбъектНедвижимости.ИспользуетсяДляОперацийНеОблагаемыхНДС Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанныеОбъектНедвижимости.СуммаНДСПоОбъектуНедвижимостиВосстановлена = ПолучитьСуммуВосстановления(
														ТекущиеДанныеОбъектНедвижимости.СуммаНДСПоОбъектуНедвижимости,
														ТекущиеДанныеОбъектНедвижимости.ДоляВыручкиНеОблагаемаяНДС);
	
КонецПроцедуры

Процедура ОбъектыНедвижимостиПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	ОформлениеСтроки.Ячейки.ДатаНачалаИспользованияДляОпераций.ОтметкаНезаполненного = ДанныеСтроки.ИспользуетсяДляОперацийНеОблагаемыхНДС И (ДанныеСтроки.ДатаНачалаИспользованияДляОпераций = '00010101');
	ОформлениеСтроки.Ячейки.СтоимостьОбъектаНедвижимости.ОтметкаНезаполненного = ДанныеСтроки.ИспользуетсяДляОперацийНеОблагаемыхНДС И (ДанныеСтроки.СтоимостьОбъектаНедвижимости = 0);
	ОформлениеСтроки.Ячейки.СуммаНДСПоОбъектуНедвижимости.ТолькоПросмотр = ОтражатьВосстановлениеВКнигеПродаж И ДанныеСтроки.ИспользуетсяДляОперацийНеОблагаемыхНДС;
	ОформлениеСтроки.Ячейки.СуммаНДСПоПодряднымРаботам.ТолькоПросмотр = ОтражатьВосстановлениеВКнигеПродаж И ДанныеСтроки.ИспользуетсяДляОперацийНеОблагаемыхНДС;
	ОформлениеСтроки.Ячейки.СуммаНДСПоСМРДляСобственногоПотребления.ТолькоПросмотр = ОтражатьВосстановлениеВКнигеПродаж И ДанныеСтроки.ИспользуетсяДляОперацийНеОблагаемыхНДС;
	ОформлениеСтроки.Ячейки.ДатаНачалаИспользованияДляОпераций.ТолькоПросмотр = Не ДанныеСтроки.ИспользуетсяДляОперацийНеОблагаемыхНДС;
	ОформлениеСтроки.Ячейки.ДоляВыручкиНеОблагаемаяНДС.ТолькоПросмотр = Не ДанныеСтроки.ИспользуетсяДляОперацийНеОблагаемыхНДС;
	ОформлениеСтроки.Ячейки.ДоляВыручкиНеОблагаемаяНДС.ОтметкаНезаполненного = ДанныеСтроки.ИспользуетсяДляОперацийНеОблагаемыхНДС И ДанныеСтроки.ДоляВыручкиНеОблагаемаяНДС = 0;
	ОформлениеСтроки.Ячейки.СуммаНДСПоОбъектуНедвижимостиВосстановлена.ТолькоПросмотр = Не (Не ОтражатьВосстановлениеВКнигеПродаж И ДанныеСтроки.ИспользуетсяДляОперацийНеОблагаемыхНДС);
	ОформлениеСтроки.Ячейки.СуммаНДСПоПодряднымРаботамВосстановлена.ТолькоПросмотр = Не (Не ОтражатьВосстановлениеВКнигеПродаж И ДанныеСтроки.ИспользуетсяДляОперацийНеОблагаемыхНДС);
	ОформлениеСтроки.Ячейки.СуммаНДСПоСМРДляСобственногоПотребленияВосстановлена.ТолькоПросмотр = Не (Не ОтражатьВосстановлениеВКнигеПродаж И ДанныеСтроки.ИспользуетсяДляОперацийНеОблагаемыхНДС);
	
КонецПроцедуры

Процедура ОбъектыНедвижимостиПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)

	Если НоваяСтрока И ОтменаРедактирования Тогда
		Возврат;		
	КонецЕсли;
	
	ТекущиеДанныеОбъектНедвижимости = Элемент.ТекущиеДанные;
	Если ТекущиеДанныеОбъектНедвижимости = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураОтбора = Новый Структура("ОбъектНедвижимости", ТекущиеДанныеОбъектНедвижимости.ОбъектНедвижимости);
	СтрокиОбъектыНедвижимости = ОбъектыНедвижимости.НайтиСтроки(СтруктураОтбора);
	Если СтрокиОбъектыНедвижимости.Количество() <> 0 Тогда
		Для Каждого СтрокаОбъектНедвижимости Из СтрокиОбъектыНедвижимости Цикл
			Если СтрокаОбъектНедвижимости.НомерСтроки <> ТекущиеДанныеОбъектНедвижимости.НомерСтроки Тогда
				ОбщегоНазначения.СообщитьОбОшибке("В табличной части уже есть строка с указанным объектом недвижимости (строка № " + СтрокиОбъектыНедвижимости[0].НомерСтроки + ")", Отказ);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТАБЛИЧНОГО ПОЛЯ СЧЕТАФАКТУРЫ

Процедура РассчитатьСуммыВосстановления(СтрокаОбъектНедвижимости, СтрокаСчетФактура)
	
	Если СтрокаСчетФактура = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если СтрокаОбъектНедвижимости = Неопределено Или СтрокаОбъектНедвижимости.ДоляВыручкиНеОблагаемаяНДС = 0 Тогда
		СтрокаСчетФактура.СуммаБезНДСВосстановлена = 0;
		СтрокаСчетФактура.НДСВосстановлен = 0;
	Иначе
		СтрокаСчетФактура.СуммаБезНДСВосстановлена = ПолучитьСуммуВосстановления(СтрокаСчетФактура.СуммаБезНДС, СтрокаОбъектНедвижимости.ДоляВыручкиНеОблагаемаяНДС);
		СтрокаСчетФактура.НДСВосстановлен = ПолучитьСуммуВосстановления(СтрокаСчетФактура.НДС, СтрокаОбъектНедвижимости.ДоляВыручкиНеОблагаемаяНДС);
	КонецЕсли;
	
КонецПроцедуры

Процедура СчетаФактурыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		ЭлементыФормы.СчетаФактуры.ТекущиеДанные.КлючСтроки = ЭлементыФормы.СчетаФактуры.ОтборСтрок.КлючСтроки.Значение;
	КонецЕсли;
	
КонецПроцедуры

Процедура СчетаФактурыСуммаБезНДСПриИзменении(Элемент)
	
	ТекущиеДанныеОбъектНедвижимости = ЭлементыФормы.ОбъектыНедвижимости.ТекущиеДанные;
	ТекущиеДанныеСчетФактура = ЭлементыФормы.СчетаФактуры.ТекущиеДанные;
	
	Если ТекущиеДанныеСчетФактура = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанныеСчетФактура.НДС = УчетНДС.РассчитатьСуммуНДС(ТекущиеДанныеСчетФактура.СуммаБезНДС, Истина, Ложь, УчетНДС.ПолучитьСтавкуНДС(ТекущиеДанныеСчетФактура.СтавкаНДС));
	
	Если ТекущиеДанныеОбъектНедвижимости = Неопределено Или ТекущиеДанныеОбъектНедвижимости.ДоляВыручкиНеОблагаемаяНДС = 0 Тогда
		ТекущиеДанныеСчетФактура.СуммаБезНДСВосстановлена = 0;
		ТекущиеДанныеСчетФактура.НДСВосстановлен = 0;
	Иначе
		ТекущиеДанныеСчетФактура.СуммаБезНДСВосстановлена = ПолучитьСуммуВосстановления(ТекущиеДанныеСчетФактура.СуммаБезНДС, ТекущиеДанныеОбъектНедвижимости.ДоляВыручкиНеОблагаемаяНДС);
		ТекущиеДанныеСчетФактура.НДСВосстановлен = ПолучитьСуммуВосстановления(ТекущиеДанныеСчетФактура.НДС, ТекущиеДанныеОбъектНедвижимости.ДоляВыручкиНеОблагаемаяНДС);
	КонецЕсли;
	
	Если ТекущиеДанныеОбъектНедвижимости <> Неопределено Тогда
		ЗаполнитьСуммыПоСчетамФактурамВСтроке(ТекущиеДанныеОбъектНедвижимости);
	КонецЕсли;	
	
КонецПроцедуры

Процедура СчетаФактурыСтавкаНДСПриИзменении(Элемент)
	
	ТекущиеДанныеОбъектНедвижимости = ЭлементыФормы.ОбъектыНедвижимости.ТекущиеДанные;
	ТекущиеДанныеСчетФактура = ЭлементыФормы.СчетаФактуры.ТекущиеДанные;
	
	Если ТекущиеДанныеСчетФактура = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанныеСчетФактура.НДС = УчетНДС.РассчитатьСуммуНДС(ТекущиеДанныеСчетФактура.СуммаБезНДС, Истина, Ложь, УчетНДС.ПолучитьСтавкуНДС(ТекущиеДанныеСчетФактура.СтавкаНДС));
	
	Если ТекущиеДанныеОбъектНедвижимости = Неопределено Или ТекущиеДанныеОбъектНедвижимости.ДоляВыручкиНеОблагаемаяНДС = 0 Тогда
		ТекущиеДанныеСчетФактура.НДСВосстановлен = 0;
	Иначе
		ТекущиеДанныеСчетФактура.НДСВосстановлен = ПолучитьСуммуВосстановления(ТекущиеДанныеСчетФактура.НДС, ТекущиеДанныеОбъектНедвижимости.ДоляВыручкиНеОблагаемаяНДС);
	КонецЕсли;
		
	Если ТекущиеДанныеОбъектНедвижимости <> Неопределено Тогда
		ЗаполнитьСуммыПоСчетамФактурамВСтроке(ТекущиеДанныеОбъектНедвижимости);
	КонецЕсли;	
	
КонецПроцедуры

Процедура СчетаФактурыНДСПриИзменении(Элемент)

	ТекущиеДанныеОбъектНедвижимости = ЭлементыФормы.ОбъектыНедвижимости.ТекущиеДанные;
	ТекущиеДанныеСчетФактура = ЭлементыФормы.СчетаФактуры.ТекущиеДанные;
	
	Если ТекущиеДанныеСчетФактура = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанныеОбъектНедвижимости = Неопределено Или ТекущиеДанныеОбъектНедвижимости.ДоляВыручкиНеОблагаемаяНДС = 0 Тогда
		ТекущиеДанныеСчетФактура.НДСВосстановлен = 0;
	Иначе
		ТекущиеДанныеСчетФактура.НДСВосстановлен = ПолучитьСуммуВосстановления(ТекущиеДанныеСчетФактура.НДС, ТекущиеДанныеОбъектНедвижимости.ДоляВыручкиНеОблагаемаяНДС);
	КонецЕсли;
	
	Если ТекущиеДанныеОбъектНедвижимости <> Неопределено Тогда
		ЗаполнитьСуммыПоСчетамФактурамВСтроке(ТекущиеДанныеОбъектНедвижимости);
	КонецЕсли;	
	
КонецПроцедуры

Процедура СчетаФактурыВидЦенностиПриИзменении(Элемент)
	
	ТекущиеДанныеСчетФактура = ЭлементыФормы.СчетаФактуры.ТекущиеДанные;
	Если ТекущиеДанныеСчетФактура = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НовыйКодОперацииДляДекларации = ПолучитьКодОперацииДляДекларации(ТекущиеДанныеСчетФактура.ВидЦенности);
	Если НовыйКодОперацииДляДекларации <> Неопределено Тогда
		ТекущиеДанныеСчетФактура.КодОперацииДляДекларации = НовыйКодОперацииДляДекларации;
	КонецЕсли;
	
КонецПроцедуры

Процедура СчетаФактурыПослеУдаления(Элемент)
	
	ТекущаяСтрокаОбъектНедвижимости = ЭлементыФормы.ОбъектыНедвижимости.ТекущиеДанные;
	
	Если ТекущаяСтрокаОбъектНедвижимости = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ОтражатьВосстановлениеВКнигеПродаж Тогда
		ЗаполнитьСуммыПоСчетамФактурамВСтроке(ТекущаяСтрокаОбъектНедвижимости);
    КонецЕсли;
		
КонецПроцедуры

Процедура СчетаФактурыСуммаБезНДСВосстановленаПриИзменении(Элемент)
	
	ТекущиеДанныеОбъектНедвижимости = ЭлементыФормы.ОбъектыНедвижимости.ТекущиеДанные;

	Если ТекущиеДанныеОбъектНедвижимости <> Неопределено Тогда
		ЗаполнитьСуммыПоСчетамФактурамВСтроке(ТекущиеДанныеОбъектНедвижимости);
	КонецЕсли;	

КонецПроцедуры

Процедура СчетаФактурыНДСВосстановленПриИзменении(Элемент)
	
	ТекущиеДанныеОбъектНедвижимости = ЭлементыФормы.ОбъектыНедвижимости.ТекущиеДанные;
	
	Если ТекущиеДанныеОбъектНедвижимости <> Неопределено Тогда
		ЗаполнитьСуммыПоСчетамФактурамВСтроке(ТекущиеДанныеОбъектНедвижимости);
	КонецЕсли;	
	
КонецПроцедуры

Процедура СчетаФактурыКодОперацииДляДекларацииПриИзменении(Элемент)
	
	ТекущиеДанныеОбъектНедвижимости = ЭлементыФормы.ОбъектыНедвижимости.ТекущиеДанные;
	
	Если ТекущиеДанныеОбъектНедвижимости <> Неопределено Тогда
		ЗаполнитьСуммыПоСчетамФактурамВСтроке(ТекущиеДанныеОбъектНедвижимости);
	КонецЕсли;	
	
КонецПроцедуры

Процедура СчетаФактурыСчетФактураНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ТекущиеДанныеСчетФактура = ЭлементыФормы.СчетаФактуры.ТекущиеДанные;
	
	Если ТекущиеДанныеСчетФактура = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	Отбор = Новый Структура("Организация", Организация);
	Если ЗначениеЗаполнено(ТекущиеДанныеСчетФактура.Поставщик) Тогда
		Отбор.Вставить("Контрагент", ТекущиеДанныеСчетФактура.Поставщик);
	КонецЕсли;
	
	ОграничениеТипов = Новый Массив;
	ОграничениеТипов.Добавить(Тип("ДокументСсылка.ПоступлениеТоваровУслуг"));
	ОграничениеТипов.Добавить(Тип("ДокументСсылка.ПоступлениеДопРасходов"));
	ОграничениеТипов.Добавить(Тип("ДокументСсылка.СчетФактураВыданный"));
	ОграничениеТипов.Добавить(Тип("ДокументСсылка.СчетФактураПолученный"));
	ОграничениеТипов.Добавить(Тип("ДокументСсылка.ПоступлениеИзПереработки"));
	ОграничениеТипов.Добавить(Тип("ДокументСсылка.ПринятиеКУчетуОС"));
 	ОграничениеТипов.Добавить(Тип("ДокументСсылка.ГТДИмпорт"));
	ОграничениеТипов.Добавить(Тип("ДокументСсылка.ОтражениеНДСКВычету"));
	ОграничениеТипов.Добавить(Тип("ДокументСсылка.ОтчетКомиссионераОПродажах"));
	
	РаботаСДиалогами.НачалоВыбораЗначенияДокументаСоставногоТипа(ЭтотОбъект, ЭтаФорма, Элемент, СтандартнаяОбработка, Отбор, "СчетаФактуры", ОграничениеТипов);

КонецПроцедуры

// Процедура разрешения/запрещения редактирования номера документа
Процедура ДействияФормыРедактироватьНомер(Кнопка)
	
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
			
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

СтруктураОтбораСФ = Новый Структура("КлючСтроки");

СоответствиеВидовЦенности = Новый Соответствие;
СоответствиеВидовЦенности.Вставить(Перечисления.НДСКодыОперацийПоОбъектамНедвижимости.СМРПодрядные, "СуммаНДСПоПодряднымРаботам");
СоответствиеВидовЦенности.Вставить(Перечисления.НДСКодыОперацийПоОбъектамНедвижимости.СМРСобственные, "СуммаНДСПоСМРДляСобственногоПотребления");
СоответствиеВидовЦенности.Вставить(Перечисления.НДСКодыОперацийПоОбъектамНедвижимости.Приобретение, "СуммаНДСПоОбъектуНедвижимости");

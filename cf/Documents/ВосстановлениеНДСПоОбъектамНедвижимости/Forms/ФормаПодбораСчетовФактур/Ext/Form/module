////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Процедура ЗаполнитьСписокСчетовФактур(Дополнять = Ложь);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("ОС", ОсновноеСредство);
	Запрос.УстановитьПараметр("СостояниеОС", Перечисления.НДССостоянияОСНМА.ОжидаетсяВводВЭксплуатацию);
	Запрос.УстановитьПараметр("КонецПериода", ДобавитьМесяц(КонецГода(Дата), 1));
	Запрос.УстановитьПараметр("КромеСчетовФактур", ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(СчетаФактурыПодбор.ВыгрузитьКолонку("СчетФактура")));
	Запрос.Текст = "ВЫБРАТЬ
	               |	НДСпоОСиНМАОбороты.СчетФактура,
	               |	НДСпоОСиНМАОбороты.ВидЦенности,
	               |	НДСпоОСиНМАОбороты.СтавкаНДС,
	               |	НДСпоОСиНМАОбороты.СчетУчетаНДС,
	               |	НДСпоОСиНМАОбороты.СуммаБезНДСРасход КАК СуммаБезНДС,
	               |	НДСпоОСиНМАОбороты.НДСРасход КАК НДС
	               |ИЗ
	               |	РегистрНакопления.НДСпоОСиНМА.Обороты(
	               |			,
	               |			&КонецПериода,
	               |			Регистратор,
	               |			Организация = &Организация
	               |				И Объект = &ОС
	               |				И Состояние = &СостояниеОС) КАК НДСпоОСиНМАОбороты
	               |ГДЕ
	               |	(НДСпоОСиНМАОбороты.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС
	               |			ИЛИ НДСпоОСиНМАОбороты.Регистратор ССЫЛКА Документ.МодернизацияОС
	               |			ИЛИ НДСпоОСиНМАОбороты.Регистратор ССЫЛКА Документ.ИзменениеСостоянияОС)
	               |	И НДСпоОСиНМАОбороты.СуммаБезНДСРасход + НДСпоОСиНМАОбороты.НДСРасход > 0";
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаСчетовФактур = Результат.Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СписокСчетовФактур", ТаблицаСчетовФактур.ВыгрузитьКолонку("СчетФактура"));
	Запрос.Текст = "ВЫБРАТЬ
	               |	НДСЗаписиКнигиПокупок.СчетФактура,
	               |	НДСЗаписиКнигиПокупок.ВидЦенности,
	               |	НДСЗаписиКнигиПокупок.Поставщик,
	               |	СУММА(НДСЗаписиКнигиПокупок.СуммаБезНДС) КАК СуммаБезНДС,
	               |	НДСЗаписиКнигиПокупок.СтавкаНДС,
	               |	СУММА(НДСЗаписиКнигиПокупок.НДС) КАК НДС,
	               |	НДСЗаписиКнигиПокупок.СчетУчетаНДС
	               |ИЗ
	               |	РегистрНакопления.НДСЗаписиКнигиПокупок КАК НДСЗаписиКнигиПокупок
	               |ГДЕ
	               |	НДСЗаписиКнигиПокупок.СчетФактура В(&СписокСчетовФактур)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	НДСЗаписиКнигиПокупок.СтавкаНДС,
	               |	НДСЗаписиКнигиПокупок.ВидЦенности,
	               |	НДСЗаписиКнигиПокупок.СчетФактура,
	               |	НДСЗаписиКнигиПокупок.Поставщик,
	               |	НДСЗаписиКнигиПокупок.СчетУчетаНДС
	               |
	               |ИМЕЮЩИЕ
	               |	СУММА(НДСЗаписиКнигиПокупок.СуммаБезНДС) + СУММА(НДСЗаписиКнигиПокупок.НДС) > 0";
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаВычетов = Результат.Выгрузить();
	СтруктураОтбора = Новый Структура("СчетФактура, ВидЦенности, СтавкаНДС, СчетУчетаНДС");
	ТаблицаВычетов.Индексы.Добавить("СчетФактура, ВидЦенности, СтавкаНДС, СчетУчетаНДС");
	СтруктураОтбораСуществующих = Новый Структура("СчетФактура, ВидЦенности, СтавкаНДС");
	
	Для Каждого СтрокаСчетФактура Из ТаблицаСчетовФактур Цикл
		
		ЗаполнитьЗначенияСвойств(СтруктураОтбора, СтрокаСчетФактура);
		ЗаполнитьЗначенияСвойств(СтруктураОтбораСуществующих, СтрокаСчетФактура);
		
		СтрокиОтбора = ТаблицаВычетов.НайтиСтроки(СтруктураОтбора);
		
		Для Каждого СтрокаОтбора из СтрокиОтбора Цикл
			
			Если СтрокаСчетФактура.СуммаБезНДС + СтрокаСчетФактура.НДС = 0 Тогда
				Прервать;
			КонецЕсли;
			
			Если Дополнять Тогда
				СуществующиеСФ = СчетаФактурыПодбор.НайтиСтроки(СтруктураОтбораСуществующих);
				Для Каждого СуществующаяСФ Из СуществующиеСФ Цикл
					СуммаБезНДСВычета = Мин(СуществующаяСФ.СуммаБезНДС, СтрокаСчетФактура.СуммаБезНДС);
					НДСВычета = Мин(СуществующаяСФ.НДС, СтрокаСчетФактура.НДС);
					
					Если СуммаБезНДСВычета - СуществующаяСФ.СуммаБезНДС < 0 Тогда
						Сообщить("Сумма без НДС по счету-фактуре «" + СуществующаяСФ.СчетФактура + "» превышает сумму без НДС вычета данным книги покупок", СтатусСообщения.Внимание);
					КонецЕсли;
					Если СуммаБезНДСВычета - СуществующаяСФ.СуммаБезНДС < 0 Тогда
						Сообщить("Сумма НДС по счету-фактуре «" + СуществующаяСФ.СчетФактура + "» превышает сумму НДС вычета данным книги покупок", СтатусСообщения.Внимание);
					КонецЕсли;
					
					СтрокаСчетФактура.СуммаБезНДС = СтрокаСчетФактура.СуммаБезНДС - СуммаБезНДСВычета;
					СтрокаСчетФактура.НДС = СтрокаСчетФактура.НДС - НДСВычета;
				КонецЦикла;
			КонецЕсли;
			
			Если СтрокаСчетФактура.СуммаБезНДС + СтрокаСчетФактура.НДС = 0 Тогда
				Прервать;
			КонецЕсли;
			
			СуммаБезНДСВычета = Мин(СтрокаСчетФактура.СуммаБезНДС, СтрокаОтбора.СуммаБезНДС);
			НДСВычета = Мин(СтрокаСчетФактура.НДС, СтрокаОтбора.НДС);
			
			НоваяСтрока = СчетаФактурыПодбор.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОтбора);
			НоваяСтрока.СуммаБезНДС = СуммаБезНДСВычета;
			НоваяСтрока.НДС = НДСВычета;
			Если НоваяСтрока.ВидЦенности = Перечисления.ВидыЦенностей.ОбъектыНезавершенногоСтроительства
				ИЛИ НоваяСтрока.ВидЦенности = Перечисления.ВидыЦенностей.СМРПодрядные
				ИЛИ НоваяСтрока.ВидЦенности = Перечисления.ВидыЦенностей.СМРСобственнымиСилами Тогда
				НоваяСтрока.Выбрана = Истина;
			КонецЕсли;
			НоваяСтрока.КодОперацииДляДекларации = ПолучитьКодОперацииДляДекларации(НоваяСтрока.ВидЦенности);
			
			СтрокаСчетФактура.СуммаБезНДС = СтрокаСчетФактура.СуммаБезНДС - СуммаБезНДСВычета;
			СтрокаСчетФактура.НДС = СтрокаСчетФактура.НДС - НДСВычета;
			СтрокаОтбора.СуммаБезНДС = СтрокаОтбора.СуммаБезНДС - СуммаБезНДСВычета;
			СтрокаОтбора.НДС = СтрокаОтбора.НДС - НДСВычета;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ УПРАВЛЕНИЯ ВНЕШНИМ ВИДОМ ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

Процедура КоманднаяПанельСчетаФактурыВыделитьВсе(Кнопка)
	
	Для Каждого СтрокаСчетФактура Из СчетаФактурыПодбор Цикл
		СтрокаСчетФактура.Выбрана = Истина;
	КонецЦикла;
	
КонецПроцедуры

Процедура КоманднаяПанельСчетаФактурыСнятьВыделениеВсех(Кнопка)
	
	Для Каждого СтрокаСчетФактура Из СчетаФактурыПодбор Цикл
		СтрокаСчетФактура.Выбрана = Ложь;
	КонецЦикла;

КонецПроцедуры

Процедура КоманднаяПанельСчетаФактурыЗаполнить(Кнопка)
	
	Если СчетаФактурыПодбор.Количество() <> 0 Тогда
		ОтветНаВопрос = ОбщегоНазначения.ВопросДаНет("Перед заполнением табличное поле будет очищено. Продолжить?");
		Если ОтветНаВопрос Тогда
			СчетаФактурыПодбор.Очистить();
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьСписокСчетовФактур(Ложь);
	
КонецПроцедуры

Процедура ОсновныеДействияФормыСохранить(Кнопка)

	СтрокиКУдалению = СчетаФактурыПодбор.НайтиСтроки(Новый Структура("Выбрана", Ложь));
	Для Каждого СтрокаКУдалению из СтрокиКУдалению Цикл
		СчетаФактурыПодбор.Удалить(СтрокаКУдалению);
	КонецЦикла;	
		
	ЭтаФорма.Закрыть(СчетаФактурыПодбор);
	
КонецПроцедуры

Процедура КоманднаяПанельСчетаФактурыОчистить(Кнопка)
	
	ОтветНаВопрос = ОбщегоНазначения.ВопросДаНет("Вы уверены, что хотите очистить список счетов-фактур");
	Если ОтветНаВопрос Тогда
		СчетаФактурыПодбор.Очистить();
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельСчетаФактурыДополнить(Кнопка)
	
	ЗаполнитьСписокСчетовФактур(Истина);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СВОЙСТВ И КАТЕГОРИЙ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТАБЛИЧНОГО ПОЛЯ СЧЕТАФАКТУРЫ

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

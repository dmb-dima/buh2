////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Выполняет перерасчет налога для указанного списка физлиц 
Процедура Рассчитать() Экспорт

	// Используем временную таблицу для исбежания моргания в форме документа
	ВременнаяТаблицаНДФЛ = РаботникиОрганизации.ВыгрузитьКолонки();
	ВременнаяТаблицаНДФЛ.Колонки.Добавить("МесяцНалоговогоПериода");
	ВременнаяТаблицаНДФЛ.Индексы.Добавить("ФизЛицо");
	
	// Очистим имеющиеся данные
	ВременнаяТаблицаНДФЛ.ЗаполнитьЗначения(0,"НалогПоСтавке09,НалогПоСтавке13,НалогПоСтавке35,ПримененныйВычетЛичный,ПримененныйВычетНаДетей,ПримененныйВычетНаДетейИнвалидов,ПримененныйВычетНаДетейДвойной,ПримененныйВычетНаДетейИнвалидовДвойной,ПримененныйВычетНаДетейДвойнойВторой,ПримененныйВычетНаДетейИнвалидовДвойнойВторой,ПримененныйВычетИмущественныйРасход,ПримененныйВычетИмущественныйПроцентыПоКредитам,ПримененныйВычетИмущественныйПроцентыПриПерекредитовании");
	ВременнаяТаблицаНДФЛ.ЗаполнитьЗначения(Справочники.ПодразделенияОрганизаций.ПустаяСсылка(),"ПодразделениеОрганизации");
	
	// определим месяц налогового периода, по который будем рассчитывать налог с начала года 						 
	Если Год(Дата) = НалоговыйПериод Тогда
		МесяцНалоговогоПериода = НачалоМесяца(Дата);
	Иначе	
		// последний месяц налогового периода
		МесяцНалоговогоПериода = Дата(НалоговыйПериод, 12, 1);
	КонецЕсли; 		
	
	// дата, по которую будем учитывать зарегистрированные доходы и начисленные налоги 
	ПериодРегистрации = КонецМесяца(Дата);
	
	ГоловнаяОрганизация = ОбщегоНазначения.ГоловнаяОрганизация(Организация);
	
	//------------------------------------------------------------------------------------------------------
	// Расчет налога по ставке 13% (30% для нерезидентов)
	
	// Составим текст запроса для выбора списка физлиц, по которым надо считать НДФЛ
	СписокФизЛицТекст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТЧРаботникиОрганизации.ФизЛицо
	|ИЗ
	|	Документ.НДФЛПерерасчет.РаботникиОрганизации КАК ТЧРаботникиОрганизации
	|ГДЕ
	|	ТЧРаботникиОрганизации.Ссылка = &парамРегистратор";
	
	// получение результата НДФЛ по ставке 13 процентов
	// для него передается Организация, период и ссылка на регистратор
	ДанныеНДФЛ = ПроведениеРасчетов.ПолучитьДанныеНДФЛПоРегистратору(НачалоГода(МесяцНалоговогоПериода), МесяцНалоговогоПериода, ПериодРегистрации, Организация, ГоловнаяОрганизация, Ссылка, СписокФизлицТекст,,Истина);
	
	// Перепишем данные расчета в табличную часть документа
	// Учитывая, что в выборке данные расчета отсортированы по месяцам налогового периода и все значения 
	// хранятся нарастающим итогом, то для каждого физлица просто возьмем данные за последний рассчитанный месяц  
	Если ДанныеНДФЛ <> НеОпределено Тогда
		
		ДанныеНДФЛ.Свернуть("ФизЛицо, ПодразделениеОрганизации", "Налог,ПримененныйВычетЛичный,ПримененныйВычетНаДетей,ПримененныйВычетНаДетейДвойной,ПримененныйВычетНаДетейДвойнойВторой,ПримененныйВычетНаДетейИнвалидов,ПримененныйВычетНаДетейИнвалидовДвойной,ПримененныйВычетНаДетейИнвалидовДвойнойВторой,ПримененныйВычетИмущественныйРасход,ПримененныйВычетИмущественныйПроцентыПоКредитам,ПримененныйВычетИмущественныйПроцентыПриПерекредитовании");
		ДанныеНДФЛ.Колонки.Налог.Имя = "НалогПоСтавке13";
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДанныеНДФЛ.ФизЛицо КАК ФизЛицо,
		|	ДанныеНДФЛ.НалогПоСтавке13,
		|	ДанныеНДФЛ.ПримененныйВычетЛичный,
		|	ДанныеНДФЛ.ПримененныйВычетНаДетей,
		|	ДанныеНДФЛ.ПримененныйВычетНаДетейДвойной,
		|	ДанныеНДФЛ.ПримененныйВычетНаДетейДвойнойВторой,
		|	ДанныеНДФЛ.ПримененныйВычетНаДетейИнвалидов,
		|	ДанныеНДФЛ.ПримененныйВычетНаДетейИнвалидовДвойной,
		|	ДанныеНДФЛ.ПримененныйВычетНаДетейИнвалидовДвойнойВторой,
		|	ДанныеНДФЛ.ПримененныйВычетИмущественныйРасход,
		|	ДанныеНДФЛ.ПримененныйВычетИмущественныйПроцентыПоКредитам,
		|	ДанныеНДФЛ.ПримененныйВычетИмущественныйПроцентыПриПерекредитовании,
		|	ДанныеНДФЛ.ПодразделениеОрганизации
		|ПОМЕСТИТЬ ВТСтрокиНДФЛ
		|ИЗ
		|	&ДанныеНДФЛ КАК ДанныеНДФЛ";
		Запрос.УстановитьПараметр("ДанныеНДФЛ", ДанныеНДФЛ);
		Запрос.Выполнить();
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТЧРаботникиОрганизации.ФизЛицо КАК ФизЛицо,
		|	МИНИМУМ(ТЧРаботникиОрганизации.НомерСтроки) КАК НомерСтроки,
		|	ДанныеНДФЛ.НалогПоСтавке13,
		|	ДанныеНДФЛ.ПримененныйВычетЛичный,
		|	ДанныеНДФЛ.ПримененныйВычетНаДетей,
		|	ДанныеНДФЛ.ПримененныйВычетНаДетейДвойной,
		|	ДанныеНДФЛ.ПримененныйВычетНаДетейДвойнойВторой,
		|	ДанныеНДФЛ.ПримененныйВычетНаДетейИнвалидов,
		|	ДанныеНДФЛ.ПримененныйВычетНаДетейИнвалидовДвойной,
		|	ДанныеНДФЛ.ПримененныйВычетНаДетейИнвалидовДвойнойВторой,
		|	ДанныеНДФЛ.ПримененныйВычетИмущественныйРасход,
		|	ДанныеНДФЛ.ПримененныйВычетИмущественныйПроцентыПоКредитам,
		|	ДанныеНДФЛ.ПримененныйВычетИмущественныйПроцентыПриПерекредитовании,
		|	ДанныеНДФЛ.ПодразделениеОрганизации
		|ИЗ
		|	Документ.НДФЛПерерасчет.РаботникиОрганизации КАК ТЧРаботникиОрганизации
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтрокиНДФЛ КАК ДанныеНДФЛ
		|		ПО ТЧРаботникиОрганизации.ФизЛицо = ДанныеНДФЛ.ФизЛицо
		|ГДЕ
		|	ТЧРаботникиОрганизации.Ссылка = &парамРегистратор
		|
		|СГРУППИРОВАТЬ ПО
		|	ТЧРаботникиОрганизации.ФизЛицо,
		|	ДанныеНДФЛ.НалогПоСтавке13,
		|	ДанныеНДФЛ.ПримененныйВычетЛичный,
		|	ДанныеНДФЛ.ПримененныйВычетНаДетей,
		|	ДанныеНДФЛ.ПримененныйВычетНаДетейДвойной,
		|	ДанныеНДФЛ.ПримененныйВычетНаДетейДвойнойВторой,
		|	ДанныеНДФЛ.ПримененныйВычетНаДетейИнвалидов,
		|	ДанныеНДФЛ.ПримененныйВычетНаДетейИнвалидовДвойной,
		|	ДанныеНДФЛ.ПримененныйВычетНаДетейИнвалидовДвойнойВторой,
		|	ДанныеНДФЛ.ПримененныйВычетИмущественныйРасход,
		|	ДанныеНДФЛ.ПримененныйВычетИмущественныйПроцентыПоКредитам,
		|	ДанныеНДФЛ.ПримененныйВычетИмущественныйПроцентыПриПерекредитовании,
		|	ДанныеНДФЛ.ПодразделениеОрганизации
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
		Запрос.УстановитьПараметр("парамРегистратор", Ссылка);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(ВременнаяТаблицаНДФЛ.Добавить(),Выборка);
		КонецЦикла;
		
	КонецЕсли;

	//------------------------------------------------------------------------------------------------------
	// Расчет налогов по ставке 9 и 35 %
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("парамРегистратор", Ссылка);
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация", ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("парамСтавкаРезидента09", ПроцедурыУправленияПерсоналом.ЗначениеСтавкиНДФЛотСтавкиНалогообложенияРезидента(Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка09));
	Запрос.УстановитьПараметр("парамСтавкаРезидента35", ПроцедурыУправленияПерсоналом.ЗначениеСтавкиНДФЛотСтавкиНалогообложенияРезидента(Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка35));
	Запрос.УстановитьПараметр("парамСтавкаНеРезидента", ПроцедурыУправленияПерсоналом.ЗначениеСтавкиНДФЛСНерезидента());
	Запрос.УстановитьПараметр("парамСтавкаНеРезидентаСДивидендов", ПроцедурыУправленияПерсоналом.ЗначениеСтавкиНДФЛСНерезидента(Справочники.ДоходыНДФЛ.Код1010,КонецГода(МесяцНалоговогоПериода)));

	Запрос.УстановитьПараметр("парамПериодРегистрации", ПериодРегистрации);
	Запрос.УстановитьПараметр("парамКонецМесяцаНалоговогоПериода", КонецМесяца(МесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("парамНачалоГода", НачалоГода(МесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("парамКонецГода", КонецГода(МесяцНалоговогоПериода));
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТЧРаботникиОрганизации.ФизЛицо КАК ФизЛицо
	|ПОМЕСТИТЬ ВТСписокФизЛиц
	|ИЗ
	|	Документ.НДФЛПерерасчет.РаботникиОрганизации КАК ТЧРаботникиОрганизации
	|ГДЕ
	|	ТЧРаботникиОрганизации.Ссылка = &парамРегистратор
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыСБюджетом.ФизЛицо КАК ФизЛицо,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСБюджетом.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09)
	|				ТОГДА РасчетыСБюджетом.Налог
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НалогПоСтавке09,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСБюджетом.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка35)
	|				ТОГДА РасчетыСБюджетом.Налог
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НалогПоСтавке35,
	|	РасчетыСБюджетом.ПодразделениеОрганизации
	|ПОМЕСТИТЬ ВТРанееНачисленныеНалоги
	|ИЗ
	|	РегистрНакопления.НДФЛРасчетыСБюджетом КАК РасчетыСБюджетом
	|ГДЕ
	|	РасчетыСБюджетом.Организация = &парамГоловнаяОрганизация
	|	И РасчетыСБюджетом.ФизЛицо В
	|			(ВЫБРАТЬ
	|				СписокФизЛиц.ФизЛицо
	|			ИЗ
	|				ВТСписокФизЛиц КАК СписокФизЛиц)
	|	И РасчетыСБюджетом.Период <= &парамПериодРегистрации
	|	И РасчетыСБюджетом.МесяцНалоговогоПериода МЕЖДУ &парамНачалоГода И &парамКонецМесяцаНалоговогоПериода
	|	И РасчетыСБюджетом.Регистратор <> &парамРегистратор
	|	И РасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И РасчетыСБюджетом.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.НДФЛРасчетыСБюджетомВидСтроки.Начисление)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыСБюджетом.ФизЛицо,
	|	РасчетыСБюджетом.ПодразделениеОрганизации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТЧРаботникиОрганизации.ФизЛицо КАК ФизЛицо
	|ПОМЕСТИТЬ ВТСписокФизлицРезидентов
	|ИЗ
	|	ВТСписокФизЛиц КАК ТЧРаботникиОрганизации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусФизЛицКакНалогоплательщиковНДФЛ.СрезПоследних(
	|				&парамКонецГода,
	|				ФизЛицо В
	|					(ВЫБРАТЬ
	|						СписокФизЛиц.ФизЛицо
	|					ИЗ
	|						ВТСписокФизЛиц КАК СписокФизЛиц)) КАК НеРезиденты
	|		ПО ТЧРаботникиОрганизации.ФизЛицо = НеРезиденты.ФизЛицо
	|			И (НеРезиденты.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыНалогоплательщиковПоНДФЛ.НеРезидент))
	|ГДЕ
	|	НеРезиденты.ФизЛицо ЕСТЬ NULL 
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДФЛОбороты.ФизЛицо КАК ФизЛицо,
	|	СУММА(ВЫРАЗИТЬ((НДФЛОбороты.СуммаДоходаОборот - НДФЛОбороты.СуммаВычетаОборот) * ВЫБОР
	|				КОГДА НДФЛОбороты.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09)
	|					ТОГДА ВЫБОР
	|							КОГДА ВТСписокФизлицРезидентов.ФизЛицо ЕСТЬ NULL 
	|									И НДФЛОбороты.КодДохода = ЗНАЧЕНИЕ(Справочник.ДоходыНДФЛ.Код1010)
	|								ТОГДА &парамСтавкаНеРезидентаСДивидендов
	|							КОГДА ВТСписокФизлицРезидентов.ФизЛицо ЕСТЬ NULL 
	|								ТОГДА &парамСтавкаНеРезидента
	|							ИНАЧЕ &парамСтавкаРезидента09
	|						КОНЕЦ / 100
	|				ИНАЧЕ 0
	|			КОНЕЦ КАК ЧИСЛО(10, 0))) КАК НалогПоСтавке09,
	|	СУММА(ВЫРАЗИТЬ((НДФЛОбороты.СуммаДоходаОборот - НДФЛОбороты.СуммаВычетаОборот) * ВЫБОР
	|				КОГДА НДФЛОбороты.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка35)
	|					ТОГДА ВЫБОР
	|							КОГДА ВТСписокФизлицРезидентов.ФизЛицо ЕСТЬ NULL 
	|								ТОГДА &парамСтавкаНеРезидента
	|							ИНАЧЕ &парамСтавкаРезидента35
	|						КОНЕЦ / 100
	|				ИНАЧЕ 0
	|			КОНЕЦ КАК ЧИСЛО(10, 0))) КАК НалогПоСтавке35
	|ПОМЕСТИТЬ ВТНалоги
	|ИЗ
	|	РегистрНакопления.НДФЛСведенияОДоходах.Обороты(
	|			&парамНачалоГода,
	|			&парамКонецМесяцаНалоговогоПериода,
	|			Месяц,
	|			ПериодРегистрации <= &парамПериодРегистрации
	|				И Организация = &парамГоловнаяОрганизация
	|				И Физлицо В
	|					(ВЫБРАТЬ
	|						СписокФизЛиц.ФизЛицо
	|					ИЗ
	|						ВТСписокФизЛиц КАК СписокФизЛиц)) КАК НДФЛОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСписокФизлицРезидентов КАК ВТСписокФизлицРезидентов
	|		ПО НДФЛОбороты.ФизЛицо = ВТСписокФизлицРезидентов.ФизЛицо
	|
	|СГРУППИРОВАТЬ ПО
	|	НДФЛОбороты.ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Налоги.ФизЛицо КАК ФизЛицо,
	|	Налоги.НалогПоСтавке09,
	|	Налоги.НалогПоСтавке35
	|ИЗ
	|	ВТНалоги КАК Налоги
	|ГДЕ
	|	(Налоги.НалогПоСтавке09 <> 0
	|			ИЛИ Налоги.НалогПоСтавке35 <> 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДФЛОбороты.ФизЛицо КАК ФизЛицо,
	|	НДФЛОбороты.КодДохода.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	СУММА(НДФЛОбороты.СуммаДохода - НДФЛОбороты.СуммаВычета) КАК СуммаДохода,
	|	НДФЛОбороты.ПодразделениеОрганизации КАК ПодразделениеОрганизации
	|ИЗ
	|	РегистрНакопления.НДФЛСведенияОДоходах КАК НДФЛОбороты
	|ГДЕ
	|	НДФЛОбороты.Период МЕЖДУ &парамНачалоГода И &парамКонецМесяцаНалоговогоПериода
	|	И НДФЛОбороты.ПериодРегистрации <= &парамПериодРегистрации
	|	И НДФЛОбороты.Организация = &парамГоловнаяОрганизация
	|	И НДФЛОбороты.ФизЛицо В
	|			(ВЫБРАТЬ
	|				СписокФизЛиц.ФизЛицо
	|			ИЗ
	|				ВТСписокФизЛиц КАК СписокФизЛиц)
	|
	|СГРУППИРОВАТЬ ПО
	|	НДФЛОбороты.ФизЛицо,
	|	НДФЛОбороты.КодДохода.СтавкаНалогообложенияРезидента,
	|	НДФЛОбороты.ПодразделениеОрганизации
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизЛицо,
	|	СтавкаНалогообложенияРезидента,
	|	ПодразделениеОрганизации";
	Результат =	Запрос.ВыполнитьПакет();
	ВсегоРезультатов = Результат.Количество();
	Если Не Результат[ВсегоРезультатов - 2].Пустой() Тогда
		
		ВыборкаРасчетов = Результат[ВсегоРезультатов - 2].Выбрать();
		РаспределениеДоходовПоПодразделениям = Результат[ВсегоРезультатов - 1].Выгрузить();

		СтруктураПоиска = Новый Структура("ФизЛицо, СтавкаНалогообложенияРезидента");
		Пока ВыборкаРасчетов.Следующий() Цикл
			
			СтруктураПоиска.ФизЛицо = ВыборкаРасчетов.ФизЛицо;
			
			Если ВыборкаРасчетов.НалогПоСтавке09 <> 0 Тогда
				СтруктураПоиска.СтавкаНалогообложенияРезидента = Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка09;
				Доходы = РаспределениеДоходовПоПодразделениям.НайтиСтроки(СтруктураПоиска);
				КоэффициентыПодразделений = ПроведениеРасчетов.ВыделитьКоэффициентыРаспределенияИзКоллекцииСтрок(Доходы, "СуммаДохода");
				ПроведениеРасчетов.ВписатьРесурсВРезультатыРасчетовНДФЛ(ВременнаяТаблицаНДФЛ, Неопределено, ВыборкаРасчетов.НалогПоСтавке09, "НалогПоСтавке09", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений, "ФизЛицо", "ПодразделениеОрганизации");
			КонецЕсли;
			
			Если ВыборкаРасчетов.НалогПоСтавке35 <> 0 Тогда
				СтруктураПоиска.СтавкаНалогообложенияРезидента = Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка35;
				Доходы = РаспределениеДоходовПоПодразделениям.НайтиСтроки(СтруктураПоиска);
				КоэффициентыПодразделений = ПроведениеРасчетов.ВыделитьКоэффициентыРаспределенияИзКоллекцииСтрок(Доходы, "СуммаДохода");
				ПроведениеРасчетов.ВписатьРесурсВРезультатыРасчетовНДФЛ(ВременнаяТаблицаНДФЛ, Неопределено, ВыборкаРасчетов.НалогПоСтавке35, "НалогПоСтавке35", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений, "ФизЛицо", "ПодразделениеОрганизации");
			КонецЕсли;
			
		КонецЦикла;	
	
		ВременнаяТаблицаНДФЛ.Свернуть("ФизЛицо, ПодразделениеОрганизации", "НалогПоСтавке09,НалогПоСтавке13,НалогПоСтавке35,ПримененныйВычетЛичный,ПримененныйВычетНаДетей,ПримененныйВычетНаДетейДвойной,ПримененныйВычетНаДетейДвойнойВторой,ПримененныйВычетНаДетейИнвалидов,ПримененныйВычетНаДетейИнвалидовДвойной,ПримененныйВычетНаДетейИнвалидовДвойнойВторой,ПримененныйВычетИмущественныйРасход,ПримененныйВычетИмущественныйПроцентыПоКредитам,ПримененныйВычетИмущественныйПроцентыПриПерекредитовании");
		
	КонецЕсли;
	
	// Загружаем результаты расчета
	РаботникиОрганизации.Загрузить(ВременнаяТаблицаНДФЛ);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Формирует запрос по шапке документа
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросПоШапке(Режим)

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);
	Запрос.УстановитьПараметр("ПустаяОрганизация" , Справочники.Организации.ПустаяСсылка());

	Запрос.Текст = "ВЫБРАТЬ
	               |	НДФЛПерерасчет.Дата,
	               |	НДФЛПерерасчет.Ссылка,
	               |	НДФЛПерерасчет.НалоговыйПериод,
	               |	НДФЛПерерасчет.ПериодВзаиморасчетов,
	               |	НДФЛПерерасчет.Организация,
	               |	НДФЛПерерасчет.Ответственный,
	               |	ВЫБОР КОГДА НДФЛПерерасчет.Организация.ГоловнаяОрганизация = &ПустаяОрганизация ТОГДА НДФЛПерерасчет.Организация ИНАЧЕ НДФЛПерерасчет.Организация.ГоловнаяОрганизация КОНЕЦ КАК ГоловнаяОрганизация
	               |ИЗ
	               |	Документ.НДФЛПерерасчет КАК НДФЛПерерасчет
	               |
	               |ГДЕ
	               |	НДФЛПерерасчет.Ссылка = &ДокументСсылка";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоШапке()

// Формирует запрос по табличной части документам
//
// Параметры: 
//  Режим        - режим проведения.
//
// Возвращаемое значение:
//  Результат запроса.
//
Функция СформироватьЗапросПоРаботникиОрганизации(Режим)

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТЧРаботникиОрганизации.НомерСтроки,
	|	ТЧРаботникиОрганизации.ФизЛицо,
	|	ТЧРаботникиОрганизации.НалогПоСтавке09,
	|	ТЧРаботникиОрганизации.НалогПоСтавке13,
	|	ТЧРаботникиОрганизации.НалогПоСтавке35,
	|	ТЧРаботникиОрганизации.ПримененныйВычетЛичный,
	|	ТЧРаботникиОрганизации.ПримененныйВычетНаДетей,
	|	ТЧРаботникиОрганизации.ПримененныйВычетНаДетейДвойной,
	|	ТЧРаботникиОрганизации.ПримененныйВычетНаДетейДвойнойВторой,
	|	ТЧРаботникиОрганизации.ПримененныйВычетНаДетейИнвалидов,
	|	ТЧРаботникиОрганизации.ПримененныйВычетНаДетейИнвалидовДвойной,
	|	ТЧРаботникиОрганизации.ПримененныйВычетНаДетейИнвалидовДвойнойВторой,
	|	ТЧРаботникиОрганизации.ПримененныйВычетИмущественныйРасход,
	|	ТЧРаботникиОрганизации.ПримененныйВычетИмущественныйПроцентыПоКредитам,
	|	ТЧРаботникиОрганизации.ПодразделениеОрганизации,
	|	ВЫБОР
	|		КОГДА ТЧРаботникиОрганизации.ПодразделениеОрганизации.Владелец <> ТЧРаботникиОрганизации.Ссылка.Организация
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОшибкаПодразделениеНеПринадлежитОрганизации
	|ИЗ
	|	Документ.НДФЛПерерасчет.РаботникиОрганизации КАК ТЧРаботникиОрганизации
	|ГДЕ
	|	ТЧРаботникиОрганизации.Ссылка = &ДокументСсылка";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоШапке()

// Формирует запрос для расчета сумм НДФЛ к зачету
//
// Параметры: 
//	нет
// Возвращаемое значение:
//  Результат запроса.
//
Функция СформироватьЗапросПоНДФЛКЗачету()

	Запрос = Новый Запрос;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодВзаиморасчетов);
	Запрос.УстановитьПараметр("Ставка13", Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка13);
	Запрос.УстановитьПараметр("Ставка09", Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка09);
	Запрос.УстановитьПараметр("Ставка35", Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка35);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(СтрокиНДФЛ.НалогПоСтавке13) КАК Налог,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(НДФЛКЗачету.СуммаНДФЛКЗачетуОстаток, 0) > ВЫБОР
	|				КОГДА СУММА(СтрокиНДФЛ.НалогПоСтавке13) > 0
	|					ТОГДА СУММА(СтрокиНДФЛ.НалогПоСтавке13)
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|			ТОГДА СУММА(СтрокиНДФЛ.НалогПоСтавке13)
	|		ИНАЧЕ ЕСТЬNULL(НДФЛКЗачету.СуммаНДФЛКЗачетуОстаток, 0)
	|	КОНЕЦ КАК НДФЛКЗачетуУчтено,
	|	СтрокиНДФЛ.ФизЛицо,
	|	&Ставка13 КАК Ставка
	|ИЗ
	|	Документ.НДФЛПерерасчет.РаботникиОрганизации КАК СтрокиНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НДФЛКЗачету.Остатки(
	|		&ПериодРегистрации,
	|		Физлицо В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					НДФЛПерерасчетРаботникиОрганизации.ФизЛицо
	|				ИЗ
	|					Документ.НДФЛПерерасчет.РаботникиОрганизации КАК НДФЛПерерасчетРаботникиОрганизации
	|				ГДЕ
	|					НДФЛПерерасчетРаботникиОрганизации.Ссылка = &ДокументСсылка)
	|			И Организация = &Организация) КАК НДФЛКЗачету
	|		ПО НДФЛКЗачету.ФизЛицо = СтрокиНДФЛ.ФизЛицо
	|ГДЕ
	|	СтрокиНДФЛ.Ссылка = &ДокументСсылка
	|
	|СГРУППИРОВАТЬ ПО
	|	СтрокиНДФЛ.ФизЛицо,
	|	НДФЛКЗачету.СуммаНДФЛКЗачетуОстаток
	|
	|ИМЕЮЩИЕ
	|	(СУММА(СтрокиНДФЛ.НалогПоСтавке13) < 0
	|		ИЛИ ВЫБОР
	|			КОГДА ЕСТЬNULL(НДФЛКЗачету.СуммаНДФЛКЗачетуОстаток, 0) > ВЫБОР
	|					КОГДА СУММА(СтрокиНДФЛ.НалогПоСтавке13) > 0
	|						ТОГДА СУММА(СтрокиНДФЛ.НалогПоСтавке13)
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|				ТОГДА СУММА(СтрокиНДФЛ.НалогПоСтавке13)
	|			ИНАЧЕ ЕСТЬNULL(НДФЛКЗачету.СуммаНДФЛКЗачетуОстаток, 0)
	|		КОНЕЦ <> 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СУММА(СтрокиНДФЛ.НалогПоСтавке09),
	|	0,
	|	СтрокиНДФЛ.ФизЛицо,
	|	&Ставка09
	|ИЗ
	|	Документ.НДФЛПерерасчет.РаботникиОрганизации КАК СтрокиНДФЛ
	|ГДЕ
	|	СтрокиНДФЛ.Ссылка = &ДокументСсылка
	|
	|СГРУППИРОВАТЬ ПО
	|	СтрокиНДФЛ.ФизЛицо
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СУММА(СтрокиНДФЛ.НалогПоСтавке35),
	|	0,
	|	СтрокиНДФЛ.ФизЛицо,
	|	&Ставка35
	|ИЗ
	|	Документ.НДФЛПерерасчет.РаботникиОрганизации КАК СтрокиНДФЛ
	|ГДЕ
	|	СтрокиНДФЛ.Ссылка = &ДокументСсылка
	|
	|СГРУППИРОВАТЬ ПО
	|	СтрокиНДФЛ.ФизЛицо";
	
	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоНДФЛКЗачету

Функция СформироватьЗапросПоНДФЛУдержанный()

	Запрос = Новый Запрос;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодВзаиморасчетов);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(СтрокиНДФЛ.НалогПоСтавке13) КАК Налог,
	|	СтрокиНДФЛ.ФизЛицо КАК ФизЛицо,
	|	СтрокиНДФЛ.ПодразделениеОрганизации
	|ИЗ
	|	Документ.НДФЛПерерасчет.РаботникиОрганизации КАК СтрокиНДФЛ
	|ГДЕ
	|	СтрокиНДФЛ.Ссылка = &ДокументСсылка
	|
	|СГРУППИРОВАТЬ ПО
	|	СтрокиНДФЛ.ФизЛицо,
	|	СтрокиНДФЛ.ПодразделениеОрганизации
	|
	|ИМЕЮЩИЕ
	|	СУММА(СтрокиНДФЛ.НалогПоСтавке13) > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизЛицо";
	
	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоНДФЛУдержанный()

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизитов шапки, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по шапке,
// все проверяемые реквизиты должны быть включены в выборку по шапке.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента	- выборка из результата запроса по шапке документа,
//  Отказ 		 - флаг отказа в проведении,
//	Заголовок	 - Заголовок для сообщений об ошибках проведения.
//
Процедура ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок)

	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Организация) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указана организация!", Отказ, Заголовок);
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.НалоговыйПериод) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указан налоговый период, за который выполняется перерасчет налога!", Отказ, Заголовок);
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ПериодВзаиморасчетов) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указан месяц, в котором следует отразить расчеты с работниками!", Отказ, Заголовок);
	КонецЕсли;

КонецПроцедуры // ПроверитьЗаполнениеШапки()

// Проверяет правильность заполнения строки документа.
Процедура ПроверитьЗаполнениеСтрокиРаботникаОрганизации(ВыборкаПоРаботникиОрганизации, Отказ, Заголовок)

	НачалоСообщения = "В строке № """+ СокрЛП(ВыборкаПоРаботникиОрганизации.НомерСтроки) +
									""" табл. части ""РаботникиОрганизации"": ";
									
	Если НЕ ЗначениеЗаполнено(ВыборкаПоРаботникиОрганизации.ФизЛицо) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(НачалоСообщения + "не указано физическое лицо!", Отказ, Заголовок);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВыборкаПоРаботникиОрганизации.НалогПоСтавке09 + ВыборкаПоРаботникиОрганизации.НалогПоСтавке13 + ВыборкаПоРаботникиОрганизации.НалогПоСтавке35 
		+ ВыборкаПоРаботникиОрганизации.ПримененныйВычетЛичный + ВыборкаПоРаботникиОрганизации.ПримененныйВычетНаДетей + ВыборкаПоРаботникиОрганизации.ПримененныйВычетНаДетейИнвалидов
		+ ВыборкаПоРаботникиОрганизации.ПримененныйВычетНаДетейДвойной + ВыборкаПоРаботникиОрганизации.ПримененныйВычетНаДетейИнвалидовДвойной
		+ ВыборкаПоРаботникиОрганизации.ПримененныйВычетНаДетейДвойнойВторой + ВыборкаПоРаботникиОрганизации.ПримененныйВычетНаДетейИнвалидовДвойнойВторой
		+ ВыборкаПоРаботникиОрганизации.ПримененныйВычетИмущественныйРасход + ВыборкаПоРаботникиОрганизации.ПримененныйВычетИмущественныйПроцентыПоКредитам) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(НачалоСообщения + "не указаны суммы перерасчета налога!", Отказ, Заголовок);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВыборкаПоРаботникиОрганизации.ПодразделениеОрганизации) И ВыборкаПоРаботникиОрганизации.ОшибкаПодразделениеНеПринадлежитОрганизации Тогда
		ОбщегоНазначения.СообщитьОбОшибке(НачалоСообщения + "указано подразделение, принадлежащее другой организации!", Отказ, Заголовок);
	КонецЕсли;
КонецПроцедуры // ПроверитьЗаполнениеШапки()

// Создает и заполняет структуру, содержащую имена регистров накопления
// документа. В дальнейшем движения заносятся только по тем регистрам накопления, для которых в 
// данной процедуре заданы ключи.
//
// Параметры: 
//  СтруктураПроведенияПоРегистрамНакопления - структура, содержащая имена регистров 
//                 накопления по которым надо проводить документ
//
// Возвращаемое значение:
//  Нет.
//
// По строке выборки результата запроса по документу формируем движения по регистрам
//
// Параметры: 
//  ВыборкаПоШапкеДокумента                  - выборка из результата запроса по шапке документа
//  СтруктураПроведенияПоРегистрамНакопления - структура, содержащая имена регистров 
//                                             накопления по которым надо проводить документ
//  СтруктураПараметров                      - структура параметров проведения.
//
// Возвращаемое значение:
//  Нет.
//
Процедура ДобавитьСтрокуВДвиженияПоРегистрамНакопления(ВыборкаПоШапкеДокумента, ВыборкаПоТЧ, УпрощенныйУчетНДФЛ) 
	
	// Перерасчет - начисление налога
	
	Если Год(ВыборкаПоШапкеДокумента.Дата) > ВыборкаПоШапкеДокумента.НалоговыйПериод Тогда
		МесяцНалоговогоПериода = Дата(ВыборкаПоШапкеДокумента.НалоговыйПериод, 12, 1);
	Иначе	
		МесяцНалоговогоПериода = НачалоМесяца(ВыборкаПоШапкеДокумента.Дата);
	КонецЕсли; 
	
	Если ВыборкаПоТЧ.НалогПоСтавке09 <> 0 Тогда
		Движение = Движения.НДФЛРасчетыСБюджетом.Добавить();
		// Свойства
		Движение.Период                 		= ВыборкаПоШапкеДокумента.Дата;
		Движение.ВидДвижения					= ВидДвиженияНакопления.Приход;
		// Измерения
		Движение.Организация					= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
		Движение.ФизЛицо                		= ВыборкаПоТЧ.ФизЛицо;
		Движение.СтавкаНалогообложенияРезидента	= Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка09;
		Движение.МесяцНалоговогоПериода 		= МесяцНалоговогоПериода;
		// Ресурсы
		Движение.Налог							= ВыборкаПоТЧ.НалогПоСтавке09; 
		// Реквизиты
		Движение.ОбособленноеПодразделение  	= ВыборкаПоШапкеДокумента.Организация;
		Движение.ПодразделениеОрганизации  		= ВыборкаПоТЧ.ПодразделениеОрганизации;
		Движение.ВидСтроки						= Перечисления.НДФЛРасчетыСБюджетомВидСтроки.Начисление;
		Движение.ИсчисленоИзЗарплаты			= Истина;
		Движение.КодДохода					  	= Справочники.ДоходыНДФЛ.Код1010;
	КонецЕсли;
	
	Если (ВыборкаПоТЧ.НалогПоСтавке13 <> 0)Тогда
		Движение = Движения.НДФЛРасчетыСБюджетом.Добавить();
		// Свойства
		Движение.Период                 		= ВыборкаПоШапкеДокумента.Дата;
		Движение.ВидДвижения					= ВидДвиженияНакопления.Приход;
		// Измерения
		Движение.Организация					= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
		Движение.ФизЛицо                		= ВыборкаПоТЧ.ФизЛицо;
		Движение.СтавкаНалогообложенияРезидента	= Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка13;
		Движение.МесяцНалоговогоПериода      	= МесяцНалоговогоПериода;
		// Ресурсы
		Движение.Налог							= ВыборкаПоТЧ.НалогПоСтавке13; 
		// Реквизиты
		Движение.ОбособленноеПодразделение  	= ВыборкаПоШапкеДокумента.Организация;
		Движение.ПодразделениеОрганизации  		= ВыборкаПоТЧ.ПодразделениеОрганизации;
		Движение.ВидСтроки						= Перечисления.НДФЛРасчетыСБюджетомВидСтроки.Начисление;
		Движение.ИсчисленоИзЗарплаты			= Истина;
	КонецЕсли;
	
	Если ВыборкаПоТЧ.НалогПоСтавке35 <> 0 Тогда
		Движение = Движения.НДФЛРасчетыСБюджетом.Добавить();
		// Свойства
		Движение.Период                 		= ВыборкаПоШапкеДокумента.Дата;
		Движение.ВидДвижения					= ВидДвиженияНакопления.Приход;
		// Измерения
		Движение.Организация					= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
		Движение.ФизЛицо                		= ВыборкаПоТЧ.ФизЛицо;
		Движение.СтавкаНалогообложенияРезидента	= Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка35;
		Движение.МесяцНалоговогоПериода 		= МесяцНалоговогоПериода;
		// Ресурсы
		Движение.Налог							= ВыборкаПоТЧ.НалогПоСтавке35; 
		// Реквизиты
		Движение.ОбособленноеПодразделение  	= ВыборкаПоШапкеДокумента.Организация;
		Движение.ПодразделениеОрганизации  		= ВыборкаПоТЧ.ПодразделениеОрганизации;
		Движение.ВидСтроки						= Перечисления.НДФЛРасчетыСБюджетомВидСтроки.Начисление;
		Движение.ИсчисленоИзЗарплаты			= Истина;
	КонецЕсли;
	
	// сразу же, не дожидаясь выплаты, регистрируем факт удержания налога по ставкам 9 и 35%
	Если УпрощенныйУчетНДФЛ Тогда 
		
		Если ВыборкаПоТЧ.НалогПоСтавке09 <> 0 Тогда
			Движение = Движения.НДФЛРасчетыСБюджетом.Добавить();
			// Свойства
			Движение.Период                 		= ВыборкаПоШапкеДокумента.Дата;
			Движение.ВидДвижения					= ВидДвиженияНакопления.Расход;
			// Измерения
			Движение.Организация					= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
			Движение.ФизЛицо                		= ВыборкаПоТЧ.ФизЛицо;
			Движение.СтавкаНалогообложенияРезидента	= Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка09;
			Движение.МесяцНалоговогоПериода 		= МесяцНалоговогоПериода;
			// Ресурсы
			Движение.Налог							= ВыборкаПоТЧ.НалогПоСтавке09; 
			// Реквизиты
			Движение.ОбособленноеПодразделение  	= ВыборкаПоШапкеДокумента.Организация;
			Движение.ПодразделениеОрганизации  		= ВыборкаПоТЧ.ПодразделениеОрганизации;
			Движение.ВидСтроки						= Перечисления.НДФЛРасчетыСБюджетомВидСтроки.Удержание;
			Движение.КодДохода					  	= Справочники.ДоходыНДФЛ.Код1010;
		КонецЕсли;
		
		Если ВыборкаПоТЧ.НалогПоСтавке35 <> 0 Тогда
			Движение = Движения.НДФЛРасчетыСБюджетом.Добавить();
			// Свойства
			Движение.Период                 		= ВыборкаПоШапкеДокумента.Дата;
			Движение.ВидДвижения					= ВидДвиженияНакопления.Расход;
			// Измерения
			Движение.Организация					= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
			Движение.ФизЛицо                		= ВыборкаПоТЧ.ФизЛицо;
			Движение.СтавкаНалогообложенияРезидента	= Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка35;
			Движение.МесяцНалоговогоПериода 		= МесяцНалоговогоПериода;
			// Ресурсы
			Движение.Налог							= ВыборкаПоТЧ.НалогПоСтавке35; 
			// Реквизиты
			Движение.ОбособленноеПодразделение  	= ВыборкаПоШапкеДокумента.Организация;
			Движение.ПодразделениеОрганизации  		= ВыборкаПоТЧ.ПодразделениеОрганизации;
			Движение.ВидСтроки						= Перечисления.НДФЛРасчетыСБюджетомВидСтроки.Удержание;
		КонецЕсли;
		
	КонецЕсли;
	
	// регистрация перерасчета во взаиморасчетах с работниками
	
	Если ВыборкаПоТЧ.НалогПоСтавке09 > 0 Тогда
		Движение = Движения.ВзаиморасчетыСРаботникамиОрганизаций.Добавить();
		// Свойства
		Движение.Период           				= ВыборкаПоШапкеДокумента.Дата;
		Движение.ВидДвижения					= ВидДвиженияНакопления.Приход;
		// Измерения
		Движение.Организация					= ВыборкаПоШапкеДокумента.Организация;
		Движение.ФизЛицо                		= ВыборкаПоТЧ.ФизЛицо;
			Движение.ПериодВзаиморасчетов           = ВыборкаПоШапкеДокумента.ПериодВзаиморасчетов;
		
		// Ресурсы
		Движение.СуммаВзаиморасчетов			= - ВыборкаПоТЧ.НалогПоСтавке09; 
	КонецЕсли;
	
	Если ВыборкаПоТЧ.НалогПоСтавке13 > 0 Тогда
		Движение = Движения.ВзаиморасчетыСРаботникамиОрганизаций.Добавить();
		// Свойства
		Движение.Период           				= ВыборкаПоШапкеДокумента.Дата;
		Движение.ВидДвижения					= ВидДвиженияНакопления.Приход;
		// Измерения
		Движение.Организация					= ВыборкаПоШапкеДокумента.Организация;
		Движение.ФизЛицо                		= ВыборкаПоТЧ.ФизЛицо;
			Движение.ПериодВзаиморасчетов           = ВыборкаПоШапкеДокумента.ПериодВзаиморасчетов;
		
		// Ресурсы
		Движение.СуммаВзаиморасчетов			= - ВыборкаПоТЧ.НалогПоСтавке13; 
	КонецЕсли;
	
	Если ВыборкаПоТЧ.НалогПоСтавке35 > 0 Тогда
		Движение = Движения.ВзаиморасчетыСРаботникамиОрганизаций.Добавить();
		// Свойства
		Движение.Период           				= ВыборкаПоШапкеДокумента.Дата;
		Движение.ВидДвижения					= ВидДвиженияНакопления.Приход;
		// Измерения
		Движение.Организация					= ВыборкаПоШапкеДокумента.Организация;
		Движение.ФизЛицо                		= ВыборкаПоТЧ.ФизЛицо;
			Движение.ПериодВзаиморасчетов           = ВыборкаПоШапкеДокумента.ПериодВзаиморасчетов;
		
		// Ресурсы
		Движение.СуммаВзаиморасчетов			= - ВыборкаПоТЧ.НалогПоСтавке35; 
	КонецЕсли;
	
	
КонецПроцедуры // ДобавитьСтрокуВДвиженияПоРегистрамНакопления

Процедура СформироватьВычетыПоНДФЛ(ВыборкаПоШапкеДокумента, УпрощенныйУчетНДФЛ, Отказ, Заголовок)
	
	// получим реквизиты табличной части
	Если Год(Дата) > НалоговыйПериод Тогда
		МесяцНалоговогоПериода = Дата(НалоговыйПериод, 12, 1);
	Иначе	
		МесяцНалоговогоПериода = НачалоМесяца(Дата);
	КонецЕсли;
	
	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);
	Запрос.УстановитьПараметр("МесяцНалоговогоПериода" , МесяцНалоговогоПериода);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	&МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ТЧРаботникиОрганизации.НомерСтроки,
	|	ТЧРаботникиОрганизации.ФизЛицо КАК ФизЛицо,
	|	ТЧРаботникиОрганизации.ПримененныйВычетЛичный,
	|	ТЧРаботникиОрганизации.ПримененныйВычетНаДетей,
	|	ТЧРаботникиОрганизации.ПримененныйВычетНаДетейДвойной,
	|	ТЧРаботникиОрганизации.ПримененныйВычетНаДетейДвойнойВторой,
	|	ТЧРаботникиОрганизации.ПримененныйВычетНаДетейИнвалидов,
	|	ТЧРаботникиОрганизации.ПримененныйВычетНаДетейИнвалидовДвойной,
	|	ТЧРаботникиОрганизации.ПримененныйВычетНаДетейИнвалидовДвойнойВторой,
	|	ТЧРаботникиОрганизации.ПримененныйВычетИмущественныйРасход,
	|	ТЧРаботникиОрганизации.ПримененныйВычетИмущественныйПроцентыПоКредитам,
	|	ТЧРаботникиОрганизации.ПримененныйВычетИмущественныйПроцентыПриПерекредитовании,
	|	ТЧРаботникиОрганизации.ПодразделениеОрганизации
	|ПОМЕСТИТЬ ВТСтрокиНДФЛ
	|ИЗ
	|	Документ.НДФЛПерерасчет.РаботникиОрганизации КАК ТЧРаботникиОрганизации
	|ГДЕ
	|	ТЧРаботникиОрганизации.Ссылка = &ДокументСсылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтрокиНДФЛ.НомерСтроки КАК НомерСтроки,
	|	СтрокиНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	СтрокиНДФЛ.ФизЛицо КАК ФизЛицо,
	|	СтрокиНДФЛ.ПримененныйВычетЛичный,
	|	ВычетыФизлиц.КодВычетаЛичный,
	|	СтрокиНДФЛ.ПримененныйВычетНаДетей,
	|	СтрокиНДФЛ.ПримененныйВычетНаДетейДвойной,
	|	СтрокиНДФЛ.ПримененныйВычетНаДетейДвойнойВторой,
	|	СтрокиНДФЛ.ПримененныйВычетНаДетейИнвалидов,
	|	СтрокиНДФЛ.ПримененныйВычетНаДетейИнвалидовДвойной,
	|	СтрокиНДФЛ.ПримененныйВычетНаДетейИнвалидовДвойнойВторой,
	|	СтрокиНДФЛ.ПримененныйВычетИмущественныйРасход,
	|	СтрокиНДФЛ.ПримененныйВычетИмущественныйПроцентыПоКредитам,
	|	СтрокиНДФЛ.ПримененныйВычетИмущественныйПроцентыПриПерекредитовании,
	|	СтрокиНДФЛ.ПодразделениеОрганизации
	|ИЗ
	|	ВТСтрокиНДФЛ КАК СтрокиНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НДФЛСтандартныеВычетыФизлиц.СрезПоследних(
	|				&МесяцНалоговогоПериода,
	|				Физлицо В
	|					(ВЫБРАТЬ
	|						СтрокиНДФЛ.ФизЛицо КАК ФизЛицо
	|					ИЗ
	|						ВТСтрокиНДФЛ КАК СтрокиНДФЛ)) КАК ВычетыФизлиц
	|		ПО СтрокиНДФЛ.ФизЛицо = ВычетыФизлиц.Физлицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";

	
	//ВыборкаПоРаботникиОрганизации
	ВыборкаПоТЧ = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	// Заполним записи в наборах записей регистров
	Пока ВыборкаПоТЧ.Следующий() Цикл 
		
		НачалоСообщения = "В строке № """+ СокрЛП(ВыборкаПоТЧ.НомерСтроки) +
										""" табл. части ""РаботникиОрганизации"": ";
										
		Если ВыборкаПоТЧ.ПримененныйВычетЛичный <> 0 И Не ЗначениеЗаполнено(ВыборкаПоТЧ.КодВычетаЛичный) Тогда
			ОбщегоНазначения.СообщитьОбОшибке(НачалоСообщения + "для указанного физического лица не зарегистрировано право на предоставление личного вычета!", Отказ, Заголовок);
		КонецЕсли;
		
		Если Не Отказ Тогда // формируем движения
			
			// Стандартные вычеты
			
			Если ВыборкаПоТЧ.ПримененныйВычетЛичный <> 0 Тогда
				ДобавитьСтрокуСтандартныхВычетовПоНДФЛ(ВыборкаПоТЧ, ВыборкаПоШапкеДокумента, ВыборкаПоТЧ.КодВычетаЛичный, ВыборкаПоТЧ.ПримененныйВычетЛичный);
			КонецЕсли;
			Если ВыборкаПоТЧ.ПримененныйВычетНаДетей <> 0 Тогда
				ДобавитьСтрокуСтандартныхВычетовПоНДФЛ(ВыборкаПоТЧ, ВыборкаПоШапкеДокумента, Справочники.ВычетыНДФЛ.Код101, ВыборкаПоТЧ.ПримененныйВычетНаДетей);
			КонецЕсли;
			Если ВыборкаПоТЧ.ПримененныйВычетНаДетейДвойной <> 0 Тогда
				ДобавитьСтрокуСтандартныхВычетовПоНДФЛ(ВыборкаПоТЧ, ВыборкаПоШапкеДокумента, Справочники.ВычетыНДФЛ.Код102, ВыборкаПоТЧ.ПримененныйВычетНаДетейДвойной);
			КонецЕсли;
			Если ВыборкаПоТЧ.ПримененныйВычетНаДетейДвойнойВторой <> 0 Тогда
				ДобавитьСтрокуСтандартныхВычетовПоНДФЛ(ВыборкаПоТЧ, ВыборкаПоШапкеДокумента, Справочники.ВычетыНДФЛ.Код111, ВыборкаПоТЧ.ПримененныйВычетНаДетейДвойнойВторой);
			КонецЕсли;
			Если ВыборкаПоТЧ.ПримененныйВычетНаДетейИнвалидов <> 0 Тогда
				ДобавитьСтрокуСтандартныхВычетовПоНДФЛ(ВыборкаПоТЧ, ВыборкаПоШапкеДокумента, Справочники.ВычетыНДФЛ.Код106, ВыборкаПоТЧ.ПримененныйВычетНаДетейИнвалидов);
			КонецЕсли;
			Если ВыборкаПоТЧ.ПримененныйВычетНаДетейИнвалидовДвойной <> 0 Тогда
				ДобавитьСтрокуСтандартныхВычетовПоНДФЛ(ВыборкаПоТЧ, ВыборкаПоШапкеДокумента, Справочники.ВычетыНДФЛ.Код107, ВыборкаПоТЧ.ПримененныйВычетНаДетейИнвалидовДвойной);
			КонецЕсли;
			Если ВыборкаПоТЧ.ПримененныйВычетНаДетейИнвалидовДвойнойВторой <> 0 Тогда
				ДобавитьСтрокуСтандартныхВычетовПоНДФЛ(ВыборкаПоТЧ, ВыборкаПоШапкеДокумента, Справочники.ВычетыНДФЛ.Код113, ВыборкаПоТЧ.ПримененныйВычетНаДетейИнвалидовДвойнойВторой);
			КонецЕсли;
			
			// имущественные вычеты
			Если ВыборкаПоТЧ.ПримененныйВычетИмущественныйРасход <> 0 Тогда 
				
				Движение = Движения.НДФЛИмущественныеВычетыФизлиц.Добавить();
				
				// Свойства
				Движение.Период							= ВыборкаПоШапкеДокумента.Дата;
				Движение.ВидДвижения					= ВидДвиженияНакопления.Расход;
				
				// Измерения
				Движение.ФизЛицо	 	 	 			= ВыборкаПоТЧ.ФизЛицо;
				Движение.Организация					= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
				Движение.Год							= ВыборкаПоШапкеДокумента.НалоговыйПериод;
				Движение.КодВычетаИмущественный			= Справочники.ВычетыНДФЛ.Код311;
				
				// Ресурсы
				Движение.Размер							= ВыборкаПоТЧ.ПримененныйВычетИмущественныйРасход; 
				
			КонецЕсли;
			Если ВыборкаПоТЧ.ПримененныйВычетИмущественныйПроцентыПоКредитам <> 0 Тогда
				
				Движение = Движения.НДФЛИмущественныеВычетыФизлиц.Добавить();
				
				// Свойства
				Движение.Период							= ВыборкаПоШапкеДокумента.Дата;
				Движение.ВидДвижения					= ВидДвиженияНакопления.Расход;
				
				// Измерения
				Движение.ФизЛицо	 	 	 			= ВыборкаПоТЧ.ФизЛицо;
				Движение.Организация					= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
				Движение.Год							= ВыборкаПоШапкеДокумента.НалоговыйПериод;
				Движение.КодВычетаИмущественный			= Справочники.ВычетыНДФЛ.Код312;
				
				// Ресурсы
				Движение.Размер							= ВыборкаПоТЧ.ПримененныйВычетИмущественныйПроцентыПоКредитам; 
				
			КонецЕсли;
			
			Если ВыборкаПоТЧ.ПримененныйВычетИмущественныйПроцентыПриПерекредитовании <> 0 Тогда
				
				Движение = Движения.НДФЛИмущественныеВычетыФизлиц.Добавить();
				
				// Свойства
				Движение.Период							= ВыборкаПоШапкеДокумента.Дата;
				Движение.ВидДвижения					= ВидДвиженияНакопления.Расход;
				
				// Измерения
				Движение.ФизЛицо	 	 	 			= ВыборкаПоТЧ.ФизЛицо;
				Движение.Организация					= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
				Движение.Год							= ВыборкаПоШапкеДокумента.НалоговыйПериод;
				Движение.КодВычетаИмущественный			= Справочники.ВычетыНДФЛ.Код318;
				
				// Ресурсы
				Движение.Размер							= ВыборкаПоТЧ.ПримененныйВычетИмущественныйПроцентыПриПерекредитовании; 
				
				// Реквизиты
				Движение.ОбособленноеПодразделение		= ВыборкаПоШапкеДокумента.Организация;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// По строке выборок из результатов запроса по документу формируем движения по регистрам вычетов по НДФЛ
//
// Параметры: 
//  ВыборкаПоСтрокамДокумента	- спозиционированная на определенной строке выборка 
//				  				  из результата запроса к ТЧ документа, 
//  ШапкаДокумента		- выборка по данным шапки документа
//	НаборСтандартныеВычеты		- набор записей для НДФЛПредоставленныеСтандартныеВычетыФизЛиц
//	НаборИмущественныеВычеты	- набор записей для НДФЛИмущественныеВычетыФизлиц
//
// Возвращаемое значение:
//  Нет.
//
Процедура ДобавитьСтрокуСтандартныхВычетовПоНДФЛ(ВыборкаПоСтрокамДокумента, ВыборкаПоШапкеДокумента, КодВычета, ПримененныйВычет)
	
	Движение = Движения.НДФЛПредоставленныеСтандартныеВычетыФизЛиц.Добавить();
	
	// Свойства
	Движение.Период						= ВыборкаПоШапкеДокумента.Дата;
	// Измерения
	Движение.Организация	 	   		= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
	Движение.ФизЛицо	 	 	  		= ВыборкаПоСтрокамДокумента.ФизЛицо;
	Движение.МесяцНалоговогоПериода		= ВыборкаПоСтрокамДокумента.МесяцНалоговогоПериода;
	Движение.КодВычета	 	 	  		= КодВычета;
	
	// Ресурсы
	Движение.ПримененныйВычет			= ПримененныйВычет;
	// Реквизиты 
	Движение.ОбособленноеПодразделение	= ВыборкаПоШапкеДокумента.Организация;
	Движение.ПодразделениеОрганизации	= ВыборкаПоСтрокамДокумента.ПодразделениеОрганизации;
	
КонецПроцедуры // ДобавитьСтрокуНДФЛВычеты

// По строке выборок из результатов запроса по документу формируем движения по регистрам
//
// Параметры: 
//  ВыборкаПоСтрокамДокумента	- спозиционированная на определенной строке выборка 
//				  				  из результата запроса к ТЧ документа, 
//  ВыборкаПоШапкеДокумента		- выборка по данным шапки документа
//	НаборЗаписей				- набор записей для НДФЛРасчетыСБюджетом
//
// Возвращаемое значение:
//  Нет.
//
Процедура ДобавитьСтрокуНДФЛКЗачету(ВыборкаПоСтрокамДокумента, ВыборкаПоШапкеДокумента)

    // НДФЛ к зачету
    Если ВыборкаПоСтрокамДокумента.Налог < 0 Тогда
    	Движение = Движения.НДФЛКЗачету.Добавить();

    	// Свойства
    	Движение.Период						= ВыборкаПоШапкеДокумента.Дата;
		Движение.ВидДвижения				= ВидДвиженияНакопления.Приход;

    	// Измерения
    	Движение.ФизЛицо                        = ВыборкаПоСтрокамДокумента.ФизЛицо;
    	Движение.Организация				    = ВыборкаПоШапкеДокумента.Организация;
    	Движение.СтавкаНалогообложенияРезидента	= ВыборкаПоСтрокамДокумента.Ставка;

    	// Ресурсы
    	Движение.СуммаНДФЛКЗачету			= - ВыборкаПоСтрокамДокумента.Налог;
        
    ИначеЕсли ВыборкаПоСтрокамДокумента.НДФЛКЗачетуУчтено <> 0 Тогда
		
		Движение = Движения.НДФЛКЗачету.Добавить();

		// Свойства
		Движение.Период		 = ВыборкаПоШапкеДокумента.Дата;
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		
		// Измерения
		Движение.ФизЛицо                        = ВыборкаПоСтрокамДокумента.ФизЛицо;
		Движение.Организация				    = ВыборкаПоШапкеДокумента.Организация;
    	Движение.СтавкаНалогообложенияРезидента	= ВыборкаПоСтрокамДокумента.Ставка;
		
		// Ресурсы
		Движение.СуммаНДФЛКЗачету			= ВыборкаПоСтрокамДокумента.НДФЛКЗачетуУчтено;
	        
    КонецЕсли;
	
КонецПроцедуры // ДобавитьСтрокуНДФЛКЗачету

// По строке выборок из результатов запроса по документу формируем движения по регистрам
//
// Параметры: 
//  ВыборкаПоСтрокамДокумента	- спозиционированная на определенной строке выборка 
//				  				  из результата запроса к ТЧ документа, 
//  ВыборкаПоШапкеДокумента		- выборка по данным шапки документа
//	НаборЗаписей				- набор записей для НДФЛРасчетыСБюджетом
//
// Возвращаемое значение:
//  Нет.
//
Процедура ДобавитьСтрокуНДФЛудержанный(ВыборкаСуммКУдержанию, ВыборкаПоНДФЛКЗачету, ВыборкаПоШапкеДокумента)
	
	НалогКУдержанию = ВыборкаСуммКУдержанию.Налог; // положительная сумма исчисленного налога
	
	// учтем возможный зачет образовавшейся ранее переплаты налога
	ВыборкаПоНДФЛКЗачету.Сбросить();
	Если ВыборкаПоНДФЛКЗачету.НайтиСледующий(ВыборкаСуммКУдержанию.ФизЛицо,"ФизЛицо") Тогда
		НалогКУдержанию = НалогКУдержанию - ВыборкаПоНДФЛКЗачету.НДФЛКЗачетуУчтено;
	КонецЕсли;
	
	Если Год(ВыборкаПоШапкеДокумента.Дата) > ВыборкаПоШапкеДокумента.НалоговыйПериод Тогда
		МесяцНалоговогоПериода = Дата(ВыборкаПоШапкеДокумента.НалоговыйПериод, 12, 1);
	Иначе	
		МесяцНалоговогоПериода = НачалоМесяца(ВыборкаПоШапкеДокумента.Дата);
	КонецЕсли; 
	
	Если НалогКУдержанию > 0 Тогда
		Движение = Движения.НДФЛРасчетыСБюджетом.Добавить();
		// Свойства
		Движение.Период                 		= ВыборкаПоШапкеДокумента.Дата;
		Движение.ВидДвижения					= ВидДвиженияНакопления.Расход;
		// Измерения
		Движение.Организация					= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
		Движение.ФизЛицо                		= ВыборкаСуммКУдержанию.ФизЛицо;
		Движение.СтавкаНалогообложенияРезидента	= Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка13;
		Движение.МесяцНалоговогоПериода      	= МесяцНалоговогоПериода;
		// Ресурсы
		Движение.Налог							= НалогКУдержанию; 
		// Реквизиты
		Движение.ОбособленноеПодразделение  	= ВыборкаПоШапкеДокумента.Организация;
		Движение.ПодразделениеОрганизации  		= ВыборкаСуммКУдержанию.ПодразделениеОрганизации;
		Движение.ВидСтроки						= Перечисления.НДФЛРасчетыСБюджетомВидСтроки.Удержание;
	КонецЕсли;
	
КонецПроцедуры // ДобавитьСтрокуНДФЛудержанный

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, Режим)
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);
	
	РезультатЗапросаПоШапке = СформироватьЗапросПоШапке(Режим);

	// Получим реквизиты шапки из запроса
	ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();

	Если ВыборкаПоШапкеДокумента.Следующий() Тогда

		//Надо позвать проверку заполнения реквизитов шапки
		ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок);

		// Движения стоит добавлять, если в проведении еще не отказано (отказ = ложь)
		Если НЕ Отказ Тогда

			// получим учетную политику
			УпрощенныйУчетНДФЛ = ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуОрганизации(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), Организация, "УпрощенныйУчетНДФЛ");
			
			// получим реквизиты табличной части
			РезультатЗапросаПоРаботники = СформироватьЗапросПоРаботникиОрганизации(Режим);
			ВыборкаПоРаботникиОрганизации = РезультатЗапросаПоРаботники.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

			Пока ВыборкаПоРаботникиОрганизации.Следующий() Цикл 

				// проверим очередную строку табличной части
				ПроверитьЗаполнениеСтрокиРаботникаОрганизации(ВыборкаПоРаботникиОрганизации, Отказ, Заголовок);
				
				// Заполним записи в наборах записей регистров
				ДобавитьСтрокуВДвиженияПоРегистрамНакопления(ВыборкаПоШапкеДокумента, ВыборкаПоРаботникиОрганизации, УпрощенныйУчетНДФЛ);

			КонецЦикла;
			
			// Вычеты предоставленные (стандартные и имущественные)
			СформироватьВычетыПоНДФЛ(ВыборкаПоШапкеДокумента, УпрощенныйУчетНДФЛ, Отказ, Заголовок);
				
            // НДФЛ к зачету
			// получим реквизиты табличной части
			Если НЕ Отказ Тогда
				
				ВыборкаПоНДФЛКЗачету = СформироватьЗапросПоНДФЛКЗачету().Выбрать();
				Пока ВыборкаПоНДФЛКЗачету.Следующий() Цикл 
					// Заполним записи в наборах записей регистров
					ДобавитьСтрокуНДФЛКЗачету(ВыборкаПоНДФЛКЗачету, ВыборкаПоШапкеДокумента);
	            КонецЦикла;
				
				Если УпрощенныйУчетНДФЛ Тогда
					
					ВыборкаПоНДФЛуд = СформироватьЗапросПоНДФЛУдержанный().Выбрать();
					Пока ВыборкаПоНДФЛуд.Следующий() Цикл 

						// Заполним записи в наборах записей регистров
						ДобавитьСтрокуНДФЛудержанный(ВыборкаПоНДФЛуд, ВыборкаПоНДФЛКЗачету, ВыборкаПоШапкеДокумента);
						
					КонецЦикла;
					
				КонецЕсли;
			КонецЕсли;
				
		КонецЕсли; 

		Если Движения.НДФЛРасчетыСБюджетом.Количество() > 0 Тогда
			Движения.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Загрузить(ПроведениеРасчетов.РасчетыНалоговогоАгентаПоУдержанномуНДФЛ(Движения.НДФЛРасчетыСБюджетом.Выгрузить()))
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	КраткийСоставДокумента = ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(РаботникиОрганизации,, "Физлицо");
	
КонецПроцедуры

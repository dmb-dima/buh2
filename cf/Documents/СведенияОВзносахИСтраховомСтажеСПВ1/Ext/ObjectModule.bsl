
////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

// Проверяет правильность заполнения документа
//
Процедура ПроверитьПравильностьЗаполненияДокумента(ЕстьОшибки, СообщатьОбУспехе = Истина, ВыборкаПоШапкеДокумента = Неопределено, РезультатЗапросаПоЗаписямСтажа = Неопределено) Экспорт
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок =  "Проверка документа " + СокрЛП(Ссылка);

	//Проверка корректности заполнения документа
	Если ВыборкаПоШапкеДокумента = Неопределено Тогда
		ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапке().Выбрать();
		ВыборкаПоШапкеДокумента.Следующий();
	КонецЕсли;
	
	Отказ = Ложь;
	КоличествоДокументов = ВыборкаПоШапкеДокумента.Количество;
	Если КоличествоДокументов = 0 Тогда
		Сообщить("Список застрахованных лиц пуст!");
		Отказ = Истина;
	КонецЕсли;
	Если КоличествоДокументов > 200 Тогда
		Сообщить("В документе должно быть не более 200 форм!");
		Отказ = Истина;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Организация) Тогда
		Сообщить("Не указана организация!");
		Отказ = Истина;
	ИначеЕсли СтрДлина(СокрЛП(ВыборкаПоШапкеДокумента.ОрганизацияРегистрационныйНомерПФР)) <> 14 Тогда
		Сообщить("Предупреждение: Регистрационный номер организации в ПФР скорее всего неправильный");
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ОтчетныйПериод) Тогда
		Сообщить("Не указан отчетный период!");
		Отказ = Истина;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.КатегорияЗастрахованныхЛиц) Тогда
		Сообщить("Не указана категория застрахованных лиц!");
		Отказ = Истина;
	КонецЕсли;
	
	РезультатЗапросаПоТЧ = СформироватьЗапросПоРаботникиОрганизации(ВыборкаПоШапкеДокумента);
	ВыборкаПоСтрокамДокумента = РезультатЗапросаПоТЧ.Выбрать();
	Пока ВыборкаПоСтрокамДокумента.Следующий() цикл
		
	   	СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки);
		
		Если Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ФизЛицо) Тогда
			Сообщить(СтрокаНачалаСообщенияОбОшибке + ": Не выбран сотрудник!");
			Отказ = Истина;
		Иначе
			СтрокаНачалаСообщенияОбОшибке = СтрокаНачалаСообщенияОбОшибке + " по сотруднику " + ВыборкаПоСтрокамДокумента.ФизЛицоНаименование + ": ";
			
			Если Не ВыборкаПоСтрокамДокумента.ФизЛицоРаботаетВОрганизации тогда
				Сообщить(СтрокаНачалаСообщенияОбОшибке + "- не зарегистрирован(а) как сотрудник организации " + ВыборкаПоШапкеДокумента.ОрганизацияНаименование);
				Отказ = Истина;
			КонецЕсли;
			
			СтраховойНомерПФР = ВыборкаПоСтрокамДокумента.СтраховойНомерПФР;
			Если Не ЗначениеЗаполнено(СтраховойНомерПФР) Тогда
				Сообщить(СтрокаНачалаСообщенияОбОшибке + "- Не задан страховой номер!");
				Отказ = Истина;
			ИначеЕсли Не РегламентированнаяОтчетность.СтраховойНомерПФРСоответствуетТребованиям(СтраховойНомерПФР) тогда
				Сообщить(СтрокаНачалаСообщенияОбОшибке + "- Задан неверный страховой номер!");
				Отказ = Истина;
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Фамилия) Тогда
				Сообщить(СтрокаНачалаСообщенияОбОшибке + "- Не задана фамилия!");
				Отказ = Истина;
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Имя) Тогда
				Сообщить(СтрокаНачалаСообщенияОбОшибке + "- Не задано имя!");
				Отказ = Истина;
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.УплаченоНакопительная) 
				И Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.НачисленоНакопительная) 
				И Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.УплаченоСтраховая) 
				И Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.НачисленоСтраховая) 
				И Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.КоличествоЗаписейОСтаже) 
				И НЕ ВыборкаПоШапкеДокумента.ТипСведенийСЗВ = перечисления.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ 
				И НЕ ВыборкаПоШапкеДокумента.ТипСведенийСЗВ = перечисления.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ Тогда
				Сообщить(СтрокаНачалаСообщенияОбОшибке + "- У сотрудника отсутствуют данные о стаже и суммы взносов!");
				Отказ = Истина;
			КонецЕсли;
			
			//Контроль дубля строк
			Если ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.НомерПовторяющейсяСтроки) Тогда
				Сообщить("Строка №" + ВыборкаПоСтрокамДокумента.НомерПовторяющейсяСтроки + ": Сотрудник " + ВыборкаПоСтрокамДокумента.ФизЛицоНаименование + " указан в документе дважды!");
				Отказ = Истина;
			КонецЕсли;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ДатаСоставления) Тогда
			Сообщить(СтрокаНачалаСообщенияОбОшибке + ": Не указана дата составления!");
			Отказ = Истина;
		КонецЕсли;
	КонецЦикла;
	
	ТаблицаФизлиц = РезультатЗапросаПоТЧ.Выгрузить();
	Отказ = Отказ Или Не ПроцедурыПерсонифицированногоУчета.СЗВ6_ПроверитьНаборЗаписейОСтаже(Ссылка, ТаблицаФизлиц, РезультатЗапросаПоЗаписямСтажа, Истина, );
	
	Если Отказ тогда
		ЕстьОшибки = Истина;
	КонецЕсли;	 
	
	Если СообщатьОбУспехе И Не ЕстьОшибки Тогда
		Сообщить("Ошибок не обнаружено.");		
	КонецЕсли;
	
КонецПроцедуры // ПроверитьПравильностьЗаполненияДокумента()

Функция ДанныеОВзносахПоКатегориям(ДатаАктуальности, ОтчетныйПериод, Организация, ТаблицаФизлиц) 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;	
	
	Запрос.УстановитьПараметр("ДатаЗаменыЕСН", ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами());
	Запрос.УстановитьПараметр("ОтчетныйПериод", ОтчетныйПериод);
	Запрос.УстановитьПараметр("КонецОтчетногоПериода", ПроцедурыПерсонифицированногоУчета.ОкончаниеОтчетногоПериодаПерсучета(ОтчетныйПериод));
	Запрос.УстановитьПараметр("ДатаАктуальности", ДатаАктуальности);
	Запрос.УстановитьПараметр("КонецПериодаУплаты", Мин(ДатаАктуальности, ПроцедурыПерсонифицированногоУчета.ОкончаниеОтчетногоПериодаПерсучета(ОтчетныйПериод)));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ОбщегоНазначения.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("ТаблицаФизлиц", ТаблицаФизлиц);
	Запрос.УстановитьПараметр("ДатаНовойРедакцииЗакона212", ПроведениеРасчетов.ДатаРасширенияПеречняЛьготныхТарифовСтраховыхВзносов());
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ФизическиеЛица.ФизЛицо,
	|	ФизическиеЛица.ДатаСоставления
	|ПОМЕСТИТЬ ВТФизЛица
	|ИЗ
	|	&ТаблицаФизлиц КАК ФизическиеЛица";
	Запрос.Выполнить();

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(РасчетыПоСтраховымВзносамОбороты.ПФРСтраховаяРасход) КАК ПФРСтраховаяРасход,
	|	СУММА(РасчетыПоСтраховымВзносамОбороты.ПФРНакопительнаяРасход) КАК ПФРНакопительнаяРасход,
	|	ВЫБОР
	|		КОГДА РасчетыПоСтраховымВзносамОбороты.МесяцРасчетногоПериода < ДАТАВРЕМЯ(2010, 7, 1, 0, 0, 0)
	|			ТОГДА ДАТАВРЕМЯ(2010, 1, 1, 0, 0, 0)
	|		КОГДА РасчетыПоСтраховымВзносамОбороты.МесяцРасчетногоПериода < ДАТАВРЕМЯ(2011, 1, 1, 0, 0, 0)
	|			ТОГДА ДАТАВРЕМЯ(2010, 7, 1, 0, 0, 0)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(РасчетыПоСтраховымВзносамОбороты.МесяцРасчетногоПериода, КВАРТАЛ)
	|	КОНЕЦ КАК ОтчетныйПериод
	|ПОМЕСТИТЬ ВТВсегоУплачено
	|ИЗ
	|	РегистрНакопления.РасчетыПоСтраховымВзносам.Обороты(
	|			&ОтчетныйПериод,
	|			&КонецПериодаУплаты,
	|			,
	|			ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог)
	|				И МесяцРасчетногоПериода >= &ДатаЗаменыЕСН
	|				И Организация = &Организация) КАК РасчетыПоСтраховымВзносамОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА РасчетыПоСтраховымВзносамОбороты.МесяцРасчетногоПериода < ДАТАВРЕМЯ(2010, 7, 1, 0, 0, 0)
	|			ТОГДА ДАТАВРЕМЯ(2010, 1, 1, 0, 0, 0)
	|		КОГДА РасчетыПоСтраховымВзносамОбороты.МесяцРасчетногоПериода < ДАТАВРЕМЯ(2011, 1, 1, 0, 0, 0)
	|			ТОГДА ДАТАВРЕМЯ(2010, 7, 1, 0, 0, 0)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(РасчетыПоСтраховымВзносамОбороты.МесяцРасчетногоПериода, КВАРТАЛ)
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОтчетныйПериод";
	Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МИНИМУМ(ВсегоУплачено.ОтчетныйПериод) КАК НачалоРасчетногоПериода
	|ИЗ
	|	ВТВсегоУплачено КАК ВсегоУплачено";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() и ЗначениеЗаполнено(Выборка.НачалоРасчетногоПериода) Тогда
		Запрос.УстановитьПараметр("НачалоПериодаУплаты", ?(Выборка.НачалоРасчетногоПериода > ОтчетныйПериод, ОтчетныйПериод, Выборка.НачалоРасчетногоПериода));
	Иначе	
		Запрос.УстановитьПараметр("НачалоПериодаУплаты", ОтчетныйПериод);
	КонецЕсли;
	
	ПроцедурыПерсонифицированногоУчета.ПоместитьВМенеджерСоответствиеТарифаКатегории(Запрос.МенеджерВременныхТаблиц);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтраховыеВзносыИсчисленныеОбороты.ФизЛицо КАК ФизЛицо,
	|	СтраховыеВзносыИсчисленныеОбороты.Период КАК МесяцОтчетногоПериода,
	|	ВЫБОР
	|		КОГДА СтраховыеВзносыИсчисленныеОбороты.Период < ДАТАВРЕМЯ(2010, 7, 1, 0, 0, 0)
	|			ТОГДА ДАТАВРЕМЯ(2010, 1, 1, 0, 0, 0)
	|		КОГДА СтраховыеВзносыИсчисленныеОбороты.Период < ДАТАВРЕМЯ(2011, 1, 1, 0, 0, 0)
	|			ТОГДА ДАТАВРЕМЯ(2010, 7, 1, 0, 0, 0)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(СтраховыеВзносыИсчисленныеОбороты.Период, КВАРТАЛ)
	|	КОНЕЦ КАК ОтчетныйПериод,
	|	КОНЕЦПЕРИОДА(СтраховыеВзносыИсчисленныеОбороты.Период, МЕСЯЦ) КАК Период,
	|	СтраховыеВзносыИсчисленныеОбороты.ПФРСтраховаяОборот + ВЫБОР
	|		КОГДА СтраховыеВзносыИсчисленныеОбороты.Период < &ДатаНовойРедакцииЗакона212
	|			ТОГДА 0
	|		ИНАЧЕ СтраховыеВзносыИсчисленныеОбороты.ПФРСтраховаяЕНВДОборот
	|	КОНЕЦ КАК ПФРСтраховаяОборот,
	|	СтраховыеВзносыИсчисленныеОбороты.ПФРНакопительнаяОборот + ВЫБОР
	|		КОГДА СтраховыеВзносыИсчисленныеОбороты.Период < &ДатаНовойРедакцииЗакона212
	|			ТОГДА 0
	|		ИНАЧЕ СтраховыеВзносыИсчисленныеОбороты.ПФРНакопительнаяЕНВДОборот
	|	КОНЕЦ КАК ПФРНакопительнаяОборот,
	|	ВЫБОР
	|		КОГДА СтраховыеВзносыИсчисленныеОбороты.Период < &ДатаНовойРедакцииЗакона212
	|			ТОГДА СтраховыеВзносыИсчисленныеОбороты.ПФРСтраховаяЕНВДОборот
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПФРСтраховаяЕНВДОборот,
	|	ВЫБОР
	|		КОГДА СтраховыеВзносыИсчисленныеОбороты.Период < &ДатаНовойРедакцииЗакона212
	|			ТОГДА СтраховыеВзносыИсчисленныеОбороты.ПФРНакопительнаяЕНВДОборот
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПФРНакопительнаяЕНВДОборот
	|ПОМЕСТИТЬ ВТИсчисленоПоЗЛ
	|ИЗ
	|	РегистрНакопления.СтраховыеВзносыИсчисленные.Обороты(
	|			&НачалоПериодаУплаты,
	|			&КонецОтчетногоПериода,
	|			Месяц,
	|			ОбособленноеПодразделение = &Организация
	|				И ФизЛицо В
	|					(ВЫБРАТЬ
	|						ФизЛица.ФизЛицо
	|					ИЗ
	|						ВТФизЛица КАК ФизЛица)) КАК СтраховыеВзносыИсчисленныеОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СрезПоследнихДат.ПериодРегистрации КАК МесяцОтчетногоПериода,
	|	СрезПоследнихДат.Физлицо КАК Физлицо
	|ПОМЕСТИТЬ ВТИнвалиды
	|ИЗ
	|	(ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ) КАК ПериодРегистрации,
	|		Периоды.ФизЛицо КАК Физлицо,
	|		МАКСИМУМ(СведенияОбИнвалидностиФизлиц.Период) КАК Период
	|	ИЗ
	|		ВТИсчисленоПоЗЛ КАК Периоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК СведенияОбИнвалидностиФизлиц
	|			ПО Периоды.Период >= СведенияОбИнвалидностиФизлиц.Период
	|				И Периоды.ФизЛицо = СведенияОбИнвалидностиФизлиц.Физлицо
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.ФизЛицо,
	|		Периоды.Период) КАК СрезПоследнихДат
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК СведенияОбИнвалидностиФизлиц
	|		ПО СрезПоследнихДат.Период = СведенияОбИнвалидностиФизлиц.Период
	|			И СрезПоследнихДат.Физлицо = СведенияОбИнвалидностиФизлиц.Физлицо
	|ГДЕ
	|	СведенияОбИнвалидностиФизлиц.Инвалидность
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	МесяцОтчетногоПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ) КАК МесяцОтчетногоПериода,
	|	ЕСТЬNULL(УчетнаяПолитикаНалоговыйУчет.ВидТарифаСтраховыхВзносов, ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОбщийНалоговыйРежим)) КАК ВидТарифаСтраховыхВзносов
	|ПОМЕСТИТЬ ВТВидыТарифныхСтавокОрганизаций
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период КАК Период,
	|		УчетнаяПолитикаНалоговыйУчет.Организация КАК Организация,
	|		МАКСИМУМ(УчетнаяПолитикаНалоговыйУчет.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВТИсчисленоПоЗЛ КАК Периоды
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаНалоговыйУчет
	|			ПО Периоды.Период >= УчетнаяПолитикаНалоговыйУчет.Период
	|				И (УчетнаяПолитикаНалоговыйУчет.Организация = &ГоловнаяОрганизация)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период,
	|		УчетнаяПолитикаНалоговыйУчет.Организация) КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаНалоговыйУчет
	|		ПО Периоды.ПериодРегистра = УчетнаяПолитикаНалоговыйУчет.Период
	|			И Периоды.Организация = УчетнаяПолитикаНалоговыйУчет.Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	МесяцОтчетногоПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(РасчетыПоСтраховымВзносамОбороты.ПФРСтраховаяПриход) КАК ПФРСтраховаяПриход,
	|	СУММА(РасчетыПоСтраховымВзносамОбороты.ПФРНакопительнаяПриход) КАК ПФРНакопительнаяПриход,
	|	ВЫБОР
	|		КОГДА РасчетыПоСтраховымВзносамОбороты.МесяцРасчетногоПериода < ДАТАВРЕМЯ(2010, 7, 1, 0, 0, 0)
	|			ТОГДА ДАТАВРЕМЯ(2010, 1, 1, 0, 0, 0)
	|		КОГДА РасчетыПоСтраховымВзносамОбороты.МесяцРасчетногоПериода < ДАТАВРЕМЯ(2011, 1, 1, 0, 0, 0)
	|			ТОГДА ДАТАВРЕМЯ(2010, 7, 1, 0, 0, 0)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(РасчетыПоСтраховымВзносамОбороты.МесяцРасчетногоПериода, КВАРТАЛ)
	|	КОНЕЦ КАК ОтчетныйПериод
	|ПОМЕСТИТЬ ВТВсегоНачислено
	|ИЗ
	|	РегистрНакопления.РасчетыПоСтраховымВзносам.Обороты(
	|			,
	|			&ДатаАктуальности,
	|			,
	|			ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог)
	|				И Организация = &Организация
	|				И МесяцРасчетногоПериода В
	|					(ВЫБРАТЬ
	|						Уплачено.МесяцОтчетногоПериода
	|					ИЗ
	|						ВТИсчисленоПоЗЛ КАК Уплачено)) КАК РасчетыПоСтраховымВзносамОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА РасчетыПоСтраховымВзносамОбороты.МесяцРасчетногоПериода < ДАТАВРЕМЯ(2010, 7, 1, 0, 0, 0)
	|			ТОГДА ДАТАВРЕМЯ(2010, 1, 1, 0, 0, 0)
	|		КОГДА РасчетыПоСтраховымВзносамОбороты.МесяцРасчетногоПериода < ДАТАВРЕМЯ(2011, 1, 1, 0, 0, 0)
	|			ТОГДА ДАТАВРЕМЯ(2010, 7, 1, 0, 0, 0)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(РасчетыПоСтраховымВзносамОбороты.МесяцРасчетногоПериода, КВАРТАЛ)
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОтчетныйПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФизЛица.ФизЛицо КАК ФизЛицо,
	|	ИсчисленоПоЗЛ.ПФРНакопительнаяОборот КАК ПФРНакопительнаяОборот,
	|	ИсчисленоПоЗЛ.ПФРСтраховаяОборот КАК ПФРСтраховаяОборот,
	|	ИсчисленоПоЗЛ.ОтчетныйПериод КАК ОтчетныйПериод,
	|	ИсчисленоПоЗЛ.МесяцОтчетногоПериода КАК МесяцОтчетногоПериода,
	|	ВЫБОР
	|		КОГДА Инвалиды.Физлицо ЕСТЬ НЕ NULL 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|		ИНАЧЕ ВидыТарифныхСтавокОрганизаций.ВидТарифаСтраховыхВзносов
	|	КОНЕЦ КАК ВидТарифаСтраховыхВзносов
	|ПОМЕСТИТЬ ВТИсчисленоПоЗЛпоВидамТарифа
	|ИЗ
	|	ВТФизЛица КАК ФизЛица
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсчисленоПоЗЛ КАК ИсчисленоПоЗЛ
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТИнвалиды КАК Инвалиды
	|			ПО ИсчисленоПоЗЛ.ФизЛицо = Инвалиды.Физлицо
	|				И ИсчисленоПоЗЛ.МесяцОтчетногоПериода = Инвалиды.МесяцОтчетногоПериода
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТВидыТарифныхСтавокОрганизаций КАК ВидыТарифныхСтавокОрганизаций
	|			ПО ИсчисленоПоЗЛ.МесяцОтчетногоПериода = ВидыТарифныхСтавокОрганизаций.МесяцОтчетногоПериода
	|		ПО ФизЛица.ФизЛицо = ИсчисленоПоЗЛ.ФизЛицо
	|			И ФизЛица.ДатаСоставления > ИсчисленоПоЗЛ.МесяцОтчетногоПериода
	|ГДЕ
	|	(ИсчисленоПоЗЛ.ПФРСтраховаяОборот <> 0
	|			ИЛИ ИсчисленоПоЗЛ.ПФРНакопительнаяОборот <> 0)
	|	И ИсчисленоПоЗЛ.ФизЛицо ЕСТЬ НЕ NULL 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ФизЛица.ФизЛицо,
	|	ИсчисленоПоЗЛ.ПФРНакопительнаяЕНВДОборот,
	|	ИсчисленоПоЗЛ.ПФРСтраховаяЕНВДОборот,
	|	ИсчисленоПоЗЛ.ОтчетныйПериод,
	|	ИсчисленоПоЗЛ.МесяцОтчетногоПериода,
	|	ВЫБОР
	|		КОГДА Инвалиды.Физлицо ЕСТЬ НЕ NULL 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|	КОНЕЦ
	|ИЗ
	|	ВТФизЛица КАК ФизЛица
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсчисленоПоЗЛ КАК ИсчисленоПоЗЛ
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТИнвалиды КАК Инвалиды
	|			ПО ИсчисленоПоЗЛ.ФизЛицо = Инвалиды.Физлицо
	|				И ИсчисленоПоЗЛ.МесяцОтчетногоПериода = Инвалиды.МесяцОтчетногоПериода
	|		ПО ФизЛица.ФизЛицо = ИсчисленоПоЗЛ.ФизЛицо
	|			И ФизЛица.ДатаСоставления > ИсчисленоПоЗЛ.МесяцОтчетногоПериода
	|ГДЕ
	|	(ИсчисленоПоЗЛ.ПФРСтраховаяЕНВДОборот <> 0
	|			ИЛИ ИсчисленоПоЗЛ.ПФРНакопительнаяЕНВДОборот <> 0)
	|	И ИсчисленоПоЗЛ.ФизЛицо ЕСТЬ НЕ NULL 
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВсегоУплачено.ОтчетныйПериод КАК ОтчетныйПериод,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВсегоНачислено.ПФРНакопительнаяПриход, 0) = 0
	|			ТОГДА 0
	|		КОГДА ЕСТЬNULL(ВсегоУплачено.ПФРНакопительнаяРасход, 0) / ЕСТЬNULL(ВсегоНачислено.ПФРНакопительнаяПриход, 0) > 1
	|			ТОГДА 1
	|		ИНАЧЕ ЕСТЬNULL(ВсегоУплачено.ПФРНакопительнаяРасход, 0) / ЕСТЬNULL(ВсегоНачислено.ПФРНакопительнаяПриход, 0)
	|	КОНЕЦ КАК КоэффициентУплатыНакопительная,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВсегоНачислено.ПФРСтраховаяПриход, 0) = 0
	|			ТОГДА 0
	|		КОГДА ЕСТЬNULL(ВсегоУплачено.ПФРСтраховаяРасход, 0) / ЕСТЬNULL(ВсегоНачислено.ПФРСтраховаяПриход, 0) > 1
	|			ТОГДА 1
	|		ИНАЧЕ ЕСТЬNULL(ВсегоУплачено.ПФРСтраховаяРасход, 0) / ЕСТЬNULL(ВсегоНачислено.ПФРСтраховаяПриход, 0)
	|	КОНЕЦ КАК КоэффициентУплатыСтраховая
	|ПОМЕСТИТЬ ВТКоэффициентыУплаты
	|ИЗ
	|	ВТВсегоУплачено КАК ВсегоУплачено
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВсегоНачислено КАК ВсегоНачислено
	|		ПО ВсегоУплачено.ОтчетныйПериод = ВсегоНачислено.ОтчетныйПериод
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОтчетныйПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СуммыВзносов.ФизЛицо КАК ФизЛицо,
	|	СуммыВзносов.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц,
	|	СУММА(СуммыВзносов.НачисленоНакопительная) КАК НачисленоНакопительная,
	|	СУММА(СуммыВзносов.НачисленоСтраховая) КАК НачисленоСтраховая,
	|	СУММА(СуммыВзносов.УплаченоСтраховая) КАК УплаченоСтраховая,
	|	СУММА(СуммыВзносов.УплаченоНакопительная) КАК УплаченоНакопительная
	|ИЗ
	|	(ВЫБРАТЬ
	|		ИсчисленоЗаПериодФормирования.ФизЛицо КАК ФизЛицо,
	|		СоответствиеТарифаКатегории.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц,
	|		ИсчисленоЗаПериодФормирования.ПФРНакопительнаяОборот КАК НачисленоНакопительная,
	|		ИсчисленоЗаПериодФормирования.ПФРСтраховаяОборот КАК НачисленоСтраховая,
	|		0 КАК УплаченоСтраховая,
	|		0 КАК УплаченоНакопительная,
	|		ИсчисленоЗаПериодФормирования.ОтчетныйПериод КАК ОтчетныйПериод
	|	ИЗ
	|		ВТИсчисленоПоЗЛпоВидамТарифа КАК ИсчисленоЗаПериодФормирования
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТСоответствиеТарифаКатегории КАК СоответствиеТарифаКатегории
	|			ПО (ГОД(ИсчисленоЗаПериодФормирования.ОтчетныйПериод) МЕЖДУ СоответствиеТарифаКатегории.ГодС И СоответствиеТарифаКатегории.ГодПо)
	|				И ИсчисленоЗаПериодФормирования.ВидТарифаСтраховыхВзносов = СоответствиеТарифаКатегории.ВидТарифаСтраховыхВзносов
	|	ГДЕ
	|		ИсчисленоЗаПериодФормирования.ОтчетныйПериод = &ОтчетныйПериод
	|		И (ИсчисленоЗаПериодФормирования.ПФРНакопительнаяОборот <> 0
	|				ИЛИ ИсчисленоЗаПериодФормирования.ПФРСтраховаяОборот <> 0)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ИсчисленоПоЗЛ.ФизЛицо,
	|		СоответствиеТарифаКатегории.КатегорияЗастрахованныхЛиц,
	|		0,
	|		0,
	|		СУММА(ИсчисленоПоЗЛ.ПФРСтраховаяОборот) * КоэффициентыУплаты.КоэффициентУплатыСтраховая,
	|		СУММА(ИсчисленоПоЗЛ.ПФРНакопительнаяОборот) * КоэффициентыУплаты.КоэффициентУплатыНакопительная,
	|		КоэффициентыУплаты.ОтчетныйПериод
	|	ИЗ
	|		ВТКоэффициентыУплаты КАК КоэффициентыУплаты
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТИсчисленоПоЗЛпоВидамТарифа КАК ИсчисленоПоЗЛ
	|			ПО КоэффициентыУплаты.ОтчетныйПериод = ИсчисленоПоЗЛ.ОтчетныйПериод
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТСоответствиеТарифаКатегории КАК СоответствиеТарифаКатегории
	|			ПО (ГОД(&ОтчетныйПериод) МЕЖДУ СоответствиеТарифаКатегории.ГодС И СоответствиеТарифаКатегории.ГодПо)
	|				И (ИсчисленоПоЗЛ.ВидТарифаСтраховыхВзносов = СоответствиеТарифаКатегории.ВидТарифаСтраховыхВзносов)
	|	ГДЕ
	|		ИсчисленоПоЗЛ.ФизЛицо ЕСТЬ НЕ NULL 
	|		И (КоэффициентыУплаты.КоэффициентУплатыНакопительная <> 0
	|				ИЛИ КоэффициентыУплаты.КоэффициентУплатыСтраховая <> 0)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		КоэффициентыУплаты.КоэффициентУплатыСтраховая,
	|		КоэффициентыУплаты.КоэффициентУплатыНакопительная,
	|		ИсчисленоПоЗЛ.ФизЛицо,
	|		СоответствиеТарифаКатегории.КатегорияЗастрахованныхЛиц,
	|		КоэффициентыУплаты.ОтчетныйПериод) КАК СуммыВзносов
	|
	|СГРУППИРОВАТЬ ПО
	|	СуммыВзносов.ФизЛицо,
	|	СуммыВзносов.КатегорияЗастрахованныхЛиц
	|
	|ИМЕЮЩИЕ
	|	(СУММА(СуммыВзносов.НачисленоНакопительная) <> 0
	|		ИЛИ СУММА(СуммыВзносов.НачисленоСтраховая) <> 0
	|		ИЛИ СУММА(СуммыВзносов.УплаченоСтраховая) <> 0
	|		ИЛИ СУММА(СуммыВзносов.УплаченоНакопительная) <> 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизЛицо,
	|	КатегорияЗастрахованныхЛиц";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст,"РегистрСведений.УчетнаяПолитикаНалоговыйУчет", ЗаполнениеРегламентированнойОтчетностиПереопределяемый.ИмяУчетнойПолитики());
	
	РезультатЗапроса = Запрос.Выполнить();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;	
	
	Возврат РезультатЗапроса.Выгрузить();
	
КонецФункции // ДанныеОВзносахПоКатегориям()

Процедура РассчитатьВзносы(НомерСтроки = Неопределено) Экспорт
	
	Если НомерСтроки = Неопределено Тогда
		ТаблицаФизлиц = РаботникиОрганизации.Выгрузить(,"Физлицо, ДатаСоставления");
	Иначе
		ТаблицаФизлиц = РаботникиОрганизации.Выгрузить(Новый Структура("НомерСтроки",НомерСтроки),"Физлицо, ДатаСоставления");
	КонецЕсли;
	
	Если ТаблицаФизлиц.Количество() = 0 Тогда
		Возврат
	КонецЕсли;
	
	ВзносыФизлиц = ДанныеОВзносахПоКатегориям(Дата, ОтчетныйПериод, Организация, ТаблицаФизлиц);
	ВзносыФизлиц.Индексы.Добавить("Физлицо,КатегорияЗастрахованныхЛиц");
	
	СтруктураПоиска = Новый Структура("Физлицо,КатегорияЗастрахованныхЛиц", , КатегорияЗастрахованныхЛиц);
	Если НомерСтроки = Неопределено Тогда
		Для каждого СтрокаДокумента Из РаботникиОрганизации Цикл
			СтруктураПоиска.Физлицо = СтрокаДокумента.Физлицо;
			СтрокиФизлица = ВзносыФизлиц.НайтиСтроки(СтруктураПоиска);
			Если СтрокиФизлица.Количество() > 0 Тогда
				ЗаполнитьЗначенияСвойств(СтрокаДокумента, СтрокиФизлица[0]);
			Иначе
				СтрокаДокумента.НачисленоСтраховая = 0;
				СтрокаДокумента.УплаченоСтраховая = 0;
				СтрокаДокумента.НачисленоНакопительная = 0;
				СтрокаДокумента.УплаченоНакопительная = 0;
			КонецЕсли;
		КонецЦикла;
	Иначе
		СтрокаДокумента = РаботникиОрганизации.Найти(НомерСтроки,"НомерСтроки");
		Если СтрокаДокумента <> Неопределено Тогда
			СтруктураПоиска.Физлицо = СтрокаДокумента.Физлицо;
			СтрокиФизлица = ВзносыФизлиц.НайтиСтроки(СтруктураПоиска);
			Если СтрокиФизлица.Количество() > 0 Тогда
				ЗаполнитьЗначенияСвойств(СтрокаДокумента, СтрокиФизлица[0]);
			Иначе
				СтрокаДокумента.НачисленоСтраховая = 0;
				СтрокаДокумента.УплаченоСтраховая = 0;
				СтрокаДокумента.НачисленоНакопительная = 0;
				СтрокаДокумента.УплаченоНакопительная = 0;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // РассчитатьВзносы()
	

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	СтруктураМакетов = Новый Структура;
	СтруктураМакетов.Вставить("ФормаСПВ1", "Форма СПВ-1");
	
	Возврат СтруктураМакетов;
	
КонецФункции // ПолучитьСтруктуруПечатныхФорм()

#Если Клиент Тогда

//Процедура вывода сведений на печать
Функция Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь, НепосредственнаяПечать = Ложь) Экспорт
	
	Если ИмяМакета = "ФормаСПВ1" Тогда
		
		Возврат ПроцедурыПерсонифицированногоУчета.ПечатнаяФормаСЗВ_6(ЭтотОбъект, "СПВ-1", ИмяМакета, КоличествоЭкземпляров, НаПринтер)
		
	КонецЕсли;
	
КонецФункции // Печать()

#КонецЕсли

// Формирует файл, который можно будет записать на дискетку
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Строка - содержимое файла
//
Функция СформироватьВыходнойФайл(Отказ, ПроверятьДанные = Истина, РезультатЗапросаПоЗаписямСтажа = Неопределено) Экспорт
	
	// Заголовок для сообщений об ошибках 
	Заголовок = "Формирование файла по документу " + СокрЛП(ЭтотОбъект);
	
	//Проверка корректности заполнения документа
	ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапке().Выбрать();
	ВыборкаПоШапкеДокумента.Следующий();
	Если ПроверятьДанные Тогда
		ПроверитьПравильностьЗаполненияДокумента(Отказ, Ложь, ВыборкаПоШапкеДокумента, РезультатЗапросаПоЗаписямСтажа);
	КонецЕсли;
	
	Если Отказ тогда
		Возврат "";
	КонецЕсли;	 
	
	Возврат ПроцедурыПерсонифицированногоУчета.ФайлСведенийОВзносахИСтаже(ВыборкаПоШапкеДокумента, РезультатЗапросаПоЗаписямСтажа, ВыборкаПоШапкеДокумента.Количество, Заголовок, Отказ)
	
КонецФункции 

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Формирует запрос по шапке документа
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросПоШапке() Экспорт 

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка",	Ссылка);
	Запрос.УстановитьПараметр("Руководитель",	Руководитель);
	Запрос.УстановитьПараметр("ДатаФИО",		Дата);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(Застрахованные.НачисленоСтраховая) КАК НачисленоСтраховая,
	|	СУММА(Застрахованные.УплаченоСтраховая) КАК УплаченоСтраховая,
	|	СУММА(Застрахованные.НачисленоНакопительная) КАК НачисленоНакопительная,
	|	СУММА(Застрахованные.УплаченоНакопительная) КАК УплаченоНакопительная,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Застрахованные.НомерСтроки) КАК Количество
	|ПОМЕСТИТЬ ВТИтоги
	|ИЗ
	|	Документ.СведенияОВзносахИСтраховомСтажеСПВ1.РаботникиОрганизации КАК Застрахованные
	|ГДЕ
	|	Застрахованные.Ссылка = &ДокументСсылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫБОР
	|		КОГДА ФИОФизЛицСрезПоследних.ФизЛицо ЕСТЬ NULL 
	|			ТОГДА ФизическиеЛица.Наименование
	|		ИНАЧЕ ФИОФизЛицСрезПоследних.Фамилия + "" "" + ФИОФизЛицСрезПоследних.Имя + "" "" + ФИОФизЛицСрезПоследних.Отчество
	|	КОНЕЦ КАК ФИОРуководителя
	|ПОМЕСТИТЬ ВТФИОРуководителя
	|ИЗ
	|	Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаФИО, ФизЛицо = &Руководитель) КАК ФИОФизЛицСрезПоследних
	|		ПО ФизическиеЛица.Ссылка = ФИОФизЛицСрезПоследних.ФизЛицо
	|ГДЕ
	|	ФизическиеЛица.Ссылка = &Руководитель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОВзносахИСтраховомСтажеСПВ1.Ссылка КАК Ссылка,
	|	СведенияОВзносахИСтраховомСтажеСПВ1.Дата КАК Дата,
	|	СведенияОВзносахИСтраховомСтажеСПВ1.Дата КАК Период,
	|	СведенияОВзносахИСтраховомСтажеСПВ1.Номер КАК Номер,
	|	СведенияОВзносахИСтраховомСтажеСПВ1.Организация КАК Организация,
	|	СведенияОВзносахИСтраховомСтажеСПВ1.НомерПачки,
	|	СведенияОВзносахИСтраховомСтажеСПВ1.ОтчетныйПериод,
	|	СведенияОВзносахИСтраховомСтажеСПВ1.ОтчетныйПериод КАК КорректируемыйПериод,
	|	СведенияОВзносахИСтраховомСтажеСПВ1.КатегорияЗастрахованныхЛиц,
	|	""СПВ-1"" КАК ТипФормДокументов,
	|	СведенияОВзносахИСтраховомСтажеСПВ1.ДолжностьРуководителя.Наименование КАК РуководительДолжность,
	|	СведенияОВзносахИСтраховомСтажеСПВ1.Организация.Наименование,
	|	СведенияОВзносахИСтраховомСтажеСПВ1.Организация.ЮрФизЛицо КАК ОрганизацияЮрФизЛицо,
	|	СведенияОВзносахИСтраховомСтажеСПВ1.Организация.ОГРН КАК ОрганизацияОГРН,
	|	СведенияОВзносахИСтраховомСтажеСПВ1.Организация.НаименованиеОКОПФ КАК ОрганизацияНаименованиеОКОПФ,
	|	СведенияОВзносахИСтраховомСтажеСПВ1.Организация.НаименованиеПолное,
	|	СведенияОВзносахИСтраховомСтажеСПВ1.Организация.НаименованиеСокращенное,
	|	СведенияОВзносахИСтраховомСтажеСПВ1.Организация.РегистрационныйНомерПФР,
	|	СведенияОВзносахИСтраховомСтажеСПВ1.Организация.ИНН,
	|	СведенияОВзносахИСтраховомСтажеСПВ1.Организация.КПП,
	|	СведенияОВзносахИСтраховомСтажеСПВ1.Организация.КодПоОКПО КАК ОКПО,
	|	ВЫБОР
	|		КОГДА СведенияОВзносахИСтраховомСтажеСПВ1.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА СведенияОВзносахИСтраховомСтажеСПВ1.Организация
	|		ИНАЧЕ СведенияОВзносахИСтраховомСтажеСПВ1.Организация.ГоловнаяОрганизация
	|	КОНЕЦ КАК ГоловнаяОрганизация,
	|	Итоги.НачисленоСтраховая,
	|	Итоги.УплаченоСтраховая,
	|	Итоги.НачисленоНакопительная,
	|	Итоги.УплаченоНакопительная,
	|	Итоги.Количество,
	|	ЕСТЬNULL(ФИОФизЛиц.ФИОРуководителя, """") КАК Руководитель,
	|	ГОД(СведенияОВзносахИСтраховомСтажеСПВ1.ОтчетныйПериод) КАК Год,
	|	СведенияОВзносахИСтраховомСтажеСПВ1.ФорматФайла,
	|	СведенияОВзносахИСтраховомСтажеСПВ1.ТипСведенийСЗВ
	|ИЗ
	|	Документ.СведенияОВзносахИСтраховомСтажеСПВ1 КАК СведенияОВзносахИСтраховомСтажеСПВ1
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИОРуководителя КАК ФИОФизЛиц
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИтоги КАК Итоги
	|		ПО (ИСТИНА)
	|ГДЕ
	|	СведенияОВзносахИСтраховомСтажеСПВ1.Ссылка = &ДокументСсылка";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоШапке()

Функция СформироватьЗапросПоРаботникиОрганизации(ВыборкаПоШапкеДокумента)

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка",			ВыборкаПоШапкеДокумента.Ссылка);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация",	ВыборкаПоШапкеДокумента.ГоловнаяОрганизация);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗастрахованныеЛица.Ссылка КАК Ссылка,
	|	ЗастрахованныеЛица.ФизЛицо КАК ФизЛицо,
	|	ЗастрахованныеЛица.НомерСтроки КАК НомерСтроки,
	|	ЗастрахованныеЛица.СтраховойНомерПФР,
	|	ЗастрахованныеЛица.Фамилия,
	|	ЗастрахованныеЛица.Имя,
	|	ЗастрахованныеЛица.Отчество,
	|	ЗастрахованныеЛица.НачисленоСтраховая,
	|	ЗастрахованныеЛица.УплаченоСтраховая,
	|	ЗастрахованныеЛица.НачисленоНакопительная,
	|	ЗастрахованныеЛица.УплаченоНакопительная,
	|	ЗастрахованныеЛица.ДатаСоставления,
	|	ЗастрахованныеЛица.Ссылка.Организация,
	|	ЗастрахованныеЛица.Ссылка.КатегорияЗастрахованныхЛиц,
	|	ЗастрахованныеЛица.Ссылка.ОтчетныйПериод
	|ПОМЕСТИТЬ ВТЗастрахованныеЛица
	|ИЗ
	|	Документ.СведенияОВзносахИСтраховомСтажеСПВ1.РаботникиОрганизации КАК ЗастрахованныеЛица
	|ГДЕ
	|	ЗастрахованныеЛица.Ссылка = &ДокументСсылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки,
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТЧРаботникиОрг.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ВТЗарегистрированныеСотрудниками
	|ИЗ
	|	ВТЗастрахованныеЛица КАК ТЧРаботникиОрг
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
	|		ПО ТЧРаботникиОрг.ФизЛицо = СотрудникиОрганизаций.Физлицо
	|			И (СотрудникиОрганизаций.Организация = &ГоловнаяОрганизация)
	|ГДЕ
	|	СотрудникиОрганизаций.Ссылка ЕСТЬ НЕ NULL 
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗастрахованныеЛица.ФизЛицо КАК ФизЛицо,
	|	КОЛИЧЕСТВО(ЗаписиОСтажеДляСЗВ4.НомерОсновнойЗаписи) КАК КоличествоЗаписей
	|ПОМЕСТИТЬ ВТДанныеОСтаже
	|ИЗ
	|	ВТЗастрахованныеЛица КАК ЗастрахованныеЛица
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаписиОСтажеДляСЗВ4 КАК ЗаписиОСтажеДляСЗВ4
	|		ПО ЗастрахованныеЛица.ФизЛицо = ЗаписиОСтажеДляСЗВ4.ФизЛицо
	|			И ЗастрахованныеЛица.Ссылка.ОтчетныйПериод = ЗаписиОСтажеДляСЗВ4.ОтчетныйПериод
	|			И ЗастрахованныеЛица.Ссылка.Организация = ЗаписиОСтажеДляСЗВ4.ОбособленноеПодразделение
	|			И ЗастрахованныеЛица.Ссылка.КатегорияЗастрахованныхЛиц = ЗаписиОСтажеДляСЗВ4.КатегорияЗастрахованныхЛиц
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗастрахованныеЛица.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ВтораяТаблица.НомерСтроки) КАК НомерПовторяющейсяСтроки,
	|	ПерваяТаблица.Ссылка,
	|	ПерваяТаблица.ФизЛицо,
	|	ПерваяТаблица.НомерСтроки КАК НомерСтроки,
	|	ПерваяТаблица.СтраховойНомерПФР,
	|	ПерваяТаблица.Фамилия,
	|	ПерваяТаблица.Имя,
	|	ПерваяТаблица.Отчество,
	|	ПерваяТаблица.НачисленоСтраховая,
	|	ПерваяТаблица.УплаченоСтраховая,
	|	ПерваяТаблица.НачисленоНакопительная,
	|	ПерваяТаблица.УплаченоНакопительная,
	|	ПерваяТаблица.ФизЛицо.Наименование,
	|	ВЫБОР
	|		КОГДА ЗарегистрированныеСотрудниками.НомерСтроки ЕСТЬ НЕ NULL 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ФизЛицоРаботаетВОрганизации,
	|	ПерваяТаблица.ДатаСоставления,
	|	"""" КАК АдресДляИнформирования,
	|	ПерваяТаблица.Организация,
	|	ПерваяТаблица.КатегорияЗастрахованныхЛиц,
	|	ПерваяТаблица.ОтчетныйПериод,
	|	ЕСТЬNULL(ДанныеОСтаже.КоличествоЗаписей, 0) КАК КоличествоЗаписейОСтаже
	|ИЗ
	|	ВТЗастрахованныеЛица КАК ПерваяТаблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗарегистрированныеСотрудниками КАК ЗарегистрированныеСотрудниками
	|		ПО ПерваяТаблица.НомерСтроки = ЗарегистрированныеСотрудниками.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗастрахованныеЛица КАК ВтораяТаблица
	|		ПО ПерваяТаблица.ФизЛицо = ВтораяТаблица.ФизЛицо
	|			И ПерваяТаблица.НомерСтроки < ВтораяТаблица.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОСтаже КАК ДанныеОСтаже
	|		ПО ПерваяТаблица.ФизЛицо = ДанныеОСтаже.ФизЛицо
	|
	|СГРУППИРОВАТЬ ПО
	|	ПерваяТаблица.Ссылка,
	|	ПерваяТаблица.ФизЛицо,
	|	ПерваяТаблица.НомерСтроки,
	|	ПерваяТаблица.СтраховойНомерПФР,
	|	ПерваяТаблица.Фамилия,
	|	ПерваяТаблица.Имя,
	|	ПерваяТаблица.Отчество,
	|	ПерваяТаблица.НачисленоСтраховая,
	|	ПерваяТаблица.УплаченоСтраховая,
	|	ПерваяТаблица.НачисленоНакопительная,
	|	ПерваяТаблица.УплаченоНакопительная,
	|	ПерваяТаблица.ФизЛицо.Наименование,
	|	ВЫБОР
	|		КОГДА ЗарегистрированныеСотрудниками.НомерСтроки ЕСТЬ НЕ NULL 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ПерваяТаблица.ДатаСоставления,
	|	ПерваяТаблица.Организация,
	|	ПерваяТаблица.КатегорияЗастрахованныхЛиц,
	|	ПерваяТаблица.ОтчетныйПериод,
	|	ЕСТЬNULL(ДанныеОСтаже.КоличествоЗаписей, 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоРаботникиОрганизации()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, Режим)

	Если Проведен И ПринятоВПФР Тогда
		Возврат
	КонецЕсли;
	
	Для Каждого Набор Из Движения Цикл
		Набор.Очистить();
	КонецЦикла;
	
	
	ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапке().Выбрать();
	ВыборкаПоШапкеДокумента.Следующий();
	
	РезультатЗапросаПоЗаписямСтажа = Неопределено;
	ПроверитьПравильностьЗаполненияДокумента(Отказ, Ложь, ВыборкаПоШапкеДокумента, РезультатЗапросаПоЗаписямСтажа);
	
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	//При проведении файл формируем заново 
	ТекстФайла = СформироватьВыходнойФайл(Отказ, Ложь, РезультатЗапросаПоЗаписямСтажа);
	
	//Сохраним сформированный файл сведений в регистре сведений
	Запись = Движения.АрхивДанныхРегламентированнойОтчетности.Добавить();
	Запись.Объект = Ссылка;
	Запись.ОписаниеДанных = "Файл формы СПВ-1";
	Запись.Данные = ТекстФайла;

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	
	
	Если Отказ Тогда
		Возврат
	КонецЕсли;
	
	Год = Год(ОтчетныйПериод);
	
	ПроцедурыПерсонифицированногоУчета.ПроставитьНомерПачки(ЭтотОбъект);
	
	КраткийСоставДокумента = ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(РаботникиОрганизации,, "ФизЛицо");
	
	Если ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ Тогда
		Для каждого СтрокаТЧ Из РаботникиОрганизации Цикл
			СтрокаТЧ.НачисленоНакопительная = 0;
			СтрокаТЧ.НачисленоСтраховая = 0;
			СтрокаТЧ.УплаченоНакопительная = 0;
			СтрокаТЧ.УплаченоСтраховая = 0;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	Отказ = ПринятоВПФР;
	Если Не Отказ Тогда
		Для Каждого Набор Из Движения Цикл
			Набор.Очистить();
			Набор.Записать();
		КонецЦикла
	КонецЕсли;
КонецПроцедуры

// Строки, хранят реквизиты имеющие смысл только для бух. учета и упр. соответственно
// в случае если документ не отражается в каком-то виде учета, делаются невидимыми

Перем мСтрокаРеквизитыБухУчета Экспорт; // (Регл)
Перем мСтрокаРеквизитыНалУчета Экспорт; // (Регл)

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

// Процедура заполняет структуры именами реквизитов, которые имеют смысл
// только для определенного вида учета
//
Процедура ЗаполнитьСписокРеквизитовЗависимыхОтТиповУчета() Экспорт

	мСтрокаРеквизитыБухУчета =  "
								|ОС.СрокПолезногоИспользованияБУ,
								|ОС.СрокИспользованияДляВычисленияАмортизацииБУ,
								|ОС.ОбъемПродукцииРаботБУ,
								|ОС.ОбъемПродукцииРаботДляВычисленияАмортизацииБУ,
								|ОС.СтоимостьДляВычисленияАмортизацииБУ,
								|ОС.КоэффициентАмортизацииБУ,
								|ОС.КоэффициентУскоренияБУ";

	мСтрокаРеквизитыНалУчета =  "ОС.СрокПолезногоИспользованияНУ,
	                            |ОС.ПРДляВычисленияАмортизации";

КонецПроцедуры // ЗаполнитьСписокРеквизитовЗависимыхОтТиповУчета()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизитов шапки, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверяется также правильность заполнения реквизитов ссылочных полей документа.
// Проверка выполняется по объекту и по выборке из результата запроса по шапке.
//
// Параметры: 
//  СтруктураШапкиДокумента - выборка из результата запроса по шапке документа,
//  Отказ                   - флаг отказа в проведении,
//  Заголовок               - строка, заголовок сообщения об ошибке проведения.
//
Процедура ПроверитьЗаполнениеШапки(СтруктураШапкиДокумента,Отказ, Заголовок)

	// Документ должен принадлежать хотя бы к одному виду учета (управленческий, бухгалтерский, налоговый)
	ОбщегоНазначения.ПроверитьПринадлежностьКВидамУчета(СтруктураШапкиДокумента, Отказ, Заголовок);

	// Укажем, что надо проверить:
	СтруктураОбязательныхПолей = Новый Структура("Организация");

	// Теперь вызовем общую процедуру проверки.
	ЗаполнениеДокументов.ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);

	//Проверим на виды операций, которые не будут полностью отработаны в данном документе
	Если СтруктураШапкиДокумента.ВидСобытияОС = Перечисления.ВидыСобытийОС.ПринятиеКУчету 
	 или СтруктураШапкиДокумента.ВидСобытияОС = Перечисления.ВидыСобытийОС.ПринятиеКУчетуСВводомВЭксплуатацию 
	 или СтруктураШапкиДокумента.ВидСобытияОС = Перечисления.ВидыСобытийОС.ВводВЭксплуатацию
	 или СтруктураШапкиДокумента.ВидСобытияОС = Перечисления.ВидыСобытийОС.Передача
	 или СтруктураШапкиДокумента.ВидСобытияОС = Перечисления.ВидыСобытийОС.Списание тогда

		ОбщегоНазначения.ОшибкаПриПроведении("События с основными средствами с видом <"+строка(СтруктураШапкиДокумента.ВидСобытияОС)+">
		|не будут полноценно отражены данным документом (учетное состояние ОС не изменится)!",,Заголовок);

	КонецЕсли;


КонецПроцедуры // ПроверитьЗаполнениеШапки()

// Проверяет правильность заполнения строк табличной части "Товары".
//
// Параметры:
// Параметры: 
//  ТаблицаПоТоварам        - таблица значений, содержащая данные для проведения и проверки ТЧ Товары
//  СтруктураШапкиДокумента - структура, содержащая реквизиты шапки документа и результаты запроса по шапке
//  Отказ                   - флаг отказа в проведении.
//  Заголовок               - строка, заголовок сообщения об ошибке проведения.
//
Процедура ПроверитьЗаполнениеТабличнойЧастиОС(Отказ, Заголовок)

	// Укажем, что надо проверить:
	СтруктураОбязательныхПолей = Новый Структура("ОсновноеСредство");

	// Теперь вызовем общую процедуру проверки.
	ЗаполнениеДокументов.ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, "ОС", СтруктураОбязательныхПолей, Отказ, Заголовок);

КонецПроцедуры // ПроверитьЗаполнениеТабличнойЧастиТовары()

// Выполняет движения по регистрам 
//
Процедура ДвиженияПоРегистрам(СтруктураШапкиДокумента, ТаблицаПоОС);

	ДатаДок = СтруктураШапкиДокумента.Дата;

	Если СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете Тогда

		ПараметрыАмортизацииБУ = Движения.ПараметрыАмортизацииОСБухгалтерскийУчет;

		Для Каждого СтрокаТЧ из ТаблицаПоОС Цикл

			СтрокаДвижений = ПараметрыАмортизацииБУ.Добавить();

			СтрокаДвижений.Период           = ДатаДок;
			СтрокаДвижений.ОсновноеСредство = СтрокаТЧ.ОсновноеСредство;
			СтрокаДвижений.Организация      = СтруктураШапкиДокумента.Организация;

			СтрокаДвижений.СрокПолезногоИспользования                  = СтрокаТЧ.СрокПолезногоИспользованияБУ;
			СтрокаДвижений.ОбъемПродукцииРабот                         = СтрокаТЧ.ОбъемПродукцииРаботБУ;
			СтрокаДвижений.СрокИспользованияДляВычисленияАмортизации   = СтрокаТЧ.СрокИспользованияДляВычисленияАмортизацииБУ;
			СтрокаДвижений.СтоимостьДляВычисленияАмортизации           = СтрокаТЧ.СтоимостьДляВычисленияАмортизацииБУ;
			СтрокаДвижений.ОбъемПродукцииРаботДляВычисленияАмортизации = СтрокаТЧ.ОбъемПродукцииРаботДляВычисленияАмортизацииБУ;
			СтрокаДвижений.КоэффициентАмортизации                      = СтрокаТЧ.КоэффициентАмортизацииБУ;
			СтрокаДвижений.КоэффициентУскорения                        = СтрокаТЧ.КоэффициентУскоренияБУ;

		КонецЦикла;

	КонецЕсли;

	Если СтруктураШапкиДокумента.ОтражатьВНалоговомУчете Тогда

		ПараметрыАмортизацииНУ = Движения.ПараметрыАмортизацииОСНалоговыйУчет;

		Для Каждого СтрокаТЧ из ТаблицаПоОС Цикл

			СтрокаДвижений = ПараметрыАмортизацииНУ.Добавить();

			СтрокаДвижений.Период           = ДатаДок;
			СтрокаДвижений.ОсновноеСредство = СтрокаТЧ.ОсновноеСредство;
			СтрокаДвижений.Организация      = СтруктураШапкиДокумента.Организация;
			СтрокаДвижений.СрокПолезногоИспользования = СтрокаТЧ.СрокПолезногоИспользованияНУ;
            СтрокаДвижений.ПРДляВычисленияАмортизации = СтрокаТЧ.ПРДляВычисленияАмортизации;
			
		КонецЦикла;

	КонецЕсли;

	ОперацииОС = Движения.СобытияОСОрганизаций;

	Для Каждого СтрокаТЧ из ТаблицаПоОС Цикл

		СтрокаДвижений = ОперацииОС.Добавить();

		СтрокаДвижений.Период            = ДатаДок;
		СтрокаДвижений.ОсновноеСредство  = СтрокаТЧ.ОсновноеСредство;
		СтрокаДвижений.Организация       = СтруктураШапкиДокумента.Организация;
		СтрокаДвижений.Событие           = СтруктураШапкиДокумента.СобытиеОС;
		СтрокаДвижений.НазваниеДокумента = Строка(СтруктураШапкиДокумента.Ссылка.Метаданные());
		СтрокаДвижений.НомерДокумента    = СтруктураШапкиДокумента.Номер;

	КонецЦикла;

КонецПроцедуры // ДвиженияПоРегистрам

Процедура ДополнитьСтруктуруПолейТабличнойЧастиОСРегл(СтруктураШапкиДокумента, СтруктураПолей)

	Если СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете тогда

		СтруктураПолей.Вставить("СрокПолезногоИспользованияБУ"                 , "СрокПолезногоИспользованияБУ");
		СтруктураПолей.Вставить("СрокИспользованияДляВычисленияАмортизацииБУ"  , "СрокИспользованияДляВычисленияАмортизацииБУ");
		СтруктураПолей.Вставить("ОбъемПродукцииРаботБУ"                        , "ОбъемПродукцииРаботБУ");
		СтруктураПолей.Вставить("ОбъемПродукцииРаботДляВычисленияАмортизацииБУ", "ОбъемПродукцииРаботДляВычисленияАмортизацииБУ");
		СтруктураПолей.Вставить("СтоимостьДляВычисленияАмортизацииБУ"           , "СтоимостьДляВычисленияАмортизацииБУ");
		СтруктураПолей.Вставить("КоэффициентАмортизацииБУ"                     , "КоэффициентАмортизацииБУ");
		СтруктураПолей.Вставить("КоэффициентУскоренияБУ"                       , "КоэффициентУскоренияБУ");

	Конецесли;

	Если СтруктураШапкиДокумента.ОтражатьВНалоговомУчете тогда

		СтруктураПолей.Вставить("СрокПолезногоИспользованияНУ"                   , "СрокПолезногоИспользованияНУ");
		СтруктураПолей.Вставить("ПРДляВычисленияАмортизации"                     , "ПРДляВычисленияАмортизации");
		
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ)

	Заголовок = "";

	// Сформируем структуру реквизитов шапки документа
	СтруктураШапкиДокумента = ОбщегоНазначения.СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
	СтруктураШапкиДокумента.Вставить("ВидСобытияОС",СтруктураШапкиДокумента.СобытиеОС.ВидСобытияОС);
	
	ПроверитьЗаполнениеШапки(СтруктураШапкиДокумента, Отказ, Заголовок);

	// Сформируем структуру табличной части
	СтруктураПолей = Новый Структура;
	СтруктураПолей.Вставить("ОсновноеСредство" , "ОсновноеСредство");

	ДополнитьСтруктуруПолейТабличнойЧастиОСРегл(СтруктураШапкиДокумента,СтруктураПолей);

	РезультатЗапросаПоОС = ОбщегоНазначения.СформироватьЗапросПоТабличнойЧасти(ЭтотОбъект, "ОС", СтруктураПолей);
	ТаблицаПоОС          = РезультатЗапросаПоОС.Выгрузить();

	ПроверитьЗаполнениеТабличнойЧастиОС(Отказ, Заголовок);

	// Проверим, нет ли повторяющихся основных средств в таблице по ОС.
	УправлениеВнеоборотнымиАктивами.ПроверитьДублиОС(ТаблицаПоОС, Отказ, Заголовок);
	
	Если НЕ Отказ Тогда
		
		ДвиженияПоРегистрам(СтруктураШапкиДокумента, ТаблицаПоОС);
		
	КонецЕсли;

КонецПроцедуры


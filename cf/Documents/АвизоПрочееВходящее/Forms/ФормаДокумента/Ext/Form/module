////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

// Хранит текущую дату документа - для проверки перехода документа в другой период установки номера
Перем мТекущаяДатаДокумента; 

// Хранит дерево макетов печатных форм
Перем мДеревоМакетов;

// Хранит элемент управления подменю печати
Перем мПодменюПечати;

// Хранит элемент управления кнопку печать по умолчанию
Перем мПечатьПоУмолчанию;

// Хранит дерево кнопок подменю заполнение ТЧ
Перем мКнопкиЗаполненияТЧ;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

// Процедура - обработчик события "ПриИзменении" поля ввода даты документа.
//
Процедура ДатаПриИзменении(Элемент)

	РаботаСДиалогами.ПроверитьНомерДокумента(ЭтотОбъект, мТекущаяДатаДокумента);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);

	мТекущаяДатаДокумента = Дата; // запомним текущую дату документа для контроля номера документа

КонецПроцедуры // ДатаПриИзменении()

// Процедура разрешения/запрещения редактирования номера документа
Процедура ДействияФормыРедактироватьНомер(Кнопка)
	
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
			
КонецПроцедуры

Процедура ОрганизацияОтправительНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	РаботаСДиалогами.ВыбратьЗначениеПоляВводаИзСписка(
		ЭтаФорма, Элемент, СтандартнаяОбработка, ЭлементыФормы.ОрганизацияОтправитель.СписокВыбора, ОрганизацияОтправитель);
	
КонецПроцедуры

Процедура ОрганизацияОтправительАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	
	РаботаСДиалогами.ОбработатьАвтоПодборТекста(
		Текст, ТекстАвтоПодбора, СтандартнаяОбработка, ЭлементыФормы.ОрганизацияОтправитель.СписокВыбора);
	
КонецПроцедуры

Процедура ОрганизацияОтправительОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	РаботаСДиалогами.ОбработатьОкончаниеВводаТекста(
		Текст, Значение, СтандартнаяОбработка, ЭлементыФормы.ОрганизацияОтправитель.СписокВыбора);
	
КонецПроцедуры

Процедура ОрганизацияПриИзменении(Элемент)
	
	Если Не ПустаяСтрока(Номер) Тогда
		МеханизмНумерацииОбъектов.СброситьУстановленныйКодНомерОбъекта(ЭтотОбъект, "Номер", ЭлементыФормы.ДействияФормы.Кнопки.Подменю1, ЭлементыФормы.Номер);
	КонецЕсли;
	
	// Выполняем общие действия для всех документов при изменении реквизита Организация.
	ЗаполнениеДокументов.ПриИзмененииЗначенияОрганизации(ЭтотОбъект, глЗначениеПеременной("глТекущийПользователь"));
	
	ЭлементыФормы.ОрганизацияОтправитель.СписокВыбора = ОбщегоНазначения.ПолучитьСписокОбособленныхПодразделений(Организация);
	
	Если ЭлементыФормы.ОрганизацияОтправитель.СписокВыбора.НайтиПоЗначению(ОрганизацияОтправитель) = Неопределено Тогда
		ОрганизацияОтправитель = Неопределено;
	КонецЕсли;
КонецПроцедуры

Процедура УстановитьДоступностьРеквизитовПроводки()

	ТекущиеДанные = ЭлементыФормы.ТабличнаяЧастьДанныеБух.ТекущиеДанные;
	Если НЕ ЗначениеЗаполнено(ТекущиеДанные) Тогда
		Возврат;
	КонецЕсли;

	Колонки = ЭлементыФормы.ТабличнаяЧастьДанныеБух.Колонки;
	
	// Доступность субконто
	РаботаСДиалогами.ПриВыбореСчетаВТабличномПоле(ТекущиеДанные.СчетУчета,
		ТекущиеДанные.Субконто1, Колонки.Субконто1,
		ТекущиеДанные.Субконто2, Колонки.Субконто2,
		ТекущиеДанные.Субконто3, Колонки.Субконто3,
		ТекущиеДанные.Подразделение, Колонки.Подразделение,
		Колонки.СчетУчета, Ложь);
		
	Колонки.Сумма.ТолькоПросмотр   = НЕ ЗначениеЗаполнено(ТекущиеДанные.СчетУчета);
	Колонки.СуммаКт.ТолькоПросмотр = НЕ ЗначениеЗаполнено(ТекущиеДанные.СчетУчета);

	Колонки.Валюта.ТолькоПросмотр		 = НЕ ТекущиеДанные.СчетУчета.Валютный;
	Колонки.ВалютнаяСумма.ТолькоПросмотр = НЕ ТекущиеДанные.СчетУчета.Валютный;

	Колонки.Количество.ТолькоПросмотр = НЕ ТекущиеДанные.СчетУчета.Количественный;
	
КонецПроцедуры // УстановитьДоступностьРеквизитовПроводки()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура устанавливает подменю "Заполнить" в командных панелях ТЧ документа при необходимости
//
Процедура УстановитьКнопкиПодменюЗаполненияТЧ();
	
	СоответствиеТЧ = Новый Соответствие;
	СоответствиеТЧ.Вставить(ЭлементыФормы.ТабличнаяЧастьДанныеБух, ЭлементыФормы.КоманднаяПанельДанныеБух.Кнопки.ПодменюЗаполнить);
	
	мКнопкиЗаполненияТЧ = УниверсальныеМеханизмы.СформироватьПодменюЗаполненияТЧ(Ссылка, СоответствиеТЧ, Новый Действие("НажатиеНаДополнительнуюКнопкуЗаполненияТЧ"));
	
КонецПроцедуры

// Процедура устанавливает подменю "Печать" и кнопку "Печать по умолчанию" при необходимости
//
Процедура УстановитьКнопкиПечати()
	
	мДеревоМакетов = УниверсальныеМеханизмы.ПолучитьДеревоМакетовПечати(Ссылка, Новый Структура(), Новый Действие("ОсновныеДействияФормыПечать"), Новый Действие("ОсновныеДействияФормыУстановитьПечатьПоУмолчанию"));

	УниверсальныеМеханизмы.УстановитьПодменюПечати    (мПодменюПечати, ЭлементыФормы.ОсновныеДействияФормы, мДеревоМакетов.Строки.Количество() > 0);
	УниверсальныеМеханизмы.УстановитьПечатьПоУмолчанию(мПечатьПоУмолчанию, ЭлементыФормы.ОсновныеДействияФормы, мДеревоМакетов, Метаданные().Имя,Новый Действие("ОсновныеДействияФормыПечатьПоУмолчанию"));

	Если Не мПодменюПечати = Неопределено Тогда
		УниверсальныеМеханизмы.СформироватьПодменю(мДеревоМакетов, мПодменюПечати,Истина,Истина);
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать"
//
Процедура ОсновныеДействияФормыПечать(Кнопка)     

	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);

КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать по умолчанию"
//
Процедура ОсновныеДействияФормыПечатьПоУмолчанию(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Установить печать по умолчанию"
//
Процедура ОсновныеДействияФормыУстановитьПечатьПоУмолчанию(Кнопка)        

	Если УниверсальныеМеханизмы.НазначитьКнопкуПечатиПоУмолчанию(мДеревоМакетов, Метаданные().Имя) Тогда                   
		   УстановитьКнопкиПечати();                             
	КонецЕсли;       

КонецПроцедуры

// Процедура - обработчик нажатия на любую из дополнительных кнопок по заполнению ТЧ
//
Процедура НажатиеНаДополнительнуюКнопкуЗаполненияТЧ(Кнопка)
	
	УниверсальныеМеханизмы.ОбработатьНажатиеНаДополнительнуюКнопкуЗаполненияТЧ(мКнопкиЗаполненияТЧ.Строки.Найти(Кнопка.Имя,"Имя",Истина),ЭтотОбъект);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СВОЙСТВ И КАТЕГОРИЙ

// Процедура выполняет открытие формы работы со свойствами документа
//
Процедура ДействияФормыДействиеОткрытьСвойства(Кнопка)

	РаботаСДиалогами.ОткрытьСвойстваДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	// Установка кнопок печати
	УстановитьКнопкиПечати();
	
	// Установка кнопок заполнение ТЧ
	УстановитьКнопкиПодменюЗаполненияТЧ();
	     
КонецПроцедуры // ПередОткрытием()

// Процедура - обработчик события "ПриОткрытии" формы
//
Процедура ПриОткрытии()
	
	Если ЭтоНовый() Тогда // проверить объект на то, что он еще не внесен в ИБ

		// Заполнить реквизиты значениями по умолчанию.
		ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, глЗначениеПеременной("глТекущийПользователь"),,,ПараметрОбъектКопирования);
		СчетРасчетов = ПланыСчетов.Хозрасчетный.РасчетыПоТекущимОперациям;
	КонецЕсли;
	
	ЭлементыФормы.ОрганизацияОтправитель.СписокВыбора = ОбщегоНазначения.ПолучитьСписокОбособленныхПодразделений(Организация);
	
	МеханизмНумерацииОбъектов.ДобавитьВМенюДействияКнопкуРедактированияНомера(ЭлементыФормы.ДействияФормы.Кнопки.Подменю);
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Номер);

	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента("", ЭтотОбъект, ЭтаФорма);

	мТекущаяДатаДокумента = Дата;

	// Установить активный реквизит.
	СтруктураРеквизитов = Новый Структура("Дата,Организация,ОрганизацияОтправитель,СчетРасчетов");
	РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма, СтруктураРеквизитов, ЭлементыФормы.ТабличнаяЧастьДанныеБух);
	
	// Установить доступность формы с учетом даты запрета редактирования	
	РаботаСДиалогами.УстановитьДоступностьФормыДляРедактирования(ЭтотОбъект, ЭтаФорма);
	
	РаботаСДиалогами.ИзменитьПредставлениеКнопкиВыбораСвойств(ЭтаФорма, РаботаСДиалогами.ПолучитьОписаниеЗначенийСвойствОбъекта(Ссылка));

КонецПроцедуры

// Процедура - обработчик события "ПриЗакрытии" формы.
//
Процедура ПриЗакрытии()
			
	ОбщегоНазначения.ОткрытьЖурналДокумента(ЭтаФорма);

КонецПроцедуры

// Процедура - обработчик события "ОбработкаОповещения" формы.
//
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновлениеЗначенийСвойств" И Источник = Ссылка Тогда
		РаботаСДиалогами.ИзменитьПредставлениеКнопкиВыбораСвойств(ЭтаФорма, Параметр);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПослеЗаписи()
	
	// Установка кнопок печати
	УстановитьКнопкиПечати();

	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Процедура вызова структуры подчиненности документа
//
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
	
КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ОсновныеДействияФормыНастройка(Кнопка)
	
	ОбщегоНазначения.РучнаяКорректировкаОсновнаяФорма(ЭтоНовый(),Ссылка,ЭтотОбъект);
	
КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОЙ ЧАСТИ и ее РЕКВИЗИТОВ 

Процедура ТабличнаяЧастьДанныеБухПриАктивизацииСтроки(Элемент)
	
	УстановитьДоступностьРеквизитовПроводки();

КонецПроцедуры

Процедура ТабличнаяЧастьДанныеБухСчетУчетаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = БухгалтерскийУчет.СчетМожноИспользоватьВПроводках(ВыбранноеЗначение);

КонецПроцедуры

Процедура ТабличнаяЧастьДанныеБухСчетУчетаПриИзменении(Элемент)
	
	УстановитьДоступностьРеквизитовПроводки();

	ТекущиеДанные = ЭлементыФормы.ТабличнаяЧастьДанныеБух.ТекущиеДанные;
	Колонки       = ЭлементыФормы.ТабличнаяЧастьДанныеБух.Колонки;
	                                
	РаботаСДиалогами.УстановитьПодразделениеПоСчету(
		ТекущиеДанные.Подразделение, ТекущиеДанные.СчетУчета, Организация);
	
	//обнулим незадействованные реквизиты
	Если НЕ ТекущиеДанные.СчетУчета.Валютный Тогда
		ТекущиеДанные.ВалютнаяСумма = 0;
		ТекущиеДанные.Валюта = "";
	КонецЕсли;

	Если НЕ ТекущиеДанные.СчетУчета.Количественный Тогда
		ТекущиеДанные.Количество = 0;
	КонецЕсли;

	Если Колонки.СуммаКт.ТолькоПросмотр Тогда
		Если ТекущиеДанные.СуммаКт <> 0 Тогда
			ТекущиеДанные.Сумма = ТекущиеДанные.СуммаКт;
			ТекущиеДанные.СуммаКт = 0;
		КонецЕсли;
	КонецЕсли;
	
	Если Колонки.Сумма.ТолькоПросмотр Тогда
		Если ТекущиеДанные.Сумма <> 0 Тогда
			ТекущиеДанные.СуммаКт = ТекущиеДанные.Сумма;
			ТекущиеДанные.Сумма = 0;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура ДействияФормыИзменитьДокументОснование(Кнопка)
	
	ФормаВыбора = ПолучитьОбщуюФорму("ФормаВыбораДокументаОснования");
	ФормаВыбора.ДокументОбъект = ЭтотОбъект;
	ФормаВыбора.ОткрытьМодально();
	
КонецПроцедуры

Процедура ЗаполнитьПоДокументуОснованию(ВыбиратьДокумент = Истина)
	
	Если ДокументОснование.Пустая() И НЕ ВыбиратьДокумент Тогда
		Возврат;
	КонецЕсли;
	
	Если ДанныеБух.Количество() > 0 Тогда
		
		Ответ = Вопрос("При заполнении табличная часть будет очищена.
		               |Продолжить?", РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Нет);
					   
		Если НЕ (Ответ = КодВозвратаДиалога.Да) Тогда
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ДокументОснование.Пустая() Тогда
		
		ФормаВыбора = Документы.АвизоПрочееИсходящее.ПолучитьФормуВыбора(, ЭтаФорма);
		Выбор = ФормаВыбора.ОткрытьМодально();
		
		Если Выбор <> Неопределено Тогда
			
			ДокументОснование = Выбор;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ ДокументОснование.Пустая() Тогда
		
		ДанныеБух.Очистить();
		СкопироватьДанныеБух(ДокументОснование);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельДанныеБухЗаполнитьПоДокументуОснованию(Кнопка)
	
	ЗаполнитьПоДокументуОснованию();
	
КонецПроцедуры

Процедура ДокументОснованиеПриИзменении(Элемент)
	
	ЗаполнитьПоДокументуОснованию(Ложь);
	
КонецПроцедуры


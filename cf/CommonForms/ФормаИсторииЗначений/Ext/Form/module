Перем мМассивИменаНевидимыхКолонок Экспорт;
Перем мМассивИменаКолонокАвтоОтметкаНезаполненного Экспорт;
Перем мПорядокПредставленияПериода Экспорт;

Перем мТекущиеДанныеДоРедактирования;
Перем мКолонкиДляПроверки;

///////////////////////////////////////////////////////////////////////////////
//ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Процедура ОповеститьВладельца()
	
	Оповестить("ОбновитьИсториюЗначений" + ИмяТаблицыИсторииЗначений, ТаблицаИсторииЗначений, ВладелецФормы);
	
КонецПроцедуры

// Функция проверяет заполнение обязательных реквизитов
//
Функция ДанныеНеСодержатОшибок()
	
	Если мКолонкиДляПроверки.Количество() = 0 Тогда
		Возврат Истина;
	КонецЕсли;
	
	
	 //проверим заполнение данных
	Для каждого СтрокаТЗ Из ТаблицаИсторииЗначений Цикл
		Для каждого КолонкаТП Из мКолонкиДляПроверки Цикл
			Если НЕ ЗначениеЗаполнено(СтрокаТЗ[КолонкаТП]) Тогда
				ОбщегоНазначения.СообщитьОбОшибке("Не заполнены обязательные поля в таблице!");
				Возврат Ложь;
			КонецЕсли;	
		КонецЦикла;
	КонецЦикла;

	Возврат Истина;

КонецФункции // ДанныеНеСодержатОшибок()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ОбработатьОткрытиеФормы()
	
	ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ПрименитьИзменения.Доступность = Не ЭтаФорма.ТолькоПросмотр;
	
	мТекущиеДанныеДоРедактирования = Новый Структура;
	Для каждого Колонка Из ТаблицаИсторииЗначений.Колонки Цикл
		мТекущиеДанныеДоРедактирования.Вставить(Колонка.Имя);
	КонецЦикла;
	
	ЭлементыФормы.ТаблицаИсторииЗначений.СоздатьКолонки();
	// колонка Период всегда есть
	ЭлементыФормы.ТаблицаИсторииЗначений.Колонки.Период.ТекстШапки = "Применяется с";
	ЭлементыФормы.ТаблицаИсторииЗначений.Колонки.Период.АвтоОтметкаНезаполненного = Истина;
	
	Если мМассивИменаНевидимыхКолонок.Количество() <> 0 Тогда
		Для каждого ИмяКолонки Из мМассивИменаНевидимыхКолонок Цикл
			КолонкаТаблицы = ЭлементыФормы.ТаблицаИсторииЗначений.Колонки.Найти(ИмяКолонки);
			Если КолонкаТаблицы <> Неопределено Тогда
				КолонкаТаблицы.Видимость = Ложь;	
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если мМассивИменаКолонокАвтоОтметкаНезаполненного.Количество() <> 0 Тогда
		Для каждого ИмяКолонки Из мМассивИменаКолонокАвтоОтметкаНезаполненного Цикл
			КолонкаТаблицы = ЭлементыФормы.ТаблицаИсторииЗначений.Колонки.Найти(ИмяКолонки);
			Если КолонкаТаблицы <> Неопределено Тогда
				КолонкаТаблицы.АвтоОтметкаНезаполненного = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	// заполним массив колонками, обязательными для заполнения
	мКолонкиДляПроверки = Новый Массив;
	Для каждого КолонкаТП Из ЭлементыФормы.ТаблицаИсторииЗначений.Колонки Цикл
		Если КолонкаТП.АвтоОтметкаНезаполненного Тогда
			мКолонкиДляПроверки.Добавить(КолонкаТП.Имя)
		КонецЕсли;
	КонецЦикла;
	
	ОбработкаПриИзменении = Новый Действие("ПриИзмененииПериода");
	ЭлементыФормы.ТаблицаИсторииЗначений.Колонки.Период.ЭлементУправления.УстановитьДействие("ПриИзменении", ОбработкаПриИзменении);
	
КонецПроцедуры

Процедура ПриПовторномОткрытии(СтандартнаяОбработка)
	
	Модифицированность = Ложь;
	ОбработатьОткрытиеФормы();
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ОбработатьОткрытиеФормы();

КонецПроцедуры

Процедура ПриИзмененииПериода(Элемент) Экспорт

	Если Не ЗначениеЗаполнено(Элемент.Значение) Тогда
		Элемент.Значение = ОбщегоНазначения.ПолучитьРабочуюДату();
	КонецЕсли;
	
	Если мПорядокПредставленияПериода = "НачалоГода" и Элемент.Значение <> НачалоГода(Элемент.Значение) Тогда
		Элемент.Значение = НачалоГода(Элемент.Значение);
	ИначеЕсли мПорядокПредставленияПериода = "НачалоМесяца" и Элемент.Значение <> НачалоМесяца(Элемент.Значение) Тогда
		Элемент.Значение = НачалоМесяца(Элемент.Значение);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		
		Ответ = Вопрос("Данные были изменены. Сохранить изменения?", РежимДиалогаВопрос.ДаНетОтмена);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			Если ДанныеНеСодержатОшибок() Тогда
				ОповеститьВладельца();
			Иначе
				ОбщегоНазначения.СообщитьОбОшибке("Ошибка сохранения истории значений");
				Отказ = Истина;	
			КонецЕсли;
		ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
			Отказ = Истина;	
		КонецЕсли;	
			
	КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура ТаблицаИсторииЗначенийПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	                                                
	Если НоваяСтрока и ОтменаРедактирования Тогда   
		Возврат;
	ИначеЕсли Элемент.ТекущиеДанные <> Неопределено и Не ЗначениеЗаполнено(Элемент.ТекущиеДанные.Период) Тогда
		Отказ = Истина;
		Возврат;
	ИначеЕсли ОтменаРедактирования Тогда
		ЗаполнитьЗначенияСвойств(Элемент.ТекущиеДанные, мТекущиеДанныеДоРедактирования);
	Иначе
		
		СтруктураПоиска = Новый Структура("Период", Элемент.ТекущиеДанные.Период);	
		
		МассивСтрок = ТаблицаИсторииЗначений.НайтиСтроки(СтруктураПоиска);
		Если МассивСтрок.Количество() > 1 Тогда
			Предупреждение("Значение на дату: " + Формат(Элемент.ТекущиеДанные.Период, "ДФ=dd.MM.yyyy") + " уже задано!");
			Отказ = Истина;
			Возврат;	
		КонецЕсли;
		
	КонецЕсли;	
	
	ТаблицаИсторииЗначений.Сортировать("Период");
	
КонецПроцедуры

Процедура ТаблицаИсторииЗначенийПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если НоваяСтрока Тогда
		
		Если мПорядокПредставленияПериода = "НачалоГода" Тогда
			Период = НачалоГода(ОбщегоНазначения.ПолучитьРабочуюДату());
		ИначеЕсли мПорядокПредставленияПериода = "НачалоМесяца" Тогда
			Период = НачалоМесяца(ОбщегоНазначения.ПолучитьРабочуюДату());
		КонецЕсли;
		Элемент.ТекущиеДанные.Период = Период;
		ТекущиеДанные[ПараметрИсторииЗначений.ИмяКолонки] = ПараметрИсторииЗначений.Значение;
		
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(мТекущиеДанныеДоРедактирования, ТекущиеДанные);
	
КонецПроцедуры

Процедура ТаблицаИсторииЗначенийПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Для каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		Если мПорядокПредставленияПериода = "НачалоГода" Тогда
			ОформлениеСтроки.Ячейки.Период.Текст = Формат(ОформлениеСтроки.Ячейки.Период.Значение, "ДФ=гггг") + " г.";
		ИначеЕсли мПорядокПредставленияПериода = "НачалоМесяца" Тогда
			ОформлениеСтроки.Ячейки.Период.Текст = РаботаСДиалогамиЗК.ПолучитьПредставлениеПериодаКакМесяцГодРодительныйПадеж(ОформлениеСтроки.Ячейки.Период.Значение);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОсновныеДействияФормыПрименитьИзменения(Кнопка)
	
	Если ДанныеНеСодержатОшибок() Тогда
		ОповеститьВладельца();
		Модифицированность = Ложь;
		Закрыть();
	Иначе
		ОбщегоНазначения.СообщитьОбОшибке("Ошибка сохранения истории значений");
	КонецЕсли;
	
КонецПроцедуры


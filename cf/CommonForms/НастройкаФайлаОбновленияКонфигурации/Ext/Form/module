// результата завершения работы
Перем мРезультатДиалога;



// процедура устанавливает нужную страницу настроек файла обновления конфигурации
Процедура УстановитьСтраницуНастроекОбновленияКонфигурации()
	
	Если ФормироватьФайлОбновленияКонфигурацииАвтоматически Тогда
		
		ЭлементыФормы.ПанельНастройкиФайлаОбновления.ТекущаяСтраница = ЭлементыФормы.ПанельНастройкиФайлаОбновления.Страницы.АвтоматическиеНастройки;
		
		СформироватьФайлАвтоматическогоОбновленияКонфигурации();
	Иначе
		ЭлементыФормы.ПанельНастройкиФайлаОбновления.ТекущаяСтраница = ЭлементыФормы.ПанельНастройкиФайлаОбновления.Страницы.РучныеНастройки;
	КонецЕсли;
	
КонецПроцедуры

// процедура переносит настройки в структуру
Процедура ПередЗаписьюНастройки()
	
	Если СтруктураПараметров = Неопределено 
		ИЛИ ТипЗнч(СтруктураПараметров) <> Тип("Структура") Тогда
		
		СтруктураПараметров = ПроцедурыОбменаДанными.СоздатьПараметрыНастроекОбновленияКонфигурацииПоУмолчанию(); 
		
	КонецЕсли;
	
	// надо все параметры перенести из формы в структуру
	СтруктураПараметров.Очистить();
	
	СтруктураПараметров.Вставить("ФормироватьФайлОбновленияКонфигурацииАвтоматически", ФормироватьФайлОбновленияКонфигурацииАвтоматически);
	СтруктураПараметров.Вставить("АвтоматическиОбновлятьКонфигурациюПриПриемеСообщенияОтГлавногоУзлаРИБ", АвтоматическиОбновлятьКонфигурациюПриПриемеСообщенияОтГлавногоУзлаРИБ);
		
	Если ФормироватьФайлОбновленияКонфигурацииАвтоматически = Истина Тогда
		// автоматическое формирование файлов обновления конфигурации
		
		СтруктураПараметров.Вставить("ИмяАдминистратораИнформационнойБазы", ИмяАдминистратораИнформационнойБазы);
		СтруктураПараметров.Вставить("ИмяФайлаДляЗаписиОшибок", ИмяФайлаДляЗаписиОшибок);
		 
	Иначе
		
		ТекстФайлаОбновленияКонфигурации = ЭлементыФормы.ТекстФайлаОбновленияКонфигурации.ПолучитьТекст();
		// ручное формирование файла обмена данными
		СтруктураПараметров.Вставить("ТекстФайлаОбновленияКонфигурации", ТекстФайлаОбновленияКонфигурации);
		
	КонецЕсли;
	
КонецПроцедуры

// ОК
Процедура ОсновныеДействияФормыОК(Кнопка)
	
	// проверим права на запись константы, если прав нет сообщим об этом 
	Если НЕ ПравоДоступа("Изменение", Метаданные.Константы.НастройкаФайлаОбновленияКонфигурации) Тогда
		
		#Если Клиент Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Нет прав на изменение константы ""Настройка файла обновления конфигурации""");
		#КонецЕсли
	
		Возврат;
	КонецЕсли;

	мРезультатДиалога = Истина;
	ЭтаФорма.Закрыть();
	
КонецПроцедуры

// при открытии формы
Процедура ПриОткрытии()
	
	мРезультатДиалога = Ложь;
	
	Если СтруктураПараметров = Неопределено 
		ИЛИ ТипЗнч(СтруктураПараметров) <> Тип("Структура") Тогда
		
		СтруктураПараметров = ПроцедурыОбменаДанными.СоздатьПараметрыНастроекОбновленияКонфигурацииПоУмолчанию(); 
		
	КонецЕсли;
		
	//Надо все параметры показать
	Если НЕ СтруктураПараметров.Свойство("ФормироватьФайлОбновленияКонфигурацииАвтоматически", ФормироватьФайлОбновленияКонфигурацииАвтоматически) Тогда
		
		ФормироватьФайлОбновленияКонфигурацииАвтоматически = Истина;
		
	КонецЕсли;
	
	Если НЕ СтруктураПараметров.Свойство("АвтоматическиОбновлятьКонфигурациюПриПриемеСообщенияОтГлавногоУзлаРИБ", АвтоматическиОбновлятьКонфигурациюПриПриемеСообщенияОтГлавногоУзлаРИБ) Тогда
		
		АвтоматическиОбновлятьКонфигурациюПриПриемеСообщенияОтГлавногоУзлаРИБ = Истина;
		
	КонецЕсли;
	
	
	Если ФормироватьФайлОбновленияКонфигурацииАвтоматически Тогда
		
		// имя администратора информационной базы
		Если Не СтруктураПараметров.Свойство("ИмяАдминистратораИнформационнойБазы", ИмяАдминистратораИнформационнойБазы) Тогда
			
			ИмяАдминистратораИнформационнойБазы = "";
			
		КонецЕсли;
		
		// файл для фиксирования ошибок
		Если Не СтруктураПараметров.Свойство("ИмяФайлаДляЗаписиОшибок", ИмяФайлаДляЗаписиОшибок) Тогда
			
			ИмяФайлаДляЗаписиОшибок = "";
			
		КонецЕсли;
        		
	Иначе
		// ручное редактирование
		СтруктураПараметров.Свойство("ТекстФайлаОбновленияКонфигурации", ТекстФайлаОбновленияКонфигурации);
		ЭлементыФормы.ТекстФайлаОбновленияКонфигурации.УстановитьТекст(ТекстФайлаОбновленияКонфигурации);
				
	КонецЕсли;
	
	УстановитьСтраницуНастроекОбновленияКонфигурации();
	
	ЭтаФорма.Модифицированность = Ложь;
	
КонецПроцедуры

// при изменении формирования в ручную настроек или автоматически
Процедура ФормироватьФайлОбновленияКонфигурацииАвтоматическиПриИзменении(Элемент)
	
	УстановитьСтраницуНастроекОбновленияКонфигурации();
	
КонецПроцедуры

// заполнение стандартной настройкой поля редактирования файла в ручную
Процедура КоманднаяПанельРедактированиеФайлаОбновленияКонфигурацииЗаполнитьСтандартнойНастройкой(Кнопка)
	
	ТекстНастроекОбменаДанными = ПроцедурыОбменаДанными.ПолучитьТекстНастроекФайлаОбновленияКонфигурацииПоУмолчанию();
	
	ЭлементыФормы.ТекстФайлаОбновленияКонфигурации.УстановитьТекст(ТекстНастроекОбменаДанными);
	
КонецПроцедуры

// функция формирует текст файла автоматического обновления конфигурации
Процедура СформироватьФайлАвтоматическогоОбновленияКонфигурации()
	
	ПередЗаписьюНастройки();
	
	ТекстФайла = ПроцедурыОбменаДанными.СформироватьТекстБатФайлаПоСтруктуре(СтруктураПараметров);
	
	ЭлементыФормы.ТекстАвтоматическиСгенерированногоФайла.УстановитьТекст(ТекстФайла);
	
КонецПроцедуры

// начало выбора файла для записи ошибок
Процедура ИмяФайлаДляЗаписиОшибокНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДиалогВыбора = РаботаСФайлами.ПолучитьДиалогВыбораФайлов(Ложь, "");
	ДиалогВыбора.Фильтр						= "Файл данных об ошибках(*.txt)|*.txt|Произвольные файлы(*.*)|*.*";
	ДиалогВыбора.Заголовок 					= "Выбор файла для сообщений об ошибках";
	ДиалогВыбора.ПредварительныйПросмотр	= Ложь;
	ДиалогВыбора.ПроверятьСуществованиеФайла = Ложь;
	ДиалогВыбора.Расширение             	= "txt";
	ДиалогВыбора.ИндексФильтра          	= 0;
	
	Если Не ПустаяСтрока(Элемент.Значение) Тогда
		ДиалогВыбора.ПолноеИмяФайла = Элемент.Значение;
	КонецЕсли;
	
	РезультатВыбора = ДиалогВыбора.Выбрать();
	
	Если РезультатВыбора Тогда
		Элемент.Значение = СокрЛП(ДиалогВыбора.ПолноеИмяФайла);
		СформироватьФайлАвтоматическогоОбновленияКонфигурации();
	КонецЕсли;
	
КонецПроцедуры

// просмотр файла для записи ошибок
Процедура ИмяФайлаДляЗаписиОшибокОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ПустаяСтрока(Элемент.Значение) Тогда
		Возврат;
	КонецЕсли;
	
	// открываем каталог который в настройках
	ЗапуститьПриложение("explorer " + Элемент.Значение);
	
КонецПроцедуры

// при изменении администратора системы
Процедура ИмяАдминистратораИнформационнойБазыПриИзменении(Элемент)
	
	СформироватьФайлАвтоматическогоОбновленияКонфигурации();
	
КонецПроцедуры

// при изменении имени файла сообщений об ошибках
Процедура ИмяФайлаДляЗаписиОшибокПриИзменении(Элемент)
	
	СформироватьФайлАвтоматическогоОбновленияКонфигурации();
	
КонецПроцедуры

// при закрытии формы вопрос
Процедура ПриЗакрытии()
	
	Если Не мРезультатДиалога Тогда
		Возврат;
	КонецЕсли;
	
	//  если надо сохранять настройки - то сохраняем
	ПередЗаписьюНастройки();
	
	ПроцедурыОбменаДанными.УстановитьНастройкиДляФайлаОбновленияКонфигурации(СтруктураПараметров);
		
КонецПроцедуры

// перед закрытием формы
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если ЭтаФорма.Модифицированность И 
		НЕ мРезультатДиалога Тогда

		РезультатВопроса = Вопрос("Настройки файла обновления конфигурации изменены. Сохранить?", РежимДиалогаВопрос.ДаНетОтмена);
		
		Если РезультатВопроса = КодВозвратаДиалога.Нет тогда
			Возврат;
		ИначеЕсли РезультатВопроса=КодВозвратаДиалога.Отмена тогда
			Отказ = Истина;
			мРезультатДиалога = Ложь;
			Возврат;
		Иначе
			мРезультатДиалога = Истина;
		КонецЕсли;	 					
 
	КонецЕсли;
	
КонецПроцедуры



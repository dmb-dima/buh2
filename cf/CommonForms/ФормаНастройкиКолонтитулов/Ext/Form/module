Перем ВерхнийКолонтитул Экспорт;
Перем НижнийКолонтитул Экспорт;
Перем ШаблонТекста;

Перем НачСтрока;
Перем НачКолонка;
Перем КонСтрока;
Перем КонКолонка;

Перем СтрДата;
Перем СтрВремя;
Перем СтрНомерСтраницы;
Перем СтрСтраницВсего;
Перем СтрНазваниеОтчета;
Перем СтрПользователь;


/////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ПРОЦЕДУРЫ И ФУНКЦИИ
//

// Начальная инициализация формы. Производится установка реквизитов и связь ЭУ с данными
//
// Параметры
//    Нет
//
Процедура ИнициализироватьДанные()

	// верхний колонтитул
	Если ВерхнийКолонтитул.Свойство("Выводить") Тогда
		ВыводитьВерх = ВерхнийКолонтитул["Выводить"];
	КонецЕсли;
	
	Если ВерхнийКолонтитул.Свойство("НачальнаяСтраница") Тогда
		НачальнаяСтраницаВерх = ВерхнийКолонтитул["НачальнаяСтраница"];
	КонецЕсли;
	НачальнаяСтраницаВерх = ?(НачальнаяСтраницаВерх=0, 1, НачальнаяСтраницаВерх);
	
	Если ВерхнийКолонтитул.Свойство("ТекстСлева") Тогда
		ТекстСлеваВерх = ВерхнийКолонтитул["ТекстСлева"];
	КонецЕсли;
	
	Если ВерхнийКолонтитул.Свойство("ТекстВЦентре") Тогда
		ТекстВЦентреВерх = ВерхнийКолонтитул["ТекстВЦентре"];
	КонецЕсли;
	
	Если ВерхнийКолонтитул.Свойство("ТекстСправа") Тогда
		ТекстСправаВерх = ВерхнийКолонтитул["ТекстСправа"];
	КонецЕсли;
	
	ЭлементыФормы.ТекстСлеваВерх.УстановитьТекст(ТекстСлеваВерх);
	ЭлементыФормы.ТекстВЦентреВерх.УстановитьТекст(ТекстВЦентреВерх);
	ЭлементыФормы.ТекстСправаВерх.УстановитьТекст(ТекстСправаВерх);
	
	// нижний колонтитул
	Если НижнийКолонтитул.Свойство("Выводить") Тогда
		ВыводитьНиз = НижнийКолонтитул["Выводить"];
	КонецЕсли;
	
	Если НижнийКолонтитул.Свойство("НачальнаяСтраница") Тогда
		НачальнаяСтраницаНиз = НижнийКолонтитул["НачальнаяСтраница"];
	КонецЕсли;
	НачальнаяСтраницаНиз = ?(НачальнаяСтраницаНиз=0, 1, НачальнаяСтраницаНиз);
	
	Если НижнийКолонтитул.Свойство("ТекстСлева") Тогда
		ТекстСлеваНиз = НижнийКолонтитул["ТекстСлева"];
	КонецЕсли;
	
	Если НижнийКолонтитул.Свойство("ТекстВЦентре") Тогда
		ТекстВЦентреНиз = НижнийКолонтитул["ТекстВЦентре"];
	КонецЕсли;
	
	Если НижнийКолонтитул.Свойство("ТекстСправа") Тогда
		ТекстСправаНиз = НижнийКолонтитул["ТекстСправа"];
	КонецЕсли;
	
	ЭлементыФормы.ТекстСлеваНиз.УстановитьТекст(ТекстСлеваНиз);
	ЭлементыФормы.ТекстВЦентреНиз.УстановитьТекст(ТекстВЦентреНиз);
	ЭлементыФормы.ТекстСправаНиз.УстановитьТекст(ТекстСправаНиз);

КонецПроцедуры // ИнициализироватьДанные()

// Настройка колонок образца отчета
//
// Параметры
//   Нет
//
Процедура НастроитьОбразецОтчета()

	Образец = ЭлементыФормы.ОбразецОтчета;
	ТонкаяЛиния = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная, 1);
	ШиринаКолонок = 28;
	
	Для н=1 По НачКолонка-1 Цикл
		Образец.Область(, н, , н).ШиринаКолонки = 2;
	КонецЦикла;
	
	Образец.Область(НачСтрока, НачКолонка  , НачСтрока, НачКолонка).ШиринаКолонки = ШиринаКолонок;
	Образец.Область(НачСтрока, НачКолонка+1, НачСтрока, НачКолонка+1).ШиринаКолонки = ШиринаКолонок;
	Образец.Область(НачСтрока, КонКолонка  , НачСтрока, КонКолонка).ШиринаКолонки = ШиринаКолонок;
	
	Образец.Область(НачСтрока, НачКолонка, НачСтрока, КонКолонка).ГраницаСнизу = ТонкаяЛиния;
	Образец.Область(НачСтрока, НачКолонка, НачСтрока, КонКолонка).ВертикальноеПоложение = ВертикальноеПоложение.Низ;

	Образец.Область(НачСтрока+1, , НачСтрока+1, ).ВысотаСтроки = 80;
	Образец.Область(НачСтрока+1, , НачСтрока+1, ).ВертикальноеПоложение = ВертикальноеПоложение.Центр;
	
	Шрифт = Новый Шрифт( Образец.Область(НачСтрока+1, , НачСтрока+1, ).Шрифт, , 14, Истина, Ложь, Ложь, Ложь );
	Образец.Область(НачСтрока+1, , НачСтрока+1, ).Шрифт = Шрифт;
	
	Образец.Область(КонСтрока, НачКолонка,   КонСтрока, НачКолонка).ШиринаКолонки = ШиринаКолонок;
	Образец.Область(КонСтрока, НачКолонка+1, КонСтрока, НачКолонка+1).ШиринаКолонки = ШиринаКолонок;
	Образец.Область(КонСтрока, КонКолонка,   КонСтрока, КонКолонка).ШиринаКолонки = ШиринаКолонок;
	
	Образец.Область(КонСтрока, НачКолонка, КонСтрока, КонКолонка).ГраницаСверху = ТонкаяЛиния;
	Образец.Область(КонСтрока, НачКолонка, КонСтрока, КонКолонка).ВертикальноеПоложение = ВертикальноеПоложение.Верх;
	
	Образец.Область(НачСтрока, НачКолонка,   КонСтрока, НачКолонка).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Лево;
	Образец.Область(НачСтрока, НачКолонка+1, КонСтрока, НачКолонка+1).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Центр;
	Образец.Область(НачСтрока, КонКолонка,   КонСтрока, КонКолонка).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;
	
	Образец.Область(НачСтрока, НачКолонка, КонСтрока, КонКолонка).Обвести(ТонкаяЛиния, ТонкаяЛиния, ТонкаяЛиния, ТонкаяЛиния);
	
	Образец.Область(НачСтрока, НачКолонка, КонСтрока, КонКолонка).РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Забивать;
	
	Образец.Область(НачСтрока+1, НачКолонка+1, НачСтрока+1, НачКолонка+1).Текст = "Образец отчета";
	
КонецПроцедуры // НастроитьОбразецОтчета()

// Чтение текстов колонтитулов из ЭУ в реквизиты формы
//
// Параметры
//   Нет
//
Процедура ПолучитьТекстыКолонтитулов()

	ТекстСлеваВерх   = ЭлементыФормы.ТекстСлеваВерх.ПолучитьТекст();
	ТекстВЦентреВерх = ЭлементыФормы.ТекстВЦентреВерх.ПолучитьТекст();
	ТекстСправаВерх  = ЭлементыФормы.ТекстСправаВерх.ПолучитьТекст();

	ТекстСлеваНиз   = ЭлементыФормы.ТекстСлеваНиз.ПолучитьТекст();
	ТекстВЦентреНиз = ЭлементыФормы.ТекстВЦентреНиз.ПолучитьТекст();
	ТекстСправаНиз  = ЭлементыФормы.ТекстСправаНиз.ПолучитьТекст();
	
КонецПроцедуры // ПолучитьТекстыКолонтитулов()

// Проставление в тексте вместо шаблонов, их значения
//
// Параметры
//  СтрокаКолонтитула – Строка – Исходная строка, содержащая шаблоны, требующие замены
//
// Возвращаемое значение:
//   Строка   – Строка с замененными шаблонами
//
Функция ЗаменитьШаблоны(СтрокаКолонтитула)

	Результат = СтрокаКолонтитула;
	
	Результат = СтрЗаменить(Результат, "[&Дата]", СтрДата);
	Результат = СтрЗаменить(Результат, "[&Время]", СтрВремя);
	Результат = СтрЗаменить(Результат, "[&НомерСтраницы]", Строка(СтрНомерСтраницы));
	Результат = СтрЗаменить(Результат, "[&СтраницВсего]", Строка(СтрСтраницВсего));
	Результат = СтрЗаменить(Результат, "[&НазваниеОтчета]", СтрНазваниеОтчета);
	Результат = СтрЗаменить(Результат, "[&Пользователь]", СтрПользователь);
	
	Возврат Результат;

КонецФункции // ЗаменитьШаблоны()

// Установка в образец отчета текущих данных
//
// Параметры
//   Нет
//
Процедура ОбновитьОбразецОтчета()

	ПолучитьТекстыКолонтитулов();
	
	Образец = ЭлементыФормы.ОбразецОтчета;
	
	Если ВыводитьВерх и СтрНомерСтраницы >= НачальнаяСтраницаВерх Тогда
		
		Образец.Область(НачСтрока, НачКолонка,   НачСтрока, НачКолонка).Текст   = ЗаменитьШаблоны(ТекстСлеваВерх);
		Образец.Область(НачСтрока, НачКолонка+1, НачСтрока, НачКолонка+1).Текст = ЗаменитьШаблоны(ТекстВЦентреВерх);
		Образец.Область(НачСтрока, КонКолонка,   НачСтрока, КонКолонка).Текст   = ЗаменитьШаблоны(ТекстСправаВерх);
		
	Иначе
		
		Образец.Область(НачСтрока, НачКолонка,   НачСтрока, НачКолонка).Текст   = "";
		Образец.Область(НачСтрока, НачКолонка+1, НачСтрока, НачКолонка+1).Текст = "";
		Образец.Область(НачСтрока, КонКолонка,   НачСтрока, КонКолонка).Текст   = "";
		
	КонецЕсли;
	
	Если ВыводитьНиз и СтрНомерСтраницы >= НачальнаяСтраницаНиз Тогда
		
		Образец.Область(КонСтрока, НачКолонка,   КонСтрока, НачКолонка).Текст   = ЗаменитьШаблоны(ТекстСлеваНиз);
		Образец.Область(КонСтрока, НачКолонка+1, КонСтрока, НачКолонка+1).Текст = ЗаменитьШаблоны(ТекстВЦентреНиз);
		Образец.Область(КонСтрока, КонКолонка,   КонСтрока, КонКолонка).Текст   = ЗаменитьШаблоны(ТекстСправаНиз);
		
	Иначе
		
		Образец.Область(КонСтрока, НачКолонка,   КонСтрока, НачКолонка).Текст   = "";
		Образец.Область(КонСтрока, НачКолонка+1, КонСтрока, НачКолонка+1).Текст = "";
		Образец.Область(КонСтрока, КонКолонка,   КонСтрока, КонКолонка).Текст   = "";
		
	КонецЕсли;

КонецПроцедуры // ОбновитьОбразецОтчета()

// Управление пометками кнопок командной панели
//
// Параметры
//  Нет
//
Процедура УправлениеПометкамиКнопокКоманднойПанели()

	ЭлементыФормы.КоманднаяПанель1.Кнопки.Автообновление.Пометка = АвтоОбновлениеОбразцаОтчета;

КонецПроцедуры // УправлениеПометкамиКнопокКоманднойПанели()

// Обновление надписей на форме
//
// Параметры
//  Нет
//
Процедура УправлениеНадписями()

	ЭлементыФормы.НадписьНомерСтраницы.Заголовок = Строка(СтрНомерСтраницы) + " из " + Строка(СтрСтраницВсего);

КонецПроцедуры // УправлениеНадписями()


/////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЕ ЭЛЕМЕНТОВ ФОРМЫ
//

Процедура ОсновныеДействияФормыОсновныеДействияФормыОК(Кнопка)
	
	Закрыть(Истина);
	
КонецПроцедуры

Процедура МенюРедактированияКнопка(Кнопка)
	
	Если ТипЗнч(ТекущийЭлемент) = Тип("ПолеТекстовогоДокумента") Тогда
		
		ТекстВставки = ШаблонТекста[Кнопка.Имя];
		ТекущийЭлемент.ВыделенныйТекст = ТекстВставки;
		
		ОбновитьОбразецОтчета();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбразецНажатие(Элемент)
	
	ОбновитьОбразецОтчета();
	
КонецПроцедуры

Процедура КоманднаяПанель1Автообновление(Кнопка)
	
	АвтоОбновлениеОбразцаОтчета = Не АвтоОбновлениеОбразцаОтчета;
	
	ОбновитьОбразецОтчета();
	
	Если АвтоОбновлениеОбразцаОтчета Тогда
		ПодключитьОбработчикОжидания("ОбновитьОбразецОтчета", 1);
	Иначе
		ОтключитьОбработчикОжидания("ОбновитьОбразецОтчета");
	КонецЕсли;
	
	УправлениеПометкамиКнопокКоманднойПанели();
	
КонецПроцедуры

Процедура ВыводитьПриИзменении(Элемент)
	
	ОбновитьОбразецОтчета();
	
КонецПроцедуры

Процедура СтраницаМинусНажатие(Элемент)
	
	Если СтрНомерСтраницы > 1 Тогда
	
		СтрНомерСтраницы = СтрНомерСтраницы - 1;
		
		УправлениеНадписями();
		
		ОбновитьОбразецОтчета();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СтраницаПлюсНажатие(Элемент)
	
	Если СтрНомерСтраницы < СтрСтраницВсего Тогда
	
		СтрНомерСтраницы = СтрНомерСтраницы + 1;
		
		УправлениеНадписями();
		
		ОбновитьОбразецОтчета();
		
	КонецЕсли;
	
КонецПроцедуры


/////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
//

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ИнициализироватьДанные();
	
	НастроитьОбразецОтчета();
	
	УправлениеПометкамиКнопокКоманднойПанели();
	
	УправлениеНадписями();
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ОбновитьОбразецОтчета();
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	ПолучитьТекстыКолонтитулов();
	
	ВерхнийКолонтитул.Вставить("Выводить", ВыводитьВерх);
	ВерхнийКолонтитул.Вставить("НачальнаяСтраница", НачальнаяСтраницаВерх);
	ВерхнийКолонтитул.Вставить("ТекстСлева",   ТекстСлеваВерх);
	ВерхнийКолонтитул.Вставить("ТекстВЦентре", ТекстВЦентреВерх);
	ВерхнийКолонтитул.Вставить("ТекстСправа",  ТекстСправаВерх);
	
	НижнийКолонтитул.Вставить("Выводить", ВыводитьНиз);
	НижнийКолонтитул.Вставить("НачальнаяСтраница", НачальнаяСтраницаНиз);
	НижнийКолонтитул.Вставить("ТекстСлева",   ТекстСлеваНиз);
	НижнийКолонтитул.Вставить("ТекстВЦентре", ТекстВЦентреНиз);
	НижнийКолонтитул.Вставить("ТекстСправа",  ТекстСправаНиз);
	
КонецПроцедуры

//////////////////////////////////////////////////////////
// МОДУЛЬ ОБЪЕКТА
//

ВерхнийКолонтитул = Новый Структура;
НижнийКолонтитул  = Новый Структура;

ШаблонТекста = Новый Структура;
ШаблонТекста.Вставить("Дата",           "[&Дата]");
ШаблонТекста.Вставить("Время",          "[&Время]");
ШаблонТекста.Вставить("НомерСтраницы",  "[&НомерСтраницы]");
ШаблонТекста.Вставить("СтраницВсего",   "[&СтраницВсего]");
ШаблонТекста.Вставить("Пользователь",   "[&Пользователь]");
ШаблонТекста.Вставить("НазваниеОтчета", "[&НазваниеОтчета]");

НачСтрока  = 2;
НачКолонка = 2;
КонСтрока  = НачСтрока+2;
КонКолонка = НачКолонка+2;

СтрДата  = Формат(ТекущаяДата(), "ДФ=dd.MM.yyyy");
СтрВремя = Формат(ТекущаяДата(), "ДФ=ЧЧ:мм");
СтрНомерСтраницы = 1;
СтрСтраницВсего = 7;
СтрНазваниеОтчета = "Стандартный отчет";
СтрПользователь = глЗначениеПеременной("глТекущийПользователь");


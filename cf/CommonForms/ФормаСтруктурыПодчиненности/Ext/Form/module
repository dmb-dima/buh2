Перем мДерево, мУжеВСписке;

Перем мКэшРеквизитовДокумента;
Перем мКэшПраваДоступаКМетаданным;
///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура вывода дерева структуры подчиненности документа
Процедура ВывестиДеревоДокументов()
	
	Попытка
	ДеревоДокументов.Строки.Очистить();
	мДерево = ДеревоДокументов;	
	мУжеВСписке.Очистить();
	ВывестиРодительскиеДокументы(ДокументСсылка);	
	ЭлементыФормы.ДеревоДокументов.ТекущаяСтрока = мДерево;
	ВывестиПодчиненныеДокументы(мДерево,мКэшПраваДоступаКМетаданным);
	Исключение
	КонецПопытки;
	
КонецПроцедуры

// Процедура выполняет вывод родительских документов
Процедура ВывестиРодительскиеДокументы(ДокументСсылка)
	
	МетаданныеДокумента = ДокументСсылка.Метаданные();
	СписокРеквизитов = Новый СписокЗначений;
	МетаданныеДокументы = Метаданные.Документы; 
	мКэшМетаданныеРеквизита = новый соответствие;
	
	Для Каждого Реквизит ИЗ МетаданныеДокумента.Реквизиты Цикл
		ТипыРеквизита = Реквизит.Тип.Типы();
		Для Каждого ТекущийТип ИЗ ТипыРеквизита Цикл
			МетаданныеРеквизита = мКэшМетаданныеРеквизита.Получить(ТекущийТип);
			Если МетаданныеРеквизита = неопределено Тогда
				МетаданныеРеквизита = Метаданные.НайтиПоТипу(ТекущийТип);
				мКэшМетаданныеРеквизита.Вставить(ТекущийТип,МетаданныеРеквизита);
			КонецЕсли;
					
			Если МетаданныеРеквизита<>Неопределено 
				 И МетаданныеДокументы.Содержит(МетаданныеРеквизита) 
				 И ПравоДоступа("Чтение", МетаданныеРеквизита) Тогда
				Попытка
					ЗначениеРеквизита = ДокументСсылка[Реквизит.Имя];
				Исключение
					Прервать;
				КонецПопытки;
				ЕСли ЗначениеРеквизита<>Неопределено И НЕ ЗначениеРеквизита.Пустая() И ТипЗнч(ЗначениеРеквизита) = ТекущийТип 
					 И мУжеВСписке[ЗначениеРеквизита] = Неопределено И СписокРеквизитов.НайтиПоЗначению(ДокументСсылка[Реквизит.Имя]) = Неопределено Тогда
					Попытка
						СписокРеквизитов.Добавить(ЗначениеРеквизита,Формат(ЗначениеРеквизита.Дата,"ДФ=yyyyMMddЧЧММсс"));
					Исключение
						 ОтладкаТекстОшибки = ОписаниеОшибки();
					КонецПопытки;	
				КонецЕсли;
			КонецЕсли;			
			
		КонецЦикла;
	КонецЦикла;
	
	Для Каждого ТЧ Из МетаданныеДокумента.ТабличныеЧасти Цикл
		СтрРеквизитов = "";
		
		Попытка
			СодержимоеТЧ = ДокументСсылка[ТЧ.Имя].Выгрузить();
		Исключение
			Прервать;
		КонецПопытки;
		
		Для Каждого Реквизит ИЗ ТЧ.Реквизиты Цикл
			ТипыРеквизита = Реквизит.Тип.Типы();
			Для Каждого ТекущийТип ИЗ ТипыРеквизита Цикл
				МетаданныеРеквизита = Метаданные.НайтиПоТипу(ТекущийТип);				
				Если МетаданныеРеквизита<>Неопределено И МетаданныеДокументы.Содержит(МетаданныеРеквизита) 
					И ПравоДоступа("Чтение", МетаданныеРеквизита) Тогда
					СтрРеквизитов = СтрРеквизитов + ?(СтрРеквизитов = "", "", ", ") + Реквизит.Имя;
					Прервать;
				КонецЕсли;						
			КонецЦикла;
		КонецЦикла;
		
		СодержимоеТЧ.Свернуть(СтрРеквизитов);
		Для Каждого КолонкаТЧ ИЗ СодержимоеТЧ.Колонки Цикл
			Для Каждого СтрокаТЧ ИЗ СодержимоеТЧ Цикл
				Попытка
					ЗначениеРеквизита = СтрокаТЧ[КолонкаТЧ.Имя];
				Исключение
					Продолжить;
				КонецПопытки;
				МетаданныеЗначения = Метаданные.НайтиПоТипу(ТипЗнч(ЗначениеРеквизита));
				Если МетаданныеЗначения = Неопределено Тогда
					// базовый тип
					Продолжить;
				КонецЕсли;
				
				ЕСли ЗначениеРеквизита<>Неопределено И НЕ ЗначениеРеквизита.Пустая()
					 И МетаданныеДокументы.Содержит(МетаданныеЗначения)
					 И мУжеВСписке[ЗначениеРеквизита] = Неопределено Тогда
					Если СписокРеквизитов.НайтиПоЗначению(ЗначениеРеквизита) = Неопределено Тогда
						Попытка
							СписокРеквизитов.Добавить(ЗначениеРеквизита,Формат(ЗначениеРеквизита.Дата,"ДФ=yyyyMMddЧЧММсс"));
						Исключение
							ОтладкаТекстОшибки = ОписаниеОшибки();
						КонецПопытки;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;		
	КонецЦикла;
	СписокРеквизитов.СортироватьПоПредставлению();
	мУжеВСписке.Вставить(ДокументСсылка, Истина);
	
	Если СписокРеквизитов.Количество() = 1 Тогда
		ВывестиРодительскиеДокументы(СписокРеквизитов[0].Значение);
	ИначеЕсли СписокРеквизитов.Количество() > 1 Тогда
		ВывестиБезРодителей(СписокРеквизитов);		
	КонецЕсли;

	
	СтрокаДерева = мДерево.Строки.Добавить();
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ Ссылка, Проведен, ПометкаУдаления, #Сумма, #Валюта, Представление, """ + МетаданныеДокумента.Имя + """ КАК Метаданные
						   | ИЗ Документ."+МетаданныеДокумента.Имя + " ГДЕ Ссылка = &Ссылка");
						   
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Если МетаданныеДокумента.Реквизиты.Найти("СуммаДокумента") <> Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "#Сумма", "СуммаДокумента КАК СуммаДокумента");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "#Сумма", "NULL КАК СуммаДокумента");
	КонецЕсли;
	
	Если МетаданныеДокумента.Реквизиты.Найти("ВалютаДокумента") <> Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "#Валюта", "ВалютаДокумента КАК ВалютаДокумента");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "#Валюта", "NULL КАК ВалютаДокумента");
	КонецЕсли;
	
	Выборка  = Запрос.Выполнить().Выбрать();
	ЕСли Выборка.Следующий() Тогда		
		СтрокаДерева.Ссылка= Выборка.Ссылка;
		СтрокаДерева.Проведен = Выборка.Проведен;
		СтрокаДерева.ПометкаУдаления = Выборка.ПометкаУдаления;
		СтрокаДерева.ДокументПредставление = Выборка.Представление;
		СтрокаДерева.СуммаДокумента = Выборка.СуммаДокумента;
		СтрокаДерева.ВалютаДокумента = Выборка.ВалютаДокумента;
		СтрокаДерева.ВидДокумента = Выборка.Метаданные;				
	Иначе
		СтрокаДерева.Ссылка= ДокументСсылка;
		СтрокаДерева.ДокументПредставление = Строка(ДокументСсылка);
		СтрокаДерева.СуммаДокумента = ДокументСсылка.СуммаДокумента;
	КонецЕсли;
	
	мДерево = СтрокаДерева;
		
КонецПроцедуры

// Процедура осуществляет вывод родительских документов с ограничением по уровню в дереве
Процедура ВывестиБезРодителей(СписокДокументов)
	
	Для Каждого ЭлементСписка Из СписокДокументов Цикл
		
		МетаданныеДокумента = ЭлементСписка.Значение.Метаданные();
		
		Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ Ссылка, Проведен, ПометкаУдаления, #Сумма, #Валюта, Представление, """ + МетаданныеДокумента.Имя + """ КАК Метаданные
		| ИЗ Документ."+МетаданныеДокумента.Имя + " ГДЕ Ссылка = &Ссылка");
		
		Запрос.УстановитьПараметр("Ссылка", ЭлементСписка.Значение);
		
		Если МетаданныеДокумента.Реквизиты.Найти("СуммаДокумента") <> Неопределено Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "#Сумма", "СуммаДокумента КАК СуммаДокумента");
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "#Сумма", "NULL КАК СуммаДокумента");
		КонецЕсли;
		
		Если МетаданныеДокумента.Реквизиты.Найти("ВалютаДокумента") <> Неопределено Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "#Валюта", "ВалютаДокумента КАК ВалютаДокумента");
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "#Валюта", "NULL КАК ВалютаДокумента");
		КонецЕсли;
		
		Выборка  = Запрос.Выполнить().Выбрать();
		ЕСли Выборка.Следующий() Тогда		
			Если мУжеВСписке[Выборка.Ссылка] = Неопределено Тогда
	            СтрокаДерева = мДерево.Строки.Добавить();
				СтрокаДерева.Ссылка= Выборка.Ссылка;
				СтрокаДерева.Проведен = Выборка.Проведен;
				СтрокаДерева.ПометкаУдаления = Выборка.ПометкаУдаления;
				СтрокаДерева.ДокументПредставление = Выборка.Представление;
				СтрокаДерева.ВидДокумента = Выборка.Метаданные;			
				СтрокаДерева.СуммаДокумента = Выборка.СуммаДокумента;
				СтрокаДерева.ВалютаДокумента = Выборка.ВалютаДокумента;
				СтрокаДерева.ОграничениеПоРодителям = Истина;
				мУжеВСписке.Вставить(Выборка.Ссылка, Истина);
			КонецЕсли;
		КонецЕсли;		
	КонецЦикла;

	мДерево = СтрокаДерева;
	
КонецПроцедуры

// Процедура осуществляет вывод подчиненных документов
Процедура ВывестиПодчиненныеДокументы(СтрокаДерева,мКэшПраваДоступаКМетаданным)
	
	ТекущийДокумент = СтрокаДерева.Ссылка;	
	Таблица = ПолныеПрава.ПолучитьСписокПодчиненныхДокументов(ТекущийДокумент,мКэшПраваДоступаКМетаданным);	
	КэшПоТипамДокументов = Новый Соответствие;
	
	Для Каждого СтрокаТаблицы ИЗ Таблица Цикл
		МетаданныеДокумента = СтрокаТаблицы.Ссылка.Метаданные();
		Если Не ПравоДоступа("Чтение", МетаданныеДокумента) Тогда
			Продолжить;
		КонецЕсли;			
		ИмяДокумента = МетаданныеДокумента.Имя;
		СинонимДокумента = МетаданныеДокумента.Синоним;
		
		ДополнитьКэшМетаданных(МетаданныеДокумента, ИмяДокумента);
		
		СтруктураТипа = КэшПоТипамДокументов[ИмяДокумента];
		Если СтруктураТипа = Неопределено Тогда
			СтруктураТипа = Новый Структура("Синоним, МассивСсылок", СинонимДокумента, Новый Массив);
			КэшПоТипамДокументов.Вставить(ИмяДокумента, СтруктураТипа);
		КонецЕсли;
		СтруктураТипа.МассивСсылок.Добавить(СтрокаТаблицы.Ссылка);		
	КонецЦикла;
	
	ЕСли КэшПоТипамДокументов.Количество() = 0 ТОгда
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаНачало = "ВЫБРАТЬ РАЗРЕШЕННЫЕ * ИЗ (";
	ТекстЗапросаКонец = ") КАК ПодчиненныеДокументы УПОРЯДОЧИТЬ ПО ПодчиненныеДокументы.Дата";
	Запрос = Новый Запрос;
	Для Каждого КлючИЗначение ИЗ КэшПоТипамДокументов Цикл
		Запрос.Текст = Запрос.Текст + ?(Запрос.Текст = "", "
					|ВЫБРАТЬ ", "
					|ОБЪЕДИНИТЬ ВСЕ
					|ВЫБРАТЬ") + "
					|Дата, Ссылка, Представление, Проведен, ПометкаУдаления, 
					|" + ?(мКэшРеквизитовДокумента[КлючИЗначение.Ключ]["СуммаДокумента"], "СуммаДокумента", "NULL") + " КАК СуммаДокумента,
					|" + ?(мКэшРеквизитовДокумента[КлючИЗначение.Ключ]["ВалютаДокумента"], "ВалютаДокумента", "NULL") + " КАК ВалютаДокумента
					|ИЗ Документ." + КлючИЗначение.Ключ + "
					|ГДЕ Ссылка В (&" + КлючИЗначение.Ключ + ")";
					
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение.МассивСсылок);		
	КонецЦикла;
	
	Запрос.Текст = ТекстЗапросаНачало + Запрос.Текст + ТекстЗапросаКонец;
	
	Выборка = Запрос.Выполнить().Выбрать();	
	Пока Выборка.Следующий() Цикл
		Если мУжеВСписке[Выборка.Ссылка] = Неопределено Тогда
			НоваяСтрока = СтрокаДерева.Строки.Добавить();
			НоваяСтрока.Ссылка = Выборка.Ссылка;
			НоваяСтрока.ДокументПредставление = Выборка.Представление;
			НоваяСтрока.СуммаДокумента = Выборка.СуммаДокумента;
			НоваяСтрока.ВалютаДокумента = Выборка.ВалютаДокумента;
			НоваяСтрока.Проведен = Выборка.Проведен;
			НоваяСтрока.ПометкаУдаления = Выборка.ПометкаУдаления;		
			мУжеВСписке.Вставить(Выборка.Ссылка, Истина);
			ВывестиПодчиненныеДокументы(НоваяСтрока,мКэшПраваДоступаКМетаданным);
		КонецЕсли;
	КонецЦикла;		
КонецПроцедуры

// Процедура выполняет открытие формы текущего документа
Процедура ОткрытьФормуДокумента()
	Попытка
		Форма = ЭлементыФормы.ДеревоДокументов.ТекущиеДанные.Ссылка.ПолучитьФорму();
		Форма.Открыть();
	Исключение
		ОбщегоНазначения.СообщитьОбОшибке(ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "Перед открытием формы"
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	Если ДокументСсылка = Неопределено ИЛИ ДокументСсылка.Пустая() Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	ВывестиДеревоДокументов();
	ЭлементыФормы.ДеревоДокументов.Развернуть(ДеревоДокументов.Строки[0], Истина);
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Процедура обработки события "При выводе строки" табличного поля "ДеревоДокументов"
Процедура ДеревоДокументовПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	ОформлениеСтроки.Ячейки.ДокументПредставление.ОтображатьКартинку = истина;
	Если ДанныеСтроки.Ссылка = ДокументСсылка Тогда
		ОформлениеСтроки.Шрифт = Новый Шрифт(,,Истина);
		ОформлениеСтроки.ЦветФона = Новый Цвет(230,230,230);
	Иначе
		ОформлениеСтроки.ЦветФона = Новый Цвет();
	КонецЕсли;
	Если ДанныеСтроки.Проведен Тогда
		ОформлениеСтроки.Ячейки.ДокументПредставление.ИндексКартинки = 0;
	ИначеЕСли ДанныеСтроки.ПометкаУдаления Тогда
		ОформлениеСтроки.Ячейки.ДокументПредставление.ИндексКартинки = 1;
	Иначе
		ОформлениеСтроки.Ячейки.ДокументПредставление.ИндексКартинки = 2
	КонецЕсли;
	
КонецПроцедуры

// Процедура обработки события "Перед началом изменения" табличного поля "ДеревоДокументов"
Процедура ДеревоДокументовПередНачаломИзменения(Элемент, Отказ)	
	ОткрытьФормуДокумента();
	Отказ = Истина;
КонецПроцедуры


Процедура КоманднаяПанельОткрытьФормуДействие(Кнопка)
	ОткрытьФормуДокумента();
КонецПроцедуры

Процедура КоманднаяПанельПровестиДействие(Кнопка)
	Попытка
		Объект = ЭлементыФормы.ДеревоДокументов.ТекущиеДанные.Ссылка.ПолучитьОбъект();
		Объект.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
		ЭлементыФормы.ДеревоДокументов.ТекущиеДанные.Проведен = Истина;
	Исключение
		ОбщегоНазначения.СообщитьОбОшибке(ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры

Процедура КоманднаяПанельОтменаПроведенияДействие(Кнопка)
	Если НЕ ЭлементыФормы.ДеревоДокументов.ТекущиеДанные.Проведен Тогда
		Возврат;
	КонецЕсли;
	
	Попытка
		Объект = ЭлементыФормы.ДеревоДокументов.ТекущиеДанные.Ссылка.ПолучитьОбъект();
		Объект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		ЭлементыФормы.ДеревоДокументов.ТекущиеДанные.Проведен = Ложь;
	Исключение
		
		ОбщегоНазначения.СообщитьОбОшибке(ОписаниеОшибки());
		
	КонецПопытки;
КонецПроцедуры

Процедура КоманднаяПанельОбновитьДействие(Кнопка)
	
	Если ОсновнойДокументЕщеДоступен() Тогда
		ВывестиДеревоДокументов();
		ЭлементыФормы.ДеревоДокументов.Развернуть(ДеревоДокументов.Строки[0], Истина);
	Иначе
		ЗакрытьФормуСПредупреждением("Документ, для которого сформирован отчет о структуре
									 |подчиненности был удален, или же стал недоступен.");
	КонецЕсли;		
	
	
КонецПроцедуры

Процедура КоманднаяПанельВывестиДляТекущегоДействие(Кнопка)
	ДокументСсылка = ЭлементыФормы.ДеревоДокументов.ТекущиеДанные.Ссылка;
	Если ОсновнойДокументЕщеДоступен() Тогда
		ДеревоДокументов.Строки.Очистить();	
		ВывестиДеревоДокументов();
		ЭлементыФормы.ДеревоДокументов.Развернуть(ДеревоДокументов.Строки[0], Истина);
	Иначе
		ЗакрытьФормуСПредупреждением("Документ, для которого сформирован отчет о структуре
									 |подчиненности был удален, или же стал недоступен.");
	КонецЕсли;	
КонецПроцедуры

Процедура ОбновитьДоступностьКнопок()
	
	ПроведениеРазрешено = ЭлементыФормы.ДеревоДокументов.ТекущиеДанные.Ссылка.Метаданные().Проведение = Метаданные.СвойстваОбъектов.Проведение.Разрешить;
	
	ЭлементыФормы.КоманднаяПанель.Кнопки.КоманднаяПанельПровести.        Доступность = ПроведениеРазрешено;
	ЭлементыФормы.КоманднаяПанель.Кнопки.КоманднаяПанельОтменаПроведения.Доступность = ПроведениеРазрешено;
	
КонецПроцедуры // () 

Процедура ДеревоДокументовПриАктивизацииСтроки(Элемент)
	ОбновитьДоступностьКнопок();	
КонецПроцедуры

Процедура КоманднаяПанельУстановитьПометкуУдаления(Кнопка)
	
	Попытка
		Объект = ЭлементыФормы.ДеревоДокументов.ТекущиеДанные.Ссылка.ПолучитьОбъект();
		Объект.УстановитьПометкуУдаления(Не Объект.ПометкаУдаления);
		ЭлементыФормы.ДеревоДокументов.ТекущиеДанные.ПометкаУдаления = Объект.ПометкаУдаления;
		ЭлементыФормы.ДеревоДокументов.ТекущиеДанные.Проведен = Ложь;
		ОбновитьДоступностьКнопок();
	Исключение
		
		ОбщегоНазначения.СообщитьОбОшибке(ОписаниеОшибки());
		
	КонецПопытки;
	
КонецПроцедуры

Процедура КоманднаяПанельНайтиВСписке(Кнопка)
	
	Попытка
		ФормаСписка = Документы[ЭлементыФормы.ДеревоДокументов.ТекущиеДанные.Ссылка.Метаданные().Имя].ПолучитьФормуСписка();
		ФормаСписка.ПараметрТекущаяСтрока = ЭлементыФормы.ДеревоДокументов.ТекущиеДанные.Ссылка;
		ФормаСписка.Открыть();
	Исключение
		ОбщегоНазначения.СообщитьОбОшибке(ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

Процедура ДополнитьКэшМетаданных(МетаданныеДокумента, ИмяДокумента)
	РеквизитыДокумента = мКэшРеквизитовДокумента[ИмяДокумента];
	Если РеквизитыДокумента = Неопределено Тогда
		РеквизитыДокумента = Новый Соответствие;		
		РеквизитыДокумента.Вставить("СуммаДокумента", МетаданныеДокумента.Реквизиты.Найти("СуммаДокумента") <> Неопределено);
		РеквизитыДокумента.Вставить("ВалютаДокумента", МетаданныеДокумента.Реквизиты.Найти("ВалютаДокумента") <> Неопределено);		
		мКэшРеквизитовДокумента.Вставить(ИмяДокумента, РеквизитыДокумента);
	КонецЕсли;
	
КонецПроцедуры

Функция ОсновнойДокументЕщеДоступен()
	
	ИмяТекущегоДокумента = ДокументСсылка.Метаданные().Имя;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ Представление ИЗ Документ." + ИмяТекущегоДокумента + " ГДЕ Ссылка = &ТекущийДокумент";
	Запрос.УстановитьПараметр("ТекущийДокумент", ДокументСсылка);
	Возврат НЕ Запрос.Выполнить().Пустой();
	
КонецФункции

Процедура ЗакрытьФормуСПредупреждением(ТекстПредупреждения)
	
	ЭтаФорма.Закрыть();
	Предупреждение(ТекстПредупреждения);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

ДеревоДокументов.Колонки.Добавить("Ссылка");
ДеревоДокументов.Колонки.Добавить("Проведен");
ДеревоДокументов.Колонки.Добавить("ПометкаУдаления");
ДеревоДокументов.Колонки.Добавить("ВидДокумента");
ДеревоДокументов.Колонки.Добавить("ОграничениеПоРодителям", Новый ОписаниеТипов("Булево"));
мУжеВСписке = Новый Соответствие;
мКэшПраваДоступаКМетаданным= Новый Соответствие;
мКэшРеквизитовДокумента = Новый Соответствие;
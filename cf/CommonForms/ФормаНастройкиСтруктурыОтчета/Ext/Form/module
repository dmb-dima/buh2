Перем ПервичнаяАктивизация;

Перем НеИспользуемыйЦвет;

////////////////////////////////////////////////////////////////////////////////
// ПОЛЬЗОВАТЕЛЬСКАЯ НАСТРОЙКА

//Функция создает по структуре параметров соответсвие
Функция СоздатьПоСтруктуреСоответствие(Знач СтруктураПараметров) Экспорт
	
	Параметры = Новый Соответствие;
	
	Для Каждого Элемент Из СтруктураПараметров Цикл
		Параметры.Вставить(Элемент.Ключ, Элемент.Значение);
	КонецЦикла;
	
	Возврат Параметры;
	
КонецФункции

Процедура ИнициализироватьКомпоновщикНастроек()
	
	КомпоновщикНастроекПользовательский = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроекПользовательский.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(ОтчетОбъект.СхемаКомпоновкиДанных));
	
	Если ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Количество() = 0 Тогда
		НоваяСтрока = ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
		ТиповыеОтчеты.ДобавитьАвтоВыбранноеПоле(НоваяСтрока);
		ТиповыеОтчеты.ДобавитьАвтоЭлементПорядка(НоваяСтрока);
	КонецЕсли;
	
	// Настройки компоновщика отчета
	ЭлементОтчета = ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура[0];
	ТипЭлементаОтчета = ТипЗнч(ЭлементОтчета);
	ПредставлениеЭлементаОтчета = ТиповыеОтчеты.ПолучитьПредставлениеПоЭлементуСтруктуры(ЭлементОтчета);
	
	Элемент = КомпоновщикНастроекПользовательский.Настройки.Структура.Добавить(ТипЭлементаОтчета);
	
	ЭлементыФормы.НастройкиСкрытыеЭлемент.ТекущаяСтрока = Элемент;
	
	// Скопируем настройки в компоновщик из компоновщика отчета
	ТиповыеОтчеты.СкопироватьЭлементы(КомпоновщикНастроекПользовательский.Настройки.Выбор,         ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор);
	ТиповыеОтчеты.СкопироватьЭлементы(КомпоновщикНастроекПользовательский.Настройки.Отбор,         ОтчетОбъект.КомпоновщикНастроек.Настройки.Отбор);
	ТиповыеОтчеты.СкопироватьЭлементы(КомпоновщикНастроекПользовательский.Настройки.Порядок,       ОтчетОбъект.КомпоновщикНастроек.Настройки.Порядок);
	ТиповыеОтчеты.СкопироватьЭлементы(КомпоновщикНастроекПользовательский.Настройки.УсловноеОформление,   ОтчетОбъект.КомпоновщикНастроек.Настройки.УсловноеОформление, Ложь);
	ТиповыеОтчеты.СкопироватьЭлементы(КомпоновщикНастроекПользовательский.Настройки.ПользовательскиеПоля, ОтчетОбъект.КомпоновщикНастроек.Настройки.ПользовательскиеПоля);
	ТиповыеОтчеты.ЗаполнитьЭлементы(КомпоновщикНастроекПользовательский.Настройки.ПараметрыДанных, ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыДанных);
	ТиповыеОтчеты.ЗаполнитьЭлементы(КомпоновщикНастроекПользовательский.Настройки.ПараметрыВывода, ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода);
	
	Если ТипЭлементаОтчета = Тип("ГруппировкаКомпоновкиДанных") Тогда
		
		ДобавитьПоляГруппировки(ЭлементОтчета, Элемент, "ПоляГруппировки", Истина);
	
	ИначеЕсли ТипЭлементаОтчета = Тип("ТаблицаКомпоновкиДанных") Тогда
		
		ДобавитьПоляГруппировки(ЭлементОтчета, Элемент, "Строки", Истина);
		ДобавитьПоляГруппировки(ЭлементОтчета, Элемент, "Колонки", Ложь);
				
	ИначеЕсли ТипЭлементаОтчета = Тип("ДиаграммаКомпоновкиДанных") Тогда
		
		ДобавитьПоляГруппировки(ЭлементОтчета, Элемент, "Серии", Истина);
		ДобавитьПоляГруппировки(ЭлементОтчета, Элемент, "Точки", Ложь);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьПараметрыФормы()
	
	Если ПараметрыФормы = Неопределено Тогда
		ПараметрыФормы = Новый Структура;
	КонецЕсли;
	
	СписокОграничений = Новый СписокЗначений;
	Параметры = СоздатьПоСтруктуреСоответствие(ПараметрыФормы);
	Если Параметры["СписокВыбораПредставлениеОтчета"] <> Неопределено Тогда
		СписокОграничений = Параметры["СписокВыбораПредставлениеОтчета"];
	КонецЕсли;
	
	СписокДопустимыхЗначенийПредставления = Новый СписокЗначений;
	Если СписокОграничений.Количество() = 0 
	 ИЛИ СписокОграничений.НайтиПоЗначению(Перечисления.ПредставленияЭлементовОтчетов.Таблица) <> Неопределено Тогда
		СписокДопустимыхЗначенийПредставления.Добавить(Перечисления.ПредставленияЭлементовОтчетов.Таблица, Перечисления.ПредставленияЭлементовОтчетов.Таблица,, БиблиотекаКартинок.Таблица);
	КонецЕсли;
	Если СписокОграничений.Количество() = 0 
	 ИЛИ СписокОграничений.НайтиПоЗначению(Перечисления.ПредставленияЭлементовОтчетов.КроссТаблица) <> Неопределено Тогда
		СписокДопустимыхЗначенийПредставления.Добавить(Перечисления.ПредставленияЭлементовОтчетов.КроссТаблица, Перечисления.ПредставленияЭлементовОтчетов.КроссТаблица,, БиблиотекаКартинок.КроссТаблица);
	КонецЕсли;
	
	СписокРесурсов = ТиповыеОтчеты.ПолучитьСписокДоступныхРесурсов(КомпоновщикНастроекПользовательский);
	Если СписокОграничений.Количество() = 0 
	 ИЛИ СписокОграничений.НайтиПоЗначению(Перечисления.ПредставленияЭлементовОтчетов.Диаграмма) <> Неопределено Тогда
		СписокДопустимыхЗначенийПредставления.Добавить(Перечисления.ПредставленияЭлементовОтчетов.Диаграмма, Перечисления.ПредставленияЭлементовОтчетов.Диаграмма,, БиблиотекаКартинок.Диаграмма);
	КонецЕсли;

	Действие = Новый Действие("ПереключениеПредставления");
	Если СписокДопустимыхЗначенийПредставления.Количество() > 1 Тогда
		Для каждого ЗначениеПредставления Из СписокДопустимыхЗначенийПредставления Цикл
			НоваяКнопка = ЭлементыФормы.Представление.Кнопки.Добавить("И" + Перечисления.ПредставленияЭлементовОтчетов.Индекс(ЗначениеПредставления.Значение), ТипКнопкиКоманднойПанели.Действие, ЗначениеПредставления.Представление, Действие);
			НоваяКнопка.Картинка = ЗначениеПредставления.Картинка;
		КонецЦикла;
	Иначе
		ЭлементыФормы.ДействияФормы.Кнопки.Удалить(ЭлементыФормы.Представление);
	КонецЕсли;
	
	Если Параметры["ВидимостьДетальныеЗаписи"] = Ложь Тогда
		ЭлементыФормы.ФлажокВыводитьДетальныеЗаписиСтраницаТаблица.Видимость = Ложь;
	    ЭлементыФормы.ФлажокВыводитьДетальныеЗаписиСтраницаНеТаблица.Видимость = Ложь;
	КонецЕсли;
	Если Параметры["ВидимостьРасширеннаяНастройка"] = Ложь Тогда
		ЭлементыФормы.ДействияФормы.Кнопки.Удалить(ЭлементыФормы.ДействияФормы.Кнопки.РасширеннаяНастройка);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	НастройкиПростые = ТиповыеОтчеты.НастройкиКомпоновщикаПростые(КомпоновщикНастроек);
	Если Не НастройкиПростые И Не РасширеннаяНастройка Тогда
		РасширеннаяНастройка = Истина;
	КонецЕсли;
	
	Если Не ТиповыеОтчеты.ЭтоСтараяВерсияОтчета(ОтчетОбъект) И ОтчетОбъект.Расшифровки <> Неопределено Тогда
		Расшифровки = ОтчетОбъект.Расшифровки.Получить();
	КонецЕсли;
	
КонецПроцедуры

Процедура ЦветаДиаграммыПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	ОформлениеСтроки.Ячейки.Цвет.ЦветФона = ДанныеСтроки.Цвет;
	
КонецПроцедуры

Процедура СохранитьИЗакрыть(Формировать = Ложь)
	
	Если ПредставлениеЭлементаОтчета = Перечисления.ПредставленияЭлементовОтчетов.Диаграмма Тогда
		КоличествоРесурсов = 0;
		Для Каждого Элемент Из ТиповыеОтчеты.ПолучитьВыбранныеПоля(КомпоновщикНастроекПользовательский) Цикл
			ДоступноеПоле = ТиповыеОтчеты.ПолучитьДоступноеПолеПоПолюКомпоновкиДанных(Элемент.Поле, КомпоновщикНастроекПользовательский);
			Если Элемент.Использование И ДоступноеПоле <> Неопределено И ДоступноеПоле.Ресурс Тогда
				КоличествоРесурсов = КоличествоРесурсов + 1;
			КонецЕсли;
		КонецЦикла;
		Если КоличествоРесурсов > 1  Тогда
			Вопрос("Для построения диаграммы оставьте в списке только один из выбранных показателей!", РежимДиалогаВопрос.ОК);
			Возврат;
		ИначеЕсли КоличествоРесурсов < 1  Тогда
			Вопрос("На диаграмме можно отразить только числовой показатель! Добавьте его в список показателей.", РежимДиалогаВопрос.ОК);
			Возврат;
		КонецЕсли;
	КонецЕсли;
		
	Если Не РасширеннаяНастройка Тогда
		ЗаполнитьКомпоновщикНастроекОтчета();
	КонецЕсли;
	
	ОтчетОбъект.РасширеннаяНастройка = РасширеннаяНастройка;
	ОтчетОбъект.ОтрицательноеКрасным = ОтрицательноеКрасным;
	
	//сформировать строку по группировкам
	МассивПервыхЭлементовГруппировки = Новый Массив;
	ЕстьГруппировка = ложь;
	ТиповыеОтчеты.НайтиПервыеЭлементыСтруктуры("Группировка", КомпоновщикНастроек.Настройки.Структура, МассивПервыхЭлементовГруппировки);
	Если МассивПервыхЭлементовГруппировки.Количество() > 1 Тогда
		Предупреждение("Неправильно настроена детализация отчета. Вы выбрали более двух линейных группировок. "+Символы.ПС+" Для получения более подробной информации вызовите справку (F1).");
		Возврат;
	ИначеЕсли МассивПервыхЭлементовГруппировки.Количество() = 1 тогда
		ЕстьГруппировка = истина;
	КонецЕсли;
	
	МассивПервыхЭлементовТаблицы = Новый Массив;
	ЕстьТаблица = ложь;
	ТиповыеОтчеты.НайтиПервыеЭлементыСтруктуры("Таблица", КомпоновщикНастроек.Настройки.Структура, МассивПервыхЭлементовТаблицы);
	Если МассивПервыхЭлементовТаблицы.Количество() > 1 Тогда
		Предупреждение("Неправильно настроена детализация таблицы отчета. Вы выбрали более одной таблицы. "+Символы.ПС+" Для получения более подробной информации вызовите справку (F1).");
		Возврат;
	ИначеЕсли МассивПервыхЭлементовТаблицы.Количество() = 1 тогда
		ЕстьТаблица = истина;
	КонецЕсли;
	
	МассивПервыхЭлементовДиаграммы = Новый Массив;
	ЕстьДиаграмма = ложь;
	ТиповыеОтчеты.НайтиПервыеЭлементыСтруктуры("Диаграмма", КомпоновщикНастроек.Настройки.Структура, МассивПервыхЭлементовДиаграммы);
	Если МассивПервыхЭлементовДиаграммы.Количество() > 1 Тогда
		Предупреждение("Неправильно настроена детализация диаграммы отчета. Вы выбрали более одной диаграммы. "+Символы.ПС+" Для получения более подробной информации вызовите справку (F1).");
		Возврат;
	ИначеЕсли МассивПервыхЭлементовДиаграммы.Количество() = 1 тогда
		ЕстьДиаграмма = истина;
	КонецЕсли;
	
	Если Не ТиповыеОтчеты.ЭтоСтараяВерсияОтчета(ОтчетОбъект) Тогда
		ПараметрыПанели = ТиповыеОтчеты.ПолучитьПараметрыПанелиПользователяОбъекта(ОтчетОбъект);
		Если ПараметрыПанели <> Неопределено тогда
			Если ПараметрыПанели.Свойство("Группировки") тогда
				Группировки = ПараметрыПанели.Группировки;
				Группировки.Очистить();
				Если ЕстьГруппировка тогда
					СтрокаГруппировки = Группировки.Добавить();
					СтрокаГруппировки.Группировка = "Группировка";
					СтрокаГруппировки.Использование = истина;
					СтрокаГруппировки.Представление = "Детализация";
					СтрокаГруппировки.НастраиватьИерархию = истина;
				КонецЕсли;
				Если ЕстьТаблица тогда
					СтрокаГруппировки = Группировки.Добавить();
					СтрокаГруппировки.Группировка          = "Таблица";
					СтрокаГруппировки.Использование        = истина;
					СтрокаГруппировки.Представление        = "Детализация таблицы";
					СтрокаГруппировки.НастраиватьИерархию  = истина;
					СтрокаГруппировки.ПредставлениеСтрок   = "Детализация строк";
					СтрокаГруппировки.ПредставлениеКолонок = "Детализация колонок";
				КонецЕсли;
				Если ЕстьДиаграмма тогда
					СтрокаГруппировки = Группировки.Добавить();
					СтрокаГруппировки.Группировка          = "Диаграмма";
					СтрокаГруппировки.Использование        = истина;
					СтрокаГруппировки.Представление        = "Детализация диаграммы";
					СтрокаГруппировки.НастраиватьИерархию  = истина;
					СтрокаГруппировки.ПредставлениеСтрок   = "Детализация точек";
					СтрокаГруппировки.ПредставлениеКолонок = "Детализация серий";
				КонецЕсли;
			КонецЕсли;
			ОтчетОбъект.ПараметрыПанелиПользователя = Новый ХранилищеЗначения(ПараметрыПанели);
		КонецЕсли;
	КонецЕсли;
	
	Закрыть(Формировать);

КонецПроцедуры

Процедура ОбновитьЭлементыФормы()

	Заголовок = "Настройка структуры отчета """ + ВладелецФормы.Заголовок + """";
	СписокРесурсов = ТиповыеОтчеты.ПолучитьСписокДоступныхРесурсов(КомпоновщикНастроекПользовательский);
	Если ПредставлениеЭлементаОтчета = Перечисления.ПредставленияЭлементовОтчетов.Диаграмма Тогда
		ЭлементыФормы.РамкаГруппыПоказателиСтраницаНеТаблица.Заголовок = "Показатели";
		ЭлементыФормы.РамкаГруппыПоказателиСтраницаТаблица.Заголовок = "Показатели";	
	Иначе
		ЭлементыФормы.РамкаГруппыПоказателиСтраницаНеТаблица.Заголовок = "Колонки отчета";
		ЭлементыФормы.РамкаГруппыПоказателиСтраницаТаблица.Заголовок = "Колонки отчета";
	КонецЕсли;
	
	Если ЭлементыФормы.Найти("Представление") <> Неопределено Тогда
		Для каждого КнопкаПредставления Из ЭлементыФормы.Представление.Кнопки Цикл
			КнопкаПредставления.Пометка = Ложь;
			Если КнопкаПредставления.Имя = ("И" + Перечисления.ПредставленияЭлементовОтчетов.Индекс(ПредставлениеЭлементаОтчета)) Тогда
				ТекущаяКнопка = КнопкаПредставления;
			КонецЕсли;
		КонецЦикла;
		Если ТекущаяКнопка <> Неопределено Тогда
			ТекущаяКнопка.Пометка = Истина;
			ЭлементыФормы.Представление.Заголовок = ПредставлениеЭлементаОтчета;
			ЭлементыФормы.Представление.Картинка = ТекущаяКнопка.Картинка;
			//ЭлементыФормы.Представление.Отображение = ОтображениеКнопкиКоманднойПанели.НадписьКартинка;
		КонецЕсли;
	КонецЕсли;
	
	ЭлементыФормы.ФлажокОтрицательноеКрасным.Видимость = ПредставлениеЭлементаОтчета <> Перечисления.ПредставленияЭлементовОтчетов.Диаграмма;
	ЭлементыФормы.ФлажокВыводитьОбщиеИтоги.Видимость   = ПредставлениеЭлементаОтчета <> Перечисления.ПредставленияЭлементовОтчетов.Диаграмма;
		
	ЭлементыФормы.НастройкиСкрытыеГруппировкиСтрок.ПодробнаяНастройка   = Истина;
	ЭлементыФормы.НастройкиСкрытыеГруппировкиКолонок.ПодробнаяНастройка = Истина;
	ЭлементыФормы.НастройкиСкрытыеЭлемент.ПодробнаяНастройка            = Истина;
	
	Для каждого ЭлементФормы Из ЭлементыФормы Цикл
		Если Найти(ЭлементФормы.Имя, "НастройкиПользователя") > 0 Тогда
			ЭлементФормы.Видимость = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Если ПредставлениеЭлементаОтчета = Перечисления.ПредставленияЭлементовОтчетов.Таблица Тогда
		ЭлементыФормы.РамкаГруппыГруппировкиСтрокСтраницаТаблица.Заголовок         = "Группировки строк";
		ЭлементыФормы.РамкаГруппыПоказателиСтраницаТаблица.Заголовок             = "Колонки отчета";
	ИначеЕсли ПредставлениеЭлементаОтчета = Перечисления.ПредставленияЭлементовОтчетов.КроссТаблица Тогда
		ЭлементыФормы.РамкаГруппыГруппировкиСтрокСтраницаНеТаблица.Заголовок       = "Группировки строк";
		ЭлементыФормы.РамкаГруппыГруппировкиКолонокСтраницаНеТаблица.Заголовок     = "Группировки колонок";
		ЭлементыФормы.РамкаГруппыПоказателиСтраницаНеТаблица.Заголовок             = "Колонки отчета";
	ИначеЕсли ПредставлениеЭлементаОтчета = Перечисления.ПредставленияЭлементовОтчетов.Диаграмма Тогда
		ЭлементыФормы.РамкаГруппыГруппировкиСтрокСтраницаНеТаблица.Заголовок       = "Серии";
		ЭлементыФормы.РамкаГруппыГруппировкиКолонокСтраницаНеТаблица.Заголовок     = "Точки";
		ЭлементыФормы.РамкаГруппыПоказателиСтраницаНеТаблица.Заголовок             = "Показатели";
	КонецЕсли;
	
	Если ПредставлениеЭлементаОтчета = Перечисления.ПредставленияЭлементовОтчетов.Таблица Тогда
		ЭлементыФормы.ПанельСтруктураОтчета.ТекущаяСтраница = ЭлементыФормы.ПанельСтруктураОтчета.Страницы.СтраницаТаблица;
	Иначе
		ЭлементыФормы.ПанельСтруктураОтчета.ТекущаяСтраница = ЭлементыФормы.ПанельСтруктураОтчета.Страницы.СтраницаНеТаблица;
	КонецЕсли;
	
	ЭлементыФормы.ТипДиаграммы.Видимость = (ПредставлениеЭлементаОтчета = Перечисления.ПредставленияЭлементовОтчетов.Диаграмма);
	
	Если ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Количество() = 0 Тогда
		ЭлементыФормы.ПанельОтборПорядок.ТекущаяСтраница = ЭлементыФормы.ПанельОтборПорядок.Страницы.СтраницаБезПараметров;
		ЭлементыФормы.ПанельНастройки.Страницы.ОтборИПорядок.Заголовок = "Отбор и сортировка";
	Иначе
		ЭлементыФормы.ПанельОтборПорядок.ТекущаяСтраница = ЭлементыФормы.ПанельОтборПорядок.Страницы.СтраницаПараметры;
		ЭлементыФормы.ПанельНастройки.Страницы.ОтборИПорядок.Заголовок = "Отбор, сортировка и параметры";
	КонецЕсли;
	
	Картинка = ТиповыеОтчеты.ПолучитьКартинкуПредставленияЭлементаОтчета(ПредставлениеЭлементаОтчета);
	Если Картинка <> Неопределено Тогда
		КартинкаЗаголовка = Картинка;
	КонецЕсли;
	ЭлементыФормы.ПанельОформление.ТекущаяСтраница = ЭлементыФормы.ПанельОформление.Страницы.Оформление;
	
	УстановитТекущуюСтраницуПанелиПереноса();
	ОбновитьКонтекстноеМенюДоступныхПолей();
	
КонецПроцедуры

Процедура ПереключениеПредставления(Кнопка)
	
	Индекс = Число(Прав(Кнопка.Имя, 1));
	ПредставлениеЭлементаОтчета = Перечисления.ПредставленияЭлементовОтчетов[Индекс];
	ПредставлениеЭлементаОтчетаПриИзменении(ПредставлениеЭлементаОтчета);
	
КонецПроцедуры

Процедура ОбновитьФормуПоКомпоновщику()
	
	ТипДиаграммы = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ChartType")).Значение;
	
	ЗначениеПараметра = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("TitleOutput"));
	Если ЗначениеПараметра.Значение = ТипВыводаТекстаКомпоновкиДанных.Выводить Тогда
		ЭлементыФормы.ФлажокОтображатьЗаголовок.Значение = Истина;
	Иначе
		ЭлементыФормы.ФлажокОтображатьЗаголовок.Значение = Ложь;
	КонецЕсли;
	
	ЗначениеПараметра = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("VerticalOverallPlacement")); //HorizontalOverallPlacement
	Если ЗначениеПараметра.Значение = РасположениеИтоговКомпоновкиДанных.Нет Тогда
		ЭлементыФормы.ФлажокВыводитьОбщиеИтоги.Значение = Ложь;
	Иначе
		ЭлементыФормы.ФлажокВыводитьОбщиеИтоги.Значение = Истина;
	КонецЕсли;
	
	// Период отрабатываем через стандартный
	ЭлементыФормы.ПанельПериод.ТекущаяСтраница = ЭлементыФормы.ПанельПериод.Страницы.Пустой;
	Возврат;
	
	// Параметры периода
	ЗначениеПараметраНачалоПериода = КомпоновщикНастроекПользовательский.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("НачалоПериода"));
	ЗначениеПараметраКонецПериода = КомпоновщикНастроекПользовательский.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("КонецПериода"));
	ЗначениеПараметраПериод = КомпоновщикНастроекПользовательский.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Период"));
	
	Если ЗначениеПараметраНачалоПериода <> Неопределено 
	   И ЗначениеПараметраКонецПериода <> Неопределено Тогда
		НачалоПериода = ЗначениеПараметраНачалоПериода.Значение;
		КонецПериода = ЗначениеПараметраКонецПериода.Значение;
		ЭлементыФормы.ПанельПериод.ТекущаяСтраница = ЭлементыФормы.ПанельПериод.Страницы.Интервал;
	ИначеЕсли ЗначениеПараметраПериод <> Неопределено Тогда
		Период = ЗначениеПараметраПериод.Значение;
		ЭлементыФормы.ПанельПериод.ТекущаяСтраница = ЭлементыФормы.ПанельПериод.Страницы.Период;
	Иначе
		ЭлементыФормы.ПанельПериод.ТекущаяСтраница = ЭлементыФормы.ПанельПериод.Страницы.Пустой;
	КонецЕсли;

КонецПроцедуры

Процедура ДобавитьПоляГруппировки(Элемент, ЭлементПользователя, ТипСтруктуры = "Строки", ПервоеИзмерение = Истина)
	
	// Добавим строки
	Если ТипСтруктуры = "ПоляГруппировки" Тогда
		СтрокиПользователя = ЭлементПользователя;
	Иначе
		// Добавляем фиктивную группировку без полей группировки
		СтрокиПользователя = ЭлементПользователя[ТипСтруктуры].Добавить();
	КонецЕсли;
	
	Если ПервоеИзмерение Тогда
		ЭлементыФормы.НастройкиСкрытыеГруппировкиСтрок.ТекущаяСтрока = СтрокиПользователя;
	Иначе
		ЭлементыФормы.НастройкиСкрытыеГруппировкиКолонок.ТекущаяСтрока = СтрокиПользователя;
	КонецЕсли;
	
	// Есть хотя бы одна строка группировки с хотя бы одним полем группировки
	Если ТипСтруктуры = "ПоляГруппировки" Тогда
		Группировка = Элемент;
		ГруппировкиЕсть = Истина;
	ИначеЕсли ТипСтруктуры <> "ПоляГруппировки"
		    И Элемент[ТипСтруктуры].Количество() > 0 Тогда
	    // Получим первую группировку
		Группировка = Элемент[ТипСтруктуры][0];
		ГруппировкиЕсть = Истина;
	Иначе
		ГруппировкиЕсть = Ложь;
	КонецЕсли;
	
	Пока ГруппировкиЕсть Цикл
		// Если ни одного поля группировки нет, значит в отчете есть детальные записи
		Если Группировка.ПоляГруппировки.Элементы.Количество() = 0 Тогда
			ВыводитьДетальныеЗаписи = Истина;
			Прервать;
		КонецЕсли;
		// Определяем первое поле в очередной группировке и добавляем в пользовательские поля группировки
		ПолеГруппировки = Группировка.ПоляГруппировки.Элементы[0];
		ПолеГруппировкиПользователя = СтрокиПользователя.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
		ЗаполнитьЗначенияСвойств(ПолеГруппировкиПользователя, ПолеГруппировки);
		Если Группировка.Структура.Количество() = 0 Тогда
			Прервать;
		Иначе
			// Переходим на уровень ниже по группировкам
			Группировка = Группировка.Структура[0];
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьГруппировки(ЭлементОтчета, Элемент, ТипСтруктуры)
	
	// Добавим в компоновщик настроек строки группировки таблицы
	Если ТипСтруктуры = "ПоляГруппировки" Тогда
		СтрокиЭлемента = Элемент;
		ЭлементОтчета.ПоляГруппировки.Элементы.Очистить();
		ЭлементОтчета.Структура.Очистить();
	Иначе
		СтрокиЭлемента = Элемент[ТипСтруктуры][0];
		ЭлементОтчета[ТипСтруктуры].Очистить();
	КонецЕсли;
	
	Если СтрокиЭлемента.ПоляГруппировки.Элементы.Количество() <> 0 Тогда
		Если ТипСтруктуры = "ПоляГруппировки" Тогда
			НоваяСтрока = ЭлементОтчета;
		Иначе
			НоваяСтрока = ЭлементОтчета[ТипСтруктуры].Добавить();
		КонецЕсли;
	Иначе
		Если ТипСтруктуры = "ПоляГруппировки" Тогда
			НоваяСтрока = ЭлементОтчета;
		Иначе
			НоваяСтрока = ЭлементОтчета[ТипСтруктуры];
		КонецЕсли;
	КонецЕсли;
	
	Если ТипСтруктуры = "ПоляГруппировки" И СтрокиЭлемента.ПоляГруппировки.Элементы.Количество() = 0 Тогда
		НоваяСтрока = ЭлементОтчета.Родитель;
		ЭлементОтчета.Родитель.Структура.Удалить(ЭлементОтчета);
	КонецЕсли;
		
	Для каждого СтрокаГруппировки Из СтрокиЭлемента.ПоляГруппировки.Элементы Цикл
		НовоеПолеГруппировки = НоваяСтрока.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
		ЗаполнитьЗначенияСвойств(НовоеПолеГруппировки, СтрокаГруппировки);
		ТиповыеОтчеты.ДобавитьАвтоВыбранноеПоле(НоваяСтрока);
		ТиповыеОтчеты.ДобавитьАвтоЭлементПорядка(НоваяСтрока);
		Если СтрокиЭлемента.ПоляГруппировки.Элементы.Индекс(СтрокаГруппировки) = СтрокиЭлемента.ПоляГруппировки.Элементы.Количество() - 1 Тогда
			Прервать;
		КонецЕсли;
		Если ТипСтруктуры = "ПоляГруппировки" Тогда
			НоваяСтрока = НоваяСтрока.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
		Иначе
			НоваяСтрока = НоваяСтрока.Структура.Добавить();
		КонецЕсли;
	КонецЦикла;
	
	// Обработка вывода детальных записей
	Если ВыводитьДетальныеЗаписи И (ТипСтруктуры = "Строки" ИЛИ ТипСтруктуры = "ПоляГруппировки") Тогда
		Если ТипСтруктуры = "ПоляГруппировки" Тогда
			НоваяСтрока = НоваяСтрока.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
		Иначе
			Если ТипЗнч(НоваяСтрока) = Тип("ГруппировкаТаблицыКомпоновкиДанных") Тогда
				НоваяСтрока = НоваяСтрока.Структура.Добавить();
			Иначе
				НоваяСтрока = НоваяСтрока.Добавить();
			КонецЕсли;
		КонецЕсли;
		ТиповыеОтчеты.ДобавитьАвтоВыбранноеПоле(НоваяСтрока);
		ТиповыеОтчеты.ДобавитьАвтоЭлементПорядка(НоваяСтрока);
	КонецЕсли;
	
КонецПроцедуры
	
Процедура ЗаполнитьКомпоновщикНастроекОтчета(СтарыйТипСтрок = Неопределено, СтарыйТипКолонок = Неопределено, НовыйТипЭлемента = Неопределено)
	
	ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
	
	// Настройки компоновщика отчета
	Элемент = КомпоновщикНастроекПользовательский.Настройки.Структура[0];
	ТипЭлемента = ТипЗнч(Элемент);
	
	ЭлементОтчета = ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Добавить(ТипЭлемента);
	Если ТипЭлемента = Тип("ДиаграммаКомпоновкиДанных") Тогда
		ТиповыеОтчеты.ДобавитьАвтоВыбранноеПоле(ЭлементОтчета);
	КонецЕсли;
	
	// Скопируем настройки в компоновщик из компоновщика отчета
	ТиповыеОтчеты.СкопироватьЭлементы(ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор, КомпоновщикНастроекПользовательский.Настройки.Выбор);
	ТиповыеОтчеты.СкопироватьЭлементы(ОтчетОбъект.КомпоновщикНастроек.Настройки.Отбор, КомпоновщикНастроекПользовательский.Настройки.Отбор);
	ТиповыеОтчеты.СкопироватьЭлементы(ОтчетОбъект.КомпоновщикНастроек.Настройки.Порядок, КомпоновщикНастроекПользовательский.Настройки.Порядок);
	ТиповыеОтчеты.СкопироватьЭлементы(ОтчетОбъект.КомпоновщикНастроек.Настройки.УсловноеОформление, КомпоновщикНастроекПользовательский.Настройки.УсловноеОформление, Ложь);
	ТиповыеОтчеты.СкопироватьЭлементы(ОтчетОбъект.КомпоновщикНастроек.Настройки.ПользовательскиеПоля, КомпоновщикНастроекПользовательский.Настройки.ПользовательскиеПоля);
	ТиповыеОтчеты.ЗаполнитьЭлементы(ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыДанных, КомпоновщикНастроекПользовательский.Настройки.ПараметрыДанных);
	ТиповыеОтчеты.ЗаполнитьЭлементы(ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыВывода, КомпоновщикНастроекПользовательский.Настройки.ПараметрыВывода);
	
	Если ТипЭлемента = Тип("ГруппировкаКомпоновкиДанных") Тогда
		
		ДобавитьГруппировки(ЭлементОтчета, Элемент, "ПоляГруппировки");
		
	ИначеЕсли ТипЭлемента = Тип("ТаблицаКомпоновкиДанных") Тогда
		
		ДобавитьГруппировки(ЭлементОтчета, Элемент, "Строки");
		ДобавитьГруппировки(ЭлементОтчета, Элемент, "Колонки");
				
	ИначеЕсли ТипЭлемента = Тип("ДиаграммаКомпоновкиДанных") Тогда
		
		ДобавитьГруппировки(ЭлементОтчета, Элемент, "Серии");
		ДобавитьГруппировки(ЭлементОтчета, Элемент, "Точки");
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПредставлениеЭлементаОтчетаПриИзменении(НовоеПредставление)
	
	СтароеПредставление = ТиповыеОтчеты.ПолучитьПредставлениеПоЭлементуСтруктуры(КомпоновщикНастроекПользовательский.Настройки.Структура[0]);
	Если СтароеПредставление = НовоеПредставление Тогда
		Возврат;
	КонецЕсли;
	
	НовыйТипЭлемента = ТиповыеОтчеты.ПолучитьТипЭлементаПоПредставлению(НовоеПредставление);
	НовыйЭлемент = КомпоновщикНастроекПользовательский.Настройки.Структура.Добавить(НовыйТипЭлемента);
	Если НовоеПредставление = Перечисления.ПредставленияЭлементовОтчетов.Диаграмма Тогда
		ТиповыеОтчеты.ДобавитьАвтоВыбранноеПоле(НовыйЭлемент);
	КонецЕсли;
	
	Если СтароеПредставление = Перечисления.ПредставленияЭлементовОтчетов.Таблица Тогда
		СтруктураСтрок = КомпоновщикНастроекПользовательский.Настройки.Структура[0];
		СтруктураКолонок = Неопределено;
	ИначеЕсли СтароеПредставление = Перечисления.ПредставленияЭлементовОтчетов.КроссТаблица Тогда
		СтруктураСтрок = КомпоновщикНастроекПользовательский.Настройки.Структура[0].Строки[0];
		СтруктураКолонок = КомпоновщикНастроекПользовательский.Настройки.Структура[0].Колонки[0];
	ИначеЕсли СтароеПредставление = Перечисления.ПредставленияЭлементовОтчетов.Диаграмма Тогда
		СтруктураСтрок = КомпоновщикНастроекПользовательский.Настройки.Структура[0].Серии[0];
		СтруктураКолонок = КомпоновщикНастроекПользовательский.Настройки.Структура[0].Точки[0];
	КонецЕсли;
	
	Если НовоеПредставление = Перечисления.ПредставленияЭлементовОтчетов.Таблица Тогда
		
		Группировки = НовыйЭлемент;
		ТиповыеОтчеты.СкопироватьНастройкиКомпоновкиДанных(Группировки, СтруктураСтрок);
		ЭлементыФормы.НастройкиСкрытыеГруппировкиСтрок.ТекущаяСтрока = Группировки;
		
	ИначеЕсли НовоеПредставление = Перечисления.ПредставленияЭлементовОтчетов.КроссТаблица Тогда
		
		Группировки = НовыйЭлемент.Строки.Добавить();
		ТиповыеОтчеты.СкопироватьНастройкиКомпоновкиДанных(Группировки, СтруктураСтрок);
		ЭлементыФормы.НастройкиСкрытыеГруппировкиСтрок.ТекущаяСтрока = Группировки;
		
		Группировки = НовыйЭлемент.Колонки.Добавить();
		ТиповыеОтчеты.СкопироватьНастройкиКомпоновкиДанных(Группировки, СтруктураКолонок);
		ЭлементыФормы.НастройкиСкрытыеГруппировкиКолонок.ТекущаяСтрока = Группировки;
		
		Если ВыводитьДетальныеЗаписи тогда
			
			ЕстьДетальныеПоля = ложь;
			
			Для каждого Поле из КомпоновщикНастроекПользовательский.Настройки.Выбор.Элементы Цикл
				
				ПоляПроверки = КомпоновщикНастроекПользовательский.Настройки.Выбор.ДоступныеПоляВыбора.НайтиПоле(Поле.Поле);
				
				Если ПоляПроверки <> Неопределено и НЕ ПоляПроверки.Ресурс тогда
					
					ЕстьДетальныеПоля = истина;
					Прервать;
					
				КонецЕсли;
			КонецЦикла;
			
			ВыводитьДетальныеЗаписи = ЕстьДетальныеПоля И ВыводитьДетальныеЗаписи;
		
		КонецЕсли;
		
	ИначеЕсли НовоеПредставление = Перечисления.ПредставленияЭлементовОтчетов.Диаграмма Тогда
		
		Группировки = НовыйЭлемент.Серии.Добавить();
		ТиповыеОтчеты.СкопироватьНастройкиКомпоновкиДанных(Группировки, СтруктураСтрок);
		ЭлементыФормы.НастройкиСкрытыеГруппировкиСтрок.ТекущаяСтрока = Группировки;
		
		Группировки = НовыйЭлемент.Точки.Добавить();
		ТиповыеОтчеты.СкопироватьНастройкиКомпоновкиДанных(Группировки, СтруктураКолонок);
		ЭлементыФормы.НастройкиСкрытыеГруппировкиКолонок.ТекущаяСтрока = Группировки;
		
	КонецЕсли;
	
	КомпоновщикНастроекПользовательский.Настройки.Структура.Удалить(КомпоновщикНастроекПользовательский.Настройки.Структура[0]);
	
	ОбновитьЭлементыФормы();
   
КонецПроцедуры

Процедура ТабличноеПолеГруппировкиСтраницаТаблицаПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Колонка)
	
	Если ТипЗнч(ПараметрыПеретаскивания.Значение[0]) = Тип("ДоступноеПолеКомпоновкиДанных")
		И (ПараметрыПеретаскивания.Значение[0].Ресурс 
		ИЛИ ПараметрыПеретаскивания.Значение[0].Родитель <> Неопределено
		И (ПараметрыПеретаскивания.Значение[0].Родитель.Поле = Новый ПолеКомпоновкиДанных("SystemFields")
		ИЛИ ПараметрыПеретаскивания.Значение[0].Родитель.Поле = Новый ПолеКомпоновкиДанных("DataParameters"))) Тогда
		СтандартнаяОбработка = Ложь;
		ПараметрыПеретаскивания.ДопустимыеДействия = ДопустимыеДействияПеретаскивания.НеОбрабатывать;
		ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Отмена;
	КонецЕсли;
		
КонецПроцедуры

Процедура КоманднаяПанельГруппировкиСтрокСтраницаТаблицаТранспонировать(Кнопка)
	
	// Сохраняем строки
	МассивСтрок = Новый Массив;
	Для каждого Группировка Из ЭлементыФормы.ТабличноеПолеГруппировкиСтрокСтраницаТаблица.Значение.Элементы Цикл
		МассивСтрок.Добавить(Группировка);
	КонецЦикла;
	
	// Очищаем строки
	ЭлементыФормы.ТабличноеПолеГруппировкиСтрокСтраницаТаблица.Значение.Элементы.Очистить();
	
	// Заполняем строки колонками
	Для каждого Группировка Из ЭлементыФормы.ТабличноеПолеГруппировкиКолонокСтраницаНеТаблица.Значение.Элементы Цикл
		НовыйЭлемент = ЭлементыФормы.ТабличноеПолеГруппировкиСтрокСтраницаТаблица.Значение.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
		ЗаполнитьЗначенияСвойств(НовыйЭлемент, Группировка);
	КонецЦикла;
	
	// Очищаем колонки
	ЭлементыФормы.ТабличноеПолеГруппировкиКолонокСтраницаНеТаблица.Значение.Элементы.Очистить();
	
	// Заполняем строки колонками
	Для каждого Группировка Из МассивСтрок Цикл
		НовыйЭлемент = ЭлементыФормы.ТабличноеПолеГруппировкиКолонокСтраницаНеТаблица.Значение.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
		ЗаполнитьЗначенияСвойств(НовыйЭлемент, Группировка);
	КонецЦикла;
	
КонецПроцедуры

Процедура ОсновныеДействияФормыОК(Кнопка)
	
	Если ВыводитьДетальныеЗаписи И НЕ ЕстьДетальныеПоля() тогда
		Предупреждение("В списке «Колонки отчета» нет дополнительных полей или они не могут быть выведены в качестве дополнительных.");
		Возврат;
	КонецЕсли;
	
	СохранитьИЗакрыть();
	
КонецПроцедуры

Процедура ТипДиаграммыПриИзменении(Элемент)
	
	ЗначениеПараметра = КомпоновщикНастроекПользовательский.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ChartType"));
	ЗначениеПараметра.Значение = ТипДиаграммы;
	ЗначениеПараметра.Использование = Истина;
	
КонецПроцедуры

Процедура КнопкаНастройкаПериодаНажатие(Элемент)
	
	ТиповыеОтчеты.НастроитьПериод(НастройкаПериода, НачалоПериода, КонецПериода);
	ТиповыеОтчеты.ОбновитьПараметрыПериодаПоФорме(КомпоновщикНастроекПользовательский, ЭтаФорма);
	
КонецПроцедуры

Процедура ПолеВводаПериодПриИзменении(Элемент)
	
	ТиповыеОтчеты.ОбновитьПараметрыПериодаПоФорме(КомпоновщикНастроекПользовательский, ЭтаФорма);
	
КонецПроцедуры

Процедура ФлажокОтображатьЗаголовокПриИзменении(Элемент)
	
	Если Элемент.Значение Тогда
		Значение = ТипВыводаТекстаКомпоновкиДанных.Выводить;
	Иначе
		Значение = ТипВыводаТекстаКомпоновкиДанных.НеВыводить;
	КонецЕсли;
	
	КомпоновщикНастроекПользовательский.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("TitleOutput")).Значение = Значение;
	
КонецПроцедуры

Процедура ФлажокВыводитьОбщиеИтогиПриИзменении(Элемент)
	
	ЗначениеПараметра = КомпоновщикНастроекПользовательский.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("VerticalOverallPlacement"));
	Если Элемент.Значение Тогда
		ЗначениеПараметра.Значение = РасположениеИтоговКомпоновкиДанных.Конец;
	Иначе
		ЗначениеПараметра.Значение = РасположениеИтоговКомпоновкиДанных.Нет 
	КонецЕсли;
	
КонецПроцедуры

Процедура ТабличноеПолеГруппировкиСтрокСтраницаТаблицаПередНачаломИзменения(Элемент, Отказ)
	
	Если Элемент.ТекущаяКолонка.Имя = "Настройка" Тогда
		Сообщить("Настройка детальных полей группировки");
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПанельНастройкиПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	УстановитТекущуюСтраницуПанелиПереноса(ЭлементыФормы.ПанельНастройки.Страницы[ТекущаяСтраница]);
	ОбновитьКонтекстноеМенюДоступныхПолей();
	
КонецПроцедуры

Процедура УстановитТекущуюСтраницуПанелиПереноса(ТекущаяСтраница = Неопределено)
	
	Если ТекущаяСтраница = Неопределено Тогда
		ТекущаяСтраница = ЭлементыФормы.ПанельНастройки.ТекущаяСтраница;
	КонецЕсли;
		
	Если ТекущаяСтраница = ЭлементыФормы.ПанельНастройки.Страницы.СтруктураОтчета Тогда
		Если ЭлементыФормы.ПанельСтруктураОтчета.ТекущаяСтраница = ЭлементыФормы.ПанельСтруктураОтчета.Страницы.СтраницаТаблица Тогда
			КоличествоПолей = 2;
		Иначе
			КоличествоПолей = 3;
		КонецЕсли;
	ИначеЕсли ТекущаяСтраница = ЭлементыФормы.ПанельНастройки.Страницы.ОтборИПорядок Тогда
		Если ЭлементыФормы.ПанельОтборПорядок.ТекущаяСтраница = ЭлементыФормы.ПанельОтборПорядок.Страницы.СтраницаБезПараметров Тогда
			КоличествоПолей = 2;
		Иначе
			КоличествоПолей = 3;
		КонецЕсли;
	Иначе
		КоличествоПолей = 0;
	КонецЕсли;
	
	ЭлементыФормы.ПанельПереноса.ТекущаяСтраница = ЭлементыФормы.ПанельПереноса.Страницы["Страница" + КоличествоПолей];
	
КонецПроцедуры

Процедура ПеренестиНажатие(Элемент)
	
	ПеренестиПоле(Элемент.Имя);
	
КонецПроцедуры

Функция ПолучитьТабличноеПолеПоНомеру(НомерТабличногоПоля)
	
		ТекущаяСтраницаНастройки = ЭлементыФормы.ПанельНастройки.ТекущаяСтраница;
	Если ТекущаяСтраницаНастройки = ЭлементыФормы.ПанельНастройки.Страницы.СтруктураОтчета Тогда
		Если ЭлементыФормы.ПанельСтруктураОтчета.ТекущаяСтраница = ЭлементыФормы.ПанельСтруктураОтчета.Страницы.СтраницаТаблица Тогда
			Если НомерТабличногоПоля = 1 Тогда
				ТабличноеПоле = ЭлементыФормы.ТабличноеПолеГруппировкиСтрокСтраницаТаблица;
			ИначеЕсли НомерТабличногоПоля = 2 Тогда
				ТабличноеПоле = ЭлементыФормы.ВыбранныеПоляСтраницаТаблица;
			КонецЕсли;
		Иначе
			Если НомерТабличногоПоля = 1 Тогда
				ТабличноеПоле = ЭлементыФормы.ТабличноеПолеГруппировкиСтрокСтраницаНеТаблица;
			ИначеЕсли НомерТабличногоПоля = 2 Тогда
				ТабличноеПоле = ЭлементыФормы.ТабличноеПолеГруппировкиКолонокСтраницаНеТаблица;
			ИначеЕсли НомерТабличногоПоля = 3 Тогда
				ТабличноеПоле = ЭлементыФормы.ВыбранныеПоляСтраницаНеТаблица;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ТекущаяСтраницаНастройки = ЭлементыФормы.ПанельНастройки.Страницы.ОтборИПорядок Тогда
		Если ЭлементыФормы.ПанельОтборПорядок.ТекущаяСтраница = ЭлементыФормы.ПанельОтборПорядок.Страницы.СтраницаБезПараметров Тогда
			Если НомерТабличногоПоля = 1 Тогда
				ТабличноеПоле = ЭлементыФормы.ТабличноеПолеОтборСтраницаБезПараметров;
			ИначеЕсли НомерТабличногоПоля = 2 Тогда
				ТабличноеПоле = ЭлементыФормы.ТабличноеПолеПорядокСтраницаБезПараметров;
			КонецЕсли;
		Иначе
			Если НомерТабличногоПоля = 1 Тогда
				ТабличноеПоле = ЭлементыФормы.ТабличноеПолеОтборСтраницаПараметры;
			ИначеЕсли НомерТабличногоПоля = 2 Тогда
				ТабличноеПоле = ЭлементыФормы.ТабличноеПолеПорядокСтраницаПараметры;
			ИначеЕсли НомерТабличногоПоля = 3 Тогда
				ТабличноеПоле = ЭлементыФормы.ТабличноеПолеПараметрыСтраницаПараметры;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ТабличноеПоле;

КонецФункции

Процедура ПеренестиПоле(ИмяКоманды)
	
	Если Лев(ИмяКоманды, 5) = "Влево" Тогда
		Команда = "Удалить";
		НомерТабличногоПоля = Число(Сред(ИмяКоманды, 7,1));
	Иначе
		Команда = "Добавить";
		НомерТабличногоПоля = Число(Сред(ИмяКоманды, 8,1));
	КонецЕсли;
	
	ТабличноеПоле = ПолучитьТабличноеПолеПоНомеру(НомерТабличногоПоля);
	
	Если Команда = "Удалить" Тогда
		ТекущиеДанные = ТабличноеПоле.ТекущиеДанные;
		Если ТекущиеДанные <> Неопределено Тогда
			ТабличноеПоле.Значение.Элементы.Удалить(ТекущиеДанные);
		КонецЕсли;
	Иначе
		ТекущиеДанныеДоступныеПоля = ЭлементыФормы.ТабличноеПолеДоступныеПоля.ТекущиеДанные;
		Если ТекущиеДанныеДоступныеПоля = Неопределено 
		 ИЛИ ТекущиеДанныеДоступныеПоля.Папка Тогда
			Возврат;
		КонецЕсли;
		ПолеДобавить = ТекущиеДанныеДоступныеПоля.Поле;
		ТипЭлемента = Неопределено;
		МожноДобавлять = ПолеДоступно(ПолеДобавить, ТабличноеПоле, ТипЭлемента);
		Если МожноДобавлять Тогда
			НовыйЭлемент = ТабличноеПоле.Значение.Элементы.Добавить(ТипЭлемента);
			Если ТипЭлемента = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
				НовыйЭлемент.ЛевоеЗначение = ПолеДобавить;
			Иначе
				НовыйЭлемент.Поле = ПолеДобавить;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция ПолеДоступно(Поле, ТабличноеПоле, ТипЭлемента = Неопределено)
	
	Если ТипЗнч(ТабличноеПоле.Значение) = Тип("ПоляГруппировкиКомпоновкиДанных") Тогда
		МожноДобавить = (ТабличноеПоле.Значение.ДоступныеПоляПолейГруппировок.НайтиПоле(Поле) <> Неопределено);
		ТипЭлемента = Тип("ПолеГруппировкиКомпоновкиДанных");
	ИначеЕсли ТипЗнч(ТабличноеПоле.Значение) = Тип("ВыбранныеПоляКомпоновкиДанных") Тогда
		МожноДобавить = (ТабличноеПоле.Значение.ДоступныеПоляВыбора.НайтиПоле(Поле) <> Неопределено);
		ТипЭлемента = Тип("ВыбранноеПолеКомпоновкиДанных");
	ИначеЕсли ТипЗнч(ТабличноеПоле.Значение) = Тип("ПорядокКомпоновкиДанных") Тогда
		МожноДобавить = (ТабличноеПоле.Значение.ДоступныеПоляПорядка.НайтиПоле(Поле) <> Неопределено);
		ТипЭлемента = Тип("ЭлементПорядкаКомпоновкиДанных");
	ИначеЕсли ТипЗнч(ТабличноеПоле.Значение) = Тип("ОтборКомпоновкиДанных") Тогда
		МожноДобавить = (ТабличноеПоле.Значение.ДоступныеПоляОтбора.НайтиПоле(Поле) <> Неопределено);
		ТипЭлемента = Тип("ЭлементОтбораКомпоновкиДанных");
	Иначе
		МожноДобавить = Ложь;
	КонецЕсли;
	
	Возврат МожноДобавить;
		
КонецФункции

Функция ЕстьДетальныеПоля()
	
	ЕстьДетальныеПоля = ложь;
	
	// получим список полей группировки
	ПоляГруппировки = ТиповыеОтчеты.ПолучитьПоляГруппировок(КомпоновщикНастроекПользовательский);
	
	Для каждого Поле из КомпоновщикНастроекПользовательский.Настройки.Выбор.Элементы Цикл
		
		Если ТипЗнч(Поле) = Тип("ГруппаВыбранныхПолейКомпоновкиДанных") тогда
			
			Если ЕстьДетальныеПоляВГруппе(Поле.Элементы, ПоляГруппировки) тогда
				ЕстьДетальныеПоля = истина;
				Прервать;
			Иначе
				ЕстьДетальныеПоля = ложь;
				Продолжить;
			КонецЕсли;
			
		КонецЕсли;
		
		ПолеПроверки = КомпоновщикНастроекПользовательский.Настройки.Выбор.ДоступныеПоляВыбора.НайтиПоле(Поле.Поле);
		
		Если ПолеПроверки <> Неопределено и НЕ ПолеПроверки.Ресурс тогда
			
			ЕстьДетальныеПоля = истина;
			
			// проверим присутствует ли детальное поле или его реквизит в группировке
			Для каждого ЗначениеПоля из ПоляГруппировки Цикл
				
				ПолеКомпоновкиДанных = Новый ПолеКомпоновкиДанных(ЗначениеПоля.Значение);
				
				Если ПолеПроверки.Поле = ПолеКомпоновкиДанных тогда
					
					ЕстьДетальныеПоля = ложь;
					
				Иначе
					
					РодительПоля = ПолеПроверки.Родитель;
					
					Пока РодительПоля <> Неопределено Цикл
						
						Если РодительПоля.Поле = ПолеКомпоновкиДанных тогда
							
							ЕстьДетальныеПоля = ложь;
							
						КонецЕсли;
						
						РодительПоля = РодительПоля.Родитель;
						
					КонецЦикла
				КонецЕсли;
			КонецЦикла;
			
			Если ЕстьДетальныеПоля тогда
				Прервать;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ЕстьДетальныеПоля;
	
КонецФункции

Функция ЕстьДетальныеПоляВГруппе(ЭлементыГруппы, ПоляГруппировки)
	
	ЕстьДетальныеПоля = ложь;
	
	Для каждого Поле из ЭлементыГруппы Цикл
		
		Если ТипЗнч(Поле) = Тип("ГруппаВыбранныхПолейКомпоновкиДанных")тогда
			Если  ЕстьДетальныеПоляВГруппе(Поле.Элементы, ПоляГруппировки) тогда
				ЕстьДетальныеПоля = истина;
				Прервать;
			КонецЕсли;
			Продолжить;
		КонецЕсли;
		
		ПолеПроверки = КомпоновщикНастроекПользовательский.Настройки.Выбор.ДоступныеПоляВыбора.НайтиПоле(Поле.Поле);
		
		Если ПолеПроверки <> Неопределено и НЕ ПолеПроверки.Ресурс тогда
			
			ЕстьДетальныеПоля = истина;
			
			// проверим присутсвует или детальное поле или его реквизит в группировке
			Для каждого ЗначениеПоля из ПоляГруппировки Цикл
				
				ПолеКомпоновкиДанных = Новый ПолеКомпоновкиДанных(ЗначениеПоля.Значение);
				
				Если ПолеПроверки.Поле = ПолеКомпоновкиДанных тогда
					
					ЕстьДетальныеПоля = ложь;
					
				Иначе
					
					РодительПоля = ПолеПроверки.Родитель;
					
					Пока РодительПоля <> Неопределено Цикл
						
						Если РодительПоля.Поле = ПолеКомпоновкиДанных тогда
							
							ЕстьДетальныеПоля = ложь;
							
						КонецЕсли;
						
						РодительПоля = РодительПоля.Родитель;
						
					КонецЦикла
				КонецЕсли;
			КонецЦикла;
			
			Если ЕстьДетальныеПоля тогда
				Прервать;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ЕстьДетальныеПоля;
	
КонецФункции

Процедура ОсновныеДействияФормыСформировать(Кнопка)
	
	Если ВыводитьДетальныеЗаписи И НЕ ЕстьДетальныеПоля() тогда
		Предупреждение("В списке «Колонки отчета» нет дополнительных полей или они не могут быть выведены в качестве дополнительных.");
		Возврат;
	КонецЕсли;
	
	СохранитьИЗакрыть(Истина);
	
КонецПроцедуры

Процедура КоманднаяПанельДоступныеПоляПользовательскиеПоля(Кнопка)
	
	ТиповыеОтчеты.РедактироватьПользовательскиеПоля(КомпоновщикНастроекПользовательский, ОтчетОбъект);
	
КонецПроцедуры

Процедура ДобавитьКнопкуЕслиПолеДоступно(КоличествоТабличныеПолей, НомерТабличногоПоля, ТекстКудаДобавлять, Картинка = Неопределено)
	
	Если Картинка = Неопределено Тогда
		Картинка = БиблиотекаКартинок.ДобавитьЭлементСписка;
	КонецЕсли;
	Кнопки = ЭлементыФормы.КонтекстноеМенюДоступныеПоля.Кнопки;
	Действие = Новый Действие("ПеренестиНажатие");
	Если ПолеДоступно(ЭлементыФормы.ТабличноеПолеДоступныеПоля.ТекущиеДанные.Поле, ПолучитьТабличноеПолеПоНомеру(НомерТабличногоПоля)) Тогда
		Кнопка = Кнопки.Добавить("Вправо" + КоличествоТабличныеПолей + НомерТабличногоПоля, ТипКнопкиКоманднойПанели.Действие, "Добавить поле " + ТекстКудаДобавлять, Действие);
		Кнопка.Картинка = Картинка;
	КонецЕсли;
	
КонецПроцедуры

Процедура ТабличноеПолеДоступныеПоляПриАктивизацииСтроки(Элемент)
	
	ОбновитьКонтекстноеМенюДоступныхПолей();
	
КонецПроцедуры

Процедура ОбновитьКонтекстноеМенюДоступныхПолей()
	
	Кнопки = ЭлементыФормы.КонтекстноеМенюДоступныеПоля.Кнопки;
	Кнопки.Очистить();
	
	Если ЭлементыФормы.ТабличноеПолеДоступныеПоля.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ЭлементыФормы.ТабличноеПолеДоступныеПоля.ТекущиеДанные.Поле = Новый ПолеКомпоновкиДанных("UserFields") Тогда
		Действие = Новый Действие("КоманднаяПанельДоступныеПоляПользовательскиеПоля");
		Кнопка = Кнопки.Добавить("ПользовательскиеПоля", ТипКнопкиКоманднойПанели.Действие, "Настройка польз. полей", Действие);
		Кнопка.Картинка = БиблиотекаКартинок.ПользовательскиеПоля;
        Кнопка = Кнопки.Добавить("Разделитель", ТипКнопкиКоманднойПанели.Разделитель);
	КонецЕсли;	
 	Если  ЭлементыФормы.ТабличноеПолеДоступныеПоля.ТекущиеДанные.Папка Тогда 
		Возврат;
	КонецЕсли;
	
	Действие = Новый Действие("ПеренестиНажатие");
	Если ПредставлениеЭлементаОтчета = Перечисления.ПредставленияЭлементовОтчетов.Диаграмма Тогда
		ТекстВДополнительныеПоля = "в показатели";
	Иначе
		ТекстВДополнительныеПоля = "в колонки отчета";
	КонецЕсли;
	
	Если ЭлементыФормы.ПанельНастройки.ТекущаяСтраница = ЭлементыФормы.ПанельНастройки.Страницы.СтруктураОтчета Тогда
		Если ЭлементыФормы.ПанельСтруктураОтчета.ТекущаяСтраница = ЭлементыФормы.ПанельСтруктураОтчета.Страницы.СтраницаТаблица Тогда
			ДобавитьКнопкуЕслиПолеДоступно(2, 1, "в группировку строк", БиблиотекаКартинок.НоваяГруппировкаКомпоновкиДанных);
			ДобавитьКнопкуЕслиПолеДоступно(2, 2, ТекстВДополнительныеПоля, БиблиотекаКартинок.ДобавитьЭлементСписка);
		ИначеЕсли ПредставлениеЭлементаОтчета = Перечисления.ПредставленияЭлементовОтчетов.КроссТаблица Тогда
			ДобавитьКнопкуЕслиПолеДоступно(3, 1, "в группировку строк", БиблиотекаКартинок.НоваяГруппировкаКомпоновкиДанных);
			ДобавитьКнопкуЕслиПолеДоступно(3, 2, "в группировку колонок", БиблиотекаКартинок.НоваяГруппировкаКомпоновкиДанных);
			ДобавитьКнопкуЕслиПолеДоступно(3, 3, ТекстВДополнительныеПоля, БиблиотекаКартинок.ДобавитьЭлементСписка);
		Иначе
			ДобавитьКнопкуЕслиПолеДоступно(3, 1, "в серии", БиблиотекаКартинок.НоваяГруппировкаКомпоновкиДанных);
			ДобавитьКнопкуЕслиПолеДоступно(3, 2, "в точки", БиблиотекаКартинок.НоваяГруппировкаКомпоновкиДанных);
			ДобавитьКнопкуЕслиПолеДоступно(3, 3, ТекстВДополнительныеПоля, БиблиотекаКартинок.ДобавитьЭлементСписка);
		КонецЕсли;
	ИначеЕсли ЭлементыФормы.ПанельНастройки.ТекущаяСтраница = ЭлементыФормы.ПанельНастройки.Страницы.ОтборИПорядок Тогда
		Если ЭлементыФормы.ПанельОтборПорядок.ТекущаяСтраница = ЭлементыФормы.ПанельОтборПорядок.Страницы.СтраницаБезПараметров Тогда
			ДобавитьКнопкуЕслиПолеДоступно(2, 1, "в отбор", БиблиотекаКартинок.Отбор);
			ДобавитьКнопкуЕслиПолеДоступно(2, 2, "в сортировку", БиблиотекаКартинок.ПорядокКомпоновки);
		Иначе
			ДобавитьКнопкуЕслиПолеДоступно(3, 1, "в отбор", БиблиотекаКартинок.Отбор);
			ДобавитьКнопкуЕслиПолеДоступно(3, 2, "в сортировку", БиблиотекаКартинок.ПорядокКомпоновки);
		КонецЕсли;
	КонецЕсли;
	Если ЭлементыФормы.ТабличноеПолеДоступныеПоля.ТекущиеДанные.Родитель <> Неопределено 
	   И ЭлементыФормы.ТабличноеПолеДоступныеПоля.ТекущиеДанные.Родитель.Поле = Новый ПолеКомпоновкиДанных("UserFields") Тогда
		Для Каждого ПользовательскоеПоле Из КомпоновщикНастроекПользовательский.Настройки.ПользовательскиеПоля.Элементы Цикл
			Если ПользовательскоеПоле.ПутьКДанным = Строка(ЭлементыФормы.ТабличноеПолеДоступныеПоля.ТекущиеДанные.Поле) Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если ТиповыеОтчеты.ПолучитьИмяФормыРедактированияПользовательскогоПоля(ПользовательскоеПоле) <> Неопределено Тогда
			Кнопка = Кнопки.Добавить("Разделитель", ТипКнопкиКоманднойПанели.Разделитель);
			Кнопка = Кнопки.Добавить("ПользовательскоеПоле", ТипКнопкиКоманднойПанели.Действие, "Редактировать пользоват. поле ", Новый Действие("РедактироватьПользовательскоеПоле"));
			Кнопка.Картинка = БиблиотекаКартинок.ИзменитьЭлементСписка;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура РедактироватьПользовательскоеПоле(Кнопка)

	Для Каждого ПользовательскоеПоле Из КомпоновщикНастроекПользовательский.Настройки.ПользовательскиеПоля.Элементы Цикл
		Если ПользовательскоеПоле.ПутьКДанным = Строка(ЭлементыФормы.ТабличноеПолеДоступныеПоля.ТекущиеДанные.Поле) Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	ИмяФормы = ТиповыеОтчеты.ПолучитьИмяФормыРедактированияПользовательскогоПоля(ПользовательскоеПоле);
	
	Конструктор = Обработки.КонструкторПользовательскихПолей.Создать();
	Форма = Конструктор.ПолучитьФорму(ИмяФормы, ЭтаФорма);
	//Форма.ОтчетОбъект = ОтчетОбъект;
	Форма.КомпоновщикНастроек = КомпоновщикНастроекПользовательский;
	Форма.ПользовательскоеПоле = ПользовательскоеПоле;
	Форма.Открыть();

КонецПроцедуры

Процедура ТабличноеПолеОтборПередНачаломИзменения(Элемент, Отказ)
	
	ТекущаяСтрока = ПолучитьТекущуюСтрокуОтбора();
	Если ТипЗнч(ТекущаяСтрока) = Тип("ОтборКомпоновкиДанных") 
	 ИЛИ ТипЗнч(ТекущаяСтрока) = Тип("ГруппаЭлементовОтбораКомпоновкиДанных")
	 ИЛИ Не ПараметрыФормы.Свойство("ОбщийОтбор") Тогда
		Возврат
	КонецЕсли;
	
	Если ПараметрыФормы["ОбщийОтбор"][ТекущаяСтрока.ЛевоеЗначение] = Истина Тогда
		Вопрос("Поле входит в общий отбор!", РежимДиалогаВопрос.ОК);
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьТекущуюСтрокуОтбора()
	
	Если ЭлементыФормы.ПанельОтборПорядок.ТекущаяСтраница = ЭлементыФормы.ПанельОтборПорядок.Страницы.СтраницаБезПараметров Тогда
		ТекущаяСтрока = ЭлементыФормы.ТабличноеПолеОтборСтраницаБезПараметров.ТекущаяСтрока;
	Иначе
		ТекущаяСтрока = ЭлементыФормы.ТабличноеПолеОтборСтраницаПараметры.ТекущаяСтрока;
	КонецЕсли;
	
	Возврат ТекущаяСтрока;
	
КонецФункции

Процедура ТабличноеПолеОтборЛевоеЗначениеПриИзменении(Элемент)
	
	ТекущаяСтрока = ПолучитьТекущуюСтрокуОтбора();
	Если ТипЗнч(ТекущаяСтрока) = Тип("ОтборКомпоновкиДанных") 
	 ИЛИ ТипЗнч(ТекущаяСтрока) = Тип("ГруппаЭлементовОтбораКомпоновкиДанных")
	 ИЛИ Не ПараметрыФормы.Свойство("ОбщийОтбор") Тогда
		Возврат
	КонецЕсли;
	
	Если ПараметрыФормы["ОбщийОтбор"][ТекущаяСтрока.ЛевоеЗначение] = Истина Тогда
		Вопрос("Поле входит в общий отбор!", РежимДиалогаВопрос.ОК);
		ТекущаяСтрока.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("");
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ТабличноеПолеОтборПередУдалением(Элемент, Отказ)
	
	ТекущаяСтрока = ПолучитьТекущуюСтрокуОтбора();
	Если ТекущаяСтрока = Неопределено 
	 ИЛИ ТипЗнч(ТекущаяСтрока) = Тип("ОтборКомпоновкиДанных") 
	 ИЛИ ТипЗнч(ТекущаяСтрока) = Тип("ГруппаЭлементовОтбораКомпоновкиДанных")
	 ИЛИ Не ПараметрыФормы.Свойство("ОбщийОтбор") Тогда
		Возврат
	КонецЕсли;
		
	Если ПараметрыФормы["ОбщийОтбор"][ТекущаяСтрока.ЛевоеЗначение] = Истина Тогда
		Вопрос("Поле входит в общий отбор!", РежимДиалогаВопрос.ОК);
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОформлениеПоказателейПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	ОформлениеСтроки.Ячейки.ЦветМеньше.ЦветФона = ДанныеСтроки.ЦветМеньше;
	ОформлениеСтроки.Ячейки.ЦветРавно.ЦветФона = ДанныеСтроки.ЦветРавно;
	ОформлениеСтроки.Ячейки.ЦветБольше.ЦветФона = ДанныеСтроки.ЦветБольше;
	
КонецПроцедуры

Процедура ОформлениеПоказателейПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если Копирование Тогда
		Возврат;
	КонецЕсли;
	ТекущаяСтрока = ЭлементыФормы.ОформлениеПоказателей.ТекущаяСтрока;
	ТекущаяСтрока.ЦветМеньше = WebЦвета.Красный;
	ТекущаяСтрока.ЦветРавно = WebЦвета.Черный;
	ТекущаяСтрока.ЦветБольше = WebЦвета.Синий;
	
КонецПроцедуры

Процедура ФлажокОтрицательноеКраснымСтраницаОформлениеПоказателейПриИзменении(Элемент)
	
	УстановитьДоступностьОформленияПоказателей();
	
КонецПроцедуры

Процедура УстановитьДоступностьОформленияПоказателей()
	
	ЭлементыФормы.ОформлениеПоказателей.Доступность = Не ЭлементыФормы.ФлажокОтрицательноеКраснымСтраницаОформлениеПоказателей.Значение;
	
КонецПроцедуры

Процедура КоманднаяПанельЦветаДиаграммыОчистить(Кнопка)
	
	ЦветаДиаграммы.Очистить();
	
КонецПроцедуры

Процедура КоманднаяПанельЦветаДиаграммыОбновить(Кнопка)
	
	ОбновитьТаблицуЦветовСерий();

КонецПроцедуры

Процедура ОбновитьТаблицуЦветовСерий()
	
	Рисунки = ВладелецФормы.ЭлементыФормы.Результат.Рисунки;
	Для каждого Рисунок Из Рисунки Цикл
		Если ТипЗнч(Рисунок.Объект) <> Тип("Диаграмма") Тогда
			Продолжить;
		КонецЕсли;
		Серии = Рисунок.Объект.Серии;
		Для каждого Серия Из Серии Цикл
			СтруктураПоиска = Новый Структура("Текст", Серия.Текст);
			КоличествоСтрок = ЦветаДиаграммы.НайтиСтроки(СтруктураПоиска).Количество();
			Если КоличествоСтрок = 0 Тогда
				НоваяСтрока = ЦветаДиаграммы.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Серия);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбновитьКнопкиКонтекстногоМенюПоказатели(КоманднаяПанель)
	
	Действие  = Новый Действие("ДействиеВключитьВыключитьПапку");
	Для каждого ДоступноеПоле Из КомпоновщикНастроекПользовательский.Настройки.ДоступныеПоляВыбора.Элементы Цикл
		Если ДоступноеПоле.Папка 
		   И ДоступноеПоле.Поле <> Новый ПолеКомпоновкиДанных("SystemFields")
		   И ДоступноеПоле.Поле <> Новый ПолеКомпоновкиДанных("DataParameters")
		   И ДоступноеПоле.Поле <> Новый ПолеКомпоновкиДанных("UserFields")
		   И ДоступноеПоле.Поле <> Новый ПолеКомпоновкиДанных("Периоды") Тогда
			Кнопка = КоманднаяПанель.Кнопки.Добавить("Включить" + ДоступноеПоле.Поле, ТипКнопкиКоманднойПанели.Действие, "Включить """ + ДоступноеПоле.Заголовок + """", Действие);
			Кнопка.Картинка = БиблиотекаКартинок.УстановитьФлажкиПапка;
			Кнопка = КоманднаяПанель.Кнопки.Добавить("Выключить" + ДоступноеПоле.Поле, ТипКнопкиКоманднойПанели.Действие, "Выключить """ + ДоступноеПоле.Заголовок + """", Действие);
			Кнопка.Картинка = БиблиотекаКартинок.СнятьФлажкиПапка;
		КонецЕсли;
	КонецЦикла;
	
	Кнопка = КоманднаяПанель.Кнопки.Добавить("Разделитель10", ТипКнопкиКоманднойПанели.Разделитель);
	Действие  = Новый Действие("ДействиеУстановитьПоУровню");
	Кнопка = КоманднаяПанель.Кнопки.Добавить("УстановитьПоУровнюГоризонтально", ТипКнопкиКоманднойПанели.Действие, "Установить по уровню ""Горизонтально""", Действие);
	Кнопка = КоманднаяПанель.Кнопки.Добавить("УстановитьПоУровнюВертикально", ТипКнопкиКоманднойПанели.Действие, "Установить по уровню ""Вертикально""", Действие);
	
КонецПроцедуры

Процедура ДействиеВключитьВыключитьПапку(Кнопка)
	
	Если Лев(Кнопка.Имя, 8) = "Включить" Тогда
		Использование = Истина;
		ПутьКДаннымПапки = Сред(Кнопка.Имя, 9);
	ИначеЕсли Лев(Кнопка.Имя, 9) = "Выключить" Тогда
		Использование = Ложь;
		ПутьКДаннымПапки = Сред(Кнопка.Имя, 10);
	КонецЕсли;	
	
	ВыбранныеПоля = ТиповыеОтчеты.ПолучитьВыбранныеПоля(КомпоновщикНастроекПользовательский);
	Для каждого ВыбранноеПоле Из ВыбранныеПоля Цикл
		Если Лев(Строка(ВыбранноеПоле.Поле), СтрДлина(ПутьКДаннымПапки)) = ПутьКДаннымПапки Тогда
			ВыбранноеПоле.Использование = Использование;
		КонецЕсли;
	КонецЦикла;
			
КонецПроцедуры

Процедура ТабличноеПолеДоступныеПоляПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Для каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		ДанныеСтроки = ОформлениеСтроки.ДанныеСтроки;
		Если ДанныеСтроки.Папка Тогда
			ПапкаСРесурсами = ДанныеСтроки.Элементы.Количество() > 0;
			Для каждого ДоступноеПоле Из ДанныеСтроки.Элементы Цикл
				Если Не ДоступноеПоле.Ресурс Тогда
					ПапкаСРесурсами = Ложь;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если ПапкаСРесурсами  Тогда
				ОформлениеСтроки.Ячейки.Заголовок.Картинка = БиблиотекаКартинок.ПапкаСРесурсами;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ВыбранныеПоляСтраницаТаблицаПриАктивизацииСтроки(Элемент)
	
	ОбновитьКонтекстноеМенюПоказателиУстановитьРасположение(Элемент);
	
КонецПроцедуры

Процедура ОбновитьКонтекстноеМенюПоказателиУстановитьРасположение(Элемент)
	
	ТекущаяСтрока = Элемент.ТекущиеДанные;
	Если ТипЗнч(ТекущаяСтрока) = Тип("ГруппаВыбранныхПолейКомпоновкиДанных") Тогда
		Папка = Истина;
	Иначе
		Папка = Ложь;
	КонецЕсли;
	Если ПредставлениеЭлементаОтчета = Перечисления.ПредставленияЭлементовОтчетов.Таблица Тогда
		КоманднаяПанель = ЭлементыФормы.КоманднаяПанельСтраницаТаблицаПоказателиКонтекстноеМеню;
	Иначе
		КоманднаяПанель = ЭлементыФормы.КоманднаяПанельСтраницаНеТаблицаПоказателиКонтекстноеМеню;
	КонецЕсли;
	
	КоманднаяПанель.Кнопки.УстановитьПоУровнюГоризонтально.Доступность = Папка;
	КоманднаяПанель.Кнопки.УстановитьПоУровнюВертикально.Доступность = Папка;
	
КонецПроцедуры
	
Процедура ДействиеУстановитьПоУровню(Кнопка)
	
	Если Кнопка.Имя = "УстановитьПоУровнюГоризонтально" Тогда
		Расположение = РасположениеПоляКомпоновкиДанных.Горизонтально;
	Иначе
		Расположение = РасположениеПоляКомпоновкиДанных.Вертикально;
	КонецЕсли;
	
	Если ПредставлениеЭлементаОтчета = Перечисления.ПредставленияЭлементовОтчетов.Таблица Тогда
		Элемент = ЭлементыФормы.ВыбранныеПоляСтраницаТаблица;
	Иначе
		Элемент = ЭлементыФормы.ВыбранныеПоляСтраницаНеТаблица;
	КонецЕсли;
	
	ТекущаяСтрока = Элемент.ТекущиеДанные;
	Уровень = ПолучитьУровеньВыбранногоПоля(ТекущаяСтрока);
	
	Для каждого Группа Из ТиповыеОтчеты.ПолучитьВыбранныеПоля(КомпоновщикНастроекПользовательский, Истина) Цикл
		Если ПолучитьУровеньВыбранногоПоля(Группа) = Уровень Тогда
			Группа.Расположение = Расположение;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьУровеньВыбранногоПоля(Знач ВыбранноеПоле) Экспорт
	
	Родитель = ВыбранноеПоле;
	Уровень = 0;
	Пока Родитель <> Неопределено Цикл
		Родитель = Родитель.Родитель;
		Уровень = Уровень + 1;
	КонецЦикла;
	
	Возврат Уровень;
	
КонецФункции

Процедура ТабличноеПолеГруппировкиСтрокСтраницаНеТаблицаПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если Элемент.ТекущаяСтрока.Поле =  Новый ПолеКомпоновкиДанных("") И НЕ ОтменаРедактирования тогда
		Предупреждение("Колонка поле не заполнена.");
		Отказ = истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ТабличноеПолеГруппировкиКолонокСтраницаНеТаблицаПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если Элемент.ТекущаяСтрока.Поле =  Новый ПолеКомпоновкиДанных("") И НЕ ОтменаРедактирования тогда
		Предупреждение("Колонка поле не заполнена.");
		Отказ = истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ТабличноеПолеГруппировкиСтрокСтраницаТаблицаПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если Элемент.ТекущаяСтрока.Поле =  Новый ПолеКомпоновкиДанных("") И НЕ ОтменаРедактирования тогда
		Предупреждение("Колонка поле не заполнена.");
		Отказ = истина;
	КонецЕсли;
	
КонецПроцедуры


//////////////////////////////////////////////////////////////
// РАСШИРЕННАЯ НАСТРОЙКА

Процедура СделатьПоляГруппировкиНедоступными()
	
	ЭлементыФормы.ПанельПолейГруппировки.ТекущаяСтраница = ЭлементыФормы.ПанельПолейГруппировки.Страницы.НедоступныеНастройки;
	УстановитьКартинкуЗакладкиПолейГруппировки(Ложь);
	
КонецПроцедуры

Процедура УстановитьКартинкуЗакладкиПолейГруппировки(Доступно)
	
	Если Не Доступно Тогда
	
		ЭлементыФормы.ПанельНастройкиЭлемента.Страницы.ПоляГруппировки.КартинкаЗаголовка = 
			ЭлементыФормы.КартинкаПоляГруппировкиНедоступные.Картинка;
			
	Иначе
	
		ЭлементыФормы.ПанельНастройкиЭлемента.Страницы.ПоляГруппировки.КартинкаЗаголовка = 
			ЭлементыФормы.КартинкаПоляГруппировки.Картинка;
			
	КонецЕсли;
	
КонецПроцедуры

Функция ПроверитьЛокальныеВыбранныеПоля(Элемент)
	
	Если Элемент.Выбор.Элементы.Количество() > 1 Тогда
		
		Возврат Истина;
		
	КонецЕсли;
	
	Если Элемент.Выбор.Элементы.Количество() = 0 Тогда
		
		Если ТипЗнч(Элемент) = Тип("НастройкиКомпоновкиДанных") ИЛИ
			ТипЗнч(Элемент) = Тип("НастройкиВложенногоОбъектаКомпоновкиДанных") ИЛИ
			ТипЗнч(Элемент) = Тип("ТаблицаКомпоновкиДанных") Тогда
			
			Возврат Ложь;
			
		КонецЕсли;
		
		Возврат Истина;
		
	КонецЕсли;
			
	Если Элемент.Выбор.Элементы.Количество() = 1 Тогда
		
		Если ТипЗнч(Элемент.Выбор.Элементы[0]) = Тип("АвтоВыбранноеПолеКомпоновкиДанных") И 
			Элемент.Выбор.Элементы[0].Использование Тогда
			
			Возврат Ложь;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Процедура ПроверитьИВключитьЛокальныеВыбранныеПоля(Строка)
	
	Если ПроверитьЛокальныеВыбранныеПоля(ЭлементыФормы.Структура.ТекущаяСтрока) Тогда
				
		ЛокальныеВыбранныеПоля = Истина;
		ЭлементыФормы.ПанельВыбранныхПолей.ТекущаяСтраница = 
			ЭлементыФормы.ПанельВыбранныхПолей.Страницы.Настройки;
			
	Иначе
			
		ЛокальныеВыбранныеПоля = Ложь;
		ЭлементыФормы.ПанельВыбранныхПолей.ТекущаяСтраница = 
			ЭлементыФормы.ПанельВыбранныхПолей.Страницы.ОтключенныеНастройки;
			
	КонецЕсли;
		
	УстановитьКартинкуЗакладкиВыбранныхПолей(Истина, ЛокальныеВыбранныеПоля);
			
	ЭлементыФормы.ЛокальныеВыбранныеПоля.Доступность = Истина;
	ЭлементыФормы.ЛокальныеВыбранныеПоля.Видимость = Истина;
		
КонецПроцедуры

Процедура СделатьВыбранныеПоляНедоступными()
	
		ЭлементыФормы.ПанельВыбранныхПолей.ТекущаяСтраница = ЭлементыФормы.ПанельВыбранныхПолей.Страницы.НедоступныеНастройки;
		ЭлементыФормы.ЛокальныеВыбранныеПоля.Доступность = Ложь;
		ЭлементыФормы.ЛокальныеВыбранныеПоля.Видимость = Истина;
		ЛокальныеВыбранныеПоля = Ложь;
		УстановитьКартинкуЗакладкиВыбранныхПолей(Ложь, Ложь);
		
КонецПроцедуры
		
Процедура УстановитьКартинкуЗакладкиВыбранныхПолей(Доступно, Локально)
	
	Если Не Доступно Тогда
	
		ЭлементыФормы.ПанельНастройкиЭлемента.Страницы.Выбор.КартинкаЗаголовка = 
			ЭлементыФормы.КартинкаВыборНедоступный.Картинка;
			
	ИначеЕсли Локально Тогда
		
		ЭлементыФормы.ПанельНастройкиЭлемента.Страницы.Выбор.КартинкаЗаголовка = 
			ЭлементыФормы.КартинкаВыборЛокальный.Картинка;
			
	Иначе
	
		ЭлементыФормы.ПанельНастройкиЭлемента.Страницы.Выбор.КартинкаЗаголовка = 
			ЭлементыФормы.КартинкаВыбор.Картинка;
			
	КонецЕсли;
	
КонецПроцедуры
	
Функция ПроверитьЛокальныйОтбор(Элемент)
		
	// Если есть хоть один элемент
	
	Возврат Элемент.Отбор.Элементы.Количество() <> 0;
	
КонецФункции

Процедура ПроверитьИВключитьЛокальныйОтбор(Строка)
	
	Если ПроверитьЛокальныйОтбор(ЭлементыФормы.Структура.ТекущаяСтрока) Тогда
				
		ЛокальныйОтбор = Истина;
		ЭлементыФормы.ПанельОтбора.ТекущаяСтраница = 
			ЭлементыФормы.ПанельОтбора.Страницы.Настройки;
			
	Иначе
			
		ЛокальныйОтбор = Ложь;
		ЭлементыФормы.ПанельОтбора.ТекущаяСтраница = 
			ЭлементыФормы.ПанельОтбора.Страницы.ОтключенныеНастройки;
			
	КонецЕсли;
	УстановитьКартинкуЗакладкиОтбора(Истина, ЛокальныйОтбор);
			
	ЭлементыФормы.ЛокальныйОтбор.Доступность = Истина;
	ЭлементыФормы.ЛокальныйОтбор.Видимость = Истина;
		
КонецПроцедуры

Процедура СделатьОтборНедоступным()
	
	ЭлементыФормы.ПанельОтбора.ТекущаяСтраница = ЭлементыФормы.ПанельОтбора.Страницы.НедоступныеНастройки;
	ЭлементыФормы.ЛокальныйОтбор.Доступность = Ложь;
	ЭлементыФормы.ЛокальныйОтбор.Видимость = Истина;
	ЛокальныйОтбор = Ложь;
	УстановитьКартинкуЗакладкиОтбора(Ложь, Ложь);
		
КонецПроцедуры

Процедура УстановитьКартинкуЗакладкиОтбора(Доступно, Локально)
	
	Если Не Доступно Тогда
		
		ЭлементыФормы.ПанельНастройкиЭлемента.Страницы.Отбор.КартинкаЗаголовка = 
			ЭлементыФормы.КартинкаОтборНедоступный.Картинка;
		
	ИначеЕсли Локально Тогда
		
		ЭлементыФормы.ПанельНастройкиЭлемента.Страницы.Отбор.КартинкаЗаголовка = 
			ЭлементыФормы.КартинкаОтборЛокальный.Картинка;
		
	Иначе
		
		ЭлементыФормы.ПанельНастройкиЭлемента.Страницы.Отбор.КартинкаЗаголовка = 
			ЭлементыФормы.КартинкаОтбор.Картинка;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПроверитьЛокальныйПорядок(Элемент)
	
	Если Элемент.Порядок.Элементы.Количество() > 1 Тогда
		
		Возврат Истина;
		
	КонецЕсли;
	
	Если Элемент.Порядок.Элементы.Количество() = 0 Тогда
		
		Если ТипЗнч(Элемент) = Тип("НастройкиКомпоновкиДанных") ИЛИ
			ТипЗнч(Элемент) = Тип("НастройкиВложенногоОбъектаКомпоновкиДанных") Тогда
			
			Возврат Ложь;
			
		КонецЕсли;
		
		Возврат Истина;
		
	КонецЕсли;
			
	Если Элемент.Порядок.Элементы.Количество() = 1 Тогда
		
		Если ТипЗнч(Элемент.Порядок.Элементы[0]) = Тип("АвтоЭлементПорядкаКомпоновкиДанных") И 
			Элемент.Порядок.Элементы[0].Использование Тогда
			
			Возврат Ложь;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Процедура ПроверитьИВключитьЛокальныйПорядок(Строка)
	
	Если ПроверитьЛокальныйПорядок(ЭлементыФормы.Структура.ТекущаяСтрока) Тогда
				
		ЛокальныйПорядок = Истина;
		ЭлементыФормы.ПанельПорядка.ТекущаяСтраница = 
			ЭлементыФормы.ПанельПорядка.Страницы.Настройки;
			
	Иначе
			
		ЛокальныйПорядок = Ложь;
		ЭлементыФормы.ПанельПорядка.ТекущаяСтраница = 
			ЭлементыФормы.ПанельПорядка.Страницы.ОтключенныеНастройки;
			
	КонецЕсли;
	УстановитьКартинкуЗакладкиПорядка(Истина, ЛокальныйПорядок);
			
	ЭлементыФормы.ЛокальныйПорядок.Доступность = Истина;
	ЭлементыФормы.ЛокальныйПорядок.Видимость = Истина;
		
КонецПроцедуры

Процедура СделатьПорядокНедоступным()
	
	ЭлементыФормы.ПанельПорядка.ТекущаяСтраница = ЭлементыФормы.ПанельПорядка.Страницы.НедоступныеНастройки;
	ЭлементыФормы.ЛокальныйПорядок.Доступность = Ложь;
	ЭлементыФормы.ЛокальныйПорядок.Видимость = Истина;
	ЛокальныйПорядок = Ложь;
	УстановитьКартинкуЗакладкиПорядка(Ложь, Ложь);
		
КонецПроцедуры

Процедура УстановитьКартинкуЗакладкиПорядка(Доступно, Локально)
	
	Если Не Доступно Тогда
		
		ЭлементыФормы.ПанельНастройкиЭлемента.Страницы.Порядок.КартинкаЗаголовка = 
			ЭлементыФормы.КартинкаПорядокНедоступный.Картинка;
			
	ИначеЕсли Локально Тогда
		
		ЭлементыФормы.ПанельНастройкиЭлемента.Страницы.Порядок.КартинкаЗаголовка = 
			ЭлементыФормы.КартинкаПорядокЛокальный.Картинка;
			
	Иначе
		
		ЭлементыФормы.ПанельНастройкиЭлемента.Страницы.Порядок.КартинкаЗаголовка = 
			ЭлементыФормы.КартинкаПорядок.Картинка;
			
	КонецЕсли;
	
КонецПроцедуры

Функция ПроверитьЛокальноеУсловноеОформление(Элемент)
	
	// Если есть хоть один элемент
	Возврат Элемент.УсловноеОформление.Элементы.Количество() <> 0;
	
КонецФункции

Процедура ПроверитьИВключитьЛокальноеУсловноеОформление(Строка)
	
	Если ПроверитьЛокальноеУсловноеОформление(ЭлементыФормы.Структура.ТекущаяСтрока) Тогда
				
		ЛокальноеУсловноеОформление = Истина;
		ЭлементыФормы.ПанельУсловногоОформления.ТекущаяСтраница = 
			ЭлементыФормы.ПанельУсловногоОформления.Страницы.Настройки;
			
	Иначе
			
		ЛокальноеУсловноеОформление = Ложь;
		ЭлементыФормы.ПанельУсловногоОформления.ТекущаяСтраница = 
			ЭлементыФормы.ПанельУсловногоОформления.Страницы.ОтключенныеНастройки;
			
	КонецЕсли;
	УстановитьКартинкуЗакладкиУсловногоОформления(Истина, ЛокальноеУсловноеОформление);
			
	ЭлементыФормы.ЛокальноеУсловноеОформление.Доступность = Истина;
	ЭлементыФормы.ЛокальноеУсловноеОформление.Видимость = Истина;
		
КонецПроцедуры

Процедура СделатьУсловноеОформлениеНедоступным()
	
	ЭлементыФормы.ПанельУсловногоОформления.ТекущаяСтраница = ЭлементыФормы.ПанельУсловногоОформления.Страницы.НедоступныеНастройки;
	ЭлементыФормы.ЛокальноеУсловноеОформление.Доступность = Ложь;
	ЭлементыФормы.ЛокальноеУсловноеОформление.Видимость = Истина;
	ЛокальноеУсловноеОформление = Ложь;
	УстановитьКартинкуЗакладкиУсловногоОформления(Ложь, Ложь);
		
КонецПроцедуры

Процедура УстановитьКартинкуЗакладкиУсловногоОформления(Доступно, Локально)
	
	Если Не Доступно Тогда
		
		ЭлементыФормы.ПанельНастройкиЭлемента.Страницы.УсловноеОформление.КартинкаЗаголовка = 
			ЭлементыФормы.КартинкаУсловноеОформлениеНедоступное.Картинка;
			
	ИначеЕсли Локально Тогда
		
		ЭлементыФормы.ПанельНастройкиЭлемента.Страницы.УсловноеОформление.КартинкаЗаголовка = 
			ЭлементыФормы.КартинкаУсловноеОформлениеЛокальное.Картинка;
	Иначе
		
		ЭлементыФормы.ПанельНастройкиЭлемента.Страницы.УсловноеОформление.КартинкаЗаголовка = 
			ЭлементыФормы.КартинкаУсловноеОформление.Картинка;
			
	КонецЕсли;
	
КонецПроцедуры

Функция ПроверитьЛокальныеПараметрыВывода(Элемент)
	
	// Локальные если есть хоть один используемый параметр. Использование не распространяется на дочерние.
	
	Элементы = Элемент;
	
	Если ТипЗнч(Элемент) = Тип("НастройкиКомпоновкиДанных") ИЛИ
		ТипЗнч(Элемент) = Тип("НастройкиВложенногоОбъектаКомпоновкиДанных") ИЛИ
		ТипЗнч(Элемент) = Тип("ГруппировкаКомпоновкиДанных") ИЛИ
		ТипЗнч(Элемент) = Тип("ГруппировкаТаблицыКомпоновкиДанных") ИЛИ
		ТипЗнч(Элемент) = Тип("ГруппировкаДиаграммыКомпоновкиДанных") ИЛИ
		ТипЗнч(Элемент) = Тип("ТаблицаКомпоновкиДанных") ИЛИ
		ТипЗнч(Элемент) = Тип("ДиаграммаКомпоновкиДанных") Тогда
		
		Элементы = Элемент.ПараметрыВывода.Элементы;
		
	КонецЕсли;
		
	Для Каждого ТекЭлемент Из Элементы Цикл
			
		Если ТекЭлемент.Использование Тогда
			
			Возврат Истина;
			
		КонецЕсли;
		
		Если ПроверитьЛокальныеПараметрыВывода(ТекЭлемент.ЗначенияВложенныхПараметров) Тогда
			
			Возврат Истина;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

Процедура ПроверитьИВключитьЛокальныеПараметрыВывода(Строка)
	
	Если ПроверитьЛокальныеПараметрыВывода(ЭлементыФормы.Структура.ТекущаяСтрока) Тогда
				
		ЛокальныеПараметрыВывода = Истина;
		ЭлементыФормы.ПанельПараметровВывода.ТекущаяСтраница = 
			ЭлементыФормы.ПанельПараметровВывода.Страницы.Настройки;
			
	Иначе
			
		ЛокальныеПараметрыВывода = Ложь;
		ЭлементыФормы.ПанельПараметровВывода.ТекущаяСтраница = 
			ЭлементыФормы.ПанельПараметровВывода.Страницы.ОтключенныеНастройки;
			
	КонецЕсли;
	УстановитьКартинкуЗакладкиПараметровВывода(Истина, ЛокальныеПараметрыВывода);
			
	ЭлементыФормы.ЛокальныеПараметрыВывода.Доступность = Истина;
	ЭлементыФормы.ЛокальныеПараметрыВывода.Видимость = Истина;
		
КонецПроцедуры

Процедура СделатьПараметрыВыводаНедоступными()
	
	ЭлементыФормы.ПанельПараметровВывода.ТекущаяСтраница = ЭлементыФормы.ПанельПараметровВывода.Страницы.НедоступныеНастройки;
	ЭлементыФормы.ЛокальныеПараметрыВывода.Доступность = Ложь;
	ЭлементыФормы.ЛокальныеПараметрыВывода.Видимость = Истина;
	ЛокальныеПараметрыВывода = Ложь;
	УстановитьКартинкуЗакладкиПараметровВывода(Ложь, Ложь);
	
КонецПроцедуры

Процедура УстановитьКартинкуЗакладкиПараметровВывода(Доступно, Локально)
	
	Если Не Доступно Тогда
			
		ЭлементыФормы.ПанельНастройкиЭлемента.Страницы.ПараметрыВывода.КартинкаЗаголовка = 
			ЭлементыФормы.КартинкаПараметрыВыводаНедоступные.Картинка;
		
	ИначеЕсли Локально Тогда
		
		ЭлементыФормы.ПанельНастройкиЭлемента.Страницы.ПараметрыВывода.КартинкаЗаголовка = 
			ЭлементыФормы.КартинкаПараметрыВыводаЛокальные.Картинка;
		
	Иначе
			
		ЭлементыФормы.ПанельНастройкиЭлемента.Страницы.ПараметрыВывода.КартинкаЗаголовка = 
			ЭлементыФормы.КартинкаПараметрыВывода.Картинка;
		
	КонецЕсли;
	
КонецПроцедуры
		
Процедура УстановитьДоступностьНастроек()
	
	Если ТипЗнч(ЭлементыФормы.Структура.ТекущаяСтрока) = Тип("КоллекцияЭлементовСтруктурыДиаграммыКомпоновкиДанных") ИЛИ
		 ТипЗнч(ЭлементыФормы.Структура.ТекущаяСтрока) = Тип("КоллекцияЭлементовСтруктурыТаблицыКомпоновкиДанных") Тогда
		 // Для строк и т.п. не доступно ничего
		 
		СделатьПоляГруппировкиНедоступными();
		СделатьВыбранныеПоляНедоступными();
		СделатьОтборНедоступным();
		СделатьПорядокНедоступным();
		СделатьУсловноеОформлениеНедоступным();
		СделатьПараметрыВыводаНедоступными();
		
	КонецЕсли;
	
	Если ТипЗнч(ЭлементыФормы.Структура.ТекущаяСтрока) = Тип("НастройкиКомпоновкиДанных") ИЛИ
		ТипЗнч(ЭлементыФормы.Структура.ТекущаяСтрока) = Тип("НастройкиВложенногоОбъектаКомпоновкиДанных") Тогда
		
		СделатьПоляГруппировкиНедоступными();
		
		ЭлементыФормы.ПанельНастройкиЭлемента.Страницы.ПараметрыДанных.Видимость            = истина;
		ЭлементыФормы.ПанельНастройкиЭлемента.Страницы.ПользовательскиеПоля.Видимость = истина;
		
		ЭлементыФормы.ПанельВыбранныхПолей.ТекущаяСтраница = ЭлементыФормы.ПанельВыбранныхПолей.Страницы.Настройки;
		ЭлементыФормы.ЛокальныеВыбранныеПоля.Доступность = Ложь;
		ЭлементыФормы.ЛокальныеВыбранныеПоля.Видимость = Ложь;
		ЛокальныеВыбранныеПоля = Истина;
		УстановитьКартинкуЗакладкиВыбранныхПолей(Истина, Ложь);
		
		ЭлементыФормы.ПанельОтбора.ТекущаяСтраница = ЭлементыФормы.ПанельОтбора.Страницы.Настройки;
		ЭлементыФормы.ЛокальныйОтбор.Доступность = Ложь;
		ЭлементыФормы.ЛокальныйОтбор.Видимость = Ложь;
		ЛокальныйОтбор = Истина;
		УстановитьКартинкуЗакладкиОтбора(Истина, Ложь);
		
		ЭлементыФормы.ПанельПорядка.ТекущаяСтраница = ЭлементыФормы.ПанельПорядка.Страницы.Настройки;
		ЭлементыФормы.ЛокальныйПорядок.Доступность = Ложь;
		ЭлементыФормы.ЛокальныйПорядок.Видимость = Ложь;
		ЛокальныйПорядок = Истина;
		УстановитьКартинкуЗакладкиПорядка(Истина, Ложь);
		
		ЭлементыФормы.ПанельУсловногоОформления.ТекущаяСтраница = ЭлементыФормы.ПанельУсловногоОформления.Страницы.Настройки;
		ЭлементыФормы.ЛокальноеУсловноеОформление.Доступность = Ложь;
		ЭлементыФормы.ЛокальноеУсловноеОформление.Видимость = Ложь;
		ЛокальноеУсловноеОформление = Истина;
		УстановитьКартинкуЗакладкиУсловногоОформления(Истина, Ложь);
		
		ЭлементыФормы.ПанельПараметровВывода.ТекущаяСтраница = ЭлементыФормы.ПанельПараметровВывода.Страницы.Настройки;
		ЭлементыФормы.ЛокальныеПараметрыВывода.Доступность = Ложь;
		ЭлементыФормы.ЛокальныеПараметрыВывода.Видимость = Ложь;
		ЛокальныеПараметрыВывода = Истина;
		УстановитьКартинкуЗакладкиПараметровВывода(Истина, Ложь);
	Иначе
		ЭлементыФормы.ПанельНастройкиЭлемента.Страницы.ПараметрыДанных.Видимость            = ложь;
		ЭлементыФормы.ПанельНастройкиЭлемента.Страницы.ПользовательскиеПоля.Видимость = ложь;
	КонецЕсли;
			
	Если ТипЗнч(ЭлементыФормы.Структура.ТекущаяСтрока) = Тип("ГруппировкаКомпоновкиДанных") ИЛИ
		ТипЗнч(ЭлементыФормы.Структура.ТекущаяСтрока) = Тип("ГруппировкаТаблицыКомпоновкиДанных") ИЛИ
		ТипЗнч(ЭлементыФормы.Структура.ТекущаяСтрока) = Тип("ГруппировкаДиаграммыКомпоновкиДанных") Тогда
		 
		ЭлементыФормы.ПанельПолейГруппировки.ТекущаяСтраница = ЭлементыФормы.ПанельПолейГруппировки.Страницы.Настройки;
		УстановитьКартинкуЗакладкиПолейГруппировки(Истина);
			
		ПроверитьИВключитьЛокальныеВыбранныеПоля(ЭлементыФормы.Структура.ТекущаяСтрока);
		ПроверитьИВключитьЛокальныйОтбор(ЭлементыФормы.Структура.ТекущаяСтрока);
		ПроверитьИВключитьЛокальныйПорядок(ЭлементыФормы.Структура.ТекущаяСтрока);
		ПроверитьИВключитьЛокальноеУсловноеОформление(ЭлементыФормы.Структура.ТекущаяСтрока);
		ПроверитьИВключитьЛокальныеПараметрыВывода(ЭлементыФормы.Структура.ТекущаяСтрока);

		
	КонецЕсли;
	
	
	Если ТипЗнч(ЭлементыФормы.Структура.ТекущаяСтрока) = Тип("ТаблицаКомпоновкиДанных") ИЛИ
		ТипЗнч(ЭлементыФормы.Структура.ТекущаяСтрока) = Тип("ДиаграммаКомпоновкиДанных") Тогда
		
		СделатьПоляГруппировкиНедоступными();
		ПроверитьИВключитьЛокальныеВыбранныеПоля(ЭлементыФормы.Структура.ТекущаяСтрока);
		СделатьОтборНедоступным();
		СделатьПорядокНедоступным();
		ПроверитьИВключитьЛокальноеУсловноеОформление(ЭлементыФормы.Структура.ТекущаяСтрока);
		ПроверитьИВключитьЛокальныеПараметрыВывода(ЭлементыФормы.Структура.ТекущаяСтрока);
		
	КонецЕсли;
	
	УстановитьРежимРедактированияТекущихНастроек();
	
КонецПроцедуры

Процедура УстановитьРежимРедактированияТекущихНастроек()
	
	Если ЭлементыФормы.ПанельНастройкиЭлемента.ТекущаяСтраница = 
		ЭлементыФормы.ПанельНастройкиЭлемента.Страницы.ПараметрыДанных ИЛИ 
		ЭлементыФормы.ПанельНастройкиЭлемента.ТекущаяСтраница = 
		ЭлементыФормы.ПанельНастройкиЭлемента.Страницы.ПользовательскиеПоля Тогда
		
		ЭлементыФормы.Структура.ПодробнаяНастройка = Ложь;
		
	Иначе
		
		ЭлементыФормы.Структура.ПодробнаяНастройка = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СкрытьНеИспользуемыеУзелИДочерниеКоллекция(КоллекцияУзлов)
	
	Для Каждого Узел Из КоллекцияУзлов Цикл
		
		СкрытьНеИспользуемыеУзелИДочерние(Узел);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СкрытьНеИспользуемыеУзелИДочерние(Узел)
	
	Если ТипЗнч(Узел) = Тип("НастройкиКомпоновкиДанных") Тогда
		
		ЭлементыФормы.Структура.Развернуть(Узел);
		СкрытьНеИспользуемыеУзелИДочерниеКоллекция(Узел.Структура);
		
	ИначеЕсли ТипЗнч(Узел) = Тип("НастройкиВложенногоОбъектаКомпоновкиДанных") Тогда
		
		Если Не Узел.Использование Тогда
			
			ЭлементыФормы.Структура.Свернуть(Узел);
			
		Иначе
			
			ЭлементыФормы.Структура.Развернуть(Узел);
			
		КонецЕсли;
		
		СкрытьНеИспользуемыеУзелИДочерниеКоллекция(Узел.Настройки.Структура);

		
	ИначеЕсли ТипЗнч(Узел) = Тип("ТаблицаКомпоновкиДанных") Тогда
		
		ЭлементыФормы.Структура.Развернуть(Узел.Строки);
		СкрытьНеИспользуемыеУзелИДочерниеКоллекция(Узел.Строки);
		ЭлементыФормы.Структура.Развернуть(Узел.Колонки);
		СкрытьНеИспользуемыеУзелИДочерниеКоллекция(Узел.Колонки);
		
		Если Не Узел.Использование Тогда
			
			ЭлементыФормы.Структура.Свернуть(Узел);
			
		Иначе
			
			ЭлементыФормы.Структура.Развернуть(Узел);
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Узел) = Тип("ГруппировкаКомпоновкиДанных") ИЛИ
		ТипЗнч(Узел) = Тип("ГруппировкаТаблицыКомпоновкиДанных") ИЛИ
		ТипЗнч(Узел) = Тип("ГруппировкаДиаграммыКомпоновкиДанных") Тогда
		
		СкрытьНеИспользуемыеУзелИДочерниеКоллекция(Узел.Структура);
		
		Если Не Узел.Использование Тогда
			
			ЭлементыФормы.Структура.Свернуть(Узел);
			
		Иначе
			
			ЭлементыФормы.Структура.Развернуть(Узел);
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Узел) = Тип("ДиаграммаКомпоновкиДанных") Тогда
		
		ЭлементыФормы.Структура.Развернуть(Узел.Серии);
		СкрытьНеИспользуемыеУзелИДочерниеКоллекция(Узел.Серии);
		ЭлементыФормы.Структура.Развернуть(Узел.Точки);
		СкрытьНеИспользуемыеУзелИДочерниеКоллекция(Узел.Точки);
		
		Если Не Узел.Использование Тогда
			
			ЭлементыФормы.Структура.Свернуть(Узел);
			
		Иначе
			
			ЭлементыФормы.Структура.Развернуть(Узел);
			
		КонецЕсли;
		
	КонецЕсли;
		
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	Если ТиповыеОтчеты.ЭтоСтараяВерсияОтчета(ОтчетОбъект) Тогда
		Если ЭлементыФормы.Найти("ДополнительнаяНастройка") <> Неопределено Тогда
			ЭлементыФормы.ДополнительнаяНастройка.Видимость = Ложь;
		КонецЕсли; 
	КонецЕсли;
			
	ПереключитьСложностьНастройки(Истина);
	ОбновлениеОтображения();
	СкрытьНеИспользуемыеУзелИДочерние(КомпоновщикНастроек.Настройки);
	
КонецПроцедуры

Процедура СтруктураПриАктивизацииЯчейки(Элемент)
	
	Перем ВыбраннаяСтраница;
	
	Если ЭлементыФормы.Структура.ТекущаяКолонка = ЭлементыФормы.Структура.Колонки.Выбор Тогда
		
		ВыбраннаяСтраница = ЭлементыФормы.ПанельНастройкиЭлемента.Страницы.Выбор;
		
	ИначеЕсли ЭлементыФормы.Структура.ТекущаяКолонка = ЭлементыФормы.Структура.Колонки.Отбор Тогда
		
		ВыбраннаяСтраница = ЭлементыФормы.ПанельНастройкиЭлемента.Страницы.Отбор;
		
	ИначеЕсли ЭлементыФормы.Структура.ТекущаяКолонка = ЭлементыФормы.Структура.Колонки.Порядок Тогда
		
		ВыбраннаяСтраница = ЭлементыФормы.ПанельНастройкиЭлемента.Страницы.Порядок;
		
	ИначеЕсли ЭлементыФормы.Структура.ТекущаяКолонка = ЭлементыФормы.Структура.Колонки.УсловноеОформление Тогда
		
		ВыбраннаяСтраница = ЭлементыФормы.ПанельНастройкиЭлемента.Страницы.УсловноеОформление;
		
	ИначеЕсли ЭлементыФормы.Структура.ТекущаяКолонка = ЭлементыФормы.Структура.Колонки.ПараметрыВывода Тогда
		
		ВыбраннаяСтраница = ЭлементыФормы.ПанельНастройкиЭлемента.Страницы.ПараметрыВывода;
		
	КонецЕсли;
	
	Если ВыбраннаяСтраница <> Неопределено Тогда
		
		ЭлементыФормы.ПанельНастройкиЭлемента.ТекущаяСтраница = ВыбраннаяСтраница;
		
	КонецЕсли;
	
	ВключитьТекстТабличныхПолей();
			
КонецПроцедуры

Процедура ВключитьТекстТабличныхПолей()

	Если СтрокаИспользуется(ЭлементыФормы.Структура.ТекущаяСтрока) Тогда
			
		Цвет = Новый Цвет();
			
	Иначе
			
		Цвет = НеИспользуемыйЦвет;
			
	КонецЕсли;

	ЭлементыФормы.ПараметрыДанных.ЦветТекстаПоля = Цвет;
	ЭлементыФормы.ПараметрыВывода.ЦветТекстаПоля = Цвет;
	ЭлементыФормы.Выбор.ЦветТекстаПоля = Цвет;
	ЭлементыФормы.Отбор.ЦветТекстаПоля = Цвет;
	ЭлементыФормы.Порядок.ЦветТекстаПоля = Цвет;
	ЭлементыФормы.ПользовательскиеПоля.ЦветТекстаПоля = Цвет;
	ЭлементыФормы.ПоляГруппировки.ЦветТекстаПоля = Цвет;
	ЭлементыФормы.УсловноеОформление.ЦветТекстаПоля = Цвет;
	ЭлементыФормы.ДоступныеПоляВыбора.ЦветТекстаПоля = Цвет;
	ЭлементыФормы.ДоступныеПоляОтбора.ЦветТекстаПоля = Цвет;
	ЭлементыФормы.ДоступныеПоляПолейГруппировок.ЦветТекстаПоля = Цвет;
	ЭлементыФормы.ДоступныеПоляПорядка.ЦветТекстаПоля = Цвет;
	
КонецПроцедуры

Процедура СтруктураНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	
	Если Элемент.ТекущаяКолонка <> Элемент.Колонки.Заголовок Тогда 
		
		СтандартнаяОбработка = Ложь;
	
	КонецЕсли;
	
КонецПроцедуры

Процедура СтруктураПриИзмененииФлажка(Элемент, Колонка)
	
	Если Колонка.Имя = "НазваниеГруппировки" И Элемент.ТекущаяСтрока <> Неопределено тогда
		Имя = Элемент.ТекущаяСтрока.Имя;
		Если Имя = "Группировка" или Имя = "Таблица" или Имя = "Диаграмма" тогда
			Имя = "";
		Иначе
			Если ТипЗнч(Элемент.ТекущаяСтрока) = Тип("ТаблицаКомпоновкиДанных") тогда
				Имя = "Таблица";
			ИначеЕсли ТипЗнч(Элемент.ТекущаяСтрока) = Тип("ДиаграммаКомпоновкиДанных") тогда
				Имя = "Диаграмма";
			Иначе
				Имя = "Группировка";	
			КонецЕсли;
		КонецЕсли;
		Элемент.ТекущаяСтрока.Имя = Имя;
	КонецЕсли;
	
	
	////Если Не Элемент.ТекущаяСтрока.Использование Тогда
	////	
	////	Элемент.Свернуть(Элемент.ТекущаяСтрока);
	////	
	////Иначе 
	////	
	////	Элемент.Развернуть(Элемент.ТекущаяСтрока);
	////	
	////КонецЕсли;
	
	ВключитьТекстТабличныхПолей();
	
КонецПроцедуры

Процедура СтруктураПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Для Каждого Оформление Из ОформленияСтрок Цикл
		
		Если ТипЗнч(Оформление.ДанныеСтроки.Строка) = Тип("КоллекцияЭлементовСтруктурыДиаграммыКомпоновкиДанных") ИЛИ
			 ТипЗнч(Оформление.ДанныеСтроки.Строка) = Тип("КоллекцияЭлементовСтруктурыТаблицыКомпоновкиДанных") ИЛИ
			 ТипЗнч(Оформление.ДанныеСтроки.Строка) = Тип("НастройкиКомпоновкиДанных") Тогда
			 
			Если ТипЗнч(Оформление.ДанныеСтроки.Строка) = Тип("КоллекцияЭлементовСтруктурыДиаграммыКомпоновкиДанных") ИЛИ
				 ТипЗнч(Оформление.ДанныеСтроки.Строка) = Тип("КоллекцияЭлементовСтруктурыТаблицыКомпоновкиДанных") Тогда
				 
				Оформление.ЦветТекста = Новый Цвет(96, 96, 96);
				
			КонецЕсли;
			
		Иначе
			
			Если НЕ СтрокаИспользуется(Оформление.ДанныеСтроки.Строка) Тогда
				// Элемент не используется - выделим его серым цветом
				
				Оформление.ЦветТекста = НеИспользуемыйЦвет;
				
			КонецЕсли
			
		КонецЕсли;
		
		Если ТипЗнч(Оформление.ДанныеСтроки.Строка) <> Тип("НастройкиКомпоновкиДанных") И
			 ТипЗнч(Оформление.ДанныеСтроки.Строка) <> Тип("КоллекцияЭлементовСтруктурыТаблицыКомпоновкиДанных") И
			 ТипЗнч(Оформление.ДанныеСтроки.Строка) <> Тип("КоллекцияЭлементовСтруктурыДиаграммыКомпоновкиДанных") тогда 
			Если Оформление.ДанныеСтроки.Строка.Имя = "Группировка" или Оформление.ДанныеСтроки.Строка.Имя = "Таблица" или Оформление.ДанныеСтроки.Строка.Имя = "Диаграмма" тогда
				Оформление.Ячейки.НазваниеГруппировки.ЗначениеФлажка = истина;
				Оформление.Ячейки.НазваниеГруппировки.ОтображатьФлажок = истина;
			ИначеЕсли Оформление.ДанныеСтроки.Строка.Имя <> "Группировка" И Оформление.ДанныеСтроки.Строка.Имя <> "Таблица" И Оформление.ДанныеСтроки.Строка.Имя <> "Диаграмма" И Оформление.ДанныеСтроки.Строка.Имя <> "" тогда
				Оформление.Ячейки.НазваниеГруппировки.Текст = Оформление.ДанныеСтроки.Строка.Имя;
				Оформление.Ячейки.НазваниеГруппировки.ОтображатьТекст = истина;
			Иначе
				Оформление.Ячейки.НазваниеГруппировки.ЗначениеФлажка = ложь;
				Оформление.Ячейки.НазваниеГруппировки.ОтображатьФлажок = истина;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СтруктураПриАктивизацииСтроки(Элемент)
	
	УстановитьДоступностьНастроек();
	
	// Удалим выделение с полей упорядочивания
	ЭлементыФормы.Порядок.ВыделенныеСтроки.Очистить();
	ПервичнаяАктивизация = Истина;
	
КонецПроцедуры

Процедура ЛокальныеВыбранныеПоляПриИзменении(Элемент)
	
	Если Элемент.Значение Тогда
		// Включили локальные настройки
		ЭлементыФормы.ПанельВыбранныхПолей.ТекущаяСтраница = ЭлементыФормы.ПанельВыбранныхПолей.Страницы.Настройки;
			
	Иначе
		// Выключили локальные настройки
		ЭлементыФормы.ПанельВыбранныхПолей.ТекущаяСтраница = ЭлементыФормы.ПанельВыбранныхПолей.Страницы.ОтключенныеНастройки;
		ЭлементыФормы.Структура.ТекущаяСтрока.Выбор.Элементы.Очистить();
		ЭлементыФормы.Структура.ТекущаяСтрока.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));
		
	КонецЕсли;
	УстановитьКартинкуЗакладкиВыбранныхПолей(Истина, Элемент.Значение);
	
КонецПроцедуры

Процедура ПанельНастройкиЭлементаПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	УстановитьРежимРедактированияТекущихНастроек();
	
КонецПроцедуры

Процедура ЛокальныйОтборПриИзменении(Элемент)
	
	Если Элемент.Значение Тогда
		// Включили локальные настройки
		ЭлементыФормы.ПанельОтбора.ТекущаяСтраница = ЭлементыФормы.ПанельОтбора.Страницы.Настройки;
			
	Иначе
		// Выключили локальные настройки
		ЭлементыФормы.ПанельОтбора.ТекущаяСтраница = ЭлементыФормы.ПанельОтбора.Страницы.ОтключенныеНастройки;
		ЭлементыФормы.Структура.ТекущаяСтрока.Отбор.Элементы.Очистить();
		
	КонецЕсли;
	
	УстановитьКартинкуЗакладкиОтбора(Истина, Элемент.Значение);
	
КонецПроцедуры

Процедура ЛокальныйПорядокПриИзменении(Элемент)
	
	Если Элемент.Значение Тогда
		// Включили локальные настройки
		ЭлементыФормы.ПанельПорядка.ТекущаяСтраница = ЭлементыФормы.ПанельПорядка.Страницы.Настройки;
			
	Иначе
		// Выключили локальные настройки
		ЭлементыФормы.ПанельПорядка.ТекущаяСтраница = ЭлементыФормы.ПанельПорядка.Страницы.ОтключенныеНастройки;
		ЭлементыФормы.Структура.ТекущаяСтрока.Порядок.Элементы.Очистить();
		ЭлементыФормы.Структура.ТекущаяСтрока.Порядок.Элементы.Добавить(Тип("АвтоЭлементПорядкаКомпоновкиДанных"));
		
	КонецЕсли;
	УстановитьКартинкуЗакладкиПорядка(Истина, Элемент.Значение);
	
КонецПроцедуры

Процедура ЛокальноеУсловноеОформлениеПриИзменении(Элемент)
	
	Если Элемент.Значение Тогда
		// Включили локальные настройки
		ЭлементыФормы.ПанельУсловногоОформления.ТекущаяСтраница = ЭлементыФормы.ПанельУсловногоОформления.Страницы.Настройки;
			
	Иначе
		// Выключили локальные настройки
		ЭлементыФормы.ПанельУсловногоОформления.ТекущаяСтраница = ЭлементыФормы.ПанельУсловногоОформления.Страницы.ОтключенныеНастройки;
		ЭлементыФормы.Структура.ТекущаяСтрока.УсловноеОформление.Элементы.Очистить();
		
	КонецЕсли;
	УстановитьКартинкуЗакладкиУсловногоОформления(Истина, Элемент.Значение);
	
КонецПроцедуры

Процедура ОтключитьЛокальныеПараметрыВывода(Элементы)
	
	Для Каждого ТекЭлемент Из Элементы Цикл
			
		ТекЭлемент.Использование = Ложь;
		ОтключитьЛокальныеПараметрыВывода(ТекЭлемент.ЗначенияВложенныхПараметров);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЛокальныеПараметрыВыводаПриИзменении(Элемент)
	
	Если Элемент.Значение Тогда
		// Включили локальные настройки
		ЭлементыФормы.ПанельПараметровВывода.ТекущаяСтраница = ЭлементыФормы.ПанельПараметровВывода.Страницы.Настройки;
			
	Иначе
		// Выключили локальные настройки
		ЭлементыФормы.ПанельПараметровВывода.ТекущаяСтраница = ЭлементыФормы.ПанельПараметровВывода.Страницы.ОтключенныеНастройки;
		ОтключитьЛокальныеПараметрыВывода(ЭлементыФормы.Структура.ТекущаяСтрока.ПараметрыВывода.Элементы);
		
	КонецЕсли;
	УстановитьКартинкуЗакладкиПараметровВывода(Истина, Элемент.Значение);
	
КонецПроцедуры

Функция НайтиТаблицуИлиДиаграмму(ТекущийЭлементНастроек, Стр)
	
	Если ТипЗнч(ТекущийЭлементНастроек) = Тип("ТаблицаКомпоновкиДанных") Тогда
		
		Если ТекущийЭлементНастроек.Строки = Стр ИЛИ 
			ТекущийЭлементНастроек.Колонки = Стр Тогда
			
			Возврат ТекущийЭлементНастроек;
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ТекущийЭлементНастроек) = Тип("ДиаграммаКомпоновкиДанных") Тогда
		
		Если ТекущийЭлементНастроек.Серии = Стр ИЛИ 
			ТекущийЭлементНастроек.Точки = Стр Тогда
			
			Возврат ТекущийЭлементНастроек;
			
		КонецЕсли;
		
	Иначе
		
		Если ТипЗнч(ТекущийЭлементНастроек) = Тип("НастройкиВложенногоОбъектаКомпоновкиДанных") Тогда
			
			Структура = ТекущийЭлементНастроек.Настройки.Структура;
			
		Иначе
			
			Структура = ТекущийЭлементНастроек.Структура;
			
		КонецЕсли;
		
		Для Каждого Элемент Из Структура Цикл
			
			НайденныйЭлемент = НайтиТаблицуИлиДиаграмму(Элемент, Стр);
			
			Если НайденныйЭлемент <> Неопределено Тогда
				
				Возврат НайденныйЭлемент;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Процедура ПерейтиКОтчету()
	
	Стр = ЭлементыФормы.Структура.ТекущаяСтрока;

	Если ТипЗнч(Стр) = Тип("КоллекцияЭлементовСтруктурыДиаграммыКомпоновкиДанных") ИЛИ
		ТипЗнч(Стр) = Тип("КоллекцияЭлементовСтруктурыТаблицыКомпоновкиДанных") Тогда
		
		Стр = НайтиТаблицуИлиДиаграмму(КомпоновщикНастроек.Настройки, Стр);
		
	КонецЕсли;
		
	Пока Стр <> Неопределено Цикл
		
		Если ТипЗнч(Стр) = Тип("НастройкиКомпоновкиДанных") ИЛИ
			ТипЗнч(Стр) = Тип("НастройкиВложенногоОбъектаКомпоновкиДанных") Тогда
			
			Прервать;
			
		КонецЕсли;
		
		Стр = Стр.Родитель;
		
	КонецЦикла;
	
	Если Стр <> Неопределено Тогда
	
		ЭлементыФормы.Структура.ТекущаяСтрока = Стр;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПереходКВыбраннымПолямОтчетаНажатие(Элемент)
	
	ПерейтиКОтчету();
	
КонецПроцедуры

Процедура ДоступныеПоляПорядкаОбработкаВыбора()
	
	ПервичнаяАктивизация = Ложь;

	Если ЭлементыФормы.Порядок.ВыделенныеСтроки.Количество() = 0 Тогда 
		
		ИндексВставки = 0;
		
	Иначе
		
		ИндексВставки = ЭлементыФормы.Структура.ТекущаяСтрока.Порядок.Элементы.Индекс(ЭлементыФормы.Порядок.ТекущаяСтрока) + 1;
		
	КонецЕсли;
	
	Для Каждого Строка Из ЭлементыФормы.ДоступныеПоляПорядка.ВыделенныеСтроки Цикл
		
		ДобавленныйЭлемент = 
			ЭлементыФормы.Структура.ТекущаяСтрока.Порядок.Элементы.Вставить(ИндексВставки, Тип("ЭлементПорядкаКомпоновкиДанных"));
			
		ДобавленныйЭлемент.Поле = Строка.Поле;
		
	КонецЦикла;
	
	Если ДобавленныйЭлемент <> Неопределено Тогда
		
		ЭлементыФормы.Порядок.ТекущаяСтрока = ДобавленныйЭлемент;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДоступныеПоляПорядкаВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДоступныеПоляПорядкаОбработкаВыбора();
	
КонецПроцедуры

Процедура ПорядокПриАктивизацииСтроки(Элемент)
	
	Если ПервичнаяАктивизация Тогда 
		
		Элемент.ВыделенныеСтроки.Очистить();
		ПервичнаяАктивизация = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанель6Действие(Кнопка)
	
	ДоступныеПоляПорядкаОбработкаВыбора();

КонецПроцедуры

Процедура ПараметрыВыводаПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Для Каждого Оформление Из ОформленияСтрок Цикл
		
		Если Оформление.ДанныеСтроки.Использование Тогда
			
			Оформление.Шрифт = Новый Шрифт(Оформление.Шрифт, , , Истина);
			
		КонецЕсли;
		
	КонецЦикла;
		
КонецПроцедуры

Процедура ДоступныеПоляВыбораПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		
		Если Не ОформлениеСтроки.ДанныеСтроки.Ресурс И Не ОформлениеСтроки.ДанныеСтроки.Папка Тогда
			
			Типы = ОформлениеСтроки.ДанныеСтроки.Тип.Типы();
			
			Если Типы.Количество() = 1 Тогда
				
				Если Типы[0] = Тип("Число") Тогда 
					
					ОформлениеСтроки.Ячейки.Заголовок.ИндексКартинки = 0;
					
				ИначеЕсли Типы[0] = Тип("Строка") Тогда 
					
					ОформлениеСтроки.Ячейки.Заголовок.ИндексКартинки = 1;
					
				ИначеЕсли Типы[0] = Тип("Дата") Тогда 
					
					ОформлениеСтроки.Ячейки.Заголовок.ИндексКартинки = 2;
					
				ИначеЕсли Типы[0] = Тип("Булево") Тогда 
					
					ОформлениеСтроки.Ячейки.Заголовок.ИндексКартинки = 3;
					
				ИначеЕсли Найти(Строка(Типы[0]), "Справочник") <> 0 Тогда 
					
					ОформлениеСтроки.Ячейки.Заголовок.ИндексКартинки = 7;
					
				ИначеЕсли Найти(Строка(Типы[0]), "Документ") <> 0 Тогда 
					
					ОформлениеСтроки.Ячейки.Заголовок.ИндексКартинки = 8;
					
				ИначеЕсли Найти(Строка(Типы[0]), "Перечисление") <> 0 Тогда 
					
					ОформлениеСтроки.Ячейки.Заголовок.ИндексКартинки = 9;
					
				ИначеЕсли Найти(Строка(Типы[0]), "План видов хар") <> 0 Тогда 
					
					ОформлениеСтроки.Ячейки.Заголовок.ИндексКартинки = 10;
					
				ИначеЕсли Найти(Строка(Типы[0]), "План счетов") <> 0 Тогда 
					
					ОформлениеСтроки.Ячейки.Заголовок.ИндексКартинки = 11;
					
				ИначеЕсли Найти(Строка(Типы[0]), "План видов рас") <> 0 Тогда 
					
					ОформлениеСтроки.Ячейки.Заголовок.ИндексКартинки = 12;
					
				ИначеЕсли Найти(Строка(Типы[0]), "Бизнес процесс") <> 0 Тогда 
					
					ОформлениеСтроки.Ячейки.Заголовок.ИндексКартинки = 13;
					
				ИначеЕсли Найти(Строка(Типы[0]), "Точка маршрута") <> 0 Тогда 
					
					ОформлениеСтроки.Ячейки.Заголовок.ИндексКартинки = 14;
					
				ИначеЕсли Найти(Строка(Типы[0]), "Задача") <> 0 Тогда 
					
					ОформлениеСтроки.Ячейки.Заголовок.ИндексКартинки = 15;
					
				Иначе
					
					ОформлениеСтроки.Ячейки.Заголовок.ИндексКартинки = 16;
					
				КонецЕсли;
				
			Иначе
				
				ОформлениеСтроки.Ячейки.Заголовок.ИндексКартинки = 16;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбновлениеОтображения()
	
	Если Не РасширеннаяНастройка Тогда
		ВыводитьДетальныеЗаписи = ТиповыеОтчеты.ВСтруктуреМогутБытьДетальныеПоля(КомпоновщикНастроекПользовательский);
	КонецЕсли;
	
	НастройкиПростые = ТиповыеОтчеты.НастройкиКомпоновщикаПростые(КомпоновщикНастроек);
	ЭлементыФормы.РасширеннаяНастройка.Доступность = НастройкиПростые;
	ЭлементыФормы.НадписьНельзяОтобразить.Видимость = Не НастройкиПростые;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ДЕЙСТВИЯ ФОРМЫ

Процедура УсловноеОформлениеПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ДанныеСтроки.Поля.Элементы.Количество() = 0 Тогда
		
		ОформлениеСтроки.Ячейки.ОбластиДляКраткогоОтображенияЭлемента.Текст = НСтр("ru='<Все поля>'");
		ОформлениеСтроки.Ячейки.ОбластиДляПодробногоОтображенияЭлемента.Текст = НСтр("ru='<Все поля>'");
		
	КонецЕсли;
		
	Если ДанныеСтроки.Отбор.Элементы.Количество() = 0 Тогда
		
		ОформлениеСтроки.Ячейки.ОтборДляКраткогоОтображенияЭлемента.Текст = НСтр("ru='<Без условия>'");
		ОформлениеСтроки.Ячейки.ОтборДляПодробногоОтображенияЭлемента.Текст = НСтр("ru='<Без условия>'");
		
	КонецЕсли;
	
	ЦветФона = ДанныеСтроки.Оформление.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ЦветФона"));
	Если ЦветФона.Использование Тогда
		
		ОформлениеСтроки.ЦветФона = ЦветФона.Значение;
		
	КонецЕсли;
	
	ЦветТекста = ДанныеСтроки.Оформление.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ЦветТекста"));
	Если ЦветТекста.Использование Тогда
		
		ОформлениеСтроки.ЦветТекста = ЦветТекста.Значение;
		
	КонецЕсли;
	
	Шрифт = ДанныеСтроки.Оформление.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Шрифт"));
	Если Шрифт.Использование Тогда
		
		ОформлениеСтроки.Шрифт = Шрифт.Значение;
		
	КонецЕсли;
	
	Текст = ДанныеСтроки.Оформление.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Текст"));
	Если Текст.Использование Тогда
		
		ОформлениеСтроки.Ячейки.ОформлениеДляКраткогоОтображенияЭлемента.Текст = Текст.Значение;
		ОформлениеСтроки.Ячейки.ОформлениеДляПодробногоОтображенияЭлемента.Текст = Текст.Значение;
		
	КонецЕсли;
	
КонецПроцедуры

Функция СтрокаИспользуется(Знач Стр)

	Если ТипЗнч(Стр) = Тип("КоллекцияЭлементовСтруктурыДиаграммыКомпоновкиДанных") ИЛИ
		ТипЗнч(Стр) = Тип("КоллекцияЭлементовСтруктурыТаблицыКомпоновкиДанных") Тогда
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Используется = Истина;
			
	Пока Используется И Стр <> Неопределено Цикл
				
		Если ТипЗнч(Стр) = Тип("ЭлементОтбораКомпоновкиДанных") 
		 или ТипЗнч(Стр) = Тип("ГруппаЭлементовОтбораКомпоновкиДанных")
		 или ТипЗнч(Стр) = Тип("ЭлементУсловногоОформленияКомпоновкиДанных")
		 или ТипЗнч(Стр) = Тип("ЭлементПорядкаКомпоновкиДанных")
		 или ТипЗнч(Стр) = Тип("ВыбранноеПолеКомпоновкиДанных")
		 или ТипЗнч(Стр) = Тип("ГруппаВыбранныхПолейКомпоновкиДанных")
		 или ТипЗнч(Стр) = Тип("АвтоВыбранноеПолеКомпоновкиДанных")
		 или ТипЗнч(Стр) = Тип("ПолеГруппировкиКомпоновкиДанных")
		 или ТипЗнч(Стр) = Тип("ГруппировкаКомпоновкиДанных")
		 или ТипЗнч(Стр) = Тип("ТаблицаКомпоновкиДанных")
		 или ТипЗнч(Стр) = Тип("ДиаграммаКомпоновкиДанных")
		тогда
			Используется = Стр.Использование;
		КонецЕсли;
				
		Если ТипЗнч(Стр) = Тип("ЭлементОтбораКомпоновкиДанных") 
		 или ТипЗнч(Стр) = Тип("ГруппаЭлементовОтбораКомпоновкиДанных")
		 или ТипЗнч(Стр) = Тип("ВыбранноеПолеКомпоновкиДанных")
		 или ТипЗнч(Стр) = Тип("ГруппаВыбранныхПолейКомпоновкиДанных")
		 или ТипЗнч(Стр) = Тип("АвтоВыбранноеПолеКомпоновкиДанных")
		 или ТипЗнч(Стр) = Тип("ГруппировкаКомпоновкиДанных")
		 или ТипЗнч(Стр) = Тип("ТаблицаКомпоновкиДанных")
		 или ТипЗнч(Стр) = Тип("ДиаграммаКомпоновкиДанных")
		тогда
			Стр = Стр.Родитель;  	
		Иначе
			Прервать;
			
		КонецЕсли;
				
	КонецЦикла;
	
	Возврат Используется;
			
КонецФункции

Процедура РаскраскаНедоступныхПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Для Каждого Оформление Из ОформленияСтрок Цикл
		
		Если Не СтрокаИспользуется(Оформление.ДанныеСтроки) Тогда
			
			Оформление.ЦветТекста = НеИспользуемыйЦвет;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура РасширеннаяНастройкаПриИзменении(Элемент)
	
	Если НастройкиПростые Тогда
		ПереключитьСложностьНастройки();
	КонецЕсли;
		
КонецПроцедуры

Процедура ПереключитьСложностьНастройки(ПервоеПереключение = Ложь)
	
	Если РасширеннаяНастройка Тогда
		ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.СтраницаРасширеннойНастройки;
		Если Не ПервоеПереключение Тогда
			ЗаполнитьКомпоновщикНастроекОтчета();
		КонецЕсли;
	Иначе
		ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.СтраницаПользовательскойНастройки;
		ИнициализироватьКомпоновщикНастроек();
		Если ЭлементыФормы.Представление.Кнопки.Количество() = 0 Тогда
			УстановитьПараметрыФормы();
			ОбновитьЭлементыФормы();
			ОбновитьФормуПоКомпоновщику();
			УстановитьДоступностьОформленияПоказателей();
			ОбновитьКнопкиКонтекстногоМенюПоказатели(ЭлементыФормы.КоманднаяПанельСтраницаТаблицаПоказателиКонтекстноеМеню);
			ОбновитьКнопкиКонтекстногоМенюПоказатели(ЭлементыФормы.КоманднаяПанельСтраницаНеТаблицаПоказателиКонтекстноеМеню);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьДоступностьПоляВОтборе(ПараметрыПеретаскивания)
	Для каждого ДоступноеПоле из ПараметрыПеретаскивания.Значение Цикл
		Если ТипЗнч(ДоступноеПоле) = Тип("ДоступноеПолеКомпоновкиДанных") тогда
			ДоступноеПолеОтбора = КомпоновщикНастроек.Настройки.Отбор.ДоступныеПоляОтбора.НайтиПоле(ДоступноеПоле.Поле);
			Если ДоступноеПолеОтбора = Неопределено тогда
				ПараметрыПеретаскивания.ДопустимыеДействия = ДопустимыеДействияПеретаскивания.НеОбрабатывать;
				Прервать
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ТабличноеПолеОтборСтраницаПараметрыПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Колонка)
	ПроверитьДоступностьПоляВОтборе(ПараметрыПеретаскивания);
КонецПроцедуры

Процедура ТабличноеПолеОтборСтраницаБезПараметровПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Колонка)
	ПроверитьДоступностьПоляВОтборе(ПараметрыПеретаскивания);
КонецПроцедуры

НеИспользуемыйЦвет = Новый Цвет(153, 153, 153);
ЭлементыФормы.Структура.НачальноеОтображениеДерева = НачальноеОтображениеДерева.НеРаскрывать;

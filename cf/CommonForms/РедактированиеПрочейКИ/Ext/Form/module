Перем НажатаКнопкаОК;
Перем НажатаКнопкаОтмена;

Перем ВыбранныйТипДляНовойСтроки;


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Перед открытием формы
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	НажатаКнопкаОК        = Ложь;
	НажатаКнопкаОтмена    = Ложь;
	
	КонтактнаяИнформация.Колонки.Добавить("Запись");
	
	// Заполним видами не попавшими на основную форму
	Для Каждого Стр Из СтруктураДляРедактирования.НаборКонтактнойИнформации Цикл
		Если Не УправлениеКонтактнойИнформацией.ВидРедактируетсяВОсновнойФорме(СтруктураДляРедактирования, Стр.Вид) И (Стр.Вид <> СтруктураДляРедактирования.ВидПрочейКИ)Тогда
			новСтр = КонтактнаяИнформация.Добавить();
			ЗаполнитьЗначенияСвойств(новСтр, Стр);
			
			новСтр.Запись = РегистрыСведений.КонтактнаяИнформация.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(новСтр.Запись, Стр);
		КонецЕсли;
	КонецЦикла;
	
	ЭлементыФормы.КонтактнаяИнформация.ТолькоПросмотр = ЭтаФорма.ТолькоПросмотр;
	Если ЭтаФорма.ТолькоПросмотр Тогда
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Удалить(ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОК);
	КонецЕсли;
	
	ОтображатьКомментарий = ВосстановитьЗначение("ФормаРедактированияПрочейКИОтображатьКомментарий");
	ПроверитьВидимостьКолонкиКомментарий();
	
КонецПроцедуры

// Перед закрытием
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если НажатаКнопкаОК Тогда
		НажатаКнопкаОК = Ложь;
		Отказ = Не ЗаписатьВведенныеДанные();
		Возврат;
		
	ИначеЕсли Не Модифицированность ИЛИ НажатаКнопкаОтмена Тогда
		Возврат
		
	КонецЕсли;
	
	Результат = Вопрос("Контактная информация была изменена. Сохранить изменения?", РежимДиалогаВопрос.ДаНетОтмена);
	Если Результат = КодВозвратаДиалога.Да Тогда
		Отказ = Не ЗаписатьВведенныеДанные();
	ИначеЕсли Результат = КодВозвратаДиалога.Отмена Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ЗНАЧЕНИЙ "КОНТАКТНАЯ ИНФОРМАЦИЯ"

// При выводе строки
Процедура КонтактнаяИнформацияПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Картинка = УправлениеКонтактнойИнформацией.ПолучитьКартинкуПоТипу(ДанныеСтроки.Тип);
	Если Картинка <> Неопределено Тогда
		ОформлениеСтроки.Ячейки.Вид.ОтображатьКартинку = Истина;
		ОформлениеСтроки.Ячейки.Вид.Картинка = Картинка;
	КонецЕсли;
	
	//ОформлениеСтроки.Ячейки.Вид.ЦветФона = Новый Цвет(234, 229, 216);
	
КонецПроцедуры

// Перед удалением строки
Процедура КонтактнаяИнформацияПередУдалением(Элемент, Отказ)
	
	текСтр = ЭлементыФормы.КонтактнаяИнформация.ТекущаяСтрока;
	ЭтаФорма.Модифицированность = Истина;
	
	Если ТипЗнч(текСтр.Вид) = Тип("Строка") Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	текСтр.Представление = "";
	УправлениеКонтактнойИнформацией.ОчиститьЗаписьКонтактнойИнформации(текСтр.Запись);
	
	ПроверитьПолеКомментарий();
	
КонецПроцедуры

// Перед началом изменения
Процедура КонтактнаяИнформацияПередНачаломИзменения(Элемент, Отказ)
	
	текСтр = ЭлементыФормы.КонтактнаяИнформация.ТекущаяСтрока;
	Вид = текСтр.Вид;
	Тип = текСтр.Тип;
	
	// Проверим, нужно ли редактировать в диалоге
	Если Не УправлениеКонтактнойИнформацией.ВидРедактируетсяВДиалоге(СтруктураДляРедактирования, Вид) Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	
	УстановитьВидВСтроке(текСтр);
	
	УправлениеКонтактнойИнформацией.РедактироватьКонтактнуюИнформациюВДиалоге(текСтр.Запись, СтруктураДляРедактирования.НаборКонтактнойИнформации, ЭтаФорма);
	текСтр.Представление = текСтр.Запись.Представление;
	
КонецПроцедуры

// Перед началом добавления
Процедура КонтактнаяИнформацияПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	// Предложим выбрать тип
	ВыбранныйТипДляНовойСтроки = ВыбратьТипКонтактнойИнформации();
	Если ВыбранныйТипДляНовойСтроки = Неопределено Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	//ЭлементыФормы.КонтактнаяИнформация.ТекущаяКолонка = ЭлементыФормы.КонтактнаяИнформация.Колонки.Представление;
	
КонецПроцедуры

// Перед окончанием редактирования
Процедура КонтактнаяИнформацияПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	//ЭтаФорма.Модифицированность = Истина;
	
	текСтр = ЭлементыФормы.КонтактнаяИнформация.ТекущаяСтрока;
	текСтр.Запись.Представление = текСтр.Представление;
	текСтр.Запись.Комментарий   = текСтр.Комментарий;
	УправлениеКонтактнойИнформацией.ЗаполнитьПоляВЗаписиПоПредставлению(текСтр.Запись, текСтр.Представление);
	УправлениеКонтактнойИнформацией.ПроверитьНеобходимостьКопированияКИ(текСтр.Запись, СтруктураДляРедактирования, КонтактнаяИнформация);
	
КонецПроцедуры

// При активизации строки
Процедура КонтактнаяИнформацияПриАктивизацииСтроки(Элемент)
	
	текСтр = ЭлементыФормы.КонтактнаяИнформация.ТекущаяСтрока;
	Если текСтр <> Неопределено Тогда
		ЭлементыФормы.КонтактнаяИнформация.Колонки.Вид.ТолькоПросмотр = (ТипЗнч(текСтр.Вид) = Тип("СправочникСсылка.ВидыКонтактнойИнформации"));
	КонецЕсли;
	
	ПроверитьПолеКомментарий();
	
КонецПроцедуры

// Перед началом выбора представления
Процедура КонтактнаяИнформацияПредставлениеНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	текСтр = ЭлементыФормы.КонтактнаяИнформация.ТекущаяСтрока;
	УстановитьВидВСтроке(текСтр);
	
	УправлениеКонтактнойИнформацией.РедактироватьКонтактнуюИнформациюВДиалоге(текСтр.Запись, СтруктураДляРедактирования.НаборКонтактнойИнформации, ЭтаФорма);
	
	текСтр.Представление = текСтр.Запись.Представление;
	текСтр.Комментарий   = текСтр.Запись.Комментарий;
	
	ПроверитьПолеКомментарий();
	
КонецПроцедуры

// При изменении представления
Процедура КонтактнаяИнформацияПредставлениеПриИзменении(Элемент)
	
	ЭтаФорма.Модифицированность = Истина;
	
	текСтр = ЭлементыФормы.КонтактнаяИнформация.ТекущаяСтрока;
	УправлениеКонтактнойИнформацией.ЗаполнитьПоляВЗаписиПоПредставлению(текСтр.Запись, текСтр.Представление);
	//УправлениеКонтактнойИнформацией.ПроверитьНеобходимостьКопированияКИ(текСтр.Запись, СтруктураДляРедактирования, Неопределено);
	
	ПроверитьПолеКомментарий();
	
КонецПроцедуры

// При изменении вида
Процедура КонтактнаяИнформацияВидПриИзменении(Элемент)
	
	ЭтаФорма.Модифицированность = Истина;
	
	текСтр = ЭлементыФормы.КонтактнаяИнформация.ТекущаяСтрока;
	текСтр.Запись.Вид = текСтр.Вид;
	
КонецПроцедуры

// При изменении комментария
Процедура КонтактнаяИнформацияКомментарийПриИзменении(Элемент)
	
	ЭтаФорма.Модифицированность = Истина;
	
	текСтр = ЭлементыФормы.КонтактнаяИнформация.ТекущаяСтрока;
	текСтр.Запись.Комментарий = текСтр.Комментарий;
	
КонецПроцедуры

// При начале редактирования
Процедура КонтактнаяИнформацияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если Не НоваяСтрока Тогда
		Возврат;
	КонецЕсли;
	
	Представление = ?(ВыбранныйТипДляНовойСтроки = Перечисления.ТипыКонтактнойИнформации.ВебСтраница, "http://www..ru", "");
	
	Стр = ЭлементыФормы.КонтактнаяИнформация.ТекущаяСтрока;
	
	Стр.Тип = ВыбранныйТипДляНовойСтроки;
	Стр.Вид = "";
	Стр.Представление = Представление;
	
	Стр.Запись = РегистрыСведений.КонтактнаяИнформация.СоздатьМенеджерЗаписи();
	Стр.Запись.Тип = ВыбранныйТипДляНовойСтроки;
	Стр.Запись.Вид = "";
	Стр.Запись.Представление = Представление;
	
	УстановитьВидВСтроке(Стр);
	
	ЭтаФорма.Модифицированность = Истина;
	
КонецПроцедуры

Процедура КонтактнаяИнформацияВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	КонтактнаяИнформацияПредставлениеНачалоВыбора(Элемент, СтандартнаяОбработка);
КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////
// НАЖАТИЯ НА КНОПКИ ПАНЕЛЕЙ

// Нажата кнопка ОК
Процедура ОсновныеДействияФормыОК(Кнопка)
	
	НажатаКнопкаОК = Истина;
	Закрыть();
	
КонецПроцедуры

// Нажата кнопка Отмена
Процедура ОсновныеДействияФормыОтмена(Кнопка)
	
	НажатаКнопкаОтмена = Истина;
	Закрыть();
	
КонецПроцедуры

// Нажата кнопка "Отображать комментарий"
Процедура КоманднаяПанельВерхняяКомментарий(Кнопка)
	
	ОтображатьКомментарий = Не ОтображатьКомментарий;
	СохранитьЗначение("ФормаРедактированияПрочейКИОтображатьКомментарий", ОтображатьКомментарий);
	ПроверитьВидимостьКолонкиКомментарий();
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Выбрать тип контактной информации через контекстное меню
Функция ВыбратьТипКонтактнойИнформации()

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ТипыКонтактнойИнформации.Ссылка Как Тип ИЗ Перечисление.ТипыКонтактнойИнформации КАК ТипыКонтактнойИнформации";
	Выборка = Запрос.Выполнить().Выбрать();
	спсТипов = Новый СписокЗначений;
	Пока Выборка.Следующий() Цикл
		спсТипов.Добавить(Выборка.Тип);
	КонецЦикла;
	
	//выбрТип = ВыбратьИзСписка(спсТипов, ЭлементыФормы.КонтактнаяИнформация);
	выбрТип = спсТипов.ВыбратьЭлемент("Укажите тип контактной информации");
	//выбрТип = ВыбратьИзМеню(спсТипов);
	Если выбрТип = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;

	Возврат выбрТип.Значение;

КонецФункции // ВыбратьТипКонтактнойИнформации()

// Записать введенные данные в набор записей
Функция ЗаписатьВведенныеДанные()

	ВсеВидыСтроковые   = Новый Соответствие;
	ВсеВидыНеСтроковые = Новый Соответствие;
	
	// Проверим, есть ли пустые или дубли виды
	Для Каждого Стр Из КонтактнаяИнформация Цикл
		
		Если ТипЗнч(Стр.Запись.Вид) = Тип("Строка") Тогда
		
			СтрВид = ВРЕГ(СокрЛП(Стр.Запись.Вид));
			Если ПустаяСтрока(СтрВид) Тогда
				ЭлементыФормы.КонтактнаяИнформация.ТекущаяСтрока = Стр;
				Предупреждение("Не заполнено описание!");
				Возврат Ложь;
				
			ИначеЕсли ВсеВидыСтроковые.Получить(СтрВид) <> Неопределено Тогда
				ЭлементыФормы.КонтактнаяИнформация.ТекущаяСтрока = Стр;
				Предупреждение("Повторно встречается описание: " + Стр.Запись.Вид);
				Возврат Ложь;
				
			КонецЕсли;
			
			ВсеВидыСтроковые.Вставить(СтрВид, Стр.Запись);
			
		Иначе
			ВсеВидыНеСтроковые.Вставить(Стр.Запись.Вид, Стр.Запись);
			
		КонецЕсли;
			
	КонецЦикла;
	
	// Заменим значения в основном наборе записей
	Для Каждого Стр Из СтруктураДляРедактирования.НаборКонтактнойИнформации Цикл
		
		Если ТипЗнч(Стр.Вид) <> Тип("Строка") Тогда
			
			Запись = ВсеВидыНеСтроковые.Получить(Стр.Вид);
			Если Запись <> Неопределено Тогда
				УправлениеКонтактнойИнформацией.СкопироватьДанныеКИИзЗаписиВДругую(Запись, Стр);
			КонецЕсли;
			
		Иначе
			
			СтрВид = ВРЕГ(СокрЛП(Стр.Вид));
			Запись = ВсеВидыСтроковые.Получить(СтрВид);
			
			Если Запись = Неопределено Тогда
				УправлениеКонтактнойИнформацией.ОчиститьЗаписьКонтактнойИнформации(Стр);
				
			Иначе
				УправлениеКонтактнойИнформацией.СкопироватьДанныеКИИзЗаписиВДругую(Запись, Стр);
				ВсеВидыСтроковые.Удалить(СтрВид);
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	// Добавим в набор новые записи
	Для Каждого Запись Из ВсеВидыСтроковые Цикл
		новЗапись = СтруктураДляРедактирования.НаборКонтактнойИнформации.Добавить();
		ЗаполнитьЗначенияСвойств(новЗапись, Запись.Значение);
	КонецЦикла;
	
	// Изменим флаг модифицированности у основной формы
	ЭтаФорма.ВладелецФормы.Модифицированность = Истина;
	
	Возврат Истина;
	
КонецФункции

// Установить вид в строке табличной части
Процедура УстановитьВидВСтроке(СтрТабЧасти)

	Если (ТипЗнч(СтрТабЧасти.Вид) <> Тип("Строка")) ИЛИ (Не ПустаяСтрока(СтрТабЧасти.Вид)) Тогда
		Возврат;
	КонецЕсли;
	
	Сч  = 0;
	Тип = СтрТабЧасти.Тип;
	
	Пока Истина Цикл
		Сч = Сч + 1;
		НовыйВид = "" + Тип + ?(Сч=1, "", " (" + Сч + ")");
		Нашли = Ложь;
		
		Для Каждого Стр Из КонтактнаяИнформация Цикл
			Если (Стр.Тип = Тип) И (ВРЕГ(СокрЛП(Стр.Вид)) = ВРЕГ(СокрЛП(НовыйВид))) Тогда
				Нашли = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если Не Нашли Тогда
			СтрТабЧасти.Вид = НовыйВид;
			СтрТабЧасти.Запись.Вид = НовыйВид;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

// Проверить видимость колонки комментарий в таблице Контактной информации
Процедура ПроверитьВидимостьКолонкиКомментарий()

	ЭлементыФормы.КоманднаяПанельВерхняя.Кнопки.Действия.Кнопки.Комментарий.Пометка = ОтображатьКомментарий;
	ЭлементыФормы.КонтактнаяИнформация.Колонки.Комментарий.Видимость = ОтображатьКомментарий;
	
	ЭлементыФормы.ПанельКомментария.Свертка = ?(ОтображатьКомментарий, РежимСверткиЭлементаУправления.Низ, РежимСверткиЭлементаУправления.Нет);
	
	ПроверитьПолеКомментарий();

КонецПроцедуры


Процедура КомментарийПриИзменении(Элемент)
	текСтр = ЭлементыФормы.КонтактнаяИнформация.ТекущаяСтрока;
	Если текСтр <> Неопределено Тогда
		текСтр.Комментарий = Комментарий;
		текСтр.Запись.Комментарий = Комментарий;
	КонецЕсли;
	
	ЭтаФорма.Модифицированность = Истина;
КонецПроцедуры

Процедура ПроверитьПолеКомментарий()

	текСтр = ЭлементыФормы.КонтактнаяИнформация.ТекущаяСтрока;
	Если текСтр = Неопределено Тогда
		ЭлементыФормы.Комментарий.Доступность = Ложь;
		Комментарий = "";
	Иначе
		ЭлементыФормы.Комментарий.Доступность = Истина;
		Комментарий = текСтр.Запись.Комментарий;
	КонецЕсли;

КонецПроцедуры

Процедура КонтактнаяИнформацияПослеУдаления(Элемент)
	ПроверитьПолеКомментарий();
КонецПроцедуры








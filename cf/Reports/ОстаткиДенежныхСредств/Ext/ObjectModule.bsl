Перем СохраненнаяНастройка Экспорт;
Перем Расшифровки Экспорт;

Перем ПромежуточныеДанные Экспорт;

#Если Клиент Тогда

Процедура СформироватьОтчет(Результат = Неопределено, ДанныеРасшифровки = Неопределено, ВыводВФормуОтчета = Истина, ВнешниеНаборыДанных = Неопределено) Экспорт
	
	Результат.Очистить();
	
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	ВыводЗаголовкаОтчета(ЭтотОбъект, Результат);
	ДоработатьКомпоновщикПередВыводом(ВнешниеНаборыДанных);
	КомпоновщикНастроек.Восстановить();
	НастройкаКомпоновкиДанных = КомпоновщикНастроек.ПолучитьНастройки();
	КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
	СтандартныеОтчеты.ВывестиОтчет(ЭтотОбъект, Результат, ДанныеРасшифровки, ВыводВФормуОтчета, ВнешниеНаборыДанных, Истина, НастройкаКомпоновкиДанных);
	
	// Выполним дополнительную обработку Результата отчета
	ОбработкаРезультатаОтчета(Результат);
	
КонецПроцедуры

// В процедуре можно доработать компоновщик перед выводом в отчет
// Изменения сохранены не будут
Процедура ДоработатьКомпоновщикПередВыводом(ВнешниеНаборыДанных) Экспорт
	
	ВнешниеНаборыДанных = Новый Структура;
	ВыборкаДанных = ПолучитьВыборку();
	ВнешниеНаборыДанных.Вставить("ТаблицаДанных", ВыборкаДанных);

	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "Период", КонецДня(Период));
	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "Рубли",  Константы.ВалютаРегламентированногоУчета.Получить());
	Если ЗначениеЗаполнено(Организация) Тогда
		ТиповыеОтчеты.ДобавитьОтбор(КомпоновщикНастроек, "Организация", Организация);
	КонецЕсли;
	
	СтруктураПараметр   = СтандартныеОтчеты.ПолучитьОписаниеСтруктурыПараметра();
	ПромежуточныеДанные = СтандартныеОтчеты.ПолучитьОписаниеТаблицыПромежуточныеДанные();
	
	Выборка = ВыборкаДанных.Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(СтруктураПараметр, Выборка);
		СтруктураПараметр.Знак         = "+";
		СтруктураПараметр.Сумма        = Выборка.Остаток;
		СтруктураПараметр.Субконто1    = Выборка.ВидДенежныхСредств;
		СтруктураПараметр.Субконто2    = Выборка.Аналитика;
		СтруктураПараметр.КорСубконто1 = Выборка.Валюта;
		СтандартныеОтчеты.ДобавитьЗаписьВТаблицуПромежуточныеДанные(ПромежуточныеДанные, СтруктураПараметр);
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьВыборку() 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ СчетаКассы
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Касса))
	|	И (НЕ Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДенежныеДокументы)))
	|	И (НЕ Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДенежныеДокументыВал)))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ СчетаУчетаБезналичные
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	(Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетныеСчета))
	|			ИЛИ Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВалютныеСчета))
	|			ИЛИ Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.СпециальныеСчета))
	|			ИЛИ Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПереводыВПути_))
	|				И (НЕ Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПриобретениеИностраннойВалюты)))
	|				И (НЕ Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПродажиПоПлатежнымКартам)))
	|				И (НЕ Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РеализацияИностраннойВалюты))))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ СчетаУчетаПодотчет
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицами_))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СчетаКассы.Счет
	|ПОМЕСТИТЬ СчетаУчета
	|ИЗ
	|	СчетаКассы КАК СчетаКассы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СчетаУчетаБезналичные.Счет
	|ИЗ
	|	СчетаУчетаБезналичные КАК СчетаУчетаБезналичные
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СчетаУчетаПодотчет.Счет
	|ИЗ
	|	СчетаУчетаПодотчет КАК СчетаУчетаПодотчет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.КоличествоВалюта > 0
	|			ТОГДА ""Итого, руб""
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК Валюта
	|ПОМЕСТИТЬ Валюты
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
	|				КОГДА Таблица.Счет.Валютный
	|					ТОГДА Таблица.Валюта
	|				ИНАЧЕ &Рубли
	|			КОНЕЦ) КАК КоличествоВалюта
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.Остатки(
	|				&Период,
	|				Счет В
	|					(ВЫБРАТЬ
	|						СчетаУчета.Счет
	|					ИЗ
	|						СчетаУчета КАК СчетаУчета),
	|				,
	|				Организация = &Организация) КАК Таблица
	|	ГДЕ
	|		ВЫБОР
	|				КОГДА Таблица.Счет.Валютный
	|					ТОГДА Таблица.Валюта
	|				ИНАЧЕ &Рубли
	|			КОНЕЦ <> &Рубли) КАК ВложенныйЗапрос
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	""Деньги в кассе"" КАК ВидДенежныхСредств,
	|	Наличные.Организация КАК Организация,
	|	""Итого, руб"" КАК Валюта,
	|	ВЫБОР
	|		КОГДА Наличные.Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.КассаОрганизации))
	|				ИЛИ Наличные.Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.КассаОрганизацииВал))
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.КассаОрганизации)
	|		ИНАЧЕ Наличные.Счет
	|	КОНЕЦ КАК Аналитика,
	|	Наличные.СуммаОстаток КАК Остаток,
	|	Наличные.Счет
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&Период,
	|			Счет В
	|				(ВЫБРАТЬ
	|					СчетаКассы.Счет
	|				ИЗ
	|					СчетаКассы КАК СчетаКассы),
	|			,
	|			Организация = &Организация) КАК Наличные
	|ГДЕ
	|	""Итого, руб"" В
	|			(ВЫБРАТЬ
	|				Валюты.Валюта
	|			ИЗ
	|				Валюты КАК Валюты)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Деньги в кассе"",
	|	Наличные.Организация,
	|	ВЫБОР
	|		КОГДА Наличные.Счет.Валютный
	|			ТОГДА Наличные.Валюта
	|		ИНАЧЕ &Рубли
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Наличные.Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.КассаОрганизации))
	|				ИЛИ Наличные.Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.КассаОрганизацииВал))
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.КассаОрганизации)
	|		ИНАЧЕ Наличные.Счет
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Наличные.Счет.Валютный
	|			ТОГДА Наличные.ВалютнаяСуммаОстаток
	|		ИНАЧЕ Наличные.СуммаОстаток
	|	КОНЕЦ,
	|	Наличные.Счет
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&Период,
	|			Счет В
	|				(ВЫБРАТЬ
	|					СчетаКассы.Счет
	|				ИЗ
	|					СчетаКассы КАК СчетаКассы),
	|			,
	|			Организация = &Организация) КАК Наличные
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Деньги на расчетных счетах"",
	|	Безналичные.Организация,
	|	""Итого, руб"",
	|	ВЫБОР
	|		КОГДА (НЕ Безналичные.Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПереводыВПути_)))
	|			ТОГДА ВЫРАЗИТЬ(Безналичные.Субконто1 КАК Справочник.БанковскиеСчета)
	|		ИНАЧЕ Безналичные.Счет
	|	КОНЕЦ,
	|	Безналичные.СуммаОстаток,
	|	Безналичные.Счет
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&Период,
	|			Счет В
	|				(ВЫБРАТЬ
	|					СчетаУчетаБезналичные.Счет
	|				ИЗ
	|					СчетаУчетаБезналичные КАК СчетаУчетаБезналичные),
	|			,
	|			Организация = &Организация) КАК Безналичные
	|ГДЕ
	|	""Итого, руб"" В
	|			(ВЫБРАТЬ
	|				Валюты.Валюта
	|			ИЗ
	|				Валюты КАК Валюты)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Деньги на расчетных счетах"",
	|	Безналичные.Организация,
	|	ВЫБОР
	|		КОГДА Безналичные.Счет.Валютный
	|			ТОГДА Безналичные.Валюта
	|		ИНАЧЕ &Рубли
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ Безналичные.Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПереводыВПути_)))
	|			ТОГДА ВЫРАЗИТЬ(Безналичные.Субконто1 КАК Справочник.БанковскиеСчета)
	|		ИНАЧЕ Безналичные.Счет
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Безналичные.Счет.Валютный
	|			ТОГДА Безналичные.ВалютнаяСуммаОстаток
	|		ИНАЧЕ Безналичные.СуммаОстаток
	|	КОНЕЦ,
	|	Безналичные.Счет
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&Период,
	|			Счет В
	|				(ВЫБРАТЬ
	|					СчетаУчетаБезналичные.Счет
	|				ИЗ
	|					СчетаУчетаБезналичные КАК СчетаУчетаБезналичные),
	|			,
	|			Организация = &Организация) КАК Безналичные
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Деньги у подотчетных лиц"",
	|	Подотчет.Организация,
	|	""Итого, руб"",
	|	ВЫРАЗИТЬ(Подотчет.Субконто1 КАК Справочник.ФизическиеЛица),
	|	Подотчет.СуммаОстаток,
	|	Подотчет.Счет
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&Период,
	|			Счет В
	|				(ВЫБРАТЬ
	|					СчетаУчетаПодотчет.Счет
	|				ИЗ
	|					СчетаУчетаПодотчет КАК СчетаУчетаПодотчет),
	|			,
	|			Организация = &Организация) КАК Подотчет
	|ГДЕ
	|	Подотчет.СуммаОстаток > 0
	|	И ""Итого, руб"" В
	|			(ВЫБРАТЬ
	|				Валюты.Валюта
	|			ИЗ
	|				Валюты КАК Валюты)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Деньги у подотчетных лиц"",
	|	Подотчет.Организация,
	|	ВЫБОР
	|		КОГДА Подотчет.Счет.Валютный
	|			ТОГДА Подотчет.Валюта
	|		ИНАЧЕ &Рубли
	|	КОНЕЦ,
	|	ВЫРАЗИТЬ(Подотчет.Субконто1 КАК Справочник.ФизическиеЛица),
	|	ВЫБОР
	|		КОГДА Подотчет.Счет.Валютный
	|			ТОГДА Подотчет.ВалютнаяСуммаОстаток
	|		ИНАЧЕ Подотчет.СуммаОстаток
	|	КОНЕЦ,
	|	Подотчет.Счет
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&Период,
	|			Счет В
	|				(ВЫБРАТЬ
	|					СчетаУчетаПодотчет.Счет
	|				ИЗ
	|					СчетаУчетаПодотчет КАК СчетаУчетаПодотчет),
	|			,
	|			Организация = &Организация) КАК Подотчет
	|ГДЕ
	|	ВЫБОР
	|			КОГДА Подотчет.Счет.Валютный
	|				ТОГДА Подотчет.ВалютнаяСуммаОстаток
	|			ИНАЧЕ Подотчет.СуммаОстаток
	|		КОНЕЦ > 0";
	
	Запрос.УстановитьПараметр("Период", ?(ЗначениеЗаполнено(Период), КонецДня(Период) + 1, '00010101'));
	Запрос.УстановитьПараметр("Организация"  , Организация);
	Запрос.УстановитьПараметр("Рубли", Константы.ВалютаРегламентированногоУчета.Получить());
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Организация = &Организация", "");
	КонецЕсли;
	
	Возврат Запрос.Выполнить();
	
Конецфункции

Процедура ВыводЗаголовкаОтчета(ОтчетОбъект, Результат)
	
	МакетЗаголовок = ПолучитьОбщийМакет("ЗаголовокОтчета");
	ОбластьЗаголовок = МакетЗаголовок.ПолучитьОбласть("Заголовок");
	
	ОбластьЗаголовок.Параметры.ЗаголовокОтчета = ПолучитьТекстЗаголовка();

	Результат.Вывести(ОбластьЗаголовок);
			
КонецПроцедуры

Функция ПолучитьТекстЗаголовка(ОрганизацияВНачале = Истина) Экспорт 
	
	ЗаголовокОтчета = "Остатки денежных средств";
	
	Возврат СтандартныеОтчеты.ПолучитьТекстЗаголовка(ЭтотОбъект, ЗаголовокОтчета, ОрганизацияВНачале);

КонецФункции

Процедура ОбработкаРезультатаОтчета(Результат)
	
	СтандартныеОтчеты.ОбработкаРезультатаОтчета(ЭтотОбъект, Результат);

КонецПроцедуры

// Для настройки отчета (расшифровка и др.)
Процедура Настроить(Отбор, КомпоновщикНастроекОсновногоОтчета = Неопределено) Экспорт
	
	ТиповыеОтчеты.НастроитьТиповойОтчет(ЭтотОбъект, Отбор, КомпоновщикНастроекОсновногоОтчета);
	
КонецПроцедуры

Процедура СохранитьНастройку() Экспорт
	
	СтандартныеОтчеты.СохранитьНастройку(ЭтотОбъект);
	
КонецПроцедуры

// Процедура заполняет параметры отчета по элементу справочника из переменной СохраненнаяНастройка.
Процедура ПрименитьНастройку() Экспорт
	
	Если СохраненнаяНастройка.Пустая() Тогда
		Возврат;
	КонецЕсли;
	 
	СтруктураПараметров = СохраненнаяНастройка.ХранилищеНастроек.Получить();
	ТиповыеОтчеты.ПрименитьСтруктуруПараметровОтчета(ЭтотОбъект, СтруктураПараметров);
	
КонецПроцедуры

Процедура ИнициализацияОтчета() Экспорт
	
	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "Период",  Период);
	
КонецПроцедуры

Расшифровки = Новый СписокЗначений;

НастройкаПериода = Новый НастройкаПериода;

#КонецЕсли
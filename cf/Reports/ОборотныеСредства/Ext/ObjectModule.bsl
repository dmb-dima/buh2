Перем СохраненнаяНастройка Экспорт;
Перем Расшифровки Экспорт;

Перем ПромежуточныеДанные Экспорт;

#Если Клиент Тогда

Процедура СформироватьОтчет(Результат = Неопределено, ДанныеРасшифровки = Неопределено, ВыводВФормуОтчета = Истина, ВнешниеНаборыДанных = Неопределено) Экспорт
	
	// Проверим заполнение обязательных реквизитов
	Если ПроверитьЗаполнениеОбязательныхРеквизитов() Тогда
		Возврат;
	КонецЕсли;
	
	Результат.Очистить();
	
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	ВыводЗаголовкаОтчета(ЭтотОбъект, Результат);
	ДоработатьКомпоновщикПередВыводом(ВнешниеНаборыДанных);
	КомпоновщикНастроек.Восстановить();
	НастройкаКомпоновкиДанных = КомпоновщикНастроек.ПолучитьНастройки();
	КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
	СтандартныеОтчеты.ВывестиОтчет(ЭтотОбъект, Результат, ДанныеРасшифровки, ВыводВФормуОтчета, ВнешниеНаборыДанных, Истина, НастройкаКомпоновкиДанных);
	
	// Выполним дополнительную обработку Результата отчета
	ОбработкаРезультатаОтчета(Результат);
	
КонецПроцедуры

// В процедуре можно доработать компоновщик перед выводом в отчет
// Изменения сохранены не будут
Процедура ДоработатьКомпоновщикПередВыводом(ВнешниеНаборыДанных) Экспорт
	
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("ОборотныеАктивы", ПолучитьДанные());
	
	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "НачалоПериода", НачалоПериода);
	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "КонецПериода", КонецДня(КонецПериода));
	
КонецПроцедуры

Процедура ВыводЗаголовкаОтчета(ОтчетОбъект, Результат)
	
	МакетЗаголовок = ПолучитьОбщийМакет("ЗаголовокОтчета");
	ОбластьЗаголовок = МакетЗаголовок.ПолучитьОбласть("Заголовок");
	
	ОбластьЗаголовок.Параметры.ЗаголовокОтчета = ПолучитьТекстЗаголовка();
	
	Результат.Вывести(ОбластьЗаголовок);
			
КонецПроцедуры

Функция ПолучитьТекстЗаголовка(ОрганизацияВНачале = Истина) Экспорт 
	
	ЗаголовокОтчета = "Оборотные средства";
	
	Возврат СтандартныеОтчеты.ПолучитьТекстЗаголовка(ЭтотОбъект, ЗаголовокОтчета, ОрганизацияВНачале);
	
КонецФункции

Процедура ОбработкаРезультатаОтчета(Результат)
	
	СтандартныеОтчеты.ОбработкаРезультатаОтчета(ЭтотОбъект, Результат);
	
КонецПроцедуры

Функция ПроверитьЗаполнениеОбязательныхРеквизитов()
	
	Отказ = Ложь;
	Если Не ЗначениеЗаполнено(НачалоПериода) ИЛИ Не ЗначениеЗаполнено(КонецПериода) Тогда
		Сообщить("Не указан период формирования отчета", СтатусСообщения.Важное);
		Отказ = Истина;
	ИначеЕсли НачалоПериода > КонецПериода Тогда
		Сообщить("Дата начала периода не может быть больше даты конца периода", СтатусСообщения.Важное);
		Отказ = Истина;
	КонецЕсли;
	
	Возврат Отказ;
	
КонецФункции

Функция ПолучитьДанные()
	
	
	ПромежуточныеДанные = СтандартныеОтчеты.ПолучитьОписаниеТаблицыПромежуточныеДанные();

	// Инициализация
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Раздел");
	Таблица.Колонки.Добавить("Подраздел");
	Таблица.Колонки.Добавить("Порядок");
	Таблица.Колонки.Добавить("СуммаНаНачалоПериода"      , ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(17,2));
	Таблица.Колонки.Добавить("УдельныйВесНаНачалоПериода", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(6,2));
	Таблица.Колонки.Добавить("СуммаНаКонецПериода"       , ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(17,2));
	Таблица.Колонки.Добавить("УдельныйВесНаКонецПериода" , ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(6,2));
	
	ПС = ПланыСчетов["Хозрасчетный"];
	Счет01      = ПС.ОсновныеСредства;
	Счет02_01   = ПС.АмортизацияОС_01;
	Счет02_02   = ПС.АмортизацияОС_03;
	Счет03      = ПС.ДоходныеВложенияВ_МЦ;
	Счет04_01   = ПС.НематериальныеАктивыОрганизации;
	Счет04_02   = ПС.РасходыНаНИОКР;
	Счет05      = ПС.АмортизацияНематериальныхАктивов;
	Счет07      = ПС.ОборудованиеКУстановке;
	Счет08_01   = ПС.ПриобретениеЗемельныхУчастков;
	Счет08_02   = ПС.ПриобретениеОбъектовПриродопользования;
	Счет08_03   = ПС.СтроительствоОбъектовОсновныхСредств;
	Счет08_04   = ПС.ПриобретениеОбъектовОсновныхСредств;
	Счет08_05   = ПС.ПриобретениеНематериальныхАктивов;
	Счет08_06   = ПС.ПереводМолоднякаЖивотныхВОсновноеСтадо;
	Счет08_07   = ПС.ПриобретениеВзрослыхЖивотных;
	Счет08_08   = ПС.ВыполнениеНИОКР;
	Счет09      = ПС.ОтложенныеНалоговыеАктивы;
	Счет10      = ПС.Материалы;
	Счет11      = ПС.ЖивотныеНаВыращиванииИОткорме;
	Счет14_01   = ПС.РезервыПодСнижениеСтоимостиМатериалов;
	Счет14_02   = ПС.РезервыПодСнижениеСтоимостиТоваров;
	Счет14_03   = ПС.РезервыПодСнижениеСтоимостиГотовойПродукции;
	Счет14_04   = ПС.РезервыПодСнижениеСтоимостиНезавершенногоПроизводства;
	Счет15_01   = ПС.ЗаготовлениеИПриобретениеМатериалов;
	Счет15_02   = ПС.ПриобретениеТоваров;
	Счет16_01   = ПС.ОтклонениеВСтоимостиМатериалов;
	Счет16_02   = ПС.ОтклонениеВСтоимостиТоваров;
	Счет19      = ПС.НДСпоПриобретеннымЦенностям;
	Счет20      = ПС.ОсновноеПроизводство_;
	Счет21      = ПС.Полуфабрикаты;
	Счет23      = ПС.ВспомогательныеПроизводства;
	Счет28      = ПС.БракВПроизводстве;
	Счет29      = ПС.ОбслуживающиеПроизводства;
	Счет41      = ПС.Товары;
	Счет42      = ПС.ТорговаяНаценка;
	Счет43      = ПС.ГотоваяПродукция;
	Счет44      = ПС.РасходыНаПродажу;
	Счет45      = ПС.ТоварыОтгруженные;
	Счет46      = ПС.ВыполненныеЭтапыПоНезавершеннымРаботам;
	Счет50      = ПС.Касса;
	Счет50_03   = ПС.ДенежныеДокументы;
	Счет50_23   = ПС.ДенежныеДокументыВал;
	Счет51      = ПС.РасчетныеСчета;
	Счет52      = ПС.ВалютныеСчета;
	Счет55_01   = ПС.Аккредитивы;
	Счет55_02   = ПС.ЧековыеКнижки;
	Счет55_03   = ПС.ДепозитныеСчета;
	Счет55_04   = ПС.ПрочиеСпециальныеСчета;
	Счет55_21   = ПС.АккредитивыВал;
	Счет55_23   = ПС.ДепозитныеСчетаВал;
	Счет55_24   = ПС.ПрочиеСпециальныеСчетаВал;
	Счет57      = ПС.ПереводыВПути_;
	Счет57_02   = ПС.ПриобретениеИностраннойВалюты;
	Счет57_03   = ПС.ПродажиПоПлатежнымКартам;
	Счет57_22   = ПС.РеализацияИностраннойВалюты;
	
	Счет58_01_1 = ПС.Паи;
	Счет58_01_2 = ПС.Акции;
	Счет58_02   = ПС.ДолговыеЦенныеБумаги;
	Счет58_03   = ПС.ПредоставленныеЗаймы;
	Счет58_04   = ПС.ВкладыПоДоговоруПростогоТоварищества;
	Счет58_05   = ПС.ПриобретенныеПрава;
	Счет59      = ПС.РезервыПодОбесценениеФинансовыхВложений;
	Счет60_01   = ПС.РасчетыСПоставщиками;
	Счет60_02   = ПС.РасчетыПоАвансамВыданным;
	Счет60_03   = ПС.ВекселяВыданные;
	Счет60_21   = ПС.РасчетыСПоставщикамиВал;
	Счет60_22   = ПС.РасчетыПоАвансамВыданнымВал;
	Счет60_31   = ПС.РасчетыСПоставщикамиУЕ;
	Счет60_32   = ПС.РасчетыПоАвансамВыданнымУЕ;
	
	Счет62_01   = ПС.РасчетыСПокупателями;
	Счет62_02   = ПС.РасчетыПоАвансамПолученным;
	Счет62_03   = ПС.ВекселяПолученные;
	Счет62_21   = ПС.РасчетыСПокупателямиВал;
	Счет62_22   = ПС.РасчетыПоАвансамПолученнымВал;
	Счет62_31   = ПС.РасчетыСПокупателямиУЕ;
	Счет62_32   = ПС.РасчетыПоАвансамПолученнымУЕ;
	
	Счет63      = ПС.РезервыПоСомнительнымДолгам;
	Счет66      = ПС.РасчетыПоКраткосрочнымКредитамИЗаймам;
	Счет67      = ПС.РасчетыПоДолгосрочнымКредитамИЗаймам;
	
	Счет68_01   = ПС.НДФЛ;
	Счет68_02   = ПС.НДС;
	Счет68_03   = ПС.Акцизы;
	Счет68_04_1 = ПС.РасчетыСБюджетом;
	Счет68_04_2 = ПС.РасчетНалогаНаПрибыль;
	Счет68_07   = ПС.ТранспортныйНалог;
	Счет68_08   = ПС.НалогНаИмущество;
	Счет68_09   = ПС.НалогНаРекламу;
	Счет68_10   = ПС.ПрочиеНалогиИСборы;
	Счет68_11   = ПС.ЕНВД;
	Счет68_12   = ПС.ЕНприУСН;
	Счет68_22   = ПС.НДСпоЭкспортуКВозмещению;
	
	Счет69      = ПС.РасчетыПоСоциальномуСтрахованию;
	Счет70      = ПС.РасчетыСПерсоналомПоОплатеТруда;
	Счет71      = ПС.РасчетыСПодотчетнымиЛицами_;
	Счет73      = ПС.РасчетыСПерсоналомПоПрочимОперациям;
	Счет75_01   = ПС.РасчетыПоВкладамВУставныйКапитал;
	Счет75_02   = ПС.РасчетыПоВыплатеДоходов;
	
	Счет76      = ПС.РасчетыСРазнымиДебиторамиИКредиторами;
	Счет76_01   = ПС.РасчетыПоИмущественномуЛичномуИДобровольномуСтрахованию;
	Счет76_02   = ПС.РасчетыПоПретензиям;
	Счет76_03   = ПС.РасчетыПоПричитающимсяДивидендам;
	Счет76_04   = ПС.РасчетыПоДепонированнымСуммам;
	Счет76_05   = ПС.РасчетыСПрочимиПоставщикамиИПодрядчиками;
	Счет76_06   = ПС.РасчетыСПрочимиПокупателямиИЗаказчиками;
	Счет76_09   = ПС.ПрочиеРасчетыСРазнымиДебиторамиИКредиторами;
	Счет76_21   = ПС.РасчетыПоИмущественномуИЛичномуСтрахованиюВал;
	Счет76_22   = ПС.РасчетыПоПретензиямВал;
	Счет76_25   = ПС.РасчетыСПрочимиПоставщикамиИПодрядчикамиВал;
	Счет76_26   = ПС.РасчетыСПрочимиПокупателямиИЗаказчикамиВал;
	Счет76_29   = ПС.ПрочиеРасчетыСРазнымиДебиторамиИКредиторамиВал;
	Счет76_32   = ПС.РасчетыПоПретензиямУЕ;
	Счет76_35   = ПС.РасчетыСПрочимиПоставщикамиИПодрядчикамиУЕ;
	Счет76_36   = ПС.РасчетыСПрочимиПокупателямиИЗаказчикамиУЕ;
	Счет76_39   = ПС.ПрочиеРасчетыСРазнымиДебиторамиИКредиторамиУЕ;
	Счет76_41   = ПС.РасчетыПоИсполнительнымДокументамРаботников;
	Счет76_АВ   = ПС.НДСпоАвансамИПредоплатам;
	Счет76_Н    = ПС.РасчетыПоНДСОтложенномуДляУплатыВБюджет;
	Счет76_ОТ   = ПС.НДСНачисленныйПоОтгрузке;
	
	
	Счет77      = ПС.ОтложенныеНалоговыеОбязательства;
	Счет79      = ПС.ВнутрихозяйственныеРасчеты;
	Счет80      = ПС.УставныйКапитал;
	Счет81      = ПС.СобственныеАкции;
	Счет82_01   = ПС.РезервыОбразованныеВСоответствииСЗаконодательством;
	Счет82_02   = ПС.РезервыОбразованныеВСоответствииСУчредительнымиДокументами;
	Счет83      = ПС.ДобавочныйКапитал;
	Счет84      = ПС.НераспределеннаяПрибыль;
	Счет86      = ПС.ЦелевоеФинансирование;
	Счет94      = ПС.НедостачиИПотериОтПорчиЦенностей;
	Счет96      = ПС.РезервыПредстоящихРасходов;
	Счет97      = ПС.РасходыБудущихПериодов;
	Счет98      = ПС.ДоходыБудущихПериодов;
	Счет99      = ПС.ПрибылиИУбытки;
	Счет001     = ПС.АрендованныеОсновныеСредства;
	Счет002     = ПС.ТМЦПринятыеНаОтветственноеХранение;
	Счет003     = ПС.МатериалыПринятыеВПереработку;
	Счет004     = ПС.ТоварыПринятыеНаКомиссию;
	Счет005     = ПС.ОборудованиеПринятоеДляМонтажа;
	Счет006     = ПС.БланкиСтрогойОтчетности;
	Счет007     = ПС.СписаннаяВУбытокЗадолженностьДебиторов;
	Счет008     = ПС.ОбеспеченияОбязательствПолученные;
	Счет009     = ПС.ОбеспеченияОбязательствВыданные;
	Счет010     = ПС.ИзносОсновныхСредств;
	Счет011     = ПС.ОсновныеСредстваСданныеВАренду;
	
	ПромежуточныеДанные = СтандартныеОтчеты.ПолучитьОписаниеТаблицыПромежуточныеДанные();
	
	ВыборкаПоСчету = ПолучитьВыборкуПоСчету(0, НачалоПериода, КонецПериода, Организация); 
	
	// Денежные средства (порядок 1)
	П1Н = ПолучитьДенежныеСредства(НачалоПериода             , Организация, "начало");
	П1К = ПолучитьДенежныеСредства(КонецДня(КонецПериода) + 1, Организация, "конец");
	
	// Краткосрочные финансовые вложения (порядок 2)
	П2Н_58_01_2 = ПолучитьИтог(Счет58_01_2, ВыборкаПоСчету, "СуммаНачальныйОстатокДт");
	П2Н_58_02   = ПолучитьИтог(Счет58_02  , ВыборкаПоСчету, "СуммаНачальныйОстатокДт");
	П2Н_58_03   = ПолучитьИтог(Счет58_03  , ВыборкаПоСчету, "СуммаНачальныйОстатокДт");
	П2Н_58_04   = ПолучитьИтог(Счет58_04  , ВыборкаПоСчету, "СуммаНачальныйОстатокДт");
	П2Н_58_05   = ПолучитьИтог(Счет58_05  , ВыборкаПоСчету, "СуммаНачальныйОстатокДт");
	П2Н_59      = ПолучитьИтог(Счет59     , ВыборкаПоСчету, "СуммаНачальныйОстатокКт");
	
	П2К_58_01_2 = ПолучитьИтог(Счет58_01_2, ВыборкаПоСчету, "СуммаКонечныйОстатокДт");
	П2К_58_02   = ПолучитьИтог(Счет58_02  , ВыборкаПоСчету, "СуммаКонечныйОстатокДт");
	П2К_58_03   = ПолучитьИтог(Счет58_03  , ВыборкаПоСчету, "СуммаКонечныйОстатокДт");
	П2К_58_04   = ПолучитьИтог(Счет58_04  , ВыборкаПоСчету, "СуммаКонечныйОстатокДт");
	П2К_58_05   = ПолучитьИтог(Счет58_05  , ВыборкаПоСчету, "СуммаКонечныйОстатокДт");
	П2К_59      = ПолучитьИтог(Счет59     , ВыборкаПоСчету, "СуммаКонечныйОстатокКт");
	
	П2Н = П2Н_58_01_2 + П2Н_58_02 - П2Н_59 + П2Н_58_03 + П2Н_58_04 + П2Н_58_05;
	П2К = П2К_58_01_2 + П2К_58_02 - П2К_59 + П2К_58_03 + П2К_58_04 + П2К_58_05;
	
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет58_01_2, П2Н_58_01_2, "начало", "Краткосрочные финансовые вложения",, "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет58_02  , П2Н_58_02  , "начало", "Краткосрочные финансовые вложения",, "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("-", Счет59     , -П2Н_59    , "начало", "Краткосрочные финансовые вложения",, "Кт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет58_03  , П2Н_58_03  , "начало", "Краткосрочные финансовые вложения",, "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет58_04  , П2Н_58_04  , "начало", "Краткосрочные финансовые вложения",, "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет58_05  , П2Н_58_05  , "начало", "Краткосрочные финансовые вложения",, "Дт");
	
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет58_01_2, П2К_58_01_2, "конец", "Краткосрочные финансовые вложения",, "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет58_02  , П2К_58_02  , "конец", "Краткосрочные финансовые вложения",, "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("-", Счет59     , -П2К_59    , "конец", "Краткосрочные финансовые вложения",, "Кт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет58_03  , П2К_58_03  , "конец", "Краткосрочные финансовые вложения",, "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет58_04  , П2К_58_04  , "конец", "Краткосрочные финансовые вложения",, "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет58_05  , П2К_58_05  , "конец", "Краткосрочные финансовые вложения",, "Дт");
	
	// Запасы (расчет составных частей)  
	//
	// Сырье и материалы (порядок 5)
	П5Н_10      = ПолучитьИтог(Счет10   , ВыборкаПоСчету, "СуммаНачальныйОстатокДт");
	П5Н_14_01   = ПолучитьИтог(Счет14_01, ВыборкаПоСчету, "СуммаНачальныйОстатокДт");
	П5Н_15_01   = ПолучитьИтог(Счет15_01, ВыборкаПоСчету, "СуммаНачальныйОстатокДт");
	П5Н_16_01_Д = ПолучитьИтог(Счет16_01, ВыборкаПоСчету, "СуммаНачальныйОстатокДт");
	П5Н_16_01_К = ПолучитьИтог(Счет16_01, ВыборкаПоСчету, "СуммаНачальныйОстатокКт");
	
	П5Н = П5Н_10 - П5Н_14_01 + П5Н_15_01 + П5Н_16_01_Д - П5Н_16_01_К;
	
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет10   , П5Н_10      , "начало", "Запасы, в т.ч.", "Сырье и материалы", "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("-", Счет14_01, -П5Н_14_01  , "начало", "Запасы, в т.ч.", "Сырье и материалы", "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет15_01, П5Н_15_01   , "начало", "Запасы, в т.ч.", "Сырье и материалы", "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет16_01, П5Н_16_01_Д , "начало", "Запасы, в т.ч.", "Сырье и материалы", "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("-", Счет16_01, -П5Н_16_01_К, "начало", "Запасы, в т.ч.", "Сырье и материалы", "Кт");
	
	
	П5К_10      = ПолучитьИтог(Счет10,    ВыборкаПоСчету, "СуммаКонечныйОстатокДт");
	П5К_14_01   = ПолучитьИтог(Счет14_01, ВыборкаПоСчету, "СуммаКонечныйОстатокДт");
	П5К_15_01   = ПолучитьИтог(Счет15_01, ВыборкаПоСчету, "СуммаКонечныйОстатокДт");
	П5К_16_01_Д = ПолучитьИтог(Счет16_01, ВыборкаПоСчету, "СуммаКонечныйОстатокДт");
	П5К_16_01_К = ПолучитьИтог(Счет16_01, ВыборкаПоСчету, "СуммаКонечныйОстатокКт");
	
	П5К = П5К_10 - П5К_14_01 + П5К_15_01 + П5К_16_01_Д - П5К_16_01_К;
	
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет10   , П5К_10      , "конец", "Запасы, в т.ч.", "Сырье и материалы", "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("-", Счет14_01, -П5К_14_01  , "конец", "Запасы, в т.ч.", "Сырье и материалы", "Кт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет15_01, П5К_15_01   , "конец", "Запасы, в т.ч.", "Сырье и материалы", "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет16_01, П5К_16_01_Д , "конец", "Запасы, в т.ч.", "Сырье и материалы", "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("-", Счет16_01, -П5К_16_01_К, "конец", "Запасы, в т.ч.", "Сырье и материалы", "Кт");
	
	// Животные на выращивании и откорме (порядок 6)
	П6Н = ПолучитьИтог(Счет11, ВыборкаПоСчету, "СуммаНачальныйОстатокДт");
	П6К = ПолучитьИтог(Счет11, ВыборкаПоСчету, "СуммаКонечныйОстатокДт");
	
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет11, П6Н, "начало", "Запасы, в т.ч.", "Животные на выращивании и откорме", "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет11, П6К, "конец" , "Запасы, в т.ч.", "Животные на выращивании и откорме", "Дт");
	
	// НЗП (порядок 7)
	П7Н_20    = ПолучитьИтог(Счет20, ВыборкаПоСчету, "СуммаНачальныйОстатокДт");
	П7Н_21    = ПолучитьИтог(Счет21, ВыборкаПоСчету, "СуммаНачальныйОстатокДт");
	П7Н_23    = ПолучитьИтог(Счет23, ВыборкаПоСчету, "СуммаНачальныйОстатокДт");
	П7Н_29    = ПолучитьИтог(Счет29, ВыборкаПоСчету, "СуммаНачальныйОстатокДт");
	П7Н_44    = 0;//ПолучитьИтог(Счет44, ВыборкаПоСчету, "СуммаНачальныйОстатокДт");
	П7Н_46    = ПолучитьИтог(Счет46, ВыборкаПоСчету, "СуммаНачальныйОстатокДт");
	П7Н_14_04 = ПолучитьИтог(Счет14_04, ВыборкаПоСчету, "СуммаНачальныйОстатокКт");
	
	П7К_20    = ПолучитьИтог(Счет20, ВыборкаПоСчету, "СуммаКонечныйОстатокДт");
	П7К_21    = ПолучитьИтог(Счет21, ВыборкаПоСчету, "СуммаКонечныйОстатокДт");
	П7К_23    = ПолучитьИтог(Счет23, ВыборкаПоСчету, "СуммаКонечныйОстатокДт");
	П7К_29    = ПолучитьИтог(Счет29, ВыборкаПоСчету, "СуммаКонечныйОстатокДт");
	П7К_44    = 0;//ПолучитьИтог(Счет44, ВыборкаПоСчету, "СуммаКонечныйОстатокДт");
	П7К_46    = ПолучитьИтог(Счет46, ВыборкаПоСчету, "СуммаКонечныйОстатокДт");
	П7К_14_04 = ПолучитьИтог(Счет14_04, ВыборкаПоСчету, "СуммаКонечныйОстатокКт");
	
	П7Н = П7Н_20 + П7Н_21 + П7Н_23 + П7Н_29 + П7Н_44 + П7Н_46 - П7Н_14_04;
	П7К = П7К_20 + П7К_21 + П7К_23 + П7К_29 + П7К_44 + П7К_46 - П7К_14_04;
	
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет20   , П7Н_20    , "начало", "Запасы, в т.ч.", "Незавершенное производство", "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет21   , П7Н_21    , "начало", "Запасы, в т.ч.", "Незавершенное производство", "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет23   , П7Н_23    , "начало", "Запасы, в т.ч.", "Незавершенное производство", "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет29   , П7Н_29    , "начало", "Запасы, в т.ч.", "Незавершенное производство", "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет46   , П7Н_46    , "начало", "Запасы, в т.ч.", "Незавершенное производство", "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("-", Счет14_04, -П7Н_14_04, "начало", "Запасы, в т.ч.", "Незавершенное производство", "Кт");
	
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет20   , П7К_20    , "конец", "Запасы, в т.ч.", "Незавершенное производство", "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет21   , П7К_21    , "конец", "Запасы, в т.ч.", "Незавершенное производство", "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет23   , П7К_23    , "конец", "Запасы, в т.ч.", "Незавершенное производство", "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет29   , П7К_29    , "конец", "Запасы, в т.ч.", "Незавершенное производство", "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет46   , П7К_46    , "конец", "Запасы, в т.ч.", "Незавершенное производство", "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("-", Счет14_04, -П7К_14_04, "конец", "Запасы, в т.ч.", "Незавершенное производство", "Кт");
	
	// Готовая продукция (порядок 8)
	П8Н = ПолучитьИтог(Счет43, ВыборкаПосчету, "СуммаНачальныйОстатокДт");
	П8К = ПолучитьИтог(Счет43, ВыборкаПосчету, "СуммаКонечныйОстатокДт");
	
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет43, П8Н, "начало", "Запасы, в т.ч.", "Готовая продукция", "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет43, П8К, "конец" , "Запасы, в т.ч.", "Готовая продукция", "Дт");
	
	
	// Товары (порядок 9)
	П9Н_14_03   = ПолучитьИтог(Счет14_03, ВыборкаПосчету, "СуммаНачальныйОстатокКт");
	П9Н_41      = ПолучитьИтог(Счет41   , ВыборкаПосчету, "СуммаНачальныйОстатокДт");
	П9Н_14_02   = ПолучитьИтог(Счет14_02, ВыборкаПосчету, "СуммаНачальныйОстатокКт");
	П9Н_15_02   = ПолучитьИтог(Счет15_02, ВыборкаПосчету, "СуммаНачальныйОстатокДт");
	П9Н_16_02_Д = ПолучитьИтог(Счет16_02, ВыборкаПосчету, "СуммаНачальныйОстатокДт");
	П9Н_16_02_К = ПолучитьИтог(Счет16_02, ВыборкаПосчету, "СуммаНачальныйОстатокКт");
	П9Н_42      = ПолучитьИтог(Счет42   , ВыборкаПосчету, "СуммаНачальныйОстатокКт");
	
	П9К_14_03   = ПолучитьИтог(Счет14_03, ВыборкаПосчету, "СуммаКонечныйОстатокКт");
	П9К_41      = ПолучитьИтог(Счет41   , ВыборкаПосчету, "СуммаКонечныйОстатокДт");
	П9К_14_02   = ПолучитьИтог(Счет14_02, ВыборкаПосчету, "СуммаКонечныйОстатокКт");
	П9К_15_02   = ПолучитьИтог(Счет15_02, ВыборкаПосчету, "СуммаКонечныйОстатокДт");
	П9К_16_02_Д = ПолучитьИтог(Счет16_02, ВыборкаПосчету, "СуммаКонечныйОстатокДт");
	П9К_16_02_К = ПолучитьИтог(Счет16_02, ВыборкаПосчету, "СуммаКонечныйОстатокКт");
	П9К_42      = ПолучитьИтог(Счет42   , ВыборкаПосчету, "СуммаКонечныйОстатокКт");
	
	П9Н = - П9Н_14_03 + П9Н_41 - П9Н_14_02 + П9Н_15_02 + П9Н_16_02_Д - П9Н_16_02_К - П9Н_42;
	П9К = - П9К_14_03 + П9К_41 - П9К_14_02 + П9К_15_02 + П9К_16_02_Д - П9К_16_02_К - П9К_42;
	
	ДобавитьЗаписьВТаблицуРасшифровки("-", Счет14_03, П9Н_14_03   , "начало", "Запасы, в т.ч.", "Товары", "Кт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет41   , П9Н_41      , "начало", "Запасы, в т.ч.", "Товары", "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("-", Счет14_02, П9Н_14_02   , "начало", "Запасы, в т.ч.", "Товары", "Кт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет15_02, П9Н_15_02   , "начало", "Запасы, в т.ч.", "Товары", "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет16_02, П9Н_16_02_Д , "начало", "Запасы, в т.ч.", "Товары", "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("-", Счет16_02, -П9Н_16_02_К, "начало", "Запасы, в т.ч.", "Товары", "Кт");
	ДобавитьЗаписьВТаблицуРасшифровки("-", Счет42   , -П9Н_42     , "начало", "Запасы, в т.ч.", "Товары", "Кт");
	
	ДобавитьЗаписьВТаблицуРасшифровки("-", Счет14_03, П9К_14_03   , "конец", "Запасы, в т.ч.", "Товары", "Кт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет41   , П9К_41      , "конец", "Запасы, в т.ч.", "Товары", "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("-", Счет14_02, П9К_14_02   , "конец", "Запасы, в т.ч.", "Товары", "Кт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет15_02, П9К_15_02   , "конец", "Запасы, в т.ч.", "Товары", "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет16_02, П9К_16_02_Д , "конец", "Запасы, в т.ч.", "Товары", "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("-", Счет16_02, -П9К_16_02_К, "конец", "Запасы, в т.ч.", "Товары", "Кт");
	ДобавитьЗаписьВТаблицуРасшифровки("-", Счет42   , -П9К_42     , "конец", "Запасы, в т.ч.", "Товары", "Кт");
	
	// Товары в пути (порядок 10)
	П10Н = ПолучитьИтог(Счет45, ВыборкаПосчету, "СуммаНачальныйОстатокДт");
	П10К = ПолучитьИтог(Счет45, ВыборкаПосчету, "СуммаКонечныйОстатокДт");
	
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет45, П10Н, "начало", "Запасы, в т.ч.", "Товары в пути", "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет45, П10К, "конец" , "Запасы, в т.ч.", "Товары в пути", "Дт");
	
	// Брак в производстве (порядок 12)
	П12Н = ПолучитьИтог(Счет28, ВыборкаПосчету, "СуммаНачальныйОстатокДт");
	П12К = ПолучитьИтог(Счет28, ВыборкаПосчету, "СуммаКонечныйОстатокДт");
	
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет28, П12Н, "начало", "Запасы, в т.ч.", "Брак в производстве", "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет28, П12К, "конец" , "Запасы, в т.ч.", "Брак в производстве", "Дт");
	
	// Запасы  (порядок 4)
	П4Н = П5Н + П6Н + П7Н + П8Н + П9Н + П10Н + П12Н;
	П4К = П5К + П6К + П7К + П8К + П9К + П10К + П12К;
	
	// Недостачи к взысканию (порядок 13)
	П13Н = ПолучитьИтог(Счет94, ВыборкаПосчету, "СуммаНачальныйОстатокДт");
	П13К = ПолучитьИтог(Счет94, ВыборкаПосчету, "СуммаКонечныйОстатокДт");
	
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет94, П13Н, "начало", "Недостачи к взысканию",, "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет94, П13К, "конец" , "Недостачи к взысканию",, "Дт");
	
	                                      
	// Дебиторская задолженность
	П3Н = ПолучитьЗадолженностьПокупателей(НачалоПериода             , Организация, "начало");
	П3К = ПолучитьЗадолженностьПокупателей(КонецДня(КонецПериода) + 1, Организация, "конец");
	
		
	НоваяСтрока = Таблица.Добавить();
	Если П1Н <> 0 ИЛИ П1К <> 0 Тогда
		НоваяСтрока.Порядок              = 1;
		НоваяСтрока.Раздел               = "Денежные средства";
		НоваяСтрока.Подраздел            = NULL;
		НоваяСтрока.СуммаНаНачалоПериода = П1Н;
		НоваяСтрока.СуммаНаКонецПериода  = П1К;
	КонецЕсли;
	Если П2Н <> 0 ИЛИ П2К <> 0 Тогда		
		НоваяСтрока = Таблица.Добавить();
		НоваяСтрока.Порядок              = 2;
		НоваяСтрока.Раздел               = "Краткосрочные финансовые вложения";
		НоваяСтрока.Подраздел            = NULL;
		НоваяСтрока.СуммаНаНачалоПериода = П2Н;
		НоваяСтрока.СуммаНаКонецПериода  = П2К;
	КонецЕсли;
	Если П3Н <> 0 ИЛИ П3К <> 0 Тогда	
		НоваяСтрока = Таблица.Добавить();
		НоваяСтрока.Порядок              = 3;
		НоваяСтрока.Раздел               = "Задолженность покупателей";
		НоваяСтрока.Подраздел            = NULL;
		НоваяСтрока.СуммаНаНачалоПериода = П3Н;
		НоваяСтрока.СуммаНаКонецПериода  = П3К;  
	КонецЕсли;
	Если П5Н <> 0 ИЛИ П5К <> 0 Тогда		
		НоваяСтрока = Таблица.Добавить();		
		НоваяСтрока.Порядок              = 5;
		НоваяСтрока.Раздел               = "Запасы, в т.ч.";
		НоваяСтрока.Подраздел            = "Сырье и материалы";
		НоваяСтрока.СуммаНаНачалоПериода = П5Н;
		НоваяСтрока.СуммаНаКонецПериода  = П5К;
	КонецЕсли;
	Если П6Н <> 0 ИЛИ П6К <> 0 Тогда		
		НоваяСтрока = Таблица.Добавить();
		НоваяСтрока.Порядок              = 6;
		НоваяСтрока.Раздел               = "Запасы, в т.ч.";
		НоваяСтрока.Подраздел            = "Животные на выращивании и откорме";
		НоваяСтрока.СуммаНаНачалоПериода = П6Н;
		НоваяСтрока.СуммаНаКонецПериода  = П6К;
	КонецЕсли;
	Если П7Н <> 0 ИЛИ П7К <> 0 Тогда	
		НоваяСтрока = Таблица.Добавить();
		НоваяСтрока.Порядок              = 7;
		НоваяСтрока.Раздел               = "Запасы, в т.ч.";
		НоваяСтрока.Подраздел            = "Незавершенное производство";
		НоваяСтрока.СуммаНаНачалоПериода = П7Н;
		НоваяСтрока.СуммаНаКонецПериода  = П7К;
	КонецЕсли;
	Если П8Н <> 0 ИЛИ П8К <> 0 Тогда
		НоваяСтрока = Таблица.Добавить();
		НоваяСтрока.Порядок              = 8;
		НоваяСтрока.Раздел               = "Запасы, в т.ч.";
		НоваяСтрока.Подраздел            = "Готовая продукция";
		НоваяСтрока.СуммаНаНачалоПериода = П8Н;
		НоваяСтрока.СуммаНаКонецПериода  = П8К;
	КонецЕсли;
	Если П9Н <> 0 ИЛИ П9К <> 0 Тогда
		НоваяСтрока = Таблица.Добавить();
		НоваяСтрока.Порядок              = 9;
		НоваяСтрока.Раздел               = "Запасы, в т.ч.";
		НоваяСтрока.Подраздел            = "Товары";
		НоваяСтрока.СуммаНаНачалоПериода = П9Н;
		НоваяСтрока.СуммаНаКонецПериода  = П9К;
	КонецЕсли;
	Если П10Н <> 0 ИЛИ П10К <> 0 Тогда	
		НоваяСтрока = Таблица.Добавить();
		НоваяСтрока.Порядок              = 10;
		НоваяСтрока.Раздел               = "Запасы, в т.ч.";
		НоваяСтрока.Подраздел            = "Товары в пути";
		НоваяСтрока.СуммаНаНачалоПериода = П10Н;
		НоваяСтрока.СуммаНаКонецПериода  = П10К;
	КонецЕсли;
	Если П12Н <> 0 ИЛИ П12К <> 0 Тогда	
		НоваяСтрока = Таблица.Добавить();
		НоваяСтрока.Порядок              = 12;        
		НоваяСтрока.Раздел               = "Запасы, в т.ч.";
		НоваяСтрока.Подраздел            = "Брак в производстве";
		НоваяСтрока.СуммаНаНачалоПериода = П12Н;
		НоваяСтрока.СуммаНаКонецПериода  = П12К;
	КонецЕсли;
	Если П13Н <> 0 ИЛИ П13К <> 0 Тогда
		НоваяСтрока = Таблица.Добавить();
		НоваяСтрока.Порядок              = 13;
		НоваяСтрока.Раздел               = "Недостачи к взысканию";
		НоваяСтрока.Подраздел            = NULL;
		НоваяСтрока.СуммаНаНачалоПериода = П13Н;
		НоваяСтрока.СуммаНаКонецПериода  = П13К;
	КонецЕсли;
	
	ИтогоСуммаНаНачалоПериода = Таблица.Итог("СуммаНаНачалоПериода");
	ИтогоСуммаНаКонецПериода  = Таблица.Итог("СуммаНаКонецПериода");
	
	МаксСуммаНаНачало = 0;
	МаксСуммаНаКонец  = 0;
	Для Каждого СтрокаТаблицы Из Таблица Цикл
		Если МаксСуммаНаНачало < СтрокаТаблицы.СуммаНаНачалоПериода Тогда
			ИндексСтрокиМаксСуммаНаНачало = Таблица.Индекс(СтрокаТаблицы);
			МаксСуммаНаНачало = СтрокаТаблицы.СуммаНаНачалоПериода;
		КонецЕсли;
		Если МаксСуммаНаКонец < СтрокаТаблицы.СуммаНаКонецПериода Тогда
			ИндексСтрокиМаксСуммаНаКонец = Таблица.Индекс(СтрокаТаблицы);
			МаксСуммаНаКонец = СтрокаТаблицы.СуммаНаКонецПериода;
		КонецЕсли;
		Если ИтогоСуммаНаНачалоПериода = 0 Тогда
			СтрокаТаблицы.УдельныйВесНаНачалоПериода = 0;
		Иначе
			СтрокаТаблицы.УдельныйВесНаНачалоПериода =  Окр(СтрокаТаблицы.СуммаНаНачалоПериода / ИтогоСуммаНаНачалоПериода * 100, 1);
		КонецЕсли;
		Если ИтогоСуммаНаКонецПериода = 0 Тогда
			СтрокаТаблицы.УдельныйВесНаНачалоПериода = 0;
		Иначе 
			СтрокаТаблицы.УдельныйВесНаКонецПериода  = Окр(СтрокаТаблицы.СуммаНаКонецПериода / ИтогоСуммаНаКонецПериода * 100, 1);
		КонецЕсли;	
	КонецЦикла;
	
	
	Остаток = 100 - Таблица.Итог("УдельныйВесНаНачалоПериода");
	Если Остаток <> 0 И ИндексСтрокиМаксСуммаНаНачало <> Неопределено Тогда
		Таблица[ИндексСтрокиМаксСуммаНаНачало].УдельныйВесНаНачалоПериода = Таблица[ИндексСтрокиМаксСуммаНаНачало].УдельныйВесНаНачалоПериода + Остаток;
	КонецЕсли;
	
	Остаток = 100 - Таблица.Итог("УдельныйВесНаКонецПериода");
	Если Остаток <> 0 И ИндексСтрокиМаксСуммаНаКонец <> Неопределено Тогда
		Таблица[ИндексСтрокиМаксСуммаНаКонец].УдельныйВесНаКонецПериода = Таблица[ИндексСтрокиМаксСуммаНаКонец].УдельныйВесНаКонецПериода + Остаток;
	КонецЕсли;
	
	Возврат Таблица;
	
КонецФункции

Процедура ДобавитьЗаписьВТаблицуРасшифровки(Знак, Счет, Сумма, ВидРесурса, Субконто1, Субконто2 = Неопределено, БухВидРесурса)
	
	СтруктураПараметр = СтандартныеОтчеты.ПолучитьОписаниеСтруктурыПараметра();
	
	Если Сумма <> 0 Тогда
		СтруктураПараметр.Знак          = Знак;
		СтруктураПараметр.Счет          = Счет;
		СтруктураПараметр.Сумма         = Сумма;
		СтруктураПараметр.Субконто1     = Субконто1;
		СтруктураПараметр.Субконто2     = Субконто2;
		СтруктураПараметр.ВидРесурса    = ВидРесурса;
		СтруктураПараметр.БухВидРесурса = БухВидРесурса;
		СтандартныеОтчеты.ДобавитьЗаписьВТаблицуПромежуточныеДанные(ПромежуточныеДанные, СтруктураПараметр);
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьЗадолженностьПокупателей(Период, Организация, ВидРесурса)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.Счет,
	|	ВложенныйЗапрос.Сумма КАК Сумма,
	|	ВложенныйЗапрос.Знак,
	|	ВложенныйЗапрос.БухВидРесурса,
	|	ВложенныйЗапрос.Субконто1
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДолгПокупателей.Счет КАК Счет,
	|		СУММА(ДолгПокупателей.СуммаРазвернутыйОстатокДт) КАК Сумма,
	|		""+"" КАК Знак,
	|		""Дт"" КАК БухВидРесурса,
	|		""Задолженность покупателей"" КАК Субконто1,
	|		ДолгПокупателей.Субконто1 КАК Субконто11,
	|		ДолгПокупателей.Субконто2 КАК Субконто2
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.Остатки(
	|				&Период,
	|				(НЕ Счет.Забалансовый)
	|					И (НЕ Счет В ИЕРАРХИИ (&ИсключенныеСчета)),
	|				&ВидыСубконтоКД,
	|				Субконто2.ВидДоговора В (ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СПокупателем), ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомиссионером))
	|					И Организация = &Организация) КАК ДолгПокупателей
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ДолгПокупателей.Субконто2,
	|		ДолгПокупателей.Счет,
	|		ДолгПокупателей.Субконто1) КАК ВложенныйЗапрос
	|ИТОГИ
	|	СУММА(Сумма)
	|ПО
	|	ОБЩИЕ";
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Организация = &Организация", "");
	КонецЕсли;
	
	ВидыСубконтоКД = Новый СписокЗначений;
	ВидыСубконтоКД.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	ВидыСубконтоКД.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	Запрос.УстановитьПараметр("ВидыСубконтоКД"   , ВидыСубконтоКД);
	Запрос.УстановитьПараметр("Период"           , Период);
	Запрос.УстановитьПараметр("Организация"      , Организация);
	Запрос.УстановитьПараметр("ИсключенныеСчета" , СтандартныеОтчеты.ПолучитьСписокСчетовИсключаемыхИзРасчетаЗадолженности(1));

	Результат = Запрос.Выполнить();
	Задолженность = 0;
	
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Выборка.Следующий();
		Задолженность = Окр(Выборка.Сумма);
		
		ВыборкаДетали = Выборка.Выбрать();
		Пока ВыборкаДетали.Следующий() Цикл
			ДобавитьЗаписьВТаблицуРасшифровки(ВыборкаДетали.Знак, ВыборкаДетали.Счет, ВыборкаДетали.Сумма, ВидРесурса, ВыборкаДетали.Субконто1,, ВыборкаДетали.БухВидРесурса);	
		КонецЦикла;	
	КонецЕсли;
	
	Возврат Задолженность;
	
КонецФункции

Функция ПолучитьДенежныеСредства(Период, Организация, ВидРесурса)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ СчетаУчета
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	(Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Касса))
	|				И (НЕ Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДенежныеДокументы)))
	|				И (НЕ Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДенежныеДокументыВал)))
	|			ИЛИ (Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетныеСчета))
	|				ИЛИ Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВалютныеСчета))
	|				ИЛИ Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.СпециальныеСчета))
	|				ИЛИ Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПереводыВПути_))
	|					И (НЕ Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПриобретениеИностраннойВалюты)))
	|					И (НЕ Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПродажиПоПлатежнымКартам)))
	|					И (НЕ Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РеализацияИностраннойВалюты)))))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ХозрасчетныйОстатки.Счет КАК Счет,
	|	ХозрасчетныйОстатки.СуммаОстатокДт КАК Сумма,
	|	""+"" КАК Знак,
	|	""Дт"" КАК БухВидРесурса,
	|	""Денежные средства"" КАК Субконто1
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&Период,
	|			Счет В
	|				(ВЫБРАТЬ
	|					СчетаУчета.Счет
	|				ИЗ
	|					СчетаУчета КАК СчетаУчета),
	|			,
	|			Организация = &Организация) КАК ХозрасчетныйОстатки
	|ИТОГИ
	|	СУММА(Сумма)
	|ПО
	|	ОБЩИЕ";
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Организация = &Организация", "");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Период"           , Период);
	Запрос.УстановитьПараметр("Организация"      , Организация);

	Результат = Запрос.Выполнить();
	ОстатокДС = 0;
	
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Выборка.Следующий();
		ОстатокДС = Выборка.Сумма;
		
		ВыборкаДетали = Выборка.Выбрать();
		Пока ВыборкаДетали.Следующий() Цикл
			ДобавитьЗаписьВТаблицуРасшифровки(ВыборкаДетали.Знак, ВыборкаДетали.Счет, ВыборкаДетали.Сумма, ВидРесурса, ВыборкаДетали.Субконто1,, ВыборкаДетали.БухВидРесурса);	
		КонецЦикла;	
	КонецЕсли;
	
	Возврат ОстатокДС;
	
КонецФункции

Функция ПолучитьИтог(Счет, Выборка, ВидИтога)
	
	Итог = 0;
	
	Выборка.Сбросить();
	Если Выборка.НайтиСледующий(Счет, "Счет") Тогда
		Итог = Выборка[ВидИтога];	
	КонецЕсли;
	
	Возврат Итог;
	
КонецФункции

Функция ПолучитьВыборкуПоСчету(ВидОстатков, НачалоПериода, КонецПериода, Организация, Счета = Неопределено, ВидыСубконто = Неопределено)
	
	Запрос = Новый Запрос;
	
	СтрокаПоля = "";
	СтрокаИтог = "";
	Если ВидОстатков = 0 Тогда
		СтрокаПоля = "ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт КАК СуммаНачальныйОстатокДт,
		|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт КАК СуммаНачальныйОстатокКт,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт КАК СуммаКонечныйОстатокДт,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт КАК СуммаКонечныйОстатокКт";	
		
		СтрокаИтог = "СУММА(СуммаНачальныйОстатокДт),
		|	СУММА(СуммаНачальныйОстатокКт),
		|	СУММА(СуммаКонечныйОстатокДт),
		|	СУММА(СуммаКонечныйОстатокКт)";
	ИначеЕсли ВидОстатков = 1 Тогда 
		СтрокаПоля = "ХозрасчетныйОстаткиИОбороты.СуммаНачальныйРазвернутыйОстатокДт КАК СуммаНачальныйРазвернутыйОстатокДт,
		|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйРазвернутыйОстатокКт КАК СуммаНачальныйРазвернутыйОстатокКт,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйРазвернутыйОстатокДт КАК СуммаКонечныйРазвернутыйОстатокДт,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйРазвернутыйОстатокКт КАК СуммаКонечныйРазвернутыйОстатокКт";	
		
		СтрокаИтог = "СУММА(СуммаНачальныйРазвернутыйОстатокДт),
		|	СУММА(СуммаНачальныйРазвернутыйОстатокКт),
		|	СУММА(СуммаКонечныйРазвернутыйОстатокДт),
		|	СУММА(СуммаКонечныйРазвернутыйОстатокКт)";
	ИначеЕсли ВидОстатков = 2 Тогда
		СтрокаПоля = "ХозрасчетныйОстаткиИОбороты.СуммаНачальныйРазвернутыйОстатокДт КАК СуммаНачальныйРазвернутыйОстатокДт,
		|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйРазвернутыйОстатокКт КАК СуммаНачальныйРазвернутыйОстатокКт,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйРазвернутыйОстатокДт КАК СуммаКонечныйРазвернутыйОстатокДт,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйРазвернутыйОстатокКт КАК СуммаКонечныйРазвернутыйОстатокКт,
		|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт КАК СуммаНачальныйОстатокДт,
		|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт КАК СуммаНачальныйОстатокКт,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт КАК СуммаКонечныйОстатокДт,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт КАК СуммаКонечныйОстатокКт";	
		
		СтрокаИтог = "СУММА(СуммаНачальныйРазвернутыйОстатокДт),
		|	СУММА(СуммаНачальныйРазвернутыйОстатокКт),
		|	СУММА(СуммаКонечныйРазвернутыйОстатокДт),
		|	СУММА(СуммаКонечныйРазвернутыйОстатокКт),
		|	СУММА(СуммаНачальныйОстатокДт),
		|	СУММА(СуммаНачальныйОстатокКт),
		|	СУММА(СуммаКонечныйОстатокДт),
		|	СУММА(СуммаКонечныйОстатокКт)";
	КонецЕсли;
	СтрокаСубконто = "";
	СтрокаУсловие = "&НачалоПериода, &КонецПериода, , , Счет В ИЕРАРХИИ (&Счета), &ВидыСубконто, Организация = &Организация";
	Если Счета = Неопределено Тогда
		СтрокаУсловие = СтрЗаменить(СтрокаУсловие, "Счет В ИЕРАРХИИ (&Счета)", "");
	КонецЕсли;
	Если ВидыСубконто = Неопределено Тогда
		СтрокаУсловие = СтрЗаменить(СтрокаУсловие, "&ВидыСубконто", "");
	Иначе
		Для Индекс = 1 По ВидыСубконто.Количество() Цикл
			СтрокаСубконто = СтрокаСубконто + "ХозрасчетныйОстаткиИОбороты.Субконто" + Индекс + ", ";	
		КонецЦикла;
	КонецЕсли;
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ХозрасчетныйОстаткиИОбороты.Счет КАК Счет,"
	+ СтрокаСубконто + "" 
	+ СтрокаПоля + 
	" ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(" + СтрокаУсловие + ") КАК ХозрасчетныйОстаткиИОбороты
	|ИТОГИ " 
	+ СтрокаИтог + 
	"
	|ПО
	|	Счет ИЕРАРХИЯ";
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Организация = &Организация", "");	
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ВидыСубконто",  ВидыСубконто);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Если КонецПериода <> '00010101000000' Тогда
		Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
	Иначе
		Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	КонецЕсли;
	Запрос.УстановитьПараметр("Организация",   Организация);
	Запрос.УстановитьПараметр("Счета", Счета);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаПоСчету = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Возврат ВыборкаПоСчету;
	
КонецФункции

// Для настройки отчета (расшифровка и др.)
Процедура Настроить(Отбор, КомпоновщикНастроекОсновногоОтчета = Неопределено) Экспорт
	
	ТиповыеОтчеты.НастроитьТиповойОтчет(ЭтотОбъект, Отбор, КомпоновщикНастроекОсновногоОтчета);
	
КонецПроцедуры

Процедура СохранитьНастройку() Экспорт
	
	СтандартныеОтчеты.СохранитьНастройку(ЭтотОбъект);
	
КонецПроцедуры

// Процедура заполняет параметры отчета по элементу справочника из переменной СохраненнаяНастройка.
Процедура ПрименитьНастройку() Экспорт
	
	Если СохраненнаяНастройка.Пустая() Тогда
		Возврат;
	КонецЕсли;
	 
	СтруктураПараметров = СохраненнаяНастройка.ХранилищеНастроек.Получить();
	ТиповыеОтчеты.ПрименитьСтруктуруПараметровОтчета(ЭтотОбъект, СтруктураПараметров);
	
КонецПроцедуры

Процедура ИнициализацияОтчета() Экспорт
	
	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "НачалоПериода", НачалоПериода);
	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "КонецПериода",  КонецПериода);
	
КонецПроцедуры

Расшифровки = Новый СписокЗначений;

НастройкаПериода = Новый НастройкаПериода;

#КонецЕсли
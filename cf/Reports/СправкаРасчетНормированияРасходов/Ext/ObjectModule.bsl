#Если Клиент Тогда
	
	Перем НП Экспорт;
	
	Функция СформироватьТекстЗапроса()
		
		Текст	= "ВЫБРАТЬ
		     	  |	РасчетНормированияРасходов.ПериодРасчета КАК Период,
		     	  |	РасчетНормированияРасходов.ЗатратыГод КАК ЗатратыГод,
		     	  |	РасчетНормированияРасходов.РасходыГод КАК РасходыГод,
		     	  |	РасчетНормированияРасходов.РасходыМесяц КАК РасходыМесяц,
		     	  |	РасчетНормированияРасходов.РазницыГод КАК РазницыГод,
		     	  |	РасчетНормированияРасходов.РазницыМесяц КАК РазницыМесяц,
		     	  |	ЕСТЬNULL(РасчетНормированияРасходов.СуммаБазы, 0) КАК СуммаБазы,
		     	  |	РасчетНормированияРасходов.ВидОперации КАК ВидОперации
		     	  |ИЗ
		     	  |	РегистрСведений.РасчетНормированияРасходов КАК РасчетНормированияРасходов
		     	  |ГДЕ
		     	  |	РасчетНормированияРасходов.Активность
		     	  |	И РасчетНормированияРасходов.Организация = &Организация
		     	  |	И РасчетНормированияРасходов.ВидОперации В(&ВидОперации)
		     	  |	И РасчетНормированияРасходов.ПериодРасчета МЕЖДУ &ДатаНач И &ДатаКон
		     	  |
		     	  |УПОРЯДОЧИТЬ ПО
		     	  |	Период
		     	  |ИТОГИ
		     	  |	СУММА(ЗатратыГод),
		     	  |	СУММА(РасходыГод),
		     	  |	СУММА(РасходыМесяц),
		     	  |	СУММА(РазницыГод),
		     	  |	СУММА(РазницыМесяц)
		     	  |ПО
		     	  |	Период,
		     	  |	ВидОперации,
		     	  |	СуммаБазы";
		
		Возврат Текст;
		
	КонецФункции
	
	// Выполняет запрос и формирует табличный документ-результат отчета
	// в соответствии с настройками, заданными значениями реквизитов отчета.
	//
	// Параметры:
	//	ДокументРезультат - табличный документ, формируемый отчетом
	//	ПоказыватьЗаголовок - признак видимости строк с заголовком отчета
	//	ВысотаЗаголовка - параметр, через который возвращается высота заголовка в строках 
	//
	Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок = Ложь, НачалоПодписи, ПоказыватьПодписи) Экспорт
		
	ДатаНач = НачалоМесяца(ПериодРегистрации);
	ДатаКон  = КонецМесяца(ПериодРегистрации);
	Если ДатаНач > ДатаКон И ДатаКон <> '00010101000000' Тогда
		Предупреждение("Дата начала периода не может быть больше даты окончания периода");
		Возврат;
	КонецЕсли;
		НачалоПериода = НачалоДня(ДатаНач);
		КонецПериода  = КонецДня(ДатаКон);
		ВидыОпераций  = Новый Массив;
		Для Индекс = 0 По ВариантОтчета.Количество() - 1 Цикл
			Вариант = ВариантОтчета.Получить(Индекс);
			Если Вариант.Пометка Тогда
				ВидыОпераций.Добавить(Вариант.Значение);
			КонецЕсли;
		КонецЦикла;
		
		ДокументРезультат.Очистить();
		
		МакетОбщий = ПолучитьОбщийМакет("СправкаРасчет");
		Макет      = ПолучитьМакет("Отчет");
		
		ЗаголовокОтчета = МакетОбщий.ПолучитьОбласть("Заголовок");
		
		// Когда нужен только заголовок:
		Если ТолькоЗаголовок Тогда
			Возврат;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ВысотаЗаголовка) Тогда
			ДокументРезультат.Область("R1:R" + ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ДатаНач",     НачалоДня(ДатаНач));
		Запрос.УстановитьПараметр("ДатаКон",     КонецДня(ДатаКон));
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("ВидОперации", ВидыОпераций);
		
		ОграниченияПоПостроителюОтчета = СтандартныеОтчеты.ПолучитьТекстОграниченийПоПостроителюОтчета(ПостроительОтчета, Запрос);
		
		Запрос.Текст = СформироватьТекстЗапроса();
		
		ОбластьШапка            = Макет.ПолучитьОбласть("Шапка");
		ОбластьСтрока           = Макет.ПолучитьОбласть("Строка");
		
		ОбластьПодвал           = МакетОбщий.ПолучитьОбласть("Подвал");
		ОбластьОкончание        = Макет.ПолучитьОбласть("ОкончаниеТаблицы");
		
		Результат = Запрос.Выполнить();
		ВыборкаПериод = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Всего = 0;
		
		Пока ВыборкаПериод.Следующий() Цикл
			
			ЗаголовокОтчета.Параметры.Период              = "" + ПредставлениеПериода(НачалоМесяца(ВыборкаПериод.Период), КонецМесяца(ВыборкаПериод.Период), "ФП = Истина");
			СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация);
			НазваниеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм");
			ЗаголовокОтчета.Параметры.НазваниеОрганизации = НазваниеОрганизации;
			ЗаголовокОтчета.Параметры.ДатаСоставления     = КонецМесяца(ВыборкаПериод.Период);
			ЗаголовокОтчета.Параметры.НазваниеОтчета      = "Включение в состав расходов для целей налогообложения прибыли затрат, порядок признания которых предусматривает ограничения";
			ДокументРезультат.Вывести(ЗаголовокОтчета);
			ДокументРезультат.Вывести(ОбластьШапка);
			
			// Параметр для показа заголовка
			ВысотаЗаголовка = ДокументРезультат.ВысотаТаблицы;
			ВыборкаВидаОперации = ВыборкаПериод.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаВидаОперации.Следующий() Цикл
				ВидОперации = ВыборкаВидаОперации.ВидОперации;
			ВыборкаОперации = ВыборкаВидаОперации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаОперации.Следующий() Цикл
				
				Если  ВыборкаОперации.ЗатратыГод = 0 И ВыборкаОперации.РасходыГод = 0 И ВыборкаОперации.РасходыМесяц = 0 Тогда
					Продолжить;
				КонецЕсли;
				
				Если ВидОперации = Перечисления.ВидыРасходовНУ.РасходыНаРекламуНормируемые Тогда
					ВидРасхода = "Расходы на рекламу";
					БазаНормирования = "не более 1% выручки от реализации (" + ВыборкаОперации.СуммаБазы + " руб.) (п.42 ст.264)";
					СуммаБазы = ВыборкаОперации.СуммаБазы * 0.01;
				ИначеЕсли ВидОперации = Перечисления.ВидыРасходовНУ.ПредставительскиеРасходы Тогда	
					ВидРасхода = "Представительские расходы";
					БазаНормирования = "не более 4% от суммы расходов по оплате труда (" + ВыборкаОперации.СуммаБазы + " руб.) (п.2 ст.264)";
					СуммаБазы = ВыборкаОперации.СуммаБазы * 0.04;
				ИначеЕсли ВидОперации = Перечисления.ВидыРасходовНУ.ДобровольноеЛичноеСтрахование Тогда	
					ВидРасхода = "Расходы на добровольное личное страхование, предусматривающее оплату страховщиками медицинских расходов";
						БазаНормирования = "не более 6% от суммы расходов по оплате труда (" + ВыборкаОперации.СуммаБазы + " руб.) (п.16 ст.255)";
						СуммаБазы = ВыборкаОперации.СуммаБазы * 0.06;
				ИначеЕсли ВидОперации = Перечисления.ВидыРасходовНУ.ДобровольноеСтрахованиеПоДоговорамДолгосрочногоСтрахованияЖизниРаботников Тогда	
					ВидРасхода = "Расходы на добровольное страхование по договорам долгосрочного страхования жизни работников, пенсионного страхования и (или) негосударственного пенсионного обеспечения работников";
					БазаНормирования = "не более 12% от суммы расходов по оплате труда (" + ВыборкаОперации.СуммаБазы  + " руб.) (п.16 ст.255)";
					СуммаБазы = ВыборкаОперации.СуммаБазы * 0.12;
				ИначеЕсли ВидОперации = Перечисления.ВидыРасходовНУ.РасходыНаВозмещениеЗатратРаботниковПоУплатеПроцентов Тогда	
					ВидРасхода = "Расходы на возмещение затрат работников по уплате процентов";
					БазаНормирования = "не более 3% от суммы расходов по оплате труда (" + ВыборкаОперации.СуммаБазы  + " руб.) (п.24.1 ст.255)";
					СуммаБазы = ВыборкаОперации.СуммаБазы * 0.03;
				ИначеЕсли ВидОперации = Перечисления.ВидыРасходовНУ.ДобровольноеЛичноеСтрахованиеНаСлучайСмертиИлиУтратыРаботоспособности Тогда	
					ВидРасхода = "Расходы на добровольное личное страхование на случай наступления смерти или утраты трудоспособности";
					БазаНормирования = "не более 10 000 руб. от суммы расходов по оплате труда на каждого застрахованного сотрудника для правоотношений, возникших до 31.12.2006, и не более 15 000 руб. - для правоотношений, возникших после 1.01.2007 (п.16 ст.255)";
					СуммаБазы = ВыборкаОперации.СуммаБазы;
				КонецЕсли;	
				
					ОбластьСтрока.Параметры.ВидРасхода  = ВидРасхода;
					ОбластьСтрока.Параметры.БазаНормирования = БазаНормирования;
					ОбластьСтрока.Параметры.СуммаБазы    = СуммаБазы;
					ОбластьСтрока.Параметры.ЗатратыГод   = ВыборкаОперации.ЗатратыГод;
					ОбластьСтрока.Параметры.РасходыГод   = ВыборкаОперации.РасходыГод;
					ОбластьСтрока.Параметры.РасходыМесяц = ВыборкаОперации.РасходыМесяц;
					ОбластьСтрока.Параметры.Доля = ?(ВыборкаОперации.ЗатратыГод - ВыборкаОперации.РасходыГод + ВыборкаОперации.РасходыМесяц = 0, 0, Окр(ВыборкаОперации.РасходыМесяц / (ВыборкаОперации.ЗатратыГод - ВыборкаОперации.РасходыГод + ВыборкаОперации.РасходыМесяц), 8));
					ОбластьСтрока.Параметры.РазницыГод   = ВыборкаОперации.РазницыГод;
					ОбластьСтрока.Параметры.РазницыМесяц = ВыборкаОперации.РазницыМесяц;
					ОбластьСтрока.Параметры.РасходыПрошлыеМесяцы = ВыборкаОперации.РасходыГод - ВыборкаОперации.РасходыМесяц;
					ОбластьСтрока.Параметры.РазницыПрошлыеМесяцы = ВыборкаОперации.РазницыГод - ВыборкаОперации.РазницыМесяц;
					ДокументРезультат.Вывести(ОбластьСтрока);
					
			КонецЦикла;	
			КонецЦикла;
			ДокументРезультат.Вывести(ОбластьОкончание);
		
			ДокументРезультат.Вывести(ОбластьПодвал);
			
			ВысотаПодписи = ДокументРезультат.Области.Подвал.Низ - ДокументРезультат.Области.Подвал.Верх;
			
			ДокументРезультат.Области.Подвал.Видимость = ПоказыватьПодписи;
			
		КонецЦикла;    // Период	
		
		// Первую колонку не печатаем
		ДокументРезультат.ОбластьПечати = ДокументРезультат.Область(1,2,ДокументРезультат.ВысотаТаблицы,ДокументРезультат.ШиринаТаблицы);
		
		// Присвоим имя для сохранения параметров печати табличного документа
		ДокументРезультат.ИмяПараметровПечати = "Нормирование расходов";
		
		УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(ДокументРезультат, ЗаголовокОтчета, Строка(глЗначениеПеременной("глТекущийПользователь")));
		
	КонецПроцедуры // СформироватьОтчет
	
	////////////////////////////////////////////////////////////////////////////////
	// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
	// 
Процедура ЗаполнитьНачальныеНастройки() Экспорт
	
	СтарыеНастройки = УправлениеОтчетами.ПолучитьКопиюОтбораВТЗ(ПостроительОтчета.Отбор);
	
КонецПроцедуры
	
	НП = Новый НастройкаПериода;
	
#КонецЕсли
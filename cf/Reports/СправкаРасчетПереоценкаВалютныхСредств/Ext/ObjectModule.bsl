#Если Клиент Тогда
	
	Перем НП Экспорт;
	
	Функция СформироватьТекстЗапроса()
		
		Текст	= "ВЫБРАТЬ РАЗЛИЧНЫЕ
		     	  |	РасчетПереоценкиВалютныхСредств.ПериодРасчета КАК Период,
		     	  |	РасчетПереоценкиВалютныхСредств.Счет КАК СчетУчета,
		     	  |	РасчетПереоценкиВалютныхСредств.Валюта КАК Валюта,
		     	  |	РасчетПереоценкиВалютныхСредств.Субконто1,
		     	  |	РасчетПереоценкиВалютныхСредств.Субконто2,
		     	  |	РасчетПереоценкиВалютныхСредств.Субконто3,
		     	  |	ЕСТЬNULL(РасчетПереоценкиВалютныхСредств.СуммаВВалюте, 0) КАК СуммаВВалюте,
		     	  |	ЕСТЬNULL(РасчетПереоценкиВалютныхСредств.СуммаВРублях, 0) КАК СуммаВРублях,
		     	  |	ЕСТЬNULL(РасчетПереоценкиВалютныхСредств.Сумма, 0) КАК Сумма,
		     	  |	ЕСТЬNULL(РасчетПереоценкиВалютныхСредств.СуммаВРубляхНУ, 0) КАК СуммаВРубляхНУ,
		     	  |	ЕСТЬNULL(РасчетПереоценкиВалютныхСредств.СуммаНУ, 0) КАК СуммаНУ,
		     	  |	ЕСТЬNULL(РасчетПереоценкиВалютныхСредств.СуммаВРубляхПР, 0) КАК СуммаВРубляхПР,
		     	  |	ЕСТЬNULL(РасчетПереоценкиВалютныхСредств.СуммаПР, 0) КАК Суммапр,
		     	  |	ЕСТЬNULL(РасчетПереоценкиВалютныхСредств.СуммаВРубляхВР, 0) КАК СуммаВРубляхВР,
		     	  |	ЕСТЬNULL(РасчетПереоценкиВалютныхСредств.СуммаВР, 0) КАК СуммаВР,
		     	  |	ЕСТЬNULL(РасчетПереоценкиВалютныхСредств.КурсПереоценки, 0) КАК КурсПереоценки
		     	  |ИЗ
		     	  |	РегистрСведений.РасчетПереоценкиВалютныхСредств КАК РасчетПереоценкиВалютныхСредств
		     	  |ГДЕ
		     	  |	РасчетПереоценкиВалютныхСредств.ПериодРасчета МЕЖДУ &ДатаНач И &ДатаКон
		     	  |	И РасчетПереоценкиВалютныхСредств.Организация = &Организация
		     	  |	И РасчетПереоценкиВалютныхСредств.Активность
		     	  |	И РасчетПереоценкиВалютныхСредств.ПериодРасчета МЕЖДУ &ДатаНач И &ДатаКон
		     	  |
		     	  |УПОРЯДОЧИТЬ ПО
		     	  |	Период,
		     	  |	СчетУчета
		     	  |ИТОГИ
		     	  |	СУММА(Сумма)
		     	  |ПО
		     	  |	Период,
		     	  |	СчетУчета,
		     	  |	Валюта";
		
		Возврат Текст;
		
	КонецФункции
	
	// Выполняет запрос и формирует табличный документ-результат отчета
	// в соответствии с настройками, заданными значениями реквизитов отчета.
	//
	// Параметры:
	//	ДокументРезультат - табличный документ, формируемый отчетом
	//	ПоказыватьЗаголовок - признак видимости строк с заголовком отчета
	//	ВысотаЗаголовка - параметр, через который возвращается высота заголовка в строках 
	//
Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок = Ложь, НачалоПодписи, ПоказыватьПодписи) Экспорт
		
		ДатаНач = НачалоМесяца(ПериодРегистрации);
		ДатаКон  = КонецМесяца(ПериодРегистрации);
		Если ДатаНач > ДатаКон И ДатаКон <> '00010101000000' Тогда
			Предупреждение("Дата начала периода не может быть больше даты окончания периода");
			Возврат;
		КонецЕсли;
		
		НачалоПериода = НачалоДня(ДатаНач);
		КонецПериода  = КонецДня(ДатаКон);
		
		ДокументРезультат.Очистить();
		
		Макет      = ПолучитьМакет("Отчет");
		МакетОбщий = ПолучитьОбщийМакет("СправкаРасчет");
		
		ЗаголовокОтчета = МакетОбщий.ПолучитьОбласть("Заголовок");
		ШапкаОтчета     = Макет.ПолучитьОбласть("Шапка");
		
		// Когда нужен только заголовок:
		Если ТолькоЗаголовок Тогда
			Возврат;
		КонецЕсли;
		
		//Если ЗначениеЗаполнено(ВысотаЗаголовка) Тогда
		//	ДокументРезультат.Область("R1:R" + ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;
		//КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ДатаНач",     НачалоДня(ДатаНач));
		Запрос.УстановитьПараметр("ДатаКон",     КонецДня(ДатаКон));
		Запрос.УстановитьПараметр("Организация", Организация);
		
		ОграниченияПоПостроителюОтчета = СтандартныеОтчеты.ПолучитьТекстОграниченийПоПостроителюОтчета(ПостроительОтчета, Запрос);
		
		Если Не ПустаяСтрока(ОграниченияПоПостроителюОтчета) Тогда
			
			ОграниченияПоПостроителюОтчета = " И " + ОграниченияПоПостроителюОтчета;
			
		КонецЕсли;
		
		Запрос.Текст = СформироватьТекстЗапроса();
		
		Запрос.Текст  = СтрЗаменить(Запрос.Текст, ".Активность",".Активность " + ОграниченияПоПостроителюОтчета);
		
		
		Результат = Запрос.Выполнить();
		
		ОбластьШапка            = Макет.ПолучитьОбласть("Шапка");
		ОбластьСтрока           = Макет.ПолучитьОбласть("Строка");
		ОбластьИтого            = Макет.ПолучитьОбласть("Итого");
		ОбластьОкончаниеТаблицы = Макет.ПолучитьОбласть("ОкончаниеТаблицы");
		
		ОбластьПодвал             = МакетОбщий.ПолучитьОбласть("Подвал");
		
		ВыборкаПериод = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Всего = 0;
		
		Пока ВыборкаПериод.Следующий() Цикл
			
			ЗаголовокОтчета.Параметры.Период              = "" + ПредставлениеПериода(НачалоМесяца(ВыборкаПериод.Период), КонецМесяца(ВыборкаПериод.Период), "ФП = Истина");
			СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация);
			НазваниеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм");
			ЗаголовокОтчета.Параметры.НазваниеОрганизации = НазваниеОрганизации;
			ЗаголовокОтчета.Параметры.ДатаСоставления     = КонецМесяца(ВыборкаПериод.Период);
			ЗаголовокОтчета.Параметры.НазваниеОтчета      = "Переоценка активов и обязательств, выраженных в иностранной валюте" +?(ВариантОтчета = 2, " (налоговый учет)", ?(ВариантОтчета = 3, " (для расчета разниц)", " (бухгалтерский учет)"));
			Если ПоказыватьЗаголовок Тогда
				ДокументРезультат.Вывести(ЗаголовокОтчета);
			КонецЕсли;
			
			СтрОтбор = УправлениеОтчетами.СформироватьСтрокуОтборов(ПостроительОтчета.Отбор);
			Если Не ПустаяСтрока(СтрОтбор) Тогда
				ОбластьОтбор = МакетОбщий.ПолучитьОбласть("СтрокаОтбор");
				ОбластьОтбор.Параметры.ТекстПроОтбор = "Отбор: " + СтрОтбор;
				ДокументРезультат.Вывести(ОбластьОтбор);
			КонецЕсли;
			
			// Параметр для показа заголовка
		    ШапкаОтчета.Параметры.Текст = "Сумма переоценки в руб.
			|(гр.7 - гр.5)" + ?(ВариантОтчета = 3, "
			|для разниц (гр.8 БУ - гр.8 НУ)" ,"");
			ДокументРезультат.Вывести(ШапкаОтчета);
			ВысотаЗаголовка = ДокументРезультат.ВысотаТаблицы;
			
			ИтогСуммаДо         = 0;
			ИтогПереоценка      = 0;
			ИтогПереоценкаПлюс  = 0;
			ИтогПереоценкаМинус = 0;
			ИтогПереоценкаР      = 0;
			ИтогПереоценкаПлюсР  = 0;
			ИтогПереоценкаМинусР = 0;
			ИтогПереоценкаНУ      = 0;
			ИтогПереоценкаПлюсНУ  = 0;
			ИтогПереоценкаМинусНУ = 0;	
			
			ТекстНУ = ?(ВариантОтчета = 3, "НУ:", "");
			ТекстПР = ?(ВариантОтчета = 3, "ПР:", "");
			ТекстВР = ?(ВариантОтчета = 3, "ВР:", "");
				
			
			ВыборкаСчетУчета = ВыборкаПериод.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаСчетУчета.Следующий() Цикл
				
				ВыборкаВалюта = ВыборкаСчетУчета.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				Пока ВыборкаВалюта.Следующий() Цикл
					
					Выборка = ВыборкаВалюта.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					
					Пока Выборка.Следующий() Цикл
						
						Если ВариантОтчета = 1 Тогда
							Переоценка = Выборка.Сумма;
							ПереоценкаР = 0;
							СуммаВРублях = Выборка.СуммаВРублях;
							ПереоценкаНУ   = 0;
							СуммаВРубляхНУ = 0;
							
							Если Переоценка = 0 Тогда
								Продолжить;
							КонецЕсли;
							
						ИначеЕсли ВариантОтчета = 2 Тогда
							Переоценка = Выборка.СуммаНУ;
							ПереоценкаР = 0;
							СуммаВРублях = Выборка.СуммаВРубляхНУ;
							ПереоценкаНУ   = 0;
							СуммаВРубляхНУ = 0;
							
							Если Переоценка = 0 Тогда
								Продолжить;
							КонецЕсли;
							
						Иначе
							Переоценка = Выборка.Сумма;
							ПереоценкаР = ?(Выборка.СуммаПР > 0, Выборка.СуммаПР, Выборка.СуммаВР);
							ТекстР = ?(Выборка.СуммаПР > 0, ТекстПР, ТекстВР);
							СуммаВРублях = Выборка.СуммаВРублях;
							ПереоценкаНУ = Выборка.СуммаНУ;
							СуммаВРубляхНУ = Выборка.СуммаВРубляхНУ;
							
							Если ПереоценкаР = 0 Тогда
								Продолжить;
							КонецЕсли;
						КонецЕсли;
						
						ПереоценкаПлюс    = ?(Переоценка > 0, Переоценка, 0);
						ПереоценкаМинус   = ?(Переоценка < 0, - Переоценка, 0);
						
						Если ПереоценкаНУ > 0 Тогда
							ПереоценкаПлюсНУ  = ПереоценкаНУ;	
							ПереоценкаМинусНУ = 0;
							ПереоценкаПлюсР  = ПереоценкаР;	
							ПереоценкаМинусР = 0;
						Иначе
							ПереоценкаПлюсНУ  = 0;	
							ПереоценкаМинусНУ = -ПереоценкаНУ;
							ПереоценкаПлюсР  = 0;	
							ПереоценкаМинусР = -ПереоценкаР;
						КонецЕсли;
						
						ОбластьСтрока.Параметры.Валюта = Выборка.Валюта;
						ОбластьСтрока.Параметры.Субконто1 = Выборка.Субконто1;
						ОбластьСтрока.Параметры.Субконто2 = Выборка.Субконто2;
						ОбластьСтрока.Параметры.Субконто3 = Выборка.Субконто3;
						ОбластьСтрока.Параметры.СчетУчета = Выборка.СчетУчета;
						ОбластьСтрока.Параметры.СуммаВвалюте = Выборка.СуммаВвалюте;
						ОбластьСтрока.Параметры.Курс = Выборка.КурсПереоценки;
						ОбластьСтрока.Параметры.СуммаВРублях = СуммаВРублях;
						ОбластьСтрока.Параметры.СуммаВРубляхНУ = СуммаВРубляхНу;
						
						ОбластьСтрока.Параметры.СуммаВРубляхПослеПереоценки = СуммаВРублях + Переоценка;
						ОбластьСтрока.Параметры.СуммаВРубляхПослеПереоценкиНУ = СуммаВРубляхНУ + ПереоценкаНУ;
						ОбластьСтрока.Параметры.Переоценка = Переоценка;
						ОбластьСтрока.Параметры.ПереоценкаПлюс = ПереоценкаПлюс;
						ОбластьСтрока.Параметры.ПереоценкаМинус = ПереоценкаМинус;
						ОбластьСтрока.Параметры.ПереоценкаР = ПереоценкаР;
						ОбластьСтрока.Параметры.ПереоценкаПлюсР = ПереоценкаПлюсР;
						ОбластьСтрока.Параметры.ПереоценкаМинусР = ПереоценкаМинусР;
						ОбластьСтрока.Параметры.ПереоценкаНУ = ПереоценкаНУ;
						ОбластьСтрока.Параметры.ПереоценкаПлюсНУ = ПереоценкаПлюсНУ;
						ОбластьСтрока.Параметры.ПереоценкаМинусНУ = ПереоценкаМинусНУ;
						
						ОбластьСтрока.Параметры.ТекстР = ТекстР;
						ОбластьСтрока.Параметры.ТекстНУ = ТекстНУ;
						
						ДокументРезультат.Вывести(ОбластьСтрока);
												
						ИтогСуммаДо         = ИтогСуммаДо + СуммаВРублях;
						ИтогПереоценка      = ИтогПереоценка + Переоценка;
						ИтогПереоценкаПлюс  = ИтогПереоценкаПлюс + ПереоценкаПлюс;
						ИтогПереоценкаМинус = ИтогПереоценкаМинус + ПереоценкаМинус;
						ИтогПереоценкаР    = ИтогПереоценкаР + ПереоценкаР;
						ИтогПереоценкаНУ    = ИтогПереоценкаНУ + ПереоценкаНУ;
						ИтогПереоценкаПлюсР  = ИтогПереоценкаПлюсР + ПереоценкаПлюсР;
						ИтогПереоценкаМинусР = ИтогПереоценкаМинусР + ПереоценкаМинусР;
						ИтогПереоценкаПлюсНУ  = ИтогПереоценкаПлюсНУ + ПереоценкаПлюсНУ;
						ИтогПереоценкаМинусНУ = ИтогПереоценкаМинусНУ + ПереоценкаМинусНУ;
					КонецЦикла; 
				КонецЦикла;   // валюта
			КонецЦикла;  // счет учета
			
			ОбластьИтого.Параметры.СуммаДО         = ИтогСуммаДо;
			ОбластьИтого.Параметры.СуммаПосле      = ИтогСуммаДо + ИтогПереоценка;
			ОбластьИтого.Параметры.Переоценка      = ИтогПереоценка;
			ОбластьИтого.Параметры.ПереоценкаМинус = ИтогПереоценкаМинус;
			ОбластьИтого.Параметры.ПереоценкаПлюс  = ИтогПереоценкаПлюс;
			ОбластьИтого.Параметры.ПереоценкаР      = ИтогПереоценкаР;
			ОбластьИтого.Параметры.ПереоценкаМинусР = ИтогПереоценкаМинусР;
			ОбластьИтого.Параметры.ПереоценкаПлюсР  = ИтогПереоценкаПлюсР;
			ОбластьИтого.Параметры.ПереоценкаНУ      = ИтогПереоценкаНУ;
			ОбластьИтого.Параметры.ПереоценкаМинусНУ = ИтогПереоценкаМинусНУ;
			ОбластьИтого.Параметры.ПереоценкаПлюсНУ  = ИтогПереоценкаПлюсНУ;
			ОбластьИтого.Параметры.ТекстР = "Разницы:";
			ОбластьИтого.Параметры.ТекстНУ = ТекстНУ;
			
			ДокументРезультат.Вывести(ОбластьИтого);
			
			ДокументРезультат.Вывести(ОбластьОкончаниеТаблицы);
			
			ДокументРезультат.Вывести(ОбластьПодвал);
			
			ВысотаПодписи = ДокументРезультат.Области.Подвал.Низ - ДокументРезультат.Области.Подвал.Верх;
			
			ДокументРезультат.Области.Подвал.Видимость = ПоказыватьПодписи;
			
		КонецЦикла;    // Период	
		
		// Зафиксируем заголовок отчета
			ДокументРезультат.ФиксацияСверху=?(ПустаяСтрока(СтрОтбор),10,11);

		// Первую колонку не печатаем
		ДокументРезультат.ОбластьПечати = ДокументРезультат.Область(1,2,ДокументРезультат.ВысотаТаблицы,ДокументРезультат.ШиринаТаблицы);
		
		// Присвоим имя для сохранения параметров печати табличного документа
		ДокументРезультат.ИмяПараметровПечати = "Переоценка активов и обязательств, выраженных в иностранной валюте";
		
		УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(ДокументРезультат, ЗаголовокОтчета, Строка(глЗначениеПеременной("глТекущийПользователь")));
		
	КонецПроцедуры // СформироватьОтчет
	
Процедура ЗаполнитьНачальныеНастройки() Экспорт
	
	СтарыеНастройки = УправлениеОтчетами.ПолучитьКопиюОтбораВТЗ(ПостроительОтчета.Отбор);
	
	СоотвСубконто = Новый Соответствие;
	
	Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	        |	ХозрасчетныйОбороты.СуммаОборотКт КАК СуммаОборотКт
	        |{ВЫБРАТЬ
	        |	ХозрасчетныйОбороты.Валюта.*}
	        |ИЗ
	        |	РегистрБухгалтерии.Хозрасчетный.Обороты(, , Месяц, Счет В ИЕРАРХИИ (&Счет), , {Валюта.*}, , ) КАК ХозрасчетныйОбороты
	        |ИТОГИ
	        |	СУММА(СуммаОборотКт)
	        |ПО
	        |	ОБЩИЕ
	        |{ИТОГИ ПО
	        |	ХозрасчетныйОбороты.Валюта.*}";

Массив = Новый Массив;
Массив.Добавить(ПланыСчетов.Хозрасчетный.ВалютныеСчета);
ПостроительОтчета.Параметры.Вставить("Счет", Массив);
ПостроительОтчета.Параметры.Вставить("ПустаяОрганизация", Справочники.Организации.ПустаяСсылка());
	
ПостроительОтчета.Текст = Текст;

СоотвСубконто = Новый Соответствие;
СоотвСубконто.Вставить("Валюта",    Справочники.Валюты);

Если ПостроительОтчета.Отбор.Количество() = 0 Тогда
	ПостроительОтчета.Отбор.Добавить("Валюта");
КонецЕсли;

УправлениеОтчетами.УстановитьОтборИзТаблицы(ПостроительОтчета.Отбор, СтарыеНастройки);

КонецПроцедуры
	////////////////////////////////////////////////////////////////////////////////
	// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
	// 
	
	НП = Новый НастройкаПериода;
	
#КонецЕсли
Перем Счет;
Перем Буква;
Перем ИндексТекущейСтраницы;

Перем СформироватьПоМПЗ;
Перем СформироватьПоОтгруженным;
Перем СформироватьПоДоходамРасходам;
Перем СформироватьПоИМР;
Перем СформироватьПоОборотам;
Перем СформироватьПоПрочимРасходам;
Перем СформироватьПоЗарплате;
Перем СформироватьПоОС1;
Перем СформироватьПоНМА;
Перем СформироватьПоРБП;

Перем Запрос;

Перем Обороты;
Перем МПЗ;
Перем НачОстаткиМПЗ;
Перем КонОстаткиМПЗ;
Перем НачОстаткиИМР;
Перем ДоходыИРасходыСводно;
Перем ДоходыИРасходы;
Перем ИМР;
Перем Зарплата;
Перем ЗапросПрочиеРасходы;
Перем ЗапросРБП;
Перем ЗапросОС;
Перем ЗапросНМА;

Перем ЦеныМПЗ;
Перем ЦеныМПЗОтгруженных;
Перем ЦеныИМР;
Перем ПустаяПартия;
Перем НайденнаяПартия;

Перем ТаблицаВыборки;

// Процедура управляет показом в форме периода построения отчета.
//
Процедура ПоказатьПериод()

	СтрПериодОтчета = ПредставлениеПериода(НачалоГода(ДатаНач), КонецДня(ДатаКон), "ФП = Истина" );

	// Покажем период в диалоге
	ЭлементыФормы.НадписьПериодСоставленияОтчета.Заголовок = СтрПериодОтчета;

КонецПроцедуры // ПоказатьПериод()

// Процедура устанавливает границы периода построения отчета.
//
// Параметры:
//  Шаг          - число, количество стандартных периодов, на которое необходимо
//                 сдвигать период построения отчета;
//
Процедура ИзменитьПериод(Шаг)

	ДатаКон = КонецМесяца(ДобавитьМесяц(ДатаКон, Шаг));
	
	Если НЕ СНачалаГода Тогда
		ДатаНач = НачалоГода(ДатаКон);
		
	Иначе
		ДатаНач = НачалоМесяца(ДатаКон);
	КонецЕсли;

	ПоказатьПериод();

КонецПроцедуры // ИзменитьПериод()

Функция ОписаниеПериода(ПечататьНалоговыйПериод = Ложь, СНГ = Ложь)
	
	Если Месяц(ДатаКон) = 12 И НЕ СНачалаГода Тогда
		ОписаниеПериода = ?(ПечататьНалоговыйПериод, "за налоговый период ", "за ") + ПредставлениеПериода(НачалоДня(ДатаНач), КонецДня(ДатаКон), "ФП = Истина");
		
	Иначе
		ОписаниеПериода = "за " + НРег(ПредставлениеПериода(?(СНГ, НачалоГода(ДатаНач), НачалоДня(ДатаНач)), КонецДня(ДатаКон), "ФП = Истина"));
	КонецЕсли;
	
	Возврат ОписаниеПериода;
	
КонецФункции

Функция ЗаполнениеРеквизитовПартии(Выборка, Цены, ПоискПартии)
	
	Если Цены = Неопределено Тогда
		Возврат ПустаяПартия;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ПоискПартии, Выборка);
	СтрокаПартииВТаблицеЦен = Цены.НайтиСтроки(ПоискПартии);
	Если СтрокаПартииВТаблицеЦен.Количество() > 0 Тогда
		ЗаполнитьЗначенияСвойств(НайденнаяПартия, СтрокаПартииВТаблицеЦен[0]);
		Возврат НайденнаяПартия;
		
	Иначе
		Если ПоискПартии.Свойство("Регистратор") Тогда
			ПоискПартии.Регистратор = ПоискПартии.Партия;
			СтрокаПартииВТаблицеЦен = Цены.НайтиСтроки(ПоискПартии);
			
			Если СтрокаПартииВТаблицеЦен.Количество() > 0 Тогда
				ЗаполнитьЗначенияСвойств(НайденнаяПартия, СтрокаПартииВТаблицеЦен[0]);
				Возврат НайденнаяПартия;
			Иначе
				ПоискПартии.Регистратор = ПоискПартии.ДокументОплаты;
				СтрокаПартииВТаблицеЦен = Цены.НайтиСтроки(ПоискПартии);
				Если СтрокаПартииВТаблицеЦен.Количество() > 0 Тогда
					ЗаполнитьЗначенияСвойств(НайденнаяПартия, СтрокаПартииВТаблицеЦен[0]);
					Возврат НайденнаяПартия;		
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Возврат ПустаяПартия;
		
	КонецЕсли;
	
КонецФункции

Функция ТекстЗапросаЦеныМПЗ()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ИПМПЗОстаткиИОбороты.ВидМПЗ,
	|	ИПМПЗОстаткиИОбороты.Номенклатура,
	|	ИПМПЗОстаткиИОбороты.Партия,
	|	ИПМПЗОстаткиИОбороты.ДокументОплаты,
	|	NULL КАК ДокументОтгрузки
	|ПОМЕСТИТЬ ЦеныМПЗ
	|ИЗ
	|	РегистрНакопления.ИПМПЗ.ОстаткиИОбороты(&ДатаНач1, &ДатаКон, , ДвиженияИГраницыПериода, Организация = &Организация) КАК ИПМПЗОстаткиИОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ИПМПЗОстаткиИОбороты.ВидМПЗ,
	|	ИПМПЗОстаткиИОбороты.Номенклатура,
	|	ИПМПЗОстаткиИОбороты.Партия,
	|	ИПМПЗОстаткиИОбороты.ДокументОплаты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИПМПЗОтгруженныеОстаткиИОбороты.ВидМПЗ,
	|	ИПМПЗОтгруженныеОстаткиИОбороты.Номенклатура,
	|	ИПМПЗОтгруженныеОстаткиИОбороты.Партия,
	|	ИПМПЗОтгруженныеОстаткиИОбороты.ДокументОплаты,
	|	ИПМПЗОтгруженныеОстаткиИОбороты.ДокументОтгрузки
	|ИЗ
	|	РегистрНакопления.ИПМПЗОтгруженные.ОстаткиИОбороты(&ДатаНач1, &ДатаКон, , ДвиженияИГраницыПериода, Организация = &Организация) КАК ИПМПЗОтгруженныеОстаткиИОбороты";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаЦеныИМР()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ИПИныеМатериальныеРасходыОстаткиИОбороты.СтатьяЗатрат,
	|	ИПИныеМатериальныеРасходыОстаткиИОбороты.Партия,
	|	ИПИныеМатериальныеРасходыОстаткиИОбороты.ДокументОплаты
	|ПОМЕСТИТЬ ЦеныИМР
	|ИЗ
	|	РегистрНакопления.ИПИныеМатериальныеРасходы.ОстаткиИОбороты(&ДатаНач1, &ДатаКон, , ДвиженияИГраницыПериода, Организация = &Организация) КАК ИПИныеМатериальныеРасходыОстаткиИОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ИПИныеМатериальныеРасходыОстаткиИОбороты.СтатьяЗатрат,
	|	ИПИныеМатериальныеРасходыОстаткиИОбороты.Партия,
	|	ИПИныеМатериальныеРасходыОстаткиИОбороты.ДокументОплаты";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПоМПЗ()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МПЗ.Номенклатура КАК Номенклатура,
	|	МПЗ.Партия КАК Партия,
	|	МПЗ.ДокументОплаты КАК ДокументОплаты,
	|	СУММА(МПЗ.КоличествоПриход) КАК КоличествоПриход,
	|	СУММА(МПЗ.КоличествоРасход) КАК КоличествоРасход,
	|	СУММА(МПЗ.СуммаПриход) КАК СуммаПриход,
	|	СУММА(МПЗ.СуммаРасход) КАК СуммаРасход,
	|	СУММА(МПЗ.НДСПриход) КАК НДСПриход,
	|	СУММА(МПЗ.НДСРасход) КАК НДСРасход,
	|	МПЗ.Период КАК Период,
	|	МПЗ.Номенклатура.БазоваяЕдиницаИзмерения.Наименование КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА МПЗ.ВидМПЗ В (&ВидыТоваров)
	|			ТОГДА 1
	|		ИНАЧЕ ВЫБОР
	|				КОГДА МПЗ.ВидМПЗ = &Полуфабрикат
	|					ТОГДА 2
	|				ИНАЧЕ ВЫБОР
	|						КОГДА МПЗ.ВидМПЗ = &ВспомогательныйМатериал
	|							ТОГДА 3
	|						ИНАЧЕ 0
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК НомерТаблицы,
	|	СУММА(МПЗ.СуммаПриход + МПЗ.НДСПриход) КАК СуммаПриходСНДС,
	|	МПЗ.Партия.Номер КАК ПартияНомер,
	|	МПЗ.Партия.Дата КАК ПартияДата,
	|	МПЗ.Регистратор КАК Регистратор,
	|	СУММА(МПЗ.СуммаРасход + МПЗ.НДСРасход) КАК СуммаРасходСНДС,
	|	СУММА(МПЗ.СуммаКонечныйОстаток + МПЗ.НДСКонечныйОстаток) КАК СуммаКонечныйОстатокСНДС,
	|	СУММА(МПЗ.КоличествоКонечныйОстаток) КАК КоличествоКонечныйОстаток,
	|	СУММА(МПЗ.СуммаКонечныйОстаток) КАК СуммаКонечныйОстаток,
	|	МЕСЯЦ(МПЗ.Период) КАК Месяц,
	|	ПОДСТРОКА(МПЗ.Номенклатура.НаименованиеПолное, 1, 200) КАК НоменклатураПредставление,
	|	МПЗ.ДокументОплаты.Дата КАК ДокументОплатыДата,
	|	МПЗ.ВидМПЗ
	|ИЗ
	|	РегистрНакопления.ИПМПЗ.ОстаткиИОбороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Регистратор,
	|			Движения,
	|			Организация = &Организация
	|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
	|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК МПЗ
	|
	|СГРУППИРОВАТЬ ПО
	|	МПЗ.Номенклатура,
	|	МПЗ.Регистратор,
	|	МПЗ.Партия,
	|	МПЗ.Период,
	|	МПЗ.ДокументОплаты,
	|	МПЗ.Номенклатура.БазоваяЕдиницаИзмерения.Наименование,
	|	МПЗ.Партия.Номер,
	|	МПЗ.Партия.Дата,
	|	ПОДСТРОКА(МПЗ.Номенклатура.НаименованиеПолное, 1, 200),
	|	ВЫБОР
	|		КОГДА МПЗ.ВидМПЗ В (&ВидыТоваров)
	|			ТОГДА 1
	|		ИНАЧЕ ВЫБОР
	|				КОГДА МПЗ.ВидМПЗ = &Полуфабрикат
	|					ТОГДА 2
	|				ИНАЧЕ ВЫБОР
	|						КОГДА МПЗ.ВидМПЗ = &ВспомогательныйМатериал
	|							ТОГДА 3
	|						ИНАЧЕ 0
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ,
	|	МЕСЯЦ(МПЗ.Период),
	|	МПЗ.ДокументОплаты.Дата,
	|	МПЗ.ВидМПЗ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	Обороты.СуммаПриход,
	|	Обороты.СуммаРасход,
	|	Обороты.НДСПриход,
	|	Обороты.НДСРасход,
	|	NULL,
	|	NULL,
	|	ВЫБОР
	|		КОГДА Обороты.ВидМПЗ В (&ВидыТоваров)
	|			ТОГДА 1
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Обороты.ВидМПЗ = &Полуфабрикат
	|					ТОГДА 2
	|				ИНАЧЕ ВЫБОР
	|						КОГДА Обороты.ВидМПЗ = &ВспомогательныйМатериал
	|							ТОГДА 3
	|						ИНАЧЕ 0
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ,
	|	NULL,
	|	Обороты.СуммаПриход + Обороты.НДСПриход,
	|	NULL,
	|	NULL,
	|	NULL,
	|	Обороты.СуммаРасход + Обороты.НДСРасход,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	РегистрНакопления.ИПМПЗ.Обороты(
	|			&ДатаНачГода,
	|			&ДатаНач1,
	|			,
	|			Организация = &Организация
	|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
	|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК Обороты
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	Номенклатура,
	|	Партия,
	|	ДокументОплатыДата
	|ИТОГИ
	|	СУММА(КоличествоПриход),
	|	СУММА(КоличествоРасход),
	|	СУММА(СуммаПриход),
	|	СУММА(СуммаРасход),
	|	СУММА(НДСПриход),
	|	СУММА(НДСРасход),
	|	СУММА(СуммаПриходСНДС),
	|	СУММА(СуммаРасходСНДС),
	|	СУММА(СуммаКонечныйОстатокСНДС),
	|	СУММА(КоличествоКонечныйОстаток),
	|	СУММА(СуммаКонечныйОстаток)
	|ПО
	|	НомерТаблицы,
	|	Месяц";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПоОстаткамМПЗ()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ИПМПЗОстатки.Номенклатура КАК Номенклатура,
	|	ИПМПЗОстатки.Партия КАК Партия,
	|	ИПМПЗОстатки.ДокументОплаты КАК ДокументОплаты,
	|	ИПМПЗОстатки.Номенклатура.БазоваяЕдиницаИзмерения.Наименование КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ИПМПЗОстатки.ВидМПЗ В (&ВидыТоваров)
	|			ТОГДА 1
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ИПМПЗОстатки.ВидМПЗ = &Полуфабрикат
	|					ТОГДА 2
	|				ИНАЧЕ ВЫБОР
	|						КОГДА ИПМПЗОстатки.ВидМПЗ = &ВспомогательныйМатериал
	|							ТОГДА 3
	|						ИНАЧЕ ВЫБОР
	|								КОГДА ИПМПЗОстатки.ВидМПЗ = &Продукция
	|									ТОГДА 6
	|								ИНАЧЕ 0
	|							КОНЕЦ
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК НомерТаблицы,
	|	ИПМПЗОстатки.Партия.Номер КАК ПартияНомер,
	|	ИПМПЗОстатки.Партия.Дата КАК ПартияДата,
	|	ПОДСТРОКА(ИПМПЗОстатки.Номенклатура.НаименованиеПолное, 1, 200) КАК НоменклатураПредставление,
	|	ИПМПЗОстатки.КоличествоОстаток КАК КоличествоНачальныйОстаток,
	|	ИПМПЗОстатки.СуммаОстаток КАК СуммаНачальныйОстаток,
	|	ИПМПЗОстатки.СуммаОстаток + ИПМПЗОстатки.НДСОстаток КАК СуммаНачальныйОстатокСНДС,
	|	ИПМПЗОстатки.ДокументОплаты.Дата КАК ДокументОплатыДата,
	|	ИПМПЗОстатки.ВидМПЗ,
	|	NULL КАК ДокументОтгрузки,
	|	NULL КАК ДокументОтгрузкиДата,
	|	NULL КАК ДокументОтгрузкиНомер
	|ИЗ
	|	РегистрНакопления.ИПМПЗ.Остатки(
	|			&ДатаОстатков,
	|			Организация = &Организация
	|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
	|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИПМПЗОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИПМПЗОтгруженныеОстатки.Номенклатура,
	|	ИПМПЗОтгруженныеОстатки.Партия,
	|	ИПМПЗОтгруженныеОстатки.ДокументОплаты,
	|	ИПМПЗОтгруженныеОстатки.Номенклатура.БазоваяЕдиницаИзмерения,
	|	7,
	|	ИПМПЗОтгруженныеОстатки.Партия.Номер,
	|	ИПМПЗОтгруженныеОстатки.Партия.Дата,
	|	ПОДСТРОКА(ИПМПЗОтгруженныеОстатки.Номенклатура.НаименованиеПолное, 1, 200),
	|	ИПМПЗОтгруженныеОстатки.КоличествоОстаток,
	|	ИПМПЗОтгруженныеОстатки.СуммаОстаток,
	|	ИПМПЗОтгруженныеОстатки.СуммаОстаток + ИПМПЗОтгруженныеОстатки.НДСОстаток,
	|	ИПМПЗОтгруженныеОстатки.ДокументОплаты.Дата,
	|	ИПМПЗОтгруженныеОстатки.ВидМПЗ,
	|	ИПМПЗОтгруженныеОстатки.ДокументОтгрузки,
	|	ИПМПЗОтгруженныеОстатки.ДокументОтгрузки.Дата,
	|	ИПМПЗОтгруженныеОстатки.ДокументОтгрузки.Номер
	|ИЗ
	|	РегистрНакопления.ИПМПЗОтгруженные.Остатки(
	|			&ДатаОстатков,
	|			Организация = &Организация
	|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
	|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО
	|				И (ВидМПЗ В (&ВидыТоваров)
	|					ИЛИ ВидМПЗ = &Продукция)) КАК ИПМПЗОтгруженныеОстатки
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	ПартияДата,
	|	ДокументОплатыДата
	|ИТОГИ
	|	СУММА(КоличествоНачальныйОстаток),
	|	СУММА(СуммаНачальныйОстаток),
	|	СУММА(СуммаНачальныйОстатокСНДС)
	|ПО
	|	НомерТаблицы";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПоОтгруженным()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЕСТЬNULL(Доходы.ВыручкаОборот, 0) - ЕСТЬNULL(Доходы.НДСНачисленныйОборот, 0) КАК Результат,
	|	ЕСТЬNULL(Доходы.ВыручкаОборот, 0) - ЕСТЬNULL(Доходы.НДСНачисленныйОборот, 0) КАК ВыручкаБезНДС,
	|	NULL КАК Сумма,
	|	ЕСТЬNULL(Доходы.ВыручкаОборот, 0) КАК РезультатНеОблагаемыйНДС,
	|	ЕСТЬNULL(Доходы.ВыручкаОборот, 0) КАК Выручка,
	|	NULL КАК СуммаСНДС,
	|	NULL КАК НДС,
	|	Доходы.Номенклатура КАК Номенклатура,
	|	Доходы.ДокументОтгрузки КАК ДокументОтгрузки,
	|	Доходы.Партия КАК Партия,
	|	Доходы.КоличествоОборот КАК Количество,
	|	МЕСЯЦ(Доходы.Период) КАК Месяц,
	|	Доходы.Период КАК Период,
	|	ЕСТЬNULL(Доходы.НДСНачисленныйОборот, 0) КАК НДСНачисленный,
	|	Доходы.Партия.Номер КАК ПартияНомер,
	|	Доходы.Партия.Дата КАК ПартияДата,
	|	Доходы.ДокументОтгрузки.Номер КАК ДокументОтгрузкиНомер,
	|	Доходы.ДокументОтгрузки.Дата КАК ДокументОтгрузкиДата,
	|	Доходы.ДокументОплаты КАК ДокументОплаты,
	|	ВЫБОР
	|		КОГДА Доходы.Номенклатура ССЫЛКА Справочник.Номенклатура
	|			ТОГДА Доходы.Номенклатура.БазоваяЕдиницаИзмерения.Наименование
	|		ИНАЧЕ ""-""
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	Доходы.Регистратор КАК Регистратор,
	|	ВЫБОР
	|		КОГДА Доходы.Номенклатура ССЫЛКА Справочник.Номенклатура
	|			ТОГДА ПОДСТРОКА(Доходы.Номенклатура.НаименованиеПолное, 1, 200)
	|		ИНАЧЕ Доходы.Номенклатура.Наименование
	|	КОНЕЦ КАК НоменклатураПредставление,
	|	0 КАК КоличествоПриход,
	|	0 КАК СуммаПриходСНДС,
	|	0 КАК СуммаПриход,
	|	Доходы.ДокументОплаты.Дата КАК ДокументОплатыДата,
	|	Движения.РеквизитыДокументаОплаты,
	|	ЕСТЬNULL(Доходы.ВыручкаОборот, 0) / ВЫБОР
	|		КОГДА Доходы.КоличествоОборот ЕСТЬ NULL 
	|				ИЛИ Доходы.КоличествоОборот = 0
	|			ТОГДА 1
	|		ИНАЧЕ Доходы.КоличествоОборот
	|	КОНЕЦ КАК ЦенаЕдиницы,
	|	ЕСТЬNULL(Доходы.ВыручкаОборот, 0) / ВЫБОР
	|		КОГДА Доходы.КоличествоОборот ЕСТЬ NULL 
	|				ИЛИ Доходы.КоличествоОборот = 0
	|			ТОГДА 1
	|		ИНАЧЕ Доходы.КоличествоОборот
	|	КОНЕЦ - ЕСТЬNULL(Доходы.НДСНачисленныйОборот, 0) / ВЫБОР
	|		КОГДА Доходы.КоличествоОборот ЕСТЬ NULL 
	|				ИЛИ Доходы.КоличествоОборот = 0
	|			ТОГДА 1
	|		ИНАЧЕ Доходы.КоличествоОборот
	|	КОНЕЦ КАК ЦенаЕдиницыБезНДС,
	|	ЕСТЬNULL(Доходы.НДСНачисленныйОборот, 0) / ВЫБОР
	|		КОГДА Доходы.КоличествоОборот ЕСТЬ NULL 
	|				ИЛИ Доходы.КоличествоОборот = 0
	|			ТОГДА 1
	|		ИНАЧЕ Доходы.КоличествоОборот
	|	КОНЕЦ КАК НДСНачисленныйЕдиницы,
	|	Доходы.ВидМПЗ,
	|	Доходы.КоличествоОплаченоПоставщикуОборот КАК КоличествоОплачено
	|ИЗ
	|	РегистрНакопления.ИПДоходы.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Запись,
	|			Организация = &Организация
	|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)) КАК Доходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ИПДоходы КАК Движения
	|		ПО Доходы.Период = Движения.Период
	|			И Доходы.Регистратор = Движения.Регистратор
	|			И Доходы.НомерСтроки = Движения.НомерСтроки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОтгружОбороты.ВыручкаОборот - ОтгружОбороты.НДСНачисленныйОборот - ОтгружОбороты.СуммаОборот,
	|	ОтгружОбороты.ВыручкаОборот - ОтгружОбороты.НДСНачисленныйОборот,
	|	ОтгружОбороты.СуммаОборот,
	|	ОтгружОбороты.ВыручкаОборот - ОтгружОбороты.СуммаОборот - ОтгружОбороты.НДСОборот,
	|	ОтгружОбороты.ВыручкаОборот,
	|	ОтгружОбороты.СуммаОборот + ОтгружОбороты.НДСОборот,
	|	ОтгружОбороты.НДСОборот,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ОтгружОбороты.НДСНачисленныйОборот,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	РегистрНакопления.ИПДоходы.Обороты(
	|			&ДатаНачГода,
	|			&ДатаНач1,
	|			,
	|			Организация = &Организация
	|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)) КАК ОтгружОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(-ИПМПЗОбороты.СуммаПриход, 0),
	|	0,
	|	ЕСТЬNULL(ИПМПЗОбороты.СуммаПриход, 0),
	|	ЕСТЬNULL(-ИПМПЗОбороты.СуммаПриход - ИПМПЗОбороты.НДСПриход, 0),
	|	0,
	|	ЕСТЬNULL(ИПМПЗОбороты.СуммаПриход, 0) + ЕСТЬNULL(ИПМПЗОбороты.НДСПриход, 0),
	|	ЕСТЬNULL(ИПМПЗОбороты.НДСПриход, 0),
	|	ИПМПЗОбороты.Номенклатура,
	|	НЕОПРЕДЕЛЕНО,
	|	ИПМПЗОбороты.Партия,
	|	0,
	|	МЕСЯЦ(ИПМПЗОбороты.Период),
	|	ИПМПЗОбороты.Период,
	|	0,
	|	ЕСТЬNULL(ИПМПЗОбороты.Партия.Номер, ИПМПЗОбороты.Партия.Номер),
	|	ЕСТЬNULL(ИПМПЗОбороты.Партия.Дата, ИПМПЗОбороты.Партия.Дата),
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ИПМПЗОбороты.ДокументОплаты,
	|	ИПМПЗОбороты.Номенклатура.БазоваяЕдиницаИзмерения.Наименование,
	|	ИПМПЗОбороты.Регистратор,
	|	ВЫБОР
	|		КОГДА ИПМПЗОбороты.Номенклатура ССЫЛКА Справочник.Номенклатура
	|			ТОГДА ПОДСТРОКА(ИПМПЗОбороты.Номенклатура.НаименованиеПолное, 1, 200)
	|		ИНАЧЕ ИПМПЗОбороты.Номенклатура.Наименование
	|	КОНЕЦ,
	|	ИПМПЗОбороты.КоличествоПриход,
	|	ИПМПЗОбороты.СуммаПриход + ИПМПЗОбороты.НДСПриход,
	|	ИПМПЗОбороты.СуммаПриход,
	|	NULL,
	|	NULL,
	|	0,
	|	0,
	|	0,
	|	ИПМПЗОбороты.ВидМПЗ,
	|	ЕСТЬNULL(ИПМПЗОбороты.КоличествоПриход, 0)
	|ИЗ
	|	РегистрНакопления.ИПМПЗ.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Регистратор,
	|			Организация = &Организация
	|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
	|				И ВидМПЗ В (&ВидыПродукции)
	|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИПМПЗОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(-ИПМПЗОбороты.СуммаПриход, 0),
	|	NULL,
	|	ЕСТЬNULL(ИПМПЗОбороты.СуммаПриход, 0),
	|	ЕСТЬNULL(-ИПМПЗОбороты.СуммаПриход - ИПМПЗОбороты.НДСПриход, 0),
	|	NULL,
	|	ЕСТЬNULL(ИПМПЗОбороты.СуммаПриход, 0) + ЕСТЬNULL(ИПМПЗОбороты.НДСПриход, 0),
	|	ЕСТЬNULL(ИПМПЗОбороты.НДСПриход, 0),
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ИПМПЗОбороты.КоличествоПриход,
	|	ИПМПЗОбороты.СуммаПриход + ИПМПЗОбороты.НДСПриход,
	|	ИПМПЗОбороты.СуммаПриход,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ЕСТЬNULL(ИПМПЗОбороты.КоличествоПриход, 0)
	|ИЗ
	|	РегистрНакопления.ИПМПЗ.Обороты(
	|			&ДатаНачГода,
	|			&ДатаНач1,
	|			Месяц,
	|			Организация = &Организация
	|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
	|				И ВидМПЗ В (&ВидыПродукции)
	|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИПМПЗОбороты
	|
	|УПОРЯДОЧИТЬ ПО
	|	Месяц,
	|	Период,
	|	ДокументОтгрузкиДата,
	|	Номенклатура,
	|	ПартияДата,
	|	ДокументОплатыДата
	|ИТОГИ
	|	СУММА(Результат),
	|	СУММА(ВыручкаБезНДС),
	|	СУММА(Сумма),
	|	СУММА(РезультатНеОблагаемыйНДС),
	|	СУММА(Выручка),
	|	СУММА(СуммаСНДС),
	|	СУММА(НДС),
	|	СУММА(Количество),
	|	СУММА(НДСНачисленный),
	|	МАКСИМУМ(ЕдиницаИзмерения),
	|	МАКСИМУМ(НоменклатураПредставление),
	|	СУММА(КоличествоПриход),
	|	СУММА(СуммаПриходСНДС),
	|	СУММА(СуммаПриход),
	|	СУММА(КоличествоОплачено)
	|ПО
	|	ОБЩИЕ,
	|	Месяц";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПоОтгруженнымТребуютсяДоходы()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Доходы.Номенклатура КАК Номенклатура,
	|	Доходы.ДокументОтгрузки КАК ДокументОтгрузки,
	|	Доходы.Партия КАК Партия,
	|	Доходы.КоличествоОборот КАК Количество,
	|	МЕСЯЦ(Доходы.Период) КАК Месяц,
	|	Доходы.Период КАК Период,
	|	ЕСТЬNULL(Доходы.ВыручкаОборот, 0) КАК Выручка,
	|	ЕСТЬNULL(Доходы.ВыручкаОборот, 0) - ЕСТЬNULL(Доходы.НДСНачисленныйОборот, 0) КАК ВыручкаБезНДС,
	|	ЕСТЬNULL(Доходы.НДСНачисленныйОборот, 0) КАК НДСНачисленный,
	|	ЕСТЬNULL(Доходы.СуммаОборот, 0) + ЕСТЬNULL(Доходы.НДСОборот, 0) КАК СуммаСНДС,
	|	ЕСТЬNULL(Доходы.СуммаОборот, 0) КАК Сумма,
	|	ЕСТЬNULL(Доходы.НДСОборот, 0) КАК НДС,
	|	Доходы.Партия.Номер КАК ПартияНомер,
	|	Доходы.Партия.Дата КАК ПартияДата,
	|	Доходы.ДокументОтгрузки.Номер КАК ДокументОтгрузкиНомер,
	|	Доходы.ДокументОтгрузки.Дата КАК ДокументОтгрузкиДата,
	|	Доходы.ДокументОплаты КАК ДокументОплаты,
	|	ВЫБОР
	|		КОГДА Доходы.Номенклатура ССЫЛКА Справочник.Номенклатура
	|			ТОГДА Доходы.Номенклатура.БазоваяЕдиницаИзмерения.Наименование
	|		ИНАЧЕ ""-""
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	Доходы.Регистратор КАК Регистратор,
	|	ЕСТЬNULL(Доходы.ВыручкаОборот, 0) - ЕСТЬNULL(Доходы.НДСНачисленныйОборот, 0) - ЕСТЬNULL(Доходы.СуммаОборот, 0) КАК Результат,
	|	ЕСТЬNULL(Доходы.ВыручкаОборот, 0) - ЕСТЬNULL(Доходы.СуммаОборот, 0) - ЕСТЬNULL(Доходы.НДСОборот, 0) КАК РезультатНеОблагаемыйНДС,
	|	ВЫБОР
	|		КОГДА Доходы.Номенклатура ССЫЛКА Справочник.Номенклатура
	|			ТОГДА ПОДСТРОКА(Доходы.Номенклатура.НаименованиеПолное, 1, 200)
	|		ИНАЧЕ Доходы.Номенклатура.Наименование
	|	КОНЕЦ КАК НоменклатураПредставление,
	|	0 КАК КоличествоПриход,
	|	0 КАК СуммаПриходСНДС,
	|	0 КАК СуммаПриход,
	|	Доходы.ДокументОплаты.Дата КАК ДокументОплатыДата,
	|	Движения.РеквизитыДокументаОплаты,
	|	ЕСТЬNULL(Доходы.ВыручкаОборот, 0) / ВЫБОР
	|		КОГДА Доходы.КоличествоОборот ЕСТЬ NULL 
	|				ИЛИ Доходы.КоличествоОборот = 0
	|			ТОГДА 1
	|		ИНАЧЕ Доходы.КоличествоОборот
	|	КОНЕЦ КАК ЦенаЕдиницы,
	|	ЕСТЬNULL(Доходы.ВыручкаОборот, 0) / ВЫБОР
	|		КОГДА Доходы.КоличествоОборот ЕСТЬ NULL 
	|				ИЛИ Доходы.КоличествоОборот = 0
	|			ТОГДА 1
	|		ИНАЧЕ Доходы.КоличествоОборот
	|	КОНЕЦ - ЕСТЬNULL(Доходы.НДСНачисленныйОборот, 0) / ВЫБОР
	|		КОГДА Доходы.КоличествоОборот ЕСТЬ NULL 
	|				ИЛИ Доходы.КоличествоОборот = 0
	|			ТОГДА 1
	|		ИНАЧЕ Доходы.КоличествоОборот
	|	КОНЕЦ КАК ЦенаЕдиницыБезНДС,
	|	ЕСТЬNULL(Доходы.НДСНачисленныйОборот, 0) / ВЫБОР
	|		КОГДА Доходы.КоличествоОборот ЕСТЬ NULL 
	|				ИЛИ Доходы.КоличествоОборот = 0
	|			ТОГДА 1
	|		ИНАЧЕ Доходы.КоличествоОборот
	|	КОНЕЦ КАК НДСНачисленныйЕдиницы,
	|	Доходы.ВидМПЗ,
	|	Доходы.КоличествоОплаченоПоставщикуОборот КАК КоличествоОплачено
	|ИЗ
	|	РегистрНакопления.ИПДоходы.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Запись,
	|			Организация = &Организация
	|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)) КАК Доходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ИПДоходы КАК Движения
	|		ПО Доходы.Период = Движения.Период
	|			И Доходы.Регистратор = Движения.Регистратор
	|			И Доходы.НомерСтроки = Движения.НомерСтроки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ОтгружОбороты.ВыручкаОборот,
	|	ОтгружОбороты.ВыручкаОборот - ОтгружОбороты.НДСНачисленныйОборот,
	|	ОтгружОбороты.НДСНачисленныйОборот,
	|	ОтгружОбороты.СуммаОборот + ОтгружОбороты.НДСОборот,
	|	ОтгружОбороты.СуммаОборот,
	|	ОтгружОбороты.НДСОборот,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ОтгружОбороты.ВыручкаОборот - ОтгружОбороты.НДСНачисленныйОборот - ОтгружОбороты.СуммаОборот,
	|	ОтгружОбороты.ВыручкаОборот - ОтгружОбороты.СуммаОборот - ОтгружОбороты.НДСОборот,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	РегистрНакопления.ИПДоходы.Обороты(
	|			&ДатаНачГода,
	|			&ДатаНач1,
	|			,
	|			Организация = &Организация
	|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)) КАК ОтгружОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИПМПЗОбороты.Номенклатура,
	|	НЕОПРЕДЕЛЕНО,
	|	ИПМПЗОбороты.Партия,
	|	0,
	|	МЕСЯЦ(ИПМПЗОбороты.Период),
	|	ИПМПЗОбороты.Период,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	NULL,
	|	ЕСТЬNULL(ИПМПЗОбороты.Партия.Номер, ИПМПЗОбороты.Партия.Номер),
	|	ЕСТЬNULL(ИПМПЗОбороты.Партия.Дата, ИПМПЗОбороты.Партия.Дата),
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ИПМПЗОбороты.ДокументОплаты,
	|	ИПМПЗОбороты.Номенклатура.БазоваяЕдиницаИзмерения.Наименование,
	|	ИПМПЗОбороты.Регистратор,
	|	0,
	|	0,
	|	ВЫБОР
	|		КОГДА ИПМПЗОбороты.Номенклатура ССЫЛКА Справочник.Номенклатура
	|			ТОГДА ПОДСТРОКА(ИПМПЗОбороты.Номенклатура.НаименованиеПолное, 1, 200)
	|		ИНАЧЕ ИПМПЗОбороты.Номенклатура.Наименование
	|	КОНЕЦ,
	|	ИПМПЗОбороты.КоличествоПриход,
	|	ИПМПЗОбороты.СуммаПриход + ИПМПЗОбороты.НДСПриход,
	|	ИПМПЗОбороты.СуммаПриход,
	|	NULL,
	|	NULL,
	|	0,
	|	0,
	|	0,
	|	ИПМПЗОбороты.ВидМПЗ,
	|	0
	|ИЗ
	|	РегистрНакопления.ИПМПЗ.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Регистратор,
	|			Организация = &Организация
	|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
	|				И ВидМПЗ В (&ВидыПродукции)
	|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИПМПЗОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ИПМПЗОбороты.КоличествоПриход,
	|	ИПМПЗОбороты.СуммаПриход + ИПМПЗОбороты.НДСПриход,
	|	ИПМПЗОбороты.СуммаПриход,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	РегистрНакопления.ИПМПЗ.Обороты(
	|			&ДатаНачГода,
	|			&ДатаНач1,
	|			Месяц,
	|			Организация = &Организация
	|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
	|				И ВидМПЗ В (&ВидыПродукции)
	|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИПМПЗОбороты
	|
	|УПОРЯДОЧИТЬ ПО
	|	Месяц,
	|	Период,
	|	ДокументОтгрузкиДата,
	|	Номенклатура,
	|	ПартияДата,
	|	ДокументОплатыДата
	|ИТОГИ
	|	СУММА(Количество),
	|	СУММА(Выручка),
	|	СУММА(ВыручкаБезНДС),
	|	СУММА(НДСНачисленный),
	|	СУММА(СуммаСНДС),
	|	СУММА(Сумма),
	|	СУММА(НДС),
	|	МАКСИМУМ(ЕдиницаИзмерения),
	|	СУММА(Результат),
	|	СУММА(РезультатНеОблагаемыйНДС),
	|	МАКСИМУМ(НоменклатураПредставление),
	|	СУММА(КоличествоПриход),
	|	СУММА(СуммаПриходСНДС),
	|	СУММА(СуммаПриход),
	|	СУММА(КоличествоОплачено)
	|ПО
	|	ОБЩИЕ,
	|	Месяц";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПоДоходамРасходам()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЕСТЬNULL(Доходы.ВыручкаОборот, 0) - ЕСТЬNULL(Доходы.НДСНачисленныйОборот, 0) КАК Результат,
	|	ЕСТЬNULL(Доходы.ВыручкаОборот, 0) - ЕСТЬNULL(Доходы.НДСНачисленныйОборот, 0) КАК ВыручкаБезНДС,
	|	NULL КАК Сумма,
	|	ЕСТЬNULL(Доходы.ВыручкаОборот, 0) КАК РезультатНеОблагаемыйНДС,
	|	ЕСТЬNULL(Доходы.ВыручкаОборот, 0) КАК Выручка,
	|	NULL КАК СуммаСНДС,
	|	NULL КАК НДС,
	|	ЕСТЬNULL(Доходы.НДСНачисленныйОборот, 0) КАК НДСНачисленный,
	|	Доходы.Номенклатура КАК Номенклатура,
	|	Доходы.ДокументОтгрузки КАК ДокументОтгрузки,
	|	Доходы.Партия КАК Партия,
	|	Доходы.КоличествоОборот КАК Количество,
	|	МЕСЯЦ(Доходы.Период) КАК Месяц,
	|	Доходы.Период КАК Период,
	|	Доходы.Партия.Номер КАК ПартияНомер,
	|	Доходы.Партия.Дата КАК ПартияДата,
	|	Доходы.ДокументОтгрузки.Номер КАК ДокументОтгрузкиНомер,
	|	Доходы.ДокументОтгрузки.Дата КАК ДокументОтгрузкиДата,
	|	Доходы.ДокументОплаты КАК ДокументОплаты,
	|	ВЫБОР
	|		КОГДА Доходы.Номенклатура ССЫЛКА Справочник.Номенклатура
	|			ТОГДА Доходы.Номенклатура.БазоваяЕдиницаИзмерения.Наименование
	|		ИНАЧЕ ""-""
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	Доходы.Регистратор КАК Регистратор,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяЗатрат,
	|	ВЫБОР
	|		КОГДА Доходы.Номенклатура ССЫЛКА Справочник.Номенклатура
	|			ТОГДА ПОДСТРОКА(Доходы.Номенклатура.НаименованиеПолное, 1, 200)
	|		ИНАЧЕ Доходы.Номенклатура.Наименование
	|	КОНЕЦ КАК НоменклатураПредставление,
	|	0 КАК КоличествоПриход,
	|	0 КАК СуммаПриходСНДС,
	|	0 КАК СуммаПриход,
	|	Доходы.ВидМПЗ,
	|	ЕСТЬNULL(Доходы.ВыручкаОборот, 0) / ВЫБОР
	|		КОГДА Доходы.КоличествоОборот ЕСТЬ NULL 
	|				ИЛИ Доходы.КоличествоОборот = 0
	|			ТОГДА 1
	|		ИНАЧЕ Доходы.КоличествоОборот
	|	КОНЕЦ КАК ЦенаЕдиницы,
	|	ЕСТЬNULL(Доходы.ВыручкаОборот, 0) / ВЫБОР
	|		КОГДА Доходы.КоличествоОборот ЕСТЬ NULL 
	|				ИЛИ Доходы.КоличествоОборот = 0
	|			ТОГДА 1
	|		ИНАЧЕ Доходы.КоличествоОборот
	|	КОНЕЦ - ЕСТЬNULL(Доходы.НДСНачисленныйОборот, 0) / ВЫБОР
	|		КОГДА Доходы.КоличествоОборот ЕСТЬ NULL 
	|				ИЛИ Доходы.КоличествоОборот = 0
	|			ТОГДА 1
	|		ИНАЧЕ Доходы.КоличествоОборот
	|	КОНЕЦ КАК ЦенаЕдиницыБезНДС,
	|	ЕСТЬNULL(Доходы.НДСНачисленныйОборот, 0) / ВЫБОР
	|		КОГДА Доходы.КоличествоОборот ЕСТЬ NULL 
	|				ИЛИ Доходы.КоличествоОборот = 0
	|			ТОГДА 1
	|		ИНАЧЕ Доходы.КоличествоОборот
	|	КОНЕЦ КАК НДСНачисленныйЕдиницы,
	|	Доходы.ДокументОплаты.Дата КАК ДокументОплатыДата,
	|	Движения.РеквизитыДокументаОплаты,
	|	Доходы.КоличествоОплаченоПоставщикуОборот КАК КоличествоОплачено
	|ИЗ
	|	РегистрНакопления.ИПДоходы.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Запись,
	|			Организация = &Организация
	|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)) КАК Доходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ИПДоходы КАК Движения
	|		ПО Доходы.Период = Движения.Период
	|			И Доходы.Регистратор = Движения.Регистратор
	|			И Доходы.НомерСтроки = Движения.НомерСтроки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ОтгружОбороты.ВыручкаОборот - ОтгружОбороты.НДСНачисленныйОборот, 0),
	|	ЕСТЬNULL(ОтгружОбороты.ВыручкаОборот - ОтгружОбороты.НДСНачисленныйОборот, 0),
	|	NULL,
	|	ЕСТЬNULL(ОтгружОбороты.ВыручкаОборот, 0),
	|	ЕСТЬNULL(ОтгружОбороты.ВыручкаОборот, 0),
	|	NULL,
	|	NULL,
	|	ЕСТЬNULL(ОтгружОбороты.НДСНачисленныйОборот, 0),
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	РегистрНакопления.ИПДоходы.Обороты(
	|			&ДатаНачГода,
	|			&ДатаНач1,
	|			,
	|			Организация = &Организация
	|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)) КАК ОтгружОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(-ИПИныеМатериальныеРасходыОбороты.СуммаРасход, 0),
	|	0,
	|	ЕСТЬNULL(ИПИныеМатериальныеРасходыОбороты.СуммаРасход, 0),
	|	ЕСТЬNULL(-ИПИныеМатериальныеРасходыОбороты.СуммаРасход - ИПИныеМатериальныеРасходыОбороты.НДСРасход, 0),
	|	0,
	|	ЕСТЬNULL(ИПИныеМатериальныеРасходыОбороты.СуммаРасход, 0) + ЕСТЬNULL(ИПИныеМатериальныеРасходыОбороты.НДСРасход, 0),
	|	ЕСТЬNULL(ИПИныеМатериальныеРасходыОбороты.НДСРасход, 0),
	|	0,
	|	ИПИныеМатериальныеРасходыОбороты.МПЗ,
	|	НЕОПРЕДЕЛЕНО,
	|	ИПИныеМатериальныеРасходыОбороты.Партия,
	|	0,
	|	МЕСЯЦ(ИПИныеМатериальныеРасходыОбороты.Период),
	|	ИПИныеМатериальныеРасходыОбороты.Период,
	|	ИПИныеМатериальныеРасходыОбороты.Партия.Номер,
	|	ИПИныеМатериальныеРасходыОбороты.Партия.Дата,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ИПИныеМатериальныеРасходыОбороты.ДокументОплаты,
	|	ВЫБОР
	|		КОГДА ИПИныеМатериальныеРасходыОбороты.СтатьяЗатрат ССЫЛКА Справочник.Номенклатура
	|			ТОГДА ИПИныеМатериальныеРасходыОбороты.СтатьяЗатрат.БазоваяЕдиницаИзмерения.Наименование
	|		ИНАЧЕ ""-""
	|	КОНЕЦ,
	|	ИПИныеМатериальныеРасходыОбороты.Регистратор,
	|	ИПИныеМатериальныеРасходыОбороты.СтатьяЗатрат,
	|	ВЫБОР
	|		КОГДА ИПИныеМатериальныеРасходыОбороты.СтатьяЗатрат ССЫЛКА Справочник.Номенклатура
	|			ТОГДА ПОДСТРОКА(ИПИныеМатериальныеРасходыОбороты.СтатьяЗатрат.НаименованиеПолное, 1, 200)
	|		ИНАЧЕ ИПИныеМатериальныеРасходыОбороты.СтатьяЗатрат.Наименование
	|	КОНЕЦ,
	|	0,
	|	0,
	|	0,
	|	NULL,
	|	0,
	|	0,
	|	0,
	|	NULL,
	|	NULL,
	|	ЕСТЬNULL(ИПИныеМатериальныеРасходыОбороты.КоличествоРасход, 0)
	|ИЗ
	|	РегистрНакопления.ИПИныеМатериальныеРасходы.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Регистратор,
	|			Организация = &Организация
	|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
	|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИПИныеМатериальныеРасходыОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(-ИМРОбороты.СуммаРасход, 0),
	|	0,
	|	ИМРОбороты.СуммаРасход,
	|	ЕСТЬNULL(-ИМРОбороты.СуммаРасход - ИМРОбороты.НДСРасход, 0),
	|	0,
	|	ИМРОбороты.СуммаРасход + ИМРОбороты.НДСРасход,
	|	ИМРОбороты.НДСРасход,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	РегистрНакопления.ИПИныеМатериальныеРасходы.Обороты(
	|			&ДатаНачГода,
	|			&ДатаНач1,
	|			Месяц,
	|			Организация = &Организация
	|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
	|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИМРОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(-ИПМПЗОбороты.СуммаПриход, 0),
	|	0,
	|	ЕСТЬNULL(ИПМПЗОбороты.СуммаПриход, 0),
	|	ЕСТЬNULL(-ИПМПЗОбороты.СуммаПриход - ИПМПЗОбороты.НДСПриход, 0),
	|	0,
	|	ЕСТЬNULL(ИПМПЗОбороты.СуммаПриход + ИПМПЗОбороты.НДСПриход, 0),
	|	0,
	|	0,
	|	ИПМПЗОбороты.Номенклатура,
	|	НЕОПРЕДЕЛЕНО,
	|	ИПМПЗОбороты.Партия,
	|	0,
	|	МЕСЯЦ(ИПМПЗОбороты.Период),
	|	ИПМПЗОбороты.Период,
	|	ЕСТЬNULL(ИПМПЗОбороты.Партия.Номер, ИПМПЗОбороты.Партия.Номер),
	|	ЕСТЬNULL(ИПМПЗОбороты.Партия.Дата, ИПМПЗОбороты.Партия.Дата),
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ИПМПЗОбороты.ДокументОплаты,
	|	ИПМПЗОбороты.Номенклатура.БазоваяЕдиницаИзмерения.Наименование,
	|	ИПМПЗОбороты.Регистратор,
	|	НЕОПРЕДЕЛЕНО,
	|	ВЫБОР
	|		КОГДА ИПМПЗОбороты.Номенклатура ССЫЛКА Справочник.Номенклатура
	|			ТОГДА ПОДСТРОКА(ИПМПЗОбороты.Номенклатура.НаименованиеПолное, 1, 200)
	|		ИНАЧЕ ИПМПЗОбороты.Номенклатура.Наименование
	|	КОНЕЦ,
	|	ЕСТЬNULL(ИПМПЗОбороты.КоличествоПриход, 0),
	|	ЕСТЬNULL(ИПМПЗОбороты.СуммаПриход + ИПМПЗОбороты.НДСПриход, 0),
	|	ЕСТЬNULL(ИПМПЗОбороты.СуммаПриход, 0),
	|	ИПМПЗОбороты.ВидМПЗ,
	|	0,
	|	0,
	|	0,
	|	NULL,
	|	NULL,
	|	ЕСТЬNULL(ИПМПЗОбороты.КоличествоПриход, 0)
	|ИЗ
	|	РегистрНакопления.ИПМПЗ.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Регистратор,
	|			Организация = &Организация
	|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
	|				И ВидМПЗ = &Продукция
	|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИПМПЗОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(-ИПМПЗОбороты.СуммаПриход, 0),
	|	0,
	|	ЕСТЬNULL(ИПМПЗОбороты.СуммаПриход, 0),
	|	ЕСТЬNULL(-ИПМПЗОбороты.СуммаПриход - ИПМПЗОбороты.НДСПриход, 0),
	|	0,
	|	ЕСТЬNULL(ИПМПЗОбороты.СуммаПриход + ИПМПЗОбороты.НДСПриход, 0),
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ЕСТЬNULL(ИПМПЗОбороты.КоличествоПриход, 0),
	|	ЕСТЬNULL(ИПМПЗОбороты.СуммаПриход + ИПМПЗОбороты.НДСПриход, 0),
	|	ЕСТЬNULL(ИПМПЗОбороты.СуммаПриход, 0),
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ЕСТЬNULL(ИПМПЗОбороты.КоличествоПриход, 0)
	|ИЗ
	|	РегистрНакопления.ИПМПЗ.Обороты(
	|			&ДатаНачГода,
	|			&ДатаНач1,
	|			Месяц,
	|			Организация = &Организация
	|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
	|				И ВидМПЗ = &Продукция
	|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИПМПЗОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(-ИПМПЗОбороты.СуммаПриход, 0),
	|	0,
	|	ЕСТЬNULL(ИПМПЗОбороты.СуммаПриход, 0),
	|	ЕСТЬNULL(-ИПМПЗОбороты.СуммаПриход - ИПМПЗОбороты.НДСПриход, 0),
	|	0,
	|	ЕСТЬNULL(ИПМПЗОбороты.СуммаПриход + ИПМПЗОбороты.НДСПриход, 0),
	|	0,
	|	0,
	|	ИПМПЗОбороты.Номенклатура,
	|	НЕОПРЕДЕЛЕНО,
	|	ИПМПЗОбороты.Партия,
	|	0,
	|	МЕСЯЦ(ИПМПЗОбороты.Период),
	|	ИПМПЗОбороты.Период,
	|	ЕСТЬNULL(ИПМПЗОбороты.Партия.Номер, ИПМПЗОбороты.Партия.Номер),
	|	ЕСТЬNULL(ИПМПЗОбороты.Партия.Дата, ИПМПЗОбороты.Партия.Дата),
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ИПМПЗОбороты.ДокументОплаты,
	|	ИПМПЗОбороты.Номенклатура.БазоваяЕдиницаИзмерения.Наименование,
	|	ИПМПЗОбороты.Регистратор,
	|	НЕОПРЕДЕЛЕНО,
	|	ВЫБОР
	|		КОГДА ИПМПЗОбороты.Номенклатура ССЫЛКА Справочник.Номенклатура
	|			ТОГДА ПОДСТРОКА(ИПМПЗОбороты.Номенклатура.НаименованиеПолное, 1, 200)
	|		ИНАЧЕ ИПМПЗОбороты.Номенклатура.Наименование
	|	КОНЕЦ,
	|	0,
	|	0,
	|	0,
	|	ИПМПЗОбороты.ВидМПЗ,
	|	0,
	|	0,
	|	0,
	|	NULL,
	|	NULL,
	|	ЕСТЬNULL(ИПМПЗОбороты.КоличествоПриход, 0)
	|ИЗ
	|	РегистрНакопления.ИПМПЗ.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Регистратор,
	|			Организация = &Организация
	|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
	|				И ВидМПЗ <> &Продукция
	|				И ВидМПЗ <> &ВспомогательныйМатериал
	|				И ВидМПЗ <> &Материал
	|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИПМПЗОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(-ИПМПЗОбороты.СуммаПриход, 0),
	|	0,
	|	ЕСТЬNULL(ИПМПЗОбороты.СуммаПриход, 0),
	|	ЕСТЬNULL(-ИПМПЗОбороты.СуммаПриход - ИПМПЗОбороты.НДСПриход, 0),
	|	0,
	|	ЕСТЬNULL(ИПМПЗОбороты.СуммаПриход + ИПМПЗОбороты.НДСПриход, 0),
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	0,
	|	0,
	|	0,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ЕСТЬNULL(ИПМПЗОбороты.КоличествоПриход, 0)
	|ИЗ
	|	РегистрНакопления.ИПМПЗ.Обороты(
	|			&ДатаНачГода,
	|			&ДатаНач1,
	|			Месяц,
	|			Организация = &Организация
	|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
	|				И ВидМПЗ <> &Продукция
	|				И ВидМПЗ <> &ВспомогательныйМатериал
	|				И ВидМПЗ <> &Материал
	|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИПМПЗОбороты
	|
	|УПОРЯДОЧИТЬ ПО
	|	Месяц,
	|	Номенклатура,
	|	СтатьяЗатрат,
	|	Период,
	|	ДокументОтгрузкиДата,
	|	ПартияДата,
	|	ДокументОплатыДата
	|ИТОГИ
	|	СУММА(Результат),
	|	СУММА(ВыручкаБезНДС),
	|	СУММА(Сумма),
	|	СУММА(РезультатНеОблагаемыйНДС),
	|	СУММА(Выручка),
	|	СУММА(СуммаСНДС),
	|	СУММА(НДС),
	|	СУММА(НДСНачисленный),
	|	СУММА(Количество),
	|	МАКСИМУМ(ЕдиницаИзмерения),
	|	МАКСИМУМ(НоменклатураПредставление),
	|	СУММА(КоличествоПриход),
	|	СУММА(СуммаПриходСНДС),
	|	СУММА(СуммаПриход),
	|	СУММА(КоличествоОплачено)
	|ПО
	|	ОБЩИЕ,
	|	Месяц,
	|	Номенклатура,
	|	СтатьяЗатрат";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПоДоходамРасходамТребуютсяДоходы()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Доходы.Номенклатура КАК Номенклатура,
	|	Доходы.ДокументОтгрузки КАК ДокументОтгрузки,
	|	Доходы.Партия КАК Партия,
	|	Доходы.КоличествоОборот КАК Количество,
	|	МЕСЯЦ(Доходы.Период) КАК Месяц,
	|	Доходы.Период КАК Период,
	|	ЕСТЬNULL(Доходы.ВыручкаОборот, 0) КАК Выручка,
	|	ЕСТЬNULL(Доходы.ВыручкаОборот, 0) - ЕСТЬNULL(Доходы.НДСНачисленныйОборот, 0) КАК ВыручкаБезНДС,
	|	ЕСТЬNULL(Доходы.НДСНачисленныйОборот, 0) КАК НДСНачисленный,
	|	ЕСТЬNULL(Доходы.СуммаОборот, 0) + ЕСТЬNULL(Доходы.НДСОборот, 0) КАК СуммаСНДС,
	|	ЕСТЬNULL(Доходы.СуммаОборот, 0) КАК Сумма,
	|	ЕСТЬNULL(Доходы.НДСОборот, 0) КАК НДС,
	|	Доходы.Партия.Номер КАК ПартияНомер,
	|	Доходы.Партия.Дата КАК ПартияДата,
	|	Доходы.ДокументОтгрузки.Номер КАК ДокументОтгрузкиНомер,
	|	Доходы.ДокументОтгрузки.Дата КАК ДокументОтгрузкиДата,
	|	Доходы.ДокументОплаты КАК ДокументОплаты,
	|	ВЫБОР
	|		КОГДА Доходы.Номенклатура ССЫЛКА Справочник.Номенклатура
	|			ТОГДА Доходы.Номенклатура.БазоваяЕдиницаИзмерения.Наименование
	|		ИНАЧЕ ""-""
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	Доходы.Регистратор КАК Регистратор,
	|	ЕСТЬNULL(Доходы.ВыручкаОборот, 0) - ЕСТЬNULL(Доходы.НДСНачисленныйОборот, 0) - ЕСТЬNULL(Доходы.СуммаОборот, 0) КАК Результат,
	|	ЕСТЬNULL(Доходы.ВыручкаОборот, 0) - ЕСТЬNULL(Доходы.СуммаОборот, 0) - ЕСТЬNULL(Доходы.НДСОборот, 0) КАК РезультатНеОблагаемыйНДС,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяЗатрат,
	|	ВЫБОР
	|		КОГДА Доходы.Номенклатура ССЫЛКА Справочник.Номенклатура
	|			ТОГДА ПОДСТРОКА(Доходы.Номенклатура.НаименованиеПолное, 1, 200)
	|		ИНАЧЕ Доходы.Номенклатура.Наименование
	|	КОНЕЦ КАК НоменклатураПредставление,
	|	0 КАК КоличествоПриход,
	|	0 КАК СуммаПриходСНДС,
	|	0 КАК СуммаПриход,
	|	Доходы.ВидМПЗ,
	|	ЕСТЬNULL(Доходы.ВыручкаОборот, 0) / ВЫБОР
	|		КОГДА Доходы.КоличествоОборот ЕСТЬ NULL 
	|				ИЛИ Доходы.КоличествоОборот = 0
	|			ТОГДА 1
	|		ИНАЧЕ Доходы.КоличествоОборот
	|	КОНЕЦ КАК ЦенаЕдиницы,
	|	ЕСТЬNULL(Доходы.ВыручкаОборот, 0) / ВЫБОР
	|		КОГДА Доходы.КоличествоОборот ЕСТЬ NULL 
	|				ИЛИ Доходы.КоличествоОборот = 0
	|			ТОГДА 1
	|		ИНАЧЕ Доходы.КоличествоОборот
	|	КОНЕЦ - ЕСТЬNULL(Доходы.НДСНачисленныйОборот, 0) / ВЫБОР
	|		КОГДА Доходы.КоличествоОборот ЕСТЬ NULL 
	|				ИЛИ Доходы.КоличествоОборот = 0
	|			ТОГДА 1
	|		ИНАЧЕ Доходы.КоличествоОборот
	|	КОНЕЦ КАК ЦенаЕдиницыБезНДС,
	|	ЕСТЬNULL(Доходы.НДСНачисленныйОборот, 0) / ВЫБОР
	|		КОГДА Доходы.КоличествоОборот ЕСТЬ NULL 
	|				ИЛИ Доходы.КоличествоОборот = 0
	|			ТОГДА 1
	|		ИНАЧЕ Доходы.КоличествоОборот
	|	КОНЕЦ КАК НДСНачисленныйЕдиницы,
	|	Доходы.ДокументОплаты.Дата КАК ДокументОплатыДата,
	|	Движения.РеквизитыДокументаОплаты,
	|	Доходы.КоличествоОплаченоПоставщикуОборот КАК КоличествоОплачено
	|ИЗ
	|	РегистрНакопления.ИПДоходы.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Запись,
	|			Организация = &Организация
	|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)) КАК Доходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ИПДоходы КАК Движения
	|		ПО Доходы.Период = Движения.Период
	|			И Доходы.Регистратор = Движения.Регистратор
	|			И Доходы.НомерСтроки = Движения.НомерСтроки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ЕСТЬNULL(ОтгружОбороты.ВыручкаОборот, 0),
	|	ЕСТЬNULL(ОтгружОбороты.ВыручкаОборот - ОтгружОбороты.НДСНачисленныйОборот, 0),
	|	ЕСТЬNULL(ОтгружОбороты.НДСНачисленныйОборот, 0),
	|	ЕСТЬNULL(ОтгружОбороты.СуммаОборот + ОтгружОбороты.НДСОборот, 0),
	|	ЕСТЬNULL(ОтгружОбороты.СуммаОборот, 0),
	|	ЕСТЬNULL(ОтгружОбороты.НДСОборот, 0),
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ЕСТЬNULL(ОтгружОбороты.ВыручкаОборот - ОтгружОбороты.НДСНачисленныйОборот - ОтгружОбороты.СуммаОборот, 0),
	|	ЕСТЬNULL(ОтгружОбороты.ВыручкаОборот - ОтгружОбороты.СуммаОборот - ОтгружОбороты.НДСОборот, 0),
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	РегистрНакопления.ИПДоходы.Обороты(
	|			&ДатаНачГода,
	|			&ДатаНач1,
	|			,
	|			Организация = &Организация
	|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)) КАК ОтгружОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИПИныеМатериальныеРасходыОбороты.МПЗ,
	|	НЕОПРЕДЕЛЕНО,
	|	ИПИныеМатериальныеРасходыОбороты.Партия,
	|	0,
	|	МЕСЯЦ(ИПИныеМатериальныеРасходыОбороты.Период),
	|	ИПИныеМатериальныеРасходыОбороты.Период,
	|	0,
	|	0,
	|	0,
	|	ЕСТЬNULL(ИПИныеМатериальныеРасходыОбороты.СуммаРасход, 0) + ЕСТЬNULL(ИПИныеМатериальныеРасходыОбороты.НДСРасход, 0),
	|	ЕСТЬNULL(ИПИныеМатериальныеРасходыОбороты.СуммаРасход, 0),
	|	ЕСТЬNULL(ИПИныеМатериальныеРасходыОбороты.НДСРасход, 0),
	|	ИПИныеМатериальныеРасходыОбороты.Партия.Номер,
	|	ИПИныеМатериальныеРасходыОбороты.Партия.Дата,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ИПИныеМатериальныеРасходыОбороты.ДокументОплаты,
	|	ВЫБОР
	|		КОГДА ИПИныеМатериальныеРасходыОбороты.СтатьяЗатрат ССЫЛКА Справочник.Номенклатура
	|			ТОГДА ИПИныеМатериальныеРасходыОбороты.СтатьяЗатрат.БазоваяЕдиницаИзмерения.Наименование
	|		ИНАЧЕ ""-""
	|	КОНЕЦ,
	|	ИПИныеМатериальныеРасходыОбороты.Регистратор,
	|	ЕСТЬNULL(-ИПИныеМатериальныеРасходыОбороты.СуммаРасход, 0),
	|	ЕСТЬNULL(-ИПИныеМатериальныеРасходыОбороты.СуммаРасход - ИПИныеМатериальныеРасходыОбороты.НДСРасход, 0),
	|	ИПИныеМатериальныеРасходыОбороты.СтатьяЗатрат,
	|	ВЫБОР
	|		КОГДА ИПИныеМатериальныеРасходыОбороты.СтатьяЗатрат ССЫЛКА Справочник.Номенклатура
	|			ТОГДА ПОДСТРОКА(ИПИныеМатериальныеРасходыОбороты.СтатьяЗатрат.НаименованиеПолное, 1, 200)
	|		ИНАЧЕ ИПИныеМатериальныеРасходыОбороты.СтатьяЗатрат.Наименование
	|	КОНЕЦ,
	|	0,
	|	0,
	|	0,
	|	NULL,
	|	0,
	|	0,
	|	0,
	|	NULL,
	|	NULL,
	|	ЕСТЬNULL(ИПИныеМатериальныеРасходыОбороты.КоличествоРасход, 0)
	|ИЗ
	|	РегистрНакопления.ИПИныеМатериальныеРасходы.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Регистратор,
	|			Организация = &Организация
	|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
	|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИПИныеМатериальныеРасходыОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	0,
	|	0,
	|	NULL,
	|	ИМРОбороты.СуммаРасход + ИМРОбороты.НДСРасход,
	|	ИМРОбороты.СуммаРасход,
	|	ИМРОбороты.НДСРасход,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ЕСТЬNULL(-ИМРОбороты.СуммаРасход, 0),
	|	ЕСТЬNULL(-ИМРОбороты.СуммаРасход - ИМРОбороты.НДСРасход, 0),
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	РегистрНакопления.ИПИныеМатериальныеРасходы.Обороты(
	|			&ДатаНачГода,
	|			&ДатаНач1,
	|			Месяц,
	|			Организация = &Организация
	|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
	|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИМРОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИПМПЗОбороты.Номенклатура,
	|	НЕОПРЕДЕЛЕНО,
	|	ИПМПЗОбороты.Партия,
	|	0,
	|	МЕСЯЦ(ИПМПЗОбороты.Период),
	|	ИПМПЗОбороты.Период,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	ЕСТЬNULL(ИПМПЗОбороты.Партия.Номер, ИПМПЗОбороты.Партия.Номер),
	|	ЕСТЬNULL(ИПМПЗОбороты.Партия.Дата, ИПМПЗОбороты.Партия.Дата),
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ИПМПЗОбороты.ДокументОплаты,
	|	ИПМПЗОбороты.Номенклатура.БазоваяЕдиницаИзмерения.Наименование,
	|	ИПМПЗОбороты.Регистратор,
	|	0,
	|	0,
	|	НЕОПРЕДЕЛЕНО,
	|	ВЫБОР
	|		КОГДА ИПМПЗОбороты.Номенклатура ССЫЛКА Справочник.Номенклатура
	|			ТОГДА ПОДСТРОКА(ИПМПЗОбороты.Номенклатура.НаименованиеПолное, 1, 200)
	|		ИНАЧЕ ИПМПЗОбороты.Номенклатура.Наименование
	|	КОНЕЦ,
	|	ЕСТЬNULL(ИПМПЗОбороты.КоличествоПриход, 0),
	|	ЕСТЬNULL(ИПМПЗОбороты.СуммаПриход + ИПМПЗОбороты.НДСПриход, 0),
	|	ЕСТЬNULL(ИПМПЗОбороты.СуммаПриход, 0),
	|	ИПМПЗОбороты.ВидМПЗ,
	|	0,
	|	0,
	|	0,
	|	NULL,
	|	NULL,
	|	0
	|ИЗ
	|	РегистрНакопления.ИПМПЗ.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Регистратор,
	|			Организация = &Организация
	|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
	|				И ВидМПЗ = &Продукция
	|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИПМПЗОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	0,
	|	0,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	0,
	|	0,
	|	NULL,
	|	NULL,
	|	ЕСТЬNULL(ИПМПЗОбороты.КоличествоПриход, 0),
	|	ЕСТЬNULL(ИПМПЗОбороты.СуммаПриход + ИПМПЗОбороты.НДСПриход, 0),
	|	ЕСТЬNULL(ИПМПЗОбороты.СуммаПриход, 0),
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	РегистрНакопления.ИПМПЗ.Обороты(
	|			&ДатаНачГода,
	|			&ДатаНач1,
	|			Месяц,
	|			Организация = &Организация
	|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
	|				И ВидМПЗ = &Продукция
	|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИПМПЗОбороты
	|
	|УПОРЯДОЧИТЬ ПО
	|	Месяц,
	|	Номенклатура,
	|	СтатьяЗатрат,
	|	Период,
	|	ДокументОтгрузкиДата,
	|	ПартияДата,
	|	ДокументОплатыДата
	|ИТОГИ
	|	СУММА(Количество),
	|	СУММА(Выручка),
	|	СУММА(ВыручкаБезНДС),
	|	СУММА(НДСНачисленный),
	|	СУММА(СуммаСНДС),
	|	СУММА(Сумма),
	|	СУММА(НДС),
	|	МАКСИМУМ(ЕдиницаИзмерения),
	|	СУММА(Результат),
	|	СУММА(РезультатНеОблагаемыйНДС),
	|	МАКСИМУМ(НоменклатураПредставление),
	|	СУММА(КоличествоПриход),
	|	СУММА(СуммаПриходСНДС),
	|	СУММА(СуммаПриход),
	|	СУММА(КоличествоОплачено)
	|ПО
	|	ОБЩИЕ,
	|	Месяц,
	|	Номенклатура,
	|	СтатьяЗатрат";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПоИМР()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	МЕСЯЦ(ОстаткиИОбороты.Период) КАК Месяц,
	|	ОстаткиИОбороты.Период КАК Период,
	|	ОстаткиИОбороты.Регистратор КАК Регистратор,
	|	ОстаткиИОбороты.СтатьяЗатрат КАК СтатьяЗатрат,
	|	ОстаткиИОбороты.Партия КАК Партия,
	|	ОстаткиИОбороты.ДокументОплаты КАК ДокументОплаты,
	|	ОстаткиИОбороты.Партия.Номер КАК ПартияНомер,
	|	ОстаткиИОбороты.Партия.Дата КАК ПартияДата,
	|	ОстаткиИОбороты.КоличествоРасход КАК КоличествоРасход,
	|	ОстаткиИОбороты.СуммаРасход + ОстаткиИОбороты.НДСРасход КАК СуммаРасходСНДС,
	|	ОстаткиИОбороты.СуммаРасход КАК СуммаРасход,
	|	ОстаткиИОбороты.НДСРасход КАК НДСРасход,
	|	ОстаткиИОбороты.КоличествоПриход КАК КоличествоПриход,
	|	ОстаткиИОбороты.СуммаПриход + ОстаткиИОбороты.НДСПриход КАК СуммаПриходСНДС,
	|	ОстаткиИОбороты.СуммаПриход КАК СуммаПриход,
	|	ОстаткиИОбороты.НДСПриход КАК НДСПриход,
	|	ОстаткиИОбороты.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстаток,
	|	ОстаткиИОбороты.СуммаКонечныйОстаток КАК СуммаКонечныйОстаток,
	|	ОстаткиИОбороты.НДСКонечныйОстаток КАК НДСКонечныйОстаток,
	|	ВидыДеятельности.ВидДеятельности КАК ВидДеятельности,
	|	ВЫБОР
	|		КОГДА ОстаткиИОбороты.СтатьяЗатрат ССЫЛКА Справочник.Номенклатура
	|			ТОГДА ПОДСТРОКА(ОстаткиИОбороты.СтатьяЗатрат.НаименованиеПолное, 1, 200)
	|		ИНАЧЕ ОстаткиИОбороты.СтатьяЗатрат.Наименование
	|	КОНЕЦ КАК НоменклатураПредставление,
	|	ВЫБОР
	|		КОГДА ОстаткиИОбороты.СтатьяЗатрат ССЫЛКА Справочник.Номенклатура
	|			ТОГДА ОстаткиИОбороты.СтатьяЗатрат.БазоваяЕдиницаИзмерения.Наименование
	|		ИНАЧЕ ""-""
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ОстаткиИОбороты.СуммаКонечныйОстаток + ОстаткиИОбороты.НДСКонечныйОстаток КАК СуммаКонечныйОстатокСНДС,
	|	ОстаткиИОбороты.ДокументОплаты.Дата КАК ДокументОплатыДата
	|ИЗ
	|	РегистрНакопления.ИПИныеМатериальныеРасходы.ОстаткиИОбороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Регистратор,
	|			Движения,
	|			Организация = &Организация
	|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ОстаткиИОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВидыДеятельностиПредпринимателей КАК ВидыДеятельности
	|		ПО ОстаткиИОбороты.НоменклатурнаяГруппа = ВидыДеятельности.НоменклатурнаяГруппа
	|			И ОстаткиИОбороты.ХарактерДеятельности = ВидыДеятельности.ХарактерДеятельности
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	0,
	|	ИМРОбороты.СуммаРасход + ИМРОбороты.НДСРасход,
	|	ИМРОбороты.СуммаРасход,
	|	ИМРОбороты.НДСРасход,
	|	0,
	|	ИМРОбороты.СуммаПриход + ИМРОбороты.НДСПриход,
	|	ИМРОбороты.СуммаПриход,
	|	ИМРОбороты.НДСПриход,
	|	0,
	|	0,
	|	0,
	|	ВидыДеятельности.ВидДеятельности,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	РегистрНакопления.ИПИныеМатериальныеРасходы.Обороты(
	|			&ДатаНачГода,
	|			&ДатаНач1,
	|			,
	|			Организация = &Организация
	|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИМРОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВидыДеятельностиПредпринимателей КАК ВидыДеятельности
	|		ПО ИМРОбороты.НоменклатурнаяГруппа = ВидыДеятельности.НоменклатурнаяГруппа
	|			И ИМРОбороты.ХарактерДеятельности = ВидыДеятельности.ХарактерДеятельности
	|
	|УПОРЯДОЧИТЬ ПО
	|	Месяц,
	|	Период,
	|	СтатьяЗатрат,
	|	ПартияДата,
	|	ДокументОплатыДата,
	|	ВидДеятельности
	|ИТОГИ
	|	СУММА(КоличествоРасход),
	|	СУММА(СуммаРасходСНДС),
	|	СУММА(СуммаРасход),
	|	СУММА(НДСРасход),
	|	СУММА(КоличествоПриход),
	|	СУММА(СуммаПриходСНДС),
	|	СУММА(СуммаПриход),
	|	СУММА(НДСПриход),
	|	СУММА(КоличествоКонечныйОстаток),
	|	СУММА(СуммаКонечныйОстаток),
	|	СУММА(НДСКонечныйОстаток),
	|	СУММА(СуммаКонечныйОстатокСНДС)
	|ПО
	|	ОБЩИЕ,
	|	Месяц,
	|	Период,
	|	Регистратор,
	|	СтатьяЗатрат,
	|	Партия,
	|	ДокументОплаты,
	|	ВидДеятельности";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПоОстаткамИМР()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ИПИныеМатериальныеРасходыОстатки.СтатьяЗатрат КАК СтатьяЗатрат,
	|	ИПИныеМатериальныеРасходыОстатки.Партия КАК Партия,
	|	ИПИныеМатериальныеРасходыОстатки.ДокументОплаты КАК ДокументОплаты,
	|	ИПИныеМатериальныеРасходыОстатки.Партия.Номер КАК ПартияНомер,
	|	ИПИныеМатериальныеРасходыОстатки.Партия.Дата КАК ПартияДата,
	|	ВЫБОР
	|		КОГДА ИПИныеМатериальныеРасходыОстатки.СтатьяЗатрат ССЫЛКА Справочник.Номенклатура
	|			ТОГДА ИПИныеМатериальныеРасходыОстатки.СтатьяЗатрат.НаименованиеПолное
	|		ИНАЧЕ ИПИныеМатериальныеРасходыОстатки.СтатьяЗатрат.Наименование
	|	КОНЕЦ КАК НоменклатураПредставление,
	|	ВЫБОР
	|		КОГДА ИПИныеМатериальныеРасходыОстатки.СтатьяЗатрат ССЫЛКА Справочник.Номенклатура
	|			ТОГДА ИПИныеМатериальныеРасходыОстатки.СтатьяЗатрат.БазоваяЕдиницаИзмерения.Наименование
	|		ИНАЧЕ ""-""
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ИПИныеМатериальныеРасходыОстатки.КоличествоОстаток КАК КоличествоНачальныйОстаток,
	|	ИПИныеМатериальныеРасходыОстатки.СуммаОстаток КАК СуммаНачальныйОстаток,
	|	ИПИныеМатериальныеРасходыОстатки.НДСОстаток КАК НДСНачальныйОстаток,
	|	ИПИныеМатериальныеРасходыОстатки.СуммаОстаток + ИПИныеМатериальныеРасходыОстатки.НДСОстаток КАК СуммаНачальныйОстатокСНДС
	|ИЗ
	|	РегистрНакопления.ИПИныеМатериальныеРасходы.Остатки(
	|			&ДатаОстатков,
	|			Организация = &Организация
	|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
	|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИПИныеМатериальныеРасходыОстатки
	|
	|УПОРЯДОЧИТЬ ПО
	|	СтатьяЗатрат,
	|	ПартияДата,
	|	ИПИныеМатериальныеРасходыОстатки.ДокументОплаты.Дата";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПоОборотам()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ИПМПЗОборотыОбороты.ВидСписанногоМПЗ КАК ВидПолуфабриката,
	|	ИПМПЗОборотыОбороты.НоменклатураСписанная КАК Полуфабрикат,
	|	ИПМПЗОборотыОбороты.НоменклатураПоступившая КАК Номенклатура,
	|	ИПМПЗОборотыОбороты.ПартияСписаннойНоменклатуры КАК ПартияПолуфабриката,
	|	ИПМПЗОборотыОбороты.ПартияПоступившейНоменклатуры КАК Партия,
	|	СУММА(ЕСТЬNULL(ИПМПЗОборотыОбороты.КоличествоОборот, 0)) КАК Количество,
	|	СУММА(ЕСТЬNULL(ИПМПЗОборотыОбороты.СуммаОборот, 0)) КАК Сумма,
	|	СУММА(ЕСТЬNULL(ИПМПЗОборотыОбороты.НДСОборот, 0)) КАК НДС,
	|	МЕСЯЦ(ИПМПЗОборотыОбороты.Период) КАК Месяц,
	|	ИПМПЗОборотыОбороты.Период КАК День,
	|	ИПМПЗОборотыОбороты.ПартияПоступившейНоменклатуры.Дата КАК ПартияДата,
	|	ИПМПЗОборотыОбороты.Период КАК Период,
	|	ПРЕДСТАВЛЕНИЕ(ИПМПЗОборотыОбороты.НоменклатураПоступившая) КАК НоменклатураПредставление,
	|	ИПМПЗОборотыОбороты.ПартияСписаннойНоменклатуры.Дата КАК ПартияСписаннойНоменклатурыДата,
	|	ИПМПЗОборотыОбороты.ДокументОплаты.Дата КАК ДокументОплатыДата
	|ИЗ
	|	РегистрНакопления.ИПМПЗОбороты.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			День,
	|			Организация = &Организация
	|				И ВидПоступившегоМПЗ = &Продукция
	|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО
	|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)) КАК ИПМПЗОборотыОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ИПМПЗОборотыОбороты.ПартияПоступившейНоменклатуры,
	|	ИПМПЗОборотыОбороты.ПартияСписаннойНоменклатуры,
	|	ИПМПЗОборотыОбороты.ВидСписанногоМПЗ,
	|	ИПМПЗОборотыОбороты.НоменклатураСписанная,
	|	ИПМПЗОборотыОбороты.НоменклатураПоступившая,
	|	ИПМПЗОборотыОбороты.Период,
	|	ИПМПЗОборотыОбороты.ПартияПоступившейНоменклатуры.Дата,
	|	МЕСЯЦ(ИПМПЗОборотыОбороты.Период),
	|	ИПМПЗОборотыОбороты.ПартияСписаннойНоменклатуры.Дата,
	|	ИПМПЗОборотыОбороты.ДокументОплаты.Дата,
	|	ИПМПЗОборотыОбороты.Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	Месяц,
	|	Период,
	|	Номенклатура,
	|	ПартияДата,
	|	ВидПолуфабриката,
	|	Полуфабрикат,
	|	ПартияСписаннойНоменклатурыДата,
	|	ДокументОплатыДата
	|ИТОГИ
	|	СУММА(Количество),
	|	СУММА(Сумма),
	|	СУММА(НДС),
	|	МИНИМУМ(Период)
	|ПО
	|	Месяц,
	|	День,
	|	Номенклатура,
	|	Партия,
	|	ВидПолуфабриката,
	|	Полуфабрикат,
	|	ПартияПолуфабриката";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПоПрочимРасходам()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ИППрочиеРасходыОбороты.СуммаОборот, 0) КАК Сумма,
	|	ЕСТЬNULL(ИППрочиеРасходыОбороты.НДСОборот, 0) КАК НДС,
	|	ПРЕДСТАВЛЕНИЕ(ИППрочиеРасходыОбороты.СтатьяЗатрат),
	|	ИППрочиеРасходыОбороты.ДокументОплаты,
	|	ИППрочиеРасходыОбороты.РасчетныйДокумент,
	|	ИППрочиеРасходыОбороты.Регистратор,
	|	ИППрочиеРасходыОбороты.Период КАК Период,
	|	ИППрочиеРасходыОбороты.СтатьяЗатрат,
	|	ИППрочиеРасходыОбороты.ДокументОплаты.Дата КАК ДатаРасхода,
	|	НЕОПРЕДЕЛЕНО КАК РеквизитыДокументаОплаты,
	|	ИППрочиеРасходыОбороты.СчетУчета
	|ИЗ
	|	РегистрНакопления.ИППрочиеРасходы.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Регистратор,
	|			Организация = &Организация
	|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО
	|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
	|				И (СтатьяЗатрат ССЫЛКА Справочник.СтатьиЗатрат
	|					ИЛИ СтатьяЗатрат ССЫЛКА Справочник.ПрочиеДоходыИРасходы)
	|				И (СтатьяЗатрат.ПринятиеКналоговомуУчету
	|					ИЛИ СтатьяЗатрат.ВидРасходовНУ <> &ВидНеПринимаемыхРасходов)) КАК ИППрочиеРасходыОбороты
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ИППрочиеРасходыОбороты.СуммаОборот, 0),
	|	ЕСТЬNULL(ИППрочиеРасходыОбороты.НДСОборот, 0),
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	НЕОПРЕДЕЛЕНО,
	|	NULL
	|ИЗ
	|	РегистрНакопления.ИППрочиеРасходы.Обороты(
	|			&ДатаНачГода,
	|			&ДатаНач1,
	|			,
	|			Организация = &Организация
	|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО
	|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
	|				И (СтатьяЗатрат ССЫЛКА Справочник.СтатьиЗатрат
	|					ИЛИ СтатьяЗатрат ССЫЛКА Справочник.ПрочиеДоходыИРасходы)
	|				И (СтатьяЗатрат.ПринятиеКналоговомуУчету
	|					ИЛИ СтатьяЗатрат.ВидРасходовНУ <> &ВидНеПринимаемыхРасходов)) КАК ИППрочиеРасходыОбороты
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	ДатаРасхода";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПоРБП()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НЕОПРЕДЕЛЕНО КАК РеквизитыДокументаОплаты,
	|	ЕСТЬNULL(ИПРБПОстаткиИОбороты.СуммаКонечныйОстаток, 0) КАК Сумма,
	|	ЕСТЬNULL(ИПРБПОстаткиИОбороты.НДСКонечныйОстаток, 0) КАК НДС,
	|	ПРЕДСТАВЛЕНИЕ(ИПРБПОстаткиИОбороты.ВидРасхода),
	|	ИПРБПОстаткиИОбороты.ДокументОплаты КАК ДокументОплаты,
	|	ИПРБПОстаткиИОбороты.Партия КАК Партия,
	|	ИПРБПОстаткиИОбороты.ВидРасхода,
	|	ИПРБПОстаткиИОбороты.ДокументОплаты.Дата КАК ДатаРасхода
	|ИЗ
	|	РегистрНакопления.ИПРБП.ОстаткиИОбороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Период,
	|			,
	|			Организация = &Организация
	|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО
	|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
	|				И (ВидРасхода ССЫЛКА Справочник.РасходыБудущихПериодов
	|					ИЛИ ВидРасхода ССЫЛКА Справочник.ПрочиеДоходыИРасходы
	|						И ВидРасхода.ПринятиеКналоговомуУчету)) КАК ИПРБПОстаткиИОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НЕОПРЕДЕЛЕНО,
	|	ЕСТЬNULL(ИПРБПОстаткиИОбороты.СуммаКонечныйОстаток, 0),
	|	ЕСТЬNULL(ИПРБПОстаткиИОбороты.НДСКонечныйОстаток, 0),
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	РегистрНакопления.ИПРБП.ОстаткиИОбороты(
	|			&ДатаНачГода,
	|			&ДатаНач1,
	|			,
	|			,
	|			Организация = &Организация
	|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО
	|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
	|				И (ВидРасхода ССЫЛКА Справочник.РасходыБудущихПериодов
	|					ИЛИ ВидРасхода ССЫЛКА Справочник.ПрочиеДоходыИРасходы
	|						И ВидРасхода.ПринятиеКналоговомуУчету)) КАК ИПРБПОстаткиИОбороты
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаРасхода";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПоОплатеТруда()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ИПРасходыНаОплатуТрудаОбороты.СуммаОборот КАК Сумма,
	|	МЕСЯЦ(ИПРасходыНаОплатуТрудаОбороты.Период) КАК Месяц,
	|	ИПРасходыНаОплатуТрудаОбороты.ВидНачисленияУдержания КАК ВидНачисленияУдержания,
	|	ИПРасходыНаОплатуТрудаОбороты.ФизЛицо КАК ФизЛицо,
	|	ПРЕДСТАВЛЕНИЕ(ИПРасходыНаОплатуТрудаОбороты.ФизЛицо) КАК ФизЛицоПредставление,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументВид КАК Вид,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументСерия КАК Серия,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументНомер КАК Номер,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументДатаВыдачи КАК ДатаВыдачи,
	|	ВложенныйЗапрос.ДатаНачала КАК Период,
	|	ИПРасходыНаОплатуТрудаОбороты.ДокументОплаты КАК ДатаОплаты
	|ИЗ
	|	РегистрНакопления.ИПРасходыНаОплатуТруда.Обороты(
	|			&ДатаНачГода,
	|			&ДатаКон,
	|			Регистратор,
	|			Организация = &Организация
	|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО
	|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
	|				И (СтатьяЗатрат ССЫЛКА Справочник.СтатьиЗатрат
	|					ИЛИ СтатьяЗатрат ССЫЛКА Справочник.ПрочиеДоходыИРасходы)
	|				И (СтатьяЗатрат.ПринятиеКналоговомуУчету
	|					ИЛИ СтатьяЗатрат.ВидРасходовНУ <> &ВидНеПринимаемыхРасходов)) КАК ИПРасходыНаОплатуТрудаОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ДатаНачала.Физлицо КАК Физлицо,
	|			ДатаНачала.Период КАК ДатаНачала,
	|			МИНИМУМ(ЕСТЬNULL(ДатыОкончания.Период, &ДатаКон)) КАК ДатаОкончания,
	|			ДатаНачала.ГоловнаяОрганизация КАК ГоловнаяОрганизация
	|		ИЗ
	|			(ВЫБРАТЬ
	|				РаботникиОрганизаций.Сотрудник.Физлицо КАК Физлицо,
	|				РаботникиОрганизаций.Период КАК Период,
	|				РаботникиОрганизаций.Организация КАК ГоловнаяОрганизация
	|			ИЗ
	|				РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|			ГДЕ
	|				РаботникиОрганизаций.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу)
	|				И РаботникиОрганизаций.Период <= &ДатаКон
	|				И РаботникиОрганизаций.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
	|				И РаботникиОрганизаций.Организация = &Организация) КАК ДатаНачала
	|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|					РаботникиОрганизаций.Сотрудник.Физлицо КАК Физлицо,
	|					РаботникиОрганизаций.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	|					КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(РаботникиОрганизаций.Период, ДЕНЬ, -1), ДЕНЬ) КАК Период,
	|					РаботникиОрганизаций.Организация КАК ГоловнаяОрганизация
	|				ИЗ
	|					РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|				ГДЕ
	|					РаботникиОрганизаций.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|					И ДОБАВИТЬКДАТЕ(РаботникиОрганизаций.Период, ДЕНЬ, -1) <= ДОБАВИТЬКДАТЕ(&ДатаКон, ДЕНЬ, 1)
	|					И РаботникиОрганизаций.Период МЕЖДУ &ДатаНачГода И &ДатаКон
	|					И РаботникиОрганизаций.Организация = &Организация) КАК ДатыОкончания
	|				ПО ДатаНачала.Физлицо = ДатыОкончания.Физлицо
	|					И ДатаНачала.Период < ДатыОкончания.Период
	|					И ДатаНачала.ГоловнаяОрганизация = ДатыОкончания.ГоловнаяОрганизация
	|		ГДЕ
	|			ЕСТЬNULL(ДатыОкончания.Период, &ДатаКон) >= &ДатаНачГода
	|		{ГДЕ
	|			ДатаНачала.ГоловнаяОрганизация.*,
	|			ДатаНачала.Физлицо.*}
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ДатаНачала.Физлицо,
	|			ДатаНачала.Период,
	|			ДатаНачала.ГоловнаяОрганизация) КАК ВложенныйЗапрос
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПаспортныеДанныеФизЛиц.СрезПоследних(&ДатаКон, ) КАК ПаспортныеДанныеФизЛицСрезПоследних
	|			ПО ВложенныйЗапрос.Физлицо = ПаспортныеДанныеФизЛицСрезПоследних.ФизЛицо
	|		ПО ИПРасходыНаОплатуТрудаОбороты.ФизЛицо = ВложенныйЗапрос.Физлицо
	|			И ИПРасходыНаОплатуТрудаОбороты.Период <= ВложенныйЗапрос.ДатаОкончания
	|			И ИПРасходыНаОплатуТрудаОбороты.Период >= ВложенныйЗапрос.ДатаНачала
	|			И ИПРасходыНаОплатуТрудаОбороты.Организация = ВложенныйЗапрос.ГоловнаяОрганизация
	|
	|УПОРЯДОЧИТЬ ПО
	|	Месяц,
	|	ФизЛицо,
	|	ВидНачисленияУдержания
	|ИТОГИ
	|	СУММА(Сумма),
	|	МАКСИМУМ(Вид),
	|	МАКСИМУМ(Серия),
	|	МАКСИМУМ(Номер),
	|	МАКСИМУМ(ДатаВыдачи)
	|ПО
	|	Месяц,
	|	ФизЛицо,
	|	ВидНачисленияУдержания";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПоОС()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИПМПЗОстаткиИОбороты.Номенклатура КАК ОС,
	|	ПРЕДСТАВЛЕНИЕ(ИПМПЗОстаткиИОбороты.Номенклатура) КАК ОСПредставление,
	|	ИПМПЗОстаткиИОбороты.Партия КАК Партия,
	|	ИПМПЗОстаткиИОбороты.Номенклатура.КодПоОКОФ.Представление КАК ОКОФ,
	|	НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(СостоянияОСОрганизаций.ДатаСостояния, МЕСЯЦ, 1), МЕСЯЦ) КАК МесяцНачалаАмортизации,
	|	ВЫРАЗИТЬ((ЕСТЬNULL(ИПМПЗОстаткиИОбороты.СуммаНачальныйОстаток, 0) + ЕСТЬNULL(ИПМПЗОстаткиИОбороты.СуммаПриход, 0) + ВЫБОР
	|			КОГДА СобытияОСОрганизацийСрезПоследних.Событие ЕСТЬ NULL 
	|				ТОГДА 0
	|			ИНАЧЕ ЕСТЬNULL(ИППрочиеРасходыПредПериод.СуммаВсего, 0) + ЕСТЬNULL(ИППрочиеРасходыТекПериод.СуммаВсего, 0)
	|		КОНЕЦ) * ВЫБОР
	|			КОГДА ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних.СрокПолезногоИспользования <> 0
	|				ТОГДА 1 / ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних.СрокПолезногоИспользования * 100
	|			ИНАЧЕ 0
	|		КОНЕЦ / 100 КАК ЧИСЛО(15, 2)) КАК МесячнаяСуммаАмортизации,
	|	ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних.СрокПолезногоИспользования КАК СрокПолезногоИспользования,
	|	ВЫБОР
	|		КОГДА ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних.СрокПолезногоИспользования <> 0
	|			ТОГДА 1 / ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних.СрокПолезногоИспользования * 100
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК МесячнаяНорма,
	|	ЕСТЬNULL(ИПМПЗОстаткиИОбороты.СуммаНачальныйОстаток, 0) + ЕСТЬNULL(ИПМПЗОстаткиИОбороты.СуммаПриход, 0) + ВЫБОР
	|		КОГДА СобытияОСОрганизацийСрезПоследних.Событие ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ИППрочиеРасходыПредПериод.СуммаВсего, 0) + ЕСТЬNULL(ИППрочиеРасходыТекПериод.СуммаВсего, 0)
	|	КОНЕЦ КАК ПервоначальнаяСтоимость,
	|	МЕСЯЦ(&ДатаКон) - ВЫБОР
	|		КОГДА ГОД(ДОБАВИТЬКДАТЕ(СостоянияОСОрганизаций.ДатаСостояния, МЕСЯЦ, 1)) < ГОД(&ДатаКон)
	|			ТОГДА 0
	|		ИНАЧЕ МЕСЯЦ(ДОБАВИТЬКДАТЕ(СостоянияОСОрганизаций.ДатаСостояния, МЕСЯЦ, 1)) - 1
	|	КОНЕЦ КАК КоличествоМесяцевВПериоде,
	|	ПРЕДСТАВЛЕНИЕ(СобытияОСОрганизацийСрезПоследних.Событие) КАК СобытиеПредставление,
	|	ЕСТЬNULL(СобытияОСОрганизацийСрезПоследних.Событие, НЕОПРЕДЕЛЕНО) КАК СобытиеВыбытия,
	|	ЕСТЬNULL(СобытияОСОрганизацийСрезПоследних.НазваниеДокумента, """") КАК НазваниеДокументаВыбытия,
	|	ЕСТЬNULL(СобытияОСОрганизацийСрезПоследних.НомерДокумента, """") КАК НомерДокументаВыбытия,
	|	ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних.МетодНачисленияАмортизации КАК МетодНачисленияАмортизации,
	|	ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних.КоэффициентАмортизации КАК ГодоваяНормаПоЕНАОФ,
	|	ИПМПЗОстаткиИОбороты.Номенклатура.ШифрПоЕНАОФ КАК ЕНАОФ,
	|	ВЫРАЗИТЬ(ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних.СрокПолезногоИспользования / 12 КАК ЧИСЛО(17, 4)) КАК СрокПолезногоИспользованияЛет,
	|	ВЫРАЗИТЬ(ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних.КоэффициентАмортизации / 12 КАК ЧИСЛО(17, 4)) КАК МесячнаяНормаПоЕНАОФ,
	|	ВЫБОР
	|		КОГДА НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчетСрезПоследних.СпециальныйКоэффициент > 1
	|			ТОГДА ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних.КоэффициентАмортизации * НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчетСрезПоследних.СпециальныйКоэффициент
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ГодоваяНормаПоЕНАОФУскоренная,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчетСрезПоследних.СпециальныйКоэффициент > 1
	|				ТОГДА ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних.КоэффициентАмортизации * НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчетСрезПоследних.СпециальныйКоэффициент
	|			ИНАЧЕ 0
	|		КОНЕЦ / 12 КАК ЧИСЛО(17, 4)) КАК МесячнаяНормаПоЕНАОФУскоренная,
	|	ИПМПЗОстаткиИОбороты.ДокументОплаты КАК ДокументОплаты,
	|	ЕСТЬNULL(ИППрочиеРасходыПредПериод.Сумма, 0) КАК АмортизацияПредыдущихПериодов,
	|	ЕСТЬNULL(ИППрочиеРасходыПредПериод.СуммаВсего, 0) КАК АмортизацияПредыдущихПериодовВсего,
	|	ВЫБОР
	|		КОГДА ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних.МетодНачисленияАмортизации = &Линейный
	|				ИЛИ НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчетСрезПоследних.СпециальныйКоэффициент <= 1
	|			ТОГДА ЕСТЬNULL(ИППрочиеРасходыТекПериод.СуммаВсего, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаАмортизацииВсего,
	|	ВЫБОР
	|		КОГДА ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних.МетодНачисленияАмортизации = &Линейный
	|				ИЛИ НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчетСрезПоследних.СпециальныйКоэффициент <= 1
	|			ТОГДА ЕСТЬNULL(ИППрочиеРасходыТекПериод.Сумма, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаАмортизации,
	|	ВЫБОР
	|		КОГДА ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних.МетодНачисленияАмортизации <> &Линейный
	|				И НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчетСрезПоследних.СпециальныйКоэффициент > 1
	|			ТОГДА ЕСТЬNULL(ИППрочиеРасходыТекПериод.СуммаВсего, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаАмортизацииУскореннаяВсего,
	|	ВЫБОР
	|		КОГДА ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних.МетодНачисленияАмортизации <> &Линейный
	|				И НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчетСрезПоследних.СпециальныйКоэффициент > 1
	|			ТОГДА ЕСТЬNULL(ИППрочиеРасходыТекПериод.Сумма, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаАмортизацииУскоренная,
	|	ЕСТЬNULL(СобытияОСОрганизацийСрезПоследних.Регистратор, НЕОПРЕДЕЛЕНО) КАК ДокументВыбытия
	|ИЗ
	|	РегистрНакопления.ИПМПЗ.ОстаткиИОбороты(
	|			&ДатаНачГода,
	|			&ДатаКон,
	|			,
	|			,
	|			Организация = &Организация
	|				И ВидМПЗ = &ОС
	|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИПМПЗОстаткиИОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСНалоговыйУчет.СрезПоследних(&ДатаКон, Организация = &Организация) КАК ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних
	|		ПО ИПМПЗОстаткиИОбороты.Номенклатура = ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|		ПО ИПМПЗОстаткиИОбороты.Номенклатура = СостоянияОСОрганизаций.ОсновноеСредство
	|			И (СостоянияОСОрганизаций.Состояние = &ОСПринятоКУчету)
	|			И (СостоянияОСОрганизаций.Организация = &Организация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ИППрочиеРасходыОбороты.СтатьяЗатрат КАК СтатьяЗатрат,
	|			ИППрочиеРасходыОбороты.РасчетныйДокумент КАК РасчетныйДокумент,
	|			ИППрочиеРасходыОбороты.ДокументОплаты КАК ДокументОплаты,
	|			СУММА(ВЫБОР
	|					КОГДА ИППрочиеРасходыОбороты.ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|							И ИППрочиеРасходыОбороты.НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
	|						ТОГДА ЕСТЬNULL(ИППрочиеРасходыОбороты.СуммаОборот, 0)
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК Сумма,
	|			СУММА(ИППрочиеРасходыОбороты.СуммаОборот) КАК СуммаВсего
	|		ИЗ
	|			РегистрНакопления.ИППрочиеРасходы.Обороты(
	|					&ДатаНачГода,
	|					&ДатаКон,
	|					Год,
	|					Организация = &Организация
	|						И СтатьяЗатрат ССЫЛКА Справочник.ОсновныеСредства
	|						И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИППрочиеРасходыОбороты
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ИППрочиеРасходыОбороты.ДокументОплаты,
	|			ИППрочиеРасходыОбороты.СтатьяЗатрат,
	|			ИППрочиеРасходыОбороты.РасчетныйДокумент) КАК ИППрочиеРасходыТекПериод
	|		ПО ИПМПЗОстаткиИОбороты.Номенклатура = ИППрочиеРасходыТекПериод.СтатьяЗатрат
	|			И ИПМПЗОстаткиИОбороты.Партия = ИППрочиеРасходыТекПериод.РасчетныйДокумент
	|			И ИПМПЗОстаткиИОбороты.ДокументОплаты = ИППрочиеРасходыТекПериод.ДокументОплаты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СобытияОСОрганизаций.СрезПоследних(
	|				&ДатаКон,
	|				Организация = &Организация
	|					И (Событие.ВидСобытияОС = &Передача
	|						ИЛИ Событие.ВидСобытияОС = &Списание)) КАК СобытияОСОрганизацийСрезПоследних
	|		ПО ИПМПЗОстаткиИОбороты.Номенклатура = СобытияОСОрганизацийСрезПоследних.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ИППрочиеРасходыОбороты.СтатьяЗатрат КАК СтатьяЗатрат,
	|			ИППрочиеРасходыОбороты.РасчетныйДокумент КАК РасчетныйДокумент,
	|			ИППрочиеРасходыОбороты.ДокументОплаты КАК ДокументОплаты,
	|			СУММА(ИППрочиеРасходыОбороты.СуммаОборот) КАК СуммаВсего,
	|			СУММА(ВЫБОР
	|					КОГДА ИППрочиеРасходыОбороты.ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|							И ИППрочиеРасходыОбороты.НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
	|						ТОГДА ЕСТЬNULL(ИППрочиеРасходыОбороты.СуммаОборот, 0)
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК Сумма
	|		ИЗ
	|			РегистрНакопления.ИППрочиеРасходы.Обороты(
	|					,
	|					&ДатаНачГода,
	|					,
	|					Организация = &Организация
	|						И СтатьяЗатрат ССЫЛКА Справочник.ОсновныеСредства
	|						И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИППрочиеРасходыОбороты
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ИППрочиеРасходыОбороты.ДокументОплаты,
	|			ИППрочиеРасходыОбороты.РасчетныйДокумент,
	|			ИППрочиеРасходыОбороты.СтатьяЗатрат) КАК ИППрочиеРасходыПредПериод
	|		ПО ИПМПЗОстаткиИОбороты.Номенклатура = ИППрочиеРасходыПредПериод.СтатьяЗатрат
	|			И ИПМПЗОстаткиИОбороты.Партия = ИППрочиеРасходыПредПериод.РасчетныйДокумент
	|			И ИПМПЗОстаткиИОбороты.ДокументОплаты = ИППрочиеРасходыПредПериод.ДокументОплаты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСНалоговыйУчет.СрезПоследних(&ДатаКон, ) КАК ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних
	|		ПО ИПМПЗОстаткиИОбороты.Номенклатура = ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчет.СрезПоследних(&ДатаКон, Организация = &Организация) КАК НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчетСрезПоследних
	|		ПО ИПМПЗОстаткиИОбороты.Номенклатура = НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчетСрезПоследних.ОсновноеСредство
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОС,
	|	ИПМПЗОстаткиИОбороты.ДокументОплаты.Дата
	|ИТОГИ
	|	МАКСИМУМ(ОС),
	|	МАКСИМУМ(ОСПредставление),
	|	МАКСИМУМ(Партия),
	|	МАКСИМУМ(ОКОФ),
	|	МАКСИМУМ(МесяцНачалаАмортизации),
	|	СУММА(МесячнаяСуммаАмортизации),
	|	МАКСИМУМ(СрокПолезногоИспользования),
	|	МАКСИМУМ(МесячнаяНорма),
	|	СУММА(ПервоначальнаяСтоимость),
	|	МАКСИМУМ(КоличествоМесяцевВПериоде),
	|	МАКСИМУМ(СобытиеПредставление),
	|	МАКСИМУМ(СобытиеВыбытия),
	|	МАКСИМУМ(НазваниеДокументаВыбытия),
	|	МАКСИМУМ(НомерДокументаВыбытия),
	|	МАКСИМУМ(ГодоваяНормаПоЕНАОФ),
	|	МАКСИМУМ(ЕНАОФ),
	|	МАКСИМУМ(СрокПолезногоИспользованияЛет),
	|	МАКСИМУМ(МесячнаяНормаПоЕНАОФ),
	|	МАКСИМУМ(ГодоваяНормаПоЕНАОФУскоренная),
	|	МАКСИМУМ(МесячнаяНормаПоЕНАОФУскоренная),
	|	СУММА(АмортизацияПредыдущихПериодов),
	|	СУММА(АмортизацияПредыдущихПериодовВсего),
	|	СУММА(СуммаАмортизацииВсего),
	|	СУММА(СуммаАмортизации),
	|	СУММА(СуммаАмортизацииУскореннаяВсего),
	|	СУММА(СуммаАмортизацииУскоренная),
	|	МАКСИМУМ(ДокументВыбытия)
	|ПО
	|	МетодНачисленияАмортизации,
	|	ОС КАК ОС,
	|	ДокументОплаты";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПоНМА()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИПМПЗОстаткиИОбороты.Номенклатура КАК НМА,
	|	ПРЕДСТАВЛЕНИЕ(ИПМПЗОстаткиИОбороты.Номенклатура) КАК НМАПредставление,
	|	ИПМПЗОстаткиИОбороты.Партия КАК Партия,
	|	ПервоначальныеСведенияНМАНалоговыйУчетСрезПоследних.ДатаПриобретения КАК ДатаПриобретения,
	|	НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ИПМПЗОстаткиИОбороты.Партия.Дата, МЕСЯЦ, 1), МЕСЯЦ) КАК МесяцНачалаАмортизации,
	|	ПервоначальныеСведенияНМАНалоговыйУчетСрезПоследних.СрокПолезногоИспользования КАК СрокПолезногоИспользования,
	|	ВЫБОР
	|		КОГДА ПервоначальныеСведенияНМАНалоговыйУчетСрезПоследних.СрокПолезногоИспользования > 0
	|			ТОГДА 1 / ПервоначальныеСведенияНМАНалоговыйУчетСрезПоследних.СрокПолезногоИспользования * 100
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК МесячнаяНормаАмортизации,
	|	(ЕСТЬNULL(ИПМПЗОстаткиИОбороты.СуммаНачальныйОстаток, 0) + ЕСТЬNULL(ИПМПЗОстаткиИОбороты.СуммаПриход, 0)) * ВЫБОР
	|		КОГДА ПервоначальныеСведенияНМАНалоговыйУчетСрезПоследних.СрокПолезногоИспользования > 0
	|			ТОГДА 1 / ПервоначальныеСведенияНМАНалоговыйУчетСрезПоследних.СрокПолезногоИспользования
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК МесячнаяСуммаАмортизации,
	|	МЕСЯЦ(&ДатаКон) - ВЫБОР
	|		КОГДА ГОД(ДОБАВИТЬКДАТЕ(ИПМПЗОстаткиИОбороты.Партия.Дата, МЕСЯЦ, 1)) < ГОД(&ДатаКон)
	|			ТОГДА 0
	|		ИНАЧЕ МЕСЯЦ(ДОБАВИТЬКДАТЕ(ИПМПЗОстаткиИОбороты.Партия.Дата, МЕСЯЦ, 1)) - 1
	|	КОНЕЦ КАК КоличествоМесяцевВПериоде,
	|	ЕСТЬNULL(СостоянияНМАОрганизаций.Регистратор, НЕОПРЕДЕЛЕНО) КАК СобытиеВыбытия,
	|	ВЫБОР
	|		КОГДА ГОД(ПервоначальныеСведенияНМАНалоговыйУчетСрезПоследних.ДатаПриобретения) < 2002
	|			ТОГДА 2
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК До2002,
	|	ИПМПЗОстаткиИОбороты.ДокументОплаты КАК ДокументОплаты,
	|	ЕСТЬNULL(ИПМПЗОстаткиИОбороты.СуммаНачальныйОстаток, 0) + ЕСТЬNULL(ИПМПЗОстаткиИОбороты.СуммаПриход, 0) КАК ПервоначальнаяСтоимость,
	|	ЕСТЬNULL(ИППрочиеРасходыПредПериод.Сумма, 0) КАК АмортизацияПредыдущихПериодов,
	|	ЕСТЬNULL(ИППрочиеРасходыТекПериод.СуммаВсего, 0) КАК СуммаАмортизацииВсего,
	|	ЕСТЬNULL(ИППрочиеРасходыПредПериод.СуммаВсего, 0) КАК АмортизацияПредыдущихПериодовВсего,
	|	ЕСТЬNULL(ИППрочиеРасходыТекПериод.Сумма, 0) КАК СуммаАмортизации
	|ИЗ
	|	РегистрНакопления.ИПМПЗ.ОстаткиИОбороты(
	|			&ДатаНачГода,
	|			&ДатаКон,
	|			,
	|			,
	|			Организация = &Организация
	|				И ВидМПЗ = &НМА
	|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИПМПЗОстаткиИОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ИППрочиеРасходыОбороты.СтатьяЗатрат КАК СтатьяЗатрат,
	|			ИППрочиеРасходыОбороты.РасчетныйДокумент КАК РасчетныйДокумент,
	|			ИППрочиеРасходыОбороты.ДокументОплаты КАК ДокументОплаты,
	|			СУММА(ВЫБОР
	|					КОГДА ИППрочиеРасходыОбороты.ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|							И ИППрочиеРасходыОбороты.НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
	|						ТОГДА ЕСТЬNULL(ИППрочиеРасходыОбороты.СуммаОборот, 0)
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК Сумма,
	|			СУММА(ИППрочиеРасходыОбороты.СуммаОборот) КАК СуммаВсего
	|		ИЗ
	|			РегистрНакопления.ИППрочиеРасходы.Обороты(
	|					&ДатаНачГода,
	|					&ДатаКон,
	|					Год,
	|					Организация = &Организация
	|						И СтатьяЗатрат ССЫЛКА Справочник.НематериальныеАктивы
	|						И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИППрочиеРасходыОбороты
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ИППрочиеРасходыОбороты.СтатьяЗатрат,
	|			ИППрочиеРасходыОбороты.РасчетныйДокумент,
	|			ИППрочиеРасходыОбороты.ДокументОплаты) КАК ИППрочиеРасходыТекПериод
	|		ПО ИПМПЗОстаткиИОбороты.Номенклатура = ИППрочиеРасходыТекПериод.СтатьяЗатрат
	|			И ИПМПЗОстаткиИОбороты.Партия = ИППрочиеРасходыТекПериод.РасчетныйДокумент
	|			И ИПМПЗОстаткиИОбороты.ДокументОплаты = ИППрочиеРасходыТекПериод.ДокументОплаты
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ИППрочиеРасходыОбороты.СтатьяЗатрат КАК СтатьяЗатрат,
	|			ИППрочиеРасходыОбороты.РасчетныйДокумент КАК РасчетныйДокумент,
	|			ИППрочиеРасходыОбороты.ДокументОплаты КАК ДокументОплаты,
	|			СУММА(ВЫБОР
	|					КОГДА ИППрочиеРасходыОбороты.ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|							И ИППрочиеРасходыОбороты.НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
	|						ТОГДА ЕСТЬNULL(ИППрочиеРасходыОбороты.СуммаОборот, 0)
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК Сумма,
	|			СУММА(ИППрочиеРасходыОбороты.СуммаОборот) КАК СуммаВсего
	|		ИЗ
	|			РегистрНакопления.ИППрочиеРасходы.Обороты(
	|					,
	|					&ДатаНачГода,
	|					,
	|					Организация = &Организация
	|						И СтатьяЗатрат ССЫЛКА Справочник.НематериальныеАктивы
	|						И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИППрочиеРасходыОбороты
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ИППрочиеРасходыОбороты.СтатьяЗатрат,
	|			ИППрочиеРасходыОбороты.РасчетныйДокумент,
	|			ИППрочиеРасходыОбороты.ДокументОплаты) КАК ИППрочиеРасходыПредПериод
	|		ПО ИПМПЗОстаткиИОбороты.Номенклатура = ИППрочиеРасходыПредПериод.СтатьяЗатрат
	|			И ИПМПЗОстаткиИОбороты.Партия = ИППрочиеРасходыПредПериод.РасчетныйДокумент
	|			И ИПМПЗОстаткиИОбороты.ДокументОплаты = ИППрочиеРасходыПредПериод.ДокументОплаты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияНМАНалоговыйУчет.СрезПоследних(&ДатаКон, Организация = &Организация) КАК ПервоначальныеСведенияНМАНалоговыйУчетСрезПоследних
	|		ПО ИПМПЗОстаткиИОбороты.Номенклатура = ПервоначальныеСведенияНМАНалоговыйУчетСрезПоследних.НематериальныйАктив
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияНМАОрганизаций КАК СостоянияНМАОрганизаций
	|		ПО ИПМПЗОстаткиИОбороты.Номенклатура = СостоянияНМАОрганизаций.НематериальныйАктив
	|			И ИПМПЗОстаткиИОбороты.Организация = СостоянияНМАОрганизаций.Организация
	|			И (СостоянияНМАОрганизаций.Состояние = &Выбыло)
	|
	|УПОРЯДОЧИТЬ ПО
	|	До2002,
	|	НМА,
	|	ИПМПЗОстаткиИОбороты.ДокументОплаты.Дата
	|ИТОГИ
	|	МАКСИМУМ(НМАПредставление),
	|	МАКСИМУМ(Партия),
	|	МАКСИМУМ(ДатаПриобретения),
	|	МАКСИМУМ(МесяцНачалаАмортизации),
	|	МАКСИМУМ(СрокПолезногоИспользования),
	|	МАКСИМУМ(МесячнаяНормаАмортизации),
	|	СУММА(МесячнаяСуммаАмортизации),
	|	МАКСИМУМ(КоличествоМесяцевВПериоде),
	|	МАКСИМУМ(СобытиеВыбытия),
	|	СУММА(ПервоначальнаяСтоимость),
	|	СУММА(АмортизацияПредыдущихПериодов),
	|	СУММА(СуммаАмортизацииВсего),
	|	СУММА(АмортизацияПредыдущихПериодовВсего),
	|	СУММА(СуммаАмортизации)
	|ПО
	|	До2002,
	|	НМА,
	|	ДокументОплаты";
	
	Возврат ТекстЗапроса;
	
КонецФункции

функция ТекстЗапросаПоМатериальнымРасходам()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ИПМПЗОбороты.СуммаПриход + ИПМПЗОбороты.НДСПриход, 0) КАК СуммаСНДС,
	|	ЕСТЬNULL(ИПМПЗОбороты.СуммаПриход, 0) КАК Сумма,
	|	ЕСТЬNULL(ИПМПЗОбороты.НДСПриход, 0) КАК НДС
	|ИЗ
	|	РегистрНакопления.ИПМПЗ.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Регистратор,
	|			Организация = &Организация
	|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
	|				И ВидМПЗ = &Продукция
	|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИПМПЗОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ИПМПЗОбороты.СуммаПриход + ИПМПЗОбороты.НДСПриход, 0),
	|	ЕСТЬNULL(ИПМПЗОбороты.СуммаПриход, 0),
	|	ЕСТЬNULL(ИПМПЗОбороты.НДСПриход, 0)
	|ИЗ
	|	РегистрНакопления.ИПМПЗ.Обороты(
	|			&ДатаНачГода,
	|			&ДатаНач1,
	|			Месяц,
	|			Организация = &Организация
	|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
	|				И ВидМПЗ = &Продукция
	|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИПМПЗОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ИПМПЗОбороты.СуммаПриход + ИПМПЗОбороты.НДСПриход, 0),
	|	ЕСТЬNULL(ИПМПЗОбороты.СуммаПриход, 0),
	|	ЕСТЬNULL(ИПМПЗОбороты.НДСПриход, 0)
	|ИЗ
	|	РегистрНакопления.ИПМПЗ.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Регистратор,
	|			Организация = &Организация
	|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
	|				И ВидМПЗ <> &Продукция
	|				И ВидМПЗ <> &ВспомогательныйМатериал
	|				И ВидМПЗ <> &Материал
	|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИПМПЗОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ИПМПЗОбороты.СуммаПриход + ИПМПЗОбороты.НДСПриход, 0),
	|	ЕСТЬNULL(ИПМПЗОбороты.СуммаПриход, 0),
	|	ЕСТЬNULL(ИПМПЗОбороты.НДСПриход, 0)
	|ИЗ
	|	РегистрНакопления.ИПМПЗ.Обороты(
	|			&ДатаНачГода,
	|			&ДатаНач1,
	|			Месяц,
	|			Организация = &Организация
	|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
	|				И ВидМПЗ <> &Продукция
	|				И ВидМПЗ <> &ВспомогательныйМатериал
	|				И ВидМПЗ <> &Материал
	|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИПМПЗОбороты
	|ИТОГИ
	|	СУММА(СуммаСНДС),
	|	СУММА(Сумма),
	|	СУММА(НДС)
	|ПО
	|	ОБЩИЕ";
	
	Возврат ТекстЗапроса;
	
КонецФункции

функция ТекстЗапросаПоМатериальнымРасходамТребуютсяДоходы()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ОтгружОбороты.СуммаОборот + ОтгружОбороты.НДСОборот, 0) КАК СуммаСНДС,
	|	ЕСТЬNULL(ОтгружОбороты.СуммаОборот, 0) КАК Сумма,
	|	ЕСТЬNULL(ОтгружОбороты.НДСОборот, 0) КАК НДС
	|ИЗ
	|	РегистрНакопления.ИПДоходы.Обороты(
	|			&ДатаНачГода,
	|			&ДатаКон,
	|			,
	|			Организация = &Организация
	|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)) КАК ОтгружОбороты
	|ИТОГИ
	|	СУММА(СуммаСНДС),
	|	СУММА(Сумма),
	|	СУММА(НДС)
	|ПО
	|	ОБЩИЕ";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ФормированиеСпискаТаблиц()
	
	Если СписокТаблиц.Количество() > 0 Тогда
		Возврат;
	КонецЕсли;
	
	НоваяСтрока = СписокТаблиц.Добавить();
	НоваяСтрока.ЗаголовокСтраницы = "Титульный лист";
	НоваяСтрока.ИмяМакета = "ТитульныйЛист";
	НоваяСтрока.ИмяДокумента = "ПолеТабличногоДокумента15";
	НоваяСтрока.Наименование = "Титульный лист";
	НоваяСтрока.НаименованиеПолное = "Титульный лист";
	НоваяСтрока.КодТаблицы = 71;
	НоваяСтрока.ЗаголовокТаблицы = "Титульный лист";
	НоваяСтрока.Формировать = Истина;
		
	НоваяСтрока = СписокТаблиц.Добавить();
	НоваяСтрока.ЗаголовокСтраницы = "Сведения";
	НоваяСтрока.ИмяМакета = "Сведения";
	НоваяСтрока.ИмяДокумента = "ПолеТабличногоДокумента17";
	НоваяСтрока.Наименование = "Сведения об индивидуальном предпринимателе";
	НоваяСтрока.НаименованиеПолное = "Сведения об индивидуальном предпринимателе";
	НоваяСтрока.КодТаблицы = 73;
	НоваяСтрока.ЗаголовокТаблицы = "Сведения";
	НоваяСтрока.Формировать = Истина;
	
	НоваяСтрока = СписокТаблиц.Добавить();
	НоваяСтрока.ЗаголовокСтраницы = "Содержание";
	НоваяСтрока.ИмяМакета = "Содержание";
	НоваяСтрока.ИмяДокумента = "ПолеТабличногоДокумента16";
	НоваяСтрока.Наименование = "Содержание";
	НоваяСтрока.НаименованиеПолное = "Содержание";
	НоваяСтрока.КодТаблицы = 72;
	НоваяСтрока.ЗаголовокТаблицы = "Содержание";
	НоваяСтрока.Формировать = Истина;
	
	НоваяСтрока = СписокТаблиц.Добавить();
	НоваяСтрока.ЗаголовокСтраницы = "Таб. 1-1";
	НоваяСтрока.ИмяМакета = "Т11";
	НоваяСтрока.ИмяДокумента = "ПолеТабличногоДокумента1";
	НоваяСтрока.Наименование = "Учет сырья";
	НоваяСтрока.НаименованиеПолное = "Учет приобретенного и израсходованного сырья по видам товаров (работ, услуг)";
	НоваяСтрока.КодТаблицы = 11;
	НоваяСтрока.ЗаголовокТаблицы = "Таблица № 1-1";
	НоваяСтрока.Формировать = Истина;
	
	НоваяСтрока = СписокТаблиц.Добавить();
	НоваяСтрока.ЗаголовокСтраницы = "Таб. 1-2";
	НоваяСтрока.ИмяМакета = "Т12";
	НоваяСтрока.ИмяДокумента = "ПолеТабличногоДокумента2";
	НоваяСтрока.Наименование = "Учет полуфабрикатов";
	НоваяСтрока.НаименованиеПолное = "Учет выработанных и израсходованных полуфабрикатов по видам товаров (работ, услуг)";
	НоваяСтрока.КодТаблицы = 12;
	НоваяСтрока.ЗаголовокТаблицы = "Таблица № 1-2";
	НоваяСтрока.Формировать = Истина;
	
	НоваяСтрока = СписокТаблиц.Добавить();
	НоваяСтрока.ЗаголовокСтраницы = "Таб. 1-3";
	НоваяСтрока.ИмяМакета = "Т11";
	НоваяСтрока.ИмяДокумента = "ПолеТабличногоДокумента3";
	НоваяСтрока.Наименование = "Учет вспомогательных материалов";
	НоваяСтрока.НаименованиеПолное = "Учет приобретенного и израсходованного вспомогательного сырья и материалов по видам товаров (работ, услуг)";
	НоваяСтрока.КодТаблицы = 13;
	НоваяСтрока.ЗаголовокТаблицы = "Таблица № 1-3";
	НоваяСтрока.Формировать = Истина;
	
	НоваяСтрока = СписокТаблиц.Добавить();
	НоваяСтрока.ЗаголовокСтраницы = "Таб. 1-4";
	НоваяСтрока.ИмяМакета = "Т14";
	НоваяСтрока.ИмяДокумента = "ПолеТабличногоДокумента4";
	НоваяСтрока.Наименование = "Иные материальные расходы";
	НоваяСтрока.НаименованиеПолное = "Учет иных материальных расходов (в т.ч. топливо, электроэнергия, транспортные услуги и т.п.) и их распределение по видам деятельности";
	НоваяСтрока.КодТаблицы = 14;
	НоваяСтрока.ЗаголовокТаблицы = "Таблица № 1-4";
	НоваяСтрока.Формировать = Истина;
	
	НоваяСтрока = СписокТаблиц.Добавить();
	НоваяСтрока.ЗаголовокСтраницы = "Таб. 1-5";
	НоваяСтрока.ИмяМакета = "Т15";
	НоваяСтрока.ИмяДокумента = "ПолеТабличногоДокумента5";
	НоваяСтрока.Наименование = "Учет материалов, переданных в производство";
	НоваяСтрока.НаименованиеПолное = "Количественно-суммовой учет израсходованных материальных ресурсов на выпущенную готовую продукцию по видам товаров (работ, услуг)";
	НоваяСтрока.КодТаблицы = 15;
	НоваяСтрока.ЗаголовокТаблицы = "Таблица № 1-5";
	НоваяСтрока.Формировать = Истина;
	
	НоваяСтрока = СписокТаблиц.Добавить();
	НоваяСтрока.ЗаголовокСтраницы = "Таб. 1-6";
	НоваяСтрока.ИмяМакета = "Т16";
	НоваяСтрока.ИмяДокумента = "ПолеТабличногоДокумента6";
	НоваяСтрока.Наименование = "Учет доходов и расходов";
	НоваяСтрока.НаименованиеПолное = "Учет доходов и расходов по видам товаров (работ, услуг) в момент их совершения";
	НоваяСтрока.КодТаблицы = 16;
	НоваяСтрока.ЗаголовокТаблицы = "Таблица № 1-6";
	НоваяСтрока.Формировать = Истина;
	
	НоваяСтрока = СписокТаблиц.Добавить();
	НоваяСтрока.ЗаголовокСтраницы = "Таб. 1-7";
	НоваяСтрока.ИмяМакета = "Т16";
	НоваяСтрока.ИмяДокумента = "ПолеТабличногоДокумента7";
	НоваяСтрока.Наименование = "Доходы и расходы от реализации";
	НоваяСтрока.НаименованиеПолное = "Учет доходов и расходов по всем видам товаров (работ, услуг) за месяц";
	НоваяСтрока.КодТаблицы = 17;
	НоваяСтрока.ЗаголовокТаблицы = "Таблица № 1-7";
	НоваяСтрока.Формировать = Истина;
	
	НоваяСтрока = СписокТаблиц.Добавить();
	НоваяСтрока.ЗаголовокСтраницы = "Таб. 2-1";
	НоваяСтрока.ИмяМакета = "Т21";
	НоваяСтрока.ИмяДокумента = "ПолеТабличногоДокумента8";
	НоваяСтрока.Наименование = "Амортизация ОС";
	НоваяСтрока.НаименованиеПолное = "Расчет амортизации основных средств, непосредственно используемых для осуществления предпринимательской деятельности";
	НоваяСтрока.КодТаблицы = 21;
	НоваяСтрока.ЗаголовокТаблицы = "Таблица № 2-1";
	НоваяСтрока.Формировать = Истина;
	
	НоваяСтрока = СписокТаблиц.Добавить();
	НоваяСтрока.ЗаголовокСтраницы = "Таб. 2-2";
	НоваяСтрока.ИмяМакета = "Т22";
	НоваяСтрока.ИмяДокумента = "ПолеТабличногоДокумента9";
	НоваяСтрока.Наименование = "Амортизация ОС, приобретенных до 01.01.2002 г.";
	НоваяСтрока.НаименованиеПолное = "Расчет амортизации по основным средствам, приобретенным до 1 января 2002 г. и используемым для осуществления предпринимательской деятельности";
	НоваяСтрока.КодТаблицы = 22;
	НоваяСтрока.ЗаголовокТаблицы = "Таблица № 2-2";
	НоваяСтрока.Формировать = Истина;
	
	НоваяСтрока = СписокТаблиц.Добавить();
	НоваяСтрока.ЗаголовокСтраницы = "Таб. 4-1";
	НоваяСтрока.ИмяМакета = "Т41";
	НоваяСтрока.ИмяДокумента = "ПолеТабличногоДокумента10";
	НоваяСтрока.Наименование = "Амортизация НМА";
	НоваяСтрока.НаименованиеПолное = "Расчет амортизации нематериальных активов, непосредственно используемых для осуществления предпринимательской деятельности";
	НоваяСтрока.КодТаблицы = 41;
	НоваяСтрока.ЗаголовокТаблицы = "Таблица № 4-1";
	НоваяСтрока.Формировать = Истина;
	
	НоваяСтрока = СписокТаблиц.Добавить();
	НоваяСтрока.ЗаголовокСтраницы = "Таб. 4-2";
	НоваяСтрока.ИмяМакета = "Т42";
	НоваяСтрока.ИмяДокумента = "ПолеТабличногоДокумента11";
	НоваяСтрока.Наименование = "Амортизация НМА, приобретенных до 01.01.2002 г.";
	НоваяСтрока.НаименованиеПолное = "Расчет амортизации по нематериальным активам, приобретенным до 1 января 2002 г. и используемым для осуществления предпринимательской деятельности";
	НоваяСтрока.КодТаблицы = 42;
	НоваяСтрока.ЗаголовокТаблицы = "Таблица № 4-2";
	НоваяСтрока.Формировать = Истина;
	
	НоваяСтрока = СписокТаблиц.Добавить();
	НоваяСтрока.ЗаголовокСтраницы = "Таб. 5";
	НоваяСтрока.ИмяМакета = "Т5";
	НоваяСтрока.ИмяДокумента = "ПолеТабличногоДокумента12";
	НоваяСтрока.Наименование = "Расходы на оплату труда";
	НоваяСтрока.НаименованиеПолное = "Расчет начисленных (выплаченных) в виде оплаты труда доходов и удержанных с них налогов";
	НоваяСтрока.КодТаблицы = 5;
	НоваяСтрока.ЗаголовокТаблицы = "Таблица № 5";
	НоваяСтрока.Формировать = Истина;
	
	НоваяСтрока = СписокТаблиц.Добавить();
	НоваяСтрока.ЗаголовокСтраницы = "Таб. 6-1";
	НоваяСтрока.ИмяМакета = "Т61";
	НоваяСтрока.ИмяДокумента = "ПолеТабличногоДокумента13";
	НоваяСтрока.Наименование = "Налоговая база";
	НоваяСтрока.НаименованиеПолное = "Определение налоговой базы по налогу на доходы физических лиц";
	НоваяСтрока.КодТаблицы = 61;
	НоваяСтрока.ЗаголовокТаблицы = "Таблица № 6-1";
	НоваяСтрока.Формировать = Истина;
	
	НоваяСтрока = СписокТаблиц.Добавить();
	НоваяСтрока.ЗаголовокСтраницы = "Таб. 6-2";
	НоваяСтрока.ИмяМакета = "Т62";
	НоваяСтрока.ИмяДокумента = "ПолеТабличногоДокумента14";
	НоваяСтрока.Наименование = "Прочие расходы";
	НоваяСтрока.НаименованиеПолное = "Регистр прочих расходов, связанных с осуществлением предпринимательской деятельности";
	НоваяСтрока.КодТаблицы = 62;
	НоваяСтрока.ЗаголовокТаблицы = "Таблица № 6-2";
	НоваяСтрока.Формировать = Истина;
	
	НоваяСтрока = СписокТаблиц.Добавить();
	НоваяСтрока.ЗаголовокСтраницы = "Таб. 6-3";
	НоваяСтрока.ИмяМакета = "Т63";
	НоваяСтрока.ИмяДокумента = "ПолеТабличногоДокумента18";
	НоваяСтрока.Наименование = "Расходы будущих периодов";
	НоваяСтрока.НаименованиеПолное = "Регистр расходов, произведенных в отчетном налоговом периоде, но связанных с получением доходов в следующих налоговых периодах";
	НоваяСтрока.КодТаблицы = 63;
	НоваяСтрока.ЗаголовокТаблицы = "Таблица № 6-3";
	НоваяСтрока.Формировать = Истина;
	
КонецПроцедуры

Процедура СформироватьСтраницыОтчета()
	
	ВидимостьСтраниц = Ложь;
	ИндексПервойСтраницы = СписокТаблиц.Количество();
	ДокументРезультат = Неопределено;
	ДокументРезультатТекущей = Неопределено;
	
	Индекс = 0;
	Пока Индекс < СписокТаблиц.Количество() Цикл
		
		Таблица = СписокТаблиц[Индекс];
		
		СтраницаОтчета = ЭлементыФормы.Панель.Страницы[Таблица.НомерСтроки - 1];
		
		Если Таблица.Формировать Тогда
			СтраницаОтчета.Заголовок = Таблица.ЗаголовокСтраницы;
			СтраницаОтчета.Видимость = Истина;
			ВидимостьСтраниц = Истина;
			
			Если Индекс < ИндексПервойСтраницы Тогда
				ИндексПервойСтраницы = Индекс;
				ДокументРезультат = ЭлементыФормы[Таблица.ИмяДокумента];
			КонецЕсли;
			
			Если Индекс = ИндексТекущейСтраницы Тогда
				ДокументРезультатТекущей = ЭлементыФормы[Таблица.ИмяДокумента];
			КонецЕсли;
			
		Иначе
			СтраницаОтчета.Видимость = Ложь;
		КонецЕсли;
		
		Индекс = Индекс + 1;
		
	КонецЦикла;
	
	Если ВидимостьСтраниц Тогда
		ЭлементыФормы.Панель.ОтображениеЗакладок = ОтображениеЗакладок.СлеваГоризонтально;
		
	Иначе
		ЭлементыФормы.Панель.ОтображениеЗакладок = ОтображениеЗакладок.НеИспользовать;
	КонецЕсли;
	
	Если ДокументРезультатТекущей <> Неопределено Тогда
		ЭтаФорма.ТекущийЭлемент = ДокументРезультатТекущей;
	
	ИначеЕсли ДокументРезультат <> Неопределено Тогда
		ЭтаФорма.ТекущийЭлемент = ДокументРезультат;
		ИндексТекущейСтраницы = ИндексПервойСтраницы;
	КонецЕсли;

КонецПроцедуры

Функция ЗаголовокОтчета()
	
	Возврат "Книга учета доходов и расходов предпринимателя";
	
КонецФункции // ЗаголовокОтчета()

Процедура СформироватьЗаголовокФормы()

	ОписаниеПериода = СтандартныеОтчеты.СформироватьСтрокуОграниченийПоДатамДляФормы(ДатаНач, ДатаКон);

	Заголовок = ЗаголовокОтчета()+" (" + ПредставлениеПериода(НачалоГода(ДатаНач), КонецДня(ДатаКон), "ФП = Истина" ) + ") " +  Организация.Наименование;
	
КонецПроцедуры // СформироватьЗаголовокФормы()()

Процедура ФормированиеСодержания(Таблица)
	
		
КонецПроцедуры

Процедура ФормированиеТитульногоЛиста(Таблица)
	
	
КонецПроцедуры

Процедура ФормированиеСведений(Таблица)
	
	ДокументРезультат = ЭлементыФормы.ПолеТабличногоДокумента17;
	
	СписокПоказателей = Новый СписокЗначений;
	СписокПоказателей.Добавить("", "ФИО");
	СписокПоказателей.Добавить("", "ИННФЛ");
	СписокПоказателей.Добавить("", "НаимНО");
	СписокПоказателей.Добавить("", "КодНО");
	СписокПоказателей.Добавить("", "СвидСН");
	СписокПоказателей.Добавить("", "СвидДВ");
	СписокПоказателей.Добавить("", "СвидНО");
	СписокПоказателей.Добавить("", "БанкСчетНомер");
	СписокПоказателей.Добавить("", "БанкСчетНаимБанка");
	СписокПоказателей.Добавить("", "ТелСлуж");
	СписокПоказателей.Добавить("", "ТелДом");
	
	ОргСведения = РегламентированнаяОтчетность.ПолучитьСведенияОбОрганизации(Организация, ДатаКон, СписокПоказателей);
					  
	Если РегламентированнаяОтчетность.ПустоеЗначение(ДокументРезультат.Области.ФИО.Значение) Тогда
		ДокументРезультат.Области.ФИО.Значение = ОргСведения.ФИО;
	КонецЕсли;
	
	Если РегламентированнаяОтчетность.ПустоеЗначение(ДокументРезультат.Области.ИНН.Значение) Тогда
		ДокументРезультат.Области.ИНН.Значение = ОргСведения.ИННФЛ;
	КонецЕсли;
	
	Если РегламентированнаяОтчетность.ПустоеЗначение(ДокументРезультат.Области.ИМНС.Значение) Тогда
		ДокументРезультат.Области.ИМНС.Значение = ОргСведения.КодНО + ", " + ОргСведения.НаимНО;
	КонецЕсли;
	
	Если РегламентированнаяОтчетность.ПустоеЗначение(ДокументРезультат.Области.НомерСвидетельства.Значение) Тогда
		ДокументРезультат.Области.НомерСвидетельства.Значение = ОргСведения.СвидСН;
	КонецЕсли;
	
	Если РегламентированнаяОтчетность.ПустоеЗначение(ДокументРезультат.Области.Администрация.Значение) Тогда
		ДокументРезультат.Области.Администрация.Значение = ОргСведения.СвидНО;
	КонецЕсли;
	
	Если РегламентированнаяОтчетность.ПустоеЗначение(ДокументРезультат.Области.Счета.Значение) Тогда
		ДокументРезультат.Области.Счета.Значение = ОргСведения.БанкСчетНомер;
	КонецЕсли;
	
	Если РегламентированнаяОтчетность.ПустоеЗначение(ДокументРезультат.Области.Банки.Значение) Тогда
		ДокументРезультат.Области.Банки.Значение = ОргСведения.БанкСчетНаимБанка;
	КонецЕсли;
	
	Если РегламентированнаяОтчетность.ПустоеЗначение(ДокументРезультат.Области.ТелефонДомашний.Значение) Тогда
		ДокументРезультат.Области.ТелефонДомашний.Значение = ОргСведения.ТелДом;
	КонецЕсли;
	
	Если РегламентированнаяОтчетность.ПустоеЗначение(ДокументРезультат.Области.ТелефонРабочий.Значение) Тогда
		ДокументРезультат.Области.ТелефонРабочий.Значение = ОргСведения.ТелСлуж;
	КонецЕсли;
	
	Если РегламентированнаяОтчетность.ПустоеЗначение(ДокументРезультат.Области.МестоОсуществленияДеятельности.Значение) Тогда
		ДокументРезультат.Области.МестоОсуществленияДеятельности.Значение = ВидДеятельности.МестоОсуществления;
	КонецЕсли;
	
	Если РегламентированнаяОтчетность.ПустоеЗначение(ДокументРезультат.Области.Лицензия.Значение) Тогда
		ДокументРезультат.Области.Лицензия.Значение = ВидДеятельности.Лицензия;
	КонецЕсли;
	
	Если РегламентированнаяОтчетность.ПустоеЗначение(ДокументРезультат.Области.ВидыДеятельности.Значение) Тогда
		ДокументРезультат.Области.ВидыДеятельности.Значение = ВидДеятельности.НаименованиеПолное;
	КонецЕсли;
	
	Если РегламентированнаяОтчетность.ПустоеЗначение(ДокументРезультат.Области.ПечДата.Значение) Тогда
		ДокументРезультат.Области.ПечДата.Значение = Формат(ДатаКон, "ДЛФ=DD");
	КонецЕсли;
	
КонецПроцедуры

Функция СформироватьТЗИзВыборки(ВыборкаЗапроса)
	
	ТаблицаВыборки.Очистить();
	Пока ВыборкаЗапроса.Следующий() Цикл
		НоваяСтрока = ТаблицаВыборки.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаЗапроса);
	КонецЦикла;
	ТаблицаВыборки.Сортировать("Полуфабрикат");
	
	Возврат ТаблицаВыборки;
	
КонецФункции

Процедура ФормированиеТаблицы11(Таблица)
	
	НомерТаблицы = Таблица.НомерСтроки - 1;
		
	ДокументРезультат = ЭлементыФормы[СписокТаблиц[НомерТаблицы].ИмяДокумента];
	ДокументРезультат.Очистить();

	ИмяМакета = СписокТаблиц[НомерТаблицы].ИмяМакета;
	ИмяМакета = ИмяМакета + Буква;
	Макет = ПолучитьМакет(ИмяМакета);
	Поиск = Новый Структура("НомерТаблицы");
	ПоискПартии = Новый Структура("ВидМПЗ, Номенклатура, Партия, ДокументОплаты, Регистратор");
	
	// Печать заголовка
	ЗаголовокОтчета = Макет.ПолучитьОбласть("Заголовок");
	ЗаголовокОтчета.Параметры.ОписаниеПериода = ОписаниеПериода();
	ЗаголовокОтчета.Параметры.ТекстЗаголовка = СписокТаблиц[НомерТаблицы].НаименованиеПолное;
	
	ДокументРезультат.Вывести(ЗаголовокОтчета);
	
	Если ЗначениеЗаполнено(ВидДеятельности) Тогда
		Фильтр = Макет.ПолучитьОбласть("Фильтр");
		Фильтр.Параметры.ТекстФильтра = "Вид деятельности: " + ВидДеятельности.НаименованиеПолное;
		ДокументРезультат.Вывести(Фильтр);
	КонецЕсли;
		
	// Печать шапки
	Если Таблица.КодТаблицы = 12 Тогда
		Если НЕ ОблагаетсяНДС Тогда
			ПечНомерТаблицы = "Таблица № 1-2 (по операциям, не облагаемым НДС)";
			
		Иначе
			ПечНомерТаблицы = "Таблица № 1-2 (по операциям, облагаемым НДС)";
		КонецЕсли;
		
	Иначе
		ПечНомерТаблицы = СписокТаблиц[НомерТаблицы].ЗаголовокТаблицы + Буква + "*";
	КонецЕсли;
	
	Область1 = Макет.ПолучитьОбласть("Шапка|ОсновнаяНач");
	Область2 = Макет.ПолучитьОбласть("Шапка|ОсновнаяКон");
	Область2.Параметры.НомерТаблицы = ПечНомерТаблицы;
	
	ДокументРезультат.Вывести(Область1);
	Если Добавочная Тогда
		Область3 = Макет.ПолучитьОбласть("Шапка|Добавочная");
		ДокументРезультат.Присоединить(Область3);
	КонецЕсли;
	
	ДокументРезультат.Присоединить(Область2);
	
	Если Таблица.КодТаблицы = 11 Тогда
		Поиск.НомерТаблицы = 1;
		
	ИначеЕсли Таблица.КодТаблицы = 12 Тогда
		Поиск.НомерТаблицы = 2;
		
	Иначе // Если Таблица.КодТаблицы = 13 Тогда
		Поиск.НомерТаблицы = 3;
	КонецЕсли;
	
	СтруктураДокумента = Новый Структура("Номер, Организация");
	СтруктураДокумента.Организация = Организация;
	
	ВыбВидыМПЗ = НачОстаткиМПЗ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "НомерТаблицы");
	ЕстьИтоги = ВыбВидыМПЗ.НайтиСледующий(Поиск);
    СуммаКонечныйОстаток = ?(ЕстьИтоги, ?(ОблагаетсяНДС, ВыбВидыМПЗ.СуммаНачальныйОстаток, ВыбВидыМПЗ.СуммаНачальныйОстатокСНДС), 0);
		
	Если ДатаНач = НачалоГода(ДатаНач) Тогда // начальные остатки
		
		Выборка = ВыбВидыМПЗ.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			РеквизитыПартии = ЗаполнениеРеквизитовПартии(Выборка, ЦеныМПЗ, ПоискПартии);
			
			Область1 = Макет.ПолучитьОбласть("ОстатокНач|ОсновнаяНач");
			Область1.Параметры.Заполнить(Выборка);
			Область1.Параметры.РеквизитыДокументаОплаты = РеквизитыПартии.РеквизитыДокументаОплаты;
			
			Область2 = Макет.ПолучитьОбласть("ОстатокНач|ОсновнаяКон");
			Область2.Параметры.Заполнить(Выборка);
			Область2.Параметры.Заполнить(РеквизитыПартии);
			
			ДокументРезультат.Вывести(Область1);
			
			Если Добавочная Тогда
				Область3 = Макет.ПолучитьОбласть("ОстатокНач|Добавочная");
				СтруктураДокумента.Номер = Выборка.ПартияНомер;
				Область3.Параметры.ДокументПоступления = ДоходыИРасходыПредпринимателя.РеквизитыДокументаОплатыСтр(ОбщегоНазначения.ПолучитьНомерНаПечать(СтруктураДокумента), Выборка.ПартияДата);
				Область3.Параметры.Партия = Выборка.Партия;
				ДокументРезультат.Присоединить(Область3);
			КонецЕсли;
			
			ДокументРезультат.Присоединить(Область2);
		КонецЦикла;
		
	КонецЕсли;
	
	НПП = 1;
	
	ВыбВидыМПЗ = МПЗ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "НомерТаблицы");
	ЕстьИтоги = ВыбВидыМПЗ.НайтиСледующий(Поиск);
		
	Если ЕстьИтоги Тогда
		
		ВыбМесяц = ВыбВидыМПЗ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Месяц");
		Пока ВыбМесяц.Следующий() Цикл
			Если ВыбМесяц.Месяц = NULL Тогда
				Продолжить;
			КонецЕсли;
			
			Выборка = ВыбМесяц.Выбрать();
			Пока Выборка.Следующий() Цикл
				
				Если Выборка.Регистратор = Неопределено Тогда
					Продолжить;
				КонецЕсли;
				
				РеквизитыПартии = ЗаполнениеРеквизитовПартии(Выборка, ЦеныМПЗ, ПоискПартии);
				
				Область1 = Макет.ПолучитьОбласть("Строка|ОсновнаяНач");
				Область1.Параметры.Заполнить(Выборка);
				Область1.Параметры.НПП = НПП;
				Область1.Параметры.РеквизитыДокументаОплаты = РеквизитыПартии.РеквизитыДокументаОплаты;
				
				Область2 = Макет.ПолучитьОбласть("Строка|ОсновнаяКон");
				Область2.Параметры.Заполнить(Выборка);
				Область2.Параметры.Заполнить(РеквизитыПартии);
				
				ДокументРезультат.Вывести(Область1);
				
				Если Добавочная Тогда
					Область3 = Макет.ПолучитьОбласть("Строка|Добавочная");
					СтруктураДокумента.Номер = Выборка.ПартияНомер;
					Область3.Параметры.ДокументПоступления = ДоходыИРасходыПредпринимателя.РеквизитыДокументаОплатыСтр(ОбщегоНазначения.ПолучитьНомерНаПечать(СтруктураДокумента), Выборка.ПартияДата);
					Область3.Параметры.Партия = Выборка.Партия;
					ДокументРезультат.Присоединить(Область3);
				КонецЕсли;
				
				СуммаКонечныйОстаток = СуммаКонечныйОстаток + ?(ОблагаетсяНДС, Выборка.СуммаПриход - Выборка.СуммаРасход, Выборка.СуммаПриходСНДС - Выборка.СуммаРасходСНДС);
				
				ДокументРезультат.Присоединить(Область2);
				
				НПП = НПП + 1;
			КонецЦикла;
			
			ПоследняяСтрока = ДокументРезультат.Область(ДокументРезультат.ВысотаТаблицы,, ДокументРезультат.ВысотаТаблицы,);
			ПоследняяСтрока.ВместеСоСледующим = Истина;
		
			Область1 = Макет.ПолучитьОбласть("Месяц|ОсновнаяНач");
			Область1.Параметры.НазваниеИтогов = "Итого за " + НРег(Формат(Дата(Год(ДатаНач), ВыбМесяц.Месяц, 1), "ДФ='ММMM гггг'")) + " г.";
			
			Область2 = Макет.ПолучитьОбласть("Месяц|ОсновнаяКон");
			Область2.Параметры.Заполнить(ВыбМесяц);
			
			ДокументРезультат.Вывести(Область1);
			
			Если Добавочная Тогда
				Область3 = Макет.ПолучитьОбласть("Месяц|Добавочная");
				ДокументРезультат.Присоединить(Область3);
			КонецЕсли;
			
			Область2.Параметры.СуммаКонечныйОстаток = СуммаКонечныйОстаток;
			ДокументРезультат.Присоединить(Область2);
		КонецЦикла;
	КонецЕсли;
	
	ПоследняяСтрока = ДокументРезультат.Область(ДокументРезультат.ВысотаТаблицы,, ДокументРезультат.ВысотаТаблицы,);
	ПоследняяСтрока.ВместеСоСледующим = Истина;
	
	// Итоги за год
	Область1 = Макет.ПолучитьОбласть("Год|ОсновнаяНач");
	Область2 = Макет.ПолучитьОбласть("Год|ОсновнаяКон");
	Если ЕстьИтоги Тогда
		Область2.Параметры.Заполнить(ВыбВидыМПЗ);
	КонецЕсли;
	ДокументРезультат.Вывести(Область1);
	
	Если Добавочная Тогда
		Область3 = Макет.ПолучитьОбласть("Год|Добавочная");
		ДокументРезультат.Присоединить(Область3);
	КонецЕсли;
	
	Область2.Параметры.СуммаКонечныйОстаток = СуммаКонечныйОстаток;
	ДокументРезультат.Присоединить(Область2);
	
	ПоследняяСтрока = ДокументРезультат.Область(ДокументРезультат.ВысотаТаблицы,, ДокументРезультат.ВысотаТаблицы,);
	ПоследняяСтрока.ВместеСоСледующим = Истина;
	
	// Примечание
	Область1 = Макет.ПолучитьОбласть("Примечание");
	
	Если Таблица.КодТаблицы <> 12 Тогда
		Область1.Параметры.Примечание = "* "+СписокТаблиц[НомерТаблицы].ЗаголовокТаблицы+Буква+" используется индивидуальным предпринимателем, осуществляющим  деятельность по операциям, " + ?(ОблагаетсяНДС, "", "не ") + "облагаемым НДС.";
	КонецЕсли;
				
	ДокументРезультат.Вывести(Область1);
		
	ДокументРезультат.ТолькоПросмотр = Истина;
	
	ВысотаШапки = ?(ЗначениеЗаполнено(ВидДеятельности), 9, 8);
	ДокументРезультат.ПовторятьПриПечатиСтроки = ДокументРезультат.Область(ВысотаШапки,, ВысотаШапки,);
	ДокументРезультат.ОбластьПечати = ДокументРезультат.Область(2, 2, ДокументРезультат.ВысотаТаблицы, ДокументРезультат.ШиринаТаблицы);
	
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;	
	ДокументРезультат.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КУДиР_ИП_Таблица_" + Таблица.КодТаблицы;
	
КонецПроцедуры

Процедура ФормированиеТаблицы14(Таблица)
	
	НомерТаблицы = Таблица.НомерСтроки - 1;
		
	ДокументРезультат = ЭлементыФормы[СписокТаблиц[НомерТаблицы].ИмяДокумента];
	ДокументРезультат.Очистить();
	
	ИмяМакета = СписокТаблиц[НомерТаблицы].ИмяМакета;
	ИмяМакета = ИмяМакета + Буква;
	Макет     = ПолучитьМакет(ИмяМакета);
	
	ПоискПартии = Новый Структура("СтатьяЗатрат, Партия, ДокументОплаты, Регистратор");
	
	// Печать заголовка
	ЗаголовокОтчета = Макет.ПолучитьОбласть("Заголовок");
	ЗаголовокОтчета.Параметры.ОписаниеПериода = ОписаниеПериода();
	ЗаголовокОтчета.Параметры.ТекстЗаголовка  = СписокТаблиц[НомерТаблицы].НаименованиеПолное;
	
	ДокументРезультат.Вывести(ЗаголовокОтчета);
	
	Если ЗначениеЗаполнено(ВидДеятельности) Тогда
		Фильтр = Макет.ПолучитьОбласть("Фильтр");
		Фильтр.Параметры.ТекстФильтра = "Вид деятельности: " + ВидДеятельности.НаименованиеПолное;
		ДокументРезультат.Вывести(Фильтр);
	КонецЕсли;
		
	// Печать шапки
	Область1 = Макет.ПолучитьОбласть("Шапка|ОсновнаяНач");
	ДокументРезультат.Вывести(Область1);
	
	Если Добавочная Тогда
		Область3 = Макет.ПолучитьОбласть("Шапка|Добавочная");
		ДокументРезультат.Присоединить(Область3);
	КонецЕсли;
	
	Область1 = Макет.ПолучитьОбласть("Шапка|СтоимостьЕдиницы");
	ДокументРезультат.Присоединить(Область1);
	
	Область2 = Макет.ПолучитьОбласть("Шапка|ОсновнаяКон");				
	ДокументРезультат.Присоединить(Область2);
	
	НомГрафы             = ?(ОблагаетсяНДС, 18, 13);
	КолВидовДеятельности = 0;
	НеПоказыватьПустойВидДеятельности = Истина;
	
	ЕстьОборотыИМР = НЕ ИМР.Пустой();
	Если ЕстьОборотыИМР Тогда
		
		ВыборкаОбщая = ИМР.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ОБЩИЕ");
		ВыборкаОбщая.Следующий();
		
		ВыборкаПоВидуДеятельности = ВыборкаОбщая.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидДеятельности", "ВСЕ");
		Пока ВыборкаПоВидуДеятельности.Следующий() Цикл
			
			Если ВыборкаПоВидуДеятельности.ВидДеятельности = NULL Тогда
				Если ВыборкаПоВидуДеятельности.СуммаРасходСНДС <> 0 ИЛИ ВыборкаПоВидуДеятельности.КоличествоРасход <> 0 Тогда
					НеПоказыватьПустойВидДеятельности = Ложь;
					
				Иначе
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			Область4 = Макет.ПолучитьОбласть("Шапка|ВидДеятельности");
			Область4.Параметры.ВидДеятельности = Строка(ВыборкаПоВидуДеятельности.ВидДеятельности);
			Область4.Параметры.НомГрафы1       = НомГрафы;
			Область4.Параметры.НомГрафы2       = НомГрафы + 1;
			ДокументРезультат.Присоединить(Область4);
			
			НомГрафы             = НомГрафы + 2;
			КолВидовДеятельности = КолВидовДеятельности + 1;
		КонецЦикла;
		
	КонецЕсли;
	
	Если КолВидовДеятельности > 0 Тогда
		Столб = ?(ОблагаетсяНДС, 19, 14);
		Столб = ?(Добавочная, Столб + 1, Столб);
		Стр   = ?(ЗначениеЗаполнено(ВидДеятельности), 6, 5);
		Область4 = ДокументРезультат.Область(Стр, Столб, Стр, Столб + 2 * КолВидовДеятельности - 1);
		Область4.Объединить();
	КонецЕсли;
	
	Область5 = Макет.ПолучитьОбласть("Шапка|Стоимость");
	Область5.Параметры.НомГрафы1 = НомГрафы;
	Область5.Параметры.НомГрафы2 = НомГрафы + 1;
	Область5.Параметры.ИмяГрафыСтоимости = "Общая стоимость (гр.8 х гр."+НомГрафы+") (руб.)";
	Область5.Параметры.НомерТаблицы      = СписокТаблиц[НомерТаблицы].ЗаголовокТаблицы + Буква + "*";
	
	ДокументРезультат.Присоединить(Область5);
	
	СтруктураДокумента = Новый Структура("Номер, Организация");
	СтруктураДокумента.Организация = Организация;
	
	ЕстьОстатки = (ДатаНач = НачалоГода(ДатаНач)) И НЕ НачОстаткиИМР.Пустой();
	
	Если ЕстьОстатки Тогда
		
		Область1 = Макет.ПолучитьОбласть("ОстатокНач|ОсновнаяНач");
		Область2 = Макет.ПолучитьОбласть("ОстатокНач|СтоимостьЕдиницы");
		Область3 = Макет.ПолучитьОбласть("ОстатокНач|Добавочная");
		Область4 = Макет.ПолучитьОбласть("ОстатокНач|ВидДеятельности");
		Область5 = Макет.ПолучитьОбласть("ОстатокНач|Стоимость");
		Область6 = Макет.ПолучитьОбласть("ОстатокНач|ОсновнаяКон");
		
		ВыборкаПоОстаткам = НачОстаткиИМР.Выбрать();
		
		Пока ВыборкаПоОстаткам.Следующий() Цикл
			
			РеквизитыПартии = ЗаполнениеРеквизитовПартии(ВыборкаПоОстаткам, ЦеныИМР, ПоискПартии);
			
			Область1.Параметры.Заполнить(ВыборкаПоОстаткам);
			Область1.Параметры.РеквизитыДокументаОплаты = РеквизитыПартии.РеквизитыДокументаОплаты;
			ДокументРезультат.Вывести(Область1);
			
			Если Добавочная Тогда
				СтруктураДокумента.Номер = ВыборкаПоОстаткам.ПартияНомер;
				Область3.Параметры.ДокументПоступления = ДоходыИРасходыПредпринимателя.РеквизитыДокументаОплатыСтр(
					ОбщегоНазначения.ПолучитьНомерНаПечать(СтруктураДокумента), ВыборкаПоОстаткам.ПартияДата);
				Область3.Параметры.Партия = ВыборкаПоОстаткам.Партия;
				ДокументРезультат.Присоединить(Область3);
			КонецЕсли;
			
			Область2.Параметры.Заполнить(ВыборкаПоОстаткам);
			Область2.Параметры.Заполнить(РеквизитыПартии);
			ДокументРезультат.Присоединить(Область2);
			
			Область6.Параметры.Заполнить(ВыборкаПоОстаткам);
			ДокументРезультат.Присоединить(Область6);
			
			Для НомерВД = 1 По КолВидовДеятельности Цикл
				ДокументРезультат.Присоединить(Область4);
			КонецЦикла;
			
			Область5.Параметры.Заполнить(ВыборкаПоОстаткам);
			ДокументРезультат.Присоединить(Область5);
			
		КонецЦикла;
		
	КонецЕсли;
	
	НПП = 1;
	
	Если ЕстьОборотыИМР Тогда
		
		ВыборкаПоМесяцу = ВыборкаОбщая.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Месяц");
		Пока ВыборкаПоМесяцу.Следующий() Цикл
			
			Если ВыборкаПоМесяцу.Месяц = NULL Тогда
				Продолжить;
			КонецЕсли;
			
			Область1 = Макет.ПолучитьОбласть("Строка|ОсновнаяНач");
			Область2 = Макет.ПолучитьОбласть("Строка|СтоимостьЕдиницы");
			Область3 = Макет.ПолучитьОбласть("Строка|Добавочная");
			Область4 = Макет.ПолучитьОбласть("Строка|ВидДеятельности");
			Область5 = Макет.ПолучитьОбласть("Строка|Стоимость");
			Область6 = Макет.ПолучитьОбласть("Строка|ОсновнаяКон");
			
			ВыборкаПоПериоду = ВыборкаПоМесяцу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Период");
			Пока ВыборкаПоПериоду.Следующий() Цикл
				
				ВыборкаПоРегистратору = ВыборкаПоПериоду.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Регистратор");
				Пока ВыборкаПоРегистратору.Следующий() Цикл
					
					ВыборкаПоНоменклатуре = ВыборкаПоРегистратору.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "СтатьяЗатрат");
					Пока ВыборкаПоНоменклатуре.Следующий() Цикл
			
						ВыборкаПоПартии = ВыборкаПоНоменклатуре.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Партия");
						Пока ВыборкаПоПартии.Следующий() Цикл
					
							ВыборкаПоДокументуОплаты = ВыборкаПоПартии.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ДокументОплаты");
							Пока ВыборкаПоДокументуОплаты.Следующий() Цикл
								
								Если ВыборкаПоДокументуОплаты.СуммаПриходСНДС = NULL
									И ВыборкаПоДокументуОплаты.СуммаРасходСНДС = NULL Тогда
									Продолжить;
								КонецЕсли;
								
								РеквизитыПартии = ЗаполнениеРеквизитовПартии(ВыборкаПоДокументуОплаты, ЦеныИМР, ПоискПартии);
								
								Область1.Параметры.Заполнить(ВыборкаПоДокументуОплаты);
								Область1.Параметры.НПП = НПП;
								Область1.Параметры.РеквизитыДокументаОплаты = РеквизитыПартии.РеквизитыДокументаОплаты;
								ДокументРезультат.Вывести(Область1);
								
								Если Добавочная Тогда
									СтруктураДокумента.Номер = ВыборкаПоДокументуОплаты.ПартияНомер;
									Область3.Параметры.ДокументПоступления = ДоходыИРасходыПредпринимателя.РеквизитыДокументаОплатыСтр(
									ОбщегоНазначения.ПолучитьНомерНаПечать(СтруктураДокумента), ВыборкаПоДокументуОплаты.ПартияДата); 
									Область3.Параметры.Партия = ВыборкаПоДокументуОплаты.Партия;
									ДокументРезультат.Присоединить(Область3);
								КонецЕсли;
								
								Область2.Параметры.Заполнить(ВыборкаПоДокументуОплаты);
								Область2.Параметры.Заполнить(РеквизитыПартии);
								ДокументРезультат.Присоединить(Область2);
								
								Область6.Параметры.Заполнить(ВыборкаПоДокументуОплаты);
								ДокументРезультат.Присоединить(Область6);
								
								ВыборкаПоВидуДеятельности = ВыборкаПоДокументуОплаты.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидДеятельности", "ВСЕ");
								Пока ВыборкаПоВидуДеятельности.Следующий() Цикл
									
									Если ВыборкаПоВидуДеятельности.ВидДеятельности = NULL И НеПоказыватьПустойВидДеятельности Тогда
										Продолжить;
									КонецЕсли;
									Область4.Параметры.Заполнить(ВыборкаПоВидуДеятельности);
									ДокументРезультат.Присоединить(Область4);
									
								КонецЦикла;
								
								Область5.Параметры.Заполнить(ВыборкаПоДокументуОплаты);
								ДокументРезультат.Присоединить(Область5);
								
								НПП = НПП + 1;
								
							КонецЦикла;
							
						КонецЦикла;
						
					КонецЦикла;
					
				КонецЦикла;
				
			КонецЦикла;
							
			// Итоги за месяц
			
			Область1 = Макет.ПолучитьОбласть("Месяц|ОсновнаяНач");
			Область1.Параметры.НазваниеИтогов = "Итого за " + НРег(Формат(Дата(Год(ДатаНач), ВыборкаПоМесяцу.Месяц, 1), "ДФ='ММMM гггг'")) + " г.";
			ДокументРезультат.Вывести(Область1);
			
			Если Добавочная Тогда
				Область3 = Макет.ПолучитьОбласть("Месяц|Добавочная");
				ДокументРезультат.Присоединить(Область3);
			КонецЕсли;
			
			Область2 = Макет.ПолучитьОбласть("Месяц|СтоимостьЕдиницы");
			Область2.Параметры.Заполнить(ВыборкаПоМесяцу);
			ДокументРезультат.Присоединить(Область2);
			
			Область6 = Макет.ПолучитьОбласть("Месяц|ОсновнаяКон");
			Область6.Параметры.Заполнить(ВыборкаПоМесяцу);
			ДокументРезультат.Присоединить(Область6);
			
			ВыборкаПоВидуДеятельности = ВыборкаПоМесяцу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидДеятельности", "ВСЕ");
			Пока ВыборкаПоВидуДеятельности.Следующий() Цикл
				Если ВыборкаПоВидуДеятельности.ВидДеятельности = NULL И НеПоказыватьПустойВидДеятельности Тогда
					Продолжить;
				КонецЕсли;
				Область4 = Макет.ПолучитьОбласть("Месяц|ВидДеятельности");
				Область4.Параметры.Заполнить(ВыборкаПоВидуДеятельности);
				ДокументРезультат.Присоединить(Область4);
			КонецЦикла;
			
			Область5 = Макет.ПолучитьОбласть("Месяц|Стоимость");
			Область5.Параметры.Заполнить(ВыборкаПоМесяцу);
			ДокументРезультат.Присоединить(Область5);
			
		КонецЦикла;
		
		// Итоги за год
		
		Область1 = Макет.ПолучитьОбласть("Год|ОсновнаяНач");
		ДокументРезультат.Вывести(Область1);
		
		Если Добавочная Тогда
			Область3 = Макет.ПолучитьОбласть("Год|Добавочная");
			ДокументРезультат.Присоединить(Область3);
		КонецЕсли;
		
		Область2 = Макет.ПолучитьОбласть("Год|СтоимостьЕдиницы");
		ДокументРезультат.Присоединить(Область2);
		
		Область6 = Макет.ПолучитьОбласть("Год|ОсновнаяКон");
		Область6.Параметры.Заполнить(ВыборкаОбщая);
		ДокументРезультат.Присоединить(Область6);
		
		ВыборкаПоВидуДеятельности = ВыборкаОбщая.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидДеятельности", "ВСЕ");
		Пока ВыборкаПоВидуДеятельности.Следующий() Цикл
			Если ВыборкаПоВидуДеятельности.ВидДеятельности = NULL И НеПоказыватьПустойВидДеятельности Тогда
				Продолжить;
			КонецЕсли;
			Область4 = Макет.ПолучитьОбласть("Год|ВидДеятельности");
			Область4.Параметры.Заполнить(ВыборкаПоВидуДеятельности);
			ДокументРезультат.Присоединить(Область4);
		КонецЦикла;
		
		Область5 = Макет.ПолучитьОбласть("Год|Стоимость");
		Область5.Параметры.Заполнить(ВыборкаОбщая);
		ДокументРезультат.Присоединить(Область5);
		
	КонецЕсли;
		
	// Примечание
	ПоследняяСтрока = ДокументРезультат.Область(ДокументРезультат.ВысотаТаблицы,, ДокументРезультат.ВысотаТаблицы,);
	ПоследняяСтрока.ВместеСоСледующим = Истина;
		
	Область1 = Макет.ПолучитьОбласть("Примечание");
	Область1.Параметры.Примечание = "* "+СписокТаблиц[НомерТаблицы].ЗаголовокТаблицы+Буква+" используется индивидуальным предпринимателем, осуществляющим  деятельность по операциям, " + ?(ОблагаетсяНДС, "", "не ") + "облагаемым НДС.";
	ДокументРезультат.Вывести(Область1);
					
	ДокументРезультат.ТолькоПросмотр = Истина;
	
	ВысотаШапки = ?(ЗначениеЗаполнено(ВидДеятельности), 9, 8);
	ДокументРезультат.ПовторятьПриПечатиСтроки = ДокументРезультат.Область(ВысотаШапки,, ВысотаШапки,);
	ДокументРезультат.ОбластьПечати            = ДокументРезультат.Область(2, 2, ДокументРезультат.ВысотаТаблицы, ДокументРезультат.ШиринаТаблицы);
	
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;	
	ДокументРезультат.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КУДиР_ИП_Таблица_14";
	
КонецПроцедуры

Процедура ФормированиеТаблицы15(Таблица)
	
	ТаблицаВыборки = Новый ТаблицаЗначений;
	ТаблицаВыборки.Колонки.Добавить("ВидПолуфабриката");
	ТаблицаВыборки.Колонки.Добавить("День");
	ТаблицаВыборки.Колонки.Добавить("ДокументОплатыДата");
	ТаблицаВыборки.Колонки.Добавить("Количество");
	ТаблицаВыборки.Колонки.Добавить("Месяц");
	ТаблицаВыборки.Колонки.Добавить("НДС");
	ТаблицаВыборки.Колонки.Добавить("Номенклатура");
	ТаблицаВыборки.Колонки.Добавить("НоменклатураПредставление");
	ТаблицаВыборки.Колонки.Добавить("Партия");
	ТаблицаВыборки.Колонки.Добавить("ПартияДата");
	ТаблицаВыборки.Колонки.Добавить("ПартияПолуфабриката");
	ТаблицаВыборки.Колонки.Добавить("ПартияСписаннойНоменклатурыДата");
	ТаблицаВыборки.Колонки.Добавить("Период");
	ТаблицаВыборки.Колонки.Добавить("Полуфабрикат");
	ТаблицаВыборки.Колонки.Добавить("Сумма");
	
	НомерТаблицы = Таблица.НомерСтроки - 1;
		
	ДокументРезультат = ЭлементыФормы[СписокТаблиц[НомерТаблицы].ИмяДокумента];
	ДокументРезультат.Очистить();
	
	ИмяМакета = СписокТаблиц[НомерТаблицы].ИмяМакета;
	Макет = ПолучитьМакет(ИмяМакета);
	
	ПартияМПЗ = Новый Структура("ВидМПЗ, Номенклатура, Партия");
	ПоискПартии = Новый Структура("ВидМПЗ, Номенклатура, Партия");
	
	// Печать заголовка
	ЗаголовокОтчета = Макет.ПолучитьОбласть("Заголовок");
	ЗаголовокОтчета.Параметры.ОписаниеПериода = ОписаниеПериода();
	ЗаголовокОтчета.Параметры.ТекстЗаголовка = СписокТаблиц[НомерТаблицы].НаименованиеПолное;
	
	ДокументРезультат.Вывести(ЗаголовокОтчета);
	
	Если ЗначениеЗаполнено(ВидДеятельности) Тогда
		Фильтр = Макет.ПолучитьОбласть("Фильтр");
		Фильтр.Параметры.ТекстФильтра = "Вид деятельности: " + ВидДеятельности.НаименованиеПолное;
		ДокументРезультат.Вывести(Фильтр);
	КонецЕсли;
		
	// Печать шапки
	Область1 = Макет.ПолучитьОбласть("Шапка|Общее");
	Область2 = Макет.ПолучитьОбласть("Шапка|СтоимостьПродукции");
				
	ДокументРезультат.Вывести(Область1);
	
	// Отдельные графы для каждого списанного полуфабриката
	КоличествоПФ = 0;
		
	ВыборкаВсеПФТЗ = СформироватьТЗИзВыборки(Обороты.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Полуфабрикат", "Все"));
	Для Каждого ВыборкаВсеПФ ИЗ ВыборкаВсеПФТЗ Цикл
		Область4 = Макет.ПолучитьОбласть("Шапка|Полуфабрикат");
		Область4.Параметры.Полуфабрикат = ВыборкаВсеПФ.Полуфабрикат;
		Область4.Параметры.ПолуфабрикатСсылка = ВыборкаВсеПФ.Полуфабрикат;
		ДокументРезультат.Присоединить(Область4);
		КоличествоПФ = КоличествоПФ + 1;
	КонецЦикла;
	
	Область2.Параметры.НомерТаблицы = СписокТаблиц[НомерТаблицы].ЗаголовокТаблицы + Буква + "*";
	ДокументРезультат.Присоединить(Область2);
	
	ВыборкаМес = Обороты.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Месяц");
	Пока ВыборкаМес.Следующий() Цикл
					
		ВыборкаДень = ВыборкаМес.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "День");
		Пока ВыборкаДень.Следующий() Цикл
			
			Область1 = Макет.ПолучитьОбласть("НовыйДень|Общее");
			ДокументРезультат.Вывести(Область1);
			
			Для НомерПФ = 1 По КоличествоПФ Цикл
				Область3 = Макет.ПолучитьОбласть("НовыйДень|Полуфабрикат");
				ДокументРезультат.Присоединить(Область3);
			КонецЦикла;
			
			Область2 = Макет.ПолучитьОбласть("НовыйДень|СтоимостьПродукции");
			ДокументРезультат.Присоединить(Область2);
			
			ПоследняяСтрока = ДокументРезультат.Область(ДокументРезультат.ВысотаТаблицы,, ДокументРезультат.ВысотаТаблицы,);
			ПоследняяСтрока.ВместеСоСледующим = Истина;
			
			НПП = 1;
			
			ВыборкаВидПФ = ВыборкаДень.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидПолуфабриката");
			Пока ВыборкаВидПФ.Следующий() Цикл
				
				ВыборкаПартияПФ = ВыборкаВидПФ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ПартияПолуфабриката");
				Пока ВыборкаПартияПФ.Следующий() Цикл
					
					ВидЦены = "Цены с налогами из ";
					Если ВыборкаВидПФ.ВидПолуфабриката = Перечисления.ВидыМПЗ.Полуфабрикаты Тогда
						ВидЦены = ВидЦены + "гр.6 таб.№ 1-2 (руб.)";
						
					ИначеЕсли ВыборкаВидПФ.ВидПолуфабриката = Перечисления.ВидыМПЗ.ВспомогательныеМатериалы Тогда
						ВидЦены = ВидЦены + "гр.8 таб.№ 1-3 (руб.)";
						
					ИначеЕсли ВыборкаВидПФ.ВидПолуфабриката = Перечисления.ВидыМПЗ.Продукция Тогда
						ВидЦены = ВидЦены + "гр.6 таб.№ 1-6 (руб.)";
						
					Иначе
						ВидЦены = ВидЦены + "гр.8 таб.№ 1-1 (руб.)";
					КонецЕсли;
					
					Область1 = Макет.ПолучитьОбласть("Цена|Общее");
					Область1.Параметры.Ном = "1." + НПП;
					Область1.Параметры.ВидЦены = ВидЦены;
					ДокументРезультат.Вывести(Область1);
						
					ВыборкаПФТЗ = СформироватьТЗИзВыборки(ВыборкаПартияПФ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Полуфабрикат", "Все"));
					Для Каждого ВыборкаПФ ИЗ ВыборкаПФТЗ Цикл
					
						Область3 = Макет.ПолучитьОбласть("Цена|Полуфабрикат");
						
						Если ВыборкаПФ.Количество = NULL Тогда
							Область3.Параметры.Стоимость = 0;
							
						Иначе
							
	                        ПартияМПЗ.ВидМПЗ = ВыборкаПФ.ВидПолуфабриката;
							ПартияМПЗ.Номенклатура = ВыборкаПФ.Полуфабрикат;
							ПартияМПЗ.Партия = ВыборкаПФ.ПартияПолуфабриката;
							РеквизитыПартии = ЗаполнениеРеквизитовПартии(ПартияМПЗ, ЦеныМПЗ, ПоискПартии);
							
							Область3.Параметры.Стоимость = ?(ОблагаетсяНДС, РеквизитыПартии.СтоимостьЕдиницы, РеквизитыПартии.СтоимостьЕдиницыСНДС);
						КонецЕсли;
						
						Область3.Параметры.ПартияПолуфабриката = ВыборкаПФ.ПартияПолуфабриката;
						ДокументРезультат.Присоединить(Область3);
						
					КонецЦикла;
					
					Область2 = Макет.ПолучитьОбласть("Цена|СтоимостьПродукции");
					ДокументРезультат.Присоединить(Область2);
					
					НПП = НПП + 1;
					
				КонецЦикла;
			КонецЦикла;
			
			Область1 = Макет.ПолучитьОбласть("Шапка_2|Общее");
			ДокументРезультат.Вывести(Область1);
			
			Для НомерПФ = 1 По КоличествоПФ Цикл
				Область3 = Макет.ПолучитьОбласть("Шапка_2|Полуфабрикат");
				ДокументРезультат.Присоединить(Область3);
			КонецЦикла;
			
			Область2 = Макет.ПолучитьОбласть("Шапка_2|СтоимостьПродукции");
			ДокументРезультат.Присоединить(Область2);
			
			ПоследняяСтрока = ДокументРезультат.Область(ДокументРезультат.ВысотаТаблицы,, ДокументРезультат.ВысотаТаблицы,);
			ПоследняяСтрока.ВместеСоСледующим = Истина;
			
			НПП = 1;
			
			ВыборкаН = ВыборкаДень.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Номенклатура");
			Пока ВыборкаН.Следующий() Цикл
				
				ВыборкаП = ВыборкаН.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Партия");
				Пока ВыборкаП.Следующий() Цикл
					
					Область1 = Макет.ПолучитьОбласть("Продукция|Общее");
					Область1.Параметры.Ном = "2." + НПП;
					Область1.Параметры.Партия = ВыборкаП.Партия;
					Область1.Параметры.ПартияДата = ВыборкаП.ПартияДата;
					Область1.Параметры.НоменклатураПредставление = ВыборкаН.НоменклатураПредставление;
					Область1.Параметры.НоменклатураСсылка = ВыборкаН.Номенклатура;
					ДокументРезультат.Вывести(Область1);
					
					ВыборкаПФТЗ = СформироватьТЗИзВыборки(ВыборкаП.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Полуфабрикат", "Все"));
					Для Каждого ВыборкаПФ ИЗ ВыборкаПФТЗ Цикл
						
						Область3 = Макет.ПолучитьОбласть("Продукция|Полуфабрикат");
						
						Если ВыборкаПФ.Сумма = NULL Тогда
							Область3.Параметры.Стоимость = 0;
							
						Иначе
							Область3.Параметры.Стоимость = ?(НЕ ОблагаетсяНДС, ВыборкаПФ.Сумма + ВыборкаПФ.НДС, ВыборкаПФ.Сумма);
						КонецЕсли;
						
						Если ВыборкаПФ.Количество = NULL Тогда
							Область3.Параметры.Стоимость = 0;
							
						Иначе
							Область3.Параметры.Количество = ВыборкаПФ.Количество;
						КонецЕсли;
						
						ДокументРезультат.Присоединить(Область3);
					
					КонецЦикла;
					
					Область2 = Макет.ПолучитьОбласть("Продукция|СтоимостьПродукции");
					Область2.Параметры.Стоимость = ?(НЕ ОблагаетсяНДС, ВыборкаП.Сумма + ВыборкаП.НДС, ВыборкаП.Сумма);
					ДокументРезультат.Присоединить(Область2);
			
				КонецЦикла;
				
				НПП = НПП + 1;
			КонецЦикла;
			
			ПоследняяСтрока = ДокументРезультат.Область(ДокументРезультат.ВысотаТаблицы,, ДокументРезультат.ВысотаТаблицы,);
			ПоследняяСтрока.ВместеСоСледующим = Истина;
			
			Область1 = Макет.ПолучитьОбласть("День|Общее");
			Область1.Параметры.ТекстЗаДень = "Общее количество израсходованного сырья за " + Формат(ВыборкаДень.День, "ДФ=dd.MM.yyyy");
			ДокументРезультат.Вывести(Область1);
			
			ВыборкаПФТЗ = СформироватьТЗИзВыборки(ВыборкаДень.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Полуфабрикат", "Все"));
			Для Каждого ВыборкаПФ ИЗ ВыборкаПФТЗ Цикл
				
				Область3 = Макет.ПолучитьОбласть("День|Полуфабрикат");
				Если ВыборкаПФ.Сумма = NULL Тогда
					Область3.Параметры.Стоимость = 0;
					
				Иначе
					Область3.Параметры.Стоимость = ?(НЕ ОблагаетсяНДС, ВыборкаПФ.Сумма + ВыборкаПФ.НДС, ВыборкаПФ.Сумма);
				КонецЕсли;
				
				Если ВыборкаПФ.Количество = NULL Тогда
					Область3.Параметры.Стоимость = 0;
					
				Иначе
					Область3.Параметры.Количество = ВыборкаПФ.Количество;
				КонецЕсли;
				ДокументРезультат.Присоединить(Область3);
			
			КонецЦикла;
			
			Область2 = Макет.ПолучитьОбласть("День|СтоимостьПродукции");
			Область2.Параметры.Стоимость = ?(НЕ ОблагаетсяНДС, ВыборкаДень.Сумма + ВыборкаДень.НДС, ВыборкаДень.Сумма);
			ДокументРезультат.Присоединить(Область2);
		КонецЦикла;
		
		ПоследняяСтрока = ДокументРезультат.Область(ДокументРезультат.ВысотаТаблицы,, ДокументРезультат.ВысотаТаблицы,);
		ПоследняяСтрока.ВместеСоСледующим = Истина;
		
		Область1 = Макет.ПолучитьОбласть("Месяц|Общее");
		Область1.Параметры.ТекстЗаМесяц = "Итого за " +  Формат(ВыборкаМес.Период, "ДФ='MMMM yyyy'");
		ДокументРезультат.Вывести(Область1);
		
		ВыборкаПФТЗ = СформироватьТЗИзВыборки(ВыборкаМес.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Полуфабрикат", "Все"));
		Для Каждого ВыборкаПФ ИЗ ВыборкаПФТЗ Цикл
			
			Область3 = Макет.ПолучитьОбласть("Месяц|Полуфабрикат");
			Если ВыборкаПФ.Сумма = NULL Тогда
				Область3.Параметры.Стоимость = 0;
				
			Иначе
				Область3.Параметры.Стоимость = ?(НЕ ОблагаетсяНДС, ВыборкаПФ.Сумма + ВыборкаПФ.НДС, ВыборкаПФ.Сумма);
			КонецЕсли;
			
			Если ВыборкаПФ.Количество = NULL Тогда
				Область3.Параметры.Стоимость = 0;
				
			Иначе
				Область3.Параметры.Количество = ВыборкаПФ.Количество;
			КонецЕсли;
			ДокументРезультат.Присоединить(Область3);
		
		КонецЦикла;
		
		Область2 = Макет.ПолучитьОбласть("Месяц|СтоимостьПродукции");
		Область2.Параметры.Стоимость = ?(НЕ ОблагаетсяНДС, ВыборкаМес.Сумма + ВыборкаМес.НДС, ВыборкаМес.Сумма);
		ДокументРезультат.Присоединить(Область2);
		
	КонецЦикла;
	
	// Примечание
	ПоследняяСтрока = ДокументРезультат.Область(ДокументРезультат.ВысотаТаблицы,, ДокументРезультат.ВысотаТаблицы,);
	ПоследняяСтрока.ВместеСоСледующим = Истина;
	
	Область1 = Макет.ПолучитьОбласть("Примечание");
	Область1.Параметры.ТекстПримечания = "* "+СписокТаблиц[НомерТаблицы].ЗаголовокТаблицы+Буква+" используется индивидуальным предпринимателем, осуществляющим  деятельность по операциям, " + ?(ОблагаетсяНДС, "", "не ") + "облагаемым НДС.";
	ДокументРезультат.Вывести(Область1);
					
	ДокументРезультат.ТолькоПросмотр = Истина;
	
	ВысотаШапки = ?(ЗначениеЗаполнено(ВидДеятельности), 6, 5);
	ДокументРезультат.ПовторятьПриПечатиСтроки = ДокументРезультат.Область(ВысотаШапки,, ВысотаШапки + 1,);
	ДокументРезультат.ОбластьПечати = ДокументРезультат.Область(2, 2, ДокументРезультат.ВысотаТаблицы, ДокументРезультат.ШиринаТаблицы);
	
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;	
	ДокументРезультат.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КУДиР_ИП_Таблица_15";
	
КонецПроцедуры

Процедура ФормированиеТаблицы16(Таблица)
	
	Отгружено = ДоходыИРасходы;
			
	НомерТаблицы = Таблица.НомерСтроки - 1;

	ДокументРезультат = ЭлементыФормы[СписокТаблиц[НомерТаблицы].ИмяДокумента];
	ДокументРезультат.Очистить();

	ИмяМакета = СписокТаблиц[НомерТаблицы].ИмяМакета;
	ИмяМакета = ИмяМакета + Буква;

	Макет = ПолучитьМакет(ИмяМакета);
	
	ПоискПартии = Новый Структура("ВидМПЗ, Номенклатура, Партия");
	ПоискПартииИОплаты = Новый Структура("ВидМПЗ, Номенклатура, Партия, ДокументОплаты");
	
	// Печать заголовка
	ЗаголовокОтчета = Макет.ПолучитьОбласть("Заголовок");
	ЗаголовокОтчета.Параметры.ОписаниеПериода = ОписаниеПериода();
	ЗаголовокОтчета.Параметры.ТекстЗаголовка = СписокТаблиц[НомерТаблицы].НаименованиеПолное;
	
	ДокументРезультат.Вывести(ЗаголовокОтчета);
	
	Если ЗначениеЗаполнено(ВидДеятельности) Тогда
		Фильтр = Макет.ПолучитьОбласть("Фильтр");
		Фильтр.Параметры.ТекстФильтра = "Вид деятельности: " + ВидДеятельности.НаименованиеПолное;
		ДокументРезультат.Вывести(Фильтр);
	КонецЕсли;
		
	// Печать шапки
	Область1 = Макет.ПолучитьОбласть("Шапка|ОсновнаяНач");
	Область2 = Макет.ПолучитьОбласть("Шапка|ОсновнаяКон");
	Область2.Параметры.НомерТаблицы = СписокТаблиц[НомерТаблицы].ЗаголовокТаблицы + Буква + "*";
	
	ДокументРезультат.Вывести(Область1);
	Если Добавочная Тогда
		Область3 = Макет.ПолучитьОбласть("Шапка|Добавочная");
		ДокументРезультат.Присоединить(Область3);
	КонецЕсли;
	
	ДокументРезультат.Присоединить(Область2);
	
	СтруктураДокумента = Новый Структура("Номер, Организация");
	СтруктураДокумента.Организация = Организация;
	
	Если ЦеныМПЗ <> Неопределено Тогда
		ЦеныМПЗ.Индексы.Очистить();
		ЦеныМПЗ.Сортировать("ВидМПЗ, Номенклатура, Партия",новый СравнениеЗначений);
		ЦеныМПЗ.Индексы.Добавить("ВидМПЗ, Номенклатура, Партия");
		ЦеныМПЗ.Индексы.Добавить("ВидМПЗ, Номенклатура, Партия, ДокументОплаты");
	КонецЕсли;
	
	Если ДатаНач = НачалоГода(ДатаНач) Тогда // начальные остатки
		
		Поиск = Новый Структура("НомерТаблицы", 6);
	
		ВыбВидыМПЗ = НачОстаткиМПЗ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "НомерТаблицы");
		ВыбВидыМПЗ.НайтиСледующий(Поиск);
	
		Выборка = ВыбВидыМПЗ.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			РеквизитыПартии = ЗаполнениеРеквизитовПартии(Выборка, ЦеныМПЗ, ПоискПартии);
			
			Область1 = Макет.ПолучитьОбласть("ОстатокНач|ОсновнаяНач");
			Область1.Параметры.Заполнить(Выборка);
			Область1.Параметры.РеквизитыДокументаОплаты = РеквизитыПартии.РеквизитыДокументаОплаты;
			
			Область2 = Макет.ПолучитьОбласть("ОстатокНач|ОсновнаяКон");
			Область2.Параметры.Заполнить(Выборка);
			Область2.Параметры.Заполнить(РеквизитыПартии);
			
			ДокументРезультат.Вывести(Область1);
			
			Если Добавочная Тогда
				Область3 = Макет.ПолучитьОбласть("ОстатокНач|Добавочная");
				СтруктураДокумента.Номер = Выборка.ПартияНомер;
				Область3.Параметры.ДокументПоступления = ДоходыИРасходыПредпринимателя.РеквизитыДокументаОплатыСтр(ОбщегоНазначения.ПолучитьНомерНаПечать(СтруктураДокумента), Выборка.ПартияДата);
				Область3.Параметры.Партия = Выборка.Партия;
				ДокументРезультат.Присоединить(Область3);
			КонецЕсли;
			
			ДокументРезультат.Присоединить(Область2);
		КонецЦикла;
		
		Поиск = Новый Структура("НомерТаблицы", 1);
		
		ВыбВидыМПЗ = НачОстаткиМПЗ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "НомерТаблицы");
		ВыбВидыМПЗ.НайтиСледующий(Поиск);
		
		Выборка = ВыбВидыМПЗ.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Если НЕ Выборка.ВидМПЗ = Перечисления.ВидыМПЗ.Товары Тогда
				Продолжить;
			КонецЕсли;
			
			РеквизитыПартии = ЗаполнениеРеквизитовПартии(Выборка, ЦеныМПЗ, ПоискПартии);
			
			Область1 = Макет.ПолучитьОбласть("ОстатокНач|ОсновнаяНач");
			Область1.Параметры.Заполнить(Выборка);
			Область1.Параметры.РеквизитыДокументаОплаты = РеквизитыПартии.РеквизитыДокументаОплаты;
			
			Область2 = Макет.ПолучитьОбласть("ОстатокНач|ОсновнаяКон");
			Область2.Параметры.Заполнить(Выборка);
			Область2.Параметры.Заполнить(РеквизитыПартии);
			
			ДокументРезультат.Вывести(Область1);
			
			Если Добавочная Тогда
				Область3 = Макет.ПолучитьОбласть("ОстатокНач|Добавочная");
				СтруктураДокумента.Номер = Выборка.ПартияНомер;
				Область3.Параметры.ДокументПоступления = ДоходыИРасходыПредпринимателя.РеквизитыДокументаОплатыСтр(ОбщегоНазначения.ПолучитьНомерНаПечать(СтруктураДокумента), Выборка.ПартияДата);
				Область3.Параметры.Партия = Выборка.Партия;
				ДокументРезультат.Присоединить(Область3);
			КонецЕсли;
			
			ДокументРезультат.Присоединить(Область2);
		КонецЦикла;
		
		//остатки оплаченных, реализованных, но не оплаченных покупателем ТМЦ
		Поиск = Новый Структура("НомерТаблицы", 7);
	
		ВыбВидыМПЗ = НачОстаткиМПЗ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "НомерТаблицы");
		ВыбВидыМПЗ.НайтиСледующий(Поиск);
	
		Выборка = ВыбВидыМПЗ.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			РеквизитыПартии = ЗаполнениеРеквизитовПартии(Выборка, ЦеныМПЗОтгруженных, ПоискПартии);
			
			Область1 = Макет.ПолучитьОбласть("ОстатокНач|ОсновнаяНач");
			Область1.Параметры.Заполнить(Выборка);
			Область1.Параметры.РеквизитыДокументаОплаты = РеквизитыПартии.РеквизитыДокументаОплаты;
			
			Область2 = Макет.ПолучитьОбласть("ОстатокНач|ОсновнаяКон");
			Область2.Параметры.Заполнить(Выборка);
			Область2.Параметры.Заполнить(РеквизитыПартии);
			
			ДокументРезультат.Вывести(Область1);
			
			Если Добавочная Тогда
				Область3 = Макет.ПолучитьОбласть("ОстатокНач|Добавочная");
				СтруктураДокумента.Номер = Выборка.ПартияНомер;
				Область3.Параметры.ДокументПоступления = ДоходыИРасходыПредпринимателя.РеквизитыДокументаОплатыСтр(ОбщегоНазначения.ПолучитьНомерНаПечать(СтруктураДокумента), Выборка.ПартияДата);
				Область3.Параметры.Партия = Выборка.Партия;
				СтруктураДокумента.Номер = Выборка.ДокументОтгрузкиНомер;
				Область3.Параметры.РеквизитыДокументаОтгрузки = ДоходыИРасходыПредпринимателя.РеквизитыДокументаОплатыСтр(ОбщегоНазначения.ПолучитьНомерНаПечать(СтруктураДокумента), Выборка.ДокументОтгрузкиДата); 
				Область3.Параметры.ДокументОтгрузки = Выборка.ДокументОтгрузки;
				ДокументРезультат.Присоединить(Область3);
			КонецЕсли;
			
			ДокументРезультат.Присоединить(Область2);
		КонецЦикла;
		
	КонецЕсли;
	
	НПП = 1;
	
	ОБЩИЕ = Отгружено.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ОБЩИЕ");
	ОБЩИЕ.Следующий();
	
	ВыбМесяц = ОБЩИЕ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Месяц");
	Пока ВыбМесяц.Следующий() Цикл
		
		Если ВыбМесяц.Месяц = NULL Тогда
			Продолжить;
		КонецЕсли;
		
		Выборка = ВыбМесяц.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Если Выборка.Регистратор <> Неопределено Тогда
				
				Область1 = Макет.ПолучитьОбласть("Строка|ОсновнаяНач");
				Область1.Параметры.Заполнить(Выборка);
				Область1.Параметры.НПП = НПП;
				
				Если Выборка.РеквизитыДокументаОплаты <> NULL Тогда // это реализация
					РеквизитыПартии = ЗаполнениеРеквизитовПартии(Выборка, ЦеныМПЗ, ПоискПартии);
					
				Иначе
					РеквизитыПартии = ЗаполнениеРеквизитовПартии(Выборка, ЦеныМПЗ, ПоискПартииИОплаты);
					Область1.Параметры.РеквизитыДокументаОплаты = РеквизитыПартии.РеквизитыДокументаОплаты;
				КонецЕсли;
				
				Область2 = Макет.ПолучитьОбласть("Строка|ОсновнаяКон");
				Область2.Параметры.Заполнить(Выборка);
				Область2.Параметры.Заполнить(РеквизитыПартии);
				
				ДокументРезультат.Вывести(Область1);
				
				Если Добавочная Тогда
					Область3 = Макет.ПолучитьОбласть("Строка|Добавочная");
					СтруктураДокумента.Номер = Выборка.ПартияНомер;
					Область3.Параметры.ДокументПоступления = ДоходыИРасходыПредпринимателя.РеквизитыДокументаОплатыСтр(ОбщегоНазначения.ПолучитьНомерНаПечать(СтруктураДокумента), Выборка.ПартияДата); 
					Область3.Параметры.Партия = Выборка.Партия;
					СтруктураДокумента.Номер = Выборка.ДокументОтгрузкиНомер;
					Область3.Параметры.РеквизитыДокументаОтгрузки = ДоходыИРасходыПредпринимателя.РеквизитыДокументаОплатыСтр(ОбщегоНазначения.ПолучитьНомерНаПечать(СтруктураДокумента), Выборка.ДокументОтгрузкиДата); 
					Область3.Параметры.ДокументОтгрузки = Выборка.ДокументОтгрузки;
					ДокументРезультат.Присоединить(Область3);
				КонецЕсли;
				
				ДокументРезультат.Присоединить(Область2);
				
				НПП = НПП + 1;
			КонецЕсли;
			
		КонецЦикла;
		
		// Итоги за месяц
		Если ВыбМесяц.Выручка <> 0 ИЛИ ВыбМесяц.СуммаСНДС <> 0 ИЛИ ВыбМесяц.СуммаПриход <> 0 ИЛИ ВыбМесяц.СуммаПриходСНДС <> 0 Тогда
			ПоследняяСтрока = ДокументРезультат.Область(ДокументРезультат.ВысотаТаблицы,, ДокументРезультат.ВысотаТаблицы,);
			ПоследняяСтрока.ВместеСоСледующим = Истина;
	
			Область1 = Макет.ПолучитьОбласть("Месяц|ОсновнаяНач");
			Область1.Параметры.НазваниеИтогов = "Итого за " + НРег(Формат(Дата(Год(ДатаНач), ВыбМесяц.Месяц, 1), "ДФ='ММMM гггг'")) + " г.";
			
			Область2 = Макет.ПолучитьОбласть("Месяц|ОсновнаяКон");
			Область2.Параметры.Заполнить(ВыбМесяц);
			
			ДокументРезультат.Вывести(Область1);
			
			Если Добавочная Тогда
				Область3 = Макет.ПолучитьОбласть("Месяц|Добавочная");
				ДокументРезультат.Присоединить(Область3);
			КонецЕсли;
			
			ДокументРезультат.Присоединить(Область2);
		КонецЕсли;
	КонецЦикла;
	
	// Итоги за год
	ПоследняяСтрока = ДокументРезультат.Область(ДокументРезультат.ВысотаТаблицы,, ДокументРезультат.ВысотаТаблицы,);
	ПоследняяСтрока.ВместеСоСледующим = Истина;
	
	Область1 = Макет.ПолучитьОбласть("Год|ОсновнаяНач");
	Область2 = Макет.ПолучитьОбласть("Год|ОсновнаяКон");
	Область2.Параметры.Заполнить(ОБЩИЕ);
	ДокументРезультат.Вывести(Область1);
	
	Если Добавочная Тогда
		Область3 = Макет.ПолучитьОбласть("Год|Добавочная");
		ДокументРезультат.Присоединить(Область3);
	КонецЕсли;
	
	ДокументРезультат.Присоединить(Область2);
	
	// Конечные остатки
	Если ДатаКон = КонецГода(ДатаКон) Тогда
		
		Область1 = Макет.ПолучитьОбласть("КонОст|ОсновнаяНач");
		ДокументРезультат.Вывести(Область1);
		
		Если Добавочная Тогда
			Область3 = Макет.ПолучитьОбласть("КонОст|Добавочная");
			ДокументРезультат.Присоединить(Область3);
		КонецЕсли;
		
		Область2 = Макет.ПолучитьОбласть("КонОст|ОсновнаяКон");
		ДокументРезультат.Присоединить(Область2);
		
		Поиск = Новый Структура("НомерТаблицы", 6);
		
		ВыбВидыМПЗ = КонОстаткиМПЗ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "НомерТаблицы");
		ВыбВидыМПЗ.НайтиСледующий(Поиск);
	
		Выборка = ВыбВидыМПЗ.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			РеквизитыПартии = ЗаполнениеРеквизитовПартии(Выборка, ЦеныМПЗ, ПоискПартии);
			
			Область1 = Макет.ПолучитьОбласть("ОстатокНач|ОсновнаяНач");
			Область1.Параметры.Заполнить(Выборка);
			Область1.Параметры.РеквизитыДокументаОплаты = РеквизитыПартии.РеквизитыДокументаОплаты;
			
			Область2 = Макет.ПолучитьОбласть("ОстатокНач|ОсновнаяКон");
			Область2.Параметры.Заполнить(Выборка);
			Область2.Параметры.Заполнить(РеквизитыПартии);
			
			ДокументРезультат.Вывести(Область1);
			
			Если Добавочная Тогда
				Область3 = Макет.ПолучитьОбласть("ОстатокНач|Добавочная");
				СтруктураДокумента.Номер = Выборка.ПартияНомер;
				Область3.Параметры.ДокументПоступления = ДоходыИРасходыПредпринимателя.РеквизитыДокументаОплатыСтр(ОбщегоНазначения.ПолучитьНомерНаПечать(СтруктураДокумента), Выборка.ПартияДата);
				Область3.Параметры.Партия = Выборка.Партия;
				ДокументРезультат.Присоединить(Область3);
			КонецЕсли;
			
			ДокументРезультат.Присоединить(Область2);
		КонецЦикла;
		
		Поиск = Новый Структура("НомерТаблицы", 1);
		
		ВыбВидыМПЗ = КонОстаткиМПЗ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "НомерТаблицы");
		ВыбВидыМПЗ.НайтиСледующий(Поиск);
	
		Выборка = ВыбВидыМПЗ.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Если НЕ Выборка.ВидМПЗ = Перечисления.ВидыМПЗ.Товары Тогда
				Продолжить;
			КонецЕсли;
			
			РеквизитыПартии = ЗаполнениеРеквизитовПартии(Выборка, ЦеныМПЗ, ПоискПартии);
			
			Область1 = Макет.ПолучитьОбласть("ОстатокНач|ОсновнаяНач");
			Область1.Параметры.Заполнить(Выборка);
			Область1.Параметры.РеквизитыДокументаОплаты = РеквизитыПартии.РеквизитыДокументаОплаты;
			
			Область2 = Макет.ПолучитьОбласть("ОстатокНач|ОсновнаяКон");
			Область2.Параметры.Заполнить(Выборка);
			Область2.Параметры.Заполнить(РеквизитыПартии);
			
			ДокументРезультат.Вывести(Область1);
			
			Если Добавочная Тогда
				Область3 = Макет.ПолучитьОбласть("ОстатокНач|Добавочная");
				СтруктураДокумента.Номер = Выборка.ПартияНомер;
				Область3.Параметры.ДокументПоступления = ДоходыИРасходыПредпринимателя.РеквизитыДокументаОплатыСтр(ОбщегоНазначения.ПолучитьНомерНаПечать(СтруктураДокумента), Выборка.ПартияДата);
				Область3.Параметры.Партия = Выборка.Партия;
				ДокументРезультат.Присоединить(Область3);
			КонецЕсли;
			
			ДокументРезультат.Присоединить(Область2);
		КонецЦикла;
		
		//остатки оплаченных, реализованных, но не оплаченных покупателем ТМЦ
		Поиск = Новый Структура("НомерТаблицы", 7);
		
		ВыбВидыМПЗ = КонОстаткиМПЗ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "НомерТаблицы");
		ВыбВидыМПЗ.НайтиСледующий(Поиск);
	
		Выборка = ВыбВидыМПЗ.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Если НЕ Выборка.ВидМПЗ = Перечисления.ВидыМПЗ.Товары Тогда
				Продолжить;
			КонецЕсли;
			
			РеквизитыПартии = ЗаполнениеРеквизитовПартии(Выборка, ЦеныМПЗОтгруженных, ПоискПартии);
			
			Область1 = Макет.ПолучитьОбласть("ОстатокНач|ОсновнаяНач");
			Область1.Параметры.Заполнить(Выборка);
			Область1.Параметры.РеквизитыДокументаОплаты = РеквизитыПартии.РеквизитыДокументаОплаты;
			
			Область2 = Макет.ПолучитьОбласть("ОстатокНач|ОсновнаяКон");
			Область2.Параметры.Заполнить(Выборка);
			Область2.Параметры.Заполнить(РеквизитыПартии);
			
			ДокументРезультат.Вывести(Область1);
			
			Если Добавочная Тогда
				Область3 = Макет.ПолучитьОбласть("ОстатокНач|Добавочная");
				СтруктураДокумента.Номер = Выборка.ПартияНомер;
				Область3.Параметры.ДокументПоступления = ДоходыИРасходыПредпринимателя.РеквизитыДокументаОплатыСтр(ОбщегоНазначения.ПолучитьНомерНаПечать(СтруктураДокумента), Выборка.ПартияДата);
				Область3.Параметры.Партия = Выборка.Партия;
				СтруктураДокумента.Номер = Выборка.ДокументОтгрузкиНомер;
				Область3.Параметры.РеквизитыДокументаОтгрузки = ДоходыИРасходыПредпринимателя.РеквизитыДокументаОплатыСтр(ОбщегоНазначения.ПолучитьНомерНаПечать(СтруктураДокумента), Выборка.ДокументОтгрузкиДата); 
				Область3.Параметры.ДокументОтгрузки = Выборка.ДокументОтгрузки;
				ДокументРезультат.Присоединить(Область3);
			КонецЕсли;
			
			ДокументРезультат.Присоединить(Область2);
		КонецЦикла;


	КонецЕсли;
		
	// Примечание
	ПоследняяСтрока = ДокументРезультат.Область(ДокументРезультат.ВысотаТаблицы,, ДокументРезультат.ВысотаТаблицы,);
	ПоследняяСтрока.ВместеСоСледующим = Истина;
	
	Область1 = Макет.ПолучитьОбласть("Примечание|ОсновнаяНач");
	Область2 = Макет.ПолучитьОбласть("Примечание|ОсновнаяКон");
	Область1.Параметры.НомерТаблицы = СписокТаблиц[НомерТаблицы].ЗаголовокТаблицы + Буква + "*";
	ДокументРезультат.Вывести(Область1);
	Если Добавочная Тогда
		Область3 = Макет.ПолучитьОбласть("Примечание|Добавочная");
		ДокументРезультат.Присоединить(Область3);
	КонецЕсли;
	ДокументРезультат.Присоединить(Область2);
		
	ДокументРезультат.ТолькоПросмотр = Истина;
	
	ВысотаШапки = ?(ЗначениеЗаполнено(ВидДеятельности), 9, 8);
	ДокументРезультат.ПовторятьПриПечатиСтроки = ДокументРезультат.Область(ВысотаШапки,, ВысотаШапки,);
	ДокументРезультат.ОбластьПечати = ДокументРезультат.Область(2, 2, ДокументРезультат.ВысотаТаблицы, ДокументРезультат.ШиринаТаблицы);
	
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;	
	ДокументРезультат.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КУДиР_ИП_Таблица_16";
	
КонецПроцедуры

Процедура ФормированиеТаблицы17(Таблица)
	
	Отгружено = ДоходыИРасходыСводно;
			
	НомерТаблицы = Таблица.НомерСтроки - 1;

	ДокументРезультат = ЭлементыФормы[СписокТаблиц[НомерТаблицы].ИмяДокумента];
	ДокументРезультат.Очистить();

	ИмяМакета = СписокТаблиц[НомерТаблицы].ИмяМакета;
	ИмяМакета = ИмяМакета + Буква;

	Макет = ПолучитьМакет(ИмяМакета);
	
	ПоискПартии = Новый Структура("ВидМПЗ, Номенклатура, Партия");
	ПоискПартииИОплаты = Новый Структура("ВидМПЗ, Номенклатура, Партия, ДокументОплаты");
	ПоискПартииИМР = Новый Структура("СтатьяЗатрат, Партия, ДокументОплаты");
	
	// Печать заголовка
	ЗаголовокОтчета = Макет.ПолучитьОбласть("Заголовок");
	ЗаголовокОтчета.Параметры.ОписаниеПериода = ОписаниеПериода();
	ЗаголовокОтчета.Параметры.ТекстЗаголовка = СписокТаблиц[НомерТаблицы].НаименованиеПолное;
	ДокументРезультат.Вывести(ЗаголовокОтчета);
	
	Если ЗначениеЗаполнено(ВидДеятельности) Тогда
		Фильтр = Макет.ПолучитьОбласть("Фильтр");
		Фильтр.Параметры.ТекстФильтра = "Вид деятельности: " + ВидДеятельности.НаименованиеПолное;
		ДокументРезультат.Вывести(Фильтр);
	КонецЕсли;
		
	// Печать шапки
	Область1 = Макет.ПолучитьОбласть("Шапка|ОсновнаяНач");
	Область2 = Макет.ПолучитьОбласть("Шапка|ОсновнаяКон");
	Область2.Параметры.НомерТаблицы = СписокТаблиц[НомерТаблицы].ЗаголовокТаблицы + Буква + "*";
	
	ДокументРезультат.Вывести(Область1);
	Если Добавочная Тогда
		Область3 = Макет.ПолучитьОбласть("Шапка|Добавочная");
		ДокументРезультат.Присоединить(Область3);
	КонецЕсли;
	
	ДокументРезультат.Присоединить(Область2);
	
	СтруктураДокумента = Новый Структура("Номер, Организация");
	СтруктураДокумента.Организация = Организация;
	
	Если ДатаНач = НачалоГода(ДатаНач) Тогда // начальные остатки
		
		Поиск = Новый Структура("НомерТаблицы", 6);
	
		ВыбВидыМПЗ = НачОстаткиМПЗ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "НомерТаблицы");
		ВыбВидыМПЗ.НайтиСледующий(Поиск);
	
		Выборка = ВыбВидыМПЗ.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			РеквизитыПартии = ЗаполнениеРеквизитовПартии(Выборка, ЦеныМПЗ, ПоискПартии);
			
			Область1 = Макет.ПолучитьОбласть("ОстатокНач|ОсновнаяНач");
			Область1.Параметры.Заполнить(Выборка);
			Область1.Параметры.РеквизитыДокументаОплаты = РеквизитыПартии.РеквизитыДокументаОплаты;
			
			Область2 = Макет.ПолучитьОбласть("ОстатокНач|ОсновнаяКон");
			Область2.Параметры.Заполнить(Выборка);
			Область2.Параметры.Заполнить(РеквизитыПартии);
			
			ДокументРезультат.Вывести(Область1);
			
			Если Добавочная Тогда
				Область3 = Макет.ПолучитьОбласть("ОстатокНач|Добавочная");
				СтруктураДокумента.Номер = Выборка.ПартияНомер;
				Область3.Параметры.ДокументПоступления = ДоходыИРасходыПредпринимателя.РеквизитыДокументаОплатыСтр(ОбщегоНазначения.ПолучитьНомерНаПечать(СтруктураДокумента), Выборка.ПартияДата);
				Область3.Параметры.Партия = Выборка.Партия;
				ДокументРезультат.Присоединить(Область3);
			КонецЕсли;
			
			ДокументРезультат.Присоединить(Область2);
		КонецЦикла;
		
		
		Поиск = Новый Структура("НомерТаблицы", 1);
	
		ВыбВидыМПЗ = НачОстаткиМПЗ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "НомерТаблицы");
		ВыбВидыМПЗ.НайтиСледующий(Поиск);
	
		Выборка = ВыбВидыМПЗ.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Если НЕ Выборка.ВидМПЗ = Перечисления.ВидыМПЗ.Товары Тогда
				Продолжить;
			КонецЕсли;
			
			РеквизитыПартии = ЗаполнениеРеквизитовПартии(Выборка, ЦеныМПЗ, ПоискПартии);
			
			Область1 = Макет.ПолучитьОбласть("ОстатокНач|ОсновнаяНач");
			Область1.Параметры.Заполнить(Выборка);
			Область1.Параметры.РеквизитыДокументаОплаты = РеквизитыПартии.РеквизитыДокументаОплаты;
			
			Область2 = Макет.ПолучитьОбласть("ОстатокНач|ОсновнаяКон");
			Область2.Параметры.Заполнить(Выборка);
			Область2.Параметры.Заполнить(РеквизитыПартии);
			
			ДокументРезультат.Вывести(Область1);
			
			Если Добавочная Тогда
				Область3 = Макет.ПолучитьОбласть("ОстатокНач|Добавочная");
				СтруктураДокумента.Номер = Выборка.ПартияНомер;
				Область3.Параметры.ДокументПоступления = ДоходыИРасходыПредпринимателя.РеквизитыДокументаОплатыСтр(ОбщегоНазначения.ПолучитьНомерНаПечать(СтруктураДокумента), Выборка.ПартияДата);
				Область3.Параметры.Партия = Выборка.Партия;
				ДокументРезультат.Присоединить(Область3);
			КонецЕсли;
			
			ДокументРезультат.Присоединить(Область2);
		КонецЦикла;
		
		//остатки оплаченных, реализованных, но не оплаченных покупателем ТМЦ
		Поиск = Новый Структура("НомерТаблицы", 7);
		
		ВыбВидыМПЗ = НачОстаткиМПЗ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "НомерТаблицы");
		ВыбВидыМПЗ.НайтиСледующий(Поиск);
	
		Выборка = ВыбВидыМПЗ.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			РеквизитыПартии = ЗаполнениеРеквизитовПартии(Выборка, ЦеныМПЗОтгруженных, ПоискПартии);
			
			Область1 = Макет.ПолучитьОбласть("ОстатокНач|ОсновнаяНач");
			Область1.Параметры.Заполнить(Выборка);
			Область1.Параметры.РеквизитыДокументаОплаты = РеквизитыПартии.РеквизитыДокументаОплаты;
			
			Область2 = Макет.ПолучитьОбласть("ОстатокНач|ОсновнаяКон");
			Область2.Параметры.Заполнить(Выборка);
			Область2.Параметры.Заполнить(РеквизитыПартии);
			
			ДокументРезультат.Вывести(Область1);
			
			Если Добавочная Тогда
				Область3 = Макет.ПолучитьОбласть("ОстатокНач|Добавочная");
				СтруктураДокумента.Номер = Выборка.ПартияНомер;
				Область3.Параметры.ДокументПоступления = ДоходыИРасходыПредпринимателя.РеквизитыДокументаОплатыСтр(ОбщегоНазначения.ПолучитьНомерНаПечать(СтруктураДокумента), Выборка.ПартияДата);
				Область3.Параметры.Партия = Выборка.Партия;
				СтруктураДокумента.Номер = Выборка.ДокументОтгрузкиНомер;
				Область3.Параметры.РеквизитыДокументаОтгрузки = ДоходыИРасходыПредпринимателя.РеквизитыДокументаОплатыСтр(ОбщегоНазначения.ПолучитьНомерНаПечать(СтруктураДокумента), Выборка.ДокументОтгрузкиДата); 
				Область3.Параметры.ДокументОтгрузки = Выборка.ДокументОтгрузки;
				ДокументРезультат.Присоединить(Область3);
			КонецЕсли;
			
			ДокументРезультат.Присоединить(Область2);
		КонецЦикла;

		
	КонецЕсли;
	
	НПП = 1;
	
	ОБЩИЕ = Отгружено.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ОБЩИЕ");
	ЕстьИтоги = ОБЩИЕ.Следующий();
	
	ВыбМесяц = ОБЩИЕ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Месяц");
	Пока ВыбМесяц.Следующий() Цикл
		
		Если ВыбМесяц.Месяц = NULL Тогда
			Продолжить;
		КонецЕсли;
		
		// Операции по реализации МПЗ
		ВыбНоменклатура = ВыбМесяц.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Номенклатура");
		Пока ВыбНоменклатура.Следующий() Цикл
			
			Если НЕ ЗначениеЗаполнено(ВыбНоменклатура.Номенклатура) Тогда // это ИМР
				Продолжить;
			КонецЕсли;
			
			ВыбИМР = ВыбНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "СтатьяЗатрат");
			Пока ВыбИМР.Следующий() Цикл
		
				Выборка = ВыбИМР.Выбрать();
				Пока Выборка.Следующий() Цикл
					
					Если Выборка.Регистратор = Неопределено Тогда
						Продолжить;
					
					Иначе // печать строк таблицы	
						
						Область1 = Макет.ПолучитьОбласть("Строка|ОсновнаяНач");
						Область1.Параметры.Заполнить(Выборка);
						Область1.Параметры.НПП = НПП;
						
						Область2 = Макет.ПолучитьОбласть("Строка|ОсновнаяКон");
						Область2.Параметры.Заполнить(Выборка);
												
						Если ЗначениеЗаполнено(Выборка.СтатьяЗатрат) Тогда
							РеквизитыПартии = ЗаполнениеРеквизитовПартии(Выборка, ЦеныИМР, ПоискПартииИМР);
							Область1.Параметры.РеквизитыДокументаОплаты = РеквизитыПартии.РеквизитыДокументаОплаты;
							Область2.Параметры.Номенклатура = Выборка.СтатьяЗатрат;
							Область2.Параметры.Заполнить(РеквизитыПартии);
							
						Иначе
							Если Выборка.РеквизитыДокументаОплаты <> NULL Тогда // это реализация
								РеквизитыПартии = ЗаполнениеРеквизитовПартии(Выборка, ЦеныМПЗ, ПоискПартии);
								
							Иначе
								РеквизитыПартии = ЗаполнениеРеквизитовПартии(Выборка, ЦеныМПЗ, ПоискПартииИОплаты);
								Область1.Параметры.РеквизитыДокументаОплаты = РеквизитыПартии.РеквизитыДокументаОплаты;
							КонецЕсли;
							
							Область2.Параметры.Заполнить(РеквизитыПартии);
						КонецЕсли;
						
						ДокументРезультат.Вывести(Область1);
						
						Если Добавочная Тогда
							Область3 = Макет.ПолучитьОбласть("Строка|Добавочная");
							СтруктураДокумента.Номер = Выборка.ПартияНомер;
							Область3.Параметры.ДокументПоступления = ДоходыИРасходыПредпринимателя.РеквизитыДокументаОплатыСтр(ОбщегоНазначения.ПолучитьНомерНаПечать(СтруктураДокумента), Выборка.ПартияДата); 
							Область3.Параметры.Партия = Выборка.Партия;
							СтруктураДокумента.Номер = Выборка.ДокументОтгрузкиНомер;
							Область3.Параметры.РеквизитыДокументаОтгрузки = ДоходыИРасходыПредпринимателя.РеквизитыДокументаОплатыСтр(ОбщегоНазначения.ПолучитьНомерНаПечать(СтруктураДокумента), Выборка.ДокументОтгрузкиДата); 
							Область3.Параметры.ДокументОтгрузки = Выборка.ДокументОтгрузки;
							ДокументРезультат.Присоединить(Область3);
						КонецЕсли;
						
						ДокументРезультат.Присоединить(Область2);
						
						НПП = НПП + 1;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			
			// Итоги по номенклатуре
			Если ВыбНоменклатура.Выручка <> 0 ИЛИ ВыбНоменклатура.СуммаСНДС <> 0 Тогда
				Область1 = Макет.ПолучитьОбласть("Товар|ОсновнаяНач");
				Область1.Параметры.Заполнить(ВыбНоменклатура);
																		
				Область2 = Макет.ПолучитьОбласть("Товар|ОсновнаяКон");
				Область2.Параметры.Заполнить(ВыбНоменклатура);
										
				ДокументРезультат.Вывести(Область1);
				
				Если Добавочная Тогда
					Область3 = Макет.ПолучитьОбласть("Товар|Добавочная");
					ДокументРезультат.Присоединить(Область3);
				КонецЕсли;
				
				ДокументРезультат.Присоединить(Область2);
			КонецЕсли;
		КонецЦикла;
		
		// Операции по списанию ИМР
		ПерваяСтрока = Истина;
		ВыбНоменклатура.Сбросить();
		Пока ВыбНоменклатура.Следующий() Цикл
			
			Если ЗначениеЗаполнено(ВыбНоменклатура.Номенклатура) Тогда // это реализация
				Продолжить;
			КонецЕсли;
			
			ВыбИМР = ВыбНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "СтатьяЗатрат");
			Пока ВыбИМР.Следующий() Цикл
		
				Выборка = ВыбИМР.Выбрать();
				Пока Выборка.Следующий() Цикл
					
					Если Выборка.Регистратор = Неопределено Тогда
						Продолжить;
					
					Иначе // печать строк таблицы
						Если ПерваяСтрока Тогда
							Область1 = Макет.ПолучитьОбласть("ИМР|ОсновнаяНач");
							Область2 = Макет.ПолучитьОбласть("ИМР|ОсновнаяКон");
							ДокументРезультат.Вывести(Область1);
							
							Если Добавочная Тогда
								Область3 = Макет.ПолучитьОбласть("ИМР|Добавочная");
								ДокументРезультат.Присоединить(Область3);
							КонецЕсли;
							
							ДокументРезультат.Присоединить(Область2);
							ПерваяСтрока = Ложь;
						КонецЕсли;
						
						РеквизитыПартии = ЗаполнениеРеквизитовПартии(Выборка, ЦеныИМР, ПоискПартииИМР);
						
						Область1 = Макет.ПолучитьОбласть("Строка|ОсновнаяНач");
						Область1.Параметры.Заполнить(Выборка);
						Область1.Параметры.НПП = НПП;
						Область1.Параметры.РеквизитыДокументаОплаты = РеквизитыПартии.РеквизитыДокументаОплаты;
														
						Область2 = Макет.ПолучитьОбласть("Строка|ОсновнаяКон");
						Область2.Параметры.Заполнить(Выборка);
						Область2.Параметры.Номенклатура = Выборка.СтатьяЗатрат;
						Область2.Параметры.Заполнить(РеквизитыПартии);
						
						ДокументРезультат.Вывести(Область1);
						
						Если Добавочная Тогда
							Область3 = Макет.ПолучитьОбласть("Строка|Добавочная");
							СтруктураДокумента.Номер = Выборка.ПартияНомер;
							Область3.Параметры.ДокументПоступления = ДоходыИРасходыПредпринимателя.РеквизитыДокументаОплатыСтр(ОбщегоНазначения.ПолучитьНомерНаПечать(СтруктураДокумента), Выборка.ПартияДата); 
							Область3.Параметры.Партия = Выборка.Партия;
							СтруктураДокумента.Номер = Выборка.ДокументОтгрузкиНомер;
							Область3.Параметры.РеквизитыДокументаОтгрузки = ДоходыИРасходыПредпринимателя.РеквизитыДокументаОплатыСтр(ОбщегоНазначения.ПолучитьНомерНаПечать(СтруктураДокумента), Выборка.ДокументОтгрузкиДата); 
							Область3.Параметры.ДокументОтгрузки = Выборка.ДокументОтгрузки;
							ДокументРезультат.Присоединить(Область3);
						КонецЕсли;
						
						ДокументРезультат.Присоединить(Область2);
						
						НПП = НПП + 1;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
		
		// Итоги за месяц
		Если ВыбМесяц.Выручка <> 0 ИЛИ ВыбМесяц.СуммаСНДС <> 0 Тогда
			ПоследняяСтрока = ДокументРезультат.Область(ДокументРезультат.ВысотаТаблицы,, ДокументРезультат.ВысотаТаблицы,);
			ПоследняяСтрока.ВместеСоСледующим = Истина;
	
			Область1 = Макет.ПолучитьОбласть("Месяц|ОсновнаяНач");
			Область1.Параметры.НазваниеИтогов = "Итого за " + НРег(Формат(Дата(Год(ДатаНач), ВыбМесяц.Месяц, 1), "ДФ='ММMM гггг'")) + " г.";
			
			Область2 = Макет.ПолучитьОбласть("Месяц|ОсновнаяКон");
			Область2.Параметры.Заполнить(ВыбМесяц);
			
			ДокументРезультат.Вывести(Область1);
			
			Если Добавочная Тогда
				Область3 = Макет.ПолучитьОбласть("Месяц|Добавочная");
				ДокументРезультат.Присоединить(Область3);
			КонецЕсли;
			
			ДокументРезультат.Присоединить(Область2);
		КонецЕсли;
		
		ПоследнийМесяц = ВыбМесяц.Месяц;
		
	КонецЦикла;
	
	// Итоги за год
	ПоследняяСтрока = ДокументРезультат.Область(ДокументРезультат.ВысотаТаблицы,, ДокументРезультат.ВысотаТаблицы,);
	ПоследняяСтрока.ВместеСоСледующим = Истина;
	
	Область1 = Макет.ПолучитьОбласть("Год|ОсновнаяНач");
	Область2 = Макет.ПолучитьОбласть("Год|ОсновнаяКон");
	Область2.Параметры.Заполнить(ОБЩИЕ);
	ДокументРезультат.Вывести(Область1);
	
	Если Добавочная Тогда
		Область3 = Макет.ПолучитьОбласть("Год|Добавочная");
		ДокументРезультат.Присоединить(Область3);
	КонецЕсли;
	
	ДокументРезультат.Присоединить(Область2);
	
	// Конечные остатки
	Если ДатаКон = КонецГода(ДатаКон) Тогда
		
		Область1 = Макет.ПолучитьОбласть("КонОст|ОсновнаяНач");
		ДокументРезультат.Вывести(Область1);
		
		Если Добавочная Тогда
			Область3 = Макет.ПолучитьОбласть("КонОст|Добавочная");
			ДокументРезультат.Присоединить(Область3);
		КонецЕсли;
		
		Область2 = Макет.ПолучитьОбласть("КонОст|ОсновнаяКон");
		ДокументРезультат.Присоединить(Область2);
		
		Поиск = Новый Структура("НомерТаблицы", 6);
		
		ВыбВидыМПЗ = КонОстаткиМПЗ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "НомерТаблицы");
		ВыбВидыМПЗ.НайтиСледующий(Поиск);
	
		Выборка = ВыбВидыМПЗ.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			РеквизитыПартии = ЗаполнениеРеквизитовПартии(Выборка, ЦеныМПЗ, ПоискПартии);
			
			Область1 = Макет.ПолучитьОбласть("ОстатокНач|ОсновнаяНач");
			Область1.Параметры.Заполнить(Выборка);
			Область1.Параметры.РеквизитыДокументаОплаты = РеквизитыПартии.РеквизитыДокументаОплаты;
			
			Область2 = Макет.ПолучитьОбласть("ОстатокНач|ОсновнаяКон");
			Область2.Параметры.Заполнить(Выборка);
			Область2.Параметры.Заполнить(РеквизитыПартии);
			
			ДокументРезультат.Вывести(Область1);
			
			Если Добавочная Тогда
				Область3 = Макет.ПолучитьОбласть("ОстатокНач|Добавочная");
				СтруктураДокумента.Номер = Выборка.ПартияНомер;
				Область3.Параметры.ДокументПоступления = ДоходыИРасходыПредпринимателя.РеквизитыДокументаОплатыСтр(ОбщегоНазначения.ПолучитьНомерНаПечать(СтруктураДокумента), Выборка.ПартияДата);
				Область3.Параметры.Партия = Выборка.Партия;
				ДокументРезультат.Присоединить(Область3);
			КонецЕсли;
			
			ДокументРезультат.Присоединить(Область2);
		КонецЦикла;
		
		Поиск = Новый Структура("НомерТаблицы", 1);
		
		ВыбВидыМПЗ = КонОстаткиМПЗ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "НомерТаблицы");
		ВыбВидыМПЗ.НайтиСледующий(Поиск);
	
		Выборка = ВыбВидыМПЗ.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Если НЕ Выборка.ВидМПЗ = Перечисления.ВидыМПЗ.Товары Тогда
				Продолжить;
			КонецЕсли;
			
			РеквизитыПартии = ЗаполнениеРеквизитовПартии(Выборка, ЦеныМПЗ, ПоискПартии);
			
			Область1 = Макет.ПолучитьОбласть("ОстатокНач|ОсновнаяНач");
			Область1.Параметры.Заполнить(Выборка);
			Область1.Параметры.РеквизитыДокументаОплаты = РеквизитыПартии.РеквизитыДокументаОплаты;
			
			Область2 = Макет.ПолучитьОбласть("ОстатокНач|ОсновнаяКон");
			Область2.Параметры.Заполнить(Выборка);
			Область2.Параметры.Заполнить(РеквизитыПартии);
			
			ДокументРезультат.Вывести(Область1);
			
			Если Добавочная Тогда
				Область3 = Макет.ПолучитьОбласть("ОстатокНач|Добавочная");
				СтруктураДокумента.Номер = Выборка.ПартияНомер;
				Область3.Параметры.ДокументПоступления = ДоходыИРасходыПредпринимателя.РеквизитыДокументаОплатыСтр(ОбщегоНазначения.ПолучитьНомерНаПечать(СтруктураДокумента), Выборка.ПартияДата);
				Область3.Параметры.Партия = Выборка.Партия;
				ДокументРезультат.Присоединить(Область3);
			КонецЕсли;
			
			ДокументРезультат.Присоединить(Область2);
		КонецЦикла;
		
		//остатки оплаченных, реализованных, но не оплаченных покупателем ТМЦ				
		Поиск = Новый Структура("НомерТаблицы", 7);
		
		ВыбВидыМПЗ = КонОстаткиМПЗ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "НомерТаблицы");
		ВыбВидыМПЗ.НайтиСледующий(Поиск);
	
		Выборка = ВыбВидыМПЗ.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Если НЕ Выборка.ВидМПЗ = Перечисления.ВидыМПЗ.Товары Тогда
				Продолжить;
			КонецЕсли;
			
			РеквизитыПартии = ЗаполнениеРеквизитовПартии(Выборка, ЦеныМПЗОтгруженных, ПоискПартии);
			
			Область1 = Макет.ПолучитьОбласть("ОстатокНач|ОсновнаяНач");
			Область1.Параметры.Заполнить(Выборка);
			Область1.Параметры.РеквизитыДокументаОплаты = РеквизитыПартии.РеквизитыДокументаОплаты;
			
			Область2 = Макет.ПолучитьОбласть("ОстатокНач|ОсновнаяКон");
			Область2.Параметры.Заполнить(Выборка);
			Область2.Параметры.Заполнить(РеквизитыПартии);
			
			ДокументРезультат.Вывести(Область1);
			
			Если Добавочная Тогда
				Область3 = Макет.ПолучитьОбласть("ОстатокНач|Добавочная");
				СтруктураДокумента.Номер = Выборка.ПартияНомер;
				Область3.Параметры.ДокументПоступления = ДоходыИРасходыПредпринимателя.РеквизитыДокументаОплатыСтр(ОбщегоНазначения.ПолучитьНомерНаПечать(СтруктураДокумента), Выборка.ПартияДата);
				Область3.Параметры.Партия = Выборка.Партия;
				СтруктураДокумента.Номер = Выборка.ДокументОтгрузкиНомер;
				Область3.Параметры.РеквизитыДокументаОтгрузки = ДоходыИРасходыПредпринимателя.РеквизитыДокументаОплатыСтр(ОбщегоНазначения.ПолучитьНомерНаПечать(СтруктураДокумента), Выборка.ДокументОтгрузкиДата); 
				Область3.Параметры.ДокументОтгрузки = Выборка.ДокументОтгрузки;
				ДокументРезультат.Присоединить(Область3);
			КонецЕсли;
			
			ДокументРезультат.Присоединить(Область2);
		КонецЦикла;

		
	КонецЕсли;
		
	
	// Примечание
	ПоследняяСтрока = ДокументРезультат.Область(ДокументРезультат.ВысотаТаблицы,, ДокументРезультат.ВысотаТаблицы,);
	ПоследняяСтрока.ВместеСоСледующим = Истина;
	
	Область1 = Макет.ПолучитьОбласть("Примечание|ОсновнаяНач");
	Область2 = Макет.ПолучитьОбласть("Примечание|ОсновнаяКон");
	Область1.Параметры.НомерТаблицы = СписокТаблиц[НомерТаблицы].ЗаголовокТаблицы + Буква + "*";
	ДокументРезультат.Вывести(Область1);
	Если Добавочная Тогда
		Область3 = Макет.ПолучитьОбласть("Примечание|Добавочная");
		ДокументРезультат.Присоединить(Область3);
	КонецЕсли;
	ДокументРезультат.Присоединить(Область2);
		
	ДокументРезультат.ТолькоПросмотр = Истина;
	
	ВысотаШапки = ?(ЗначениеЗаполнено(ВидДеятельности), 9, 8);
	ДокументРезультат.ПовторятьПриПечатиСтроки = ДокументРезультат.Область(ВысотаШапки,, ВысотаШапки,);
	ДокументРезультат.ОбластьПечати = ДокументРезультат.Область(2, 2, ДокументРезультат.ВысотаТаблицы, ДокументРезультат.ШиринаТаблицы);
	
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;	
	ДокументРезультат.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КУДиР_ИП_Таблица_17";
	
КонецПроцедуры

Функция ИсторияНачисленияАмортизации()
	
	ЗапросПоПериодамАмортизации = Новый Запрос;
	ЗапросПоПериодамАмортизации.УстановитьПараметр("Организация", Организация);
	ЗапросПоПериодамАмортизации.УстановитьПараметр("ДатаНачГода", НачалоГода(ДатаНач));
	ЗапросПоПериодамАмортизации.Текст = 
	"ВЫБРАТЬ
	|	ПериодН.ОсновноеСредство КАК ОсновноеСредство,
	|	НАЧАЛОПЕРИОДА(ПериодН.Период, МЕСЯЦ) КАК НачалоПериода,
	|	ПериодН.НачислятьАмортизацию КАК НачислятьАмортизацию,
	|	ПериодН.МоментВремени КАК МоментВремени,
	|	ПериодН.Организация
	|ИЗ
	|	РегистрСведений.НачислениеАмортизацииОСНалоговыйУчет КАК ПериодН
	|ГДЕ
	|	ПериодН.Период < &ДатаНачГода
	|	И ПериодН.Организация = &Организация
	|
	|СГРУППИРОВАТЬ ПО
	|	ПериодН.ОсновноеСредство,
	|	НАЧАЛОПЕРИОДА(ПериодН.Период, МЕСЯЦ),
	|	ПериодН.НачислятьАмортизацию,
	|	ПериодН.МоментВремени,
	|	ПериодН.Организация
	|
	|УПОРЯДОЧИТЬ ПО
	|	НачалоПериода,
	|	МоментВремени УБЫВ
	|ИТОГИ ПО
	|	ОсновноеСредство,
	|	НачалоПериода";
	
	ВыборкаОС = ЗапросПоПериодамАмортизации.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ОсновноеСредство");
	Возврат ВыборкаОС;
	
КонецФункции

Функция МесяцыНачисленияАмортизации(Выборка, ВыборкаОС)
	
	ГодыМесяцы = "";
	СтруктураПоиска = Новый Структура("ОсновноеСредство");
	
	Если Выборка.АмортизацияПредыдущихПериодов <> 0 Тогда
		Дата1 = Выборка.МесяцНачалаАмортизации; // в месяц начала использования начислять никак не могли
		Дата2 = Выборка.МесяцНачалаАмортизации;
		
		АмортизацияНачисляется = Истина;
			
		ВыборкаОС.Сбросить();
		СтруктураПоиска.ОсновноеСредство = Выборка.ОС;
		Если ВыборкаОС.НайтиСледующий(СтруктураПоиска) Тогда
			
			ВыборкаПериод = ВыборкаОС.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "НачалоПериода");
			Пока ВыборкаПериод.Следующий() Цикл
				ВыборкаПризнак = ВыборкаПериод.Выбрать();
				Если ВыборкаПризнак.Следующий() Тогда
					Если АмортизацияНачисляется Тогда
						Если НЕ ВыборкаПризнак.НачислятьАмортизацию Тогда // перестали начислять
							АмортизацияНачисляется = Ложь;
							Если Месяц(ВыборкаПризнак.НачалоПериода) > Месяц(Дата1) Тогда
								ПоследнийМесяцНачисления = НачалоМесяца(ДобавитьМесяц(ВыборкаПризнак.НачалоПериода, -1));
								ГодыМесяцы = ГодыМесяцы + ?(ГодыМесяцы = "", "", ", ");
								
								Если НачалоМесяца(Дата1) = ПоследнийМесяцНачисления Тогда
									ГодыМесяцы = ГодыМесяцы + Формат(Дата1, "ДФ=MMMyyyy");
									
								Иначе
									ГодыМесяцы = ГодыМесяцы + Формат(Дата1, "ДФ=MMMyyyy") + " - " + Формат(ПоследнийМесяцНачисления, "ДФ=MMMyyyy");
								КонецЕсли;
							КонецЕсли;
							
						Иначе
							Дата2 = ВыборкаПризнак.НачалоПериода;
						КонецЕсли;
						
					Иначе // амортизация не начислялась
						Если ВыборкаПризнак.НачислятьАмортизацию Тогда // начали начислять
							АмортизацияНачисляется = Истина;
							Дата1 = ВыборкаПризнак.НачалоПериода;
							Дата2 = ВыборкаПризнак.НачалоПериода;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
			Если АмортизацияНачисляется Тогда
				ГодыМесяцы = ГодыМесяцы + ?(ГодыМесяцы = "", "", ", ");
				ГодыМесяцы = ГодыМесяцы + Формат(Дата1, "ДФ=MMMyyyy") + " - " + Формат(НачалоГода(ДатаНач) - 1, "ДФ=MMMyyyy");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ГодыМесяцы;
	
КонецФункции

Процедура ФормированиеТаблицы21(Таблица)
	
	НомерТаблицы = Таблица.НомерСтроки - 1;
		
	ДокументРезультат = ЭлементыФормы[СписокТаблиц[НомерТаблицы].ИмяДокумента];
	ДокументРезультат.Очистить();
	
	ИмяМакета = СписокТаблиц[НомерТаблицы].ИмяМакета;
	Макет = ПолучитьМакет(ИмяМакета);
	
	ПартияМПЗ = Новый Структура("ВидМПЗ, Номенклатура, Партия, ДокументОплаты");
	ПоискПартии = Новый Структура("ВидМПЗ, Номенклатура, Партия, ДокументОплаты");
	
	// Печать заголовка
	ЗаголовокОтчета = Макет.ПолучитьОбласть("Заголовок");
	ЗаголовокОтчета.Параметры.ТекстЗаголовка = СписокТаблиц[НомерТаблицы].НаименованиеПолное;
	ЗаголовокОтчета.Параметры.ОписаниеПериода = ОписаниеПериода(Истина);
	ДокументРезультат.Вывести(ЗаголовокОтчета);
	
	Если ЗначениеЗаполнено(ВидДеятельности) Тогда
		Фильтр = Макет.ПолучитьОбласть("Фильтр");
		Фильтр.Параметры.ТекстФильтра = "Вид деятельности: " + ВидДеятельности.НаименованиеПолное;
		ДокументРезультат.Вывести(Фильтр);
	КонецЕсли;
		
	Шапка = Макет.ПолучитьОбласть("Шапка");
	Шапка.Параметры.НомерТаблицы = СписокТаблиц[НомерТаблицы].ЗаголовокТаблицы;
	ДокументРезультат.Вывести(Шапка);
	
	НПП = 1;
	ПервоначальнаяСтоимостьВсего = 0;
	
	ВыборкаОС = ИсторияНачисленияАмортизации();
		
	ОБЩ = ЗапросОС.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "МетодНачисленияАмортизации");
	ЕстьИтоги = Ложь;
		
	Пока ОБЩ.Следующий() Цикл
		Если ОБЩ.МетодНачисленияАмортизации = Перечисления.МетодыНачисленияАмортизации.Линейный Тогда
			ЕстьИтоги = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ЕстьИтоги Тогда
		Выборка = ОБЩ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ОС");
		Пока Выборка.Следующий() Цикл
			
			Если (Выборка.АмортизацияПредыдущихПериодов + Выборка.СуммаАмортизации) = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Область1 = Макет.ПолучитьОбласть("Строка");
			Область1.Параметры.Заполнить(Выборка);
			Область1.Параметры.НПП = НПП;
			Область1.Параметры.ОстаточнаяСтоимость = МАКС(Выборка.ПервоначальнаяСтоимость - Выборка.АмортизацияПредыдущихПериодовВсего - Выборка.СуммаАмортизацииВсего, 0);
			Область1.Параметры.МесяцыСписания = МесяцыНачисленияАмортизации(Выборка, ВыборкаОС);
			
			Если ЗначениеЗаполнено(Выборка.СобытиеВыбытия) Тогда
				Область1.Параметры.ОснованиеВыбытия = СокрЛП(Выборка.НазваниеДокументаВыбытия) + " № " + СокрЛП(Выборка.НомерДокументаВыбытия);
			КонецЕсли;
			
			ВыборкаДок = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ДокументОплаты");
			Если ВыборкаДок.Следующий() Тогда
				ПартияМПЗ.ВидМПЗ = Перечисления.ВидыМПЗ.ОС;
				ПартияМПЗ.Номенклатура = ВыборкаДок.ОС;
				ПартияМПЗ.Партия = ВыборкаДок.Партия;
				ПартияМПЗ.ДокументОплаты = ВыборкаДок.ДокументОплаты;
				РеквизитыПартии = ЗаполнениеРеквизитовПартии(ПартияМПЗ, ЦеныМПЗ, ПоискПартии);
			
				Область1.Параметры.ДокументОплаты = ВыборкаДок.ДокументОплаты;
				Область1.Параметры.РеквизитыДокументаОплаты = РеквизитыПартии.РеквизитыДокументаОплаты;
			КонецЕсли;
			
			ДокументРезультат.Вывести(Область1);
			
			НПП = НПП + 1;
			ПервоначальнаяСтоимостьВсего = ПервоначальнаяСтоимостьВсего + Выборка.ПервоначальнаяСтоимость;
			
		КонецЦикла;
	КонецЕсли;
	
	Область1 = Макет.ПолучитьОбласть("Год");
	
	Если ЕстьИтоги Тогда
		Область1.Параметры.Заполнить(ОБЩ);
		Область1.Параметры.ПервоначальнаяСтоимость = ПервоначальнаяСтоимостьВсего;
		Область1.Параметры.ОстаточнаяСтоимость = МАКС(ПервоначальнаяСтоимостьВсего - ОБЩ.АмортизацияПредыдущихПериодовВсего - ОБЩ.СуммаАмортизацииВсего, 0);
		
		ПоследняяСтрока = ДокументРезультат.Область(ДокументРезультат.ВысотаТаблицы,, ДокументРезультат.ВысотаТаблицы,);
		ПоследняяСтрока.ВместеСоСледующим = Истина;
	КонецЕсли;
	
	ДокументРезультат.Вывести(Область1);
	ПоследняяСтрока = ДокументРезультат.Область(ДокументРезультат.ВысотаТаблицы - 1,, ДокументРезультат.ВысотаТаблицы - 1,);
	ПоследняяСтрока.ВместеСоСледующим = Истина;
	
	ДокументРезультат.ТолькоПросмотр = Истина;
	
	ВысотаШапки = ?(ЗначениеЗаполнено(ВидДеятельности), 8, 7);
	ДокументРезультат.ПовторятьПриПечатиСтроки = ДокументРезультат.Область(ВысотаШапки,, ВысотаШапки,);
	ДокументРезультат.ОбластьПечати = ДокументРезультат.Область(2, 2, ДокументРезультат.ВысотаТаблицы, ДокументРезультат.ШиринаТаблицы);
	
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;	
	ДокументРезультат.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КУДиР_ИП_Таблица_21";
	
КонецПроцедуры

Процедура ФормированиеТаблицы22(Таблица)
	
	НомерТаблицы = Таблица.НомерСтроки - 1;
		
	ДокументРезультат = ЭлементыФормы[СписокТаблиц[НомерТаблицы].ИмяДокумента];
	ДокументРезультат.Очистить();
	
	ИмяМакета = СписокТаблиц[НомерТаблицы].ИмяМакета;
	Макет = ПолучитьМакет(ИмяМакета);
	
	ПартияМПЗ = Новый Структура("ВидМПЗ, Номенклатура, Партия, ДокументОплаты");
	ПоискПартии = Новый Структура("ВидМПЗ, Номенклатура, Партия, ДокументОплаты");
	
	// Печать заголовка
	ЗаголовокОтчета = Макет.ПолучитьОбласть("Заголовок");
	ЗаголовокОтчета.Параметры.ОписаниеПериода = ОписаниеПериода(Истина);
	ЗаголовокОтчета.Параметры.ТекстЗаголовка = СписокТаблиц[НомерТаблицы].НаименованиеПолное;
	ДокументРезультат.Вывести(ЗаголовокОтчета);
	
	Если ЗначениеЗаполнено(ВидДеятельности) Тогда
		Область = Макет.ПолучитьОбласть("Фильтр");
		Область.Параметры.ТекстФильтра = "Вид деятельности: " + ВидДеятельности.НаименованиеПолное;
		ДокументРезультат.Вывести(Область);
	КонецЕсли;
	
	ЗаголовокОтчета = Макет.ПолучитьОбласть("Шапка");
	ЗаголовокОтчета.Параметры.НомерТаблицы = СписокТаблиц[НомерТаблицы].ЗаголовокТаблицы;
	ДокументРезультат.Вывести(ЗаголовокОтчета);
	
	НПП = 1;
	ПервоначальнаяСтоимостьВсего = 0;
	
	ВыборкаОС = ИсторияНачисленияАмортизации();
	ЕстьИтоги = Ложь;
		
	ОБЩ = ЗапросОС.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "МетодНачисленияАмортизации");
	Пока ОБЩ.Следующий() Цикл
		Если ОБЩ.МетодНачисленияАмортизации = Перечисления.МетодыНачисленияАмортизации.ПоЕНАОФ Тогда
			ЕстьИтоги = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ЕстьИтоги Тогда
		Выборка = ОБЩ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ОС");
		Пока Выборка.Следующий() Цикл
			
			Если (Выборка.АмортизацияПредыдущихПериодов + Выборка.СуммаАмортизации + Выборка.СуммаАмортизацииУскоренная) = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Область1 = Макет.ПолучитьОбласть("Строка");
			Область1.Параметры.Заполнить(Выборка);
			Область1.Параметры.НПП = НПП;
			Область1.Параметры.ОстаточнаяСтоимостьНач = МАКС(Выборка.ПервоначальнаяСтоимость - Выборка.АмортизацияПредыдущихПериодовВсего, 0);
			Область1.Параметры.ОстаточнаяСтоимость = МАКС(Выборка.ПервоначальнаяСтоимость - Выборка.АмортизацияПредыдущихПериодовВсего - Выборка.СуммаАмортизацииВсего - Выборка.СуммаАмортизацииУскореннаяВсего, 0);
			Область1.Параметры.МесяцыСписания = МесяцыНачисленияАмортизации(Выборка, ВыборкаОС);
			
			Если ЗначениеЗаполнено(Выборка.СобытиеВыбытия) Тогда
				Область1.Параметры.ОснованиеВыбытия = СокрЛП(Выборка.НазваниеДокументаВыбытия) + " № " + СокрЛП(Выборка.НомерДокументаВыбытия);
			КонецЕсли;
			
			ВыборкаДок = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ДокументОплаты");
			Если ВыборкаДок.Следующий() Тогда
				ПартияМПЗ.ВидМПЗ = Перечисления.ВидыМПЗ.ОС;
				ПартияМПЗ.Номенклатура = ВыборкаДок.ОС;
				ПартияМПЗ.Партия = ВыборкаДок.Партия;
				ПартияМПЗ.ДокументОплаты = ВыборкаДок.ДокументОплаты;
				РеквизитыПартии = ЗаполнениеРеквизитовПартии(ПартияМПЗ, ЦеныМПЗ, ПоискПартии);
				
				Область1.Параметры.ДокументОплаты = ВыборкаДок.ДокументОплаты;
				Область1.Параметры.РеквизитыДокументаОплаты = РеквизитыПартии.РеквизитыДокументаОплаты;
			КонецЕсли;
			
			ДокументРезультат.Вывести(Область1);
			
			НПП = НПП + 1;
			ПервоначальнаяСтоимостьВсего = ПервоначальнаяСтоимостьВсего + Выборка.ПервоначальнаяСтоимость;
			
		КонецЦикла;
	КонецЕсли;
	
	Область1 = Макет.ПолучитьОбласть("Год");
	
	Если ЕстьИтоги Тогда
		Область1.Параметры.Заполнить(ОБЩ);
		Область1.Параметры.ОстаточнаяСтоимостьНач = МАКС(ПервоначальнаяСтоимостьВсего - ОБЩ.АмортизацияПредыдущихПериодовВсего, 0);
		Область1.Параметры.ОстаточнаяСтоимость = МАКС(ПервоначальнаяСтоимостьВсего - ОБЩ.АмортизацияПредыдущихПериодовВсего - ОБЩ.СуммаАмортизацииВсего - ОБЩ.СуммаАмортизацииУскореннаяВсего, 0);
		Область1.Параметры.ПервоначальнаяСтоимость = ПервоначальнаяСтоимостьВсего;
		
		ПоследняяСтрока = ДокументРезультат.Область(ДокументРезультат.ВысотаТаблицы,, ДокументРезультат.ВысотаТаблицы,);
		ПоследняяСтрока.ВместеСоСледующим = Истина;
	КонецЕсли;
	
	ДокументРезультат.Вывести(Область1);
	ДокументРезультат.ТолькоПросмотр = Истина;
	
	ВысотаШапки = ?(ЗначениеЗаполнено(ВидДеятельности), 9, 8);
	ДокументРезультат.ПовторятьПриПечатиСтроки = ДокументРезультат.Область(ВысотаШапки,, ВысотаШапки,);
	ДокументРезультат.ОбластьПечати = ДокументРезультат.Область(2, 2, ДокументРезультат.ВысотаТаблицы, ДокументРезультат.ШиринаТаблицы);
	
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;	
	ДокументРезультат.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КУДиР_ИП_Таблица_22";
	
КонецПроцедуры

Процедура ФормированиеТаблицы41(Таблица)
	
	НомерТаблицы = Таблица.НомерСтроки - 1;
		
	ДокументРезультат = ЭлементыФормы[СписокТаблиц[НомерТаблицы].ИмяДокумента];
	ДокументРезультат.Очистить();
	
	ИмяМакета = СписокТаблиц[НомерТаблицы].ИмяМакета;
	Макет = ПолучитьМакет(ИмяМакета);
	
	ПартияМПЗ = Новый Структура("ВидМПЗ, Номенклатура, Партия, ДокументОплаты");
	ПоискПартии = Новый Структура("ВидМПЗ, Номенклатура, Партия, ДокументОплаты");
	
	// Печать заголовка
	ЗаголовокОтчета = Макет.ПолучитьОбласть("Заголовок");
	ЗаголовокОтчета.Параметры.ОписаниеПериода = ОписаниеПериода(Истина);
	ЗаголовокОтчета.Параметры.ТекстЗаголовка = СписокТаблиц[НомерТаблицы].НаименованиеПолное;
	ДокументРезультат.Вывести(ЗаголовокОтчета);
	
	Если ЗначениеЗаполнено(ВидДеятельности) Тогда
		Область = Макет.ПолучитьОбласть("Фильтр");
		Область.Параметры.ТекстФильтра = "Вид деятельности: " + ВидДеятельности.НаименованиеПолное;
		ДокументРезультат.Вывести(Область);
	КонецЕсли;
	
	ЗаголовокОтчета = Макет.ПолучитьОбласть("Шапка");
	ЗаголовокОтчета.Параметры.НомерТаблицы = СписокТаблиц[НомерТаблицы].ЗаголовокТаблицы;
	ДокументРезультат.Вывести(ЗаголовокОтчета);
	
	НПП = 1;
	
	ОБЩ = ЗапросНМА.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "До2002");
	ЕстьИтоги = Ложь;
		
	Пока ОБЩ.Следующий() Цикл
		Если ОБЩ.До2002 = 1 Тогда
			ЕстьИтоги = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ЕстьИтоги Тогда
		Выборка = ОБЩ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "НМА");
		Пока Выборка.Следующий() Цикл
			
			Если (Выборка.АмортизацияПредыдущихПериодов + Выборка.СуммаАмортизации) = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Область1 = Макет.ПолучитьОбласть("Строка");
			Область1.Параметры.Заполнить(Выборка);
			Область1.Параметры.НПП = НПП;
			Область1.Параметры.ОстаточнаяСтоимость = МАКС(Выборка.ПервоначальнаяСтоимость - Выборка.АмортизацияПредыдущихПериодовВсего - Выборка.СуммаАмортизацииВсего, 0);
			
			Если Выборка.АмортизацияПредыдущихПериодов <> 0 Тогда
				Область1.Параметры.МесяцыСписания = Формат(Выборка.МесяцНачалаАмортизации, "ДФ=MMMyyyy") + " - " + Формат(НачалоГода(ДатаНач) - 1, "ДФ=MMMyyyy");
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Выборка.СобытиеВыбытия) Тогда
				Область1.Параметры.ОснованиеВыбытия = "Акт № " + СокрЛП(Выборка.СобытиеВыбытия.Номер);
			КонецЕсли;
			
			Область1.Параметры.ДатаПриобретения = Формат(Выборка.ДатаПриобретения, "ДФ=dd.MM.yyyy");
			
			ВыборкаДок = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ДокументОплаты");
			Если ВыборкаДок.Следующий() Тогда
				ПартияМПЗ.ВидМПЗ = Перечисления.ВидыМПЗ.НМА;
				ПартияМПЗ.Номенклатура = ВыборкаДок.НМА;
				ПартияМПЗ.Партия = ВыборкаДок.Партия;
				ПартияМПЗ.ДокументОплаты = ВыборкаДок.ДокументОплаты;
				РеквизитыПартии = ЗаполнениеРеквизитовПартии(ПартияМПЗ, ЦеныМПЗ, ПоискПартии);
				
				Область1.Параметры.ДокументОплаты = ВыборкаДок.ДокументОплаты;
				Область1.Параметры.ДатаПриобретения = Область1.Параметры.ДатаПриобретения + ", " + РеквизитыПартии.РеквизитыДокументаОплаты;
			КонецЕсли;
		
			ДокументРезультат.Вывести(Область1);
			
			НПП = НПП + 1;
			
		КонецЦикла;
	КонецЕсли;
	
	Область1 = Макет.ПолучитьОбласть("Год");
	
	Если ЕстьИтоги Тогда
		Область1.Параметры.Заполнить(ОБЩ);
		Область1.Параметры.ОстаточнаяСтоимость = МАКС(ОБЩ.ПервоначальнаяСтоимость - ОБЩ.АмортизацияПредыдущихПериодовВсего - ОБЩ.СуммаАмортизацииВсего, 0);
		
		ПоследняяСтрока = ДокументРезультат.Область(ДокументРезультат.ВысотаТаблицы,, ДокументРезультат.ВысотаТаблицы,);
		ПоследняяСтрока.ВместеСоСледующим = Истина;
	КонецЕсли;
	
	ДокументРезультат.Вывести(Область1);
	ПоследняяСтрока = ДокументРезультат.Область(ДокументРезультат.ВысотаТаблицы - 1,, ДокументРезультат.ВысотаТаблицы - 1,);
	ПоследняяСтрока.ВместеСоСледующим = Истина;
		
	ДокументРезультат.ТолькоПросмотр = Истина;
	
	ВысотаШапки = ?(ЗначениеЗаполнено(ВидДеятельности), 8, 7);
	ДокументРезультат.ПовторятьПриПечатиСтроки = ДокументРезультат.Область(ВысотаШапки,, ВысотаШапки,);
	ДокументРезультат.ОбластьПечати = ДокументРезультат.Область(2, 2, ДокументРезультат.ВысотаТаблицы, ДокументРезультат.ШиринаТаблицы);
	
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;	
	ДокументРезультат.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КУДиР_ИП_Таблица_41";
	
КонецПроцедуры

Процедура ФормированиеТаблицы42(Таблица)
	
	НомерТаблицы = Таблица.НомерСтроки - 1;
		
	ДокументРезультат = ЭлементыФормы[СписокТаблиц[НомерТаблицы].ИмяДокумента];
	ДокументРезультат.Очистить();
	
	ИмяМакета = СписокТаблиц[НомерТаблицы].ИмяМакета;
	Макет = ПолучитьМакет(ИмяМакета);
	
	ПартияМПЗ = Новый Структура("ВидМПЗ, Номенклатура, Партия, ДокументОплаты");
	ПоискПартии = Новый Структура("ВидМПЗ, Номенклатура, Партия, ДокументОплаты");
	
	// Печать заголовка
	ЗаголовокОтчета = Макет.ПолучитьОбласть("Заголовок");
	ЗаголовокОтчета.Параметры.ОписаниеПериода = ОписаниеПериода(Истина);
	ЗаголовокОтчета.Параметры.ТекстЗаголовка = СписокТаблиц[НомерТаблицы].НаименованиеПолное;
	ДокументРезультат.Вывести(ЗаголовокОтчета);
	
	Если ЗначениеЗаполнено(ВидДеятельности) Тогда
		Область = Макет.ПолучитьОбласть("Фильтр");
		Область.Параметры.ТекстФильтра = "Вид деятельности: " + ВидДеятельности.НаименованиеПолное;
		ДокументРезультат.Вывести(Область);	
	КонецЕсли;
	
	ЗаголовокОтчета = Макет.ПолучитьОбласть("Шапка");
	ЗаголовокОтчета.Параметры.НомерТаблицы = СписокТаблиц[НомерТаблицы].ЗаголовокТаблицы;
	ДокументРезультат.Вывести(ЗаголовокОтчета);
	
	НПП = 1;
	
	ОБЩ = ЗапросНМА.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "До2002");
	ЕстьИтоги = Ложь;
		
	Пока ОБЩ.Следующий() Цикл
		Если ОБЩ.До2002 = 2 Тогда
			ЕстьИтоги = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ЕстьИтоги Тогда
		Выборка = ОБЩ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "НМА");
		Пока Выборка.Следующий() Цикл
			
			Если (Выборка.АмортизацияПредыдущихПериодов + Выборка.СуммаАмортизации) = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Область1 = Макет.ПолучитьОбласть("Строка");
			Область1.Параметры.Заполнить(Выборка);
			Область1.Параметры.НПП = НПП;
			Область1.Параметры.ОстаточнаяСтоимость = МАКС(Выборка.ПервоначальнаяСтоимость - Выборка.АмортизацияПредыдущихПериодовВсего - Выборка.СуммаАмортизацииВсего, 0);
			
			Область1.Параметры.ДатаПриобретения = Формат(Выборка.ДатаПриобретения, "ДФ=dd.MM.yyyy");
			
			ВыборкаДок = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ДокументОплаты");
			Если ВыборкаДок.Следующий() Тогда
				ПартияМПЗ.ВидМПЗ = Перечисления.ВидыМПЗ.НМА;
				ПартияМПЗ.Номенклатура = ВыборкаДок.НМА;
				ПартияМПЗ.Партия = ВыборкаДок.Партия;
				ПартияМПЗ.ДокументОплаты = ВыборкаДок.ДокументОплаты;
				РеквизитыПартии = ЗаполнениеРеквизитовПартии(ПартияМПЗ, ЦеныМПЗ, ПоискПартии);
				
				Область1.Параметры.ДокументОплаты = ВыборкаДок.ДокументОплаты;
				Область1.Параметры.ДатаПриобретения = Область1.Параметры.ДатаПриобретения + ", " + РеквизитыПартии.РеквизитыДокументаОплаты;
			КонецЕсли;
			
			ДокументРезультат.Вывести(Область1);
			
			НПП = НПП + 1;
			
		КонецЦикла;
	КонецЕсли;
	
	Область1 = Макет.ПолучитьОбласть("Год");
	
	Если ЕстьИтоги Тогда
		Область1.Параметры.Заполнить(ОБЩ);
		Область1.Параметры.ОстаточнаяСтоимость = МАКС(ОБЩ.ПервоначальнаяСтоимость - ОБЩ.АмортизацияПредыдущихПериодовВсего - ОБЩ.СуммаАмортизацииВсего, 0);
		
		ПоследняяСтрока = ДокументРезультат.Область(ДокументРезультат.ВысотаТаблицы,, ДокументРезультат.ВысотаТаблицы,);
		ПоследняяСтрока.ВместеСоСледующим = Истина;
	КонецЕсли;
	
	ДокументРезультат.Вывести(Область1);
	
	ДокументРезультат.ТолькоПросмотр = Истина;
	
	ВысотаШапки = ?(ЗначениеЗаполнено(ВидДеятельности), 8, 7);
	ДокументРезультат.ПовторятьПриПечатиСтроки = ДокументРезультат.Область(ВысотаШапки,, ВысотаШапки,);
	ДокументРезультат.ОбластьПечати = ДокументРезультат.Область(2, 2, ДокументРезультат.ВысотаТаблицы, ДокументРезультат.ШиринаТаблицы);
	
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;	
	ДокументРезультат.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КУДиР_ИП_Таблица_42";
	
КонецПроцедуры

Процедура ФормированиеТаблицы5(Таблица)
	
	НомерТаблицы = Таблица.НомерСтроки - 1;
	НПП = 1;
	
	ТаблицаОплатыТруда = Зарплата.Выгрузить();
		
	ДокументРезультат = ЭлементыФормы[СписокТаблиц[НомерТаблицы].ИмяДокумента];
	ДокументРезультат.Очистить();
	
	ИмяМакета = СписокТаблиц[НомерТаблицы].ИмяМакета;
	Макет = ПолучитьМакет(ИмяМакета);
	
	ВыбМесяц = Зарплата.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Месяц");
	Пока ВыбМесяц.Следующий() Цикл
		
		Если ВыбМесяц.Месяц < Месяц(ДатаНач) Тогда
			Продолжить;
		КонецЕсли;
		
		ДатаНачМесяца = НачалоМесяца(Дата(Год(ДатаНач), ВыбМесяц.Месяц, 1));
		ДатаКонМесяца = КонецМесяца(Дата(Год(ДатаНач), ВыбМесяц.Месяц, 1));
		
		Если ДатаНач < ДатаНачМесяца Тогда
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		// Печать заголовка
		ЗаголовокОтчета = Макет.ПолучитьОбласть("Заголовок");
		ЗаголовокОтчета.Параметры.ОписаниеПериода = "за " + НРег(ПредставлениеПериода(ДатаНачМесяца, ДатаКонМесяца, "ФП = Истина"));
		ЗаголовокОтчета.Параметры.ТекстЗаголовка = СписокТаблиц[НомерТаблицы].НаименованиеПолное;
		ДокументРезультат.Вывести(ЗаголовокОтчета);
		
		Если ЗначениеЗаполнено(ВидДеятельности) Тогда
			Область = Макет.ПолучитьОбласть("Фильтр");
			Область.Параметры.ТекстФильтра = "Вид деятельности: " + ВидДеятельности.НаименованиеПолное;
			ДокументРезультат.Вывести(Область);	
		КонецЕсли;
		
		НомГрафы = 5;
		НомерГрафыОтчета = 4;
		НПП = 1;
		
		ЗаголовокОтчета = Макет.ПолучитьОбласть("Шапка|Общее");
		ДокументРезультат.Вывести(ЗаголовокОтчета);
		
		ВыбВидНачисления = Зарплата.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидНачисленияУдержания", "Все");
		Пока ВыбВидНачисления.Следующий() Цикл
			Если ВыбВидНачисления.ВидНачисленияУдержания = Перечисления.ИПВидыНачисленийУдержаний.НачисленоДругое
				ИЛИ ВыбВидНачисления.ВидНачисленияУдержания = Перечисления.ИПВидыНачисленийУдержаний.НачисленоНатуральныйДоход 
				ИЛИ ВыбВидНачисления.ВидНачисленияУдержания = Перечисления.ИПВидыНачисленийУдержаний.НачисленоПовременно
				ИЛИ ВыбВидНачисления.ВидНачисленияУдержания = Перечисления.ИПВидыНачисленийУдержаний.НачисленоСдельно Тогда
				
				ЗаголовокОтчета = Макет.ПолучитьОбласть("Шапка|Начислено");
				ЗаголовокОтчета.Параметры.ВидНачисленияУдержания = ВыбВидНачисления.ВидНачисленияУдержания;
				ЗаголовокОтчета.Параметры.НомГрафы = НомерГрафыОтчета;
				ДокументРезультат.Присоединить(ЗаголовокОтчета);
				
				НомГрафы = НомГрафы + 1;
				НомерГрафыОтчета = НомерГрафыОтчета + 1;
			КонецЕсли;
		КонецЦикла;
		
		НомГрВсегоНачислено = НомГрафы;
		НомГрВсегоНачисленоОтчета = НомерГрафыОтчета;
		НомерГрафыОтчета = НомерГрафыОтчета + 1;
		НомГрафы = НомГрафы + 1;
		
		ЗаголовокОтчета = Макет.ПолучитьОбласть("Шапка|Начислено");
		ЗаголовокОтчета.Параметры.ВидНачисленияУдержания = "Всего";
		ЗаголовокОтчета.Параметры.НомГрафы = НомГрВсегоНачисленоОтчета;
		ДокументРезультат.Присоединить(ЗаголовокОтчета);
		
		ВыбВидНачисления = Зарплата.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидНачисленияУдержания", "Все");
		Пока ВыбВидНачисления.Следующий() Цикл
			Если ВыбВидНачисления.ВидНачисленияУдержания = Перечисления.ИПВидыНачисленийУдержаний.УдержаноДругое
				ИЛИ ВыбВидНачисления.ВидНачисленияУдержания = Перечисления.ИПВидыНачисленийУдержаний.УдержаноИсполнительныйЛист
				ИЛИ ВыбВидНачисления.ВидНачисленияУдержания = Перечисления.ИПВидыНачисленийУдержаний.УдержаноНДФЛ Тогда
				
				ЗаголовокОтчета = Макет.ПолучитьОбласть("Шапка|Удержано");
				ЗаголовокОтчета.Параметры.ВидНачисленияУдержания = ВыбВидНачисления.ВидНачисленияУдержания;
				ЗаголовокОтчета.Параметры.НомГрафы = НомерГрафыОтчета;
				ДокументРезультат.Присоединить(ЗаголовокОтчета);
				
				НомГрафы = НомГрафы + 1;
				НомерГрафыОтчета = НомерГрафыОтчета + 1;
			КонецЕсли;
		КонецЦикла;
		
		НомГрВсегоУдержано = НомГрафы;
		НомГрВсегоУдержаноОтчета = НомерГрафыОтчета;
		
		ЗаголовокОтчета = Макет.ПолучитьОбласть("Шапка|Удержано");
		ЗаголовокОтчета.Параметры.ВидНачисленияУдержания = "Всего";
		ЗаголовокОтчета.Параметры.НомГрафы = НомГрВсегоУдержаноОтчета;
		ДокументРезультат.Присоединить(ЗаголовокОтчета);
		
		ЗаголовокОтчета = Макет.ПолучитьОбласть("Шапка|КВыплате");
		ЗаголовокОтчета.Параметры.КВыплате = "Сумма к выплате (гр." +  НомГрВсегоНачисленоОтчета + " - гр." + НомГрВсегоУдержаноОтчета + ") (руб.)";
		ЗаголовокОтчета.Параметры.НомерТаблицы = СписокТаблиц[НомерТаблицы].ЗаголовокТаблицы;
		ЗаголовокОтчета.Параметры.НомГрафы1 = НомГрВсегоУдержаноОтчета + 1;
		ЗаголовокОтчета.Параметры.НомГрафы2 = НомГрВсегоУдержаноОтчета + 2;
		ЗаголовокОтчета.Параметры.НомГрафы3 = НомГрВсегоУдержаноОтчета + 3;
		ДокументРезультат.Присоединить(ЗаголовокОтчета);
		
		
		Область4 = ДокументРезультат.Область(ДокументРезультат.ВысотаТаблицы - 2, 5, ДокументРезультат.ВысотаТаблицы - 2, НомГрВсегоНачислено);
		Область4.Объединить();
		
		Область4 = ДокументРезультат.Область(ДокументРезультат.ВысотаТаблицы - 2, НомГрВсегоНачислено + 1, ДокументРезультат.ВысотаТаблицы - 2, НомГрВсегоУдержано);
		Область4.Объединить();
		
		ВыбФизЛицо = ВыбМесяц.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ФизЛицо");
		Пока ВыбФизЛицо.Следующий() Цикл
	
			Область1 = Макет.ПолучитьОбласть("Работник|Общее");
			Область1.Параметры.Заполнить(ВыбФизЛицо);
			Область1.Параметры.НПП = НПП;
			
			УдЛичности = ?(НЕ ЗначениеЗаполнено(ВыбФизЛицо.Вид),"","" + ВыбФизЛицо.Вид + ", ") 
				+ ?(НЕ ЗначениеЗаполнено(ВыбФизЛицо.Серия),"","" + "Серия: "   + СокрЛП(ВыбФизЛицо.Серия))
				+ ?(НЕ ЗначениеЗаполнено(ВыбФизЛицо.Номер),"","" + ", № " + СокрЛП(ВыбФизЛицо.Номер))
				+ ?(НЕ ЗначениеЗаполнено(ВыбФизЛицо.ДатаВыдачи),"","" + ", выдан " + Формат(ВыбФизЛицо.ДатаВыдачи, "ДФ=dd.MM.yyyy"));
			
			Область1.Параметры.ФизЛицоПредставление = ВыбФизЛицо.ФизЛицоПредставление +  ?(НЕ ЗначениеЗаполнено(УдЛичности), "", "
																											|" + УдЛичности);
			
			ДокументРезультат.Вывести(Область1);
			
			НПП = НПП + 1;
			
			ВсегоНачислено = 0;
			ВыбВидНачисления = ВыбФизЛицо.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидНачисленияУдержания", "Все");
			Пока ВыбВидНачисления.Следующий() Цикл
				Если ВыбВидНачисления.ВидНачисленияУдержания = Перечисления.ИПВидыНачисленийУдержаний.НачисленоДругое
					ИЛИ ВыбВидНачисления.ВидНачисленияУдержания = Перечисления.ИПВидыНачисленийУдержаний.НачисленоНатуральныйДоход 
					ИЛИ ВыбВидНачисления.ВидНачисленияУдержания = Перечисления.ИПВидыНачисленийУдержаний.НачисленоПовременно
					ИЛИ ВыбВидНачисления.ВидНачисленияУдержания = Перечисления.ИПВидыНачисленийУдержаний.НачисленоСдельно Тогда
					
					Область1 = Макет.ПолучитьОбласть("Работник|Начислено");
					Область1.Параметры.Заполнить(ВыбВидНачисления);
					ДокументРезультат.Присоединить(Область1);
					
					ВсегоНачислено = ВсегоНачислено + ?(ВыбВидНачисления.Сумма = Null, 0, ВыбВидНачисления.Сумма);
				КонецЕсли;
			КонецЦикла;
			
			Область1 = Макет.ПолучитьОбласть("Работник|Начислено");
			Область1.Параметры.Сумма = ВсегоНачислено;
			ДокументРезультат.Присоединить(Область1);
			
			ВсегоУдержано = 0;
			ВыбВидНачисления = ВыбФизЛицо.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидНачисленияУдержания", "Все");
			Пока ВыбВидНачисления.Следующий() Цикл
				Если ВыбВидНачисления.ВидНачисленияУдержания = Перечисления.ИПВидыНачисленийУдержаний.УдержаноДругое
					ИЛИ ВыбВидНачисления.ВидНачисленияУдержания = Перечисления.ИПВидыНачисленийУдержаний.УдержаноИсполнительныйЛист
					ИЛИ ВыбВидНачисления.ВидНачисленияУдержания = Перечисления.ИПВидыНачисленийУдержаний.УдержаноНДФЛ Тогда
					
					Область1 = Макет.ПолучитьОбласть("Работник|Удержано");
					Область1.Параметры.Заполнить(ВыбВидНачисления);
					ДокументРезультат.Присоединить(Область1);
					
					ВсегоУдержано = ВсегоУдержано + ?(ВыбВидНачисления.Сумма = Null, 0, ВыбВидНачисления.Сумма);
				КонецЕсли;
			КонецЦикла;
			
			Область1 = Макет.ПолучитьОбласть("Работник|Удержано");
			Область1.Параметры.Сумма = ВсегоУдержано;
			ДокументРезультат.Присоединить(Область1);
			
			Область1 = Макет.ПолучитьОбласть("Работник|КВыплате");
			Область1.Параметры.Заполнить(ВыбФизЛицо);
			Область1.Параметры.КВыплате = ВсегоНачислено - ВсегоУдержано;
						
			//Получить период оплаты
			СтруктураОтбора = Новый Структура("ФизЛицо,Месяц");
			ЗаполнитьЗначенияСвойств(СтруктураОтбора, ВыбФизЛицо);			
			ДатаОплаты = "";
			МассивОплатыТруда = ТаблицаОплатыТруда.НайтиСтроки(СтруктураОтбора);
			Для Каждого ЗаписьМассива ИЗ МассивОплатыТруда Цикл
				ДокументОплаты = ЗаписьМассива.ДатаОплаты;
				Если ЗначениеЗаполнено(ДокументОплаты) Тогда
					ДатаОплаты = ДатаОплаты + ?(ДатаОплаты = "", "", "; " + Символы.ВК) + Формат(ДокументОплаты.Дата, "ДФ=dd.MM.yyyy") + " г.";
				КонецЕсли;
			КонецЦикла;
			
			Область1.Параметры.ДатаОплаты = ДатаОплаты;
			
			ДокументРезультат.Присоединить(Область1);
			
		КонецЦикла;
		
		Если НПП > 1 Тогда
			ПоследняяСтрока = ДокументРезультат.Область(ДокументРезультат.ВысотаТаблицы,, ДокументРезультат.ВысотаТаблицы,);
			ПоследняяСтрока.ВместеСоСледующим = Истина;
		КонецЕсли;
		
		// Итоги за месяц
		Область1 = Макет.ПолучитьОбласть("Месяц|Общее");
		ДокументРезультат.Вывести(Область1);
		
		ВсегоНачислено = 0;
		ВыбВидНачисления = ВыбМесяц.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидНачисленияУдержания", "Все");
		Пока ВыбВидНачисления.Следующий() Цикл
			Если ВыбВидНачисления.ВидНачисленияУдержания = Перечисления.ИПВидыНачисленийУдержаний.НачисленоДругое
				ИЛИ ВыбВидНачисления.ВидНачисленияУдержания = Перечисления.ИПВидыНачисленийУдержаний.НачисленоНатуральныйДоход 
				ИЛИ ВыбВидНачисления.ВидНачисленияУдержания = Перечисления.ИПВидыНачисленийУдержаний.НачисленоПовременно
				ИЛИ ВыбВидНачисления.ВидНачисленияУдержания = Перечисления.ИПВидыНачисленийУдержаний.НачисленоСдельно Тогда
				
				Область1 = Макет.ПолучитьОбласть("Месяц|Начислено");
				Область1.Параметры.Заполнить(ВыбВидНачисления);
				ДокументРезультат.Присоединить(Область1);
				
				ВсегоНачислено = ВсегоНачислено + ?(ВыбВидНачисления.Сумма = Null, 0, ВыбВидНачисления.Сумма);
			КонецЕсли;
		КонецЦикла;
		
		Область1 = Макет.ПолучитьОбласть("Месяц|Начислено");
		Область1.Параметры.Сумма = ВсегоНачислено;
		ДокументРезультат.Присоединить(Область1);
		
		ВсегоУдержано = 0;
		ВыбВидНачисления = ВыбМесяц.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидНачисленияУдержания", "Все");
		Пока ВыбВидНачисления.Следующий() Цикл
			Если ВыбВидНачисления.ВидНачисленияУдержания = Перечисления.ИПВидыНачисленийУдержаний.УдержаноДругое
				ИЛИ ВыбВидНачисления.ВидНачисленияУдержания = Перечисления.ИПВидыНачисленийУдержаний.УдержаноИсполнительныйЛист
				ИЛИ ВыбВидНачисления.ВидНачисленияУдержания = Перечисления.ИПВидыНачисленийУдержаний.УдержаноНДФЛ Тогда
				
				Область1 = Макет.ПолучитьОбласть("Месяц|Удержано");
				Область1.Параметры.Заполнить(ВыбВидНачисления);
				ДокументРезультат.Присоединить(Область1);
				
				ВсегоУдержано = ВсегоУдержано + ?(ВыбВидНачисления.Сумма = Null, 0, ВыбВидНачисления.Сумма);
			КонецЕсли;
		КонецЦикла;
		
		Область1 = Макет.ПолучитьОбласть("Месяц|Удержано");
		Область1.Параметры.Сумма = ВсегоУдержано;
		ДокументРезультат.Присоединить(Область1);
		
		Область1 = Макет.ПолучитьОбласть("Месяц|КВыплате");
		Область1.Параметры.КВыплате = ВсегоНачислено - ВсегоУдержано;
		ДокументРезультат.Присоединить(Область1);
		
	КонецЦикла;
	
	// Шапка пустого отчета
	Если НПП = 1 Тогда
		ЗаголовокОтчета = Макет.ПолучитьОбласть("Заголовок");
		ЗаголовокОтчета.Параметры.ОписаниеПериода = ОписаниеПериода();
		ЗаголовокОтчета.Параметры.ТекстЗаголовка = СписокТаблиц[НомерТаблицы].НаименованиеПолное;
		ДокументРезультат.Вывести(ЗаголовокОтчета);
		
		Если ЗначениеЗаполнено(ВидДеятельности) Тогда
			Область = Макет.ПолучитьОбласть("Фильтр");
			Область.Параметры.ТекстФильтра = "Вид деятельности: " + ВидДеятельности.НаименованиеПолное;
			ДокументРезультат.Вывести(Область);	
		КонецЕсли;
		
		ЗаголовокОтчета = Макет.ПолучитьОбласть("Шапка|Общее");
		ДокументРезультат.Вывести(ЗаголовокОтчета);
		
		НомГрафы = 5;
		НомерГрафыОтчета = 4;
		ВыбВидНачисления = Зарплата.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидНачисленияУдержания", "Все");
		Пока ВыбВидНачисления.Следующий() Цикл
			Если ВыбВидНачисления.ВидНачисленияУдержания = Перечисления.ИПВидыНачисленийУдержаний.НачисленоДругое
				ИЛИ ВыбВидНачисления.ВидНачисленияУдержания = Перечисления.ИПВидыНачисленийУдержаний.НачисленоНатуральныйДоход 
				ИЛИ ВыбВидНачисления.ВидНачисленияУдержания = Перечисления.ИПВидыНачисленийУдержаний.НачисленоПовременно
				ИЛИ ВыбВидНачисления.ВидНачисленияУдержания = Перечисления.ИПВидыНачисленийУдержаний.НачисленоСдельно Тогда
				
				ЗаголовокОтчета = Макет.ПолучитьОбласть("Шапка|Начислено");
				ЗаголовокОтчета.Параметры.ВидНачисленияУдержания = ВыбВидНачисления.ВидНачисленияУдержания;
				ЗаголовокОтчета.Параметры.НомГрафы = НомерГрафыОтчета;
				ДокументРезультат.Присоединить(ЗаголовокОтчета);
				
				НомГрафы = НомГрафы + 1;
				НомерГрафыОтчета = НомерГрафыОтчета + 1;
			КонецЕсли;
		КонецЦикла;
		
		НомГрВсегоНачислено = НомГрафы;
		НомГрВсегоНачисленоОтчета = НомерГрафыОтчета;
		НомерГрафыОтчета = НомерГрафыОтчета + 1;
		НомГрафы = НомГрафы + 1;
		
		ЗаголовокОтчета = Макет.ПолучитьОбласть("Шапка|Начислено");
		ЗаголовокОтчета.Параметры.ВидНачисленияУдержания = "Всего";
		ЗаголовокОтчета.Параметры.НомГрафы = НомГрВсегоНачисленоОтчета;
		ДокументРезультат.Присоединить(ЗаголовокОтчета);
		
		ВыбВидНачисления = Зарплата.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидНачисленияУдержания", "Все");
		Пока ВыбВидНачисления.Следующий() Цикл
			Если ВыбВидНачисления.ВидНачисленияУдержания = Перечисления.ИПВидыНачисленийУдержаний.УдержаноДругое
				ИЛИ ВыбВидНачисления.ВидНачисленияУдержания = Перечисления.ИПВидыНачисленийУдержаний.УдержаноИсполнительныйЛист
				ИЛИ ВыбВидНачисления.ВидНачисленияУдержания = Перечисления.ИПВидыНачисленийУдержаний.УдержаноНДФЛ Тогда
				
				ЗаголовокОтчета = Макет.ПолучитьОбласть("Шапка|Удержано");
				ЗаголовокОтчета.Параметры.ВидНачисленияУдержания = ВыбВидНачисления.ВидНачисленияУдержания;
				ЗаголовокОтчета.Параметры.НомГрафы = НомерГрафыОтчета;
				ДокументРезультат.Присоединить(ЗаголовокОтчета);
				
				НомГрафы = НомГрафы + 1;
				НомерГрафыОтчета = НомерГрафыОтчета + 1;
			КонецЕсли;
		КонецЦикла;
		
		НомГрВсегоУдержано = НомГрафы;
		НомГрВсегоУдержаноОтчета = НомерГрафыОтчета;
		
		ЗаголовокОтчета = Макет.ПолучитьОбласть("Шапка|Удержано");
		ЗаголовокОтчета.Параметры.ВидНачисленияУдержания = "Всего";
		ЗаголовокОтчета.Параметры.НомГрафы = НомГрВсегоУдержаноОтчета;
		ДокументРезультат.Присоединить(ЗаголовокОтчета);
		
		ЗаголовокОтчета = Макет.ПолучитьОбласть("Шапка|КВыплате");
		ЗаголовокОтчета.Параметры.КВыплате = "Сумма к выплате (гр." +  НомГрВсегоНачисленоОтчета + " - гр." + НомГрВсегоУдержаноОтчета + ") (руб.)";
		ЗаголовокОтчета.Параметры.НомерТаблицы = СписокТаблиц[НомерТаблицы].ЗаголовокТаблицы;
		ЗаголовокОтчета.Параметры.НомГрафы1 = НомГрВсегоУдержаноОтчета + 1;
		ЗаголовокОтчета.Параметры.НомГрафы2 = НомГрВсегоУдержаноОтчета + 2;
		ЗаголовокОтчета.Параметры.НомГрафы3 = НомГрВсегоУдержаноОтчета + 3;
		ДокументРезультат.Присоединить(ЗаголовокОтчета);
		
		Область4 = ДокументРезультат.Область(ДокументРезультат.ВысотаТаблицы - 2, 5, ДокументРезультат.ВысотаТаблицы - 2, НомГрВсегоНачислено);
		Область4.Объединить();
		
		Область4 = ДокументРезультат.Область(ДокументРезультат.ВысотаТаблицы - 2, НомГрВсегоНачислено + 1, ДокументРезультат.ВысотаТаблицы - 2, НомГрВсегоУдержано);
		Область4.Объединить();
		
	КонецЕсли;
	
	Если НПП > 1 Тогда
		ПоследняяСтрока = ДокументРезультат.Область(ДокументРезультат.ВысотаТаблицы,, ДокументРезультат.ВысотаТаблицы,);
		ПоследняяСтрока.ВместеСоСледующим = Истина;
	КонецЕсли;
	
	// Итоги за год
	Область1 = Макет.ПолучитьОбласть("Год|Общее");
	ДокументРезультат.Вывести(Область1);
	
	ВсегоНачислено = 0;
	ВыбВидНачисления = Зарплата.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидНачисленияУдержания", "Все");
	Пока ВыбВидНачисления.Следующий() Цикл
		Если ВыбВидНачисления.ВидНачисленияУдержания = Перечисления.ИПВидыНачисленийУдержаний.НачисленоДругое
			ИЛИ ВыбВидНачисления.ВидНачисленияУдержания = Перечисления.ИПВидыНачисленийУдержаний.НачисленоНатуральныйДоход 
			ИЛИ ВыбВидНачисления.ВидНачисленияУдержания = Перечисления.ИПВидыНачисленийУдержаний.НачисленоПовременно
			ИЛИ ВыбВидНачисления.ВидНачисленияУдержания = Перечисления.ИПВидыНачисленийУдержаний.НачисленоСдельно Тогда
			
			Область1 = Макет.ПолучитьОбласть("Год|Начислено");
			Область1.Параметры.Заполнить(ВыбВидНачисления);
			ДокументРезультат.Присоединить(Область1);
			
			ВсегоНачислено = ВсегоНачислено + ?(ВыбВидНачисления.Сумма = Null, 0, ВыбВидНачисления.Сумма);
		КонецЕсли;
	КонецЦикла;
	
	Область1 = Макет.ПолучитьОбласть("Год|Начислено");
	Область1.Параметры.Сумма = ВсегоНачислено;
	ДокументРезультат.Присоединить(Область1);
	
	ВсегоУдержано = 0;
	ВыбВидНачисления = Зарплата.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидНачисленияУдержания", "Все");
	Пока ВыбВидНачисления.Следующий() Цикл
		Если ВыбВидНачисления.ВидНачисленияУдержания = Перечисления.ИПВидыНачисленийУдержаний.УдержаноДругое
			ИЛИ ВыбВидНачисления.ВидНачисленияУдержания = Перечисления.ИПВидыНачисленийУдержаний.УдержаноИсполнительныйЛист
			ИЛИ ВыбВидНачисления.ВидНачисленияУдержания = Перечисления.ИПВидыНачисленийУдержаний.УдержаноНДФЛ Тогда
			
			Область1 = Макет.ПолучитьОбласть("Год|Удержано");
			Область1.Параметры.Заполнить(ВыбВидНачисления);
			ДокументРезультат.Присоединить(Область1);
			
			ВсегоУдержано = ВсегоУдержано + ?(ВыбВидНачисления.Сумма = Null, 0, ВыбВидНачисления.Сумма);
		КонецЕсли;
	КонецЦикла;
	
	Область1 = Макет.ПолучитьОбласть("Год|Удержано");
	Область1.Параметры.Сумма = ВсегоУдержано;
	ДокументРезультат.Присоединить(Область1);
	
	Область1 = Макет.ПолучитьОбласть("Год|КВыплате");
	Область1.Параметры.КВыплате = ВсегоНачислено - ВсегоУдержано;
	ДокументРезультат.Присоединить(Область1);
	
	ДокументРезультат.ТолькоПросмотр = Истина;
	
	ВысотаШапки = ?(ЗначениеЗаполнено(ВидДеятельности), 8, 7);
	ДокументРезультат.ПовторятьПриПечатиСтроки = ДокументРезультат.Область(ВысотаШапки,, ВысотаШапки,);
	ДокументРезультат.ОбластьПечати = ДокументРезультат.Область(2, 2, ДокументРезультат.ВысотаТаблицы, ДокументРезультат.ШиринаТаблицы);
	
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;	
	ДокументРезультат.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КУДиР_ИП_Таблица_5";
	
КонецПроцедуры

Процедура ФормированиеТаблицы61(Таблица, ДляПризнанияРасходовНеТребуетсяПолучениеДохода)
	
	НомерТаблицы = Таблица.НомерСтроки - 1;
			
	Доходы = 0;
	ПрочиеДоходы = 0;
	МатериальныеРасходы = 0;
	Амортизация = 0;
	РасходыНаОплатуТруда = 0;
	ПрочиеРасходы = 0;
	СуммаИМР = 0;
	
	// ИМР
	Если НЕ СформироватьПоДоходамРасходам Тогда
		
		Запрос.УстановитьПараметр("ВидДеятельности", ВидДеятельности);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(ИМРОбороты.СуммаРасход + ИМРОбороты.НДСРасход, 0) КАК СуммаРасходСНДС,
		|	ЕСТЬNULL(ИМРОбороты.СуммаРасход, 0) КАК СуммаРасход,
		|	ЕСТЬNULL(ИМРОбороты.НДСРасход, 0) КАК НДСРасход
		|ИЗ
		|	РегистрНакопления.ИПИныеМатериальныеРасходы.Обороты(
		|			&ДатаНачГода,
		|			&ДатаКон,
		|			,
		|			Организация = &Организация
		|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО
		|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
		|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)) КАК ИМРОбороты
		|ИТОГИ
		|	СУММА(СуммаРасходСНДС),
		|	СУММА(СуммаРасход),
		|	СУММА(НДСРасход)
		|ПО
		|	ОБЩИЕ";
		
		Общ = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ОБЩИЕ");
		
		Если Общ.Следующий() Тогда
			СуммаИМР = ?(ОблагаетсяНДС, Общ.СуммаРасход, Общ.СуммаРасходСНДС);
		КонецЕсли;
	КонецЕсли;
	
	// Доходы и материальные расходы
	Если СформироватьПоДоходамРасходам Тогда // есть таблица 1-7
		Общ = ДоходыИРасходыСводно.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ОБЩИЕ");
		Если Общ.Следующий() Тогда
			Доходы = ?(ОблагаетсяНДС, Общ.ВыручкаБезНДС, Общ.Выручка);
			МатериальныеРасходы = Доходы - ?(ОблагаетсяНДС, Общ.Результат, Общ.РезультатНеОблагаемыйНДС);
		КонецЕсли;
		
	ИначеЕсли СформироватьПоОтгруженным Тогда // есть только 1-6
		Общ = ДоходыИРасходы.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ОБЩИЕ");
		Если Общ.Следующий() Тогда
			Доходы = ?(ОблагаетсяНДС, Общ.ВыручкаБезНДС, Общ.Выручка);
			МатериальныеРасходы = Доходы - ?(ОблагаетсяНДС, Общ.Результат, Общ.РезультатНеОблагаемыйНДС);
		КонецЕсли;
		
		МатериальныеРасходы = МатериальныеРасходы + СуммаИМР;
		
	Иначе // материальные расходы надо искать по отгруженным МПЗ
		Если ДляПризнанияРасходовНеТребуетсяПолучениеДохода Тогда
			Запрос.Текст = ТекстЗапросаПоМатериальнымРасходам();
		Иначе
			Запрос.Текст = ТекстЗапросаПоМатериальнымРасходамТребуютсяДоходы();
		КонецЕсли;
		
		Общ = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ОБЩИЕ");
		
		Если Общ.Следующий() Тогда
			МатериальныеРасходы = ?(ОблагаетсяНДС, Общ.Сумма, Общ.СуммаСНДС);
		КонецЕсли;
		
		МатериальныеРасходы = МатериальныеРасходы + СуммаИМР;
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(ИПДоходыОбороты.ВыручкаОборот - ИПДоходыОбороты.НДСНачисленныйОборот, 0) КАК Доход
		|ИЗ
		|	РегистрНакопления.ИПДоходы.Обороты(
		|			&ДатаНачГода,
		|			&ДатаКон,
		|			,
		|			Организация = &Организация
		|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
		|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
		|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО) КАК ИПДоходыОбороты
		|ИТОГИ
		|	СУММА(Доход)
		|ПО
		|	ОБЩИЕ";
		
		Общ = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ОБЩИЕ");
		
		Если Общ.Следующий() Тогда
			Доходы = Доходы + Общ.Доход;
		КонецЕсли;
		
	КонецЕсли;
	
	// Амортизация ОС
	Если СформироватьПоОС1 Тогда
		ОБЩ = ЗапросОС.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "МетодНачисленияАмортизации");
		Пока ОБЩ.Следующий() Цикл
			Амортизация = Амортизация + ОБЩ.СуммаАмортизации + ОБЩ.СуммаАмортизацииУскоренная;
		КонецЦикла;
		
	Иначе
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(ИППрочиеРасходыТекПериод.СуммаОборот, 0) КАК Сумма
		|ИЗ
		|	РегистрНакопления.ИППрочиеРасходы.Обороты(
		|			&ДатаНачГода,
		|			&ДатаКон,
		|			Год,
		|			Организация = &Организация
		|				И СтатьяЗатрат ССЫЛКА Справочник.ОсновныеСредства
		|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
		|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)) КАК ИППрочиеРасходыТекПериод
		|ИТОГИ
		|	СУММА(Сумма)
		|ПО
		|	ОБЩИЕ";
		
		АмортизацияОС = Запрос.Выполнить();
		ОБЩ = АмортизацияОС.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ОБЩИЕ");
		Если ОБЩ.Следующий() Тогда
			Амортизация = Амортизация + ОБЩ.Сумма;
		КонецЕсли;
	КонецЕсли;
	
	// Амортизация НМА
	Если СформироватьПоНМА Тогда
		ОБЩ = ЗапросНМА.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "До2002");
		Пока ОБЩ.Следующий() Цикл
			Амортизация = Амортизация + ОБЩ.СуммаАмортизации;
		КонецЦикла;
		
	Иначе
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(ИППрочиеРасходыТекПериод.СуммаОборот, 0) КАК Сумма
		|ИЗ
		|	РегистрНакопления.ИППрочиеРасходы.Обороты(
		|			&ДатаНачГода,
		|			&ДатаКон,
		|			Год,
		|			Организация = &Организация
		|				И СтатьяЗатрат ССЫЛКА Справочник.НематериальныеАктивы
		|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
		|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)) КАК ИППрочиеРасходыТекПериод
		|ИТОГИ
		|	СУММА(Сумма)
		|ПО
		|	ОБЩИЕ";
		
		АмортизацияОС = Запрос.Выполнить();
		ОБЩ = АмортизацияОС.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ОБЩИЕ");
		Если ОБЩ.Следующий() Тогда
			Амортизация = Амортизация + ОБЩ.Сумма;
		КонецЕсли;
	КонецЕсли;
	
	// Зарплата
	Если СформироватьПоЗарплате Тогда
		ВыбВидНачисления = Зарплата.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидНачисленияУдержания");
		
	Иначе
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(ИПРасходыНаОплатуТрудаОбороты.СуммаОборот, 0) КАК Сумма,
		|	ИПРасходыНаОплатуТрудаОбороты.ВидНачисленияУдержания КАК ВидНачисленияУдержания
		|ИЗ
		|	РегистрНакопления.ИПРасходыНаОплатуТруда.Обороты(
		|			&ДатаНачГода,
		|			&ДатаКон,
		|			Регистратор,
		|			Организация = &Организация
		|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО
		|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
		|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
		|				И (СтатьяЗатрат ССЫЛКА Справочник.СтатьиЗатрат
		|					ИЛИ СтатьяЗатрат ССЫЛКА Справочник.ПрочиеДоходыИРасходы)
		|				И (СтатьяЗатрат.ПринятиеКналоговомуУчету
		|					ИЛИ СтатьяЗатрат.ВидРасходовНУ <> &ВидНеПринимаемыхРасходов)) КАК ИПРасходыНаОплатуТрудаОбороты
		|ИТОГИ
		|	СУММА(Сумма)
		|ПО
		|	ВидНачисленияУдержания";
		
		ВыбВидНачисления = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидНачисленияУдержания");
	КонецЕсли;
	
	РасходыНаОплатуТруда = 0;
	НомерГрафыРОТ = 4;
	
	Пока ВыбВидНачисления.Следующий() Цикл
		Если ВыбВидНачисления.ВидНачисленияУдержания = Перечисления.ИПВидыНачисленийУдержаний.НачисленоДругое
			ИЛИ ВыбВидНачисления.ВидНачисленияУдержания = Перечисления.ИПВидыНачисленийУдержаний.НачисленоНатуральныйДоход 
			ИЛИ ВыбВидНачисления.ВидНачисленияУдержания = Перечисления.ИПВидыНачисленийУдержаний.НачисленоПовременно
			ИЛИ ВыбВидНачисления.ВидНачисленияУдержания = Перечисления.ИПВидыНачисленийУдержаний.НачисленоСдельно Тогда
			
			РасходыНаОплатуТруда = РасходыНаОплатуТруда + ?(ВыбВидНачисления.Сумма = Null, 0, ВыбВидНачисления.Сумма);
			НомерГрафыРОТ = НомерГрафыРОТ + 1;
		КонецЕсли;
	КонецЦикла;
	
	// Прочие расходы
	Если СформироватьПоПрочимРасходам Тогда
		
		ПрочиеРасходы = ?(НЕ ОблагаетсяНДС, ЗапросПрочиеРасходы.Итог("Сумма") + ЗапросПрочиеРасходы.Итог("НДС"), ЗапросПрочиеРасходы.Итог("Сумма"));
		
	Иначе
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(ИППрочиеРасходыОбороты.СуммаОборот, 0) КАК Сумма,
		|	ЕСТЬNULL(ИППрочиеРасходыОбороты.НДСОборот, 0) КАК НДС
		|ИЗ
		|	РегистрНакопления.ИППрочиеРасходы.Обороты(
		|			&ДатаНачГода,
		|			&ДатаКон,
		|			,
		|			Организация = &Организация
		|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО
		|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
		|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
		|				И (СтатьяЗатрат ССЫЛКА Справочник.СтатьиЗатрат
		|					ИЛИ СтатьяЗатрат ССЫЛКА Справочник.ПрочиеДоходыИРасходы)
		|				И (СтатьяЗатрат.ПринятиеКналоговомуУчету
		|					ИЛИ СтатьяЗатрат.ВидРасходовНУ <> &ВидНеПринимаемыхРасходов)) КАК ИППрочиеРасходыОбороты
		|ИТОГИ
		|	СУММА(Сумма),
		|	СУММА(НДС)
		|ПО
		|	ОБЩИЕ";
		
		Общ = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ОБЩИЕ");
		Если Общ.Следующий() Тогда
			ПрочиеРасходы = ?(НЕ ОблагаетсяНДС, Общ.Сумма + Общ.НДС, Общ.Сумма);
		КонецЕсли;
	КонецЕсли;
	
	// РБП	
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ИПРБПОстаткиИОбороты.СуммаКонечныйОстаток, 0) КАК Сумма,
	|	ЕСТЬNULL(ИПРБПОстаткиИОбороты.НДСКонечныйОстаток, 0) КАК НДС
	|ИЗ
	|	РегистрНакопления.ИПРБП.ОстаткиИОбороты(
	|			&ДатаНачГода,
	|			&ДатаКон,
	|			Период,
	|			,
	|			Организация = &Организация
	|				И ДокументОплаты <> НЕОПРЕДЕЛЕНО
	|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
	|				И (ВидРасхода ССЫЛКА Справочник.РасходыБудущихПериодов
	|					ИЛИ ВидРасхода ССЫЛКА Справочник.ПрочиеДоходыИРасходы
	|						И ВидРасхода.ПринятиеКналоговомуУчету)) КАК ИПРБПОстаткиИОбороты
	|ИТОГИ
	|	СУММА(Сумма),
	|	СУММА(НДС)
	|ПО
	|	ОБЩИЕ";
	
	Общ = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ОБЩИЕ");
	Если Общ.Следующий() Тогда
		РасходыБудущихПериодов = ?(НЕ ОблагаетсяНДС, Общ.Сумма + Общ.НДС, Общ.Сумма);
	КонецЕсли;
	
	//Прочие доходы
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ИППрочиеДоходыОбороты.СуммаОборот, 0) КАК Сумма
	|ИЗ
	|	РегистрНакопления.ИППрочиеДоходы.Обороты(
	|			&ДатаНачГода,
	|			&ДатаКон,
	|			Период,
	|			Организация = &Организация
	|				И ХарактерДеятельности В (&СписокХарактеровДеятельности)
	|				И НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)
	|				И (СтатьяДоходов ССЫЛКА Справочник.ПрочиеДоходыИРасходы
	|					И СтатьяДоходов.ПринятиеКналоговомуУчету)) КАК ИППрочиеДоходыОбороты
	|ИТОГИ
	|	СУММА(Сумма)
	|ПО
	|	ОБЩИЕ";
	
	Общ = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ОБЩИЕ");
	Если Общ.Следующий() Тогда
		ПрочиеДоходы = Общ.Сумма;
	КонецЕсли;
	
	ДокументРезультат = ЭлементыФормы[СписокТаблиц[НомерТаблицы].ИмяДокумента];
	ДокументРезультат.Очистить();
	
	ИмяМакета = СписокТаблиц[НомерТаблицы].ИмяМакета;
	Макет = ПолучитьМакет(ИмяМакета);
	
	// Печать заголовка
	Область = Макет.ПолучитьОбласть("Заголовок");
	Область.Параметры.ТекстЗаголовка = СписокТаблиц[НомерТаблицы].НаименованиеПолное;
	Область.Параметры.ОписаниеПериода = ОписаниеПериода(Истина, Истина);
	ДокументРезультат.Вывести(Область);	
	
	Если ЗначениеЗаполнено(ВидДеятельности) Тогда
		Область = Макет.ПолучитьОбласть("Фильтр");
		Область.Параметры.ТекстФильтра = "Вид деятельности: " + ВидДеятельности.НаименованиеПолное;
		ДокументРезультат.Вывести(Область);	
	КонецЕсли;
	
	Область = Макет.ПолучитьОбласть("Область");
	Область.Параметры.НомерТаблицы = СписокТаблиц[НомерТаблицы].ЗаголовокТаблицы;
	
	Область.Параметры.ПечДата = Формат(ДатаКон, "ДЛФ=DD");
	Область.Параметры.НадписьГрафаТаблицы5 = "3. Расходы на оплату труда (графа " + НомерГрафыРОТ + " таблицы № 5-1)";
	
	Область.Параметры.Доходы = Доходы;
	Область.Параметры.ПрочиеДоходы = ПрочиеДоходы;
	Область.Параметры.РасходыБудущихПериодов = РасходыБудущихПериодов;
	Область.Параметры.МатериальныеРасходы = МатериальныеРасходы;
	Область.Параметры.Амортизация = Амортизация;
	Область.Параметры.РасходыНаОплатуТруда = РасходыНаОплатуТруда;
	Область.Параметры.ПрочиеРасходы = ПрочиеРасходы;
	Область.Параметры.ИтогоДоходов = Доходы + ПрочиеДоходы;
	Область.Параметры.ИтогоРасходов = МатериальныеРасходы + Амортизация + РасходыНаОплатуТруда + ПрочиеРасходы;
	
	ДокументРезультат.Вывести(Область);	
	
	ДокументРезультат.ТолькоПросмотр = Истина;
	
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;	
	ДокументРезультат.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КУДиР_ИП_Таблица_61";
	
КонецПроцедуры

Процедура ФормированиеТаблицы62(Таблица)
	
	НомерТаблицы = Таблица.НомерСтроки - 1;
		
	ДокументРезультат = ЭлементыФормы[СписокТаблиц[НомерТаблицы].ИмяДокумента];
	ДокументРезультат.Очистить();
	
	ИмяМакета = СписокТаблиц[НомерТаблицы].ИмяМакета;
	Макет = ПолучитьМакет(ИмяМакета);
	
	// Печать заголовка
	ЗаголовокОтчета = Макет.ПолучитьОбласть("Заголовок");
	ЗаголовокОтчета.Параметры.ТекстЗаголовка = СписокТаблиц[НомерТаблицы].НаименованиеПолное + " " + ОписаниеПериода(Истина);
	ДокументРезультат.Вывести(ЗаголовокОтчета);
	
	Если ЗначениеЗаполнено(ВидДеятельности) Тогда
		Фильтр = Макет.ПолучитьОбласть("Фильтр");
		Фильтр.Параметры.ТекстФильтра = "Вид деятельности: " + ВидДеятельности.НаименованиеПолное;
		ДокументРезультат.Вывести(Фильтр);
	КонецЕсли;
		
	Шапка = Макет.ПолучитьОбласть("Шапка");
	Шапка.Параметры.НомерТаблицы = СписокТаблиц[НомерТаблицы].ЗаголовокТаблицы;
	ДокументРезультат.Вывести(Шапка);
	
	НПП = 1;
	СуммаЗаПериод = 0;
	
	Для Каждого Выборка Из ЗапросПрочиеРасходы Цикл
		Если ЗначениеЗаполнено(Выборка.Регистратор) Тогда
			Область1 = Макет.ПолучитьОбласть("Строка");
			Область1.Параметры.НПП = НПП;
			Область1.Параметры.СтатьяЗатратПредставление = Выборка.СтатьяЗатратПредставление;
			Область1.Параметры.Сумма = ?(НЕ ОблагаетсяНДС, Выборка.Сумма + Выборка.НДС, Выборка.Сумма);
			
			НомерДокумента = ДоходыИРасходыПредпринимателя.РеквизитыДокументаОплаты(Выборка.ДокументОплаты);

			ДатаРасхода = Формат(Выборка.ДатаРасхода, "ДФ=dd.MM.yyyy");
			
			Область1.Параметры.ДатаРасхода = ДатаРасхода;
			Область1.Параметры.НомерДокумента = НомерДокумента;
			
			Область1.Параметры.Регистратор = Выборка.Регистратор;
			Область1.Параметры.ДокументОплаты = Выборка.ДокументОплаты;
			Область1.Параметры.РасчетныйДокумент = Выборка.РасчетныйДокумент;
			
			ДокументРезультат.Вывести(Область1);
			
			СуммаЗаПериод = СуммаЗаПериод + Область1.Параметры.Сумма;
			НПП = НПП + 1;
		КонецЕсли;
	КонецЦикла;
	
	Если НПП > 1 Тогда
		ПоследняяСтрока = ДокументРезультат.Область(ДокументРезультат.ВысотаТаблицы,, ДокументРезультат.ВысотаТаблицы,);
		ПоследняяСтрока.ВместеСоСледующим = Истина;
	КонецЕсли;
	
	Область1 = Макет.ПолучитьОбласть("ЗаПериод");
	Область1.Параметры.Сумма = СуммаЗаПериод;
	ДокументРезультат.Вывести(Область1);
	
	ПоследняяСтрока = ДокументРезультат.Область(ДокументРезультат.ВысотаТаблицы,, ДокументРезультат.ВысотаТаблицы,);
	ПоследняяСтрока.ВместеСоСледующим = Истина;
	
	Область1 = Макет.ПолучитьОбласть("Год");
	Область1.Параметры.Сумма = ?(НЕ ОблагаетсяНДС, ЗапросПрочиеРасходы.Итог("Сумма") + ЗапросПрочиеРасходы.Итог("НДС"), ЗапросПрочиеРасходы.Итог("Сумма"));
	ДокументРезультат.Вывести(Область1);
	
	ДокументРезультат.ТолькоПросмотр = Истина;
	
	ВысотаШапки = ?(ЗначениеЗаполнено(ВидДеятельности), 6, 5);
	ДокументРезультат.ПовторятьПриПечатиСтроки = ДокументРезультат.Область(ВысотаШапки,, ВысотаШапки,);
	ДокументРезультат.ОбластьПечати = ДокументРезультат.Область(2, 2, ДокументРезультат.ВысотаТаблицы, ДокументРезультат.ШиринаТаблицы);
	
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;	
	ДокументРезультат.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КУДиР_ИП_Таблица_62";
	
КонецПроцедуры

Процедура ФормированиеТаблицы63(Таблица)
	
	НомерТаблицы = Таблица.НомерСтроки - 1;
		
	ДокументРезультат = ЭлементыФормы[СписокТаблиц[НомерТаблицы].ИмяДокумента];
	ДокументРезультат.Очистить();
	
	ИмяМакета = СписокТаблиц[НомерТаблицы].ИмяМакета;
	Макет = ПолучитьМакет(ИмяМакета);
	
	// Печать заголовка
	ЗаголовокОтчета = Макет.ПолучитьОбласть("Заголовок");
	ЗаголовокОтчета.Параметры.ТекстЗаголовка = СписокТаблиц[НомерТаблицы].НаименованиеПолное + " " + ОписаниеПериода(Истина);
	ДокументРезультат.Вывести(ЗаголовокОтчета);
	
	Если ЗначениеЗаполнено(ВидДеятельности) Тогда
		Фильтр = Макет.ПолучитьОбласть("Фильтр");
		Фильтр.Параметры.ТекстФильтра = "Вид деятельности: " + ВидДеятельности.НаименованиеПолное;
		ДокументРезультат.Вывести(Фильтр);
	КонецЕсли;
		
	Шапка = Макет.ПолучитьОбласть("Шапка");
	Шапка.Параметры.НомерТаблицы = СписокТаблиц[НомерТаблицы].ЗаголовокТаблицы;
	ДокументРезультат.Вывести(Шапка);
	
	НПП = 1;
	СуммаЗаПериод = 0;
	СуммаЗаГодРБП = ?(НЕ ОблагаетсяНДС, ЗапросРБП[0].Сумма + ЗапросРБП[0].НДС, ЗапросРБП[0].Сумма);
	
	Для Каждого Выборка Из ЗапросРБП Цикл
		Если ЗапросРБП.Индекс(Выборка) <> 0 Тогда
			Область1 = Макет.ПолучитьОбласть("Строка");
			Область1.Параметры.НПП = НПП;
			Область1.Параметры.ВидРасходаПредставление = Выборка.ВидРасходаПредставление;
			Область1.Параметры.Сумма = ?(НЕ ОблагаетсяНДС, Выборка.Сумма + Выборка.НДС, Выборка.Сумма);
			
			НомерДокумента = Выборка.РеквизитыДокументаОплаты;
			ДатаРасхода = Формат(Выборка.ДатаРасхода, "ДФ=dd.MM.yyyy");
			
			Область1.Параметры.ДатаРасхода = ДатаРасхода;
			Область1.Параметры.НомерДокумента = НомерДокумента;
			
			Область1.Параметры.ДокументОплаты = Выборка.ДокументОплаты;
			Область1.Параметры.РасчетныйДокумент = Выборка.Партия;
			
			ДокументРезультат.Вывести(Область1);
			
			СуммаЗаПериод = СуммаЗаПериод + Область1.Параметры.Сумма;
			НПП = НПП + 1;
		КонецЕсли;
	КонецЦикла;
	
	Если НПП > 1 Тогда
		ПоследняяСтрока = ДокументРезультат.Область(ДокументРезультат.ВысотаТаблицы,, ДокументРезультат.ВысотаТаблицы,);
		ПоследняяСтрока.ВместеСоСледующим = Истина;
	КонецЕсли;
	
	Область1 = Макет.ПолучитьОбласть("ЗаПериод");
	Область1.Параметры.Сумма = СуммаЗаПериод;
	ДокументРезультат.Вывести(Область1);
	
	ПоследняяСтрока = ДокументРезультат.Область(ДокументРезультат.ВысотаТаблицы,, ДокументРезультат.ВысотаТаблицы,);
	ПоследняяСтрока.ВместеСоСледующим = Истина;
	
	ДокументРезультат.ТолькоПросмотр = Истина;
	
	ВысотаШапки = ?(ЗначениеЗаполнено(ВидДеятельности), 6, 5);
	ДокументРезультат.ПовторятьПриПечатиСтроки = ДокументРезультат.Область(ВысотаШапки,, ВысотаШапки,);
	ДокументРезультат.ОбластьПечати = ДокументРезультат.Область(2, 2, ДокументРезультат.ВысотаТаблицы, ДокументРезультат.ШиринаТаблицы);
	
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;	
	ДокументРезультат.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КУДиР_ИП_Таблица_63";
	
КонецПроцедуры

Процедура ОбновитьОтчет() Экспорт

	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Предупреждение("Не указан предприниматель!");
		Возврат;
	КонецЕсли;
	
	ДляПризнанияРасходовНеТребуетсяПолучениеДохода = 
		ДоходыИРасходыПредпринимателя.ДляПризнанияРасходовНеТребуетсяПолучениеДохода(Организация, НачалоГода(ДатаНач));
	
	// Получение списков характеров деятельности и номенклатурных групп для отбора
	Если ЗначениеЗаполнено(ВидДеятельности) Тогда
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ВидДеятельности", ВидДеятельности);
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВидыДеятельностиОрганизаций.НоменклатурнаяГруппа,
		|	ВидыДеятельностиОрганизаций.ХарактерДеятельности,
		|	ВидыДеятельностиОрганизаций.ВидДеятельности
		|ИЗ
		|	РегистрСведений.ВидыДеятельностиПредпринимателей КАК ВидыДеятельностиОрганизаций
		|ГДЕ
		|	ВидыДеятельностиОрганизаций.ВидДеятельности = &ВидДеятельности";
		
		РезультатЗапроса = Запрос.Выполнить().Выгрузить();
		СписокХарактеровДеятельности = РезультатЗапроса.ВыгрузитьКолонку("ХарактерДеятельности");
		СписокНоменклатурныхГрупп = РезультатЗапроса.ВыгрузитьКолонку("НоменклатурнаяГруппа");
		
	Иначе
		
		СписокХарактеровДеятельности = Новый Массив;
		СписокХарактеровДеятельности.Добавить(Перечисления.ХарактерДеятельности.ОптоваяТорговля);
		СписокХарактеровДеятельности.Добавить(Перечисления.ХарактерДеятельности.ПроизводствоРаботыУслуги);
		СписокХарактеровДеятельности.Добавить(Перечисления.ХарактерДеятельности.УслугиЕНВД);
		СписокХарактеровДеятельности.Добавить(Перечисления.ХарактерДеятельности.РозничнаяТорговляНеЕНВД);
		СписокХарактеровДеятельности.Добавить(Перечисления.ХарактерДеятельности.РозничнаяТорговляЕНВД);
		СписокХарактеровДеятельности.Добавить(Перечисления.ХарактерДеятельности.ВсеВидыТорговли);
		СписокХарактеровДеятельности.Добавить(Перечисления.ХарактерДеятельности.ВсеВидыТорговлиНеЕНВД);
		СписокХарактеровДеятельности.Добавить(Перечисления.ХарактерДеятельности.ВсеВидыПроизводстваРаботУслуг);
		СписокХарактеровДеятельности.Добавить(Перечисления.ХарактерДеятельности.ВсяДеятельностьНеЕНВД);
		СписокХарактеровДеятельности.Добавить(Перечисления.ХарактерДеятельности.ВсяДеятельностьЕНВД);
		СписокХарактеровДеятельности.Добавить(Перечисления.ХарактерДеятельности.ПустаяСсылка());
		
		СписокНоменклатурныхГрупп = Новый Массив;
		СписокНоменклатурныхГрупп.Добавить(Справочники.НоменклатурныеГруппы.ПустаяСсылка());
		
		Выборка = Справочники.НоменклатурныеГруппы.Выбрать();
		Пока Выборка.Следующий() Цикл
			СписокНоменклатурныхГрупп.Добавить(Выборка.Ссылка);
		КонецЦикла;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("СписокХарактеровДеятельности", СписокХарактеровДеятельности);
	Запрос.УстановитьПараметр("СписокНоменклатурныхГрупп", СписокНоменклатурныхГрупп);
	Запрос.УстановитьПараметр("ДатаНач", НачалоДня(ДатаНач));
	Запрос.УстановитьПараметр("ДатаНач1", Макс(НачалоДня(ДатаНач)-1, НачалоГода(ДатаНач)));
	Запрос.УстановитьПараметр("ДатаНачГода", НачалоГода(ДатаНач));
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(ДатаКон));
	
	ВидыТоваров = Новый Массив;
	ВидыТоваров.Добавить(Перечисления.ВидыМПЗ.Материалы);
	ВидыТоваров.Добавить(Перечисления.ВидыМПЗ.Товары);
	
	Запрос.УстановитьПараметр("ВидыТоваров", ВидыТоваров);
	Запрос.УстановитьПараметр("Полуфабрикат", Перечисления.ВидыМПЗ.Полуфабрикаты);
	
	ВидыПродукции = Новый Массив;
	ВидыПродукции.Добавить(Перечисления.ВидыМПЗ.Продукция);
	ВидыПродукции.Добавить(Перечисления.ВидыМПЗ.Товары);

	Запрос.УстановитьПараметр("ВидыПродукции", ВидыПродукции);
	Запрос.УстановитьПараметр("Продукция", Перечисления.ВидыМПЗ.Продукция);
	Запрос.УстановитьПараметр("Материал", Перечисления.ВидыМПЗ.Материалы);
	Запрос.УстановитьПараметр("ВспомогательныйМатериал", Перечисления.ВидыМПЗ.ВспомогательныеМатериалы);
	Запрос.УстановитьПараметр("ВидНеПринимаемыхРасходов", Перечисления.ВидыРасходовНУ.НеУчитываемыеВЦеляхНалогообложения);
	Запрос.УстановитьПараметр("ПриемНаРаботу", Перечисления.ПричиныИзмененияСостояния.ПриемНаРаботу);
	
	Запрос.УстановитьПараметр("ОС", Перечисления.ВидыМПЗ.ОС);
	Запрос.УстановитьПараметр("ОСПринятоКУчету", Перечисления.СостоянияОС.ПринятоКУчету);
	Запрос.УстановитьПараметр("Передача", Перечисления.ВидыСобытийОС.Передача);
	Запрос.УстановитьПараметр("Списание", Перечисления.ВидыСобытийОС.Списание);
	Запрос.УстановитьПараметр("Линейный", Перечисления.МетодыНачисленияАмортизации.Линейный);
	
	Запрос.УстановитьПараметр("НМА", Перечисления.ВидыМПЗ.НМА);
	Запрос.УстановитьПараметр("Выбыло", Перечисления.ВидыСостоянийНМА.Списан);
	
	// Результаты запросов
	СформироватьПоМПЗ = Ложь;
	СформироватьПоОтгруженным = Ложь;
	СформироватьПоДоходамРасходам = Ложь;
	СформироватьПоИМР = Ложь;
	СформироватьПоОборотам = Ложь;
	СформироватьПоЗарплате = Ложь;
	СформироватьПоПрочимРасходам = Ложь;
	СформироватьПоОС1 = Ложь;
	СформироватьПоНМА = Ложь;
	СформироватьПоРБП = Ложь;
	
	Для Каждого Таблица Из СписокТаблиц Цикл
		Если НЕ Таблица.Формировать Тогда
			Продолжить;
		КонецЕсли;
		
		Если (Таблица.КодТаблицы = 11) ИЛИ  (Таблица.КодТаблицы = 12) ИЛИ  (Таблица.КодТаблицы = 13) Тогда
			СформироватьПоМПЗ = Истина;
			
		ИначеЕсли Таблица.КодТаблицы = 14 Тогда
			СформироватьПоИМР = Истина;
			
		ИначеЕсли Таблица.КодТаблицы = 15 Тогда
			СформироватьПоОборотам = Истина;
			
		ИначеЕсли Таблица.КодТаблицы = 16 Тогда
			СформироватьПоОтгруженным = Истина;
			
		ИначеЕсли Таблица.КодТаблицы = 17 Тогда
			СформироватьПоДоходамРасходам = Истина;
			
		ИначеЕсли Таблица.КодТаблицы = 21 Тогда
			СформироватьПоОС1 = Истина;
			
		ИначеЕсли Таблица.КодТаблицы = 22 Тогда
			СформироватьПоОС1 = Истина;
			
		ИначеЕсли Таблица.КодТаблицы = 41 Тогда
			СформироватьПоНМА = Истина;
			
		ИначеЕсли Таблица.КодТаблицы = 42 Тогда
			СформироватьПоНМА = Истина;
			
		ИначеЕсли Таблица.КодТаблицы = 5 Тогда
			СформироватьПоЗарплате = Истина;
			
		ИначеЕсли Таблица.КодТаблицы = 62 Тогда
			СформироватьПоПрочимРасходам = Истина;
			
		ИначеЕсли Таблица.КодТаблицы = 63 Тогда
			СформироватьПоРБП = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Если СформироватьПоОборотам Тогда
		Запрос.Текст = ТекстЗапросаПоОборотам();
		Обороты = Запрос.Выполнить();
	КонецЕсли;
	
	Если СформироватьПоМПЗ
		ИЛИ СформироватьПоОтгруженным
		ИЛИ СформироватьПоДоходамРасходам
		ИЛИ СформироватьПоОС1
		ИЛИ СформироватьПоНМА Тогда
		
		Запрос.Текст = ТекстЗапросаЦеныМПЗ();
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Выполнить();
		
		ЗапросЗначенийИзмерения = Новый Запрос;
		ЗапросЗначенийИзмерения.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		ЗапросЗначенийИзмерения.Текст = "Выбрать Различные ВидМПЗ Из ЦеныМПЗ Сгруппировать По ВидМПЗ";
		СписокВидовМПЗ = ЗапросЗначенийИзмерения.Выполнить().Выгрузить();
		СписокВидовМПЗ = СписокВидовМПЗ.ВыгрузитьКолонку("ВидМПЗ");
		
		ЗапросЗначенийИзмерения.Текст = "Выбрать Различные Номенклатура Из ЦеныМПЗ Сгруппировать По Номенклатура";
		СписокНоменклатуры = ЗапросЗначенийИзмерения.Выполнить().Выгрузить();
		СписокНоменклатуры = СписокНоменклатуры.ВыгрузитьКолонку("Номенклатура");
		
		ЗапросЗначенийИзмерения.Текст = "Выбрать Различные Партия Из ЦеныМПЗ Сгруппировать По Партия";
		СписокПартий = ЗапросЗначенийИзмерения.Выполнить().Выгрузить();
		СписокПартий = СписокПартий.ВыгрузитьКолонку("Партия");
		
		ЗапросЗначенийИзмерения.Текст = "Выбрать Различные ДокументОплаты Из ЦеныМПЗ Сгруппировать По ДокументОплаты";
		СписокДокументовОплаты = ЗапросЗначенийИзмерения.Выполнить().Выгрузить();
		СписокДокументовОплаты = СписокДокументовОплаты.ВыгрузитьКолонку("ДокументОплаты");
		
	    ЦеныМПЗ = ДоходыИРасходыПредпринимателя.ПолучениеРеквизитовДокументовОплаты(СписокПартий, "ИПМПЗ", "Партия", "ДокументОплаты",, Истина, СписокВидовМПЗ, СписокНоменклатуры, СписокДокументовОплаты, Истина);
		
		ЗапросЗначенийИзмерения.Текст = "Выбрать Различные ВидМПЗ, Номенклатура, Партия, ДокументОплаты, ДокументОтгрузки Из ЦеныМПЗ Сгруппировать По ВидМПЗ, Номенклатура, Партия, ДокументОплаты, ДокументОтгрузки";
		СписокПартий = ЗапросЗначенийИзмерения.Выполнить().Выгрузить();
		ЦеныМПЗОтгруженных = ДоходыИРасходыПредпринимателя.ПолучениеРеквизитовДокументовОплаты(СписокПартий, "ИПМПЗОтгруженные", "Партия", "ДокументОплаты", "ДокументОтгрузки", Истина, СписокВидовМПЗ, СписокНоменклатуры, СписокДокументовОплаты, Ложь);
	КонецЕсли;
	
	Если СформироватьПоДоходамРасходам
		ИЛИ СформироватьПоИМР Тогда
		
		Запрос.Текст = ТекстЗапросаЦеныИМР();
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Выполнить();
		
		ЗапросЗначенийИзмерения = Новый Запрос;
		ЗапросЗначенийИзмерения.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		
		ЗапросЗначенийИзмерения.Текст = "Выбрать СтатьяЗатрат Из ЦеныИМР Сгруппировать По СтатьяЗатрат";
		СписокНоменклатуры = ЗапросЗначенийИзмерения.Выполнить().Выгрузить();
		СписокНоменклатуры = СписокНоменклатуры.ВыгрузитьКолонку("СтатьяЗатрат");
		
		ЗапросЗначенийИзмерения.Текст = "Выбрать Партия Из ЦеныИМР Сгруппировать По Партия";
		СписокПартий = ЗапросЗначенийИзмерения.Выполнить().Выгрузить();
		СписокПартий = СписокПартий.ВыгрузитьКолонку("Партия");
		
		ЗапросЗначенийИзмерения.Текст = "Выбрать ДокументОплаты Из ЦеныИМР Сгруппировать По ДокументОплаты";
		СписокДокументовОплаты = ЗапросЗначенийИзмерения.Выполнить().Выгрузить();
		СписокДокументовОплаты = СписокДокументовОплаты.ВыгрузитьКолонку("ДокументОплаты");
		
	    ЦеныИМР = ДоходыИРасходыПредпринимателя.ПолучениеРеквизитовДокументовОплаты(СписокПартий, "ИПИныеМатериальныеРасходы", "Партия", "ДокументОплаты",, Истина, СписокВидовМПЗ, СписокНоменклатуры, СписокДокументовОплаты, Истина);
	КонецЕсли;
	
	Если СформироватьПоМПЗ Тогда
		Запрос.Текст = ТекстЗапросаПоМПЗ();
		МПЗ = Запрос.Выполнить();
	КонецЕсли;
	
	Если СформироватьПоДоходамРасходам Тогда
		Если ДляПризнанияРасходовНеТребуетсяПолучениеДохода Тогда
			Запрос.Текст = ТекстЗапросаПоДоходамРасходам();
		Иначе
			Запрос.Текст = ТекстЗапросаПоДоходамРасходамТребуютсяДоходы();
		КонецЕсли;
		ДоходыИРасходыСводно = Запрос.Выполнить();
	КонецЕсли;	
	
	Если СформироватьПоОтгруженным Тогда
		Если ДляПризнанияРасходовНеТребуетсяПолучениеДохода Тогда
			Запрос.Текст = ТекстЗапросаПоОтгруженным();
		Иначе
			Запрос.Текст = ТекстЗапросаПоОтгруженнымТребуютсяДоходы();
		КонецЕсли;
		ДоходыИРасходы = Запрос.Выполнить();
	КонецЕсли;
	
	Если СформироватьПоИМР Тогда
		Запрос.Текст = ТекстЗапросаПоИМР();
		ИМР = Запрос.Выполнить();
	КонецЕсли;
	
	Если СформироватьПоНМА Тогда
		Запрос.Текст = ТекстЗапросаПоНМА();
		ЗапросНМА = Запрос.Выполнить();
	КонецЕсли;
	
	Если СформироватьПоОС1 Тогда
		Запрос.Текст = ТекстЗапросаПоОС();
		ЗапросОС = Запрос.Выполнить();
	КонецЕсли;
	
	Если СформироватьПоЗарплате Тогда
		Запрос.Текст = ТекстЗапросаПоОплатеТруда();
		Зарплата = Запрос.Выполнить();
	КонецЕсли;
	
	Если СформироватьПоПрочимРасходам Тогда
		Запрос.Текст = ТекстЗапросаПоПрочимРасходам();
		ЗапросПрочиеРасходы = Запрос.Выполнить().Выгрузить();
		ДоходыИРасходыПредпринимателя.ПолучениеРеквизитовДокументовОплаты(ЗапросПрочиеРасходы, "ИППрочиеРасходы", "РасчетныйДокумент", "ДокументОплаты",,);
	КонецЕсли;
	
	Если СформироватьПоРБП Тогда
		Запрос.Текст = ТекстЗапросаПоРБП();
		ЗапросРБП = Запрос.Выполнить().Выгрузить();
		ДоходыИРасходыПредпринимателя.ПолучениеРеквизитовДокументовОплаты(ЗапросРБП, "ИПРБП", "Партия", "ДокументОплаты",,);
	КонецЕсли;
	
	Если (СформироватьПоМПЗ ИЛИ СформироватьПоДоходамРасходам ИЛИ СформироватьПоОтгруженным) Тогда
		Запрос.УстановитьПараметр("ДатаОстатков", ДатаНач);
		Запрос.Текст = ТекстЗапросаПоОстаткамМПЗ();
		НачОстаткиМПЗ = Запрос.Выполнить();
	КонецЕсли;
	
	Если ДатаКон = КонецГода(ДатаКон) И (СформироватьПоМПЗ ИЛИ СформироватьПоДоходамРасходам ИЛИ СформироватьПоОтгруженным) Тогда
		Запрос.УстановитьПараметр("ДатаОстатков", Новый Граница(ДатаКон, ВидГраницы.Включая));
		Запрос.Текст = ТекстЗапросаПоОстаткамМПЗ();
		КонОстаткиМПЗ = Запрос.Выполнить();
	КонецЕсли;
	
	Если ДатаНач = НачалоГода(ДатаНач) И СформироватьПоИМР Тогда
		Запрос.УстановитьПараметр("ДатаОстатков", ДатаНач);
		Запрос.Текст = ТекстЗапросаПоОстаткамИМР();
		НачОстаткиИМР = Запрос.Выполнить();
	КонецЕсли;
	
	Для Каждого Таблица Из СписокТаблиц Цикл
		
		Если НЕ Таблица.Формировать Тогда
			Продолжить;
		КонецЕсли;
		
		Если (Таблица.КодТаблицы = 11)
			ИЛИ  (Таблица.КодТаблицы = 12)
			ИЛИ  (Таблица.КодТаблицы = 13) Тогда
		
			ФормированиеТаблицы11(Таблица);
			
		ИначеЕсли Таблица.КодТаблицы = 14 Тогда
		
			ФормированиеТаблицы14(Таблица);
			
		ИначеЕсли Таблица.КодТаблицы = 15 Тогда
		
			ФормированиеТаблицы15(Таблица);
			
		ИначеЕсли Таблица.КодТаблицы = 16 Тогда
			
			ФормированиеТаблицы16(Таблица);
			
		ИначеЕсли Таблица.КодТаблицы = 17 Тогда
			
			ФормированиеТаблицы17(Таблица);
			
		ИначеЕсли Таблица.КодТаблицы = 21 Тогда
		
			ФормированиеТаблицы21(Таблица);
			
		ИначеЕсли Таблица.КодТаблицы = 22 Тогда
		
			ФормированиеТаблицы22(Таблица);
			
		ИначеЕсли Таблица.КодТаблицы = 41 Тогда
		
			ФормированиеТаблицы41(Таблица);
			
		ИначеЕсли Таблица.КодТаблицы = 42 Тогда
		
			ФормированиеТаблицы42(Таблица);
			
		ИначеЕсли Таблица.КодТаблицы = 5 Тогда
		
			ФормированиеТаблицы5(Таблица);
			
		ИначеЕсли Таблица.КодТаблицы = 61 Тогда
		
			ФормированиеТаблицы61(Таблица, ДляПризнанияРасходовНеТребуетсяПолучениеДохода);
			
		ИначеЕсли Таблица.КодТаблицы = 62 Тогда
		
			ФормированиеТаблицы62(Таблица);
			
		ИначеЕсли Таблица.КодТаблицы = 63 Тогда
		
			ФормированиеТаблицы63(Таблица);
			
		ИначеЕсли Таблица.КодТаблицы = 71 Тогда
		
			ФормированиеТитульногоЛиста(Таблица);
			
		ИначеЕсли Таблица.КодТаблицы = 72 Тогда
		
			ФормированиеСодержания(Таблица);
			
		ИначеЕсли Таблица.КодТаблицы = 73 Тогда
			
			ФормированиеСведений(Таблица);
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры // ОбновитьОтчет()

Процедура Сформировать(Кнопка)
	
	ОбновитьОтчет();
	
КонецПроцедуры

Процедура Настройка(Кнопка)
	
	ФормаНастройка = ПолучитьФорму("ФормаНастройка");
	ФормаНастройка.ВладелецФормы = ЭтаФорма;
	Если ФормаНастройка.ОткрытьМодально() = Истина Тогда
		СформироватьСтраницыОтчета();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПослеВосстановленияЗначений()
	
	СформироватьСтраницыОтчета();
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ТиповыеОтчеты.НазначитьФормеУникальныйКлючИдентификации(ЭтаФорма);
	ЭлементыФормы.Организация.СписокВыбора = ДоходыИРасходыПредпринимателя.СформироватьСписокПредпринимателей();
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ОргПоУмолчанию = глЗначениеПеременной("ОсновнаяОрганизация");
	Если ОргПоУмолчанию.ЮрФизЛицо <> Перечисления.ЮрФизЛицо.ФизЛицо Тогда
		ОргПоУмолчанию = Неопределено;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ДатаКон) Тогда
		ДатаКон = КонецМесяца(РабочаяДата);
		ДатаНач = НачалоГода(РабочаяДата);
		ОблагаетсяНДС = Истина;
		Остатки = Истина;
		СНачалаГода = Ложь;
		Организация = ОргПоУмолчанию;
	КонецЕсли;
	

	Организация = ОргПоУмолчанию;
	
	// Формирование списка выбора организаций
	Если ЭлементыФормы.Организация.СписокВыбора.НайтиПоЗначению(Организация) = Неопределено Тогда
		Организация = Неопределено;
	КонецЕсли;
	
	ФормированиеСпискаТаблиц();
	ОбработкаИзмененияФлажкаОблагаетсяНДС();

	ПоказатьПериод();

	СформироватьСтраницыОтчета();
	
	СформироватьЗаголовокФормы();
	
	ДокументРезультат = ЭлементыФормы.ПолеТабличногоДокумента15;
	ДокументРезультат.ОбластьПечати = ДокументРезультат.Область(2, 2, ДокументРезультат.ВысотаТаблицы, ДокументРезультат.ШиринаТаблицы);
	ДокументРезультат.ЧерноБелаяПечать = Истина;
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;	
	ДокументРезультат.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КУДиР_ИП_Таблица_Титульный";
	//ДокументРезультат.ЧерноБелыйПросмотр = Истина;
	
	ДокументРезультат = ЭлементыФормы.ПолеТабличногоДокумента16;
	ДокументРезультат.ОбластьПечати = ДокументРезультат.Область(2, 2, ДокументРезультат.ВысотаТаблицы, ДокументРезультат.ШиринаТаблицы);
	ДокументРезультат.ЧерноБелаяПечать = Истина;
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;	
	ДокументРезультат.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КУДиР_ИП_Таблица_Сведения";
	//ДокументРезультат.ЧерноБелыйПросмотр = Истина;
	
	ДокументРезультат = ЭлементыФормы.ПолеТабличногоДокумента17;
	ДокументРезультат.ОбластьПечати = ДокументРезультат.Область(2, 2, ДокументРезультат.ВысотаТаблицы, ДокументРезультат.ШиринаТаблицы);
	ДокументРезультат.ЧерноБелаяПечать = Истина;
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;	
	ДокументРезультат.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КУДиР_ИП_Таблица_Содержание";
	//ДокументРезультат.ЧерноБелыйПросмотр = Истина;

КонецПроцедуры
 
Процедура ОбновлениеОтображения()

	СформироватьЗаголовокФормы();

КонецПроцедуры

Процедура ОбработкаИзмененияФлажкаОблагаетсяНДС()
	
	Если ОблагаетсяНДС = 1 Тогда
	    Буква = "А";
		
	Иначе
		Буква = "Б";
	КонецЕсли;
	
КонецПроцедуры

Процедура ОблагаетсяНДСПриИзменении(Элемент)
	
	ОбработкаИзмененияФлажкаОблагаетсяНДС();
	
КонецПроцедуры

Процедура ПанельПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	ИндексТекущейСтраницы = ТекущаяСтраница;
	
КонецПроцедуры

Процедура КнопкаПредыдущийПериодНажатие(Элемент)
	ИзменитьПериод(-1);
КонецПроцедуры

Процедура КнопкаСледующийПериодНажатие(Элемент)
	ИзменитьПериод(1);
КонецПроцедуры

Процедура ОрганизацияОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	СписокВыбора = ДоходыИРасходыПредпринимателя.СформироватьСписокПредпринимателей(Текст);
	
	Если СписокВыбора.Количество() > 0 Тогда
		Значение = СписокВыбора;
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОрганизацияНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	Элемент.СписокВыбора = ДоходыИРасходыПредпринимателя.СформироватьСписокПредпринимателей();
	
КонецПроцедуры

Процедура СНачалаГодаПриИзменении(Элемент)
	
	Если НЕ СНачалаГода Тогда
		ДатаКон  = КонецМесяца(ДатаКон);
		ДатаНач = НачалоГода(ДатаКон);
		
	Иначе
		ДатаКон  = КонецМесяца(ДатаКон);
		ДатаНач = НачалоМесяца(ДатаКон);
	КонецЕсли;

	ПоказатьПериод();

КонецПроцедуры


ПустаяПартия = Новый Структура("РеквизитыДокументаОплаты,СтоимостьЕдиницыСНДС,СтоимостьЕдиницы,НДСЕдиницы", "", 0, 0, 0);
НайденнаяПартия = Новый Структура("РеквизитыДокументаОплаты,СтоимостьЕдиницыСНДС,СтоимостьЕдиницы,НДСЕдиницы", "", 0, 0, 0);
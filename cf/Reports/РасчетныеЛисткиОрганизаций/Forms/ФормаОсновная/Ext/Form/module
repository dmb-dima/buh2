////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем НП Экспорт;  				  // Настройка периода

////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Устанавливает видимость панели быстрого отбора
Процедура УстановитьВидимостьПанелиБыстрогоОтбора()
	
	Если НЕ ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Верх Тогда
		
		ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Верх;
		ЭлементыФормы.ДействияФормы.Кнопки.Отбор.Пометка = Ложь;
		ЭлементыФормы.ДействияФормы.Кнопки.Подменю.Кнопки.Отбор.Пометка = Ложь;
		
	Иначе
		
		ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Нет;
		ЭлементыФормы.ДействияФормы.Кнопки.Отбор.Пометка = Истина;
		ЭлементыФормы.ДействияФормы.Кнопки.Подменю.Кнопки.Отбор.Пометка = Истина;
		
	КонецЕсли;

КонецПроцедуры

// Процедура формирует заголовок окна
//
Процедура ОбновитьЗаголовокОкна()

	Если ОтборОрганизации Тогда
		
		Если ТипЗнч(Организация) = Тип("СправочникСсылка.Организации") Тогда
			
			Если Организация = Справочники.Организации.ПустаяСсылка() Тогда
				Заголовок = "Расчетные листки по организации: <Не задано значение>"
			Иначе
				Заголовок = "Расчетные листки по организации: " + Организация
			КонецЕсли; 
			
		Иначе
			
			Если Организация.Количество() = 0 Тогда
				Заголовок = "Расчетные листки по списку организаций: <Не задано значение>"
			Иначе
				Заголовок = "Расчетные листки по списку организаций: " + Организация
			КонецЕсли; 
			
		КонецЕсли;
		
	Иначе
		Заголовок = "Расчетные листки организации"
	КонецЕсли; 	
	
КонецПроцедуры // ОбновитьЗаголовокОкна()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	РД = ОбщегоНазначения.ПолучитьРабочуюДату();
	// Установим дату начала отчета
	Если ЗначениеЗаполнено(глЗначениеПеременной("глТекущийПользователь")) Тогда
		
		ЕстьДатаОтчетаПользователя = ЗначениеЗаполнено(УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"),"ОсновнаяДатаНачалаОтчетов"));
		Если Не ЕстьДатаОтчетаПользователя Тогда
			
			ДатаНач = НачалоМесяца(РД);
			ДатаКон = КонецМесяца(РД);
			
		Иначе
			
			ДатаНач = НачалоМесяца(УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"),"ОсновнаяДатаНачалаОтчетов"));
			ДатаКон = КонецМесяца(ДатаНач)
			
		КонецЕсли; 
		
	Иначе
		
		ДатаНач = НачалоМесяца(РД);
		ДатаКон = КонецМесяца(РД);
		
	КонецЕсли;
	НП = Новый НастройкаПериода;
	НП.УстановитьПериод(ДатаНач, ДатаКон);
	
	ЭлементыФормы.ПолеВидаСравненияОрганизация.СписокВыбора = УправлениеОтчетами.ПолучитьСписокВидовСравненияПоТипу(Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ВидСравненияОрганизации     = ВидСравнения.Равно;
	Организация = ОбщегоНазначения.ПустоеЗначениеТипа("СправочникСсылка.Организации");
	
	ЭлементыФормы.ПолеВидаСравненияРаботник.СписокВыбора = УправлениеОтчетами.ПолучитьСписокВидовСравненияПоТипу(Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	ВидСравненияРаботника     = ВидСравнения.Равно;
	Работник = ОбщегоНазначения.ПустоеЗначениеТипа("СправочникСсылка.ФизическиеЛица");
	
	ЭлементыФормы.ПолеВидаСравненияПодразделение.СписокВыбора = УправлениеОтчетами.ПолучитьСписокВидовСравненияПоТипу(Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	ВидСравненияПодразделения     = ВидСравнения.Равно;
	Подразделение = ОбщегоНазначения.ПустоеЗначениеТипа("СправочникСсылка.ПодразделенияОрганизаций");
	
	УстановитьВидимостьПанелиБыстрогоОтбора(); 
	
КонецПроцедуры

// Процедура - обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии()
	
	ОбновитьЗаголовокОкна();
	

КонецПроцедуры

// Процедура - обработчик события "ПослеВосстановленияЗначений" формы.
//
Процедура ПослеВосстановленияЗначений()
	
	Если ТипЗнч(Работник) = Тип("СписокЗначений") Тогда
		ЭлементыФормы.ПолеНастройкиРаботник.ОграничениеТипа	= Новый ОписаниеТипов("СписокЗначений");
	Иначе
		ЭлементыФормы.ПолеНастройкиРаботник.ОграничениеТипа	= Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица");
	КонецЕсли;
	
	Если ТипЗнч(Подразделение) = Тип("СписокЗначений") Тогда
		ЭлементыФормы.ПолеНастройкиПодразделение.ОграничениеТипа = Новый ОписаниеТипов("СписокЗначений");
	Иначе
		ЭлементыФормы.ПолеНастройкиПодразделение.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций");
	КонецЕсли;
	
	Если ТипЗнч(Организация) = Тип("СписокЗначений") Тогда
		ЭлементыФормы.ПолеНастройкиОрганизация.ОграничениеТипа = Новый ОписаниеТипов("СписокЗначений");
	Иначе
		ЭлементыФормы.ПолеНастройкиОрганизация.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Организации");
	КонецЕсли;
	
	ОбновитьЗаголовокОкна()
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ КОМАНДНОЙ ПАНЕЛИ ФОРМЫ

// Процедура - обработчик нажатия кнопки "Сформировать"
Процедура ДействияФормыСформировать(Кнопка)
	
	Группировать = Истина;
	СформироватьОтчет(ЭлементыФормы.ДокументРезультат);

	ТекущийЭлемент = ЭлементыФормы.ДокументРезультат;
	
КонецПроцедуры

// Процедура - обработчик нажатия кнопки "Отбор"
Процедура ДействияФормыОтбор(Кнопка)
	
	УстановитьВидимостьПанелиБыстрогоОтбора()
	
КонецПроцедуры

// Процедура - обработчик нажатия кнопки "На принтер"
Процедура ДействияФормыНаПринтер(Кнопка)
	
	ЭлементыФормы.ДокументРезультат.Напечатать();

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ДИАЛОГА

// Процедура - обработчик нажатия кнопки выбора даты начала периода
//
Процедура ДатаНачПриИзменении(Элемент)
	
	ДатаНач = НачалоМесяца(ДатаНач);
	
КонецПроцедуры

// Процедура - обработчик нажатия кнопки выбора даты окончания периода
//
Процедура ДатаКонПриИзменении(Элемент)
	
	ДатаКон = КонецМесяца(ДатаКон);
	
КонецПроцедуры

// Процедура - обработчик нажатия кнопки настройки периода
//
Процедура КнопкаНастройкаПериодаНажатие(Элемент)

	Если НП.Редактировать() Тогда
		
		ДатаНач = НП.ПолучитьДатуНачала();
		ДатаКон = НП.ПолучитьДатуОкончания();

	КонецЕсли;
	
КонецПроцедуры // КнопкаНастройкаПериодаНажатие()

// Процедура - обработчик изменения флажка отбора по организации.
//
Процедура ФлажокНастройкиОрганизацияПриИзменении(Элемент)
	ОбновитьЗаголовокОкна();
КонецПроцедуры

// Процедура - обработчик изменения данных в поле выбора вида сравнения
//
Процедура ПолеВидаСравненияОрганизацияПриИзменении(Элемент)
	
	Если ТипЗнч(Организация) = Тип("СправочникСсылка.Организации") Тогда
		ЗаписываемоеЗначение = Организация;                                                               
	Иначе
		Если Организация.Количество() = 0 Тогда    
			ЗаписываемоеЗначение = ОбщегоНазначения.ПустоеЗначениеТипа("СправочникСсылка.Организации")
		Иначе
			ЗаписываемоеЗначение = Организация[0].Значение;
		КонецЕсли;
	КонецЕсли;
	
	Если Элемент.Значение = ВидСравнения.ВСписке ИЛИ Элемент.Значение = ВидСравнения.НеВСписке Тогда
		
		ЭлементыФормы.ПолеНастройкиОрганизация.ОграничениеТипа	  = Новый ОписаниеТипов("СписокЗначений");
        Организация = Новый СписокЗначений;
		Если ЗначениеЗаполнено(ЗаписываемоеЗначение) Тогда
			Организация.Добавить(ЗаписываемоеЗначение);
		КонецЕсли;
		
	Иначе              
		
		ЭлементыФормы.ПолеНастройкиОрганизация.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Организации");
		Организация = ЗаписываемоеЗначение;
		
	КонецЕсли; 
	
	ОбновитьЗаголовокОкна();
	
КонецПроцедуры

// Процедура - обработчик изменения данных в поле значения отбора
//
Процедура ПолеНастройкиОрганизацияПриИзменении(Элемент)

	Если ТипЗнч(Элемент.Значение) = Тип("СправочникСсылка.Организации") Тогда
	
		Если Элемент.Значение.Пустая() Тогда
			ЭлементыФормы.ФлажокНастройкиОрганизация.Значение = Ложь
		Иначе
			ЭлементыФормы.ФлажокНастройкиОрганизация.Значение = Истина
		КонецЕсли; 
		
	Иначе // Список значений
	
		Если Элемент.Значение.Количество() = 0 Тогда
			ЭлементыФормы.ФлажокНастройкиОрганизация.Значение = Ложь
		Иначе
			ЭлементыФормы.ФлажокНастройкиОрганизация.Значение = Истина
		КонецЕсли;
	
	КонецЕсли; 
	
	ОбновитьЗаголовокОкна();
	
КонецПроцедуры

// Процедура - обработчик изменения данных в поле выбора вида сравнения
//
Процедура ПолеВидаСравненияПодразделениеПриИзменении(Элемент)
	
	Если ТипЗнч(Подразделение) = Тип("СправочникСсылка.ПодразделенияОрганизаций") Тогда
		ЗаписываемоеЗначение = Подразделение;                                                               
	Иначе
		Если Подразделение.Количество() = 0 Тогда    
			ЗаписываемоеЗначение = ОбщегоНазначения.ПустоеЗначениеТипа("СправочникСсылка.ПодразделенияОрганизаций")
		Иначе
			ЗаписываемоеЗначение = Подразделение[0].Значение;
		КонецЕсли;
	КонецЕсли;
	
	Если Элемент.Значение = ВидСравнения.ВСписке ИЛИ Элемент.Значение = ВидСравнения.ВСпискеПоИерархии ИЛИ Элемент.Значение = ВидСравнения.НеВСписке ИЛИ Элемент.Значение = ВидСравнения.НеВСпискеПоИерархии Тогда
		
		ЭлементыФормы.ПолеНастройкиПодразделение.ОграничениеТипа	  = Новый ОписаниеТипов("СписокЗначений");
        Подразделение = Новый СписокЗначений;
		Если ЗначениеЗаполнено(ЗаписываемоеЗначение) Тогда
			Подразделение.Добавить(ЗаписываемоеЗначение);
		КонецЕсли;
		
	Иначе              
		
		ЭлементыФормы.ПолеНастройкиПодразделение.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций");
		Подразделение	 = ЗаписываемоеЗначение;
		
	КонецЕсли; 
	
КонецПроцедуры

// Процедура - обработчик изменения данных в поле значения отбора
//
Процедура ПолеНастройкиПодразделениеПриИзменении(Элемент)
	
	Если ТипЗнч(Элемент.Значение) = Тип("СписокЗначений") Тогда
		ОтборПодразделения = Элемент.Значение.Количество() > 0
	Иначе
		ОтборПодразделения = Не Элемент.Значение.Пустая()
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик изменения данных в поле выбора вида сравнения
//
Процедура ПолеВидаСравненияРаботникПриИзменении(Элемент)
	
	Если ТипЗнч(Работник) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
		ЗаписываемоеЗначение = Работник;                                                               
	Иначе
		Если Работник.Количество() = 0 Тогда    
			ЗаписываемоеЗначение = ОбщегоНазначения.ПустоеЗначениеТипа("СправочникСсылка.ФизическиеЛица")
		Иначе
			ЗаписываемоеЗначение = Работник[0].Значение;
		КонецЕсли;
	КонецЕсли;
	
	Если Элемент.Значение = ВидСравнения.ВСписке ИЛИ Элемент.Значение = ВидСравнения.ВСпискеПоИерархии ИЛИ Элемент.Значение = ВидСравнения.НеВСписке ИЛИ Элемент.Значение = ВидСравнения.НеВСпискеПоИерархии Тогда
		
		ЭлементыФормы.ПолеНастройкиРаботник.ОграничениеТипа	  = Новый ОписаниеТипов("СписокЗначений");
        Работник = Новый СписокЗначений;
		Если ЗначениеЗаполнено(ЗаписываемоеЗначение) Тогда
			Работник.Добавить(ЗаписываемоеЗначение);
		КонецЕсли;
		
	Иначе              
		
		ЭлементыФормы.ПолеНастройкиРаботник.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица");
		Работник	 = ЗаписываемоеЗначение;
		
	КонецЕсли; 
	
КонецПроцедуры

// Процедура - обработчик изменения данных в поле значения отбора
//
Процедура ПолеНастройкиРаботникПриИзменении(Элемент)
	
	Если ТипЗнч(Элемент.Значение) = Тип("СписокЗначений") Тогда
		
		Если Элемент.Значение.Количество() = 0 Тогда
			ЭлементыФормы.ФлажокНастройкиРаботник.Значение = Ложь
		Иначе
			ЭлементыФормы.ФлажокНастройкиРаботник.Значение = Истина
		КонецЕсли; 
		
	Иначе
		
		Если Элемент.Значение.Пустая() Тогда
			ЭлементыФормы.ФлажокНастройкиРаботник.Значение = Ложь
		Иначе
			ЭлементыФормы.ФлажокНастройкиРаботник.Значение = Истина
		КонецЕсли; 
		
	КонецЕсли;
	
КонецПроцедуры



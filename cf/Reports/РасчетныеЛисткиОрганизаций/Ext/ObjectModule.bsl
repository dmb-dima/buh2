
#Если Клиент Тогда

////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ 
// 

// Функция формирует основной запрос по сбору данных для расчетных листков.
//
// Параметры
//
// Возвращаемое значение:
//   РезультатЗапроса   – результат запроса.
//
Функция ПолучитьРезультатЗапроса()

	ЗапросРЛ = Новый Запрос;
	ЗапросРЛ.УстановитьПараметр("парамПустаяОрганизация", 	 	 Справочники.Организации.ПустаяСсылка());
	ЗапросРЛ.УстановитьПараметр("ПериодРегистрации", 	  		 ДатаНач);
	ЗапросРЛ.УстановитьПараметр("КонецПериодаРегистрации", 		 КонецДня(ДатаКон));
	ЗапросРЛ.УстановитьПараметр("ВидСтроки",              		 Перечисления.НДФЛРасчетыСБюджетомВидСтроки.Начисление);
	ЗапросРЛ.УстановитьПараметр("Расход", 						 ВидДвиженияНакопления.Расход);
	ЗапросРЛ.УстановитьПараметр("ВнутреннееСовместительство",	 Перечисления.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство);
	ЗапросРЛ.УстановитьПараметр("ЗанятостьНеУказана",			Перечисления.ВидыЗанятостиВОрганизации.ПустаяСсылка());
	ЗапросРЛ.УстановитьПараметр("Прием",						Перечисления.ПричиныИзмененияСостояния.ПриемНаРаботу);
	ЗапросРЛ.УстановитьПараметр("Увольнение",					 Перечисления.ПричиныИзмененияСостояния.Увольнение);
	ЗапросРЛ.УстановитьПараметр("ЧерезКассу",					Перечисления.СпособыВыплатыЗарплаты.ЧерезКассу);
	ЗапросРЛ.УстановитьПараметр("ЧерезБанк",					Перечисления.СпособыВыплатыЗарплаты.ЧерезБанк);
	ЗапросРЛ.УстановитьПараметр("Общая",						Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка13);
	ЗапросРЛ.УстановитьПараметр("Дивиденды",					Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка09);
	
	    
    МассивКодыМатвыгоды = Новый Массив;
	МассивКодыМатвыгоды.Добавить(Справочники.ДоходыНДФЛ.Код2610ПоСтавке13);
	МассивКодыМатвыгоды.Добавить(Справочники.ДоходыНДФЛ.Код2610ПоСтавке35);
	
	ЗапросРЛ.УстановитьПараметр("КодыМатвыгоды",				МассивКодыМатвыгоды);
	
	Если ОтборОрганизации Тогда
		
		ЗапросРЛ.УстановитьПараметр("Организация", Организация);
		Если ТипЗнч(Организация) = Тип("СправочникСсылка.Организации") Тогда
			ЗапросРЛ.УстановитьПараметр("ГоловнаяОрганизация", ОбщегоНазначения.ГоловнаяОрганизация(Организация));
		Иначе
			
			Запрос = Новый Запрос(
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	ВЫБОР КОГДА Организации.ГоловнаяОрганизация = &парамПустаяОрганизация ТОГДА Организации.Ссылка ИНАЧЕ Организации.ГоловнаяОрганизация КОНЕЦ КАК ГоловнаяОрганизация
			|ИЗ
			|	Справочник.Организации КАК Организации
			|
			|ГДЕ
			|	Организации.Ссылка В(&парамОрганизация)");
			
			Запрос.УстановитьПараметр("парамПустаяОрганизация", Справочники.Организации.ПустаяСсылка());
			Запрос.УстановитьПараметр("парамОрганизация", Организация);
			
			ЗапросРЛ.УстановитьПараметр("ГоловнаяОрганизация", Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ГоловнаяОрганизация"));
			
		КонецЕсли;
		
		Если ВидСравненияОрганизации = ВидСравнения.Равно Тогда
			ВидСравненияОрганизацииСтрокой = "=" 
		ИначеЕсли ВидСравненияОрганизации = ВидСравнения.НеРавно Тогда
			ВидСравненияОрганизацииСтрокой = "<>"
		ИначеЕсли ВидСравненияОрганизации = ВидСравнения.ВСписке Тогда
			ВидСравненияОрганизацииСтрокой = "В"
		Иначе
			ВидСравненияОрганизацииСтрокой = "НЕ В"
		КонецЕсли; 
		
		// ограничение срезов
		УсловиеНаОрганизацию = "Организация " + ВидСравненияОрганизацииСтрокой + " (&ГоловнаяОрганизация)";
	Иначе
		УсловиеНаОрганизацию = "";
	КонецЕсли;
	
	Если ОтборРаботника Тогда
		
		ЗапросРЛ.УстановитьПараметр("РаботникиОрганизации", Работник);
	
		Если ВидСравненияРаботника = ВидСравнения.Равно Тогда
			ВидСравненияРаботник = "=" 
		ИначеЕсли ВидСравненияРаботника = ВидСравнения.НеРавно Тогда
			ВидСравненияРаботник = "<>"
		ИначеЕсли ВидСравненияРаботника = ВидСравнения.ВСписке Тогда
			ВидСравненияРаботник = "В"
		ИначеЕсли ВидСравненияРаботника = ВидСравнения.НеВСписке Тогда
			ВидСравненияРаботник = "НЕ В"
		ИначеЕсли ВидСравненияРаботника = ВидСравнения.ВСпискеПоИерархии ИЛИ 
			ВидСравненияРаботника = ВидСравнения.ВИерархии Тогда
			ВидСравненияРаботник = "В ИЕРАРХИИ"
		ИначеЕсли ВидСравненияРаботника = ВидСравнения.НеВСпискеПоИерархии ИЛИ 
			ВидСравненияРаботника = ВидСравнения.НеВИерархии Тогда
			ВидСравненияРаботник = "НЕ В ИЕРАРХИИ"
		КонецЕсли; 
	
	КонецЕсли; 
	
	// Сформируем текст запроса с датами месяцев налогового периода
	// первый месяц
	НачалоМесяца = НачалоМесяца(ДатаНач);
	ПериодыТекст = "ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат (НачалоМесяца,"ДФ=гггг,М,д,Ч,м,с") + ") КАК Период";
	// прибавим остальные месяцы
	Пока НачалоМесяца < НачалоМесяца(ДатаКон) Цикл
		НачалоМесяца = КонецМесяца(НачалоМесяца) + 1;
    	ПериодыТекст = ПериодыТекст +" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(НачалоМесяца,"ДФ=гггг,М,д,Ч,м,с") + ")";
	КонецЦикла;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|   НачисленияУдержания.ВидДвижения,
	|	ЕСТЬNULL(ФИОФизЛицСрезПоследних.Фамилия + "" "" + ФИОФизЛицСрезПоследних.Имя + "" "" + ФИОФизЛицСрезПоследних.Отчество, НачисленияУдержания.ФизЛицо.Наименование) КАК ФИОФизлица,
	|   НачисленияУдержания.Регистратор КАК Регистратор,
	|	ЕСТЬNULL(НачисленияУдержания.ФизЛицо, Сальдо.Физлицо) КАК ФизЛицо,
	|   НачисленияУдержания.Сотрудник КАК Сотрудник,
	|	НачисленияУдержания.Организация КАК Организация,
	|	НачисленияУдержания.Организация.Наименование КАК ОрганизацияНаименование,
	|	ЕСТЬNULL(НачисленияУдержания.ПериодРегистрации, Сальдо.ПериодРегистрации) КАК ПериодРегистрации, 
	|	НачисленияУдержания.ВидРасчета,
	|	НачисленияУдержания.ПорядокВидаРасчета,
	|	НачисленияУдержания.НомерСтроки КАК НомерСтроки,
	|	НАЧАЛОПЕРИОДА(НачисленияУдержания.ПериодРегистрации, МЕСЯЦ) КАК ПериодДействияНачало,
	|	КОНЕЦПЕРИОДА(НачисленияУдержания.ПериодРегистрации, МЕСЯЦ) КАК ПериодДействияКонец,
	|	НачисленияУдержания.Начисления КАК Начисления,
	|	НачисленияУдержания.Удержания КАК Удержания,
	|	ЕСТЬNULL(НачисленияУдержания.ВычетНаФизлицо, 0) КАК ВычетНаФизлицо,
	|	ЕСТЬNULL(НачисленияУдержания.ВычетНаДетей, 0) КАК ВычетНаДетей,
	|	ЕСТЬNULL(ИмущественныйВычет.РазмерРасход, 0) КАК ВычетИмущественный,
	|	РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	РаботникиОрганизацииСрезПоследних.Должность.Наименование КАК Должность,
	|	РаботникиОрганизацииСрезПоследних.ТабельныйНомер КАК ТабельныйНомер,
	|	Сальдо.СуммаВзаиморасчетовНачальныйОстаток КАК СуммаВзаиморасчетовНачальныйОстаток,
	|	Сальдо.СуммаВзаиморасчетовКонечныйОстаток КАК СуммаВзаиморасчетовКонечныйОстаток
	|ИЗ
	|	(ВЫБРАТЬ
	|	1 КАК ВидДвижения,
	|	ОсновныеНачисленияРаботниковОрганизации.Ссылка КАК Регистратор,
	|	ОсновныеНачисленияРаботниковОрганизации.Ссылка.Организация КАК Организация,
	|	ОсновныеНачисленияРаботниковОрганизации.Ссылка.ПериодРегистрации КАК ПериодРегистрации,
	|	ОсновныеНачисленияРаботниковОрганизации.Сотрудник.ФизЛицо КАК ФизЛицо,
	|	ОсновныеНачисленияРаботниковОрганизации.Сотрудник КАК Сотрудник,
	|	ОсновныеНачисленияРаботниковОрганизации.ВидРасчета.Наименование + ВЫБОР
	|		КОГДА ЕСТЬNULL(ОсновныеНачисленияРаботниковОрганизации.Сотрудник.ВидЗанятости, &ЗанятостьНеУказана) <> &ВнутреннееСовместительство
	|			ТОГДА """"
	|		ИНАЧЕ "" (по внутр. совмест-ву)""
	|	КОНЕЦ КАК ВидРасчета,
	|	""А"" + ОсновныеНачисленияРаботниковОрганизации.ВидРасчета.Код КАК ПорядокВидаРасчета,
	|	ОсновныеНачисленияРаботниковОрганизации.НомерСтроки КАК НомерСтроки,
	|	ОсновныеНачисленияРаботниковОрганизации.Начислено КАК Начисления,
	|	NULL КАК Удержания,
	|	NULL КАК ВычетНаФизлицо,
	|	NULL КАК ВычетНаДетей,
	|	NULL КАК СуммаВзаиморасчетовНачальныйОстаток,
	|	NULL КАК СуммаВзаиморасчетовКонечныйОстаток
	|ИЗ
	|	Документ.НачислениеЗарплатыРаботникамОрганизаций.Начисления КАК ОсновныеНачисленияРаботниковОрганизации
	|
	|ГДЕ
	|	ОсновныеНачисленияРаботниковОрганизации.Ссылка.ПериодРегистрации МЕЖДУ &ПериодРегистрации И &КонецПериодаРегистрации
	|	И ОсновныеНачисленияРаботниковОрганизации.Ссылка.Проведен " 
	+ ?(ОтборОрганизации, 
		" И ОсновныеНачисленияРаботниковОрганизации.Ссылка.Организация " + ВидСравненияОрганизацииСтрокой + " (&Организация)" , "")
	+ ?(ОтборРаботника, 	
		" И ОсновныеНачисленияРаботниковОрганизации.Сотрудник.ФизЛицо " + ВидСравненияРаботник + "(&РаботникиОрганизации)", "")
	+ "
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|	1 КАК ВидДвижения,
	|	ОсновныеНачисленияРаботниковОрганизации.Ссылка КАК Регистратор,
	|	ОсновныеНачисленияРаботниковОрганизации.Ссылка.Организация КАК Организация,
	|	ОсновныеНачисленияРаботниковОрганизации.Ссылка.ПериодРегистрации КАК ПериодРегистрации,
	|	ОсновныеНачисленияРаботниковОрганизации.Сотрудник.Физлицо КАК ФизЛицо,
	|	ОсновныеНачисленияРаботниковОрганизации.Сотрудник КАК Сотрудник,
	|	""Районный коэффициент"" + ВЫБОР
	|		КОГДА ЕСТЬNULL(ОсновныеНачисленияРаботниковОрганизации.Сотрудник.ВидЗанятости, &ЗанятостьНеУказана) <> &ВнутреннееСовместительство
	|			ТОГДА """"
	|		ИНАЧЕ "" (по внутр. совмест-ву)""
	|	КОНЕЦ КАК ВидРасчета,
	|	""А"" + ОсновныеНачисленияРаботниковОрганизации.ВидРасчета.Код КАК ПорядокВидаРасчета,
	|	ОсновныеНачисленияРаботниковОрганизации.НомерСтроки КАК НомерСтроки,
	|	СУММА(ОсновныеНачисленияРаботниковОрганизации.РайонныйКоэффициент) КАК Начисления,
	|	NULL КАК Удержания,
	|	NULL КАК ВычетНаФизлицо,
	|	NULL КАК ВычетНаДетей,
	|	NULL КАК СуммаВзаиморасчетовНачальныйОстаток,
	|	NULL КАК СуммаВзаиморасчетовКонечныйОстаток
	|ИЗ
	|	Документ.НачислениеЗарплатыРаботникамОрганизаций.Начисления КАК ОсновныеНачисленияРаботниковОрганизации
	|ГДЕ
	|	ОсновныеНачисленияРаботниковОрганизации.Ссылка.ПериодРегистрации МЕЖДУ &ПериодРегистрации И &КонецПериодаРегистрации
	|	И ОсновныеНачисленияРаботниковОрганизации.Ссылка.Проведен
	|	И ОсновныеНачисленияРаботниковОрганизации.РайонныйКоэффициент <> 0 "
	+ ?(ОтборОрганизации, 
		" И ОсновныеНачисленияРаботниковОрганизации.Ссылка.Организация " + ВидСравненияОрганизацииСтрокой + " (&Организация)" , "")
	+ ?(ОтборРаботника, 	
		" И ОсновныеНачисленияРаботниковОрганизации.Сотрудник.ФизЛицо " + ВидСравненияРаботник + "(&РаботникиОрганизации)", "")
	+ "
	|
	|СГРУППИРОВАТЬ ПО
	|	ОсновныеНачисленияРаботниковОрганизации.Ссылка,
	|	ОсновныеНачисленияРаботниковОрганизации.Ссылка.Организация,
	|	ОсновныеНачисленияРаботниковОрганизации.Ссылка.ПериодРегистрации,
	|	ОсновныеНачисленияРаботниковОрганизации.Сотрудник.Физлицо,
	|	ОсновныеНачисленияРаботниковОрганизации.Сотрудник,
	|	ОсновныеНачисленияРаботниковОрганизации.НомерСтроки,
	|	""Районный коэффициент"" + ВЫБОР
	|		КОГДА ЕСТЬNULL(ОсновныеНачисленияРаботниковОрганизации.Сотрудник.ВидЗанятости, &ЗанятостьНеУказана) <> &ВнутреннееСовместительство
	|			ТОГДА """"
	|		ИНАЧЕ "" (по внутр. совмест-ву)""
	|	КОНЕЦ,
	|	""А"" + ОсновныеНачисленияРаботниковОрганизации.ВидРасчета.Код
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	1,
	|	ОсновныеНачисленияРаботниковОрганизации.Ссылка,
	|	ОсновныеНачисленияРаботниковОрганизации.Ссылка.Организация,
	|	ОсновныеНачисленияРаботниковОрганизации.Ссылка.ПериодРегистрации,
	|	ОсновныеНачисленияРаботниковОрганизации.Сотрудник.Физлицо,
	|	ОсновныеНачисленияРаботниковОрганизации.Сотрудник,
	|	""Северная надбавка"" + ВЫБОР
	|		КОГДА ЕСТЬNULL(ОсновныеНачисленияРаботниковОрганизации.Сотрудник.ВидЗанятости, &ЗанятостьНеУказана) <> &ВнутреннееСовместительство
	|			ТОГДА """"
	|		ИНАЧЕ "" (по внутр. совмест-ву)""
	|	КОНЕЦ,
	|	""А"" + ОсновныеНачисленияРаботниковОрганизации.ВидРасчета.Код,
	|	ОсновныеНачисленияРаботниковОрганизации.НомерСтроки,
	|	СУММА(ОсновныеНачисленияРаботниковОрганизации.СевернаяНадбавка),
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	Документ.НачислениеЗарплатыРаботникамОрганизаций.Начисления КАК ОсновныеНачисленияРаботниковОрганизации
	|ГДЕ
	|	ОсновныеНачисленияРаботниковОрганизации.Ссылка.ПериодРегистрации МЕЖДУ &ПериодРегистрации И &КонецПериодаРегистрации
	|	И ОсновныеНачисленияРаботниковОрганизации.Ссылка.Проведен
	|	И ОсновныеНачисленияРаботниковОрганизации.СевернаяНадбавка <> 0 "
	+ ?(ОтборОрганизации, 
		" И ОсновныеНачисленияРаботниковОрганизации.Ссылка.Организация " + ВидСравненияОрганизацииСтрокой + " (&Организация)" , "")
	+ ?(ОтборРаботника, 	
		" И ОсновныеНачисленияРаботниковОрганизации.Сотрудник.ФизЛицо " + ВидСравненияРаботник + "(&РаботникиОрганизации)", "")
	+ "
	|
	|СГРУППИРОВАТЬ ПО
	|	ОсновныеНачисленияРаботниковОрганизации.Ссылка,
	|	ОсновныеНачисленияРаботниковОрганизации.Ссылка.Организация,
	|	ОсновныеНачисленияРаботниковОрганизации.Ссылка.ПериодРегистрации,
	|	ОсновныеНачисленияРаботниковОрганизации.Сотрудник.Физлицо,
	|	ОсновныеНачисленияРаботниковОрганизации.Сотрудник,
	|	ОсновныеНачисленияРаботниковОрганизации.НомерСтроки,
	|	""Районный коэффициент"" + ВЫБОР
	|		КОГДА ЕСТЬNULL(ОсновныеНачисленияРаботниковОрганизации.Сотрудник.ВидЗанятости, &ЗанятостьНеУказана) <> &ВнутреннееСовместительство
	|			ТОГДА """"
	|		ИНАЧЕ "" (по внутр. совмест-ву)""
	|	КОНЕЦ,
	|	""А"" + ОсновныеНачисленияРаботниковОрганизации.ВидРасчета.Код,
	|	""Северная надбавка"" + ВЫБОР
	|		КОГДА ЕСТЬNULL(ОсновныеНачисленияРаботниковОрганизации.Сотрудник.ВидЗанятости, &ЗанятостьНеУказана) <> &ВнутреннееСовместительство
	|			ТОГДА """"
	|		ИНАЧЕ "" (по внутр. совмест-ву)""
	|	КОНЕЦ";
	
	//Если ОтборОрганизации Тогда
	//	ТекстЗапроса = ТекстЗапроса + " И ОсновныеНачисленияРаботниковОрганизации.Ссылка.Организация " + ВидСравненияОрганизацииСтрокой + " (&Организация)";
	//КонецЕсли;
	//
	//Если ОтборРаботника Тогда
	//	ТекстЗапроса = ТекстЗапроса + " И ОсновныеНачисленияРаботниковОрганизации.Сотрудник.ФизЛицо " + ВидСравненияРаботник + "(&РаботникиОрганизации)";
	//КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса	+
	"		
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		7,
	|		NULL,
	|		НДФЛСведенияОДоходах.ОбособленноеПодразделение,
	|		НАЧАЛОПЕРИОДА(НДФЛСведенияОДоходах.Период, МЕСЯЦ),
	|		НДФЛСведенияОДоходах.ФизЛицо,
	|		NULL,
	|		""Мат. выгода по займам (кредитам)"",
	|		""Б9"",
	|		NULL,
	|		СУММА(НДФЛСведенияОДоходах.СуммаДохода),
	|		0,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL
	|	ИЗ
	|		РегистрНакопления.НДФЛСведенияОДоходах КАК НДФЛСведенияОДоходах
	|	ГДЕ
	|		НДФЛСведенияОДоходах.Период МЕЖДУ &ПериодРегистрации И &КонецПериодаРегистрации
	|		И НДФЛСведенияОДоходах.КодДохода В(&КодыМатвыгоды)
	|		И НДФЛСведенияОДоходах.ИсчисленоИзЗарплаты";
	
	Если ОтборОрганизации Тогда
		ТекстЗапроса = ТекстЗапроса + " И НДФЛСведенияОДоходах.ОбособленноеПодразделение " + ВидСравненияОрганизацииСтрокой + " (&Организация)";
	КонецЕсли;
	
	Если ОтборРаботника Тогда
		ТекстЗапроса = ТекстЗапроса + " И НДФЛСведенияОДоходах.ФизЛицо " + ВидСравненияРаботник + "(&РаботникиОрганизации)";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса	+
	"		
	|
	|	СГРУППИРОВАТЬ ПО
	|		НДФЛСведенияОДоходах.ОбособленноеПодразделение,
	|		НАЧАЛОПЕРИОДА(НДФЛСведенияОДоходах.Период, МЕСЯЦ),
	|		НДФЛСведенияОДоходах.ФизЛицо
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		3,
	|		NULL,
	|		НДФЛРасчетыСБюджетом.ОбособленноеПодразделение,
	|		НДФЛРасчетыСБюджетом.ПериодРегистрации,
	|		НДФЛРасчетыСБюджетом.ФизЛицо,
	|		NULL,
	|		""НДФЛ исчисленный "" + ВЫБОР
	|			КОГДА НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента = &Общая
	|				ТОГДА ""по ставке 13(30)%""
	|			КОГДА НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента = &Дивиденды
	|				ТОГДА ""по дивидендам""
	|			ИНАЧЕ ""по ставке 35%""
	|		КОНЕЦ,
	|		""Б"",
	|		NULL,
	|		0,
	|		СУММА(НДФЛРасчетыСБюджетом.Налог),
	|		СУММА(НФДЛВычетыФизЛиц.ВычетНаФизлицо) КАК ВычетНаФизлицо,
	|	СУММА(НФДЛВычетыФизЛиц.ВычетНаДетей) КАК ВычетНаДетей,
	|	NULL,
	|	NULL
	|	ИЗ
	|	(ВЫБРАТЬ
	|	 НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.Период, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	 НДФЛРасчетыСБюджетом.ФизЛицо,
	|	 НДФЛРасчетыСБюджетом.Организация,
	|	 НДФЛРасчетыСБюджетом.ОбособленноеПодразделение,
	|	 НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента,
	|	 СУММА(НДФЛРасчетыСБюджетом.Налог) КАК Налог,
	|	 НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.Период, МЕСЯЦ) КАК ПериодРегистрации
	|	ИЗ
	|	РегистрНакопления.НДФЛРасчетыСБюджетом КАК НДФЛРасчетыСБюджетом

	|	ГДЕ
	|	НДФЛРасчетыСБюджетом.ВидСтроки = &ВидСтроки
	|		И НДФЛРасчетыСБюджетом.ИсчисленоИзЗарплаты
	|		И НДФЛРасчетыСБюджетом.Период МЕЖДУ &ПериодРегистрации И &КонецПериодаРегистрации ";

	Если ОтборОрганизации Тогда
		ТекстЗапроса = ТекстЗапроса + " И НДФЛРасчетыСБюджетом.ОбособленноеПодразделение " + ВидСравненияОрганизацииСтрокой + " (&Организация)";
	КонецЕсли;
	
	Если ОтборРаботника Тогда
		ТекстЗапроса = ТекстЗапроса + " И НДФЛРасчетыСБюджетом.ФизЛицо " + ВидСравненияРаботник + "(&РаботникиОрганизации)";
	КонецЕсли;

	ТекстЗапроса = ТекстЗапроса	+
	"		
	|	
	|	СГРУППИРОВАТЬ ПО
	|		НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.Период, МЕСЯЦ),
	|		НДФЛРасчетыСБюджетом.ФизЛицо,
	|	 	НДФЛРасчетыСБюджетом.Организация,
	|	 	НДФЛРасчетыСБюджетом.ОбособленноеПодразделение,
	|	 	НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента,
	|	 	НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.Период, МЕСЯЦ) 
	|	) КАК НДФЛРасчетыСБюджетом
    |	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		(ВЫБРАТЬ
	|			 СУММА(ВЫБОР
	|				КОГДА НФДЛВычетыФизЛиц.КодВычета В (ЗНАЧЕНИЕ(Справочник.ВычетыНДФЛ.Код103),ЗНАЧЕНИЕ(Справочник.ВычетыНДФЛ.Код104),ЗНАЧЕНИЕ(Справочник.ВычетыНДФЛ.Код105))
	|					ТОГДА НФДЛВычетыФизЛиц.ПримененныйВычет
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК ВычетНаФизлицо,
	|			СУММА(ВЫБОР
	|				КОГДА НФДЛВычетыФизЛиц.КодВычета В (ЗНАЧЕНИЕ(Справочник.ВычетыНДФЛ.Код101),ЗНАЧЕНИЕ(Справочник.ВычетыНДФЛ.Код102),ЗНАЧЕНИЕ(Справочник.ВычетыНДФЛ.Код106),ЗНАЧЕНИЕ(Справочник.ВычетыНДФЛ.Код107),ЗНАЧЕНИЕ(Справочник.ВычетыНДФЛ.Код111),ЗНАЧЕНИЕ(Справочник.ВычетыНДФЛ.Код113))
	|					ТОГДА НФДЛВычетыФизЛиц.ПримененныйВычет
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК ВычетНаДетей,
	|			НФДЛВычетыФизЛиц.ФизЛицо,
	|			НФДЛВычетыФизЛиц.Организация,
	|			НАЧАЛОПЕРИОДА(НФДЛВычетыФизЛиц.Период, МЕСЯЦ) КАК МесяцНалоговогоПериода
	|		ИЗ
	|			РегистрНакопления.НДФЛПредоставленныеСтандартныеВычетыФизЛиц КАК НФДЛВычетыФизЛиц
	|		СГРУППИРОВАТЬ ПО
	|			НФДЛВычетыФизЛиц.ФизЛицо,
	|			НФДЛВычетыФизЛиц.Организация,
	|			НФДЛВычетыФизЛиц.Период
	|	  ) КАК НФДЛВычетыФизЛиц
	|
	|	ПО	
	|		НФДЛВычетыФизЛиц.ФизЛицо = НДФЛРасчетыСБюджетом.ФизЛицо
	|		И НФДЛВычетыФизЛиц.Организация = НДФЛРасчетыСБюджетом.Организация
	|		И НФДЛВычетыФизЛиц.МесяцНалоговогоПериода = НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода
	|	
	|	СГРУППИРОВАТЬ ПО
	|		НДФЛРасчетыСБюджетом.ОбособленноеПодразделение,
	|		НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента,
	|		НДФЛРасчетыСБюджетом.ПериодРегистрации,
	|		НДФЛРасчетыСБюджетом.ФизЛицо
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		8,
	| 		NULL,
	|		Взаиморасчеты.Организация,
	|		НАЧАЛОПЕРИОДА(Взаиморасчеты.Период, МЕСЯЦ),
	|		Взаиморасчеты.Физлицо,
	|		NULL,
	|		""Выплачено"",
	|		""Г"",
	|		NULL,
	|		0,
	|		СУММА(Взаиморасчеты.СуммаВзаиморасчетов),
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL
	|	ИЗ
	|		РегистрНакопления.ВзаиморасчетыСРаботникамиОрганизаций КАК Взаиморасчеты
	|	ГДЕ
	|		Взаиморасчеты.ВидДвижения = &Расход
	|		И Взаиморасчеты.СуммаВзаиморасчетов <> 0
	|		И Взаиморасчеты.Период МЕЖДУ &ПериодРегистрации И &КонецПериодаРегистрации";
	
	Если ОтборОрганизации Тогда
		ТекстЗапроса = ТекстЗапроса + " И Взаиморасчеты.Организация " + ВидСравненияОрганизацииСтрокой + " (&Организация)";
	КонецЕсли;
	
	Если ОтборРаботника Тогда
		ТекстЗапроса = ТекстЗапроса + " И Взаиморасчеты.ФизЛицо " + ВидСравненияРаботник + "(&РаботникиОрганизации)";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса	+
	"		
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Взаиморасчеты.Организация,
	|		Взаиморасчеты.Физлицо,
	|		НАЧАЛОПЕРИОДА(Взаиморасчеты.Период, МЕСЯЦ)
	|		) КАК НачисленияУдержания
	|";
	
	УсловиеТекст						= "";
	УсловиеНаФизлицоТекст				= "";
	УсловиеНаФизлицоВСотрудникеТекст	= "";
	
	Если ОтборОрганизации Тогда
		УсловиеТекст = УсловиеТекст + "ОбособленноеПодразделение " + ВидСравненияОрганизацииСтрокой + " (&ГоловнаяОрганизация)";
	КонецЕсли;
	Если ОтборРаботника Тогда 
		УсловиеНаФизлицоТекст				= "ФизЛицо " + ВидСравненияРаботник + " (&РаботникиОрганизации)";
		УсловиеНаФизлицоВСотрудникеТекст	= "Сотрудник.ФизЛицо " + ВидСравненияРаботник + " (&РаботникиОрганизации)";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + " 
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Сальдо.Организация КАК Организация,
	|			НАЧАЛОПЕРИОДА(Сальдо.Период, МЕСЯЦ) КАК ПериодРегистрации,
	|			Сальдо.Физлицо КАК Физлицо,
	|			СУММА(Сальдо.СуммаВзаиморасчетовНачальныйОстаток) КАК СуммаВзаиморасчетовНачальныйОстаток,
	|			СУММА(Сальдо.СуммаВзаиморасчетовКонечныйОстаток) КАК СуммаВзаиморасчетовКонечныйОстаток
	|		ИЗ
	|			(ВЫБРАТЬ
	|				ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.Организация КАК Организация,
	|				ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.Период КАК Период,
	|				ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.Физлицо КАК Физлицо,
	|				ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.СуммаВзаиморасчетовНачальныйОстаток КАК СуммаВзаиморасчетовНачальныйОстаток,
	|				ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.СуммаВзаиморасчетовКонечныйОстаток КАК СуммаВзаиморасчетовКонечныйОстаток
	|		ИЗ
	|			РегистрНакопления.ВзаиморасчетыСРаботникамиОрганизаций.ОстаткиИОбороты(
	|			&ПериодРегистрации,
	|			&КонецПериодаРегистрации,
	|			Месяц,
	|			,
	|			" + УсловиеНаОрганизацию + ") КАК ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты
	|	
	|		ОБЪЕДИНИТЬ ВСЕ
	|	
	|		ВЫБРАТЬ
	|			НДФЛКЗачету.Организация,
	|			НДФЛКЗачету.Период,
	|			НДФЛКЗачету.ФизЛицо,
	|			НДФЛКЗачету.СуммаНДФЛКЗачетуНачальныйОстаток,
	|			НДФЛКЗачету.СуммаНДФЛКЗачетуКонечныйОстаток
	|		ИЗ
	|			РегистрНакопления.НДФЛКЗачету.ОстаткиИОбороты(
	|			&ПериодРегистрации,
	|			&КонецПериодаРегистрации,
	|			Месяц,
	|			,
	|			" + УсловиеНаОрганизацию + ") КАК НДФЛКЗачету) КАК Сальдо
	|		
	|		СГРУППИРОВАТЬ ПО
	|			Сальдо.Организация,
	|			Сальдо.Физлицо,
	|			НАЧАЛОПЕРИОДА(Сальдо.Период, МЕСЯЦ)) КАК Сальдо
	|		ПО НачисленияУдержания.ФизЛицо = Сальдо.Физлицо
	|			И НачисленияУдержания.Организация = Сальдо.Организация
	|			И НачисленияУдержания.ПериодРегистрации = Сальдо.ПериодРегистрации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&КонецПериодаРегистрации, " + УсловиеНаФизлицоТекст + ") КАК ФИОФизЛицСрезПоследних

	|		ПО (ЕСТЬNULL(НачисленияУдержания.ФизЛицо, Сальдо.Физлицо) = ФИОФизЛицСрезПоследних.ФизЛицо)
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			НДФЛИмущественныеВычетыФизлицОбороты.РазмерРасход КАК РазмерРасход,
	|			НДФЛИмущественныеВычетыФизлицОбороты.ФизЛицо КАК ФизЛицо,
	|			НДФЛИмущественныеВычетыФизлицОбороты.Период КАК Период
	|		ИЗ
	|			РегистрНакопления.НДФЛИмущественныеВычетыФизлиц.Обороты(&ПериодРегистрации, &КонецПериодаРегистрации, Месяц, " + УсловиеНаОрганизацию + ") КАК НДФЛИмущественныеВычетыФизлицОбороты
	|		
	|		) КАК ИмущественныйВычет
	|		ПО ЕСТЬNULL(НачисленияУдержания.ФизЛицо, Сальдо.Физлицо) = ИмущественныйВычет.ФизЛицо
	|			И ЕСТЬNULL(НачисленияУдержания.ПериодРегистрации, Сальдо.ПериодРегистрации) = ИмущественныйВычет.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			АктуальныеПриказы.ПериодРегистрации КАК ПериодРегистрации,
	|			РаботникиОрганизацийСрезПоследних.Сотрудник.Физлицо КАК Физлицо,
	|			РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|			РаботникиОрганизацийСрезПоследних.Должность КАК Должность,
	|			РаботникиОрганизацийСрезПоследних.Сотрудник.Код КАК ТабельныйНомер,
	|			РаботникиОрганизацийСрезПоследних.Организация КАК Организация
	|		ИЗ
	|			(ВЫБРАТЬ
	|				ПоследниеДаты.ПериодРегистрации КАК ПериодРегистрации,
	|				РаботникиОрганизаций.Сотрудник КАК Сотрудник
	|			ИЗ
	|				(ВЫБРАТЬ
	|					Периоды.Период КАК ПериодРегистрации, 
	|					МАКСИМУМ(РаботникиОрганизаций.Период) КАК Период,
	|					РаботникиОрганизаций.Сотрудник.Физлицо КАК Физлицо,
	|					РаботникиОрганизаций.Организация КАК Организация
	|				ИЗ
	|					("+ПериодыТекст+") КАК Периоды
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|					ПО РаботникиОрганизаций.Период <= КОНЕЦПЕРИОДА(Периоды.Период, МЕСЯЦ)
	|				ГДЕ
	|					РаботникиОрганизаций.ПричинаИзмененияСостояния = &Прием
	|					И (РаботникиОрганизаций.Сотрудник.ВидЗанятости <> &ВнутреннееСовместительство)";

		Если ОтборРаботника Тогда
			ТекстЗапроса = ТекстЗапроса + " И РаботникиОрганизаций." + УсловиеНаФизлицоВСотрудникеТекст
		КонецЕсли;
		ТекстЗапроса = ТекстЗапроса +
	"
	|				СГРУППИРОВАТЬ ПО
	|					Периоды.Период,
	|					РаботникиОрганизаций.Сотрудник.Физлицо,
	|					РаботникиОрганизаций.Организация) КАК ПоследниеДаты
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|					ПО ПоследниеДаты.Период = РаботникиОрганизаций.Период
	|						И (РаботникиОрганизаций.ПричинаИзмененияСостояния = &Прием)
	|						И (РаботникиОрганизаций.Сотрудник.ВидЗанятости <> &ВнутреннееСовместительство)
	|						И ПоследниеДаты.Организация = РаботникиОрганизаций.Организация
	|						И ПоследниеДаты.Физлицо = РаботникиОрганизаций.Сотрудник.Физлицо";
		Если ОтборОрганизации Тогда
			ТекстЗапроса = ТекстЗапроса + Символы.ПС + " ГДЕ " + Символы.ПС + "РаботникиОрганизаций." + УсловиеТекст
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса +
	"
	|				) КАК АктуальныеПриказы
 	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				ПоследниеДаты.ПериодРегистрации КАК ПериодРегистрации,
	|				РаботникиОрганизаций.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|				РаботникиОрганизаций.Должность КАК Должность,
	|				РаботникиОрганизаций.Сотрудник.Код КАК ТабельныйНомер,
	|				РаботникиОрганизаций.Сотрудник КАК Сотрудник,
	|				РаботникиОрганизаций.Организация КАК Организация
	|			ИЗ
	|				(ВЫБРАТЬ
	|					Периоды.Период КАК ПериодРегистрации, 
	|					МАКСИМУМ(РаботникиОрганизаций.Период) КАК Период,
	|					РаботникиОрганизаций.Сотрудник КАК Сотрудник
	|				ИЗ
	|					("+ПериодыТекст+") КАК Периоды
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|					ПО РаботникиОрганизаций.Период <= КОНЕЦПЕРИОДА(Периоды.Период, МЕСЯЦ)
	|				ГДЕ
	|					(РаботникиОрганизаций.Сотрудник.ВидЗанятости <> &ВнутреннееСовместительство)";
		Если ОтборРаботника Тогда
			ТекстЗапроса = ТекстЗапроса + " И РаботникиОрганизаций." + УсловиеНаФизлицоВСотрудникеТекст
		КонецЕсли;
		ТекстЗапроса = ТекстЗапроса +
	"
	|				СГРУППИРОВАТЬ ПО
	|					Периоды.Период,
	|					РаботникиОрганизаций.Сотрудник) КАК ПоследниеДаты
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|					ПО ПоследниеДаты.Период = РаботникиОрганизаций.Период
	|						И ПоследниеДаты.Сотрудник = РаботникиОрганизаций.Сотрудник";
		Если ОтборОрганизации Тогда
			ТекстЗапроса = ТекстЗапроса + Символы.ПС + " ГДЕ " + Символы.ПС + "РаботникиОрганизаций." + УсловиеТекст
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса +
	"
	|			) КАК РаботникиОрганизацийСрезПоследних
	|				ПО АктуальныеПриказы.Сотрудник = РаботникиОрганизацийСрезПоследних.Сотрудник
	|					И АктуальныеПриказы.ПериодРегистрации = РаботникиОрганизацийСрезПоследних.ПериодРегистрации) КАК РаботникиОрганизацииСрезПоследних
	|		ПО ЕСТЬNULL(НачисленияУдержания.ФизЛицо, Сальдо.Физлицо) = РаботникиОрганизацииСрезПоследних.Физлицо
	|			И ЕСТЬNULL(НачисленияУдержания.ПериодРегистрации, Сальдо.ПериодРегистрации) = РаботникиОрганизацииСрезПоследних.ПериодРегистрации
	|			И (РаботникиОрганизацииСрезПоследних.Организация = ВЫБОР
	|				КОГДА НачисленияУдержания.Организация.ГоловнаяОрганизация = &парамПустаяОрганизация
	|					ТОГДА НачисленияУдержания.Организация
	|				ИНАЧЕ НачисленияУдержания.Организация.ГоловнаяОрганизация
	|			КОНЕЦ)
	|			";
	
	Если ОтборПодразделения Тогда
		
		ЗапросРЛ.УстановитьПараметр("ПодразделениеОрганизации", Подразделение);
	
		Если ВидСравненияПодразделения = ВидСравнения.Равно Тогда
			ВидСравненияПодразделение = "= &ПодразделениеОрганизации" 
		ИначеЕсли ВидСравненияПодразделения = ВидСравнения.НеРавно Тогда
			ВидСравненияПодразделение = "<> &ПодразделениеОрганизации"
		ИначеЕсли ВидСравненияПодразделения = ВидСравнения.ВСписке Тогда
			ВидСравненияПодразделение = "В (&ПодразделениеОрганизации)"
		ИначеЕсли ВидСравненияПодразделения = ВидСравнения.НеВСписке Тогда
			ВидСравненияПодразделение = "НЕ В (&ПодразделениеОрганизации)"
		ИначеЕсли ВидСравненияПодразделения = ВидСравнения.ВСпискеПоИерархии ИЛИ 
			ВидСравненияПодразделения = ВидСравнения.ВИерархии Тогда
			ВидСравненияПодразделение = "В ИЕРАРХИИ (&ПодразделениеОрганизации)"
		ИначеЕсли ВидСравненияПодразделения = ВидСравнения.НеВСпискеПоИерархии ИЛИ 
			ВидСравненияПодразделения = ВидСравнения.НеВИерархии Тогда
			ВидСравненияПодразделение = "НЕ В ИЕРАРХИИ (&ПодразделениеОрганизации)"
		КонецЕсли; 
	
		ТекстЗапроса = ТекстЗапроса	+ "		
		|	ГДЕ
		|		РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизации " + ВидСравненияПодразделение;
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса	+
	"		
	|УПОРЯДОЧИТЬ ПО
	|	ПериодРегистрации,
	|	ОрганизацияНаименование,
	|	ФИОФизлица,
	|	ВидДвижения,
	|	ПорядокВидаРасчета,
	|	ПериодДействияНачало,
	|	НомерСтроки
	|
	|ИТОГИ
	|	МИНИМУМ(ПериодДействияНачало),
	|	МАКСИМУМ(ПериодДействияКонец),
	|	СУММА(Начисления),
	|	СУММА(Удержания),
	|	СУММА(ВычетНаФизлицо),
	|	СУММА(ВычетНаДетей),
	|	МАКСИМУМ(ВычетИмущественный),
	|	МАКСИМУМ(СуммаВзаиморасчетовНачальныйОстаток),
	|	МАКСИМУМ(СуммаВзаиморасчетовКонечныйОстаток)
	|	ПО
	|		ПериодРегистрации,
	|		Организация,
	|	ПодразделениеОрганизации,
	|	ФИОФизлица, // для сортировки по алфавиту
	|	ФизЛицо";
	
	ЗапросРЛ.Текст = ТекстЗапроса;
	
	Возврат ЗапросРЛ.Выполнить();
	
КонецФункции // ПолучитьРезультатЗапроса()

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ 
// 

Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок = Ложь, ВысотаЗаголовка = 0, ТолькоЗаголовок = Ложь, ОчищатьТабличныйДокумент = Истина) Экспорт

	Если НЕ ЗначениеЗаполнено(ДатаНач) Тогда
	
		Сообщить("Не указана дата начала периода!", СтатусСообщения.Важное);
		Возврат
	
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ДатаКон) Тогда
		
		Сообщить("Не указана дата окончания периода!", СтатусСообщения.Важное);
		Возврат
		
	КонецЕсли;
	
	// Не всегда будем очищать Табличный документ, например, когда РЛ будут печататься из формы Т54а, то очистка не нужна
	Если ОчищатьТабличныйДокумент Тогда
	    ДокументРезультат.Очистить();
	КонецЕсли; 
	
	Макет 			  		 = ПолучитьМакет("Макет");
	ОбластьШапка 	  		 = Макет.ПолучитьОбласть("Шапка");
	ОбластьЗаголовокТЧ		 = Макет.ПолучитьОбласть("Заголовок");
	ОбластьНачисленоУдержано = Макет.ПолучитьОбласть("НачисленоУдержано");
	ОбластьВсего             = Макет.ПолучитьОбласть("Всего");
	ОбластьПодвал			 = Макет.ПолучитьОбласть("Подвал");
	ОбластьОтбивка			 = Макет.ПолучитьОбласть("Отбивка");
	Линия					 = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная, 1);
	
	РезультатЗапроса = ПолучитьРезультатЗапроса();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Запрос = Новый Запрос();
	ФПДУсловиеТекст = 
	"ПериодРегистрации МЕЖДУ &ПериодРегистрации И &КонецПериодаРегистрации";
		
	Если ОтборОрганизации Тогда
		
		Запрос.УстановитьПараметр("Организация", Организация);
		
		Если ВидСравненияОрганизации = ВидСравнения.Равно Тогда
			ВидСравненияОрганизацииСтрокой = "=" 
		ИначеЕсли ВидСравненияОрганизации = ВидСравнения.НеРавно Тогда
			ВидСравненияОрганизацииСтрокой = "<>"
		ИначеЕсли ВидСравненияОрганизации = ВидСравнения.ВСписке Тогда
			ВидСравненияОрганизацииСтрокой = "В"
		Иначе
			ВидСравненияОрганизацииСтрокой = "НЕ В"
		КонецЕсли; 
		
		ФПДУсловиеТекст = ФПДУсловиеТекст + " И Организация " + ВидСравненияОрганизацииСтрокой + " (&Организация)";
	КонецЕсли;  
	
	Если ОтборРаботника Тогда
		
		Запрос.УстановитьПараметр("РаботникиОрганизации", Работник);
	
		Если ВидСравненияРаботника = ВидСравнения.Равно Тогда
			ВидСравненияРаботник = "=" 
		ИначеЕсли ВидСравненияРаботника = ВидСравнения.НеРавно Тогда
			ВидСравненияРаботник = "<>"
		ИначеЕсли ВидСравненияРаботника = ВидСравнения.ВСписке Тогда
			ВидСравненияРаботник = "В"
		ИначеЕсли ВидСравненияРаботника = ВидСравнения.НеВСписке Тогда
			ВидСравненияРаботник = "НЕ В"
		ИначеЕсли ВидСравненияРаботника = ВидСравнения.ВСпискеПоИерархии ИЛИ 
			ВидСравненияРаботника = ВидСравнения.ВИерархии Тогда
			ВидСравненияРаботник = "В ИЕРАРХИИ"
		ИначеЕсли ВидСравненияРаботника = ВидСравнения.НеВСпискеПоИерархии ИЛИ 
			ВидСравненияРаботника = ВидСравнения.НеВИерархии Тогда
			ВидСравненияРаботник = "НЕ В ИЕРАРХИИ"
		КонецЕсли; 
	
		ФПДУсловиеТекст = ФПДУсловиеТекст + " И Сотрудник.ФизЛицо " + ВидСравненияРаботник + " (&РаботникиОрганизации)";
	КонецЕсли; 
	
	Запрос.УстановитьПараметр("ПериодРегистрации", 	  		 ДатаНач);
	Запрос.УстановитьПараметр("КонецПериодаРегистрации", 	 КонецДня(ДатаКон));
	
	
	// В этот табличный документ будет собираться данные для РЛ до проверки на возможность его вывода (по количеству строк)
	ВременныйТабличныйДокумент = Новый ТабличныйДокумент;
	
	ВыборкаПоПериоду = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаПоПериоду.Следующий() Цикл
	
		ТекстПериода  	   = Формат(ВыборкаПоПериоду.ПериодРегистрации, "ДФ = 'ММММ гггг ''г.'''");
		ОбластьОтбивка.Параметры.ТекстОтбивки = ТекстПериода;
		Если Группировать и (ЗначениеЗаполнено(ВыборкаПоПериоду.Начисления) или ЗначениеЗаполнено(ВыборкаПоПериоду.Удержания) или ЗначениеЗаполнено(ВыборкаПоПериоду.СуммаВзаиморасчетовНачальныйОстаток) или ЗначениеЗаполнено(ВыборкаПоПериоду.СуммаВзаиморасчетовКонечныйОстаток)) Тогда
			ДокументРезультат.Вывести(ОбластьОтбивка);
			ДокументРезультат.НачатьГруппуСтрок(ТекстПериода,);
		КонецЕсли;
		
		ВыборкаПоОрганизации = ВыборкаПоПериоду.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаПоОрганизации.Следующий() Цикл
		
			СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(ВыборкаПоОрганизации.Организация);
			ТекстОрганизация = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм");
			ОбластьОтбивка.Параметры.ТекстОтбивки = "Организация: " + ТекстОрганизация;
			Если Группировать и (ЗначениеЗаполнено(ВыборкаПоОрганизации.Начисления) или ЗначениеЗаполнено(ВыборкаПоОрганизации.Удержания) или ЗначениеЗаполнено(ВыборкаПоОрганизации.СуммаВзаиморасчетовНачальныйОстаток) или ЗначениеЗаполнено(ВыборкаПоОрганизации.СуммаВзаиморасчетовКонечныйОстаток)) Тогда
				ДокументРезультат.Вывести(ОбластьОтбивка);
				ДокументРезультат.НачатьГруппуСтрок(ТекстОрганизация,);
			КонецЕсли;
			
			ВыборкаПоПодразделению = ВыборкаПоОрганизации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаПоПодразделению.Следующий() Цикл
				
				ТекстПодразделения = Строка(ВыборкаПоПодразделению.ПодразделениеОрганизации);
				ОбластьОтбивка.Параметры.ТекстОтбивки = "Подразделение: " + ТекстПодразделения;
				Если Группировать и (ЗначениеЗаполнено(ВыборкаПоПодразделению.Начисления) или ЗначениеЗаполнено(ВыборкаПоПодразделению.Удержания) или ЗначениеЗаполнено(ВыборкаПоПодразделению.СуммаВзаиморасчетовНачальныйОстаток) или ЗначениеЗаполнено(ВыборкаПоПодразделению.СуммаВзаиморасчетовКонечныйОстаток)) Тогда
					ДокументРезультат.Вывести(ОбластьОтбивка);
					ДокументРезультат.НачатьГруппуСтрок(ТекстПодразделения,);
				КонецЕсли;
			
				ВыборкаПоФИО = ВыборкаПоПодразделению.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаПоФИО.Следующий() Цикл
					ВыборкаПоФЛ = ВыборкаПоФИО.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ВыборкаПоФЛ.Следующий() Цикл
						
						
						// Данные для подвала
						СуммаНаНачалоПериода = ВыборкаПоФЛ.СуммаВзаиморасчетовНачальныйОстаток;
						СуммаНаКонецПериода  = ВыборкаПоФЛ.СуммаВзаиморасчетовКонечныйОстаток;
						
						// Если нечего выводить.
						Если НЕ ЗначениеЗаполнено(ВыборкаПоФЛ.Начисления)  
							 И НЕ ЗначениеЗаполнено(ВыборкаПоФЛ.Удержания)
							 И НЕ ЗначениеЗаполнено(СуммаНаНачалоПериода)
							 И НЕ ЗначениеЗаполнено(СуммаНаКонецПериода) Тогда
							Продолжить
						КонецЕсли; 
						
					// Очистим временный табличный документ
					ВременныйТабличныйДокумент.Очистить();
					
						ОбластьШапка.Параметры.ВычетНаФизлицо = ВыборкаПоФЛ.ВычетНаФизлицо;
						ОбластьШапка.Параметры.ВычетНаДетей = ВыборкаПоФЛ.ВычетНаДетей;
						ОбластьШапка.Параметры.ВычетИмущественный = ВыборкаПоФЛ.ВычетИмущественный;
						
						ТекстДолжность 	   = ВыборкаПоФЛ.Должность;
						ТекстТабНомер	   = ВыборкаПоФЛ.ТабельныйНомер;
						ТекстРаботник 	   = ВыборкаПоФЛ.ФИОФизлица;

						
						МестоРаботы = ВыборкаПоФЛ.Выбрать();
						Пока МестоРаботы.Следующий() Цикл
							Если МестоРаботы.ТипЗаписи() = ТипЗаписиЗапроса.ДетальнаяЗапись Тогда

								ТекстДолжность 	   = МестоРаботы.Должность;
								ТекстТабНомер	   = МестоРаботы.ТабельныйНомер;
								ТекстРаботник 	   = МестоРаботы.ФИОФизлица;
								Прервать;
							КонецЕсли;
						КонецЦикла; 
						
						ОбластьШапка.Параметры.Организация	   = "Организация: " + ТекстОрганизация;
						ОбластьШапка.Параметры.Заголовок 	   = "Расчетный листок за " + ТекстПериода;
						ОбластьШапка.Параметры.Работник 	   = "Работник: " + ТекстРаботник;
						ОбластьШапка.Параметры.Подразделение   = "Подразделение: " + ТекстПодразделения;
						ОбластьШапка.Параметры.Должность 	   = "Должность: " + ТекстДолжность;
						//ОбластьШапка.Параметры.ТабНомер 	   = "Табельный номер: " + ТекстТабНомер;
						
						ВременныйТабличныйДокумент.Вывести(ОбластьШапка);
						ВременныйТабличныйДокумент.Вывести(ОбластьЗаголовокТЧ);
						ВременныйТабличныйДокумент.Вывести(ОбластьНачисленоУдержано);
						
						ВысотаТаблицы = ВременныйТабличныйДокумент.ВысотаТаблицы + 1;
						
						ВсегоНачисления = 0; КоличествоНачислений = 0;
						ВсегоУдержания = 0; КоличествоУдержаний  = 0;
						ИтогиНачисленийИУдержанийВыведены = Ложь;
						
						ВыборкаСтрокРасчетногоЛистка = ВыборкаПоФЛ.Выбрать();
						Пока ВыборкаСтрокРасчетногоЛистка.Следующий() Цикл
							Если НЕ ЗначениеЗаполнено(ВыборкаСтрокРасчетногоЛистка.ПериодДействияКонец) Тогда
								ДатаОкончанияПериода = КонецМесяца(ВыборкаСтрокРасчетногоЛистка.ПериодДействияНачало);
							Иначе
								ДатаОкончанияПериода = ВыборкаСтрокРасчетногоЛистка.ПериодДействияКонец
							КонецЕсли; 
							
							Если ВыборкаСтрокРасчетногоЛистка.ВидДвижения < 3 Тогда
								НомерСтроки = ВысотаТаблицы + КоличествоНачислений;
								ВременныйТабличныйДокумент.Область(НомерСтроки, 1).Текст = ВыборкаСтрокРасчетногоЛистка.ВидРасчета;
								ВременныйТабличныйДокумент.Область(НомерСтроки, 1).РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Переносить;
								
								ВременныйТабличныйДокумент.Область(НомерСтроки, 2, НомерСтроки, 2).Текст = УправлениеОтчетами.ОписаниеПериода(ВыборкаСтрокРасчетногоЛистка.ПериодДействияНачало, ДатаОкончанияПериода);
								ВременныйТабличныйДокумент.Область(НомерСтроки, 2, НомерСтроки, 2).РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Переносить;
								ВременныйТабличныйДокумент.Область(НомерСтроки, 2, НомерСтроки, 2).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;
								ВременныйТабличныйДокумент.Область(НомерСтроки, 2, НомерСтроки, 3).Объединить();
								
								ВременныйТабличныйДокумент.Область(НомерСтроки, 6, НомерСтроки, 6).Текст = Формат(ВыборкаСтрокРасчетногоЛистка.Начисления,"ЧЦ=15; ЧДЦ=2");
								ВременныйТабличныйДокумент.Область(НомерСтроки, 6, НомерСтроки, 6).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;
								ВременныйТабличныйДокумент.Область(НомерСтроки, 6, НомерСтроки, 7).Объединить();
								
								КоличествоНачислений = КоличествоНачислений + 1;
								ВсегоНачисления = ВсегоНачисления + ВыборкаСтрокРасчетногоЛистка.Начисления;
								
							ИначеЕсли ВыборкаСтрокРасчетногоЛистка.ВидДвижения < 6 Тогда
								
								НомерСтроки = ВысотаТаблицы + КоличествоУдержаний;
								ВременныйТабличныйДокумент.Область(НомерСтроки, 8 , НомерСтроки, 8).Текст = ВыборкаСтрокРасчетногоЛистка.ВидРасчета;
								ВременныйТабличныйДокумент.Область(НомерСтроки, 8 , НомерСтроки, 8).РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Переносить;
								ВременныйТабличныйДокумент.Область(НомерСтроки, 8 , НомерСтроки, 8).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Лево;
								ВременныйТабличныйДокумент.Область(НомерСтроки, 8 , НомерСтроки, 10).Объединить();
								
								ВременныйТабличныйДокумент.Область(НомерСтроки, 11, НомерСтроки, 11).Текст = УправлениеОтчетами.ОписаниеПериода(ВыборкаСтрокРасчетногоЛистка.ПериодДействияНачало, ДатаОкончанияПериода);
								ВременныйТабличныйДокумент.Область(НомерСтроки, 11, НомерСтроки, 11).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;
								ВременныйТабличныйДокумент.Область(НомерСтроки, 11, НомерСтроки, 11).РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Переносить;
								ВременныйТабличныйДокумент.Область(НомерСтроки, 11, НомерСтроки, 12).Объединить();
								
								ВременныйТабличныйДокумент.Область(НомерСтроки, 13, НомерСтроки, 13).Текст = Формат(ВыборкаСтрокРасчетногоЛистка.Удержания,"ЧЦ=15; ЧДЦ=2");
								ВременныйТабличныйДокумент.Область(НомерСтроки, 13, НомерСтроки, 13).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;
								ВременныйТабличныйДокумент.Область(НомерСтроки, 13, НомерСтроки, 14).Объединить();
								
								КоличествоУдержаний = КоличествоУдержаний + 1;
								ВсегоУдержания = ВсегоУдержания + ВыборкаСтрокРасчетногоЛистка.Удержания;
								
							Иначе 
								
								// подведем итоги раздела начислений и удержаний
								// начнем раздел доходов в натуральной форме и выплат
								Если Не ИтогиНачисленийИУдержанийВыведены Тогда
									
									КолвоРасчетов = Макс(КоличествоНачислений,КоличествоУдержаний);
									
									Если КолвоРасчетов > 0 Тогда
										
										Для Сч = 0 По КолвоРасчетов - 1 Цикл
											
											НомерСтроки = ВысотаТаблицы + Сч;
											
											Для Ссч = 1 По 14 Цикл
												
												Если Ссч = 3 ИЛИ Ссч = 7 ИЛИ Ссч = 9 ИЛИ Ссч = 10 ИЛИ Ссч = 12 ИЛИ Ссч = 14 Тогда
													Продолжить
												КонецЕсли; 
												
												ВременныйТабличныйДокумент.Область(НомерСтроки, Ссч).ГраницаСлева = Линия;
												
											КонецЦикла;
											
											ВременныйТабличныйДокумент.Область(НомерСтроки, 14).ГраницаСправа = Линия;
											ВременныйТабличныйДокумент.Область(НомерСтроки, 1, НомерСтроки, 14).ГраницаСнизу = Линия;
											
										КонецЦикла; 
										
									КонецЕсли; 
									
									ОбластьВсего.Параметры.ВсегоНачисления = ВсегоНачисления;
									ОбластьВсего.Параметры.ВсегоУдержания  = ВсегоУдержания;
									
									ВременныйТабличныйДокумент.Вывести(ОбластьВсего);
									ИтогиНачисленийИУдержанийВыведены = Не ИтогиНачисленийИУдержанийВыведены;
								
									//ВременныйТабличныйДокумент.Вывести(ОбластьНатурДоходыВыплаты);
									ВысотаТаблицы = ВременныйТабличныйДокумент.ВысотаТаблицы + 1;
									ВсегоНачисления = 0; КоличествоНачислений = 0;
									ВсегоУдержания = 0; КоличествоУдержаний  = 0;
									
								КонецЕсли;
								
								Если ВыборкаСтрокРасчетногоЛистка.ВидДвижения < 8 Тогда
									
									НомерСтроки = ВысотаТаблицы + КоличествоНачислений;
									ВременныйТабличныйДокумент.Область(НомерСтроки, 1).Текст = ВыборкаСтрокРасчетногоЛистка.ВидРасчета;
									ВременныйТабличныйДокумент.Область(НомерСтроки, 1).РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Переносить;
									
									ВременныйТабличныйДокумент.Область(НомерСтроки, 2, НомерСтроки, 2).Текст = УправлениеОтчетами.ОписаниеПериода(ВыборкаСтрокРасчетногоЛистка.ПериодДействияНачало, ДатаОкончанияПериода);
									ВременныйТабличныйДокумент.Область(НомерСтроки, 2, НомерСтроки, 2).РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Переносить;
									ВременныйТабличныйДокумент.Область(НомерСтроки, 2, НомерСтроки, 2).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;
									ВременныйТабличныйДокумент.Область(НомерСтроки, 2, НомерСтроки, 3).Объединить();
									
									ВременныйТабличныйДокумент.Область(НомерСтроки, 6, НомерСтроки, 6).Текст = Формат(ВыборкаСтрокРасчетногоЛистка.Начисления,"ЧЦ=15; ЧДЦ=2");
									ВременныйТабличныйДокумент.Область(НомерСтроки, 6, НомерСтроки, 6).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;
									ВременныйТабличныйДокумент.Область(НомерСтроки, 6, НомерСтроки, 7).Объединить();
									
									КоличествоНачислений = КоличествоНачислений + 1;
									ВсегоНачисления = ВсегоНачисления + ВыборкаСтрокРасчетногоЛистка.Начисления;
									
									
								Иначе // остались выплаты
									
									НомерСтроки = ВысотаТаблицы + КоличествоУдержаний;
									ВременныйТабличныйДокумент.Область(НомерСтроки, 8 , НомерСтроки, 8).Текст = ВыборкаСтрокРасчетногоЛистка.ВидРасчета;
									ВременныйТабличныйДокумент.Область(НомерСтроки, 8 , НомерСтроки, 8).РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Переносить;
									ВременныйТабличныйДокумент.Область(НомерСтроки, 8 , НомерСтроки, 8).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Лево;
									ВременныйТабличныйДокумент.Область(НомерСтроки, 8 , НомерСтроки, 10).Объединить();
									
									ВременныйТабличныйДокумент.Область(НомерСтроки, 11, НомерСтроки, 11).Текст = УправлениеОтчетами.ОписаниеПериода(ВыборкаСтрокРасчетногоЛистка.ПериодДействияНачало, ДатаОкончанияПериода);
									ВременныйТабличныйДокумент.Область(НомерСтроки, 11, НомерСтроки, 11).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;
									ВременныйТабличныйДокумент.Область(НомерСтроки, 11, НомерСтроки, 11).РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Переносить;
									ВременныйТабличныйДокумент.Область(НомерСтроки, 11, НомерСтроки, 12).Объединить();
									
									ВременныйТабличныйДокумент.Область(НомерСтроки, 13, НомерСтроки, 13).Текст = Формат(ВыборкаСтрокРасчетногоЛистка.Удержания,"ЧЦ=15; ЧДЦ=2");
									ВременныйТабличныйДокумент.Область(НомерСтроки, 13, НомерСтроки, 13).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;
									ВременныйТабличныйДокумент.Область(НомерСтроки, 13, НомерСтроки, 14).Объединить();
									
									КоличествоУдержаний = КоличествоУдержаний + 1;
									ВсегоУдержания = ВсегоУдержания + ВыборкаСтрокРасчетногоЛистка.Удержания;

								КонецЕсли; 
							КонецЕсли; 
							
						КонецЦикла;
						
						// расчертим линиями низ расчетного листками
						КолвоРасчетов = Макс(КоличествоНачислений,КоличествоУдержаний);
						
						Если КолвоРасчетов > 0 Тогда
							
							Для Сч = 0 По КолвоРасчетов - 1 Цикл
								
								НомерСтроки = ВысотаТаблицы + Сч;
								
								Для Ссч = 1 По 14 Цикл
									
									Если Ссч = 3 ИЛИ Ссч = 7 ИЛИ Ссч = 9 ИЛИ Ссч = 10 ИЛИ Ссч = 12 ИЛИ Ссч = 14 Тогда
										Продолжить
									КонецЕсли; 
									
									ВременныйТабличныйДокумент.Область(НомерСтроки, Ссч).ГраницаСлева = Линия;
									
								КонецЦикла;
								
								ВременныйТабличныйДокумент.Область(НомерСтроки, 14).ГраницаСправа = Линия;
								ВременныйТабличныйДокумент.Область(НомерСтроки, 1, НомерСтроки, 14).ГраницаСнизу = Линия;
								
							КонецЦикла; 
							
						КонецЕсли; 
						
						Если Не ИтогиНачисленийИУдержанийВыведены Тогда // есть только начисления и удержания
							ОбластьВсего.Параметры.ВсегоНачисления = ВсегоНачисления;
							ОбластьВсего.Параметры.ВсегоУдержания  = ВсегоУдержания;
							ВременныйТабличныйДокумент.Вывести(ОбластьВсего);
						ИначеЕсли КолвоРасчетов > 0 Тогда  // остались итоги по натуральным доходам и выплатам
							//ОбластьНатуральныеДоходы.Параметры.ВсегоНачисления = ВсегоНачисления;
							//ОбластьНатуральныеДоходы.Параметры.ВсегоУдержания  = ВсегоУдержания;
							//ВременныйТабличныйДокумент.Вывести(ОбластьНатуральныеДоходы);
						КонецЕсли; 
						
						Если СуммаНаНачалоПериода = NULL Тогда
							
							ОбластьПодвал.Параметры.ТекстДолгНаНачалоПериода = "Долг за организацией на начало месяца: ";
							ОбластьПодвал.Параметры.СуммаДолгНаНачалоПериода = 0;
							
						Иначе
							
							Если СуммаНаНачалоПериода >= 0  Тогда
								ОбластьПодвал.Параметры.ТекстДолгНаНачалоПериода = "Долг за организацией на начало месяца: ";
								ОбластьПодвал.Параметры.СуммаДолгНаНачалоПериода = СуммаНаНачалоПериода;
							Иначе
								ОбластьПодвал.Параметры.ТекстДолгНаНачалоПериода = "Долг за работником на начало месяца: ";
								ОбластьПодвал.Параметры.СуммаДолгНаНачалоПериода = 0 - СуммаНаНачалоПериода;
							КонецЕсли;
							
						КонецЕсли;
						Если СуммаНаКонецПериода = NULL Тогда
							
							ОбластьПодвал.Параметры.ТекстДолгНаКонецПериода = "Долг за работником на конец месяца: ";
							ОбластьПодвал.Параметры.СуммаДолгНаКонецПериода  = 0;
							
						Иначе
							
							Если СуммаНаКонецПериода >= 0  Тогда
								ОбластьПодвал.Параметры.ТекстДолгНаКонецПериода = "Долг за организацией на конец месяца: ";
								ОбластьПодвал.Параметры.СуммаДолгНаКонецПериода  = СуммаНаКонецПериода;
							Иначе
								ОбластьПодвал.Параметры.ТекстДолгНаКонецПериода = "Долг за работником на конец месяца: ";
								ОбластьПодвал.Параметры.СуммаДолгНаКонецПериода  = 0 - СуммаНаКонецПериода;
							КонецЕсли;
							
						КонецЕсли; 
						ВременныйТабличныйДокумент.Вывести(ОбластьПодвал);
						
						Если НЕ ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВременныйТабличныйДокумент) Тогда
							ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
						КонецЕсли; 
						ДокументРезультат.Вывести(ВременныйТабличныйДокумент);
						
					КонецЦикла;
				КонецЦикла;
				
				Если Группировать и (ЗначениеЗаполнено(ВыборкаПоПодразделению.Начисления) или ЗначениеЗаполнено(ВыборкаПоПодразделению.Удержания) или ЗначениеЗаполнено(ВыборкаПоПодразделению.СуммаВзаиморасчетовНачальныйОстаток) или ЗначениеЗаполнено(ВыборкаПоПодразделению.СуммаВзаиморасчетовКонечныйОстаток)) Тогда
					ДокументРезультат.ЗакончитьГруппуСтрок();
				КонецЕсли;
			КонецЦикла; 
			
			Если Группировать и (ЗначениеЗаполнено(ВыборкаПоОрганизации.Начисления) или ЗначениеЗаполнено(ВыборкаПоОрганизации.Удержания) или ЗначениеЗаполнено(ВыборкаПоОрганизации.СуммаВзаиморасчетовНачальныйОстаток) или ЗначениеЗаполнено(ВыборкаПоОрганизации.СуммаВзаиморасчетовКонечныйОстаток)) Тогда
				ДокументРезультат.ЗакончитьГруппуСтрок();
			КонецЕсли;
		КонецЦикла;
		
		Если Группировать и (ЗначениеЗаполнено(ВыборкаПоПериоду.Начисления) или ЗначениеЗаполнено(ВыборкаПоПериоду.Удержания) или ЗначениеЗаполнено(ВыборкаПоПериоду.СуммаВзаиморасчетовНачальныйОстаток) или ЗначениеЗаполнено(ВыборкаПоПериоду.СуммаВзаиморасчетовКонечныйОстаток)) Тогда
			ДокументРезультат.ЗакончитьГруппуСтрок();
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецЕсли


Перем ВысотаЗаголовка, ВысотаПодписи;
Перем ПоказыватьЗаголовок, ПоказыватьПодписи;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Процедура ВыводЗаголовка()

	// Перезаполнять заголовок можно только у "чистого" отчета
	Если ЭлементыФормы.ДокументРезультат.ВысотаТаблицы = 0 Тогда
		ВнешняяОбработкаОбъект.СформироватьОтчет(ЭлементыФормы.ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, Истина, ВысотаПодписи, ПоказыватьПодписи);
	КонецЕсли;

	Если ЗначениеЗаполнено(ВысотаЗаголовка) Тогда
		ЭлементыФормы.ДокументРезультат.Область(1,,ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;
	КонецЕсли;

	УправлениеПометкамиКнопокКоманднойПанели();

КонецПроцедуры // ВыводЗаголовка()

Процедура ВыводПодписей()

	Если ЭлементыФормы.ДокументРезультат.ВысотаТаблицы = 0 Тогда
		ВнешняяОбработкаОбъект.СформироватьОтчет(ЭлементыФормы.ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, Истина, ВысотаПодписи, ПоказыватьПодписи);
	КонецЕсли;
	
	Если ЭлементыФормы.ДокументРезультат.ВысотаТаблицы > 5 Тогда
		ЭлементыФормы.ДокументРезультат.Область((ЭлементыФормы.ДокументРезультат.ВысотаТаблицы - 5),,ЭлементыФормы.ДокументРезультат.ВысотаТаблицы).Видимость = ПоказыватьПодписи;
	КонецЕсли;

	УправлениеПометкамиКнопокКоманднойПанели();

КонецПроцедуры // ВыводЗаголовка()


Процедура УправлениеПометкамиКнопокКоманднойПанели()

	ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Заголовок.Пометка                = ПоказыватьЗаголовок;
	ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Подменю.Кнопки.Заголовок.Пометка = ПоказыватьЗаголовок;
	ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Подписи.Пометка                  = ПоказыватьПодписи;
	ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Подменю.Кнопки.Подписи.Пометка   = ПоказыватьПодписи;

КонецПроцедуры // УправлениеПометкамиКнопокКоманднойПанели()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ НАЖАТИЯ КНОПОК КОМАНДНОЙ ПАНЕЛИ

Процедура КоманднаяПанельФормыСформировать(Элемент)

	ВнешняяОбработкаОбъект.СформироватьОтчет(ЭлементыФормы.ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, Ложь, ВысотаПодписи, ПоказыватьПодписи);

	ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.ДокументРезультат;

КонецПроцедуры

Процедура КоманднаяПанельЗаголовок(Кнопка)

	ПоказыватьЗаголовок = Не ПоказыватьЗаголовок;
	ВыводЗаголовка();

КонецПроцедуры

Процедура КоманднаяПанельФормыПодписи(Кнопка)
	
	ПоказыватьПодписи = Не ПоказыватьПодписи;
	ВыводПодписей();
	
КонецПроцедуры

// Процедура - обработчик события "Регулирование" элемента управления ПредставлениеПериодаРегистрации.
//
Процедура ПредставлениеПериодаРегистрацииРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	РаботаСДиалогами.РегулированиеПредставленияПериодаРегистрации(Направление, СтандартнаяОбработка, ПериодРегистрации, ПредставлениеПериодаРегистрации);
	
КонецПроцедуры

// Процедура - обработчик события "НачалоВыбораИзСписка" элемента управления ПредставлениеПериодаРегистрации.
//
Процедура ПредставлениеПериодаРегистрацииНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	РаботаСДиалогами.НачалоВыбораИзСпискаПредставленияПериодаРегистрации(Элемент, СтандартнаяОбработка, ПериодРегистрации, ЭтаФорма);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием()

	ПоказыватьЗаголовок = ИСТИНА;
	ПоказыватьПодписи = ИСТИНА;
	СтруктураОбщихПараметров = СохраняемыеРеквизиты; 
	Если Не ИспользоватьИнуюНастройку Тогда
		УстановитьПараметрыОтчетаИзСтруктуры(СтруктураОбщихПараметров);
	КонецЕсли;
	ВариантОтчета = ?(ВариантОтчета = 0, 1, ВариантОтчета);
	ВариантОперации = ?(ВариантОперации = 0, 1, ВариантОперации);
	
КонецПроцедуры

// Процедура - обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии()
	
    ОбновитьОтчет();
	ВыводЗаголовка();

	// Проверка ведения однофирменности
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Организация = глЗначениеПеременной("ОсновнаяОрганизация");
	КонецЕсли;

	ЭлементыФормы.ДокументРезультат.ТекущаяОбласть = ЭлементыФормы.ДокументРезультат.Область(1,,1);
	Если Не ЗначениеЗаполнено(ПериодРегистрации) Тогда
		ПериодРегистрации = ТекущаяДата();
	КонецЕсли;
	ПредставлениеПериодаРегистрации    = РаботаСДиалогами.ПолучитьПредставлениеПериодаРегистрации(ПериодРегистрации);
КонецПроцедуры

Процедура КоманднаяПанельФормыНастройка(Кнопка)
	ФормаНастройка = ПолучитьФорму("ФормаНастройка");
	Если ФормаНастройка.ОткрытьМодально() = Истина Тогда
		ОбновитьОтчет();
	КонецЕсли;


КонецПроцедуры

Процедура ОбновитьОтчет() Экспорт

	НеЗаполнятьНастройкиПриОткрытии = Не Открыта();
	
	СформироватьОтчет(ЭлементыФормы.ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, Ложь, ВысотаПодписи, ПоказыватьПодписи);

	ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.ДокументРезультат;
	
КонецПроцедуры // ОбновитьОтчет()

Процедура ПередСохранениемЗначений(Отказ)
	
	Если Не ИспользоватьИнуюНастройку Тогда
		СохраняемыеРеквизиты = ПоместитьПараметрыОтчетаВСтруктуру();
		СохраненныеНастройки = Новый Структура("НастройкиПостроителя",ПостроительОтчета.ПолучитьНастройки());
	КонецЕсли;

КонецПроцедуры // ПередСохранениемЗначений()

Процедура ПослеВосстановленияЗначений()
	
	Перем НастройкиПостроителя;
	
	Если НЕ ИспользоватьИнуюНастройку Тогда
		УстановитьПараметрыОтчетаИзСтруктуры(СохраняемыеРеквизиты);
		
		Если НЕ ТипЗнч(СохраненныеНастройки) = Тип("Структура") Тогда 
			Возврат;
		КонецЕсли;
		ЗаполнитьНачальныеНастройки();	
		СохраненныеНастройки.Свойство("НастройкиПостроителя", НастройкиПостроителя);
		Если ТипЗнч(НастройкиПостроителя) = Тип("НастройкиПостроителяОтчета") Тогда
			ПостроительОтчета.УстановитьНастройки(НастройкиПостроителя, Истина, Истина, Истина, Истина);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПослеВосстановленияЗначений()

Процедура ПриЗакрытии()
	
	СтруктураОбщихПараметров = ПоместитьПараметрыОтчетаВСтруктуру();

КонецПроцедуры

//Функция сохраняет параметры отчета в структуру
Функция ПоместитьПараметрыОтчетаВСтруктуру()

	СтруктураОбщихПараметров = Новый Структура;
	СтруктураОбщихПараметров.Вставить("Организация", Организация);
	СтруктураОбщихПараметров.Вставить("ВариантОтчета", ВариантОтчета);
	СтруктураОбщихПараметров.Вставить("ПериодРегистрации", ПериодРегистрации);
	СтруктураОбщихПараметров.Вставить("ВариантОперации", ВариантОперации);
	
	Возврат СтруктураОбщихПараметров;
    
КонецФункции

// процедура устанавливает параметры из структуры данных
Процедура УстановитьПараметрыОтчетаИзСтруктуры(СтруктураПараметров)
	
	// Тип восстановленного значения должен быть Структура
	Если ТипЗнч(СтруктураПараметров) <> Тип("Структура") Тогда 
		Возврат;
	КонецЕсли;
	
	СтруктураПараметров.Свойство("Организация",   Организация);
	СтруктураПараметров.Свойство("ВариантОтчета", ВариантОтчета);
	СтруктураПараметров.Свойство("ПериодРегистрации", ПериодРегистрации);
		
	СтруктураПараметров.Свойство("ВариантОперации", ВариантОперации);
	
КонецПроцедуры

Процедура ОбновлениеОтображения()
	
	ДатаНач = НачалоМесяца(ПериодРегистрации);
	ДатаКон  = КонецМесяца(ПериодРегистрации);
	УправлениеОтчетами.КонтрольДоступностиЗаголовкаИПодписей(ДатаНач, ДатаКон, ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Заголовок, ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Подписи);
	ПредставлениеПериодаРегистрации    = РаботаСДиалогами.ПолучитьПредставлениеПериодаРегистрации(ПериодРегистрации);
КонецПроцедуры

Процедура УправлениеВариантомОтчета()
	
	ПрименяетсяУСН = НалоговыйУчетУСН.ПрименениеУСН(Организация,НачалоМесяца(ПериодРегистрации));
	
	ВариантОтчета = ?(ВариантОтчета = 0 ИЛИ ПрименяетсяУСН, 1, ВариантОтчета);
	
КонецПроцедуры

Процедура ПредставлениеПериодаРегистрацииПриИзменении(Элемент)
	УправлениеВариантомОтчета()
КонецПроцедуры

Процедура ОрганизацияПриИзменении(Элемент)
	УправлениеВариантомОтчета()
КонецПроцедуры



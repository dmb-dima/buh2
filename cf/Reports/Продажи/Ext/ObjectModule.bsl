Перем СохраненнаяНастройка Экспорт;
Перем Расшифровки Экспорт;

Перем ПромежуточныеДанные Экспорт;

#Если Клиент Тогда

Процедура СформироватьОтчет(Результат = Неопределено, ДанныеРасшифровки = Неопределено, ВыводВФормуОтчета = Истина, ВнешниеНаборыДанных = Неопределено) Экспорт
	
	// Проверим заполнение обязательных реквизитов
	Если ПроверитьЗаполнениеОбязательныхРеквизитов() Тогда
		Возврат;
	КонецЕсли;
	
	Результат.Очистить();
	
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	ВыводЗаголовкаОтчета(ЭтотОбъект, Результат);
	ДоработатьКомпоновщикПередВыводом(ВнешниеНаборыДанных);
	КомпоновщикНастроек.Восстановить();
	НастройкаКомпоновкиДанных = КомпоновщикНастроек.ПолучитьНастройки();
	КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
	СтандартныеОтчеты.ВывестиОтчет(ЭтотОбъект, Результат, ДанныеРасшифровки, ВыводВФормуОтчета, ВнешниеНаборыДанных, Истина, НастройкаКомпоновкиДанных);
	
	// Выполним дополнительную обработку Результата отчета
	ОбработкаРезультатаОтчета(Результат);
	
КонецПроцедуры

// В процедуре можно доработать компоновщик перед выводом в отчет
// Изменения сохранены не будут
Процедура ДоработатьКомпоновщикПередВыводом(ВнешниеНаборыДанных) Экспорт
	
	ВнешниеНаборыДанных = Новый Структура;
	ВыборкаДанных = ПолучитьВыборку();
	ВнешниеНаборыДанных.Вставить("ТаблицаДанных", ВыборкаДанных);
	
	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "Периодичность", Интервал);
	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "НачалоПериода", НачалоПериода);
	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "КонецПериода", КонецДня(КонецПериода));
	
	ТипДополнения = СтандартныеОтчеты.ПолучитьТипДополненияПоИнтервалу(Интервал);
	
	Попытка 
		КомпоновщикНастроек.Настройки.Структура[0].Точки[0].ПоляГруппировки.Элементы[0].ТипДополнения = ТипДополнения;
		Если РежимФормирования = 0 Тогда
			КомпоновщикНастроек.Настройки.Структура[0].Серии[0].Использование  = Истина;
			КомпоновщикНастроек.Настройки.Структура[0].Серии[1].Использование  = Ложь;
			КомпоновщикНастроек.Настройки.Структура[1].Строки[0].Использование = Истина;
			КомпоновщикНастроек.Настройки.Структура[1].Строки[1].Использование = Ложь;
		Иначе
			КомпоновщикНастроек.Настройки.Структура[0].Серии[0].Использование  = Ложь;
			КомпоновщикНастроек.Настройки.Структура[0].Серии[1].Использование  = Истина;
			КомпоновщикНастроек.Настройки.Структура[1].Строки[0].Использование = Ложь;
			КомпоновщикНастроек.Настройки.Структура[1].Строки[1].Использование = Истина;
		КонецЕсли;
		Если ТипДиаграммыОтчета = 0 Тогда
			ТиповыеОтчеты.УстановитьПараметрВывода(КомпоновщикНастроек, "ТипДиаграммы", ТипДиаграммы.ГистограммаСНакоплениемОбъемная);
		ИначеЕсли ТипДиаграммыОтчета = 1 Тогда
			ТиповыеОтчеты.УстановитьПараметрВывода(КомпоновщикНастроек, "ТипДиаграммы", ТипДиаграммы.График);
		КонецЕсли;
	Исключение
	КонецПопытки;
	
	СтруктураПараметр   = СтандартныеОтчеты.ПолучитьОписаниеСтруктурыПараметра();
	ПромежуточныеДанные = СтандартныеОтчеты.ПолучитьОписаниеТаблицыПромежуточныеДанные();
	
	Выборка = ВыборкаДанных.Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(СтруктураПараметр, Выборка);
		Если РежимФормирования = 0 Тогда
			СтруктураПараметр.Субконто1 = Выборка.НоменклатурнаяГруппа;
		Иначе
			СтруктураПараметр.КорСубконто1 = Выборка.Контрагент;
		КонецЕсли;
		СтандартныеОтчеты.ДобавитьЗаписьВТаблицуПромежуточныеДанные(ПромежуточныеДанные, СтруктураПараметр);
	КонецЦикла;

		
КонецПроцедуры

Функция ПолучитьВыборку() 
	
	Запрос = Новый Запрос;
	
	Если РежимФормирования = 0 И ЗначениеЗаполнено(НоменклатурнаяГруппа) Тогда
		Если НоменклатурнаяГруппа.ЭтоГруппа Тогда
			УсловиеСубконто = "Субконто1 В ИЕРАРХИИ(&Субконто1)";
		Иначе
			УсловиеСубконто = "Субконто1 = &Субконто1";
		КонецЕсли;
	ИначеЕсли РежимФормирования = 1 И ЗначениеЗаполнено(Контрагент) Тогда
		Если Контрагент.ЭтоГруппа Тогда
			УсловиеСубконто = "КорСубконто1 В ИЕРАРХИИ(&КорСубконто1)";
		Иначе
			УсловиеСубконто = "КорСубконто1 = &КорСубконто1";
		КонецЕсли;
	Иначе
		УсловиеСубконто = "Истина";
	КонецЕсли;
	Если ВключатьНДС Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	""+"" КАК Знак,
		|	Доходы.СуммаОборотКт КАК Сумма,";
		Если РежимФормирования = 0 Тогда
			Запрос.Текст = Запрос.Текст + "
			|	Доходы.Субконто1 КАК НоменклатурнаяГруппа,
			|	Null КАК Контрагент,";
			УсловиеВидКорСубконто = "";
		ИначеЕсли РежимФормирования = 1 Тогда
			Запрос.Текст = Запрос.Текст + "
			|	Null КАК НоменклатурнаяГруппа,
			|	Доходы.КорСубконто1 КАК Контрагент,";
			УсловиеВидКорСубконто = "&КорСубконто";
			ВидыКорСубконто = Новый СписокЗначений;
			ВидыКорСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
			ВидыКорСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
			Если РежимФормирования = 1 Тогда
				Запрос.УстановитьПараметр("КорСубконто", ВидыКорСубконто);
			КонецЕсли;
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|	Доходы.Период КАК Период,
		|	Доходы.Счет КАК Счет,
		|	Доходы.КорСчет КАК КорСчет,
		|	""Кт"" КАК БухВидРесурса
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачалоПериода, &КонецПериода, Месяц, Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Выручка)), , Организация = &Организация И " + УсловиеСубконто + ", , " + УсловиеВидКорСубконто + ") КАК Доходы";
	Иначе
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	""+"" КАК Знак,
		|	Доходы.СуммаОборотКт КАК Сумма,
		|	Доходы.Субконто1 КАК НоменклатурнаяГруппа,
		|	Доходы.Период КАК Период,
		|	Доходы.Счет КАК Счет,
		|	Доходы.КорСчет КАК КорСчет,
		|	""Кт"" КАК БухВидРесурса
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачалоПериода, &КонецПериода, Месяц, Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Выручка)), , Организация = &Организация И " + УсловиеСубконто + ", , ) КАК Доходы
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""-"",
		|	-НДС.СуммаОборотДт,
		|	НДС.Субконто1,
		|	НДС.Период,
		|	НДС.Счет,
		|	НДС.КорСчет,
		|	""Дт""
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачалоПериода, &КонецПериода, Месяц, Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Продажи_НДС)), , Организация = &Организация И " + УсловиеСубконто + ", , ) КАК НДС";
	КонецЕсли;

	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);	
	Запрос.УстановитьПараметр("КонецПериода" , КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("Организация"  , Организация);
	Запрос.УстановитьПараметр("Субконто1"    , НоменклатурнаяГруппа);
	Запрос.УстановитьПараметр("КорСубконто1" , Контрагент);
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Организация = &Организация", "Истина");
	КонецЕсли;
	Если Интервал = 6 Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Месяц", "День");
	ИначеЕсли Интервал = 7 Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Месяц", "Неделя");
	ИначеЕсли Интервал = 8 Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Месяц", "Декада");
	ИначеЕсли Интервал = 10 Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Месяц", "Квартал");
	ИначеЕсли Интервал = 11 Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Месяц", "Полугодие");
	ИначеЕсли Интервал = 12 Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Месяц", "Год");
	КонецЕсли;
	
	Возврат Запрос.Выполнить();
	
Конецфункции

Процедура ВыводЗаголовкаОтчета(ОтчетОбъект, Результат)
	
	МакетЗаголовок = ПолучитьОбщийМакет("ЗаголовокОтчета");
	ОбластьЗаголовок = МакетЗаголовок.ПолучитьОбласть("Заголовок");
	
	ОбластьЗаголовок.Параметры.ЗаголовокОтчета = ПолучитьТекстЗаголовка();
	
	ОписаниеОтбора = "";
	Если РежимФормирования = 0 И ЗначениеЗаполнено(НоменклатурнаяГруппа) Тогда
		Если НоменклатурнаяГруппа.ЭтоГруппа Тогда
			ОписаниеОтбора = "Номенклатурная группа: В группе " + НоменклатурнаяГруппа;
		Иначе
			ОписаниеОтбора = "Номенклатурная группа: " + НоменклатурнаяГруппа;
		КонецЕсли;
	ИначеЕсли РежимФормирования = 1 И ЗначениеЗаполнено(Контрагент) Тогда
		Если Контрагент.ЭтоГруппа Тогда
			ОписаниеОтбора = "Контрагент: В группе " + Контрагент;
		Иначе
			ОписаниеОтбора = "Контрагент: " + Контрагент;
		КонецЕсли;
	КонецЕсли;
	Если ПустаяСтрока(ОписаниеОтбора) Тогда
		ОписаниеНастроекОтчета = ?(ВключатьНДС, "Сумма продаж включает НДС", "Сумма продаж не включает НДС");
	Иначе
		ОписаниеНастроекОтчета = ОписаниеОтбора + Символы.ПС + ?(ВключатьНДС, "Сумма продаж включает НДС", "Сумма продаж не включает НДС");
	КонецЕсли;
	
	ОбластьЗаголовок.Параметры.ОписаниеНастроекОтчета = ОписаниеНастроекОтчета;

	Результат.Вывести(ОбластьЗаголовок);
			
КонецПроцедуры

Функция ПолучитьТекстЗаголовка(ОрганизацияВНачале = Истина) Экспорт 
	
	ЗаголовокОтчета = ?(РежимФормирования = 0, "Продажи по номенклатурным группам", "Продажи по контрагентам");
	
	Возврат СтандартныеОтчеты.ПолучитьТекстЗаголовка(ЭтотОбъект, ЗаголовокОтчета, ОрганизацияВНачале);

КонецФункции

Процедура ОбработкаРезультатаОтчета(Результат)
	
	СтандартныеОтчеты.ОбработкаРезультатаОтчета(ЭтотОбъект, Результат);
	
КонецПроцедуры

Процедура УстановитьИнтервал() Экспорт
	
	СтандартныеОтчеты.УстановитьИнтервал(ЭтотОбъект);
	
КонецПроцедуры

Функция ПроверитьЗаполнениеОбязательныхРеквизитов()
	
	Отказ = Ложь;
	Если Не ЗначениеЗаполнено(НачалоПериода) ИЛИ Не ЗначениеЗаполнено(КонецПериода) Тогда
		Сообщить("Не указан период формирования отчета", СтатусСообщения.Важное);
		Отказ = Истина;
	ИначеЕсли НачалоПериода > КонецПериода Тогда
		Сообщить("Дата начала периода не может быть больше даты конца периода", СтатусСообщения.Важное);
		Отказ = Истина;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Интервал) Тогда
		Сообщить("Не указан интервал", СтатусСообщения.Важное); 
		Отказ = Истина;
	КонецЕсли;
	
	Возврат Отказ;
	
КонецФункции
	
// Для настройки отчета (расшифровка и др.)
Процедура Настроить(Отбор, КомпоновщикНастроекОсновногоОтчета = Неопределено) Экспорт
	
	ТиповыеОтчеты.НастроитьТиповойОтчет(ЭтотОбъект, Отбор, КомпоновщикНастроекОсновногоОтчета);
	
КонецПроцедуры

Процедура СохранитьНастройку() Экспорт
	
	СтандартныеОтчеты.СохранитьНастройку(ЭтотОбъект);
	
КонецПроцедуры

// Процедура заполняет параметры отчета по элементу справочника из переменной СохраненнаяНастройка.
Процедура ПрименитьНастройку() Экспорт
	
	Если СохраненнаяНастройка.Пустая() Тогда
		Возврат;
	КонецЕсли;
	 
	СтруктураПараметров = СохраненнаяНастройка.ХранилищеНастроек.Получить();
	ТиповыеОтчеты.ПрименитьСтруктуруПараметровОтчета(ЭтотОбъект, СтруктураПараметров);
	
КонецПроцедуры

Процедура ИнициализацияОтчета() Экспорт
	
	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "НачалоПериода", НачалоПериода);
	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "КонецПериода",  КонецПериода);
	
КонецПроцедуры

Расшифровки = Новый СписокЗначений;

НастройкаПериода = Новый НастройкаПериода;

ВключатьНДС = Истина;

#КонецЕсли
#Если Клиент Тогда
	
Перем НП Экспорт;

// Выполняет запрос и формирует табличный документ-результат отчета
// в соответствии с настройками, заданными значениями реквизитов отчета.
//
// Параметры:
//	ДокументРезультат - табличный документ, формируемый отчетом
//	ПоказыватьЗаголовок - признак видимости строк с заголовком отчета
//	ВысотаЗаголовка - параметр, через который возвращается высота заголовка в строках 
//
Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок = Ложь) Экспорт

	НачалоПериода = НачалоМесяца(ДатаНач);
	КонецПериода = КонецМесяца(ДатаКон);

	ДокументРезультат.Очистить();

	Макет = ПолучитьМакет("Отчет");

	ОбластьЗаголовок  = Макет.ПолучитьОбласть("Заголовок");

	ОбластьЗаголовок.Параметры.НачалоПериода       = Формат(НачалоПериода, "ДФ=dd.MM.yyyy");
	ОбластьЗаголовок.Параметры.КонецПериода        = Формат(КонецПериода, "ДФ=dd.MM.yyyy");
	СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация);
	НазваниеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм");
	ОбластьЗаголовок.Параметры.НазваниеОрганизации = НазваниеОрганизации;
	ОбластьЗаголовок.Параметры.ИННОрганизации      = "" + Организация.ИНН + " / " + Организация.КПП;
	ДокументРезультат.Вывести(ОбластьЗаголовок);

	// Параметр для показа заголовка
	ВысотаЗаголовка = ДокументРезультат.ВысотаТаблицы;

	// Когда нужен только заголовок:
	Если ТолькоЗаголовок Тогда
		Возврат;
	КонецЕсли;

	// Проверим заполнение обязательных реквизитов
	Если НалоговыйУчет.ПроверитьЗаполнениеОбязательныхРеквизитов(ДатаНач,ДатаКон,Организация) Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВысотаЗаголовка) Тогда
		ДокументРезультат.Область("R1:R" + ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;
	КонецЕсли;

	Страхование1 = Перечисления.ВидыРБП.ДолгосрочноеСтрахованиеЖизни;
	Страхование2 = Перечисления.ВидыРБП.СтрахованиеНаОплатуМедицинскихРасходов;
	Страхование3 = Перечисления.ВидыРБП.СтрахованиеНаСлучайСмертиИУтратыРаботоспособности;
	
	ВидыРБП = Новый Массив;
	ВидыРБП.Добавить(Страхование1);
	ВидыРБП.Добавить(Страхование2);
	ВидыРБП.Добавить(Страхование3);
	
	Счета = Новый Массив;
	Счета.Добавить(ПланыСчетов.Хозрасчетный.РасходыБудущихПериодовНаДобровольноеСтрахованиеРаботников);
	Счета.Добавить(ПланыСчетов.Хозрасчетный.ПлатежиПоДобровольномуСтрахованиюРаботников);
	
	ВидыСубконто = Новый Массив;
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов);
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизаций);

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  КонецПериода);
	Запрос.УстановитьПараметр("Счет",          Счета);
	Запрос.УстановитьПараметр("Организация",   Организация);
	Запрос.УстановитьПараметр("ВидРБП",        ВидыРБП);
	Запрос.УстановитьПараметр("ВидыСубконто",  ВидыСубконто);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОборотыДтКт.Период КАК ДатаОперации,
	|	ОборотыДтКт.СубконтоДт1 КАК РБП,
	|	ОборотыДтКт.СубконтоДт1.ВидРБП КАК ВидРБП,
	|	ОборотыДтКт.СубконтоДт2 КАК Работник,
	|	ОборотыДтКт.СубконтоДт2.Код КАК ТабельныйНомер,
	|	ОборотыДтКт.СубконтоДт1.ДатаНачалаСписания КАК ДатаНачала,
	|	ОборотыДтКт.СубконтоДт1.ДатаОкончанияСписания КАК ДатаЗавершения,
	|	ОборотыДтКт.СуммаНУОборотДт КАК Сумма
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Регистратор,
	|			СчетДт В ИЕРАРХИИ (&Счет),
	|			&ВидыСубконто,
	|			,
	|			,
	|			Организация = &Организация
	|				И СубконтоДт1.ВидРБП В (&ВидРБП)) КАК ОборотыДтКт
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаОперации";

	Результат = Запрос.Выполнить().Выбрать();

	ОбластьПодвал        = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы  = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьСтрока        = Макет.ПолучитьОбласть("Строка");

	ДокументРезультат.Вывести(ОбластьШапкаТаблицы);

	Пока Результат.Следующий() Цикл

		Если (ЗначениеЗаполнено(Результат.ДатаНачала)) 
		   И (ЗначениеЗаполнено(Результат.ДатаЗавершения))
		   И (Результат.ДатаНачала <= Результат.ДатаЗавершения) Тогда

			КоличествоМесяцев = (Год(Результат.ДатаЗавершения) - Год(Результат.ДатаНачала)) * 12;
			КоличествоМесяцев = КоличествоМесяцев + Месяц(Результат.ДатаЗавершения) - Месяц(Результат.ДатаНачала);

			Если День(Результат.ДатаНачала) - День(Результат.ДатаЗавершения) <= 1 Тогда
				КоличествоМесяцев = КоличествоМесяцев + 1;
			КонецЕсли;

		Иначе
			КоличествоМесяцев = "";

		КонецЕсли;

		ПредставлениеВидаРБП = "";

		Если Результат.ВидРБП = Страхование1 Тогда
			ПредставлениеВидаРБП = "Долгосрочное страхование жизни работников, пенсионное страхование, негосударственное пенсионное обеспечение работников";

		ИначеЕсли Результат.ВидРБП = Страхование2 Тогда
			ПредставлениеВидаРБП = "Добровольное личное страхование, предусматривающее оплату страховщиками медицинских расходов";

		ИначеЕсли Результат.ВидРБП = Страхование3 Тогда
			ПредставлениеВидаРБП = "Добровольное личное страхование, заключаемое исключительно на случай наступления смерти или утраты трудоспособности";

		КонецЕсли;

		ОбластьСтрока.Параметры.ДатаФормированияЗаписи            = Результат.ДатаОперации;
		ОбластьСтрока.Параметры.ВидСтрахования                    = ПредставлениеВидаРБП;
		ОбластьСтрока.Параметры.Работник                          = Строка(Результат.Работник) + " (таб.№ " + СокрЛП(Результат.ТабельныйНомер) + ")";
		ОбластьСтрока.Параметры.ДатаПрекращенияДействияДоговора   = Результат.ДатаЗавершения;
		ОбластьСтрока.Параметры.КоличествоМесяцевДействияДоговора = КоличествоМесяцев;
		ОбластьСтрока.Параметры.СуммаПлатежа                      = Результат.Сумма;
		ДокументРезультат.Вывести(ОбластьСтрока);

	КонецЦикла;

	СтруктураЛиц = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Организация, ДатаКон);
	ОбластьПодвал.Параметры.ОтветственныйЗаРегистры = СтруктураЛиц.ОтветственныйЗаРегистры;

	ДокументРезультат.Вывести(ОбластьПодвал);

КонецПроцедуры // СформироватьОтчет

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
// 

НП = Новый НастройкаПериода;

#КонецЕсли

// Процедура формирует заголовок формы отчета с учетом настроек
//
// Параметры:
//  Нет.
//
Процедура СформироватьЗаголовокФормы()

	ОписаниеПериода = СтандартныеОтчеты.СформироватьСтрокуОграниченийПоДатамДляФормы(ДатаНач, ДатаКон);

	Заголовок = ЗаголовокОтчета()+" (" + ОписаниеПериода + ") " +  ?(ЗначениеЗаполнено(Организация.НаименованиеПолное), Организация.НаименованиеПолное, Организация);
	
КонецПроцедуры // СформироватьЗаголовокФормы()()

// Обновляет таблицу отчета
//
// Параметры:
//	Нет.
//
Процедура ОбновитьОтчет() Экспорт

	НеЗаполнятьНастройкиПриОткрытии = Не Открыта();
	
	СформироватьОтчет(ЭлементыФормы.ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка);

	ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.ДокументРезультат;
	
КонецПроцедуры // ОбновитьОтчет()

Процедура ВыводЗаголовка()

	ОбработатьВыводЗаголовка(ЭтаФорма, ЭтотОбъект, ВысотаЗаголовка, ПоказыватьЗаголовок);
	
КонецПроцедуры // ВыводЗаголовка()

Процедура Сформировать(Кнопка)
	
	ОбновитьОтчет();
	
КонецПроцедуры

Процедура Настройка(Кнопка)
	
	ФормаНастройка = ПолучитьФорму("ФормаНастройка");
	Если ФормаНастройка.ОткрытьМодально() = Истина Тогда
		ОбновитьОтчет();
	КонецЕсли;
	
КонецПроцедуры

Процедура КнопкаНастройкаПериодаНажатие(Элемент)

	РаботаСДиалогами.ОбработчикНастройкаПериодаНажатие(ДатаНач, ДатаКон);
	
КонецПроцедуры // КнопкаНастройкаПериодаНажатие()

Процедура ПередСохранениемЗначений(Отказ)
	
	СохраненныеНастройки = Новый Структура(
	"Организация, ОплатаТруда, Налоги, НастройкиПостроителяОтчета",
	Организация, ОплатаТруда, Налоги, ПостроительОтчета.ПолучитьНастройки(Истина, Истина, Истина, Истина));
	
КонецПроцедуры

Процедура ПослеВосстановленияЗначений()
	
	// Если настройка восстанавливается, когда открывается форма сформированного отчета, игнорируем
	Если НеЗаполнятьНастройкиПриОткрытии Тогда
		Возврат;
	КонецЕсли;
	
	// Тип восстановленного значения должен быть Структура
	Если НЕ ТипЗнч(СохраненныеНастройки) = Тип("Структура") Тогда 
		Возврат;
	КонецЕсли;
	
	СохраненныеНастройки.Свойство("Организация", Организация);
	СохраненныеНастройки.Свойство("Налоги", Налоги);
	СохраненныеНастройки.Свойство("ОплатаТруда",   ОплатаТруда);
	
	// После установки счета и флагов можно заполнять текст построителя
	ЗаполнитьНачальныеНастройки();
	
	НастройкиПостроителяОтчета = Неопределено;
	СохраненныеНастройки.Свойство("НастройкиПостроителяОтчета", НастройкиПостроителяОтчета);
	Если НастройкиПостроителяОтчета<> Неопределено Тогда
		ПостроительОтчета.УстановитьНастройки(НастройкиПостроителяОтчета, Истина, Истина, Истина, Истина);
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельЗаголовок(Кнопка)
	
	ПоказыватьЗаголовок = Не ПоказыватьЗаголовок;
	ВыводЗаголовка();
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ТиповыеОтчеты.НазначитьФормеУникальныйКлючИдентификации(ЭтаФорма);

	ДатаНач = НачалоМесяца(ОбщегоНазначения.ПолучитьРабочуюДату());
	ДатаКон = КонецМесяца(ОбщегоНазначения.ПолучитьРабочуюДату());
	
	Если НЕ НеЗаполнятьНастройкиПриОткрытии Тогда
		
		ПоказыватьЗаголовок = Истина;
		
		СтруктураОбщихПараметров = ВосстановитьЗначение("ОбщиеПараметрыОтчетовХозрасчетный");
		Если ТипЗнч(СтруктураОбщихПараметров) = Тип("Структура") Тогда
			
			
			СтруктураОбщихПараметров.Свойство("Организация", Организация);
			СтруктураОбщихПараметров.Свойство("ДатаНач", ДатаНач);
			СтруктураОбщихПараметров.Свойство("ДатаКон", ДатаКон);
			
			Если ДатаКон = '00010101' тогда
				ДатаНач = НачалоМесяца(ОбщегоНазначения.ПолучитьРабочуюДату());
			КонецЕсли;
			
			Если ДатаКон = '00010101' тогда
				ДатаКон = КонецМесяца(ОбщегоНазначения.ПолучитьРабочуюДату());
			КонецЕсли;
		КонецЕсли;
		
		ВысотаЗаголовка = 0;
		НастроитьПоУмолчанию();
		
	КонецЕсли; 
	
	Если Не НеЗаполнятьНастройкиПриОткрытии Тогда 
		Организация = глЗначениеПеременной("ОсновнаяОрганизация");
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	Если НЕ НеЗаполнятьНастройкиПриОткрытии Тогда
		ВыводЗаголовка();
		СформироватьЗаголовокФормы();
	КонецЕсли;
	
	НеЗаполнятьНастройкиПриОткрытии = Ложь;
	
	УправлениеПометкамиКнопокЗаголовковКоманднойПанели(ЭтаФорма, ПоказыватьЗаголовок);	

КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	СтруктураОбщихПараметров = ВосстановитьЗначение("ОбщиеПараметрыОтчетовХозрасчетный");
	Если ТипЗнч(СтруктураОбщихПараметров) <> Тип("Структура") Тогда
		СтруктураОбщихПараметров = Новый Структура;
	КонецЕсли;
		
	СтруктураОбщихПараметров.Вставить("Организация", Организация);
	СтруктураОбщихПараметров.Вставить("ДатаНач", ДатаНач);
	СтруктураОбщихПараметров.Вставить("ДатаКон", ДатаКон);
	
	СохранитьЗначение("ОбщиеПараметрыОтчетовХозрасчетный", СтруктураОбщихПараметров);
	
КонецПроцедуры

Процедура ОбновлениеОтображения()

	СформироватьЗаголовокФормы();

КонецПроцедуры

Процедура ДокументРезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	
	Если Расшифровка <> Неопределено Тогда
		
		ОбщаяРасшифровка = Элемент.Область(1, 1).Расшифровка;
		Отчет = Отчеты.ОтчетПоПроводкам.Создать();
		Отчет.РежимРасшифровки = Истина;
		ФормаОтчета = Отчет.ПолучитьФорму(, , Новый УникальныйИдентификатор());

		
		Если Расшифровка.Количество() > 1 Тогда
			СписокСчетовДт = Новый СписокЗначений;
			СписокСчетовКт = Новый СписокЗначений;
			
			Отчет.НачалоПериода = ДатаНач;
			Отчет.КонецПериода  = ДатаКон;
			Отчет.Организация   = Организация;
			Отчет.Настроить();
			
			Для каждого ВыбраннаяРасшифровка из Расшифровка Цикл
				
				Если ТипЗнч(ОбщаяРасшифровка) = Тип("Структура") 
					ИЛИ ТипЗнч(ОбщаяРасшифровка) = Тип("Соответствие") Тогда
					
					Для Каждого Элемент Из ОбщаяРасшифровка Цикл
						
						Если ТипЗнч(Элемент.Значение) = Тип("ТаблицаЗначений") Тогда
							ВыбраннаяРасшифровка.Вставить(Элемент.Ключ, Элемент.Значение.Скопировать());
						Иначе
							ВыбраннаяРасшифровка.Вставить(Элемент.Ключ, Элемент.Значение);
						КонецЕсли;
						
					КонецЦикла;
					
				КонецЕсли;
				
				СписокСчетовДт.Добавить(ВыбраннаяРасшифровка["СчетДт"]);
				СписокСчетовКт.Добавить(ВыбраннаяРасшифровка["СчетКт"]);
				
				Если ВыбраннаяРасшифровка["Отбор"] <> Неопределено Тогда
					Для Каждого СтрокаОтбора Из ВыбраннаяРасшифровка["Отбор"] Цикл
						ТиповыеОтчеты.ДобавитьОтбор(Отчет.КомпоновщикНастроек, СтрокаОтбора.Ключ, СтрокаОтбора.Значение);
					КонецЦикла;
				КонецЕсли;
				
			КонецЦикла;
			ТиповыеОтчеты.ДобавитьОтбор(Отчет.КомпоновщикНастроек, "СчетКт", СписокСчетовКт, ВидСравненияКомпоновкиДанных.ВСписке);
			ТиповыеОтчеты.ДобавитьОтбор(Отчет.КомпоновщикНастроек, "СчетДт", СписокСчетовДт, ВидСравненияКомпоновкиДанных.ВСписке);
			
			
		Иначе
			
			Для каждого ВыбраннаяРасшифровка из Расшифровка Цикл
				Если ТипЗнч(ОбщаяРасшифровка) = Тип("Структура") 
					ИЛИ ТипЗнч(ОбщаяРасшифровка) = Тип("Соответствие") Тогда
					
					Для Каждого Элемент Из ОбщаяРасшифровка Цикл
						
						Если ТипЗнч(Элемент.Значение) = Тип("ТаблицаЗначений") Тогда
							ВыбраннаяРасшифровка.Вставить(Элемент.Ключ, Элемент.Значение.Скопировать());
						Иначе
							ВыбраннаяРасшифровка.Вставить(Элемент.Ключ, Элемент.Значение);
						КонецЕсли;
						
					КонецЦикла;
					
				КонецЕсли;
				Отчет.НачалоПериода = ДатаНач;
				Отчет.КонецПериода  = ДатаКон;
				Отчет.Организация   = Организация;
				Отчет.Настроить();
				ТиповыеОтчеты.ДобавитьОтбор(Отчет.КомпоновщикНастроек, "СчетДт", ВыбраннаяРасшифровка["СчетДт"]);
				ТиповыеОтчеты.ДобавитьОтбор(Отчет.КомпоновщикНастроек, "СчетКт", ВыбраннаяРасшифровка["СчетКт"]);	
				Если ВыбраннаяРасшифровка["Отбор"] <> Неопределено Тогда
					Для Каждого СтрокаОтбора Из ВыбраннаяРасшифровка["Отбор"] Цикл
						ТиповыеОтчеты.ДобавитьОтбор(Отчет.КомпоновщикНастроек, СтрокаОтбора.Ключ, СтрокаОтбора.Значение);
					КонецЦикла;
				КонецЕсли;
			КонецЦикла; 
		КонецЕсли;
		ФормаОтчета.Открыть();
		ФормаОтчета.ОбновитьОтчет();
	КонецЕсли;
	
КонецПроцедуры

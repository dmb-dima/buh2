Перем ВысотаЗаголовка;
Перем ПоказыватьЗаголовок;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Процедура ВыводЗаголовка()

	// Перезаполнять заголовок можно только у "чистого" отчета
	Если ЭлементыФормы.ДокументРезультат.ВысотаТаблицы = 0 Тогда
		ВнешняяОбработкаОбъект.СформироватьОтчет(ЭлементыФормы.ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, Истина);
	КонецЕсли;

	Если ЗначениеЗаполнено(ВысотаЗаголовка) Тогда
		ЭлементыФормы.ДокументРезультат.Область(1,,ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;
	КонецЕсли;

	УправлениеПометкамиКнопокКоманднойПанели();

КонецПроцедуры // ВыводЗаголовка()

Процедура УправлениеПометкамиКнопокКоманднойПанели()

	ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Заголовок.Пометка                = ПоказыватьЗаголовок;
	ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Подменю.Кнопки.Заголовок.Пометка = ПоказыватьЗаголовок;

КонецПроцедуры // УправлениеПометкамиКнопокКоманднойПанели()

Процедура ЗаполнитьСписокУсловийПолучения()

	УсловияПолучения.Очистить();
	УсловияПолучения.Добавить("ЗаПлату",				"За плату");
	УсловияПолучения.Добавить("ЦелевоеФинансирование",	"Целевое финансирование");
	УсловияПолучения.Добавить("ИныеУсловия",	        "Иные условия");
	
	Если УправлениеОтчетами.ВСпискеНеУстановленыПометки(УсловияПолучения) Тогда
		УсловияПолучения.ЗаполнитьПометки(Истина);
	КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьСписокВидовРасходов()

	ВидыРасходов.Очистить();
	
	// Внеоборотные активы
	ВидыРасходов.Добавить("На приобретение ОС");
	ВидыРасходов.Добавить("На приобретение оборудования, требующего монтажа");
	ВидыРасходов.Добавить("На НИОКР");
	ВидыРасходов.Добавить("На освоение природных ресурсов");
	ВидыРасходов.Добавить("Транспортные расходы");
	ВидыРасходов.Добавить("На приобретение НМА");

	// ТМЦ
	ВидыРасходов.Добавить("На приобретение материалов");
	ВидыРасходов.Добавить("На приобретение товаров");
	ВидыРасходов.Добавить("На приобретение паев");
	ВидыРасходов.Добавить("На приобретение ценных бумаг");
	ВидыРасходов.Добавить("На приобретение прав требования");

	//Нормируемые
	ВидыРасходов.Добавить("Представительские расходы");
	ВидыРасходов.Добавить("Расходы на рекламу (нормируемые)");

	// Текущие расходы
	ВидыРасходов.Добавить("Расходы на реализацию ОС");
	ВидыРасходов.Добавить("Расходы на реализацию НМА");
	ВидыРасходов.Добавить("Расходы на реализацию прочего имущества");
	ВидыРасходов.Добавить("Внереализационные расходы");
	ВидыРасходов.Добавить("Прочие косвенные расходы");
	ВидыРасходов.Добавить("Другие существенные условия");
	

	// РБП 
	ВидыРасходов.Добавить("На долгосрочное страхование жизни");
	ВидыРасходов.Добавить("Страхование на оплату медицинских расходов");
	ВидыРасходов.Добавить("Страхование на случай смерти и утраты трудоспособности");
	ВидыРасходов.Добавить("Расходы, связанные с реализацией имущественных прав");
	ВидыРасходов.Добавить("Расходы, связанные с реализацией ЦБ");
	ВидыРасходов.Добавить("Прочие РБП");

	ВидыРасходов.Добавить("Расходы, не учитываемые в целях налогообложения");
	ВидыРасходов.Добавить("Без расходов");
	ВидыРасходов.Добавить("Прочие доходы");
	
	ВидыРасходов.ЗаполнитьПометки(Истина);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

Процедура КнопкаНастройкаПериодаНажатие(Элемент)

	Если НП.Редактировать() Тогда

		ДатаНач = НП.ПолучитьДатуНачала();
		ДатаКон = НП.ПолучитьДатуОкончания();

	КонецЕсли;

КонецПроцедуры // КнопкаНастройкаПериодаНажатие()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ НАЖАТИЯ КНОПОК КОМАНДНОЙ ПАНЕЛИ

Процедура КоманднаяПанельФормыНастройка(Кнопка)

	ФормаНастройка = ПолучитьФорму("ФормаНастройка", ЭтаФорма);

	ФормаНастройка.ОткрытьМодально();

КонецПроцедуры // КоманднаяПанельФормыНастройка()

Процедура КоманднаяПанельФормыСформировать(Элемент)

	ВнешняяОбработкаОбъект.СформироватьОтчет(ЭлементыФормы.ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка);

	ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.ДокументРезультат;

КонецПроцедуры

Процедура КоманднаяПанельЗаголовок(Кнопка)

	ПоказыватьЗаголовок = Не ПоказыватьЗаголовок;
	ВыводЗаголовка();

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием()

	ПоказыватьЗаголовок = ИСТИНА;

КонецПроцедуры

// Процедура - обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии()

	ВыводЗаголовка();

	ЗаполнитьСписокУсловийПолучения();
	ЗаполнитьСписокВидовРасходов();

	// Проверка ведения однофирменности
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Организация = глЗначениеПеременной("ОсновнаяОрганизация");
	КонецЕсли;

КонецПроцедуры

Процедура ДатаНачПриИзменении(Элемент)
	
	НП.УстановитьПериод(ДатаНач, ДатаКон);

КонецПроцедуры

Процедура ДатаКонПриИзменении(Элемент)

	НП.УстановитьПериод(ДатаНач, ДатаКон);

КонецПроцедуры

Процедура ДокументРезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	Если ТипЗНЧ(Расшифровка) = Тип("СписокЗначений") Тогда
		СтандартнаяОбработка = Ложь;
		Результат = Неопределено;
		Результат = Расшифровка.ВыбратьЭлемент("Список документов - оснований для признания объектов учета");
		Если Не Результат = Неопределено Тогда
			Результат.Значение.ПолучитьФорму().Открыть();
		КонецЕсли; 
	КонецЕсли

КонецПроцедуры

#Если Клиент Тогда

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

//Функция определяет контактных лиц контрагента
//Параметры:
//Контрагент - СправочникСсылка.Контрагенты, по которому происходит отбор
//ВыбТипКЛ - Тип контактного лица
//Возвращается таблица значений с колонками
//КонтактноеЛицо, ДолжностьКЛ
Функция ПолучитьКонтактныхЛицКонтрагента()

	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ВыбКонтрагент", КонтрагентОтчета);
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КонтактныеЛица.Ссылка    КАК КонтактноеЛицо,
	|	КонтактныеЛица.Должность КАК Должность,
	|	КонтактныеЛица.Роль      КАК Роль,
	|	КонтактныеЛица.Фамилия   КАК Фамилия,
	|	КонтактныеЛица.Имя       КАК Имя,
	|	КонтактныеЛица.Отчество  КАК Отчество
	|ИЗ
	|	Справочник.КонтактныеЛица КАК КонтактныеЛица
	|
	|ГДЕ
	|	КонтактныеЛица.ОбъектВладелец = &ВыбКонтрагент
	|
	|УПОРЯДОЧИТЬ ПО
	|	КонтактныеЛица.Наименование ВОЗР";

	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции // ПолучитьКонтактныхЛицКонтрагента()

//Возвращает таблицу значений с данными о контактной информации по заданным параметрам
//
Функция ПолучитьДанныеКонтактнойИнформации(Объект, ТипИнформации = Неопределено, ВидИнформации = Неопределено)

	Запрос = Новый Запрос;

	СтрокаВиртуальныхПараметров = "КонтактнаяИнформация.Объект = &Объект";

	Если ТипИнформации <> Неопределено Тогда
		СтрокаВиртуальныхПараметров = СтрокаВиртуальныхПараметров + " И КонтактнаяИнформация.Тип = &Тип";
		Запрос.УстановитьПараметр("Тип", ТипИнформации);
	КонецЕсли;

	Если ВидИнформации <> Неопределено Тогда
		СтрокаВиртуальныхПараметров = СтрокаВиртуальныхПараметров + " И КонтактнаяИнформация.Вид = &Вид";
		Запрос.УстановитьПараметр("Вид", ВидИнформации);
	КонецЕсли;

	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КонтактнаяИнформация.Объект        КАК Объект,
	|	КонтактнаяИнформация.Вид           КАК Вид,
	|	КонтактнаяИнформация.Тип           КАК Тип,
	|	КонтактнаяИнформация.Представление КАК Представление
	|ИЗ
	|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|
	|ГДЕ
	|	" + СтрокаВиртуальныхПараметров + "";

	Запрос.УстановитьПараметр("ДатаСреза", ?(ДатаОтчета = '00010101000000', Неопределено, ДатаОтчета));
	Запрос.УстановитьПараметр("Объект"   , Объект);

	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции // ПолучитьДанныеКонтактнойИнформации()

// Процедура заполняет поле табличного документа
//
// Параметры
//  Таб - поле табличного документа
//  ПорядковыйНомер - порядковый номер выводимого параметра
//  Имя - строка, имя выводимого параметра
//
// Возвращаемое значение
//  НЕТ
Процедура ВывестиДанные(Таб, ПорядковыйНомер, Имя)

	//Общая информация

	Макет = ПолучитьМакет("Макет");

	Если Имя = "ОбщиеДанные" Тогда

		Секция = Макет.ПолучитьОбласть("Шапка_Общие");

		Секция.Параметры.ПорядковыйНомер = ПорядковыйНомер;

		Таб.Вывести(Секция,1);

		Секция = Макет.ПолучитьОбласть("Строка_Общие");

		Если ЗначениеЗаполнено(КонтрагентОтчета.ЮрФизЛицо) Тогда

			Если КонтрагентОтчета.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо Тогда
				Секция.Параметры.ЮрФизЛицо = "Юридическое лицо";
			Иначе //Физическое лицо
				Секция.Параметры.ЮрФизЛицо = "Физическое лицо";
			КонецЕсли;

		Иначе
			Секция.Параметры.ЮрФизЛицо = "Не задано";
		КонецЕсли;

		Если ЗначениеЗаполнено(КонтрагентОтчета.ГоловнойКонтрагент) Тогда

			СтрокаГоловногоКонтрагента = Строка(КонтрагентОтчета.ГоловнойКонтрагент);

			Если ЗначениеЗаполнено(КонтрагентОтчета.ГоловнойКонтрагент.ЮрФизЛицо) Тогда
				Если КонтрагентОтчета.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо Тогда
					СтрокаГоловногоКонтрагента = СтрокаГоловногоКонтрагента + " (Юридическое лицо)";
				Иначе //Физическое лицо
					СтрокаГоловногоКонтрагента = СтрокаГоловногоКонтрагента + " (Физическое лицо)";
				КонецЕсли;
			КонецЕсли;

			Секция.Параметры.ГоловнойКонтрагент           = СтрокаГоловногоКонтрагента;
			Секция.Области.ГоловнойКонтрагент.Расшифровка = КонтрагентОтчета.ГоловнойКонтрагент;

		Иначе
			Секция.Параметры.ГоловнойКонтрагент = "Не задан";

		КонецЕсли;

		//Секция = Макет.ПолучитьОбласть("Шапка_ИнформацияКонтрагента");
		//Таб.Вывести(Секция, 2);

		Если КонтрагентОтчета.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо Тогда //Юридическое лицо

			Секция = Макет.ПолучитьОбласть("ИнформацияЮрЛицо");
			Секция.Параметры.ИНН       = КонтрагентОтчета.ИНН;
			Секция.Параметры.КПП       = КонтрагентОтчета.КПП;
			Секция.Параметры.КодПоОКПО = КонтрагентОтчета.КодПоОКПО;

		Иначе //Физическое лицо

			Секция = Макет.ПолучитьОбласть("ИнформацияФизЛицо");
			Секция.Параметры.ИНН                = КонтрагентОтчета.ИНН;
			Секция.Параметры.ДокументУдЛичность = КонтрагентОтчета.ДокументУдостоверяющийЛичность;

		КонецЕсли;

		ЮрАдрес   = ПолучитьДанныеКонтактнойИнформации(КонтрагентОтчета, Перечисления.ТипыКонтактнойИнформации.Адрес, Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента);
		Секция.Параметры.ЮрАдрес   = ?(ЮрАдрес.Количество() = 0, "", ЮрАдрес[0].Представление);

		ФактАдрес = ПолучитьДанныеКонтактнойИнформации(КонтрагентОтчета, Перечисления.ТипыКонтактнойИнформации.Адрес, Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента);
		Секция.Параметры.ФактАдрес = ?(ФактАдрес.Количество() = 0, "", ФактАдрес[0].Представление);

		Телефон   = ПолучитьДанныеКонтактнойИнформации(КонтрагентОтчета, Перечисления.ТипыКонтактнойИнформации.Телефон, Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагента);
		Секция.Параметры.Телефон   = ?(Телефон.Количество() = 0, "", Телефон[0].Представление);

		Таб.Вывести(Секция,3);

		Если ЗначениеЗаполнено(КонтрагентОтчета.ОсновнойБанковскийСчет) тогда

			Секция = Макет.ПолучитьОбласть("БанкКонтрагента");
			Секция.Параметры.НомерСчета = КонтрагентОтчета.ОсновнойБанковскийСчет.НомерСчета;

			Если ЗначениеЗаполнено(КонтрагентОтчета.ОсновнойБанковскийСчет.Банк) Тогда
				Секция.Параметры.Банк    = КонтрагентОтчета.ОсновнойБанковскийСчет.Банк.ПолноеНаименование() + " " + КонтрагентОтчета.ОсновнойБанковскийСчет.Банк.Город;
				Секция.Параметры.Бик     = КонтрагентОтчета.ОсновнойБанковскийСчет.Банк.Код;
				Секция.Параметры.КорСчет = КонтрагентОтчета.ОсновнойБанковскийСчет.Банк.КоррСчет;
			КонецЕсли; 

			Таб.Вывести(Секция,3);

		КонецЕсли;

		Секция = Макет.ПолучитьОбласть("ПустаяСтрока");
		Таб.Вывести(Секция);

	ИначеЕсли Имя = "КонтИнф" Тогда

		//Контактная информация контрагента
		Секция = Макет.ПолучитьОбласть("Шапка_КонтактнаяИнформация");
		Секция.Параметры.ПорядковыйНомер = ПорядковыйНомер;
		Таб.Вывести(Секция,1);

		ТЗКонтИнф = ПолучитьДанныеКонтактнойИнформации(КонтрагентОтчета);
		ТЗКонтИнф.Сортировать("Тип ВОЗР");
		ПрошлыйТип = Неопределено;

		Для каждого СтрокаКИ Из ТЗКонтИнф Цикл

			Если ПрошлыйТип <> СтрокаКИ.Тип Тогда

				Секция = Макет.ПолучитьОбласть("ПустаяСтрока");

				Таб.Вывести(Секция, 2);

				СекцияКИ_Тип = Макет.ПолучитьОбласть("КонтИнфТип");
				СекцияКИ_Тип.Параметры.ТипКИ = СтрокаКИ.Тип;

				Таб.Вывести(СекцияКИ_Тип,2);

			КонецЕсли;

			Секция = Макет.ПолучитьОбласть("Строка_КонтактнаяИнформация");
			Секция.Параметры.ВидКИ    = ?(ТипЗнч(СтрокаКИ.Вид)=Тип("Строка"),СокрЛП(СтрокаКИ.Вид),СтрокаКИ.Вид.Наименование);
			Секция.Параметры.Значение = СтрокаКИ.Представление;

			Таб.Вывести(Секция,2);

			ПрошлыйТип = СтрокаКИ.Тип;

		КонецЦикла;

		Секция = Макет.ПолучитьОбласть("ПустаяСтрока");
		Таб.Вывести(Секция);

	ИначеЕсли Имя = "КонтЛица" Тогда

		//Контактные лица контрагента
		Секция = Макет.ПолучитьОбласть("Шапка_КонтактныеЛица");
		Секция.Параметры.ПорядковыйНомер = ПорядковыйНомер;

		Таб.Вывести(Секция,1);

		ТаблицаКЛ = ПолучитьКонтактныхЛицКонтрагента();
		Ном       = 0;

		Для каждого СтрокаКЛ Из ТаблицаКЛ Цикл

			Ном    = Ном + 1;
			Секция = Макет.ПолучитьОбласть("Строка_КонтактныеЛица");
			ПредставлениеКонтактногоЛица = СокрЛП(СтрокаКЛ.Фамилия) + " "+ СокрЛП(СтрокаКЛ.Имя) + " " + СокрЛП(СтрокаКЛ.Отчество);

			Если НЕ ПустаяСтрока(СтрокаКЛ.Должность) Тогда
				ПредставлениеКонтактногоЛица = ПредставлениеКонтактногоЛица + ", " + СокрЛП(СтрокаКЛ.Должность);
			КонецЕсли;

			Если ЗначениеЗаполнено(СтрокаКЛ.Роль) Тогда
				ПредставлениеКонтактногоЛица = ПредставлениеКонтактногоЛица + " (роль: " + СокрЛП(СтрокаКЛ.Роль) + ")";
			КонецЕсли;

			Секция.Параметры.ПредставлениеКонтактногоЛица           = ПредставлениеКонтактногоЛица;
			Секция.Области.ПредставлениеКонтактногоЛица.Расшифровка = СтрокаКЛ.КонтактноеЛицо;
			Таб.Вывести(Секция,2);

			Если ВыводитьДопКонтИнф Тогда

				ТЗКонтИнф = ПолучитьДанныеКонтактнойИнформации(СтрокаКЛ.КонтактноеЛицо);
				ТЗКонтИнф.Сортировать("Тип ВОЗР");
				ПрошлыйТип = Неопределено;

				Для каждого СтрокаКИ Из ТЗКонтИнф Цикл

					Если ПрошлыйТип <> СтрокаКИ.Тип Тогда

						Если ПрошлыйТип <> Неопределено Тогда
							Секция = Макет.ПолучитьОбласть("ПустаяСтрока");
							Таб.Вывести(Секция);
						КонецЕсли;

						СекцияКИ_Тип = Макет.ПолучитьОбласть("КонтИнфТип");
						СекцияКИ_Тип.Параметры.ТипКИ = СтрокаКИ.Тип;

						Таб.Вывести(СекцияКИ_Тип,2);

					КонецЕсли;

					СекцияКИ = Макет.ПолучитьОбласть("КонтИнф_КонтактныеЛица");
					СекцияКИ.Параметры.ВидКИ    = ?(ТипЗнч(СтрокаКИ.Вид)=Тип("Строка"),СокрЛП(СтрокаКИ.Вид),СтрокаКИ.Вид.Наименование);
					СекцияКИ.Параметры.Значение = СтрокаКИ.Представление;

					Таб.Вывести(СекцияКИ,3);

					ПрошлыйТип = СтрокаКИ.Тип;

				КонецЦикла;

				Секция = Макет.ПолучитьОбласть("ПустаяСтрока");

				Таб.Вывести(Секция, 2);

			КонецЕсли;

		КонецЦикла;

		Секция = Макет.ПолучитьОбласть("ПустаяСтрока");
		Таб.Вывести(Секция);

	КонецЕсли;

КонецПроцедуры // ВывестиОбщиеДанные()

// Процедура формирует отчет
//
// Параметры
//  Таб - поле табличного документа
//
// Возвращаемое значение
//  НЕТ
Процедура СформироватьОтчет(Таб) Экспорт

	Если НЕ ЗначениеЗаполнено(КонтрагентОтчета) Тогда
		Предупреждение("Выберите контрагента!");
		Возврат;
	КонецЕсли;

	Если КонтрагентОтчета.ЭтоГруппа Тогда
		Предупреждение("Отчет нельзя формировать по группе элементов!");
		Возврат;
	КонецЕсли;

	Таб.Очистить();

	Макет = ПолучитьМакет("Макет");
	Таб.НачатьАвтогруппировкуСтрок();

	//Шапка
	Секция = Макет.ПолучитьОбласть("Шапка");
	Секция.Параметры.ПечВыбКонтрагент = КонтрагентОтчета.Наименование;
	Секция.Параметры.ДатаОтчета       = Формат(ДатаОтчета,"ДФ=dd.MM.yyyy");
	Таб.Вывести(Секция,1);

	ПорядковыйНомер = 0;

	Для Индекс = 0 По СписокНастроек.Количество() - 1 Цикл

		Если НЕ СписокНастроек[Индекс].Пометка Тогда
			Продолжить;
		КонецЕсли; 

		ПорядковыйНомер = ПорядковыйНомер + 1;
		ВывестиДанные(Таб, ПорядковыйНомер, СписокНастроек[Индекс].Значение);

	КонецЦикла;

	Таб.ЗакончитьАвтогруппировкуСтрок();

	Таб.ПоказатьУровеньГруппировокСтрок(2);

	Таб.ТолькоПросмотр = Истина;
	Таб.Показать();

КонецПроцедуры

ДатаОтчета = НачалоДня(ТекущаяДата());

СписокНастроек.Добавить("ОбщиеДанные", "Общие данные контрагента"         , Истина);
СписокНастроек.Добавить("КонтИнф",     "Контактная информация контрагента", Истина);
СписокНастроек.Добавить("КонтЛица",    "Контактные лица контрагента"      , Истина);

ВыводитьДопКонтИнф = Истина;

#КонецЕсли
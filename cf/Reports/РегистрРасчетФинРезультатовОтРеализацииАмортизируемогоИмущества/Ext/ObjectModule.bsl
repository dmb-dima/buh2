#Если Клиент Тогда
	
Перем НП Экспорт;

// Возвращает полное наименование элемента справочника, если у этого вида 
// справочников есть реквизит НаименованиеПолное.
// 
// Параметры:      
//    Элемент - элемент справочника, для которого нужно вернуть полное наименование
//
// Возвращаемое значение: 
//  Строка с полным наименованием.
//
Функция ПолноеНаименование(Элемент) Экспорт

	Если НЕ ЗначениеЗаполнено(Элемент) Тогда
		Возврат "";

	ИначеЕсли Элемент.Метаданные().Реквизиты.Найти("НаименованиеПолное") = Неопределено Тогда
		Возврат Элемент.Наименование;;

	ИначеЕсли НЕ ЗначениеЗаполнено(Элемент.НаименованиеПолное) Тогда
		Возврат Элемент.Наименование;

	Иначе
		Возврат Элемент.НаименованиеПолное;
	КонецЕсли;

КонецФункции

// Выполняет запрос и формирует табличный документ-результат отчета
// в соответствии с настройками, заданными значениями реквизитов отчета.
//
// Параметры:
//	ДокументРезультат - табличный документ, формируемый отчетом
//	ПоказыватьЗаголовок - признак видимости строк с заголовком отчета
//	ВысотаЗаголовка - параметр, через который возвращается высота заголовка в строках 
//
Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок = Ложь) Экспорт
	
	ДокументРезультат.Очистить();

	Макет = ПолучитьМакет("Отчет");

	ОбластьЗаголовок  = Макет.ПолучитьОбласть("Заголовок");
	ОбластьСтрока     = Макет.ПолучитьОбласть("Строка");
	ОбластьПодвал     = Макет.ПолучитьОбласть("Подвал");
	
	СрезСведений = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(ДатаКон, Ложь, Организация);
	УчетнаяПолитика = ?(СрезСведений.Количество() = 0, Перечисления.СпособыОценки.ПустаяСсылка(), СрезСведений.СпособОценкиМПЗ);
	Заголовок = "Регистр учета стоимости";

	ОбластьЗаголовок.Параметры.НачалоПериода       = Формат(ДатаНач, "ДФ=dd.MM.yyyy");
	ОбластьЗаголовок.Параметры.КонецПериода        = Формат(ДатаКон, "ДФ=dd.MM.yyyy");
	СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация);
	НазваниеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм");
	ОбластьЗаголовок.Параметры.НазваниеОрганизации = НазваниеОрганизации;
	ОбластьЗаголовок.Параметры.ИННОрганизации      = "" + Организация.ИНН + " / " + Организация.КПП;
	ДокументРезультат.Вывести(ОбластьЗаголовок);

	// Параметр для показа заголовка
	ВысотаЗаголовка = ДокументРезультат.ВысотаТаблицы;

	// Когда нужен только заголовок:
	Если ТолькоЗаголовок Тогда
		Возврат;
	КонецЕсли;

	// Проверим заполнение обязательных реквизитов
	Если НалоговыйУчет.ПроверитьЗаполнениеОбязательныхРеквизитов(ДатаНач,ДатаКон,Организация) Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВысотаЗаголовка) Тогда
		ДокументРезультат.Область("R1:R" + ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;
	КонецЕсли;

    Запрос = Новый Запрос;

	Запрос.УстановитьПараметр("ДатаНач",       ДатаНач);
	Запрос.УстановитьПараметр("ДатаКон",       ДатаКон);
	Запрос.УстановитьПараметр("ГраницаНач",    Новый Граница(НачалоДня(ДатаНач), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ГраницаКон",    Новый Граница(КонецДня(ДатаКон), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация",   Организация);
	Запрос.УстановитьПараметр("ВидСобытияОС",  Перечисления.ВидыСобытийОС.Передача);
	Запрос.УстановитьПараметр("ВидСубконтоОС", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
	Запрос.УстановитьПараметр("ВидСубконтоНМА",ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы);
	Запрос.УстановитьПараметр("ВидСубконтоРеализуемыеАктивы",ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РеализуемыеАктивы);
	Запрос.УстановитьПараметр("Счет91",        ПланыСчетов.Хозрасчетный.ПрочиеДоходыИРасходы);
	Запрос.УстановитьПараметр("СчетНДС",       ПланыСчетов.Хозрасчетный.НДС);
	
	Массив = Новый Массив;
	Массив.Добавить(ПланыСчетов.Хозрасчетный.ВыбытиеОС);
	Массив.Добавить(ПланыСчетов.Хозрасчетный.ВыбытиеМЦ);
	Массив.Добавить(ПланыСчетов.Хозрасчетный.ПереданныеОбъектыНедвижимости);
	Запрос.УстановитьПараметр("Счет01",      Массив);
	Запрос.УстановитьПараметр("Счет04",      ПланыСчетов.Хозрасчетный.НематериальныеАктивыОрганизации);
	Запрос.УстановитьПараметр("Счет02",      Планысчетов.Хозрасчетный.АмортизацияОсновныхСредств);
	Запрос.УстановитьПараметр("Счет05",      ПланыСчетов.Хозрасчетный.АмортизацияНематериальныхАктивов);
	
	
	Запрос.Текст =  
			"ВЫБРАТЬ
            |   ПереданныеАмортОбъекты.Объект КАК Объект,
            |   ПереданныеАмортОбъекты.Период КАК Период,
            |   ЕСТЬNULL(Амортизация.СуммаНУАмортизации, 0) КАК Сумма02,
            |   ЕСТЬNULL(ДоходыИРасходы.СуммаНУОборотДт, 0) КАК Расходы,
            |   ЕСТЬNULL(ДоходыИРасходы.СуммаНУОборотКт, 0) КАК Доходы,
            |   ЕСТЬNULL(ОстаточнаяСтоимость.СуммаНУОстаточнойСтоимости, 0) КАК Сумма01
            |ИЗ
            |   (ВЫБРАТЬ РАЗЛИЧНЫЕ
            |       ПередачаОС.ОсновноеСредство КАК Объект,
            |       ПередачаОС.Период КАК Период
            |   ИЗ
            |       РегистрСведений.СобытияОСОрганизаций.СрезПоследних(
            |               &ГраницаКон,
            |               Организация = &Организация
            |                   И Событие.ВидСобытияОС = &ВидСобытияОС
            |                   И (НЕ ВЫРАЗИТЬ(Регистратор КАК Документ.ПередачаОС).ПравоСобственностиПереходитПослеГосРегистрации)) КАК ПередачаОС
            |   ГДЕ
            |       ПередачаОС.Период МЕЖДУ &ДатаНач И &ДатаКон
            |       И ПередачаОС.Организация = &Организация
            |   
            |   ОБЪЕДИНИТЬ ВСЕ
            |   
            |   ВЫБРАТЬ РАЗЛИЧНЫЕ
            |       ПередачаНМА.НематериальныйАктив,
            |       ПередачаНМА.Дата
            |   ИЗ
            |       Документ.ПередачаНМА КАК ПередачаНМА
            |   ГДЕ
            |       ПередачаНМА.Дата МЕЖДУ &ДатаНач И &ДатаКон
            |       И ПередачаНМА.Проведен
            |       И ПередачаНМА.Организация = &Организация
            |   
            |   ОБЪЕДИНИТЬ ВСЕ
            |   
            |   ВЫБРАТЬ РАЗЛИЧНЫЕ
            |       ПередачаОС.ОсновноеСредство,
            |       РеализацияОтгруженныхТоваров.Дата
            |   ИЗ
            |       Документ.РеализацияОтгруженныхТоваров КАК РеализацияОтгруженныхТоваров
            |           ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СобытияОСОрганизаций.СрезПоследних(
            |                   &ГраницаКон,
            |                   Организация = &Организация
            |                       И Событие.ВидСобытияОС = &ВидСобытияОС
            |                       И ВЫРАЗИТЬ(Регистратор КАК Документ.ПередачаОС).ПравоСобственностиПереходитПослеГосРегистрации) КАК ПередачаОС
            |           ПО РеализацияОтгруженныхТоваров.ДокументОтгрузки = ПередачаОС.Регистратор
            |   ГДЕ
            |       РеализацияОтгруженныхТоваров.Дата МЕЖДУ &ДатаНач И &ДатаКон
            |       И РеализацияОтгруженныхТоваров.Проведен
            |       И РеализацияОтгруженныхТоваров.Организация = &Организация
            |       И ПередачаОС.Регистратор.ПравоСобственностиПереходитПослеГосРегистрации) КАК ПереданныеАмортОбъекты
            |       ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
            |           ДоходыИРасходыОС.Субконто1 КАК ОбъектДоходовИРасходов,
            |           ДоходыИРасходыОС.СуммаНУОборотДт КАК СуммаНУОборотДт,
            |           ДоходыИРасходыОС.СуммаНУОборотКт КАК СуммаНУОборотКт
            |       ИЗ
            |           РегистрБухгалтерии.Хозрасчетный.Обороты(&ГраницаНач, &ГраницаКон, , Счет В ИЕРАРХИИ (&Счет91), &ВидСубконтоРеализуемыеАктивы, Организация = &Организация, (НЕ КорСчет В ИЕРАРХИИ (&СчетНДС)), ) КАК ДоходыИРасходыОС
            |       
            |       ОБЪЕДИНИТЬ ВСЕ
            |       
            |       ВЫБРАТЬ
            |           ДоходыИРасходыНМА.Субконто1,
            |           ДоходыИРасходыНМА.СуммаНУОборотДт,
            |           ДоходыИРасходыНМА.СуммаНУОборотКт
            |       ИЗ
            |           РегистрБухгалтерии.Хозрасчетный.Обороты(&ГраницаНач, &ГраницаКон, , Счет В ИЕРАРХИИ (&Счет91), &ВидСубконтоРеализуемыеАктивы, Организация = &Организация, (НЕ КорСчет В ИЕРАРХИИ (&СчетНДС)), ) КАК ДоходыИРасходыНМА) КАК ДоходыИРасходы
            |       ПО ПереданныеАмортОбъекты.Объект = ДоходыИРасходы.ОбъектДоходовИРасходов
            |       ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
            |           АмортизацияОС.СуммаНУОборотДт КАК СуммаНУАмортизации,
            |           АмортизацияОС.Субконто1 КАК ОбъектАмортизации
            |       ИЗ
            |           РегистрБухгалтерии.Хозрасчетный.Обороты(&ГраницаНач, &ГраницаКон, , Счет В ИЕРАРХИИ (&Счет02), &ВидСубконтоОС, Организация = &Организация, , ) КАК АмортизацияОС
            |       
            |       ОБЪЕДИНИТЬ ВСЕ
            |       
            |       ВЫБРАТЬ
            |           АмортизацияНМА.СуммаНУОборотДт,
            |           АмортизацияНМА.Субконто1
            |       ИЗ
            |           РегистрБухгалтерии.Хозрасчетный.Обороты(&ГраницаНач, &ГраницаКон, , Счет В ИЕРАРХИИ (&Счет05), &ВидСубконтоНМА, Организация = &Организация, , ) КАК АмортизацияНМА) КАК Амортизация
            |       ПО ПереданныеАмортОбъекты.Объект = Амортизация.ОбъектАмортизации
            |       ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
            |           ОстаточнаяСтоимостьОС.Субконто1 КАК ОбъектОстаточнойСтоимости,
            |           ОстаточнаяСтоимостьОС.СуммаНУОборотКт КАК СуммаНУОстаточнойСтоимости
            |       ИЗ
            |           РегистрБухгалтерии.Хозрасчетный.Обороты(&ГраницаНач, &ГраницаКон, , Счет В ИЕРАРХИИ (&Счет01), &ВидСубконтоОС, Организация = &Организация, (НЕ КорСчет В ИЕРАРХИИ (&Счет01)), ) КАК ОстаточнаяСтоимостьОС
            |       
            |       ОБЪЕДИНИТЬ ВСЕ
            |       
            |       ВЫБРАТЬ
            |           ОстаточнаяСтоимостьНМА.Субконто1,
            |           ОстаточнаяСтоимостьНМА.СуммаНУОборотКт
            |       ИЗ
            |           РегистрБухгалтерии.Хозрасчетный.Обороты(&ГраницаНач, &ГраницаКон, , Счет В ИЕРАРХИИ (&Счет04), &ВидСубконтоНМА, Организация = &Организация, , ) КАК ОстаточнаяСтоимостьНМА) КАК ОстаточнаяСтоимость
            |       ПО ПереданныеАмортОбъекты.Объект = ОстаточнаяСтоимость.ОбъектОстаточнойСтоимости
            |
            |СГРУППИРОВАТЬ ПО
            |   ПереданныеАмортОбъекты.Объект,
            |   ПереданныеАмортОбъекты.Период,
            |   ЕСТЬNULL(ОстаточнаяСтоимость.СуммаНУОстаточнойСтоимости, 0),
            |   ЕСТЬNULL(Амортизация.СуммаНУАмортизации, 0),
            |   ЕСТЬNULL(ДоходыИРасходы.СуммаНУОборотДт, 0),
            |   ЕСТЬNULL(ДоходыИРасходы.СуммаНУОборотКт, 0)";	   
				   
				   
 Результат = Запрос.Выполнить().Выгрузить();
 ТаблицаДат = Результат.Скопировать();
 Убыток = 0; 
 Для Каждого Выборка Из Результат Цикл    
	ОбластьСтрока.Параметры.ДатаОперации            = Выборка.Период;
	ОбластьСтрока.Параметры.НаименованиеОбъекта  	= Выборка.Объект;
	ОбластьСтрока.Параметры.Выручка		            = Выборка.Доходы;
	ОбластьСтрока.Параметры.ПервоначальнаяСтоимость = Выборка.Сумма01;
	ОбластьСтрока.Параметры.СуммаАмортизации		    = Выборка.Сумма02;
	ОбластьСтрока.Параметры.РасходыПоРеализации		= Выборка.Расходы - (Выборка.СУмма01 - Выборка.СУмма02);
	ОбластьСтрока.Параметры.ОбщаяСуммаРасходов      = Выборка.Расходы;
	Прибыль = Выборка.Доходы - Выборка.Расходы;
	ОбластьСтрока.Параметры.СуммаУбытка		        = ?(Прибыль > 0, 0, -Прибыль);
	Убыток = Убыток + ?(Прибыль > 0, 0, -Прибыль);
	ДокументРезультат.Вывести(ОбластьСтрока);
 КонецЦикла;
	ОбластьПодвал.Параметры.ИтогоВыручка            = Результат.Итог("Доходы");
	ОбластьПодвал.Параметры.ИтогоСуммаРасходов	    = Результат.Итог("Расходы");
	ОбластьПодвал.Параметры.ИтогоСуммаУбытка        = Убыток;
	СтруктураЛиц = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Организация, ДатаКон);
	ОбластьПодвал.Параметры.ОтветственныйЗаРегистры = СтруктураЛиц.ОтветственныйЗаРегистры;
	ДокументРезультат.Вывести(ОбластьПодвал);
	 
КонецПроцедуры



НП   = Новый НастройкаПериода;
////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
// 

#КонецЕсли
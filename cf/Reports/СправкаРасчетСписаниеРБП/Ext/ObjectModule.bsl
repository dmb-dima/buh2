#Если Клиент Тогда
	
	Перем НП Экспорт;
	
	Функция СформироватьТекстЗапроса()
		
		Текст	= "ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	РасчетСписанияРБП.ПериодРасчета КАК Период,
		|	РасчетСписанияРБП.ПодразделениеОрганизации КАК Подразделение,
		|	РасчетСписанияРБП.СпособПризнанияРасходов КАК СпособПризнанияРасходов,
		|	РасчетСписанияРБП.Статья КАК Статья,
		|	РасчетСписанияРБП.СчетУчета КАК СчетУчета,
		|	РасчетСписанияРБП.СчетСписания КАК СчетСписания,
		|	РасчетСписанияРБП.ДатаНачала КАК ДатаНачала,
		|	РасчетСписанияРБП.ДатаОкончания КАК ДатаОкончания,
		|	ЕСТЬNULL(РасчетСписанияРБП.СуммаДоговора, 0) КАК СуммаДоговора,
		|	ЕСТЬNULL(РасчетСписанияРБП.КоличествоМесяцевДней, 0) КАК КоличествоМесяцевДней,
		|	ЕСТЬNULL(РасчетСписанияРБП.КоличествоМесяцевДнейТекущегоПериода, 0) КАК КоличествоМесяцевДнейТекущегоПериода,
		|	ЕСТЬNULL(РасчетСписанияРБП.НачОстаток, 0) КАК НачОстаток,
		|	ЕСТЬNULL(РасчетСписанияРБП.Сумма, 0) КАК Сумма,
		|	ЕСТЬNULL(РасчетСписанияРБП.КонОстаток, 0) КАК КонОстаток,
		|	ЕСТЬNULL(РасчетСписанияРБП.НачОстатокПР, 0) КАК НачОстатокПР,
		|	ЕСТЬNULL(РасчетСписанияРБП.НачОстатокВР, 0) КАК НачОстатокВР,
		|	ЕСТЬNULL(РасчетСписанияРБП.СуммаПР, 0) КАК СуммаПР,
		|	ЕСТЬNULL(РасчетСписанияРБП.СуммаВР, 0) КАК СуммаВР,
		|	ЕСТЬNULL(РасчетСписанияРБП.КонОстатокПР, 0) КАК КонОстатокПР,
		|	ЕСТЬNULL(РасчетСписанияРБП.КонОстатокВР, 0) КАК КонОстатокВР,
		|	ЕСТЬNULL(РасчетСписанияРБП.СуммаНУ, 0) КАК СуммаНУ,
		|	ЕСТЬNULL(РасчетСписанияРБП.НачОстатокНУ, 0) КАК НачОстатокНУ,
		|	ЕСТЬNULL(РасчетСписанияРБП.КонОстатокНУ, 0) КАК КонОстатокНУ
		|ИЗ
		|	РегистрСведений.РасчетСписанияРБП КАК РасчетСписанияРБП
		|ГДЕ
		|	РасчетСписанияРБП.ПериодРасчета МЕЖДУ &ДатаНач И &ДатаКон
		|	И РасчетСписанияРБП.Организация = &Организация
		|	И РасчетСписанияРБП.Активность
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период,
		|	СпособПризнанияРасходов,
		|	Статья,
		|	ПодразделениеОрганизации
		|ИТОГИ
		|	СУММА(НачОстаток),
		|	СУММА(Сумма),
		|	СУММА(КонОстаток),
		|	СУММА(НачОстатокПР),
		|	СУММА(НачОстатокВР),
		|	СУММА(СуммаПР),
		|	СУММА(СуммаВР),
		|	СУММА(КонОстатокПР),
		|	СУММА(КонОстатокВР),
		|	СУММА(СуммаНУ),
		|	СУММА(НачОстатокНУ),
		|	СУММА(КонОстатокНУ)
		|ПО
		|	Период,
		|	СпособПризнанияРасходов,
		|	Статья,
		|	ПодразделениеОрганизации";
		
		Возврат Текст;
		
	КонецФункции
	
	// Выполняет запрос и формирует табличный документ-результат отчета
	// в соответствии с настройками, заданными значениями реквизитов отчета.
	//
	// Параметры:
	//	ДокументРезультат - табличный документ, формируемый отчетом
	//	ПоказыватьЗаголовок - признак видимости строк с заголовком отчета
	//	ВысотаЗаголовка - параметр, через который возвращается высота заголовка в строках 
	//
	Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок = Ложь, НачалоПодписи, ПоказыватьПодписи) Экспорт
		
		ДатаНач = НачалоМесяца(ПериодРегистрации);
		ДатаКон  = КонецМесяца(ПериодРегистрации);
		Если ДатаНач > ДатаКон И ДатаКон <> '00010101000000' Тогда
			Предупреждение("Дата начала периода не может быть больше даты окончания периода");
			Возврат;
		КонецЕсли;
		НачалоПериода = НачалоДня(ДатаНач);
		КонецПериода  = КонецДня(ДатаКон);
		
		ДокументРезультат.Очистить();
		
		Макет      = ПолучитьМакет("Отчет");
		МакетОбщий = ПолучитьОбщийМакет("СправкаРасчет");
		
		ЗаголовокОтчета = МакетОбщий.ПолучитьОбласть("Заголовок");
		
		
		// Когда нужен только заголовок:
		Если ТолькоЗаголовок Тогда
			Возврат;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ВысотаЗаголовка) Тогда
			ДокументРезультат.Область("R1:R" + ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;
		КонецЕсли;
		
		СписокСчетов = Новый Массив;
		СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасходыБудущихПериодов);
		СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.ПлатежиПоДобровольномуСтрахованиюРаботников);
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ДатаНач",     НачалоДня(ДатаНач));
		Запрос.УстановитьПараметр("ДатаКон",     КонецДня(ДатаКон));
		Запрос.УстановитьПараметр("Организация", Организация);
		
		ОграниченияПоПостроителюОтчета = СтандартныеОтчеты.ПолучитьТекстОграниченийПоПостроителюОтчета(ПостроительОтчета, Запрос);
		
		Если Не ПустаяСтрока(ОграниченияПоПостроителюОтчета) Тогда
			
			ОграниченияПоПостроителюОтчета = " И " + ОграниченияПоПостроителюОтчета;
			ОграниченияПоПостроителюОтчета = СтрЗаменить(ОграниченияПоПостроителюОтчета, "Субконто1", "Статья");
			
		КонецЕсли;
		
		Запрос.Текст = СформироватьТекстЗапроса();
		
		Запрос.Текст  = СтрЗаменить(Запрос.Текст, "И РасчетСписанияРБП.Активность","И РасчетСписанияРБП.Активность " + ОграниченияПоПостроителюОтчета);
		
		
		Результат = Запрос.Выполнить();
		
		
		ОбластьШапка            = Макет.ПолучитьОбласть("Шапка");
		ОбластьСтрокаЗатрат     = Макет.ПолучитьОбласть("СтрокаЗатрат");
		ОбластьИтого            = Макет.ПолучитьОбласть("Итого");
		ОбластьИтогоПР          = Макет.ПолучитьОбласть("ИтогоПР");
		ОбластьИтогоВР          = Макет.ПолучитьОбласть("ИтогоВР");
		ОбластьОкончаниеТаблицы = Макет.ПолучитьОбласть("ОкончаниеТаблицы");
		ОбластьПодвал           = МакетОбщий.ПолучитьОбласть("Подвал");
		
		ВыборкаПериод = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаПериод.Следующий() Цикл
			
			ЗаголовокОтчета.Параметры.Период              = "" + ПредставлениеПериода(НачалоМесяца(ВыборкаПериод.Период), КонецМесяца(ВыборкаПериод.Период), "ФП = Истина");
			СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация);
			НазваниеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм");
			ЗаголовокОтчета.Параметры.НазваниеОрганизации = НазваниеОрганизации;
			ЗаголовокОтчета.Параметры.ДатаСоставления     = КонецМесяца(ВыборкаПериод.Период);
			ЗаголовокОтчета.Параметры.НазваниеОтчета      = "Списание расходов будущих периодов (" +?(ВариантОтчета = 2, "налоговый учет", "бухгалтерский учет") + ")";
			ДокументРезультат.Вывести(ЗаголовокОтчета);
			
			СтрОтбор = УправлениеОтчетами.СформироватьСтрокуОтборов(ПостроительОтчета.Отбор);
			Если Не ПустаяСтрока(СтрОтбор) Тогда
				ОбластьОтбор = МакетОбщий.ПолучитьОбласть("СтрокаОтбор");
				ОбластьОтбор.Параметры.ТекстПроОтбор = "Отбор: " + СтрОтбор;
				ДокументРезультат.Вывести(ОбластьОтбор);
			КонецЕсли;
			
			// Параметр для показа заголовка
			ВысотаЗаголовка = ДокументРезультат.ВысотаТаблицы;
			
			ВыборкаСпособПризнанияРасходов = ВыборкаПериод.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаСпособПризнанияРасходов.Следующий() Цикл
				
				СпособПризнанияРасходов = ВыборкаСпособПризнанияРасходов.СпособПризнанияРасходов;
				Если  СпособПризнанияРасходов = Перечисления.СпособыПризнанияРасходов.ПоМесяцам Тогда
					ОбластьШапка.Параметры.КоличествоДнейМесяцев    = "Остаточное кол-во месяцев списания";
					ОбластьШапка.Параметры.КоличествоДнейМесяцевТек = "Кол-во месяцев в текущем периоде";
					
				ИначеЕсли  СпособПризнанияРасходов = Перечисления.СпособыПризнанияРасходов.ПоКалендарнымДням Тогда
					ОбластьШапка.Параметры.КоличествоДнейМесяцев = "Остаточное кол-во дней списания";
					ОбластьШапка.Параметры.КоличествоДнейМесяцевТек = "Кол-во дней в текущем периоде";
				Иначе
					ОбластьШапка.Параметры.КоличествоДнейМесяцев = "";
					ОбластьШапка.Параметры.КоличествоДнейМесяцевТек = "";
				КонецЕсли;
				ОбластьШапка.Параметры.ГруппаРБП = "Способ признания расходов: " + СпособПризнанияРасходов;
				ДокументРезультат.Вывести(ОбластьШапка);
				ВыборкаСтатья = ВыборкаСпособПризнанияРасходов.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				Пока ВыборкаСтатья.Следующий() Цикл
					ВыборкаПодразделение = ВыборкаСтатья.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					
					Пока ВыборкаПодразделение.Следующий() Цикл
						НачОстатокПР = ВыборкаПодразделение.НачОстатокПР;
						СуммаПР      = ВыборкаПодразделение.СуммаПР;
						КонОстатокПР = ВыборкаПодразделение.КонОстатокПР;
						НачОстатокВР = ВыборкаПодразделение.НачОстатокВР;
						СуммаВР      = ВыборкаПодразделение.СуммаВР;
						КонОстатокВР = ВыборкаПодразделение.КонОстатокВР;
						НачОстаток   = ВыборкаПодразделение.НачОстаток;
						Сумма        = ВыборкаПодразделение.Сумма;
						КонОстаток   = ВыборкаПодразделение.КонОстаток;
						НачОстатокНУ = ВыборкаПодразделение.НачОстатокНУ;
						СуммаНУ      = ВыборкаПодразделение.СуммаНУ;
						КонОстатокНУ = ВыборкаПодразделение.КонОстатокНУ;
						
						
						Выборка = ВыборкаПодразделение.Выбрать();
						Пока Выборка.Следующий() Цикл
							
							ОбластьСтрокаЗатрат.Параметры.Статья = "" + Выборка.Статья + " (" + СокрП(Выборка.Статья.Код) + ")";
							ОбластьСтрокаЗатрат.Параметры.Подразделение = Выборка.Подразделение;
							ОбластьСтрокаЗатрат.Параметры.СчетУчета = Выборка.СчетУчета;
							ОбластьСтрокаЗатрат.Параметры.СчетСписания = Выборка.СчетСписания;
							ОбластьСтрокаЗатрат.Параметры.Аналитика1 = Выборка.Статья.СубконтоЗатрат1;
							ОбластьСтрокаЗатрат.Параметры.Аналитика2 = Выборка.Статья.СубконтоЗатрат2;
							ОбластьСтрокаЗатрат.Параметры.Аналитика3 = Выборка.Статья.СубконтоЗатрат3;
							
							
							ОбластьСтрокаЗатрат.Параметры.Вид = Выборка.Статья.ВидРБП;
							ОбластьСтрокаЗатрат.Параметры.КоличествоДнейМесяцев = Выборка.КоличествоМесяцевДней;
							ОбластьСтрокаЗатрат.Параметры.КоличествоДнейВтекМесяце = Выборка.КоличествоМесяцевДнейТекущегоПериода;
							ОбластьСтрокаЗатрат.Параметры.ДатаНачала = Формат(Выборка.ДатаНачала, "ДЛФ=D");
							ОбластьСтрокаЗатрат.Параметры.ДатаОкончания = Формат(Выборка.ДатаОкончания, "ДЛФ=D");
							Если Не ВариантОтчета = 2 Тогда
								ОбластьСтрокаЗатрат.Параметры.НачОст   = НачОстаток;
								ОбластьСтрокаЗатрат.Параметры.КонОст   = КонОстаток;
								ОбластьСтрокаЗатрат.Параметры.Сумма    = Сумма;
							Иначе
								ОбластьСтрокаЗатрат.Параметры.НачОст   = НачОстатокНУ;
								ОбластьСтрокаЗатрат.Параметры.КонОст   = КонОстатокНУ;
								ОбластьСтрокаЗатрат.Параметры.Сумма    = СуммаНУ;
							КонецЕсли;
							Если ВариантОтчета = 3 Тогда
								ОбластьСтрокаЗатрат.Параметры.НачОстПР = ?(НачОстатокПР = 0, "", "ПР: " + НачОстатокПР);
								ОбластьСтрокаЗатрат.Параметры.КонОстПР = ?(КонОстатокПР = 0, "", "ПР: " + КонОстатокПР);
								ОбластьСтрокаЗатрат.Параметры.СуммаПР  = ?(СуммаПР = 0, "", "ПР: " + СуммаПР);
								ОбластьСтрокаЗатрат.Параметры.НачОстВР = ?(НачОстатокВР = 0, "", "ВР: " + НачОстатокВР);
								ОбластьСтрокаЗатрат.Параметры.КонОстВР = ?(КонОстатокВР = 0, "", "ВР: " + КонОстатокВР);
								ОбластьСтрокаЗатрат.Параметры.СуммаВР  = ?(СуммаВР = 0, "", "ВР: " + СуммаВР);
							КонецЕсли;
							
							
							ДокументРезультат.Вывести(ОбластьСтрокаЗатрат);
							Прервать;
							
						КонецЦикла;  // 
						
					КонецЦикла;  // Подразделение
				КонецЦикла;  // Статья
				
				Если Не ВариантОтчета = 2 Тогда
					ОбластьИтого.Параметры.ИтогоНачОст   = ВыборкаСпособПризнанияРасходов.НачОстаток;
					ОбластьИтого.Параметры.ИтогоКонОст   = ВыборкаСпособПризнанияРасходов.КонОстаток;
					ОбластьИтого.Параметры.ИтогоСумма    = ВыборкаСпособПризнанияРасходов.Сумма;
				Иначе
					ОбластьИтого.Параметры.ИтогоНачОст   = ВыборкаСпособПризнанияРасходов.НачОстатокНУ;
					ОбластьИтого.Параметры.ИтогоКонОст   = ВыборкаСпособПризнанияРасходов.КонОстатокНУ;
					ОбластьИтого.Параметры.ИтогоСумма    = ВыборкаСпособПризнанияРасходов.СуммаНУ;
				КонецЕсли;
				
				Если ВариантОтчета = 3 Тогда
					ОбластьИтогоПР.Параметры.ИтогоНачОстПР = ВыборкаСпособПризнанияРасходов.НачОстатокПР;
					ОбластьИтогоПР.Параметры.ИтогоКонОстПР = ВыборкаСпособПризнанияРасходов.КонОстатокПР;
					ОбластьИтогоПР.Параметры.ИтогоСуммаПР  = ВыборкаСпособПризнанияРасходов.СуммаПР;
					ОбластьИтогоВР.Параметры.ИтогоНачОстВР = ВыборкаСпособПризнанияРасходов.НачОстатокВР;
					ОбластьИтогоВР.Параметры.ИтогоКонОстВР = ВыборкаСпособПризнанияРасходов.КонОстатокВР;
					ОбластьИтогоВР.Параметры.ИтогоСуммаВР  = ВыборкаСпособПризнанияРасходов.СуммаВР;
				КонецЕсли;
				
				ДокументРезультат.Вывести(ОбластьИтого);
				Если Не ВыборкаСпособПризнанияРасходов.СуммаПР = 0 Или Не ВыборкаСпособПризнанияРасходов.НачОстатокПР = 0 Или Не ВыборкаСпособПризнанияРасходов.КонОстатокПР = 0 Тогда
					ДокументРезультат.Вывести(ОбластьИтогоПр);
				КонецЕсли;
				Если Не ВыборкаСпособПризнанияРасходов.СуммаВР = 0 Или Не ВыборкаСпособПризнанияРасходов.НачОстатокВР = 0 Или Не ВыборкаСпособПризнанияРасходов.КонОстатокВР = 0 Тогда
					ДокументРезультат.Вывести(ОбластьИтогоВр);
				КонецЕсли;
				
				
				ДокументРезультат.Вывести(ОбластьОкончаниеТаблицы);
			КонецЦикла;   // СпособПризнанияРасходов
			
			ОбластьПодвал.Параметры.ТекстПримечания = ?(ВариантОтчета = 3, "ПР: Постоянные разницы в оценке стоимости активов и обязательств. ВР: Временные разницы в оценке стоимости активов и обязательств.", "");
			
			ДокументРезультат.Вывести(ОбластьПодвал);
			
			ВысотаПодписи = ДокументРезультат.Области.Подвал.Низ - ДокументРезультат.Области.Подвал.Верх;
			
			ДокументРезультат.Области.Подвал.Видимость = ПоказыватьПодписи;
			
		КонецЦикла;    // Период	
		
		// Зафиксируем заголовок отчета
		//	ДокументРезультат.ФиксацияСверху = ВысотаЗаголовка + 1;
		
		// Первую колонку не печатаем
		ДокументРезультат.ОбластьПечати = ДокументРезультат.Область(1,2,ДокументРезультат.ВысотаТаблицы,ДокументРезультат.ШиринаТаблицы);
		
		// Присвоим имя для сохранения параметров печати табличного документа
		ДокументРезультат.ИмяПараметровПечати = "Списание расходов будущих периодов";
		
		УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(ДокументРезультат, ЗаголовокОтчета, Строка(глЗначениеПеременной("глТекущийПользователь")));
		
	КонецПроцедуры // СформироватьОтчет
	
	Процедура ЗаполнитьНачальныеНастройки() Экспорт
		
		СтарыеНастройки = УправлениеОтчетами.ПолучитьКопиюОтбораВТЗ(ПостроительОтчета.Отбор);
		
		СоотвСубконто = Новый Соответствие;
		
		Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ХозрасчетныйОбороты.СуммаОборотКт КАК СуммаОборотКт
		|{ВЫБРАТЬ
		|	ХозрасчетныйОбороты.Субконто1 КАК Субконто1}
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(, , Месяц, Счет В ИЕРАРХИИ (&Счет), , {Субконто1.*}, , ) КАК ХозрасчетныйОбороты
		|ИТОГИ
		|	СУММА(СуммаОборотКт)
		|ПО
		|	ОБЩИЕ
		|{ИТОГИ ПО
		|	ХозрасчетныйОбороты.Субконто1.*}";
		
		Массив = Новый Массив;
		Массив.Добавить(ПланыСчетов.Хозрасчетный.РасходыБудущихПериодов);
		
		ПостроительОтчета.Параметры.Вставить("Счет", Массив);
		ПостроительОтчета.Параметры.Вставить("ПустаяОрганизация", Справочники.Организации.ПустаяСсылка());
		
		ПостроительОтчета.Текст = Текст;
		
		СоотвСубконто = Новый Соответствие;
		СоотвСубконто.Вставить("Субконто1",    ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов);
		
		
		Сч = 0;
		Для каждого Элемент Из СоотвСубконто Цикл
			Сч = Сч+1;
			Поле = ПостроительОтчета.ДоступныеПоля.Найти(Элемент.Ключ);
			Поле.ТипЗначения = Элемент.Значение.ТипЗначения;
			Поле.Представление = Элемент.Значение.Наименование;
			
			ПостроительОтчета.Отбор.Добавить(Элемент.Ключ);
		КонецЦикла;
		
		УправлениеОтчетами.УстановитьОтборИзТаблицы(ПостроительОтчета.Отбор, СтарыеНастройки);
		
	КонецПроцедуры
	
	////////////////////////////////////////////////////////////////////////////////
	// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
	// 
	
	НП = Новый НастройкаПериода;
	
#КонецЕсли
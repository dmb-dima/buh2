
#Если Клиент Тогда

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Заполняет табличный документ
// в соответствии с настройками, заданными значениями реквизитов отчета.
//
// Параметры:
//	ДокументРезультат - табличный документ, формируемый отчетом,
//
Процедура СформироватьОтчет(ДокументРезультат) Экспорт

	Отказ = Ложь;
	
	// Проверка параметров
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указана организация!", Отказ);
	КонецЕсли; 
	Если НЕ ЗначениеЗаполнено(НалоговыйПериод) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указан налоговый период!", Отказ);
	КонецЕсли; 
	Если Отказ Тогда
		Возврат ;
	КонецЕсли; 	
	
	ДокументРезультат.Очистить();
	Макет =	ПолучитьМакет("СводнаяКарточкаОПС");

	// Расчет вычисляемых параметров
	ДатаНачалаНП = НачалоГода(Дата(НалоговыйПериод,1,1));
	ДатаКонцаНП = КонецГода(Дата(НалоговыйПериод,1,1));
	ГоловнаяОрганизация = ОбщегоНазначения.ГоловнаяОрганизация(Организация);
	
	// определим формат вывода данных о налогах
	ФорматВыводаДанных = "ЧДЦ=5; ЧРД=.";
	
	// Создание запроса и установка всех необходимых параметров
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ОбщегоНазначения.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПустаяОрганизация", Справочники.Организации.ПустаяСсылка());
	Запрос.УстановитьПараметр("НачалоНП", ДатаНачалаНП);
	Запрос.УстановитьПараметр("ГодНП", НалоговыйПериод);
	Запрос.УстановитьПараметр("КонецНП", ДатаКонцаНП);
	
	// ---------------------------------------------------------------------------
	// Тексты запросов
	//

	// Сформируем текст запроса выборки месяцев налогового периода
	МесяцыНПТекст = "ВЫБРАТЬ 1 КАК МЕСЯЦ ПОМЕСТИТЬ ВТМесяцыНП";
	Для Сч = 2 По 12 Цикл
    	МесяцыНПТекст = МесяцыНПТекст +" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ " + Сч;
	КонецЦикла;
	
	Запрос.Текст = МесяцыНПТекст;
	Запрос.Выполнить();
	
	// первый месяц
	КонецМесяца = КонецМесяца(ДатаНачалаНП);
	ПериодыТекст = "ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ") КАК Период ПОМЕСТИТЬ ВТПериоды";
	// прибавим остальные месяцы
	Для Сч = 2 По 12 Цикл
		КонецМесяца = КонецМесяца(КонецМесяца+1);
		ПериодыТекст = ПериодыТекст +" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ")";
	КонецЦикла;
	
	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить();
	
	ДанныеОбОрганизации = 
	"ВЫБРАТЬ
	|	Организации.ИНН,
	|	Организации.КПП,
	|	ВЫРАЗИТЬ(Организации.НаименованиеПолное КАК СТРОКА(300)) КАК НаименованиеПолное
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.Ссылка = &Организация";
	
	
	//-----------------------------------------------------------------------------
	// ВЫБОРКА СВЕДЕНИЙ О ФИЗЛИЦЕ 
	// 	
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСНСведенияОДоходах.ФизЛицо КАК ФизЛицо
	|ПОМЕСТИТЬ ВТФизлицаБезНалоговойБазы
	|ИЗ
	|	РегистрНакопления.ЕСНСведенияОДоходах КАК ЕСНСведенияОДоходах
	|ГДЕ
	|	ЕСНСведенияОДоходах.Период МЕЖДУ &НачалоНП И &КонецНП
	|	И ЕСНСведенияОДоходах.Организация = &ГоловнаяОрганизация
	|	И (НЕ ЕСНСведенияОДоходах.ОблагаетсяЕНВД)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСНСведенияОДоходах.ФизЛицо
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВЫБОР
	|			КОГДА ЕСНСведенияОДоходах.КодДоходаЕСН.ВходитВБазуФедеральныйБюджет
	|				ТОГДА ЕСНСведенияОДоходах.Результат - ЕСНСведенияОДоходах.Скидка
	|			ИНАЧЕ 0
	|		КОНЕЦ) < 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";
	Запрос.Выполнить();
									   
	// ДоходыПоМесяцамКодам
	// Таблица доходов ЕСН по Месяцам налогового периода и кодам дохода
    // Поля:
	//		Месяц
	//		КодДоходаЕСН
	//		Результат
	//		Скидка
	// Описание:
	// 	Выбираем зарегистрированные доходы из ЕСНСведенияОДоходах 	
	//  Запрос выполняется для списка обособленных подразделений.
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСННачисления.Месяц КАК Месяц,
	|	ЕСННачисления.ФизЛицо КАК ФизЛицо,
	|	ЕСННачисления.КодДоходаЕСН КАК КодДоходаЕСН,
	|	ЕСННачисления.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	СУММА(ЕСННачисления.Результат) КАК Результат,
	|	СУММА(ЕСННачисления.Скидка) КАК Скидка
	|ПОМЕСТИТЬ ВТДоходыПоМесяцамКодам
	|ИЗ
	|	(ВЫБРАТЬ
	|		МЕСЯЦ(ЕСНСведенияОДоходах.Период) КАК Месяц,
	|		ЕСНСведенияОДоходах.КодДоходаЕСН КАК КодДоходаЕСН,
	|		ЕСНСведенияОДоходах.Результат КАК Результат,
	|		ЕСНСведенияОДоходах.Скидка КАК Скидка,
	|		ЕСНСведенияОДоходах.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|		ЕСНСведенияОДоходах.ФизЛицо КАК ФизЛицо
	|	ИЗ
	|		РегистрНакопления.ЕСНСведенияОДоходах КАК ЕСНСведенияОДоходах
	|	ГДЕ
	|		ЕСНСведенияОДоходах.Период МЕЖДУ &НачалоНП И &КонецНП
	|		И ЕСНСведенияОДоходах.Организация = &ГоловнаяОрганизация
	|		И ЕСНСведенияОДоходах.ОбособленноеПодразделение = &Организация) КАК ЕСННачисления
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСННачисления.Месяц,
	|	ЕСННачисления.ФизЛицо,
	|	ЕСННачисления.ОблагаетсяЕНВД,
	|	ЕСННачисления.КодДоходаЕСН
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Месяц,
	|	ФизЛицо";
	Запрос.Выполнить();

   	// ДанныеОПравеНаПенсию
	// Таблица Таблица Данные о праве на пенсию: - таблица это список иностранцев и периодов
	// Поля:
	//		Физлицо, 
	//		Месяц - месяц налогового периода
	// 
	// Описание:
	//	Выбираем Из Списка периодов
	//	Внутреннее соединение с "псевдо" ГражданствоФизЛиц.СрезПоследних
	//  по равенству периодов
	//  условие: что физлицо - не имеет права на пенсию
	//
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МЕСЯЦ(Периоды.Период) КАК Месяц,
	|	ГражданствоФизЛиц.ФизЛицо КАК Физлицо
	|ПОМЕСТИТЬ ВТДанныеОПравеНаПенсию
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период КАК Период,
	|		ГражданствоФизЛиц.ФизЛицо КАК Физлицо,
	|		МАКСИМУМ(ГражданствоФизЛиц.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВТПериоды КАК Периоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|			ПО Периоды.Период >= ГражданствоФизЛиц.Период
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ГражданствоФизЛиц.ФизЛицо,
	|		Периоды.Период) КАК Периоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|		ПО Периоды.ПериодРегистра = ГражданствоФизЛиц.Период
	|			И Периоды.Физлицо = ГражданствоФизЛиц.ФизЛицо
	|			И (ГражданствоФизЛиц.НеИмеетПравоНаПенсию)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Месяц,
	|	Физлицо";
	Запрос.Выполнить();
	
    // УчетнаяПолитикаНалоговыйУчет
	// Таблица УчетнаяПолитикаНалоговыйУчетУСН - это список периодов, когда организация переходила на УСН
	// поля:
	//		УСН, 
	//		Месяц - месяц налогового периода
	// Описание:	
	//	Выбираем Из Периоды (таблица - список периодов с начала года по текущий период)
	//	Внутреннее соединение с "псевдосрезом" последних регистра УчетнаяПолитикаНалоговыйУчет
	//	по равенству периодов
	//  условие: что организация использует УСН
	
	ИДКонфигурации = РегламентированнаяОтчетность.ИДКонфигурации();
	Если ИДКонфигурации = "БП" ИЛИ ИДКонфигурации = "БАУ" ИЛИ ИДКонфигурации = "БПКОРП" Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	МЕСЯЦ(Периоды.Период) КАК Месяц,
		|	ВЫБОР
		|		КОГДА УчетнаяПолитикаНалоговыйУчет.СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.СистемыНалогообложения.Упрощенная)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК УСН
		|ПОМЕСТИТЬ ВТУчетнаяПолитикаНалоговыйУчет
		|ИЗ
		|	(ВЫБРАТЬ
		|		Периоды.Период КАК Период,
		|		МАКСИМУМ(УчетнаяПолитикаНалоговыйУчет.Период) КАК ПериодРегистра
		|	ИЗ
		|		ВТПериоды КАК Периоды
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаНалоговыйУчет
		|			ПО Периоды.Период >= УчетнаяПолитикаНалоговыйУчет.Период
		|				И (УчетнаяПолитикаНалоговыйУчет.Организация = &ГоловнаяОрганизация)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Периоды.Период) КАК Периоды
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаНалоговыйУчет
		|		ПО Периоды.ПериодРегистра = УчетнаяПолитикаНалоговыйУчет.Период
		|			И (УчетнаяПолитикаНалоговыйУчет.Организация = &ГоловнаяОрганизация)
		|			И (УчетнаяПолитикаНалоговыйУчет.СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.СистемыНалогообложения.Упрощенная))
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Месяц";	
		Запрос.Выполнить();
		
	Иначе
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	МЕСЯЦ(Периоды.Период) КАК Месяц,
		|	УчетнаяПолитикаНалоговыйУчет.УСН КАК УСН
		|ПОМЕСТИТЬ ВТУчетнаяПолитикаНалоговыйУчет
		|ИЗ
		|	(ВЫБРАТЬ
		|		Периоды.Период КАК Период,
		|		МАКСИМУМ(УчетнаяПолитикаНалоговыйУчет.Период) КАК ПериодРегистра
		|	ИЗ
		|		ВТПериоды КАК Периоды
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНалоговыйУчет
		|			ПО Периоды.Период >= УчетнаяПолитикаНалоговыйУчет.Период
		|				И (УчетнаяПолитикаНалоговыйУчет.Организация = &ГоловнаяОрганизация)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Периоды.Период) КАК Периоды
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНалоговыйУчет
		|		ПО Периоды.ПериодРегистра = УчетнаяПолитикаНалоговыйУчет.Период
		|			И (УчетнаяПолитикаНалоговыйУчет.Организация = &ГоловнаяОрганизация)
		|			И (УчетнаяПолитикаНалоговыйУчет.УСН)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Месяц";	
		Запрос.Выполнить();
		
	КонецЕсли;

	// ПоказателиДоходовПоМесяцамТекст
	// Описание:
	//  Вычисляет показатели отчета, основанные на сведениях о доходах
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Доходы.Месяц КАК Месяц,
	|	СУММА(ВЫБОР
	|			КОГДА Иностр.ФизЛицо ЕСТЬ NULL 
	|					И УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ NULL 
	|					И (НЕ Доходы.ОблагаетсяЕНВД)
	|					И Доходы.КодДоходаЕСН.ВходитВБазуФедеральныйБюджет
	|					И ФизлицаБезНалоговойБазы.ФизЛицо ЕСТЬ NULL 
	|				ТОГДА Доходы.Результат - Доходы.Скидка
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК БазаПФРОбщ,
	|	СУММА(ВЫБОР
	|			КОГДА Иностр.ФизЛицо ЕСТЬ NULL 
	|					И УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ NULL 
	|					И (НЕ Доходы.ОблагаетсяЕНВД)
	|					И Доходы.КодДоходаЕСН <> ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.НеЯвляетсяОбъектом)
	|				ТОГДА Доходы.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НачисленоВсегоОбщ,
	|	СУММА(ВЫБОР
	|			КОГДА Иностр.ФизЛицо ЕСТЬ NULL 
	|					И УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ NULL 
	|					И (НЕ Доходы.ОблагаетсяЕНВД)
	|					И Доходы.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ВыплатыЗаСчетПрибыли)
	|				ТОГДА Доходы.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВыплатыЗаСчетПрибылиОбщ,
	|	СУММА(ВЫБОР
	|			КОГДА Иностр.ФизЛицо ЕСТЬ NULL 
	|					И УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ NULL 
	|					И (НЕ Доходы.ОблагаетсяЕНВД)
	|				ТОГДА ВЫБОР
	|						КОГДА Доходы.КодДоходаЕСН В (ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ПособияЗаСчетФСС), ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.НеОблагаетсяЦеликом))
	|							ТОГДА Доходы.Результат
	|						ИНАЧЕ Доходы.Скидка
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НеОблагаетсяПоСт238Общ,
	|	СУММА(ВЫБОР
	|			КОГДА Иностр.ФизЛицо ЕСТЬ NULL 
	|					И (УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ НЕ NULL 
	|						ИЛИ Доходы.ОблагаетсяЕНВД)
	|					И ФизлицаБезНалоговойБазы.ФизЛицо ЕСТЬ NULL 
	|					И Доходы.КодДоходаЕСН.ВходитВБазуФедеральныйБюджет
	|				ТОГДА Доходы.Результат - Доходы.Скидка
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК БазаПФРСР,
	|	СУММА(ВЫБОР
	|			КОГДА Иностр.ФизЛицо ЕСТЬ NULL 
	|					И (УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ НЕ NULL 
	|						ИЛИ Доходы.ОблагаетсяЕНВД)
	|					И Доходы.КодДоходаЕСН <> ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.НеЯвляетсяОбъектом)
	|				ТОГДА Доходы.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НачисленоВсегоСР,
	|	СУММА(ВЫБОР
	|			КОГДА Иностр.ФизЛицо ЕСТЬ NULL 
	|					И (УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ НЕ NULL 
	|						ИЛИ Доходы.ОблагаетсяЕНВД)
	|					И Доходы.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ВыплатыЗаСчетПрибыли)
	|				ТОГДА Доходы.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВыплатыЗаСчетПрибылиСР,
	|	СУММА(ВЫБОР
	|			КОГДА Иностр.ФизЛицо ЕСТЬ NULL 
	|					И (УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ НЕ NULL 
	|						ИЛИ Доходы.ОблагаетсяЕНВД)
	|				ТОГДА ВЫБОР
	|						КОГДА Доходы.КодДоходаЕСН В (ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ПособияЗаСчетФСС), ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.НеОблагаетсяЦеликом))
	|							ТОГДА Доходы.Результат
	|						ИНАЧЕ Доходы.Скидка
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НеОблагаетсяПоСт238СР,
	|	СУММА(ВЫБОР
	|			КОГДА Иностр.ФизЛицо ЕСТЬ NULL 
	|					И Доходы.КодДоходаЕСН.ВходитВБазуФедеральныйБюджет
	|					И ФизлицаБезНалоговойБазы.ФизЛицо ЕСТЬ NULL 
	|				ТОГДА Доходы.Результат - Доходы.Скидка
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК БазаПФРПоВсем,
	|	СУММА(ВЫБОР
	|			КОГДА Иностр.ФизЛицо ЕСТЬ NULL 
	|					И Доходы.КодДоходаЕСН <> ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.НеЯвляетсяОбъектом)
	|				ТОГДА Доходы.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НачисленоВсегоПоВсем,
	|	СУММА(ВЫБОР
	|			КОГДА Иностр.ФизЛицо ЕСТЬ NULL 
	|					И Доходы.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ВыплатыЗаСчетПрибыли)
	|				ТОГДА Доходы.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВыплатыЗаСчетПрибылиПоВсем,
	|	СУММА(ВЫБОР
	|			КОГДА Иностр.ФизЛицо ЕСТЬ NULL 
	|					И Доходы.КодДоходаЕСН В (ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ПособияЗаСчетФСС), ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.НеОблагаетсяЦеликом))
	|				ТОГДА Доходы.Результат
	|			ИНАЧЕ Доходы.Скидка
	|		КОНЕЦ) КАК НеОблагаетсяПоСт238ПоВсем
	|ПОМЕСТИТЬ ВТПоказателиДоходовПоМесяцам
	|ИЗ
	|	ВТДоходыПоМесяцамКодам КАК Доходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлицаБезНалоговойБазы КАК ФизлицаБезНалоговойБазы
	|		ПО Доходы.ФизЛицо = ФизлицаБезНалоговойБазы.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОПравеНаПенсию КАК Иностр
	|		ПО Доходы.Месяц = Иностр.Месяц
	|			И Доходы.ФизЛицо = Иностр.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНалоговыйУчетУСН
	|		ПО Доходы.Месяц = УчетнаяПолитикаНалоговыйУчетУСН.Месяц
	|
	|СГРУППИРОВАТЬ ПО
	|	Доходы.Месяц
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Месяц";				
	Запрос.Выполнить();				
	
	// ПоказателиДоходовНарастающимИтогом
	// Описание:
	//  Вычисляет показатели отчета, основанные на сведениях о доходах - нарастающим итогом
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МесяцыНП.Месяц КАК Месяц,
	|	СУММА(ПоказателиДоходов.БазаПФРОбщ) КАК БазаПФРОбщ,
	|	СУММА(ПоказателиДоходов.НачисленоВсегоОбщ) КАК НачисленоВсегоОбщ,
	|	СУММА(ПоказателиДоходов.ВыплатыЗаСчетПрибылиОбщ) КАК ВыплатыЗаСчетПрибылиОбщ,
	|	СУММА(ПоказателиДоходов.НеОблагаетсяПоСт238Общ) КАК НеОблагаетсяПоСт238Общ,
	|	СУММА(ПоказателиДоходов.БазаПФРСР) КАК БазаПФРСР,
	|	СУММА(ПоказателиДоходов.НачисленоВсегоСР) КАК НачисленоВсегоСР,
	|	СУММА(ПоказателиДоходов.ВыплатыЗаСчетПрибылиСР) КАК ВыплатыЗаСчетПрибылиСР,
	|	СУММА(ПоказателиДоходов.НеОблагаетсяПоСт238СР) КАК НеОблагаетсяПоСт238СР,
	|	СУММА(ПоказателиДоходов.БазаПФРПоВсем) КАК БазаПФРПоВсем,
	|	СУММА(ПоказателиДоходов.НачисленоВсегоПоВсем) КАК НачисленоВсегоПоВсем,
	|	СУММА(ПоказателиДоходов.ВыплатыЗаСчетПрибылиПоВсем) КАК ВыплатыЗаСчетПрибылиПоВсем,
	|	СУММА(ПоказателиДоходов.НеОблагаетсяПоСт238ПоВсем) КАК НеОблагаетсяПоСт238ПоВсем
	|ПОМЕСТИТЬ ВТПоказателиДоходовНарастающимИтогом
	|ИЗ
	|	ВТМесяцыНП КАК МесяцыНП
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказателиДоходовПоМесяцам КАК ПоказателиДоходов
	|		ПО МесяцыНП.Месяц >= ПоказателиДоходов.Месяц
	|
	|СГРУППИРОВАТЬ ПО
	|	МесяцыНП.Месяц
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Месяц";							   
	Запрос.Выполнить();
	
	// ПоказателиНалогПоМесяцамТекст
	// Описание:
	//	Вычисляет показатели отчета, основанные на сведениях о налогах.
	//  Из по ЕСН автоматически отнимается налог, приходящийся  на налоговую льготу инвалидов.
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МЕСЯЦ(ЕСНИсчисленный.Период) КАК Месяц,
	|	СУММА(ВЫБОР
	|			КОГДА УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ НЕ NULL 
	|				ТОГДА ЕСНИсчисленный.ПФРНакопительная
	|			ИНАЧЕ ЕСНИсчисленный.ПФРНакопительнаяЕНВД
	|		КОНЕЦ) КАК НачисленоПФРНакопительнаяСР,
	|	СУММА(ВЫБОР
	|			КОГДА УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ НЕ NULL 
	|				ТОГДА ЕСНИсчисленный.ПФРСтраховая
	|			ИНАЧЕ ЕСНИсчисленный.ПФРСтраховаяЕНВД
	|		КОНЕЦ) КАК НачисленоПФРСтраховаяСР,
	|	СУММА(ВЫБОР
	|			КОГДА УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ НЕ NULL 
	|				ТОГДА ЕСНИсчисленный.ПФРСтраховая + ЕСНИсчисленный.ПФРНакопительная
	|			ИНАЧЕ ЕСНИсчисленный.ПФРСтраховаяЕНВД + ЕСНИсчисленный.ПФРНакопительнаяЕНВД
	|		КОНЕЦ) КАК НачисленоПФРСР,
	|	СУММА(ВЫБОР
	|			КОГДА УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ NULL 
	|				ТОГДА ЕСНИсчисленный.ПФРНакопительная - ЕСНИсчисленный.ПФРНакопительнаяЕНВД
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НачисленоПФРНакопительнаяОбщ,
	|	СУММА(ВЫБОР
	|			КОГДА УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ NULL 
	|				ТОГДА ЕСНИсчисленный.ПФРСтраховая - ЕСНИсчисленный.ПФРСтраховаяЕНВД
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НачисленоПФРСтраховаяОбщ,
	|	СУММА(ВЫБОР
	|			КОГДА УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ NULL 
	|				ТОГДА ЕСНИсчисленный.ПФРСтраховая - ЕСНИсчисленный.ПФРСтраховаяЕНВД + ЕСНИсчисленный.ПФРНакопительная - ЕСНИсчисленный.ПФРНакопительнаяЕНВД
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НачисленоПФРОбщ,
	|	СУММА(ЕСНИсчисленный.ПФРНакопительная) КАК НачисленоПФРНакопительнаяПоВсем,
	|	СУММА(ЕСНИсчисленный.ПФРСтраховая) КАК НачисленоПФРСтраховаяПоВсем,
	|	СУММА(ЕСНИсчисленный.ПФРСтраховая + ЕСНИсчисленный.ПФРНакопительная) КАК НачисленоПФРПоВсем
	|ПОМЕСТИТЬ ВТПоказателиНалоговПоМесяцам
	|ИЗ
	|	РегистрНакопления.ЕСНИсчисленный КАК ЕСНИсчисленный
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНалоговыйУчетУСН
	|		ПО (МЕСЯЦ(ЕСНИсчисленный.Период) = УчетнаяПолитикаНалоговыйУчетУСН.Месяц)
	|ГДЕ
	|	ЕСНИсчисленный.Организация = &ГоловнаяОрганизация
	|	И ЕСНИсчисленный.ОбособленноеПодразделение = &Организация
	|	И ЕСНИсчисленный.Период МЕЖДУ &НачалоНП И &КонецНП
	|
	|СГРУППИРОВАТЬ ПО
	|	МЕСЯЦ(ЕСНИсчисленный.Период)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Месяц";
	Запрос.Выполнить();
	
	ДанныеРасчетаТекст = 
	"ВЫБРАТЬ
	|	МесяцыНП.Месяц КАК МЕСЯЦ,
	|	ВЫРАЗИТЬ(СУММА(ПоказателиНалогов.НачисленоПФРНакопительнаяСР) КАК ЧИСЛО(15, 5)) КАК НачисленоПФРНакопительнаяСР,
	|	ВЫРАЗИТЬ(СУММА(ПоказателиНалогов.НачисленоПФРСтраховаяСР) КАК ЧИСЛО(15, 5)) КАК НачисленоПФРСтраховаяСР,
	|	ВЫРАЗИТЬ(СУММА(ПоказателиНалогов.НачисленоПФРСР) КАК ЧИСЛО(15, 5)) КАК НачисленоПФРСР,
	|	ВЫРАЗИТЬ(СУММА(ПоказателиНалогов.НачисленоПФРНакопительнаяОбщ) КАК ЧИСЛО(15, 5)) КАК НачисленоПФРНакопительнаяОбщ,
	|	ВЫРАЗИТЬ(СУММА(ПоказателиНалогов.НачисленоПФРСтраховаяОбщ) КАК ЧИСЛО(15, 5)) КАК НачисленоПФРСтраховаяОбщ,
	|	ВЫРАЗИТЬ(СУММА(ПоказателиНалогов.НачисленоПФРОбщ) КАК ЧИСЛО(15, 5)) КАК НачисленоПФРОбщ,
	|	ВЫРАЗИТЬ(СУММА(ПоказателиНалогов.НачисленоПФРНакопительнаяПоВсем) КАК ЧИСЛО(15, 5)) КАК НачисленоПФРНакопительнаяПоВсем,
	|	ВЫРАЗИТЬ(СУММА(ПоказателиНалогов.НачисленоПФРСтраховаяПоВсем) КАК ЧИСЛО(15, 5)) КАК НачисленоПФРСтраховаяПоВсем,
	|	ВЫРАЗИТЬ(СУММА(ПоказателиНалогов.НачисленоПФРПоВсем) КАК ЧИСЛО(15, 5)) КАК НачисленоПФРПоВсем
	|ПОМЕСТИТЬ ВТПоказателиНалоговНарастающимИтогом
	|ИЗ
	|	ВТМесяцыНП КАК МесяцыНП
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказателиНалоговПоМесяцам КАК ПоказателиНалогов
	|		ПО МесяцыНП.Месяц >= ПоказателиНалогов.Месяц
	|
	|СГРУППИРОВАТЬ ПО
	|	МесяцыНП.Месяц
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	МЕСЯЦ";
	
	Запрос.Текст = ДанныеРасчетаТекст;
	Запрос.Выполнить();
	
	
	//ДанныеРасчетаТекст
	// Описание: объединяет показатели доходов и налогов						   
	
	ДанныеРасчетаТекст = 
	"ВЫБРАТЬ
	|	МесяцыНП.Месяц КАК МЕСЯЦ,
	|	ЕСТЬNULL(ПоказателиДоходов.БазаПФРОбщ, 0) КАК БазаПФРОбщ,
	|	ЕСТЬNULL(ПоказателиДоходовНарастающимИтогом.БазаПФРОбщ, 0) КАК НарастБазаПФРОбщ,
	|	ЕСТЬNULL(ПоказателиДоходов.НачисленоВсегоОбщ, 0) КАК НачисленоВсегоОбщ,
	|	ЕСТЬNULL(ПоказателиДоходовНарастающимИтогом.НачисленоВсегоОбщ, 0) КАК НарастНачисленоВсегоОбщ,
	|	ЕСТЬNULL(ПоказателиДоходов.ВыплатыЗаСчетПрибылиОбщ, 0) КАК ВыплатыЗаСчетПрибылиОбщ,
	|	ЕСТЬNULL(ПоказателиДоходовНарастающимИтогом.ВыплатыЗаСчетПрибылиОбщ, 0) КАК НарастВыплатыЗаСчетПрибылиОбщ,
	|	ЕСТЬNULL(ПоказателиДоходов.НеОблагаетсяПоСт238Общ, 0) КАК НеОблагаетсяПоСт238Общ,
	|	ЕСТЬNULL(ПоказателиДоходовНарастающимИтогом.НеОблагаетсяПоСт238Общ, 0) КАК НарастНеОблагаетсяПоСт238Общ,
	|	ЕСТЬNULL(ПоказателиДоходов.БазаПФРСР, 0) КАК БазаПФРСР,
	|	ЕСТЬNULL(ПоказателиДоходовНарастающимИтогом.БазаПФРСР, 0) КАК НарастБазаПФРСР,
	|	ЕСТЬNULL(ПоказателиДоходов.НачисленоВсегоСР, 0) КАК НачисленоВсегоСР,
	|	ЕСТЬNULL(ПоказателиДоходовНарастающимИтогом.НачисленоВсегоСР, 0) КАК НарастНачисленоВсегоСР,
	|	ЕСТЬNULL(ПоказателиДоходов.ВыплатыЗаСчетПрибылиСР, 0) КАК ВыплатыЗаСчетПрибылиСР,
	|	ЕСТЬNULL(ПоказателиДоходовНарастающимИтогом.ВыплатыЗаСчетПрибылиСР, 0) КАК НарастВыплатыЗаСчетПрибылиСР,
	|	ЕСТЬNULL(ПоказателиДоходов.НеОблагаетсяПоСт238СР, 0) КАК НеОблагаетсяПоСт238СР,
	|	ЕСТЬNULL(ПоказателиДоходовНарастающимИтогом.НеОблагаетсяПоСт238СР, 0) КАК НарастНеОблагаетсяПоСт238СР,
	|	ЕСТЬNULL(ПоказателиДоходов.БазаПФРПоВсем, 0) КАК БазаПФРПоВсем,
	|	ЕСТЬNULL(ПоказателиДоходовНарастающимИтогом.БазаПФРПоВсем, 0) КАК НарастБазаПФРПоВсем,
	|	ЕСТЬNULL(ПоказателиДоходов.НачисленоВсегоПоВсем, 0) КАК НачисленоВсегоПоВсем,
	|	ЕСТЬNULL(ПоказателиДоходовНарастающимИтогом.НачисленоВсегоПоВсем, 0) КАК НарастНачисленоВсегоПоВсем,
	|	ЕСТЬNULL(ПоказателиДоходов.ВыплатыЗаСчетПрибылиПоВсем, 0) КАК ВыплатыЗаСчетПрибылиПоВсем,
	|	ЕСТЬNULL(ПоказателиДоходовНарастающимИтогом.ВыплатыЗаСчетПрибылиПоВсем, 0) КАК НарастВыплатыЗаСчетПрибылиПоВсем,
	|	ЕСТЬNULL(ПоказателиДоходов.НеОблагаетсяПоСт238ПоВсем, 0) КАК НеОблагаетсяПоСт238ПоВсем,
	|	ЕСТЬNULL(ПоказателиДоходовНарастающимИтогом.НеОблагаетсяПоСт238ПоВсем, 0) КАК НарастНеОблагаетсяПоСт238ПоВсем,
	|	ЕСТЬNULL(ПоказателиНалоговНарастающимИтогом.НачисленоПФРНакопительнаяСР, 0) - ЕСТЬNULL(ПоказателиНалоговПоПрошлыйМесяц.НачисленоПФРНакопительнаяСР, 0) КАК НачисленоПФРНакопительнаяСР,
	|	ЕСТЬNULL(ПоказателиНалоговНарастающимИтогом.НачисленоПФРНакопительнаяСР, 0) КАК НарастНачисленоПФРНакопительнаяСР,
	|	ЕСТЬNULL(ПоказателиНалоговНарастающимИтогом.НачисленоПФРСтраховаяСР, 0) - ЕСТЬNULL(ПоказателиНалоговПоПрошлыйМесяц.НачисленоПФРСтраховаяСР, 0) КАК НачисленоПФРСтраховаяСР,
	|	ЕСТЬNULL(ПоказателиНалоговНарастающимИтогом.НачисленоПФРСтраховаяСР, 0) КАК НарастНачисленоПФРСтраховаяСР,
	|	ЕСТЬNULL(ПоказателиНалоговНарастающимИтогом.НачисленоПФРСР, 0) - ЕСТЬNULL(ПоказателиНалоговПоПрошлыйМесяц.НачисленоПФРСР, 0) КАК НачисленоПФРСР,
	|	ЕСТЬNULL(ПоказателиНалоговНарастающимИтогом.НачисленоПФРСР, 0) КАК НарастНачисленоПФРСР,
	|	ЕСТЬNULL(ПоказателиНалоговНарастающимИтогом.НачисленоПФРНакопительнаяОбщ, 0) - ЕСТЬNULL(ПоказателиНалоговПоПрошлыйМесяц.НачисленоПФРНакопительнаяОбщ, 0) КАК НачисленоПФРНакопительнаяОбщ,
	|	ЕСТЬNULL(ПоказателиНалоговНарастающимИтогом.НачисленоПФРНакопительнаяОбщ, 0) КАК НарастНачисленоПФРНакопительнаяОбщ,
	|	ЕСТЬNULL(ПоказателиНалоговНарастающимИтогом.НачисленоПФРСтраховаяОбщ, 0) - ЕСТЬNULL(ПоказателиНалоговПоПрошлыйМесяц.НачисленоПФРСтраховаяОбщ, 0) КАК НачисленоПФРСтраховаяОбщ,
	|	ЕСТЬNULL(ПоказателиНалоговНарастающимИтогом.НачисленоПФРСтраховаяОбщ, 0) КАК НарастНачисленоПФРСтраховаяОбщ,
	|	ЕСТЬNULL(ПоказателиНалоговНарастающимИтогом.НачисленоПФРОбщ, 0) - ЕСТЬNULL(ПоказателиНалоговПоПрошлыйМесяц.НачисленоПФРОбщ, 0) КАК НачисленоПФРОбщ,
	|	ЕСТЬNULL(ПоказателиНалоговНарастающимИтогом.НачисленоПФРОбщ, 0) КАК НарастНачисленоПФРОбщ,
	|	ЕСТЬNULL(ПоказателиНалоговНарастающимИтогом.НачисленоПФРНакопительнаяПоВсем, 0) - ЕСТЬNULL(ПоказателиНалоговПоПрошлыйМесяц.НачисленоПФРНакопительнаяПоВсем, 0) КАК НачисленоПФРНакопительнаяПоВсем,
	|	ЕСТЬNULL(ПоказателиНалоговНарастающимИтогом.НачисленоПФРНакопительнаяПоВсем, 0) КАК НарастНачисленоПФРНакопительнаяПоВсем,
	|	ЕСТЬNULL(ПоказателиНалоговНарастающимИтогом.НачисленоПФРСтраховаяПоВсем, 0) - ЕСТЬNULL(ПоказателиНалоговПоПрошлыйМесяц.НачисленоПФРСтраховаяПоВсем, 0) КАК НачисленоПФРСтраховаяПоВсем,
	|	ЕСТЬNULL(ПоказателиНалоговНарастающимИтогом.НачисленоПФРСтраховаяПоВсем, 0) КАК НарастНачисленоПФРСтраховаяПоВсем,
	|	ЕСТЬNULL(ПоказателиНалоговНарастающимИтогом.НачисленоПФРПоВсем, 0) - ЕСТЬNULL(ПоказателиНалоговПоПрошлыйМесяц.НачисленоПФРПоВсем, 0) КАК НачисленоПФРПоВсем,
	|	ЕСТЬNULL(ПоказателиНалоговНарастающимИтогом.НачисленоПФРПоВсем, 0) КАК НарастНачисленоПФРПоВсем
	|ИЗ
	|	ВТМесяцыНП КАК МесяцыНП
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказателиДоходовПоМесяцам КАК ПоказателиДоходов
	|		ПО МесяцыНП.Месяц = ПоказателиДоходов.Месяц
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказателиНалоговПоМесяцам КАК ПоказателиНалогов
	|		ПО МесяцыНП.Месяц = ПоказателиНалогов.Месяц
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказателиДоходовНарастающимИтогом КАК ПоказателиДоходовНарастающимИтогом
	|		ПО МесяцыНП.Месяц = ПоказателиДоходовНарастающимИтогом.Месяц
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказателиНалоговНарастающимИтогом КАК ПоказателиНалоговНарастающимИтогом
	|		ПО МесяцыНП.Месяц = ПоказателиНалоговНарастающимИтогом.Месяц
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказателиНалоговНарастающимИтогом КАК ПоказателиНалоговПоПрошлыйМесяц
	|		ПО (МесяцыНП.Месяц - 1 = ПоказателиНалоговПоПрошлыйМесяц.Месяц)
	|ГДЕ
	|	(ПоказателиДоходов.Месяц ЕСТЬ НЕ NULL 
	|			ИЛИ ПоказателиНалогов.Месяц ЕСТЬ НЕ NULL )
	|
	|УПОРЯДОЧИТЬ ПО
	|	МЕСЯЦ";	
						   
	
	//-----------------------------------------------------------------------------
	// ВЫПОЛНЕНИЕ ЗАПРОСОВ
	
	// Сведения о физлице
	Запрос.Текст = ДанныеОбОрганизации;
	ДанныеОбОрганизации  = Запрос.Выполнить().Выбрать();
	ДанныеОбОрганизации.Следующий();
	
	// Данные расчета
	Запрос.Текст = ДанныеРасчетаТекст;
	ДанныеРасчета  = Запрос.Выполнить().Выбрать();
	
	
	//-----------------------------------------------------------------------------
	// ЗАПОЛНЕНИЕ ФОРМЫ
	
	// Области макета
    ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьПустойМесяц = Макет.ПолучитьОбласть("ПустойМесяц");
	
	// Вывод шапки отчета
	ОбластьШапка.Параметры.Заполнить(ДанныеОбОрганизации);
	ОбластьШапка.Параметры.НалоговыйПериод = Формат(НалоговыйПериод,"ЧГ=");
	ДокументРезультат.Вывести(ОбластьШапка);
	
	// Вывод сведений о доходах и налогах по месяцам налогового периода
	
	ДокументРезультат.Вывести(Макет.ПолучитьОбласть("Заголовок1"));
	ОбластьМесяц = Макет.ПолучитьОбласть("МесяцОбщ");
	// настроим формат вывода данных о налогах
	ОбластиСтроки = ОбластьМесяц.Области;
	Для НомерКолонки = 6 По 8 Цикл
		ОбластиСтроки["_ОСНП0" + НомерКолонки].Формат = ФорматВыводаДанных;
		ОбластиСтроки["_ОСНСНГ0" + НомерКолонки].Формат = ФорматВыводаДанных;
	КонецЦикла;
	
	Месяц = 0;
	НачисленоВсегоОбщ = 0;
	Пока ДанныеРасчета.Следующий() Цикл
		Месяц = ДанныеРасчета.Месяц;
		
		ОбластьМесяц.Параметры.Заполнить(ДанныеРасчета);
		ОбластьМесяц.Параметры.Месяц = Формат(Дата(НалоговыйПериод,Месяц,1),"ДФ=ММММ");
		
		НачисленоВсегоОбщ = НачисленоВсегоОбщ + ДанныеРасчета.НачисленоВсегоОбщ;
		
		// проставим в расшифровки название области, для того чтоб потом понять что нам надо расшифровывать 
		Для Каждого Область Из ОбластьМесяц.Области Цикл
			Если Найти(Область.Имя, "Месяц") > 0 Или Найти(Область.Имя, "R") > 0 Тогда 
				Продолжить
			Иначе
				ОбластьМесяц.Области[Область.Имя].Расшифровка = Новый Структура("Имя,Месяц",Область.Имя,Месяц);
			КонецЕсли;
		КонецЦикла;	
		
		// Выведем месяц
		ДокументРезультат.Вывести(ОбластьМесяц);
		
	КонецЦикла; 
	
	Если Месяц < 12 Тогда  // дополним таблицу пустыми строками
		Для СчМесяцев = Месяц + 1 По 12 Цикл
			// Выведем пустой месяц
			ОбластьПустойМесяц.Параметры.Месяц = Формат(Дата(НалоговыйПериод,СчМесяцев,1),"ДФ=ММММ");
			ДокументРезультат.Вывести(ОбластьПустойМесяц);
		КонецЦикла;		
	КонецЕсли;
	
	ДокументРезультат.Вывести(Макет.ПолучитьОбласть("Заголовок2"));
	ОбластьМесяц = Макет.ПолучитьОбласть("МесяцСР");
	// настроим формат вывода данных о налогах
	ОбластиСтроки = ОбластьМесяц.Области;
	Для НомерКолонки = 6 По 8 Цикл
		ОбластиСтроки["ЕНВДП0" + НомерКолонки].Формат = ФорматВыводаДанных;
		ОбластиСтроки["ЕНВДСНГ0" + НомерКолонки].Формат = ФорматВыводаДанных;
	КонецЦикла;
	
	НачисленоВсегоСР = 0;
	Месяц = 0;
	ДанныеРасчета.Сбросить();
	Пока ДанныеРасчета.Следующий() Цикл
		Месяц = ДанныеРасчета.Месяц;
		
		ОбластьМесяц.Параметры.Заполнить(ДанныеРасчета);
		ОбластьМесяц.Параметры.Месяц = Формат(Дата(НалоговыйПериод,Месяц,1),"ДФ=ММММ");
		
		НачисленоВсегоСР = НачисленоВсегоСР + ДанныеРасчета.НачисленоВсегоСР;
		
		// проставим в расшифровки название области, для того чтоб потом понять что нам надо расшифровывать 
		Для Каждого Область Из ОбластьМесяц.Области Цикл
			Если Найти(Область.Имя, "Месяц") > 0 Или Найти(Область.Имя, "R") > 0 Тогда 
				Продолжить
			Иначе
				ОбластьМесяц.Области[Область.Имя].Расшифровка = Новый Структура("Имя,Месяц",Область.Имя,Месяц);					
			КонецЕсли;
		КонецЦикла;				
		
		// Выведем месяц
		ДокументРезультат.Вывести(ОбластьМесяц);
		
	КонецЦикла; 
	
	Если Месяц < 12 Тогда  // дополним таблицу пустыми строками
		Для СчМесяцев = Месяц + 1 По 12 Цикл
			// Выведем пустой месяц
			ОбластьПустойМесяц.Параметры.Месяц = Формат(Дата(НалоговыйПериод,СчМесяцев,1),"ДФ=ММММ");
			ДокументРезультат.Вывести(ОбластьПустойМесяц);
		КонецЦикла;		
	КонецЕсли;
	
	Месяц = 0;
	ДокументРезультат.Вывести(Макет.ПолучитьОбласть("Заголовок3"));
	Если НачисленоВсегоОбщ <> 0 И НачисленоВсегоСР <> 0 Тогда
		
		ОбластьМесяц = Макет.ПолучитьОбласть("МесяцПоВсем");
		// настроим формат вывода данных о налогах
		ОбластиСтроки = ОбластьМесяц.Области;
		Для НомерКолонки = 6 По 8 Цикл
			ОбластиСтроки["ИТОГП0" + НомерКолонки].Формат = ФорматВыводаДанных;
			ОбластиСтроки["ИТОГСНГ0" + НомерКолонки].Формат = ФорматВыводаДанных;
		КонецЦикла;
		
		ДанныеРасчета.Сбросить();
		Пока ДанныеРасчета.Следующий() Цикл
			Месяц = ДанныеРасчета.Месяц;
			
			ОбластьМесяц.Параметры.Заполнить(ДанныеРасчета);
			ОбластьМесяц.Параметры.Месяц = Формат(Дата(НалоговыйПериод,Месяц,1),"ДФ=ММММ");
			
			// проставим в расшифровки название области, для того чтоб потом понять что нам надо расшифровывать 
			Для Каждого Область Из ОбластьМесяц.Области Цикл
				Если Найти(Область.Имя, "Месяц") > 0 Или Найти(Область.Имя, "R") > 0 Тогда 
					Продолжить
				Иначе
					ОбластьМесяц.Области[Область.Имя].Расшифровка = Новый Структура("Имя,Месяц",Область.Имя,Месяц);
				КонецЕсли;
			КонецЦикла;				
			
			// Выведем месяц
			ДокументРезультат.Вывести(ОбластьМесяц);
			
		КонецЦикла; 
		
	КонецЕсли;
	
	Если Месяц < 12 Тогда  // дополним таблицу пустыми строками
		Для СчМесяцев = Месяц + 1 По 12 Цикл
			// Выведем пустой месяц
			ОбластьПустойМесяц.Параметры.Месяц = Формат(Дата(НалоговыйПериод,СчМесяцев,1),"ДФ=ММММ");
			ДокументРезультат.Вывести(ОбластьПустойМесяц);
		КонецЦикла;		
	КонецЕсли;
	
	//-----------------------------------------------------------------------------

	//Параметры документа
	ДокументРезультат.Автомасштаб 			= 	Истина;
	ДокументРезультат.ОриентацияСтраницы 	= 	ОриентацияСтраницы.Ландшафт;
	ДокументРезультат.ТолькоПросмотр		= 	Истина;
	
КонецПроцедуры


#КонецЕсли


#Если Клиент Тогда
	
Перем НП Экспорт;

Перем мВалютаРегламентированногоУчета;

Процедура ДобавитьОбороты(РабочаяТаблица, Валюта, ВалПриход, Приход, ВалРасход, Расход)

	СтрокаТаблицы = РабочаяТаблица.Найти(Валюта, "Валюта");

	Если СтрокаТаблицы = Неопределено Тогда

		НоваяСтрока = РабочаяТаблица.Добавить();

		НоваяСтрока.Валюта     = Валюта;
		НоваяСтрока.ВалОстаток = 0;
		НоваяСтрока.Остаток    = 0;
		НоваяСтрока.ВалПриход  = ВалПриход; 
		НоваяСтрока.Приход     = Приход;
		НоваяСтрока.ВалРасход  = ВалРасход;
		НоваяСтрока.Расход     = Расход;

	Иначе

		СтрокаТаблицы.ВалПриход = СтрокаТаблицы.ВалПриход + ВалПриход; 
		СтрокаТаблицы.Приход    = СтрокаТаблицы.Приход    + Приход;
		СтрокаТаблицы.ВалРасход = СтрокаТаблицы.ВалРасход + ВалРасход;
		СтрокаТаблицы.Расход    = СтрокаТаблицы.Расход    + Расход;

	КонецЕсли;

КонецПроцедуры 

Функция ПроверкаПериода()

	ПроверкаПройдена = Истина;

	Если ДатаНач > ДатаКон Тогда

		Предупреждение("Неправильно задан период формирования отчета!"+Символы.ПС+
		               "Дата начала больше даты окончания периода.");

		ПроверкаПройдена = Ложь;

	ИначеЕсли ДатаНач = '00010101' Тогда

		Предупреждение("Не указана дата начала отчета");

		ПроверкаПройдена = Ложь;

	ИначеЕсли ДатаКон = '00010101' Тогда

		Предупреждение("Не указана дата конца отчета");

		ПроверкаПройдена=Ложь;

	КонецЕсли;

	Возврат ПроверкаПройдена;

КонецФункции // ПроверкаПериода()

Процедура СформироватьОтчет(ДокументРезультат) Экспорт

	Перем ДатаЛиста;

	Если НЕ ПроверкаПериода() Тогда
		Возврат;
	КонецЕсли;

	Если Организация.Пустая() Тогда
		Сообщить("Не выбрана организация.");
		Возврат;
	КонецЕсли;

	// {ОбособленныеПодразделения
	Если ФормироватьПоПодразделению И НЕ ЗначениеЗаполнено(ПодразделениеОрганизации) Тогда
		Сообщить("Не выбрано подразделение.");
		Возврат;
	ИначеЕсли НЕ ФормироватьПоПодразделению И ЗначениеЗаполнено(ПодразделениеОрганизации) Тогда
		Сообщить("При снятом флажке ""Подразделение"" подразделение должно быть очищено.");
		Возврат;
	КонецЕсли;
	// }ОбособленныеПодразделения

	ДокументРезультат.Очистить();
	ДокументРезультат.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КассоваяКнига";
                         
	НачалоГода = НачалоГода(ДатаНач);

	// расчет номера начального листа
	// осуществляется по проводкам так как не все операции по
	// кассе оформляются приходными/расходными ордерами

	ЛистовЗаГод   = 0;
	ЛистовЗаМесяц = 0;

	Попытка //для случая, когда к организации нет доступа
		Если ПересчитатьНомера Тогда
			
			Номера = РегистрыСведений.НомераЛистовКассовойКниги.СоздатьНаборЗаписей();
			Номера.Отбор.Организация.Установить(Организация);
			// {ОбособленныеПодразделения
			Номера.Отбор.ПодразделениеОрганизации.Установить(ПодразделениеОрганизации);
			// }ОбособленныеПодразделения
			Номера.Прочитать();
			Номера.Очистить();
			Номера.Записать();
			
		Иначе
			
			Если ДатаНач <> НачалоГода Тогда
				
				Отбор = Новый Структура();
				Отбор.Вставить("Организация", Организация);
				Номера = РегистрыСведений.НомераЛистовКассовойКниги.СрезПоследних(ДатаНач - 86400, Отбор);
				
				Если (Номера.Количество() > 0) И (Номера[0].Период >= НачалоГода) Тогда
					
					ЛистовЗаГод = Номера[0].НомерЛиста;
					
					ЛистовЗаПредыдущиеМесяцы = 0;
					НомераПредМесяцев = РегистрыСведений.НомераЛистовКассовойКниги.СрезПоследних(НачалоМесяца(ДатаНач) - 86400, Отбор);
					Если (НомераПредМесяцев.Количество() > 0) И (НомераПредМесяцев[0].Период >= НачалоГода) Тогда
						ЛистовЗаПредыдущиеМесяцы = НомераПредМесяцев[0].НомерЛиста;
					КонецЕсли;
					
					ЛистовЗаМесяц = ЛистовЗаГод - ЛистовЗаПредыдущиеМесяцы;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
	Исключение
		//Эта ветка сработает при выборе организации на которю нет прав
		Предупреждение(НСтр("ru = 'Нарушение прав доступа!'"));
		Возврат;
	КонецПопытки;

	// Инициируем области отчета

	Макет = ПолучитьМакет("КассоваяКнига");

	//////////////////////////////////////////////////////////////////////////////////////////
	
	ОбластьВалОстатокОтчет 				= Макет.ПолучитьОбласть("ВалОстаток|Отчет");
	ОбластьПодвалОтчет 					= Макет.ПолучитьОбласть("Подвал|Отчет");
	ОбластьВТомЧислеОтчет 				= Макет.ПолучитьОбласть("ВТомЧисле|Отчет");
	ОбластьОстатокОтчет 				= Макет.ПолучитьОбласть("Остаток|Отчет");
	ОбластьЛистовЗаМесяцОтчет 			= Макет.ПолучитьОбласть("ЛистовЗаМесяц|Отчет");
	ОбластьЛистовЗаГодОтчет 			= Макет.ПолучитьОбласть("ЛистовЗаГод|Отчет");
	ОбластьВкладнойЛистОтчет 			= Макет.ПолучитьОбласть("ВкладнойЛист|Отчет");
	ОбластьОтчетКассираОтчет 			= Макет.ПолучитьОбласть("ОтчетКассира|Отчет");
	ОбластьШапкаОтчет 					= Макет.ПолучитьОбласть("Шапка|Отчет");
	ОбластьОстатокНаНДОтчет 			= Макет.ПолучитьОбласть("ОстатокНаНД|Отчет");
	ОбластьКурсовыеРазницыОтчет 		= Макет.ПолучитьОбласть("КурсовыеРазницы|Отчет");
	ОбластьКурсовыеРазницыПоВалютеОтчет = Макет.ПолучитьОбласть("КурсовыеРазницыПоВалюте|Отчет");
	ОбластьПереносОтчет 				= Макет.ПолучитьОбласть("Перенос|Отчет");
	ОбластьСтрокаВалШирокаяОтчет 		= Макет.ПолучитьОбласть("СтрокаВалШирокая|Отчет");
	ОбластьСтрокаВалОтчет 				= Макет.ПолучитьОбласть("СтрокаВал|Отчет");
	ОбластьСтрокаШирокаяОтчет 			= Макет.ПолучитьОбласть("СтрокаШирокая|Отчет");
	ОбластьСтрокаОтчет 					= Макет.ПолучитьОбласть("Строка|Отчет");
	ОбластьОборотОтчет 					= Макет.ПолучитьОбласть("Оборот|Отчет");
	ОбластьОборотРубОтчет 				= Макет.ПолучитьОбласть("ОборотРуб|Отчет");
	ОбластьОборотВалОтчет 				= Макет.ПолучитьОбласть("ОборотВал|Отчет");
	ОбластьКурсоваяРазницаОтчет 		= Макет.ПолучитьОбласть("КурсоваяРазница|Отчет");
	ОбластьКурсоваяРазницаПоВалютеОтчет = Макет.ПолучитьОбласть("КурсоваяРазницаПоВалюте|Отчет");
	ОбластьКонечныйОстатокОтчет 		= Макет.ПолучитьОбласть("КонечныйОстаток|Отчет");

	////////////////////////////////////////////////////////////////////////////////////////////////

	НачИтоги = ?(ПересчитатьНомера,НачалоГода,ДатаНач);

	МассивСчетов=Новый Массив;
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.КассаОрганизации);
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.КассаОрганизацииВал);
	
	ЗапросПоИтогам = Новый Запрос;
	ЗапросПоИтогам.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ХозрасчетныйОстаткиИОбороты.Период КАК Период,
	|	ХозрасчетныйОстаткиИОбороты.Валюта КАК Валюта,
	|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт КАК СуммаНачальныйОстатокДт,
	|	ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаНачальныйОстатокДт КАК ВалютнаяСуммаНачальныйОстатокДт,
	|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт КАК СуммаКонечныйОстатокДт,
	|	ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаКонечныйОстатокДт КАК ВалютнаяСуммаКонечныйОстатокДт,
	|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК СуммаОборотДт,
	|	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК СуммаОборотКт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
	|			&НачИтоги,
	|			&ДатаКон,
	|			ДЕНЬ,
	|			ДвиженияИГраницыПериода,
	|			Счет В ИЕРАРХИИ (&МассивСчетов),
	|			,
	|			Организация = &Организация
	// {ОбособленныеПодразделения
	|				И ((НЕ &ФормироватьПоПодразделению) ИЛИ Подразделение = &ПодразделениеОрганизации)
	// }ОбособленныеПодразделения
	|					) КАК ХозрасчетныйОстаткиИОбороты
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период
	|ИТОГИ
	|	СУММА(СуммаНачальныйОстатокДт),
	|	СУММА(ВалютнаяСуммаНачальныйОстатокДт),
	|	СУММА(СуммаКонечныйОстатокДт),
	|	СУММА(ВалютнаяСуммаКонечныйОстатокДт),
	|	СУММА(СуммаОборотДт),
	|	СУММА(СуммаОборотКт)
	|ПО
	|	ОБЩИЕ,
	|	Период ПЕРИОДАМИ(ДЕНЬ, , ),
	|	Валюта
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	ЗапросПоИтогам.УстановитьПараметр("НачИтоги",     НачалоДня(НачИтоги));
	ЗапросПоИтогам.УстановитьПараметр("ДатаКон",      КонецДня(ДатаКон));
	ЗапросПоИтогам.УстановитьПараметр("Организация",  Организация);
	ЗапросПоИтогам.УстановитьПараметр("МассивСчетов", МассивСчетов);
	// {ОбособленныеПодразделения
	ЗапросПоИтогам.УстановитьПараметр("ПодразделениеОрганизации",   ПодразделениеОрганизации);
	ЗапросПоИтогам.УстановитьПараметр("ФормироватьПоПодразделению", ФормироватьПоПодразделению);
	// }ОбособленныеПодразделения
	РезультатЗапросаПоИтогам = ЗапросПоИтогам.Выполнить();

	ЗапросПоДокументам = Новый Запрос;
	ЗапросПоДокументам.Текст=
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КассовыеДокументы.Документ КАК Документ,
	|	НАЧАЛОПЕРИОДА(КассовыеДокументы.Документ.Дата, ДЕНЬ) КАК День,
	|	КассовыеДокументы.Документ.Дата КАК ДатаДок,
	|	КассовыеДокументы.Документ.Номер КАК НомерДок,
	|	КассовыеДокументы.Документ.ВалютаДокумента КАК Валюта,
	|	ПОДСТРОКА(КассовыеДокументы.Документ.Основание, 1, 200) КАК Основание,
	|	ВЫБОР
	|		КОГДА КассовыеДокументы.Документ ССЫЛКА Документ.ПриходныйКассовыйОрдер
	|			ТОГДА КассовыеДокументы.Документ.ПринятоОт
	|		ИНАЧЕ КассовыеДокументы.Документ.Выдать
	|	КОНЕЦ КАК ТекстДок,
	|	ВЫБОР
	|		КОГДА КассовыеДокументы.Документ ССЫЛКА Документ.ПриходныйКассовыйОрдер
	|			ТОГДА КассовыеДокументы.Документ.СуммаДокумента
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Приход,
	|	ВЫБОР
	|		КОГДА КассовыеДокументы.Документ ССЫЛКА Документ.РасходныйКассовыйОрдер
	|			ТОГДА КассовыеДокументы.Документ.СуммаДокумента
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Расход,
	|	ВЫБОР
	|		КОГДА КассовыеДокументы.Документ ССЫЛКА Документ.РасходныйКассовыйОрдер
	|			ТОГДА Проводки.СчетДт
	|		ИНАЧЕ ВЫБОР
	|				КОГДА КассовыеДокументы.Документ.ВидОперации = &ОперацияПриемРозничнойВыручки
	|					ТОГДА КассовыеДокументы.Документ.СчетУчетаРасчетовСКонтрагентом
	|				ИНАЧЕ Проводки.СчетКт
	|			КОНЕЦ
	|	КОНЕЦ КАК Счет
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПриходныйКассовыйОрдер.Ссылка КАК Документ
	|	ИЗ
	|		Документ.ПриходныйКассовыйОрдер КАК ПриходныйКассовыйОрдер
	|	ГДЕ
	|		ПриходныйКассовыйОрдер.ПометкаУдаления = ЛОЖЬ
	|		И ПриходныйКассовыйОрдер.Дата МЕЖДУ &НачИтоги И &ДатаКон
	|		И ПриходныйКассовыйОрдер.Организация = &Организация
	// {ОбособленныеПодразделения
	|		И ((НЕ &ФормироватьПоПодразделению)
	|				ИЛИ ПриходныйКассовыйОрдер.ПодразделениеОрганизации = &ПодразделениеОрганизации)
	// }ОбособленныеПодразделения
	|		И ПриходныйКассовыйОрдер.СчетКасса В ИЕРАРХИИ(&Счет)
	|		И ПриходныйКассовыйОрдер.Проведен
	|		И ПриходныйКассовыйОрдер.ПометкаУдаления = ЛОЖЬ
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РасходныйКассовыйОрдер.Ссылка
	|	ИЗ
	|		Документ.РасходныйКассовыйОрдер КАК РасходныйКассовыйОрдер
	|	ГДЕ
	|		РасходныйКассовыйОрдер.Дата МЕЖДУ &НачИтоги И &ДатаКон
	|		И РасходныйКассовыйОрдер.Организация = &Организация
	// {ОбособленныеПодразделения
	|		И ((НЕ &ФормироватьПоПодразделению)
	|				ИЛИ РасходныйКассовыйОрдер.ПодразделениеОрганизации = &ПодразделениеОрганизации)
	// }ОбособленныеПодразделения
	|		И РасходныйКассовыйОрдер.СчетКасса В ИЕРАРХИИ(&Счет)
	|		И РасходныйКассовыйОрдер.Проведен
	|		И РасходныйКассовыйОрдер.ПометкаУдаления = ЛОЖЬ) КАК КассовыеДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Хозрасчетный.СчетДт КАК СчетДт,
	|			Хозрасчетный.СчетКт КАК СчетКт,
	|			Хозрасчетный.Регистратор КАК Регистратор
	|		ИЗ
	|			РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ГДЕ
	|			(Хозрасчетный.СчетДт В ИЕРАРХИИ (&Счет)
	|						И ((НЕ Хозрасчетный.СчетДт.Валютный)
	|							ИЛИ Хозрасчетный.ВалютнаяСуммаДт <> 0)
	// {ОбособленныеПодразделения
	|						И ((НЕ &ФормироватьПоПодразделению)
	|							ИЛИ Хозрасчетный.ПодразделениеДт = &ПодразделениеОрганизации)
	// }ОбособленныеПодразделения
	|					ИЛИ Хозрасчетный.СчетКт В ИЕРАРХИИ (&Счет)
	|						И ((НЕ Хозрасчетный.СчетКт.Валютный)
	|							ИЛИ Хозрасчетный.ВалютнаяСуммаКт <> 0)
	// {ОбособленныеПодразделения
	|						И ((НЕ &ФормироватьПоПодразделению)
	|							ИЛИ Хозрасчетный.ПодразделениеКт = &ПодразделениеОрганизации)
	// }ОбособленныеПодразделения
	|						И (Хозрасчетный.Период МЕЖДУ &НачИтоги И &ДатаКон)
	|						И Хозрасчетный.Организация = &Организация
	|						И Хозрасчетный.Активность = ИСТИНА)) КАК Проводки
	|		ПО КассовыеДокументы.Документ = Проводки.Регистратор
	|
	|УПОРЯДОЧИТЬ ПО
	|	День,
	|	ДатаДок,
	|	Документ
	|ИТОГИ ПО
	|	День,
	|	Документ,
	|	Счет
	|АВТОУПОРЯДОЧИВАНИЕ";

	ЗапросПоДокументам.УстановитьПараметр("НачИтоги",    НачалоДня(НачИтоги));
	ЗапросПоДокументам.УстановитьПараметр("ДатаКон",     КонецДня(ДатаКон));
	ЗапросПоДокументам.УстановитьПараметр("Организация", Организация);
	ЗапросПоДокументам.УстановитьПараметр("Счет",        МассивСчетов);
	// {ОбособленныеПодразделения
	ЗапросПоДокументам.УстановитьПараметр("ПодразделениеОрганизации",      ПодразделениеОрганизации);
	ЗапросПоДокументам.УстановитьПараметр("ФормироватьПоПодразделению",    ФормироватьПоПодразделению);
	// }ОбособленныеПодразделения
	ЗапросПоДокументам.УстановитьПараметр("ОперацияПриемРозничнойВыручки", Перечисления.ВидыОперацийПКО.РозничнаяВыручка);
	
	РезультатЗапросаПоДокументам = ЗапросПоДокументам.Выполнить();
	
	ТаблицаДокументы = РезультатЗапросаПоДокументам.Выгрузить();
	ТаблицаДокументы.Очистить();
	ТаблицаДокументы.Колонки.Добавить("СтрокаСчет");
	ТаблицаДокументы.Колонки.Добавить("Валютный");
	ТаблицаДокументы.Колонки.Добавить("ВидДокумента");
	
	ТипЧисло=ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15,2);
	
	РабочаяТаблица = Новый ТаблицаЗначений;
	РабочаяТаблица.Колонки.Добавить("Валюта",Новый ОписаниеТипов("СправочникСсылка.Валюты"));
	РабочаяТаблица.Колонки.Добавить("ВалОстаток",ТипЧисло);
	РабочаяТаблица.Колонки.Добавить("Остаток",ТипЧисло);
	РабочаяТаблица.Колонки.Добавить("ВалПриход",ТипЧисло);
	РабочаяТаблица.Колонки.Добавить("Приход",ТипЧисло);
	РабочаяТаблица.Колонки.Добавить("ВалРасход",ТипЧисло);
	РабочаяТаблица.Колонки.Добавить("Расход",ТипЧисло);
	РабочаяТаблица.Индексы.Добавить("Валюта");
		
	ВыборкаПоВалюте = РезультатЗапросаПоИтогам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Валюта");
		
	Пока ВыборкаПоВалюте.Следующий() Цикл
		Если НЕ ВыборкаПоВалюте.Валюта = Справочники.Валюты.ПустаяСсылка() Тогда
			Строка            = РабочаяТаблица.Добавить();
			Строка.Валюта     = ВыборкаПоВалюте.Валюта;
			Строка.Остаток    = ВыборкаПоВалюте.СуммаНачальныйОстатокДт;
			Строка.ВалОстаток = ВыборкаПоВалюте.ВалютнаяСуммаНачальныйОстатокДт;
		КонецЕсли;
	КонецЦикла;
	
	ВыборкаОбщихИтогов = РезультатЗапросаПоИтогам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Общие");
	
	Строка        = РабочаяТаблица.Добавить();
	Строка.Валюта = Справочники.Валюты.ПустаяСсылка();
	
	Если ВыборкаОбщихИтогов.Следующий() Тогда		
		
		Строка.Остаток    = ВыборкаОбщихИтогов["СуммаНачальныйОстатокДт"]-РабочаяТаблица.Итог("Остаток");
		Строка.ВалОстаток = ВыборкаОбщихИтогов["ВалютнаяСуммаНачальныйОстатокДт"]-РабочаяТаблица.Итог("ВалОстаток");
		
	Иначе
		
		Строка.Остаток    = 0;
		Строка.ВалОстаток = 0;
		
	КонецЕсли;

	РабочаяТаблица.Сортировать("Валюта");
	
	// Определяем последние дни месяцев за которые формируется кассовая книга
	
	СписокДней = Новый СписокЗначений;
	
	ВыборкаИтоговПоДням = РезультатЗапросаПоИтогам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Период");
	Пока ВыборкаИтоговПоДням.Следующий() Цикл
		СписокДней.Добавить(ВыборкаИтоговПоДням.Период);
	КонецЦикла;
	ВыборкаДокументовПоДням = РезультатЗапросаПоДокументам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"День");
	Пока ВыборкаДокументовПоДням.Следующий() Цикл
		СписокДней.Добавить(ВыборкаДокументовПоДням.День);
	КонецЦикла;
	СписокДней.СортироватьПоЗначению();
	
	МассивПоследнихДней = Новый Массив;
	Для й = 2 По СписокДней.Количество() Цикл
		Если НачалоМесяца(СписокДней[й - 2].Значение) <> НачалоМесяца(СписокДней[й - 1].Значение) Тогда
			МассивПоследнихДней.Добавить(СписокДней[й - 2].Значение);
		КонецЕсли;
	КонецЦикла;
	
	// Формирование листов кассовой книги
	
	ВыборкаИтоговПоДням     = РезультатЗапросаПоИтогам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Период");
	ВыборкаДокументовПоДням = РезультатЗапросаПоДокументам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"День");
	
	ПоПроводкам  = ВыборкаИтоговПоДням.Следующий();
	ПоДокументам = ВыборкаДокументовПоДням.Следующий();
	
	БылиОшибки    = Ложь;
	ВывестиПодвал = Ложь;
	
	СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, КонецДня(ДатаКон));

	
	ТипПКО = Тип("ДокументСсылка.ПриходныйКассовыйОрдер");
	ТипРКО = Тип("ДокументСсылка.РасходныйКассовыйОрдер");
		
	Пока ПоПроводкам Или ПоДокументам  Цикл
		Если НЕ ПоПроводкам  Тогда
			ДатаЛиста = ВыборкаДокументовПоДням.День;
		ИначеЕсли НЕ ПоДокументам Тогда
			ДатаЛиста = ВыборкаИтоговПоДням.Период;
		Иначе                 
			ДатаЛиста = Мин(ВыборкаДокументовПоДням.День, ВыборкаИтоговПоДням.Период);
		КонецЕсли;
		Если ВыборкаИтоговПоДням.СуммаОборотДт = 0 И ВыборкаИтоговПоДням.СуммаОборотКт = 0 Тогда
			Если НЕ ПоДокументам ИЛИ ДатаЛиста <> ВыборкаДокументовПоДням.День Тогда
				ПоПроводкам = ВыборкаИтоговПоДням.Следующий();
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		НомерЛиста = ЛистовЗаГод + 1;
		ЛистовЗаГод = ЛистовЗаГод + 1;
		ЛистовЗаМесяц = ЛистовЗаМесяц + 1;
		
		КоличествоПриходныхДокументов = 0;
		КоличествоРасходныхДокументов = 0;
		
		СчетКурсовыхРазниц = ПланыСчетов.Хозрасчетный.ПрочиеДоходыИРасходы;
		Остаток = РабочаяТаблица.Итог("Остаток");
		Если ДатаЛиста >= ДатаНач Тогда
			
			ОбластьВкладнойЛистОтчет.Параметры.ЗаголовокЛиста="КАССА за "+Формат(ДатаЛиста, "ДФ=dd.MM.yyyy");
			ДокументРезультат.Вывести(ОбластьВкладнойЛистОтчет);
			
			ОбластьОтчетКассираОтчет.Параметры.ЗаголовокЛиста="КАССА за "+Формат(ДатаЛиста, "ДФ=dd.MM.yyyy");
			ДокументРезультат.Присоединить(ОбластьОтчетКассираОтчет);
			
			ОбластьШапкаОтчет.Параметры.ТекстНомерЛиста="Лист "+НомерЛиста;
			ДокументРезультат.Вывести(ОбластьШапкаОтчет);
			ДокументРезультат.Присоединить(ОбластьШапкаОтчет);
			
			ОбластьОстатокНаНДОтчет.Параметры.ОстатокНачало=Остаток;
			ДокументРезультат.Вывести(ОбластьОстатокНаНДОтчет);
			ДокументРезультат.Присоединить(ОбластьОстатокНаНДОтчет);
			
		КонецЕсли;
	
		ПоВалютам = Ложь;
		Для Каждого Строка Из РабочаяТаблица Цикл  
			Если ((Строка.Остаток <> 0) Или (Строка.ВалОстаток <> 0)) И (НЕ Строка.Валюта=Справочники.Валюты.ПустаяСсылка()) Тогда
				ПоВалютам = Истина;      
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
//		Высота каждой строки = 13 пунктов
//      На стандартную страницу помещается 59 строк

//		Высоты секций в строках:
//      Шапка = 5 стр
//		ВкладнойЛист = 3 стр
//		ОтчетКассира = 3 стр
//		ОстатокНаНачало = 1 стр
//		ВТомЧисле = 1 стр
//		Остаток = 1 стр
//		ВалОстаток = 2 стр
//		КурсовыеРазницы = 2 стр
//		КурсовыеРазницыПоВалюте = 1 стр
//		Строка = 2 стр
//		СтрокаШирокая = 4 стр
//		СтрокаВал = 2 стр
//		СтрокаВалШирокая = 4 стр
//		Перенос = 1 стр
//		Оборот = 1 стр
//		ОборотРуб = 1 стр
//		ОборотВал = 2 стр
//		КурсоваяРазница = 1 стр
//		КурсоваяРазницаПоВалюте = 1 стр
//		КонечныйОстаток = 1 стр
//		Подвал = 11 стр
//		ЛистовЗаМесяц = 1 стр
//		ЛистовЗаГод = 1 стр
		
		ВысотаСтроки = ?(ВыводитьОснования = 1, 4, 2); // высота секции документа
		СтрокШапки = 9;
		СтрокПодвала = 13;
		
		Если ПоВалютам Тогда
			Если ДатаЛиста >= ДатаНач Тогда
				ДокументРезультат.Вывести(ОбластьВТомЧислеОтчет);
				ДокументРезультат.Присоединить(ОбластьВТомЧислеОтчет);
			КонецЕсли;
			СтрокШапки = СтрокШапки + 1;
			Для Каждого Строка ИЗ РабочаяТаблица Цикл    
				Валюта     = Строка.Валюта;
				РубОстаток = Строка.Остаток;
				ВалОстаток = Строка.ВалОстаток;
				Если Строка.Валюта = Справочники.Валюты.ПустаяСсылка() Тогда
					Если ДатаЛиста >= ДатаНач Тогда
						
						ОбластьОстатокОтчет.Параметры.ВалютаРеглУчета = "национальная валюта ("+Константы.ВалютаРегламентированногоУчета.Получить().НаименованиеПолное+"):";
						ОбластьОстатокОтчет.Параметры.РеглОстаток = РубОстаток;
						
						ДокументРезультат.Вывести(ОбластьОстатокОтчет);
						ДокументРезультат.Присоединить(ОбластьОстатокОтчет);
						
					КонецЕсли;
					СтрокШапки = СтрокШапки + 1;
				Иначе
					Если (РубОстаток <> 0) Или (ВалОстаток <> 0) Тогда
						Если ДатаЛиста >= ДатаНач Тогда
							
							ОбластьВалОстатокОтчет.Параметры.ВалютаВалУчета="иностранная валюта ("+Валюта.НаименованиеПолное+"):";
							ОбластьВалОстатокОтчет.Параметры.ВалОстатокРегл=РубОстаток;
							ОбластьВалОстатокОтчет.Параметры.ВалОстатокВал=Формат(ВалОстаток,"ЧЦ=15; ЧДЦ=2; ЧРД==")+" "+Валюта.Наименование;
							
							ДокументРезультат.Вывести(ОбластьВалОстатокОтчет);
							ДокументРезультат.Присоединить(ОбластьВалОстатокОтчет);
							
						КонецЕсли;
						СтрокШапки = СтрокШапки + 2;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ТаблицаДокументы.Очистить();
		Валюты = Новый СписокЗначений;
				
		Если ПоДокументам И ВыборкаДокументовПоДням.День = ДатаЛиста Тогда
			
			ВыборкаДокументов = ВыборкаДокументовПоДням.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Документ");
			
			Пока ВыборкаДокументов.Следующий() Цикл
				
				НоваяСтрока = ТаблицаДокументы.Добавить();
				НоваяСтрока.ВидДокумента = ?(ТипЗнч(ВыборкаДокументов.Документ) = ТипПКО, "ПриходныйОрдер", "РасходныйОрдер");
				НоваяСтрока.Документ     = ВыборкаДокументов.Документ;
				НоваяСтрока.ДатаДок      = ВыборкаДокументов.ДатаДок;
				НоваяСтрока.День         = ВыборкаДокументов.День;
				НоваяСтрока.НомерДок     = ВыборкаДокументов.НомерДок;
				НоваяСтрока.Валюта       = ВыборкаДокументов.Валюта;
				НоваяСтрока.Приход       = ВыборкаДокументов.Приход;
				НоваяСтрока.Расход       = ВыборкаДокументов.Расход;
				НоваяСтрока.Основание    = ВыборкаДокументов.Основание;
				НоваяСтрока.ТекстДок     = ВыборкаДокументов.ТекстДок;
				
				НоваяСтрока.Валютный = ВыборкаДокументов.Валюта <> мВалютаРегламентированногоУчета;
				Если НоваяСтрока.Валютный И Валюты.НайтиПоЗначению(ВыборкаДокументов.Валюта) = Неопределено Тогда
					Валюты.Добавить(ВыборкаДокументов.Валюта);
				КонецЕсли;
				
				ВыборкаСчетов = ВыборкаДокументов.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Счет");
				СписокСчетов  = Новый ТаблицаЗначений;
				СписокСчетов.Колонки.Добавить("Счет");
				Пока ВыборкаСчетов.Следующий() Цикл
					
					СтрокаТаблицыСчетов      = СписокСчетов.Добавить();
					СтрокаТаблицыСчетов.Счет = ВыборкаСчетов.Счет;
					
				КонецЦикла;
				
				СписокСчетов.Свернуть("Счет");
				
				СтрокаСчет = "";
				Для Каждого СтрокаТаблицыСчетов Из СписокСчетов Цикл
					СтрокаСчет = СтрокаСчет + СтрокаТаблицыСчетов.Счет + Символы.ПС;
				КонецЦикла;
				
				
				НоваяСтрока.СтрокаСчет = СтрокаСчет;
				
			КонецЦикла;
			
		КонецЕсли;
		
		СумПриход    = 0;
		СумРасход    = 0;
		ПерваяСтрока = 1;
		Для Каждого СтрокаТаблица ИЗ РабочаяТаблица Цикл
			
			Если СтрокаТаблица.Валюта = Справочники.Валюты.ПустаяСсылка() Тогда
				Продолжить;
			КонецЕсли;

			Если ДатаЛиста <> НачалоДня(КонецМесяца(ДатаЛиста)) Тогда
				Если Валюты.НайтиПоЗначению(СтрокаТаблица.Валюта) = Неопределено Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			СтруктураКурсов = МодульВалютногоУчета.ПолучитьКурсВалюты(СтрокаТаблица.Валюта,ДатаЛиста);
			
			Курс      = СтруктураКурсов.Курс;
			Кратность = СтруктураКурсов.Кратность;
			Кратность = ?(Кратность=0, 1, Кратность);
			КурсоваяРазница = Окр(СтрокаТаблица.ВалОстаток * Курс / Кратность - СтрокаТаблица.Остаток, 2, 1);
			Если КурсоваяРазница <> 0 Тогда
				Если ПерваяСтрока = 1 Тогда
					Если ДатаЛиста >= ДатаНач Тогда
												
						ДокументРезультат.Вывести(ОбластьКурсовыеРазницыОтчет);
						ДокументРезультат.Присоединить(ОбластьКурсовыеРазницыОтчет);
						
					КонецЕсли;
					СтрокШапки   = СтрокШапки + 2;
					ПерваяСтрока = 0;
				КонецЕсли;
				Валюта = СтрокаТаблица.Валюта;
				Приход = 0;
				Расход = 0;
				КоррСчет = СчетКурсовыхРазниц;
				Если КурсоваяРазница > 0 Тогда
					Приход    = КурсоваяРазница;
					СумПриход = СумПриход+КурсоваяРазница;
				Иначе
					Расход    = -КурсоваяРазница;
					СумРасход = СумРасход-КурсоваяРазница;
				КонецЕсли;   
				СтрокаТаблица.Приход = СтрокаТаблица.Приход+Приход;
				СтрокаТаблица.Расход = СтрокаТаблица.Расход+Расход;
				Если ДатаЛиста >= ДатаНач Тогда
					
					ОбластьКурсовыеРазницыПоВалютеОтчет.Параметры.НадписьКРВалюта = "по " + Валюта.Наименование;
					ОбластьКурсовыеРазницыПоВалютеОтчет.Параметры.КоррСчет = КоррСчет;
					ОбластьКурсовыеРазницыПоВалютеОтчет.Параметры.Приход   = Приход;
					ОбластьКурсовыеРазницыПоВалютеОтчет.Параметры.Расход   = Расход;
					
					ДокументРезультат.Вывести(ОбластьКурсовыеРазницыПоВалютеОтчет);
					ДокументРезультат.Присоединить(ОбластьКурсовыеРазницыПоВалютеОтчет);
					
				КонецЕсли;
				СтрокШапки = СтрокШапки + 1;
			КонецЕсли;
		КонецЦикла;
		          
		// Для простоты настройки печатной формы примем следующие соглашения:
		//	-	высота строк в таблице печатной формы задана жестко,
		//		тогда известно, сколько строк помещается на странице;
		СтрокНаСтранице = 58;
		//	-	высота шапки и подвала задана жестко и кратна высоте строк таблицы,
		//		тогда можно указать, сколько строк занимают шапка и подвал
		//		в пересчете на строки таблицы;
		//  -   Количество строк шапки определено при выводе валюты в шапку;
		//  -   Количество строк подвала определим позже по количеству валют;
		//	-	для нормальной работы алгоритма необходимо, чтобы шапка и подвал
		//		могли поместиться на одной странице + хотя бы одна строка таблицы:
		//		СтрокНаСтранице >= СтрокШапки + СтрокПодвала + 1
		//	-	если подвал не помещается на странице, он переносится на другую
		//		страницу с последней строкой; исключение составляет случай,
		//		когда в таблице всего одна строка.
		
		// Резервирование строк для вывода сведений о валюте в подвале.
		// Найдем количество валют, по которым будет остаток в конце дня.
		КоличествоВалютВПодвале = РабочаяТаблица.Количество() - 1; // без рублей
		// Добавим валюты, по которым нет итогов, но по которым есть оборот,
		// введенный документами.
		Для Каждого Валюта ИЗ Валюты Цикл
			
			Если РабочаяТаблица.Найти(Валюта.Значение, "Валюта") = Неопределено Тогда
				КоличествоВалютВПодвале = КоличествоВалютВПодвале + 1;
			КонецЕсли;
			
		КонецЦикла;
		// По каждой валюте добавляется:
		//  2 строки для оборота;
		//  2 строки для остатка;
		//  1 строка под курсовую разницу.
		// Для рублей добавляется:
		//  1 строка для оборота;
		//  1 строка для остатка.
		// Добавляет строка для секции "КурсоваяРазница" и "ВТомЧисле".
		СтрокПодвала = СтрокПодвала + ?(КоличествоВалютВПодвале > 0, КоличествоВалютВПодвале * 5 + 4, 0);
		
		// Резервирование строк подвала для секции "ЛистовЗаМесяц" и "ЛистовЗаГод".
		СтрокПодвала = СтрокПодвала + ?(ПоследнийЛист > 0, ПоследнийЛист, 0);
		
		// Если ПереноситьПоследнююСтроку = 1 - переносить,
		// если ПереноситьПоследнююСтроку = 0 - не надо переносить:
		Если (ТаблицаДокументы.Количество() * ВысотаСтроки) <= (СтрокНаСтранице - СтрокШапки - СтрокПодвала) Тогда
			ПереноситьПоследнююСтроку = 0;
		Иначе
			ЦелыхСтраницСПодвалом = Цел(((СтрокШапки-5)+ТаблицаДокументы.Количество()*ВысотаСтроки+СтрокПодвала-1)/(СтрокНаСтранице-5));
			ЦелыхСтраницБезПодвала = Цел(((СтрокШапки-5)+ТаблицаДокументы.Количество()*ВысотаСтроки-1)/(СтрокНаСтранице-5));
			ПереноситьПоследнююСтроку = ЦелыхСтраницСПодвалом - ЦелыхСтраницБезПодвала;
		КонецЕсли;
		
		КоличествоСтраниц = 1;
		Индекс            = 1;
		Для Каждого Документ Из ТаблицаДокументы Цикл
			
			Если Документ.ВидДокумента = "ПриходныйОрдер" или Документ.ВидДокумента = "РасходныйОрдер" Тогда
				ЕстьВалюта = Документ.Валютный;
			Иначе
				ЕстьВалюта = Ложь;
			КонецЕсли;
			
			Если ЕстьВалюта Тогда
				Валюта          = Документ.Валюта;
				СтруктураКурсов = МодульВалютногоУчета.ПолучитьКурсВалюты(Валюта,Документ.ДатаДок);
				
				Курс      = СтруктураКурсов.Курс;
				Кратность = СтруктураКурсов.Кратность;
				Кратность = ?(Кратность = 0, 1, Кратность);
			Иначе
				Валюта    = Справочники.Валюты.ПустаяСсылка();
				Курс      = 1;
				Кратность = 1;
			КонецЕсли;
				
			Если Документ.ВидДокумента = "РасходныйОрдер" Тогда
				Клиент = "Выдано " + СокрЛП(Документ.ТекстДок) + ?(ВыводитьОснования = 1, " " + СокрЛП(Документ.Основание), "");
				КоличествоРасходныхДокументов = КоличествоРасходныхДокументов + 1;
				ВалРасход = Документ.Расход;
				Расход    = Окр(Документ.Расход*Курс/Кратность,2,1);
				ВалПриход = 0;
				Приход    = 0;
			Иначе
				Клиент = "Принято от " + СокрЛП(Документ.ТекстДок) + ?(ВыводитьОснования = 1, " " + СокрЛП(Документ.Основание), "");
				КоличествоПриходныхДокументов = КоличествоПриходныхДокументов + 1;
				ВалПриход = Документ.Приход;
				Приход    = Окр(Документ.Приход*Курс/Кратность,2,1);
				ВалРасход = 0;
				Расход    = 0;
			КонецЕсли;
			
			СтруктураНомерДок = Новый Структура;
			СтруктураНомерДок.Вставить("Организация",Организация);
			СтруктураНомерДок.Вставить("Номер",Документ.НомерДок);		
			
			НомерДокПечатнойФормы = ОбщегоНазначения.ПолучитьНомерНаПечать(СтруктураНомерДок);
			КоррСчет = Документ.СтрокаСчет;
			
			// Начинаем новую страницу, если предыдущая строка была последней на странице
			// или пора переносить последнюю строку на последнюю страницу с подвалом.
			ЦелаяСтраница = Цел(((СтрокШапки-5)+(КоличествоСтраниц - 1)+(Индекс*ВысотаСтроки)-1)/(СтрокНаСтранице-5));
			Если (ЦелаяСтраница = КоличествоСтраниц) или 
				 ((ПереноситьПоследнююСтроку = 1) и (Индекс = ТаблицаДокументы.Количество())) Тогда
				ПриходЗаДень = РабочаяТаблица.Итог("Приход");
				РасходЗаДень = РабочаяТаблица.Итог("Расход");
				Если ДатаЛиста >= ДатаНач Тогда
					
					ОбластьПереносОтчет.Параметры.ПриходЗаДень = ПриходЗаДень;
					ОбластьПереносОтчет.Параметры.РасходЗаДень = РасходЗаДень;
					
					ДокументРезультат.Вывести(ОбластьПереносОтчет);
					ДокументРезультат.Присоединить(ОбластьПереносОтчет);
					
				КонецЕсли;
				НомерЛиста        = НомерЛиста + 1;
				КоличествоСтраниц = КоличествоСтраниц + 1;
				ЛистовЗаГод       = ЛистовЗаГод + 1;
				ЛистовЗаМесяц     = ЛистовЗаМесяц + 1;
				Если ДатаЛиста >= ДатаНач Тогда
					ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
					ОбластьШапкаОтчет.Параметры.ТекстНомерЛиста = "Лист "+НомерЛиста;
					ДокументРезультат.Вывести(ОбластьШапкаОтчет);
					ДокументРезультат.Присоединить(ОбластьШапкаОтчет);
				КонецЕсли;
			КонецЕсли;
			
			Если ДатаЛиста >= ДатаНач Тогда
				Если ЕстьВалюта Тогда
					Если ВыводитьОснования Тогда
						
						ОбластьСтрокаВалШирокаяОтчет.Параметры.НомерДокПечатнойФормы = НомерДокПечатнойФормы;
						ОбластьСтрокаВалШирокаяОтчет.Параметры.Контрагент = Клиент;
						ОбластьСтрокаВалШирокаяОтчет.Параметры.КоррСчет   = КоррСчет;
						ОбластьСтрокаВалШирокаяОтчет.Параметры.Приход     = Приход;
						ОбластьСтрокаВалШирокаяОтчет.Параметры.Расход     = Расход;
						ОбластьСтрокаВалШирокаяОтчет.Параметры.ВалПриход  = Формат(ВалПриход,"ЧЦ=15; ЧДЦ=2; ЧРД==")+" "+Валюта.Наименование;
						ОбластьСтрокаВалШирокаяОтчет.Параметры.ВалРасход  = Формат(ВалРасход,"ЧЦ=15; ЧДЦ=2; ЧРД==")+" "+Валюта.Наименование;
						ОбластьСтрокаВалШирокаяОтчет.Параметры.Документ   = Документ.Документ;
	
						ДокументРезультат.Вывести(ОбластьСтрокаВалШирокаяОтчет);
						ДокументРезультат.Присоединить(ОбластьСтрокаВалШирокаяОтчет);
						
					Иначе
						
						ОбластьСтрокаВалОтчет.Параметры.НомерДокПечатнойФормы = НомерДокПечатнойФормы;
						ОбластьСтрокаВалОтчет.Параметры.Контрагент = Клиент;
						ОбластьСтрокаВалОтчет.Параметры.КоррСчет   = КоррСчет;
						ОбластьСтрокаВалОтчет.Параметры.Приход     = Приход;
						ОбластьСтрокаВалОтчет.Параметры.Расход     = Расход;
						ОбластьСтрокаВалОтчет.Параметры.ВалПриход  = Формат(ВалПриход,"ЧЦ=15; ЧДЦ=2; ЧРД==")+" "+Валюта.Наименование;
						ОбластьСтрокаВалОтчет.Параметры.ВалРасход  = Формат(ВалРасход,"ЧЦ=15; ЧДЦ=2; ЧРД==")+" "+Валюта.Наименование;
						ОбластьСтрокаВалОтчет.Параметры.Документ   = Документ.Документ;
						
						ДокументРезультат.Вывести(ОбластьСтрокаВалОтчет);
						ДокументРезультат.Присоединить(ОбластьСтрокаВалОтчет);
						
					КонецЕсли;
					
				Иначе
					Если ВыводитьОснования Тогда
						
						ОбластьСтрокаШирокаяОтчет.Параметры.НомерДокПечатнойФормы = НомерДокПечатнойФормы;
						ОбластьСтрокаШирокаяОтчет.Параметры.Контрагент = Клиент;
						ОбластьСтрокаШирокаяОтчет.Параметры.КоррСчет   = КоррСчет;
						ОбластьСтрокаШирокаяОтчет.Параметры.Приход     = Приход;
						ОбластьСтрокаШирокаяОтчет.Параметры.Расход     = Расход;
						ОбластьСтрокаШирокаяОтчет.Параметры.Документ   = Документ.Документ;
						
						ДокументРезультат.Вывести(ОбластьСтрокаШирокаяОтчет);
						ДокументРезультат.Присоединить(ОбластьСтрокаШирокаяОтчет);
						
					Иначе
						
						ОбластьСтрокаОтчет.Параметры.НомерДокПечатнойФормы = НомерДокПечатнойФормы;
						ОбластьСтрокаОтчет.Параметры.Контрагент = Клиент;
						ОбластьСтрокаОтчет.Параметры.КоррСчет   = КоррСчет;
						ОбластьСтрокаОтчет.Параметры.Приход     = Приход;
						ОбластьСтрокаОтчет.Параметры.Расход     = Расход;
						ОбластьСтрокаОтчет.Параметры.Документ   = Документ.Документ;
						
						ДокументРезультат.Вывести(ОбластьСтрокаОтчет);
						ДокументРезультат.Присоединить(ОбластьСтрокаОтчет);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			ДобавитьОбороты(РабочаяТаблица, Валюта, ВалПриход, Приход, ВалРасход, Расход);
			Индекс = Индекс + 1;
		КонецЦикла;
		
		ПриходЗаДень = РабочаяТаблица.Итог("Приход");
		РасходЗаДень = РабочаяТаблица.Итог("Расход");
		Если ДатаЛиста >= ДатаНач Тогда
			
			ОбластьОборотОтчет.Параметры.ПриходЗаДень = ПриходЗаДень;
			ОбластьОборотОтчет.Параметры.РасходЗаДень = РасходЗаДень;
			
			ДокументРезультат.Вывести(ОбластьОборотОтчет);
			ДокументРезультат.Присоединить(ОбластьОборотОтчет);
			
			ПоВалютам = Ложь;
			Для Каждого Строка ИЗ РабочаяТаблица Цикл    
				Если ((Строка.ВалПриход <> 0) Или (Строка.Приход <> 0) Или 
					  (Строка.ВалРасход <> 0) Или (Строка.Расход <> 0)) И
					 (НЕ Строка.Валюта=Справочники.Валюты.ПустаяСсылка()) Тогда
					ПоВалютам = Истина ;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если ПоВалютам Тогда
				Для Каждого Строка ИЗ РабочаяТаблица Цикл
					Валюта = Строка.Валюта;
					ВалПриходЗаДень = Строка.ВалПриход;
					РубПриходЗаДень = Строка.Приход;
					ВалРасходЗаДень = Строка.ВалРасход;
					РубРасходЗаДень = Строка.Расход;
					Если Строка.Валюта = Справочники.Валюты.ПустаяСсылка() Тогда
						
						ОбластьОборотРубОтчет.Параметры.РеглПриходЗаДень = РубПриходЗаДень;
						ОбластьОборотРубОтчет.Параметры.РеглРасходЗаДень = РубРасходЗаДень;
						ОбластьОборотРубОтчет.Параметры.ВалютаРеглУчета  = "национальная валюта (" + Константы.ВалютаРегламентированногоУчета.Получить().НаименованиеПолное + "):";
						
						ДокументРезультат.Вывести(ОбластьОборотРубОтчет);
						ДокументРезультат.Присоединить(ОбластьОборотРубОтчет);
					Иначе
						Если (ВалПриходЗаДень <> 0) Или (РубПриходЗаДень <> 0) Или 
							 (ВалРасходЗаДень <> 0) Или (РубРасходЗаДень <> 0) Тогда
							
							ОбластьОборотВалОтчет.Параметры.ВалютаВалУчета      = "иностранная валюта (" + Валюта.НаименованиеПолное + "):";
							ОбластьОборотВалОтчет.Параметры.ВалПриходЗаДеньРегл = РубПриходЗаДень;
							ОбластьОборотВалОтчет.Параметры.ВалРасходЗаДеньРегл = РубРасходЗаДень;
							ОбластьОборотВалОтчет.Параметры.ВалПриходЗаДеньВал  = Формат(ВалПриходЗаДень,"ЧЦ=15; ЧДЦ=2; ЧРД==")+" "+Валюта;
							ОбластьОборотВалОтчет.Параметры.ВалРасходЗаДеньВал  = Формат(ВалРасходЗаДень,"ЧЦ=15; ЧДЦ=2; ЧРД==")+" "+Валюта;
							
							ДокументРезультат.Вывести(ОбластьОборотВалОтчет);
							ДокументРезультат.Присоединить(ОбластьОборотВалОтчет);
							
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		ПерваяСтрока = Истина;
		Остаток      = Остаток + ПриходЗаДень - РасходЗаДень;
		Для Каждого Строка ИЗ РабочаяТаблица Цикл
			Если Строка.Валюта = Справочники.Валюты.ПустаяСсылка() Тогда
				Продолжить;
			КонецЕсли;
			
			Если ДатаЛиста <> НачалоДня(КонецМесяца(ДатаЛиста)) Тогда
				Если Валюты.НайтиПоЗначению(Строка.Валюта) = Неопределено Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			СтруктураКурсов = МодульВалютногоУчета.ПолучитьКурсВалюты(Строка.Валюта, ДатаЛиста);
			
			Курс      = СтруктураКурсов.Курс;
			Кратность = СтруктураКурсов.Кратность;
			Кратность = ?(Кратность=0, 1, Кратность);
			КурсоваяРазница = Окр((Строка.ВалОстаток+Строка.ВалПриход-Строка.ВалРасход)*Курс/Кратность-(Строка.Остаток+Строка.Приход-Строка.Расход), 2, 1);
			Если КурсоваяРазница <> 0 Тогда
				Если ПерваяСтрока Тогда
					Если ДатаЛиста >= ДатаНач Тогда
						ДокументРезультат.Вывести(ОбластьКурсоваяРазницаОтчет);
						ДокументРезультат.Присоединить(ОбластьКурсоваяРазницаОтчет);
					КонецЕсли;
					ПерваяСтрока = Ложь;
				КонецЕсли;
				Валюта       = Строка.Валюта;
				ПриходЗаДень = 0;
				РасходЗаДень = 0;
				Если КурсоваяРазница > 0 Тогда
					ПриходЗаДень  = КурсоваяРазница;
					Строка.Приход = Строка.Приход + КурсоваяРазница;
				Иначе
					РасходЗаДень  = -КурсоваяРазница;
					Строка.Расход = Строка.Расход - КурсоваяРазница;
				КонецЕсли;
				Если ДатаЛиста >= ДатаНач Тогда
					
					ОбластьКурсоваяРазницаПоВалютеОтчет.Параметры.Валюта       = Валюта;
					ОбластьКурсоваяРазницаПоВалютеОтчет.Параметры.ПриходЗаДень = ПриходЗаДень;
					ОбластьКурсоваяРазницаПоВалютеОтчет.Параметры.РасходЗаДень = РасходЗаДень;
					
					ДокументРезультат.Вывести(ОбластьКурсоваяРазницаПоВалютеОтчет);
					ДокументРезультат.Присоединить(ОбластьКурсоваяРазницаПоВалютеОтчет);
					
				КонецЕсли;
				Остаток = Остаток + КурсоваяРазница;
			КонецЕсли;
		КонецЦикла;
		
		Если ДатаЛиста >= ДатаНач Тогда
			
			ОбластьКонечныйОстатокОтчет.Параметры.ОстатокКонец = Остаток;
			
			ДокументРезультат.Вывести(ОбластьКонечныйОстатокОтчет);
			ДокументРезультат.Присоединить(ОбластьКонечныйОстатокОтчет);
		
			ПоВалютам = Ложь;
			Для Каждого Строка ИЗ РабочаяТаблица Цикл
				Если ((Строка.Остаток+Строка.Приход-Строка.Расход <> 0) Или (Строка.ВалОстаток+Строка.ВалПриход-Строка.ВалРасход <> 0)) И (НЕ Строка.Валюта=Справочники.Валюты.ПустаяСсылка()) Тогда
					ПоВалютам = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			Если ПоВалютам Тогда
				ДокументРезультат.Вывести(ОбластьВТомЧислеОтчет);
				ДокументРезультат.Присоединить(ОбластьВТомЧислеОтчет);
				Для Каждого Строка ИЗ РабочаяТаблица Цикл
					Валюта     = Строка.Валюта;
					РубОстаток = Строка.Остаток + Строка.Приход - Строка.Расход;
					ВалОстаток = Строка.ВалОстаток + Строка.ВалПриход - Строка.ВалРасход;
					Если Строка.Валюта = Справочники.Валюты.ПустаяСсылка() Тогда
						
						ОбластьОстатокОтчет.Параметры.ВалютаРеглУчета = "национальная валюта (" + Константы.ВалютаРегламентированногоУчета.Получить().НаименованиеПолное+"):";
						ОбластьОстатокОтчет.Параметры.РеглОстаток     = РубОстаток;
						
						ДокументРезультат.Вывести(ОбластьОстатокОтчет);
						ДокументРезультат.Присоединить(ОбластьОстатокОтчет);
						
					Иначе
						Если (РубОстаток <> 0) Или (ВалОстаток <> 0) Тогда
							
							ОбластьВалОстатокОтчет.Параметры.ВалютаВалУчета = "иностранная валюта (" + Валюта.НаименованиеПолное + "):";
							ОбластьВалОстатокОтчет.Параметры.ВалОстатокРегл = РубОстаток;
							ОбластьВалОстатокОтчет.Параметры.ВалОстатокВал  = Формат(ВалОстаток,"ЧЦ=15; ЧДЦ=2; ЧРД==")+" "+Валюта.Наименование;
							
							ДокументРезультат.Вывести(ОбластьВалОстатокОтчет);
							ДокументРезультат.Присоединить(ОбластьВалОстатокОтчет);
							
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			ОбластьПодвалОтчет.Параметры.НадписьКолПриходныхРасходных=?(КоличествоПриходныхДокументов>0, ЧислоПрописью(КоличествоПриходныхДокументов,"НД=Ложь",",,,,,,,,0")," - ")+ "приходных и "+
			?(КоличествоРасходныхДокументов>0,ЧислоПрописью(КоличествоРасходныхДокументов,"НД=Ложь",",,,,,,,,0")," - ")+"расходных получил.";
			
			ЗначениеОрганизации = Организация;
			// {ОбособленныеПодразделения
			ЗначениеОрганизации = ?(ФормироватьПоПодразделению, ПодразделениеОрганизации, Организация);
			// }ОбособленныеПодразделения
			Руководители = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(ЗначениеОрганизации, КонецДня(ДатаЛиста),);
			
			ОбластьПодвалОтчет.Параметры.ГлБухгалтер = Руководители.ГлавныйБухгалтер;
			ОбластьПодвалОтчет.Параметры.Кассир      = Руководители.Кассир;
			
			ДокументРезультат.Вывести(ОбластьПодвалОтчет);
			ДокументРезультат.Присоединить(ОбластьПодвалОтчет);
		КонецЕсли;
		
		Ошибка      = Ложь;
		Сортировать = Ложь;
		ВыборкаПоВалюте = ВыборкаИтоговПоДням.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Валюта");
		
		Пока ВыборкаПоВалюте.Следующий() Цикл
			Если НЕ ВыборкаПоВалюте.Валюта = Справочники.Валюты.ПустаяСсылка() Тогда
				Строка = РабочаяТаблица.Найти(ВыборкаПоВалюте.Валюта, "Валюта");
				Если Строка = Неопределено Тогда
					Строка        = РабочаяТаблица.Добавить();
					Строка.Валюта = ВыборкаПоВалюте.Валюта;
					Сортировать   = Истина;
				КонецЕсли;
				Если (Строка.ВалОстаток + Строка.ВалПриход - Строка.ВалРасход <> ВыборкаПоВалюте.ВалютнаяСуммаКонечныйОстатокДт) Или
					 (Строка.Остаток + Строка.Приход - Строка.Расход <> ВыборкаПоВалюте.СуммаКонечныйОстатокДт) Тогда
					Ошибка = Истина;
				КонецЕсли;
				Строка.ВалОстаток = ВыборкаПоВалюте.ВалютнаяСуммаКонечныйОстатокДт;
				Строка.Остаток    = ВыборкаПоВалюте.СуммаКонечныйОстатокДт;
			КонецЕсли;
		КонецЦикла;
		
		Строка = РабочаяТаблица.Найти(Справочники.Валюты.ПустаяСсылка(), "Валюта");
		
		Если Строка = Неопределено Тогда
			Строка        = РабочаяТаблица.Добавить();
			Строка.Валюта = Справочники.Валюты.ПустаяСсылка();
			Сортировать   = Истина;
		Иначе
			Строка.Остаток = 0;
		КонецЕсли;
		
		Если (ДатаЛиста = ВыборкаИтоговПоДням.Период) Тогда
			Строка.Остаток = ВыборкаИтоговПоДням.СуммаКонечныйОстатокДт - РабочаяТаблица.Итог("Остаток");
			Если Остаток <> ВыборкаИтоговПоДням.СуммаКонечныйОстатокДт Тогда
				Ошибка = Истина;
			КонецЕсли;
			
		Иначе
			Если ПоПроводкам Тогда
				Строка.Остаток = ВыборкаИтоговПоДням.СуммаНачальныйОстатокДт - РабочаяТаблица.Итог("Остаток");
				Если Остаток <> ВыборкаИтоговПоДням.СуммаНачальныйОстатокДт Тогда
					Ошибка = Истина;
				КонецЕсли;
			Иначе
				Строка.Остаток = -РабочаяТаблица.Итог("Остаток");
				Если Остаток <> 0 Тогда
					Ошибка = Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если Ошибка Тогда
			Сообщить("Обороты по документам и проводкам за " + ДатаЛиста + " не совпадают!");
		КонецЕсли;
		
		Если Сортировать Тогда
			РабочаяТаблица.Сортировать("Валюта");
		КонецЕсли;
		РабочаяТаблица.ЗаполнитьЗначения(0,"ВалПриход, Приход, ВалРасход, Расход");
		
		Если ПоПроводкам И ДатаЛиста = ВыборкаИтоговПоДням.Период Тогда
			ПоПроводкам = ВыборкаИтоговПоДням.Следующий();
		КонецЕсли;
		Если ПоДокументам И ДатаЛиста = ВыборкаДокументовПоДням.День Тогда
			ПоДокументам = ВыборкаДокументовПоДням.Следующий();
		КонецЕсли;
		
		// Если лист последний в текущем месяце, то выведем количество листов
		Если МассивПоследнихДней.Найти(ДатаЛиста) <> Неопределено Тогда
			ОбластьЛистовЗаМесяцОтчет.Параметры.НадписьЛистовЗаМесяц = "Количество листов кассовой книги за месяц: " + ЛистовЗаМесяц;
			ДокументРезультат.Вывести(ОбластьЛистовЗаМесяцОтчет);
			ДокументРезультат.Присоединить(ОбластьЛистовЗаМесяцОтчет);
			ЛистовЗаМесяц = 0;
		КонецЕсли;
		
		Если ПоПроводкам 
			И (ВыборкаИтоговПоДням.Период = НачалоДня(ДатаКон))
			И (ВыборкаИтоговПоДням.СуммаОборотДт = 0)
			И (ВыборкаИтоговПоДням.СуммаОборотКт = 0) Тогда
			
			ПоПроводкам = ВыборкаИтоговПоДням.Следующий();
			
		КонецЕсли;
		
		Если ПоПроводкам или ПоДокументам Тогда
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ВывестиПодвал = Истина;
		
		Отбор = Новый Структура;
		Отбор.Вставить("Организация", Организация);
		// {ОбособленныеПодразделения
		Отбор.Вставить("ПодразделениеОрганизации", ПодразделениеОрганизации);
		// }ОбособленныеПодразделения
		
		ТекНомера = РегистрыСведений.НомераЛистовКассовойКниги.СрезПоследних(ДатаЛиста, Отбор);
	
		Если ТекНомера.Количество() = 0 ИЛИ ТекНомера[0].НомерЛиста <> НомерЛиста Тогда
			
			Номера = РегистрыСведений.НомераЛистовКассовойКниги.СоздатьНаборЗаписей();
			
			Номера.Отбор.Организация.Установить(Организация);
			// {ОбособленныеПодразделения
			Номера.Отбор.ПодразделениеОрганизации.Установить(ПодразделениеОрганизации); 
			// }ОбособленныеПодразделения
			Номера.Отбор.Период.Значение 			= ДатаЛиста; 
			Номера.Отбор.Период.Использование 		= Истина; 
		
			НоваяЗапись = Номера.Добавить();
			
			НоваяЗапись.Организация = Организация;
			// {ОбособленныеПодразделения
			НоваяЗапись.ПодразделениеОрганизации = ПодразделениеОрганизации;
			// }ОбособленныеПодразделения
			НоваяЗапись.Период      = ДатаЛиста;
			НоваяЗапись.НомерЛиста  = НомерЛиста;
			
			Номера.Записать();
			
		КонецЕсли;
		
	КонецЦикла;

	Если ВывестиПодвал Тогда
		
		Д = ДатаКон;
		
		Если (ПоследнийЛист > 0) И (ЛистовЗаМесяц > 0) Тогда
			
			ОбластьЛистовЗаМесяцОтчет.Параметры.НадписьЛистовЗаМесяц = "Количество листов кассовой книги за месяц: " + ЛистовЗаМесяц; 
			ДокументРезультат.Вывести(ОбластьЛистовЗаМесяцОтчет);
			ДокументРезультат.Присоединить(ОбластьЛистовЗаМесяцОтчет);
			
		КонецЕсли;
		
		Если ПоследнийЛист = 2 Тогда
			
			Если ЛистовЗаГод > 0 Тогда
			
				ОбластьЛистовЗаГодОтчет.Параметры.НадписьЛистовЗаГод = "Количество листов кассовой книги за год: " + ЛистовЗаГод;
				ДокументРезультат.Вывести(ОбластьЛистовЗаГодОтчет);
				ДокументРезультат.Присоединить(ОбластьЛистовЗаГодОтчет); 
				
			КонецЕсли;
			
			// Печать обложки и титульного листа
			
			Т1     = Новый ТабличныйДокумент;
			Макет1 = ПолучитьМакет("Обложка");
			ОбластьОбложка = Макет1.ПолучитьОбласть("Обложка");
			СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация);
			НазваниеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм");
			ОбластьОбложка.Параметры.НазваниеОрганизации = НазваниеОрганизации;
			ОбластьОбложка.Параметры.НадписьОбложка = " на "+Формат(ДатаЛиста, "ДФ=yyyy") + " г.";
			ОбластьОбложка.Параметры.КодОКПО = СведенияОбОрганизации.КодПоОКПО;	
			Т1.Вывести(ОбластьОбложка);
	    	Т1.ВывестиГоризонтальныйРазделительСтраниц();
	    	Т1.Вывести(ОбластьОбложка);
            // Последний лист кассовой книги
			Т1.ВывестиГоризонтальныйРазделительСтраниц();
			ОбластьПослДеньГода = Макет1.ПолучитьОбласть("ПослДеньГода");
			
			Руководители = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Организация, КонецДня(ДатаКон),);
						
			ОбластьПослДеньГода.Параметры.ГлБухгалтер           = Руководители.ГлавныйБухгалтер;
			ОбластьПослДеньГода.Параметры.Руководитель          = Руководители.Руководитель;
			ОбластьПослДеньГода.Параметры.РуководительДолжность = Руководители.РуководительДолжность;
			ОбластьПослДеньГода.Параметры.ЛистовЗаГод           = ЛистовЗаГод;
			Т1.Вывести(ОбластьПослДеньГода);
			Т1.ОтображатьСетку     = Ложь;
			Т1.ОтображатьЗаголовки = Ложь;
			
			Т1.Показать("Обложка и титульный лист кассовой книги","");
			
		КонецЕсли;
		
	КонецЕсли;         

	ДокументРезультат.ТолькоПросмотр = Истина;
			
КонецПроцедуры // СформироватьРезультат()

НП = Новый НастройкаПериода;

мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();

#КонецЕсли

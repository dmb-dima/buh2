////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Процедура ОбновитьОтчет() Экспорт
	
	НеЗаполнятьНастройкиПриОткрытии = Не Открыта();
	
	СформироватьОтчет(ЭлементыФормы.ДокументРезультат);
	
	ТекущийЭлемент = ЭлементыФормы.ДокументРезультат;
	
КонецПроцедуры // ОбновитьОтчет()

Процедура УправлениеДоступностьюЭлементовФормы()

	// {ОбособленныеПодразделения
	ЭлементыФормы.ПодразделениеОрганизации.Доступность               = ФормироватьПоПодразделению;
	ЭлементыФормы.ПодразделениеОрганизации.АвтоОтметкаНезаполненного = ФормироватьПоПодразделению;
	ЭлементыФормы.ПодразделениеОрганизации.АвтоВыборНезаполненного   = ФормироватьПоПодразделению;
	Если НЕ ФормироватьПоПодразделению Тогда
		ЭлементыФормы.ПодразделениеОрганизации.ОтметкаНезаполненного = Ложь;
	КонецЕсли;
	// }ОбособленныеПодразделения

КонецПроцедуры // УправлениеДоступностьюЭлементовФормы()

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "При открытии" формы отчета.
//
Процедура ПриОткрытии()

	Если Не НеЗаполнятьНастройкиПриОткрытии Тогда 
		Организация = глЗначениеПеременной("ОсновнаяОрганизация");
	КонецЕсли;
	
	Если НЕ НеЗаполнятьНастройкиПриОткрытии Тогда
		
		ДатаНач = НачалоДня(РабочаяДата);
		ДатаКон = КонецДня(РабочаяДата);
		
		Если ТипЗнч(СохраняемыеРеквизиты) = Тип("Структура") Тогда 
			СохраняемыеРеквизиты.Свойство("Организация", Организация);	
			СохраняемыеРеквизиты.Свойство("ПересчитатьНомера", ПересчитатьНомера);
			СохраняемыеРеквизиты.Свойство("ВыводитьОснования", ВыводитьОснования);
			// {ОбособленныеПодразделения
			СохраняемыеРеквизиты.Свойство("ФормироватьПоПодразделению", ФормироватьПоПодразделению);			
			// }ОбособленныеПодразделения 
		КонецЕсли;
		
	КонецЕсли;
	
	НеЗаполнятьНастройкиПриОткрытии = Ложь;
	
	УправлениеДоступностьюЭлементовФормы();
	
КонецПроцедуры // ПриОткрытии()

Процедура ПередСохранениемЗначений(Отказ)
	
	СохраняемыеРеквизиты = Новый Структура;

	СохраняемыеРеквизиты.Вставить("Организация", Организация);	
	СохраняемыеРеквизиты.Вставить("ПересчитатьНомера", ПересчитатьНомера);
	СохраняемыеРеквизиты.Вставить("ВыводитьОснования", ВыводитьОснования);
	// {ОбособленныеПодразделения
	СохраняемыеРеквизиты.Вставить("ФормироватьПоПодразделению", ФормироватьПоПодразделению);
	// }ОбособленныеПодразделения 
	
КонецПроцедуры

Процедура ПослеВосстановленияЗначений()
			
	// Если настройка восстанавливается, когда открывается форма сформированного отчета, игнорируем
	Если НеЗаполнятьНастройкиПриОткрытии Тогда
		Возврат;
	КонецЕсли;
	
	// Тип восстановленного значения должен быть Структура
	Если НЕ ТипЗнч(СохраняемыеРеквизиты) = Тип("Структура") Тогда 
		Возврат;
	КонецЕсли;
	
	СохраняемыеРеквизиты.Свойство("Организация", Организация);	
	СохраняемыеРеквизиты.Свойство("ПересчитатьНомера", ПересчитатьНомера);
	СохраняемыеРеквизиты.Свойство("ВыводитьОснования", ВыводитьОснования);
	// {ОбособленныеПодразделения
	СохраняемыеРеквизиты.Свойство("ФормироватьПоПодразделению", ФормироватьПоПодразделению);
	// }ОбособленныеПодразделения 

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ КОМАНДНЫХ ПАНЕЛЕЙ

// Процедура-обработчик события нажатия кнопки "Сформировать"
Процедура ДействияФормыСформировать(Кнопка)
	
	ОбновитьОтчет();
	
КонецПроцедуры
  
Процедура КнопкаНастройкаПериодаНажатие(Элемент)
	
	Если НП.Редактировать() Тогда
		
		ДатаНач = НП.ПолучитьДатуНачала();
		ДатаКон = НП.ПолучитьДатуОкончания();
		
		Если КонецДня(ДатаКон) = КонецГода(ДатаКон) Тогда
			ПоследнийЛист = 2;
		ИначеЕсли КонецДня(ДатаКон) = КонецМесяца(ДатаКон) Тогда
			ПоследнийЛист = 1;
		Иначе
			ПоследнийЛист = 0;
		КонецЕсли;
		
		УправлениеДоступностьюЭлементовФормы();
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ДИАЛОГА

Процедура ДатаКонПриИзменении(Элемент)
	
	Если КонецДня(ДатаКон) = КонецГода(ДатаКон) Тогда
		ПоследнийЛист = 2;
	ИначеЕсли КонецДня(ДатаКон) = КонецМесяца(ДатаКон) Тогда
		ПоследнийЛист = 1;
	Иначе
		ПоследнийЛист = 0;
	КонецЕсли;
	
	УправлениеДоступностьюЭлементовФормы();
	
КонецПроцедуры

Процедура ДатаНачПриИзменении(Элемент)
	
	УправлениеДоступностьюЭлементовФормы();
	
КонецПроцедуры

// {ОбособленныеПодразделения

Процедура ОрганизацияПриИзменении(Элемент)
	
	Если ПодразделениеОрганизации.Владелец <> Организация Тогда
		ПодразделениеОрганизации = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

Процедура ФормироватьПоПодразделениюПриИзменении(Элемент)
	
	Если НЕ ФормироватьПоПодразделению Тогда
		ПодразделениеОрганизации = Неопределено;
	КонецЕсли;
	
	УправлениеДоступностьюЭлементовФормы();
	
КонецПроцедуры

// }ОбособленныеПодразделения

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ


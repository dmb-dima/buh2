////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

// поле табличного документа
Перем мБаланс;
Перем мФормаОтчета;

// переменный для хранения бухгалтерских итогов
Перем мБухИтоги, мБухИтогиРС;

// хранят имена многострочных разделов
//Перем мИдГруппы1;

// хранит форматную строку представления
// денежных показателей отчета
Перем мСтрокаФормата;

// хранят структуру многострочных разделов
Перем мСтруктураМногострочныхРазделов Экспорт;
Перем мСтруктураИсхКолвоСтрокРазделов;

// Хранит дерево значений - список
// выводимых на печать страниц
Перем мДеревоВыбранныхСтраниц Экспорт;

Перем мПечатаемыеРазделы Экспорт;

// хранит коллекцию цветов раскраски автоматически
// заполняемых ячеек табличного документа
Перем мСтруктураЦветовРаскраски Экспорт;

// хранит значение делителя при представлении
// чисел в назначенной размерности
Перем мДелитель;

Перем мСвойстваРазделовДекларации Экспорт;

// хранит версию формы отчета
Перем мВерсияФормы Экспорт;

Перем ТаблицаСообщений Экспорт;

Перем мПечатныеФормы Экспорт;

Перем СпП Экспорт;

Перем мСохранятьРасшифровку Экспорт;

Перем мВПрограммеИзмененаОрганизация;

Перем мБезКонсолидации Экспорт;

// Переменная ссылка на справочник "Организации" для подставки в процедуре _ДобавитьСтрокуРасшифровки.
// Расшифровка для организации ОргРасшифровка. Через параметр в процедуру _ДобавитьСтрокуРасшифровки. не передается,
// т.к. слишком много уже имеется параметров, тяжело контролировать.
// Может принимать значение Неопределено, в этом случае в механизмах расшифровки будет браться организация из реквизита объекта отчета.
Перем мОргРасшифровка Экспорт;

// Переменная используется для хранения показателей в режиме сбора отчета за несколько организаций.
// Предстовляет собой таблицу значений. Наполнение происходит в процедуре УстановитьЗначениеПоказателя,
// в том случае, если отчет формируется за несколько организаций.
Перем мТаблицаИтоговыхПоказателейПриКонсолидации;

// Хранит тип выбранного адреса при перевыборе адреса на форме отчета. По умолчанию, при открытии всегда равняется "ПолныйАдрПочт"
Перем мТипАдреса;

// Хранит адрес в формате "9запятых".
Перем мАдресДляВыгрузки;

Перем ИмяМакетаССоставомПоказателей;

Перем мБезОткрытияФормы Экспорт;
Перем мРежимПечати Экспорт;

Перем мДанныеОтчета Экспорт;
Перем ИменаПоказателейСоЗнакомПлюс;

// заголовок колонки с данными на конец отчетного периода - для использования в расшифровке
Перем ЗаголовокДатаОтчетная;

// заголовок колонки с данными на конец прошлого года - для использования в расшифровке
Перем ЗаголовокДатаКонцаПрошлогоГода;

// заголовок колонки с данными на конец года, предшествующего прошлому, - для использования в расшифровке
Перем ЗаголовокДатаКонцаПозапрошлогоГода;

Перем ЗаголовокДатаОтчетногоПериода;
Перем ЗаголовокДатаОтчетногоПериодаПрошлогоГода;

// хранят период и год загруженных из 1.6. данных
Перем ПериодЗагрузкиДанных;
Перем ОтчетныйГодЗагрузкиДанных;
Перем ЗаполнятьГодПредыдущий;
Перем ЗаполнятьГодПредшествующийПредыдущему;

Перем ЭтоБалансДляАУ;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Функция вычисляет конечный остаток по дебету счета, указанного в качестве 
// параметра функции. Бухгалтерские итоги должны быть предварительно рассчитаны
// процедурой РассчитатьИтоги() обработки БухгалтерскиеИтоги.
//
// Параметры:
//  Счет         - значение типа ПланСчетов - счет, для которого требуется
//                 получить итог.
//
// Возвращаемое значение:
//  Число        - конечный остаток по дебету счета, указанного в параметре.
//
Функция СКД(Счет)

	Перем Итог;

	Итог = мБухИтоги.ПолучитьИтог("СуммаКонечныйОстатокДт", "Счет", Счет);

	Возврат Итог;

КонецФункции // СКД()

// Функция вычисляет конечный остаток по кредиту счета, указанного в качестве 
// параметра функции. Бухгалтерские итоги должны быть предварительно рассчитаны
// процедурой РассчитатьИтоги() обработки БухгалтерскиеИтоги.
//
// Параметры:
//  Счет         - значение типа ПланСчетов - счет, для которого требуется
//                 получить итог.
//
// Возвращаемое значение:
//  Число        - сумма конечного остатка по кредиту указаного счета.
//
Функция СКК(Счет)

	Перем Итог;

	Итог = мБухИтоги.ПолучитьИтог("СуммаКонечныйОстатокКт", "Счет", Счет);

	Возврат Итог;

КонецФункции // СКК()

// Функция вычисляет конечный остаток счета, указанного в качестве параметра 
// функции, развернутый по дебету субсчетов счета. Бухгалтерские итоги должны 
// быть предварительно рассчитаны процедурой  РассчитатьИтоги() обработки 
// БухгалтерскиеИтоги.
//
// Параметры:
//  Счет         - значение типа ПланСчетов - счет, для которого требуется
//                 получить итог.
//
// Возвращаемое значение:
//  Число        - сумма конечного остатка, развернутого по субсчетам 
//                 указанного счета.
//
Функция СКДР(Счет)

	Перем Итог;

	Итог = мБухИтоги.ПолучитьИтог("СуммаКонечныйРазвернутыйОстатокДт", "Счет", Счет);

	Возврат Итог;

КонецФункции // СКДР()

// Функция вычисляет конечный остаток счета, указанного в качестве параметра 
// функции, развернутый по кредиту субсчетов счета. Бухгалтерские итоги должны 
// быть предварительно рассчитаны процедурой  РассчитатьИтоги() обработки 
// БухгалтерскиеИтоги.
//
// Параметры:
//  Счет         - значение типа ПланСчетов - счет, для которого требуется
//                 получить итог.
//
// Возвращаемое значение:
//  Число        - сумма конечного остатка, развернутого по субсчетам 
//                 указанного счета.
//
Функция СККР(Счет)

	Перем Итог;

	Итог = мБухИтоги.ПолучитьИтог("СуммаКонечныйРазвернутыйОстатокКт", "Счет", Счет);

	Возврат Итог;

КонецФункции // СКДР()

Функция ДО(Счет)

	Перем Итог;

	Итог = мБухИтоги.ПолучитьИтог("СуммаОборотДт", "Счет", Счет);

	Возврат Итог;

КонецФункции // ДО()

Функция КО(Счет)

	Перем Итог;

	Итог = мБухИтоги.ПолучитьИтог("СуммаОборотКт", "Счет", Счет);

	Возврат Итог;

КонецФункции // КО()

// Функция вычисляет перекрестный оборот в дебет счета, указанного в качестве 
// первого параметра функции, с кредита счета, указанного в качестве второго 
// параметра. Бухгалтерские итоги должны быть предварительно рассчитаны
// процедурой РассчитатьИтоги() обработки БухгалтерскиеИтоги.
//
// Параметры:
//  СчетД        - значение типа ПланСчетов - счет, для будет вычисляться 
//                 оборот в дебет счета;
//  СчетК        - значение типа ПланСчетов - счет, для будет вычисляться 
//                 оборот с кредита счета.
//
// Возвращаемое значение:
//  Число        - сумма перекрестного оборота.
//
Функция ОБ(СчетД, СчетК)

	Перем Итог;

	Итог = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотДт", "Счет, КорСчет", СчетД, СчетК);

	Возврат Итог;

КонецФункции // ОБ()

// Функция определяет поле табличного документа формы, содержащее 
// многострочный раздел.по имени ИдГруппы.
//
// Параметры:
//  ИдГруппы - строка, имя многострочного раздела.
//
// Возвращаемое значение:
//  Поле табличного документа.
//
Функция ОпределитьТабличноеПолеПоИдМногострочногоРаздела(ИдГруппы)Экспорт
	Перем ТекТабличноеПоле;

	Возврат ТекТабличноеПоле;

КонецФункции // ОпределитьТабличноеПолеПоИдМногострочногоРаздела()

// Функция определяет многострочный раздел табличного документа
// на активной странице основной панели формы.
//
// Параметры:
//  Нет;
//
// Возвращаемое значение:
//  строка, имя многострочного раздела.
//
Функция ОпределитьИдМногострочногоРазделаПоАктивнойСтранице()Экспорт
	Перем ИмяГруппы;

	Возврат ИмяГруппы;

КонецФункции // ОпределитьИдМногострочногоРазделаПоАктивнойСтранице()

// Функция собирает значения редактирукемых ячеек табличного документа
// в коллекцию значений типа "структура".
//
// Параметры:
//  ТабличноеПоле - поле табличного документа текущей формы.
//
// Возвращаемое значение:
//  Структура.
//
Функция СобратьДанныеТекущегоТаблПоля(ТабличноеПоле) Экспорт

	СтруктураДанныхПоля = Новый Структура;

	Для Инд = 0 По ТабличноеПоле.Области.Количество() - 1 Цикл
		ТекущаяОбласть = ТабличноеПоле.Области[Инд];

		Если Не ТекущаяОбласть.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник Тогда
			Продолжить;
		КонецЕсли;

		Если ТекущаяОбласть.СодержитЗначение <> Истина Тогда
			Продолжить;
		КонецЕсли;

		ИмяПоказателя      = ТекущаяОбласть.Имя;
		ЗначениеПоказателя = ТекущаяОбласть.Значение;
		СтруктураДанныхПоля.Вставить(ИмяПоказателя, ЗначениеПоказателя);

	КонецЦикла;

	Возврат СтруктураДанныхПоля;

КонецФункции // СобратьДанныеТекущегоТаблПоля()


// ПолучитьТаблицуВариантовЗаполнения
// Функция определяет варианты заполнения ячеек табличного документа
// по имени страницы основной панели формы.
//
// Параметры:
//   ИмяСтраницыПанели - строка, имя страницы основной панели формы.
//   ПолучитьЭталонную - булево, если истина, получаем эталонную
//                               (исходную) таблицу вариантов заполнения.
//
// Возвращаемое значение:
//   таблица значений, содержащая информацию о вариантах автозаполнения ячеек.
//
Функция ПолучитьТаблицуВариантовЗаполнения(ИмяСтраницыПанели, ПолучитьЭталонную = Ложь)

	Возврат РегламентированнаяОтчетность.роПолучитьТаблицуВариантовЗаполнения(ЭтаФорма, ИмяСтраницыПанели, ПолучитьЭталонную);

КонецФункции // ПолучитьТаблицуВариантовЗаполнения()

// Обновляет пользовательские настройки по вариантам заполнения
// показателей отчета в случае изменения версии формы отчета.
//
// Возвращаемое значение:
//   Булево - признак модифицированность пользовательских настроек.
//
Функция ОбновитьВариантыЗаполнения()
	Перем МассивВариантовЗаполненияСтраниц;

	ЕстьИзменения = Ложь;

	// Подлежат обновлению следующие структуры:
	// 1.Пользовательские настройки вариантов заполнения таблиц

	// Сначала создадим эталонные модели вариантов автозаполнения таблиц.
	// Их определяем по макету СоставПоказателей
	МакетСоставаПоказателей = ЭтотОбъект.ПолучитьМакет(ИмяМакетаССоставомПоказателей);

	ОписаниеТиповСтрока15  = ОбщегоНазначения.ПолучитьОписаниеТиповСтроки(15);

	ОписаниеТиповСтрока100 = ОбщегоНазначения.ПолучитьОписаниеТиповСтроки(100);
	
	ОписаниеТиповСтрока50 = ОбщегоНазначения.ПолучитьОписаниеТиповСтроки(50);

	ОписаниеТиповЧисло1    = ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(1);

	ОписаниеТиповЧисло15   = ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15,2);

	ЕстьИзменения = Ложь;

	Для Инд = 0 По МакетСоставаПоказателей.Области.Количество() - 1 Цикл
		// организован цикл по именованным областям макета,
		// содержащим состав показателей и варианты автозаполнения
		// таблиц на каждой странице основной панели формы.

		ТекОбласть  = МакетСоставаПоказателей.Области[Инд];
		ИмяСтраницы = ТекОбласть.Имя;

		// Таблица значений содержит информацию о вариантах заполнения показателя отчета.
		// В колонках таблицы значений отображается следующая информация:
		//   - имя ячейки (код показателя);
		//   - вариант заполнения ячейки;
		//   - вычисленное по данным ИБ значение ячейки;
		//   - величина автокорректировки значения ячейки;
		//   - примечание к ячейке.
		//
		ТаблицаВариантыЗаполнения = Новый ТаблицаЗначений;
		ТаблицаВариантыЗаполнения.Колонки.Добавить( "КодПоказателя",     ОписаниеТиповСтрока15  );
		ТаблицаВариантыЗаполнения.Колонки.Добавить( "ВариантЗаполнения", ОписаниеТиповЧисло1    );
		ТаблицаВариантыЗаполнения.Колонки.Добавить( "ЗначениеАвто",      ОписаниеТиповЧисло15   );
		ТаблицаВариантыЗаполнения.Колонки.Добавить( "Дельта",            ОписаниеТиповЧисло15   );
		ТаблицаВариантыЗаполнения.Колонки.Добавить( "Комментарий",       ОписаниеТиповСтрока100 );
        ТаблицаВариантыЗаполнения.Колонки.Добавить( "КодПоказателяПоСтруктуре",       ОписаниеТиповСтрока50 ); 
		
		Для Ном = ТекОбласть.Верх По ТекОбласть.Низ Цикл
			// перебираем строки макета

			// Код показателя (по составу показателей) определяется по первой колонке макета
			КодПоказателя = СокрП(МакетСоставаПоказателей.Область(Ном, 1).Текст);
			ИмяПоказателя = КодПоказателя;

			Если КодПоказателя = "===" Тогда         // признак конечной строки
				Прервать;
			КонецЕсли;

			Если Лев(КодПоказателя, 2) = "//" Тогда  // пропускаем комментарии
				Продолжить;
			КонецЕсли;

			// код показателя по форме отчете (имя ячейки в полях табличного документа формы)
			КодПоказателяПоФорме = СокрЛП(МакетСоставаПоказателей.Область(Ном, 2).Текст);
			// вариант заполнения ячейки определяется по колонке 6 макета
			стрВариантЗаполнения = РегламентированнаяОтчетность.ПолучитьВариантЗаполненияПоказателяРегОтчета(МакетСоставаПоказателей, Ном);

			чВариантЗаполнения   = ? (ПустаяСтрока(стрВариантЗаполнения), 0, Число(стрВариантЗаполнения));
			Если чВариантЗаполнения <> 0 Тогда
				// Если в колонке 6 задан варианет заполнения показателя, 
				// то его значение может определяться по данным ИБ.
				// Дополняем таблицу значений вариантов заполнения
				НоваяСтрока = ТаблицаВариантыЗаполнения.Добавить();
				НоваяСтрока.КодПоказателя      = ? (Не ПустаяСтрока(КодПоказателяПоФорме), КодПоказателяПоФорме, КодПоказателя);
				НоваяСтрока.ВариантЗаполнения  = чВариантЗаполнения;
			КонецЕсли;

		КонецЦикла;

		Если Не мСтруктураВариантыЗаполнения.Свойство(ИмяСтраницы, МассивВариантовЗаполненияСтраниц) Тогда
			Если ТаблицаВариантыЗаполнения.Количество() > 0 Тогда
				// Рассмотрим вариант, когда в предыдущей версии формы по данной странице
				// не было предусмотрено автозаполнение по данным ИБ.
				// Добавим такую возможность в пользовательскую настройку

				// Для обеспечения назначения разных вариантов заполнения одного и того же показателя
				// на разных страницах, создаем массив, хранящий информацию о вариантах заполнения
				// таблиц по каждой странице многостраничного раздела.
				МассивВариантовЗаполненияСтраниц = Новый Массив;
				// Первым элементом массива является "эталонная" таблица значений вариантов заполнения
				МассивВариантовЗаполненияСтраниц.Добавить(ТаблицаВариантыЗаполнения);

				// сохраняем варианты заполнения таблиц на данной странице
				мСтруктураВариантыЗаполнения.Вставить(ИмяСтраницы, МассивВариантовЗаполненияСтраниц);

				ЕстьИзменения = Истина;
			КонецЕсли;
		Иначе
			Если ТаблицаВариантыЗаполнения.Количество() = 0 Тогда
				// Рассмотрим вариант, когда в предыдущей версии формы по данной странице
				// было предусмотрено автозаполнение таблицы, а в текущей версии - отключено.
				// В этом случае из структуры вариантов автозаполнения удаляем элемент,
				// хранящий настройки вариантов автозаполнения текущей станицы.
				мСтруктураВариантыЗаполнения.Удалить(ИмяСтраницы);

				ЕстьИзменения = Истина;
			Иначе
				// Рассмотрим вариант, когда и в предыдущей, и в текущей версии формы было предусмотрено
				// автозаполнение текущей страницы. В этом случае обновляем таблицу значений, содержащей
				// пользовательские настройки вариантов автозаполнения текущей страницы.

				Для каждого ЭлементМассива Из МассивВариантовЗаполненияСтраниц Цикл
					Для каждого СтрокаТаблицы Из ТаблицаВариантыЗаполнения Цикл
						КодПоказателя     = СтрокаТаблицы.КодПоказателя;
						ВариантЗаполнения = СтрокаТаблицы.ВариантЗаполнения;

						Если ЭлементМассива.Найти(КодПоказателя, "КодПоказателя") = Неопределено Тогда
							// Рассмотри вариант, когда в новой версии формы список реквизитов,
							// заполняемых автоматически по данным ИБ, дополнен новым реквизитом.
							НоваяСтрока = ЭлементМассива.Добавить();
							НоваяСтрока.КодПоказателя     = КодПоказателя;
							НоваяСтрока.ВариантЗаполнения = ВариантЗаполнения;

							ЕстьИзменения = Истина;
						КонецЕсли;
					КонецЦикла;

					ТаблДляЦикла = ЭлементМассива.Скопировать();
					//Для каждого СтрокаТаблицы Из ЭлементМассива Цикл
					Для каждого СтрокаТаблицы Из ТаблДляЦикла Цикл
						КодПоказателя = СтрокаТаблицы.КодПоказателя;

						Если ТаблицаВариантыЗаполнения.Найти(КодПоказателя, "КодПоказателя") = Неопределено Тогда
							// Рассмотрим вариант, когда в предыдущей версии отчета для данной страницы
							// было предусмотрено автозаполнение ячейки по коду КодПоказателя,
							// а в текущей версии - отключено. В этом случае удаляем эту ячейку
							// из таблицы пользовательских настроек вариантов автозаполнения.
							СтрокаВЭлементеМассива = ЭлементМассива.Найти(КодПоказателя, "КодПоказателя");
							Если  СтрокаВЭлементеМассива <> Неопределено Тогда
								ЭлементМассива.Удалить(СтрокаВЭлементеМассива);
								ЕстьИзменения = Истина;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;

	КонецЦикла;

	Возврат ЕстьИзменения;

КонецФункции // ОбновитьВариантыЗаполнения()

// Обновляет параметры автозаполнения текущей ячейки табличного
// документа при их изменении. Вычисляет дельту - разницу между
// введенным вручную и автоматически рассчитанным  значениями.
//
Процедура ОбновитьПараметрыАвтозаполненияЯчейки()

	ТекущаяСтраницаПанели     = ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница;
	ИмяТекущейСтраницыПанели  = ТекущаяСтраницаПанели.Имя;

	ТаблицаВариантыЗаполнения = ПолучитьТаблицуВариантовЗаполнения(ИмяТекущейСтраницыПанели);
	Если ТаблицаВариантыЗаполнения = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ИмяТекТабличногоПоля = "ПолеТабличногоДокумента" + ИмяТекущейСтраницыПанели;
	ТекТабличноеПоле     = ЭлементыФормы[ИмяТекТабличногоПоля];
	ТекущаяОбласть       = ТекТабличноеПоле.ТекущаяОбласть;
	ИмяПоказателя        = ТекущаяОбласть.Имя;

	НайденнаяСтрока = ТаблицаВариантыЗаполнения.Найти(ИмяПоказателя, "КодПоказателя");

	Если Не НайденнаяСтрока = Неопределено Тогда
		ВариантЗаполнения = НайденнаяСтрока.ВариантЗаполнения;

		Если ВариантЗаполнения = 2 Тогда
			Если РегламентированнаяОтчетность.роЯвляетсяЧислом(ТекущаяОбласть.Значение) Тогда
				Дельта = ТекущаяОбласть.Значение - НайденнаяСтрока.ЗначениеАвто;
			Иначе
				Дельта = 0;
			КонецЕсли;

			НайденнаяСтрока.Дельта = Дельта;
			ЭлементыФормы["ПолеВводаЗначениеКорректировки" + ИмяТекущейСтраницыПанели].Значение = Дельта;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры // ОбновитьПараметрыАвтозаполненияЯчейки()

// Процедура отображает параметры автозаполнения ячейки в соответствующих элементах
// текущей страницы формы и, в зависимости от параметров, управляет доступностью 
// элементов .формы.
//
// Параметры:
//  Текущая ячейка - область ячеек табличного документа, по которой необходимо
//                   отобразить параметры автозаполнения.
//
Процедура ВывестиЭлементыВариантаЗаполнения(ТекущаяЯчейка)
	РегламентированнаяОтчетность.роВывестиЭлементыВариантаЗаполнения(ЭтаФорма, ТекущаяЯчейка);
КонецПроцедуры // ВывестиЭлементыВариантаЗаполнения()

// Процедура устанавливает новый вариант заполнения активной ячейки,
// выполняет реорганизацию структуры вариантов заполнения ячеек
// и управляет видимостью элементов формы, отображающих параметры
// автозаполнения активной ячейки.
//
// Параметры:
//    НовыйВариант - число, соттветствует варианту заполнения ячейки.
//                   Может принимать значение:
//                       1 - не заполнять автоматически;
//                       2 - заполнять автоматически с корректировкой;
//                       3 - заполнять автоматически без корректировки.
//
Процедура ИзменитьВариантЗаполненияЯчейки(НовыйВариант)

	ТекущаяСтраницаПанели     = ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница;
	ИмяТекущейСтраницыПанели  = ТекущаяСтраницаПанели.Имя;

	ТаблицаВариантыЗаполнения = ПолучитьТаблицуВариантовЗаполнения(ИмяТекущейСтраницыПанели);
	Если ТаблицаВариантыЗаполнения = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ТекущаяОбласть  = ЭлементыФормы["ПолеТабличногоДокумента" + ИмяТекущейСтраницыПанели].ТекущаяОбласть;
	ИмяПоказателя   = ТекущаяОбласть.Имя;

	НайденнаяСтрока = ТаблицаВариантыЗаполнения.Найти(ИмяПоказателя, "КодПоказателя");
	Если НайденнаяСтрока <> Неопределено Тогда
		НайденнаяСтрока.ВариантЗаполнения = НовыйВариант;
	КонецЕсли;

	Если НовыйВариант = 1 Тогда

		НайденнаяСтрока.Дельта = 0;
		ЭлементыФормы["ПолеВводаЗначениеКорректировки" + ИмяТекущейСтраницыПанели].Значение = 0;

	ИначеЕсли НовыйВариант = 2 Тогда

		Если (ТекущаяОбласть.Значение = 0) И (НайденнаяСтрока.Дельта = 0) Тогда
			ТекущаяОбласть.Значение = НайденнаяСтрока.ЗначениеАвто;
			Расчет();
		КонецЕсли;

		Дельта = ТекущаяОбласть.Значение - НайденнаяСтрока.ЗначениеАвто;

		НайденнаяСтрока.Дельта                                = Дельта;
		ЭлементыФормы["ПолеВводаЗначениеКорректировки" + ИмяТекущейСтраницыПанели].Значение = Дельта;

	ИначеЕсли НовыйВариант = 3 Тогда

		Если (ТекущаяОбласть.Значение = 0) И (НайденнаяСтрока.Дельта = 0) Тогда
			ТекущаяОбласть.Значение = НайденнаяСтрока.ЗначениеАвто;
		КонецЕсли;

		НайденнаяСтрока.Дельта = 0;
		НайденнаяСтрока.Комментарий = "";

		ЭлементыФормы["ПолеВводаЗначениеКорректировки" + ИмяТекущейСтраницыПанели].Значение = 0;
		ЭлементыФормы["ПолеВводаКомментарий"           + ИмяТекущейСтраницыПанели].Значение = "";
	КонецЕсли;

	УстановитьЦветФонаЯчейки(ИмяПоказателя, НовыйВариант);
	РегламентированнаяОтчетность.роДоступностьЭлементовВариантаЗаполнения(ЭтаФорма, НовыйВариант);

КонецПроцедуры // ИзменитьВариантЗаполненияЯчейки()

// Процедура устанавливает новое значение автокорректировки активной ячейки,
// участвующей в автозаполнении, выполняет реорганизацию структуры вариантов
// заполнения ячеек и пересчитывает значение активной ячейки с учетом назначенной
// автокорректировки.
//
// Параметры:
//   Дельта - число, новое значение автокорректировки активной ячейки.
//
Процедура ИзменитьЗначениеАвтокорректировки(Дельта)

	ТекущаяСтраницаПанели     = ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница;
	ИмяТекущейСтраницыПанели  = ТекущаяСтраницаПанели.Имя;

	ТаблицаВариантыЗаполнения = ПолучитьТаблицуВариантовЗаполнения(ИмяТекущейСтраницыПанели);
	Если ТаблицаВариантыЗаполнения = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ТекущаяОбласть    = ЭлементыФормы["ПолеТабличногоДокумента" + ИмяТекущейСтраницыПанели].ТекущаяОбласть;
	ИмяПоказателя     = ТекущаяОбласть.Имя;

	НайденнаяСтрока   = ТаблицаВариантыЗаполнения.Найти(ИмяПоказателя, "КодПоказателя");
	Если НайденнаяСтрока <> Неопределено Тогда
		НайденнаяСтрока.Дельта = Дельта;
		ТекущаяОбласть.Значение = НайденнаяСтрока.ЗначениеАвто + Дельта;

		Расчет();
	КонецЕсли;
	
КонецПроцедуры // ИзменитьЗначениеАвтокорректировки()

// Процедура устанавливает комментарий по активной ячейки, участвующей в автозаполнении,
// выполняет реорганизацию структуры вариантов заполнения ячеек и устанавливает примечание
// по активной ячейке табличного документа.
//
// Параметры:
//   Комментарий - строка, содержащая примечание по активной ячейке.
//
Процедура ИзменитьКомментарийПоЯчейке(Комментарий1)

	ТекущаяСтраницаПанели     = ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница;
	ИмяТекущейСтраницыПанели  = ТекущаяСтраницаПанели.Имя;

	ТаблицаВариантыЗаполнения = ПолучитьТаблицуВариантовЗаполнения(ИмяТекущейСтраницыПанели);
	Если ТаблицаВариантыЗаполнения = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ТекущаяОбласть  = ЭлементыФормы["ПолеТабличногоДокумента" + ИмяТекущейСтраницыПанели].ТекущаяОбласть;
	ИмяПоказателя   = ТекущаяОбласть.Имя;

	НайденнаяСтрока = ТаблицаВариантыЗаполнения.Найти(ИмяПоказателя, "КодПоказателя");
	Если НайденнаяСтрока <> Неопределено Тогда
		НайденнаяСтрока.Комментарий = Комментарий1;
	КонецЕсли;

	ТекущаяОбласть.Примечание.Текст = Комментарий1;

КонецПроцедуры // ИзменитьКомментарийПоЯчейке()

// Процедура управляет показом в форме периода построения отчета,
//
Процедура ПоказатьПериод()

	// Период в заголовке отчета
	Если Месяц(мДатаКонцаПериодаОтчета) = 1 Тогда 
		СтрПериодОтчета = Формат(мДатаКонцаПериодаОтчета, "ДФ='ММММ гггг'") + " г." ;
	Иначе
		СтрПериодОтчета = "Январь - " + Формат(мДатаКонцаПериодаОтчета, "ДФ='ММММ гггг'") + " г." ;
	КонецЕсли;
	
	ЭтаФорма.Заголовок = " Бухгалтерская отчетность (" + СтрПериодОтчета + ")";
	
	//БАЛАНС
	// Период в заголовке баланса
	мБаланс.Области.ДатаБаланса.Значение = "на " + Формат(мДатаКонцаПериодаОтчета, "ДФ = 'дд ММММ гггг'")+ " г.";
	
	ДатаКонцаПрошлогоГода 		= Дата(Год(мДатаКонцаПериодаОтчета) - 1, 12, 31);
	ДатаКонцаПозапрошлогоГода 	= Дата(Год(мДатаКонцаПериодаОтчета) - 2, 12, 31);
	
	ЗаголовокДатаОтчетная 				= "На " + Формат(мДатаКонцаПериодаОтчета, "ДФ = 'дд ММММ гггг'")+ " г.";
	ЗаголовокДатаКонцаПрошлогоГода 		= "На " + Формат(ДатаКонцаПрошлогоГода, "ДФ = 'дд ММММ гггг'")+ " г.";
	ЗаголовокДатаКонцаПозапрошлогоГода 	= "На " + Формат(ДатаКонцаПозапрошлогоГода, "ДФ = 'дд ММММ гггг'")+ " г.";
	
	мБаланс.Области.ДатаОтчетная.Значение 				= ЗаголовокДатаОтчетная;
	мБаланс.Области.ДатаОтчетная2.Значение 				= ЗаголовокДатаОтчетная;
	мБаланс.Области.ДатаКонцаПрошлогоГода.Значение 		= ЗаголовокДатаКонцаПрошлогоГода;
	мБаланс.Области.ДатаКонцаПрошлогоГода2.Значение 	= ЗаголовокДатаКонцаПрошлогоГода;
	мБаланс.Области.ДатаКонцаПозапрошлогоГода.Значение 	= ЗаголовокДатаКонцаПозапрошлогоГода;
	мБаланс.Области.ДатаКонцаПозапрошлогоГода2.Значение = ЗаголовокДатаКонцаПозапрошлогоГода;
	
	// Период в списке кодов в форме баланса
	мБаланс.Области.ДатаКонцаПериодаОтчетаГод.Значение   = Формат(мДатаКонцаПериодаОтчета, "ДФ = 'гггг'");
	мБаланс.Области.ДатаКонцаПериодаОтчетаМесяц.Значение = Формат(мДатаКонцаПериодаОтчета, "ДФ = 'ММ'");
	мБаланс.Области.ДатаКонцаПериодаОтчетаЧисло.Значение = Формат(мДатаКонцаПериодаОтчета, "ДФ = 'дд'");

	//ОТЧЕТ О ПРИБЫЛЯХ И УБЫТКАХ
	ДатаКонцаПериодаОтчета = ДобавитьМесяц(мДатаКонцаПериодаОтчета, -12);
	
	Если НачалоМесяца(мДатаКонцаПериодаОтчета) = мДатаНачалаПериодаОтчета Тогда
		СтрПериод = Формат(мДатаКонцаПериодаОтчета, "ДФ = 'ММММ гггг'") + "г.";
		СтрПериодПрошлыйГод = Формат(ДатаКонцаПериодаОтчета, "ДФ = 'ММММ гггг'") + "г.";
	Иначе
		СтрПериод = "Январь - " + Формат(мДатаКонцаПериодаОтчета, "ДФ = 'ММММ гггг'") + "г.";
		СтрПериодПрошлыйГод = "Январь - " + Формат(ДатаКонцаПериодаОтчета, "ДФ = 'ММММ гггг'") + "г.";
	КонецЕсли;  

	ПериодОтчета = " за " + СтрПериод;

	// Период в заголовке
	мФормаОтчета.Области.ПериодОтчета.Значение = ПериодОтчета;

	// Период в списке кодов в форме отчета
	мФормаОтчета.Области.ДатаКонцаПериодаОтчетаГод.Значение   = Формат(мДатаКонцаПериодаОтчета, "ДФ = 'гггг'");
	мФормаОтчета.Области.ДатаКонцаПериодаОтчетаМесяц.Значение = Формат(мДатаКонцаПериодаОтчета, "ДФ = 'ММ'");
	мФормаОтчета.Области.ДатаКонцаПериодаОтчетаЧисло.Значение = Формат(мДатаКонцаПериодаОтчета, "ДФ = 'дд'");

	//Заголовки таблиц
	ЗаголовокДатаОтчетногоПериода = "За " + СтрПериод;
	ЗаголовокДатаОтчетногоПериодаПрошлогоГода = "За " + СтрПериодПрошлыйГод;
	
	мФормаОтчета.Области.ДатаОтчетногоПериода.Значение = ЗаголовокДатаОтчетногоПериода;
	мФормаОтчета.Области.ДатаОтчетногоПериода2.Значение = ЗаголовокДатаОтчетногоПериода;
	
	мФормаОтчета.Области.ДатаОтчетногоПериодаПрошлогоГода.Значение = ЗаголовокДатаОтчетногоПериодаПрошлогоГода;
	мФормаОтчета.Области.ДатаОтчетногоПериодаПрошлогоГода2.Значение = ЗаголовокДатаОтчетногоПериодаПрошлогоГода;
КонецПроцедуры // ПоказатьПериод()

// Процедура управляет выводом сведений о выбранной организации
// в соответствующие ячейки табличного документа.
//
Процедура ЗаполнитьСведенияОбОрганизации(ВПрограммеИзмененаДатаПодписи = Ложь)

	Если (Организация  = Неопределено) Или (Организация = ОбщегоНазначения.ПустоеЗначениеТипа("СправочникСсылка.Организации")) Тогда
		Возврат
	КонецЕсли;

	// Составляем список данных, необходимых для вывода в декларацию
	Сведения = Новый СписокЗначений;

	Если НЕ ВПрограммеИзмененаДатаПодписи Тогда
		Сведения.Добавить("", "ИННЮЛ"); // ИНН

		Сведения.Добавить("", "НаимЮЛПол"); // Полное наименование 

		Сведения.Добавить("", "ОКПО");
		Сведения.Добавить("", "ОКВЭД");
		Сведения.Добавить("", "ОснВидДеят");
		Сведения.Добавить("", "ОКОПФ");
		Сведения.Добавить("", "ОКФС");
		Сведения.Добавить("", "ФормСобств");
		Сведения.Добавить("", "КодОКОНХ");

		Сведения.Добавить("", "ОргПравФорм");
		Сведения.Добавить("", мТипАдреса);
		Сведения.Добавить("", "ПолныйАдрЮР");
	КонецЕсли;

	Сведения.Добавить("", "ФИОРук"); // ФИО руководителя

	Сведения.Добавить("", "ФИОБух"); // ФИО бухгалтера


	//В поле "Адрес" указывается:
	//- для организации - место ее государственной регистрации (место нахождения);
	//- для обособленного подразделения - место его нахождения;
	//- для физического лица - полный адрес постоянного места жительства физического лица на основании документа, удостоверяющего его личность, либо иного документа, подтверждающего адрес постоянного места жительства.

	// Теперь получаем данные из глобальной общей функции
	ОргСведения = РегламентированнаяОтчетность.ПолучитьСведенияОбОрганизации(Организация, ДатаПодписи, Сведения);

	Если НЕ ВПрограммеИзмененаДатаПодписи Тогда
		// Инициализируем переменные
		ИННЮЛ = ""; // ИНН

		НаимЮЛПол = ""; // Полное наименование 

		ОКПО = "";
		ОКВЭД = "";

		ПолныйАдрЮР = "";

		ОснВидДеят = "";

		ФормСобств = "";

		ОКОПФ = "";

		ОКФС = "";

		КодОКОНХ = "";

		ОргПравФорм1 = "";

		ПолныйАдрПочт = "";
	КонецЕсли;

	ФИОРук = ""; // ФИО руководителя
	ФИОБух = ""; // ФИО бухгалтера

	Если НЕ ВПрограммеИзмененаДатаПодписи Тогда
		// Получаем данные
		ОргСведения.Свойство("ИННЮЛ", ИННЮЛ);
		ОргСведения.Свойство("НаимЮЛПол", НаимЮЛПол);
		ОргСведения.Свойство("ОКПО", ОКПО);
		ОргСведения.Свойство("ОКВЭД", ОКВЭД);
		ОргСведения.Свойство("ОКОПФ", ОКОПФ);
		ОргСведения.Свойство("ОКФС", ОКФС);
		ОргСведения.Свойство("ОснВидДеят", ОснВидДеят);
		ОргСведения.Свойство("ПолныйАдрЮР", ПолныйАдрЮР);
		ОргСведения.Свойство("ФормСобств", ФормСобств);
		ОргСведения.Свойство("КодОКОНХ", КодОКОНХ);
		ОргСведения.Свойство("ОргПравФорм", ОргПравФорм1);
		ОргСведения.Свойство(мТипАдреса, ПолныйАдрПочт);

	КонецЕсли;

	ОргСведения.Свойство("ФИОРук", ФИОРук);
	ОргСведения.Свойство("ФИОБух", ФИОБух);

	Если ВПрограммеИзмененаДатаПодписи Тогда

		// Обновим только то, что зависит от даты подписи и выйдем
		мБаланс.Области.ОргДиректор.Значение  = ФИОРук;
		мБаланс.Области.ОргБухгалтер.Значение = ФИОБух;

		мФормаОтчета.Области.ОргДиректор.Значение  = ФИОРук;
		мФормаОтчета.Области.ОргБухгалтер.Значение = ФИОБух;
		Возврат;

	КонецЕсли;

	// Анализируем переменную ИННЮЛ, в которой хранится идентификационный
	// номер налогоплательщика, на предмет пустого значения.

	Если РегламентированнаяОтчетность.ПустоеЗначение(ИННЮЛ) Тогда
		ИННЮЛ = "";
	КонецЕсли;

	мИННЮЛ = ИННЮЛ;

	мБаланс.Области.ОргИНН.Значение = мИННЮЛ;
	мФормаОтчета.Области.ОргИНН.Значение = мИННЮЛ;

	// Работаем с названием ЮЛ
	Если (мВПрограммеИзмененаОрганизация) Или (ПустаяСтрока(мБаланс.Области.ОргНазв.Значение)) Тогда
		// Если пустая строка на Титульном листе, то запишем имеющееся у нас значение
		мБаланс.Области.ОргНазв.Значение = НаимЮЛПол;
		мФормаОтчета.Области.ОргНазв.Значение = НаимЮЛПол;
	КонецЕсли;

	// Работаем с ФИО руководителя
	Если (мВПрограммеИзмененаОрганизация) Или (ПустаяСтрока(мБаланс.Области.ОргКодОКПО.Значение)) Тогда

		Если РегламентированнаяОтчетность.ЭтоПБОЮЛ(Организация) Тогда
			мБаланс.Области.ОргКодОКПО.Значение  = "";
			мФормаОтчета.Области.ОргКодОКПО.Значение  = "";
		Иначе
			мБаланс.Области.ОргКодОКПО.Значение  = ОКПО;
			мФормаОтчета.Области.ОргКодОКПО.Значение  = ОКПО;
		КонецЕсли;

	КонецЕсли;

	Если (мВПрограммеИзмененаОрганизация) Или (ПустаяСтрока(мБаланс.Области.ОргКодОКВЭД.Значение)) Тогда
		мБаланс.Области.ОргКодОКВЭД.Значение = ОКВЭД;
		мФормаОтчета.Области.ОргКодОКВЭД.Значение = ОКВЭД;
	КонецЕсли;

	Если (мВПрограммеИзмененаОрганизация) Или (ПустаяСтрока(мБаланс.Области.ОргФорма.Значение)) Тогда
		мБаланс.Области.ОргФорма.Значение = ОргПравФорм1;
		мФормаОтчета.Области.ОргФорма.Значение = ОргПравФорм1;
	КонецЕсли;

	Если (мВПрограммеИзмененаОрганизация) Или (ПустаяСтрока(мБаланс.Области.ОргОтрасль.Значение)) Тогда
		мБаланс.Области.ОргОтрасль.Значение = ОснВидДеят;
		мФормаОтчета.Области.ОргОтрасль.Значение = ОснВидДеят;
	КонецЕсли;

	Если (мВПрограммеИзмененаОрганизация) Или (ПустаяСтрока(мБаланс.Области.ОргКодОКОПФ.Значение)) Тогда
		мБаланс.Области.ОргКодОКОПФ.Значение = ОКОПФ;
		мФормаОтчета.Области.ОргКодОКОПФ.Значение = ОКОПФ;
	КонецЕсли;

	Если (мВПрограммеИзмененаОрганизация) Или (ПустаяСтрока(мБаланс.Области.ОргКодОКФС.Значение)) Тогда
		мБаланс.Области.ОргКодОКФС.Значение = ОКФС;
		мФормаОтчета.Области.ОргКодОКФС.Значение = ОКФС;
	КонецЕсли;

	Если (мВПрограммеИзмененаОрганизация) Или (ПустаяСтрока(мБаланс.Области.ОргФормаСобств.Значение)) Тогда
		мБаланс.Области.ОргФормаСобств.Значение = ФормСобств;
		мФормаОтчета.Области.ОргФормаСобств.Значение = ФормСобств;
	КонецЕсли;

	Если (мВПрограммеИзмененаОрганизация) Или (ПустаяСтрока(мБаланс.Области.ОргПочтАдрес.Значение)) Тогда

		Если НЕ ЗначениеЗаполнено(ПолныйАдрПочт) Тогда
			мБаланс.Области.ОргПочтАдрес.Значение = "";
			ЮридическийАдрес = РегламентированнаяОтчетность.ПолучитьСведенияОбОрганизации(Организация, ДатаПодписи, "ПолныйАдрЮР").ПолныйАдрЮР;
			Если ЗначениеЗаполнено(ЮридическийАдрес) Тогда
				мБаланс.Области.ОргПочтАдрес.Значение = ЮридическийАдрес;
				мТипАдреса = "ПолныйАдрЮР";
				мАдресДляВыгрузки = РегламентированнаяОтчетность.ПолучитьСведенияОбОрганизации(Организация, ДатаПодписи, "АдрЮР").АдрЮР;
			КонецЕсли;
		Иначе
			мБаланс.Области.ОргПочтАдрес.Значение = ПолныйАдрПочт;
			мАдресДляВыгрузки = РегламентированнаяОтчетность.ПолучитьСведенияОбОрганизации(Организация, ДатаПодписи, "АдрПочт").АдрПочт;
		КонецЕсли;
		
	КонецЕсли;

	Если (мВПрограммеИзмененаОрганизация) ИЛИ (ПустаяСтрока(мБаланс.Области.ОргДиректор.Значение)) Тогда
		мБаланс.Области.ОргДиректор.Значение  = ФИОРук;
		мФормаОтчета.Области.ОргДиректор.Значение  = ФИОРук;
	КонецЕсли;
	
	Если (мВПрограммеИзмененаОрганизация) ИЛИ (ПустаяСтрока(мБаланс.Области.ОргБухгалтер.Значение)) Тогда
		мБаланс.Области.ОргБухгалтер.Значение = ФИОБух;
		мФормаОтчета.Области.ОргБухгалтер.Значение = ФИОБух;
	КонецЕсли;

КонецПроцедуры // ЗаполнитьСведенияОбОрганизации

// Процедура контролирует корректность установленной точности указания
// суммовых (денежных) показателей при выборе единицы измерения.
//
Процедура ПроверитьТочность()
	
	Если ЕдиницаИзмерения = Перечисления.ПорядкиОкругленияОтчетности.Окр1 Тогда

		Если ТочностьЕдиницыИзмерения > 2 Тогда
			Сообщить("Баланс: при выводе сумм в рублях точность не может превышать 2 знака", СтатусСообщения.Внимание);
			ТочностьЕдиницыИзмерения = 2;
		КонецЕсли;

	ИначеЕсли ЕдиницаИзмерения = Перечисления.ПорядкиОкругленияОтчетности.Окр1000 Тогда

		Если ТочностьЕдиницыИзмерения > 3 Тогда
			Сообщить("Баланс: при выводе сумм в тысячах рублей точность не может превышать 3 знака", СтатусСообщения.Внимание);
			ТочностьЕдиницыИзмерения = 3;
		КонецЕсли;

	ИначеЕсли ЕдиницаИзмерения = Перечисления.ПорядкиОкругленияОтчетности.Окр1000000 Тогда

		Если ТочностьЕдиницыИзмерения > 6 Тогда
			Сообщить("Баланс: при выводе сумм в миллионах рублей точность не может превышать 6 знаков", СтатусСообщения.Внимание);
			ТочностьЕдиницыИзмерения = 6;
		КонецЕсли;

	КонецЕсли;

КонецПроцедуры // ПроверитьТочность()

// Процедура управляет представлением суммовых (денежных) показателей
// табличного документа при изменении размерности.
//
Процедура УстановитьФорматВывода()
	Перем СтруктураГруппы;

	Если ЕдиницаИзмерения = Перечисления.ПорядкиОкругленияОтчетности.Окр1 Тогда
		мДелитель = 1;
		мСтрокаФормата = "ЧЦ = 15; ЧДЦ = " + ТочностьЕдиницыИзмерения + "; ЧРД=,; ЧН=-; ЧО=0; ЧС = 0";

	ИначеЕсли ЕдиницаИзмерения = Перечисления.ПорядкиОкругленияОтчетности.Окр1000 Тогда
		мДелитель = 1000;
		мСтрокаФормата = "ЧЦ = 15; ЧДЦ = " + ТочностьЕдиницыИзмерения + "; ЧРД=,; ЧН=-; ЧО=0; ЧС = 3";

	ИначеЕсли ЕдиницаИзмерения = Перечисления.ПорядкиОкругленияОтчетности.Окр1000000 Тогда
		мДелитель = 1000000;
		мСтрокаФормата = "ЧЦ = 15; ЧДЦ = " + ТочностьЕдиницыИзмерения + "; ЧРД=,; ЧН=-; ЧО=0; ЧС = 6";

	КонецЕсли;

	ПоказатьКодЕИ();

	Для Каждого СтрПоказатели Из мТаблицаСоставПоказателей Цикл

		ИмяПоляТаблДокумента = СокрП(СтрПоказатели.ИмяПоляТаблДокумента);
		КодПоказателя        = СокрП(СтрПоказатели.КодПоказателяПоСоставу);
		ПризнМногострочность = СокрП(СтрПоказатели.ПризнМногострочности);

		Если КодПоказателя = "===" Тогда
			Прервать;
		КонецЕсли;

		Если (Лев(КодПоказателя, 2) = "//") ИЛИ (КодПоказателя = "###") Тогда
			Продолжить;
		КонецЕсли;

		КодПоказателяВФорме = СокрП(СтрПоказатели.КодПоказателяПоФорме);

		ИмяПоказателя = КодПоказателя;
		Если Не ПустаяСтрока(КодПоказателяВФорме) Тогда
			ИмяПоказателя = КодПоказателяВФорме;
		КонецЕсли;

		ТипДанныхПоказателя = СокрП(СтрПоказатели.ТипДанныхПоказателя);

		Если ТипДанныхПоказателя = "Е" Тогда

			ТекТабличноеПоле = ЭлементыФормы["ПолеТабличногоДокумента" + ИмяПоляТаблДокумента];

			Если ПризнМногострочность <> "/" Тогда
				ФорматируемаяОбласть = ТекТабличноеПоле.Области[ИмяПоказателя];
				ФорматируемаяОбласть.Формат = мСтрокаФормата;
				ФорматируемаяОбласть.ЭлементУправления.КнопкаВыбора = Истина;
			Иначе
				// определяем колво строк многострочного раздела
				// и прменяем процедуру форматирования к данной графе
				// по всем строкам
				ИмяГруппы = Лев(ИмяПоказателя, 11);
				мСтруктураМногострочныхРазделов.Свойство(ИмяГруппы, СтруктураГруппы);

				Для НСтр = 1 По СтруктураГруппы.Количество() Цикл
					ФорматируемаяОбласть = ТекТабличноеПоле.Области[ИмяПоказателя + "_" + Формат(НСтр, "ЧГ=0")];
					ФорматируемаяОбласть.Формат = мСтрокаФормата;
					ФорматируемаяОбласть.ЭлементУправления.КнопкаВыбора = Истина;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры // УстановитьФорматВывода()

// Процедура управляет цветом фона автозаполняемых ячеек при:
//  а) автозаполнении;
//  б) ручном выборе другого варианта заполнения;
//  в) добавлении/удалении и листании дополнительных страниц.
//
// Цвет фона устанавливается в зависимости от варианта заполнения ячейки.
//
// Параметры:
//  ИмяЯчейки                - строка, имя ячейки, для которой устанавливаем цвет фона;
//  ВариантЗаполнения        - число,  вариант заполнения ячейки;
//  ИмяТекущейСтраницыПанели - строка, имя страницы основной панели, на которой для всех автозаполняемых
//                             ячеек табличного документа следует установить цвет фона.
//
Процедура УстановитьЦветФонаЯчейки(ИмяЯчейки = Неопределено, ВариантЗаполнения = Неопределено, ИмяТекущейСтраницыПанели = "")
	
	РегламентированнаяОтчетность.роУстановитьЦветФонаЯчейки(ЭтаФорма, ИмяЯчейки, ВариантЗаполнения, ИмяТекущейСтраницыПанели);

КонецПроцедуры // УстановитьЦветФонаЯчейки()

// Обновляет пользовательские настройки при изменении версии формы.
//
Процедура ОбновитьПользовательскиеНастройки()

	Сообщить("Изменилась версия формы отчета.
	         |Выполняется обновление пользовательских настроек.", СтатусСообщения.Информация);

	// Обновляем варианты заполнения показателей отчета
	ЕстьИзмененияВариантыЗаполнения = ОбновитьВариантыЗаполнения();

	Если ЕстьИзмененияВариантыЗаполнения Тогда
		// Если были изменения в пользовательских настройках,
		// то устанавливаем флаг модифицированности формы.
		Модифицированность = Истина;

		Сообщить("Обновление пользовательских настроек успешно завершено!");

	Иначе

		Сообщить("Изменения в структуре пользовательских настроек не обнаружены!");

	КонецЕсли;

КонецПроцедуры // ОбновитьПользовательскиеНастройки()

// Процедура - обработчик события при смене текущей страницы основной
// панели формы.
//
Процедура ОсновнаяПанельПриСменеСтраницы(Элемент, ТекущаяСтраница) Экспорт
	Перем ТекущаяОбласть;

	РегламентированнаяОтчетность.СформироватьСоставКнопкиОчиститьДляРегОтчетов(ЭтаФорма);

	ИдГруппы = ОпределитьИдМногострочногоРазделаПоАктивнойСтранице();
	Если ИдГруппы <> Неопределено Тогда
		ТекТабличноеПоле = ОпределитьТабличноеПолеПоИдМногострочногоРаздела(ИдГруппы);
		ТекущаяОбласть = ТекТабличноеПоле.ТекущаяОбласть;
	КонецЕсли;

	ИмяТекущейСтраницыПанели = ЭлементыФормы.ОсновнаяПанель.Страницы[ТекущаяСтраница].Имя;

	Если РегламентированнаяОтчетность.роПолучитьСвойствоРаздела(ЭтаФорма, ИмяТекущейСтраницыПанели, "МногостраничностьВРазделе") Тогда

		// управляем показом статика, отображающего номер текущей страницы
		РегламентированнаяОтчетность.роПоказатьСтатикСтраницРаздела(ЭтаФорма, ИмяТекущейСтраницыПанели);
	КонецЕсли;

	Если РегламентированнаяОтчетность.роПолучитьСвойствоРаздела(ЭтаФорма, ИмяТекущейСтраницыПанели, "РазделЯвляетсяАвтозаполняемым") Тогда
		// управляем доступностью и выводом значений в поля отображения варианта заполнения ячеек
		ТекущаяОбласть = ЭлементыФормы["ПолеТабличногоДокумента" + ИмяТекущейСтраницыПанели].ТекущаяОбласть;
		ВывестиЭлементыВариантаЗаполнения(ТекущаяОбласть);
	КонецЕсли;
	
КонецПроцедуры // ОсновнаяПанельПриСменеСтраницы()

// Процедура выводит строки многострочного раздела в табличный документ.
// При отсутствии в табличном документе необходимого количества строк
// добавляет отсутствующие строки.
//
// Параметры:
//  ИмяГруппы       - строка, имя многострочного раздела;
//  СтруктураГруппы - таблица значений, содержащая значения показателей многострочного раздела.
//
Процедура ВывестиРазделВТабличныйДокумент(ИмяГруппы, СтруктураГруппы)
	//Перем ИсходноеКоличествоСтрокГруппы;

	//// определим исходное колво строк многострочного раздела,
	//// соответствующее бумажной форме отчета
	//мСтруктураИсхКолвоСтрокРазделов.Свойство(ИмяГруппы, ИсходноеКоличествоСтрокГруппы);

	//// реальное кол-во строк (колво заполненных строк)
	//ТекущееКоличествоСтрокГруппы = СтруктураГруппы.Количество();

	//ТекТабличноеПоле = мБаланс;

	//// При восстановлении сохраненных данных отчета сравниваем исходное кол-во
	//// отображаемых в форме строк многострочного раздела с реальным количеством
	//// созданных строк в сохраненном отчете.
	//Если ТекущееКоличествоСтрокГруппы > ИсходноеКоличествоСтрокГруппы Тогда

	//	// При превышении реального кол-ва строк над исходным (по шаблону) кол-вом,
	//	// автоматически добавляем необходимое колво строк.
	//	Для НомНовойСтроки = ИсходноеКоличествоСтрокГруппы + 1 По ТекущееКоличествоСтрокГруппы Цикл

	//		НомИсходнойСтроки = НомНовойСтроки - 1;

	//		// определяем имя первой ячейки последней из исходных строк
	//		ИмяПервойЯчейкиПоследнейСтроки = СтруктураГруппы.Колонки[0].Имя + "_" + НомИсходнойСтроки;

	//		// область первой ячейки последней из исходных строк
	//		ОбластьЯчейки = ТекТабличноеПоле.Области[ИмяПервойЯчейкиПоследнейСтроки];

	//		// номера строк исходной области
	//		НомерВерхЯчейкиОбласти = ОбластьЯчейки.Верх;
	//		НомерНижнЯчейкиОбласти = ОбластьЯчейки.Низ;

	//		СдвигСтрок = НомерНижнЯчейкиОбласти - НомерВерхЯчейкиОбласти + 1;

	//		// Строки многострочного раздела должны входят в именованную секцию
	//		// для предотвращения вывода на печать пустых строк.
	//		// Определим именованую секцию, куда входит добавляемая строка.
	//		ИмяПервойЯчейкиПервойСтроки = СтруктураГруппы.Колонки[0].Имя + "_" + 1;
	//		// область первой ячейки первой строки многострочного раздела
	//		ОбластьЯчейки               = ТекТабличноеПоле.Области[ИмяПервойЯчейкиПервойСтроки];
	//		// номер первой строки именованной секции
	//		НомерВерхЯчейкиСекции       = ОбластьЯчейки.Верх;
	//		// область именованной секции
	//		ОбластьИменованСекции       = ТекТабличноеПоле.Область(НомерВерхЯчейкиСекции, , НомерНижнЯчейкиОбласти, );
	//		ИмяСекции                   = ОбластьИменованСекции.Имя;
	//		// предварительно очищаем прежнюю секцию, так как она смещается вниз вместе с добавляемой строкой
	//		ОбластьИменованСекции.Имя   = "";

	//		// номера строк вставляемой области
	//		НомерВерхЯчейкиНовойОбласти = НомерВерхЯчейкиОбласти + СдвигСтрок;
	//		НомерНижнЯчейкиНовойОбласти = НомерНижнЯчейкиОбласти + СдвигСтрок;

	//		// определяем вставляемую область
	//		ВставляемаяОбласть = ТекТабличноеПоле.Область(НомерВерхЯчейкиОбласти, , НомерНижнЯчейкиОбласти, );

	//		// добавляем в таблицу новую строку
	//		ТекТабличноеПоле.ВставитьОбласть(ВставляемаяОбласть, ,ТипСмещенияТабличногоДокумента.ПоВертикали);

	//		// переопределяем имена вставленной области
	//		Для Каждого Колонка Из СтруктураГруппы.Колонки Цикл

	//			ИмяКолонки          = Колонка.Имя;
	//			ИмяОбластиЯчейки    = ИмяКолонки + "_" + НомИсходнойСтроки;
	//			ИмяНовОбластиЯчейки = ИмяКолонки + "_" + НомНовойСтроки;

	//			ОбластьЯчейки = ТекТабличноеПоле.Области[ИмяОбластиЯчейки];
	//			ОбластьЯчейки.Имя = ИмяНовОбластиЯчейки;

	//			// определяем границы ячейки исходной области
	//			НомерВерхСтрокиЯчейки  = ОбластьЯчейки.Верх - СдвигСтрок;
	//			НомерНижнСтрокиЯчейки  = ОбластьЯчейки.Низ  - СдвигСтрок;
	//			НомерЛевоКолонкиЯчейки = ОбластьЯчейки.Лево;
	//			НомерПравКолонкиЯчейки = ОбластьЯчейки.Право;

	//			// Назначаем имя ячейки исходной области,
	//			// (т.к. в результате вставки новой области оно было очищено)
	//			ОбластьЯчейкиИсходнойОбласти = ТекТабличноеПоле.Область(НомерВерхСтрокиЯчейки, НомерЛевоКолонкиЯчейки, НомерНижнСтрокиЯчейки, НомерПравКолонкиЯчейки);
	//			ОбластьЯчейкиИсходнойОбласти.Имя = ИмяОбластиЯчейки;

	//			// очищаем значения ячеек вставленной области
	//			Если ОбластьЯчейки.СодержитЗначение Тогда
	//				ОбластьЯчейки.Очистить();
	//			Иначе
	//				// порядековый номер последней строки перед вставкой
	//				ИсходныйНомер        = Число(ОбластьЯчейки.Текст);
	//				НовыйПорядковыйНомер = ИсходныйНомер + 1;

	//				ОбластьЯчейки.Текст  = Формат(НовыйПорядковыйНомер, "ЧЦ = 3") + ".";
	//			КонецЕсли;

	//		КонецЦикла;

	//		Если Лев(ИмяСекции, 1) = "П" Тогда
	//			// Имеется именованная секция многострочного раздела.
	//			// Добавляем исходную строку в секцию табличного документа с именем ИмяСекции.
	//			ОбластьИменованСекции     = ТекТабличноеПоле.Область(НомерВерхЯчейкиСекции, , НомерНижнЯчейкиНовойОбласти, );
	//			ОбластьИменованСекции.Имя = ИмяСекции;
	//			
	//			// Далее проверим вхождение именованной секции многострочного раздела
	//			// как составляющая часть в другие секции табличного документа.
	//			// В случае обнаржения такого вхождения расширяем обнаруженныую секцию
	//			// до добавленной строки. Данный механизм применяем в силу того, что 
	//			// при добавлении новой строки вышестоящая секция автоматически не
	//			// расширяется, и вместо этого получаем пересекающиеся секции.
	//			Для каждого Секция Из ТекТабличноеПоле.Области Цикл
	//				
	//				Если Секция.ТипОбласти <> ТипОбластиЯчеекТабличногоДокумента.Строки Тогда
	//					Продолжить;
	//				КонецЕсли;
	//				
	//				Если НЕ ((Секция.Верх <= НомерВерхЯчейкиСекции) И (Секция.Низ >= НомерНижнЯчейкиОбласти)) Тогда
	//					Продолжить;
	//				КонецЕсли;
	//				
	//				Если Секция.Низ < НомерНижнЯчейкиНовойОбласти Тогда
	//					// Секция, куда входила именованная секция многострочного раздела
	//					// до добавления строки, подлежит расширению (включению в нее
	//					// добавленной строки).
	//					НомерВерхнейСтрокиСекции = Секция.Верх;
	//					ИмяСекции                = Секция.Имя;
	//					
	//					// удаляем прежнюю секцию, куда входила именованная секция многострочного раздела
	//					Секция.Имя      = "";
	//					// создаем новую секцию, охватывающую добавленную строку
	//					НоваяСекция     = ТекТабличноеПоле.Область(НомерВерхнейСтрокиСекции, , НомерНижнЯчейкиНовойОбласти, );
	//					НоваяСекция.Имя = ИмяСекции;
	//				КонецЕсли;
	//			КонецЦикла;
	//			
	//		КонецЕсли; 

	//	КонецЦикла;
	//КонецЕсли;

	//// выводим значения строк
	//Для Каждого СтрокаТаблицы Из СтруктураГруппы Цикл
	//	Для Каждого КолонкаТаблицы Из СтруктураГруппы.Колонки Цикл

	//		НомерСтрокиВТаблице      = СтруктураГруппы.Индекс(СтрокаТаблицы);
	//		НомерСтрокиВФормеТаблицы = НомерСтрокиВТаблице + 1;
	//		ИмяЯчейки                = КолонкаТаблицы.Имя + "_" + НомерСтрокиВФормеТаблицы;
	//		ОбластьЯчейкиТаблицы     = ТекТабличноеПоле.Области[ИмяЯчейки];
	//		ЗначениеЯчейки           = СтрокаТаблицы[КолонкаТаблицы.Имя];

	//		Если ОбластьЯчейкиТаблицы.СодержитЗначение Тогда
	//			// задаем значение ячейки
	//			ОбластьЯчейкиТаблицы.Значение = ЗначениеЯчейки;

	//		Иначе
	//			// устанавливаем порядковый номер строки
	//			ОбластьЯчейкиТаблицы.Текст    = ЗначениеЯчейки;

	//		КонецЕсли;

	//	КонецЦикла;
	//КонецЦикла;

КонецПроцедуры // ВывестиРазделВТабличныйДокумент()

// Процедура определяет алгоритм автозаполнения редактируемой ячейки по переданному коду
// показателя. Если у ячейки имеется признак автозаполнения, то ее значение формируется
// в соответствии с установленным алгоритмом.
//
// Параметры:
//   ИмяПоказателя      - строка, код показателя (имя ячейки);
//   ЗначениеПоказателя - устанавливаемое значение ячейки.
//   ЗаписьВОтчет       - Булево, Истина, осуществлять запись показателей в отчет, Ложь - ничего не делать.
//                        Необходимо для режима консолидации отчета.
//
Процедура УстановитьЗначениеПоказателя(ИмяПоказателя, Знач ЗначениеПоказателя, ЗаписьВОтчет = Ложь)

	// В случае, отчет заполняется с использованием режима консолидации, тогда анализируем флаг ЗаписьВОтчет и мБезКонсолидации.
	Если (НЕ ЗаписьВОтчет) И (НЕ мБезКонсолидации) Тогда
		// Добавим показатель в таблицу итогового расчета при заполнении отчета за несколько организаций.
		НовСтр = мТаблицаИтоговыхПоказателейПриКонсолидации.Добавить();
		НовСтр.ИмяПоказателя = ИмяПоказателя;
		НовСтр.Сумма = ЗначениеПоказателя;

		Возврат;

	КонецЕсли;

	ИмяСтраницыПанели = РегламентированнаяОтчетность.роОпределитьСтраницуПанелиПоКодуПоказателя(ЭтаФорма, ИмяПоказателя);

	ТаблицаВариантыЗаполнения = ПолучитьТаблицуВариантовЗаполнения(ИмяСтраницыПанели);
	Если Не ТаблицаВариантыЗаполнения = Неопределено Тогда

		НайденнаяСтрока = ТаблицаВариантыЗаполнения.Найти(ИмяПоказателя, "КодПоказателя");
		Если НайденнаяСтрока <> Неопределено Тогда

			ВариантЗаполнения = НайденнаяСтрока.ВариантЗаполнения;

			// В случае, если предлагаемое значение не числовое и второй тип (с корректировкой)
			// тогда принимаем предложенное значение за 0.
			Если (НЕ РегламентированнаяОтчетность.роЯвляетсяЧислом(ЗначениеПоказателя)) И (ВариантЗаполнения = 2) Тогда
				ЗначениеПоказателя = 0;
			КонецЕсли;

			Если РегламентированнаяОтчетность.роЯвляетсяЧислом(ЗначениеПоказателя) Тогда
				НайденнаяСтрока.ЗначениеАвто = ЗначениеПоказателя;
			КонецЕсли;

			Если ВариантЗаполнения = 1 Тогда
				// заполняется только вручную
				Возврат;
			ИначеЕсли ВариантЗаполнения = 2 Тогда
				// автоматически, с возможностью ручной корректировки
				Дельта             = НайденнаяСтрока.Дельта;
				ЗначениеПоказателя = ЗначениеПоказателя + Дельта;
			КонецЕсли;

		КонецЕсли;
	КонецЕсли;

	ЭлементыФормы["ПолеТабличногоДокумента" + ИмяСтраницыПанели].Области[ИмяПоказателя].Значение = ЗначениеПоказателя;

КонецПроцедуры // УстановитьЗначениеПоказателя()

// Процедура очищает содержимое редактируемыхи и вычисляемых ячеек
// поля табличного документа, переданного параметром ВыбТабличноеПоле.
//
// Параметры:
//  ВыбТабличноеПоле - поле табличного документа.
//
Процедура ОчиститьТабличноеПоле(ВыбТабличноеПоле)
	// Список ячеек, очищать которые не нужно
	Перем СписокПоказателейНеПодлежащихОчистке;

	СписокПоказателейНеПодлежащихОчистке = Новый СписокЗначений;
	СписокПоказателейНеПодлежащихОчистке.Добавить("ОргНазв");
	СписокПоказателейНеПодлежащихОчистке.Добавить("ОргКодОКПО");
	СписокПоказателейНеПодлежащихОчистке.Добавить("ОргОтрасль");
	СписокПоказателейНеПодлежащихОчистке.Добавить("ОргКодОКВЭД");
	СписокПоказателейНеПодлежащихОчистке.Добавить("ОргФорма");
	СписокПоказателейНеПодлежащихОчистке.Добавить("ОргКодОКОПФ");
	СписокПоказателейНеПодлежащихОчистке.Добавить("ОргФормаСобств");
	СписокПоказателейНеПодлежащихОчистке.Добавить("ОргКодОКФС");
	СписокПоказателейНеПодлежащихОчистке.Добавить("ОргПочтАдрес");
	СписокПоказателейНеПодлежащихОчистке.Добавить("ОргДиректор");
	СписокПоказателейНеПодлежащихОчистке.Добавить("ОргБухгалтер");

	Для Инд = 0 По ВыбТабличноеПоле.Области.Количество() - 1 Цикл
		ТекущаяОбласть = ВыбТабличноеПоле.Области[Инд];

		// Ячейки не подлежащие очистки
		Если СписокПоказателейНеПодлежащихОчистке.НайтиПоЗначению(ТекущаяОбласть.Имя) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;

		Если Не ТекущаяОбласть.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник Тогда
			Продолжить;
		КонецЕсли;

		Если Не ТекущаяОбласть.СодержитЗначение Тогда
			Продолжить;
		КонецЕсли;

		Если ТекущаяОбласть.Защита Тогда
			Продолжить;
		КонецЕсли;

		ТекущаяОбласть.Очистить();
	КонецЦикла;

КонецПроцедуры // ОчиститьТабличноеПоле()

// Процедура очищает содержимое редактируемых и вычисляемых
// ячеек табличного документа.
//
Процедура Очистить() Экспорт
	// Очищаем содержимое ячеек поля табличного документа
	ОчиститьТабличноеПоле(мБаланс);
	ОчиститьТабличноеПоле(мФормаОтчета);

	// Выполняем расчет вычисляемых показателей отчета
	// чтобы очистить соответствующие ячейки
	Расчет();

	// Очищаем расшифровку.
	СпП.Очистить();

	// Устанавливаем флаг модифицированности формы
	Модифицированность = Истина;

	РегламентированнаяОтчетность.ОтключитьОбработчикАвтосохранения(ЭтаФорма);
	РегламентированнаяОтчетность.ВключитьОбработчикАвтосохранения(ЭтаФорма);
КонецПроцедуры // Очистить()

// Процедура управляет выводом отдельных страниц отчета на печать.
//
// Параметры:
//   Парам1 - структура, содержащая параметры печаты страницы:
//      - Имя выводимого на печать листа;
//      - ориентация страницы;
//      - имя табличного поля, который выводится на печать;
//      - имя области дабличного документа, выводимой на печать;
//      - строка, задающая способ печати.Принимает значения:
//           "ПечататьСразу" - непосредственный вывод на печать;
//           "ПечататьБланк" - с предварительным просмотром.
//
Процедура ВывестиНаПечатьЛист(Парам1)
	
	Если Парам1.ЧтоИскать <> Неопределено Тогда
		РегламентированнаяОтчетность.роНайтиЗначение(ЭтаФорма, Парам1);
	Иначе
		РегламентированнаяОтчетность.ВывестиНаПечатьЛистОбщая(ЭтаФорма, Парам1);
	КонецЕсли;
	
КонецПроцедуры

// Процедура управляет выводом всех страниц многостраничного раздела на печать.
//
// Параметры:
//   СтруктураПараметровСтраницы - структура, содержащая параметры печаты отчета:
//
//      - имя страницы основной панели формы (многостраничного раздела);
//      - имя выводимого на печать листа;
//      - ориентация страницы;
//      - имя табличного документа, который выводится на печать;
//      - имя области табличного документа, выводимой на печать (содержит не пустое значение,
//        когда выводится на печать не весь табличный документ, а часть его);
//      - строка, задающая способ печати.Принимает значения:
//           "ПечататьСразу" - непосредственный вывод на печать;
//           "ПечататьБланк" - с предварительным просмотром.
//
Процедура ВывестиНаПечатьДополнительныеСтраницы(СтруктураПараметровСтраницы)
	Перем ИмяСтраницы; // имя страницы основной панели формы;
	Перем ТаблицаСтраницРаздела;
	
	СтруктураПараметровСтраницы.Свойство("ИмяСтраницыПанели", ИмяСтраницы);

	Если Не мСтруктураМногостраничныхРазделов.Свойство(ИмяСтраницы, ТаблицаСтраницРаздела) Тогда
		Возврат;
	КонецЕсли;

	АктивнаяСтраницаРаздела = ТаблицаСтраницРаздела.Найти(Истина, "АктивнаяСтраница");
	Если АктивнаяСтраницаРаздела = Неопределено Тогда
		ВывестиНаПечатьЛист(СтруктураПараметровСтраницы);

		Возврат;
	КонецЕсли;

	ИсходныйИндекс = ТаблицаСтраницРаздела.Индекс(АктивнаяСтраницаРаздела);

	Для Каждого Страница Из ТаблицаСтраницРаздела Цикл
		// выводим на печать каждую страницу многостраничного раздела
		ТекущийИндекс = ТаблицаСтраницРаздела.Индекс(Страница);
		ПоказатьСтраницуМногостраничногоРаздела(ТекущийИндекс, ИмяСтраницы, Истина);
		ВывестиНаПечатьЛист(СтруктураПараметровСтраницы);
	КонецЦикла;

	// вывод в форму данных исходной (активной) страницы
	ПоказатьСтраницуМногостраничногоРаздела(ИсходныйИндекс, ИмяСтраницы, Истина);
	
КонецПроцедуры // ВывестиНаПечатьДополнительныеСтраницы()

// Формирует дерево значений - структуру страниц отчета,
// содержащей настройки показа страниц, вывода на печать и выгрузки в ИФНС.
//
Процедура ФормироватьСтруктуруСвойствСтраниц() Экспорт

	МассивБулево = Новый Массив;
	МассивБулево.Добавить(Тип("Булево"));
	ОписаниеТиповБулево    = Новый ОписаниеТипов(МассивБулево);

	ОписаниеТиповСтрока100 = ОбщегоНазначения.ПолучитьОписаниеТиповСтроки(100);

	ОписаниеТиповСтрока50 = ОбщегоНазначения.ПолучитьОписаниеТиповСтроки(50);

	ОписаниеТиповЧисло1    = ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(1);

	мСвойстваРазделовДекларации           = Новый ДеревоЗначений;

	мСвойстваРазделовДекларации.Колонки.Добавить("ИмяСтраницы",              ОписаниеТиповСтрока100);

	мСвойстваРазделовДекларации.Колонки.Добавить("МногострочностьВРазделе",  ОписаниеТиповЧисло1);
	// 0 - нет
	// 1 - есть одна многострочная часть
	// 2 - и более, точное кол-во число многострочных частей на листе

	// Позволяет записывать многострочность в многостраничных документ либо как ТаблицуЗначений, либо как Структуру
	// В случае, если как Структура, то необходима еще одна процедура СформироватьСтруктуруДанныхДопСтрокСтраницы
	// Только для Многостраничных документов !
	мСвойстваРазделовДекларации.Колонки.Добавить("СохранятьМногострКакТЗ",  ОписаниеТиповБулево);

	мСвойстваРазделовДекларации.Колонки.Добавить("МногостраничностьВРазделе",  ОписаниеТиповБулево);
	// Ложь   - нет
	// Истина - да

	// 3. Будет ли очищаться раздел по кнопки "Очистить"
	// Название параметра
	мСвойстваРазделовДекларации.Колонки.Добавить("ОчищатьРаздел",  ОписаниеТиповБулево);
	// Ложь   - нет
	// Истина - да

	// 4. Если раздел многостраничный, параметр МногостраничностьВРазделе = Истина, тогда имя поля, по которому
	// будет осуществляться Представление доп. страницы
	// Название параметра
	мСвойстваРазделовДекларации.Колонки.Добавить("ИмяПредставления",  ОписаниеТиповСтрока50);

	// 5. Есть ли в разделе значения, отображаемые в квадратном представлении
	// Название параметра
	мСвойстваРазделовДекларации.Колонки.Добавить("ПредставлениеДанных",  ОписаниеТиповБулево);

	// 6. Обязательный раздел для выгрузки или нет
	// Название параметра
	мСвойстваРазделовДекларации.Колонки.Добавить("РазделОбязателенДляВыгрузки",  ОписаниеТиповБулево);
	// Ложь   - нет
	// Истина - да

	// 7. Обязательный раздел для выгрузки или нет
	// Название параметра
	мСвойстваРазделовДекларации.Колонки.Добавить("НазваниеПанелиТабличногоПоляРаздела",  ОписаниеТиповСтрока50);

	мСвойстваРазделовДекларации.Колонки.Добавить("РазделЯвляетсяАвтозаполняемым", ОписаниеТиповБулево);

	мСвойстваРазделовДекларации.Строки.Очистить();

	СтрокаУровня1 = мСвойстваРазделовДекларации.Строки.Добавить();

	// Добавим св-ва раздела Баланс
	СтрокаУровня1.ИмяСтраницы                          = "Баланс";
	СтрокаУровня1.МногострочностьВРазделе              = 0;
	СтрокаУровня1.СохранятьМногострКакТЗ               = Неопределено;
	СтрокаУровня1.МногостраничностьВРазделе            = Ложь;
	СтрокаУровня1.ОчищатьРаздел                        = Истина;
	СтрокаУровня1.ИмяПредставления                     = "";
	СтрокаУровня1.ПредставлениеДанных                  = Истина;
	СтрокаУровня1.РазделОбязателенДляВыгрузки          = Неопределено;
	СтрокаУровня1.НазваниеПанелиТабличногоПоляРаздела  = "ОсновнаяПанель";
	СтрокаУровня1.РазделЯвляетсяАвтозаполняемым        = Истина;

	СтрокаУровня1 = мСвойстваРазделовДекларации.Строки.Добавить();

	// Добавим св-ва раздела Отчет о прибылях и убытках
	СтрокаУровня1.ИмяСтраницы                          = "ФормаОтчета";
	СтрокаУровня1.МногострочностьВРазделе              = 0;
	СтрокаУровня1.СохранятьМногострКакТЗ               = Неопределено;
	СтрокаУровня1.МногостраничностьВРазделе            = Ложь;
	СтрокаУровня1.ОчищатьРаздел                        = Истина;
	СтрокаУровня1.ИмяПредставления                     = "";
	СтрокаУровня1.ПредставлениеДанных                  = Истина;
	СтрокаУровня1.РазделОбязателенДляВыгрузки          = Неопределено;
	СтрокаУровня1.НазваниеПанелиТабличногоПоляРаздела  = "ОсновнаяПанель";
	СтрокаУровня1.РазделЯвляетсяАвтозаполняемым        = Истина;

КонецПроцедуры // ФормироватьСтруктуруСтраницОтчета()

// Обрабатывает полученный из формы ФормаНастройкиОтчета дерево значений,
// определяет состав помеченных для вывода на печать листов.
//
// Параметры:
//  ВидПечати - строка, задающая способ печати:
//              "ПоказатьБланк" - непосредственный вывод на печать;
//              "ПечататьСразу" - с предварительным просмотром.
//
Процедура Печать(ВидПечати, ЧтоИскать = Неопределено) Экспорт

	Если ЧтоИскать = Неопределено Тогда
		Отказ = Ложь;
		РегламентированнаяОтчетность.ПередПечатьюРегламентированногоОтчета(ЭтаФорма, Отказ);
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;

	Если ЧтоИскать = Неопределено И НЕ РегламентированнаяОтчетность.ПринтерДоступен() Тогда
		Предупреждение("Перед формированием печатных форм необходимо определить в системе принтер и
						|задать его в качестве используемого по умолчанию!");
		Возврат;
	КонецЕсли;
	
	//ОткрытьФормуВыбораСтраниц("ВыбратьДляПечати");

	Если ТипЗнч(мДеревоВыбранныхСтраниц) <> Тип("ДеревоЗначений") Тогда
		Возврат;
	КонецЕсли;

	мПечатныеФормы.Очистить();

	СтруктураПараметров = Новый Структура;
	мРежимПечати = Истина;

	Для Каждого СтрокаУровня1 Из мДеревоВыбранныхСтраниц.Строки Цикл
		Пометка = РегламентированнаяОтчетность.ПечататьРаздел(ЭтаФорма, СтрокаУровня1, ЧтоИскать);

		ИмяСтраницыПанели  = СтрокаУровня1.ИмяСтраницы;
		НаименованиеЛиста  = СтрокаУровня1.Представление;
		ОриентацияЛиста    = СтрокаУровня1.ОриентацияСтраницы;
		ИмяТабличногоПоля  = СтрокаУровня1.ИмяПоляТабличногоДокум;
		ИмяОбластиТаблПоля = СтрокаУровня1.ИмяОбластиТабличногоПоля;

		Если СтрокаУровня1.Строки.Количество() > 0 Тогда

			Для Каждого СтрокаУровня2 Из СтрокаУровня1.Строки Цикл
				Пометка = РегламентированнаяОтчетность.ПечататьРаздел(ЭтаФорма, СтрокаУровня2, ЧтоИскать);

				ИмяСтраницыПанели  = СтрокаУровня2.ИмяСтраницы;
				НаименованиеЛиста  = СтрокаУровня2.Представление;
				ОриентацияЛиста    = СтрокаУровня2.ОриентацияСтраницы;
				ИмяТабличногоПоля  = СтрокаУровня2.ИмяПоляТабличногоДокум;
				ИмяОбластиТаблПоля = СтрокаУровня2.ИмяОбластиТабличногоПоля;

				Если СтрокаУровня2.Строки.Количество() > 0 Тогда
					Для Каждого СтрокаУровня3 Из СтрокаУровня2.Строки Цикл

						Пометка = РегламентированнаяОтчетность.ПечататьРаздел(ЭтаФорма, СтрокаУровня3, ЧтоИскать);
						Если Пометка = 0 И ЧтоИскать = Неопределено Тогда
							Продолжить;
						КонецЕсли;

						ИмяСтраницыПанели  = СтрокаУровня3.ИмяСтраницы;
						НаименованиеЛиста  = СтрокаУровня3.Представление;
						ОриентацияЛиста    = СтрокаУровня3.ОриентацияСтраницы;
						ИмяТабличногоПоля  = СтрокаУровня3.ИмяПоляТабличногоДокум;
						ИмяОбластиТаблПоля = СтрокаУровня3.ИмяОбластиТабличногоПоля;

						СтруктураПараметров.Очистить();
						СтруктураПараметров.Вставить("НаименованиеЛиста",  НаименованиеЛиста);
						СтруктураПараметров.Вставить("ОриентацияЛиста",    ОриентацияЛиста);
						СтруктураПараметров.Вставить("ИмяТабличногоПоля",  ИмяТабличногоПоля);
						Структурапараметров.Вставить("ИмяОбластиТаблПоля", ИмяОбластиТаблПоля);
						СтруктураПараметров.Вставить("ВидПечати",          ВидПечати);
						СтруктураПараметров.Вставить("ЧтоИскать",	       ЧтоИскать);

						Если Не мСтруктураМногостраничныхРазделов.Свойство(ИмяСтраницыПанели) Тогда
							ВывестиНаПечатьЛист(СтруктураПараметров);
						Иначе
							// выводим на печать все созданные страницы многостраничного раздела
							СтруктураПараметров.Вставить("ИмяСтраницыПанели", ИмяСтраницыПанели);
							ВывестиНаПечатьДополнительныеСтраницы(СтруктураПараметров);
						КонецЕсли;
					КонецЦикла;

					Продолжить;

				КонецЕсли;

				Если Пометка = 0 И ЧтоИскать = Неопределено Тогда
					Продолжить;
				КонецЕсли;

				СтруктураПараметров.Очистить();
				СтруктураПараметров.Вставить("НаименованиеЛиста",  НаименованиеЛиста);
				СтруктураПараметров.Вставить("ОриентацияЛиста",    ОриентацияЛиста);
				СтруктураПараметров.Вставить("ИмяТабличногоПоля",  ИмяТабличногоПоля);
				Структурапараметров.Вставить("ИмяОбластиТаблПоля", ИмяОбластиТаблПоля);
				СтруктураПараметров.Вставить("ВидПечати",          ВидПечати);
				СтруктураПараметров.Вставить("ЧтоИскать",	       ЧтоИскать);

				Если Не мСтруктураМногостраничныхРазделов.Свойство(ИмяСтраницыПанели) Тогда
					ВывестиНаПечатьЛист(СтруктураПараметров);
				Иначе
					// выводим на печать все созданные страницы многостраничного раздела
					СтруктураПараметров.Вставить("ИмяСтраницыПанели", ИмяСтраницыПанели);
					ВывестиНаПечатьДополнительныеСтраницы(СтруктураПараметров);
				КонецЕсли;
			КонецЦикла;

			Продолжить;

		КонецЕсли;

		Если Пометка = 0 И ЧтоИскать = Неопределено Тогда
			Продолжить;
		КонецЕсли;

		СтруктураПараметров.Очистить();
		СтруктураПараметров.Вставить("НаименованиеЛиста",  НаименованиеЛиста);
		СтруктураПараметров.Вставить("ОриентацияЛиста",    ОриентацияЛиста);
		СтруктураПараметров.Вставить("ИмяТабличногоПоля",  ИмяТабличногоПоля);
		Структурапараметров.Вставить("ИмяОбластиТаблПоля", ИмяОбластиТаблПоля);
		СтруктураПараметров.Вставить("ВидПечати",          ВидПечати);
		СтруктураПараметров.Вставить("ЧтоИскать",	       ЧтоИскать);

		Если Не мСтруктураМногостраничныхРазделов.Свойство(ИмяСтраницыПанели) Тогда
			ВывестиНаПечатьЛист(СтруктураПараметров);
		Иначе
			// выводим на печать все созданные страницы многостраничного раздела
			СтруктураПараметров.Вставить("ИмяСтраницыПанели", ИмяСтраницыПанели);
			ВывестиНаПечатьДополнительныеСтраницы(СтруктураПараметров);
		КонецЕсли;
	КонецЦикла;

	// обновляем исходное дерево значений 
	мДеревоСтраницОтчета = мДеревоВыбранныхСтраниц.Скопировать();

	мРежимПечати = Ложь;
	Если ЧтоИскать = Неопределено Тогда
		РегламентированнаяОтчетность.ПроставитьНомераЛистов(ЭтаФорма, ВидПечати, Ложь);
	КонецЕсли;

КонецПроцедуры // Печать()

// ПоказатьСтраницуМногостраничногоРаздела
// Вариант версия 10.05.2005
// Выводит в табличный документ данные страницы многостраничного раздела формы.
// Одновременно убирая признак у активной страницы и сохраняя в неё данные текущего табличного поля
// Параметры:
//  Шаг                      - число,  количество перелистываемых страниц;
//  ИмяТекущейСтраницыПанели - строка, имя страницы основной панели формы, содержащий многостраничный раздел;
//  ПоказатьПоИндексу        - булево, управляет выводом страницы по заданному индексу в коллекции страниц.
//
Процедура ПоказатьСтраницуМногостраничногоРаздела(Шаг, ИмяТекущейСтраницыПанели, ПоказатьПоИндексу = Ложь) Экспорт

	РегламентированнаяОтчетность.роПоказатьСтраницуМногостраничногоРаздела(ЭтаФорма, Шаг, ИмяТекущейСтраницыПанели, ПоказатьПоИндексу);

КонецПроцедуры // ПоказатьСтраницуМногостраничногоРаздела()

// Формирует структуру данных отчета и помещает в реквизит типа ХранилищеЗначения
// документа РегламентированныйОтчет.
// 
// При первом сохранении данных отчета создает новый документ этого вида.
// Структура данных отчета состоит из элементов:
//   - значения редактируемых реквизитов отчета;
//   - данные по многострочным разделам отчета;
//   - данные по  многостраничным разделам отчета;
//   - данные по вариантам заполнения реквизитов,
//     участвующих в автозаполнении.
//
Функция Сохранить(Автосохранение = Ложь) Экспорт

	Вариант = ВидДокумента * НомерКорректировки;

	Если НЕ РегламентированнаяОтчетность.ПриЗаписиРегламентированногоОтчета(ЭтаФорма, , Автосохранение, Вариант) Тогда
		Возврат Ложь;
	КонецЕсли;

	// установим текущие значения реквизитов документа
	мСохраненныйДок.ИсточникОтчета             = ЭтотОбъект.Метаданные().Имя;
	мСохраненныйДок.НаименованиеОтчета         = ЭтотОбъект.Метаданные().Формы.ОсновнаяФорма.Представление();
	мСохраненныйДок.ДатаНачала                 = мДатаНачалаПериодаОтчета;
	мСохраненныйДок.ДатаОкончания              = мДатаКонцаПериодаОтчета;
	мСохраненныйДок.ВыбраннаяФорма             = мВыбраннаяФорма;
	мСохраненныйДок.Организация                = Организация;
	мСохраненныйДок.ДатаПодписи                = ДатаПодписи;
	мСохраненныйДок.ЕдиницаИзмерения           = ЕдиницаИзмерения;
	мСохраненныйДок.ТочностьЕдиницыИзмерения   = ТочностьЕдиницыИзмерения;
	мСохраненныйДок.ВидОтчетности              = Перечисления.ВидыОтчетности.РегламентированнаяОтчетность;
	мСохраненныйДок.Комментарий                = КомментарийОбщий;
	мСохраненныйДок.Вид                        = Вариант;

	мВариант = Вариант;

	Если Организация <> Справочники.Организации.ПустаяСсылка() Тогда
		мСохраненныйДок.КодИМНС = Организация.КодИМНС;
	КонецЕсли;

	мСохраненныйДок.ФорматВыгрузки = "Автоматически";
	
	// формируем данные редактируемых ячеек таблицы
	ПоказателиОтчета = Новый Структура();

	Для каждого СтраницаПанели из ЭлементыФормы.ОсновнаяПанель.Страницы Цикл

		ИмяТекТабличногоПоля    = "ПолеТабличногоДокумента" + СтраницаПанели.Имя;
		ТекТабличноеПоле        = ЭлементыФормы[ИмяТекТабличногоПоля];

		ПоказателиТекущегоЛиста = СобратьДанныеТекущегоТаблПоля(ТекТабличноеПоле);
		ПоказателиОтчета.Вставить(ИмяТекТабличногоПоля, ПоказателиТекущегоЛиста);

	КонецЦикла;

	// формируем список сохранения
	СписокСохранения = Новый Структура();

	// вставляем данные редактируемых ячеек таблицы	
	СписокСохранения.Вставить("ПоказателиОтчета", ПоказателиОтчета);

	// вставляем данные многострочных разделов
	СписокСохранения.Вставить("ДанныеМногострочныхРазделов", мСтруктураМногострочныхРазделов);

	// вставляем данные вариантов автозаполнения ячеек
	СписокСохранения.Вставить("ДанныеВариантовАвтоЗаполнения", мСтруктураВариантыЗаполнения);

	// вствляем версию формы
	СписокСохранения.Вставить("ВерсияФормы", мВерсияФормы);

	СписокСохранения.Вставить("СохранятьРасшифровку", мСохранятьРасшифровку);

	Если мСохранятьРасшифровку = Истина Тогда
		СписокСохранения.Вставить("Расшифровка", СпП);
	КонецЕсли;

	// Сохраним список организаций, по которому необходимо собирать отчет.
	СписокСохранения.Вставить("ГруппаОрганизаций", мГруппаОрганизаций);

	// Сохраним тип адреса выводимый в отчете.
	СписокСохранения.Вставить("ТипАдреса", мТипАдреса);
	
	СписокСохранения.Вставить("Адрес9Запятых", мАдресДляВыгрузки);

	// вствляем флажок разрешения печати без штрихкода
	СписокСохранения.Вставить("ПечатьБезШтрихкодаРазрешена", мПечатьБезШтрихкодаРазрешена);
	
	ХранилищеДанных = Новый ХранилищеЗначения(СписокСохранения);
	мСохраненныйДок.ДанныеОтчета = ХранилищеДанных;

	// записываем документ, хранящий данные отчета
	Попытка
		мСохраненныйДок.Записать();
	Исключение
		Если НЕ Автосохранение Тогда
			Предупреждение(ОбщегоНазначения.СформироватьТекстСообщения(ОписаниеОшибки()));
		КонецЕсли;
		РегламентированнаяОтчетность.СкрытьКартинкуСохранение(ЭтаФорма);
		Возврат Ложь;
	КонецПопытки;
	
	РегламентированнаяОтчетность.ПослеЗаписиРегламентированногоОтчета(ЭтаФорма);
	
	Модифицированность = Ложь;
	
	КлючУникальности = мСохраненныйДок.Ссылка;

	Возврат Истина;

КонецФункции // Сохранить()

// Восстанавливает сохраненные данные отчета.
//
Процедура ВосстановитьСохраненныеДанные()
	Перем ДанныеМногострочныхРазделов;
	Перем ДанныеВариановАвтоЗаполнения;
	Перем ПоказателиОтчета;
	Перем ВерсияФормы;
	Перем Расшифровка;

	// В случае, если формы была скопирована по F9, то проверим, не изменилась ли организация.
	Если Организация <> мСохраненныйДок.Организация
	   И Организация <> ОбщегоНазначения.ПустоеЗначениеТипа("СправочникСсылка.Организации")
	   И Организация <> Неопределено Тогда
		// Меняем переменную, для того, чтобы запустилась процедура ЗаполнитьСведенияОбОрганизации
		мВПрограммеИзмененаОрганизация = Истина;
		мСохраненныйДок.Организация = Организация;
	Иначе
		// восстанавливаем реквизиты отчета
		Организация              = мСохраненныйДок.Организация;
	КонецЕсли;

	ДатаПодписи              = мСохраненныйДок.ДатаПодписи;
	ЕдиницаИзмерения         = мСохраненныйДок.ЕдиницаИзмерения;
	ТочностьЕдиницыИзмерения = мСохраненныйДок.ТочностьЕдиницыИзмерения;
	КомментарийОбщий 		 = мСохраненныйДок.Комментарий;

	// восстанавливаем сохраненные данные отчета
	СписокСохранения = мСохраненныйДок.ДанныеОтчета.Получить();

	// восстанавливаем сохраненные данные многострочных разделов
	Если СписокСохранения.Свойство( "ДанныеМногострочныхРазделов", ДанныеМногострочныхРазделов) Тогда
		мСтруктураМногострочныхРазделов = ДанныеМногострочныхРазделов;

		Для Каждого ЭлементСтруктуры Из мСтруктураМногострочныхРазделов Цикл
			ИмяГруппы       = ЭлементСтруктуры.Ключ;
			СтруктураГруппы = ЭлементСтруктуры.Значение;

			ВывестиРазделВТабличныйДокумент(ИмяГруппы, СтруктураГруппы);
		КонецЦикла;
	КонецЕсли;

	// восстанавливаем сохраненные данные вариантов автозаполнения ячеек
	Если СписокСохранения.Свойство("ДанныеВариантовАвтоЗаполнения", ДанныеВариановАвтоЗаполнения) Тогда
		мСтруктураВариантыЗаполнения = ДанныеВариановАвтоЗаполнения;
	КонецЕсли;

	// восстанавливаем версию формы
	Если СписокСохранения.Свойство("ВерсияФормы", ВерсияФормы) Тогда
		Если ВерсияФормы <> мВерсияФормы Тогда
			// Версия формы изменилась.
			// Обновляем пользовательские настройки.
			ОбновитьПользовательскиеНастройки();
		КонецЕсли;
	КонецЕсли;

	// восстановим сохраненные данные редактируемых ячеек
	СписокСохранения.Свойство( "ПоказателиОтчета", ПоказателиОтчета );

	Для Каждого ПоказателиСтраницы Из ПоказателиОтчета Цикл
		ИмяТекТабличноеПоле = ПоказателиСтраницы.Ключ;
		ТекТабличноеПоле    = ЭлементыФормы[ИмяТекТабличноеПоле];
		ПоказателиТаблПоле  = ПоказателиСтраницы.Значение;

		Для Каждого Показатель Из ПоказателиТаблПоле Цикл
			ИмяПоказателя       = Показатель.Ключ;
			ЗначениеПоказателя  = Показатель.Значение;

			// установим значение в таблице
			Попытка
				ТекТабличноеПоле.Области[ИмяПоказателя].Значение = ЗначениеПоказателя;
			Исключение
			КонецПопытки;

		КонецЦикла;
	КонецЦикла;

	СписокСохранения.Свойство("СохранятьРасшифровку", мСохранятьРасшифровку);
	Если мСохранятьРасшифровку = Неопределено Тогда
		мСохранятьРасшифровку = Истина;
	КонецЕсли;
	ЭлементыФормы.КоманднаяПанельФормы.Кнопки.ПодменюНастройка.Кнопки.ПодменюРасшифровка.Кнопки.КнопкаСохранятьРасшифровку.Пометка = мСохранятьРасшифровку;

	СписокСохранения.Свойство("Расшифровка", Расшифровка);
	Если Расшифровка <> Неопределено Тогда
		СпП = Расшифровка;
	КонецЕсли;

	СписокСохранения.Свойство("ГруппаОрганизаций", мГруппаОрганизаций);
	Если мГруппаОрганизаций = Неопределено Тогда
		мГруппаОрганизаций = Новый СписокЗначений;
	КонецЕсли;

	СписокСохранения.Свойство("ТипАдреса", мТипАдреса);
	Если мТипАдреса = Неопределено Тогда
		мТипАдреса = "ПолныйАдрПочт";
	ИначеЕсли Найти(мТипАдреса, "Полный") = 0 Тогда
		мТипАдреса = "Полный" + мТипАдреса;	
	КонецЕсли;
	
	СписокСохранения.Свойство("Адрес9Запятых", мАдресДляВыгрузки);
	Если мАдресДляВыгрузки = Неопределено Тогда
		Если мТипАдреса = "ПолныйАдрЮР" Тогда
			мАдресДляВыгрузки = РегламентированнаяОтчетность.ПолучитьСведенияОбОрганизации(Организация, ДатаПодписи, "АдрЮР").АдрЮР;
		Иначе
			мАдресДляВыгрузки = РегламентированнаяОтчетность.ПолучитьСведенияОбОрганизации(Организация, ДатаПодписи, "АдрПочт").АдрПочт;	
		КонецЕсли;
	КонецЕсли;

	Если Месяц(мДатаКонцаПериодаОтчета) % 3 = 0 Тогда
		Если НЕ СписокСохранения.Свойство("ПечатьБезШтрихкодаРазрешена", мПечатьБезШтрихкодаРазрешена) Тогда
			мПечатьБезШтрихкодаРазрешена = Ложь;
		КонецЕсли;
	Иначе
		мПечатьБезШтрихкодаРазрешена = Истина;
	КонецЕсли;
	
	РегламентированнаяОтчетность.ОперацииПриВосстановленииРегламентированногоОтчета(ЭтаФорма);

	УстановитьФорматВывода();
	
	мДеревоВыбранныхСтраниц = мДеревоСтраницОтчета.Скопировать();
	
	Расчет();
КонецПроцедуры // ВосстановитьСохраненныеДанные()

// Функция округляет число согласно установленной размерности чисел.
//
// Параметры:
//  ИсходноеЧисло - заданное число;
//
// Возвращаемое значение:
//  число, округленное с заданной точностью с учетом установленной единицы измерения.
//
Функция ОкруглитьЧислоПоФормату(ИсходноеЧисло)

	ОкругленноеЧисло = Окр(ИсходноеЧисло / мДелитель, ТочностьЕдиницыИзмерения) * мДелитель; 

	Возврат ОкругленноеЧисло;

КонецФункции // ОкруглитьЧислоПоФормату()

// Выполняет расчет вычисляемых показателей отчета
// (ячеек, выделенных зеленым цветом).
//
Процедура Расчет()
	//БАЛАНС
	// Актив
	// строка 1100
	мБаланс.Области.П000100110004.Значение = мБаланс.Области.П000100111004.Значение
										   + мБаланс.Области.П000100112004.Значение
										   + мБаланс.Области.П000100113004.Значение
										   + мБаланс.Области.П000100114004.Значение
										   + мБаланс.Области.П000100115004.Значение
										   + мБаланс.Области.П000100116004.Значение
										   + мБаланс.Области.П000100117004.Значение;
										   
	мБаланс.Области.П000100110005.Значение = мБаланс.Области.П000100111005.Значение
										   + мБаланс.Области.П000100112005.Значение
										   + мБаланс.Области.П000100113005.Значение
										   + мБаланс.Области.П000100114005.Значение
										   + мБаланс.Области.П000100115005.Значение
										   + мБаланс.Области.П000100116005.Значение
										   + мБаланс.Области.П000100117005.Значение;
										   
	мБаланс.Области.П000100110006.Значение = мБаланс.Области.П000100111006.Значение
										   + мБаланс.Области.П000100112006.Значение
										   + мБаланс.Области.П000100113006.Значение
										   + мБаланс.Области.П000100114006.Значение
										   + мБаланс.Области.П000100115006.Значение
										   + мБаланс.Области.П000100116006.Значение
										   + мБаланс.Области.П000100117006.Значение;


	// строка 1200
	мБаланс.Области.П000100120004.Значение = мБаланс.Области.П000100121004.Значение
										   + мБаланс.Области.П000100122004.Значение
										   + мБаланс.Области.П000100123004.Значение
										   + мБаланс.Области.П000100124004.Значение
										   + мБаланс.Области.П000100125004.Значение
										   + мБаланс.Области.П000100126004.Значение;
	
	мБаланс.Области.П000100120005.Значение = мБаланс.Области.П000100121005.Значение
										   + мБаланс.Области.П000100122005.Значение
										   + мБаланс.Области.П000100123005.Значение
										   + мБаланс.Области.П000100124005.Значение
										   + мБаланс.Области.П000100125005.Значение
										   + мБаланс.Области.П000100126005.Значение;
										   
	мБаланс.Области.П000100120006.Значение = мБаланс.Области.П000100121006.Значение
										   + мБаланс.Области.П000100122006.Значение
										   + мБаланс.Области.П000100123006.Значение
										   + мБаланс.Области.П000100124006.Значение
										   + мБаланс.Области.П000100125006.Значение
										   + мБаланс.Области.П000100126006.Значение;

	// строка 1600
	мБаланс.Области.П000100160004.Значение = мБаланс.Области.П000100110004.Значение
										   + мБаланс.Области.П000100120004.Значение;	
										   
	мБаланс.Области.П000100160005.Значение = мБаланс.Области.П000100110005.Значение
										   + мБаланс.Области.П000100120005.Значение;
										   
	мБаланс.Области.П000100160006.Значение = мБаланс.Области.П000100110006.Значение
										   + мБаланс.Области.П000100120006.Значение;


	// Пассив
	// строка 1300
	мБаланс.Области.П000100130004.Значение = мБаланс.Области.П000100131004.Значение
										   + мБаланс.Области.П000100132004.Значение
										   + мБаланс.Области.П000100134004.Значение
										   + мБаланс.Области.П000100135004.Значение
										   + мБаланс.Области.П000100136004.Значение
										   + мБаланс.Области.П000100137004.Значение;
										   
	мБаланс.Области.П000100130005.Значение = мБаланс.Области.П000100131005.Значение
										   + мБаланс.Области.П000100132005.Значение
										   + мБаланс.Области.П000100134005.Значение
										   + мБаланс.Области.П000100135005.Значение
										   + мБаланс.Области.П000100136005.Значение
										   + мБаланс.Области.П000100137005.Значение;
										   
	мБаланс.Области.П000100130006.Значение = мБаланс.Области.П000100131006.Значение
										   + мБаланс.Области.П000100132006.Значение
										   + мБаланс.Области.П000100134006.Значение
										   + мБаланс.Области.П000100135006.Значение
										   + мБаланс.Области.П000100136006.Значение
										   + мБаланс.Области.П000100137006.Значение;


	// строка 1400
	мБаланс.Области.П000100140004.Значение = мБаланс.Области.П000100141004.Значение
										   + мБаланс.Области.П000100142004.Значение
										   + мБаланс.Области.П000100143004.Значение
										   + мБаланс.Области.П000100145004.Значение;
	
	мБаланс.Области.П000100140005.Значение = мБаланс.Области.П000100141005.Значение
										   + мБаланс.Области.П000100142005.Значение
										   + мБаланс.Области.П000100143005.Значение
										   + мБаланс.Области.П000100145005.Значение;
										   
	мБаланс.Области.П000100140006.Значение = мБаланс.Области.П000100141006.Значение
										   + мБаланс.Области.П000100142006.Значение
										   + мБаланс.Области.П000100143006.Значение
										   + мБаланс.Области.П000100145006.Значение;

	// строка 1500
	мБаланс.Области.П000100150004.Значение = мБаланс.Области.П000100151004.Значение
										   + мБаланс.Области.П000100152004.Значение
										   + мБаланс.Области.П000100153004.Значение
										   + мБаланс.Области.П000100154004.Значение
										   + мБаланс.Области.П000100155004.Значение;
	
	мБаланс.Области.П000100150005.Значение = мБаланс.Области.П000100151005.Значение
										   + мБаланс.Области.П000100152005.Значение
										   + мБаланс.Области.П000100153005.Значение
										   + мБаланс.Области.П000100154005.Значение
										   + мБаланс.Области.П000100155005.Значение;
										   
	мБаланс.Области.П000100150006.Значение = мБаланс.Области.П000100151006.Значение
										   + мБаланс.Области.П000100152006.Значение
										   + мБаланс.Области.П000100153006.Значение
										   + мБаланс.Области.П000100154006.Значение
										   + мБаланс.Области.П000100155006.Значение;
										   
	// строка 1700
	мБаланс.Области.П000100170004.Значение = мБаланс.Области.П000100130004.Значение
										   + мБаланс.Области.П000100140004.Значение
										   + мБаланс.Области.П000100150004.Значение;

	мБаланс.Области.П000100170005.Значение = мБаланс.Области.П000100130005.Значение
										   + мБаланс.Области.П000100140005.Значение
										   + мБаланс.Области.П000100150005.Значение;

	мБаланс.Области.П000100170006.Значение = мБаланс.Области.П000100130006.Значение
										   + мБаланс.Области.П000100140006.Значение
										   + мБаланс.Области.П000100150006.Значение;


	//ОТЧЕТ О ПРИБЫЛЯХ И УБЫТКАХ
	//Сбор данных
	П000100211004 = ОкруглитьЧислоПоФормату(мФормаОтчета.Области.П000100211004.Значение);
	П000100212004 = ОкруглитьЧислоПоФормату(мФормаОтчета.Области.П000100212004.Значение);
	П000100221004 = ОкруглитьЧислоПоФормату(мФормаОтчета.Области.П000100221004.Значение);
	П000100222004 = ОкруглитьЧислоПоФормату(мФормаОтчета.Области.П000100222004.Значение);
	
	П000100211005 = ОкруглитьЧислоПоФормату(мФормаОтчета.Области.П000100211005.Значение);
	П000100212005 = ОкруглитьЧислоПоФормату(мФормаОтчета.Области.П000100212005.Значение);
	П000100221005 = ОкруглитьЧислоПоФормату(мФормаОтчета.Области.П000100221005.Значение);
	П000100222005 = ОкруглитьЧислоПоФормату(мФормаОтчета.Области.П000100222005.Значение);
	
	П000100231004 = ОкруглитьЧислоПоФормату(мФормаОтчета.Области.П000100231004.Значение);
	П000100232004 = ОкруглитьЧислоПоФормату(мФормаОтчета.Области.П000100232004.Значение);
	П000100233004 = ОкруглитьЧислоПоФормату(мФормаОтчета.Области.П000100233004.Значение);
	П000100234004 = ОкруглитьЧислоПоФормату(мФормаОтчета.Области.П000100234004.Значение);
	П000100235004 = ОкруглитьЧислоПоФормату(мФормаОтчета.Области.П000100235004.Значение);
	
	П000100231005 = ОкруглитьЧислоПоФормату(мФормаОтчета.Области.П000100231005.Значение);
	П000100232005 = ОкруглитьЧислоПоФормату(мФормаОтчета.Области.П000100232005.Значение);
	П000100233005 = ОкруглитьЧислоПоФормату(мФормаОтчета.Области.П000100233005.Значение);
	П000100234005 = ОкруглитьЧислоПоФормату(мФормаОтчета.Области.П000100234005.Значение);
	П000100235005 = ОкруглитьЧислоПоФормату(мФормаОтчета.Области.П000100235005.Значение);

	П000100241004 = ОкруглитьЧислоПоФормату(мФормаОтчета.Области.П000100241004.Значение);
	П000100243004 = ОкруглитьЧислоПоФормату(мФормаОтчета.Области.П000100243004.Значение);
	П000100245004 = ОкруглитьЧислоПоФормату(мФормаОтчета.Области.П000100245004.Значение);
	П000100246004 = ОкруглитьЧислоПоФормату(мФормаОтчета.Области.П000100246004.Значение);
	
	П000100241005 = ОкруглитьЧислоПоФормату(мФормаОтчета.Области.П000100241005.Значение);
	П000100243005 = ОкруглитьЧислоПоФормату(мФормаОтчета.Области.П000100243005.Значение);
	П000100245005 = ОкруглитьЧислоПоФормату(мФормаОтчета.Области.П000100245005.Значение);
	П000100246005 = ОкруглитьЧислоПоФормату(мФормаОтчета.Области.П000100246005.Значение);
	
	П000100240004 = ОкруглитьЧислоПоФормату(мФормаОтчета.Области.П000100240004.Значение);
	П000100251004 = ОкруглитьЧислоПоФормату(мФормаОтчета.Области.П000100251004.Значение);
	П000100252004 = ОкруглитьЧислоПоФормату(мФормаОтчета.Области.П000100252004.Значение);
	
	П000100240005 = ОкруглитьЧислоПоФормату(мФормаОтчета.Области.П000100240005.Значение);
	П000100251005 = ОкруглитьЧислоПоФормату(мФормаОтчета.Области.П000100251005.Значение);
	П000100252005 = ОкруглитьЧислоПоФормату(мФормаОтчета.Области.П000100252005.Значение);
	
	//Расчеты
	П000100210004 = П000100211004 + П000100212004;
	П000100210005 = П000100211005 + П000100212005;
	
	П000100220004 = П000100210004 + П000100221004 + П000100222004;
	П000100220005 = П000100210005 + П000100221005 + П000100222005;
	
	П000100230004 = П000100220004 + П000100231004 + П000100232004 + П000100233004 + П000100234004 + П000100235004;
	П000100230005 = П000100220005 + П000100231005 + П000100232005 + П000100233005 + П000100234005 + П000100235005;
	
	П000100240004 = П000100230004 + П000100241004 + П000100243004 + П000100245004 + П000100246004;
	П000100240005 = П000100230005 + П000100241005 + П000100243005 + П000100245005 + П000100246005;
	
	П000100250004 = П000100240004 + П000100251004 + П000100252004;
	П000100250005 = П000100240005 + П000100251005 + П000100252005;
	
	//Запишем, что посчитали
	мФормаОтчета.Области.П000100210004.Значение = П000100210004;
	мФормаОтчета.Области.П000100210005.Значение = П000100210005;
	
	мФормаОтчета.Области.П000100220004.Значение = П000100220004;
	мФормаОтчета.Области.П000100220005.Значение = П000100220005;
	
	мФормаОтчета.Области.П000100230004.Значение = П000100230004;
	мФормаОтчета.Области.П000100230005.Значение = П000100230005;
	
	мФормаОтчета.Области.П000100240004.Значение = П000100240004;
	мФормаОтчета.Области.П000100240005.Значение = П000100240005;
	
	мФормаОтчета.Области.П000100250004.Значение = П000100250004;
	мФормаОтчета.Области.П000100250005.Значение = П000100250005;
КонецПроцедуры // Расчет()

// ОбработчикИзменения
//
Процедура ОбработчикИзменения()

	Расчет();
	ОбновитьПараметрыАвтозаполненияЯчейки();

	Модифицированность = Истина;

КонецПроцедуры // ОбработчикИзменения

Функция ПолучитьНазванияОрганизацийСтрокой()
	Результат = Организация.Наименование;
	Если мБезКонсолидации Тогда
		Возврат Результат;
	Иначе
		Для каждого Зап Из мГруппаОрганизаций Цикл
			Результат = Результат + "; " + Зап.Значение.Наименование;
		КонецЦикла;
		Возврат Результат;
	КонецЕсли;
КонецФункции

// Процедура выполняет заполнение бухгалтерской отчетности автоматически по данным ИБ.
//
Процедура ЗаполнитьАвто() Экспорт
	Перем ТаблДанныхДопСтрокОбщ;

	Отказ = Ложь;
	РегламентированнаяОтчетность.ПередЗаполнениемРегламентированногоОтчета(ЭтаФорма, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнятьГодПредыдущий = Истина;
	ЗаполнятьГодПредшествующийПредыдущему  = Истина;
	
	Если ФлажокВнешДанные Тогда
		
		ПериодЗагрузкиДанных = 0;
		ОтчетныйГодЗагрузкиДанных = 0;

		СтруктураДанныхОтчета = ИмпортироватьДанныеОтчета();
		Если СтруктураДанныхОтчета = Неопределено Тогда
			Сообщить("Не удалось загрузить данные.", СтатусСообщения.Важное);
			Возврат;
		КонецЕсли;
		
		ЗагрузитьДанныеВОтчет(СтруктураДанныхОтчета);
		ОпределитьПериодЗагружаемыхДанных();
		
	КонецЕсли;
	
	//////////
	//// *** Здесь необходимо написать алгоритм заполнения отчета.***
	////
	//// Для присвоения показателям отчета вычисленного значения необходимо
	//// использовать процедуру
	////
	////     УстановитьЗначениеПоказателя(ИмяПоказателя, ЗначениеПоказателя).
	////
	//// Для дополнения справки по забалансовым счетам дополнительными строками
	//// следует предварительно заполнить таблицу значений ТаблДанныхДопСтрок,
	//// далее вызвать процедуру АвтозаполнениеДопСтрок(), передав в качестве
	//// параметра таблицу значений ТаблДанныхДопСтрок.
	////
	//////////
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Предупреждение("Необходимо указать организацию!");
		Возврат;
	КонецЕсли; 

	СпП.Очистить();
	мТаблицаИтоговыхПоказателейПриКонсолидации.Очистить();

	ТаблДанныхДопСтрок = Новый ТаблицаЗначений();
	ТаблДанныхДопСтрок.Колонки.Добавить("Наименование");
	ТаблДанныхДопСтрок.Колонки.Добавить("НачОстаток");
	ТаблДанныхДопСтрок.Колонки.Добавить("КонОстаток");

	//// Предварительно удаляем дополнительные строки многострочных разделов
	//УдалитьДопСтрокиМногострочныхРазделов();

	// Общая часть заполнения бухотчетности - одна на все формы.
	
	// Инициализация
	ПС = ПланыСчетов["Хозрасчетный"];

	// Проверим есть ли счет 76.НА в ПС
	Ссылка = ПС.НайтиПоКоду("76.НА");
	Если Ссылка.Код <> "" Тогда
		Есть76НА = Истина
	Иначе 
		Есть76НА = Ложь
	КонецЕсли;

	// Проверим есть ли счет 68.32 в ПС
	Ссылка = ПС.НайтиПоКоду("68.32");
	Если Ссылка.Код <> "" Тогда
		Есть68_32 = Истина
	Иначе 
		Есть68_32 = Ложь
	КонецЕсли;

	// Проверим есть ли счет 99.02.4 в ПС
	Ссылка = ПС.НайтиПоКоду("99.02.4");
	Если Ссылка.Код <> "" Тогда
		Есть99_2_4 = Истина
	Иначе 
		Есть99_2_4 = Ложь
	КонецЕсли;

	// Проверим есть ли счет 99.09 в ПС
	Ссылка = ПС.НайтиПоКоду("99.09");
	Если Ссылка.Код <> "" Тогда
		Есть99_9 = Истина
	Иначе 
		Есть99_9 = Ложь
	КонецЕсли;

	// Присвоение переменным значений счетов
	
	Счет01      = ПС.ОсновныеСредства;
	Счет02_01   = ПС.АмортизацияОС_01;
	Счет02_02   = ПС.АмортизацияОС_03;
	Счет03      = ПС.ДоходныеВложенияВ_МЦ;
	Счет04      = ПС.НематериальныеАктивы;
	Счет04_01   = ПС.НематериальныеАктивыОрганизации;
	Счет04_02   = ПС.РасходыНаНИОКР;
	Счет05      = ПС.АмортизацияНематериальныхАктивов;
	Счет07      = ПС.ОборудованиеКУстановке;
	Счет08      = ПС.ВложенияВоВнеоборотныеАктивы;

	//Счет08_01   = ПС.ПриобретениеЗемельныхУчастков;
	//Счет08_02   = ПС.ПриобретениеОбъектовПриродопользования;
	//Счет08_03   = ПС.СтроительствоОбъектовОсновныхСредств;
	//Счет08_04   = ПС.ПриобретениеОбъектовОсновныхСредств;
	//Счет08_05   = ПС.ПриобретениеНематериальныхАктивов;
	//Счет08_06   = ПС.ПереводМолоднякаЖивотныхВОсновноеСтадо;
	//Счет08_07   = ПС.ПриобретениеВзрослыхЖивотных;
	//Счет08_08   = ПС.ВыполнениеНИОКР;
	Счет09      = ПС.ОтложенныеНалоговыеАктивы;
	Счет10      = ПС.Материалы;
	Счет11      = ПС.ЖивотныеНаВыращиванииИОткорме;
	Счет14_01   = ПС.РезервыПодСнижениеСтоимостиМатериалов;
	Счет14_02   = ПС.РезервыПодСнижениеСтоимостиТоваров;
	Счет14_03   = ПС.РезервыПодСнижениеСтоимостиГотовойПродукции;
	Счет14_04   = ПС.РезервыПодСнижениеСтоимостиНезавершенногоПроизводства;
	Счет15_01   = ПС.ЗаготовлениеИПриобретениеМатериалов;
	Счет15_02   = ПС.ПриобретениеТоваров;
	Счет16_01   = ПС.ОтклонениеВСтоимостиМатериалов;
	Счет16_02   = ПС.ОтклонениеВСтоимостиТоваров;

	Счет19      = ПС.НДСпоПриобретеннымЦенностям;
	Счет19_06   = ПС.АкцизыПоОплаченнымМатериальнымЦенностям;

	Счет20      = ПС.ОсновноеПроизводство_;
	Счет21      = ПС.Полуфабрикаты;
	Счет23      = ПС.ВспомогательныеПроизводства;
	Счет28      = ПС.БракВПроизводстве;
	Счет29      = ПС.ОбслуживающиеПроизводства;
	Счет41      = ПС.Товары;
	Счет42      = ПС.ТорговаяНаценка;
	Счет43      = ПС.ГотоваяПродукция;
	Счет44      = ПС.РасходыНаПродажу;
	Счет45      = ПС.ТоварыОтгруженные;
	Счет46      = ПС.ВыполненныеЭтапыПоНезавершеннымРаботам;

	//Счет50      = ПС.Касса;
	Счет50_01   = ПС.КассаОрганизации;
	Счет50_02   = ПС.ОперационнаяКасса;
	Счет50_03   = ПС.ДенежныеДокументы;
	Счет50_21   = ПС.КассаОрганизацииВал;
	Счет50_23   = ПС.ДенежныеДокументыВал;

	Счет51      = ПС.РасчетныеСчета;
	Счет52      = ПС.ВалютныеСчета;
	Счет55_01   = ПС.Аккредитивы;
	Счет55_02   = ПС.ЧековыеКнижки;
	Счет55_03   = ПС.ДепозитныеСчета;
	Счет55_04   = ПС.ПрочиеСпециальныеСчета;
	Счет55_21   = ПС.АккредитивыВал;
	Счет55_23   = ПС.ДепозитныеСчетаВал;
	Счет55_24   = ПС.ПрочиеСпециальныеСчетаВал;
	Счет57      = ПС.ПереводыВПути_;
	Счет58_01_1 = ПС.Паи;
	Счет58_01_2 = ПС.Акции;
	Счет58_02   = ПС.ДолговыеЦенныеБумаги;
	Счет58_03   = ПС.ПредоставленныеЗаймы;
	Счет58_04   = ПС.ВкладыПоДоговоруПростогоТоварищества;
	Счет58_05   = ПС.ПриобретенныеПрава;
	Счет59      = ПС.РезервыПодОбесценениеФинансовыхВложений;
	Счет60_01   = ПС.РасчетыСПоставщиками;
	Счет60_02   = ПС.РасчетыПоАвансамВыданным;
	Счет60_03   = ПС.ВекселяВыданные;
	Счет60_21   = ПС.РасчетыСПоставщикамиВал;
	Счет60_22   = ПС.РасчетыПоАвансамВыданнымВал;
	Счет60_31   = ПС.РасчетыСПоставщикамиУЕ;
	Счет60_32   = ПС.РасчетыПоАвансамВыданнымУЕ;

	Счет62_01   = ПС.РасчетыСПокупателями;
	Счет62_02   = ПС.РасчетыПоАвансамПолученным;
	Счет62_03   = ПС.ВекселяПолученные;
	Счет62_21   = ПС.РасчетыСПокупателямиВал;
	Счет62_22   = ПС.РасчетыПоАвансамПолученнымВал;
	Счет62_31   = ПС.РасчетыСПокупателямиУЕ;
	Счет62_32   = ПС.РасчетыПоАвансамПолученнымУЕ;

	Счет63      = ПС.РезервыПоСомнительнымДолгам;
	Счет66      = ПС.РасчетыПоКраткосрочнымКредитамИЗаймам;
	Счет67      = ПС.РасчетыПоДолгосрочнымКредитамИЗаймам;

	Счет68_01   = ПС.НДФЛ;
	Счет68_02   = ПС.НДС;
	Счет68_03   = ПС.Акцизы;
	Счет68_04   = ПС.НалогНаПрибыль;
	Счет68_04_1 = ПС.РасчетыСБюджетом;
	Счет68_04_2 = ПС.РасчетНалогаНаПрибыль;
	Счет68_07   = ПС.ТранспортныйНалог;
	Счет68_08   = ПС.НалогНаИмущество;
	Счет68_09   = ПС.НалогНаРекламу;
	Счет68_10   = ПС.ПрочиеНалогиИСборы;
	Счет68_11   = ПС.ЕНВД;
	Счет68_12   = ПС.ЕНприУСН;
	Счет68_22   = ПС.НДСпоЭкспортуКВозмещению;

	Если Есть68_32 Тогда
		Счет68_32   = ПС.НДСНалоговогоАгента;
	КонецЕсли;
	
	Счет69      = ПС.РасчетыПоСоциальномуСтрахованию;
	Счет70      = ПС.РасчетыСПерсоналомПоОплатеТруда;
	Счет71      = ПС.РасчетыСПодотчетнымиЛицами_;
	Счет73      = ПС.РасчетыСПерсоналомПоПрочимОперациям;
	Счет75_01   = ПС.РасчетыПоВкладамВУставныйКапитал;
	Счет75_02   = ПС.РасчетыПоВыплатеДоходов;

	Счет76_01   = ПС.РасчетыПоИмущественномуЛичномуИДобровольномуСтрахованию;
	Счет76_02   = ПС.РасчетыПоПретензиям;
	Счет76_03   = ПС.РасчетыПоПричитающимсяДивидендам;
	Счет76_04   = ПС.РасчетыПоДепонированнымСуммам;
	Счет76_05   = ПС.РасчетыСПрочимиПоставщикамиИПодрядчиками;
	Счет76_06   = ПС.РасчетыСПрочимиПокупателямиИЗаказчиками;
	Счет76_09   = ПС.ПрочиеРасчетыСРазнымиДебиторамиИКредиторами;
	Счет76_21   = ПС.РасчетыПоИмущественномуИЛичномуСтрахованиюВал;
	Счет76_22   = ПС.РасчетыПоПретензиямВал;
	Счет76_25   = ПС.РасчетыСПрочимиПоставщикамиИПодрядчикамиВал;
	Счет76_26   = ПС.РасчетыСПрочимиПокупателямиИЗаказчикамиВал;
	Счет76_29   = ПС.ПрочиеРасчетыСРазнымиДебиторамиИКредиторамиВал;
	Счет76_32   = ПС.РасчетыПоПретензиямУЕ;
	Счет76_35   = ПС.РасчетыСПрочимиПоставщикамиИПодрядчикамиУЕ;
	Счет76_36   = ПС.РасчетыСПрочимиПокупателямиИЗаказчикамиУЕ;
	Счет76_39   = ПС.ПрочиеРасчетыСРазнымиДебиторамиИКредиторамиУЕ;
	Счет76_41   = ПС.РасчетыПоИсполнительнымДокументамРаботников;
	Счет76_ВА   = ПС.НДСпоАвансамИПредоплатамВыданным;
	Счет76_АВ   = ПС.НДСпоАвансамИПредоплатам;
	Счет76_Н    = ПС.РасчетыПоНДСотложенномуДляУплатыВБюджет;

	Если ЭтоБалансДляАУ Тогда
		Счет76_51   = ПС.РасчетыПоЦелевомуФинансированию;
		Счет76_52   = ПС.РасчетыПоЦелевомуФинансированиюВал;
	КонецЕсли;

	Если Есть76НА Тогда
		Счет76_НА   = ПС.РасчетыНДСНалоговогоАгента;
	КонецЕсли;

	Счет76_ОТ   = ПС.НДСНачисленныйПоОтгрузке;

	Счет77      = ПС.ОтложенныеНалоговыеОбязательства;
	Счет79      = ПС.ВнутрихозяйственныеРасчеты;

	//Если ЭтоБалансДляАУ Тогда
	//	Счет08_14   = ПС.ПриобретениеОСВРамкахЦелевогоФинансирования;
	//	Счет76_51   = ПС.РасчетыПоЦелевомуФинансированию;
	//	Счет76_52   = ПС.РасчетыПоЦелевомуФинансированиюВал;
	//	Счет83_10   = ПС.НедвижимоеИОсобоЦенноеДвижимоеИмущество;
	//Иначе
		Счет80      = ПС.УставныйКапитал;
		Счет81      = ПС.СобственныеАкции;
		Счет82      = ПС.РезервныйКапитал;
	//	Счет82_01   = ПС.РезервыОбразованныеВСоответствииСЗаконодательством;
	//	Счет82_02   = ПС.РезервыОбразованныеВСоответствииСУчредительнымиДокументами;
	//КонецЕсли;
	
	Счет83      = ПС.ДобавочныйКапитал;

	// В разных конфиграциях счет 83.01 может иметь разное имя.
	Счет83_01   = ПС.НайтиПоКоду("83.01");

	Счет84      = ПС.НераспределеннаяПрибыль;
	Счет84_01   = ПС.ПрибыльПодлежащаяРаспределению;
	Счет84_02   = ПС.УбытокПодлежащийПокрытию;

	Счет86      = ПС.ЦелевоеФинансирование;

	Счет90_1   = ПС.Выручка;
	Счет90_2   = ПС.СебестоимостьПродаж;
	Счет90_3   = ПС.Продажи_НДС;
	Счет90_4   = ПС.Продажи_Акцизы;
	Счет90_5   = ПС.Продажи_ЭкспортныеПошлины;
	Счет90_7   = ПС.Продажи_РасходыНаПродажу;
	Счет90_8   = ПС.Продажи_УправленческиеРасходы;
	Счет91_1   = ПС.ПрочиеДоходы;
	Счет91_2   = ПС.ПрочиеРасходы;
	Счет99     = ПС.ПрибылиИУбытки;
	Счет99_1   = ПС.ПрибылиИУбыткиБезНалогаНаПрибыль;

	// В разных конфиграциях счет 99.01.1 может иметь разное имя.
	Счет99_1_1  = ПС.НайтиПоКоду("99.01.1");
	Счет99_01_2 = ПС.НайтиПоКоду("99.01.2");

	Счет99_2   = ПС.ПрибылиИУбытки_НалогНаПрибыль;
	Счет99_2_3 = ПС.ПостоянноеНалоговоеОбязательство;

	Если Есть99_2_4 Тогда
		Счет99_2_4 = ПС.ПрибылиИУбыткиОтПересчетаОНА_ОНО;
	КонецЕсли;

	Если Есть99_9 Тогда
		Счет99_9   = ПС.ПрочиеПрибылиИУбытки;
	КонецЕсли;

	Счет94      = ПС.НедостачиИПотериОтПорчиЦенностей;

	Счет96      = ПС.НайтиПоКоду("96");

	Счет97      = ПС.РасходыБудущихПериодов;
	Счет98      = ПС.ДоходыБудущихПериодов;
	

	СписокОрганизаций = Новый СписокЗначений;
	СписокОрганизаций.Добавить(Организация);
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(мГруппаОрганизаций, СписокОрганизаций);
	ТаблДанныхДопСтрокОбщ = РегламентированнаяОтчетность.ПолучитьСтруктуруТаблицыРО(ТаблДанныхДопСтрок);

	Для каждого Орг Из СписокОрганизаций Цикл

		мОргРасшифровка = Орг.Значение;

		// Бухгалтерский итоги по счетам
		мБухИтоги = Обработки.БухгалтерскиеИтоги.Создать();

		// Бухгалтерские итоги по аналитике
		мБухИтогиРС = Обработки.БухгалтерскиеИтоги.Создать();
	
		Итоги = "НачальныйОстатокДт, НачальныйРазвернутыйОстатокДт, 
		        |НачальныйОстатокКт, НачальныйРазвернутыйОстатокКт,
		        |КонечныйОстатокДт,  КонечныйРазвернутыйОстатокДт, 
		        |КонечныйОстатокКт,  КонечныйРазвернутыйОстатокКт";

		// Счета учета расчетов, на которых допустим учет авансов, - для расчета развернутого сальдо
		СчетаУчетаРасчетов = Новый Массив;
		СчетаУчетаРасчетов.Добавить(Счет60_01);
		СчетаУчетаРасчетов.Добавить(Счет60_21);
		СчетаУчетаРасчетов.Добавить(Счет60_31);
		СчетаУчетаРасчетов.Добавить(Счет62_01);
		СчетаУчетаРасчетов.Добавить(Счет62_21);
		СчетаУчетаРасчетов.Добавить(Счет62_31);

		// Виды субконто для расчета развернутого сальдо по счетам учета расчетов
		ВидыСубконтоДляРасчета = Новый Массив;
		ВидыСубконтоДляРасчета.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
		ВидыСубконтоДляРасчета.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);

		//Фактически, один и тот же алгоритм автозаполнения баланса будем выполнять 3 раза:
		//- на конец отчетного периода
		//- на конец предыдущего года
		//- на конец года, предшествующего предыдущему
		//
		// Данные извлекаем только на конец перирода, нет смысла получать их на начало периода.

		/////////////////////////////////////////////////////////////////////////////
		// ЗАПОЛНЕНИЕ БАЛАНСА

		// Бухгалтерские итоги по счетам, без аналитики
		мБухИтоги.РассчитатьИтоги("Хозрасчетный", Итоги, "Сумма", "Счет", мДатаНачалаПериодаОтчета, мДатаКонцаПериодаОтчета, , , , , , "Организация", мОргРасшифровка);

		// строка 1110 "Нематериальные активы"
		П0100111004_04_01 = СКД(Счет04_01);
		П0100111004_05    = СКК(Счет05);

		П0100111004 = П0100111004_04_01 - П0100111004_05;
		УстановитьЗначениеПоказателя("П000100111004", П0100111004);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100111004","Строка 1110 ""Нематериальные активы"", графа """ + ЗаголовокДатаОтчетная + """","+","!СКД", П0100111004_04_01, Счет04_01, , , , "Баланс");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100111004","","-","!СКК", -П0100111004_05, Счет05);

		// строка 1120 "Результаты исследований и разработок"
		// Так как расходы на НИОКР, учитываемые на счете 04.02, не амортизируются, 
		// а списываются на расходы по обычным видам деятельности, остаток 
		// на счете 04.02 равен остатку не списанных расходов на НИОКР

		П0100112004_04_02 = СКД(Счет04_02);

		УстановитьЗначениеПоказателя("П000100112004", П0100112004_04_02);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100112004", "Строка 1120 ""Результаты исследований и разработок"", графа """ + ЗаголовокДатаОтчетная + """", "+", "!СКД", П0100112004_04_02, Счет04_02, , , , "Баланс");

		// строка 1130 "Основные средства"
		П0100113004_01    = СКД(Счет01);
		П0100113004_02_01 = СКК(Счет02_01);

		П0100113004 = П0100113004_01 - П0100113004_02_01;
		УстановитьЗначениеПоказателя("П000100113004", П0100113004);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100113004", "Строка 1130 ""Основные средства"", графа """ + ЗаголовокДатаОтчетная + """", "+", "!СКД", П0100113004_01, , , , ,"Баланс");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100113004", "", "-", "!СКК", -П0100113004_02_01, Счет02_01);

	//	// строка 130 "Незавершенное строительство"
	//	П010013003_07    = СНД(Счет07);
	//	П010013003_08_01 = СНД(Счет08_01);
	//	П010013003_08_02 = СНД(Счет08_02);
	//	П010013003_08_03 = СНД(Счет08_03);
	//	П010013003_08_04 = СНД(Счет08_04);
	//	П010013003_08_06 = СНД(Счет08_06);
	//	П010013003_08_07 = СНД(Счет08_07);

	//	П010013003 = П010013003_07 + П010013003_08_01 + П010013003_08_02 + П010013003_08_03 + П010013003_08_04 + П010013003_08_06 + П010013003_08_07;
	//	
	//	Если ЭтоБалансДляАУ Тогда
	//		П010013003_08_14 = СНД(Счет08_14);
	//		П010013003 = П010013003 + П010013003_08_14;
	//	КонецЕсли;
	//	
	//	УстановитьЗначениеПоказателя("П000010013003", П010013003);

	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010013003", "Строка 130 ""Незавершенное строительство"", графа ""На начало отчетного года""", "+", "!СНД", П010013003_07, Счет07, , , , "Баланс");
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010013003", "", "+", "!СНД", П010013003_08_01, Счет08_01);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010013003", "", "+", "!СНД", П010013003_08_02, Счет08_02);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010013003", "", "+", "!СНД", П010013003_08_03, Счет08_03);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010013003", "", "+", "!СНД", П010013003_08_04, Счет08_04);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010013003", "", "+", "!СНД", П010013003_08_06, Счет08_06);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010013003", "", "+", "!СНД", П010013003_08_07, Счет08_07);
	//	Если ЭтоБалансДляАУ Тогда
	//		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010013003", "", "+", "!СНД", П010013003_08_14, Счет08_14);
	//	КонецЕсли;

	//	П010013004_07    = СКД(Счет07);
	//	П010013004_08_01 = СКД(Счет08_01);
	//	П010013004_08_02 = СКД(Счет08_02);
	//	П010013004_08_03 = СКД(Счет08_03);
	//	П010013004_08_04 = СКД(Счет08_04);
	//	П010013004_08_06 = СКД(Счет08_06);
	//	П010013004_08_07 = СКД(Счет08_07);
	//	
	//	П010013004 = П010013004_07 + П010013004_08_01 + П010013004_08_02 + П010013004_08_03 + П010013004_08_04 + П010013004_08_06 + П010013004_08_07;
	//	
	//	Если ЭтоБалансДляАУ Тогда
	//		П010013004_08_14 = СКД(Счет08_14);
	//		П010013004 = П010013004 + П010013004_08_14;
	//	КонецЕсли;
	//	
	//	УстановитьЗначениеПоказателя("П000010013004", П010013004);
	//	
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010013004", "Строка 130 ""Незавершенное строительство"", графа ""На конец отчетного периода""", "+", "!СКД", П010013004_07, Счет07, , , , "Баланс");
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010013004", "", "+", "!СКД", П010013004_08_01, Счет08_01);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010013004", "", "+", "!СКД", П010013004_08_02, Счет08_02);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010013004", "", "+", "!СКД", П010013004_08_03, Счет08_03);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010013004", "", "+", "!СКД", П010013004_08_04, Счет08_04);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010013004", "", "+", "!СКД", П010013004_08_06, Счет08_06);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010013004", "", "+", "!СКД", П010013004_08_07, Счет08_07);
	//	Если ЭтоБалансДляАУ Тогда
	//		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010013004", "", "+", "!СКД", П010013004_08_14, Счет08_14);
	//	КонецЕсли;

		// строка 1140 "Доходные вложения в материальные ценности"
		П0100114004_03    = СКД(Счет03);
		П0100114004_02_02 = СКК(Счет02_02);

		П0100114004 = П0100114004_03 - П0100114004_02_02;
		УстановитьЗначениеПоказателя("П000100114004", П0100114004);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100114004", "Строка 1140 ""Доходные вложения в материальные ценности"", графа """ + ЗаголовокДатаОтчетная + """", "+", "!СКД", П0100114004_03, Счет03, , , , "Баланс");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100114004", "", "-", "!СКК", -П0100114004_02_02, Счет02_02);

		// строка 1150 "Финансовые вложения"
		П0100115004 = СКД(Счет58_01_1);

		УстановитьЗначениеПоказателя("П000100115004", П0100115004);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100115004", "Строка 1150 ""Долгосрочные финансовые вложения"", графа """ + ЗаголовокДатаОтчетная + """", "+", "!СКД", П0100115004, Счет58_01_1, , , , "Баланс");

		// строка 1160 "Отложенные налоговые активы"

		// В балансе за отчетный год необходимо учесть возможную переоценку
		// отложенных налоговых активов и отложенных налоговых обязательств,
		// проведенную в связи с изменением ставки налога на прибыль. Результаты
		// переоценки должны показываться в балансе за год, следующий за отчетным,
		// но отражаются проводками в отчетном году. Для учета результатов
		// переоценки корректируем остатки счета 09 на конец периода на обороты
		// - в корреспонденции со счетом 99 (99.02.4) - для учета корректировок,
		//   выполненных в 2011 году и позднее.

		ОБ_09__99_2_4 = 0;
		ОБ_99_2_4__09 = 0;

		Если Есть99_2_4 Тогда

			ИтогиРС = "ОборотДт, ОборотКт, КорОборотДт, КорОборотКт";
			мБухИтогиРС.РассчитатьИтоги("Хозрасчетный", ИтогиРС, "Сумма", "Счет, КорСчет", мДатаНачалаПериодаОтчета, мДатаКонцаПериодаОтчета, , "09", , , , "Организация", мОргРасшифровка);

			ОБ_09__99_2_4 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотДт", "Счет, КорСчет", Счет09, Счет99_2_4);
			ОБ_99_2_4__09 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотКт", "Счет, КорСчет", Счет09, Счет99_2_4);

		КонецЕсли;

		П0100116004_09 = СКД(Счет09);

		П0100116004 = П0100116004_09 - ОБ_09__99_2_4 + ОБ_99_2_4__09;

		УстановитьЗначениеПоказателя("П000100116004", П0100116004);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100116004", "Строка 1160 ""Отложенные налоговые активы"", графа """ + ЗаголовокДатаОтчетная + """", "+", "!СКД", П0100116004_09, Счет09, , , , "Баланс");

		Если ((ОБ_09__99_2_4 <> 0) ИЛИ (ОБ_99_2_4__09 <> 0)) Тогда

			// Корректировку остатка счета 09 в расшифровку добавляем только тогда, 
			// когда такая корректировка существует
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100116004", "", "-", "!ОБ", -ОБ_09__99_2_4,     Счет09, Счет99_2_4,    , , "Баланс");
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100116004", "", "+", "!ОБ",  ОБ_99_2_4__09, Счет99_2_4,     Счет09,    , , "Баланс");

		КонецЕсли;

		// строка 1170 "Прочие внеоборотные активы"
		П0100117004_07 = СКД(Счет07);
		П0100117004_08 = СКД(Счет08);

		П0100117004 = П0100117004_07 + П0100117004_08;
		УстановитьЗначениеПоказателя("П000100117004", П0100117004);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100117004", "Строка 1170 ""Прочие внеоборотные активы"", графа ""На конец отчетного периода""", "+", "!СКД", П0100117004_07, Счет07, , , , "Баланс");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100117004", "", "+", "!СКД", П0100117004_08, Счет08);

		// строка 1210 "Запасы"
	
	//	// строка 211 "сырье, материалы и другие аналогичные ценности"
	//	П010021103_10      = СНД(Счет10);
	//	П010021103_14_01   = СНК(Счет14_01);
	//	П010021103_15_01   = СНД(Счет15_01);
	//	П010021103_16_01_Д = СНД(Счет16_01);
	//	П010021103_16_01_К = СНК(Счет16_01);

	//	П010021103 = П010021103_10 - П010021103_14_01 + П010021103_15_01 + П010021103_16_01_Д - П010021103_16_01_К;
	//	УстановитьЗначениеПоказателя("П000010021103", П010021103);

	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010021103", "Строка 211 ""сырье, материалы и другие аналогичные ценности"", графа ""На начало отчетного года""", "+", "!СНД", П010021103_10, Счет10, , , , "Баланс");
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010021103", "", "-", "!СНД", -П010021103_14_01, Счет14_01);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010021103", "", "+", "!СНД", П010021103_15_01, Счет15_01);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010021103", "", "+", "!СНД", П010021103_16_01_Д, Счет16_01);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010021103", "", "-", "!СНК", -П010021103_16_01_К, Счет16_01);

		П0100121004_10      = СКД(Счет10);
		П0100121004_14_01   = СКК(Счет14_01);
		П0100121004_15_01   = СКД(Счет15_01);
		П0100121004_16_01_Д = СКД(Счет16_01);
		П0100121004_16_01_К = СКК(Счет16_01);
		П0100121004_11      = СКД(Счет11);
		П0100121004_20      = СКД(Счет20);
		П0100121004_21      = СКД(Счет21);
		П0100121004_23      = СКД(Счет23);
		П0100121004_29      = СКД(Счет29);
		П0100121004_44      = СКД(Счет44);
		П0100121004_46      = СКД(Счет46);
		П0100121004_14_04   = СКК(Счет14_04);
		П0100121004_43      = СКД(Счет43);
		П0100121004_14_03   = СКК(Счет14_03);
		П0100121004_41      = СКД(Счет41);
		П0100121004_14_02   = СКК(Счет14_02);
		П0100121004_15_02   = СКД(Счет15_02);
		П0100121004_16_02_Д = СКД(Счет16_02);
		П0100121004_16_02_К = СКК(Счет16_02);
		П0100121004_42      = СКК(Счет42);
		П0100121004_45      = СКД(Счет45);
		П0100121004_28      = СКД(Счет28);

		П0100121004 = П0100121004_10 - П0100121004_14_01 + П0100121004_15_01 + П0100121004_16_01_Д - П0100121004_16_01_К
		            + П0100121004_11
		            + П0100121004_20 + П0100121004_21 + П0100121004_23 + П0100121004_29 + П0100121004_44 + П0100121004_46 - П0100121004_14_04
		            + П0100121004_43 - П0100121004_14_03 + П0100121004_41 - П0100121004_14_02 + П0100121004_15_02 + П0100121004_16_02_Д - П0100121004_16_02_К - П0100121004_42
		            + П0100121004_45
		            + П0100121004_28;

		УстановитьЗначениеПоказателя("П000100121004", П0100121004);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121004", "Строка 1210 ""Запасы"", графа """ + ЗаголовокДатаОтчетная + """", "+", "!СКД", П0100121004_10, Счет10, , , , "Баланс");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121004", "", "-", "!СКД", -П0100121004_14_01, Счет14_01);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121004", "", "+", "!СКД",  П0100121004_15_01, Счет15_01);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121004", "", "+", "!СКД",  П0100121004_16_01_Д, Счет16_01);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121004", "", "-", "!СКК", -П0100121004_16_01_К, Счет16_01);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121004", "", "+", "!СКД",  П0100121004_11, Счет11);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121004", "", "+", "!СКД",  П0100121004_20, Счет20);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121004", "", "+", "!СКД",  П0100121004_21, Счет21);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121004", "", "+", "!СКД",  П0100121004_23, Счет23);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121004", "", "+", "!СКД",  П0100121004_29, Счет29);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121004", "", "+", "!СКД",  П0100121004_44, Счет44);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121004", "", "+", "!СКД",  П0100121004_46, Счет46);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121004", "", "-", "!СКК", -П0100121004_14_04, Счет14_04);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121004", "", "+", "!СКД",  П0100121004_43, Счет43);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121004", "", "-", "!СКК", -П0100121004_14_03, Счет14_03);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121004", "", "+", "!СКД",  П0100121004_41, Счет41);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121004", "", "-", "!СКК", -П0100121004_14_02, Счет14_02);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121004", "", "+", "!СКД",  П0100121004_15_02, Счет15_02);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121004", "", "+", "!СКД",  П0100121004_16_02_Д, Счет16_02);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121004", "", "-", "!СКК", -П0100121004_16_02_К, Счет16_02);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121004", "", "-", "!СКК", -П0100121004_42, Счет42);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121004", "", "+", "!СКД",  П0100121004_45, Счет45);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121004", "", "+", "!СКД",  П0100121004_28, Счет28);

	//	// строка 212 "животные на выращивании и откорме"
	//	П010021203 = СНД(Счет11);
	//	УстановитьЗначениеПоказателя("П000010021203", П010021203);

	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010021203", "Строка 212 ""животные на выращивании и откорме"", графа ""На начало отчетного года""", "+", "!СНД", П010021203, Счет11, , , , "Баланс");

	//	УстановитьЗначениеПоказателя("П000010021204", П010021204);


	//	// строка 213 "затраты в незавершенном производстве (издержках обращения)"
	//	П010021303_20    = СНД(Счет20);
	//	П010021303_21    = СНД(Счет21);
	//	П010021303_23    = СНД(Счет23);
	//	П010021303_29    = СНД(Счет29);
	//	П010021303_44    = СНД(Счет44);
	//	П010021303_46    = СНД(Счет46);
	//	П010021303_14_04 = СНК(Счет14_04);

	//	П010021303 = П010021303_20 + П010021303_21 + П010021303_23 + П010021303_29 + П010021303_44 + П010021303_46 - П010021303_14_04;
	//	УстановитьЗначениеПоказателя("П000010021303", П010021303);

	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010021303", "Строка 213 ""затраты в незавершенном производстве (издержках обращения)"", графа ""На начало отчетного года""", "+", "!СНД", П010021303_20, Счет20, , , , "Баланс");
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010021303", "", "+", "!СНД", П010021303_21, Счет21);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010021303", "", "+", "!СНД", П010021303_23, Счет23);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010021303", "", "+", "!СНД", П010021303_29, Счет29);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010021303", "", "+", "!СНД", П010021303_44, Счет44);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010021303", "", "+", "!СНД", П010021303_46, Счет46);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010021303", "", "-", "!СНК", -П010021303_14_04, Счет14_04);


	//	УстановитьЗначениеПоказателя("П000010021304", П010021304);


	//	// строка 214 "готовая продукция и товары для перепродажи"
	//	П010021403_43      = СНД(Счет43);
	//	П010021403_14_03   = СНК(Счет14_03);
	//	П010021403_41      = СНД(Счет41);
	//	П010021403_14_02   = СНК(Счет14_02);
	//	П010021403_15_02   = СНД(Счет15_02);
	//	П010021403_16_02_Д = СНД(Счет16_02);
	//	П010021403_16_02_К = СНК(Счет16_02);
	//	П010021403_42      = СНК(Счет42);
	//	
	//	П010021403 = П010021403_43 - П010021403_14_03 + П010021403_41 - П010021403_14_02 + П010021403_15_02 + П010021403_16_02_Д - П010021403_16_02_К - П010021403_42;
	//	УстановитьЗначениеПоказателя("П000010021403", П010021403);

	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010021403", "Строка 214 ""готовая продукция и товары для перепродажи"", графа ""На начало отчетного года""", "+", "!СНД", П010021403_43, Счет43, , , , "Баланс");
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010021403", "", "-", "!СНК", -П010021403_14_03, Счет14_03);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010021403", "", "+", "!СНД", П010021403_41, Счет41);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010021403", "", "-", "!СНК", -П010021403_14_02, Счет14_02);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010021403", "", "+", "!СНД", П010021403_15_02, Счет15_02);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010021403", "", "+", "!СНД", П010021403_16_02_Д, Счет16_02);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010021403", "", "-", "!СНК", -П010021403_16_02_К, Счет16_02);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010021403", "", "-", "!СНК", -П010021403_42, Счет42);

	//	
	//	УстановитьЗначениеПоказателя("П000010021404", П010021404);

	//	// строка 215 "товары отгруженные"
	//	П010021503 = СНД(Счет45);
	//	УстановитьЗначениеПоказателя("П000010021503", П010021503);

	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010021503", "Строка 215 ""товары отгруженные"", графа ""На начало отчетного года""", "+", "!СНД", П010021503, Счет45, , , , "Баланс");

	//	УстановитьЗначениеПоказателя("П000010021504", П010021504);


	//	// строка 216 "расходы будущих периодов"
	//	П010021603 = СНД(Счет97);
	//	УстановитьЗначениеПоказателя("П000010021603", П010021603);

	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010021603", "Строка 216 ""расходы будущих периодов"", графа ""На начало отчетного года""", "+", "!СНД", П010021603, Счет97, , , , "Баланс");

	//	УстановитьЗначениеПоказателя("П000010021604", П010021604);

	//	// строка 217 "прочие запасы и затраты"
	//	П010021703 = СНД(Счет28);
	//	УстановитьЗначениеПоказателя("П000010021703", П010021703);

	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010021703", "Строка 217 ""прочие запасы и затраты"", графа ""На начало отчетного года""", "+", "!СНД", П010021703, Счет28, , , , "Баланс");

	//	П010021704 = СКД(Счет28);
	//	УстановитьЗначениеПоказателя("П000010021704", П010021704);

	
		// строка 1220 "Налог на добавленную стоимость по приобретенным ценностям"
		П0100122004_19    = СКД(Счет19);
		П0100122004_19_06 = СКД(Счет19_06);

		П0100122004 = П0100122004_19 - П0100122004_19_06;
		УстановитьЗначениеПоказателя("П000100122004", П0100122004);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100122004", "Строка 1220 ""Налог на добавленную стоимость по приобретенным ценностям"", графа """ + ЗаголовокДатаОтчетная + """", "+", "!СКД", П0100122004_19, Счет19, , , , "Баланс");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100122004", "", "-", "!СКД", -П0100122004_19_06, Счет19_06, , , , "Баланс");

		// Из-за отсутствия необходимой аналитики для анализа срока погашения задолженности, 
		// всю задолженность считаем краткосрочной.

		ИтогиРС = "НачальныйРазвернутыйОстатокДт, НачальныйРазвернутыйОстатокКт, КонечныйРазвернутыйОстатокДт, КонечныйРазвернутыйОстатокКт";

		мБухИтогиРС.РассчитатьИтоги("Хозрасчетный", ИтогиРС, "Сумма", "Счет, Субконто1", мДатаНачалаПериодаОтчета, мДатаКонцаПериодаОтчета, , "76", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты, , , "Организация", мОргРасшифровка);

		//П010024003_76_01 = 0;
		П010024004_76_01 = 0;
		
		//П010062503_76_01 = 0;
		П010062504_76_01 = 0;

		ВыборкаПоСчету = мБухИтогиРС.ПолучитьОстаткиИОбороты("Счет", Счет76_01);

		Если НЕ ВыборкаПоСчету = Неопределено Тогда

	//		П010024003_76_01 = ВыборкаПоСчету.СуммаНачальныйРазвернутыйОстатокДт;
			П010024004_76_01 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокДт;

	//		П010062503_76_01 = ВыборкаПоСчету.СуммаНачальныйРазвернутыйОстатокКт;
			П010062504_76_01 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокКт;

		КонецЕсли;

	//	П010024003_76_21 = 0;
		П010024004_76_21 = 0;

	//	П010062503_76_21 = 0;
		П010062504_76_21 = 0;

		ВыборкаПоСчету = мБухИтогиРС.ПолучитьОстаткиИОбороты("Счет", Счет76_21);

		Если НЕ ВыборкаПоСчету = Неопределено Тогда

	//		П010024003_76_21 = ВыборкаПоСчету.СуммаНачальныйРазвернутыйОстатокДт;
			П010024004_76_21 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокДт;

	//		П010062503_76_21 = ВыборкаПоСчету.СуммаНачальныйРазвернутыйОстатокКт;
			П010062504_76_21 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокКт;

		КонецЕсли;

	//	П010024003_76_05 = 0;
		П010024004_76_05 = 0;

	//	П010062103_76_05 = 0;
		П010062104_76_05 = 0;

		ВыборкаПоСчету = мБухИтогиРС.ПолучитьОстаткиИОбороты("Счет", Счет76_05);

		Если НЕ ВыборкаПоСчету = Неопределено Тогда

	//		П010024003_76_05 = ВыборкаПоСчету.СуммаНачальныйРазвернутыйОстатокДт;
			П010024004_76_05 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокДт;

	//		П010062103_76_05 = ВыборкаПоСчету.СуммаНачальныйРазвернутыйОстатокКт;
			П010062104_76_05 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокКт;

		КонецЕсли;

	//	П010024003_76_25 = 0;
		П010024004_76_25 = 0;

	//	П010062103_76_25 = 0;
		П010062104_76_25 = 0;

		ВыборкаПоСчету = мБухИтогиРС.ПолучитьОстаткиИОбороты("Счет", Счет76_25);

		Если НЕ ВыборкаПоСчету = Неопределено Тогда

	//		П010024003_76_25 = ВыборкаПоСчету.СуммаНачальныйРазвернутыйОстатокДт;
			П010024004_76_25 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокДт;

	//		П010062103_76_25 = ВыборкаПоСчету.СуммаНачальныйРазвернутыйОстатокКт;
			П010062104_76_25 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокКт;

		КонецЕсли;

	//	П010024003_76_35 = 0;
		П010024004_76_35 = 0;

	//	П010062103_76_35 = 0;
		П010062104_76_35 = 0;

		ВыборкаПоСчету = мБухИтогиРС.ПолучитьОстаткиИОбороты("Счет", Счет76_35);

		Если НЕ ВыборкаПоСчету = Неопределено Тогда

	//		П010024003_76_35 = ВыборкаПоСчету.СуммаНачальныйРазвернутыйОстатокДт;
			П010024004_76_35 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокДт;

	//		П010062103_76_35 = ВыборкаПоСчету.СуммаНачальныйРазвернутыйОстатокКт;
			П010062104_76_35 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокКт;

		КонецЕсли;

	//	П010024103_76_06 = 0;
		П010024104_76_06 = 0;

	//	П010062103_76_06 = 0;
		П010062104_76_06 = 0;

		ВыборкаПоСчету = мБухИтогиРС.ПолучитьОстаткиИОбороты("Счет", Счет76_06);

		Если НЕ ВыборкаПоСчету = Неопределено Тогда

	//		П010024103_76_06 = ВыборкаПоСчету.СуммаНачальныйРазвернутыйОстатокДт;
			П010024104_76_06 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокДт;

	//		П010062103_76_06 = ВыборкаПоСчету.СуммаНачальныйРазвернутыйОстатокКт;
			П010062104_76_06 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокКт;

		КонецЕсли;

	//	П010024103_76_26 = 0;
		П010024104_76_26 = 0;

	//	П010062103_76_26 = 0;
		П010062104_76_26 = 0;

		ВыборкаПоСчету = мБухИтогиРС.ПолучитьОстаткиИОбороты("Счет", Счет76_26);

		Если НЕ ВыборкаПоСчету = Неопределено Тогда

	//		П010024103_76_26 = ВыборкаПоСчету.СуммаНачальныйРазвернутыйОстатокДт;
			П010024104_76_26 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокДт;

	//		П010062103_76_26 = ВыборкаПоСчету.СуммаНачальныйРазвернутыйОстатокКт;
			П010062104_76_26 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокКт;

		КонецЕсли;

	//	П010024103_76_36 = 0;
		П010024104_76_36 = 0;

	//	П010062103_76_36 = 0;
		П010062104_76_36 = 0;

		ВыборкаПоСчету = мБухИтогиРС.ПолучитьОстаткиИОбороты("Счет", Счет76_36);

		Если НЕ ВыборкаПоСчету = Неопределено Тогда

	//		П010024103_76_36 = ВыборкаПоСчету.СуммаНачальныйРазвернутыйОстатокДт;
			П010024104_76_36 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокДт;

	//		П010062103_76_36 = ВыборкаПоСчету.СуммаНачальныйРазвернутыйОстатокКт;
			П010062104_76_36 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокКт;

		КонецЕсли;

	//	П010024003_76_09 = 0;
		П010024004_76_09 = 0;
		
	//	П010062503_76_09 = 0;
		П010062504_76_09 = 0;

		ВыборкаПоСчету = мБухИтогиРС.ПолучитьОстаткиИОбороты("Счет", Счет76_09);

		Если НЕ ВыборкаПоСчету = Неопределено Тогда

	//		П010024003_76_09 = ВыборкаПоСчету.СуммаНачальныйРазвернутыйОстатокДт;
			П010024004_76_09 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокДт;

	//		П010062503_76_09 = ВыборкаПоСчету.СуммаНачальныйРазвернутыйОстатокКт;
			П010062504_76_09 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокКт;

		КонецЕсли;

	//	П010024003_76_29 = 0;
		П010024004_76_29 = 0;
		
	//	П010062503_76_29 = 0;
		П010062504_76_29 = 0;

		ВыборкаПоСчету = мБухИтогиРС.ПолучитьОстаткиИОбороты("Счет", Счет76_29);

		Если НЕ ВыборкаПоСчету = Неопределено Тогда

	//		П010024003_76_29 = ВыборкаПоСчету.СуммаНачальныйРазвернутыйОстатокДт;
			П010024004_76_29 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокДт;

	//		П010062503_76_29 = ВыборкаПоСчету.СуммаНачальныйРазвернутыйОстатокКт;
			П010062504_76_29 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокКт;

		КонецЕсли;

	//	П010024003_76_39 = 0;
		П010024004_76_39 = 0;
	
	//	П010062503_76_39 = 0;
		П010062504_76_39 = 0;

		ВыборкаПоСчету = мБухИтогиРС.ПолучитьОстаткиИОбороты("Счет", Счет76_39);

		Если НЕ ВыборкаПоСчету = Неопределено Тогда

	//		П010024003_76_39 = ВыборкаПоСчету.СуммаНачальныйРазвернутыйОстатокДт;
			П010024004_76_39 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокДт;

	//		П010062503_76_39 = ВыборкаПоСчету.СуммаНачальныйРазвернутыйОстатокКт;
			П010062504_76_39 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокКт;

		КонецЕсли;

	//	П010024003_76_НА = 0;
		П010024004_76_НА = 0;

	//	П010062503_76_НА = 0;
		П010062504_76_НА = 0;

		Если Есть76НА Тогда

			ВыборкаПоСчету = мБухИтогиРС.ПолучитьОстаткиИОбороты("Счет", Счет76_НА);

			Если НЕ ВыборкаПоСчету = Неопределено Тогда

				П010024004_76_НА = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокДт;
				П010062504_76_НА = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокКт;

			КонецЕсли;
		КонецЕсли;
		
		Если ЭтоБалансДляАУ Тогда
			
			П010024004_76_51 = 0;
			П010062504_76_51 = 0;

			ВыборкаПоСчету = мБухИтогиРС.ПолучитьОстаткиИОбороты("Счет", Счет76_51);

			Если НЕ ВыборкаПоСчету = Неопределено Тогда

				П010024004_76_51 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокДт;
				П010062504_76_51 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокКт;

			КонецЕсли;
			
			П010024004_76_52 = 0;
			П010062504_76_52 = 0;

			ВыборкаПоСчету = мБухИтогиРС.ПолучитьОстаткиИОбороты("Счет", Счет76_52);

			Если НЕ ВыборкаПоСчету = Неопределено Тогда

				П010024004_76_52 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокДт;
				П010062504_76_52 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокКт;

			КонецЕсли;
			
		КонецЕсли;
		
		// На активных счетах учета расчетов с покупателями и заказчиками, на которых
		// допускается учет авансов, может возникать ситуация, когда полученный аванс
		// "уводит" остаток в минус, то есть в кредит. В этом случае этот отрицательый
		// остаток надо извлечь и затем прибавить к кредиторской  задолженности, которая
		// образовалась на счетах учета полученных авансов.
		
		ИтогиРС = "НачальныйРазвернутыйОстатокДт, НачальныйРазвернутыйОстатокКт, КонечныйРазвернутыйОстатокДт, КонечныйРазвернутыйОстатокКт";

		мБухИтогиРС.РассчитатьИтоги("Хозрасчетный", ИтогиРС, "Сумма", "Счет, Субконто1, Субконто2", мДатаНачалаПериодаОтчета, мДатаКонцаПериодаОтчета, , СчетаУчетаРасчетов, ВидыСубконтоДляРасчета, , , "Организация", мОргРасшифровка);

		// В дебиторской задолженности учитываем только дебетовое развернутое сальдо
		П010024104_62_01_СКД = мБухИтогиРС.ПолучитьИтог("СуммаКонечныйРазвернутыйОстатокДт",  "Счет", Счет62_01);
		П010024104_62_21_СКД = мБухИтогиРС.ПолучитьИтог("СуммаКонечныйРазвернутыйОстатокДт",  "Счет", Счет62_21);
		П010024104_62_31_СКД = мБухИтогиРС.ПолучитьИтог("СуммаКонечныйРазвернутыйОстатокДт",  "Счет", Счет62_31);

		// Кредитовое сальдо учитываем в кредиторской задолженности
		П010062504_62_01_СКК = мБухИтогиРС.ПолучитьИтог("СуммаКонечныйРазвернутыйОстатокКт",  "Счет", Счет62_01);
		П010062504_62_21_СКК = мБухИтогиРС.ПолучитьИтог("СуммаКонечныйРазвернутыйОстатокКт",  "Счет", Счет62_21);
		П010062504_62_31_СКК = мБухИтогиРС.ПолучитьИтог("СуммаКонечныйРазвернутыйОстатокКт",  "Счет", Счет62_31);

		// На пассивных счетах учета расчетов с поставщиками и подрядчиками, на которых допускается 
		// учет авансов, может возникать ситуация, когда выплаченный аванс "уводит" 
		// остаток в минус, то есть в дебет. В этом случае этот отрицательый кредитовый остаток 
		// надо извлечь и затем прибавить к дебиторской задолженности, которая 
		// образовалась на счетах учета выплаченных авансов.
		
		// В кредиторской задолженности учитываем только кредитовое сальдо
		П010062104_60_01_СКК = мБухИтогиРС.ПолучитьИтог("СуммаКонечныйРазвернутыйОстатокКт",  "Счет", Счет60_01);
		П010062104_60_21_СКК = мБухИтогиРС.ПолучитьИтог("СуммаКонечныйРазвернутыйОстатокКт",  "Счет", Счет60_21);
		П010062104_60_31_СКК = мБухИтогиРС.ПолучитьИтог("СуммаКонечныйРазвернутыйОстатокКт",  "Счет", Счет60_31);

		// Дебетовое сальдо учитываем в дебиторской задолженности.
		П010024004_60_01_СКД = мБухИтогиРС.ПолучитьИтог("СуммаКонечныйРазвернутыйОстатокДт",  "Счет", Счет60_01);
		П010024004_60_21_СКД = мБухИтогиРС.ПолучитьИтог("СуммаКонечныйРазвернутыйОстатокДт",  "Счет", Счет60_21);
		П010024004_60_31_СКД = мБухИтогиРС.ПолучитьИтог("СуммаКонечныйРазвернутыйОстатокДт",  "Счет", Счет60_31);

		П010024104_62_03 = СКД(Счет62_03);
		П010024104_63    = СКК(Счет63);

		П010024104 = П010024104_62_01_СКД
				   + П010024104_62_21_СКД
				   + П010024104_62_31_СКД
				   + П010024104_62_03
				   - П010024104_63
				   + П010024104_76_06
				   + П010024104_76_26
				   + П010024104_76_36;

		П010024004_60_02 = СКД(Счет60_02);
		П010024004_60_22 = СКД(Счет60_22);
		П010024004_60_32 = СКД(Счет60_32);

		// в строку 240 входят данные по строке 241
		П010024004 = П010024104
				   + П010024004_60_02
				   + П010024004_60_01_СКД
				   + П010024004_60_22
				   + П010024004_60_21_СКД
				   + П010024004_60_32
				   + П010024004_60_31_СКД;

		// Если задолженность не анализируется, все задолженности считаем краткосрочными

		// Данные для строки 250 собираются последовательно. Это - часть 1.
		
		// строка 250 "Краткосрочные финансовые вложения"
		
		П010025004_58_01_2 = СКД(Счет58_01_2);
		П010025004_58_02   = СКД(Счет58_02);
		П010025004_58_03   = СКД(Счет58_03);
		П010025004_58_04   = СКД(Счет58_04);
		П010025004_58_05   = СКД(Счет58_05);
		П010025004_59      = СКК(Счет59);

		П010025004 = П010025004_58_01_2 + П010025004_58_02 - П010025004_59 + П010025004_58_03 + П010025004_58_04 + П010025004_58_05;

		// Собираем данные по субсчетам счета 68

		// Развернутые итоги по субсчету 68.04.1 по бюджетам
		мБухИтогиРС.РассчитатьИтоги("Хозрасчетный", ИтогиРС, "Сумма", "Счет, Субконто1", мДатаНачалаПериодаОтчета, мДатаКонцаПериодаОтчета, , "68.04.1", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.УровниБюджетов, , , "Организация", мОргРасшифровка);

		ВыборкаПоСчету = мБухИтогиРС.ПолучитьОстаткиИОбороты("Счет", Счет68_04_1);

		П010024004_68_04_1 = 0;
		П010062404_68_04_1 = 0;

		Если НЕ ВыборкаПоСчету = Неопределено Тогда

			П010024004_68_04_1 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокДт;
			П010062404_68_04_1 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокКт;

		КонецЕсли;
		
		// Развернутые итоги по субсчету 68.10 по бюджетам
		мБухИтогиРС.РассчитатьИтоги("Хозрасчетный", ИтогиРС, "Сумма", "Счет, Субконто1", мДатаНачалаПериодаОтчета, мДатаКонцаПериодаОтчета, , "68.10", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.УровниБюджетов, , , "Организация", мОргРасшифровка);

		ВыборкаПоСчету = мБухИтогиРС.ПолучитьОстаткиИОбороты("Счет", Счет68_10);

		П010024004_68_10 = 0;
		П010062404_68_10 = 0;

		Если НЕ ВыборкаПоСчету = Неопределено Тогда
			П010024004_68_10 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокДт;
			П010062404_68_10 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокКт;
		КонецЕсли;

		П010024004_68_01   = СКД(Счет68_01);
		П010024004_68_02   = СКД(Счет68_02);
		П010024004_68_03   = СКД(Счет68_03);

		П010024004_68_04_2 = СКД(Счет68_04_2);
		П010024004_68_07   = СКД(Счет68_07);
		П010024004_68_08   = СКД(Счет68_08);
		П010024004_68_09   = СКД(Счет68_09);

		П010024004_68_11   = СКД(Счет68_11);
		П010024004_68_12   = СКД(Счет68_12);

		П010024004_68 = 0;
		
		П010024004_68 = П010024004_68_01
					  + П010024004_68_02
					  + П010024004_68_03
					  + П010024004_68_04_1
					  + П010024004_68_04_2
					  + П010024004_68_07
					  + П010024004_68_08
					  + П010024004_68_09
					  + П010024004_68_10
					  + П010024004_68_11
					  + П010024004_68_12;

		П010062404_68_01   = СКК(Счет68_01);
		П010062404_68_02   = СКК(Счет68_02);
		П010062404_68_03   = СКК(Счет68_03);

		П010062404_68_04_2 = СКК(Счет68_04_2);
		П010062404_68_07   = СКК(Счет68_07);
		П010062404_68_08   = СКК(Счет68_08);
		П010062404_68_09   = СКК(Счет68_09);

		П010062404_68_11   = СКК(Счет68_11);
		П010062404_68_12   = СКК(Счет68_12);
		П010062404_68_22   = СКК(Счет68_22);

		П010062404_68_32   = 0;
		Если Есть68_32 Тогда
			П010062404_68_32   = СКК(Счет68_32);
		КонецЕсли;

		П010062404_68 = 0;
		
		П010062404_68 = П010062404_68_01
					  + П010062404_68_02
					  + П010062404_68_03
					  + П010062404_68_04_1
					  + П010062404_68_04_2
					  + П010062404_68_07
					  + П010062404_68_08
					  + П010062404_68_09
					  + П010062404_68_10
					  + П010062404_68_11
					  + П010062404_68_12
					  + П010062404_68_22
		              + П010062404_68_32;

		// Собираем данные по субсчетам счета 69
		П010024004_69 = СКДР(Счет69);
		П010062304_69 = СККР(Счет69);

		// Развернутые итоги по счету 71
		ИДКонфигурации = РегламентированнаяОтчетность.ИДКонфигурации();
		Если ИДКонфигурации = "УПП" ИЛИ ИДКонфигурации = "КА" Тогда
			мБухИтогиРС.РассчитатьИтоги("Хозрасчетный", ИтогиРС, "Сумма", "Счет, Субконто1", мДатаНачалаПериодаОтчета, мДатаКонцаПериодаОтчета, , "71", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации, , , "Организация", мОргРасшифровка);
		ИначеЕсли ИДКонфигурации = "БП" ИЛИ ИДКонфигурации = "БПКОРП" ИЛИ ИДКонфигурации = "БАУКОРП" ИЛИ ИДКонфигурации = "БАУ" Тогда
			мБухИтогиРС.РассчитатьИтоги("Хозрасчетный", ИтогиРС, "Сумма", "Счет, Субконто1", мДатаНачалаПериодаОтчета, мДатаКонцаПериодаОтчета, , "71", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизаций, , , "Организация", мОргРасшифровка);
		КонецЕсли;

		ВыборкаПоСчету = мБухИтогиРС.ПолучитьОстаткиИОбороты("Счет", Счет71);

		П010024004_71 = 0;
		П010062504_71 = 0;

		Если НЕ ВыборкаПоСчету = Неопределено Тогда
			П010024004_71 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокДт;
			П010062504_71 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокКт;
		КонецЕсли;

		// Здесь продолжается сборка данных для строки 240

		П010024004_73    = СКД(Счет73);
		П010024004_75_01 = СКД(Счет75_01);
		П010024004_76_02 = СКД(Счет76_02);
		П010024004_76_22 = СКД(Счет76_22);
		П010024004_76_32 = СКД(Счет76_32);
		П010024004_76_03 = СКД(Счет76_03);
		П010024004_76_41 = СКД(Счет76_41);
		П010024004_79    = СКД(Счет79);

		П010024004 = П010024004
				   + П010024004_68
				   + П010024004_69
				   + П010024004_71
				   + П010024004_73
				   + П010024004_75_01
				   + П010024004_76_01
				   + П010024004_76_21
				   + П010024004_76_02
				   + П010024004_76_22
				   + П010024004_76_32
				   + П010024004_76_05
				   + П010024004_76_25
				   + П010024004_76_03
				   + П010024004_76_35
				   + П010024004_76_09
				   + П010024004_76_29
				   + П010024004_76_39
				   + П010024004_76_41
				   + П010024004_79;

		Если ЭтоБалансДляАУ Тогда
			П010024004 = П010024004
					   + П010024004_76_51
					   + П010024004_76_52;
		КонецЕсли;

		УстановитьЗначениеПоказателя("П000100123004", П010024004);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123004", "Строка 1230 ""Дебиторская задолженность"", графа """ + ЗаголовокДатаОтчетная + """", "+", "!СКД", П010024004_60_02, Счет60_02);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123004", "", "+", "Сальдо отрицательное на конец периода по кредиту счета 60.01, развернутое по субконто ""Контрагенты"", ""Договоры""", П010024004_60_01_СКД, Счет60_01);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123004", "", "+", "!СКД", П010024004_60_22, Счет60_22);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123004", "", "+", "Сальдо отрицательное на конец периода по кредиту счета 60.21, развернутое по субконто ""Контрагенты"", ""Договоры""", П010024004_60_21_СКД, Счет60_21);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123004", "", "+", "!СКД", П010024004_60_32, Счет60_32);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123004", "", "+", "Сальдо отрицательное на конец периода по кредиту счета 60.31, развернутое по субконто ""Контрагенты"", ""Договоры""", П010024004_60_31_СКД, Счет60_31);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123004", "", "+", "!СКД", П010024004_68_01, Счет68_01);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123004", "", "+", "!СКД", П010024004_68_02, Счет68_02);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123004", "", "+", "!СКД", П010024004_68_03, Счет68_03);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123004", "", "+", "Сальдо на конец периода по дебету счета 68.04.1 по субконто ""Уровни бюджетов""", П010024004_68_04_1, Счет68_04_1);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123004", "", "+", "!СКД", П010024004_68_04_2, Счет68_04_2);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123004", "", "+", "!СКД", П010024004_68_07, Счет68_07);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123004", "", "+", "!СКД", П010024004_68_08, Счет68_08);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123004", "", "+", "!СКД", П010024004_68_09, Счет68_09);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123004", "", "+", "Сальдо на конец периода по дебету счета 68.10 по субконто ""Уровни бюджетов""", П010024004_68_10, Счет68_10);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123004", "", "+", "!СКД", П010024004_68_11, Счет68_11);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123004", "", "+", "!СКД", П010024004_68_12, Счет68_12);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123004", "", "+", "!СКДР", П010024004_69, Счет69);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123004", "", "+", "Сальдо на конец периода по дебету счета 71, развернутое по субконто ""Работники организации""", П010024004_71, Счет71);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123004", "", "+", "!СКД", П010024004_73, Счет73);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123004", "", "+", "!СКД", П010024004_75_01, Счет75_01);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123004", "", "+", "Сальдо на конец периода по дебету счета 76.01, развернутое по субконто ""Контрагенты""", П010024004_76_01, Счет76_01);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123004", "", "+", "Сальдо на конец периода по дебету счета 76.21, развернутое по субконто ""Контрагенты""", П010024004_76_21, Счет76_21);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123004", "", "+", "!СКД", П010024004_76_02, Счет76_02);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123004", "", "+", "!СКД", П010024004_76_22, Счет76_22);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123004", "", "+", "!СКД", П010024004_76_03, Счет76_03);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123004", "", "+", "!СКД", П010024004_76_32, Счет76_32);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123004", "", "+", "Сальдо на конец периода по дебету счета 76.05, развернутое по субконто ""Контрагенты""", П010024004_76_05, Счет76_05);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123004", "", "+", "Сальдо на конец периода по дебету счета 76.25, развернутое по субконто ""Контрагенты""", П010024004_76_25, Счет76_25);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123004", "", "+", "Сальдо на конец периода по дебету счета 76.35, развернутое по субконто ""Контрагенты""", П010024004_76_35, Счет76_35);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123004", "", "+", "Сальдо на конец периода по дебету счета 76.09, развернутое по субконто ""Контрагенты""", П010024004_76_09, Счет76_09);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123004", "", "+", "Сальдо на конец периода по дебету счета 76.29, развернутое по субконто ""Контрагенты""", П010024004_76_29, Счет76_29);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123004", "", "+", "Сальдо на конец периода по дебету счета 76.39, развернутое по субконто ""Контрагенты""", П010024004_76_39, Счет76_39);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123004", "", "+", "!СКД", П010024004_76_41, Счет76_41);
		
		Если ЭтоБалансДляАУ Тогда
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123004", "", "+", "Сальдо на конец периода по дебету счета 76.51, развернутое по субконто ""Контрагенты""", П010024004_76_51, Счет76_51);
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123004", "", "+", "Сальдо на конец периода по дебету счета 76.52, развернутое по субконто ""Контрагенты""", П010024004_76_52, Счет76_52);
		КонецЕсли;

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123004", "", "+", "!СКД", П010024004_79, Счет79);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123004", "", "+", "Сальдо на конец периода по дебету счета 62.01, развернутое по субконто ""Контрагенты"", ""Договоры""", П010024104_62_01_СКД, Счет62_01);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123004", "", "+", "Сальдо на конец периода по дебету счета 62.21, развернутое по субконто ""Контрагенты"", ""Договоры""", П010024104_62_21_СКД, Счет62_21);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123004", "", "+", "Сальдо на конец периода по дебету счета 62.31, развернутое по субконто ""Контрагенты"", ""Договоры""", П010024104_62_31_СКД, Счет62_31);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123004", "", "+", "!СКД", П010024104_62_03, Счет62_03);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123004", "", "-", "!СКК", -П010024104_63, Счет63);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123004", "", "+", "Сальдо на конец периода по дебету счета 76.06, развернутое по субконто ""Контрагенты""", П010024104_76_06, Счет76_06);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123004", "", "+", "Сальдо на конец периода по дебету счета 76.26, развернутое по субконто ""Контрагенты""", П010024104_76_26, Счет76_26);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123004", "", "+", "Сальдо на конец периода по дебету счета 76.36, развернутое по субконто ""Контрагенты""", П010024104_76_36, Счет76_36);

		// строка 1240 "финансовые вложения"

		П010025004_55_03 = СКД(Счет55_03);
		П010025004_55_23 = СКД(Счет55_23);
		
		П010025004 = П010025004 + П010025004_55_03 + П010025004_55_23;
		УстановитьЗначениеПоказателя("П000100124004", П010025004);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100124004", "Строка 1240 ""Краткосрочные финансовые вложения"", графа """ + ЗаголовокДатаОтчетная + """", "+", "!СКД", П010025004_58_01_2, Счет58_01_2, , , , "Баланс");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100124004", "", "+", "!СКД", П010025004_58_02, Счет58_02);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100124004", "", "-", "!СКК", -П010025004_59, Счет59);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100124004", "", "+", "!СКД", П010025004_58_03, Счет58_03);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100124004", "", "+", "!СКД", П010025004_58_04, Счет58_04);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100124004", "", "+", "!СКД", П010025004_58_05, Счет58_05);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100124004", "", "+", "!СКД", П010025004_55_03, Счет55_03);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100124004", "", "+", "!СКД", П010025004_55_23, Счет55_23);

		// строка 1250 "Денежные средства"

		П010026004_50_01 = СКД(Счет50_01);
		П010026004_50_02 = СКД(Счет50_02);
		П010026004_50_21 = СКД(Счет50_21);
		П010026004_51    = СКД(Счет51);
		П010026004_52    = СКД(Счет52);
		П010026004_55_01 = СКД(Счет55_01);
		П010026004_55_02 = СКД(Счет55_02);
		П010026004_55_04 = СКД(Счет55_04);
		П010026004_55_21 = СКД(Счет55_21);
		П010026004_55_24 = СКД(Счет55_24);
		П010026004_57    = СКД(Счет57);

		П010026004 = П010026004_50_01
		           + П010026004_50_02
		           + П010026004_50_21
				   + П010026004_51
				   + П010026004_52
				   + П010026004_55_01
				   + П010026004_55_02
				   + П010026004_55_04
				   + П010026004_55_21
				   + П010026004_55_24
				   + П010026004_57;

		УстановитьЗначениеПоказателя("П000100125004", П010026004);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100125004", "Строка 1250 ""Денежные средства"", графа """ + ЗаголовокДатаОтчетная + """", "+", "!СКД", П010026004_50_01, Счет50_01, , , , "Баланс");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100125004", "", "+", "!СКД", П010026004_50_02, Счет50_02);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100125004", "", "+", "!СКД", П010026004_50_21, Счет50_21);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100125004", "", "+", "!СКД", П010026004_51, Счет51);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100125004", "", "+", "!СКД", П010026004_52, Счет52);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100125004", "", "+", "!СКД", П010026004_55_01, Счет55_01);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100125004", "", "+", "!СКД", П010026004_55_02, Счет55_02);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100125004", "", "+", "!СКД", П010026004_55_04, Счет55_04);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100125004", "", "+", "!СКД", П010026004_55_21, Счет55_21);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100125004", "", "+", "!СКД", П010026004_55_24, Счет55_24);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100125004", "", "+", "!СКД", П010026004_57, Счет57);

		// строка 1260 "Прочие оборотные активы"

		П0100126004_50_03 = СКД(Счет50_03);
		П0100126004_50_23 = СКД(Счет50_23);
		П0100126004_68_22 = СКД(Счет68_22);
		П0100126004_76_АВ = СКД(Счет76_АВ);
		П0100126004_76_ОТ = СКД(Счет76_ОТ);
		П0100126004_94    = СКД(Счет94);
		П0100126004_97    = СКД(Счет97);

		П0100126004 = П0100122004_19_06 // из строки 1220
		            + П0100126004_50_03
		            + П0100126004_50_23
		            + П0100126004_68_22
		            + П0100126004_76_АВ
		            + П0100126004_76_ОТ
		            + П010024004_76_НА
		            + П0100126004_94
		            + П0100126004_97;

		УстановитьЗначениеПоказателя("П000100126004", П0100126004);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100126004", "Строка 1260 ""Прочие оборотные активы"", графа """ + ЗаголовокДатаОтчетная + """", "+", "!СКД", П0100122004_19_06, Счет19_06, , , , "Баланс");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100126004", "", "+", "!СКД", П0100126004_50_03, Счет50_03);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100126004", "", "+", "!СКД", П0100126004_50_23, Счет50_23);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100126004", "", "+", "!СКД", П0100126004_68_22, Счет68_22);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100126004", "", "+", "!СКД", П0100126004_76_АВ, Счет76_АВ);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100126004", "", "+", "!СКД", П0100126004_76_ОТ, Счет76_ОТ);

		Если Есть76НА Тогда
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100126004", "", "+", "Сальдо на конец периода по дебету счета 76.НА, развернутое по субконто ""Контрагенты""", П010024004_76_НА, Счет76_НА);
		КонецЕсли;

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100126004", "", "+", "!СКД", П0100126004_94, Счет94);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100126004", "", "+", "!СКД", П0100126004_97, Счет97);

		// строка 1310 "Уставный капитал"

		П0100131004 = СКК(Счет80);
		УстановитьЗначениеПоказателя("П000100131004", П0100131004);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100131004", "Строка 1310 ""Уставный капитал"", графа """ + ЗаголовокДатаОтчетная + """", "+", "!СКК", П0100131004, Счет80, , , , "Баланс");

		// строка 1320 "Собственные акции, выкупленные у акционеров"

		П0100132004 = -СКД(Счет81);
		УстановитьЗначениеПоказателя("П000100132004", П0100132004);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100132004", "Строка 1320 ""Собственные акции, выкупленные у акционеров"", графа """ + ЗаголовокДатаОтчетная + """", "-", "!СКК", П0100132004, Счет81, , , , "Баланс");

		// строка 1340 "Переоценка внеоборотных активов"
		
		П0100134004 = СКК(Счет83_01);
		УстановитьЗначениеПоказателя("П000100134004", П0100134004);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100134004", "Строка 1340 ""Переоценка внеоборотных активов"", графа """ + ЗаголовокДатаОтчетная + """", "+", "Сальдо на конец периода по кредиту счета 83.01", П0100134004, Счет83_01, , , , "Баланс");

		// строка 1350 "Добавочный капитал (без переоценки)"

		П0100135004_83 = СКК(Счет83);
		П0100135004 = П0100135004_83 - П0100134004;
		УстановитьЗначениеПоказателя("П000100135004", П0100135004);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100135004", "Строка 1350 ""Добавочный капитал (без переоценки)"", графа """ + ЗаголовокДатаОтчетная + """", "+", "!СКК", П0100135004_83, Счет83, , , , "Баланс");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100135004", "", "-", "Сальдо на конец периода по кредиту счета 83.01", -П0100134004, Счет83_01);

		// строка 1360 "Резервный капитал"
		
		П0100136004 = СКК(Счет82);
		УстановитьЗначениеПоказателя("П000100136004", П0100136004);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100136004", "Строка 1360 ""Резервный капитал"", графа """ + ЗаголовокДатаОтчетная + """", "+", "!СКК", П0100136004, Счет82, , , , "Баланс");
		
		// строка 1410 "Заемные средства"
		
		П0100141004 = СКК(Счет67);
		УстановитьЗначениеПоказателя("П000100141004", П0100141004);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100141004", "Строка 1410 ""Заемные средства"", графа """ + ЗаголовокДатаОтчетная + """", "+", "!СКК", П0100141004, Счет67, , , , "Баланс");

		// строка 1420 "Отложенные налоговые обязательства"
		// В балансе за отчетный год необходимо учесть возможную переоценку
		// отложенных налоговых активов и отложенных налоговых обязательств,
		// проведенную в связи с изменением ставки налога на прибыль. Результаты
		// переоценки должны показываться в балансе за год, следующий за отчетным,
		// но отражаются проводками в отчетном году. Для учета результатов
		// переоценки корректируем остатки счета 77 на конец периода на обороты:
		// - в корреспонденции со счетом 99 (99.02.4) - для учета корректировок,
		//   выполненных в 2011 году и позднее.

		ОБ_77__99_2_4 = 0;
		ОБ_99_2_4__77 = 0;

		Если Есть99_2_4 Тогда

			ИтогиРС = "ОборотДт, ОборотКт, КорОборотДт, КорОборотКт";
			мБухИтогиРС.РассчитатьИтоги("Хозрасчетный", ИтогиРС, "Сумма", "Счет, КорСчет", мДатаНачалаПериодаОтчета, мДатаКонцаПериодаОтчета, , "77", , , , "Организация", мОргРасшифровка);

			ОБ_77__99_2_4 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотДт", "Счет, КорСчет", Счет77, Счет99_2_4);
			ОБ_99_2_4__77 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотКт", "Счет, КорСчет", Счет77, Счет99_2_4);

		КонецЕсли;

		П0100142004_77 = СКК(Счет77);

		П0100142004    = П0100142004_77 - ОБ_99_2_4__77 + ОБ_77__99_2_4;

		УстановитьЗначениеПоказателя("П000100142004", П0100142004);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100142004", "Строка 1420 ""Отложенные налоговые обзательства"", графа """ + ЗаголовокДатаОтчетная + """", "+", "!СКК", П0100142004_77, Счет77, , , , "Баланс");

		Если ((ОБ_99_2_4__77 <> 0) ИЛИ (ОБ_77__99_2_4 <> 0)) Тогда

			// Корректировку остатка счета 77 в расшифровку добавляем только тогда, 
			// когда такая корректировка существует
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100142004", "", "-", "!ОБ", -ОБ_99_2_4__77, Счет99_2_4,     Счет77);
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100142004", "", "+", "!ОБ",  ОБ_77__99_2_4,     Счет77, Счет99_2_4);

		КонецЕсли;

		// строка 1370 "Нераспределенная прибыль (непокрытый убыток)"

		// Графа "На конец отчетного периода" учитывает  возможную переоценку
		// отложенных налоговых активов и отложенных налоговых обязательств.
		П010047004_84_К = СКК(Счет84);
		П010047004_84_Д = СКД(Счет84);
		П010047004_99_К = СКК(Счет99);
		П010047004_99_Д = СКД(Счет99);

		П0100137004 = П010047004_84_К - П010047004_84_Д
					+ П010047004_99_К - П010047004_99_Д;
					//- ОБ_09__99_2_4 + ОБ_99_2_4__09
					//+ ОБ_99_2_4__77 - ОБ_77__99_2_4;

		УстановитьЗначениеПоказателя("П000100137004", П0100137004);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100137004", "Строка 1370 ""Нераспределенная прибыль (непокрытый убыток)"", графа """ + ЗаголовокДатаОтчетная + """", "+", "!СКК", П010047004_84_К, Счет84, , , , "Баланс");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100137004", "", "-", "!СКД", -П010047004_84_Д, Счет84);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100137004", "", "+", "!СКК",  П010047004_99_К, Счет99);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100137004", "", "-", "!СКД", -П010047004_99_Д, Счет99);

		//Если ((ОБ_09__99_2_4 <> 0) ИЛИ (ОБ_99_2_4__09 <> 0)) Тогда
		//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100137004", "", "-", "!ОБ", -ОБ_09__99_2_4,     Счет09, Счет99_2_4,    , , "Баланс");
		//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100137004", "", "+", "!ОБ",  ОБ_99_2_4__09, Счет99_2_4,     Счет09,    , , "Баланс");
		//КонецЕсли;

		//Если ((ОБ_99_2_4__77 <> 0) ИЛИ (ОБ_77__99_2_4 <> 0)) Тогда
		//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100137004", "", "+", "!ОБ",  ОБ_99_2_4__77, Счет99_2_4,     Счет77,    , , "Баланс");
		//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100137004", "", "-", "!ОБ", -ОБ_77__99_2_4,     Счет77, Счет99_2_4,    , , "Баланс");
		//КонецЕсли;

		// строка 1510 "Заемные средства"
	//	П010061003 = СНК(Счет66);
	//	УстановитьЗначениеПоказателя("П000010061003", П010061003);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010061003", "Строка 610 ""Займы и кредиты"", графа ""На начало отчетного года""", "+", "!СНК", П010061003, Счет66, , , , "Баланс");

		П0100151004 = СКК(Счет66);
		УстановитьЗначениеПоказателя("П000100151004", П0100151004);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100151004", "Строка 1510 ""Заемные средства"", графа """ + ЗаголовокДатаОтчетная + """", "+", "!СКК", П0100151004, Счет66, , , , "Баланс");

		// строка 1520 "Кредиторская здолженность"

		// строка 621 "поставщики и подрядчики"
	//	
	//	П010062103_60_03 = СНК(Счет60_03);
	//	
	//	П010062103 = П010062103_60_01_СНК
	//			   + П010062103_60_21_СНК
	//			   + П010062103_60_31_СНК
	//			   + П010062103_60_03
	//			   + П010062103_76_05
	//			   + П010062103_76_25
	//			   + П010062103_76_35
	//			   + П010062103_76_06
	//			   + П010062103_76_26
	//			   + П010062103_76_36;

	//	УстановитьЗначениеПоказателя("П000010062103", П010062103);

	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010062103", "Строка 621 ""поставщики и подрядчики"", графа ""На начало отчетного года""", "+", "Сальдо на начало периода по кредиту счета 60.01, развернутое по субконто ""Контрагенты"", ""Договоры""", П010062103_60_01_СНК, Счет60_01, , , , "Баланс");
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010062103", "", "+", "Сальдо на начало периода по кредиту счета 60.21, развернутое по субконто ""Контрагенты"", ""Договоры""", П010062103_60_21_СНК, Счет60_21);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010062103", "", "+", "Сальдо на начало периода по кредиту счета 60.31, развернутое по субконто ""Контрагенты"", ""Договоры""", П010062103_60_31_СНК, Счет60_31);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010062103", "", "+", "!СНК", П010062103_60_03, Счет60_03, , , , "Баланс");
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010062103", "", "+", "Сальдо на начало периода по кредиту счета 76.05, развернутое по субконто ""Контрагенты""", П010062103_76_05, Счет76_05);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010062103", "", "+", "Сальдо на начало периода по кредиту счета 76.25, развернутое по субконто ""Контрагенты""", П010062103_76_25, Счет76_25);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010062103", "", "+", "Сальдо на начало периода по кредиту счета 76.35, развернутое по субконто ""Контрагенты""", П010062103_76_35, Счет76_35);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010062103", "", "+", "Сальдо на начало периода по кредиту счета 76.06, развернутое по субконто ""Контрагенты""", П010062103_76_06, Счет76_06);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010062103", "", "+", "Сальдо на начало периода по кредиту счета 76.26, развернутое по субконто ""Контрагенты""", П010062103_76_26, Счет76_26);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010062103", "", "+", "Сальдо на начало периода по кредиту счета 76.36, развернутое по субконто ""Контрагенты""", П010062103_76_36, Счет76_36);

		П010062104_60_03 = СКК(Счет60_03);
		П010062204 = СКК(Счет70);
		П010062504_62_02 = СКК(Счет62_02);
		П010062504_62_22 = СКК(Счет62_22);
		П010062504_62_32 = СКК(Счет62_32);

		П010062504_75_02 = СКК(Счет75_02);

		П010062504_76_03 = СКК(Счет76_03);
		П010062504_76_04 = СКК(Счет76_04);
		П010062504_76_41 = СКК(Счет76_41);
		П010062504_76_Н  = СКК(Счет76_Н);
		П010062504_79    = СКК(Счет79);

		П0100152004 = П010062104_60_01_СКК
		            + П010062104_60_21_СКК
		            + П010062104_60_31_СКК
		            + П010062104_60_03
		            + П010062104_76_05
		            + П010062104_76_25
		            + П010062104_76_35
		            + П010062104_76_06
		            + П010062104_76_26
		            + П010062104_76_36
		            + П010062204
		            + П010062304_69
		            + П010062404_68_01
		            + П010062404_68_02
		            + П010062404_68_03
		            + П010062404_68_04_1
		            + П010062404_68_04_2
		            + П010062404_68_07
		            + П010062404_68_08
		            + П010062404_68_09
		            + П010062404_68_10
		            + П010062404_68_11
		            + П010062404_68_12
		            + П010062404_68_22
		            + П010062404_68_32
		            + П010062504_62_02
		            + П010062504_62_01_СКК
		            + П010062504_62_22
		            + П010062504_62_21_СКК
		            + П010062504_62_32
		            + П010062504_62_31_СКК
		            + П010062504_71
		            + П010062504_75_02
		            + П010062504_76_01
		            + П010062504_76_21
		            + П010062504_76_03
		            + П010062504_76_04
		            + П010062504_76_09
		            + П010062504_76_29
		            + П010062504_76_39
		            + П010062504_76_41
		            + П010062504_76_Н
		            + П010062504_79;

		Если ЭтоБалансДляАУ Тогда
			П0100152004 = П0100152004
					   + П010062504_76_51
					   + П010062504_76_52;
		КонецЕсли;

		УстановитьЗначениеПоказателя("П000100152004", П0100152004);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152004", "Строка 1520 ""Кредиторская задолженность"", графа """ + ЗаголовокДатаОтчетная + """", "+", "Сальдо на конец периода по кредиту счета 60.01, развернутое по субконто ""Контрагенты"", ""Договоры""", П010062104_60_01_СКК, Счет60_01, , , , "Баланс");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152004", "", "+", "Сальдо на конец периода по кредиту счета 60.21, развернутое по субконто ""Контрагенты"", ""Договоры""", П010062104_60_21_СКК, Счет60_21);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152004", "", "+", "Сальдо на конец периода по кредиту счета 60.31, развернутое по субконто ""Контрагенты"", ""Договоры""", П010062104_60_31_СКК, Счет60_31);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152004", "", "+", "!СКК", П010062104_60_03, Счет60_03);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152004", "", "+", "Сальдо на конец периода по кредиту счета 76.05, развернутое по субконто ""Контрагенты""", П010062104_76_05, Счет76_05);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152004", "", "+", "Сальдо на конец периода по кредиту счета 76.25, развернутое по субконто ""Контрагенты""", П010062104_76_25, Счет76_25);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152004", "", "+", "Сальдо на конец периода по кредиту счета 76.35, развернутое по субконто ""Контрагенты""", П010062104_76_35, Счет76_35);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152004", "", "+", "Сальдо на конец периода по кредиту счета 76.06, развернутое по субконто ""Контрагенты""", П010062104_76_06, Счет76_06);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152004", "", "+", "Сальдо на конец периода по кредиту счета 76.26, развернутое по субконто ""Контрагенты""", П010062104_76_26, Счет76_26);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152004", "", "+", "Сальдо на конец периода по кредиту счета 76.36, развернутое по субконто ""Контрагенты""", П010062104_76_36, Счет76_36);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152004", "", "+", "!СКК", П010062204, Счет70, , , , "Баланс");

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152004", "", "+", "!СККР", П010062304_69, Счет69, , , , "Баланс");

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152004", "", "+", "!СКК", П010062404_68_01, Счет68_01);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152004", "", "+", "!СКК", П010062404_68_02, Счет68_02);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152004", "", "+", "!СКК", П010062404_68_03, Счет68_03);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152004", "", "+", "Сальдо на конец периода по кредиту счета 68.04.1 по субконто ""Уровни бюджетов""", П010062404_68_04_1, Счет68_04_1);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152004", "", "+", "!СКК", П010062404_68_04_2, Счет68_04_2);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152004", "", "+", "!СКК", П010062404_68_07, Счет68_07);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152004", "", "+", "!СКК", П010062404_68_08, Счет68_08);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152004", "", "+", "!СКК", П010062404_68_09, Счет68_09);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152004", "", "+", "Сальдо на конец периода по кредиту счета 68.10 по субконто ""Уровни бюджетов""", П010062404_68_10, Счет68_10);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152004", "", "+", "!СКК", П010062404_68_11, Счет68_11);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152004", "", "+", "!СКК", П010062404_68_12, Счет68_12);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152004", "", "+", "!СКК", П010062404_68_22, Счет68_22);

		Если Есть68_32 Тогда
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152004", "", "+", "!СКК", П010062404_68_32, Счет68_32);
		КонецЕсли;

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152004", "", "+", "!СКК", П010062504_62_02, Счет62_02, , , , "Баланс");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152004", "", "+", "Сальдо отрицательное на конец периода по дебету счета 62.01, развернутое по субконто ""Контрагенты"", ""Договоры""", П010062504_62_01_СКК);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152004", "", "+", "!СКК", П010062504_62_22, Счет62_22);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152004", "", "+", "Сальдо отрицательное на конец периода по дебету счета 62.21, развернутое по субконто ""Контрагенты"", ""Договоры""", П010062504_62_21_СКК);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152004", "", "+", "!СКК", П010062504_62_32, Счет62_32);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152004", "", "+", "Сальдо отрицательное на конец периода по дебету счета 62.31, развернутое по субконто ""Контрагенты"", ""Договоры""", П010062504_62_31_СКК);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152004", "", "+", "Сальдо на конец периода по кредиту счета 71, развернутое по субконто ""Работники организации""", П010062504_71, Счет71);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152004", "", "+", "!СКК", П010062504_75_02, Счет75_02);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152004", "", "+", "Сальдо на конец периода по кредиту счета 76.01, развернутое по субконто ""Контрагенты""", П010062504_76_01, Счет76_01);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152004", "", "+", "Сальдо на конец периода по кредиту счета 76.21, развернутое по субконто ""Контрагенты""", П010062504_76_21, Счет76_21);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152004", "", "+", "!СКК", П010062504_76_03, Счет76_03);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152004", "", "+", "!СКК", П010062504_76_04, Счет76_04);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152004", "", "+", "Сальдо на конец периода по кредиту счета 76.09, развернутое по субконто ""Контрагенты""", П010062504_76_09, Счет76_09);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152004", "", "+", "Сальдо на конец периода по кредиту счета 76.29, развернутое по субконто ""Контрагенты""", П010062504_76_29, Счет76_29);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152004", "", "+", "Сальдо на конец периода по кредиту счета 76.39, развернутое по субконто ""Контрагенты""", П010062504_76_39, Счет76_39);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152004", "", "+", "!СКК", П010062504_76_41, Счет76_41);
		
		Если ЭтоБалансДляАУ Тогда
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152004", "", "+", "Сальдо на конец периода по кредиту счета 76.51, развернутое по субконто ""Контрагенты""", П010062504_76_51, Счет76_51);
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152004", "", "+", "Сальдо на конец периода по кредиту счета 76.52, развернутое по субконто ""Контрагенты""", П010062504_76_52, Счет76_52);
		КонецЕсли;
		
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152004", "", "+", "!СКК", П010062504_76_Н, Счет76_Н);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152004", "", "+", "!СКК", П010062504_79, Счет79);
	
	// строка 622 "задолженность перед персоналом организации"
	//	П010062203 = СНК(Счет70);
	//	УстановитьЗначениеПоказателя("П000010062203", П010062203);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010062203", "Строка 622 ""задолженность перед персоналом организации"", графа ""На начало отчетного года""", "+", "!СНК", П010062203, Счет70, , , , "Баланс");

		//УстановитьЗначениеПоказателя("П000100152004", П010062204);

	//	// строка 623 "задолженность перед государственными внебюджетными фондами"
	//	УстановитьЗначениеПоказателя("П000010062303", П010062303_69);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010062303", "Строка 623 ""задолженность перед государственными внебюджетными фондами"", графа ""На начало отчетного года""", "+", "!СНКР", П010062303_69, Счет69, , , , "Баланс");
		
		//УстановитьЗначениеПоказателя("П000010062304", П010062304_69);

	//	// строка 624 "задолженность по налогам и сборам"
	//	УстановитьЗначениеПоказателя("П000010062403", П010062403_68);

	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010062403", "Строка 624 ""задолженность по налогам и сборам"", графа ""На начало отчетного года""", "+", "!СНК", П010062403_68_01, Счет68_01);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010062403", "", "+", "!СНК", П010062403_68_02, Счет68_02);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010062403", "", "+", "!СНК", П010062403_68_03, Счет68_03);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010062403", "", "+", "Сальдо на начало периода по кредиту счета 68.04.1 по субконто ""Уровни бюджетов""", П010062403_68_04_1, Счет68_04_1);

	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010062403", "", "+", "!СНК", П010062403_68_04_2, Счет68_04_2);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010062403", "", "+", "!СНК", П010062403_68_07, Счет68_07);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010062403", "", "+", "!СНК", П010062403_68_08, Счет68_08);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010062403", "", "+", "!СНК", П010062403_68_09, Счет68_09);

	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010062403", "", "+", "Сальдо на начало периода по кредиту счета 68.10 по субконто ""Уровни бюджетов""", П010062403_68_10, Счет68_10);

	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010062403", "", "+", "!СНК", П010062403_68_11, Счет68_11);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010062403", "", "+", "!СНК", П010062403_68_12, Счет68_12);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010062403", "", "+", "!СНК", П010062403_68_22, Счет68_22);
	//	
	//	Если Есть68_32 = Истина Тогда
	//		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010062403", "", "+", "!СНК", П010062403_68_32, Счет68_32);
	//	КонецЕсли;
	

	//	// строка 625 "прочие кредиторы"

	//	П010062503_62_02 = СНК(Счет62_02);
	//	П010062503_62_22 = СНК(Счет62_22);
	//	П010062503_62_32 = СНК(Счет62_32);
	//	
	//	П010062503_76_03 = СНК(Счет76_03);
	//	П010062503_76_04 = СНК(Счет76_04);
	//	П010062503_76_41 = СНК(Счет76_41);
	//	П010062503_76_ВА = СНК(Счет76_ВА);
	//	П010062503_76_Н  = СНК(Счет76_Н);
	//	П010062503_79    = СНК(Счет79);
	//	
	//	П010062503 = П010062503_62_02
	//			   + П010062503_62_01_СНК
	//			   + П010062503_62_22
	//			   + П010062503_62_21_СНК
	//			   + П010062503_62_32
	//			   + П010062503_62_31_СНК
	//			   + П010062503_71
	//			   + П010062503_76_01
	//			   + П010062503_76_21
	//			   + П010062503_76_03
	//			   + П010062503_76_04
	//			   + П010062503_76_09
	//			   + П010062503_76_29
	//			   + П010062503_76_39
	//			   + П010062503_76_41
	//			   + П010062503_76_ВА
	//			   + П010062503_76_Н
	//			   + П010062503_79;

	//	Если ЭтоБалансДляАУ Тогда
	//		П010062503 = П010062503
	//				   + П010062503_76_51
	//				   + П010062503_76_52;
	//	КонецЕсли;

	//	Если Есть76НА = Истина Тогда
	//		П010062503 = П010062503 + П010062503_76_НА;	
	//	КонецЕсли;
	//	
	//	УстановитьЗначениеПоказателя("П000010062503", П010062503);

	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010062503", "Строка 625 ""прочие кредиторы"", графа ""На начало отчетного года""", "+", "!СНК", П010062503_62_02, Счет62_02, , , , "Баланс");
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010062503", "", "+", "Сальдо отрицательное на начало периода по дебету счета 62.01, развернутое по субконто ""Контрагенты"", ""Договоры""", П010062503_62_01_СНК);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010062503", "", "+", "!СНК", П010062503_62_22, Счет62_22);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010062503", "", "+", "Сальдо отрицательное на начало периода по дебету счета 62.21, развернутое по субконто ""Контрагенты"", ""Договоры""", П010062503_62_21_СНК);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010062503", "", "+", "!СНК", П010062503_62_32, Счет62_32);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010062503", "", "+", "Сальдо отрицательное на начало периода по дебету счета 62.31, развернутое по субконто ""Контрагенты"", ""Договоры""", П010062503_62_31_СНК);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010062503", "", "+", "Сальдо на начало периода по кредиту счета 71, развернутое по субконто ""Работники организации""", П010062503_71, Счет71);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010062503", "", "+", "Сальдо на начало периода по кредиту счета 76.01, развернутое по субконто ""Контрагенты""", П010062503_76_01, Счет76_01);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010062503", "", "+", "Сальдо на начало периода по кредиту счета 76.21, развернутое по субконто ""Контрагенты""", П010062503_76_21, Счет76_21);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010062503", "", "+", "!СНК", П010062503_76_03, Счет76_03);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010062503", "", "+", "!СНК", П010062503_76_04, Счет76_04);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010062503", "", "+", "Сальдо на начало периода по кредиту счета 76.09, развернутое по субконто ""Контрагенты""", П010062503_76_09, Счет76_09);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010062503", "", "+", "Сальдо на начало периода по кредиту счета 76.29, развернутое по субконто ""Контрагенты""", П010062503_76_29, Счет76_29);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010062503", "", "+", "Сальдо на начало периода по кредиту счета 76.39, развернутое по субконто ""Контрагенты""", П010062503_76_39, Счет76_39);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010062503", "", "+", "!СНК", П010062503_76_41, Счет76_41);
	//	Если ЭтоБалансДляАУ Тогда
	//		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010062503", "", "+", "Сальдо на начало периода по кредиту счета 76.51, развернутое по субконто ""Контрагенты""", П010062503_76_51, Счет76_51);
	//		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010062503", "", "+", "Сальдо на начало периода по кредиту счета 76.52, развернутое по субконто ""Контрагенты""", П010062503_76_52, Счет76_52);
	//	КонецЕсли;
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010062503", "", "+", "!СНК", П010062503_76_ВА, Счет76_ВА);
	//	Если Есть76НА = Истина Тогда
	//		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010062503", "", "+", "Сальдо на начало периода по кредиту счета 76.НА, развернутое по субконто ""Контрагенты""", П010062503_76_НА, Счет76_НА);
	//	КонецЕсли;
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010062503", "", "+", "!СНК", П010062503_76_Н, Счет76_Н);
	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010062503", "", "+", "!СНК", П010062503_79, Счет79);

		
	//	Если ЭтоБалансДляАУ Тогда
	//		П010062504 = П010062504
	//				   + П010062504_76_51
	//				   + П010062504_76_52;
	//	КонецЕсли;

		
	//	УстановитьЗначениеПоказателя("П000010062504", П010062504);

	//	Если ЭтоБалансДляАУ Тогда

	//		П010064003 = СНК(Счет98);

	//		УстановитьЗначениеПоказателя("П000010064003", П010064003);
	//		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010064003", "Строка 640 ""Доходы будущих периодов"", графа ""На начало отчетного года""", "+", "!СНК", П010064003, Счет98, , , , "Баланс");

	//		П010064004 = СКК(Счет98);

	//		УстановитьЗначениеПоказателя("П000010064004", П010064004);
	//		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010064004", "Строка 640 ""Доходы будущих периодов"", графа ""На конец отчетного периода""", "+", "!СКК", П010064004, Счет98, , , , "Баланс");

	//	Иначе

			// строка 1530 "Доходы будущих периодов"
	//		П010064003_86 = СНК(Счет86);
	//		П010064003_98 = СНК(Счет98);

	//		П010064003 = П010064003_86 + П010064003_98;
	//		УстановитьЗначениеПоказателя("П000010064003", П010064003);

	//		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010064003", "Строка 640 ""Доходы будущих периодов"", графа ""На начало отчетного года""", "+", "!СНК", П010064003_86, Счет86, , , , "Баланс");
	//		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010064003", "", "+", "!СНК", П010064003_98, Счет98);

			П010064004_86 = СКК(Счет86);
			П010064004_98 = СКК(Счет98);

			П0100153004 = П010064004_86 + П010064004_98;
			УстановитьЗначениеПоказателя("П000100153004", П0100153004);

			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100153004", "Строка 1530 ""Доходы будущих периодов"", графа """ + ЗаголовокДатаОтчетная + """", "+", "!СКК", П010064004_86, Счет86, , , , "Баланс");
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100153004", "", "+", "!СКК", П010064004_98, Счет98);

	//	КонецЕсли;

		// строка 1540 "Резервы предстоящих расходов"
	//	П010065003 = СНК(Счет96);
	//	УстановитьЗначениеПоказателя("П000010065003", П010065003);

	//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010065003", "Строка 650 ""Резервы предстоящих расходов"", графа ""На начало отчетного года""", "+", "!СНК", П010065003, Счет96, , , , "Баланс");

		П0100154004 = СКК(Счет96);
		УстановитьЗначениеПоказателя("П000100154004", П0100154004);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100154004", "Строка 1540 ""Резервы предстоящих расходов"", графа """ + ЗаголовокДатаОтчетная + """", "+", "Сальдо на конец периода по кредиту счета 96", П0100154004, Счет96, , , , "Баланс");

		// строка 1550 "Прочие обязательства"

		П0100155004_76_ВА = СКК(Счет76_ВА);

		П0100155004 = П0100155004_76_ВА
		            + П010062504_76_НА;

		УстановитьЗначениеПоказателя("П000100155004", П0100155004);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100155004", "Строка 1550 ""Прочие обязательства"", графа """ + ЗаголовокДатаОтчетная + """", "+", "!СКК", П0100155004_76_ВА, Счет76_ВА);

		Если Есть76НА = Истина Тогда
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100155004", "", "+", "Сальдо на конец периода по кредиту счета 76.НА, развернутое по субконто ""Контрагенты""", П010062504_76_НА, Счет76_НА);
		КонецЕсли;

	//	Если ТаблДанныхДопСтрок.Количество() > 0 Тогда
	//		Если мБезКонсолидации Тогда
	//			// Создаем и заполняем дополнительные строки.
	//			АвтозаполнениеДопСтрок(ТаблДанныхДопСтрок, мИдГруппы1);
	//		Иначе
	//			// Сохраним в накопительной таблице
	//			ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблДанныхДопСтрок, ТаблДанныхДопСтрокОбщ);
	//			ТаблДанныхДопСтрок.Очистить();
	//		КонецЕсли;
	//	КонецЕсли;

	Если ЗаполнятьГодПредыдущий Тогда
		// Заполняем баланс данными на конец предыдущего года
		мДатаНачалаПериодаПрошлогоГода = ДобавитьМесяц( мДатаНачалаПериодаОтчета, -12 );
		мДатаКонцаПериодаПрошлогоГода = КонецГода(мДатаНачалаПериодаПрошлогоГода);
		
		// Бухгалтерские итоги по счетам, без аналитики
		мБухИтоги.РассчитатьИтоги("Хозрасчетный", Итоги, "Сумма", "Счет", мДатаНачалаПериодаПрошлогоГода, мДатаКонцаПериодаПрошлогоГода, , , , , , "Организация", мОргРасшифровка);
		
		// строка 1110 "Нематериальные активы"
		П0100111005_04_01 = СКД(Счет04_01);
		П0100111005_05    = СКК(Счет05);
		
		П0100111005 = П0100111005_04_01 - П0100111005_05;
		УстановитьЗначениеПоказателя("П000100111005", П0100111005);
		
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100111005","Строка 1110 ""Нематериальные активы"", графа """ + ЗаголовокДатаКонцаПрошлогоГода + """","+","!СКД", П0100111005_04_01, Счет04_01, , мДатаНачалаПериодаПрошлогоГода, мДатаКонцаПериодаПрошлогоГода, "Баланс");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100111005","","-","!СКК", -П0100111005_05, Счет05);
		
		// строка 1120 "Результаты исследований и разработок"
		// Так как расходы на НИОКР, учитываемые на счете 04.02, не амортизируются, 
		// а списываются на расходы по обычным видам деятельности, остаток 
		// на счете 04.02 равен остатку не списанных расходов на НИОКР
		
		П0100112005_04_02 = СКД(Счет04_02);
		
		УстановитьЗначениеПоказателя("П000100112005", П0100112005_04_02);
		
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100112005", "Строка 1120 ""Результаты исследований и разработок"", графа """ + ЗаголовокДатаКонцаПрошлогоГода + """", "+", "!СКД", П0100112005_04_02, Счет04_02, , мДатаНачалаПериодаПрошлогоГода, мДатаКонцаПериодаПрошлогоГода, "Баланс");
		
		// строка 1130 "Основные средства"
		П0100113005_01    = СКД(Счет01);
		П0100113005_02_01 = СКК(Счет02_01);
		
		П0100113005 = П0100113005_01 - П0100113005_02_01;
		УстановитьЗначениеПоказателя("П000100113005", П0100113005);
		
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100113005", "Строка 1130 ""Основные средства"", графа """ + ЗаголовокДатаКонцаПрошлогоГода + """", "+", "!СКД", П0100113005_01, , , мДатаНачалаПериодаПрошлогоГода, мДатаКонцаПериодаПрошлогоГода, "Баланс");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100113005", "", "-", "!СКК", -П0100113005_02_01, Счет02_01);
		
		// строка 1140 "Доходные вложения в материальные ценности"
		П0100114005_03    = СКД(Счет03);
		П0100114005_02_02 = СКК(Счет02_02);
		
		П0100114005 = П0100114005_03 - П0100114005_02_02;
		УстановитьЗначениеПоказателя("П000100114005", П0100114005);
		
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100114005", "Строка 1140 ""Доходные вложения в материальные ценности"", графа """ + ЗаголовокДатаКонцаПрошлогоГода + """", "+", "!СКД", П0100114005_03, Счет03, , мДатаНачалаПериодаПрошлогоГода, мДатаКонцаПериодаПрошлогоГода, "Баланс");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100114005", "", "-", "!СКК", -П0100114005_02_02, Счет02_02);
		
		// строка 1150 "Финансовые вложения"
		П0100115005 = СКД(Счет58_01_1);
		
		УстановитьЗначениеПоказателя("П000100115005", П0100115005);
		
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100115005", "Строка 1150 ""Долгосрочные финансовые вложения"", графа """ + ЗаголовокДатаКонцаПрошлогоГода + """", "+", "!СКД", П0100115005, Счет58_01_1, , мДатаНачалаПериодаПрошлогоГода, мДатаКонцаПериодаПрошлогоГода, "Баланс");
		
		// строка 1160 "Отложенные налоговые активы"
		// В балансе за отчетный год необходимо учесть возможную переоценку
		// отложенных налоговых активов и отложенных налоговых обязательств,
		// проведенную в связи с изменением ставки налога на прибыль. Результаты
		// переоценки должны показываться в балансе за год, следующий за отчетным,
		// но отражаются проводками в отчетном году. Для учета результатов
		// переоценки корректируем остатки счета 09 на конец периода на обороты:
		// - в корреспонденции со счетами 84.01 и 84.02 - для совместимости с предыдущими годами
		// - в корреспонденции со счетоми 99 (99.02.4) - для учета периодов 2011 г и позже.
		
		ИтогиРС = "ОборотДт, ОборотКт, КорОборотДт, КорОборотКт";
		мБухИтогиРС.РассчитатьИтоги("Хозрасчетный", ИтогиРС, "Сумма", "Счет, КорСчет", мДатаНачалаПериодаПрошлогоГода, мДатаКонцаПериодаПрошлогоГода, , "09", , , , "Организация", мОргРасшифровка);
		
		ОБ_09__84_01 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотДт", "Счет, КорСчет", Счет09, Счет84_01);
		ОБ_84_02__09 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотКт", "Счет, КорСчет", Счет09, Счет84_02);
		
		ОБ_09__99_2_4 = 0;
		ОБ_99_2_4__09 = 0;
		
		Если Есть99_2_4 Тогда
			ОБ_09__99_2_4 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотДт", "Счет, КорСчет", Счет09, Счет99_2_4);
			ОБ_99_2_4__09 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотКт", "Счет, КорСчет", Счет09, Счет99_2_4);
		КонецЕсли;
		
		П0100116005_09 = СКД(Счет09);
		
		П0100116005 = П0100116005_09 - ОБ_09__84_01 + ОБ_84_02__09 - ОБ_09__99_2_4 + ОБ_99_2_4__09;
		
		УстановитьЗначениеПоказателя("П000100116005", П0100116005);
		
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100116005", "Строка 1160 ""Отложенные налоговые активы"", графа """ + ЗаголовокДатаКонцаПрошлогоГода + """", "+", "!СКД", П0100116005_09, Счет09, , мДатаНачалаПериодаПрошлогоГода, мДатаКонцаПериодаПрошлогоГода, "Баланс");
		
		Если ((ОБ_09__84_01 <> 0) ИЛИ (ОБ_84_02__09 <> 0)) Тогда
			
			// Корректировку остатка счета 09 в расшифровку добавляем только тогда, 
			// когда такая корректировка существует
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100116005", "", "-", "!ОБ", -ОБ_09__84_01, Счет09,    Счет84_01, , , "Баланс");
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100116005", "", "+", "!ОБ",  ОБ_84_02__09, Счет84_02, Счет09,    , , "Баланс");
			
		КонецЕсли;
		
		Если ((ОБ_09__99_2_4 <> 0) ИЛИ (ОБ_99_2_4__09 <> 0)) Тогда
			
			// Корректировку остатка счета 09 в расшифровку добавляем только тогда, 
			// когда такая корректировка существует
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100116005", "", "-", "!ОБ", -ОБ_09__99_2_4,     Счет09, Счет99_2_4,    , , "Баланс");
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100116005", "", "+", "!ОБ",  ОБ_99_2_4__09, Счет99_2_4,     Счет09,    , , "Баланс");
			
		КонецЕсли;
		
		// строка 1170 "Прочие внеоборотные активы"
		П0100117005_07 = СКД(Счет07);
		П0100117005_08 = СКД(Счет08);
		
		П0100117005 = П0100117005_07 + П0100117005_08;
		УстановитьЗначениеПоказателя("П000100117005", П0100117005);
		
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100117005", "Строка 1170 ""Прочие внеоборотные активы"", графа ""На конец отчетного периода""", "+", "!СКД", П0100117005_07, Счет07, , мДатаНачалаПериодаПрошлогоГода, мДатаКонцаПериодаПрошлогоГода, "Баланс");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100117005", "", "+", "!СКД", П0100117005_08, Счет08);
		
		// строка 1210 "Запасы"
		
		П0100121005_10      = СКД(Счет10);
		П0100121005_14_01   = СКК(Счет14_01);
		П0100121005_15_01   = СКД(Счет15_01);
		П0100121005_16_01_Д = СКД(Счет16_01);
		П0100121005_16_01_К = СКК(Счет16_01);
		П0100121005_11      = СКД(Счет11);
		П0100121005_20      = СКД(Счет20);
		П0100121005_21      = СКД(Счет21);
		П0100121005_23      = СКД(Счет23);
		П0100121005_29      = СКД(Счет29);
		П0100121005_44      = СКД(Счет44);
		П0100121005_46      = СКД(Счет46);
		П0100121005_14_04   = СКК(Счет14_04);
		П0100121005_43      = СКД(Счет43);
		П0100121005_14_03   = СКК(Счет14_03);
		П0100121005_41      = СКД(Счет41);
		П0100121005_14_02   = СКК(Счет14_02);
		П0100121005_15_02   = СКД(Счет15_02);
		П0100121005_16_02_Д = СКД(Счет16_02);
		П0100121005_16_02_К = СКК(Счет16_02);
		П0100121005_42      = СКК(Счет42);
		П0100121005_45      = СКД(Счет45);
		П0100121005_28      = СКД(Счет28);
		
		П0100121005 = П0100121005_10 - П0100121005_14_01 + П0100121005_15_01 + П0100121005_16_01_Д - П0100121005_16_01_К
		+ П0100121005_11
		+ П0100121005_20 + П0100121005_21 + П0100121005_23 + П0100121005_29 + П0100121005_44 + П0100121005_46 - П0100121005_14_04
		+ П0100121005_43 - П0100121005_14_03 + П0100121005_41 - П0100121005_14_02 + П0100121005_15_02 + П0100121005_16_02_Д - П0100121005_16_02_К - П0100121005_42
		+ П0100121005_45
		+ П0100121005_28;
		
		УстановитьЗначениеПоказателя("П000100121005", П0100121005);
		
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121005", "Строка 1210 ""Запасы"", графа """ + ЗаголовокДатаКонцаПрошлогоГода + """", "+", "!СКД", П0100121005_10, Счет10, , мДатаНачалаПериодаПрошлогоГода, мДатаКонцаПериодаПрошлогоГода, "Баланс");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121005", "", "-", "!СКД", -П0100121005_14_01, Счет14_01);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121005", "", "+", "!СКД",  П0100121005_15_01, Счет15_01);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121005", "", "+", "!СКД",  П0100121005_16_01_Д, Счет16_01);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121005", "", "-", "!СКК", -П0100121005_16_01_К, Счет16_01);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121005", "", "+", "!СКД",  П0100121005_11, Счет11);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121005", "", "+", "!СКД",  П0100121005_20, Счет20);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121005", "", "+", "!СКД",  П0100121005_21, Счет21);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121005", "", "+", "!СКД",  П0100121005_23, Счет23);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121005", "", "+", "!СКД",  П0100121005_29, Счет29);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121005", "", "+", "!СКД",  П0100121005_44, Счет44);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121005", "", "+", "!СКД",  П0100121005_46, Счет46);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121005", "", "-", "!СКК", -П0100121005_14_04, Счет14_04);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121005", "", "+", "!СКД",  П0100121005_43, Счет43);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121005", "", "-", "!СКК", -П0100121005_14_03, Счет14_03);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121005", "", "+", "!СКД",  П0100121005_41, Счет41);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121005", "", "-", "!СКК", -П0100121005_14_02, Счет14_02);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121005", "", "+", "!СКД",  П0100121005_15_02, Счет15_02);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121005", "", "+", "!СКД",  П0100121005_16_02_Д, Счет16_02);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121005", "", "-", "!СКК", -П0100121005_16_02_К, Счет16_02);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121005", "", "-", "!СКК", -П0100121005_42, Счет42);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121005", "", "+", "!СКД",  П0100121005_45, Счет45);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121005", "", "+", "!СКД",  П0100121005_28, Счет28);
		
		// строка 1220 "Налог на добавленную стоимость по приобретенным ценностям"
		//П0100122005 = СКД(Счет19);
		//УстановитьЗначениеПоказателя("П000100122005", П0100122005);
		
		П0100122005_19    = СКД(Счет19);
		П0100122005_19_06 = СКД(Счет19_06);
		
		П0100122005 = П0100122005_19 - П0100122005_19_06;
		
		УстановитьЗначениеПоказателя("П000100122005", П0100122005);
		
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100122005", "Строка 1220 ""Налог на добавленную стоимость по приобретенным ценностям"", графа """ + ЗаголовокДатаКонцаПрошлогоГода + """", "+", "!СКД", П0100122005_19, Счет19, , мДатаНачалаПериодаПрошлогоГода, мДатаКонцаПериодаПрошлогоГода, "Баланс");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100122005", "", "-", "!СКД", -П0100122005_19_06, Счет19_06, , , , "Баланс");
		
		// Из-за отсутствия необходимой аналитики для анализа срока погашения задолженности, 
		// всю задолженность считаем краткосрочной.
		
		ИтогиРС = "НачальныйРазвернутыйОстатокДт, НачальныйРазвернутыйОстатокКт, КонечныйРазвернутыйОстатокДт, КонечныйРазвернутыйОстатокКт";
		
		мБухИтогиРС.РассчитатьИтоги("Хозрасчетный", ИтогиРС, "Сумма", "Счет, Субконто1", мДатаНачалаПериодаПрошлогоГода, мДатаКонцаПериодаПрошлогоГода, , "76", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты, , , "Организация", мОргРасшифровка);
		
		П010024005_76_01 = 0;
		П010062505_76_01 = 0;
		
		ВыборкаПоСчету = мБухИтогиРС.ПолучитьОстаткиИОбороты("Счет", Счет76_01);
		
		Если НЕ ВыборкаПоСчету = Неопределено Тогда
			
			П010024005_76_01 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокДт;
			П010062505_76_01 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокКт;
			
		КонецЕсли;
		
		П010024005_76_21 = 0;
		П010062505_76_21 = 0;
		
		ВыборкаПоСчету = мБухИтогиРС.ПолучитьОстаткиИОбороты("Счет", Счет76_21);
		
		Если НЕ ВыборкаПоСчету = Неопределено Тогда
			
			П010024005_76_21 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокДт;
			П010062505_76_21 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокКт;
			
		КонецЕсли;
		
		П010024005_76_05 = 0;
		П010062105_76_05 = 0;
		
		ВыборкаПоСчету = мБухИтогиРС.ПолучитьОстаткиИОбороты("Счет", Счет76_05);
		
		Если НЕ ВыборкаПоСчету = Неопределено Тогда
			
			П010024005_76_05 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокДт;
			П010062105_76_05 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокКт;
			
		КонецЕсли;
		
		П010024005_76_25 = 0;
		П010062105_76_25 = 0;
		
		ВыборкаПоСчету = мБухИтогиРС.ПолучитьОстаткиИОбороты("Счет", Счет76_25);
		
		Если НЕ ВыборкаПоСчету = Неопределено Тогда
			
			П010024005_76_25 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокДт;
			П010062105_76_25 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокКт;
			
		КонецЕсли;
		
		П010024005_76_35 = 0;
		П010062105_76_35 = 0;
		
		ВыборкаПоСчету = мБухИтогиРС.ПолучитьОстаткиИОбороты("Счет", Счет76_35);
		
		Если НЕ ВыборкаПоСчету = Неопределено Тогда
			
			П010024005_76_35 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокДт;
			П010062105_76_35 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокКт;
			
		КонецЕсли;
		
		П010024105_76_06 = 0;
		П010062105_76_06 = 0;
		
		ВыборкаПоСчету = мБухИтогиРС.ПолучитьОстаткиИОбороты("Счет", Счет76_06);
		
		Если НЕ ВыборкаПоСчету = Неопределено Тогда
			
			П010024105_76_06 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокДт;
			П010062105_76_06 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокКт;
			
		КонецЕсли;
		
		П010024105_76_26 = 0;
		П010062105_76_26 = 0;
		
		ВыборкаПоСчету = мБухИтогиРС.ПолучитьОстаткиИОбороты("Счет", Счет76_26);
		
		Если НЕ ВыборкаПоСчету = Неопределено Тогда
			
			П010024105_76_26 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокДт;
			П010062105_76_26 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокКт;
			
		КонецЕсли;
		
		П010024105_76_36 = 0;
		П010062105_76_36 = 0;
		
		ВыборкаПоСчету = мБухИтогиРС.ПолучитьОстаткиИОбороты("Счет", Счет76_36);
		
		Если НЕ ВыборкаПоСчету = Неопределено Тогда
			
			П010024105_76_36 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокДт;
			П010062105_76_36 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокКт;
			
		КонецЕсли;
		
		П010024005_76_09 = 0;
		П010062505_76_09 = 0;
		
		ВыборкаПоСчету = мБухИтогиРС.ПолучитьОстаткиИОбороты("Счет", Счет76_09);
		
		Если НЕ ВыборкаПоСчету = Неопределено Тогда
			
			П010024005_76_09 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокДт;
			П010062505_76_09 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокКт;
			
		КонецЕсли;
		
		П010024005_76_29 = 0;
		П010062505_76_29 = 0;
		
		ВыборкаПоСчету = мБухИтогиРС.ПолучитьОстаткиИОбороты("Счет", Счет76_29);
		
		Если НЕ ВыборкаПоСчету = Неопределено Тогда
			
			П010024005_76_29 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокДт;
			П010062505_76_29 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокКт;
			
		КонецЕсли;
		
		П010024005_76_39 = 0;
		П010062505_76_39 = 0;
		
		ВыборкаПоСчету = мБухИтогиРС.ПолучитьОстаткиИОбороты("Счет", Счет76_39);
		
		Если НЕ ВыборкаПоСчету = Неопределено Тогда
			
			П010024005_76_39 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокДт;
			П010062505_76_39 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокКт;
			
		КонецЕсли;
		
		П010024005_76_НА = 0;
		П010062505_76_НА = 0;
		
		Если Есть76НА Тогда
			ВыборкаПоСчету = мБухИтогиРС.ПолучитьОстаткиИОбороты("Счет", Счет76_НА);
			
			Если НЕ ВыборкаПоСчету = Неопределено Тогда
				
				П010024005_76_НА = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокДт;
				П010062505_76_НА = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокКт;
				
			КонецЕсли;
		КонецЕсли;

		Если ЭтоБалансДляАУ Тогда
			
			П010024005_76_51 = 0;
			П010062505_76_51 = 0;

			ВыборкаПоСчету = мБухИтогиРС.ПолучитьОстаткиИОбороты("Счет", Счет76_51);

			Если НЕ ВыборкаПоСчету = Неопределено Тогда

				П010024005_76_51 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокДт;
				П010062505_76_51 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокКт;

			КонецЕсли;
			
			П010024005_76_52 = 0;
			П010062505_76_52 = 0;

			ВыборкаПоСчету = мБухИтогиРС.ПолучитьОстаткиИОбороты("Счет", Счет76_52);

			Если НЕ ВыборкаПоСчету = Неопределено Тогда

				П010024005_76_52 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокДт;
				П010062505_76_52 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокКт;

			КонецЕсли;
			
		КонецЕсли;
		
		// На активных счетах учета расчетов с покупателями и заказчиками, на которых
		// допускается учет авансов, может возникать ситуация, когда полученный аванс
		// "уводит" остаток в минус, то есть в кредит. В этом случае этот отрицательый
		// остаток надо извлечь и затем прибавить к кредиторской  задолженности, которая
		// образовалась на счетах учета полученных авансов.
		
		ИтогиРС = "НачальныйРазвернутыйОстатокДт, НачальныйРазвернутыйОстатокКт, КонечныйРазвернутыйОстатокДт, КонечныйРазвернутыйОстатокКт";
		
		мБухИтогиРС.РассчитатьИтоги("Хозрасчетный", ИтогиРС, "Сумма", "Счет, Субконто1, Субконто2", мДатаНачалаПериодаПрошлогоГода, мДатаКонцаПериодаПрошлогоГода, , СчетаУчетаРасчетов, ВидыСубконтоДляРасчета, , , "Организация", мОргРасшифровка);
		
		// В дебиторской задолженности учитываем только дебетовое развернутое сальдо
		П010024105_62_01_СКД = мБухИтогиРС.ПолучитьИтог("СуммаКонечныйРазвернутыйОстатокДт",  "Счет", Счет62_01);
		П010024105_62_21_СКД = мБухИтогиРС.ПолучитьИтог("СуммаКонечныйРазвернутыйОстатокДт",  "Счет", Счет62_21);
		П010024105_62_31_СКД = мБухИтогиРС.ПолучитьИтог("СуммаКонечныйРазвернутыйОстатокДт",  "Счет", Счет62_31);
		
		// Кредитовое сальдо учитываем в кредиторской задолженности
		П010062505_62_01_СКК = мБухИтогиРС.ПолучитьИтог("СуммаКонечныйРазвернутыйОстатокКт",  "Счет", Счет62_01);
		П010062505_62_21_СКК = мБухИтогиРС.ПолучитьИтог("СуммаКонечныйРазвернутыйОстатокКт",  "Счет", Счет62_21);
		П010062505_62_31_СКК = мБухИтогиРС.ПолучитьИтог("СуммаКонечныйРазвернутыйОстатокКт",  "Счет", Счет62_31);
		
		// На пассивных счетах учета расчетов с поставщиками и подрядчиками, на которых допускается 
		// учет авансов, может возникать ситуация, когда выплаченный аванс "уводит" 
		// остаток в минус, то есть в дебет. В этом случае этот отрицательый кредитовый остаток 
		// надо извлечь и затем прибавить к дебиторской задолженности, которая 
		// образовалась на счетах учета выплаченных авансов.
		
		// В кредиторской задолженности учитываем только кредитовое сальдо
		П010062105_60_01_СКК = мБухИтогиРС.ПолучитьИтог("СуммаКонечныйРазвернутыйОстатокКт",  "Счет", Счет60_01);
		П010062105_60_21_СКК = мБухИтогиРС.ПолучитьИтог("СуммаКонечныйРазвернутыйОстатокКт",  "Счет", Счет60_21);
		П010062105_60_31_СКК = мБухИтогиРС.ПолучитьИтог("СуммаКонечныйРазвернутыйОстатокКт",  "Счет", Счет60_31);
		
		// Дебетовое сальдо учитываем в дебиторской задолженности.
		П010024005_60_01_СКД = мБухИтогиРС.ПолучитьИтог("СуммаКонечныйРазвернутыйОстатокДт",  "Счет", Счет60_01);
		П010024005_60_21_СКД = мБухИтогиРС.ПолучитьИтог("СуммаКонечныйРазвернутыйОстатокДт",  "Счет", Счет60_21);
		П010024005_60_31_СКД = мБухИтогиРС.ПолучитьИтог("СуммаКонечныйРазвернутыйОстатокДт",  "Счет", Счет60_31);
		
		П010024105_62_03 = СКД(Счет62_03);
		П010024105_63    = СКК(Счет63);
		
		П010024105 = П010024105_62_01_СКД
		+ П010024105_62_21_СКД
		+ П010024105_62_31_СКД
		+ П010024105_62_03
		- П010024105_63
		+ П010024105_76_06
		+ П010024105_76_26
		+ П010024105_76_36;
		
		П010024005_60_02 = СКД(Счет60_02);
		П010024005_60_22 = СКД(Счет60_22);
		П010024005_60_32 = СКД(Счет60_32);
		
		// в строку 240 входят данные по строке 241
		П010024005 = П010024105
		+ П010024005_60_02
		+ П010024005_60_01_СКД
		+ П010024005_60_22
		+ П010024005_60_21_СКД
		+ П010024005_60_32
		+ П010024005_60_31_СКД;
		
		// Если задолженность не анализируется, все задолженности считаем краткосрочными
		
		// Данные для строки 250 собираются последовательно. Это - часть 1.
		
		// строка 250 "Краткосрочные финансовые вложения"
		
		П010025005_58_01_2 = СКД(Счет58_01_2);
		П010025005_58_02   = СКД(Счет58_02);
		П010025005_58_03   = СКД(Счет58_03);
		П010025005_58_04   = СКД(Счет58_04);
		П010025005_58_05   = СКД(Счет58_05);
		П010025005_59      = СКК(Счет59);
		
		П010025005 = П010025005_58_01_2 + П010025005_58_02 - П010025005_59 + П010025005_58_03 + П010025005_58_04 + П010025005_58_05;
		
		// Собираем данные по субсчетам счета 68
		
		// Развернутые итоги по субсчету 68.04.1 по бюджетам
		мБухИтогиРС.РассчитатьИтоги("Хозрасчетный", ИтогиРС, "Сумма", "Счет, Субконто1", мДатаНачалаПериодаПрошлогоГода, мДатаКонцаПериодаПрошлогоГода, , "68.04.1", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.УровниБюджетов, , , "Организация", мОргРасшифровка);
		
		ВыборкаПоСчету = мБухИтогиРС.ПолучитьОстаткиИОбороты("Счет", Счет68_04_1);
		
		П010024005_68_04_1 = 0;
		П010062405_68_04_1 = 0;
		
		Если НЕ ВыборкаПоСчету = Неопределено Тогда
			
			П010024005_68_04_1 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокДт;
			П010062405_68_04_1 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокКт;
			
		КонецЕсли;
		
		// Развернутые итоги по субсчету 68.10 по бюджетам
		мБухИтогиРС.РассчитатьИтоги("Хозрасчетный", ИтогиРС, "Сумма", "Счет, Субконто1", мДатаНачалаПериодаПрошлогоГода, мДатаКонцаПериодаПрошлогоГода, , "68.10", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.УровниБюджетов, , , "Организация", мОргРасшифровка);
		
		ВыборкаПоСчету = мБухИтогиРС.ПолучитьОстаткиИОбороты("Счет", Счет68_10);
		
		П010024005_68_10 = 0;
		П010062405_68_10 = 0;
		
		Если НЕ ВыборкаПоСчету = Неопределено Тогда
			
			П010024005_68_10 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокДт;
			П010062405_68_10 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокКт;
			
		КонецЕсли;
		
		П010024005_68_01   = СКД(Счет68_01);
		П010024005_68_02   = СКД(Счет68_02);
		П010024005_68_03   = СКД(Счет68_03);
		
		П010024005_68_04_2 = СКД(Счет68_04_2);
		П010024005_68_07   = СКД(Счет68_07);
		П010024005_68_08   = СКД(Счет68_08);
		П010024005_68_09   = СКД(Счет68_09);
		
		П010024005_68_11   = СКД(Счет68_11);
		П010024005_68_12   = СКД(Счет68_12);
		
		П010024005_68 = 0;
		
		П010024005_68 = П010024005_68_01
		+ П010024005_68_02
		+ П010024005_68_03
		+ П010024005_68_04_1
		+ П010024005_68_04_2
		+ П010024005_68_07
		+ П010024005_68_08
		+ П010024005_68_09
		+ П010024005_68_10
		+ П010024005_68_11
		+ П010024005_68_12;
		
		П010062405_68_01   = СКК(Счет68_01);
		П010062405_68_02   = СКК(Счет68_02);
		П010062405_68_03   = СКК(Счет68_03);
		
		П010062405_68_04_2 = СКК(Счет68_04_2);
		П010062405_68_07   = СКК(Счет68_07);
		П010062405_68_08   = СКК(Счет68_08);
		П010062405_68_09   = СКК(Счет68_09);
		
		П010062405_68_11   = СКК(Счет68_11);
		П010062405_68_12   = СКК(Счет68_12);
		П010062405_68_22   = СКК(Счет68_22);
		
		П010062405_68_32   = 0;
		Если Есть68_32 Тогда
			П010062405_68_32   = СКК(Счет68_32);
		КонецЕсли;
		
		П010062405_68 = 0;
		
		П010062405_68 = П010062405_68_01
		+ П010062405_68_02
		+ П010062405_68_03
		+ П010062405_68_04_1
		+ П010062405_68_04_2
		+ П010062405_68_07
		+ П010062405_68_08
		+ П010062405_68_09
		+ П010062405_68_10
		+ П010062405_68_11
		+ П010062405_68_12
		+ П010062405_68_22
		+ П010062405_68_32;
		
		// Собираем данные по субсчетам счета 69
		П010024005_69 = СКДР(Счет69);
		П010062305_69 = СККР(Счет69);
		
		// Развернутые итоги по счету 71
		ИДКонфигурации = РегламентированнаяОтчетность.ИДКонфигурации();
		Если ИДКонфигурации = "УПП" ИЛИ ИДКонфигурации = "КА" Тогда
			мБухИтогиРС.РассчитатьИтоги("Хозрасчетный", ИтогиРС, "Сумма", "Счет, Субконто1", мДатаНачалаПериодаПрошлогоГода, мДатаКонцаПериодаПрошлогоГода, , "71", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации, , , "Организация", мОргРасшифровка);
		ИначеЕсли ИДКонфигурации = "БП" ИЛИ ИДКонфигурации = "БПКОРП" ИЛИ ИДКонфигурации = "БАУКОРП" ИЛИ ИДКонфигурации = "БАУ" Тогда
			мБухИтогиРС.РассчитатьИтоги("Хозрасчетный", ИтогиРС, "Сумма", "Счет, Субконто1", мДатаНачалаПериодаПрошлогоГода, мДатаКонцаПериодаПрошлогоГода, , "71", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизаций, , , "Организация", мОргРасшифровка);
		КонецЕсли;
		
		ВыборкаПоСчету = мБухИтогиРС.ПолучитьОстаткиИОбороты("Счет", Счет71);
		
		П010024005_71 = 0;
		П010062505_71 = 0;
		
		Если НЕ ВыборкаПоСчету = Неопределено Тогда
			
			П010024005_71 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокДт;
			П010062505_71 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокКт;
			
		КонецЕсли;
		
		П010024005_73    = СКД(Счет73);
		П010024005_75_01 = СКД(Счет75_01);
		П010024005_76_02 = СКД(Счет76_02);
		П010024005_76_22 = СКД(Счет76_22);
		П010024005_76_32 = СКД(Счет76_32);
		П010024005_76_03 = СКД(Счет76_03);
		П010024005_76_41 = СКД(Счет76_41);
		П010024005_79    = СКД(Счет79);
		
		П010024005 = П010024005
		+ П010024005_68
		+ П010024005_69
		+ П010024005_71
		+ П010024005_73
		+ П010024005_75_01
		+ П010024005_76_01
		+ П010024005_76_21
		+ П010024005_76_02
		+ П010024005_76_22
		+ П010024005_76_32
		+ П010024005_76_05
		+ П010024005_76_25
		+ П010024005_76_03
		+ П010024005_76_35
		+ П010024005_76_09
		+ П010024005_76_29
		+ П010024005_76_39
		+ П010024005_76_41
		+ П010024005_79;
		
		Если ЭтоБалансДляАУ Тогда
			П010024005 = П010024005
					   + П010024005_76_51
					   + П010024005_76_52;
		КонецЕсли;
		
		//П010024005 = П010024005 + П010024005_76_НА;
		
		УстановитьЗначениеПоказателя("П000100123005", П010024005);
		
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123005", "Строка 1230 ""Дебиторская задолженность"", графа """ + ЗаголовокДатаКонцаПрошлогоГода + """", "+", "!СКД", П010024005_60_02, Счет60_02, , мДатаНачалаПериодаПрошлогоГода, мДатаКонцаПериодаПрошлогоГода, "Баланс");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123005", "", "+", "Сальдо отрицательное на конец периода по кредиту счета 60.01, развернутое по субконто ""Контрагенты"", ""Договоры""", П010024005_60_01_СКД, Счет60_01);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123005", "", "+", "!СКД", П010024005_60_22, Счет60_22);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123005", "", "+", "Сальдо отрицательное на конец периода по кредиту счета 60.21, развернутое по субконто ""Контрагенты"", ""Договоры""", П010024005_60_21_СКД, Счет60_21);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123005", "", "+", "!СКД", П010024005_60_32, Счет60_32);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123005", "", "+", "Сальдо отрицательное на конец периода по кредиту счета 60.31, развернутое по субконто ""Контрагенты"", ""Договоры""", П010024005_60_31_СКД, Счет60_31);
		
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123005", "", "+", "!СКД", П010024005_68_01, Счет68_01);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123005", "", "+", "!СКД", П010024005_68_02, Счет68_02);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123005", "", "+", "!СКД", П010024005_68_03, Счет68_03);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123005", "", "+", "Сальдо на конец периода по дебету счета 68.04.1 по субконто ""Уровни бюджетов""", П010024005_68_04_1, Счет68_04_1);
		
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123005", "", "+", "!СКД", П010024005_68_04_2, Счет68_04_2);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123005", "", "+", "!СКД", П010024005_68_07, Счет68_07);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123005", "", "+", "!СКД", П010024005_68_08, Счет68_08);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123005", "", "+", "!СКД", П010024005_68_09, Счет68_09);
		
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123005", "", "+", "Сальдо на конец периода по дебету счета 68.10 по субконто ""Уровни бюджетов""", П010024005_68_10, Счет68_10);
		
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123005", "", "+", "!СКД", П010024005_68_11, Счет68_11);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123005", "", "+", "!СКД", П010024005_68_12, Счет68_12);
		
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123005", "", "+", "!СКДР", П010024005_69, Счет69);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123005", "", "+", "Сальдо на конец периода по дебету счета 71, развернутое по субконто ""Работники организации""", П010024005_71, Счет71);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123005", "", "+", "!СКД", П010024005_73, Счет73);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123005", "", "+", "!СКД", П010024005_75_01, Счет75_01);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123005", "", "+", "Сальдо на конец периода по дебету счета 76.01, развернутое по субконто ""Контрагенты""", П010024005_76_01, Счет76_01);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123005", "", "+", "Сальдо на конец периода по дебету счета 76.21, развернутое по субконто ""Контрагенты""", П010024005_76_21, Счет76_21);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123005", "", "+", "!СКД", П010024005_76_02, Счет76_02);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123005", "", "+", "!СКД", П010024005_76_22, Счет76_22);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123005", "", "+", "!СКД", П010024005_76_03, Счет76_03);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123005", "", "+", "!СКД", П010024005_76_32, Счет76_32);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123005", "", "+", "Сальдо на конец периода по дебету счета 76.05, развернутое по субконто ""Контрагенты""", П010024005_76_05, Счет76_05);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123005", "", "+", "Сальдо на конец периода по дебету счета 76.25, развернутое по субконто ""Контрагенты""", П010024005_76_25, Счет76_25);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123005", "", "+", "Сальдо на конец периода по дебету счета 76.35, развернутое по субконто ""Контрагенты""", П010024005_76_35, Счет76_35);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123005", "", "+", "Сальдо на конец периода по дебету счета 76.09, развернутое по субконто ""Контрагенты""", П010024005_76_09, Счет76_09);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123005", "", "+", "Сальдо на конец периода по дебету счета 76.29, развернутое по субконто ""Контрагенты""", П010024005_76_29, Счет76_29);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123005", "", "+", "Сальдо на конец периода по дебету счета 76.39, развернутое по субконто ""Контрагенты""", П010024005_76_39, Счет76_39);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123005", "", "+", "!СКД", П010024005_76_41, Счет76_41);
		
		Если ЭтоБалансДляАУ Тогда
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123005", "", "+", "Сальдо на конец периода по дебету счета 76.51, развернутое по субконто ""Контрагенты""", П010024005_76_51, Счет76_51);
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123005", "", "+", "Сальдо на конец периода по дебету счета 76.52, развернутое по субконто ""Контрагенты""", П010024005_76_52, Счет76_52);
		КонецЕсли;
		
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123005", "", "+", "!СКД", П010024005_79, Счет79);
		
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123005", "", "+", "Сальдо на конец периода по дебету счета 62.01, развернутое по субконто ""Контрагенты"", ""Договоры""", П010024105_62_01_СКД, Счет62_01);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123005", "", "+", "Сальдо на конец периода по дебету счета 62.21, развернутое по субконто ""Контрагенты"", ""Договоры""", П010024105_62_21_СКД, Счет62_21);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123005", "", "+", "Сальдо на конец периода по дебету счета 62.31, развернутое по субконто ""Контрагенты"", ""Договоры""", П010024105_62_31_СКД, Счет62_31);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123005", "", "+", "!СКД", П010024105_62_03, Счет62_03);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123005", "", "-", "!СКК", -П010024105_63, Счет63);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123005", "", "+", "Сальдо на конец периода по дебету счета 76.06, развернутое по субконто ""Контрагенты""", П010024105_76_06, Счет76_06);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123005", "", "+", "Сальдо на конец периода по дебету счета 76.26, развернутое по субконто ""Контрагенты""", П010024105_76_26, Счет76_26);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123005", "", "+", "Сальдо на конец периода по дебету счета 76.36, развернутое по субконто ""Контрагенты""", П010024105_76_36, Счет76_36);
		
		// строка 1240 "финансовые вложения"
		П010025005_55_03 = СКД(Счет55_03);
		П010025005_55_23 = СКД(Счет55_23);
		
		П010025005 = П010025005 + П010025005_55_03 + П010025005_55_23;
		
		УстановитьЗначениеПоказателя("П000100124005", П010025005);
		
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100124005", "Строка 1240 ""Краткосрочные финансовые вложения"", графа """ + ЗаголовокДатаКонцаПрошлогоГода + """", "+", "!СКД", П010025005_58_01_2, Счет58_01_2, , мДатаНачалаПериодаПрошлогоГода, мДатаКонцаПериодаПрошлогоГода, "Баланс");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100124005", "", "+", "!СКД", П010025005_58_02, Счет58_02);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100124005", "", "-", "!СКК", -П010025005_59, Счет59);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100124005", "", "+", "!СКД", П010025005_58_03, Счет58_03);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100124005", "", "+", "!СКД", П010025005_58_04, Счет58_04);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100124005", "", "+", "!СКД", П010025005_58_05, Счет58_05);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100124005", "", "+", "!СКД", П010025005_55_03, Счет55_03);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100124005", "", "+", "!СКД", П010025005_55_23, Счет55_23);
		
		// строка 1250 "Денежные средства"
		
		П010026005_50_01 = СКД(Счет50_01);
		П010026005_50_02 = СКД(Счет50_02);
		П010026005_50_21 = СКД(Счет50_21);
		П010026005_51    = СКД(Счет51);
		П010026005_52    = СКД(Счет52);
		П010026005_55_01 = СКД(Счет55_01);
		П010026005_55_02 = СКД(Счет55_02);
		П010026005_55_04 = СКД(Счет55_04);
		П010026005_55_21 = СКД(Счет55_21);
		П010026005_55_24 = СКД(Счет55_24);
		П010026005_57    = СКД(Счет57);
		
		П010026005 = П010026005_50_01
		+ П010026005_50_02
		+ П010026005_50_21
		+ П010026005_51
		+ П010026005_52
		+ П010026005_55_01
		+ П010026005_55_02
		+ П010026005_55_04
		+ П010026005_55_21
		+ П010026005_55_24
		+ П010026005_57;
		
		УстановитьЗначениеПоказателя("П000100125005", П010026005);
		
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100125005", "Строка 1250 ""Денежные средства"", графа """ + ЗаголовокДатаКонцаПрошлогоГода + """", "+", "!СКД", П010026005_50_01, Счет50_01, , мДатаНачалаПериодаПрошлогоГода, мДатаКонцаПериодаПрошлогоГода, "Баланс");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100125005", "", "+", "!СКД", П010026005_50_02, Счет50_02);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100125005", "", "+", "!СКД", П010026005_50_21, Счет50_21);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100125005", "", "+", "!СКД", П010026005_51, Счет51);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100125005", "", "+", "!СКД", П010026005_52, Счет52);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100125005", "", "+", "!СКД", П010026005_55_01, Счет55_01);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100125005", "", "+", "!СКД", П010026005_55_02, Счет55_02);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100125005", "", "+", "!СКД", П010026005_55_04, Счет55_04);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100125005", "", "+", "!СКД", П010026005_55_21, Счет55_21);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100125005", "", "+", "!СКД", П010026005_55_24, Счет55_24);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100125005", "", "+", "!СКД", П010026005_57, Счет57);
		
		// строка 1260 "Прочие оборотные активы"
		
		П0100126005_50_03 = СКД(Счет50_03);
		П0100126005_50_23 = СКД(Счет50_23);
		П0100126005_68_22 = СКД(Счет68_22);
		П0100126005_76_АВ = СКД(Счет76_АВ);
		П0100126005_76_ОТ = СКД(Счет76_ОТ);
		П0100126005_94    = СКД(Счет94);
		П0100126005_97    = СКД(Счет97);

		П0100126005 = П0100122005_19_06 // из строки 1220
		            + П0100126005_50_03
		            + П0100126005_50_23
		            + П0100126005_68_22
		            + П0100126005_76_АВ
		            + П0100126005_76_ОТ
		            + П010024005_76_НА
		            + П0100126005_94
		            + П0100126005_97;
		
		УстановитьЗначениеПоказателя("П000100126005", П0100126005);
		
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100126005", "Строка 1260 ""Прочие оборотные активы"", графа """ + ЗаголовокДатаКонцаПрошлогоГода + """", "+", "!СКД", П0100122005_19_06, Счет19_06, , мДатаНачалаПериодаПрошлогоГода, мДатаКонцаПериодаПрошлогоГода, "Баланс");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100126005", "", "+", "!СКД", П0100126005_50_03, Счет50_03);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100126005", "", "+", "!СКД", П0100126005_50_23, Счет50_23);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100126005", "", "+", "!СКД", П0100126005_68_22, Счет68_22);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100126005", "", "+", "!СКД", П0100126005_76_АВ, Счет76_АВ);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100126005", "", "+", "!СКД", П0100126005_76_ОТ, Счет76_ОТ);
		
		Если Есть76НА Тогда
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100126005", "", "+", "Сальдо на конец периода по дебету счета 76.НА, развернутое по субконто ""Контрагенты""", П010024005_76_НА, Счет76_НА);
		КонецЕсли;
		
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100126005", "", "+", "!СКД", П0100126005_94, Счет94);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100126005", "", "+", "!СКД", П0100126005_97, Счет97);

		//	Если НЕ ЭтоБалансДляАУ Тогда
		//	
		// строка 1310 "Уставный капитал"
		//		П010041003 = СНК(Счет80);
		//		УстановитьЗначениеПоказателя("П000010041003", П010041003);
		//		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010041003", "Строка 410 ""Уставный капитал"", графа ""На начало отчетного года""", "+", "!СНК", П010041003, Счет80, , , , "Баланс");
		
		П0100131005 = СКК(Счет80);
		УстановитьЗначениеПоказателя("П000100131005", П0100131005);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100131005", "Строка 1310 ""Уставный капитал"", графа """ + ЗаголовокДатаКонцаПрошлогоГода + """", "+", "!СКК", П0100131005, Счет80, , мДатаНачалаПериодаПрошлогоГода, мДатаКонцаПериодаПрошлогоГода, "Баланс");
		
		// строка 1320 "Собственные акции, выкупленные у акционеров"
		//		П010041103 = -СНД(Счет81);
		//		УстановитьЗначениеПоказателя("П000010041103", П010041103);
		//		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010041103", "Строка 411 ""Собственные акции, выкупленные у акционеров"", графа ""На начало отчетного года""", "-", "!СНК", П010041103, Счет81, , , , "Баланс");
		
		П0100132005 = -СКД(Счет81);
		УстановитьЗначениеПоказателя("П000100132005", П0100132005);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100132005", "Строка 1320 ""Собственные акции, выкупленные у акционеров"", графа """ + ЗаголовокДатаКонцаПрошлогоГода + """", "-", "!СКК", П0100132005, Счет81, , мДатаНачалаПериодаПрошлогоГода, мДатаКонцаПериодаПрошлогоГода, "Баланс");
		
		//	КонецЕсли;
		
		// строка 1340 "Переоценка внеоборотных активов"
		П0100134005 = СКК(Счет83_01);
		УстановитьЗначениеПоказателя("П000100134005", П0100134005);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100134005", "Строка 1340 ""Переоценка внеоборотных активов"", графа """ + ЗаголовокДатаКонцаПрошлогоГода + """", "+", "Сальдо на конец периода по кредиту счета 83.01", П0100134005, Счет83_01, , мДатаНачалаПериодаПрошлогоГода, мДатаКонцаПериодаПрошлогоГода, "Баланс");
		
		// строка 1350 "Добавочный капитал (без переоценки)"
		
		П0100135005_83 = СКК(Счет83);
		
		П0100135005 = П0100135005_83 - П0100134005;
		
		УстановитьЗначениеПоказателя("П000100135005", П0100135005);
		
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100135005", "Строка 1350 ""Добавочный капитал (без переоценки)"", графа """ + ЗаголовокДатаКонцаПрошлогоГода + """", "+", "!СКК", П0100135005_83, Счет83, , мДатаНачалаПериодаПрошлогоГода, мДатаКонцаПериодаПрошлогоГода, "Баланс");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100135005", "", "-", "Сальдо на конец периода по кредиту счета 83.01", -П0100134005, Счет83_01);
		
		//ИтогиРС = "ОборотДт, ОборотКт, КорОборотДт, КорОборотКт";
		//мБухИтогиРС.РассчитатьИтоги("Хозрасчетный", ИтогиРС, "Сумма", "Счет, КорСчет", мДатаНачалаПериодаОтчета, мДатаКонцаПериодаОтчета, , "77", , , , "Организация", мОргРасшифровка);
		
		//ОБ_77__84_01 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотДт", "Счет, КорСчет", Счет77, Счет84_01);
		//ОБ_84_02__77 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотКт", "Счет, КорСчет", Счет77, Счет84_02);
		
		//ОБ_77__99 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотДт", "Счет, КорСчет", Счет77, Счет99);
		//ОБ_99__77 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотКт", "Счет, КорСчет", Счет77, Счет99);
		
		
		//	Если ЭтоБалансДляАУ Тогда
		
		//		П010042103 = СНК(Счет83_10);
		//		УстановитьЗначениеПоказателя("П000010042103", П010042103);
		//		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010042103", "Строка 421 ""Фонд недвижимого и особо ценного движимого имущества"", графа ""На начало отчетного года""", "+", "!СНК", П010042103, Счет83_10, , , , "Баланс");
		
		//		П010042104 = СКК(Счет83_10);
		//		УстановитьЗначениеПоказателя("П000010042104", П010042104);
		//		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010042104", "Строка 421 ""Фонд недвижимого и особо ценного движимого имущества"", графа ""На конец отчетного периода""", "+", "!СКК", П010042104, Счет83_10, , , , "Баланс");
		
		//		// строка 440 "Целевое финансирование"
		//		П010044003_86_К	= СНК(Счет86);
		//		П010044003_86_Д	= СНД(Счет86);
		//		П010044003_84_К = СНК(Счет84);
		//		П010044003_84_Д = СНД(Счет84);
		
		//		П010044003 = П010044003_86_К - П010044003_86_Д + П010044003_84_К - П010044003_84_Д;
		//		УстановитьЗначениеПоказателя("П000010044003", П010044003);
		//		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010044003", "Строка 440 ""Целевое финансирование"", графа ""На начало отчетного года""", "+", "!СНК", П010044003_86_К, Счет86, , , , "Баланс");
		//		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010044003", "", "-", "!СНД", -П010044003_86_Д, Счет86);
		//		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010044003", "", "+", "!СНК", П010044003_84_К, Счет84);
		//		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010044003", "", "-", "!СНД", -П010044003_84_Д, Счет84);
		
		//		П010044004_86_К = СКК(Счет86);
		//		П010044004_86_Д = СКД(Счет86);
		//		П010044004_84_К = СКК(Счет84);
		//		П010044004_84_Д = СКД(Счет84);
		//		П010044004_99_К = СКК(Счет99);
		//		П010044004_99_Д = СКД(Счет99);
		
		//		П010044004 = П010044004_86_К - П010044004_86_Д + П010044004_84_К - П010044004_84_Д + П010044004_99_К - П010044004_99_Д;
		//		УстановитьЗначениеПоказателя("П000010044004", П010044004);
		//		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010044004", "Строка 440 ""Целевое финансирование"", графа ""На конец отчетного периода""", "+", "!СКК", П010044004_86_К, Счет86, , , , "Баланс");
		//		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010044004", "", "-", "!СКД", -П010044004_86_Д, Счет86);
		//		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010044004", "", "+", "!СКК", П010044004_84_К, Счет84);
		//		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010044004", "", "-", "!СКД", -П010044004_84_Д, Счет84);
		//		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010044004", "", "+", "!СКК", П010044004_99_К, Счет99);
		//		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010044004", "", "-", "!СКД", -П010044004_99_Д, Счет99);
		//		
		//	Иначе
		
		// строка 1360 "Резервный капитал"
		П0100136005 = СКК(Счет82);
		УстановитьЗначениеПоказателя("П000100136005", П0100136005);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100136005", "Строка 1360 ""Резервный капитал"", графа """ + ЗаголовокДатаКонцаПрошлогоГода + """", "+", "!СКК", П0100136005, Счет82, , мДатаНачалаПериодаПрошлогоГода, мДатаКонцаПериодаПрошлогоГода, "Баланс");
		
		
		//		// строка 1370 "Нераспределенная прибыль (непокрытый убыток)"
		////		П010047003_84_К = СНК(Счет84);
		////		П010047003_84_Д = СНД(Счет84);
		
		////		П010047003 = П010047003_84_К - П010047003_84_Д;
		////		УстановитьЗначениеПоказателя("П000010047003", П010047003);
		
		////		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010047003", "Строка 470 ""Нераспределенная прибыль (непокрытый убыток)"", графа ""На начало отчетного года""", "+", "!СНК", П010047003_84_К, Счет84, , , , "Баланс");
		////		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010047003", "", "-", "!СНД", -П010047003_84_Д, Счет84);
		
		//		// Графа "На конец отчетного периода" учитывает  возможную переоценку
		//		// отложенных налоговых активов и отложенных налоговых обязательств.
		//		П010047004_84_К = СКК(Счет84);
		//		П010047004_84_Д = СКД(Счет84);
		//		П010047004_99_К = СКК(Счет99);
		//		П010047004_99_Д = СКД(Счет99);
		
		//		П0100137004 = П010047004_84_К - П010047004_84_Д + П010047004_99_К - П010047004_99_Д - ОБ_09__84_01 + ОБ_84_02__09 + ОБ_84_02__77 - ОБ_77__84_01;
		//		УстановитьЗначениеПоказателя("П000100137004", П0100137004);
		
		//		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100137004", "Строка 1370 ""Нераспределенная прибыль (непокрытый убыток)"", графа """ + ЗаголовокДатаОтчетная + """", "+", "!СКК", П010047004_84_К, Счет84, , , , "Баланс");
		//		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100137004", "", "-", "!СКД", -П010047004_84_Д, Счет84);
		//		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100137004", "", "+", "!СКК",  П010047004_99_К, Счет99);
		//		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100137004", "", "-", "!СКД", -П010047004_99_Д, Счет99);
		//		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100137004", "", "-",  "!ОБ",    -ОБ_09__84_01, Счет09,    Счет84_01);
		//		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100137004", "", "+",  "!ОБ",     ОБ_84_02__09, Счет84_02, Счет09);
		//		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100137004", "", "+",  "!ОБ",     ОБ_84_02__77, Счет84_02, Счет77);
		//		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100137004", "", "-",  "!ОБ",    -ОБ_77__84_01, Счет77,    Счет84_01);
		
		//	КонецЕсли;
		
		// строка 1410 "Заемные средства" 
		
		П0100141005 = СКК(Счет67);
		УстановитьЗначениеПоказателя("П000100141005", П0100141005);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100141005", "Строка 1410 ""Заемные средства"", графа """ + ЗаголовокДатаКонцаПрошлогоГода + """", "+", "!СКК", П0100141005, Счет67, , мДатаНачалаПериодаПрошлогоГода, мДатаКонцаПериодаПрошлогоГода, "Баланс");
		
		// строка 1420 "Отложенные налоговые обязательства"
		// В балансе за отчетный год необходимо учесть возможную переоценку
		// отложенных налоговых активов и отложенных налоговых обязательств,
		// проведенную в связи с изменением ставки налога на прибыль. Результаты
		// переоценки должны показываться в балансе за год, следующий за отчетным,
		// но отражаются проводками в отчетном году. Для учета результатов
		// переоценки корректируем остатки счета 77 на конец периода на обороты:
		// - в корреспонденции со счетами 84.01 и 84.02 - для совместимости с предыдущими годами
		// - в корреспонденции со счетоми 99 (99.02.4) - для учета периодов 2011 г и позднее.
		
		ИтогиРС = "ОборотДт, ОборотКт, КорОборотДт, КорОборотКт";
		мБухИтогиРС.РассчитатьИтоги("Хозрасчетный", ИтогиРС, "Сумма", "Счет, КорСчет", мДатаНачалаПериодаПрошлогоГода, мДатаКонцаПериодаПрошлогоГода, , "77", , , , "Организация", мОргРасшифровка);
		
		ОБ_77__84_01 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотДт", "Счет, КорСчет", Счет77, Счет84_01);
		ОБ_84_02__77 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотКт", "Счет, КорСчет", Счет77, Счет84_02);
		
		ОБ_77__99_2_4 = 0;
		ОБ_99_2_4__77 = 0;
		
		Если Есть99_2_4 Тогда
			
			ОБ_77__99_2_4 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотДт", "Счет, КорСчет", Счет77, Счет99_2_4);
			ОБ_99_2_4__77 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотКт", "Счет, КорСчет", Счет77, Счет99_2_4);
			
		КонецЕсли;
		
		П0100142005_77 = СКК(Счет77);
		
		П0100142005 = П0100142005_77 - ОБ_84_02__77 + ОБ_77__84_01 - ОБ_99_2_4__77 + ОБ_77__99_2_4;
		
		УстановитьЗначениеПоказателя("П000100142005", П0100142005);
		
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100142005", "Строка 1420 ""Отложенные налоговые обзательства"", графа """ + ЗаголовокДатаКонцаПрошлогоГода + """", "+", "!СКК", П0100142005_77, Счет77, ,  мДатаНачалаПериодаПрошлогоГода, мДатаКонцаПериодаПрошлогоГода, "Баланс");
		
		Если ((ОБ_84_02__77 <> 0) ИЛИ (ОБ_77__84_01 <> 0)) Тогда
			
			// Корректировку остатка счета 77 в расшифровку добавляем только тогда, 
			// когда такая корректировка существует
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100142005", "", "-", "!ОБ", -ОБ_84_02__77, Счет84_02, Счет77);
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100142005", "", "+", "!ОБ",  ОБ_77__84_01, Счет77,    Счет84_01);
			
		КонецЕсли;
		
		Если ((ОБ_99_2_4__77 <> 0) ИЛИ (ОБ_77__99_2_4 <> 0)) Тогда
			
			// Корректировку остатка счета 77 в расшифровку добавляем только тогда, 
			// когда такая корректировка существует
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100142005", "", "-", "!ОБ", -ОБ_99_2_4__77, Счет99_2_4,     Счет77);
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100142005", "", "+", "!ОБ",  ОБ_77__99_2_4,     Счет77, Счет99_2_4);
			
		КонецЕсли;
		
		// строка 1370 "Нераспределенная прибыль (непокрытый убыток)"
		
		// Графа "На конец отчетного периода" учитывает  возможную переоценку
		// отложенных налоговых активов и отложенных налоговых обязательств.
		П010047005_84_К = СКК(Счет84);
		П010047005_84_Д = СКД(Счет84);
		П010047005_99_К = СКК(Счет99);
		П010047005_99_Д = СКД(Счет99);
		
		П0100137005 = П010047005_84_К - П010047005_84_Д
		+ П010047005_99_К - П010047005_99_Д;
		//- ОБ_09__84_01 + ОБ_84_02__09
		//+ ОБ_84_02__77 - ОБ_77__84_01
		//- ОБ_09__99_2_4 + ОБ_99_2_4__09
		//+ ОБ_99_2_4__77 - ОБ_77__99_2_4;
		
		УстановитьЗначениеПоказателя("П000100137005", П0100137005);
		
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100137005", "Строка 1370 ""Нераспределенная прибыль (непокрытый убыток)"", графа """ + ЗаголовокДатаКонцаПрошлогоГода + """", "+", "!СКК", П010047005_84_К, Счет84, ,  мДатаНачалаПериодаПрошлогоГода, мДатаКонцаПериодаПрошлогоГода, "Баланс");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100137005", "", "-", "!СКД", -П010047005_84_Д, Счет84);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100137005", "", "+", "!СКК",  П010047005_99_К, Счет99);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100137005", "", "-", "!СКД", -П010047005_99_Д, Счет99);
		
		//Если ((ОБ_09__84_01 <> 0) ИЛИ (ОБ_84_02__09 <> 0)) Тогда
		//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100137005", "", "-", "!ОБ",  -ОБ_09__84_01, Счет09,    Счет84_01);
		//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100137005", "", "+", "!ОБ",   ОБ_84_02__09, Счет84_02,    Счет09);
		//КонецЕсли;
		//
		//Если ((ОБ_84_02__77 <> 0) ИЛИ (ОБ_77__84_01 <> 0)) Тогда
		//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100137005", "", "+", "!ОБ",   ОБ_84_02__77, Счет84_02, Счет77);
		//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100137005", "", "-", "!ОБ",  -ОБ_77__84_01, Счет77,    Счет84_01);
		//КонецЕсли;
		//
		//Если ((ОБ_09__99_2_4 <> 0) ИЛИ (ОБ_99_2_4__09 <> 0)) Тогда
		//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100137005", "", "-", "!ОБ", -ОБ_09__99_2_4,     Счет09, Счет99_2_4,    , , "Баланс");
		//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100137005", "", "+", "!ОБ",  ОБ_99_2_4__09, Счет99_2_4,     Счет09,    , , "Баланс");
		//КонецЕсли;
		//
		//Если ((ОБ_99_2_4__77 <> 0) ИЛИ (ОБ_77__99_2_4 <> 0)) Тогда
		//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100137005", "", "+", "!ОБ",  ОБ_99_2_4__77, Счет99_2_4,     Счет77,    , , "Баланс");
		//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100137005", "", "-", "!ОБ", -ОБ_77__99_2_4,     Счет77, Счет99_2_4,    , , "Баланс");
		//КонецЕсли;
		
		// строка 1510 "Заемные средства"
		П0100151005 = СКК(Счет66);
		УстановитьЗначениеПоказателя("П000100151005", П0100151005);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100151005", "Строка 1510 ""Заемные средства"", графа """ + ЗаголовокДатаКонцаПрошлогоГода + """", "+", "!СКК", П0100151005, Счет66, , мДатаНачалаПериодаПрошлогоГода, мДатаКонцаПериодаПрошлогоГода, "Баланс");
		
		// строка 1520 "Кредиторская здолженность"
		
		// строка 621 "поставщики и подрядчики"
		П010062105_60_03 = СКК(Счет60_03);
		П010062205       = СКК(Счет70);
		П010062505_62_02 = СКК(Счет62_02);
		П010062505_62_22 = СКК(Счет62_22);
		П010062505_62_32 = СКК(Счет62_32);

		П010062505_75_02 = СКК(Счет75_02);

		П010062505_76_03 = СКК(Счет76_03);
		П010062505_76_04 = СКК(Счет76_04);
		П010062505_76_41 = СКК(Счет76_41);
		П010062505_76_Н  = СКК(Счет76_Н);
		П010062505_79    = СКК(Счет79);
		
		П0100152005 = П010062105_60_01_СКК
		            + П010062105_60_21_СКК
		            + П010062105_60_31_СКК
		            + П010062105_60_03
		            + П010062105_76_05
		            + П010062105_76_25
		            + П010062105_76_35
		            + П010062105_76_06
		            + П010062105_76_26
		            + П010062105_76_36
		            + П010062205
		            + П010062305_69
		            + П010062405_68_01
		            + П010062405_68_02
		            + П010062405_68_03
		            + П010062405_68_04_1
		            + П010062405_68_04_2
		            + П010062405_68_07
		            + П010062405_68_08
		            + П010062405_68_09
		            + П010062405_68_10
		            + П010062405_68_11
		            + П010062405_68_12
		            + П010062405_68_22
		            + П010062405_68_32
		            + П010062505_62_02
		            + П010062505_62_01_СКК
		            + П010062505_62_22
		            + П010062505_62_21_СКК
		            + П010062505_62_32
		            + П010062505_62_31_СКК
		            + П010062505_71
		            + П010062505_75_02
		            + П010062505_76_01
		            + П010062505_76_21
		            + П010062505_76_03
		            + П010062505_76_04
		            + П010062505_76_09
		            + П010062505_76_29
		            + П010062505_76_39
		            + П010062505_76_41
		            + П010062505_76_Н
		            + П010062505_79;
		
		Если ЭтоБалансДляАУ Тогда
			П0100152005 = П0100152005
					   + П010062505_76_51
					   + П010062505_76_52;
		КонецЕсли;

		УстановитьЗначениеПоказателя("П000100152005", П0100152005);
		
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152005", "Строка 1520 ""Кредиторская задолженность"", графа """ + ЗаголовокДатаКонцаПрошлогоГода + """", "+", "Сальдо на конец периода по кредиту счета 60.01, развернутое по субконто ""Контрагенты"", ""Договоры""", П010062105_60_01_СКК, Счет60_01, , мДатаНачалаПериодаПрошлогоГода, мДатаКонцаПериодаПрошлогоГода, "Баланс");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152005", "", "+", "Сальдо на конец периода по кредиту счета 60.21, развернутое по субконто ""Контрагенты"", ""Договоры""", П010062105_60_21_СКК, Счет60_21);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152005", "", "+", "Сальдо на конец периода по кредиту счета 60.31, развернутое по субконто ""Контрагенты"", ""Договоры""", П010062105_60_31_СКК, Счет60_31);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152005", "", "+", "!СКК", П010062105_60_03, Счет60_03);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152005", "", "+", "Сальдо на конец периода по кредиту счета 76.05, развернутое по субконто ""Контрагенты""", П010062105_76_05, Счет76_05);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152005", "", "+", "Сальдо на конец периода по кредиту счета 76.25, развернутое по субконто ""Контрагенты""", П010062105_76_25, Счет76_25);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152005", "", "+", "Сальдо на конец периода по кредиту счета 76.35, развернутое по субконто ""Контрагенты""", П010062105_76_35, Счет76_35);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152005", "", "+", "Сальдо на конец периода по кредиту счета 76.06, развернутое по субконто ""Контрагенты""", П010062105_76_06, Счет76_06);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152005", "", "+", "Сальдо на конец периода по кредиту счета 76.26, развернутое по субконто ""Контрагенты""", П010062105_76_26, Счет76_26);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152005", "", "+", "Сальдо на конец периода по кредиту счета 76.36, развернутое по субконто ""Контрагенты""", П010062105_76_36, Счет76_36);
		
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152005", "", "+", "!СКК", П010062205, Счет70, , , , "Баланс");
		
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152005", "", "+", "!СККР", П010062305_69, Счет69, , , , "Баланс");
		
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152005", "", "+", "!СКК", П010062405_68_01, Счет68_01);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152005", "", "+", "!СКК", П010062405_68_02, Счет68_02);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152005", "", "+", "!СКК", П010062405_68_03, Счет68_03);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152005", "", "+", "Сальдо на конец периода по кредиту счета 68.04.1 по субконто ""Уровни бюджетов""", П010062405_68_04_1, Счет68_04_1);
		
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152005", "", "+", "!СКК", П010062405_68_04_2, Счет68_04_2);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152005", "", "+", "!СКК", П010062405_68_07, Счет68_07);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152005", "", "+", "!СКК", П010062405_68_08, Счет68_08);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152005", "", "+", "!СКК", П010062405_68_09, Счет68_09);
		
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152005", "", "+", "Сальдо на конец периода по кредиту счета 68.10 по субконто ""Уровни бюджетов""", П010062405_68_10, Счет68_10);
		
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152005", "", "+", "!СКК", П010062405_68_11, Счет68_11);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152005", "", "+", "!СКК", П010062405_68_12, Счет68_12);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152005", "", "+", "!СКК", П010062405_68_22, Счет68_22);
		
		Если Есть68_32 Тогда
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152005", "", "+", "!СКК", П010062405_68_32, Счет68_32);
		КонецЕсли;
		
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152005", "", "+", "!СКК", П010062505_62_02, Счет62_02, , , , "Баланс");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152005", "", "+", "Сальдо отрицательное на конец периода по дебету счета 62.01, развернутое по субконто ""Контрагенты"", ""Договоры""", П010062505_62_01_СКК);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152005", "", "+", "!СКК", П010062505_62_22, Счет62_22);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152005", "", "+", "Сальдо отрицательное на конец периода по дебету счета 62.21, развернутое по субконто ""Контрагенты"", ""Договоры""", П010062505_62_21_СКК);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152005", "", "+", "!СКК", П010062505_62_32, Счет62_32);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152005", "", "+", "Сальдо отрицательное на конец периода по дебету счета 62.31, развернутое по субконто ""Контрагенты"", ""Договоры""", П010062505_62_31_СКК);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152005", "", "+", "Сальдо на конец периода по кредиту счета 71, развернутое по субконто ""Работники организации""", П010062505_71, Счет71);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152005", "", "+", "!СКК", П010062505_75_02, Счет75_02);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152005", "", "+", "Сальдо на конец периода по кредиту счета 76.01, развернутое по субконто ""Контрагенты""", П010062505_76_01, Счет76_01);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152005", "", "+", "Сальдо на конец периода по кредиту счета 76.21, развернутое по субконто ""Контрагенты""", П010062505_76_21, Счет76_21);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152005", "", "+", "!СКК", П010062505_76_03, Счет76_03);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152005", "", "+", "!СКК", П010062505_76_04, Счет76_04);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152005", "", "+", "Сальдо на конец периода по кредиту счета 76.09, развернутое по субконто ""Контрагенты""", П010062505_76_09, Счет76_09);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152005", "", "+", "Сальдо на конец периода по кредиту счета 76.29, развернутое по субконто ""Контрагенты""", П010062505_76_29, Счет76_29);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152005", "", "+", "Сальдо на конец периода по кредиту счета 76.39, развернутое по субконто ""Контрагенты""", П010062505_76_39, Счет76_39);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152005", "", "+", "!СКК", П010062505_76_41, Счет76_41);
		
		Если ЭтоБалансДляАУ Тогда
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152005", "", "+", "Сальдо на конец периода по кредиту счета 76.51, развернутое по субконто ""Контрагенты""", П010062505_76_51, Счет76_51);
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152005", "", "+", "Сальдо на конец периода по кредиту счета 76.52, развернутое по субконто ""Контрагенты""", П010062505_76_52, Счет76_52);
		КонецЕсли;
		
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152005", "", "+", "!СКК", П010062505_76_Н, Счет76_Н);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152005", "", "+", "!СКК", П010062505_79, Счет79);
		
		// строка 1530 "Доходы будущих периодов"
		П010064005_86 = СКК(Счет86);
		П010064005_98 = СКК(Счет98);
		
		П0100153005 = П010064005_86 + П010064005_98;
		УстановитьЗначениеПоказателя("П000100153005", П0100153005);
		
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100153005", "Строка 1530 ""Доходы будущих периодов"", графа """ + ЗаголовокДатаКонцаПрошлогоГода + """", "+", "!СКК", П010064005_86, Счет86, , мДатаНачалаПериодаПрошлогоГода, мДатаКонцаПериодаПрошлогоГода, "Баланс");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100153005", "", "+", "!СКК", П010064005_98, Счет98);
		
		// строка 1540 "Резервы предстоящих расходов"
		П0100154005 = СКК(Счет96);
		
		УстановитьЗначениеПоказателя("П000100154005", П0100154005);
		
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100154005", "Строка 1540 ""Резервы предстоящих расходов"", графа """ + ЗаголовокДатаКонцаПрошлогоГода + """", "+", "Сальдо на конец периода по кредиту счета 96", П0100154005, Счет96, , мДатаНачалаПериодаПрошлогоГода, мДатаКонцаПериодаПрошлогоГода, "Баланс");
		
		// строка 1550 "Прочие обязательства"
		П0100155005_76_ВА = СКК(Счет76_ВА);
		
		П0100155005 = П0100155005_76_ВА
		            + П010062505_76_НА;
		
		УстановитьЗначениеПоказателя("П000100155005", П0100155005);
		
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100155005", "Строка 1550 ""Прочие обязательства"", графа """ + ЗаголовокДатаКонцаПрошлогоГода + """", "+", "!СКК", П0100155005_76_ВА, Счет76_ВА);
		
		Если Есть76НА = Истина Тогда
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100155005", "", "+", "Сальдо на конец периода по кредиту счета 76.НА, развернутое по субконто ""Контрагенты""", П010062505_76_НА, Счет76_НА);
		КонецЕсли;
		
	КонецЕсли;

	Если ЗаполнятьГодПредшествующийПредыдущему Тогда
		// Заполняем баланс данными на конец года, предшествующего предыдущему
		
		мДатаНачалаПериодаГодаПредшествующегоПрошлому = ДобавитьМесяц( мДатаНачалаПериодаОтчета, -24 );
		мДатаКонцаПериодаГодаПредшествующегоПрошлому = КонецГода(мДатаНачалаПериодаГодаПредшествующегоПрошлому);

		// Бухгалтерские итоги по счетам, без аналитики
		мБухИтоги.РассчитатьИтоги("Хозрасчетный", Итоги, "Сумма", "Счет", мДатаНачалаПериодаГодаПредшествующегоПрошлому, мДатаКонцаПериодаГодаПредшествующегоПрошлому, , , , , , "Организация", мОргРасшифровка);

		// строка 1110 "Нематериальные активы"
		П0100111006_04_01 = СКД(Счет04_01);
		П0100111006_05    = СКК(Счет05);

		П0100111006 = П0100111006_04_01 - П0100111006_05;
		УстановитьЗначениеПоказателя("П000100111006", П0100111006);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100111006","Строка 1110 ""Нематериальные активы"", графа """ + ЗаголовокДатаКонцаПозапрошлогоГода + """","+","!СКД", П0100111006_04_01, Счет04_01, , мДатаНачалаПериодаГодаПредшествующегоПрошлому, мДатаКонцаПериодаГодаПредшествующегоПрошлому, "Баланс");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100111006","","-","!СКК", -П0100111006_05, Счет05);

		// строка 1120 "Результаты исследований и разработок"
		// Так как расходы на НИОКР, учитываемые на счете 04.02, не амортизируются, 
		// а списываются на расходы по обычным видам деятельности, остаток 
		// на счете 04.02 равен остатку не списанных расходов на НИОКР

		П0100112006_04_02 = СКД(Счет04_02);

		УстановитьЗначениеПоказателя("П000100112006", П0100112006_04_02);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100112006", "Строка 1120 ""Результаты исследований и разработок"", графа """ + ЗаголовокДатаКонцаПозапрошлогоГода + """", "+", "!СКД", П0100112006_04_02, Счет04_02, , мДатаНачалаПериодаГодаПредшествующегоПрошлому, мДатаКонцаПериодаГодаПредшествующегоПрошлому, "Баланс");

		// строка 1130 "Основные средства"
		П0100113006_01    = СКД(Счет01);
		П0100113006_02_01 = СКК(Счет02_01);

		П0100113006 = П0100113006_01 - П0100113006_02_01;
		УстановитьЗначениеПоказателя("П000100113006", П0100113006);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100113006", "Строка 1130 ""Основные средства"", графа """ + ЗаголовокДатаКонцаПозапрошлогоГода + """", "+", "!СКД", П0100113006_01, Счет01, , мДатаНачалаПериодаГодаПредшествующегоПрошлому, мДатаКонцаПериодаГодаПредшествующегоПрошлому, "Баланс");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100113006", "", "-", "!СКК", -П0100113006_02_01, Счет02_01);

		// строка 1140 "Доходные вложения в материальные ценности"
		П0100114006_03    = СКД(Счет03);
		П0100114006_02_02 = СКК(Счет02_02);

		П0100114006 = П0100114006_03 - П0100114006_02_02;
		УстановитьЗначениеПоказателя("П000100114006", П0100114006);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100114006", "Строка 1140 ""Доходные вложения в материальные ценности"", графа """ + ЗаголовокДатаКонцаПозапрошлогоГода + """", "+", "!СКД", П0100114006_03, Счет03, , мДатаНачалаПериодаГодаПредшествующегоПрошлому, мДатаКонцаПериодаГодаПредшествующегоПрошлому, "Баланс");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100114006", "", "-", "!СКК", -П0100114006_02_02, Счет02_02);

		// строка 1150 "Финансовые вложения"
		П0100115006 = СКД(Счет58_01_1);

		УстановитьЗначениеПоказателя("П000100115006", П0100115006);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100115006", "Строка 1150 ""Долгосрочные финансовые вложения"", графа """ + ЗаголовокДатаКонцаПозапрошлогоГода + """", "+", "!СКД", П0100115006, Счет58_01_1, , мДатаНачалаПериодаГодаПредшествующегоПрошлому, мДатаКонцаПериодаГодаПредшествующегоПрошлому, "Баланс");

		// строка 1160 "Отложенные налоговые активы"
		// В балансе за отчетный год необходимо учесть возможную переоценку
		// отложенных налоговых активов и отложенных налоговых обязательств,
		// проведенную в связи с изменением ставки налога на прибыль. Результаты
		// переоценки должны показываться в балансе за год, следующий за отчетным,
		// но отражаются проводками в отчетном году. Для учета результатов
		// переоценки корректируем остатки счета 09 на конец периода на обороты:
		// - в корреспонденции со счетами 84.01 и 84.02 - свместимости с предыдущими годами
		// - в корреспонденции со счетоми 99 (99.02.4) - для учета периодов 2011 г и позднее.

		ИтогиРС = "ОборотДт, ОборотКт, КорОборотДт, КорОборотКт";
		мБухИтогиРС.РассчитатьИтоги("Хозрасчетный", ИтогиРС, "Сумма", "Счет, КорСчет", мДатаНачалаПериодаГодаПредшествующегоПрошлому, мДатаКонцаПериодаГодаПредшествующегоПрошлому, , "09", , , , "Организация", мОргРасшифровка);

		ОБ_09__84_01 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотДт", "Счет, КорСчет", Счет09, Счет84_01);
		ОБ_84_02__09 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотКт", "Счет, КорСчет", Счет09, Счет84_02);

		ОБ_09__99_2_4 = 0;
		ОБ_99_2_4__09 = 0;

		Если Есть99_2_4 Тогда
			ОБ_09__99_2_4 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотДт", "Счет, КорСчет", Счет09, Счет99_2_4);
			ОБ_99_2_4__09 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотКт", "Счет, КорСчет", Счет09, Счет99_2_4);
		КонецЕсли;

		П0100116006_09 = СКД(Счет09);

		П0100116006 = П0100116006_09 - ОБ_09__84_01 + ОБ_84_02__09 - ОБ_09__99_2_4 + ОБ_99_2_4__09;

		УстановитьЗначениеПоказателя("П000100116006", П0100116006);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100116006", "Строка 1160 ""Отложенные налоговые активы"", графа """ + ЗаголовокДатаКонцаПозапрошлогоГода + """", "+", "!СКД", П0100116006_09, Счет09, , мДатаНачалаПериодаГодаПредшествующегоПрошлому, мДатаКонцаПериодаГодаПредшествующегоПрошлому, "Баланс");

		Если ((ОБ_09__84_01 <> 0) ИЛИ (ОБ_84_02__09 <> 0)) Тогда

			// Корректировку остатка счета 09 в расшифровку добавляем только тогда, 
			// когда такая корректировка существует
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100116006", "", "-", "!ОБ", -ОБ_09__84_01, Счет09,    Счет84_01);
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100116006", "", "+", "!ОБ",  ОБ_84_02__09, Счет84_02,    Счет09);

		КонецЕсли;
		
		Если ((ОБ_09__99_2_4 <> 0) ИЛИ (ОБ_99_2_4__09 <> 0)) Тогда

			// Корректировку остатка счета 09 в расшифровку добавляем только тогда, 
			// когда такая корректировка существует
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100116006", "", "-", "!ОБ", -ОБ_09__99_2_4,     Счет09, Счет99_2_4,    , , "Баланс");
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100116006", "", "+", "!ОБ",  ОБ_99_2_4__09, Счет99_2_4,     Счет09,    , , "Баланс");

		КонецЕсли;

		// строка 1170 "Прочие внеоборотные активы"
		П0100117006_07 = СКД(Счет07);
		П0100117006_08 = СКД(Счет08);

		П0100117006 = П0100117006_07 + П0100117006_08;
		УстановитьЗначениеПоказателя("П000100117006", П0100117006);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100117006", "Строка 1170 ""Прочие внеоборотные активы"", графа ""На конец отчетного периода""", "+", "!СКД", П0100117006_07, Счет07, , мДатаНачалаПериодаГодаПредшествующегоПрошлому, мДатаКонцаПериодаГодаПредшествующегоПрошлому, "Баланс");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100117006", "", "+", "!СКД", П0100117006_08, Счет08);

		// строка 1210 "Запасы"

		П0100121006_10      = СКД(Счет10);
		П0100121006_14_01   = СКК(Счет14_01);
		П0100121006_15_01   = СКД(Счет15_01);
		П0100121006_16_01_Д = СКД(Счет16_01);
		П0100121006_16_01_К = СКК(Счет16_01);
		П0100121006_11      = СКД(Счет11);
		П0100121006_20      = СКД(Счет20);
		П0100121006_21      = СКД(Счет21);
		П0100121006_23      = СКД(Счет23);
		П0100121006_29      = СКД(Счет29);
		П0100121006_44      = СКД(Счет44);
		П0100121006_46      = СКД(Счет46);
		П0100121006_14_04   = СКК(Счет14_04);
		П0100121006_43      = СКД(Счет43);
		П0100121006_14_03   = СКК(Счет14_03);
		П0100121006_41      = СКД(Счет41);
		П0100121006_14_02   = СКК(Счет14_02);
		П0100121006_15_02   = СКД(Счет15_02);
		П0100121006_16_02_Д = СКД(Счет16_02);
		П0100121006_16_02_К = СКК(Счет16_02);
		П0100121006_42      = СКК(Счет42);
		П0100121006_45      = СКД(Счет45);
		П0100121006_28      = СКД(Счет28);

		П0100121006 = П0100121006_10 - П0100121006_14_01 + П0100121006_15_01 + П0100121006_16_01_Д - П0100121006_16_01_К
		            + П0100121006_11
		            + П0100121006_20 + П0100121006_21 + П0100121006_23 + П0100121006_29 + П0100121006_44 + П0100121006_46 - П0100121006_14_04
		            + П0100121006_43 - П0100121006_14_03 + П0100121006_41 - П0100121006_14_02 + П0100121006_15_02 + П0100121006_16_02_Д - П0100121006_16_02_К - П0100121006_42
		            + П0100121006_45
		            + П0100121006_28;

		УстановитьЗначениеПоказателя("П000100121006", П0100121006);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121006", "Строка 1210 ""Запасы"", графа """ + ЗаголовокДатаКонцаПозапрошлогоГода + """", "+", "!СКД", П0100121006_10, Счет10, , мДатаНачалаПериодаГодаПредшествующегоПрошлому, мДатаКонцаПериодаГодаПредшествующегоПрошлому, "Баланс");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121006", "", "-", "!СКД", -П0100121006_14_01, Счет14_01);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121006", "", "+", "!СКД",  П0100121006_15_01, Счет15_01);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121006", "", "+", "!СКД",  П0100121006_16_01_Д, Счет16_01);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121006", "", "-", "!СКК", -П0100121006_16_01_К, Счет16_01);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121006", "", "+", "!СКД",  П0100121006_11, Счет11);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121006", "", "+", "!СКД",  П0100121006_20, Счет20);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121006", "", "+", "!СКД",  П0100121006_21, Счет21);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121006", "", "+", "!СКД",  П0100121006_23, Счет23);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121006", "", "+", "!СКД",  П0100121006_29, Счет29);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121006", "", "+", "!СКД",  П0100121006_44, Счет44);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121006", "", "+", "!СКД",  П0100121006_46, Счет46);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121006", "", "-", "!СКК", -П0100121006_14_04, Счет14_04);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121006", "", "+", "!СКД",  П0100121006_43, Счет43);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121006", "", "-", "!СКК", -П0100121006_14_03, Счет14_03);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121006", "", "+", "!СКД",  П0100121006_41, Счет41);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121006", "", "-", "!СКК", -П0100121006_14_02, Счет14_02);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121006", "", "+", "!СКД",  П0100121006_15_02, Счет15_02);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121006", "", "+", "!СКД",  П0100121006_16_02_Д, Счет16_02);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121006", "", "-", "!СКК", -П0100121006_16_02_К, Счет16_02);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121006", "", "-", "!СКК", -П0100121006_42, Счет42);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121006", "", "+", "!СКД",  П0100121006_45, Счет45);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100121006", "", "+", "!СКД",  П0100121006_28, Счет28);

		// строка 1220 "Налог на добавленную стоимость по приобретенным ценностям"
		П0100122006_19    = СКД(Счет19);
		П0100122006_19_06 = СКД(Счет19_06);

		П0100122006 = П0100122006_19 - П0100122006_19_06;

		УстановитьЗначениеПоказателя("П000100122006", П0100122006);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100122006", "Строка 1220 ""Налог на добавленную стоимость по приобретенным ценностям"", графа """ + ЗаголовокДатаКонцаПрошлогоГода + """", "+", "!СКД", П0100122006_19, Счет19, , мДатаНачалаПериодаГодаПредшествующегоПрошлому, мДатаКонцаПериодаГодаПредшествующегоПрошлому, "Баланс");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100122006", "", "-", "!СКД", -П0100122006_19_06, Счет19_06, , , , "Баланс");

		// Из-за отсутствия необходимой аналитики для анализа срока погашения задолженности, 
		// всю задолженность считаем краткосрочной.

		ИтогиРС = "НачальныйРазвернутыйОстатокДт, НачальныйРазвернутыйОстатокКт, КонечныйРазвернутыйОстатокДт, КонечныйРазвернутыйОстатокКт";

		мБухИтогиРС.РассчитатьИтоги("Хозрасчетный", ИтогиРС, "Сумма", "Счет, Субконто1", мДатаНачалаПериодаГодаПредшествующегоПрошлому, мДатаКонцаПериодаГодаПредшествующегоПрошлому, , "76", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты, , , "Организация", мОргРасшифровка);

		П010024006_76_01 = 0;
		П010062506_76_01 = 0;

		ВыборкаПоСчету = мБухИтогиРС.ПолучитьОстаткиИОбороты("Счет", Счет76_01);

		Если НЕ ВыборкаПоСчету = Неопределено Тогда

			П010024006_76_01 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокДт;
			П010062506_76_01 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокКт;

		КонецЕсли;

		П010024006_76_21 = 0;
		П010062506_76_21 = 0;

		ВыборкаПоСчету = мБухИтогиРС.ПолучитьОстаткиИОбороты("Счет", Счет76_21);

		Если НЕ ВыборкаПоСчету = Неопределено Тогда

			П010024006_76_21 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокДт;
			П010062506_76_21 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокКт;

		КонецЕсли;

		П010024006_76_05 = 0;
		П010062106_76_05 = 0;

		ВыборкаПоСчету = мБухИтогиРС.ПолучитьОстаткиИОбороты("Счет", Счет76_05);

		Если НЕ ВыборкаПоСчету = Неопределено Тогда

			П010024006_76_05 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокДт;
			П010062106_76_05 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокКт;

		КонецЕсли;

		П010024006_76_25 = 0;
		П010062106_76_25 = 0;

		ВыборкаПоСчету = мБухИтогиРС.ПолучитьОстаткиИОбороты("Счет", Счет76_25);

		Если НЕ ВыборкаПоСчету = Неопределено Тогда

			П010024006_76_25 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокДт;
			П010062106_76_25 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокКт;

		КонецЕсли;

		П010024006_76_35 = 0;
		П010062106_76_35 = 0;

		ВыборкаПоСчету = мБухИтогиРС.ПолучитьОстаткиИОбороты("Счет", Счет76_35);

		Если НЕ ВыборкаПоСчету = Неопределено Тогда

			П010024006_76_35 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокДт;
			П010062106_76_35 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокКт;

		КонецЕсли;

		П010024106_76_06 = 0;
		П010062106_76_06 = 0;

		ВыборкаПоСчету = мБухИтогиРС.ПолучитьОстаткиИОбороты("Счет", Счет76_06);

		Если НЕ ВыборкаПоСчету = Неопределено Тогда

			П010024106_76_06 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокДт;
			П010062106_76_06 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокКт;

		КонецЕсли;

		П010024106_76_26 = 0;
		П010062106_76_26 = 0;

		ВыборкаПоСчету = мБухИтогиРС.ПолучитьОстаткиИОбороты("Счет", Счет76_26);

		Если НЕ ВыборкаПоСчету = Неопределено Тогда

			П010024106_76_26 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокДт;
			П010062106_76_26 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокКт;

		КонецЕсли;

		П010024106_76_36 = 0;
		П010062106_76_36 = 0;

		ВыборкаПоСчету = мБухИтогиРС.ПолучитьОстаткиИОбороты("Счет", Счет76_36);

		Если НЕ ВыборкаПоСчету = Неопределено Тогда

			П010024106_76_36 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокДт;
			П010062106_76_36 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокКт;

		КонецЕсли;

		П010024006_76_09 = 0;
		П010062506_76_09 = 0;

		ВыборкаПоСчету = мБухИтогиРС.ПолучитьОстаткиИОбороты("Счет", Счет76_09);

		Если НЕ ВыборкаПоСчету = Неопределено Тогда

			П010024006_76_09 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокДт;
			П010062506_76_09 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокКт;

		КонецЕсли;

		П010024006_76_29 = 0;
		П010062506_76_29 = 0;

		ВыборкаПоСчету = мБухИтогиРС.ПолучитьОстаткиИОбороты("Счет", Счет76_29);

		Если НЕ ВыборкаПоСчету = Неопределено Тогда

			П010024006_76_29 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокДт;
			П010062506_76_29 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокКт;

		КонецЕсли;

		П010024006_76_39 = 0;
		П010062506_76_39 = 0;

		ВыборкаПоСчету = мБухИтогиРС.ПолучитьОстаткиИОбороты("Счет", Счет76_39);

		Если НЕ ВыборкаПоСчету = Неопределено Тогда

			П010024006_76_39 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокДт;
			П010062506_76_39 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокКт;

		КонецЕсли;

		П010024006_76_НА = 0;
		П010062506_76_НА = 0;

		Если Есть76НА Тогда

			ВыборкаПоСчету = мБухИтогиРС.ПолучитьОстаткиИОбороты("Счет", Счет76_НА);

			Если НЕ ВыборкаПоСчету = Неопределено Тогда

				П010024006_76_НА = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокДт;
				П010062506_76_НА = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокКт;

			КонецЕсли;
		КонецЕсли;

		Если ЭтоБалансДляАУ Тогда
			
			П010024006_76_51 = 0;
			П010062506_76_51 = 0;

			ВыборкаПоСчету = мБухИтогиРС.ПолучитьОстаткиИОбороты("Счет", Счет76_51);

			Если НЕ ВыборкаПоСчету = Неопределено Тогда

				П010024006_76_51 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокДт;
				П010062506_76_51 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокКт;

			КонецЕсли;
			
			П010024006_76_52 = 0;
			П010062506_76_52 = 0;

			ВыборкаПоСчету = мБухИтогиРС.ПолучитьОстаткиИОбороты("Счет", Счет76_52);

			Если НЕ ВыборкаПоСчету = Неопределено Тогда

				П010024006_76_52 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокДт;
				П010062506_76_52 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокКт;

			КонецЕсли;
			
		КонецЕсли;
		
		// На активных счетах учета расчетов с покупателями и заказчиками, на которых
		// допускается учет авансов, может возникать ситуация, когда полученный аванс
		// "уводит" остаток в минус, то есть в кредит. В этом случае этот отрицательый
		// остаток надо извлечь и затем прибавить к кредиторской  задолженности, которая
		// образовалась на счетах учета полученных авансов.
		
		ИтогиРС = "НачальныйРазвернутыйОстатокДт, НачальныйРазвернутыйОстатокКт, КонечныйРазвернутыйОстатокДт, КонечныйРазвернутыйОстатокКт";

		мБухИтогиРС.РассчитатьИтоги("Хозрасчетный", ИтогиРС, "Сумма", "Счет, Субконто1, Субконто2", мДатаНачалаПериодаГодаПредшествующегоПрошлому, мДатаКонцаПериодаГодаПредшествующегоПрошлому, , СчетаУчетаРасчетов, ВидыСубконтоДляРасчета, , , "Организация", мОргРасшифровка);

		// В дебиторской задолженности учитываем только дебетовое развернутое сальдо
		П010024106_62_01_СКД = мБухИтогиРС.ПолучитьИтог("СуммаКонечныйРазвернутыйОстатокДт",  "Счет", Счет62_01);
		П010024106_62_21_СКД = мБухИтогиРС.ПолучитьИтог("СуммаКонечныйРазвернутыйОстатокДт",  "Счет", Счет62_21);
		П010024106_62_31_СКД = мБухИтогиРС.ПолучитьИтог("СуммаКонечныйРазвернутыйОстатокДт",  "Счет", Счет62_31);

		// Кредитовое сальдо учитываем в кредиторской задолженности
		П010062506_62_01_СКК = мБухИтогиРС.ПолучитьИтог("СуммаКонечныйРазвернутыйОстатокКт",  "Счет", Счет62_01);
		П010062506_62_21_СКК = мБухИтогиРС.ПолучитьИтог("СуммаКонечныйРазвернутыйОстатокКт",  "Счет", Счет62_21);
		П010062506_62_31_СКК = мБухИтогиРС.ПолучитьИтог("СуммаКонечныйРазвернутыйОстатокКт",  "Счет", Счет62_31);

		// На пассивных счетах учета расчетов с поставщиками и подрядчиками, на которых допускается 
		// учет авансов, может возникать ситуация, когда выплаченный аванс "уводит" 
		// остаток в минус, то есть в дебет. В этом случае этот отрицательый кредитовый остаток 
		// надо извлечь и затем прибавить к дебиторской задолженности, которая 
		// образовалась на счетах учета выплаченных авансов.

		// В кредиторской задолженности учитываем только кредитовое сальдо
		П010062106_60_01_СКК = мБухИтогиРС.ПолучитьИтог("СуммаКонечныйРазвернутыйОстатокКт",  "Счет", Счет60_01);
		П010062106_60_21_СКК = мБухИтогиРС.ПолучитьИтог("СуммаКонечныйРазвернутыйОстатокКт",  "Счет", Счет60_21);
		П010062106_60_31_СКК = мБухИтогиРС.ПолучитьИтог("СуммаКонечныйРазвернутыйОстатокКт",  "Счет", Счет60_31);

		// Дебетовое сальдо учитываем в дебиторской задолженности.
		П010024006_60_01_СКД = мБухИтогиРС.ПолучитьИтог("СуммаКонечныйРазвернутыйОстатокДт",  "Счет", Счет60_01);
		П010024006_60_21_СКД = мБухИтогиРС.ПолучитьИтог("СуммаКонечныйРазвернутыйОстатокДт",  "Счет", Счет60_21);
		П010024006_60_31_СКД = мБухИтогиРС.ПолучитьИтог("СуммаКонечныйРазвернутыйОстатокДт",  "Счет", Счет60_31);

		П010024106_62_03 = СКД(Счет62_03);
		П010024106_63    = СКК(Счет63);

		П010024106 = П010024106_62_01_СКД
				   + П010024106_62_21_СКД
				   + П010024106_62_31_СКД
				   + П010024106_62_03
				   - П010024106_63
				   + П010024106_76_06
				   + П010024106_76_26
				   + П010024106_76_36;

		П010024006_60_02 = СКД(Счет60_02);
		П010024006_60_22 = СКД(Счет60_22);
		П010024006_60_32 = СКД(Счет60_32);

		// в строку 240 входят данные по строке 241
		П010024006 = П010024106
				   + П010024006_60_02
				   + П010024006_60_01_СКД
				   + П010024006_60_22
				   + П010024006_60_21_СКД
				   + П010024006_60_32
				   + П010024006_60_31_СКД;

		// Если задолженность не анализируется, все задолженности считаем краткосрочными

		// Данные для строки 250 собираются последовательно. Это - часть 1.
		
		// строка 250 "Краткосрочные финансовые вложения"
		
		П010025006_58_01_2 = СКД(Счет58_01_2);
		П010025006_58_02   = СКД(Счет58_02);
		П010025006_58_03   = СКД(Счет58_03);
		П010025006_58_04   = СКД(Счет58_04);
		П010025006_58_05   = СКД(Счет58_05);
		П010025006_59      = СКК(Счет59);

		П010025006 = П010025006_58_01_2 + П010025006_58_02 - П010025006_59 + П010025006_58_03 + П010025006_58_04 + П010025006_58_05;

		// Собираем данные по субсчетам счета 68

		// Развернутые итоги по субсчету 68.04.1 по бюджетам
		мБухИтогиРС.РассчитатьИтоги("Хозрасчетный", ИтогиРС, "Сумма", "Счет, Субконто1", мДатаНачалаПериодаГодаПредшествующегоПрошлому, мДатаКонцаПериодаГодаПредшествующегоПрошлому, , "68.04.1", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.УровниБюджетов, , , "Организация", мОргРасшифровка);

		ВыборкаПоСчету = мБухИтогиРС.ПолучитьОстаткиИОбороты("Счет", Счет68_04_1);

		П010024006_68_04_1 = 0;
		П010062406_68_04_1 = 0;

		Если НЕ ВыборкаПоСчету = Неопределено Тогда

			П010024006_68_04_1 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокДт;
			П010062406_68_04_1 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокКт;

		КонецЕсли;

		// Развернутые итоги по субсчету 68.10 по бюджетам
		мБухИтогиРС.РассчитатьИтоги("Хозрасчетный", ИтогиРС, "Сумма", "Счет, Субконто1", мДатаНачалаПериодаГодаПредшествующегоПрошлому, мДатаКонцаПериодаГодаПредшествующегоПрошлому, , "68.10", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.УровниБюджетов, , , "Организация", мОргРасшифровка);

		ВыборкаПоСчету = мБухИтогиРС.ПолучитьОстаткиИОбороты("Счет", Счет68_10);

		П010024006_68_10 = 0;
		П010062406_68_10 = 0;

		Если НЕ ВыборкаПоСчету = Неопределено Тогда

			П010024006_68_10 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокДт;
			П010062406_68_10 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокКт;

		КонецЕсли;

		П010024006_68_01   = СКД(Счет68_01);
		П010024006_68_02   = СКД(Счет68_02);
		П010024006_68_03   = СКД(Счет68_03);

		П010024006_68_04_2 = СКД(Счет68_04_2);
		П010024006_68_07   = СКД(Счет68_07);
		П010024006_68_08   = СКД(Счет68_08);
		П010024006_68_09   = СКД(Счет68_09);

		П010024006_68_11   = СКД(Счет68_11);
		П010024006_68_12   = СКД(Счет68_12);

		П010024006_68 = 0;
		
		П010024006_68 = П010024006_68_01
					  + П010024006_68_02
					  + П010024006_68_03
					  + П010024006_68_04_1
					  + П010024006_68_04_2
					  + П010024006_68_07
					  + П010024006_68_08
					  + П010024006_68_09
					  + П010024006_68_10
					  + П010024006_68_11
					  + П010024006_68_12;

		П010062406_68_01   = СКК(Счет68_01);
		П010062406_68_02   = СКК(Счет68_02);
		П010062406_68_03   = СКК(Счет68_03);

		П010062406_68_04_2 = СКК(Счет68_04_2);
		П010062406_68_07   = СКК(Счет68_07);
		П010062406_68_08   = СКК(Счет68_08);
		П010062406_68_09   = СКК(Счет68_09);

		П010062406_68_11   = СКК(Счет68_11);
		П010062406_68_12   = СКК(Счет68_12);
		П010062406_68_22   = СКК(Счет68_22);

		П010062406_68_32   = 0;
		Если Есть68_32 Тогда
			П010062406_68_32   = СКК(Счет68_32);
		КонецЕсли;

		П010062406_68 = 0;
		
		П010062406_68 = П010062406_68_01
					  + П010062406_68_02
					  + П010062406_68_03
					  + П010062406_68_04_1
					  + П010062406_68_04_2
					  + П010062406_68_07
					  + П010062406_68_08
					  + П010062406_68_09
					  + П010062406_68_10
					  + П010062406_68_11
					  + П010062406_68_12
					  + П010062406_68_22
					  + П010062406_68_32;

		// Собираем данные по субсчетам счета 69
		П010024006_69 = СКДР(Счет69);
		П010062306_69 = СККР(Счет69);

		// Развернутые итоги по счету 71
		ИДКонфигурации = РегламентированнаяОтчетность.ИДКонфигурации();
		Если ИДКонфигурации = "УПП" ИЛИ ИДКонфигурации = "КА" Тогда
			мБухИтогиРС.РассчитатьИтоги("Хозрасчетный", ИтогиРС, "Сумма", "Счет, Субконто1", мДатаНачалаПериодаГодаПредшествующегоПрошлому, мДатаКонцаПериодаГодаПредшествующегоПрошлому, , "71", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации, , , "Организация", мОргРасшифровка);
		ИначеЕсли ИДКонфигурации = "БП" ИЛИ ИДКонфигурации = "БПКОРП" ИЛИ ИДКонфигурации = "БАУКОРП" ИЛИ ИДКонфигурации = "БАУ" Тогда
			мБухИтогиРС.РассчитатьИтоги("Хозрасчетный", ИтогиРС, "Сумма", "Счет, Субконто1", мДатаНачалаПериодаГодаПредшествующегоПрошлому, мДатаКонцаПериодаГодаПредшествующегоПрошлому, , "71", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизаций, , , "Организация", мОргРасшифровка);
		КонецЕсли;

		ВыборкаПоСчету = мБухИтогиРС.ПолучитьОстаткиИОбороты("Счет", Счет71);

		П010024006_71 = 0;
		П010062506_71 = 0;

		Если НЕ ВыборкаПоСчету = Неопределено Тогда

			П010024006_71 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокДт;
			П010062506_71 = ВыборкаПоСчету.СуммаКонечныйРазвернутыйОстатокКт;

		КонецЕсли;

		П010024006_73    = СКД(Счет73);
		П010024006_75_01 = СКД(Счет75_01);
		П010024006_76_02 = СКД(Счет76_02);
		П010024006_76_22 = СКД(Счет76_22);
		П010024006_76_32 = СКД(Счет76_32);
		П010024006_76_03 = СКД(Счет76_03);
		П010024006_76_41 = СКД(Счет76_41);
		П010024006_79    = СКД(Счет79);

		П010024006 = П010024006
				   + П010024006_68
				   + П010024006_69
				   + П010024006_71
				   + П010024006_73
				   + П010024006_75_01
				   + П010024006_76_01
				   + П010024006_76_21
				   + П010024006_76_02
				   + П010024006_76_22
				   + П010024006_76_32
				   + П010024006_76_05
				   + П010024006_76_25
				   + П010024006_76_03
				   + П010024006_76_35
				   + П010024006_76_09
				   + П010024006_76_29
				   + П010024006_76_39
				   + П010024006_76_41
				   + П010024006_79;

		Если ЭтоБалансДляАУ Тогда
			П010024006 = П010024006
					   + П010024006_76_51
					   + П010024006_76_52;
		КонецЕсли;

		//П010024006 = П010024006 + П010024006_76_НА;
		
		УстановитьЗначениеПоказателя("П000100123006", П010024006);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123006", "Строка 1230 ""Дебиторская задолженность"", графа """ + ЗаголовокДатаКонцаПозапрошлогоГода + """", "+", "!СКД", П010024006_60_02, Счет60_02, , мДатаНачалаПериодаГодаПредшествующегоПрошлому, мДатаКонцаПериодаГодаПредшествующегоПрошлому, "Баланс");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123006", "", "+", "Сальдо отрицательное на конец периода по кредиту счета 60.01, развернутое по субконто ""Контрагенты"", ""Договоры""", П010024006_60_01_СКД, Счет60_01);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123006", "", "+", "!СКД", П010024006_60_22, Счет60_22);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123006", "", "+", "Сальдо отрицательное на конец периода по кредиту счета 60.21, развернутое по субконто ""Контрагенты"", ""Договоры""", П010024006_60_21_СКД, Счет60_21);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123006", "", "+", "!СКД", П010024006_60_32, Счет60_32);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123006", "", "+", "Сальдо отрицательное на конец периода по кредиту счета 60.31, развернутое по субконто ""Контрагенты"", ""Договоры""", П010024006_60_31_СКД, Счет60_31);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123006", "", "+", "!СКД", П010024006_68_01, Счет68_01);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123006", "", "+", "!СКД", П010024006_68_02, Счет68_02);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123006", "", "+", "!СКД", П010024006_68_03, Счет68_03);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123006", "", "+", "Сальдо на конец периода по дебету счета 68.04.1 по субконто ""Уровни бюджетов""", П010024006_68_04_1, Счет68_04_1);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123006", "", "+", "!СКД", П010024006_68_04_2, Счет68_04_2);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123006", "", "+", "!СКД", П010024006_68_07, Счет68_07);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123006", "", "+", "!СКД", П010024006_68_08, Счет68_08);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123006", "", "+", "!СКД", П010024006_68_09, Счет68_09);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123006", "", "+", "Сальдо на конец периода по дебету счета 68.10 по субконто ""Уровни бюджетов""", П010024006_68_10, Счет68_10);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123006", "", "+", "!СКД", П010024006_68_11, Счет68_11);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123006", "", "+", "!СКД", П010024006_68_12, Счет68_12);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123006", "", "+", "!СКДР", П010024006_69, Счет69);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123006", "", "+", "Сальдо на конец периода по дебету счета 71, развернутое по субконто ""Работники организации""", П010024006_71, Счет71);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123006", "", "+", "!СКД", П010024006_73, Счет73);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123006", "", "+", "!СКД", П010024006_75_01, Счет75_01);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123006", "", "+", "Сальдо на конец периода по дебету счета 76.01, развернутое по субконто ""Контрагенты""", П010024006_76_01, Счет76_01);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123006", "", "+", "Сальдо на конец периода по дебету счета 76.21, развернутое по субконто ""Контрагенты""", П010024006_76_21, Счет76_21);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123006", "", "+", "!СКД", П010024006_76_02, Счет76_02);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123006", "", "+", "!СКД", П010024006_76_22, Счет76_22);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123006", "", "+", "!СКД", П010024006_76_03, Счет76_03);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123006", "", "+", "!СКД", П010024006_76_32, Счет76_32);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123006", "", "+", "Сальдо на конец периода по дебету счета 76.05, развернутое по субконто ""Контрагенты""", П010024006_76_05, Счет76_05);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123006", "", "+", "Сальдо на конец периода по дебету счета 76.25, развернутое по субконто ""Контрагенты""", П010024006_76_25, Счет76_25);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123006", "", "+", "Сальдо на конец периода по дебету счета 76.35, развернутое по субконто ""Контрагенты""", П010024006_76_35, Счет76_35);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123006", "", "+", "Сальдо на конец периода по дебету счета 76.09, развернутое по субконто ""Контрагенты""", П010024006_76_09, Счет76_09);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123006", "", "+", "Сальдо на конец периода по дебету счета 76.29, развернутое по субконто ""Контрагенты""", П010024006_76_29, Счет76_29);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123006", "", "+", "Сальдо на конец периода по дебету счета 76.39, развернутое по субконто ""Контрагенты""", П010024006_76_39, Счет76_39);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123006", "", "+", "!СКД", П010024006_76_41, Счет76_41);

		Если ЭтоБалансДляАУ Тогда
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123006", "", "+", "Сальдо на конец периода по дебету счета 76.51, развернутое по субконто ""Контрагенты""", П010024006_76_51, Счет76_51);
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123006", "", "+", "Сальдо на конец периода по дебету счета 76.52, развернутое по субконто ""Контрагенты""", П010024006_76_52, Счет76_52);
		КонецЕсли;

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123006", "", "+", "!СКД", П010024006_79, Счет79);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123006", "", "+", "Сальдо на конец периода по дебету счета 62.01, развернутое по субконто ""Контрагенты"", ""Договоры""", П010024106_62_01_СКД, Счет62_01);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123006", "", "+", "Сальдо на конец периода по дебету счета 62.21, развернутое по субконто ""Контрагенты"", ""Договоры""", П010024106_62_21_СКД, Счет62_21);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123006", "", "+", "Сальдо на конец периода по дебету счета 62.31, развернутое по субконто ""Контрагенты"", ""Договоры""", П010024106_62_31_СКД, Счет62_31);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123006", "", "+", "!СКД", П010024106_62_03, Счет62_03);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123006", "", "-", "!СКК", -П010024106_63, Счет63);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123006", "", "+", "Сальдо на конец периода по дебету счета 76.06, развернутое по субконто ""Контрагенты""", П010024106_76_06, Счет76_06);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123006", "", "+", "Сальдо на конец периода по дебету счета 76.26, развернутое по субконто ""Контрагенты""", П010024106_76_26, Счет76_26);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100123006", "", "+", "Сальдо на конец периода по дебету счета 76.36, развернутое по субконто ""Контрагенты""", П010024106_76_36, Счет76_36);

		// строка 1240 "финансовые вложения"
		П010025006_55_03 = СКД(Счет55_03);
		П010025006_55_23 = СКД(Счет55_23);

		П010025006 = П010025006 + П010025006_55_03 + П010025006_55_23;

		УстановитьЗначениеПоказателя("П000100124006", П010025006);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100124006", "Строка 1240 ""Краткосрочные финансовые вложения"", графа """ + ЗаголовокДатаКонцаПозапрошлогоГода + """", "+", "!СКД", П010025006_58_01_2, Счет58_01_2, , мДатаНачалаПериодаГодаПредшествующегоПрошлому, мДатаКонцаПериодаГодаПредшествующегоПрошлому, "Баланс");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100124006", "", "+", "!СКД", П010025006_58_02, Счет58_02);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100124006", "", "-", "!СКК", -П010025006_59, Счет59);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100124006", "", "+", "!СКД", П010025006_58_03, Счет58_03);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100124006", "", "+", "!СКД", П010025006_58_04, Счет58_04);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100124006", "", "+", "!СКД", П010025006_58_05, Счет58_05);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100124006", "", "+", "!СКД", П010025006_55_03, Счет55_03);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100124006", "", "+", "!СКД", П010025006_55_23, Счет55_23);

		// строка 1250 "Денежные средства"

		П010026006_50_01 = СКД(Счет50_01);
		П010026006_50_02 = СКД(Счет50_02);
		П010026006_50_21 = СКД(Счет50_21);
		П010026006_51    = СКД(Счет51);
		П010026006_52    = СКД(Счет52);
		П010026006_55_01 = СКД(Счет55_01);
		П010026006_55_02 = СКД(Счет55_02);
		П010026006_55_04 = СКД(Счет55_04);
		П010026006_55_21 = СКД(Счет55_21);
		П010026006_55_24 = СКД(Счет55_24);
		П010026006_57    = СКД(Счет57);

		П010026006 = П010026006_50_01
		           + П010026006_50_02
		           + П010026006_50_21
				   + П010026006_51
				   + П010026006_52
				   + П010026006_55_01
				   + П010026006_55_02
				   + П010026006_55_04
				   + П010026006_55_21
				   + П010026006_55_24
				   + П010026006_57;

		УстановитьЗначениеПоказателя("П000100125006", П010026006);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100125006", "Строка 1250 ""Денежные средства"", графа """ + ЗаголовокДатаКонцаПозапрошлогоГода + """", "+", "!СКД", П010026006_50_01, Счет50_01, , мДатаНачалаПериодаГодаПредшествующегоПрошлому, мДатаКонцаПериодаГодаПредшествующегоПрошлому, "Баланс");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100125006", "", "+", "!СКД", П010026005_50_02, Счет50_02);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100125006", "", "+", "!СКД", П010026005_50_21, Счет50_21);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100125006", "", "+", "!СКД", П010026006_51, Счет51);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100125006", "", "+", "!СКД", П010026006_52, Счет52);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100125006", "", "+", "!СКД", П010026006_55_01, Счет55_01);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100125006", "", "+", "!СКД", П010026006_55_02, Счет55_02);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100125006", "", "+", "!СКД", П010026006_55_04, Счет55_04);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100125006", "", "+", "!СКД", П010026006_55_21, Счет55_21);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100125006", "", "+", "!СКД", П010026006_55_24, Счет55_24);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100125006", "", "+", "!СКД", П010026006_57, Счет57);

		// строка 1260 "Прочие оборотные активы"

		П0100126006_50_03 = СКД(Счет50_03);
		П0100126006_50_23 = СКД(Счет50_23);
		П0100126006_68_22 = СКД(Счет68_22);
		П0100126006_76_АВ = СКД(Счет76_АВ);
		П0100126006_76_ОТ = СКД(Счет76_ОТ);
		П0100126006_94    = СКД(Счет94);
		П0100126006_97    = СКД(Счет97);

		П0100126006 = П0100122006_19_06 // из строки 1220
		            + П0100126006_50_03
		            + П0100126006_50_23
		            + П0100126006_68_22
		            + П0100126006_76_АВ
		            + П0100126006_76_ОТ
		            + П010024006_76_НА
		            + П0100126006_94
		            + П0100126006_97;

		УстановитьЗначениеПоказателя("П000100126006", П0100126006);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100126006", "Строка 1260 ""Прочие оборотные активы"", графа """ + ЗаголовокДатаКонцаПозапрошлогоГода + """", "+", "!СКД", П0100122006_19_06, Счет19_06, , мДатаНачалаПериодаГодаПредшествующегоПрошлому, мДатаКонцаПериодаГодаПредшествующегоПрошлому, "Баланс");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100126006", "", "+", "!СКД", П0100126006_50_03, Счет50_03);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100126006", "", "+", "!СКД", П0100126006_50_23, Счет50_23);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100126006", "", "+", "!СКД", П0100126006_68_22, Счет68_22);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100126006", "", "+", "!СКД", П0100126006_76_АВ, Счет76_АВ);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100126006", "", "+", "!СКД", П0100126006_76_ОТ, Счет76_ОТ);

		Если Есть76НА Тогда
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100126006", "", "+", "Сальдо на конец периода по дебету счета 76.НА, развернутое по субконто ""Контрагенты""", П010024006_76_НА, Счет76_НА);
		КонецЕсли;

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100126006", "", "+", "!СКД", П0100126006_94, Счет94);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100126006", "", "+", "!СКД", П0100126006_97, Счет97);

	//	Если НЕ ЭтоБалансДляАУ Тогда

			// строка 1310 "Уставный капитал"
			П0100131006 = СКК(Счет80);
			УстановитьЗначениеПоказателя("П000100131006", П0100131006);
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100131006", "Строка 1310 ""Уставный капитал"", графа """ + ЗаголовокДатаКонцаПозапрошлогоГода + """", "+", "!СКК", П0100131006, Счет80, , мДатаНачалаПериодаГодаПредшествующегоПрошлому, мДатаКонцаПериодаГодаПредшествующегоПрошлому, "Баланс");

			// строка 1320 "Собственные акции, выкупленные у акционеров"
			П0100132006 = -СКД(Счет81);
			УстановитьЗначениеПоказателя("П000100132006", П0100132006);
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100132006", "Строка 1320 ""Собственные акции, выкупленные у акционеров"", графа """ + ЗаголовокДатаКонцаПозапрошлогоГода + """", "-", "!СКК", П0100132006, Счет81, , мДатаНачалаПериодаГодаПредшествующегоПрошлому, мДатаКонцаПериодаГодаПредшествующегоПрошлому, "Баланс");

	//	КонецЕсли;

		// строка 1340 "Переоценка внеоборотных активов"
		П0100134006 = СКК(Счет83_01);
		УстановитьЗначениеПоказателя("П000100134006", П0100134006);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П00010042006", "Строка 1340 ""Переоценка внеоборотных активов"", графа """ + ЗаголовокДатаКонцаПозапрошлогоГода + """", "+", "Сальдо на конец периода по кредиту счета 83.01", П0100134006, Счет83_01, , мДатаНачалаПериодаГодаПредшествующегоПрошлому, мДатаКонцаПериодаГодаПредшествующегоПрошлому, "Баланс");

		// строка 1350 "Добавочный капитал (без переоценки)"

		П0100135006_83 = СКК(Счет83);

		П0100135006 = П0100135006_83 - П0100134006;

		УстановитьЗначениеПоказателя("П000100135006", П0100135006);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100135006", "Строка 1350 ""Добавочный капитал (без переоценки)"", графа """ + ЗаголовокДатаКонцаПозапрошлогоГода + """", "+", "!СКК", П0100135006_83, Счет83, , мДатаНачалаПериодаГодаПредшествующегоПрошлому, мДатаКонцаПериодаГодаПредшествующегоПрошлому, "Баланс");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100135006", "", "-", "Сальдо на конец периода по кредиту счета 83.01", -П0100134006, Счет83_01);

		//ИтогиРС = "ОборотДт, ОборотКт, КорОборотДт, КорОборотКт";
		//мБухИтогиРС.РассчитатьИтоги("Хозрасчетный", ИтогиРС, "Сумма", "Счет, КорСчет", мДатаНачалаПериодаОтчета, мДатаКонцаПериодаОтчета, , "77", , , , "Организация", мОргРасшифровка);

		//ОБ_77__84_01 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотДт", "Счет, КорСчет", Счет77, Счет84_01);
		//ОБ_84_02__77 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотКт", "Счет, КорСчет", Счет77, Счет84_02);

		//ОБ_77__99 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотДт", "Счет, КорСчет", Счет77, Счет99);
		//ОБ_99__77 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотКт", "Счет, КорСчет", Счет77, Счет99);

		
	//	Если ЭтоБалансДляАУ Тогда

	//		П010042103 = СНК(Счет83_10);
	//		УстановитьЗначениеПоказателя("П000010042103", П010042103);
	//		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010042103", "Строка 421 ""Фонд недвижимого и особо ценного движимого имущества"", графа ""На начало отчетного года""", "+", "!СНК", П010042103, Счет83_10, , , , "Баланс");

	//		П010042104 = СКК(Счет83_10);
	//		УстановитьЗначениеПоказателя("П000010042104", П010042104);
	//		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010042104", "Строка 421 ""Фонд недвижимого и особо ценного движимого имущества"", графа ""На конец отчетного периода""", "+", "!СКК", П010042104, Счет83_10, , , , "Баланс");

	//		// строка 440 "Целевое финансирование"
	//		П010044003_86_К	= СНК(Счет86);
	//		П010044003_86_Д	= СНД(Счет86);
	//		П010044003_84_К = СНК(Счет84);
	//		П010044003_84_Д = СНД(Счет84);

	//		П010044003 = П010044003_86_К - П010044003_86_Д + П010044003_84_К - П010044003_84_Д;
	//		УстановитьЗначениеПоказателя("П000010044003", П010044003);
	//		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010044003", "Строка 440 ""Целевое финансирование"", графа ""На начало отчетного года""", "+", "!СНК", П010044003_86_К, Счет86, , , , "Баланс");
	//		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010044003", "", "-", "!СНД", -П010044003_86_Д, Счет86);
	//		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010044003", "", "+", "!СНК", П010044003_84_К, Счет84);
	//		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010044003", "", "-", "!СНД", -П010044003_84_Д, Счет84);

	//		П010044004_86_К = СКК(Счет86);
	//		П010044004_86_Д = СКД(Счет86);
	//		П010044004_84_К = СКК(Счет84);
	//		П010044004_84_Д = СКД(Счет84);
	//		П010044004_99_К = СКК(Счет99);
	//		П010044004_99_Д = СКД(Счет99);

	//		П010044004 = П010044004_86_К - П010044004_86_Д + П010044004_84_К - П010044004_84_Д + П010044004_99_К - П010044004_99_Д;
	//		УстановитьЗначениеПоказателя("П000010044004", П010044004);
	//		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010044004", "Строка 440 ""Целевое финансирование"", графа ""На конец отчетного периода""", "+", "!СКК", П010044004_86_К, Счет86, , , , "Баланс");
	//		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010044004", "", "-", "!СКД", -П010044004_86_Д, Счет86);
	//		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010044004", "", "+", "!СКК", П010044004_84_К, Счет84);
	//		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010044004", "", "-", "!СКД", -П010044004_84_Д, Счет84);
	//		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010044004", "", "+", "!СКК", П010044004_99_К, Счет99);
	//		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010044004", "", "-", "!СКД", -П010044004_99_Д, Счет99);
	//		
	//	Иначе

			// строка 1360 "Резервный капитал"
			П0100136006 = СКК(Счет82);
			УстановитьЗначениеПоказателя("П000100136006", П0100136006);
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100136006", "Строка 1360 ""Резервный капитал"", графа """ + ЗаголовокДатаКонцаПозапрошлогоГода + """", "+", "!СКК", П0100136006, Счет82, , мДатаНачалаПериодаГодаПредшествующегоПрошлому, мДатаКонцаПериодаГодаПредшествующегоПрошлому, "Баланс");
		

	//		// строка 1370 "Нераспределенная прибыль (непокрытый убыток)"
	////		П010047003_84_К = СНК(Счет84);
	////		П010047003_84_Д = СНД(Счет84);

	////		П010047003 = П010047003_84_К - П010047003_84_Д;
	////		УстановитьЗначениеПоказателя("П000010047003", П010047003);

	////		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010047003", "Строка 470 ""Нераспределенная прибыль (непокрытый убыток)"", графа ""На начало отчетного года""", "+", "!СНК", П010047003_84_К, Счет84, , , , "Баланс");
	////		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000010047003", "", "-", "!СНД", -П010047003_84_Д, Счет84);

	//		// Графа "На конец отчетного периода" учитывает  возможную переоценку
	//		// отложенных налоговых активов и отложенных налоговых обязательств.
	//		П010047004_84_К = СКК(Счет84);
	//		П010047004_84_Д = СКД(Счет84);
	//		П010047004_99_К = СКК(Счет99);
	//		П010047004_99_Д = СКД(Счет99);

	//		П0100137004 = П010047004_84_К - П010047004_84_Д + П010047004_99_К - П010047004_99_Д - ОБ_09__84_01 + ОБ_84_02__09 + ОБ_84_02__77 - ОБ_77__84_01;
	//		УстановитьЗначениеПоказателя("П000100137004", П0100137004);

	//		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100137004", "Строка 1370 ""Нераспределенная прибыль (непокрытый убыток)"", графа """ + ЗаголовокДатаОтчетная + """", "+", "!СКК", П010047004_84_К, Счет84, , , , "Баланс");
	//		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100137004", "", "-", "!СКД", -П010047004_84_Д, Счет84);
	//		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100137004", "", "+", "!СКК",  П010047004_99_К, Счет99);
	//		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100137004", "", "-", "!СКД", -П010047004_99_Д, Счет99);
	//		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100137004", "", "-",  "!ОБ",    -ОБ_09__84_01, Счет09,    Счет84_01);
	//		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100137004", "", "+",  "!ОБ",     ОБ_84_02__09, Счет84_02, Счет09);
	//		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100137004", "", "+",  "!ОБ",     ОБ_84_02__77, Счет84_02, Счет77);
	//		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100137004", "", "-",  "!ОБ",    -ОБ_77__84_01, Счет77,    Счет84_01);

	//	КонецЕсли;

		// строка 1410 "Заемные средства" 

		П0100141006 = СКК(Счет67);
		УстановитьЗначениеПоказателя("П000100141006", П0100141006);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100141006", "Строка 1410 ""Заемные средства"", графа """ + ЗаголовокДатаКонцаПозапрошлогоГода + """", "+", "!СКК", П0100141006, Счет67, , мДатаНачалаПериодаГодаПредшествующегоПрошлому, мДатаКонцаПериодаГодаПредшествующегоПрошлому, "Баланс");

		// строка 1420 "Отложенные налоговые обязательства"
		// В балансе за отчетный год необходимо учесть возможную переоценку
		// отложенных налоговых активов и отложенных налоговых обязательств,
		// проведенную в связи с изменением ставки налога на прибыль. Результаты
		// переоценки должны показываться в балансе за год, следующий за отчетным,
		// но отражаются проводками в отчетном году. Для учета результатов
		// переоценки корректируем остатки счета 77 на конец периода 
		// - на обороты в корреспонденции со счетами 84.01 и 84.02 - для совместимости с предыдущими годами
		// - на обороты в корреспонденции со счетоми 99 (99.02.4) - для учета периодов 2011 г и далее.

		ИтогиРС = "ОборотДт, ОборотКт, КорОборотДт, КорОборотКт";
		мБухИтогиРС.РассчитатьИтоги("Хозрасчетный", ИтогиРС, "Сумма", "Счет, КорСчет", мДатаНачалаПериодаГодаПредшествующегоПрошлому, мДатаКонцаПериодаГодаПредшествующегоПрошлому, , "77", , , , "Организация", мОргРасшифровка);

		ОБ_77__84_01 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотДт", "Счет, КорСчет", Счет77, Счет84_01);
		ОБ_84_02__77 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотКт", "Счет, КорСчет", Счет77, Счет84_02);

		ОБ_77__99_2_4 = 0;
		ОБ_99_2_4__77 = 0;

		Если Есть99_2_4 Тогда

			ОБ_77__99_2_4 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотДт", "Счет, КорСчет", Счет77, Счет99_2_4);
			ОБ_99_2_4__77 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотКт", "Счет, КорСчет", Счет77, Счет99_2_4);

		КонецЕсли;

		П0100142006_77 = СКК(Счет77);

		П0100142006 = П0100142006_77 - ОБ_84_02__77 + ОБ_77__84_01 - ОБ_99_2_4__77 + ОБ_77__99_2_4;

		УстановитьЗначениеПоказателя("П000100142006", П0100142006);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100142006", "Строка 1420 ""Отложенные налоговые обзательства"", графа """ + ЗаголовокДатаКонцаПозапрошлогоГода + """", "+", "!СКК", П0100142006_77, Счет77, , -1, мДатаКонцаПериодаГодаПредшествующегоПрошлому, "Баланс");

		Если ((ОБ_84_02__77 <> 0) ИЛИ (ОБ_77__84_01 <> 0)) Тогда

			// Корректировку остатка счета 77 в расшифровку добавляем только тогда, 
			// когда такая корректировка существует
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100142006", "", "-", "!ОБ", -ОБ_84_02__77, Счет84_02, Счет77);
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100142006", "", "+", "!ОБ",  ОБ_77__84_01, Счет77,    Счет84_01);
	
		КонецЕсли;
		
		Если ((ОБ_99_2_4__77 <> 0) ИЛИ (ОБ_77__99_2_4 <> 0)) Тогда

			// Корректировку остатка счета 77 в расшифровку добавляем только тогда, 
			// когда такая корректировка существует
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100142006", "", "-", "!ОБ", -ОБ_99_2_4__77, Счет99_2_4,     Счет77);
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100142006", "", "+", "!ОБ",  ОБ_77__99_2_4,     Счет77, Счет99_2_4);

		КонецЕсли;

		// строка 1370 "Нераспределенная прибыль (непокрытый убыток)"

		// Графа "На конец отчетного периода" учитывает  возможную переоценку
		// отложенных налоговых активов и отложенных налоговых обязательств.
		П010047006_84_К = СКК(Счет84);
		П010047006_84_Д = СКД(Счет84);
		П010047006_99_К = СКК(Счет99);
		П010047006_99_Д = СКД(Счет99);

		П0100137006 = П010047006_84_К - П010047006_84_Д
					+ П010047006_99_К - П010047006_99_Д;
					//- ОБ_09__84_01 + ОБ_84_02__09
					//+ ОБ_84_02__77 - ОБ_77__84_01
					//- ОБ_09__99_2_4 + ОБ_99_2_4__09
					//+ ОБ_99_2_4__77 - ОБ_77__99_2_4;

		УстановитьЗначениеПоказателя("П000100137006", П0100137006);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100137006", "Строка 1370 ""Нераспределенная прибыль (непокрытый убыток)"", графа """ + ЗаголовокДатаКонцаПозапрошлогоГода + """", "+", "!СКК", П010047006_84_К, Счет84, , мДатаНачалаПериодаГодаПредшествующегоПрошлому, мДатаКонцаПериодаГодаПредшествующегоПрошлому, "Баланс");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100137006", "", "-", "!СКД", -П010047006_84_Д, Счет84);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100137006", "", "+", "!СКК",  П010047006_99_К, Счет99);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100137006", "", "-", "!СКД", -П010047006_99_Д, Счет99);

		//Если ((ОБ_09__84_01 <> 0) ИЛИ (ОБ_84_02__09 <> 0)) Тогда
		//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100137006", "", "-", "!ОБ",  -ОБ_09__84_01, Счет09,    Счет84_01);
		//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100137006", "", "+", "!ОБ",   ОБ_84_02__09, Счет84_02, Счет09);
		//КонецЕсли;

		//Если ((ОБ_84_02__77 <> 0) ИЛИ (ОБ_77__84_01 <> 0)) Тогда
		//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100137006", "", "+", "!ОБ",   ОБ_84_02__77, Счет84_02, Счет77);
		//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100137006", "", "-", "!ОБ",  -ОБ_77__84_01, Счет77,    Счет84_01);
		//КонецЕсли;

		//Если ((ОБ_09__99_2_4 <> 0) ИЛИ (ОБ_99_2_4__09 <> 0)) Тогда
		//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100137006", "", "-", "!ОБ", -ОБ_09__99_2_4,     Счет09, Счет99_2_4,    , , "Баланс");
		//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100137006", "", "+", "!ОБ",  ОБ_99_2_4__09, Счет99_2_4,     Счет09,    , , "Баланс");
		//КонецЕсли;

		//Если ((ОБ_99_2_4__77 <> 0) ИЛИ (ОБ_77__99_2_4 <> 0)) Тогда
		//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100137006", "", "+", "!ОБ",  ОБ_99_2_4__77, Счет99_2_4,     Счет77,    , , "Баланс");
		//	РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100137006", "", "-", "!ОБ", -ОБ_77__99_2_4,     Счет77, Счет99_2_4,    , , "Баланс");
		//КонецЕсли;

		// строка 1510 "Заемные средства"
		П0100151006 = СКК(Счет66);
		УстановитьЗначениеПоказателя("П000100151006", П0100151006);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100151006", "Строка 1510 ""Заемные средства"", графа """ + ЗаголовокДатаКонцаПозапрошлогоГода + """", "+", "!СКК", П0100151006, Счет66, , мДатаНачалаПериодаГодаПредшествующегоПрошлому, мДатаКонцаПериодаГодаПредшествующегоПрошлому, "Баланс");

		// строка 1520 "Кредиторская здолженность"

		// строка 621 "поставщики и подрядчики"
		П010062106_60_03 = СКК(Счет60_03);
		П010062206       = СКК(Счет70);
		П010062506_62_02 = СКК(Счет62_02);
		П010062506_62_22 = СКК(Счет62_22);
		П010062506_62_32 = СКК(Счет62_32);

		П010062506_75_02 = СКК(Счет75_02);

		П010062506_76_03 = СКК(Счет76_03);
		П010062506_76_04 = СКК(Счет76_04);
		П010062506_76_41 = СКК(Счет76_41);
		П010062506_76_Н  = СКК(Счет76_Н);
		П010062506_79    = СКК(Счет79);

		П0100152006 = П010062106_60_01_СКК
		            + П010062106_60_21_СКК
		            + П010062106_60_31_СКК
		            + П010062106_60_03
		            + П010062106_76_05
		            + П010062106_76_25
		            + П010062106_76_35
		            + П010062106_76_06
		            + П010062106_76_26
		            + П010062106_76_36
		            + П010062206
		            + П010062306_69
		            + П010062406_68_01
		            + П010062406_68_02
		            + П010062406_68_03
		            + П010062406_68_04_1
		            + П010062406_68_04_2
		            + П010062406_68_07
		            + П010062406_68_08
		            + П010062406_68_09
		            + П010062406_68_10
		            + П010062406_68_11
		            + П010062406_68_12
		            + П010062406_68_22
		            + П010062406_68_32
		            + П010062506_62_02
		            + П010062506_62_01_СКК
		            + П010062506_62_22
		            + П010062506_62_21_СКК
		            + П010062506_62_32
		            + П010062506_62_31_СКК
		            + П010062506_71
		            + П010062506_75_02
		            + П010062506_76_01
		            + П010062506_76_21
		            + П010062506_76_03
		            + П010062506_76_04
		            + П010062506_76_09
		            + П010062506_76_29
		            + П010062506_76_39
		            + П010062506_76_41
		            + П010062506_76_Н
		            + П010062506_79;

		Если ЭтоБалансДляАУ Тогда
			П0100152006 = П0100152006
					   + П010062506_76_51
					   + П010062506_76_52;
		КонецЕсли;

		УстановитьЗначениеПоказателя("П000100152006", П0100152006);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152006", "Строка 1520 ""Кредиторская задолженность"", графа """ + ЗаголовокДатаКонцаПозапрошлогоГода + """", "+", "Сальдо на конец периода по кредиту счета 60.01, развернутое по субконто ""Контрагенты"", ""Договоры""", П010062106_60_01_СКК, Счет60_01, , мДатаНачалаПериодаГодаПредшествующегоПрошлому, мДатаКонцаПериодаГодаПредшествующегоПрошлому, "Баланс");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152006", "", "+", "Сальдо на конец периода по кредиту счета 60.21, развернутое по субконто ""Контрагенты"", ""Договоры""", П010062106_60_21_СКК, Счет60_21);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152006", "", "+", "Сальдо на конец периода по кредиту счета 60.31, развернутое по субконто ""Контрагенты"", ""Договоры""", П010062106_60_31_СКК, Счет60_31);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152006", "", "+", "!СКК", П010062106_60_03, Счет60_03);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152006", "", "+", "Сальдо на конец периода по кредиту счета 76.05, развернутое по субконто ""Контрагенты""", П010062106_76_05, Счет76_05);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152006", "", "+", "Сальдо на конец периода по кредиту счета 76.25, развернутое по субконто ""Контрагенты""", П010062106_76_25, Счет76_25);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152006", "", "+", "Сальдо на конец периода по кредиту счета 76.35, развернутое по субконто ""Контрагенты""", П010062106_76_35, Счет76_35);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152006", "", "+", "Сальдо на конец периода по кредиту счета 76.06, развернутое по субконто ""Контрагенты""", П010062106_76_06, Счет76_06);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152006", "", "+", "Сальдо на конец периода по кредиту счета 76.26, развернутое по субконто ""Контрагенты""", П010062106_76_26, Счет76_26);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152006", "", "+", "Сальдо на конец периода по кредиту счета 76.36, развернутое по субконто ""Контрагенты""", П010062106_76_36, Счет76_36);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152006", "", "+", "!СКК", П010062206, Счет70, , , , "Баланс");

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152006", "", "+", "!СККР", П010062306_69, Счет69, , , , "Баланс");

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152006", "", "+", "!СКК", П010062406_68_01, Счет68_01);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152006", "", "+", "!СКК", П010062406_68_02, Счет68_02);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152006", "", "+", "!СКК", П010062406_68_03, Счет68_03);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152006", "", "+", "Сальдо на конец периода по кредиту счета 68.04.1 по субконто ""Уровни бюджетов""", П010062406_68_04_1, Счет68_04_1);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152006", "", "+", "!СКК", П010062406_68_04_2, Счет68_04_2);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152006", "", "+", "!СКК", П010062406_68_07, Счет68_07);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152006", "", "+", "!СКК", П010062406_68_08, Счет68_08);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152006", "", "+", "!СКК", П010062406_68_09, Счет68_09);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152006", "", "+", "Сальдо на конец периода по кредиту счета 68.10 по субконто ""Уровни бюджетов""", П010062406_68_10, Счет68_10);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152006", "", "+", "!СКК", П010062406_68_11, Счет68_11);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152006", "", "+", "!СКК", П010062406_68_12, Счет68_12);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152006", "", "+", "!СКК", П010062406_68_22, Счет68_22);

		Если Есть68_32 Тогда
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152006", "", "+", "!СКК", П010062406_68_32, Счет68_32);
		КонецЕсли;

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152006", "", "+", "!СКК", П010062506_62_02, Счет62_02, , , , "Баланс");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152006", "", "+", "Сальдо отрицательное на конец периода по дебету счета 62.01, развернутое по субконто ""Контрагенты"", ""Договоры""", П010062506_62_01_СКК);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152006", "", "+", "!СКК", П010062506_62_22, Счет62_22);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152006", "", "+", "Сальдо отрицательное на конец периода по дебету счета 62.21, развернутое по субконто ""Контрагенты"", ""Договоры""", П010062506_62_21_СКК);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152006", "", "+", "!СКК", П010062506_62_32, Счет62_32);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152006", "", "+", "Сальдо отрицательное на конец периода по дебету счета 62.31, развернутое по субконто ""Контрагенты"", ""Договоры""", П010062506_62_31_СКК);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152006", "", "+", "Сальдо на конец периода по кредиту счета 71, развернутое по субконто ""Работники организации""", П010062506_71, Счет71);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152006", "", "+", "!СКК", П010062506_75_02, Счет75_02);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152006", "", "+", "Сальдо на конец периода по кредиту счета 76.01, развернутое по субконто ""Контрагенты""", П010062506_76_01, Счет76_01);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152006", "", "+", "Сальдо на конец периода по кредиту счета 76.21, развернутое по субконто ""Контрагенты""", П010062506_76_21, Счет76_21);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152006", "", "+", "!СКК", П010062506_76_03, Счет76_03);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152006", "", "+", "!СКК", П010062506_76_04, Счет76_04);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152006", "", "+", "Сальдо на конец периода по кредиту счета 76.09, развернутое по субконто ""Контрагенты""", П010062506_76_09, Счет76_09);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152006", "", "+", "Сальдо на конец периода по кредиту счета 76.29, развернутое по субконто ""Контрагенты""", П010062506_76_29, Счет76_29);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152006", "", "+", "Сальдо на конец периода по кредиту счета 76.39, развернутое по субконто ""Контрагенты""", П010062506_76_39, Счет76_39);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152006", "", "+", "!СКК", П010062506_76_41, Счет76_41);
		
		Если ЭтоБалансДляАУ Тогда
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152006", "", "+", "Сальдо на конец периода по кредиту счета 76.51, развернутое по субконто ""Контрагенты""", П010062506_76_51, Счет76_51);
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152006", "", "+", "Сальдо на конец периода по кредиту счета 76.52, развернутое по субконто ""Контрагенты""", П010062506_76_52, Счет76_52);
		КонецЕсли;
		
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152006", "", "+", "!СКК", П010062506_76_Н, Счет76_Н);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100152006", "", "+", "!СКК", П010062506_79, Счет79);

		// строка 1530 "Доходы будущих периодов"
		П010064006_86 = СКК(Счет86);
		П010064006_98 = СКК(Счет98);

		П0100153006 = П010064006_86 + П010064006_98;
		УстановитьЗначениеПоказателя("П000100153006", П0100153006);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100153006", "Строка 1530 ""Доходы будущих периодов"", графа """ + ЗаголовокДатаКонцаПозапрошлогоГода + """", "+", "!СКК", П010064006_86, Счет86, , мДатаНачалаПериодаГодаПредшествующегоПрошлому, мДатаКонцаПериодаГодаПредшествующегоПрошлому, "Баланс");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100153006", "", "+", "!СКК", П010064005_98, Счет98);

		// строка 1540 "Резервы предстоящих расходов"
		П0100154006 = СКК(Счет96);
		УстановитьЗначениеПоказателя("П000100154006", П0100154006);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100154006", "Строка 1540 ""Резервы предстоящих расходов"", графа """ + ЗаголовокДатаКонцаПозапрошлогоГода + """", "+", "!СКК", П0100154006, Счет96, , мДатаНачалаПериодаГодаПредшествующегоПрошлому, мДатаКонцаПериодаГодаПредшествующегоПрошлому, "Баланс");

		// строка 1550 "Прочие обязательства"
		П0100155006_76_ВА = СКК(Счет76_ВА);

		П0100155006 = П0100155006_76_ВА
		            + П010062506_76_НА;
		
		УстановитьЗначениеПоказателя("П000100155006", П0100155006);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100155006", "Строка 1550 ""Прочие обязательства"", графа """ + ЗаголовокДатаКонцаПозапрошлогоГода + """", "+", "!СКК", П0100155006_76_ВА, Счет76_ВА);

		Если Есть76НА = Истина Тогда
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100155006", "", "+", "Сальдо на конец периода по кредиту счета 76.НА, развернутое по субконто ""Контрагенты""", П010062506_76_НА, Счет76_НА);
		КонецЕсли;
		
	КонецЕсли;


		/////////////////////////////////////////////////////////////////////////////
		// ЗАПОЛНЕНИЕ ОТЧЕТА О ПРИБЫЛЯХ И УБЫТКАХ

		Итоги = "КонечныйОстатокДт, ОборотДт, ОборотКт, КорОборотДт";

		// Бухгалтерские итоги по счетам, без аналитики
		мБухИтоги.РассчитатьИтоги("Хозрасчетный", Итоги, "Сумма", "Счет", мДатаНачалаПериодаОтчета, мДатаКонцаПериодаОтчета, , , , , , "Организация", мОргРасшифровка);

		// строка 2110 "Выручка"
		П010001003_90_1 = КО(Счет90_1);
		
		П010001003_90_3 = ДО(Счет90_3);
		П010001003_90_4 = ДО(Счет90_4);
		П010001003_90_5 = ДО(Счет90_5);
		
		П010001003 = П010001003_90_1
		           - П010001003_90_3
		           - П010001003_90_4
		           - П010001003_90_5;

		УстановитьЗначениеПоказателя("П000100211004", П010001003);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100211004", "Строка 2110 ""Выручка"", графа """ + ЗаголовокДатаОтчетногоПериода + """", "+", "!КО", П010001003_90_1, Счет90_1, , , , "ФормаОтчета");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100211004", "", "-", "!ДО", -П010001003_90_3, Счет90_3);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100211004", "", "-", "!ДО", -П010001003_90_4, Счет90_4);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100211004", "", "-", "!ДО", -П010001003_90_5, Счет90_5);

		// строка 2120 "Себестоимость продаж"
		П010002003 = ДО(Счет90_2);
		УстановитьЗначениеПоказателя("П000100212004", -П010002003);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100212004", "Строка 2120 ""Себестоимость продаж"", графа """ + ЗаголовокДатаОтчетногоПериода + """", "+", "!ДО", П010002003, Счет90_2, , , , "ФормаОтчета");

		// строка 2210 "Коммерческие расходы"
		П010003003 = ДО(Счет90_7);
		УстановитьЗначениеПоказателя("П000100221004", -П010003003);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100221004", "Строка 2210 ""Коммерческие расходы"", графа """ + ЗаголовокДатаОтчетногоПериода + """", "+", "!ДО", П010003003, Счет90_7, , , , "ФормаОтчета");

		// строка 2220 "Управленческие расходы"
		П010004003 = ДО(Счет90_8);
		УстановитьЗначениеПоказателя("П000100222004", -П010004003);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100222004", "Строка 2220 ""Управленческие расходы"", графа """ + ЗаголовокДатаОтчетногоПериода + """", "+", "!ДО", П010004003, Счет90_8, , , , "ФормаОтчета");

		Итоги = "ОборотДт, ОборотКт, КорОборотДт, КорОборотКт";
		мБухИтогиРС.РассчитатьИтоги("Хозрасчетный", Итоги, "Сумма", "Счет, Субконто1, КорСчет", мДатаНачалаПериодаОтчета, мДатаКонцаПериодаОтчета, , "91.01, 91.02", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы, "68.02, 76.Н", , "Организация", мОргРасшифровка);
		РезультатЗапроса = мБухИтогиРС.ПолучитьОстаткиИОбороты();

		// Начальное обнуление
		П010006003_ПроцентыКПолучениюУплате = 0;
		П010006003_ПроцентыПоГосударственнымЦеннымБумагам = 0;
		П010006003_ПроцентыПоГосударственнымЦеннымБумагамПоСтавке0 = 0;
		П010007003_ПроцентыКПолучениюУплате = 0;

		П010007003_ПроцентыНачисленныеПоСт269 = 0;

		П010008003_УчастиеВДругихОрганизациях = 0;
		П010008003_УчастиеВРоссийскихОрганизациях = 0;
		П010008003_УчастиеВИностранныхОрганизациях = 0;

		П010010003_УчастиеВДругихОрганизациях = 0;
		П010010003_УчастиеВРоссийскихОрганизациях = 0;
		П010010003_УчастиеВИностранныхОрганизациях = 0;

		П010009003_РеализацияОсновныхСредств = 0;
		П010010003_РеализацияОсновныхСредств = 0;

		П03_НДС_РеализацияОсновныхСредств = 0;

		П010009003_ЛиквидацияОсновныхСредств = 0;
		П010010003_ЛиквидацияОсновныхСредств = 0;

		П010009003_РеализацияНМА = 0;
		П010010003_РеализацияНМА = 0;

		П03_НДС_РеализацияНМА = 0;

		П010009003_РеализацияПрочегоИмущества = 0;
		П010010003_РеализацияПрочегоИмущества = 0;

		П03_НДС_РеализацияПрочегоИмущества = 0;

		П010009003_РеализацияПраваТребованияКакОказанияФинансовыхУслуг = 0;
		П010010003_РеализацияПраваТребованияКакОказанияФинансовыхУслуг = 0;

		П03_НДС_РеализацияПраваТребованияКакОказанияФинансовыхУслуг = 0;

		П010009003_РеализацияПраваТребованияДоНаступленияСрокаПлатежа = 0;
		П010010003_РеализацияПраваТребованияДоНаступленияСрокаПлатежа = 0;

		П03_НДС_РеализацияПраваТребованияДоНаступленияСрокаПлатежа = 0;

		П010009003_РеализацияПраваТребованияПослеНаступленияСрокаПлатежа = 0;
		П010010003_РеализацияПраваТребованияПослеНаступленияСрокаПлатежа = 0;

		П03_НДС_РеализацияПраваТребованияПослеНаступленияСрокаПлатежа = 0;

		П010009003_РеализацияИмущественныхПравКромеПраваТребования = 0;
		П010010003_РеализацияИмущественныхПравКромеПраваТребования = 0;

		П03_НДС_РеализацияИмущественныхПравКромеПраваТребования = 0;

		П010009003_РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводств = 0;
		П010010003_РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводств = 0;

		П03_НДС_РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводств = 0;

		П010009003_РеализацияЦенныхБумаг = 0;
		П010010003_РеализацияЦенныхБумаг = 0;

		П010009003_ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделок = 0;
		П010010003_ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделок = 0;

		П010009003_ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделокОР = 0;
		П010010003_ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделокОР = 0;

		П010009003_СдачаИмуществаВАренду = 0;
		П010010003_СдачаИмуществаВАренду = 0;

		П03_НДС_СдачаИмуществаВАренду = 0;

		П010009003_РазницаСтоимостиЦенныхБумаг = 0;
		П010010003_РазницаСтоимостиЦенныхБумаг = 0;

		П010010003_РасходыНаУслугиБанков = 0;

		П010009003_ПрочиеОперационныеДоходыРасходы = 0;
		П010010003_ПрочиеОперационныеДоходыРасходы = 0;

		П03_НДС_ПрочиеОперационныеДоходыРасходы = 0;

		П010009003_ОтчисленияВОценочныеРезервы = 0;
		П010010003_ОтчисленияВОценочныеРезервы = 0;

		П010009003_ШтрафыПениНеустойкиКПолучениюУплате = 0;
		П010010003_ШтрафыПениНеустойкиКПолучениюУплате = 0;

		П03_НДС_ШтрафыПениНеустойкиКПолучениюУплате = 0;

		П010009003_ПрибыльУбытокПрошлыхЛет = 0;
		П010010003_ПрибыльУбытокПрошлыхЛет = 0;
		
		П03_НДС_ПрибыльУбытокПрошлыхЛет = 0;
		
		П010009003_ВозмещениеУбытковКПолучениюУплате = 0;
		П010010003_ВозмещениеУбытковКПолучениюУплате = 0;

		П010009003_КурсовыеРазницы = 0;
		П010010003_КурсовыеРазницы = 0;

		П010009003_КурсовыеРазницыПоРасчетамВУЕ = 0;
		П010010003_КурсовыеРазницыПоРасчетамВУЕ = 0;

		П010010003_НалогиИСборы = 0;

		П010010003_ПремияПокупателю = 0;

		П010009003_СписаниеДебиторскойКредиторскойЗадолженности = 0;
		П010010003_СписаниеДебиторскойКредиторскойЗадолженности = 0;

		П010010003_НДСПоСписаннойКредиторскойЗадолженности = 0;

		П010009003_БезвозмездноеПолучениеИмущества = 0;
		П010010003_БезвозмездноеПолучениеИмущества = 0;

		П010010003_РасходыПоПередачеТоваровБезвозмездноИДляСобственныхНужд = 0;

		П010009003_ПрочиеВнереализационныеДоходыРасходы = 0;
		П010010003_ПрочиеВнереализационныеДоходыРасходы = 0;

		П03_НДС_ПрочиеВнереализационныеДоходыРасходы = 0;

		П010010003_РасходыОтСниженияСтоимостиАктивов = 0;

		П010010003_ПрочиеКосвенныеРасходы = 0;

		П03_НДС_ПрочиеКосвенныеРасходы = 0;
		
		П010009003_ДоходыСвязанныеСВосстановлениемАмортизационнойПремии = 0;

		ВыборкаПоСубконто = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Субконто1");

		// Обрабатываем субкотно "Прочие доходы и расходы".
		Пока ВыборкаПоСубконто.Следующий() Цикл

			ВыбранноеСубконто = ВыборкаПоСубконто.Субконто1;

			Если ВыбранноеСубконто.ЭтоГруппа Тогда
				Продолжить;
			КонецЕсли;

			// Сразу получем все необходимые итоги
			Сумма91_1 = мБухИтогиРС.ПолучитьИтог("СуммаОборотКт", "Счет, Субконто1", Счет91_1, ВыбранноеСубконто);
			Сумма91_2 = мБухИтогиРС.ПолучитьИтог("СуммаОборотДт", "Счет, Субконто1", Счет91_2, ВыбранноеСубконто);

			НДС       = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотДт", "Счет, Субконто1, КорСчет", Счет91_2, ВыбранноеСубконто, Счет68_02);

			Если ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ПроцентыКПолучениюУплате Тогда

				// Проценты к получению
				П010006003_ПроцентыКПолучениюУплате = П010006003_ПроцентыКПолучениюУплате + Сумма91_1;

				// Проценты к уплате
				П010007003_ПроцентыКПолучениюУплате = П010007003_ПроцентыКПолучениюУплате + Сумма91_2;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ПроцентыПоГосударственнымЦеннымБумагам Тогда

				П010006003_ПроцентыПоГосударственнымЦеннымБумагам = П010006003_ПроцентыПоГосударственнымЦеннымБумагам  + Сумма91_1;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ПроцентыПоГосударственнымЦеннымБумагамПоСтавке0 Тогда

				П010006003_ПроцентыПоГосударственнымЦеннымБумагамПоСтавке0 = П010006003_ПроцентыПоГосударственнымЦеннымБумагамПоСтавке0  + Сумма91_1;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ПроцентыНачисленныеПоСт269 Тогда

				П010007003_ПроцентыНачисленныеПоСт269 = П010007003_ПроцентыНачисленныеПоСт269 + Сумма91_2;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСУчастиемВДругихОрганизациях Тогда

				П010008003_УчастиеВДругихОрганизациях = П010008003_УчастиеВДругихОрганизациях + Сумма91_1;
				П010010003_УчастиеВДругихОрганизациях = П010010003_УчастиеВДругихОрганизациях + Сумма91_2;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДолевоеУчастиеВИностранныхОрганизациях Тогда

				П010008003_УчастиеВИностранныхОрганизациях = П010008003_УчастиеВИностранныхОрганизациях + Сумма91_1;
				П010010003_УчастиеВИностранныхОрганизациях = П010010003_УчастиеВИностранныхОрганизациях + Сумма91_2;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДолевоеУчастиеВРоссийскихОрганизациях Тогда

				П010008003_УчастиеВРоссийскихОрганизациях = П010008003_УчастиеВРоссийскихОрганизациях + Сумма91_1;
				П010010003_УчастиеВРоссийскихОрганизациях = П010010003_УчастиеВРоссийскихОрганизациях + Сумма91_2;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСРеализациейОсновныхСредств Тогда

				П010009003_РеализацияОсновныхСредств = П010009003_РеализацияОсновныхСредств + Сумма91_1;
				П010010003_РеализацияОсновныхСредств = П010010003_РеализацияОсновныхСредств + Сумма91_2;

				П03_НДС_РеализацияОсновныхСредств = П03_НДС_РеализацияОсновныхСредств + НДС;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСЛиквидациейОсновныхСредств Тогда

				П010009003_ЛиквидацияОсновныхСредств = П010009003_ЛиквидацияОсновныхСредств + Сумма91_1;
				П010010003_ЛиквидацияОсновныхСредств = П010010003_ЛиквидацияОсновныхСредств + Сумма91_2;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСРеализациейНематериальныхАктивов Тогда

				П010009003_РеализацияНМА = П010009003_РеализацияНМА + Сумма91_1;
				П010010003_РеализацияНМА = П010010003_РеализацияНМА + Сумма91_2;

				П03_НДС_РеализацияНМА = П03_НДС_РеализацияНМА + НДС;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСРеализациейПрочегоИмущества Тогда

				П010009003_РеализацияПрочегоИмущества = П010009003_РеализацияПрочегоИмущества + Сумма91_1;
				П010010003_РеализацияПрочегоИмущества = П010010003_РеализацияПрочегоИмущества + Сумма91_2;

				П03_НДС_РеализацияПрочегоИмущества = П03_НДС_РеализацияПрочегоИмущества + НДС;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСРеализациейПраваТребованияКакОказанияФинансовыхУслуг Тогда

				П010009003_РеализацияПраваТребованияКакОказанияФинансовыхУслуг = П010009003_РеализацияПраваТребованияКакОказанияФинансовыхУслуг + Сумма91_1;
				П010010003_РеализацияПраваТребованияКакОказанияФинансовыхУслуг = П010010003_РеализацияПраваТребованияКакОказанияФинансовыхУслуг + Сумма91_2;

				П03_НДС_РеализацияПраваТребованияКакОказанияФинансовыхУслуг = П03_НДС_РеализацияПраваТребованияКакОказанияФинансовыхУслуг + НДС;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСРеализациейПраваТребованияДоНаступленияСрокаПлатежа Тогда

				П010009003_РеализацияПраваТребованияДоНаступленияСрокаПлатежа = П010009003_РеализацияПраваТребованияДоНаступленияСрокаПлатежа + Сумма91_1;
				П010010003_РеализацияПраваТребованияДоНаступленияСрокаПлатежа = П010010003_РеализацияПраваТребованияДоНаступленияСрокаПлатежа + Сумма91_2;

				П03_НДС_РеализацияПраваТребованияДоНаступленияСрокаПлатежа = П03_НДС_РеализацияПраваТребованияДоНаступленияСрокаПлатежа + НДС;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСРеализациейПраваТребованияПослеНаступленияСрокаПлатежа Тогда

				П010009003_РеализацияПраваТребованияПослеНаступленияСрокаПлатежа = П010009003_РеализацияПраваТребованияПослеНаступленияСрокаПлатежа + Сумма91_1;
				П010010003_РеализацияПраваТребованияПослеНаступленияСрокаПлатежа = П010010003_РеализацияПраваТребованияПослеНаступленияСрокаПлатежа + Сумма91_2;

				П03_НДС_РеализацияПраваТребованияПослеНаступленияСрокаПлатежа = П03_НДС_РеализацияПраваТребованияПослеНаступленияСрокаПлатежа + НДС;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСРеализациейИмущественныхПравКромеПраваТребования Тогда

				П010009003_РеализацияИмущественныхПравКромеПраваТребования = П010009003_РеализацияИмущественныхПравКромеПраваТребования + Сумма91_1;
				П010010003_РеализацияИмущественныхПравКромеПраваТребования = П010010003_РеализацияИмущественныхПравКромеПраваТребования + Сумма91_2;

				П03_НДС_РеализацияИмущественныхПравКромеПраваТребования = П03_НДС_РеализацияИмущественныхПравКромеПраваТребования + НДС;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСРеализациейИмущественныхПравПоОбъектамОбслуживающихПроизводств Тогда

				П010009003_РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводств = П010009003_РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводств + Сумма91_1;
				П010010003_РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводств = П010010003_РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводств + Сумма91_2;

				П03_НДС_РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводств = П03_НДС_РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводств + НДС;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСРеализациейЦенныхБумаг Тогда

				П010009003_РеализацияЦенныхБумаг = П010009003_РеализацияЦенныхБумаг + Сумма91_1;
				П010010003_РеализацияЦенныхБумаг = П010010003_РеализацияЦенныхБумаг + Сумма91_2;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделок Тогда

				П010009003_ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделок = П010009003_ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделок + Сумма91_1;
				П010010003_ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделок = П010010003_ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделок + Сумма91_2;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделокОР Тогда

				П010009003_ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделокОР = П010009003_ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделокОР + Сумма91_1;
				П010010003_ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделокОР = П010010003_ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделокОР + Сумма91_2;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСоСдачейИмуществаВАренду Тогда

				П010009003_СдачаИмуществаВАренду = П010009003_СдачаИмуществаВАренду + Сумма91_1;
				П010010003_СдачаИмуществаВАренду = П010010003_СдачаИмуществаВАренду + Сумма91_2;

				П03_НДС_СдачаИмуществаВАренду = П03_НДС_СдачаИмуществаВАренду + НДС;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.РазницаМеждуПервоначальнойИНоминальнойСтоимостьюПоДолговымЦеннымБумагам Тогда

				П010009003_РазницаСтоимостиЦенныхБумаг = П010009003_РазницаСтоимостиЦенныхБумаг + Сумма91_1;
				П010010003_РазницаСтоимостиЦенныхБумаг = П010010003_РазницаСтоимостиЦенныхБумаг + Сумма91_2;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.РасходыНаУслугиБанков Тогда

				П010010003_РасходыНаУслугиБанков = П010010003_РасходыНаУслугиБанков + Сумма91_2;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ПрочиеОперационныеДоходыРасходы Тогда

				П010009003_ПрочиеОперационныеДоходыРасходы = П010009003_ПрочиеОперационныеДоходыРасходы + Сумма91_1;
				П010010003_ПрочиеОперационныеДоходыРасходы = П010010003_ПрочиеОперационныеДоходыРасходы + Сумма91_2;

				П03_НДС_ПрочиеОперационныеДоходыРасходы = П03_НДС_ПрочиеОперационныеДоходыРасходы + НДС;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ШтрафыПениНеустойкиКПолучениюУплате Тогда

				П010009003_ШтрафыПениНеустойкиКПолучениюУплате = П010009003_ШтрафыПениНеустойкиКПолучениюУплате + Сумма91_1;
				П010010003_ШтрафыПениНеустойкиКПолучениюУплате = П010010003_ШтрафыПениНеустойкиКПолучениюУплате + Сумма91_2;

				П03_НДС_ШтрафыПениНеустойкиКПолучениюУплате = П03_НДС_ШтрафыПениНеустойкиКПолучениюУплате + НДС;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ПрибыльУбытокПрошлыхЛет Тогда

				П010009003_ПрибыльУбытокПрошлыхЛет = П010009003_ПрибыльУбытокПрошлыхЛет + Сумма91_1;
				П010010003_ПрибыльУбытокПрошлыхЛет = П010010003_ПрибыльУбытокПрошлыхЛет + Сумма91_2;
				
				П03_НДС_ПрибыльУбытокПрошлыхЛет = П03_НДС_ПрибыльУбытокПрошлыхЛет + НДС;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ВозмещениеУбытковКПолучениюУплате Тогда

				П010009003_ВозмещениеУбытковКПолучениюУплате = П010009003_ВозмещениеУбытковКПолучениюУплате + Сумма91_1;
				П010010003_ВозмещениеУбытковКПолучениюУплате = П010010003_ВозмещениеУбытковКПолучениюУплате + Сумма91_2;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.КурсовыеРазницы Тогда

				П010009003_КурсовыеРазницы = П010009003_КурсовыеРазницы + Сумма91_1;
				П010010003_КурсовыеРазницы = П010010003_КурсовыеРазницы + Сумма91_2;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.КурсовыеРазницыПоРасчетамВУЕ Тогда

				П010009003_КурсовыеРазницыПоРасчетамВУЕ = П010009003_КурсовыеРазницыПоРасчетамВУЕ + Сумма91_1;
				П010010003_КурсовыеРазницыПоРасчетамВУЕ = П010010003_КурсовыеРазницыПоРасчетамВУЕ + Сумма91_2;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.НалогиИСборы Тогда

				П010010003_НалогиИСборы = П010010003_НалогиИСборы  + Сумма91_2;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ОтчисленияВОценочныеРезервы Тогда

				П010009003_ОтчисленияВОценочныеРезервы = П010009003_ОтчисленияВОценочныеРезервы + Сумма91_1;
				П010010003_ОтчисленияВОценочныеРезервы = П010010003_ОтчисленияВОценочныеРезервы + Сумма91_2;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ПремияПокупателю Тогда

				П010010003_ПремияПокупателю = П010010003_ПремияПокупателю  + Сумма91_2;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.СписаниеДебиторскойКредиторскойЗадолженности Тогда

				П010009003_СписаниеДебиторскойКредиторскойЗадолженности = П010009003_СписаниеДебиторскойКредиторскойЗадолженности + Сумма91_1;
				П010010003_СписаниеДебиторскойКредиторскойЗадолженности = П010010003_СписаниеДебиторскойКредиторскойЗадолженности + Сумма91_2;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.НДСПоСписаннойКредиторскойЗадолженности Тогда

				П010010003_НДСПоСписаннойКредиторскойЗадолженности = П010010003_НДСПоСписаннойКредиторскойЗадолженности + Сумма91_2;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСБезвозмезднымПолучениемИмущества Тогда

				П010009003_БезвозмездноеПолучениеИмущества = П010009003_БезвозмездноеПолучениеИмущества + Сумма91_1;
				П010010003_БезвозмездноеПолучениеИмущества = П010010003_БезвозмездноеПолучениеИмущества + Сумма91_2;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.РасходыПоПередачеТоваровБезвозмездноИДляСобственныхНужд Тогда

				П010010003_РасходыПоПередачеТоваровБезвозмездноИДляСобственныхНужд = П010010003_РасходыПоПередачеТоваровБезвозмездноИДляСобственныхНужд + Сумма91_2;

				//П03_НДС_РасходыПоПередачеТоваровБезвозмездноИДляСобственныхНужд = П03_НДС_РасходыПоПередачеТоваровБезвозмездноИДляСобственныхНужд + НДС;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ПрочиеВнереализационныеДоходыРасходы Тогда

				П010009003_ПрочиеВнереализационныеДоходыРасходы = П010009003_ПрочиеВнереализационныеДоходыРасходы + Сумма91_1;
				П010010003_ПрочиеВнереализационныеДоходыРасходы = П010010003_ПрочиеВнереализационныеДоходыРасходы + Сумма91_2;

				П03_НДС_ПрочиеВнереализационныеДоходыРасходы = П03_НДС_ПрочиеВнереализационныеДоходыРасходы + НДС;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.РасходыОтСниженияСтоимостиАктивов Тогда

				П010010003_РасходыОтСниженияСтоимостиАктивов = П010010003_РасходыОтСниженияСтоимостиАктивов + Сумма91_2;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ПрочиеКосвенныеРасходы Тогда

				П010010003_ПрочиеКосвенныеРасходы = П010010003_ПрочиеКосвенныеРасходы + Сумма91_2;

				П03_НДС_ПрочиеКосвенныеРасходы = П03_НДС_ПрочиеКосвенныеРасходы + НДС;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыСвязанныеСВосстановлениемАмортизационнойПремии Тогда

				П010009003_ДоходыСвязанныеСВосстановлениемАмортизационнойПремии = П010009003_ДоходыСвязанныеСВосстановлениемАмортизационнойПремии + Сумма91_1;

			КонецЕсли;

		КонецЦикла;

		ИтогиРС = "ОборотДт, ОборотКт, КорОборотДт, КорОборотКт";
		мБухИтогиРС.РассчитатьИтоги("Хозрасчетный", ИтогиРС, "Сумма", "Счет, Субконто1, КорСчет", мДатаНачалаПериодаОтчета, мДатаКонцаПериодаОтчета, , "99", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрибылиИУбытки, , , "Организация", мОргРасшифровка);
		РезультатЗапроса = мБухИтогиРС.ПолучитьОстаткиИОбороты();

		// Строка "Чрезвычайные доходы"
		П010009003_ЧрезвычайныеДоходыРасходы = мБухИтогиРС.ПолучитьИтог("СуммаОборотКт", "Счет, Субконто1", Счет99_1, Перечисления.ПрибылиИУбытки.ЧрезвычайныеДоходыРасходы);

		// Строка "Чрезвычайные расходы"
		П010010003_ЧрезвычайныеДоходыРасходы = мБухИтогиРС.ПолучитьИтог("СуммаОборотДт", "Счет, Субконто1", Счет99_1, Перечисления.ПрибылиИУбытки.ЧрезвычайныеДоходыРасходы);

		// строка 2310 "Доходы от участия в других организациях"
		П010008003 = П010008003_УчастиеВДругихОрганизациях + П010008003_УчастиеВИностранныхОрганизациях + П010008003_УчастиеВРоссийскихОрганизациях;
		
		УстановитьЗначениеПоказателя("П000100231004", П010008003);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100231004", "Строка 2310 ""Доходы от участия в других организациях"", графа """ + ЗаголовокДатаОтчетногоПериода + """", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с участием в других организациях""/", П010008003_УчастиеВДругихОрганизациях, , , , , "ФормаОтчета");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100231004", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Долевое участие в иностранных организациях""/", П010008003_УчастиеВИностранныхОрганизациях);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100231004", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Долевое участие в российских организациях""/", П010008003_УчастиеВРоссийскихОрганизациях);

		// строка 2320 "Проценты к получению"
		П010006003 = П010006003_ПроцентыКПолучениюУплате + П010006003_ПроцентыПоГосударственнымЦеннымБумагам + П010006003_ПроцентыПоГосударственнымЦеннымБумагамПоСтавке0;
		УстановитьЗначениеПоказателя("П000100232004", П010006003);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100232004", "Строка 2320 ""Проценты к получению"", графа """ + ЗаголовокДатаОтчетногоПериода + """", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Проценты к получению (уплате)""/",  П010006003_ПроцентыКПолучениюУплате, , , , , "ФормаОтчета");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100232004", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Проценты по государственным ценным бумагам""/", П010006003_ПроцентыПоГосударственнымЦеннымБумагам);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100232004", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Проценты по государственным ценным бумагам по ставке 0%""/", П010006003_ПроцентыПоГосударственнымЦеннымБумагамПоСтавке0);

		// строка 2330 "Проценты к уплате"
		П010007003 = П010007003_ПроцентыКПолучениюУплате
		           + П010007003_ПроцентыНачисленныеПоСт269;
		УстановитьЗначениеПоказателя("П000100233004", -П010007003);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100233004", "Строка 2330 ""Проценты к уплате"", графа """ + ЗаголовокДатаОтчетногоПериода + """", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Проценты к получению (уплате)""/ ", П010007003_ПроцентыКПолучениюУплате, , , , , "ФормаОтчета");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100233004", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Проценты, начисленные в соответствии со статьей 269""/ ", П010007003_ПроцентыНачисленныеПоСт269);

		// строка 2340 "Прочие доходы"
		П010009003 = П010009003_РеализацияОсновныхСредств                                     - П03_НДС_РеализацияОсновныхСредств
		           + П010009003_ЛиквидацияОсновныхСредств
		           + П010009003_РеализацияНМА                                                 - П03_НДС_РеализацияНМА
		           + П010009003_РеализацияПрочегоИмущества                                    - П03_НДС_РеализацияПрочегоИмущества
		           + П010009003_РеализацияПраваТребованияКакОказанияФинансовыхУслуг           - П03_НДС_РеализацияПраваТребованияКакОказанияФинансовыхУслуг
		           + П010009003_РеализацияПраваТребованияДоНаступленияСрокаПлатежа            - П03_НДС_РеализацияПраваТребованияДоНаступленияСрокаПлатежа
		           + П010009003_РеализацияПраваТребованияПослеНаступленияСрокаПлатежа         - П03_НДС_РеализацияПраваТребованияПослеНаступленияСрокаПлатежа
		           + П010009003_РеализацияИмущественныхПравКромеПраваТребования               - П03_НДС_РеализацияИмущественныхПравКромеПраваТребования
		           + П010009003_РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводств - П03_НДС_РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводств
		           + П010009003_РеализацияЦенныхБумаг
		           + П010009003_ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделок
		           + П010009003_ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделокОР
		           + П010009003_СдачаИмуществаВАренду                                         - П03_НДС_СдачаИмуществаВАренду
		           + П010009003_ОтчисленияВОценочныеРезервы
		           + П010009003_РазницаСтоимостиЦенныхБумаг
		           + П010009003_ПрочиеОперационныеДоходыРасходы                               - П03_НДС_ПрочиеОперационныеДоходыРасходы

		// бывшая строка 120 "Внереализационные доходы"
		           + П010009003_ШтрафыПениНеустойкиКПолучениюУплате                           - П03_НДС_ШтрафыПениНеустойкиКПолучениюУплате
		           + П010009003_ПрибыльУбытокПрошлыхЛет                                       - П03_НДС_ПрибыльУбытокПрошлыхЛет
		           + П010009003_ВозмещениеУбытковКПолучениюУплате
		           + П010009003_КурсовыеРазницы
		           + П010009003_КурсовыеРазницыПоРасчетамВУЕ
		           + П010009003_СписаниеДебиторскойКредиторскойЗадолженности
		           + П010009003_БезвозмездноеПолучениеИмущества
		           + П010009003_ПрочиеВнереализационныеДоходыРасходы                          - П03_НДС_ПрочиеВнереализационныеДоходыРасходы
		           + П010009003_ДоходыСвязанныеСВосстановлениемАмортизационнойПремии

		// Чрезвычайные доходы
		           + П010009003_ЧрезвычайныеДоходыРасходы;

		УстановитьЗначениеПоказателя("П000100234004", П010009003);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234004", "Строка 2340 ""Прочие доходы"", графа """ + ЗаголовокДатаОтчетногоПериода + """", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией основных средств""/", П010009003_РеализацияОсновныхСредств, , , , , "ФормаОтчета");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234004", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией основных средств""/ в корреспонденции со счетом 68.02", -П03_НДС_РеализацияОсновныхСредств);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234004", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с ликвидацией основных средств""/", П010009003_ЛиквидацияОсновныхСредств);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234004", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией нематериальных активов""/", П010009003_РеализацияНМА);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234004", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией нематериальных активов""/ в корреспонденции со счетом 68.02", -П03_НДС_РеализацияНМА);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234004", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией прочего имущества""/", П010009003_РеализацияПрочегоИмущества);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234004", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией прочего имущества""/ в корреспонденции со счетом 68.02", -П03_НДС_РеализацияПрочегоИмущества);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234004", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией права требования как оказания финансовых услуг""/", П010009003_РеализацияПраваТребованияКакОказанияФинансовыхУслуг);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234004", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией права требования как оказания финансовых услуг""/ в корреспонденции со счетом 68.02", -П03_НДС_РеализацияПраваТребованияКакОказанияФинансовыхУслуг);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234004", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией права требования до наступления срока платежа""/", П010009003_РеализацияПраваТребованияДоНаступленияСрокаПлатежа);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234004", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией права требования до наступления срока платежа""/ в корреспонденции со счетом 68.02", -П03_НДС_РеализацияПраваТребованияДоНаступленияСрокаПлатежа);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234004", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией права требования после наступления срока платежа""/", П010009003_РеализацияПраваТребованияПослеНаступленияСрокаПлатежа);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234004", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией права требования после наступления срока платежа""/ в корреспонденции со счетом 68.02", -П03_НДС_РеализацияПраваТребованияПослеНаступленияСрокаПлатежа);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234004", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией имущественных прав, кроме права требования""/", П010009003_РеализацияИмущественныхПравКромеПраваТребования);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234004", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией имущественных прав, кроме права требования""/ в корреспонденции со счетом 68.02", -П03_НДС_РеализацияИмущественныхПравКромеПраваТребования);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234004", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией имущественных прав по объектам обслуживающих производств и хозяйств""/", П010009003_РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводств);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234004", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией имущественных прав по объектам обслуживающих производств и хозяйств""/ в корреспонденции со счетом 68.02", -П03_НДС_РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводств);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234004", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией ценных бумаг""/", П010009003_РеализацияЦенныхБумаг);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234004", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы) по операциям с финансовыми инструментами срочных сделок, не обращающимися на организованном рынке""/", П010009003_ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделок);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234004", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы) по операциям с финансовыми инструментами срочных сделок, обращающимися на организованном рынке""/", П010009003_ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделокОР);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234004", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные со сдачей имущества в аренду (субаренду)""/", П010009003_СдачаИмуществаВАренду);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234004", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные со сдачей имущества в аренду (субаренду)""/ в корреспонденции со счетом 68.02", -П03_НДС_СдачаИмуществаВАренду);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234004", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Отчисления в оценочные резервы""/", П010009003_ОтчисленияВОценочныеРезервы);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234004", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Разница между первоначальной и номинальной стоимостью по долговым ценным бумагам""/", П010009003_РазницаСтоимостиЦенныхБумаг);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234004", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Прочие операционные доходы (расходы)""/", П010009003_ПрочиеОперационныеДоходыРасходы);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234004", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Прочие операционные доходы (расходы)""/ в корреспонденции со счетом 68.02", -П03_НДС_ПрочиеОперационныеДоходыРасходы);

		// бывшая строка 120 "Внереализационные доходы"
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234004", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Штрафы, пени и неустойки к получению (уплате)""/", П010009003_ШтрафыПениНеустойкиКПолучениюУплате);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234004", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Штрафы, пени и неустойки к получению (уплате)""/ в корреспонденции со счетом 68.02", -П03_НДС_ШтрафыПениНеустойкиКПолучениюУплате);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234004", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Прибыль (убыток) прошлых лет""/", П010009003_ПрибыльУбытокПрошлыхЛет);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234004", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Прибыль (убыток) прошлых лет""/ в корреспонденции со счетом 68.02", -П03_НДС_ПрибыльУбытокПрошлыхЛет);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234004", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Возмещение убытков к получению (уплате)""/", П010009003_ВозмещениеУбытковКПолучениюУплате);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234004", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Курсовые разницы""/", П010009003_КурсовыеРазницы);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234004", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Курсовые разницы по расчетам в у.е.""/", П010009003_КурсовыеРазницыПоРасчетамВУЕ);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234004", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Списание дебиторской (кредиторской) задолженности""/", П010009003_СписаниеДебиторскойКредиторскойЗадолженности);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234004", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с безвозмездным получением имущества, работ, услуг или имущественных прав""/", П010009003_БезвозмездноеПолучениеИмущества);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234004", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Прочие внереализационные доходы (расходы)""/", П010009003_ПрочиеВнереализационныеДоходыРасходы);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234004", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Прочие внереализационные доходы (расходы)""/ в корреспонденции со счетом 68.02", -П03_НДС_ПрочиеВнереализационныеДоходыРасходы);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234004", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы, связанные с восстановлением амортизационной премии""/", П010009003_ДоходыСвязанныеСВосстановлениемАмортизационнойПремии);

		// Чрезвычайные доходы
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234004", "", "+", "!КО", П010009003_ЧрезвычайныеДоходыРасходы, Счет99_1,,,,,,,, Перечисления.ПрибылиИУбытки.ЧрезвычайныеДоходыРасходы);

		// строка 2350 "Прочие расходы"
		П010010003 = П010010003_УчастиеВДругихОрганизациях
		           + П010010003_УчастиеВРоссийскихОрганизациях
		           + П010010003_УчастиеВИностранныхОрганизациях
		           + П010010003_РеализацияОсновныхСредств                                     - П03_НДС_РеализацияОсновныхСредств
		           + П010010003_ЛиквидацияОсновныхСредств
		           + П010010003_РеализацияНМА                                                 - П03_НДС_РеализацияНМА
		           + П010010003_РеализацияПрочегоИмущества                                    - П03_НДС_РеализацияПрочегоИмущества
		           + П010010003_РеализацияПраваТребованияКакОказанияФинансовыхУслуг           - П03_НДС_РеализацияПраваТребованияКакОказанияФинансовыхУслуг
		           + П010010003_РеализацияПраваТребованияДоНаступленияСрокаПлатежа            - П03_НДС_РеализацияПраваТребованияДоНаступленияСрокаПлатежа
		           + П010010003_РеализацияПраваТребованияПослеНаступленияСрокаПлатежа         - П03_НДС_РеализацияПраваТребованияПослеНаступленияСрокаПлатежа
		           + П010010003_РеализацияИмущественныхПравКромеПраваТребования               - П03_НДС_РеализацияИмущественныхПравКромеПраваТребования
		           + П010010003_РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводств - П03_НДС_РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводств
		           + П010010003_РеализацияЦенныхБумаг
		           + П010010003_ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделок
		           + П010010003_ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделокОР
		           + П010010003_СдачаИмуществаВАренду                                         - П03_НДС_СдачаИмуществаВАренду
		           + П010010003_ОтчисленияВОценочныеРезервы
		           + П010010003_РазницаСтоимостиЦенныхБумаг
		           + П010010003_РасходыНаУслугиБанков
		           + П010010003_ПрочиеОперационныеДоходыРасходы                               - П03_НДС_ПрочиеОперационныеДоходыРасходы

		// бывшая строка 130 "Внереализационные расходы"
		           + П010010003_ШтрафыПениНеустойкиКПолучениюУплате                           - П03_НДС_ШтрафыПениНеустойкиКПолучениюУплате
		           + П010010003_ПрибыльУбытокПрошлыхЛет                                       - П03_НДС_ПрибыльУбытокПрошлыхЛет
		           + П010010003_ВозмещениеУбытковКПолучениюУплате
		           + П010010003_КурсовыеРазницы
		           + П010010003_КурсовыеРазницыПоРасчетамВУЕ
		           + П010010003_НалогиИСборы
		           + П010010003_ПремияПокупателю
		           + П010010003_СписаниеДебиторскойКредиторскойЗадолженности
		           + П010010003_НДСПоСписаннойКредиторскойЗадолженности
		           + П010010003_БезвозмездноеПолучениеИмущества
		           + П010010003_РасходыПоПередачеТоваровБезвозмездноИДляСобственныхНужд
		           + П010010003_ПрочиеВнереализационныеДоходыРасходы                          - П03_НДС_ПрочиеВнереализационныеДоходыРасходы
		           + П010010003_РасходыОтСниженияСтоимостиАктивов
		           + П010010003_ПрочиеКосвенныеРасходы                                        - П03_НДС_ПрочиеКосвенныеРасходы

		// Чрезвычайные расходы 
		           + П010010003_ЧрезвычайныеДоходыРасходы;

		УстановитьЗначениеПоказателя("П000100235004", -П010010003);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235004", "Строка 2350 ""Прочие расходы"", графа """ + ЗаголовокДатаОтчетногоПериода + """", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с участием в других организациях""/", П010010003_УчастиеВДругихОрганизациях, , , , , "ФормаОтчета");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235004", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Долевое участие в российских организациях""/", П010010003_УчастиеВРоссийскихОрганизациях);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235004", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Долевое участие в иностранных организациях""/", П010010003_УчастиеВИностранныхОрганизациях);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235004", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией основных средств""/", П010010003_РеализацияОсновныхСредств);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235004", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией основных средств""/ в корреспонденции со счетом 68.02", -П03_НДС_РеализацияОсновныхСредств);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235004", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с ликвидацией основных средств""/", П010010003_ЛиквидацияОсновныхСредств);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235004", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией нематериальных активов""/", П010010003_РеализацияНМА);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235004", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией нематериальных активов""/ в корреспонденции со счетом 68.02", -П03_НДС_РеализацияНМА);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235004", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией прочего имущества""/", П010010003_РеализацияПрочегоИмущества);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235004", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией прочего имущества""/ в корреспонденции со счетом 68.02", -П03_НДС_РеализацияПрочегоИмущества);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235004", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией права требования как оказания финансовых услуг""/", П010010003_РеализацияПраваТребованияКакОказанияФинансовыхУслуг);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235004", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией права требования как оказания финансовых услуг""/ в корреспонденции со счетом 68.02", -П03_НДС_РеализацияПраваТребованияКакОказанияФинансовыхУслуг);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235004", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией права требования до наступления срока платежа""/", П010010003_РеализацияПраваТребованияДоНаступленияСрокаПлатежа);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235004", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией права требования до наступления срока платежа""/ в корреспонденции со счетом 68.02", -П03_НДС_РеализацияПраваТребованияДоНаступленияСрокаПлатежа);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235004", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией права требования после наступления срока платежа""/", П010010003_РеализацияПраваТребованияПослеНаступленияСрокаПлатежа);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235004", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией права требования после наступления срока платежа""/ в корреспонденции со счетом 68.02", -П03_НДС_РеализацияПраваТребованияПослеНаступленияСрокаПлатежа);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235004", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией имущественных прав, кроме права требования""/", П010010003_РеализацияИмущественныхПравКромеПраваТребования);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235004", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией имущественных прав, кроме права требования""/ в корреспонденции со счетом 68.02", -П03_НДС_РеализацияИмущественныхПравКромеПраваТребования);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235004", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией имущественных прав по объектам обслуживающих производств и хозяйств""/", П010010003_РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводств);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235004", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией имущественных прав по объектам обслуживающих производств и хозяйств""/ в корреспонденции со счетом 68.02", -П03_НДС_РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводств);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235004", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией ценных бумаг""/", П010010003_РеализацияЦенныхБумаг);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235004", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы) по операциям с финансовыми инструментами срочных сделок, не обращающимися на организованном рынке""/", П010010003_ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделок);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235004", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы) по операциям с финансовыми инструментами срочных сделок, обращающимися на организованном рынке""/", П010010003_ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделокОР);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235004", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные со сдачей имущества в аренду (субаренду)""/", П010010003_СдачаИмуществаВАренду);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235004", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные со сдачей имущества в аренду (субаренду)""/ в корреспонденции со счетом 68.02", -П03_НДС_СдачаИмуществаВАренду);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235004", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Отчисления в оценочные резервы""/", П010010003_ОтчисленияВОценочныеРезервы);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235004", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Разница между первоначальной и номинальной стоимостью по долговым ценным бумагам""/", П010010003_РазницаСтоимостиЦенныхБумаг);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235004", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Расходы на услуги банков""/", П010010003_РасходыНаУслугиБанков);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235004", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Прочие операционные доходы (расходы)""/", П010010003_ПрочиеОперационныеДоходыРасходы);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235004", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Прочие операционные доходы (расходы)""/ в корреспонденции со счетом 68.02", -П03_НДС_ПрочиеОперационныеДоходыРасходы);

		// бывшая строка 130 "Внереализационные расходы"
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235004", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Штрафы, пени и неустойки к получению (уплате)""/", П010010003_ШтрафыПениНеустойкиКПолучениюУплате);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235004", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Штрафы, пени и неустойки к получению (уплате)""/ в корреспонденции со счетом 68.02", -П03_НДС_ШтрафыПениНеустойкиКПолучениюУплате);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235004", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Прибыль (убыток) прошлых лет""/", П010010003_ПрибыльУбытокПрошлыхЛет);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235004", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Прибыль (убыток) прошлых лет""/ в корреспонденции со счетом 68.02", -П03_НДС_ПрибыльУбытокПрошлыхЛет);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235004", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Возмещение убытков к получению (уплате)""/", П010010003_ВозмещениеУбытковКПолучениюУплате);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235004", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Курсовые разницы""/", П010010003_КурсовыеРазницы);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235004", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Курсовые разницы по расчетам в у.е.""/", П010010003_КурсовыеРазницыПоРасчетамВУЕ);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235004", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Налоги и сборы""/", П010010003_НалогиИСборы);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235004", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Премия, выплаченная покупателю""/", П010010003_ПремияПокупателю);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235004", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Списание дебиторской (кредиторской) задолженности""/", П010010003_СписаниеДебиторскойКредиторскойЗадолженности);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235004", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""НДС по списанной кредиторской задолженности""/", П010010003_НДСПоСписаннойКредиторскойЗадолженности);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235004", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с безвозмездным получением имущества, работ, услуг или имущественных прав""/", П010010003_БезвозмездноеПолучениеИмущества);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235004", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Расходы по передаче товаров (работ, услуг) безвозмездно и для собственных нужд""/", П010010003_РасходыПоПередачеТоваровБезвозмездноИДляСобственныхНужд);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235004", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Прочие внереализационные доходы (расходы)""/", П010010003_ПрочиеВнереализационныеДоходыРасходы);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235004", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Прочие внереализационные доходы (расходы)""/ в корреспонденции со счетом 68.02", -П03_НДС_ПрочиеВнереализационныеДоходыРасходы);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235004", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Расходы от снижения стоимости активов""/", П010010003_РасходыОтСниженияСтоимостиАктивов);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235004", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Прочие косвенные расходы""/", П010010003_ПрочиеКосвенныеРасходы);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235004", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Прочие косвенные расходы""/ в корреспонденции со счетом 68.02", -П03_НДС_ПрочиеКосвенныеРасходы);
		
		// Чрезвычайные расходы
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235004", "", "+", "!ДО", П010010003_ЧрезвычайныеДоходыРасходы, Счет99_1,,,,,,,, Перечисления.ПрибылиИУбытки.ЧрезвычайныеДоходыРасходы);

		// строка 2410 "Текущий налог на прибыль"
		ИтогиРС = "ОборотДт, ОборотКт, КорОборотДт, КорОборотКт";
		мБухИтогиРС.РассчитатьИтоги("Хозрасчетный", ИтогиРС, "Сумма", "Счет, КорСчет", мДатаНачалаПериодаОтчета, мДатаКонцаПериодаОтчета, , "68.04", , , , "Организация", мОргРасшифровка);

		П010015003_68_4_2__68_4_1 = ОБ(Счет68_04_2, Счет68_04_1);
		П010015003_68_4_1__68_4_2 = ОБ(Счет68_04_1, Счет68_04_2);

		мБухИтогиРС.РассчитатьИтоги("Хозрасчетный", ИтогиРС, "Сумма", "Счет, КорСчет, КорСубконто1", мДатаНачалаПериодаОтчета, мДатаКонцаПериодаОтчета, , "99", , "68.04.1", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет, "Организация", мОргРасшифровка);

		П010015003_99_1_1__68_4_1 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотДт", "Счет, КорСчет, КорСубконто1" , Счет99_1_1, Счет68_04_1, Перечисления.ВидыПлатежейВГосБюджет.Налог);

		П010015003 = П010015003_68_4_2__68_4_1 - П010015003_68_4_1__68_4_2 
		           + П010015003_99_1_1__68_4_1;

		УстановитьЗначениеПоказателя("П000100241004", -П010015003);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100241004", "Строка 2410 ""Текущий налог на прибыль"", графа """ + ЗаголовокДатаОтчетногоПериода + """", "+", "!ОБ", П010015003_68_4_2__68_4_1, Счет68_04_2, Счет68_04_1, , , "ФормаОтчета");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100241004", "", "-", "!ОБ", -П010015003_68_4_1__68_4_2, Счет68_04_1, Счет68_04_2);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100241004", "", "+", "Оборот с кредита счета 68.04.1 /субконто ""Налог (взносы): начислено / уплачено""/ в дебет счета 99.01.1",  П010015003_99_1_1__68_4_1, Счет99_1_1, Счет68_04_1);

		// строка 2421 "в т.ч. постоянные налоговые обязательства (активы)"
		мБухИтогиРС.РассчитатьИтоги("Хозрасчетный", ИтогиРС, "Сумма", "Счет, КорСчет", мДатаНачалаПериодаОтчета, мДатаКонцаПериодаОтчета, , "99.02.3", , "68.04", , "Организация", мОргРасшифровка);

		П010020003_99_2_3__68_4 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотДт", "Счет, КорСчет", Счет99_2_3, Счет68_04);
		П010020003_68_4__99_2_3 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотКт", "Счет, КорСчет", Счет99_2_3, Счет68_04);

		П010020003 = П010020003_99_2_3__68_4 - П010020003_68_4__99_2_3;
		УстановитьЗначениеПоказателя("П000100242104", -П010020003);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100242104", "Строка 2421 ""в т. ч. постоянные налоговые обязательства (активы)"", графа """ + ЗаголовокДатаОтчетногоПериода + """", "+", "!ОБ", П010020003_99_2_3__68_4, Счет99_2_3, Счет68_04, , , "ФормаОтчета");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100242104", "", "-", "!ОБ", -П010020003_68_4__99_2_3, Счет68_04, Счет99_2_3);

		// строка 2430 "Изменение отложенных налоговых обязательств" 
		// В форме №2 необходимо учесть возможную переоценку отложенных налоговых
		// активов и отложенных налоговых обязательств, проведенную в связи с
		// изменением ставки налога на прибыль. Проводки, отражающие результаты
		// переоценки, не должны влиять на финансовые результаты отчетного периода.
		// Для учета результатов переоценки корректируем обороты счета 77 на обороты
		// - в корреспонденции со счетоми 99 (99.02.4) - для учета периодов 2011 г и позже.
		
		ИтогиРС = "ОборотДт, ОборотКт, КорОборотДт, КорОборотКт";
		мБухИтогиРС.РассчитатьИтоги("Хозрасчетный", ИтогиРС, "Сумма", "Счет, КорСчет", мДатаНачалаПериодаОтчета, мДатаКонцаПериодаОтчета, , "77", , , , "Организация", мОргРасшифровка);

		ОБ_77__99_2_4 = 0;
		ОБ_99_2_4__77 = 0;

		Если Есть99_2_4 Тогда

			ОБ_77__99_2_4 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотДт", "Счет, КорСчет", Счет77, Счет99_2_4);
			ОБ_99_2_4__77 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотКт", "Счет, КорСчет", Счет77, Счет99_2_4);

		КонецЕсли;
		
		ОБ77__68_4_2 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотДт", "Счет, КорСчет", Счет77, Счет68_04_2);
		ОБ68_4_2__77 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотКт", "Счет, КорСчет", Счет77, Счет68_04_2);

		П010014203 = ОБ68_4_2__77 - ОБ77__68_4_2 - ОБ_99_2_4__77 + ОБ_77__99_2_4;

		УстановитьЗначениеПоказателя("П000100243004", -П010014203);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100243004", "Строка 2430 ""Изменение отложенных налоговых обязательств"", графа """ + ЗаголовокДатаОтчетногоПериода + """", "+", "!КО", ОБ68_4_2__77, Счет77, Счет68_04_2, , , "ФормаОтчета");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100243004", "", "-", "!ДО", -ОБ77__68_4_2, Счет77, Счет68_04_2);

		Если ((ОБ_77__99_2_4 <> 0) ИЛИ (ОБ_99_2_4__77 <> 0)) Тогда

			// Корректировку оборотов  счета 77 в расшифровку добавляем только тогда, 
			// когда такая корректировка существует
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100243004", "", "-", "!ОБ", -ОБ_99_2_4__77, Счет99_2_4,     Счет77);
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100243004", "", "+", "!ОБ",  ОБ_77__99_2_4,     Счет77, Счет99_2_4);

		КонецЕсли;

		// строка 2450 "Изменение отложенных налоговых активов"
		// В форме №2 необходимо учесть возможную переоценку отложенных налоговых
		// активов и отложенных налоговых обязательств, проведенную в связи с
		// изменением ставки налога на прибыль. Проводки, отражающие результаты
		// переоценки, не должны влиять на финансовые результаты отчетного периода.
		// Для учета результатов переоценки корректируем обороты счета 09 на обороты: 
		// - в корреспонденции со счетоми 99 (99.02.4) - для учета периодов 2011 г и позже.

		ИтогиРС = "ОборотДт, ОборотКт, КорОборотДт, КорОборотКт";
		мБухИтогиРС.РассчитатьИтоги("Хозрасчетный", ИтогиРС, "Сумма", "Счет, КорСчет", мДатаНачалаПериодаОтчета, мДатаКонцаПериодаОтчета, , "09", , , , "Организация", мОргРасшифровка);

		ОБ_09__99_2_4 = 0;
		ОБ_99_2_4__09 = 0;

		Если Есть99_2_4 Тогда
			ОБ_09__99_2_4 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотДт", "Счет, КорСчет", Счет09, Счет99_2_4);
			ОБ_99_2_4__09 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотКт", "Счет, КорСчет", Счет09, Счет99_2_4);
		КонецЕсли;

		ОБ09__68_4_2 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотДт", "Счет, КорСчет", Счет09, Счет68_04_2);
		ОБ68_4_2__09 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотКт", "Счет, КорСчет", Счет09, Счет68_04_2);

		П010014103 = ОБ09__68_4_2 - ОБ68_4_2__09 - ОБ_09__99_2_4 + ОБ_99_2_4__09;

		УстановитьЗначениеПоказателя("П000100245004", П010014103);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100245004", "Строка 2450 ""Изменение отложенных налоговых активов"", графа """ + ЗаголовокДатаОтчетногоПериода + """", "+", "!ОБ", ОБ09__68_4_2, Счет09, Счет68_04_2, , , "ФормаОтчета");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100245004", "", "-", "!ОБ", -ОБ68_4_2__09, Счет68_04_2, Счет09, , , "ФормаОтчета");

		Если ((ОБ_09__99_2_4 <> 0) ИЛИ (ОБ_99_2_4__09 <> 0)) Тогда

			// Корректировку оборотов счета 09 в расшифровку добавляем только тогда, 
			// когда такая корректировка существует
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100245004", "", "-", "!ОБ", -ОБ_09__99_2_4,     Счет09, Счет99_2_4, , , "ФормаОтчета");
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100245004", "", "+", "!ОБ",  ОБ_99_2_4__09, Счет99_2_4,     Счет09, , , "ФормаОтчета");

		КонецЕсли;

		// строка 2460 "Прочее"

		// Если ПБУ 18 не применяется, должна выводится строка "Налог на прибыль 
		// и иные аналогичные обязательные платежи", как в "старой" форме №2
		мБухИтогиРС.РассчитатьИтоги("Хозрасчетный", ИтогиРС, "Сумма", "Счет, Субконто1, КорСчет", мДатаНачалаПериодаОтчета, мДатаКонцаПериодаОтчета, , "99", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрибылиИУбытки, , , "Организация", мОргРасшифровка);

		П010018003_99_1_НалогНаПрибыль   = мБухИтогиРС.ПолучитьИтог("СуммаОборотДт", "Счет, Субконто1", Счет99_1, Перечисления.ПрибылиИУбытки.НалогНаПрибыль);
		П010018003_99_1_НалоговыеСанкции = мБухИтогиРС.ПолучитьИтог("СуммаОборотДт", "Счет, Субконто1", Счет99_1, Перечисления.ПрибылиИУбытки.НалоговыеСанкции);

		П010018003_99_2_4_Д = 0;
		П010018003_99_2_4_К = 0;

		Если Есть99_2_4 Тогда
			П010018003_99_2_4_Д = ОБ_99_2_4__09;
			П010018003_99_2_4_К = ОБ_77__99_2_4;
		КонецЕсли;

		П010018003_99_9_Д = 0;
		П010018003_99_9_К = 0;

		Если Есть99_9 Тогда
			П010018003_99_9_Д = ДО(Счет99_9);
			П010018003_99_9_К = КО(Счет99_9);
		КонецЕсли;

		ОрганизацияПримененяетЕНВД = НалоговыйУчет.ПрименениеЕНВД(мОргРасшифровка, мДатаКонцаПериодаОтчета);
		Если ОрганизацияПримененяетЕНВД Тогда
			ИтогиРС = "ОборотДт, ОборотКт, КорОборотДт, КорОборотКт";
			мБухИтогиРС.РассчитатьИтоги("Хозрасчетный", ИтогиРС, "Сумма", "Счет, КорСчет", мДатаНачалаПериодаОтчета, мДатаКонцаПериодаОтчета, , Счет99_01_2, , , , "Организация", мОргРасшифровка);
			ОБ_99_01_2__09 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотДт", "Счет, КорСчет", Счет99_01_2, Счет09);
			ОБ_77__99_01_2 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотКт", "Счет, КорСчет", Счет99_01_2, Счет77);
		КонецЕсли;	
		
		П010018003 = П010018003_99_1_НалогНаПрибыль
		           - П010015003_99_1_1__68_4_1 // сумма текущего налога на прибыль из строки 2410
		           + П010018003_99_1_НалоговыеСанкции
		           + П010018003_99_2_4_Д - П010018003_99_2_4_К
		           + П010018003_99_9_Д   - П010018003_99_9_К;

		Если ОрганизацияПримененяетЕНВД Тогда
			П010018003 = П010018003 + ОБ_99_01_2__09 - ОБ_77__99_01_2;
		КонецЕсли;
			   
		УстановитьЗначениеПоказателя("П000100246004", -П010018003);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100246004", "Строка 2460 ""Прочее"", графа """ + ЗаголовокДатаОтчетногоПериода + """", "+", "Оборот по дебету счета 99.1 /субконто ""Налог на прибыль и аналогичные платежи""/", П010018003_99_1_НалогНаПрибыль, Счет99_1, , , , "ФормаОтчета");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100246004", "", "-", "Оборот с кредита счета 68.04.1 /субконто ""Налог (взносы): начислено / уплачено""/ в дебет счета 99.01.1", -П010015003_99_1_1__68_4_1, Счет99_1_1, Счет68_04_1);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100246004", "", "+", "Оборот по дебету счета 99.1 /субконто ""Причитающиеся налоговые санкции""/", П010018003_99_1_НалоговыеСанкции, Счет99_1, , , , "ФормаОтчета");

		Если Есть99_2_4 Тогда
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100246004", "", "+", "!ДО",  П010018003_99_2_4_Д, Счет99_2_4, Счет09, , , "ФормаОтчета");
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100246004", "", "-", "!КО", -П010018003_99_2_4_К, Счет99_2_4, Счет77, , , "ФормаОтчета");
		КонецЕсли;

		Если Есть99_9 Тогда
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100246004", "", "+", "!ДО",  П010018003_99_9_Д, Счет99_9, , , , "ФормаОтчета");
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100246004", "", "-", "!КО", -П010018003_99_9_К, Счет99_9, , , , "ФормаОтчета");
		КонецЕсли;

		Если ОрганизацияПримененяетЕНВД Тогда
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100246004", "", "+", "!ДО",  ОБ_99_01_2__09, Счет99_01_2, Счет09, , , "ФормаОтчета");
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100246004", "", "-", "!КО", -ОБ_77__99_01_2, Счет99_01_2, Счет77, , , "ФормаОтчета");
		КонецЕсли;
		
		// строка 2510 "Результат от переоценки внеоборотных активов, не включаемый в чистую прибыль убыток) периода"
		П0100251004_83_01     = КО(Счет83_01);
		П0100251004_01__83_01 = ОБ(Счет01, Счет83_01);
		П0100251004_04__83_01 = ОБ(Счет04, Счет83_01);

		П0100251004 = П0100251004_83_01 - П0100251004_01__83_01 - П0100251004_04__83_01;

		УстановитьЗначениеПоказателя("П000100251004", П0100251004);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100251004", "Строка 2510 ""Результат от переоценки внеоборотных активов, не включаемый в чистую прибыль убыток) периода"", графа """ + ЗаголовокДатаОтчетногоПериода + """", "+", "Оборот по кредиту счета 83.01", П0100251004_83_01, Счет83_01, , , , "ФормаОтчета");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100251004", "", "-", "Оборот с кредита счета 83.01 в дебет счета 01", -П0100251004_01__83_01, Счет01, Счет83_01);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100251004", "", "-", "Оборот с кредита счета 83.01 в дебет счета 04", -П0100251004_04__83_01, Счет04, Счет83_01);

	Если ЗаполнятьГодПредыдущий Тогда
		//////////////////////////////////////////////////////
		// Заполняем форму 2 данными на конец предыдущего года
		мДатаНачалаПериодаПрошлогоГода = ДобавитьМесяц( мДатаНачалаПериодаОтчета, -12 );
		мДатаКонцаПериодаПрошлогоГода = ДобавитьМесяц( мДатаКонцаПериодаОтчета, -12 );

		// Бухгалтерские итоги по счетам, без аналитики
		мБухИтоги.РассчитатьИтоги("Хозрасчетный", Итоги, "Сумма", "Счет", мДатаНачалаПериодаПрошлогоГода, мДатаКонцаПериодаПрошлогоГода, , , , , , "Организация", мОргРасшифровка);

		// строка 2110 "Выручка"
		П010001004_90_1 = КО(Счет90_1);
		
		П010001004_90_3 = ДО(Счет90_3);
		П010001004_90_4 = ДО(Счет90_4);
		П010001004_90_5 = ДО(Счет90_5);
		
		П010001004 = П010001004_90_1
		           - П010001004_90_3
		           - П010001004_90_4
		           - П010001004_90_5;

		УстановитьЗначениеПоказателя("П000100211005", П010001004);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100211005", "Строка 2110 ""Выручка"", графа """ + ЗаголовокДатаОтчетногоПериодаПрошлогоГода + """", "+", "!КО", П010001004_90_1, Счет90_1, , 1, , "ФормаОтчета");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100211005", "", "-", "!ДО", -П010001004_90_3, Счет90_3);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100211005", "", "-", "!ДО", -П010001004_90_4, Счет90_4);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100211005", "", "-", "!ДО", -П010001004_90_5, Счет90_5);

		// строка 2120 "Себестоимость продаж"
		П010002004 = ДО(Счет90_2);
		УстановитьЗначениеПоказателя("П000100212005", -П010002004);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100212005", "Строка 2120 ""Себестоимость продаж"", графа """ + ЗаголовокДатаОтчетногоПериодаПрошлогоГода + """", "+", "!ДО", П010002004, Счет90_2, , 1, , "ФормаОтчета");

		// строка 2210 "Коммерческие расходы"
		П010003004 = ДО(Счет90_7);
		УстановитьЗначениеПоказателя("П000100221005", -П010003004);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100221005", "Строка 2210 ""Коммерческие расходы"", графа """ + ЗаголовокДатаОтчетногоПериодаПрошлогоГода + """", "+", "!ДО", П010003004, Счет90_7, , 1, , "ФормаОтчета");

		// строка 2220 "Управленческие расходы"
		П010004004 = ДО(Счет90_8);
		УстановитьЗначениеПоказателя("П000100222005", -П010004004);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100222005", "Строка 2220 ""Управленческие расходы"", графа """ + ЗаголовокДатаОтчетногоПериодаПрошлогоГода + """", "+", "!ДО", П010004004, Счет90_8, , 1, , "ФормаОтчета");

		Итоги = "ОборотДт, ОборотКт, КорОборотДт, КорОборотКт";
		мБухИтогиРС.РассчитатьИтоги("Хозрасчетный", Итоги, "Сумма", "Счет, Субконто1, КорСчет", мДатаНачалаПериодаПрошлогоГода, мДатаКонцаПериодаПрошлогоГода, , "91.01, 91.02", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы, "68.02, 76.Н", , "Организация", мОргРасшифровка);
		РезультатЗапроса = мБухИтогиРС.ПолучитьОстаткиИОбороты();

		// Начальное обнуление
		П010006004_ПроцентыКПолучениюУплате = 0;
		П010006004_ПроцентыПоГосударственнымЦеннымБумагам = 0;
		П010006004_ПроцентыПоГосударственнымЦеннымБумагамПоСтавке0 = 0;
		П010007004_ПроцентыКПолучениюУплате = 0;

		П010007004_ПроцентыНачисленныеПоСт269 = 0;

		П010008004_УчастиеВДругихОрганизациях = 0;
		П010008004_УчастиеВРоссийскихОрганизациях = 0;
		П010008004_УчастиеВИностранныхОрганизациях = 0;

		П010010004_УчастиеВДругихОрганизациях = 0;
		П010010004_УчастиеВРоссийскихОрганизациях = 0;
		П010010004_УчастиеВИностранныхОрганизациях = 0;

		П010009004_РеализацияОсновныхСредств = 0;
		П010010004_РеализацияОсновныхСредств = 0;

		П04_НДС_РеализацияОсновныхСредств = 0;

		П010009004_ЛиквидацияОсновныхСредств = 0;
		П010010004_ЛиквидацияОсновныхСредств = 0;
		
		П010009004_РеализацияНМА = 0;
		П010010004_РеализацияНМА = 0;

		П04_НДС_РеализацияНМА = 0;

		П010009004_РеализацияПрочегоИмущества = 0;
		П010010004_РеализацияПрочегоИмущества = 0;

		П04_НДС_РеализацияПрочегоИмущества = 0;

		П010009004_РеализацияПраваТребованияКакОказанияФинансовыхУслуг = 0;
		П010010004_РеализацияПраваТребованияКакОказанияФинансовыхУслуг = 0;

		П04_НДС_РеализацияПраваТребованияКакОказанияФинансовыхУслуг = 0;

		П010009004_РеализацияПраваТребованияДоНаступленияСрокаПлатежа = 0;
		П010010004_РеализацияПраваТребованияДоНаступленияСрокаПлатежа = 0;

		П04_НДС_РеализацияПраваТребованияДоНаступленияСрокаПлатежа = 0;

		П010009004_РеализацияПраваТребованияПослеНаступленияСрокаПлатежа = 0;
		П010010004_РеализацияПраваТребованияПослеНаступленияСрокаПлатежа = 0;

		П04_НДС_РеализацияПраваТребованияПослеНаступленияСрокаПлатежа = 0;

		П010009004_РеализацияИмущественныхПравКромеПраваТребования = 0;
		П010010004_РеализацияИмущественныхПравКромеПраваТребования = 0;

		П04_НДС_РеализацияИмущественныхПравКромеПраваТребования = 0;

		П010009004_РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводств = 0;
		П010010004_РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводств = 0;

		П04_НДС_РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводств = 0;

		П010009004_РеализацияЦенныхБумаг = 0;
		П010010004_РеализацияЦенныхБумаг = 0;

		П010009004_ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделок = 0;
		П010010004_ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделок = 0;

		П010009004_ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделокОР = 0;
		П010010004_ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделокОР = 0;

		П010009004_СдачаИмуществаВАренду = 0;
		П010010004_СдачаИмуществаВАренду = 0;

		П04_НДС_СдачаИмуществаВАренду = 0;

		П010009004_РазницаСтоимостиЦенныхБумаг = 0;
		П010010004_РазницаСтоимостиЦенныхБумаг = 0;

		П010010004_РасходыНаУслугиБанков = 0;

		П010009004_ПрочиеОперационныеДоходыРасходы = 0;
		П010010004_ПрочиеОперационныеДоходыРасходы = 0;

		П04_НДС_ПрочиеОперационныеДоходыРасходы = 0;

		П010009004_ОтчисленияВОценочныеРезервы = 0;
		П010010004_ОтчисленияВОценочныеРезервы = 0;
		
		П010009004_ШтрафыПениНеустойкиКПолучениюУплате = 0;
		П010010004_ШтрафыПениНеустойкиКПолучениюУплате = 0;

		П04_НДС_ШтрафыПениНеустойкиКПолучениюУплате = 0;

		П010009004_ПрибыльУбытокПрошлыхЛет = 0;
		П010010004_ПрибыльУбытокПрошлыхЛет = 0;
		
		П04_НДС_ПрибыльУбытокПрошлыхЛет = 0;
		
		П010009004_ВозмещениеУбытковКПолучениюУплате = 0;
		П010010004_ВозмещениеУбытковКПолучениюУплате = 0;

		П010009004_КурсовыеРазницы = 0;
		П010010004_КурсовыеРазницы = 0;

		П010009004_КурсовыеРазницыПоРасчетамВУЕ = 0;
		П010010004_КурсовыеРазницыПоРасчетамВУЕ = 0;

		П010010004_НалогиИСборы = 0;

		П010010004_ПремияПокупателю = 0;

		П010009004_СписаниеДебиторскойКредиторскойЗадолженности = 0;
		П010010004_СписаниеДебиторскойКредиторскойЗадолженности = 0;

		П010010004_НДСПоСписаннойКредиторскойЗадолженности = 0;

		П010009004_БезвозмездноеПолучениеИмущества = 0;
		П010010004_БезвозмездноеПолучениеИмущества = 0;

		П010010004_РасходыПоПередачеТоваровБезвозмездноИДляСобственныхНужд = 0;

		П010009004_ПрочиеВнереализационныеДоходыРасходы = 0;
		П010010004_ПрочиеВнереализационныеДоходыРасходы = 0;

		П04_НДС_ПрочиеВнереализационныеДоходыРасходы = 0;

		П010010004_РасходыОтСниженияСтоимостиАктивов = 0;

		П010010004_ПрочиеКосвенныеРасходы = 0;

		П04_НДС_ПрочиеКосвенныеРасходы = 0;

		П010009004_ДоходыСвязанныеСВосстановлениемАмортизационнойПремии = 0;

		ВыборкаПоСубконто = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Субконто1");

		// Обрабатываем субкотно "Прочие доходы и расходы".
		Пока ВыборкаПоСубконто.Следующий() Цикл

			ВыбранноеСубконто = ВыборкаПоСубконто.Субконто1;

			Если ВыбранноеСубконто.ЭтоГруппа Тогда
				Продолжить;
			КонецЕсли;

			// Сразу получем все необходимые итоги
			Сумма91_1 = мБухИтогиРС.ПолучитьИтог("СуммаОборотКт", "Счет, Субконто1", Счет91_1, ВыбранноеСубконто);
			Сумма91_2 = мБухИтогиРС.ПолучитьИтог("СуммаОборотДт", "Счет, Субконто1", Счет91_2, ВыбранноеСубконто);

			НДС       = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотДт", "Счет, Субконто1, КорСчет", Счет91_2, ВыбранноеСубконто, Счет68_02);

			Если ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ПроцентыКПолучениюУплате Тогда

				// Проценты к получению
				П010006004_ПроцентыКПолучениюУплате = П010006004_ПроцентыКПолучениюУплате + Сумма91_1;

				// Проценты к уплате
				П010007004_ПроцентыКПолучениюУплате = П010007004_ПроцентыКПолучениюУплате + Сумма91_2;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ПроцентыПоГосударственнымЦеннымБумагам Тогда

				П010006004_ПроцентыПоГосударственнымЦеннымБумагам = П010006004_ПроцентыПоГосударственнымЦеннымБумагам  + Сумма91_1;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ПроцентыПоГосударственнымЦеннымБумагамПоСтавке0 Тогда

				П010006004_ПроцентыПоГосударственнымЦеннымБумагамПоСтавке0 = П010006004_ПроцентыПоГосударственнымЦеннымБумагамПоСтавке0  + Сумма91_1;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ПроцентыНачисленныеПоСт269 Тогда

				П010007004_ПроцентыНачисленныеПоСт269 = П010007004_ПроцентыНачисленныеПоСт269 + Сумма91_2;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСУчастиемВДругихОрганизациях Тогда

				П010008004_УчастиеВДругихОрганизациях = П010008004_УчастиеВДругихОрганизациях + Сумма91_1;
				П010010004_УчастиеВДругихОрганизациях = П010010004_УчастиеВДругихОрганизациях + Сумма91_2;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДолевоеУчастиеВИностранныхОрганизациях Тогда

				П010008004_УчастиеВИностранныхОрганизациях = П010008004_УчастиеВИностранныхОрганизациях + Сумма91_1;
				П010010004_УчастиеВИностранныхОрганизациях = П010010004_УчастиеВИностранныхОрганизациях + Сумма91_2;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДолевоеУчастиеВРоссийскихОрганизациях Тогда

				П010008004_УчастиеВРоссийскихОрганизациях = П010008004_УчастиеВРоссийскихОрганизациях + Сумма91_1; 
				П010010004_УчастиеВРоссийскихОрганизациях = П010010004_УчастиеВРоссийскихОрганизациях + Сумма91_2; 

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСРеализациейОсновныхСредств Тогда

				П010009004_РеализацияОсновныхСредств = П010009004_РеализацияОсновныхСредств + Сумма91_1;
				П010010004_РеализацияОсновныхСредств = П010010004_РеализацияОсновныхСредств + Сумма91_2;

				П04_НДС_РеализацияОсновныхСредств = П04_НДС_РеализацияОсновныхСредств + НДС;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСЛиквидациейОсновныхСредств Тогда

				П010009004_ЛиквидацияОсновныхСредств = П010009004_ЛиквидацияОсновныхСредств + Сумма91_1;
				П010010004_ЛиквидацияОсновныхСредств = П010010004_ЛиквидацияОсновныхСредств + Сумма91_2;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСРеализациейНематериальныхАктивов Тогда

				П010009004_РеализацияНМА = П010009004_РеализацияНМА + Сумма91_1;
				П010010004_РеализацияНМА = П010010004_РеализацияНМА + Сумма91_2;

				П04_НДС_РеализацияНМА = П04_НДС_РеализацияНМА + НДС;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСРеализациейПрочегоИмущества Тогда

				П010009004_РеализацияПрочегоИмущества = П010009004_РеализацияПрочегоИмущества + Сумма91_1;
				П010010004_РеализацияПрочегоИмущества = П010010004_РеализацияПрочегоИмущества + Сумма91_2;

				П04_НДС_РеализацияПрочегоИмущества = П04_НДС_РеализацияПрочегоИмущества + НДС;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСРеализациейПраваТребованияКакОказанияФинансовыхУслуг Тогда

				П010009004_РеализацияПраваТребованияКакОказанияФинансовыхУслуг = П010009004_РеализацияПраваТребованияКакОказанияФинансовыхУслуг + Сумма91_1;
				П010010004_РеализацияПраваТребованияКакОказанияФинансовыхУслуг = П010010004_РеализацияПраваТребованияКакОказанияФинансовыхУслуг + Сумма91_2;

				П04_НДС_РеализацияПраваТребованияКакОказанияФинансовыхУслуг = П04_НДС_РеализацияПраваТребованияКакОказанияФинансовыхУслуг + НДС;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСРеализациейПраваТребованияДоНаступленияСрокаПлатежа Тогда

				П010009004_РеализацияПраваТребованияДоНаступленияСрокаПлатежа = П010009004_РеализацияПраваТребованияДоНаступленияСрокаПлатежа + Сумма91_1;
				П010010004_РеализацияПраваТребованияДоНаступленияСрокаПлатежа = П010010004_РеализацияПраваТребованияДоНаступленияСрокаПлатежа + Сумма91_2;

				П04_НДС_РеализацияПраваТребованияДоНаступленияСрокаПлатежа = П04_НДС_РеализацияПраваТребованияДоНаступленияСрокаПлатежа + НДС;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСРеализациейПраваТребованияПослеНаступленияСрокаПлатежа Тогда

				П010009004_РеализацияПраваТребованияПослеНаступленияСрокаПлатежа = П010009004_РеализацияПраваТребованияПослеНаступленияСрокаПлатежа + Сумма91_1;
				П010010004_РеализацияПраваТребованияПослеНаступленияСрокаПлатежа = П010010004_РеализацияПраваТребованияПослеНаступленияСрокаПлатежа + Сумма91_2;

				П04_НДС_РеализацияПраваТребованияПослеНаступленияСрокаПлатежа = П04_НДС_РеализацияПраваТребованияПослеНаступленияСрокаПлатежа + НДС;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСРеализациейИмущественныхПравКромеПраваТребования Тогда

				П010009004_РеализацияИмущественныхПравКромеПраваТребования = П010009004_РеализацияИмущественныхПравКромеПраваТребования + Сумма91_1;
				П010010004_РеализацияИмущественныхПравКромеПраваТребования = П010010004_РеализацияИмущественныхПравКромеПраваТребования + Сумма91_2;

				П04_НДС_РеализацияИмущественныхПравКромеПраваТребования = П04_НДС_РеализацияИмущественныхПравКромеПраваТребования + НДС;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСРеализациейИмущественныхПравПоОбъектамОбслуживающихПроизводств Тогда

				П010009004_РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводств = П010009004_РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводств + Сумма91_1;
				П010010004_РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводств = П010010004_РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводств + Сумма91_2;

				П04_НДС_РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводств = П04_НДС_РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводств + НДС;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСРеализациейЦенныхБумаг Тогда

				П010009004_РеализацияЦенныхБумаг = П010009004_РеализацияЦенныхБумаг + Сумма91_1;
				П010010004_РеализацияЦенныхБумаг = П010010004_РеализацияЦенныхБумаг + Сумма91_2;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделок Тогда

				П010009004_ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделок = П010009004_ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделок + Сумма91_1;
				П010010004_ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделок = П010010004_ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделок + Сумма91_2;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделокОР Тогда

				П010009004_ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделокОР = П010009004_ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделокОР + Сумма91_1;
				П010010004_ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделокОР = П010010004_ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделокОР + Сумма91_2;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСоСдачейИмуществаВАренду Тогда

				П010009004_СдачаИмуществаВАренду = П010009004_СдачаИмуществаВАренду + Сумма91_1;
				П010010004_СдачаИмуществаВАренду = П010010004_СдачаИмуществаВАренду + Сумма91_2;

				П04_НДС_СдачаИмуществаВАренду = П04_НДС_СдачаИмуществаВАренду + НДС;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.РазницаМеждуПервоначальнойИНоминальнойСтоимостьюПоДолговымЦеннымБумагам Тогда

				П010009004_РазницаСтоимостиЦенныхБумаг = П010009004_РазницаСтоимостиЦенныхБумаг + Сумма91_1;
				П010010004_РазницаСтоимостиЦенныхБумаг = П010010004_РазницаСтоимостиЦенныхБумаг + Сумма91_2;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.РасходыНаУслугиБанков Тогда

				П010010004_РасходыНаУслугиБанков = П010010004_РасходыНаУслугиБанков + Сумма91_2;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ПрочиеОперационныеДоходыРасходы Тогда

				П010009004_ПрочиеОперационныеДоходыРасходы = П010009004_ПрочиеОперационныеДоходыРасходы + Сумма91_1;
				П010010004_ПрочиеОперационныеДоходыРасходы = П010010004_ПрочиеОперационныеДоходыРасходы + Сумма91_2;

				П04_НДС_ПрочиеОперационныеДоходыРасходы = П04_НДС_ПрочиеОперационныеДоходыРасходы + НДС;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ШтрафыПениНеустойкиКПолучениюУплате Тогда

				П010009004_ШтрафыПениНеустойкиКПолучениюУплате = П010009004_ШтрафыПениНеустойкиКПолучениюУплате + Сумма91_1;
				П010010004_ШтрафыПениНеустойкиКПолучениюУплате = П010010004_ШтрафыПениНеустойкиКПолучениюУплате + Сумма91_2;

				П04_НДС_ШтрафыПениНеустойкиКПолучениюУплате = П04_НДС_ШтрафыПениНеустойкиКПолучениюУплате + НДС;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ПрибыльУбытокПрошлыхЛет Тогда

				П010009004_ПрибыльУбытокПрошлыхЛет = П010009004_ПрибыльУбытокПрошлыхЛет + Сумма91_1;
				П010010004_ПрибыльУбытокПрошлыхЛет = П010010004_ПрибыльУбытокПрошлыхЛет + Сумма91_2;
				
				П04_НДС_ПрибыльУбытокПрошлыхЛет = П04_НДС_ПрибыльУбытокПрошлыхЛет + НДС;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ВозмещениеУбытковКПолучениюУплате Тогда

				П010009004_ВозмещениеУбытковКПолучениюУплате = П010009004_ВозмещениеУбытковКПолучениюУплате + Сумма91_1;
				П010010004_ВозмещениеУбытковКПолучениюУплате = П010010004_ВозмещениеУбытковКПолучениюУплате + Сумма91_2;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.КурсовыеРазницы Тогда

				П010009004_КурсовыеРазницы = П010009004_КурсовыеРазницы + Сумма91_1;
				П010010004_КурсовыеРазницы = П010010004_КурсовыеРазницы + Сумма91_2;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.КурсовыеРазницыПоРасчетамВУЕ Тогда

				П010009004_КурсовыеРазницыПоРасчетамВУЕ = П010009004_КурсовыеРазницыПоРасчетамВУЕ + Сумма91_1;
				П010010004_КурсовыеРазницыПоРасчетамВУЕ = П010010004_КурсовыеРазницыПоРасчетамВУЕ + Сумма91_2;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.НалогиИСборы Тогда

				П010010004_НалогиИСборы = П010010004_НалогиИСборы  + Сумма91_2;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ОтчисленияВОценочныеРезервы Тогда

				П010009004_ОтчисленияВОценочныеРезервы = П010009004_ОтчисленияВОценочныеРезервы + Сумма91_1;
				П010010004_ОтчисленияВОценочныеРезервы = П010010004_ОтчисленияВОценочныеРезервы + Сумма91_2;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ПремияПокупателю Тогда

				П010010004_ПремияПокупателю = П010010004_ПремияПокупателю  + Сумма91_2;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.СписаниеДебиторскойКредиторскойЗадолженности Тогда

				П010009004_СписаниеДебиторскойКредиторскойЗадолженности = П010009004_СписаниеДебиторскойКредиторскойЗадолженности + Сумма91_1;
				П010010004_СписаниеДебиторскойКредиторскойЗадолженности = П010010004_СписаниеДебиторскойКредиторскойЗадолженности + Сумма91_2;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.НДСПоСписаннойКредиторскойЗадолженности Тогда

				П010010004_НДСПоСписаннойКредиторскойЗадолженности = П010010004_НДСПоСписаннойКредиторскойЗадолженности + Сумма91_2;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСБезвозмезднымПолучениемИмущества Тогда

				П010009004_БезвозмездноеПолучениеИмущества = П010009004_БезвозмездноеПолучениеИмущества + Сумма91_1;
				П010010004_БезвозмездноеПолучениеИмущества = П010010004_БезвозмездноеПолучениеИмущества + Сумма91_2;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.РасходыПоПередачеТоваровБезвозмездноИДляСобственныхНужд Тогда

				П010010004_РасходыПоПередачеТоваровБезвозмездноИДляСобственныхНужд = П010010004_РасходыПоПередачеТоваровБезвозмездноИДляСобственныхНужд + Сумма91_2;

				//П04_НДС_РасходыПоПередачеТоваровБезвозмездноИДляСобственныхНужд = П04_НДС_РасходыПоПередачеТоваровБезвозмездноИДляСобственныхНужд + НДС;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ПрочиеВнереализационныеДоходыРасходы Тогда

				П010009004_ПрочиеВнереализационныеДоходыРасходы = П010009004_ПрочиеВнереализационныеДоходыРасходы + Сумма91_1;
				П010010004_ПрочиеВнереализационныеДоходыРасходы = П010010004_ПрочиеВнереализационныеДоходыРасходы + Сумма91_2;

				П04_НДС_ПрочиеВнереализационныеДоходыРасходы = П04_НДС_ПрочиеВнереализационныеДоходыРасходы + НДС;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.РасходыОтСниженияСтоимостиАктивов Тогда

				П010010004_РасходыОтСниженияСтоимостиАктивов = П010010004_РасходыОтСниженияСтоимостиАктивов + Сумма91_2;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ПрочиеКосвенныеРасходы Тогда

				П010010004_ПрочиеКосвенныеРасходы = П010010004_ПрочиеКосвенныеРасходы + Сумма91_2;

				П04_НДС_ПрочиеКосвенныеРасходы = П04_НДС_ПрочиеКосвенныеРасходы + НДС;

			ИначеЕсли ВыбранноеСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыСвязанныеСВосстановлениемАмортизационнойПремии Тогда

				П010009004_ДоходыСвязанныеСВосстановлениемАмортизационнойПремии = П010009004_ДоходыСвязанныеСВосстановлениемАмортизационнойПремии + Сумма91_1;

			КонецЕсли;

		КонецЦикла;

		ИтогиРС = "ОборотДт, ОборотКт, КорОборотДт, КорОборотКт";
		мБухИтогиРС.РассчитатьИтоги("Хозрасчетный", ИтогиРС, "Сумма", "Счет, Субконто1, КорСчет", мДатаНачалаПериодаПрошлогоГода, мДатаКонцаПериодаПрошлогоГода, , "99", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрибылиИУбытки, , , "Организация", мОргРасшифровка);
		РезультатЗапроса = мБухИтогиРС.ПолучитьОстаткиИОбороты();

		// Строка "Чрезвычайные доходы"
		П010009004_ЧрезвычайныеДоходыРасходы = мБухИтогиРС.ПолучитьИтог("СуммаОборотКт", "Счет, Субконто1", Счет99_1, Перечисления.ПрибылиИУбытки.ЧрезвычайныеДоходыРасходы);

		// Строка "Чрезвычайные расходы"
		П010010004_ЧрезвычайныеДоходыРасходы = мБухИтогиРС.ПолучитьИтог("СуммаОборотДт", "Счет, Субконто1", Счет99_1, Перечисления.ПрибылиИУбытки.ЧрезвычайныеДоходыРасходы);

		// строка 2310 "Доходы от участия в других организациях"
		П010008004 = П010008004_УчастиеВДругихОрганизациях + П010008004_УчастиеВИностранныхОрганизациях + П010008004_УчастиеВРоссийскихОрганизациях;
		
		УстановитьЗначениеПоказателя("П000100231005", П010008004);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100231005", "Строка 2310 ""Доходы от участия в других организациях"", графа """ + ЗаголовокДатаОтчетногоПериодаПрошлогоГода + """", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с участием в других организациях""/", П010008004_УчастиеВДругихОрганизациях, , , 1, , "ФормаОтчета");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100231005", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Долевое участие в иностранных организациях""/", П010008004_УчастиеВИностранныхОрганизациях);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100231005", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Долевое участие в российских организациях""/", П010008004_УчастиеВРоссийскихОрганизациях);

		// строка 2320 "Проценты к получению"
		П010006004 = П010006004_ПроцентыКПолучениюУплате + П010006004_ПроцентыПоГосударственнымЦеннымБумагам + П010006004_ПроцентыПоГосударственнымЦеннымБумагамПоСтавке0;
		УстановитьЗначениеПоказателя("П000100232005", П010006004);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100232005", "Строка 2320 ""Проценты к получению"", графа """ + ЗаголовокДатаОтчетногоПериодаПрошлогоГода + """", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Проценты к получению (уплате)""/",  П010006004_ПроцентыКПолучениюУплате, , , 1, , "ФормаОтчета");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100232005", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Проценты по государственным ценным бумагам""/", П010006004_ПроцентыПоГосударственнымЦеннымБумагам);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100232005", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Проценты по государственным ценным бумагам по ставке 0%""/", П010006004_ПроцентыПоГосударственнымЦеннымБумагамПоСтавке0);

		// строка 2330 "Проценты к уплате"
		П010007004 = П010007004_ПроцентыКПолучениюУплате
		           + П010007004_ПроцентыНачисленныеПоСт269;
		УстановитьЗначениеПоказателя("П000100233005", -П010007004);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100233005", "Строка 2330 ""Проценты к уплате"", графа """ + ЗаголовокДатаОтчетногоПериодаПрошлогоГода + """", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Проценты к получению (уплате)""/ ", П010007004_ПроцентыКПолучениюУплате, , , 1, , "ФормаОтчета");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100233005", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Проценты, начисленные в соответствии со статьей 269""/ ", П010007004_ПроцентыНачисленныеПоСт269);

		// строка 2340 "Прочие доходы"
		П010009004 = П010009004_РеализацияОсновныхСредств                                     - П04_НДС_РеализацияОсновныхСредств
		           + П010009004_ЛиквидацияОсновныхСредств
		           + П010009004_РеализацияНМА                                                 - П04_НДС_РеализацияНМА
		           + П010009004_РеализацияПрочегоИмущества                                    - П04_НДС_РеализацияПрочегоИмущества
		           + П010009004_РеализацияПраваТребованияКакОказанияФинансовыхУслуг           - П04_НДС_РеализацияПраваТребованияКакОказанияФинансовыхУслуг
		           + П010009004_РеализацияПраваТребованияДоНаступленияСрокаПлатежа            - П04_НДС_РеализацияПраваТребованияДоНаступленияСрокаПлатежа
		           + П010009004_РеализацияПраваТребованияПослеНаступленияСрокаПлатежа         - П04_НДС_РеализацияПраваТребованияПослеНаступленияСрокаПлатежа
		           + П010009004_РеализацияИмущественныхПравКромеПраваТребования               - П04_НДС_РеализацияИмущественныхПравКромеПраваТребования
		           + П010009004_РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводств - П04_НДС_РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводств
		           + П010009004_РеализацияЦенныхБумаг
		           + П010009004_ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделок
		           + П010009004_ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделокОР
		           + П010009004_СдачаИмуществаВАренду                                         - П04_НДС_СдачаИмуществаВАренду
		           + П010009004_ОтчисленияВОценочныеРезервы
		           + П010009004_РазницаСтоимостиЦенныхБумаг
		           + П010009004_ПрочиеОперационныеДоходыРасходы                               - П04_НДС_ПрочиеОперационныеДоходыРасходы

		// бывшая строка 120 "Внереализационные доходы"
		           + П010009004_ШтрафыПениНеустойкиКПолучениюУплате                           - П04_НДС_ШтрафыПениНеустойкиКПолучениюУплате
		           + П010009004_ПрибыльУбытокПрошлыхЛет                                       - П04_НДС_ПрибыльУбытокПрошлыхЛет
		           + П010009004_ВозмещениеУбытковКПолучениюУплате
		           + П010009004_КурсовыеРазницы
		           + П010009004_КурсовыеРазницыПоРасчетамВУЕ
		           + П010009004_СписаниеДебиторскойКредиторскойЗадолженности
		           + П010009004_БезвозмездноеПолучениеИмущества
		           + П010009004_ПрочиеВнереализационныеДоходыРасходы                          - П04_НДС_ПрочиеВнереализационныеДоходыРасходы
		           + П010009004_ДоходыСвязанныеСВосстановлениемАмортизационнойПремии

		// Чрезвычайные доходы
		           + П010009004_ЧрезвычайныеДоходыРасходы;

		УстановитьЗначениеПоказателя("П000100234005", П010009004);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234005", "Строка 2340 ""Прочие доходы"", графа """ + ЗаголовокДатаОтчетногоПериодаПрошлогоГода + """", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией основных средств""/", П010009004_РеализацияОсновныхСредств, , , 1, , "ФормаОтчета");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234005", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией основных средств""/ в корреспонденции со счетом 68.02", -П04_НДС_РеализацияОсновныхСредств);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234005", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с ликвидацией основных средств""/", П010009004_ЛиквидацияОсновныхСредств);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234005", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией нематериальных активов""/", П010009004_РеализацияНМА);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234005", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией нематериальных активов""/ в корреспонденции со счетом 68.02", -П04_НДС_РеализацияНМА);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234005", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией прочего имущества""/", П010009004_РеализацияПрочегоИмущества);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234005", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией прочего имущества""/ в корреспонденции со счетом 68.02", -П04_НДС_РеализацияПрочегоИмущества);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234005", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией права требования как оказания финансовых услуг""/", П010009004_РеализацияПраваТребованияКакОказанияФинансовыхУслуг);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234005", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией права требования как оказания финансовых услуг""/ в корреспонденции со счетом 68.02", -П04_НДС_РеализацияПраваТребованияКакОказанияФинансовыхУслуг);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234005", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией права требования до наступления срока платежа""/", П010009004_РеализацияПраваТребованияДоНаступленияСрокаПлатежа);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234005", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией права требования до наступления срока платежа""/ в корреспонденции со счетом 68.02", -П04_НДС_РеализацияПраваТребованияДоНаступленияСрокаПлатежа);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234005", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией права требования после наступления срока платежа""/", П010009004_РеализацияПраваТребованияПослеНаступленияСрокаПлатежа);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234005", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией права требования после наступления срока платежа""/ в корреспонденции со счетом 68.02", -П04_НДС_РеализацияПраваТребованияПослеНаступленияСрокаПлатежа);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234005", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией имущественных прав, кроме права требования""/", П010009004_РеализацияИмущественныхПравКромеПраваТребования);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234005", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией имущественных прав, кроме права требования""/ в корреспонденции со счетом 68.02", -П04_НДС_РеализацияИмущественныхПравКромеПраваТребования);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234005", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией имущественных прав по объектам обслуживающих производств и хозяйств""/", П010009004_РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводств);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234005", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией имущественных прав по объектам обслуживающих производств и хозяйств""/ в корреспонденции со счетом 68.02", -П04_НДС_РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводств);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234005", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией ценных бумаг""/", П010009004_РеализацияЦенныхБумаг);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234005", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы) по операциям с финансовыми инструментами срочных сделок, не обращающимися на организованном рынке""/", П010009004_ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделок);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234005", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы) по операциям с финансовыми инструментами срочных сделок, обращающимися на организованном рынке""/", П010009004_ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделокОР);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234005", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные со сдачей имущества в аренду (субаренду)""/", П010009004_СдачаИмуществаВАренду);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234005", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные со сдачей имущества в аренду (субаренду)""/ в корреспонденции со счетом 68.02", -П04_НДС_СдачаИмуществаВАренду);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234005", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Отчисления в оценочные резервы""/", П010009004_ОтчисленияВОценочныеРезервы);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234005", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Разница между первоначальной и номинальной стоимостью по долговым ценным бумагам""/", П010009004_РазницаСтоимостиЦенныхБумаг);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234005", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Прочие операционные доходы (расходы)""/", П010009004_ПрочиеОперационныеДоходыРасходы);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234005", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Прочие операционные доходы (расходы)""/ в корреспонденции со счетом 68.02", -П04_НДС_ПрочиеОперационныеДоходыРасходы);

		// бывшая строка 120 "Внереализационные доходы"
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234005", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Штрафы, пени и неустойки к получению (уплате)""/", П010009004_ШтрафыПениНеустойкиКПолучениюУплате);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234005", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Штрафы, пени и неустойки к получению (уплате)""/ в корреспонденции со счетом 68.02", -П04_НДС_ШтрафыПениНеустойкиКПолучениюУплате);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234005", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Прибыль (убыток) прошлых лет""/", П010009004_ПрибыльУбытокПрошлыхЛет);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234005", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Прибыль (убыток) прошлых лет""/ в корреспонденции со счетом 68.02", -П04_НДС_ПрибыльУбытокПрошлыхЛет);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234005", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Возмещение убытков к получению (уплате)""/", П010009004_ВозмещениеУбытковКПолучениюУплате);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234005", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Курсовые разницы""/", П010009004_КурсовыеРазницы);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234005", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Курсовые разницы по расчетам в у.е.""/", П010009004_КурсовыеРазницыПоРасчетамВУЕ);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234005", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Списание дебиторской (кредиторской) задолженности""/", П010009004_СписаниеДебиторскойКредиторскойЗадолженности);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234005", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с безвозмездным получением имущества, работ, услуг или имущественных прав""/", П010009004_БезвозмездноеПолучениеИмущества);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234005", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Прочие внереализационные доходы (расходы)""/", П010009004_ПрочиеВнереализационныеДоходыРасходы);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234005", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Прочие внереализационные доходы (расходы)""/ в корреспонденции со счетом 68.02", -П04_НДС_ПрочиеВнереализационныеДоходыРасходы);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234005", "", "+", "Оборот по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы, связанные с восстановлением амортизационной премии""/", П010009004_ДоходыСвязанныеСВосстановлениемАмортизационнойПремии);

		// Чрезвычайные доходы
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100234005", "", "+", "!КО", П010009003_ЧрезвычайныеДоходыРасходы, Счет99_1,,,,,,,, Перечисления.ПрибылиИУбытки.ЧрезвычайныеДоходыРасходы);

		// строка 2350 "Прочие расходы"
		П010010004 = П010010004_УчастиеВДругихОрганизациях
		           + П010010004_УчастиеВРоссийскихОрганизациях
		           + П010010004_УчастиеВИностранныхОрганизациях
		           + П010010004_РеализацияОсновныхСредств                                     - П04_НДС_РеализацияОсновныхСредств
		           + П010010004_ЛиквидацияОсновныхСредств
		           + П010010004_РеализацияНМА                                                 - П04_НДС_РеализацияНМА
		           + П010010004_РеализацияПрочегоИмущества                                    - П04_НДС_РеализацияПрочегоИмущества
		           + П010010004_РеализацияПраваТребованияКакОказанияФинансовыхУслуг           - П04_НДС_РеализацияПраваТребованияКакОказанияФинансовыхУслуг
		           + П010010004_РеализацияПраваТребованияДоНаступленияСрокаПлатежа            - П04_НДС_РеализацияПраваТребованияДоНаступленияСрокаПлатежа
		           + П010010004_РеализацияПраваТребованияПослеНаступленияСрокаПлатежа         - П04_НДС_РеализацияПраваТребованияПослеНаступленияСрокаПлатежа
		           + П010010004_РеализацияИмущественныхПравКромеПраваТребования               - П04_НДС_РеализацияИмущественныхПравКромеПраваТребования
		           + П010010004_РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводств - П04_НДС_РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводств
		           + П010010004_РеализацияЦенныхБумаг
		           + П010010004_ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделок
		           + П010010004_ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделокОР
		           + П010010004_СдачаИмуществаВАренду                                         - П04_НДС_СдачаИмуществаВАренду
		           + П010010004_ОтчисленияВОценочныеРезервы
		           + П010010004_РазницаСтоимостиЦенныхБумаг
		           + П010010004_РасходыНаУслугиБанков
		           + П010010004_ПрочиеОперационныеДоходыРасходы                               - П04_НДС_ПрочиеОперационныеДоходыРасходы

		// бывшая строка 130 "Внереализационные расходы"
		           + П010010004_ШтрафыПениНеустойкиКПолучениюУплате                           - П04_НДС_ШтрафыПениНеустойкиКПолучениюУплате
		           + П010010004_ПрибыльУбытокПрошлыхЛет                                       - П04_НДС_ПрибыльУбытокПрошлыхЛет
		           + П010010004_ВозмещениеУбытковКПолучениюУплате
		           + П010010004_КурсовыеРазницы
		           + П010010004_КурсовыеРазницыПоРасчетамВУЕ
		           + П010010004_НалогиИСборы
		           + П010010004_ПремияПокупателю
		           + П010010004_СписаниеДебиторскойКредиторскойЗадолженности
		           + П010010004_НДСПоСписаннойКредиторскойЗадолженности
		           + П010010004_БезвозмездноеПолучениеИмущества
		           + П010010004_РасходыПоПередачеТоваровБезвозмездноИДляСобственныхНужд
		           + П010010004_ПрочиеВнереализационныеДоходыРасходы                          - П04_НДС_ПрочиеВнереализационныеДоходыРасходы
		           + П010010004_РасходыОтСниженияСтоимостиАктивов
		           + П010010004_ПрочиеКосвенныеРасходы                                        - П04_НДС_ПрочиеКосвенныеРасходы

		// Чрезвычайные расходы 
		           + П010010004_ЧрезвычайныеДоходыРасходы;

		УстановитьЗначениеПоказателя("П000100235005", -П010010004);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235005", "Строка 2350 ""Прочие расходы"", графа """ + ЗаголовокДатаОтчетногоПериодаПрошлогоГода + """", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с участием в других организациях""/", П010010004_УчастиеВДругихОрганизациях, , , 1, , "ФормаОтчета");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235005", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Долевое участие в российских организациях""/", П010010004_УчастиеВРоссийскихОрганизациях);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235005", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Долевое участие в иностранных организациях""/", П010010004_УчастиеВИностранныхОрганизациях);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235005", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией основных средств""/", П010010004_РеализацияОсновныхСредств);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235005", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией основных средств""/ в корреспонденции со счетом 68.02", -П04_НДС_РеализацияОсновныхСредств);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235005", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с ликвидацией основных средств""/", П010010004_ЛиквидацияОсновныхСредств);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235005", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией нематериальных активов""/", П010010004_РеализацияНМА);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235005", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией нематериальных активов""/ в корреспонденции со счетом 68.02", -П04_НДС_РеализацияНМА);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235005", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией прочего имущества""/", П010010004_РеализацияПрочегоИмущества);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235005", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией прочего имущества""/ в корреспонденции со счетом 68.02", -П04_НДС_РеализацияПрочегоИмущества);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235005", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией права требования как оказания финансовых услуг""/", П010010004_РеализацияПраваТребованияКакОказанияФинансовыхУслуг);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235005", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией права требования как оказания финансовых услуг""/ в корреспонденции со счетом 68.02", -П04_НДС_РеализацияПраваТребованияКакОказанияФинансовыхУслуг);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235005", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией права требования до наступления срока платежа""/", П010010004_РеализацияПраваТребованияДоНаступленияСрокаПлатежа);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235005", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией права требования до наступления срока платежа""/ в корреспонденции со счетом 68.02", -П04_НДС_РеализацияПраваТребованияДоНаступленияСрокаПлатежа);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235005", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией права требования после наступления срока платежа""/", П010010004_РеализацияПраваТребованияПослеНаступленияСрокаПлатежа);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235005", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией права требования после наступления срока платежа""/ в корреспонденции со счетом 68.02", -П04_НДС_РеализацияПраваТребованияПослеНаступленияСрокаПлатежа);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235005", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией имущественных прав, кроме права требования""/", П010010004_РеализацияИмущественныхПравКромеПраваТребования);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235005", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией имущественных прав, кроме права требования""/ в корреспонденции со счетом 68.02", -П04_НДС_РеализацияИмущественныхПравКромеПраваТребования);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235005", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией имущественных прав по объектам обслуживающих производств и хозяйств""/", П010010004_РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводств);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235005", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией имущественных прав по объектам обслуживающих производств и хозяйств""/ в корреспонденции со счетом 68.02", -П04_НДС_РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводств);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235005", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с реализацией ценных бумаг""/", П010010004_РеализацияЦенныхБумаг);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235005", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы) по операциям с финансовыми инструментами срочных сделок, не обращающимися на организованном рынке""/", П010010004_ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделок);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235005", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы) по операциям с финансовыми инструментами срочных сделок, обращающимися на организованном рынке""/", П010010004_ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделокОР);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235005", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные со сдачей имущества в аренду (субаренду)""/", П010010004_СдачаИмуществаВАренду);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235005", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные со сдачей имущества в аренду (субаренду)""/ в корреспонденции со счетом 68.02", -П04_НДС_СдачаИмуществаВАренду);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235005", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Отчисления в оценочные резервы""/", П010010004_ОтчисленияВОценочныеРезервы);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235005", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Разница между первоначальной и номинальной стоимостью по долговым ценным бумагам""/", П010010004_РазницаСтоимостиЦенныхБумаг);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235005", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Расходы на услуги банков""/", П010010004_РасходыНаУслугиБанков);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235005", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Прочие операционные доходы (расходы)""/", П010010004_ПрочиеОперационныеДоходыРасходы);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235005", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Прочие операционные доходы (расходы)""/ в корреспонденции со счетом 68.02", -П04_НДС_ПрочиеОперационныеДоходыРасходы);

		// бывшая строка 130 "Внереализационные расходы"
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235005", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Штрафы, пени и неустойки к получению (уплате)""/", П010010004_ШтрафыПениНеустойкиКПолучениюУплате);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235005", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Штрафы, пени и неустойки к получению (уплате)""/ в корреспонденции со счетом 68.02", -П04_НДС_ШтрафыПениНеустойкиКПолучениюУплате);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235005", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Прибыль (убыток) прошлых лет""/", П010010004_ПрибыльУбытокПрошлыхЛет);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235005", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Прибыль (убыток) прошлых лет""/ в корреспонденции со счетом 68.02", -П04_НДС_ПрибыльУбытокПрошлыхЛет);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235005", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Возмещение убытков к получению (уплате)""/", П010010004_ВозмещениеУбытковКПолучениюУплате);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235005", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Курсовые разницы""/", П010010004_КурсовыеРазницы);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235005", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Курсовые разницы по расчетам в у.е.""/", П010010004_КурсовыеРазницыПоРасчетамВУЕ);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235005", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Налоги и сборы""/", П010010004_НалогиИСборы);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235005", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Премия, выплаченная покупателю""/", П010010004_ПремияПокупателю);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235005", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Списание дебиторской (кредиторской) задолженности""/", П010010004_СписаниеДебиторскойКредиторскойЗадолженности);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235005", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""НДС по списанной кредиторской задолженности""/", П010010004_НДСПоСписаннойКредиторскойЗадолженности);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235005", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Доходы (расходы), связанные с безвозмездным получением имущества, работ, услуг или имущественных прав""/", П010010004_БезвозмездноеПолучениеИмущества);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235005", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Расходы по передаче товаров (работ, услуг) безвозмездно и для собственных нужд""/", П010010004_РасходыПоПередачеТоваровБезвозмездноИДляСобственныхНужд);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235005", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Прочие внереализационные доходы (расходы)""/", П010010004_ПрочиеВнереализационныеДоходыРасходы);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235005", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Прочие внереализационные доходы (расходы)""/ в корреспонденции со счетом 68.02", -П04_НДС_ПрочиеВнереализационныеДоходыРасходы);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235005", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Расходы от снижения стоимости активов""/", П010010004_РасходыОтСниженияСтоимостиАктивов);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235005", "", "+", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Прочие косвенные расходы""/", П010010004_ПрочиеКосвенныеРасходы);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235005", "", "-", "Оборот по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Прочие косвенные расходы""/ в корреспонденции со счетом 68.02", -П04_НДС_ПрочиеКосвенныеРасходы);

		// Чрезвычайные расходы
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100235005", "", "+", "!ДО", П010010004_ЧрезвычайныеДоходыРасходы, Счет99_1,,,,,,,, Перечисления.ПрибылиИУбытки.ЧрезвычайныеДоходыРасходы);

		// строка 2410 "Текущий налог на прибыль"
		ИтогиРС = "ОборотДт, ОборотКт, КорОборотДт, КорОборотКт";
		мБухИтогиРС.РассчитатьИтоги("Хозрасчетный", ИтогиРС, "Сумма", "Счет, КорСчет", мДатаНачалаПериодаПрошлогоГода, мДатаКонцаПериодаПрошлогоГода, , "68.04", , , , "Организация", мОргРасшифровка);

		П010015004_68_4_2__68_4_1 = ОБ(Счет68_04_2, Счет68_04_1);
		П010015004_68_4_1__68_4_2 = ОБ(Счет68_04_1, Счет68_04_2);

		мБухИтогиРС.РассчитатьИтоги("Хозрасчетный", ИтогиРС, "Сумма", "Счет, КорСчет, КорСубконто1", мДатаНачалаПериодаПрошлогоГода, мДатаКонцаПериодаПрошлогоГода, , "99", , "68.04.1", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет, "Организация", мОргРасшифровка);

		П010015004_99_1_1__68_4_1 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотДт", "Счет, КорСчет, КорСубконто1" , Счет99_1_1, Счет68_04_1, Перечисления.ВидыПлатежейВГосБюджет.Налог);

		П010015004_99_2__68_4_1 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотДт", "Счет, КорСчет", Счет99_2, Счет68_04_1);
		П010015004_68_4_1__99_2 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотКт", "Счет, КорСчет", Счет99_2, Счет68_04_1);

		П010015004 = П010015004_68_4_2__68_4_1 - П010015004_68_4_1__68_4_2 
		           + П010015004_99_1_1__68_4_1;

		УстановитьЗначениеПоказателя("П000100241005", -П010015004);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100241005", "Строка 2410 ""Текущий налог на прибыль"", графа """ + ЗаголовокДатаОтчетногоПериодаПрошлогоГода + """", "+", "!ОБ", П010015004_68_4_2__68_4_1, Счет68_04_2, Счет68_04_1, 1, , "ФормаОтчета");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100241005", "", "-", "!ОБ", -П010015004_68_4_1__68_4_2, Счет68_04_1, Счет68_04_2);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100241005", "", "+", "Оборот с кредита счета 68.04.1 /субконто ""Налог (взносы): начислено / уплачено""/ в дебет счета 99.01.1",  П010015003_99_1_1__68_4_1, Счет99_1_1, Счет68_04_1);

		// строка 2421 "в т.ч. постоянные налоговые обязательства (активы)"
		мБухИтогиРС.РассчитатьИтоги("Хозрасчетный", ИтогиРС, "Сумма", "Счет, КорСчет", мДатаНачалаПериодаПрошлогоГода, мДатаКонцаПериодаПрошлогоГода, , "99.02.3", , "68.04", , "Организация", мОргРасшифровка);

		П010020004_99_2_3__68_4 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотДт", "Счет, КорСчет", Счет99_2_3, Счет68_04);
		П010020004_68_4__99_2_3 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотКт", "Счет, КорСчет", Счет99_2_3, Счет68_04);

		П010020004 = П010020004_99_2_3__68_4 - П010020004_68_4__99_2_3;
		УстановитьЗначениеПоказателя("П000100242105", -П010020004);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100242105", "Строка 2421 ""в т. ч. постоянные налоговые обязательства (активы)"", графа """ + ЗаголовокДатаОтчетногоПериодаПрошлогоГода + """", "+", "!ОБ", П010020004_99_2_3__68_4, Счет99_2_3, Счет68_04, 1, , "ФормаОтчета");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100242105", "", "-", "!ОБ", -П010020004_68_4__99_2_3, Счет68_04, Счет99_2_3);

		// строка 2430 "Изменение отложенных налоговых обязательств" 
		// В форме №2 необходимо учесть возможную переоценку отложенных налоговых
		// активов и отложенных налоговых обязательств, проведенную в связи с
		// изменением ставки налога на прибыль. Проводки, отражающие результаты
		// переоценки, не должны влиять на финансовые результаты отчетного периода.
		// Для учета результатов переоценки корректируем обороты счета 77 на обороты
		// - в корреспонденции со счетами 84.01 и 84.02 - для совместимости с предыдущими годами
		// - в корреспонденции со счетоми 99 (99.02.4) - для учета периодов 2011 г и позже.

		мБухИтогиРС.РассчитатьИтоги("Хозрасчетный", ИтогиРС, "Сумма", "Счет, КорСчет", мДатаНачалаПериодаПрошлогоГода, мДатаКонцаПериодаПрошлогоГода, , "77", , , , "Организация", мОргРасшифровка);

		ОБ_77__84_01 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотДт", "Счет, КорСчет", Счет77, Счет84_01);
		ОБ_84_02__77 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотКт", "Счет, КорСчет", Счет77, Счет84_02);

		ОБ_77__99_2_4 = 0;
		ОБ_99_2_4__77 = 0;

		Если Есть99_2_4 Тогда

			ОБ_77__99_2_4 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотДт", "Счет, КорСчет", Счет77, Счет99_2_4);
			ОБ_99_2_4__77 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотКт", "Счет, КорСчет", Счет77, Счет99_2_4);

		КонецЕсли;

		ОБ77__68_4_2 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотДт", "Счет, КорСчет", Счет77, Счет68_04_2);
		ОБ68_4_2__77 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотКт", "Счет, КорСчет", Счет77, Счет68_04_2);

		П010014204 = ОБ68_4_2__77 - ОБ77__68_4_2 - ОБ_84_02__77 + ОБ_77__84_01 - ОБ_99_2_4__77 + ОБ_77__99_2_4;

		УстановитьЗначениеПоказателя("П000100243005", -П010014204);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100243005", "Строка 2430 ""Изменение отложенных налоговых обязательств"", графа """ + ЗаголовокДатаОтчетногоПериодаПрошлогоГода + """", "+", "!КО", ОБ68_4_2__77, Счет77, Счет68_04_2, 1, , "ФормаОтчета");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100243005", "", "-", "!ДО", -ОБ77__68_4_2, Счет77, Счет68_04_2);

		Если ((ОБ_84_02__77 <> 0) ИЛИ (ОБ_77__84_01 <> 0)) Тогда

			// Корректировку оборотов  счета 77 в расшифровку добавляем только тогда, 
			// когда такая корректировка существует
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100243005", "", "-", "!ОБ", -ОБ_84_02__77, Счет84_02, Счет77);
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100243005", "", "+", "!ОБ",  ОБ_77__84_01, Счет77, Счет84_01);

		КонецЕсли;

		Если ((ОБ_77__99_2_4 <> 0) ИЛИ (ОБ_99_2_4__77 <> 0)) Тогда

			// Корректировку оборотов  счета 77 в расшифровку добавляем только тогда, 
			// когда такая корректировка существует
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100243005", "", "-", "!ОБ", -ОБ_99_2_4__77, Счет99_2_4,     Счет77);
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100243005", "", "+", "!ОБ",  ОБ_77__99_2_4,     Счет77, Счет99_2_4);

		КонецЕсли;

		// строка 2450 "Изменение отложенных налоговых активов"
		// В форме №2 необходимо учесть возможную переоценку отложенных налоговых
		// активов и отложенных налоговых обязательств, проведенную в связи с
		// изменением ставки налога на прибыль. Проводки, отражающие результаты
		// переоценки, не должны влиять на финансовые результаты отчетного периода.
		// Для учета результатов переоценки корректируем обороты счета 09 на обороты: 
		// - в корреспонденции со счетами 84.01 и 84.02 - для совместимости с предыдущими годами
		// - в корреспонденции со счетоми 99 (99.02.4) - для учета периодов 2011 г и позже.

		мБухИтогиРС.РассчитатьИтоги("Хозрасчетный", ИтогиРС, "Сумма", "Счет, КорСчет", мДатаНачалаПериодаПрошлогоГода, мДатаКонцаПериодаПрошлогоГода, , "09", , , , "Организация", мОргРасшифровка);

		ОБ_09__84_01 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотДт", "Счет, КорСчет", Счет09, Счет84_01);
		ОБ_84_02__09 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотКт", "Счет, КорСчет", Счет09, Счет84_02);

		ОБ_09__99_2_4 = 0;
		ОБ_99_2_4__09 = 0;

		Если Есть99_2_4 Тогда
			ОБ_09__99_2_4 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотДт", "Счет, КорСчет", Счет09, Счет99_2_4);
			ОБ_99_2_4__09 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотКт", "Счет, КорСчет", Счет09, Счет99_2_4);
		КонецЕсли;

		ОБ_09__68_4_2 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотДт", "Счет, КорСчет", Счет09, Счет68_04_2);
		ОБ_68_4_2__09 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотКт", "Счет, КорСчет", Счет09, Счет68_04_2);

		П010014104 = ОБ_09__68_4_2 - ОБ_68_4_2__09 - ОБ_09__84_01 + ОБ_84_02__09 - ОБ_09__99_2_4 + ОБ_99_2_4__09;

		УстановитьЗначениеПоказателя("П000100245005", П010014104);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100245005", "Строка 2450 ""Изменение отложенных налоговых активов"", графа """ + ЗаголовокДатаОтчетногоПериодаПрошлогоГода + """", "+", "!ОБ", ОБ_09__68_4_2, Счет09, Счет68_04_2, 1, , "ФормаОтчета");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100245005", "", "-", "!ОБ", -ОБ_68_4_2__09, Счет68_04_2, Счет09, 1, , "ФормаОтчета");

		Если ((ОБ_09__84_01 <> 0) ИЛИ (ОБ_84_02__09 <> 0)) Тогда

			// Корректировку оборотов счета 09 в расшифровку добавляем только тогда, 
			// когда такая корректировка существует
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100245005", "", "-", "!ОБ", -ОБ_09__84_01, Счет09, Счет84_01, 1, , "ФормаОтчета");
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100245005", "", "+", "!ОБ",  ОБ_84_02__09, Счет84_02, Счет09, 1, , "ФормаОтчета");

		КонецЕсли;

		Если ((ОБ_09__99_2_4 <> 0) ИЛИ (ОБ_99_2_4__09 <> 0)) Тогда

			// Корректировку оборотов счета 09 в расшифровку добавляем только тогда, 
			// когда такая корректировка существует
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100245005", "", "-", "!ОБ", -ОБ_09__99_2_4, Счет09, Счет99_2_4, 1, , "ФормаОтчета");
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100245005", "", "+", "!ОБ",  ОБ_99_2_4__09, Счет99_2_4, Счет09, 1, , "ФормаОтчета");

		КонецЕсли;

		// строка 2460 "Прочее"

		// Если ПБУ 18 не применяется, должна выводится строка "Налог на прибыль 
		// и иные аналогичные обязательные платежи", как в "старой" форме №2
		мБухИтогиРС.РассчитатьИтоги("Хозрасчетный", ИтогиРС, "Сумма", "Счет, Субконто1, КорСчет", мДатаНачалаПериодаПрошлогоГода, мДатаКонцаПериодаПрошлогоГода, , "99", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрибылиИУбытки, , , "Организация", мОргРасшифровка);

		П010018004_99_1_НалогНаПрибыль   = мБухИтогиРС.ПолучитьИтог("СуммаОборотДт", "Счет, Субконто1", Счет99_1, Перечисления.ПрибылиИУбытки.НалогНаПрибыль);
		П010018004_99_1_НалоговыеСанкции = мБухИтогиРС.ПолучитьИтог("СуммаОборотДт", "Счет, Субконто1", Счет99_1, Перечисления.ПрибылиИУбытки.НалоговыеСанкции);

		П010018004_99_2_4_Д = 0;
		П010018004_99_2_4_К = 0;

		Если Есть99_2_4 Тогда
			П010018004_99_2_4_Д = ОБ_99_2_4__09;
			П010018004_99_2_4_К = ОБ_77__99_2_4;
		КонецЕсли;

		П010018004_99_9_Д = 0;
		П010018004_99_9_К = 0;

		Если Есть99_9 Тогда
			П010018004_99_9_Д = ДО(Счет99_9);
			П010018004_99_9_К = КО(Счет99_9);
		КонецЕсли;

		ОрганизацияПримененяетЕНВД = НалоговыйУчет.ПрименениеЕНВД(мОргРасшифровка, мДатаКонцаПериодаПрошлогоГода);
		Если ОрганизацияПримененяетЕНВД Тогда
			ИтогиРС = "ОборотДт, ОборотКт, КорОборотДт, КорОборотКт";
			мБухИтогиРС.РассчитатьИтоги("Хозрасчетный", ИтогиРС, "Сумма", "Счет, КорСчет", мДатаНачалаПериодаПрошлогоГода, мДатаКонцаПериодаПрошлогоГода, , Счет99_01_2, , , , "Организация", мОргРасшифровка);
			ОБ_99_01_2__09 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотДт", "Счет, КорСчет", Счет99_01_2, Счет09);
			ОБ_77__99_01_2 = мБухИтогиРС.ПолучитьИтог("СуммаКорОборотКт", "Счет, КорСчет", Счет99_01_2, Счет77);
		КонецЕсли;	
		
		П010018004 = П010018004_99_1_НалогНаПрибыль
		           - П010015004_99_1_1__68_4_1 // сумма текущего налога на прибыль из строки 2410
		           + П010018004_99_1_НалоговыеСанкции
		           + П010018004_99_2_4_Д - П010018004_99_2_4_К
		           + П010018004_99_9_Д - П010018004_99_9_К;

		Если ОрганизацияПримененяетЕНВД Тогда
			П010018004 = П010018004 + ОБ_99_01_2__09 - ОБ_77__99_01_2;
		КонецЕсли;
			   
		УстановитьЗначениеПоказателя("П000100246005", -П010018004);

		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100246005", "Строка 2460 ""Прочее"", графа """ + ЗаголовокДатаОтчетногоПериодаПрошлогоГода + """", "+", "Оборот по дебету счета 99.1 /субконто ""Налог на прибыль и аналогичные платежи""/", П010018004_99_1_НалогНаПрибыль, Счет99_1, ,1, , "ФормаОтчета");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100246005", "", "-", "Оборот с кредита счета 68.04.1 /субконто ""Налог (взносы): начислено / уплачено""/ в дебет счета 99.01.1", -П010015004_99_1_1__68_4_1, Счет99_1_1, Счет68_04_1);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100246005", "", "+", "Оборот по дебету счета 99.1 /субконто ""Причитающиеся налоговые санкции""/", П010018004_99_1_НалоговыеСанкции, Счет99_1, ,1, , "ФормаОтчета");

		Если Есть99_2_4 Тогда
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100246005", "", "+", "!ДО",  П010018004_99_2_4_Д, Счет99_2_4, Счет09, , , "ФормаОтчета");
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100246005", "", "-", "!КО", -П010018004_99_2_4_К, Счет99_2_4, Счет77, , , "ФормаОтчета");
		КонецЕсли;

		Если Есть99_9 Тогда
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100246005", "", "+", "!ДО",  П010018004_99_9_Д, Счет99_9, , , , "ФормаОтчета");
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100246005", "", "-", "!КО", -П010018004_99_9_К, Счет99_9, , , , "ФормаОтчета");
		КонецЕсли;

		Если ОрганизацияПримененяетЕНВД Тогда
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100246005", "", "+", "!ДО",  ОБ_99_01_2__09, Счет99_01_2, Счет09, , , "ФормаОтчета");
			РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100246005", "", "-", "!КО", -ОБ_77__99_01_2, Счет99_01_2, Счет77, , , "ФормаОтчета");
		КонецЕсли;
		
		// строка 2510 "Результат от переоценки внеоборотных активов, не включаемый в чистую прибыль убыток) периода"
		// (так как этой строки раньше не было, имена переменных включают номер "правильной" колонки)
		П0100251005_83_01     = КО(Счет83_01);
		П0100251005_01__83_01 = ОБ(Счет01, Счет83_01);
		П0100251005_04__83_01 = ОБ(Счет04, Счет83_01);

		П0100251005 = П0100251005_83_01 - П0100251005_01__83_01 - П0100251005_04__83_01;
		
		УстановитьЗначениеПоказателя("П000100251005", П0100251005);
		
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100251005", "Строка 2510 ""Результат от переоценки внеоборотных активов, не включаемый в чистую прибыль убыток) периода"", графа """ + ЗаголовокДатаОтчетногоПериодаПрошлогоГода + """", "+", "Оборот по кредиту счета 83.01", П0100251005_83_01, Счет83_01, , 1, , "ФормаОтчета");
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100251005", "", "-", "Оборот с кредита счета 83.01 в дебет счета 01", -П0100251005_01__83_01, Счет01, Счет83_01);
		РегламентированнаяОтчетность._ДобавитьСтрокуРасшифровки(ЭтаФорма, "П000100251005", "", "-", "Оборот с кредита счета 83.01 в дебет счета 04", -П0100251005_04__83_01, Счет04, Счет83_01);
		
	КонецЕсли;
	
	Если НЕ мБезКонсолидации Тогда
		// Если обрабатывается последняя организация из списка, тогда, выводим данные на лист, если таблица общая не пустая.
		Если (СписокОрганизаций.Индекс(Орг) + 1 = СписокОрганизаций.Количество()) И (ТаблДанныхДопСтрокОбщ.Количество() > 0) Тогда
			// Создаем и заполняем дополнительные строки.
			// Сгруппируем данные в таблице.
			ТаблДанныхДопСтрокОбщ.Свернуть("Наименование", "НачОстаток, КонОстаток");
			//АвтозаполнениеДопСтрок(ТаблДанныхДопСтрокОбщ, мИдГруппы1);
		КонецЕсли;
	КонецЕсли;
	
КонецЦикла; // Для каждого Орг Из СписокОрганизаций Цикл

	// В случае, если отчет был консолидирован, то сложим все его показатели в таблице, а затем выведем их на лист.
	Если НЕ мБезКонсолидации Тогда
		мТаблицаИтоговыхПоказателейПриКонсолидации.Свернуть("ИмяПоказателя", "Сумма");
		Для каждого Пок Из мТаблицаИтоговыхПоказателейПриКонсолидации Цикл
			УстановитьЗначениеПоказателя(Пок.ИмяПоказателя, Пок.Сумма, Истина);
		КонецЦикла;
	КонецЕсли;

	Расчет();
	Модифицированность = Истина;

	РегламентированнаяОтчетность.ОтключитьОбработчикАвтосохранения(ЭтаФорма);
	РегламентированнаяОтчетность.ВключитьОбработчикАвтосохранения(ЭтаФорма);

КонецПроцедуры // ЗаполнитьАвто()

// Формирует дерево значений - структуру страниц отчета,
// содержащей настройки показа страниц, вывода на печать и выгрузки в ИФНС.
//
Процедура ФормироватьСтруктуруСтраницОтчета() Экспорт

	МассивТипов = Новый Массив; 
	МассивТипов.Добавить(Тип("Строка"));
	ОписаниеТиповСтрока100 = Новый ОписаниеТипов(МассивТипов, , Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная));

	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("Число"));
	ОписаниеТиповЧисло1    = Новый ОписаниеТипов(МассивТипов, Новый КвалификаторыЧисла(1));

	// Дерево содержит коллекцию страниц отчета.
	// В колонках дерева хранятся следующие данные:
	//    - представление листа;
	//    - имя страницы основной панели формы, содержащей выводимый на печать лист;
	//    - имя поля табличного документа;
	//    - имя области ячеек табличного документа (используется в случае вывода
	//      на печать отдельных страниц титульного листа);
	//    - ориентация страницы при печати;
	//    - число, метка вывода страницы на печать;
	//    - число, метка показа страницы на основной панели формы;
	//    - число, метка выгрузки данных страницы в ИФНС.
	//
	мДеревоСтраницОтчета               = Новый ДеревоЗначений;
	мДеревоСтраницОтчета.Колонки.Добавить("Представление",            ОписаниеТиповСтрока100);
	мДеревоСтраницОтчета.Колонки.Добавить("ИмяСтраницы",              ОписаниеТиповСтрока100);
	мДеревоСтраницОтчета.Колонки.Добавить("ИмяПоляТабличногоДокум",   ОписаниеТиповСтрока100);
	мДеревоСтраницОтчета.Колонки.Добавить("ИмяОбластиТабличногоПоля", ОписаниеТиповСтрока100);
	мДеревоСтраницОтчета.Колонки.Добавить("ОриентацияСтраницы");
	мДеревоСтраницОтчета.Колонки.Добавить("ВыводНаПечать",            ОписаниеТиповЧисло1);
	мДеревоСтраницОтчета.Колонки.Добавить("ПоказатьСтраницу",         ОписаниеТиповЧисло1);
	мДеревоСтраницОтчета.Колонки.Добавить("ВыгрузитьСтраницу",        ОписаниеТиповЧисло1);

	мДеревоСтраницОтчета.Строки.Очистить();

    ///***
	СтрокаУровня1 = мДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы              = "Баланс";
	СтрокаУровня1.Представление            = "Баланс";
	СтрокаУровня1.ИмяПоляТабличногоДокум   = "ПолеТабличногоДокументаБаланс";
	СтрокаУровня1.ОриентацияСтраницы       = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать            = 1;
	СтрокаУровня1.ПоказатьСтраницу         = 1;
	СтрокаУровня1.ВыгрузитьСтраницу        = 2;
	
	///***
	СтрокаУровня1 = мДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы              = "ФормаОтчета";
	СтрокаУровня1.Представление            = "Отчет о прибылях и убытках";
	СтрокаУровня1.ИмяПоляТабличногоДокум   = "ПолеТабличногоДокументаФормаОтчета";
	СтрокаУровня1.ОриентацияСтраницы       = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать            = 1;
	СтрокаУровня1.ПоказатьСтраницу         = 1;
	СтрокаУровня1.ВыгрузитьСтраницу        = 2;
	
КонецПроцедуры // ФормироватьСтруктуруСтраницОтчета()

// Выполняет начальные настройки параметров отчета.
// По данным макета "СоствПоказателей" формирует:
//   - состав показателей отчета;
//   - варианты заполнения показателей отчета;
//   - дерево выводимых на печать листов отчета.
//
Процедура ЗаполнитьНачальныеНастройки() Экспорт

	ФормироватьСтруктуруСтраницОтчета();

	МакетСоставаПоказателей = ЭтотОбъект.ПолучитьМакет(ИмяМакетаССоставомПоказателей);

	ОписаниеТиповСтрока15  = ОбщегоНазначения.ПолучитьОписаниеТиповСтроки(15);

	ОписаниеТиповСтрока100 = ОбщегоНазначения.ПолучитьОписаниеТиповСтроки(100);

	ОписаниеТиповЧисло1    = ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(1);

	ОписаниеТиповЧисло15   = ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15,2);
	
	ОписаниеТиповСтрока50  = ОбщегоНазначения.ПолучитьОписаниеТиповСтроки(50);

	Для Инд = 0 По МакетСоставаПоказателей.Области.Количество() - 1 Цикл

		ТекОбласть    = МакетСоставаПоказателей.Области[Инд];
		ИмяСтраницы   = ТекОбласть.Имя;

		// Таблица значений содержит информацию о вариантах заполнения показателя отчета.
		// В колонках таблицы значений отображается следующая информация:
		//   - имя ячейки (код показателя);
		//   - вариант заполнения ячейки;
		//   - вычисленное по данным ИБ значение ячейки;
		//   - величина автокорректировки значения ячейки;
		//   - примечание к ячейке.
		//
		ТаблицаВариантыЗаполнения = Новый ТаблицаЗначений;
		ТаблицаВариантыЗаполнения.Колонки.Добавить( "КодПоказателя",     ОписаниеТиповСтрока15  );
		ТаблицаВариантыЗаполнения.Колонки.Добавить( "ВариантЗаполнения", ОписаниеТиповЧисло1    );
		ТаблицаВариантыЗаполнения.Колонки.Добавить( "ЗначениеАвто",      ОписаниеТиповЧисло15   );
		ТаблицаВариантыЗаполнения.Колонки.Добавить( "Дельта",            ОписаниеТиповЧисло15   );
		ТаблицаВариантыЗаполнения.Колонки.Добавить( "Комментарий",       ОписаниеТиповСтрока100 );
		ТаблицаВариантыЗаполнения.Колонки.Добавить( "КодПоказателяПоСтруктуре",       ОписаниеТиповСтрока50 );

		Для Ном = ТекОбласть.Верх По ТекОбласть.Низ Цикл
			// перебираем строки макета

			// Код показателя (по составу показателей) определяется по первой колонке макета
			КодПоказателя = СокрП(МакетСоставаПоказателей.Область(Ном, 1).Текст);
			ИмяПоказателя = КодПоказателя;

			Если КодПоказателя = "===" Тогда         // признак конечной строки
				Прервать;
			КонецЕсли;

			Если Лев(КодПоказателя, 2) = "//" Тогда  // пропускаем комментарии
				Продолжить;
			КонецЕсли;

			// код показателя по форме отчете (имя ячейки в полях табличного документа формы)
			КодПоказателяПоФорме = СокрЛП(МакетСоставаПоказателей.Область(Ном, 2).Текст);
			// признак многострочности определяется по третьей колонке макета
			ПризнМногострочность = СокрЛП(МакетСоставаПоказателей.Область(Ном, 3).Текст);
			// по четвертой колонке определяется тип данных реквизита
			ТипДанныхРеквизита   = СокрЛП(МакетСоставаПоказателей.Область(Ном, 4).Текст);
			// по колонке 5 определяется исходное количество строк многострочного раздела
			стрКолСтрокИсходный  = СокрЛП(МакетСоставаПоказателей.Область(Ном, 5).Текст);
			// вариант заполнения ячейки определяется по колонке 6 макета
			стрВариантЗаполнения = РегламентированнаяОтчетность.ПолучитьВариантЗаполненияПоказателяРегОтчета(МакетСоставаПоказателей, Ном);

			чКолСтрокИсходный    = ? (ПустаяСтрока(стрКолСтрокИсходный),  0, Число(стрКолСтрокИсходный));
			чВариантЗаполнения   = ? (ПустаяСтрока(стрВариантЗаполнения), 0, Число(стрВариантЗаполнения));

			// формируем таблицу значений, содержащей состав показателей отчета
			НоваяСтрока = мТаблицаСоставПоказателей.Добавить();
			НоваяСтрока.ИмяПоляТаблДокумента   = ИмяСтраницы;
			НоваяСтрока.КодПоказателяПоСоставу = КодПоказателя;
			НоваяСтрока.КодПоказателяПоФорме   = КодПоказателяПоФорме;
			НоваяСтрока.ПризнМногострочности   = ПризнМногострочность;
			НоваяСтрока.ТипДанныхПоказателя    = ТипДанныхРеквизита;

			Если чВариантЗаполнения <> 0 Тогда
				// Если в колонке 6 задан варианет заполнения показателя, 
				// то его значение может определяться по данным ИБ.
				// Дополняем таблицу значений вариантов заполнения
				НоваяСтрока = ТаблицаВариантыЗаполнения.Добавить();
				НоваяСтрока.КодПоказателя      = ? (Не ПустаяСтрока(КодПоказателяПоФорме), КодПоказателяПоФорме, КодПоказателя);
				НоваяСтрока.ВариантЗаполнения  = чВариантЗаполнения;
			КонецЕсли;

		КонецЦикла;

		Если ТаблицаВариантыЗаполнения.Количество() > 0 Тогда
			// имеются автоматически заполняемые ячейки

			// Для обеспечения возможности назначения разных вариантов заполнения одного и того же показателя
			// на разных страницах, создаем массив, хранящий информацию о вариантах заполнения ячеек по каждой
			// странице многостраничного раздела.
			МассивВариантовЗаполненияСтраниц = Новый Массив;
			МассивВариантовЗаполненияСтраниц.Добавить(ТаблицаВариантыЗаполнения);

			// Создаем структуру, содержащей варианты заполнения показателей отчета.
			//
			// В качестве ключа используется имя страницы основной панели формы, содержащей
			//   табличный документ с автоматически заполняемыми показателями.
			// В качестве значения принимаем Массив из таблицы значений - вариантов заполнения
			//   показателей по каждой странице многостраничного раздела.
			//
			мСтруктураВариантыЗаполнения.Вставить(ИмяСтраницы, МассивВариантовЗаполненияСтраниц);
		Конецесли;

	КонецЦикла;

КонецПроцедуры // ЗаполнитьНачальныеНастройки()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ УПРАВЛЕНИЯ ВНЕШНИМ ВИДОМ ФОРМЫ

// Процедура ПоказатьКодЕИ
// Отображает единицу измерения
//
Процедура ПоказатьКодЕИ()

	Если ЕдиницаИзмерения = Перечисления.ПорядкиОкругленияОтчетности.Окр1 Тогда
		мБаланс.Области.КодЕИ.Значение = "383";
		мБаланс.Области.НазвЕИ.Значение = "в рублях";
		мФормаОтчета.Области.КодЕИ.Значение = "383";
		мФормаОтчета.Области.НазвЕИ.Значение = "в рублях";
	ИначеЕсли ЕдиницаИзмерения = Перечисления.ПорядкиОкругленияОтчетности.Окр1000 Тогда
		мБаланс.Области.КодЕИ.Значение = "384";
		мБаланс.Области.НазвЕИ.Значение = "в тыс. рублей";
		мФормаОтчета.Области.КодЕИ.Значение = "384";
		мФормаОтчета.Области.НазвЕИ.Значение = "в тыс. рублей";
	ИначеЕсли ЕдиницаИзмерения = Перечисления.ПорядкиОкругленияОтчетности.Окр1000000 Тогда
		мБаланс.Области.КодЕИ.Значение = "385";
		мБаланс.Области.НазвЕИ.Значение = "в млн. рублей";
		мФормаОтчета.Области.КодЕИ.Значение = "385";
		мФормаОтчета.Области.НазвЕИ.Значение = "в млн. рублей";
	КонецЕсли;

КонецПроцедуры // ПоказатьКодЕИ

Процедура Инициализация(БезОткрытияФормы = Ложь) Экспорт
	Перем ИсходноеКоличествоСтрокГруппы;

	мБезОткрытияФормы = БезОткрытияФормы;
	
	мБаланс = ЭлементыФормы.ПолеТабличногоДокументаБаланс;
	мФормаОтчета = ЭлементыФормы.ПолеТабличногоДокументаФормаОтчета;

	ФормироватьСтруктуруСвойствСтраниц();
	
	// выполняем начальные настройки
	ЗаполнитьНачальныеНастройки();

	мВПрограммеИзмененаОрганизация = Ложь;

	ВидДокумента = 0;
	ЭлементыФормы.НомерКорректировки.Доступность = (ВидДокумента = 1);
	НомерКорректировки = 1;

	мРежимПечати = Ложь;
	
	Если мСохраненныйДок = Неопределено Тогда

		Если мСкопированаФорма <> Неопределено Тогда
			// документ скопирован
			ВосстановитьСохраненныеДанные();
		Иначе
			// Это новый документ.
			// Установим реквизиты формы по умолчанию
			ЕдиницаИзмерения         = Перечисления.ПорядкиОкругленияОтчетности.Окр1000;
			ТочностьЕдиницыИзмерения = 0;
			
			мДеревоВыбранныхСтраниц = мДеревоСтраницОтчета.Скопировать();
			
			мСохранятьРасшифровку = Истина;
			ЭлементыФормы.КоманднаяПанельФормы.Кнопки.ПодменюНастройка.Кнопки.ПодменюРасшифровка.Кнопки.КнопкаСохранятьРасшифровку.Пометка = Истина;

			УстановитьФорматВывода();

			// При создании нового всегда по умолчанию подставляем почтовый адрес организации.
			// Перевыбрать адрес можно на форме отчета.
			мТипАдреса = "ПолныйАдрПочт";

		КонецЕсли;
		
	Иначе
		// При открытии или при копировании сохраненного
		// отчета восстанавливаем сохраненные данные.
		ВосстановитьСохраненныеДанные();

	КонецЕсли;

	ПоказатьПериод();
	мБаланс.Области.ДатаПодписиОтчета.Значение = ДатаПодписи;
	мФормаОтчета.Области.ДатаПодписиОтчета.Значение = ДатаПодписи;

	Если мСохраненныйДок = Неопределено Или мВПрограммеИзмененаОрганизация Тогда
		ЗаполнитьСведенияОбОрганизации();
	КонецЕсли;

	// устанавливаем раскраску ячеек, участвующих в автозаполнении
	Для Каждого Страница Из ЭлементыФормы.ОсновнаяПанель.Страницы Цикл
		УстановитьЦветФонаЯчейки(,, Страница.Имя);
	КонецЦикла;

	РегламентированнаяОтчетность.роДоступностьКнопокДобавитьУдалить(ЭтаФорма);

	мБезКонсолидации = мГруппаОрганизаций.Количество() = 0;
	НазванияОрганизаций = ПолучитьНазванияОрганизацийСтрокой();
	ЭлементыФормы.Надпись30.Заголовок = НазванияОрганизаций;
	Если НЕ мБезКонсолидации Тогда
		ЭлементыФормы.Надпись30.ГиперСсылка = Истина;
		ЭлементыФормы.Надпись30.Подсказка = "Список организаций, по которым формируется отчет";
		ЭлементыФормы.Надпись.Заголовок = "Организации:";
		Если мСохраненныйДок = Неопределено Тогда
			// При первом открытии отчета, который должен собираться по нескольким организациям
			// в поле Комментарий запишем названия всех организаций.
			КомментарийОбщий = НазванияОрганизаций;
		КонецЕсли;

	КонецЕсли;

	// формируем список элементов подменю, связанное с кнопкой <Печать>
	Если НЕ БезОткрытияФормы Тогда
		ПрорисоватьПодменюПечать();
	КонецЕсли;
	
	РегламентированнаяОтчетность.ПриИнициализацииФормыРегламентированногоОтчета(ЭтаФорма);
	
КонецПроцедуры

Процедура ПрорисоватьПодменюПечать()
	
	Если Месяц(мДатаКонцаПериодаОтчета) % 3 = 0 Тогда
		РегламентированнаяОтчетность.ПрорисоватьПодменюПечать(ЭтаФорма, Новый Действие("КоманднаяПанельДействийДействиеВыбратьПечатнуюФормы"), Новый Действие("КоманднаяПанельДействийПечатьМашиночитаемогоБланка"));
	Иначе
		РегламентированнаяОтчетность.ПрорисоватьПодменюПечать(ЭтаФорма, Новый Действие("КоманднаяПанельДействийДействиеВыбратьПечатнуюФормы"), , Истина);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	РегламентированнаяОтчетность.ПередОткрытиемФормыРегламентированногоОтчета(ЭтаФорма, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	Инициализация();
	
КонецПроцедуры // ПередОткрытием()

// Процедура - обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии()

	РегламентированнаяОтчетность.ВключитьОбработчикАвтосохранения(ЭтаФорма);

	ИДКонфигурации = РегламентированнаяОтчетность.ИДКонфигурации();
	Если ИДКонфигурации = "БП" ИЛИ ИДКонфигурации = "БПКОРП" ИЛИ ИДКонфигурации = "БАУКОРП" ИЛИ ИДКонфигурации = "БАУ" Тогда
		ЭлементыФормы.ФлажокВнешДанные.Видимость = Истина;
	КонецЕсли;

КонецПроцедуры // ПриОткрытии()

// Процедура - обработчик события "ПередЗакрытием" формы.
//
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)

	РегламентированнаяОтчетность.ПередЗакрытиемРегламентированногоОтчета(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры // ПередЗакрытием()

// Процедура - обработчик события "ПриЗакрытии" формы.
//
Процедура ПриЗакрытии()

	Если мСохраненныйДок <> Неопределено Тогда

		Если Не мСохраненныйДок.ЭтоНовый() Тогда
			// Сохраняем выбранные листы для печати в хранилище
			ХранилищеДанных = Новый ХранилищеЗначения(мДеревоСтраницОтчета);
			мСохраненныйДок.ДеревоНастройкиСтраниц = ХранилищеДанных;
			Попытка
				мСохраненныйДок.Записать();
			Исключение
			КонецПопытки;
		КонецЕсли;

	КонецЕсли;

	РегламентированнаяОтчетность.ПриЗакрытииРегламентированногоОтчета(ЭтаФорма);
	
КонецПроцедуры // ПриЗакрытии()


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Процедура вызывается при нажатии кнопки "Заполнить" 
// командной панели формы.
//
Процедура КоманднаяПанельФормыЗаполнить(Кнопка)

	ЗаполнитьАвто();

КонецПроцедуры // КоманднаяПанельФормыЗаполнить

// Процедура вызывается при нажатии кнопки "Очистить".
//
Процедура КоманднаяПанельФормыОчистить(Кнопка)

	Ответ = Вопрос("Внимание! Будут очищены все показатели отчета." + Символы.ПС
		  + "Продолжить операцию?", РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);

	Если Ответ = КодВозвратаДиалога.Нет Тогда

		Возврат;

	Иначе

		Очистить();

	КонецЕсли;

КонецПроцедуры // КоманднаяПанельФормыОчистить()

// Процедура вызывается при выборе пункта подменю "Печать" командной панели
// действий формы. 
// Отрабатывает выбор печатной формы.
//
// Обработчик уставливается динамически методом "Действие"
Процедура КоманднаяПанельДействийДействиеВыбратьПечатнуюФормы(Кнопка)

	Если Кнопка <> Неопределено Тогда
		Печать(Кнопка.Имя);
	КонецЕсли;

КонецПроцедуры // КоманднаяПанельДействийДействиеВыбратьПечатнуюФормы()

// Процедура вызывается нажатием кнопки "ОК" командной панели действий формы.
// Выполняет сохранение данных отчета и закрывает текущую форму.
//
Процедура КоманднаяПанельДействийДействиеСохранитьИЗакрыть(Кнопка)

	Если Сохранить() Тогда
		Закрыть();
	КонецЕсли;

КонецПроцедуры // КоманднаяПанельДействийДействиеСохранитьИЗакрыть()

// Процедура вызывается нажатием кнопки "Записать" командной панели действий формы.
// Выполняет сохранение данных отчета.
//
Процедура КоманднаяПанельДействийДействиеЗаписать(Кнопка)

	Сохранить();

КонецПроцедуры // КоманднаяПанельДействийДействиеЗаписать()

// Процедура - действие кнопки Поиск командной панели КоманднаяПанельФормы.
//
Процедура КоманднаяПанельФормыПоиск(Кнопка)
	
	РегламентированнаяОтчетность.роПоискВРегламентированномОтчете(ЭтаФорма);

КонецПроцедуры

// Процедура вызывается при нажатии кнопки "Настройка страниц"  командной панели
// действий формы.
//
// Вызывает диалог настройки вывода на печать, показа и выгрузки.страниц отчета,
// а также процедуру управления видимостью страниц.
//
Процедура КоманднаяПанельФормыКнопкаНастройкаСтраниц(Кнопка)

	ОткрытьФормуВыбораСтраниц("ВыбратьДляНастройки");

КонецПроцедуры // КоманднаяПанельФормыКнопкаНастройкаСтраниц()

// Открывает форму документа ФормаНастройкиОтчета с целью выбора 
// выводимых на печать листов отчета.
//
// Параметры:
//   ВариантВыбора - строка, назначение выбора страниц.
//
Процедура ОткрытьФормуВыбораСтраниц(ВариантВыбора)

	ФормаНастройкиОтчета = РегламентированнаяОтчетность.роПолучитьОбщуюФорму("НастройкиОтчета", ЭтаФорма);

	мДеревоВыбранныхСтраниц = "";
	ДеревоСтраницОтчета = мДеревоСтраницОтчета.Скопировать();
	ФормаНастройкиОтчета.НачальноеЗначениеВыбора = ДеревоСтраницОтчета;
	ФормаНастройкиОтчета.мПараметры.СчетчикСтраниц = Ложь;
	ФормаНастройкиОтчета.мПараметры.ЗначенияИзСписка = Ложь;
	ФормаНастройкиОтчета.мПараметры.РазрешитьВстроеннуюПечать = (Месяц(мДатаКонцаПериодаОтчета) % 3 = 0);
	РезультатВыбора = ФормаНастройкиОтчета.ОткрытьМодально();
	
	Если РезультатВыбора <> Неопределено Тогда
		мДеревоВыбранныхСтраниц = РезультатВыбора;
		ПрорисоватьПодменюПечать();
		Модифицированность = Истина;
	Иначе
		мДеревоВыбранныхСтраниц = ДеревоСтраницОтчета;
	КонецЕсли;

КонецПроцедуры // ОткрытьФормуВыбораСтраниц()

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ДИАЛОГА

// ПолеВыбораВидДокументаОчистка
// Процедура-обработчик события "Очистка"
//
Процедура ПолеВыбораВидДокументаОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры // ПолеВыбораВидДокументаОчистка

// ПолеВыбораВидДокументаПриИзменении
// Процедура-обработчик события "ПриИзменении"
//
Процедура ПолеВыбораВидДокументаПриИзменении(Элемент)

	РегламентированнаяОтчетность.роПриИзмененииВидаДокументаИКорректировки(ЭтаФорма);

КонецПроцедуры // ПолеВыбораВидДокументаПриИзменении

// КнопкаЗаполнитьСведенияОбОрганизацииНажатие
// Процедура-обработчик "Нажатие". Активизируется при нажатии на кнопку
// ЗаполнитьСведенияОбОрганизации
//
Процедура КнопкаЗаполнитьСведенияОбОрганизацииНажатие(Элемент)

	мВПрограммеИзмененаОрганизация = Истина;
	ЗаполнитьСведенияОбОрганизации();
	мВПрограммеИзмененаОрганизация = Ложь;
	Модифицированность = Истина;

КонецПроцедуры // КнопкаЗаполнитьСведенияОбОрганизацииНажатие

// Процедура - обработчик события "ПриИзменении" поля ввода даты
// представления отчета.
//
Процедура ПолеВводаДатаСдачиПриИзменении(Элемент)

	мБаланс.Области.ДатаПодписиОтчета.Значение = ДатаПодписи;
	мФормаОтчета.Области.ДатаПодписиОтчета.Значение = ДатаПодписи;

	ЗаполнитьСведенияОбОрганизации(Истина);

	Модифицированность = Истина;

КонецПроцедуры // ПолеВводаДатаСдачиПриИзменении()

// Процедура - обработчик события "ПриИзменении" поля ввода точности
// единицы измерения.
//
Процедура ПолеВводаТочностьЕдиницыИзмеренияПриИзменении(Элемент)

	ПроверитьТочность();
	УстановитьФорматВывода();

	// Итоговые поля надо пересчитывать, потому что при расчете они округляются
	// в соответствии с установленной единицей измерения и точностью.
	Расчет();

	Модифицированность = Истина;

КонецПроцедуры // ПолеВводаТочностьЕдиницыИзмеренияПриИзменении()

// Процедура - обработчик события при изменении значения единицы измерения.
//
Процедура ПолеВыбораЕдиницаИзмеренияПриИзменении(Элемент)

	ПроверитьТочность();
	УстановитьФорматВывода();

	// Итоговые поля надо пересчитывать, потому что при расчете они округляются
	// в соответствии с установленной единицей измерения и точностью.
	Расчет();

	Модифицированность = Истина;

КонецПроцедуры // ПолеВыбораЕдиницаИзмеренияПриИзменении()

// Процедура вызывается при активизации поля табличного документа.
//   Определяет текущую область табличного документа и вызывает процедуру 
// управления доступностью кнопок "Добавить" и "Удалить" на странице формы.
//
Процедура ПолеТабличногоДокументаБалансПриАктивизацииОбласти(Элемент)

	РегламентированнаяОтчетность.роПриАктивизацииОбластиРегламентированногоОтчета(ЭтаФорма, Элемент, "Баланс");
	
КонецПроцедуры // ПолеТабличногоДокументаБалансПриАктивизацииОбласти()

Процедура ПолеТабличногоДокументаФормаОтчетаПриАктивизацииОбласти(Элемент)
	
	РегламентированнаяОтчетность.роПриАктивизацииОбластиРегламентированногоОтчета(ЭтаФорма, Элемент, "ФормаОтчета");
	
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля выбора варианта заполнения
// активной ячейка табличного документа.
//
Процедура ПолеВыбораВариантЗаполненияБалансПриИзменении(Элемент)

	ИзменитьВариантЗаполненияЯчейки(Элемент.Значение);

КонецПроцедуры // ПолеВыбораВариантЗаполненияЛист2ПриИзменении()

// Процедура - обработчик события "ПриИзменении" значения в поле ввода
// величины автокорректировки.
//
Процедура ПолеВводаЗначениеКорректировкиБалансПриИзменении(Элемент)

	Дельта = Элемент.Значение;
	ИзменитьЗначениеАвтокорректировки(Дельта);

	Модифицированность = Истина;

КонецПроцедуры // ПолеВводаЗначениеКорректировкиПриИзменении

// Процедура - обработчик события "ПриИзменении" значения в поле ввода
// "Комментарий" по ячейке, для которой установлен алгоритм автозаполнения 
// [автоматически с ручной корректирорвкой].
//
Процедура ПолеВводаКомментарийБалансПриИзменении(Элемент)

	Комментарий = Элемент.Значение;
	ИзменитьКомментарийПоЯчейке(Комментарий);

КонецПроцедуры // ПолеВводаКомментарийПриИзменении()

Процедура ПолеВыбораВариантЗаполненияФормаОтчетаПриИзменении(Элемент)
	ИзменитьВариантЗаполненияЯчейки(Элемент.Значение);
КонецПроцедуры

Процедура ПолеВводаЗначениеКорректировкиФормаОтчетаПриИзменении(Элемент)
	Дельта = Элемент.Значение;
	ИзменитьЗначениеАвтокорректировки(Дельта);

	Модифицированность = Истина;
КонецПроцедуры

Процедура ПолеВводаКомментарийФормаОтчетаПриИзменении(Элемент)
	Комментарий = Элемент.Значение;
	ИзменитьКомментарийПоЯчейке(Комментарий);
КонецПроцедуры

Процедура ПолеТабличногоДокументаБалансПриИзмененииСодержимогоОбласти(Элемент, Область)

	ОбластьИмя = Элемент.ТекущаяОбласть.Имя;

	Если НЕ ((ОбластьИмя = "ОргНазв") Или (ОбластьИмя = "ОргКодОКПО") Или (ОбластьИмя = "ОргОтрасль")
	 Или (ОбластьИмя = "ОргКодОКВЭД") Или (ОбластьИмя = "ОргФорма") Или (ОбластьИмя = "ОргФормаСобств")
	 Или (ОбластьИмя = "ОргКодОКОПФ") Или (ОбластьИмя = "ОргКодОКФС") Или (ОбластьИмя = "ОргПочтАдрес")
	 Или (ОбластьИмя = "ОргДиректор") Или (ОбластьИмя = "ОргБухгалтер")) Тогда
		ОбработчикИзменения();
	Иначе
		Модифицированность = Истина;
	КонецЕсли;

КонецПроцедуры // ПолеТабличногоДокументаБалансПриИзмененииСодержимогоОбласти

Процедура ПолеТабличногоДокументаФормаОтчетаПриИзмененииСодержимогоОбласти(Элемент, Область)
	ОбластьИмя = Элемент.ТекущаяОбласть.Имя;

	Если НЕ ((ОбластьИмя = "ОргНазв") Или (ОбластьИмя = "ОргКодОКПО") Или (ОбластьИмя = "ОргОтрасль")
	 Или (ОбластьИмя = "ОргКодОКВЭД") Или (ОбластьИмя = "ОргФорма") Или (ОбластьИмя = "ОргФормаСобств")
	 Или (ОбластьИмя = "ОргКодОКОПФ") Или (ОбластьИмя = "ОргКодОКФС")
	 Или (ОбластьИмя = "ОргДиректор") Или (ОбластьИмя = "ОргБухгалтер")) Тогда
		ОбработчикИзменения();
	Иначе
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
//	ПРОЦЕДУРЫ И ФУНКЦИИ МЕХАНИЗМА ВЫГРУЗКИ В ЭЛЕКТРОННОМ ВИДЕ  
//                                                             

// Процедура - обработчик события Нажатие кнопки Выгрузить командной панели КоманднаяПанельФормы
// Выгружает регламентированный отчет и записывает его в указанный пользователем каталог
// При этом создается и проводится экземпляр документа "ВыгрузкаРегламентированныхОтчетов"
//
Процедура КоманднаяПанельФормыВыгрузить(Кнопка)
	
	Выгрузить();
	
КонецПроцедуры

Процедура КоманднаяПанельФормыПроверить(Кнопка)
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Сообщить("Организация не выбрана! Выгрузка невозможна.",СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	
	Если Модифицированность И Вопрос("Перед проверкой отчета требуется сохранить введенную информацию." + Символы.ПС + "Продолжить?",РежимДиалогаВопрос.ДаНет)<>КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Если Модифицированность И НЕ Сохранить() Тогда
		Возврат;
	КонецЕсли;
	
	НовыйДок = Документы.ВыгрузкаРегламентированныхОтчетов.СоздатьДокумент();
	СпДокОсн = Новый СписокЗначений;
	СпДокОсн.Добавить(мСохраненныйДок);
 	НовыйДок.ПолучитьФорму(, ЭтаФорма).Проверить(СпДокОсн);
	
КонецПроцедуры

Функция ПроверитьПоказатели() Экспорт
	
	Возврат ПроверитьПоказателиXML();
	
КонецФункции

Функция УниверсальнаяВыгрузка(Текст = Неопределено, ПроверятьБлокировки = Истина) Экспорт
	
	Отказ = Ложь;
	РегламентированнаяОтчетность.ПередВыгрузкойРегламентированногоОтчета(ЭтаФорма, Отказ, ПроверятьБлокировки);
	Если Отказ Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат УниверсальнаяВыгрузкаXML(Текст);
	
КонецФункции

// Процедура активизирует область поля табличного документа формы,
// соответствующей заданному показателю. При необходимости,
// процедура устанавливает в качестве активной ту страницу раздела, на которой
// находится показатель.
//
// Параметры:
//	Ячейка - СтрокаТаблицыЗначений с "координатами" показателя
//
Процедура АктивизироватьЯчейку(Ячейка) Экспорт
	
	РегламентированнаяОтчетность.роАктивизироватьЯчейку(ЭтаФорма, Ячейка);
	
КонецПроцедуры

Процедура КоманднаяПанельФормыРасшифровка(Кнопка)
	Обраб = Обработки.РасшифровкаРегламентированнойОтчетности.Создать();
	Обраб.Форма = ЭтаФорма;
	ТекущийЛист = ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя;
	ТекущееТабличноеПоле = ЭлементыФормы["ПолеТабличногоДокумента" + ТекущийЛист];
	Обраб.ИмяЯчейки = ЭлементыФормы[ТекущееТабличноеПоле.Имя].ТекущаяОбласть.Имя;
	Обраб.ПолучитьФорму(, ЭтаФорма).Показать();
КонецПроцедуры

Процедура КоманднаяПанельФормыСохранять(Кнопка)
	Кнопка.Пометка = НЕ Кнопка.Пометка;
	мСохранятьРасшифровку = Кнопка.Пометка;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МЕХАНИЗМА ВЫГРУЗКИ В ФОРМАТЕ 5 (XML)
//

Процедура Выгрузить() Экспорт
	
	Если Модифицированность Тогда
		Если Вопрос("Перед выгрузкой отчета требуется сохранить введенную информацию." + Символы.ПС + "Продолжить?",РежимДиалогаВопрос.ДаНет) <> КодВозвратаДиалога.Да ИЛИ НЕ Сохранить() Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	НовыйДок = Документы.ВыгрузкаРегламентированныхОтчетов.СоздатьДокумент();
	СпДокОсн = Новый СписокЗначений;
	СпДокОсн.Добавить(мСохраненныйДок);
 	Если НовыйДок.ПолучитьФорму(, ЭтаФорма).СформироватьИЗаписать(СпДокОсн) Тогда
		//Сообщить("Отчет успешно выгружен!", СтатусСообщения.Информация);
	КонецЕсли;
	
КонецПроцедуры

Функция ПроверитьПоказателиXML() Экспорт
	
	СформироватьСтруктуруПоказателей();
	Параметры = СформироватьСтруктуруПараметров();
	
	Если НЕ ПроверитьВозможностьВыгрузки(Параметры) Тогда
		Возврат Ложь;
	КонецЕсли;
	ДеревоВыгрузки = ИзвлечьСтруктуруXML();
	ЗаполнитьДанными(ДеревоВыгрузки, Параметры);
	Если НЕ ПроверитьДанные(ДеревоВыгрузки) Тогда
		Возврат Ложь;
	КонецЕсли;
	Возврат Истина;
	
КонецФункции

Функция УниверсальнаяВыгрузкаXML(ТекстВыгрузки = Неопределено) Экспорт
	
	Если Модифицированность Тогда
		Если Вопрос("Перед выгрузкой отчета требуется сохранить введенную информацию." + Символы.ПС + "Продолжить?",РежимДиалогаВопрос.ДаНет) <> КодВозвратаДиалога.Да ИЛИ НЕ Сохранить() Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если Открыта() Тогда
		Если ЕдиницаИзмерения = Перечисления.ПорядкиОкругленияОтчетности.Окр1 Тогда
			Сообщить("Перед выгрузкой необходимо установить единицу измерения ""в тысячах"" или ""в миллионах"".", СтатусСообщения.Внимание);
			Возврат Ложь;
		КонецЕсли;
		Если ТочностьЕдиницыИзмерения <> 0 Тогда
			Сообщить("Перед выгрузкой необходимо установить точность ""0"".", СтатусСообщения.Внимание);
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	
	СформироватьСтруктуруПоказателей();
	Параметры = СформироватьСтруктуруПараметров();
	
	Если НЕ ПроверитьВозможностьВыгрузки(Параметры) Тогда
		Возврат Ложь;
	КонецЕсли;
	ДеревоВыгрузки = ИзвлечьСтруктуруXML();
	ЗаполнитьДанными(ДеревоВыгрузки, Параметры);
	Если НЕ ПроверитьДанные(ДеревоВыгрузки) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ТекстВыгрузки = ВыгрузитьДеревоВXML(ДеревоВыгрузки, Параметры);
	Если Открыта() Тогда
		СохранитьФайлВыгрузкиНаДиск(ТекстВыгрузки, Параметры);
	Иначе
		//Сообщить("" + РегламентированнаяОтчетность.ПредставлениеДокументаРеглОтч(мСохраненныйДок) + " успешно выгружен!");
	КонецЕсли;
	Возврат Истина;
	
КонецФункции

Процедура СохранитьФайлВыгрузкиНаДиск(ТекстXML, Параметры)
	
	ПутьДляВыгрузки = РегламентированнаяОтчетность.ПолучитьПутьВыгрузки(); // получаем каталог для сохранения
	Если ПутьДляВыгрузки <> Ложь Тогда
		ФайлДляВыгрузки = ?(Прав(ПутьДляВыгрузки, 1) = "\", ПутьДляВыгрузки, ПутьДляВыгрузки + "\") + Параметры.ИдФайл + ".xml";
		ЗаписатьТесктНаДиск(ТекстXML, ФайлДляВыгрузки); // записываем XML в файл на диск
	КонецЕсли;
	
КонецПроцедуры

Функция ИзвлечьСтруктуруXML()
	
	ДеревоСтруктуры = Новый ДеревоЗначений;
	ДеревоСтруктуры.Колонки.Добавить("Код");
	ДеревоСтруктуры.Колонки.Добавить("Тип");
	ДеревоСтруктуры.Колонки.Добавить("Формат");
	ДеревоСтруктуры.Колонки.Добавить("МинРазмерность");
	ДеревоСтруктуры.Колонки.Добавить("МаксРазмерность");
	ДеревоСтруктуры.Колонки.Добавить("Обязательность");
	ДеревоСтруктуры.Колонки.Добавить("Многостраничность");
	ДеревоСтруктуры.Колонки.Добавить("Многострочность");
	ДеревоСтруктуры.Колонки.Добавить("Раздел");
	ДеревоСтруктуры.Колонки.Добавить("Ключ");
	ДеревоСтруктуры.Колонки.Добавить("Условие");
	ДеревоСтруктуры.Колонки.Добавить("ЗначениеПоУмолчанию");
	ДеревоСтруктуры.Колонки.Добавить("Значение");
	ДеревоСтруктуры.Колонки.Добавить("Представление");
	ДеревоСтруктуры.Колонки.Добавить("Показатели");
	
	Макет = ПолучитьМакет("СхемаВыгрузки501");
	ВысотаТаблицы = Макет.ВысотаТаблицы;
	
	УчтенныеГруппы = Новый Соответствие;
	
	Для Уровень = 0 По Макет.КоличествоУровнейГруппировокСтрок() - 1 Цикл
		Макет.ПоказатьУровеньГруппировокСтрок(Уровень);
		Для НомерСтроки = 2 По ВысотаТаблицы Цикл
			НомСтр = ВысотаТаблицы - НомерСтроки + 2;
			Если Макет.Область(НомСтр, 0, НомСтр, 0).Видимость И УчтенныеГруппы.Получить(НомСтр) = Неопределено Тогда
				
				РодительскийУзел = ДеревоСтруктуры;
				Если Уровень <> 0 Тогда
					Для Инд = 1 По НомСтр - 2 Цикл
						Узел = УчтенныеГруппы.Получить(НомСтр - Инд);
						Если Узел <> Неопределено Тогда
							РодительскийУзел = Узел;
							Прервать;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				
				НовСтр = РодительскийУзел.Строки.Вставить(0);
				НовСтр.Код = СокрЛП(Макет.Область(НомСтр, 1, НомСтр, 1).Текст);
				НовСтр.Раздел = СокрЛП(Макет.Область(НомСтр, 2, НомСтр, 2).Текст);
				НовСтр.Ключ = СокрЛП(Макет.Область(НомСтр, 3, НомСтр, 3).Текст);
				НовСтр.Тип = СокрЛП(Макет.Область(НомСтр, 4, НомСтр, 4).Текст);
				НовСтр.Формат = СокрЛП(Макет.Область(НомСтр, 5, НомСтр, 5).Текст);
				МинРазмерность = СокрЛП(Макет.Область(НомСтр, 6, НомСтр, 6).Текст);
				НовСтр.МинРазмерность = ?(ПустаяСтрока(МинРазмерность), ?(НовСтр.Формат = "N", 99999, 0), Число(МинРазмерность));
				МаксРазмерность = СокрЛП(Макет.Область(НомСтр, 7, НомСтр, 7).Текст);
				НовСтр.МаксРазмерность = ?(ПустаяСтрока(МаксРазмерность), 99999, Число(МаксРазмерность));
				НовСтр.Обязательность = СокрЛП(Макет.Область(НомСтр, 8, НомСтр, 8).Текст);
				НовСтр.Многостраничность = НЕ ПустаяСтрока(Макет.Область(НомСтр, 9, НомСтр, 9).Текст);
				НовСтр.Многострочность = НЕ ПустаяСтрока(Макет.Область(НомСтр, 10, НомСтр, 10).Текст);
				НовСтр.Условие = СокрЛП(Макет.Область(НомСтр, 11, НомСтр, 11).Текст);
				НовСтр.ЗначениеПоУмолчанию = СокрЛП(Макет.Область(НомСтр, 12, НомСтр, 12).Текст);
				НовСтр.Представление = СокрЛП(Макет.Область(НомСтр, 13, НомСтр, 13).Текст);
				
				УчтенныеГруппы.Вставить(НомСтр, НовСтр);
				
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат ДеревоСтруктуры;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////

Функция СформироватьИдФайл(Параметры)
	
	Возврат Параметры.ПрефиксИмениФайлаВыгрузки
			+ "_" + ?(ЗначениеЗаполнено(Параметры.КодИФНСПосредника), Параметры.КодИФНСПосредника, Параметры.КодИФНС)
			+ "_" + Параметры.КодИФНС
			+ "_" + ?(Параметры.Свойство("ЭтоПБОЮЛ") И Параметры.ЭтоПБОЮЛ, СокрЛП(Параметры.ИННОрг), СокрЛП(Параметры.ИННОрг) + СокрЛП(Параметры.КППОрг))
			+ "_" + Формат(РабочаяДата, "ДФ=ггггММдд")
			+ "_" + Строка(Новый УникальныйИдентификатор);
	
КонецФункции

Процедура ОбработатьПоказателиПередВыгрузкой()
	Перем ЗначениеПоказателя;

	Разделы = Новый Массив;
	Разделы.Добавить(мДанныеОтчета.ПолеТабличногоДокументаБаланс);
	Разделы.Добавить(мДанныеОтчета.ПолеТабличногоДокументаФормаОтчета);
	Для Каждого Пок Из ИменаПоказателейСоЗнакомПлюс Цикл
		Для Каждого ПоказателиТекущегоРаздела Из Разделы Цикл
			Если ПоказателиТекущегоРаздела.Свойство(Пок + "_1") Тогда
				НомерСтроки = 1;
				Пока ПоказателиТекущегоРаздела.Свойство(Пок + "_" + Формат(НомерСтроки, "ЧГ="), ЗначениеПоказателя) Цикл
					Если ЗначениеПоказателя < 0 Тогда
						ПоказателиТекущегоРаздела.Вставить(Пок + "_" + Формат(НомерСтроки, "ЧГ="), -ЗначениеПоказателя);
					КонецЕсли;
					НомерСтроки = НомерСтроки + 1;
				КонецЦикла;
			ИначеЕсли ПоказателиТекущегоРаздела.Свойство(Пок, ЗначениеПоказателя) И ЗначениеПоказателя < 0 Тогда
				ПоказателиТекущегоРаздела.Вставить(Пок, -ЗначениеПоказателя);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Функция СформироватьСтруктуруПоказателей()
	
	мДанныеОтчета = Новый Структура;
	
	СохрСтруктура = мСохраненныйДок.ДанныеОтчета.Получить();
	ПоказателиОтчета = СохрСтруктура.ПоказателиОтчета;
	Для Каждого Раздел Из ПоказателиОтчета Цикл
		мДанныеОтчета.Вставить(Раздел.Ключ, Раздел.Значение);
	КонецЦикла;
	
	ОбработатьПоказателиПередВыгрузкой();
	
	АдресДляВыгрузки = "";
	Если ПустаяСтрока(ПоказателиОтчета.ПолеТабличногоДокументаБаланс.ОргПочтАдрес) Тогда
		мАдресДляВыгрузки = "";
	ИначеЕсли НЕ СохрСтруктура.Свойство("Адрес9Запятых", АдресДляВыгрузки) ИЛИ НЕ ЗначениеЗаполнено(АдресДляВыгрузки) Тогда
		Адреса = РегламентированнаяОтчетность.ПолучитьСведенияОбОрганизации(Организация, ДатаПодписи, "АдрЮР, АдрПочт");
		Если ПустаяСтрока(СтрЗаменить(Адреса.АдрЮР, ",", "")) Тогда
			АдрЮР = "";
		Иначе
			АдрЮР = Адреса.АдрЮР;
		КонецЕсли;
		Если ПустаяСтрока(СтрЗаменить(Адреса.АдрПочт, ",", "")) Тогда
			АдрПочт = "";
		Иначе
			АдрПочт = Адреса.АдрПочт;
		КонецЕсли;
		Если ЗначениеЗаполнено(АдрПочт) Тогда
			АдресДляВыгрузки = АдрПочт;
		Иначе
			АдресДляВыгрузки = АдрЮР;
		КонецЕсли;
	КонецЕсли;
	мДанныеОтчета.Вставить("АдресДляВыгрузки", АдресДляВыгрузки);
	
КонецФункции

Функция СформироватьСтруктуруПараметров()
	
	Титульный = мДанныеОтчета.ПолеТабличногоДокументаБаланс;
	
	СоответствиеМесяцаОкончанияПериодаОтчетаПризнакуПериода = Новый Соответствие;
	СоответствиеМесяцаОкончанияПериодаОтчетаПризнакуПериода.Вставить(3,		"21");
	СоответствиеМесяцаОкончанияПериодаОтчетаПризнакуПериода.Вставить(6,		"31");
	СоответствиеМесяцаОкончанияПериодаОтчетаПризнакуПериода.Вставить(9,		"33");
	//СоответствиеМесяцаОкончанияПериодаОтчетаПризнакуПериода.Вставить(12,	"34");
	
	СоответствиеЕдиницыИзмеренияСдвигу = Новый Соответствие;
	СоответствиеЕдиницыИзмеренияСдвигу.Вставить(Перечисления.ПорядкиОкругленияОтчетности.Окр1000000, 6);
	СоответствиеЕдиницыИзмеренияСдвигу.Вставить(Перечисления.ПорядкиОкругленияОтчетности.Окр1000, 3);
	СоответствиеЕдиницыИзмеренияСдвигу.Вставить(Перечисления.ПорядкиОкругленияОтчетности.Окр1, 0);
	
	Параметры = Новый Структура;
	Параметры.Вставить("ВерсПрог",					РегламентированнаяОтчетность.СформироватьВерсПрог());
	Параметры.Вставить("КНД",						"0710099");
	Параметры.Вставить("ДатаДок",					Формат(РабочаяДата, "ДФ=дд.ММ.гггг"));
	Параметры.Вставить("Период",					СоответствиеМесяцаОкончанияПериодаОтчетаПризнакуПериода[Месяц(мСохраненныйДок.ДатаОкончания)]);
	Параметры.Вставить("ОтчетГод",					Формат(мСохраненныйДок.ДатаОкончания, "ДФ=гггг"));
	Параметры.Вставить("ВидДок",					""); //показатель выгружается только для годовых отчетов, перед выгрузкой будет удален
	Параметры.Вставить("НаимОрг",					СокрЛП(Титульный.ОргНазв));
	Параметры.Вставить("ИННОрг",					СокрЛП(Титульный.ОргИНН));
	Параметры.Вставить("КППОрг", 					СокрЛП(Организация.КПП));
	Параметры.Вставить("КодИФНС",					СокрЛП(Организация.КодИМНС));
	Параметры.Вставить("КодИФНСПосредника",			СокрЛП(Организация.КодИФНСПолучателя));
	
	// различные коды
	Параметры.Вставить("ОКПО",						СокрЛП(Титульный.ОргКодОКПО));
	Параметры.Вставить("ОКВЭД",						СокрЛП(Титульный.ОргКодОКВЭД));
	Параметры.Вставить("ОКОПФ",						СокрЛП(Титульный.ОргКодОКОПФ));
	Параметры.Вставить("ОКФС",						СокрЛП(Титульный.ОргКодОКФС));
	Параметры.Вставить("ОКЕИ",						СокрЛП(Титульный.КодЕИ));
	
	// ОКУД
	Параметры.Вставить("ОКУД1",						"0710001");
	Параметры.Вставить("ОКУД2",						"0710002");
	
	// определяем форматную строку, используемую для получения суммовых значений, помещаемых в файл выгрузки
	Параметры.Вставить("ФорматВывода",				"ЧДЦ=0; ЧН=0; ЧС=" + СоответствиеЕдиницыИзмеренияСдвигу[мСохраненныйДок.ЕдиницаИзмерения]);
	
	// ФИО руководителя
	ФИОРук = РазложитьФИО(Титульный.ОргДиректор);
	Параметры.Вставить("ФамилияРук",				СокрЛП(ФИОРук.Фамилия));
	Параметры.Вставить("ИмяРук",					СокрЛП(ФИОРук.Имя));
	Параметры.Вставить("ОтчествоРук",				СокрЛП(ФИОРук.Отчество));
	
	// ФИО главного бухгалтера
	ФИОБух = РазложитьФИО(Титульный.ОргБухгалтер);
	Параметры.Вставить("ФамилияБух",				СокрЛП(ФИОБух.Фамилия));
	Параметры.Вставить("ИмяБух",					СокрЛП(ФИОБух.Имя));
	Параметры.Вставить("ОтчествоБух",				СокрЛП(ФИОБух.Отчество));
	
	// телефон
	Параметры.Вставить("ТелОрг",					РегламентированнаяОтчетность.ПолучитьСведенияОбОрганизации(мСохраненныйДок.Организация, мСохраненныйДок.ДатаПодписи, "ТелОрганизации").ТелОрганизации);
	
	// адрес
	СтруктураАдреса = РегламентированнаяОтчетность.РазложитьАдрес(мДанныеОтчета.АдресДляВыгрузки);
	Параметры.Вставить("АдрИндекс",					СокрЛП(СтруктураАдреса.Индекс));
	Параметры.Вставить("АдрКодРегион",				РегламентированнаяОтчетность.КодРегионаПоНазванию(СокрЛП(СтруктураАдреса.Регион)));
	Параметры.Вставить("АдрРегион",					СокрЛП(СтруктураАдреса.Регион));
	Параметры.Вставить("АдрРайон",					СокрЛП(СтруктураАдреса.Район));
	Параметры.Вставить("АдрГород",					СокрЛП(СтруктураАдреса.Город));
	Параметры.Вставить("АдрНаселПункт",				СокрЛП(СтруктураАдреса.НаселенныйПункт));
	Параметры.Вставить("АдрУлица",					СокрЛП(СтруктураАдреса.Улица));
	Параметры.Вставить("АдрДом",					СокрЛП(СтруктураАдреса.Дом));
	Параметры.Вставить("АдрКорпус",					СокрЛП(СтруктураАдреса.Корпус));
	Параметры.Вставить("АдрКварт",					СокрЛП(СтруктураАдреса.Квартира));
	
	Параметры.Вставить("ВерсФорм",					"5.01");
	Параметры.Вставить("ПрефиксИмениФайлаВыгрузки",	"NO_BUHOTCH");
	
	// формируем ИдФайл на основании значений других параметров
	Параметры.Вставить("ИдФайл",					СформироватьИдФайл(Параметры));

	Возврат Параметры;
	
КонецФункции

Функция РазложитьФИО(Знач ФИОСтр)
	
	ФИОСтр = СокрЛП(ФИОСтр);
	ФИО = Новый Структура("Фамилия, Имя, Отчество", "", "", "");
	
	ПервыйПробел = Найти(ФИОСтр, " ");
	Если ПервыйПробел = 0 Тогда
		ФИО.Фамилия = ФИОСтр;
		Возврат ФИО;
	КонецЕсли;
	ФИО.Фамилия = СокрЛП(Лев(ФИОСтр, ПервыйПробел - 1));
	ФИОСтр = СокрЛП(Сред(ФИОСтр, ПервыйПробел + 1));
	
	ВторойПробел = Найти(ФИОСтр, " ");
	Если ВторойПробел = 0 Тогда
		ФИО.Имя = ФИОСтр;
		Возврат ФИО;
	КонецЕсли;
	ФИО.Имя = СокрЛП(Лев(ФИОСтр, ВторойПробел - 1));
	
	ФИО.Отчество = СокрЛП(Сред(ФиоСтр, ВторойПробел + 1));
	
	Возврат ФИО;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////

Функция ПроверитьВозможностьВыгрузки(Параметры)
	
	СтатусПроверки = Истина;
	
	Если ПустаяСтрока(Параметры.КодИФНС) Тогда
		РегламентированнаяОтчетность.роСообщитьВТаблицуСообщений(ЭтаФорма, "В справочнике ""Организации"" для текущей организации не задан код ИФНС, необходимый для формирования имени файла выгрузки!", "Баланс");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если ПустаяСтрока(Параметры.КППОрг) Тогда
		РегламентированнаяОтчетность.роСообщитьВТаблицуСообщений(ЭтаФорма, "В справочнике ""Организации"" для текущей организации не задан КПП, необходимый для формирования корректного файла выгрузки!", "Баланс");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если ПустаяСтрока(Параметры.НаимОрг) Тогда
		РегламентированнаяОтчетность.роСообщитьВТаблицуСообщений(ЭтаФорма, "На указано полное наименование организации!", "Баланс", "ОргНазв");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Параметры.Период) Тогда
		РегламентированнаяОтчетность.роСообщитьВТаблицуСообщений(ЭтаФорма, "Формат выгрузки допускает выгрузку отчетов только за I квартал, полугодие, 9 месяцев!", "Баланс", "ДатаБаланса");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Параметры.ИННОрг) Тогда
		РегламентированнаяОтчетность.роСообщитьВТаблицуСообщений(ЭтаФорма, "Не задан ИНН организации!", "Баланс", "ОргИНН");
		СтатусПроверки = Ложь;
	ИначеЕсли НЕ РегламентированнаяОтчетность.ИННСоответствуетТребованиям(Параметры.ИННОрг, Перечисления.ЮрФизЛицо.ЮрЛицо) Тогда
		РегламентированнаяОтчетность.роСообщитьВТаблицуСообщений(ЭтаФорма, "Задан некорректный ИНН юридического лица!", "Баланс", "ОргИНН");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если ПустаяСтрока(Параметры.ФамилияРук) Тогда
		РегламентированнаяОтчетность.роСообщитьВТаблицуСообщений(ЭтаФорма, "Не удалось определить фамилию руководителя!", "Баланс", "ОргДиректор");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если ПустаяСтрока(Параметры.ИмяРук) Тогда
		РегламентированнаяОтчетность.роСообщитьВТаблицуСообщений(ЭтаФорма, "Не удалось определить имя руководителя!", "Баланс", "ОргДиректор");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если ПустаяСтрока(Параметры.ФамилияБух) Тогда
		РегламентированнаяОтчетность.роСообщитьВТаблицуСообщений(ЭтаФорма, "Не удалось определить фамилию главного бухгалтера!", "Баланс", "ОргБухгалтер");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если ПустаяСтрока(Параметры.ИмяБух) Тогда
		РегламентированнаяОтчетность.роСообщитьВТаблицуСообщений(ЭтаФорма, "Не удалось определить имя главного бухгалтера!", "Баланс", "ОргБухгалтер");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(Параметры.ОКПО) И (СтрДлина(Параметры.ОКПО) < 8 ИЛИ СтрДлина(Параметры.ОКПО) > 10 ИЛИ НЕ ОбщегоНазначения.ТолькоЦифрыВСтроке(Параметры.ОКПО)) Тогда
		РегламентированнаяОтчетность.роСообщитьВТаблицуСообщений(ЭтаФорма, "На титульном листе задан некорректный код по ОКПО!", "Баланс", "ОргКодОКПО");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если ПустаяСтрока(Параметры.ОКВЭД) Тогда
		РегламентированнаяОтчетность.роСообщитьВТаблицуСообщений(ЭтаФорма, "Не указано значение кода вида деятельности по ОКВЭД!", "Баланс", "ОргКодОКВЭД");
		СтатусПроверки = Ложь;
	ИначеЕсли НЕ РегламентированнаяОтчетность.ОКВЭДСоответствуетТребованиям(Параметры.ОКВЭД) Тогда
		РегламентированнаяОтчетность.роСообщитьВТаблицуСообщений(ЭтаФорма, "Указано некорректное значение кода вида деятельности по ОКВЭД! Допустимы значения, соответствующие следующим шаблонам: ""XX"", ""XX.X"", ""XX.XX"", ""XX.XX.X"", ""XX.XX.XX"" (X - любая цифра).!", "Баланс", "ОргКодОКВЭД");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если ПустаяСтрока(Параметры.ОКОПФ) Тогда
		РегламентированнаяОтчетность.роСообщитьВТаблицуСообщений(ЭтаФорма, "Не задан код по ОКОПФ!", "Баланс", "ОргКодОКОПФ");
		СтатусПроверки = Ложь;
	ИначеЕсли СтрДлина(Параметры.ОКОПФ) <> 2 ИЛИ НЕ ОбщегоНазначения.ТолькоЦифрыВСтроке(Параметры.ОКОПФ) Тогда
		РегламентированнаяОтчетность.роСообщитьВТаблицуСообщений(ЭтаФорма, "Задан некорректный код по ОКОПФ!", "Баланс", "ОргКодОКОПФ");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если ПустаяСтрока(Параметры.ОКФС) Тогда
		РегламентированнаяОтчетность.роСообщитьВТаблицуСообщений(ЭтаФорма, "Не задан код по ОКФС!", "Баланс", "ОргКодОКФС");
		СтатусПроверки = Ложь;
	ИначеЕсли СтрДлина(Параметры.ОКФС) <> 2 ИЛИ НЕ ОбщегоНазначения.ТолькоЦифрыВСтроке(Параметры.ОКФС) Тогда
		РегламентированнаяОтчетность.роСообщитьВТаблицуСообщений(ЭтаФорма, "Задан некорректный код по ОКФС!", "Баланс", "ОргКодОКФС");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если ПустаяСтрока(Параметры.ОКЕИ) Тогда
		РегламентированнаяОтчетность.роСообщитьВТаблицуСообщений(ЭтаФорма, "Не задан код по ОКЕИ!", "Баланс", "КодЕИ");
		СтатусПроверки = Ложь;
	ИначеЕсли СтрДлина(Параметры.ОКЕИ) <> 3 ИЛИ НЕ ОбщегоНазначения.ТолькоЦифрыВСтроке(Параметры.ОКЕИ) Тогда
		РегламентированнаяОтчетность.роСообщитьВТаблицуСообщений(ЭтаФорма, "Задан некорректный код по ОКЕИ!", "Баланс", "КодЕИ");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Параметры.АдрКодРегион) Тогда
		РегламентированнаяОтчетность.роСообщитьВТаблицуСообщений(ЭтаФорма, "Требуется указание как минимум кода региона в адресе!", "Баланс", "ОргПочтАдрес");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Возврат СтатусПроверки;
	
КонецФункции

Функция СкопироватьУзел(Родитель, Узел)
	
	// находим узел в максимальным индексом с тем же кодом, что и у копируемого и добавляем его сразу после найденного элемента
	СтрокиСТемЖеКодом = Родитель.Строки.НайтиСтроки(Новый Структура("Код", Узел.Код), Ложь);
	МаксИндекс = -1;
	Для Каждого СтрокаСТемЖеКодом Из СтрокиСТемЖеКодом Цикл
		ТекИндекс = Родитель.Строки.Индекс(СтрокаСТемЖеКодом);
		Если ТекИндекс > МаксИндекс Тогда
			МаксИндекс = ТекИндекс;
		КонецЕсли;
	КонецЦикла;
	
	ИндексСоздаваемогоУзла = МаксИндекс + 1;
	Если ИндексСоздаваемогоУзла >= Родитель.Строки.Количество() ИЛИ ИндексСоздаваемогоУзла = 0 Тогда // если аналогичный узел не найден или найденный узел - последний
		НовыйУзел = Родитель.Строки.Добавить();
	Иначе
		НовыйУзел = Родитель.Строки.Вставить(ИндексСоздаваемогоУзла);
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(НовыйУзел, Узел, , "Родитель, Строки");
	Для Каждого Стр из Узел.Строки Цикл
		СкопироватьУзел(НовыйУзел, Стр);
	КонецЦикла;
	Возврат НовыйУзел;
	
КонецФункции

Процедура ЗаполнитьДанными(ДеревоВыгрузки, Параметры)
	
	ОбработатьУсловныеЭлементы(Параметры, ДеревоВыгрузки); // формируем точную структуру XML-макета
	ЗаполнитьДаннымиУзел(Параметры, ДеревоВыгрузки); // заполняем дерево данными
	ПостобработкаДереваВыгрузки(ДеревоВыгрузки);//!!!
	ОтсечьНезаполненныеНеобязательныеУзлы(ДеревоВыгрузки);
	
КонецПроцедуры

Процедура ПостобработкаДереваВыгрузки(ДеревоВыгрузки)
	
	// находим ключевые узлы выгрузки многострочных частей
	ГоловнойУзелТЧ = ДеревоВыгрузки.Строки.Найти("ПрочЦен", "Код", Истина);
	Если ГоловнойУзелТЧ <> Неопределено Тогда
		
		СуммыПоАтрибутам = Новый Структура;
		УзлыВтчНаим = ГоловнойУзелТЧ.Строки.НайтиСтроки(Новый Структура("Код", "ВтчНаим"));
		Для Каждого УзелВтчНаим Из УзлыВтчНаим Цикл
			Для Каждого СтрАтрибут Из УзелВТчНаим.Строки Цикл
				Если СтрАтрибут.Тип = "А" И СтрАтрибут.Формат = "N" Тогда
					ЗначениеАтрибутаЧисло = ЧисловоеЗначение(СтрАтрибут.Значение);
					СуммаПоАтрибуту = ?(СуммыПоАтрибутам.Свойство(СтрАтрибут.Код), СуммыПоАтрибутам[СтрАтрибут.Код], 0);
					СуммыПоАтрибутам.Вставить(СтрАтрибут.Код, СуммаПоАтрибуту + ЗначениеАтрибутаЧисло);
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		
		Для Каждого КлючИЗначение Из СуммыПоАтрибутам Цикл
			АтрибутГоловногоУзлаТЧ = ГоловнойУзелТЧ.Строки.Найти(КлючИЗначение.Ключ, "Код");
			Если АтрибутГоловногоУзлаТЧ <> Неопределено Тогда
				АтрибутГоловногоУзлаТЧ.Значение = Формат(КлючИЗначение.Значение, "ЧН=; ЧГ=");
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ЧисловоеЗначение(Значение)
	
	ТипЗначения = ТипЗнч(Значение);
	Если ТипЗначения = Тип("Число") Тогда
		Возврат Значение;
	ИначеЕсли ТипЗначения = Тип("Строка") Тогда
		Попытка
			Возврат Число(Значение);
		Исключение
			Возврат 0;
		КонецПопытки;
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции

Функция ИмеютсяАналогичныеСоседниеУзлы(Стр)
	
	Возврат (Стр.Родитель.Строки.НайтиСтроки(Новый Структура("Ключ", Стр.Ключ), Ложь).Количество() > 1);
	
КонецФункции

Процедура УдалитьУзел(Узел)
	
	РодительУзла = ?(Узел.Родитель = Неопределено, Узел.Владелец(), Узел.Родитель);
	РодительУзла.Строки.Удалить(Узел);
	
КонецПроцедуры

Процедура ОтсечьНезаполненныеНеобязательныеУзлы(Узел)
	
	КоличествоСтрок = Узел.Строки.Количество();
	Для Инд = 1 По КоличествоСтрок Цикл
		Стр = Узел.Строки.Получить(КоличествоСтрок - Инд);
		ОтсечьНезаполненныеНеобязательныеУзлы(Стр);
	КонецЦикла;
	
	Если ТипЗнч(Узел) <> Тип("ДеревоЗначений") Тогда
		УзелПуст = УзелПуст(Узел);
		Если УзелПуст Тогда
			Если Найти(Узел.Обязательность, "Н") <> 0 ИЛИ Найти(Узел.Обязательность, "H") <> 0 Тогда // учтем оба варианта: кириллицу и латиницу
				УдалитьУзел(Узел);
			ИначеЕсли (Найти(Узел.Обязательность, "М") <> 0 ИЛИ Найти(Узел.Обязательность, "M") <> 0) // учтем оба варианта: кириллицу и латиницу
			И ?(Найти(Узел.Обязательность, "О") <> 0 ИЛИ Найти(Узел.Обязательность, "O") <> 0, ИмеютсяАналогичныеСоседниеУзлы(Узел), Истина) Тогда
				УдалитьУзел(Узел);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция УзелПуст(Узел)
	
	ПустойУзел = ?(Узел.Формат = "N", Узел.Значение = "0" ИЛИ (НЕ ЗначениеЗаполнено(Узел.Значение)), НЕ ЗначениеЗаполнено(Узел.Значение));
	Для Каждого Стр из Узел.Строки Цикл
		Если НЕ УзелПуст(Стр) Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	Возврат ПустойУзел;
	
КонецФункции

Функция УсловиеВыполнено(Параметры, Условие)
	
	Попытка
		РезультатВычисленияВыражения = Вычислить(СтрЗаменить(Условие, "&", "Параметры."));
		Если ТипЗнч(РезультатВычисленияВыражения) <> Тип("Булево") Тогда
			РегламентированнаяОтчетность.роСообщитьВТаблицуСообщений(ЭтаФорма, "Не удалось вычислить выражение-условие: """ + Условие + """!", "Баланс", "");
		КонецЕсли;
		Возврат НЕ (РезультатВычисленияВыражения = Ложь);
	Исключение
		РегламентированнаяОтчетность.роСообщитьВТаблицуСообщений(ЭтаФорма, "Не удалось вычислить выражение-условие: """ + Условие + """!", "Баланс", "");
		Возврат Истина;
	КонецПопытки;
	
КонецФункции

Функция СвойствоОпределено(Объект, ИмяСвойства)
	
	ГУИД = Новый УникальныйИдентификатор;
	ВремСтрукт = Новый Структура(ИмяСвойства, ГУИД);
	ЗаполнитьЗначенияСвойств(ВремСтрукт, Объект);
	Возврат (ВремСтрукт[ИмяСвойства] <> ГУИД);
	
КонецФункции

Процедура ДополнитьСтруктуруПараметров(Параметры, Узел)
	
	Если НЕ ПустаяСтрока(Узел.Раздел) Тогда
		Если СвойствоОпределено(мДанныеОтчета, "ПолеТабличногоДокумента" + Узел.Раздел) Тогда
			ПоказателиРаздела = мДанныеОтчета["ПолеТабличногоДокумента" + Узел.Раздел];
			Для Каждого Эл Из ПоказателиРаздела Цикл
				Параметры.Вставить(Эл.Ключ, Эл.Значение);
			КонецЦикла;
		Иначе
			ПоказателиРаздела = мДанныеОтчета[Узел.Раздел];
			Для Каждого Эл Из ПоказателиРаздела Цикл
				Параметры.Вставить(Эл.Ключ, Эл.Значение);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработатьУсловныеЭлементы(Знач Параметры, Узел)
	
	Если ТипЗнч(Узел) <> Тип("ДеревоЗначений") Тогда
		ДополнитьСтруктуруПараметров(Параметры, Узел);
	КонецЕсли;
	КоличествоСтрок = Узел.Строки.Количество();
	Для Инд = 1 По КоличествоСтрок Цикл
		ТекСтр = Узел.Строки.Получить(КоличествоСтрок - Инд);
		Если НЕ ПустаяСтрока(ТекСтр.Условие) Тогда
			Если НЕ УсловиеВыполнено(Параметры, ТекСтр.Условие) Тогда
				Узел.Строки.Удалить(ТекСтр);
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		ОбработатьУсловныеЭлементы(Параметры, ТекСтр);
	КонецЦикла;
	
КонецПроцедуры

Функция ВывестиПоказательВXML(Узел, ЗначениеПоказателя)
	
	МинШирина = Узел.МинРазмерность;
	МаксШирина = Узел.МаксРазмерность;
	
	Если Узел.Формат = "T" ИЛИ Узел.Формат = "Т" Тогда // учтем оба варианта: кириллицу и латиницу
		Узел.Значение = ?(МаксШирина < СтрДлина(СокрЛП(ЗначениеПоказателя)), СокрЛП(Лев(СокрЛП(ЗначениеПоказателя), МаксШирина)), СокрЛП(ЗначениеПоказателя));
	ИначеЕсли Узел.Формат = "N" Тогда
		СтрокаФормата = "ЧРД=.;ЧН=0;ЧГ=;";
		Если Узел.МаксРазмерность <> 0 И Узел.МаксРазмерность <> 99999 Тогда
			СтрокаФормата = СтрокаФормата + "ЧЦ=" + Формат(Узел.МаксРазмерность, "ЧГ=") + ";";
		КонецЕсли;
		Если Узел.МинРазмерность <> 99999 Тогда
			СтрокаФормата = СтрокаФормата + "ЧДЦ=" + Формат(Узел.МинРазмерность, "ЧГ=") + ";";
		КонецЕсли;
		Узел.Значение = СокрЛП(Формат(ЗначениеПоказателя, СтрокаФормата));
	ИначеЕсли Узел.Формат = "gYear" Тогда
		Если ТипЗнч(ЗначениеПоказателя) = Тип("Дата") Тогда
			Узел.Значение = СокрЛП(Формат(ЗначениеПоказателя, "ДФ=гггг"));
		Иначе
			Узел.Значение = Прав(СокрЛП(ЗначениеПоказателя), 4);
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьПервыйКлючВПодчиненииКУзлу(Узел)
	
	Если ЗначениеЗаполнено(Узел.Ключ) Тогда
		Возврат Узел.Ключ;
	КонецЕсли;
	
	Для Каждого Стр Из Узел.Строки Цикл
		КлючВПодчинении = ПолучитьПервыйКлючВПодчиненииКУзлу(Стр);
		Если ЗначениеЗаполнено(КлючВПодчинении) Тогда
			Возврат КлючВПодчинении;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

Функция ОпределитьКоличествоСтрокМногострочнойЧасти(Параметры, Узел)
	
	ПервыйКлюч = ПолучитьПервыйКлючВПодчиненииКУзлу(Узел);
	Если ЗначениеЗаполнено(ПервыйКлюч) Тогда
		НомерСтроки = 1;
		Пока Параметры.Свойство(ПервыйКлюч + "_" + Формат(НомерСтроки, "ЧГ=")) Цикл
			НомерСтроки = НомерСтроки + 1;
		КонецЦикла;
		Возврат НомерСтроки - 1;
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции

Функция ЗначениеПериведенноеКЕдиницеИзмерения(Значение, Параметры)
	
	Возврат Число(Формат(Значение, Параметры.ФорматВывода));
	
КонецФункции

Процедура ЗаполнитьДаннымиУзел(Параметры, Узел, НомерСтроки = Неопределено)
	
	МассивУзлов = Новый Массив;
	Для Каждого Ед Из Узел.Строки Цикл
		МассивУзлов.Добавить(Ед);
	КонецЦикла;
	
	Для Каждого Стр из МассивУзлов Цикл
		Если Стр.Тип = "С" ИЛИ Стр.Тип = "C" Тогда // учтем оба варианта: кириллицу и латиницу
			Если Стр.Многострочность Тогда // !!!
				КоличествоСтрок = ОпределитьКоличествоСтрокМногострочнойЧасти(Параметры, Стр);
				Для НомСтр = 1 По КоличествоСтрок Цикл
					НовыйУзел = СкопироватьУзел(Узел, Стр);
					ЗаполнитьДаннымиУзел(Параметры, НовыйУзел, НомСтр);
				КонецЦикла;
			Иначе
				ЗаполнитьДаннымиУзел(Параметры, Стр, НомерСтроки);
			КонецЕсли;
		Иначе
			Если ПустаяСтрока(Стр.ЗначениеПоУмолчанию) Тогда
				Если НЕ ПустаяСтрока(Стр.Ключ) Тогда
					ИмяСвойства = Стр.Ключ + ?(НомерСтроки = Неопределено, "", "_" + Формат(НомерСтроки, "ЧГ="));
					Если Параметры.Свойство(ИмяСвойства) Тогда // !!!
						ЗначениеСвойства = Параметры[ИмяСвойства];
						Если ТипЗнч(ЗначениеСвойства) = Тип("Строка") Тогда
							ВывестиПоказательВXML(Стр, ЗначениеСвойства);
						Иначе
							ВывестиПоказательВXML(Стр, ЗначениеПериведенноеКЕдиницеИзмерения(ЗначениеСвойства, Параметры));
						КонецЕсли;
					Иначе
						Стр.Значение = ?(Стр.Формат = "N", "0", "");
					КонецЕсли;
				Иначе
					Стр.Значение = ?(Стр.Формат = "N", "0", "");
				КонецЕсли;
			ИначеЕсли Лев(Стр.ЗначениеПоУмолчанию, 1) = "&" Тогда
				ВывестиПоказательВXML(Стр, Параметры[Сред(Стр.ЗначениеПоУмолчанию, 2)]);
			Иначе
				Стр.Значение = Стр.ЗначениеПоУмолчанию;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция ЗначениеСоответствуетФормату(Стр)
	
	СтатусПроверки = Истина;
	Если Стр.Формат = "Т" ИЛИ Стр.Формат = "T" Тогда // учтем оба варианта: кириллицу и латиницу
		ДлинаЗначения = СтрДлина(Стр.Значение);
		Если ДлинаЗначения < Стр.МинРазмерность Тогда
			СтатусПроверки = Ложь;
			РегламентированнаяОтчетность.роСообщитьВТаблицуСообщений(ЭтаФорма, "Длина значения показателя """ + ПредставлениеПоказателя(Стр) + """ меньше минимально возможной (" + ДлинаЗначения + " < " + Стр.МинРазмерность + ")", "Баланс", "");
		КонецЕсли;
		Если ДлинаЗначения > Стр.МаксРазмерность Тогда
			СтатусПроверки = Ложь;
			РегламентированнаяОтчетность.роСообщитьВТаблицуСообщений(ЭтаФорма, "Длина значения показателя """ + ПредставлениеПоказателя(Стр) + """ больше максимально возможной (" + ДлинаЗначения + " > " + Стр.МаксРазмерность + ")", "Баланс", "");
		КонецЕсли;
	КонецЕсли;
	Возврат СтатусПроверки;
	
КонецФункции

Функция ПредставлениеПоказателя(Стр)
	
	Возврат ?(ПустаяСтрока(Стр.Представление), Стр.Код, Стр.Представление);
	
КонецФункции

Функция ПроверитьДанные(Узел)
	
	СтатусПроверки = Истина;
	Если ТипЗнч(Узел) <> Тип("ДеревоЗначений") Тогда
		Если НЕ ЗначениеСоответствуетФормату(Узел) Тогда
			СтатусПроверки = Ложь;
		КонецЕсли;
	КонецЕсли;
	Для Каждого Стр из Узел.Строки Цикл
		СтатусПроверки = (ПроверитьДанные(Стр) И СтатусПроверки); // именно в указанном порядке для выдачи всех ошибок
	КонецЦикла;
	Возврат СтатусПроверки;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////

Функция ВыгрузитьДеревоВXML(ДеревоВыгрузки, Параметры)
	
	ПотокXML = СоздатьНовыйПотокXML(); // создаем новый поток для записи
	ЗаписатьУзелДереваВXML(ДеревоВыгрузки, ПотокXML); // пишем дерево в поток
	ТекстДляЗаписи = ПотокXML.Закрыть(); // получаем текст XML
	ТекстДляЗаписи = "<?xml version=""1.0"" encoding=""windows-1251""?>" + Сред(ТекстДляЗаписи, Найти(ТекстДляЗаписи, Символы.ПС));
	Возврат ТекстДляЗаписи;
	
КонецФункции

Функция СоздатьНовыйПотокXML() Экспорт
	
	ПотокXML = Новый ЗаписьXML();
	ПотокXML.УстановитьСтроку("UTF-8");
	ПотокXML.ЗаписатьОбъявлениеXML();
	ПотокXML.Отступ = Истина;
	Возврат ПотокXML;
	
КонецФункции

Функция ЗаписатьУзелДереваВXML(СтрокаДерева, ПотокXML) Экспорт
	
	Если ТипЗнч(СтрокаДерева) = Тип("ДеревоЗначений") Тогда
		ПотокXML.ЗаписатьНачалоЭлемента("Файл");
		ПотокXML.ЗаписатьАтрибут("xmlns:xsi", "http://www.w3.org/2001/XMLSchema-instance");
		//ПотокXML.ЗаписатьАтрибут("xsi:noNamespaceSchemaLocation", "NO_BUH1_1_023_00_05_01_01.xsd");
		Для каждого Стр Из СтрокаДерева.Строки Цикл
			ЗаписатьУзелДереваВXML(Стр, ПотокXML);
		КонецЦикла;
		ПотокXML.ЗаписатьКонецЭлемента();
	Иначе
		Если СтрокаДерева.Тип = "А" ИЛИ СтрокаДерева.Тип = "A" Тогда 
			ПотокXML.ЗаписатьАтрибут(СтрокаДерева.Код, Строка(СтрокаДерева.Значение));
		Иначе
			ПотокXML.ЗаписатьНачалоЭлемента(СтрокаДерева.Код);
			Для каждого Лист из СтрокаДерева.Строки Цикл
				ЗаписатьУзелДереваВXML(Лист, ПотокXML);
			КонецЦикла;
			ПотокXML.ЗаписатьТекст(Строка(СтрокаДерева.Значение));
			ПотокXML.ЗаписатьКонецЭлемента();
		КонецЕсли;
	КонецЕсли;

КонецФункции

Функция ЗаписатьТесктНаДиск(ТекстДляЗаписи, ФайлДляЗаписи) Экспорт
	
	ПотокЗаписи = Новый ЗаписьТекста(ФайлДляЗаписи, КодировкаТекста.ANSI);
	ПотокЗаписи.Записать(ТекстДляЗаписи);
	ПотокЗаписи.Закрыть();
	Сообщить("Отчет успешно выгружен в файл """ + ФайлДляЗаписи + """.", СтатусСообщения.Информация);
	Возврат Истина;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
//	ПРОЦЕДУРЫ И ФУНКЦИИ МЕХАНИЗМА АВТОСОХРАНЕНИЯ 
//                                                             

// Процедура является частью механизма автосохранения 
// и назначается динамически методом ПодключитьОбработчикОжидания()
// Обработчик может подключаться и отключаться из процедуры ПриОткрытии текущей формы и
// процедуры ОсновныеДействияФормыКнопкаВыбратьНажатие формы ФормаНастройки
Процедура ОбработчикСобытияПоТаймеру()
	
	Если РегламентированнаяОтчетность.АвтосохранениеВозможно(ЭтаФорма) Тогда
		Сохранить(Истина);
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельФормыРасширитьПолеБланка(Кнопка)
	
	РегламентированнаяОтчетность.ПриНажатииНаКнопкуПереходаВРежимВводаДанных(ЭтаФорма);
	
КонецПроцедуры

// Надпись30Нажатие
//
Процедура Надпись30Нажатие(Элемент)
	// Вставить содержимое обработчика.
	СписокОрганизаций = Новый СписокЗначений;
	СписокОрганизаций.Добавить(Организация);
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(мГруппаОрганизаций, СписокОрганизаций);
	СписокОрганизаций.ВыбратьЭлемент("Список организаций, по которым формируется отчет");
КонецПроцедуры // Надпись30Нажатие

Процедура ПолеТабличногоДокументаБалансВыбор(Элемент, Область, СтандартнаяОбработка)
	Если Область.Имя = "ОргПочтАдрес" Тогда
		// Запросим адреса.
		Адреса = РегламентированнаяОтчетность.ПолучитьСведенияОбОрганизации(Организация, ДатаПодписи, "ПолныйАдрЮР, ПолныйАдрПочт");
		ИДКонфигурации = РегламентированнаяОтчетность.ИДКонфигурации();
		Если ИДКонфигурации = "УПП" ИЛИ ИДКонфигурации = "КА" Тогда
			Если ПустаяСтрока(СтрЗаменить(Адреса.ПолныйАдрЮР, ",", "")) Тогда
				Адреса.ПолныйАдрЮР = "";
			Иначе
				Адреса.ПолныйАдрЮР = РегламентированнаяОтчетность.ПредставлениеАдресаВФормате9Запятых(Адреса.ПолныйАдрЮР);
			КонецЕсли;
			
			Если ПустаяСтрока(СтрЗаменить(Адреса.ПолныйАдрПочт, ",", "")) Тогда
				Адреса.ПолныйАдрПочт = "";
			Иначе
				Адреса.ПолныйАдрПочт = РегламентированнаяОтчетность.ПредставлениеАдресаВФормате9Запятых(Адреса.ПолныйАдрПочт);
			КонецЕсли;
		КонецЕсли;

		ТаблицаАдресов = Новый ТаблицаЗначений;
		ТаблицаАдресов.Колонки.Добавить("НазваниеАдреса",,"Тип адреса",18);
		ТаблицаАдресов.Колонки.Добавить("Адрес",,,100);

		НовСтр = ТаблицаАдресов.Добавить();
		НовСтр.НазваниеАдреса = "Пустое значение";
		НовСтр.Адрес = "Адрес не указывается";

		Если НЕ ПустаяСтрока(Адреса.ПолныйАдрПочт) Тогда
			НовСтр = ТаблицаАдресов.Добавить();
			НовСтр.НазваниеАдреса = "Почтовый адрес";
			НовСтр.Адрес = Адреса.ПолныйАдрПочт;
		КонецЕсли;

		Если НЕ ПустаяСтрока(Адреса.ПолныйАдрЮР) Тогда
			НовСтр = ТаблицаАдресов.Добавить();
			НовСтр.НазваниеАдреса = "Юридический адрес";
			НовСтр.Адрес = Адреса.ПолныйАдрЮР;
		КонецЕсли;

		Если ТаблицаАдресов.Количество() = 1 Тогда
			Предупреждение("В контактной информации юридический и почтовый адрес не указаны.");
			Возврат;
		КонецЕсли;

		ПоискЗначение = ?(ПустаяСтрока(Область.Значение), "Адрес не указывается", Область.Значение);
		НайденнаяСтрока = ТаблицаАдресов.Найти(ПоискЗначение, "Адрес");
		Если НайденнаяСтрока = Неопределено Тогда
			УказанныйАдрес = ТаблицаАдресов.ВыбратьСтроку("Выберите");
		Иначе
			УказанныйАдрес = ТаблицаАдресов.ВыбратьСтроку("Выберите адрес", НайденнаяСтрока);
		КонецЕсли;

		Если УказанныйАдрес = Неопределено Тогда
			Возврат;
		КонецЕсли;

		Модифицированность = Истина;

		Область.Значение = ?(УказанныйАдрес.Получить(1) = "Адрес не указывается", "", УказанныйАдрес.Получить(1));

		Если УказанныйАдрес.Получить(1) = "Адрес не указывается" Тогда
			// По умолчанию для следующих обновлений поставим, что тип адреса должен быть почтовым.
			мТипАдреса = "ПолныйАдрПочт";
			мАдресДляВыгрузки = "";
		КонецЕсли;

		Если УказанныйАдрес.НазваниеАдреса = "Юридический адрес" Тогда
			мТипАдреса = "ПолныйАдрЮР";
			мАдресДляВыгрузки = РегламентированнаяОтчетность.ПолучитьСведенияОбОрганизации(Организация, ДатаПодписи, "АдрЮР").АдрЮР;
		КонецЕсли;

		Если УказанныйАдрес.НазваниеАдреса = "Почтовый адрес" Тогда
			мТипАдреса = "ПолныйАдрПочт";
			мАдресДляВыгрузки = РегламентированнаяОтчетность.ПолучитьСведенияОбОрганизации(Организация, ДатаПодписи, "АдрПочт").АдрПочт;
		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

// Процедура вызывается при выборе пункта "Показать машиночитаемый бланк" подменю "Печать"
// командной панели действий формы. 
//
// Обработчик уставливается динамически методом "Действие" из общего модуля
// "Регламентированная отчетность".
//
Процедура КоманднаяПанельДействийПечатьМашиночитаемогоБланка(Кнопка)
	
	РегламентированнаяОтчетность.ВывестиМашиночитаемуюФорму(ЭтаФорма, Кнопка.Имя);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

Процедура КоманднаяПанельФормыДействиеОтправка(Кнопка)
	
	РегламентированнаяОтчетность.ПриНажатииНаКнопкуОтправкиВРегламентированномОтчете(ЭтаФорма, Кнопка);
	
КонецПроцедуры

Процедура СтатусНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	РегламентированнаяОтчетность.НачалоВыбораСтатусаВРегламентированномОтчете(ЭтаФорма, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура СтатусПриИзменении(Элемент)
	
	РегламентированнаяОтчетность.ПриИзмененииСтатусаВРегламентированномОтчете(ЭтаФорма, Элемент);
	
КонецПроцедуры

Процедура СтатусОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	РегламентированнаяОтчетность.ОбработкаОповещенияОбИзмененииСтатусаРегламентированногоОтчета(ЭтаФорма, ИмяСобытия, Параметр, Источник);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МЕХАНИЗМА ЗАГРУЗКИ ДАННЫХ

Функция ИмпортироватьДанныеОтчета()
	
	Режим = РежимДиалогаВыбораФайла.Открытие;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	Фильтр = "*.xml|*.xml";
	ДиалогОткрытияФайла.Фильтр = Фильтр;
	ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	ДиалогОткрытияФайла.Заголовок = "Выбор xml файла";

	Если НЕ ДиалогОткрытияФайла.Выбрать() Тогда
		Возврат Неопределено; // Пользователь отказался выбрать файл.
	КонецЕсли;
	
	Возврат ЗагрузитьДанные(ДиалогОткрытияФайла.ПолноеИмяФайла);

КонецФункции

Функция ЗагрузитьДанные(Путь)
	
	ДеревоСтруктуры = ИзвлечьСтруктуруXML();
	
	СтруктураДанных = Новый Структура;
	
	ФайлОбмена = Новый ЧтениеXML();
	
	ОтчетныйГодЗагрузкиДанных = 2011;
	
	ФайлОбмена.ОткрытьФайл(Путь);
	Пока ФайлОбмена.Прочитать() Цикл
		ИмяУзла = ФайлОбмена.ЛокальноеИмя;
		
		Если ИмяУзла = "Документ" Тогда
			Период = ФайлОбмена.ПолучитьАтрибут("Период");
			ОтчетныйГод = ФайлОбмена.ПолучитьАтрибут("ОтчетГод");
			
			ПериодЗагрузкиДанных      = ?(Период = Неопределено, 0, Число(Период));
			ОтчетныйГодЗагрузкиДанных = ?(ОтчетныйГод = Неопределено, 0, Число(ОтчетныйГод));		
			
			Прервать;
		КонецЕсли;

	КонецЦикла;
	
	ФайлОбмена.ОткрытьФайл(Путь);
	
	СумПрдщ  = 0;
	СумПрдшв = 0;
	СумПред  = 0;
	
	Пока ФайлОбмена.Прочитать() Цикл
		
		ИмяУзла = ФайлОбмена.ЛокальноеИмя;
		
		ОсновнаяВетка = ДеревоСтруктуры;
		
		// БАЛАНС
		Если ИмяУзла = "Баланс" Тогда
			
			Пока ФайлОбмена.Прочитать() Цикл 
				
				ИмяУзла = ФайлОбмена.ЛокальноеИмя;
								
				Если ИмяУзла = "ПрибУб" Тогда
					Прервать;
				КонецЕсли;
				
				Если ИмяУзла = "КапРез" 
				 ИЛИ ИмяУзла = "ВнеобА" 
				 ИЛИ ИмяУзла = "ОбА" 
				 ИЛИ ИмяУзла = "ДолгосрОбяз" 
				 ИЛИ ИмяУзла = "КраткосрОбяз"  Тогда
					
					// Искать строки надо в пределах родителя, т.к. есть совпадающие идентификаторы строк 
					ОсновнаяВетка = ДеревоСтруктуры.Строки.Найти(ИмяУзла, "Код", Истина);
					
				КонецЕсли;				
				
				ВеткаРодителя = ОсновнаяВетка.Строки.Найти(ИмяУзла, "Код", Истина);
				
				Если ВеткаРодителя <> Неопределено Тогда
					
					Если ОтчетныйГодЗагрузкиДанных = 2011 Тогда // данных 2011 г. в 1.6 быть не должно
						СумПрдщ = ФайлОбмена.ПолучитьАтрибут("СумПрдщ");
						Если СумПрдщ <> Неопределено Тогда
							Значение = Число(СумПрдщ);
							СтрокаДерева = ВеткаРодителя.Строки.Найти("СумПрдщ", "Код");
							КлючЗначения = СтрокаДерева.Ключ;
							Если ИменаПоказателейСоЗнакомПлюс.Найти(КлючЗначения) <> Неопределено Тогда ;
								Значение = -Значение;
							КонецЕСли;
							СтруктураДанных.Вставить(КлючЗначения, Значение);
						КонецЕсли;
					КонецЕсли;
					
					Если ОтчетныйГодЗагрузкиДанных < 2012 Тогда // данных 2011 г. в 1.6 быть не должно
						СумПрдшв = ФайлОбмена.ПолучитьАтрибут("СумПрдшв");
						Если СумПрдшв <> Неопределено Тогда
							Значение = Число(СумПрдшв);
							СтрокаДерева = ВеткаРодителя.Строки.Найти("СумПрдшв", "Код");
							КлючЗначения = СтрокаДерева.Ключ;
							Если ИменаПоказателейСоЗнакомПлюс.Найти(КлючЗначения) <> Неопределено Тогда ;
								Значение = -Значение;
							КонецЕСли;
							СтруктураДанных.Вставить(КлючЗначения, Значение);
						КонецЕсли;
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
		// ФОРМА 2
		
		Если ИмяУзла = "ПрибУб" Тогда
			
			Если ОтчетныйГодЗагрузкиДанных = 2011 Тогда // данных 2011 г. в 1.6 быть не должно
				
				Пока ФайлОбмена.Прочитать() Цикл
					
					ИмяУзла = ФайлОбмена.ЛокальноеИмя;
					
					ВеткаРодителя = ДеревоСтруктуры.Строки.Найти(ИмяУзла, "Код", Истина);
					
					Если ВеткаРодителя <> Неопределено Тогда
						СумПред = ФайлОбмена.ПолучитьАтрибут("СумПред");
						Если СумПред <> Неопределено Тогда							
							Значение = Число(СумПред);
							СтрокаДерева = ВеткаРодителя.Строки.Найти("СумПред", "Код");
							КлючЗначения = СтрокаДерева.Ключ;
							Если ИменаПоказателейСоЗнакомПлюс.Найти(КлючЗначения) <> Неопределено Тогда ;
								Значение = -Значение;
							КонецЕСли;
							СтруктураДанных.Вставить(КлючЗначения, Значение);						
						КонецЕсли;
												
					КонецЕсли;
					
				КонецЦикла;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СтруктураДанных;

КонецФункции

Процедура ЗагрузитьДанныеВОтчет(СтруктураДанныхОтчета)
	
	Для Каждого ЗаписьСтруктуры ИЗ СтруктураДанныхОтчета Цикл
		
		Попытка
			мБаланс.Области[ЗаписьСтруктуры.Ключ].Значение = ЗаписьСтруктуры.Значение;
		Исключение
			мФормаОтчета.Области[ЗаписьСтруктуры.Ключ].Значение = ЗаписьСтруктуры.Значение;
		КонецПопытки
		
	КонецЦикла;	
	
КонецПроцедуры

Процедура ОпределитьПериодЗагружаемыхДанных()
	
	ГодОтчета = Год(мДатаКонцаПериодаОтчета);
	Если ГодОтчета = 2011 И ОтчетныйГодЗагрузкиДанных = 2011 Тогда
		ЗаполнятьГодПредыдущий = Ложь;
		ЗаполнятьГодПредшествующийПредыдущему  = Ложь;		
	ИначеЕсли ГодОтчета = 2012 И ОтчетныйГодЗагрузкиДанных = 2012 Тогда
		ЗаполнятьГодПредыдущий = Истина;
		ЗаполнятьГодПредшествующийПредыдущему  = Ложь;		
	Иначе
		ЗаполнятьГодПредыдущий = Истина;
		ЗаполнятьГодПредшествующийПредыдущему  = Истина;		
	КонецЕсли;
				
КонецПроцедуры		

	
////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

// Список выбора поля выбора "Единица измерения"
ЭлементыФормы.ПолеВыбораЕдиницаИзмерения.СписокВыбора.Добавить(Перечисления.ПорядкиОкругленияОтчетности.Окр1,       "в рублях");
ЭлементыФормы.ПолеВыбораЕдиницаИзмерения.СписокВыбора.Добавить(Перечисления.ПорядкиОкругленияОтчетности.Окр1000,    "в тысячах рублей");
ЭлементыФормы.ПолеВыбораЕдиницаИзмерения.СписокВыбора.Добавить(Перечисления.ПорядкиОкругленияОтчетности.Окр1000000, "в миллионах рублей");

// Список выбора поля выбора "ВариантЗаполнения"
ЭлементыФормы.ПолеВыбораВариантЗаполненияБаланс.СписокВыбора.Добавить(1, "не заполнять автоматически");
ЭлементыФормы.ПолеВыбораВариантЗаполненияБаланс.СписокВыбора.Добавить(2, "заполнять автоматически с корректировкой");
ЭлементыФормы.ПолеВыбораВариантЗаполненияБаланс.СписокВыбора.Добавить(3, "заполнять автоматически без корректировки");

ЭлементыФормы.ПолеВыбораВариантЗаполненияФормаОтчета.СписокВыбора.Добавить(1, "не заполнять автоматически");
ЭлементыФормы.ПолеВыбораВариантЗаполненияФормаОтчета.СписокВыбора.Добавить(2, "заполнять автоматически с корректировкой");
ЭлементыФормы.ПолеВыбораВариантЗаполненияФормаОтчета.СписокВыбора.Добавить(3, "заполнять автоматически без корректировки");

ОписаниеТиповЧисло = ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15,2);

ОписаниеТиповСтрока = ОбщегоНазначения.ПолучитьОписаниеТиповСтроки(254);

МассивТипов = Новый Массив;
МассивТипов.Добавить(Тип("Дата"));
ОписаниеТиповДата = Новый ОписаниеТипов(МассивТипов, , Новый КвалификаторыДаты(ЧастиДаты.Дата));


// структура многострочных разделов формы
мСтруктураМногострочныхРазделов = Новый Структура;

// структура исходных строк (минимального кол-ва) многострочных разделов формы
мСтруктураИсхКолвоСтрокРазделов = Новый Структура;

ЦветЗаполняетсяТолькоВручную    = Новый Цвет(255, 255, 225);
ЦветЗаполняетсяАвтоКорректир    = Новый Цвет(255, 240, 200);
ЦветЗаполняетсяАвтоБезКорректир = Новый Цвет(230, 240, 220);
ЦветЗаполняетсяАвтоАрифметика   = Новый Цвет(192, 220, 192); // ЗЕЛЕНЫЙ

// структура цветов раскраски автозаполняемых ячеек
мСтруктураЦветовРаскраски = Новый Структура;
мСтруктураЦветовРаскраски.Вставить("_1", ЦветЗаполняетсяТолькоВручную);
мСтруктураЦветовРаскраски.Вставить("_2", ЦветЗаполняетсяАвтоКорректир);
мСтруктураЦветовРаскраски.Вставить("_3", ЦветЗаполняетсяАвтоБезКорректир);
мСтруктураЦветовРаскраски.Вставить("_4", ЦветЗаполняетсяАвтоАрифметика);

ИменаПоказателейСоЗнакомПлюс = Новый Массив;
ИменаПоказателейСоЗнакомПлюс.Добавить("П000100132004");
ИменаПоказателейСоЗнакомПлюс.Добавить("П000100132005");
ИменаПоказателейСоЗнакомПлюс.Добавить("П000100132006");
ИменаПоказателейСоЗнакомПлюс.Добавить("П000100212004");
ИменаПоказателейСоЗнакомПлюс.Добавить("П000100212005");
ИменаПоказателейСоЗнакомПлюс.Добавить("П000100221004");
ИменаПоказателейСоЗнакомПлюс.Добавить("П000100221005");
ИменаПоказателейСоЗнакомПлюс.Добавить("П000100222004");
ИменаПоказателейСоЗнакомПлюс.Добавить("П000100222005");
ИменаПоказателейСоЗнакомПлюс.Добавить("П000100233004");
ИменаПоказателейСоЗнакомПлюс.Добавить("П000100233005");
ИменаПоказателейСоЗнакомПлюс.Добавить("П000100235004");
ИменаПоказателейСоЗнакомПлюс.Добавить("П000100235005");
ИменаПоказателейСоЗнакомПлюс.Добавить("П000100241004");
ИменаПоказателейСоЗнакомПлюс.Добавить("П000100241005");
ИменаПоказателейСоЗнакомПлюс.Добавить("П000100242104");
ИменаПоказателейСоЗнакомПлюс.Добавить("П000100242105");

// ОПИСАНИЕ ПАРМЕТРОВ ФОРМЫ
//
// Версия формы
мВерсияФормы = "13/02/2011";

//универсальная выгрузка и попутные
ИДКонфигурации = РегламентированнаяОтчетность.ИДКонфигурации();
ИмяМакетаССоставомПоказателей = "СоставПоказателей2011кв1";

ЭтоБалансДляАУ = (ИДКонфигурации = "БАУКОРП" ИЛИ ИДКонфигурации = "БАУ");

мСтруктураМногострочныхРазделов = Новый Структура;
мСтруктураМногостраничныхРазделов = Новый Структура;

ТаблицаСообщений = Новый ТаблицаЗначений;
ТаблицаСообщений.Колонки.Добавить("Раздел");
ТаблицаСообщений.Колонки.Добавить("Графа");
ТаблицаСообщений.Колонки.Добавить("Строка");
ТаблицаСообщений.Колонки.Добавить("Страница");
ТаблицаСообщений.Колонки.Добавить("СтрокаПП");
ТаблицаСообщений.Колонки.Добавить("ИмяЯчейки");
ТаблицаСообщений.Колонки.Добавить("Описание");

мПечатныеФормы = Новый СписокЗначений;
мПечатаемыеРазделы = Новый СписокЗначений;

СпП = Новый ТаблицаЗначений;
СпП.Колонки.Добавить("НомСтроки");
СпП.Колонки.Добавить("ИмяЯчейки");
СпП.Колонки.Добавить("ИмяПоказателя");
СпП.Колонки.Добавить("ЗнакОперации");
СпП.Колонки.Добавить("ИмяСлагаемого");
СпП.Колонки.Добавить("Сумма");
СпП.Колонки.Добавить("КодСчета");
СпП.Колонки.Добавить("КодКорСчета");
СпП.Колонки.Добавить("ДатаНачала");
СпП.Колонки.Добавить("ДатаКонца");
СпП.Колонки.Добавить("Сдвиг");
СпП.Колонки.Добавить("Раздел");
СпП.Колонки.Добавить("Страница");
СпП.Колонки.Добавить("МнЧ");
СпП.Колонки.Добавить("СтрокаПП");
СпП.Колонки.Добавить("Субконто1");                                                                       	
СпП.Колонки.Добавить("Субконто2");
СпП.Колонки.Добавить("Субконто3");
СпП.Колонки.Добавить("Организация"); // Ссылка на организацию.

// Объявим таблицу значений мТаблицаИтоговыхПоказателейПриКонсолидации.
// Используется при заполнении отчета за несколько организаций. Хранит данные по показателям
// которые записываются через процедуру УстановитьЗначениеПоказателя.

мТаблицаИтоговыхПоказателейПриКонсолидации = Новый ТаблицаЗначений;
мТаблицаИтоговыхПоказателейПриКонсолидации.Колонки.Добавить("ИмяПоказателя");
мТаблицаИтоговыхПоказателейПриКонсолидации.Колонки.Добавить("Сумма");

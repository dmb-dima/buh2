#Если Клиент Тогда
	
Перем НП Экспорт;

// Выполняет запрос и формирует табличный документ-результат отчета
// в соответствии с настройками, заданными значениями реквизитов отчета.
//
// Параметры:
//	ДокументРезультат - табличный документ, формируемый отчетом
//	ПоказыватьЗаголовок - признак видимости строк с заголовком отчета
//	ВысотаЗаголовка - параметр, через который возвращается высота заголовка в строках 
//
Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок = Ложь) Экспорт
	
	ДокументРезультат.Очистить();

	Макет = ПолучитьМакет("Отчет");

	ОбластьЗаголовок  = Макет.ПолучитьОбласть("Заголовок");

	ОбластьЗаголовок.Параметры.НачалоПериода       = Формат(ДатаНач, "ДФ=dd.MM.yyyy");
	ОбластьЗаголовок.Параметры.КонецПериода        = Формат(ДатаКон, "ДФ=dd.MM.yyyy");
	СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация);
	НазваниеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм");
	ОбластьЗаголовок.Параметры.НазваниеОрганизации = НазваниеОрганизации;
	ОбластьЗаголовок.Параметры.ИННОрганизации      = "" + Организация.ИНН + " / " + Организация.КПП;
	ДокументРезультат.Вывести(ОбластьЗаголовок);

	// Параметр для показа заголовка
	ВысотаЗаголовка = ДокументРезультат.ВысотаТаблицы;

	// Когда нужен только заголовок:
	Если ТолькоЗаголовок Тогда
		Возврат;
	КонецЕсли;

	// Проверим заполнение обязательных реквизитов
	Если НалоговыйУчет.ПроверитьЗаполнениеОбязательныхРеквизитов(ДатаНач,ДатаКон,Организация) Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВысотаЗаголовка) Тогда
		ДокументРезультат.Область("R1:R" + ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;
	КонецЕсли;
    	
	ФормированиеРезервовПоСомнительнымДолгам = Новый Массив;
	ФормированиеРезервовПоСомнительнымДолгам.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ПрочиеВнереализационныеДоходыРасходы);
	ФормированиеРезервовПоСомнительнымДолгам.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ОтчисленияВОценочныеРезервы);
	ФормированиеРезервовПоСомнительнымДолгам.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.СписаниеДебиторскойКредиторскойЗадолженности);
		
	ВидыПрочихРасходов = Новый Массив;
	Для Номер = 0 По Перечисления.ВидыПрочихДоходовИРасходов.Количество()-1 Цикл
		ЗначениеПеречисления = Перечисления.ВидыПрочихДоходовИРасходов.Получить(Номер);
		Если ЗначениеПеречисления <> Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСРеализациейОсновныхСредств
			И ЗначениеПеречисления <> Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСРеализациейНематериальныхАктивов
			И ЗначениеПеречисления <> Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСРеализациейОбъектовСтроительства
			И ЗначениеПеречисления <> Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСРеализациейПрочегоИмущества
			И ЗначениеПеречисления <> Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСРеализациейИмущественныхПравКромеПраваТребования
			И ЗначениеПеречисления <> Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСРеализациейИмущественныхПравПоОбъектамОбслуживающихПроизводств
			И ЗначениеПеречисления <> Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСРеализациейЦенныхБумаг
			И ЗначениеПеречисления <> Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСРеализациейОсновныхСредств
			И ЗначениеПеречисления <> Перечисления.ВидыПрочихДоходовИРасходов.ПрочиеКосвенныеРасходы
			И ЗначениеПеречисления <> Перечисления.ВидыПрочихДоходовИРасходов.НалогиИСборы
			Тогда 
			ВидыПрочихРасходов.Добавить(ЗначениеПеречисления);
		КонецЕсли;
	КонецЦикла;
	
	Запрос = Новый Запрос;

	Запрос.УстановитьПараметр("ПроцентыПоДолговымОбязательствам", Перечисления.ВидыПрочихДоходовИРасходов.ПроцентыКПолучениюУплате);
	Запрос.УстановитьПараметр("ФормированиеРезервовПоСомнительнымДолгам", ФормированиеРезервовПоСомнительнымДолгам);
	Запрос.УстановитьПараметр("НДСПоСписаннойКредиторскойЗадолженности", Перечисления.ВидыПрочихДоходовИРасходов.НДСПоСписаннойКредиторскойЗадолженности);
	Запрос.УстановитьПараметр("ОперацииСФинансовымиИнструментамиСрочныхСделокОР", Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделокОР);
	Запрос.УстановитьПараметр("ОперацииСФинансовымиИнструментамиСрочныхСделок", Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделок);
	Запрос.УстановитьПараметр("СодержаниеИмуществаПереданногоВАренду", Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСоСдачейИмуществаВАренду);
	Запрос.УстановитьПараметр("ЛиквидацияВыводимыхИзЭксплуатацииОсновныхСредств", Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСЛиквидациейОсновныхСредств);
	Запрос.УстановитьПараметр("УбыткиПрошлыхЛет", Перечисления.ВидыПрочихДоходовИРасходов.ПрибыльУбытокПрошлыхЛет);
	Запрос.УстановитьПараметр("СуммыБезнадежныхДолгов", Перечисления.ВидыПрочихДоходовИРасходов.СписаниеДебиторскойКредиторскойЗадолженности);
	Запрос.УстановитьПараметр("УслугиБанков", Перечисления.ВидыПрочихДоходовИРасходов.РасходыНаУслугиБанков);
	Запрос.УстановитьПараметр("КурсовыеРазницы", Перечисления.ВидыПрочихДоходовИРасходов.КурсовыеРазницы);
	Запрос.УстановитьПараметр("Штрафы", Перечисления.ВидыПрочихДоходовИРасходов.ВозмещениеУбытковКПолучениюУплате);
	Запрос.УстановитьПараметр("ДатаНач",      НачалоДня(ДатаНач));
	Запрос.УстановитьПараметр("ДатаКон",      КонецДня(ДатаКон));
	Запрос.УстановитьПараметр("Организация",  Организация);
	Запрос.УстановитьПараметр("Счет91_02",  ПланыСчетов.Хозрасчетный.ПрочиеРасходы);
	Запрос.УстановитьПараметр("Счет96",       ПланыСчетов.Хозрасчетный.РезервыПредстоящихРасходов);
	Запрос.УстановитьПараметр("ВидыПрочихРасходов",  ВидыПрочихРасходов);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОборотыДтКт.Период КАК ДатаОперации,
	|	ХозрасчетныйОборотыДтКт.Регистратор КАК Расшифровка,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОборотыДтКт.СубконтоДт1.ВидПрочихДоходовИРасходов = &ПроцентыПоДолговымОбязательствам
	|			ТОГДА ""Проценты по долговым обязательствам""
	|		КОГДА ХозрасчетныйОборотыДтКт.СубконтоДт1.ВидПрочихДоходовИРасходов В ИЕРАРХИИ (&ФормированиеРезервовПоСомнительнымДолгам)
	|				И ХозрасчетныйОборотыДтКт.СчетКт = &Счет96
	|			ТОГДА ""Формирование резервов по сомнительным долгам""
	|		КОГДА ХозрасчетныйОборотыДтКт.СубконтоДт1.ВидПрочихДоходовИРасходов = &НДСПоСписаннойКредиторскойЗадолженности
	|			ТОГДА ""НДС по списанной кредиторской задолженности""
	|		КОГДА ХозрасчетныйОборотыДтКт.СубконтоДт1.ВидПрочихДоходовИРасходов = &ОперацииСФинансовымиИнструментамиСрочныхСделокОР
	|			ТОГДА ""Доходы расходы по операциям с финансовыми инструментами срочных сделок, обращающимися на организованном рынке""
	|		КОГДА ХозрасчетныйОборотыДтКт.СубконтоДт1.ВидПрочихДоходовИРасходов = &ОперацииСФинансовымиИнструментамиСрочныхСделок
	|			ТОГДА ""Доходы расходы по операциям с финансовыми инструментами срочных сделок, не обращающимися на организованном рынке""
	|		КОГДА ХозрасчетныйОборотыДтКт.СубконтоДт1.ВидПрочихДоходовИРасходов = &СодержаниеИмуществаПереданногоВАренду
	|			ТОГДА ""Содержание имущества, переданного в аренду""
	|		КОГДА ХозрасчетныйОборотыДтКт.СубконтоДт1.ВидПрочихДоходовИРасходов = &ЛиквидацияВыводимыхИзЭксплуатацииОсновныхСредств
	|			ТОГДА ""Ликвидация выводимых из эксплуатации основных средств""
	|		КОГДА ХозрасчетныйОборотыДтКт.СубконтоДт1.ВидПрочихДоходовИРасходов = &УбыткиПрошлыхЛет
	|			ТОГДА ""Убытки прошлых лет""
	|		КОГДА ХозрасчетныйОборотыДтКт.СубконтоДт1.ВидПрочихДоходовИРасходов = &СуммыБезнадежныхДолгов
	|			ТОГДА ""Суммы безнадежных долгов, не покрытые за счет средств резерва""
	|		КОГДА ХозрасчетныйОборотыДтКт.СубконтоДт1.ВидПрочихДоходовИРасходов = &УслугиБанков
	|			ТОГДА ""Услуги банков""
	|		КОГДА ХозрасчетныйОборотыДтКт.СубконтоДт1.ВидПрочихДоходовИРасходов = &КурсовыеРазницы
	|			ТОГДА ""Курсовые разницы""
	|		КОГДА ХозрасчетныйОборотыДтКт.СубконтоДт1.ВидПрочихДоходовИРасходов = &Штрафы
	|			ТОГДА ""Штрафы, пени, неустойки""
	|		ИНАЧЕ ""Прочие внереализационные расходы""
	|	КОНЕЦ КАК ВидЗатрат,
	|	ХозрасчетныйОборотыДтКт.СуммаНУОборотДт КАК Сумма,
	|	Хозрасчетный.Содержание,
	|	Хозрасчетный.НомерСтроки КАК НомерПроводки
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Запись,
	|			СчетДт = &Счет91_02,
	|			,
	|			,
	|			,
	|			Организация = &Организация
	|				И СубконтоДт1.ПринятиеКналоговомуУчету
	|				И СубконтоДт1.ВидПрочихДоходовИРасходов В (&ВидыПрочихРасходов)) КАК ХозрасчетныйОборотыДтКт
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ПО ХозрасчетныйОборотыДтКт.Регистратор = Хозрасчетный.Регистратор
	|			И ХозрасчетныйОборотыДтКт.НомерСтроки = Хозрасчетный.НомерСтроки
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаОперации,
	|	НомерПроводки";
	Результат = Запрос.Выполнить();

	ТаблицаОтладки = Новый ТаблицаЗначений;
	ТаблицаОтладки = Результат.Выгрузить();
	
	ОбластьПодвал        = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы  = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьСтрока        = Макет.ПолучитьОбласть("Строка");

	ДокументРезультат.Вывести(ОбластьШапкаТаблицы);

	Выборка = Результат.Выбрать();

	СписокВидов = Новый СписокЗначений();
	Для каждого ЭлементСписка из ВидыРасходов Цикл
		Если ЭлементСписка.Пометка Тогда
			СписокВидов.Добавить(ЭлементСписка.Значение);
		КонецЕсли;
	КонецЦикла;
    ИтогоСумма = 0;
	Пока Выборка.Следующий() Цикл

		Если СписокВидов.НайтиПоЗначению(Выборка.ВидЗатрат) = Неопределено Тогда
			Продолжить;
		КонецЕсли;

		ОбластьСтрока.Параметры.ДатаОперации        = Выборка.ДатаОперации;
		ОбластьСтрока.Параметры.СтатьяРасхода       = Выборка.ВидЗатрат;
		ОбластьСтрока.Параметры.ОбъектУчета			= Выборка.Содержание;
		ОбластьСтрока.Параметры.Сумма               = Выборка.Сумма;
		ИтогоСумма = ИтогоСумма + Выборка.Сумма;
		ОбластьСтрока.Параметры.Расшифровка         = Выборка.Расшифровка;

		ДокументРезультат.Вывести(ОбластьСтрока);

	КонецЦикла;

	СтруктураЛиц = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Организация, ДатаКон);
	ОбластьПодвал.Параметры.ОтветственныйЗаРегистры = СтруктураЛиц.ОтветственныйЗаРегистры;
	ОбластьПодвал.Параметры.ИтогоСумма = ИтогоСумма;
	ДокументРезультат.Вывести(ОбластьПодвал);

КонецПроцедуры // СформироватьОтчет

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
// 

НП           = Новый НастройкаПериода;

#КонецЕсли
// Редактирование Субконто
Процедура РедактированиеСубконто(Элемент, СписокСубконто)
    	
	Форма = ПолучитьОбщуюФорму("ФормаНастройкаПоСубконто", Элемент);

	// Передача параметров в форму
	Форма.Список = СписокСубконто;
	
	Форма.РежимВыбора = Истина;
	
	Форма.ОткрытьМодально();
	
КонецПроцедуры

// обработка редактирования субконто
Процедура ОбработкаРедактированиеСубконто(Элемент, ТекущиеДанныеТаблицыРедактирования) Экспорт
	
	Если ТекущиеДанныеТаблицыРедактирования = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Счет = ТекущиеДанныеТаблицыРедактирования.Счет;
	Если НЕ ЗначениеЗаполнено(Счет) Тогда
		Предупреждение("Не выбран счет!");
		Возврат;
	КонецЕсли;
	
	СписокСубконто = Новый СписокЗначений;
	
	Для Каждого ВидСубконто Из Счет.ВидыСубконто Цикл

		СписокСубконто.Добавить("Субконто" + Строка(ВидСубконто.НомерСтроки), Строка(ВидСубконто.ВидСубконто));
		
	КонецЦикла;

	// Данные этой строки должны быть отмечены
	Для Каждого Строка Из ТекущиеДанныеТаблицыРедактирования.РазворотПоСубконто Цикл
		
		ЭлементСписка = СписокСубконто.НайтиПоЗначению(Строка.Имя);
		Если ЭлементСписка <> Неопределено Тогда
			ЭлементСписка.Пометка = Истина;
		КонецЕсли;
		
	КонецЦикла;

	РедактированиеСубконто(Элемент, СписокСубконто);
	
КонецПроцедуры

//процедура очищает данные разворота по субконто текущей строки настроек
Процедура ОчиститьДанныеНастроекПоСубконтоДляТекущейСтрокиНастроек(РедактируемаяСтрока)
	
	РедактируемаяСтрока.РазворотПоСубконто.Очистить();
	
	Если РедактируемаяСтрока.РазворотПоСубконто.Колонки.Количество() = 0 Тогда
		
		ОписаниеТиповСтрока = ОбщегоНазначения.ПолучитьОписаниеТиповСтроки(100);

		РедактируемаяСтрока.РазворотПоСубконто.Колонки.Добавить("Имя",           ОписаниеТиповСтрока);
		РедактируемаяСтрока.РазворотПоСубконто.Колонки.Добавить("Представление", ОписаниеТиповСтрока);
		
	КонецЕсли;

	РедактируемаяСтрока.ПредставлениеРазворотПоСубконто = "";
	
КонецПроцедуры

//процедура добавляет новое значение субконто в список выбранных
Процедура ДобавитьСубконтоВТаблицуВыбранных(ТаблицаВыбораСубконто, Знач ИмяСубконто, Знач ПредставлениеСубконто)
	
	НоваяСтрокаПоСубконто = ТаблицаВыбораСубконто.РазворотПоСубконто.Добавить();
			
	НоваяСтрокаПоСубконто.Имя = ИмяСубконто;
	НоваяСтрокаПоСубконто.Представление = ПредставлениеСубконто;
			
	ТаблицаВыбораСубконто.ПредставлениеРазворотПоСубконто = ТаблицаВыбораСубконто.ПредставлениеРазворотПоСубконто + ", " 
		+ ПредставлениеСубконто;
	
КонецПроцедуры

// Процедура обрабатывает выбор показателей, группировок или фильтров из отдельного окна.
Процедура ОбработкаВыборРазворотаПоСубконто(ВыбранноеЗначение, ТабличноеПоле, СтандартнаяОбработка) Экспорт

	СтандартнаяОбработка = Ложь;
	Если ТабличноеПоле.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОчиститьДанныеНастроекПоСубконтоДляТекущейСтрокиНастроек(ТабличноеПоле.ТекущиеДанные);

	Для Каждого Строка Из ВыбранноеЗначение Цикл 

		Если Строка.Пометка Тогда
			
			ДобавитьСубконтоВТаблицуВыбранных(ТабличноеПоле.ТекущиеДанные, Строка.Значение, Строка.Представление);
							
		КонецЕсли;

	КонецЦикла;

	ТабличноеПоле.ТекущиеДанные.ПредставлениеРазворотПоСубконто  = Сред(ТабличноеПоле.ТекущиеДанные.ПредставлениеРазворотПоСубконто, 3);

КонецПроцедуры

// процедура обрабатывает окончание редактирования настроек развернутого сальдо
Процедура ПриОкончанииРедактированияПравилаРазвернутогоСальдо(Элемент, НоваяСтрока, ОтменаРедактирования) Экспорт

	ТабличноеПоле = Элемент;

	Если ТабличноеПоле.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если НРег(ТабличноеПоле.ТекущаяКолонка.Имя) = НРег("Субсчета") Тогда

		Если ТабличноеПоле.ТекущиеДанные.Субсчета Тогда
			
			ОчиститьДанныеНастроекПоСубконтоДляТекущейСтрокиНастроек(ТабличноеПоле.ТекущиеДанные);
									
		КонецЕсли;
		
	ИначеЕсли НРег(ТабличноеПоле.ТекущаяКолонка.Имя) = НРег("ПредставлениеРазворотПоСубконто") Тогда

		Если ТабличноеПоле.ТекущиеДанные.РазворотПоСубконто.Количество() > 0 Тогда
			
			ТабличноеПоле.ТекущиеДанные.СубСчета = Ложь;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// процедура - обработчик при изменении счета в таблицах детализации или развернутого сальдо
Процедура ОбработчикПриИзмененииСчета(ТабличноеПоле, Знач ТабПолеРазвернутогоСальдо) Экспорт

	РедактируемаяСтрока = ТабличноеПоле.ТекущиеДанные; 
	
	Если РедактируемаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ОчиститьДанныеНастроекПоСубконтоДляТекущейСтрокиНастроек(РедактируемаяСтрока);
	
	// Признак того, что счет найден способ развернуть счет
	НайденСпособРазворота = Ложь;

	Счет = РедактируемаяСтрока.Счет;
	Если ЗначениеЗаполнено(Счет) Тогда
		
		ВыборкаПоСчету = ПланыСчетов[Счет.Метаданные().Имя].Выбрать(Счет);
		Если ВыборкаПоСчету.Следующий() Тогда
			
			РедактируемаяСтрока.Субсчета = Истина;
            НайденСпособРазворота = Истина;
			
		КонецЕсли;

		// Развернутое сальдо только по субсчетам
		Если ТабПолеРазвернутогоСальдо 
			И НайденСпособРазворота Тогда
			
			Возврат;
			
		КонецЕсли;
		
		Если Счет.ВидыСубконто.Количество() > 0 Тогда

			// Развернутое сальдо - отключим субсчета
			Если ТабПолеРазвернутогоСальдо Тогда
				РедактируемаяСтрока.Субсчета = Ложь;
			КонецЕсли;

			Для Каждого ВидСубконто Из Счет.ВидыСубконто Цикл

				ДобавитьСубконтоВТаблицуВыбранных(РедактируемаяСтрока, "Субконто" + Строка(ВидСубконто.НомерСтроки), Строка(ВидСубконто.ВидСубконто));
				
			КонецЦикла;

			РедактируемаяСтрока.ПредставлениеРазворотПоСубконто  = Сред(РедактируемаяСтрока.ПредставлениеРазворотПоСубконто, 3);

			НайденСпособРазворота = Истина;

		КонецЕсли;

		// Если у счета нет ни субсчетов, ни субконто, не дадим его выбрать.
		Если НЕ НайденСпособРазворота Тогда
			
			Если ТабПолеРазвернутогоСальдо Тогда
				ВидНастройки = "развернутого сальдо ";
			Иначе
				ВидНастройки = "итогов по субсчетам и субконто ";
			КонецЕсли;
			Предупреждение("Счет """ + Счет.Код + """ не имеет ни субсчетов, ни субконто." + Символы.ПС + "Настройка " + ВидНастройки + "не имеет смысла!");
			РедактируемаяСтрока.Счет = Неопределено;
			
		КонецЕсли;

	КонецЕсли;
	
КонецПроцедуры

// процедура обработки очистки разворота по субконто
Процедура ОбработкаОчисткиРазворотПоСубконтоТабПоля(ТабличноеПоле) Экспорт

	Если ТабличноеПоле.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ОчиститьДанныеНастроекПоСубконтоДляТекущейСтрокиНастроек(ТабличноеПоле.ТекущиеДанные);
	
КонецПроцедуры


/////////////////////////////////////////////////////////////////////////
// обработчики событий элементов формы
/////////////////////////////////////////////////////////////////////////

Процедура КнопкаОКНажатие(Элемент)
	
	Закрыть(Истина);
	
КонецПроцедуры

Процедура КнопкаНастройкаПериодаНажатие(Элемент)

	РаботаСДиалогами.ОбработчикНастройкаПериодаНажатие(ДатаНач, ДатаКон);

КонецПроцедуры

Процедура ПравилаРазвернутогоСальдоПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)

	ПриОкончанииРедактированияПравилаРазвернутогоСальдо(Элемент, НоваяСтрока, ОтменаРедактирования);
	
КонецПроцедуры

Процедура ПравилаРазвернутогоСальдоСчетПриИзменении(Элемент)
	
	ОбработчикПриИзмененииСчета(ЭлементыФормы.ПравилаРазвернутогоСальдо, Истина);
	
КонецПроцедуры

Процедура ПравилаРазвернутогоСальдоПредставлениеРазворотПоСубконтоОчистка(Элемент, СтандартнаяОбработка)
	
	ОбработкаОчисткиРазворотПоСубконтоТабПоля(ЭлементыФормы.ПравилаРазвернутогоСальдо);
	
КонецПроцедуры

Процедура ПравилаРазвернутогоСальдоРазворотПоСубконтоНачалоВыбора(Элемент, СтандартнаяОбработка)

	ОбработкаРедактированиеСубконто(Элемент, ЭлементыФормы.ПравилаРазвернутогоСальдо.ТекущиеДанные);

КонецПроцедуры

Процедура ПравилаРазвернутогоСальдоРазворотПоСубконтоОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ОбработкаВыборРазворотаПоСубконто(ВыбранноеЗначение, ЭлементыФормы.ПравилаРазвернутогоСальдо, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ПолеВыбораПериодаПриИзменении(Элемент)
	
	Если ПустаяСтрока(Период) Тогда
	
		ВсеПериоды = Ложь;
	
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанель1ПоУмолчанию(Кнопка)
	
	Если ПравилаРазвернутогоСальдо.Количество() > 0 Тогда
		
		Ответ = Вопрос("При заполнении по умолчанию текущие настройки будут очищены. Продолжить?",
		РежимДиалогаВопрос.ДаНет, ,КодВозвратаДиалога.Нет, "Заполнить по умолчанию");
		
	Иначе
		Ответ = КодВозвратаДиалога.Да;
	КонецЕсли;
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ЗаполнитьПоУмолчаниюНастройкуРазвернутыхСальдо();
	КонецЕсли;
	
КонецПроцедуры

/////////////////////////////////////////////////////////////////////////
// обработчики событий формы
/////////////////////////////////////////////////////////////////////////

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	УстановитьСвязываниеДанныхФормыНастроек(Неопределено, ЭлементыФормы.ПравилаРазвернутогоСальдо);
	
КонецПроцедуры


/////////////////////////////////////////////////////////////////////////
// общие процедуры и функции
/////////////////////////////////////////////////////////////////////////

// Процедура формирует заголовок формы отчета с учетом настроек
//
// Параметры:
//  Нет.
//
Процедура СформироватьЗаголовокФормы()

	ОписаниеПериода = СтандартныеОтчеты.СформироватьСтрокуОграниченийПоДатамДляФормы(ДатаНач, ДатаКон);

	Заголовок = ЗаголовокОтчета()+" (" + ОписаниеПериода + ") " +  ?(ЗначениеЗаполнено(Организация.НаименованиеПолное), Организация.НаименованиеПолное, Организация);
	
КонецПроцедуры // СформироватьЗаголовокФормы()()

// Вывод секции заголовка в отчет
Процедура ВыводЗаголовка()

	СтандартныеОтчеты.ОбработатьВыводЗаголовка(ЭтаФорма, ЭтотОбъект, ВысотаЗаголовка, ПоказыватьЗаголовок);
	
КонецПроцедуры // ВыводЗаголовка()

// Обновляет таблицу отчета
//
// Параметры:
//	Нет.
//
Процедура ОбновитьОтчет() Экспорт

	НеЗаполнятьНастройкиПриОткрытии = Не Открыта();
	
	СформироватьОтчет(ЭлементыФормы.ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка);

	ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.ДокументРезультат;
	
КонецПроцедуры // ОбновитьОтчет()

/////////////////////////////////////////////////////////////////////////
// обработчики событий элементов формы
/////////////////////////////////////////////////////////////////////////

Процедура Сформировать(Кнопка)
	
	ОбновитьОтчет();
	
КонецПроцедуры

Процедура Настройка(Кнопка)

	ФормаНастройка = ПолучитьФорму("ФормаНастройка");
	Если ФормаНастройка.ОткрытьМодально() = Истина Тогда
		ОбновитьОтчет();
	КонецЕсли;

КонецПроцедуры

Процедура КнопкаНастройкаПериодаНажатие(Элемент)

	РаботаСДиалогами.ОбработчикНастройкаПериодаНажатие(ДатаНач, ДатаКон);

КонецПроцедуры // КнопкаНастройкаПериодаНажатие()

Процедура ДокументРезультатОбработкаРасшифровки(ЭлементУправления, РасшифровкаСтроки, СтандартнаяОбработка)

	Если ТипЗнч(РасшифровкаСтроки) = Тип("СписокЗначений") Тогда

		Если РасшифровкаСтроки.Количество() = 1 Тогда
			ВыбранноеЗначение = РасшифровкаСтроки[0];
		Иначе
			ВыбранноеЗначение = РасшифровкаСтроки.ВыбратьЭлемент("Выберите расшифровку",РасшифровкаСтроки[0]);
		КонецЕсли;

		Если ВыбранноеЗначение <> Неопределено Тогда
			ВыбраннаяРасшифровка = ВыбранноеЗначение.Значение;
		Иначе
			СтандартнаяОбработка = Ложь;
			Возврат;
		КонецЕсли;

	ИначеЕсли ТипЗнч(РасшифровкаСтроки) = Тип("Структура")

		ИЛИ ТипЗнч(РасшифровкаСтроки) = Тип("Соответствие") Тогда

		ВыбраннаяРасшифровка = РасшифровкаСтроки;

	КонецЕсли;

	Если ТипЗнч(ВыбраннаяРасшифровка) = Тип("Структура") 
		ИЛИ ТипЗнч(ВыбраннаяРасшифровка) = Тип("Соответствие") Тогда
		
		// Добавим общую расшифровку из левого верхнего угла
		ОбщаяРасшифровка = ЭлементУправления.Область(1,1).Расшифровка;
		
		Если ТипЗнч(ОбщаяРасшифровка) = Тип("Структура") 
			ИЛИ ТипЗнч(ОбщаяРасшифровка) = Тип("Соответствие") Тогда
			
			Для Каждого Элемент Из ОбщаяРасшифровка Цикл
				ВыбраннаяРасшифровка.Вставить(Элемент.Ключ, Элемент.Значение);
			КонецЦикла;
		КонецЕсли;

		//РасшифровкаКолонки = ЭлементУправления.Область(ЭлементУправления.ТекущаяОбласть.Верх, ЭлементУправления.ТекущаяОбласть.Лево).Расшифровка;
		//
		Расшифровка = Новый Структура;
		
		Для Каждого Элемент Из ВыбраннаяРасшифровка Цикл
			Расшифровка.Вставить(Элемент.Ключ, Элемент.Значение);
		КонецЦикла;

		Расшифровка.Вставить("Период", ?(НРег(Расшифровка.ИмяОбъекта)<>"оборотысчетахозрасчетный", Период, "РЕГИСТРАТОР"));

		ОбработкаРасшифровкиСтандартногоОтчета(Расшифровка, ПоказыватьЗаголовок);

	КонецЕсли;

	СтандартнаяОбработка = Ложь;

КонецПроцедуры

Процедура КоманднаяПанельЗаголовок(Кнопка)

	ПоказыватьЗаголовок = Не ПоказыватьЗаголовок;
	ВыводЗаголовка();

КонецПроцедуры

/////////////////////////////////////////////////////////////////////////
// обработчики событий формы
/////////////////////////////////////////////////////////////////////////

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ТиповыеОтчеты.НазначитьФормеУникальныйКлючИдентификации(ЭтаФорма);

	Если НЕ НеЗаполнятьНастройкиПриОткрытии Тогда
		
		ПоказыватьЗаголовок = Истина;
		
		СтруктураОбщихПараметров = ВосстановитьЗначение("ОбщиеПараметрыОтчетов"+ИмяРегистраБухгалтерии);
		Если ТипЗнч(СтруктураОбщихПараметров) = Тип("Структура") Тогда
			
			СтруктураОбщихПараметров.Свойство("Организация", Организация);
	
			ЗаполнитьТаблицуНастроекСвойств(ЭтотОбъект, "ПравилаРазвернутогоСальдо", СтруктураОбщихПараметров);
			
			СтруктураОбщихПараметров.Свойство("ДатаНач"   , ДатаНач);
			СтруктураОбщихПараметров.Свойство("ДатаКон"   , ДатаКон);
			
			СтруктураОбщихПараметров.Свойство("ВсеПериоды", ВсеПериоды);
			
			СтруктураОбщихПараметров.Свойство("Период"    , Период);
			СтруктураОбщихПараметров.Свойство("ВыводитьРазвернутоеСальдо", ВыводитьРазвернутоеСальдо);
			
			СтруктураОбщихПараметров.Свойство("РазбитьПоЛистам", РазбитьПоЛистам);
			
		Иначе
			
			ЗаполнитьНачальныеНастройки();
			
		КонецЕсли;
		
		ВысотаЗаголовка = 0;
		
	КонецЕсли; 
	
	Если Не НеЗаполнятьНастройкиПриОткрытии Тогда 
		Организация = глЗначениеПеременной("ОсновнаяОрганизация");
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	Если НЕ НеЗаполнятьНастройкиПриОткрытии Тогда
		ВыводЗаголовка();
		СформироватьЗаголовокФормы();
	КонецЕсли;
	
	НеЗаполнятьНастройкиПриОткрытии=Ложь;
	
	СтандартныеОтчеты.УправлениеПометкамиКнопокЗаголовковКоманднойПанели(ЭтаФорма, ВысотаЗаголовка);
	
КонецПроцедуры

Процедура ОбновлениеОтображения()

	СформироватьЗаголовокФормы();

КонецПроцедуры

Процедура ПередСохранениемЗначений(Отказ)

	СохраненныеНастройки = Новый Структура(
	"Организация, Период, ВсеПериоды, ВыводитьРазвернутоеСальдо, РазбитьПоЛистам",
	Организация, 
	Период, ВсеПериоды, 
	ВыводитьРазвернутоеСальдо,
	РазбитьПоЛистам);
	
	СохраненныеНастройки.Вставить("ПравилаРазвернутогоСальдо",  ПравилаРазвернутогоСальдо.Скопировать());

КонецПроцедуры

Процедура ПослеВосстановленияЗначений()

	// Если настройка восстанавливается, когда открывается форма сформированного отчета, игнорируем
	Если НеЗаполнятьНастройкиПриОткрытии Тогда
		Возврат;
	КонецЕсли;

	// Тип восстановленного значения должен быть Структура
	Если НЕ ТипЗнч(СохраненныеНастройки) = Тип("Структура") Тогда 
		Возврат;
	КонецЕсли;

	// После установки счета и флагов можно заполнять текст построителя
	ЗаполнитьНачальныеНастройки();

	СохраненныеНастройки.Свойство("Организация"       , Организация);

	СохраненныеНастройки.Свойство("Период"          , Период);
	СохраненныеНастройки.Свойство("ВсеПериоды"      , ВсеПериоды);

	СохраненныеНастройки.Свойство("ВыводитьРазвернутоеСальдо", ВыводитьРазвернутоеСальдо);
	
	СохраненныеНастройки.Свойство("РазбитьПоЛистам" , РазбитьПоЛистам);
	
	ЗаполнитьТаблицуНастроекСвойств(ЭтотОбъект, "ПравилаРазвернутогоСальдо", СохраненныеНастройки);

КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)

	СтруктураОбщихПараметров = Новый Структура;
	СтруктураОбщихПараметров.Вставить("Организация", Организация);
	СтруктураОбщихПараметров.Вставить("ДатаНач"    , ДатаНач);
	СтруктураОбщихПараметров.Вставить("ДатаКон"    , Макс(ДатаНач, ДатаКон));
	СтруктураОбщихПараметров.Вставить("Период"     , Период);
	СтруктураОбщихПараметров.Вставить("ВсеПериоды" , ВсеПериоды);

	СтруктураОбщихПараметров.Вставить("ВыводитьРазвернутоеСальдо", ВыводитьРазвернутоеСальдо );
	
	СтруктураОбщихПараметров.Вставить("ПравилаРазвернутогоСальдо", ПравилаРазвернутогоСальдо);
	
	СтруктураОбщихПараметров.Вставить("РазбитьПоЛистам", РазбитьПоЛистам);

	СохранитьЗначение("ОбщиеПараметрыОтчетов"+ИмяРегистраБухгалтерии, СтруктураОбщихПараметров);

КонецПроцедуры

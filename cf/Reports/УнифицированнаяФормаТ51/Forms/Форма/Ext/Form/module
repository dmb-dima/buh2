////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Устанавливает видимость панели быстрого отбора
Процедура УстановитьВидимостьПанелиБыстрогоОтбора()
	
	Если НЕ ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Верх Тогда
		
		ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Верх;
		ЭлементыФормы.ДействияФормы.Кнопки.Отбор.Пометка = Ложь;
		ЭлементыФормы.ДействияФормы.Кнопки.Подменю.Кнопки.Отбор.Пометка = Ложь;
		
	Иначе
		
		ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Нет;
		ЭлементыФормы.ДействияФормы.Кнопки.Отбор.Пометка = Истина;
		ЭлементыФормы.ДействияФормы.Кнопки.Подменю.Кнопки.Отбор.Пометка = Истина;
		
	КонецЕсли;

КонецПроцедуры

// Процедура формирует заголовок окна
//
Процедура ОбновитьЗаголовокОкна()

	Если ЭлементыФормы.ФлажокНастройкиОрганизация.Значение Тогда
		
		Если ТипЗнч(ЭлементыФормы.ПолеНастройкиОрганизация.Значение) = Тип("СправочникСсылка.Организации") Тогда
			
			Если ЭлементыФормы.ПолеНастройкиОрганизация.Значение = Справочники.Организации.ПустаяСсылка() Тогда
				Заголовок = "Расчетная ведомость по организации: <Не задано значение>"
			Иначе
				Заголовок = "Расчетная ведомость по организации: " + ЭлементыФормы.ПолеНастройкиОрганизация.Значение
			КонецЕсли; 
			
		Иначе
			
			Если ЭлементыФормы.ПолеНастройкиОрганизация.Значение.Количество() = 0 Тогда
				Заголовок = "Расчетная ведомость по списку организаций: <Не задано значение>"
			Иначе
				Заголовок = "Расчетная ведомость по списку организаций: " + ЭлементыФормы.ПолеНастройкиОрганизация.Значение
			КонецЕсли; 
			
		КонецЕсли;
		
	Иначе
		Заголовок = "Расчетная ведомость"
	КонецЕсли;
	
	Заголовок = УправлениеОтчетами.СформироватьЗаголовокОсновнойФормы(НачалоМесяца(Период), КонецМесяца(Период), Заголовок, 0);
	
КонецПроцедуры // ОбновитьЗаголовокОкна()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Период = НачалоМесяца(ОбщегоНазначения.ПолучитьРабочуюДату());
	МесяцСтрока = РаботаСДиалогами.ДатаКакМесяцПредставление(Период);
	
	ЭлементыФормы.ПолеНастройкиОрганизация.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Организации");
	Организация = ОбщегоНазначения.ПустоеЗначениеТипа("СправочникСсылка.Организации");
	ЭлементыФормы.ПолеВидаСравненияОрганизация.СписокВыбора = УправлениеОтчетами.ПолучитьСписокВидовСравненияПоТипу(Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ВидСравненияОрганизации     = ВидСравнения.Равно;
	
	ЭлементыФормы.ПолеНастройкиПодразделение.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций");
	Подразделение = ОбщегоНазначения.ПустоеЗначениеТипа("СправочникСсылка.ПодразделенияОрганизаций");
	ЭлементыФормы.ПолеВидаСравненияПодразделение.СписокВыбора = УправлениеОтчетами.ПолучитьСписокВидовСравненияПоТипу(Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	ВидСравненияПодразделения     = ВидСравнения.Равно;
	
	УстановитьВидимостьПанелиБыстрогоОтбора(); 	
	
КонецПроцедуры

// Процедура - обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии()
	
	ОбновитьЗаголовокОкна();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ КОМАНДНОЙ ПАНЕЛИ ФОРМЫ

// Процедура - обработчик нажатия кнопки "Сформировать"
Процедура ДействияФормыВыполнить(Кнопка)
	
	СформироватьОтчет(ЭлементыФормы.ДокументРезультат);
	
КонецПроцедуры

Процедура ДействияФормыНаПринтер(Кнопка)
	
	ОчереднаяОбласть = ЭлементыФормы.ДокументРезультат.НайтиТекст("Унифицированная форма № Т-51",ЭлементыФормы.ДокументРезультат.Область(1,1));
	
	Если ОчереднаяОбласть = Неопределено Тогда
		Сообщить("Отчет еще не сформирован!");
	Иначе
		СтрокаПечати = ОчереднаяОбласть.Верх;
		
		ПоследнийТитульный = Ложь;
		
		Пока НЕ ПоследнийТитульный Цикл
			
			ЭлементыФормы.ДокументРезультат.ОбластьПечати = ЭлементыФормы.ДокументРезультат.Область(СтрокаПечати,1,СтрокаПечати+12,12);
			ЭлементыФормы.ДокументРезультат.Автомасштаб = Истина;
			ЭлементыФормы.ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
			ЭлементыФормы.ДокументРезультат.Напечатать();
			
			// Пытаемся найти следующий титульный лист:
			ОбластьПоиска = ЭлементыФормы.ДокументРезультат.Область(СтрокаПечати+12,1);
			ОчереднаяОбласть = ЭлементыФормы.ДокументРезультат.НайтиТекст("Унифицированная форма № Т-51",ОбластьПоиска);
			
			// готовимся печатать не титульный лист
			Если ОчереднаяОбласть <> Неопределено Тогда
				// нашли, печатаем до нее
				СтрокаДоОчереднТитЛиста = ОчереднаяОбласть.Верх;
				ЭлементыФормы.ДокументРезультат.ОбластьПечати = ЭлементыФормы.ДокументРезультат.Область(СтрокаПечати+13,1,СтрокаДоОчереднТитЛиста-1,ЭлементыФормы.ДокументРезультат.ШиринаТаблицы);
				// продолжаем цикл
				ПоследнийТитульный = Ложь;
				СтрокаПечати = СтрокаДоОчереднТитЛиста;
			Иначе
				ЭлементыФормы.ДокументРезультат.ОбластьПечати = ЭлементыФормы.ДокументРезультат.Область(СтрокаПечати+13,1,ЭлементыФормы.ДокументРезультат.ВысотаТаблицы,ЭлементыФормы.ДокументРезультат.ШиринаТаблицы);
				// печатаем до конца и выходим из цикла
				ПоследнийТитульный = Истина;
			КонецЕсли;
			ЭлементыФормы.ДокументРезультат.Автомасштаб = Ложь;
			ЭлементыФормы.ДокументРезультат.ПолеСправа = 0;
			ЭлементыФормы.ДокументРезультат.ПолеСлева = 0;
			ЭлементыФормы.ДокументРезультат.Напечатать();
			
		КонецЦикла;
		
	КонецЕсли;

КонецПроцедуры

// Процедура - обработчик нажатия кнопки "Отбор"
Процедура ДействияФормыОтбор(Кнопка)
	
	УстановитьВидимостьПанелиБыстрогоОтбора()
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ


// Процедура - обработчик события "ПриИзменении" поля ввода периода.
//
Процедура МесяцСтрокаПриИзменении(Элемент)
	
	РаботаСДиалогами.ДатаКакМесяцПодобратьДатуПоТексту(Элемент.Значение, Период);
	Элемент.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(Период);
	
	ОбновитьЗаголовокОкна();
	
КонецПроцедуры

// Процедура - обработчик события "НачалоВыбораИзСписка" поля ввода периода.
//
Процедура МесяцСтрокаНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	РаботаСДиалогами.НачалоВыбораИзСпискаПредставленияПериодаРегистрации(Элемент, СтандартнаяОбработка, Период, ЭтаФорма);
	ОбновитьЗаголовокОкна();
КонецПроцедуры

// Процедура - обработчик события "Очистка" поля ввода периода.
//
Процедура МесяцСтрокаОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

// Процедура - обработчик события "Регулирование" поля ввода периода.
//
Процедура МесяцСтрокаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	Период = ДобавитьМесяц(Период, Направление);
	Элемент.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(Период);
	
	ОбновитьЗаголовокОкна();
	
КонецПроцедуры

// Процедура - обработчик события "АвтоПодборТекста" поля ввода периода.
//
Процедура МесяцСтрокаАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	РаботаСДиалогами.ДатаКакМесяцАвтоПодборТекста(Текст, ТекстАвтоПодбора, СтандартнаяОбработка);
КонецПроцедуры

// Процедура - обработчик события "ОкончаниеВводаТекста" поля ввода периода.
//
Процедура МесяцСтрокаОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	РаботаСДиалогами.ДатаКакМесяцОкончаниеВводаТекста(Текст, Значение, СтандартнаяОбработка);
КонецПроцедуры

// Процедура - обработчик изменения флажка отбора по организации.
//
Процедура ФлажокНастройкиОрганизацияПриИзменении(Элемент)
	ОбновитьЗаголовокОкна();
КонецПроцедуры

// Процедура - обработчик изменения данных в поле выбора вида сравнения
//
Процедура ПолеВидаСравненияОрганизацияПриИзменении(Элемент)
	
	Если ТипЗнч(Организация) = Тип("СправочникСсылка.Организации") Тогда
		ЗаписываемоеЗначение = Организация;                                                               
	Иначе
		Если Организация.Количество() = 0 Тогда    
			ЗаписываемоеЗначение = ОбщегоНазначения.ПустоеЗначениеТипа("СправочникСсылка.Организации")
		Иначе
			ЗаписываемоеЗначение = Организация[0].Значение;
		КонецЕсли;
	КонецЕсли;
	
	Если Элемент.Значение = ВидСравнения.ВСписке ИЛИ Элемент.Значение = ВидСравнения.НеВСписке Тогда
		
		ЭлементыФормы.ПолеНастройкиОрганизация.ОграничениеТипа	  = Новый ОписаниеТипов("СписокЗначений");
        Организация = Новый СписокЗначений;
		Если ЗначениеЗаполнено(ЗаписываемоеЗначение) Тогда
			Организация.Добавить(ЗаписываемоеЗначение);
		КонецЕсли;
		
	Иначе              
		
		ЭлементыФормы.ПолеНастройкиОрганизация.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Организации");
		Организация = ЗаписываемоеЗначение;
		
	КонецЕсли; 
	
	ОбновитьЗаголовокОкна();
	
КонецПроцедуры

// Процедура - обработчик изменения данных в поле значения отбора
//
Процедура ПолеНастройкиОрганизацияПриИзменении(Элемент)

	Если ТипЗнч(Элемент.Значение) = Тип("СправочникСсылка.Организации") Тогда
	
		Если Элемент.Значение.Пустая() Тогда
			ЭлементыФормы.ФлажокНастройкиОрганизация.Значение = Ложь
		Иначе
			ЭлементыФормы.ФлажокНастройкиОрганизация.Значение = Истина
		КонецЕсли; 
		
	Иначе // Список значений
	
		Если Элемент.Значение.Количество() = 0 Тогда
			ЭлементыФормы.ФлажокНастройкиОрганизация.Значение = Ложь
		Иначе
			ЭлементыФормы.ФлажокНастройкиОрганизация.Значение = Истина
		КонецЕсли;
	
	КонецЕсли; 
	
	ОбновитьЗаголовокОкна();
	
КонецПроцедуры // ПолеНастройкиОрганизацияПриИзменении()

// Процедура - обработчик изменения данных в поле выбора вида сравнения
//
Процедура ПолеВидаСравненияПодразделениеПриИзменении(Элемент)
	
	Если ТипЗнч(Подразделение) = Тип("СправочникСсылка.ПодразделенияОрганизаций") Тогда
		ЗаписываемоеЗначение = Подразделение;                                                               
	Иначе
		Если Подразделение.Количество() = 0 Тогда    
			ЗаписываемоеЗначение = ОбщегоНазначения.ПустоеЗначениеТипа("СправочникСсылка.ПодразделенияОрганизаций")
		Иначе
			ЗаписываемоеЗначение = Подразделение[0].Значение;
		КонецЕсли;
	КонецЕсли;
	
	Если Элемент.Значение = ВидСравнения.ВСписке ИЛИ Элемент.Значение = ВидСравнения.ВСпискеПоИерархии ИЛИ Элемент.Значение = ВидСравнения.НеВСписке ИЛИ Элемент.Значение = ВидСравнения.НеВСпискеПоИерархии Тогда
		
		ЭлементыФормы.ПолеНастройкиПодразделение.ОграничениеТипа	  = Новый ОписаниеТипов("СписокЗначений");
        Подразделение = Новый СписокЗначений;
		Если ЗначениеЗаполнено(ЗаписываемоеЗначение) Тогда
			Подразделение.Добавить(ЗаписываемоеЗначение);
		КонецЕсли;
		
	Иначе              
		
		ЭлементыФормы.ПолеНастройкиПодразделение.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций");
		Подразделение	 = ЗаписываемоеЗначение;
		
	КонецЕсли; 
	
КонецПроцедуры

// Процедура - обработчик изменения данных в поле значения отбора
//
Процедура ПолеНастройкиПодразделениеПриИзменении(Элемент)
	
	Если ТипЗнч(Элемент.Значение) = Тип("СписокЗначений") Тогда
		ОтборПодразделения = Элемент.Значение.Количество() > 0
	Иначе
		ОтборПодразделения = Не Элемент.Значение.Пустая()
	КонецЕсли;
	
КонецПроцедуры





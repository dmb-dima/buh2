#Если Клиент Тогда

// Функция формирует основной запрос по сбору данных для расчетной ведомости.
//
// Параметры
//
// Возвращаемое значение:
//   РезультатЗапроса   – результат запроса.
//
Функция СформироватьЗапрос()
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Период", 			 Период);
	Запрос.УстановитьПараметр("КонецМесяцаПериода",	 КонецМесяца(Период));
	Запрос.УстановитьПараметр("СледующийПериод",	 НачалоМесяца(КонецМесяца(Период)+1)); 
	Запрос.УстановитьПараметр("ВидСтроки",			 Перечисления.НДФЛРасчетыСБюджетомВидСтроки.Начисление);
	Запрос.УстановитьПараметр("Приход", 			 ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("Расход", 			 ВидДвиженияНакопления.Расход);
	Запрос.УстановитьПараметр("НеДействует",		 Перечисления.ВидыДействияСНачислением.Прекратить);
	
	ТекстУсловия = "";
	Если ОтборОрганизации Тогда
		
		Запрос.УстановитьПараметр("Организация", Организация);
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ВЫБОР
		|		КОГДА Организации.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|			ТОГДА Организации.Ссылка
		|		ИНАЧЕ Организации.ГоловнаяОрганизация
		|	КОНЕЦ КАК ГоловнаяОрганизация
		|ИЗ
		|	Справочник.Организации КАК Организации
		|ГДЕ
		|	Организации.Ссылка В(&Организация)";
		
		Запрос.УстановитьПараметр("ГоловнаяОрганизация", Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ГоловнаяОрганизация"));
		
		Если ВидСравненияОрганизации = ВидСравнения.Равно Тогда
			ВидСравненияОрганизацииСтрокой = " В (&Организация)" 
		ИначеЕсли ВидСравненияОрганизации = ВидСравнения.НеРавно Тогда
			ВидСравненияОрганизацииСтрокой = " НЕ В (&Организация)"
		ИначеЕсли ВидСравненияОрганизации = ВидСравнения.ВСписке Тогда
			ВидСравненияОрганизацииСтрокой = " В (&Организация)"
		Иначе
			ВидСравненияОрганизацииСтрокой = " НЕ В (&Организация)"
		КонецЕсли; 
		
		ТекстУсловия = "<имя поля организация>" + ВидСравненияОрганизацииСтрокой;
		
	КонецЕсли;  
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.Физлицо КАК Физлицо,
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	МАКСИМУМ(ВложенныйЗапрос.РаботникиОрганизацииПодразделениеОрганизации) КАК ПодразделениеОрганизации,
	|	МАКСИМУМ(ВложенныйЗапрос.РаботникиОрганизацииПодразделениеОрганизации.Наименование) КАК ПодразделениеОрганизацииНаименование,
	|	ЕСТЬNULL(МАКСИМУМ(ВложенныйЗапрос.Сотрудник), ЗНАЧЕНИЕ(Справочник.СотрудникиОрганизаций.ПустаяСсылка)) КАК Сотрудник,
	|	МАКСИМУМ(ВложенныйЗапрос.Должность.Наименование) КАК Должность,
	|	МАКСИМУМ(ВложенныйЗапрос.ТабельныйНомер) КАК ТабельныйНомер
	|ПОМЕСТИТЬ ВТПодразделенияРаботников
	|ИЗ
	|	(ВЫБРАТЬ
	|		РаботникиОрганизации.Физлицо КАК Физлицо,
	|		РаботникиОрганизации.Организация КАК Организация,
	|		РаботникиОрганизации.ПодразделениеОрганизации КАК РаботникиОрганизацииПодразделениеОрганизации,
	|		РаботникиОрганизации.Должность КАК Должность,
	|		РаботникиОрганизации.Сотрудник КАК Сотрудник,
	|		РаботникиОрганизации.ТабельныйНомер КАК ТабельныйНомер,
	|		NULL КАК ДоговорникиОрганизацийСрезПоследнихПодразделениеОрганизации
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ПоследниеДаты.Физлицо КАК Физлицо,
	|			ПоследниеДаты.Организация КАК Организация,
	|			РаботникиОрганизаций.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|			РаботникиОрганизаций.Должность КАК Должность,
	|			РаботникиОрганизаций.Сотрудник КАК Сотрудник,
	|			РаботникиОрганизаций.Сотрудник.Код КАК ТабельныйНомер
	|		ИЗ
	|			(ВЫБРАТЬ
	|				МАКСИМУМ(РаботникиОрганизаций.Период) КАК Период,
	|				РаботникиОрганизаций.Сотрудник.Физлицо КАК Физлицо,
	|				РаботникиОрганизаций.Организация КАК Организация
	|			ИЗ
	|				РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|			ГДЕ
	|				РаботникиОрганизаций.Период < &СледующийПериод
	|				И РаботникиОрганизаций.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
	|				И (РаботникиОрганизаций.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение))";
	Если ОтборОрганизации Тогда
		ТекстЗапроса = ТекстЗапроса + Символы.ПС + " И " + Символы.ПС + 
						СтрЗаменить(СтрЗаменить(ТекстУсловия,"<имя поля организация>","РаботникиОрганизаций.Организация"),"&Организация","&ГоловнаяОрганизация")
		
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса	+
	"		
		|		
		|		СГРУППИРОВАТЬ ПО
		|			РаботникиОрганизаций.Сотрудник.Физлицо,
		|			РаботникиОрганизаций.Организация) КАК ПоследниеДаты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
		|			ПО ПоследниеДаты.Период = РаботникиОрганизаций.Период
		|				И (РаботникиОрганизаций.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство))
		|				И ПоследниеДаты.Организация = РаботникиОрганизаций.Организация
		|				И ПоследниеДаты.Физлицо = РаботникиОрганизаций.Сотрудник.Физлицо) КАК РаботникиОрганизации
		|
		|) КАК ВложенныйЗапрос

	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Физлицо,
	|	ВложенныйЗапрос.Организация

	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Физлицо";	
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	ДанныеРаботниковТекст = "ВТПодразделенияРаботников";
	
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Данные.Организация КАК Организация,
	|	Данные.Организация.КодПоОКПО КАК ОрганизацияКодПоОКПО,
	|	Данные.ФизЛицо КАК ФизЛицо,
	|	ВЫРАЗИТЬ (Данные.Организация.НаименованиеПолное КАК СТРОКА(250)) КАК ОрганизацияПредставление,
	|	Данные.ФизЛицо.Наименование КАК ФизЛицоНаименование,
	|	Данные.Группа,
	|	Данные.ВидРасчета,
	|	СУММА(Данные.Результат) КАК Результат,
	|	ДанныеРаботников.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	ДанныеРаботников.ПодразделениеОрганизацииНаименование КАК ПодразделениеОрганизацииНаименование,
	|	ДанныеРаботников.Должность КАК Должность,
	|	ДанныеРаботников.ТабельныйНомер КАК ТабельныйНомер,
	|	ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.Размер КАК ТарифнаяСтавка
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОсновныеНачисленияРаботниковОрганизации.Ссылка.Организация КАК Организация,
	|		ВЫБОР
	|			КОГДА ОсновныеНачисленияРаботниковОрганизации.Ссылка.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА ОсновныеНачисленияРаботниковОрганизации.Ссылка.Организация
	|			ИНАЧЕ ОсновныеНачисленияРаботниковОрганизации.Ссылка.Организация.ГоловнаяОрганизация
	|		КОНЕЦ КАК ГоловнаяОрганизация,
	|		ОсновныеНачисленияРаботниковОрганизации.ФизЛицо КАК ФизЛицо,
	|		ОсновныеНачисленияРаботниковОрганизации.ВидРасчета КАК ВидРасчета,
	|		""Всего начислено"" КАК Группа,
	|		ОсновныеНачисленияРаботниковОрганизации.Результат КАК Результат
	|	ИЗ
	|		" + ДанныеРаботниковТекст + " КАК ДанныеРаботников
	
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
|	Документ.НачислениеЗарплатыРаботникамОрганизаций.Начисления КАК ОсновныеНачисленияРаботниковОрганизации
	|		ПО ОсновныеНачисленияРаботниковОрганизации.ФизЛицо = ДанныеРаботников.Физлицо
	|			И ОсновныеНачисленияРаботниковОрганизации.Ссылка.Организация = ДанныеРаботников.Организация
|ГДЕ
|	ОсновныеНачисленияРаботниковОрганизации.Ссылка.ПериодРегистрации = НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ)
|	И ОсновныеНачисленияРаботниковОрганизации.Ссылка.Проведен = ИСТИНА
|	И ОсновныеНачисленияРаботниковОрганизации.Результат <> 0
|	";

	
	Если ОтборОрганизации Тогда
		
		ТекстЗапроса = ТекстЗапроса + Символы.ПС + " И " + Символы.ПС + 
						СтрЗаменить(ТекстУсловия,"<имя поля организация>","ОсновныеНачисленияРаботниковОрганизации.Ссылка.Организация")
		
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса	+
	"		
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НДФЛРасчетыСБюджетом.ОбособленноеПодразделение,
	|		ВЫБОР
	|			КОГДА НДФЛРасчетыСБюджетом.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА НДФЛРасчетыСБюджетом.Организация
	|			ИНАЧЕ НДФЛРасчетыСБюджетом.Организация.ГоловнаяОрганизация
	|		КОНЕЦ,
	|		НДФЛРасчетыСБюджетом.ФизЛицо,
	|		""НДФЛ"",
	|		""Всего удержано"",
	|		НДФЛРасчетыСБюджетом.Налог
	|	ИЗ
	|		" + ДанныеРаботниковТекст + " КАК ДанныеРаботников
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.НДФЛРасчетыСБюджетом КАК НДФЛРасчетыСБюджетом
	|		ПО НДФЛРасчетыСБюджетом.ФизЛицо = ДанныеРаботников.Физлицо
	|			И ВЫБОР
	|			КОГДА НДФЛРасчетыСБюджетом.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА НДФЛРасчетыСБюджетом.Организация
	|			ИНАЧЕ НДФЛРасчетыСБюджетом.Организация.ГоловнаяОрганизация
	|		КОНЕЦ = ДанныеРаботников.Организация
	|	
	|	ГДЕ
	|		НДФЛРасчетыСБюджетом.Период МЕЖДУ НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ) И КОНЕЦПЕРИОДА(&Период, МЕСЯЦ)
	|		И НДФЛРасчетыСБюджетом.ВидДвижения = &Приход 
	|		И НДФЛРасчетыСБюджетом.ИсчисленоИзЗарплаты
	|		И НДФЛРасчетыСБюджетом.ВидСтроки = &ВидСтроки";
		
	Если ОтборОрганизации Тогда
		
		ТекстЗапроса = ТекстЗапроса + Символы.ПС + " И " + Символы.ПС + 
						СтрЗаменить(ТекстУсловия,"<имя поля организация>","НДФЛРасчетыСБюджетом.ОбособленноеПодразделение")
		
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса	+
	"		
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РегистрНДФЛКЗачету.Организация,
	|		ВЫБОР
	|			КОГДА РегистрНДФЛКЗачету.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА РегистрНДФЛКЗачету.Организация
	|			ИНАЧЕ РегистрНДФЛКЗачету.Организация.ГоловнаяОрганизация
	|		КОНЕЦ,
	|		РегистрНДФЛКЗачету.ФизЛицо,
	|		""Конечное сальдо"",
	|		""Я"",
	|		РегистрНДФЛКЗачету.СуммаНДФЛКЗачетуОстаток
	|	ИЗ
	|		РегистрНакопления.НДФЛКЗачету.Остатки(
	|			&СледующийПериод,
	|			ФизЛицо В
	|					(ВЫБРАТЬ
	|						Физлицо
	|					ИЗ " + ДанныеРаботниковТекст + " КАК ДанныеРаботников)" + ?(ОтборОрганизации, " И ","") + СтрЗаменить(ТекстУсловия,"<имя поля организация>","Организация") + ") КАК РегистрНДФЛКЗачету
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СальдоКонечное.Организация,
	|		ВЫБОР
	|			КОГДА СальдоКонечное.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА СальдоКонечное.Организация
	|			ИНАЧЕ СальдоКонечное.Организация.ГоловнаяОрганизация
	|		КОНЕЦ,
	|		СальдоКонечное.Физлицо,
	|		""Конечное сальдо"",
	|		""Я"",
	|		СальдоКонечное.СуммаВзаиморасчетовОстаток
	|	ИЗ
	|		РегистрНакопления.ВзаиморасчетыСРаботникамиОрганизаций.Остатки(
	|			&СледующийПериод,
	|			ФизЛицо В
	|					(ВЫБРАТЬ
	|						Физлицо
	|					ИЗ " + ДанныеРаботниковТекст + " КАК ДанныеРаботников)" + ?(ОтборОрганизации, " И ","") + СтрЗаменить(ТекстУсловия,"<имя поля организация>","Организация") + ") КАК СальдоКонечное
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СальдоКонечное.Организация,
	|		ВЫБОР
	|			КОГДА СальдоКонечное.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА СальдоКонечное.Организация
	|			ИНАЧЕ СальдоКонечное.Организация.ГоловнаяОрганизация
	|		КОНЕЦ,
	|		СальдоКонечное.Физлицо,
	|		""К выплате"",
	|		""ЯЯ"",
	|		СальдоКонечное.СуммаВзаиморасчетовОстаток
	|	ИЗ
	|		РегистрНакопления.ВзаиморасчетыСРаботникамиОрганизаций.Остатки(
	|			&СледующийПериод,
	|			(ПериодВзаиморасчетов = &Период
	|					)
	|				И ФизЛицо В
	|					(ВЫБРАТЬ
	|						Физлицо
	|					ИЗ " + ДанныеРаботниковТекст + " КАК ДанныеРаботников)" + ?(ОтборОрганизации, " И ","") + СтрЗаменить(ТекстУсловия,"<имя поля организация>","Организация") + ") КАК СальдоКонечное) КАК Данные
	|		ЛЕВОЕ СОЕДИНЕНИЕ " + ДанныеРаботниковТекст + " КАК ДанныеРаботников
	|		ПО Данные.ФизЛицо = ДанныеРаботников.Физлицо
	|			И Данные.ГоловнаяОрганизация = ДанныеРаботников.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|		(ВЫБРАТЬ 
	|			Начисления.Сотрудник,
	|			Начисления.Организация,
	|			ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.Размер,
	|			ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ВидРасчетаИзмерение 
	|			ИЗ(ВЫБРАТЬ
	|			ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.Сотрудник,
	|			ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.Организация,
	|			МИНИМУМ(ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ВидРасчетаИзмерение.Код) КАК КодВидаРасчета
	|		
	|		
	|		ИЗ
	|		
	|		РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций.СрезПоследних(
	|		&КонецМесяцаПериода, Размер <> 0 И
	|		     Сотрудник В (ВЫБРАТЬ Сотрудник ИЗ " + ДанныеРаботниковТекст + " КАК ДанныеРаботников)) КАК ПлановыеНачисленияРаботниковОрганизацииСрезПоследних
	|		СГРУППИРОВАТЬ ПО Сотрудник, Организация) КАК Начисления
	|			ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций.СрезПоследних(
	|		&КонецМесяцаПериода, Размер <> 0 И
	|		     Сотрудник В (ВЫБРАТЬ Сотрудник ИЗ " + ДанныеРаботниковТекст + " КАК ДанныеРаботников)) КАК ПлановыеНачисленияРаботниковОрганизацииСрезПоследних
	|		ПО ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.Сотрудник =  Начисления.Сотрудник
	|		И ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.Организация = Начисления.Организация
	|		И ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ВидРасчетаИзмерение.Код = Начисления.КодВидаРасчета
	|		 ) КАК ПлановыеНачисленияРаботниковОрганизацииСрезПоследних
	|		ПО ДанныеРаботников.Сотрудник = ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.Сотрудник
	|			И ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.Организация = Данные.ГоловнаяОрганизация";
	
	Если ОтборПодразделения Тогда
		Запрос.УстановитьПараметр("ПодразделениеОрганизации", Подразделение);
		Если ВидСравненияПодразделения = ВидСравнения.Равно Тогда
			ВидСравненияСтрокой = " = &ПодразделениеОрганизации" 
		ИначеЕсли ВидСравненияПодразделения = ВидСравнения.НеРавно Тогда
			ВидСравненияСтрокой = " <> &ПодразделениеОрганизации"
		ИначеЕсли ВидСравненияПодразделения = ВидСравнения.ВСписке Тогда
			ВидСравненияСтрокой = " В (&ПодразделениеОрганизации)"
		ИначеЕсли ВидСравненияПодразделения = ВидСравнения.НеВСписке Тогда
			ВидСравненияСтрокой = " НЕ В (&ПодразделениеОрганизации)"
		ИначеЕсли ВидСравненияПодразделения = ВидСравнения.ВСпискеПоИерархии ИЛИ ВидСравненияПодразделения = ВидСравнения.ВИерархии Тогда
			ВидСравненияСтрокой = " В ИЕРАРХИИ (&ПодразделениеОрганизации)"
		ИначеЕсли ВидСравненияПодразделения = ВидСравнения.НеВСпискеПоИерархии ИЛИ ВидСравненияПодразделения = ВидСравнения.НеВИерархии Тогда
			ВидСравненияСтрокой = " НЕ В ИЕРАРХИИ (&ПодразделениеОрганизации)"
		КонецЕсли; 
		
		ТекстЗапроса = ТекстЗапроса + Символы.ПС + " 
	|				
	|ГДЕ				
	|	ДанныеРаботников.ПодразделениеОрганизации " + ВидСравненияСтрокой
		
	КонецЕсли;	
	
	ТекстЗапроса = ТекстЗапроса + "
	|
	|СГРУППИРОВАТЬ ПО
	|	Данные.Организация,
	|	Данные.ФизЛицо,
	|	Данные.Группа,
	|	Данные.ВидРасчета,
	|	ДанныеРаботников.ПодразделениеОрганизации,
	|	ДанныеРаботников.ПодразделениеОрганизацииНаименование,
	|	ДанныеРаботников.Должность,
	|	ДанныеРаботников.ТабельныйНомер,
	|	ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.Размер
    |
	|УПОРЯДОЧИТЬ ПО
	|	ФизЛицоНаименование,
    |   Группа
    |
	|ИТОГИ
    |	СУММА(Результат)
    |ПО
	|	Организация, 
    |	ФизЛицо";
	
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить();

КонецФункции

Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок = Ложь, ВысотаЗаголовка = 0, ТолькоЗаголовок = Ложь) Экспорт

	ДокументРезультат.Очистить(); 
	
	Макет					= ПолучитьМакет("Т51");
	ОбластьШапкаДокумента	= Макет.ПолучитьОбласть("ШапкаДокумента");
	ОбластьШапка			= Макет.ПолучитьОбласть("Шапка");
	ОбластьПодвал			= Макет.ПолучитьОбласть("Подвал");
	ОбластьСтрока			= Макет.ПолучитьОбласть("Строка");
	ОбластьПодвалСтр		= Макет.ПолучитьОбласть("ИтогоПоСтранице");
	ОбластьПодвалВед		= Макет.ПолучитьОбласть("ИтогоПоВедомости");

	РезультатЗапроса = СформироватьЗапрос();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		// массив с двумя строками - для разбиения на страницы
		ВыводимыеОбласти = Новый Массив();
		ВыводимыеОбласти.Добавить(ОбластьСтрока);
		ВыводимыеОбласти.Добавить(ОбластьПодвалСтр);
		ВыводимыеОбласти.Добавить(ОбластьПодвалВед);
		
		ДокументРезультат.Вывести(ОбластьШапкаДокумента);
		ДокументРезультат.Вывести(ОбластьШапка);
		
		ВыводимыеОбласти.Добавить(ОбластьПодвал);
		ОбластьСтрока.Параметры.ФизЛицо	 = " " + Символы.ПС + " ";
		Пока ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти, Ложь) Цикл
			ДокументРезультат.Вывести(ОбластьСтрока);
		КонецЦикла;
		
		ДокументРезультат.Вывести(ОбластьПодвалСтр);
		ДокументРезультат.Вывести(ОбластьПодвалВед);
		ДокументРезультат.Вывести(ОбластьПодвал);
		ДокументРезультат.ПолеСлева  = 5;
		ДокументРезультат.ПолеСправа = 0;
		
		Возврат;
		
	КонецЕсли;
	
	НомерОрганизации = 1;
	ВыборкаПоОрганизациям = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	КоличествоОрганизаций = ВыборкаПоОрганизациям.Количество();
	
	Пока ВыборкаПоОрганизациям.Следующий() Цикл
		
		// массив с двумя строками - для разбиения на страницы
		ВыводимыеОбласти = Новый Массив();
		ВыводимыеОбласти.Добавить(ОбластьСтрока);
		ВыводимыеОбласти.Добавить(ОбластьПодвалСтр);
		// Начинаем новый отсчет итогов
		ОбластьПодвалСтр.Параметры.Повременно			  = 0;
		ОбластьПодвалВед.Параметры.Повременно			  = 0;
		ОбластьПодвалСтр.Параметры.Сдельно				  = 0;
		ОбластьПодвалВед.Параметры.Сдельно				  = 0;
		ОбластьПодвалСтр.Параметры.Другое				  = 0;
		ОбластьПодвалВед.Параметры.Другое				  = 0;
		ОбластьПодвалСтр.Параметры.ВсегоНачислено		  = 0;
		ОбластьПодвалВед.Параметры.ВсегоНачислено		  = 0;
		ОбластьПодвалСтр.Параметры.НДФЛ					  = 0;
		ОбластьПодвалВед.Параметры.НДФЛ					  = 0;
		ОбластьПодвалСтр.Параметры.ДругоеУдержано		  = 0;
		ОбластьПодвалВед.Параметры.ДругоеУдержано		  = 0;
		ОбластьПодвалСтр.Параметры.ДолгЗаОрганизацией	  = 0;
		ОбластьПодвалВед.Параметры.ДолгЗаОрганизацией	  = 0;
		ОбластьПодвалСтр.Параметры.ДолгЗаРаботником		  = 0;
		ОбластьПодвалВед.Параметры.ДолгЗаРаботником		  = 0;
		ОбластьПодвалСтр.Параметры.КВыплате				  = 0;
		ОбластьПодвалВед.Параметры.КВыплате				  = 0;
		
		
		ВыводитьПодразделение = ОтборПодразделения И ТипЗнч(Подразделение) = Тип("СправочникСсылка.ПодразделенияОрганизаций");

		// Разделитель строки для следующей организации
		Если НомерОрганизации > 1 Тогда
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц()
		КонецЕсли;
	
		ОбластьШапкаДокумента.Параметры.КодПоОКПО		 = ВыборкаПоОрганизациям.ОрганизацияКодПоОКПО;
		ОбластьШапкаДокумента.Параметры.Организация		 = СокрП(ВыборкаПоОрганизациям.ОрганизацияПредставление);
		ОбластьШапкаДокумента.Параметры.ОтчетныйПериодС  = НачалоМесяца(Период);
		ОбластьШапкаДокумента.Параметры.ОтчетныйПериодПо = КонецМесяца(Период);
		ОбластьШапкаДокумента.Параметры.ДатаД			 = ОбщегоНазначения.ПолучитьРабочуюДату();
		
		ДокументРезультат.Вывести(ОбластьШапкаДокумента);
		ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		ДокументРезультат.Вывести(ОбластьШапка);
	
		НомерПП     = 1;
		ВыборкаПоФЛ = ВыборкаПоОрганизациям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		ВсегоСтрокДокумента = ВыборкаПоФЛ.Количество(); // всего количество физлиц в данной ведомости
		
		Пока ВыборкаПоФЛ.Следующий() Цикл
			
			ОбластьСтрока.Параметры.Повременно	 	   = 0;
			ОбластьСтрока.Параметры.Сдельно	    	   = 0;
			ОбластьСтрока.Параметры.Другое	     	   = 0;
			ОбластьСтрока.Параметры.НДФЛ		   	   = 0;
			ОбластьСтрока.Параметры.ВсегоНачислено	   = 0;
			ОбластьСтрока.Параметры.ДругоеУдержано	   = 0;
			ОбластьСтрока.Параметры.ВсегоУдержано	   = 0;
			ОбластьСтрока.Параметры.ДолгЗаОрганизацией = 0;
			ОбластьСтрока.Параметры.ДолгЗаРаботником   = 0;
			ОбластьСтрока.Параметры.КВыплате		   = 0;
			
			
			Выборка = ВыборкаПоФЛ.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				
				Если ВыводитьПодразделение Тогда
					ВыводитьПодразделение = Не ВыводитьПодразделение;
					ДокументРезультат.Область(ДокументРезультат.ВысотаТаблицы - 11,1).Текст = Выборка.ПодразделениеОрганизацииНаименование;
				КонецЕсли;
				
				// тарифная ставка
				ОписаниеТарифнаяСтавка = Формат(Выборка.ТарифнаяСтавка,"ЧЦ=15; ЧДЦ=2; ЧН=' '; ЧГ=0");
				
				ОбластьСтрока.Параметры.ТарифнаяСтавка = ОписаниеТарифнаяСтавка;
				ОбластьСтрока.Параметры.ТабельныйНомер = Выборка.ТабельныйНомер;
				ОбластьСтрока.Параметры.Должность = Выборка.Должность;
					
				Если Выборка.Группа = "Всего начислено" Тогда
				
					ОбластьСтрока.Параметры.Повременно		= ОбластьСтрока.Параметры.Повременно	+ Выборка.Результат;
					ОбластьПодвалСтр.Параметры.Повременно	= ОбластьПодвалСтр.Параметры.Повременно	+ Выборка.Результат;
					ОбластьПодвалВед.Параметры.Повременно	= ОбластьПодвалВед.Параметры.Повременно	+ Выборка.Результат;
						
					ОбластьСтрока.Параметры.ВсегоНачислено		= ОбластьСтрока.Параметры.ВсегоНачислено	+ Выборка.Результат;
					ОбластьПодвалСтр.Параметры.ВсегоНачислено	= ОбластьПодвалСтр.Параметры.ВсегоНачислено	+ Выборка.Результат;
					ОбластьПодвалВед.Параметры.ВсегоНачислено	= ОбластьПодвалВед.Параметры.ВсегоНачислено	+ Выборка.Результат;
					
				ИначеЕсли Выборка.Группа = "Всего удержано" Тогда
					
					Если Выборка.ВидРасчета = "НДФЛ" Тогда
						ОбластьСтрока.Параметры.НДФЛ	= ОбластьСтрока.Параметры.НДФЛ		+ Выборка.Результат;
						ОбластьПодвалСтр.Параметры.НДФЛ	= ОбластьПодвалСтр.Параметры.НДФЛ	+ Выборка.Результат;
						ОбластьПодвалВед.Параметры.НДФЛ	= ОбластьПодвалВед.Параметры.НДФЛ	+ Выборка.Результат;
					Иначе
						ОбластьСтрока.Параметры.ДругоеУдержано		= ОбластьСтрока.Параметры.ДругоеУдержано	+ Выборка.Результат;
						ОбластьПодвалСтр.Параметры.ДругоеУдержано	= ОбластьПодвалСтр.Параметры.ДругоеУдержано	+ Выборка.Результат;
						ОбластьПодвалВед.Параметры.ДругоеУдержано	= ОбластьПодвалВед.Параметры.ДругоеУдержано	+ Выборка.Результат;
					КонецЕсли;
			
					ОбластьСтрока.Параметры.ВсегоУдержано = ОбластьСтрока.Параметры.ВсегоУдержано + Выборка.Результат;
					
				ИначеЕсли Выборка.Группа = "Я" Тогда // Конечное сальдо
					
					Если Выборка.Результат > 0 Тогда
						ОбластьСтрока.Параметры.ДолгЗаОрганизацией		= ОбластьСтрока.Параметры.ДолгЗаОрганизацией	+ Выборка.Результат;
						ОбластьПодвалСтр.Параметры.ДолгЗаОрганизацией	= ОбластьПодвалСтр.Параметры.ДолгЗаОрганизацией	+ Выборка.Результат;
						ОбластьПодвалВед.Параметры.ДолгЗаОрганизацией	= ОбластьПодвалВед.Параметры.ДолгЗаОрганизацией	+ Выборка.Результат;
					Иначе
						ОбластьСтрока.Параметры.ДолгЗаРаботником	= ОбластьСтрока.Параметры.ДолгЗаРаботником		- Выборка.Результат;
						ОбластьПодвалСтр.Параметры.ДолгЗаРаботником	= ОбластьПодвалСтр.Параметры.ДолгЗаРаботником	- Выборка.Результат;
						ОбластьПодвалВед.Параметры.ДолгЗаРаботником	= ОбластьПодвалВед.Параметры.ДолгЗаРаботником	- Выборка.Результат;
					КонецЕсли; 
					
				ИначеЕсли Выборка.Группа = "ЯЯ" Тогда // К выплате
					
					Если Выборка.Результат > 0 Тогда
						ОбластьСтрока.Параметры.КВыплате	= ОбластьСтрока.Параметры.КВыплате		+ Выборка.Результат;
						ОбластьПодвалСтр.Параметры.КВыплате	= ОбластьПодвалСтр.Параметры.КВыплате	+ Выборка.Результат;
						ОбластьПодвалВед.Параметры.КВыплате	= ОбластьПодвалВед.Параметры.КВыплате	+ Выборка.Результат;
					КонецЕсли; 
				КонецЕсли; 
				
			КонецЦикла;
			
			ОбластьСтрока.Параметры.НомерПП  = НомерПП;
			ОбластьСтрока.Параметры.ФизЛицо	 = ОбщегоНазначения.ФамилияИнициалыФизЛица(ВыборкаПоФЛ.ФизЛицоНаименование);
			
			// Проверим, уместится ли строка на странице или надо открывать новую страницу
			ВывестиПодвалЛиста = Не ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти);
			Если Не ВывестиПодвалЛиста и НомерПП = ВсегоСтрокДокумента Тогда
				//все строки отчета перебрали, они все еще умещаются на странице
				ВыводимыеОбласти.Добавить(ОбластьПодвалВед);
				ВыводимыеОбласти.Добавить(ОбластьПодвал);
				// умещаются ли теперь, вместе подвалом:
				ВывестиПодвалЛиста = Не ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти);
			КонецЕсли;
			Если ВывестиПодвалЛиста Тогда
				
				ОбластьПодвалСтр.Параметры.Повременно			  = ОбластьПодвалСтр.Параметры.Повременно			- ОбластьСтрока.Параметры.Повременно;
				ОбластьПодвалСтр.Параметры.Сдельно				  = ОбластьПодвалСтр.Параметры.Сдельно 				- ОбластьСтрока.Параметры.Сдельно;
				ОбластьПодвалСтр.Параметры.Другое				  = ОбластьПодвалСтр.Параметры.Другое 				- ОбластьСтрока.Параметры.Другое;
				ОбластьПодвалСтр.Параметры.ВсегоНачислено		  = ОбластьПодвалСтр.Параметры.ВсегоНачислено 		- ОбластьСтрока.Параметры.ВсегоНачислено;
				ОбластьПодвалСтр.Параметры.НДФЛ					  = ОбластьПодвалСтр.Параметры.НДФЛ 				- ОбластьСтрока.Параметры.НДФЛ;
				ОбластьПодвалСтр.Параметры.ДругоеУдержано		  = ОбластьПодвалСтр.Параметры.ДругоеУдержано 		- ОбластьСтрока.Параметры.ДругоеУдержано;
				ОбластьПодвалСтр.Параметры.ДолгЗаОрганизацией	  = ОбластьПодвалСтр.Параметры.ДолгЗаОрганизацией 	- ОбластьСтрока.Параметры.ДолгЗаОрганизацией;
				ОбластьПодвалСтр.Параметры.ДолгЗаРаботником		  = ОбластьПодвалСтр.Параметры.ДолгЗаРаботником 	- ОбластьСтрока.Параметры.ДолгЗаРаботником;
				ОбластьПодвалСтр.Параметры.КВыплате				  = ОбластьПодвалСтр.Параметры.КВыплате 			- ОбластьСтрока.Параметры.КВыплате;
				
				ДокументРезультат.Вывести(ОбластьПодвалСтр);
				
				// обнулим итоги по странице
				ОбластьПодвалСтр.Параметры.Повременно			  = ОбластьСтрока.Параметры.Повременно;
				ОбластьПодвалСтр.Параметры.Сдельно				  = ОбластьСтрока.Параметры.Сдельно;
				ОбластьПодвалСтр.Параметры.Другое				  = ОбластьСтрока.Параметры.Другое;
				ОбластьПодвалСтр.Параметры.ВсегоНачислено		  = ОбластьСтрока.Параметры.ВсегоНачислено;
				ОбластьПодвалСтр.Параметры.НДФЛ					  = ОбластьСтрока.Параметры.НДФЛ;
				ОбластьПодвалСтр.Параметры.ДругоеУдержано		  = ОбластьСтрока.Параметры.ДругоеУдержано;
				ОбластьПодвалСтр.Параметры.ДолгЗаОрганизацией	  = ОбластьСтрока.Параметры.ДолгЗаОрганизацией;
				ОбластьПодвалСтр.Параметры.ДолгЗаРаботником		  = ОбластьСтрока.Параметры.ДолгЗаРаботником;
				ОбластьПодвалСтр.Параметры.КВыплате				  = ОбластьСтрока.Параметры.КВыплате;
				
				ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
				ДокументРезультат.Вывести(ОбластьШапка);
			КонецЕсли;
			
			ДокументРезультат.Вывести(ОбластьСтрока);
			НомерПП = НомерПП + 1;
			
		КонецЦикла;	
		
		// Если выводим несколько организаций, то нужно вывести подвал для не последних организаций.
		Если КоличествоОрганизаций > 1 И НомерОрганизации < КоличествоОрганизаций Тогда
			ВыводимыеОбласти.Добавить(ОбластьПодвалВед);
			ВыводимыеОбласти.Добавить(ОбластьПодвал);
			Для Сч = 1 По ОбластьСтрока.Параметры.Количество() Цикл
				ОбластьСтрока.Параметры.Установить(Сч - 1,""); 
			КонецЦикла;
			ОбластьСтрока.Параметры.ФизЛицо = " " + Символы.ПС + " ";
			Пока ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти, Ложь) Цикл
				ДокументРезультат.Вывести(ОбластьСтрока);
			КонецЦикла;
			ДокументРезультат.Вывести(ОбластьПодвалСтр);
			// обнулим итоги по странице
			ОбластьПодвалСтр.Параметры.Повременно			  = 0;
			ОбластьПодвалСтр.Параметры.Сдельно				  = 0;
			ОбластьПодвалСтр.Параметры.Другое			      = 0;
			ОбластьПодвалСтр.Параметры.ВсегоНачислено		  = 0;
			ОбластьПодвалСтр.Параметры.НДФЛ					  = 0;
			ОбластьПодвалСтр.Параметры.ДругоеУдержано		  = 0;
			ОбластьПодвалСтр.Параметры.ДолгЗаОрганизацией	  = 0;
			ОбластьПодвалСтр.Параметры.ДолгЗаРаботником		  = 0;
			ОбластьПодвалСтр.Параметры.КВыплате				  = 0;

			ДокументРезультат.Вывести(ОбластьПодвалВед);
			ДокументРезультат.Вывести(ОбластьПодвал);
		КонецЕсли; 
		
		НомерОрганизации = НомерОрганизации + 1;
		
	КонецЦикла;
	
	ВыводимыеОбласти = Новый Массив();
	ВыводимыеОбласти.Добавить(ОбластьСтрока);
	ВыводимыеОбласти.Добавить(ОбластьПодвалСтр);
	ВыводимыеОбласти.Добавить(ОбластьПодвалВед);
	ВыводимыеОбласти.Добавить(ОбластьПодвал);
	Для Сч = 1 По ОбластьСтрока.Параметры.Количество() Цикл
		ОбластьСтрока.Параметры.Установить(Сч - 1,""); 
	КонецЦикла;
	ОбластьСтрока.Параметры.ФизЛицо = " " + Символы.ПС + " ";
	Пока ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти, Ложь) Цикл
		ДокументРезультат.Вывести(ОбластьСтрока);
	КонецЦикла;
	ДокументРезультат.Вывести(ОбластьПодвалСтр);
	ДокументРезультат.Вывести(ОбластьПодвалВед);
	ДокументРезультат.Вывести(ОбластьПодвал);
	ДокументРезультат.ПолеСлева  = 5;
	ДокументРезультат.ПолеСправа = 0;
	
КонецПроцедуры // СформироватьОтчет()

#КонецЕсли
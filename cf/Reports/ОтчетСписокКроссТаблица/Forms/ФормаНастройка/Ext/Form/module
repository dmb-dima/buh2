////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Заполняет диалог по значениям реквизитов отчета
//
// Параметры:
//	Нет.
//
Процедура ЗаполнитьДиалогПоОбъекту()

	// Здесь должно быть расположено заполнение реквизитов формы
	// по реквизитам отчета, если они непосредственно не связаны
	// с реквизитами отчета (если таковые имеются)
	Если мВыбиратьИмяРегистра = Ложь Тогда
		ЭлементыФормы.ПанельРазделУчета.Свертка = РежимСверткиЭлементаУправления.Верх;

	Иначе
		ЭлементыФормы.ПанельРазделУчета.Свертка = РежимСверткиЭлементаУправления.Нет;

	КонецЕсли;

	Если мРежимВводаПериода = 0 Тогда  // произвольный период
		ЭлементыФормы.НадписьДатаНач.Заголовок = "Период с:";

		ЭлементыФормы.ДатаНач.Данные = "ДатаНач";
		
		// Элементы управления произвольным периодом
		ЭлементыФормы.ДатаКон.Видимость = Истина;
		ЭлементыФормы.НадписьДатаКон.Видимость = Истина;
		ЭлементыФормы.КнопкаНастройкаПериода.Видимость = Истина;
		
		// Элементы управления периодом
		ЭлементыФормы.Период.Видимость = Ложь;
		ЭлементыФормы.ПлюсПериод.Видимость = Ложь;
		ЭлементыФормы.МинусПериод.Видимость = Ложь;
	
	ИначеЕсли мРежимВводаПериода = 1 Тогда // дата
		ЭлементыФормы.НадписьДатаНач.Заголовок = "На дату:";

		ЭлементыФормы.ДатаНач.Данные = "ДатаКон";
		
		// Элементы управления произвольным периодом
		ЭлементыФормы.ДатаКон.Видимость = Ложь;
		ЭлементыФормы.НадписьДатаКон.Видимость = Ложь;
		ЭлементыФормы.КнопкаНастройкаПериода.Видимость = Ложь;

		// Элементы управления периодом
		ЭлементыФормы.Период.Видимость = Ложь;
		ЭлементыФормы.ПлюсПериод.Видимость = Ложь;
		ЭлементыФормы.МинусПериод.Видимость = Ложь;
	
	Иначе // периоды Месяц, Квартал, Год
		ЭлементыФормы.НадписьДатаНач.Заголовок = "Период:";

		// Элементы управления датой
		ЭлементыФормы.ДатаНач.Видимость = Ложь;
		
		// Элементы управления произвольным периодом
		ЭлементыФормы.ДатаКон.Видимость = Ложь;
		ЭлементыФормы.НадписьДатаКон.Видимость = Ложь;
		ЭлементыФормы.КнопкаНастройкаПериода.Видимость = Ложь;
		
		// Элементы управления периодом
		ЭлементыФормы.Период.Видимость = Истина;
		ЭлементыФормы.ПлюсПериод.Видимость = Истина;
		ЭлементыФормы.МинусПериод.Видимость = Истина;
		Если мРежимВводаПериода = 2 Тогда // месяц
			ЭлементыФормы.Период.Формат = "ДФ='ММММ гггг ""г.""'";
		ИначеЕсли мРежимВводаПериода = 3 Тогда // квартал
			ЭлементыФормы.Период.Формат = "ДФ='к ""квартал"" гггг ""г.""'";
		ИначеЕсли мРежимВводаПериода = 4 Тогда // год
			ЭлементыФормы.Период.Формат = "ДФ='гггг ""г.""'";
		КонецЕсли;
	
	КонецЕсли; 
	
КонецПроцедуры // ЗаполнитьДиалогПоОбъекту()

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "Перед открытием" формы отчета.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

	Заголовок = мНазваниеОтчета;
	
	// для отображения периода
	Если мРежимВводаПериода = 2 Тогда // месяц
		ЭлементыФормы.Период.Формат = "ДФ='ММММ гггг ""г.""'";
	ИначеЕсли мРежимВводаПериода = 3 Тогда // квартал
		ЭлементыФормы.Период.Формат = "ДФ='к ""квартал"" гггг ""г.""'";
	ИначеЕсли мРежимВводаПериода = 4 Тогда // год
		ЭлементыФормы.Период.Формат = "ДФ='гггг ""г.""'";
	КонецЕсли;
	ДатаНач = ДатаНач;
	
	// Отчет без показателей
	Если Показатели.Количество()=0 Тогда
		
		ЭлементыФормы.Удалить(ЭлементыФормы.СписокПоказателей);
		ЭлементыФормы.Удалить(ЭлементыФормы.РамкаГруппыПоказатели);
		ЭлементыФормы.Удалить(ЭлементыФормы.ВыводитьПоказателиВСтроку);
		ЭлементыФормы.Удалить(ЭлементыФормы.КоманднаяПанельСписокПоказателей);
		ЭлементыФормы.Удалить(ЭлементыФормы.ВыводитьИтогиПоВсемУровням);
		
		ЭлементыФормы.Удалить(ЭлементыФормы.ИзмеренияКолонки);
		ЭлементыФормы.Удалить(ЭлементыФормы.КоманднаяПанельИзмеренияКолонки);
		ЭлементыФормы.Удалить(ЭлементыФормы.КоманднаяПанельСтрокиВКолонки);
		
	КонецЕсли; 

КонецПроцедуры // ПередОткрытием()


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ДИАЛОГА

// Процедура - обработчик изменения раздела учета.
//
Процедура ИмяРегистраПриИзменении(Элемент)

	Заголовок = мНазваниеОтчета;

	Состояние("Заполнение по умолчанию");
	ЗаполнитьНачальныеНастройки();
	ЗаполнитьДиалогПоОбъекту();
	Оповестить("ИзмененоИмяРегистра",,ЭтаФорма);
	
КонецПроцедуры // ПолеВыбораИмяРегистраПриИзменении()

// Процедура - обработчик нажатия кнопки настройки периода.
//
Процедура КнопкаНастройкаПериодаНажатие(Элемент)
	
	НП = Новый НастройкаПериода;
	НП.УстановитьПериод(ДатаНач, ДатаКон);
	Если НП.Редактировать() Тогда
		ДатаНач = НП.ПолучитьДатуНачала();
		ДатаКон = НП.ПолучитьДатуОкончания();
	КонецЕсли;

КонецПроцедуры // КнопкаНастройкаПериодаНажатие()

// Процедура - обработчик нажатия кнопки ОК.
//
Процедура ОсновныеДействияФормыОК(Кнопка)

	ЕстьОшибки = Ложь;
	Для Инд=0 По ПостроительОтчета.ИзмеренияКолонки.Количество()-1  Цикл
	
		Для Инд2=0 По ПостроительОтчета.ИзмеренияСтроки.Количество()-1  Цикл

			Если ПостроительОтчета.ИзмеренияКолонки[Инд].ПутьКДанным = ПостроительОтчета.ИзмеренияСтроки[Инд2].ПутьКДанным Тогда

				Предупреждение("Повторяющаяся группировка " + ПостроительОтчета.ИзмеренияКолонки[Инд].Представление +"."+ Символы.ПС+
				"Нельзя использовать одинаковые поля группировки в строках и в колонках!", 30);
				ЕстьОшибки = Истина;
			
			КонецЕсли; 
		КонецЦикла;
	
	КонецЦикла;
	
	Для Каждого СтрокаОтбора Из ПостроительОтчета.Отбор Цикл
		
		Если НЕ ЗначениеЗаполнено(СтрокаОтбора.ПутьКДанным) Тогда
			Предупреждение("В отборе не должно быть пустых полей!", 30);
			ЕстьОшибки = Истина;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;


	Если Показатели.Количество() > 0 Тогда
		ЕстьПоказатели = Ложь;
		Для Каждого Показатель Из Показатели Цикл
			Если Показатель.Использование Тогда
				ЕстьПоказатели = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если НЕ ЕстьПоказатели Тогда
			Предупреждение("Не выбраны показатели!", 30);
			ЕстьОшибки = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если ЕстьОшибки Тогда
		Возврат;
	КонецЕсли;
	
	Закрыть(Истина);
	
КонецПроцедуры // ОсновныеДействияФормыОК()

// Процедура - обработчик нажатия кнопки "Установить все" командной панели списка показателей
//
Процедура КоманднаяПанельСписокПоказателейУстановитьВсе(Кнопка)
	
	Для каждого Строка Из  Показатели Цикл
		Строка.Использование = Истина;
	КонецЦикла;
	
КонецПроцедуры

// Процедура - обработчик нажатия кнопки "Снять все" командной панели списка показателей
//
Процедура КоманднаяПанельСписокПоказателейСнятьВсе(Кнопка)
	
	Для каждого Строка Из  Показатели Цикл
		Строка.Использование = Ложь;
	КонецЦикла;
	
КонецПроцедуры

// Процедура - обработчик перед удалением строки отбора
//
Процедура ОтборПередУдалением(Элемент, Отказ)
	
	Если Не ПустаяСтрока(Элемент.ТекущаяСтрока.Имя) Тогда
		Отказ = Истина;
	КонецЕсли; 
	
КонецПроцедуры // ОтборПередУдалением()

// Процедура - обработчик нажатия кнопки > (перенести в колонки) на панели настройки группировок
// 
Процедура КоманднаяПанельСтрокиВКолонкиПеренестиВКолонки(Кнопка)
	Если ЭлементыФормы.ИзмеренияСтроки.ТекущиеДанные <> Неопределено Тогда
		ПутьКДанным = ЭлементыФормы.ИзмеренияСтроки.ТекущиеДанные.ПутьКДанным;
		ТипИзмерения = ЭлементыФормы.ИзмеренияСтроки.ТекущиеДанные.ТипИзмерения;
		ПостроительОтчета.ИзмеренияСтроки.Удалить(ПостроительОтчета.ИзмеренияСтроки.Найти(ЭлементыФормы.ИзмеренияСтроки.ТекущиеДанные.Имя));
		ПостроительОтчета.ИзмеренияКолонки.Добавить(ПутьКДанным, , ТипИзмерения);
	КонецЕсли;
КонецПроцедуры // КоманднаяПанельСтрокиВКолонкиПеренестиВКолонки()

// Процедура - обработчик нажатия кнопки < (перенести в строки) на панели настройки группировок
// 
Процедура КоманднаяПанельСтрокиВКолонкиПеренестиВСтроки(Кнопка)
	Если ЭлементыФормы.ИзмеренияКолонки.ТекущиеДанные <> Неопределено Тогда
		ПутьКДанным = ЭлементыФормы.ИзмеренияКолонки.ТекущиеДанные.ПутьКДанным;
		ТипИзмерения = ЭлементыФормы.ИзмеренияКолонки.ТекущиеДанные.ТипИзмерения;
		ПостроительОтчета.ИзмеренияКолонки.Удалить(ПостроительОтчета.ИзмеренияКолонки.Найти(ЭлементыФормы.ИзмеренияКолонки.ТекущиеДанные.Имя));
		ПостроительОтчета.ИзмеренияСтроки.Добавить(ПутьКДанным, , ТипИзмерения);
	КонецЕсли;
КонецПроцедуры // КоманднаяПанельСтрокиВКолонкиПеренестиВСтроки()

// Процедура - обработчик события ПриОткрытии формы
//
Процедура ПриОткрытии()
	ЗаполнитьДиалогПоОбъекту();
КонецПроцедуры

// Процедура - обработчик нажатия кнопки "+" периода
//
Процедура ПлюсПериодНажатие(Элемент)
	ДатаНач = КонецМесяца(ДатаНач) + 1;
КонецПроцедуры

Процедура МинусПериодНажатие(Элемент)
	ДатаНач = НачалоМесяца(ДатаНач - 1);
КонецПроцедуры

// Список доступных регистров для универсального отчета
Если мВыбиратьИмяРегистра <> Ложь Тогда
	
	// Список доступных регистров для универсального отчета
	ЭлементыФормы.ИмяРегистра.СписокВыбора = УправлениеОтчетами.ПолучитьСписокРегистровНакопления();
	
КонецЕсли;
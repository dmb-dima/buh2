Перем ВысотаЗаголовка;
Перем ИдентификаторОкнаРасшифровки;
Перем ФормаНастройка;
Перем НеЗаполнятьНастройкиПриОткрытии;
Перем СтруктураСвязиЭлементовСДанными;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Управляет отображением панели отбора
//
// Параметры:
//	Пометка - булево. признак показа отбора
//
Процедура ОтобразитьОтбор(Пометка)
	
	КоличествоОтборов = 0;
	Для Каждого ЭлементОтбора Из ПолучитьПостроительОтчета().Отбор Цикл
		Если НЕ ПустаяСтрока(ЭлементОтбора.Имя) 
			И НЕ (ЭлементОтбора.Имя) = "Периодичность" Тогда
			КоличествоОтборов = КоличествоОтборов +1;
		КонецЕсли;
	КонецЦикла;
	
	КоличествоОтборов = Мин(КоличествоОтборов,5); // не более пяти
	
	ВерхПостроения = ЭлементыФормы.ПанельОтбор.Верх; // координата по вертикали панели с элементами отбора
	ТекущаяКоордината = ЭлементыФормы.ФлажокНастройки1.Верх; // координата по вертикали первого ряда элементов отбора
	
	Если Пометка Тогда
		
		ВысотаПанели = 0 + КоличествоОтборов * 24 + 3;
		ЭлементыФормы.ПанельОтбор.Высота = 0;
		//ЭлементыФормы.ДокументРезультат.Высота = ЭтаФорма.Высота - ВерхПостроения - ВысотаПанели - 8;
		//ЭлементыФормы.ДокументРезультат.Верх = ВерхПостроения + ВысотаПанели;
		//ЭлементыФормы.ДокументРезультат.Высота = ЭтаФорма.Высота - ВерхПостроения - ВысотаПанели - 8;
		ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Нет;
		ЭлементыФормы.ПанельОтбор.Высота = ВысотаПанели;
		
		Для Сч = 1 По КоличествоОтборов Цикл
			
			ФлажокНастройки   = ЭлементыФормы["ФлажокНастройки" + Сч];
			ПолеВидаСравнения = ЭлементыФормы["ПолеВидаСравнения" + Сч];
			ПолеНастройкиС    = ЭлементыФормы["ПолеНастройкиС" + Сч];
			ПолеНастройкиПо   = ЭлементыФормы["ПолеНастройкиПо" + Сч];
			ПолеНастройки     = ЭлементыФормы["ПолеНастройки" + Сч];
			
			ФлажокНастройки.Видимость   = Истина;
			ПолеВидаСравнения.Видимость = Истина;
			ПолеНастройкиС.Видимость    = Истина;
			ПолеНастройкиПо.Видимость   = Истина;
			ПолеНастройки.Видимость     = Истина;
			
			ФлажокНастройки.Верх   = ТекущаяКоордината;
			ПолеВидаСравнения.Верх = ТекущаяКоордината;
			ПолеНастройкиС.Верх    = ТекущаяКоордината;
			ПолеНастройкиПо.Верх   = ТекущаяКоордината;
			ПолеНастройки.Верх     = ТекущаяКоордината;
			
			ТекущаяКоордината = ТекущаяКоордината + 24;
			
			Если ФлажокНастройки.Значение = ВидСравнения.Интервал
				ИЛИ ПолеВидаСравнения.Значение = ВидСравнения.ИнтервалВключаяГраницы 
				ИЛИ ПолеВидаСравнения.Значение = ВидСравнения.ИнтервалВключаяНачало 
				ИЛИ ПолеВидаСравнения.Значение = ВидСравнения.ИнтервалВключаяОкончание Тогда
				
				ПолеНастройки.Видимость = Ложь;
				ПолеНастройкиС.Видимость = Истина;
				ПолеНастройкиПо.Видимость = Истина;
				
			Иначе
				
				ПолеНастройки.Видимость = Истина;
				ПолеНастройкиС.Видимость = Ложь;
				ПолеНастройкиПо.Видимость = Ложь;
				
			КонецЕсли;
			
		КонецЦикла;
		
		Для Сч = КоличествоОтборов + 1 По 5 Цикл
			
			ФлажокНастройки   = ЭлементыФормы["ФлажокНастройки" + Сч];
			ПолеВидаСравнения = ЭлементыФормы["ПолеВидаСравнения" + Сч];
			ПолеНастройкиС    = ЭлементыФормы["ПолеНастройкиС" + Сч];
			ПолеНастройкиПо   = ЭлементыФормы["ПолеНастройкиПо" + Сч];
			ПолеНастройки     = ЭлементыФормы["ПолеНастройки" + Сч];
			
			ФлажокНастройки.Видимость   = Ложь;
			ПолеВидаСравнения.Видимость = Ложь;
			ПолеНастройкиС.Видимость    = Ложь;
			ПолеНастройкиПо.Видимость   = Ложь;
			ПолеНастройки.Видимость     = Ложь;
			
			ФлажокНастройки.Верх   = ТекущаяКоордината;
			ПолеВидаСравнения.Верх = ТекущаяКоордината;
			ПолеНастройкиС.Верх    = ТекущаяКоордината;
			ПолеНастройкиПо.Верх   = ТекущаяКоордината;
			ПолеНастройки.Верх     = ТекущаяКоордината;
			
		КонецЦикла;
		
		
	Иначе
		
		Для Сч = 1 По 5 Цикл
			
			ФлажокНастройки   = ЭлементыФормы["ФлажокНастройки" + Сч];
			ПолеВидаСравнения = ЭлементыФормы["ПолеВидаСравнения" + Сч];
			ПолеНастройкиС    = ЭлементыФормы["ПолеНастройкиС" + Сч];
			ПолеНастройкиПо   = ЭлементыФормы["ПолеНастройкиПо" + Сч];
			ПолеНастройки     = ЭлементыФормы["ПолеНастройки" + Сч];
			
			ФлажокНастройки.Видимость   = Ложь;
			ПолеВидаСравнения.Видимость = Ложь;
			ПолеНастройкиС.Видимость    = Ложь;
			ПолеНастройкиПо.Видимость   = Ложь;
			ПолеНастройки.Видимость     = Ложь;
			
			ФлажокНастройки.Верх   = ТекущаяКоордината;
			ПолеВидаСравнения.Верх = ТекущаяКоордината;
			ПолеНастройкиС.Верх    = ТекущаяКоордината;
			ПолеНастройкиПо.Верх   = ТекущаяКоордината;
			ПолеНастройки.Верх     = ТекущаяКоордината;
			
		КонецЦикла;
		
		ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Верх;
		ЭлементыФормы.ПанельОтбор.Высота = 0;
		//ЭлементыФормы.ДокументРезультат.Верх = ВерхПостроения;
		//ЭлементыФормы.ДокументРезультат.Высота = ЭтаФорма.Высота - ЭлементыФормы.ДокументРезультат.Верх - 8;
		
	КонецЕсли;
	
КонецПроцедуры

// Обновляет таблицу отчета
//
// Параметры:
//	Нет.
//
Процедура ОбновитьОтчет() Экспорт
	
	НеЗаполнятьНастройкиПриОткрытии = Не Открыта();

	ЗаполнитьОбъектПоДиалогу();
	
	СформироватьОтчет(ЭлементыФормы.ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка);

	// Заполним общую расшифровку:
	СтруктураНастроекОтчета = Новый Структура;

	СтруктураНастроекОтчета.Вставить("ДатаНач", ДатаНач);
	СтруктураНастроекОтчета.Вставить("ДатаКон", ДатаКон);
	СтруктураНастроекОтчета.Вставить("ИмяРегистра", ИмяРегистра);

	ЭлементыФормы.ДокументРезультат.Область(1,1).Расшифровка = СтруктураНастроекОтчета;

	ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.ДокументРезультат;

КонецПроцедуры // ОбновитьОтчет()

//  Заполняет реквизиты по диалогу
//
// Параметры:
//	Нет.
//
Процедура ЗаполнитьОбъектПоДиалогу()

	// Здесь должно быть расположено заполнение реквизитов
	// отчета по реквизитам формы, непосредственно не связанным
	// с реквизитами отчета (если таковые имеются)
	
КонецПроцедуры // ЗаполнитьОбъектПоДиалогу()

// Заполняет диалог по значениям реквизитов отчета
//
// Параметры:
//	Нет.
//
Процедура ЗаполнитьДиалогПоОбъекту()

	// Здесь должно быть расположено заполнение реквизитов формы
	// по реквизитам отчета, если они непосредственно не связаны
	// с реквизитами отчета (если таковые имеются)

	Если мВыбиратьИмяРегистра = Ложь Тогда
	
		ЭлементыФормы.ИмяРегистра.Видимость        = Ложь;
		ЭлементыФормы.НадписьИмяРегистра.Видимость = Ложь;
	
	КонецЕсли; 

	Если мРежимВводаПериода = 1 Тогда

		ЭлементыФормы.НадписьДатаНач.Заголовок = "На дату:";

		ЭлементыФормы.ДатаКон.Видимость = Ложь;
		ЭлементыФормы.ДатаНач.Данные = "ДатаКон";
		ЭлементыФормы.НадписьДатаКон.Видимость = Ложь;

		ЭлементыФормы.КнопкаНастройкаПериода.Видимость = Ложь;

	Иначе

		ЭлементыФормы.НадписьДатаНач.Заголовок = "Период с:";

		ЭлементыФормы.ДатаКон.Видимость = Истина;
		ЭлементыФормы.ДатаНач.Данные = "ДатаНач";
		ЭлементыФормы.НадписьДатаКон.Видимость = Истина;

		ЭлементыФормы.КнопкаНастройкаПериода.Видимость = Истина;

	КонецЕсли; 
	
	УправлениеОтчетами.ОбработатьПоляОтбораНаОсновнойФормеУниверсальногоОтчета(ЭлементыФормы, ПостроительОтчета, СтруктураСвязиЭлементовСДанными);
	
	// Если нужно перерисовывать панель отбора, ее нужно закрыть и снова открыть, чтобы удалились лишние элементы отбора и 
	Если ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Отбор.Пометка Тогда;
		ОтобразитьОтбор(Ложь);
		ОтобразитьОтбор(Истина);
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьДиалогПоОбъекту()

//  Управляет выводом заголовка
//
// Параметры:
//	Нет.
//
Процедура ВыводЗаголовка()

	// Перезаполнять заголовок можно только у "чистого" отчета
	Если ЭлементыФормы.ДокументРезультат.ВысотаТаблицы = 0 Тогда

		ЗаполнитьОбъектПоДиалогу();

		СформироватьОтчет(ЭлементыФормы.ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, Истина);
		
	КонецЕсли;


	Если ЗначениеЗаполнено(ВысотаЗаголовка) Тогда
		ЭлементыФормы.ДокументРезультат.Область(1,,ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;
	КонецЕсли;

КонецПроцедуры // ВыводЗаголовка()

// Формирует текст заголовка
//
// Параметры:
//	Нет.
//
Процедура СформироватьЗаголовокФормы()

	Заголовок = УправлениеОтчетами.СформироватьЗаголовокОсновнойФормы(ДатаНач, ДатаКон, мНазваниеОтчета, мРежимВводаПериода);
	
КонецПроцедуры // СформироватьЗаголовокФормы()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ НАЖАТИЯ КНОПОК КОМАНДНОЙ ПАНЕЛИ

// Процедура - обработчик нажатия кнопки "Настройка".
//
Процедура КоманднаяПанельФормыНастройка(Кнопка)
	
	ФормаНастройка = ПолучитьФорму("ФормаНастройка", ЭтаФорма);
	
	Если ФормаНастройка.ОткрытьМодально() = Истина Тогда
		ОбновитьОтчет();
	КонецЕсли;

КонецПроцедуры // ДополнительноНажатие()

// Процедура - обработчик нажатия кнопки "Отбор".
//
Процедура КоманднаяПанельФормыОтбор(Кнопка)

	ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Отбор.Пометка = НЕ ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Отбор.Пометка;
	ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Подменю.Кнопки.Отбор.Пометка = НЕ ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Подменю.Кнопки.Отбор.Пометка;

	ОтобразитьОтбор(ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Отбор.Пометка);
	
КонецПроцедуры

// Процедура - обработчик нажатия кнопки "Обновить".
//
Процедура КоманднаяПанельФормыОбновить(Кнопка)

	ОбновитьОтчет();

КонецПроцедуры // ВыполнитьНажатие()

// Процедура - обработчик нажатия кнопки "Заголовок".
//
Процедура КоманднаяПанельЗаголовок(Кнопка)
	ПоказыватьЗаголовок = Не ПоказыватьЗаголовок;

	Если ПоказыватьЗаголовок Тогда
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Заголовок.Пометка = Истина;
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Подменю.Кнопки.Заголовок.Пометка = Истина;
	Иначе
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Заголовок.Пометка = Ложь;
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Подменю.Кнопки.Заголовок.Пометка = Ложь;
	КонецЕсли;

	ВыводЗаголовка();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик изменения раздела учета.
//
Процедура ИмяРегистраПриИзменении(Элемент)

	Состояние("Заполнение по умолчанию");
	СтрокаСписка = ЭлементыФормы.ИмяРегистра.СписокВыбора.НайтиПоЗначению(Элемент.Значение);
	Если СтрокаСписка<>Неопределено Тогда
		мНазваниеОтчета = СтрокаСписка.Представление;
	КонецЕсли;
	ЗаполнитьНачальныеНастройки();

	ЭлементыФормы.ДокументРезультат.Очистить();
	ВыводЗаголовка();
	ЗаполнитьДиалогПоОбъекту();
	СформироватьЗаголовокФормы();
	
КонецПроцедуры // ПолеВыбораИмяРегистраПриИзменении()

// Процедура - обработчик закрытия формы
//
Процедура ПриЗакрытии()

	// Сохраним имя регистра
	СохранитьЗначение(Метаданные().Имя+"_ИмяРегистра", ИмяРегистра);

КонецПроцедуры // ПриЗакрытии()

// Процедура - обработчик обновления данных формы
//
Процедура ОбновлениеОтображения()

	СформироватьЗаголовокФормы();
	
КонецПроцедуры // ОбновлениеОтображения()

// Процедура - обработчик события перед открытием формы
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

	КлючУникальности = Новый УникальныйИдентификатор();
	
	Если НЕ ЗначениеЗаполнено(ИмяРегистра) Тогда

		// Восстановим сохраненное при прошлом запуске имя регистра
		ИмяРегистра = ВосстановитьЗначение(Метаданные().Имя+"_ИмяРегистра");

		ЗаполнитьНачальныеНастройки();

		// По умолчанию настраивается так:
		РаскрашиватьИзмерения = Истина;

		ВыводитьИтогиПоВсемУровням = Истина;

		// Показатели в строку, если включено несколько показателей
		ВыводитьПоказателиВСтроку = ?(Показатели.Итог("Использование")>1, Истина, Ложь);

	КонецЕсли; 

	ЗаполнитьДиалогПоОбъекту();

	// Если форма открывается для несформированного отчета ...
	Если НЕ (НеЗаполнятьНастройкиПриОткрытии = Истина) Тогда
		
		// Установим дату начала отчета
		Если ЗначениеЗаполнено(глЗначениеПеременной("глТекущийПользователь")) Тогда
			ДатаНач = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"),"ОсновнаяДатаНачалаОтчетов");
		КонецЕсли;
		
		НП.УстановитьПериод(ДатаНач,ДатаКон);

		ВысотаЗаголовка = 0;

		Если Не ПустаяСтрока(ИмяРегистра) Тогда
			ВыводЗаголовка();
		КонецЕсли;

		СформироватьЗаголовокФормы();

	КонецЕсли; 

	ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Верх;

КонецПроцедуры // ПередОткрытием()

// Процедура - обработчик события при открытии формы
//
Процедура ПриОткрытии()
	
	НеЗаполнятьНастройкиПриОткрытии = Ложь;
	
КонецПроцедуры

// Процедура - обработчик события перед сохранением значений формы
//
Процедура ПередСохранениемЗначений(Отказ)

	СформироватьСтруктуруДляСохраненияНастроек(СохраненныеНастройки, ПоказыватьЗаголовок);
	
КонецПроцедуры // ПередСохранениемЗначений()

// Процедура - обработчик события после восстановления значений формы
//
Процедура ПослеВосстановленияЗначений()
	
	// Если настройка восстанавливается, когда открывается форма сформированного отчета, игнорируем
	Если НеЗаполнятьНастройкиПриОткрытии Тогда
		Возврат;
	КонецЕсли;

	Пока ПостроительОтчета.Отбор.Количество()>0 Цикл
		ПостроительОтчета.Отбор.Удалить(0);
	КонецЦикла; 

	Состояние("Заполнение по умолчанию");
	
	// Эти настройки нужно восстановить до начального заполнения
	Если ТипЗнч(СохраненныеНастройки)=Тип("Структура") Тогда
		СохраненныеНастройки.Свойство("ИмяРегистра", ИмяРегистра);
	КонецЕсли;
	
	ЗаполнитьНачальныеНастройки();
	
	ВосстановитьНастройкиИзСтруктуры(СохраненныеНастройки, ПоказыватьЗаголовок);

	ЗаполнитьДиалогПоОбъекту();

	ЭлементыФормы.ДокументРезультат.Очистить();
	
	Если Не ПустаяСтрока(ИмяРегистра) Тогда
		ВыводЗаголовка();
	КонецЕсли;

	СформироватьЗаголовокФормы();
	
КонецПроцедуры // ПослеВосстановленияЗначений()

// Процедура - обработчик сообщений
//
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если ИмяСобытия = "ИзмененоИмяРегистра" И Источник = ФормаНастройка Тогда
		Состояние("Заполнение по умолчанию");
		СтрокаСписка = ЭлементыФормы.ИмяРегистра.СписокВыбора.НайтиПоЗначению(ИмяРегистра);
		Если СтрокаСписка<>Неопределено Тогда
			мНазваниеОтчета = СтрокаСписка.Представление;
		КонецЕсли;

		ЭлементыФормы.ДокументРезультат.Очистить();
		ВыводЗаголовка();
		ЗаполнитьДиалогПоОбъекту();
		СформироватьЗаголовокФормы();

	ИначеЕсли ИмяСобытия = "ИзмененТекстЗапроса" И Источник = ФормаНастройка Тогда

		// Перезаполним привязку отбора к данным
		Для Каждого Элемент Из СтруктураСвязиЭлементовСДанными Цикл
		
			ЭлементыФормы[Элемент.Ключ].Данные = Элемент.Значение;
		
		КонецЦикла;
	КонецЕсли; 
	
КонецПроцедуры // ОбработкаОповещения()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Процедура - обработчик нажатия кнопки настройки периода
//
Процедура КнопкаНастройкаПериодаНажатие(Элемент)

	Если НП.Редактировать() Тогда
		
		ДатаНач = НП.ПолучитьДатуНачала();
		ДатаКон = НП.ПолучитьДатуОкончания();

	КонецЕсли;
	
КонецПроцедуры // КнопкаНастройкаПериодаНажатие()

// Процедура - обработчик изменения данных в поле значения отбора
//
Процедура ПолеНастройки1ПриИзменении(Элемент)

	УправлениеОтчетами.ПолеНастройкиПриИзменении(Элемент, ПостроительОтчета.Отбор, СтруктураСвязиЭлементовСДанными);
	
КонецПроцедуры // ПолеНастройки1ПриИзменении()

// Процедура - обработчик изменения данных в поле значения отбора С
//
Процедура ПолеНастройкиС1ПриИзменении(Элемент)

	УправлениеОтчетами.ПолеНастройкиСПриИзменении(Элемент, ПостроительОтчета.Отбор, СтруктураСвязиЭлементовСДанными);
	
КонецПроцедуры // ПолеНастройкиС1ПриИзменении()

// Процедура - обработчик изменения данных в поле значения отбора ПО
//
Процедура ПолеНастройкиПо1ПриИзменении(Элемент)

	УправлениеОтчетами.ПолеНастройкиПоПриИзменении(Элемент, ПостроительОтчета.Отбор, СтруктураСвязиЭлементовСДанными);

КонецПроцедуры // ПолеНастройкиПо1ПриИзменении()

// Процедура - обработчик изменения данных в поле выбора вида сравнения
//
Процедура ПолеВидаСравнения1ПриИзменении(Элемент)

	УправлениеОтчетами.ПолеВидаСравненияПриИзменении(Элемент, ЭлементыФормы);
	
КонецПроцедуры // ПолеВидаСравнения1ПриИзменении()

// Процедура - обработчик события "Обработка расшифровки" поля табличного документа ДокументРезультат
//
Процедура ДокументРезультатОбработкаРасшифровки(Элемент, РасшифровкаСтроки, СтандартнаяОбработка)
	
	Если ТипЗнч(РасшифровкаСтроки) = Тип("Структура") Тогда

		// Расшифровка колонки находится в заголовке колонки
		РасшифровкаКолонки = Элемент.Область(ВысотаЗаголовка+2, Элемент.ТекущаяОбласть.Лево).Расшифровка;

		Расшифровка = Новый Структура;

		Для каждого Элемент Из РасшифровкаСтроки Цикл
			Расшифровка.Вставить(Элемент.Ключ, Элемент.Значение);
		КонецЦикла;

		Если ТипЗнч(РасшифровкаКолонки) = Тип("Структура") Тогда

			Для каждого Элемент Из РасшифровкаКолонки Цикл
				Расшифровка.Вставить(Элемент.Ключ, Элемент.Значение);
			КонецЦикла;

		КонецЕсли; 

	Иначе
		
		Расшифровка = РасшифровкаСтроки;
		
	КонецЕсли;

	ОбработкаРасшифровкиСтандартногоОтчета(Расшифровка, СтандартнаяОбработка, ОтчетОбъект);
	
КонецПроцедуры // ДокументРезультатОбработкаРасшифровки()

// Список доступных регистров для универсального отчета
ЭлементыФормы.ИмяРегистра.СписокВыбора = УправлениеОтчетами.ПолучитьСписокРегистровНакопления();
НеЗаполнятьНастройкиПриОткрытии = Ложь;

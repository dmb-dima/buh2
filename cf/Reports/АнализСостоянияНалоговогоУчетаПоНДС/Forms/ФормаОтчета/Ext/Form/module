
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ВывестиНачальныйОбразОтчета();
	СкорректироватьПериод();
	ВывестиПериод();
	ТекущийМакет = "";
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

//	В зависимости от параметров учетной политики формирует необходимую карту отчета
//
Процедура ОпределитьКарту()
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Предупреждение("Не указана организация!");
		Возврат;
	КонецЕсли;	
	
	УстановитьВидимостьДоступность();
	СкорректироватьПериод();
	
	Если ИдентификаторКонфигурации = "УПП" Тогда
		УчетнаяПолитика = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(КонецПериода, Ложь, Организация, "Регл");
		Если УчетнаяПолитика = Неопределено Тогда
			Возврат;
		КонецЕсли;	
	Иначе
		УчетнаяПолитика = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(КонецПериода, Ложь, Организация);
		Если УчетнаяПолитика.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;		
	
	Если УчетнаяПолитика.СистемаНалогообложения <> Перечисления.СистемыНалогообложения.Общая Тогда
		Предупреждение("Выбранная организация не является плательщиком НДС.");
		Возврат;
	КонецЕсли;
	
	ДокументРезультат = ЭлементыФормы.Результат;
	ДокументРезультат.Очистить();
	
	Если ИдентификаторКонфигурации = "БП" Тогда
		Если УчетнаяПолитика.УпрощенныйУчетНДС Тогда
			СформироватьКарту(ДокументРезультат, "УпрощенныйУчетНДС");
		Иначе
			Если НЕ УчетнаяПолитика.СложныйУчетНДС Тогда
				СформироватьКарту(ДокументРезультат, "УчетСРегламентнымиДокументами");
			Иначе
				СформироватьКарту(ДокументРезультат, "СложныйУчетНДС");
			КонецЕсли;
			
		КонецЕсли;
	Иначе
		// УПП
		Если НЕ УчетнаяПолитика.СложныйУчетНДС Тогда
			СформироватьКарту(ДокументРезультат, "УчетСРегламентнымиДокументами");
		Иначе
			СформироватьКарту(ДокументРезультат, "СложныйУчетНДС");
		КонецЕсли;
	КонецЕсли;
			
КонецПроцедуры // ОпределитьКарту()

//	На основе идентификатора макета формирует необходимый отчет-расшифровку
//	
//	Параметры
//  	ИдентификаторМакета - Строка - идентификатор макета схемы компоновки данных
//
Процедура ОпределитьРасшифровку(ИдентификаторМакета)
	
	Если ИдентификаторКонфигурации <> "БП" 
		И (РедакцияКонфигурации = "1.2" ИЛИ РедакцияКонфигурации = "1.0")
		И Найти(ИдентификаторМакета, "ИсполнениеОНА") Тогда
		
		//	Функционал налогового агента не поддерживается в УПП 1.2 и КА 1.0
		Возврат;
		
	КонецЕсли;	
	
	Результат = ЭлементыФормы.ПолеРасшифровок;
	Результат.Очистить();
			
	КлючСтруктуры = "ВнешнийНаборДанных"+Сред(ИдентификаторМакета,12);
	ТребуемыйНаборДанных = СтруктураВнешнихНаборов[КлючСтруктуры];
			
	// 	В случае наличия расшифровки ошибок получаем набор, проверяем наличие записей в нем
	
	Если СписокРасшифровокСДетализацией.Найти(ИдентификаторМакета) <> Неопределено Тогда
		
		Если ТребуемыйНаборДанных.Ошибка.Количество() > 0 Тогда
			СформироватьРасшифровку(ИдентификаторМакета, ДанныеРасшифровки, Результат, ТребуемыйНаборДанных, Истина);
		Иначе
			СформироватьРасшифровку(ИдентификаторМакета, ДанныеРасшифровки, Результат, ТребуемыйНаборДанных, Ложь);
		КонецЕсли;	
	Иначе
		СформироватьРасшифровку(ИдентификаторМакета, ДанныеРасшифровки, Результат, ТребуемыйНаборДанных, Ложь);
	КонецЕсли;	
		
	Если ИдентификаторМакета = "РасшифровкаНачислениеСМРХозСпособом" Тогда
		Результат.ПоказатьУровеньГруппировокСтрок(0);
	Иначе
		Результат.ПоказатьУровеньГруппировокСтрок(1);
	КонецЕсли;

	ТекущийМакет = ИдентификаторМакета;
	УстановитьВидимостьДоступность();
				
КонецПроцедуры

//	Формирует карту отчета по умолчанию при открытии
//
Процедура ВывестиНачальныйОбразОтчета()

	Если ИдентификаторКонфигурации = "БП" Тогда
		Макет = ПолучитьМакет("УпрощенныйУчетНДС");
		ОбластьВывода = Макет.ПолучитьОбласть("Область");
		ОбластьВывода.Рисунки.Удалить(ОбластьВывода.Рисунки.ПрочиеОперацииНачисление);
		ОбластьВывода.Рисунки.Удалить(ОбластьВывода.Рисунки.ПрочиеОперацииВычет);
	Иначе
		Макет = ПолучитьМакет("УчетСРегламентнымиДокументами");
		ОбластьВывода = Макет.ПолучитьОбласть("Область");
		ОбластьВывода.Рисунки.Удалить(ОбластьВывода.Рисунки.НалоговыйАгентНачисление);
		ОбластьВывода.Рисунки.Удалить(ОбластьВывода.Рисунки.ВыполнениеСМР);
		ОбластьВывода.Рисунки.Удалить(ОбластьВывода.Рисунки.НалоговыйАгентВычет);
	КонецЕсли;	
		
	ОбластьВывода.Рисунки.Удалить(ОбластьВывода.Рисунки.ПояснениеОшибки);
	ОбластьВывода.Рисунки.Удалить(ОбластьВывода.Рисунки.ПояснениеОшибки2);
	ОбластьВывода.Рисунки.Удалить(ОбластьВывода.Рисунки.ПриобретенныеЦенности);
	ОбластьВывода.Рисунки.Удалить(ОбластьВывода.Рисунки.АвансыПолученныеВычет);
	ОбластьВывода.Рисунки.Удалить(ОбластьВывода.Рисунки.АвансыВыданныеВычет);
	ОбластьВывода.Рисунки.Удалить(ОбластьВывода.Рисунки.Реализация);
	ОбластьВывода.Рисунки.Удалить(ОбластьВывода.Рисунки.АвансыПолученныеНачисление);
	ОбластьВывода.Рисунки.Удалить(ОбластьВывода.Рисунки.АвансыВыданныеНачисление);
	
	ВывестиРамку(ОбластьВывода, , 1, 1, 280, 150);
	
	ОбластьВывода.Параметры.НалоговаяБаза = "НДС к уплате";
	
    ЭлементыФормы.Результат.Очистить();
	ЭлементыФормы.Результат.Вывести(ОбластьВывода);
	ЭлементыФормы.Результат.ТолькоПросмотр = Истина;

КонецПроцедуры

Процедура УстановитьВидимостьДоступность()
	
	Если ТекущийМакет = "" Тогда
		ЭлементыФормы.ПанельНавигации.ТекущаяСтраница 				= ЭлементыФормы.ПанельНавигации.Страницы.Схема;
		ЭлементыФормы.ПанельНавигации.ЦветФона 						= Новый Цвет(255, 255, 255);
		ЭлементыФормы.ПолеРасшифровок.Видимость 					= Ложь;
		ЭлементыФормы.Результат.Видимость 							= Истина;
	Иначе
		ЭлементыФормы.ПанельНавигации.ТекущаяСтраница 				= ЭлементыФормы.ПанельНавигации.Страницы.Расшифровка;
		ЭлементыФормы.ПанельНавигации.ЦветФона 						= Новый Цвет(255, 251, 240);
		ЭлементыФормы.ПолеРасшифровок.Видимость 					= Истина;
		ЭлементыФормы.Результат.Видимость 							= Ложь;
	КонецЕсли;	
	
	ЭлементыФормы.ФлажокВключатьОбособленныеПодразделения.Видимость = УчетОбособленныхПодразделений;	
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	Если ТекущийМакет <> "" Тогда
		Ответ = Вопрос("Завершить работу с отчетом?", РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Отказ = Истина;
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры

//	Работа с периодом

Процедура СкорректироватьПериод()
	
	Если НачалоПериода = '00010101' тогда
		НачалоПериода = НачалоКвартала(ОбщегоНазначения.ПолучитьРабочуюДату());
	КонецЕсли;
	
	Если КонецПериода = '00010101' тогда
		КонецПериода = КонецКвартала(ОбщегоНазначения.ПолучитьРабочуюДату());
	КонецЕсли;
	
КонецПроцедуры

Процедура ВывестиПериод()
	
	ЭлементыФормы.НадписьПериодОтчета.Заголовок = ПредставлениеПериода(НачалоДня(НачалоПериода), КонецДня(КонецПериода), "ФП = Истина" );
	
КонецПроцедуры

Процедура ИзменитьПериод(Шаг)
	
	КонецПериода  = КонецКвартала(ДобавитьМесяц(КонецПериода, Шаг*3));
	НачалоПериода = НачалоКвартала(КонецПериода);
	ВывестиПериод();
	
КонецПроцедуры

//	Обработчики событий элементов формы

Процедура СформироватьНажатие(Элемент)
	
	ОпределитьКарту();	
	
КонецПроцедуры

Процедура КнопкаНастройкиСхемыНажатие(Элемент)
	
	ЭтотОбъект.ПолучитьФормуНастроек().ОткрытьМодально();
	КоллекцияНастроек.Вставить(ТекущийМакет, КомпоновщикНастроек.ПолучитьНастройки());
	ОпределитьРасшифровку(ТекущийМакет);
	
КонецПроцедуры

Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОпределитьРасшифровку(Расшифровка);
	
КонецПроцедуры

Процедура ПериодНазадНажатие(Элемент)
	ИзменитьПериод(-1);
КонецПроцедуры

Процедура ПериодВпередНажатие(Элемент)
	ИзменитьПериод(1);
КонецПроцедуры

Процедура КнопкаНастройкаПериодаНажатие(Элемент)
	РаботаСДиалогами.ОбработчикНастройкаПериодаНажатие(НачалоПериода, КонецПериода);
	СкорректироватьПериод();
	ВывестиПериод();
КонецПроцедуры

Процедура КоманднаяПанельДействие2(Кнопка)
	
	ЭлементыФормы.ПолеРасшифровок.Напечатать(Ложь);
	
КонецПроцедуры

Процедура НазадНажатие(Элемент)
	
	ТекущийМакет = "";
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

Процедура ПолеРасшифровокВыбор(Элемент, Область, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Область.Расшифровка = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	ИндексРасшифровки = Число(Область.Расшифровка);
	ОбработкаРасшифровки = Новый ОбработкаРасшифровкиКомпоновкиДанных(ДанныеРасшифровкиТабличногоДокумента, 
		Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));
	ЭлементРасшифровкиДанных = ДанныеРасшифровкиТабличногоДокумента.Элементы[ИндексРасшифровки];
	ЭлементРасшифровкиДанныхПоля = ЭлементРасшифровкиДанных.ПолучитьПоля()[0];
	Если ЭлементРасшифровкиДанныхПоля.Значение = NULL Тогда
		Возврат;
	КонецЕсли;	
	ОбработкаРасшифровки.ОткрытьЗначение(ЭлементРасшифровкиДанных.Идентификатор, 
		Новый ПолеКомпоновкиДанных(ЭлементРасшифровкиДанныхПоля.Поле));
	
КонецПроцедуры

	



Перем ВысотаЗаголовка;
Перем ПоказыватьЗаголовок;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Процедура ВыводЗаголовка()

	// Перезаполнять заголовок можно только у "чистого" отчета
	Если ЭлементыФормы.ДокументРезультат.ВысотаТаблицы = 0 Тогда
		ВнешняяОбработкаОбъект.СформироватьОтчет(ЭлементыФормы.ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, Истина);
	КонецЕсли;

	Если ЗначениеЗаполнено(ВысотаЗаголовка) Тогда
		ЭлементыФормы.ДокументРезультат.Область(1,,ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;
	КонецЕсли;

	УправлениеПометкамиКнопокКоманднойПанели();

КонецПроцедуры // ВыводЗаголовка()

Процедура УправлениеПометкамиКнопокКоманднойПанели()

	ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Заголовок.Пометка                = ПоказыватьЗаголовок;
	ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Подменю.Кнопки.Заголовок.Пометка = ПоказыватьЗаголовок;

КонецПроцедуры // УправлениеПометкамиКнопокКоманднойПанели()

Процедура ЗаполнитьСписокУсловийВыбытия()

	// Заполним список условий получения если он пуст.
	УсловияВыбытия.Очистить();
	УсловияВыбытия.Добавить(ПолучитьСписокСчетовРасчетов(),                            "За плату");
	УсловияВыбытия.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеДоходыИРасходы,             "Списание имущества за непригодностью");
	УсловияВыбытия.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеРасчетыСРазнымиДебиторамиИКредиторами, "Возвраты поставщикам");
	УсловияВыбытия.Добавить(ПланыСчетов.Хозрасчетный.УставныйКапитал,                  "Вклад в уставный капитал");
	УсловияВыбытия.Добавить(ПланыСчетов.Хозрасчетный.ЦелевоеФинансирование,            "Целевое финансирование");
	УсловияВыбытия.Добавить(ПланыСчетов.Хозрасчетный.ВнутрихозяйственныеРасчеты,       "Передача обособленному подразделению");
	УсловияВыбытия.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеРасходы,                    "Другие существенные условия");	
	Если УправлениеОтчетами.ВСпискеНеУстановленыПометки(УсловияВыбытия) Тогда
		УсловияВыбытия.ЗаполнитьПометки(Истина);
	КонецЕсли;	
	
КонецПроцедуры

Процедура ЗаполнитьСписокВидовДоходов()

	
	ВидыДоходов.Очистить();
	ВидыДоходов.Добавить("Выручка от реализации товаров собственного производства",,Истина);
	ВидыДоходов.Добавить("Выручка от реализации работ, услуг собственного производства",,Истина);
	ВидыДоходов.Добавить("Выручка от реализации покупных товаров и продукции",,Истина);
	ВидыДоходов.Добавить("Выручка от реализации имущественных прав",,Истина);
	ВидыДоходов.Добавить("Выручка от реализации прочего имущества",,Истина);
	ВидыДоходов.Добавить("Выручка от реализации ОС",,Истина);
	ВидыДоходов.Добавить("Выручка от реализации НМА",,Истина);
	ВидыДоходов.Добавить("Выручка от реализации объектов строительства",,Истина);
	ВидыДоходов.Добавить("Выручка от реализации прав требования",,Истина);
	ВидыДоходов.Добавить("Выручка от уступки права до наступления срока платежа",,Истина);
	ВидыДоходов.Добавить("Выручка от уступки права после наступления срока платежа",,Истина);
	ВидыДоходов.Добавить("Выручка от реализации ЦБ",,Истина);
	ВидыДоходов.Добавить("Другие прочие доходы",,Истина);
	ВидыДоходов.Добавить("Доход не возникает",,Истина);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

Процедура КнопкаНастройкаПериодаНажатие(Элемент)

	Если НП.Редактировать() Тогда

		ДатаНач = НП.ПолучитьДатуНачала();
		ДатаКон = НП.ПолучитьДатуОкончания();

	КонецЕсли;

КонецПроцедуры // КнопкаНастройкаПериодаНажатие()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ НАЖАТИЯ КНОПОК КОМАНДНОЙ ПАНЕЛИ

Процедура КоманднаяПанельФормыНастройка(Кнопка)

	ФормаНастройка = ПолучитьФорму("ФормаНастройка", ЭтаФорма);

	ФормаНастройка.ОткрытьМодально();

КонецПроцедуры // КоманднаяПанельФормыНастройка()

Процедура КоманднаяПанельФормыСформировать(Элемент)

	ВнешняяОбработкаОбъект.СформироватьОтчет(ЭлементыФормы.ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка);

	ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.ДокументРезультат;

КонецПроцедуры

Процедура КоманднаяПанельЗаголовок(Кнопка)

	ПоказыватьЗаголовок = Не ПоказыватьЗаголовок;
	ВыводЗаголовка();

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием()
	
	ПоказыватьЗаголовок = ИСТИНА;
	
	
	СтруктураОбщихПараметров = ВосстановитьЗначение("ОбщиеПараметрыОтчетовРегистрДоходов");
	Если ТипЗнч(СтруктураОбщихПараметров) = Тип("Структура") Тогда
		
		СтруктураОбщихПараметров.Свойство("Организация", Организация);
		СтруктураОбщихПараметров.Свойство("ВидДоходов", ВидДоходов); 
		СтруктураОбщихПараметров.Свойство("ДатаНач", ДатаНач);
		СтруктураОбщихПараметров.Свойство("ДатаКон", ДатаКон);
		СтруктураОбщихПараметров.Свойство("ВключаяВложенныеПодразделения", ВключаяВложенныеПодразделения);  
		
	КонецЕсли;
	
	ЗаполнитьСписокВидовДоходов();
	
	Если ЗначениеЗаполнено(ВидДоходов) Тогда
		ВидыДоходов.ЗаполнитьПометки(Ложь);
		Если  ВидДоходов = "Выручка от реализации товаров (работ, услуг) собственного производства" Тогда
			Строка = ВидыДоходов.НайтиПоЗначению("Выручка от реализации работ, услуг собственного производства");
			Если НЕ Строка = Неопределено Тогда
				Строка.Пометка = Истина;
			КонецЕсли;
			
			Строка = ВидыДоходов.НайтиПоЗначению("Выручка от реализации товаров собственного производства");
			Если НЕ Строка = Неопределено Тогда
				Строка.Пометка = Истина;
			КонецЕсли;
			
		Иначе
			Строка = ВидыДоходов.НайтиПоЗначению(ВидДоходов);
			Если НЕ Строка = Неопределено Тогда
				Строка.Пометка = Истина;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	
КонецПроцедуры



// Процедура - обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии()

	ВыводЗаголовка();

	ЗаполнитьСписокУсловийВыбытия();
	
	// Проверка ведения однофирменности
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Организация = глЗначениеПеременной("ОсновнаяОрганизация");
	КонецЕсли;

Если ЗначениеЗаполнено(Организация) И ЗначениеЗаполнено(ДатаНач) И ЗначениеЗаполнено(ДатаКон) Тогда	
	ВнешняяОбработкаОбъект.СформироватьОтчет(ЭлементыФормы.ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка);
КонецЕсли;

КонецПроцедуры

Процедура ДатаНачПриИзменении(Элемент)
		НП.УстановитьПериод(ДатаНач, ДатаКон);

КонецПроцедуры

Процедура ДатаКонПриИзменении(Элемент)
		НП.УстановитьПериод(ДатаНач, ДатаКон);

КонецПроцедуры

#Если Клиент Тогда
	
	Перем НП Экспорт;
	
	Перем Счет91_01;
	Перем Счет90_01_1;
	Перем Счет45;
	
	Перем СписокСчетовУчетаИмущества;
	
	// Формирует массив в который помещает только отмеченные
	// в списке значения.
	//
	// Параметры:
	// СписокЗначений - список значений из которого выбираются элементы
	Функция СписокИзПомеченныхЭлементов(СписокЗначений)
		
		Массив = Новый СписокЗначений;
		
		Для каждого ЭлементСписка из СписокЗначений Цикл
			
			Если ЭлементСписка.Пометка Тогда
				Массив.Добавить(ЭлементСписка.Значение);
			КонецЕсли;
			
		КонецЦикла;
		
		Возврат Массив;
		
	КонецФункции
	
	Функция ОбъектУчета(МассивСубконто)
		
		ОбъектУчета = Неопределено;
		
		Для каждого Субконто Из МассивСубконто Цикл
			
			Если ((ТипЗнч(Субконто) = Тип("СправочникСсылка.Номенклатура")) 
				или (ТипЗнч(Субконто) = Тип("СправочникСсылка.НематериальныеАктивы"))
				или (ТипЗнч(Субконто) = Тип("СправочникСсылка.ОбъектыСтроительства"))
				или (ТипЗнч(Субконто) = Тип("СправочникСсылка.ОсновныеСредства"))
				или (ТипЗнч(Субконто) = Тип("СправочникСсылка.ЦенныеБумаги"))) Тогда
				
				ОбъектУчета = Субконто;
				Прервать;
				
			ИначеЕсли ТипЗнч(Субконто) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
				
				ОбъектУчета = Строка(Субконто.Владелец) + " ( " + Субконто + ")";
				Прервать;
				
			КонецЕсли;
			
		КонецЦикла;
		
		Возврат ОбъектУчета;
		
	КонецФункции // ОбъектУчета()
	
	Функция ВидДоходаПоОперации(Счет, Субконто1, Субконто2, Субконто3, Выборка)
		
		ВидДохода = "";
		
		МассивСубконто = Новый Массив;
		МассивСубконто.Добавить(Субконто1);
		МассивСубконто.Добавить(Субконто2);
		МассивСубконто.Добавить(Субконто3);
		МассивСубконто.Добавить(Выборка.СубконтоДт1);
		МассивСубконто.Добавить(Выборка.СубконтоДт2);
		
		ОбъектУчета = ОбъектУчета(МассивСубконто);
		
		
		Если (Счет.ПринадлежитЭлементу(Счет90_01_1) ИЛИ Счет = Счет90_01_1) Тогда
			Если  Выборка.ВидДоходов = "Продукция" Тогда
				ВидДохода   = "Выручка от реализации товаров собственного производства";		
				ОбъектУчета = Субконто3;
				
			ИначеЕсли  Выборка.ВидДоходов = "Услуги" Тогда
				ВидДохода   = "Выручка от реализации работ, услуг собственного производства";		
				ОбъектУчета = Субконто3;
				
			Иначе
				
				ВидДохода   = "Выручка от реализации покупных товаров и продукции";
				ОбъектУчета = Субконто3;
			КонецЕсли;
			
		ИначеЕсли (Счет.ПринадлежитЭлементу(Счет91_01) ИЛИ Счет = Счет91_01) Тогда
			Если  Выборка.СубконтоКт1.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСРеализациейИмущественныхПравКромеПраваТребования Тогда
				
				ВидДохода   = "Выручка от реализации имущественных прав";
				ОбъектУчета = Субконто2;
				
			ИначеЕсли  Выборка.СубконтоКт1.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСРеализациейПрочегоИмущества Тогда
				
				ВидДохода   = "Выручка от реализации прочего имущества";
				ОбъектУчета = Субконто2;
				
			ИначеЕсли  Выборка.СубконтоКт1.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСРеализациейОсновныхСредств Тогда
				
				ВидДохода   = "Выручка от реализации ОС";
				ОбъектУчета = Субконто2;
				
				
			ИначеЕсли Выборка.СубконтоКт1.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСРеализациейНематериальныхАктивов Тогда
				ВидДохода   = "Выручка от реализации НМА";
				ОбъектУчета = Субконто2;
				
			ИначеЕсли Выборка.СубконтоКт1.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСРеализациейОбъектовСтроительства Тогда
				ВидДохода   = "Выручка от реализации объектов строительства";
				ОбъектУчета = Субконто2;
				
			ИначеЕсли  Выборка.СубконтоКт1.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСРеализациейПрочегоИмущества Тогда
				
				Если Не Субконто2 = Неопределено И Субконто2.Услуга Тогда
					ВидДохода = "Выручка от реализации товаров (работ, услуг) собственного производства";
				Иначе
					ВидДохода = "Выручка от реализации прочего имущества";
				КонецЕсли;
				ОбъектУчета = Субконто2;
			ИначеЕсли Выборка.СубконтоКт1.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСРеализациейЦенныхБумаг Тогда
				ВидДохода = "Выручка от реализации ЦБ";
				ОбъектУчета = Субконто2;
			ИначеЕсли Выборка.СубконтоКт1.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСРеализациейПраваТребованияКакОказанияФинансовыхУслуг Тогда
					ВидДохода = "Выручка от реализации прав требования";
					ОбъектУчета = Субконто2;
					
			ИначеЕсли Выборка.СубконтоКт1.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСРеализациейПраваТребованияДоНаступленияСрокаПлатежа Тогда
					ВидДохода = "Выручка от уступки права до наступления срока платежа";
					ОбъектУчета = Субконто2;
					
			ИначеЕсли Выборка.СубконтоКт1.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСРеализациейПраваТребованияПослеНаступленияСрокаПлатежа Тогда
					ВидДохода = "Выручка от уступки права после наступления срока платежа";
					ОбъектУчета = Субконто2;
				Иначе
					ВидДохода = "Другие прочие доходы";
			        ОбъектУчета = Выборка.СубконтоКт1;
			КонецЕсли;
		Иначе
			ВидДохода = "Доход не возникает";
			ОбъектУчета = Выборка.СубконтоКт1;
		КонецЕсли;
		
		Возврат Новый Структура("ВидДохода, ОбъектУчета", ВидДохода, ОбъектУчета);
		
	КонецФункции
	
	Функция ПолучитьУсловиеВыбытия(Выборка)
		Счет = Выборка.СчетДт;
		ВидДоходов = Выборка.ВидДоходов;
		УсловиеВыбытия = Неопределено;
		
		Если ВидДоходов = "Возвраты" Тогда
			УсловиеВыбытия = "Возвраты поставщикам";
		ИначеЕсли ВидДоходов = "Другие" Или ВидДоходов = "Недостачи и списания" Тогда
			УсловиеВыбытия = "Другие существенные условия";
		ИначеЕсли Счет.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками) Тогда // ПВ
			УсловиеВыбытия = "За плату";
		ИначеЕсли Счет.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.РасчетыСПокупателямиИЗаказчиками) Тогда // ПВ
			УсловиеВыбытия = "За плату";
		ИначеЕсли Счет.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.Касса) Тогда // ПВ
			УсловиеВыбытия = "За плату";
		ИначеЕсли Счет.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.РасчетыСРазнымиДебиторамиИКредиторами) Тогда // ПВ
			УсловиеВыбытия = "За плату";
		ИначеЕсли Счет = ПланыСчетов.Хозрасчетный.ПрибылиИУбыткиБезНалогаНаПрибыль Тогда //99
			УсловиеВыбытия = Перечисления.УсловияПоступленияИВыбытияИмущества.СписаниеИмущества;
			
		ИначеЕсли Счет = ПланыСчетов.Хозрасчетный.ПрочиеРасходы Тогда //91.02
			УсловиеВыбытия = Перечисления.УсловияПоступленияИВыбытияИмущества.Другие;
			
		ИначеЕсли Счет = ПланыСчетов.Хозрасчетный.ПредоставленныеЗаймы Тогда //58.03
			УсловиеВыбытия = Перечисления.УсловияПоступленияИВыбытияИмущества.ПоДоговоруЗайма;
			
		ИначеЕсли Счет = ПланыСчетов.Хозрасчетный.ВкладыПоДоговоруПростогоТоварищества Тогда //58.04
			УсловиеВыбытия = Перечисления.УсловияПоступленияИВыбытияИмущества.ВкладВПростоеТоварищество;
			
		ИначеЕсли Счет = ПланыСчетов.Хозрасчетный.НедостачиИПотериОтПорчиЦенностей Тогда //94
			УсловиеВыбытия = Перечисления.УсловияПоступленияИВыбытияИмущества.Недостачи;
			
		ИначеЕсли Счет = ПланыСчетов.Хозрасчетный.ВнутрихозяйственныеРасчеты Тогда //79
			УсловиеВыбытия = Перечисления.УсловияПоступленияИВыбытияИмущества.ПередачаОбособленномуПодразделению;
		КонецЕсли;
		
		Возврат УсловиеВыбытия;
		
	КонецФункции // ПолучитьУсловиеВыбытия()
	
	Функция ВидРасходаСоответствуетКритериюОтбора(ВидРасхода)
		
		Соответствие        = ЛОЖЬ;
		НайденныйВидРасхода = ВидыДоходов.НайтиПоЗначению(ВидРасхода);
		
		Если НайденныйВидРасхода <> Неопределено Тогда
			
			Если НайденныйВидРасхода.Пометка Тогда
				Соответствие = ИСТИНА;
			КонецЕсли;
			
		КонецЕсли;
		
		Возврат Соответствие;
		
	КонецФункции
	
	Функция УсловиеВыбытияСоответствуетКритериюОтбора(УсловиеВыбытия)
		
		Соответствие = ЛОЖЬ;
		НайденноеУсловие = Неопределено;
		
		Для Каждого Строка Из УсловияВыбытия Цикл
			Если Строка.Представление = УсловиеВыбытия Тогда
				НайденноеУсловие = Строка;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если НайденноеУсловие <> Неопределено Тогда
			
			Если НайденноеУсловие.Пометка Тогда
				Соответствие = ИСТИНА;
			КонецЕсли;
			
		КонецЕсли;
		
		Возврат Соответствие;
		
	КонецФункции
	
	Функция ПолучитьСписокСчетовРасчетов() Экспорт
		
		Счета = Новый СписокЗначений();
		Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками);
		Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПокупателямиИЗаказчиками);
		Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСРазнымиДебиторамиИКредиторами);
		Счета.Добавить(ПланыСчетов.Хозрасчетный.Касса);
		
		Возврат Счета;
		
	КонецФункции // ПолучитьСписокПрочихСчетовСписания()
	
	
	// Выполняет запрос и формирует табличный документ-результат отчета
	// в соответствии с настройками, заданными значениями реквизитов отчета.
	//
	// Параметры:
	//	ДокументРезультат - табличный документ, формируемый отчетом
	//	ПоказыватьЗаголовок - признак видимости строк с заголовком отчета
	//	ВысотаЗаголовка - параметр, через который возвращается высота заголовка в строках 
	//
	Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок = Ложь) Экспорт
		
		ДокументРезультат.Очистить();
		
		Макет = ПолучитьМакет("Отчет");
		
		ОбластьЗаголовок  = Макет.ПолучитьОбласть("Заголовок");
		
		ОбластьЗаголовок.Параметры.НачалоПериода       = Формат(ДатаНач, "ДФ=dd.MM.yyyy");
		ОбластьЗаголовок.Параметры.КонецПериода        = Формат(ДатаКон, "ДФ=dd.MM.yyyy");
		СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация);
		НазваниеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм");
		ОбластьЗаголовок.Параметры.НазваниеОрганизации = НазваниеОрганизации;
		ОбластьЗаголовок.Параметры.ИННОрганизации      = "" + Организация.ИНН + "/" + Организация.КПП;
		ДокументРезультат.Вывести(ОбластьЗаголовок);
		
		// Параметр для показа заголовка
		ВысотаЗаголовка = ДокументРезультат.ВысотаТаблицы;
		
		// Когда нужен только заголовок:
		Если ТолькоЗаголовок Тогда
			Возврат;
		КонецЕсли;
		
		// Проверим заполнение обязательных реквизитов
		Если НалоговыйУчет.ПроверитьЗаполнениеОбязательныхРеквизитов(ДатаНач,ДатаКон,Организация) Тогда
			Возврат;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ВысотаЗаголовка) Тогда
			ДокументРезультат.Область("R1:R" + ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;
		КонецЕсли;
		
		// Формирование списка, состоящего из помеченных в списке условий выбытия
		СписокУсловийВыбытия = СписокИзПомеченныхЭлементов(УсловияВыбытия);
		
		ОбластьПодвал          = Макет.ПолучитьОбласть("Подвал");
		ОбластьШапкаТаблицы    = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ОбластьПодвалТаблицы   = Макет.ПолучитьОбласть("ПодвалТаблицы");
		ОбластьСтрока          = Макет.ПолучитьОбласть("Строка");
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Организация",                Организация);
		Запрос.УстановитьПараметр("ДатаНач",                    НачалоДня(ДатаНач));
		Запрос.УстановитьПараметр("ДатаКон",                    КонецДня(ДатаКон));
		Запрос.УстановитьПараметр("МассивУсловийВыбытия",       СписокУсловийВыбытия);
		Запрос.УстановитьПараметр("ПрочиеСчетаДоходов",         ПланыСчетов.Хозрасчетный.ПрочиеДоходы);
		Запрос.УстановитьПараметр("СписокСчетовУчетаИмущества", СписокСчетовУчетаИмущества);
		Запрос.УстановитьПараметр("СписокСчетовДоходов",         ПланыСчетов.Хозрасчетный.ВыручкаНеЕНВД);
		Запрос.УстановитьПараметр("СписокСчетовРасчетов",       ПолучитьСписокСчетовРасчетов());
		Запрос.УстановитьПараметр("ПрочиеСчетаРасходов",        ПланыСчетов.Хозрасчетный.ПрочиеРасходы);
		Запрос.УстановитьПараметр("Счет9002",                   ПланыСчетов.Хозрасчетный.СебестоимостьПродажНеЕНВД);
		Запрос.УстановитьПараметр("Счет94",                     ПланыСчетов.Хозрасчетный.НедостачиИПотериОтПорчиЦенностей);
		Запрос.УстановитьПараметр("Счет91_2",                   ПланыСчетов.Хозрасчетный.ПрочиеРасходы);
		Запрос.УстановитьПараметр("Счет45",                     Счет45);
		
		Массив = Новый Массив;
		Массив.Добавить(ПланыСчетов.Хозрасчетный.Товары);
		Массив.Добавить(ПланыСчетов.Хозрасчетный.ТоварыОтгруженные);
		Запрос.УстановитьПараметр("Счет41",                   Массив);
		
		
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	ВложенныйЗапрос.СчетДт КАК СчетДт,
		               |	ВложенныйЗапрос.СубконтоДт1 КАК СубконтоДт1,
		               |	ВложенныйЗапрос.СубконтоДт2 КАК СубконтоДт2,
		               |	ВложенныйЗапрос.СчетКт КАК СчетКт,
		               |	ВложенныйЗапрос.СубконтоКт1 КАК СубконтоКт1,
		               |	ВложенныйЗапрос.СубконтоКт2 КАК СубконтоКт2,
		               |	ВложенныйЗапрос.СубконтоКт3 КАК СубконтоКт3,
		               |	СУММА(ВложенныйЗапрос.Сумма) КАК Сумма,
		               |	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
		               |	ВложенныйЗапрос.ДатаОперации КАК ДатаОперации,
		               |	ВложенныйЗапрос.Регистратор КАК Регистратор,
		               |	ВложенныйЗапрос.ВидДоходов КАК ВидДоходов
		               |ИЗ
		               |	(ВЫБРАТЬ
		               |		ХозрасчетныйОборотыДтКт.СчетДт КАК СчетДт,
		               |		ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК СубконтоДт1,
		               |		ХозрасчетныйОборотыДтКт.СубконтоДт2 КАК СубконтоДт2,
		               |		ХозрасчетныйОборотыДтКт.СчетКт КАК СчетКт,
		               |		ХозрасчетныйОборотыДтКт.СубконтоКт1 КАК СубконтоКт1,
		               |		ХозрасчетныйОборотыДтКт.СубконтоКт2 КАК СубконтоКт2,
		               |		ХозрасчетныйОборотыДтКт.СубконтоКт3 КАК СубконтоКт3,
		               |		ВЫБОР
		               |			КОГДА ЕСТЬNULL(ХозрасчетныйОборотыДтКт.КоличествоОборотКт, 0) = 0
		               |				ТОГДА ЕСТЬNULL(ХозрасчетныйОборотыДтКт.СуммаНУОборотКт, 0)
		               |			ИНАЧЕ ЕСТЬNULL(ХозрасчетныйОборотыДтКт.СуммаНУОборотКт, 0) * ЕСТЬNULL(Расходы.КоличествоОборотКт, 0) / ЕСТЬNULL(ХозрасчетныйОборотыДтКт.КоличествоОборотКт, 0)
		               |		КОНЕЦ КАК Сумма,
		               |		ЕСТЬNULL(Расходы.КоличествоОборотКт, 0) КАК Количество,
		               |		ХозрасчетныйОборотыДтКт.Период КАК ДатаОперации,
		               |		ХозрасчетныйОборотыДтКт.Регистратор КАК Регистратор,
		               |		ВЫБОР
		               |			КОГДА Расходы.СчетКт В ИЕРАРХИИ (&Счет41)
		               |				ТОГДА ""Товары""
		               |			ИНАЧЕ ""Продукция""
		               |		КОНЕЦ КАК ВидДоходов
		               |	ИЗ
		               |		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&ДатаНач, &ДатаКон, Запись, СчетДт В ИЕРАРХИИ (&Счет9002), , СчетКт В ИЕРАРХИИ (&СписокСчетовУчетаИмущества), , Организация = &Организация) КАК Расходы
		               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&ДатаНач, &ДатаКон, Запись, СчетДт В ИЕРАРХИИ (&СписокСчетовРасчетов), , СчетКт В ИЕРАРХИИ (&СписокСчетовДоходов), , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		               |			ПО (ХозрасчетныйОборотыДтКт.Регистратор = Расходы.Регистратор)
		               |				И Расходы.СубконтоКт1 = ХозрасчетныйОборотыДтКт.СубконтоКт3
		               |	
		               |	ОБЪЕДИНИТЬ ВСЕ
		               |	
		               |	ВЫБРАТЬ
		               |		ХозрасчетныйОборотыДтКт.СчетДт,
		               |		ХозрасчетныйОборотыДтКт.СубконтоДт1,
		               |		ХозрасчетныйОборотыДтКт.СубконтоДт2,
		               |		ХозрасчетныйОборотыДтКт.СчетКт,
		               |		ХозрасчетныйОборотыДтКт.СубконтоКт1,
		               |		ХозрасчетныйОборотыДтКт.СубконтоКт2,
		               |		ХозрасчетныйОборотыДтКт.СубконтоКт3,
		               |		ЕСТЬNULL(ХозрасчетныйОборотыДтКт.СуммаНУОборотКт, 0),
		               |		ЕСТЬNULL(ХозрасчетныйОборотыДтКт.КоличествоОборотКт, 0),
		               |		ХозрасчетныйОборотыДтКт.Период,
		               |		ХозрасчетныйОборотыДтКт.Регистратор,
		               |		""""
		               |	ИЗ
		               |		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&ДатаНач, &ДатаКон, Запись, СчетДт В ИЕРАРХИИ (&ПрочиеСчетаРасходов), , СчетКт В ИЕРАРХИИ (&СписокСчетовУчетаИмущества), , Организация = &Организация) КАК Расходы
		               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&ДатаНач, &ДатаКон, Запись, (НЕ СчетДт В ИЕРАРХИИ (&ПрочиеСчетаДоходов)), , СчетКт В ИЕРАРХИИ (&ПрочиеСчетаДоходов), , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		               |			ПО Расходы.Регистратор = ХозрасчетныйОборотыДтКт.Регистратор
		               |				И Расходы.СубконтоКт1 = ХозрасчетныйОборотыДтКт.СубконтоКт3
		               |	
		               |	ОБЪЕДИНИТЬ ВСЕ
		               |	
		               |	ВЫБРАТЬ
		               |		ХозрасчетныйОборотыДтКт.СчетДт,
		               |		ХозрасчетныйОборотыДтКт.СубконтоДт1,
		               |		ХозрасчетныйОборотыДтКт.СубконтоДт2,
		               |		ХозрасчетныйОборотыДтКт.СчетКт,
		               |		ХозрасчетныйОборотыДтКт.СубконтоКт1,
		               |		ХозрасчетныйОборотыДтКт.СубконтоКт2,
		               |		ХозрасчетныйОборотыДтКт.СубконтоКт3,
		               |		ЕСТЬNULL(ХозрасчетныйОборотыДтКт.СуммаНУОборотКт, 0),
		               |		ЕСТЬNULL(ХозрасчетныйОборотыДтКт.КоличествоОборотКт, 0),
		               |		ХозрасчетныйОборотыДтКт.Период,
		               |		ХозрасчетныйОборотыДтКт.Регистратор,
		               |		""Недостачи и списания""
		               |	ИЗ
		               |		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
		               |				&ДатаНач,
		               |				&ДатаКон,
		               |				Запись,
		               |				СчетДт В ИЕРАРХИИ (&Счет94)
		               |					ИЛИ СчетДт В ИЕРАРХИИ (&Счет91_2),
		               |				,
		               |				СчетКт В ИЕРАРХИИ (&СписокСчетовУчетаИмущества),
		               |				,
		               |				Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		               |	
		               |	ОБЪЕДИНИТЬ ВСЕ
		               |	
		               |	ВЫБРАТЬ
		               |		ХозрасчетныйОборотыДтКт.СчетДт,
		               |		ХозрасчетныйОборотыДтКт.СубконтоДт1,
		               |		ХозрасчетныйОборотыДтКт.СубконтоДт2,
		               |		ХозрасчетныйОборотыДтКт.СчетКт,
		               |		ХозрасчетныйОборотыДтКт.СубконтоКт1,
		               |		ХозрасчетныйОборотыДтКт.СубконтоКт2,
		               |		ХозрасчетныйОборотыДтКт.СубконтоКт3,
		               |		ЕСТЬNULL(ХозрасчетныйОборотыДтКт.СуммаНУОборотКт, 0),
		               |		ЕСТЬNULL(ХозрасчетныйОборотыДтКт.КоличествоОборотКт, 0),
		               |		ХозрасчетныйОборотыДтКт.Период,
		               |		ХозрасчетныйОборотыДтКт.Регистратор,
		               |		""Возвраты""
		               |	ИЗ
		               |		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&ДатаНач, &ДатаКон, Запись, СчетДт В ИЕРАРХИИ (&СписокСчетовРасчетов), , СчетКт В ИЕРАРХИИ (&СписокСчетовУчетаИмущества), , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		               |	
		               |	ОБЪЕДИНИТЬ ВСЕ
		               |	
		               |	ВЫБРАТЬ
		               |		ХозрасчетныйОборотыДтКт.СчетДт,
		               |		ХозрасчетныйОборотыДтКт.СубконтоДт1,
		               |		ХозрасчетныйОборотыДтКт.СубконтоДт2,
		               |		ХозрасчетныйОборотыДтКт.СчетКт,
		               |		ХозрасчетныйОборотыДтКт.СубконтоКт1,
		               |		ХозрасчетныйОборотыДтКт.СубконтоКт2,
		               |		ХозрасчетныйОборотыДтКт.СубконтоКт3,
		               |		ЕСТЬNULL(ХозрасчетныйОборотыДтКт.СуммаНУОборотКт, 0),
		               |		0,
		               |		ХозрасчетныйОборотыДтКт.Период,
		               |		ХозрасчетныйОборотыДтКт.Регистратор,
		               |		""Услуги""
		               |	ИЗ
		               |		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
		               |				&ДатаНач,
		               |				&ДатаКон,
		               |				Запись,
		               |				СчетДт В ИЕРАРХИИ (&СписокСчетовРасчетов),
		               |				,
		               |				СчетКт В ИЕРАРХИИ (&СписокСчетовДоходов),
		               |				,
		               |				Организация = &Организация
		               |					И СубконтоКт3.Услуга) КАК ХозрасчетныйОборотыДтКт
		               |	
		               |	ОБЪЕДИНИТЬ ВСЕ
		               |	
		               |	ВЫБРАТЬ
		               |		ХозрасчетныйОборотыДтКт.СчетДт,
		               |		ХозрасчетныйОборотыДтКт.СубконтоДт1,
		               |		ХозрасчетныйОборотыДтКт.СубконтоДт2,
		               |		ХозрасчетныйОборотыДтКт.СчетКт,
		               |		ХозрасчетныйОборотыДтКт.СубконтоКт1,
		               |		ХозрасчетныйОборотыДтКт.СубконтоКт2,
		               |		ХозрасчетныйОборотыДтКт.СубконтоКт3,
		               |		ЕСТЬNULL(ХозрасчетныйОборотыДтКт.СуммаНУОборотКт, 0),
		               |		ЕСТЬNULL(ХозрасчетныйОборотыДтКт.КоличествоОборотКт, 0),
		               |		ХозрасчетныйОборотыДтКт.Период,
		               |		ХозрасчетныйОборотыДтКт.Регистратор,
		               |		""Прочие""
		               |	ИЗ
		               |		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&ДатаНач, &ДатаКон, Запись, (НЕ СчетДт В ИЕРАРХИИ (&СписокСчетовУчетаИмущества)), , СчетКт В ИЕРАРХИИ (&ПрочиеСчетаДоходов), , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		               |	
		               |	ОБЪЕДИНИТЬ ВСЕ
		               |	
		               |	ВЫБРАТЬ
		               |		ХозрасчетныйОборотыДтКт.СчетДт,
		               |		ХозрасчетныйОборотыДтКт.СубконтоДт1,
		               |		ХозрасчетныйОборотыДтКт.СубконтоДт2,
		               |		ХозрасчетныйОборотыДтКт.СчетКт,
		               |		ХозрасчетныйОборотыДтКт.СубконтоКт1,
		               |		ХозрасчетныйОборотыДтКт.СубконтоКт2,
		               |		ХозрасчетныйОборотыДтКт.СубконтоКт3,
		               |		ВЫБОР
		               |			КОГДА ЕСТЬNULL(ХозрасчетныйОборотыДтКт.КоличествоОборотКт, 0) = 0
		               |				ТОГДА ЕСТЬNULL(ХозрасчетныйОборотыДтКт.СуммаНУОборотКт, 0)
		               |			ИНАЧЕ ЕСТЬNULL(ХозрасчетныйОборотыДтКт.СуммаНУОборотКт, 0) * ЕСТЬNULL(Расходы.КоличествоОборотКт, 0) / ЕСТЬNULL(ХозрасчетныйОборотыДтКт.КоличествоОборотКт, 0)
		               |		КОНЕЦ,
		               |		ЕСТЬNULL(Расходы.КоличествоОборотКт, 0),
		               |		ХозрасчетныйОборотыДтКт.Период,
		               |		ХозрасчетныйОборотыДтКт.Регистратор,
		               |		ВЫБОР
		               |			КОГДА Расходы.СчетКт В ИЕРАРХИИ (&Счет41)
		               |				ТОГДА ""Товары""
		               |			ИНАЧЕ ""Продукция""
		               |		КОНЕЦ
		               |	ИЗ
		               |		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&ДатаНач, &ДатаКон, Запись, СчетДт В ИЕРАРХИИ (&Счет9002), , СчетКт В ИЕРАРХИИ (&Счет45), , Организация = &Организация) КАК Расходы
		               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&ДатаНач, &ДатаКон, Запись, СчетДт В ИЕРАРХИИ (&СписокСчетовРасчетов), , СчетКт В ИЕРАРХИИ (&СписокСчетовДоходов), , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		               |			ПО (ХозрасчетныйОборотыДтКт.Регистратор = Расходы.Регистратор)
		               |				И Расходы.СубконтоКт2 = ХозрасчетныйОборотыДтКт.СубконтоКт3) КАК ВложенныйЗапрос
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ВложенныйЗапрос.СчетДт,
		               |	ВложенныйЗапрос.СубконтоДт1,
		               |	ВложенныйЗапрос.СубконтоДт2,
		               |	ВложенныйЗапрос.СчетКт,
		               |	ВложенныйЗапрос.СубконтоКт1,
		               |	ВложенныйЗапрос.СубконтоКт2,
		               |	ВложенныйЗапрос.СубконтоКт3,
		               |	ВложенныйЗапрос.ДатаОперации,
		               |	ВложенныйЗапрос.Регистратор,
		               |	ВложенныйЗапрос.ВидДоходов
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	ДатаОперации
		               |ИТОГИ ПО
		               |	СчетДт";
		
		Если ВключаяВложенныеПодразделения Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"Организация = &Организация","Организация В (&Организация)");
			СписокОП = ОбщегоНазначения.ПолучитьСписокОбособленныхПодразделенийОрганизации(Организация);
			СписокОП.Добавить(Организация.Ссылка);
			Запрос.УстановитьПараметр("Организация",                СписокОП);
			
		КонецЕсли;
		
		Результат = Запрос.Выполнить().Выгрузить();
		Результат.Сортировать("ДатаОперации");
		ИтогоСумма = 0;
		ИтогоКоличество = 0;
		
		ДокументРезультат.Вывести(ОбластьШапкаТаблицы);
		
		Для Каждого Выборка Из Результат Цикл
			
			Если Выборка.СчетКт = NULL Тогда
				Продолжить;
			КонецЕсли;
			
			Если Выборка.Сумма = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			СтруктураДохода = ВидДоходаПоОперации(Выборка.СчетКт, Выборка.СубконтоКт1, Выборка.СубконтоКт2, Выборка.СубконтоКт3, Выборка);
			УсловиеВыбытия = ПолучитьУсловиеВыбытия(Выборка);
			
			Если ВидРасходаСоответствуетКритериюОтбора(СтруктураДохода.ВидДохода)
				И УсловиеВыбытияСоответствуетКритериюОтбора(УсловиеВыбытия) Тогда
				
				ОбластьСтрока.Параметры.Дата           = Формат(Выборка.ДатаОперации, "ДФ=dd.MM.yyyy");
				ОбластьСтрока.Параметры.УсловиеВыбытия = УсловиеВыбытия;
				ОбластьСтрока.Параметры.Основание      = Выборка.Регистратор;
				ОбластьСтрока.Параметры.ВидДохода      = СтруктураДохода.ВидДохода;
				ОбластьСтрока.Параметры.ОбъектУчета    = СтруктураДохода.ОбъектУчета;
				ОбластьСтрока.Параметры.Количество     = Выборка.Количество;
				
				Если  ТипЗнч(Выборка.Регистратор) = СтруктураДохода.ВидДохода = "Доход не возникает" Тогда
					ОбластьСтрока.Параметры.Сумма          = "";
				Иначе
					ОбластьСтрока.Параметры.Сумма          = Выборка.Сумма;
					ИтогоСумма      = ИтогоСумма      + ?(Выборка.Сумма =      Null, 0, Выборка.Сумма);
					
				КонецЕсли;
				ОбластьСтрока.Параметры.Расшифровка    = Выборка.Регистратор;
				
				
				ДокументРезультат.Вывести(ОбластьСтрока);
				ИтогоКоличество = ИтогоКоличество + ?(Выборка.Количество = Null, 0, Выборка.Количество);
				
			КонецЕсли;
			
		КонецЦикла;
		
		СтруктураЛиц = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Организация, ДатаКон);
		ОбластьПодвал.Параметры.ОтветственныйЗаРегистры = ОбщегоНазначения.ФамилияИнициалыФизЛица(СтруктураЛиц.ОтветственныйЗаРегистры);
		ОбластьПодвалТаблицы.Параметры.ИтогоСумма = ИтогоСумма;
		ОбластьПодвалТаблицы.Параметры.ИтогоКоличество = ИтогоКоличество;
		ДокументРезультат.Вывести(ОбластьПодвалТаблицы);
		ДокументРезультат.Вывести(ОбластьПодвал);
		
	КонецПроцедуры
	
	////////////////////////////////////////////////////////////////////////////////
	// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
	// 
	
	НП = Новый НастройкаПериода;
	
	Счет90_01_1 = ПланыСчетов.Хозрасчетный.ВыручкаНеЕНВД;
	
	Счет91_01   = ПланыСчетов.Хозрасчетный.ПрочиеДоходы;
	Счет45 = ПланыСчетов.Хозрасчетный.ТоварыОтгруженные;
	
	СписокСчетовУчетаИмущества = Новый СписокЗначений();
	СписокСчетовУчетаИмущества.Добавить(ПланыСчетов.Хозрасчетный.ВложенияВоВнеоборотныеАктивы); // 08
	СписокСчетовУчетаИмущества.Добавить(ПланыСчетов.Хозрасчетный.ОсновныеСредства);             // 01
	СписокСчетовУчетаИмущества.Добавить(ПланыСчетов.Хозрасчетный.НематериальныеАктивы);         // 04
	СписокСчетовУчетаИмущества.Добавить(ПланыСчетов.Хозрасчетный.ОборудованиеКУстановке);       // 07
	СписокСчетовУчетаИмущества.Добавить(ПланыСчетов.Хозрасчетный.Материалы);                    // 10
	СписокСчетовУчетаИмущества.Добавить(ПланыСчетов.Хозрасчетный.Полуфабрикаты);                // 21
	СписокСчетовУчетаИмущества.Добавить(ПланыСчетов.Хозрасчетный.ВспомогательныеПроизводства);  // 23
	СписокСчетовУчетаИмущества.Добавить(ПланыСчетов.Хозрасчетный.Товары);                       // 41
	СписокСчетовУчетаИмущества.Добавить(ПланыСчетов.Хозрасчетный.ТоварыОтгруженные);            // 45
	СписокСчетовУчетаИмущества.Добавить(ПланыСчетов.Хозрасчетный.ГотоваяПродукция);             // 43
	СписокСчетовУчетаИмущества.Добавить(ПланыСчетов.Хозрасчетный.ПроизводствоИзДавальческогоСырья);  // 20.02
	
#КонецЕсли
// Вызывается из тела процедуры "Сформировать"
// осуществляет проверку значений "НачалоПериода" и "КонецПериода"
// введенных пользователем.
Функция ПроверкаПериода()
	
	ПроверкаПройдена=Истина;
	
	Если НачалоПериода > КонецПериода Тогда
		
		Предупреждение("Неправильно задан период формирования отчета!"+Символы.ПС+
		               "Дата начала больше даты окончания периода.");
					   
		ПроверкаПройдена=Ложь;
		
	ИначеЕсли НачалоПериода='00010101' Тогда
		
		Предупреждение("Не указана дата начала отчета");
					   
		ПроверкаПройдена=Ложь;
		
	ИначеЕсли КонецПериода='00010101' Тогда
		
		Предупреждение("Не указана дата конца отчета");
					   
		ПроверкаПройдена=Ложь;
	
	КонецЕсли;
		
	Возврат ПроверкаПройдена;
	
КонецФункции // ПроверкаПериода()

// Процедура вызывается при нажатии кнопки настройки периода в диалоге документа.
// Позволяет в удобном диалоговом окне задать значения реквизитов НачалоПериода
// и КонецПериода
Процедура ВыбПериодНажатие(Элемент)

	РаботаСДиалогами.ОбработчикНастройкаПериодаНажатие(НачалоПериода, КонецПериода);

КонецПроцедуры

Процедура Сформировать(Кнопка) Экспорт
	
	СформироватьОтчет();

КонецПроцедуры

Процедура СформироватьОтчет()
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Предупреждение("Не указана организация.");
		Возврат;
	КонецЕсли;

	Если НЕ ПроверкаПериода() Тогда
		Возврат;
	КонецЕсли;
	
	ЭлементыФормы.ПанельРазделовКниги.Страницы.ОсновнойРаздел.Видимость = Не (ФормироватьДополнительныеЛисты И ВыводитьТолькоДопЛисты);
	
	СформироватьКнигуПродаж(ЭлементыФормы);
	ЭлементыФормы.ПанельРазделовКниги.ТекущаяСтраница = ЭлементыФормы.ПанельРазделовКниги.Страницы.ОсновнойРаздел;

	ТекущийЭлемент = ЭлементыФормы.ТабличныйДокумент;
	
КонецПроцедуры

Процедура ПриОткрытии()
	НачалоПериода = НачалоМесяца(РабочаяДата);
	КонецПериода = КонецМесяца(РабочаяДата);

	СформироватьОтчетПоСтандартнойФорме = Истина;
	СкрытьКолонкиПоСтавке20 = Истина;
	
	ЭлементыФормы.ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ЭлементыФормы.ТабличныйДокумент.АвтоМасштаб = Истина;
	
	УстановитьВидимость();

КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Организация = глЗначениеПеременной("ОсновнаяОрганизация");
	
КонецПроцедуры

Процедура УстановитьВидимость()
	
	ЭлементыФормы.ДополнительныеЛистыЗаТекущийПериод.Доступность = ФормироватьДополнительныеЛисты;
	ЭлементыФормы.ВыводитьТолькоДопЛисты.Доступность = ФормироватьДополнительныеЛисты;
	
	ЭлементыФормы.ВключаяОбособленныеПодразделения.Видимость = СтандартныеОтчеты.ДоступностьУчетаПоПодразделениям();
	
КонецПроцедуры

Процедура ФормироватьДополнительныеЛистыПриИзменении(Элемент)
	
	Если Не ФормироватьДополнительныеЛисты И ВыводитьТолькоДопЛисты Тогда
		ВыводитьТолькоДопЛисты = Ложь;
	КонецЕсли;
	
	УстановитьВидимость();
	
КонецПроцедуры

Процедура КоманднаяПанельДействиеНастройка(Кнопка)
	
	ФормаНастройки = ПолучитьФорму("ФормаНастройки");
	ФормаНастройки.ГруппироватьПоКонтрагентам = ГруппироватьПоКонтрагентам;
	ФормаНастройки.КонтрагентДляОтбора = КонтрагентДляОтбора;
	ФормаНастройки.ОтбиратьПоКонтрагенту = ОтбиратьПоКонтрагенту;
	ФормаНастройки.СкрытьКолонкиПоСтавке20 = СкрытьКолонкиПоСтавке20;
	ФормаНастройки.СформироватьОтчетПоСтандартнойФорме = СформироватьОтчетПоСтандартнойФорме;
	ФормаНастройки.ВыводитьПродавцовПоАвансам = ВыводитьПродавцовПоАвансам;
	
	Если ФормаНастройки.ОткрытьМодально() = Истина Тогда
		ГруппироватьПоКонтрагентам = ФормаНастройки.ГруппироватьПоКонтрагентам;
		КонтрагентДляОтбора = ФормаНастройки.КонтрагентДляОтбора;
		ОтбиратьПоКонтрагенту = ФормаНастройки.ОтбиратьПоКонтрагенту;
		СкрытьКолонкиПоСтавке20 = ФормаНастройки.СкрытьКолонкиПоСтавке20;
		СформироватьОтчетПоСтандартнойФорме = ФормаНастройки.СформироватьОтчетПоСтандартнойФорме;
		ВыводитьПродавцовПоАвансам = ФормаНастройки.ВыводитьПродавцовПоАвансам;
		
		СформироватьОтчет();
		
	КонецЕсли;		
	
КонецПроцедуры

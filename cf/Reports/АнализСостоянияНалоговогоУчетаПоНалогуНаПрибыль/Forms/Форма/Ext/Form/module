Перем ТаблицаОрганизаций Экспорт;

//////////////////////////////////////////////////////////
// Элементы формы: заполнение, видимость, доступность
//

Процедура ПриОткрытии()
	
	
	СтандартныеОтчеты.ЗаполнитьТаблицуОрганизаций(ЭтаФорма);
	
	УправлениеОрганизациями();
	СформироватьКарту();
	
КонецПроцедуры

Процедура УстановитьВидимостьНастроекОтчетаПоДокументам(ЭтоОтчетПоДокументам, ДоступностьПоДокументам = Ложь)
	
	ЭлементыФормы.ПоДокументам.Видимость = ЭтоОтчетПоДокументам;
	ЭлементыФормы.ПоДокументам.Доступность = (ДоступностьПоДокументам И ЭтоОтчетПоДокументам);
	ЭлементыФормы.ПоОшибкам.Видимость = ЭтоОтчетПоДокументам;
	ЭлементыФормы.ПоОшибкам.Доступность = ЭтоОтчетПоДокументам;
	
КонецПроцедуры

Процедура УстановитьВидимостьНастроекКарты(ЭтоКарта)
	
	ЭлементыФормы.Панель.Видимость = Не ЭтоКарта;
	ЭлементыФормы.КоманднаяПанель.Видимость = Не ЭтоКарта;
	ЭлементыФормы.КоманднаяПанельСхема.Видимость = ЭтоКарта;
	ЭлементыФормы.НадписьПериодНач.Видимость = ЭтоКарта;
	ЭлементыФормы.НадписьПо.Видимость = ЭтоКарта;
	ЭлементыФормы.КнопкаНастройкаПериода.Видимость = ЭтоКарта;
	ЭлементыФормы.НадписьОрганизация.Видимость = ЭтоКарта;
	
	ЭлементыФормы.НачалоПериода.Видимость = ЭтоКарта;
	ЭлементыФормы.НачалоПериода.Доступность = ЭтоКарта;
	ЭлементыФормы.КонецПериода.Видимость = ЭтоКарта;
	ЭлементыФормы.КонецПериода.Доступность = ЭтоКарта;
	ЭлементыФормы.Организация.Видимость = ЭтоКарта;
	ЭлементыФормы.Организация.Доступность = ЭтоКарта;
	
КонецПроцедуры

Процедура НачалоПериодаПриИзменении(Элемент)
	КонецПериода = КонецМесяца(НачалоПериода);
	НП.УстановитьПериод(НачалоДня(НачалоПериода), ?(КонецПериода = '00010101', КонецПериода, КонецДня(КонецПериода)));
КонецПроцедуры

Процедура КонецПериодаПриИзменении(Элемент)
	НП.УстановитьПериод(НачалоДня(НачалоПериода), ?(КонецПериода = '00010101', КонецПериода, КонецДня(КонецПериода)));
    СформироватьКарту();	
КонецПроцедуры

Процедура КнопкаНастройкаПериодаНажатие(Элемент)

	НП.УстановитьПериод(НачалоДня(НачалоПериода), ?(КонецПериода = '00010101', КонецПериода, КонецДня(КонецПериода)));

	Если НП.Редактировать() Тогда

		НачалоПериода = НП.ПолучитьДатуНачала();
		КонецПериода = НП.ПолучитьДатуОкончания();

	КонецЕсли;
	СформироватьКарту();

КонецПроцедуры // КнопкаНастройкаПериодаНажатие()

Процедура ОрганизацияПриИзменении(Элемент)
	
	УправлениеОрганизациями();
	СформироватьКарту();
КонецПроцедуры

//////////////////////////////////////////////////////////
/// Построение структуры налоговой базы
///

// Процедура формирования структуры налоговой базы
//
Процедура СформироватьКарту(ОткрытоИзИстории = Ложь)
	
	ЭтаФорма.ЭлементыФормы.ДокументРезультат.ВертикальнаяПолосаПрокрутки =  Ложь;
	ЭтоЕНВД = Ложь;
	НомерТекущейСхемы = -1;
	Если ЗначениеЗаполнено(Организация) И ЗначениеЗаполнено(КонецПериода) Тогда
		мУчетнаяПолитикаРегл = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(КонецПериода, Ложь, Организация, "НУ", Истина);
		Если Не мУчетнаяПолитикаРегл.Количество() = 0 Тогда
			ЭтоЕНВД = мУчетнаяПолитикаРегл.ОрганизацияЯвляетсяПлательщикомЕНВД;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЭтоЕНВД Тогда
		ЭлементыФормы.Карта.Перейти(ЭтотОбъект.Метаданные().Макеты.КартаЕНВД);
	Иначе
		ЭлементыФормы.Карта.Перейти(ЭтотОбъект.Метаданные().Макеты.Карта);
	КонецЕсли;	
	
	УстановитьВидимостьНастроекКарты(Истина);	
	УстановитьВидимостьНастроекОтчетаПоДокументам(Ложь);
	
	Если ИсторияНазад.Количество() > 0 Тогда
		ПоследняяЗаписьИстории = ИсторияНазад.Получить(ИсторияНазад.Количество() - 1).Значение;
	Иначе 
		ПоследняяЗаписьИстории = - 100;
	КонецЕсли;
	
	Если Не ОткрытоИзИстории И Не ПоследняяЗаписьИстории = -1 Тогда
		ИсторияНазад.Очистить();
		ИсторияНазад.Добавить(-1);
	КонецЕсли;
	
	ОткрытоИзТаблицы = Ложь;
	УправлениеОрганизациями()
	
КонецПроцедуры

// Преобразовывает web-строку в обычную.
//
Функция ПодготовитьСтроку(Строка)
	
	Стр = Строка;
	
	Стр = СтрЗаменить(Стр, "%20", " ");
	Стр = СтрЗаменить(Стр, """", """""");
	
	Возврат Стр;
	
КонецФункции // ПодготовитьСтроку()

Процедура Картаonclick(Элемент, pEvtObj)
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Предупреждение("Не указана организация", 30, "Анализ состояния налогового учета");
		Возврат;
	КонецЕсли;
	
	Если КонецПериода < НачалоПериода Тогда
		Предупреждение("Дата начала периода не может быть больше даты конца периода", 30, "Анализ состояния налогового учета");
		Возврат;
	КонецЕсли;
	
	Если pEvtObj.returnValue = Ложь Тогда
		Возврат;
	КонецЕсли;
	
	htmlElement = pEvtObj.srcElement;

	Пока htmlElement <> Неопределено И ВРег(htmlElement.tagName) <> "AREA" Цикл
		htmlElement = htmlElement.parentElement;
	КонецЦикла;

	Если htmlElement = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Позиция = Найти(htmlElement.href, "#");

	Если Позиция > 0 Тогда
		
		Ссылка = Сред(ПодготовитьСтроку(htmlElement.href), Позиция + 1);
		
		СформироватьСхему(Ссылка);
		
		pEvtObj.returnValue = Ложь;
		Возврат;

	КонецЕсли;	
	
КонецПроцедуры

//////////////////////////////////////////////////////////
/// Построение схем
///

Процедура СформироватьСхему(Ссылка = "", НомерТекущейСхемы = 100, ОткрытоИзИстории = Ложь)
	
	
	Если Ссылка = "Tax" И СвойстваОрганизации.ЕстьОП И Не ВключатьОбособленныеПодразделения Тогда
			Предупреждение("Начисление налога на прибыль доступно для организации с обособленными подразделениями.
			|Укажите в поле ""Организации"" организацию с особособленными подразделениями и выберите блок ""Налог""", 60, "Анализ состояния налогового учета");
			Возврат;
	   КонецЕсли;
	
	
	ФормаОтчета = ЭтаФорма; 
	Если НомерТекущейСхемы > 30 Или НомерТекущейСхемы < 0 Тогда	
		
		Если Ссылка = "Tax" Тогда
			НомерТекущейСхемы = 0;  
		ИначеЕсли Ссылка = "Income" Тогда
			НомерТекущейСхемы = 1;   
		ИначеЕсли Ссылка = "Expenses" Тогда
			НомерТекущейСхемы = 2; 
		ИначеЕсли Ссылка = "AssetValue" Тогда
			НомерТекущейСхемы = 3;   
		ИначеЕсли Ссылка = "Production" Тогда
			НомерТекущейСхемы = 4;   
		ИначеЕсли Ссылка = "TransportationExpenses" Тогда
			НомерТекущейСхемы = 5;   
		ИначеЕсли Ссылка = "IndirectExpenses" Тогда
			НомерТекущейСхемы = 6;   
		ИначеЕсли Ссылка = "OtherExpenses" Тогда
			НомерТекущейСхемы = 7;  
		ИначеЕсли Ссылка = "IndirectExpenses2" Тогда
			НомерТекущейСхемы = 8;  
		ИначеЕсли Ссылка = "Assets" Тогда
			НомерТекущейСхемы = 9;  
		ИначеЕсли Ссылка = "OrdinaryExpenses" Тогда
			НомерТекущейСхемы = 10;  
		КонецЕсли;
	НомерТекущейСхемы = НомерТекущейСхемы + ?(ВключатьОбособленныеПодразделения И Не ОткрытоИзИстории, 20, 0);
	ФормаОтчета.НомерТекущейСхемы = НомерТекущейСхемы;
КонецЕсли;	

	
	УстановитьВидимостьНастроекКарты(Ложь);
    УстановитьВидимостьНастроекОтчетаПоДокументам(Ложь);
	
	Если Не ОткрытоИзИстории Тогда
		ИсторияНазад.Добавить(НомерТекущейСхемы);
	КонецЕсли;
	
	ЭтаФорма.ЭлементыФормы.ДокументРезультат.ВертикальнаяПолосаПрокрутки =  Ложь;
	СформироватьОтчет(ФормаОтчета.ЭлементыФормы.ДокументРезультат, НомерТекущейСхемы);
	ОткрытоИзТаблицы = Ложь;
   ЭлементыФормы.ДокументРезультат.ТекущаяОбласть = ЭлементыФормы.ДокументРезультат.Область(1, 1);		
	
КонецПроцедуры

//////////////////////////////////////////////////////////
 /// Построение таблиц
 ///
 
 Процедура СформироватьТаблицу(ДетализацияПоДокументам, ДетализацияПоОшибкам)
	
	ДоступностьПоДокументам = ДетализацияПоДокументам;
	УстановитьВидимостьНастроекКарты(Ложь);
	ЭтаФорма.ЭлементыФормы.ДокументРезультат.ВертикальнаяПолосаПрокрутки =  Истина;
	СформироватьОтчетПоДокументам(ЭтаФорма.ЭлементыФормы.ДокументРезультат, ТаблицаФорматаРасшифровки, ТекущийЗаголовок, ДетализацияПоДокументам, ДетализацияПоОшибкам, ДоступностьПоДокументам);
	УстановитьВидимостьНастроекОтчетаПоДокументам(Истина,ДоступностьПоДокументам);
	ОткрытоИзТаблицы = Истина;
    ЭлементыФормы.ДокументРезультат.ТекущаяОбласть = ЭлементыФормы.ДокументРезультат.Область(1, 1);		
	
КонецПроцедуры


Процедура КнопкаСформироватьТаблицуДокументов()
	
			СформироватьОтчетПоДокументам(ЭтаФорма.ЭлементыФормы.ДокументРезультат, ТаблицаФорматаРасшифровки, ТекущийЗаголовок, ЭтаФорма.ПоДокументам, ЭтаФорма.ПоОшибкам, Истина);
КонецПроцедуры

//////////////////////////////////////////////////////////
// Обработка переходов 
//

Процедура ДокументРезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
		ВыбраннаяРасшифровка = Расшифровка;

		Если ТипЗнч(ВыбраннаяРасшифровка) = Тип("Соответствие") Тогда
		СтандартнаяОбработка = Ложь;
		
		Организация = Расшифровка.Получить("Организация");
		ВключатьОбособленныеПодразделения = Расшифровка.Получить("ВключатьОбособленныеПодразделения");
			
			НомерТекущейСхемы = ВыбраннаяРасшифровка["НомерТекущейСхемы"];
			
			Если ВыбраннаяРасшифровка["ВидРасшифровки"] = "Схема" Тогда
				
				Если НЕ ИсторияВперед.Количество() = 0 Тогда
					Шаг = ИсторияВперед.Количество() - 1;
					НомерСхемы = ИсторияВперед.Получить(Шаг).Значение;
					ИсторияНазад.Добавить(НомерСхемы);
					ИсторияВперед.Очистить();
					
				КонецЕсли;
				СформироватьСхему(, НомерТекущейСхемы);			
			Иначе
				
				ТаблицаФорматаРасшифровки = ВыбраннаяРасшифровка["ТаблицаФорматаРасшифровки"];
				ТекущийЗаголовок   = ВыбраннаяРасшифровка["ЗаголовокТекущий"];
				ЭтаФорма.ПоДокументам = Ложь;
				ЭтаФорма.ПоОшибкам = Ложь;
				ЭтаФорма.ЭлементыФормы.ПоДокументам.Доступность = ВыбраннаяРасшифровка["ДоступностьПоДокументам"];
				СформироватьТаблицу(ЭтаФорма.ПоДокументам, ЭтаФорма.ПоДокументам);
			КонецЕсли;
		КонецЕсли;	
		
КонецПроцедуры // ДокументРезультатОбработкаРасшифровки()

Процедура КнопкаНазадНажатие(Элемент)
	
	Шаг = ИсторияНазад.Количество() - 1;
	НомерСхемы = ИсторияНазад.Получить(Шаг).Значение;
	
	Если НЕ ИсторияНазад.Количество() = 1 Тогда
		ИсторияВперед.Добавить(НомерСхемы);
		ИсторияНазад.Удалить(Шаг);
	КонецЕсли;
	
	Если НомерСхемы = НомерТекущейСхемы Тогда
		Шаг = ИсторияНазад.Количество() - 1;
		НомерСхемы = ИсторияНазад.Получить(Шаг).Значение;
		
		Если НЕ ИсторияНазад.Количество() = 1 Тогда
			ИсторияВперед.Добавить(НомерСхемы);
			ИсторияНазад.Удалить(Шаг);
		КонецЕсли;
	КонецЕсли;	
	
	СделатьШаг(НомерСхемы);
	
		
КонецПроцедуры

Процедура КнопкаВпередНажатие(Элемент)
	
	Шаг = ИсторияВперед.Количество() - 1;
	НомерСхемы = ИсторияВперед.Получить(Шаг).Значение;
	ИсторияВперед.Удалить(Шаг);
	ИсторияНазад.Добавить(НомерСхемы);
	
	СделатьШаг(НомерСхемы,Истина)
	
КонецПроцедуры

Процедура СделатьШаг(НомерСхемы, ОткрытоИзИстории = Ложь)
	
	НомерТекущейСхемы = НомерСхемы;
	
	Если НомерСхемы = -1 Тогда
		СформироватьКарту(Истина);
	Иначе
		СформироватьСхему(, НомерТекущейСхемы, ОткрытоИзИстории)
	КонецЕсли;
КонецПроцедуры

Процедура КнопкаПоказатьКартуНажатие(Элемент)
	
	СформироватьКарту();
КонецПроцедуры

Процедура ПоДокументамПриИзменении(Элемент)
	КнопкаСформироватьТаблицуДокументов()
КонецПроцедуры

Процедура ПоОшибкамПриИзменении(Элемент)
	КнопкаСформироватьТаблицуДокументов()
КонецПроцедуры

Процедура КоманднаяПанельПечать(Кнопка)
	
	#Если Клиент Тогда
		
		ЭлементыФормы.ДокументРезультат.Напечатать(Ложь);
	#КонецЕсли
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
		ТекстВопроса = "Завершить работу с отчетом?";
						
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Отказ = Истина; 
		КонецЕсли;

	СтруктураОбщихПараметров = Новый Структура;
	СтруктураОбщихПараметров.Вставить("Организация", Организация);
	СтруктураОбщихПараметров.Вставить("НачалоПериода", НачалоПериода);
	СтруктураОбщихПараметров.Вставить("КонецПериода",  КонецПериода);
	
	СохранитьЗначение("ОбщиеПараметрыОтчетовХозрасчетный", СтруктураОбщихПараметров);
		
КонецПроцедуры

Процедура ОбновлениеОтображения()
	
	ПоказыватьНазад = ((ИсторияНазад.Количество() > 1) Или (ИсторияНазад.Количество() = 1 И Не ИсторияНазад[0].Значение = НомерТекущейСхемы));
	ПоказыватьВперед = ((ИсторияВперед.Количество() > 1) Или (ИсторияВперед.Количество() = 1 И Не ИсторияВперед[0].Значение = НомерТекущейСхемы));
	
	ЭлементыФормы.КоманднаяПанельСхема.Кнопки.КнопкаНазадВТаблице.Доступность     = ПоказыватьНазад;
	ЭлементыФормы.КоманднаяПанельСхема.Кнопки.КнопкаВпередВТаблице.Доступность    = ПоказыватьВперед;
	ЭлементыФормы.КоманднаяПанель.Кнопки.КнопкаНазад.Доступность     = ПоказыватьНазад;
	ЭлементыФормы.КоманднаяПанель.Кнопки.КнопкаВперед.Доступность    = ПоказыватьВперед;
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	СтруктураОбщихПараметров = ВосстановитьЗначение("ОбщиеПараметрыОтчетовХозрасчетный");
		Если ТипЗнч(СтруктураОбщихПараметров) = Тип("Структура") Тогда
			
			
			СтруктураОбщихПараметров.Свойство("Организация", Организация);
			СтруктураОбщихПараметров.Свойство("НачалоПериода", НачалоПериода);
			СтруктураОбщихПараметров.Свойство("КонецПериода", КонецПериода);
			
			Если НачалоПериода = '00010101' тогда
				НачалоПериода = НачалоМесяца(ОбщегоНазначения.ПолучитьРабочуюДату());
			КонецЕсли;
			
			Если КонецПериода = '00010101' тогда
				КонецПериода = КонецМесяца(ОбщегоНазначения.ПолучитьРабочуюДату());
			КонецЕсли;
		КонецЕсли;

КонецПроцедуры

Процедура УправлениеОрганизациями() Экспорт
	
	Если ПолеОрганизация = Неопределено Тогда
		Организация                       = ПолеОрганизация;
		ВключатьОбособленныеПодразделения = Ложь;
	Иначе
		Организация                       = ТаблицаОрганизаций[ПолеОрганизация].Организация;
		ВключатьОбособленныеПодразделения = ТаблицаОрганизаций[ПолеОрганизация].ВключатьОбособленныеПодразделения;
	КонецЕсли;
	
	СписокОП = ОбщегоНазначения.ПолучитьСписокОбособленныхПодразделенийОрганизации(Организация);
	СписокОП.Добавить(Организация.Ссылка);
	
	Если ЗначениеЗаполнено(Организация.ГоловнаяОрганизация) Тогда
		СвойстваОрганизации = Новый Структура("Организация,ЕстьОП,ГоловнаяОрганизация,СписокОП", Организация, Истина, Организация.ГоловнаяОрганизация,СписокОП);
		
	Иначе
		
		СвойстваОрганизации = Новый Структура("Организация,ЕстьОП,ГоловнаяОрганизация,СписокОП", Организация, НЕ СписокОП.Количество() = 1, Организация, СписокОП);
	КонецЕсли;
	
КонецПроцедуры






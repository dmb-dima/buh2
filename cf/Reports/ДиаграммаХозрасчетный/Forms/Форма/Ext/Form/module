/////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ПРОЦЕДУРЫ И ФУНКЦИИ
//

// Обновляет таблицу отчета
//
// Параметры:
//	Нет.
//
Процедура ОбновитьОтчет() Экспорт

	НеЗаполнятьНастройкиПриОткрытии = Не Открыта();
	
	СформироватьОтчет(ЭлементыФормы.Диаграмма);

	ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.Диаграмма;
	
КонецПроцедуры // ОбновитьОтчет()

// Управляет пометками кнопок ком. панели
//
// Параметры:
//	Нет.
//
Процедура УправлениеПометкамиКнопокКоманднойПанели()
	
	
	
КонецПроцедуры // УправлениеПометкамиКнопокКоманднойПанели()

// Процедура формирует заголовок формы отчета с учетом настроек
//
// Параметры:
//  Нет.
//
Процедура СформироватьЗаголовокФормы()

	// Вывод заголовка, описателя периода и фильтров и заголовка
	Если ДатаНач = '00010101000000' И ДатаКон = '00010101000000' Тогда

		ОписаниеПериода     = "Период не установлен";

	Иначе

		Если ДатаНач = '00010101000000' ИЛИ ДатаКон = '00010101000000' Тогда

			ОписаниеПериода = "" + Формат(ДатаНач, "ДФ = ""дд.ММ.гггг""; ДП = ""...""") 
							+ " - "      + Формат(ДатаКон, "ДФ = ""дд.ММ.гггг""; ДП = ""...""");

		Иначе

			Если ДатаНач <= ДатаКон Тогда
				ОписаниеПериода = "" + ПредставлениеПериода(НачалоДня(ДатаНач), КонецДня(ДатаКон), "ФП = Истина");
			Иначе
				ОписаниеПериода = "Неправильно задан период!"
			КонецЕсли;

		КонецЕсли;

	КонецЕсли;

	Заголовок = ЗаголовокОтчета()+" (" + ОписаниеПериода + ") " +  ?(ЗначениеЗаполнено(Организация.НаименованиеПолное), Организация.НаименованиеПолное, Организация);
	
КонецПроцедуры // СформироватьЗаголовокФормы()()


/////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЕ ЭЛЕМЕНТОВ ФОРМЫ
//

Процедура Сформировать(Кнопка)
	
	ОбновитьОтчет();
	
КонецПроцедуры

Процедура НастройкаПериодаНажатие(Элемент)
	
	РаботаСДиалогами.ОбработчикНастройкаПериодаНажатие(ДатаНач, ДатаКон);
	
КонецПроцедуры

Процедура КоманднаяПанельФормыНастройка(Кнопка)
	
	ФормаНастройка = ПолучитьФорму("ФормаНастройка");
	ФормаНастройка.ВладелецФормы = ЭтаФорма;

	СтруктураСНастройками = СформироватьСтруктуруДляСохраненияНастроек();

	СтараяДатаКон = ДатаКон;
	СтараяДатаНач = ДатаНач;
	
	РезультатОткрытия = ФормаНастройка.ОткрытьМодально();

	Если РезультатОткрытия = Истина Тогда

		ОбновитьОтчет();

	Иначе
		
		// Форму закрыли эскейпом или по "Закрыть" - восстановим настройки, отчет формировать не будем!
		// Восстанавливаем сохраненные значения
		
		ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками);
		
		ДатаКон = СтараяДатаКон;
		ДатаНач = СтараяДатаНач;
		
	КонецЕсли;

КонецПроцедуры

Процедура ТипДиаграммыПриИзменении(Элемент)
	
	ЭлементыФормы.Диаграмма.ТипДиаграммы = ТипДиаг;
	
КонецПроцедуры

Процедура КоманднаяПанельФормыПечать(Кнопка)
	
	ТабДок = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("Макет");
	ОблДиаг = Макет.ПолучитьОбласть("Диаг");
	
	СформироватьОтчет(ОблДиаг.Рисунки.Диаграмма.Объект);
	
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	
	ТабДок.Вывести(ОблДиаг);
	
	УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(ТабДок, ЗаголовокОтчета(), Строка(глЗначениеПеременной("глТекущийПользователь")));
	
	ТабДок.Показать(СформироватьЗаголовок());
	
КонецПроцедуры

Процедура ДиаграммаОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	Если ТипЗнч(Расшифровка) = Тип("Структура") Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ОбработкаРасшифровкиСтандартногоОтчета(Расшифровка);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СчетПриИзменении(Элемент)
	
	Если Не Счет.Валютный и Ресурс = "ВалютнаяСумма" Тогда
		Ресурс = "Сумма";
	КонецЕсли;
	Если Не Счет.Количественный и Ресурс = "Количество" Тогда
		Ресурс = "Сумма";
	КонецЕсли;
	
	ПерезаполнитьНачальныеНастройки();
	
КонецПроцедуры

/////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
//

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ТиповыеОтчеты.НазначитьФормеУникальныйКлючИдентификации(ЭтаФорма);

	Если НЕ НеЗаполнятьНастройкиПриОткрытии Тогда
		
		ВидРесурса       = "НачальныйОстаток";
		СторонаРесурса   = "";
		Ресурс           = "Сумма";
		ВидПодписей      = ВидПодписейКДиаграмме.Нет;
		МаксСерий        = МаксимумСерий.НеЗадано;
		ТипДиаг          = ТипДиаграммы.ГистограммаОбъемная;
		РаздвижениеСерий = АвтоРаздвижениеСерий.Нет;
		
		ПоказыватьЗаголовок = Истина;
		
		СтруктураОбщихПараметров = ВосстановитьЗначение("ОбщиеПараметрыОтчетов"+ИмяРегистраБухгалтерии);
		Если ТипЗнч(СтруктураОбщихПараметров) = Тип("Структура") Тогда
			
			ВосстановитьНастройкиИзСтруктуры(СтруктураОбщихПараметров)
			
		КонецЕсли;
		
		ВысотаЗаголовка = 0;
		
	КонецЕсли;
	
	НП.УстановитьПериод(НачалоДня(ДатаНач), ?(ДатаКон = '00010101', ДатаКон, КонецДня(ДатаКон)));
	
	Если Не НеЗаполнятьНастройкиПриОткрытии Тогда 
		Организация = глЗначениеПеременной("ОсновнаяОрганизация");
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	УправлениеПометкамиКнопокКоманднойПанели();
	
	ЭлементыФормы.Диаграмма.ОбластьЗаголовка.Текст = СформироватьЗаголовок();
	
КонецПроцедуры

Процедура ПередСохранениемЗначений(Отказ)
	
	СохраненныеНастройки = СформироватьСтруктуруДляСохраненияНастроек();
	
КонецПроцедуры

Процедура ПослеВосстановленияЗначений()
	
	// Если настройка восстанавливается, когда открывается форма сформированного отчета, игнорируем
	Если НеЗаполнятьНастройкиПриОткрытии Тогда
		Возврат;
	КонецЕсли;
	
	ВосстановитьНастройкиИзСтруктуры(СохраненныеНастройки);
	
КонецПроцедуры

Процедура ОбновлениеОтображения()
	
	СформироватьЗаголовокФормы();
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	СтруктураОбщихПараметров = СформироватьСтруктуруДляСохраненияНастроек();
	
	СохранитьЗначение("ОбщиеПараметрыОтчетов"+ИмяРегистраБухгалтерии, СтруктураОбщихПараметров);
	
КонецПроцедуры




//////////////////////////////////////////////////////////
// МОДУЛЬ ФОРМЫ
//

ЭлементыФормы.ТипДиаг.СписокВыбора = ПолучитьСписокДоступныхТиповДиаграмм();


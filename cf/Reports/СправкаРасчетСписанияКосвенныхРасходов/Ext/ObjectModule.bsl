#Если Клиент Тогда
	
	Перем НП Экспорт;
	
	Функция СформироватьТекстЗапроса()
		
		Текст	= "ВЫБРАТЬ
		     	  |	СписаниеКосвенныхРасходов.Период КАК Период,
		     	  |	СписаниеКосвенныхРасходов.ВидДеятельности КАК ВидДеятельности,
		     	  |	СписаниеКосвенныхРасходов.СчетУчета КАК СчетУчета,
		     	  |	СписаниеКосвенныхРасходов.СтатьяЗатрат КАК СтатьяЗатрат,
		     	  |	СписаниеКосвенныхРасходов.СуммаЗатрат КАК СуммаЗатрат,
		     	  |	СписаниеКосвенныхРасходов.СуммаЗатратПР КАК СуммаЗатратПР,
		     	  |	СписаниеКосвенныхРасходов.СуммаЗатратВР КАК СуммаЗатратВР,
		     	  |	СписаниеКосвенныхРасходов.СуммаРасходовННП КАК СуммаРасходовННП,
		     	  |	СписаниеКосвенныхРасходов.СуммаРасходовННППР КАК СуммаРасходовННППР,
		     	  |	СписаниеКосвенныхРасходов.СуммаРасходовННПВР КАК СуммаРасходовННПВР,
		     	  |	СписаниеКосвенныхРасходов.СуммаРасходовНеННП КАК СуммаРасходовНеННП,
		     	  |	СписаниеКосвенныхРасходов.СуммаРасходовНеННППР КАК СуммаРасходовНеННППР,
		     	  |	СписаниеКосвенныхРасходов.СуммаРасходовНеННПВР КАК СуммаРасходовНеННПВР,
		     	  |	СписаниеКосвенныхРасходов.СуммаЗатратНУ КАК СуммаЗатратНУ,
		     	  |	СписаниеКосвенныхРасходов.СуммаРасходовННПНУ КАК СуммаРасходовННПНУ,
		     	  |	СписаниеКосвенныхРасходов.СуммаРасходовНеННПНУ КАК СуммаРасходовНеННПНУ,
		     	  |	СписаниеКосвенныхРасходов.СуммаРасходов КАК СуммаРасходов,
		     	  |	СписаниеКосвенныхРасходов.СуммаРасходовНУ КАК СуммаРасходовНУ,
		     	  |	СписаниеКосвенныхРасходов.СуммаРасходовПР КАК СуммаРасходовПР,
		     	  |	СписаниеКосвенныхРасходов.СуммаРасходовВР КАК СуммаРасходовВР
		     	  |ИЗ
		     	  |	(ВЫБРАТЬ
		     	  |		РасчетСписанияКосвенныхРасходов.ПериодРасчета КАК Период,
		     	  |		ВЫБОР
		     	  |			КОГДА РасчетСписанияКосвенныхРасходов.ВидДеятельностиДляНалоговогоУчетаЗатрат = &НЕЕНВД
		     	  |				ТОГДА 1
		     	  |			ИНАЧЕ ВЫБОР
		     	  |					КОГДА РасчетСписанияКосвенныхРасходов.ВидДеятельностиДляНалоговогоУчетаЗатрат = &ЕНВД
		     	  |						ТОГДА 3
		     	  |					ИНАЧЕ 2
		     	  |				КОНЕЦ
		     	  |		КОНЕЦ КАК ВидДеятельности,
		     	  |		РасчетСписанияКосвенныхРасходов.СчетУчета КАК СчетУчета,
		     	  |		РасчетСписанияКосвенныхРасходов.СтатьяЗатрат КАК СтатьяЗатрат,
		     	  |		РасчетСписанияКосвенныхРасходов.СуммаЗатрат КАК СуммаЗатрат,
		     	  |		РасчетСписанияКосвенныхРасходов.СуммаЗатратПР КАК СуммаЗатратПР,
		     	  |		РасчетСписанияКосвенныхРасходов.СуммаЗатратВР КАК СуммаЗатратВР,
		     	  |		РасчетСписанияКосвенныхРасходов.СуммаННП КАК СуммаРасходовННП,
		     	  |		РасчетСписанияКосвенныхРасходов.СуммаННППР КАК СуммаРасходовННППР,
		     	  |		РасчетСписанияКосвенныхРасходов.СуммаННПВР КАК СуммаРасходовННПВР,
		     	  |		РасчетСписанияКосвенныхРасходов.СуммаНеННП КАК СуммаРасходовНеННП,
		     	  |		РасчетСписанияКосвенныхРасходов.СуммаНеННППР КАК СуммаРасходовНеННППР,
		     	  |		РасчетСписанияКосвенныхРасходов.СуммаНеННПВР КАК СуммаРасходовНеННПВР,
		     	  |		РасчетСписанияКосвенныхРасходов.СуммаЗатратНУ КАК СуммаЗатратНУ,
		     	  |		РасчетСписанияКосвенныхРасходов.СуммаННПНУ КАК СуммаРасходовННПНУ,
		     	  |		РасчетСписанияКосвенныхРасходов.СуммаНеННПНУ КАК СуммаРасходовНеННПНУ,
		     	  |		РасчетСписанияКосвенныхРасходов.СуммаННП + РасчетСписанияКосвенныхРасходов.СуммаНеННП КАК СуммаРасходов,
		     	  |		РасчетСписанияКосвенныхРасходов.СуммаННПНУ + РасчетСписанияКосвенныхРасходов.СуммаНеННПНУ КАК СуммаРасходовНУ,
		     	  |		РасчетСписанияКосвенныхРасходов.СуммаННППР + РасчетСписанияКосвенныхРасходов.СуммаНеННППР КАК СуммаРасходовПР,
		     	  |		РасчетСписанияКосвенныхРасходов.СуммаННПВР + РасчетСписанияКосвенныхРасходов.СуммаНеННПВР КАК СуммаРасходовВР
		     	  |	ИЗ
		     	  |		РегистрСведений.РасчетСписанияКосвенныхРасходов КАК РасчетСписанияКосвенныхРасходов
		     	  |	ГДЕ
		     	  |		РасчетСписанияКосвенныхРасходов.Организация = &Организация
		     	  |		И РасчетСписанияКосвенныхРасходов.ПериодРасчета МЕЖДУ &ДатаНач И &ДатаКон
		     	  |		И РасчетСписанияКосвенныхРасходов.Активность) КАК СписаниеКосвенныхРасходов
		     	  |
		     	  |УПОРЯДОЧИТЬ ПО
		     	  |	Период,
		     	  |	ВидДеятельности,
		     	  |	СтатьяЗатрат,
		     	  |	СчетУчета
		     	  |ИТОГИ
		     	  |	СУММА(СуммаЗатрат),
		     	  |	СУММА(СуммаЗатратПР),
		     	  |	СУММА(СуммаЗатратВР),
		     	  |	СУММА(СуммаРасходовННП),
		     	  |	СУММА(СуммаРасходовННППР),
		     	  |	СУММА(СуммаРасходовННПВР),
		     	  |	СУММА(СуммаРасходовНеННП),
		     	  |	СУММА(СуммаРасходовНеННППР),
		     	  |	СУММА(СуммаРасходовНеННПВР),
		     	  |	СУММА(СуммаЗатратНУ),
		     	  |	СУММА(СуммаРасходовННПНУ),
		     	  |	СУММА(СуммаРасходовНеННПНУ),
		     	  |	СУММА(СуммаРасходов),
		     	  |	СУММА(СуммаРасходовНУ),
		     	  |	СУММА(СуммаРасходовПР),
		     	  |	СУММА(СуммаРасходовВР)
		     	  |ПО
		     	  |	Период,
		     	  |	ВидДеятельности";
		
				  
				  Если ВариантОтчета = 1 Тогда		  
					  Текст = СтрЗаменить(Текст, "УПОРЯДОЧИТЬ ПО","		  
					  |ГДЕ
					  |	СписаниеКосвенныхРасходов.СуммаЗатрат <> 0
					  |	ИЛИ СписаниеКосвенныхРасходов.СуммаРасходовННП <> 0
					  |	ИЛИ СписаниеКосвенныхРасходов.СуммаРасходовНеННП <> 0
					  |	ИЛИ СписаниеКосвенныхРасходов.СуммаРасходов <> 0
					  |УПОРЯДОЧИТЬ ПО");
				  ИначеЕсли ВариантОтчета = 2 Тогда		  
					  Текст = СтрЗаменить(Текст, "УПОРЯДОЧИТЬ ПО","		  
					  |ГДЕ
					  |	СписаниеКосвенныхРасходов.СуммаЗатратНУ <> 0
					  |	ИЛИ СписаниеКосвенныхРасходов.СуммаРасходовННПНУ <> 0
					  |	ИЛИ СписаниеКосвенныхРасходов.СуммаРасходовНеННПНУ <> 0
					  |	ИЛИ СписаниеКосвенныхРасходов.СуммаРасходовНУ <> 0
					  |УПОРЯДОЧИТЬ ПО");
		    	Иначе		  
					  Текст = СтрЗаменить(Текст, "УПОРЯДОЧИТЬ ПО","		  
					  |ГДЕ
					  |	СписаниеКосвенныхРасходов.СуммаЗатрат <> 0
					  |	ИЛИ СписаниеКосвенныхРасходов.СуммаРасходовННП <> 0
					  |	ИЛИ СписаниеКосвенныхРасходов.СуммаРасходовНеННП <> 0
					  |	ИЛИ СписаниеКосвенныхРасходов.СуммаРасходов <> 0
					  |	ИЛИ СписаниеКосвенныхРасходов.СуммаЗатратПР <> 0
					  |	ИЛИ СписаниеКосвенныхРасходов.СуммаРасходовННППР <> 0
					  |	ИЛИ СписаниеКосвенныхРасходов.СуммаРасходовНеННППР <> 0
					  |	ИЛИ СписаниеКосвенныхРасходов.СуммаРасходовПР <> 0
					  |	ИЛИ СписаниеКосвенныхРасходов.СуммаЗатратВР <> 0
					  |	ИЛИ СписаниеКосвенныхРасходов.СуммаРасходовННПВР <> 0
					  |	ИЛИ СписаниеКосвенныхРасходов.СуммаРасходовНеННПВР <> 0
					  |	ИЛИ СписаниеКосвенныхРасходов.СуммаРасходовВР <> 0
					  |УПОРЯДОЧИТЬ ПО");
				  КонецЕсли;		  
				  
				  
				  Возврат Текст;
		
	КонецФункции
	
	// Выполняет запрос и формирует табличный документ-результат отчета
	// в соответствии с настройками, заданными значениями реквизитов отчета.
	//
	// Параметры:
	//	ДокументРезультат - табличный документ, формируемый отчетом
	//	ПоказыватьЗаголовок - признак видимости строк с заголовком отчета
	//	ВысотаЗаголовка - параметр, через который возвращается высота заголовка в строках 
	//
	Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок = Ложь, НачалоПодписи, ПоказыватьПодписи) Экспорт
		
		ДатаНач = НачалоМесяца(ПериодРегистрации);
		ДатаКон  = КонецМесяца(ПериодРегистрации);
		ДокументРезультат.Очистить();
		
		ПрименяетсяЕНВД = НалоговыйУчет.ПрименениеЕНВД(Организация, ДатаКон);
		
		МакетОбщий = ПолучитьОбщийМакет("СправкаРасчет");
		Макет      = ПолучитьМакет("Отчет");
		
		ЗаголовокОтчета = МакетОбщий.ПолучитьОбласть("Заголовок");
		
		Учитывать91    = Ложь;
		ТаблицаДоходов = Неопределено;
		
		// Когда нужен только заголовок:
		Если ТолькоЗаголовок Тогда
			Возврат;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ВысотаЗаголовка) Тогда
			ДокументРезультат.Область("R1:R" + ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ДатаНач",     НачалоДня(ДатаНач));
		Запрос.УстановитьПараметр("ДатаКон",     КонецДня(ДатаКон));
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("НеЕНВД",      Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ПредпринимательскаяДеятельностьНеОблагаемаяЕНВД); 
		Запрос.УстановитьПараметр("ЕНВД",        Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ПредпринимательскаяДеятельностьОблагаемаяЕНВД); 
		
		Запрос.Текст = СформироватьТекстЗапроса();
		
		ОграниченияПоПостроителюОтчета = СтандартныеОтчеты.ПолучитьТекстОграниченийПоПостроителюОтчета(ПостроительОтчета, Запрос);
		
		Если Не ПустаяСтрока(ОграниченияПоПостроителюОтчета) Тогда
			
			ОграниченияПоПостроителюОтчета = " И " + ОграниченияПоПостроителюОтчета;
			ОграниченияПоПостроителюОтчета = СтрЗаменить(ОграниченияПоПостроителюОтчета, "Субконто1", "РасчетСписанияКосвенныхРасходов.СтатьяЗатрат");
			
		КонецЕсли;
		
		Запрос.Текст  = СтрЗаменить(Запрос.Текст, "РасчетСписанияКосвенныхРасходов.Активность","РасчетСписанияКосвенныхРасходов.Активность " + ОграниченияПоПостроителюОтчета);
		
		Результат = Запрос.Выполнить();
		
		СтрОтбор = УправлениеОтчетами.СформироватьСтрокуОтборов(ПостроительОтчета.Отбор);
		СтрОтбор = СтрЗаменить(СтрОтбор, "Субконто1", "РасчетСписанияКосвенныхРасходов.СтатьяЗатрат");
		
		Если Не ПустаяСтрока(СтрОтбор) Тогда
			ОбластьОтбор = МакетОбщий.ПолучитьОбласть("СтрокаОтбор");
			ОбластьОтбор.Параметры.ТекстПроОтбор = "Отбор: " + СтрОтбор;
			ДокументРезультат.Вывести(ОбластьОтбор);
		КонецЕсли;
		
		ОбластьШапка1  = Макет.ПолучитьОбласть("Шапка1");
		ОбластьШапка2  = Макет.ПолучитьОбласть("Шапка2");
		ОбластьСтрока1 = Макет.ПолучитьОбласть("Строка1" + ?(ВариантОтчета = 2, "НУ", ""));
		ОбластьСтрока2 = Макет.ПолучитьОбласть("Строка2" + ?(ВариантОтчета = 2, "НУ", ""));
		ОбластьИтого1  = Макет.ПолучитьОбласть("Итог1" + ?(ВариантОтчета = 2, "НУ", ""));
		ОбластьИтого2  = Макет.ПолучитьОбласть("Итог2" + ?(ВариантОтчета = 2, "НУ", ""));
		ОбластьСтрока1Разницы = Макет.ПолучитьОбласть("Строка1Разницы");
		ОбластьСтрока2Разницы = Макет.ПолучитьОбласть("Строка2Разницы");
		ОбластьИтого1Разницы  = Макет.ПолучитьОбласть("Итог1Разницы");
		ОбластьИтого2Разницы  = Макет.ПолучитьОбласть("Итог2Разницы");
		
		ОбластьВыручка  = МакетОбщий.ПолучитьОбласть("Выручка");
		ЕстьРаспределяемыеРасходы = Ложь;
		
		ОбластьПодвал  = МакетОбщий.ПолучитьОбласть("Подвал");
		
		ВыборкаПериод = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Период");
		
		Пока ВыборкаПериод.Следующий() Цикл
			
			НачалоПериода = НачалоМесяца(ВыборкаПериод.Период);
			КонецПериода = КонецМесяца(ВыборкаПериод.Период);
			ПолучитьТаблицуДоходов(НачалоПериода, КонецПериода, Учитывать91, ТаблицаДоходов);
			
			ЗаголовокОтчетаВырука = "(*) Расчет коэффициентов распределения доходов по видам деятельности ";
			ЗаголовокОтчетаВырука = ЗаголовокОтчетаВырука + ?(ВариантОтчета = 2, " (налоговый учет)"," (бухгалтерский учет)");
			ТекстВыручки = "Доходы от реализации " + ?(Учитывать91, "и внереализационные доходы ", "") + "за текущий месяц";	
			
			КоэфННП      = 0;
			КоэфНеННП    = 0;
			Если Не ТаблицаДоходов = Неопределено Тогда
				ВсегоВыручкаННП    = ТаблицаДоходов.Итог("СуммаННП");
				ВсегоВыручкаНеННП  = ТаблицаДоходов.Итог("СуммаНеННП");
				Выручка       = ВсегоВыручкаННП + ВсегоВыручкаНеННП;
				Если Не Выручка  = 0 Тогда
					КоэфННП   =  Окр(ВсегоВыручкаННП   /  Выручка, 6);
					КоэфНеННП =  Окр(ВсегоВыручкаНеННП /  Выручка, 6);
				КонецЕсли;
			КонецЕсли;
			
			РасчетННП       = "(гр.3) * " + КоэфННП + "(**)";
			РасчетНеННП     = "(гр.3) * " + КоэфНеННП + "(**)";
			
			ЗаголовокОтчета.Параметры.Период              = "" + ПредставлениеПериода(НачалоПериода, КонецПериода, "ФП = Истина");
			СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация);
			НазваниеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм");
			ЗаголовокОтчета.Параметры.НазваниеОрганизации = НазваниеОрганизации;
			ЗаголовокОтчета.Параметры.НазваниеОтчета	  = "Списание косвенных расходов (" +?(ВариантОтчета = 2, "налоговый учет", "бухгалтерский учет") + ")";
			ЗаголовокОтчета.Параметры.ДатаСоставления     = КонецМесяца(ВыборкаПериод.Период);
			ДокументРезультат.Вывести(ЗаголовокОтчета);
			
			// Параметр для показа заголовка
			ВысотаЗаголовка = ДокументРезультат.ВысотаТаблицы;
			
			ВыборкаВид = ВыборкаПериод.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"ВидДеятельности");
			ПараметрыШапки = Новый СписокЗначений;
			
			Пока ВыборкаВид.Следующий() Цикл
				
				Если ВыборкаВид.ВидДеятельности = 1 Тогда
					ОбластьШапка      = ОбластьШапка1;
					ОбластьСтрока     = ОбластьСтрока1;
					
					ТекстЗаголовка    = "Списание косвенных расходов на производство и реализацию" + ?(ПрименяетсяЕНВД, ", относящихся к видам деятельности, не облагаемым ЕНВД", "");
					Если ВариантОтчета = 3 Тогда
						ОбластьСтрока = ОбластьСтрока1Разницы;
						ОбластьИтого  = ОбластьИтого1Разницы;
					Иначе
						ОбластьСтрока = ОбластьСтрока1;
						ОбластьИтого  = ОбластьИтого1;
					КонецЕсли;
					
				ИначеЕсли ВыборкаВид.ВидДеятельности = 3 Тогда
					ОбластьШапка      = ОбластьШапка1;
					ТекстЗаголовка    = "Списание косвенных расходов на производство и реализацию, относящихся к видам деятельности, облагаемым ЕНВД";
					
					Если ВариантОтчета = 3 Тогда
						ОбластьСтрока = ОбластьСтрока1Разницы;
						ОбластьИтого  = ОбластьИтого1Разницы;
					Иначе
						ОбластьСтрока = ОбластьСтрока1;
						ОбластьИтого  = ОбластьИтого1;
					КонецЕсли;
					
				Иначе
					ЕстьРаспределяемыеРасходы = Истина;
					ОбластьШапка      = ОбластьШапка2;
					ТекстЗаголовка    = "Списание косвенных расходов на производство и реализацию, относящихся к разным видам деятельности, распределяемых пропорционально доходам";
					
					Если ВариантОтчета = 3 Тогда
						ОбластьСтрока = ОбластьСтрока2Разницы;
						ОбластьИтого  = ОбластьИтого2Разницы;
					Иначе
						ОбластьСтрока = ОбластьСтрока2;
						ОбластьИтого  = ОбластьИтого2;
					КонецЕсли;
					ОбластьШапка.Параметры.РасчетННП = РасчетННП;
					ОбластьШапка.Параметры.РасчетНеННП = РасчетНеННП;
					
				КонецЕсли;	
				
				ОбластьШапка.Параметры.НазваниеОтчета = ТекстЗаголовка;
				ДокументРезультат.Вывести(ОбластьШапка);
				
				Выборка = ВыборкаВид.Выбрать();
				
				Пока Выборка.Следующий() Цикл
					
					ОбластьСтрока.Параметры.Счет            = Выборка.СчетУчета;
					ОбластьСтрока.Параметры.СтатьяЗатрат    = Выборка.СтатьяЗатрат;
					ЗаполнитьСуммы(ОбластьСтрока, Выборка, ВыборкаВид.ВидДеятельности);
					
					ДокументРезультат.Вывести(ОбластьСтрока);
				КонецЦикла;  // выборка
				
				ЗаполнитьСуммы(ОбластьИтого, ВыборкаВид, ВыборкаВид.ВидДеятельности);
				
				ДокументРезультат.Вывести(ОбластьИтого);
			КонецЦикла;  // ВидДеятельности
			
			Если ЕстьРаспределяемыеРасходы Тогда
				ОбластьВыручка.Параметры.НазваниеОтчетаВыручка = "** - Расчет долей доходов по каждому виду деятельности в общем объеме доходов за текущий месяц";						
				ОбластьВыручка.Параметры.ТекстВыручки = "За текущий месяц";
				ОбластьВыручка.Параметры.ВыручкаННП   = ВсегоВыручкаННП;
				ОбластьВыручка.Параметры.ВыручкаНеННП = ВсегоВыручкаНеННП;
				ОбластьВыручка.Параметры.КоэффициентННП   = ?(Выручка = 0, 0, ВсегоВыручкаННП / Выручка);
				ОбластьВыручка.Параметры.КоэффициентНеННП = ?(Выручка = 0, 0, ВсегоВыручкаНеННП / Выручка);
				ДокументРезультат.Вывести(ОбластьВыручка);
			КонецЕсли;
			
			ДокументРезультат.Вывести(ОбластьПодвал);
			
			ВысотаПодписи = ДокументРезультат.Области.Подвал.Низ - ДокументРезультат.Области.Подвал.Верх;
			
			ДокументРезультат.Области.Подвал.Видимость = ПоказыватьПодписи;
			
		КонецЦикла;    // Период	
		
		// Первую колонку не печатаем
		ДокументРезультат.ОбластьПечати = ДокументРезультат.Область(1,2,ДокументРезультат.ВысотаТаблицы,ДокументРезультат.ШиринаТаблицы);
		
		// Присвоим имя для сохранения параметров печати табличного документа
		ДокументРезультат.ИмяПараметровПечати = "Списание косвенных расходов";
		
		УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(ДокументРезультат, ЗаголовокОтчета, Строка(глЗначениеПеременной("глТекущийПользователь")));
		
	КонецПроцедуры // СформироватьОтчет
	
	
	Процедура ЗаполнитьСуммы(Область, Выборка, ВидДеятельности)
		Область.Параметры.Заполнить(Выборка);
		
	КонецПроцедуры
	
	
	Процедура ПолучитьТаблицуДоходов(НачалоПериода, КонецПериода, Учитывать91, ТаблицаДоходов)
		
		СуммаННП   = 0;
		СуммаНеННП = 0;
		НалоговыйУчет.КоэффициентРаспределенияРасходовПоВидамДеятельности(Организация, КонецПериода, НачалоПериода, Истина, СуммаННП, СуммаНеННП);
		Учитывать91 = ?(ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(КонецПериода, Ложь, Организация).БазаРаспределенияКосвенныхРасходовПоВидамДеятельности = Перечисления.БазыРаспределенияКосвенныхРасходовПоВидамДеятельности.ДоходыОтРеализацииИВнереализационные, Истина, Ложь);
		
		ТаблицаДоходов = Новый ТаблицаЗначений;
		ТаблицаДоходов.Колонки.Добавить("СуммаННП");
		ТаблицаДоходов.Колонки.Добавить("СуммаНеННП");
		СтрокаТаблицаДоходов = ТаблицаДоходов.Добавить();
		СтрокаТаблицаДоходов.СуммаННП = СуммаННП;
		СтрокаТаблицаДоходов.СуммаНеННП = СуммаНеННП;
		
	КонецПроцедуры
	
	
	Процедура ЗаполнитьНачальныеНастройки() Экспорт
		
		СтарыеНастройки = УправлениеОтчетами.ПолучитьКопиюОтбораВТЗ(ПостроительОтчета.Отбор);
		
		СоотвСубконто = Новый Соответствие;
		
		Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ХозрасчетныйОбороты.СуммаОборотКт КАК СуммаОборотКт
		|{ВЫБРАТЬ
		|	ХозрасчетныйОбороты.Субконто1 КАК Субконто1}
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(, , Месяц, Счет В ИЕРАРХИИ (&Счет), &ВидСубконто {&ВидСубконто}, {Субконто1.*}, , ) КАК ХозрасчетныйОбороты
		|ИТОГИ
		|	СУММА(СуммаОборотКт)
		|ПО
		|	ОБЩИЕ
		|{ИТОГИ ПО
		|	ХозрасчетныйОбороты.Субконто1.*}";
		
		Массив = Новый Массив;
		Массив.Добавить(ПланыСчетов.Хозрасчетный.ИздержкиОбращения);
		
		ПостроительОтчета.Параметры.Вставить("Счет", Массив);
		ПостроительОтчета.Параметры.Вставить("ВидСубконто", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат);
		ПостроительОтчета.Параметры.Вставить("ПустаяОрганизация", Справочники.Организации.ПустаяСсылка());
		
		ПостроительОтчета.Текст = Текст;
		
		СоотвСубконто = Новый Соответствие;
		СоотвСубконто.Вставить("Субконто1",    ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат);
		
		
		Сч = 0;
		Для каждого Элемент Из СоотвСубконто Цикл
			Сч = Сч+1;
			Поле = ПостроительОтчета.ДоступныеПоля.Найти(Элемент.Ключ);
			Поле.ТипЗначения = Элемент.Значение.ТипЗначения;
			Поле.Представление = Элемент.Значение.Наименование;
			
			ПостроительОтчета.Отбор.Добавить(Элемент.Ключ);
		КонецЦикла;
		
		УправлениеОтчетами.УстановитьОтборИзТаблицы(ПостроительОтчета.Отбор, СтарыеНастройки);
		
	КонецПроцедуры
	////////////////////////////////////////////////////////////////////////////////
	// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
	// 
	
	НП = Новый НастройкаПериода;
	
#КонецЕсли

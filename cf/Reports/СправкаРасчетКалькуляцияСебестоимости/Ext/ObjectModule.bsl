#Если Клиент Тогда
	                                         
Перем НП Экспорт;

Функция СформироватьТекстЗапроса()
	
Текст	= "ВЫБРАТЬ
     	  |	Выпуск.ПодразделениеВыпуска КАК Подразделение,
     	  |	Выпуск.НоменклатурнаяГруппаВыпуска КАК НоменклатурнаяГруппа,
     	  |	Выпуск.НоменклатураВыпуска КАК Номенклатура,
     	  |	ПрямыеЗатраты.ЗатратыПрямыхЗатрат КАК ПрямыеЗатраты,
     	  |	ПрямыеЗатраты.КорСчетПрямыхЗатрат КАК КорСчетПрямыхЗатрат,
     	  |	ПрямыеЗатраты.КорСубконтоПрямыхЗатрат КАК НоменклатураПрямыхЗатрат,
     	  |	ОбщеХозяйственныеЗатраты.Затраты26 КАК Затраты26,
     	  |	ОбщеПроизводственныеЗатраты.Затраты25 КАК Затраты25,
     	  |	ЕСТЬNULL(Выпуск.КоличествоВыпуска, 0) КАК Количество,
     	  |	ЕСТЬNULL(ПрямыеЗатраты.КоличествоПрямыхЗатрат, 0) КАК КоличествоПрямыхЗатрат,
     	  |	ЕСТЬNULL(Выпуск.ОбщаяСуммаВыпуска, 0) КАК ОбщаяСуммаВыпуска,
     	  |	ЕСТЬNULL(Выпуск.СуммаВыпуска, 0) КАК Сумма,
     	  |	ЕСТЬNULL(ПрямыеЗатраты.СуммаПрямыхЗатрат, 0) КАК СуммаПрямыхЗатрат,
     	  |	ЕСТЬNULL(НЗП.НачОст, 0) КАК НачОстНЗП,
     	  |	ЕСТЬNULL(НЗП.КонОст, 0) КАК КонОстНЗП,
     	  |	ЕСТЬNULL(ОбщеХозяйственныеЗатраты.Сумма26, 0) КАК Сумма26,
     	  |	ЕСТЬNULL(ОбщеПроизводственныеЗатраты.Сумма25, 0) КАК Сумма25
     	  |ИЗ
     	  |	(ВЫБРАТЬ
     	  |		ХозрасчетныйОбороты.Подразделение КАК ПодразделениеВыпуска,
     	  |		ХозрасчетныйОбороты.Субконто1 КАК НоменклатурнаяГруппаВыпуска,
     	  |		ХозрасчетныйОбороты.КорСубконто1 КАК НоменклатураВыпуска,
     	  |		ХозрасчетныйОбороты.СуммаОборотКт КАК СуммаВыпуска,
     	  |		ХозрасчетныйОбороты.СуммаОборотКт КАК ОбщаяСуммаВыпуска,
     	  |		-ХозрасчетныйОбороты.КоличествоКорОборот КАК КоличествоВыпуска
     	  |	ИЗ
     	  |		РегистрБухгалтерии.Хозрасчетный.Обороты(&НачДата, &КонДата, , Счет В ИЕРАРХИИ (&СчетПрямЗатрат), , Организация = &Организация, (НЕ КорСчет В ИЕРАРХИИ (&Счет90)), ) КАК ХозрасчетныйОбороты
     	  |	ГДЕ
     	  |		ХозрасчетныйОбороты.СуммаОборотКт <> 0) КАК Выпуск
     	  |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
     	  |			ХозрасчетныйОбороты.Подразделение КАК ПодразделениеПрямыхЗатрат,
     	  |			ХозрасчетныйОбороты.Субконто1 КАК НоменклатурнаяГруппаПрямыхЗатрат,
     	  |			ХозрасчетныйОбороты.Субконто2 КАК ЗатратыПрямыхЗатрат,
     	  |			ХозрасчетныйОбороты.КорСчет КАК КорСчетПрямыхЗатрат,
     	  |			ХозрасчетныйОбороты.КорСубконто1 КАК КорСубконтоПрямыхЗатрат,
     	  |			ХозрасчетныйОбороты.СуммаОборотДт КАК СуммаПрямыхЗатрат,
     	  |			ХозрасчетныйОбороты.КоличествоКорОборот КАК КоличествоПрямыхЗатрат
     	  |		ИЗ
     	  |			РегистрБухгалтерии.Хозрасчетный.Обороты(
     	  |					&НачДата,
     	  |					&КонДата,
     	  |					,
     	  |					Счет В ИЕРАРХИИ (&СчетПрямЗатрат),
     	  |					,
     	  |					Организация = &Организация,
     	  |					(НЕ КорСчет В ИЕРАРХИИ (&Счет25))
     	  |						И (НЕ КорСчет В ИЕРАРХИИ (&Счет26)),
     	  |					) КАК ХозрасчетныйОбороты
     	  |		
     	  |		ОБЪЕДИНИТЬ ВСЕ
     	  |		
     	  |		ВЫБРАТЬ
     	  |			ХозрасчетныйОбороты.Подразделение,
     	  |			ХозрасчетныйОбороты.Субконто1,
     	  |			ХозрасчетныйОбороты.Субконто2,
     	  |			ХозрасчетныйОбороты.Счет,
     	  |			""Списано как косвенные расходы"",
     	  |			-ХозрасчетныйОбороты.СуммаОборотКт,
     	  |			0
     	  |		ИЗ
     	  |			РегистрБухгалтерии.Хозрасчетный.Обороты(&НачДата, &КонДата, , Счет В ИЕРАРХИИ (&СчетПрямЗатрат), , Организация = &Организация, КорСчет В ИЕРАРХИИ (&Счет90), ) КАК ХозрасчетныйОбороты
     	  |		ГДЕ
     	  |			ХозрасчетныйОбороты.СуммаОборотКт <> 0) КАК ПрямыеЗатраты
     	  |		ПО Выпуск.ПодразделениеВыпуска = ПрямыеЗатраты.ПодразделениеПрямыхЗатрат
     	  |			И Выпуск.НоменклатурнаяГруппаВыпуска = ПрямыеЗатраты.НоменклатурнаяГруппаПрямыхЗатрат
     	  |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
     	  |			ХозрасчетныйОбороты.Подразделение КАК Подразделение25,
     	  |			ХозрасчетныйОбороты.Субконто1 КАК НоменклатурнаяГруппа25,
     	  |			ХозрасчетныйОбороты.Субконто2 КАК Затраты25,
     	  |			ХозрасчетныйОбороты.СуммаОборотДт КАК Сумма25
     	  |		ИЗ
     	  |			РегистрБухгалтерии.Хозрасчетный.Обороты(&НачДата, &КонДата, , Счет В ИЕРАРХИИ (&СчетПрямЗатрат), , Организация = &Организация, КорСчет В ИЕРАРХИИ (&Счет25), ) КАК ХозрасчетныйОбороты) КАК ОбщеПроизводственныеЗатраты
     	  |		ПО Выпуск.ПодразделениеВыпуска = ОбщеПроизводственныеЗатраты.Подразделение25
     	  |			И Выпуск.НоменклатурнаяГруппаВыпуска = ОбщеПроизводственныеЗатраты.НоменклатурнаяГруппа25
     	  |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
     	  |			ХозрасчетныйОбороты.Подразделение КАК Подразделение26,
     	  |			ХозрасчетныйОбороты.Субконто1 КАК НоменклатурнаяГруппа26,
     	  |			ХозрасчетныйОбороты.Субконто2 КАК Затраты26,
     	  |			ХозрасчетныйОбороты.СуммаОборотДт КАК Сумма26
     	  |		ИЗ
     	  |			РегистрБухгалтерии.Хозрасчетный.Обороты(&НачДата, &КонДата, , Счет В ИЕРАРХИИ (&СчетПрямЗатрат), , Организация = &Организация, КорСчет В ИЕРАРХИИ (&Счет26), ) КАК ХозрасчетныйОбороты) КАК ОбщеХозяйственныеЗатраты
     	  |		ПО Выпуск.ПодразделениеВыпуска = ОбщеХозяйственныеЗатраты.Подразделение26
     	  |			И Выпуск.НоменклатурнаяГруппаВыпуска = ОбщеХозяйственныеЗатраты.НоменклатурнаяГруппа26
     	  |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
     	  |			ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток КАК НачОст,
     	  |			ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток КАК КонОст,
     	  |			ХозрасчетныйОстаткиИОбороты.Подразделение КАК ПодразделениеНЗП,
     	  |			ХозрасчетныйОстаткиИОбороты.Субконто1 КАК НоменклатурнаяГруппаНЗП
     	  |		ИЗ
     	  |			РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачДата, &КонДата, Месяц, , Счет В ИЕРАРХИИ (&СчетПрямЗатрат), , Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты) КАК НЗП
     	  |		ПО Выпуск.НоменклатурнаяГруппаВыпуска = НЗП.НоменклатурнаяГруппаНЗП
     	  |			И Выпуск.ПодразделениеВыпуска = НЗП.ПодразделениеНЗП
     	  |
     	  |УПОРЯДОЧИТЬ ПО
     	  |	Подразделение,
     	  |	НоменклатурнаяГруппа,
     	  |	Номенклатура,
     	  |	ПрямыеЗатраты,
     	  |	Затраты25,
     	  |	Затраты26
     	  |ИТОГИ
     	  |	МАКСИМУМ(Количество),
     	  |	МАКСИМУМ(КоличествоПрямыхЗатрат),
     	  |	СУММА(ОбщаяСуммаВыпуска),
     	  |	МАКСИМУМ(Сумма),
     	  |	МАКСИМУМ(СуммаПрямыхЗатрат),
     	  |	МАКСИМУМ(НачОстНЗП),
     	  |	МАКСИМУМ(КонОстНЗП),
     	  |	МАКСИМУМ(Сумма26),
     	  |	МАКСИМУМ(Сумма25)
     	  |ПО
     	  |	Подразделение,
     	  |	НоменклатурнаяГруппа,
     	  |	Номенклатура,
     	  |	ПрямыеЗатраты,
     	  |	КорСчетПрямыхЗатрат,
     	  |	НоменклатураПрямыхЗатрат,
     	  |	Затраты26,
     	  |	Затраты25";
Возврат Текст;
	
КонецФункции

Функция СформироватьТекстЗапросаСРазницами()
	
Текст	= "ВЫБРАТЬ
     	  |	Выпуск.ПодразделениеВыпуска КАК Подразделение,
     	  |	Выпуск.НоменклатурнаяГруппаВыпуска КАК НоменклатурнаяГруппа,
     	  |	Выпуск.НоменклатураВыпуска КАК Номенклатура,
     	  |	ПрямыеЗатраты.ЗатратыПрямыхЗатрат КАК ПрямыеЗатраты,
     	  |	ПрямыеЗатраты.КорСчетПрямыхЗатрат КАК КорСчетПрямыхЗатрат,
     	  |	ПрямыеЗатраты.КорСубконтоПрямыхЗатрат КАК НоменклатураПрямыхЗатрат,
     	  |	ОбщеХозяйственныеЗатраты.Затраты26 КАК Затраты26,
     	  |	ОбщеПроизводственныеЗатраты.Затраты25 КАК Затраты25,
     	  |	ЕСТЬNULL(Выпуск.КоличествоВыпуска, 0) КАК Количество,
     	  |	ЕСТЬNULL(ПрямыеЗатраты.КоличествоПрямыхЗатрат, 0) КАК КоличествоПрямыхЗатрат,
     	  |	ЕСТЬNULL(Выпуск.ОбщаяСуммаВыпуска, 0) КАК ОбщаяСуммаВыпуска,
     	  |	ЕСТЬNULL(Выпуск.СуммаВыпуска, 0) КАК Сумма,
     	  |	ЕСТЬNULL(ПрямыеЗатраты.СуммаПрямыхЗатрат, 0) КАК СуммаПрямыхЗатрат,
     	  |	ЕСТЬNULL(НЗП.НачОст, 0) КАК НачОстНЗП,
     	  |	ЕСТЬNULL(НЗП.КонОст, 0) КАК КонОстНЗП,
     	  |	ЕСТЬNULL(ОбщеХозяйственныеЗатраты.Сумма26, 0) КАК Сумма26,
     	  |	ЕСТЬNULL(ОбщеПроизводственныеЗатраты.Сумма25, 0) КАК Сумма25,
     	  |	ЕСТЬNULL(НЗП.НачОстПР, 0) КАК НачОстНЗППР,
     	  |	ЕСТЬNULL(НЗП.КонОстПР, 0) КАК КонОстНЗППР,
     	  |	ЕСТЬNULL(НЗП.НачОстВР, 0) КАК НачОстНЗПВР,
     	  |	ЕСТЬNULL(НЗП.КонОстВР, 0) КАК КонОстНЗПВР,
     	  |	ЕСТЬNULL(ОбщеПроизводственныеЗатраты.Сумма25ПР, 0) КАК Сумма25ПР,
     	  |	ЕСТЬNULL(ОбщеПроизводственныеЗатраты.Сумма25ВР, 0) КАК Сумма25ВР,
     	  |	ЕСТЬNULL(ОбщеХозяйственныеЗатраты.Сумма26ПР, 0) КАК Сумма26ПР,
     	  |	ЕСТЬNULL(ОбщеХозяйственныеЗатраты.Сумма26ВР, 0) КАК Сумма26ВР,
     	  |	ЕСТЬNULL(ПрямыеЗатраты.СуммаПрямыхЗатратПР, 0) КАК СуммаПрямыхЗатратПР,
     	  |	ЕСТЬNULL(ПрямыеЗатраты.СуммаПрямыхЗатратВР, 0) КАК СуммаПрямыхЗатратВР,
     	  |	ЕСТЬNULL(Выпуск.СуммаВыпускаПР, 0) КАК СуммаПР,
     	  |	ЕСТЬNULL(Выпуск.СуммаВыпускаВР, 0) КАК СуммаВР,
     	  |	ЕСТЬNULL(Выпуск.ОбщаяСуммаВыпускаПР, 0) КАК ОбщаяСуммаВыпускаПР,
     	  |	ЕСТЬNULL(Выпуск.ОбщаяСуммаВыпускаВР, 0) КАК ОбщаяСуммаВыпускаВР
     	  |ИЗ
     	  |	(ВЫБРАТЬ
     	  |		ВыпускБУ.Подразделение КАК ПодразделениеВыпуска,
     	  |		ВыпускБУ.Субконто1 КАК НоменклатурнаяГруппаВыпуска,
     	  |		ВыпускБУ.КорСубконто1 КАК НоменклатураВыпуска,
     	  |		ВыпускБУ.СуммаОборотКт КАК СуммаВыпуска,
     	  |		-ВыпускБУ.КоличествоКорОборот КАК КоличествоВыпуска,
     	  |		ВыпускБУ.СуммаОборотКт КАК ОбщаяСуммаВыпуска,
     	  |		ВыпускБУ.СуммаПРОборотКт КАК СуммаВыпускаПР,
     	  |		ВыпускБУ.СуммаВРОборотКт КАК СуммаВыпускаВР,
     	  |		ВЫБОР
     	  |			КОГДА (НЕ ВыпускБУ.КорСчет В ИЕРАРХИИ (&СЧЕТ90))
     	  |				ТОГДА ВыпускБУ.СуммаПРОборотКт
     	  |			ИНАЧЕ 0
     	  |		КОНЕЦ КАК ОбщаяСуммаВыпускаПР,
     	  |		ВЫБОР
     	  |			КОГДА (НЕ ВыпускБУ.КорСчет В ИЕРАРХИИ (&СЧЕТ90))
     	  |				ТОГДА ВыпускБУ.СуммаВРОборотКт
     	  |			ИНАЧЕ 0
     	  |		КОНЕЦ КАК ОбщаяСуммаВыпускаВР
     	  |	ИЗ
     	  |		РегистрБухгалтерии.Хозрасчетный.Обороты(&НачДата, &КонДата, , Счет В ИЕРАРХИИ (&СчетПрямЗатрат), , Организация = &Организация, , ) КАК ВыпускБУ) КАК Выпуск
     	  |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
     	  |			ХозрасчетныйОбороты.Подразделение КАК ПодразделениеПрямыхЗатрат,
     	  |			ХозрасчетныйОбороты.Субконто1 КАК НоменклатурнаяГруппаПрямыхЗатрат,
     	  |			ХозрасчетныйОбороты.Субконто2 КАК ЗатратыПрямыхЗатрат,
     	  |			ХозрасчетныйОбороты.КорСчет КАК КорСчетПрямыхЗатрат,
     	  |			ХозрасчетныйОбороты.КорСубконто1 КАК КорСубконтоПрямыхЗатрат,
     	  |			ХозрасчетныйОбороты.СуммаОборотДт КАК СуммаПрямыхЗатрат,
     	  |			ХозрасчетныйОбороты.КоличествоКорОборот КАК КоличествоПрямыхЗатрат,
     	  |			ХозрасчетныйОбороты.СуммаПРОборотДт КАК СуммаПрямыхЗатратПР,
     	  |			ХозрасчетныйОбороты.СуммаВРОборотДт КАК СуммаПрямыхЗатратВР,
     	  |			ХозрасчетныйОбороты.Счет КАК Счет
     	  |		ИЗ
     	  |			РегистрБухгалтерии.Хозрасчетный.Обороты(
     	  |					&НачДата,
     	  |					&КонДата,
     	  |					,
     	  |					Счет В ИЕРАРХИИ (&СчетПрямЗатрат),
     	  |					,
     	  |					Организация = &Организация,
     	  |					(НЕ КорСчет В ИЕРАРХИИ (&Счет25))
     	  |						И (НЕ КорСчет В ИЕРАРХИИ (&Счет26))
     	  |						И (НЕ КорСчет В ИЕРАРХИИ (&Счет90)),
     	  |					) КАК ХозрасчетныйОбороты
     	  |		
     	  |		ОБЪЕДИНИТЬ ВСЕ
     	  |		
     	  |		ВЫБРАТЬ
     	  |			ХозрасчетныйОбороты.Подразделение,
     	  |			ХозрасчетныйОбороты.Субконто1,
     	  |			ХозрасчетныйОбороты.Субконто2,
     	  |			ХозрасчетныйОбороты.Счет,
     	  |			""Списано как косвенные расходы"",
     	  |			0,
     	  |			0,
     	  |			0,
     	  |			ХозрасчетныйОбороты.СуммаНУОборотКт,
     	  |			ХозрасчетныйОбороты.Счет
     	  |		ИЗ
     	  |			РегистрБухгалтерии.Хозрасчетный.Обороты(&НачДата, &КонДата, , Счет В ИЕРАРХИИ (&СчетПрямЗатрат), , Организация = &Организация, КорСчет В ИЕРАРХИИ (&Счет90), ) КАК ХозрасчетныйОбороты
     	  |		ГДЕ
     	  |			ХозрасчетныйОбороты.СуммаНУОборотКт <> 0) КАК ПрямыеЗатраты
     	  |		ПО Выпуск.ПодразделениеВыпуска = ПрямыеЗатраты.ПодразделениеПрямыхЗатрат
     	  |			И Выпуск.НоменклатурнаяГруппаВыпуска = ПрямыеЗатраты.НоменклатурнаяГруппаПрямыхЗатрат
     	  |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
     	  |			ХозрасчетныйОбороты.Подразделение КАК Подразделение25,
     	  |			ХозрасчетныйОбороты.Субконто1 КАК НоменклатурнаяГруппа25,
     	  |			ХозрасчетныйОбороты.Субконто2 КАК Затраты25,
     	  |			ХозрасчетныйОбороты.СуммаОборотДт КАК Сумма25,
     	  |			ХозрасчетныйОбороты.СуммаПРОборотДт КАК Сумма25ПР,
     	  |			ХозрасчетныйОбороты.СуммаВРОборотДт КАК Сумма25ВР
     	  |		ИЗ
     	  |			РегистрБухгалтерии.Хозрасчетный.Обороты(&НачДата, &КонДата, , Счет В ИЕРАРХИИ (&СчетПрямЗатрат), , Организация = &Организация, КорСчет В ИЕРАРХИИ (&Счет25), ) КАК ХозрасчетныйОбороты) КАК ОбщеПроизводственныеЗатраты
     	  |		ПО Выпуск.ПодразделениеВыпуска = ОбщеПроизводственныеЗатраты.Подразделение25
     	  |			И Выпуск.НоменклатурнаяГруппаВыпуска = ОбщеПроизводственныеЗатраты.НоменклатурнаяГруппа25
     	  |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
     	  |			ХозрасчетныйОбороты.Подразделение КАК Подразделение26,
     	  |			ХозрасчетныйОбороты.Субконто1 КАК НоменклатурнаяГруппа26,
     	  |			ХозрасчетныйОбороты.Субконто2 КАК Затраты26,
     	  |			ХозрасчетныйОбороты.СуммаОборотДт КАК Сумма26,
     	  |			ХозрасчетныйОбороты.СуммаПРОборотДт КАК Сумма26ПР,
     	  |			ХозрасчетныйОбороты.СуммаВРОборотДт КАК Сумма26ВР
     	  |		ИЗ
     	  |			РегистрБухгалтерии.Хозрасчетный.Обороты(&НачДата, &КонДата, , Счет В ИЕРАРХИИ (&СчетПрямЗатрат), , Организация = &Организация, КорСчет В ИЕРАРХИИ (&Счет26), ) КАК ХозрасчетныйОбороты) КАК ОбщеХозяйственныеЗатраты
     	  |		ПО Выпуск.ПодразделениеВыпуска = ОбщеХозяйственныеЗатраты.Подразделение26
     	  |			И Выпуск.НоменклатурнаяГруппаВыпуска = ОбщеХозяйственныеЗатраты.НоменклатурнаяГруппа26
     	  |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
     	  |			ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток КАК НачОст,
     	  |			ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток КАК КонОст,
     	  |			ХозрасчетныйОстаткиИОбороты.Подразделение КАК ПодразделениеНЗП,
     	  |			ХозрасчетныйОстаткиИОбороты.Субконто1 КАК НоменклатурнаяГруппаНЗП,
     	  |			ХозрасчетныйОстаткиИОбороты.СуммаПРНачальныйОстаток КАК НачОстПР,
     	  |			ХозрасчетныйОстаткиИОбороты.СуммаПРКонечныйОстаток КАК КонОстПР,
     	  |			ХозрасчетныйОстаткиИОбороты.СуммаВРНачальныйОстаток КАК НачОстВР,
     	  |			ХозрасчетныйОстаткиИОбороты.СуммаВРКонечныйОстаток КАК КонОстВР
     	  |		ИЗ
     	  |			РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачДата, &КонДата, , , Счет В ИЕРАРХИИ (&СчетПрямЗатрат), , Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты) КАК НЗП
     	  |		ПО Выпуск.НоменклатурнаяГруппаВыпуска = НЗП.НоменклатурнаяГруппаНЗП
     	  |			И Выпуск.ПодразделениеВыпуска = НЗП.ПодразделениеНЗП
     	  |
     	  |УПОРЯДОЧИТЬ ПО
     	  |	Подразделение,
     	  |	НоменклатурнаяГруппа,
     	  |	Номенклатура
     	  |ИТОГИ
     	  |	МАКСИМУМ(Количество),
     	  |	МАКСИМУМ(КоличествоПрямыхЗатрат),
     	  |	СУММА(ОбщаяСуммаВыпуска),
     	  |	МАКСИМУМ(Сумма),
     	  |	МАКСИМУМ(СуммаПрямыхЗатрат),
     	  |	МАКСИМУМ(НачОстНЗП),
     	  |	МАКСИМУМ(КонОстНЗП),
     	  |	МАКСИМУМ(Сумма26),
     	  |	МАКСИМУМ(Сумма25),
     	  |	МАКСИМУМ(НачОстНЗППР),
     	  |	МАКСИМУМ(КонОстНЗППР),
     	  |	МАКСИМУМ(НачОстНЗПВР),
     	  |	МАКСИМУМ(КонОстНЗПВР),
     	  |	МАКСИМУМ(Сумма25ПР),
     	  |	МАКСИМУМ(Сумма25ВР),
     	  |	МАКСИМУМ(Сумма26ПР),
     	  |	МАКСИМУМ(Сумма26ВР),
     	  |	МАКСИМУМ(СуммаПрямыхЗатратПР),
     	  |	МАКСИМУМ(СуммаПрямыхЗатратВР),
     	  |	МАКСИМУМ(СуммаПР),
     	  |	МАКСИМУМ(СуммаВР),
     	  |	СУММА(ОбщаяСуммаВыпускаПР),
     	  |	СУММА(ОбщаяСуммаВыпускаВР)
     	  |ПО
     	  |	Подразделение,
     	  |	НоменклатурнаяГруппа,
     	  |	Номенклатура,
     	  |	ПрямыеЗатраты,
     	  |	КорСчетПрямыхЗатрат,
     	  |	НоменклатураПрямыхЗатрат,
     	  |	Затраты26,
     	  |	Затраты25";
Возврат Текст;
	
КонецФункции

Процедура ВывестиОбласть(ДокументРезультат, ОбластьОсновная, ОбластьРазницы, ОбластьОкончание, Уровень, ИмяГруппы, Открыта, ИмяПараметра, Выборка, СуммаПР = Неопределено, СуммаВР = Неопределено)
	
	Если Уровень = 0 Тогда
		ОбластьНачало = ДокументРезультат.Вывести(ОбластьОсновная);
	Иначе
		ОбластьНачало = ДокументРезультат.Вывести(ОбластьОсновная, Уровень, ИмяГруппы, Открыта);
	КонецЕсли;
	Если ВариантОтчета = 3 Тогда
		ОбластьРазницы.Параметры[ИмяПараметра + "ПР"] = ?(СуммаПР = Неопределено, Выборка[ИмяПараметра + "ПР"], СуммаПР);
		ОбластьРазницы.Параметры[ИмяПараметра + "ВР"] = ?(СуммаВР = Неопределено, Выборка[ИмяПараметра + "ВР"], СуммаВР);
		
		Если Уровень = 0 Тогда
			ОбластьРазниц = ДокументРезультат.Присоединить(ОбластьРазницы);
		Иначе
			
			ОбластьРазниц = ДокументРезультат.Присоединить(ОбластьРазницы, Уровень, ИмяГруппы, Открыта);
		КонецЕсли;
	
	КонецЕсли;
	
	Если Уровень = 0 Тогда
		ОбластьКонец = ДокументРезультат.Присоединить(ОбластьОкончание);
	Иначе
		
		ОбластьКонец = ДокументРезультат.Присоединить(ОбластьОкончание, Уровень, ИмяГруппы, Открыта);
	КонецЕсли;
	
КонецПроцедуры

// Выполняет запрос и формирует табличный документ-результат отчета
// в соответствии с настройками, заданными значениями реквизитов отчета.
//
// Параметры:
//	ДокументРезультат - табличный документ, формируемый отчетом
//	ПоказыватьЗаголовок - признак видимости строк с заголовком отчета
//	ВысотаЗаголовка - параметр, через который возвращается высота заголовка в строках 
//
Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок = Ложь, НачалоПодписи, ПоказыватьПодписи) Экспорт

	ДатаНач = НачалоМесяца(ПериодРегистрацииНач);
	ДатаКон  = КонецМесяца(ПериодРегистрацииКон);
	Если ДатаНач > ДатаКон И ДатаКон <> '00010101000000' Тогда
		Предупреждение("Дата начала периода не может быть больше даты окончания периода");
		Возврат;
	КонецЕсли;
	
	НачалоПериода = НачалоДня(ДатаНач);
	КонецПериода  = КонецДня(ДатаКон);

	ДокументРезультат.Очистить();

	Макет      = ПолучитьМакет("Отчет");
    МакетОбщий = ПолучитьОбщийМакет("СправкаРасчет");

	ЗаголовокОтчета = МакетОбщий.ПолучитьОбласть("Заголовок");
	
	ЗаголовокОтчета.Параметры.Период              = "" + ПредставлениеПериода(НачалоДня(ДатаНач), КонецДня(ДатаКон), "ФП = Истина");
	СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация);
	НазваниеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм");
	ЗаголовокОтчета.Параметры.НазваниеОрганизации = НазваниеОрганизации;
	ЗаголовокОтчета.Параметры.ДатаСоставления     = КонецДня(ДатаКон);
	ЗаголовокОтчета.Параметры.НазваниеОтчета      = "Калькуляция себестоимости продукции (" +?(ВариантОтчета = 2, "налоговый учет", "бухгалтерский учет") + ")";
	ДокументРезультат.Вывести(ЗаголовокОтчета);
	
	// Параметр для показа заголовка
	ВысотаЗаголовка = ДокументРезультат.ВысотаТаблицы;
	
	// Когда нужен только заголовок:
	Если ТолькоЗаголовок Тогда
		Возврат;
	КонецЕсли;

	Если ЗначениеЗаполнено(ВысотаЗаголовка) Тогда
		ДокументРезультат.Область("R1:R" + ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;
	КонецЕсли;

	СписокСчетов = Новый Массив;
	СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.ОсновноеПроизводство);
	СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.ВспомогательныеПроизводства);

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачДата",     Новый Граница(НачалоДня(ДатаНач), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("КонДата",     Новый Граница(КонецДня(ДатаКон),  ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация", Организация);
    Запрос.УстановитьПараметр("СчетПрямЗатрат",  СписокСчетов);
    Запрос.УстановитьПараметр("Счет25",  ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы);
    Запрос.УстановитьПараметр("Счет26",  ПланыСчетов.Хозрасчетный.ОбщехозяйственныеРасходы);
    Запрос.УстановитьПараметр("ВидОперации",  Перечисления.ВидыОперацийРасчетаСебестоимости.УслугиБезИспользованияПлановыхЦен);
	
	СписокСчетов90 = Новый Массив;
	СписокСчетов90.Добавить(ПланыСчетов.Хозрасчетный.Продажи_РасходыНаПродажу);
	СписокСчетов90.Добавить(ПланыСчетов.Хозрасчетный.Продажи_УправленческиеРасходы);
    Запрос.УстановитьПараметр("Счет90",  СписокСчетов90);
	
	ОграниченияПоПостроителюОтчета = СтандартныеОтчеты.ПолучитьТекстОграниченийПоПостроителюОтчета(ПостроительОтчета, Запрос);
	
	Если Не ПустаяСтрока(ОграниченияПоПостроителюОтчета) Тогда
		
		ОграниченияПоПостроителюОтчета = " И " + ОграниченияПоПостроителюОтчета;
		
	КонецЕсли;
	
	
	Если Не ВариантОтчета = 3 Тогда
		Запрос.Текст = СформироватьТекстЗапроса();
	Иначе
		Запрос.Текст = СформироватьТекстЗапросаСРазницами();
	КонецЕсли;
	
	Если ВариантОтчета = 2 Тогда                  
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ХозрасчетныйОбороты.Сумма", "ХозрасчетныйОбороты.СуммаНУ");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ХозрасчетныйОстаткиИОбороты.Сумма", "ХозрасчетныйОстаткиИОбороты.СуммаНУ");
	КонецЕсли;	
   				   
	Запрос.Текст  = СтрЗаменить(Запрос.Текст, ", (НЕ КорСчет В ИЕРАРХИИ (&Счет90)), ) КАК ХозрасчетныйОбороты","" + ОграниченияПоПостроителюОтчета + ", (НЕ КорСчет В ИЕРАРХИИ (&Счет90)), ) КАК ХозрасчетныйОбороты");
	Запрос.Текст  = СтрЗаменить(Запрос.Текст, ", , ) КАК ВыпускБУ","" + ОграниченияПоПостроителюОтчета + ", , ) КАК ВыпускБУ");
	
	Результат = Запрос.Выполнить();
	
	СтрОтбор = УправлениеОтчетами.СформироватьСтрокуОтборов(ПостроительОтчета.Отбор);
	Если Не ПустаяСтрока(СтрОтбор) Тогда
		ОбластьОтбор = МакетОбщий.ПолучитьОбласть("СтрокаОтбор");                     
		ОбластьОтбор.Параметры.ТекстПроОтбор = "Отбор: " + СтрОтбор;
		ДокументРезультат.Вывести(ОбластьОтбор);
	КонецЕсли;	
	
	ОбластьШапка              = Макет.ПолучитьОбласть("Шапка|Основная");
	ОбластьСтрокаЗатрат       = Макет.ПолучитьОбласть("СтрокаЗатрат|Основная");
	ОбластьСчетЗатрат         = Макет.ПолучитьОбласть("СчетЗатрат|Основная");
	ОбластьНоменклатураЗатрат = Макет.ПолучитьОбласть("СтрокаНоменклатурыЗатрат|Основная");
	ОбластьШапка20            = Макет.ПолучитьОбласть("Шапка20|Основная");
	ОбластьШапка25            = Макет.ПолучитьОбласть("Шапка25|Основная");
	ОбластьШапка26            = Макет.ПолучитьОбласть("Шапка26|Основная");
	ОбластьИтого20            = Макет.ПолучитьОбласть("Итого20|Основная");
	ОбластьИтого25            = Макет.ПолучитьОбласть("Итого25|Основная");
	ОбластьИтого26            = Макет.ПолучитьОбласть("Итого26|Основная");
	ОбластьНЗПНач             = Макет.ПолучитьОбласть("НЗПНач|Основная");
	ОбластьНЗПКон             = Макет.ПолучитьОбласть("НЗПКон|Основная");
	ОбластьНЗПИтого           = Макет.ПолучитьОбласть("НЗПИтого|Основная");
	ОбластьОкончаниеТаблицы   = Макет.ПолучитьОбласть("ОкончаниеТаблицы|Основная");
	ОбластьШапкаРазницы              = Макет.ПолучитьОбласть("Шапка|Разницы");
	ОбластьСтрокаЗатратРазницы       = Макет.ПолучитьОбласть("СтрокаЗатрат|Разницы");
	ОбластьСчетЗатратРазницы         = Макет.ПолучитьОбласть("СчетЗатрат|Разницы");
	ОбластьНоменклатураЗатратРазницы = Макет.ПолучитьОбласть("СтрокаНоменклатурыЗатрат|Разницы");
	ОбластьНЗПНачРазницы             = Макет.ПолучитьОбласть("НЗПНач|Разницы");
	ОбластьНЗПКонРазницы             = Макет.ПолучитьОбласть("НЗПКон|Разницы");
	ОбластьНЗПИтогоРазницы           = Макет.ПолучитьОбласть("НЗПИтого|Разницы");
	ОбластьШапка20Разницы            = Макет.ПолучитьОбласть("Шапка20|Разницы");
	ОбластьШапка25Разницы            = Макет.ПолучитьОбласть("Шапка25|Разницы");
	ОбластьШапка26Разницы            = Макет.ПолучитьОбласть("Шапка26|Разницы");
	ОбластьИтого20Разницы            = Макет.ПолучитьОбласть("Итого20|Разницы");
	ОбластьИтого25Разницы            = Макет.ПолучитьОбласть("Итого25|Разницы");
	ОбластьИтого26Разницы            = Макет.ПолучитьОбласть("Итого26|Разницы");
	ОбластьОкончаниеТаблицыРазницы   = Макет.ПолучитьОбласть("ОкончаниеТаблицы|Разницы");
	ОбластьШапкаОкончание              = Макет.ПолучитьОбласть("Шапка|Окончание");
	ОбластьСтрокаЗатратОкончание       = Макет.ПолучитьОбласть("СтрокаЗатрат|Окончание");
	ОбластьСчетЗатратОкончание         = Макет.ПолучитьОбласть("СчетЗатрат|Окончание");
	ОбластьНоменклатураЗатратОкончание = Макет.ПолучитьОбласть("СтрокаНоменклатурыЗатрат|Окончание");
	ОбластьШапка20Окончание            = Макет.ПолучитьОбласть("Шапка20|Окончание");
	ОбластьШапка25Окончание            = Макет.ПолучитьОбласть("Шапка25|Окончание");
	ОбластьШапка26Окончание            = Макет.ПолучитьОбласть("Шапка26|Окончание");
	ОбластьИтого20Окончание            = Макет.ПолучитьОбласть("Итого20|Окончание");
	ОбластьИтого25Окончание            = Макет.ПолучитьОбласть("Итого25|Окончание");
	ОбластьИтого26Окончание            = Макет.ПолучитьОбласть("Итого26|Окончание");
	ОбластьНЗПНачОкончание             = Макет.ПолучитьОбласть("НЗПНач|Окончание");
	ОбластьНЗПКонОкончание             = Макет.ПолучитьОбласть("НЗПКон|Окончание");
	ОбластьНЗПИтогоОкончание           = Макет.ПолучитьОбласть("НЗПИтого|Окончание");
	ОбластьОкончаниеТаблицыОкончание   = Макет.ПолучитьОбласть("ОкончаниеТаблицы|Окончание");
	
	ОбластьПодвал             = МакетОбщий.ПолучитьОбласть("Подвал");
	
	ПостояннаяРазница = "Постоянные
	                     |разницы";
	ВременнаяРазница = "Временные
	                     |разницы";
	
	ВыборкаПодразделение = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Подразделение");
	
	Пока ВыборкаПодразделение.Следующий() Цикл		
		ВыборкаНоменклатурнаяГруппа = ВыборкаПодразделение.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "НоменклатурнаяГруппа");
		
		Пока ВыборкаНоменклатурнаяГруппа.Следующий() Цикл
			ВсегоВыпуск   = ВыборкаНоменклатурнаяГруппа.ОбщаяСуммаВыпуска;
			ВсегоВыпускПР = ?(ВариантОтчета = 3, ВыборкаНоменклатурнаяГруппа.ОбщаяСуммаВыпускаПР, 0);
			ВсегоВыпускВР = ?(ВариантОтчета = 3, ВыборкаНоменклатурнаяГруппа.ОбщаяСуммаВыпускаВР, 0);
			Если ВсегоВыпуск = 0 И ВсегоВыпускПР = 0 И ВсегоВыпускВР = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			ВыборкаНоменклатураВыпуска = ВыборкаНоменклатурнаяГруппа.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Номенклатура");
			
			Пока ВыборкаНоменклатураВыпуска.Следующий() Цикл
				
				Если НЕ ЗначениеЗаполнено(ВыборкаНоменклатураВыпуска.Номенклатура) Тогда
					Продолжить;
				КонецЕсли;
				
				СуммаВыпуска   = ВыборкаНоменклатураВыпуска.ОбщаяСуммаВыпуска;
				СуммаВыпускаПР = ?(ВариантОтчета = 3, ВыборкаНоменклатураВыпуска.ОбщаяСуммаВыпускаПР, 0);
				СуммаВыпускаВР = ?(ВариантОтчета = 3, ВыборкаНоменклатураВыпуска.ОбщаяСуммаВыпускаВР, 0);
				
				Если СуммаВыпуска = 0 И СуммаВыпускаПР = 0 И СуммаВыпускаВР = 0 Тогда
					Продолжить;
				КонецЕсли;
				
				Коэффициент   = ?(ВсегоВыпуск = 0, 0, СуммаВыпуска   / ВсегоВыпуск);
				КоэффициентПР = ?(ВсегоВыпускПР = 0, 0, СуммаВыпускаПР / ВсегоВыпускПР);
				КоэффициентВР = ?(ВсегоВыпускВР = 0, 0, СуммаВыпускаВР / ВсегоВыпускВР);
								
				ОбластьШапка.Параметры.НоменклатураВыпуска         = УправлениеПроизводством.ВыводНаименованияВыпуска(ВыборкаНоменклатураВыпуска.Номенклатура,, Истина);
				ОбластьШапка.Параметры.АналитикаВыпуска            = "" + ВыборкаНоменклатураВыпуска.Подразделение + " / " + ВыборкаНоменклатураВыпуска.НоменклатурнаяГруппа;
				ОбластьШапка.Параметры.КоличествоВыпуска           = ВыборкаНоменклатураВыпуска.Количество;
				ОбластьШапка.Параметры.СуммаВыпуска                =  ?(ВыборкаНоменклатураВыпуска.Количество = 0, 0, ВыборкаНоменклатураВыпуска.Сумма);
				ОбластьШапка.Параметры.ЦенаВыпуска                 = ?(ВыборкаНоменклатураВыпуска.Количество = 0, ВыборкаНоменклатураВыпуска.Сумма, ВыборкаНоменклатураВыпуска.Сумма / ВыборкаНоменклатураВыпуска.Количество);
				ОбластьШапка.Параметры.ТекстКоличество             = ?(ВыборкаНоменклатураВыпуска.Количество = 0, "", "Количество выпуска:");
				ОбластьШапка.Параметры.ТекстСумма                  = ?(ВыборкаНоменклатураВыпуска.Количество = 0, "", "Фактическая стоимость выпуска:");
				ОбластьШапка.Параметры.СебестоимостьЕдиницы        = "Себестоимость ед.";
                ВывестиОбласть(ДокументРезультат, ОбластьШапка, ОбластьШапкаРазницы, ОбластьШапкаОкончание, 1, "Группа1", Ложь, "Сумма", ВыборкаНоменклатураВыпуска);

                ВывестиОбласть(ДокументРезультат, ОбластьШапка20, ОбластьШапка20Разницы, ОбластьШапка20Окончание, 2, "Группа2", Ложь, "Текст", ВыборкаНоменклатураВыпуска, ПостояннаяРазница, ВременнаяРазница);
				ВыборкаПрямыеЗатраты = ВыборкаНоменклатураВыпуска.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ПрямыеЗатраты");
				ИтогоСуммаЗатрат20 = 0;
				ИтогоСуммаЗатрат20ПР = 0;
				ИтогоСуммаЗатрат20ВР = 0;
				Пока ВыборкаПрямыеЗатраты.Следующий() Цикл
					
					Если ВыборкаПрямыеЗатраты.СуммаПрямыхЗатрат = 0 Тогда
						Продолжить;
					КонецЕсли;
					ВыборкаНоменклатураЗатрат = ВыборкаПрямыеЗатраты.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "НоменклатураПрямыхЗатрат");
					СуммаПрямыхЗатрат   = 0;
					СуммаПрямыхЗатратПР = 0;
		        	СуммаПрямыхЗатратВР = 0;
					Если ВыборкаНоменклатураЗатрат.Количество() = 0 Тогда
						СуммаПрямыхЗатрат = ВыборкаПрямыеЗатраты.СуммаПрямыхЗатрат;
						Если ВариантОтчета = 3 Тогда
							СуммаПрямыхЗатратПР = ВыборкаПрямыеЗатраты.СуммаПрямыхЗатратПР;
							СуммаПрямыхЗатратВР = ВыборкаПрямыеЗатраты.СуммаПрямыхЗатратВР;
						КонецЕсли;
					Иначе
						Пока ВыборкаНоменклатураЗатрат.Следующий() Цикл
							СуммаПрямыхЗатрат = СуммаПрямыхЗатрат + ВыборкаНоменклатураЗатрат.СуммаПрямыхЗатрат;
							Если ВариантОтчета = 3 Тогда
								СуммаПрямыхЗатратПР = СуммаПрямыхЗатратПР + ВыборкаНоменклатураЗатрат.СуммаПрямыхЗатратПР;
								СуммаПрямыхЗатратВР = СуммаПрямыхЗатратВР + ВыборкаНоменклатураЗатрат.СуммаПрямыхЗатратВР;
							КонецЕсли;
							
						КонецЦикла;
					КонецЕсли;
					
					ОбластьСтрокаЗатрат.Параметры.НаименованиеЗатрат = ВыборкаПрямыеЗатраты.ПрямыеЗатраты;
					ОбластьСтрокаЗатрат.Параметры.СуммаЗатрат = СуммаПрямыхЗатрат * Коэффициент;
                    ВывестиОбласть(ДокументРезультат, ОбластьСтрокаЗатрат, ОбластьСтрокаЗатратРазницы, ОбластьСтрокаЗатратОкончание, 2, "Группа2", Ложь, "СуммаЗатрат", ВыборкаПрямыеЗатраты, СуммаПрямыхЗатратПР * КоэффициентПР, СуммаПрямыхЗатратВР * КоэффициентВР);
					ВыборкаСчетПрямыхЗатрат = ВыборкаПрямыеЗатраты.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "КорСчетПрямыхЗатрат");
					
					Пока ВыборкаСчетПрямыхЗатрат.Следующий() Цикл
						
						Если ВыборкаСчетПрямыхЗатрат.СуммаПрямыхЗатрат = 0 Тогда
							Если ВариантОтчета = 3 Тогда
								Если ВыборкаСчетПрямыхЗатрат.СуммаПрямыхЗатратПР = 0 И ВыборкаСчетПрямыхЗатрат.СуммаПрямыхЗатратВР = 0 Тогда
									Продолжить;
								КонецЕсли;
							Иначе
								Продолжить;
							КонецЕсли;
						КонецЕсли;
						
						ВыборкаНоменклатураЗатрат = ВыборкаСчетПрямыхЗатрат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "НоменклатураПрямыхЗатрат");
						СуммаПрямыхЗатрат = 0;
						СуммаПрямыхЗатратПР = 0;
						СуммаПрямыхЗатратВР = 0;
						Пока ВыборкаНоменклатураЗатрат.Следующий() Цикл
						СуммаПрямыхЗатрат = СуммаПрямыхЗатрат + ВыборкаНоменклатураЗатрат.СуммаПрямыхЗатрат;
						Если ВариантОтчета = 3 Тогда
						СуммаПрямыхЗатратПР = СуммаПрямыхЗатратПР + ВыборкаНоменклатураЗатрат.СуммаПрямыхЗатратПР;
						СуммаПрямыхЗатратВР = СуммаПрямыхЗатратВР + ВыборкаНоменклатураЗатрат.СуммаПрямыхЗатратВР;
						КонецЕсли;

					КонецЦикла;
						СуммаПрямыхЗатрат = ?(СуммаПрямыхЗатрат = 0, ВыборкаСчетПрямыхЗатрат.СуммаПрямыхЗатрат, СуммаПрямыхЗатрат);
						ОбластьСчетЗатрат.Параметры.НаименованиеСчетаЗатрат = РазъяснитьЗатраты(ВыборкаСчетПрямыхЗатрат.КорСчетПрямыхЗатрат);
						ОбластьСчетЗатрат.Параметры.СуммаСчетаЗатрат = СуммаПрямыхЗатрат * Коэффициент;
                        ВывестиОбласть(ДокументРезультат, ОбластьСчетЗатрат, ОбластьСчетЗатратРазницы, ОбластьСчетЗатратОкончание, 3, "Группа3", Ложь, "СуммаСчетаЗатрат", ВыборкаСчетПрямыхЗатрат, СуммаПрямыхЗатратПР * КоэффициентПР, СуммаПрямыхЗатратВР * КоэффициентВР);
						
						ВыборкаНоменклатураЗатрат = ВыборкаСчетПрямыхЗатрат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "НоменклатураПрямыхЗатрат");
						Пока ВыборкаНоменклатураЗатрат.Следующий() Цикл
							
							ОбластьНоменклатураЗатрат.Параметры.НаименованиеНоменклатурыЗатрат = УправлениеПроизводством.ВыводНаименованияВыпуска(ВыборкаНоменклатураЗатрат.НоменклатураПрямыхЗатрат);
							ОбластьНоменклатураЗатрат.Параметры.СуммаНоменклатурыЗатрат        = ВыборкаНоменклатураЗатрат.СуммаПрямыхЗатрат * Коэффициент;
							ОбластьНоменклатураЗатрат.Параметры.КоличествоНоменклатурыЗатрат   = ВыборкаНоменклатураЗатрат.КоличествоПрямыхЗатрат * Коэффициент;
							ОбластьНоменклатураЗатрат.Параметры.ЦенаНоменклатурыЗатрат         = ?(ВыборкаНоменклатураЗатрат.КоличествоПрямыхЗатрат = 0, 0, ВыборкаНоменклатураЗатрат.СуммаПрямыхЗатрат / ВыборкаНоменклатураЗатрат.КоличествоПрямыхЗатрат);
							ВывестиОбласть(ДокументРезультат, ОбластьНоменклатураЗатрат, ОбластьНоменклатураЗатратРазницы, ОбластьНоменклатураЗатратОкончание, 4, "Группа4", Ложь, "СуммаНоменклатурыЗатрат", ВыборкаНоменклатураЗатрат, ?(ВариантОтчета = 3, (ВыборкаНоменклатураЗатрат.СуммаПрямыхЗатратПР) * КоэффициентПР, 0), ?(ВариантОтчета = 3, (ВыборкаНоменклатураЗатрат.СуммаПрямыхЗатратВР) * КоэффициентВР, 0));
							
							ИтогоСуммаЗатрат20 = ИтогоСуммаЗатрат20 + ВыборкаНоменклатураЗатрат.СуммаПрямыхЗатрат * Коэффициент;
							Если ВариантОтчета = 3 Тогда
								ИтогоСуммаЗатрат20ПР = ИтогоСуммаЗатрат20ПР + ВыборкаНоменклатураЗатрат.СуммаПрямыхЗатратПР * КоэффициентПР;
								ИтогоСуммаЗатрат20ВР = ИтогоСуммаЗатрат20ВР + ВыборкаНоменклатураЗатрат.СуммаПрямыхЗатратВР  * КоэффициентВР;
							КонецЕсли;
							
						КонецЦикла; // НоменклатураЗатрат
						
						Если ВыборкаНоменклатураЗатрат.Количество() = 0 Тогда
							ИтогоСуммаЗатрат20 = ИтогоСуммаЗатрат20 + ВыборкаСчетПрямыхЗатрат.СуммаПрямыхЗатрат * Коэффициент;
							Если ВариантОтчета = 3 Тогда
								ИтогоСуммаЗатрат20ПР = ИтогоСуммаЗатрат20ПР + ВыборкаСчетПрямыхЗатрат.СуммаПрямыхЗатратПР * КоэффициентПР;
								ИтогоСуммаЗатрат20ВР = ИтогоСуммаЗатрат20ВР + ВыборкаСчетПрямыхЗатрат.СуммаПрямыхЗатратВР  * КоэффициентВР;
							КонецЕсли;
						КонецЕсли;
						
					КонецЦикла; // СчетЗатрат
				КонецЦикла;  // ПрямыеЗатраты
				
				ОбластьИтого20.Параметры.ИтогоСуммаЗатрат20 = ИтогоСуммаЗатрат20;
			    ВывестиОбласть(ДокументРезультат, ОбластьИтого20, ОбластьИтого20Разницы, ОбластьИтого20Окончание, 2, "Группа2", Ложь, "ИтогоСуммаЗатрат20", ВыборкаСчетПрямыхЗатрат, ИтогоСуммаЗатрат20ПР, ИтогоСуммаЗатрат20ВР);
				
				Всего25 = ВыборкаНоменклатураВыпуска.Сумма25;
				ВсегоСуммаЗатрат   = 0;
				ВсегоСуммаЗатратПР = 0;
				ВсегоСуммаЗатратВР = 0;
				Если НЕ Всего25 = 0 Тогда
			        ВывестиОбласть(ДокументРезультат, ОбластьШапка25, ОбластьШапка25Разницы, ОбластьШапка25Окончание, 2, "Группа2", Ложь, "Текст", ВыборкаНоменклатураВыпуска, "", "");
					Выборка25 = ВыборкаНоменклатураВыпуска.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Затраты25");
					Пока Выборка25.Следующий() Цикл
						ОбластьСтрокаЗатрат.Параметры.НаименованиеЗатрат = Выборка25.Затраты25;
						ОбластьСтрокаЗатрат.Параметры.СуммаЗатрат        = Выборка25.Сумма25 * Коэффициент;
						ВсегоСуммаЗатрат = ВсегоСуммаЗатрат + Выборка25.Сумма25 * Коэффициент;
						Если ВариантОтчета = 3 Тогда
							Сумма25ПР = (Выборка25.Сумма25ПР) * КоэффициентПР;
							Сумма25ВР = (Выборка25.Сумма25ВР) * КоэффициентВР;
						Иначе
							Сумма25ПР = 0;
							Сумма25ВР = 0;
						КонецЕсли;
							ВсегоСуммаЗатратПР = ВсегоСуммаЗатратПР + Сумма25ПР;
							ВсегоСуммаЗатратВР = ВсегоСуммаЗатратВР + Сумма25ВР;
                        ВывестиОбласть(ДокументРезультат, ОбластьСтрокаЗатрат, ОбластьСтрокаЗатратРазницы, ОбластьСтрокаЗатратОкончание, 0, 0, Ложь, "СуммаЗатрат", Выборка25, Сумма25ПР, Сумма25ВР);
					КонецЦикла; 					
					ОбластьИтого25.Параметры.ИтогоСуммаЗатрат25        = ВсегоСуммаЗатрат;
			        ВывестиОбласть(ДокументРезультат, ОбластьИтого25, ОбластьИтого25Разницы, ОбластьИтого25Окончание, 2, "Группа2", Ложь, "ИтогоСуммаЗатрат25", Выборка25, ВсегоСуммаЗатратПР, ВсегоСуммаЗатратВР);
		   		КонецЕсли;  // Затраты25
				
                Всего26 = ВыборкаНоменклатураВыпуска.Сумма26;
				ВсегоСуммаЗатрат = 0;
				ВсегоСуммаЗатратПР = 0;
				ВсегоСуммаЗатратВР = 0;
				Если НЕ Всего26 = 0 Тогда
			        ВывестиОбласть(ДокументРезультат, ОбластьШапка26, ОбластьШапка26Разницы, ОбластьШапка26Окончание, 2, "Группа2", Ложь, "Текст", ВыборкаНоменклатураВыпуска, "", "");
					Выборка26 = ВыборкаНоменклатураВыпуска.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Затраты26");
					Пока Выборка26.Следующий() Цикл
						ОбластьСтрокаЗатрат.Параметры.НаименованиеЗатрат = Выборка26.Затраты26;
						ОбластьСтрокаЗатрат.Параметры.СуммаЗатрат        = Выборка26.Сумма26 * Коэффициент;
						ВсегоСуммаЗатрат = ВсегоСуммаЗатрат + Выборка26.Сумма26 * Коэффициент;
						Если ВариантОтчета = 3 Тогда
							Сумма26ПР = (Выборка26.Сумма26ПР) * КоэффициентПР;
							Сумма26ВР = (Выборка26.Сумма26ВР) * КоэффициентВР;
						Иначе
							Сумма26ПР = 0;
							Сумма26ВР = 0;
						КонецЕсли;
						ВсегоСуммаЗатратПР = ВсегоСуммаЗатратПР + Сумма26ПР;
						ВсегоСуммаЗатратВР = ВсегоСуммаЗатратВР + Сумма26ВР;
						ВывестиОбласть(ДокументРезультат, ОбластьСтрокаЗатрат, ОбластьСтрокаЗатратРазницы, ОбластьСтрокаЗатратОкончание, 0, 0, Ложь, "СуммаЗатрат", Выборка26, Сумма26ПР, Сумма26ВР);
					КонецЦикла; 
					ОбластьИтого26.Параметры.ИтогоСуммаЗатрат26        = ВсегоСуммаЗатрат;
			        ВывестиОбласть(ДокументРезультат, ОбластьИтого26, ОбластьИтого26Разницы, ОбластьИтого26Окончание, 2, "Группа2", Ложь, "ИтогоСуммаЗатрат26", Выборка26, ВсегоСуммаЗатратПР, ВсегоСуммаЗатратВР);
					
				КонецЕсли;  // Затраты26
				
				НачОстНЗП   = ВыборкаНоменклатураВыпуска.НачОстНЗП   * Коэффициент;
				КонОстНЗП   = ВыборкаНоменклатураВыпуска.КонОстНЗП   * Коэффициент;
				НачОстНЗППР = 0;
				КонОстНЗППР = 0;
				НачОстНЗПВР = 0;
				КонОстНЗПВР = 0;
				Если ВариантОтчета = 3 Тогда
					НачОстНЗППР = (ВыборкаНоменклатураВыпуска.НачОстНЗППР) * КоэффициентПР;
					КонОстНЗППР = (ВыборкаНоменклатураВыпуска.КонОстНЗППР) * КоэффициентПР;
					НачОстНЗПВР = (ВыборкаНоменклатураВыпуска.НачОстНЗПВР) * КоэффициентВР;
					КонОстНЗПВР = (ВыборкаНоменклатураВыпуска.КонОстНЗПВР) * КоэффициентВР;
				КонецЕсли;
				
				Если     НачОстНЗП   <> 0 Или КонОстНЗП   <> 0
					 Или НачОстНЗППР <> 0 Или КонОстНЗППР <> 0
					 Или НачОстНЗПВР <> 0 Или КонОстНЗПВР <> 0 Тогда
					   
					ОбластьНЗПНач.Параметры.СуммаНЗПнаНачало = НачОстНЗП;
					ОбластьНЗПКон.Параметры.СуммаНЗПнаКонец  = КонОстНЗП;
					ОбластьНЗПИтого.Параметры.ИтогоНЗП         = НачОстНЗП - КонОстНЗП;
					ОбластьНЗПНач.Параметры.НачалоПериода	  = ДатаНач;
					ОбластьНЗПКон.Параметры.КонецПериода	  =	ДатаКон;
			        ВывестиОбласть(ДокументРезультат, ОбластьНЗПНач, ОбластьНЗПНачРазницы, ОбластьНЗПНачОкончание, 2, "Группа2", Ложь, "НачОстНЗП", ВыборкаНоменклатураВыпуска, НачОстНЗППР, НачОстНЗПВР);
			        ВывестиОбласть(ДокументРезультат, ОбластьНЗПКон, ОбластьНЗПКонРазницы, ОбластьНЗПКонОкончание, 2, "Группа2", Ложь, "КонОстНЗП", ВыборкаНоменклатураВыпуска, КонОстНЗППР, КонОстНЗПВР);
			        ВывестиОбласть(ДокументРезультат, ОбластьНЗПИтого, ОбластьНЗПИтогоРазницы, ОбластьНЗПИтогоОкончание, 2, "Группа2", Ложь, "ИтогоНЗП", ВыборкаНоменклатураВыпуска, - КонОстНЗППР + НачОстНЗППР, - КонОстНЗПВР + НачОстНЗПВР);
				КонецЕсли;  // НЗП
				
			    ВывестиОбласть(ДокументРезультат, ОбластьОкончаниеТаблицы, ОбластьОкончаниеТаблицыРазницы, ОбластьОкончаниеТаблицыОкончание, 1, "Группа1", Ложь, "Текст", ВыборкаНоменклатураВыпуска, "", "");
			КонецЦикла;  // НоменклатураВыпуска

		КонецЦикла;   // НоменклатурнаяГруппа
	КонецЦикла;    // Подразделение
	
	ОбластьПодвал.Параметры.ТекстПримечания = ?(ВариантОтчета = 3, "Постоянные разницы: Постоянные разницы в оценке стоимости активов и обязательств.
	                                                               |Временные разницы: Временные разницы в оценке стоимости активов и обязательств.", "");
	ДокументРезультат.Вывести(ОбластьПодвал);
	
	ВысотаПодписи = ДокументРезультат.Области.Подвал.Низ - ДокументРезультат.Области.Подвал.Верх;
	
	ДокументРезультат.Области.Подвал.Видимость = ПоказыватьПодписи;
	
	// Первую колонку не печатаем
	ДокументРезультат.ОбластьПечати = ДокументРезультат.Область(1,2,ДокументРезультат.ВысотаТаблицы,ДокументРезультат.ШиринаТаблицы);
	
	// Присвоим имя для сохранения параметров печати табличного документа
	ДокументРезультат.ИмяПараметровПечати = "Калькуляция себестоимости";

	УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(ДокументРезультат, ЗаголовокОтчета, Строка(глЗначениеПеременной("глТекущийПользователь")));
	
КонецПроцедуры // СформироватьОтчет

Функция РазъяснитьЗатраты(СчетЗатрат)
	
	СчетУчетаРасчетов = ПланыСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками;
	ПустойСчет = ПланыСчетов.Хозрасчетный.ПустаяСсылка();
	
	Если СчетЗатрат = ПустойСчет Тогда
		Возврат "";
	КонецЕсли;
	
	Если СчетЗатрат.ПринадлежитЭлементу(СчетУчетаРасчетов)
		Или СчетЗатрат.ПринадлежитЭлементу(СчетУчетаРасчетов)Тогда
		Возврат "Услуги сторонних организаций"
	Иначе
		Возврат СчетЗатрат.Наименование;
	КонецЕсли;
  
КонецФункции

Процедура ЗаполнитьНачальныеНастройки() Экспорт
	
	СтарыеНастройки = УправлениеОтчетами.ПолучитьКопиюОтбораВТЗ(ПостроительОтчета.Отбор);
	
	СоотвСубконто = Новый Соответствие;
	
	Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	        |	ХозрасчетныйОбороты.СуммаОборотКт КАК СуммаОборотКт
	        |{ВЫБРАТЬ
	        |	ХозрасчетныйОбороты.Субконто1 КАК Субконто1}
	        |ИЗ
	        |	РегистрБухгалтерии.Хозрасчетный.Обороты(, , Месяц, Счет В ИЕРАРХИИ (&Счет), , {(Субконто1).*}, , ) КАК ХозрасчетныйОбороты
	        |ИТОГИ
	        |	СУММА(СуммаОборотКт)
	        |ПО
	        |	ОБЩИЕ
	        |{ИТОГИ ПО
	        |	ХозрасчетныйОбороты.Субконто1.*}";

Массив = Новый Массив;
Массив.Добавить(ПланыСчетов.Хозрасчетный.ОсновноеПроизводство);
Массив.Добавить(ПланыСчетов.Хозрасчетный.ВспомогательныеПроизводства);

ПостроительОтчета.Параметры.Вставить("Счет", Массив);
ПостроительОтчета.Параметры.Вставить("ПустаяОрганизация", Справочники.Организации.ПустаяСсылка());
	
ПостроительОтчета.Текст = Текст;

СоотвСубконто = Новый Соответствие;
СоотвСубконто.Вставить("Субконто1",    ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы);

		
	Сч = 0;
	Для каждого Элемент Из СоотвСубконто Цикл
		Сч = Сч+1;
		Поле = ПостроительОтчета.ДоступныеПоля.Найти(Элемент.Ключ);
		Поле.ТипЗначения = Элемент.Значение.ТипЗначения;
		Поле.Представление = Элемент.Значение.Наименование;
		
		ПостроительОтчета.Отбор.Добавить(Элемент.Ключ);
	КонецЦикла;

УправлениеОтчетами.УстановитьОтборИзТаблицы(ПостроительОтчета.Отбор, СтарыеНастройки);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
// 

НП = Новый НастройкаПериода;

#КонецЕсли
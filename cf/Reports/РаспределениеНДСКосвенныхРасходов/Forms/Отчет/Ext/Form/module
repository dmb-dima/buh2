Перем ВысотаЗаголовка;
Перем ПоказыватьЗаголовок;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Процедура ВыводЗаголовка()

	// Перезаполнять заголовок можно только у "чистого" отчета
	Если ЭлементыФормы.ДокументРезультат.ВысотаТаблицы <= 6 Тогда
		ВнешняяОбработкаОбъект.СформироватьОтчет(ЭлементыФормы.ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, Истина);
	КонецЕсли;

	Если ЗначениеЗаполнено(ВысотаЗаголовка) Тогда
		ЭлементыФормы.ДокументРезультат.Область(1,,ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;
	КонецЕсли;

	УправлениеПометкамиКнопокКоманднойПанели();

КонецПроцедуры // ВыводЗаголовка()

Процедура УправлениеПометкамиКнопокКоманднойПанели()

	ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Заголовок.Пометка                = ПоказыватьЗаголовок;
	ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Подменю.Кнопки.Заголовок.Пометка = ПоказыватьЗаголовок;

КонецПроцедуры // УправлениеПометкамиКнопокКоманднойПанели()

Процедура УстановитьВидимость()
	
	ЭлементыФормы.НадписьДокументРаспределения.Видимость = ВыручкаПоДокументам;
	ЭлементыФормы.ДокументРаспределения.Видимость = ВыручкаПоДокументам;
	
КонецПроцедуры

Процедура ПроверитьПериодДокументаРаспределения()
	
	Если ЗначениеЗаполнено(ДокументРаспределения) Тогда
		
		Если ДокументРаспределения.Дата < НачалоДня(ДатаНач) ИЛИ ДокументРаспределения.Дата > КонецДня(ДатаКон) Тогда
			
			Сообщить("Документ распределения не входит в период формирования отчета", СтатусСообщения.Внимание);
			ДокументРаспределения = Документы.РаспределениеНДСКосвенныхРасходов.ПустаяСсылка();
		
		КонецЕсли;

	КонецЕсли;
	
КонецПроцедуры
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

Процедура КнопкаНастройкаПериодаНажатие(Элемент)

	НП.УстановитьПериод(ДатаНач, ДатаКон);

	Если НП.Редактировать() Тогда

		ДатаКон = НП.ПолучитьДатуОкончания();
		ДатаНач = УчетНДС.ПолучитьНачалоПериодаПоУчетнойПолитике(Организация, ДатаКон);
		
		ПроверитьПериодДокументаРаспределения();

	КонецЕсли;

КонецПроцедуры // КнопкаНастройкаПериодаНажатие()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТКИ РЕКВИЗИТОВ ФОРМЫ


// Процедура - обработчик события "ПриИзменении" поля ДатаКон
//
Процедура ДатаКонПриИзменении(Элемент)
	
	ДатаНач = УчетНДС.ПолучитьНачалоПериодаПоУчетнойПолитике(Организация, ДатаКон);
	
	ПроверитьПериодДокументаРаспределения();
	
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" флажка ВыручкаПоДокументам
//
Процедура ВыручкаПоДокументамПриИзменении(Элемент)
	
	УстановитьВидимость();
	
КонецПроцедуры

// Процедура - обработчик события "ОбработкаВыбора" поля ДокументРаспределения
//
Процедура ДокументРаспределенияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		
		Если ВыбранноеЗначение.Дата < НачалоДня(ДатаНач) ИЛИ ВыбранноеЗначение.Дата > КонецДня(ДатаКон) Тогда
			
			Сообщить("Документ распределения не входит в период формирования отчета", СтатусСообщения.Внимание);
			СтандартнаяОбработка = Ложь;
			
		КонецЕсли;

	КонецЕсли;
			
	
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля ДокументРаспределения
//
Процедура ДокументРаспределенияПриИзменении(Элемент)
	
	Если (ЗначениеЗаполнено(ДокументРаспределения)) И (ДокументРаспределения.Организация <> Организация) Тогда
		
		Организация = ДокументРаспределения.Организация;
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик события "НачалоВыбора" поля ДокументРаспределения
//
Процедура ДокументРаспределенияНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Организация) Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ФормаВыбора = Документы.РаспределениеНДСКосвенныхРасходов.ПолучитьФормуВыбора( , Элемент);
		
		ФормаВыбора.Отбор.Организация.Установить(Организация, Истина);
		
		ФормаВыбора.Открыть();
		
	КонецЕсли;	
	
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля Организация
//
Процедура ОрганизацияПриИзменении(Элемент)

	ДатаНач = УчетНДС.ПолучитьНачалоПериодаПоУчетнойПолитике(Организация, ДатаКон);
	
КонецПроцедуры
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ НАЖАТИЯ КНОПОК КОМАНДНОЙ ПАНЕЛИ

Процедура КоманднаяПанельФормыСформировать(Элемент)

	ВнешняяОбработкаОбъект.СформироватьОтчет(ЭлементыФормы.ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка);

	ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.ДокументРезультат;

КонецПроцедуры

Процедура КоманднаяПанельЗаголовок(Кнопка)

	ПоказыватьЗаголовок = Не ПоказыватьЗаголовок;
	ВыводЗаголовка();

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием()

	ПоказыватьЗаголовок = ИСТИНА;

КонецПроцедуры

// Процедура - обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии()
		
	Организация = глЗначениеПеременной("ОсновнаяОрганизация");
	
	ДатаКон = ТекущаяДата();
	ДатаНач = УчетНДС.ПолучитьНачалоПериодаПоУчетнойПолитике(Организация, ДатаКон);
	
	ВыводЗаголовка();

	// Проверка ведения однофирменности
	Организация = глЗначениеПеременной("ОсновнаяОрганизация");
	
	УстановитьВидимость();

КонецПроцедуры





#Если Клиент Тогда
	
	Перем НП Экспорт;
	
	Функция СформироватьТекстЗапроса()
		
		Текст	= "ВЫБРАТЬ
		     	  |	РасчетДолейБазыНалогаНаПрибыль.РегистрацияВИФНС КАК РегистрацияВИФНС,
		     	  |	РасчетДолейБазыНалогаНаПрибыль.ДоляНалоговойБазы КАК ДоляНалоговойБазы,
		     	  |	РасчетДолейБазыНалогаНаПрибыль.РасходыПоОплатеТруда КАК РасходыПоОплатеТруда,
		     	  |	РасчетДолейБазыНалогаНаПрибыль.СтоимостьАмортизируемогоИмущества КАК СтоимостьАмортизируемогоИмущества,
		     	  |	РасчетДолейБазыНалогаНаПрибыль.СтоимостьОСПрошлыхМесяцев КАК Стоимость1,
		     	  |	РасчетДолейБазыНалогаНаПрибыль.СтоимостьОССледующегоМесяца КАК Стоимость2
		     	  |ИЗ
		     	  |	РегистрСведений.РасчетДолейБазыНалогаНаПрибыль КАК РасчетДолейБазыНалогаНаПрибыль
		     	  |ГДЕ
		     	  |	РасчетДолейБазыНалогаНаПрибыль.ПериодРасчета МЕЖДУ &ДатаНач И &ДатаКон
		     	  |	И РасчетДолейБазыНалогаНаПрибыль.Организация = &Организация
		     	  |
		     	  |УПОРЯДОЧИТЬ ПО
		     	  |	РегистрацияВИФНС";
		
		Возврат Текст;
		
	КонецФункции
	
	// Выполняет запрос и формирует табличный документ-результат отчета
	// в соответствии с настройками, заданными значениями реквизитов отчета.
	//
	// Параметры:
	//	ДокументРезультат - табличный документ, формируемый отчетом
	//	ПоказыватьЗаголовок - признак видимости строк с заголовком отчета
	//	ВысотаЗаголовка - параметр, через который возвращается высота заголовка в строках 
	//
	Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок = Ложь, НачалоПодписи, ПоказыватьПодписи) Экспорт
		
		ДатаНач = НачалоМесяца(ПериодРегистрации);
		ДатаКон  = КонецМесяца(ПериодРегистрации);
		Если ДатаНач > ДатаКон И ДатаКон <> '00010101000000' Тогда
			Предупреждение("Дата начала периода не может быть больше даты окончания периода");
			Возврат;
		КонецЕсли;
		
		НачалоПериода = НачалоДня(ДатаНач);
		КонецПериода  = КонецДня(ДатаКон);
		
		ДокументРезультат.Очистить();
		
		Макет      = ПолучитьМакет("Отчет");
		МакетОбщий = ПолучитьОбщийМакет("СправкаРасчет");
		
		ЗаголовокОтчета = МакетОбщий.ПолучитьОбласть("Заголовок");
		ШапкаОтчета     = Макет.ПолучитьОбласть("Шапка");
		
		// Когда нужен только заголовок:
		Если ТолькоЗаголовок Тогда
			Возврат;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ВысотаЗаголовка) Тогда
			ДокументРезультат.Область("R1:R" + ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ДатаНач",     НачалоДня(ДатаНач));
		Запрос.УстановитьПараметр("ДатаКон",     КонецДня(ДатаКон));
		Запрос.УстановитьПараметр("Организация", Организация);
		
		Запрос.Текст = СформироватьТекстЗапроса();
		
		Результат = Запрос.Выполнить().Выгрузить();
		
		ОбластьШапка            = Макет.ПолучитьОбласть("Шапка");
		ОбластьСтрока           = Макет.ПолучитьОбласть("Строка");
		ОбластьИтого            = Макет.ПолучитьОбласть("Итого");
		ОбластьОкончаниеТаблицы = Макет.ПолучитьОбласть("ОкончаниеТаблицы");
		
		ОбластьПодвал             = МакетОбщий.ПолучитьОбласть("Подвал");
		
		Всего = 0;
		КоэффициентМесяца = Месяц(ПериодРегистрации) + 1;
			
			ЗаголовокОтчета.Параметры.Период              = "" + ПредставлениеПериода(НачалоГода(ПериодРегистрации), КонецМесяца(ПериодРегистрации), "ФП = Истина");
			СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация);
			НазваниеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм");
			ЗаголовокОтчета.Параметры.НазваниеОрганизации = НазваниеОрганизации;
			ЗаголовокОтчета.Параметры.ДатаСоставления     = КонецМесяца(ПериодРегистрации);
			ЗаголовокОтчета.Параметры.НазваниеОтчета      = "Распределение прибыли по бюджетам субъектов РФ";
			ДокументРезультат.Вывести(ЗаголовокОтчета);
			
			ШапкаОтчета.Параметры.Формула      = "гр.5 / " + КоэффициентМесяца;
			ДокументРезультат.Вывести(ШапкаОтчета);
			ВысотаЗаголовка = ДокументРезультат.ВысотаТаблицы;
			
			
			Для Каждого Выборка Из Результат Цикл
				
				ОбластьСтрока.Параметры.ОбособленноеПодразделение = ?(ЗначениеЗаполнено(Выборка.РегистрацияВИФНС), Выборка.РегистрацияВИФНС.НаименованиеИФНС, Организация.РегистрацияВИФНС.НаименованиеИФНС);
				ОбластьСтрока.Параметры.РасходыПоОплатеТруда = Выборка.РасходыПоОплатеТруда;
				ОбластьСтрока.Параметры.СтоимостьАмортизируемогоИмущества = Выборка.СтоимостьАмортизируемогоИмущества;
				ОбластьСтрока.Параметры.СтоимостьАмортизируемогоИмущества1 = Выборка.Стоимость1;
				ОбластьСтрока.Параметры.СтоимостьАмортизируемогоИмущества2 = Выборка.Стоимость2;
				ОбластьСтрока.Параметры.СтоимостьАмортизируемогоИмущества3 = Выборка.Стоимость1 + Выборка.Стоимость2;
				ОбластьСтрока.Параметры.ДоляНалоговойБазы = Выборка.ДоляНалоговойБазы;
				ДокументРезультат.Вывести(ОбластьСтрока);
				
			КонецЦикла; 
			
			ОбластьИтого.Параметры.РасходыПоОплатеТруда              = Результат.Итог("РасходыПоОплатеТруда");
			ОбластьИтого.Параметры.СтоимостьАмортизируемогоИмущества = Результат.Итог("СтоимостьАмортизируемогоИмущества");
			ОбластьИтого.Параметры.ДоляНалоговойБазы = Результат.Итог("ДоляНалоговойБазы");
			ДокументРезультат.Вывести(ОбластьИтого);
			
			ДокументРезультат.Вывести(ОбластьОкончаниеТаблицы);
			
			ДокументРезультат.Вывести(ОбластьПодвал);
			
			ВысотаПодписи = ДокументРезультат.Области.Подвал.Низ - ДокументРезультат.Области.Подвал.Верх;
			
			ДокументРезультат.Области.Подвал.Видимость = ПоказыватьПодписи;
			
		

		// Первую колонку не печатаем
		ДокументРезультат.ОбластьПечати = ДокументРезультат.Область(1,2,ДокументРезультат.ВысотаТаблицы,ДокументРезультат.ШиринаТаблицы);
		
		// Присвоим имя для сохранения параметров печати табличного документа
		ДокументРезультат.ИмяПараметровПечати = "Распределения прибыли между обособленными подразделениями";
		
		УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(ДокументРезультат, ЗаголовокОтчета, Строка(глЗначениеПеременной("глТекущийПользователь")));
		
	КонецПроцедуры // СформироватьОтчет
	
	////////////////////////////////////////////////////////////////////////////////
	// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
	// 
	
	НП = Новый НастройкаПериода;
	
#КонецЕсли
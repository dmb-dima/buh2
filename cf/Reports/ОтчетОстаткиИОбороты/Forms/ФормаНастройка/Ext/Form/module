////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Заполняет диалог по значениям реквизитов отчета
//
// Параметры:
//	Нет.
//
Процедура ЗаполнитьДиалогПоОбъекту()

	// Здесь должно быть расположено заполнение реквизитов формы
	// по реквизитам отчета, если они непосредственно не связаны
	// с реквизитами отчета (если таковые имеются)
	Если мВыбиратьИмяРегистра = Ложь Тогда
		ЭлементыФормы.ПанельРазделУчета.Свертка = РежимСверткиЭлементаУправления.Верх;
		
	Иначе
		ЭлементыФормы.ПанельРазделУчета.Свертка = РежимСверткиЭлементаУправления.Нет;
		
	КонецЕсли; 
	
КонецПроцедуры // ЗаполнитьДиалогПоОбъекту()

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "Перед открытием" формы отчета.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

	Заголовок = мНазваниеОтчета;

	ЗаполнитьДиалогПоОбъекту();

КонецПроцедуры // ПередОткрытием()


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ДИАЛОГА

// Процедура - обработчик изменения раздела учета.
//
Процедура ИмяРегистраПриИзменении(Элемент)

	Состояние("Заполнение по умолчанию");
	ЗаполнитьНачальныеНастройки();
	ЗаполнитьДиалогПоОбъекту();
	Оповестить("ИзмененоИмяРегистра",,ЭтаФорма);
	
	Заголовок = мНазваниеОтчета;
	
КонецПроцедуры // ПолеВыбораИмяРегистраПриИзменении()

// Процедура - обработчик нажатия кнопки настройки периода.
//
Процедура КнопкаНастройкаПериодаНажатие(Элемент)
	
	Если НП.Редактировать() Тогда
		
		ДатаНач = НП.ПолучитьДатуНачала();
		ДатаКон = НП.ПолучитьДатуОкончания();
		
	КонецЕсли;

КонецПроцедуры // КнопкаНастройкаПериодаНажатие()

// Процедура - обработчик нажатия кнопки ОК.
//
Процедура ОсновныеДействияФормыОК(Кнопка)
	
	ЕстьОшибки = Ложь;
	
	Для Каждого СтрокаОтбора Из ПостроительОтчета.Отбор Цикл
		
		Если НЕ ЗначениеЗаполнено(СтрокаОтбора.ПутьКДанным) Тогда
			
			Предупреждение("В отборе не должно быть пустых полей!", 30);
			ЕстьОшибки = Истина;
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если Показатели.Количество() > 0 Тогда
		
		ЕстьПоказатели = Ложь;
		
		Для Каждого Показатель Из Показатели Цикл
			
			Если Показатель.Использование Тогда
				
				ЕстьПоказатели = Истина;
				Прервать;
				
			КонецЕсли;
			
		КонецЦикла;
		
		Если НЕ ЕстьПоказатели Тогда
			
			Предупреждение("Не выбраны показатели!", 30);
			ЕстьОшибки = Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЕстьОшибки Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Закрыть(Истина);
	
КонецПроцедуры // ОсновныеДействияФормыОК()

// Процедура - обработчик нажатия кнопки "Установить все" командной панели списка показателей
//
Процедура КоманднаяПанельСписокПоказателейУстановитьВсе(Кнопка)
	
	Для каждого Строка Из  Показатели Цикл
		Строка.Использование = Истина;
	КонецЦикла;
	
КонецПроцедуры

// Процедура - обработчик нажатия кнопки "Снять все" командной панели списка показателей
//
Процедура КоманднаяПанельСписокПоказателейСнятьВсе(Кнопка)
	
	Для каждого Строка Из  Показатели Цикл
		Строка.Использование = Ложь;
	КонецЦикла;
	
КонецПроцедуры

// Процедура - обработчик перед удалением строки отбора
//
Процедура ОтборПередУдалением(Элемент, Отказ)
	
	Если Не ПустаяСтрока(Элемент.ТекущаяСтрока.Имя) Тогда
		Отказ = Истина;
	КонецЕсли; 
	
КонецПроцедуры // ОтборПередУдалением()

// Процедура - обработчик изменения даты начала периода
//
Процедура ДатаНачПриИзменении(Элемент)
	
	НП.УстановитьПериод(ДатаНач, КонецДня(ДатаКон), Истина);
	
КонецПроцедуры

// Процедура - обработчик изменения даты конца периода
//
Процедура ДатаКонПриИзменении(Элемент)
	
	НП.УстановитьПериод(ДатаНач, КонецДня(ДатаКон), Истина);
	
КонецПроцедуры

// Список доступных регистров для универсального отчета
СписокРегистров = УправлениеОтчетами.ПолучитьСписокРегистровОстатков();
ЭлементыФормы.ИмяРегистра.СписокВыбора = СписокРегистров;

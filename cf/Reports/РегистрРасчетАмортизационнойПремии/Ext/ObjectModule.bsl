#Если Клиент Тогда
	
Перем НП Экспорт;
Перем ИтогСумма;

// Возвращает полное наименование элемента справочника, если у этого вида 
// справочников есть реквизит НаименованиеПолное.
// 
// Параметры:      
//    Элемент - элемент справочника, для которого нужно вернуть полное наименование
//
// Возвращаемое значение: 
//  Строка с полным наименованием.
//
Функция ПолноеНаименование(Элемент) Экспорт
 
	Если НЕ ЗначениеЗаполнено(Элемент) Тогда
		Возврат "";
 
	ИначеЕсли Элемент.Метаданные().Реквизиты.Найти("НаименованиеПолное") = Неопределено Тогда
		Возврат Элемент.Наименование;;

	ИначеЕсли НЕ ЗначениеЗаполнено(Элемент.НаименованиеПолное) Тогда
		Возврат Элемент.Наименование;

	Иначе
		Возврат Элемент.НаименованиеПолное;
	КонецЕсли;
 
КонецФункции

Процедура ВывестиСтроку(Опер, ДокументРезультат, Макет)
	
	Если Опер.Сумма = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Опер.ДокументОснование) Тогда
		Возврат;
	КонецЕсли;
	
	Строка1 = Макет.ПолучитьОбласть("Строка|Общая1");
	Строка2 = Макет.ПолучитьОбласть("Строка|Объект");
	Строка3 = Макет.ПолучитьОбласть("Строка|Общая2");
	
	Строка1.Параметры.ДатаОперации             = Формат(Опер.Период, "ДФ=dd.MM.yyyy");
	Строка2.Параметры.НаименованиеОбъекта      = ПолноеНаименование(Опер.ОсновноеСредство);
	Строка3.Параметры.ДатаКапВложений          = Формат(Опер.ДатаКапВложений, "ДФ=dd.MM.yyyy");
	Строка3.Параметры.ДокументОснование        = Опер.ДокументОснование;
	Строка3.Параметры.СуммаКапитальныхВложений = Опер.СуммаКапитальныхВложений;
	Строка3.Параметры.Процент                  = Опер.Процент;
	Строка3.Параметры.Сумма                    = Опер.Сумма;
	
	ДокументРезультат.Вывести(Строка1);
	Если Не ГруппироватьПоОбъектам Тогда
		ДокументРезультат.Присоединить(Строка2);
	КонецЕсли;
	ДокументРезультат.Присоединить(Строка3);
	
	ИтогСумма = ИтогСумма + Опер.Сумма;
	
КонецПроцедуры

// Выполняет запрос и формирует табличный документ-результат отчета
// в соответствии с настройками, заданными значениями реквизитов отчета.
//
// Параметры:
//	ДокументРезультат - табличный документ, формируемый отчетом
//	ПоказыватьЗаголовок - признак видимости строк с заголовком отчета
//	ВысотаЗаголовка - параметр, через который возвращается высота заголовка в строках 
//
Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок = Ложь) Экспорт

	ДокументРезультат.Очистить();

	Макет = ПолучитьМакет("Отчет");

	Если ГруппироватьПоОбъектам Тогда
		Заголовок1 = Макет.ПолучитьОбласть("Заголовок|Общая1");
		Заголовок2 = Макет.ПолучитьОбласть("Заголовок|Общая2");
		
	Иначе
		Заголовок1 = Макет.ПолучитьОбласть("Заголовок");
	КонецЕсли;
	
	Заголовок1.Параметры.НачалоПериода       = Формат(ДатаНач, "ДФ=dd.MM.yyyy");
	Заголовок1.Параметры.КонецПериода        = Формат(ДатаКон, "ДФ=dd.MM.yyyy");
	СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация);
	НазваниеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм");
	Заголовок1.Параметры.НазваниеОрганизации = НазваниеОрганизации;
	Заголовок1.Параметры.ИННОрганизации      = "" + Организация.ИНН + "/" + Организация.КПП;
	Заголовок1.Параметры.НазваниеАмортизационнойГруппы = ?(НЕ ЗначениеЗаполнено(АмортизационнаяГруппа), "по всем", АмортизационнаяГруппа);
	
	Если ГруппироватьПоОбъектам Тогда
		ДокументРезультат.Вывести(Заголовок1);
		ДокументРезультат.Присоединить(Заголовок2);
		
	Иначе
		ДокументРезультат.Вывести(Заголовок1);
	КонецЕсли;

	// Параметр для показа заголовка
	ВысотаЗаголовка = ДокументРезультат.ВысотаТаблицы;

	// Когда нужен только заголовок:
	Если ТолькоЗаголовок Тогда
		Возврат;
	КонецЕсли;

	// Проверим заполнение обязательных реквизитов
	Если НалоговыйУчет.ПроверитьЗаполнениеОбязательныхРеквизитов(ДатаНач,ДатаКон,Организация) Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВысотаЗаголовка) Тогда
		ДокументРезультат.Область("R1:R" + ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;
	КонецЕсли;
	
	// Шапка
	Если ГруппироватьПоОбъектам Тогда

		Шапка1 = Макет.ПолучитьОбласть("Шапка|Общая1");
		Шапка2 = Макет.ПолучитьОбласть("Шапка|Общая2");
		Шапка2.Параметры.НК2 = 2;
		Шапка2.Параметры.НК3 = 3;
		Шапка2.Параметры.НК4 = 4;
		Шапка2.Параметры.НК5 = 5;
		Шапка2.Параметры.НК6 = 6;

		ДокументРезультат.Вывести(Шапка1);
		ДокументРезультат.Присоединить(Шапка2);

	Иначе
		Шапка = Макет.ПолучитьОбласть("Шапка");
		Шапка.Параметры.НК2 = 3;
		Шапка.Параметры.НК3 = 4;
		Шапка.Параметры.НК4 = 5;
		Шапка.Параметры.НК5 = 6;
		Шапка.Параметры.НК6 = 7;
		ДокументРезультат.Вывести(Шапка);
	КонецЕсли;

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	НалоговыйОбороты.Период КАК Период,
	|	НалоговыйОбороты.Субконто1 КАК ОсновноеСредство,
	|	НалоговыйОбороты.Субконто2.Дата КАК ДатаКапВложений,
	|	ВЫБОР
	|		КОГДА НалоговыйОбороты.Субконто2 ССЫЛКА Документ.ПринятиеКУчетуОС
	|			ТОГДА ПринятиеКУчету.Процент
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЕСТЬNULL(Модернизация.СуммаКапВложений, 0) = 0
	|					ТОГДА 0
	|				ИНАЧЕ НалоговыйОбороты.СуммаНУОборотКт * 100 / Модернизация.СуммаКапВложений
	|			КОНЕЦ
	|	КОНЕЦ КАК Процент,
	|	ВЫБОР
	|		КОГДА НалоговыйОбороты.Субконто2 ССЫЛКА Документ.ПринятиеКУчетуОС
	|			ТОГДА ВЫБОР
	|					КОГДА (НЕ ПринятиеКУчету.СтоимостьНУ = 0)
	|						ТОГДА ПринятиеКУчету.СтоимостьНУ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ЕСТЬNULL(ПринятиеКУчету.Процент, 0) = 0
	|								ТОГДА 0
	|							ИНАЧЕ НалоговыйОбороты.СуммаНУОборотКт * 100 / ПринятиеКУчету.Процент
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ Модернизация.СуммаКапВложений
	|	КОНЕЦ КАК СуммаКапитальныхВложений,
	|	НалоговыйОбороты.Субконто2 КАК ДокументОснование,
	|	НалоговыйОбороты.СуммаНУОборотКт КАК Сумма
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНач, &ДатаКон, Месяц, Счет = &Счет, , Организация = &Организация, , ) КАК НалоговыйОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			МодернизацияОСОС.ОсновноеСредство КАК ОсновноеСредство,
	|			МодернизацияОСОС.СуммаМодернизацииНУ КАК СуммаКапВложений,
	|			МодернизацияОС.Ссылка КАК ДокументМодернизации
	|		ИЗ
	|			Документ.МодернизацияОС.ОС КАК МодернизацияОСОС
	|				ЛЕВОЕ СОЕДИНЕНИЕ Документ.МодернизацияОС КАК МодернизацияОС
	|				ПО МодернизацияОСОС.Ссылка = МодернизацияОС.Ссылка
	|		ГДЕ
	|			МодернизацияОС.Организация = &Организация) КАК Модернизация
	|		ПО НалоговыйОбороты.Субконто1 = Модернизация.ОсновноеСредство
	|			И НалоговыйОбороты.Субконто2 = Модернизация.ДокументМодернизации
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ПринятиеКУчетуОСОсновныеСредства.ОсновноеСредство КАК ОсновноеСредство,
	|			ПринятиеКУчетуОС.ПроцентКапитальныхВложенийВключаемыхВРасходыНУ КАК Процент,
	|			ПринятиеКУчетуОС.Ссылка КАК ДокументПринятия,
	|			ПринятиеКУчетуОС.СтоимостьНУ КАК СтоимостьНУ
	|		ИЗ
	|			Документ.ПринятиеКУчетуОС.ОсновныеСредства КАК ПринятиеКУчетуОСОсновныеСредства
	|				ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПринятиеКУчетуОС КАК ПринятиеКУчетуОС
	|				ПО ПринятиеКУчетуОСОсновныеСредства.Ссылка = ПринятиеКУчетуОС.Ссылка
	|		ГДЕ
	|			ПринятиеКУчетуОС.Организация = &Организация) КАК ПринятиеКУчету
	|		ПО НалоговыйОбороты.Субконто2 = ПринятиеКУчету.ДокументПринятия
	|			И НалоговыйОбороты.Субконто1 = ПринятиеКУчету.ОсновноеСредство
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	ОсновноеСредство,
	|	ДатаКапВложений";

	
			
		Если ГруппироватьПоОбъектам Тогда
		ТекстЗапроса = 		ТекстЗапроса + "
		|ИТОГИ СУММА(Сумма) ПО
		|	ОсновноеСредство";
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",     Организация);
	Запрос.УстановитьПараметр("ДатаНач",         ?(НЕ ЗначениеЗаполнено(ДатаНач),ДатаНач,НачалоДня(ДатаНач)));
	Запрос.УстановитьПараметр("ДатаКон",         ?(НЕ ЗначениеЗаполнено(ДатаКон),ДатаКон,КонецДня(ДатаКон)));
	Запрос.УстановитьПараметр("Счет",ПланыСчетов.Хозрасчетный.РасходыНаКапитальныеВложения);
	Запрос.Текст = ТекстЗапроса;
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Организация", Организация);
	
	ИтогСумма = 0;
	
	Если ГруппироватьПоОбъектам Тогда
		Опер = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
	Иначе
		Опер = Запрос.Выполнить().Выбрать();
	КонецЕсли;

	
	Пока Опер.Следующий() Цикл
		Если (Опер.ОсновноеСредство.АмортизационнаяГруппа <> АмортизационнаяГруппа) и (не АмортизационнаяГруппа.Пустая()) Тогда
			Продолжить;
		КонецЕсли;
		Если ГруппироватьПоОбъектам Тогда

			Группировка1 = Макет.ПолучитьОбласть("Группировка|Общая1");
			Группировка3 = Макет.ПолучитьОбласть("Группировка|Общая2");

			Группировка1.Параметры.ЗначениеГруппировки = ПолноеНаименование(Опер.ОсновноеСредство);

			НетКапВложений = Истина;
			Итого = 0;
			ОперПоОбъекту = Опер.Выбрать();
			Пока ОперПоОбъекту.Следующий() Цикл
				НетКапВложений = НетКапВложений И (ОперПоОбъекту.СуммаКапитальныхВложений = NULL); 
				Итого = Итого + ?(ОперПоОбъекту.СуммаКапитальныхВложений = NULL, 0, ОперПоОбъекту.Сумма);
			КонецЦикла;
			
			Если НетКапВложений Тогда
				Продолжить;
			КонецЕсли;
			
			Группировка3.Параметры.ИтогСуммаПоГруппировке = Итого;
			ДокументРезультат.Вывести(Группировка1);
			ДокументРезультат.Присоединить(Группировка3);

			ОперПоОбъекту = Опер.Выбрать();
			Пока ОперПоОбъекту.Следующий() Цикл
				ВывестиСтроку(ОперПоОбъекту, ДокументРезультат, Макет);
			КонецЦикла;

		Иначе
			ВывестиСтроку(Опер, ДокументРезультат, Макет);
		КонецЕсли;
	КонецЦикла;

	// Подвал
	Если ГруппироватьПоОбъектам Тогда
		Подвал1 = Макет.ПолучитьОбласть("Подвал2");
		Подвал1.Параметры.Сумма     = ИтогСумма;
		ДокументРезультат.Вывести(Подвал1);

	Иначе
		Подвал = Макет.ПолучитьОбласть("Подвал1");
		Подвал.Параметры.Сумма     = ИтогСумма;
		ДокументРезультат.Вывести(Подвал);
	КонецЕсли;

	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	СтруктураЛиц = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Организация, ДатаКон);
	ОбластьПодвал.Параметры.ОтветственныйЗаРегистры = ОбщегоНазначения.ФамилияИнициалыФизЛица(СтруктураЛиц.ОтветственныйЗаРегистры);
	ДокументРезультат.Вывести(ОбластьПодвал);
	ДокументРезультат.ТекущаяОбласть = ДокументРезультат.Область(1, 1, 1, 1);
	
		// Первую колонку не печатаем
		ДокументРезультат.ОбластьПечати = ДокументРезультат.Область(1,2,ДокументРезультат.ВысотаТаблицы,ДокументРезультат.ШиринаТаблицы);
		
		// Присвоим имя для сохранения параметров печати табличного документа
		ДокументРезультат.ИмяПараметровПечати = "Регистр-расчет амортизационной премии";
		
		УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(ДокументРезультат, "Регистр-расчет амортизационной премии", Строка(глЗначениеПеременной("глТекущийПользователь")));

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
// 

НП = Новый НастройкаПериода;

#КонецЕсли
#Если Клиент Тогда
	
	Перем НП Экспорт;
	Перем ОбластьОкончаниеТаблицы;
	Перем ПоддержкаПБУ18;
	Перем ЭтоУПП;
	Перем ТаблицаОрганизаций Экспорт;
	
	Функция СформироватьТекстЗапроса(ВидЗапроса, ВидУчета)
		
		Если Не Найти(ВидЗапроса, "ОсновнаяДеятельность") = 0 Тогда	
			
			Текст	= "ВЫБРАТЬ
			     	  |	ВложенныйЗапрос.Показатель,
			     	  |	СУММА(ВложенныйЗапрос.ДоходГод) КАК ДоходГод,
			     	  |	СУММА(ВложенныйЗапрос.ДоходМесяц) КАК ДоходМесяц,
			     	  |	СУММА(ВложенныйЗапрос.РасходГод) КАК РасходГод,
			     	  |	СУММА(ВложенныйЗапрос.РасходМесяц) КАК РасходМесяц
			     	  |ИЗ
			     	  |	(ВЫБРАТЬ
			     	  |		ДоходыГод.Субконто1 КАК Показатель,
			     	  |		ДоходыГод.СуммаОборотКт - ДоходыГод.СуммаОборотДт КАК ДоходГод,
			     	  |		0 КАК ДоходМесяц,
			     	  |		0 КАК РасходГод,
			     	  |		0 КАК РасходМесяц
			     	  |	ИЗ
			     	  |		РегистрБухгалтерии.Хозрасчетный.Обороты(
			     	  |				&ДатаНачГода,
			     	  |				&ДатаКон,
			     	  |				Месяц,
			     	  |				Счет В ИЕРАРХИИ (&СчетДоходов),
			     	  |				,
			     	  |				Организация В ИЕРАРХИИ (&Организация),
			     	  |				(НЕ КорСчет = &Счет09)
			     	  |					И (НЕ КорСчет = &СчетПустой),
			     	  |				) КАК ДоходыГод
			     	  |	
			     	  |	ОБЪЕДИНИТЬ ВСЕ
			     	  |	
			     	  |	ВЫБРАТЬ
			     	  |		ДоходыМесяц.Субконто1,
			     	  |		0,
			     	  |		ДоходыМесяц.СуммаОборотКт - ДоходыМесяц.СуммаОборотДт,
			     	  |		0,
			     	  |		0
			     	  |	ИЗ
			     	  |		РегистрБухгалтерии.Хозрасчетный.Обороты(
			     	  |				&ДатаНач,
			     	  |				&ДатаКон,
			     	  |				,
			     	  |				Счет В ИЕРАРХИИ (&СчетДоходов),
			     	  |				,
			     	  |				Организация В ИЕРАРХИИ (&Организация),
			     	  |				(НЕ КорСчет = &Счет09)
			     	  |					И (НЕ КорСчет = &СчетПустой),
			     	  |				) КАК ДоходыМесяц
			     	  |	
			     	  |	ОБЪЕДИНИТЬ ВСЕ
			     	  |	
			     	  |	ВЫБРАТЬ
			     	  |		ЕСТЬNULL(РасходыГод.Субконто1, РасходыГод.Счет),
			     	  |		ВЫБОР
			     	  |			КОГДА РасходыГод.КорСчет В ИЕРАРХИИ (&Счет68)
			     	  |				ТОГДА -РасходыГод.СуммаОборот
			     	  |			ИНАЧЕ 0
			     	  |		КОНЕЦ,
			     	  |		0,
			     	  |		РасходыГод.СуммаОборотДт - РасходыГод.СуммаОборотКт - ВЫБОР
			     	  |			КОГДА РасходыГод.КорСчет В ИЕРАРХИИ (&Счет68)
			     	  |				ТОГДА РасходыГод.СуммаОборот
			     	  |			ИНАЧЕ 0
			     	  |		КОНЕЦ,
			     	  |		0
			     	  |	ИЗ
			     	  |		РегистрБухгалтерии.Хозрасчетный.Обороты(
			     	  |				&ДатаНачГода,
			     	  |				&ДатаКон,
			     	  |				Месяц,
			     	  |				Счет В ИЕРАРХИИ (&СчетРасходов),
			     	  |				,
			     	  |				Организация В ИЕРАРХИИ (&Организация),
			     	  |				(НЕ КорСчет = &Счет09)
			     	  |					И (НЕ КорСчет = &СчетПустой),
			     	  |				) КАК РасходыГод
			     	  |	
			     	  |	ОБЪЕДИНИТЬ ВСЕ
			     	  |	
			     	  |	ВЫБРАТЬ
			     	  |		ЕСТЬNULL(РасходыМесяц.Субконто1, РасходыМесяц.Счет),
			     	  |		0,
			     	  |		ВЫБОР
			     	  |			КОГДА РасходыМесяц.КорСчет В ИЕРАРХИИ (&Счет68)
			     	  |				ТОГДА -РасходыМесяц.СуммаОборот
			     	  |			ИНАЧЕ 0
			     	  |		КОНЕЦ,
			     	  |		0,
			     	  |		РасходыМесяц.СуммаОборотДт - РасходыМесяц.СуммаОборотКт - ВЫБОР
			     	  |			КОГДА РасходыМесяц.КорСчет В ИЕРАРХИИ (&Счет68)
			     	  |				ТОГДА РасходыМесяц.СуммаОборот
			     	  |			ИНАЧЕ 0
			     	  |		КОНЕЦ
			     	  |	ИЗ
			     	  |		РегистрБухгалтерии.Хозрасчетный.Обороты(
			     	  |				&ДатаНач,
			     	  |				&ДатаКон,
			     	  |				,
			     	  |				Счет В ИЕРАРХИИ (&СчетРасходов),
			     	  |				,
			     	  |				Организация В ИЕРАРХИИ (&Организация),
			     	  |				(НЕ КорСчет = &Счет09)
			     	  |					И (НЕ КорСчет = &СчетПустой),
			     	  |				) КАК РасходыМесяц) КАК ВложенныйЗапрос
			     	  |
			     	  |СГРУППИРОВАТЬ ПО
			     	  |	ВложенныйЗапрос.Показатель
			     	  |ИТОГИ ПО
			     	  |	ОБЩИЕ";
			
			Если Не ВидУчета = "БУ" Тогда
				Текст = СтрЗаменить(Текст, "Организация В ИЕРАРХИИ (&Организация), , )", "Организация В ИЕРАРХИИ (&Организация), , )");
				Текст = СтрЗаменить(Текст, "Организация В ИЕРАРХИИ (&Организация))", "Организация В ИЕРАРХИИ (&Организация))");
				Текст = СтрЗаменить(Текст, "Организация В ИЕРАРХИИ (&Организация),", "Организация В ИЕРАРХИИ (&Организация),");
				Текст = СтрЗаменить(Текст, "СуммаОборотКт", "Сумма" +ВидУчета+ "ОборотКт");
				Текст = СтрЗаменить(Текст, "СуммаОборотДт", "Сумма" +ВидУчета+ "ОборотДт");
				Текст = СтрЗаменить(Текст, "РасходыМесяц.СуммаОборот", "РасходыМесяц.Сумма" +ВидУчета+ "Оборот");
				Текст = СтрЗаменить(Текст, "РасходыГод.СуммаОборот", "РасходыГод.Сумма" +ВидУчета+ "Оборот");
			КонецЕсли;
			
			Если Не ВидУчета = "БУ" И ВидЗапроса = "ОсновнаяДеятельность" Тогда
				Текст = СтрЗаменить(Текст, "Субконто1", "Счет");
				Текст = СтрЗаменить(Текст, "СубконтоДт1", "СчетДт");
			КонецЕсли;
			
			
			Если ВидЗапроса = "НеОсновнаяДеятельность" И Не ЭтоУПП Тогда
				Текст = СтрЗаменить(Текст, "Организация В ИЕРАРХИИ (&Организация),", "Субконто1.ВидДеятельностиДляНалоговогоУчетаЗатрат = &ННП И Организация В ИЕРАРХИИ (&Организация),");
				Текст = СтрЗаменить(Текст, "Организация В ИЕРАРХИИ (&Организация))", "СубконтоДт1.ВидДеятельностиДляНалоговогоУчетаЗатрат = &ННП И Организация В ИЕРАРХИИ (&Организация))");
				Текст = СтрЗаменить(Текст, "(&СчетДоходов), , Организация В ИЕРАРХИИ (&Организация)", "(&СчетДоходов), , Организация В ИЕРАРХИИ (&Организация) И Субконто1.ВидДеятельностиДляНалоговогоУчетаЗатрат = &ННП");
			КонецЕсли;
			
			Возврат Текст;
			
		КонецЕсли;
		
		
		Если ВидЗапроса = "НалогНаПрибыль" Тогда	
			
			Текст	= "ВЫБРАТЬ
			|	НалогГод.КорСчет КАК КорСчет,
			|	ЕСТЬNULL(-НалогГод.СуммаОборот, 0) КАК НалогГод,
			|	ЕСТЬNULL(-НалогМесяц.Сумма, 0) КАК НалогМесяц,
			|	ЕСТЬNULL(-НалогГод.СуммаОборот, 0) + ЕСТЬNULL(НалогМесяц.Сумма, 0) КАК Налог,
			|	ВЫБОР
			|		КОГДА НалогГод.КорСчет В ИЕРАРХИИ (&СчетНалога)
			|			ТОГДА 1
			|		ИНАЧЕ ВЫБОР
			|				КОГДА НалогГод.КорСчет В ИЕРАРХИИ (&СчетПР)
			|					ТОГДА 2
			|				ИНАЧЕ 3
			|			КОНЕЦ
			|	КОНЕЦ КАК Порядок
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНачГода, &ДатаКон, Месяц, Счет В ИЕРАРХИИ (&Счет), , Организация В ИЕРАРХИИ (&Организация) И Субконто1 = &Налоги, (НЕ КорСчет В ИЕРАРХИИ (&Счет)), ) КАК НалогГод
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			НалогМесяц.КорСчет КАК КорСчет,
			|			Сумма(НалогМесяц.СуммаОборот) КАК Сумма
			|		ИЗ
			|			РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНач, &ДатаКон, Месяц, Счет В ИЕРАРХИИ (&Счет), , Организация В ИЕРАРХИИ (&Организация) И Субконто1 = &Налоги, (НЕ КорСчет В ИЕРАРХИИ (&Счет)), ) КАК НалогМесяц
			| СГРУППИРОВАТЬ ПО
			|  НалогМесяц.КорСчет) КАК НалогМесяц
			|		ПО НалогГод.КорСчет = НалогМесяц.КорСчет
			|
			|УПОРЯДОЧИТЬ ПО
			|	Порядок
			|ИТОГИ
			|ПО
			|	ОБЩИЕ,
			|	КорСчет";
			
			
			Если ВариантОтчета = 1 Тогда
				Текст = СтрЗаменить(Текст, "НЕ КорСчет В ИЕРАРХИИ (&Счет)", "КорСчет В ИЕРАРХИИ (&СчетНалога)");
			Иначе 
				Текст = СтрЗаменить(Текст, "НЕ КорСчет В ИЕРАРХИИ (&Счет)", "НЕ КорСчет В ИЕРАРХИИ (&Счет) И НЕ КорСчет В ИЕРАРХИИ (&СчетаИсключения)");
			КонецЕсли;
			Если ПоддержкаПБУ18 Тогда
				Текст = СтрЗаменить(Текст, " И Субконто1 = &Налоги", "");
			КонецЕсли;
			Возврат Текст;
		КонецЕсли;
		
		Если ВидЗапроса = "УбыткиПрошлыхЛет" Тогда	
			
			Текст	= "ВЫБРАТЬ
			|	ВложенныйЗапрос.Показатель,
			|	СУММА(ВложенныйЗапрос.ДоходГод) КАК ДоходГод,
			|	СУММА(ВложенныйЗапрос.РасходГод) КАК РасходГод,
			|	СУММА(ВложенныйЗапрос.ДоходМесяц) КАК ДоходМесяц,
			|	СУММА(ВложенныйЗапрос.РасходМесяц) КАК РасходМесяц
			|ИЗ
			|	(ВЫБРАТЬ
			|		УбытокГод.Счет КАК СчетУбытка,
			|		УбытокГод.Субконто1 КАК Показатель,
			|		ЕСТЬNULL(УбытокГод.СуммаОборотДт, 0) КАК ДоходГод,
			|		ЕСТЬNULL(УбытокГод.СуммаОборотКт, 0) КАК РасходГод,
			|		0 КАК ДоходМесяц,
			|		0 КАК РасходМесяц
			|	ИЗ
			|		РегистрБухгалтерии.Хозрасчетный.Обороты(
			|				&ДатаНачГода,
			|				&ДатаКон,
			|				Период,
			|				Счет В ИЕРАРХИИ (&Счет97),
			|				,
			|				Организация В ИЕРАРХИИ (&Организация)
			|					И Субконто1.ВидРБП = &ВидРБП,
			|				,
			|				) КАК УбытокГод
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		УбытокМесяц.Счет,
			|		УбытокМесяц.Субконто1,
			|		0,
			|		0,
			|		ЕСТЬNULL(УбытокМесяц.СуммаОборотДт, 0),
			|		ЕСТЬNULL(УбытокМесяц.СуммаОборотКт, 0)
			|	ИЗ
			|		РегистрБухгалтерии.Хозрасчетный.Обороты(
			|				&ДатаНач,
			|				&ДатаКон,
			|				Месяц,
			|				Счет В ИЕРАРХИИ (&Счет97),
			|				,
			|				Организация В ИЕРАРХИИ (&Организация)
			|					И Субконто1.ВидРБП = &ВидРБП,
			|				,
			|				) КАК УбытокМесяц) КАК ВложенныйЗапрос
			|
			|СГРУППИРОВАТЬ ПО
			|	ВложенныйЗапрос.Показатель
			|ИТОГИ ПО
			|	ОБЩИЕ";
			
			
			Текст = СтрЗаменить(Текст, "СуммаОборотДт", "Сумма" +ВидУчета+ "ОборотДт");
			Текст = СтрЗаменить(Текст, "СуммаОборотКт", "Сумма" +ВидУчета+ "ОборотКт");
			
			Возврат Текст;
		КонецЕсли;
		
		Если ВидЗапроса = "Распределяемые расходы" Тогда	
			
			Текст	= "ВЫБРАТЬ
			|	ВложенныйЗапрос.Показатель,
			|	СУММА(ВложенныйЗапрос.ДоходГод) КАК ДоходГод,
			|	СУММА(ВложенныйЗапрос.ДоходМесяц) КАК ДоходМесяц,
			|	СУММА(ВложенныйЗапрос.РасходГод) КАК РасходГод,
			|	СУММА(ВложенныйЗапрос.РасходМесяц) КАК РасходМесяц
			|ИЗ
			|	(ВЫБРАТЬ
			|		ДоходыГод.Субконто1 КАК Показатель,
			|		ЕСТЬNULL(-ДоходыГод.СуммаОборотДт, 0) КАК ДоходГод,
			|		0 КАК ДоходМесяц,
			|		0 КАК РасходГод,
			|		0 КАК РасходМесяц
			|	ИЗ
			|		РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНачГода, &ДатаКон, Период, Счет В ИЕРАРХИИ (&СчетРасходов), , Организация В ИЕРАРХИИ (&Организация), , ) КАК ДоходыГод
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		ДоходыМесяц.Субконто1,
			|		0,
			|		-ЕСТЬNULL(ДоходыМесяц.СуммаОборотДт, 0),
			|		0,
			|		0
			|	ИЗ
			|		РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНач, &ДатаКон, , Счет В ИЕРАРХИИ (&СчетРасходов), , Организация В ИЕРАРХИИ (&Организация), , ) КАК ДоходыМесяц
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		""ЕНВД"",
			|		0,
			|		0,
			|		ЕСТЬNULL(-РасходыГод.СуммаОборотДт, 0),
			|		0
			|	ИЗ
			|		РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНачГода, &ДатаКон, , Счет В ИЕРАРХИИ (&СчетДоходов), , Организация В ИЕРАРХИИ (&Организация), КорСчет В ИЕРАРХИИ (&Счет91_09), ) КАК РасходыГод
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		""ЕНВД"",
			|		0,
			|		0,
			|		ЕСТЬNULL(ДоходыГодЕНВД.СуммаОборотДт, 0),
			|		0
			|	ИЗ
			|		РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНачГода, &ДатаКон, Период, Счет В ИЕРАРХИИ (&СчетРасходовЕНВД), , Организация В ИЕРАРХИИ (&Организация), , ) КАК ДоходыГодЕНВД
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		""ЕНВД"",
			|		0,
			|		0,
			|		0,
			|		ЕСТЬNULL(-РасходыМесяц.СуммаОборотДт, 0)
			|	ИЗ
			|		РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНач, &ДатаКон, , Счет В ИЕРАРХИИ (&СчетДоходов), , Организация В ИЕРАРХИИ (&Организация), КорСчет В ИЕРАРХИИ (&Счет91_09), ) КАК РасходыМесяц
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		""ЕНВД"",
			|		0,
			|		0,
			|		0,
			|		ЕСТЬNULL(ДоходыМесяцЕНВД.СуммаОборотДт, 0)
			|	ИЗ
			|		РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНач, &ДатаКон, Период, Счет В ИЕРАРХИИ (&СчетРасходовЕНВД), , Организация В ИЕРАРХИИ (&Организация), , ) КАК ДоходыМесяцЕНВД) КАК ВложенныйЗапрос
			|
			|СГРУППИРОВАТЬ ПО
			|	ВложенныйЗапрос.Показатель
			|ИТОГИ ПО
			|	ОБЩИЕ";
			
			Если Не ЭтоУПП Тогда
				Текст = СтрЗаменить(Текст, "(&СчетРасходов), , Организация В ИЕРАРХИИ (&Организация)", "(&СчетРасходов), , Организация В ИЕРАРХИИ (&Организация) И Субконто1.ВидДеятельностиДляНалоговогоУчетаЗатрат = &ННП");
				Текст = СтрЗаменить(Текст, "(&СчетРасходовЕНВД), , Организация В ИЕРАРХИИ (&Организация)", "(&СчетРасходовЕНВД), , Организация В ИЕРАРХИИ (&Организация) И Субконто1.ВидДеятельностиДляНалоговогоУчетаЗатрат = &ЕНВД");
			КонецЕсли;
			
			Если Не ВидУчета = "БУ" Тогда
				Текст = СтрЗаменить(Текст, "Счет91_09", "СчетРасходов");
			КонецЕсли;
			
			Возврат Текст;
			
		КонецЕсли;	
		
		Если ВидЗапроса = "ПереплатаНалогНаПрибыль" Тогда
			Текст	= "ВЫБРАТЬ
			|ХозрасчетныйОбороты.СуммаОборотДт - ХозрасчетныйОбороты.СуммаОборотКт КАК ПереплатаМесяц,
			|	0 КАК ПереплатаГод
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.Обороты(
			|			&ДатаНач,
			|			&ДатаКон,
			|			Период,
			|			Счет В ИЕРАРХИИ (&Счет09),
			|			,
			|			Организация В ИЕРАРХИИ (&Организация)
			|				И Субконто1 = &ТекУбыток,
			|			(НЕ КорСчет В ИЕРАРХИИ (&Счет09)),
			|			) КАК ХозрасчетныйОбороты
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	0,
			|	 ХозрасчетныйОбороты.СуммаОборотДт - ХозрасчетныйОбороты.СуммаОборотКт
			|	
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.Обороты(
			|			&ДатаНачГода,
			|			&ДатаКон,
			|			Период,
			|			Счет В ИЕРАРХИИ (&Счет09),
			|			,
			|			Организация В ИЕРАРХИИ (&Организация)
			|				И Субконто1 = &ТекУбыток,
			|			(НЕ КорСчет В ИЕРАРХИИ (&Счет09)),
			|			) КАК ХозрасчетныйОбороты";
			
			Возврат Текст;
			
		КонецЕсли;
		
	КонецФункции
	
	// Выполняет запрос и формирует табличный документ-результат отчета
	// в соответствии с настройками, заданными значениями реквизитов отчета.
	//
	// Параметры:
	//	ДокументРезультат - табличный документ, формируемый отчетом
	//	ПоказыватьЗаголовок - признак видимости строк с заголовком отчета
	//	ВысотаЗаголовка - параметр, через который возвращается высота заголовка в строках 
	//
	Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок = Ложь, НачалоПодписи, ПоказыватьПодписи) Экспорт
		
		
		ДатаНач = НачалоМесяца(ПериодРегистрации);
		ДатаКон  = КонецМесяца(ПериодРегистрации);
		
		НачалоПериода = НачалоДня(ДатаНач);
		КонецПериода  = КонецДня(ДатаКон);
		
		ЭтоУПП = (РегламентированнаяОтчетность.ИДКонфигурации() = "УПП");
		
		СтавкаНалогаНаПрибыль = НалоговыйУчет.ПолучитьСтавкуНалогаНаПрибыль(Новый Структура("Организация, Дата", Организация, КонецДня(ДатаКон)));
		
		Если ЭтоУПП Тогда
			
			мУчетнаяПолитикаРегл = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитикиРегл(ПериодРегистрации, Организация, Истина);
			Если НЕ ЗначениеЗаполнено(мУчетнаяПолитикаРегл) Тогда
				Отказ = Истина;
				Возврат;
			КонецЕсли; 
			
			ПрименяетсяЕНВД = мУчетнаяПолитикаРегл.ОрганизацияЯвляетсяПлательщикомЕНВД;
			ПоддержкаПБУ18 =  мУчетнаяПолитикаРегл.ПоддержкаПБУ18;
			ПрименяетсяУСН =  мУчетнаяПолитикаРегл.УСН;
			Счет90_1       =  ПланыСчетов.Хозрасчетный.ВыручкаНеОблагаемаяЕНВД;
			Счет90_2       =  ПланыСчетов.Хозрасчетный.СебестоимостьПродажНеОблагаемаяЕНВД;
			Счет90_7       =  ПланыСчетов.Хозрасчетный.Продажи_РасходыНаПродажуНеОблагаемыеЕНВД;
			Счет90_8       =  ПланыСчетов.Хозрасчетный.Продажи_УправленческиеРасходыНеОблагаемыеЕНВД;
			СчетРасходовНеЕНВД = ПланыСчетов.Хозрасчетный.ПрочиеРасходыНеОблагаемыеЕНВД;
			СчетРасходовЕНВД = ПланыСчетов.Хозрасчетный.ПрочиеРасходыОблагаемыеЕНВД;
			Счет90_1ЕНВД  =  ПланыСчетов.Хозрасчетный.ВыручкаОблагаемаяЕНВД;
			Счет90_2ЕНВД  =  ПланыСчетов.Хозрасчетный.СебестоимостьПродажОблагаемаяЕНВД;
			Счет90_7ЕНВД  =  ПланыСчетов.Хозрасчетный.Продажи_РасходыНаПродажуОблагаемыеЕНВД;
			Счет90_8ЕНВД  =  ПланыСчетов.Хозрасчетный.Продажи_УправленческиеРасходыОблагаемыеЕНВД;
			Счет99_02 =      ПланыСчетов.Хозрасчетный.ПрибылиИУбыткиОблагаемыеЕНВД;
		Иначе
			мУчетнаяПолитикаРегл = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(ПериодРегистрации, Ложь, Организация, , Истина);
			Если НЕ ЗначениеЗаполнено(мУчетнаяПолитикаРегл) Тогда
				Отказ = Истина;
				Возврат;
			КонецЕсли; 
			
			ПрименяетсяЕНВД = мУчетнаяПолитикаРегл.ОрганизацияЯвляетсяПлательщикомЕНВД;
			ПоддержкаПБУ18 =  мУчетнаяПолитикаРегл.ПоддержкаПБУ18;
			ПрименяетсяУСН =  мУчетнаяПолитикаРегл.УСН;
			Счет90_1       =  ПланыСчетов.Хозрасчетный.ВыручкаНеЕНВД;
			Счет90_2       =  ПланыСчетов.Хозрасчетный.СебестоимостьПродажНеЕНВД;
			Счет90_7       =  ПланыСчетов.Хозрасчетный.Продажи_РасходыНаПродажуНеЕНВД;
			Счет90_8       =  ПланыСчетов.Хозрасчетный.Продажи_УправленческиеРасходыНеЕНВД;
			СчетРасходовНеЕНВД = ПланыСчетов.Хозрасчетный.ПрочиеРасходы;
			СчетРасходовЕНВД = ПланыСчетов.Хозрасчетный.ПрочиеРасходы;
			Счет90_1ЕНВД  =  ПланыСчетов.Хозрасчетный.ВыручкаЕНВД;
			Счет90_2ЕНВД  =  ПланыСчетов.Хозрасчетный.СебестоимостьПродажЕНВД;
			Счет90_7ЕНВД  =  ПланыСчетов.Хозрасчетный.Продажи_РасходыНаПродажуЕНВД;
			Счет90_8ЕНВД  =  ПланыСчетов.Хозрасчетный.Продажи_УправленческиеРасходыЕНВД;
			Счет99_02 =      ПланыСчетов.Хозрасчетный.ПрибылиИУбыткиЕНВД;
		КонецЕсли;
		
		СписокОП = Новый СписокЗначений;
		
		// {ОбособленныеПодразделения
		Если ВключатьОбособленныеПодразделения Тогда	
			СписокОП = ОбщегоНазначения.ПолучитьСписокОбособленныхПодразделенийОрганизации(Организация);
		КонецЕсли;
		// }ОбособленныеПодразделения
		
		СписокОП.Добавить(Организация.Ссылка, Организация.Наименование);
		
		ДокументРезультат.Очистить();
		
		Если Не ЗначениеЗаполнено(Организация) Тогда
			Возврат;
		КонецЕсли;
		
		Макет      = ПолучитьМакет("Отчет");
		МакетОбщий = ПолучитьОбщийМакет("СправкаРасчет");
		
		ЗаголовокОтчета = МакетОбщий.ПолучитьОбласть("Заголовок");
		ШапкаОтчета     = Макет.ПолучитьОбласть("Шапка");
		
		// Когда нужен только заголовок:
		Если ТолькоЗаголовок Тогда
			Возврат;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ВысотаЗаголовка) Тогда
			ДокументРезультат.Область("R1:R" + ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ДатаНач",     НачалоДня(ДатаНач));
		Запрос.УстановитьПараметр("ДатаНачГода", НачалоГода(ДатаНач));
		Запрос.УстановитьПараметр("ДатаКон",     КонецДня(ДатаКон));
		Запрос.УстановитьПараметр("Организация", СписокОП);
		
		// Основная деятельность, облагаемая налогом на прибыль
		Если ВариантОтчета = 2 Тогда
			СчетаДоходов = Новый Массив;
			СчетаДоходов.Добавить(ПланыСчетов.Хозрасчетный.ВыручкаНеЕНВД);
			СчетаДоходов.Добавить(ПланыСчетов.Хозрасчетный.Продажи_ЭкспортныеПошлины);
			СчетаРасходов = Новый Массив;
			СчетаРасходов.Добавить(ПланыСчетов.Хозрасчетный.СебестоимостьПродажНеЕНВД);
			СчетаРасходов.Добавить(ПланыСчетов.Хозрасчетный.Продажи_РасходыНаПродажуНеЕНВД);
			СчетаРасходов.Добавить(ПланыСчетов.Хозрасчетный.Продажи_УправленческиеРасходыНеЕНВД);
			ВидУчета = "НУ";
		Иначе
			СчетаДоходов = Новый Массив;
			СчетаДоходов.Добавить(ПланыСчетов.Хозрасчетный.ВыручкаНеЕНВД);
			СчетаДоходов.Добавить(ПланыСчетов.Хозрасчетный.Продажи_НДС);
			СчетаДоходов.Добавить(ПланыСчетов.Хозрасчетный.Продажи_Акцизы);
			СчетаДоходов.Добавить(ПланыСчетов.Хозрасчетный.Продажи_ЭкспортныеПошлины);
			СчетаРасходов = Новый Массив;
			СчетаРасходов.Добавить(Счет90_2);
			СчетаРасходов.Добавить(Счет90_7);
			СчетаРасходов.Добавить(Счет90_8);
			ВидУчета = "БУ";
		КонецЕсли;
		Счет09 =  ПланыСчетов.Хозрасчетный.ПрибыльУбытокОтПродаж;
		СчетПустой = ПланыСчетов.Хозрасчетный.ПустаяСсылка();
		
		Запрос.УстановитьПараметр("СчетДоходов", СчетаДоходов);
		Запрос.УстановитьПараметр("СчетРасходов",СчетаРасходов);
		Запрос.УстановитьПараметр("СчетПустой",СчетПустой);
		Запрос.УстановитьПараметр("Счет09"      ,Счет09);
		
		Массив = Новый Массив;
		Массив.Добавить(ПланыСчетов.Хозрасчетный.НДС);
		Массив.Добавить(ПланыСчетов.Хозрасчетный.Акцизы);
		Массив.Добавить(ПланыСчетов.Хозрасчетный.ДоходыРасходыНеУчитываемые);
		Массив.Добавить(ПланыСчетов.Хозрасчетный.НДСНачисленныйПоОтгрузке);
		Запрос.УстановитьПараметр("Счет68",      Массив);
		
		Запрос.Текст = СформироватьТекстЗапроса("ОсновнаяДеятельность", ВидУчета);
		ФинРезультатОсновнаяДеятельностьННП = Запрос.Выполнить();
		
		// Неосновная деятельность, облагаемая налогом на прибыль
		Если ВариантОтчета = 2 Тогда
			СчетаДоходов = Новый Массив;
			СчетаДоходов.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеДоходы);
			СчетаРасходов = Новый Массив;
			СчетаРасходов.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеРасходы);
			Счет09 =  ПланыСчетов.Хозрасчетный.СальдоПрочихДоходовИРасходов;
		Иначе
			СчетаДоходов = Новый Массив;
			СчетаДоходов.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеДоходы);
			СчетаРасходов = Новый Массив;
			СчетаРасходов.Добавить(СчетРасходовНеЕНВД);
			Счет09 =  ПланыСчетов.Хозрасчетный.СальдоПрочихДоходовИРасходов;
		КонецЕсли;
		Запрос.УстановитьПараметр("СчетДоходов", СчетаДоходов);
		Запрос.УстановитьПараметр("СчетРасходов",СчетаРасходов);
		Запрос.УстановитьПараметр("Счет09"      ,Счет09);
		Запрос.УстановитьПараметр("ННП",         Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ПредпринимательскаяДеятельностьНеОблагаемаяЕНВД);
		Запрос.Текст = СформироватьТекстЗапроса("НеОсновнаяДеятельность", ВидУчета);
		ФинРезультатНеОсновнаяДеятельностьННП = Запрос.Выполнить();
		
		// Неосновная деятельность, распределяемые расходы
		Если ВариантОтчета = 2 Тогда
			СчетаДоходов = ПланыСчетов.Хозрасчетный.ПрибылиИУбыткиЕНВД;
			СчетаРасходов = ?(ЭтоУПП, ПланыСчетов.Хозрасчетный.ВнереализационныеРасходыРаспределяемые,ПланыСчетов.Хозрасчетный.ПрочиеРасходы);
			СчетаРасходовЕНВД = ?(ЭтоУПП, ПланыСчетов.Хозрасчетный.ВнереализационныеРасходыНеУчитываемые,ПланыСчетов.Хозрасчетный.ПрочиеРасходы);
		Иначе
			СчетаДоходов = Счет99_02;
			СчетаРасходов = ?(ЭтоУПП, ПланыСчетов.Хозрасчетный.ПрочиеРасходыРаспределяемые,ПланыСчетов.Хозрасчетный.ПрочиеРасходы);
			СчетаРасходовЕНВД = ?(ЭтоУПП, ПланыСчетов.Хозрасчетный.ПрочиеРасходыОблагаемыеЕНВД,ПланыСчетов.Хозрасчетный.ПрочиеРасходы);
			Запрос.УстановитьПараметр("Счет91_09",ПланыСчетов.Хозрасчетный.СальдоПрочихДоходовИРасходов);
		КонецЕсли;
		Запрос.УстановитьПараметр("СчетДоходов", СчетаДоходов);
		Запрос.УстановитьПараметр("СчетРасходов",СчетаРасходов);
		Запрос.УстановитьПараметр("СчетРасходовЕНВД",СчетаРасходовЕНВД);
		Запрос.УстановитьПараметр("ННП",         Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ВидДеятельностиОпределяетсяПоДоходам);
		Запрос.УстановитьПараметр("ЕНВД",         Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ПредпринимательскаяДеятельностьОблагаемаяЕНВД);
		РасходыРаспределяемые = Запрос.Выполнить();
		
		// убытки прошлых лет
		УбыткиПрошлыхЛет = Неопределено;
		Если Не ВариантОтчета = 1 Тогда
			
			ЗапросУбытки = Новый Запрос;
			ЗапросУбытки.УстановитьПараметр("ДатаНач",     НачалоДня(ДатаНач));
			ЗапросУбытки.УстановитьПараметр("ДатаНачГода", НачалоГода(ДатаНач));
			ЗапросУбытки.УстановитьПараметр("ДатаКон",     КонецДня(ДатаКон));
			ЗапросУбытки.УстановитьПараметр("Организация", СписокОП);
			ЗапросУбытки.УстановитьПараметр("ВидУчета",    ?(ВариантОтчета = 2, "НУ", "ВР"));
			СчетаУбытков = Новый Массив;
			СчетаУбытков.Добавить(ПланыСчетов.Хозрасчетный.РасходыБудущихПериодов);
			ЗапросУбытки.УстановитьПараметр("Счет97", СчетаУбытков);
			ЗапросУбытки.УстановитьПараметр("ВидРБП", Перечисления.ВидыРБП.УбыткиПрошлыхЛет);
			ЗапросУбытки.Текст = СформироватьТекстЗапроса("УбыткиПрошлыхЛет", ?(ВариантОтчета = 2, "НУ", "ВР"));
			УбыткиПрошлыхЛет = ЗапросУбытки.Выполнить();
		КонецЕсли;
		// Разницы 
		Если ВариантОтчета = 3 Тогда
			СчетаДоходов = Новый Массив;
			СчетаДоходов.Добавить(ПланыСчетов.Хозрасчетный.Выручка);
			СчетаДоходов.Добавить(ПланыСчетов.Хозрасчетный.Продажи_ЭкспортныеПошлины);
			СчетаРасходов = Новый Массив;
			СчетаРасходов.Добавить(ПланыСчетов.Хозрасчетный.СебестоимостьПродаж);
			СчетаРасходов.Добавить(ПланыСчетов.Хозрасчетный.Продажи_РасходыНаПродажу);
			СчетаРасходов.Добавить(ПланыСчетов.Хозрасчетный.Продажи_УправленческиеРасходы);
			Запрос.УстановитьПараметр("СчетДоходов", СчетаДоходов);
			Запрос.УстановитьПараметр("СчетРасходов",СчетаРасходов);
			Запрос.УстановитьПараметр("Счет09"      ,ПланыСчетов.Хозрасчетный.ПрибыльУбытокОтПродаж);
			Запрос.УстановитьПараметр("ННП",         Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ПредпринимательскаяДеятельностьНеОблагаемаяЕНВД);
			ВидУчета ="ПР";
			Запрос.Текст = СформироватьТекстЗапроса("ОсновнаяДеятельность", "ПР");
			ФинРезультатОсновнаяДеятельностьННППР = Запрос.Выполнить();
			
			Запрос.Текст = СформироватьТекстЗапроса("ОсновнаяДеятельность", "ВР");
			ФинРезультатОсновнаяДеятельностьННПВР = Запрос.Выполнить();
			
			СчетаДоходов = Новый Массив;
			СчетаДоходов.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеДоходы);
			СчетаРасходов = Новый Массив;
			СчетаРасходов.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеРасходы);
			Запрос.УстановитьПараметр("СчетДоходов", СчетаДоходов);
			Запрос.УстановитьПараметр("СчетРасходов",СчетаРасходов);
			Запрос.УстановитьПараметр("Счет09"      ,ПланыСчетов.Хозрасчетный.ПрибыльУбытокОтПродаж);
			Запрос.Текст = СформироватьТекстЗапроса("НеОсновнаяДеятельность", "ПР");
			ФинРезультатНеОсновнаяДеятельностьННППР = Запрос.Выполнить();
			
			Запрос.Текст = СформироватьТекстЗапроса("НеОсновнаяДеятельность", "ВР");
			ФинРезультатНеОсновнаяДеятельностьННПВР = Запрос.Выполнить();
			
			СчетаДоходов = Новый Массив;
			СчетаДоходов.Добавить(ПланыСчетов.Хозрасчетный.ПрибылиИУбыткиЕНВД);
			СчетаРасходов = Новый Массив;
			СчетаРасходов.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеРасходы);
			Запрос.УстановитьПараметр("СчетДоходов", СчетаДоходов);
			Запрос.УстановитьПараметр("СчетРасходов",СчетаРасходов);
			Запрос.УстановитьПараметр("ННП",         Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ВидДеятельностиОпределяетсяПоДоходам);
			Запрос.Текст = СформироватьТекстЗапроса("Распределяемые расходы", "ПР");
			РасходыРаспределяемыеПр = Запрос.Выполнить();
			
			Запрос.Текст = СформироватьТекстЗапроса("Распределяемые расходы", "ПР");
			РасходыРаспределяемыеВр = Запрос.Выполнить();
		Иначе
			ФинРезультатОсновнаяДеятельностьННППР   = Неопределено;
			ФинРезультатОсновнаяДеятельностьННПВР   = Неопределено;
			ФинРезультатНеОсновнаяДеятельностьННППР = Неопределено;
			ФинРезультатНеОсновнаяДеятельностьННПВР = Неопределено;
		КонецЕсли;
		
		// ЕНВД
		Если ВариантОтчета = 2 Тогда
			ФинРезультатЕНВД = Неопределено;
		Иначе
			
			СчетаДоходов = Новый Массив;
			СчетаДоходов.Добавить(Счет90_1ЕНВД);
			СчетаРасходов = Новый Массив;
			СчетаРасходов.Добавить(Счет90_2ЕНВД);
			СчетаРасходов.Добавить(Счет90_7ЕНВД);
			СчетаРасходов.Добавить(Счет90_8ЕНВД);
			ВидУчета = "БУ";
			Запрос.УстановитьПараметр("СчетДоходов", СчетаДоходов);
			Запрос.УстановитьПараметр("СчетРасходов",СчетаРасходов);
			Запрос.УстановитьПараметр("Счет09"      ,ПланыСчетов.Хозрасчетный.ПрибыльУбытокОтПродаж);
			Запрос.Текст = СформироватьТекстЗапроса("ОсновнаяДеятельность", ВидУчета);
			ФинРезультатОсновнаяДеятельностьЕНВД = Запрос.Выполнить();
			
			СчетаДоходов = Новый Массив;
			СчетаДоходов.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеДоходы);
			СчетаРасходов = Новый Массив;
			СчетаРасходов.Добавить(СчетРасходовЕНВД);
			ВидУчета = "БУ";
			Запрос.УстановитьПараметр("СчетДоходов", СчетаДоходов);
			Запрос.УстановитьПараметр("СчетРасходов",СчетаРасходов);
			Запрос.УстановитьПараметр("Счет09"      ,ПланыСчетов.Хозрасчетный.ПрибыльУбытокОтПродаж);
			Запрос.Текст = СформироватьТекстЗапроса("НеОсновнаяДеятельность", ВидУчета);
			Запрос.УстановитьПараметр("ННП", Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ПредпринимательскаяДеятельностьОблагаемаяЕНВД);
			ФинРезультатНеОсновнаяДеятельностьЕНВД = Запрос.Выполнить();
		КонецЕсли;	
		
		
		// Расчет налога на прибыль
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ДатаНач",     НачалоДня(ДатаНач));
		Запрос.УстановитьПараметр("ДатаНачГода", НачалоГода(ДатаНач));
		Запрос.УстановитьПараметр("ДатаКон",     КонецДня(ДатаКон));
		Запрос.УстановитьПараметр("Организация", СписокОП);
		Запрос.УстановитьПараметр("Счет",        ?(ПоддержкаПБУ18,ПланыСчетов.Хозрасчетный.РасчетНалогаНаПрибыль,ПланыСчетов.Хозрасчетный.РасчетыСБюджетом));
		Запрос.УстановитьПараметр("КорСчет",     ПланыСчетов.Хозрасчетный.ПрибылиИУбытки);
		Запрос.УстановитьПараметр("СчетПР",      ПланыСчетов.Хозрасчетный.ПостоянноеНалоговоеОбязательство);
		
		МассивИсключений = Новый Массив ;
		МассивИсключений.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСБюджетом);
		МассивИсключений.Добавить(ПланыСчетов.Хозрасчетный.Касса);
		МассивИсключений.Добавить(ПланыСчетов.Хозрасчетный.РасчетныеСчета);
		Запрос.УстановитьПараметр("СчетаИсключения",МассивИсключений);
		
		Массив = Новый Массив ;
		Массив.Добавить(ПланыСчетов.Хозрасчетный.ПрибылиИУбыткиБезНалогаНаПрибыль);
		Массив.Добавить(ПланыСчетов.Хозрасчетный.УсловныйРасходПоНалогуНаПрибыль);
		Массив.Добавить(ПланыСчетов.Хозрасчетный.УсловныйДоходПоНалогуНаПрибыль);
		Запрос.УстановитьПараметр("СчетНалога",  Массив);
		Запрос.УстановитьПараметр("Налоги",  Перечисления.ВидыПлатежейВГосБюджет.Налог);
		Запрос.Текст = СформироватьТекстЗапроса("НалогНаПрибыль", ВидУчета);
		НалогНаПрибыль = Запрос.Выполнить();
		
		Если НЕ ВариантОтчета = 1 Тогда
			Запрос.УстановитьПараметр("ТекУбыток", Перечисления.ВидыАктивовИОбязательств.УбытокТекущегоПериода);
			Запрос.УстановитьПараметр("Счет09",  ПланыСчетов.Хозрасчетный.ОтложенныеНалоговыеАктивы);
			Запрос.Текст = СформироватьТекстЗапроса("ПереплатаНалогНаПрибыль", ВидУчета);
			ПереплатаНалогНаПрибыль = Запрос.Выполнить().Выгрузить();
			ПереплатаМесяц = ПереплатаНалогНаПрибыль.Итог("ПереплатаМесяц");
			ПереплатаГод = ПереплатаНалогНаПрибыль.Итог("ПереплатаГод");
		Иначе
			ПереплатаМесяц = 0;
			ПереплатаГод = 0;
		КонецЕсли;
		
		ОбластьШапка            = Макет.ПолучитьОбласть("Шапка");
		ОбластьСтрока           = Макет.ПолучитьОбласть("Строка");
		ОбластьСтрокаРазниц     = Макет.ПолучитьОбласть("СтрокаРазниц");
		ОбластьИтого            = Макет.ПолучитьОбласть("СтрокаИтого");
		ОбластьШапкаНалог       = Макет.ПолучитьОбласть("ШапкаНалог");
		ОбластьСтрокаНалог      = Макет.ПолучитьОбласть("СтрокаНалог");
		ОбластьСтрокаНалогЖирная= Макет.ПолучитьОбласть("СтрокаНалогЖирная");
		ОбластьСтрокаПБУ18      = Макет.ПолучитьОбласть("СтрокаПБУ18");
		ОбластьОкончаниеТаблицы = Макет.ПолучитьОбласть("ОкончаниеТаблицы");
		
		ОбластьПодвал             = МакетОбщий.ПолучитьОбласть("Подвал");
		
		Всего = 0;
		
		ЗаголовокОтчета.Параметры.Период              = "" + ПредставлениеПериода(НачалоМесяца(ДатаНач), КонецМесяца(ДатаКон), "ФП = Истина");
		СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация);
		НазваниеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм");
		ЗаголовокОтчета.Параметры.НазваниеОрганизации = НазваниеОрганизации;
		ЗаголовокОтчета.Параметры.ДатаСоставления     = КонецМесяца(ДатаКон);
		ЗаголовокОтчета.Параметры.НазваниеОтчета      = ?(ВариантОтчета = 2, "Налоговая база и расчет налога на прибыль "," Финансовые результаты" + ?(ПрименяетсяУСН, "", " и расчеты по налогу на прибыль") + " (бухгалтерский учет)");
		ДокументРезультат.Вывести(ЗаголовокОтчета);
		
		
		
		ВыборкаИтог = ФинРезультатОсновнаяДеятельностьННП.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ОБЩИЕ");
		ЕстьННП  = НЕ (ВыборкаИтог.Количество() = 0);
		ВыборкаИтог = ФинРезультатНеОсновнаяДеятельностьННП.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ОБЩИЕ");
		ЕстьННП2  = НЕ (ВыборкаИтог.Количество() = 0);
		
		Если Не ВариантОтчета = 2 Тогда
			ВыборкаИтог = ФинРезультатОсновнаяДеятельностьЕНВД.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ОБЩИЕ");
			ЕстьЕНВД  = НЕ (ВыборкаИтог.Количество() = 0);
			ВыборкаИтог = ФинРезультатНеОсновнаяДеятельностьЕНВД.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ОБЩИЕ");
			ЕстьЕНВД2  = НЕ (ВыборкаИтог.Количество() = 0);
		Иначе
			ЕстьЕНВД = Ложь;
			ЕстьЕНВД2 = Ложь;
			
		КонецЕсли;
		
		ЗаголовокНачало      = ?(ВариантОтчета = 2, "Налоговая база"," Финансовые результаты");
		ЗаголовокНачалоПР    = "Постоянные разницы в оценке " + ?(ВариантОтчета = 2, "доходов и расходов"," финансовых результатов");
		ЗаголовокНачалоВР    = "Временные разницы в оценке " + ?(ВариантОтчета = 2, "доходов и расходов"," финансовых результатов");
		Заголовок90ННП  =" по видам деятельности, связанным с производством и реализацией"   + ?(ВариантОтчета = 2, "", СтрЗаменить(НалоговыйУчет.ПолучитьТекстВидаДеятельности(ПрименяетсяЕНВД, ЕстьЕНВД, Ложь), "по видам деятельности", ""));
		Заголовок91ННП  =" по видам деятельности, не связанным с производством и реализацией"+ ?(ВариантОтчета = 2, "", СтрЗаменить(НалоговыйУчет.ПолучитьТекстВидаДеятельности(ПрименяетсяЕНВД, ЕстьЕНВД2, Ложь), "по видам деятельности", ""));
		Заголовок90ЕНВД =" по видам деятельности, связанным с производством и реализацией"   + СтрЗаменить(НалоговыйУчет.ПолучитьТекстВидаДеятельности(ПрименяетсяЕНВД, ЕстьЕНВД, Истина), "по видам деятельности", "");
		Заголовок91ЕНВД =" по видам деятельности, не связанным с производством и реализацией"+ СтрЗаменить(НалоговыйУчет.ПолучитьТекстВидаДеятельности(ПрименяетсяЕНВД, ЕстьЕНВД2, Истина), "по видам деятельности", "");
		
		
		// Параметр для показа заголовка
		ВысотаЗаголовка = "";
		
		СтруктураИтогов     = Новый Структура("ДоходМесяц,РасходМесяц,ПрибыльМесяц,Доход,Расход,Прибыль,ДоходГод,РасходГод,ПрибыльГод",0,0,0,0,0,0,0,0,0);
		СтруктураИтоговЕНВД = Новый Структура("ДоходМесяц,РасходМесяц,ПрибыльМесяц,Доход,Расход,Прибыль,ДоходГод,РасходГод,ПрибыльГод",0,0,0,0,0,0,0,0,0);
		СоздатьТаблицу(ДокументРезультат,ШапкаОтчета,ОбластьСтрока,ОбластьИтого,ФинРезультатОсновнаяДеятельностьННП,  ЗаголовокНачало + Заголовок90ННП ,СтруктураИтогов, "Номенклатурные группы");
		СоздатьТаблицу(ДокументРезультат,ШапкаОтчета,ОбластьСтрока,ОбластьИтого,ФинРезультатНеОсновнаяДеятельностьННП,ЗаголовокНачало + Заголовок91ННП, СтруктураИтогов, "Прочие доходы и расходы");
		
		// Доходы и расходы по основной и неосновной деятельности
		Если ЕстьЕНВД Или ЕстьЕНВД2 Тогда
			СоздатьТаблицу(ДокументРезультат,ШапкаОтчета,ОбластьСтрока,ОбластьИтого,ФинРезультатОсновнаяДеятельностьЕНВД,  ЗаголовокНачало + Заголовок90ЕНВД,СтруктураИтоговЕНВД, "Номенклатурные группы");
			СоздатьТаблицу(ДокументРезультат,ШапкаОтчета,ОбластьСтрока,ОбластьИтого,ФинРезультатНеОсновнаяДеятельностьЕНВД, ЗаголовокНачало + Заголовок91ЕНВД,СтруктураИтоговЕНВД, "Прочие доходы и расходы");
		КонецЕсли;
		
		СоздатьТаблицу(ДокументРезультат,ШапкаОтчета,ОбластьСтрока,ОбластьИтого,РасходыРаспределяемые, "Распределяемые расходы",СтруктураИтогов, "Расходы (распределяются)", СтруктураИтоговЕНВД);
		
		Если Не УбыткиПрошлыхЛет = Неопределено И ВариантОтчета = 2 Тогда
			СоздатьТаблицу(ДокументРезультат,ШапкаОтчета,ОбластьСтрока,ОбластьИтого,УбыткиПрошлыхЛет, "Убытки прошлых лет" ,СтруктураИтогов, "Наименование убытка");
			
		КонецЕсли;	
		
		// Итоги по основной и неосновной деятельности
		Если ЕстьННП Или ЕстьННП2 Тогда
			ВывестиСтрокуЗаголовка(ДокументРезультат, ("Всего " + ?(ВариантОтчета = 2, "", НалоговыйУчет.ПолучитьТекстВидаДеятельности(ПрименяетсяЕНВД, ЕстьЕНВД Или ЕстьЕНВД2, Ложь))), ОбластьШапка);
			ВывестиСтроку(ДокументРезультат, "", ОбластьИтого, СтруктураИтогов);
			ДокументРезультат.Вывести(ОбластьОкончаниеТаблицы);
		КонецЕсли;
		
		
		// Разницы
		
		Если ВариантОтчета = 3 Тогда
			СтруктураИтогов = Новый Структура("ДоходМесяц,РасходМесяц,ПрибыльМесяц,Доход,Расход,Прибыль,ДоходГод,РасходГод,ПрибыльГод",0,0,0,0,0,0,0,0,0);
			ЕстьННП  = СоздатьТаблицу(ДокументРезультат,ШапкаОтчета,ОбластьСтрока,ОбластьИтого,ФинРезультатОсновнаяДеятельностьННППР, ЗаголовокНачалоПр + Заголовок90ННП,СтруктураИтогов, "Номенклатурные группы");
			
			ЕстьННП2 = СоздатьТаблицу(ДокументРезультат,ШапкаОтчета,ОбластьСтрока,ОбластьИтого,ФинРезультатНеОсновнаяДеятельностьННППР, ЗаголовокНачалоПр + Заголовок91ННП,СтруктураИтогов,"Прочие доходы и расходы");
			Если ЕстьННП Или ЕстьННП2 Тогда
				ВывестиСтрокуЗаголовка(ДокументРезультат, "Всего постоянных разниц " + ?(ВариантОтчета = 2, "", НалоговыйУчет.ПолучитьТекстВидаДеятельности(ПрименяетсяЕНВД, ЕстьЕНВД Или ЕстьЕНВД2, Ложь)), ОбластьШапка);
				ВывестиСтроку(ДокументРезультат, "", ОбластьИтого, СтруктураИтогов);
				ДокументРезультат.Вывести(ОбластьОкончаниеТаблицы);
			КонецЕсли;
			
			СтруктураИтогов = Новый Структура("ДоходМесяц,РасходМесяц,ПрибыльМесяц,Доход,Расход,Прибыль,ДоходГод,РасходГод,ПрибыльГод",0,0,0,0,0,0,0,0,0);
			ЕстьННП  = СоздатьТаблицу(ДокументРезультат,ШапкаОтчета,ОбластьСтрока,ОбластьИтого,ФинРезультатОсновнаяДеятельностьННПВР,  ЗаголовокНачалоВр + Заголовок90ННП,СтруктураИтогов,"Номенклатурные группы");
			
			ЕстьННП2 = СоздатьТаблицу(ДокументРезультат,ШапкаОтчета,ОбластьСтрока,ОбластьИтого,ФинРезультатНеОсновнаяДеятельностьННПВР,ЗаголовокНачалоВр + Заголовок91ННП,СтруктураИтогов,"Прочие доходы и расходы");
			
			СоздатьТаблицу(ДокументРезультат,ШапкаОтчета,ОбластьСтрока,ОбластьИтого,РасходыРаспределяемыеПР, "Постоянные разницы по распределяемые",СтруктураИтогов, "Расходы (распределяются)", СтруктураИтоговЕНВД);
			
			СоздатьТаблицу(ДокументРезультат,ШапкаОтчета,ОбластьСтрока,ОбластьИтого,РасходыРаспределяемыеВР, "Временные разницы по распределяемые",СтруктураИтогов, "Расходы (распределяются)", СтруктураИтоговЕНВД);
			
			Если Не УбыткиПрошлыхЛет = Неопределено И ВариантОтчета = 3 Тогда
				СоздатьТаблицу(ДокументРезультат,ШапкаОтчета,ОбластьСтрока,ОбластьИтого,УбыткиПрошлыхЛет, "Временные разницы по убыткам прошлых лет" ,СтруктураИтогов, "Наименование убытка");
				
			КонецЕсли;
			
			Если ЕстьННП Или ЕстьННП2 Тогда
				ВывестиСтрокуЗаголовка(ДокументРезультат, "Всего временных разниц " + ?(ВариантОтчета = 2, "", НалоговыйУчет.ПолучитьТекстВидаДеятельности(ПрименяетсяЕНВД, ЕстьЕНВД Или ЕстьЕНВД2, Ложь)), ОбластьШапка);
				ВывестиСтроку(ДокументРезультат, "", ОбластьИтого,СтруктураИтогов);
				ДокументРезультат.Вывести(ОбластьОкончаниеТаблицы);
			КонецЕсли;
			
		КонецЕсли;
		
		Если Не ВариантОтчета = 2 Тогда
			СтруктураИтогов = Новый Структура("ДоходМесяц,РасходМесяц,ПрибыльМесяц,Доход,Расход,Прибыль,ДоходГод,РасходГод,ПрибыльГод",0,0,0,0,0,0,0,0,0);
			
			Если ЕстьЕНВД Или ЕстьЕНВД2 Тогда
				ВывестиСтрокуЗаголовка(ДокументРезультат, ("Всего " + ?(ВариантОтчета = 2, "", НалоговыйУчет.ПолучитьТекстВидаДеятельности(ПрименяетсяЕНВД, ЕстьЕНВД Или ЕстьЕНВД2, Истина))), ОбластьШапка);
				ВывестиСтроку(ДокументРезультат, "", ОбластьИтого,СтруктураИтоговЕНВД);
				ДокументРезультат.Вывести(ОбластьОкончаниеТаблицы);
			КонецЕсли;
		КонецЕсли;
		
		// {ОбособленныеПодразделения
		Если ЗначениеЗаполнено(Организация.ГоловнаяОрганизация) И НЕ ВключатьОбособленныеПодразделения Тогда	
			ЗакончитьОтчет(ДокументРезультат,ОбластьПодвал,ЗаголовокОтчета,ПоказыватьПодписи);
			Возврат;
		КонецЕсли;
		
		Если ВариантОтчета = 2 И Константы.ПрименяютсяРазныеСтавкиНалогаНаПрибыль.Получить() Тогда
			ВыводитьРазделРегионов = Истина;
			РазделРасчетовПоБюджетам(ДокументРезультат, СтруктураИтогов.ПрибыльГод, СтруктураИтогов.ПрибыльМесяц, ВыводитьРазделРегионов);
			Если ВыводитьРазделРегионов Тогда
				ЗакончитьОтчет(ДокументРезультат,ОбластьПодвал,ЗаголовокОтчета,ПоказыватьПодписи);
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
		// }ОбособленныеПодразделения
		
		
		Если Не ПрименяетсяУСН И (ВариантОтчета = 2 Или (НЕ ВариантОтчета = 2 И ПоддержкаПБУ18)) Тогда	
			
			ОбластьШапкаНалог.Параметры.РасчетЗаМесяц = "Итог гр.4" + ?(ВариантОтчета = 2, ""," (Всего по видам деятельности с основной системой налогообложения)") + " * " + СтавкаНалогаНаПрибыль;
			ОбластьШапкаНалог.Параметры.Расчет        = "Итог гр.7" + ?(ВариантОтчета = 2, ""," (Всего по видам деятельности с основной системой налогообложения)") + " * " + СтавкаНалогаНаПрибыль;
			ОбластьШапкаНалог.Параметры.РасчетЗаГод   = "Итог гр.10" + ?(ВариантОтчета = 2, ""," (Всего по видам деятельности с основной системой налогообложения)") + " * " + СтавкаНалогаНаПрибыль;
			ОбластьШапкаНалог.Параметры.Заголовок     = ?(ВариантОтчета = 2, "Расчет налога на прибыль", "Расчеты по налогу на прибыль");
			ДокументРезультат.Вывести(ОбластьШапкаНалог);
			
			Если ВариантОтчета = 3 И ПоддержкаПБУ18 Тогда
				Результат = НалогНаПрибыль.Выгрузить();
				Результат.Свернуть("КорСчет,НалогМесяц","НалогГод");
				Для Каждого Выборка ИЗ Результат Цикл
					Если Выборка.КорСчет = Null Или Выборка.НалогГод = Null Или Выборка.НалогМесяц = Null Или (Выборка.НалогГод = 0 И Выборка.НалогМесяц = 0) Тогда
						Продолжить;
					КонецЕсли;
					
					ОбластьСтрокаПБУ18.Параметры.КорСчет =    Выборка.КорСчет;
					Если Лев(Выборка.КорСчет.Код,2) = "09" Тогда
						ОбластьСтрокаПБУ18.Параметры.Параметр =  "Отложенные налоговые активы кроме убытков текущего периода";
						ОбластьСтрокаПБУ18.Параметры.НалогМесяц = Выборка.НалогМесяц - ПереплатаМесяц;
						ОбластьСтрокаПБУ18.Параметры.НалогГод = Выборка.НалогГод - ПереплатаГод;
						ОбластьСтрокаПБУ18.Параметры.Налог = ОбластьСтрокаПБУ18.Параметры.НалогГод - ОбластьСтрокаПБУ18.Параметры.НалогМесяц;
						
					Иначе
						ОбластьСтрокаПБУ18.Параметры.Параметр =   Выборка.КорСчет.Наименование;
						ОбластьСтрокаПБУ18.Параметры.НалогМесяц = Выборка.НалогМесяц;
						ОбластьСтрокаПБУ18.Параметры.Налог = Выборка.НалогГод - Выборка.НалогМесяц;
						ОбластьСтрокаПБУ18.Параметры.НалогГод = Выборка.НалогГод;
					КонецЕсли;
					ДокументРезультат.Вывести(ОбластьСтрокаПБУ18);
				КонецЦикла;
			КонецЕсли;
			
			Выборка = НалогНаПрибыль.Выгрузить();
			Выборка.Свернуть("НалогМесяц","НалогГод");
			НалогГод = Выборка.Итог("НалогГод");
			НалогМесяц = Выборка.Итог("НалогМесяц");
			Налог = НалогГод - НАлогМесяц;
			
			НалогГод   = ?(НалогГод < 0.05 И НалогГод > - 0.05, 0, НалогГод);
			НалогМесяц = ?(НалогМесяц < 0.05 И НалогМесяц > - 0.05, 0, НалогМесяц);
			Налог      = ?(Налог < 0.05 И Налог > - 0.05, 0, Налог);
			КорСчет    = ?(ПоддержкаПБУ18, "99.02." + ?(НалогМесяц > 0, "1", "2"), "99.01.1");
			
			Если Не НалогГод = 0 Или Не НалогМесяц = 0 Тогда 
				
				Если ВариантОтчета = 1 Тогда
					
					ОбластьСтрокаНалог.Параметры.Параметр = "Условный " + ?(НалогМесяц > 0, "расход", "доход") + " по налогу на прибыль";
					ОбластьСтрокаНалог.Параметры.НалогМесяц = НалогМесяц;
					ОбластьСтрокаНалог.Параметры.Налог = Налог;
					ОбластьСтрокаНалог.Параметры.НалогГод = НалогГод;
					ОбластьСтрокаНалог.Параметры.КорСчет = КорСчет;
					ДокументРезультат.Вывести(ОбластьСтрокаНалог);
				ИначеЕсли ВариантОтчета = 2 Тогда
					ОбластьСтрокаНалог.Параметры.Параметр = "Налог на прибыль";
					ОбластьСтрокаНалог.Параметры.НалогМесяц = ?(НалогМесяц < ПереплатаМесяц, 0, НалогМесяц - ПереплатаМесяц);
					ОбластьСтрокаНалог.Параметры.Налог = ?(Налог < 0, 0, Налог);
					ОбластьСтрокаНалог.Параметры.КорСчет = КорСчет;
					ОбластьСтрокаНалог.Параметры.НалогГод = ?(НалогГод < ПереплатаГод, 0, НалогГод - ПереплатаГод);
					ДокументРезультат.Вывести(ОбластьСтрокаНалог);
				ИначеЕсли ВариантОтчета = 3 И (Не ПереплатаМесяц = 0 Или Не ПереплатаГод = 0) И НалогМесяц > ПереплатаМесяц Тогда
					ОбластьСтрокаНалогЖирная.Параметры.Параметр = "Налог на прибыль за текущий месяц";
					ОбластьСтрокаНалогЖирная.Параметры.НалогМесяц = НалогМесяц - ПереплатаМесяц;
					ОбластьСтрокаНалогЖирная.Параметры.Налог = "Х";
					ОбластьСтрокаНалогЖирная.Параметры.НалогГод = "Х";
					ДокументРезультат.Вывести(ОбластьСтрокаНалогЖирная);
				ИначеЕсли ВариантОтчета = 3 И (ПереплатаМесяц = 0 И ПереплатаГод = 0) Тогда
					ОбластьСтрокаНалог.Параметры.Параметр = "Налог на прибыль";
					ОбластьСтрокаНалог.Параметры.НалогМесяц = НалогМесяц;
					ОбластьСтрокаНалог.Параметры.Налог = Налог;
					ОбластьСтрокаНалог.Параметры.НалогГод = НалогГод;
					ОбластьСтрокаНалог.Параметры.КорСчет = "-";
					ДокументРезультат.Вывести(ОбластьСтрокаНалог);
				КонецЕсли;
				
			КонецЕсли;
			
			// Если ранее были признаны убытки и переплата налога в бюджет
			Если ВариантОтчета = 3 И (Не ПереплатаМесяц = 0 Или Не ПереплатаГод = 0) Тогда
				ОбластьСтрокаПБУ18.Параметры.Параметр = "Отложенные налоговые активы по убыткам текущего периода";
				ОбластьСтрокаПБУ18.Параметры.КорСчет = "09";
				ОбластьСтрокаПБУ18.Параметры.НалогМесяц = ПереплатаМесяц;
				ОбластьСтрокаПБУ18.Параметры.Налог = ПереплатаГод - ПереплатаМесяц;
				ОбластьСтрокаПБУ18.Параметры.НалогГод = ПереплатаГод;
				ДокументРезультат.Вывести(ОбластьСтрокаПБУ18);
				
				ОбластьСтрокаНалог.Параметры.Параметр = "Налог на прибыль";
				ОбластьСтрокаНалог.Параметры.НалогМесяц = ?(НалогМесяц < 0, 0, НалогМесяц);
				ОбластьСтрокаНалог.Параметры.Налог = ?(Налог < 0, 0, Налог);
				ОбластьСтрокаНалог.Параметры.НалогГод = ?(НалогГод < 0, 0, НалогГод);
				ОбластьСтрокаНалог.Параметры.КорСчет = "-";
				ДокументРезультат.Вывести(ОбластьСтрокаНалог);
			КонецЕсли;
			
			Если Не НалогГод = 0 Или Не НалогМесяц = 0 Или Не ПереплатаМесяц = 0 Или Не ПереплатаГод = 0 Тогда 
				ДокументРезультат.Вывести(ОбластьОкончаниеТаблицы);
			КонецЕсли;
		КонецЕсли;
		
		
		ЗакончитьОтчет(ДокументРезультат,ОбластьПодвал,ЗаголовокОтчета,ПоказыватьПодписи)
		
	КонецПроцедуры // СформироватьОтчет
	
	// {ОбособленныеПодразделения
	Процедура РазделРасчетовПоБюджетам(ДокументРезультат, ПрибыльГод, ПрибыльМесяц, ВыводитьРазделРегионов)
		
		Макет  = ПолучитьМакет("ОтчетРасчетыПоБюджетам");
		ОбластьШапка            = Макет.ПолучитьОбласть("Шапка");
		ОбластьСтрока           = Макет.ПолучитьОбласть("Строка");
		ОбластьСтрокаФБ         = Макет.ПолучитьОбласть("СтрокаФБ");
		ОбластьИтого            = Макет.ПолучитьОбласть("СтрокаИтого");
		ОбластьШапкаНалог       = Макет.ПолучитьОбласть("ШапкаНалог");
		ОбластьСтрокаНалог      = Макет.ПолучитьОбласть("СтрокаНалог");
		
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("ДатаНачМесяца",НачалоМесяца(ПериодРегистрации));
		Запрос.УстановитьПараметр("ДатаКонМесяца",КонецМесяца(ПериодРегистрации));
		Запрос.УстановитьПараметр("ДатаНачГода",НачалоГода(ПериодРегистрации));
		Запрос.УстановитьПараметр("Счет",ПланыСчетов.Хозрасчетный.РасчетыСБюджетом);
		Запрос.УстановитьПараметр("Субконто2",Перечисления.ВидыПлатежейВГосБюджет.Налог);
		Запрос.УстановитьПараметр("Субконто3",Перечисления.УровниБюджетов.ФедеральныйБюджет);
		
		Список = Новый СписокЗначений;
		Список.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РегистрацияВИФНС);
		Список.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет);
		Список.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.УровниБюджетов);
		Запрос.УстановитьПараметр("ВидСубконто",Список);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	NULL КАК СубконтоКт1,
		|	СУММА(ХозрасчетныйОборотыДтКт.СуммаОборот) КАК СуммаГод,
		|	0 КАК СуммаМесяц
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
		|			&ДатаНачГода,
		|			&ДатаКонМесяца,
		|			,
		|			,
		|			,
		|			СчетКт В ИЕРАРХИИ (&Счет),
		|			&ВидСубконто,
		|			Организация = &Организация
		|				И СубконтоКт2 = &Субконто2
		|				И СубконтоКт3 = &Субконто3) КАК ХозрасчетныйОборотыДтКт
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ХозрасчетныйОборотыДтКт.СубконтоКт1,
		|	0,
		|	СУММА(ХозрасчетныйОборотыДтКт.СуммаОборот)
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
		|			&ДатаНачМесяца,
		|			&ДатаКонМесяца,
		|			,
		|			,
		|			,
		|			СчетКт В ИЕРАРХИИ (&Счет),
		|			&ВидСубконто,
		|			Организация = &Организация
		|				И СубконтоКт2 = &Субконто2
		|				И СубконтоКт3 = &Субконто3) КАК ХозрасчетныйОборотыДтКт
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОборотыДтКт.СубконтоКт1";
		
		
		СуммыФБ = Запрос.Выполнить().Выгрузить();
		
		
		Запрос.УстановитьПараметр("Субконто3",Перечисления.УровниБюджетов.РегиональныйБюджет);
		
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(СтавкиНалогаНаПрибыльВБюджетСубъектовРФСрезПоследних.СтавкаСубъектРФ, 0) КАК Ставка,
		|	ЕСТЬNULL(РасчетДолейБазыНалогаНаПрибыль.ДоляНалоговойБазы, 0) КАК Доля,
		|	ВложенныйЗапрос.СубконтоКт1 КАК РегистрацияИФНС,
		|	ВложенныйЗапрос.СуммаГод КАК СуммаГод,
		|	ВложенныйЗапрос.СуммаМесяц
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВложенныйЗапрос.СубконтоКт1 КАК СубконтоКт1,
		|		СУММА(ВложенныйЗапрос.СуммаГод) КАК СуммаГод,
		|		ВложенныйЗапрос.СуммаМесяц КАК СуммаМесяц
		|	ИЗ
		|		(ВЫБРАТЬ
		|			ХозрасчетныйОборотыДтКт.СубконтоКт1 КАК СубконтоКт1,
		|			СУММА(ХозрасчетныйОборотыДтКт.СуммаОборот) КАК СуммаГод,
		|			0 КАК СуммаМесяц
		|		ИЗ
		|			РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
		|					&ДатаНачГода,
		|					&ДатаКонМесяца,
		|					,
		|					,
		|					,
		|					СчетКт В ИЕРАРХИИ (&Счет),
		|					&ВидСубконто,
		|					Организация = &Организация
		|						И СубконтоКт2 = &Субконто2
		|						И СубконтоКт3 = &Субконто3) КАК ХозрасчетныйОборотыДтКт
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ХозрасчетныйОборотыДтКт.СубконтоКт1
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			ХозрасчетныйОборотыДтКт.СубконтоКт1,
		|			СУММА(0),
		|			ХозрасчетныйОборотыДтКт.СуммаОборот
		|		ИЗ
		|			РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
		|					&ДатаНачМесяца,
		|					&ДатаКонМесяца,
		|					,
		|					,
		|					,
		|					СчетКт В ИЕРАРХИИ (&Счет),
		|					&ВидСубконто,
		|					Организация = &Организация
		|						И СубконтоКт2 = &Субконто2
		|						И СубконтоКт3 = &Субконто3) КАК ХозрасчетныйОборотыДтКт
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ХозрасчетныйОборотыДтКт.СубконтоКт1,
		|			ХозрасчетныйОборотыДтКт.СуммаОборот) КАК ВложенныйЗапрос
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ВложенныйЗапрос.СубконтоКт1,
		|		ВложенныйЗапрос.СуммаМесяц) КАК ВложенныйЗапрос
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасчетДолейБазыНалогаНаПрибыль КАК РасчетДолейБазыНалогаНаПрибыль
		|		ПО ВложенныйЗапрос.СубконтоКт1 = РасчетДолейБазыНалогаНаПрибыль.РегистрацияВИФНС
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНалогаНаПрибыльВБюджетСубъектовРФ.СрезПоследних(&ДатаКонМесяца, Организация = &Организация) КАК СтавкиНалогаНаПрибыльВБюджетСубъектовРФСрезПоследних
		|		ПО ВложенныйЗапрос.СубконтоКт1 = СтавкиНалогаНаПрибыльВБюджетСубъектовРФСрезПоследних.РегистрацияВИФНС
		|ГДЕ
		|	РасчетДолейБазыНалогаНаПрибыль.ПериодРасчета МЕЖДУ &ДатаНачМесяца И &ДатаКонМесяца
		|	И РасчетДолейБазыНалогаНаПрибыль.Организация = &Организация";
		
		
		Результат = Запрос.Выполнить();
		
		Если Результат.Пустой() Тогда
			ВыводитьРазделРегионов = Ложь;
			Возврат;
		КонецЕсли;
	
		ДокументРезультат.Вывести(ОбластьШапка);
		СтавкаФБ = 0; СтавкаРФ = 0; 
		СтавкаНалогаНаПрибыль = НалоговыйУчет.ПолучитьСтавкуНалогаНаПрибыль(Новый Структура("Организация, Дата", Организация, ПериодРегистрации),СтавкаФБ, СтавкаРФ) * 100;
		НалогГодФБ   = СуммыФБ.Итог("СуммаГод");
		НалогМесяцФБ = СуммыФБ.Итог("СуммаМесяц");
		
		ОбластьСтрока.Параметры.ПрибыльГод = ПрибыльГод;
		ОбластьСтрока.Параметры.СтавкаФБ = СтавкаФБ * 100;
		ОбластьСтрока.Параметры.НалогГод = НалогГодФБ;
		ОбластьСтрока.Параметры.НалогМесяц = НалогМесяцФБ;
		ОбластьСтрока.Параметры.Налог = НалогГодФБ -  НалогМесяцФБ;
		
		ДокументРезультат.Вывести(ОбластьСтрока);
		
		Результат = Результат.Выгрузить();
		Результат.Свернуть("РегистрацияИФНС,Ставка,Доля","СуммаМесяц,СуммаГод");
		
		Для Каждого Строка Из Результат Цикл
			НалогГод = Строка.СуммаГод;
			НалогМесяц = Строка.СуммаМесяц;
			Налог = НалогГод - НалогМесяц;
			
			ОбластьСтрокаФБ.Параметры.РегистрацияИФНС = Строка.РегистрацияИФНС;
			ОбластьСтрокаФБ.Параметры.Ставка = Строка.Ставка;
			ОбластьСтрокаФБ.Параметры.Доля = Строка.Доля;
			ОбластьСтрокаФБ.Параметры.НалогГод = НалогГод;
			ОбластьСтрокаФБ.Параметры.НалогМесяц = НалогМесяц;
			ОбластьСтрокаФБ.Параметры.Налог = Налог;
			ДокументРезультат.Вывести(ОбластьСтрокаФБ);
			
		КонецЦикла;
		ИтогНалогМесяц = Результат.Итог("СуммаМесяц")+ НалогМесяцФБ;
		
		ОбластьИтого.Параметры.НалогГод = Результат. Итог("СуммаГод") + НалогГодФБ;
		ОбластьИтого.Параметры.Налог = Результат. Итог("СуммаГод") - ИтогНалогМесяц + НалогГодФБ;
		ОбластьИтого.Параметры.НалогМесяц = ИтогНалогМесяц;
		ДокументРезультат.Вывести(ОбластьИтого);
		
		Если ПрибыльМесяц >0 Тогда
		ДокументРезультат.Вывести(ОбластьШапкаНалог);
		ОбластьСтрокаНалог.Параметры.НалогМесяц = ИтогНалогМесяц;
		ОбластьСтрокаНалог.Параметры.ПрибыльМесяц = ПрибыльМесяц;
		ОбластьСтрокаНалог.Параметры.Ставка = ?(ПрибыльМесяц = 0, 0, 100 * ИтогНалогМесяц / ПрибыльМесяц);
		ДокументРезультат.Вывести(ОбластьСтрокаНалог);
		КонецЕсли;
		
	КонецПроцедуры
	// }ОбособленныеПодразделения
	
	Процедура ЗакончитьОтчет(ДокументРезультат,ОбластьПодвал,ЗаголовокОтчета,ПоказыватьПодписи)
		
		ДокументРезультат.Вывести(ОбластьПодвал);
		
		ВысотаПодписи = ДокументРезультат.Области.Подвал.Низ - ДокументРезультат.Области.Подвал.Верх;
		
		ДокументРезультат.Области.Подвал.Видимость = ПоказыватьПодписи;
		
		
		// Первую колонку не печатаем
		ДокументРезультат.ОбластьПечати = ДокументРезультат.Область(1,2,ДокументРезультат.ВысотаТаблицы,ДокументРезультат.ШиринаТаблицы);
		
		// Присвоим имя для сохранения параметров печати табличного документа
		ДокументРезультат.ИмяПараметровПечати = "Расчет налога на прибыль";
		
		УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(ДокументРезультат, ЗаголовокОтчета, Строка(глЗначениеПеременной("глТекущийПользователь")));
		
		
	КонецПроцедуры // ЗакончитьОтчет
	
	Процедура  ВывестиСтроку(ДокументРезультат, Показатель, ОбластьСтрока, Выборка, СтруктураИтогов = Неопределено)
		
		ДоходМесяц   = ?(Выборка.ДоходМесяц = NULL, 0, Выборка.ДоходМесяц);
		РасходМесяц  = ?(Выборка.РасходМесяц = NULL, 0, Выборка.РасходМесяц);
		ДоходГод     = ?(Выборка.ДоходГод = NULL, 0, Выборка.ДоходГод);
		РасходГод    = ?(Выборка.РасходГод = NULL, 0, Выборка.РасходГод);
		ПрибыльМесяц = ДоходМесяц - РасходМесяц;
		Доход        = ДоходГод - ДоходМесяц;
		Расход       = РасходГод - РасходМесяц;
		Прибыль      = Доход - Расход;
		ПрибыльГод   = ДоходГод - РасходГод;
		
		Если ДоходМесяц = 0 И РасходМесяц = 0 И ДоходГод = 0 И РасходГод = 0 Тогда
			Возврат;
		КонецЕсли;
		
		ОбластьСтрока.Параметры.Показатель   = Показатель;
		ОбластьСтрока.Параметры.ДоходМесяц   = ДоходМесяц;
		ОбластьСтрока.Параметры.РасходМесяц  = РасходМесяц;
		ОбластьСтрока.Параметры.ПрибыльМесяц = ПрибыльМесяц;
		ОбластьСтрока.Параметры.Доход        = Доход;
		ОбластьСтрока.Параметры.Расход       = Расход;
		ОбластьСтрока.Параметры.Прибыль      = Прибыль;
		ОбластьСтрока.Параметры.ДоходГод     = ДоходГод;
		ОбластьСтрока.Параметры.РасходГод    = РасходГод;
		ОбластьСтрока.Параметры.ПрибыльГод   = ПрибыльГод;
		ДокументРезультат.Вывести(ОбластьСтрока);
		
		Если Не СтруктураИтогов = Неопределено Тогда
			СтруктураИтогов.ДоходМесяц   = СтруктураИтогов.ДоходМесяц + ДоходМесяц;
			СтруктураИтогов.РасходМесяц  = СтруктураИтогов.РасходМесяц + РасходМесяц;
			СтруктураИтогов.ПрибыльМесяц = СтруктураИтогов.ПрибыльМесяц + ПрибыльМесяц;
			СтруктураИтогов.Доход        = СтруктураИтогов.Доход + Доход;
			СтруктураИтогов.Расход       = СтруктураИтогов.Расход + Расход;
			СтруктураИтогов.Прибыль      = СтруктураИтогов.Прибыль + Прибыль;
			СтруктураИтогов.ДоходГод     = СтруктураИтогов.ДоходГод + ДоходГод;
			СтруктураИтогов.РасходГод    = СтруктураИтогов.РасходГод + РасходГод;
			СтруктураИтогов.ПрибыльГод   = СтруктураИтогов.ПрибыльГод + ПрибыльГод;
		КонецЕсли;
	КонецПроцедуры
	
	Процедура  ВывестиСтрокуЗаголовка(ДокументРезультат, Показатель, ОбластьСтрока)
		
		ОбластьСтрока.Параметры.Заголовок    = Показатель;
		ОбластьСтрока.Параметры.ЗаголовокДоходы = "Доходы";
		ОбластьСтрока.Параметры.ЗаголовокРасходы = "Расходы";
		ОбластьСтрока.Параметры.ЗаголовокПрибыль = ?(ВариантОтчета = 2, "Увели- чение(+) умень- шение(-) налоговой базы", "Прибыль(+) убыток(-)");
		ДокументРезультат.Вывести(ОбластьСтрока);
		
	КонецПроцедуры
	
	Функция СоздатьТаблицу(ДокументРезультат,ШапкаОтчета,ОбластьСтрока,ОбластьИтого,Результат,Заголовок,СтруктураИтогов, ЗаголовокШапки, СтруктураИтоговЕНВД = Неопределено)
		
		ВыборкаИтог = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ОБЩИЕ");
		Если ВыборкаИтог.Количество() = 0 Тогда
			Возврат Ложь;
		КонецЕсли;	
		ВыборкаИтог.Следующий();
		ДоходГод    = ВыборкаИтог.ДоходГод;
		ДоходМесяц  = ВыборкаИтог.ДоходМесяц;
		РасходГод   = ВыборкаИтог.РасходГод;
		РасходМесяц = ВыборкаИтог.РасходМесяц;
		
		Если (ДоходГод = 0   Или ДоходГод = Null)   И (РасходГод = 0 Или РасходГод = Null) 
			И (ДоходМесяц = 0 Или ДоходМесяц = Null) И (РасходМесяц = 0 Или РасходМесяц = Null) Тогда
			Возврат Ложь;
			
		КонецЕсли;
		
		ЭтоОсновнаяДеятельность = (СтрЧислоВхождений(Заголовок, "не связанным") = 0 И СтрЧислоВхождений(Заголовок, "Распределяемые расходы") = 0);
		ЭтоУбыткиПрошлыхЛет     = (СтрЧислоВхождений(Заголовок, "Убытки") > 0);
		ЭтоРаспределяемые       = (СтрЧислоВхождений(Заголовок, "Распределяемые расходы") > 0);
		
		ШапкаОтчета.Параметры.Заголовок = Заголовок;
		Если ЭтоУбыткиПрошлыхЛет Тогда // убытки прошлых лет
			ШапкаОтчета.Параметры.ЗаголовокДоходы = "Перенесено на будущее";
			ШапкаОтчета.Параметры.ЗаголовокРасходы = "Принято";
		ИначеЕсли ЭтоОсновнаяДеятельность Или (Не ЭтоОсновнаяДеятельность И ВариантОтчета = 2) Тогда  // 90 счет
			ШапкаОтчета.Параметры.ЗаголовокДоходы = "Доходы без НДС, акцизов и пошлин";
			ШапкаОтчета.Параметры.ЗаголовокРасходы = "Расходы без НДС, акцизов и пошлин";
			
		ИначеЕсли ЭтоРаспределяемые Тогда  // 91 распр
			ШапкаОтчета.Параметры.ЗаголовокДоходы = "Сумма";
			ШапкаОтчета.Параметры.ЗаголовокРасходы = "Отнесено к деятельности с особым порядком налогообложения";
		КонецЕсли;	
		ШапкаОтчета.Параметры.ЗаголовокПрибыль = ?(ВариантОтчета = 2, "Увели- чение(+) умень- шение(-) налоговой базы", "Прибыль(+) убыток(-)");
		ШапкаОтчета.Параметры.ЗаголовокШапки = ЗаголовокШапки;
		ДокументРезультат.Вывести(ШапкаОтчета);
		
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			Если  Выборка.Показатель = "ЕНВД" Или Выборка.Показатель = NULL Тогда
				Продолжить;
			КонецЕсли;
			
			ВывестиСтроку(ДокументРезультат, Выборка.Показатель.Наименование, ОбластьСтрока, Выборка);
			
		КонецЦикла;
		
		ВыборкаИтог = Новый Структура("ДоходГод,ДоходМесяц,РасходГод,РасходМесяц", ДоходГод,ДоходМесяц,РасходГод,РасходМесяц);
		
		ВывестиСтроку(ДокументРезультат, "Итого", ОбластьИтого, ВыборкаИтог,СтруктураИтогов);
		
		ДокументРезультат.Вывести(ОбластьОкончаниеТаблицы);
		
		
		Возврат Истина;
		
	КонецФункции
	
	
	
	////////////////////////////////////////////////////////////////////////////////
	// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
	// 
	
	НП = Новый НастройкаПериода;
	
#КонецЕсли
Перем ВидыУдостЛичности Экспорт;

Перем СтруктураРеквизитов;

Перем ВысотаПанелиПодразделение;
Перем ВысотаПанелиУдостоверение;
Перем ВысотаФормы;

Процедура КнопкаОКНажатие(Кнопка)
	
	Если ПрименитьИзменения() Тогда
		
		Модифицированность = Ложь;
		Закрыть(СтруктураРеквизитов);	
		
	КонецЕсли;
		
КонецПроцедуры

Процедура ОтвЛицоФинУрПасНаименованиеНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(ВидыУдостЛичности) = Тип("ТаблицаЗначений") Тогда
		
		 ИсходнаяСтрока = ВидыУдостЛичности.Найти(ОтвЛицоФинУрПасНаименование);
		 ТекстВыбора = "Выберите документ, удостоверяющий личность";
		 Если ИсходнаяСтрока = Неопределено Тогда
			 РезультатВыбора = ВидыУдостЛичности.ВыбратьСтроку(ТекстВыбора);
		 Иначе
			 РезультатВыбора = ВидыУдостЛичности.ВыбратьСтроку(ТекстВыбора, ИсходнаяСтрока);
		 КонецЕсли;
		 
		 Если РезультатВыбора <> Неопределено Тогда
			 
			ОтвЛицоФинУрПасВидДок = РезультатВыбора[0]; 
			ОтвЛицоФинУрПасНаименование = РезультатВыбора[1];
			 
		 КонецЕсли;
		 
	 КонецЕсли;	
	 
 КонецПроцедуры

Процедура ОтвЛицоФинУрПриИзменении(Элемент)
	
	УстановкаДляОРГ = Ложь;
	УстановкаДляПОД = Ложь;
	УстановкаДляИНД = Ложь;
	УстановкаДляФЛ  = Ложь;
	
	Если ОтвЛицоФинУр = "ОРГ" Тогда
	
		УстановкаДляОРГ = Истина;
		
	ИначеЕсли ОтвЛицоФинУр = "ПОД" Тогда
		
		УстановкаДляПОД = Истина;
		
	ИначеЕсли ОтвЛицоФинУр = "ИНД" Тогда
		
		УстановкаДляИНД = Истина;
		
	ИначеЕсли ОтвЛицоФинУр = "ФЛ_" Тогда
		
		УстановкаДляФЛ = Истина;
		
	Иначе
		
		ОтвЛицоФинУр = "ОРГ";
		УстановкаДляОРГ = Истина;
		
	КонецЕсли; 
	
	ОтвЛицоФинУрРФ_ИННПриИзменении(Неопределено);
	ОтвЛицоФинУрРФ_ОГРНПриИзменении(Неопределено);
	
	ЭлементыФормы.ОтвЛицоФинУрНаименование.КнопкаВыбора = НЕ УстановкаДляПОД;
 
	ЭлементыФормы.НадписьОтвЛицоФинУрРФ_ОГРН.Видимость = НЕ УстановкаДляФЛ;
	ЭлементыФормы.ОтвЛицоФинУрРФ_ОГРН.Видимость = НЕ УстановкаДляФЛ;
	ЭлементыФормы.НадписьОтвЛицоФинУрРФ_КПП.Видимость = УстановкаДляОРГ ИЛИ УстановкаДляПОД;
	ЭлементыФормы.ОтвЛицоФинУрРФ_КПП.Видимость = УстановкаДляОРГ ИЛИ УстановкаДляПОД;
	
	ЭлементыФормы.НадписьОтвЛицоФинУрПасВидДок.Видимость = УстановкаДляФЛ;
	ЭлементыФормы.ОтвЛицоФинУрПасВидДок.Видимость = УстановкаДляФЛ;
	ЭлементыФормы.ОтвЛицоФинУрПасНаименование.Видимость = УстановкаДляФЛ;
	ЭлементыФормы.НадписьОтвЛицоФинУрПасНомерДок.Видимость = УстановкаДляФЛ;
	ЭлементыФормы.ОтвЛицоФинУрПасНомерДок.Видимость = УстановкаДляФЛ;
	ЭлементыФормы.НадписьОтвЛицоФинУрПасДатаДок.Видимость = УстановкаДляФЛ;
	ЭлементыФормы.ОтвЛицоФинУрПасДатаДок.Видимость = УстановкаДляФЛ;
	ЭлементыФормы.НадписьОтвЛицоФинУрПасОрг.Видимость = УстановкаДляФЛ;
	ЭлементыФормы.ОтвЛицоФинУрПасОрг.Видимость = УстановкаДляФЛ;
	
	ЭлементыФормы.НадписьОтвЛицоФинУрПодНаименование.Видимость = УстановкаДляПОД;
	ЭлементыФормы.ОтвЛицоФинУрПодНаименование.Видимость = УстановкаДляПОД;
	ЭлементыФормы.НадписьОтвЛицоФинУрПодИндекс.Видимость = УстановкаДляПОД;
	ЭлементыФормы.ОтвЛицоФинУрПодИндекс.Видимость = УстановкаДляПОД;
	ЭлементыФормы.ОтвЛицоФинУрПодСтранаКод.Видимость = УстановкаДляПОД;
	ЭлементыФормы.НадписьОтвЛицоФинУрПодСтранаНаименование.Видимость = УстановкаДляПОД;
	ЭлементыФормы.ОтвЛицоФинУрПодСтранаНаименование.Видимость = УстановкаДляПОД;
	ЭлементыФормы.НадписьОтвЛицоФинУрПодОбласть.Видимость = УстановкаДляПОД;
	ЭлементыФормы.ОтвЛицоФинУрПодОбласть.Видимость = УстановкаДляПОД;
	ЭлементыФормы.НадписьОтвЛицоФинУрПодНаселенныйПункт.Видимость = УстановкаДляПОД;
	ЭлементыФормы.ОтвЛицоФинУрПодНаселенныйПункт.Видимость = УстановкаДляПОД;
	ЭлементыФормы.НадписьОтвЛицоФинУрПодУлицаНомерДома.Видимость = УстановкаДляПОД;
	ЭлементыФормы.ОтвЛицоФинУрПодУлицаНомерДома.Видимость = УстановкаДляПОД;
	
	ЭлементыФормы.НадписьОтвЛицоФинУрПодРФ_ОГРН.Видимость = УстановкаДляПОД;
	ЭлементыФормы.ОтвЛицоФинУрПодРФ_ОГРН.Видимость = УстановкаДляПОД;
	ЭлементыФормы.НадписьОтвЛицоФинУрПодРФ_ИНН.Видимость = УстановкаДляПОД;
	ЭлементыФормы.ОтвЛицоФинУрПодРФ_ИНН.Видимость = УстановкаДляПОД;
	ЭлементыФормы.НадписьОтвЛицоФинУрПодРФ_КПП.Видимость = УстановкаДляПОД;
	ЭлементыФормы.ОтвЛицоФинУрПодРФ_КПП.Видимость = УстановкаДляПОД;
	
	ЭлементыФормы.НадписьОтвЛицоФинУрПодРФ_ОГРН.Доступность = НЕ УстановкаДляПОД;
	ЭлементыФормы.ОтвЛицоФинУрПодРФ_ОГРН.Доступность = НЕ УстановкаДляПОД;
	ЭлементыФормы.НадписьОтвЛицоФинУрПодРФ_ИНН.Доступность = НЕ УстановкаДляПОД;
	ЭлементыФормы.ОтвЛицоФинУрПодРФ_ИНН.Доступность = НЕ УстановкаДляПОД;
	
	ЭлементыФормы.ПанельПодразделение.Свертка = РежимСверткиЭлементаУправления.Верх;
    ЭлементыФормы.ПанельУдостоверение.Свертка = РежимСверткиЭлементаУправления.Верх;
	ЭтаФорма.Высота = ВысотаФормы - ВысотаПанелиПодразделение;
	
	Если УстановкаДляПОД Тогда
		ЭтаФорма.Высота = ЭтаФорма.Высота + ВысотаПанелиПодразделение;
		ЭлементыФормы.ПанельПодразделение.Свертка = РежимСверткиЭлементаУправления.Нет;
	КонецЕсли;
	Если УстановкаДляФЛ Тогда
		ЭтаФорма.Высота = ЭтаФорма.Высота + ВысотаПанелиУдостоверение;
		ЭлементыФормы.ПанельУдостоверение.Свертка = РежимСверткиЭлементаУправления.Нет;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОтвЛицоФинУрРФ_ИННПриИзменении(Элемент)
	
	Если ОтвЛицоФинУр = "ПОД" Тогда
		ОтвЛицоФинУрПодРФ_ИНН  = ОтвЛицоФинУрРФ_ИНН;
	КонецЕсли;	

КонецПроцедуры

Процедура ОтвЛицоФинУрРФ_ОГРНПриИзменении(Элемент)
	
	Если ОтвЛицоФинУр = "ПОД" Тогда
		ОтвЛицоФинУрПодРФ_ОГРН = ОтвЛицоФинУрРФ_ОГРН;
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ВысотаПанелиПодразделение = ЭлементыФормы.ПанельПодразделение.Высота;
	ВысотаПанелиУдостоверение = ЭлементыФормы.ПанельУдостоверение.Высота;
    ЭлементыФормы.ПанельУдостоверение.Свертка = РежимСверткиЭлементаУправления.Верх;
    ЭтаФорма.Высота = ЭтаФорма.Высота - ВысотаПанелиУдостоверение;
	ВысотаФормы = ЭтаФорма.Высота;
	
	ОтвЛицоФинУрПриИзменении(Неопределено);
	
	СтранаКодУмолч  = "RU";
	СтранаНаимУмолч = "РОССИЯ";	
	ОтвЛицоФинУрСтранаКод = СтранаКодУмолч;
	ОтвЛицоФинУрСтранаНаименование = СтранаНаимУмолч;
	ОтвЛицоФинУрПодСтранаКод = СтранаКодУмолч;
	ОтвЛицоФинУрПодСтранаНаименование = СтранаНаимУмолч;
	
	Если (ТипЗнч(ВидыУдостЛичности) = Тип("ТаблицаЗначений")) И (ПустаяСтрока(ОтвЛицоФинУрПасНаименование)) Тогда
		 СтрокаПасРФ = ВидыУдостЛичности.Найти("ПасРФ");
		 Если СтрокаПасРФ <> Неопределено Тогда
  			 ОтвЛицоФинУрПасВидДок = СтрокаПасРФ[0]; 
			 ОтвЛицоФинУрПасНаименование = СтрокаПасРФ[1];
		 КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		
		ОтветНаВопрос = Вопрос("Данные были изменены. Применить изменения?", РежимДиалогаВопрос.ДаНетОтмена);
		Если ОтветНаВопрос = КодВозвратаДиалога.Да Тогда
			
			Если ПрименитьИзменения() Тогда
				
				ОповеститьОВыборе(СтруктураРеквизитов);
				
			Иначе	
				
				Отказ = Истина;	
				
			КонецЕсли;
			
		ИначеЕсли ОтветНаВопрос = КодВозвратаДиалога.Отмена Тогда
			
			Отказ = Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
 
КонецПроцедуры

Функция ПолучитьПустуюСтруктуруРеквизитов() Экспорт
	
	ПустаяСтруктураРеквизитовФормы = Новый Структура;
	
	Для каждого ЭлементФормы Из ЭтаФорма.ЭлементыФормы Цикл
		
		Если ТипЗнч(ЭлементФормы) = Тип("Переключатель") ИЛИ ТипЗнч(ЭлементФормы) = Тип("ПолеВвода") ИЛИ ТипЗнч(ЭлементФормы) = Тип("ПолеВыбора") Тогда
		    Если НЕ ПустаяСтрока(ЭлементФормы.Данные) Тогда
				
				ПустаяСтруктураРеквизитовФормы.Вставить(ЭлементФормы.Данные);
								
			КонецЕсли; 
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ПустаяСтруктураРеквизитовФормы;
	
КонецФункции	

Функция ПрименитьИзменения()
	    
	РеквСтрокаСообщения	= "";
	
	СтруктураРеквизитов = Новый Структура;
	
	Для каждого ЭлементФормы Из ЭтаФорма.ЭлементыФормы Цикл
		
		Если ТипЗнч(ЭлементФормы) = Тип("Переключатель") ИЛИ ТипЗнч(ЭлементФормы) = Тип("ПолеВвода") ИЛИ ТипЗнч(ЭлементФормы) = Тип("ПолеВыбора")  Тогда
		    Если НЕ ПустаяСтрока(ЭлементФормы.Данные) Тогда
				
				ЗначениеРеквизита = ЭтаФорма[ЭлементФормы.Данные];
				СтруктураРеквизитов.Вставить(ЭлементФормы.Данные, ЗначениеРеквизита);
								
				//Проверка на заполненность полей, обязательных к заполнению
				Если ТипЗнч(ЭлементФормы) = Тип("ПолеВвода")  Тогда
					Если ЭлементФормы.Видимость И ЭлементФормы.АвтоОтметкаНезаполненного Тогда
						Если  НЕ ЗначениеЗаполнено(ЗначениеРеквизита) Тогда
							 ПредставлениеРекв = ЭлементФормы.Имя;
							 Попытка
							 	ПредставлениеРекв = ЭлементыФормы["Надпись" + ЭлементФормы.Имя].Заголовок;
							 Исключение
							    Если Найти(ПредставлениеРекв, "ПасНаим") > 0 Тогда
									ПредставлениеРекв = "Док., удост. личн. (кратко)";
								КонецЕсли; 
							 КонецПопытки;
							
							 РеквСтрокаСообщения = РеквСтрокаСообщения + ?(ПустаяСтрока(РеквСтрокаСообщения), "", "," + Символы.ПС) + """" + ПредставлениеРекв + """";
							 
						КонецЕсли;	
					КонецЕсли; 
				КонецЕсли;
				
			КонецЕсли; 
		КонецЕсли;
		
	КонецЦикла; 
	
	Если НЕ ПустаяСтрока(РеквСтрокаСообщения) Тогда 
		
		ОтветНаВопрос = Вопрос("Не заполнены поля, обязательные к заполнению:" + Символы.ПС + Символы.ПС + 
			РеквСтрокаСообщения + "." + Символы.ПС + Символы.ПС + "Продолжить редактирование ?", РежимДиалогаВопрос.ДаНет);
		Если ОтветНаВопрос = КодВозвратаДиалога.Да Тогда
			Возврат Ложь;	
		КонецЕсли;
			
	КонецЕсли;		

	Возврат Истина;

КонецФункции

// Обработка выбора адресной информации из справочников

Процедура ОтвЛицоФинУрНаименованиеНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ИмяСправочникаДляВыбора = "Контрагенты";
	Если ОтвЛицоФинУр = "ФЛ_" Тогда
		ИмяСправочникаДляВыбора = "ФизическиеЛица";
	КонецЕсли;	
	
	Если НЕ ВладелецФормы.СуществуетСправочник(ИмяСправочникаДляВыбора) Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ВыбранноеЗначение = Неопределено;
	СтруктураСведений = ВладелецФормы.ПолучитьСведенияИзСправочника(Элемент, ИмяСправочникаДляВыбора, ВыбранноеЗначение);
	Если ВыбранноеЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураАдреса = ВладелецФормы.АдресВФормате9ЗапятыхВСтруктуруПорталаТС(СтруктураСведений.Адрес);
	
	ОтвЛицоФинУрНаименование = СтруктураСведений.Наименование;

	ОтвЛицоФинУрИндекс  =  СтруктураАдреса.Индекс;
	//ПолучательСтранаКод  = СтруктураАдреса.СтранаКод;
	//ПолучательСтранаНаименование = СтруктураАдреса.СтранаНаименование;
	ОтвЛицоФинУрОбласть = СтруктураАдреса.Область;
	ОтвЛицоФинУрНаселенныйПункт = СтруктураАдреса.НаселенныйПункт;
	ОтвЛицоФинУрУлицаНомерДома = СтруктураАдреса.УлицаНомерДома; 
	
	ОтвЛицоФинУрРФ_ИНН  = СтруктураСведений.ИНН;
	ОтвЛицоФинУрРФ_КПП  = СтруктураСведений.КПП;
	//ОтвЛицоФинУрРФ_ОГРН = СтруктураСведений.ОГРН;
	
	Если ИмяСправочникаДляВыбора = "ФизическиеЛица" Тогда
		
		Если ТипЗнч(ВидыУдостЛичности) = Тип("ТаблицаЗначений") Тогда
			
			ПаспортРФСтрока = ВидыУдостЛичности.Найти("ПасРФ");
			Если ПаспортРФСтрока <> Неопределено Тогда
				ОтвЛицоФинУрПасВидДок = ПаспортРФСтрока[0]; 
				ОтвЛицоФинУрПасНаименование = ПаспортРФСтрока[1];
			КонецЕсли; 
			ОтвЛицоФинУрПасНомерДок = "";
			ОтвЛицоФинУрПасДатаДок  = "";
			ОтвЛицоФинУрПасОрг      = ""; 
			
			Удостоверения = "";
			Если СтруктураСведений.Свойство("Удостоверения", Удостоверения) Тогда
				ИныеДокументыСтрока = ВидыУдостЛичности.Найти("ИныеДк");
				РезультатПоиска = Неопределено;
				СтрокаПоиска = СтрЗаменить(СокрЛП(Удостоверения.ДокументВид), "Российской Федерации", "РФ");
				Для Каждого ВидУдостЛичности Из ВидыУдостЛичности Цикл
					Если Найти(ВидУдостЛичности[2], СтрокаПоиска) > 0 Тогда
						РезультатПоиска = ВидУдостЛичности;
						Прервать;
					КонецЕсли; 
				КонецЦикла;	
				Если РезультатПоиска = Неопределено Тогда
					РезультатПоиска = ИныеДокументыСтрока;
				КонецЕсли;
				Если РезультатПоиска <> Неопределено Тогда
					ОтвЛицоФинУрПасВидДок = РезультатПоиска[0]; 
					ОтвЛицоФинУрПасНаименование = РезультатПоиска[1];
				КонецЕсли;
				ОтвЛицоФинУрПасНомерДок = "Серия:" + Удостоверения.ДокументСерия + " №:" + Удостоверения.ДокументНомер;
				ОтвЛицоФинУрПасДатаДок  = Удостоверения.ДокументДатаВыдачи;
				ОтвЛицоФинУрПасОрг   = Удостоверения.ДокументКемВыдан; 
			КонецЕсли;	
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

 Процедура ОтвЛицоФинУрПодНаименованиеНачалоВыбора(Элемент, СтандартнаяОбработка)
	 
	ИмяСправочникаДляВыбора = "Контрагенты";
	
	Если НЕ ВладелецФормы.СуществуетСправочник(ИмяСправочникаДляВыбора) Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ВыбранноеЗначение = Неопределено;
	СтруктураСведений = ВладелецФормы.ПолучитьСведенияИзСправочника(Элемент, ИмяСправочникаДляВыбора, ВыбранноеЗначение);
	Если ВыбранноеЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураАдреса = ВладелецФормы.АдресВФормате9ЗапятыхВСтруктуруПорталаТС(СтруктураСведений.Адрес);
	
	ОтвЛицоФинУрПодНаименование = СтруктураСведений.Наименование;

	ОтвЛицоФинУрПодИндекс  =  СтруктураАдреса.Индекс;
	//ПолучательСтранаКод  = СтруктураАдреса.СтранаКод;
	//ПолучательСтранаНаименование = СтруктураАдреса.СтранаНаименование;
	ОтвЛицоФинУрПодОбласть = СтруктураАдреса.Область;
	ОтвЛицоФинУрПодНаселенныйПункт = СтруктураАдреса.НаселенныйПункт;
	ОтвЛицоФинУрПодУлицаНомерДома = СтруктураАдреса.УлицаНомерДома; 
	
	ОтвЛицоФинУрПодРФ_ИНН  = СтруктураСведений.ИНН;
	ОтвЛицоФинУрПодРФ_КПП  = СтруктураСведений.КПП;
	ОтвЛицоФинУрПодРФ_ОГРН = СтруктураСведений.ОГРН;
	
	Если НЕ ВладелецФормы.ЕстьРеквизитСправочника(ИмяСправочникаДляВыбора, "ГоловнойКонтрагент") Тогда
		Возврат;
	КонецЕсли;
	
	Если ВыбранноеЗначение.ГоловнойКонтрагент.Пустая() Тогда
		Возврат;
	КонецЕсли; 
	
	ГоловнаяОрганизация = ВыбранноеЗначение.ГоловнойКонтрагент;
	
	ОтвЛицоФинУрНаименование =  ГоловнаяОрганизация.НаименованиеПолное;
	ОтвЛицоФинУрРФ_ИНН  = ГоловнаяОрганизация.ИНН;
	ОтвЛицоФинУрРФ_КПП  = ГоловнаяОрганизация.КПП;
	
	Сведения = Новый СписокЗначений;
	Сведения.Добавить("", "АдрЮР");   // Юридический адрес
	
	ОргСведения = РегламентированнаяОтчетность.ПолучитьСведенияОбКонтрагенте(ГоловнаяОрганизация, ДатаПодписи, Сведения);
	
	Адрес = "";
	ОргСведения.Свойство("АдрЮР", Адрес);
	СтруктураАдреса = ВладелецФормы.АдресВФормате9ЗапятыхВСтруктуруПорталаТС(Адрес);
	
	ОтвЛицоФинУрИндекс  =  СтруктураАдреса.Индекс;
	//ПолучательСтранаКод  = СтруктураАдреса.СтранаКод;
	//ПолучательСтранаНаименование = СтруктураАдреса.СтранаНаименование;
	ОтвЛицоФинУрОбласть = СтруктураАдреса.Область;
	ОтвЛицоФинУрНаселенныйПункт = СтруктураАдреса.НаселенныйПункт;
	ОтвЛицоФинУрУлицаНомерДома = СтруктураАдреса.УлицаНомерДома; 
	
КонецПроцедуры












Перем СтруктураРеквизитов;

Процедура КнопкаОКНажатие(Кнопка)
	
	Если ПрименитьИзменения() Тогда
		
		Модифицированность = Ложь;
		Закрыть(СтруктураРеквизитов);	
		
	КонецЕсли;
		
КонецПроцедуры

Процедура СтранаОтправленияПриИзменении()
	
	УстановкаДляРФ = Ложь;
	УстановкаДляРБ = Ложь;
	УстановкаДляРК = Ложь;
	
	Если ВладелецФормы.СтранаОтправления = "РФ" Тогда
	
		УстановкаДляРФ = Истина;
		ОтправительСтранаКод = "RU";
		ОтправительСтранаНаименование = "РОССИЯ";
		
	ИначеЕсли ВладелецФормы.СтранаОтправления = "РБ" Тогда
		
		УстановкаДляРБ = Истина;
		ОтправительСтранаКод = "BY";
		ОтправительСтранаНаименование = "БЕЛАРУСЬ";
		
	ИначеЕсли ВладелецФормы.СтранаОтправления = "РК" Тогда
		
		УстановкаДляРК = Истина;
		ОтправительСтранаКод = "KZ";
		ОтправительСтранаНаименование = "КАЗАХСТАН";
	
	КонецЕсли; 
	
	ЭлементыФормы.НадписьОтправительРФ_ОГРН.Видимость = УстановкаДляРФ;
	ЭлементыФормы.ОтправительРФ_ОГРН.Видимость = УстановкаДляРФ;
	ЭлементыФормы.НадписьОтправительРФ_ИНН.Видимость  = УстановкаДляРФ;
	ЭлементыФормы.ОтправительРФ_ИНН.Видимость  = УстановкаДляРФ;
	ЭлементыФормы.НадписьОтправительРФ_КПП.Видимость  = УстановкаДляРФ;
	ЭлементыФормы.ОтправительРФ_КПП.Видимость  = УстановкаДляРФ;
	
	ЭлементыФормы.НадписьОтправительРБ_УНП.Видимость  = УстановкаДляРБ;
	ЭлементыФормы.ОтправительРБ_УНП.Видимость  = УстановкаДляРБ;
	
	ЭлементыФормы.НадписьОтправительРК_БИН.Видимость  = УстановкаДляРК;
	ЭлементыФормы.ОтправительРК_БИН.Видимость  = УстановкаДляРК;
	ЭлементыФормы.НадписьОтправительРК_ИИН.Видимость  = УстановкаДляРК;
	ЭлементыФормы.ОтправительРК_ИИН.Видимость  = УстановкаДляРК;
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	СтранаОтправленияПриИзменении();
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		
		ОтветНаВопрос = Вопрос("Данные были изменены. Применить изменения?", РежимДиалогаВопрос.ДаНетОтмена);
		Если ОтветНаВопрос = КодВозвратаДиалога.Да Тогда
			
			Если ПрименитьИзменения() Тогда
				
				ОповеститьОВыборе(СтруктураРеквизитов);
				
			Иначе	
				
				Отказ = Истина;	
				
			КонецЕсли;
			
		ИначеЕсли ОтветНаВопрос = КодВозвратаДиалога.Отмена Тогда
			
			Отказ = Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
 
КонецПроцедуры

Функция ПолучитьПустуюСтруктуруРеквизитов() Экспорт
	
	ПустаяСтруктураРеквизитовФормы = Новый Структура;
	
	Для каждого ЭлементФормы Из ЭтаФорма.ЭлементыФормы Цикл
		
		Если ТипЗнч(ЭлементФормы) = Тип("Переключатель") ИЛИ ТипЗнч(ЭлементФормы) = Тип("ПолеВвода")  Тогда
		    Если НЕ ПустаяСтрока(ЭлементФормы.Данные) Тогда
				
				ПустаяСтруктураРеквизитовФормы.Вставить(ЭлементФормы.Данные);
								
			КонецЕсли; 
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ПустаяСтруктураРеквизитовФормы;
	
КонецФункции	

Функция ПрименитьИзменения()
	    
	РеквСтрокаСообщения	= "";
	
	СтруктураРеквизитов = Новый Структура;
	
	Для каждого ЭлементФормы Из ЭтаФорма.ЭлементыФормы Цикл
		
		Если ТипЗнч(ЭлементФормы) = Тип("Переключатель") ИЛИ ТипЗнч(ЭлементФормы) = Тип("ПолеВвода")  Тогда
		    Если НЕ ПустаяСтрока(ЭлементФормы.Данные) Тогда
				
				ЗначениеРеквизита = ЭтаФорма[ЭлементФормы.Данные];
				СтруктураРеквизитов.Вставить(ЭлементФормы.Данные, ЗначениеРеквизита);
								
				//Проверка на заполненность полей, обязательных к заполнению
				Если ТипЗнч(ЭлементФормы) = Тип("ПолеВвода")  Тогда
					Если ЭлементФормы.Видимость И ЭлементФормы.АвтоОтметкаНезаполненного Тогда
						Если  НЕ ЗначениеЗаполнено(ЗначениеРеквизита) Тогда
							 ПредставлениеРекв = ЭлементФормы.Имя;
							 Попытка
							 	ПредставлениеРекв = ЭлементыФормы["Надпись" + ЭлементФормы.Имя].Заголовок;
							 Исключение КонецПопытки;
							
							 РеквСтрокаСообщения = РеквСтрокаСообщения + ?(ПустаяСтрока(РеквСтрокаСообщения), "", "," + Символы.ПС) + """" + ПредставлениеРекв + """";
							 
						КонецЕсли;	
					КонецЕсли; 
				КонецЕсли;
				
			КонецЕсли; 
		КонецЕсли;
		
	КонецЦикла; 
	
	Если НЕ ПустаяСтрока(РеквСтрокаСообщения) Тогда 
		
		ОтветНаВопрос = Вопрос("Не заполнены поля, обязательные к заполнению:" + Символы.ПС + Символы.ПС + 
			РеквСтрокаСообщения + "." + Символы.ПС + Символы.ПС + "Продолжить редактирование ?", РежимДиалогаВопрос.ДаНет);
		Если ОтветНаВопрос = КодВозвратаДиалога.Да Тогда
			Возврат Ложь;	
		КонецЕсли;
			
	КонецЕсли;		

	Возврат Истина;

КонецФункции

// Обработка выбора адресной информации из справочников

Процедура ОтправительНаименованиеНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ИмяСправочникаДляВыбора = "Контрагенты";
	Если ВладелецФормы.НапрПеремещения = "ЭК" Тогда
			ИмяСправочникаДляВыбора = "Организации";
	КонецЕсли;
	Если НЕ ВладелецФормы.СуществуетСправочник(ИмяСправочникаДляВыбора) Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ВыбранноеЗначение = Неопределено;
	СтруктураСведений = ВладелецФормы.ПолучитьСведенияИзСправочника(Элемент, ИмяСправочникаДляВыбора, ВыбранноеЗначение);
	Если ВыбранноеЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураАдреса = ВладелецФормы.АдресВФормате9ЗапятыхВСтруктуруПорталаТС(СтруктураСведений.Адрес);
	
	ОтправительНаименование = СтруктураСведений.Наименование;
	
	ОтправительИндекс =  СтруктураАдреса.Индекс;
	//ОтправительСтранаКод = СтруктураАдреса.СтранаКод;
	//ОтправительСтранаНаименование = СтруктураАдреса.СтранаНаименование;
	ОтправительОбласть = СтруктураАдреса.Область;
	ОтправительНаселенныйПункт = СтруктураАдреса.НаселенныйПункт;
	ОтправительУлицаНомерДома = СтруктураАдреса.УлицаНомерДома; 
	
	Если ВладелецФормы.СтранаОтправления = "РФ" Тогда
		ОтправительРФ_ИНН  = СтруктураСведений.ИНН;
		ОтправительРФ_КПП  = СтруктураСведений.КПП;
		ОтправительРФ_ОГРН = СтруктураСведений.ОГРН;
	ИначеЕсли ВладелецФормы.СтранаОтправления = "РБ" Тогда
		ОтправительРБ_УНП  = СтруктураСведений.ИНН;
	ИначеЕсли ВладелецФормы.СтранаОтправления = "РК" Тогда	
	    ОтправительРК_ИИН  = СтруктураСведений.ИНН;
	КонецЕсли; 
	
КонецПроцедуры


#Если Клиент Тогда
	
Перем НП Экспорт;

// Выполняет запрос и формирует табличный документ-результат отчета
// в соответствии с настройками, заданными значениями реквизитов отчета.
//
// Параметры:
//	ДокументРезультат - табличный документ, формируемый отчетом
//	ПоказыватьЗаголовок - признак видимости строк с заголовком отчета
//	ВысотаЗаголовка - параметр, через который возвращается высота заголовка в строках 
//
Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок = Ложь) Экспорт

	ДокументРезультат.Очистить();

	Макет = ПолучитьМакет("Отчет");

	ОбластьЗаголовок  = Макет.ПолучитьОбласть("Заголовок");

	ОбластьЗаголовок.Параметры.НачалоПериода       = Формат(ДатаНач, "ДФ=dd.MM.yyyy");
	ОбластьЗаголовок.Параметры.КонецПериода        = Формат(ДатаКон, "ДФ=dd.MM.yyyy");
	СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация);
	НазваниеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм");
	ОбластьЗаголовок.Параметры.НазваниеОрганизации = НазваниеОрганизации;
	ОбластьЗаголовок.Параметры.ИННОрганизации      = "" + Организация.ИНН + " / " + Организация.КПП;
	ДокументРезультат.Вывести(ОбластьЗаголовок);

	// Параметр для показа заголовка
	ВысотаЗаголовка = ДокументРезультат.ВысотаТаблицы;

	// Когда нужен только заголовок:
	Если ТолькоЗаголовок Тогда
		Возврат;
	КонецЕсли;

	// Проверим заполнение обязательных реквизитов
	Если НалоговыйУчет.ПроверитьЗаполнениеОбязательныхРеквизитов(ДатаНач,ДатаКон,Организация) Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВысотаЗаголовка) Тогда
		ДокументРезультат.Область("R1:R" + ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;
	КонецЕсли;

	Запрос = Новый Запрос;

	Запрос.УстановитьПараметр("ДатаНач",      НачалоДня(ДатаНач));
	Запрос.УстановитьПараметр("ДатаКон",      КонецДня(ДатаКон));
	Запрос.УстановитьПараметр("Организация",  Организация);
	Запрос.УстановитьПараметр("СубконтоОплатаТруда", Перечисления.ВидыРасходовНУ.ОплатаТруда);
	Запрос.УстановитьПараметр("СтатьиЗатрат", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат);
	Запрос.УстановитьПараметр("Счет97",       ПланыСчетов.Хозрасчетный.РасходыНаОплатуТрудаБудущихПериодов);
	
	СписокСчетов = Новый Массив;
		СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы);
		СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.ОбщехозяйственныеРасходы);
		СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.ИздержкиОбращения);
		
	Запрос.УстановитьПараметр("СчетКт",       СписокСчетов);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОборотыДтКт.Период КАК ДатаОперации,
	|	ХозрасчетныйОборотыДтКт.Регистратор КАК Расшифровка,
	|	ХозрасчетныйОборотыДтКт.СчетДт КАК СчетДт,
	|	ХозрасчетныйОборотыДтКт.СубконтоДт1,
	|	ХозрасчетныйОборотыДтКт.СубконтоКт1 КАК Работник,
	|	ЕСТЬNULL(ХозрасчетныйОборотыДтКт.СубконтоКт2, ""п.16, ст.255 НК РФ"") КАК НаименованиеРасхода,
	|	ХозрасчетныйОборотыДтКт.СуммаНУОборотДт КАК Сумма
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Запись,
	|			,
	|			&СтатьиЗатрат,
	|			(НЕ СчетКт В ИЕРАРХИИ (&СчетКт))
	|				И (НЕ СчетКт В ИЕРАРХИИ (&Счет97)),
	|			,
	|			Организация = &Организация
	|				И СубконтоДт1.ВидРасходовНУ = &СубконтоОплатаТруда) КАК ХозрасчетныйОборотыДтКт
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОборотыДтКт.Период,
	|	ХозрасчетныйОборотыДтКт.Регистратор,
	|	ХозрасчетныйОборотыДтКт.СчетДт,
	|	ХозрасчетныйОборотыДтКт.СубконтоДт1,
	|	ХозрасчетныйОборотыДтКт.СубконтоКт2,
	|	ХозрасчетныйОборотыДтКт.СубконтоКт1,
	|	ХозрасчетныйОборотыДтКт.СуммаНУОборотДт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Запись,
	|			,
	|			&СтатьиЗатрат,
	|			СчетКт В ИЕРАРХИИ (&Счет97),
	|			,
	|			Организация = &Организация
	|				И СубконтоДт1.ВидРасходовНУ = &СубконтоОплатаТруда) КАК ХозрасчетныйОборотыДтКт
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаОперации
	|ИТОГИ ПО
	|	СчетДт";
	Результат = Запрос.Выполнить().Выгрузить();
	Результат.Сортировать("ДатаОперации,Работник");

	ОбластьПодвал        = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы  = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьСтрока        = Макет.ПолучитьОбласть("Строка");
	ОбластьИтог          = Макет.ПолучитьОбласть("Итог");
	
	ДокументРезультат.Вывести(ОбластьШапкаТаблицы);

	СписокВидов = Новый СписокЗначений();
	Для каждого ЭлементСписка из ВидыРасходов Цикл
		Если ЭлементСписка.Пометка Тогда
			СписокВидов.Добавить(ЭлементСписка.Значение);                       
		КонецЕсли;
	КонецЦикла;
    ИтогСумма = 0;
	Для Каждого Выборка Из Результат Цикл
		Если НЕ ЗначениеЗаполнено(Выборка.Расшифровка)  Тогда
			Продолжить;
		КонецЕсли;
		
		Если СписокВидов.НайтиПоЗначению(Выборка.НаименованиеРасхода) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ОбластьСтрока.Параметры.ДатаОперации        = Выборка.ДатаОперации;
		ОбластьСтрока.Параметры.Работник            = Выборка.Работник;
		ОбластьСтрока.Параметры.НаименованиеРасхода = Выборка.НаименованиеРасхода;
		ОбластьСтрока.Параметры.Сумма               = Выборка.Сумма;
		ОбластьСтрока.Параметры.ОбъектУчета         = Выборка.СубконтоДт1;
		ОбластьСтрока.Параметры.Расшифровка         = Выборка.Расшифровка;

		ДокументРезультат.Вывести(ОбластьСтрока);
		ИтогСумма =  ИтогСумма + Выборка.Сумма;
		
	КонецЦикла;

	ОбластьИтог.Параметры.ИтогСумма = ИтогСумма;
	ДокументРезультат.Вывести(ОбластьИтог);
	СтруктураЛиц = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Организация, ДатаКон);
	ОбластьПодвал.Параметры.ОтветственныйЗаРегистры = СтруктураЛиц.ОтветственныйЗаРегистры;
	ДокументРезультат.Вывести(ОбластьПодвал);
КонецПроцедуры // СформироватьОтчет

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
// 

НП           = Новый НастройкаПериода;

#КонецЕсли
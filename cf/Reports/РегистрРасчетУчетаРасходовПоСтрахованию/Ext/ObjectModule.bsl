#Если Клиент Тогда
	
Перем НП Экспорт;

// Выполняет запрос и формирует табличный документ-результат отчета
// в соответствии с настройками, заданными значениями реквизитов отчета.
//
// Параметры:
//	ДокументРезультат - табличный документ, формируемый отчетом
//	ПоказыватьЗаголовок - признак видимости строк с заголовком отчета
//	ВысотаЗаголовка - параметр, через который возвращается высота заголовка в строках 
//
Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок = Ложь) Экспорт
	
	НачалоПериода = НачалоМесяца(ДатаНач);
	КонецПериода  = КонецМесяца(ДатаКон);

	ДокументРезультат.Очистить();

	Макет = ПолучитьМакет("Отчет");

	ОбластьЗаголовок  = Макет.ПолучитьОбласть("Заголовок");

	ОбластьЗаголовок.Параметры.НачалоПериода       = Формат(НачалоПериода, "ДФ=dd.MM.yyyy");
	ОбластьЗаголовок.Параметры.КонецПериода        = Формат(КонецПериода, "ДФ=dd.MM.yyyy");
	СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация);
	НазваниеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм");
	ОбластьЗаголовок.Параметры.НазваниеОрганизации = НазваниеОрганизации;
	ОбластьЗаголовок.Параметры.ИННОрганизации      = "" + Организация.ИНН + " / " + Организация.КПП;
	ДокументРезультат.Вывести(ОбластьЗаголовок);

	// Параметр для показа заголовка
	ВысотаЗаголовка = ДокументРезультат.ВысотаТаблицы;

	// Когда нужен только заголовок:
	Если ТолькоЗаголовок Тогда
		Возврат;
	КонецЕсли;

	// Проверим заполнение обязательных реквизитов
	Если НалоговыйУчет.ПроверитьЗаполнениеОбязательныхРеквизитов(ДатаНач,ДатаКон,Организация) Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВысотаЗаголовка) Тогда
		ДокументРезультат.Область("R1:R" + ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;
	КонецЕсли;

	// Формируем запрос по виду затрат
	Страхование1 = Перечисления.ВидыРасходовНУ.ДобровольноеСтрахованиеПоДоговорамДолгосрочногоСтрахованияЖизниРаботников;
	Страхование2 = Перечисления.ВидыРасходовНУ.ДобровольноеЛичноеСтрахование;
	Страхование3 = Перечисления.ВидыРасходовНУ.ДобровольноеЛичноеСтрахованиеНаСлучайСмертиИлиУтратыРаботоспособности;
	ОплатаТруда  = Перечисления.ВидыРасходовНУ.ОплатаТруда;

	ВидыЗатрат = Новый Массив;
	ВидыЗатрат.Добавить(Страхование1);
	ВидыЗатрат.Добавить(Страхование2);
	ВидыЗатрат.Добавить(Страхование3);
	ВидыЗатрат.Добавить(ОплатаТруда);

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Страхование1",  Страхование1);
	Запрос.УстановитьПараметр("Страхование2",  Страхование2);
	Запрос.УстановитьПараметр("Страхование3",  Страхование3);
	Запрос.УстановитьПараметр("ОплатаТруда",   ОплатаТруда);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  КонецПериода);
	Запрос.УстановитьПараметр("ВидСубконто",   ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат);
	Запрос.УстановитьПараметр("ВидыЗатрат",    ВидыЗатрат);
	Запрос.УстановитьПараметр("Организация",   Организация);
	Запрос.УстановитьПараметр("Счет70",        ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда);
	Запрос.УстановитьПараметр("Счет97_1",        ПланыСчетов.Хозрасчетный.РасходыНаОплатуТрудаБудущихПериодов);
	Запрос.УстановитьПараметр("Счет97_2",        ПланыСчетов.Хозрасчетный.РасходыБудущихПериодовНаДобровольноеСтрахованиеРаботников);
	Запрос.УстановитьПараметр("ОплатаТрудаРБП",Справочники.РасходыБудущихПериодов.РБПНаОплатуТруда);
		СчетаЗатрат = Новый Массив;
		СчетаЗатрат.Добавить(ПланыСчетов.Хозрасчетный.ОсновноеПроизводство_);
		СчетаЗатрат.Добавить(ПланыСчетов.Хозрасчетный.ВспомогательныеПроизводства);
		СчетаЗатрат.Добавить(ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы);
		СчетаЗатрат.Добавить(ПланыСчетов.Хозрасчетный.ОбщехозяйственныеРасходы);
		СчетаЗатрат.Добавить(ПланыСчетов.Хозрасчетный.РасходыНаПродажу);
	Запрос.УстановитьПараметр("Счет",    СчетаЗатрат);
	Запрос.УстановитьПараметр("Счет90",  ПланыСчетов.Хозрасчетный.Продажи);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	МЕСЯЦ(ХозрасчетныйОбороты.Период) КАК Месяц,
	               |	СУММА(0) КАК ОплатаТруда,
	               |	СУММА(ВЫБОР
	               |			КОГДА ХозрасчетныйОбороты.Субконто1.ВидРасходовНУ = &Страхование1
	               |				ТОГДА ХозрасчетныйОбороты.СуммаНУОборотДт
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК Страхование1Дт,
	               |	СУММА(0) КАК Страхование1Кт,
	               |	СУММА(ВЫБОР
	               |			КОГДА ХозрасчетныйОбороты.Субконто1.ВидРасходовНУ = &Страхование2
	               |				ТОГДА ХозрасчетныйОбороты.СуммаНУОборотДт
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК Страхование2Дт,
	               |	СУММА(0) КАК Страхование2Кт,
	               |	СУММА(ВЫБОР
	               |			КОГДА ХозрасчетныйОбороты.Субконто1.ВидРасходовНУ = &Страхование3
	               |				ТОГДА ХозрасчетныйОбороты.СуммаНУОборотДт
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК Страхование3Дт,
	               |	СУММА(0) КАК Страхование3Кт
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Обороты(
	               |			&НачалоПериода,
	               |			&КонецПериода,
	               |			Месяц,
	               |			Счет В ИЕРАРХИИ (&Счет),
	               |			&ВидСубконто,
	               |			Организация = &Организация
	               |				И Субконто1.ВидРасходовНУ В (&ВидыЗатрат),
	               |			,
	               |			) КАК ХозрасчетныйОбороты
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	МЕСЯЦ(ХозрасчетныйОбороты.Период)
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	МЕСЯЦ(ХозрасчетныйОбороты.Период),
	               |	СУММА(0),
	               |	СУММА(0),
	               |	СУММА(ВЫБОР
	               |			КОГДА ХозрасчетныйОбороты.Субконто1.ВидРасходовНУ = &Страхование1
	               |				ТОГДА ХозрасчетныйОбороты.СуммаНУОборотКт
	               |			ИНАЧЕ 0
	               |		КОНЕЦ),
	               |	СУММА(0),
	               |	СУММА(ВЫБОР
	               |			КОГДА ХозрасчетныйОбороты.Субконто1.ВидРасходовНУ = &Страхование2
	               |				ТОГДА ХозрасчетныйОбороты.СуммаНУОборотКт
	               |			ИНАЧЕ 0
	               |		КОНЕЦ),
	               |	СУММА(0),
	               |	СУММА(ВЫБОР
	               |			КОГДА ХозрасчетныйОбороты.Субконто1.ВидРасходовНУ = &Страхование3
	               |				ТОГДА ХозрасчетныйОбороты.СуммаНУОборотКт
	               |			ИНАЧЕ 0
	               |		КОНЕЦ)
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Обороты(
	               |			&НачалоПериода,
	               |			&КонецПериода,
	               |			Месяц,
	               |			Счет В ИЕРАРХИИ (&Счет),
	               |			&ВидСубконто,
	               |			Организация = &Организация
	               |				И Субконто1.ВидРасходовНУ В (&ВидыЗатрат),
	               |			КорСчет В ИЕРАРХИИ (&Счет90),
	               |			) КАК ХозрасчетныйОбороты
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	МЕСЯЦ(ХозрасчетныйОбороты.Период)
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	МЕСЯЦ(ХозрасчетныйОбороты.Период),
	               |	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт),
	               |	СУММА(0),
	               |	СУММА(0),
	               |	СУММА(0),
	               |	СУММА(0),
	               |	СУММА(0),
	               |	СУММА(0)
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Обороты(
	               |			&НачалоПериода,
	               |			&КонецПериода,
	               |			Месяц,
	               |			Счет В ИЕРАРХИИ (&Счет70),
	               |			,
	               |			Организация = &Организация
	               |				И КорСубконто1.ВидРасходовНУ = &ОплатаТруда,
	               |			,
	               |			&ВидСубконто) КАК ХозрасчетныйОбороты
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	МЕСЯЦ(ХозрасчетныйОбороты.Период)
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	МЕСЯЦ(ХозрасчетныйОбороты.Период),
	               |	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт),
	               |	СУММА(0),
	               |	СУММА(0),
	               |	СУММА(0),
	               |	СУММА(0),
	               |	СУММА(0),
	               |	СУММА(0)
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Обороты(
	               |			&НачалоПериода,
	               |			&КонецПериода,
	               |			Месяц,
	               |			Счет В ИЕРАРХИИ (&Счет97_1),
	               |			,
	               |			Организация = &Организация
	               |				И КорСубконто1 = &ОплатаТрудаРБП,
	               |			,
	               |			&ВидСубконто) КАК ХозрасчетныйОбороты
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	МЕСЯЦ(ХозрасчетныйОбороты.Период)
	               |ИТОГИ
	               |	СУММА(ОплатаТруда),
	               |	СУММА(Страхование1Дт),
	               |	СУММА(Страхование1Кт),
	               |	СУММА(Страхование2Дт),
	               |	СУММА(Страхование2Кт),
	               |	СУММА(Страхование3Дт),
	               |	СУММА(Страхование3Кт)
	               |ПО
	               |	Месяц";
	Результат = Запрос.Выполнить();

	ТаблицаРезультат = Новый ТаблицаЗначений;
	ТаблицаРезультат = Результат.Выгрузить();
	ТаблицаРезультат.Колонки.Добавить("Норма1");
	ТаблицаРезультат.Колонки.Добавить("Норма2");
	ТаблицаРезультат.Индексы.Добавить("Месяц");

	ОбластьПодвал        = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы  = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьСтрока        = Макет.ПолучитьОбласть("Строка");
    ИтогоПоСтрахованию   = 0;

	ДокументРезультат.Вывести(ОбластьШапкаТаблицы);

	СтрокаПредыдущегоМесяца = Неопределено;

	Для НМесяца = Месяц(НачалоПериода) по Месяц(КонецПериода) Цикл

		СтрокаМесяца = ТаблицаРезультат.Найти(НМесяца, "Месяц");

		Если СтрокаМесяца = Неопределено Тогда

			СтрокаМесяца = ТаблицаРезультат.Вставить(НМесяца - 1);

			СтрокаМесяца.Месяц = НМесяца;

			Если СтрокаПредыдущегоМесяца = Неопределено Тогда

				СтрокаМесяца.ОплатаТруда    = 0;
				СтрокаМесяца.Страхование1Дт = 0;
				СтрокаМесяца.Страхование2Дт = 0;
				СтрокаМесяца.Страхование3Дт = 0;
				СтрокаМесяца.Страхование1Кт = 0;
				СтрокаМесяца.Страхование2Кт = 0;
				СтрокаМесяца.Страхование3Кт = 0;

			Иначе

				СтрокаМесяца.ОплатаТруда    = СтрокаПредыдущегоМесяца.ОплатаТруда;
				СтрокаМесяца.Страхование1Дт = СтрокаПредыдущегоМесяца.Страхование1Дт;
				СтрокаМесяца.Страхование2Дт = СтрокаПредыдущегоМесяца.Страхование2Дт;
				СтрокаМесяца.Страхование3Дт = СтрокаПредыдущегоМесяца.Страхование3Дт;
				СтрокаМесяца.Страхование1Кт = СтрокаПредыдущегоМесяца.Страхование1Кт;
				СтрокаМесяца.Страхование2Кт = СтрокаПредыдущегоМесяца.Страхование2Кт;
				СтрокаМесяца.Страхование3Кт = СтрокаПредыдущегоМесяца.Страхование3Кт;

			КонецЕсли;

		Иначе

			Если НЕ (СтрокаПредыдущегоМесяца = Неопределено) Тогда

				СтрокаМесяца.ОплатаТруда    = СтрокаМесяца.ОплатаТруда + СтрокаПредыдущегоМесяца.ОплатаТруда;
				СтрокаМесяца.Страхование1Дт = СтрокаМесяца.Страхование1Дт + СтрокаПредыдущегоМесяца.Страхование1Дт;
				СтрокаМесяца.Страхование2Дт = СтрокаМесяца.Страхование2Дт + СтрокаПредыдущегоМесяца.Страхование2Дт;
				СтрокаМесяца.Страхование3Дт = СтрокаМесяца.Страхование3Дт + СтрокаПредыдущегоМесяца.Страхование3Дт;
				СтрокаМесяца.Страхование1Кт = СтрокаМесяца.Страхование1Кт + СтрокаПредыдущегоМесяца.Страхование1Кт;
				СтрокаМесяца.Страхование2Кт = СтрокаМесяца.Страхование2Кт + СтрокаПредыдущегоМесяца.Страхование2Кт;
				СтрокаМесяца.Страхование3Кт = СтрокаМесяца.Страхование3Кт + СтрокаПредыдущегоМесяца.Страхование3Кт;

			КонецЕсли;

		КонецЕсли;

		СтрокаМесяца.Норма1     = Окр(СтрокаМесяца.ОплатаТруда*0.12,2,1);
		СтрокаМесяца.Норма2 = Окр(СтрокаМесяца.ОплатаТруда*?(ДатаКон < '20090101' ,0.03,0.06),2,1);
		СтрокаПредыдущегоМесяца = СтрокаМесяца;

		//Выведем строку
		Если (СтрокаМесяца.Страхование1Дт > 0) или
			 (СтрокаМесяца.Страхование2Дт > 0) или
			 (СтрокаМесяца.Страхование3Дт > 0) или
			 (СтрокаМесяца.Страхование1Кт > 0) или
			 (СтрокаМесяца.Страхование2Кт > 0) или
			 (СтрокаМесяца.Страхование3Кт > 0) Тогда

			ОбластьСтрока.Параметры.ДатаФормированияЗаписи     = КонецМесяца(Дата(Год(КонецПериода), СтрокаМесяца.Месяц, 1));
			ОбластьСтрока.Параметры.СуммаРасходовНаОплатуТруда = СтрокаМесяца.ОплатаТруда;
			ОбластьСтрока.Параметры.CуммаПлатежаПоДолгосрочномуСтрахованиюВПределахУстановленныхНорм = СтрокаМесяца.Норма1;
			ОбластьСтрока.Параметры.ФактическаяСуммаПлатежаПоСтрахованиюНаОплатуМедицинскихРасходов  = СтрокаМесяца.Страхование2Дт;
			ОбластьСтрока.Параметры.ФактическаяCуммаПлатежаПоДолгосрочномуСтрахованию    = СтрокаМесяца.Страхование1Дт;
			ОбластьСтрока.Параметры.ФактическаяСуммаПлатежаПоСтрахованиюНаСлучайСмерти   = СтрокаМесяца.Страхование3Дт;
			ОбластьСтрока.Параметры.CуммаПлатежаПоДолгосрочномуСтрахованию               = СтрокаМесяца.Страхование1Кт;
			ОбластьСтрока.Параметры.СуммаПлатежаПоСтрахованиюНаОплатуМедицинскихРасходов = СтрокаМесяца.Страхование2Кт;
			ОбластьСтрока.Параметры.СуммаПлатежаПоСтрахованиюНаСлучайСмерти              = СтрокаМесяца.Страхование3Кт;
			ОбластьСтрока.Параметры.СуммаПлатежаПоСтрахованиюНаОплатуМедицинскихРасходовВПределахУстановленныхНорм = СтрокаМесяца.Норма2;
            ИтогоПоСтрахованию = СтрокаМесяца.Страхование1Кт + СтрокаМесяца.Страхование2Кт + СтрокаМесяца.Страхование3Кт;

			ДокументРезультат.Вывести(ОбластьСтрока);

		КонецЕсли

	КонецЦикла;

	СтруктураЛиц = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Организация, ДатаКон);

	ОбластьПодвал.Параметры.ИтогоПоСтрахованию =  ИтогоПоСтрахованию;

	ОбластьПодвал.Параметры.ОтветственныйЗаРегистры = СтруктураЛиц.ОтветственныйЗаРегистры;
	ДокументРезультат.Вывести(ОбластьПодвал);

КонецПроцедуры // СформироватьОтчет

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
// 

НП = Новый НастройкаПериода;

#КонецЕсли
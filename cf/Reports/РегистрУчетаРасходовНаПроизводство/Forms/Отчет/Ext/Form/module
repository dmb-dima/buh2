Перем ВысотаЗаголовка;
Перем ПоказыватьЗаголовок;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Процедура ВыводЗаголовка()

	// Перезаполнять заголовок можно только у "чистого" отчета
	//Если ЭлементыФормы.ДокументРезультат.ВысотаТаблицы = 0 Тогда
	//	ВнешняяОбработкаОбъект.СформироватьОтчет(ЭлементыФормы.ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка);
	//КонецЕсли;

	Если ЗначениеЗаполнено(ВысотаЗаголовка) Тогда
		ЭлементыФормы.ДокументРезультат.Область(1,,ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;
	КонецЕсли;

	УправлениеПометкамиКнопокКоманднойПанели();

КонецПроцедуры // ВыводЗаголовка()

Процедура УправлениеПометкамиКнопокКоманднойПанели()

	ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Заголовок.Пометка                = ПоказыватьЗаголовок;
	ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Подменю.Кнопки.Заголовок.Пометка = ПоказыватьЗаголовок;

КонецПроцедуры // УправлениеПометкамиКнопокКоманднойПанели()

Процедура ЗаполнитьСписокВидовРасходов()

		// Заполним список видов расходов если он пуст.
	Если ВидыРасходов.Количество() = 0 Тогда 

		Для Каждого Значение из Перечисления.ВидыРасходовНУ Цикл
			ВидыРасходов.Добавить(Значение);
		КонецЦикла;
	КонецЕсли;

	Если УправлениеОтчетами.ВСпискеНеУстановленыПометки(ВидыРасходов) Тогда
		ВидыРасходов.ЗаполнитьПометки(Истина);
	КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьСписокПараметров()

	Показатели.Очистить(); 
	
		СтрокаПоказателей = Показатели.Добавить();
		СтрокаПоказателей.Имя = "Период";
		СтрокаПоказателей.Представление = "Период";
		СтрокаПоказателей.Использование = Истина;
		
		СтрокаПоказателей = Показатели.Добавить();
		СтрокаПоказателей.Имя = "Подразделение";
		СтрокаПоказателей.Представление = "Подразделение";
	
	    СтрокаПоказателей = Показатели.Добавить();
		СтрокаПоказателей.Имя = "НоменклатурнаяГруппа";
		СтрокаПоказателей.Представление = "Номенклатурная группа";
		
	
		СтрокаПоказателей = Показатели.Добавить();
		СтрокаПоказателей.Имя = "СтатьяЗатрат";
		СтрокаПоказателей.Представление = "Статья затрат";
		
		СтрокаПоказателей = Показатели.Добавить();
		СтрокаПоказателей.Имя = "Счет";
		СтрокаПоказателей.Представление = "Счет";
		
		СтрокаПоказателей = Показатели.Добавить();
		СтрокаПоказателей.Имя = "КорСчет";
		СтрокаПоказателей.Представление = "КорСчет";
		

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

Процедура КнопкаНастройкаПериодаНажатие(Элемент)

	Если НП.Редактировать() Тогда

		ДатаНач = НП.ПолучитьДатуНачала();
		ДатаКон = НП.ПолучитьДатуОкончания();

	КонецЕсли;

КонецПроцедуры // КнопкаНастройкаПериодаНажатие()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ НАЖАТИЯ КНОПОК КОМАНДНОЙ ПАНЕЛИ

Процедура КоманднаяПанельФормыНастройка(Кнопка)

	ФормаНастройка = ПолучитьФорму("ФормаНастройка", ЭтаФорма);

	ФормаНастройка.ОткрытьМодально();

КонецПроцедуры // КоманднаяПанельФормыНастройка()

Процедура КоманднаяПанельФормыСформировать(Элемент)

	ВнешняяОбработкаОбъект.СформироватьОтчет(ЭлементыФормы.ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка);

	ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.ДокументРезультат;

КонецПроцедуры

Процедура КоманднаяПанельЗаголовок(Кнопка)

	ПоказыватьЗаголовок = Не ПоказыватьЗаголовок;
	ВыводЗаголовка();

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием()

	ПоказыватьЗаголовок = ИСТИНА;

КонецПроцедуры

// Процедура - обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии()

	ВыводЗаголовка();

	ЗаполнитьСписокВидовРасходов();
	ЗаполнитьСписокПараметров();

	//// Проверка ведения однофирменности
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Организация = глЗначениеПеременной("ОсновнаяОрганизация");
	КонецЕсли;

КонецПроцедуры

Процедура ДатаНачПриИзменении(Элемент)
		НП.УстановитьПериод(ДатаНач, ДатаКон);

КонецПроцедуры

Процедура ДатаКонПриИзменении(Элемент)
		НП.УстановитьПериод(ДатаНач, ДатаКон);

КонецПроцедуры



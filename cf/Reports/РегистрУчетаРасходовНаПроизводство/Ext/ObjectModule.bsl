#Если Клиент Тогда
	
//Объявление переменных
Перем НП Экспорт;

// Выполняет запрос и формирует табличный документ-результат отчета
// в соответствии с настройками, заданными значениями реквизитов отчета.
//
// Параметры:
//	ДокументРезультат - табличный документ, формируемый отчетом
//	ПоказыватьЗаголовок - признак видимости строк с заголовком отчета
//	ВысотаЗаголовка - параметр, через который возвращается высота заголовка в строках 
//
Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок = Ложь) Экспорт

	ДокументРезультат.Очистить();

	Макет = ПолучитьМакет("Отчет");

	ОбластьЗаголовок  = Макет.ПолучитьОбласть("Заголовок");
	
	СписокВидов = Новый СписокЗначений();
	Для каждого ЭлементСписка из ВидыРасходов Цикл
		Если ЭлементСписка.Пометка Тогда
			СписокВидов.Добавить(ЭлементСписка.Значение);
		КонецЕсли;
	КонецЦикла;
	
	СрезСведений = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(ДатаКон, Ложь, Организация);
	УчетнаяПолитика = ?(СрезСведений.Количество() = 0, Перечисления.СпособыОценки.ПустаяСсылка(), СрезСведений.СпособОценкиМПЗ);
	Заголовок = "Регистр учета расходов на производство";
	ОбластьЗаголовок.Параметры.НачалоПериода       = Формат(ДатаНач, "ДФ=dd.MM.yyyy");
	ОбластьЗаголовок.Параметры.КонецПериода        = Формат(ДатаКон, "ДФ=dd.MM.yyyy");
	СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация);
	НазваниеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм");
	ОбластьЗаголовок.Параметры.НазваниеОрганизации = НазваниеОрганизации;
	ОбластьЗаголовок.Параметры.ИННОрганизации      = "" + Организация.ИНН + " / " + Организация.КПП;
	ОбластьЗаголовок.Параметры.Заголовок = "Регистр учета " + ?( Строка(ВидОтчета) = "0", "прямых", "косвенных") + " расходов на производство";
	ДокументРезультат.Вывести(ОбластьЗаголовок);

	// Параметр для показа заголовка
	ВысотаЗаголовка = ДокументРезультат.ВысотаТаблицы;

	// Когда нужен только заголовок:
	Если ТолькоЗаголовок Тогда
		Возврат;
	КонецЕсли;

	// Проверим заполнение обязательных реквизитов
	Если НалоговыйУчет.ПроверитьЗаполнениеОбязательныхРеквизитов(ДатаНач,ДатаКон,Организация) Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВысотаЗаголовка) Тогда
		ДокументРезультат.Область("R1:R" + ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНач",             ДатаНач);
	Запрос.УстановитьПараметр("ДатаКон",             КонецДня(ДатаКон));
	Запрос.УстановитьПараметр("Организация",         Организация);
	Запрос.УстановитьПараметр("ПустаяСтатьяЗатрат",  Справочники.СтатьиЗатрат.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустоеПодразделение", Справочники.ПодразделенияОрганизаций.ПустаяСсылка());
	Запрос.МенеджерВременныхТаблиц = НалоговыйУчет.СписокПрямыхРасходовНУ(Организация, ДатаНач, ДатаКон);
	
	СчетаЗатрат1 = Новый Массив;
	СчетаЗатрат1.Добавить(ПланыСчетов.Хозрасчетный.ОсновноеПроизводство);
	СчетаЗатрат1.Добавить(ПланыСчетов.Хозрасчетный.ВспомогательныеПроизводства);
	Запрос.УстановитьПараметр("СчетаЗатрат1",  СчетаЗатрат1);
	
	СчетаЗатрат2 = Новый Массив;
	СчетаЗатрат2.Добавить(ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы);
	СчетаЗатрат2.Добавить(ПланыСчетов.Хозрасчетный.ОбщехозяйственныеРасходы);
	Запрос.УстановитьПараметр("СчетаЗатрат2",  СчетаЗатрат2);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасходыПроизводства.Подразделение.Наименование КАК Подразделение,
	|	РасходыПроизводства.СтатьяЗатрат.Наименование КАК СтатьяЗатрат,
	|	РасходыПроизводства.НоменклатурнаяГруппа.Наименование КАК НоменклатурнаяГруппа,
	|	РасходыПроизводства.Счет.Код КАК Счет,
	|	РасходыПроизводства.СчетКт.Код КАК КорСчет,
	|	РасходыПроизводства.СуммаДтНУ КАК СуммаДтНУ,
	|	РасходыПроизводства.СуммаДтПР КАК СуммаДтПР,
	|	РасходыПроизводства.СуммаДтВР КАК СуммаДтВР,
	|	РасходыПроизводства.Регистратор,
	|	РасходыПроизводства.Содержание,
	|	РасходыПроизводства.Период КАК Период
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОсновноеИВспомогательноеПроизводство.ПодразделениеДт КАК Подразделение,
	|		ОсновноеИВспомогательноеПроизводство.СчетДт КАК Счет,
	|		ОсновноеИВспомогательноеПроизводство.СчетКт КАК СчетКт,
	|		ОсновноеИВспомогательноеПроизводство.СубконтоДт2 КАК СтатьяЗатрат,
	|		ОсновноеИВспомогательноеПроизводство.СубконтоДт1 КАК НоменклатурнаяГруппа,
	|		ЕСТЬNULL(ОсновноеИВспомогательноеПроизводство.СуммаНУДт, 0) КАК СуммаДтНУ,
	|		ЕСТЬNULL(ОсновноеИВспомогательноеПроизводство.СуммаПРДт, 0) КАК СуммаДтПР,
	|		ЕСТЬNULL(ОсновноеИВспомогательноеПроизводство.СуммаВРДт, 0) КАК СуммаДтВР,
	|		ОсновноеИВспомогательноеПроизводство.Регистратор КАК Регистратор,
	|		ОсновноеИВспомогательноеПроизводство.Содержание КАК Содержание,
	|		ОсновноеИВспомогательноеПроизводство.Период КАК Период
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
	|				&ДатаНач,
	|				&ДатаКон,
	|				СчетДт В ИЕРАРХИИ (&СчетаЗатрат1)
	|					И Организация = &Организация
	|					И (НЕ СчетКт В ИЕРАРХИИ (&СчетаЗатрат2))
	|					И СубконтоДт2.ВидРасходовНУ В (&ВидыЗатрат)) КАК ОсновноеИВспомогательноеПроизводство
	|			ЛЕВОЕ СОЕДИНЕНИЕ СписокПрямыхРасходовНУ КАК Правила
	|			ПО (Правила.ВидЗатратНУ = ОсновноеИВспомогательноеПроизводство.СубконтоДт2.ВидРасходовНУ)
	|				И (ВЫБОР
	|					КОГДА Правила.Подразделение <> НЕОПРЕДЕЛЕНО
	|						ТОГДА Правила.Подразделение = ОсновноеИВспомогательноеПроизводство.ПодразделениеДт
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ)
	|				И (ВЫБОР
	|					КОГДА Правила.СчетЗатрат <> НЕОПРЕДЕЛЕНО
	|						ТОГДА Правила.СчетЗатрат = ОсновноеИВспомогательноеПроизводство.СчетДт
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ)
	|				И (ВЫБОР
	|					КОГДА Правила.КорСчетЗатрат <> НЕОПРЕДЕЛЕНО
	|						ТОГДА Правила.КорСчетЗатрат = ОсновноеИВспомогательноеПроизводство.СчетКт
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ)
	|				И (ВЫБОР
	|					КОГДА Правила.СтатьяЗатрат <> НЕОПРЕДЕЛЕНО
	|						ТОГДА Правила.СтатьяЗатрат = ОсновноеИВспомогательноеПроизводство.СубконтоДт2
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ)
	|	ГДЕ
	|		ЕСТЬNULL(Правила.ВидЗатратНУ, 0) = 0
	|		И ОсновноеИВспомогательноеПроизводство.Активность
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОПРиОХР.ПодразделениеДт,
	|		ОПРиОХР.СчетДт,
	|		ОПРиОХР.СчетКт,
	|		ОПРиОХР.СубконтоДт1,
	|		NULL,
	|		ЕСТЬNULL(ОПРиОХР.СуммаНУДт, 0),
	|		ЕСТЬNULL(ОПРиОХР.СуммаПРДт, 0),
	|		ЕСТЬNULL(ОПРиОХР.СуммаВРДт, 0),
	|		ОПРиОХР.Регистратор,
	|		ОПРиОХР.Содержание,
	|		ОПРиОХР.Период
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
	|				&ДатаНач,
	|				&ДатаКон,
	|				СчетДт В ИЕРАРХИИ (&СчетаЗатрат2)
	|					И Организация = &Организация
	|					И СубконтоДт1.ВидРасходовНУ В (&ВидыЗатрат)) КАК ОПРиОХР
	|			ЛЕВОЕ СОЕДИНЕНИЕ СписокПрямыхРасходовНУ КАК Правила
	|			ПО (Правила.ВидЗатратНУ = ОПРиОХР.СубконтоДт1.ВидРасходовНУ)
	|				И (ВЫБОР
	|					КОГДА Правила.Подразделение <> НЕОПРЕДЕЛЕНО
	|						ТОГДА Правила.Подразделение = ОПРиОХР.ПодразделениеДт
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ)
	|				И (ВЫБОР
	|					КОГДА Правила.СчетЗатрат <> НЕОПРЕДЕЛЕНО
	|						ТОГДА Правила.СчетЗатрат = ОПРиОХР.СчетДт
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ)
	|				И (ВЫБОР
	|					КОГДА Правила.КорСчетЗатрат <> НЕОПРЕДЕЛЕНО
	|						ТОГДА Правила.КорСчетЗатрат = ОПРиОХР.СчетКт
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ)
	|				И (ВЫБОР
	|					КОГДА Правила.СтатьяЗатрат <> НЕОПРЕДЕЛЕНО
	|						ТОГДА Правила.СтатьяЗатрат = ОПРиОХР.СубконтоДт1
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ)
	|	ГДЕ
	|		ЕСТЬNULL(Правила.ВидЗатратНУ, 0) = 0
	|		И ОПРиОХР.Активность) КАК РасходыПроизводства";
	
	Если Строка(ВидОтчета) = "0" Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ЕСТЬNULL(Правила.ВидЗатратНУ, 0) = 0", "Не ЕСТЬNULL(Правила.ВидЗатратНУ, 0) = 0" );
	КонецЕсли;
	
	СписокВидов = Новый СписокЗначений();
	Для каждого ЭлементСписка из ВидыРасходов Цикл
		Если ЭлементСписка.Пометка Тогда
			СписокВидов.Добавить(ЭлементСписка.Значение);
		КонецЕсли;
	КонецЦикла;
	
	Запрос.УстановитьПараметр("ВидыЗатрат",  СписокВидов);
	
	СтрокаГруппировки = "";
	ПерваяГруппировка = Истина;
	Для Каждого Группировка ИЗ Показатели Цикл
		Если Группировка.Использование Тогда
			Если ПерваяГруппировка Тогда
				СтрокаГруппировки = " УПОРЯДОЧИТЬ ПО " + Группировка.Имя;
				ПерваяГруппировка = Ложь;
			Иначе
				СтрокаГруппировки = СтрокаГруппировки + "," + Группировка.Имя;
				
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
	
	Запрос.Текст = Запрос.Текст + СтрокаГруппировки;

	Результат = Запрос.Выполнить().Выгрузить();

	ОбластьПодвал        = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы  = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьГруппа  = Макет.ПолучитьОбласть("Группа");
	ОбластьСтрока  = Макет.ПолучитьОбласть("Строка");
	
	ДокументРезультат.Вывести(ОбластьШапкаТаблицы);
	ТаблицаРезультатов = Новый ТаблицаЗначений();
    ТаблицаРезультатов.Колонки.Добавить("Наименование");
    ТаблицаРезультатов.Колонки.Добавить("Таблица");
		
	
	Для Каждого Выборка Из Результат Цикл
		
		ОбластьСтрока.Параметры.Подразделение  = Выборка.Подразделение;
		ОбластьСтрока.Параметры.НоменклатурнаяГруппа  = Выборка.НоменклатурнаяГруппа;
		ОбластьСтрока.Параметры.СчетДт         = Выборка.Счет;
		ОбластьСтрока.Параметры.СчетКт         = Выборка.КорСчет;
		ОбластьСтрока.Параметры.СтатьяЗатрат   = Выборка.СтатьяЗатрат;
		ОбластьСтрока.Параметры.Расшифровка    = Выборка.Регистратор;
		ОбластьСтрока.Параметры.Содержание     = Выборка.Содержание;
		ОбластьСтрока.Параметры.Сумма          = Выборка.СуммаДтНУ;
		ОбластьСтрока.Параметры.СуммаПР        = Выборка.СуммаДтПР;
		ОбластьСтрока.Параметры.СуммаВР        = Выборка.СуммаДтВР;
		ОбластьСтрока.Параметры.ДатаОперации   = Формат(Выборка.Регистратор.Дата, "ДФ=dd.MM.yy");
		ДокументРезультат.Вывести(ОбластьСтрока);
		
	КонецЦикла;	
	
	
	ОбластьПодвал        = Макет.ПолучитьОбласть("Подвал");
	
	ОбластьПодвал.Параметры.Сумма          = Результат.Итог("СуммаДтНУ");
	ОбластьПодвал.Параметры.СуммаПР        = Результат.Итог("СуммаДтПР");
	ОбластьПодвал.Параметры.СуммаВР        = Результат.Итог("СуммаДтВР");
	
	ДокументРезультат.ФиксацияСверху = ВысотаЗаголовка + 2;
	
	СтруктураЛиц = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Организация, ДатаКон);
	ОбластьПодвал.Параметры.ОтветственныйЗаРегистры = СтруктураЛиц.ОтветственныйЗаРегистры;
	ДокументРезультат.Вывести(ОбластьПодвал);

КонецПроцедуры // СформироватьОтчет

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
// 

НП           = Новый НастройкаПериода;

#КонецЕсли
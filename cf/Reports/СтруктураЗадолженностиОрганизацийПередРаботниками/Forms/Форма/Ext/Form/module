Перем ВысотаЗаголовка;
Перем ИдентификаторОкнаРасшифровки;
Перем СтруктураРеквизитов;
Перем НеЗаполнятьНастройкиПриОткрытии;
Перем СтруктураСвязиЭлементовСДанными;
Перем ОтборРазвернут;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Управляет пометками кнопок ком. панели
//
// Параметры:
//	Нет.
//
Процедура УправлениеПараметрамиОтображенияЭлементовФормы()
	
	Если ПоказыватьЗаголовок Тогда
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Заголовок.Пометка = Истина;
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Подменю.Кнопки.Заголовок.Пометка = Истина;

	Иначе
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Заголовок.Пометка = Ложь;
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Подменю.Кнопки.Заголовок.Пометка = Ложь;

	КонецЕсли;

	// Отображение заголовка отчета
	Если ЗначениеЗаполнено(ВысотаЗаголовка) Тогда
		ЭлементыФормы.ДокументРезультат.Область(1,,ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;
	КонецЕсли;

	Если ОтборРазвернут Тогда
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Отбор.Пометка = Истина;
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Подменю.Кнопки.Отбор.Пометка = Истина;
		ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Нет;
	Иначе
		ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Верх;
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Отбор.Пометка = Ложь;
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Подменю.Кнопки.Отбор.Пометка = Ложь;
	КонецЕсли;
	
КонецПроцедуры // УправлениеПараметрамиОтображенияЭлементовФормы()

// Обновляет таблицу отчета
//
// Параметры:
//	Нет.
//
Процедура ОбновитьОтчет() Экспорт
	
	НеЗаполнятьНастройкиПриОткрытии = Не Открыта();

	ЭтотОтчет.СформироватьОтчет(ЭлементыФормы.ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка);

	Если ЗначениеЗаполнено(ВысотаЗаголовка) Тогда
		ЭлементыФормы.ДокументРезультат.Область(1,,ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;
	КонецЕсли;

	ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.ДокументРезультат;

	УправлениеПараметрамиОтображенияЭлементовФормы();
	
КонецПроцедуры // ОбновитьОтчет()

//  Управляет выводом заголовка
//
// Параметры:
//	Нет.
//
Процедура ВыводЗаголовка()

	// Перезаполнять заголовок можно только у "чистого" отчета
	Если ЭлементыФормы.ДокументРезультат.ВысотаТаблицы = 0 Тогда

		ЭтотОтчет.СформироватьОтчет(ЭлементыФормы.ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, Истина);
		
	КонецЕсли;

	УправлениеПараметрамиОтображенияЭлементовФормы();
	
КонецПроцедуры // ВыводЗаголовка()

// Формирует текст заголовка
//
// Параметры:
//	Нет.
//
Процедура СформироватьЗаголовокФормы()

	Заголовок = УправлениеОтчетами.СформироватьЗаголовокОсновнойФормы(ДатаНач, ДатаКон, мНазваниеОтчета, Ложь);

КонецПроцедуры // СформироватьЗаголовокФормы()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик обновления данных формы
//
Процедура ОбновлениеОтображения()

	СформироватьЗаголовокФормы();
	
КонецПроцедуры // ОбновлениеОтображения()

// Процедура - обработчик события перед открытием формы
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ДатаНач = НачалоМесяца(ОбщегоНазначения.ПолучитьРабочуюДату());
	ДатаКон = КонецМесяца(ОбщегоНазначения.ПолучитьРабочуюДату());
	
	Если НЕ (НеЗаполнятьНастройкиПриОткрытии = Истина) Тогда

		ЭтотОтчет.ОбщийОтчет = ЭтотОбъект;

		ЭтотОтчет.ЗаполнитьНачальныеНастройки();

		ВысотаЗаголовка = 0;
		ВыводЗаголовка();

		СформироватьЗаголовокФормы();
		
		ИмяОтчета=ЭтотОтчет.Метаданные().Имя;
		ОтборРазвернут=?(ВосстановитьЗначение(ИмяОтчета + "_ОтборПомечен") = Истина, Истина, Ложь); // отбор в первый раз не показывать
		ПоказыватьЗаголовок = ?(ВосстановитьЗначение(ИмяОтчета + "_ЗаголовокПомечен") = Ложь, Ложь, Истина); // заголовок в первый раз наоборот, показывать
		
		ВыводЗаголовка();
		
	КонецЕсли;
	
	УправлениеОтчетами.УстановитьСвязьПолейБыстрогоОтбораНаФорме(ЭлементыФормы, ПостроительОтчета.Отбор, СтруктураСвязиЭлементовСДанными, "ОбщийОтчет.ПостроительОтчета.Отбор");
	
КонецПроцедуры // ПередОткрытием()     ЭтотОбъект

// Процедура - обработчик события при открытии формы
//
Процедура ПриОткрытии()
	
	// предопределяем значения
	Организация = глЗначениеПеременной("ОсновнаяОрганизация");
			
	НеЗаполнятьНастройкиПриОткрытии = Ложь;

	УправлениеПараметрамиОтображенияЭлементовФормы();
	
КонецПроцедуры

// Процедура - обработчик события при закрытии формы
//
Процедура ПриЗакрытии()
	
	ИмяОтчета = ЭтотОтчет.Метаданные().Имя;
	
	// Запомним параметры для данной формы
	СохранитьЗначение( ИмяОтчета+ "_ОтборПомечен", ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Отбор.Пометка);
	
	// Запомним параметры для данной формы
	СохранитьЗначение( ИмяОтчета+ "_ЗаголовокПомечен", ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Заголовок.Пометка);

КонецПроцедуры // ПриЗакрытии()

// Процедура - обработчик события перед сохранением значений формы
//
Процедура ПередСохранениемЗначений(Отказ)

	СохраненныеНастройки = ЭтотОтчет.СформироватьСтруктуруДляСохраненияНастроек(ПоказыватьЗаголовок);

КонецПроцедуры // ПередСохранениемЗначений()

// Процедура - обработчик события после восстановления значений формы
//
Процедура ПослеВосстановленияЗначений()

	// Если настройка восстанавливается, когда открывается форма сформированного отчета, игнорируем
	Если НеЗаполнятьНастройкиПриОткрытии Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(СохраненныеНастройки) = Тип("Структура") Тогда
		
		ЭтотОтчет.ВосстановитьНастройкиИзСтруктуры(СохраненныеНастройки, ПоказыватьЗаголовок);
		
		// Очистим результат - он более не соответствует настройке
		ЭлементыФормы.ДокументРезультат.Очистить();
		ВысотаЗаголовка=0;
		
		ВыводЗаголовка();
		
		СформироватьЗаголовокФормы();
		
	КонецЕсли;

КонецПроцедуры // ПослеВосстановленияЗначений()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ НАЖАТИЯ КНОПОК КОМАНДНОЙ ПАНЕЛИ

// Процедура - обработчик нажатия кнопки "Настройка".
//
Процедура КоманднаяПанельФормыНастройка(Кнопка)
	
	ФормаНастройка = ЭтотОтчет.ПолучитьФормуНастройки();
	ФормаНастройка.ВладелецФормы = ЭтаФорма;

	СтруктураСНастройками = ЭтотОтчет.СформироватьСтруктуруДляСохраненияНастроек(ПоказыватьЗаголовок);

	СтараяДатаКон = ДатаКон;
	СтараяДатаНач = ДатаНач;
	
	РезультатОткрытия = ФормаНастройка.ОткрытьМодально();

	Если РезультатОткрытия = Истина Тогда

		ОбновитьОтчет();

	Иначе
		
		// Форму закрыли эскейпом или по "Закрыть" - восстановим настройки, отчет формировать не будем!
		// Восстанавливаем сохраненные значения
		
		ЭтотОтчет.ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками, ПоказыватьЗаголовок);
		
		ДатаКон = СтараяДатаКон;
		ДатаНач = СтараяДатаНач;
		
	КонецЕсли;

КонецПроцедуры

// Процедура - обработчик нажатия кнопки "Отбор".
//
Процедура КоманднаяПанельФормыОтбор(Кнопка)

	ОтборРазвернут = НЕ ОтборРазвернут;

	УправлениеПараметрамиОтображенияЭлементовФормы();
	
КонецПроцедуры

// Процедура - обработчик нажатия кнопки "Обновить".
//
Процедура КоманднаяПанельФормыОбновить(Кнопка)

	ОбновитьОтчет();

КонецПроцедуры // ВыполнитьНажатие()

// Процедура - обработчик нажатия кнопки "Заголовок".
//
Процедура КоманднаяПанельФормыЗаголовок(Кнопка)
	
	ПоказыватьЗаголовок = Не ПоказыватьЗаголовок;
	
	ВыводЗаголовка();
	
КонецПроцедуры

// Процедура - обработчик нажатия кнопки "На принтер"
Процедура ДействияФормыНаПринтер(Кнопка)
	
	ЭлементыФормы.ДокументРезультат.Напечатать();

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Процедура - обработчик события нажати кнопки "выбор периода"
Процедура КнопкаНастройкаПериодаНажатие(Элемент)
	
	НП = Новый НастройкаПериода;
	НП.УстановитьПериод(ДатаНач, ?(ДатаКон='00010101', ДатаКон, КонецДня(ДатаКон)));
	НП.РедактироватьКакИнтервал = Истина;
	НП.РедактироватьКакПериод = Истина;
	НП.ВариантНастройки = ВариантНастройкиПериода.Период;
	ДатаНач = НП.ПолучитьДатуНачала();
	ДатаКон = НП.ПолучитьДатуОкончания();
	Если НП.Редактировать() Тогда
		
		ДатаНач = НП.ПолучитьДатуНачала();
		ДатаКон = НП.ПолучитьДатуОкончания();
		
	КонецЕсли;

КонецПроцедуры

// Процедура - обработчик изменения данных в поле значения отбора
//
Процедура ПолеНастройки1ПриИзменении(Элемент)

	УправлениеОтчетами.ПолеНастройкиПриИзменении(Элемент, ПостроительОтчета.Отбор);
	Если Найти(Элемент.Имя,"Организация") > 0 и ЭлементыФормы.Найти("ПолеНастройкиПодразделениеОрганизации") <> Неопределено Тогда
		Если ТипЗнч(Элемент.Значение) = Тип("СписокЗначений") Тогда
			ЭлементыФормы.ПолеНастройкиПодразделениеОрганизации.ВыборПоВладельцу = Справочники.Организации.ПустаяСсылка()
		Иначе
			ЭлементыФормы.ПолеНастройкиПодразделениеОрганизации.ВыборПоВладельцу = Элемент.Значение
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПолеНастройки1ПриИзменении()

// Процедура - обработчик изменения данных в поле выбора вида сравнения
//
Процедура ПолеВидаСравнения1ПриИзменении(Элемент)

	УправлениеОтчетами.ПолеВидаСравненияПриИзменении(Элемент, ЭлементыФормы);
	
КонецПроцедуры // ПолеВидаСравнения1ПриИзменении()

// Процедура - обработчик события "Обработка расшифровки" поля табличного документа ДокументРезультат
//
Процедура ДокументРезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	ЭтотОтчет.ОбработкаРасшифровки(Расшифровка, Элемент, ВысотаЗаголовка, СтандартнаяОбработка);

КонецПроцедуры // ДокументРезультатОбработкаРасшифровки()

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

// При инициализации формы необходимо заполнить реквизиты и поля основного реквизита формы 
ЗаполнитьПоляОсновногоРеквизита(ЭтотОтчет.ОбщийОтчет);

НеЗаполнятьНастройкиПриОткрытии = Ложь;
ОтборРазвернут = Ложь;
Перем СохраненнаяНастройка Экспорт;
Перем Расшифровки Экспорт;

Перем ПромежуточныеДанные Экспорт;

#Если Клиент Тогда

Процедура СформироватьОтчет(Результат = Неопределено, ДанныеРасшифровки = Неопределено, ВыводВФормуОтчета = Истина, ВнешниеНаборыДанных = Неопределено) Экспорт
	
	// Проверим заполнение обязательных реквизитов
	Если ПроверитьЗаполнениеОбязательныхРеквизитов() Тогда
		Возврат;
	КонецЕсли;
	
	Результат.Очистить();
	
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	ВыводЗаголовкаОтчета(ЭтотОбъект, Результат);
	ДоработатьКомпоновщикПередВыводом(ВнешниеНаборыДанных);
	КомпоновщикНастроек.Восстановить();
	НастройкаКомпоновкиДанных = КомпоновщикНастроек.ПолучитьНастройки();
	КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
	СтандартныеОтчеты.ВывестиОтчет(ЭтотОбъект, Результат, ДанныеРасшифровки, ВыводВФормуОтчета, ВнешниеНаборыДанных, Истина, НастройкаКомпоновкиДанных);
	
	// Выполним дополнительную обработку Результата отчета
	ОбработкаРезультатаОтчета(Результат);
	
КонецПроцедуры

// В процедуре можно доработать компоновщик перед выводом в отчет
// Изменения сохранены не будут
Процедура ДоработатьКомпоновщикПередВыводом(ВнешниеНаборыДанных) Экспорт
	
		
	ВнешниеНаборыДанных = Новый Структура;
	ВыборкаДанных = ПолучитьВыборку();
	ВнешниеНаборыДанных.Вставить("ТаблицаДанных", ВыборкаДанных);

	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "Периодичность", Интервал);
	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "НачалоПериода", НачалоДня(НачалоПериода));
	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "КонецПериода",  КонецДня(КонецПериода));
		
	ТипДополнения = СтандартныеОтчеты.ПолучитьТипДополненияПоИнтервалу(Интервал);
		
	Для каждого ЭлементСтруктуры Из КомпоновщикНастроек.Настройки.Структура Цикл
		Если ТипЗнч(ЭлементСтруктуры) = Тип("ДиаграммаКомпоновкиДанных") Тогда
			ЭлементГруппировок = ЭлементСтруктуры.Точки;
			Для каждого Группировка Из ЭлементГруппировок Цикл
				СтандартныеОтчеты.УстановитьДополнениеПоляГруппировки(Группировка, ТипДополнения);
			КонецЦикла; 
		КонецЕсли;	
	КонецЦикла;
	
	ПромежуточныеДанные = СтандартныеОтчеты.ПолучитьОписаниеТаблицыПромежуточныеДанные();
	
	Выборка = ВыборкаДанных.Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ПромежуточныеДанные.Добавить();
		Если Выборка.Знак <> Null Тогда
			НоваяСтрока.Знак              = Выборка.Знак;
			НоваяСтрока.Счет              = Выборка.Счет;
			НоваяСтрока.КорСчет           = Выборка.КорСчет;
			НоваяСтрока.Сумма             = Выборка.Сумма;
			НоваяСтрока.Период            = Выборка.Период;
			НоваяСтрока.СтрокаРасшифровки = "Оборот Дт " + Выборка.Счет + " """ + Выборка.Счет.Наименование + """ Кт " + Выборка.КорСчет + " """ + Выборка.КорСчет.Наименование + """";
			НоваяСтрока.Субконто1         = Выборка.Вид; 
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьВыборку() 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СчетаРасходов.Счет КАК Счет
	|ПОМЕСТИТЬ СчетаРасходов
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.СебестоимостьПродаж) КАК Счет
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Продажи_Акцизы)
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Продажи_ЭкспортныеПошлины)
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Продажи_РасходыНаПродажу)
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Продажи_УправленческиеРасходы)) КАК СчетаРасходов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	""+"" КАК Знак,
	|	Расходы.СуммаОборотДт КАК Сумма,
	|	Расходы.Период КАК Период,
	|	Расходы.Счет КАК Счет,
	|	""Доходы без НДС"" КАК Вид,
	|	Расходы.КорСчет,
	|	""Дт"" КАК БухВидРесурса
	|ПОМЕСТИТЬ Расходы
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Месяц,
	|			Счет В ИЕРАРХИИ
	|				(ВЫБРАТЬ
	|					СчетаРасходов.Счет
	|				ИЗ
	|					СчетаРасходов КАК СчетаРасходов),
	|			,
	|			Организация = &Организация,
	|			,
	|			) КАК Расходы
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	""+"" КАК Знак,
	|	Доходы.СуммаОборотКт КАК Сумма,
	|	Доходы.Период КАК Период,
	|	Доходы.Счет КАК Счет,
	|	Доходы.КорСчет,
	|	""Кт"" КАК БухВидРесурса
	|ПОМЕСТИТЬ Доходы
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачалоПериода, &КонецПериода, Месяц, Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Выручка)), , Организация = &Организация, , ) КАК Доходы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""-"",
	|	-НДС.СуммаОборотДт,
	|	НДС.Период,
	|	НДС.Счет,
	|	НДС.КорСчет,
	|	""Дт""
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачалоПериода, &КонецПериода, Месяц, Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Продажи_НДС)), , Организация = &Организация, , ) КАК НДС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Расходы.Знак,
	|	Расходы.Сумма,
	|	Расходы.Период,
	|	Расходы.Счет,
	|	""Расходы"" КАК Вид,
	|	Расходы.КорСчет,
	|	Расходы.БухВидРесурса
	|ИЗ
	|	Расходы КАК Расходы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Доходы.Знак,
	|	Доходы.Сумма,
	|	Доходы.Период,
	|	Доходы.Счет,
	|	""Доходы без НДС"",
	|	Доходы.КорСчет,
	|	Доходы.БухВидРесурса
	|ИЗ
	|	Доходы КАК Доходы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	NULL,
	|	ВложенныйЗапрос.Сумма,
	|	ВложенныйЗапрос.Период,
	|	ВложенныйЗапрос.Счет,
	|	ВложенныйЗапрос.Вид,
	|	NULL,
	|	NULL
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЕСТЬNULL(ДоходыСвернуто.Сумма, 0) - ЕСТЬNULL(РасходыСвернуто.Сумма, 0) КАК Сумма,
	|		ВЫБОР
	|			КОГДА ДоходыСвернуто.Период ЕСТЬ NULL 
	|				ТОГДА РасходыСвернуто.Период
	|			ИНАЧЕ ДоходыСвернуто.Период
	|		КОНЕЦ КАК Период,
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(ДоходыСвернуто.Сумма, 0) - ЕСТЬNULL(РасходыСвернуто.Сумма, 0) >= 0
	|				ТОГДА ""Прибыль""
	|			ИНАЧЕ ""Убыток""
	|		КОНЕЦ КАК Вид,
	|		NULL КАК Счет
	|	ИЗ
	|		(ВЫБРАТЬ
	|			СУММА(Доходы.Сумма) КАК Сумма,
	|			Доходы.Период КАК Период
	|		ИЗ
	|			Доходы КАК Доходы
	|		
	|		СГРУППИРОВАТЬ ПО
	|			Доходы.Период) КАК ДоходыСвернуто
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				СУММА(Расходы.Сумма) КАК Сумма,
	|				Расходы.Период КАК Период
	|			ИЗ
	|				Расходы КАК Расходы
	|			
	|			СГРУППИРОВАТЬ ПО
	|				Расходы.Период) КАК РасходыСвернуто
	|			ПО ДоходыСвернуто.Период = РасходыСвернуто.Период) КАК ВложенныйЗапрос";
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);	
	Запрос.УстановитьПараметр("КонецПериода" , КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("Организация"  , Организация);
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Организация = &Организация", "");
	КонецЕсли;
	Если Интервал = 6 Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Месяц", "День");
	ИначеЕсли Интервал = 7 Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Месяц", "Неделя");
	ИначеЕсли Интервал = 8 Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Месяц", "Декада");
	ИначеЕсли Интервал = 10 Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Месяц", "Квартал");
	ИначеЕсли Интервал = 11 Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Месяц", "Полугодие");
	ИначеЕсли Интервал = 12 Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Месяц", "Год");
	КонецЕсли;
	
	Возврат Запрос.Выполнить();
	
Конецфункции

Процедура ВыводЗаголовкаОтчета(ОтчетОбъект, Результат)
	
	МакетЗаголовок = ПолучитьОбщийМакет("ЗаголовокОтчета");
	ОбластьЗаголовок = МакетЗаголовок.ПолучитьОбласть("Заголовок");
	
	ОбластьЗаголовок.Параметры.ЗаголовокОтчета = ПолучитьТекстЗаголовка();

	Результат.Вывести(ОбластьЗаголовок);
			
КонецПроцедуры

Функция ПолучитьТекстЗаголовка(ОрганизацияВНачале = Истина) Экспорт 
	
	ЗаголовокОтчета = "Доходы и расходы (прибыль/убыток)";
	
    Возврат СтандартныеОтчеты.ПолучитьТекстЗаголовка(ЭтотОбъект, ЗаголовокОтчета, ОрганизацияВНачале);

КонецФункции

Процедура ОбработкаРезультатаОтчета(Результат)
	
	СтандартныеОтчеты.ОбработкаРезультатаОтчета(ЭтотОбъект, Результат);

	Для Каждого Рисунок Из Результат.Рисунки Цикл
		Для Каждого Серия Из Рисунок.Объект.Серии Цикл
			Если Серия.Текст = "Доходы без НДС"
				ИЛИ Серия.Текст = "Расходы" Тогда
				Серия.Индикатор = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;

КонецПроцедуры

Процедура УстановитьИнтервал() Экспорт
	
	СтандартныеОтчеты.УстановитьИнтервал(ЭтотОбъект);
	
КонецПроцедуры

Функция ПроверитьЗаполнениеОбязательныхРеквизитов()
	
	Отказ = Ложь;
	Если Не ЗначениеЗаполнено(НачалоПериода) ИЛИ Не ЗначениеЗаполнено(КонецПериода) Тогда
		Сообщить("Не указан период формирования отчета", СтатусСообщения.Важное);
		Отказ = Истина;
	ИначеЕсли НачалоПериода > КонецПериода Тогда
		Сообщить("Дата начала периода не может быть больше даты конца периода", СтатусСообщения.Важное);
		Отказ = Истина;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Интервал) Тогда
		Сообщить("Не указан интервал", СтатусСообщения.Важное); 
		Отказ = Истина;
	КонецЕсли;
	
	Возврат Отказ;
	
КонецФункции
	
// Для настройки отчета (расшифровка и др.)
Процедура Настроить(Отбор, КомпоновщикНастроекОсновногоОтчета = Неопределено) Экспорт
	
	ТиповыеОтчеты.НастроитьТиповойОтчет(ЭтотОбъект, Отбор, КомпоновщикНастроекОсновногоОтчета);
	
КонецПроцедуры

Процедура СохранитьНастройку() Экспорт
	
	СтандартныеОтчеты.СохранитьНастройку(ЭтотОбъект);
	
КонецПроцедуры

// Процедура заполняет параметры отчета по элементу справочника из переменной СохраненнаяНастройка.
Процедура ПрименитьНастройку() Экспорт
	
	Если СохраненнаяНастройка.Пустая() Тогда
		Возврат;
	КонецЕсли;
	 
	СтруктураПараметров = СохраненнаяНастройка.ХранилищеНастроек.Получить();
	ТиповыеОтчеты.ПрименитьСтруктуруПараметровОтчета(ЭтотОбъект, СтруктураПараметров);
	
КонецПроцедуры

Процедура ИнициализацияОтчета() Экспорт
	
	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "НачалоПериода", НачалоПериода);
	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "КонецПериода",  КонецПериода);
	
КонецПроцедуры

Расшифровки = Новый СписокЗначений;

НастройкаПериода = Новый НастройкаПериода;

#КонецЕсли